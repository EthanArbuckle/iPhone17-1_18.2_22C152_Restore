id isNSString(void *a1)
{
  id v1;
  id v2;
  uint64_t vars8;

  v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    v2 = v1;
  }
  else {
    v2 = 0;
  }

  return v2;
}

id dataMigrationCompleted(void *a1)
{
  id v1 = data_ark_copy(a1, 0, @"DataMigrationCompleted");
  id v2 = isNSNumber(v1);
  if (v2)
  {
    v3 = v2;
    id v4 = [v1 BOOLValue];
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

id isNSNumber(void *a1)
{
  id v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    id v2 = v1;
  }
  else {
    id v2 = 0;
  }

  return v2;
}

void __data_ark_copy_block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) store];

  if (v2)
  {
    v3 = *(void **)(a1 + 40);
    if (v3)
    {
      id v4 = _create_mapkey(*(void **)(a1 + 48), v3);
      id v5 = [*(id *)(a1 + 32) store];
      id v6 = [v5 objectForKeyedSubscript:v4];
      uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8);
      v8 = *(void **)(v7 + 40);
      *(void *)(v7 + 40) = v6;

      v9 = v5;
    }
    else
    {
      id v10 = [*(id *)(a1 + 32) store];
      v11 = *(void **)(a1 + 48);
      id v4 = (__CFString *)v10;
      id v12 = v11;
      uint64_t v21 = 0;
      v22 = &v21;
      uint64_t v23 = 0x3032000000;
      v24 = __Block_byref_object_copy__0;
      v25 = __Block_byref_object_dispose__0;
      id v26 = objc_alloc_init((Class)NSMutableDictionary);
      if (v4)
      {
        if (v12) {
          v13 = +[NSString stringWithFormat:@"%@-", v12];
        }
        else {
          v13 = @"-";
        }
        v18[0] = _NSConcreteStackBlock;
        v18[1] = 3254779904;
        v18[2] = ___copy_domain_block_invoke;
        v18[3] = &__block_descriptor_48_e8_32s40r_e15_v32__0_8_16_B24l;
        v14 = v13;
        id v19 = v14;
        v20 = &v21;
        [(__CFString *)v4 enumerateKeysAndObjectsUsingBlock:v18];
        if (![(id)v22[5] count])
        {
          v16 = (void *)v22[5];
          v22[5] = 0;
        }
        id v15 = (id)v22[5];
      }
      else
      {
        v14 = 0;
        id v15 = 0;
      }
      _Block_object_dispose(&v21, 8);

      uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8);
      v9 = *(void **)(v17 + 40);
      *(void *)(v17 + 40) = v15;
    }
  }
}

void sub_100004950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *_create_mapkey(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v3 && v4)
  {
    id v6 = +[NSString stringWithFormat:@"%@-%@", v3, v4];
LABEL_8:
    uint64_t v7 = v6;
    goto LABEL_9;
  }
  if (v3)
  {
    id v6 = +[NSString stringWithFormat:@"%@-", v3, v9];
    goto LABEL_8;
  }
  if (v4)
  {
    id v6 = +[NSString stringWithFormat:@"-%@", v4, v9];
    goto LABEL_8;
  }
  uint64_t v7 = @"-";
LABEL_9:

  return v7;
}

id data_ark_copy(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v16 = 0;
  uint64_t v17 = &v16;
  uint64_t v18 = 0x3032000000;
  id v19 = __Block_byref_object_copy__0;
  v20 = __Block_byref_object_dispose__0;
  id v21 = 0;
  if (v5)
  {
    v8 = [v5 queue];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3254779904;
    v11[2] = __data_ark_copy_block_invoke;
    v11[3] = &__block_descriptor_64_e8_32s40s48s56r_e5_v8__0l;
    id v12 = v5;
    id v13 = v7;
    id v14 = v6;
    id v15 = &v16;
    dispatch_sync(v8, v11);

    id v9 = (id)v17[5];
  }
  else
  {
    id v9 = 0;
  }
  _Block_object_dispose(&v16, 8);

  return v9;
}

void sub_100004BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id __copy_helper_block_e8_32s(uint64_t a1, uint64_t a2)
{
  return *(id *)(a2 + 32);
}

void __destroy_helper_block_e8_32s(uint64_t a1)
{
}

id copyLoggingHandle()
{
  if (copyLoggingHandle_onceToken != -1) {
    dispatch_once(&copyLoggingHandle_onceToken, &__block_literal_global_47);
  }
  v0 = copyLoggingHandle_logHandle;

  return v0;
}

id __copy_helper_block_e8_32s40s(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)(a2 + 32);
  id v4 = *(void **)(a2 + 40);

  return v4;
}

void __destroy_helper_block_e8_32s40s(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
}

void maLog(uint64_t a1, uint64_t a2, id a3, ...)
{
  va_start(va, a3);
  id v5 = a3;
  id v6 = (NSString *)[objc_alloc((Class)NSMutableString) initWithFormat:v5 arguments:va];

  if (a1 && gPersistentLogFunctionNameLoggingEnabled)
  {
    id v7 = +[NSString stringWithFormat:@"%s: %@", a1, v6];

    id v6 = v7;
  }
  id v8 = +[MALog getSharedInstance];
  [v8 logMessage:v6 toSyslog:a2];
}

NSError *createAndLogError(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, id a5, void *a6, ...)
{
  va_start(va, a6);
  id v11 = a5;
  id v12 = a6;
  id v13 = a3;
  id v14 = (NSString *)[objc_alloc((Class)NSMutableString) initWithFormat:v12 arguments:va];

  id v15 = createMobileActivationError(a1, a2, v13, a4, v11, @"%@", v14);
  if (a1 && gPersistentLogFunctionNameLoggingEnabled)
  {
    if (v11) {
      uint64_t v16 = +[NSString stringWithFormat:@"%s: %@ // %@", a1, v14, v11];
    }
    else {
      uint64_t v16 = +[NSString stringWithFormat:@"%s: %@", a1, v14, v20];
    }
    uint64_t v17 = v16;

    id v14 = v17;
  }
  id v18 = +[MALog getSharedInstance];
  [v18 logMessage:v14 toSyslog:0];

  return v15;
}

void deleteExpiredPersistentLogFiles()
{
  id v0 = +[MALog getSharedInstance];
  [v0 deleteExpiredLogFiles];
}

void __copyLoggingHandle_block_invoke(id a1)
{
  os_log_t v1 = os_log_create("com.apple.mobileactivationd", "daemon");
  id v2 = copyLoggingHandle_logHandle;
  copyLoggingHandle_logHandle = v1;
}

id copyRTCResetSerialQueue()
{
  if (copyRTCResetSerialQueue_onceToken != -1) {
    dispatch_once(&copyRTCResetSerialQueue_onceToken, &__block_literal_global_0);
  }
  id v0 = (void *)copyRTCResetSerialQueue_queue;

  return v0;
}

void __copyRTCResetSerialQueue_block_invoke(id a1)
{
  os_log_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v2 = dispatch_queue_create("com.apple.mobileactivationd.rtcreset", v1);
  id v3 = (void *)copyRTCResetSerialQueue_queue;
  copyRTCResetSerialQueue_queue = (uint64_t)v2;
}

id copyMobileActivationSerialQueue()
{
  if (copyMobileActivationSerialQueue_onceToken != -1) {
    dispatch_once(&copyMobileActivationSerialQueue_onceToken, &__block_literal_global_3);
  }
  id v0 = (void *)copyMobileActivationSerialQueue_queue;

  return v0;
}

void __copyMobileActivationSerialQueue_block_invoke(id a1)
{
  os_log_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v2 = dispatch_queue_create("com.apple.mobileactivationd", v1);
  id v3 = (void *)copyMobileActivationSerialQueue_queue;
  copyMobileActivationSerialQueue_queue = (uint64_t)v2;
}

uint64_t certificatePublicKeyMatchesSystemPublicKey(uint64_t a1, uint64_t a2, __SecCertificate *a3, NSError **a4)
{
  id v5 = a3;
  CFErrorRef error = 0;
  if (a3)
  {
    if (a2 == 2)
    {
      id v20 = 0;
      id v21 = 0;
      id v8 = security_copy_system_key(a1, (const __CFData **)&v21, &v20);
      id v9 = v21;
      id v10 = (NSError *)v20;
      if (!v8)
      {
        MobileActivationError = createMobileActivationError((uint64_t)"certificatePublicKeyMatchesSystemPublicKey", 204, @"com.apple.MobileActivation.ErrorDomain", -1, v10, @"Failed to copy UIK.");
        goto LABEL_17;
      }
      if (v9)
      {
LABEL_10:
        id v14 = SecCertificateCopyKey(v5);
        id v5 = v14;
        if (v14)
        {
          CFDataRef v11 = SecKeyCopyExternalRepresentation(v14, &error);
          if (v11)
          {
            if ([v9 isEqualToData:v11])
            {
              uint64_t v12 = 1;
              goto LABEL_24;
            }
            uint64_t v17 = createMobileActivationError((uint64_t)"certificatePublicKeyMatchesSystemPublicKey", 235, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Certificate public key does not match systemKey public key.");
          }
          else
          {
            uint64_t v17 = createMobileActivationError((uint64_t)"certificatePublicKeyMatchesSystemPublicKey", 228, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to encode certificate public key as data.");
          }
          uint64_t v16 = v17;

LABEL_22:
          id v10 = v16;
          if (a4) {
            goto LABEL_23;
          }
LABEL_7:
          uint64_t v12 = 0;
          goto LABEL_24;
        }
        uint64_t v16 = createMobileActivationError((uint64_t)"certificatePublicKeyMatchesSystemPublicKey", 222, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve certificate public key.");

LABEL_18:
        CFDataRef v11 = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = 0;
      id v8 = 0;
    }
    id v13 = v10;
    id v19 = v10;
    id v9 = libaks_system_key_get_public(a2, a1, (NSError **)&v19);
    id v10 = (NSError *)v19;

    if (v9) {
      goto LABEL_10;
    }
    MobileActivationError = createMobileActivationError((uint64_t)"certificatePublicKeyMatchesSystemPublicKey", 213, @"com.apple.MobileActivation.ErrorDomain", -1, v10, @"Failed to query systemKey (%d / %d) public key.", a2, a1);
LABEL_17:
    uint64_t v16 = MobileActivationError;

    id v5 = 0;
    goto LABEL_18;
  }
  id v10 = createMobileActivationError((uint64_t)"certificatePublicKeyMatchesSystemPublicKey", 196, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
  id v9 = 0;
  id v8 = 0;
  CFDataRef v11 = 0;
  if (!a4) {
    goto LABEL_7;
  }
LABEL_23:
  id v10 = v10;
  uint64_t v12 = 0;
  *a4 = v10;
LABEL_24:
  if (v8) {
    CFRelease(v8);
  }
  if (v5) {
    CFRelease(v5);
  }
  if (error) {
    CFRelease(error);
  }
  CFErrorRef error = 0;

  return v12;
}

void scheduleXPCActivity(void *a1, const char *a2, unsigned int a3, int a4, unsigned int a5, unsigned int a6, void *a7)
{
  id v13 = a1;
  id v14 = a7;
  xpc_object_t v15 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_BOOL(v15, XPC_ACTIVITY_REPEATING, 0);
  xpc_dictionary_set_int64(v15, XPC_ACTIVITY_DELAY, a3);
  xpc_dictionary_set_string(v15, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
  xpc_dictionary_set_BOOL(v15, XPC_ACTIVITY_ALLOW_BATTERY, 1);
  xpc_dictionary_set_BOOL(v15, XPC_ACTIVITY_POWER_NAP, 1);
  xpc_dictionary_set_int64(v15, XPC_ACTIVITY_GRACE_PERIOD, 30);
  xpc_dictionary_set_BOOL(v15, XPC_ACTIVITY_REQUIRES_CLASS_C, 0);
  if (a4)
  {
    xpc_dictionary_set_BOOL(v15, XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY, 1);
    xpc_dictionary_set_int64(v15, XPC_ACTIVITY_NETWORK_UPLOAD_SIZE, a5);
    xpc_dictionary_set_int64(v15, XPC_ACTIVITY_NETWORK_DOWNLOAD_SIZE, a6);
  }
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3254779904;
  handler[2] = __scheduleXPCActivity_block_invoke;
  handler[3] = &__block_descriptor_56_e8_32s40bs_e33_v16__0__NSObject_OS_xpc_object__8l;
  id v20 = v14;
  id v21 = a2;
  id v19 = v13;
  id v16 = v13;
  id v17 = v14;
  xpc_activity_register(a2, v15, handler);
}

void __scheduleXPCActivity_block_invoke(uint64_t a1, id a2)
{
  id v3 = (_xpc_activity_s *)a2;
  if (xpc_activity_get_state(v3) == 2 && xpc_activity_should_defer(v3))
  {
    if (xpc_activity_set_state(v3, 3)) {
      goto LABEL_9;
    }
    id v4 = copyLoggingHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      __scheduleXPCActivity_block_invoke_cold_1(a1, v4);
    }
  }
  if (xpc_activity_get_state(v3) == 2) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
LABEL_9:
}

void __copy_helper_block_e8_32s40b(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(const void **)(a2 + 40);

  _Block_object_assign((void *)(a1 + 40), v5, 7);
}

id copyDCRT(void *a1, __SecCertificate **a2, SecCertificateRef *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a4;
  if (platform_supports_activation())
  {
    id v11 = data_ark_copy(v9, 0, @"ActivationState");
    uint64_t v12 = (__CFString *)isNSString(v11);

    if (!v12) {
      uint64_t v12 = @"Unactivated";
    }
    if (([(__CFString *)v12 isEqualToString:@"Activated"] & 1) == 0)
    {
      id v13 = createMobileActivationError((uint64_t)"copyDCRT", 366, @"com.apple.MobileActivation.ErrorDomain", -8, 0, @"Device is not activated (%@).", v12);
      id v70 = 0;
      id v66 = 0;
      id v67 = 0;
      id v14 = 0;
      id v68 = 0;
      xpc_object_t v15 = 0;
LABEL_47:
      id v69 = 0;
      goto LABEL_52;
    }
  }
  else
  {
    uint64_t v12 = 0;
  }
  id v16 = [v10 objectForKeyedSubscript:@"CanonicalizeDcrtOIDs"];
  xpc_object_t v15 = v16;
  if (v16)
  {
    id v17 = isNSNumber(v16);

    if (!v17)
    {
      id v13 = createMobileActivationError((uint64_t)"copyDCRT", 373, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid option (%@).", @"CanonicalizeDcrtOIDs");
      id v70 = 0;
      id v66 = 0;
      id v67 = 0;
      id v14 = 0;
      id v68 = 0;
      goto LABEL_47;
    }
  }
  id v18 = [v10 objectForKeyedSubscript:@"ValidateCriticalDcrtOIDs"];
  id v19 = v18;
  id v69 = v18;
  if (v18)
  {
    id v20 = isNSNumber(v18);

    if (!v20)
    {
      id v13 = createMobileActivationError((uint64_t)"copyDCRT", 379, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid option (%@).", @"ValidateCriticalDcrtOIDs");
      id v70 = 0;
      id v66 = 0;
      id v67 = 0;
      id v14 = 0;
      id v68 = 0;
      goto LABEL_52;
    }
  }
  v64 = a2;
  id v21 = [v10 objectForKeyedSubscript:@"sdcrtAttestation"];
  v22 = v21;
  id v68 = v21;
  if (v21)
  {
    id v23 = isNSNumber(v21);

    if (!v23)
    {
      id v13 = createMobileActivationError((uint64_t)"copyDCRT", 385, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid option (%@).", @"sdcrtAttestation");
      id v70 = 0;
      id v66 = 0;
      id v67 = 0;
      id v14 = 0;
LABEL_52:
      obj = 0;
      v39 = 0;
      SecCertificateRef v41 = 0;
      id v43 = 0;
      if (!a5) {
        goto LABEL_64;
      }
      goto LABEL_62;
    }
  }
  v65 = v15;
  if (([v22 BOOLValue] & 1) != 0 || objc_msgSend(v15, "BOOLValue"))
  {
    v24 = copy_required_dcrt_oids();
LABEL_16:
    obj = v24;
    goto LABEL_17;
  }
  if ([v19 BOOLValue])
  {
    v24 = copy_critical_dcrt_oids();
    goto LABEL_16;
  }
  obj = 0;
LABEL_17:
  unsigned int v25 = [v22 BOOLValue];
  if (v25) {
    CFStringRef v26 = @"SDCRT";
  }
  else {
    CFStringRef v26 = @"DCRT";
  }
  CFStringRef v27 = @"SDAK";
  if (!v25) {
    CFStringRef v27 = @"DAK";
  }
  CFStringRef v59 = v27;
  if (v25) {
    int v28 = 10;
  }
  else {
    int v28 = 9;
  }
  unsigned int v61 = v28;
  id v29 = copy_dcrt_path();
  unsigned int v30 = [v22 BOOLValue];
  v31 = &SDCRT_FILENAME;
  if (!v30) {
    v31 = &DCRT_FILENAME;
  }
  id v32 = [v29 stringByAppendingPathComponent:*v31];

  if (!v32)
  {
    id v13 = createMobileActivationError((uint64_t)"copyDCRT", 413, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create %@ file path.", v26);
    id v70 = 0;
    id v67 = 0;
LABEL_59:
    id v66 = 0;
    id v14 = 0;
    v39 = 0;
LABEL_60:
    SecCertificateRef v41 = 0;
    id v43 = 0;
    goto LABEL_61;
  }
  CFStringRef v63 = v26;
  v58 = a3;
  v33 = +[NSFileManager defaultManager];
  unsigned __int8 v34 = [(NSFileManager *)v33 fileExistsAtPath:v32];

  id v67 = v32;
  if ((v34 & 1) == 0)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"copyDCRT", 418, @"com.apple.MobileActivation.ErrorDomain", -10, 0, @"%@ is unavailable.", v26);
LABEL_58:
    id v13 = MobileActivationError;
    id v70 = 0;
    goto LABEL_59;
  }
  id v35 = [objc_alloc((Class)NSData) initWithContentsOfFile:v32];
  if (!v35)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"copyDCRT", 424, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to encode %@.", v26);
    goto LABEL_58;
  }
  id v78 = 0;
  id v70 = v35;
  id v36 = parseDERCertificatesFromChain(v35, &v78);
  id v37 = v78;
  if (!v36)
  {
    id v13 = createMobileActivationError((uint64_t)"copyDCRT", 430, @"com.apple.MobileActivation.ErrorDomain", -1, v37, @"Failed to query certificate(s) from DER data.");

    goto LABEL_59;
  }
  CFDataRef v38 = (const __CFData *)[v36 objectAtIndexedSubscript:0];
  v39 = SecCertificateCreateWithData(kCFAllocatorDefault, v38);

  id v66 = v36;
  if (!v39)
  {
    id v13 = createMobileActivationError((uint64_t)"copyDCRT", 436, @"com.apple.MobileActivation.ErrorDomain", -1, v37, @"Failed to create certificate from pem data.");

    id v14 = 0;
    goto LABEL_60;
  }
  v57 = a5;
  CFDataRef v40 = (const __CFData *)[v36 objectAtIndexedSubscript:1];
  SecCertificateRef v41 = SecCertificateCreateWithData(kCFAllocatorDefault, v40);

  if (!v41)
  {
    id v13 = createMobileActivationError((uint64_t)"copyDCRT", 442, @"com.apple.MobileActivation.ErrorDomain", -1, v37, @"Failed to create certificate from pem data.");

    id v14 = 0;
    id v43 = 0;
    goto LABEL_75;
  }
  id v77 = v37;
  char v42 = certificatePublicKeyMatchesSystemPublicKey(2, v61, v39, (NSError **)&v77);
  id v13 = (NSError *)v77;

  if ((v42 & 1) == 0)
  {
    v55 = createMobileActivationError((uint64_t)"copyDCRT", 447, @"com.apple.MobileActivation.ErrorDomain", -10, v13, @"%@ does not match committed %@.", v63, v59);

    id v14 = 0;
    id v43 = 0;
LABEL_74:
    id v13 = v55;
    goto LABEL_75;
  }
  id v43 = objc_alloc_init((Class)NSMutableArray);
  if (!v43)
  {
    v55 = createMobileActivationError((uint64_t)"copyDCRT", 453, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate array.");

    id v14 = 0;
    goto LABEL_74;
  }
  v56 = v12;
  id v60 = v10;
  id v62 = v9;
  long long v75 = 0u;
  long long v76 = 0u;
  long long v73 = 0u;
  long long v74 = 0u;
  obj = obj;
  id v44 = [(NSArray *)obj countByEnumeratingWithState:&v73 objects:v79 count:16];
  if (v44)
  {
    id v45 = v44;
    uint64_t v46 = *(void *)v74;
    do
    {
      v47 = 0;
      v48 = v13;
      do
      {
        if (*(void *)v74 != v46) {
          objc_enumerationMutation(obj);
        }
        v49 = *(void **)(*((void *)&v73 + 1) + 8 * (void)v47);
        id v72 = v48;
        id v50 = lockcrypto_query_certificate_properties((uint64_t)v39, v49, &v72);
        id v13 = (NSError *)v72;

        if (!v50) {
          [v43 addObject:v49];
        }
        v47 = (char *)v47 + 1;
        v48 = v13;
      }
      while (v45 != v47);
      id v45 = [(NSArray *)obj countByEnumeratingWithState:&v73 objects:v79 count:16];
    }
    while (v45);
  }

  if ([v43 count])
  {
    v51 = createMobileActivationError((uint64_t)"copyDCRT", 464, @"com.apple.MobileActivation.ErrorDomain", -10, 0, @"Existing %@ is missing required OID(s) (%@).", v63, v43);

    id v14 = 0;
    id v13 = v51;
    id v10 = v60;
    id v9 = v62;
    uint64_t v12 = v56;
LABEL_75:
    a5 = v57;
LABEL_61:
    xpc_object_t v15 = v65;
    if (!a5) {
      goto LABEL_64;
    }
    goto LABEL_62;
  }
  id v10 = v60;
  id v9 = v62;
  uint64_t v12 = v56;
  xpc_object_t v15 = v65;
  if (v64)
  {
    *v64 = v39;
    v39 = 0;
  }
  a5 = v57;
  if (v58)
  {
    SecCertificateRef *v58 = v41;
    SecCertificateRef v41 = 0;
  }
  id v14 = v70;
  id v70 = v14;
  if (v57)
  {
LABEL_62:
    if (!v14) {
      *a5 = v13;
    }
  }
LABEL_64:
  if (v39) {
    CFRelease(v39);
  }
  if (v41) {
    CFRelease(v41);
  }
  id v53 = v14;

  return v53;
}

uint64_t storeDCRT(void *a1, void *a2, void *a3, void *a4)
{
  id v6 = a1;
  id v7 = a2;
  id v8 = a3;
  id v9 = v8;
  if (!v7)
  {
    id v17 = createMobileActivationError((uint64_t)"storeDCRT", 521, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    uint64_t v18 = 0;
    id v19 = 0;
    SecCertificateRef v13 = 0;
    id v20 = 0;
    id v92 = 0;
    id v93 = 0;
    id v89 = 0;
    id v90 = 0;
    id v91 = 0;
    id v87 = 0;
    v88 = 0;
    id v21 = 0;
    goto LABEL_8;
  }
  if (!v8)
  {
    id v90 = 0;
    v22 = 0;
    id v11 = 0;
    id v23 = 0;
    int v84 = 0;
    uint64_t v12 = a4;
    goto LABEL_17;
  }
  id v10 = [v8 objectForKeyedSubscript:@"UseCommittedDAK"];
  id v11 = v10;
  uint64_t v12 = a4;
  if (v10)
  {
    SecCertificateRef v13 = (SecCertificateRef)isNSNumber(v10);

    if (!v13)
    {
      id v92 = v11;
      id v17 = createMobileActivationError((uint64_t)"storeDCRT", 528, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid value for option (%@).", @"UseCommittedDAK");
      uint64_t v18 = 0;
      id v19 = 0;
      id v20 = 0;
      id v93 = 0;
      id v89 = 0;
      id v90 = 0;
LABEL_74:
      id v91 = 0;
      id v87 = 0;
      v88 = 0;
      goto LABEL_75;
    }
  }
  id v14 = [v9 objectForKeyedSubscript:@"ServerResponseDate"];
  id v15 = isNSDate(v14);

  BOOL v16 = v15 != 0;
  if (v15) {
    id v90 = [v9 objectForKeyedSubscript:@"ServerResponseDate"];
  }
  else {
    id v90 = 0;
  }
  id v24 = [v9 objectForKeyedSubscript:@"SkipCertificateValidation"];
  v22 = v24;
  if (v24)
  {
    SecCertificateRef v13 = (SecCertificateRef)isNSNumber(v24);

    if (!v13)
    {
      id v89 = v22;
      id v92 = v11;
      id v17 = createMobileActivationError((uint64_t)"storeDCRT", 539, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid value for option (%@).", @"SkipCertificateValidation");
      uint64_t v18 = 0;
      id v19 = 0;
      id v20 = 0;
      id v93 = 0;
      goto LABEL_74;
    }
  }
  id v25 = [v9 objectForKeyedSubscript:@"sdcrtAttestation"];
  id v23 = v25;
  if (v25)
  {
    SecCertificateRef v13 = (SecCertificateRef)isNSNumber(v25);

    if (!v13)
    {
      id v92 = v11;
      id v93 = v23;
      id v89 = v22;
      id v17 = createMobileActivationError((uint64_t)"storeDCRT", 545, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid option (%@).", @"sdcrtAttestation");
      uint64_t v18 = 0;
      id v19 = 0;
      goto LABEL_73;
    }
  }
  int v84 = v16;
LABEL_17:
  id v93 = v23;
  unsigned int v26 = [v23 BOOLValue];
  if (v26) {
    CFStringRef v27 = @"SDAK";
  }
  else {
    CFStringRef v27 = @"DAK";
  }
  if (v26) {
    CFStringRef v28 = @"SDCRT";
  }
  else {
    CFStringRef v28 = @"DCRT";
  }
  id v109 = 0;
  if (v26) {
    int v29 = 10;
  }
  else {
    int v29 = 9;
  }
  unsigned int v86 = v29;
  uint64_t v18 = (uint64_t)parseDERCertificatesFromChain(v7, &v109);
  id v21 = v109;
  id v92 = v11;
  id v89 = v22;
  if (!v18)
  {
    id v17 = createMobileActivationError((uint64_t)"storeDCRT", 558, @"com.apple.MobileActivation.ErrorDomain", -1, v21, @"Failed to decode certificates.");

    id v19 = 0;
    SecCertificateRef v13 = 0;
LABEL_73:
    id v20 = 0;
    goto LABEL_74;
  }
  id v91 = (id)v18;
  CFStringRef v82 = v27;
  CFStringRef v83 = v28;
  if ([v22 BOOLValue])
  {
    id v80 = v7;
    *(void *)v85 = v6;
    id v87 = 0;
    v88 = 0;
    id v20 = 0;
    SecCertificateRef v13 = 0;
    id v19 = 0;
    goto LABEL_29;
  }
  if (is_internal_build())
  {
    id v39 = objc_alloc((Class)NSUserDefaults);
    id v40 = [v39 persistentDomainForName:@"com.apple.mobileactivationd"];

    id v41 = [v40 objectForKeyedSubscript:@"UseQACertificates"];
    id v42 = isNSNumber(v41);

    v88 = v40;
    if (v42)
    {
      id v43 = [v40 objectForKeyedSubscript:@"UseQACertificates"];
      LODWORD(v42) = [v43 BOOLValue];
    }
  }
  else
  {
    v88 = 0;
    LODWORD(v42) = 0;
  }
  id v108 = v21;
  BOOL is_legacy = security_committed_uik_is_legacy(&v108);
  id v46 = v108;

  if (!is_legacy && v46)
  {
    id v17 = createMobileActivationError((uint64_t)"storeDCRT", 575, @"com.apple.MobileActivation.ErrorDomain", -1, v46, @"Failed to query legacy UIK support.");
    v47 = v46;
LABEL_87:

    uint64_t v18 = 0;
    id v19 = 0;
    SecCertificateRef v13 = 0;
    id v20 = 0;
    id v87 = 0;
    goto LABEL_75;
  }
  int v48 = platform_supports_activation() ^ 1 | is_legacy;
  unsigned int v49 = [v93 BOOLValue];
  if (v48) {
    unsigned int v50 = 2;
  }
  else {
    unsigned int v50 = 1;
  }
  if (v49) {
    uint64_t v51 = 5;
  }
  else {
    uint64_t v51 = v50;
  }
  id v107 = v46;
  id v52 = copyRootCertificate(v51, (int)v42, (NSError **)&v107);
  id v53 = v107;

  if (!v52)
  {
    id v17 = createMobileActivationError((uint64_t)"storeDCRT", 596, @"com.apple.MobileActivation.ErrorDomain", -1, v53, @"Failed to load BAA root CA certificate.");
    v47 = v53;
    goto LABEL_87;
  }
  id v106 = v53;
  id v20 = lockcrypto_cert_from_pem_data(v52, (NSError **)&v106);
  id v54 = v106;

  id v87 = v52;
  if (v20)
  {
    id v81 = v54;
    CFDataRef v55 = (const __CFData *)[v91 objectAtIndexedSubscript:0];
    SecCertificateRef v13 = SecCertificateCreateWithData(kCFAllocatorDefault, v55);

    if (v13)
    {
      CFDataRef v56 = (const __CFData *)[v91 objectAtIndexedSubscript:1];
      id v19 = SecCertificateCreateWithData(kCFAllocatorDefault, v56);

      if (v19)
      {
        if ([v92 BOOLValue]) {
          uint64_t v57 = 2;
        }
        else {
          uint64_t v57 = 3;
        }
        id v105 = v81;
        char v58 = certificatePublicKeyMatchesSystemPublicKey(v57, v86, v13, (NSError **)&v105);
        id v59 = v105;

        if (v58)
        {
          id v104 = v59;
          char v60 = evaluateBAATrustWithCerts(v13, v19, v20, v48, v84, v90, &v104);
          unsigned int v61 = (NSError *)v104;
          id v62 = v59;
          id v17 = v61;

          if ((v60 & 1) == 0)
          {
            v95 = createMobileActivationError((uint64_t)"storeDCRT", 628, @"com.apple.MobileActivation.ErrorDomain", -1, v17, @"Failed to verify %@.", v83);

            uint64_t v18 = 0;
            id v21 = 0;
            id v17 = v95;
            if (!v12) {
              goto LABEL_78;
            }
            goto LABEL_76;
          }
          id v80 = v7;
          *(void *)v85 = v6;
          long long v102 = 0u;
          long long v103 = 0u;
          long long v100 = 0u;
          long long v101 = 0u;
          obj = copy_required_dcrt_oids();
          id v63 = [(NSArray *)obj countByEnumeratingWithState:&v100 objects:v112 count:16];
          if (v63)
          {
            id v64 = v63;
            *(void *)v79 = *(void *)v101;
            while (2)
            {
              v65 = 0;
              id v66 = v17;
              do
              {
                if (*(void *)v101 != *(void *)v79) {
                  objc_enumerationMutation(obj);
                }
                id v67 = *(void **)(*((void *)&v100 + 1) + 8 * (void)v65);
                id v99 = v66;
                id v68 = lockcrypto_query_certificate_properties((uint64_t)v13, v67, &v99);
                id v17 = (NSError *)v99;

                if (!v68)
                {
                  id v77 = createMobileActivationError((uint64_t)"storeDCRT", 636, @"com.apple.MobileActivation.ErrorDomain", -1, v17, @"%@ is missing required OID: %@", v83, v67);

                  id v17 = v77;
                  goto LABEL_102;
                }
                v65 = (char *)v65 + 1;
                id v66 = v17;
              }
              while (v64 != v65);
              id v64 = [(NSArray *)obj countByEnumeratingWithState:&v100 objects:v112 count:16];
              if (v64) {
                continue;
              }
              break;
            }
          }
LABEL_102:

          id v21 = 0;
          if (v17)
          {
            uint64_t v18 = 0;
            goto LABEL_43;
          }
LABEL_29:
          unsigned int v30 = +[NSFileManager defaultManager];
          id v31 = copy_dcrt_path();
          NSFileAttributeKey v110 = NSFilePosixPermissions;
          v111 = &off_10027ED80;
          id v32 = +[NSDictionary dictionaryWithObjects:&v111 forKeys:&v110 count:1];
          id v98 = v21;
          unsigned __int8 v33 = [(NSFileManager *)v30 createDirectoryAtPath:v31 withIntermediateDirectories:1 attributes:v32 error:&v98];
          id v34 = v98;

          if (v33)
          {
            id v35 = copy_dcrt_path();
            unsigned int v36 = [v93 BOOLValue];
            id v37 = &SDCRT_FILENAME;
            if (!v36) {
              id v37 = &DCRT_FILENAME;
            }
            id v21 = [v35 stringByAppendingPathComponent:*v37];

            id v7 = v80;
            if (v21)
            {
              id v97 = v34;
              char v38 = store_data(v21, v80, &v97);
              id v17 = (NSError *)v97;

              id v6 = *(id *)v85;
              if (v38)
              {
                if ([v92 BOOLValue])
                {
                  uint64_t v18 = 1;
                }
                else
                {
                  id v96 = v17;
                  char v71 = libaks_system_key_operate(v86, 2, (NSError **)&v96);
                  id v72 = (NSError *)v96;

                  if (v71)
                  {
                    uint64_t v18 = 1;
                    id v17 = v72;
                  }
                  else
                  {
                    id v17 = createMobileActivationError((uint64_t)"storeDCRT", 670, @"com.apple.MobileActivation.ErrorDomain", -1, v72, @"Failed to commit %@.", v82);

                    uint64_t v18 = 0;
                  }
                }
                if (v17)
                {
                  long long v74 = +[NSFileManager defaultManager];
                  [(NSFileManager *)v74 removeItemAtPath:v21 error:0];
                }
              }
              else
              {
                id v70 = createMobileActivationError((uint64_t)"storeDCRT", 660, @"com.apple.MobileActivation.ErrorDomain", -1, v17, @"Failed to store %@ at %@.", v83, v21);

                uint64_t v18 = 0;
                id v17 = v70;
              }
            }
            else
            {
              id v17 = createMobileActivationError((uint64_t)"storeDCRT", 655, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create %@ file path.", v83);

              uint64_t v18 = 0;
              id v6 = *(id *)v85;
            }
LABEL_8:
            uint64_t v12 = a4;
            if (!a4) {
              goto LABEL_78;
            }
            goto LABEL_76;
          }
          id v44 = copy_dcrt_path();
          id v17 = createMobileActivationError((uint64_t)"storeDCRT", 649, @"com.apple.MobileActivation.ErrorDomain", -1, v34, @"Failed to create %@.", v44);

          uint64_t v18 = 0;
          id v21 = 0;
LABEL_43:
          id v6 = *(id *)v85;
          id v7 = v80;
          goto LABEL_8;
        }
        long long v75 = createMobileActivationError((uint64_t)"storeDCRT", 621, @"com.apple.MobileActivation.ErrorDomain", -1, v59, @"%@ public key does not match %@ public key.", v83, v82);
        id v76 = v59;
        id v17 = v75;
        long long v73 = v76;
      }
      else
      {
        id v17 = createMobileActivationError((uint64_t)"storeDCRT", 614, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create certificate.");
        long long v73 = v81;
      }

      uint64_t v18 = 0;
    }
    else
    {
      id v17 = createMobileActivationError((uint64_t)"storeDCRT", 608, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create certificate.");

      uint64_t v18 = 0;
      id v19 = 0;
    }
  }
  else
  {
    id v17 = createMobileActivationError((uint64_t)"storeDCRT", 602, @"com.apple.MobileActivation.ErrorDomain", -1, v54, @"Failed to create certificate from pem data.");

    uint64_t v18 = 0;
    id v19 = 0;
    SecCertificateRef v13 = 0;
  }
LABEL_75:
  id v21 = 0;
  if (!v12) {
    goto LABEL_78;
  }
LABEL_76:
  if ((v18 & 1) == 0) {
    *uint64_t v12 = v17;
  }
LABEL_78:
  if (v13) {
    CFRelease(v13);
  }
  if (v19) {
    CFRelease(v19);
  }
  if (v20) {
    CFRelease(v20);
  }

  return v18;
}

uint64_t deleteDCRT(uint64_t a1, void *a2, NSError **a3)
{
  id v4 = [a2 objectForKeyedSubscript:@"sdcrtAttestation"];
  id v5 = v4;
  if (v4 && (id v6 = isNSNumber(v4), v6, !v6))
  {
    id v15 = createMobileActivationError((uint64_t)"deleteDCRT", 704, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid option (%@).", @"sdcrtAttestation");
    id v10 = 0;
    if (a3) {
      goto LABEL_13;
    }
  }
  else
  {
    id v7 = copy_dcrt_path();
    unsigned int v8 = [v5 BOOLValue];
    id v9 = &SDCRT_FILENAME;
    if (!v8) {
      id v9 = &DCRT_FILENAME;
    }
    id v10 = [v7 stringByAppendingPathComponent:*v9];

    if (v10)
    {
      id v11 = +[NSFileManager defaultManager];
      unsigned int v12 = [(NSFileManager *)v11 fileExistsAtPath:v10];

      if (v12)
      {
        SecCertificateRef v13 = +[NSFileManager defaultManager];
        id v19 = 0;
        unsigned __int8 v14 = [(NSFileManager *)v13 removeItemAtPath:v10 error:&v19];
        id v15 = (NSError *)v19;

        if ((v14 & 1) == 0)
        {
          BOOL v16 = createMobileActivationError((uint64_t)"deleteDCRT", 716, @"com.apple.MobileActivation.ErrorDomain", -1, v15, @"Failed to delete %@.", v10);

          id v15 = v16;
          if (!a3) {
            goto LABEL_11;
          }
LABEL_13:
          id v15 = v15;
          uint64_t v17 = 0;
          *a3 = v15;
          goto LABEL_16;
        }
      }
      else
      {
        id v15 = 0;
      }
      uint64_t v17 = 1;
      goto LABEL_16;
    }
    id v15 = createMobileActivationError((uint64_t)"deleteDCRT", 710, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create DCRT file path.");
    if (a3) {
      goto LABEL_13;
    }
  }
LABEL_11:
  uint64_t v17 = 0;
LABEL_16:

  return v17;
}

uint64_t deleteUCRT(uint64_t a1, NSError **a2)
{
  id v3 = +[NSFileManager defaultManager];
  id v4 = copy_ucrt_path();
  unsigned int v5 = [(NSFileManager *)v3 fileExistsAtPath:v4];

  if (!v5)
  {
    id v9 = 0;
    goto LABEL_6;
  }
  id v6 = +[NSFileManager defaultManager];
  id v7 = copy_ucrt_path();
  id v14 = 0;
  unsigned __int8 v8 = [(NSFileManager *)v6 removeItemAtPath:v7 error:&v14];
  id v9 = (NSError *)v14;

  if (v8)
  {
LABEL_6:
    uint64_t v12 = 1;
    goto LABEL_7;
  }
  id v10 = copy_ucrt_path();
  id v11 = createMobileActivationError((uint64_t)"deleteUCRT", 740, @"com.apple.MobileActivation.ErrorDomain", -1, v9, @"Failed to delete %@.", v10);

  if (a2)
  {
    id v9 = v11;
    uint64_t v12 = 0;
    *a2 = v9;
  }
  else
  {
    uint64_t v12 = 0;
    id v9 = v11;
  }
LABEL_7:

  return v12;
}

uint64_t storeUCRT(void *a1, void *a2, void *a3, void *a4)
{
  id v44 = a1;
  id v6 = a2;
  id v7 = a3;
  unsigned __int8 v8 = v7;
  if (!v6)
  {
    uint64_t v12 = createMobileActivationError((uint64_t)"storeUCRT", 777, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    id v13 = 0;
    uint64_t v14 = 0;
    id v11 = 0;
    id v15 = 0;
    BOOL v16 = 0;
    id v17 = 0;
    id v10 = &__kCFBooleanFalse;
    goto LABEL_33;
  }
  if (v7)
  {
    id v9 = [v7 objectForKeyedSubscript:@"UseCommittedUIK"];
    id v10 = v9;
    if (v9)
    {
      id v11 = isNSNumber(v9);

      if (!v11)
      {
        uint64_t v12 = createMobileActivationError((uint64_t)"storeUCRT", 784, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid option (%@).", @"UseCommittedUIK");
        id v13 = 0;
        uint64_t v14 = 0;
        id v15 = 0;
        BOOL v16 = 0;
        id v17 = 0;
        goto LABEL_33;
      }
    }
  }
  else
  {
    id v10 = &__kCFBooleanFalse;
  }
  uint64_t v18 = copyLoggingHandle();
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    id v19 = formatURLResponse(v6, 200, 0);
    *(_DWORD *)buf = 138412290;
    CFDataRef v56 = v19;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Activation message:\n%@", buf, 0xCu);
  }
  id v13 = [v8 mutableCopy];
  [v13 setObject:&__kCFBooleanTrue forKeyedSubscript:@"UseEnhancedValidation"];
  [v13 setObject:&__kCFBooleanTrue forKeyedSubscript:@"UseEnhancedValidationWithVersionCheck"];
  id v52 = 0;
  id v17 = lockcrypto_decode_pems(v6, "CERTIFICATE", (NSError **)&v52);
  id v20 = v52;
  if (!v17)
  {
    uint64_t v12 = createMobileActivationError((uint64_t)"storeUCRT", 797, @"com.apple.MobileActivation.ErrorDomain", -1, v20, @"Failed to query certificate(s) from pem data.");

    uint64_t v14 = 0;
    id v11 = 0;
    id v15 = 0;
    BOOL v16 = 0;
    goto LABEL_33;
  }
  CFDataRef v21 = (const __CFData *)[v17 objectAtIndexedSubscript:0];
  BOOL v16 = SecCertificateCreateWithData(kCFAllocatorDefault, v21);

  if (!v16)
  {
    uint64_t v12 = createMobileActivationError((uint64_t)"storeUCRT", 803, @"com.apple.MobileActivation.ErrorDomain", -1, v20, @"Failed to create certificate from pem data.");
    id v37 = v20;
LABEL_32:

    uint64_t v14 = 0;
    id v11 = 0;
    id v15 = 0;
    goto LABEL_33;
  }
  if ([v10 BOOLValue]) {
    uint64_t v22 = 2;
  }
  else {
    uint64_t v22 = 3;
  }
  id v51 = v20;
  char v23 = certificatePublicKeyMatchesSystemPublicKey(v22, 2, v16, (NSError **)&v51);
  id v24 = v51;

  if ((v23 & 1) == 0)
  {
    uint64_t v12 = createMobileActivationError((uint64_t)"storeUCRT", 808, @"com.apple.MobileActivation.ErrorDomain", -1, v24, @"UCRT public key does not match UIK public key.");
    id v37 = v24;
    goto LABEL_32;
  }
  id v50 = v24;
  char v25 = verify_ucrt(v6, v13, &v50);
  id v26 = v50;

  if ((v25 & 1) == 0)
  {
    uint64_t v12 = createMobileActivationError((uint64_t)"storeUCRT", 813, @"com.apple.MobileActivation.ErrorDomain", -1, v26, @"Failed to verify UCRT.");
LABEL_31:
    id v37 = v26;
    goto LABEL_32;
  }
  CFStringRef v27 = +[NSFileManager defaultManager];
  id v28 = copy_ucrt_path();
  NSFileAttributeKey v53 = NSFilePosixPermissions;
  id v54 = &off_10027ED80;
  int v29 = +[NSDictionary dictionaryWithObjects:&v54 forKeys:&v53 count:1];
  id v49 = v26;
  unsigned __int8 v40 = [(NSFileManager *)v27 createDirectoryAtPath:v28 withIntermediateDirectories:1 attributes:v29 error:&v49];
  id v41 = v49;

  if ((v40 & 1) == 0)
  {
    id v26 = copy_ucrt_path();
    uint64_t v12 = createMobileActivationError((uint64_t)"storeUCRT", 870, @"com.apple.MobileActivation.ErrorDomain", -1, v41, @"Failed to create %@.", v26);

    goto LABEL_31;
  }
  id v30 = v41;
  id v31 = copy_ucrt_path();
  id v15 = [v31 stringByAppendingPathComponent:@"ucrt.pem"];

  if (!v15)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"storeUCRT", 876, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create UCRT file path.");
LABEL_41:
    uint64_t v12 = MobileActivationError;

    uint64_t v14 = 0;
    id v11 = 0;
    goto LABEL_33;
  }
  id v48 = v41;
  char v32 = store_data(v15, v6, &v48);
  id v30 = v48;

  if ((v32 & 1) == 0)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"storeUCRT", 881, @"com.apple.MobileActivation.ErrorDomain", -1, v30, @"Failed to store UCRT at %@.", v15);
    goto LABEL_41;
  }
  if (([v10 BOOLValue] & 1) == 0)
  {
    id v47 = v30;
    char v33 = libaks_system_key_operate(2, 2, (NSError **)&v47);
    id v34 = v47;

    if ((v33 & 1) == 0)
    {
      uint64_t v12 = createMobileActivationError((uint64_t)"storeUCRT", 889, @"com.apple.MobileActivation.ErrorDomain", -1, v34, @"Failed to commit UIK.");

      id v11 = 0;
      uint64_t v14 = 0;
      goto LABEL_46;
    }
    id v30 = v34;
  }
  id v46 = v30;
  char v35 = security_delete_legacy_uik(&v46);
  uint64_t v12 = (NSError *)v46;

  if (v35)
  {
    id v36 = +[GestaltHlpr getSharedInstance];
    id v11 = [v36 copyAnswer:@"BuildVersion"];

    uint64_t v14 = (uint64_t)isNSString(v11);
    if (v14)
    {
      uint64_t v14 = 1;
      data_ark_set(v44, 0, @"LastActivated", v11, 1);
      data_ark_set(v44, 0, @"ActivationState", @"Activated", 1);
      goto LABEL_46;
    }
    id v42 = createMobileActivationError((uint64_t)"storeUCRT", 903, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve build version.");
  }
  else
  {
    id v42 = createMobileActivationError((uint64_t)"storeUCRT", 896, @"com.apple.MobileActivation.ErrorDomain", -1, v12, @"Failed to delete legacy UIK.");

    id v11 = 0;
    uint64_t v14 = 0;
  }
  uint64_t v12 = v42;
LABEL_46:
  if (v12)
  {
    id v43 = +[NSFileManager defaultManager];
    [(NSFileManager *)v43 removeItemAtPath:v15 error:0];
  }
LABEL_33:
  if (a4 && (v14 & 1) == 0) {
    *a4 = v12;
  }
  if (v16) {
    CFRelease(v16);
  }

  return v14;
}

uint64_t verify_ucrt(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  id v91 = a3;
  if (v6)
  {
    id v8 = [v6 objectForKeyedSubscript:@"UseEnhancedValidation"];
    id v9 = isNSNumber(v8);

    if (v9)
    {
      id v10 = [v7 objectForKeyedSubscript:@"UseEnhancedValidation"];
      unsigned int v11 = [v10 BOOLValue];
    }
    else
    {
      unsigned int v11 = 0;
    }
    id v13 = [v7 objectForKeyedSubscript:@"UseEnhancedValidationWithVersionCheck"];
    id v14 = isNSNumber(v13);

    if (v14)
    {
      id v15 = [v7 objectForKeyedSubscript:@"UseEnhancedValidationWithVersionCheck"];
      unsigned int v12 = [v15 BOOLValue];
    }
    else
    {
      unsigned int v12 = 0;
    }
    id v16 = [v7 objectForKeyedSubscript:@"ServerResponseDate"];
    id v17 = isNSDate(v16);

    if (v17)
    {
      id v109 = [v7 objectForKeyedSubscript:@"ServerResponseDate"];
      int v18 = 1;
      goto LABEL_13;
    }
    id v109 = 0;
  }
  else
  {
    id v109 = 0;
    unsigned int v11 = 0;
    unsigned int v12 = 0;
  }
  int v18 = 0;
LABEL_13:
  if (is_internal_build())
  {
    id v19 = objc_alloc((Class)NSUserDefaults);
    id v20 = [v19 persistentDomainForName:@"com.apple.mobileactivationd"];

    id v21 = [v20 objectForKeyedSubscript:@"UseQACertificates"];
    id v22 = isNSNumber(v21);

    if (v22)
    {
      id v23 = [v20 objectForKeyedSubscript:@"UseQACertificates"];
      LODWORD(v22) = [v23 BOOLValue];
    }
  }
  else
  {
    id v20 = 0;
    LODWORD(v22) = 0;
  }
  v120 = 0;
  id v24 = lockcrypto_decode_pems(v5, "CERTIFICATE", &v120);
  char v25 = v120;
  id v100 = v20;
  id v101 = v5;
  id v99 = v24;
  if (!v24)
  {
    id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3158, @"com.apple.MobileActivation.ErrorDomain", -1, v25, @"Failed to query certificate(s) from pem data.");
    SecCertificateRef v98 = 0;
    NSFileAttributeKey v110 = 0;
    v111 = 0;
    SecCertificateRef cf = 0;
LABEL_23:
    id v96 = 0;
    id v97 = 0;
    id v92 = 0;
    id v93 = 0;
    id v102 = 0;
    id v104 = 0;
    id v31 = 0;
    id v32 = 0;
    id v95 = 0;
    id v107 = 0;
    id v108 = 0;
    id v105 = 0;
    id v106 = 0;
LABEL_24:
    id v33 = 0;
    SecCertificateRef v27 = 0;
    goto LABEL_59;
  }
  unsigned int v103 = v11;
  unsigned int v89 = v12;
  CFDataRef v26 = (const __CFData *)[v24 objectAtIndexedSubscript:0];
  SecCertificateRef v27 = SecCertificateCreateWithData(kCFAllocatorDefault, v26);

  v111 = v27;
  if (!v27)
  {
    id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3164, @"com.apple.MobileActivation.ErrorDomain", -1, v25, @"Failed to create certificate from pem data.");
    SecCertificateRef v98 = 0;
    v111 = 0;
    goto LABEL_54;
  }
  if ((unint64_t)[v24 count] >= 2)
  {
    CFDataRef v28 = (const __CFData *)[v24 objectAtIndexedSubscript:1];
    SecCertificateRef v27 = SecCertificateCreateWithData(kCFAllocatorDefault, v28);

    NSFileAttributeKey v110 = v27;
    if (v27)
    {
      int v29 = 0;
      goto LABEL_29;
    }
    id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3175, @"com.apple.MobileActivation.ErrorDomain", -1, v25, @"Failed to create intermediate certificate from pem data.");
    SecCertificateRef v98 = 0;
LABEL_54:
    NSFileAttributeKey v110 = 0;
LABEL_55:
    id v93 = 0;
    SecCertificateRef cf = 0;
    id v96 = 0;
    id v97 = 0;
    id v92 = 0;
    id v102 = 0;
    id v104 = 0;
    id v24 = 0;
    id v31 = 0;
    id v32 = 0;
    id v95 = 0;
    id v107 = 0;
    id v108 = 0;
    id v105 = 0;
    id v106 = 0;
    id v33 = 0;
    goto LABEL_59;
  }
  v119 = v25;
  id v24 = copyRootCertificate(9, (int)v22, &v119);
  id v34 = v119;

  if (!v24)
  {
    id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3185, @"com.apple.MobileActivation.ErrorDomain", -1, v34, @"Failed to load UCRT intermediate CA certificate.");
    id v97 = 0;
    SecCertificateRef v98 = 0;
    NSFileAttributeKey v110 = 0;
    id v93 = 0;
    SecCertificateRef cf = 0;
    id v96 = 0;
    id v92 = 0;
    id v102 = 0;
    id v104 = 0;
LABEL_35:
    id v31 = 0;
    id v32 = 0;
    id v95 = 0;
    id v107 = 0;
    id v108 = 0;
    id v105 = 0;
    id v106 = 0;
    id v33 = 0;
    SecCertificateRef v27 = 0;
    char v25 = v34;
    goto LABEL_59;
  }
  v118 = v34;
  SecCertificateRef v27 = lockcrypto_cert_from_pem_data(v24, &v118);
  char v25 = v118;

  NSFileAttributeKey v110 = v27;
  if (!v27)
  {
    SecCertificateRef v98 = (SecCertificateRef)v24;
    id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3191, @"com.apple.MobileActivation.ErrorDomain", -1, v25, @"Failed to create certificate from pem data.");
    goto LABEL_54;
  }
  int v29 = (__SecCertificate *)v24;
LABEL_29:
  char v35 = v25;
  v117 = v25;
  id v36 = lockcrypto_extract_public_key_size(v111, &v117);
  char v25 = v117;

  if (!v36)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"verify_ucrt", 3200, @"com.apple.MobileActivation.ErrorDomain", -1, v25, @"Failed to query UCRT public key size.");
LABEL_58:
    id v30 = MobileActivationError;
    id v93 = 0;
    SecCertificateRef cf = 0;
    id v96 = 0;
    id v97 = 0;
    id v92 = 0;
    id v102 = 0;
    id v104 = 0;
    id v24 = 0;
    id v31 = 0;
    id v32 = 0;
    id v95 = 0;
    id v107 = 0;
    id v108 = 0;
    id v105 = 0;
    id v106 = 0;
    id v33 = 0;
    SecCertificateRef v27 = 0;
    SecCertificateRef v98 = v29;
    goto LABEL_59;
  }
  if (v36 == P256_PUBKEY_BYTES_LEN)
  {
    uint64_t v37 = 7;
    goto LABEL_38;
  }
  if (v36 != P384_PUBKEY_BYTES_LEN)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"verify_ucrt", 3209, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid key size: %d", v36);
    goto LABEL_58;
  }
  uint64_t v37 = 8;
LABEL_38:
  v116 = v25;
  SecCertificateRef v27 = (SecCertificateRef)copyRootCertificate(v37, (int)v22, &v116);
  id v39 = v116;

  if (!v27)
  {
    id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3215, @"com.apple.MobileActivation.ErrorDomain", -1, v39, @"Failed to load UCRT root CA certificate.");
    id v97 = 0;
    SecCertificateRef v98 = 0;
    id v93 = 0;
    SecCertificateRef cf = 0;
    id v95 = 0;
    id v96 = 0;
    id v92 = 0;
    id v102 = 0;
    id v104 = 0;
    id v24 = 0;
    id v31 = 0;
    id v32 = 0;
    id v107 = 0;
    id v108 = 0;
    id v105 = 0;
    id v106 = 0;
    id v33 = 0;
    char v25 = v39;
    goto LABEL_59;
  }
  v115 = v39;
  SecCertificateRef v98 = v27;
  SecCertificateRef v27 = lockcrypto_cert_from_pem_data(v27, &v115);
  char v25 = v115;

  if (!v27)
  {
    id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3221, @"com.apple.MobileActivation.ErrorDomain", -1, v25, @"Failed to create certificate from pem data.");
    goto LABEL_55;
  }
  v114 = v25;
  SecCertificateRef cf = v27;
  char v40 = evaluateUCRTTrustWithCerts(v111, v110, v27, v18, v109, &v114);
  id v34 = v114;

  if ((v40 & 1) == 0)
  {
    id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3228, @"com.apple.MobileActivation.ErrorDomain", -1, v34, @"Failed to verify UCRT.");
    id v96 = 0;
    id v97 = 0;
    id v92 = 0;
    id v93 = 0;
    id v102 = 0;
    id v104 = 0;
    id v24 = 0;
    goto LABEL_35;
  }
  v113 = v34;
  id v24 = lockcrypto_query_certificate_properties((uint64_t)v111, @"1.2.840.113635.100.10.1", &v113);
  char v25 = v113;

  if (!v24)
  {
    id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3240, @"com.apple.MobileActivation.ErrorDomain", -1, v25, @"Failed to query UCRT device identifiers.");
    goto LABEL_23;
  }
  id v41 = [v24 objectForKeyedSubscript:@"srnm"];
  id v108 = [v24 objectForKeyedSubscript:@"udid"];
  id v107 = [v24 objectForKeyedSubscript:@"meid"];
  id v106 = [v24 objectForKeyedSubscript:@"imei"];
  id v105 = [v24 objectForKeyedSubscript:@"ime2"];
  id v42 = +[GestaltHlpr getSharedInstance];
  id v43 = [v42 copyAnswer:@"SerialNumber"];

  id v44 = isNSString(v41);
  id v96 = v43;
  id v97 = v24;
  id v95 = v41;
  if (!v44) {
    goto LABEL_72;
  }
  id v45 = v44;
  id v46 = isNSString(v43);
  if (!v46)
  {

    goto LABEL_72;
  }
  id v47 = v46;
  unsigned __int8 v48 = [v43 isEqualToString:v41];

  if ((v48 & 1) == 0)
  {
LABEL_72:
    id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3252, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid Serial.");
    id v93 = 0;
LABEL_73:
    id v92 = 0;
    goto LABEL_74;
  }
  id v49 = +[GestaltHlpr getSharedInstance];
  id v50 = [v49 copyAnswer:@"UniqueDeviceID"];

  id v51 = isNSString(v108);
  id v93 = v50;
  if (!v51) {
    goto LABEL_79;
  }
  id v52 = v51;
  id v53 = isNSString(v50);
  if (!v53)
  {

    goto LABEL_79;
  }
  id v54 = v50;
  CFDataRef v55 = v53;
  unsigned __int8 v56 = [v54 isEqualToString:v108];

  if ((v56 & 1) == 0)
  {
LABEL_79:
    id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3258, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid UDID.");
    goto LABEL_73;
  }
  if ((v103 | v89) != 1)
  {
    id v92 = 0;
    id v102 = 0;
    id v104 = 0;
LABEL_81:
    id v24 = 0;
    id v31 = 0;
    id v32 = 0;
    id v33 = 0;
    SecCertificateRef v27 = 0;
    uint64_t v63 = 1;
    id v30 = v25;
    goto LABEL_82;
  }
  id v57 = isNSString(v107);

  if (v57)
  {
    id v58 = +[GestaltHlpr getSharedInstance];
    id v59 = [v58 copyAnswer:@"MobileEquipmentIdentifier"];

    id v60 = isNSString(v59);
    if (!v60
      || (unsigned int v61 = v60,
          unsigned __int8 v62 = [v59 isEqualToString:v107],
          v61,
          (v62 & 1) == 0))
    {
      id v92 = v59;
      id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3266, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid MEID.");
LABEL_74:
      id v104 = 0;
LABEL_75:
      id v102 = 0;
LABEL_76:
      id v24 = 0;
LABEL_77:
      id v31 = 0;
      id v32 = 0;
      goto LABEL_24;
    }
  }
  else
  {
    id v59 = 0;
  }
  id v68 = isNSString(v106);

  id v92 = v59;
  if (v68)
  {
    id v69 = +[GestaltHlpr getSharedInstance];
    id v70 = [v69 copyAnswer:@"InternationalMobileEquipmentIdentity"];

    id v104 = v70;
    id v71 = isNSString(v70);
    if (!v71
      || (id v72 = v71,
          unsigned __int8 v73 = [v70 isEqualToString:v106],
          v72,
          (v73 & 1) == 0))
    {
      id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3274, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid IMEI.");
      goto LABEL_75;
    }
  }
  else
  {
    id v104 = 0;
  }
  id v74 = isNSString(v105);

  if (v74)
  {
    id v75 = +[GestaltHlpr getSharedInstance];
    id v76 = [v75 copyAnswer:@"xRyzf9zFE/ycr/wJPweZvQ"];

    id v102 = v76;
    id v77 = isNSString(v76);
    if (!v77
      || (id v78 = v77,
          unsigned __int8 v79 = [v76 isEqualToString:v105],
          v78,
          (v79 & 1) == 0))
    {
      id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3282, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid IMEI2.");
      goto LABEL_76;
    }
  }
  else
  {
    id v102 = 0;
  }
  if (!v89) {
    goto LABEL_81;
  }
  v112 = v25;
  id v24 = lockcrypto_query_certificate_properties((uint64_t)v111, @"1.2.840.113635.100.8.7", &v112);
  id v90 = v112;

  if (!v24)
  {
    char v25 = v90;
    id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3293, @"com.apple.MobileActivation.ErrorDomain", -1, v90, @"Failed to query UCRT device OS information.");
    goto LABEL_77;
  }
  id v33 = [v24 objectForKeyedSubscript:@"1400"];
  SecCertificateRef v27 = (SecCertificateRef)[v24 objectForKeyedSubscript:@"1403"];
  id v80 = isNSString(v33);

  if (!v80)
  {
    id v31 = 0;
LABEL_102:
    id v32 = isNSString(v27);

    if (v32)
    {
      id v85 = +[GestaltHlpr getSharedInstance];
      id v32 = [v85 copyAnswer:@"BuildVersion"];

      id v86 = isNSString(v32);
      if (!v86
        || (id v87 = v86,
            unsigned __int8 v88 = [v32 isEqualToString:v27],
            v87,
            (v88 & 1) == 0))
      {
        id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3311, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid BuildVersion.");
        goto LABEL_107;
      }
    }
    uint64_t v63 = 1;
    id v30 = v90;
LABEL_82:
    v65 = v110;
    id v64 = v111;
    SecCertificateRef v66 = cf;
LABEL_62:
    CFRelease(v64);
    goto LABEL_63;
  }
  id v81 = +[GestaltHlpr getSharedInstance];
  id v31 = [v81 copyAnswer:@"ProductVersion"];

  id v82 = isNSString(v31);
  if (v82)
  {
    CFStringRef v83 = v82;
    unsigned __int8 v84 = [v31 isEqualToString:v33];

    if (v84) {
      goto LABEL_102;
    }
  }
  id v30 = createMobileActivationError((uint64_t)"verify_ucrt", 3303, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid ProductVersion.");
  id v32 = 0;
LABEL_107:
  char v25 = v90;
LABEL_59:

  if (v91) {
    *id v91 = v30;
  }
  uint64_t v63 = 0;
  v65 = v110;
  id v64 = v111;
  SecCertificateRef v66 = cf;
  if (v111) {
    goto LABEL_62;
  }
LABEL_63:
  if (v65) {
    CFRelease(v65);
  }
  if (v66) {
    CFRelease(v66);
  }

  return v63;
}

SecCertificateRef copyUCRT(void *a1, NSError **a2)
{
  id v3 = data_ark_copy(a1, 0, @"ActivationState");
  id v4 = (__CFString *)isNSString(v3);

  if (!v4) {
    id v4 = @"Unactivated";
  }
  if (([(__CFString *)v4 isEqualToString:@"Activated"] & 1) == 0)
  {
    unsigned int v12 = createMobileActivationError((uint64_t)"copyUCRT", 947, @"com.apple.MobileActivation.ErrorDomain", -8, 0, @"Device is not activated (%@).", v4);
    id v10 = 0;
    id v6 = 0;
    goto LABEL_14;
  }
  id v5 = copy_ucrt_path();
  id v6 = [v5 stringByAppendingPathComponent:@"ucrt.pem"];

  if (!v6)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"copyUCRT", 953, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create UCRT file path.");
LABEL_13:
    unsigned int v12 = MobileActivationError;
    id v10 = 0;
    goto LABEL_14;
  }
  id v7 = +[NSFileManager defaultManager];
  unsigned __int8 v8 = [(NSFileManager *)v7 fileExistsAtPath:v6];

  if ((v8 & 1) == 0)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"copyUCRT", 958, @"com.apple.MobileActivation.ErrorDomain", -4, 0, @"UCRT is unavailable.");
    goto LABEL_13;
  }
  id v9 = [objc_alloc((Class)NSData) initWithContentsOfFile:v6];
  id v10 = v9;
  if (!v9)
  {
    unsigned int v12 = createMobileActivationError((uint64_t)"copyUCRT", 964, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to encode UCRT.");
LABEL_14:
    id v11 = 0;
    if (!a2)
    {
LABEL_19:
      SecCertificateRef v14 = 0;
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  id v19 = 0;
  id v11 = lockcrypto_decode_pems(v9, "CERTIFICATE", (NSError **)&v19);
  unsigned int v12 = (NSError *)v19;
  if (!v11)
  {
    id v15 = createMobileActivationError((uint64_t)"copyUCRT", 970, @"com.apple.MobileActivation.ErrorDomain", -1, v12, @"Failed to query certificate(s) from pem data.");
LABEL_18:
    id v17 = v15;

    unsigned int v12 = v17;
    if (!a2) {
      goto LABEL_19;
    }
LABEL_15:
    unsigned int v12 = v12;
    SecCertificateRef v14 = 0;
    *a2 = v12;
    goto LABEL_20;
  }
  CFDataRef v13 = (const __CFData *)[v11 objectAtIndexedSubscript:0];
  SecCertificateRef v14 = SecCertificateCreateWithData(kCFAllocatorDefault, v13);

  if (!v14)
  {
    id v15 = createMobileActivationError((uint64_t)"copyUCRT", 976, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create certificate from pem data.");
    goto LABEL_18;
  }
LABEL_20:

  return v14;
}

NSDictionary *create_ucrt_info(void *a1, void *a2, void *a3)
{
  id v4 = a1;
  id v5 = a2;
  CFErrorRef error = 0;
  id v41 = v5;
  id v42 = v4;
  if (!v4)
  {
    id v10 = createMobileActivationError((uint64_t)"create_ucrt_info", 1030, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    unsigned __int8 v8 = 0;
    id v9 = 0;
    id v11 = 0;
    id v43 = 0;
    id v40 = 0;
LABEL_25:
    id v21 = 0;
    int v18 = 0;
    SecAccessControlRef v17 = 0;
LABEL_26:
    SecCertificateRef v14 = 0;
    goto LABEL_27;
  }
  id v6 = v5;
  if (v5)
  {
    id v7 = [v5 objectForKeyedSubscript:@"UseCommittedUIK"];
    unsigned __int8 v8 = v7;
    if (v7)
    {
      id v9 = (NSData *)isNSNumber(v7);

      if (!v9)
      {
        id v10 = createMobileActivationError((uint64_t)"create_ucrt_info", 1045, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid option (%@).", @"UseCommittedUIK");
        id v11 = 0;
        id v43 = 0;
        id v40 = 0;
LABEL_24:
        id v4 = 0;
        goto LABEL_25;
      }
    }
  }
  else
  {
    unsigned __int8 v8 = 0;
  }
  id v12 = +[GestaltHlpr getSharedInstance];
  id v13 = [v12 copyAnswer:@"HasPKA"];

  SecCertificateRef v14 = (NSMutableDictionary *)isNSNumber(v13);
  id v40 = v13;
  if (!v14)
  {
    id v10 = createMobileActivationError((uint64_t)"create_ucrt_info", 1052, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve PKA state.");
    id v9 = 0;
    id v11 = 0;
    id v43 = 0;
    id v4 = 0;
    id v21 = 0;
    int v18 = 0;
    SecAccessControlRef v17 = 0;
LABEL_27:
    id v30 = 0;
    goto LABEL_28;
  }
  if ([v8 BOOLValue]) {
    uint64_t v15 = 2;
  }
  else {
    uint64_t v15 = 3;
  }
  id v52 = 0;
  id v11 = security_copy_system_key(v15, 0, &v52);
  id v16 = v52;
  if (!v11)
  {
    id v10 = createMobileActivationError((uint64_t)"create_ucrt_info", 1061, @"com.apple.MobileActivation.ErrorDomain", -1, v16, @"Failed to copy UIK.");

    id v9 = 0;
    id v43 = 0;
    goto LABEL_24;
  }
  SecAccessControlRef v17 = SecAccessControlCreateWithFlags(0, kSecAttrAccessibleAlwaysThisDeviceOnlyPrivate, 0x40000000uLL, &error);
  if (!v17)
  {
    id v10 = createMobileActivationError((uint64_t)"create_ucrt_info", 1070, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to create access control.");

    CFRelease(v11);
    id v9 = 0;
    id v11 = 0;
    id v43 = 0;
    id v4 = 0;
    id v21 = 0;
    int v18 = 0;
    goto LABEL_26;
  }
  id v51 = v16;
  int v18 = (__SecKey *)createReferenceKeyBlob(v17, (char)[v13 BOOLValue], 0, &v51);
  id v19 = v51;

  SecAccessControlRef cf = v17;
  char v38 = v11;
  id v39 = v18;
  if (!v18)
  {
    id v10 = createMobileActivationError((uint64_t)"create_ucrt_info", 1076, @"com.apple.MobileActivation.ErrorDomain", -1, v19, @"Failed to create ref key.");
    id v33 = v19;
LABEL_37:

    id v30 = 0;
    SecCertificateRef v14 = 0;
    SecAccessControlRef v17 = 0;
    id v21 = 0;
    id v4 = 0;
    id v43 = 0;
    goto LABEL_42;
  }
  id v50 = v19;
  int v18 = (__SecKey *)security_create_attestation((uint64_t)v18, (uint64_t)v11, (NSError **)&v50);
  id v20 = v50;

  if (!v18)
  {
    id v10 = createMobileActivationError((uint64_t)"create_ucrt_info", 1084, @"com.apple.MobileActivation.ErrorDomain", -11, v20, @"Failed to attest ref key to UIK.");
    id v33 = v20;
    goto LABEL_37;
  }
  id v49 = v20;
  id v21 = copy_uik_certificate_info(v6, &v49);
  id v22 = v49;

  id v43 = v18;
  if (!v21)
  {
    id v10 = createMobileActivationError((uint64_t)"create_ucrt_info", 1119, @"com.apple.MobileActivation.ErrorDomain", -1, v22, @"Failed to copy UIK certification info.");

    id v30 = 0;
    SecCertificateRef v14 = 0;
    SecAccessControlRef v17 = 0;
LABEL_40:
    int v18 = 0;
LABEL_41:
    id v4 = 0;
    goto LABEL_42;
  }
  id v48 = v22;
  SecAccessControlRef v17 = (SecAccessControlRef)copy_device_id_info(v23, (NSError **)&v48);
  id v24 = v48;

  if (!v17)
  {
    id v10 = createMobileActivationError((uint64_t)"create_ucrt_info", 1127, @"com.apple.MobileActivation.ErrorDomain", -1, v24, @"Failed to copy device id info.");

    id v30 = 0;
    SecCertificateRef v14 = 0;
    goto LABEL_40;
  }
  id v47 = v24;
  int v18 = (__SecKey *)copy_device_info(v25, (NSError **)&v47);
  id v26 = v47;

  if (!v18)
  {
    id v10 = createMobileActivationError((uint64_t)"create_ucrt_info", 1135, @"com.apple.MobileActivation.ErrorDomain", -1, v26, @"Failed to copy device info.");

    id v30 = 0;
    SecCertificateRef v14 = 0;
    goto LABEL_41;
  }
  BOOL v27 = is_product_cellular();
  if (v27)
  {
    id v46 = v26;
    id v4 = copy_baseband_request_info(v27, v28, (NSError **)&v46);
    id v29 = v46;

    if (v4)
    {
      id v26 = v29;
      goto LABEL_47;
    }
    id v10 = createMobileActivationError((uint64_t)"create_ucrt_info", 1146, @"com.apple.MobileActivation.ErrorDomain", -1, v29, @"Failed to copy baseband request info.");

    id v30 = 0;
    SecCertificateRef v14 = 0;
LABEL_42:
    id v11 = 0;
    id v9 = 0;
    goto LABEL_43;
  }
  id v4 = 0;
LABEL_47:
  v56[0] = @"DeviceID";
  v56[1] = @"DeviceInfo";
  v57[0] = v17;
  v57[1] = v18;
  v56[2] = @"UIKCertification";
  v57[2] = v21;
  id v34 = +[NSDictionary dictionaryWithObjects:v57 forKeys:v56 count:3];
  SecCertificateRef v14 = +[NSMutableDictionary dictionaryWithDictionary:v34];

  if (v4) {
    [(NSMutableDictionary *)v14 setObject:v4 forKeyedSubscript:@"BasebandRequestInfo"];
  }
  id v45 = 0;
  id v9 = +[NSPropertyListSerialization dataWithPropertyList:v14 format:100 options:0 error:&v45];
  id v10 = (NSError *)v45;

  if (v9)
  {
    CFDataRef v35 = SecKeyCreateSignature(v39, kSecKeyAlgorithmECDSASignatureMessageX962SHA256, (CFDataRef)v9, &error);
    id v11 = v35;
    if (v35)
    {
      v54[0] = @"ActivationInfoXML";
      v54[1] = @"RKCertification";
      v55[0] = v9;
      v55[1] = v43;
      v54[2] = @"RKSignature";
      v55[2] = v35;
      id v30 = +[NSDictionary dictionaryWithObjects:v55 forKeys:v54 count:3];
      goto LABEL_43;
    }
    id v36 = createMobileActivationError((uint64_t)"create_ucrt_info", 1187, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to sign activation data with ref key.");

    id v30 = 0;
  }
  else
  {
    id v36 = createMobileActivationError((uint64_t)"create_ucrt_info", 1178, @"com.apple.MobileActivation.ErrorDomain", -1, v10, @"Could not convert dictionary to xml data.");

    id v30 = 0;
    id v11 = 0;
  }
  id v10 = v36;
LABEL_43:
  CFRelease(cf);
  CFRelease(v38);
  if (v39) {
    CFRelease(v39);
  }
LABEL_28:
  if (error) {
    CFRelease(error);
  }
  CFErrorRef error = 0;
  if (a3 && !v30) {
    *a3 = v10;
  }
  id v31 = v30;

  return v31;
}

__SecKey *copy_uik_certificate_info(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = v3;
  if (!v3)
  {
    id v6 = 0;
LABEL_6:
    if ([v6 BOOLValue]) {
      uint64_t v14 = 2;
    }
    else {
      uint64_t v14 = 3;
    }
    id v33 = 0;
    id v11 = security_copy_system_key(v14, 0, &v33);
    id v15 = v33;
    id v16 = v15;
    if (!v11)
    {
      unsigned __int8 v8 = createMobileActivationError((uint64_t)"copy_uik_certificate_info", 2726, @"com.apple.MobileActivation.ErrorDomain", -1, v15, @"Failed to copy UIK.");

      id v9 = 0;
      id v31 = 0;
      id v10 = 0;
      id v12 = 0;
      id v13 = 0;
      id v7 = 0;
      goto LABEL_23;
    }
    id v32 = v15;
    id v7 = (__SecKey *)security_create_system_key_attestation((uint64_t)v11, 0, 0, &v32);
    unsigned __int8 v8 = (NSError *)v32;

    id v29 = a2;
    id v30 = v7;
    if (v7)
    {
      id v17 = +[GestaltHlpr getSharedInstance];
      id v18 = [v17 copyAnswer:@"BluetoothAddress"];

      id v31 = v18;
      id v12 = isNSString(v18);

      if (v12)
      {
        id v19 = +[GestaltHlpr getSharedInstance];
        id v9 = [v19 copyAnswer:@"WifiAddress"];

        id v12 = isNSString(v9);
        if (v12)
        {
          id v20 = +[GestaltHlpr getSharedInstance];
          id v10 = [v20 copyAnswer:@"EthernetMacAddress"];

          id v12 = isNSString(v10);
          if (v12)
          {
            id v21 = +[GestaltHlpr getSharedInstance];
            id v13 = [v21 copyAnswer:@"BoardId"];

            id v12 = isNSNumber(v13);
            if (v12)
            {
              id v22 = +[GestaltHlpr getSharedInstance];
              id v12 = [v22 copyAnswer:@"ChipID"];

              id v23 = isNSNumber(v12);
              if (v23)
              {
                v34[0] = @"UIKCertification";
                v34[1] = @"BluetoothAddress";
                v35[0] = v7;
                v35[1] = v31;
                v34[2] = @"WifiAddress";
                v34[3] = @"BoardId";
                v35[2] = v9;
                v35[3] = v13;
                v34[4] = @"ChipID";
                v35[4] = v12;
                id v24 = +[NSDictionary dictionaryWithObjects:v35 forKeys:v34 count:5];
                id v7 = (__SecKey *)[(NSDictionary *)v24 mutableCopy];

                [(__SecKey *)v7 setObject:v10 forKeyedSubscript:@"EthernetMacAddress"];
LABEL_22:
                CFRelease(v11);
                a2 = v29;
                id v11 = v30;
                goto LABEL_23;
              }
              MobileActivationError = createMobileActivationError((uint64_t)"copy_uik_certificate_info", 2782, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve chip id.");
            }
            else
            {
              MobileActivationError = createMobileActivationError((uint64_t)"copy_uik_certificate_info", 2776, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve board id.");
            }
            uint64_t v25 = MobileActivationError;

            id v7 = 0;
          }
          else
          {
            uint64_t v25 = createMobileActivationError((uint64_t)"copy_uik_certificate_info", 2768, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve ethernet mac address.");

            id v7 = 0;
            id v13 = 0;
          }
        }
        else
        {
          uint64_t v25 = createMobileActivationError((uint64_t)"copy_uik_certificate_info", 2758, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve WiFi address.");

          id v7 = 0;
          id v13 = 0;
          id v10 = 0;
        }
LABEL_21:
        unsigned __int8 v8 = v25;
        goto LABEL_22;
      }
      uint64_t v25 = createMobileActivationError((uint64_t)"copy_uik_certificate_info", 2752, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve bluetooth address.");

      id v7 = 0;
      id v13 = 0;
      id v10 = 0;
    }
    else
    {
      uint64_t v25 = createMobileActivationError((uint64_t)"copy_uik_certificate_info", 2734, @"com.apple.MobileActivation.ErrorDomain", -11, v8, @"Failed to attest UIK to SIK.");

      id v13 = 0;
      id v12 = 0;
      id v10 = 0;
      id v31 = 0;
    }
    id v9 = 0;
    goto LABEL_21;
  }
  id v5 = [v3 objectForKeyedSubscript:@"UseCommittedUIK"];
  id v6 = v5;
  if (!v5) {
    goto LABEL_6;
  }
  id v7 = (__SecKey *)isNSNumber(v5);

  if (v7) {
    goto LABEL_6;
  }
  unsigned __int8 v8 = createMobileActivationError((uint64_t)"copy_uik_certificate_info", 2716, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid option (%@).", @"UseCommittedUIK");
  id v9 = 0;
  id v31 = 0;
  id v10 = 0;
  id v11 = 0;
  id v12 = 0;
  id v13 = 0;
LABEL_23:
  if (a2 && !v7) {
    *a2 = v8;
  }
  id v26 = v7;

  return v26;
}

id copy_device_id_info(uint64_t a1, NSError **a2)
{
  id v3 = +[GestaltHlpr getSharedInstance];
  id v10 = 0;
  id v4 = [v3 copyDeviceIDInfo:&v10];
  id v5 = v10;

  if (v4) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    id v8 = v4;
    id v7 = 0;
  }
  else
  {
    id v7 = createMobileActivationError((uint64_t)"copy_device_id_info", 2648, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy device ID info: %@", v5);
    if (a2)
    {
      id v7 = v7;
      id v8 = 0;
      *a2 = v7;
    }
    else
    {
      id v8 = 0;
    }
  }

  return v8;
}

id copy_device_info(uint64_t a1, NSError **a2)
{
  id v3 = +[GestaltHlpr getSharedInstance];
  id v10 = 0;
  id v4 = [v3 copyDeviceInfo:&v10];
  id v5 = v10;

  if (v4) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    id v8 = v4;
    id v7 = 0;
  }
  else
  {
    id v7 = createMobileActivationError((uint64_t)"copy_device_info", 2673, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy device info: %@", v5);
    if (a2)
    {
      id v7 = v7;
      id v8 = 0;
      *a2 = v7;
    }
    else
    {
      id v8 = 0;
    }
  }

  return v8;
}

id copy_baseband_request_info(uint64_t a1, uint64_t a2, NSError **a3)
{
  if (!is_product_cellular())
  {
    id v8 = createMobileActivationError((uint64_t)"copy_baseband_request_info", 1979, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"BasebandInfo does not exist for non cellular devices.");
    id v4 = 0;
    goto LABEL_11;
  }
  id v4 = objc_alloc_init((Class)NSMutableDictionary);
  if (!v4)
  {
    id v8 = createMobileActivationError((uint64_t)"copy_baseband_request_info", 1985, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create BasebandRequestInfo dictionary.");
LABEL_11:
    id v6 = 0;
    id v7 = 0;
    id v9 = 0;
    id v10 = 0;
    id v11 = 0;
    id v5 = 0;
    if (!a3) {
      goto LABEL_31;
    }
    goto LABEL_22;
  }
  id v5 = +[MATelephonyInfo sharedInstance];
  if (!v5)
  {
    id v8 = createMobileActivationError((uint64_t)"copy_baseband_request_info", 1991, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy telephony instance.");
    id v6 = 0;
    id v7 = 0;
    id v9 = 0;
LABEL_20:
    id v10 = 0;
    goto LABEL_21;
  }
  [v4 setObject:&__kCFBooleanTrue forKeyedSubscript:@"ActivationRequiresActivationTicket"];
  [v4 setObject:&__kCFBooleanTrue forKeyedSubscript:@"SupportsPostponement"];
  id v6 = [(MATelephonyInfo *)v5 copyPhoneNumberWithSlotID:1 error:0];
  if (v6) {
    [v4 setObject:v6 forKeyedSubscript:@"PhoneNumber"];
  }
  if ([(MATelephonyInfo *)v5 dualSIMCapable])
  {
    id v7 = [(MATelephonyInfo *)v5 copyPhoneNumberWithSlotID:2 error:0];
    if (v7) {
      [v4 setObject:v7 forKeyedSubscript:@"PhoneNumber2"];
    }
  }
  else
  {
    id v7 = 0;
  }
  id v22 = 0;
  id v9 = [(MATelephonyInfo *)v5 copySIMStatusWithSlotID:1 error:&v22];
  id v12 = v22;
  if (!v9)
  {
    id v8 = createMobileActivationError((uint64_t)"copy_baseband_request_info", 2015, @"com.apple.MobileActivation.ErrorDomain", -1, v12, @"Failed to retrieve SIM status.");

    goto LABEL_20;
  }
  if ([(MATelephonyInfo *)v5 dualSIMCapable])
  {
    id v21 = v12;
    id v10 = [(MATelephonyInfo *)v5 copySIMStatusWithSlotID:2 error:&v21];
    id v13 = v21;

    if (v10)
    {
      id v12 = v13;
      goto LABEL_24;
    }
    id v8 = createMobileActivationError((uint64_t)"copy_baseband_request_info", 2022, @"com.apple.MobileActivation.ErrorDomain", -1, v13, @"Failed to retrieve SIM status.");

LABEL_21:
    id v11 = 0;
    if (!a3) {
      goto LABEL_31;
    }
    goto LABEL_22;
  }
  id v10 = 0;
LABEL_24:
  id v20 = v12;
  id v11 = copy_postponement_info(&v20);
  id v8 = (NSError *)v20;

  if (v11)
  {
    id v15 = [v11 objectForKey:@"InternationalMobileEquipmentIdentity"];

    if (v15)
    {
      [v11 setObject:v9 forKeyedSubscript:@"SIMStatus"];
      [v11 setObject:v10 forKeyedSubscript:@"SIMStatus2"];
      [v11 removeObjectForKey:kCTPostponementStatus];
      [v11 removeObjectForKey:kCTPostponementStatusErrorReason];
      [v11 removeObjectForKey:kCTPostponementInfoUniqueID];
      [v4 addEntriesFromDictionary:v11];
      id v14 = v4;
      id v4 = v14;
      goto LABEL_32;
    }
    MobileActivationError = createMobileActivationError((uint64_t)"copy_baseband_request_info", 2034, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Postponement info is missing required identifiers (%@ / %@) : %@", v9, v10, @"InternationalMobileEquipmentIdentity");
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"copy_baseband_request_info", 2029, @"com.apple.MobileActivation.ErrorDomain", -1, v8, @"Failed to retrieve postponement info (%@ / %@).", v9, v10);
  }
  id v17 = MobileActivationError;

  id v8 = v17;
  if (!a3)
  {
LABEL_31:
    id v14 = 0;
    goto LABEL_32;
  }
LABEL_22:
  id v8 = v8;
  id v14 = 0;
  *a3 = v8;
LABEL_32:
  id v18 = v14;

  return v18;
}

id copyUCRTVersionInformation(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = v3;
  if (!v3)
  {
    id v14 = createMobileActivationError((uint64_t)"copyUCRTVersionInformation", 1269, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid input.");
    id v15 = 0;
    SecCertificateRef v5 = 0;
    goto LABEL_14;
  }
  id v20 = 0;
  SecCertificateRef v5 = copyUCRT(v3, (NSError **)&v20);
  id v6 = (NSError *)v20;
  if (!v5)
  {
    id v14 = createMobileActivationError((uint64_t)"copyUCRTVersionInformation", 1275, @"com.apple.MobileActivation.ErrorDomain", -1, v6, @"Failed to copy UCRT.");

    id v15 = 0;
    goto LABEL_14;
  }
  id v21 = 0;
  id v7 = lockcrypto_query_certificate_properties((uint64_t)v5, @"1.2.840.113635.100.8.7", &v21);
  id v8 = (NSError *)v21;
  id v19 = a2;
  if (!v7)
  {
    id v16 = createAndLogError((uint64_t)"copy_ucrt_version_info", 122, @"com.apple.MobileActivation.ErrorDomain", -1, v8, @"Failed to query UCRT device OS information.");

    id v10 = 0;
    id v9 = 0;
    id v8 = v16;
    goto LABEL_9;
  }
  id v9 = [v7 objectForKeyedSubscript:@"1400"];
  id v10 = [v7 objectForKeyedSubscript:@"1403"];
  id v11 = objc_alloc_init((Class)NSMutableDictionary);
  [v11 setObject:v9 forKeyedSubscript:@"ProductVersion"];
  [v11 setObject:v10 forKeyedSubscript:@"BuildVersion"];
  if (!v11)
  {
LABEL_9:
    id v8 = v8;
    id v11 = 0;
    int v12 = 1;
    id v13 = v8;
    goto LABEL_10;
  }
  int v12 = 0;
  id v13 = v6;
LABEL_10:

  id v14 = v13;
  if (v12)
  {
    id v17 = createMobileActivationError((uint64_t)"copyUCRTVersionInformation", 1281, @"com.apple.MobileActivation.ErrorDomain", -1, v14, @"Failed to copy UCRT version info.");

    id v15 = 0;
    id v14 = v17;
  }
  else
  {
    id v15 = v11;
  }
  a2 = v19;
LABEL_14:
  if (a2 && !v15) {
    *a2 = v14;
  }
  if (v5) {
    CFRelease(v5);
  }

  return v15;
}

char *create_cert_request(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v36 = 0;
  uint64_t v37 = (id *)&v36;
  uint64_t v38 = 0x3032000000;
  id v39 = __Block_byref_object_copy_;
  id v40 = __Block_byref_object_dispose_;
  id v41 = 0;
  uint64_t v30 = 0;
  id v31 = &v30;
  uint64_t v32 = 0x3032000000;
  id v33 = __Block_byref_object_copy_;
  id v34 = __Block_byref_object_dispose_;
  id v35 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = &v24;
  uint64_t v26 = 0x3032000000;
  BOOL v27 = __Block_byref_object_copy_;
  uint64_t v28 = __Block_byref_object_dispose_;
  id v29 = 0;
  if (create_cert_request_onceToken != -1) {
    dispatch_once(&create_cert_request_onceToken, &__block_literal_global_185);
  }
  id v4 = create_cert_request_queue;
  if (!create_cert_request_queue)
  {
    id v6 = createMobileActivationError((uint64_t)"create_cert_request", 1775, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create queue.");
LABEL_7:
    id v7 = v6;
    SecCertificateRef v5 = 0;
LABEL_8:
    id v8 = v37[5];
    v37[5] = v7;

    goto LABEL_9;
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3254779904;
  block[2] = __create_cert_request_block_invoke_2;
  block[3] = &__block_descriptor_64_e8_32s40r48r56r_e5_v8__0l;
  id v21 = &v30;
  id v20 = v3;
  id v22 = &v24;
  id v23 = &v36;
  dispatch_sync(v4, block);

  if (v37[5])
  {
    SecCertificateRef v5 = 0;
LABEL_9:
    id v9 = 0;
    goto LABEL_10;
  }
  int v12 = +[NSUUID UUID];
  SecCertificateRef v5 = v12;
  if (!v12)
  {
    id v6 = createMobileActivationError((uint64_t)"create_cert_request", 1815, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create UUID.");
    goto LABEL_7;
  }
  id v13 = [(NSUUID *)v12 UUIDString];
  id v9 = v13;
  if (!v13)
  {
    id v7 = createMobileActivationError((uint64_t)"create_cert_request", 1821, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create UUID string.");
    goto LABEL_8;
  }
  id v14 = (void *)v31[5];
  id v15 = (void *)v25[5];
  id v16 = v37;
  id obj = v37[5];
  id v10 = lockcrypto_create_cert_request(v13, v14, v15, &obj);
  objc_storeStrong(v16 + 5, obj);
  if (v10) {
    goto LABEL_12;
  }
  id v17 = createMobileActivationError((uint64_t)"create_cert_request", 1827, @"com.apple.MobileActivation.ErrorDomain", -1, v37[5], @"Failed to create cert request.");
LABEL_10:
  id v10 = 0;
  if (a2) {
    *a2 = v37[5];
  }
LABEL_12:
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v36, 8);

  return v10;
}

void sub_10000B600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void __create_cert_request_block_invoke(id a1)
{
  os_log_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v2 = dispatch_queue_create("com.apple.mobileactivationd.fairplay", v1);
  id v3 = (void *)create_cert_request_queue;
  create_cert_request_queue = (uint64_t)v2;
}

void __create_cert_request_block_invoke_2(uint64_t a1)
{
  id v2 = data_ark_copy(*(void **)(a1 + 32), 0, @"PublicKey");
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  id v5 = data_ark_copy(*(void **)(a1 + 32), 0, @"PrivateKey");
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  id v8 = isNSData(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
  if (!v8
    || (id v9 = v8,
        id v10 = isNSData(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40)),
        v10,
        v9,
        !v10))
  {
    uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8);
    int v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = 0;

    uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8);
    id v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = 0;

    uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v16 = *(void **)(v15 + 40);
    uint64_t v17 = *(void *)(*(void *)(a1 + 48) + 8);
    id v24 = *(id *)(v17 + 40);
    id obj = v16;
    uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8);
    id v23 = *(id *)(v18 + 40);
    char v19 = lockcrypto_genenerate_keypair(1024, &obj, (char **)&v24, &v23);
    objc_storeStrong((id *)(v15 + 40), obj);
    objc_storeStrong((id *)(v17 + 40), v24);
    objc_storeStrong((id *)(v18 + 40), v23);
    if (v19)
    {
      data_ark_set(*(void **)(a1 + 32), 0, @"PublicKey", *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), 0);
      data_ark_set(*(void **)(a1 + 32), 0, @"PrivateKey", *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), 0);
    }
    else
    {
      id v20 = createMobileActivationError((uint64_t)"create_cert_request_block_invoke_2", 1789, @"com.apple.MobileActivation.ErrorDomain", -1, *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40), @"Failed to generate public/or private key.");
      uint64_t v21 = *(void *)(*(void *)(a1 + 56) + 8);
      id v22 = *(void **)(v21 + 40);
      *(void *)(v21 + 40) = v20;
    }
  }
}

void __copy_helper_block_e8_32s40r48r56r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 8);
  _Block_object_assign((void *)(a1 + 48), *(const void **)(a2 + 48), 8);
  id v5 = *(const void **)(a2 + 56);

  _Block_object_assign((void *)(a1 + 56), v5, 8);
}

void __destroy_helper_block_e8_32s40r48r56r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 56), 8);
  _Block_object_dispose(*(const void **)(a1 + 48), 8);
  _Block_object_dispose(*(const void **)(a1 + 40), 8);
  id v2 = *(void **)(a1 + 32);
}

uint64_t deliver_baseband_ticket(int a1, id a2, void *a3, void *a4)
{
  id v6 = a2;
  id v7 = a3;
  id v8 = objc_alloc_init((Class)NSMutableDictionary);
  id v26 = v7;
  if (!v6 || !v7)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"deliver_baseband_ticket", 1854, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
LABEL_20:
    uint64_t v21 = MobileActivationError;
    id v9 = 0;
    uint64_t v17 = 0;
    id v12 = 0;
    goto LABEL_21;
  }
  if (([v7 isEqualToString:@"Activated"] & 1) == 0
    && ([v7 isEqualToString:@"FactoryActivated"] & 1) == 0)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"deliver_baseband_ticket", 1859, @"com.apple.MobileActivation.ErrorDomain", -8, 0, @"Device is not activated: %@", v7);
    goto LABEL_20;
  }
  id v9 = [v6 objectForKeyedSubscript:@"ActivationTicket"];
  id v10 = isNSString(v9);

  if (!v10)
  {
    id v11 = [v6 objectForKeyedSubscript:@"WildcardTicket"];

    id v9 = v11;
  }
  id v12 = isNSString(v9);

  if (!v12)
  {
    uint64_t v21 = createMobileActivationError((uint64_t)"deliver_baseband_ticket", 1872, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Account token missing activation ticket.");
    uint64_t v17 = 0;
LABEL_21:
    id v15 = 0;
    id v13 = 0;
    goto LABEL_22;
  }
  [v8 setObject:v9 forKeyedSubscript:@"ActivationTicket"];
  [v8 setObject:v7 forKeyedSubscript:@"ActivationState"];
  id v13 = [v6 objectForKeyedSubscript:@"PhoneNumberNotificationURL"];
  if (v13) {
    [v8 setObject:v13 forKeyedSubscript:@"PhoneNumberNotificationURL"];
  }
  id v12 = [v6 objectForKeyedSubscript:@"ActivityURL"];
  id v14 = isNSString(v12);

  if (v14) {
    [v8 setObject:v12 forKeyedSubscript:@"ActivityURL"];
  }
  id v15 = [v6 objectForKeyedSubscript:@"PostponementInfo"];
  id v16 = isNSDictionary(v15);

  if (v16) {
    [v8 addEntriesFromDictionary:v15];
  }
  uint64_t v17 = (const void *)_CTServerConnectionCreate();
  if (v17)
  {
    unint64_t v18 = _CTServerConnectionSetPostponementTicket();
    if (!HIDWORD(v18))
    {
      id v22 = v8;
      uint64_t v21 = 0;
      uint64_t v23 = 1;
LABEL_25:
      CFRelease(v17);
      uint64_t v24 = v23;
      goto LABEL_26;
    }
    char v19 = createMobileActivationError((uint64_t)"deliver_baseband_ticket", 1902, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to issue baseband ticket: %d.%d", v18, HIDWORD(v18));
  }
  else
  {
    char v19 = createMobileActivationError((uint64_t)"deliver_baseband_ticket", 1896, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to connect to CommCenter.");
  }
  uint64_t v21 = v19;
LABEL_22:
  id v22 = v8;
  if (a4) {
    *a4 = v21;
  }
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  if (v17) {
    goto LABEL_25;
  }
LABEL_26:

  return v24;
}

id copy_postponement_info(void *a1)
{
  id v2 = (const void *)_CTServerConnectionCreate();
  if (v2)
  {
    uint64_t v3 = _CTServerConnectionCopyPostponementStatus();
    MobileActivationError = createMobileActivationError((uint64_t)"copy_postponement_info", 1936, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy postponement status: %ld.%ld", (int)v3, v3 >> 32);
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"copy_postponement_info", 1930, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to connect to CommCenter.");
  }
  id v5 = MobileActivationError;
  if (a1) {
    *a1 = v5;
  }
  if (v2) {
    CFRelease(v2);
  }

  return 0;
}

NSDictionary *create_activation_info(uint64_t a1)
{
  os_log_t v1 = (void *)__chkstk_darwin(a1);
  id v70 = v2;
  id v4 = v3;
  id v5 = v1;
  id v6 = v4;
  memset(v90, 0, 256);
  unsigned int v84 = 256;
  bzero(v89, 0x1000uLL);
  unsigned int v83 = 4096;
  CFErrorRef error = 0;
  id v62 = v6;
  id v63 = v5;
  if (!v5)
  {
    id v10 = createMobileActivationError((uint64_t)"create_activation_info", 2093, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    id v9 = 0;
    id v11 = 0;
    id v12 = 0;
    id v67 = 0;
    id v68 = 0;
    id v69 = 0;
    v65 = 0;
    SecCertificateRef v66 = 0;
    id v13 = 0;
    id v14 = 0;
    id v15 = 0;
    id v16 = 0;
    id v61 = 0;
    goto LABEL_7;
  }
  if (v6)
  {
    id v7 = [v6 objectForKeyedSubscript:@"UseCommittedUIK"];
    id v8 = v7;
    if (v7)
    {
      id v9 = (NSDictionary *)isNSNumber(v7);

      if (!v9)
      {
        id v61 = v8;
        id v10 = createMobileActivationError((uint64_t)"create_activation_info", 2100, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid option (%@).", @"UseCommittedUIK");
        id v11 = 0;
        id v12 = 0;
        id v67 = 0;
        id v68 = 0;
        id v69 = 0;
        v65 = 0;
        SecCertificateRef v66 = 0;
        id v13 = 0;
        id v14 = 0;
        id v15 = 0;
        id v16 = 0;
        id v5 = 0;
LABEL_7:
        id v60 = 0;
LABEL_29:
        id v64 = 0;
        CFDataRef v37 = 0;
        goto LABEL_30;
      }
    }
  }
  else
  {
    id v8 = 0;
  }
  id v17 = +[GestaltHlpr getSharedInstance];
  id v18 = [v17 copyAnswer:@"HasPKA"];

  id v19 = isNSNumber(v18);
  id v60 = v18;
  id v61 = v8;
  if (!v19)
  {
    id v10 = createMobileActivationError((uint64_t)"create_activation_info", 2107, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve PKA state.");
LABEL_27:
    id v9 = 0;
    id v11 = 0;
    goto LABEL_28;
  }
  if ([v8 BOOLValue]) {
    uint64_t v20 = 2;
  }
  else {
    uint64_t v20 = 3;
  }
  id v81 = 0;
  id v11 = (NSMutableDictionary *)security_copy_system_key(v20, 0, &v81);
  id v21 = v81;
  if (!v11)
  {
    id v10 = createMobileActivationError((uint64_t)"create_activation_info", 2115, @"com.apple.MobileActivation.ErrorDomain", -1, v21, @"Failed to copy UIK.");

    id v9 = 0;
LABEL_28:
    id v12 = 0;
    id v67 = 0;
    id v68 = 0;
    id v69 = 0;
    v65 = 0;
    SecCertificateRef v66 = 0;
    id v13 = 0;
    id v14 = 0;
    id v15 = 0;
    id v16 = 0;
    id v5 = 0;
    goto LABEL_29;
  }
  SecAccessControlRef v22 = SecAccessControlCreateWithFlags(0, kSecAttrAccessibleAlwaysThisDeviceOnlyPrivate, 0x40000000uLL, &error);
  if (!v22)
  {
    id v10 = createMobileActivationError((uint64_t)"create_activation_info", 2124, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to create access control.");

    CFRelease(v11);
    goto LABEL_27;
  }
  SecAccessControlRef v23 = v22;
  id v80 = v21;
  id v13 = (__SecKey *)createReferenceKeyBlob(v22, (char)[v18 BOOLValue], 0, &v80);
  id v24 = v80;

  SecAccessControlRef cf = v23;
  id v58 = v11;
  id v59 = v13;
  if (!v13)
  {
    id v10 = createMobileActivationError((uint64_t)"create_activation_info", 2130, @"com.apple.MobileActivation.ErrorDomain", -1, v24, @"Failed to create ref key.");
    id v40 = v24;
LABEL_38:

    id v9 = 0;
    id v11 = 0;
    id v12 = 0;
    id v67 = 0;
    id v68 = 0;
    id v69 = 0;
    v65 = 0;
    SecCertificateRef v66 = 0;
    id v14 = 0;
    id v15 = 0;
    id v16 = 0;
    id v5 = 0;
    id v64 = 0;
LABEL_48:
    CFDataRef v37 = 0;
    goto LABEL_49;
  }
  id v79 = v24;
  id v13 = (__SecKey *)security_create_attestation((uint64_t)v13, (uint64_t)v11, (NSError **)&v79);
  id v25 = v79;

  if (!v13)
  {
    id v10 = createMobileActivationError((uint64_t)"create_activation_info", 2138, @"com.apple.MobileActivation.ErrorDomain", -11, v25, @"Failed to attest ref key to UIK.");
    id v40 = v25;
    goto LABEL_38;
  }
  id v78 = v25;
  id v14 = copy_uik_certificate_info(v6, &v78);
  id v26 = v78;

  id v64 = v13;
  if (!v14)
  {
    id v10 = createMobileActivationError((uint64_t)"create_activation_info", 2146, @"com.apple.MobileActivation.ErrorDomain", -1, v26, @"Failed to copy UIK certification info.");

    id v9 = 0;
    id v11 = 0;
    id v12 = 0;
    id v67 = 0;
    id v68 = 0;
    id v69 = 0;
    v65 = 0;
    SecCertificateRef v66 = 0;
    id v13 = 0;
LABEL_45:
    id v15 = 0;
LABEL_46:
    id v16 = 0;
LABEL_47:
    id v5 = 0;
    goto LABEL_48;
  }
  id v77 = v26;
  id v28 = copy_device_id_info(v27, (NSError **)&v77);
  id v29 = v77;

  SecCertificateRef v66 = v14;
  if (!v28)
  {
    id v10 = createMobileActivationError((uint64_t)"create_activation_info", 2154, @"com.apple.MobileActivation.ErrorDomain", -1, v29, @"Failed to copy device id info.");

    id v9 = 0;
    id v11 = 0;
    id v12 = 0;
    id v67 = 0;
LABEL_42:
    id v69 = 0;
LABEL_43:
    v65 = 0;
    id v68 = 0;
    id v13 = 0;
LABEL_44:
    id v14 = 0;
    goto LABEL_45;
  }
  id v67 = v28;
  id v76 = v29;
  id v31 = copy_device_info(v30, (NSError **)&v76);
  id v32 = v76;

  id v69 = v31;
  if (!v31)
  {
    id v10 = createMobileActivationError((uint64_t)"create_activation_info", 2162, @"com.apple.MobileActivation.ErrorDomain", -1, v32, @"Failed to copy device info.");

    id v9 = 0;
    id v11 = 0;
    id v12 = 0;
    goto LABEL_42;
  }
  id v75 = v32;
  id v33 = copy_activation_request_info(v5, v6, &v75);
  id v34 = v75;

  if (!v33)
  {
    id v10 = createMobileActivationError((uint64_t)"create_activation_info", 2170, @"com.apple.MobileActivation.ErrorDomain", -1, v34, @"Failed to copy activation request info.");

    id v9 = 0;
    id v11 = 0;
    id v12 = 0;
    goto LABEL_43;
  }
  BOOL v35 = is_product_cellular();
  v65 = v33;
  if (v35)
  {
    id v74 = v34;
    id v16 = copy_baseband_request_info(v35, v36, (NSError **)&v74);
    id v54 = v74;

    id v68 = v16;
    if (!v16)
    {
      id v10 = createMobileActivationError((uint64_t)"create_activation_info", 2179, @"com.apple.MobileActivation.ErrorDomain", -1, v54, @"Failed to copy baseband request info.");

      id v9 = 0;
      id v11 = 0;
      id v12 = 0;
      id v68 = 0;
      id v13 = 0;
      id v14 = 0;
      id v15 = 0;
      goto LABEL_47;
    }
    id v34 = v54;
  }
  else
  {
    id v68 = 0;
  }
  id v73 = v34;
  id v13 = (__SecKey *)copy_regulatory_images_request_info((NSError **)&v73);
  id v41 = v73;

  if (!v13)
  {
    id v10 = createMobileActivationError((uint64_t)"create_activation_info", 2188, @"com.apple.MobileActivation.ErrorDomain", -1, v41, @"Failed to copy regulatory images request info.");

    id v9 = 0;
    id v11 = 0;
    id v12 = 0;
    goto LABEL_44;
  }
  id v14 = copy_software_update_request_info();
  id v42 = v41;

  if (!v14)
  {
    id v10 = createMobileActivationError((uint64_t)"create_activation_info", 2196, @"com.apple.MobileActivation.ErrorDomain", -1, v42, @"Failed to copy managed update request info.");

    id v9 = 0;
    id v11 = 0;
    id v12 = 0;
    goto LABEL_45;
  }
  id v72 = v42;
  id v15 = create_cert_request(v5, &v72);
  id v43 = v72;

  if (!v15)
  {
    id v10 = createMobileActivationError((uint64_t)"create_activation_info", 2203, @"com.apple.MobileActivation.ErrorDomain", -1, v43, @"Failed to create certificate request.");

    id v9 = 0;
    id v11 = 0;
    id v12 = 0;
    goto LABEL_46;
  }
  v87[0] = @"DeviceID";
  v87[1] = @"DeviceInfo";
  v88[0] = v67;
  v88[1] = v69;
  v87[2] = @"ActivationRequestInfo";
  v87[3] = @"RegulatoryImages";
  v88[2] = v33;
  v88[3] = v13;
  v87[4] = @"SoftwareUpdateRequestInfo";
  v87[5] = @"DeviceCertRequest";
  v88[4] = v14;
  v88[5] = v15;
  v87[6] = @"UIKCertification";
  v88[6] = v66;
  id v44 = +[NSDictionary dictionaryWithObjects:v88 forKeys:v87 count:7];
  id v11 = +[NSMutableDictionary dictionaryWithDictionary:v44];

  if (v68) {
    [(NSMutableDictionary *)v11 setObject:v68 forKeyedSubscript:@"BasebandRequestInfo"];
  }
  id v45 = [v6 objectForKeyedSubscript:@"ActivationLockInfo"];
  id v46 = isNSString(v45);

  if (v46)
  {
    id v47 = [v6 objectForKeyedSubscript:@"ActivationLockInfo"];
    [(NSMutableDictionary *)v11 setObject:v47 forKeyedSubscript:@"ActivationLockInfo"];
  }
  id v71 = 0;
  id v12 = +[NSPropertyListSerialization dataWithPropertyList:v11 format:100 options:0 error:&v71];
  id v10 = (NSError *)v71;

  if (!v12)
  {
    unsigned __int8 v56 = createMobileActivationError((uint64_t)"create_activation_info", 2232, @"com.apple.MobileActivation.ErrorDomain", -1, v10, @"Could not convert dictionary to xml data.");

    id v9 = 0;
    id v16 = 0;
    id v5 = 0;
    CFDataRef v37 = 0;
LABEL_73:
    id v10 = v56;
    goto LABEL_49;
  }
  CFDataRef v37 = SecKeyCreateSignature(v59, kSecKeyAlgorithmECDSASignatureMessageX962SHA256, (CFDataRef)v12, &error);
  if (!v37)
  {
    unsigned __int8 v56 = createMobileActivationError((uint64_t)"create_activation_info", 2240, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to sign activation data with ref key.");

    id v9 = 0;
    id v16 = 0;
LABEL_72:
    id v5 = 0;
    goto LABEL_73;
  }
  id v16 = malloc_type_malloc(0x23uLL, 0x9D46A7E2uLL);
  if (!v16)
  {
    unsigned __int8 v56 = createMobileActivationError((uint64_t)"create_activation_info", 2248, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate sha1 digest memory.");

    id v9 = 0;
    goto LABEL_72;
  }
  id v12 = v12;
  [(NSData *)v12 bytes];
  [(NSData *)v12 length];
  CFDataRef v55 = v16;
  if (CCDigest())
  {
    MobileActivationError = createMobileActivationError((uint64_t)"create_activation_info", 2258, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to digest data.");
LABEL_76:
    id v53 = MobileActivationError;

    id v9 = 0;
    id v16 = 0;
LABEL_77:
    id v5 = 0;
    goto LABEL_78;
  }
  void *v16 = 0xE2B050609302130;
  *((_DWORD *)v16 + 2) = 85590531;
  *((_WORD *)v16 + 6) = 1024;
  *((unsigned char *)v16 + 14) = 20;
  wyjYwk((uint64_t)v16, 35, (uint64_t)v90, (uint64_t)&v84, (uint64_t)v89, (uint64_t)&v83);
  if (v49)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"create_activation_info", 2291, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to compute activation signature: %ld", v49);
    goto LABEL_76;
  }
  id v50 = objc_alloc((Class)NSData);
  id v16 = [v50 initWithBytes:v90 length:v84];
  if (!v16)
  {
    id v53 = createMobileActivationError((uint64_t)"create_activation_info", 2298, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to encode activation signature.");

    id v9 = 0;
    goto LABEL_77;
  }
  id v51 = objc_alloc((Class)NSData);
  id v52 = [v51 initWithBytes:v89 length:v83];
  id v5 = v52;
  if (v52)
  {
    v85[0] = @"ActivationInfoXML";
    v85[1] = @"FairPlaySignature";
    v86[0] = v12;
    v86[1] = v16;
    int v85[2] = @"FairPlayCertChain";
    v85[3] = @"RKCertification";
    v86[2] = v52;
    v86[3] = v64;
    v85[4] = @"RKSignature";
    v86[4] = v37;
    id v9 = +[NSDictionary dictionaryWithObjects:v86 forKeys:v85 count:5];
    goto LABEL_79;
  }
  id v53 = createMobileActivationError((uint64_t)"create_activation_info", 2304, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to encode certificate chain.");

  id v9 = 0;
LABEL_78:
  id v10 = v53;
LABEL_79:
  free(v55);
LABEL_49:
  CFRelease(cf);
  CFRelease(v58);
  if (v59) {
    CFRelease(v59);
  }
LABEL_30:
  if (error) {
    CFRelease(error);
  }
  CFErrorRef error = 0;
  if (v70 && !v9) {
    *id v70 = v10;
  }
  uint64_t v38 = v9;

  return v38;
}

NSDictionary *copy_activation_request_info(void *a1, id a2, void *a3)
{
  id v5 = a2;
  id v6 = data_ark_copy(a1, 0, @"ActivationState");
  if (v6)
  {
    id v7 = [v5 objectForKeyedSubscript:@"ActivationRandomness"];
    id v8 = isNSString(v7);

    if (v8)
    {
      v14[0] = @"FMiPAccountExists";
      id v9 = +[NSNumber numberWithBool:FindMyDeviceIsEnabled(0)];
      v15[0] = v9;
      v15[1] = v6;
      v14[1] = @"ActivationState";
      v14[2] = @"ActivationRandomness";
      v15[2] = v7;
      id v10 = +[NSDictionary dictionaryWithObjects:v15 forKeys:v14 count:3];

      id v11 = 0;
      if (!a3) {
        goto LABEL_10;
      }
    }
    else
    {
      id v11 = createMobileActivationError((uint64_t)"copy_activation_request_info", 1740, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid nonce.");
      id v10 = 0;
      if (!a3) {
        goto LABEL_10;
      }
    }
  }
  else
  {
    id v11 = createMobileActivationError((uint64_t)"copy_activation_request_info", 1731, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to lookup activation state.");
    id v10 = 0;
    id v7 = 0;
    if (!a3) {
      goto LABEL_10;
    }
  }
  if (!v10) {
    *a3 = v11;
  }
LABEL_10:
  id v12 = v10;

  return v12;
}

id copy_regulatory_images_request_info(NSError **a1)
{
  id v2 = +[GestaltHlpr getSharedInstance];
  id v11 = 0;
  id v3 = [v2 copyRegulatoryImagesInfo:&v11];
  id v4 = v11;

  if (v3) {
    BOOL v5 = v4 == 0;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    id v8 = v3;
    id v7 = 0;
  }
  else
  {
    id v6 = createMobileActivationError((uint64_t)"copy_regulatory_images_request_info", 1700, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to regulatory images info: %@", v4);
    id v7 = v6;
    if (a1)
    {
      id v7 = v6;
      id v8 = 0;
      *a1 = v7;
    }
    else
    {
      id v8 = 0;
    }
  }
  id v9 = v8;

  return v9;
}

NSDictionary *copy_software_update_request_info()
{
  CFStringRef v2 = @"Enabled";
  id v3 = &__kCFBooleanTrue;
  id v0 = +[NSDictionary dictionaryWithObjects:&v3 forKeys:&v2 count:1];

  return v0;
}

NSDictionary *create_activation_info_legacy(uint64_t a1)
{
  os_log_t v1 = (void *)__chkstk_darwin(a1);
  id v41 = v2;
  id v4 = v3;
  id v5 = v1;
  id v6 = v4;
  long long v56 = 0uLL;
  int v57 = 0;
  memset(v55, 0, 35);
  memset(v54, 0, sizeof(v54));
  unsigned int v50 = 256;
  bzero(v53, 0x1000uLL);
  unsigned int v49 = 4096;
  id v37 = v6;
  id v38 = v5;
  if (!v5)
  {
    id v19 = createMobileActivationError((uint64_t)"create_activation_info_legacy", 2358, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    id v8 = 0;
    id v9 = 0;
    uint64_t v20 = 0;
LABEL_13:
    id v21 = 0;
    SecAccessControlRef v22 = 0;
    id v39 = 0;
    id v40 = 0;
    id v12 = 0;
LABEL_14:
    id v17 = 0;
LABEL_15:
    id v23 = 0;
    goto LABEL_16;
  }
  id v7 = objc_alloc_init((Class)NSMutableDictionary);
  id v8 = v7;
  if (!v7)
  {
    id v19 = createMobileActivationError((uint64_t)"create_activation_info_legacy", 2365, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create dictionary.");
    id v9 = 0;
LABEL_12:
    uint64_t v20 = 0;
    id v5 = 0;
    goto LABEL_13;
  }
  id v48 = 0;
  id v9 = (NSData *)copy_device_id_info((uint64_t)v7, (NSError **)&v48);
  id v10 = v48;
  id v11 = v10;
  if (!v9)
  {
    id v19 = createMobileActivationError((uint64_t)"create_activation_info_legacy", 2373, @"com.apple.MobileActivation.ErrorDomain", -1, v10, @"Failed to copy device id info.");

    goto LABEL_12;
  }
  id v40 = v9;
  id v47 = v10;
  id v12 = (NSDictionary *)copy_device_info((uint64_t)v10, (NSError **)&v47);
  id v13 = v47;

  if (!v12)
  {
    id v19 = createMobileActivationError((uint64_t)"create_activation_info_legacy", 2381, @"com.apple.MobileActivation.ErrorDomain", -1, v13, @"Failed to copy device info.");

    id v9 = 0;
    uint64_t v20 = 0;
    id v5 = 0;
    id v21 = 0;
    SecAccessControlRef v22 = 0;
    id v39 = 0;
    goto LABEL_14;
  }
  id v39 = v12;
  id v46 = v13;
  id v12 = copy_activation_request_info(v5, v6, &v46);
  id v14 = v46;

  if (!v12)
  {
    id v19 = createMobileActivationError((uint64_t)"create_activation_info_legacy", 2389, @"com.apple.MobileActivation.ErrorDomain", -1, v14, @"Failed to copy activation request info.");

    id v9 = 0;
    uint64_t v20 = 0;
    id v5 = 0;
    id v21 = 0;
    SecAccessControlRef v22 = 0;
    goto LABEL_14;
  }
  BOOL v15 = is_product_cellular();
  if (!v15)
  {
    id v17 = 0;
    goto LABEL_25;
  }
  id v45 = v14;
  id v17 = copy_baseband_request_info(v15, v16, (NSError **)&v45);
  id v18 = v45;

  if (!v17)
  {
    id v19 = createMobileActivationError((uint64_t)"create_activation_info_legacy", 2398, @"com.apple.MobileActivation.ErrorDomain", -1, v18, @"Failed to copy baseband request info.");

    id v9 = 0;
    uint64_t v20 = 0;
    id v5 = 0;
    id v21 = 0;
    SecAccessControlRef v22 = 0;
    goto LABEL_15;
  }
  id v14 = v18;
LABEL_25:
  id v44 = v14;
  id v23 = copy_regulatory_images_request_info((NSError **)&v44);
  id v26 = v44;

  if (v23)
  {
    id v43 = v26;
    uint64_t v20 = create_cert_request(v5, &v43);
    id v27 = v43;

    if (v20)
    {
      [v8 addEntriesFromDictionary:v40];
      [v8 addEntriesFromDictionary:v39];
      [v8 addEntriesFromDictionary:v12];
      [v8 addEntriesFromDictionary:v23];
      if (v17) {
        [v8 addEntriesFromDictionary:v17];
      }
      [v8 setObject:v20 forKeyedSubscript:@"DeviceCertRequest"];
      id v42 = 0;
      id v9 = +[NSPropertyListSerialization dataWithPropertyList:v8 format:100 options:0 error:&v42];
      id v19 = (NSError *)v42;

      if (v9)
      {
        id v9 = v9;
        [(NSData *)v9 bytes];
        [(NSData *)v9 length];
        if (CCDigest())
        {
          id v28 = @"Failed to digest data.";
          uint64_t v29 = 2442;
        }
        else
        {
          *(void *)&v55[0] = 0xE2B050609302130;
          DWORD2(v55[0]) = 85590531;
          WORD6(v55[0]) = 1024;
          BYTE14(v55[0]) = 20;
          *(_OWORD *)((char *)v55 + 15) = v56;
          *(_DWORD *)((char *)&v55[1] + 15) = v57;
          wyjYwk((uint64_t)v55, 35, (uint64_t)v54, (uint64_t)&v50, (uint64_t)v53, (uint64_t)&v49);
          if (!v31)
          {
            id v32 = objc_alloc((Class)NSData);
            id v5 = [v32 initWithBytes:v54 length:v50];
            if (v5)
            {
              id v33 = objc_alloc((Class)NSData);
              id v34 = [v33 initWithBytes:v53 length:v49];
              id v21 = v34;
              if (v34)
              {
                v51[0] = @"ActivationInfoXML";
                v51[1] = @"FairPlaySignature";
                v52[0] = v9;
                v52[1] = v5;
                v51[2] = @"FairPlayCertChain";
                v51[3] = @"ActivationInfoComplete";
                v52[2] = v34;
                v52[3] = &__kCFBooleanTrue;
                SecAccessControlRef v22 = +[NSDictionary dictionaryWithObjects:v52 forKeys:v51 count:4];
                goto LABEL_16;
              }
              uint64_t v36 = createMobileActivationError((uint64_t)"create_activation_info_legacy", 2489, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to encode certificate chain.");

              goto LABEL_42;
            }
            uint64_t v36 = createMobileActivationError((uint64_t)"create_activation_info_legacy", 2483, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to encode activation signature.");

LABEL_41:
            id v21 = 0;
LABEL_42:
            SecAccessControlRef v22 = 0;
            id v19 = v36;
            goto LABEL_16;
          }
          uint64_t v35 = v31;
          id v28 = @"Failed to compute activation signature: %ld";
          uint64_t v29 = 2476;
        }
        MobileActivationError = createMobileActivationError((uint64_t)"create_activation_info_legacy", v29, @"com.apple.MobileActivation.ErrorDomain", -1, 0, v28, v35);
      }
      else
      {
        MobileActivationError = createMobileActivationError((uint64_t)"create_activation_info_legacy", 2433, @"com.apple.MobileActivation.ErrorDomain", -1, v19, @"Could not convert dictionary to xml data.");
      }
      uint64_t v36 = MobileActivationError;

      id v5 = 0;
      goto LABEL_41;
    }
    id v19 = createMobileActivationError((uint64_t)"create_activation_info_legacy", 2414, @"com.apple.MobileActivation.ErrorDomain", -1, v27, @"Failed to create certificate request.");

    id v9 = 0;
  }
  else
  {
    id v19 = createMobileActivationError((uint64_t)"create_activation_info_legacy", 2407, @"com.apple.MobileActivation.ErrorDomain", -1, v26, @"Failed to copy regulatory images request info.");

    id v9 = 0;
    uint64_t v20 = 0;
  }
  id v5 = 0;
  id v21 = 0;
  SecAccessControlRef v22 = 0;
LABEL_16:
  if (v41 && !v22) {
    *id v41 = v19;
  }
  id v24 = v22;

  return v24;
}

NSDictionary *create_baseband_info(void *a1, __SecKey *a2, __SecCertificate *a3, __SecCertificate *a4, void *a5, void *a6)
{
  id v10 = a1;
  CFErrorRef error = 0;
  id v40 = a5;
  id v41 = v10;
  if (!v10 || !a2 || !a3 || !a4)
  {
    uint64_t v29 = createMobileActivationError((uint64_t)"create_baseband_info", 2527, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    id v32 = 0;
    id v27 = 0;
    id v28 = 0;
    CFDataRef v13 = 0;
    CFDataRef v17 = 0;
    id v18 = 0;
    CFDataRef v31 = 0;
    id v14 = 0;
    CFDataRef v38 = 0;
    CFDataRef v39 = 0;
    id v11 = 0;
    goto LABEL_31;
  }
  id v11 = objc_alloc_init((Class)NSMutableData);
  if (!v11)
  {
    uint64_t v29 = createMobileActivationError((uint64_t)"create_baseband_info", 2535, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create data.");
    id v32 = 0;
    id v27 = 0;
    id v28 = 0;
    CFDataRef v13 = 0;
LABEL_20:
    CFDataRef v17 = 0;
    id v18 = 0;
    CFDataRef v31 = 0;
    id v14 = 0;
    CFDataRef v38 = 0;
    CFDataRef v39 = 0;
    goto LABEL_31;
  }
  CFDataRef v12 = SecCertificateCopyData(a3);
  CFDataRef v13 = v12;
  if (!v12)
  {
    uint64_t v29 = createMobileActivationError((uint64_t)"create_baseband_info", 2541, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy certificate data.");
    id v32 = 0;
    id v27 = 0;
    id v28 = 0;
    goto LABEL_20;
  }
  id v48 = 0;
  id v14 = lockcrypto_create_pem(v12, "CERTIFICATE", &v48);
  id v15 = v48;
  CFDataRef v39 = v13;
  if (!v14)
  {
    uint64_t v29 = createMobileActivationError((uint64_t)"create_baseband_info", 2547, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create PEM data.");

    id v32 = 0;
    id v27 = 0;
    id v28 = 0;
    CFDataRef v13 = 0;
    CFDataRef v17 = 0;
LABEL_23:
    id v18 = 0;
    CFDataRef v31 = 0;
    CFDataRef v38 = 0;
    goto LABEL_31;
  }
  [v11 appendData:v14];
  CFDataRef v16 = SecCertificateCopyData(a4);
  CFDataRef v17 = v16;
  if (!v16)
  {
    uint64_t v29 = createMobileActivationError((uint64_t)"create_baseband_info", 2555, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy certificate data.");

    id v32 = 0;
    id v27 = 0;
    id v28 = 0;
    CFDataRef v13 = 0;
    goto LABEL_23;
  }
  id v47 = v15;
  id v18 = lockcrypto_create_pem(v16, "CERTIFICATE", &v47);
  id v19 = v47;

  CFDataRef v38 = v17;
  if (!v18)
  {
    uint64_t v29 = createMobileActivationError((uint64_t)"create_baseband_info", 2561, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create PEM data.");

    id v32 = 0;
    id v27 = 0;
    id v28 = 0;
    CFDataRef v13 = 0;
    CFDataRef v17 = 0;
    CFDataRef v31 = 0;
    id v14 = 0;
    goto LABEL_31;
  }
  id v20 = [@"\n" dataUsingEncoding:4];
  [v11 appendData:v20];

  id v46 = v19;
  CFDataRef v17 = (CFDataRef)copy_device_id_info((uint64_t)[v11 appendData:v18], (NSError **)&v46);
  id v21 = v46;

  if (!v17)
  {
    uint64_t v29 = createMobileActivationError((uint64_t)"create_baseband_info", 2572, @"com.apple.MobileActivation.ErrorDomain", -1, v21, @"Failed to copy device id info.");

    id v32 = 0;
    id v27 = 0;
    id v28 = 0;
    CFDataRef v13 = 0;
    id v14 = v18;
    id v18 = 0;
    CFDataRef v31 = 0;
    goto LABEL_31;
  }
  id v37 = v18;
  id v45 = v21;
  id v18 = (char *)copy_device_info(v22, (NSError **)&v45);
  id v23 = v45;

  if (!v18)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"create_baseband_info", 2580, @"com.apple.MobileActivation.ErrorDomain", -1, v23, @"Failed to copy device info.");
LABEL_28:
    uint64_t v29 = MobileActivationError;

    id v32 = 0;
    id v27 = 0;
    id v28 = 0;
    CFDataRef v13 = 0;
LABEL_29:
    CFDataRef v31 = 0;
    goto LABEL_30;
  }
  BOOL v24 = is_product_cellular();
  if (!v24)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"create_baseband_info", 2587, @"com.apple.MobileActivation.ErrorDomain", -3, v23, @"Device doesn't support telephony.");
    goto LABEL_28;
  }
  id v44 = v23;
  CFDataRef v13 = (CFDataRef)copy_baseband_request_info(v24, v25, (NSError **)&v44);
  id v26 = v44;

  if (!v13)
  {
    uint64_t v29 = createMobileActivationError((uint64_t)"create_baseband_info", 2593, @"com.apple.MobileActivation.ErrorDomain", -1, v26, @"Failed to copy baseband request info.");

    id v32 = 0;
    id v27 = 0;
    id v28 = 0;
    goto LABEL_29;
  }
  v52[0] = @"BasebandRequestInfo";
  v52[1] = @"DeviceID";
  v53[0] = v13;
  v53[1] = v17;
  v52[2] = @"DeviceInfo";
  v53[2] = v18;
  id v27 = +[NSDictionary dictionaryWithObjects:v53 forKeys:v52 count:3];
  id v43 = 0;
  id v28 = +[NSPropertyListSerialization dataWithPropertyList:v27 format:100 options:0 error:&v43];
  uint64_t v29 = (NSError *)v43;

  if (!v28)
  {
    uint64_t v36 = createMobileActivationError((uint64_t)"create_baseband_info", 2606, @"com.apple.MobileActivation.ErrorDomain", -1, v29, @"Could not convert dictionary to xml data.");

    id v32 = 0;
    CFDataRef v31 = 0;
LABEL_40:
    uint64_t v29 = v36;
    goto LABEL_30;
  }
  CFDataRef v30 = SecKeyCreateSignature(a2, kSecKeyAlgorithmECDSASignatureMessageX962SHA256, (CFDataRef)v28, &error);
  CFDataRef v31 = v30;
  if (!v30)
  {
    uint64_t v36 = createMobileActivationError((uint64_t)"create_baseband_info", 2614, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to sign baseband data with ref key.");

    id v32 = 0;
    goto LABEL_40;
  }
  v50[0] = @"ActivationInfoXML";
  v50[1] = @"RKCertification";
  v51[0] = v28;
  v51[1] = v11;
  v50[2] = @"RKSignature";
  v51[2] = v30;
  id v32 = +[NSDictionary dictionaryWithObjects:v51 forKeys:v50 count:3];
LABEL_30:
  id v14 = v37;
LABEL_31:
  if (error) {
    CFRelease(error);
  }
  CFErrorRef error = 0;
  if (a6 && !v32) {
    *a6 = v29;
  }
  id v34 = v32;

  return v34;
}

uint64_t valid_ucrt_and_uik_legacy(uint64_t a1, void *a2, void *a3)
{
  if (!a1 || !a2)
  {
    id v9 = createMobileActivationError((uint64_t)"valid_ucrt_and_uik_legacy", 2866, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    id v5 = 0;
    goto LABEL_10;
  }
  id v17 = 0;
  id v5 = libaks_ref_key_get_public(a2, (NSError **)&v17);
  id v6 = v17;
  if (!v5)
  {
    id v9 = createMobileActivationError((uint64_t)"valid_ucrt_and_uik_legacy", 2874, @"com.apple.MobileActivation.ErrorDomain", -1, v6, @"Failed to retrieve UIK public key.");

LABEL_10:
    id v8 = 0;
    CFDataRef v10 = 0;
    if (!a3) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  uint64_t v18 = a1;
  id v7 = +[NSArray arrayWithObjects:&v18 count:1];
  id v16 = v6;
  id v8 = lockcrypto_extract_public(v7, (NSError **)&v16);
  id v9 = (NSError *)v16;

  if (v8)
  {
    CFDataRef v10 = SecKeyCopyExternalRepresentation(v8, 0);
    if (v10)
    {
      if ([v5 isEqualToData:v10])
      {
        uint64_t v11 = 1;
LABEL_13:
        CFRelease(v8);
        uint64_t v12 = v11;
        goto LABEL_14;
      }
      MobileActivationError = createMobileActivationError((uint64_t)"valid_ucrt_and_uik_legacy", 2895, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"UCRT public key does not match UIK public key.");
    }
    else
    {
      MobileActivationError = createMobileActivationError((uint64_t)"valid_ucrt_and_uik_legacy", 2888, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to encode UCRT public key as data.");
    }
    id v14 = MobileActivationError;
  }
  else
  {
    id v14 = createMobileActivationError((uint64_t)"valid_ucrt_and_uik_legacy", 2882, @"com.apple.MobileActivation.ErrorDomain", -1, v9, @"Failed to retrieve UCRT public key.");

    CFDataRef v10 = 0;
  }
  id v9 = v14;
  if (a3) {
LABEL_11:
  }
    *a3 = v9;
LABEL_12:
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  if (v8) {
    goto LABEL_13;
  }
LABEL_14:

  return v12;
}

uint64_t valid_ucrt_and_uik(__SecCertificate *a1, SecKeyRef key, NSError **a3)
{
  id v4 = a1;
  CFErrorRef error = 0;
  if (!a1)
  {
    CFDataRef v10 = createMobileActivationError((uint64_t)"valid_ucrt_and_uik", 2931, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid ucrt.");
    CFDataRef v7 = 0;
    id v6 = 0;
    goto LABEL_14;
  }
  if (!key)
  {
    CFDataRef v10 = createMobileActivationError((uint64_t)"valid_ucrt_and_uik", 2943, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid UIK.");
    CFDataRef v7 = 0;
    id v6 = 0;
LABEL_13:
    id v4 = 0;
    goto LABEL_14;
  }
  id v5 = SecKeyCopyPublicKey(key);
  id v6 = v5;
  if (!v5)
  {
    CFDataRef v10 = createMobileActivationError((uint64_t)"valid_ucrt_and_uik", 2951, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy UIK public key.");
    CFDataRef v7 = 0;
    goto LABEL_13;
  }
  CFDataRef v7 = SecKeyCopyExternalRepresentation(v5, &error);
  if (!v7)
  {
    CFDataRef v10 = createMobileActivationError((uint64_t)"valid_ucrt_and_uik", 2957, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to copy UIK public key buffer.");
    goto LABEL_13;
  }
  id v8 = SecCertificateCopyKey(v4);
  id v4 = v8;
  if (v8)
  {
    CFDataRef v9 = SecKeyCopyExternalRepresentation(v8, 0);
    if (v9)
    {
      if ([(__CFData *)v7 isEqualToData:v9])
      {
        CFDataRef v10 = 0;
        uint64_t v11 = 1;
        goto LABEL_21;
      }
      MobileActivationError = createMobileActivationError((uint64_t)"valid_ucrt_and_uik", 2979, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"UCRT public key does not match UIK public key.");
    }
    else
    {
      MobileActivationError = createMobileActivationError((uint64_t)"valid_ucrt_and_uik", 2972, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to encode UCRT public key as data.");
    }
    CFDataRef v10 = MobileActivationError;
    if (!a3) {
      goto LABEL_20;
    }
LABEL_15:
    CFDataRef v10 = v10;
    uint64_t v11 = 0;
    *a3 = v10;
    goto LABEL_21;
  }
  CFDataRef v10 = createMobileActivationError((uint64_t)"valid_ucrt_and_uik", 2966, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve UCRT public key.");
LABEL_14:
  CFDataRef v9 = 0;
  if (a3) {
    goto LABEL_15;
  }
LABEL_20:
  uint64_t v11 = 0;
LABEL_21:
  if (error) {
    CFRelease(error);
  }
  CFErrorRef error = 0;
  if (v6) {
    CFRelease(v6);
  }
  if (v4) {
    CFRelease(v4);
  }

  return v11;
}

BOOL data_ark_register_set_notification(void *a1, void *a2, void *a3, void *a4, int a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  uint64_t v23 = 0;
  BOOL v24 = &v23;
  uint64_t v25 = 0x2020000000;
  char v26 = 0;
  if (v9)
  {
    CFDataRef v13 = [v9 queue];
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3254779904;
    v16[2] = __data_ark_register_set_notification_block_invoke;
    v16[3] = &__block_descriptor_76_e8_32s40s48s56s64r_e5_v8__0l;
    int v22 = a5;
    id v21 = &v23;
    id v17 = v9;
    id v18 = v10;
    id v19 = v11;
    id v20 = v12;
    dispatch_barrier_sync(v13, v16);

    BOOL v14 = *((unsigned char *)v24 + 24) != 0;
  }
  else
  {
    BOOL v14 = 0;
  }
  _Block_object_dispose(&v23, 8);

  return v14;
}

void sub_10000EF60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __data_ark_register_set_notification_block_invoke(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 72) & 8) != 0)
  {
    id v2 = [*(id *)(a1 + 32) change_notifications];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = _register_notification(v2, *(void **)(a1 + 40), *(void **)(a1 + 48), *(void **)(a1 + 56));
  }
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
  {
    if ((*(unsigned char *)(a1 + 72) & 2) == 0
      || (id v3 = objc_msgSend(*(id *)(a1 + 32), "set_notifications"),
          *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = _register_notification(v3, *(void **)(a1 + 40), *(void **)(a1 + 48), *(void **)(a1 + 56)), v3, !*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24)))
    {
      if ((*(unsigned char *)(a1 + 72) & 4) != 0)
      {
        id v4 = [[*(id *)(a1 + 32) remove_notifications];
        *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = _register_notification(v4, *(void **)(a1 + 40), *(void **)(a1 + 48), *(void **)(a1 + 56));
      }
    }
  }
}

__CFString *_register_notification(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  id v11 = v10;
  if (v7 && v10)
  {
    id v12 = _create_mapkey(v8, v9);
    if (v12)
    {
      [v7 setObject:v11 forKeyedSubscript:v12];

      id v12 = (__CFString *)1;
    }
    else
    {
      maLog((uint64_t)"_register_notification", 0, @"failed to create mapkey for %@-%@", v8, v9);
    }
  }
  else
  {
    maLog((uint64_t)"_register_notification", 0, @"invalid inputs");
    id v12 = 0;
  }

  return v12;
}

void __copy_helper_block_e8_32s40s48s56s64r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  id v8 = *(const void **)(a2 + 64);

  _Block_object_assign((void *)(a1 + 64), v8, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 64), 8);

  id v2 = *(void **)(a1 + 32);
}

BOOL data_ark_set(void *a1, void *a2, void *a3, void *a4, char a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  uint64_t v23 = 0;
  BOOL v24 = &v23;
  uint64_t v25 = 0x2020000000;
  char v26 = 0;
  if (v9)
  {
    CFDataRef v13 = [v9 queue];
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3254779904;
    v16[2] = __data_ark_set_block_invoke;
    v16[3] = &__block_descriptor_73_e8_32s40s48s56s64r_e5_v8__0l;
    id v17 = v9;
    id v18 = v12;
    id v19 = v10;
    char v22 = a5;
    id v20 = v11;
    id v21 = &v23;
    dispatch_barrier_sync(v13, v16);

    BOOL v14 = *((unsigned char *)v24 + 24) != 0;
  }
  else
  {
    BOOL v14 = 0;
  }
  _Block_object_dispose(&v23, 8);

  return v14;
}

void sub_10000F3E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __data_ark_set_block_invoke(uint64_t a1)
{
  id v2 = (NSMutableDictionary *)[*(id *)(a1 + 32) path];
  id v3 = load_dict(v2);

  if (!*(void *)(a1 + 40))
  {
    maLog((uint64_t)"data_ark_set_block_invoke", 0, @"invalid value");
    goto LABEL_34;
  }
  id v4 = [*(id *)(a1 + 32) store];

  if (!v4) {
    goto LABEL_34;
  }
  if (!v3) {
    id v3 = (NSMutableDictionary *)objc_alloc_init((Class)NSMutableDictionary);
  }
  id v5 = _create_mapkey(*(void **)(a1 + 48), *(void **)(a1 + 56));
  id v6 = _create_mapkey(*(void **)(a1 + 48), 0);
  id v7 = [*(id *)(a1 + 32) store];
  id v8 = [v7 objectForKeyedSubscript:v5];

  BOOL v9 = !v8 || ([v8 isEqual:*(void *)(a1 + 40)] & 1) == 0;
  uint64_t v10 = *(void *)(a1 + 40);
  id v11 = [*(id *)(a1 + 32) store];
  [v11 setObject:v10 forKeyedSubscript:v5];

  if (*(unsigned char *)(a1 + 72)) {
    goto LABEL_11;
  }
  id v18 = [(NSMutableDictionary *)v3 objectForKey:v5];

  if (v18)
  {
    if (!*(unsigned char *)(a1 + 72))
    {
      [(NSMutableDictionary *)v3 removeObjectForKey:v5];
      goto LABEL_12;
    }
LABEL_11:
    [(NSMutableDictionary *)v3 setObject:*(void *)(a1 + 40) forKey:v5];
LABEL_12:
    id v12 = [*(id *)(a1 + 32) path];
    store_dict(v12, v3, 0);
  }
  if (v9)
  {
    id v13 = [*(id *)(a1 + 32) change_notifications];

    if (v13)
    {
      id v14 = [*(id *)(a1 + 32) change_notifications];
      id v15 = [v14 objectForKeyedSubscript:v5];

      if (v15) {
        [*(id *)(a1 + 32) postNotification:v15];
      }
      if (v6)
      {
        id v16 = [*(id *)(a1 + 32) change_notifications];
        id v17 = [v16 objectForKeyedSubscript:v6];

        if (v17)
        {
          [*(id *)(a1 + 32) postNotification:v17];
          id v15 = v17;
        }
        else
        {
          id v15 = 0;
        }
      }
    }
  }
  id v19 = [*(id *)(a1 + 32) set_notifications];

  if (v19)
  {
    id v20 = [*(id *)(a1 + 32) set_notifications];
    id v21 = [v20 objectForKeyedSubscript:v5];

    if (v21) {
      [*(id *)(a1 + 32) postNotification:v21];
    }
    if (v6)
    {
      id v22 = [*(id *)(a1 + 32) set_notifications];
      id v23 = [v22 objectForKeyedSubscript:v6];

      if (v23)
      {
        [*(id *)(a1 + 32) postNotification:v23];
        id v21 = v23;
      }
      else
      {
        id v21 = 0;
      }
    }
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;

LABEL_34:
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void __copy_helper_block_e8_32s40s48s56r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(const void **)(a2 + 56);

  _Block_object_assign((void *)(a1 + 56), v7, 8);
}

void __destroy_helper_block_e8_32s40s48s56r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 56), 8);

  id v2 = *(void **)(a1 + 32);
}

void data_ark_remove(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (v5)
  {
    id v8 = [v5 queue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3254779904;
    block[2] = __data_ark_remove_block_invoke;
    block[3] = &__block_descriptor_56_e8_32s40s48s_e5_v8__0l;
    id v10 = v5;
    id v11 = v6;
    id v12 = v7;
    dispatch_barrier_sync(v8, block);
  }
}

void __data_ark_remove_block_invoke(id *a1)
{
  id v2 = (NSMutableDictionary *)[a1[4] path];
  id v3 = load_dict(v2);

  id v4 = (__CFString *)[a1[4] store];
  if (v4)
  {
    id v4 = _create_mapkey(a1[5], a1[6]);
    id v5 = [a1[4] store];
    id v6 = [v5 objectForKey:v4];

    if (v6)
    {
      id v7 = [a1[4] store];
      [v7 removeObjectForKey:v4];

      [(NSMutableDictionary *)v3 removeObjectForKey:v4];
      if (v3)
      {
        id v8 = [a1[4] path];
        store_dict(v8, v3, 0);
      }
      id v9 = [a1[4] remove_notifications];

      if (v9)
      {
        id v10 = [a1[4] remove_notifications];
        id v11 = [v10 objectForKeyedSubscript:v4];

        if (v11) {
          [a1[4] postNotification:v11];
        }
      }
    }
  }
}

id __copy_helper_block_e8_32s40s48s(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)(a2 + 32);
  id v4 = *(id *)(a2 + 40);
  id v5 = *(void **)(a2 + 48);

  return v5;
}

void __destroy_helper_block_e8_32s40s48s(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
}

BOOL data_ark_exists(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v16 = 0;
  id v17 = &v16;
  uint64_t v18 = 0x2020000000;
  char v19 = 0;
  if (v5)
  {
    id v8 = [v5 queue];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3254779904;
    v11[2] = __data_ark_exists_block_invoke;
    v11[3] = &__block_descriptor_64_e8_32s40s48s56r_e5_v8__0l;
    id v12 = v5;
    id v13 = v6;
    id v14 = v7;
    id v15 = &v16;
    dispatch_sync(v8, v11);

    BOOL v9 = *((unsigned char *)v17 + 24) != 0;
  }
  else
  {
    BOOL v9 = 0;
  }
  _Block_object_dispose(&v16, 8);

  return v9;
}

void sub_10000FCE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __data_ark_exists_block_invoke(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) store];

  if (v2)
  {
    id v3 = _create_mapkey(*(void **)(a1 + 40), *(void **)(a1 + 48));
    id v4 = [*(id *)(a1 + 32) store];
    id v5 = [v4 objectForKey:v3];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v5 != 0;
  }
}

void ___copy_domain_block_invoke(uint64_t a1, id a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v5 hasPrefix:*(void *)(a1 + 32)])
  {
    id v7 = *(void **)(a1 + 32);
    id v8 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    id v9 = [v5 substringFromIndex:[v7 length]];
    [v8 setObject:v6 forKeyedSubscript:v9];
  }
}

void __copy_helper_block_e8_32s40r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(const void **)(a2 + 40);

  _Block_object_assign((void *)(a1 + 40), v5, 8);
}

void __destroy_helper_block_e8_32s40r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 8);
  id v2 = *(void **)(a1 + 32);
}

void sub_100010B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100011D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose((const void *)(v43 - 256), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void __copy_helper_block_e8_32s40s48r56r64r72r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  _Block_object_assign((void *)(a1 + 48), *(const void **)(a2 + 48), 8);
  _Block_object_assign((void *)(a1 + 56), *(const void **)(a2 + 56), 8);
  _Block_object_assign((void *)(a1 + 64), *(const void **)(a2 + 64), 8);
  id v6 = *(const void **)(a2 + 72);

  _Block_object_assign((void *)(a1 + 72), v6, 8);
}

void __destroy_helper_block_e8_32s40s48r56r64r72r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 72), 8);
  _Block_object_dispose(*(const void **)(a1 + 64), 8);
  _Block_object_dispose(*(const void **)(a1 + 56), 8);
  _Block_object_dispose(*(const void **)(a1 + 48), 8);

  id v2 = *(void **)(a1 + 32);
}

uint64_t libInFieldCollectionLibraryCore()
{
  uint64_t v2 = 0;
  id v3 = &v2;
  uint64_t v4 = 0x2020000000;
  uint64_t v0 = libInFieldCollectionLibraryCore_frameworkLibrary;
  uint64_t v5 = libInFieldCollectionLibraryCore_frameworkLibrary;
  if (!libInFieldCollectionLibraryCore_frameworkLibrary)
  {
    long long v6 = *(_OWORD *)off_100264FF0;
    uint64_t v7 = 0;
    v3[3] = _sl_dlopen();
    libInFieldCollectionLibraryCore_frameworkLibrary = v3[3];
    uint64_t v0 = v3[3];
  }
  _Block_object_dispose(&v2, 8);
  return v0;
}

void sub_100012438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __libInFieldCollectionLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  libInFieldCollectionLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void __copy_helper_block_e8_32r(uint64_t a1, uint64_t a2)
{
}

void __destroy_helper_block_e8_32r(uint64_t a1)
{
}

void *__getvsPHbdGfSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)libInFieldCollectionLibrary();
  uint64_t result = dlsym(v2, "vsPHbdGf");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getvsPHbdGfSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t libInFieldCollectionLibrary()
{
  os_log_t v1 = 0;
  uint64_t result = libInFieldCollectionLibraryCore();
  if (!result) {
    libInFieldCollectionLibrary_cold_1(&v1);
  }
  return result;
}

void *__getZshgJnRaSlwnSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)libInFieldCollectionLibrary();
  uint64_t result = dlsym(v2, "ZshgJnRaSlwn");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getZshgJnRaSlwnSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void reply_and_disconnect(int a1, id a2, void *a3, void *a4)
{
  id v6 = a2;
  id v7 = a3;
  id v8 = a4;
  if ([v7 isEqualToString:@"Error"]) {
    maLog((uint64_t)"reply_and_disconnect", 0, @"Error occurred processing host request (%@): %@", v6, v8);
  }
  id v9 = (NSDictionary *)&__NSDictionary0__struct;
  if (v7 && v8)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v10 = [(NSString *)v8 localizedDescription];
      id v11 = [(NSString *)v8 userInfo];
      id v12 = +[NSString stringWithFormat:@"%@ (%@)", v10, v11];

      id v8 = v12;
    }
    id v14 = v7;
    id v15 = v8;
    id v9 = +[NSDictionary dictionaryWithObjects:&v15 forKeys:&v14 count:1];
  }
  uint64_t v13 = lockdown_send_message();
  if (v13) {
    maLog((uint64_t)"reply_and_disconnect", 0, @"Failed to send response message: %d", v13);
  }
  lockdown_disconnect();
}

BOOL init_lockdown_server(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = v4;
  uint64_t v10 = 0;
  id v11 = &v10;
  uint64_t v12 = 0x2020000000;
  int v13 = 0;
  if (v4 && &_lockdown_checkin_xpc)
  {
    [@"com.apple.mobileactivationd.lockdown" UTF8String];
    id v9 = v3;
    uint64_t v6 = lockdown_checkin_xpc();
    *((_DWORD *)v11 + 6) = v6;
    if (v6)
    {
      maLog((uint64_t)"init_lockdown_server", 0, @"failed to checkin with lockdown: 0x%08x", v6);
      BOOL v7 = *((_DWORD *)v11 + 6) == 0;
    }
    else
    {
      BOOL v7 = 1;
    }
  }
  else
  {
    if (v4) {
      maLog((uint64_t)"init_lockdown_server", 0, @"Platform does not support lockdown.");
    }
    else {
      maLog((uint64_t)"init_lockdown_server", 0, @"invalid input");
    }
    BOOL v7 = 0;
  }
  _Block_object_dispose(&v10, 8);

  return v7;
}

void sub_100013144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __init_lockdown_server_block_invoke(uint64_t a1, uint64_t a2, const __CFDictionary *a3)
{
  id v82 = 0;
  unsigned int v83 = 0;
  uint64_t v77 = 0;
  id v78 = &v77;
  uint64_t v79 = 0x3032000000;
  id v80 = __Block_byref_object_copy__2;
  id v81 = __Block_byref_object_dispose__2;
  uint64_t v71 = 0;
  id v72 = (id *)&v71;
  uint64_t v73 = 0x3032000000;
  id v74 = __Block_byref_object_copy__2;
  id v75 = __Block_byref_object_dispose__2;
  id v76 = 0;
  if (!a3
    || (id v6 = [(__CFDictionary *)a3 objectForKeyedSubscript:@"ClientName"],
        id v7 = isNSString(v6),
        BOOL v8 = v7 == 0,
        v7,
        v6,
        v8))
  {
    id v9 = @"unknown";
  }
  else
  {
    id v9 = (id)CFDictionaryGetValue(a3, @"ClientName");
  }
  id v10 = [*(id *)(a1 + 32) dark];
  data_ark_set(v10, 0, @"HostProcessName", v9, 0);

  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = lockdown_receive_message();
  if (!*(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    id v59 = v83;
    id v21 = isNSDictionary(v83);
    BOOL v22 = v21 == 0;

    if (v22)
    {
      objc_storeStrong(v72 + 5, @"Error");
      id v11 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke", 115, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid request.");
      id v12 = 0;
      id v13 = 0;
      id v14 = 0;
      id v15 = 0;
      id v58 = 0;
      goto LABEL_7;
    }
    id v60 = [v59 objectForKeyedSubscript:@"Command"];
    id v23 = isNSString(v60);
    BOOL v24 = v23 == 0;

    if (v24)
    {
      objc_storeStrong(v72 + 5, @"Error");
      id v11 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke", 122, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Request missing required key: %@", @"Command");
      id v12 = 0;
      id v13 = 0;
      id v14 = 0;
      id v15 = 0;
      id v58 = 0;
LABEL_31:
      uint64_t v16 = 0;
      goto LABEL_8;
    }
    id v25 = [v59 objectForKeyedSubscript:@"Options"];
    id v58 = v25;
    if (!v25) {
      goto LABEL_19;
    }
    id v26 = isNSDictionary(v25);
    BOOL v27 = v26 == 0;

    if (v27)
    {
      objc_storeStrong(v72 + 5, @"Error");
      id v37 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke", 130, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid request value for key %@.", @"Options");
      goto LABEL_28;
    }
    id v28 = [v58 objectForKeyedSubscript:@"FactoryActivation"];
    id v29 = isNSNumber(v28);

    if (v29)
    {
      id v30 = [v58 objectForKeyedSubscript:@"FactoryActivation"];
      unsigned int v31 = [v30 BOOLValue];
    }
    else
    {
LABEL_19:
      unsigned int v31 = 0;
    }
    maLog((uint64_t)"init_lockdown_server_block_invoke", 0, @"Host connection (%@): %@", v9, v60);
    if (([v60 isEqualToString:@"CreateActivationInfoRequest"] & 1) != 0
      || [v60 isEqualToString:@"CreateTunnel1ActivationInfoRequest"])
    {
      if (v31)
      {
        id v32 = *(void **)(a1 + 32);
        v70[0] = _NSConcreteStackBlock;
        v70[1] = 3254779904;
        v70[2] = __init_lockdown_server_block_invoke_2;
        v70[3] = &__block_descriptor_64_e8_32s40r48r_e34_v24__0__NSDictionary_8__NSError_16l;
        v70[5] = &v71;
        v70[6] = &v77;
        v70[7] = a2;
        v70[4] = v9;
        [v32 createActivationInfoWithCompletionBlock:v70];
        uint64_t v16 = 0;
        id v18 = 0;
        id v15 = 0;
        id v14 = 0;
        id v13 = 0;
        id v19 = 0;
        id v12 = 0;
        id v33 = v70;
      }
      else
      {
        id v34 = [v59 objectForKeyedSubscript:@"Value"];
        id v19 = isNSData(v34);

        uint64_t v35 = *(void **)(a1 + 32);
        v69[0] = _NSConcreteStackBlock;
        v69[1] = 3254779904;
        v69[2] = __init_lockdown_server_block_invoke_40;
        v69[3] = &__block_descriptor_64_e8_32s40r48r_e34_v24__0__NSDictionary_8__NSError_16l;
        v69[5] = &v71;
        v69[6] = &v77;
        v69[7] = a2;
        v69[4] = v9;
        [v35 createTunnel1ActivationInfo:v19 options:v58 withCompletionBlock:v69];
        uint64_t v16 = 0;
        id v18 = 0;
        id v15 = 0;
        id v14 = 0;
        id v13 = 0;
        id v12 = 0;
        id v33 = v69;
      }
      goto LABEL_25;
    }
    if ([v60 isEqualToString:@"HandleActivationInfoWithSessionRequest"])
    {
      id v13 = [v59 objectForKeyedSubscript:@"Value"];
      id v38 = isNSData(v13);
      BOOL v39 = v38 == 0;

      if (!v39)
      {
        id v68 = 0;
        id v12 = getActivationRecordFromData((uint64_t)v13, &v68);
        id v40 = (NSError *)v68;
        if (!v12)
        {
          unsigned int v49 = v40;
          id v67 = v40;
          id v12 = getSessionActivationRecordFromData(v13, &v67);
          uint64_t v16 = (NSError *)v67;

          if (v12)
          {
            id v50 = [v59 objectForKeyedSubscript:@"ActivationResponseHeaders"];
            id v14 = v50;
            if (!v50
              || (id v51 = isNSDictionary(v50),
                  BOOL v52 = v51 == 0,
                  v51,
                  !v52))
            {
              id v15 = [v14 objectForCaseInsensitiveKey:@"ARS"];
              id v53 = isNSString(v15);
              BOOL v54 = v53 == 0;

              if (v54)
              {
                objc_storeStrong(v72 + 5, @"Error");
                id v11 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke_2", 217, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Request contains invalid key: %@", @"ARS");
                goto LABEL_8;
              }
              id v18 = [objc_alloc((Class)NSData) initWithBase64EncodedString:v15 options:1];
              if (!v18)
              {
                int v57 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke_2", 223, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid activation signature");
                id v17 = v16;
                uint64_t v16 = v57;
                goto LABEL_9;
              }
              CFDataRef v55 = *(void **)(a1 + 32);
              v66[0] = _NSConcreteStackBlock;
              v66[1] = 3254779904;
              v66[2] = __init_lockdown_server_block_invoke_3;
              v66[3] = &__block_descriptor_64_e8_32s40r48r_e34_v24__0__NSDictionary_8__NSError_16l;
              v66[5] = &v71;
              v66[6] = &v77;
              v66[7] = a2;
              v66[4] = v9;
              [v55 handleActivationInfoWithSession:v13 activationSignature:v18 completionBlock:v66];
              id v19 = 0;
              id v33 = v66;
              goto LABEL_25;
            }
            objc_storeStrong(v72 + 5, @"Error");
            id v11 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke_2", 207, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Request contains invalid key: %@", @"ActivationResponseHeaders");
          }
          else
          {
            objc_storeStrong(v72 + 5, @"Error");
            id v11 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke_2", 196, @"com.apple.MobileActivation.ErrorDomain", -2, v16, @"Failed to extract activation record.");
            id v12 = 0;
            id v14 = 0;
          }
          id v15 = 0;
          goto LABEL_8;
        }
        uint64_t v16 = v40;
        id v41 = *(void **)(a1 + 32);
        CFStringRef v86 = @"ActivationRecord";
        id v87 = v12;
        id v42 = +[NSDictionary dictionaryWithObjects:&v87 forKeys:&v86 count:1];
        uint64_t v43 = v65;
        v65[0] = _NSConcreteStackBlock;
        v65[1] = 3254779904;
        v65[2] = __init_lockdown_server_block_invoke_4;
        v65[3] = &__block_descriptor_64_e8_32s40r48r_e34_v24__0__NSDictionary_8__NSError_16l;
        v65[5] = &v71;
        v65[6] = &v77;
        v65[7] = a2;
        v65[4] = v9;
        [v41 handleActivationInfo:v42 withCompletionBlock:v65];
LABEL_39:
        uint64_t v36 = (id *)(v43 + 4);

        id v18 = 0;
        id v15 = 0;
        id v14 = 0;
        id v19 = 0;
        goto LABEL_26;
      }
      objc_storeStrong(v72 + 5, @"Error");
      id v11 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke_2", 187, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Request missing required key: %@", @"Value");
      id v12 = 0;
      goto LABEL_30;
    }
    if ([v60 isEqualToString:@"HandleActivationInfoRequest"])
    {
      id v12 = [v59 objectForKeyedSubscript:@"Value"];
      id v44 = isNSDictionary(v12);
      BOOL v45 = v44 == 0;

      if (!v45)
      {
        id v46 = *(void **)(a1 + 32);
        CFStringRef v84 = @"ActivationRecord";
        id v85 = v12;
        id v42 = +[NSDictionary dictionaryWithObjects:&v85 forKeys:&v84 count:1];
        uint64_t v43 = v64;
        v64[0] = _NSConcreteStackBlock;
        v64[1] = 3254779904;
        v64[2] = __init_lockdown_server_block_invoke_5;
        v64[3] = &__block_descriptor_64_e8_32s40r48r_e34_v24__0__NSDictionary_8__NSError_16l;
        v64[5] = &v71;
        v64[6] = &v77;
        v64[7] = a2;
        v64[4] = v9;
        [v46 handleActivationInfo:v42 withCompletionBlock:v64];
        uint64_t v16 = 0;
        id v13 = 0;
        goto LABEL_39;
      }
      objc_storeStrong(v72 + 5, @"Error");
      id v11 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke_2", 253, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Request missing required key: %@", @"Value");
      goto LABEL_29;
    }
    if ([v60 isEqualToString:@"DeactivateRequest"])
    {
      id v47 = *(void **)(a1 + 32);
      v63[0] = _NSConcreteStackBlock;
      v63[1] = 3254779904;
      v63[2] = __init_lockdown_server_block_invoke_6;
      v63[3] = &__block_descriptor_64_e8_32s40r48r_e34_v24__0__NSDictionary_8__NSError_16l;
      v63[5] = &v71;
      v63[6] = &v77;
      v63[7] = a2;
      v63[4] = v9;
      [v47 deactivateDeviceWithCompletionBlock:v63];
      uint64_t v16 = 0;
      id v18 = 0;
      id v15 = 0;
      id v14 = 0;
      id v13 = 0;
      id v19 = 0;
      id v12 = 0;
      id v33 = v63;
LABEL_25:
      uint64_t v36 = (id *)(v33 + 4);
LABEL_26:

      goto LABEL_10;
    }
    if ([v60 isEqualToString:@"CreateTunnel1SessionInfoRequest"])
    {
      id v48 = *(void **)(a1 + 32);
      v62[0] = _NSConcreteStackBlock;
      v62[1] = 3254779904;
      v62[2] = __init_lockdown_server_block_invoke_7;
      v62[3] = &__block_descriptor_64_e8_32s40r48r_e34_v24__0__NSDictionary_8__NSError_16l;
      v62[5] = &v71;
      v62[6] = &v77;
      v62[7] = a2;
      v62[4] = v9;
      [v48 createTunnel1SessionInfoWithCompletionBlock:v62];
      uint64_t v16 = 0;
      id v18 = 0;
      id v15 = 0;
      id v14 = 0;
      id v13 = 0;
      id v19 = 0;
      id v12 = 0;
      id v33 = v62;
      goto LABEL_25;
    }
    if ([v60 isEqualToString:@"GetActivationStateRequest"])
    {
      long long v56 = *(void **)(a1 + 32);
      v61[0] = _NSConcreteStackBlock;
      v61[1] = 3254779904;
      v61[2] = __init_lockdown_server_block_invoke_8;
      v61[3] = &__block_descriptor_64_e8_32s40r48r_e34_v24__0__NSDictionary_8__NSError_16l;
      v61[5] = &v71;
      v61[6] = &v77;
      v61[7] = a2;
      v61[4] = v9;
      [v56 getActivationStateWithCompletionBlock:v61];
      uint64_t v16 = 0;
      id v18 = 0;
      id v15 = 0;
      id v14 = 0;
      id v13 = 0;
      id v19 = 0;
      id v12 = 0;
      id v33 = v61;
      goto LABEL_25;
    }
    objc_storeStrong(v72 + 5, @"Error");
    id v37 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke_2", 312, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Received unknown command: %@", v60);
LABEL_28:
    id v11 = v37;
    id v12 = 0;
LABEL_29:
    id v13 = 0;
LABEL_30:
    id v14 = 0;
    id v15 = 0;
    goto LABEL_31;
  }
  objc_storeStrong(v72 + 5, @"Error");
  id v11 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke", 108, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to receive request from host: 0x%08x", *(unsigned int *)(*(void *)(*(void *)(a1 + 40) + 8) + 24));
  id v12 = 0;
  id v13 = 0;
  id v14 = 0;
  id v15 = 0;
  id v58 = 0;
  id v59 = 0;
LABEL_7:
  uint64_t v16 = 0;
  id v60 = 0;
LABEL_8:
  id v17 = (NSError *)v78[5];
  v78[5] = (uint64_t)v11;
LABEL_9:

  reply_and_disconnect(a2, v9, v72[5], (void *)v78[5]);
  id v18 = 0;
  id v19 = 0;
LABEL_10:
  id v20 = [*(id *)(a1 + 32) dark];
  data_ark_remove(v20, 0, @"HostProcessName");

  _Block_object_dispose(&v71, 8);
  _Block_object_dispose(&v77, 8);
}

void sub_1000140C4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 232), 8);
  _Block_object_dispose((const void *)(v1 - 184), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void __init_lockdown_server_block_invoke_2(uint64_t a1, id a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (!v5 || v6)
  {
    objc_storeStrong(v7, @"Error");
    BOOL v8 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke_2", 151, @"com.apple.MobileActivation.ErrorDomain", -2, v6, @"Failed to retrieve activation info.");
  }
  else
  {
    objc_storeStrong(v7, @"Value");
    BOOL v8 = (NSError *)[v5 copy];
  }
  id v9 = v8;
  uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  reply_and_disconnect(*(void *)(a1 + 56), *(id *)(a1 + 32), *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
}

void __copy_helper_block_e8_32s40r48r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 8);
  id v5 = *(const void **)(a2 + 48);

  _Block_object_assign((void *)(a1 + 48), v5, 8);
}

void __destroy_helper_block_e8_32s40r48r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 48), 8);
  _Block_object_dispose(*(const void **)(a1 + 40), 8);
  uint64_t v2 = *(void **)(a1 + 32);
}

void __init_lockdown_server_block_invoke_40(uint64_t a1, id a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (!v5 || v6)
  {
    objc_storeStrong(v7, @"Error");
    BOOL v8 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke", 167, @"com.apple.MobileActivation.ErrorDomain", -2, v6, @"Failed to retrieve activation info.");
  }
  else
  {
    objc_storeStrong(v7, @"Value");
    BOOL v8 = (NSError *)[v5 copy];
  }
  id v9 = v8;
  uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  reply_and_disconnect(*(void *)(a1 + 56), *(id *)(a1 + 32), *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
}

void __init_lockdown_server_block_invoke_3(void *a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    objc_storeStrong((id *)(*(void *)(a1[5] + 8) + 40), @"Error");
    id v5 = a3;
    id v6 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke_3", 230, @"com.apple.MobileActivation.ErrorDomain", -1, v5, @"Failed to activate device.");

    uint64_t v7 = *(void *)(a1[6] + 8);
    BOOL v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;
  }
  id v9 = (void *)a1[4];
  uint64_t v10 = *(void **)(*(void *)(a1[5] + 8) + 40);
  uint64_t v11 = a1[7];
  id v12 = *(void **)(*(void *)(a1[6] + 8) + 40);

  reply_and_disconnect(v11, v9, v10, v12);
}

void __init_lockdown_server_block_invoke_4(void *a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    objc_storeStrong((id *)(*(void *)(a1[5] + 8) + 40), @"Error");
    id v5 = a3;
    id v6 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke_4", 240, @"com.apple.MobileActivation.ErrorDomain", -1, v5, @"Failed to activate device.");

    uint64_t v7 = *(void *)(a1[6] + 8);
    BOOL v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;
  }
  id v9 = (void *)a1[4];
  uint64_t v10 = *(void **)(*(void *)(a1[5] + 8) + 40);
  uint64_t v11 = a1[7];
  id v12 = *(void **)(*(void *)(a1[6] + 8) + 40);

  reply_and_disconnect(v11, v9, v10, v12);
}

void __init_lockdown_server_block_invoke_5(void *a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    objc_storeStrong((id *)(*(void *)(a1[5] + 8) + 40), @"Error");
    id v5 = a3;
    id v6 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke_5", 260, @"com.apple.MobileActivation.ErrorDomain", -1, v5, @"Failed to activate device.");

    uint64_t v7 = *(void *)(a1[6] + 8);
    BOOL v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;
  }
  id v9 = (void *)a1[4];
  uint64_t v10 = *(void **)(*(void *)(a1[5] + 8) + 40);
  uint64_t v11 = a1[7];
  id v12 = *(void **)(*(void *)(a1[6] + 8) + 40);

  reply_and_disconnect(v11, v9, v10, v12);
}

void __init_lockdown_server_block_invoke_6(void *a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    objc_storeStrong((id *)(*(void *)(a1[5] + 8) + 40), @"Error");
    id v5 = a3;
    id v6 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke_6", 272, @"com.apple.MobileActivation.ErrorDomain", -1, v5, @"Failed to deactivate device.");

    uint64_t v7 = *(void *)(a1[6] + 8);
    BOOL v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;
  }
  id v9 = (void *)a1[4];
  uint64_t v10 = *(void **)(*(void *)(a1[5] + 8) + 40);
  uint64_t v11 = a1[7];
  id v12 = *(void **)(*(void *)(a1[6] + 8) + 40);

  reply_and_disconnect(v11, v9, v10, v12);
}

void __init_lockdown_server_block_invoke_7(uint64_t a1, id a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (!v5 || v6)
  {
    objc_storeStrong(v7, @"Error");
    BOOL v8 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke_7", 284, @"com.apple.MobileActivation.ErrorDomain", -1, v6, @"Failed to retrieve session info.");
  }
  else
  {
    objc_storeStrong(v7, @"Value");
    BOOL v8 = (NSError *)[v5 copy];
  }
  id v9 = v8;
  uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  reply_and_disconnect(*(void *)(a1 + 56), *(id *)(a1 + 32), *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
}

void __init_lockdown_server_block_invoke_8(uint64_t a1, id a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (!v5 || v6)
  {
    objc_storeStrong(v7, @"Error");
    id v12 = createMobileActivationError((uint64_t)"init_lockdown_server_block_invoke_8", 299, @"com.apple.MobileActivation.ErrorDomain", -1, v6, @"Failed to retrieve activation state.");
    uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8);
    id v8 = *(id *)(v13 + 40);
    *(void *)(v13 + 40) = v12;
  }
  else
  {
    objc_storeStrong(v7, @"Value");
    id v8 = [v5 objectForKeyedSubscript:@"ActivationState"];
    id v9 = [v8 copy];
    uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;
  }
  reply_and_disconnect(*(void *)(a1 + 56), *(id *)(a1 + 32), *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40), *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
}

id lockcrypto_query_certificate_properties(uint64_t a1, id a2, void *a3)
{
  id v5 = a2;
  id v6 = v5;
  id v143 = 0;
  id v144 = 0;
  v141[1] = 0;
  uint64_t v142 = 0;
  unint64_t v140 = 0;
  v141[0] = 0;
  long long v139 = 0uLL;
  long long v137 = 0uLL;
  unint64_t v138 = 0;
  int v136 = 0;
  unint64_t v135 = 0;
  BOOL v134 = 0;
  if (!a1 || !v5)
  {
    id v9 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 229, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    id v7 = 0;
    goto LABEL_15;
  }
  id v7 = objc_alloc_init((Class)NSMutableDictionary);
  if (!v7)
  {
    id v9 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 235, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");
LABEL_15:
    id v10 = 0;
    id v14 = 0;
    id v15 = 0;
    id v16 = 0;
    if (v9) {
      goto LABEL_229;
    }
    goto LABEL_179;
  }
  if (&_SecCertificateCopyExtensionValue)
  {
    id v8 = (id)SecCertificateCopyExtensionValue();
    id v9 = 0;
    if (v8) {
      goto LABEL_6;
    }
LABEL_177:
    uint64_t v13 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 245, @"com.apple.MobileActivation.ErrorDomain", -1, v9, @"Failed to query DERSequence data for OID %@.", v6);

    id v10 = 0;
LABEL_178:
    id v14 = 0;
    id v15 = 0;
    id v16 = 0;
    id v9 = v13;
    if (v13) {
      goto LABEL_229;
    }
    goto LABEL_179;
  }
  id v17 = v6;
  if (lockcrypto_query_oid_der_sequence_data_onceToken != -1) {
    dispatch_once(&lockcrypto_query_oid_der_sequence_data_onceToken, &__block_literal_global_3);
  }
  id v18 = (void *)SecCertificateCopyProperties();
  id v19 = v18;
  if (v18)
  {
    v122 = v6;
    long long v151 = 0u;
    long long v152 = 0u;
    long long v149 = 0u;
    long long v150 = 0u;
    v121 = v18;
    id v20 = v18;
    id v21 = [(NSError *)v20 countByEnumeratingWithState:&v149 objects:&v156 count:16];
    if (!v21)
    {
      id v23 = 0;
      goto LABEL_174;
    }
    id v22 = v21;
    id v23 = 0;
    id v127 = v7;
    id v129 = *(id *)v150;
    v124 = v20;
    id v125 = v17;
    while (1)
    {
      BOOL v24 = 0;
      do
      {
        if (*(id *)v150 != v129) {
          objc_enumerationMutation(v20);
        }
        id v25 = *(void **)(*((void *)&v149 + 1) + 8 * (void)v24);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v26 = [v25 objectForKeyedSubscript:@"label"];
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0 && [v26 isEqualToString:v17])
          {
            id v27 = [v25 objectForKeyedSubscript:@"value"];

            if (v27)
            {
              objc_opt_class();
              if (objc_opt_isKindOfClass())
              {
                id v126 = v22;
                long long v147 = 0u;
                long long v148 = 0u;
                long long v145 = 0u;
                long long v146 = 0u;
                id v23 = v27;
                id v28 = [v23 countByEnumeratingWithState:&v145 objects:&v153 count:16];
                if (!v28) {
                  goto LABEL_47;
                }
                id v29 = v28;
                uint64_t v30 = *(void *)v146;
                while (1)
                {
                  for (i = 0; i != v29; i = (char *)i + 1)
                  {
                    if (*(void *)v146 != v30) {
                      objc_enumerationMutation(v23);
                    }
                    id v32 = *(void **)(*((void *)&v145 + 1) + 8 * i);
                    objc_opt_class();
                    if ((objc_opt_isKindOfClass() & 1) == 0)
                    {
                      id v33 = 0;
LABEL_44:
                      id v8 = 0;
                      goto LABEL_45;
                    }
                    id v33 = [v32 objectForKeyedSubscript:@"label"];
                    if (!v33) {
                      goto LABEL_44;
                    }
                    objc_opt_class();
                    if ((objc_opt_isKindOfClass() & 1) == 0
                      || ![v33 isEqualToString:@"Unparsed Data"])
                    {
                      goto LABEL_44;
                    }
                    id v8 = [v32 objectForKeyedSubscript:@"value"];
                    if (v8)
                    {
                      objc_opt_class();
                      if ((objc_opt_isKindOfClass() & 1) != 0
                        && ![v8 isEqualToData:lockcrypto_query_oid_der_sequence_data_ASN1DERNull])
                      {

                        v94 = 0;
                        id v6 = v122;
                        id v7 = v127;
                        id v95 = v124;
                        id v17 = v125;
                        id v19 = v121;
                        goto LABEL_176;
                      }
                    }
LABEL_45:
                  }
                  id v29 = [v23 countByEnumeratingWithState:&v145 objects:&v153 count:16];
                  if (!v29)
                  {
LABEL_47:

                    id v22 = v126;
                    id v7 = v127;
                    id v20 = v124;
                    id v17 = v125;
                    goto LABEL_49;
                  }
                }
              }
              id v23 = v27;
            }
            else
            {
              id v23 = 0;
            }
          }
        }
        else
        {
          id v26 = 0;
        }
LABEL_49:

        BOOL v24 = (char *)v24 + 1;
      }
      while (v24 != v22);
      id v34 = [(NSError *)v20 countByEnumeratingWithState:&v149 objects:&v156 count:16];
      id v22 = v34;
      if (!v34)
      {
LABEL_174:

        id v93 = 0;
        id v6 = v122;
        id v19 = v121;
        goto LABEL_175;
      }
    }
  }
  id v93 = createMobileActivationError((uint64_t)"lockcrypto_query_oid_der_sequence_data", 137, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy certificate properties.");
  id v23 = 0;
LABEL_175:
  id v95 = v93;
  id v8 = 0;
  v94 = v95;
LABEL_176:

  id v9 = v94;
  if (!v8) {
    goto LABEL_177;
  }
LABEL_6:
  id v10 = v8;
  id v143 = [v10 bytes];
  id v144 = [v10 length];
  uint64_t v11 = DERDecodeSeqInit((uint64_t)&v143, &v142, v141);
  if (v11 == 2)
  {
    uint64_t v11 = DERDecodeItem((uint64_t)&v143, (unint64_t *)&v139);
    if (!v11 && (void)v139 == 4) {
      uint64_t v11 = DERDecodeSeqInit((uint64_t)&v139 + 8, &v142, v141);
    }
  }
  if (v11)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 267, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to intialize DER sequence: %d", v11);
LABEL_12:
    uint64_t v13 = MobileActivationError;

    goto LABEL_178;
  }
  if (v142 == 0x2000000000000010)
  {
    uint64_t v96 = DERDecodeSeqNext(v141, (unint64_t *)&v139);
    id v14 = 0;
    v123 = v6;
    v128 = v7;
    if (v96 || !*((void *)&v139 + 1))
    {
      id v15 = 0;
      id v16 = 0;
LABEL_225:
      if (v96 != 1)
      {
        v112 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 299, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode DER sequence: %d", v96);

        id v9 = v112;
      }
      id v6 = v123;
      goto LABEL_228;
    }
    id v16 = 0;
    id v15 = 0;
    id v14 = 0;
    while (1)
    {
      id v97 = v14;
      SecCertificateRef v98 = +[NSNumber numberWithUnsignedLongLong:(unint64_t)v139 & 0x5FFFFFFFFFFFFFFFLL];
      id v14 = [(NSNumber *)v98 stringValue];

      if (!DERDecodeItem((uint64_t)&v139 + 8, (unint64_t *)&v137))
      {
        long long v139 = v137;
        unint64_t v140 = v138;
      }
      uint64_t v99 = v139 & 0x5FFFFFFFFFFFFFFFLL;
      if ((v139 & 0x5FFFFFFFFFFFFFFFLL) == 1)
      {
        uint64_t v103 = DERParseBoolean((unsigned __int8 **)&v139 + 1, &v134);
        if (v103)
        {
          id v104 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 353, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode DER encoded ASN1_BOOLEAN: %d", v103);
          goto LABEL_200;
        }
        id v109 = +[NSNumber numberWithBool:v134];
      }
      else
      {
        if (v99 != 2)
        {
          if (v99 != 4) {
            goto LABEL_211;
          }

          if (v140)
          {
            uint64_t v100 = 0;
            int v101 = 0;
            while ((*(char *)(*((void *)&v139 + 1) + v100) & 0x80000000) == 0)
            {
              uint64_t v100 = ++v101;
              if (v140 <= v101)
              {
                id v102 = objc_alloc((Class)NSString);
                id v16 = [v102 initWithBytes:*((void *)&v139 + 1) length:v140 encoding:1];
                if (v16)
                {
                  id v15 = 0;
                  goto LABEL_204;
                }
                id v106 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 326, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode DER encoded ANS1_OCTET_STRING.");

                id v15 = 0;
                goto LABEL_201;
              }
            }
          }
          id v107 = objc_alloc((Class)NSData);
          id v15 = [v107 initWithBytes:*((void *)&v139 + 1) length:v140];
          if (v15)
          {
            id v16 = 0;
LABEL_204:
            if (v16) {
              id v108 = v16;
            }
            else {
              id v108 = v15;
            }
            [v7 setObject:v108 forKeyedSubscript:v14];
            goto LABEL_211;
          }
          id v106 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 332, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode DER encoded ANS1_OCTET_STRING.");

          id v16 = 0;
          goto LABEL_201;
        }
        uint64_t v105 = DERParseInteger64((char **)&v139 + 1, &v135);
        if (v105)
        {
          id v104 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 343, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode DER encoded ASN1_INTEGER: %d", v105);
LABEL_200:
          id v106 = v104;

LABEL_201:
          id v9 = v106;
          goto LABEL_211;
        }
        id v109 = +[NSNumber numberWithUnsignedLongLong:v135];
      }
      NSFileAttributeKey v110 = v109;
      [v7 setObject:v109 forKeyedSubscript:v14];

LABEL_211:
      uint64_t v96 = DERDecodeSeqNext(v141, (unint64_t *)&v139);
      if (v96 || !*((void *)&v139 + 1)) {
        goto LABEL_225;
      }
    }
  }
  if (v142 != 0x2000000000000011)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 717, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Expected ASN1_CONSTR_SET or ASN1_CONSTR_SEQUENCE tag.");
    goto LABEL_12;
  }
  v128 = v7;
  uint64_t v35 = a3;
  uint64_t v36 = v6;
  long long v149 = 0uLL;
  long long v145 = 0uLL;
  uint64_t v156 = 0;
  v157 = 0;
  unint64_t v158 = 0;
  uint64_t v37 = DERDecodeSeqNext(v141, (unint64_t *)&v139);
  id v38 = 0;
  if (v37 || (uint64_t v39 = *((void *)&v139 + 1)) == 0)
  {
    id v15 = 0;
    id v16 = 0;
LABEL_218:
    if (v37 == 1) {
      goto LABEL_222;
    }
    uint64_t v120 = v37;
    v118 = @"Failed to decode DER sequence: %d";
    uint64_t v119 = 468;
    goto LABEL_220;
  }
  id v16 = 0;
  id v15 = 0;
  id v14 = 0;
  while (1)
  {
    *(void *)&long long v149 = v39;
    *((void *)&v149 + 1) = v140;
    uint64_t v40 = DERDecodeSeqInit((uint64_t)&v149, &v142, &v145);
    if (v40)
    {
      v115 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 479, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to intialize DER sequence: %d", v40);

LABEL_243:
      id v9 = v115;
      goto LABEL_223;
    }
    id v6 = v36;
    a3 = v35;
    if (v142 != 0x2000000000000010)
    {
      v116 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 484, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Expected ASN1_CONSTR_SEQUENCE tag.", v120);
      goto LABEL_241;
    }
    uint64_t v41 = DERDecodeSeqNext((unint64_t *)&v145, (unint64_t *)&v156);
    if (v41 || !v157)
    {
      v116 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 492, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode DER sequence: %d", v41);
      goto LABEL_241;
    }
    if (v156 != 22)
    {
      v116 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 497, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid DER tag.", v120);
      goto LABEL_241;
    }
    uint64_t v42 = DERParseInteger((char **)&v157, &v136);
    if (v42)
    {
      v116 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 503, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to parse DER integer: %d", v42);
      goto LABEL_241;
    }
    if (v158 != 4) {
      break;
    }
    id v43 = objc_alloc((Class)NSString);
    id v38 = (NSString *)[v43 initWithBytes:v157 length:v158 encoding:1];

    if (!v38)
    {
      v115 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 514, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create string.");

      id v14 = 0;
      goto LABEL_243;
    }
    uint64_t v44 = DERDecodeSeqNext((unint64_t *)&v145, (unint64_t *)&v156);
    if (v44 || !v157)
    {
      uint64_t v120 = v44;
      v118 = @"Failed to decode DER sequence: %d";
      uint64_t v119 = 520;
LABEL_220:
      v111 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", v119, @"com.apple.MobileActivation.ErrorDomain", -1, 0, v118, v120);

LABEL_221:
      id v9 = v111;
LABEL_222:
      id v14 = v38;
LABEL_223:
      id v6 = v36;
      a3 = v35;
      goto LABEL_228;
    }
    if (v156 <= 1)
    {
      switch(v156)
      {
        case 0xA000000000000000:
          BOOL v54 = v128;
          CFDataRef v55 = &off_10027EDB0;
          break;
        case 0xA000000000000001:
          BOOL v54 = v128;
          CFDataRef v55 = &off_10027EDC8;
          break;
        case 1:
          uint64_t v45 = DERParseBoolean(&v157, &v134);
          if (!v45)
          {
            id v46 = +[NSNumber numberWithBool:v134];
LABEL_93:
            int v57 = v46;
            [v128 setObject:v46 forKeyedSubscript:v38];

            goto LABEL_149;
          }
          uint64_t v120 = v45;
          v118 = @"Failed to decode DER encoded ASN1_BOOLEAN: %d";
          uint64_t v119 = 559;
          goto LABEL_220;
        default:
          goto LABEL_149;
      }
LABEL_148:
      [v54 setObject:v55 forKeyedSubscript:v38];
      goto LABEL_149;
    }
    if (v156 == 2)
    {
      uint64_t v56 = DERParseInteger64((char **)&v157, &v135);
      if (!v56)
      {
        id v46 = +[NSNumber numberWithUnsignedLongLong:v135];
        goto LABEL_93;
      }
      uint64_t v120 = v56;
      v118 = @"Failed to decode DER encoded ASN1_INTEGER: %d";
      uint64_t v119 = 551;
      goto LABEL_220;
    }
    if (v156 != 0x2000000000000011)
    {
      if (v156 != 4) {
        goto LABEL_149;
      }

      if (v158)
      {
        uint64_t v47 = 0;
        int v48 = 0;
        while (((char)v157[v47] & 0x80000000) == 0)
        {
          uint64_t v47 = ++v48;
          if (v158 <= v48)
          {
            int v49 = DERDecodeItem((uint64_t)&v157, (unint64_t *)&v137);
            id v50 = objc_alloc((Class)NSString);
            id v51 = (unsigned __int8 **)&v137 + 1;
            if (v49) {
              id v51 = &v157;
            }
            BOOL v52 = *v51;
            id v53 = &v138;
            if (v49) {
              id v53 = &v158;
            }
            id v16 = [v50 initWithBytes:v52 length:*v53 encoding:1];
            if (!v16)
            {
              v118 = @"Failed to decode DER encoded ANS1_OCTET_STRING.";
              uint64_t v119 = 536;
              goto LABEL_220;
            }
            goto LABEL_144;
          }
        }
      }
      id v87 = objc_alloc((Class)NSData);
      id v88 = [v87 initWithBytes:v157 length:v158];

      if (!v88)
      {
        v111 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 542, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode DER encoded ANS1_OCTET_STRING.");

        id v15 = 0;
        id v16 = 0;
        goto LABEL_221;
      }
      id v16 = 0;
      id v15 = v88;
LABEL_144:
      if (v16) {
        CFDataRef v55 = (_UNKNOWN **)v16;
      }
      else {
        CFDataRef v55 = (_UNKNOWN **)v15;
      }
      BOOL v54 = v128;
      goto LABEL_148;
    }
    id v58 = DERDecodeSeqContentInit((unint64_t *)&v157, (unint64_t *)&v145);
    if (v58)
    {
      uint64_t v120 = (uint64_t)v58;
      v118 = @"Failed to intialize DER sequence: %d";
      uint64_t v119 = 571;
      goto LABEL_220;
    }
    id v59 = objc_alloc_init((Class)NSMutableDictionary);
    [v128 setObject:v59 forKeyedSubscript:v38];

    v132 = 0;
    unint64_t v133 = 0;
    unint64_t v130 = 0;
    uint64_t v131 = 0;
    uint64_t v153 = 0;
    v154 = 0;
    unint64_t v155 = 0;
    uint64_t v60 = DERDecodeSeqNext((unint64_t *)&v145, (unint64_t *)&v156);
    if (!v60)
    {
      id v61 = v157;
      if (v157)
      {
        while (1)
        {
          v132 = v61;
          unint64_t v133 = v158;
          uint64_t v62 = DERDecodeSeqInit((uint64_t)&v132, &v142, &v130);
          if (v62)
          {
            id v90 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 601, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to intialize DER sequence: %d", v62);
            goto LABEL_156;
          }
          if (v142 != 0x2000000000000010)
          {
            id v90 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 606, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Expected ASN1_CONSTR_SEQUENCE tag.", v120);
            goto LABEL_156;
          }
          uint64_t v63 = DERDecodeSeqNext(&v130, (unint64_t *)&v153);
          if (v63 || !v154)
          {
            id v90 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 614, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode DER sequence: %d", v63);
            goto LABEL_156;
          }
          if (v153 != 22)
          {
            id v90 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 619, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid DER tag.", v120);
            goto LABEL_156;
          }
          uint64_t v64 = DERParseInteger((char **)&v154, &v136);
          if (v64)
          {
            id v90 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 625, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to parse DER integer: %d", v64);
            goto LABEL_156;
          }
          if (v155 != 4)
          {
            id v90 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 630, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid property key length: %ld", v158);
            goto LABEL_156;
          }
          id v65 = objc_alloc((Class)NSString);
          SecCertificateRef v66 = (NSError *)[v65 initWithBytes:v154 length:v155 encoding:1];
          if (!v66)
          {
            id v90 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 636, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create string.", v120);
            goto LABEL_156;
          }
          id v67 = v66;
          uint64_t v68 = DERDecodeSeqNext(&v130, (unint64_t *)&v153);
          if (v68 || !v154)
          {
            id v92 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 644, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode DER sequence: %d", v68);
LABEL_167:
            id v91 = v92;

            goto LABEL_168;
          }
          if (v153 <= 0) {
            break;
          }
          switch(v153)
          {
            case 1:
              uint64_t v79 = DERParseBoolean(&v154, &v134);
              if (v79)
              {
                id v92 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 683, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode DER encoded ASN1_BOOLEAN: %d", v79);
                goto LABEL_167;
              }
              id v80 = +[NSNumber numberWithBool:v134];
              break;
            case 2:
              uint64_t v81 = DERParseInteger64((char **)&v154, &v135);
              if (v81)
              {
                id v92 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 675, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode DER encoded ASN1_INTEGER: %d", v81);
                goto LABEL_167;
              }
              id v80 = +[NSNumber numberWithUnsignedLongLong:v135];
              break;
            case 4:

              if (v155)
              {
                uint64_t v69 = 0;
                int v70 = 0;
                while (((char)v154[v69] & 0x80000000) == 0)
                {
                  uint64_t v69 = ++v70;
                  if (v155 <= v70)
                  {
                    int v71 = DERDecodeItem((uint64_t)&v154, (unint64_t *)&v137);
                    id v72 = objc_alloc((Class)NSString);
                    uint64_t v73 = (unsigned __int8 **)&v137 + 1;
                    if (v71) {
                      uint64_t v73 = &v154;
                    }
                    id v74 = *v73;
                    id v75 = &v138;
                    if (v71) {
                      id v75 = &v155;
                    }
                    id v16 = [v72 initWithBytes:v74 length:*v75 encoding:1];
                    if (!v16)
                    {
                      id v92 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 660, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode DER encoded ANS1_OCTET_STRING.", v120);
                      goto LABEL_167;
                    }
                    goto LABEL_132;
                  }
                }
              }
              id v83 = objc_alloc((Class)NSData);
              id v84 = [v83 initWithBytes:v154 length:v155];

              if (!v84)
              {
                id v91 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 666, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode DER encoded ANS1_OCTET_STRING.");

                id v15 = 0;
                id v16 = 0;
LABEL_168:
                id v9 = v67;
LABEL_157:

                id v9 = v91;
                goto LABEL_149;
              }
              id v16 = 0;
              id v15 = v84;
LABEL_132:
              if (v16) {
                id v85 = (_UNKNOWN **)v16;
              }
              else {
                id v85 = (_UNKNOWN **)v15;
              }
              id v76 = (NSNumber *)[v128 objectForKeyedSubscript:v38];
              uint64_t v77 = v76;
              id v78 = v85;
LABEL_136:
              [(NSNumber *)v76 setObject:v78 forKeyedSubscript:v67];
              goto LABEL_137;
            default:
              goto LABEL_138;
          }
          uint64_t v77 = v80;
          id v82 = [v128 objectForKeyedSubscript:v38];
          [v82 setObject:v77 forKeyedSubscript:v67];

LABEL_137:
LABEL_138:
          uint64_t v86 = DERDecodeSeqNext(&v130, (unint64_t *)&v153);
          if (v86 != 1)
          {
            id v92 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 696, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"DER sequence is invalid: %d", v86);
            goto LABEL_167;
          }

          v132 = 0;
          unint64_t v133 = 0;
          unint64_t v130 = 0;
          uint64_t v131 = 0;
          uint64_t v153 = 0;
          v154 = 0;
          unint64_t v155 = 0;
          uint64_t v60 = DERDecodeSeqNext((unint64_t *)&v145, (unint64_t *)&v156);
          if (!v60)
          {
            id v61 = v157;
            if (v157) {
              continue;
            }
          }
          goto LABEL_154;
        }
        if (v153 == 0xA000000000000000)
        {
          id v76 = (NSNumber *)[v128 objectForKeyedSubscript:v38];
          uint64_t v77 = v76;
          id v78 = &off_10027EDB0;
        }
        else
        {
          if (v153 != 0xA000000000000001) {
            goto LABEL_138;
          }
          id v76 = (NSNumber *)[v128 objectForKeyedSubscript:v38];
          uint64_t v77 = v76;
          id v78 = &off_10027EDC8;
        }
        goto LABEL_136;
      }
    }
LABEL_154:
    if (v60 != 1)
    {
      id v90 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 590, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode DER sequence: %d", v60);
LABEL_156:
      id v91 = v90;
      goto LABEL_157;
    }
LABEL_149:
    if (v9) {
      goto LABEL_222;
    }
    uint64_t v89 = DERDecodeSeqNext((unint64_t *)&v145, (unint64_t *)&v156);
    if (v89 != 1)
    {
      id v9 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 710, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"DER sequence is invalid: %d", v89);
      goto LABEL_222;
    }
    long long v149 = 0uLL;
    long long v145 = 0uLL;
    uint64_t v156 = 0;
    v157 = 0;
    unint64_t v158 = 0;
    uint64_t v37 = DERDecodeSeqNext(v141, (unint64_t *)&v139);
    id v9 = 0;
    if (!v37)
    {
      uint64_t v39 = *((void *)&v139 + 1);
      id v14 = v38;
      if (*((void *)&v139 + 1)) {
        continue;
      }
    }
    goto LABEL_218;
  }
  v116 = createMobileActivationError((uint64_t)"lockcrypto_query_certificate_properties", 508, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid property key length: %ld", v158);
LABEL_241:
  v117 = v116;

  id v9 = v117;
LABEL_228:
  id v7 = v128;
  if (v9) {
    goto LABEL_229;
  }
LABEL_179:
  if (!v7) {
    goto LABEL_230;
  }
  if ([v7 count]) {
    goto LABEL_232;
  }
LABEL_229:

LABEL_230:
  id v7 = 0;
  if (a3) {
    *a3 = v9;
  }
LABEL_232:
  id v113 = v7;

  return v113;
}

uint64_t lockcrypto_digest_data(void *a1, void *a2)
{
  id v3 = a1;
  if (!v3 || !a2)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_digest_data", 744, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
LABEL_8:
    id v8 = MobileActivationError;
    goto LABEL_9;
  }
  id v4 = malloc_type_calloc(1uLL, 0x14uLL, 0xA7B68E2DuLL);
  if (!v4)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_digest_data", 750, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate memory.");
    goto LABEL_8;
  }
  id v5 = v4;
  id v6 = v3;
  [v6 bytes];
  [v6 length];
  if (!CCDigest())
  {
    *a2 = v5;
    uint64_t v10 = 20;
    goto LABEL_10;
  }
  id v7 = createMobileActivationError((uint64_t)"lockcrypto_digest_data", 761, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to digest data.");
  free(v5);
  id v8 = v7;
LABEL_9:

  uint64_t v10 = 0xFFFFFFFFLL;
LABEL_10:

  return v10;
}

char *lockcrypto_create_pem_from_key(__SecKey *a1, const char *a2, NSError **a3)
{
  CFErrorRef error = 0;
  if (a1 && a2)
  {
    CFDataRef v5 = SecKeyCopyExternalRepresentation(a1, &error);
    CFDataRef v6 = v5;
    if (v5)
    {
      id v11 = 0;
      id v7 = lockcrypto_create_pem(v5, a2, &v11);
      id v8 = (NSError *)v11;
      if (v7) {
        goto LABEL_11;
      }
      id v9 = createMobileActivationError((uint64_t)"lockcrypto_create_pem_from_key", 800, @"com.apple.MobileActivation.ErrorDomain", -1, v8, @"Failed to create pem data.");

      id v8 = v9;
      if (!a3) {
        goto LABEL_10;
      }
LABEL_8:
      id v8 = v8;
      id v7 = 0;
      *a3 = v8;
      goto LABEL_11;
    }
    id v8 = createMobileActivationError((uint64_t)"lockcrypto_create_pem_from_key", 794, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to convert SecKey to data.");
    if (a3) {
      goto LABEL_8;
    }
  }
  else
  {
    id v8 = createMobileActivationError((uint64_t)"lockcrypto_create_pem_from_key", 788, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    CFDataRef v6 = 0;
    if (a3) {
      goto LABEL_8;
    }
  }
LABEL_10:
  id v7 = 0;
LABEL_11:
  if (error) {
    CFRelease(error);
  }

  return v7;
}

char *lockcrypto_create_pem(void *a1, const char *a2, void *a3)
{
  id v5 = a1;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  *(_OWORD *)__str = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  *(_OWORD *)__src = 0u;
  long long v17 = 0u;
  if (!v5 || !a2)
  {
    id v14 = createMobileActivationError((uint64_t)"lockcrypto_create_pem", 1376, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    id v8 = 0;
    if (!a3) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  id v7 = [v5 base64EncodedDataWithOptions:1];
  id v8 = (char *)[v7 length];
  if (!v8) {
    goto LABEL_6;
  }
  int v9 = snprintf(__str, 0x50uLL, "-----BEGIN %s-----\n", a2);
  uint64_t v10 = &v8[v9 + snprintf(__src, 0x50uLL, "\n-----END %s-----", a2)];
  id v11 = (char *)malloc_type_malloc((size_t)(v10 + 1), 0xC5163643uLL);
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = &strcpy(v11, __str)[v9];
    [v7 getBytes:v13 range:0];
    strcpy(&v8[(void)v13], __src);
    id v8 = (char *)[objc_alloc((Class)NSData) initWithBytesNoCopy:v12 length:v10];
    if (v8)
    {
LABEL_6:
      id v14 = 0;
      goto LABEL_11;
    }
    id v14 = createMobileActivationError((uint64_t)"lockcrypto_create_pem", 1404, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create pem data.");
    free(v12);
  }
  else
  {
    id v14 = createMobileActivationError((uint64_t)"lockcrypto_create_pem", 1391, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate buffer.");
    id v8 = 0;
  }
LABEL_11:

  if (!a3) {
    goto LABEL_14;
  }
LABEL_12:
  if (!v8) {
    *a3 = v14;
  }
LABEL_14:

  return v8;
}

uint64_t lockcrypto_genenerate_keypair(uint64_t a1, void *a2, char **a3, void *a4)
{
  CFErrorRef error = 0;
  v27[0] = kSecAttrKeyTypeRSA;
  v26[0] = kSecAttrKeyType;
  v26[1] = kSecAttrKeySizeInBits;
  id v7 = +[NSNumber numberWithUnsignedInt:a1];
  v27[1] = v7;
  id v8 = +[NSDictionary dictionaryWithObjects:v27 forKeys:v26 count:2];

  int v9 = SecKeyCreateRandomKey((CFDictionaryRef)v8, &error);
  uint64_t v10 = v9;
  if (!v9)
  {
    long long v17 = createMobileActivationError((uint64_t)"lockcrypto_genenerate_keypair", 835, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to generate private key.");
    uint64_t v13 = 0;
    id v12 = 0;
    if (!a4) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  id v11 = SecKeyCopyPublicKey(v9);
  id v12 = v11;
  if (!v11)
  {
    long long v17 = createMobileActivationError((uint64_t)"lockcrypto_genenerate_keypair", 841, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query public key.");
    uint64_t v13 = 0;
    if (!a4) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  id v24 = 0;
  uint64_t v13 = lockcrypto_create_pem_from_key(v11, "RSA PUBLIC KEY", (NSError **)&v24);
  id v14 = (NSError *)v24;
  if (!a2)
  {
    id v15 = createMobileActivationError((uint64_t)"lockcrypto_genenerate_keypair", 847, @"com.apple.MobileActivation.ErrorDomain", -1, v14, @"Failed to create public key pem data.");

    id v14 = v15;
  }
  id v23 = v14;
  id v16 = lockcrypto_create_pem_from_key(v10, "RSA PRIVATE KEY", (NSError **)&v23);
  long long v17 = (NSError *)v23;

  if (!v16)
  {
    long long v22 = createMobileActivationError((uint64_t)"lockcrypto_genenerate_keypair", 852, @"com.apple.MobileActivation.ErrorDomain", -1, v17, @"Failed to create private key pem data.");

    long long v17 = v22;
    if (!a4)
    {
LABEL_15:
      id v16 = 0;
      uint64_t v18 = 0;
      long long v19 = 0;
      uint64_t v20 = 0;
      if (!v12) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
LABEL_14:
    *a4 = v17;
    goto LABEL_15;
  }
  if (a2) {
    *a2 = v13;
  }
  if (a3)
  {
    id v16 = v16;
    *a3 = v16;
  }
  uint64_t v18 = 1;
LABEL_16:
  CFRelease(v12);
  long long v19 = v16;
  uint64_t v20 = v18;
LABEL_17:
  if (v10) {
    CFRelease(v10);
  }
  if (error) {
    CFRelease(error);
  }
  CFErrorRef error = 0;

  return v20;
}

id lockcrypto_sign(__SecKey *a1, id a2, NSError **a3)
{
  id v5 = a2;
  CFDataRef v6 = v5;
  size_t sigLen = 0;
  dataToSign = 0;
  if (!a1 || !v5)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_sign", 891, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    goto LABEL_9;
  }
  int v7 = lockcrypto_digest_data(v5, &dataToSign);
  if (v7 <= 0)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_sign", 899, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to digest data.");
LABEL_9:
    uint64_t v13 = MobileActivationError;
    int v9 = 0;
    if (!a3) {
      goto LABEL_16;
    }
LABEL_10:
    uint64_t v13 = v13;
    id v14 = 0;
    *a3 = v13;
    goto LABEL_17;
  }
  unsigned int v8 = v7;
  size_t sigLen = SecKeyGetBlockSize(a1);
  int v9 = (uint8_t *)malloc_type_malloc(sigLen, 0x60EB051DuLL);
  if (v9)
  {
    OSStatus v10 = SecKeyRawSign(a1, 0x8002u, dataToSign, v8, v9, &sigLen);
    if (v10)
    {
      id v11 = createMobileActivationError((uint64_t)"lockcrypto_sign", 920, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to sign data: %ld", v10);
    }
    else
    {
      id v15 = objc_alloc((Class)NSData);
      id v16 = [v15 initWithBytesNoCopy:v9 length:sigLen];
      if (v16)
      {
        id v14 = v16;
        uint64_t v13 = 0;
        int v9 = 0;
        goto LABEL_17;
      }
      id v11 = createMobileActivationError((uint64_t)"lockcrypto_sign", 928, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to encode signature.");
    }
  }
  else
  {
    id v11 = createMobileActivationError((uint64_t)"lockcrypto_sign", 909, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate memory.");
  }
  uint64_t v13 = v11;
  if (a3) {
    goto LABEL_10;
  }
LABEL_16:
  id v14 = 0;
LABEL_17:
  if (dataToSign) {
    free(dataToSign);
  }
  dataToSign = 0;
  if (v9) {
    free(v9);
  }

  return v14;
}

uint64_t lockcrypto_verify(__SecKey *a1, id a2, void *a3, NSError **a4)
{
  id v7 = a2;
  id v8 = a3;
  int v9 = v8;
  signedData = 0;
  if (a1 && v7 && v8)
  {
    int v10 = lockcrypto_digest_data(v8, &signedData);
    if (v10 <= 0)
    {
      id v16 = @"Invalid digest length.";
      uint64_t v17 = 971;
    }
    else
    {
      unsigned int v11 = v10;
      id v12 = v7;
      uint64_t v13 = (const uint8_t *)[v12 bytes];
      id v14 = [v12 length];
      uint64_t v15 = SecKeyRawVerify(a1, 0x8002u, signedData, v11, v13, (size_t)v14);
      if (!v15)
      {
        uint64_t v20 = 0;
        uint64_t v21 = 1;
        goto LABEL_14;
      }
      uint64_t v23 = v15;
      id v16 = @"Failed to verify signature: %d";
      uint64_t v17 = 987;
    }
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_verify", v17, @"com.apple.MobileActivation.ErrorDomain", -1, 0, v16, v23);
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_verify", 963, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
  }
  long long v19 = MobileActivationError;
  uint64_t v20 = v19;
  if (a4)
  {
    uint64_t v20 = v19;
    uint64_t v21 = 0;
    *a4 = v20;
  }
  else
  {
    uint64_t v21 = 0;
  }
LABEL_14:
  if (signedData) {
    free(signedData);
  }
  signedData = 0;

  return v21;
}

id lockcrypto_extract_public_key_size(__SecCertificate *a1, void *a2)
{
  CFErrorRef error = 0;
  id v3 = SecCertificateCopyKey(a1);
  id v4 = v3;
  if (v3)
  {
    CFDataRef v5 = SecKeyCopyExternalRepresentation(v3, &error);
    if (v5)
    {
      CFDataRef v6 = v5;
      id v7 = [(__CFData *)v5 length];

      id v8 = 0;
      if (!a2) {
        goto LABEL_10;
      }
      goto LABEL_8;
    }
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_extract_public_key_size", 1025, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to copy public key data.");
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_extract_public_key_size", 1019, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy public key.");
  }
  id v8 = MobileActivationError;
  id v7 = 0;
  if (!a2) {
    goto LABEL_10;
  }
LABEL_8:
  if (!v7) {
    *a2 = v8;
  }
LABEL_10:
  if (error) {
    CFRelease(error);
  }
  CFErrorRef error = 0;
  if (v4) {
    CFRelease(v4);
  }

  return v7;
}

SecKeyRef lockcrypto_extract_public(void *a1, NSError **a2)
{
  id v3 = a1;
  SecTrustRef trust = 0;
  if (!v3)
  {
    CFDataRef v6 = createMobileActivationError((uint64_t)"lockcrypto_extract_public", 1052, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    SecPolicyRef BasicX509 = 0;
    if (a2) {
      goto LABEL_12;
    }
LABEL_6:
    SecKeyRef v7 = 0;
    goto LABEL_13;
  }
  SecPolicyRef BasicX509 = SecPolicyCreateBasicX509();
  if (BasicX509)
  {
    if (SecTrustCreateWithCertificates(v3, BasicX509, &trust))
    {
      MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_extract_public", 1067, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create trust.");
    }
    else
    {
      SecKeyRef v8 = SecTrustCopyPublicKey(trust);
      if (v8)
      {
        SecKeyRef v7 = v8;
        CFDataRef v6 = 0;
        goto LABEL_13;
      }
      MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_extract_public", 1076, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy public key.");
    }
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_extract_public", 1058, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create policy.");
  }
  CFDataRef v6 = MobileActivationError;
  if (!a2) {
    goto LABEL_6;
  }
LABEL_12:
  CFDataRef v6 = v6;
  SecKeyRef v7 = 0;
  *a2 = v6;
LABEL_13:
  if (trust) {
    CFRelease(trust);
  }
  SecTrustRef trust = 0;
  if (BasicX509) {
    CFRelease(BasicX509);
  }

  return v7;
}

SecKeyRef lockcrypto_extract_public_with_intermediate(void *a1, NSError **a2)
{
  id v3 = a1;
  SecTrustRef trust = 0;
  SecTrustResultType result = kSecTrustResultInvalid;
  if (!v3)
  {
    CFDataRef v6 = createMobileActivationError((uint64_t)"lockcrypto_extract_public_with_intermediate", 1101, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    id v4 = 0;
    if (a2)
    {
LABEL_9:
      CFDataRef v6 = v6;
      SecKeyRef v7 = 0;
      *a2 = v6;
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  id v4 = (const void *)SecPolicyCreateiPhoneActivation();
  if (!v4)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_extract_public_with_intermediate", 1107, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create policy.");
    goto LABEL_8;
  }
  if (SecTrustCreateWithCertificates(v3, v4, &trust))
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_extract_public_with_intermediate", 1112, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create trust.");
    goto LABEL_8;
  }
  OSStatus v8 = SecTrustEvaluate(trust, &result);
  uint64_t v9 = result;
  if (v8 || result != kSecTrustResultProceed && result != kSecTrustResultUnspecified)
  {
    int v10 = (void *)SecTrustCopyFailureDescription();
    CFDataRef v6 = createMobileActivationError((uint64_t)"lockcrypto_extract_public_with_intermediate", 1120, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to evaluate trust: %d (%@)", v9, v10);

    if (a2) {
      goto LABEL_9;
    }
LABEL_12:
    SecKeyRef v7 = 0;
    goto LABEL_13;
  }
  SecKeyRef v12 = SecTrustCopyPublicKey(trust);
  if (!v12)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_extract_public_with_intermediate", 1129, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy public key.");
LABEL_8:
    CFDataRef v6 = MobileActivationError;
    if (a2) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  SecKeyRef v7 = v12;
  CFDataRef v6 = 0;
LABEL_13:
  if (trust) {
    CFRelease(trust);
  }
  SecTrustRef trust = 0;
  if (v4) {
    CFRelease(v4);
  }

  return v7;
}

char *lockcrypto_create_cert_request(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  int v10 = v9;
  uint64_t v56 = kSecOidCommonName;
  char v57 = SecASN1PrintableString;
  id v58 = v7;
  uint64_t v59 = 0;
  uint64_t v60 = 0;
  uint64_t v61 = 0;
  uint64_t v50 = kSecOidCountryName;
  char v51 = SecASN1PrintableString;
  CFStringRef v52 = @"US";
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v55 = 0;
  uint64_t v44 = kSecOidStateProvinceName;
  char v45 = SecASN1PrintableString;
  CFStringRef v46 = @"CA";
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  uint64_t v49 = 0;
  uint64_t v38 = kSecOidLocalityName;
  char v39 = SecASN1PrintableString;
  CFStringRef v40 = @"Cupertino";
  uint64_t v41 = 0;
  uint64_t v42 = 0;
  uint64_t v43 = 0;
  uint64_t v32 = kSecOidOrganization;
  char v33 = SecASN1PrintableString;
  CFStringRef v34 = @"Apple Inc.";
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  v25[7] = 0;
  uint64_t v26 = kSecOidOrganizationalUnit;
  char v27 = SecASN1PrintableString;
  CFStringRef v28 = @"iPhone";
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  v25[1] = &v56;
  v25[2] = &v50;
  v25[3] = &v44;
  v25[4] = &v38;
  v25[5] = &v32;
  v25[6] = &v26;
  if (!v8 || !v9)
  {
    long long v19 = createMobileActivationError((uint64_t)"lockcrypto_create_cert_request", 1166, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    unsigned int v11 = 0;
LABEL_11:
    SecKeyRef v14 = 0;
    goto LABEL_12;
  }
  v25[0] = 0;
  unsigned int v11 = (const void *)lockcrypto_public_key_from_pem_data(v8, (NSError **)v25);
  id v12 = v25[0];
  uint64_t v13 = v12;
  if (!v11)
  {
    long long v19 = createMobileActivationError((uint64_t)"lockcrypto_create_cert_request", 1172, @"com.apple.MobileActivation.ErrorDomain", -1, v12, @"Failed to retrieve public key from data.");

    goto LABEL_11;
  }
  id v24 = v12;
  SecKeyRef v14 = lockcrypto_private_key_from_pem_data(v10, (NSError **)&v24);
  id v15 = v24;

  if (!v14)
  {
    long long v19 = createMobileActivationError((uint64_t)"lockcrypto_create_cert_request", 1178, @"com.apple.MobileActivation.ErrorDomain", -1, v15, @"Failed to retrieve private key from data.");

LABEL_12:
    uint64_t v17 = 0;
    if (!a4) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  CertificateRequestWithParameters = (void *)SecGenerateCertificateRequestWithParameters();
  uint64_t v17 = CertificateRequestWithParameters;
  if (!CertificateRequestWithParameters)
  {
    long long v19 = createMobileActivationError((uint64_t)"lockcrypto_create_cert_request", 1184, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to generate certificate request.");

    if (!a4)
    {
LABEL_14:
      uint64_t v18 = 0;
      uint64_t v21 = 0;
      if (!v11) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
LABEL_13:
    *a4 = v19;
    goto LABEL_14;
  }
  id v23 = v15;
  uint64_t v18 = lockcrypto_create_pem(CertificateRequestWithParameters, "CERTIFICATE REQUEST", &v23);
  long long v19 = (NSError *)v23;

  if (!v18)
  {
    uint64_t v20 = createMobileActivationError((uint64_t)"lockcrypto_create_cert_request", 1190, @"com.apple.MobileActivation.ErrorDomain", -1, v19, @"Failed to encode the certificate request.");

    long long v19 = v20;
    if (!a4) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  CFRelease(v11);
  uint64_t v21 = v18;
LABEL_16:
  if (v14) {
    CFRelease(v14);
  }

  return v21;
}

uint64_t lockcrypto_public_key_from_pem_data(void *a1, NSError **a2)
{
  id v3 = a1;
  id v4 = v3;
  if (!v3)
  {
    CFDataRef v6 = createMobileActivationError((uint64_t)"lockcrypto_public_key_from_pem_data", 1808, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    id v5 = 0;
    if (!a2)
    {
LABEL_10:
      uint64_t v8 = 0;
      goto LABEL_11;
    }
LABEL_6:
    CFDataRef v6 = v6;
    uint64_t v8 = 0;
    *a2 = v6;
    goto LABEL_11;
  }
  id v12 = 0;
  id v5 = lockcrypto_decode_pem(v3, "RSA PUBLIC KEY", (NSError **)&v12);
  CFDataRef v6 = (NSError *)v12;
  if (!v5)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_public_key_from_pem_data", 1814, @"com.apple.MobileActivation.ErrorDomain", -1, v6, @"Failed to decode data.");
    goto LABEL_9;
  }
  id v5 = v5;
  [v5 bytes];
  [v5 length];
  uint64_t RSAPublicKey = SecKeyCreateRSAPublicKey();
  if (!RSAPublicKey)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_public_key_from_pem_data", 1820, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create public key from data.");
LABEL_9:
    int v10 = MobileActivationError;

    CFDataRef v6 = v10;
    if (!a2) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  uint64_t v8 = RSAPublicKey;
LABEL_11:

  return v8;
}

SecKeyRef lockcrypto_private_key_from_pem_data(void *a1, NSError **a2)
{
  id v3 = a1;
  id v4 = v3;
  CFErrorRef error = 0;
  if (v3)
  {
    id v12 = 0;
    CFDataRef v5 = (const __CFData *)lockcrypto_decode_pem(v3, "RSA PRIVATE KEY", (NSError **)&v12);
    CFDataRef v6 = (NSError *)v12;
    if (v5)
    {
      v14[0] = kSecAttrKeyType;
      v14[1] = kSecAttrKeyClass;
      v15[0] = kSecAttrKeyTypeRSA;
      v15[1] = kSecAttrKeyClassPrivate;
      id v7 = +[NSDictionary dictionaryWithObjects:v15 forKeys:v14 count:2];
      SecKeyRef v8 = SecKeyCreateWithData(v5, (CFDictionaryRef)v7, &error);
      if (v8)
      {
        SecKeyRef v9 = v8;
        goto LABEL_11;
      }
      int v10 = createMobileActivationError((uint64_t)"lockcrypto_private_key_from_pem_data", 1785, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to create private key from key data.");
    }
    else
    {
      int v10 = createMobileActivationError((uint64_t)"lockcrypto_private_key_from_pem_data", 1775, @"com.apple.MobileActivation.ErrorDomain", -1, v6, @"Failed to decode data.");

      id v7 = 0;
    }
    CFDataRef v6 = v10;
    if (a2) {
      goto LABEL_10;
    }
LABEL_6:
    SecKeyRef v9 = 0;
    goto LABEL_11;
  }
  CFDataRef v6 = createMobileActivationError((uint64_t)"lockcrypto_private_key_from_pem_data", 1769, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
  CFDataRef v5 = 0;
  id v7 = 0;
  if (!a2) {
    goto LABEL_6;
  }
LABEL_10:
  CFDataRef v6 = v6;
  SecKeyRef v9 = 0;
  *a2 = v6;
LABEL_11:
  if (error) {
    CFRelease(error);
  }
  CFErrorRef error = 0;

  return v9;
}

uint64_t lockcrypto_verify_device_cert(uint64_t a1, uint64_t a2, uint64_t a3, NSError **a4)
{
  SecTrustRef trust = 0;
  SecTrustResultType result = kSecTrustResultInvalid;
  if (!a1 || !a2)
  {
    id v12 = createMobileActivationError((uint64_t)"lockcrypto_verify_device_cert", 1222, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid input(s).");
    CFDataRef v6 = 0;
    FactoryDeviceCertificate = 0;
    SecKeyRef v8 = 0;
    if (a4) {
      goto LABEL_9;
    }
LABEL_13:
    uint64_t v13 = 0;
    goto LABEL_14;
  }
  if (a3)
  {
    v20[0] = a1;
    v20[1] = a2;
    v20[2] = a3;
    CFDataRef v6 = +[NSArray arrayWithObjects:v20 count:3];
    FactoryDeviceCertificate = (const void *)SecPolicyCreateiPhoneDeviceCertificate();
    SecKeyRef v8 = 0;
    if (!SecTrustCreateWithCertificates(v6, FactoryDeviceCertificate, &trust)) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
  uint64_t v19 = a1;
  CFDataRef v6 = +[NSArray arrayWithObjects:&v19 count:1];
  uint64_t v18 = a2;
  SecKeyRef v8 = +[NSArray arrayWithObjects:&v18 count:1];
  FactoryDeviceCertificate = (const void *)SecPolicyCreateFactoryDeviceCertificate();
  if (SecTrustCreateWithCertificates(v6, FactoryDeviceCertificate, &trust))
  {
LABEL_11:
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_verify_device_cert", 1236, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to trust.");
    goto LABEL_12;
  }
  if (v8 && SecTrustSetAnchorCertificates(trust, (CFArrayRef)v8))
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_verify_device_cert", 1241, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to set anchor certs.");
LABEL_12:
    id v12 = MobileActivationError;
    if (a4) {
      goto LABEL_9;
    }
    goto LABEL_13;
  }
LABEL_5:
  OSStatus v9 = SecTrustEvaluate(trust, &result);
  uint64_t v10 = result;
  if (v9 || (id v12 = 0, v13 = 1, result != kSecTrustResultProceed) && result != kSecTrustResultUnspecified)
  {
    unsigned int v11 = (void *)SecTrustCopyFailureDescription();
    id v12 = createMobileActivationError((uint64_t)"lockcrypto_verify_device_cert", 1249, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to evaluate trust: %d (%@)", v10, v11);

    if (!a4) {
      goto LABEL_13;
    }
LABEL_9:
    id v12 = v12;
    uint64_t v13 = 0;
    *a4 = v12;
  }
LABEL_14:
  if (FactoryDeviceCertificate) {
    CFRelease(FactoryDeviceCertificate);
  }
  if (trust) {
    CFRelease(trust);
  }
  SecTrustRef trust = 0;

  return v13;
}

uint64_t lockcrypto_verify_factory_ucrt(__SecCertificate *a1, uint64_t a2, id a3, void *a4)
{
  id v7 = a3;
  SecKeyRef v8 = v7;
  SecTrustResultType result = kSecTrustResultInvalid;
  CFTypeRef cf = 0;
  SecTrustRef trust = 0;
  if (!a1 || !a2 || !v7)
  {
    uint64_t v13 = createMobileActivationError((uint64_t)"lockcrypto_verify_factory_ucrt", 1289, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    OSStatus v9 = 0;
    uint64_t v10 = 0;
    id v14 = 0;
    id v15 = 0;
    id v16 = 0;
    AppleFDRProvisioning = 0;
    if (!a4) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  CFStringRef v34 = a1;
  OSStatus v9 = +[NSArray arrayWithObjects:&v34 count:1];
  uint64_t v33 = a2;
  uint64_t v10 = +[NSArray arrayWithObjects:&v33 count:1];
  AppleFDRProvisioning = (const void *)SecPolicyCreateAppleFDRProvisioning();
  if (!AppleFDRProvisioning)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_verify_factory_ucrt", 1298, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create policy.");
    goto LABEL_12;
  }
  if (SecTrustCreateWithCertificates(v9, AppleFDRProvisioning, &trust))
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_verify_factory_ucrt", 1303, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create trust.");
LABEL_12:
    uint64_t v13 = MobileActivationError;
    goto LABEL_13;
  }
  if (SecTrustSetAnchorCertificates(trust, (CFArrayRef)v10))
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_verify_factory_ucrt", 1308, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to set anchors.");
    goto LABEL_12;
  }
  OSStatus v20 = SecTrustEvaluate(trust, &result);
  uint64_t v21 = result;
  if (v20 || result != kSecTrustResultProceed && result != kSecTrustResultUnspecified)
  {
    long long v22 = (void *)SecTrustCopyFailureDescription();
    uint64_t v13 = createMobileActivationError((uint64_t)"lockcrypto_verify_factory_ucrt", 1316, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to evaluate trust: %d (%@)", v21, v22);

LABEL_13:
    id v14 = 0;
    id v15 = 0;
    id v16 = 0;
    if (!a4) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  uint64_t v23 = SecCertificateCopyCommonName(a1, (CFStringRef *)&cf);
  if (v23)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_verify_factory_ucrt", 1322, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy common name: %d", v23);
    goto LABEL_12;
  }
  id v29 = 0;
  id v14 = libaks_system_key_get_public(1, 1, (NSError **)&v29);
  uint64_t v13 = (NSError *)v29;
  if (!v14)
  {
    long long v25 = createMobileActivationError((uint64_t)"lockcrypto_verify_factory_ucrt", 1328, @"com.apple.MobileActivation.ErrorDomain", -1, v13, @"Failed to query SIK public key.");

    id v15 = 0;
LABEL_35:
    id v16 = 0;
    goto LABEL_39;
  }
  id v15 = [v14 hexString];
  if (!v15)
  {
    long long v25 = createMobileActivationError((uint64_t)"lockcrypto_verify_factory_ucrt", 1334, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate string from data.");

    goto LABEL_35;
  }
  id v24 = [objc_alloc((Class)NSString) initWithFormat:@"sik-%@-%@", v8, v15];
  id v16 = v24;
  if (!v24)
  {
    uint64_t v26 = createMobileActivationError((uint64_t)"lockcrypto_verify_factory_ucrt", 1340, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create string.", v27, v28);
LABEL_38:
    long long v25 = v26;

LABEL_39:
    uint64_t v13 = v25;
    if (!a4)
    {
LABEL_15:
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      if (!AppleFDRProvisioning) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
LABEL_14:
    *a4 = v13;
    goto LABEL_15;
  }
  if (([v24 isEqualToString:cf] & 1) == 0)
  {
    uint64_t v26 = createMobileActivationError((uint64_t)"lockcrypto_verify_factory_ucrt", 1345, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid factory UCRT common name (actual, expected): %@, %@", cf, v16);
    goto LABEL_38;
  }
  uint64_t v17 = 1;
LABEL_16:
  CFRelease(AppleFDRProvisioning);
  uint64_t v18 = v17;
LABEL_17:
  if (trust) {
    CFRelease(trust);
  }
  SecTrustRef trust = 0;
  if (cf) {
    CFRelease(cf);
  }

  return v18;
}

id lockcrypto_decode_error(void *a1, NSError **a2)
{
  id v3 = a1;
  id v4 = v3;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  *(_OWORD *)__str = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  *(_OWORD *)__little = 0u;
  long long v22 = 0u;
  if (v3)
  {
    id v5 = v3;
    CFDataRef v6 = (const char *)[v5 bytes];
    id v7 = [v5 length];
    if (v7)
    {
      size_t v8 = (size_t)v7;
      int v9 = snprintf(__str, 0x50uLL, "-----BEGIN %s-----\n", "ERROR");
      snprintf(__little, 0x50uLL, "\n-----END %s-----", "ERROR");
      uint64_t v10 = strnstr(v6, __str, v8);
      unsigned int v11 = strnstr(v6, __little, v8);
      if (v10 && v11)
      {
        id v12 = [objc_alloc((Class)NSData) initWithBytesNoCopy:&v10[v9] length:v11 - &v10[v9] freeWhenDone:0];
        if (v12)
        {
          id v13 = [objc_alloc((Class)NSString) initWithData:v12 encoding:4];
          if (v13)
          {
            id v14 = v13;
            id v15 = 0;
            goto LABEL_18;
          }
          MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_decode_error", 1466, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create string.");
        }
        else
        {
          MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_decode_error", 1460, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode data.");
        }
        id v15 = MobileActivationError;
        if (!a2) {
          goto LABEL_17;
        }
LABEL_13:
        id v15 = v15;
        id v14 = 0;
        *a2 = v15;
        goto LABEL_18;
      }
      uint64_t v17 = @"Invalid error data.";
      uint64_t v18 = 1452;
    }
    else
    {
      uint64_t v17 = @"Invalid data length.";
      uint64_t v18 = 1442;
    }
    id v16 = createMobileActivationError((uint64_t)"lockcrypto_decode_error", v18, @"com.apple.MobileActivation.ErrorDomain", -1, 0, v17);
  }
  else
  {
    id v16 = createMobileActivationError((uint64_t)"lockcrypto_decode_error", 1435, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
  }
  id v15 = v16;
  id v12 = 0;
  if (a2) {
    goto LABEL_13;
  }
LABEL_17:
  id v14 = 0;
LABEL_18:

  return v14;
}

id lockcrypto_decode_pem(void *a1, const char *a2, NSError **a3)
{
  id v5 = a1;
  CFDataRef v6 = v5;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  *(_OWORD *)__str = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  *(_OWORD *)__little = 0u;
  long long v23 = 0u;
  if (v5 && a2)
  {
    id v7 = v5;
    size_t v8 = (const char *)[v7 bytes];
    size_t v9 = (size_t)[v7 length];
    if ((v9 & 0x8000000000000000) != 0)
    {
      uint64_t v19 = @"Invalid data length.";
      uint64_t v20 = 1496;
    }
    else
    {
      size_t v10 = v9;
      int v11 = snprintf(__str, 0x50uLL, "-----BEGIN %s-----\n", a2);
      snprintf(__little, 0x50uLL, "\n-----END %s-----", a2);
      id v12 = strnstr(v8, __str, v10);
      id v13 = strnstr(v8, __little, v10);
      if (v12 && v13)
      {
        id v14 = [objc_alloc((Class)NSData) initWithBytesNoCopy:&v12[v11] length:v13 - &v12[v11] freeWhenDone:0];
        id v15 = [objc_alloc((Class)NSData) initWithBase64EncodedData:v14 options:1];
        if (v15)
        {
          id v16 = v15;
          uint64_t v17 = 0;
          goto LABEL_16;
        }
        uint64_t v17 = createMobileActivationError((uint64_t)"lockcrypto_decode_pem", 1516, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode data.");
        if (!a3) {
          goto LABEL_15;
        }
LABEL_13:
        uint64_t v17 = v17;
        id v16 = 0;
        *a3 = v17;
        goto LABEL_16;
      }
      uint64_t v19 = @"Invalid pem data.";
      uint64_t v20 = 1505;
    }
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_decode_pem", v20, @"com.apple.MobileActivation.ErrorDomain", -1, 0, v19);
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_decode_pem", 1489, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid inputs.");
  }
  uint64_t v17 = MobileActivationError;
  id v14 = 0;
  if (a3) {
    goto LABEL_13;
  }
LABEL_15:
  id v16 = 0;
LABEL_16:

  return v16;
}

id lockcrypto_decode_pems(void *a1, const char *a2, NSError **a3)
{
  id v5 = a1;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  *(_OWORD *)__str = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  *(_OWORD *)__little = 0u;
  long long v23 = 0u;
  if (!v5 || !a2)
  {
    id v12 = createMobileActivationError((uint64_t)"lockcrypto_decode_pems", 1547, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid input(s).");
    id v10 = 0;
    goto LABEL_13;
  }
  id v6 = objc_alloc_init((Class)NSMutableArray);
  if (!v6)
  {
    id v12 = createMobileActivationError((uint64_t)"lockcrypto_decode_pems", 1553, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate array.");
    id v10 = 0;
    goto LABEL_23;
  }
  id v7 = v5;
  size_t v8 = (const char *)[v7 bytes];
  uint64_t v9 = (uint64_t)[v7 length];
  id v10 = 0;
  if (v8)
  {
    int64_t v11 = v9;
    id v12 = 0;
    if (v9 >= 1)
    {
      uint64_t v21 = a3;
      id v13 = 0;
      while (1)
      {
        int v14 = snprintf(__str, 0x50uLL, "-----BEGIN %s-----\n", a2);
        int v15 = snprintf(__little, 0x50uLL, "\n-----END %s-----", a2);
        id v16 = strnstr(v8, __str, v11);
        uint64_t v17 = strnstr(v8, __little, v11);
        if (!v16) {
          break;
        }
        id v12 = (NSError *)v17;
        if (!v17) {
          goto LABEL_18;
        }
        id v18 = [objc_alloc((Class)NSData) initWithBytesNoCopy:&v16[v14] length:v17 - &v16[v14] freeWhenDone:0];
        id v10 = [objc_alloc((Class)NSData) initWithBase64EncodedData:v18 options:1];

        if (!v10)
        {
          id v12 = createMobileActivationError((uint64_t)"lockcrypto_decode_pems", 1582, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode data.");

          goto LABEL_19;
        }
        [v6 addObject:v10];
        uint64_t v19 = (char *)v12 + v15;
        int64_t v11 = &v8[v11] - v19;

        size_t v8 = v19;
        id v13 = v10;
        if (v11 <= 0)
        {
          id v12 = 0;
          goto LABEL_19;
        }
      }
      id v12 = 0;
LABEL_18:
      id v10 = v13;
LABEL_19:
      a3 = v21;
    }
  }
  else
  {
    id v12 = 0;
  }
  if (![v6 count])
  {

    if (a3)
    {
      id v12 = v12;
      id v6 = 0;
      *a3 = v12;
      goto LABEL_23;
    }
LABEL_13:
    id v6 = 0;
  }
LABEL_23:

  return v6;
}

id lockcrypto_decode_pem_trailing_data(void *a1, uint64_t a2, NSError **a3)
{
  id v5 = a1;
  if (!v5 || !a2)
  {
    int64_t v11 = createMobileActivationError((uint64_t)"lockcrypto_decode_pem_trailing_data", 1615, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    id v7 = 0;
    id v6 = 0;
    if (a3) {
      goto LABEL_18;
    }
LABEL_10:
    id v12 = 0;
    goto LABEL_19;
  }
  id v6 = [objc_alloc((Class)NSString) initWithData:v5 encoding:4];
  if (!v6)
  {
    int64_t v11 = createMobileActivationError((uint64_t)"lockcrypto_decode_pem_trailing_data", 1621, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create string from pem data.");
    id v7 = 0;
    if (a3) {
      goto LABEL_18;
    }
    goto LABEL_10;
  }
  id v7 = [objc_alloc((Class)NSString) initWithFormat: @"\n-----END %s-----", a2];
  if (v7)
  {
    size_t v8 = [v6 rangeOfString:v7];
    if (v8 == (unsigned char *)0x7FFFFFFFFFFFFFFFLL)
    {
      MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_decode_pem_trailing_data", 1633, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"String does not exist.");
    }
    else
    {
      id v13 = v8;
      uint64_t v14 = v9;
      if (v8 >= [v5 length] || &v13[v14] >= objc_msgSend(v5, "length"))
      {
        MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_decode_pem_trailing_data", 1638, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid or no trailing data.");
      }
      else
      {
        id v15 = objc_alloc((Class)NSData);
        id v16 = v5;
        id v17 = [v15 initWithBytes:&v13[(void)objc_msgSend(v16, "bytes") + v14] length:(unsigned char *)objc_msgSend(v16, "length") - &v13[v14]];
        if (v17)
        {
          id v12 = v17;
          int64_t v11 = 0;
          goto LABEL_19;
        }
        MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_decode_pem_trailing_data", 1644, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to encode data.");
      }
    }
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_decode_pem_trailing_data", 1627, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create string.");
  }
  int64_t v11 = MobileActivationError;
  if (!a3) {
    goto LABEL_10;
  }
LABEL_18:
  int64_t v11 = v11;
  id v12 = 0;
  *a3 = v11;
LABEL_19:

  return v12;
}

id lockcrypto_trailing_data_from_cert_pem_data(void *a1, NSError **a2)
{
  id v3 = a1;
  id v4 = v3;
  if (v3)
  {
    id v9 = 0;
    id v5 = lockcrypto_decode_pem_trailing_data(v3, (uint64_t)"CERTIFICATE", (NSError **)&v9);
    id v6 = (NSError *)v9;
    if (v5) {
      goto LABEL_7;
    }
    id v7 = createMobileActivationError((uint64_t)"lockcrypto_trailing_data_from_cert_pem_data", 1670, @"com.apple.MobileActivation.ErrorDomain", -1, v6, @"Failed to retrieve trailing pem data.");

    id v6 = v7;
    if (!a2) {
      goto LABEL_4;
    }
  }
  else
  {
    id v6 = createMobileActivationError((uint64_t)"lockcrypto_trailing_data_from_cert_pem_data", 1664, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    if (!a2)
    {
LABEL_4:
      id v5 = 0;
      goto LABEL_7;
    }
  }
  id v6 = v6;
  id v5 = 0;
  *a2 = v6;
LABEL_7:

  return v5;
}

uint64_t lockcrypto_identity_from_pem_data(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (!v5 || !v6)
  {
    id v12 = createMobileActivationError((uint64_t)"lockcrypto_identity_from_pem_data", 1692, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    SecCertificateRef v8 = 0;
    goto LABEL_9;
  }
  id v20 = 0;
  SecCertificateRef v8 = lockcrypto_cert_from_pem_data(v5, (NSError **)&v20);
  id v9 = v20;
  id v10 = v9;
  if (!v8)
  {
    id v12 = createMobileActivationError((uint64_t)"lockcrypto_identity_from_pem_data", 1698, @"com.apple.MobileActivation.ErrorDomain", -1, v9, @"Failed to get certificate from pem data.");

LABEL_9:
    SecKeyRef v11 = 0;
    if (!a3) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  id v19 = v9;
  SecKeyRef v11 = lockcrypto_private_key_from_pem_data(v7, (NSError **)&v19);
  id v12 = (NSError *)v19;

  if (!v11)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_identity_from_pem_data", 1704, @"com.apple.MobileActivation.ErrorDomain", -1, v12, @"Failed to get private key from pem data.");
    goto LABEL_18;
  }
  uint64_t v13 = SecIdentityCreate();
  if (!v13)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_identity_from_pem_data", 1710, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create identity from certificate/private key.");
LABEL_18:
    id v18 = MobileActivationError;

    id v12 = v18;
    if (!a3)
    {
LABEL_11:
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      if (!v11) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
LABEL_10:
    *a3 = v12;
    goto LABEL_11;
  }
  uint64_t v14 = v13;
LABEL_12:
  CFRelease(v11);
  uint64_t v15 = v14;
LABEL_13:
  if (v8) {
    CFRelease(v8);
  }

  return v15;
}

SecCertificateRef lockcrypto_cert_from_pem_data(void *a1, NSError **a2)
{
  id v3 = a1;
  id v4 = v3;
  if (!v3)
  {
    id v6 = createMobileActivationError((uint64_t)"lockcrypto_cert_from_pem_data", 1734, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    CFDataRef v5 = 0;
    if (!a2)
    {
LABEL_10:
      SecCertificateRef v8 = 0;
      goto LABEL_11;
    }
LABEL_6:
    id v6 = v6;
    SecCertificateRef v8 = 0;
    *a2 = v6;
    goto LABEL_11;
  }
  id v12 = 0;
  CFDataRef v5 = (const __CFData *)lockcrypto_decode_pem(v3, "CERTIFICATE", (NSError **)&v12);
  id v6 = (NSError *)v12;
  if (!v5)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_cert_from_pem_data", 1740, @"com.apple.MobileActivation.ErrorDomain", -1, v6, @"Failed to decode data.");
    goto LABEL_9;
  }
  SecCertificateRef v7 = SecCertificateCreateWithData(kCFAllocatorDefault, v5);
  if (!v7)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_cert_from_pem_data", 1746, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create certificate with cert data.");
LABEL_9:
    id v10 = MobileActivationError;

    id v6 = v10;
    if (!a2) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  SecCertificateRef v8 = v7;
LABEL_11:

  return v8;
}

NSDate *lockcrypto_copy_certificate_validity_date(uint64_t a1, int a2, NSError **a3)
{
  if (!a1)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_copy_certificate_validity_date", 1842, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    goto LABEL_12;
  }
  if (!a2)
  {
    SecCertificateNotValidBefore();
    if (v8 == 0.0)
    {
      CFDataRef v5 = @"Failed to obtain 'not valid before' date.";
      uint64_t v6 = 1855;
      goto LABEL_11;
    }
LABEL_8:
    id v9 = +[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:");
    if (v9)
    {
      id v10 = v9;
      SecKeyRef v11 = 0;
      goto LABEL_15;
    }
    CFDataRef v5 = @"Failed to convert validity date.";
    uint64_t v6 = 1862;
    goto LABEL_11;
  }
  SecCertificateNotValidAfter();
  if (v4 != 0.0) {
    goto LABEL_8;
  }
  CFDataRef v5 = @"Failed to obtain 'not valid after' date.";
  uint64_t v6 = 1849;
LABEL_11:
  MobileActivationError = createMobileActivationError((uint64_t)"lockcrypto_copy_certificate_validity_date", v6, @"com.apple.MobileActivation.ErrorDomain", -1, 0, v5);
LABEL_12:
  id v12 = MobileActivationError;
  SecKeyRef v11 = v12;
  if (a3)
  {
    SecKeyRef v11 = v12;
    id v10 = 0;
    *a3 = v11;
  }
  else
  {
    id v10 = 0;
  }
LABEL_15:

  return v10;
}

void __lockcrypto_query_oid_der_sequence_data_block_invoke(id a1)
{
  uint64_t v1 = +[NSData dataWithBytes:&unk_100207B6E length:2];
  uint64_t v2 = (void *)lockcrypto_query_oid_der_sequence_data_ASN1DERNull;
  lockcrypto_query_oid_der_sequence_data_ASN1DERNull = (uint64_t)v1;
}

BOOL device_supports_mfi_certificates()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 device_supports_mfi_certificates];

  return v1;
}

BOOL device_supports_eda_certificates()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 device_supports_eda_certificates];

  return v1;
}

uint64_t platform_supports_activation()
{
  return os_variant_is_darwinos() ^ 1;
}

BOOL device_supports_dcrt_oob()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 device_supports_dcrt_oob];

  return v1;
}

BOOL is_prodfused_demoted()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 is_prodfused_demoted];

  return v1;
}

BOOL is_devfused_undemoted()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 is_devfused_undemoted];

  return v1;
}

BOOL is_dev_board()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 is_dev_board];

  return v1;
}

BOOL is_product_fpga()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 is_fpga];

  return v1;
}

NSString *get_device_type()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 product_type];

  return v1;
}

BOOL is_product_pod()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 is_ipod];

  return v1;
}

BOOL is_product_pad()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 is_ipad];

  return v1;
}

BOOL is_product_phone()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 is_iphone];

  return v1;
}

BOOL is_product_cellular()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 has_baseband];

  return v1;
}

BOOL is_product_audio_accessory()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 is_audio_accessory];

  return v1;
}

BOOL is_internal_build()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 is_internal_build];

  return v1;
}

BOOL has_internal_diagnostics()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 has_internal_diagnostics];

  return v1;
}

NSString *get_device_class()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 device_class];

  return v1;
}

BOOL use_hactivation()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  BOOL v1 = [(DeviceType *)v0 should_hactivate];

  return v1;
}

id copy_bootsession_uuid()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  id v1 = [(DeviceType *)v0 copyBootSessionUUID];

  return v1;
}

NSString *copy_soc_generation()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  id v1 = [(DeviceType *)v0 soc_generation];

  return v1;
}

id copy_trusted_local_policy_hash()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  id v1 = [@"IODeviceTree" stringByAppendingString:@":/chosen"];
  id v2 = [(DeviceType *)v0 copyDeviceTreeProperty:v1 key:@"trusted-boot-policy-measurement"];

  id v3 = isNSData(v2);
  if (!v3) {
    goto LABEL_8;
  }
  double v4 = v3;
  id v5 = [v2 length];

  if (!v5) {
    goto LABEL_9;
  }
  uint64_t v6 = malloc_type_calloc(1uLL, (size_t)[v2 length], 0xDA89FFE2uLL);
  if (v6)
  {
    SecCertificateRef v7 = v6;
    [v2 getBytes:v6 length:[v2 length]];
    if (!*v7 && !memcmp(v7, v7 + 1, (size_t)[v2 length] - 1)) {
      id v5 = 0;
    }
    else {
      id v5 = v2;
    }
    free(v7);
  }
  else
  {
LABEL_8:
    id v5 = 0;
  }
LABEL_9:

  return v5;
}

id copy_sfr_manifest()
{
  uint64_t v0 = +[DeviceType sharedInstance];
  id v1 = [@"IODeviceTree" stringByAppendingString:@":/chosen/iBoot"];
  id v2 = [(DeviceType *)v0 copyDeviceTreeInt:v1 key:@"sfr-manifest-size" defaultValue:0];

  if (!v2 || ![v2 unsignedIntValue])
  {
    id v6 = 0;
LABEL_8:
    id v5 = 0;
    goto LABEL_9;
  }
  id v3 = +[DeviceType sharedInstance];
  id v4 = [@"IODeviceTree" stringByAppendingString:@":/chosen/iBoot"];
  id v5 = [(DeviceType *)v3 copyDeviceTreeProperty:v4 key:@"sfr-manifest-data"];

  id v6 = isNSData(v5);
  if (!v6) {
    goto LABEL_9;
  }
  id v7 = [v5 length];

  if (v7)
  {
    id v6 = [v5 subdataWithRange:0, [v2 unsignedIntValue]];

    if (v6)
    {
      id v6 = v6;
      id v5 = v6;
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  id v6 = 0;
LABEL_9:

  return v6;
}

BOOL bridge_init_server(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  dispatch_queue_t v5 = dispatch_queue_create("com.apple.mobileactivationd.bridge", 0);
  [@"com.apple.mobileactivationd.bridge" UTF8String];
  remote_service_listener = (void *)xpc_remote_connection_create_remote_service_listener();
  if (remote_service_listener)
  {
    id v8 = v4;
    id v9 = v3;
    xpc_remote_connection_set_event_handler();
    xpc_remote_connection_activate();
  }
  else
  {
    maLog((uint64_t)"bridge_init_server", 0, @"Failed to create remote listener.");
  }

  return remote_service_listener != 0;
}

void __bridge_init_server_block_invoke(uint64_t a1, id a2)
{
  id v3 = a2;
  if (xpc_get_type(v3) == (xpc_type_t)&_xpc_type_remote_connection)
  {
    xpc_remote_connection_set_target_queue();
    id v5 = *(id *)(a1 + 40);
    id v6 = v3;
    xpc_remote_connection_set_event_handler();
    xpc_remote_connection_activate();
  }
  else
  {
    id v4 = xpc_copy_description(v3);
    maLog((uint64_t)"bridge_init_server_block_invoke", 0, @"Unexpected event: %s", v4);
    if (v4) {
      free(v4);
    }
  }
}

void __bridge_init_server_block_invoke_2(uint64_t a1, id a2)
{
  id v3 = a2;
  if (xpc_get_type(v3) == (xpc_type_t)&_xpc_type_error)
  {
    id v10 = 0;
    SecKeyRef v11 = 0;
    uint64_t v15 = 0;
    id v16 = 0;
    id v17 = 0;
    id v18 = 0;
    id v19 = 0;
    goto LABEL_33;
  }
  if (xpc_get_type(v3) != (xpc_type_t)&_xpc_type_dictionary)
  {
    id v4 = @"Error";
    MobileActivationError = createMobileActivationError((uint64_t)"bridge_init_server_block_invoke_2", 126, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid XPC message.");
LABEL_4:
    id v6 = MobileActivationError;
    uint64_t v43 = 0;
    id v7 = 0;
    goto LABEL_5;
  }
  xpc_object_t v27 = xpc_dictionary_get_value(v3, (const char *)[@"BridgeXPCRequestEncodedDictionary" UTF8String]);
  if (!v27)
  {
    id v4 = @"Error";
    MobileActivationError = createMobileActivationError((uint64_t)"bridge_init_server_block_invoke_2", 133, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"XPC message missing key (%@) : %@", @"BridgeXPCRequestEncodedDictionary", v3);
    goto LABEL_4;
  }
  xpc_object_t v28 = v27;
  id v7 = (void *)_CFXPCCreateCFObjectFromXPCObject();
  id v29 = isNSDictionary(v7);

  uint64_t v43 = v28;
  if (v29)
  {
    long long v30 = (__CFString *)[v7 objectForKeyedSubscript:@"HostProcessName"];
    id v31 = isNSString(v30);

    if (!v31)
    {

      long long v30 = @"unknown";
    }
    id v32 = [*(id *)(a1 + 32) dark];
    data_ark_set(v32, 0, @"HostProcessName", v30, 0);

    id v33 = [v7 objectForKeyedSubscript:@"Command"];
    id v34 = isNSString(v33);

    id v40 = v33;
    uint64_t v41 = v30;
    if (v34)
    {
      id v35 = [v7 objectForKeyedSubscript:@"Options"];
      id v39 = v35;
      if (v35 && (id v36 = isNSDictionary(v35), v36, !v36))
      {
        id v4 = @"Error";
        uint64_t v37 = createMobileActivationError((uint64_t)"bridge_init_server_block_invoke_2", 161, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid key: %@", @"Options");
      }
      else
      {
        maLog((uint64_t)"bridge_init_server_block_invoke_2", 0, @"Host connection (%@): %@", v30, v33);
        id v4 = @"Error";
        uint64_t v37 = createMobileActivationError((uint64_t)"bridge_init_server_block_invoke_2", 432, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Received unknown command: %@", v33);
      }
      id v6 = v37;
    }
    else
    {
      id v4 = @"Error";
      id v6 = createMobileActivationError((uint64_t)"bridge_init_server_block_invoke_2", 154, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Request missing required key: %@", @"Command");
      id v39 = 0;
    }
    goto LABEL_6;
  }
  id v4 = @"Error";
  id v6 = createMobileActivationError((uint64_t)"bridge_init_server_block_invoke_2", 140, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create dictionary from XPC message.");
LABEL_5:
  id v39 = 0;
  id v40 = 0;
  uint64_t v41 = 0;
LABEL_6:
  id v8 = *(id *)(a1 + 40);
  id v9 = v3;
  id v10 = v4;
  SecKeyRef v11 = v6;
  if ([(__CFString *)v10 isEqualToString:v10]) {
    maLog((uint64_t)"send_reply", 0, @"Error occurred processing host-bridge request: %@", v11);
  }
  if (v11) {
    BOOL v12 = v10 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  uint64_t v42 = v7;
  if (v12)
  {
    uint64_t v13 = (NSDictionary *)&__NSDictionary0__struct;
    p_isa = (NSString *)&v11->super.isa;
  }
  else
  {
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    p_isa = (NSString *)&v11->super.isa;
    if (isKindOfClass)
    {
      uint64_t v21 = [(NSError *)v11 localizedDescription];
      long long v22 = [(NSError *)v11 userInfo];
      p_isa = +[NSString stringWithFormat:@"%@ (%@)", v21, v22];
    }
    uint64_t v44 = v10;
    char v45 = p_isa;
    uint64_t v13 = +[NSDictionary dictionaryWithObjects:&v45 forKeys:&v44 count:1];
  }
  long long v23 = (void *)_CFXPCCreateXPCObjectFromCFObject();
  if (v23)
  {
    uint64_t v24 = a1;
    xpc_object_t reply = xpc_dictionary_create_reply(v9);
    if (reply)
    {
      long long v26 = reply;
      xpc_dictionary_set_value(reply, (const char *)[@"BridgeXPCResponseEncodedDictionary" UTF8String], v23);
      xpc_remote_connection_send_message();
    }
    else
    {
      maLog((uint64_t)"send_reply", 0, @"Failed to create XPC reply.");
    }
    a1 = v24;
  }
  else
  {
    maLog((uint64_t)"send_reply", 0, @"Failed to create XPC dictionary.");
  }

  id v18 = v42;
  id v19 = v43;
  id v17 = v40;
  uint64_t v15 = v41;
  id v16 = v39;
LABEL_33:
  id v38 = [*(id *)(a1 + 32) dark];
  data_ark_remove(v38, 0, @"HostProcessName");
}

BOOL isAutomaticTimeEnabled()
{
  return &_TMIsAutomaticTimeEnabled && TMIsAutomaticTimeEnabled() != 0;
}

uint64_t copyRTCResetCount()
{
  if (&_TMGetRTCResetCount) {
    return TMGetRTCResetCount();
  }
  else {
    return 0;
  }
}

double copyMonotonicClockTimeInterval(void *a1)
{
  if (&_TMGetKernelMonotonicClock && (TMGetKernelMonotonicClock(), v2 > 0.0))
  {
    double v3 = v2;
    id v4 = 0;
    if (!a1) {
      goto LABEL_8;
    }
  }
  else
  {
    id v4 = createMobileActivationError((uint64_t)"copyMonotonicClockTimeInterval", 78, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query monotonic clock time.");
    double v3 = 0.0;
    if (!a1) {
      goto LABEL_8;
    }
  }
  if (v3 == 0.0) {
    *a1 = v4;
  }
LABEL_8:

  return v3;
}

id parseDERCertificatesFromChain(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = v3;
  memset(v16, 0, sizeof(v16));
  unint64_t v15 = 0;
  if (!v3)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"parseDERCertificatesFromChain", 106, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    goto LABEL_13;
  }
  id v5 = v3;
  id v6 = [v5 bytes];
  uint64_t v7 = CTParseCertificateSet((unint64_t)v6, (unint64_t)[v5 length] + (void)v6, v16, 3, &v15);
  if (v7 || !v15)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"parseDERCertificatesFromChain", 115, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to parse certificate set: 0x%08x", v7);
LABEL_13:
    BOOL v12 = MobileActivationError;
    id v8 = 0;
    if (!a2) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  id v8 = objc_alloc_init((Class)NSMutableArray);
  if (v8)
  {
    if (v15)
    {
      uint64_t v9 = 0;
      int v10 = 0;
      do
      {
        id v11 = [objc_alloc((Class)NSData) initWithBytes:*(void *)&v16[v9] length:*((void *)&v16[v9] + 1)];
        [v8 setObject:v11 atIndexedSubscript:v9];

        uint64_t v9 = ++v10;
      }
      while (v15 > v10);
    }
    id v8 = v8;
  }
  BOOL v12 = 0;
  if (a2)
  {
LABEL_14:
    if (!v8) {
      *a2 = v12;
    }
  }
LABEL_16:

  return v8;
}

uint64_t evaluateUCRTTrust(void *a1, void *a2, NSError **a3)
{
  id v5 = a1;
  id v6 = a2;
  if (v5)
  {
    id v7 = v5;
    id v8 = [v7 bytes];
    id v9 = [v7 length];
    id v10 = v6;
    uint64_t v11 = CTEvaluateUcrtTestRoot((unint64_t)v8, (uint64_t)v9, (uint64_t)[v10 bytes], (uint64_t)[v10 length], 0, 0);
    if (!v11)
    {
      uint64_t v13 = 0;
      uint64_t v14 = 1;
      goto LABEL_9;
    }
    MobileActivationError = createMobileActivationError((uint64_t)"evaluateUCRTTrust", 153, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to evaluate trust: 0x%08x", v11);
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"evaluateUCRTTrust", 147, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
  }
  uint64_t v13 = MobileActivationError;
  if (a3)
  {
    uint64_t v13 = v13;
    uint64_t v14 = 0;
    *a3 = v13;
  }
  else
  {
    uint64_t v14 = 0;
  }
LABEL_9:

  return v14;
}

uint64_t evaluateUCRTTrustWithCerts(__SecCertificate *a1, __SecCertificate *a2, __SecCertificate *a3, int a4, id a5, void *a6)
{
  uint64_t v11 = (NSDate *)a5;
  BOOL v12 = v11;
  CFErrorRef error = 0;
  if (!a1 || !a2 || !a3)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"evaluateUCRTTrustWithCerts", 180, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
LABEL_20:
    id v20 = MobileActivationError;
    id v14 = 0;
LABEL_21:
    CFDataRef v17 = 0;
LABEL_22:
    CFDataRef v15 = 0;
LABEL_23:
    CFDataRef v16 = 0;
    goto LABEL_24;
  }
  if (v11)
  {
    if (!a4) {
      goto LABEL_11;
    }
  }
  else
  {
    BOOL v12 = +[NSDate date];
    if (!a4) {
      goto LABEL_11;
    }
  }
  [(NSDate *)v12 timeIntervalSinceReferenceDate];
  if (!SecCertificateIsValid()
    || ([(NSDate *)v12 timeIntervalSinceReferenceDate],
        (SecCertificateIsValid() & 1) == 0))
  {
    MobileActivationError = createMobileActivationError((uint64_t)"evaluateUCRTTrustWithCerts", 196, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Certificate is expired.");
    goto LABEL_20;
  }
LABEL_11:
  id v14 = objc_alloc_init((Class)NSMutableData);
  if (!v14)
  {
    id v20 = createMobileActivationError((uint64_t)"evaluateUCRTTrustWithCerts", 205, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate data.");
    goto LABEL_21;
  }
  CFDataRef v15 = SecCertificateCopyData(a1);
  if (!v15)
  {
    id v20 = createMobileActivationError((uint64_t)"evaluateUCRTTrustWithCerts", 211, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy certificate.");
    CFDataRef v17 = 0;
    goto LABEL_23;
  }
  [v14 appendData:v15];
  CFDataRef v16 = SecCertificateCopyData(a2);

  if (!v16)
  {
    id v20 = createMobileActivationError((uint64_t)"evaluateUCRTTrustWithCerts", 219, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy certificate.");
    CFDataRef v17 = 0;
LABEL_36:
    CFDataRef v15 = 0;
    goto LABEL_24;
  }
  [v14 appendData:v16];
  CFDataRef v17 = SecCertificateCopyData(a3);

  if (!v17)
  {
    id v20 = createMobileActivationError((uint64_t)"evaluateUCRTTrustWithCerts", 227, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy certificate.");
    goto LABEL_22;
  }
  [v14 appendData:v17];
  id v18 = SecCertificateCopyKey(a3);
  CFDataRef v16 = v18;
  if (!v18)
  {
    id v20 = createMobileActivationError((uint64_t)"evaluateUCRTTrustWithCerts", 241, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy public key.");
    goto LABEL_36;
  }
  CFDataRef v15 = SecKeyCopyExternalRepresentation(v18, &error);
  if (v15)
  {
    id v25 = 0;
    char v19 = evaluateUCRTTrust(v14, v15, (NSError **)&v25);
    id v20 = (NSError *)v25;
    if (v19)
    {
      uint64_t v21 = 1;
LABEL_27:
      CFRelease(v16);
      uint64_t v22 = v21;
      goto LABEL_28;
    }
    uint64_t v24 = createMobileActivationError((uint64_t)"evaluateUCRTTrustWithCerts", 254, @"com.apple.MobileActivation.ErrorDomain", -1, v20, @"Failed to verify UCRT.");

    id v20 = v24;
  }
  else
  {
    id v20 = createMobileActivationError((uint64_t)"evaluateUCRTTrustWithCerts", 247, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to copy public key data.");
  }
LABEL_24:
  if (a6) {
    *a6 = v20;
  }
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  if (v16) {
    goto LABEL_27;
  }
LABEL_28:
  if (error) {
    CFRelease(error);
  }

  return v22;
}

uint64_t evaluateBAATrust(void *a1, void *a2, int a3, NSError **a4)
{
  id v7 = a1;
  id v8 = a2;
  if (v7)
  {
    id v9 = v7;
    id v10 = [v9 bytes];
    id v11 = [v9 length];
    id v12 = v8;
    id v13 = [v12 bytes];
    id v14 = [v12 length];
    if (a3)
    {
      unint64_t v15 = CTEvaluateBAASystemTestRoot((unint64_t)v10, (uint64_t)v11, (uint64_t)v13, (uint64_t)v14, 0, 0, 0);
      if (v15)
      {
LABEL_4:
        MobileActivationError = createMobileActivationError((uint64_t)"evaluateBAATrust", 290, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to evaluate trust: 0x%08x", v15);
        goto LABEL_6;
      }
    }
    else
    {
      unint64_t v15 = CTEvaluateBAAUserTestRoot((unint64_t)v10, (uint64_t)v11, (uint64_t)v13, (uint64_t)v14, 0, 0, 0);
      if (v15) {
        goto LABEL_4;
      }
    }
    CFDataRef v17 = 0;
    uint64_t v18 = 1;
    goto LABEL_11;
  }
  MobileActivationError = createMobileActivationError((uint64_t)"evaluateBAATrust", 280, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
LABEL_6:
  CFDataRef v17 = MobileActivationError;
  if (a4)
  {
    CFDataRef v17 = v17;
    uint64_t v18 = 0;
    *a4 = v17;
  }
  else
  {
    uint64_t v18 = 0;
  }
LABEL_11:

  return v18;
}

uint64_t evaluateBAATrustWithCerts(__SecCertificate *a1, __SecCertificate *a2, __SecCertificate *a3, int a4, int a5, id a6, void *a7)
{
  id v13 = (NSDate *)a6;
  id v14 = v13;
  CFErrorRef error = 0;
  if (!a1 || !a2 || !a3)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"evaluateBAATrustWithCerts", 317, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
LABEL_20:
    uint64_t v24 = MobileActivationError;
    id v16 = 0;
LABEL_24:
    CFDataRef v20 = 0;
LABEL_25:
    CFDataRef v19 = 0;
LABEL_26:
    uint64_t v22 = 0;
    goto LABEL_27;
  }
  if (v13)
  {
    if (!a5) {
      goto LABEL_11;
    }
  }
  else
  {
    id v14 = +[NSDate date];
    if (!a5) {
      goto LABEL_11;
    }
  }
  [(NSDate *)v14 timeIntervalSinceReferenceDate];
  if (!SecCertificateIsValid()
    || ([(NSDate *)v14 timeIntervalSinceReferenceDate],
        (SecCertificateIsValid() & 1) == 0))
  {
    MobileActivationError = createMobileActivationError((uint64_t)"evaluateBAATrustWithCerts", 333, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Certificate is expired.");
    goto LABEL_20;
  }
LABEL_11:
  id v16 = objc_alloc_init((Class)NSMutableData);
  if (!v16)
  {
    long long v26 = createMobileActivationError((uint64_t)"evaluateBAATrustWithCerts", 342, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate data.");
LABEL_23:
    uint64_t v24 = v26;
    goto LABEL_24;
  }
  CFDataRef v17 = SecCertificateCopyData(a1);
  if (!v17)
  {
    long long v26 = createMobileActivationError((uint64_t)"evaluateBAATrustWithCerts", 348, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy certificate.");
    goto LABEL_23;
  }
  CFDataRef v18 = v17;
  [v16 appendData:v17];
  CFDataRef v19 = SecCertificateCopyData(a2);

  if (!v19)
  {
    uint64_t v24 = createMobileActivationError((uint64_t)"evaluateBAATrustWithCerts", 356, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy certificate.");
    CFDataRef v20 = 0;
    goto LABEL_26;
  }
  [v16 appendData:v19];
  CFDataRef v20 = SecCertificateCopyData(a3);

  if (!v20)
  {
    uint64_t v24 = createMobileActivationError((uint64_t)"evaluateBAATrustWithCerts", 364, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy certificate.");
    goto LABEL_25;
  }
  [v16 appendData:v20];
  uint64_t v21 = SecCertificateCopyKey(a3);
  uint64_t v22 = v21;
  if (v21)
  {
    CFDataRef v19 = SecKeyCopyExternalRepresentation(v21, &error);
    if (v19)
    {
      id v30 = 0;
      char v23 = evaluateBAATrust(v16, v19, a4, (NSError **)&v30);
      uint64_t v24 = (NSError *)v30;
      if (v23)
      {
        uint64_t v25 = 1;
LABEL_30:
        CFRelease(v22);
        uint64_t v27 = v25;
        goto LABEL_31;
      }
      id v29 = createMobileActivationError((uint64_t)"evaluateBAATrustWithCerts", 391, @"com.apple.MobileActivation.ErrorDomain", -1, v24, @"Failed to verify BAA certificate.");

      uint64_t v24 = v29;
    }
    else
    {
      uint64_t v24 = createMobileActivationError((uint64_t)"evaluateBAATrustWithCerts", 384, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to copy public key data.");
    }
  }
  else
  {
    uint64_t v24 = createMobileActivationError((uint64_t)"evaluateBAATrustWithCerts", 378, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy public key.");
    CFDataRef v19 = 0;
  }
LABEL_27:
  if (a7) {
    *a7 = v24;
  }
  uint64_t v25 = 0;
  uint64_t v27 = 0;
  if (v22) {
    goto LABEL_30;
  }
LABEL_31:
  if (error) {
    CFRelease(error);
  }

  return v27;
}

uint64_t evaluateAppleSSLTrust(void *a1, void *a2, uint64_t a3, NSError **a4)
{
  id v7 = a1;
  id v8 = a2;
  if (v7)
  {
    id v9 = v7;
    id v10 = [v9 bytes];
    id v11 = [v9 length];
    id v12 = v8;
    id v13 = [v12 UTF8String];
    id v14 = [v12 length];
    uint64_t v15 = 1;
    uint64_t v16 = CTEvaluateAppleSSLWithOptionalTemporalCheck((unint64_t)v10, (uint64_t)v11, (uint64_t)v13, (uint64_t)v14, a3, 0, 1);
    if (!v16)
    {
      CFDataRef v18 = 0;
      goto LABEL_9;
    }
    MobileActivationError = createMobileActivationError((uint64_t)"evaluateAppleSSLTrust", 430, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to evaluate trust: 0x%08x", v16);
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"evaluateAppleSSLTrust", 418, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
  }
  CFDataRef v18 = MobileActivationError;
  if (a4)
  {
    CFDataRef v18 = v18;
    uint64_t v15 = 0;
    *a4 = v18;
  }
  else
  {
    uint64_t v15 = 0;
  }
LABEL_9:

  return v15;
}

uint64_t evaluateAccessoryTrust(void *a1, void *a2, uint64_t a3, NSError **a4)
{
  id v6 = a1;
  id v7 = a2;
  if (v6)
  {
    id v8 = v6;
    id v9 = [v8 bytes];
    id v10 = [v8 length];
    id v11 = v7;
    uint64_t v12 = CTEvaluateBAAAccessory((unint64_t)v9, (uint64_t)v10, (uint64_t)[v11 bytes], (uint64_t)[v11 length], 0, 0, 0, 0);
    if (!v12)
    {
      id v14 = 0;
      uint64_t v15 = 1;
      goto LABEL_9;
    }
    MobileActivationError = createMobileActivationError((uint64_t)"evaluateAccessoryTrust", 459, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to evaluate trust: 0x%08x", v12);
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"evaluateAccessoryTrust", 453, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
  }
  id v14 = MobileActivationError;
  if (a4)
  {
    id v14 = v14;
    uint64_t v15 = 0;
    *a4 = v14;
  }
  else
  {
    uint64_t v15 = 0;
  }
LABEL_9:

  return v15;
}

uint64_t evaluateAccessoryTrustWithCerts(__SecCertificate *a1, __SecCertificate *a2, __SecCertificate *a3, int a4, int a5, id a6, void *a7)
{
  uint64_t v12 = (NSDate *)a6;
  id v13 = v12;
  CFErrorRef error = 0;
  if (!a1 || !a2 || !a3)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"evaluateAccessoryTrustWithCerts", 486, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
LABEL_20:
    uint64_t v21 = MobileActivationError;
    id v15 = 0;
LABEL_21:
    CFDataRef v18 = 0;
LABEL_22:
    CFDataRef v16 = 0;
LABEL_23:
    CFDataRef v17 = 0;
    goto LABEL_24;
  }
  if (v12)
  {
    if (!a5) {
      goto LABEL_11;
    }
  }
  else
  {
    id v13 = +[NSDate date];
    if (!a5) {
      goto LABEL_11;
    }
  }
  [(NSDate *)v13 timeIntervalSinceReferenceDate];
  if (!SecCertificateIsValid()
    || ([(NSDate *)v13 timeIntervalSinceReferenceDate],
        (SecCertificateIsValid() & 1) == 0))
  {
    MobileActivationError = createMobileActivationError((uint64_t)"evaluateAccessoryTrustWithCerts", 502, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Certificate is expired.");
    goto LABEL_20;
  }
LABEL_11:
  id v15 = objc_alloc_init((Class)NSMutableData);
  if (!v15)
  {
    uint64_t v21 = createMobileActivationError((uint64_t)"evaluateAccessoryTrustWithCerts", 511, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate data.");
    goto LABEL_21;
  }
  CFDataRef v16 = SecCertificateCopyData(a1);
  if (!v16)
  {
    uint64_t v21 = createMobileActivationError((uint64_t)"evaluateAccessoryTrustWithCerts", 517, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy certificate.");
    CFDataRef v18 = 0;
    goto LABEL_23;
  }
  [v15 appendData:v16];
  CFDataRef v17 = SecCertificateCopyData(a2);

  if (!v17)
  {
    uint64_t v21 = createMobileActivationError((uint64_t)"evaluateAccessoryTrustWithCerts", 525, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy certificate.");
    CFDataRef v18 = 0;
LABEL_36:
    CFDataRef v16 = 0;
    goto LABEL_24;
  }
  [v15 appendData:v17];
  CFDataRef v18 = SecCertificateCopyData(a3);

  if (!v18)
  {
    uint64_t v21 = createMobileActivationError((uint64_t)"evaluateAccessoryTrustWithCerts", 533, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy certificate.");
    goto LABEL_22;
  }
  [v15 appendData:v18];
  CFDataRef v19 = SecCertificateCopyKey(a3);
  CFDataRef v17 = v19;
  if (!v19)
  {
    uint64_t v21 = createMobileActivationError((uint64_t)"evaluateAccessoryTrustWithCerts", 547, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy public key.");
    goto LABEL_36;
  }
  CFDataRef v16 = SecKeyCopyExternalRepresentation(v19, &error);
  if (v16)
  {
    id v26 = 0;
    char v20 = evaluateAccessoryTrust(v15, v16, 0, (NSError **)&v26);
    uint64_t v21 = (NSError *)v26;
    if (v20)
    {
      uint64_t v22 = 1;
LABEL_27:
      CFRelease(v17);
      uint64_t v23 = v22;
      goto LABEL_28;
    }
    uint64_t v25 = createMobileActivationError((uint64_t)"evaluateAccessoryTrustWithCerts", 560, @"com.apple.MobileActivation.ErrorDomain", -1, v21, @"Failed to verify MFi certificate.");

    uint64_t v21 = v25;
  }
  else
  {
    uint64_t v21 = createMobileActivationError((uint64_t)"evaluateAccessoryTrustWithCerts", 553, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to copy public key data.");
  }
LABEL_24:
  if (a7) {
    *a7 = v21;
  }
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  if (v17) {
    goto LABEL_27;
  }
LABEL_28:
  if (error) {
    CFRelease(error);
  }

  return v23;
}

uint64_t FindMyRemoveActivationLock(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = createMobileActivationError((uint64_t)"FindMyRemoveActivationLock", 404, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"Operation not supported on this platform.");
  id v5 = v4;
  if (a3) {
    *a3 = v4;
  }

  return 0;
}

id FindMyCopyMaskedActivationLockUserName(void *a1)
{
  uint64_t v21 = 0;
  uint64_t v22 = &v21;
  uint64_t v23 = 0x3032000000;
  uint64_t v24 = __Block_byref_object_copy__3;
  uint64_t v25 = __Block_byref_object_dispose__3;
  id v26 = 0;
  uint64_t v15 = 0;
  CFDataRef v16 = &v15;
  uint64_t v17 = 0x3032000000;
  CFDataRef v18 = __Block_byref_object_copy__3;
  CFDataRef v19 = __Block_byref_object_dispose__3;
  id v20 = 0;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  if (!v2)
  {
    id v7 = createMobileActivationError((uint64_t)"_FindMyCopyMaskedActivationLockUserNameiOS", 312, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create semaphore.");
LABEL_10:
    id v8 = (void *)v22[5];
    v22[5] = (uint64_t)v7;

    goto LABEL_11;
  }
  if (!objc_opt_class())
  {
    id v7 = createMobileActivationError((uint64_t)"_FindMyCopyMaskedActivationLockUserNameiOS", 317, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"FindMyDevice is not supported on this platform.");
    goto LABEL_10;
  }
  id v3 = +[FMDFMIPManager sharedInstance];

  if (!v3)
  {
    id v7 = createMobileActivationError((uint64_t)"_FindMyCopyMaskedActivationLockUserNameiOS", 322, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to load FMDFMMManager class.");
    goto LABEL_10;
  }
  id v4 = +[FMDFMIPManager sharedInstance];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3254779904;
  v11[2] = ___FindMyCopyMaskedActivationLockUserNameiOS_block_invoke;
  v11[3] = &__block_descriptor_56_e8_32s40r48r_e43_v24__0__FMDActivationLockInfo_8__NSError_16l;
  id v13 = &v21;
  id v14 = &v15;
  id v5 = v2;
  id v12 = v5;
  [(FMDFMIPManager *)v4 activationLockInfoFromDeviceWithCompletion:v11];

  dispatch_semaphore_wait(v5, 0xFFFFFFFFFFFFFFFFLL);
  if (!v22[5])
  {
    id v6 = (id)v16[5];
    if (!a1) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }
LABEL_11:
  id v6 = 0;
  if (!a1) {
    goto LABEL_14;
  }
LABEL_12:
  if (!v6) {
    *a1 = (id) v22[5];
  }
LABEL_14:
  id v9 = v6;
  _Block_object_dispose(&v15, 8);

  _Block_object_dispose(&v21, 8);

  return v9;
}

void sub_10001C94C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

BOOL FindMyDeviceIsActivationLocked(void *a1)
{
  uint64_t v18 = 0;
  CFDataRef v19 = &v18;
  uint64_t v20 = 0x3032000000;
  uint64_t v21 = __Block_byref_object_copy__3;
  uint64_t v22 = __Block_byref_object_dispose__3;
  id v23 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = &v14;
  uint64_t v16 = 0x2020000000;
  char v17 = 0;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  if (!v2)
  {
    id v7 = createMobileActivationError((uint64_t)"_FindMyDeviceIsActivationLockediOS", 249, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create semaphore.");
LABEL_10:
    id v8 = (void *)v19[5];
    v19[5] = (uint64_t)v7;

LABEL_11:
    BOOL v6 = 0;
    if (!a1) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (!objc_opt_class())
  {
    id v7 = createMobileActivationError((uint64_t)"_FindMyDeviceIsActivationLockediOS", 254, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"FindMyDevice is not supported on this platform.");
    goto LABEL_10;
  }
  id v3 = +[FMDFMIPManager sharedInstance];

  if (!v3)
  {
    id v7 = createMobileActivationError((uint64_t)"_FindMyDeviceIsActivationLockediOS", 259, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to load FMDFMMManager class.");
    goto LABEL_10;
  }
  id v4 = +[FMDFMIPManager sharedInstance];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3254779904;
  v10[2] = ___FindMyDeviceIsActivationLockediOS_block_invoke;
  v10[3] = &__block_descriptor_56_e8_32s40r48r_e20_v20__0B8__NSError_12l;
  id v12 = &v18;
  id v13 = &v14;
  id v5 = v2;
  id v11 = v5;
  [(FMDFMIPManager *)v4 isActivationLockEnabledWithCompletion:v10];

  dispatch_semaphore_wait(v5, 0xFFFFFFFFFFFFFFFFLL);
  if (v19[5]) {
    goto LABEL_11;
  }
  BOOL v6 = *((unsigned char *)v15 + 24) != 0;
  if (!a1) {
    goto LABEL_14;
  }
LABEL_12:
  if (!v6) {
    *a1 = (id) v19[5];
  }
LABEL_14:

  _Block_object_dispose(&v14, 8);
  _Block_object_dispose(&v18, 8);

  return v6;
}

void sub_10001CBF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

BOOL FindMyDeviceIsEnabled(void *a1)
{
  if (!objc_opt_class())
  {
    MobileActivationError = createMobileActivationError((uint64_t)"_FindMyDeviceIsEnablediOS", 370, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"FindMyDevice is not supported on this platform.");
    goto LABEL_7;
  }
  dispatch_semaphore_t v2 = +[FMDFMIPManager sharedInstance];
  if (!v2)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"_FindMyDeviceIsEnablediOS", 376, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate FMIP manager.");
LABEL_7:
    BOOL v6 = MobileActivationError;
    BOOL v5 = 0;
    if (!a1) {
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  id v3 = v2;
  id v4 = [(FMDFMIPManager *)v2 fmipAccount];
  BOOL v5 = v4 != 0;

  BOOL v6 = 0;
  if (!a1) {
    goto LABEL_10;
  }
LABEL_8:
  if (!v5) {
    *a1 = v6;
  }
LABEL_10:

  return v5;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void post_notification(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification(DarwinNotifyCenter, v1, v1, 0, 1u);
  }
}

uint64_t store_fairplay_blob(void *a1, void *a2, NSError **a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = isNSData(v6);

  if (!v7)
  {
    id v11 = createMobileActivationError((uint64_t)"store_fairplay_blob", 103, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    id v8 = 0;
    goto LABEL_7;
  }
  id v30 = 0;
  id v8 = lockcrypto_decode_pem(v6, "CONTAINER", (NSError **)&v30);
  uint64_t v9 = (NSError *)v30;
  if (!v8)
  {
    id v11 = createMobileActivationError((uint64_t)"store_fairplay_blob", 109, @"com.apple.MobileActivation.ErrorDomain", -1, v9, @"Failed to decode fairplay data.");

LABEL_7:
    id v12 = 0;
    if (a3) {
      goto LABEL_8;
    }
LABEL_24:
    uint64_t v13 = 0;
    goto LABEL_28;
  }
  id v29 = a3;
  id v28 = data_ark_copy(v5, @"com.apple.fairplay", @"FairPlayContextID");
  id v10 = isNSNumber(v28);

  if (!v10)
  {
    char v14 = 1;
    while (1)
    {
      id v15 = v5;
      memset(v32, 0, sizeof(v32));
      int v31 = 0;
      if (!is_product_fpga()) {
        break;
      }
      char v16 = 1;
      char v17 = (NSNumber *)v9;
LABEL_20:

      id v11 = v17;
      char v22 = v14 & (v16 ^ 1);
      uint64_t v9 = v11;
      char v14 = 0;
      if ((v22 & 1) == 0) {
        goto LABEL_21;
      }
    }
    zxcm2Qme0x(0, 0, (uint64_t)v32);
    if (v18)
    {
      MobileActivationError = createMobileActivationError((uint64_t)"create_fairplay_context", 56, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query fairplay HW info: %ld", v18);
    }
    else
    {
      int v20 = XtCqEf5X(0, (uint64_t)v32, (uint64_t)"/private/var/mobile/Media/iTunes_Control/iTunes", (uint64_t)&v31);
      if (!v20 && v31)
      {
        uint64_t v21 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:");
        data_ark_set(v15, @"com.apple.fairplay", @"FairPlayContextID", v21, 0);
        char v16 = 1;
        char v17 = (NSNumber *)v9;
LABEL_19:

        goto LABEL_20;
      }
      MobileActivationError = createMobileActivationError((uint64_t)"create_fairplay_context", 62, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to initialize fairplay context: %ld", v20);
    }
    uint64_t v21 = MobileActivationError;
    char v16 = 0;
    char v17 = v21;
    goto LABEL_19;
  }
  id v11 = v9;
LABEL_21:
  id v12 = data_ark_copy(v5, @"com.apple.fairplay", @"FairPlayContextID");

  id v23 = isNSNumber(v12);
  if (!v23)
  {
    id v26 = createMobileActivationError((uint64_t)"store_fairplay_blob", 124, @"com.apple.MobileActivation.ErrorDomain", -1, v11, @"Failed to create fairplay context.");

    id v11 = v26;
    a3 = v29;
    if (v29) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
  [v12 unsignedIntValue];
  id v8 = v8;
  [v8 bytes];
  [v8 length];
  DLHL();
  a3 = v29;
  if (!v24)
  {
    uint64_t v13 = 1;
    goto LABEL_28;
  }
  uint64_t v25 = createMobileActivationError((uint64_t)"store_fairplay_blob", 130, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to import key vault: %d", v24);

  id v11 = v25;
  if (!v29) {
    goto LABEL_24;
  }
LABEL_8:
  id v11 = v11;
  uint64_t v13 = 0;
  *a3 = v11;
LABEL_28:

  return v13;
}

uint64_t copy_keys_and_certs(void *a1, id a2, void *a3, unint64_t a4, unint64_t a5, SecIdentityRef *a6, NSError **a7)
{
  SecKeyRef privateKeyRef = 0;
  SecIdentityRef identityRef = 0;
  CFTypeRef cf = 0;
  CFStringRef v45 = @"UseSystemKeychainSharediPadOnly";
  CFStringRef v46 = &__kCFBooleanTrue;
  id v13 = a2;
  id v14 = a1;
  id v40 = 0;
  id v35 = +[NSDictionary dictionaryWithObjects:&v46 forKeys:&v45 count:1];
  int v15 = load_identity((CFTypeRef *)&identityRef, v14, v13, v35, 0, &v40);

  char v16 = (NSError *)v40;
  if (v15) {
    BOOL v17 = identityRef == 0;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"copy_keys_and_certs", 175, @"com.apple.MobileActivation.ErrorDomain", -1, v16, @"Failed to load device identity.");
    goto LABEL_7;
  }
  if (a3)
  {
    SecIdentityCopyPrivateKey(identityRef, &privateKeyRef);
    if (privateKeyRef)
    {
      id v39 = v16;
      uint64_t v24 = lockcrypto_create_pem_from_key(privateKeyRef, "RSA PRIVATE KEY", (NSError **)&v39);
      uint64_t v27 = (NSError *)v39;

      id v34 = v24;
      if (v24)
      {
        char v16 = v27;
        goto LABEL_26;
      }
      CFDataRef v19 = createMobileActivationError((uint64_t)"copy_keys_and_certs", 188, @"com.apple.MobileActivation.ErrorDomain", -1, v27, @"Failed to create pem data for private key.");
      int v20 = 0;
      uint64_t v21 = 0;
      CFDataRef v22 = 0;
      id v23 = 0;
      char v16 = v27;
LABEL_8:

      if (a7)
      {
        char v16 = v19;
        uint64_t v25 = 0;
        id v26 = 0;
        *a7 = v16;
      }
      else
      {
        uint64_t v25 = 0;
        id v26 = 0;
        char v16 = v19;
      }
      id v28 = v35;
      goto LABEL_16;
    }
    MobileActivationError = createMobileActivationError((uint64_t)"copy_keys_and_certs", 182, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy private key.");
LABEL_7:
    CFDataRef v19 = MobileActivationError;
    int v20 = 0;
    uint64_t v21 = 0;
    CFDataRef v22 = 0;
    id v23 = 0;
    uint64_t v24 = 0;
    goto LABEL_8;
  }
  id v34 = 0;
LABEL_26:
  if (!(a4 | a5))
  {
    id v33 = a6;
    int v20 = 0;
    id v26 = 0;
    CFDataRef v22 = 0;
LABEL_33:
    id v23 = 0;
    uint64_t v24 = 0;
    goto LABEL_34;
  }
  SecIdentityCopyCertificate(identityRef, (SecCertificateRef *)&cf);
  if (!cf)
  {
    CFDataRef v19 = createMobileActivationError((uint64_t)"copy_keys_and_certs", 196, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy certificate from device identity.");
    int v20 = 0;
    CFDataRef v22 = 0;
LABEL_55:
    id v23 = 0;
    uint64_t v24 = 0;
    goto LABEL_60;
  }
  if (!a5)
  {
    int v20 = 0;
    CFDataRef v22 = 0;
    goto LABEL_50;
  }
  CFDataRef v30 = SecCertificateCopyData((SecCertificateRef)cf);
  CFDataRef v22 = v30;
  if (!v30)
  {
    CFDataRef v19 = createMobileActivationError((uint64_t)"copy_keys_and_certs", 203, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy certificate data.");
    int v20 = 0;
    goto LABEL_55;
  }
  id v38 = v16;
  int v20 = lockcrypto_create_pem(v30, "CERTIFICATE", &v38);
  int v31 = (NSError *)v38;

  if (!v20)
  {
    CFDataRef v19 = createMobileActivationError((uint64_t)"copy_keys_and_certs", 209, @"com.apple.MobileActivation.ErrorDomain", -1, v31, @"Failed to create pem data for certificate.");
    id v23 = 0;
    uint64_t v24 = 0;
LABEL_59:
    char v16 = v31;
    goto LABEL_60;
  }
  char v16 = v31;
LABEL_50:
  id v33 = a6;
  if (!a4)
  {
    id v26 = 0;
    goto LABEL_33;
  }
  CFTypeRef v44 = cf;
  id v23 = +[NSArray arrayWithObjects:&v44 count:1];
  id v37 = v16;
  uint64_t v24 = (char *)lockcrypto_extract_public(v23, (NSError **)&v37);
  int v31 = (NSError *)v37;

  if (!v24)
  {
    CFDataRef v19 = createMobileActivationError((uint64_t)"copy_keys_and_certs", 222, @"com.apple.MobileActivation.ErrorDomain", -1, v31, @"Failed to extract public key from certificate chain.");
    goto LABEL_59;
  }
  id v36 = v31;
  id v32 = v31;
  id v26 = lockcrypto_create_pem_from_key((__SecKey *)v24, "RSA PUBLIC KEY", (NSError **)&v36);
  char v16 = (NSError *)v36;

  if (!v26)
  {
    CFDataRef v19 = createMobileActivationError((uint64_t)"copy_keys_and_certs", 228, @"com.apple.MobileActivation.ErrorDomain", -1, v16, @"Failed to create pem data for public key.");
LABEL_60:
    uint64_t v21 = v34;
    goto LABEL_8;
  }
LABEL_34:
  id v28 = v35;
  if (a3 && v34) {
    *a3 = v34;
  }
  if (a4 && v26) {
    *(void *)a4 = v26;
  }
  if (a5 && v20) {
    *(void *)a5 = v20;
  }
  uint64_t v25 = 1;
  uint64_t v21 = v34;
  if (v33 && identityRef)
  {
    CFRetain(identityRef);
    SecIdentityRef *v33 = identityRef;
  }
LABEL_16:
  if (cf) {
    CFRelease(cf);
  }
  CFTypeRef cf = 0;
  if (privateKeyRef) {
    CFRelease(privateKeyRef);
  }
  SecKeyRef privateKeyRef = 0;
  if (v24) {
    CFRelease(v24);
  }
  if (identityRef) {
    CFRelease(identityRef);
  }
  SecIdentityRef identityRef = 0;

  return v25;
}

id copy_device_certificate(NSError **a1)
{
  id v3 = 0;
  copy_keys_and_certs(@"lockdown-identities", @"com.apple.lockdown.identity.activation", 0, 0, (unint64_t)&v3, 0, a1);
  id v1 = v3;

  return v1;
}

id copy_activation_record(void *a1)
{
  id v1 = load_activation_records(a1);
  if ([v1 count])
  {
    id v2 = [v1 allValues];
    id v3 = [v2 objectAtIndex:0];
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

uint64_t load_and_validate_activation_record(void *a1, void *a2, char *a3, NSError **a4)
{
  id v7 = a1;
  id v8 = copy_activation_record(v7);
  if (!v8)
  {
    char v16 = createMobileActivationError((uint64_t)"load_and_validate_activation_record", 304, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Could not find an activation record.");
    id v12 = 0;
    id v10 = 0;
    if (!a4) {
      goto LABEL_17;
    }
    goto LABEL_10;
  }
  id v9 = objc_alloc_init((Class)NSMutableDictionary);
  id v10 = v9;
  if (!v9)
  {
    char v16 = createMobileActivationError((uint64_t)"load_and_validate_activation_record", 310, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");
    id v12 = 0;
    if (!a4) {
      goto LABEL_17;
    }
LABEL_10:
    char v16 = v16;
    char v17 = 0;
    uint64_t v18 = 0;
    *a4 = v16;
    goto LABEL_18;
  }
  [v9 setObject:&__kCFBooleanTrue forKeyedSubscript:@"UseCommittedUIK"];
  if (is_internal_build())
  {
    id v11 = objc_alloc((Class)NSUserDefaults);
    id v12 = [v11 persistentDomainForName:@"com.apple.mobileactivationd"];

    id v13 = [v12 objectForKeyedSubscript:@"UseQACertificates"];
    id v14 = isNSNumber(v13);

    if (v14)
    {
      id v15 = [v12 objectForKeyedSubscript:@"UseQACertificates"];
      [v10 setObject:v15 forKeyedSubscript:@"UseQACertificates"];
    }
  }
  else
  {
    id v12 = 0;
  }
  id v25 = 0;
  char v19 = verify_activation_record(v7, v8, v10, (uint64_t)&v25);
  char v16 = (NSError *)v25;
  if (v19)
  {
    char v17 = 0;
    uint64_t v18 = 1;
    goto LABEL_18;
  }
  [v10 setObject:&__kCFBooleanTrue forKeyedSubscript:@"UseFactoryCertificates"];
  [v10 setObject:&__kCFBooleanFalse forKeyedSubscript:@"UseQACertificates"];
  id v24 = v16;
  char v20 = verify_activation_record(v7, v8, v10, (uint64_t)&v24);
  uint64_t v21 = (NSError *)v24;

  if (v20)
  {
    char v17 = 1;
    uint64_t v18 = 1;
    char v16 = v21;
    goto LABEL_18;
  }
  char v16 = createMobileActivationError((uint64_t)"load_and_validate_activation_record", 341, @"com.apple.MobileActivation.ErrorDomain", -1, v21, @"Failed to validate activation record.");

  if (a4) {
    goto LABEL_10;
  }
LABEL_17:
  char v17 = 0;
  uint64_t v18 = 0;
LABEL_18:
  if (a3) {
    *a3 = v17;
  }
  char v22 = v18 ^ 1;
  if (!a2) {
    char v22 = 1;
  }
  if ((v22 & 1) == 0) {
    *a2 = v8;
  }

  return v18;
}

BOOL send_activation_record_to_mc(void *a1, NSError **a2)
{
  id v3 = a1;
  uint64_t v4 = objc_opt_class();
  if (!v4)
  {
    id v5 = createMobileActivationError((uint64_t)"send_activation_record_to_mc", 370, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"ManagedConfirguation is not supported on this platform.");
    if (a2)
    {
      id v5 = v5;
      id v8 = 0;
      id v6 = 0;
      *a2 = v5;
      goto LABEL_9;
    }
LABEL_7:
    id v8 = 0;
    id v6 = 0;
    goto LABEL_9;
  }
  id v5 = (NSError *)objc_opt_class();
  if (!v5) {
    goto LABEL_7;
  }
  id v6 = [v3 objectForKeyedSubscript:@"DeviceConfigurationFlags"];
  id v7 = isNSString(v6);

  if (v7)
  {
    CFStringRef v11 = @"DeviceConfigurationFlags";
    id v12 = v6;
    id v8 = +[NSDictionary dictionaryWithObjects:&v12 forKeys:&v11 count:1];
    id v9 = +[MCProfileConnection sharedConnection];
    [v9 lockdownDidReceiveActivationRecord:v8];

    id v5 = 0;
  }
  else
  {
    id v5 = 0;
    id v8 = 0;
  }
LABEL_9:

  return v4 != 0;
}

uint64_t store_software_update_configuration_flags(void *a1, NSError **a2)
{
  id v3 = a1;
  uint64_t v4 = v3;
  if (v3)
  {
    id v5 = [v3 objectForKeyedSubscript:@"SoftwareUpdate"];

    if (!v5)
    {
      id v12 = 0;
      id v6 = 0;
      goto LABEL_11;
    }
    id v6 = [v4 objectForKeyedSubscript:@"SoftwareUpdate"];
    id v7 = isNSDictionary(v6);

    if (v7)
    {
      uint64_t v17 = 0;
      uint64_t v18 = &v17;
      uint64_t v19 = 0x2050000000;
      id v8 = (void *)getSUManagerClientClass_softClass;
      uint64_t v20 = getSUManagerClientClass_softClass;
      if (!getSUManagerClientClass_softClass)
      {
        v16[0] = _NSConcreteStackBlock;
        v16[1] = 3254779904;
        v16[2] = __getSUManagerClientClass_block_invoke;
        _OWORD v16[3] = &__block_descriptor_40_e8_32r_e5_v8__0l;
        void v16[4] = &v17;
        __getSUManagerClientClass_block_invoke((uint64_t)v16);
        id v8 = (void *)v18[3];
      }
      id v9 = v8;
      _Block_object_dispose(&v17, 8);
      id v10 = objc_alloc_init(v9);
      if (v10)
      {
        CFStringRef v11 = v10;
        [v10 setMandatorySoftwareUpdateDictionary:v6];

        id v12 = 0;
LABEL_11:
        uint64_t v13 = 1;
        goto LABEL_16;
      }
      MobileActivationError = createMobileActivationError((uint64_t)"store_software_update_configuration_flags", 417, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate SUManager.");
    }
    else
    {
      MobileActivationError = createMobileActivationError((uint64_t)"store_software_update_configuration_flags", 411, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid software update record.");
    }
    id v12 = MobileActivationError;
    if (!a2)
    {
LABEL_15:
      uint64_t v13 = 0;
      goto LABEL_16;
    }
  }
  else
  {
    id v12 = createMobileActivationError((uint64_t)"store_software_update_configuration_flags", 404, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    id v6 = 0;
    if (!a2) {
      goto LABEL_15;
    }
  }
  id v12 = v12;
  uint64_t v13 = 0;
  *a2 = v12;
LABEL_16:

  return v13;
}

void sub_10001E180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getSUManagerClientClass_block_invoke(uint64_t a1)
{
  v3[0] = 0;
  if (!SoftwareUpdateServicesLibraryCore_frameworkLibrary)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = (void *)3221225472;
    v3[3] = __SoftwareUpdateServicesLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    v3[5] = v3;
    long long v4 = off_1002651B8;
    uint64_t v5 = 0;
    SoftwareUpdateServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!SoftwareUpdateServicesLibraryCore_frameworkLibrary) {
    __getSUManagerClientClass_block_invoke_cold_1(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("SUManagerClient");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getSUManagerClientClass_block_invoke_cold_2();
  }
  getSUManagerClientClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __SoftwareUpdateServicesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  SoftwareUpdateServicesLibraryCore_frameworkLibrary = result;
  return result;
}

id talkToServerWithError(void *a1, id a2, int a3, void *a4, void *a5, void *a6, void *a7)
{
  id v11 = a1;
  id v56 = a4;
  uint64_t v92 = 0;
  id v93 = &v92;
  uint64_t v94 = 0x3032000000;
  id v95 = __Block_byref_object_copy__4;
  uint64_t v96 = __Block_byref_object_dispose__4;
  id v97 = 0;
  uint64_t v88 = 0;
  uint64_t v89 = &v88;
  uint64_t v90 = 0x2020000000;
  uint64_t v91 = 0;
  uint64_t v82 = 0;
  id v83 = &v82;
  uint64_t v84 = 0x3032000000;
  id v85 = __Block_byref_object_copy__4;
  uint64_t v86 = __Block_byref_object_dispose__4;
  id v87 = 0;
  uint64_t v76 = 0;
  uint64_t v77 = &v76;
  uint64_t v78 = 0x3032000000;
  uint64_t v79 = __Block_byref_object_copy__4;
  id v80 = __Block_byref_object_dispose__4;
  id v81 = 0;
  uint64_t v70 = 0;
  int v71 = &v70;
  uint64_t v72 = 0x3032000000;
  uint64_t v73 = __Block_byref_object_copy__4;
  id v74 = __Block_byref_object_dispose__4;
  id v75 = 0;
  v69[0] = 0;
  v69[1] = v69;
  v69[2] = 0x2020000000;
  v69[3] = -1;
  if (!v11)
  {
    uint64_t v21 = createMobileActivationError((uint64_t)"talkToServerWithError", 175, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    char v22 = (void *)v71[5];
    v71[5] = (uint64_t)v21;

LABEL_15:
    id v53 = 0;
    id v54 = 0;
    id v19 = 0;
    id v20 = 0;
    id v15 = 0;
LABEL_16:
    char v16 = 0;
    uint64_t v27 = 0;
    id v28 = 0;
    id v18 = 0;
    id v17 = 0;
    goto LABEL_17;
  }
  dispatch_semaphore_t v12 = dispatch_semaphore_create(0);
  uint64_t v13 = (void *)v77[5];
  v77[5] = (uint64_t)v12;

  if (!v77[5])
  {
    id v23 = createMobileActivationError((uint64_t)"talkToServerWithError", 181, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create semaphore.");
    id v24 = (void *)v71[5];
    v71[5] = (uint64_t)v23;

    goto LABEL_15;
  }
  id v14 = objc_alloc_init(MANetworkServiceClientVersion);
  id v15 = v14;
  if (!v14)
  {
    id v25 = createMobileActivationError((uint64_t)"talkToServerWithError", 187, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create delegate.");
    id v26 = (void *)v71[5];
    v71[5] = (uint64_t)v25;

    goto LABEL_15;
  }
  [(MANetworkServiceClientVersion *)v14 setAllowInvalidCert:a2];
  char v16 = +[NSURLSessionConfiguration defaultSessionConfiguration];
  if (!v16)
  {
    id v32 = createMobileActivationError((uint64_t)"talkToServerWithError", 195, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query session configuration.");
    id v33 = (void *)v71[5];
    v71[5] = (uint64_t)v32;

    id v53 = 0;
    id v54 = 0;
    id v19 = 0;
    id v20 = 0;
    goto LABEL_16;
  }
  if (v56)
  {
    id v17 = [v56 objectForKey:@"NetworkProxyHost"];
    id v18 = [v56 objectForKey:@"NetworkProxyPort"];
    id v54 = [v56 objectForKey:@"SOCKSProxyHost"];
    id v53 = [v56 objectForKey:@"SOCKSProxyPort"];
    id v19 = [v56 objectForKey:@"NetworkServiceType"];
    id v20 = [v56 objectForKey:@"NetworkSecondaryIdentifier"];
    if (v17)
    {
      a2 = isNSString(v17);
      if (!a2) {
        goto LABEL_11;
      }
      if (!v18)
      {
LABEL_34:
        if (v19)
        {
          id v48 = isNSString(v19);
          if (!v48)
          {
            BOOL v49 = 1;
            goto LABEL_54;
          }
          if (!v20)
          {
            BOOL v49 = 0;
            goto LABEL_41;
          }
        }
        else if (!v20)
        {
          BOOL v49 = 0;
          goto LABEL_54;
        }
        id v36 = isNSString(v20);
        BOOL v49 = v36 == 0;

        if (v19)
        {
LABEL_41:

          if (!v18) {
            goto LABEL_42;
          }
          goto LABEL_55;
        }
LABEL_54:
        if (!v18)
        {
LABEL_42:
          if (!v17) {
            goto LABEL_43;
          }
          goto LABEL_56;
        }
LABEL_55:

        if (!v17)
        {
LABEL_43:
          if (v49) {
            goto LABEL_57;
          }
LABEL_44:
          if (v54)
          {
            id v37 = isNSString(v54);
            a2 = v37;
            if (!v37) {
              goto LABEL_61;
            }
            if (v53)
            {
              id v38 = v53;
              goto LABEL_50;
            }
          }
          else
          {
            id v38 = v53;
            if (v53)
            {
LABEL_50:
              id v39 = isNSNumber(v38);

              if (v54)
              {

                if (!v39) {
                  goto LABEL_61;
                }
                goto LABEL_65;
              }
              if (v39)
              {
                id v54 = 0;
                goto LABEL_65;
              }
LABEL_61:
              uint64_t v42 = createMobileActivationError((uint64_t)"talkToServerWithError", 213, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid SOCKS proxy dictionary: {%@, %@, %@}", v54, v53, v19);
              uint64_t v43 = (void *)v71[5];
              v71[5] = (uint64_t)v42;

              goto LABEL_58;
            }
            id v54 = 0;
          }
          id v53 = 0;
LABEL_65:
          if (v19)
          {
            [(NSURLSessionConfiguration *)v16 set_CTDataConnectionServiceType:v19];
            if ([v19 isEqualToString:kCTDataConnectionServiceTypeOTAActivation])
            {
              if ([v18 isEqualToNumber:&off_10027EE70]) {
                [(NSURLSessionConfiguration *)v16 set_requiresSecureHTTPSProxyConnection:1];
              }
            }
          }
          if (v20) {
            [(NSURLSessionConfiguration *)v16 set_sourceApplicationSecondaryIdentifier:v20];
          }
          if (v17 && v18)
          {
            id v44 = [v11 URL];
            id v45 = [v44 scheme];
            unsigned int v50 = [v45 isEqualToString:@"https"];

            if (v50)
            {
              v102[0] = kCFStreamPropertyHTTPSProxyHost;
              v102[1] = kCFStreamPropertyHTTPSProxyPort;
              v103[0] = v17;
              v103[1] = v18;
              CFStringRef v46 = +[NSDictionary dictionaryWithObjects:v103 forKeys:v102 count:2];
            }
            else
            {
              v100[0] = kCFStreamPropertyHTTPProxyHost;
              v100[1] = kCFStreamPropertyHTTPProxyPort;
              v101[0] = v17;
              v101[1] = v18;
              CFStringRef v46 = +[NSDictionary dictionaryWithObjects:v101 forKeys:v100 count:2];
            }
            [(NSURLSessionConfiguration *)v16 setConnectionProxyDictionary:v46];
          }
          if (v54 && v53)
          {
            v98[0] = @"SOCKSProxy";
            v98[1] = @"SOCKSPort";
            v99[0] = v54;
            v99[1] = v53;
            v98[2] = @"SOCKSEnable";
            v99[2] = &__kCFBooleanTrue;
            uint64_t v47 = +[NSDictionary dictionaryWithObjects:v99 forKeys:v98 count:3];
            [(NSURLSessionConfiguration *)v16 setConnectionProxyDictionary:v47];
          }
          goto LABEL_29;
        }
LABEL_56:

        if (v49) {
          goto LABEL_57;
        }
        goto LABEL_44;
      }
    }
    else if (!v18)
    {
      goto LABEL_34;
    }
    id v7 = isNSNumber(v18);
    if (!v7)
    {
      if (!v17)
      {
LABEL_57:
        id v40 = createMobileActivationError((uint64_t)"talkToServerWithError", 208, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid proxy dictionary: {%@, %@, %@}", v17, v18, v19);
        uint64_t v41 = (void *)v71[5];
        v71[5] = (uint64_t)v40;

        goto LABEL_58;
      }
LABEL_11:

      goto LABEL_57;
    }
    goto LABEL_34;
  }
  id v53 = 0;
  id v54 = 0;
  id v19 = 0;
  id v20 = 0;
  id v18 = 0;
  id v17 = 0;
LABEL_29:
  if (a3) {
    [(NSURLSessionConfiguration *)v16 setWaitsForConnectivity:1];
  }
  [v11 timeoutInterval];
  [(NSURLSessionConfiguration *)v16 setTimeoutIntervalForResource:"setTimeoutIntervalForResource:"];
  uint64_t v27 = +[NSURLSession sessionWithConfiguration:v16 delegate:v15 delegateQueue:0];
  if (v27)
  {
    v57[0] = _NSConcreteStackBlock;
    v57[1] = 3254779904;
    v57[2] = __talkToServerWithError_block_invoke;
    void v57[3] = &__block_descriptor_120_e8_32s40s48s56s64s72r80r88r96r104r112r_e46_v32__0__NSData_8__NSURLResponse_16__NSError_24l;
    uint64_t v63 = &v88;
    uint64_t v64 = &v92;
    id v65 = v69;
    SecCertificateRef v66 = &v70;
    id v58 = v11;
    char v16 = v16;
    id v59 = v16;
    id v19 = v19;
    id v60 = v19;
    id v20 = v20;
    id v61 = v20;
    id v15 = v15;
    id v62 = v15;
    id v67 = &v82;
    uint64_t v68 = &v76;
    id v28 = [(NSURLSession *)v27 dataTaskWithRequest:v58 completionHandler:v57];

    [(NSURLSessionDataTask *)v28 resume];
    dispatch_semaphore_wait((dispatch_semaphore_t)v77[5], 0xFFFFFFFFFFFFFFFFLL);
    goto LABEL_17;
  }
  id v34 = createMobileActivationError((uint64_t)"talkToServerWithError", 268, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create session.");
  id v35 = (void *)v71[5];
  v71[5] = (uint64_t)v34;

LABEL_58:
  uint64_t v27 = 0;
  id v28 = 0;
LABEL_17:
  [(NSURLSession *)v27 invalidateAndCancel];
  if (a5) {
    *a5 = (id) v93[5];
  }
  if (a6) {
    *a6 = v89[3];
  }
  id v29 = (void *)v83[5];
  if (a7 && !v29)
  {
    *a7 = (id) v71[5];
    id v29 = (void *)v83[5];
  }
  id v30 = v29;
  _Block_object_dispose(v69, 8);

  _Block_object_dispose(&v70, 8);
  _Block_object_dispose(&v76, 8);

  _Block_object_dispose(&v82, 8);
  _Block_object_dispose(&v88, 8);
  _Block_object_dispose(&v92, 8);

  return v30;
}

void sub_10001F11C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a41, 8);
  _Block_object_dispose(&a47, 8);
  _Block_object_dispose(&a53, 8);
  _Block_object_dispose(&a59, 8);
  _Block_object_dispose((const void *)(v59 - 256), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void __talkToServerWithError_block_invoke(uint64_t a1, id a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  id v9 = a3;
  *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = [v9 statusCode];
  id v10 = [v9 allHeaderFields];

  uint64_t v11 = *(void *)(*(void *)(a1 + 80) + 8);
  dispatch_semaphore_t v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 40) = v10;

  if (v7 && !v8)
  {
    uint64_t v13 = +[NSData dataWithData:v7];
    uint64_t v14 = *(void *)(*(void *)(a1 + 104) + 8);
    id v15 = *(id *)(v14 + 40);
    *(void *)(v14 + 40) = v13;
    goto LABEL_16;
  }
  if (mobileactivationErrorHasDomainAndErrorCode(v8, NSURLErrorDomain, (id)0xFFFFFFFFFFFFFC17))
  {
    uint64_t v16 = -18;
LABEL_14:
    *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24) = v16;
    goto LABEL_15;
  }
  if (mobileactivationErrorHasDomainAndErrorCode(v8, NSURLErrorDomain, (id)0xFFFFFFFFFFFFFC19))
  {
    uint64_t v16 = -19;
    goto LABEL_14;
  }
  if (mobileactivationErrorHasDomainAndErrorCode(v8, NSURLErrorDomain, (id)0xFFFFFFFFFFFFFC0FLL))
  {
    uint64_t v16 = -17;
    goto LABEL_14;
  }
  if (mobileactivationErrorHasDomainAndErrorCode(v8, NSURLErrorDomain, (id)0xFFFFFFFFFFFFFC15))
  {
    uint64_t v16 = -20;
    goto LABEL_14;
  }
  if (mobileactivationErrorHasDomainAndErrorCode(v8, (void *)kCFErrorDomainCFNetwork, (id)0x136))
  {
    uint64_t v16 = -21;
    goto LABEL_14;
  }
LABEL_15:
  uint64_t v26 = *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24);
  id v15 = [*(id *)(a1 + 32) URL];
  id v17 = [*(id *)(a1 + 40) connectionProxyDictionary];
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v18 = *(void *)(a1 + 56);
  id v20 = +[NSURLSessionTask description];
  uint64_t v21 = *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24);
  id v22 = [*(id *)(a1 + 64) lastNetworkError];
  id v23 = createMobileActivationError((uint64_t)"talkToServerWithError_block_invoke", 290, @"com.apple.MobileActivation.ErrorDomain", v26, v8, @"Failed to send HTTP request to %@ (proxy settings: %@ // service type: %@ // secondary identifier: %@ // session: %@): %ld (%@)", v15, v17, v19, v18, v20, v21, v22);
  uint64_t v24 = *(void *)(*(void *)(a1 + 96) + 8);
  id v25 = *(void **)(v24 + 40);
  *(void *)(v24 + 40) = v23;

LABEL_16:
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(void *)(*(void *)(a1 + 112) + 8) + 40));
}

void __copy_helper_block_e8_32s40s48s56s64s72r80r88r96r104r112r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  id v8 = *(id *)(a2 + 64);
  _Block_object_assign((void *)(a1 + 72), *(const void **)(a2 + 72), 8);
  _Block_object_assign((void *)(a1 + 80), *(const void **)(a2 + 80), 8);
  _Block_object_assign((void *)(a1 + 88), *(const void **)(a2 + 88), 8);
  _Block_object_assign((void *)(a1 + 96), *(const void **)(a2 + 96), 8);
  _Block_object_assign((void *)(a1 + 104), *(const void **)(a2 + 104), 8);
  id v9 = *(const void **)(a2 + 112);

  _Block_object_assign((void *)(a1 + 112), v9, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64s72r80r88r96r104r112r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 112), 8);
  _Block_object_dispose(*(const void **)(a1 + 104), 8);
  _Block_object_dispose(*(const void **)(a1 + 96), 8);
  _Block_object_dispose(*(const void **)(a1 + 88), 8);
  _Block_object_dispose(*(const void **)(a1 + 80), 8);
  _Block_object_dispose(*(const void **)(a1 + 72), 8);

  id v2 = *(void **)(a1 + 32);
}

id copyCellularProxyDictionary(char a1, NSError **a2)
{
  id v4 = objc_alloc_init((Class)NSMutableDictionary);
  if (!v4)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"copyCellularProxyDictionary", 348, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to dictionary.");
    goto LABEL_18;
  }
  if ((a1 & 1) == 0)
  {
    id v13 = objc_alloc((Class)CoreTelephonyClient);
    uint64_t v14 = dispatch_get_global_queue(0, 0);
    id v5 = [v13 initWithQueue:v14];

    if (v5)
    {
      id v9 = [v5 getCurrentDataSubscriptionContextSync:0];
      id v15 = [objc_alloc((Class)CTBundle) initWithBundleType:1];
      id v10 = v15;
      id v6 = 0;
      id v7 = 0;
      uint64_t v11 = 0;
      if (v9 && v15)
      {
        id v6 = [v5 copyCarrierBundleValue:v9 key:@"OTAActivationProxyHost" bundleType:v15 error:0];
        id v7 = [v5 copyCarrierBundleValue:v9 key:@"OTAActivationProxyPort" bundleType:v10 error:0];
        id v16 = [v9 uuid];
        uint64_t v11 = (__CFString *)[v16 UUIDString];
      }
      id v8 = kCTDataConnectionServiceTypeOTAActivation;
      if (v8) {
        [v4 setObject:v8 forKeyedSubscript:@"NetworkServiceType"];
      }
      if (!v11) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    MobileActivationError = createMobileActivationError((uint64_t)"copyCellularProxyDictionary", 357, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create Telephony client.");
LABEL_18:
    uint64_t v19 = MobileActivationError;
    uint64_t v18 = v19;
    if (a2)
    {
      uint64_t v18 = v19;
      id v10 = 0;
      id v9 = 0;
      uint64_t v11 = 0;
      id v8 = 0;
      id v7 = 0;
      id v6 = 0;
      id v5 = 0;
      id v17 = 0;
      *a2 = v18;
    }
    else
    {
      id v10 = 0;
      id v9 = 0;
      uint64_t v11 = 0;
      id v8 = 0;
      id v7 = 0;
      id v6 = 0;
      id v5 = 0;
      id v17 = 0;
    }
    goto LABEL_21;
  }
  id v5 = 0;
  id v6 = 0;
  id v7 = 0;
  id v8 = 0;
  id v9 = 0;
  id v10 = 0;
  uint64_t v11 = @"com.apple.CommCenter.CellularPlanProvisioning";
LABEL_12:
  [v4 setObject:v11 forKeyedSubscript:@"NetworkSecondaryIdentifier"];
LABEL_13:
  if (v6 && v7)
  {
    [v4 setObject:v6 forKeyedSubscript:@"NetworkProxyHost"];
    [v4 setObject:v7 forKeyedSubscript:@"NetworkProxyPort"];
  }
  id v17 = v4;
  uint64_t v18 = 0;
LABEL_21:
  id v20 = v17;

  return v20;
}

uint64_t performMigration(void *a1, void *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3254779904;
  block[2] = __performMigration_block_invoke;
  block[3] = &__block_descriptor_40_e8_32s_e5_v8__0l;
  id v3 = a1;
  id v7 = v3;
  if (performMigration_onceToken != -1) {
    dispatch_once(&performMigration_onceToken, block);
  }
  uint64_t v4 = performMigration_retval;
  if (a2 && (performMigration_retval & 1) == 0)
  {
    *a2 = (id) performMigration_localError;
    uint64_t v4 = performMigration_retval;
  }

  return v4;
}

void __performMigration_block_invoke(uint64_t a1)
{
  id v2 = copySignpostLoggingHandle();
  if (os_signpost_enabled(v2))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v2, OS_SIGNPOST_INTERVAL_BEGIN, 0xEEEEB0B5B2B2EEEELL, "PerformMigration", "", buf, 2u);
  }

  id v3 = *(void **)(a1 + 32);
  if (!v3)
  {
    id v17 = createMobileActivationError((uint64_t)"performMigration_block_invoke", 2075, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid input(s).");
    goto LABEL_92;
  }
  id v4 = v3;
  id v5 = +[GestaltHlpr getSharedInstance];
  id v6 = [v5 copyAnswer:@"BuildVersion"];

  id v7 = isNSString(v6);
  if (!v7)
  {
    uint64_t v18 = createMobileActivationError((uint64_t)"perform_data_migration", 1730, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve %@.", @"BuildVersion");
    v161 = 0;
    id v162 = 0;
LABEL_15:
    v160 = 0;
LABEL_76:
    char v57 = v18;
    char v16 = 0;
    id v15 = v57;
LABEL_77:

    goto LABEL_78;
  }
  id v8 = (__CFString *)data_ark_copy(v4, 0, @"BuildVersion");
  id v9 = isNSString(v8);

  if (!v9)
  {

    id v8 = &stru_100276C00;
  }
  id v10 = +[GestaltHlpr getSharedInstance];
  id v11 = [v10 copyAnswer:@"ProductVersion"];

  id v162 = v11;
  id v12 = isNSString(v11);

  v161 = v8;
  if (!v12)
  {
    uint64_t v18 = createMobileActivationError((uint64_t)"perform_data_migration", 1741, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve %@.", @"ProductVersion");
    goto LABEL_15;
  }
  id v13 = (__CFString *)data_ark_copy(v4, 0, @"ProductVersion");
  id v14 = isNSString(v13);

  if (!v14)
  {

    id v13 = &stru_100276C00;
  }
  v160 = v13;
  if (([v6 isEqualToString:v8] & 1) == 0)
  {
    maLog((uint64_t)"perform_data_migration", 0, @"Upgrade from %@ (%@) to %@ (%@) detected.", v8, v13, v6, v11);
    id v168 = 0;
    char v19 = perform_sydro_data_migration_tasks(v4, (NSError **)&v168);
    id v20 = (NSError *)v168;
    if ((v19 & 1) == 0)
    {
      uint64_t v18 = createMobileActivationError((uint64_t)"perform_data_migration", 1759, @"com.apple.MobileActivation.ErrorDomain", -1, v20, @"Failed to perform data migration task.");
      id v34 = v20;
LABEL_75:

      goto LABEL_76;
    }
    id v21 = v4;
    id v22 = +[GestaltHlpr getSharedInstance];
    id v23 = [v22 copyAnswer:@"BuildVersion"];

    id obj = v23;
    id v24 = isNSString(v23);

    id v157 = v21;
    if (v24)
    {
      id v25 = (__CFString *)data_ark_copy(v21, 0, @"BuildVersion");
      id v26 = isNSString(v25);

      if (!v26)
      {

        id v25 = &stru_100276C00;
      }
      id v27 = +[GestaltHlpr getSharedInstance];
      id v28 = [v27 copyAnswer:@"ProductVersion"];

      id v151 = v28;
      id v29 = isNSString(v28);

      if (v29)
      {
        id v30 = obj;
        if ([obj isEqualToString:v25])
        {
          v163 = 0;
          id v159 = 0;
          int v31 = 0;
          id v153 = 0;
          id v155 = 0;
          char v32 = 1;
          id v33 = v20;
LABEL_37:
          id v36 = v151;
          goto LABEL_38;
        }
        id v37 = copy_legacy_dcrt_path();
        id v38 = [v37 stringByAppendingPathComponent:@"dcrt.der"];

        id v39 = copy_dcrt_path();
        id v159 = [v39 stringByAppendingPathComponent:@"dcrt.der"];

        v163 = v38;
        id v40 = [objc_alloc((Class)NSData) initWithContentsOfFile:v38];
        if (!v40)
        {
          int v31 = 0;
          id v153 = 0;
          id v155 = 0;
          char v32 = 1;
          id v33 = v20;
          id v30 = obj;
          goto LABEL_37;
        }
        id v41 = v40;
        *(void *)buf = 0;
        id v42 = parseDERCertificatesFromChain(v40, buf);
        id v43 = *(id *)buf;
        id v155 = v41;
        if (v42)
        {
          id v153 = v42;
          CFDataRef v44 = (const __CFData *)[v42 objectAtIndexedSubscript:0];
          SecCertificateRef v45 = SecCertificateCreateWithData(0, v44);

          CFStringRef v46 = v45;
          id v36 = v151;
          if (v46)
          {
            *(void *)handler = v43;
            CFTypeRef cf = v46;
            int v47 = certificatePublicKeyMatchesSystemPublicKey(2, 9, v46, (NSError **)handler);
            int v31 = (NSError *)*(id *)handler;

            if (v47)
            {
              id v147 = v6;
              id v149 = v4;
              id v48 = +[NSFileManager defaultManager];
              id v49 = copy_dcrt_path();
              *(void *)&long long v178 = NSFilePosixPermissions;
              *(void *)&long long v187 = &off_10027EEA0;
              unsigned int v50 = +[NSDictionary dictionaryWithObjects:&v187 forKeys:&v178 count:1];
              *(void *)v195 = v31;
              unsigned __int8 v51 = [(NSFileManager *)v48 createDirectoryAtPath:v49 withIntermediateDirectories:1 attributes:v50 error:v195];
              id v52 = *(id *)v195;

              if (v51)
              {
                maLog((uint64_t)"perform_dawn_data_migration_tasks", 0, @"Moving DCRT from legacy path to system location.");
                id v53 = +[NSFileManager defaultManager];
                [(NSFileManager *)v53 removeItemAtPath:v159 error:0];

                id v54 = +[NSFileManager defaultManager];
                v193[0] = v52;
                unsigned __int8 v55 = [(NSFileManager *)v54 copyItemAtPath:v163 toPath:v159 error:v193];
                int v31 = (NSError *)v193[0];

                if (v55)
                {
                  maLog((uint64_t)"perform_dawn_data_migration_tasks", 0, @"Successfuly moved DCRT to system location.");
                  id v6 = v147;
                  id v4 = v149;
                  id v36 = v151;
                  goto LABEL_35;
                }
                long long v145 = createMobileActivationError((uint64_t)"perform_dawn_data_migration_tasks", 1690, @"com.apple.MobileActivation.ErrorDomain", -1, v31, @"Failed to copy %@ to %@.", v163, v159);
              }
              else
              {
                int v31 = (NSError *)copy_dcrt_path();
                long long v145 = createMobileActivationError((uint64_t)"perform_dawn_data_migration_tasks", 1680, @"com.apple.MobileActivation.ErrorDomain", -1, v52, @"Failed to create %@.", v31);
              }
              id v6 = v147;
              id v4 = v149;

              id v33 = v145;
              char v32 = 0;
              int v31 = v33;
              id v30 = obj;
              id v36 = v151;
              goto LABEL_100;
            }
LABEL_35:
            id v56 = +[NSFileManager defaultManager];
            [(NSFileManager *)v56 removeItemAtPath:v163 error:0];

            char v32 = 1;
            id v33 = v20;
            id v30 = obj;
LABEL_100:
            CFRelease(cf);
            goto LABEL_38;
          }
          id v35 = createMobileActivationError((uint64_t)"perform_dawn_data_migration_tasks", 1674, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create certificate.");

LABEL_27:
          id v33 = v35;
          char v32 = 0;
          int v31 = v33;
          id v30 = obj;
LABEL_38:

          char v57 = v33;
          if (v32)
          {
            uint64_t v156 = v57;
            id v158 = v157;
            id v58 = +[NSFileManager defaultManager];
            id v59 = copy_splunk_directory_path();
            v191[0] = NSFilePosixPermissions;
            v193[0] = &off_10027EEA0;
            id v60 = +[NSDictionary dictionaryWithObjects:v193 forKeys:v191 count:1];
            v173[0] = 0;
            unsigned int v61 = [(NSFileManager *)v58 createDirectoryAtPath:v59 withIntermediateDirectories:1 attributes:v60 error:v173];
            id v62 = (NSError *)v173[0];

            char v154 = v61;
            if (v61)
            {
              id v148 = v6;
              id v150 = v4;
              uint64_t v152 = a1;
              uint64_t v63 = +[NSFileManager defaultManager];
              id v64 = copy_software_update_splunk_directory_path();
              id v65 = +[NSURL URLWithString:v64];
              SecCertificateRef v66 = [(NSFileManager *)v63 contentsOfDirectoryAtURL:v65 includingPropertiesForKeys:0 options:4 error:0];

              *(_OWORD *)v189 = 0u;
              long long v190 = 0u;
              long long v187 = 0u;
              long long v188 = 0u;
              obja = v66;
              id v67 = [(NSArray *)obja countByEnumeratingWithState:&v187 objects:buf count:16];
              if (v67)
              {
                id v68 = v67;
                uint64_t v69 = *(void *)v188;
                do
                {
                  uint64_t v70 = 0;
                  id v164 = v68;
                  do
                  {
                    if (*(void *)v188 != v69) {
                      objc_enumerationMutation(obja);
                    }
                    int v71 = *(void **)(*((void *)&v187 + 1) + 8 * (void)v70);
                    id v72 = [v71 pathExtension];
                    unsigned int v73 = [v72 isEqualToString:@"splunklog"];

                    if (v73)
                    {
                      id v74 = copy_splunk_directory_path();
                      id v75 = [v71 lastPathComponent];
                      id v76 = [v74 stringByAppendingPathComponent:v75];

                      uint64_t v77 = +[NSFileManager defaultManager];
                      [(NSFileManager *)v77 removeItemAtPath:v76 error:0];

                      uint64_t v78 = +[NSFileManager defaultManager];
                      id v79 = [v71 path];
                      v171[0] = v62;
                      unsigned __int8 v80 = [(NSFileManager *)v78 copyItemAtPath:v79 toPath:v76 error:v171];
                      id v81 = (NSError *)v171[0];

                      if (v80)
                      {
                        uint64_t v82 = (NSError *)[v71 path];
                        maLog((uint64_t)"performRestoreLogMigrationTasks", 0, @"Successfully copied %@ to %@.", v82, v76);
                      }
                      else
                      {
                        id v83 = copyLoggingHandle();
                        if (os_log_type_enabled(v83, OS_LOG_TYPE_FAULT))
                        {
                          id v84 = [v71 path];
                          id v85 = copy_splunk_directory_path();
                          *(_DWORD *)handler = 138412802;
                          *(void *)&void handler[4] = v84;
                          *(_WORD *)&handler[12] = 2112;
                          *(void *)&handler[14] = v85;
                          *(_WORD *)&handler[22] = 2112;
                          v176 = v81;
                          _os_log_fault_impl((void *)&_mh_execute_header, v83, OS_LOG_TYPE_FAULT, "Failed to copy %@ to %@: %@", handler, 0x20u);
                        }
                        uint64_t v82 = v81;
                        id v81 = 0;
                      }
                      id v68 = v164;

                      id v62 = v81;
                    }
                    uint64_t v70 = (char *)v70 + 1;
                  }
                  while (v68 != v70);
                  id v68 = [(NSArray *)obja countByEnumeratingWithState:&v187 objects:buf count:16];
                }
                while (v68);
              }

              uint64_t v86 = &CCDigest_ptr;
              id v87 = +[NSFileManager defaultManager];
              id v88 = copy_software_update_log_directory_path();
              uint64_t v89 = +[NSURL URLWithString:v88];
              uint64_t v90 = [(NSFileManager *)v87 contentsOfDirectoryAtURL:v89 includingPropertiesForKeys:0 options:4 error:0];

              *(_OWORD *)v180 = 0u;
              long long v181 = 0u;
              long long v178 = 0u;
              long long v179 = 0u;
              objb = v90;
              id v91 = [(NSArray *)objb countByEnumeratingWithState:&v178 objects:handler count:16];
              if (v91)
              {
                id v92 = v91;
                uint64_t v93 = *(void *)v179;
                do
                {
                  for (i = 0; i != v92; i = (char *)i + 1)
                  {
                    if (*(void *)v179 != v93) {
                      objc_enumerationMutation(objb);
                    }
                    id v95 = *(void **)(*((void *)&v178 + 1) + 8 * i);
                    id v96 = copy_log_directory_path();
                    id v97 = [v95 lastPathComponent];
                    id v98 = [v96 stringByAppendingPathComponent:v97];

                    id v99 = [v86[294] defaultManager];
                    [v99 removeItemAtPath:v98 error:0];

                    id v100 = [v86[294] defaultManager];
                    id v101 = [v95 path];
                    v169[0] = v62;
                    unsigned __int8 v102 = [v100 copyItemAtPath:v101 toPath:v98 error:v169];
                    uint64_t v103 = (NSError *)v169[0];

                    if (v102)
                    {
                      id v104 = (NSError *)[v95 path];
                      maLog((uint64_t)"performRestoreLogMigrationTasks", 0, @"Successfully copied %@ to %@.", v104, v98);
                      id v62 = v103;
                    }
                    else
                    {
                      uint64_t v105 = copyLoggingHandle();
                      if (os_log_type_enabled(v105, OS_LOG_TYPE_FAULT))
                      {
                        id v106 = [v95 path];
                        *(_DWORD *)v195 = 138412802;
                        *(void *)&v195[4] = v106;
                        *(_WORD *)&v195[12] = 2112;
                        *(void *)&v195[14] = v98;
                        *(_WORD *)&v195[22] = 2112;
                        v196 = v103;
                        _os_log_fault_impl((void *)&_mh_execute_header, v105, OS_LOG_TYPE_FAULT, "Failed to copy %@ to %@: %@", v195, 0x20u);
                      }
                      id v62 = 0;
                      id v104 = v103;
                    }
                    uint64_t v86 = &CCDigest_ptr;
                  }
                  id v92 = [(NSArray *)objb countByEnumeratingWithState:&v178 objects:handler count:16];
                }
                while (v92);
              }

              id v107 = v156;
              id v108 = v156;
              id v4 = v150;
              a1 = v152;
              id v6 = v148;
            }
            else
            {
              id v110 = copy_splunk_directory_path();
              v111 = createMobileActivationError((uint64_t)"performRestoreLogMigrationTasks", 138, @"com.apple.MobileActivation.ErrorDomain", -1, v62, @"Failed to create %@.", v110);

              id v62 = v111;
              id v108 = v62;
              id v107 = v156;
            }

            char v57 = v108;
            if (v154)
            {
              if (is_dsp_device()) {
                data_ark_set(v158, 0, @"ActivationExpired", &__kCFBooleanTrue, 1);
              }
              char v16 = 1;
              data_ark_set(v158, 0, @"PreSydroDataMigrationCompleted", &__kCFBooleanTrue, 1);
              data_ark_set(v158, 0, @"PreDawnDataMigrationCompleted", &__kCFBooleanTrue, 1);
              data_ark_set(v158, 0, @"BuildVersion", v6, 1);
              data_ark_set(v158, 0, @"ProductVersion", v162, 1);
              rollSplunkLogUUID(v158);
              id v15 = 0;
              goto LABEL_77;
            }
            id v109 = createAndLogError((uint64_t)"perform_data_migration", 1769, @"com.apple.MobileActivation.ErrorDomain", -1, v57, @"Failed to perform restore log migration task.");
          }
          else
          {
            id v109 = createMobileActivationError((uint64_t)"perform_data_migration", 1764, @"com.apple.MobileActivation.ErrorDomain", -1, v57, @"Failed to perform data migration task.");
          }
          uint64_t v18 = v109;
          id v34 = v57;
          goto LABEL_75;
        }
        id v35 = createMobileActivationError((uint64_t)"perform_dawn_data_migration_tasks", 1668, @"com.apple.MobileActivation.ErrorDomain", -1, v43, @"Failed to parse DCRT DER cert chain.");
      }
      else
      {
        id v35 = createMobileActivationError((uint64_t)"perform_dawn_data_migration_tasks", 1649, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve %@.", @"ProductVersion");
        v163 = 0;
        id v159 = 0;
        id v155 = 0;
      }
      id v153 = 0;
      id v36 = v151;
      goto LABEL_27;
    }
    id v35 = createMobileActivationError((uint64_t)"perform_dawn_data_migration_tasks", 1638, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve %@.", @"BuildVersion");
    v163 = 0;
    id v159 = 0;
    id v153 = 0;
    id v155 = 0;
    id v25 = 0;
    id v36 = 0;
    goto LABEL_27;
  }
  id v15 = 0;
  char v16 = 1;
LABEL_78:

  v112 = v15;
  if (v16)
  {
    id v113 = *(void **)(a1 + 32);
    if (v113)
    {
      id v114 = v113;
      data_ark_register_set_notification(v114, 0, @"BrickState", @"com.apple.mobile.lockdown.brick_state", 8);
      data_ark_register_set_notification(v114, 0, @"ActivationState", @"com.apple.mobile.lockdown.activation_state", 8);
      data_ark_register_set_notification(v114, 0, @"CollectionLastPerformed", @"com.apple.mobile.activation.collection_performed", 2);
      data_ark_register_set_notification(v114, 0, @"UCRTOOBLastPerformed", @"com.apple.mobile.activation.ucrt_oob_performed", 2);
      data_ark_register_set_notification(v114, 0, @"DCRTOOBLastPerformed", @"com.apple.mobile.activation.dcrt_oob_performed", 2);
      v115 = v112;
    }
    else
    {
      id v117 = 0;
      v115 = createMobileActivationError((uint64_t)"register_notifications", 1805, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid intput.");
    }
    v118 = v115;

    if (v113)
    {
      id v119 = *(id *)(a1 + 32);
      if (v119)
      {
        uint64_t v120 = (const char *)[@"com.apple.mobileactivationd.factoryactivation" UTF8String];
        *(void *)buf = _NSConcreteStackBlock;
        uint64_t v183 = 3254779904;
        v184 = __register_xpc_activities_block_invoke;
        v185 = &__block_descriptor_40_e8_32s_e33_v16__0__NSObject_OS_xpc_object__8l;
        v121 = (NSError *)v119;
        v186 = v121;
        xpc_activity_register(v120, XPC_ACTIVITY_CHECK_IN, buf);
        v122 = (const char *)[@"com.apple.mobileactivationd.collection" UTF8String];
        *(void *)handler = _NSConcreteStackBlock;
        *(void *)&handler[8] = 3254779904;
        *(void *)&handler[16] = __register_xpc_activities_block_invoke_753;
        v176 = (NSError *)&__block_descriptor_40_e8_32s_e33_v16__0__NSObject_OS_xpc_object__8l;
        v123 = v121;
        id v177 = v123;
        xpc_activity_register(v122, XPC_ACTIVITY_CHECK_IN, handler);
        v124 = (const char *)[@"com.apple.mobileactivationd.UCRT.OOB" UTF8String];
        *(void *)&long long v187 = _NSConcreteStackBlock;
        *((void *)&v187 + 1) = 3254779904;
        *(void *)&long long v188 = __register_xpc_activities_block_invoke_754;
        *((void *)&v188 + 1) = &__block_descriptor_40_e8_32s_e33_v16__0__NSObject_OS_xpc_object__8l;
        id v125 = v123;
        v189[0] = v125;
        xpc_activity_register(v124, XPC_ACTIVITY_CHECK_IN, &v187);
        id v126 = (const char *)[@"com.apple.mobileactivationd.DCRT.OOB" UTF8String];
        *(void *)&long long v178 = _NSConcreteStackBlock;
        *((void *)&v178 + 1) = 3254779904;
        *(void *)&long long v179 = __register_xpc_activities_block_invoke_755;
        *((void *)&v179 + 1) = &__block_descriptor_40_e8_32s_e33_v16__0__NSObject_OS_xpc_object__8l;
        id v127 = v125;
        v180[0] = v127;
        xpc_activity_register(v126, XPC_ACTIVITY_CHECK_IN, &v178);
        v128 = (const char *)[@"com.apple.mobileactivationd.SDCRT.OOB" UTF8String];
        *(void *)v195 = _NSConcreteStackBlock;
        *(void *)&v195[8] = 3254779904;
        *(void *)&v195[16] = __register_xpc_activities_block_invoke_756;
        v196 = (NSError *)&__block_descriptor_40_e8_32s_e33_v16__0__NSObject_OS_xpc_object__8l;
        id v129 = v127;
        v197 = v129;
        xpc_activity_register(v128, XPC_ACTIVITY_CHECK_IN, v195);
        unint64_t v130 = (const char *)[@"com.apple.mobileactivationd.DCRT.OOB.LoadSpreading" UTF8String];
        v193[0] = _NSConcreteStackBlock;
        v193[1] = (id)3254779904;
        v193[2] = __register_xpc_activities_block_invoke_757;
        v193[3] = &__block_descriptor_40_e8_32s_e33_v16__0__NSObject_OS_xpc_object__8l;
        uint64_t v131 = v129;
        v194 = v131;
        xpc_activity_register(v130, XPC_ACTIVITY_CHECK_IN, v193);
        v132 = (const char *)[@"com.apple.mobileactivationd.SDCRT.OOB.LoadSpreading" UTF8String];
        v191[0] = _NSConcreteStackBlock;
        v191[1] = 3254779904;
        v191[2] = __register_xpc_activities_block_invoke_758;
        v191[3] = &__block_descriptor_40_e8_32s_e33_v16__0__NSObject_OS_xpc_object__8l;
        unint64_t v133 = v131;
        v192 = v133;
        xpc_activity_register(v132, XPC_ACTIVITY_CHECK_IN, v191);
        BOOL v134 = (const char *)[@"com.apple.mobileactivationd.splunklogging" UTF8String];
        v173[0] = _NSConcreteStackBlock;
        v173[1] = (id)3254779904;
        v173[2] = __register_xpc_activities_block_invoke_759;
        v173[3] = &__block_descriptor_40_e8_32s_e33_v16__0__NSObject_OS_xpc_object__8l;
        unint64_t v135 = v133;
        id v174 = v135;
        xpc_activity_register(v134, XPC_ACTIVITY_CHECK_IN, v173);
        int v136 = (const char *)[@"com.apple.mobileactivationd.splunklogging.daily" UTF8String];
        v171[0] = _NSConcreteStackBlock;
        v171[1] = (id)3254779904;
        v171[2] = __register_xpc_activities_block_invoke_760;
        v171[3] = &__block_descriptor_40_e8_32s_e33_v16__0__NSObject_OS_xpc_object__8l;
        id v137 = v135;
        id v172 = v137;
        xpc_activity_register(v136, XPC_ACTIVITY_CHECK_IN, v171);
        unint64_t v138 = (const char *)[@"com.apple.mobileactivationd.splunklogging.rollidentifier" UTF8String];
        v169[0] = _NSConcreteStackBlock;
        v169[1] = (id)3254779904;
        v169[2] = __register_xpc_activities_block_invoke_761;
        v169[3] = &__block_descriptor_40_e8_32s_e33_v16__0__NSObject_OS_xpc_object__8l;
        id v170 = v137;
        xpc_activity_register(v138, XPC_ACTIVITY_CHECK_IN, v169);

        long long v139 = v186;
        unint64_t v140 = v118;
      }
      else
      {
        long long v139 = createMobileActivationError((uint64_t)"register_xpc_activities", 1833, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid intput(s).");
        unint64_t v140 = v139;
      }

      id v17 = v140;
      if (v119)
      {
        dealwith_activation(*(void **)(a1 + 32), 0);
        performMigration_retval = 1;
      }
      else
      {
        v141 = createAndLogError((uint64_t)"performMigration_block_invoke", 2090, @"com.apple.MobileActivation.ErrorDomain", -1, v17, @"Failed to register XPC activities.");

        id v17 = v141;
      }
      goto LABEL_92;
    }
    id v17 = createAndLogError((uint64_t)"performMigration_block_invoke", 2085, @"com.apple.MobileActivation.ErrorDomain", -1, v118, @"Failed to register notifications.");
    v116 = v118;
  }
  else
  {
    id v17 = createAndLogError((uint64_t)"performMigration_block_invoke", 2080, @"com.apple.MobileActivation.ErrorDomain", -1, v112, @"Data migration failed.");
    v116 = v112;
  }

LABEL_92:
  uint64_t v142 = (void *)performMigration_localError;
  performMigration_localError = (uint64_t)v17;
  id v143 = v17;

  data_ark_set(*(void **)(a1 + 32), 0, @"DataMigrationCompleted", &__kCFBooleanTrue, 0);
  id v144 = copySignpostLoggingHandle();
  if (os_signpost_enabled(v144))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v144, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "performMigration", "", buf, 2u);
  }
}

uint64_t dealwith_activation(void *a1, void *a2)
{
  id v3 = a1;
  char v24 = 0;
  id v4 = data_ark_copy(v3, 0, @"ActivationState");
  id v5 = (__CFString *)isNSString(v4);

  if (!v5) {
    id v5 = @"Unactivated";
  }
  if (use_hactivation())
  {
    maLog((uint64_t)"dealwith_activation", 0, @"Hactivation is enabled, short circuiting activation state to Activated.");
    data_ark_set(v3, 0, @"ActivationState", @"Activated", 0);
    data_ark_set(v3, 0, @"BrickState", &__kCFBooleanFalse, 0);
    id v6 = 0;
    id v7 = 0;
    id v8 = 0;
    id v9 = 0;
    uint64_t v10 = 1;
  }
  else
  {
    id v22 = 0;
    id v23 = 0;
    char v11 = load_and_validate_activation_record(v3, &v23, &v24, (NSError **)&v22);
    id v7 = v23;
    id v12 = (NSError *)v22;
    if (v11)
    {
      id v6 = 0;
      if (data_ark_exists(v3, 0, @"CollectionLastPerformed"))
      {
        id v13 = copy_suinfo_directory_path();
        id v6 = [v13 stringByAppendingPathComponent:@"psc.sui"];

        if (v6)
        {
          id v14 = +[NSFileManager defaultManager];
          unsigned __int8 v15 = [(NSFileManager *)v14 fileExistsAtPath:v6 isDirectory:0];

          if ((v15 & 1) == 0)
          {
            id v16 = data_ark_copy(v3, 0, @"CollectionLastPerformed");
            maLog((uint64_t)"dealwith_activation", 0, @"suinfo from %@ is now missing.", v16);

            data_ark_remove(v3, 0, @"PCRTToken");
            data_ark_remove(v3, 0, @"CollectionLastPerformed");
          }
        }
      }
      id v17 = data_ark_copy(v3, 0, @"ActivationExpired");
      id v8 = isNSNumber(v17);

      if ([v8 BOOLValue])
      {
        maLog((uint64_t)"dealwith_activation", 0, @"Activation has expired, deactivating device.");
        handle_deactivate(v3, 1);
        uint64_t v10 = 0;
      }
      else
      {
        data_ark_set(v3, 0, @"BrickState", &__kCFBooleanFalse, 1);
        if (v24)
        {
          data_ark_set(v3, 0, @"ActivationState", @"FactoryActivated", 0);
          uint64_t v10 = 1;
        }
        else
        {
          uint64_t v10 = 1;
          data_ark_set(v3, 0, @"ActivationState", @"Activated", 1);
        }
      }
      id v9 = v12;
    }
    else
    {
      id v9 = createAndLogError((uint64_t)"dealwith_activation", 3484, @"com.apple.MobileActivation.ErrorDomain", -1, v12, @"Failed to load or validate activation record.");

      if ([(__CFString *)v5 isEqualToString:@"Activated"])
      {
        uint64_t v18 = copyLoggingHandle();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_FAULT)) {
          dealwith_activation_cold_1();
        }

        writeSplunkLog(v3, 34, -1, (uint64_t)"dealwith_activation", 3488, 0, @"%@", v19, (uint64_t)v9);
      }
      handle_deactivate(v3, 1);
      uint64_t v10 = 0;
      id v6 = 0;
      id v8 = 0;
    }
  }
  id v20 = data_ark_copy(v3, 0, @"ActivationState");
  maLog((uint64_t)"dealwith_activation", 0, @"Activation State: %@", v20);

  data_ark_set(v3, 0, @"ActivationExpired", &__kCFBooleanFalse, 1);
  if (a2 && (v10 & 1) == 0) {
    *a2 = v9;
  }

  return v10;
}

id preSydroDataMigrationCompleted(void *a1)
{
  id v1 = data_ark_copy(a1, 0, @"PreSydroDataMigrationCompleted");
  id v2 = isNSNumber(v1);
  if (v2)
  {
    id v3 = v2;
    id v4 = [v1 BOOLValue];
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

void issueDCRT(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  char v11 = copyMobileActivationSerialQueue();
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3254779904;
  v16[2] = __issueDCRT_block_invoke;
  _OWORD v16[3] = &__block_descriptor_64_e8_32s40s48s56bs_e5_v8__0l;
  id v17 = v9;
  id v18 = v7;
  id v19 = v8;
  id v20 = v10;
  id v12 = v10;
  id v13 = v8;
  id v14 = v7;
  id v15 = v9;
  dispatch_async(v11, v16);
}

void __issueDCRT_block_invoke(uint64_t a1)
{
  uint64_t v113 = 0;
  id v114 = &v113;
  uint64_t v115 = 0x3032000000;
  v116 = __Block_byref_object_copy__5;
  id v117 = __Block_byref_object_dispose__5;
  id v118 = 0;
  unsigned __int8 v80 = @"DCRTIssuanceInFlight";
  uint64_t v107 = 0;
  id v108 = &v107;
  uint64_t v109 = 0x3032000000;
  id v110 = __Block_byref_object_copy__5;
  v111 = __Block_byref_object_dispose__5;
  id v112 = 0;
  uint64_t v101 = 0;
  unsigned __int8 v102 = &v101;
  uint64_t v103 = 0x3032000000;
  id v104 = __Block_byref_object_copy__5;
  uint64_t v105 = __Block_byref_object_dispose__5;
  id v106 = 0;
  CFTypeRef cf = 0;
  id v2 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"sdcrtAttestation"];
  id v3 = v2;
  if (v2)
  {
    id v4 = isNSNumber(v2);
    BOOL v5 = v4 == 0;

    if (v5)
    {
      id v9 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke", 2186, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid option (%@).", @"sdcrtAttestation");
      goto LABEL_19;
    }
  }
  if ([v3 BOOLValue])
  {
    id v6 = @"SDCRTIssuanceInFlight";

    int v74 = 3;
    uint64_t v7 = 10;
    CFStringRef v75 = @"SDAK";
    unsigned __int8 v80 = v6;
    CFStringRef v8 = @"SDCRT";
  }
  else
  {
    int v74 = 1;
    uint64_t v7 = 9;
    CFStringRef v75 = @"DAK";
    CFStringRef v8 = @"DCRT";
  }
  CFStringRef v77 = v8;
  if (is_virtual_machine())
  {
    id v9 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke", 2199, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"%@ not supported on virtual machines.", v77);
LABEL_19:
    id v22 = v9;
    id v23 = 0;
    id v19 = 0;
    id v78 = 0;
    id v79 = 0;
LABEL_20:
    id v24 = 0;
LABEL_21:
    id v25 = v114;
    goto LABEL_22;
  }
  id v79 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"IgnoreExistingDCRT"];
  if (v79)
  {
    id v10 = isNSNumber(v79);
    BOOL v11 = v10 == 0;

    if (v11)
    {
      id v22 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke", 2207, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid option (%@).", @"IgnoreExistingDCRT");
      id v23 = 0;
      id v19 = 0;
      id v78 = 0;
      goto LABEL_20;
    }
  }
  id v78 = copyDCRT(*(void **)(a1 + 40), 0, 0, *(void **)(a1 + 32), 0);
  unsigned __int8 v12 = [v79 BOOLValue];
  if (v78) {
    char v13 = v12;
  }
  else {
    char v13 = 1;
  }
  if (v13) {
    goto LABEL_31;
  }
  id v14 = (id *)v114;
  id obj = (id)v114[5];
  id v15 = parseDERCertificatesFromChain(v78, &obj);
  objc_storeStrong(v14 + 5, obj);
  id v16 = (void *)v108[5];
  v108[5] = (uint64_t)v15;

  id v17 = (void *)v108[5];
  if (!v17)
  {
LABEL_31:
    id v19 = 0;
  }
  else
  {
    CFDataRef v18 = (const __CFData *)[v17 objectAtIndexedSubscript:0];
    id v19 = SecCertificateCreateWithData(kCFAllocatorDefault, v18);

    if (v19)
    {
      id v20 = (id *)v114;
      id v98 = (id)v114[5];
      int v21 = certificatePublicKeyMatchesSystemPublicKey(2, v7, v19, (NSError **)&v98);
      objc_storeStrong(v20 + 5, v98);
      if (v21)
      {
        CFStringRef v119 = @"RKCertification";
        id v120 = v78;
        id v22 = +[NSDictionary dictionaryWithObjects:&v120 forKeys:&v119 count:1];
        id v23 = 0;
        id v24 = 0;
        id v25 = v102;
LABEL_22:
        id v26 = (void *)v25[5];
        v25[5] = (uint64_t)v22;

        id v27 = 0;
        char v28 = 0;
        id v29 = 0;
        id v30 = 0;
        id v31 = 0;
        goto LABEL_23;
      }
    }
  }
  id v33 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"UseCellularBootstrapProxy"];
  if (v33
    || (id v33 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"UseCellularOTAProxy"]) != 0
    || (id v33 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"SOCKSProxyHost"]) != 0)
  {
  }
  else
  {
    id v55 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"SOCKSProxyPort"];
    BOOL v56 = v55 == 0;

    if (v56)
    {
      char v57 = (id *)v114;
      id v97 = (id)v114[5];
      BOOL v58 = networkReachable();
      objc_storeStrong(v57 + 5, v97);
      if (!v58)
      {
        id v22 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke", 2234, @"com.apple.MobileActivation.ErrorDomain", -17, (void *)v114[5], @"Network is unavailable.");
        id v23 = 0;
        goto LABEL_20;
      }
    }
  }
  id v23 = data_ark_copy(*(void **)(a1 + 40), 0, v80);
  id v34 = isNSNumber(v23);
  BOOL v35 = v34 == 0;

  if (v35)
  {

    id v23 = &__kCFBooleanFalse;
  }
  if ([v23 BOOLValue])
  {
    id v22 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke", 2247, @"com.apple.MobileActivation.ErrorDomain", -13, 0, @"Another %@ request is already in flight.", v77);
    goto LABEL_20;
  }
  id v36 = [[*(id *)(a1 + 32) objectForKeyedSubscript:];
  id v37 = isNSNumber(v36);

  if (v37)
  {
    id v24 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"NetworkTimeoutInterval"];
    [v24 doubleValue];
    if (v38 <= 0.0)
    {
      id v39 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke", 2256, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid network timeout requested: %@", v24);
LABEL_50:
      id v22 = v39;
      goto LABEL_21;
    }
  }
  else
  {
    id v24 = 0;
  }
  id v40 = (id *)v114;
  id v96 = (id)v114[5];
  char v41 = libaks_system_key_operate(v7, 1, (NSError **)&v96);
  objc_storeStrong(v40 + 5, v96);
  if ((v41 & 1) == 0)
  {
    id v39 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke", 2264, @"com.apple.MobileActivation.ErrorDomain", -1, (void *)v114[5], @"Failed to bump %@.", v75);
    goto LABEL_50;
  }
  id v42 = (id *)v114;
  id v95 = (id)v114[5];
  BOOL is_legacy = security_committed_uik_is_legacy(&v95);
  objc_storeStrong(v42 + 5, v95);
  if (!is_legacy)
  {
    CFDataRef v44 = (void *)v114[5];
    if (v44)
    {
      id v39 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke", 2276, @"com.apple.MobileActivation.ErrorDomain", -1, v44, @"Failed to query legacy UIK support.");
      goto LABEL_50;
    }
  }
  unsigned int v70 = platform_supports_activation() ^ 1 | is_legacy;
  if (v70)
  {
    SecCertificateRef v72 = 0;
    unsigned int v45 = 1;
  }
  else
  {
    CFStringRef v46 = *(void **)(a1 + 40);
    int v47 = (id *)v114;
    id v94 = (id)v114[5];
    SecCertificateRef v72 = copyUCRT(v46, (NSError **)&v94);
    objc_storeStrong(v47 + 5, v94);
    if (!v72)
    {
      id v39 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke", 2293, @"com.apple.MobileActivation.ErrorDomain", -4, (void *)v114[5], @"UCRT is unavailable.");
      goto LABEL_50;
    }
    unsigned int v45 = 0;
  }
  id v48 = (id *)v114;
  id v93 = (id)v114[5];
  id v30 = libaks_system_key_collection(v7, 3, v45, 0, (NSError **)&v93);
  objc_storeStrong(v48 + 5, v93);
  if (!v30)
  {
    if (v70) {
      id v59 = "SIK";
    }
    else {
      id v59 = "UIK";
    }
    id v60 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke", 2300, @"com.apple.MobileActivation.ErrorDomain", -11, (void *)v114[5], @"Failed to attest %@ to %s.", v75, v59);
    goto LABEL_72;
  }
  id v49 = (id *)v114;
  id v92 = (id)v114[5];
  id v29 = libaks_system_key_get_public(v7, 3, (NSError **)&v92);
  objc_storeStrong(v49 + 5, v92);
  if (!v29)
  {
    id v60 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke", 2308, @"com.apple.MobileActivation.ErrorDomain", -1, (void *)v114[5], @"Failed to query %@ public key.", v75);
LABEL_72:
    unsigned int v61 = v60;
    id v29 = 0;
    goto LABEL_73;
  }
  CFTypeRef v76 = (CFTypeRef)SecAccessControlCreate();
  if (v76)
  {
    uint64_t v50 = kSecAttrAccessibleUntilReboot;
    if (SecAccessControlSetProtection())
    {
      unsigned __int8 v51 = *(void **)(a1 + 32);
      id v52 = (id *)v114;
      id v91 = (id)v114[5];
      uint64_t v69 = (__SecKey *)createReferenceKeyBlob(v76, 0, v51, &v91);
      objc_storeStrong(v52 + 5, v91);
      if (v69)
      {
        id v53 = (id *)v114;
        id v90 = (id)v114[5];
        id v31 = security_create_external_representation(v69, 0, (NSError **)&v90);
        objc_storeStrong(v53 + 5, v90);
        if (v31)
        {
          id v27 = objc_alloc_init((Class)NSMutableDictionary);
          if (v27)
          {
            id v68 = copy_required_dcrt_oids();
            [v27 setObject:v68 forKeyedSubscript:@"OIDSToInclude"];

            [v27 setObject:v30 forKeyedSubscript:@"ClientAttestationData"];
            [v27 setObject:v29 forKeyedSubscript:@"ClientAttestationPublicKey"];
            int v71 = +[NSNumber numberWithBool:v70];
            [v27 setObject:v71 forKeyedSubscript:@"scrtAttestation"];

            [v27 setObject:v3 forKeyedSubscript:@"sdcrtAttestation"];
            if ([v3 BOOLValue]) {
              id v54 = +[NSNumber numberWithUnsignedInt:2];
            }
            else {
              id v54 = +[NSNumber numberWithUnsignedInt:0];
            }
            SecCertificateRef v66 = v54;
            [v27 setObject:v54 forKeyedSubscript:@"CertType"];

            if (v24) {
              [v27 setObject:v24 forKeyedSubscript:@"NetworkTimeoutInterval"];
            }
            data_ark_set(*(void **)(a1 + 40), 0, v80, &__kCFBooleanTrue, 0);
            id v67 = *(void **)(a1 + 48);
            unsigned int v73 = *(void **)(a1 + 40);
            v81[0] = _NSConcreteStackBlock;
            v81[1] = 3254779904;
            v81[2] = __issueDCRT_block_invoke_2;
            v81[3] = &__block_descriptor_96_e8_32s40s48s56s64bs72r80r88r_e34_v24__0__NSDictionary_8__NSError_16l;
            id v87 = &v113;
            CFStringRef v82 = v77;
            id v83 = *(id *)(a1 + 32);
            id v88 = &v107;
            id v84 = *(id *)(a1 + 40);
            uint64_t v89 = &v101;
            id v85 = v80;
            id v86 = *(id *)(a1 + 56);
            issueClientCertificateWithReferenceKey(v73, v67, v31, v74, v27, v81);

            char v28 = 1;
            id v65 = (__CFString *)v82;
            goto LABEL_82;
          }
          id v64 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke", 2342, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");
        }
        else
        {
          id v64 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke", 2334, @"com.apple.MobileActivation.ErrorDomain", -1, (void *)v114[5], @"Failed to encode RK as data.");
          id v31 = 0;
        }
LABEL_81:
        char v28 = 0;
        id v27 = 0;
        id v65 = (__CFString *)v114[5];
        v114[5] = (uint64_t)v64;
LABEL_82:

        CFRelease(v76);
        if (v69) {
          CFRelease(v69);
        }
        goto LABEL_74;
      }
      uint64_t v63 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke", 2328, @"com.apple.MobileActivation.ErrorDomain", -1, (void *)v114[5], @"Failed to create reference key.");
    }
    else
    {
      uint64_t v63 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke", 2322, @"com.apple.MobileActivation.ErrorDomain", -1, (void *)cf, @"Failed to set ACL protection to %@.", v50);
    }
    id v64 = v63;
    id v31 = 0;
    uint64_t v69 = 0;
    goto LABEL_81;
  }
  unsigned int v61 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke", 2317, @"com.apple.MobileActivation.ErrorDomain", -1, (void *)cf, @"Failed to create access control.");
LABEL_73:
  id v62 = (void *)v114[5];
  v114[5] = (uint64_t)v61;

  id v31 = 0;
  char v28 = 0;
  id v27 = 0;
LABEL_74:
  if (v72) {
    CFRelease(v72);
  }
LABEL_23:
  if (cf) {
    CFRelease(cf);
  }
  CFTypeRef cf = 0;
  if (v19) {
    CFRelease(v19);
  }
  if ((v28 & 1) == 0)
  {
    uint64_t v32 = *(void *)(a1 + 56);
    if (v32) {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v32, v102[5], v114[5]);
    }
  }
  _Block_object_dispose(&v101, 8);

  _Block_object_dispose(&v107, 8);
  _Block_object_dispose(&v113, 8);
}

void sub_1000229D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  _Block_object_dispose(&a45, 8);
  _Block_object_dispose((const void *)(v45 - 224), 8);
  _Block_object_dispose((const void *)(v45 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

void issueClientCertificateWithReferenceKey(void *a1, void *a2, void *a3, int a4, void *a5, void *a6)
{
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = a5;
  id v15 = a6;
  id v16 = copyMobileActivationSerialQueue();
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3254779904;
  v22[2] = __issueClientCertificateWithReferenceKey_block_invoke;
  v22[3] = &__block_descriptor_76_e8_32s40s48s56s64bs_e5_v8__0l;
  id v23 = v11;
  id v24 = v12;
  id v25 = v13;
  id v26 = v14;
  int v28 = a4;
  id v27 = v15;
  id v17 = v15;
  id v18 = v14;
  id v19 = v13;
  id v20 = v12;
  id v21 = v11;
  dispatch_async(v16, v22);
}

void __issueDCRT_block_invoke_2(uint64_t a1, id a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = copyMobileActivationSerialQueue();
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3254779904;
  v13[2] = __issueDCRT_block_invoke_3;
  v13[3] = &__block_descriptor_112_e8_32s40s48s56s64s72s80bs88r96r104r_e5_v8__0l;
  uint64_t v8 = *(void *)(a1 + 72);
  id v14 = v6;
  uint64_t v21 = v8;
  id v15 = *(id *)(a1 + 32);
  id v16 = *(id *)(a1 + 40);
  id v17 = v5;
  uint64_t v22 = *(void *)(a1 + 80);
  id v9 = *(id *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 88);
  id v18 = v9;
  uint64_t v23 = v10;
  id v19 = *(id *)(a1 + 56);
  id v20 = *(id *)(a1 + 64);
  id v11 = v5;
  id v12 = v6;
  dispatch_async(v7, v13);
}

void __issueDCRT_block_invoke_3(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (v2)
  {
    id v3 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke_3", 2367, @"com.apple.MobileActivation.ErrorDomain", -1, v2, @"Failed to retrieve %@.", *(void *)(a1 + 40));
    uint64_t v4 = *(void *)(*(void *)(a1 + 88) + 8);
    id v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v3;
    id v6 = v5;
LABEL_9:

    id v14 = 0;
    goto LABEL_10;
  }
  id v7 = [*(id *)(a1 + 48) mutableCopy];
  id v8 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"ServerResponseDate"];
  [v7 setObject:v8 forKeyedSubscript:@"ServerResponseDate"];

  id v9 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"RKCertification"];
  id v10 = isNSArray(v9);
  uint64_t v11 = *(void *)(*(void *)(a1 + 96) + 8);
  id v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 40) = v10;

  id v13 = *(void **)(*(void *)(*(void *)(a1 + 96) + 8) + 40);
  if (!v13 || [v13 count] != (id)2)
  {
    uint64_t v22 = createMobileActivationError((uint64_t)"issueDCRT_block_invoke_3", 2376, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve %@.", *(void *)(a1 + 40));
    uint64_t v23 = *(void *)(*(void *)(a1 + 88) + 8);
    id v24 = *(void **)(v23 + 40);
    *(void *)(v23 + 40) = v22;

    id v6 = v7;
    goto LABEL_9;
  }
  id v14 = objc_alloc_init((Class)NSMutableData);
  if (!v14)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"issueDCRT_block_invoke_3", 2382, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create data.");
LABEL_15:
    id v20 = MobileActivationError;
    uint64_t v21 = *(void *)(a1 + 88);
    goto LABEL_16;
  }
  id v15 = [*(id *)(*(void *)(*(void *)(a1 + 96) + 8) + 40) objectAtIndexedSubscript:0];
  [v14 appendData:v15];

  id v16 = [*(id *)(*(void *)(*(void *)(a1 + 96) + 8) + 40) objectAtIndexedSubscript:1];
  [v14 appendData:v16];

  id v17 = *(void **)(a1 + 64);
  uint64_t v18 = *(void *)(*(void *)(a1 + 88) + 8);
  id obj = *(id *)(v18 + 40);
  char v19 = storeDCRT(v17, v14, v7, &obj);
  objc_storeStrong((id *)(v18 + 40), obj);
  if ((v19 & 1) == 0)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"issueDCRT_block_invoke_3", 2390, @"com.apple.MobileActivation.ErrorDomain", -1, *(void **)(*(void *)(*(void *)(a1 + 88) + 8) + 40), @"Failed to store %@.", *(void *)(a1 + 40));
    goto LABEL_15;
  }
  CFStringRef v30 = @"RKCertification";
  id v31 = v14;
  id v20 = +[NSDictionary dictionaryWithObjects:&v31 forKeys:&v30 count:1];
  uint64_t v21 = *(void *)(a1 + 104);
LABEL_16:
  uint64_t v27 = *(void *)(v21 + 8);
  int v28 = *(void **)(v27 + 40);
  *(void *)(v27 + 40) = v20;

LABEL_10:
  data_ark_set(*(void **)(a1 + 64), 0, *(void **)(a1 + 72), &__kCFBooleanFalse, 0);
  uint64_t v25 = *(void *)(a1 + 80);
  if (v25) {
    (*(void (**)(uint64_t, void, void))(v25 + 16))(v25, *(void *)(*(void *)(*(void *)(a1 + 104) + 8) + 40), *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40));
  }
}

void __copy_helper_block_e8_32s40s48s56s64s72s80b88r96r104r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  id v8 = *(id *)(a2 + 64);
  id v9 = *(id *)(a2 + 72);
  _Block_object_assign((void *)(a1 + 80), *(const void **)(a2 + 80), 7);
  _Block_object_assign((void *)(a1 + 88), *(const void **)(a2 + 88), 8);
  _Block_object_assign((void *)(a1 + 96), *(const void **)(a2 + 96), 8);
  id v10 = *(const void **)(a2 + 104);

  _Block_object_assign((void *)(a1 + 104), v10, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64s72s80s88r96r104r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 104), 8);
  _Block_object_dispose(*(const void **)(a1 + 96), 8);
  _Block_object_dispose(*(const void **)(a1 + 88), 8);

  id v2 = *(void **)(a1 + 32);
}

void __copy_helper_block_e8_32s40s48s56s64b72r80r88r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  _Block_object_assign((void *)(a1 + 64), *(const void **)(a2 + 64), 7);
  _Block_object_assign((void *)(a1 + 72), *(const void **)(a2 + 72), 8);
  _Block_object_assign((void *)(a1 + 80), *(const void **)(a2 + 80), 8);
  id v8 = *(const void **)(a2 + 88);

  _Block_object_assign((void *)(a1 + 88), v8, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64s72r80r88r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 88), 8);
  _Block_object_dispose(*(const void **)(a1 + 80), 8);
  _Block_object_dispose(*(const void **)(a1 + 72), 8);

  id v2 = *(void **)(a1 + 32);
}

void __copy_helper_block_e8_32s40s48s56b(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(const void **)(a2 + 56);

  _Block_object_assign((void *)(a1 + 56), v7, 7);
}

void __destroy_helper_block_e8_32s40s48s56s(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
}

void issueCollection(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  uint64_t v11 = copyMobileActivationSerialQueue();
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3254779904;
  v16[2] = __issueCollection_block_invoke;
  _OWORD v16[3] = &__block_descriptor_64_e8_32s40s48s56bs_e5_v8__0l;
  id v17 = v9;
  id v18 = v7;
  id v19 = v8;
  id v20 = v10;
  id v12 = v10;
  id v13 = v8;
  id v14 = v7;
  id v15 = v9;
  dispatch_async(v11, v16);
}

void __issueCollection_block_invoke(uint64_t a1)
{
  uint64_t v46 = 0;
  int v47 = (id *)&v46;
  uint64_t v48 = 0x3032000000;
  id v49 = __Block_byref_object_copy__5;
  uint64_t v50 = __Block_byref_object_dispose__5;
  id v51 = 0;
  uint64_t v40 = 0;
  char v41 = &v40;
  uint64_t v42 = 0x3032000000;
  id v43 = __Block_byref_object_copy__5;
  CFDataRef v44 = __Block_byref_object_dispose__5;
  id v45 = 0;
  uint64_t v34 = 0;
  BOOL v35 = &v34;
  uint64_t v36 = 0x3032000000;
  id v37 = __Block_byref_object_copy__5;
  double v38 = __Block_byref_object_dispose__5;
  id v39 = 0;
  id v2 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"NetworkTimeoutInterval"];
  id v3 = isNSNumber(v2);

  if (!v3)
  {
    id v4 = 0;
LABEL_5:
    id v7 = data_ark_copy(*(void **)(a1 + 40), 0, @"ActivationState");
    id v8 = isNSString(v7);
    id v9 = (void *)v41[5];
    v41[5] = (uint64_t)v8;

    if (([(id)v41[5] isEqualToString:@"Activated"] & 1) == 0)
    {
      id v6 = createMobileActivationError((uint64_t)"issueCollection_block_invoke", 2448, @"com.apple.MobileActivation.ErrorDomain", -8, 0, @"Device is not activated (%@).", v41[5]);
      goto LABEL_12;
    }
    id v10 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"IgnoreExistingCollection"];
    id v11 = v10;
    if (v10 && (id v12 = isNSNumber(v10), v12, !v12))
    {
      uint64_t v22 = createMobileActivationError((uint64_t)"issueCollection_block_invoke", 2457, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid option (%@).", @"IgnoreExistingCollection");
    }
    else
    {
      if (([v11 BOOLValue] & 1) == 0 && collectionAlreadyPerformed(*(void **)(a1 + 40)))
      {
        id v13 = 0;
        goto LABEL_15;
      }
      id v17 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"UseCellularBootstrapProxy"];
      if (v17
        || (id v17 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"UseCellularOTAProxy"]) != 0
        || (id v17 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"SOCKSProxyHost"]) != 0)
      {

LABEL_22:
        id v13 = data_ark_copy(*(void **)(a1 + 40), 0, @"InFieldCollectionInFlight");
        id v18 = isNSNumber(v13);

        if (!v18)
        {

          id v13 = &__kCFBooleanFalse;
        }
        if (![v13 BOOLValue])
        {
          data_ark_set(*(void **)(a1 + 40), 0, @"InFieldCollectionInFlight", &__kCFBooleanTrue, 0);
          id v20 = *(void **)(a1 + 32);
          id v19 = *(void **)(a1 + 40);
          uint64_t v21 = *(void **)(a1 + 48);
          v26[0] = _NSConcreteStackBlock;
          v26[1] = 3254779904;
          void v26[2] = __issueCollection_block_invoke_2;
          v26[3] = &__block_descriptor_80_e8_32s40s48bs56r64r72r_e48_v40__0__NSData_8__NSDictionary_16q24__NSError_32l;
          CFStringRef v30 = &v40;
          id v27 = v19;
          id v31 = &v46;
          id v11 = v11;
          id v28 = v11;
          id v29 = *(id *)(a1 + 56);
          uint64_t v32 = &v34;
          performInFieldCollection(v27, v20, v21, v26);

          goto LABEL_17;
        }
        id v14 = createMobileActivationError((uint64_t)"issueCollection_block_invoke", 2484, @"com.apple.MobileActivation.ErrorDomain", -13, 0, @"Another collection request is already in flight.");
        goto LABEL_14;
      }
      id v23 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"SOCKSProxyPort"];

      if (v23) {
        goto LABEL_22;
      }
      id v24 = v47;
      id obj = v47[5];
      BOOL v25 = networkReachable();
      objc_storeStrong(v24 + 5, obj);
      if (v25) {
        goto LABEL_22;
      }
      uint64_t v22 = createMobileActivationError((uint64_t)"issueCollection_block_invoke", 2471, @"com.apple.MobileActivation.ErrorDomain", -17, v47[5], @"Network is unavailable.");
    }
    id v14 = v22;
    goto LABEL_13;
  }
  id v4 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"NetworkTimeoutInterval"];
  [v4 doubleValue];
  if (v5 > 0.0) {
    goto LABEL_5;
  }
  id v6 = createMobileActivationError((uint64_t)"issueCollection_block_invoke", 2439, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid network timeout requested: %@", v4);
LABEL_12:
  id v14 = v6;
  id v11 = 0;
LABEL_13:
  id v13 = 0;
LABEL_14:
  id v15 = v47[5];
  v47[5] = v14;

LABEL_15:
  uint64_t v16 = *(void *)(a1 + 56);
  if (v16) {
    (*(void (**)(uint64_t, uint64_t, id))(v16 + 16))(v16, v35[5], v47[5]);
  }
LABEL_17:
  _Block_object_dispose(&v34, 8);

  _Block_object_dispose(&v40, 8);
  _Block_object_dispose(&v46, 8);
}

void sub_100023A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 112), 8);
  _Unwind_Resume(a1);
}

BOOL collectionAlreadyPerformed(void *a1)
{
  id v1 = data_ark_copy(a1, 0, @"CollectionLastPerformed");
  id v2 = isNSString(v1);

  BOOL v6 = 0;
  if (v2)
  {
    id v3 = copy_suinfo_directory_path();
    id v2 = [v3 stringByAppendingPathComponent:@"psc.sui"];

    if (!v2
      || (id v4 = +[NSFileManager defaultManager],
          unsigned int v5 = [(NSFileManager *)v4 fileExistsAtPath:v2 isDirectory:0],
          v4,
          v5))
    {
      BOOL v6 = 1;
    }
  }

  return v6;
}

void performInFieldCollection(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  id v11 = dispatch_get_global_queue(0, 0);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3254779904;
  v16[2] = __performInFieldCollection_block_invoke;
  _OWORD v16[3] = &__block_descriptor_64_e8_32s40s48s56bs_e5_v8__0l;
  id v17 = v8;
  id v18 = v7;
  id v19 = v9;
  id v20 = v10;
  id v12 = v9;
  id v13 = v7;
  id v14 = v8;
  id v15 = v10;
  dispatch_async(v11, v16);
}

void __issueCollection_block_invoke_2(uint64_t a1, id a2, void *a3, uint64_t a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a5;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3254779904;
  v22[2] = __issueCollection_block_invoke_3;
  v22[3] = &__block_descriptor_112_e8_32s40s48s56s64s72bs80r88r96r_e5_v8__0l;
  uint64_t v29 = *(void *)(a1 + 56);
  id v12 = *(id *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 64);
  id v23 = v12;
  uint64_t v30 = v13;
  id v14 = *(id *)(a1 + 40);
  uint64_t v32 = a4;
  id v24 = v14;
  id v25 = v11;
  id v26 = v10;
  id v27 = v9;
  id v15 = *(id *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 72);
  id v28 = v15;
  uint64_t v31 = v16;
  id v17 = v9;
  id v18 = v10;
  id v19 = v11;
  dispatch_block_t v20 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_DEFAULT, 0, v22);
  uint64_t v21 = copyMobileActivationSerialQueue();
  dispatch_async(v21, v20);
}

uint64_t __issueCollection_block_invoke_3(uint64_t a1)
{
  id v2 = data_ark_copy(*(void **)(a1 + 32), 0, @"ActivationState");
  id v3 = isNSString(v2);
  uint64_t v4 = *(void *)(*(void *)(a1 + 80) + 8);
  unsigned int v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  if (([*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) isEqualToString:@"Activated"] & 1) == 0)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"issueCollection_block_invoke_3", 2506, @"com.apple.MobileActivation.ErrorDomain", -8, 0, @"Device is not activated (%@).", *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40));
    goto LABEL_13;
  }
  if (([*(id *)(a1 + 40) BOOLValue] & 1) != 0
    || !collectionAlreadyPerformed(*(void **)(a1 + 32)))
  {
    uint64_t v6 = *(void *)(a1 + 104);
    if (v6 != 200)
    {
      if (v6)
      {
        if (v6 != -1)
        {
          uint64_t v22 = *(void **)(a1 + 48);
          id v23 = +[NSHTTPURLResponse localizedStringForStatusCode:*(void *)(a1 + 104)];
          id v24 = createMobileActivationError((uint64_t)"issueCollection_block_invoke_3", 2521, @"com.apple.MobileActivation.ServerErrorDomain", v6, v22, @"Server error: %ld (%@)", v6, v23);

          uint64_t v25 = *(void *)(a1 + 104);
          id v26 = +[NSHTTPURLResponse localizedStringForStatusCode:v25];
          id v27 = createMobileActivationError((uint64_t)"issueCollection_block_invoke_3", 2521, @"com.apple.MobileActivation.ErrorDomain", -6, v24, @"Server error: %ld (%@)", v25, v26);

          uint64_t v28 = *(void *)(*(void *)(a1 + 88) + 8);
          id v17 = *(void **)(v28 + 40);
          *(void *)(v28 + 40) = v27;
          goto LABEL_14;
        }
        id v7 = *(void **)(a1 + 48);
        id v8 = @"Internal error.";
        uint64_t v9 = 2515;
      }
      else
      {
        id v7 = *(void **)(a1 + 48);
        id v8 = @"Network communication error.";
        uint64_t v9 = 2518;
      }
      MobileActivationError = createMobileActivationError((uint64_t)"issueCollection_block_invoke_3", v9, @"com.apple.MobileActivation.ErrorDomain", -6, v7, v8);
LABEL_13:
      id v14 = MobileActivationError;
      uint64_t v15 = *(void *)(*(void *)(a1 + 88) + 8);
      uint64_t v16 = *(void **)(v15 + 40);
      *(void *)(v15 + 40) = v14;
      id v17 = v16;
LABEL_14:

      goto LABEL_15;
    }
    id v11 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"X-Apple-Invalid-Reason"];
    id v12 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"X-Apple-Retry-After"];
    id v13 = isNSString(v11);
    if (v13)
    {

LABEL_26:
      uint64_t v30 = *(void *)(a1 + 104);
      uint64_t v31 = *(void **)(a1 + 48);
      uint64_t v32 = +[NSHTTPURLResponse localizedStringForStatusCode:v30];
      id v33 = createMobileActivationError((uint64_t)"issueCollection_block_invoke_3", 2529, @"com.apple.MobileActivation.ServerErrorDomain", v30, v31, @"Server error: %ld (%@) / %@ / %@", v30, v32, v11, v12);

      uint64_t v34 = *(void *)(a1 + 104);
      BOOL v35 = +[NSHTTPURLResponse localizedStringForStatusCode:v34];
      uint64_t v36 = createMobileActivationError((uint64_t)"issueCollection_block_invoke_3", 2529, @"com.apple.MobileActivation.ErrorDomain", -6, v33, @"Server error: %ld (%@) / %@ / %@", v34, v35, v11, v12);

      uint64_t v37 = *(void *)(*(void *)(a1 + 88) + 8);
      double v38 = *(MACollectionInterface **)(v37 + 40);
      *(void *)(v37 + 40) = v36;
LABEL_27:

      id v17 = v11;
      goto LABEL_14;
    }
    id v29 = isNSNumber(v12);

    if (v29) {
      goto LABEL_26;
    }
    if (!*(void *)(a1 + 64))
    {
      BOOL v56 = createMobileActivationError((uint64_t)"issueCollection_block_invoke_3", 2534, @"com.apple.MobileActivation.ErrorDomain", -6, *(void **)(a1 + 48), @"Invalid server response.");
      uint64_t v57 = *(void *)(*(void *)(a1 + 88) + 8);
      BOOL v58 = *(MACollectionInterface **)(v57 + 40);
      *(void *)(v57 + 40) = v56;
      double v38 = v58;
      goto LABEL_27;
    }
    id v39 = +[GestaltHlpr getSharedInstance];
    uint64_t v40 = (MACollectionInterface *)[v39 copyAnswer:@"BuildVersion"];

    id v41 = isNSString(v40);
    if (v41)
    {
      uint64_t v42 = [[MACollectionInterface alloc] initWithContext:*(void *)(a1 + 32)];
      if (v42)
      {
        id v43 = v42;
        uint64_t v44 = *(void *)(a1 + 64);
        uint64_t v45 = *(void *)(*(void *)(a1 + 88) + 8);
        id obj = *(id *)(v45 + 40);
        uint64_t v46 = (MACollectionInterface *)+[NSJSONSerialization JSONObjectWithData:v44 options:0 error:&obj];
        objc_storeStrong((id *)(v45 + 40), obj);
        if (!v46)
        {
          uint64_t v63 = createMobileActivationError((uint64_t)"issueCollection_block_invoke_3", 2552, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to deserialize JSON data: %@", *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40));
          uint64_t v64 = *(void *)(*(void *)(a1 + 88) + 8);
          id v65 = *(void **)(v64 + 40);
          *(void *)(v64 + 40) = v63;

          double v38 = v43;
          goto LABEL_27;
        }
        id v47 = [(MACollectionInterface *)v46 objectForKeyedSubscript:@"suinfo"];
        id v48 = isNSString(v47);

        if (v48)
        {
          id v49 = (MACollectionInterface *)[objc_alloc((Class)NSData) initWithBase64EncodedString:v47 options:1];
          if (v49)
          {
            uint64_t v50 = v49;
            uint64_t v51 = *(void *)(*(void *)(a1 + 88) + 8);
            id v74 = *(id *)(v51 + 40);
            unsigned __int8 v52 = [(MACollectionInterface *)v43 processSUInfo:v49 withError:&v74];
            objc_storeStrong((id *)(v51 + 40), v74);
            if (v52)
            {
              data_ark_remove(*(void **)(a1 + 32), 0, @"PCRTToken");
              id v53 = (MACollectionInterface *)[*(id *)(a1 + 56) objectForKeyedSubscript:@"x-iservice-token"];
              id v54 = isNSString(v53);

              if (v54) {
                data_ark_set(*(void **)(a1 + 32), 0, @"PCRTToken", v53, 1);
              }
              data_ark_set(*(void **)(a1 + 32), 0, @"CollectionLastPerformed", v40, 1);

              id v55 = v53;
            }
            else
            {
              int v71 = createMobileActivationError((uint64_t)"issueCollection_block_invoke_3", 2569, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to process SUInfo: %@", *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40));
              uint64_t v72 = *(void *)(*(void *)(a1 + 88) + 8);
              unsigned int v73 = *(void **)(v72 + 40);
              *(void *)(v72 + 40) = v71;

              id v55 = v40;
            }

            unsigned int v70 = v50;
            goto LABEL_48;
          }
          SecCertificateRef v66 = createMobileActivationError((uint64_t)"issueCollection_block_invoke_3", 2564, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode SUInfo.");
        }
        else
        {
          SecCertificateRef v66 = createMobileActivationError((uint64_t)"issueCollection_block_invoke_3", 2558, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid SUInfo: %@", v47);
        }
        id v67 = v66;
        uint64_t v68 = *(void *)(*(void *)(a1 + 88) + 8);
        uint64_t v69 = *(void **)(v68 + 40);
        *(void *)(v68 + 40) = v67;

        unsigned int v70 = v40;
LABEL_48:

        double v38 = v46;
        goto LABEL_27;
      }
      id v59 = createMobileActivationError((uint64_t)"issueCollection_block_invoke_3", 2546, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create collection interface.");
    }
    else
    {
      id v59 = createMobileActivationError((uint64_t)"issueCollection_block_invoke_3", 2540, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve OS build.");
    }
    id v60 = v59;
    uint64_t v61 = *(void *)(*(void *)(a1 + 88) + 8);
    id v62 = *(void **)(v61 + 40);
    *(void *)(v61 + 40) = v60;

    double v38 = v40;
    goto LABEL_27;
  }
LABEL_15:
  if (*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40))
  {
    id v18 = copyLoggingHandle();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v19 = *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
      *(_DWORD *)buf = 138543362;
      uint64_t v77 = v19;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Failed to perform collection: %{public}@", buf, 0xCu);
    }

    if (*(void *)(a1 + 104)
      && (mobileactivationErrorHasDomainAndErrorCode(*(void **)(*(void *)(*(void *)(a1 + 88) + 8) + 40), @"com.apple.MobileActivation.ErrorDomain", (id)0xFFFFFFFFFFFFFFEALL) & 1) == 0)
    {
      writeSplunkLog(*(void **)(a1 + 32), 16, *(void *)(a1 + 104), (uint64_t)"issueCollection_block_invoke", 2590, 0, @"%@", v20, *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40));
    }
  }
  data_ark_set(*(void **)(a1 + 32), 0, @"InFieldCollectionInFlight", &__kCFBooleanFalse, 0);
  uint64_t result = *(void *)(a1 + 72);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, *(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 40), *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40));
  }
  return result;
}

void __copy_helper_block_e8_32s40s48s56s64s72b80r88r96r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  id v8 = *(id *)(a2 + 64);
  _Block_object_assign((void *)(a1 + 72), *(const void **)(a2 + 72), 7);
  _Block_object_assign((void *)(a1 + 80), *(const void **)(a2 + 80), 8);
  _Block_object_assign((void *)(a1 + 88), *(const void **)(a2 + 88), 8);
  uint64_t v9 = *(const void **)(a2 + 96);

  _Block_object_assign((void *)(a1 + 96), v9, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64s72s80r88r96r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 96), 8);
  _Block_object_dispose(*(const void **)(a1 + 88), 8);
  _Block_object_dispose(*(const void **)(a1 + 80), 8);

  id v2 = *(void **)(a1 + 32);
}

void __copy_helper_block_e8_32s40s48b56r64r72r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  _Block_object_assign((void *)(a1 + 48), *(const void **)(a2 + 48), 7);
  _Block_object_assign((void *)(a1 + 56), *(const void **)(a2 + 56), 8);
  _Block_object_assign((void *)(a1 + 64), *(const void **)(a2 + 64), 8);
  id v6 = *(const void **)(a2 + 72);

  _Block_object_assign((void *)(a1 + 72), v6, 8);
}

void __destroy_helper_block_e8_32s40s48s56r64r72r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 72), 8);
  _Block_object_dispose(*(const void **)(a1 + 64), 8);
  _Block_object_dispose(*(const void **)(a1 + 56), 8);

  id v2 = *(void **)(a1 + 32);
}

void issueUCRT(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  id v11 = copyMobileActivationSerialQueue();
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3254779904;
  v16[2] = __issueUCRT_block_invoke;
  _OWORD v16[3] = &__block_descriptor_64_e8_32s40s48s56bs_e5_v8__0l;
  id v17 = v9;
  id v18 = v7;
  id v19 = v8;
  id v20 = v10;
  id v12 = v10;
  id v13 = v8;
  id v14 = v7;
  id v15 = v9;
  dispatch_async(v11, v16);
}

void __issueUCRT_block_invoke(uint64_t a1)
{
  uint64_t v54 = 0;
  id v55 = (id *)&v54;
  uint64_t v56 = 0x3032000000;
  uint64_t v57 = __Block_byref_object_copy__5;
  BOOL v58 = __Block_byref_object_dispose__5;
  id v59 = 0;
  uint64_t v48 = 0;
  id v49 = &v48;
  uint64_t v50 = 0x3032000000;
  uint64_t v51 = __Block_byref_object_copy__5;
  unsigned __int8 v52 = __Block_byref_object_dispose__5;
  id v53 = 0;
  if (!is_virtual_machine())
  {
    id v4 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"IgnoreExistingUCRT"];
    id v3 = v4;
    if (v4)
    {
      id v5 = isNSNumber(v4);

      if (!v5)
      {
        id v9 = createMobileActivationError((uint64_t)"issueUCRT_block_invoke", 2638, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid option (%@).", @"IgnoreExistingUCRT");
        goto LABEL_27;
      }
    }
    id v6 = v55;
    id obj = v55[5];
    BOOL is_legacy = security_committed_uik_is_legacy(&obj);
    objc_storeStrong(v6 + 5, obj);
    if (!is_legacy)
    {
      id v8 = v55[5];
      if (v8)
      {
        id v9 = createMobileActivationError((uint64_t)"issueUCRT_block_invoke", 2644, @"com.apple.MobileActivation.ErrorDomain", -1, v8, @"Failed to query legacy UIK support.");
LABEL_27:
        id v2 = v9;
        goto LABEL_28;
      }
    }
    id v10 = data_ark_copy(*(void **)(a1 + 40), 0, @"UCRTHealingRequired");
    id v11 = isNSNumber(v10);

    if (!v11)
    {

      id v10 = &__kCFBooleanFalse;
    }
    id v12 = data_ark_copy(*(void **)(a1 + 40), 0, @"UIKUpgradeRequired");
    id v13 = isNSNumber(v12);

    if (!v13)
    {

      id v12 = &__kCFBooleanFalse;
    }
    id v14 = *(void **)(a1 + 40);
    id v15 = v55;
    id v46 = v55[5];
    SecCertificateRef v16 = copyUCRT(v14, (NSError **)&v46);
    objc_storeStrong(v15 + 5, v46);
    unsigned int v17 = [v3 BOOLValue];
    if (v16) {
      int v18 = v17;
    }
    else {
      int v18 = 1;
    }
    if (((v18 | is_legacy) & 1) == 0
      && ([v10 BOOLValue] & 1) == 0
      && ![v12 BOOLValue])
    {
      id v20 = 0;
      char v31 = 0;
      id v25 = 0;
      id v24 = 0;
LABEL_40:
      CFRelease(v16);
LABEL_41:
      if (v31) {
        goto LABEL_31;
      }
      goto LABEL_29;
    }
    id v19 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"UseCellularBootstrapProxy"];
    if (v19
      || (id v19 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"UseCellularOTAProxy"]) != 0
      || (id v19 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"SOCKSProxyHost"]) != 0)
    {
    }
    else
    {
      id v34 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"SOCKSProxyPort"];

      if (!v34)
      {
        BOOL v35 = v55;
        id v45 = v55[5];
        BOOL v36 = networkReachable();
        objc_storeStrong(v35 + 5, v45);
        if (!v36)
        {
          id v33 = createMobileActivationError((uint64_t)"issueUCRT_block_invoke", 2674, @"com.apple.MobileActivation.ErrorDomain", -17, v55[5], @"Network is unavailable.");
          id v24 = 0;
          id v25 = 0;
          char v31 = 0;
          id v20 = 0;
          goto LABEL_38;
        }
      }
    }
    id v20 = data_ark_copy(*(void **)(a1 + 40), 0, @"UCRTIssuanceInFlight");
    id v21 = isNSNumber(v20);

    if (!v21)
    {

      id v20 = &__kCFBooleanFalse;
    }
    if ([v20 BOOLValue])
    {
      uint64_t v22 = createMobileActivationError((uint64_t)"issueUCRT_block_invoke", 2687, @"com.apple.MobileActivation.ErrorDomain", -13, 0, @"Another UCRT request is already in flight.");
    }
    else
    {
      id v27 = objc_alloc_init((Class)NSMutableDictionary);
      if (v27)
      {
        id v24 = [*(id *)(a1 + 32) mutableCopy];

        [v24 setObject:&__kCFBooleanFalse forKeyedSubscript:@"UseCommittedUIK"];
        id v28 = objc_alloc_init((Class)NSMutableDictionary);
        id v29 = v28;
        if (v28)
        {
          [v28 setObject:*(void *)(a1 + 48) forKeyedSubscript:@"clientName"];
          data_ark_set(*(void **)(a1 + 40), 0, @"UCRTIssuanceInFlight", &__kCFBooleanTrue, 0);
          uint64_t v30 = *(void **)(a1 + 48);
          uint64_t v37 = *(void **)(a1 + 40);
          v38[0] = _NSConcreteStackBlock;
          v38[1] = 3254779904;
          v38[2] = __issueUCRT_block_invoke_2;
          v38[3] = &__block_descriptor_80_e8_32s40s48s56bs64r72r_e48_v40__0__NSData_8__NSDictionary_16q24__NSError_32l;
          id v43 = &v54;
          id v24 = v24;
          id v39 = v24;
          id v40 = *(id *)(a1 + 40);
          id v25 = v29;
          id v41 = v25;
          id v42 = *(id *)(a1 + 56);
          uint64_t v44 = &v48;
          char v31 = 1;
          performUCRTOOB(v37, 1, v30, v24, v38);

          id v32 = v39;
          goto LABEL_39;
        }
        id v33 = createMobileActivationError((uint64_t)"issueUCRT_block_invoke", 2704, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");
        goto LABEL_37;
      }
      uint64_t v22 = createMobileActivationError((uint64_t)"issueUCRT_block_invoke", 2695, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");
    }
    id v33 = v22;
    id v24 = 0;
LABEL_37:
    id v25 = 0;
    char v31 = 0;
LABEL_38:
    id v32 = v55[5];
    v55[5] = v33;
LABEL_39:

    if (!v16) {
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  id v2 = createMobileActivationError((uint64_t)"issueUCRT_block_invoke", 2630, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"UCRT not supported on virtual machines.");
  id v3 = 0;
LABEL_28:
  id v23 = v55[5];
  v55[5] = v2;

  id v24 = 0;
  id v25 = 0;
  id v12 = 0;
  id v10 = 0;
  id v20 = 0;
LABEL_29:
  uint64_t v26 = *(void *)(a1 + 56);
  if (v26) {
    (*(void (**)(uint64_t, uint64_t, id))(v26 + 16))(v26, v49[5], v55[5]);
  }
LABEL_31:

  _Block_object_dispose(&v48, 8);
  _Block_object_dispose(&v54, 8);
}

void sub_10002525C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v16 - 136), 8);
  _Unwind_Resume(a1);
}

void performUCRTOOB(void *a1, int a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  if (a2)
  {
    id v13 = v9;
    id v14 = v10;
    id v15 = v11;
    id v16 = v12;
    unsigned int v17 = dispatch_get_global_queue(0, 0);
    int v18 = v17;
    id v20 = _NSConcreteStackBlock;
    uint64_t v21 = 3254779904;
    id v19 = ___performUCRTHealingOOB_block_invoke;
  }
  else
  {
    id v13 = v9;
    id v14 = v10;
    id v15 = v11;
    id v16 = v12;
    unsigned int v17 = dispatch_get_global_queue(0, 0);
    int v18 = v17;
    id v20 = _NSConcreteStackBlock;
    uint64_t v21 = 3254779904;
    id v19 = ___performUCRTOOB_block_invoke;
  }
  uint64_t v22 = v19;
  id v23 = &__block_descriptor_64_e8_32s40s48s56bs_e5_v8__0l;
  id v24 = v13;
  id v25 = v14;
  id v26 = v15;
  id v27 = v16;
  dispatch_async(v17, &v20);
}

void __issueUCRT_block_invoke_2(uint64_t a1, id a2, void *a3, uint64_t a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a5;
  id v12 = copyMobileActivationSerialQueue();
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3254779904;
  v19[2] = __issueUCRT_block_invoke_3;
  v19[3] = &__block_descriptor_112_e8_32s40s48s56s64s72s80bs88r96r_e5_v8__0l;
  uint64_t v29 = a4;
  uint64_t v13 = *(void *)(a1 + 64);
  id v20 = v11;
  id v21 = v9;
  uint64_t v27 = v13;
  id v22 = v10;
  id v23 = *(id *)(a1 + 32);
  id v24 = *(id *)(a1 + 40);
  id v25 = *(id *)(a1 + 48);
  id v14 = *(id *)(a1 + 56);
  uint64_t v15 = *(void *)(a1 + 72);
  id v26 = v14;
  uint64_t v28 = v15;
  id v16 = v10;
  id v17 = v9;
  id v18 = v11;
  dispatch_async(v12, v19);
}

uint64_t __issueUCRT_block_invoke_3(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  switch(v2)
  {
    case 200:
      if (!*(void *)(a1 + 40))
      {
        id v3 = *(void **)(a1 + 32);
        id v4 = @"Invalid server response.";
        uint64_t v5 = 2733;
        goto LABEL_15;
      }
      id v6 = [*(id *)(a1 + 48) objectForKeyedSubscript:@"Date"];
      if (!v6)
      {
        MobileActivationError = createMobileActivationError((uint64_t)"issueUCRT_block_invoke_3", 2739, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve server response date.");
        goto LABEL_16;
      }
      id v7 = v6;
      id v8 = objc_alloc_init((Class)NSDateFormatter);
      if (!v8)
      {
        BOOL v35 = createMobileActivationError((uint64_t)"issueUCRT_block_invoke_3", 2745, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate date formatter.");
        uint64_t v36 = *(void *)(*(void *)(a1 + 88) + 8);
        uint64_t v37 = *(void **)(v36 + 40);
        *(void *)(v36 + 40) = v35;

        uint64_t v27 = v7;
        goto LABEL_17;
      }
      id v9 = v8;
      uint64_t v10 = *(void *)(*(void *)(a1 + 88) + 8);
      id obj = *(id *)(v10 + 40);
      id v11 = [v8 dateFromServerString:v7 withError:&obj];
      objc_storeStrong((id *)(v10 + 40), obj);
      if (!v11)
      {
        double v38 = createMobileActivationError((uint64_t)"issueUCRT_block_invoke_3", 2751, @"com.apple.MobileActivation.ErrorDomain", -1, *(void **)(*(void *)(*(void *)(a1 + 88) + 8) + 40), @"Failed to convert date string.");
        uint64_t v39 = *(void *)(*(void *)(a1 + 88) + 8);
        id v40 = *(void **)(v39 + 40);
        *(void *)(v39 + 40) = v38;

        uint64_t v27 = v9;
        goto LABEL_17;
      }
      id v12 = +[GestaltHlpr getSharedInstance];
      id v13 = [v12 copyAnswer:@"BuildVersion"];

      id v14 = isNSString(v13);
      if (v14)
      {
        [*(id *)(a1 + 56) setObject:v11 forKeyedSubscript:@"ServerResponseDate"];
        uint64_t v15 = *(void **)(a1 + 40);
        id v17 = *(void **)(a1 + 56);
        id v16 = *(void **)(a1 + 64);
        uint64_t v18 = *(void *)(*(void *)(a1 + 88) + 8);
        id v45 = *(id *)(v18 + 40);
        char v19 = storeUCRT(v16, v15, v17, &v45);
        objc_storeStrong((id *)(v18 + 40), v45);
        if (v19)
        {
          data_ark_set(*(void **)(a1 + 64), 0, @"UCRTOOBLastPerformed", v13, 1);
          data_ark_remove(*(void **)(a1 + 64), 0, @"UCRTOOBForbiddenCount");
          data_ark_remove(*(void **)(a1 + 64), 0, @"UCRTOOBRetryAttempt");
          data_ark_remove(*(void **)(a1 + 64), 0, @"UCRTUpgradeRequired");
          data_ark_remove(*(void **)(a1 + 64), 0, @"UCRTHealingRequired");
          data_ark_remove(*(void **)(a1 + 64), 0, @"UIKUpgradeRequired");
LABEL_29:

          uint64_t v27 = v13;
          goto LABEL_17;
        }
        id v41 = createMobileActivationError((uint64_t)"issueUCRT_block_invoke_3", 2766, @"com.apple.MobileActivation.ErrorDomain", -1, *(void **)(*(void *)(*(void *)(a1 + 88) + 8) + 40), @"Failed to store UCRT.");
      }
      else
      {
        id v41 = createMobileActivationError((uint64_t)"issueUCRT_block_invoke_3", 2757, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve OS build.");
      }
      id v42 = v41;
      uint64_t v43 = *(void *)(*(void *)(a1 + 88) + 8);
      uint64_t v44 = *(void **)(v43 + 40);
      *(void *)(v43 + 40) = v42;

      goto LABEL_29;
    case 0:
      id v3 = *(void **)(a1 + 32);
      id v4 = @"Network communication error.";
      uint64_t v5 = 2725;
      goto LABEL_15;
    case -1:
      id v3 = *(void **)(a1 + 32);
      id v4 = @"Internal error.";
      uint64_t v5 = 2722;
LABEL_15:
      MobileActivationError = createMobileActivationError((uint64_t)"issueUCRT_block_invoke_3", v5, @"com.apple.MobileActivation.ErrorDomain", -6, v3, v4);
LABEL_16:
      uint64_t v29 = MobileActivationError;
      uint64_t v30 = *(void *)(*(void *)(a1 + 88) + 8);
      char v31 = *(void **)(v30 + 40);
      *(void *)(v30 + 40) = v29;
      uint64_t v27 = v31;
      goto LABEL_17;
  }
  id v20 = *(void **)(a1 + 32);
  id v21 = +[NSHTTPURLResponse localizedStringForStatusCode:v2];
  id v22 = createMobileActivationError((uint64_t)"issueUCRT_block_invoke_3", 2728, @"com.apple.MobileActivation.ServerErrorDomain", v2, v20, @"Server error: %ld (%@)", v2, v21);

  uint64_t v23 = *(void *)(a1 + 104);
  id v24 = +[NSHTTPURLResponse localizedStringForStatusCode:v23];
  id v25 = createMobileActivationError((uint64_t)"issueUCRT_block_invoke_3", 2728, @"com.apple.MobileActivation.ErrorDomain", -6, v22, @"Server error: %ld (%@)", v23, v24);

  uint64_t v26 = *(void *)(*(void *)(a1 + 88) + 8);
  uint64_t v27 = *(void **)(v26 + 40);
  *(void *)(v26 + 40) = v25;
LABEL_17:

  if (*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40))
  {
    uint64_t v33 = *(void *)(a1 + 104);
    if (v33) {
      writeSplunkLog(*(void **)(a1 + 64), 32, v33, (uint64_t)"issueUCRT_block_invoke_3", 2784, *(void **)(a1 + 72), @"%@", v32, *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40));
    }
  }
  data_ark_set(*(void **)(a1 + 64), 0, @"UCRTIssuanceInFlight", &__kCFBooleanFalse, 0);
  uint64_t result = *(void *)(a1 + 80);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, *(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 40), *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40));
  }
  return result;
}

void __copy_helper_block_e8_32s40s48s56s64s72s80b88r96r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  id v8 = *(id *)(a2 + 64);
  id v9 = *(id *)(a2 + 72);
  _Block_object_assign((void *)(a1 + 80), *(const void **)(a2 + 80), 7);
  _Block_object_assign((void *)(a1 + 88), *(const void **)(a2 + 88), 8);
  uint64_t v10 = *(const void **)(a2 + 96);

  _Block_object_assign((void *)(a1 + 96), v10, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64s72s80s88r96r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 96), 8);
  _Block_object_dispose(*(const void **)(a1 + 88), 8);

  uint64_t v2 = *(void **)(a1 + 32);
}

void __copy_helper_block_e8_32s40s48s56b64r72r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  _Block_object_assign((void *)(a1 + 56), *(const void **)(a2 + 56), 7);
  _Block_object_assign((void *)(a1 + 64), *(const void **)(a2 + 64), 8);
  id v7 = *(const void **)(a2 + 72);

  _Block_object_assign((void *)(a1 + 72), v7, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64r72r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 72), 8);
  _Block_object_dispose(*(const void **)(a1 + 64), 8);

  uint64_t v2 = *(void **)(a1 + 32);
}

void __issueClientCertificateWithReferenceKey_block_invoke(uint64_t a1)
{
  uint64_t v81 = 0;
  CFStringRef v82 = (id *)&v81;
  uint64_t v83 = 0x3032000000;
  id v84 = __Block_byref_object_copy__5;
  id v85 = __Block_byref_object_dispose__5;
  id v86 = 0;
  uint64_t v75 = 0;
  CFTypeRef v76 = &v75;
  uint64_t v77 = 0x3032000000;
  id v78 = __Block_byref_object_copy__5;
  id v79 = __Block_byref_object_dispose__5;
  id v80 = 0;
  char v74 = 0;
  if (*(void *)(a1 + 32) && *(void *)(a1 + 40) && *(void *)(a1 + 48))
  {
    uint64_t v2 = *(void **)(a1 + 56);
    if (v2)
    {
      id v3 = [v2 objectForKeyedSubscript:@"scrtAttestation"];
      id v4 = isNSNumber(v3);

      if (v4)
      {
        id v5 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"scrtAttestation"];
        unsigned __int8 v55 = [v5 BOOLValue];
      }
      else
      {
        unsigned __int8 v55 = 0;
      }
      id v13 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"NetworkTimeoutInterval"];
      id v14 = isNSNumber(v13);

      if (v14)
      {
        id v7 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"NetworkTimeoutInterval"];
        [v7 doubleValue];
        if (v15 <= 0.0)
        {
          id v6 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 2838, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid network timeout requested: %@", v7);
          goto LABEL_8;
        }
      }
      else
      {
        id v7 = 0;
      }
      id v16 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"CertType"];
      id v17 = isNSNumber(v16);

      if (v17)
      {
        id v8 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"CertType"];
        uint64_t v18 = +[NSNumber numberWithUnsignedInt:0];
        if ([v8 isEqualToNumber:v18])
        {
        }
        else
        {
          id v40 = +[NSNumber numberWithUnsignedInt:1];
          if ([v8 isEqualToNumber:v40])
          {
          }
          else
          {
            uint64_t v44 = +[NSNumber numberWithUnsignedInt:2];
            unsigned __int8 v45 = [v8 isEqualToNumber:v44];

            if ((v45 & 1) == 0)
            {
              id v6 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 2847, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid value for option (%@): %@", @"CertType", v8);
              goto LABEL_9;
            }
          }
        }
        id v46 = +[NSNumber numberWithUnsignedInt:1];
        unsigned __int8 v47 = [v8 isEqualToNumber:v46];

        if (v47)
        {
          unsigned __int8 v20 = 0;
          char v19 = 1;
        }
        else
        {
          uint64_t v48 = +[NSNumber numberWithUnsignedInt:2];
          unsigned __int8 v20 = [v8 isEqualToNumber:v48];

          char v19 = 0;
        }
LABEL_26:
        id v21 = data_ark_copy(*(void **)(a1 + 32), 0, @"ActivationState");
        id v9 = (__CFString *)isNSString(v21);

        if (!v9) {
          id v9 = @"Unactivated";
        }
        if (v55)
        {
          id v22 = 0;
          id v11 = 0;
          goto LABEL_30;
        }
        if (([(__CFString *)v9 isEqualToString:@"Activated"] & 1) == 0)
        {
          id v6 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 2866, @"com.apple.MobileActivation.ErrorDomain", -8, 0, @"Device is not activated: %@", v9);
          goto LABEL_10;
        }
        uint64_t v27 = *(void **)(a1 + 32);
        uint64_t v28 = v82;
        id obj = v82[5];
        id v22 = copyUCRT(v27, (NSError **)&obj);
        objc_storeStrong(v28 + 5, obj);
        if (!v22)
        {
          id v41 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 2872, @"com.apple.MobileActivation.ErrorDomain", -1, v82[5], @"Failed to copy UCRT.");
          id v42 = v82[5];
          v82[5] = v41;

          if (mobileactivationErrorHasDomainAndErrorCode(v82[5], @"com.apple.MobileActivation.ErrorDomain", (id)0xFFFFFFFFFFFFFFFCLL))
          {
            data_ark_remove(*(void **)(a1 + 32), 0, @"UCRTOOBRetryAttempt");
            data_ark_set(*(void **)(a1 + 32), 0, @"UCRTHealingRequired", &__kCFBooleanTrue, 1);
            uint64_t v43 = copyLoggingHandle();
            if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "Scheduled UCRT OOB to attempt recovery of missing UCRT.", buf, 2u);
            }

            scheduleXPCActivity(*(void **)(a1 + 32), (const char *)[@"com.apple.mobileactivationd.UCRT.OOB" UTF8String], 5u, 1, 0x3000u, 0x1000u, &__block_literal_global_5);
          }
          goto LABEL_11;
        }
        uint64_t v29 = v82;
        id v71 = v82[5];
        char v30 = deleteLegacyUIKIfMismatched(v22, &v74, (NSError **)&v71);
        objc_storeStrong(v29 + 5, v71);
        if (v30)
        {
          if (v74)
          {
            maLog((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_2", 0, @"Legacy UIK purged.");
            data_ark_remove(*(void **)(a1 + 32), 0, @"UIKUpgradeRequired");
          }
          id v31 = data_ark_copy(*(void **)(a1 + 32), 0, @"UCRTHealingRequired");
          uint64_t v32 = (void *)v76[5];
          v76[5] = (uint64_t)v31;

          id v33 = isNSNumber((void *)v76[5]);
          if (!v33)
          {
            id v34 = (void *)v76[5];
            v76[5] = (uint64_t)&__kCFBooleanFalse;
          }
          id v11 = data_ark_copy(*(void **)(a1 + 32), 0, @"UCRTOOBForbidden");
          id v35 = isNSNumber(v11);

          if (!v35)
          {

            id v11 = &__kCFBooleanFalse;
          }
          if (![(id)v76[5] BOOLValue])
          {
LABEL_30:
            id v23 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"UseCellularBootstrapProxy"];
            if (v23
              || (id v23 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"UseCellularOTAProxy"]) != 0
              || (id v23 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"SOCKSProxyHost"]) != 0)
            {
            }
            else
            {
              id v50 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"SOCKSProxyPort"];

              if (!v50)
              {
                uint64_t v51 = v82;
                id v69 = v82[5];
                BOOL v52 = networkReachable();
                objc_storeStrong(v51 + 5, v69);
                if (!v52)
                {
                  id v53 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_2", 2949, @"com.apple.MobileActivation.ErrorDomain", -17, v82[5], @"Network is unavailable.");
                  char v25 = 0;
                  id v26 = v82[5];
                  v82[5] = v53;
LABEL_35:

                  if (!v22)
                  {
LABEL_73:
                    if (v25) {
                      goto LABEL_14;
                    }
                    goto LABEL_12;
                  }
LABEL_72:
                  CFRelease(v22);
                  goto LABEL_73;
                }
              }
            }
            id v24 = dispatch_get_global_queue(0, 0);
            block[0] = _NSConcreteStackBlock;
            block[1] = 3254779904;
            block[2] = __issueClientCertificateWithReferenceKey_block_invoke_3;
            block[3] = &__block_descriptor_103_e8_32s40s48s56s64s72bs80r88r_e5_v8__0l;
            uint64_t v63 = &v81;
            id v57 = *(id *)(a1 + 40);
            id v58 = *(id *)(a1 + 56);
            id v59 = *(id *)(a1 + 48);
            int v65 = *(_DWORD *)(a1 + 72);
            id v60 = v7;
            unsigned __int8 v66 = v55;
            char v67 = v19;
            unsigned __int8 v68 = v20;
            id v61 = *(id *)(a1 + 32);
            uint64_t v64 = &v75;
            id v62 = *(id *)(a1 + 64);
            dispatch_async(v24, block);

            char v25 = 1;
            id v26 = v57;
            goto LABEL_35;
          }
          uint64_t v36 = v82;
          id v70 = v82[5];
          char v37 = ucrtHealingSupported(&v70);
          objc_storeStrong(v36 + 5, v70);
          id v38 = v82[5];
          if (v38)
          {
            uint64_t v39 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_2", 2924, @"com.apple.MobileActivation.ErrorDomain", -1, v38, @"Failed to query UCRT healing support.");
          }
          else if (v37)
          {
            if ([v11 BOOLValue]) {
              uint64_t v39 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_2", 2934, @"com.apple.MobileActivation.ErrorDomain", -16, 0, @"UCRT healing required but not supported (max failure retries attempted).");
            }
            else {
              uint64_t v39 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_2", 2938, @"com.apple.MobileActivation.ErrorDomain", -16, 0, @"UCRT healing required but not performed yet (try again later).");
            }
          }
          else
          {
            uint64_t v39 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_2", 2929, @"com.apple.MobileActivation.ErrorDomain", -16, 0, @"UCRT healing required but not supported (user signed into non-HSA2 iCloud account).");
          }
          id v49 = v39;
        }
        else
        {
          id v49 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_2", 2895, @"com.apple.MobileActivation.ErrorDomain", -1, v82[5], @"Failed to delete invalid legacy UIK.");
          id v11 = 0;
        }
        id v54 = v82[5];
        v82[5] = v49;

        char v25 = 0;
        goto LABEL_72;
      }
      id v8 = 0;
    }
    else
    {
      id v7 = 0;
      id v8 = 0;
      unsigned __int8 v55 = 0;
    }
    char v19 = 0;
    unsigned __int8 v20 = 0;
    goto LABEL_26;
  }
  id v6 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 2826, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid input(s).");
  id v7 = 0;
LABEL_8:
  id v8 = 0;
LABEL_9:
  id v9 = 0;
LABEL_10:
  id v10 = v82[5];
  v82[5] = v6;

LABEL_11:
  id v11 = 0;
LABEL_12:
  uint64_t v12 = *(void *)(a1 + 64);
  if (v12) {
    (*(void (**)(uint64_t, void, id))(v12 + 16))(v12, 0, v82[5]);
  }
LABEL_14:

  _Block_object_dispose(&v75, 8);
  _Block_object_dispose(&v81, 8);
}

void sub_100026930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v32 - 136), 8);
  _Unwind_Resume(a1);
}

void __issueClientCertificateWithReferenceKey_block_invoke_189(id a1, DataArk *a2)
{
}

void ucrt_oob_activity_handler(void *a1, int a2)
{
  id v3 = a1;
  id v4 = v3;
  if (v3)
  {
    if (a2)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3254779904;
      block[2] = __ucrt_oob_activity_handler_block_invoke;
      block[3] = &__block_descriptor_40_e8_32s_e5_v8__0l;
      id v12 = v3;
      dispatch_block_t v5 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_DEFAULT, 0, block);
      id v6 = copyMobileActivationSerialQueue();
      dispatch_async(v6, v5);

      id v7 = v12;
    }
    else
    {
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3254779904;
      v9[2] = __ucrt_oob_activity_handler_block_invoke_3;
      v9[3] = &__block_descriptor_40_e8_32s_e5_v8__0l;
      id v10 = v3;
      dispatch_block_t v5 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_DEFAULT, 0, v9);
      id v8 = copyMobileActivationSerialQueue();
      dispatch_async(v8, v5);

      id v7 = v10;
    }
  }
  else
  {
    maLog((uint64_t)"ucrt_oob_activity_handler", 0, @"Invalid input.");
  }
}

uint64_t deleteLegacyUIKIfMismatched(__SecCertificate *a1, unsigned char *a2, NSError **a3)
{
  id v18 = 0;
  BOOL is_legacy = security_committed_uik_is_legacy(&v18);
  id v7 = (NSError *)v18;
  id v8 = v7;
  if (!is_legacy && v7)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"deleteLegacyUIKIfMismatched", 1578, @"com.apple.MobileActivation.ErrorDomain", -1, v7, @"Failed to query legacy UIK support.");
    goto LABEL_4;
  }
  if (!is_legacy)
  {
LABEL_13:
    uint64_t v11 = 1;
    goto LABEL_14;
  }
  id v17 = v7;
  char v12 = certificatePublicKeyMatchesSystemPublicKey(2, 2, a1, (NSError **)&v17);
  id v13 = (NSError *)v17;

  if (v12)
  {
    id v8 = v13;
    goto LABEL_11;
  }
  id v16 = v13;
  char v14 = security_delete_legacy_uik(&v16);
  id v8 = (NSError *)v16;

  if (v14)
  {
LABEL_11:
    if (a2) {
      *a2 = v12 ^ 1;
    }
    goto LABEL_13;
  }
  MobileActivationError = createMobileActivationError((uint64_t)"deleteLegacyUIKIfMismatched", 1589, @"com.apple.MobileActivation.ErrorDomain", -1, v8, @"Failed to delete legacy UIK.");
LABEL_4:
  id v10 = MobileActivationError;

  if (a3)
  {
    id v8 = v10;
    uint64_t v11 = 0;
    *a3 = v8;
  }
  else
  {
    uint64_t v11 = 0;
    id v8 = v10;
  }
LABEL_14:

  return v11;
}

uint64_t ucrtHealingSupported(void *a1)
{
  id v10 = 0;
  BOOL IsEnabled = FindMyDeviceIsEnabled(&v10);
  id v3 = v10;
  id v4 = v3;
  if (IsEnabled)
  {
    id v9 = v3;
    BOOL IsHSA2 = primaryICloudAccountIsHSA2(&v9);
    id v6 = v9;

    if (IsHSA2 && !v6) {
      goto LABEL_4;
    }
  }
  else
  {
    id v6 = v3;
    if (!v3)
    {
LABEL_4:
      uint64_t v7 = 1;
      goto LABEL_9;
    }
  }
  if (a1)
  {
    id v6 = v6;
    uint64_t v7 = 0;
    *a1 = v6;
  }
  else
  {
    uint64_t v7 = 0;
  }
LABEL_9:

  return v7;
}

void __issueClientCertificateWithReferenceKey_block_invoke_3(uint64_t a1)
{
  CFErrorRef error = 0;
  id v2 = objc_alloc_init((Class)NSMutableDictionary);
  id v3 = v2;
  if (!v2)
  {
    id v18 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_3", 2979, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");
    uint64_t v19 = *(void *)(*(void *)(a1 + 80) + 8);
    unsigned __int8 v20 = *(void **)(v19 + 40);
    *(void *)(v19 + 40) = v18;

    id v12 = 0;
    id v13 = 0;
    char v14 = 0;
    double v15 = 0;
    id v16 = 0;
    id v99 = 0;
    id v100 = 0;
    id v17 = 0;
    id v8 = 0;
    goto LABEL_8;
  }
  [v2 setObject:*(void *)(a1 + 32) forKeyedSubscript:@"clientName"];
  id v4 = [*(id *)(a1 + 40) objectForKeyedSubscript:@"UseCellularBootstrapProxy"];
  id v5 = isNSNumber(v4);

  if (v5)
  {
    id v6 = [*(id *)(a1 + 40) objectForKeyedSubscript:@"UseCellularBootstrapProxy"];
    id v99 = v6;
    if (is_product_cellular() && [v6 BOOLValue])
    {
      uint64_t v7 = *(void *)(*(void *)(a1 + 80) + 8);
      v121 = *(NSError **)(v7 + 40);
      id v8 = (NSDictionary *)copyCellularProxyDictionary(1, &v121);
      objc_storeStrong((id *)(v7 + 40), v121);
      if (!v8)
      {
        id v9 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_3", 2990, @"com.apple.MobileActivation.ErrorDomain", -2, *(void **)(*(void *)(*(void *)(a1 + 80) + 8) + 40), @"Failed to query cellular network proxy info.");
        uint64_t v10 = *(void *)(*(void *)(a1 + 80) + 8);
        uint64_t v11 = *(void **)(v10 + 40);
        *(void *)(v10 + 40) = v9;

        id v12 = 0;
        id v13 = 0;
        char v14 = 0;
        double v15 = 0;
        id v16 = 0;
        id v100 = 0;
        id v17 = 0;
LABEL_8:
        LOBYTE(v21) = 0;
        goto LABEL_59;
      }
    }
    else
    {
      id v8 = 0;
    }
  }
  else
  {
    id v8 = 0;
    id v99 = 0;
  }
  id v22 = [*(id *)(a1 + 40) objectForKeyedSubscript:@"UseCellularOTAProxy"];
  id v23 = isNSNumber(v22);

  if (!v23)
  {
    id v98 = 0;
LABEL_17:
    char v96 = 0;
    goto LABEL_18;
  }
  id v24 = (NSDictionary *)[*(id *)(a1 + 40) objectForKeyedSubscript:@"UseCellularOTAProxy"];
  id v98 = v24;
  if (!is_product_cellular() || ![(NSDictionary *)v24 BOOLValue]) {
    goto LABEL_17;
  }
  uint64_t v25 = *(void *)(*(void *)(a1 + 80) + 8);
  id obj = *(id *)(v25 + 40);
  id v17 = (NSDictionary *)copyCellularProxyDictionary(0, (NSError **)&obj);
  objc_storeStrong((id *)(v25 + 40), obj);

  if (!v17)
  {
    uint64_t v44 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_3", 3003, @"com.apple.MobileActivation.ErrorDomain", -2, *(void **)(*(void *)(*(void *)(a1 + 80) + 8) + 40), @"Failed to query cellular network proxy info.");
    uint64_t v45 = *(void *)(*(void *)(a1 + 80) + 8);
    id v46 = *(void **)(v45 + 40);
    *(void *)(v45 + 40) = v44;

    id v12 = 0;
    id v13 = 0;
    char v14 = 0;
    double v15 = 0;
    id v16 = 0;
    id v100 = 0;
    goto LABEL_32;
  }
  char v96 = 1;
  id v8 = v17;
LABEL_18:
  id v26 = [*(id *)(a1 + 40) objectForKeyedSubscript:@"SOCKSProxyHost"];
  id v27 = isNSString(v26);
  if (!v27)
  {
LABEL_21:

    goto LABEL_23;
  }
  uint64_t v28 = v27;
  uint64_t v29 = v3;
  char v30 = v8;
  id v31 = [*(id *)(a1 + 40) objectForKeyedSubscript:@"SOCKSProxyPort"];
  id v32 = isNSNumber(v31);

  if (v32)
  {
    v125[0] = @"SOCKSProxyHost";
    id v26 = [*(id *)(a1 + 40) objectForKeyedSubscript:@"SOCKSProxyHost"];
    v126[0] = v26;
    v125[1] = @"SOCKSProxyPort";
    id v33 = [*(id *)(a1 + 40) objectForKeyedSubscript:@"SOCKSProxyPort"];
    v126[1] = v33;
    id v8 = +[NSDictionary dictionaryWithObjects:v126 forKeys:v125 count:2];

    id v3 = v29;
    goto LABEL_21;
  }
  id v8 = v30;
  id v3 = v29;
LABEL_23:
  if (!is_internal_build())
  {
    id v100 = 0;
    goto LABEL_34;
  }
  id v34 = objc_alloc((Class)NSUserDefaults);
  id v35 = [v34 persistentDomainForName:@"com.apple.mobileactivationd"];

  id v36 = [v35 objectForKeyedSubscript:@"UseReverseProxy"];
  id v37 = isNSNumber(v36);
  id v100 = v35;
  if (!v37)
  {

    goto LABEL_34;
  }
  id v38 = v37;
  id v17 = v8;
  id v39 = [v35 objectForKeyedSubscript:@"UseReverseProxy"];
  unsigned int v40 = [v39 BOOLValue];

  if (!v40)
  {
    id v8 = v17;
    goto LABEL_34;
  }
  if (!v17)
  {
    id v8 = (NSDictionary *)copyReverseProxyDictionary(0, 0, 0);
LABEL_34:
    id v97 = v8;
    id v47 = [*(id *)(a1 + 40) objectForKeyedSubscript:@"SigningKeyAttributes"];
    id v48 = isNSDictionary(v47);
    if (v48)
    {
      id v49 = v48;
      id v50 = [*(id *)(a1 + 40) objectForKeyedSubscript:@"SigningKeyAttributes"];
      uint64_t v51 = kSecUseSystemKeychain;
      id v52 = [v50 objectForKeyedSubscript:kSecUseSystemKeychain];
      id v53 = isNSNumber(v52);

      if (!v53)
      {
        id v55 = 0;
LABEL_40:
        SecAccessControlRef v56 = SecAccessControlCreateWithFlags(0, kSecAttrAccessibleAlwaysThisDeviceOnlyPrivate, 0x40000000uLL, &error);
        if (!v56)
        {
          id v69 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_3", 3035, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to create access control.");
          uint64_t v70 = *(void *)(*(void *)(a1 + 80) + 8);
          id v71 = *(void **)(v70 + 40);
          *(void *)(v70 + 40) = v69;

          id v12 = 0;
          id v13 = 0;
          char v14 = 0;
          double v15 = 0;
          id v16 = 0;
          LOBYTE(v21) = 0;
LABEL_57:
          id v17 = v97;
          goto LABEL_58;
        }
        SecAccessControlRef v57 = v56;
        v123[0] = kSecAttrIsPermanent;
        v123[1] = kSecAttrTokenID;
        v124[0] = &__kCFBooleanFalse;
        v124[1] = kSecAttrTokenIDAppleKeyStore;
        v123[2] = kSecAttrTokenOID;
        v123[3] = kSecAttrAccessControl;
        v124[2] = *(void *)(a1 + 48);
        v124[3] = v56;
        v123[4] = kSecUseSystemKeychain;
        id v58 = +[NSNumber numberWithBool:v55];
        v124[4] = v58;
        double v15 = +[NSDictionary dictionaryWithObjects:v124 forKeys:v123 count:5];

        id v59 = SecKeyCreateWithData((CFDataRef)+[NSData data], (CFDictionaryRef)v15, &error);
        if (!v59)
        {
          uint64_t v72 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_3", 3050, @"com.apple.MobileActivation.ErrorDomain", -2, error, @"Failed to convert RK data blob.");
          uint64_t v73 = *(void *)(*(void *)(a1 + 80) + 8);
          char v74 = *(void **)(v73 + 40);
          *(void *)(v73 + 40) = v72;

          id v12 = 0;
          id v13 = 0;
          char v14 = 0;
          id v16 = 0;
          LOBYTE(v21) = 0;
LABEL_56:
          CFRelease(v57);
          goto LABEL_57;
        }
        id v60 = v59;
        id v61 = *(void **)(a1 + 40);
        uint64_t v62 = *(void *)(*(void *)(a1 + 80) + 8);
        id v119 = *(id *)(v62 + 40);
        id v13 = create_baa_info(v59, v61, &v119);
        objc_storeStrong((id *)(v62 + 40), v119);
        if (v13)
        {
          uint64_t v63 = *(void *)(*(void *)(a1 + 80) + 8);
          id v117 = *(id *)(v63 + 40);
          id v118 = 0;
          char v64 = createXMLRequest(v13, &v118, (NSError **)&v117);
          id v12 = v118;
          objc_storeStrong((id *)(v63 + 40), v117);
          if (v64)
          {
            id v65 = +[GestaltHlpr getSharedInstance];
            id v16 = [v65 copyAnswer:@"UniqueDeviceID"];

            dispatch_queue_global_t v21 = (dispatch_queue_global_t)isNSString(v16);
            if (!v21)
            {
              uint64_t v75 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_3", 3067, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query %@.", @"UniqueDeviceID");
              char v14 = 0;
              goto LABEL_54;
            }
            unsigned __int8 v66 = +[NSString stringWithFormat:@"%@ - %@", @"iOS Device Activator (MobileActivation-1015.60.1)", *(void *)(a1 + 32)];
            char v14 = v66;
            int v67 = *(_DWORD *)(a1 + 96);
            if (v67 == 1)
            {
              CFStringRef v68 = @" (DCRT)";
            }
            else
            {
              if (v67 != 3)
              {
LABEL_70:
                if (v14)
                {
                  id v95 = v60;
                  [v12 setValue:v14 forHTTPHeaderField:@"User-Agent"];
                  [v12 setValue:v16 forHTTPHeaderField:@"x-jmet-deviceid"];
                  BOOL v81 = is_virtual_machine();
                  CFStringRef v82 = &VMBAA_URL;
                  if (!v81) {
                    CFStringRef v82 = &BAA_URL;
                  }
                  uint64_t v83 = +[NSURL URLWithString:*v82];
                  [v12 setURL:v83];

                  id v84 = *(void **)(a1 + 56);
                  if (v84)
                  {
                    [v84 doubleValue];
                    [v12 setTimeoutInterval:];
                  }
                  id v85 = v100;
                  if (is_internal_build())
                  {
                    id v86 = [v100 objectForKeyedSubscript:];
                    id v87 = isNSString(v86);

                    id v88 = v86;
                    id v85 = v100;

                    if (v87)
                    {
                      id v94 = [v100 objectForKeyedSubscript:@"BAAOverrideURL"];
                      uint64_t v89 = +[NSURL URLWithString:v94];
                      [v12 setURL:v89];
                    }
                  }
                  dispatch_queue_global_t v21 = dispatch_get_global_queue(0, 0);
                  block[0] = _NSConcreteStackBlock;
                  block[1] = 3254779904;
                  block[2] = __issueClientCertificateWithReferenceKey_block_invoke_4;
                  block[3] = &__block_descriptor_128_e8_32s40s48s56s64s72s80s88s96bs104r112r_e5_v8__0l;
                  int v113 = *(_DWORD *)(a1 + 96);
                  id v90 = *(id *)(a1 + 32);
                  uint64_t v91 = *(void *)(a1 + 80);
                  id v102 = v90;
                  uint64_t v111 = v91;
                  id v12 = v12;
                  id v103 = v12;
                  id v104 = v99;
                  id v105 = v98;
                  char v114 = v96;
                  id v106 = v97;
                  char v115 = *(unsigned char *)(a1 + 100);
                  id v107 = v85;
                  __int16 v116 = *(_WORD *)(a1 + 101);
                  id v108 = *(id *)(a1 + 64);
                  id v92 = v3;
                  uint64_t v93 = *(void *)(a1 + 88);
                  id v109 = v92;
                  uint64_t v112 = v93;
                  id v110 = *(id *)(a1 + 72);
                  dispatch_async(v21, block);

                  LOBYTE(v21) = 1;
                  uint64_t v77 = v102;
                  id v60 = v95;
                  goto LABEL_55;
                }
                uint64_t v75 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_3", 3083, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create user agent string.");
                goto LABEL_53;
              }
              CFStringRef v68 = @" (SDCRT)";
            }
            id v80 = [(NSString *)v66 stringByAppendingString:v68];

            char v14 = v80;
            goto LABEL_70;
          }
          uint64_t v75 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_3", 3061, @"com.apple.MobileActivation.ErrorDomain", -1, *(void **)(*(void *)(*(void *)(a1 + 80) + 8) + 40), @"Failed to create XML request.");
        }
        else
        {
          uint64_t v75 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_3", 3056, @"com.apple.MobileActivation.ErrorDomain", -1, *(void **)(*(void *)(*(void *)(a1 + 80) + 8) + 40), @"Failed to create BAA info.");
          id v12 = 0;
        }
        char v14 = 0;
        id v16 = 0;
LABEL_53:
        LOBYTE(v21) = 0;
LABEL_54:
        uint64_t v76 = *(void *)(*(void *)(a1 + 80) + 8);
        uint64_t v77 = *(void **)(v76 + 40);
        *(void *)(v76 + 40) = v75;
LABEL_55:

        CFRelease(v60);
        goto LABEL_56;
      }
      id v47 = [*(id *)(a1 + 40) objectForKeyedSubscript:@"SigningKeyAttributes"];
      id v54 = [v47 objectForKeyedSubscript:v51];
      id v55 = [v54 BOOLValue];
    }
    else
    {
      id v55 = 0;
    }

    goto LABEL_40;
  }
  id v41 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_3", 3019, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Cannot set both '%@' override and '%@'/'%@' option.", @"UseReverseProxy", @"UseCellularBootstrapProxy", @"UseCellularOTAProxy");
  uint64_t v42 = *(void *)(*(void *)(a1 + 80) + 8);
  uint64_t v43 = *(void **)(v42 + 40);
  *(void *)(v42 + 40) = v41;

  id v12 = 0;
  id v13 = 0;
  char v14 = 0;
  double v15 = 0;
  id v16 = 0;
LABEL_32:
  LOBYTE(v21) = 0;
LABEL_58:
  id v8 = v98;
LABEL_59:
  if (error) {
    CFRelease(error);
  }
  CFErrorRef error = 0;
  if ((v21 & 1) == 0)
  {
    if ((mobileactivationErrorHasDomainAndErrorCode(*(void **)(*(void *)(*(void *)(a1 + 80) + 8) + 40), @"com.apple.MobileActivation.ErrorDomain", (id)0xFFFFFFFFFFFFFFFDLL) & 1) == 0)writeSplunkLog(*(void **)(a1 + 64), 17, -1, (uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3354, v3, @"%@", v78, *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40)); {
    uint64_t v79 = *(void *)(a1 + 72);
    }
    if (v79) {
      (*(void (**)(uint64_t, void, void))(v79 + 16))(v79, 0, *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40));
    }
  }
}

void __issueClientCertificateWithReferenceKey_block_invoke_4(uint64_t a1)
{
  uint64_t v171 = 0;
  uint64_t v2 = *(unsigned int *)(a1 + 120);
  uint64_t v3 = v2;
  if (v2 > 3) {
    goto LABEL_37;
  }
  id v4 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", off_100265908[(int)v2], *(void *)(a1 + 32));
  if (!v4)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 120);
LABEL_37:
    uint64_t v45 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_4", 3144, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid certificate type: %d", v3);
    uint64_t v46 = *(void *)(*(void *)(a1 + 104) + 8);
    id v47 = *(void **)(v46 + 40);
    *(void *)(v46 + 40) = v45;

    id v41 = 0;
    uint64_t v42 = 0;
    id v43 = 0;
    uint64_t v44 = 0;
    id v150 = 0;
    CFTypeRef cf = 0;
    id v7 = 0;
LABEL_38:
    uint64_t v36 = 0;
    uint64_t v152 = 0;
    id v24 = 0;
    id v23 = 0;
    id v33 = 0;
    goto LABEL_39;
  }
  id v5 = v4;
  id v6 = copy_log_directory_path();
  id v7 = [v6 stringByAppendingPathComponent:v5];

  if (!v7)
  {
    uint64_t v62 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke_4", 3150, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create log filename.");
    uint64_t v63 = *(void *)(*(void *)(a1 + 104) + 8);
    char v64 = *(void **)(v63 + 40);
    *(void *)(v63 + 40) = v62;

    id v41 = 0;
    uint64_t v42 = 0;
    id v43 = 0;
    uint64_t v44 = 0;
    id v150 = 0;
    CFTypeRef cf = 0;
    goto LABEL_38;
  }
  if (is_internal_build() || (*(_DWORD *)(a1 + 120) - 1) <= 2)
  {
    id v8 = formatURLRequest(*(void **)(a1 + 40));
    id v9 = [v7 stringByAppendingString:@"_request.txt"];
    [(NSMutableString *)v8 writeToFile:v9 atomically:0 encoding:4 error:0];
  }
  id v147 = v7;
  if (is_product_cellular())
  {
    if ([*(id *)(a1 + 48) BOOLValue])
    {
      uint64_t v10 = +[MATelephonyInfo sharedInstance];
      uint64_t v11 = *(void *)(*(void *)(a1 + 104) + 8);
      id v170 = *(id *)(v11 + 40);
      unsigned __int8 v12 = [(MATelephonyInfo *)v10 setCellularBootstrapAssertion:1 withError:&v170];
      objc_storeStrong((id *)(v11 + 40), v170);

      if ((v12 & 1) == 0)
      {
        id v13 = copyLoggingHandle();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_FAULT)) {
          __issueClientCertificateWithReferenceKey_block_invoke_4_cold_4();
        }
      }
    }
    if ([*(id *)(a1 + 56) BOOLValue])
    {
      char v14 = +[MATelephonyInfo sharedInstance];
      uint64_t v15 = *(void *)(*(void *)(a1 + 104) + 8);
      id v169 = *(id *)(v15 + 40);
      unsigned __int8 v16 = [(MATelephonyInfo *)v14 setOTAActivationAssertion:1 withError:&v169];
      objc_storeStrong((id *)(v15 + 40), v169);

      if ((v16 & 1) == 0)
      {
        id v17 = copyLoggingHandle();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_FAULT)) {
          __issueClientCertificateWithReferenceKey_block_invoke_4_cold_3();
        }
      }
    }
  }
  uint64_t v18 = a1 + 104;
  uint64_t v19 = *(void **)(a1 + 40);
  int v20 = *(unsigned __int8 *)(a1 + 124);
  dispatch_queue_global_t v21 = *(void **)(a1 + 64);
  uint64_t v22 = *(void *)(*(void *)(a1 + 104) + 8);
  id v167 = *(id *)(v22 + 40);
  id v168 = 0;
  id v23 = talkToServerWithError(v19, 0, v20, v21, &v168, &v171, &v167);
  id v24 = v168;
  objc_storeStrong((id *)(v22 + 40), v167);
  if (is_product_cellular())
  {
    if ([*(id *)(a1 + 48) BOOLValue])
    {
      uint64_t v25 = +[MATelephonyInfo sharedInstance];
      uint64_t v26 = *(void *)(*(void *)v18 + 8);
      id v166 = *(id *)(v26 + 40);
      unsigned __int8 v27 = [(MATelephonyInfo *)v25 setCellularBootstrapAssertion:0 withError:&v166];
      objc_storeStrong((id *)(v26 + 40), v166);

      if ((v27 & 1) == 0)
      {
        uint64_t v28 = copyLoggingHandle();
        if (os_log_type_enabled(v28, OS_LOG_TYPE_FAULT)) {
          __issueClientCertificateWithReferenceKey_block_invoke_4_cold_2();
        }
      }
    }
    if ([*(id *)(a1 + 56) BOOLValue])
    {
      uint64_t v29 = +[MATelephonyInfo sharedInstance];
      uint64_t v30 = *(void *)(*(void *)v18 + 8);
      id v165 = *(id *)(v30 + 40);
      unsigned __int8 v31 = [(MATelephonyInfo *)v29 setOTAActivationAssertion:0 withError:&v165];
      objc_storeStrong((id *)(v30 + 40), v165);

      if ((v31 & 1) == 0)
      {
        id v32 = copyLoggingHandle();
        if (os_log_type_enabled(v32, OS_LOG_TYPE_FAULT)) {
          __issueClientCertificateWithReferenceKey_block_invoke_4_cold_1();
        }
      }
    }
  }
  id v33 = v147;
  if (is_internal_build() || (*(_DWORD *)(a1 + 120) - 1) <= 2)
  {
    id v34 = formatURLResponse(v23, v171, v24);
    id v35 = [v147 stringByAppendingString:@"_response.txt"];
    [(NSMutableString *)v34 writeToFile:v35 atomically:0 encoding:4 error:0];
  }
  uint64_t v36 = v171;
  if (v171 == 400)
  {
    uint64_t v65 = -6;
    long long v146 = v23;
    unsigned __int8 v66 = v24;
    if (!*(unsigned char *)(a1 + 125))
    {
      id v92 = lockcrypto_decode_error(v23, 0);
      unsigned int v93 = [v92 isEqualToString:@"29:ECC signature verification failed: signature incorrect."];

      if (v93) {
        uint64_t v65 = -16;
      }
      uint64_t v153 = v65;
      uint64_t v36 = v171;
      goto LABEL_67;
    }
    uint64_t v36 = 400;
LABEL_66:
    uint64_t v153 = -6;
LABEL_67:
    uint64_t v77 = *(void **)(*(void *)(*(void *)v18 + 8) + 40);
    uint64_t v78 = +[NSHTTPURLResponse localizedStringForStatusCode:v36];
    id v79 = [v66 objectForKeyedSubscript:@"HUMBUG_XHEADER_STATUS"];
    id v80 = lockcrypto_decode_error(v146, 0);
    BOOL v81 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3206, @"com.apple.MobileActivation.ServerErrorDomain", v36, v77, @"Server error: %ld (%@) // %@ (%@)", v36, v78, v79, v80);

    uint64_t v82 = v171;
    uint64_t v83 = +[NSHTTPURLResponse localizedStringForStatusCode:v171];
    id v84 = v66;
    id v85 = [v66 objectForKeyedSubscript:@"HUMBUG_XHEADER_STATUS"];
    id v86 = lockcrypto_decode_error(v146, 0);
    id v87 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3206, @"com.apple.MobileActivation.ErrorDomain", v153, v81, @"Server error: %ld (%@) // %@ (%@)", v82, v83, v85, v86);

    id v88 = v85;
    id v23 = v146;

    uint64_t v89 = v83;
    id v24 = v84;

    uint64_t v90 = *(void *)(*(void *)(a1 + 104) + 8);
    uint64_t v91 = *(void **)(v90 + 40);
    *(void *)(v90 + 40) = v87;

    id v41 = 0;
    uint64_t v42 = 0;
    id v43 = 0;
    uint64_t v44 = 0;
    id v150 = 0;
    CFTypeRef cf = 0;
    id v7 = 0;
    uint64_t v36 = 0;
    uint64_t v152 = 0;
    id v33 = v147;
    goto LABEL_39;
  }
  if (v171 != 200)
  {
    if (!v171)
    {
      id v37 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3187, @"com.apple.MobileActivation.ErrorDomain", -6, *(void **)(*(void *)(*(void *)v18 + 8) + 40), @"Network communication error.");
      uint64_t v38 = *(void *)(*(void *)v18 + 8);
      id v39 = *(void **)(v38 + 40);
      *(void *)(v38 + 40) = v37;

      id v41 = 0;
      uint64_t v42 = 0;
      id v43 = 0;
      uint64_t v44 = 0;
      id v150 = 0;
      CFTypeRef cf = 0;
      id v7 = 0;
LABEL_76:
      uint64_t v152 = 0;
      goto LABEL_39;
    }
    long long v146 = v23;
    unsigned __int8 v66 = v24;
    goto LABEL_66;
  }
  if (!v23)
  {
    id v94 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3211, @"com.apple.MobileActivation.ErrorDomain", -6, *(void **)(*(void *)(*(void *)v18 + 8) + 40), @"Failed to retrieve client certificate.");
    uint64_t v95 = *(void *)(*(void *)v18 + 8);
    char v96 = *(void **)(v95 + 40);
    *(void *)(v95 + 40) = v94;

    id v41 = 0;
    uint64_t v42 = 0;
    id v43 = 0;
LABEL_75:
    uint64_t v44 = 0;
    id v150 = 0;
    CFTypeRef cf = 0;
    id v7 = 0;
    uint64_t v36 = 0;
    goto LABEL_76;
  }
  id v43 = [v24 objectForKeyedSubscript:@"Date"];
  if (!v43)
  {
    id v97 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3217, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve server response date.");
    uint64_t v98 = *(void *)(*(void *)v18 + 8);
    id v99 = *(void **)(v98 + 40);
    *(void *)(v98 + 40) = v97;

    id v41 = 0;
LABEL_74:
    uint64_t v42 = 0;
    goto LABEL_75;
  }
  int v67 = (uint64_t *)(a1 + 104);
  id v68 = objc_alloc_init((Class)NSDateFormatter);
  id v41 = v68;
  if (!v68)
  {
    id v100 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3223, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate date formatter.");
    uint64_t v101 = *(void *)(*v67 + 8);
    id v102 = *(void **)(v101 + 40);
    *(void *)(v101 + 40) = v100;

    goto LABEL_74;
  }
  uint64_t v69 = *(void *)(*v67 + 8);
  id obj = *(id *)(v69 + 40);
  id v70 = [v68 dateFromServerString:v43 withError:&obj];
  id v71 = (id *)(v69 + 40);
  uint64_t v42 = v70;
  objc_storeStrong(v71, obj);
  if (!v42)
  {
    id v107 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3229, @"com.apple.MobileActivation.ErrorDomain", -1, *(void **)(*(void *)(*v67 + 8) + 40), @"Failed to convert date string.");
    uint64_t v108 = *(void *)(*v67 + 8);
    id v109 = *(void **)(v108 + 40);
    *(void *)(v108 + 40) = v107;

    goto LABEL_75;
  }
  id v145 = v42;
  uint64_t v72 = *(void *)(*v67 + 8);
  id v163 = *(id *)(v72 + 40);
  uint64_t v36 = (uint64_t)lockcrypto_decode_pems(v23, "CERTIFICATE", (NSError **)&v163);
  objc_storeStrong((id *)(v72 + 40), v163);
  if (!v36 || [(id)v36 count] != (id)2)
  {
    id v103 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3235, @"com.apple.MobileActivation.ErrorDomain", -1, *(void **)(*(void *)(*v67 + 8) + 40), @"Failed to decode certificates.");
    uint64_t v104 = *v67;
LABEL_78:
    uint64_t v105 = *(void *)(v104 + 8);
    id v106 = *(void **)(v105 + 40);
    *(void *)(v105 + 40) = v103;

    uint64_t v44 = 0;
    id v150 = 0;
    CFTypeRef cf = 0;
    id v7 = 0;
    uint64_t v152 = 0;
    uint64_t v42 = v145;
    goto LABEL_39;
  }
  id v144 = (void *)v36;
  if (is_internal_build())
  {
    id v73 = [*(id *)(a1 + 72) objectForKeyedSubscript:@"UseQACertificates"];
    id v74 = isNSNumber(v73);

    if (v74)
    {
      id v75 = [*(id *)(a1 + 72) objectForKeyedSubscript:@"UseQACertificates"];
      int v76 = [v75 BOOLValue];
    }
    else
    {
      int v76 = 0;
    }
    uint64_t v36 = (uint64_t)v144;
  }
  else
  {
    int v76 = 0;
  }
  if (*(unsigned char *)(a1 + 126))
  {
    if (is_virtual_machine())
    {
      id v103 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3247, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Certificate type (%d) is not supported on virtual machines.", *(unsigned int *)(a1 + 120));
      uint64_t v104 = *(void *)(a1 + 104);
      goto LABEL_78;
    }
    uint64_t v114 = 3;
  }
  else
  {
    int v110 = *(unsigned __int8 *)(a1 + 127);
    BOOL v111 = is_virtual_machine();
    if (v110)
    {
      if (v111)
      {
        uint64_t v112 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3254, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Certificate type (%d) is not supported on virtual machines.", *(unsigned int *)(a1 + 120));
        uint64_t v113 = *(void *)(a1 + 104);
LABEL_104:
        uint64_t v127 = *(void *)(v113 + 8);
        v128 = *(void **)(v127 + 40);
        *(void *)(v127 + 40) = v112;

        uint64_t v44 = 0;
        id v150 = 0;
        CFTypeRef cf = 0;
        id v7 = 0;
LABEL_106:
        uint64_t v152 = 0;
        uint64_t v36 = (uint64_t)v144;
        uint64_t v42 = v145;
        goto LABEL_39;
      }
      uint64_t v114 = 5;
    }
    else if (v111)
    {
      uint64_t v114 = 4;
    }
    else if (*(unsigned char *)(a1 + 125))
    {
      uint64_t v114 = 2;
    }
    else
    {
      uint64_t v114 = 1;
    }
  }
  uint64_t v115 = *(void *)(*v67 + 8);
  id v162 = *(id *)(v115 + 40);
  id v116 = copyRootCertificate(v114, v76, (NSError **)&v162);
  objc_storeStrong((id *)(v115 + 40), v162);
  if (!v116)
  {
    uint64_t v112 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3269, @"com.apple.MobileActivation.ErrorDomain", -1, *(void **)(*(void *)(*v67 + 8) + 40), @"Failed to load BAA root CA certificate.");
    uint64_t v113 = *v67;
    goto LABEL_104;
  }
  uint64_t v117 = *(void *)(*v67 + 8);
  id v161 = *(id *)(v117 + 40);
  id v149 = lockcrypto_cert_from_pem_data(v116, (NSError **)&v161);
  objc_storeStrong((id *)(v117 + 40), v161);
  id v7 = v116;
  if (!v149)
  {
    id v129 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3275, @"com.apple.MobileActivation.ErrorDomain", -1, *(void **)(*(void *)(*v67 + 8) + 40), @"Failed to create certificate from pem data.");
    uint64_t v130 = *(void *)(*v67 + 8);
    uint64_t v131 = *(void **)(v130 + 40);
    *(void *)(v130 + 40) = v129;

    uint64_t v44 = 0;
    id v150 = 0;
    CFTypeRef cf = 0;
    goto LABEL_106;
  }
  id v143 = v116;
  uint64_t v36 = (uint64_t)v144;
  CFDataRef v118 = (const __CFData *)[v144 objectAtIndexedSubscript:0];
  SecCertificateRef v119 = SecCertificateCreateWithData(kCFAllocatorDefault, v118);

  CFTypeRef cf = v119;
  if (!v119)
  {
    v132 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3281, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create certificate.");
    uint64_t v133 = *(void *)(*v67 + 8);
    BOOL v134 = *(void **)(v133 + 40);
    *(void *)(v133 + 40) = v132;

    CFTypeRef cf = 0;
LABEL_109:
    id v150 = 0;
    uint64_t v152 = 0;
    uint64_t v42 = v145;
    id v7 = v143;
    goto LABEL_114;
  }
  CFDataRef v120 = (const __CFData *)[v144 objectAtIndexedSubscript:1];
  SecCertificateRef v121 = SecCertificateCreateWithData(kCFAllocatorDefault, v120);

  if (!v121)
  {
    unint64_t v135 = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3287, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create certificate.");
    uint64_t v136 = *(void *)(*v67 + 8);
    id v137 = *(void **)(v136 + 40);
    *(void *)(v136 + 40) = v135;

    goto LABEL_109;
  }
  v122 = v121;
  uint64_t v123 = *(void *)(*(void *)(a1 + 104) + 8);
  char v154 = (id *)(v123 + 40);
  id v7 = v143;
  id v150 = v122;
  BOOL v124 = *(unsigned __int8 *)(a1 + 125) != 0;
  if (*(unsigned char *)(a1 + 126))
  {
    id v160 = *(id *)(v123 + 40);
    char v125 = evaluateAccessoryTrustWithCerts(cf, v122, v149, v124, 1, v145, &v160);
    objc_storeStrong(v154, v160);
    if ((v125 & 1) == 0)
    {
      MobileActivationError = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3295, @"com.apple.MobileActivation.ErrorDomain", -1, *(void **)(*(void *)(*v67 + 8) + 40), @"Failed to verify MFi certificate.");
LABEL_113:
      unint64_t v140 = MobileActivationError;
      uint64_t v141 = *(void *)(*v67 + 8);
      uint64_t v142 = *(void **)(v141 + 40);
      *(void *)(v141 + 40) = v140;

      uint64_t v152 = 0;
      uint64_t v42 = v145;
      goto LABEL_114;
    }
  }
  else
  {
    id v159 = *(id *)(v123 + 40);
    char v138 = evaluateBAATrustWithCerts(cf, v122, v149, v124, 1, v145, &v159);
    objc_storeStrong(v154, v159);
    if ((v138 & 1) == 0)
    {
      MobileActivationError = createMobileActivationError((uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3300, @"com.apple.MobileActivation.ErrorDomain", -1, *(void **)(*(void *)(*v67 + 8) + 40), @"Failed to verify BAA certificate.");
      goto LABEL_113;
    }
  }
  v173[0] = v144;
  v172[0] = @"RKCertification";
  v172[1] = @"ServerResponseCode";
  long long v139 = +[NSNumber numberWithInteger:v171];
  v172[2] = @"ServerResponseDate";
  uint64_t v42 = v145;
  v173[1] = v139;
  v173[2] = v145;
  uint64_t v152 = +[NSDictionary dictionaryWithObjects:v173 forKeys:v172 count:3];

LABEL_114:
  uint64_t v44 = v149;
LABEL_39:
  if (*(void *)(*(void *)(*(void *)(a1 + 104) + 8) + 40)) {
    BOOL v48 = v171 == 0;
  }
  else {
    BOOL v48 = 1;
  }
  if (!v48)
  {
    writeSplunkLog(*(void **)(a1 + 80), 17, v171, (uint64_t)"issueClientCertificateWithReferenceKey_block_invoke", 3312, *(void **)(a1 + 88), @"%@", v40, *(void *)(*(void *)(*(void *)(a1 + 104) + 8) + 40));
    *(void *)id v148 = v44;
    id v49 = v7;
    uint64_t v50 = v36;
    uint64_t v51 = v42;
    id v52 = v41;
    id v53 = v43;
    id v54 = v23;
    id v55 = v24;
    SecAccessControlRef v56 = v33;
    SecAccessControlRef v57 = copyMobileActivationSerialQueue();
    block[0] = _NSConcreteStackBlock;
    block[1] = 3254779904;
    block[2] = __issueClientCertificateWithReferenceKey_block_invoke_2;
    block[3] = &__block_descriptor_56_e8_32s40r48r_e5_v8__0l;
    uint64_t v157 = *(void *)(a1 + 112);
    id v58 = *(id *)(a1 + 80);
    uint64_t v59 = *(void *)(a1 + 104);
    id v156 = v58;
    uint64_t v158 = v59;
    dispatch_async(v57, block);
    id v60 = v57;
    id v33 = v56;
    id v24 = v55;
    id v23 = v54;
    id v43 = v53;
    id v41 = v52;
    uint64_t v42 = v51;
    uint64_t v36 = v50;
    id v7 = v49;
    uint64_t v44 = *(__SecCertificate **)v148;
  }
  uint64_t v61 = *(void *)(a1 + 96);
  if (v61) {
    (*(void (**)(uint64_t, NSDictionary *, void))(v61 + 16))(v61, v152, *(void *)(*(void *)(*(void *)(a1 + 104) + 8) + 40));
  }
  if (v44) {
    CFRelease(v44);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v150) {
    CFRelease(v150);
  }
}

void __issueClientCertificateWithReferenceKey_block_invoke_2(uint64_t a1)
{
  id v2 = data_ark_copy(*(void **)(a1 + 32), 0, @"UCRTHealingRequired");
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  id v5 = isNSNumber(*(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
  if (!v5)
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
    id v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = &__kCFBooleanFalse;
  }
  if (mobileactivationErrorHasDomainAndErrorCode(*(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40), @"com.apple.MobileActivation.ErrorDomain", (id)0xFFFFFFFFFFFFFFF0)&& ([*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) BOOLValue] & 1) == 0)
  {
    data_ark_remove(*(void **)(a1 + 32), 0, @"UCRTOOBRetryAttempt");
    data_ark_set(*(void **)(a1 + 32), 0, @"UCRTHealingRequired", &__kCFBooleanTrue, 1);
    id v8 = copyLoggingHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Scheduled UCRT OOB to attempt mismatch recovery.", v9, 2u);
    }

    scheduleXPCActivity(*(void **)(a1 + 32), (const char *)[@"com.apple.mobileactivationd.UCRT.OOB" UTF8String], 5u, 1, 0x3000u, 0x1000u, &__block_literal_global_310);
  }
}

void __issueClientCertificateWithReferenceKey_block_invoke_308(id a1, DataArk *a2)
{
}

void __copy_helper_block_e8_32s40s48s56s64s72s80s88s96b104r112r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  id v8 = *(id *)(a2 + 64);
  id v9 = *(id *)(a2 + 72);
  id v10 = *(id *)(a2 + 80);
  id v11 = *(id *)(a2 + 88);
  _Block_object_assign((void *)(a1 + 96), *(const void **)(a2 + 96), 7);
  _Block_object_assign((void *)(a1 + 104), *(const void **)(a2 + 104), 8);
  unsigned __int8 v12 = *(const void **)(a2 + 112);

  _Block_object_assign((void *)(a1 + 112), v12, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64s72s80s88s96s104r112r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 112), 8);
  _Block_object_dispose(*(const void **)(a1 + 104), 8);

  id v2 = *(void **)(a1 + 32);
}

void __copy_helper_block_e8_32s40s48s56s64s72b80r88r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  id v8 = *(id *)(a2 + 64);
  _Block_object_assign((void *)(a1 + 72), *(const void **)(a2 + 72), 7);
  _Block_object_assign((void *)(a1 + 80), *(const void **)(a2 + 80), 8);
  id v9 = *(const void **)(a2 + 88);

  _Block_object_assign((void *)(a1 + 88), v9, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64s72s80r88r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 88), 8);
  _Block_object_dispose(*(const void **)(a1 + 80), 8);

  id v2 = *(void **)(a1 + 32);
}

void __copy_helper_block_e8_32s40s48s56s64b(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  id v8 = *(const void **)(a2 + 64);

  _Block_object_assign((void *)(a1 + 64), v8, 7);
}

void __destroy_helper_block_e8_32s40s48s56s64s(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
}

uint64_t dcrtOOBAlreadyPerformed(void *a1, int a2, uint64_t a3)
{
  id v6 = @"DCRTOOBForbidden";
  id v7 = a1;
  id v8 = objc_alloc_init((Class)NSMutableDictionary);
  if (a2)
  {
    id v9 = @"SDCRTOOBForbidden";

    [v8 setObject:&__kCFBooleanTrue forKeyedSubscript:@"sdcrtAttestation"];
    id v6 = v9;
  }
  id v10 = +[NSNumber numberWithBool:a3];
  [v8 setObject:v10 forKeyedSubscript:@"CanonicalizeDcrtOIDs"];

  id v11 = data_ark_copy(v7, 0, v6);
  id v12 = copyDCRT(v7, 0, 0, v8, 0);

  if (v12)
  {
    unsigned int v13 = 0;
  }
  else
  {
    id v14 = isNSNumber(v11);
    if (v14) {
      unsigned int v13 = [v11 BOOLValue] ^ 1;
    }
    else {
      unsigned int v13 = 1;
    }
  }
  return v13 ^ 1;
}

uint64_t ucrtOOBAlreadyPerformed(void *a1)
{
  id v1 = a1;
  id v2 = data_ark_copy(v1, 0, @"UCRTOOBForbidden");
  SecCertificateRef v3 = copyUCRT(v1, 0);

  if (v3)
  {
    CFRelease(v3);
    unsigned int v4 = 0;
  }
  else
  {
    id v5 = isNSNumber(v2);
    if (v5) {
      unsigned int v4 = [v2 BOOLValue] ^ 1;
    }
    else {
      unsigned int v4 = 1;
    }
  }
  return v4 ^ 1;
}

void handle_deactivate(void *a1, int a2)
{
  id v3 = a1;
  if (a2)
  {
    id v4 = copy_activation_records_directory_path();
    delete_an_item(v4);

    id v5 = copy_uik_path();
    delete_an_item(v5);

    id v6 = copy_regulatory_images_directory_path();
    id v7 = [v6 stringByAppendingPathComponent:@"regulatory_images.plist"];
    delete_an_item(v7);

    CFStringRef v22 = @"UseSystemKeychainSharediPadOnly";
    id v23 = &__kCFBooleanTrue;
    id v8 = +[NSDictionary dictionaryWithObjects:&v23 forKeys:&v22 count:1];
    id v21 = 0;
    char v9 = delete_identity(@"lockdown-identities", @"com.apple.lockdown.identity.activation", v8, (NSError **)&v21);
    id v10 = v21;
    if ((v9 & 1) == 0) {
      maLog((uint64_t)"handle_deactivate", 0, @"Failed to delete device identity: %@", v10);
    }
    id v11 = copy_ucrt_path();
    delete_an_item(v11);

    id v20 = v10;
    char v12 = libaks_system_key_operate(2, 1, (NSError **)&v20);
    id v13 = v20;

    if ((v12 & 1) == 0)
    {
      id v14 = copyLoggingHandle();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT)) {
        handle_deactivate_cold_2();
      }
    }
    id v19 = v13;
    char v15 = libaks_system_key_operate(2, 2, (NSError **)&v19);
    id v16 = v19;

    if ((v15 & 1) == 0)
    {
      id v17 = copyLoggingHandle();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_FAULT)) {
        handle_deactivate_cold_1();
      }
    }
    data_ark_remove(v3, 0, @"UCRTOOBForbidden");
    data_ark_remove(v3, 0, @"UCRTOOBForbiddenCount");
    data_ark_remove(v3, 0, @"DCRTOOBForbidden");
    data_ark_remove(v3, 0, @"DCRTOOBForbiddenCount");
    data_ark_remove(v3, 0, @"SDCRTOOBForbidden");
    data_ark_remove(v3, 0, @"SDCRTOOBForbiddenCount");
    data_ark_remove(v3, 0, @"UCRTHealingRequired");
    data_ark_remove(v3, 0, @"UCRTUpgradeRequired");
    data_ark_remove(v3, 0, @"UIKUpgradeRequired");
    data_ark_remove(v3, 0, @"LastActivated");
    data_ark_remove(v3, 0, @"ActivationExpired");
  }
  else
  {
    id v16 = 0;
  }
  data_ark_set(v3, 0, @"BrickState", &__kCFBooleanTrue, 1);
  data_ark_set(v3, 0, @"ActivationState", @"Unactivated", 1);
  xpc_activity_unregister((const char *)[@"com.apple.mobileactivationd.factoryactivation" UTF8String]);
  uint64_t v18 = (void *)gFactoryActivationTransaction;
  gFactoryActivationTransaction = 0;
}

id load_activation_records(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init((Class)NSMutableDictionary);
  id v3 = data_ark_copy(v1, 0, @"ActivationState");
  if ([v3 isEqualToString:@"FactoryActivated"])
  {
    id v4 = data_ark_copy(v1, 0, @"FactoryActivationRecord");
    if (v4) {
      [v2 setObject:v4 forKey:@"DEFAULT_RECORD"];
    }
    id v5 = 0;
    id v6 = 0;
    id v7 = 0;
    if (!v2) {
      goto LABEL_36;
    }
LABEL_34:
    if (![v2 count])
    {

      id v2 = 0;
    }
    goto LABEL_36;
  }
  BOOL v48 = v2;
  id v47 = v3;
  id v8 = +[NSFileManager defaultManager];
  id v9 = copy_activation_records_directory_path();
  id v10 = +[NSURL URLWithString:v9];
  NSURLResourceKey v57 = NSURLIsRegularFileKey;
  id v11 = +[NSArray arrayWithObjects:&v57 count:1];
  char v12 = [(NSFileManager *)v8 enumeratorAtURL:v10 includingPropertiesForKeys:v11 options:0 errorHandler:&__block_literal_global_333];

  long long v54 = 0u;
  long long v55 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  id obj = v12;
  id v13 = [(NSDirectoryEnumerator *)obj countByEnumeratingWithState:&v52 objects:v56 count:16];
  if (v13)
  {
    id v14 = v13;
    id v46 = v1;
    id v5 = 0;
    id v6 = 0;
    id v7 = 0;
    id v15 = 0;
    uint64_t v16 = *(void *)v53;
    NSURLResourceKey v17 = NSURLIsRegularFileKey;
    do
    {
      uint64_t v18 = 0;
      id v49 = v14;
      do
      {
        id v19 = v15;
        if (*(void *)v53 != v16) {
          objc_enumerationMutation(obj);
        }
        id v20 = *(void **)(*((void *)&v52 + 1) + 8 * (void)v18);
        id v51 = 0;
        [v20 getResourceValue:&v51 forKey:v17 error:0];
        id v15 = v51;

        if ([v15 BOOLValue])
        {
          id v21 = (NSMutableDictionary *)[v20 path];
          CFStringRef v22 = load_dict(v21);

          if (v22)
          {
            id v23 = [(NSMutableDictionary *)v22 objectForKeyedSubscript:@"LDActivationVersion"];
            id v24 = isNSNumber(v23);

            if (v24 && (uint64_t)[v24 integerValue] <= 1)
            {
              maLog((uint64_t)"load_activation_records", 0, @"Deleting out-of-date activation record");
              id v25 = [v20 path];
              delete_an_item(v25);
            }
            else
            {
              uint64_t v26 = v6;
              id v27 = [v20 path];
              id v28 = [v27 lastPathComponent];
              unsigned __int8 v29 = [v28 isEqualToString:@"activation_record.plist"];

              uint64_t v30 = @"DEFAULT_RECORD";
              if (v29) {
                goto LABEL_21;
              }
              id v31 = [v20 path];
              id v32 = [v31 lastPathComponent];
              unsigned __int8 v33 = [v32 isEqualToString:@"pod_record.plist"];

              uint64_t v30 = @"POD_RECORD";
              if (v33) {
                goto LABEL_21;
              }
              id v34 = [v20 path];
              id v35 = [v34 lastPathComponent];
              unsigned __int8 v36 = [v35 isEqualToString:@"unlock_record.plist"];

              uint64_t v30 = @"UNLOCK_RECORD";
              if (v36) {
                goto LABEL_21;
              }
              id v37 = [v20 path];
              id v38 = [v37 lastPathComponent];
              unsigned __int8 v39 = [v38 isEqualToString:@"wildcard_record.plist"];

              uint64_t v30 = @"WILDCARD_RECORD";
              if ((v39 & 1) != 0
                || (id v40 = [v20 path],
                    id v41 = [v40 lastPathComponent],
                    unsigned int v42 = [v41 isEqualToString:@"care_flag.plist"],
                    v41,
                    v40,
                    uint64_t v30 = @"CARE_FLAG_RECORD",
                    v42))
              {
LABEL_21:
                id v6 = v30;
              }
              else
              {
                id v6 = v26;
              }
              NSURLResourceKey v17 = NSURLIsRegularFileKey;
              if (v6) {
                [v48 setObject:v22 forKey:v6];
              }
            }
            id v5 = v22;
            id v7 = v24;
          }
          else
          {
            maLog((uint64_t)"load_activation_records", 0, @"Could not load %@", v20);
            id v5 = 0;
          }
          id v14 = v49;
        }
        uint64_t v18 = (char *)v18 + 1;
      }
      while (v14 != v18);
      id v43 = [(NSDirectoryEnumerator *)obj countByEnumeratingWithState:&v52 objects:v56 count:16];
      id v14 = v43;
    }
    while (v43);

    id v1 = v46;
  }
  else
  {
    id v5 = 0;
    id v6 = 0;
    id v7 = 0;
  }

  id v4 = 0;
  id v3 = v47;
  id v2 = v48;
  if (v48) {
    goto LABEL_34;
  }
LABEL_36:
  id v44 = v2;

  return v44;
}

BOOL __load_activation_records_block_invoke(id a1, NSURL *a2, NSError *a3)
{
  return 1;
}

void delete_an_item(void *a1)
{
  id v1 = a1;
  id v2 = +[NSFileManager defaultManager];
  unsigned int v3 = [(NSFileManager *)v2 fileExistsAtPath:v1];

  if (v3)
  {
    id v4 = +[NSFileManager defaultManager];
    id v7 = 0;
    unsigned __int8 v5 = [(NSFileManager *)v4 removeItemAtPath:v1 error:&v7];
    id v6 = v7;

    if (v5) {
      maLog((uint64_t)"delete_an_item", 0, @"Successfully deleted %@", v1);
    }
    else {
      maLog((uint64_t)"delete_an_item", 0, @"Failed to delete %@: %@", v1, v6);
    }
  }
}

uint64_t verify_activation_record_certificates(void *a1, void *a2, void *a3, NSError **a4)
{
  id v6 = a1;
  id v7 = a2;
  id v8 = a3;
  id v9 = v8;
  if (v8)
  {
    id v10 = [v8 objectForKeyedSubscript:@"UseFactoryCertificates"];
    id v11 = isNSNumber(v10);

    if (v11)
    {
      id v12 = [v9 objectForKeyedSubscript:@"UseFactoryCertificates"];
      unsigned int v13 = [v12 BOOLValue];
    }
    else
    {
      unsigned int v13 = 0;
    }
    id v16 = [v9 objectForKeyedSubscript:@"UseQACertificates"];
    id v17 = isNSNumber(v16);

    if (v17)
    {
      id v18 = [v9 objectForKeyedSubscript:@"UseQACertificates"];
      int v14 = [v18 BOOLValue];
    }
    else
    {
      int v14 = 0;
    }
    id v19 = [v9 objectForKeyedSubscript:@"UseCommittedUIK"];
    id v20 = isNSNumber(v19);

    if (v20)
    {
      id v21 = [v9 objectForKeyedSubscript:@"UseCommittedUIK"];
      unsigned int v15 = [v21 BOOLValue];
    }
    else
    {
      unsigned int v15 = 0;
    }
    id v22 = [v9 objectForKeyedSubscript:@"UseEnhancedValidation"];
    id v23 = isNSNumber(v22);

    if (v23)
    {
      id v24 = [v9 objectForKeyedSubscript:@"UseEnhancedValidation"];
      unsigned int v25 = [v24 BOOLValue];

      goto LABEL_15;
    }
  }
  else
  {
    unsigned int v13 = 0;
    int v14 = 0;
    unsigned int v15 = 0;
  }
  unsigned int v25 = 0;
LABEL_15:
  id v26 = [v7 objectForKeyedSubscript:@"UniqueDeviceCertificate"];
  id v84 = v7;
  id v85 = v6;
  uint64_t v83 = v26;
  if (!v26)
  {
    unsigned __int8 v33 = 0;
    uint64_t v89 = 0;
    goto LABEL_27;
  }
  id v27 = v26;
  id v28 = isNSData(v26);

  if (!v28)
  {
    id v49 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3699, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid value for UCRT.");
LABEL_49:
    SecCertificateRef v80 = 0;
    SecCertificateRef v41 = 0;
    SecCertificateRef v45 = 0;
    SecCertificateRef cf = 0;
    uint64_t v89 = 0;
LABEL_57:
    SecKeyRef public_with_intermediate = 0;
    SecCertificateRef v88 = 0;
    id v47 = 0;
    uint64_t v78 = 0;
LABEL_58:
    uint64_t v77 = 0;
    SecKeyRef v82 = 0;
    id v86 = 0;
LABEL_59:
    id v62 = 0;
LABEL_60:
    SecCertificateRef v39 = 0;
    goto LABEL_61;
  }
  uint64_t v104 = 0;
  unsigned __int8 v29 = lockcrypto_cert_from_pem_data(v27, &v104);
  uint64_t v30 = v104;
  uint64_t v89 = v29;
  if (!v29)
  {
    id v49 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3705, @"com.apple.MobileActivation.ErrorDomain", -1, v30, @"Failed to create certificate from pem data.");

    goto LABEL_49;
  }
  if (v25)
  {
    if (v15) {
      uint64_t v31 = 2;
    }
    else {
      uint64_t v31 = 3;
    }
    id v103 = v30;
    char v32 = certificatePublicKeyMatchesSystemPublicKey(v31, 2, v29, &v103);
    unsigned __int8 v33 = v103;

    if ((v32 & 1) == 0)
    {
      unsigned __int8 v36 = @"UCRT public key does not match UIK public key.";
      uint64_t v37 = 3711;
      goto LABEL_54;
    }
    uint64_t v30 = v33;
  }
  id v102 = v30;
  char v34 = verify_ucrt(v27, v9, &v102);
  unsigned __int8 v33 = v102;

  if ((v34 & 1) == 0)
  {
    writeSplunkLog(v6, 5, -1, (uint64_t)"verify_activation_record_certificates", 3717, 0, 0, v35, v74);
    unsigned __int8 v36 = @"Failed to verify UCRT.";
    uint64_t v37 = 3718;
LABEL_54:
    MobileActivationError = createMobileActivationError((uint64_t)"verify_activation_record_certificates", v37, @"com.apple.MobileActivation.ErrorDomain", -1, v33, v36);
    goto LABEL_55;
  }
LABEL_27:
  if ((v14 | v13) == 1)
  {
    if (v14) {
      uint64_t v38 = 13;
    }
    else {
      uint64_t v38 = 10;
    }
    uint64_t v101 = v33;
    SecCertificateRef v39 = (SecCertificateRef)copyRootCertificate(v38, v14, &v101);
    id v40 = v101;

    if (v39)
    {
      id v100 = v40;
      SecCertificateRef v80 = v39;
      SecCertificateRef v41 = lockcrypto_cert_from_pem_data(v39, &v100);
      unsigned int v42 = v100;

      if (!v41)
      {
        id v49 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3736, @"com.apple.MobileActivation.ErrorDomain", -1, v42, @"Failed to create certificate from pem data.");

        goto LABEL_56;
      }
      SecCertificateRef v106 = v41;
      id v99 = v42;
      uint64_t v78 = +[NSArray arrayWithObjects:&v106 count:1];
      SecKeyRef public_with_intermediate = lockcrypto_extract_public(v78, &v99);
      id v44 = v99;

      if (!public_with_intermediate)
      {
        id v49 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3750, @"com.apple.MobileActivation.ErrorDomain", -1, v44, @"Failed to extract the public key from the factory cert chain.");

        SecCertificateRef v45 = 0;
        SecCertificateRef cf = 0;
        SecCertificateRef v88 = 0;
        id v47 = 0;
        goto LABEL_58;
      }
      id v75 = v44;
      SecCertificateRef v45 = 0;
      id v46 = 0;
      SecCertificateRef v88 = 0;
      id v47 = 0;
      uint64_t v77 = 0;
      SecKeyRef v82 = 0;
      id v48 = 0;
      goto LABEL_83;
    }
    id v49 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3730, @"com.apple.MobileActivation.ErrorDomain", -1, v40, @"Failed to load activation certificate.");

    uint64_t v78 = 0;
    SecCertificateRef v80 = 0;
    SecCertificateRef v41 = 0;
    SecCertificateRef v45 = 0;
    SecCertificateRef cf = 0;
    SecCertificateRef v88 = 0;
    SecKeyRef public_with_intermediate = 0;
    id v47 = 0;
    uint64_t v77 = 0;
    SecKeyRef v82 = 0;
    id v86 = 0;
LABEL_51:
    id v62 = 0;
    goto LABEL_61;
  }
  id v50 = [v7 objectForKeyedSubscript:@"AccountTokenCertificate"];
  id v48 = isNSData(v50);

  if (!v48)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3759, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve account token certificate from activation record.");
LABEL_55:
    id v49 = MobileActivationError;

    SecCertificateRef v80 = 0;
    SecCertificateRef v41 = 0;
LABEL_56:
    SecCertificateRef v45 = 0;
    SecCertificateRef cf = 0;
    goto LABEL_57;
  }
  id v98 = v33;
  id v47 = lockcrypto_cert_from_pem_data(v48, (NSError **)&v98);
  id v51 = (NSError *)v98;

  if (!v47)
  {
    id v86 = v48;
    id v49 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3765, @"com.apple.MobileActivation.ErrorDomain", -1, v51, @"Failed to create certificate from pem data.");

    SecCertificateRef v80 = 0;
    SecCertificateRef v41 = 0;
    SecCertificateRef v45 = 0;
    SecCertificateRef cf = 0;
    SecKeyRef public_with_intermediate = 0;
LABEL_94:
    SecCertificateRef v88 = 0;
    uint64_t v77 = 0;
    uint64_t v78 = 0;
    SecKeyRef v82 = 0;
    goto LABEL_59;
  }
  if (v25)
  {
    id v52 = [v7 objectForKeyedSubscript:@"DeviceCertificate"];
    SecKeyRef public_with_intermediate = (SecKeyRef)isNSData(v52);

    id v86 = v48;
    if (public_with_intermediate)
    {
      id v97 = v51;
      long long v53 = v51;
      SecCertificateRef v45 = lockcrypto_cert_from_pem_data(public_with_intermediate, (NSError **)&v97);
      id v54 = v97;

      SecCertificateRef v88 = v45;
      SecKeyRef v82 = public_with_intermediate;
      if (v45)
      {
        id v96 = v54;
        SecCertificateRef v45 = (SecCertificateRef)copyRootCertificate(14, 0, (NSError **)&v96);
        id v55 = v96;
        SecAccessControlRef v56 = v54;
        SecCertificateRef v39 = v45;

        if (!v45)
        {
          id v49 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3790, @"com.apple.MobileActivation.ErrorDomain", -1, v55, @"Failed to load iPhone CA certificate.");

          uint64_t v78 = 0;
          SecCertificateRef v80 = 0;
          SecCertificateRef v41 = 0;
          SecCertificateRef cf = 0;
          SecKeyRef public_with_intermediate = 0;
          uint64_t v77 = 0;
          goto LABEL_51;
        }
        id v95 = v55;
        SecCertificateRef v45 = lockcrypto_cert_from_pem_data(v45, (NSError **)&v95);
        id v79 = v95;

        SecCertificateRef cf = v45;
        if (v45)
        {
          id v94 = v79;
          SecCertificateRef v45 = (SecCertificateRef)copyRootCertificate(12, 0, (NSError **)&v94);
          id v81 = v94;

          if (v45)
          {
            id v93 = v81;
            SecCertificateRef v57 = v45;
            SecCertificateRef v45 = lockcrypto_cert_from_pem_data(v45, (NSError **)&v93);
            id v58 = v93;

            if (!v45)
            {
              id v49 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3812, @"com.apple.MobileActivation.ErrorDomain", -1, v58, @"Failed to create certificate from pem data.");

              SecCertificateRef v41 = 0;
              SecCertificateRef v73 = v57;
              SecKeyRef public_with_intermediate = 0;
              uint64_t v77 = 0;
              uint64_t v78 = 0;
              id v62 = 0;
              SecCertificateRef v39 = 0;
              SecCertificateRef v80 = v73;
              goto LABEL_61;
            }
            SecCertificateRef v80 = v57;
            id v92 = v58;
            id v46 = cf;
            char v59 = lockcrypto_verify_device_cert((uint64_t)v88, (uint64_t)v45, (uint64_t)cf, (NSError **)&v92);
            id v60 = v92;

            if (v59)
            {
              v105[0] = v47;
              v105[1] = cf;
              id v91 = v60;
              uint64_t v77 = +[NSArray arrayWithObjects:v105 count:2];
              SecKeyRef public_with_intermediate = lockcrypto_extract_public_with_intermediate(v77, (NSError **)&v91);
              uint64_t v61 = (NSError *)v91;

              if (!public_with_intermediate)
              {
                id v49 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3829, @"com.apple.MobileActivation.ErrorDomain", -1, v61, @"Failed to extract public key from production cert chain.");

                SecCertificateRef v41 = 0;
                uint64_t v78 = 0;
                goto LABEL_59;
              }
              id v75 = v61;
              SecCertificateRef v41 = 0;
              uint64_t v78 = 0;
              goto LABEL_83;
            }
            id v49 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3819, @"com.apple.MobileActivation.ErrorDomain", -1, v60, @"Failed to verify device certificate.");
          }
          else
          {
            id v49 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3806, @"com.apple.MobileActivation.ErrorDomain", -1, v81, @"Failed to load device CA certificate.");

            SecCertificateRef v80 = 0;
          }
          SecCertificateRef v41 = 0;
        }
        else
        {
          SecCertificateRef v80 = v39;
          id v49 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3796, @"com.apple.MobileActivation.ErrorDomain", -1, v79, @"Failed to create certificate from pem data.");

          SecCertificateRef v41 = 0;
          SecCertificateRef cf = 0;
        }
      }
      else
      {
        id v49 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3780, @"com.apple.MobileActivation.ErrorDomain", -1, v54, @"Failed to create certificate from pem data.");

        SecCertificateRef v80 = 0;
        SecCertificateRef v41 = 0;
        SecCertificateRef cf = 0;
        SecCertificateRef v88 = 0;
      }
      SecKeyRef public_with_intermediate = 0;
      uint64_t v77 = 0;
      uint64_t v78 = 0;
      goto LABEL_59;
    }
    id v71 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3774, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve device certificate from activation record.");
    goto LABEL_93;
  }
  SecKeyRef public_with_intermediate = SecCertificateCopyKey(v47);
  if (!public_with_intermediate)
  {
    id v86 = v48;
    id v71 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3835, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve certificate public key.");
LABEL_93:
    id v49 = v71;

    SecCertificateRef v80 = 0;
    SecCertificateRef v41 = 0;
    SecCertificateRef v45 = 0;
    SecCertificateRef cf = 0;
    goto LABEL_94;
  }
  id v75 = v51;
  uint64_t v78 = 0;
  SecCertificateRef v80 = 0;
  SecCertificateRef v41 = 0;
  SecCertificateRef v45 = 0;
  id v46 = 0;
  SecCertificateRef v88 = 0;
  uint64_t v77 = 0;
  SecKeyRef v82 = 0;
LABEL_83:
  SecCertificateRef cf = v46;
  id v67 = [v7 objectForKeyedSubscript:@"AccountToken"];
  id v68 = v7;
  id v62 = isNSData(v67);

  id v86 = v48;
  if (!v62)
  {
    id v49 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3845, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Failed to retrieve account token from activation record.");

    goto LABEL_60;
  }
  id v69 = [v68 objectForKeyedSubscript:@"AccountTokenSignature"];
  SecCertificateRef v39 = (SecCertificateRef)isNSData(v69);

  if (v39)
  {
    id v90 = v75;
    char v70 = lockcrypto_verify(public_with_intermediate, v39, v62, (NSError **)&v90);
    id v49 = (NSError *)v90;

    if (v70)
    {
      char v64 = v47;
      uint64_t v65 = 1;
      if (!v41) {
        goto LABEL_64;
      }
LABEL_63:
      CFRelease(v41);
      goto LABEL_64;
    }
    uint64_t v72 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3856, @"com.apple.MobileActivation.ErrorDomain", -1, v49, @"Failed to verify account token signature.");

    id v49 = v72;
  }
  else
  {
    id v49 = createMobileActivationError((uint64_t)"verify_activation_record_certificates", 3851, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Failed to retrieve account token signature from activation record.");
  }
LABEL_61:
  char v64 = v47;
  if (a4)
  {
    id v49 = v49;
    uint64_t v65 = 0;
    *a4 = v49;
    if (!v41) {
      goto LABEL_64;
    }
    goto LABEL_63;
  }
  uint64_t v65 = 0;
  if (v41) {
    goto LABEL_63;
  }
LABEL_64:
  if (v45) {
    CFRelease(v45);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (public_with_intermediate) {
    CFRelease(public_with_intermediate);
  }
  if (v88) {
    CFRelease(v88);
  }
  if (v64) {
    CFRelease(v64);
  }
  if (v89) {
    CFRelease(v89);
  }

  return v65;
}

uint64_t verify_activation_record(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v63 = a1;
  id v7 = a2;
  id v8 = a3;
  id v9 = isNSDictionary(v7);

  if (!v9)
  {
    maLog((uint64_t)"verify_activation_record", 0, @"activation record is invalid");
    int v14 = 0;
    id v15 = 0;
    id v66 = 0;
    id v67 = 0;
    id v16 = 0;
    unint64_t v17 = 0;
    unint64_t v18 = 0;
    unint64_t v64 = 0;
    id v65 = 0;
    id v19 = 0;
    unint64_t v62 = 0;
    if (!a4) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  uint64_t v61 = a4;
  if (v8)
  {
    id v10 = [v8 objectForKeyedSubscript:@"UseFactoryCertificates"];
    id v11 = isNSNumber(v10);

    if (v11)
    {
      id v12 = [v8 objectForKeyedSubscript:@"UseFactoryCertificates"];
      unsigned int v13 = [v12 BOOLValue];
    }
    else
    {
      unsigned int v13 = 0;
    }
    id v20 = [v8 objectForKeyedSubscript:@"UseEnhancedValidation"];
    id v21 = isNSNumber(v20);

    if (v21)
    {
      id v22 = [v8 objectForKeyedSubscript:@"UseEnhancedValidation"];
      unsigned int v23 = [v22 BOOLValue];

      goto LABEL_12;
    }
  }
  else
  {
    unsigned int v13 = 0;
  }
  unsigned int v23 = 0;
LABEL_12:
  id v69 = 0;
  id v15 = extract_account_token(v7, &v69);
  id v24 = v69;
  if (!v15)
  {
    int v14 = createMobileActivationError((uint64_t)"verify_activation_record", 3940, @"com.apple.MobileActivation.ErrorDomain", -1, v24, @"Failed to retrieve account token.");

    id v66 = 0;
    id v67 = 0;
    id v16 = 0;
    unint64_t v17 = 0;
    unint64_t v18 = 0;
    unint64_t v64 = 0;
    id v65 = 0;
    id v19 = 0;
    id v9 = 0;
    unint64_t v62 = 0;
    goto LABEL_25;
  }
  id v25 = [v8 objectForKeyedSubscript:@"ActivationRandomness"];
  id v26 = isNSString(v25);

  id v60 = v24;
  unsigned int v56 = v13;
  unsigned int v57 = v23;
  if (v26) {
    id v66 = [v8 objectForKeyedSubscript:@"ActivationRandomness"];
  }
  else {
    id v66 = 0;
  }
  id v27 = +[GestaltHlpr getSharedInstance];
  id v28 = [v27 copyAnswer:@"SerialNumber"];

  id v29 = +[GestaltHlpr getSharedInstance];
  id v16 = [v29 copyAnswer:@"UniqueDeviceID"];

  id v65 = [v15 objectForKeyedSubscript:@"ActivationRandomness"];
  id v19 = [v15 objectForKeyedSubscript:@"SerialNumber"];
  id v9 = [v15 objectForKeyedSubscript:@"UniqueDeviceID"];
  unint64_t v64 = (unint64_t)[v15 objectForKeyedSubscript:@"MobileEquipmentIdentifier"];
  unint64_t v62 = (unint64_t)[v15 objectForKeyedSubscript:@"InternationalMobileEquipmentIdentity"];
  id v67 = v28;
  id v30 = isNSString(v28);
  if (v30
    && (v31 = v30, id v32 = isNSString(v19), v32, v31, v32))
  {
    unsigned int v33 = [v28 isEqualToString:v19] ^ 1;
  }
  else
  {
    unsigned int v33 = 1;
  }
  id v34 = isNSString(v16);
  if (!v34
    || (uint64_t v35 = v34, v36 = isNSString(v9), v36, v35, !v36)
    || (v33 | [v16 isEqualToString:v9] ^ 1) == 1)
  {
    int v14 = createMobileActivationError((uint64_t)"verify_activation_record", 3973, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid Serial/UDID.");

    unint64_t v17 = 0;
    unint64_t v18 = 0;
    goto LABEL_25;
  }
  if (!v57)
  {
    unint64_t v17 = 0;
    unint64_t v18 = 0;
    goto LABEL_53;
  }
  id v39 = +[GestaltHlpr getSharedInstance];
  unint64_t v17 = (unint64_t)[v39 copyAnswer:@"MobileEquipmentIdentifier"];

  id v40 = +[GestaltHlpr getSharedInstance];
  unint64_t v18 = (unint64_t)[v40 copyAnswer:@"InternationalMobileEquipmentIdentity"];

  if (v18 | v62)
  {
    id v41 = isNSString((void *)v18);
    if (v41
      && (unsigned int v42 = v41,
          id v43 = isNSString((void *)v62),
          v43,
          v42,
          v43))
    {
      unsigned int v44 = [(id)v18 isEqualToString:v62] ^ 1;
    }
    else
    {
      unsigned int v44 = 1;
    }
    unsigned int v58 = v44;
  }
  else
  {
    unsigned int v58 = 0;
  }
  a4 = v61;
  if (v17 | v64)
  {
    id v45 = isNSString((void *)v17);
    if (v45)
    {
      id v46 = v45;
      id v47 = isNSString((void *)v64);

      if (v47) {
        unsigned int v48 = [(id)v17 isEqualToString:v64] ^ 1;
      }
      else {
        unsigned int v48 = 1;
      }
      int v55 = v48;
      a4 = v61;
    }
    else
    {
      int v55 = 1;
    }
  }
  else
  {
    int v55 = 0;
  }
  id v49 = isNSString(v66);
  if (!v49) {
    goto LABEL_49;
  }
  id v50 = v49;
  id v51 = isNSString(v65);

  if (!v51)
  {
    LODWORD(v49) = 0;
    a4 = v61;
LABEL_49:
    id v52 = v65;
    goto LABEL_50;
  }
  id v52 = v65;
  LODWORD(v49) = [v66 isEqualToString:v65];
  a4 = v61;
LABEL_50:
  if (((v56 | v49) & 1) == 0)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"verify_activation_record", 4017, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid Randomness (actual, expected): %@, %@", v52, v66);
LABEL_57:
    int v14 = MobileActivationError;

    if (!a4) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  if ((v58 | v55) == 1)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"verify_activation_record", 4023, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid IMEI/MEID.");
    goto LABEL_57;
  }
LABEL_53:
  id v68 = v60;
  char v59 = verify_activation_record_certificates(v63, v7, v8, (NSError **)&v68);
  int v14 = (NSError *)v68;

  if (v59)
  {
    a4 = 1;
    goto LABEL_27;
  }
  id v54 = createMobileActivationError((uint64_t)"verify_activation_record", 4030, @"com.apple.MobileActivation.ErrorDomain", -1, v14, @"Failed to verify activation record certificate.");

  int v14 = v54;
LABEL_25:
  a4 = v61;
  if (v61)
  {
LABEL_26:
    int v14 = v14;
    uint64_t v37 = (void *)a4;
    a4 = 0;
    *uint64_t v37 = v14;
  }
LABEL_27:

  return a4;
}

id extract_account_token(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = isNSDictionary(v3);

  if (!v4)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"extract_account_token", 350, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
LABEL_7:
    id v7 = MobileActivationError;
    id v6 = 0;
    goto LABEL_8;
  }
  id v5 = [v3 objectForKeyedSubscript:@"AccountToken"];
  id v4 = isNSData(v5);

  if (!v4)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"extract_account_token", 356, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Activation record is missing the account token XML.");
    goto LABEL_7;
  }
  id v12 = 0;
  id v6 = +[NSPropertyListSerialization propertyListWithData:v4 options:0 format:0 error:&v12];
  id v7 = (NSError *)v12;
  id v8 = isNSDictionary(v6);

  if (!v8)
  {
    id v9 = createMobileActivationError((uint64_t)"extract_account_token", 362, @"com.apple.MobileActivation.ErrorDomain", -1, v7, @"Failed to serialize data.");

    id v6 = 0;
    id v7 = v9;
  }
LABEL_8:
  if (a2 && !v6) {
    *a2 = v7;
  }

  return v6;
}

uint64_t handle_activate(void *a1, void *a2, void *a3, NSError **a4)
{
  id v6 = a1;
  id v7 = a2;
  id v8 = a3;
  id v152 = v6;
  id v138 = v8;
  id v139 = v7;
  if (!v6 || !v7)
  {
    id v20 = createMobileActivationError((uint64_t)"handle_activate", 4076, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    id v151 = 0;
    id v21 = 0;
    id v133 = 0;
    id v11 = 0;
LABEL_12:
    id v22 = 0;
    unsigned int v23 = 0;
    id v24 = 0;
    id v25 = 0;
    id v137 = 0;
    id v26 = 0;
    id v144 = 0;
LABEL_13:
    id v136 = 0;
    id v143 = 0;
    id v27 = 0;
LABEL_14:
    id v140 = 0;
    id v141 = 0;
    id v142 = 0;
    SecCertificateRef cf = 0;
    goto LABEL_15;
  }
  id v9 = v8;
  id v10 = (__CFString *)objc_alloc_init((Class)NSMutableDictionary);
  id v11 = v10;
  if (!v10)
  {
    id v20 = createMobileActivationError((uint64_t)"handle_activate", 4082, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");
    id v151 = 0;
    id v21 = 0;
    id v133 = 0;
    goto LABEL_12;
  }
  if (v9) {
    [(__CFString *)v10 addEntriesFromDictionary:v9];
  }
  id v12 = [v7 objectForKeyedSubscript:@"ActivationRecord"];
  id v13 = isNSDictionary(v12);

  id v151 = v12;
  id v144 = v11;
  if (!v13)
  {
    id v20 = createMobileActivationError((uint64_t)"handle_activate", 4092, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Message does not contain a valid activation record.");
    id v21 = 0;
    id v133 = 0;
    id v11 = 0;
    id v22 = 0;
    unsigned int v23 = 0;
    id v24 = 0;
    id v25 = 0;
    id v137 = 0;
    id v26 = 0;
    goto LABEL_13;
  }
  if (is_internal_build())
  {
    id v14 = objc_alloc((Class)NSUserDefaults);
    id v15 = [v14 persistentDomainForName:@"com.apple.mobileactivationd"];

    id v16 = [v15 objectForKeyedSubscript:@"UseQACertificates"];
    id v17 = isNSNumber(v16);

    if (v17)
    {
      id v18 = [v15 objectForKeyedSubscript:@"UseQACertificates"];
      unint64_t v19 = (unint64_t)[v18 BOOLValue];
    }
    else
    {
      unint64_t v19 = 0;
    }
    id v31 = [v15 objectForKeyedSubscript:@"DSPExpirationDate"];
    id v32 = isNSString(v31);

    id v137 = v15;
    if (v32) {
      id v27 = (__CFString *)[v15 objectForKeyedSubscript:@"DSPExpirationDate"];
    }
    else {
      id v27 = 0;
    }
  }
  else
  {
    id v137 = 0;
    id v27 = 0;
    unint64_t v19 = 0;
  }
  id v33 = [(__CFString *)v11 objectForKeyedSubscript:@"UseFactoryCertificates"];
  id v34 = isNSNumber(v33);
  if (!v34)
  {

LABEL_33:
    [(__CFString *)v11 setObject:&__kCFBooleanFalse forKeyedSubscript:@"UseFactoryCertificates"];
    id v41 = +[NSNumber numberWithBool:v19];
    [(__CFString *)v11 setObject:v41 forKeyedSubscript:@"UseQACertificates"];

    [(__CFString *)v11 setObject:&__kCFBooleanTrue forKeyedSubscript:@"UseEnhancedValidation"];
    [(__CFString *)v11 setObject:&__kCFBooleanTrue forKeyedSubscript:@"UseEnhancedValidationWithVersionCheck"];
    id v167 = 0;
    id v6 = v152;
    LOBYTE(v41) = verify_activation_record(v152, v12, v11, (uint64_t)&v167);
    unsigned int v42 = (NSError *)v167;
    id v43 = v42;
    if ((v41 & 1) == 0)
    {
      MobileActivationError = createMobileActivationError((uint64_t)"handle_activate", 4151, @"com.apple.MobileActivation.ErrorDomain", -1, v42, @"Failed to validate activation record with production certificates.");
LABEL_58:
      id v20 = MobileActivationError;
      char v70 = v43;
LABEL_59:

      id v21 = 0;
      id v133 = 0;
      id v11 = 0;
LABEL_60:
      id v22 = 0;
      unsigned int v23 = 0;
      id v24 = 0;
      id v25 = 0;
      id v26 = 0;
      id v136 = 0;
      id v143 = 0;
      goto LABEL_14;
    }
    unsigned int v44 = v42;
    int v45 = 0;
    goto LABEL_44;
  }
  uint64_t v35 = v34;
  unsigned int v149 = v19;
  id v36 = v27;
  uint64_t v37 = v11;
  id v38 = [(__CFString *)v11 objectForKeyedSubscript:@"UseFactoryCertificates"];
  unsigned int v39 = [v38 BOOLValue];

  if (!v39)
  {
    id v12 = v151;
    id v11 = v37;
    id v27 = v36;
    unint64_t v19 = v149;
    goto LABEL_33;
  }
  [(__CFString *)v37 setObject:&__kCFBooleanFalse forKeyedSubscript:@"UseQACertificates"];
  [(__CFString *)v37 setObject:&__kCFBooleanTrue forKeyedSubscript:@"UseEnhancedValidation"];
  [(__CFString *)v37 setObject:&__kCFBooleanTrue forKeyedSubscript:@"UseEnhancedValidationWithVersionCheck"];
  id v169 = 0;
  id v12 = v151;
  char v40 = verify_activation_record(v152, v151, v37, (uint64_t)&v169);
  id v20 = (NSError *)v169;
  if (v40)
  {
    id v27 = v36;
LABEL_41:
    unsigned int v44 = 0;
    id v6 = v152;
    if (v20)
    {
      id v133 = 0;
      SecCertificateRef cf = 0;
      id v11 = 0;
      id v22 = 0;
      unsigned int v23 = 0;
      id v24 = 0;
      id v25 = 0;
      id v26 = 0;
      id v136 = 0;
      id v142 = 0;
      id v143 = 0;
      id v140 = 0;
      id v141 = 0;
      id v21 = 0;
      goto LABEL_15;
    }
    int v45 = 1;
    goto LABEL_44;
  }
  id v47 = createMobileActivationError((uint64_t)"handle_activate", 4119, @"com.apple.MobileActivation.ErrorDomain", -1, v20, @"Failed to validate activation record with factory certificates.");

  id v27 = v36;
  if (!is_internal_build() || !is_virtual_machine())
  {
    id v20 = v47;
    id v12 = v151;
    goto LABEL_41;
  }
  [(__CFString *)v144 setObject:&__kCFBooleanFalse forKeyedSubscript:@"UseFactoryCertificates"];
  unsigned int v48 = +[NSNumber numberWithBool:v149];
  [(__CFString *)v144 setObject:v48 forKeyedSubscript:@"UseQACertificates"];

  id v168 = v47;
  id v6 = v152;
  char v49 = verify_activation_record(v152, v151, v144, (uint64_t)&v168);
  id v50 = v168;

  if ((v49 & 1) == 0)
  {
    id v20 = createMobileActivationError((uint64_t)"handle_activate", 4130, @"com.apple.MobileActivation.ErrorDomain", -1, v50, @"Failed to validate activation record with production certificates.");
    char v70 = v50;
    goto LABEL_59;
  }

  unsigned int v44 = 0;
  int v45 = 0;
  id v12 = v151;
LABEL_44:
  id v166 = v44;
  id v51 = extract_account_token(v12, &v166);
  id v43 = v166;

  id v146 = v51;
  if (!v51)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"handle_activate", 4159, @"com.apple.MobileActivation.ErrorDomain", -1, v43, @"Failed to retrieve account token.");
    goto LABEL_58;
  }
  int v130 = v45;
  id v134 = v6;
  id v52 = v12;
  unint64_t v53 = (unint64_t)v52;
  id v151 = v52;
  uint64_t v131 = v27;
  if (!v52)
  {
    id v71 = createMobileActivationError((uint64_t)"store_regulatory_images", 241, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid input.");
    id v57 = 0;
    id v63 = 0;
    unint64_t v55 = 0;
    goto LABEL_66;
  }
  id v54 = [v52 objectForKeyedSubscript:@"RegulatoryImages"];
  unint64_t v55 = (unint64_t)isNSArray(v54);

  id v56 = [(id)v53 objectForKeyedSubscript:@"RegulatoryInfo"];
  unint64_t v53 = (unint64_t)isNSData(v56);

  if (v55 | v53)
  {
    id v57 = copy_regulatory_images_directory_path();
    if (v57)
    {
      unsigned int v58 = +[NSFileManager defaultManager];
      NSFileAttributeKey v174 = NSFilePosixPermissions;
      v175 = &off_10027EEB8;
      char v59 = +[NSDictionary dictionaryWithObjects:&v175 forKeys:&v174 count:1];
      id v171 = 0;
      unsigned __int8 v60 = [(NSFileManager *)v58 createDirectoryAtPath:v57 withIntermediateDirectories:1 attributes:v59 error:&v171];
      uint64_t v61 = (NSError *)v171;

      if (v60)
      {
        id v62 = [v57 stringByAppendingPathComponent:@"regulatory_images.plist"];

        id v63 = objc_alloc_init((Class)NSMutableDictionary);
        if (v63)
        {
          id v64 = +[GestaltHlpr getSharedInstance];
          id v65 = [v64 copyAnswer:@"ProductVersion"];

          if (v65)
          {
            [v63 setObject:v65 forKeyedSubscript:@"ProductVersion"];
            if (v55) {
              [v63 setObject:v55 forKeyedSubscript:@"RegulatoryImages"];
            }
            id v21 = v146;
            if (v53) {
              [v63 setObject:v53 forKeyedSubscript:@"RegulatoryInfo"];
            }
            id v170 = v61;
            char v66 = store_dict(v62, v63, &v170);
            id v67 = v170;

            if (v66)
            {
              char v68 = 1;
              id v69 = v43;
              goto LABEL_69;
            }
            id v71 = createMobileActivationError((uint64_t)"store_regulatory_images", 285, @"com.apple.MobileActivation.ErrorDomain", -1, v67, @"Failed to store regulatory images at %@.", v62);
            uint64_t v113 = v67;
          }
          else
          {
            id v71 = createMobileActivationError((uint64_t)"store_regulatory_images", 270, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve product version.");
            uint64_t v113 = v61;
          }
        }
        else
        {
          id v71 = createMobileActivationError((uint64_t)"store_regulatory_images", 264, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create dictionary.");

          id v65 = 0;
        }
        id v57 = v62;
        goto LABEL_67;
      }
      id v71 = createMobileActivationError((uint64_t)"store_regulatory_images", 256, @"com.apple.MobileActivation.ErrorDomain", -1, v61, @"Failed to create %@.", v57);
    }
    else
    {
      id v71 = createMobileActivationError((uint64_t)"store_regulatory_images", 251, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve regulatory images path.");
    }
    id v63 = 0;
LABEL_66:
    id v65 = 0;
LABEL_67:
    id v69 = v71;
    char v68 = 0;
    id v67 = v69;
    id v62 = v57;
    goto LABEL_68;
  }
  id v67 = 0;
  id v65 = 0;
  unint64_t v53 = 0;
  unint64_t v55 = 0;
  id v63 = 0;
  id v62 = 0;
  char v68 = 1;
  id v69 = v43;
LABEL_68:
  id v21 = v146;
LABEL_69:

  uint64_t v72 = v151;
  SecCertificateRef v73 = v134;

  uint64_t v74 = v69;
  if ((v68 & 1) == 0)
  {
    id v20 = createMobileActivationError((uint64_t)"handle_activate", 4165, @"com.apple.MobileActivation.ErrorDomain", -1, v74, @"Failed to store regulatory images.");

    id v133 = 0;
    id v11 = 0;
LABEL_78:
    id v22 = 0;
    unsigned int v23 = 0;
    id v24 = 0;
    id v25 = 0;
    id v26 = 0;
    SecCertificateRef cf = 0;
    id v136 = 0;
    id v142 = 0;
    id v143 = 0;
    id v140 = 0;
    id v141 = 0;
    id v6 = v152;
    id v27 = v131;
    goto LABEL_15;
  }
  id v148 = v74;
  if (v130) {
    id v75 = @"FactoryActivated";
  }
  else {
    id v75 = @"Activated";
  }
  id v11 = v75;
  if ([(__CFString *)v11 isEqualToString:@"FactoryActivated"])
  {
    if (!is_product_cellular())
    {
      id v6 = v152;
      id v27 = v131;
      goto LABEL_105;
    }
    data_ark_set(v134, 0, @"FactoryActivationRecord", v151, 0);
    id v165 = v74;
    char v76 = deliver_baseband_ticket((int)v134, v21, v11, &v165);
    uint64_t v77 = v165;

    id v6 = v152;
    id v27 = v131;
    if (v76)
    {
      id v148 = v77;
LABEL_105:
      data_ark_remove(v134, 0, @"LastActivated");
      [@"com.apple.mobileactivationd.factoryactivation" UTF8String];
      uint64_t v103 = os_transaction_create();
      uint64_t v104 = (void *)gFactoryActivationTransaction;
      gFactoryActivationTransaction = v103;

      uint64_t v105 = (const char *)[@"com.apple.mobileactivationd.factoryactivation" UTF8String];
      v163[0] = _NSConcreteStackBlock;
      v163[1] = 3254779904;
      v163[2] = __handle_activate_block_invoke;
      v163[3] = &__block_descriptor_40_e8_32s_e17_v16__0__DataArk_8l;
      id v164 = v134;
      scheduleXPCActivity(v164, v105, 0x5460u, 0, 0, 0, v163);

      unsigned int v23 = 0;
      id v129 = 0;
      id v25 = 0;
      id v26 = 0;
      SecCertificateRef cf = 0;
      id v136 = 0;
      id v142 = 0;
      id v143 = 0;
      id v140 = 0;
      id v141 = 0;
      goto LABEL_106;
    }
    id v20 = createMobileActivationError((uint64_t)"handle_activate", 4182, @"com.apple.MobileActivation.ErrorDomain", -1, v77, @"Failed to deliver baseband ticket.");

    id v133 = 0;
    goto LABEL_60;
  }
  id v162 = v74;
  BOOL v78 = send_activation_record_to_mc(v151, &v162);
  id v79 = v162;

  if (!v78)
  {
    [@"com.apple.mobileactivationd" UTF8String];
    if (!os_variant_is_darwinos()
      || (mobileactivationErrorHasDomainAndErrorCode(v79, @"com.apple.MobileActivation.ErrorDomain", (id)0xFFFFFFFFFFFFFFFDLL) & 1) == 0)
    {
      id v20 = createMobileActivationError((uint64_t)"handle_activate", 4212, @"com.apple.MobileActivation.ErrorDomain", -1, v79, @"Failed to send activation record to managed configuration.");

      id v133 = 0;
      goto LABEL_78;
    }
  }
  id v161 = v79;
  char updated = store_software_update_configuration_flags(v151, (NSError **)&v161);
  id v81 = v161;

  id v27 = v131;
  if ((updated & 1) == 0)
  {
    uint64_t v112 = createMobileActivationError((uint64_t)"handle_activate", 4221, @"com.apple.MobileActivation.ErrorDomain", -1, v81, @"Failed to store software update configuration flags.");
LABEL_127:
    id v20 = v112;
    uint64_t v117 = v81;
    goto LABEL_128;
  }
  if (is_product_cellular())
  {
    id v160 = v81;
    char v82 = deliver_baseband_ticket((int)v134, v21, v11, &v160);
    id v83 = v160;

    if ((v82 & 1) == 0)
    {
      id v20 = createMobileActivationError((uint64_t)"handle_activate", 4228, @"com.apple.MobileActivation.ErrorDomain", -1, v83, @"Failed to deliver baseband ticket.");
      uint64_t v117 = v83;
LABEL_128:

      id v133 = 0;
      SecCertificateRef cf = 0;
      id v22 = 0;
      unsigned int v23 = 0;
      id v24 = 0;
      id v25 = 0;
      id v26 = 0;
      id v136 = 0;
      id v142 = 0;
      id v143 = 0;
      id v140 = 0;
      id v141 = 0;
      id v6 = v152;
      goto LABEL_15;
    }
    id v81 = v83;
  }
  if (!is_product_audio_accessory())
  {
    if (!getMSDKManagedDeviceClass()
      || (id v84 = [getMSDKManagedDeviceClass() sharedInstance],
          unsigned __int8 v85 = [v84 clearOwnershipWarning],
          v84,
          (v85 & 1) == 0))
    {
      uint64_t v114 = @"Failed to update demo device ownership warning.";
      uint64_t v115 = 4235;
      uint64_t v116 = -1;
LABEL_126:
      uint64_t v112 = createMobileActivationError((uint64_t)"handle_activate", v115, @"com.apple.MobileActivation.ErrorDomain", v116, 0, v114);
      goto LABEL_127;
    }
  }
  id v86 = [v151 objectForKeyedSubscript:@"DeviceCertificate"];
  id v87 = isNSData(v86);

  if (!v87)
  {
    uint64_t v114 = @"Activation record does not contain device certificate.";
    uint64_t v115 = 4244;
    uint64_t v116 = -2;
    goto LABEL_126;
  }
  CFStringRef v172 = @"UseSystemKeychainSharediPadOnly";
  v173 = &__kCFBooleanTrue;
  SecCertificateRef v88 = +[NSDictionary dictionaryWithObjects:&v173 forKeys:&v172 count:1];
  id v25 = data_ark_copy(v134, 0, @"PrivateKey");
  id v89 = isNSData(v25);
  id v159 = v81;
  id v128 = v87;
  id v150 = v88;
  char v90 = store_pem_as_identity(v89, v87, @"lockdown-identities", @"com.apple.lockdown.identity.activation", v88, &v159);
  id v91 = v159;

  if ((v90 & 1) == 0)
  {
    id v20 = createMobileActivationError((uint64_t)"handle_activate", 4254, @"com.apple.MobileActivation.ErrorDomain", -1, v91, @"Failed to store activation identity.");

    id v133 = 0;
    SecCertificateRef cf = 0;
    id v22 = 0;
    id v24 = 0;
    id v136 = 0;
    id v142 = 0;
    id v143 = 0;
    id v140 = 0;
    id v141 = 0;
    id v6 = v152;
LABEL_130:
    unsigned int v23 = v128;
    id v26 = v150;
    goto LABEL_15;
  }
  post_notification(@"com.apple.mobile.lockdown.activation_identity_changed");
  id v129 = [v151 objectForKeyedSubscript:@"UniqueDeviceCertificate"];
  id v92 = isNSData(v129);
  if (v92)
  {

    id v6 = v152;
    id v26 = v88;
  }
  else
  {
    id v6 = v152;
    id v26 = v88;
    if (!is_internal_build() || !is_virtual_machine())
    {
      id v20 = createMobileActivationError((uint64_t)"handle_activate", 4265, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Activation record does not contain a UCRT.");

      id v133 = 0;
      SecCertificateRef cf = 0;
      id v22 = 0;
      id v136 = 0;
      id v142 = 0;
      id v143 = 0;
      id v140 = 0;
      id v141 = 0;
LABEL_139:
      unsigned int v23 = v128;
      goto LABEL_116;
    }
  }
  id v93 = isNSData(v129);

  if (!v93)
  {
    SecCertificateRef cf = 0;
    id v136 = 0;
    id v142 = 0;
    id v143 = 0;
    id v140 = 0;
    id v141 = 0;
    goto LABEL_135;
  }
  id v158 = v91;
  id v94 = lockcrypto_decode_pems(v129, "CERTIFICATE", (NSError **)&v158);
  id v95 = v158;

  id v96 = v94;
  id v24 = v129;
  if (!v96)
  {
    id v20 = createMobileActivationError((uint64_t)"handle_activate", 4272, @"com.apple.MobileActivation.ErrorDomain", -1, v95, @"Failed to query certificate(s) from pem data.");

    id v133 = 0;
    SecCertificateRef cf = 0;
    id v22 = 0;
    id v136 = 0;
    id v142 = 0;
    id v143 = 0;
    id v140 = 0;
    id v141 = 0;
    unsigned int v23 = v128;
    goto LABEL_15;
  }
  id v136 = v96;
  CFDataRef v97 = (const __CFData *)[v96 objectAtIndexedSubscript:0];
  SecCertificateRef v98 = SecCertificateCreateWithData(kCFAllocatorDefault, v97);

  if (!v98)
  {
    id v20 = createMobileActivationError((uint64_t)"handle_activate", 4278, @"com.apple.MobileActivation.ErrorDomain", -1, v95, @"Failed to create certificate from pem data.");

    id v133 = 0;
    SecCertificateRef cf = 0;
    id v22 = 0;
    id v142 = 0;
    id v143 = 0;
    id v140 = 0;
    id v141 = 0;
    goto LABEL_130;
  }
  id v157 = v95;
  SecCertificateRef cf = v98;
  id v99 = lockcrypto_copy_certificate_validity_date((uint64_t)v98, 0, (NSError **)&v157);
  id v100 = v157;

  id v143 = v99;
  if (!v99)
  {
    id v20 = createMobileActivationError((uint64_t)"handle_activate", 4284, @"com.apple.MobileActivation.ErrorDomain", -1, v100, @"Failed to copy certificate validity date.");

    id v133 = 0;
    id v22 = 0;
    id v142 = 0;
    id v143 = 0;
    id v140 = 0;
    id v141 = 0;
LABEL_156:
    unsigned int v23 = v128;
    id v26 = v150;
    goto LABEL_116;
  }
  if (is_dsp_device())
  {
    if (v131) {
      CFStringRef v101 = v131;
    }
    else {
      CFStringRef v101 = @"2025-07-20T12:00:00-0700";
    }
    id v102 = objc_alloc_init((Class)NSDateFormatter);
    [v102 setDateFormat:@"yyyy-MM-dd'T'HH:mm:ssZZZZZ"];
    id v140 = v102;
    id v27 = (__CFString *)v101;
    id v142 = [v102 dateFromString:v101];
    if (!v142)
    {
      id v20 = createMobileActivationError((uint64_t)"handle_activate", 4298, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create date from %@ (must be in format '%@').", v101, v102);

      id v133 = 0;
      id v22 = 0;
      id v142 = 0;
      goto LABEL_151;
    }
    if ([v142 compare:v143] == (id)-1)
    {
      id v20 = createMobileActivationError((uint64_t)"handle_activate", 4306, @"com.apple.MobileActivation.ErrorDomain", -23, 0, @"Activation has expired (%@ < %@).", v142, v143);

      id v133 = 0;
      id v22 = 0;
LABEL_151:
      id v141 = 0;
LABEL_155:
      id v6 = v152;
      id v21 = v146;
      goto LABEL_156;
    }
  }
  else
  {
    id v140 = 0;
    id v142 = 0;
  }
  id v121 = +[GestaltHlpr getSharedInstance];
  id v122 = [v121 copyAnswer:@"DeviceSupportsBatteryInformation"];

  id v141 = v122;
  id v123 = isNSNumber(v122);

  if (!v123)
  {
    id v20 = createMobileActivationError((uint64_t)"handle_activate", 4318, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve '%@'.", @"DeviceSupportsBatteryInformation");
    uint64_t v127 = v100;
LABEL_154:

    id v133 = 0;
    id v22 = 0;
    goto LABEL_155;
  }
  if ([v122 BOOLValue])
  {
    id v156 = v100;
    char v124 = setBatteryDateOfFirtUse(v143, (NSError **)&v156);
    id v125 = v156;

    if ((v124 & 1) == 0)
    {
      id v20 = createMobileActivationError((uint64_t)"handle_activate", 4324, @"com.apple.MobileActivation.ErrorDomain", -1, v125, @"Failed to set battery date of first use.");
      uint64_t v127 = v125;
      goto LABEL_154;
    }
    id v100 = v125;
  }
  id v155 = v100;
  char v126 = storeUCRT(v134, v129, v144, &v155);
  id v91 = v155;

  if ((v126 & 1) == 0)
  {
    id v20 = createMobileActivationError((uint64_t)"handle_activate", 4331, @"com.apple.MobileActivation.ErrorDomain", -1, v91, @"Failed to store UCRT.");
    uint64_t v127 = v91;
    goto LABEL_154;
  }
  uint64_t v72 = v151;
  id v6 = v152;
  id v21 = v146;
  id v26 = v150;
LABEL_135:
  id v154 = v91;
  char v118 = store_activation_record(v72, (NSError **)&v154);
  SecCertificateRef v119 = (NSError *)v154;

  if ((v118 & 1) == 0)
  {
    CFDataRef v120 = createMobileActivationError((uint64_t)"handle_activate", 4339, @"com.apple.MobileActivation.ErrorDomain", -1, v119, @"Failed to store activation record.");

    id v133 = 0;
    id v22 = 0;
    id v20 = v120;
    goto LABEL_139;
  }
  id v148 = v119;
  unsigned int v23 = v128;
  SecCertificateRef v73 = v134;
LABEL_106:
  id v106 = [v72 objectForKeyedSubscript:@"FairPlayKeyData"];
  id v107 = isNSData(v106);

  id v133 = v107;
  if (v107)
  {
    id v153 = v148;
    char v108 = store_fairplay_blob(v73, v107, (NSError **)&v153);
    id v147 = (NSError *)v153;

    if (v108)
    {
      id v148 = v147;
      goto LABEL_109;
    }
    id v20 = createMobileActivationError((uint64_t)"handle_activate", 4348, @"com.apple.MobileActivation.ErrorDomain", -1, v147, @"Failed to store fairplay blob.");

    id v22 = 0;
LABEL_116:
    id v24 = v129;
    goto LABEL_15;
  }
LABEL_109:
  id v109 = +[GestaltHlpr getSharedInstance];
  id v110 = [v109 copyAnswer:@"BuildVersion"];

  id v145 = v110;
  id v111 = isNSString(v110);

  id v24 = v129;
  if (v111)
  {
    data_ark_set(v73, 0, @"ActivationState", v11, v130 ^ 1);
    data_ark_set(v73, 0, @"LastActivated", v145, v130 ^ 1);
    data_ark_set(v73, 0, @"BrickState", &__kCFBooleanFalse, v130 ^ 1);
    uint64_t v28 = 1;
    goto LABEL_18;
  }
  id v20 = createMobileActivationError((uint64_t)"handle_activate", 4360, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve build version.");

  id v22 = v145;
LABEL_15:
  id v145 = v22;
  handle_deactivate(v6, 1);
  if (a4)
  {
    uint64_t v28 = 0;
    id v148 = v20;
    *a4 = v148;
  }
  else
  {
    id v148 = v20;
    uint64_t v28 = 0;
  }
LABEL_18:
  id v29 = data_ark_copy(v6, 0, @"ActivationState");
  maLog((uint64_t)"handle_activate", 0, @"Activation State: %@", v29);

  if (cf) {
    CFRelease(cf);
  }

  return v28;
}

void __handle_activate_block_invoke(uint64_t a1)
{
}

void factory_activation_activity_handler(void *a1)
{
  id v1 = a1;
  id v2 = copyMobileActivationSerialQueue();
  block[0] = _NSConcreteStackBlock;
  block[1] = 3254779904;
  block[2] = __factory_activation_activity_handler_block_invoke;
  block[3] = &__block_descriptor_40_e8_32s_e5_v8__0l;
  id v5 = v1;
  id v3 = v1;
  dispatch_async(v2, block);
}

id getMSDKManagedDeviceClass()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getMSDKManagedDeviceClass_softClass;
  uint64_t v7 = getMSDKManagedDeviceClass_softClass;
  if (!getMSDKManagedDeviceClass_softClass)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3254779904;
    v3[2] = __getMSDKManagedDeviceClass_block_invoke;
    v3[3] = &__block_descriptor_40_e8_32r_e5_v8__0l;
    v3[4] = &v4;
    __getMSDKManagedDeviceClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_10002D63C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t store_activation_record(void *a1, NSError **a2)
{
  id v3 = a1;
  id v4 = copy_activation_records_directory_path();
  if (!v4)
  {
    id v12 = createMobileActivationError((uint64_t)"store_activation_record", 311, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve activation records path.");
    goto LABEL_7;
  }
  id v5 = +[NSFileManager defaultManager];
  NSFileAttributeKey v18 = NSFilePosixPermissions;
  unint64_t v19 = &off_10027EEB8;
  uint64_t v6 = +[NSDictionary dictionaryWithObjects:&v19 forKeys:&v18 count:1];
  id v17 = 0;
  unsigned __int8 v7 = [(NSFileManager *)v5 createDirectoryAtPath:v4 withIntermediateDirectories:1 attributes:v6 error:&v17];
  id v8 = v17;

  if ((v7 & 1) == 0)
  {
    id v12 = createMobileActivationError((uint64_t)"store_activation_record", 317, @"com.apple.MobileActivation.ErrorDomain", -1, v8, @"Failed to create %@.", v4);

LABEL_7:
    id v10 = 0;
    if (!a2)
    {
LABEL_10:
      uint64_t v13 = 0;
      goto LABEL_11;
    }
LABEL_8:
    id v12 = v12;
    uint64_t v13 = 0;
    *a2 = v12;
LABEL_11:
    id v9 = v4;
    goto LABEL_12;
  }
  id v9 = [v4 stringByAppendingPathComponent:@"activation_record.plist"];

  id v10 = +[NSMutableDictionary dictionaryWithDictionary:v3];
  id v11 = +[NSNumber numberWithUnsignedChar:2];
  [(NSMutableDictionary *)v10 setObject:v11 forKeyedSubscript:@"LDActivationVersion"];

  id v16 = v8;
  LOBYTE(v11) = store_dict(v9, v10, &v16);
  id v12 = (NSError *)v16;

  if ((v11 & 1) == 0)
  {
    id v14 = createMobileActivationError((uint64_t)"store_activation_record", 327, @"com.apple.MobileActivation.ErrorDomain", -1, v12, @"Failed to write activation record to %@.", v9);

    id v4 = v9;
    id v12 = v14;
    if (!a2) {
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  uint64_t v13 = 1;
LABEL_12:

  return v13;
}

uint64_t handle_unbrick(void *a1, void *a2)
{
  id v7 = 0;
  uint64_t v3 = dealwith_activation(a1, &v7);
  id v4 = v7;
  id v5 = v4;
  if (a2 && (v3 & 1) == 0) {
    *a2 = v4;
  }

  return v3;
}

uint64_t handle_recert(void *a1, void *a2, void *a3, NSError **a4)
{
  id v6 = a1;
  id v7 = a2;
  id v8 = a3;
  id v53 = v8;
  id v54 = v6;
  if (!v7)
  {
    id v31 = createMobileActivationError((uint64_t)"handle_recert", 4419, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Input invalid.");
    id v13 = 0;
    id v25 = 0;
    id v17 = 0;
    id v22 = 0;
    id v52 = 0;
    id v29 = 0;
    id v20 = 0;
    id v11 = 0;
LABEL_23:
    id v16 = 0;
    id v51 = 0;
    goto LABEL_24;
  }
  id v9 = v8;
  id v10 = objc_alloc_init((Class)NSMutableDictionary);
  id v11 = v10;
  if (!v10)
  {
    id v31 = createMobileActivationError((uint64_t)"handle_recert", 4425, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");
    id v13 = 0;
LABEL_22:
    id v25 = 0;
    id v17 = 0;
    id v22 = 0;
    id v52 = 0;
    id v29 = 0;
    id v20 = 0;
    goto LABEL_23;
  }
  if (v9) {
    [v10 addEntriesFromDictionary:v9];
  }
  [v11 setObject:&__kCFBooleanTrue forKeyedSubscript:@"UseEnhancedValidation"];
  [v11 setObject:&__kCFBooleanTrue forKeyedSubscript:@"UseEnhancedValidationWithVersionCheck"];
  id v12 = [v7 objectForKeyedSubscript:@"certify-me"];
  id v13 = isNSDictionary(v12);

  if (!v13)
  {
    id v31 = createMobileActivationError((uint64_t)"handle_recert", 4438, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Message did not contain a certification record.");
    goto LABEL_22;
  }
  id v58 = 0;
  id v14 = extract_account_token(v13, &v58);
  id v15 = v58;
  id v47 = v14;
  if (!v14)
  {
    id v32 = createMobileActivationError((uint64_t)"handle_recert", 4444, @"com.apple.MobileActivation.ErrorDomain", -1, v15, @"Failed to retrieve account token.");

    id v31 = v32;
    goto LABEL_22;
  }
  id v46 = [v9 objectForKeyedSubscript:@"ReCertRandomness"];
  id v16 = (NSDictionary *)isNSString(v46);

  if (!v16)
  {
    id v34 = createMobileActivationError((uint64_t)"handle_recert", 4450, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid nonce.");

    id v31 = v34;
    id v17 = 0;
LABEL_30:
    id v22 = 0;
    id v51 = 0;
    id v52 = 0;
    id v29 = 0;
    id v25 = v46;
    id v20 = v47;
    goto LABEL_24;
  }
  id v17 = [v14 objectForKeyedSubscript:@"ActivationRandomness"];
  id v16 = (NSDictionary *)isNSString(v17);

  if (!v16)
  {
    uint64_t v35 = createMobileActivationError((uint64_t)"handle_recert", 4456, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"No activation randomness in the record.");

    id v31 = v35;
    goto LABEL_30;
  }
  id v45 = v17;
  if (([v46 isEqualToString:v17] & 1) == 0)
  {
    id v36 = createMobileActivationError((uint64_t)"handle_recert", 4461, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"The randomness does not match.");

    id v31 = v36;
    id v22 = 0;
    id v51 = 0;
    id v52 = 0;
    id v29 = 0;
    id v16 = 0;
    id v25 = v46;
    id v20 = v47;
    id v17 = v45;
    goto LABEL_24;
  }
  data_ark_remove(v6, 0, @"ReCertRandomness");
  id v57 = v15;
  char v18 = verify_activation_record_certificates(v6, v13, v11, (NSError **)&v57);
  id v19 = v57;

  id v20 = v47;
  if ((v18 & 1) == 0)
  {
    uint64_t v37 = createMobileActivationError((uint64_t)"handle_recert", 4471, @"com.apple.MobileActivation.ErrorDomain", -1, v19, @"Could not verify record with production certificates.");

    id v31 = v37;
    id v22 = 0;
    id v51 = 0;
    id v52 = 0;
    id v29 = 0;
    id v16 = 0;
    id v17 = v45;
    id v25 = v46;
    goto LABEL_24;
  }
  id v44 = [v13 objectForKeyedSubscript:@"DeviceCertificate"];
  id v21 = isNSData(v44);

  if (!v21)
  {
    id v38 = createMobileActivationError((uint64_t)"handle_recert", 4477, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Activation record does not contain device certificate.");

    id v31 = v38;
    id v22 = 0;
    id v51 = 0;
    id v52 = 0;
    id v16 = 0;
    id v17 = v45;
    id v25 = v46;
LABEL_35:
    id v29 = v44;
    goto LABEL_24;
  }
  id v22 = (__CFString *)data_ark_copy(v6, 0, @"ActivationState");
  id v23 = isNSString(v22);

  if (!v23)
  {
    id v24 = @"Unactivated";

    id v22 = v24;
  }
  id v17 = v45;
  id v25 = v46;
  if (([(__CFString *)v22 isEqualToString:@"Activated"] & 1) == 0)
  {
    unsigned int v39 = createMobileActivationError((uint64_t)"handle_recert", 4487, @"com.apple.MobileActivation.ErrorDomain", -8, 0, @"Device is not activated: %@", v22);

    id v31 = v39;
    id v51 = 0;
    id v52 = 0;
    id v16 = 0;
    goto LABEL_35;
  }
  CFStringRef v61 = @"UseSystemKeychainSharediPadOnly";
  id v62 = &__kCFBooleanTrue;
  id v56 = v19;
  id v43 = +[NSDictionary dictionaryWithObjects:&v62 forKeys:&v61 count:1];
  char v26 = delete_identity(@"lockdown-identities", @"com.apple.lockdown.identity.activation", v43, (NSError **)&v56);
  id v49 = v56;

  if (v26)
  {
    CFStringRef v59 = @"UseSystemKeychainSharediPadOnly";
    unsigned __int8 v60 = &__kCFBooleanTrue;
    id v27 = +[NSDictionary dictionaryWithObjects:&v60 forKeys:&v59 count:1];
    id v52 = data_ark_copy(v54, 0, @"PrivateKey");
    id v28 = isNSData(v52);
    id v55 = v49;
    id v29 = v44;
    id v51 = v27;
    char v42 = store_pem_as_identity(v28, v44, @"lockdown-identities", @"com.apple.lockdown.identity.activation", v27, &v55);
    id v30 = (NSError *)v55;

    if (v42)
    {
      post_notification(@"com.apple.mobile.lockdown.activation_identity_changed");
      unsigned int v50 = 1;
      id v31 = v30;
      id v16 = v43;
      goto LABEL_27;
    }
    id v41 = createMobileActivationError((uint64_t)"handle_recert", 4507, @"com.apple.MobileActivation.ErrorDomain", -1, v30, @"Failed to store activation identity.");

    id v31 = v41;
  }
  else
  {
    char v40 = createMobileActivationError((uint64_t)"handle_recert", 4497, @"com.apple.MobileActivation.ErrorDomain", -1, v49, @"Failed to delete existing identity.");

    id v31 = v40;
    id v51 = 0;
    id v52 = 0;
    id v29 = v44;
  }
  id v16 = v43;
LABEL_24:
  if (a4)
  {
    id v31 = v31;
    unsigned int v50 = 0;
    *a4 = v31;
  }
  else
  {
    unsigned int v50 = 0;
  }
LABEL_27:

  return v50;
}

void __factory_activation_activity_handler_block_invoke(uint64_t a1)
{
  id v1 = data_ark_copy(*(void **)(a1 + 32), 0, @"ActivationState");
  id v2 = isNSString(v1);

  if ([v2 isEqualToString:@"FactoryActivated"])
  {
    maLog((uint64_t)"factory_activation_activity_handler_block_invoke", 0, @"Time's up Cinderella, rebooting!");
    reboot3();
  }
}

void dcrt_oob_load_spreading_activity_handler(void *a1, char a2)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3254779904;
  v5[2] = __dcrt_oob_load_spreading_activity_handler_block_invoke;
  v5[3] = &__block_descriptor_41_e8_32s_e5_v8__0l;
  char v7 = a2;
  id v6 = a1;
  id v2 = v6;
  dispatch_block_t v3 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_DEFAULT, 0, v5);
  id v4 = copyMobileActivationSerialQueue();
  dispatch_async(v4, v3);
}

void __dcrt_oob_load_spreading_activity_handler_block_invoke(uint64_t a1)
{
  id v2 = kMASDCRTUpgradeRequired;
  if (!*(unsigned char *)(a1 + 40)) {
    id v2 = kMADCRTUpgradeRequired;
  }
  dispatch_block_t v3 = *v2;
  id v4 = kMASDCRTOOBActivityID;
  if (!*(unsigned char *)(a1 + 40)) {
    id v4 = kMADCRTOOBActivityID;
  }
  id v5 = *v4;
  if (*(unsigned char *)(a1 + 40)) {
    id v6 = @"SDCRT";
  }
  else {
    id v6 = @"DCRT";
  }
  char v7 = v6;
  if ((dcrtOOBAlreadyPerformed(*(void **)(a1 + 32), *(unsigned __int8 *)(a1 + 40), 1) & 1) == 0)
  {
    data_ark_set(*(void **)(a1 + 32), 0, v3, &__kCFBooleanTrue, 1);
    id v8 = copyLoggingHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543618;
      id v14 = v7;
      __int16 v15 = 2114;
      id v16 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%{public}@ is missing 1+ canonical OIDs. Scheduling %{public}@ OOB activity.", buf, 0x16u);
    }

    id v9 = *(void **)(a1 + 32);
    id v10 = (const char *)[(__CFString *)v5 UTF8String];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = __dcrt_oob_load_spreading_activity_handler_block_invoke_501;
    v11[3] = &__block_descriptor_33_e17_v16__0__DataArk_8l;
    char v12 = *(unsigned char *)(a1 + 40);
    scheduleXPCActivity(v9, v10, 5u, 1, 0x4000u, 0x1000u, v11);
  }
}

void __dcrt_oob_load_spreading_activity_handler_block_invoke_501(uint64_t a1, void *a2)
{
}

void dcrt_oob_activity_handler(void *a1, int a2, int a3)
{
  id v5 = a1;
  id v6 = @"DCRTUpgradeRequired";
  char v7 = @"DCRTOOBRetryAttempt";
  id v8 = @"DCRTIssuanceInFlight";
  id v9 = @"com.apple.mobileactivationd.DCRT.OOB";
  id v10 = @"DCRTOOBForbidden";
  id v11 = @"DCRTOOBLastPerformed";
  char v12 = @"DCRTOOBForbiddenCount";
  if (v5)
  {
    id v31 = v11;
    int v13 = a3;
    if (a2)
    {
      id v30 = @"SDCRTUpgradeRequired";

      id v28 = @"SDCRTOOBRetryAttempt";
      char v26 = @"SDCRTIssuanceInFlight";

      id v14 = @"com.apple.mobileactivationd.SDCRT.OOB";
      __int16 v15 = @"SDCRTOOBForbidden";
      id v16 = v10;
      id v17 = v5;
      char v18 = v15;

      id v19 = @"SDCRTOOBLastPerformed";
      id v20 = @"SDCRTOOBForbiddenCount";

      id v21 = v26;
      char v7 = v28;
      id v27 = v18;
      id v29 = v21;
      id v9 = v14;
      id v5 = v17;
      id v31 = v19;
      char v12 = v20;
      id v22 = @"SDCRT";
      if (!v13)
      {
LABEL_4:
        block[0] = _NSConcreteStackBlock;
        block[1] = 3254779904;
        block[2] = __dcrt_oob_activity_handler_block_invoke_504;
        block[3] = &__block_descriptor_105_e8_32s40s48s56s64s72s80s88s96s_e5_v8__0l;
        id v33 = v5;
        id v6 = v30;
        id v34 = v6;
        char v42 = a2;
        char v7 = v7;
        id v35 = v7;
        id v8 = v29;
        id v36 = v8;
        id v37 = v22;
        id v9 = v9;
        id v38 = v9;
        id v10 = v27;
        id v39 = v10;
        id v11 = v31;
        id v40 = v11;
        char v12 = v12;
        id v41 = v12;
        id v23 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_DEFAULT, 0, block);
        id v24 = copyMobileActivationSerialQueue();
        dispatch_async(v24, v23);

        goto LABEL_9;
      }
    }
    else
    {
      id v27 = v10;
      id v29 = v8;
      id v30 = v6;
      id v22 = @"DCRT";
      if (!v13) {
        goto LABEL_4;
      }
    }
    v43[0] = _NSConcreteStackBlock;
    v43[1] = 3254779904;
    v43[2] = __dcrt_oob_activity_handler_block_invoke;
    v43[3] = &__block_descriptor_57_e8_32s40s48s_e5_v8__0l;
    id v44 = v5;
    char v7 = v7;
    id v45 = v7;
    id v9 = v9;
    id v46 = v9;
    char v47 = a2;
    id v23 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_DEFAULT, 0, v43);
    id v25 = copyMobileActivationSerialQueue();
    dispatch_async(v25, v23);

    id v8 = v29;
    id v6 = v30;
    id v10 = v27;
    id v11 = v31;
    goto LABEL_9;
  }
  id v23 = copyLoggingHandle();
  if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "Invalid input.", buf, 2u);
  }
LABEL_9:
}

void __dcrt_oob_activity_handler_block_invoke(uint64_t a1)
{
  data_ark_remove(*(void **)(a1 + 32), 0, *(void **)(a1 + 40));
  id v2 = *(void **)(a1 + 32);
  dispatch_block_t v3 = (const char *)[*(id *)(a1 + 48) UTF8String];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = __dcrt_oob_activity_handler_block_invoke_2;
  v4[3] = &__block_descriptor_33_e17_v16__0__DataArk_8l;
  char v5 = *(unsigned char *)(a1 + 56);
  scheduleXPCActivity(v2, v3, 5u, 1, 0x4000u, 0x1000u, v4);
}

uint64_t __dcrt_oob_activity_handler_block_invoke_2(uint64_t a1, uint64_t a2)
{
  return dcrt_oob_activity_handler(a2, *(unsigned __int8 *)(a1 + 32), 0);
}

void __dcrt_oob_activity_handler_block_invoke_504(uint64_t a1)
{
  uint64_t v105 = 0;
  id v106 = &v105;
  uint64_t v107 = 0x3032000000;
  char v108 = __Block_byref_object_copy__5;
  id v109 = __Block_byref_object_dispose__5;
  id v110 = 0;
  uint64_t v99 = 0;
  id v100 = &v99;
  uint64_t v101 = 0x3032000000;
  id v102 = __Block_byref_object_copy__5;
  uint64_t v103 = __Block_byref_object_dispose__5;
  id v104 = 0;
  uint64_t v95 = 0;
  id v96 = &v95;
  uint64_t v97 = 0x2020000000;
  int v98 = 0;
  uint64_t v89 = 0;
  char v90 = &v89;
  uint64_t v91 = 0x3032000000;
  id v92 = __Block_byref_object_copy__5;
  id v93 = __Block_byref_object_dispose__5;
  id v94 = 0;
  uint64_t v83 = 0;
  id v84 = &v83;
  uint64_t v85 = 0x3032000000;
  id v86 = __Block_byref_object_copy__5;
  id v87 = __Block_byref_object_dispose__5;
  id v88 = 0;
  id v2 = data_ark_copy(*(void **)(a1 + 32), 0, *(void **)(a1 + 40));
  dispatch_block_t v3 = (void *)v84[5];
  v84[5] = (uint64_t)v2;

  id v4 = isNSNumber((void *)v84[5]);
  BOOL v5 = v4 == 0;

  if (v5)
  {
    id v6 = (void *)v84[5];
    v84[5] = (uint64_t)&__kCFBooleanFalse;
  }
  if (dcrtOOBAlreadyPerformed(*(void **)(a1 + 32), *(unsigned __int8 *)(a1 + 104), 0)
    && ![(id)v84[5] BOOLValue]
    || (id v7 = data_ark_copy(*(void **)(a1 + 32), 0, @"ActivationState"),
        id v8 = isNSString(v7),
        id v9 = (void *)v106[5],
        v106[5] = (uint64_t)v8,
        v9,
        v7,
        use_hactivation())
    || is_virtual_machine()
    || ([(id)v106[5] isEqualToString:@"Activated"] & 1) == 0)
  {
    data_ark_remove(*(void **)(a1 + 32), 0, *(void **)(a1 + 40));
    id v18 = 0;
    id v19 = 0;
    id v20 = 0;
    goto LABEL_12;
  }
  id v10 = data_ark_copy(*(void **)(a1 + 32), 0, *(void **)(a1 + 48));
  id v11 = (void *)v100[5];
  v100[5] = (uint64_t)v10;

  id v12 = isNSNumber((void *)v100[5]);
  BOOL v13 = v12 == 0;

  if (v13)
  {
    id v17 = (void *)v100[5];
    v100[5] = (uint64_t)&off_10027EE88;
    goto LABEL_14;
  }
  id v14 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", (char *)[(id)v100[5] unsignedLongLongValue] + 1);
  __int16 v15 = (void *)v100[5];
  v100[5] = (uint64_t)v14;

  if ((unint64_t)[(id)v100[5] unsignedLongLongValue] > 6)
  {
    id v16 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:");
    id v17 = (void *)v100[5];
    v100[5] = (uint64_t)v16;
LABEL_14:
  }
  data_ark_set(*(void **)(a1 + 32), 0, *(void **)(a1 + 48), (void *)v100[5], 1);
  [(id)v100[5] doubleValue];
  long double v22 = exp2(v21);
  *((_DWORD *)v96 + 6) = (v22 * 60.0);
  id v19 = data_ark_copy(*(void **)(a1 + 32), 0, *(void **)(a1 + 56));
  id v23 = isNSNumber(v19);
  BOOL v24 = v23 == 0;

  if (v24)
  {

    id v19 = &__kCFBooleanFalse;
  }
  if ([v19 BOOLValue])
  {
    id v25 = copyLoggingHandle();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      char v26 = *(void **)(a1 + 64);
      int v27 = *((_DWORD *)v96 + 6);
      *(_DWORD *)buf = 138543874;
      uint64_t v112 = v26;
      __int16 v113 = 2114;
      uint64_t v114 = v26;
      __int16 v115 = 1024;
      int v116 = v27;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "Another %{public}@ request is already in flight, rescheduling %{public}@ OOB for %d seconds.", buf, 0x1Cu);
    }

    id v28 = *(void **)(a1 + 32);
    id v29 = (const char *)[*(id *)(a1 + 72) UTF8String];
    unsigned int v30 = *((_DWORD *)v96 + 6);
    v81[0] = _NSConcreteStackBlock;
    v81[1] = 3221225472;
    v81[2] = __dcrt_oob_activity_handler_block_invoke_506;
    v81[3] = &__block_descriptor_33_e17_v16__0__DataArk_8l;
    char v82 = *(unsigned char *)(a1 + 104);
    scheduleXPCActivity(v28, v29, v30, 1, 0x4000u, 0x1000u, v81);
    id v18 = 0;
    goto LABEL_36;
  }
  id v18 = data_ark_copy(*(void **)(a1 + 32), 0, @"UCRTIssuanceInFlight");
  id v31 = isNSNumber(v18);
  BOOL v32 = v31 == 0;

  if (v32)
  {

    id v18 = &__kCFBooleanFalse;
  }
  if ([v18 BOOLValue])
  {
    id v33 = copyLoggingHandle();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
    {
      id v34 = *(void **)(a1 + 64);
      int v35 = *((_DWORD *)v96 + 6);
      *(_DWORD *)buf = 138543618;
      uint64_t v112 = v34;
      __int16 v113 = 1024;
      LODWORD(v114) = v35;
      _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "UCRT request is in flight, rescheduling %{public}@ OOB for %d seconds.", buf, 0x12u);
    }

    id v36 = *(void **)(a1 + 32);
    id v37 = (const char *)[*(id *)(a1 + 72) UTF8String];
    unsigned int v38 = *((_DWORD *)v96 + 6);
    id v39 = v80;
    v80[0] = _NSConcreteStackBlock;
    v80[1] = 3221225472;
    id v40 = __dcrt_oob_activity_handler_block_invoke_507;
LABEL_35:
    v39[2] = v40;
    v39[3] = &__block_descriptor_33_e17_v16__0__DataArk_8l;
    *((unsigned char *)v39 + 32) = *(unsigned char *)(a1 + 104);
    scheduleXPCActivity(v36, v37, v38, 1, 0x4000u, 0x1000u, v39);
LABEL_36:
    id v20 = 0;
    goto LABEL_12;
  }
  if ((ucrtOOBAlreadyPerformed(*(void **)(a1 + 32)) & 1) == 0)
  {
    char v47 = copyLoggingHandle();
    if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v48 = *(void **)(a1 + 64);
      int v49 = *((_DWORD *)v96 + 6);
      *(_DWORD *)buf = 138543618;
      uint64_t v112 = v48;
      __int16 v113 = 1024;
      LODWORD(v114) = v49;
      _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "UCRT OOB not performed yet. Rescheduling %{public}@ OOB for %d seconds.", buf, 0x12u);
    }

    id v36 = *(void **)(a1 + 32);
    id v37 = (const char *)[*(id *)(a1 + 72) UTF8String];
    unsigned int v38 = *((_DWORD *)v96 + 6);
    id v39 = v79;
    v79[0] = _NSConcreteStackBlock;
    v79[1] = 3221225472;
    id v40 = __dcrt_oob_activity_handler_block_invoke_508;
    goto LABEL_35;
  }
  id v78 = 0;
  char v41 = ucrtHealingSupported(&v78);
  id v42 = v78;
  if (!v42)
  {
    data_ark_set(*(void **)(a1 + 32), 0, *(void **)(a1 + 56), &__kCFBooleanTrue, 0);
    unsigned int v50 = copyLoggingHandle();
    if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
    {
      id v51 = *(void **)(a1 + 64);
      *(_DWORD *)buf = 138543362;
      uint64_t v112 = v51;
      _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "Performing %{public}@ OOB.", buf, 0xCu);
    }

    [*(id *)(a1 + 72) UTF8String];
    uint64_t v52 = os_transaction_create();
    id v53 = (void *)v90[5];
    v90[5] = v52;

    id v54 = *(void **)(a1 + 32);
    char v55 = *(unsigned char *)(a1 + 104);
    v59[0] = _NSConcreteStackBlock;
    v59[1] = 3254779904;
    v59[2] = __dcrt_oob_activity_handler_block_invoke_510;
    v59[3] = &__block_descriptor_146_e8_32s40s48s56s64s72s80s88s96s104r112r120r128r136r_e34_v24__0__NSDictionary_8__NSError_16l;
    id v69 = &v83;
    id v60 = v54;
    id v56 = *(id *)(a1 + 40);
    char v74 = *(unsigned char *)(a1 + 104);
    id v61 = v56;
    char v70 = &v105;
    char v75 = v41;
    id v62 = *(id *)(a1 + 80);
    id v63 = *(id *)(a1 + 64);
    id v64 = *(id *)(a1 + 88);
    id v65 = *(id *)(a1 + 96);
    id v66 = *(id *)(a1 + 48);
    id v71 = &v99;
    uint64_t v72 = &v95;
    id v67 = *(id *)(a1 + 72);
    id v68 = *(id *)(a1 + 56);
    SecCertificateRef v73 = &v89;
    performDCRTOOB(v60, v55, v59);

    goto LABEL_36;
  }
  id v20 = v42;
  id v43 = copyLoggingHandle();
  if (os_log_type_enabled(v43, OS_LOG_TYPE_FAULT))
  {
    id v57 = *(void **)(a1 + 64);
    int v58 = *((_DWORD *)v96 + 6);
    *(_DWORD *)buf = 138543874;
    uint64_t v112 = v20;
    __int16 v113 = 2114;
    uint64_t v114 = v57;
    __int16 v115 = 1024;
    int v116 = v58;
    _os_log_fault_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_FAULT, "Failed to query UCRT healing support (%{public}@). Rescheduling %{public}@ OOB for %d seconds.", buf, 0x1Cu);
  }

  id v44 = *(void **)(a1 + 32);
  id v45 = (const char *)[*(id *)(a1 + 72) UTF8String];
  unsigned int v46 = *((_DWORD *)v96 + 6);
  v76[0] = _NSConcreteStackBlock;
  v76[1] = 3221225472;
  v76[2] = __dcrt_oob_activity_handler_block_invoke_509;
  v76[3] = &__block_descriptor_33_e17_v16__0__DataArk_8l;
  char v77 = *(unsigned char *)(a1 + 104);
  scheduleXPCActivity(v44, v45, v46, 1, 0x4000u, 0x1000u, v76);
LABEL_12:

  _Block_object_dispose(&v83, 8);
  _Block_object_dispose(&v89, 8);

  _Block_object_dispose(&v95, 8);
  _Block_object_dispose(&v99, 8);

  _Block_object_dispose(&v105, 8);
}

void sub_10002F6CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose(&a55, 8);
  _Block_object_dispose((const void *)(v55 - 240), 8);
  _Block_object_dispose((const void *)(v55 - 208), 8);
  _Block_object_dispose((const void *)(v55 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t __dcrt_oob_activity_handler_block_invoke_506(uint64_t a1, uint64_t a2)
{
  return dcrt_oob_activity_handler(a2, *(unsigned __int8 *)(a1 + 32), 0);
}

uint64_t __dcrt_oob_activity_handler_block_invoke_507(uint64_t a1, uint64_t a2)
{
  return dcrt_oob_activity_handler(a2, *(unsigned __int8 *)(a1 + 32), 0);
}

uint64_t __dcrt_oob_activity_handler_block_invoke_508(uint64_t a1, uint64_t a2)
{
  return dcrt_oob_activity_handler(a2, *(unsigned __int8 *)(a1 + 32), 0);
}

uint64_t __dcrt_oob_activity_handler_block_invoke_509(uint64_t a1, uint64_t a2)
{
  return dcrt_oob_activity_handler(a2, *(unsigned __int8 *)(a1 + 32), 0);
}

void performDCRTOOB(void *a1, char a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  id v7 = dispatch_get_global_queue(0, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3254779904;
  block[2] = __performDCRTOOB_block_invoke;
  block[3] = &__block_descriptor_49_e8_32s40bs_e5_v8__0l;
  id v11 = v5;
  id v12 = v6;
  char v13 = a2;
  id v8 = v6;
  id v9 = v5;
  dispatch_async(v7, block);
}

void __dcrt_oob_activity_handler_block_invoke_510(uint64_t a1, id a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3254779904;
  block[2] = __dcrt_oob_activity_handler_block_invoke_2_511;
  block[3] = &__block_descriptor_162_e8_32s40s48s56s64s72s80s88s96s104s112s120r128r136r144r152r_e5_v8__0l;
  uint64_t v7 = *(void *)(a1 + 104);
  id v16 = v6;
  uint64_t v27 = v7;
  id v17 = *(id *)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  __int16 v31 = *(_WORD *)(a1 + 144);
  uint64_t v28 = *(void *)(a1 + 112);
  id v18 = v8;
  id v19 = v5;
  id v20 = *(id *)(a1 + 48);
  id v21 = *(id *)(a1 + 56);
  id v22 = *(id *)(a1 + 64);
  id v23 = *(id *)(a1 + 72);
  id v24 = *(id *)(a1 + 80);
  long long v29 = *(_OWORD *)(a1 + 120);
  id v25 = *(id *)(a1 + 88);
  id v9 = *(id *)(a1 + 96);
  uint64_t v10 = *(void *)(a1 + 136);
  id v26 = v9;
  uint64_t v30 = v10;
  id v11 = v5;
  id v12 = v6;
  dispatch_block_t v13 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_DEFAULT, 0, block);
  id v14 = copyMobileActivationSerialQueue();
  dispatch_async(v14, v13);
}

void __dcrt_oob_activity_handler_block_invoke_2_511(uint64_t a1)
{
  if (mobileactivationErrorHasDomainAndErrorCode(*(void **)(a1 + 32), @"com.apple.MobileActivation.ErrorDomain", (id)0xFFFFFFFFFFFFFFFDLL))goto LABEL_9; {
  id v2 = data_ark_copy(*(void **)(a1 + 40), 0, *(void **)(a1 + 48));
  }
  uint64_t v3 = *(void *)(*(void *)(a1 + 120) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  if (dcrtOOBAlreadyPerformed(*(void **)(a1 + 40), *(unsigned __int8 *)(a1 + 160), 0))
  {
    if (![*(id *)(*(void *)(*(void *)(a1 + 120) + 8) + 40) BOOLValue]) {
      goto LABEL_9;
    }
  }
  id v5 = data_ark_copy(*(void **)(a1 + 40), 0, @"ActivationState");
  id v6 = isNSString(v5);
  uint64_t v7 = *(void *)(*(void *)(a1 + 128) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  id v9 = 0;
  id v10 = 0;
  id v11 = 0;
  id v12 = 0;
  id v13 = 0;
  id v14 = 0;
  if (use_hactivation())
  {
LABEL_10:
    data_ark_remove(*(void **)(a1 + 40), 0, *(void **)(a1 + 48));
    goto LABEL_11;
  }
  if (is_virtual_machine()
    || ![*(id *)(*(void *)(*(void *)(a1 + 128) + 8) + 40) isEqualToString:@"Activated"])
  {
LABEL_9:
    id v9 = 0;
    id v10 = 0;
    id v11 = 0;
    id v12 = 0;
    id v13 = 0;
    id v14 = 0;
    goto LABEL_10;
  }
  id v15 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"ServerResponseCode"];
  id v16 = isNSNumber(v15);

  if (v16)
  {
    id v17 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"ServerResponseCode"];
    signed int v18 = [v17 intValue];
  }
  else
  {
    signed int v18 = 0;
  }
  id v21 = *(void **)(a1 + 32);
  if (v21)
  {
    id v14 = v21;
    if (*(unsigned char *)(a1 + 161)
      || !mobileactivationErrorHasDomainAndErrorCode(*(void **)(a1 + 32), @"com.apple.MobileActivation.ErrorDomain", (id)0xFFFFFFFFFFFFFFF0))
    {
      id v13 = 0;
      id v12 = 0;
      char v22 = 0;
    }
    else
    {
      char v22 = 1;
      data_ark_set(*(void **)(a1 + 40), 0, *(void **)(a1 + 64), &__kCFBooleanTrue, 1);
      id v13 = 0;
      id v12 = 0;
    }
    id v11 = 0;
    id v10 = 0;
    id v9 = 0;
    goto LABEL_19;
  }
  id v12 = objc_alloc_init((Class)NSMutableDictionary);
  if (!v12)
  {
    id v14 = createMobileActivationError((uint64_t)"dcrt_oob_activity_handler_block_invoke_2", 4785, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");
    id v9 = 0;
    id v10 = 0;
    id v11 = 0;
    goto LABEL_45;
  }
  id v40 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 160)];
  [v12 setObject:v40 forKeyedSubscript:@"sdcrtAttestation"];

  id v9 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"ServerResponseDate"];
  id v11 = isNSDate(v9);

  if (!v11)
  {
    id v14 = createMobileActivationError((uint64_t)"dcrt_oob_activity_handler_block_invoke_2", 4793, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve server response date.");
    id v10 = 0;
LABEL_45:
    char v22 = 0;
    id v13 = 0;
    if (!v14) {
      goto LABEL_26;
    }
    goto LABEL_19;
  }
  [v12 setObject:v9 forKeyedSubscript:@"ServerResponseDate"];
  id v41 = +[GestaltHlpr getSharedInstance];
  id v13 = [v41 copyAnswer:@"BuildVersion"];

  id v11 = isNSString(v13);
  if (!v11)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"dcrt_oob_activity_handler_block_invoke_2", 4801, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve OS build.");
LABEL_50:
    id v14 = MobileActivationError;
    id v10 = 0;
LABEL_51:
    char v22 = 0;
    if (!v14) {
      goto LABEL_26;
    }
    goto LABEL_19;
  }
  id v11 = objc_alloc_init((Class)NSMutableData);
  if (!v11)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"dcrt_oob_activity_handler_block_invoke_2", 4807, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create data.");
    goto LABEL_50;
  }
  id v42 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"RKCertification"];
  id v10 = isNSArray(v42);

  if (!v10 || [v10 count] != (id)2)
  {
    id v14 = createMobileActivationError((uint64_t)"dcrt_oob_activity_handler_block_invoke_2", 4813, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve %@.", *(void *)(a1 + 72));
    goto LABEL_51;
  }
  id v43 = [v10 objectAtIndexedSubscript:0];
  [v11 appendData:v43];

  id v44 = [v10 objectAtIndexedSubscript:1];
  [v11 appendData:v44];

  id v45 = *(void **)(a1 + 40);
  id v53 = 0;
  char v46 = storeDCRT(v45, v11, v12, &v53);
  id v14 = (NSError *)v53;
  if ((v46 & 1) == 0)
  {
    unsigned int v50 = createMobileActivationError((uint64_t)"dcrt_oob_activity_handler_block_invoke_2", 4821, @"com.apple.MobileActivation.ErrorDomain", -1, v14, @"Failed to store %@.", *(void *)(a1 + 72));

    char v22 = 0;
    id v14 = v50;
    if (!v50) {
      goto LABEL_26;
    }
    goto LABEL_19;
  }
  data_ark_set(*(void **)(a1 + 40), 0, *(void **)(a1 + 80), v13, 1);
  data_ark_remove(*(void **)(a1 + 40), 0, *(void **)(a1 + 88));
  data_ark_remove(*(void **)(a1 + 40), 0, *(void **)(a1 + 96));
  char v47 = copyLoggingHandle();
  if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v48 = *(void *)(a1 + 72);
    *(_DWORD *)buf = 138543362;
    uint64_t v55 = v48;
    _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "Successfully performed %{public}@ OOB.", buf, 0xCu);
  }

  char v22 = 1;
  if (v14)
  {
LABEL_19:
    id v23 = copyLoggingHandle();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v24 = *(void *)(a1 + 72);
      *(_DWORD *)buf = 138543618;
      uint64_t v55 = v24;
      __int16 v56 = 2114;
      id v57 = v14;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "Failed to perform %{public}@ OOB: %{public}@", buf, 0x16u);
    }

    if (v18)
    {
      if (*(unsigned char *)(a1 + 160)) {
        uint64_t v26 = 33;
      }
      else {
        uint64_t v26 = 29;
      }
      writeSplunkLog(*(void **)(a1 + 40), v26, v18, (uint64_t)"dcrt_oob_activity_handler_block_invoke", 4841, 0, @"%@", v25, (uint64_t)v14);
    }
  }
LABEL_26:
  if (v22) {
    goto LABEL_10;
  }
  id v27 = data_ark_copy(*(void **)(a1 + 40), 0, *(void **)(a1 + 96));
  uint64_t v28 = *(void *)(*(void *)(a1 + 136) + 8);
  long long v29 = *(void **)(v28 + 40);
  *(void *)(v28 + 40) = v27;

  id v30 = isNSNumber(*(void **)(*(void *)(*(void *)(a1 + 136) + 8) + 40));
  if (!v30)
  {
    uint64_t v31 = *(void *)(*(void *)(a1 + 136) + 8);
    BOOL v32 = *(void **)(v31 + 40);
    *(void *)(v31 + 40) = &off_10027EE88;
  }
  [*(id *)(*(void *)(*(void *)(a1 + 136) + 8) + 40) doubleValue];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 144) + 8) + 24) = (exp2(v33) * 60.0);
  id v34 = copyLoggingHandle();
  if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v35 = *(void *)(a1 + 72);
    int v36 = *(_DWORD *)(*(void *)(*(void *)(a1 + 144) + 8) + 24);
    *(_DWORD *)buf = 138543618;
    uint64_t v55 = v35;
    __int16 v56 = 1024;
    LODWORD(v57) = v36;
    _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "Rescheduling %{public}@ OOB for %d seconds.", buf, 0x12u);
  }

  id v37 = *(void **)(a1 + 40);
  unsigned int v38 = (const char *)[*(id *)(a1 + 104) UTF8String];
  unsigned int v39 = *(_DWORD *)(*(void *)(*(void *)(a1 + 144) + 8) + 24);
  v51[0] = _NSConcreteStackBlock;
  v51[1] = 3221225472;
  v51[2] = __dcrt_oob_activity_handler_block_invoke_513;
  void v51[3] = &__block_descriptor_33_e17_v16__0__DataArk_8l;
  char v52 = *(unsigned char *)(a1 + 160);
  scheduleXPCActivity(v37, v38, v39, 1, 0x4000u, 0x1000u, v51);
LABEL_11:
  data_ark_set(*(void **)(a1 + 40), 0, *(void **)(a1 + 112), &__kCFBooleanFalse, 0);
  uint64_t v19 = *(void *)(*(void *)(a1 + 152) + 8);
  id v20 = *(void **)(v19 + 40);
  *(void *)(v19 + 40) = 0;
}

uint64_t __dcrt_oob_activity_handler_block_invoke_513(uint64_t a1, uint64_t a2)
{
  return dcrt_oob_activity_handler(a2, *(unsigned __int8 *)(a1 + 32), 0);
}

void __copy_helper_block_e8_32s40s48s56s64s72s80s88s96s104s112s120r128r136r144r152r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  id v8 = *(id *)(a2 + 64);
  id v9 = *(id *)(a2 + 72);
  id v10 = *(id *)(a2 + 80);
  id v11 = *(id *)(a2 + 88);
  id v12 = *(id *)(a2 + 96);
  id v13 = *(id *)(a2 + 104);
  id v14 = *(id *)(a2 + 112);
  _Block_object_assign((void *)(a1 + 120), *(const void **)(a2 + 120), 8);
  _Block_object_assign((void *)(a1 + 128), *(const void **)(a2 + 128), 8);
  _Block_object_assign((void *)(a1 + 136), *(const void **)(a2 + 136), 8);
  _Block_object_assign((void *)(a1 + 144), *(const void **)(a2 + 144), 8);
  id v15 = *(const void **)(a2 + 152);

  _Block_object_assign((void *)(a1 + 152), v15, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64s72s80s88s96s104s112s120r128r136r144r152r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 152), 8);
  _Block_object_dispose(*(const void **)(a1 + 144), 8);
  _Block_object_dispose(*(const void **)(a1 + 136), 8);
  _Block_object_dispose(*(const void **)(a1 + 128), 8);
  _Block_object_dispose(*(const void **)(a1 + 120), 8);

  id v2 = *(void **)(a1 + 32);
}

void __copy_helper_block_e8_32s40s48s56s64s72s80s88s96s104r112r120r128r136r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  id v8 = *(id *)(a2 + 64);
  id v9 = *(id *)(a2 + 72);
  id v10 = *(id *)(a2 + 80);
  id v11 = *(id *)(a2 + 88);
  id v12 = *(id *)(a2 + 96);
  _Block_object_assign((void *)(a1 + 104), *(const void **)(a2 + 104), 8);
  _Block_object_assign((void *)(a1 + 112), *(const void **)(a2 + 112), 8);
  _Block_object_assign((void *)(a1 + 120), *(const void **)(a2 + 120), 8);
  _Block_object_assign((void *)(a1 + 128), *(const void **)(a2 + 128), 8);
  id v13 = *(const void **)(a2 + 136);

  _Block_object_assign((void *)(a1 + 136), v13, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64s72s80s88s96s104r112r120r128r136r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 136), 8);
  _Block_object_dispose(*(const void **)(a1 + 128), 8);
  _Block_object_dispose(*(const void **)(a1 + 120), 8);
  _Block_object_dispose(*(const void **)(a1 + 112), 8);
  _Block_object_dispose(*(const void **)(a1 + 104), 8);

  id v2 = *(void **)(a1 + 32);
}

id __copy_helper_block_e8_32s40s48s56s64s72s80s88s96s(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)(a2 + 32);
  id v4 = *(id *)(a2 + 40);
  id v5 = *(id *)(a2 + 48);
  id v6 = *(id *)(a2 + 56);
  id v7 = *(id *)(a2 + 64);
  id v8 = *(id *)(a2 + 72);
  id v9 = *(id *)(a2 + 80);
  id v10 = *(id *)(a2 + 88);
  id v11 = *(void **)(a2 + 96);

  return v11;
}

void __destroy_helper_block_e8_32s40s48s56s64s72s80s88s96s(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
}

void collection_activity_handler(void *a1, int a2)
{
  id v3 = a1;
  id v4 = v3;
  if (v3)
  {
    if (a2)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3254779904;
      block[2] = __collection_activity_handler_block_invoke;
      block[3] = &__block_descriptor_40_e8_32s_e5_v8__0l;
      id v12 = v3;
      dispatch_block_t v5 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_DEFAULT, 0, block);
      id v6 = copyMobileActivationSerialQueue();
      dispatch_async(v6, v5);

      id v7 = v12;
    }
    else
    {
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3254779904;
      v9[2] = __collection_activity_handler_block_invoke_3;
      v9[3] = &__block_descriptor_40_e8_32s_e5_v8__0l;
      id v10 = v3;
      dispatch_block_t v5 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_DEFAULT, 0, v9);
      id v8 = copyMobileActivationSerialQueue();
      dispatch_async(v8, v5);

      id v7 = v10;
    }
  }
  else
  {
    maLog((uint64_t)"collection_activity_handler", 0, @"Invalid input.");
  }
}

void __collection_activity_handler_block_invoke(uint64_t a1)
{
  data_ark_remove(*(void **)(a1 + 32), 0, @"CollectionRetryAttempt");
  id v2 = *(void **)(a1 + 32);
  id v3 = (const char *)[@"com.apple.mobileactivationd.collection" UTF8String];

  scheduleXPCActivity(v2, v3, 0x1Eu, 1, 0x5000u, 0x1000u, &__block_literal_global_518);
}

void __collection_activity_handler_block_invoke_2(id a1, DataArk *a2)
{
}

void __collection_activity_handler_block_invoke_3(uint64_t a1)
{
  uint64_t v49 = 0;
  unsigned int v50 = &v49;
  uint64_t v51 = 0x3032000000;
  char v52 = __Block_byref_object_copy__5;
  id v53 = __Block_byref_object_dispose__5;
  id v54 = 0;
  uint64_t v43 = 0;
  id v44 = &v43;
  uint64_t v45 = 0x3032000000;
  char v46 = __Block_byref_object_copy__5;
  char v47 = __Block_byref_object_dispose__5;
  id v48 = 0;
  uint64_t v39 = 0;
  id v40 = &v39;
  uint64_t v41 = 0x2020000000;
  int v42 = 0;
  uint64_t v33 = 0;
  id v34 = &v33;
  uint64_t v35 = 0x3032000000;
  int v36 = __Block_byref_object_copy__5;
  id v37 = __Block_byref_object_dispose__5;
  id v38 = 0;
  if (collectionAlreadyPerformed(*(void **)(a1 + 32))
    || (id v2 = data_ark_copy(*(void **)(a1 + 32), 0, @"ActivationState"),
        id v3 = isNSString(v2),
        id v4 = (void *)v50[5],
        v50[5] = (uint64_t)v3,
        v4,
        v2,
        use_hactivation())
    || is_virtual_machine()
    || ![(id)v50[5] isEqualToString:@"Activated"])
  {
    id v13 = 0;
    goto LABEL_9;
  }
  id v5 = data_ark_copy(*(void **)(a1 + 32), 0, @"CollectionRetryAttempt");
  id v6 = (void *)v44[5];
  v44[5] = (uint64_t)v5;

  id v7 = isNSNumber((void *)v44[5]);
  BOOL v8 = v7 == 0;

  if (v8)
  {
    id v12 = (void *)v44[5];
    v44[5] = (uint64_t)&off_10027EE88;
    goto LABEL_11;
  }
  id v9 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", (char *)[(id)v44[5] unsignedLongLongValue] + 1);
  id v10 = (void *)v44[5];
  v44[5] = (uint64_t)v9;

  if ((unint64_t)[(id)v44[5] unsignedLongLongValue] > 6)
  {
    id v11 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:");
    id v12 = (void *)v44[5];
    v44[5] = (uint64_t)v11;
LABEL_11:
  }
  data_ark_set(*(void **)(a1 + 32), 0, @"CollectionRetryAttempt", (void *)v44[5], 1);
  [(id)v44[5] doubleValue];
  long double v15 = exp2(v14);
  *((_DWORD *)v40 + 6) = (v15 * 60.0);
  id v13 = data_ark_copy(*(void **)(a1 + 32), 0, @"InFieldCollectionInFlight");
  id v16 = isNSNumber(v13);
  BOOL v17 = v16 == 0;

  if (v17)
  {

    id v13 = &__kCFBooleanFalse;
  }
  if ([v13 BOOLValue])
  {
    signed int v18 = copyLoggingHandle();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      int v19 = *((_DWORD *)v40 + 6);
      *(_DWORD *)buf = 67109120;
      int v56 = v19;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Collection request is in flight, rescheduling collection for %d seconds.", buf, 8u);
    }

    id v20 = *(void **)(a1 + 32);
    id v21 = (const char *)[@"com.apple.mobileactivationd.collection" UTF8String];
    scheduleXPCActivity(v20, v21, *((_DWORD *)v40 + 6), 1, 0x5000u, 0x1000u, &__block_literal_global_521);
  }
  else
  {
    char v22 = copyLoggingHandle();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Performing collection.", buf, 2u);
    }

    [@"com.apple.mobileactivationd.collection" UTF8String];
    uint64_t v23 = os_transaction_create();
    uint64_t v24 = (void *)v34[5];
    void v34[5] = v23;

    uint64_t v25 = *(void **)(a1 + 32);
    id v26 = copy_current_process_name();
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3254779904;
    void v27[2] = __collection_activity_handler_block_invoke_522;
    v27[3] = &__block_descriptor_72_e8_32s40r48r56r64r_e48_v40__0__NSData_8__NSDictionary_16q24__NSError_32l;
    id v28 = *(id *)(a1 + 32);
    long long v29 = &v49;
    id v30 = &v39;
    uint64_t v31 = &v43;
    BOOL v32 = &v33;
    performInFieldCollection(v25, 0, v26, v27);
  }
LABEL_9:

  _Block_object_dispose(&v33, 8);
  _Block_object_dispose(&v39, 8);
  _Block_object_dispose(&v43, 8);

  _Block_object_dispose(&v49, 8);
}

void sub_100030F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 112), 8);
  _Unwind_Resume(a1);
}

void __collection_activity_handler_block_invoke_519(id a1, DataArk *a2)
{
}

void __collection_activity_handler_block_invoke_522(uint64_t a1, id a2, void *a3, uint64_t a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a5;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3254779904;
  block[2] = __collection_activity_handler_block_invoke_2_523;
  block[3] = &__block_descriptor_104_e8_32s40s48s56s64r72r80r88r_e5_v8__0l;
  id v12 = *(id *)(a1 + 32);
  uint64_t v26 = a4;
  id v20 = v12;
  id v21 = v11;
  id v22 = v10;
  id v23 = v9;
  long long v13 = *(_OWORD *)(a1 + 56);
  long long v24 = *(_OWORD *)(a1 + 40);
  long long v25 = v13;
  id v14 = v9;
  id v15 = v10;
  id v16 = v11;
  dispatch_block_t v17 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_DEFAULT, 0, block);
  signed int v18 = copyMobileActivationSerialQueue();
  dispatch_async(v18, v17);
}

void __collection_activity_handler_block_invoke_2_523(uint64_t a1)
{
  if (collectionAlreadyPerformed(*(void **)(a1 + 32)))
  {
    id v2 = 0;
    id v3 = 0;
    id v4 = 0;
    id v5 = 0;
    id v6 = 0;
    id v7 = 0;
    id v8 = 0;
    id v9 = 0;
    id v10 = 0;
    goto LABEL_32;
  }
  id v11 = data_ark_copy(*(void **)(a1 + 32), 0, @"ActivationState");
  id v12 = isNSString(v11);
  uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8);
  id v14 = *(void **)(v13 + 40);
  *(void *)(v13 + 40) = v12;

  id v2 = 0;
  id v3 = 0;
  id v4 = 0;
  id v5 = 0;
  id v6 = 0;
  id v7 = 0;
  id v8 = 0;
  id v9 = 0;
  id v10 = 0;
  if (![*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) isEqualToString:@"Activated"])goto LABEL_32; {
  id v10 = *(id *)(a1 + 96);
  }
  if (v10 == (id)200)
  {
    id v10 = [*(id *)(a1 + 48) objectForKeyedSubscript:@"X-Apple-Invalid-Reason"];
    id v15 = [*(id *)(a1 + 48) objectForKeyedSubscript:@"X-Apple-Retry-After"];
    id v16 = isNSString(v10);
    id v58 = v15;
    if (v16)
    {

      goto LABEL_16;
    }
    id v23 = isNSNumber(v15);

    if (v23)
    {
LABEL_16:
      uint64_t v24 = *(void *)(a1 + 96);
      long long v25 = *(void **)(a1 + 40);
      uint64_t v26 = +[NSHTTPURLResponse localizedStringForStatusCode:v24];
      id v27 = createMobileActivationError((uint64_t)"collection_activity_handler_block_invoke_2", 5008, @"com.apple.MobileActivation.ServerErrorDomain", v24, v25, @"Server error: %ld (%@) / %@ / %@", v24, v26, v10, v58);

      uint64_t v28 = *(void *)(a1 + 96);
      uint64_t v29 = +[NSHTTPURLResponse localizedStringForStatusCode:v28];
      id v3 = createMobileActivationError((uint64_t)"collection_activity_handler_block_invoke_2", 5008, @"com.apple.MobileActivation.ErrorDomain", -6, v27, @"Server error: %ld (%@) / %@ / %@", v28, v29, v10, v58);

      id v30 = v27;
      id v9 = v58;

      id v2 = 0;
      char v17 = 0;
      id v4 = 0;
      id v5 = 0;
      id v6 = 0;
      id v7 = 0;
      id v8 = 0;
      if (!v3) {
        goto LABEL_24;
      }
      goto LABEL_17;
    }
    if (*(void *)(a1 + 56))
    {
      id v46 = +[GestaltHlpr getSharedInstance];
      id v2 = [v46 copyAnswer:@"BuildVersion"];

      id v47 = isNSString(v2);
      if (v47)
      {
        id v7 = [[MACollectionInterface alloc] initWithContext:*(void *)(a1 + 32)];
        if (v7)
        {
          uint64_t v48 = *(void *)(a1 + 56);
          id v61 = 0;
          id v8 = +[NSJSONSerialization JSONObjectWithData:v48 options:0 error:&v61];
          id v49 = v61;
          unsigned int v50 = v49;
          if (v8)
          {
            id v6 = [v8 objectForKeyedSubscript:@"suinfo"];
            id v51 = isNSString(v6);

            if (v51)
            {
              id v5 = [objc_alloc((Class)NSData) initWithBase64EncodedString:v6 options:1];
              if (v5)
              {
                id v60 = v50;
                unsigned __int8 v52 = [(MACollectionInterface *)v7 processSUInfo:v5 withError:&v60];
                id v3 = (NSError *)v60;

                if (v52)
                {
                  data_ark_remove(*(void **)(a1 + 32), 0, @"PCRTToken");
                  id v4 = [*(id *)(a1 + 48) objectForKeyedSubscript:@"x-iservice-token"];
                  id v53 = isNSString(v4);

                  if (v53) {
                    data_ark_set(*(void **)(a1 + 32), 0, @"PCRTToken", v4, 1);
                  }
                  data_ark_set(*(void **)(a1 + 32), 0, @"CollectionLastPerformed", v2, 1);
                  data_ark_remove(*(void **)(a1 + 32), 0, @"CollectionRetryAttempt");
                  id v54 = copyLoggingHandle();
                  if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_WORD *)buf = 0;
                    _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, "Successfully performed collection.", buf, 2u);
                  }

                  char v17 = 1;
                }
                else
                {
                  uint64_t v55 = createMobileActivationError((uint64_t)"collection_activity_handler_block_invoke_2", 5048, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to process SUInfo: %@", v3);

                  char v17 = 0;
                  id v4 = 0;
                  id v3 = v55;
                }
              }
              else
              {
                id v3 = createMobileActivationError((uint64_t)"collection_activity_handler_block_invoke_2", 5043, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to decode SUInfo.");

                char v17 = 0;
                id v4 = 0;
              }
            }
            else
            {
              id v3 = createMobileActivationError((uint64_t)"collection_activity_handler_block_invoke_2", 5037, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid SUInfo: %@", v6);

              char v17 = 0;
              id v4 = 0;
              id v5 = 0;
            }
          }
          else
          {
            id v3 = createMobileActivationError((uint64_t)"collection_activity_handler_block_invoke_2", 5031, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to deserialize JSON data: %@", v49);

            char v17 = 0;
            id v4 = 0;
            id v5 = 0;
            id v6 = 0;
          }
LABEL_49:
          id v9 = v58;
          if (!v3) {
            goto LABEL_24;
          }
          goto LABEL_17;
        }
        id v3 = createMobileActivationError((uint64_t)"collection_activity_handler_block_invoke_2", 5025, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create collection interface.");
        char v17 = 0;
        id v4 = 0;
        id v5 = 0;
        id v6 = 0;
LABEL_48:
        id v8 = 0;
        goto LABEL_49;
      }
      id v3 = createMobileActivationError((uint64_t)"collection_activity_handler_block_invoke_2", 5019, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve OS build.");
    }
    else
    {
      id v3 = createMobileActivationError((uint64_t)"collection_activity_handler_block_invoke_2", 5013, @"com.apple.MobileActivation.ErrorDomain", -6, *(void **)(a1 + 40), @"Invalid server response.");
      id v2 = 0;
    }
    char v17 = 0;
    id v4 = 0;
    id v5 = 0;
    id v6 = 0;
    id v7 = 0;
    goto LABEL_48;
  }
  if (v10)
  {
    if (v10 == (id)-1)
    {
      id v3 = createMobileActivationError((uint64_t)"collection_activity_handler_block_invoke_2", 4994, @"com.apple.MobileActivation.ErrorDomain", -6, *(void **)(a1 + 40), @"Internal error.");
    }
    else
    {
      signed int v18 = *(void **)(a1 + 40);
      int v19 = +[NSHTTPURLResponse localizedStringForStatusCode:*(void *)(a1 + 96)];
      id v20 = createMobileActivationError((uint64_t)"collection_activity_handler_block_invoke_2", 5000, @"com.apple.MobileActivation.ServerErrorDomain", (uint64_t)v10, v18, @"Server error: %ld (%@)", v10, v19);

      uint64_t v21 = *(void *)(a1 + 96);
      id v22 = +[NSHTTPURLResponse localizedStringForStatusCode:v21];
      id v3 = createMobileActivationError((uint64_t)"collection_activity_handler_block_invoke_2", 5000, @"com.apple.MobileActivation.ErrorDomain", -6, v20, @"Server error: %ld (%@)", v21, v22);
    }
    id v2 = 0;
    char v17 = 0;
    id v4 = 0;
    id v5 = 0;
    id v6 = 0;
    id v7 = 0;
    id v8 = 0;
    id v9 = 0;
    id v10 = 0;
    if (!v3) {
      goto LABEL_24;
    }
  }
  else
  {
    id v3 = createMobileActivationError((uint64_t)"collection_activity_handler_block_invoke_2", 4997, @"com.apple.MobileActivation.ErrorDomain", -6, *(void **)(a1 + 40), @"Network communication error.");
    id v2 = 0;
    char v17 = 0;
    id v4 = 0;
    id v5 = 0;
    id v6 = 0;
    id v7 = 0;
    id v8 = 0;
    id v9 = 0;
    if (!v3) {
      goto LABEL_24;
    }
  }
LABEL_17:
  char v56 = v17;
  id v57 = v2;
  id v31 = v10;
  BOOL v32 = v9;
  uint64_t v33 = copyLoggingHandle();
  if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    id v63 = v3;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "Failed to perform collection: %{public}@", buf, 0xCu);
  }

  if (!*(void *)(a1 + 96))
  {
    id v9 = v32;
    id v10 = v31;
    id v2 = v57;
    if (v56) {
      goto LABEL_32;
    }
    goto LABEL_27;
  }
  id v9 = v32;
  if ((mobileactivationErrorHasDomainAndErrorCode(v3, @"com.apple.MobileActivation.ErrorDomain", (id)0xFFFFFFFFFFFFFFEALL) & 1) == 0)writeSplunkLog(*(void **)(a1 + 32), 16, *(void *)(a1 + 96), (uint64_t)"collection_activity_handler_block_invoke", 5074, 0, @"%@", v34, (uint64_t)v3); {
  id v10 = v31;
  }
  id v2 = v57;
  char v17 = v56;
  if (*(void *)(a1 + 96) == 403) {
    *(_DWORD *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = 86400;
  }
LABEL_24:
  if (v17) {
    goto LABEL_32;
  }
LABEL_27:
  CFStringRef v59 = v9;
  id v35 = data_ark_copy(*(void **)(a1 + 32), 0, @"CollectionRetryAttempt");
  uint64_t v36 = *(void *)(*(void *)(a1 + 80) + 8);
  id v37 = *(void **)(v36 + 40);
  *(void *)(v36 + 40) = v35;

  id v38 = isNSNumber(*(void **)(*(void *)(*(void *)(a1 + 80) + 8) + 40));
  if (!v38)
  {
    uint64_t v39 = *(void *)(*(void *)(a1 + 80) + 8);
    id v40 = *(void **)(v39 + 40);
    *(void *)(v39 + 40) = &off_10027EE88;
  }
  [*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) doubleValue];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = (exp2(v41) * 60.0);
  int v42 = copyLoggingHandle();
  if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
  {
    int v43 = *(_DWORD *)(*(void *)(*(void *)(a1 + 72) + 8) + 24);
    *(_DWORD *)buf = 67109120;
    LODWORD(v63) = v43;
    _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "Rescheduling collection for %d seconds.", buf, 8u);
  }

  scheduleXPCActivity(*(void **)(a1 + 32), (const char *)[@"com.apple.mobileactivationd.collection" UTF8String], *(_DWORD *)(*(void *)(*(void *)(a1 + 72) + 8) + 24), 1, 0x5000u, 0x1000u, &__block_literal_global_527);
  id v9 = v59;
LABEL_32:
  uint64_t v44 = *(void *)(*(void *)(a1 + 88) + 8);
  uint64_t v45 = *(void **)(v44 + 40);
  *(void *)(v44 + 40) = 0;
}

void __collection_activity_handler_block_invoke_525(id a1, DataArk *a2)
{
}

void __copy_helper_block_e8_32s40s48s56s64r72r80r88r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  _Block_object_assign((void *)(a1 + 64), *(const void **)(a2 + 64), 8);
  _Block_object_assign((void *)(a1 + 72), *(const void **)(a2 + 72), 8);
  _Block_object_assign((void *)(a1 + 80), *(const void **)(a2 + 80), 8);
  id v8 = *(const void **)(a2 + 88);

  _Block_object_assign((void *)(a1 + 88), v8, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64r72r80r88r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 88), 8);
  _Block_object_dispose(*(const void **)(a1 + 80), 8);
  _Block_object_dispose(*(const void **)(a1 + 72), 8);
  _Block_object_dispose(*(const void **)(a1 + 64), 8);

  id v2 = *(void **)(a1 + 32);
}

void __copy_helper_block_e8_32s40r48r56r64r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 8);
  _Block_object_assign((void *)(a1 + 48), *(const void **)(a2 + 48), 8);
  _Block_object_assign((void *)(a1 + 56), *(const void **)(a2 + 56), 8);
  id v5 = *(const void **)(a2 + 64);

  _Block_object_assign((void *)(a1 + 64), v5, 8);
}

void __destroy_helper_block_e8_32s40r48r56r64r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 64), 8);
  _Block_object_dispose(*(const void **)(a1 + 56), 8);
  _Block_object_dispose(*(const void **)(a1 + 48), 8);
  _Block_object_dispose(*(const void **)(a1 + 40), 8);
  id v2 = *(void **)(a1 + 32);
}

void __ucrt_oob_activity_handler_block_invoke(uint64_t a1)
{
  data_ark_remove(*(void **)(a1 + 32), 0, @"UCRTOOBRetryAttempt");
  id v2 = *(void **)(a1 + 32);
  id v3 = (const char *)[@"com.apple.mobileactivationd.UCRT.OOB" UTF8String];

  scheduleXPCActivity(v2, v3, 5u, 1, 0x3000u, 0x1000u, &__block_literal_global_529);
}

void __ucrt_oob_activity_handler_block_invoke_2(id a1, DataArk *a2)
{
}

void __ucrt_oob_activity_handler_block_invoke_3(uint64_t a1)
{
  uint64_t v109 = 0;
  id v110 = &v109;
  uint64_t v111 = 0x3032000000;
  uint64_t v112 = __Block_byref_object_copy__5;
  __int16 v113 = __Block_byref_object_dispose__5;
  id v114 = 0;
  uint64_t v103 = 0;
  id v104 = &v103;
  uint64_t v105 = 0x3032000000;
  id v106 = __Block_byref_object_copy__5;
  uint64_t v107 = __Block_byref_object_dispose__5;
  id v108 = 0;
  uint64_t v99 = 0;
  id v100 = &v99;
  uint64_t v101 = 0x2020000000;
  int v102 = 0;
  uint64_t v93 = 0;
  id v94 = &v93;
  uint64_t v95 = 0x3032000000;
  id v96 = __Block_byref_object_copy__5;
  uint64_t v97 = __Block_byref_object_dispose__5;
  id v98 = 0;
  uint64_t v87 = 0;
  id v88 = &v87;
  uint64_t v89 = 0x3032000000;
  char v90 = __Block_byref_object_copy__5;
  uint64_t v91 = __Block_byref_object_dispose__5;
  id v92 = 0;
  uint64_t v81 = 0;
  char v82 = &v81;
  uint64_t v83 = 0x3032000000;
  id v84 = __Block_byref_object_copy__5;
  uint64_t v85 = __Block_byref_object_dispose__5;
  id v86 = &__kCFBooleanFalse;
  uint64_t v75 = 0;
  char v76 = &v75;
  uint64_t v77 = 0x3032000000;
  id v78 = __Block_byref_object_copy__5;
  id v79 = __Block_byref_object_dispose__5;
  id v80 = &__kCFBooleanFalse;
  char v74 = 0;
  id v2 = data_ark_copy(*(void **)(a1 + 32), 0, @"UIKUpgradeRequired");
  id v3 = (void *)v76[5];
  v76[5] = (uint64_t)v2;

  id v4 = isNSNumber((void *)v76[5]);
  BOOL v5 = v4 == 0;

  if (v5)
  {
    id v6 = (void *)v76[5];
    v76[5] = (uint64_t)&__kCFBooleanFalse;
  }
  if ([(id)v76[5] BOOLValue])
  {
    id v7 = copyUCRT(*(void **)(a1 + 32), 0);
    id v8 = v7;
    if (v7)
    {
      id v73 = 0;
      char v9 = deleteLegacyUIKIfMismatched(v7, &v74, (NSError **)&v73);
      id v10 = v73;
      if ((v9 & 1) == 0)
      {
        id v11 = copyLoggingHandle();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_FAULT)) {
          __ucrt_oob_activity_handler_block_invoke_3_cold_2();
        }
      }
      if (v74)
      {
        maLog((uint64_t)"ucrt_oob_activity_handler_block_invoke", 0, @"Legacy UIK purged.");
        if (certificatePublicKeyMatchesSystemPublicKey(2, 2, v8, 0))
        {
          id v12 = (void *)v76[5];
          v76[5] = (uint64_t)&__kCFBooleanFalse;

          data_ark_remove(*(void **)(a1 + 32), 0, @"UIKUpgradeRequired");
        }
      }
    }
  }
  else
  {
    id v8 = 0;
  }
  id v13 = data_ark_copy(*(void **)(a1 + 32), 0, @"UCRTUpgradeRequired");
  id v14 = (void *)v88[5];
  v88[5] = (uint64_t)v13;

  id v15 = isNSNumber((void *)v88[5]);
  BOOL v16 = v15 == 0;

  if (v16)
  {
    char v17 = (void *)v88[5];
    v88[5] = (uint64_t)&__kCFBooleanFalse;
  }
  id v18 = data_ark_copy(*(void **)(a1 + 32), 0, @"UCRTHealingRequired");
  int v19 = (void *)v82[5];
  v82[5] = (uint64_t)v18;

  id v20 = isNSNumber((void *)v82[5]);
  BOOL v21 = v20 == 0;

  if (v21)
  {
    id v22 = (void *)v82[5];
    v82[5] = (uint64_t)&__kCFBooleanFalse;
  }
  if (ucrtOOBAlreadyPerformed(*(void **)(a1 + 32))
    && ([(id)v88[5] BOOLValue] & 1) == 0
    && ([(id)v82[5] BOOLValue] & 1) == 0
    && ![(id)v76[5] BOOLValue])
  {
    uint64_t v34 = 0;
    id v35 = 0;
LABEL_49:
    uint64_t v36 = 0;
    goto LABEL_28;
  }
  id v23 = data_ark_copy(*(void **)(a1 + 32), 0, @"ActivationState");
  id v24 = isNSString(v23);
  long long v25 = (void *)v110[5];
  v110[5] = (uint64_t)v24;

  if (use_hactivation()
    || is_virtual_machine()
    || ([(id)v110[5] isEqualToString:@"Activated"] & 1) == 0)
  {
    data_ark_remove(*(void **)(a1 + 32), 0, @"UCRTUpgradeRequired");
    data_ark_remove(*(void **)(a1 + 32), 0, @"UCRTHealingRequired");
    data_ark_remove(*(void **)(a1 + 32), 0, @"UIKUpgradeRequired");
    uint64_t v34 = 0;
    id v35 = 0;
    uint64_t v36 = 0;
    goto LABEL_28;
  }
  id v26 = data_ark_copy(*(void **)(a1 + 32), 0, @"UCRTOOBRetryAttempt");
  id v27 = (void *)v104[5];
  v104[5] = (uint64_t)v26;

  id v28 = isNSNumber((void *)v104[5]);
  BOOL v29 = v28 == 0;

  if (v29)
  {
    uint64_t v33 = (void *)v104[5];
    v104[5] = (uint64_t)&off_10027EE88;
  }
  else
  {
    id v30 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", (char *)[(id)v104[5] unsignedLongLongValue] + 1);
    id v31 = (void *)v104[5];
    v104[5] = (uint64_t)v30;

    if ((unint64_t)[(id)v104[5] unsignedLongLongValue] <= 6) {
      goto LABEL_34;
    }
    BOOL v32 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:");
    uint64_t v33 = (void *)v104[5];
    v104[5] = (uint64_t)v32;
  }

LABEL_34:
  data_ark_set(*(void **)(a1 + 32), 0, @"UCRTOOBRetryAttempt", (void *)v104[5], 1);
  [(id)v104[5] doubleValue];
  long double v38 = exp2(v37);
  *((_DWORD *)v100 + 6) = (v38 * 60.0);
  id v35 = data_ark_copy(*(void **)(a1 + 32), 0, @"UCRTIssuanceInFlight");
  id v39 = isNSNumber(v35);
  BOOL v40 = v39 == 0;

  if (v40)
  {

    id v35 = &__kCFBooleanFalse;
  }
  if ([v35 BOOLValue])
  {
    long double v41 = copyLoggingHandle();
    if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
    {
      int v42 = *((_DWORD *)v100 + 6);
      *(_DWORD *)buf = 67109120;
      int v118 = v42;
      _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "UCRT request is in flight, rescheduling UCRT OOB for %d seconds.", buf, 8u);
    }

    int v43 = *(void **)(a1 + 32);
    uint64_t v44 = (const char *)[@"com.apple.mobileactivationd.UCRT.OOB" UTF8String];
    uint64_t v45 = &__block_literal_global_532;
LABEL_48:
    scheduleXPCActivity(v43, v44, *((_DWORD *)v100 + 6), 1, 0x3000u, 0x1000u, v45);
    uint64_t v34 = 0;
    goto LABEL_49;
  }
  if (!collectionAlreadyPerformed(*(void **)(a1 + 32)))
  {
    id v51 = copyLoggingHandle();
    if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
    {
      int v52 = *((_DWORD *)v100 + 6);
      *(_DWORD *)buf = 67109120;
      int v118 = v52;
      _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, "Collection not performed yet. Rescheduling UCRT OOB for %d seconds.", buf, 8u);
    }

    int v43 = *(void **)(a1 + 32);
    uint64_t v44 = (const char *)[@"com.apple.mobileactivationd.UCRT.OOB" UTF8String];
    uint64_t v45 = &__block_literal_global_535;
    goto LABEL_48;
  }
  id v72 = 0;
  int v46 = ucrtHealingSupported(&v72);
  id v47 = v72;
  if (v47)
  {
    uint64_t v36 = v47;
    uint64_t v48 = copyLoggingHandle();
    if (os_log_type_enabled(v48, OS_LOG_TYPE_FAULT)) {
      __ucrt_oob_activity_handler_block_invoke_3_cold_1();
    }

    id v49 = *(void **)(a1 + 32);
    unsigned int v50 = (const char *)[@"com.apple.mobileactivationd.UCRT.OOB" UTF8String];
    scheduleXPCActivity(v49, v50, *((_DWORD *)v100 + 6), 1, 0x3000u, 0x1000u, &__block_literal_global_538);
    uint64_t v34 = 0;
    goto LABEL_28;
  }
  if ([(id)v82[5] BOOLValue])
  {
    if (v46)
    {
      int v53 = 1;
LABEL_54:
      id v54 = copyLoggingHandle();
      if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, "Performing UCRT OOB.", buf, 2u);
      }

      [@"com.apple.mobileactivationd.UCRT.OOB" UTF8String];
      uint64_t v55 = os_transaction_create();
      char v56 = (void *)v94[5];
      v94[5] = v55;

      data_ark_set(*(void **)(a1 + 32), 0, @"UCRTIssuanceInFlight", &__kCFBooleanTrue, 0);
      CFStringRef v115 = @"UseCommittedUIK";
      id v57 = +[NSNumber numberWithInt:v53 ^ 1u];
      int v116 = v57;
      uint64_t v34 = +[NSDictionary dictionaryWithObjects:&v116 forKeys:&v115 count:1];

      id v58 = *(void **)(a1 + 32);
      id v59 = copy_current_process_name();
      v61[0] = _NSConcreteStackBlock;
      v61[1] = 3254779904;
      v61[2] = __ucrt_oob_activity_handler_block_invoke_539;
      v61[3] = &__block_descriptor_98_e8_32s40r48r56r64r72r80r88r_e48_v40__0__NSData_8__NSDictionary_16q24__NSError_32l;
      id v63 = &v75;
      id v62 = *(id *)(a1 + 32);
      id v64 = &v87;
      id v65 = &v81;
      id v66 = &v109;
      char v70 = v53;
      char v71 = v46;
      id v67 = &v103;
      id v68 = &v99;
      id v69 = &v93;
      performUCRTOOB(v58, v53, v59, v34, v61);

      goto LABEL_49;
    }
  }
  else
  {
    int v53 = [(id)v76[5] BOOLValue];
    if ((v53 ^ 1 | v46)) {
      goto LABEL_54;
    }
  }
  id v60 = copyLoggingHandle();
  if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v60, OS_LOG_TYPE_DEFAULT, "UCRT healing not supported.", buf, 2u);
  }

  data_ark_set(*(void **)(a1 + 32), 0, @"UCRTOOBForbidden", &__kCFBooleanTrue, 1);
  uint64_t v34 = 0;
  uint64_t v36 = 0;
LABEL_28:
  if (v8) {
    CFRelease(v8);
  }

  _Block_object_dispose(&v75, 8);
  _Block_object_dispose(&v81, 8);

  _Block_object_dispose(&v87, 8);
  _Block_object_dispose(&v93, 8);

  _Block_object_dispose(&v99, 8);
  _Block_object_dispose(&v103, 8);

  _Block_object_dispose(&v109, 8);
}

void sub_100032AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose((const void *)(v43 - 240), 8);
  _Block_object_dispose((const void *)(v43 - 208), 8);
  _Block_object_dispose((const void *)(v43 - 160), 8);
  _Unwind_Resume(a1);
}

void __ucrt_oob_activity_handler_block_invoke_530(id a1, DataArk *a2)
{
}

void __ucrt_oob_activity_handler_block_invoke_533(id a1, DataArk *a2)
{
}

void __ucrt_oob_activity_handler_block_invoke_536(id a1, DataArk *a2)
{
}

void __ucrt_oob_activity_handler_block_invoke_539(uint64_t a1, id a2, void *a3, uint64_t a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a5;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3254779904;
  block[2] = __ucrt_oob_activity_handler_block_invoke_2_540;
  block[3] = &__block_descriptor_130_e8_32s40s48s56s64r72r80r88r96r104r112r_e5_v8__0l;
  id v12 = *(void **)(a1 + 32);
  uint64_t v25 = *(void *)(a1 + 40);
  id v13 = v12;
  long long v14 = *(_OWORD *)(a1 + 64);
  long long v26 = *(_OWORD *)(a1 + 48);
  long long v27 = v14;
  uint64_t v29 = a4;
  id v21 = v13;
  id v22 = v11;
  __int16 v30 = *(_WORD *)(a1 + 96);
  id v23 = v9;
  id v24 = v10;
  long long v28 = *(_OWORD *)(a1 + 80);
  id v15 = v10;
  id v16 = v9;
  id v17 = v11;
  dispatch_block_t v18 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_DEFAULT, 0, block);
  int v19 = copyMobileActivationSerialQueue();
  dispatch_async(v19, v18);
}

void __ucrt_oob_activity_handler_block_invoke_2_540(uint64_t a1)
{
  id v2 = data_ark_copy(*(void **)(a1 + 32), 0, @"UIKUpgradeRequired");
  uint64_t v3 = *(void *)(*(void *)(a1 + 64) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  id v5 = isNSNumber(*(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40));
  if (!v5)
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 64) + 8);
    id v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = &__kCFBooleanFalse;
  }
  id v8 = data_ark_copy(*(void **)(a1 + 32), 0, @"UCRTUpgradeRequired");
  uint64_t v9 = *(void *)(*(void *)(a1 + 72) + 8);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

  id v11 = isNSNumber(*(void **)(*(void *)(*(void *)(a1 + 72) + 8) + 40));
  if (!v11)
  {
    uint64_t v12 = *(void *)(*(void *)(a1 + 72) + 8);
    id v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = &__kCFBooleanFalse;
  }
  id v14 = data_ark_copy(*(void **)(a1 + 32), 0, @"UCRTHealingRequired");
  uint64_t v15 = *(void *)(*(void *)(a1 + 80) + 8);
  id v16 = *(void **)(v15 + 40);
  *(void *)(v15 + 40) = v14;

  id v17 = isNSNumber(*(void **)(*(void *)(*(void *)(a1 + 80) + 8) + 40));
  if (!v17)
  {
    uint64_t v18 = *(void *)(*(void *)(a1 + 80) + 8);
    int v19 = *(void **)(v18 + 40);
    *(void *)(v18 + 40) = &__kCFBooleanFalse;
  }
  if (ucrtOOBAlreadyPerformed(*(void **)(a1 + 32))
    && ([*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) BOOLValue] & 1) == 0
    && ([*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) BOOLValue] & 1) == 0
    && ![*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) BOOLValue])
  {
    id v24 = 0;
    id v25 = 0;
    long long v26 = 0;
    id v27 = 0;
    long long v28 = 0;
    id v29 = 0;
    __int16 v30 = 0;
    goto LABEL_49;
  }
  id v20 = data_ark_copy(*(void **)(a1 + 32), 0, @"ActivationState");
  id v21 = isNSString(v20);
  uint64_t v22 = *(void *)(*(void *)(a1 + 88) + 8);
  id v23 = *(void **)(v22 + 40);
  *(void *)(v22 + 40) = v21;

  id v24 = 0;
  id v25 = 0;
  long long v26 = 0;
  id v27 = 0;
  long long v28 = 0;
  id v29 = 0;
  __int16 v30 = 0;
  if (![*(id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40) isEqualToString:@"Activated"])
  {
LABEL_49:
    data_ark_remove(*(void **)(a1 + 32), 0, @"UCRTUpgradeRequired");
    data_ark_remove(*(void **)(a1 + 32), 0, @"UCRTHealingRequired");
    data_ark_remove(*(void **)(a1 + 32), 0, @"UIKUpgradeRequired");
    goto LABEL_59;
  }
  long long v26 = *(NSNumber **)(a1 + 120);
  if (v26 != (NSNumber *)200)
  {
    if (v26)
    {
      if (v26 == (NSNumber *)-1)
      {
        MobileActivationError = createMobileActivationError((uint64_t)"ucrt_oob_activity_handler_block_invoke_2", 5347, @"com.apple.MobileActivation.ErrorDomain", -6, *(void **)(a1 + 40), @"Internal error.");
LABEL_37:
        __int16 v30 = MobileActivationError;
        goto LABEL_38;
      }
      long double v41 = *(void **)(a1 + 40);
      int v42 = +[NSHTTPURLResponse localizedStringForStatusCode:v26];
      uint64_t v43 = createMobileActivationError((uint64_t)"ucrt_oob_activity_handler_block_invoke_2", 5353, @"com.apple.MobileActivation.ServerErrorDomain", (uint64_t)v26, v41, @"Server error: %ld (%@)", v26, v42);

      uint64_t v44 = *(void *)(a1 + 120);
      if (v44 == 403) {
        uint64_t v45 = -5;
      }
      else {
        uint64_t v45 = -6;
      }
      int v46 = +[NSHTTPURLResponse localizedStringForStatusCode:*(void *)(a1 + 120)];
      __int16 v30 = createMobileActivationError((uint64_t)"ucrt_oob_activity_handler_block_invoke_2", 5353, @"com.apple.MobileActivation.ErrorDomain", v45, v43, @"Server error: %ld (%@)", v44, v46);

      uint64_t v47 = *(void *)(a1 + 120);
      if (v47 != 500)
      {
        if (v47 != 403)
        {
LABEL_38:
          id v24 = 0;
LABEL_39:
          id v25 = 0;
          long long v26 = 0;
          goto LABEL_40;
        }
        if (!*(unsigned char *)(a1 + 128) && *(unsigned char *)(a1 + 129))
        {
          data_ark_set(*(void **)(a1 + 32), 0, @"UCRTHealingRequired", &__kCFBooleanTrue, 1);
          goto LABEL_38;
        }
        char v40 = 1;
        data_ark_set(*(void **)(a1 + 32), 0, @"UCRTOOBForbidden", &__kCFBooleanTrue, 1);
        id v24 = 0;
        id v25 = 0;
        long long v26 = 0;
LABEL_71:
        id v27 = 0;
        long long v28 = 0;
        goto LABEL_42;
      }
      if (!*(unsigned char *)(a1 + 128)) {
        goto LABEL_38;
      }
      id v62 = data_ark_copy(*(void **)(a1 + 32), 0, @"UCRTOOBForbiddenCount");
      id v63 = isNSNumber(v62);

      if (v63) {
        long long v26 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", (char *)[v62 unsignedLongLongValue] + 1);
      }
      else {
        long long v26 = (NSNumber *)&off_10027EE88;
      }

      data_ark_set(*(void **)(a1 + 32), 0, @"UCRTOOBForbiddenCount", v26, 1);
      if ([(NSNumber *)v26 unsignedLongLongValue] >= 0xB)
      {
        char v40 = 1;
        data_ark_set(*(void **)(a1 + 32), 0, @"UCRTOOBForbidden", &__kCFBooleanTrue, 1);
        id v24 = 0;
        id v25 = 0;
        goto LABEL_71;
      }
    }
    else
    {
      __int16 v30 = createMobileActivationError((uint64_t)"ucrt_oob_activity_handler_block_invoke_2", 5350, @"com.apple.MobileActivation.ErrorDomain", -6, *(void **)(a1 + 40), @"Network communication error.");
    }
    id v24 = 0;
    id v25 = 0;
LABEL_40:
    id v27 = 0;
    long long v28 = 0;
LABEL_41:
    char v40 = 0;
LABEL_42:
    id v29 = 0;
    goto LABEL_43;
  }
  if (!*(void *)(a1 + 48))
  {
    MobileActivationError = createMobileActivationError((uint64_t)"ucrt_oob_activity_handler_block_invoke_2", 5390, @"com.apple.MobileActivation.ErrorDomain", -6, *(void **)(a1 + 40), @"Invalid server response.");
    goto LABEL_37;
  }
  id v24 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"Date"];
  if (!v24)
  {
    __int16 v30 = createMobileActivationError((uint64_t)"ucrt_oob_activity_handler_block_invoke_2", 5396, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve server response date.");
    goto LABEL_39;
  }
  id v32 = objc_alloc_init((Class)NSDateFormatter);
  long long v28 = v32;
  if (!v32)
  {
    __int16 v30 = createMobileActivationError((uint64_t)"ucrt_oob_activity_handler_block_invoke_2", 5402, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate date formatter.");
    id v25 = 0;
    long long v26 = 0;
    id v27 = 0;
    goto LABEL_41;
  }
  id v66 = 0;
  id v27 = [v32 dateFromServerString:v24 withError:&v66];
  id v33 = v66;
  if (!v27)
  {
    __int16 v30 = createMobileActivationError((uint64_t)"ucrt_oob_activity_handler_block_invoke_2", 5408, @"com.apple.MobileActivation.ErrorDomain", -1, v33, @"Failed to convert date string.");

    id v25 = 0;
    long long v26 = 0;
    goto LABEL_41;
  }
  id v34 = +[GestaltHlpr getSharedInstance];
  id v29 = [v34 copyAnswer:@"BuildVersion"];

  id v35 = isNSString(v29);
  if (!v35)
  {
    __int16 v30 = createMobileActivationError((uint64_t)"ucrt_oob_activity_handler_block_invoke_2", 5414, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve OS build.");

    id v25 = 0;
LABEL_74:
    long long v26 = 0;
    char v40 = 0;
    goto LABEL_43;
  }
  id v25 = objc_alloc_init((Class)NSMutableDictionary);
  if (!v25)
  {
    __int16 v30 = createMobileActivationError((uint64_t)"ucrt_oob_activity_handler_block_invoke_2", 5420, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");

    goto LABEL_74;
  }
  uint64_t v36 = +[NSNumber numberWithInt:*(unsigned char *)(a1 + 128) == 0];
  [v25 setObject:v36 forKeyedSubscript:@"UseCommittedUIK"];

  [v25 setObject:v27 forKeyedSubscript:@"ServerResponseDate"];
  long double v37 = *(void **)(a1 + 32);
  long double v38 = *(void **)(a1 + 48);
  id v65 = v33;
  LOBYTE(v36) = storeUCRT(v37, v38, v25, &v65);
  __int16 v30 = (NSError *)v65;

  if (v36)
  {
    data_ark_set(*(void **)(a1 + 32), 0, @"UCRTOOBLastPerformed", v29, 1);
    data_ark_remove(*(void **)(a1 + 32), 0, @"UCRTOOBForbiddenCount");
    data_ark_remove(*(void **)(a1 + 32), 0, @"UCRTOOBRetryAttempt");
    id v39 = copyLoggingHandle();
    if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "Successfully performed UCRT OOB.", buf, 2u);
    }

    long long v26 = 0;
    char v40 = 1;
  }
  else
  {
    id v64 = createMobileActivationError((uint64_t)"ucrt_oob_activity_handler_block_invoke_2", 5430, @"com.apple.MobileActivation.ErrorDomain", -1, v30, @"Failed to store UCRT.");

    long long v26 = 0;
    char v40 = 0;
    __int16 v30 = v64;
  }
  if (!v30) {
    goto LABEL_48;
  }
LABEL_43:
  uint64_t v48 = copyLoggingHandle();
  if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    id v68 = v30;
    _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, "Failed to perform UCRT OOB: %{public}@", buf, 0xCu);
  }

  if (*(void *)(a1 + 120)
    && (mobileactivationErrorHasDomainAndErrorCode(v30, @"com.apple.MobileActivation.ErrorDomain", (id)0xFFFFFFFFFFFFFFEALL) & 1) == 0)
  {
    if (*(unsigned char *)(a1 + 128)) {
      uint64_t v50 = 31;
    }
    else {
      uint64_t v50 = 15;
    }
    writeSplunkLog(*(void **)(a1 + 32), v50, *(void *)(a1 + 120), (uint64_t)"ucrt_oob_activity_handler_block_invoke", 5450, 0, @"%@", v49, (uint64_t)v30);
    if (v40) {
      goto LABEL_49;
    }
  }
  else
  {
LABEL_48:
    if (v40) {
      goto LABEL_49;
    }
  }
  id v51 = data_ark_copy(*(void **)(a1 + 32), 0, @"UCRTOOBRetryAttempt");
  uint64_t v52 = *(void *)(*(void *)(a1 + 96) + 8);
  int v53 = *(void **)(v52 + 40);
  *(void *)(v52 + 40) = v51;

  id v54 = isNSNumber(*(void **)(*(void *)(*(void *)(a1 + 96) + 8) + 40));
  if (!v54)
  {
    uint64_t v55 = *(void *)(*(void *)(a1 + 96) + 8);
    char v56 = *(void **)(v55 + 40);
    *(void *)(v55 + 40) = &off_10027EE88;
  }
  [*(id *)(*(void *)(*(void *)(a1 + 96) + 8) + 40) doubleValue];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 104) + 8) + 24) = (exp2(v57) * 60.0);
  id v58 = copyLoggingHandle();
  if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT))
  {
    int v59 = *(_DWORD *)(*(void *)(*(void *)(a1 + 104) + 8) + 24);
    *(_DWORD *)buf = 67109120;
    LODWORD(v68) = v59;
    _os_log_impl((void *)&_mh_execute_header, v58, OS_LOG_TYPE_DEFAULT, "Rescheduling UCRT OOB for %d seconds.", buf, 8u);
  }

  scheduleXPCActivity(*(void **)(a1 + 32), (const char *)[@"com.apple.mobileactivationd.UCRT.OOB" UTF8String], *(_DWORD *)(*(void *)(*(void *)(a1 + 104) + 8) + 24), 1, 0x3000u, 0x1000u, &__block_literal_global_543);
LABEL_59:
  data_ark_set(*(void **)(a1 + 32), 0, @"UCRTIssuanceInFlight", &__kCFBooleanFalse, 0);
  uint64_t v60 = *(void *)(*(void *)(a1 + 112) + 8);
  id v61 = *(void **)(v60 + 40);
  *(void *)(v60 + 40) = 0;
}

void __ucrt_oob_activity_handler_block_invoke_541(id a1, DataArk *a2)
{
}

void __copy_helper_block_e8_32s40s48s56s64r72r80r88r96r104r112r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  _Block_object_assign((void *)(a1 + 64), *(const void **)(a2 + 64), 8);
  _Block_object_assign((void *)(a1 + 72), *(const void **)(a2 + 72), 8);
  _Block_object_assign((void *)(a1 + 80), *(const void **)(a2 + 80), 8);
  _Block_object_assign((void *)(a1 + 88), *(const void **)(a2 + 88), 8);
  _Block_object_assign((void *)(a1 + 96), *(const void **)(a2 + 96), 8);
  _Block_object_assign((void *)(a1 + 104), *(const void **)(a2 + 104), 8);
  id v8 = *(const void **)(a2 + 112);

  _Block_object_assign((void *)(a1 + 112), v8, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64r72r80r88r96r104r112r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 112), 8);
  _Block_object_dispose(*(const void **)(a1 + 104), 8);
  _Block_object_dispose(*(const void **)(a1 + 96), 8);
  _Block_object_dispose(*(const void **)(a1 + 88), 8);
  _Block_object_dispose(*(const void **)(a1 + 80), 8);
  _Block_object_dispose(*(const void **)(a1 + 72), 8);
  _Block_object_dispose(*(const void **)(a1 + 64), 8);

  id v2 = *(void **)(a1 + 32);
}

void __copy_helper_block_e8_32s40r48r56r64r72r80r88r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 8);
  _Block_object_assign((void *)(a1 + 48), *(const void **)(a2 + 48), 8);
  _Block_object_assign((void *)(a1 + 56), *(const void **)(a2 + 56), 8);
  _Block_object_assign((void *)(a1 + 64), *(const void **)(a2 + 64), 8);
  _Block_object_assign((void *)(a1 + 72), *(const void **)(a2 + 72), 8);
  _Block_object_assign((void *)(a1 + 80), *(const void **)(a2 + 80), 8);
  id v5 = *(const void **)(a2 + 88);

  _Block_object_assign((void *)(a1 + 88), v5, 8);
}

void __destroy_helper_block_e8_32s40r48r56r64r72r80r88r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 88), 8);
  _Block_object_dispose(*(const void **)(a1 + 80), 8);
  _Block_object_dispose(*(const void **)(a1 + 72), 8);
  _Block_object_dispose(*(const void **)(a1 + 64), 8);
  _Block_object_dispose(*(const void **)(a1 + 56), 8);
  _Block_object_dispose(*(const void **)(a1 + 48), 8);
  _Block_object_dispose(*(const void **)(a1 + 40), 8);
  id v2 = *(void **)(a1 + 32);
}

id copy_splunk_log_array(uint64_t a1, void *a2)
{
  id v25 = objc_alloc_init((Class)NSMutableArray);
  if (!v25)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"copy_splunk_log_array", 6054, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate array.");
    goto LABEL_22;
  }
  id v3 = copySortedSplunkFileList();
  if (!v3)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"copy_splunk_log_array", 6060, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query splunk file list.");
LABEL_22:
    id v6 = MobileActivationError;
    uint64_t v18 = 0;
    id v19 = 0;
    if (!a2) {
      goto LABEL_28;
    }
    goto LABEL_26;
  }
  id v22 = v3;
  id v23 = a2;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id obj = [v3 reverseObjectEnumerator];
  id v4 = [obj countByEnumeratingWithState:&v28 objects:v36 count:16];
  if (v4)
  {
    id v5 = v4;
    id v6 = 0;
    uint64_t v7 = *(void *)v29;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v29 != v7) {
          objc_enumerationMutation(obj);
        }
        uint64_t v9 = *(void *)(*((void *)&v28 + 1) + 8 * i);
        id v10 = objc_alloc((Class)NSData);
        id v27 = v6;
        id v11 = [v10 initWithContentsOfFile:v9 options:0 error:&v27];
        uint64_t v12 = (NSError *)v27;

        if (v11)
        {
          [v25 addObject:v11];
        }
        else
        {
          id v13 = copyLoggingHandle();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_FAULT))
          {
            *(_DWORD *)buf = 138412546;
            uint64_t v33 = v9;
            __int16 v34 = 2112;
            id v35 = v12;
            _os_log_fault_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_FAULT, "Failed to load %@: %@", buf, 0x16u);
          }
        }
        id v14 = +[NSFileManager defaultManager];
        id v26 = v12;
        unsigned __int8 v15 = [(NSFileManager *)v14 removeItemAtPath:v9 error:&v26];
        id v6 = (NSError *)v26;

        if ((v15 & 1) == 0)
        {
          id v16 = copyLoggingHandle();
          if (os_log_type_enabled(v16, OS_LOG_TYPE_FAULT))
          {
            *(_DWORD *)buf = 138412546;
            uint64_t v33 = v9;
            __int16 v34 = 2112;
            id v35 = v6;
            _os_log_fault_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_FAULT, "Failed to delete %@: %@", buf, 0x16u);
          }
        }
      }
      id v5 = [obj countByEnumeratingWithState:&v28 objects:v36 count:16];
    }
    while (v5);
  }
  else
  {
    id v6 = 0;
  }

  id v19 = v25;
  uint64_t v18 = v22;
  a2 = v23;
  if (v23)
  {
LABEL_26:
    if (!v19) {
      *a2 = v6;
    }
  }
LABEL_28:
  id v20 = v19;

  return v20;
}

uint64_t perform_sydro_data_migration_tasks(void *a1, NSError **a2)
{
  id v270 = a1;
  SecCertificateRef certificate = 0;
  CFTypeRef v330 = 0;
  int v329 = -1;
  if (preSydroDataMigrationCompleted(v270))
  {
    id v279 = 0;
    id v284 = 0;
    SecAccessControlRef cf = 0;
    id v292 = 0;
    id v3 = 0;
    id v4 = 0;
    v259 = 0;
    v260 = 0;
    id v5 = 0;
    v261 = 0;
    v262 = 0;
    v257 = 0;
    v258 = 0;
    id v272 = 0;
    v273 = 0;
    v267 = 0;
    v268 = 0;
    id v248 = 0;
    v249 = 0;
    v264 = 0;
    id v265 = 0;
    CFDataRef v6 = 0;
    CFDataRef v7 = 0;
    id v8 = 0;
    id v244 = 0;
    id v245 = 0;
    v254 = 0;
    id v255 = 0;
    uint64_t v9 = 0;
    id v10 = 0;
    id v11 = 0;
    id v275 = 0;
    v269 = 0;
    id v250 = 0;
    id v252 = 0;
    uint64_t v12 = 0;
    id v271 = 0;
    id v256 = 0;
    id obj = 0;
    id v263 = 0;
    id v13 = 0;
    unsigned int v246 = 1;
    goto LABEL_35;
  }
  id v14 = copy_ucrt_path();
  id v255 = v14;
  v238 = a2;
  if (!v14)
  {
    __int16 v34 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1104, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy UCRT path.");
LABEL_17:
    v241 = 0;
    id v263 = 0;
    v264 = 0;
    id v256 = 0;
    id v245 = 0;
    id v30 = 0;
    v254 = 0;
    goto LABEL_18;
  }
  unsigned __int8 v15 = (void **)&CCDigest_ptr;
  id v16 = v14;
  id v17 = +[NSFileManager defaultManager];
  NSFileAttributeKey v351 = NSFilePosixPermissions;
  v352 = &off_10027EEA0;
  uint64_t v18 = +[NSDictionary dictionaryWithObjects:&v352 forKeys:&v351 count:1];
  id v328 = 0;
  unsigned __int8 v19 = [(NSFileManager *)v17 createDirectoryAtPath:v16 withIntermediateDirectories:1 attributes:v18 error:&v328];
  id v20 = v328;

  if ((v19 & 1) == 0)
  {
    __int16 v34 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1109, @"com.apple.MobileActivation.ErrorDomain", -1, v20, @"Failed to create %@.", v16);

    v241 = 0;
    id v244 = 0;
    id v263 = 0;
    v264 = 0;
    id v256 = 0;
    id v245 = 0;
    id v30 = 0;
    v254 = 0;
    id v35 = 0;
    v269 = 0;
    id v248 = 0;
    id v36 = 0;
    id v5 = 0;
    long double v37 = 0;
    id v38 = 0;
    id v39 = 0;
    id v284 = 0;
LABEL_30:
    id v3 = 0;
    goto LABEL_31;
  }
  id v21 = [v16 stringByAppendingPathComponent:@"ucrt.pem"];
  if (!v21)
  {
    __int16 v34 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1115, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create UCRT file path.");

    goto LABEL_17;
  }
  id v22 = v21;
  id v327 = v20;
  load_certificate((CFTypeRef *)&certificate, @"lockdown-identities", @"com.apple.mobileactivation.ucrt", &v329, &v327);
  id v23 = (NSError *)v327;

  if (v329 != -25300 && v329)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1121, @"com.apple.MobileActivation.ErrorDomain", -1, v23, @"Failed to query keychain.");
    goto LABEL_27;
  }
  if (certificate)
  {
    maLog((uint64_t)"perform_sydro_data_migration_tasks", 0, @"Migrating UCRT from the keychain.");
    CFDataRef v24 = SecCertificateCopyData(certificate);
    if (v24)
    {
      CFDataRef v25 = v24;
      id v326 = v23;
      id v26 = lockcrypto_create_pem(v24, "CERTIFICATE", &v326);
      id v27 = (NSError *)v326;
      long long v28 = v23;
      long long v29 = v26;

      if (v26)
      {
        id v325 = v27;
        id v30 = v22;
        v254 = v29;
        char v31 = store_data(v22, v29, &v325);
        id v32 = v325;

        if (v31)
        {
          id v324 = v32;
          char v33 = delete_certificate(@"lockdown-identities", @"com.apple.mobileactivation.ucrt", (NSError **)&v324);
          id v23 = (NSError *)v324;

          if (v33)
          {
            maLog((uint64_t)"perform_sydro_data_migration_tasks", 0, @"Successfully migrated UCRT from the keychain.");
            goto LABEL_21;
          }
          __int16 v34 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1146, @"com.apple.MobileActivation.ErrorDomain", -1, v23, @"Failed to delete UCRT.");

          v241 = 0;
          id v263 = 0;
          v264 = 0;
          id v256 = 0;
          id v245 = 0;
          goto LABEL_29;
        }
        id v65 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1141, @"com.apple.MobileActivation.ErrorDomain", -1, v32, @"Failed to store UCRT at %@.", v22);
        id v66 = v32;
        __int16 v34 = v65;

        v241 = 0;
        id v263 = 0;
        v264 = 0;
        id v256 = 0;
        id v245 = 0;
LABEL_18:
        id v35 = 0;
        v269 = 0;
        id v248 = 0;
        id v36 = 0;
        id v244 = 0;
        id v5 = 0;
        long double v37 = 0;
        id v3 = 0;
        id v38 = 0;
        id v39 = 0;
        id v284 = 0;
LABEL_31:
        id v275 = v36;
        id v279 = v39;
        SecAccessControlRef cf = v37;
        id v292 = v38;
        id v271 = v30;
        if (v238)
        {
          uint64_t v52 = v5;
          int v53 = v34;
          id v5 = v52;
          unsigned int v246 = 0;
          id v4 = 0;
          v259 = 0;
          v260 = 0;
          v261 = 0;
          v262 = 0;
          v257 = 0;
          v258 = 0;
          id v272 = 0;
          v273 = 0;
          v267 = 0;
          v268 = 0;
          v249 = 0;
          id v250 = 0;
          id v265 = 0;
          CFDataRef v6 = 0;
          CFDataRef v7 = 0;
          id v8 = 0;
          uint64_t v9 = 0;
          id v10 = 0;
          id v11 = 0;
          id v252 = 0;
          id obj = v53;
          *v238 = v53;
        }
        else
        {
          id obj = v34;
          unsigned int v246 = 0;
          id v4 = 0;
          v259 = 0;
          v260 = 0;
          v261 = 0;
          v262 = 0;
          v257 = 0;
          v258 = 0;
          id v272 = 0;
          v273 = 0;
          v267 = 0;
          v268 = 0;
          v249 = 0;
          id v250 = 0;
          id v265 = 0;
          CFDataRef v6 = 0;
          CFDataRef v7 = 0;
          id v8 = 0;
          uint64_t v9 = 0;
          id v10 = 0;
          id v11 = 0;
          id v252 = 0;
        }
        uint64_t v12 = v35;
        id v13 = v241;
        goto LABEL_35;
      }
      __int16 v34 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1136, @"com.apple.MobileActivation.ErrorDomain", -1, v27, @"Failed to create UCRT PEM data.");
      id v51 = v27;
LABEL_28:

      v241 = 0;
      id v263 = 0;
      v264 = 0;
      id v256 = 0;
      id v245 = 0;
      v254 = 0;
LABEL_29:
      id v35 = 0;
      v269 = 0;
      id v248 = 0;
      id v36 = 0;
      id v244 = 0;
      id v5 = 0;
      long double v37 = 0;
      id v38 = 0;
      id v39 = 0;
      id v284 = 0;
      id v30 = v22;
      goto LABEL_30;
    }
    MobileActivationError = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1130, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy UCRT certificate data.");
LABEL_27:
    __int16 v34 = MobileActivationError;
    id v51 = v23;
    goto LABEL_28;
  }
  v254 = 0;
LABEL_21:
  id v271 = v22;
  id v41 = objc_alloc((Class)NSData);
  id v334 = 0;
  CFDataRef v42 = (const __CFData *)[v41 initWithContentsOfFile:v271 options:0 error:&v334];
  uint64_t v43 = (NSError *)v334;
  if (v42)
  {
    SecCertificateRef v44 = SecCertificateCreateWithData(kCFAllocatorDefault, v42);
    if (v44)
    {
      SecCertificateRef v45 = v44;
      id v333 = v43;
      int v46 = lockcrypto_create_pem(v42, "CERTIFICATE", &v333);
      uint64_t v47 = (NSError *)v333;

      if (v46)
      {
        id v332 = v47;
        int v48 = store_data(v271, v46, &v332);
        uint64_t v43 = (NSError *)v332;

        if (v48)
        {
          CFRelease(v45);
          char v49 = 1;
          uint64_t v50 = v23;
          goto LABEL_64;
        }
        id v67 = createMobileActivationError((uint64_t)"convert_ucrt_from_der_to_pem", 210, @"com.apple.MobileActivation.ErrorDomain", -1, v43, @"Failed to store UCRT at %@.", v271);
        uint64_t v47 = v43;
      }
      else
      {
        id v67 = createMobileActivationError((uint64_t)"convert_ucrt_from_der_to_pem", 205, @"com.apple.MobileActivation.ErrorDomain", -1, v47, @"Failed to create UCRT PEM data.");
      }

      CFRelease(v45);
      uint64_t v50 = v67;
      char v49 = 0;
      uint64_t v43 = v50;
    }
    else
    {
      char v49 = 1;
      uint64_t v50 = v23;
      int v46 = (char *)v42;
    }
  }
  else
  {
    int v46 = 0;
    char v49 = 1;
    uint64_t v50 = v23;
  }
LABEL_64:

  id v68 = v50;
  if ((v49 & 1) == 0)
  {
    __int16 v34 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1156, @"com.apple.MobileActivation.ErrorDomain", -1, v68, @"Failed to migrate UCRT from DER to PEM.");

    v241 = 0;
    id v244 = 0;
    id v263 = 0;
    v264 = 0;
    id v256 = 0;
    id v245 = 0;
    id v35 = 0;
    v269 = 0;
    id v248 = 0;
    id v36 = 0;
    id v5 = 0;
    long double v37 = 0;
    id v3 = 0;
    id v38 = 0;
    id v39 = 0;
    id v284 = 0;
    id v30 = v271;
    goto LABEL_31;
  }
  id v323 = v68;
  id v253 = copy_keychain_data(@"lockdown-identities", @"com.apple.mobileactivationd.dcrt", &v329, &v323);
  id v69 = (NSError *)v323;

  if (v329 != -25300 && v329)
  {
    __int16 v34 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1164, @"com.apple.MobileActivation.ErrorDomain", -1, v69, @"Failed to query keychain.");

    v241 = 0;
    id v263 = 0;
    v264 = 0;
    id v256 = 0;
    id v245 = 0;
    v269 = 0;
    goto LABEL_123;
  }
  if (v253)
  {
    maLog((uint64_t)"perform_sydro_data_migration_tasks", 0, @"Migrating DCRT from the keychain.");
    v349[0] = @"UseCommittedDAK";
    v349[1] = @"SkipCertificateValidation";
    v350[0] = &__kCFBooleanTrue;
    v350[1] = &__kCFBooleanTrue;
    char v70 = +[NSDictionary dictionaryWithObjects:v350 forKeys:v349 count:2];
    char v71 = v69;
    id v322 = v69;
    char v72 = storeDCRT(v270, v253, v70, &v322);
    id v73 = (NSError *)v322;

    if (v72)
    {
      id v321 = v73;
      char v74 = delete_keychain_data(@"lockdown-identities", @"com.apple.mobileactivationd.dcrt", (NSError **)&v321);
      id v69 = (NSError *)v321;

      if (v74)
      {
        maLog((uint64_t)"perform_sydro_data_migration_tasks", 0, @"Successfully migrated DCRT from the keychain.");
        goto LABEL_74;
      }
      v269 = v70;
      __int16 v34 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1187, @"com.apple.MobileActivation.ErrorDomain", -1, v69, @"Failed to delete DCRT.");
      id v100 = v69;
    }
    else
    {
      v269 = v70;
      __int16 v34 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1182, @"com.apple.MobileActivation.ErrorDomain", -1, v73, @"Failed to store DCRT.");
      id v100 = v73;
    }

    v241 = 0;
    id v263 = 0;
    v264 = 0;
    id v256 = 0;
    id v245 = 0;
LABEL_123:
    id v248 = 0;
    id v36 = 0;
    id v244 = 0;
    id v5 = 0;
    long double v37 = 0;
    id v3 = 0;
    id v38 = 0;
    id v39 = 0;
    id v284 = 0;
    id v30 = v271;
    goto LABEL_124;
  }
  char v70 = 0;
LABEL_74:
  v269 = v70;
  long long v319 = 0u;
  long long v320 = 0u;
  long long v317 = 0u;
  long long v318 = 0u;
  id v276 = [&off_10027F428 countByEnumeratingWithState:&v317 objects:v348 count:16];
  id v3 = 0;
  if (v276)
  {
    id v292 = 0;
    id v39 = 0;
    id v75 = 0;
    CFTypeRef v274 = *(CFTypeRef *)v318;
    char v76 = v69;
    do
    {
      id v77 = 0;
      id v78 = v75;
      do
      {
        if (*(CFTypeRef *)v318 != v274) {
          objc_enumerationMutation(&off_10027F428);
        }
        id v79 = *(void **)(*((void *)&v317 + 1) + 8 * (void)v77);
        id v80 = [v15[294] defaultManager];
        cfa = v79;
        id v75 = [v80 contentsOfDirectoryAtPath:v79 error:0];

        if ([v75 count])
        {
          id v280 = v77;
          id v81 = copy_activation_records_directory_path();

          char v82 = v15;
          id v83 = [v15[294] defaultManager];
          NSFileAttributeKey v346 = NSFilePosixPermissions;
          v347 = &off_10027EEB8;
          id v84 = +[NSDictionary dictionaryWithObjects:&v347 forKeys:&v346 count:1];
          id v316 = v76;
          unsigned __int8 v85 = [v83 createDirectoryAtPath:v81 withIntermediateDirectories:1 attributes:v84 error:&v316];
          id v86 = (NSError *)v316;

          if ((v85 & 1) == 0) {
            maLog((uint64_t)"perform_sydro_data_migration_tasks", 0, @"Could not create path %@: %@", v81, v86);
          }
          long long v314 = 0u;
          long long v315 = 0u;
          long long v312 = 0u;
          long long v313 = 0u;
          id v285 = v75;
          id obja = v75;
          id v87 = [obja countByEnumeratingWithState:&v312 objects:v345 count:16];
          if (v87)
          {
            id v88 = v87;
            uint64_t v89 = *(void *)v313;
            do
            {
              char v90 = 0;
              uint64_t v91 = v292;
              id v92 = v39;
              do
              {
                if (*(void *)v313 != v89) {
                  objc_enumerationMutation(obja);
                }
                uint64_t v93 = *(void *)(*((void *)&v312 + 1) + 8 * (void)v90);
                id v94 = [cfa stringByAppendingPathComponent:v93];

                id v95 = [v81 stringByAppendingPathComponent:v93];
                maLog((uint64_t)"perform_sydro_data_migration_tasks", 0, @"Migrating %@ to %@", v94, v95);
                id v96 = [v82[294] defaultManager];
                id v311 = v86;
                id v292 = v95;
                LOBYTE(v95) = [v96 copyItemAtPath:v94 toPath:v95 error:&v311];
                id v97 = v311;

                if ((v95 & 1) == 0) {
                  maLog((uint64_t)"perform_sydro_data_migration_tasks", 0, @"Failed to copy %@: %@", v94, v97);
                }
                id v98 = [v82[294] defaultManager];
                id v310 = v97;
                unsigned __int8 v99 = [v98 removeItemAtPath:v94 error:&v310];
                id v86 = (NSError *)v310;

                if ((v99 & 1) == 0) {
                  maLog((uint64_t)"perform_sydro_data_migration_tasks", 0, @"Failed to delete %@: %@", v94, v86);
                }
                char v90 = (char *)v90 + 1;
                uint64_t v91 = v292;
                id v92 = v94;
              }
              while (v88 != v90);
              id v39 = v94;
              id v88 = [obja countByEnumeratingWithState:&v312 objects:v345 count:16];
            }
            while (v88);
          }

          char v76 = v86;
          id v3 = v81;
          unsigned __int8 v15 = v82;
          id v77 = v280;
          id v75 = v285;
        }
        id v77 = (char *)v77 + 1;
        id v78 = v75;
      }
      while (v77 != v276);
      id v276 = [&off_10027F428 countByEnumeratingWithState:&v317 objects:v348 count:16];
    }
    while (v276);
  }
  else
  {
    id v292 = 0;
    id v39 = 0;
    id v75 = 0;
    char v76 = v69;
  }
  id v101 = [v15[294] defaultManager];
  unsigned int v102 = [v101 fileExistsAtPath:@"/private/var/mobile/Library/mad/data_ark.plist"];

  if (v102)
  {
    v241 = +[NSDictionary dictionaryWithContentsOfFile:@"/private/var/mobile/Library/mad/data_ark.plist"];
    id v263 = [(NSDictionary *)v241 objectForKeyedSubscript:@"-LastActivated"];
    id v103 = isNSString(v263);
    if (v103)
    {
      id v104 = v103;
      BOOL v105 = data_ark_exists(v270, 0, @"LastActivated");

      if (!v105) {
        data_ark_set(v270, 0, @"LastActivated", v263, 1);
      }
    }
    id v106 = [v15[294] defaultManager];
    id v309 = v76;
    uint64_t v107 = v76;
    unsigned __int8 v108 = [v106 removeItemAtPath:@"/private/var/mobile/Library/mad/data_ark.plist" error:&v309];
    uint64_t v109 = (NSError *)v309;

    if ((v108 & 1) == 0) {
      maLog((uint64_t)"perform_sydro_data_migration_tasks", 0, @"Failed to delete %@: %@", @"/private/var/mobile/Library/mad/data_ark.plist", v109);
    }
    char v76 = v109;
  }
  else
  {
    v241 = 0;
    id v263 = 0;
  }
  id v36 = data_ark_copy(v270, 0, @"UIKLegacyMigrationCompleted");
  id v110 = isNSNumber(v36);
  id v284 = v75;
  if (!v110
    || (v111 = v110, unsigned __int8 v112 = [v36 BOOLValue], v111, (v112 & 1) == 0))
  {
    id v308 = v76;
    id v113 = copy_keychain_data(@"lockdown-identities", @"com.apple.mobileactivation.uik", &v329, &v308);
    id v120 = v308;

    if (v329 != -25300 && v329)
    {
      id v256 = v113;
      id v171 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1250, @"com.apple.MobileActivation.ErrorDomain", -1, v120, @"Failed to copy UIK from keychain.");
    }
    else
    {
      if (!v113)
      {
        SecAccessControlRef cf = 0;
        v264 = 0;
        goto LABEL_150;
      }
      maLog((uint64_t)"perform_sydro_data_migration_tasks", 0, @"Converting legacy UIK.");
      SecAccessControlRef v121 = SecAccessControlCreateWithFlags(0, kSecAttrAccessibleAlwaysThisDeviceOnlyPrivate, 0x40000000uLL, (CFErrorRef *)&v330);
      id v256 = v113;
      if (v121)
      {
        v343[0] = kSecAttrIsPermanent;
        v343[1] = kSecAttrTokenID;
        v344[0] = &__kCFBooleanFalse;
        v344[1] = kSecAttrTokenIDAppleKeyStore;
        v343[2] = kSecAttrTokenOID;
        v343[3] = kSecAttrAccessControl;
        v344[2] = v113;
        SecAccessControlRef cf = v121;
        v344[3] = v121;
        v264 = +[NSDictionary dictionaryWithObjects:v344 forKeys:v343 count:4];
        SecKeyRef v122 = SecKeyCreateWithData((CFDataRef)+[NSData data], (CFDictionaryRef)v264, (CFErrorRef *)&v330);
        if (v122)
        {
          id v281 = v39;
          v233 = v3;
          id v307 = v120;
          SecKeyRef v123 = v122;
          char v124 = store_keychain_item((uint64_t)v122, @"lockdown-identities", @"com.apple.mobileactivationd.uik.v2", 0, (NSError **)&v307);
          id v125 = v307;

          if (v124)
          {
            id v306 = v125;
            char v126 = delete_keychain_data(@"lockdown-identities", @"com.apple.mobileactivation.uik", (NSError **)&v306);
            id v120 = v306;

            if (v126)
            {
              maLog((uint64_t)"perform_sydro_data_migration_tasks", 0, @"Successfully converted legacy UIK.");
              CFRelease(v123);
              id v39 = v281;
              id v3 = v233;
              id v113 = v256;
LABEL_150:
              id v305 = v120;
              v237 = (__SecKey *)copy_keychain_item(@"lockdown-identities", @"com.apple.mobileactivationd.uik.v2", 0, &v329, &v305);
              char v76 = (NSError *)v305;

              if (v329 != -25300 && v329)
              {
                id v256 = v113;
                long long v187 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1292, @"com.apple.MobileActivation.ErrorDomain", -1, v76, @"Failed to copy UIK from keychain.");

                id v244 = 0;
                id v245 = 0;
                id v248 = 0;
                __int16 v34 = v187;
LABEL_171:
                id v30 = v271;
                id v38 = v292;
LABEL_172:
                id v35 = v253;
                long double v37 = cf;
                id v5 = v237;
                goto LABEL_31;
              }
              if (v237)
              {
                id v304 = v76;
                id v172 = security_create_external_representation(v237, 0, (NSError **)&v304);
                id v173 = v304;
                NSFileAttributeKey v174 = v76;
                id v175 = v173;

                if (!v172)
                {
                  v189 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1299, @"com.apple.MobileActivation.ErrorDomain", -1, v175, @"Failed to encode UIK as data.");
                  long long v190 = v175;
                  __int16 v34 = v189;

                  id v256 = 0;
                  id v245 = 0;
                  id v248 = 0;
                  goto LABEL_170;
                }
                id v176 = copy_uik_path();
                if (!v176)
                {
                  v191 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1305, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve UIK path.");
                  v192 = v175;
                  __int16 v34 = v191;

                  id v244 = 0;
                  id v245 = 0;
                  id v248 = 0;
                  id v256 = v172;
                  goto LABEL_171;
                }
                id v177 = v176;
                id v278 = v36;
                id v283 = v39;
                v235 = v3;
                id v178 = [v15[294] defaultManager];
                NSFileAttributeKey v341 = NSFilePosixPermissions;
                v342 = &off_10027EEB8;
                long long v179 = +[NSDictionary dictionaryWithObjects:&v342 forKeys:&v341 count:1];
                id v303 = v175;
                unsigned __int8 v180 = [v178 createDirectoryAtPath:v177 withIntermediateDirectories:1 attributes:v179 error:&v303];
                id v181 = v303;

                if (v180)
                {
                  id v182 = [v177 stringByAppendingPathComponent:@"uik.pem"];

                  id v302 = v181;
                  id objc = v182;
                  char v183 = store_data(v182, v172, &v302);
                  id v184 = v302;

                  if (v183)
                  {
                    id v301 = v184;
                    char v185 = delete_keychain_item(@"lockdown-identities", @"com.apple.mobileactivationd.uik.v2", (NSError **)&v301);
                    char v76 = (NSError *)v301;

                    if (v185)
                    {
                      id v113 = v172;
                      id v36 = v278;
                      id v39 = v283;
                      id v3 = v235;
                      unsigned __int8 v15 = (void **)&CCDigest_ptr;
                      id v186 = objc;
LABEL_167:
                      id v114 = v270;
                      data_ark_set(v270, 0, @"UIKLegacyMigrationCompleted", &__kCFBooleanTrue, 1);
                      id v245 = v186;
                      goto LABEL_110;
                    }
                    v193 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1322, @"com.apple.MobileActivation.ErrorDomain", -1, v76, @"Failed to delete UIK from keychain.");

                    id v248 = 0;
                    id v244 = 0;
                    __int16 v34 = v193;
                  }
                  else
                  {
                    __int16 v34 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1317, @"com.apple.MobileActivation.ErrorDomain", -1, v184, @"Failed to store UIK.");

                    id v248 = 0;
                    id v244 = 0;
                  }
                  id v256 = v172;
                  id v245 = objc;
                }
                else
                {
                  id v245 = v177;
                  __int16 v34 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1310, @"com.apple.MobileActivation.ErrorDomain", -1, v181, @"Failed to create %@.", v177);

                  id v248 = 0;
                  id v244 = 0;
                  id v256 = v172;
                }
                id v30 = v271;
                id v36 = v278;
                id v39 = v283;
                id v38 = v292;
                id v3 = v235;
                goto LABEL_172;
              }
              id v186 = 0;
              goto LABEL_167;
            }
            __int16 v34 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1280, @"com.apple.MobileActivation.ErrorDomain", -1, v120, @"Failed to delete UIK from keychain.");
            long long v188 = v120;
          }
          else
          {
            __int16 v34 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1275, @"com.apple.MobileActivation.ErrorDomain", -1, v125, @"Failed to store UIK.");
            long long v188 = v125;
          }

          id v244 = 0;
          id v245 = 0;
          id v248 = 0;
          id v30 = v271;
          id v39 = v281;
          long double v37 = cf;
          id v38 = v292;
          id v3 = v233;
          id v35 = v253;
          id v5 = v123;
          goto LABEL_31;
        }
        __int16 v34 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1270, @"com.apple.MobileActivation.ErrorDomain", -1, (void *)v330, @"Failed to convert legacy UIK.");

        id v244 = 0;
        id v245 = 0;
        id v248 = 0;
        id v5 = 0;
        id v30 = v271;
        long double v37 = cf;
        id v38 = v292;
        goto LABEL_124;
      }
      id v171 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1259, @"com.apple.MobileActivation.ErrorDomain", -1, (void *)v330, @"Failed to create access control.");
    }
    __int16 v34 = v171;

    v264 = 0;
    id v244 = 0;
    id v245 = 0;
    id v248 = 0;
    id v5 = 0;
    long double v37 = 0;
    id v30 = v271;
    id v38 = v292;
LABEL_124:
    id v35 = v253;
    goto LABEL_31;
  }
  id v113 = 0;
  v264 = 0;
  id v245 = 0;
  v237 = 0;
  SecAccessControlRef cf = 0;
  id v114 = v270;
LABEL_110:
  id v115 = data_ark_copy(v114, 0, @"MFIFactoryCertificatesMigrationCompleted");
  id v116 = isNSNumber(v115);
  id v256 = v113;
  id v248 = v115;
  if (v116)
  {
    uint64_t v117 = v116;
    unsigned __int8 v118 = [v115 BOOLValue];

    if (v118)
    {
      id obj = v76;
      v257 = 0;
      v258 = 0;
      uint64_t v9 = 0;
      v260 = 0;
      v261 = 0;
      id v265 = 0;
      v267 = 0;
      id v272 = 0;
      v273 = 0;
      id v244 = 0;
      v249 = 0;
      id v251 = 0;
      CFDataRef v229 = 0;
      CFDataRef v6 = 0;
      v268 = 0;
      v262 = 0;
      v259 = 0;
      v232 = 0;
      SecCertificateRef v119 = v270;
      goto LABEL_214;
    }
  }

  id v300 = 0;
  id v127 = copyRootCertificate(3, 0, (NSError **)&v300);
  id v128 = v300;
  id v129 = v128;
  if (!v127)
  {
    __int16 v34 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1341, @"com.apple.MobileActivation.ErrorDomain", -1, v128, @"Failed to load BAA root CA certificate.");

LABEL_170:
    id v244 = 0;
    goto LABEL_171;
  }
  id v299 = v128;
  SecCertificateRef v130 = lockcrypto_cert_from_pem_data(v127, (NSError **)&v299);
  uint64_t v131 = (NSError *)v299;

  id v244 = v127;
  if (!v130)
  {
    __int16 v34 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1347, @"com.apple.MobileActivation.ErrorDomain", -1, v131, @"Failed to create certificate from pem data.");

    goto LABEL_171;
  }
  v257 = v130;
  id v132 = [v15[294] defaultManager];
  unsigned int v133 = [v132 fileExistsAtPath:@"/private/var/hardware/factory/mfi"];

  if (!v133)
  {
    v258 = 0;
    v259 = 0;
    uint64_t v9 = 0;
    v260 = 0;
    v261 = 0;
    id v265 = 0;
    v267 = 0;
    id v272 = 0;
    v273 = 0;
    v249 = 0;
    id v251 = 0;
    CFDataRef v229 = 0;
    CFDataRef v239 = 0;
    v268 = 0;
    v262 = 0;
    v232 = 0;
    SecCertificateRef v119 = v270;
    goto LABEL_213;
  }
  objb = v131;
  id v277 = v36;
  id v282 = v39;
  v234 = v3;
  id v134 = 0;
  unint64_t v135 = 0;
  id v136 = 0;
  CFDataRef v226 = 0;
  CFDataRef v227 = 0;
  id v230 = 0;
  id v272 = 0;
  id v137 = 0;
  id v138 = 0;
  id v139 = 0;
  id v140 = 0;
  uint64_t v141 = 1;
  CFTypeRef protection = (CFTypeRef)kSecAttrAccessibleAlwaysThisDeviceOnlyPrivate;
  uint64_t v224 = kSecAttrTokenIDAppleKeyStore;
  uint64_t v223 = kSecAttrTokenOID;
  while (1)
  {
    id v142 = v137;
    v247 = @"com.apple.mfiaccessory";

    id v143 = +[NSString stringWithFormat:@"%@%u", @"mfi-baa", v141];
    v261 = +[NSString stringWithFormat:@"%@-rk-scrt", v143];

    v258 = v143;
    v267 = +[NSString stringWithFormat:@"%@-combined-scrt", v143];

    id v144 = +[NSString stringWithFormat:@"/private/var/hardware/factory/mfi/mfi%u-cert.der", v141];
    id v145 = v135;
    unint64_t v135 = v144;

    v268 = +[NSString stringWithFormat:@"/private/var/hardware/factory/mfi/mfi%u-key.der", v141];
    id v146 = [objc_alloc((Class)NSData) initWithContentsOfFile:v135];

    id v272 = v146;
    if (!v146)
    {
      v249 = v135;
      v194 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1364, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to load %@.", v135);
      v273 = 0;
      v259 = 0;
      v260 = 0;
      v262 = 0;
      v232 = 0;
      id v3 = v234;
      id v154 = objb;
LABEL_188:
      id v195 = v230;
LABEL_196:
      CFDataRef v196 = v226;
      CFDataRef v197 = v227;
      goto LABEL_206;
    }
    id v298 = objb;
    id v147 = parseDERCertificatesFromChain(v146, &v298);
    id v148 = (NSError *)v298;

    if (!v147)
    {
      v249 = v135;
      v194 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1370, @"com.apple.MobileActivation.ErrorDomain", -1, v148, @"Failed to parse certificate chain from data.");
      id v136 = 0;
      v273 = 0;
      v259 = 0;
      v260 = 0;
      v262 = 0;
      v232 = 0;
      id v154 = v148;
LABEL_187:
      id v3 = v234;
      goto LABEL_188;
    }
    CFDataRef v149 = (const __CFData *)[v147 objectAtIndexedSubscript:0];
    SecCertificateRef v150 = SecCertificateCreateWithData(0, v149);

    v273 = v150;
    if (!v150)
    {
      v249 = v135;
      v194 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1376, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create leaf certificate from data.");
      v273 = 0;
      v259 = 0;
      v260 = 0;
      v262 = 0;
      v232 = 0;
      id v154 = v148;
      id v136 = v147;
      goto LABEL_187;
    }
    id v266 = v147;
    CFDataRef v151 = (const __CFData *)[v147 objectAtIndexedSubscript:1];
    id v152 = SecCertificateCreateWithData(0, v151);

    if (!v152)
    {
      v249 = v135;
      v194 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1382, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create intermediate certificate from data.");
      v259 = 0;
      v260 = 0;
      v262 = 0;
      v232 = 0;
      id v154 = v148;
LABEL_186:
      id v136 = v147;
      goto LABEL_187;
    }
    id v297 = v148;
    v260 = v152;
    char v153 = evaluateAccessoryTrustWithCerts(v273, v152, v257, 0, 0, 0, &v297);
    id v154 = (NSError *)v297;

    if ((v153 & 1) == 0)
    {
      v249 = v135;
      v194 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1387, @"com.apple.MobileActivation.ErrorDomain", -1, v154, @"Failed to verify BAA certificate chain.");
      v262 = 0;
      v259 = 0;
      v232 = 0;
      goto LABEL_186;
    }
    id v155 = [objc_alloc((Class)NSData) initWithContentsOfFile:v268];

    id v251 = v155;
    if (!v155)
    {
      v249 = v135;
      v194 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1395, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to load %@.", v268);
      id v195 = 0;
      v262 = 0;
      v259 = 0;
      v232 = 0;
LABEL_195:
      id v136 = v147;
      id v3 = v234;
      goto LABEL_196;
    }
    if (cf) {
      CFRelease(cf);
    }
    SecAccessControlRef v156 = SecAccessControlCreateWithFlags(0, protection, 0x40000000uLL, (CFErrorRef *)&v330);
    if (!v156)
    {
      v249 = v135;
      v194 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1402, @"com.apple.MobileActivation.ErrorDomain", -1, (void *)v330, @"Failed to create access control.");
      v262 = 0;
      v259 = 0;
      v232 = 0;
      SecAccessControlRef cf = 0;
      goto LABEL_194;
    }
    v339[0] = kSecAttrIsPermanent;
    v339[1] = kSecAttrTokenID;
    v340[0] = &__kCFBooleanFalse;
    v340[1] = v224;
    v339[2] = v223;
    v339[3] = kSecAttrAccessControl;
    v340[2] = v155;
    SecAccessControlRef cf = v156;
    v340[3] = v156;
    id v157 = +[NSDictionary dictionaryWithObjects:v340 forKeys:v339 count:4];

    id v158 = SecKeyCreateWithData((CFDataRef)+[NSData data], (CFDictionaryRef)v157, (CFErrorRef *)&v330);
    if (!v158)
    {
      v249 = v135;
      v194 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1414, @"com.apple.MobileActivation.ErrorDomain", -2, (void *)v330, @"Failed to convert RK data blob.");
      v262 = 0;
LABEL_193:
      v259 = 0;
      v232 = 0;
      v264 = v157;
LABEL_194:
      id v195 = v155;
      goto LABEL_195;
    }
    v262 = v158;
    id v159 = SecKeyCopyPublicKey(v158);
    if (!v159)
    {
      v249 = v135;
      v194 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1420, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy RK public key.");
      goto LABEL_193;
    }
    v259 = v159;
    CFDataRef v160 = SecKeyCopyExternalRepresentation(v159, (CFErrorRef *)&v330);

    if (!v160)
    {
      v249 = v135;
      v194 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1426, @"com.apple.MobileActivation.ErrorDomain", -1, (void *)v330, @"Failed to copy RK public key buffer.");
      CFDataRef v197 = 0;
      v232 = 0;
      v264 = v157;
      id v195 = v155;
      goto LABEL_199;
    }
    CFDataRef v161 = v160;
    id v162 = SecCertificateCopyKey(v273);
    if (!v162) {
      break;
    }
    v232 = v162;
    CFDataRef v163 = SecKeyCopyExternalRepresentation(v162, (CFErrorRef *)&v330);

    if (!v163)
    {
      v249 = v135;
      v194 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1438, @"com.apple.MobileActivation.ErrorDomain", -1, (void *)v330, @"Failed to encode certificate public key as data.");
      CFDataRef v196 = 0;
      v264 = v157;
      id v195 = v251;
      CFDataRef v197 = v161;
LABEL_205:
      id v136 = v266;
      id v3 = v234;
      goto LABEL_206;
    }
    id v164 = v157;
    if (([(__CFData *)v161 isEqualToData:v163] & 1) == 0)
    {
      v249 = v135;
      v264 = v157;
      v194 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1445, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Certificate public key does not match RK public key.");
      id v195 = v155;
      CFDataRef v197 = v161;
      CFDataRef v196 = v163;
      goto LABEL_205;
    }
    CFDataRef v239 = v163;
    id v296 = v154;
    char v165 = store_keychain_data(v272, v247, v267, (NSError **)&v296);
    id v166 = (NSError *)v296;

    if ((v165 & 1) == 0)
    {
      v249 = v135;
      v198 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1452, @"com.apple.MobileActivation.ErrorDomain", -1, v166, @"Failed to store leaf/intermediate certificates.");
      id v154 = v166;
LABEL_204:
      v264 = v157;
      v194 = v198;
      id v195 = v251;
      CFDataRef v197 = v161;
      CFDataRef v196 = v239;
      goto LABEL_205;
    }
    id v295 = v166;
    id v138 = v261;
    char v167 = store_keychain_item((uint64_t)v262, v247, v261, 0, (NSError **)&v295);
    objb = (NSError *)v295;

    if ((v167 & 1) == 0)
    {
      v249 = v135;
      id v154 = objb;
      v198 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1457, @"com.apple.MobileActivation.ErrorDomain", -1, objb, @"Failed to store reference key.");
      goto LABEL_204;
    }
    id v168 = +[NSFileManager defaultManager];
    [(NSFileManager *)v168 removeItemAtPath:v135 error:0];

    id v169 = +[NSFileManager defaultManager];
    id v134 = v268;
    [(NSFileManager *)v169 removeItemAtPath:v268 error:0];

    CFRelease(v273);
    CFRelease(v260);
    CFRelease(v262);
    CFRelease(v259);
    CFRelease(v232);
    uint64_t v141 = (v141 + 1);
    id v136 = v266;
    CFDataRef v226 = v239;
    CFDataRef v227 = v161;
    id v230 = v251;
    v264 = v164;
    id v139 = v247;
    id v140 = v258;
    id v137 = v267;
    if (v141 == 5)
    {
      CFDataRef v170 = v161;
      v249 = v135;
      v273 = 0;
      v259 = 0;
      v260 = 0;
      v262 = 0;
      v232 = 0;
      v264 = v164;
      id v3 = v234;
      id v36 = v277;
      uint64_t v131 = objb;
      id v136 = v266;
      goto LABEL_207;
    }
  }
  v249 = v135;
  v194 = createMobileActivationError((uint64_t)"perform_sydro_data_migration_tasks", 1432, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve certificate public key.");
  v232 = 0;
  v264 = v157;
  id v195 = v155;
  CFDataRef v197 = v160;
LABEL_199:
  id v136 = v266;
  id v3 = v234;
  CFDataRef v196 = v226;
LABEL_206:

  uint64_t v131 = v194;
  id v251 = v195;
  CFDataRef v170 = v197;
  CFDataRef v239 = v196;
  id v36 = v277;
LABEL_207:
  id v265 = v136;
  id v39 = v282;
  CFDataRef v229 = v170;
  if (v131)
  {
    v199 = copyLoggingHandle();
    if (os_log_type_enabled(v199, OS_LOG_TYPE_FAULT)) {
      perform_sydro_data_migration_tasks_cold_3();
    }

    uint64_t v131 = 0;
  }
  else
  {
    maLog((uint64_t)"perform_sydro_data_migration_tasks", 0, @"Successfully migrated factory MFi certs/key.");
  }
  SecCertificateRef v119 = v270;
  uint64_t v9 = v247;
LABEL_213:
  id obj = v131;
  data_ark_set(v119, 0, @"MFIFactoryCertificatesMigrationCompleted", &__kCFBooleanTrue, 1);
  CFDataRef v6 = v239;
LABEL_214:
  id v200 = data_ark_copy(v119, 0, @"FactoryDCRTMigrationCompleted");
  id v201 = isNSNumber(v200);
  id v275 = v36;
  id v279 = v39;
  v236 = v3;
  CFDataRef v240 = v6;
  id v231 = v200;
  if (!v201
    || (v202 = v201, unsigned __int8 v203 = [v200 BOOLValue], v202, (v203 & 1) == 0))
  {
    id v205 = [objc_alloc((Class)NSData) initWithContentsOfFile:@"/private/var/hardware/dcrt/dcrt.der"];

    if (v205)
    {
      CFStringRef v337 = @"UseCommittedDAK";
      v338 = &__kCFBooleanTrue;
      v206 = +[NSDictionary dictionaryWithObjects:&v338 forKeys:&v337 count:1];

      id v294 = obj;
      uint64_t v12 = v205;
      char v207 = storeDCRT(v270, v205, v206, &v294);
      v208 = (NSError *)v294;

      if ((v207 & 1) == 0)
      {
        v209 = copyLoggingHandle();
        id v13 = v241;
        if (os_log_type_enabled(v209, OS_LOG_TYPE_FAULT)) {
          perform_sydro_data_migration_tasks_cold_2();
        }

        v208 = 0;
        goto LABEL_225;
      }
      maLog((uint64_t)"perform_sydro_data_migration_tasks", 0, @"Successfully migrated factory DCRT certs/key.");
    }
    else
    {
      uint64_t v12 = 0;
      v208 = obj;
      v206 = v269;
    }
    id v13 = v241;
LABEL_225:
    v210 = +[NSFileManager defaultManager];
    [(NSFileManager *)v210 removeItemAtPath:@"/private/var/hardware/dcrt/dcrt.der" error:0];

    v204 = v270;
    data_ark_set(v270, 0, @"FactoryDCRTMigrationCompleted", &__kCFBooleanTrue, 1);
    id obj = v208;
    v269 = v206;
    id v8 = v251;
    CFDataRef v6 = v240;
    goto LABEL_226;
  }
  id v8 = v251;
  uint64_t v12 = v253;
  v204 = v270;
  id v13 = v241;
LABEL_226:
  id v10 = data_ark_copy(v204, 0, @"FactorySDCRTMigrationCompleted");
  id v211 = isNSNumber(v10);
  id v4 = v232;
  if (!v211
    || (v212 = v211, unsigned __int8 v213 = [v10 BOOLValue], v212, (v213 & 1) == 0))
  {
    id v228 = v12;
    v243 = v13;
    id v214 = [objc_alloc((Class)NSData) initWithContentsOfFile:@"/private/var/hardware/sdcrt/sdcrt.der"];
    id v252 = v214;
    if (v214)
    {
      v215 = v214;
      v335[0] = @"UseCommittedDAK";
      v335[1] = @"sdcrtAttestation";
      v336[0] = &__kCFBooleanTrue;
      v336[1] = &__kCFBooleanTrue;
      v216 = +[NSDictionary dictionaryWithObjects:v336 forKeys:v335 count:2];

      id v293 = obj;
      char v217 = storeDCRT(v270, v215, v216, &v293);
      v218 = (NSError *)v293;

      if ((v217 & 1) == 0)
      {
        v219 = copyLoggingHandle();
        CFDataRef v7 = v229;
        if (os_log_type_enabled(v219, OS_LOG_TYPE_FAULT)) {
          perform_sydro_data_migration_tasks_cold_1();
        }

        v218 = 0;
        goto LABEL_237;
      }
      maLog((uint64_t)"perform_sydro_data_migration_tasks", 0, @"Successfully migrated factory SDCRT certs/key.");
    }
    else
    {
      v218 = obj;
      v216 = v269;
    }
    CFDataRef v7 = v229;
LABEL_237:
    v220 = +[NSFileManager defaultManager];
    [(NSFileManager *)v220 removeItemAtPath:@"/private/var/hardware/sdcrt/sdcrt.der" error:0];

    data_ark_set(v270, 0, @"FactorySDCRTMigrationCompleted", &__kCFBooleanTrue, 1);
    id obj = v218;
    v269 = v216;
    CFDataRef v6 = v240;
    id v13 = v243;
    uint64_t v12 = v228;
    goto LABEL_238;
  }
  id v252 = 0;
  CFDataRef v7 = v229;
LABEL_238:
  v221 = certificate;
  if (certificate || (v221 = copyUCRT(v270, 0), (SecCertificateRef certificate = v221) != 0))
  {
    id v222 = lockcrypto_query_certificate_properties((uint64_t)v221, @"1.2.840.113635.100.8.7", 0);
    if (v222)
    {
      id v250 = v222;
      goto LABEL_244;
    }
    maLog((uint64_t)"perform_sydro_data_migration_tasks", 0, @"Existing UCRT does not contain the OID %@.", @"1.2.840.113635.100.8.7");
    unsigned int v246 = 1;
    data_ark_set(v270, 0, @"UCRTUpgradeRequired", &__kCFBooleanTrue, 1);
    id v250 = 0;
  }
  else
  {
    id v250 = 0;
LABEL_244:
    unsigned int v246 = 1;
  }
  id v3 = v236;
  id v5 = v237;
  id v11 = v231;
LABEL_35:
  if (certificate)
  {
    id v242 = v10;
    id v54 = v12;
    uint64_t v55 = v11;
    char v56 = v3;
    CFDataRef v57 = v6;
    CFDataRef v58 = v7;
    int v59 = v4;
    uint64_t v60 = v8;
    id v61 = v13;
    id v62 = v9;
    id v63 = v5;
    CFRelease(certificate);
    id v5 = v63;
    uint64_t v9 = v62;
    id v13 = v61;
    id v8 = v60;
    id v4 = v59;
    CFDataRef v7 = v58;
    CFDataRef v6 = v57;
    id v3 = v56;
    id v11 = v55;
    uint64_t v12 = v54;
    id v10 = v242;
  }
  SecCertificateRef certificate = 0;
  if (v5) {
    CFRelease(v5);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v330) {
    CFRelease(v330);
  }
  CFTypeRef v330 = 0;
  if (v273) {
    CFRelease(v273);
  }
  if (v260) {
    CFRelease(v260);
  }
  if (v257) {
    CFRelease(v257);
  }
  if (v262) {
    CFRelease(v262);
  }
  if (v259) {
    CFRelease(v259);
  }
  if (v4) {
    CFRelease(v4);
  }

  return v246;
}

void __register_xpc_activities_block_invoke(uint64_t a1, id a2)
{
  id v3 = (_xpc_activity_s *)a2;
  if (xpc_activity_get_state(v3) == 2 && xpc_activity_should_defer(v3))
  {
    if (xpc_activity_set_state(v3, 3)) {
      goto LABEL_9;
    }
    id v4 = copyLoggingHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      __register_xpc_activities_block_invoke_cold_1();
    }
  }
  if (xpc_activity_get_state(v3) == 2) {
    factory_activation_activity_handler(*(void **)(a1 + 32));
  }
LABEL_9:
}

void __register_xpc_activities_block_invoke_753(uint64_t a1, id a2)
{
  id v3 = (_xpc_activity_s *)a2;
  if (xpc_activity_get_state(v3) == 2 && xpc_activity_should_defer(v3))
  {
    if (xpc_activity_set_state(v3, 3)) {
      goto LABEL_11;
    }
    id v4 = copyLoggingHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      __register_xpc_activities_block_invoke_753_cold_1();
    }
  }
  xpc_object_t v5 = xpc_activity_copy_criteria(v3);
  if (!v5 || xpc_activity_get_state(v3) == 2) {
    collection_activity_handler(*(void **)(a1 + 32), v5 == 0);
  }

LABEL_11:
}

void __register_xpc_activities_block_invoke_754(uint64_t a1, id a2)
{
  id v3 = (_xpc_activity_s *)a2;
  if (xpc_activity_get_state(v3) == 2 && xpc_activity_should_defer(v3))
  {
    if (xpc_activity_set_state(v3, 3)) {
      goto LABEL_11;
    }
    id v4 = copyLoggingHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      __register_xpc_activities_block_invoke_754_cold_1();
    }
  }
  xpc_object_t v5 = xpc_activity_copy_criteria(v3);
  if (!v5 || xpc_activity_get_state(v3) == 2) {
    ucrt_oob_activity_handler(*(void **)(a1 + 32), v5 == 0);
  }

LABEL_11:
}

void __register_xpc_activities_block_invoke_755(uint64_t a1, id a2)
{
  id v3 = (_xpc_activity_s *)a2;
  if (xpc_activity_get_state(v3) == 2 && xpc_activity_should_defer(v3))
  {
    if (xpc_activity_set_state(v3, 3)) {
      goto LABEL_13;
    }
    id v4 = copyLoggingHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      __register_xpc_activities_block_invoke_755_cold_1();
    }
  }
  if (device_supports_dcrt_oob())
  {
    xpc_object_t v5 = xpc_activity_copy_criteria(v3);
    CFDataRef v6 = v5;
    if (!v5 || xpc_dictionary_get_BOOL(v5, XPC_ACTIVITY_REPEATING) || xpc_activity_get_state(v3) == 2) {
      dcrt_oob_activity_handler(*(void **)(a1 + 32), 0, v6 == 0);
    }
  }
LABEL_13:
}

void __register_xpc_activities_block_invoke_756(uint64_t a1, id a2)
{
  id v3 = (_xpc_activity_s *)a2;
  if (xpc_activity_get_state(v3) == 2 && xpc_activity_should_defer(v3))
  {
    if (xpc_activity_set_state(v3, 3)) {
      goto LABEL_13;
    }
    id v4 = copyLoggingHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      __register_xpc_activities_block_invoke_756_cold_1();
    }
  }
  if (device_supports_dcrt_oob())
  {
    xpc_object_t v5 = xpc_activity_copy_criteria(v3);
    CFDataRef v6 = v5;
    if (!v5 || xpc_dictionary_get_BOOL(v5, XPC_ACTIVITY_REPEATING) || xpc_activity_get_state(v3) == 2) {
      dcrt_oob_activity_handler(*(void **)(a1 + 32), 1, v6 == 0);
    }
  }
LABEL_13:
}

void __register_xpc_activities_block_invoke_757(uint64_t a1, id a2)
{
  id v3 = (_xpc_activity_s *)a2;
  if (xpc_activity_get_state(v3) == 2 && xpc_activity_should_defer(v3))
  {
    if (xpc_activity_set_state(v3, 3)) {
      goto LABEL_10;
    }
    id v4 = copyLoggingHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      __register_xpc_activities_block_invoke_757_cold_1();
    }
  }
  if (device_supports_dcrt_oob() && xpc_activity_get_state(v3) == 2) {
    dcrt_oob_load_spreading_activity_handler(*(void **)(a1 + 32), 0);
  }
LABEL_10:
}

void __register_xpc_activities_block_invoke_758(uint64_t a1, id a2)
{
  id v3 = (_xpc_activity_s *)a2;
  if (xpc_activity_get_state(v3) == 2 && xpc_activity_should_defer(v3))
  {
    if (xpc_activity_set_state(v3, 3)) {
      goto LABEL_10;
    }
    id v4 = copyLoggingHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      __register_xpc_activities_block_invoke_758_cold_1();
    }
  }
  if (device_supports_dcrt_oob() && xpc_activity_get_state(v3) == 2) {
    dcrt_oob_load_spreading_activity_handler(*(void **)(a1 + 32), 1);
  }
LABEL_10:
}

void __register_xpc_activities_block_invoke_759(uint64_t a1, id a2)
{
  id v3 = (_xpc_activity_s *)a2;
  if (xpc_activity_get_state(v3) == 2 && xpc_activity_should_defer(v3))
  {
    if (xpc_activity_set_state(v3, 3)) {
      goto LABEL_11;
    }
    id v4 = copyLoggingHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      __register_xpc_activities_block_invoke_759_cold_1();
    }
  }
  xpc_object_t v5 = xpc_activity_copy_criteria(v3);
  if (!v5 || xpc_activity_get_state(v3) == 2) {
    splunk_activity_handler(*(void **)(a1 + 32), v5 == 0);
  }

LABEL_11:
}

void __register_xpc_activities_block_invoke_760(uint64_t a1, id a2)
{
  id v3 = (_xpc_activity_s *)a2;
  if (xpc_activity_get_state(v3) == 2 && xpc_activity_should_defer(v3))
  {
    if (xpc_activity_set_state(v3, 3)) {
      goto LABEL_9;
    }
    id v4 = copyLoggingHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      __register_xpc_activities_block_invoke_760_cold_1();
    }
  }
  if (xpc_activity_get_state(v3) == 2) {
    splunk_daily_stats_activity_handler(*(void **)(a1 + 32));
  }
LABEL_9:
}

void __register_xpc_activities_block_invoke_761(uint64_t a1, id a2)
{
  id v3 = (_xpc_activity_s *)a2;
  if (xpc_activity_get_state(v3) == 2 && xpc_activity_should_defer(v3))
  {
    if (xpc_activity_set_state(v3, 3)) {
      goto LABEL_9;
    }
    id v4 = copyLoggingHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      __register_xpc_activities_block_invoke_761_cold_1();
    }
  }
  if (xpc_activity_get_state(v3) == 2) {
    splunk_roll_uuid_activity_handler(*(void **)(a1 + 32));
  }
LABEL_9:
}

void __performInFieldCollection_block_invoke(uint64_t a1)
{
  uint64_t v69 = -1;
  if (!*(void *)(a1 + 56))
  {
    CFDataRef v6 = createMobileActivationError((uint64_t)"performInFieldCollection_block_invoke", 898, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    uint64_t v60 = 0;
    id v61 = 0;
    id v7 = 0;
    id v8 = 0;
    uint64_t v9 = 0;
    id v10 = 0;
    id v11 = 0;
    id v12 = 0;
    id v13 = 0;
    id v14 = 0;
    id v59 = 0;
LABEL_22:
    id v58 = 0;
    id v22 = 0;
    goto LABEL_23;
  }
  id v2 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"NetworkTimeoutInterval"];
  id v3 = isNSNumber(v2);

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"NetworkTimeoutInterval"];
    [v4 doubleValue];
    if (v5 <= 0.0)
    {
      id v59 = v4;
      CFDataRef v6 = createMobileActivationError((uint64_t)"performInFieldCollection_block_invoke", 905, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid network timeout requested: %@", v4);
      uint64_t v60 = 0;
LABEL_20:
      id v7 = 0;
      id v8 = 0;
      uint64_t v9 = 0;
      goto LABEL_21;
    }
  }
  else
  {
    id v4 = 0;
  }
  id v59 = v4;
  if (is_product_cellular())
  {
    uint64_t v15 = *(void *)(a1 + 40);
    id v68 = 0;
    id v14 = copy_baseband_request_info(v15, 0, (NSError **)&v68);
    id v16 = v68;

    if (!v14)
    {
      CFDataRef v6 = createMobileActivationError((uint64_t)"performInFieldCollection_block_invoke", 915, @"com.apple.MobileActivation.ErrorDomain", -22, v16, @"Failed to copy baseband info.");

      uint64_t v60 = 0;
      id v61 = 0;
      id v7 = 0;
      id v8 = 0;
      uint64_t v9 = 0;
      id v10 = 0;
      id v11 = 0;
      id v12 = 0;
      id v13 = 0;
      goto LABEL_22;
    }
  }
  else
  {
    id v16 = 0;
  }
  id v17 = [[MACollectionInterface alloc] initWithContext:*(void *)(a1 + 40)];
  uint64_t v9 = v17;
  if (!v17)
  {
    CFDataRef v6 = createMobileActivationError((uint64_t)"performInFieldCollection_block_invoke", 923, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create collection interface.");

    uint64_t v60 = 0;
    id v7 = 0;
    id v8 = 0;
LABEL_21:
    id v10 = 0;
    id v11 = 0;
    id v12 = 0;
    id v13 = 0;
    id v61 = 0;
    id v14 = 0;
    goto LABEL_22;
  }
  uint64_t v60 = v17;
  if (![(MACollectionInterface *)v17 collectionLibraryLoaded])
  {
    CFDataRef v6 = createMobileActivationError((uint64_t)"performInFieldCollection_block_invoke", 928, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Collection library not loaded.");

    goto LABEL_20;
  }
  id v18 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"UseCellularBootstrapProxy"];
  id v19 = isNSNumber(v18);

  if (!v19)
  {
    id v61 = 0;
    id v57 = 0;
LABEL_28:
    id v25 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"UseCellularOTAProxy"];
    id v26 = isNSNumber(v25);

    if (v26)
    {
      id v27 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"UseCellularOTAProxy"];
      id v58 = v27;
      if (is_product_cellular() && [v27 BOOLValue])
      {
        id v66 = v16;
        id v10 = (NSDictionary *)copyCellularProxyDictionary(0, (NSError **)&v66);
        id v28 = v66;

        if (!v10)
        {
          CFDataRef v6 = createMobileActivationError((uint64_t)"performInFieldCollection_block_invoke", 950, @"com.apple.MobileActivation.ErrorDomain", -2, v28, @"Failed to query cellular network proxy info.");

          id v7 = 0;
          id v8 = 0;
          uint64_t v9 = 0;
          id v11 = 0;
          id v12 = 0;
          id v13 = 0;
          id v61 = 0;
LABEL_64:
          id v14 = 0;
          goto LABEL_65;
        }
        int v55 = 1;
        id v16 = v28;
        id v61 = v10;
LABEL_35:
        id v29 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"SOCKSProxyHost"];
        id v30 = isNSString(v29);
        if (v30)
        {
          char v31 = v30;
          id v32 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"SOCKSProxyPort"];
          id v33 = isNSNumber(v32);

          if (!v33)
          {
            uint64_t v9 = v60;
LABEL_40:
            if (is_internal_build())
            {
              id v36 = objc_alloc((Class)NSUserDefaults);
              id v13 = [v36 persistentDomainForName:@"com.apple.mobileactivationd"];

              id v37 = [v13 objectForKeyedSubscript:@"UseReverseProxy"];
              id v38 = isNSNumber(v37);
              if (v38)
              {
                id v39 = v38;
                id v40 = [v13 objectForKeyedSubscript:@"UseReverseProxy"];
                unsigned int v41 = [v40 BOOLValue];

                if (v41)
                {
                  if (v61)
                  {
                    CFDataRef v6 = createMobileActivationError((uint64_t)"performInFieldCollection_block_invoke", 966, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Cannot set both '%@' override and '%@'/'%@' option.", @"UseReverseProxy", @"UseCellularBootstrapProxy", @"UseCellularOTAProxy");

                    id v7 = 0;
                    goto LABEL_60;
                  }
                  id v61 = (NSDictionary *)copyReverseProxyDictionary(0, 0, 0);
                }
                uint64_t v9 = v60;
              }
              else
              {
              }
            }
            else
            {
              id v13 = 0;
            }
            id v65 = v16;
            id v7 = [(MACollectionInterface *)v9 copyIngestData:&v65];
            id v42 = v65;

            if (v7)
            {
              id v64 = v42;
              id v8 = [(MACollectionInterface *)v9 copyIngestHeaders:v7 withError:&v64];
              id v43 = v64;

              if (v8)
              {
                id v44 = objc_alloc((Class)NSMutableURLRequest);
                id v45 = +[MACollectionInterface copyIngestURL];
                LODWORD(v46) = NETWORK_TIMEOUT_SECONDS;
                uint64_t v9 = (MACollectionInterface *)[v44 initWithURL:v45 cachePolicy:0 timeoutInterval:(double)v46];

                if (v9)
                {
                  id v47 = +[GestaltHlpr getSharedInstance];
                  id v14 = [v47 copyAnswer:@"UniqueDeviceID"];

                  id v48 = isNSString(v14);
                  if (v48)
                  {
                    id v12 = [objc_alloc((Class)NSString) initWithFormat:@"%@ - %@", @"iOS Device Activator (MobileActivation-1015.60.1)", *(void *)(a1 + 48)];
                    if (v12)
                    {
                      id v53 = v43;
                      [(MACollectionInterface *)v9 setAllHTTPHeaderFields:v8];
                      [(MACollectionInterface *)v9 setValue:v12 forHTTPHeaderField:@"User-Agent"];
                      [(MACollectionInterface *)v9 setValue:v14 forHTTPHeaderField:@"x-jmet-deviceid"];
                      [(MACollectionInterface *)v9 setHTTPMethod:@"POST"];
                      [(MACollectionInterface *)v9 setHTTPBody:v7];
                      if (v59)
                      {
                        [v59 doubleValue];
                        [(MACollectionInterface *)v9 setTimeoutInterval:"setTimeoutInterval:"];
                      }
                      char v49 = formatURLRequest(v9);
                      id v50 = copy_log_directory_path();
                      id v51 = [v50 stringByAppendingPathComponent:@"collection_oob_request.txt"];
                      [(NSMutableString *)v49 writeToFile:v51 atomically:0 encoding:4 error:0];

                      id v62 = v53;
                      id v63 = 0;
                      id v11 = (NSDictionary *)talkToServerWithError(v9, 0, v55, v61, &v63, &v69, &v62);
                      id v10 = (NSDictionary *)v63;
                      CFDataRef v6 = (NSError *)v62;

                      char v56 = formatURLResponse(v11, v69, v10);
                      id v54 = copy_log_directory_path();
                      id v52 = [v54 stringByAppendingPathComponent:@"collection_oob_response.txt"];
                      [(NSMutableString *)v56 writeToFile:v52 atomically:0 encoding:4 error:0];
                    }
                    else
                    {
                      CFDataRef v6 = createMobileActivationError((uint64_t)"performInFieldCollection_block_invoke", 1007, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create user agent string.");

                      id v10 = 0;
                      id v11 = 0;
                    }
                  }
                  else
                  {
                    CFDataRef v6 = createMobileActivationError((uint64_t)"performInFieldCollection_block_invoke", 1000, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query %@.", @"UniqueDeviceID");

                    id v10 = 0;
                    id v11 = 0;
                    id v12 = 0;
                  }
                  goto LABEL_65;
                }
                CFDataRef v6 = createMobileActivationError((uint64_t)"performInFieldCollection_block_invoke", 994, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate request.");

                goto LABEL_63;
              }
              CFDataRef v6 = createMobileActivationError((uint64_t)"performInFieldCollection_block_invoke", 984, @"com.apple.MobileActivation.ErrorDomain", -1, v43, @"Failed to copy ingest headers.");

LABEL_62:
              uint64_t v9 = 0;
LABEL_63:
              id v10 = 0;
              id v11 = 0;
              id v12 = 0;
              goto LABEL_64;
            }
            CFDataRef v6 = createMobileActivationError((uint64_t)"performInFieldCollection_block_invoke", 978, @"com.apple.MobileActivation.ErrorDomain", -1, v42, @"Failed to copy ingest data.");

LABEL_60:
            id v8 = 0;
            goto LABEL_62;
          }
          v70[0] = @"SOCKSProxyHost";
          id v29 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"SOCKSProxyHost"];
          v71[0] = v29;
          v70[1] = @"SOCKSProxyPort";
          id v34 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"SOCKSProxyPort"];
          v71[1] = v34;
          id v35 = +[NSDictionary dictionaryWithObjects:v71 forKeys:v70 count:2];

          id v61 = v35;
          uint64_t v9 = v60;
        }

        goto LABEL_40;
      }
    }
    else
    {
      id v58 = 0;
    }
    int v55 = 0;
    goto LABEL_35;
  }
  id v20 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"UseCellularBootstrapProxy"];
  id v57 = v20;
  if (!is_product_cellular() || ![v20 BOOLValue])
  {
    id v61 = 0;
    goto LABEL_28;
  }
  id v67 = v16;
  id v11 = (NSDictionary *)copyCellularProxyDictionary(1, (NSError **)&v67);
  id v21 = v67;

  id v61 = v11;
  if (v11)
  {
    id v16 = v21;
    goto LABEL_28;
  }
  CFDataRef v6 = createMobileActivationError((uint64_t)"performInFieldCollection_block_invoke", 937, @"com.apple.MobileActivation.ErrorDomain", -2, v21, @"Failed to query cellular network proxy info.");

  id v7 = 0;
  id v8 = 0;
  uint64_t v9 = 0;
  id v10 = 0;
  id v12 = 0;
  id v13 = 0;
  id v61 = 0;
  id v14 = 0;
  id v58 = 0;
LABEL_65:
  id v22 = v57;
LABEL_23:
  uint64_t v23 = *(void *)(a1 + 56);
  if (v23)
  {
    CFDataRef v24 = v22;
    (*(void (**)(uint64_t, NSDictionary *, NSDictionary *, uint64_t, NSError *))(v23 + 16))(v23, v11, v10, v69, v6);
    id v22 = v24;
  }
}

void ___performUCRTHealingOOB_block_invoke(uint64_t a1)
{
  uint64_t v99 = 0;
  id v100 = (id *)&v99;
  uint64_t v101 = 0x3032000000;
  unsigned int v102 = __Block_byref_object_copy__5;
  id v103 = __Block_byref_object_dispose__5;
  id v104 = 0;
  v97[0] = 0;
  v97[1] = v97;
  v97[2] = 0x3032000000;
  v97[3] = __Block_byref_object_copy__5;
  v97[4] = __Block_byref_object_dispose__5;
  id v98 = 0;
  uint64_t v91 = 0;
  id v92 = &v91;
  uint64_t v93 = 0x3032000000;
  id v94 = __Block_byref_object_copy__5;
  id v95 = __Block_byref_object_dispose__5;
  id v96 = 0;
  uint64_t v85 = 0;
  id v86 = &v85;
  uint64_t v87 = 0x3032000000;
  id v88 = __Block_byref_object_copy__5;
  uint64_t v89 = __Block_byref_object_dispose__5;
  id v90 = 0;
  uint64_t v81 = 0;
  char v82 = &v81;
  uint64_t v83 = 0x2020000000;
  uint64_t v84 = -1;
  uint64_t v77 = 0;
  id v78 = &v77;
  uint64_t v79 = 0x2020000000;
  uint64_t v80 = 0;
  if (!*(void *)(a1 + 32) || !*(void *)(a1 + 40) || !*(void *)(a1 + 56))
  {
    id v20 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke", 533, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    id v21 = 0;
    id v22 = 0;
    id v18 = 0;
    uint64_t v9 = 0;
    id v13 = 0;
    uint64_t v23 = 0;
    double v5 = 0;
    id v3 = 0;
LABEL_14:
    CFDataRef v24 = 0;
    goto LABEL_15;
  }
  id v2 = objc_alloc((Class)NSUserDefaults);
  id v3 = [v2 persistentDomainForName:@"com.apple.mobileactivationd"];

  id v4 = [*(id *)(a1 + 48) objectForKeyedSubscript:@"PromptForCredentials"];
  double v5 = v4;
  if (v4)
  {
    id v6 = isNSNumber(v4);
    BOOL v7 = v6 == 0;

    if (v7)
    {
      id v20 = createAndLogError((uint64_t)"_performUCRTHealingOOB_block_invoke", 541, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid option (%@).", @"PromptForCredentials");
      id v21 = 0;
      id v22 = 0;
      id v18 = 0;
      uint64_t v9 = 0;
LABEL_23:
      id v13 = 0;
      goto LABEL_39;
    }
  }
  id v8 = [*(id *)(a1 + 48) objectForKeyedSubscript:@"ActivationLockUsername"];
  uint64_t v9 = v8;
  if (v8)
  {
    id v10 = isNSString(v8);
    BOOL v11 = v10 == 0;

    if (v11)
    {
      id v20 = createAndLogError((uint64_t)"_performUCRTHealingOOB_block_invoke", 547, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid option (%@).", @"ActivationLockUsername");
      id v21 = 0;
      id v22 = 0;
      id v18 = 0;
      goto LABEL_23;
    }
  }
  id v12 = [*(id *)(a1 + 48) objectForKeyedSubscript:@"ActivationLockPET"];
  id v13 = v12;
  if (v12)
  {
    id v14 = isNSString(v12);
    BOOL v15 = v14 == 0;

    if (v15)
    {
      id v20 = createAndLogError((uint64_t)"_performUCRTHealingOOB_block_invoke", 553, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid option (%@).", @"ActivationLockPET");
      id v21 = 0;
      id v22 = 0;
      id v18 = 0;
      goto LABEL_39;
    }
  }
  id v16 = [*(id *)(a1 + 48) objectForKeyedSubscript:@"NetworkTimeoutInterval"];
  id v17 = isNSNumber(v16);

  if (v17)
  {
    id v18 = [*(id *)(a1 + 48) objectForKeyedSubscript:@"NetworkTimeoutInterval"];
    [v18 doubleValue];
    if (v19 <= 0.0)
    {
      id v20 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke", 560, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid network timeout requested: %@", v18);
      id v21 = 0;
      id v22 = 0;
LABEL_39:
      uint64_t v23 = 0;
      goto LABEL_14;
    }
  }
  else
  {
    id v18 = 0;
  }
  id v29 = [*(id *)(a1 + 48) objectForKeyedSubscript:@"UseCommittedUIK"];
  uint64_t v23 = v29;
  if (v29)
  {
    id v30 = isNSNumber(v29);
    BOOL v31 = v30 == 0;

    if (v31)
    {
      id v33 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke", 567, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid option (%@).", @"UseCommittedUIK");
      goto LABEL_42;
    }
  }
  if (([v23 BOOLValue] & 1) == 0)
  {
    uint64_t v32 = aks_system_key_operate(2u, 1u, 0);
    if (v32)
    {
      id v33 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke", 574, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to bump UIK: 0x%08x", v32);
LABEL_42:
      id v20 = v33;
      id v21 = 0;
      id v22 = 0;
      goto LABEL_14;
    }
  }
  id v34 = *(void **)(a1 + 32);
  id v35 = *(void **)(a1 + 48);
  id v36 = v100;
  id obj = v100[5];
  CFDataRef v24 = create_ucrt_info(v34, v35, &obj);
  objc_storeStrong(v36 + 5, obj);
  if (!v24)
  {
    id v33 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke", 581, @"com.apple.MobileActivation.ErrorDomain", -1, v100[5], @"Failed to create UCRT info.");
    goto LABEL_42;
  }
  id v37 = v100;
  id v75 = v100[5];
  id v38 = (__SecKey *)createReferenceKeyBlob(0, 1, 0, &v75);
  objc_storeStrong(v37 + 5, v75);
  v78[3] = (uint64_t)v38;
  if (!v38)
  {
    id v45 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke", 587, @"com.apple.MobileActivation.ErrorDomain", -1, v100[5], @"Failed to create reference key.");
LABEL_50:
    id v20 = v45;
    id v21 = 0;
    id v22 = 0;
    goto LABEL_15;
  }
  id v39 = v100;
  id v74 = v100[5];
  id v21 = security_create_external_representation(v38, 0, (NSError **)&v74);
  objc_storeStrong(v39 + 5, v74);
  if (!v21)
  {
    id v45 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke", 593, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to encode RK as data.");
    goto LABEL_50;
  }
  v106[0] = @"Validity";
  v106[1] = @"scrtAttestation";
  v107[0] = &off_10027EED0;
  v107[1] = &__kCFBooleanTrue;
  id v40 = +[NSDictionary dictionaryWithObjects:v107 forKeys:v106 count:2];
  unsigned int v41 = +[NSMutableDictionary dictionaryWithDictionary:v40];
  id v42 = v40;
  id v22 = v41;

  if (v18) {
    [(NSMutableDictionary *)v22 setObject:v18 forKeyedSubscript:@"NetworkTimeoutInterval"];
  }
  id v52 = objc_alloc((Class)NSMutableArray);
  v105[0] = @"1.2.840.113635.100.8.3";
  v105[1] = @"1.2.840.113635.100.10.1";
  void v105[2] = @"1.2.840.113635.100.8.4";
  v105[3] = @"1.2.840.113635.100.8.5";
  v105[4] = @"1.2.840.113635.100.8.7";
  char v56 = +[NSArray arrayWithObjects:v105 count:5];
  id v53 = [v52 initWithArray:v56];
  [(NSMutableDictionary *)v22 setObject:v53 forKeyedSubscript:@"OIDSToInclude"];

  id v54 = v100 + 5;
  id v73 = v100[5];
  BOOL IsEnabled = FindMyDeviceIsEnabled(&v73);
  objc_storeStrong(v54, v73);
  if (IsEnabled || (id v43 = v100[5]) == 0)
  {
    int v46 = [v5 BOOLValue];
    location = v100 + 5;
    id v72 = v100[5];
    id v55 = copyTokenForActivationLock(v9, v13, v46, 0, &v72);
    objc_storeStrong(location, v72);
    BOOL v47 = IsEnabled;
    if (v55) {
      BOOL v47 = 0;
    }
    if (!v47)
    {
      id v48 = v100[5];
      v100[5] = 0;

      char v49 = *(void **)(a1 + 40);
      locationa = *(id **)(a1 + 32);
      v59[0] = _NSConcreteStackBlock;
      v59[1] = 3254779904;
      v59[2] = ___performUCRTHealingOOB_block_invoke_2;
      v59[3] = &__block_descriptor_128_e8_32s40s48s56s64s72bs80r88r96r104r112r120r_e34_v24__0__NSDictionary_8__NSError_16l;
      id v66 = &v99;
      id v58 = v55;
      id v60 = v58;
      CFDataRef v24 = v24;
      id v61 = v24;
      id v67 = &v77;
      id v68 = v97;
      id v62 = *(id *)(a1 + 40);
      id v18 = v18;
      id v63 = v18;
      id v3 = v3;
      id v64 = v3;
      uint64_t v69 = &v85;
      char v70 = &v91;
      char v71 = &v81;
      id v65 = *(id *)(a1 + 56);
      issueClientCertificateWithReferenceKey(locationa, v49, v21, 0, v22, v59);

      goto LABEL_20;
    }
    id v44 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke", 621, @"com.apple.MobileActivation.ErrorDomain", -1, v100[5], @"Failed to retrieve auth token.");
  }
  else
  {
    id v44 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke", 615, @"com.apple.MobileActivation.ErrorDomain", -1, v43, @"Failed to query FindMy state.");
  }
  id v20 = v44;
LABEL_15:
  id v25 = v100[5];
  v100[5] = v20;

  uint64_t v26 = *(void *)(a1 + 56);
  if (v26) {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, id))(v26 + 16))(v26, v86[5], v92[5], v82[3], v100[5]);
  }
  id v27 = v78;
  id v28 = (const void *)v78[3];
  if (v28)
  {
    CFRelease(v28);
    id v27 = v78;
  }
  v27[3] = 0;
LABEL_20:

  _Block_object_dispose(&v77, 8);
  _Block_object_dispose(&v81, 8);
  _Block_object_dispose(&v85, 8);

  _Block_object_dispose(&v91, 8);
  _Block_object_dispose(v97, 8);

  _Block_object_dispose(&v99, 8);
}

void sub_100038C44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
  _Block_object_dispose(&a36, 8);
  _Block_object_dispose(&a40, 8);
  _Block_object_dispose(&a44, 8);
  _Block_object_dispose(&a50, 8);
  _Block_object_dispose(&a56, 8);
  _Block_object_dispose((const void *)(v56 - 216), 8);
  _Unwind_Resume(a1);
}

void ___performUCRTHealingOOB_block_invoke_2(uint64_t a1, id a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  BOOL v7 = dispatch_get_global_queue(0, 0);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3254779904;
  v10[2] = ___performUCRTHealingOOB_block_invoke_3;
  v10[3] = &__block_descriptor_144_e8_32s40s48s56s64s72s80s88bs96r104r112r120r128r136r_e5_v8__0l;
  uint64_t v19 = *(void *)(a1 + 80);
  id v11 = v6;
  id v12 = v5;
  id v13 = *(id *)(a1 + 32);
  id v14 = *(id *)(a1 + 40);
  long long v20 = *(_OWORD *)(a1 + 88);
  id v15 = *(id *)(a1 + 48);
  id v16 = *(id *)(a1 + 56);
  id v17 = *(id *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 104);
  uint64_t v22 = *(void *)(a1 + 120);
  id v18 = *(id *)(a1 + 72);
  id v8 = v5;
  id v9 = v6;
  dispatch_async(v7, v10);
}

void ___performUCRTHealingOOB_block_invoke_3(uint64_t a1)
{
  CFErrorRef error = 0;
  id v2 = *(void **)(a1 + 32);
  if (v2)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 96) + 8) + 40), v2);
    id v3 = 0;
LABEL_27:
    id v12 = 0;
LABEL_28:
    id v15 = 0;
LABEL_29:
    CFDataRef v22 = 0;
    long long v20 = 0;
    id v18 = 0;
    id v17 = 0;
LABEL_30:
    uint64_t v26 = 0;
    CFDataRef v24 = 0;
    goto LABEL_31;
  }
  id v3 = [*(id *)(a1 + 40) objectForKeyedSubscript:@"RKCertification"];
  id v4 = isNSArray(v3);
  if (!v4 || [v3 count] != (id)2) {
    goto LABEL_25;
  }
  id v5 = [v3 objectAtIndexedSubscript:0];
  id v6 = isNSData(v5);
  if (!v6)
  {

LABEL_25:
    goto LABEL_26;
  }
  BOOL v7 = v6;
  id v8 = [v3 objectAtIndexedSubscript:1];
  id v9 = isNSData(v8);

  if (!v9)
  {
LABEL_26:
    BOOL v31 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke_3", 652, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve BAA certificates.");
    uint64_t v32 = *(void *)(*(void *)(a1 + 96) + 8);
    id v33 = *(void **)(v32 + 40);
    *(void *)(v32 + 40) = v31;

    goto LABEL_27;
  }
  id v10 = [v3 objectAtIndexedSubscript:0];
  uint64_t v11 = *(void *)(*(void *)(a1 + 96) + 8);
  id obj = *(id *)(v11 + 40);
  id v12 = lockcrypto_create_pem(v10, "CERTIFICATE", &obj);
  objc_storeStrong((id *)(v11 + 40), obj);

  if (!v12)
  {
    id v37 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke_3", 658, @"com.apple.MobileActivation.ErrorDomain", -1, *(void **)(*(void *)(*(void *)(a1 + 96) + 8) + 40), @"Failed to create PEM.");
    uint64_t v38 = *(void *)(*(void *)(a1 + 96) + 8);
    id v39 = *(void **)(v38 + 40);
    *(void *)(v38 + 40) = v37;

    goto LABEL_28;
  }
  id v13 = [v3 objectAtIndexedSubscript:1];
  uint64_t v14 = *(void *)(*(void *)(a1 + 96) + 8);
  id v100 = *(id *)(v14 + 40);
  id v15 = lockcrypto_create_pem(v13, "CERTIFICATE", &v100);
  objc_storeStrong((id *)(v14 + 40), v100);

  if (!v15)
  {
    id v40 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke_3", 664, @"com.apple.MobileActivation.ErrorDomain", -1, *(void **)(*(void *)(*(void *)(a1 + 96) + 8) + 40), @"Failed to create PEM.");
    uint64_t v41 = *(void *)(*(void *)(a1 + 96) + 8);
    id v42 = *(void **)(v41 + 40);
    *(void *)(v41 + 40) = v40;

    goto LABEL_29;
  }
  id v16 = +[GestaltHlpr getSharedInstance];
  id v17 = [v16 copyAnswer:@"UniqueDeviceID"];

  id v18 = (NSData *)isNSString(v17);
  if (!v18)
  {
    id v43 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke_3", 670, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query %@.", @"UniqueDeviceID");
    uint64_t v44 = *(void *)(*(void *)(a1 + 96) + 8);
    id v45 = *(void **)(v44 + 40);
    *(void *)(v44 + 40) = v43;

    CFDataRef v22 = 0;
    long long v20 = 0;
    goto LABEL_30;
  }
  id v19 = objc_alloc_init((Class)NSMutableDictionary);
  long long v20 = v19;
  if (!v19)
  {
    int v46 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke_3", 676, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");
    uint64_t v47 = *(void *)(*(void *)(a1 + 96) + 8);
    id v48 = *(void **)(v47 + 40);
    *(void *)(v47 + 40) = v46;

    CFDataRef v22 = 0;
    id v18 = 0;
    goto LABEL_30;
  }
  [v19 setObject:v17 forKeyedSubscript:@"UniqueDeviceID"];
  [v20 setObject:*(void *)(a1 + 48) forKeyedSubscript:@"ActivationLockToken"];
  [v20 setObject:*(void *)(a1 + 56) forKeyedSubscript:@"UCRTRequestInfo"];
  long long v21 = (id *)(*(void *)(*(void *)(a1 + 96) + 8) + 40);
  id v99 = 0;
  id v18 = +[NSPropertyListSerialization dataWithPropertyList:v20 format:100 options:0 error:&v99];
  objc_storeStrong(v21, v99);
  if (!v18)
  {
    char v49 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke_3", 686, @"com.apple.MobileActivation.ErrorDomain", -1, *(void **)(*(void *)(*(void *)(a1 + 96) + 8) + 40), @"Could not convert dictionary to xml data.");
    uint64_t v50 = *(void *)(*(void *)(a1 + 96) + 8);
    id v51 = *(void **)(v50 + 40);
    *(void *)(v50 + 40) = v49;

    CFDataRef v22 = 0;
    goto LABEL_30;
  }
  CFDataRef v22 = SecKeyCreateSignature(*(SecKeyRef *)(*(void *)(*(void *)(a1 + 104) + 8) + 24), kSecKeyAlgorithmECDSASignatureMessageX962SHA256, (CFDataRef)v18, &error);
  if (!v22)
  {
    id v52 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke_3", 692, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to sign data with ref key.");
    uint64_t v53 = *(void *)(*(void *)(a1 + 96) + 8);
    id v54 = *(void **)(v53 + 40);
    *(void *)(v53 + 40) = v52;

    goto LABEL_30;
  }
  id v23 = objc_alloc_init((Class)NSMutableData);
  CFDataRef v24 = v23;
  if (!v23)
  {
    id v55 = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke_3", 698, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate data.");
    uint64_t v56 = *(void *)(*(void *)(a1 + 96) + 8);
    id v57 = *(void **)(v56 + 40);
    *(void *)(v56 + 40) = v55;

    uint64_t v26 = 0;
    goto LABEL_31;
  }
  [v23 appendData:v12];
  id v25 = [@"\n" dataUsingEncoding:4];
  [v24 appendData:v25];

  [v24 appendData:v15];
  v103[0] = @"UCRTRequestInfoXML";
  v103[1] = @"BAACertification";
  v104[0] = v18;
  v104[1] = v24;
  void v103[2] = @"BAASignature";
  v104[2] = v22;
  uint64_t v26 = +[NSDictionary dictionaryWithObjects:v104 forKeys:v103 count:3];
  uint64_t v27 = *(void *)(*(void *)(a1 + 112) + 8);
  id v28 = *(void **)(v27 + 40);
  locationa = (id *)(v27 + 40);
  uint64_t v93 = (id *)(*(void *)(*(void *)(a1 + 96) + 8) + 40);
  id v97 = *v93;
  id v98 = v28;
  char v78 = createXMLRequest(v26, &v98, (NSError **)&v97);
  objc_storeStrong(locationa, v98);
  objc_storeStrong(v93, v97);
  if (v78)
  {
    id v29 = [objc_alloc((Class)NSString) initWithFormat:@"%@ - %@", @"iOS Device Activator (MobileActivation-1015.60.1)", *(void *)(a1 + 64)];
    if (v29)
    {
      locationb = *(id **)(*(void *)(*(void *)(a1 + 112) + 8) + 40);
      id v94 = v29;
      uint64_t v79 = +[NSURL URLWithString:@"https://albert.apple.com/deviceservices/ucertVend"];
      [locationb setURL:v79];

      [*(id *)(*(void *)(*(void *)(a1 + 112) + 8) + 40) setValue:v94 forHTTPHeaderField:@"User-Agent"];
      [*(id *)(*(void *)(*(void *)(a1 + 112) + 8) + 40) setValue:v17 forHTTPHeaderField:@"x-jmet-deviceid"];
      id v30 = *(void **)(a1 + 72);
      if (v30)
      {
        locationc = *(id **)(*(void *)(*(void *)(a1 + 112) + 8) + 40);
        [v30 doubleValue];
        [locationc setTimeoutInterval:];
      }
      if (is_internal_build())
      {
        locationd = (*(id *)((*(id *)(a1 + 80))[@"locationd"]));
        id v80 = isNSString(locationd);

        if (v80)
        {
          locatione = *(id **)(*(void *)(*(void *)(a1 + 112) + 8) + 40);
          id v81 = [*(id *)(a1 + 80) objectForKeyedSubscript:@"UCRTOOBHealOverrideURL"];
          id v73 = +[NSURL URLWithString:v81];
          [locatione setURL:v73];
        }
        location = (*(id *)((*(id *)(a1 + 80))[@"location"]));
        id v82 = isNSNumber(location);
        if (v82)
        {
          id v69 = [*(id *)(a1 + 80) objectForKeyedSubscript:@"UseReverseProxy"];
          unsigned int v74 = [v69 BOOLValue];

          if (v74)
          {
            id v83 = copyReverseProxyDictionary(0, 0, 0);
LABEL_50:
            locationf = objc_retainAutoreleasedReturnValue(formatURLRequest(*(void **)(*(void *)(*(void *)(a1 + 112)
                                                                                                 + 8)
                                                                                     + 40)));
            id v75 = copy_log_directory_path();
            id v70 = [v75 stringByAppendingPathComponent:@"ucrt_oob_request.txt"];
            [(NSMutableString *)locationf writeToFile:v70 atomically:0 encoding:4 error:0];

            id v63 = *(void **)(*(void *)(*(void *)(a1 + 112) + 8) + 40);
            uint64_t v64 = *(void *)(*(void *)(a1 + 128) + 8);
            id v65 = *(void **)(v64 + 40);
            char v76 = (id *)(v64 + 40);
            id v66 = (void *)(*(void *)(*(void *)(a1 + 136) + 8) + 24);
            locationg = (id *)(*(void *)(*(void *)(a1 + 96) + 8) + 40);
            id v95 = *locationg;
            id v96 = v65;
            id v71 = talkToServerWithError(v63, 0, 0, v83, &v96, v66, &v95);
            objc_storeStrong(v76, v96);
            objc_storeStrong(locationg, v95);
            uint64_t v67 = *(void *)(*(void *)(a1 + 120) + 8);
            id v68 = *(void **)(v67 + 40);
            *(void *)(v67 + 40) = v71;

            locationh = formatURLResponse(*(void **)(*(void *)(*(void *)(a1 + 120) + 8) + 40), *(void *)(*(void *)(*(void *)(a1 + 136) + 8) + 24), *(void **)(*(void *)(*(void *)(a1 + 128) + 8) + 40));
            id v77 = copy_log_directory_path();
            id v72 = [v77 stringByAppendingPathComponent:@"ucrt_oob_response.txt"];
            [(NSMutableString *)locationh writeToFile:v72 atomically:0 encoding:4 error:0];

            id v62 = v83;
            goto LABEL_51;
          }
        }
        else
        {
        }
      }
      id v83 = 0;
      goto LABEL_50;
    }
    MobileActivationError = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke_3", 717, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create user agent string.");
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"_performUCRTHealingOOB_block_invoke_3", 711, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create request.");
  }
  id v59 = MobileActivationError;
  uint64_t v60 = *(void *)(*(void *)(a1 + 96) + 8);
  id v61 = *(void **)(v60 + 40);
  *(void *)(v60 + 40) = v59;
  id v62 = v61;
LABEL_51:

LABEL_31:
  uint64_t v34 = *(void *)(a1 + 88);
  if (v34) {
    (*(void (**)(uint64_t, void, void, void, void))(v34 + 16))(v34, *(void *)(*(void *)(*(void *)(a1 + 120) + 8) + 40), *(void *)(*(void *)(*(void *)(a1 + 128) + 8) + 40), *(void *)(*(void *)(*(void *)(a1 + 136) + 8) + 24), *(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 40));
  }
  if (error) {
    CFRelease(error);
  }
  CFErrorRef error = 0;
  uint64_t v35 = *(void *)(*(void *)(a1 + 104) + 8);
  id v36 = *(const void **)(v35 + 24);
  if (v36)
  {
    CFRelease(v36);
    uint64_t v35 = *(void *)(*(void *)(a1 + 104) + 8);
  }
  *(void *)(v35 + 24) = 0;
}

void __copy_helper_block_e8_32s40s48s56s64s72s80s88b96r104r112r120r128r136r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  id v8 = *(id *)(a2 + 64);
  id v9 = *(id *)(a2 + 72);
  id v10 = *(id *)(a2 + 80);
  _Block_object_assign((void *)(a1 + 88), *(const void **)(a2 + 88), 7);
  _Block_object_assign((void *)(a1 + 96), *(const void **)(a2 + 96), 8);
  _Block_object_assign((void *)(a1 + 104), *(const void **)(a2 + 104), 8);
  _Block_object_assign((void *)(a1 + 112), *(const void **)(a2 + 112), 8);
  _Block_object_assign((void *)(a1 + 120), *(const void **)(a2 + 120), 8);
  _Block_object_assign((void *)(a1 + 128), *(const void **)(a2 + 128), 8);
  uint64_t v11 = *(const void **)(a2 + 136);

  _Block_object_assign((void *)(a1 + 136), v11, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64s72s80s88s96r104r112r120r128r136r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 136), 8);
  _Block_object_dispose(*(const void **)(a1 + 128), 8);
  _Block_object_dispose(*(const void **)(a1 + 120), 8);
  _Block_object_dispose(*(const void **)(a1 + 112), 8);
  _Block_object_dispose(*(const void **)(a1 + 104), 8);
  _Block_object_dispose(*(const void **)(a1 + 96), 8);

  id v2 = *(void **)(a1 + 32);
}

void __copy_helper_block_e8_32s40s48s56s64s72b80r88r96r104r112r120r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  id v8 = *(id *)(a2 + 64);
  _Block_object_assign((void *)(a1 + 72), *(const void **)(a2 + 72), 7);
  _Block_object_assign((void *)(a1 + 80), *(const void **)(a2 + 80), 8);
  _Block_object_assign((void *)(a1 + 88), *(const void **)(a2 + 88), 8);
  _Block_object_assign((void *)(a1 + 96), *(const void **)(a2 + 96), 8);
  _Block_object_assign((void *)(a1 + 104), *(const void **)(a2 + 104), 8);
  _Block_object_assign((void *)(a1 + 112), *(const void **)(a2 + 112), 8);
  id v9 = *(const void **)(a2 + 120);

  _Block_object_assign((void *)(a1 + 120), v9, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64s72s80r88r96r104r112r120r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 120), 8);
  _Block_object_dispose(*(const void **)(a1 + 112), 8);
  _Block_object_dispose(*(const void **)(a1 + 104), 8);
  _Block_object_dispose(*(const void **)(a1 + 96), 8);
  _Block_object_dispose(*(const void **)(a1 + 88), 8);
  _Block_object_dispose(*(const void **)(a1 + 80), 8);

  id v2 = *(void **)(a1 + 32);
}

void ___performUCRTOOB_block_invoke(uint64_t a1)
{
  uint64_t v55 = -1;
  if (!*(void *)(a1 + 32) || !*(void *)(a1 + 40) || !*(void *)(a1 + 56))
  {
    id v5 = createMobileActivationError((uint64_t)"_performUCRTOOB_block_invoke", 786, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    id v6 = 0;
    id v7 = 0;
    id v48 = 0;
    id v8 = 0;
    id v9 = 0;
    id v10 = 0;
    id v11 = 0;
    id v3 = 0;
    goto LABEL_8;
  }
  if (is_product_cellular())
  {
    uint64_t v2 = *(void *)(a1 + 32);
    id v54 = 0;
    id v3 = copy_baseband_request_info(v2, 0, (NSError **)&v54);
    id v4 = v54;

    if (!v3)
    {
      id v5 = createMobileActivationError((uint64_t)"_performUCRTOOB_block_invoke", 795, @"com.apple.MobileActivation.ErrorDomain", -22, v4, @"Failed to copy baseband info.");

      id v6 = 0;
      id v7 = 0;
      id v48 = 0;
      id v8 = 0;
      id v9 = 0;
      id v10 = 0;
      id v11 = 0;
LABEL_8:
      id v12 = 0;
      goto LABEL_9;
    }
  }
  else
  {
    id v4 = 0;
  }
  id v14 = objc_alloc((Class)NSUserDefaults);
  id v15 = [v14 persistentDomainForName:@"com.apple.mobileactivationd"];

  id v16 = [*(id *)(a1 + 48) objectForKeyedSubscript:@"NetworkTimeoutInterval"];
  id v17 = isNSNumber(v16);

  id v48 = v15;
  if (v17)
  {
    id v12 = [*(id *)(a1 + 48) objectForKeyedSubscript:@"NetworkTimeoutInterval"];
    [v12 doubleValue];
    if (v18 <= 0.0)
    {
      id v5 = createMobileActivationError((uint64_t)"_performUCRTOOB_block_invoke", 806, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid network timeout requested: %@", v12);

      id v6 = 0;
      id v7 = 0;
      id v8 = 0;
      id v9 = 0;
      id v10 = 0;
      id v11 = 0;
      id v3 = 0;
      goto LABEL_9;
    }
    uint64_t v47 = v12;
  }
  else
  {
    uint64_t v47 = 0;
  }
  id v19 = *(void **)(a1 + 32);
  long long v20 = *(void **)(a1 + 48);
  id v53 = v4;
  long long v21 = create_ucrt_info(v19, v20, &v53);
  id v22 = v53;

  if (!v21)
  {
    id v5 = createMobileActivationError((uint64_t)"_performUCRTOOB_block_invoke", 813, @"com.apple.MobileActivation.ErrorDomain", -1, v22, @"Failed to create UCRT info.");

    id v6 = 0;
    id v7 = 0;
LABEL_32:
    id v8 = 0;
    id v9 = 0;
    id v10 = 0;
    id v11 = 0;
    id v3 = 0;
    goto LABEL_40;
  }
  id v51 = v22;
  id v52 = 0;
  char v23 = createXMLRequest(v21, &v52, (NSError **)&v51);
  id v6 = v52;
  id v24 = v51;

  if ((v23 & 1) == 0)
  {
    id v7 = v21;
    id v5 = createMobileActivationError((uint64_t)"_performUCRTOOB_block_invoke", 818, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create request.");

    goto LABEL_32;
  }
  id v25 = +[GestaltHlpr getSharedInstance];
  id v26 = [v25 copyAnswer:@"UniqueDeviceID"];

  id v10 = isNSString(v26);
  if (v10)
  {
    id v10 = [objc_alloc((Class)NSString) initWithFormat:@"%@ - %@", @"iOS Device Activator (MobileActivation-1015.60.1)", *(void *)(a1 + 40)];
    if (v10)
    {
      uint64_t v27 = +[NSURL URLWithString:@"https://tbsc.apple.com/oob/vend"];
      [v6 setURL:v27];

      [v6 setValue:v10 forHTTPHeaderField:@"User-Agent"];
      [v6 setValue:v26 forHTTPHeaderField:@"x-jmet-deviceid"];
      if (v47)
      {
        [v47 doubleValue];
        [v6 setTimeoutInterval:];
      }
      id v45 = v24;
      if (is_internal_build())
      {
        id v28 = v15;
        id v29 = [v15 objectForKeyedSubscript:@"UCRTOOBOverrideURL"];
        id v30 = isNSString(v29);

        if (v30)
        {
          id v31 = [v28 objectForKeyedSubscript:@"UCRTOOBOverrideURL"];
          uint64_t v32 = +[NSURL URLWithString:v31];
          [v6 setURL:v32];
        }
        id v33 = [v28 objectForKeyedSubscript:@"UseReverseProxy"];
        id v34 = isNSNumber(v33);
        if (v34)
        {
          uint64_t v35 = v34;
          id v3 = v26;
          id v7 = v21;
          id v36 = [v28 objectForKeyedSubscript:@"UseReverseProxy"];
          unsigned int v37 = [v36 BOOLValue];

          if (v37)
          {
            id v11 = copyReverseProxyDictionary(0, 0, 0);
LABEL_39:
            id v39 = formatURLRequest(v6);
            id v40 = copy_log_directory_path();
            id v41 = [v40 stringByAppendingPathComponent:@"ucrt_oob_request.txt"];
            [(NSMutableString *)v39 writeToFile:v41 atomically:0 encoding:4 error:0];

            id v49 = v45;
            id v50 = 0;
            id v9 = talkToServerWithError(v6, 0, 0, v11, &v50, &v55, &v49);
            id v8 = v50;
            id v5 = (NSError *)v49;

            uint64_t v44 = formatURLResponse(v9, v55, v8);
            id v46 = copy_log_directory_path();
            id v42 = [v46 stringByAppendingPathComponent:@"ucrt_oob_response.txt"];
            -[NSMutableString writeToFile:atomically:encoding:error:](v44, "writeToFile:atomically:encoding:error:");

            goto LABEL_40;
          }
        }
        else
        {
          id v3 = v26;
          id v7 = v21;
        }
      }
      else
      {
        id v3 = v26;
        id v7 = v21;
      }
      id v11 = 0;
      goto LABEL_39;
    }
    id v3 = v26;
    id v7 = v21;
    MobileActivationError = createMobileActivationError((uint64_t)"_performUCRTOOB_block_invoke", 830, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create user agent string.", v43);
  }
  else
  {
    id v3 = v26;
    id v7 = v21;
    MobileActivationError = createMobileActivationError((uint64_t)"_performUCRTOOB_block_invoke", 824, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query %@.", @"UniqueDeviceID");
  }
  id v5 = MobileActivationError;

  id v8 = 0;
  id v9 = 0;
  id v11 = 0;
LABEL_40:
  id v12 = v47;
LABEL_9:
  uint64_t v13 = *(void *)(a1 + 56);
  if (v13) {
    (*(void (**)(uint64_t, id, id, uint64_t, NSError *))(v13 + 16))(v13, v9, v8, v55, v5);
  }
}

Class __getMSDKManagedDeviceClass_block_invoke(uint64_t a1)
{
  v3[0] = 0;
  if (!MobileStoreDemoKitLibraryCore_frameworkLibrary)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = (void *)3221225472;
    v3[3] = __MobileStoreDemoKitLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = off_100265890;
    uint64_t v5 = 0;
    MobileStoreDemoKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!MobileStoreDemoKitLibraryCore_frameworkLibrary) {
    __getMSDKManagedDeviceClass_block_invoke_cold_1(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("MSDKManagedDevice");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getMSDKManagedDeviceClass_block_invoke_cold_2();
  }
  getMSDKManagedDeviceClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __MobileStoreDemoKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  MobileStoreDemoKitLibraryCore_frameworkLibrary = result;
  return result;
}

void __performDCRTOOB_block_invoke(uint64_t a1)
{
  uint64_t v42 = 0;
  uint64_t v43 = &v42;
  uint64_t v44 = 0x2020000000;
  uint64_t v45 = 0;
  CFTypeRef cf = 0;
  if (!*(void *)(a1 + 32) || !*(void *)(a1 + 40))
  {
    id v16 = createMobileActivationError((uint64_t)"performDCRTOOB_block_invoke", 395, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    id v10 = 0;
    id v15 = 0;
    id v12 = 0;
    id v11 = 0;
    goto LABEL_30;
  }
  if (*(unsigned char *)(a1 + 48)) {
    CFStringRef v2 = @"SDAK";
  }
  else {
    CFStringRef v2 = @"DAK";
  }
  if (*(unsigned char *)(a1 + 48)) {
    uint64_t v3 = 10;
  }
  else {
    uint64_t v3 = 9;
  }
  id v40 = 0;
  char v4 = libaks_system_key_operate(v3, 1, (NSError **)&v40);
  uint64_t v5 = (NSError *)v40;
  id v6 = v5;
  if (v4)
  {
    id v39 = v5;
    BOOL is_legacy = security_committed_uik_is_legacy(&v39);
    id v8 = (NSError *)v39;

    if (v8) {
      char v9 = is_legacy;
    }
    else {
      char v9 = 1;
    }
    if ((v9 & 1) == 0)
    {
      id v16 = createMobileActivationError((uint64_t)"performDCRTOOB_block_invoke", 419, @"com.apple.MobileActivation.ErrorDomain", -1, v8, @"Failed to query legacy UIK support.");
      id v10 = 0;
      goto LABEL_27;
    }
    id v38 = v8;
    id v10 = libaks_system_key_collection(v3, 3, is_legacy, 0, (NSError **)&v38);
    id v6 = (NSError *)v38;

    if (v10)
    {
      id v37 = v6;
      id v11 = libaks_system_key_get_public(v3, 3, (NSError **)&v37);
      id v8 = (NSError *)v37;

      if (v11)
      {
        id v12 = (const void *)SecAccessControlCreate();
        if (v12)
        {
          uint64_t v13 = kSecAttrAccessibleUntilReboot;
          if (SecAccessControlSetProtection())
          {
            id v36 = v8;
            id v14 = (__SecKey *)createReferenceKeyBlob(v12, 0, 0, &v36);
            id v6 = (NSError *)v36;

            v43[3] = (uint64_t)v14;
            if (v14)
            {
              id v35 = v6;
              id v15 = security_create_external_representation(v14, 0, (NSError **)&v35);
              id v16 = (NSError *)v35;

              if (v15)
              {
                id v17 = objc_alloc_init((Class)NSMutableDictionary);
                if (v17)
                {
                  double v18 = copy_required_dcrt_oids();
                  [v17 setObject:v18 forKeyedSubscript:@"OIDSToInclude"];

                  [v17 setObject:v10 forKeyedSubscript:@"ClientAttestationData"];
                  [v17 setObject:v11 forKeyedSubscript:@"ClientAttestationPublicKey"];
                  id v19 = +[NSNumber numberWithBool:is_legacy];
                  [v17 setObject:v19 forKeyedSubscript:@"scrtAttestation"];

                  if (*(unsigned char *)(a1 + 48)) {
                    long long v20 = +[NSNumber numberWithUnsignedInt:2];
                  }
                  else {
                    long long v20 = +[NSNumber numberWithUnsignedInt:0];
                  }
                  id v28 = v20;
                  [v17 setObject:v20 forKeyedSubscript:@"CertType"];

                  id v29 = *(void **)(a1 + 32);
                  id v30 = copy_calling_process_name();
                  if (*(unsigned char *)(a1 + 48)) {
                    int v31 = 3;
                  }
                  else {
                    int v31 = 1;
                  }
                  v32[0] = _NSConcreteStackBlock;
                  v32[1] = 3254779904;
                  v32[2] = __performDCRTOOB_block_invoke_2;
                  void v32[3] = &__block_descriptor_48_e8_32bs40r_e34_v24__0__NSDictionary_8__NSError_16l;
                  id v33 = *(id *)(a1 + 40);
                  id v34 = &v42;
                  issueClientCertificateWithReferenceKey(v29, v30, v15, v31, v17, v32);

LABEL_35:
                  CFRelease(v12);
                  id v25 = v17;
                  goto LABEL_36;
                }
                uint64_t v27 = createMobileActivationError((uint64_t)"performDCRTOOB_block_invoke", 471, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");
              }
              else
              {
                uint64_t v27 = createMobileActivationError((uint64_t)"performDCRTOOB_block_invoke", 463, @"com.apple.MobileActivation.ErrorDomain", -1, v16, @"Failed to encode RK as data.");
                id v15 = 0;
              }
              id v6 = v16;
              id v16 = v27;
            }
            else
            {
              id v16 = createMobileActivationError((uint64_t)"performDCRTOOB_block_invoke", 457, @"com.apple.MobileActivation.ErrorDomain", -1, v6, @"Failed to create reference key.");
              id v15 = 0;
            }
            goto LABEL_29;
          }
          id v16 = createMobileActivationError((uint64_t)"performDCRTOOB_block_invoke", 451, @"com.apple.MobileActivation.ErrorDomain", -1, (void *)cf, @"Failed to set ACL protection to %@.", v13);
          id v15 = 0;
        }
        else
        {
          id v16 = createMobileActivationError((uint64_t)"performDCRTOOB_block_invoke", 446, @"com.apple.MobileActivation.ErrorDomain", -1, (void *)cf, @"Failed to create access control.");
          id v15 = 0;
          id v12 = 0;
        }
        goto LABEL_28;
      }
      id v16 = createMobileActivationError((uint64_t)"performDCRTOOB_block_invoke", 437, @"com.apple.MobileActivation.ErrorDomain", -1, v8, @"Failed to query %@ public key.", v2);
LABEL_27:
      id v15 = 0;
      id v12 = 0;
      id v11 = 0;
LABEL_28:
      id v6 = v8;
      goto LABEL_29;
    }
    id v26 = "UIK";
    if (is_legacy) {
      id v26 = "SIK";
    }
    long long v21 = createMobileActivationError((uint64_t)"performDCRTOOB_block_invoke", 429, @"com.apple.MobileActivation.ErrorDomain", -11, v6, @"Failed to attest %@ to %s.", v2, v26);
  }
  else
  {
    long long v21 = createMobileActivationError((uint64_t)"performDCRTOOB_block_invoke", 407, @"com.apple.MobileActivation.ErrorDomain", -1, v5, @"Failed to bump %@.", v2);
  }
  id v16 = v21;
  id v10 = 0;
  id v15 = 0;
  id v12 = 0;
  id v11 = 0;
LABEL_29:

LABEL_30:
  uint64_t v22 = *(void *)(a1 + 40);
  if (v22) {
    (*(void (**)(uint64_t, void, NSError *))(v22 + 16))(v22, 0, v16);
  }
  char v23 = v43;
  id v24 = (const void *)v43[3];
  if (v24)
  {
    CFRelease(v24);
    char v23 = v43;
  }
  id v17 = 0;
  id v25 = 0;
  v23[3] = 0;
  if (v12) {
    goto LABEL_35;
  }
LABEL_36:
  if (cf) {
    CFRelease(cf);
  }
  _Block_object_dispose(&v42, 8);
}

void sub_10003AE20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __performDCRTOOB_block_invoke_2(uint64_t a1, id a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, id, id))(v7 + 16))(v7, v5, v6);
  }
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  char v9 = *(const void **)(v8 + 24);
  if (v9)
  {
    CFRelease(v9);
    uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  }
  *(void *)(v8 + 24) = 0;
}

void __copy_helper_block_e8_32b40r(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 32), *(const void **)(a2 + 32), 7);
  char v4 = *(const void **)(a2 + 40);

  _Block_object_assign((void *)(a1 + 40), v4, 8);
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_2(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

id copySplunkDeviceIdentifiers(void *a1, void *a2)
{
  id v2 = a1;
  id v60 = 0;
  id v61 = &v60;
  uint64_t v62 = 0x3032000000;
  id v63 = __Block_byref_object_copy__6;
  uint64_t v64 = __Block_byref_object_dispose__6;
  id v65 = 0;
  uint64_t v3 = copySplunkUUIDQueue();
  if (v3)
  {
    CFStringRef block = (const __CFString *)_NSConcreteStackBlock;
    uint64_t v50 = 3254779904;
    id v51 = __copySplunkLogUUID_block_invoke;
    CFStringRef v52 = (const __CFString *)&__block_descriptor_48_e8_32s40r_e5_v8__0l;
    id v53 = v2;
    CFStringRef v54 = (const __CFString *)&v60;
    dispatch_sync(v3, &block);

    id v4 = v61[5];
  }
  else
  {
    id v5 = copyLoggingHandle();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT)) {
      copySplunkDeviceIdentifiers_cold_1();
    }

    id v4 = 0;
  }
  _Block_object_dispose(&v60, 8);

  if (!v4)
  {
    id v34 = createMobileActivationError((uint64_t)"copy_splunk_identifier_info", 165, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query %@.", @"uuidString");
    id v19 = 0;
    id v32 = 0;
    id v29 = 0;
    uint64_t v22 = 0;
    id v42 = 0;
    id v43 = 0;
    id v44 = 0;
    id v45 = 0;
    id v46 = 0;
    id v48 = 0;
LABEL_30:
    id v27 = 0;
LABEL_31:
    id v34 = v34;

    id v35 = 0;
    int v36 = 1;
    goto LABEL_32;
  }
  id v6 = +[GestaltHlpr getSharedInstance];
  id v48 = [v6 copyAnswer:@"DeviceClass"];

  id v7 = isNSString(v48);
  LODWORD(v6) = v7 == 0;

  if (v6)
  {
    id v34 = createMobileActivationError((uint64_t)"copy_splunk_identifier_info", 171, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query %@.", @"DeviceClass");
    id v19 = 0;
    id v32 = 0;
    id v29 = 0;
    uint64_t v22 = 0;
    id v42 = 0;
    id v43 = 0;
    id v44 = 0;
    id v45 = 0;
    id v46 = 0;
    goto LABEL_30;
  }
  id v8 = +[GestaltHlpr getSharedInstance];
  id v46 = [v8 copyAnswer:@"DeviceVariant"];

  id v9 = isNSString(v46);
  LODWORD(v8) = v9 == 0;

  if (v8)
  {
    id v34 = createMobileActivationError((uint64_t)"copy_splunk_identifier_info", 177, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query %@.", @"DeviceVariant");
    id v19 = 0;
    id v32 = 0;
    id v29 = 0;
    uint64_t v22 = 0;
    id v42 = 0;
    id v43 = 0;
    id v44 = 0;
    id v45 = 0;
    goto LABEL_30;
  }
  id v10 = +[GestaltHlpr getSharedInstance];
  id v45 = [v10 copyAnswer:@"HWModelStr"];

  id v11 = isNSString(v45);
  LODWORD(v10) = v11 == 0;

  if (v10)
  {
    id v34 = createMobileActivationError((uint64_t)"copy_splunk_identifier_info", 183, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query %@.", @"HWModelStr");
    id v19 = 0;
    id v32 = 0;
    id v29 = 0;
    uint64_t v22 = 0;
    id v42 = 0;
    id v43 = 0;
    id v44 = 0;
    goto LABEL_30;
  }
  id v12 = +[GestaltHlpr getSharedInstance];
  id v44 = [v12 copyAnswer:@"ProductType"];

  id v13 = isNSString(v44);
  LODWORD(v12) = v13 == 0;

  if (v12)
  {
    id v34 = createMobileActivationError((uint64_t)"copy_splunk_identifier_info", 189, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query %@.", @"ProductType");
    id v19 = 0;
    id v32 = 0;
    id v29 = 0;
    uint64_t v22 = 0;
    id v42 = 0;
    id v43 = 0;
    goto LABEL_30;
  }
  id v14 = +[GestaltHlpr getSharedInstance];
  id v43 = [v14 copyAnswer:@"BuildVersion"];

  id v15 = isNSString(v43);
  LODWORD(v14) = v15 == 0;

  if (v14)
  {
    id v34 = createMobileActivationError((uint64_t)"copy_splunk_identifier_info", 195, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query %@.", @"BuildVersion");
    id v19 = 0;
    id v32 = 0;
    id v29 = 0;
    uint64_t v22 = 0;
    id v42 = 0;
    goto LABEL_30;
  }
  id v16 = +[GestaltHlpr getSharedInstance];
  id v42 = [v16 copyAnswer:@"ProductVersion"];

  id v17 = isNSString(v42);
  LODWORD(v16) = v17 == 0;

  if (v16)
  {
    id v34 = createMobileActivationError((uint64_t)"copy_splunk_identifier_info", 201, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query %@.", @"ProductVersion");
    id v19 = 0;
LABEL_29:
    id v32 = 0;
    id v29 = 0;
    uint64_t v22 = 0;
    goto LABEL_30;
  }
  id v18 = +[GestaltHlpr getSharedInstance];
  id v19 = [v18 copyAnswer:@"SigningFuse"];

  id v20 = isNSNumber(v19);
  LODWORD(v18) = v20 == 0;

  if (v18)
  {
    id v34 = createMobileActivationError((uint64_t)"copy_splunk_identifier_info", 207, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query %@.", @"SigningFuse");
    goto LABEL_29;
  }
  id v21 = +[GestaltHlpr getSharedInstance];
  uint64_t v22 = (__CFString *)[v21 copyAnswer:@"ReleaseType"];

  id v23 = isNSString(v22);
  LODWORD(v21) = v23 == 0;

  if (v21)
  {

    uint64_t v22 = @"Customer";
  }
  id v24 = objc_alloc((Class)NSMutableDictionary);
  CFStringRef block = @"deviceClass";
  uint64_t v50 = @"deviceVariant";
  id v60 = v48;
  id v61 = (id *)v46;
  id v51 = (void (*)(uint64_t))@"hardwareModel";
  CFStringRef v52 = @"productType";
  uint64_t v62 = (uint64_t)v45;
  id v63 = (uint64_t (*)(uint64_t, uint64_t))v44;
  id v53 = @"buildVersion";
  CFStringRef v54 = @"productVersion";
  uint64_t v64 = (void (*)(uint64_t))v43;
  id v65 = v42;
  CFStringRef v55 = @"releaseType";
  CFStringRef v56 = @"productionFused";
  id v66 = v22;
  id v67 = v19;
  id v68 = v4;
  CFStringRef v57 = @"uuidString";
  CFStringRef v58 = @"hactivationEnabled";
  id v25 = +[NSNumber numberWithBool:use_hactivation()];
  id v69 = v25;
  CFStringRef v59 = @"diagnosticsCheckEnabled";
  id v70 = &__kCFBooleanTrue;
  id v26 = +[NSDictionary dictionaryWithObjects:&v60 forKeys:&block count:11];
  id v27 = [v24 initWithDictionary:v26];

  if (!has_internal_diagnostics() && !is_internal_build())
  {
    id v29 = 0;
    id v32 = 0;
    goto LABEL_43;
  }
  id v28 = +[GestaltHlpr getSharedInstance];
  id v29 = [v28 copyAnswer:@"SerialNumber"];

  id v30 = isNSString(v29);
  LODWORD(v28) = v30 == 0;

  if (v28)
  {
    id v34 = createMobileActivationError((uint64_t)"copy_splunk_identifier_info", 233, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query %@.", @"SerialNumber");
    id v32 = 0;
    goto LABEL_31;
  }
  [v27 setObject:v29 forKeyedSubscript:@"serialNumber"];
  id v31 = +[GestaltHlpr getSharedInstance];
  id v32 = [v31 copyAnswer:@"UniqueDeviceID"];

  id v33 = isNSString(v32);
  LODWORD(v31) = v33 == 0;

  if (v31)
  {
    id v34 = createMobileActivationError((uint64_t)"copy_splunk_identifier_info", 241, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query %@.", @"UniqueDeviceID");
    goto LABEL_31;
  }
  [v27 setObject:v32 forKeyedSubscript:@"uniqueDeviceID"];
LABEL_43:
  id v35 = v27;
  id v34 = 0;
  if (!v35)
  {
    id v27 = 0;
    goto LABEL_31;
  }
  id v27 = v35;
  int v36 = 0;
LABEL_32:
  id v37 = v35;

  id v38 = v34;
  if (v36)
  {
    id v39 = createAndLogError((uint64_t)"copySplunkDeviceIdentifiers", 828, @"com.apple.MobileActivation.ErrorDomain", -1, v38, @"Failed to query splunk identifier info.");

    id v40 = 0;
    id v38 = v39;
  }
  else
  {
    id v40 = v37;
  }
  if (a2 && !v40) {
    *a2 = v38;
  }

  return v40;
}

void sub_10003BA50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

id copySplunkDailyStatistics(void *a1, NSError **a2)
{
  id v3 = a1;
  id v4 = data_ark_copy(v3, 0, @"ActivationState");
  id v5 = copy_ucrt_path();
  id v6 = [v5 stringByAppendingPathComponent:@"ucrt.pem"];

  id v63 = a2;
  id v71 = v4;
  if (!v6)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"copy_splunk_daily_statistics_info", 307, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create UCRT file path.");
LABEL_18:
    id v27 = MobileActivationError;
    id v69 = 0;
    id v70 = 0;
    id v67 = 0;
    id v68 = 0;
    id v66 = 0;
    id v17 = 0;
LABEL_19:
    id v64 = 0;
    id v65 = 0;
    id v9 = 0;
    id v28 = 0;
    goto LABEL_20;
  }
  id v7 = +[NSFileManager defaultManager];
  unsigned int v8 = [(NSFileManager *)v7 fileExistsAtPath:v6];

  id v9 = &__kCFBooleanFalse;
  if (v8) {
    id v10 = &__kCFBooleanTrue;
  }
  else {
    id v10 = &__kCFBooleanFalse;
  }
  id v11 = copy_dcrt_path();
  id v12 = [v11 stringByAppendingPathComponent:@"dcrt.der"];

  if (!v12)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"copy_splunk_daily_statistics_info", 321, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create DCRT file path.");
    goto LABEL_18;
  }
  id v13 = +[NSFileManager defaultManager];
  unsigned int v14 = [(NSFileManager *)v13 fileExistsAtPath:v12];

  if (v14) {
    id v15 = &__kCFBooleanTrue;
  }
  else {
    id v15 = &__kCFBooleanFalse;
  }
  uint64_t v62 = v15;
  id v16 = copy_dcrt_path();
  id v17 = [v16 stringByAppendingPathComponent:@"sdcrt.der"];

  if (!v17)
  {
    id v27 = createMobileActivationError((uint64_t)"copy_splunk_daily_statistics_info", 335, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create SDCRT file path.");
    id v69 = 0;
    id v70 = 0;
    id v67 = 0;
    id v68 = 0;
    id v66 = 0;
    goto LABEL_19;
  }
  id v18 = +[NSFileManager defaultManager];
  unsigned int v19 = [(NSFileManager *)v18 fileExistsAtPath:v17];

  if (v19) {
    id v20 = &__kCFBooleanTrue;
  }
  else {
    id v20 = &__kCFBooleanFalse;
  }
  id v60 = v20;
  id v21 = copy_suinfo_directory_path();
  id v22 = [v21 stringByAppendingPathComponent:@"psc.sui"];

  id v64 = v22;
  id v61 = v10;
  if (v22
    && (id v23 = +[NSFileManager defaultManager],
        unsigned __int8 v24 = [(NSFileManager *)v23 fileExistsAtPath:v22 isDirectory:0],
        v23,
        (v24 & 1) != 0))
  {
    id v25 = &__kCFBooleanTrue;
  }
  else
  {
    id v25 = &__kCFBooleanFalse;
  }
  CFStringRef v58 = v25;
  id v70 = data_ark_copy(v3, 0, @"CollectionLastPerformed");
  id v41 = data_ark_copy(v3, 0, @"UCRTOOBLastPerformed");
  id v69 = isNSString(v41);

  id v42 = data_ark_copy(v3, 0, @"DCRTOOBLastPerformed");
  id v68 = isNSString(v42);

  id v43 = data_ark_copy(v3, 0, @"SDCRTOOBLastPerformed");
  id v67 = isNSString(v43);

  id v44 = data_ark_copy(v3, 0, @"LastActivated");
  id v66 = isNSString(v44);

  id v45 = data_ark_copy(v3, 0, @"UCRTHealingRequired");
  id v46 = isNSNumber(v45);

  if (v46) {
    uint64_t v47 = v46;
  }
  else {
    uint64_t v47 = &__kCFBooleanFalse;
  }
  id v65 = v47;
  id v48 = data_ark_copy(v3, 0, @"UIKUpgradeRequired");
  id v49 = isNSNumber(v48);

  if (v49) {
    id v9 = v49;
  }
  [@"com.apple.mobileactivationd" UTF8String:v58];
  id v28 = 0;
  id v29 = 0;
  id v30 = 0;
  if ((os_variant_is_darwinos() & 1) == 0)
  {
    id v74 = 0;
    BOOL v51 = hasPrimaryICloudAccount(&v74);
    id v52 = v74;
    id v53 = +[NSNumber numberWithBool:v51];
    id v28 = v53;
    if (!v52)
    {
      if ([(NSNumber *)v53 BOOLValue])
      {
        id v73 = 0;
        BOOL IsHSA2 = primaryICloudAccountIsHSA2(&v73);
        id v55 = v73;
        id v29 = +[NSNumber numberWithBool:IsHSA2];
        if (v55)
        {
          id v27 = createMobileActivationError((uint64_t)"copy_splunk_daily_statistics_info", 478, @"com.apple.MobileActivation.ErrorDomain", -1, v55, @"Failed to query primary iCloud account security state.");

          goto LABEL_21;
        }
      }
      else
      {
        id v29 = 0;
      }
      id v72 = 0;
      BOOL IsEnabled = FindMyDeviceIsEnabled(&v72);
      id v57 = v72;
      id v30 = +[NSNumber numberWithBool:IsEnabled];
      if (!v57) {
        goto LABEL_42;
      }
      id v27 = createMobileActivationError((uint64_t)"copy_splunk_daily_statistics_info", 487, @"com.apple.MobileActivation.ErrorDomain", -1, v57, @"Failed to query FindMy state.");

LABEL_22:
      id v31 = 0;
LABEL_23:
      id v32 = v27;

      id v33 = 0;
      goto LABEL_24;
    }
    id v27 = createMobileActivationError((uint64_t)"copy_splunk_daily_statistics_info", 469, @"com.apple.MobileActivation.ErrorDomain", -1, v52, @"Failed to query primary iCloud account state.");

LABEL_20:
    id v29 = 0;
LABEL_21:
    id v30 = 0;
    goto LABEL_22;
  }
LABEL_42:
  id v31 = +[NSNumber numberWithBool:is_dsp_device()];
  id v50 = objc_alloc_init((Class)NSMutableDictionary);
  if (!v50)
  {
    id v27 = createMobileActivationError((uint64_t)"copy_splunk_daily_statistics_info", 498, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");
    goto LABEL_23;
  }
  id v33 = v50;
  if (v71) {
    [v50 setObject:v71 forKeyedSubscript:@"activationState"];
  }
  [v33 setObject:v61 forKeyedSubscript:@"ucrtAvailable"];
  [v33 setObject:v59 forKeyedSubscript:@"pcrtAvailable"];
  [v33 setObject:v62 forKeyedSubscript:@"dcrtAvailable"];
  [v33 setObject:v60 forKeyedSubscript:@"sdcrtAvailable"];
  if (v70) {
    [v33 setObject:v70 forKeyedSubscript:@"collectionLastPerformedBuild"];
  }
  if (v69) {
    [v33 setObject:v69 forKeyedSubscript:@"ucrtOOBLastPerformedBuild"];
  }
  if (v68) {
    [v33 setObject:v68 forKeyedSubscript:@"dcrtOOBLastPerformedBuild"];
  }
  if (v67) {
    [v33 setObject:v67 forKeyedSubscript:@"sdcrtOOBLastPerformedBuild"];
  }
  if (v66) {
    [v33 setObject:v66 forKeyedSubscript:@"activationLastPerformedBuild"];
  }
  [v33 setObject:v65 forKeyedSubscript:@"ucrtHealingRequired"];
  [v33 setObject:v9 forKeyedSubscript:@"uikUpgradeRequired"];
  if (v28) {
    [v33 setObject:v28 forKeyedSubscript:@"iCloudEnabled"];
  }
  if (v29) {
    [v33 setObject:v29 forKeyedSubscript:@"iCloudHSA2Enabled"];
  }
  if (v30) {
    [v33 setObject:v30 forKeyedSubscript:@"findMyEnabled"];
  }
  if (v31) {
    [v33 setObject:v31 forKeyedSubscript:@"DSPDevice"];
  }
  id v32 = 0;
LABEL_24:

  id v34 = v32;
  if (v33)
  {
    id v35 = objc_alloc_init((Class)NSMutableDictionary);
    if (v35)
    {
      int v36 = v35;
      [v35 addEntriesFromDictionary:v33];
      id v37 = v36;
      goto LABEL_32;
    }
    id v38 = createAndLogError((uint64_t)"copySplunkDailyStatistics", 911, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");
  }
  else
  {
    id v38 = createAndLogError((uint64_t)"copySplunkDailyStatistics", 882, @"com.apple.MobileActivation.ErrorDomain", -1, v34, @"Failed to query daily splunk info.");
  }
  id v39 = v38;

  if (v63)
  {
    id v34 = v39;
    id v37 = 0;
    *id v63 = v34;
  }
  else
  {
    id v37 = 0;
    id v34 = v39;
  }
LABEL_32:

  return v37;
}

id copySortedSplunkFileList()
{
  id v0 = objc_alloc_init((Class)NSMutableArray);
  if (v0)
  {
    id v1 = copy_splunk_directory_path();
    id v2 = copy_sorted_file_list(v1);

    if (v2)
    {
      long long v19 = 0u;
      long long v20 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      id v16 = v2;
      id v3 = v2;
      id v4 = [(NSArray *)v3 countByEnumeratingWithState:&v17 objects:v21 count:16];
      if (v4)
      {
        id v5 = v4;
        uint64_t v6 = *(void *)v18;
        do
        {
          for (i = 0; i != v5; i = (char *)i + 1)
          {
            if (*(void *)v18 != v6) {
              objc_enumerationMutation(v3);
            }
            unsigned int v8 = *(void **)(*((void *)&v17 + 1) + 8 * i);
            id v9 = isNSURL(v8);
            if (v9)
            {
              id v10 = v9;
              id v11 = [v8 pathExtension];
              unsigned int v12 = [v11 isEqualToString:@"splunklog"];

              if (v12)
              {
                id v13 = [v8 path];
                [v0 addObject:v13];
              }
            }
          }
          id v5 = [(NSArray *)v3 countByEnumeratingWithState:&v17 objects:v21 count:16];
        }
        while (v5);
      }

      id v2 = v16;
    }
    id v14 = v0;
  }

  return v0;
}

void writeSplunkLog(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void *a6, void *a7, uint64_t a8, uint64_t a9)
{
  id v15 = a1;
  id v16 = a6;
  id v17 = a7;
  id v30 = 0;
  if (DiagnosticLogSubmissionEnabled())
  {
    long long v18 = copySplunkQueue();
    if (v18)
    {
      long long v19 = v18;
      if (v17)
      {
        id v30 = &a9;
        id v20 = [objc_alloc((Class)NSMutableString) initWithFormat:v17 arguments:&a9];
      }
      else
      {
        id v20 = 0;
      }
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 3254779904;
      v22[2] = __writeSplunkLog_block_invoke;
      v22[3] = &__block_descriptor_84_e8_32s40s48s_e5_v8__0l;
      id v23 = v15;
      uint64_t v26 = a2;
      uint64_t v27 = a3;
      int v29 = a5;
      id v24 = v16;
      id v25 = v20;
      uint64_t v28 = a4;
      id v21 = v20;
      dispatch_async(v19, v22);
    }
    else
    {
      long long v19 = copyLoggingHandle();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_FAULT)) {
        copySplunkDeviceIdentifiers_cold_1();
      }
    }
  }
}

id copySplunkQueue()
{
  if (copySplunkQueue_onceToken != -1) {
    dispatch_once(&copySplunkQueue_onceToken, &__block_literal_global_159);
  }
  id v0 = (void *)copySplunkQueue_splunkQueue;

  return v0;
}

void __writeSplunkLog_block_invoke(uint64_t a1)
{
  if (!*(void *)(a1 + 32))
  {
    id v3 = copyLoggingHandle();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT)) {
      __writeSplunkLog_block_invoke_cold_1();
    }
    goto LABEL_59;
  }
  id v2 = copy_splunk_directory_path();
  if (!v2)
  {
    id v3 = copyLoggingHandle();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT)) {
      __writeSplunkLog_block_invoke_cold_2();
    }
    goto LABEL_59;
  }
  id v3 = v2;
  id v4 = +[NSFileManager defaultManager];
  NSFileAttributeKey v130 = NSFilePosixPermissions;
  uint64_t v131 = &off_10027EEE8;
  id v5 = +[NSDictionary dictionaryWithObjects:&v131 forKeys:&v130 count:1];
  id v122 = 0;
  unsigned __int8 v6 = [(NSFileManager *)v4 createDirectoryAtPath:v3 withIntermediateDirectories:1 attributes:v5 error:&v122];
  id v7 = v122;

  if ((v6 & 1) == 0)
  {
    uint64_t v28 = copyLoggingHandle();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_FAULT)) {
      __writeSplunkLog_block_invoke_cold_14();
    }
    int v29 = (NSNumber *)v28;
    goto LABEL_57;
  }
  unsigned int v8 = +[NSDate date];
  [(NSDate *)v8 timeIntervalSince1970];
  id v10 = +[NSNumber numberWithLong:1000 * (uint64_t)v9];

  id v11 = objc_alloc_init((Class)NSMutableDictionary);
  if (!v11)
  {
    id v30 = copyLoggingHandle();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_FAULT)) {
      __writeSplunkLog_block_invoke_cold_3();
    }

    int v29 = v10;
    goto LABEL_57;
  }
  unsigned int v12 = v11;
  id v13 = *(void **)(a1 + 32);
  id v121 = v7;
  id v14 = (NSNumber *)copySplunkDeviceIdentifiers(v13, &v121);
  id v15 = v121;

  if (!v14)
  {
    id v31 = copyLoggingHandle();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_FAULT)) {
      __writeSplunkLog_block_invoke_cold_4();
    }

    id v32 = v15;
    goto LABEL_58;
  }
  if (*(void *)(a1 + 40)) {
    [v12 addEntriesFromDictionary:];
  }
  [@"com.apple.mobileactivationd" UTF8String];
  if (os_variant_is_darwinos())
  {
    id v16 = 0;
    id v17 = 0;
    long long v18 = 0;
  }
  else
  {
    id v120 = v15;
    BOOL v33 = hasPrimaryICloudAccount(&v120);
    id v7 = v120;

    id v34 = +[NSNumber numberWithBool:v33];
    long long v18 = v34;
    if (v7)
    {
      id v35 = copyLoggingHandle();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_FAULT)) {
        __writeSplunkLog_block_invoke_cold_13();
      }
      int v36 = (NSNumber *)v35;
      goto LABEL_56;
    }
    if ([(NSNumber *)v34 BOOLValue])
    {
      id v119 = 0;
      BOOL IsHSA2 = primaryICloudAccountIsHSA2(&v119);
      id v7 = v119;
      id v103 = +[NSNumber numberWithBool:IsHSA2];
      if (v7)
      {
        id v39 = copyLoggingHandle();
        if (os_log_type_enabled(v39, OS_LOG_TYPE_FAULT)) {
          __writeSplunkLog_block_invoke_cold_12();
        }
        id v40 = (NSNumber *)v39;
        goto LABEL_55;
      }
    }
    else
    {
      id v103 = 0;
    }
    id v118 = 0;
    BOOL IsEnabled = FindMyDeviceIsEnabled(&v118);
    id v7 = v118;
    id v16 = +[NSNumber numberWithBool:IsEnabled];
    if (v7)
    {
      id v37 = copyLoggingHandle();
      if (os_log_type_enabled(v37, OS_LOG_TYPE_FAULT)) {
        __writeSplunkLog_block_invoke_cold_11();
      }
      goto LABEL_53;
    }
    id v15 = 0;
    id v17 = v103;
  }
  [v12 setObject:v18 forKeyedSubscript:@"iCloudEnabled"];
  id v103 = v17;
  [v12 setObject:v17 forKeyedSubscript:@"iCloudHSA2Enabled"];
  [v12 setObject:v16 forKeyedSubscript:@"findMyEnabled"];
  [v12 addEntriesFromDictionary:v14];
  long long v19 = [(NSNumber *)v10 stringValue];
  [v12 setObject:v19 forKeyedSubscript:@"eventTime"];

  id v20 = +[NSNumber numberWithInteger:*(void *)(a1 + 56)];
  [v12 setObject:v20 forKeyedSubscript:@"splunkErrorCategory"];

  id v21 = +[NSNumber numberWithInteger:*(void *)(a1 + 64)];
  [v12 setObject:v21 forKeyedSubscript:@"spiErrorCode"];

  [v12 setObject:@"1015.60.1" forKeyedSubscript:@"projectVersion"];
  id v22 = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 80)];
  [v12 setObject:v22 forKeyedSubscript:@"lineNumber"];

  uint64_t v102 = a1;
  uint64_t v23 = *(void *)(a1 + 48);
  if (v23) {
    [v12 setObject:v23 forKeyedSubscript:@"errorString"];
  }
  if (*(void *)(a1 + 72))
  {
    id v24 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:");
    [v12 setObject:v24 forKeyedSubscript:@"functionName"];
  }
  id v117 = 0;
  id v25 = +[NSPropertyListSerialization dataWithPropertyList:v12 format:200 options:0 error:&v117];
  id v7 = v117;

  if (!v25)
  {
    id v37 = copyLoggingHandle();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_FAULT)) {
      __writeSplunkLog_block_invoke_cold_5();
    }
LABEL_53:
    uint64_t v27 = (NSData *)v37;
LABEL_54:

    id v40 = v16;
LABEL_55:

    int v36 = v103;
LABEL_56:

    int v29 = v14;
LABEL_57:

    id v32 = v7;
LABEL_58:

    goto LABEL_59;
  }
  if ([(NSData *)v25 length] > 0x100000)
  {
    uint64_t v26 = copyLoggingHandle();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_FAULT)) {
      __writeSplunkLog_block_invoke_cold_6(v25, v26);
    }

    uint64_t v27 = v25;
    goto LABEL_54;
  }
  id v99 = v25;
  id v41 = copySortedSplunkFileList();
  id v100 = v16;
  id v95 = v18;
  if (v41)
  {
    id v42 = [objc_alloc((Class)NSMutableArray) initWithArray:v41];
    if ((unint64_t)[v42 count] >= 0x15)
    {
      do
      {
        id v43 = copyLoggingHandle();
        if (os_log_type_enabled(v43, OS_LOG_TYPE_FAULT)) {
          __writeSplunkLog_block_invoke_cold_10(v128, v42, &v129, v43);
        }

        id v44 = +[NSFileManager defaultManager];
        id v45 = [v42 lastObject];
        [(NSFileManager *)v44 removeItemAtPath:v45 error:0];

        [v42 removeLastObject];
      }
      while ((unint64_t)[v42 count] > 0x14);
    }
  }
  else
  {
    id v42 = 0;
  }
  id v94 = v41;
  id v96 = v10;
  id v97 = v14;
  id v101 = v12;
  id v98 = v3;
  long long v116 = 0u;
  long long v114 = 0u;
  long long v115 = 0u;
  long long v113 = 0u;
  id obj = v42;
  id v47 = [obj countByEnumeratingWithState:&v113 objects:v127 count:16];
  if (v47)
  {
    id v48 = v47;
    id v49 = 0;
    uint64_t v50 = *(void *)v114;
LABEL_63:
    uint64_t v51 = 0;
    while (1)
    {
      id v52 = v49;
      if (*(void *)v114 != v50) {
        objc_enumerationMutation(obj);
      }
      id v53 = *(void **)(*((void *)&v113 + 1) + 8 * v51);
      CFStringRef v54 = +[NSFileManager defaultManager];
      id v112 = v7;
      id v49 = [(NSFileManager *)v54 attributesOfItemAtPath:v53 error:&v112];
      id v55 = v112;

      if (v49)
      {
        id v56 = [(NSDictionary *)v49 objectForKeyedSubscript:NSFileSize];
        id v57 = isNSNumber(v56);

        if (v57)
        {
          id v58 = objc_alloc((Class)NSData);
          id v111 = v55;
          uint64_t v59 = (NSFileManager *)[v58 initWithContentsOfFile:v53 options:0 error:&v111];
          id v60 = v111;

          if (v59)
          {
            id v109 = 0;
            id v61 = +[NSPropertyListSerialization propertyListWithData:v59 options:0 format:0 error:&v109];
            id v7 = v109;

            id v62 = isNSArray(v61);
            if (v62)
            {
              id v63 = v62;
              id v64 = [v61 count];

              if ((unint64_t)v64 < 0x3E9)
              {
                id v74 = [(NSDictionary *)v49 objectForKeyedSubscript:NSFileSize];
                unsigned int v75 = [v74 integerValue];

                char v76 = +[NSMutableArray arrayWithArray:v61];
                id v77 = v53;

                if (v76
                  && [(NSMutableArray *)v76 count] != (id)1000
                  && [(NSData *)v99 length] + v75 <= 0x100000)
                {
                  [(NSMutableArray *)v76 addObject:v101];
                  goto LABEL_96;
                }
                goto LABEL_95;
              }
            }
            id v65 = copyLoggingHandle();
            if (os_log_type_enabled(v65, OS_LOG_TYPE_FAULT))
            {
              *(_DWORD *)buf = 138412546;
              char v124 = v53;
              __int16 v125 = 2112;
              id v126 = v7;
              _os_log_fault_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_FAULT, "Invalid splunk file (%@): %@", buf, 0x16u);
            }

            id v66 = +[NSFileManager defaultManager];
            [(NSFileManager *)v66 removeItemAtPath:0 error:0];

            id v67 = v61;
          }
          else
          {
            id v72 = copyLoggingHandle();
            if (os_log_type_enabled(v72, OS_LOG_TYPE_FAULT))
            {
              *(_DWORD *)buf = 138412546;
              char v124 = v53;
              __int16 v125 = 2112;
              id v126 = v60;
              _os_log_fault_impl((void *)&_mh_execute_header, v72, OS_LOG_TYPE_FAULT, "Failed to load %@: %@", buf, 0x16u);
            }

            uint64_t v59 = +[NSFileManager defaultManager];
            id v110 = v60;
            [(NSFileManager *)v59 removeItemAtPath:v53 error:&v110];
            id v7 = v110;
            id v67 = v60;
          }

          goto LABEL_83;
        }
        id v68 = copyLoggingHandle();
        if (os_log_type_enabled(v68, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)buf = 138412290;
          char v124 = v53;
          id v69 = v68;
          id v70 = "Failed to retrieve size of %@.";
          uint32_t v71 = 12;
          goto LABEL_86;
        }
      }
      else
      {
        id v68 = copyLoggingHandle();
        if (os_log_type_enabled(v68, OS_LOG_TYPE_FAULT))
        {
          *(_DWORD *)buf = 138412546;
          char v124 = v53;
          __int16 v125 = 2112;
          id v126 = v55;
          id v69 = v68;
          id v70 = "Failed to retrieve attributes for %@: (%@)";
          uint32_t v71 = 22;
LABEL_86:
          _os_log_fault_impl((void *)&_mh_execute_header, v69, OS_LOG_TYPE_FAULT, v70, buf, v71);
        }
      }

      uint64_t v59 = +[NSFileManager defaultManager];
      [(NSFileManager *)v59 removeItemAtPath:v53 error:0];
      id v7 = v55;
LABEL_83:

      if (v48 == (id)++v51)
      {
        id v73 = [obj countByEnumeratingWithState:&v113 objects:v127 count:16];
        id v48 = v73;
        if (v73) {
          goto LABEL_63;
        }
        goto LABEL_94;
      }
    }
  }
  id v49 = 0;
LABEL_94:

  char v76 = 0;
  id v77 = 0;
LABEL_95:
  char v78 = v77;
  uint64_t v79 = v76;
  id v80 = objc_alloc((Class)NSString);
  id v81 = copy_splunk_directory_path();
  id v82 = +[NSUUID UUID];
  id v83 = [(NSUUID *)v82 UUIDString];
  id v77 = [v80 initWithFormat:@"%@/%@.splunklog", v81, v83];

  char v76 = (NSMutableArray *)[objc_alloc((Class)NSMutableArray) initWithObjects:v101];
  if (v76)
  {
LABEL_96:
    id v108 = 0;
    uint64_t v84 = +[NSPropertyListSerialization dataWithPropertyList:v76 format:200 options:0 error:&v108];
    id v85 = v108;

    if (v84)
    {
      id v107 = v85;
      char v86 = store_data(v77, v84, &v107);
      id v87 = v107;

      if (v86)
      {
        id v88 = (const char *)[@"com.apple.mobileactivationd.splunklogging" UTF8String];
        handler[0] = _NSConcreteStackBlock;
        handler[1] = 3254779904;
        handler[2] = __writeSplunkLog_block_invoke_45;
        handler[3] = &__block_descriptor_40_e8_32s_e33_v16__0__NSObject_OS_xpc_object__8l;
        id v106 = *(id *)(v102 + 32);
        xpc_activity_register(v88, XPC_ACTIVITY_CHECK_IN, handler);

        uint64_t v89 = v94;
      }
      else
      {
        uint64_t v93 = copyLoggingHandle();
        if (os_log_type_enabled(v93, OS_LOG_TYPE_FAULT)) {
          __writeSplunkLog_block_invoke_cold_9();
        }

        uint64_t v89 = v94;
      }

      uint64_t v91 = v87;
    }
    else
    {
      id v92 = copyLoggingHandle();
      if (os_log_type_enabled(v92, OS_LOG_TYPE_FAULT)) {
        __writeSplunkLog_block_invoke_cold_8();
      }

      uint64_t v91 = v85;
    }
  }
  else
  {
    id v90 = copyLoggingHandle();
    if (os_log_type_enabled(v90, OS_LOG_TYPE_FAULT)) {
      __writeSplunkLog_block_invoke_cold_7();
    }

    uint64_t v91 = v7;
  }

  id v3 = v98;
LABEL_59:
}

void __writeSplunkLog_block_invoke_45(uint64_t a1, id a2)
{
  id v3 = (_xpc_activity_s *)a2;
  if (xpc_activity_get_state(v3) == 2 && xpc_activity_should_defer(v3))
  {
    if (xpc_activity_set_state(v3, 3)) {
      goto LABEL_11;
    }
    id v4 = copyLoggingHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      __writeSplunkLog_block_invoke_45_cold_1(v4, v5, v6, v7, v8, v9, v10, v11);
    }
  }
  xpc_object_t v12 = xpc_activity_copy_criteria(v3);
  if (!v12 || xpc_activity_get_state(v3) == 2) {
    splunk_activity_handler(*(void **)(a1 + 32), v12 == 0);
  }

LABEL_11:
}

void splunk_activity_handler(void *a1, int a2)
{
  id v3 = a1;
  id v4 = copySplunkQueue();
  if (v4)
  {
    if (a2)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3254779904;
      block[2] = __splunk_activity_handler_block_invoke;
      block[3] = &__block_descriptor_40_e8_32s_e5_v8__0l;
      id v12 = v3;
      uint64_t v5 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_DEFAULT, 0, block);
      dispatch_async(v4, v5);
      id v6 = v12;
    }
    else
    {
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3254779904;
      v8[2] = __splunk_activity_handler_block_invoke_51;
      v8[3] = &__block_descriptor_48_e8_32s40s_e5_v8__0l;
      id v9 = v3;
      uint64_t v7 = v4;
      id v10 = v7;
      uint64_t v5 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_DEFAULT, 0, v8);
      dispatch_async(v7, v5);

      id v6 = v9;
    }
  }
  else
  {
    uint64_t v5 = copyLoggingHandle();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT)) {
      copySplunkDeviceIdentifiers_cold_1();
    }
  }
}

void __splunk_activity_handler_block_invoke(uint64_t a1)
{
  data_ark_remove(*(void **)(a1 + 32), 0, @"SplunkRetryAttempt");
  id v2 = *(void **)(a1 + 32);
  id v3 = (const char *)[@"com.apple.mobileactivationd.splunklogging" UTF8String];

  scheduleXPCActivity(v2, v3, 5u, 1, 0x400u, 0x400u, &__block_literal_global_6);
}

void __splunk_activity_handler_block_invoke_2(id a1, DataArk *a2)
{
}

void __splunk_activity_handler_block_invoke_51(uint64_t a1)
{
  uint64_t v39 = 0;
  id v40 = (id *)&v39;
  uint64_t v41 = 0x3032000000;
  id v42 = __Block_byref_object_copy__6;
  id v43 = __Block_byref_object_dispose__6;
  id v44 = 0;
  id v2 = copySortedSplunkFileList();
  id v25 = v2;
  if (!v2)
  {
    id v20 = 0;
    id v4 = 0;
    goto LABEL_24;
  }
  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id v3 = [v2 reverseObjectEnumerator];
  id v4 = [v3 countByEnumeratingWithState:&v35 objects:v49 count:16];
  if (!v4)
  {
LABEL_18:
    id v20 = 0;
    id v21 = 0;
LABEL_22:

    goto LABEL_25;
  }
  uint64_t v5 = *(void *)v36;
LABEL_4:
  uint64_t v6 = 0;
  while (1)
  {
    if (*(void *)v36 != v5) {
      objc_enumerationMutation(v3);
    }
    uint64_t v7 = *(void **)(*((void *)&v35 + 1) + 8 * v6);
    id v8 = objc_alloc((Class)NSData);
    id v9 = v40 + 5;
    id obj = v40[5];
    id v10 = [v8 initWithContentsOfFile:v7 options:0 error:&obj];
    objc_storeStrong(v9, obj);
    if (!v10)
    {
      id v17 = copyLoggingHandle();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_FAULT))
      {
        id v19 = v40[5];
        *(_DWORD *)buf = 138412546;
        id v46 = v7;
        __int16 v47 = 2112;
        id v48 = v19;
        _os_log_fault_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_FAULT, "Failed to load %@: %@", buf, 0x16u);
      }

      id v12 = +[NSFileManager defaultManager];
      [(NSFileManager *)v12 removeItemAtPath:v7 error:0];
      goto LABEL_16;
    }
    uint64_t v11 = v40;
    id v33 = 0;
    id v12 = (NSFileManager *)+[NSPropertyListSerialization propertyListWithData:v10 options:0 format:0 error:&v33];
    objc_storeStrong(v11 + 5, v33);
    id v13 = isNSArray(v12);
    if (v13)
    {
      BOOL v14 = (unint64_t)[(NSFileManager *)v12 count] > 0x3E8;

      if (!v14) {
        break;
      }
    }
    id v15 = copyLoggingHandle();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_FAULT))
    {
      id v18 = v40[5];
      *(_DWORD *)buf = 138412546;
      id v46 = v7;
      __int16 v47 = 2112;
      id v48 = v18;
      _os_log_fault_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_FAULT, "Invalid splunk file (%@): %@", buf, 0x16u);
    }

    id v16 = +[NSFileManager defaultManager];
    [(NSFileManager *)v16 removeItemAtPath:v7 error:0];

LABEL_16:
    if (v4 == (id)++v6)
    {
      id v4 = [v3 countByEnumeratingWithState:&v35 objects:v49 count:16];
      if (v4) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  id v4 = v7;

  if (v12)
  {
    id v22 = [v4 stringByAppendingString:@".inflight"];
    uint64_t v23 = +[NSFileManager defaultManager];
    [(NSFileManager *)v23 moveItemAtPath:v4 toPath:v22 error:0];

    id v24 = dispatch_get_global_queue(0, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3254779904;
    block[2] = __splunk_activity_handler_block_invoke_55;
    block[3] = &__block_descriptor_80_e8_32s40s48s56s64s72r_e5_v8__0l;
    id v20 = v22;
    id v27 = v20;
    id v21 = v12;
    uint64_t v28 = v21;
    id v4 = v4;
    id v29 = v4;
    id v32 = &v39;
    id v30 = *(id *)(a1 + 32);
    id v31 = *(id *)(a1 + 40);
    dispatch_async(v24, block);

    id v3 = v27;
    goto LABEL_22;
  }
  id v20 = 0;
LABEL_24:
  id v21 = 0;
LABEL_25:
  _Block_object_dispose(&v39, 8);
}

void sub_10003E190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

void __splunk_activity_handler_block_invoke_55(uint64_t a1)
{
  uint64_t v72 = 0;
  id v73 = &v72;
  uint64_t v74 = 0x3032000000;
  unsigned int v75 = __Block_byref_object_copy__6;
  char v76 = __Block_byref_object_dispose__6;
  id v77 = 0;
  id v2 = copyLoggingHandle();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    *(void *)&uint8_t buf[4] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Performing splunk logging (%@).", buf, 0xCu);
  }

  [@"com.apple.mobileactivationd.splunklogging" UTF8String];
  uint64_t v4 = os_transaction_create();
  uint64_t v5 = (void *)v73[5];
  v73[5] = v4;

  uint64_t v6 = *(void **)(a1 + 32);
  uint64_t v7 = *(void **)(a1 + 40);
  v63[0] = _NSConcreteStackBlock;
  v63[1] = 3254779904;
  id v64 = __splunk_activity_handler_block_invoke_56;
  id v65 = &__block_descriptor_80_e8_32s40s48s56s64r72r_e48_v40__0__NSData_8__NSDictionary_16q24__NSError_32l;
  id v66 = v6;
  id v8 = *(id *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 72);
  id v67 = v8;
  uint64_t v70 = v9;
  id v68 = *(id *)(a1 + 56);
  uint32_t v71 = &v72;
  id v69 = *(id *)(a1 + 64);
  id v10 = v7;
  uint64_t v11 = v63;
  uint64_t v80 = 0;
  if (!v10)
  {
    id v17 = createMobileActivationError((uint64_t)"performSplunkPost", 664, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    id v61 = 0;
    id v62 = 0;
    goto LABEL_24;
  }
  if (!is_internal_build())
  {
    id v61 = 0;
    id v62 = 0;
    goto LABEL_12;
  }
  id v12 = objc_alloc((Class)NSUserDefaults);
  id v62 = [v12 persistentDomainForName:@"com.apple.mobileactivationd"];

  id v13 = [v62 objectForKeyedSubscript:@"UseReverseProxy"];
  id v14 = isNSNumber(v13);
  if (!v14)
  {

    goto LABEL_11;
  }
  id v15 = [v62 objectForKeyedSubscript:@"UseReverseProxy"];
  unsigned int v16 = [v15 BOOLValue];

  if (!v16)
  {
LABEL_11:
    id v61 = 0;
    goto LABEL_12;
  }
  id v61 = copyReverseProxyDictionary(0, 0, 0);
LABEL_12:
  id v18 = objc_alloc_init((Class)NSMutableDictionary);
  id v19 = v18;
  if (v18)
  {
    [v18 setObject:v10 forKeyedSubscript:@"events"];
    id v20 = +[NSDate date];
    [(NSDate *)v20 timeIntervalSince1970];
    id v22 = +[NSNumber numberWithLong:1000 * (uint64_t)v21];
    [v19 setObject:v22 forKeyedSubscript:@"postTime"];

    id v79 = 0;
    uint64_t v23 = +[NSJSONSerialization dataWithJSONObject:v19 options:0 error:&v79];
    id v24 = (NSError *)v79;
    id v25 = v24;
    if (v23)
    {
      id v26 = objc_alloc((Class)NSMutableURLRequest);
      id v27 = +[NSURL URLWithString:@"https://init.itunes.apple.com/bag.xml?ix=5"];
      LODWORD(v28) = NETWORK_TIMEOUT_SECONDS;
      id v29 = [v26 initWithURL:v27 cachePolicy:0 timeoutInterval:(double)v28];

      if (!v29)
      {
        id v17 = createMobileActivationError((uint64_t)"performSplunkPost", 698, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate request.");
        id v30 = 0;
        id v47 = 0;
        id v29 = 0;
LABEL_43:
        id v48 = 0;
        goto LABEL_44;
      }
      [v29 setValue:forHTTPHeaderField:];
      char v78 = v25;
      id v30 = (NSError *)talkToServerWithError(v29, 0, 0, v61, 0, 0, &v78);
      uint64_t v59 = v78;

      if (v30)
      {
        *(void *)buf = 0;
        id v58 = +[NSPropertyListSerialization propertyListWithData:v30 options:0 format:0 error:buf];
        id v31 = (NSError *)*(id *)buf;
        id v32 = isNSDictionary(v58);
        BOOL v33 = v32 == 0;

        if (v33)
        {
          id v49 = createMobileActivationError((uint64_t)"copySplunkBaseURLFromStorebag", 607, @"com.apple.MobileActivation.ErrorDomain", -1, v31, @"Failed to create dictionary from data.");
          id v54 = 0;
          id v55 = 0;
          id v56 = 0;
          id v57 = 0;
        }
        else
        {
          id v57 = [v58 objectForKey:@"bag"];
          id v34 = isNSData(v57);
          BOOL v35 = v34 == 0;

          if (v35)
          {
            id v49 = createMobileActivationError((uint64_t)"copySplunkBaseURLFromStorebag", 613, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Storebag data is missing 'bag' key.");
            id v54 = 0;
            id v55 = 0;
            id v56 = 0;
          }
          else
          {
            id v81 = 0;
            id v56 = +[NSPropertyListSerialization propertyListWithData:v57 options:0 format:0 error:&v81];
            long long v36 = v81;

            id v37 = isNSDictionary(v56);
            BOOL v38 = v37 == 0;

            if (v38)
            {
              id v49 = createMobileActivationError((uint64_t)"copySplunkBaseURLFromStorebag", 622, @"com.apple.MobileActivation.ErrorDomain", -1, v36, @"Failed to create dictionary from data.");
              id v54 = 0;
              id v55 = 0;
            }
            else
            {
              id v55 = [v56 objectForKeyedSubscript:@"metrics"];
              id v39 = isNSDictionary(v55);
              BOOL v40 = v39 == 0;

              if (v40)
              {
                id v49 = createMobileActivationError((uint64_t)"copySplunkBaseURLFromStorebag", 628, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Storebag data is missing 'metrics' key.");
                id v54 = 0;
              }
              else
              {
                id v41 = [v55 objectForKey:@"metricsUrl"];
                id v42 = isNSString(v41);
                id v54 = v41;
                LODWORD(v41) = v42 == 0;

                if (!v41)
                {
                  id v43 = v54;
                  if (v43)
                  {
                    id v44 = v43;
                    char v45 = 0;
                    id v54 = v43;
                    id v46 = v59;
LABEL_36:

                    id v25 = v46;
                    if (v45)
                    {
                      MobileActivationError = createMobileActivationError((uint64_t)"performSplunkPost", 712, @"com.apple.MobileActivation.ErrorDomain", -1, v25, @"Failed to retrieve Splunk base URL from iTunes storebag.");
                    }
                    else
                    {
                      id v48 = [v44 stringByAppendingPathComponent:@"2/xp_coreos_mobile_activation"];

                      if (v48)
                      {
                        id v60 = objc_alloc_init((Class)NSMutableURLRequest);

                        if (v60)
                        {
                          [v60 setValue:@"iOS Device Activator (MobileActivation-1015.60.1)" forHTTPHeaderField:@"User-Agent"];
                          uint64_t v51 = +[NSString stringWithFormat:@"application/json"];
                          [v60 setValue:v51 forHTTPHeaderField:@"Content-Type"];

                          [v60 setHTTPMethod:@"POST"];
                          [v60 setHTTPBody:v23];
                          id v52 = +[NSURL URLWithString:v48];
                          [v60 setURL:v52];

                          id v81 = v25;
                          *(void *)buf = 0;
                          id v53 = (NSError *)talkToServerWithError(v60, 0, 0, v61, buf, &v80, &v81);
                          id v47 = *(id *)buf;
                          id v17 = v81;

                          id v25 = v30;
                          id v30 = v53;
                          id v29 = v60;
                        }
                        else
                        {
                          id v17 = createMobileActivationError((uint64_t)"performSplunkPost", 726, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate request.");
                          id v47 = 0;
                          id v29 = 0;
                        }
                        goto LABEL_44;
                      }
                      MobileActivationError = createMobileActivationError((uint64_t)"performSplunkPost", 718, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create Splunk URL.");
                    }
                    id v17 = MobileActivationError;
                    id v47 = 0;
                    goto LABEL_43;
                  }
                  id v54 = 0;
LABEL_35:
                  long long v36 = v36;
                  id v44 = 0;
                  char v45 = 1;
                  id v46 = v36;
                  goto LABEL_36;
                }
                id v49 = createMobileActivationError((uint64_t)"copySplunkBaseURLFromStorebag", 634, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Storebag data is missing 'metricsURL' key.");
              }
            }
            id v31 = v36;
          }
        }

        long long v36 = v49;
        goto LABEL_35;
      }
      id v17 = createMobileActivationError((uint64_t)"performSplunkPost", 706, @"com.apple.MobileActivation.ErrorDomain", -6, v59, @"iTunes storebag request failed.");
      id v30 = 0;
      id v47 = 0;
      id v48 = 0;
      id v25 = v59;
    }
    else
    {
      id v17 = createMobileActivationError((uint64_t)"performSplunkPost", 688, @"com.apple.MobileActivation.ErrorDomain", -1, v24, @"Failed to serialize data: %@", v24);
      id v30 = 0;
      id v47 = 0;
      id v29 = 0;
      id v48 = 0;
      uint64_t v23 = 0;
    }
LABEL_44:

    goto LABEL_45;
  }
  id v17 = createMobileActivationError((uint64_t)"performSplunkPost", 679, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create post dictionary.");
LABEL_24:
  id v30 = 0;
  id v47 = 0;
  id v29 = 0;
  id v48 = 0;
  uint64_t v23 = 0;
  id v19 = 0;
LABEL_45:
  v64((uint64_t)v11, (int)v30, (int)v47, v80, v17);

  _Block_object_dispose(&v72, 8);
}

void sub_10003ED8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void __splunk_activity_handler_block_invoke_56(uint64_t a1, int a2, int a3, uint64_t a4, id a5)
{
  id v7 = a5;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3254779904;
  block[2] = __splunk_activity_handler_block_invoke_2_57;
  block[3] = &__block_descriptor_88_e8_32s40s48s56s64r72r_e5_v8__0l;
  uint64_t v20 = a4;
  id v14 = *(id *)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 64);
  id v15 = v8;
  id v16 = v7;
  id v9 = *(id *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 72);
  id v17 = v9;
  uint64_t v19 = v10;
  id v11 = v7;
  dispatch_block_t v12 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_DEFAULT, 0, block);
  dispatch_async(*(dispatch_queue_t *)(a1 + 56), v12);
}

void __splunk_activity_handler_block_invoke_2_57(uint64_t a1)
{
  if (isRunningInRecovery()) {
    uint64_t v2 = 2;
  }
  else {
    uint64_t v2 = 6;
  }
  uint64_t v3 = *(void *)(a1 + 80);
  if ((unint64_t)(v3 - 200) >= 0x64)
  {
    if ((unint64_t)(v3 - 300) >= 0xC8)
    {
      id v14 = +[NSFileManager defaultManager];
      [(NSFileManager *)v14 moveItemAtPath:*(void *)(a1 + 32) toPath:*(void *)(a1 + 40) error:0];

      uint64_t v15 = *(void *)(a1 + 80);
      id v16 = *(void **)(a1 + 48);
      id v17 = +[NSHTTPURLResponse localizedStringForStatusCode:v15];
      uint64_t v18 = createMobileActivationError((uint64_t)"splunk_activity_handler_block_invoke_2", 1387, @"com.apple.MobileActivation.ServerErrorDomain", v15, v16, @"Server error: %ld (%@)", v15, v17);

      uint64_t v19 = *(void *)(a1 + 80);
      uint64_t v20 = +[NSHTTPURLResponse localizedStringForStatusCode:v19];
      double v21 = createMobileActivationError((uint64_t)"splunk_activity_handler_block_invoke_2", 1387, @"com.apple.MobileActivation.ErrorDomain", -6, v18, @"Server error: %ld (%@)", v19, v20);

      uint64_t v22 = *(void *)(*(void *)(a1 + 64) + 8);
      uint64_t v23 = *(void **)(v22 + 40);
      *(void *)(v22 + 40) = v21;

      goto LABEL_11;
    }
    uint64_t v4 = *(void **)(a1 + 48);
    uint64_t v5 = +[NSHTTPURLResponse localizedStringForStatusCode:*(void *)(a1 + 80)];
    uint64_t v6 = createMobileActivationError((uint64_t)"splunk_activity_handler_block_invoke_2", 1392, @"com.apple.MobileActivation.ServerErrorDomain", v3, v4, @"Server error: %ld (%@)", v3, v5);

    uint64_t v7 = *(void *)(a1 + 80);
    id v8 = +[NSHTTPURLResponse localizedStringForStatusCode:v7];
    id v9 = createMobileActivationError((uint64_t)"splunk_activity_handler_block_invoke_2", 1392, @"com.apple.MobileActivation.ErrorDomain", -5, v6, @"Server error: %ld (%@)", v7, v8);

    uint64_t v10 = *(void *)(*(void *)(a1 + 64) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    dispatch_block_t v12 = copyLoggingHandle();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_FAULT)) {
      __splunk_activity_handler_block_invoke_2_57_cold_1(a1, a1 + 64, v12);
    }
  }
  id v13 = +[NSFileManager defaultManager];
  [(NSFileManager *)v13 removeItemAtPath:*(void *)(a1 + 32) error:0];

  data_ark_remove(*(void **)(a1 + 56), 0, @"SplunkRetryAttempt");
LABEL_11:
  id v24 = copySortedSplunkFileList();
  id v25 = v24;
  if (!v24 || ![v24 count]) {
    goto LABEL_24;
  }
  if (*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40))
  {
    id v26 = (NSNumber *)data_ark_copy(*(void **)(a1 + 56), 0, @"SplunkRetryAttempt");
    id v27 = isNSNumber(v26);

    if (v27)
    {
      unint64_t v28 = +[NSNumber numberWithLongLong:(char *)[(NSNumber *)v26 longLongValue] + 1];

      if ([(NSNumber *)v28 unsignedLongLongValue] <= v2)
      {
LABEL_20:
        data_ark_set(*(void **)(a1 + 56), 0, @"SplunkRetryAttempt", v28, 1);
        [(NSNumber *)v28 doubleValue];
        unsigned int v29 = (exp2(v30) * 60.0);

        goto LABEL_21;
      }
      id v26 = v28;
      unint64_t v28 = +[NSNumber numberWithUnsignedInt:v2];
    }
    else
    {
      unint64_t v28 = (NSNumber *)&off_10027EF00;
    }

    goto LABEL_20;
  }
  unsigned int v29 = 5;
LABEL_21:
  id v31 = copyLoggingHandle();
  if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    unsigned int v36 = v29;
    _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "Rescheduling splunk logging for %d seconds.", buf, 8u);
  }

  scheduleXPCActivity(*(void **)(a1 + 56), (const char *)[@"com.apple.mobileactivationd.splunklogging" UTF8String], v29, 1, 0x400u, 0x400u, &__block_literal_global_66);
LABEL_24:
  id v32 = copyLoggingHandle();
  if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "Successfully performed splunk logging.", buf, 2u);
  }

  uint64_t v33 = *(void *)(*(void *)(a1 + 72) + 8);
  id v34 = *(void **)(v33 + 40);
  *(void *)(v33 + 40) = 0;
}

void __splunk_activity_handler_block_invoke_64(id a1, DataArk *a2)
{
}

void __copy_helper_block_e8_32s40s48s56s64r72r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  _Block_object_assign((void *)(a1 + 64), *(const void **)(a2 + 64), 8);
  id v8 = *(const void **)(a2 + 72);

  _Block_object_assign((void *)(a1 + 72), v8, 8);
}

void __copy_helper_block_e8_32s40s48s56s64s72r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  id v8 = *(id *)(a2 + 64);
  id v9 = *(const void **)(a2 + 72);

  _Block_object_assign((void *)(a1 + 72), v9, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64s72r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 72), 8);

  uint64_t v2 = *(void **)(a1 + 32);
}

void splunk_daily_stats_activity_handler(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = copySplunkQueue();
    if (v2)
    {
      uint64_t v3 = v2;
      block[0] = _NSConcreteStackBlock;
      block[1] = 3254779904;
      block[2] = __splunk_daily_stats_activity_handler_block_invoke;
      block[3] = &__block_descriptor_40_e8_32s_e5_v8__0l;
      id v6 = v1;
      id v4 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_DEFAULT, 0, block);

      dispatch_async(v3, v4);
    }
    else
    {
      id v4 = copyLoggingHandle();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
        copySplunkDeviceIdentifiers_cold_1();
      }
    }
  }
  else
  {
    id v4 = copyLoggingHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Invalid input.", buf, 2u);
    }
  }
}

void __splunk_daily_stats_activity_handler_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v8 = 0;
  id v3 = copySplunkDailyStatistics(v2, (NSError **)&v8);
  id v5 = v8;
  if (!v3)
  {
    id v6 = copyLoggingHandle();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT)) {
      __splunk_daily_stats_activity_handler_block_invoke_cold_1();
    }
  }
  writeSplunkLog(*(void **)(a1 + 32), 25, -1, (uint64_t)"splunk_daily_stats_activity_handler_block_invoke", 1474, v3, 0, v4, v7);
}

void splunk_roll_uuid_activity_handler(void *a1)
{
  id v1 = a1;
  uint64_t v11 = 0;
  dispatch_block_t v12 = &v11;
  uint64_t v13 = 0x3032000000;
  id v14 = __Block_byref_object_copy__6;
  uint64_t v15 = __Block_byref_object_dispose__6;
  id v16 = 0;
  if (v1)
  {
    uint64_t v2 = copySplunkQueue();
    if (v2)
    {
      id v3 = v2;
      [@"com.apple.mobileactivationd.splunklogging.rollidentifier" UTF8String];
      uint64_t v4 = os_transaction_create();
      id v5 = (void *)v12[5];
      v12[5] = v4;

      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3254779904;
      v7[2] = __splunk_roll_uuid_activity_handler_block_invoke;
      v7[3] = &__block_descriptor_48_e8_32s40r_e5_v8__0l;
      id v8 = v1;
      id v9 = &v11;
      id v6 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_DEFAULT, 0, v7);

      dispatch_async(v3, v6);
    }
    else
    {
      id v6 = copyLoggingHandle();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT)) {
        copySplunkDeviceIdentifiers_cold_1();
      }
    }
  }
  else
  {
    id v6 = copyLoggingHandle();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Invalid input.", buf, 2u);
    }
  }

  _Block_object_dispose(&v11, 8);
}

void sub_10003F954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __splunk_roll_uuid_activity_handler_block_invoke(uint64_t a1)
{
  rollSplunkLogUUID(*(void **)(a1 + 32));
  uint64_t v2 = copyLoggingHandle();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Successfully rolled splunk logging UUID.", v5, 2u);
  }

  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = 0;
}

void rollSplunkLogUUID(void *a1)
{
  id v1 = a1;
  uint64_t v2 = copySplunkUUIDQueue();
  if (v2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3254779904;
    block[2] = __rollSplunkLogUUID_block_invoke;
    block[3] = &__block_descriptor_40_e8_32s_e5_v8__0l;
    id v5 = v1;
    dispatch_async(v2, block);
    uint64_t v3 = v5;
  }
  else
  {
    uint64_t v3 = copyLoggingHandle();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT)) {
      copySplunkDeviceIdentifiers_cold_1();
    }
  }
}

id copySplunkUUIDQueue()
{
  if (copySplunkUUIDQueue_onceToken != -1) {
    dispatch_once(&copySplunkUUIDQueue_onceToken, &__block_literal_global_223);
  }
  id v0 = (void *)copySplunkUUIDQueue_splunkQueue;

  return v0;
}

void __rollSplunkLogUUID_block_invoke(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = +[NSUUID UUID];
  uint64_t v3 = [(NSUUID *)v2 UUIDString];
  data_ark_set(v1, 0, @"uuidString", v3, 1);
}

void __copySplunkLogUUID_block_invoke(uint64_t a1)
{
  if (!data_ark_exists(*(void **)(a1 + 32), 0, @"uuidString"))
  {
    uint64_t v2 = *(void **)(a1 + 32);
    uint64_t v3 = +[NSUUID UUID];
    uint64_t v4 = [(NSUUID *)v3 UUIDString];
    data_ark_set(v2, 0, @"uuidString", v4, 1);
  }
  id v5 = data_ark_copy(*(void **)(a1 + 32), 0, @"uuidString");
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void __copySplunkQueue_block_invoke(id a1)
{
  id v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v2 = dispatch_queue_create("com.apple.mobileactivationd.splunk", v1);
  uint64_t v3 = (void *)copySplunkQueue_splunkQueue;
  copySplunkQueue_splunkQueue = (uint64_t)v2;
}

void __copySplunkUUIDQueue_block_invoke(id a1)
{
  id v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v2 = dispatch_queue_create("com.apple.mobileactivationd.splunk.uuid", v1);
  uint64_t v3 = (void *)copySplunkUUIDQueue_splunkQueue;
  copySplunkUUIDQueue_splunkQueue = (uint64_t)v2;
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_4(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_fault_impl(a1, log, OS_LOG_TYPE_FAULT, a4, (uint8_t *)va, 0x16u);
}

id copyRootCertificate(uint64_t a1, int a2, NSError **a3)
{
  switch((int)a1)
  {
    case 1:
      BOOL v4 = a2 == 0;
      if (a2) {
        id v5 = "-----BEGIN CERTIFICATE-----\n"
      }
             "MIICGDCCAZ+gAwIBAgIIMyDS5tjDo60wCgYIKoZIzj0EAwMwUjEmMCQGA1UEAwwd\n"
             "VEVTVCBVQ1JUIEFUVEVTVEFUSU9OIFJPT1QgQ0ExEzARBgNVBAoMCkFwcGxlIElu\n"
             "Yy4xEzARBgNVBAgMCkNhbGlmb3JuaWEwHhcNMTcwMzE3MTg0NzIzWhcNMzIwMzE3\n"
             "MTg0NzIzWjBSMSYwJAYDVQQDDB1URVNUIFVDUlQgQVRURVNUQVRJT04gUk9PVCBD\n"
             "QTETMBEGA1UECgwKQXBwbGUgSW5jLjETMBEGA1UECAwKQ2FsaWZvcm5pYTB2MBAG\n"
             "ByqGSM49AgEGBSuBBAAiA2IABK8j8XvaJOsMr8X6albKQ1LFlMi3k+b8Jooja8Qs\n"
             "0lsrRmax8FItjsoWcxj3c1sPjPF59FI2sCb+9cUZ8KgTeJ3b5748pO1XRGByMNHp\n"
             "tmIuLYRvqRHhkWl638PWGRUoYKNCMEAwHQYDVR0OBBYEFGnDBpAIQSifJVW2RWKm\n"
             "f6jT3iIXMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMAoGCCqGSM49\n"
             "BAMDA2cAMGQCMBFwSHXop87Ghm50PPMGFHtpB/o3K2Gx5747Q0mlR2qE0DsmrJSu\n"
             "2LO+9QEQL5HZRwIwBMg0g5oYcfMMDWwFSRESii+SqHxFgbmVuzHR5Cu0peL1MiMB\n"
             "nMjKoG3YyhB4geQ9\n"
             "-----END CERTIFICATE-----";
      else {
        id v5 = "-----BEGIN CERTIFICATE-----\n"
      }
             "MIICGjCCAaGgAwIBAgIIO0EdkA1/e+swCgYIKoZIzj0EAwMwUzEnMCUGA1UEAwwe\n"
             "QmFzaWMgQXR0ZXN0YXRpb24gVXNlciBSb290IENBMRMwEQYDVQQKDApBcHBsZSBJ\n"
             "bmMuMRMwEQYDVQQIDApDYWxpZm9ybmlhMB4XDTE3MDQxOTIxNDE1NloXDTMyMDMy\n"
             "MjAwMDAwMFowUzEnMCUGA1UEAwweQmFzaWMgQXR0ZXN0YXRpb24gVXNlciBSb290\n"
             "IENBMRMwEQYDVQQKDApBcHBsZSBJbmMuMRMwEQYDVQQIDApDYWxpZm9ybmlhMHYw\n"
             "EAYHKoZIzj0CAQYFK4EEACIDYgAE639EEPCGvFOPAbzd5eGJM46/I+N1rpRhPBc2\n"
             "+hvNC5vlVyv1hVNPSTIcF0sLPgCeEEQqGIZsUPO48ECh03YzXUT86015HwktM439\n"
             "bWGKGE/VRepW8S8EDRLh6+83XZ9do0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\n"
             "DgQWBBSD5aMhnrB0w/lhkP2XTiMQdqSj8jAOBgNVHQ8BAf8EBAMCAQYwCgYIKoZI\n"
             "zj0EAwMDZwAwZAIwQol5uLqv1SXY9G1wHSx2EYIULFlLssYTnTwbSlZPj2yF9cgk\n"
             "7xJO8bw6nTklgnHhAjBgMvsir7UEVzw7uxn8y3GGf9KSCFV5scySrYDZnJhETYlc\n"
             "yPYSFsZIerKNPP6v28Y=\n"
             "-----END CERTIFICATE-----";
      uint64_t v6 = (unsigned int *)&QABAAUCRTRootCAPEMLen;
      uint64_t v7 = (unsigned int *)&BAAUCRTRootCAPEMLen;
      goto LABEL_48;
    case 2:
      BOOL v4 = a2 == 0;
      if (a2) {
        id v5 = "-----BEGIN CERTIFICATE-----\n"
      }
             "MIIB/zCCAYWgAwIBAgIIMyDS5tjDo6wwCgYIKoZIzj0EAwMwRTEZMBcGA1UEAwwQ\n"
             "VEVTVCBTRVAgUk9PVCBDQTETMBEGA1UECgwKQXBwbGUgSW5jLjETMBEGA1UECAwK\n"
             "Q2FsaWZvcm5pYTAeFw0xNzAzMTcxNzQ4MzBaFw0zMjAzMTcxNzQ4MzBaMEUxGTAX\n"
             "BgNVBAMMEFRFU1QgU0VQIFJPT1QgQ0ExEzARBgNVBAoMCkFwcGxlIEluYy4xEzAR\n"
             "BgNVBAgMCkNhbGlmb3JuaWEwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAARPM4laW0B+\n"
             "fOrILxB1SgluOqUops+ps7POnbPvuhEZq3A+/zMJpvuA9r81okf3hb2irmpUAuvd\n"
             "pbjz1pDf73/8VC/uMSJsWXEc39kpm2j6DwBOIxJ++OwnhEU7pf0gCQ6jQjBAMB0G\n"
             "A1UdDgQWBBRWyfg8mg8Ak5e1SZm7V0WL85j2NDAPBgNVHRMBAf8EBTADAQH/MA4G\n"
             "A1UdDwEB/wQEAwIBBjAKBggqhkjOPQQDAwNoADBlAjEAiOkQ9WnIfqiQXIKRjOhu\n"
             "eWd+RPxKGQt1XmVQZGiNDwIu6SVQ0UVDGZg4ywsotyLNAjAOQgMucccaDYgsmELm\n"
             "YpYzgzyReDQx/ajwQdc97/unxkOWYP/5TPptimsc9E0u9bU=\n"
             "-----END CERTIFICATE-----";
      else {
        id v5 = "-----BEGIN CERTIFICATE-----\n"
      }
             "MIICIDCCAaWgAwIBAgIIePhG1bNbWBcwCgYIKoZIzj0EAwMwVTEpMCcGA1UEAwwg\n"
             "QmFzaWMgQXR0ZXN0YXRpb24gU3lzdGVtIFJvb3QgQ0ExEzARBgNVBAoMCkFwcGxl\n"
             "IEluYy4xEzARBgNVBAgMCkNhbGlmb3JuaWEwHhcNMTcwNDIwMDAyMjA5WhcNMzIw\n"
             "MzIyMDAwMDAwWjBVMSkwJwYDVQQDDCBCYXNpYyBBdHRlc3RhdGlvbiBTeXN0ZW0g\n"
             "Um9vdCBDQTETMBEGA1UECgwKQXBwbGUgSW5jLjETMBEGA1UECAwKQ2FsaWZvcm5p\n"
             "YTB2MBAGByqGSM49AgEGBSuBBAAiA2IABN7OnRlUVkOVlHTw7UF9qForIhvM8pLL\n"
             "WTrHm6Be42c3LZFIM2RNT5FZZDkIgQfYLS6vsRpfrhEMKIHIWomtyuCxp2c/AIxu\n"
             "wEml4f2d8IktTRcNHwqKzUgzPJV3CyKh2KNCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\n"
             "BgNVHQ4EFgQU/tHRwggHA9W5PDSyu/18OpklG48wDgYDVR0PAQH/BAQDAgEGMAoG\n"
             "CCqGSM49BAMDA2kAMGYCMQCmU03bvMmBE4X03P8MdpxEE/LpNcRmsnktIav8tpNh\n"
             "Gmo4mv2FyZKKvaJtO2OhIrwCMQDxMBcXge5NpWx/VBcFTj2Tb2VxQ8zMKbWapLE/\n"
             "HPN4kbBaiIIUl52drBlQjS/c3P8=\n"
             "-----END CERTIFICATE-----\n";
      uint64_t v6 = (unsigned int *)&QABAASCRTRootCAPEMLen;
      uint64_t v7 = (unsigned int *)&BAASCRTRootCAPEMLen;
      goto LABEL_48;
    case 3:
      BOOL v4 = a2 == 0;
      if (a2) {
        id v5 = "-----BEGIN CERTIFICATE-----\n"
      }
             "MIICGDCCAZ+gAwIBAgIIMyDS5tjDo60wCgYIKoZIzj0EAwMwUjEmMCQGA1UEAwwd\n"
             "VEVTVCBVQ1JUIEFUVEVTVEFUSU9OIFJPT1QgQ0ExEzARBgNVBAoMCkFwcGxlIElu\n"
             "Yy4xEzARBgNVBAgMCkNhbGlmb3JuaWEwHhcNMTcwMzE3MTg0NzIzWhcNMzIwMzE3\n"
             "MTg0NzIzWjBSMSYwJAYDVQQDDB1URVNUIFVDUlQgQVRURVNUQVRJT04gUk9PVCBD\n"
             "QTETMBEGA1UECgwKQXBwbGUgSW5jLjETMBEGA1UECAwKQ2FsaWZvcm5pYTB2MBAG\n"
             "ByqGSM49AgEGBSuBBAAiA2IABK8j8XvaJOsMr8X6albKQ1LFlMi3k+b8Jooja8Qs\n"
             "0lsrRmax8FItjsoWcxj3c1sPjPF59FI2sCb+9cUZ8KgTeJ3b5748pO1XRGByMNHp\n"
             "tmIuLYRvqRHhkWl638PWGRUoYKNCMEAwHQYDVR0OBBYEFGnDBpAIQSifJVW2RWKm\n"
             "f6jT3iIXMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMAoGCCqGSM49\n"
             "BAMDA2cAMGQCMBFwSHXop87Ghm50PPMGFHtpB/o3K2Gx5747Q0mlR2qE0DsmrJSu\n"
             "2LO+9QEQL5HZRwIwBMg0g5oYcfMMDWwFSRESii+SqHxFgbmVuzHR5Cu0peL1MiMB\n"
             "nMjKoG3YyhB4geQ9\n"
             "-----END CERTIFICATE-----";
      else {
        id v5 = "-----BEGIN CERTIFICATE-----\n"
      }
             "MIIB9DCCAZqgAwIBAgIUfK8gpf3d6f7acICzvf5MBWnAVEYwCgYIKoZIzj0EAwIw\n"
             "VzErMCkGA1UEAwwiQXBwbGUgQWNjZXNzb3J5IFJvb3QgQ0EgLSAwMDAwMDAwMTET\n"
             "MBEGA1UECgwKQXBwbGUgSW5jLjETMBEGA1UECAwKQ2FsaWZvcm5pYTAgFw0yMDA5\n"
             "MTYxODI5MzRaGA8yMDUwMDkxNDAwMDAwMFowVzErMCkGA1UEAwwiQXBwbGUgQWNj\n"
             "ZXNzb3J5IFJvb3QgQ0EgLSAwMDAwMDAwMTETMBEGA1UECgwKQXBwbGUgSW5jLjET\n"
             "MBEGA1UECAwKQ2FsaWZvcm5pYTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABMGo\n"
             "QSB6dmrLAhjkTUVAoAC1RwaOmEmEk7SYEnnm6aBw9HZZQt5pkncuTXxvL6NDvx4D\n"
             "8Wn3frxp+UOTgEalb0ajQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFAZD\n"
             "Zup+SdTmXls49aokHuK+fHKjMA4GA1UdDwEB/wQEAwIBBjAKBggqhkjOPQQDAgNI\n"
             "ADBFAiEA4HcCYv5+W+1/HOy1v1cYVozNEW4+2WvR84Japg8rabkCIDP9zynWiR60\n"
             "O06J60wrt0rQfBOPnoeY1+ydbP2g8Tiy\n"
             "-----END CERTIFICATE-----";
      uint64_t v6 = (unsigned int *)&QABAAMFiRootCAPEMLen;
      uint64_t v7 = (unsigned int *)&BAAMFiRootCAPEMLen;
      goto LABEL_48;
    case 4:
      BOOL v4 = a2 == 0;
      if (a2) {
        id v5 = "-----BEGIN CERTIFICATE-----\n"
      }
             "MIIBgzCCASkCFDjx/NbFt/axSboRZlQvaFKmOM9cMAoGCCqGSM49BAMCMEQxGDAW\n"
             "BgNVBAMMD1JPT1QgVk1Ib3N0IERFVjETMBEGA1UECgwKQXBwbGUgSW5jLjETMBEG\n"
             "A1UECAwKQ2FsaWZvcm5pYTAeFw0yMjEyMjAyMjQ5MjNaFw0zMjEyMTcyMjQ5MjNa\n"
             "MEQxGDAWBgNVBAMMD1JPT1QgVk1Ib3N0IERFVjETMBEGA1UECgwKQXBwbGUgSW5j\n"
             "LjETMBEGA1UECAwKQ2FsaWZvcm5pYTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\n"
             "BFEzB9BX594q7qqyNgDRIB2qQm6uhylOPgS3zX6kVNpCe+IGeuYGVKu+n0oVoUEq\n"
             "ah/zwVwo9xZPJycEbHBhGlAwCgYIKoZIzj0EAwIDSAAwRQIhAJxxz1ciDUVxdnIz\n"
             "34ondjHZD90U6Pzvu9abpIU1TsJxAiAKxVubHXInckv6HidbV1J2RghMPdxOyKnw\n"
             "ZR6YEAfSMQ==\n"
             "-----END CERTIFICATE-----";
      else {
        id v5 = "-----BEGIN CERTIFICATE-----\n"
      }
             "MIICLDCCAbOgAwIBAgIUfj+NzqI5TD5k+plnCuu7oXn/1NYwCgYIKoZIzj0EAwMw\n"
             "VjEqMCgGA1UEAwwhQmFzaWMgQXR0ZXN0YXRpb24gVk0gUm9vdCBDQSAtIEcxMRMw\n"
             "EQYDVQQKDApBcHBsZSBJbmMuMRMwEQYDVQQIDApDYWxpZm9ybmlhMB4XDTIyMTEx\n"
             "NzE5MjQ0NloXDTQ3MTExNzAwMDAwMFowVjEqMCgGA1UEAwwhQmFzaWMgQXR0ZXN0\n"
             "YXRpb24gVk0gUm9vdCBDQSAtIEcxMRMwEQYDVQQKDApBcHBsZSBJbmMuMRMwEQYD\n"
             "VQQIDApDYWxpZm9ybmlhMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEh+bXFjhVZxpY\n"
             "SW1tUJhQc7Mesr7Ua/2EIJDhZnq1eUV666b7j8V1apF7zQdcVc1GHqBMRfeagBk0\n"
             "ktB5PgRQ4hFX3OAbfjSVnmuPVuHznBbS/1f/ABuTlJJjO592E9JVo0IwQDAPBgNV\n"
             "HRMBAf8EBTADAQH/MB0GA1UdDgQWBBTHKW8b5x+bDXk9PC/lPsufj3wUEzAOBgNV\n"
             "HQ8BAf8EBAMCAQYwCgYIKoZIzj0EAwMDZwAwZAIwXsNPIuolYDriFDkULrsZy81O\n"
             "yAk4v7Y4f1p86Ox2J7g4xdGIwAyLw/JNRKGoHGpVAjBk20GA6ZvKKoO+HvE9v2xu\n"
             "wiVPsqk37xSmgK+RHJDMMy+hrhJVsCsBzeYpI9Cz4sI=\n"
             "-----END CERTIFICATE-----";
      uint64_t v6 = (unsigned int *)&QABAAVMRootCAPEMLen;
      uint64_t v7 = (unsigned int *)&BAAVMRootCAPEMLen;
      goto LABEL_48;
    case 5:
      BOOL v4 = a2 == 0;
      if (a2) {
        id v5 = "-----BEGIN CERTIFICATE-----\n"
      }
             "MIIB9jCCAXwCFGyFzDAIXLHwUcHOxFEzhqQrOQOPMAoGCCqGSM49BAMDMF8xMzAx\n"
             "BgNVBAMMKkJhc2ljIEF0dGVzdGF0aW9uIFNFUCBBcHAgRGV2IFJvb3QgQ0EgLSBH\n"
             "MTETMBEGA1UECgwKQXBwbGUgSW5jLjETMBEGA1UECAwKQ2FsaWZvcm5pYTAeFw0y\n"
             "MzAxMTkyMTEzNTFaFw0zMzAxMTYyMTEzNTFaMF8xMzAxBgNVBAMMKkJhc2ljIEF0\n"
             "dGVzdGF0aW9uIFNFUCBBcHAgRGV2IFJvb3QgQ0EgLSBHMTETMBEGA1UECgwKQXBw\n"
             "bGUgSW5jLjETMBEGA1UECAwKQ2FsaWZvcm5pYTB2MBAGByqGSM49AgEGBSuBBAAi\n"
             "A2IABOnVQFqNs86j5R5dAcjUlpotBUkO2q3+udEnqwkzzcrptPz6FIp5GQagMCQk\n"
             "wDgzXTe3jUqDkGxMNUjLt6DkzbwX7SrHhvIf9RlTXmlgrCUUrR21089VP+FZu8sD\n"
             "38l7PTAKBggqhkjOPQQDAwNoADBlAjEA7qwslEakgN0e+27DzPtrOqbud2pXVdRP\n"
             "qGFmLcklmZWHF1UIn6JlD1TNLVHQlCr3AjBkSmV+m5D/pJVRvg4ewQq+9oeyuYg8\n"
             "JHQGGaubDFMjZXhJ3NXrLHmIWDRQW2lgChA=\n"
             "-----END CERTIFICATE-----";
      else {
        id v5 = "-----BEGIN CERTIFICATE-----\n"
      }
             "MIICODCCAb2gAwIBAgIUW5y5rEfNQCu9iSCmlQjrP1Rz/tAwCgYIKoZIzj0EAwMw\n"
             "WzEvMC0GA1UEAwwmQmFzaWMgQXR0ZXN0YXRpb24gU0VQIEFwcCBSb290IENBIC0g\n"
             "RzExEzARBgNVBAoMCkFwcGxlIEluYy4xEzARBgNVBAgMCkNhbGlmb3JuaWEwHhcN\n"
             "MjIwOTEyMTc1OTM0WhcNNDcwOTEyMDAwMDAwWjBbMS8wLQYDVQQDDCZCYXNpYyBB\n"
             "dHRlc3RhdGlvbiBTRVAgQXBwIFJvb3QgQ0EgLSBHMTETMBEGA1UECgwKQXBwbGUg\n"
             "SW5jLjETMBEGA1UECAwKQ2FsaWZvcm5pYTB2MBAGByqGSM49AgEGBSuBBAAiA2IA\n"
             "BAXaHBhlPwzGbPrirq+GvLIVTB4ym+88OQOB2Aq3ZuWIDz2DV9EWt7/3tpHL276X\n"
             "WE4ObPymHzrbl5aNpIzjm9W0tgiZRWw8l3YEuoz56dh3sZqVdDxszB3CQw1KX+62\n"
             "YaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUywowhXlxUMVVx846sCHP\n"
             "XQIrUR4wDgYDVR0PAQH/BAQDAgEGMAoGCCqGSM49BAMDA2kAMGYCMQC/AZhw1x8+\n"
             "XBPQw3lTl2A4SxY5UvCMjyseU9uUD0qgFDYlvUzH0qi8KB5BZled0cYCMQClhMgI\n"
             "rl3Txh1EJBb5yoWhvs8Gy+qkov9/SIDIEGpmZ7OUngbjN5zheCyJio90Xig=\n"
             "-----END CERTIFICATE-----";
      uint64_t v6 = (unsigned int *)&QABAAASMFiOSRootCAPEMLen;
      uint64_t v7 = (unsigned int *)&BAAASMFiOSRootCAPEMLen;
      goto LABEL_48;
    case 6:
      unsigned int v9 = *(_DWORD *)"&\b";
      id v5 = "-----BEGIN CERTIFICATE-----\n"
           "MIIF2DCCA8CgAwIBAgIBADANBgkqhkiG9w0BAQsFADB9MQswCQYDVQQGEwJVUzET\n"
           "MBEGA1UEChMKQXBwbGUgSW5jLjFZMFcGA1UEAxNQRkRSLUNBMS1ST09ULUNNIDg2\n"
           "QkQ1QkFFQ0JBNEQ5RUM0QzdBOUJGRUZEM0I3QTE0Mzc5QTE1RTVGQjM2MDNCQ0U2\n"
           "OTA1MDczRUMwNjBBM0YwHhcNMTQwNjExMjEwODM5WhcNNDQwNjExMjEwODM5WjB9\n"
           "MQswCQYDVQQGEwJVUzETMBEGA1UEChMKQXBwbGUgSW5jLjFZMFcGA1UEAxNQRkRS\n"
           "LUNBMS1ST09ULUNNIDg2QkQ1QkFFQ0JBNEQ5RUM0QzdBOUJGRUZEM0I3QTE0Mzc5\n"
           "QTE1RTVGQjM2MDNCQ0U2OTA1MDczRUMwNjBBM0YwggIiMA0GCSqGSIb3DQEBAQUA\n"
           "A4ICDwAwggIKAoICAQDRSE8a8Xl+OFgz07qfQf610WJgBhQUMqYqLME8yNW6HRAo\n"
           "ZmRJCZhKzJCW7W77utpo/QZqCs/Tmc8yAuyw06MlLdb/EaFbIJhnd8KvhNO2aBn1\n"
           "0zTF3BrKu/iBj4Cb31nzd+P3BAyIIhnNfqnJ1YDGrXDHApFKs96bRNYfFj/cm55e\n"
           "+5ZaVAE4pGq3I45pO1HMEObvysFnbEw4R5EZ8BsyNaSe+EEprYZQqjfGciVZn+WD\n"
           "nP0g1TONgE8yAplaud+0QQIcLxE82toZqnAEErojrXbb9KYiW6OH+w8p8ITKrA0a\n"
           "byud5ZwU8x2dwJngg2P53vzdaEPgl+oEWm5uTtOBS5kGh9N0Ky3N094qn6Y9OmLD\n"
           "eXsYXGE3Q91AZ6Ps+0cmZYAMvnlTMh6h6TRgIG6kUi/7fIn6umQHgavSMP+XWNET\n"
           "CzbwE7YZnTnhMlW3Oaey40bKDgxZAgVAVKt+qf/B9Exb074GqicYr5RH3MmYYqVo\n"
           "bHZTPkeKykUxUJoNm/jRoyXQnStl0uBclShH3ORMOHL6MeQMSGIEIVbD6AJz3rIX\n"
           "7nidx3ePUeA7QVV/vhL09DU4Q5KKQsbgl4qSGzxA87ClUGworLaWa+AUE+MP5NLJ\n"
           "tSlsY4+Fl3VLq51AJA2oeOwF6KCTRTZWG56anqaSrEU0UKsWgQ6ys+9153eGTwID\n"
           "AQABo2MwYTAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4E\n"
           "FgQUESXWmKVwOl5LaoSB35L33xPje14wHwYDVR0jBBgwFoAUESXWmKVwOl5LaoSB\n"
           "35L33xPje14wDQYJKoZIhvcNAQELBQADggIBAJcISq7FqhBfFRpgEAiedVPPzff5\n"
           "rU2uNQLpApMb3A6jFSostHTwypA//pc0PbTPTi5t2CcF14Gznqt4Gf1Ej75C+fgK\n"
           "QoWjcgYPCXkK+6KkTW8EMLsL+n8ZL1tqdOuJCOBTRBTU3Lbwon5uYF98CdBlPIam\n"
           "ZqDEbEiwrp/I5uBMkut1P2sftxu5ysu3+A1bGMDI5T84sXbG0eJU6zmx1p/WUHAc\n"
           "HZy9/S7Ad5vJRMQrWx4JDdLvJ+1PXqdJtZUkp4TNPchxA9OzGsatVJJ5T/5EVDuL\n"
           "QgLaZNiWeAC19+clUREnS247RjLNIZZq0hj2Rk5zO6sSyt8vM+kJZrTVdGaSk++l\n"
           "OFWzSdo0Ev/izPkuL/cH146YZS1UWZJI61mdvbvvxqqQaoTmviuMDqDoCZ7crLu3\n"
           "LRoS6/+w+xir5s6hmAF8D6FzAkVmeAroyd6Hclk6CnhlcQP5GxjTQjA2YGe/9X54\n"
           "30qL4fjiDwdLYqxyL5J28/yxt068aoVaukoRAgiGoZouyieTV9DabenxYBOygijS\n"
           "4G4RVf4qVnQ7wGkQokhz4WIkMr4C4ydWU3GhSuM3T9Tx9ASscch/oLMczDMLKYMe\n"
           "3sdtc60+gxrctSq/B3E/5nddDj9vQ7BdRWcvJ+n/ESsXgwk5z15YZUwU/qW0j5rD\n"
           "4bPy9nox5DLds+/l\n"
           "-----END CERTIFICATE-----";
      goto LABEL_52;
    case 7:
      BOOL v4 = a2 == 0;
      if (a2) {
        id v5 = "-----BEGIN CERTIFICATE-----\n"
      }
             "MIIBtDCCAVqgAwIBAgIBJzAKBggqhkjOPQQDAjBIMRwwGgYDVQQDDBNTRVAgUm9v\n"
             "dCBDQSAoTG9jYWwpMRMwEQYDVQQKDApBcHBsZSBJbmMuMRMwEQYDVQQIDApDYWxp\n"
             "Zm9ybmlhMB4XDTE2MDQyMjIyMTgzOVoXDTI2MDQyMDIyMTgzOVowSDEcMBoGA1UE\n"
             "AwwTU0VQIFJvb3QgQ0EgKExvY2FsKTETMBEGA1UECgwKQXBwbGUgSW5jLjETMBEG\n"
             "A1UECAwKQ2FsaWZvcm5pYTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLbmMPmv\n"
             "ubyAcSjOqIvq+HkYPAn68WV+DopU/kfpNtEo0y0kjdxYGyuiaKC3LPqBmgM8pHlJ\n"
             "pP81SMyx900L5YyjNTAzMA8GA1UdEwEB/wQFMAMBAf8wCwYDVR0PBAQDAgEGMBMG\n"
             "CSqGSIb3Y2QGLAQGFgR1Y3J0MAoGCCqGSM49BAMCA0gAMEUCIQCz/HH34JCprRWh\n"
             "srjvjvb0vUjLY22yA/3uJS0zZ2LRGgIgahGt0ZuEvMzPDnG9n8wRXEOB46xu7zDy\n"
             "rXK+zQjBPMY=\n"
             "-----END CERTIFICATE-----";
      else {
        id v5 = "-----BEGIN CERTIFICATE-----\n"
      }
             "MIIB9DCCAXugAwIBAgIIMyDS5tjDo6wwCgYIKoZIzj0EAwMwQDEUMBIGA1UEAwwL\n"
             "U0VQIFJvb3QgQ0ExEzARBgNVBAoMCkFwcGxlIEluYy4xEzARBgNVBAgMCkNhbGlm\n"
             "b3JuaWEwHhcNMTQwNjI0MjE0MzI0WhcNMjkwNjI0MjE0MzI0WjBAMRQwEgYDVQQD\n"
             "DAtTRVAgUm9vdCBDQTETMBEGA1UECgwKQXBwbGUgSW5jLjETMBEGA1UECAwKQ2Fs\n"
             "aWZvcm5pYTB2MBAGByqGSM49AgEGBSuBBAAiA2IABEBGXhKwc7q3iFvkUoGDP6j2\n"
             "drpxSCxsSCODaDQIqGwd53wZJ0xIJIv0RTf2TS7+/u4KzhrANzb19r+TQzwqFJMp\n"
             "hp3mI3yY4pukIFc/kWS7DLQAx/ftWBXX6vl4ig3wEqNCMEAwHQYDVR0OBBYEFFjv\n"
             "1r7FgrBUzRimhK2i9nt7On/PMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQD\n"
             "AgEGMAoGCCqGSM49BAMDA2cAMGQCMCWRVB9DxwYdXsJ8KVZwbU5y0rfNEWJwpH5B\n"
             "bH3HoiOT/k7TIzlcXWiWAZVVBsDf/gIwC5wq3OepHwBMMCa3Q4ZvpT4Qs0dmc4oa\n"
             "GYxqUZYACJiGD7vRVavVMFnf0s4xG0JG\n"
             "-----END CERTIFICATE-----";
      uint64_t v6 = (unsigned int *)&QAUCRTRootCAPEMLen;
      goto LABEL_33;
    case 8:
      BOOL v4 = a2 == 0;
      if (a2) {
        id v5 = "-----BEGIN CERTIFICATE-----\n"
      }
             "MIICXjCCAeWgAwIBAgIJAO5ey/a/ZXo9MAoGCCqGSM49BAMDMGQxNzA1BgNVBAMT\n"
             "LmltZzQgdGVzdCBzZWNwMzg0cjEgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkx\n"
             "FDASBgNVBAoTC0FwcGxlLCBJbmMuMRMwEQYDVQQIEwpDYWxpZm9ybmlhMB4XDTE1\n"
             "MDgyNzA0MTk1MloXDTI1MDgyNDA0MTk1MlowZDE3MDUGA1UEAxMuaW1nNCB0ZXN0\n"
             "IHNlY3AzODRyMSBSb290IENlcnRpZmljYXRlIEF1dGhvcml0eTEUMBIGA1UEChML\n"
             "QXBwbGUsIEluYy4xEzARBgNVBAgTCkNhbGlmb3JuaWEwdjAQBgcqhkjOPQIBBgUr\n"
             "gQQAIgNiAARmiQLNit/MHLEymNygtXRdYvZ2V9ujKbG78XPHs815eRetxfbAe0SU\n"
             "3LOKQ0xvpm77RUDARHdFyNzRSkKxTY2iBUGOapBwlwzfZlUmJU4JRXE9ATRwYNco\n"
             "KfVcrL0BFnejYzBhMB0GA1UdDgQWBBTFrjb8IhN7kz3HMYTxcqKeXtGm5DAPBgNV\n"
             "HRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFMWuNvwiE3uTPccxhPFyop5e0abkMA4G\n"
             "A1UdDwEB/wQEAwIBhjAKBggqhkjOPQQDAwNnADBkAjB5ryjJQJlO6BD0fqejchDc\n"
             "HB9su7+GoJMD5Kv9hoDeDlCTYoxE1fUp/36BAM3Ph/4CMB+QED5D9Nf7Fas99Xst\n"
             "xQ+EdLq74wvw/0YFQlsLVUH3UAnFE1uWnmwHkDZYF1EkcA==\n"
             "-----END CERTIFICATE-----";
      else {
        id v5 = "-----BEGIN CERTIFICATE-----\n"
      }
             "MIIB9DCCAXugAwIBAgIIMyDS5tjDo6wwCgYIKoZIzj0EAwMwQDEUMBIGA1UEAwwL\n"
             "U0VQIFJvb3QgQ0ExEzARBgNVBAoMCkFwcGxlIEluYy4xEzARBgNVBAgMCkNhbGlm\n"
             "b3JuaWEwHhcNMTQwNjI0MjE0MzI0WhcNMjkwNjI0MjE0MzI0WjBAMRQwEgYDVQQD\n"
             "DAtTRVAgUm9vdCBDQTETMBEGA1UECgwKQXBwbGUgSW5jLjETMBEGA1UECAwKQ2Fs\n"
             "aWZvcm5pYTB2MBAGByqGSM49AgEGBSuBBAAiA2IABEBGXhKwc7q3iFvkUoGDP6j2\n"
             "drpxSCxsSCODaDQIqGwd53wZJ0xIJIv0RTf2TS7+/u4KzhrANzb19r+TQzwqFJMp\n"
             "hp3mI3yY4pukIFc/kWS7DLQAx/ftWBXX6vl4ig3wEqNCMEAwHQYDVR0OBBYEFFjv\n"
             "1r7FgrBUzRimhK2i9nt7On/PMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQD\n"
             "AgEGMAoGCCqGSM49BAMDA2cAMGQCMCWRVB9DxwYdXsJ8KVZwbU5y0rfNEWJwpH5B\n"
             "bH3HoiOT/k7TIzlcXWiWAZVVBsDf/gIwC5wq3OepHwBMMCa3Q4ZvpT4Qs0dmc4oa\n"
             "GYxqUZYACJiGD7vRVavVMFnf0s4xG0JG\n"
             "-----END CERTIFICATE-----";
      uint64_t v6 = (unsigned int *)&QAUCRTRootCAP384PEMLen;
LABEL_33:
      uint64_t v7 = (unsigned int *)&UCRTRootCAPEMLen;
      goto LABEL_48;
    case 9:
      BOOL v4 = a2 == 0;
      if (a2) {
        id v5 = "-----BEGIN CERTIFICATE-----\n"
      }
             "MIIBtjCCAVugAwIBAgIBJTAKBggqhkjOPQQDAjBIMRwwGgYDVQQDDBNTRVAgUm9v\n"
             "dCBDQSAoTG9jYWwpMRMwEQYDVQQKDApBcHBsZSBJbmMuMRMwEQYDVQQIDApDYWxp\n"
             "Zm9ybmlhMB4XDTE2MDQyMjIyMDMwMloXDTI2MDQyMDIyMDMwMlowSTETMBEGA1UE\n"
             "CAwKQ2FsaWZvcm5pYTETMBEGA1UECgwKQXBwbGUgSW5jLjEdMBsGA1UEAwwUdWNy\n"
             "dCBWZW5kaW5nIFNlcnZpY2UwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQooWKn\n"
             "j4PQnKhSGEpmJok/4CSDeG6fIk6A4vCDtuC5T2twqSmM0VWT3SY5B8QKMAspxnnT\n"
             "fxPmUJ+d2vhNPocFozUwMzAPBgNVHRMBAf8EBTADAQH/MAsGA1UdDwQEAwIBBjAT\n"
             "BgkqhkiG92NkBiwEBhYEdWNydDAKBggqhkjOPQQDAgNJADBGAiEAq6YVB2GvW4uu\n"
             "b17G+wTS/pehuM8tHLOH6RfJzUarkpUCIQDViFsKmYnrNx3yi9whnCHUE2SqvdRK\n"
             "YFSjST8cXO8B2g==\n"
             "-----END CERTIFICATE-----";
      else {
        id v5 = "-----BEGIN CERTIFICATE-----\n"
      }
             "MIICFzCCAZygAwIBAgIIOcUqQ8IC/hswCgYIKoZIzj0EAwIwQDEUMBIGA1UEAwwL\n"
             "U0VQIFJvb3QgQ0ExEzARBgNVBAoMCkFwcGxlIEluYy4xEzARBgNVBAgMCkNhbGlm\n"
             "b3JuaWEwHhcNMTYwNDI1MjM0NTQ3WhcNMjkwNjI0MjE0MzI0WjBFMRMwEQYDVQQI\n"
             "DApDYWxpZm9ybmlhMRMwEQYDVQQKDApBcHBsZSBJbmMuMRkwFwYDVQQDDBBGRFJE\n"
             "Qy1VQ1JULVNVQkNBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEaDc2O/MruYvP\n"
             "VPaUbKR7RRzn66B14/8KoUMsEDb7nHkGEMX6eC+0gStGHe4HYMrLyWcap1tDFYmE\n"
             "DykGQ3uM2aN7MHkwHQYDVR0OBBYEFLSqOkOtG+V+zgoMOBq10hnLlTWzMA8GA1Ud\n"
             "EwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUWO/WvsWCsFTNGKaEraL2e3s6f88wDgYD\n"
             "VR0PAQH/BAQDAgEGMBYGCSqGSIb3Y2QGLAEB/wQGFgR1Y3J0MAoGCCqGSM49BAMC\n"
             "A2kAMGYCMQDf5zNiiKN/Jqms1w+3CDYkESOPieJMpEkLe9a0UjWXEBDL0VEsq/Cd\n"
             "E3aKXkc6R10CMQDS4MiWiymY+Rxkvy/hicDDQqI/BL+N3LHqzJZUuw2Sx0afDX7B\n"
             "6LyKk+sLq4urkMY=\n"
             "-----END CERTIFICATE-----";
      uint64_t v6 = (unsigned int *)&QAUCRTSubCAPEMLen;
      uint64_t v7 = (unsigned int *)&UCRTSubCAPEMLen;
      goto LABEL_48;
    case 10:
      unsigned int v9 = 1115;
      id v5 = "-----BEGIN CERTIFICATE-----\n"
           "MIIDCjCCAnOgAwIBAgIJAKLEjm9wthY+MA0GCSqGSIb3DQEBBQUAMGIxCzAJBgNV\n"
           "BAYTAlVTMQswCQYDVQQIEwJDQTESMBAGA1UEBxMJQ3VwZXJ0aW5vMRMwEQYDVQQK\n"
           "EwpBcHBsZSBJbmMuMQwwCgYDVQQLEwNFVFMxDzANBgNVBAMTBlJhcHRvcjAeFw0x\n"
           "MTA2MjMxOTA1NDNaFw0xOTA5MDkxOTA1NDNaMGIxCzAJBgNVBAYTAlVTMQswCQYD\n"
           "VQQIEwJDQTESMBAGA1UEBxMJQ3VwZXJ0aW5vMRMwEQYDVQQKEwpBcHBsZSBJbmMu\n"
           "MQwwCgYDVQQLEwNFVFMxDzANBgNVBAMTBlJhcHRvcjCBnzANBgkqhkiG9w0BAQEF\n"
           "AAOBjQAwgYkCgYEAyckOSUo0WP7JAPTWXeVyEfeJ7JUm1cVzL4hURR/Kr9PR8x1g\n"
           "ptLaxWVcni+9D6eHmn9FxmmQFXRbIQCs5/qj4PhFZLC3c77wvi/8OL2EwSIOq9MN\n"
           "Hpm0P0jh/0e8AxJZS98gPfz6YF58H1/Vi5yYlM7zsGPdXaUiQokAbTcyXZUCAwEA\n"
           "AaOBxzCBxDAdBgNVHQ4EFgQUMSXJGuBw9hqPqJDExjgE206NyD4wgZQGA1UdIwSB\n"
           "jDCBiYAUMSXJGuBw9hqPqJDExjgE206NyD6hZqRkMGIxCzAJBgNVBAYTAlVTMQsw\n"
           "CQYDVQQIEwJDQTESMBAGA1UEBxMJQ3VwZXJ0aW5vMRMwEQYDVQQKEwpBcHBsZSBJ\n"
           "bmMuMQwwCgYDVQQLEwNFVFMxDzANBgNVBAMTBlJhcHRvcoIJAKLEjm9wthY+MAwG\n"
           "A1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADgYEAqrgiRsSNB4ubv2ZDUqH7p1a1\n"
           "Hca1vMmXZy1bTBXTbxoNJ/tHnkBZrQHoRq31931Sd6CDLnN/8h+Zpcg7C40vKMBu\n"
           "nJ4gaPVrPZlv36rrW/xNf6ZLETt0Q8VM554/P2QfT4aU/2v2rFb/orAqsKSW6wtJ\n"
           "9WmL1qAfmVJAPdcwYbY=\n"
           "-----END CERTIFICATE-----";
      goto LABEL_52;
    case 11:
      unsigned int v9 = 1143;
      id v5 = "-----BEGIN CERTIFICATE-----\n"
           "MIIDHzCCAoigAwIBAgIJAK/qJPz+p+3XMA0GCSqGSIb3DQEBBQUAMGkxCzAJBgNV\n"
           "BAYTAlVTMQswCQYDVQQIEwJDQTESMBAGA1UEBxMJQ3VwZXJ0aW5vMRMwEQYDVQQK\n"
           "EwpBcHBsZSBJbmMuMQwwCgYDVQQLEwNFVFMxFjAUBgNVBAMTDVJhcHRvciBEZXZp\n"
           "Y2UwHhcNMTEwNjIzMTkwNjE3WhcNMTkwOTA5MTkwNjE3WjBpMQswCQYDVQQGEwJV\n"
           "UzELMAkGA1UECBMCQ0ExEjAQBgNVBAcTCUN1cGVydGlubzETMBEGA1UEChMKQXBw\n"
           "bGUgSW5jLjEMMAoGA1UECxMDRVRTMRYwFAYDVQQDEw1SYXB0b3IgRGV2aWNlMIGf\n"
           "MA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDOPR58emAZ3QBW6U3tZXmTjELxK495\n"
           "JavHz3yZm1lX1z7K9tmbqcmUuEXpBbxHtgEkTTmwZQIgM3f6asTn8CKln8kq7aYj\n"
           "AWbSNOCy35hLDCy+hCN9hi++3LqqHiuQ9whVAvyrqpX7xPfgGwheIgpp/sPoPbZF\n"
           "x5EiwPt7/uHzfQIDAQABo4HOMIHLMB0GA1UdDgQWBBSWWwNRWUp2XVKrcZ8yKR4r\n"
           "Zh/4wDCBmwYDVR0jBIGTMIGQgBSWWwNRWUp2XVKrcZ8yKR4rZh/4wKFtpGswaTEL\n"
           "MAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRIwEAYDVQQHEwlDdXBlcnRpbm8xEzAR\n"
           "BgNVBAoTCkFwcGxlIEluYy4xDDAKBgNVBAsTA0VUUzEWMBQGA1UEAxMNUmFwdG9y\n"
           "IERldmljZYIJAK/qJPz+p+3XMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQAD\n"
           "gYEAP2PMyy+666s+vDH4mLhFb2ZUFUM/nyxnLbjEyxgxR5Z5iZ/H0BEp7s59Matv\n"
           "dO0dzhP1+khkcM6opicPG3Vu5eDI0odn41m7LDj6Z3lgrxFTKIm/Ghc7c7c0qdWA\n"
           "YLTvijBQsDqsY1YoAXr+80ReSSouJgkNvljBAoPFPpoK2xQ=\n"
           "-----END CERTIFICATE-----";
      goto LABEL_52;
    case 12:
      BOOL v4 = a2 == 0;
      if (a2) {
        id v5 = "Certificate:\n"
      }
             "    Data:\n"
             "        Version: 3 (0x2)\n"
             "        Serial Number: 1 (0x1)\n"
             "        Signature Algorithm: sha1WithRSAEncryption\n"
             "        Issuer: C=US, O=Apple Inc., OU=Apple Certification Authority, CN=[TEST] Apple iPhone Certification "
             "Authority\n"
             "        Validity\n"
             "            Not Before: Mar 21 06:20:50 2007 GMT\n"
             "            Not After : Mar 12 06:20:50 2022 GMT\n"
             "        Subject: C=US, O=Apple Inc., OU=Apple iPhone, CN=[TEST] Apple iPhone Device CA\n"
             "        Subject Public Key Info:\n"
             "            Public Key Algorithm: rsaEncryption\n"
             "            RSA Public Key: (1024 bit)\n"
             "                Modulus (1024 bit):\n"
             "                    00:d7:60:52:2a:fa:93:52:dc:db:ae:92:6b:d6:ac:\n"
             "                    59:17:1f:9a:20:ed:34:ae:c2:15:e8:e3:f0:3b:63:\n"
             "                    84:d8:6d:8d:02:65:74:e6:62:18:27:d1:fc:78:c3:\n"
             "                    2f:36:83:39:91:9f:3d:32:e0:95:7f:90:3b:ab:47:\n"
             "                    be:f1:47:85:8c:5d:ab:1c:5c:bb:10:69:47:56:b8:\n"
             "                    15:bf:34:4a:f0:49:6e:8a:35:4a:4f:47:bb:3e:ea:\n"
             "                    cc:df:2e:f4:b8:96:16:94:dd:38:f6:f0:82:cf:26:\n"
             "                    fd:67:a1:73:01:43:d8:25:bd:02:2c:82:89:7c:70:\n"
             "                    01:68:c2:8a:85:60:84:77:83\n"
             "                Exponent: 65537 (0x10001)\n"
             "        X509v3 extensions:\n"
             "            X509v3 Key Usage: critical\n"
             "                Digital Signature, Certificate Sign, CRL Sign\n"
             "            X509v3 Basic Constraints: critical\n"
             "                CA:TRUE\n"
             "            X509v3 Subject Key Identifier:\n"
             "                38:05:20:A9:3F:C6:79:F4:EC:9A:6F:7F:47:02:5E:6E:A4:79:11:F5\n"
             "            X509v3 Authority Key Identifier:\n"
             "                keyid:45:A2:4C:A9:8A:5B:4A:27:5E:85:A6:4D:05:1C:27:44:A5:87:76:17\n"
             "\n"
             "            X509v3 CRL Distribution Points:\n"
             "                URI:http://www.apple.com/appleca/iphone.crl\n"
             "\n"
             "    Signature Algorithm: sha1WithRSAEncryption\n"
             "        8d:be:6b:c8:4e:80:9e:78:86:0c:09:d0:6e:ed:c1:dc:30:f7:\n"
             "        29:4b:20:4e:2c:6c:b3:24:72:fd:ce:24:34:60:95:30:d7:32:\n"
             "        61:31:e5:d4:d5:63:aa:3f:89:81:f6:44:ab:71:d0:bc:17:db:\n"
             "        ab:bc:ec:bb:a4:40:6a:e7:e4:57:c6:28:6f:11:72:fc:0c:51:\n"
             "        07:31:db:40:54:ee:b5:e6:1e:e3:dc:9b:f9:3c:6a:ba:d8:c3:\n"
             "        20:f1:dd:49:cb:3a:a6:29:cd:52:f9:f3:f3:18:5e:dd:82:83:\n"
             "        b8:e8:4e:94:10:7a:1e:11:a0:63:4d:8e:60:4a:1d:45:72:4d:\n"
             "        a0:ac:1f:b0:98:8b:b4:33:5a:85:60:cf:7f:89:35:62:65:d1:\n"
             "        1b:48:a4:ec:ca:60:1a:9d:a6:d1:b9:3d:f3:64:a4:67:d1:a5:\n"
             "        1b:b6:d9:e7:65:75:cb:af:2f:7a:db:d8:a1:f4:f3:09:bf:9a:\n"
             "        99:1a:34:a6:ed:1f:82:84:0b:b6:a8:68:5d:ec:49:d4:b3:34:\n"
             "        84:af:cb:a4:d9:00:f0:bc:07:6c:17:e7:95:bb:c3:3d:d9:bb:\n"
             "        6a:13:1d:34:bd:2f:c1:9a:f1:4d:67:5f:56:33:90:b2:ef:ff:\n"
             "        27:da:19:60:55:b0:78:c2:8c:34:5b:61:3a:e1:ec:61:92:8b:\n"
             "        2f:04:9a:c6\n"
             "-----BEGIN CERTIFICATE-----\n"
             "MIIDeDCCAmCgAwIBAgIBATANBgkqhkiG9w0BAQUFADCBgDELMAkGA1UEBhMCVVMx\n"
             "EzARBgNVBAoTCkFwcGxlIEluYy4xJjAkBgNVBAsTHUFwcGxlIENlcnRpZmljYXRp\n"
             "b24gQXV0aG9yaXR5MTQwMgYDVQQDFCtbVEVTVF0gQXBwbGUgaVBob25lIENlcnRp\n"
             "ZmljYXRpb24gQXV0aG9yaXR5MB4XDTA3MDMyMTA2MjA1MFoXDTIyMDMxMjA2MjA1\n"
             "MFowYTELMAkGA1UEBhMCVVMxEzARBgNVBAoTCkFwcGxlIEluYy4xFTATBgNVBAsT\n"
             "DEFwcGxlIGlQaG9uZTEmMCQGA1UEAxQdW1RFU1RdIEFwcGxlIGlQaG9uZSBEZXZp\n"
             "Y2UgQ0EwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANdgUir6k1Lc266Sa9as\n"
             "WRcfmiDtNK7CFejj8DtjhNhtjQJldOZiGCfR/HjDLzaDOZGfPTLglX+QO6tHvvFH\n"
             "hYxdqxxcuxBpR1a4Fb80SvBJboo1Sk9Huz7qzN8u9LiWFpTdOPbwgs8m/WehcwFD\n"
             "2CW9AiyCiXxwAWjCioVghHeDAgMBAAGjgZ4wgZswDgYDVR0PAQH/BAQDAgGGMA8G\n"
             "A1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFDgFIKk/xnn07Jpvf0cCXm6keRH1MB8G\n"
             "A1UdIwQYMBaAFEWiTKmKW0onXoWmTQUcJ0Slh3YXMDgGA1UdHwQxMC8wLaAroCmG\n"
             "J2h0dHA6Ly93d3cuYXBwbGUuY29tL2FwcGxlY2EvaXBob25lLmNybDANBgkqhkiG\n"
             "9w0BAQUFAAOCAQEAjb5ryE6AnniGDAnQbu3B3DD3KUsgTixssyRy/c4kNGCVMNcy\n"
             "YTHl1NVjqj+JgfZEq3HQvBfbq7zsu6RAaufkV8YobxFy/AxRBzHbQFTuteYe49yb\n"
             "+TxqutjDIPHdScs6pinNUvnz8xhe3YKDuOhOlBB6HhGgY02OYEodRXJNoKwfsJiL\n"
             "tDNahWDPf4k1YmXRG0ik7MpgGp2m0bk982SkZ9GlG7bZ52V1y68vetvYofTzCb+a\n"
             "mRo0pu0fgoQLtqhoXexJ1LM0hK/LpNkA8LwHbBfnlbvDPdm7ahMdNL0vwZrxTWdf\n"
             "VjOQsu//J9oZYFWweMKMNFthOuHsYZKLLwSaxg==\n"
             "-----END CERTIFICATE-----";
      else {
        id v5 = "Bag Attributes\n"
      }
             "    localKeyID: 7C 29 15 15 12 C9 CF F6 15 2B 5B 25 70 3D A7 9A 98 14 36 06\n"
             "subject=/C=US/O=Apple Inc./OU=Apple iPhone/CN=Apple iPhone Device CA\n"
             "issuer=/C=US/O=Apple Inc./OU=Apple Certification Authority/CN=Apple iPhone Certification Authority\n"
             "-----BEGIN CERTIFICATE-----\n"
             "MIIDaTCCAlGgAwIBAgIBATANBgkqhkiG9w0BAQUFADB5MQswCQYDVQQGEwJVUzET\n"
             "MBEGA1UEChMKQXBwbGUgSW5jLjEmMCQGA1UECxMdQXBwbGUgQ2VydGlmaWNhdGlv\n"
             "biBBdXRob3JpdHkxLTArBgNVBAMTJEFwcGxlIGlQaG9uZSBDZXJ0aWZpY2F0aW9u\n"
             "IEF1dGhvcml0eTAeFw0wNzA0MTYyMjU0NDZaFw0xNDA0MTYyMjU0NDZaMFoxCzAJ\n"
             "BgNVBAYTAlVTMRMwEQYDVQQKEwpBcHBsZSBJbmMuMRUwEwYDVQQLEwxBcHBsZSBp\n"
             "UGhvbmUxHzAdBgNVBAMTFkFwcGxlIGlQaG9uZSBEZXZpY2UgQ0EwgZ8wDQYJKoZI\n"
             "hvcNAQEBBQADgY0AMIGJAoGBAPGUSsnquloYYK3Lok1NTlQZaRdZB2bLl+hmmkdf\n"
             "Rq5nerVKc1SxywT2vTa4DFU4ioSDMVJl+TPhl3ecK0wmsCU/6TKqewh0lOzBSzgd\n"
             "Z04IUpRai1mjXNeT9KD+VYW7TEaXXm6yd0UvZ1y8Cxi/WblshvcqdXbSGXH0KWO5\n"
             "JQuvAgMBAAGjgZ4wgZswDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8w\n"
             "HQYDVR0OBBYEFLL+ISNEhpVqedWBJo5zENinTI50MB8GA1UdIwQYMBaAFOc0Ki4i\n"
             "3jlga7SUzneDYS8xoHw1MDgGA1UdHwQxMC8wLaAroCmGJ2h0dHA6Ly93d3cuYXBw\n"
             "bGUuY29tL2FwcGxlY2EvaXBob25lLmNybDANBgkqhkiG9w0BAQUFAAOCAQEAd13P\n"
             "Z3pMViukVHe9WUg8Hum+0I/0kHKvjhwVd/IMwGlXyU7DhUYWdja2X/zqj7W24Aq5\n"
             "7dEKm3fqqxK5XCFVGY5HI0cRsdENyTP7lxSiiTRYj2mlPedheCn+k6T5y0U4Xr40\n"
             "FXwWb2nWqCF1AgIudhgvVbxlvqcxUm8Zz7yDeJ0JFovXQhyO5fLUHRLCQFssAbf8\n"
             "B4i8rYYsBUhYTspVJcxVpIIltkYpdIRSIARA49HNvKK4hzjzMS/OhKQpVKw+OCEZ\n"
             "xptCVeN2pjbdt9uzi175oVo/u6B2ArKAW17u6XEHIdDMOe7cb33peVI6TD15W4MI\n"
             "pyQPbp8orlXe+tA8JA==\n"
             "-----END CERTIFICATE-----";
      uint64_t v6 = (unsigned int *)&QAIphoneDeviceCAPEMLen;
      uint64_t v7 = (unsigned int *)&iPhoneDeviceCAPEMLen;
      goto LABEL_48;
    case 13:
      BOOL v4 = a2 == 0;
      if (a2) {
        id v5 = "Certificate:\n"
      }
             "    Data:\n"
             "        Version: 3 (0x2)\n"
             "        Serial Number: 2 (0x2)\n"
             "        Signature Algorithm: sha1WithRSAEncryption\n"
             "        Issuer: C=US, O=Apple Inc., OU=Apple Certification Authority, CN=[TEST] Apple iPhone Certification "
             "Authority\n"
             "        Validity\n"
             "            Not Before: Mar 21 06:20:50 2007 GMT\n"
             "            Not After : Mar 12 06:20:50 2022 GMT\n"
             "        Subject: C=US, O=Apple Inc., OU=Apple iPhone, CN=[TEST] Apple iPhone Activation\n"
             "        Subject Public Key Info:\n"
             "            Public Key Algorithm: rsaEncryption\n"
             "            RSA Public Key: (1024 bit)\n"
             "                Modulus (1024 bit):\n"
             "                    00:b3:62:65:ec:48:dd:dd:ed:44:d4:f1:fe:fb:c2:\n"
             "                    6f:42:d0:82:09:03:00:a6:01:e8:b1:07:09:26:5b:\n"
             "                    12:65:db:7f:51:15:ef:4f:45:b3:8f:ce:4d:16:1d:\n"
             "                    38:84:01:10:57:4e:8c:71:e1:5e:de:67:14:75:da:\n"
             "                    48:9a:4c:6f:f0:45:65:66:e8:9c:b5:a2:4c:f4:53:\n"
             "                    c1:ec:98:62:90:b0:94:be:12:f2:a0:ac:5c:77:16:\n"
             "                    07:73:72:5a:97:ba:50:4e:67:30:52:1e:f0:30:4e:\n"
             "                    8f:b2:a4:d3:d1:fa:f8:66:79:87:91:2f:a1:ef:4e:\n"
             "                    e6:41:8d:94:18:29:e0:f2:cf\n"
             "                Exponent: 65537 (0x10001)\n"
             "        X509v3 extensions:\n"
             "            X509v3 Key Usage: critical\n"
             "                Digital Signature\n"
             "            X509v3 Basic Constraints: critical\n"
             "                CA:FALSE\n"
             "            X509v3 Subject Key Identifier:\n"
             "                C0:6F:3A:4A:1B:ED:51:DD:9D:A3:4B:C0:41:F6:6A:11:F9:AB:8B:F1\n"
             "            X509v3 Authority Key Identifier:\n"
             "                keyid:45:A2:4C:A9:8A:5B:4A:27:5E:85:A6:4D:05:1C:27:44:A5:87:76:17\n"
             "\n"
             "            X509v3 CRL Distribution Points:\n"
             "                URI:http://www.apple.com/appleca/iphone.crl\n"
             "\n"
             "    Signature Algorithm: sha1WithRSAEncryption\n"
             "        0e:4f:55:00:9d:1e:4c:75:28:e8:79:bb:db:5c:5c:cc:45:93:\n"
             "        46:d3:3b:14:00:2d:5b:b0:8c:2e:15:3e:19:60:43:25:59:7f:\n"
             "        7b:3a:b2:7c:cf:c2:96:dd:b0:d7:70:5a:8e:28:c4:cc:32:2c:\n"
             "        f4:c2:43:e3:e1:1f:b3:b1:df:ec:86:dd:43:93:45:60:a1:53:\n"
             "        05:ba:6a:70:43:44:11:a1:9e:dd:c1:71:8b:cb:30:cd:d3:15:\n"
             "        21:e0:27:30:35:8a:76:8e:c2:23:fb:44:22:bd:96:f6:aa:55:\n"
             "        bf:4d:11:b1:0e:c4:7f:cf:86:8d:f8:30:dd:80:48:5d:9e:41:\n"
             "        4e:e0:29:96:25:cc:d6:4a:0d:47:05:87:c4:61:f6:b0:1e:1a:\n"
             "        da:48:56:a3:c1:c1:56:95:b3:4e:84:82:1b:a5:4d:d3:d0:5d:\n"
             "        60:cf:fd:e5:75:3c:91:13:e2:e4:f1:60:4a:58:93:de:3f:e9:\n"
             "        3c:bf:da:c9:f6:ef:9b:9e:b1:6e:78:9e:81:f6:e7:4c:09:b3:\n"
             "        1c:87:25:bf:8f:6e:3f:d6:03:53:1e:09:a3:5b:00:4b:9e:98:\n"
             "        fb:ae:13:86:e4:47:6a:1a:44:f8:15:c8:fb:30:c7:bd:b0:e8:\n"
             "        8c:ac:2d:73:08:af:ed:b2:e8:f5:6d:a1:e2:d9:45:de:d5:b9:\n"
             "        98:89:16:72\n"
             "-----BEGIN CERTIFICATE-----\n"
             "MIIDdjCCAl6gAwIBAgIBAjANBgkqhkiG9w0BAQUFADCBgDELMAkGA1UEBhMCVVMx\n"
             "EzARBgNVBAoTCkFwcGxlIEluYy4xJjAkBgNVBAsTHUFwcGxlIENlcnRpZmljYXRp\n"
             "b24gQXV0aG9yaXR5MTQwMgYDVQQDFCtbVEVTVF0gQXBwbGUgaVBob25lIENlcnRp\n"
             "ZmljYXRpb24gQXV0aG9yaXR5MB4XDTA3MDMyMTA2MjA1MFoXDTIyMDMxMjA2MjA1\n"
             "MFowYjELMAkGA1UEBhMCVVMxEzARBgNVBAoTCkFwcGxlIEluYy4xFTATBgNVBAsT\n"
             "DEFwcGxlIGlQaG9uZTEnMCUGA1UEAxQeW1RFU1RdIEFwcGxlIGlQaG9uZSBBY3Rp\n"
             "dmF0aW9uMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCzYmXsSN3d7UTU8f77\n"
             "wm9C0IIJAwCmAeixBwkmWxJl239RFe9PRbOPzk0WHTiEARBXToxx4V7eZxR12kia\n"
             "TG/wRWVm6Jy1okz0U8HsmGKQsJS+EvKgrFx3FgdzclqXulBOZzBSHvAwTo+ypNPR\n"
             "+vhmeYeRL6HvTuZBjZQYKeDyzwIDAQABo4GbMIGYMA4GA1UdDwEB/wQEAwIHgDAM\n"
             "BgNVHRMBAf8EAjAAMB0GA1UdDgQWBBTAbzpKG+1R3Z2jS8BB9moR+auL8TAfBgNV\n"
             "HSMEGDAWgBRFokypiltKJ16Fpk0FHCdEpYd2FzA4BgNVHR8EMTAvMC2gK6Aphido\n"
             "dHRwOi8vd3d3LmFwcGxlLmNvbS9hcHBsZWNhL2lwaG9uZS5jcmwwDQYJKoZIhvcN\n"
             "AQEFBQADggEBAA5PVQCdHkx1KOh5u9tcXMxFk0bTOxQALVuwjC4VPhlgQyVZf3s6\n"
             "snzPwpbdsNdwWo4oxMwyLPTCQ+PhH7Ox3+yG3UOTRWChUwW6anBDRBGhnt3BcYvL\n"
             "MM3TFSHgJzA1inaOwiP7RCK9lvaqVb9NEbEOxH/Pho34MN2ASF2eQU7gKZYlzNZK\n"
             "DUcFh8Rh9rAeGtpIVqPBwVaVs06EghulTdPQXWDP/eV1PJET4uTxYEpYk94/6Ty/\n"
             "2sn275uesW54noH250wJsxyHJb+Pbj/WA1MeCaNbAEuemPuuE4bkR2oaRPgVyPsw\n"
             "x72w6IysLXMIr+2y6PVtoeLZRd7VuZiJFnI=\n"
             "-----END CERTIFICATE-----\n";
      else {
        id v5 = "Bag Attributes\n"
      }
             "    localKeyID: 75 60 9A FA 74 F6 E1 90 9C 00 2D 77 E5 10 D6 1C B3 E5 1F 4B\n"
             "subject=/C=US/O=Apple Inc./OU=Apple iPhone/CN=Apple iPhone Activation\n"
             "issuer=/C=US/O=Apple Inc./OU=Apple Certification Authority/CN=Apple iPhone Certification Authority\n"
             "-----BEGIN CERTIFICATE-----\n"
             "MIIDZzCCAk+gAwIBAgIBAjANBgkqhkiG9w0BAQUFADB5MQswCQYDVQQGEwJVUzET\n"
             "MBEGA1UEChMKQXBwbGUgSW5jLjEmMCQGA1UECxMdQXBwbGUgQ2VydGlmaWNhdGlv\n"
             "biBBdXRob3JpdHkxLTArBgNVBAMTJEFwcGxlIGlQaG9uZSBDZXJ0aWZpY2F0aW9u\n"
             "IEF1dGhvcml0eTAeFw0wNzA0MTYyMjU1MDJaFw0xNDA0MTYyMjU1MDJaMFsxCzAJ\n"
             "BgNVBAYTAlVTMRMwEQYDVQQKEwpBcHBsZSBJbmMuMRUwEwYDVQQLEwxBcHBsZSBp\n"
             "UGhvbmUxIDAeBgNVBAMTF0FwcGxlIGlQaG9uZSBBY3RpdmF0aW9uMIGfMA0GCSqG\n"
             "SIb3DQEBAQUAA4GNADCBiQKBgQDFAXzRImArmoiHfbS2oPcqAfbEv0d1jk7GbnX7\n"
             "+4YUlyIfprzBVdlmz2JHYv1+04IzJtL7cL97UI7fk0i0OMY0al8a+JPQa4Ug611T\n"
             "bqEt+njAmAkge3HXWDBdAXD9MhkC7T/9o77zOQ1oli4cUdzlnYWfzmW0PduOxuve\n"
             "AeYY4wIDAQABo4GbMIGYMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMB0G\n"
             "A1UdDgQWBBShoNL+t7Rz/psUaq/NPXNPH+/WlDAfBgNVHSMEGDAWgBTnNCouIt45\n"
             "YGu0lM53g2EvMaB8NTA4BgNVHR8EMTAvMC2gK6AphidodHRwOi8vd3d3LmFwcGxl\n"
             "LmNvbS9hcHBsZWNhL2lwaG9uZS5jcmwwDQYJKoZIhvcNAQEFBQADggEBAF9qmrUN\n"
             "dA+FROYGP7pWcYTAK+pLyOf9zOaE7aeVI885V8Y/BKHhlwAo+zEkiOU3FbEPCS9V\n"
             "tS18ZBcwD/+d5ZQTMFknhcUJwdPqqjnm9LqTfH/x4pw8ONHRDzxHdp96gOV3A4+8\n"
             "abkoASfcYqvIRypXnbur3bRRhTzAs4VILS6jTyFYymZeSewtBubmmigo1kCQiZGc\n"
             "76c5feDAyHb2bzEqtvx3WprljtS46QT5CR6YelinZnio32jAzRYTxtS6r3JsvZDi\n"
             "J07+EHcmfGdpxwgO+7btW1pFar0ZjF9/jYKKnOYNyvCrwszhafbSYwzAG5EJoXFB\n"
             "4d+piWHUDcPxtcc=\n"
             "-----END CERTIFICATE-----";
      uint64_t v6 = (unsigned int *)&QAIphoneActivationPEMLen;
      uint64_t v7 = (unsigned int *)&iPhoneActivationPEMLen;
LABEL_48:
      if (v4) {
        uint64_t v6 = v7;
      }
      unsigned int v9 = *v6;
      goto LABEL_52;
    case 14:
      unsigned int v9 = 4721;
      id v5 = iPhoneCAPEM;
      goto LABEL_52;
    default:
      id v8 = createMobileActivationError((uint64_t)"copyRootCertificate", 118, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid certificate type: %d", a1);
      if (v8) {
        goto LABEL_55;
      }
      unsigned int v9 = 0;
      id v5 = 0;
LABEL_52:
      id v10 = [objc_alloc((Class)NSData) initWithBytesNoCopy:v5 length:v9 freeWhenDone:0];
      if (v10)
      {
        uint64_t v11 = v10;
        id v8 = 0;
      }
      else
      {
        id v8 = createMobileActivationError((uint64_t)"copyRootCertificate", 128, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create certificate.");
LABEL_55:
        if (a3)
        {
          id v8 = v8;
          uint64_t v11 = 0;
          *a3 = v8;
        }
        else
        {
          uint64_t v11 = 0;
        }
      }

      return v11;
  }
}

id copy_system_container_path()
{
  if (copy_system_container_path_onceToken != -1) {
    dispatch_once(&copy_system_container_path_onceToken, &__block_literal_global_7);
  }
  id v0 = (void *)copy_system_container_path_retval;

  return v0;
}

void __copy_system_container_path_block_invoke(id a1)
{
  uint64_t v1 = container_system_path_for_identifier();
  if (v1)
  {
    dispatch_queue_t v2 = (void *)v1;
    uint64_t v3 = +[NSString stringWithUTF8String:v1];
    BOOL v4 = (void *)copy_system_container_path_retval;
    copy_system_container_path_retval = (uint64_t)v3;

    free(v2);
  }
}

NSString *copy_group_container_path(uint64_t a1)
{
  if (a1 && (uint64_t v1 = container_system_group_path_for_identifier()) != 0)
  {
    dispatch_queue_t v2 = (void *)v1;
    uint64_t v3 = +[NSString stringWithUTF8String:v1];
    free(v2);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id copy_regulatory_images_directory_path()
{
  if (copy_regulatory_images_directory_path_onceToken != -1) {
    dispatch_once(&copy_regulatory_images_directory_path_onceToken, &__block_literal_global_27);
  }
  id v0 = (void *)copy_regulatory_images_directory_path_retval;

  return v0;
}

void __copy_regulatory_images_directory_path_block_invoke(id a1)
{
  uint64_t v1 = copy_group_container_path((uint64_t)[@"systemgroup.com.apple.regulatory_images" UTF8String]);
  dispatch_queue_t v2 = v1;
  if (v1)
  {
    uint64_t v3 = [(NSString *)v1 stringByAppendingPathComponent:@"Library/RegulatoryImages"];
    BOOL v4 = (void *)copy_regulatory_images_directory_path_retval;
    copy_regulatory_images_directory_path_retval = (uint64_t)v3;
  }
}

id copy_suinfo_directory_path()
{
  if (copy_suinfo_directory_path_onceToken != -1) {
    dispatch_once(&copy_suinfo_directory_path_onceToken, &__block_literal_global_32);
  }
  id v0 = (void *)copy_suinfo_directory_path_retval;

  return v0;
}

void __copy_suinfo_directory_path_block_invoke(id a1)
{
  uint64_t v1 = copy_group_container_path((uint64_t)[@"systemgroup.com.apple.pisco.suinfo" UTF8String]);
  dispatch_queue_t v2 = v1;
  if (v1)
  {
    uint64_t v3 = [(NSString *)v1 stringByAppendingPathComponent:@"Library/ProvenanceV2"];
    BOOL v4 = (void *)copy_suinfo_directory_path_retval;
    copy_suinfo_directory_path_retval = (uint64_t)v3;
  }
}

id copy_software_update_log_directory_path()
{
  if (copy_software_update_log_directory_path_onceToken != -1) {
    dispatch_once(&copy_software_update_log_directory_path_onceToken, &__block_literal_global_37);
  }
  id v0 = (void *)copy_software_update_log_directory_path_retval;

  return v0;
}

void __copy_software_update_log_directory_path_block_invoke(id a1)
{
  id v1 = [@"/private/var/hardware/MobileActivation" stringByAppendingPathComponent:@"logs"];
  dispatch_queue_t v2 = (void *)copy_software_update_log_directory_path_retval;
  copy_software_update_log_directory_path_retval = (uint64_t)v1;
}

id copy_software_update_splunk_directory_path()
{
  if (copy_software_update_splunk_directory_path_onceToken != -1) {
    dispatch_once(&copy_software_update_splunk_directory_path_onceToken, &__block_literal_global_42);
  }
  id v0 = (void *)copy_software_update_splunk_directory_path_retval;

  return v0;
}

void __copy_software_update_splunk_directory_path_block_invoke(id a1)
{
  id v1 = [@"/private/var/hardware/MobileActivation" stringByAppendingPathComponent:@"splunk"];
  dispatch_queue_t v2 = (void *)copy_software_update_splunk_directory_path_retval;
  copy_software_update_splunk_directory_path_retval = (uint64_t)v1;
}

id copy_uik_path()
{
  if (copy_uik_path_onceToken != -1) {
    dispatch_once(&copy_uik_path_onceToken, &__block_literal_global_47_0);
  }
  id v0 = (void *)copy_uik_path_retval;

  return v0;
}

void __copy_uik_path_block_invoke(id a1)
{
  id v1 = copy_group_container_path((uint64_t)[@"systemgroup.com.apple.mobileactivationd" UTF8String]);
  dispatch_queue_t v2 = v1;
  if (v1)
  {
    uint64_t v3 = [(NSString *)v1 stringByAppendingPathComponent:@"Library/uik"];
    BOOL v4 = (void *)copy_uik_path_retval;
    copy_uik_path_retval = (uint64_t)v3;
  }
}

id copy_software_update_ucrt_directory_path()
{
  if (copy_software_update_ucrt_directory_path_onceToken != -1) {
    dispatch_once(&copy_software_update_ucrt_directory_path_onceToken, &__block_literal_global_52);
  }
  id v0 = (void *)copy_software_update_ucrt_directory_path_retval;

  return v0;
}

void __copy_software_update_ucrt_directory_path_block_invoke(id a1)
{
  id v1 = copy_group_container_path((uint64_t)[@"systemgroup.com.apple.mobileactivationd" UTF8String]);
  dispatch_queue_t v2 = v1;
  if (v1)
  {
    uint64_t v3 = [(NSString *)v1 stringByAppendingPathComponent:@"Library/ucrt"];
    BOOL v4 = (void *)copy_software_update_ucrt_directory_path_retval;
    copy_software_update_ucrt_directory_path_retval = (uint64_t)v3;
  }
}

id copy_activation_records_directory_path()
{
  if (copy_activation_records_directory_path_onceToken != -1) {
    dispatch_once(&copy_activation_records_directory_path_onceToken, &__block_literal_global_57);
  }
  id v0 = (void *)copy_activation_records_directory_path_retval;

  return v0;
}

void __copy_activation_records_directory_path_block_invoke(id a1)
{
  id v1 = copy_system_container_path();
  dispatch_queue_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 stringByAppendingPathComponent:@"Library/activation_records"];
    BOOL v4 = (void *)copy_activation_records_directory_path_retval;
    copy_activation_records_directory_path_retval = (uint64_t)v3;
  }
}

id copy_ucrt_path()
{
  if (copy_ucrt_path_onceToken != -1) {
    dispatch_once(&copy_ucrt_path_onceToken, &__block_literal_global_62);
  }
  id v0 = (void *)copy_ucrt_path_retval;

  return v0;
}

void __copy_ucrt_path_block_invoke(id a1)
{
  id v1 = copy_group_container_path((uint64_t)[@"systemgroup.com.apple.mobileactivationd" UTF8String]);
  dispatch_queue_t v2 = v1;
  if (v1)
  {
    id v3 = [(NSString *)v1 stringByAppendingPathComponent:@"Library/ucrt"];
    BOOL v4 = (void *)copy_ucrt_path_retval;
    copy_ucrt_path_retval = (uint64_t)v3;
  }
}

id copy_dcrt_path()
{
  if (copy_dcrt_path_onceToken != -1) {
    dispatch_once(&copy_dcrt_path_onceToken, &__block_literal_global_64);
  }
  id v0 = (void *)copy_dcrt_path_retval;

  return v0;
}

void __copy_dcrt_path_block_invoke(id a1)
{
  id v1 = [@"/private/var/hardware/MobileActivation" stringByAppendingPathComponent:@"dcrt"];
  dispatch_queue_t v2 = (void *)copy_dcrt_path_retval;
  copy_dcrt_path_retval = (uint64_t)v1;
}

id copy_legacy_dcrt_path()
{
  if (copy_legacy_dcrt_path_onceToken != -1) {
    dispatch_once(&copy_legacy_dcrt_path_onceToken, &__block_literal_global_69);
  }
  id v0 = (void *)copy_legacy_dcrt_path_retval;

  return v0;
}

void __copy_legacy_dcrt_path_block_invoke(id a1)
{
  id v1 = copy_system_container_path();
  dispatch_queue_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 stringByAppendingPathComponent:@"Library/dcrt"];
    BOOL v4 = (void *)copy_legacy_dcrt_path_retval;
    copy_legacy_dcrt_path_retval = (uint64_t)v3;
  }
}

id copy_data_ark_directory_path()
{
  if (copy_data_ark_directory_path_onceToken != -1) {
    dispatch_once(&copy_data_ark_directory_path_onceToken, &__block_literal_global_74);
  }
  id v0 = (void *)copy_data_ark_directory_path_retval;

  return v0;
}

void __copy_data_ark_directory_path_block_invoke(id a1)
{
  id v1 = copy_system_container_path();
  dispatch_queue_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 stringByAppendingPathComponent:@"Library/internal"];
    BOOL v4 = (void *)copy_data_ark_directory_path_retval;
    copy_data_ark_directory_path_retval = (uint64_t)v3;
  }
}

id copy_log_directory_path()
{
  if (copy_log_directory_path_onceToken != -1) {
    dispatch_once(&copy_log_directory_path_onceToken, &__block_literal_global_79);
  }
  id v0 = (void *)copy_log_directory_path_retval;

  return v0;
}

void __copy_log_directory_path_block_invoke(id a1)
{
  id v1 = (void *)copy_log_directory_path_retval;
  copy_log_directory_path_retval = @"/private/var/mobile/Library/Logs/mobileactivationd";
}

id copy_splunk_directory_path()
{
  if (copy_splunk_directory_path_onceToken != -1) {
    dispatch_once(&copy_splunk_directory_path_onceToken, &__block_literal_global_84);
  }
  id v0 = (void *)copy_splunk_directory_path_retval;

  return v0;
}

void __copy_splunk_directory_path_block_invoke(id a1)
{
  id v1 = copy_system_container_path();
  dispatch_queue_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 stringByAppendingPathComponent:@"Library/splunk"];
    BOOL v4 = (void *)copy_splunk_directory_path_retval;
    copy_splunk_directory_path_retval = (uint64_t)v3;
  }
}

uint64_t mobileactivationErrorHasDomainAndErrorCode(void *a1, void *a2, id a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  if (v5 && v6)
  {
    do
    {
      id v9 = [v5 domain];
      if ([v9 isEqualToString:v7])
      {
        id v10 = [v5 code];

        if (v10 == a3)
        {
          uint64_t v8 = 1;
          goto LABEL_9;
        }
      }
      else
      {
      }
      id v11 = [v5 userInfo];
      id v12 = [v11 objectForKeyedSubscript:NSUnderlyingErrorKey];

      id v5 = v12;
    }
    while (v12);
    uint64_t v8 = 0;
  }
LABEL_9:

  return v8;
}

uint64_t load_identity(CFTypeRef *a1, id a2, void *a3, void *a4, int *a5, void *a6)
{
  id v11 = a2;
  id v12 = a3;
  id v13 = a4;
  if (!a1 || !v12)
  {
    double v21 = createMobileActivationError((uint64_t)"load_identity", 57, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    uint64_t v22 = 0;
    id v15 = 0;
    int v20 = -1;
    if (!a5) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v25[0] = kSecAttrLabel;
  v25[1] = kSecClass;
  v26[0] = v12;
  v26[1] = kSecClassIdentity;
  v25[2] = kSecReturnRef;
  v25[3] = kSecUseDataProtectionKeychain;
  void v26[2] = &__kCFBooleanTrue;
  v26[3] = &__kCFBooleanTrue;
  id v14 = +[NSDictionary dictionaryWithObjects:v26 forKeys:v25 count:4];
  id v15 = [(NSDictionary *)v14 mutableCopy];

  if (v11) {
    [v15 setObject:v11 forKeyedSubscript:kSecAttrAccessGroup];
  }
  if (v13)
  {
    id v16 = [v13 objectForKeyedSubscript:@"UseSystemKeychainSharediPadOnly"];
    id v17 = isNSNumber(v16);

    if (v17)
    {
      id v18 = [v13 objectForKeyedSubscript:@"UseSystemKeychainSharediPadOnly"];
      [v15 setObject:v18 forKeyedSubscript:kSecUseSystemKeychain];
    }
  }
  uint64_t v19 = SecItemCopyMatching((CFDictionaryRef)v15, a1);
  int v20 = v19;
  if (v19)
  {
    double v21 = createMobileActivationError((uint64_t)"load_identity", 88, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy identity: %d", v19);
    uint64_t v22 = 0;
    if (!a5) {
      goto LABEL_13;
    }
LABEL_12:
    *a5 = v20;
    goto LABEL_13;
  }
  double v21 = 0;
  uint64_t v22 = 1;
  if (a5) {
    goto LABEL_12;
  }
LABEL_13:
  if (a6) {
    char v23 = v22;
  }
  else {
    char v23 = 1;
  }
  if ((v23 & 1) == 0) {
    *a6 = v21;
  }

  return v22;
}

uint64_t delete_identity(void *a1, void *a2, void *a3, NSError **a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  if (!v8)
  {
    id v16 = createMobileActivationError((uint64_t)"delete_identity", 116, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    id v11 = 0;
    if (!a4) {
      goto LABEL_10;
    }
    goto LABEL_12;
  }
  v19[0] = kSecAttrLabel;
  v19[1] = kSecClass;
  v20[0] = v8;
  v20[1] = kSecClassIdentity;
  v19[2] = kSecReturnRef;
  v19[3] = kSecUseDataProtectionKeychain;
  v20[2] = &__kCFBooleanTrue;
  void v20[3] = &__kCFBooleanTrue;
  id v10 = +[NSDictionary dictionaryWithObjects:v20 forKeys:v19 count:4];
  id v11 = [(NSDictionary *)v10 mutableCopy];

  if (v7) {
    [v11 setObject:v7 forKeyedSubscript:kSecAttrAccessGroup];
  }
  if (v9)
  {
    id v12 = [v9 objectForKeyedSubscript:@"UseSystemKeychainSharediPadOnly"];
    id v13 = isNSNumber(v12);

    if (v13)
    {
      id v14 = [v9 objectForKeyedSubscript:@"UseSystemKeychainSharediPadOnly"];
      [v11 setObject:v14 forKeyedSubscript:kSecUseSystemKeychain];
    }
  }
  uint64_t v15 = SecItemDelete((CFDictionaryRef)v11);
  id v16 = 0;
  uint64_t v17 = 1;
  if (v15 != -25300 && v15)
  {
    id v16 = createMobileActivationError((uint64_t)"delete_identity", 146, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to remove existing identity: %d", v15);
    if (!a4)
    {
LABEL_10:
      uint64_t v17 = 0;
      goto LABEL_13;
    }
LABEL_12:
    id v16 = v16;
    uint64_t v17 = 0;
    *a4 = v16;
  }
LABEL_13:

  return v17;
}

uint64_t store_identity(uint64_t a1, id a2, void *a3, void *a4, NSError **a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  if (a1 && v10)
  {
    id v23 = 0;
    char v12 = delete_identity(v9, v10, v11, (NSError **)&v23);
    id v13 = (NSError *)v23;
    if (v12)
    {
      v24[0] = kSecAttrLabel;
      v24[1] = kSecValueRef;
      v25[0] = v10;
      v25[1] = a1;
      v24[2] = kSecUseDataProtectionKeychain;
      v24[3] = kSecAttrAccessible;
      v25[2] = &__kCFBooleanTrue;
      v25[3] = kSecAttrAccessibleAlwaysThisDeviceOnlyPrivate;
      id v14 = +[NSDictionary dictionaryWithObjects:v25 forKeys:v24 count:4];
      id v15 = [(NSDictionary *)v14 mutableCopy];

      if (v9) {
        [v15 setObject:v9 forKeyedSubscript:kSecAttrAccessGroup];
      }
      if (v11)
      {
        id v16 = [v11 objectForKeyedSubscript:@"UseSystemKeychainSharediPadOnly"];
        id v17 = isNSNumber(v16);

        if (v17)
        {
          id v18 = [v11 objectForKeyedSubscript:@"UseSystemKeychainSharediPadOnly"];
          [v15 setObject:v18 forKeyedSubscript:kSecUseSystemKeychain];
        }
      }
      uint64_t v19 = SecItemAdd((CFDictionaryRef)v15, 0);
      if (!v19)
      {
        uint64_t v21 = 1;
        goto LABEL_17;
      }
      int v20 = createMobileActivationError((uint64_t)"store_identity", 206, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to add identity to keychain: %d", v19);
    }
    else
    {
      int v20 = createMobileActivationError((uint64_t)"store_identity", 176, @"com.apple.MobileActivation.ErrorDomain", -1, v13, @"Failed to delete existing identity.");

      id v15 = 0;
    }
    id v13 = v20;
    if (!a5) {
      goto LABEL_15;
    }
  }
  else
  {
    id v13 = createMobileActivationError((uint64_t)"store_identity", 171, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    id v15 = 0;
    if (!a5)
    {
LABEL_15:
      uint64_t v21 = 0;
      goto LABEL_17;
    }
  }
  id v13 = v13;
  uint64_t v21 = 0;
  *a5 = v13;
LABEL_17:

  return v21;
}

uint64_t load_certificate(CFTypeRef *a1, id a2, void *a3, int *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = v10;
  CFTypeRef result = 0;
  if (!v10)
  {
    id v16 = createMobileActivationError((uint64_t)"load_certificate", 231, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid inputs.");
    uint64_t v17 = 0;
    id v13 = 0;
    int v15 = -1;
    if (!a4) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  v21[0] = kSecAttrLabel;
  v21[1] = kSecClass;
  v22[0] = v10;
  v22[1] = kSecClassCertificate;
  v21[2] = kSecReturnRef;
  v21[3] = kSecUseDataProtectionKeychain;
  v22[2] = &__kCFBooleanTrue;
  v22[3] = &__kCFBooleanTrue;
  char v12 = +[NSDictionary dictionaryWithObjects:v22 forKeys:v21 count:4];
  id v13 = [(NSDictionary *)v12 mutableCopy];

  if (v9) {
    [v13 setObject:v9 forKeyedSubscript:kSecAttrAccessGroup];
  }
  uint64_t v14 = SecItemCopyMatching((CFDictionaryRef)v13, &result);
  if (v14)
  {
    int v15 = v14;
    id v16 = createMobileActivationError((uint64_t)"load_certificate", 253, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy certificate (%@): %d", v11, v14);
    uint64_t v17 = 0;
    if (!a4) {
      goto LABEL_9;
    }
LABEL_8:
    *a4 = v15;
    goto LABEL_9;
  }
  int v15 = 0;
  id v16 = 0;
  if (a1) {
    *a1 = CFRetain(result);
  }
  uint64_t v17 = 1;
  if (a4) {
    goto LABEL_8;
  }
LABEL_9:
  if (a5) {
    char v18 = v17;
  }
  else {
    char v18 = 1;
  }
  if ((v18 & 1) == 0) {
    *a5 = v16;
  }
  if (result) {
    CFRelease(result);
  }
  CFTypeRef result = 0;

  return v17;
}

uint64_t delete_certificate(void *a1, void *a2, NSError **a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (!v6)
  {
    id v11 = createMobileActivationError((uint64_t)"delete_certificate", 287, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    id v9 = 0;
    if (!a3) {
      goto LABEL_7;
    }
    goto LABEL_9;
  }
  v14[0] = kSecAttrLabel;
  v14[1] = kSecClass;
  v15[0] = v6;
  v15[1] = kSecClassCertificate;
  void v14[2] = kSecReturnRef;
  void v14[3] = kSecUseDataProtectionKeychain;
  void v15[2] = &__kCFBooleanTrue;
  void v15[3] = &__kCFBooleanTrue;
  id v8 = +[NSDictionary dictionaryWithObjects:v15 forKeys:v14 count:4];
  id v9 = [(NSDictionary *)v8 mutableCopy];

  if (v5) {
    [v9 setObject:v5 forKeyedSubscript:kSecAttrAccessGroup];
  }
  uint64_t v10 = SecItemDelete((CFDictionaryRef)v9);
  id v11 = 0;
  uint64_t v12 = 1;
  if (v10 != -25300 && v10)
  {
    id v11 = createMobileActivationError((uint64_t)"delete_certificate", 309, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to remove existing certificate (%@): %d", v7, v10);
    if (!a3)
    {
LABEL_7:
      uint64_t v12 = 0;
      goto LABEL_10;
    }
LABEL_9:
    id v11 = v11;
    uint64_t v12 = 0;
    *a3 = v11;
  }
LABEL_10:

  return v12;
}

uint64_t store_certificate(uint64_t a1, id a2, void *a3, int a4, NSError **a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = v10;
  CFTypeRef result = 0;
  if (!a1 || !v10)
  {
    id v13 = createMobileActivationError((uint64_t)"store_certificate", 334, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
LABEL_11:
    id v15 = 0;
    if (!a5)
    {
LABEL_19:
      uint64_t v19 = 0;
      goto LABEL_20;
    }
LABEL_12:
    id v13 = v13;
    uint64_t v19 = 0;
    *a5 = v13;
    goto LABEL_20;
  }
  id v23 = 0;
  int v12 = delete_certificate(v9, v10, (NSError **)&v23);
  id v13 = (NSError *)v23;
  if (!v12) {
    goto LABEL_11;
  }
  v25[0] = kSecAttrLabel;
  v25[1] = kSecClass;
  v26[0] = v11;
  v26[1] = kSecClassCertificate;
  v25[2] = kSecReturnRef;
  v25[3] = kSecValueRef;
  void v26[2] = &__kCFBooleanTrue;
  v26[3] = a1;
  void v25[4] = kSecUseDataProtectionKeychain;
  void v26[4] = &__kCFBooleanTrue;
  uint64_t v14 = +[NSDictionary dictionaryWithObjects:v26 forKeys:v25 count:5];
  id v15 = [(NSDictionary *)v14 mutableCopy];

  if (v9) {
    [v15 setObject:v9 forKeyedSubscript:kSecAttrAccessGroup];
  }
  uint64_t v16 = SecItemAdd((CFDictionaryRef)v15, 0);
  if (v16 == -25299 && a4)
  {
    [v15 removeObjectForKey:kSecAttrLabel];
    uint64_t v17 = SecItemCopyMatching((CFDictionaryRef)v15, &result);
    if (v17)
    {
      MobileActivationError = createMobileActivationError((uint64_t)"store_certificate", 368, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query duplicate certificate: %d", v17);
      goto LABEL_18;
    }
    uint64_t v20 = SecItemDelete((CFDictionaryRef)v15);
    if (v20)
    {
      MobileActivationError = createMobileActivationError((uint64_t)"store_certificate", 378, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to delete duplicate certificate: %d", v20);
      goto LABEL_18;
    }
    [v15 setObject:v11 forKeyedSubscript:kSecAttrLabel];
    uint64_t v16 = SecItemAdd((CFDictionaryRef)v15, 0);
  }
  if (v16)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"store_certificate", 392, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to add certificate (%@) to keychain: %d", v11, v16);
LABEL_18:
    uint64_t v21 = MobileActivationError;

    id v13 = v21;
    if (!a5) {
      goto LABEL_19;
    }
    goto LABEL_12;
  }
  uint64_t v19 = 1;
LABEL_20:
  if (result) {
    CFRelease(result);
  }
  CFTypeRef result = 0;

  return v19;
}

uint64_t update_certificate(void *a1, void *a2, void *a3, NSError **a4)
{
  id v7 = a1;
  id v8 = a2;
  CFDictionaryRef v9 = a3;
  CFDictionaryRef v10 = v9;
  if (v8 && v9)
  {
    v17[0] = kSecAttrLabel;
    v17[1] = kSecClass;
    v18[0] = v8;
    v18[1] = kSecClassCertificate;
    v17[2] = kSecUseDataProtectionKeychain;
    v18[2] = &__kCFBooleanTrue;
    id v11 = +[NSDictionary dictionaryWithObjects:v18 forKeys:v17 count:3];
    id v12 = [(NSDictionary *)v11 mutableCopy];

    if (v7) {
      [v12 setObject:v7 forKeyedSubscript:kSecAttrAccessGroup];
    }
    uint64_t v13 = SecItemUpdate((CFDictionaryRef)v12, v10);
    if (!v13)
    {
      uint64_t v14 = 0;
      uint64_t v15 = 1;
      goto LABEL_11;
    }
    uint64_t v14 = createMobileActivationError((uint64_t)"update_certificate", 440, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to update %@ in keychain: %d", v8, v13);
    if (!a4) {
      goto LABEL_7;
    }
LABEL_9:
    uint64_t v14 = v14;
    uint64_t v15 = 0;
    *a4 = v14;
    goto LABEL_11;
  }
  uint64_t v14 = createMobileActivationError((uint64_t)"update_certificate", 419, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
  id v12 = 0;
  if (a4) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v15 = 0;
LABEL_11:

  return v15;
}

uint64_t store_pem_as_identity(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  if (v11 && v12 && v14)
  {
    id v23 = 0;
    uint64_t v16 = (const void *)lockcrypto_identity_from_pem_data(v12, v11, &v23);
    id v17 = v23;
    char v18 = v17;
    if (v16)
    {
      id v22 = v17;
      uint64_t v19 = store_identity((uint64_t)v16, v13, v14, v15, (NSError **)&v22);
      uint64_t v20 = (NSError *)v22;

      if (!a6) {
        goto LABEL_12;
      }
      goto LABEL_10;
    }
    uint64_t v20 = createMobileActivationError((uint64_t)"store_pem_as_identity", 469, @"com.apple.MobileActivation.ErrorDomain", -1, v17, @"Failed to create identity from pem data");
  }
  else
  {
    uint64_t v20 = createMobileActivationError((uint64_t)"store_pem_as_identity", 463, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid inputs.");
    uint64_t v16 = 0;
  }
  uint64_t v19 = 0;
  if (!a6) {
    goto LABEL_12;
  }
LABEL_10:
  if ((v19 & 1) == 0) {
    *a6 = v20;
  }
LABEL_12:
  if (v16) {
    CFRelease(v16);
  }

  return v19;
}

uint64_t store_pem_as_certificate(void *a1, void *a2, void *a3, int a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = v11;
  if (!v9 || !v11)
  {
    id v17 = createMobileActivationError((uint64_t)"store_pem_as_certificate", 499, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid inputs.");
    SecCertificateRef v13 = 0;
    if (!a5) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  id v23 = 0;
  SecCertificateRef v13 = lockcrypto_cert_from_pem_data(v9, (NSError **)&v23);
  id v14 = v23;
  id v15 = v14;
  if (!v13)
  {
    id v17 = createMobileActivationError((uint64_t)"store_pem_as_certificate", 505, @"com.apple.MobileActivation.ErrorDomain", -1, v14, @"Failed to create certificate from pem data.");

    if (!a5) {
      goto LABEL_12;
    }
LABEL_11:
    *a5 = v17;
    goto LABEL_12;
  }
  id v22 = v14;
  char v16 = store_certificate((uint64_t)v13, v10, v12, a4, (NSError **)&v22);
  id v17 = (NSError *)v22;

  if (v16)
  {
    uint64_t v18 = 1;
LABEL_13:
    CFRelease(v13);
    uint64_t v20 = v18;
    goto LABEL_14;
  }
  uint64_t v19 = createMobileActivationError((uint64_t)"store_pem_as_certificate", 511, @"com.apple.MobileActivation.ErrorDomain", -1, v17, @"Failed to store certificate.");

  id v17 = v19;
  if (a5) {
    goto LABEL_11;
  }
LABEL_12:
  uint64_t v18 = 0;
  uint64_t v20 = 0;
  if (v13) {
    goto LABEL_13;
  }
LABEL_14:

  return v20;
}

CFTypeRef copy_keychain_item(void *a1, void *a2, void *a3, int *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = v11;
  CFTypeRef result = 0;
  if (!v10)
  {
    char v16 = createMobileActivationError((uint64_t)"copy_keychain_item", 542, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    CFTypeRef v17 = 0;
    int v18 = -1;
    if (!a4) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  id v26 = a5;
  if (v11)
  {
    id v13 = [v11 objectForKeyedSubscript:@"LocalAuthenticationContext"];
    if (v13)
    {
      id v14 = [v12 objectForKeyedSubscript:@"LocalAuthenticationContext"];
      getLAContextClass();
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();

      if (isKindOfClass) {
        id v13 = [v12 objectForKeyedSubscript:@"LocalAuthenticationContext"];
      }
      else {
        id v13 = 0;
      }
    }
    id v19 = [v12 objectForKeyedSubscript:@"UseAuthenticationUI"];
    id v20 = isNSString(v19);

    if (v20)
    {
      id v21 = [v12 objectForKeyedSubscript:@"UseAuthenticationUI"];
      goto LABEL_13;
    }
  }
  else
  {
    id v13 = 0;
  }
  id v21 = 0;
LABEL_13:
  v28[0] = kSecAttrLabel;
  v28[1] = kSecClass;
  v29[0] = v10;
  v29[1] = kSecClassKey;
  v28[2] = kSecReturnRef;
  v28[3] = kSecUseDataProtectionKeychain;
  v29[2] = &__kCFBooleanTrue;
  v29[3] = &__kCFBooleanTrue;
  id v22 = +[NSDictionary dictionaryWithObjects:v29 forKeys:v28 count:4];
  id v23 = [(NSDictionary *)v22 mutableCopy];

  if (v9) {
    [v23 setObject:v9 forKeyedSubscript:kSecAttrAccessGroup];
  }
  if (v13) {
    [v23 setObject:v13 forKeyedSubscript:kSecUseAuthenticationContext];
  }
  if (v21) {
    [v23 setObject:v21 forKeyedSubscript:kSecUseAuthenticationUI];
  }
  uint64_t v24 = SecItemCopyMatching((CFDictionaryRef)v23, &result);
  int v18 = v24;
  if (v24)
  {
    char v16 = createMobileActivationError((uint64_t)"copy_keychain_item", 586, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy keychain item %@: %d", v10, v24);

    CFTypeRef v17 = 0;
  }
  else
  {
    CFTypeRef v17 = result;
    CFTypeRef result = 0;

    char v16 = 0;
  }
  a5 = v26;
  if (a4) {
LABEL_23:
  }
    *a4 = v18;
LABEL_24:
  if (a5 && !v17) {
    *a5 = v16;
  }
  if (result) {
    CFRelease(result);
  }
  CFTypeRef result = 0;

  return v17;
}

id getLAContextClass()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  id v0 = (void *)getLAContextClass_softClass;
  uint64_t v7 = getLAContextClass_softClass;
  if (!getLAContextClass_softClass)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3254779904;
    v3[2] = __getLAContextClass_block_invoke;
    v3[3] = &__block_descriptor_40_e8_32r_e5_v8__0l;
    v3[4] = &v4;
    __getLAContextClass_block_invoke((uint64_t)v3);
    id v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_100042794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t delete_keychain_item(void *a1, void *a2, NSError **a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = v6;
  if (!v6)
  {
    id v13 = createMobileActivationError((uint64_t)"delete_keychain_item", 617, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    id v9 = 0;
    if (!a3)
    {
LABEL_13:
      uint64_t v12 = 0;
      goto LABEL_14;
    }
    goto LABEL_11;
  }
  v15[0] = kSecAttrLabel;
  v15[1] = kSecClass;
  v16[0] = v6;
  v16[1] = kSecClassKey;
  void v15[2] = kSecUseDataProtectionKeychain;
  v16[2] = &__kCFBooleanTrue;
  id v8 = +[NSDictionary dictionaryWithObjects:v16 forKeys:v15 count:3];
  id v9 = [(NSDictionary *)v8 mutableCopy];

  if (v5) {
    [v9 setObject:v5 forKeyedSubscript:kSecAttrAccessGroup];
  }
  uint64_t v10 = SecItemDelete((CFDictionaryRef)v9);
  if (v10 != -25300 && v10 != 0)
  {
    id v13 = createMobileActivationError((uint64_t)"delete_keychain_item", 638, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to remove existing keychain item %@: %d", v7, v10);
    if (!a3) {
      goto LABEL_13;
    }
LABEL_11:
    id v13 = v13;
    uint64_t v12 = 0;
    *a3 = v13;
    goto LABEL_14;
  }
  id v13 = 0;
  uint64_t v12 = 1;
LABEL_14:

  return v12;
}

uint64_t store_keychain_item(uint64_t a1, id a2, void *a3, void *a4, NSError **a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  uint64_t v12 = v11;
  if (a1 && v10)
  {
    if (v11)
    {
      id v13 = [v11 objectForKeyedSubscript:@"LocalAuthenticationContext"];
      if (v13
        && (id v14 = v13,
            id v15 = [v12 objectForKeyedSubscript:@"LocalAuthenticationContext"],
            getLAContextClass(),
            objc_opt_class(),
            char isKindOfClass = objc_opt_isKindOfClass(),
            v15,
            v14,
            (isKindOfClass & 1) != 0))
      {
        id v17 = [v12 objectForKeyedSubscript:@"LocalAuthenticationContext"];
      }
      else
      {
        id v17 = 0;
      }
      id v22 = [v12 objectForKeyedSubscript:@"UseAuthenticationUI"];
      id v23 = isNSString(v22);

      if (v23)
      {
        id v20 = [v12 objectForKeyedSubscript:@"UseAuthenticationUI"];
        goto LABEL_14;
      }
    }
    else
    {
      id v17 = 0;
    }
    id v20 = 0;
LABEL_14:
    id v29 = 0;
    char v24 = delete_keychain_item(v9, v10, (NSError **)&v29);
    int v18 = (NSError *)v29;
    if (v24)
    {
      v30[0] = kSecAttrLabel;
      v30[1] = kSecClass;
      v31[0] = v10;
      v31[1] = kSecClassKey;
      v30[2] = kSecValueRef;
      v30[3] = kSecUseDataProtectionKeychain;
      v31[2] = a1;
      v31[3] = &__kCFBooleanTrue;
      v30[4] = kSecAttrAccessible;
      v31[4] = kSecAttrAccessibleAlwaysThisDeviceOnlyPrivate;
      id v25 = +[NSDictionary dictionaryWithObjects:v31 forKeys:v30 count:5];
      id v19 = [(NSDictionary *)v25 mutableCopy];

      if (v9) {
        [v19 setObject:v9 forKeyedSubscript:kSecAttrAccessGroup];
      }
      if (v17) {
        [v19 setObject:v17 forKeyedSubscript:kSecUseAuthenticationContext];
      }
      if (v20) {
        [v19 setObject:v20 forKeyedSubscript:kSecUseAuthenticationUI];
      }
      uint64_t v26 = SecItemAdd((CFDictionaryRef)v19, 0);
      if (!v26)
      {
        uint64_t v21 = 1;
        goto LABEL_27;
      }
      id v27 = createMobileActivationError((uint64_t)"store_keychain_item", 717, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to add %@ to keychain: %d", v10, v26);
    }
    else
    {
      id v27 = createMobileActivationError((uint64_t)"store_keychain_item", 684, @"com.apple.MobileActivation.ErrorDomain", -1, v18, @"Failed to delete existing keychain item.");

      id v19 = 0;
    }
    int v18 = v27;
    if (!a5) {
      goto LABEL_25;
    }
    goto LABEL_8;
  }
  int v18 = createMobileActivationError((uint64_t)"store_keychain_item", 667, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
  id v19 = 0;
  id v17 = 0;
  id v20 = 0;
  if (!a5)
  {
LABEL_25:
    uint64_t v21 = 0;
    goto LABEL_27;
  }
LABEL_8:
  int v18 = v18;
  uint64_t v21 = 0;
  *a5 = v18;
LABEL_27:

  return v21;
}

uint64_t update_keychain_item(void *a1, void *a2, void *a3, NSError **a4)
{
  id v7 = a1;
  id v8 = a2;
  CFDictionaryRef v9 = a3;
  CFDictionaryRef v10 = v9;
  if (v8 && v9)
  {
    v17[0] = kSecAttrLabel;
    v17[1] = kSecClass;
    v18[0] = v8;
    v18[1] = kSecClassKey;
    v17[2] = kSecUseDataProtectionKeychain;
    v18[2] = &__kCFBooleanTrue;
    id v11 = +[NSDictionary dictionaryWithObjects:v18 forKeys:v17 count:3];
    id v12 = [(NSDictionary *)v11 mutableCopy];

    if (v7) {
      [v12 setObject:v7 forKeyedSubscript:kSecAttrAccessGroup];
    }
    uint64_t v13 = SecItemUpdate((CFDictionaryRef)v12, v10);
    if (!v13)
    {
      id v14 = 0;
      uint64_t v15 = 1;
      goto LABEL_11;
    }
    id v14 = createMobileActivationError((uint64_t)"update_keychain_item", 763, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to update %@ in keychain: %d", v8, v13);
    if (!a4) {
      goto LABEL_7;
    }
LABEL_9:
    id v14 = v14;
    uint64_t v15 = 0;
    *a4 = v14;
    goto LABEL_11;
  }
  id v14 = createMobileActivationError((uint64_t)"update_keychain_item", 742, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
  id v12 = 0;
  if (a4) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v15 = 0;
LABEL_11:

  return v15;
}

id copy_keychain_data(void *a1, void *a2, int *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  CFDictionaryRef v9 = v8;
  CFTypeRef result = 0;
  if (v8)
  {
    v19[0] = kSecAttrLabel;
    v19[1] = kSecClass;
    v20[0] = v8;
    v20[1] = kSecClassGenericPassword;
    v19[2] = kSecReturnData;
    v19[3] = kSecUseDataProtectionKeychain;
    v20[2] = &__kCFBooleanTrue;
    void v20[3] = &__kCFBooleanTrue;
    CFDictionaryRef v10 = +[NSDictionary dictionaryWithObjects:v20 forKeys:v19 count:4];
    id v11 = [(NSDictionary *)v10 mutableCopy];

    if (v7) {
      [v11 setObject:v7 forKeyedSubscript:kSecAttrAccessGroup];
    }
    uint64_t v12 = SecItemCopyMatching((CFDictionaryRef)v11, &result);
    int v13 = v12;
    if (v12)
    {
      id v14 = createMobileActivationError((uint64_t)"copy_keychain_data", 810, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy keychain item %@: %d", v9, v12);
      uint64_t v15 = 0;
      if (!a3) {
        goto LABEL_9;
      }
    }
    else
    {
      id v14 = 0;
      uint64_t v15 = (void *)result;
      CFTypeRef result = 0;
      if (!a3) {
        goto LABEL_9;
      }
    }
    goto LABEL_8;
  }
  id v14 = createMobileActivationError((uint64_t)"copy_keychain_data", 788, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
  uint64_t v15 = 0;
  id v11 = 0;
  int v13 = -1;
  if (a3) {
LABEL_8:
  }
    *a3 = v13;
LABEL_9:
  if (a4 && !v15) {
    *a4 = v14;
  }
  if (result) {
    CFRelease(result);
  }
  CFTypeRef result = 0;
  id v16 = v15;

  return v16;
}

uint64_t delete_keychain_data(void *a1, void *a2, NSError **a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v6;
  if (!v6)
  {
    int v13 = createMobileActivationError((uint64_t)"delete_keychain_data", 841, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    id v9 = 0;
    if (!a3)
    {
LABEL_13:
      uint64_t v12 = 0;
      goto LABEL_14;
    }
    goto LABEL_11;
  }
  v15[0] = kSecAttrLabel;
  v15[1] = kSecClass;
  v16[0] = v6;
  v16[1] = kSecClassGenericPassword;
  void v15[2] = kSecUseDataProtectionKeychain;
  v16[2] = &__kCFBooleanTrue;
  id v8 = +[NSDictionary dictionaryWithObjects:v16 forKeys:v15 count:3];
  id v9 = [(NSDictionary *)v8 mutableCopy];

  if (v5) {
    [v9 setObject:v5 forKeyedSubscript:kSecAttrAccessGroup];
  }
  uint64_t v10 = SecItemDelete((CFDictionaryRef)v9);
  if (v10 != -25300 && v10 != 0)
  {
    int v13 = createMobileActivationError((uint64_t)"delete_keychain_data", 862, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to remove existing keychain item %@: %d", v7, v10);
    if (!a3) {
      goto LABEL_13;
    }
LABEL_11:
    int v13 = v13;
    uint64_t v12 = 0;
    *a3 = v13;
    goto LABEL_14;
  }
  int v13 = 0;
  uint64_t v12 = 1;
LABEL_14:

  return v12;
}

uint64_t store_keychain_data(void *a1, void *a2, void *a3, NSError **a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v10 = v9;
  if (v7 && v9)
  {
    id v19 = 0;
    char v11 = delete_keychain_data(v8, v9, (NSError **)&v19);
    uint64_t v12 = (NSError *)v19;
    if (v11)
    {
      v20[0] = kSecAttrLabel;
      v20[1] = kSecClass;
      v21[0] = v10;
      v21[1] = kSecClassGenericPassword;
      v20[2] = kSecValueData;
      void v20[3] = kSecUseDataProtectionKeychain;
      v21[2] = v7;
      v21[3] = &__kCFBooleanTrue;
      void v20[4] = kSecAttrService;
      v20[5] = kSecAttrAccount;
      void v21[4] = @"com.apple.mobileactivationd";
      v21[5] = v10;
      v20[6] = kSecAttrAccessible;
      v21[6] = kSecAttrAccessibleAlwaysThisDeviceOnlyPrivate;
      int v13 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:7];
      id v14 = [(NSDictionary *)v13 mutableCopy];

      if (v8) {
        [v14 setObject:v8 forKeyedSubscript:kSecAttrAccessGroup];
      }
      uint64_t v15 = SecItemAdd((CFDictionaryRef)v14, 0);
      if (!v15)
      {
        uint64_t v17 = 1;
        goto LABEL_14;
      }
      id v16 = createMobileActivationError((uint64_t)"store_keychain_data", 920, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to add %@ to keychain: %d", v10, v15);
    }
    else
    {
      id v16 = createMobileActivationError((uint64_t)"store_keychain_data", 892, @"com.apple.MobileActivation.ErrorDomain", -1, v12, @"Failed to delete existing keychain item.");

      id v14 = 0;
    }
    uint64_t v12 = v16;
    if (!a4) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v12 = createMobileActivationError((uint64_t)"store_keychain_data", 887, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    id v14 = 0;
    if (!a4)
    {
LABEL_12:
      uint64_t v17 = 0;
      goto LABEL_14;
    }
  }
  uint64_t v12 = v12;
  uint64_t v17 = 0;
  *a4 = v12;
LABEL_14:

  return v17;
}

uint64_t update_keychain_data(void *a1, void *a2, void *a3, NSError **a4)
{
  id v7 = a1;
  id v8 = a2;
  CFDictionaryRef v9 = a3;
  if (v8)
  {
    v16[0] = kSecAttrLabel;
    v16[1] = kSecClass;
    v17[0] = v8;
    v17[1] = kSecClassGenericPassword;
    v16[2] = kSecUseDataProtectionKeychain;
    void v16[3] = kSecAttrService;
    v17[2] = &__kCFBooleanTrue;
    void v17[3] = @"com.apple.mobileactivationd";
    void v16[4] = kSecAttrAccount;
    v17[4] = v8;
    uint64_t v10 = +[NSDictionary dictionaryWithObjects:v17 forKeys:v16 count:5];
    id v11 = [(NSDictionary *)v10 mutableCopy];

    if (v7) {
      [v11 setObject:v7 forKeyedSubscript:kSecAttrAccessGroup];
    }
    uint64_t v12 = SecItemUpdate((CFDictionaryRef)v11, v9);
    if (!v12)
    {
      int v13 = 0;
      uint64_t v14 = 1;
      goto LABEL_10;
    }
    int v13 = createMobileActivationError((uint64_t)"update_keychain_data", 968, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to update %@ in keychain: %d", v8, v12);
    if (a4) {
      goto LABEL_6;
    }
LABEL_8:
    uint64_t v14 = 0;
    goto LABEL_10;
  }
  int v13 = createMobileActivationError((uint64_t)"update_keychain_data", 945, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
  id v11 = 0;
  if (!a4) {
    goto LABEL_8;
  }
LABEL_6:
  int v13 = v13;
  uint64_t v14 = 0;
  *a4 = v13;
LABEL_10:

  return v14;
}

Class __getLAContextClass_block_invoke(uint64_t a1)
{
  v3[0] = 0;
  if (!LocalAuthenticationLibraryCore_frameworkLibrary)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = (void *)3221225472;
    v3[3] = __LocalAuthenticationLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = off_100265D28;
    uint64_t v5 = 0;
    LocalAuthenticationLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!LocalAuthenticationLibraryCore_frameworkLibrary) {
    __getLAContextClass_block_invoke_cold_1(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("LAContext");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getLAContextClass_block_invoke_cold_2();
  }
  getLAContextClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __LocalAuthenticationLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  LocalAuthenticationLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_100043B90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL networkReachable()
{
  id v0 = +[NetworkProvider sharedInstance];
  id v1 = v0;
  if (v0)
  {
    BOOL v2 = [(NetworkProvider *)v0 networkReachable];
  }
  else
  {

    BOOL v2 = 0;
  }

  return v2;
}

NSSet *copy_unsupported_virtual_machine_oids()
{
  return +[NSSet setWithObjects:@"1.2.840.113635.100.10.1", 0];
}

NSArray *copy_required_dcrt_oids()
{
  v2[0] = @"1.2.840.113635.100.8.4";
  v2[1] = @"1.2.840.113635.100.8.12";
  v2[2] = @"1.2.840.113635.100.8.5";
  v2[3] = @"1.2.840.113635.100.8.7";
  id v0 = +[NSArray arrayWithObjects:v2 count:4];

  return v0;
}

NSArray *copy_critical_dcrt_oids()
{
  v2[0] = @"1.2.840.113635.100.8.4";
  v2[1] = @"1.2.840.113635.100.8.5";
  id v0 = +[NSArray arrayWithObjects:v2 count:2];

  return v0;
}

id client_requires_critical_dcrt_oids(uint64_t a1)
{
  return [&off_10027F440 containsObject:a1];
}

NSSet *copy_supported_eda_oids()
{
  return +[NSSet setWithObjects:@"1.2.840.113635.100.8.9.1", @"1.2.840.113635.100.8.9.2", @"1.2.840.113635.100.8.10.1", @"1.2.840.113635.100.8.10.2", @"1.2.840.113635.100.8.10.3", @"1.2.840.113635.100.8.11.1", @"1.2.840.113635.100.8.13.1", @"1.2.840.113635.100.8.13.2", @"1.2.840.113635.100.8.13.3", @"1.2.840.113635.100.8.13.4", @"1.2.840.113635.100.8.9.3", @"1.2.840.113635.100.8.9.4", 0];
}

NSMutableSet *copy_supported_baa_oids()
{
  id v0 = +[NSMutableSet setWithObjects:@"1.2.840.113635.100.10.1", @"1.2.840.113635.100.10.2", @"1.2.840.113635.100.8.1", @"1.2.840.113635.100.8.2", @"1.2.840.113635.100.8.3", @"1.2.840.113635.100.8.4", @"1.2.840.113635.100.8.5", @"1.2.840.113635.100.8.6", @"1.2.840.113635.100.8.7", @"1.2.840.113635.100.8.12", @"1.2.840.113635.100.6.71.1", @"1.2.840.113635.100.6.71.2", @"1.2.840.113635.100.6.71.3", @"1.2.840.113635.100.8.9.4", @"1.2.840.113635.100.8.10.4", 0];
  if (is_virtual_machine())
  {
    id v1 = +[NSSet setWithObjects:@"1.2.840.113635.100.10.1", 0];
    [(NSMutableSet *)v0 minusSet:v1];
  }

  return v0;
}

CFTypeRef createReferenceKeyBlob(const void *a1, char a2, id a3, void *a4)
{
  id v7 = a3;
  id v8 = (id)kSecAttrKeyTypeECSECPrimeRandom;
  CFErrorRef error = 0;
  if (v7
    && (id v9 = [v7 objectForKeyedSubscript:@"KeySizeInBits"],
        id v10 = isNSNumber(v9),
        v10,
        v9,
        v10))
  {
    id v11 = (_UNKNOWN **)[v7 objectForKeyedSubscript:@"KeySizeInBits"];
    if (([v11 isEqualToNumber:&off_10027EF18] & 1) == 0
      && ([v11 isEqualToNumber:&off_10027EF30] & 1) == 0)
    {
      uint64_t v12 = createMobileActivationError((uint64_t)"createReferenceKeyBlob", 73, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid value for option (%@): unsupported size (%@)", @"KeySizeInBits", v11);
      id v13 = 0;
LABEL_19:
      id v20 = 0;
      CFTypeRef v21 = 0;
      SecKeyRef v22 = 0;
      uint64_t v17 = 0;
      goto LABEL_30;
    }
  }
  else
  {
    id v11 = &off_10027EF18;
  }
  id v14 = +[GestaltHlpr getSharedInstance];
  id v13 = [v14 copyAnswer:@"HasPKA"];

  id v15 = isNSNumber(v13);
  if (!v15)
  {
    uint64_t v12 = createMobileActivationError((uint64_t)"createReferenceKeyBlob", 84, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve PKA state.");
    goto LABEL_19;
  }
  if ([v13 BOOLValue] && (a2 & 1) == 0)
  {
    id v16 = (__CFString *)kSecAttrKeyTypeECSECPrimeRandomPKA;

    id v8 = v16;
  }
  if (!a1 || (uint64_t v17 = CFRetain(a1)) == 0)
  {
    if ((isRunningInRecovery() & 1) != 0 || isRunningInDiagnosticsMode())
    {
      uint64_t v17 = (const void *)SecAccessControlCreate();
      if (!v17)
      {
        MobileActivationError = createMobileActivationError((uint64_t)"createReferenceKeyBlob", 104, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to create access control.");
        goto LABEL_28;
      }
      uint64_t v18 = kSecAttrAccessibleUntilReboot;
      if ((SecAccessControlSetProtection() & 1) == 0)
      {
        MobileActivationError = createMobileActivationError((uint64_t)"createReferenceKeyBlob", 109, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to set ACL protection to %@.", v18);
LABEL_28:
        uint64_t v12 = MobileActivationError;
        id v20 = 0;
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v17 = SecAccessControlCreateWithFlags(0, kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly, 0x40000000uLL, &error);
      if (!v17)
      {
        MobileActivationError = createMobileActivationError((uint64_t)"createReferenceKeyBlob", 115, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to create access control (%@).", kSecAttrAccessibleAlwaysThisDeviceOnlyPrivate);
        goto LABEL_28;
      }
    }
  }
  id v23 = objc_alloc_init((Class)NSMutableDictionary);
  id v20 = v23;
  if (!v23)
  {
    uint64_t v12 = createMobileActivationError((uint64_t)"createReferenceKeyBlob", 123, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to alloc dictionary.");
LABEL_29:
    CFTypeRef v21 = 0;
    SecKeyRef v22 = 0;
    goto LABEL_30;
  }
  [v23 setObject:&__kCFBooleanFalse forKeyedSubscript:kSecAttrIsPermanent];
  [v20 setObject:kSecAttrTokenIDAppleKeyStore forKeyedSubscript:kSecAttrTokenID];
  [v20 setObject:v8 forKeyedSubscript:kSecAttrKeyType];
  [v20 setObject:v17 forKeyedSubscript:kSecAttrAccessControl];
  [v20 setObject:v11 forKeyedSubscript:kSecAttrKeySizeInBits];
  SecKeyRef v24 = SecKeyCreateRandomKey((CFDictionaryRef)v20, &error);
  SecKeyRef v22 = v24;
  if (v24)
  {
    CFTypeRef v21 = CFRetain(v24);
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = createMobileActivationError((uint64_t)"createReferenceKeyBlob", 141, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to create ref key.");
    CFTypeRef v21 = 0;
  }
LABEL_30:
  if (a4 && !v21) {
    *a4 = v12;
  }
  if (v22) {
    CFRelease(v22);
  }
  if (v17) {
    CFRelease(v17);
  }
  if (error) {
    CFRelease(error);
  }

  return v21;
}

__SecKey *create_baa_info(__SecKey *a1, id a2, void *a3)
{
  id v4 = a2;
  CFErrorRef error = 0;
  id v5 = objc_alloc((Class)NSMutableArray);
  v256[0] = @"1.2.840.113635.100.8.4";
  v256[1] = @"1.2.840.113635.100.8.5";
  v256[2] = @"1.2.840.113635.100.8.7";
  id v6 = +[NSArray arrayWithObjects:v256 count:3];
  id v7 = [v5 initWithArray:v6];

  v220 = +[NSNumber numberWithUnsignedInt:0];
  id v234 = v4;
  SecKeyRef key = a1;
  if (!v4)
  {
    id v233 = v7;
    int v25 = 0;
    unsigned int v20 = 0;
    unsigned int v26 = 0;
    id v27 = 0;
    id v219 = 0;
    unint64_t v28 = 0;
    id v210 = 0;
    id v211 = 0;
    id v212 = 0;
    id v29 = 0;
    char v207 = 0;
    id v208 = 0;
    id v209 = 0;
    unsigned int v30 = 0;
    char v31 = 1;
    id v214 = (NSNumber *)&off_10027EF60;
    CFDataRef v226 = 0;
    CFDataRef v227 = (NSNumber *)&off_10027EF60;
    v215 = (NSNumber *)&off_10027EF48;
    goto LABEL_24;
  }
  id v8 = [v4 objectForKeyedSubscript:@"OIDSToInclude"];
  id v9 = isNSArray(v8);

  if (v9)
  {
    id v233 = v7;
    long long v250 = 0u;
    long long v251 = 0u;
    long long v248 = 0u;
    long long v249 = 0u;
    id v10 = [v4 objectForKeyedSubscript:@"OIDSToInclude"];
    id v11 = [v10 countByEnumeratingWithState:&v248 objects:v255 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v249;
      while (2)
      {
        for (i = 0; i != v12; i = (char *)i + 1)
        {
          if (*(void *)v249 != v13) {
            objc_enumerationMutation(v10);
          }
          id v15 = isNSString(*(void **)(*((void *)&v248 + 1) + 8 * i));

          if (!v15)
          {
            id v37 = [v234 objectForKeyedSubscript:@"OIDSToInclude"];
            id v230 = createMobileActivationError((uint64_t)"create_baa_info", 244, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid options (%@): %@", @"OIDSToInclude", v37);

            goto LABEL_28;
          }
        }
        id v12 = [v10 countByEnumeratingWithState:&v248 objects:v255 count:16];
        if (v12) {
          continue;
        }
        break;
      }
    }

    id v16 = objc_alloc((Class)NSMutableArray);
    id v17 = [v234 objectForKeyedSubscript:@"OIDSToInclude"];
    id v7 = [v16 initWithArray:v17];

    if (is_virtual_machine())
    {
      uint64_t v18 = copy_unsupported_virtual_machine_oids();
      id v19 = [(NSSet *)v18 allObjects];
      [v7 removeObjectsInArray:v19];
    }
  }
  if (([v7 containsObject:@"1.2.840.113635.100.8.1"] & 1) != 0
    || ([v7 containsObject:@"1.2.840.113635.100.8.7"] & 1) != 0
    || ([v7 containsObject:@"1.2.840.113635.100.8.10.1"] & 1) != 0
    || ([v7 containsObject:@"1.2.840.113635.100.8.10.2"] & 1) != 0
    || [v7 containsObject:@"1.2.840.113635.100.8.10.3"])
  {
    unsigned int v20 = [v7 containsObject:@"1.2.840.113635.100.8.1"];
    int v21 = 1;
  }
  else
  {
    int v21 = 0;
    unsigned int v20 = 0;
  }
  unsigned int v22 = [v7 containsObject:@"1.2.840.113635.100.8.7"];
  id v233 = v7;
  if (([v7 containsObject:@"1.2.840.113635.100.8.2"] & 1) != 0
    || [v7 containsObject:@"1.2.840.113635.100.8.11.1"])
  {
    id v23 = [v234 objectForKeyedSubscript:@"nonce"];
    id v24 = isNSData(v23);
    if (v24)
    {
    }
    else
    {
      int v203 = v21;
      unsigned int v54 = v20;
      unsigned int v55 = v22;
      id v56 = [v234 objectForKeyedSubscript:@"AppSpecificData"];
      id v15 = isNSData(v56);

      if (!v15)
      {
        id v230 = createMobileActivationError((uint64_t)"create_baa_info", 281, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Missing one of the required options: %@ / %@", @"nonce", @"AppSpecificData");
LABEL_28:
        id v201 = 0;
        BOOL v38 = 0;
        id v208 = 0;
        id v209 = 0;
        id v225 = 0;
        CFDataRef v226 = 0;
        id v211 = 0;
        id v212 = 0;
        v206 = 0;
        char v207 = 0;
        id v210 = 0;
        id v221 = 0;
        id v222 = 0;
        id v213 = 0;
        id v39 = 0;
        id v40 = 0;
        id v41 = 0;
        id v42 = 0;
        id v29 = 0;
        id v204 = 0;
        CFDataRef v205 = 0;
        id v34 = 0;
        id v43 = 0;
        id v217 = 0;
        id v219 = 0;
        id v223 = 0;
        CFDataRef v193 = 0;
        SecKeyRef keya = 0;
        id v44 = 0;
        goto LABEL_118;
      }
      unsigned int v22 = v55;
      unsigned int v20 = v54;
      int v21 = v203;
    }
    id v57 = [v234 objectForKeyedSubscript:@"nonce"];
    id v58 = [v234 objectForKeyedSubscript:@"AppSpecificData"];
    uint64_t v59 = v58;
    id v222 = v57;
    if (v58)
    {
      id v43 = isNSData(v58);

      if (!v43)
      {
        id v221 = v59;
        id v230 = createMobileActivationError((uint64_t)"create_baa_info", 290, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid value for option (%@).", @"AppSpecificData");
        id v201 = 0;
        BOOL v38 = 0;
        id v208 = 0;
        id v209 = 0;
        id v225 = 0;
        id v211 = 0;
        id v212 = 0;
        v206 = 0;
        char v207 = 0;
        id v210 = 0;
        id v213 = 0;
        id v39 = 0;
        id v40 = 0;
        id v41 = 0;
        id v42 = 0;
        id v29 = 0;
        CFDataRef v205 = 0;
        id v34 = 0;
LABEL_117:
        id v217 = 0;
        id v219 = 0;
        CFDataRef v226 = 0;
        id v223 = 0;
        CFDataRef v193 = 0;
        SecKeyRef keya = 0;
        id v204 = 0;
        id v44 = 0;
        id v15 = 0;
LABEL_118:
        id v197 = 0;
        id v200 = 0;
        CFDataRef v227 = (NSNumber *)&off_10027EF60;
        id v214 = (NSNumber *)&off_10027EF60;
        v215 = (NSNumber *)&off_10027EF48;
        goto LABEL_119;
      }
      if ((unint64_t)[v59 length] >= 0x41)
      {
        id v221 = v59;
        MobileActivationError = createMobileActivationError((uint64_t)"create_baa_info", 295, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid value for option (%@): unexpected size (%lu)", @"AppSpecificData", [v59 length]);
LABEL_110:
        id v230 = MobileActivationError;
LABEL_111:
        id v201 = 0;
        BOOL v38 = 0;
        id v208 = 0;
        id v209 = 0;
        id v225 = 0;
        id v211 = 0;
        id v212 = 0;
        goto LABEL_112;
      }
    }
  }
  else
  {
    id v222 = 0;
    uint64_t v59 = 0;
  }
  id v62 = [v234 objectForKeyedSubscript:@"CertType"];
  id v63 = isNSNumber(v62);

  id v221 = v59;
  if (v63)
  {
    id v64 = (NSNumber *)[v234 objectForKeyedSubscript:@"CertType"];

    id v65 = &CCDigest_ptr;
    id v66 = +[NSNumber numberWithUnsignedInt:0];
    if ([(NSNumber *)v64 isEqualToNumber:v66])
    {
LABEL_62:

      goto LABEL_64;
    }
    id v67 = +[NSNumber numberWithUnsignedInt:1];
    if ([(NSNumber *)v64 isEqualToNumber:v67])
    {

      id v65 = &CCDigest_ptr;
      goto LABEL_62;
    }
    unsigned int v231 = v22;
    unsigned int v75 = +[NSNumber numberWithUnsignedInt:2];
    unsigned __int8 v76 = [(NSNumber *)v64 isEqualToNumber:v75];

    if ((v76 & 1) == 0)
    {
      v220 = v64;
      MobileActivationError = createMobileActivationError((uint64_t)"create_baa_info", 305, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid value for option (%@): %@", @"CertType", v64);
      goto LABEL_110;
    }
    unsigned int v22 = v231;
    id v65 = &CCDigest_ptr;
  }
  else
  {
    id v64 = v220;
    id v65 = &CCDigest_ptr;
  }
LABEL_64:
  id v68 = [v65[304] numberWithUnsignedInt:1];
  unsigned int v69 = [(NSNumber *)v64 isEqualToNumber:v68];

  v220 = v64;
  if (v69)
  {
    if (!device_supports_mfi_certificates())
    {
      MobileActivationError = createMobileActivationError((uint64_t)"create_baa_info", 312, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Certificate type not supported on this platform: %@", v64);
      goto LABEL_110;
    }
    uint64_t v70 = v233;
    if (([v233 containsObject:@"1.2.840.113635.100.6.71.1"] & 1) == 0)
    {
      MobileActivationError = createMobileActivationError((uint64_t)"create_baa_info", 317, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Missing required OID for certificate type (%@): %@", v64, @"1.2.840.113635.100.6.71.1");
      goto LABEL_110;
    }
  }
  else
  {
    uint64_t v70 = v233;
    if (([v233 containsObject:@"1.2.840.113635.100.6.71.1"] & 1) != 0
      || ([v233 containsObject:@"1.2.840.113635.100.6.71.2"] & 1) != 0
      || [v233 containsObject:@"1.2.840.113635.100.6.71.3"])
    {
      MobileActivationError = createMobileActivationError((uint64_t)"create_baa_info", 324, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid OID(s) for requested certificate type: %@", v64);
      goto LABEL_110;
    }
  }
  if ([v70 containsObject:@"1.2.840.113635.100.6.71.1"]
    && (id v71 = [v234 objectForKeyedSubscript:@"MFiProperties"],
        id v72 = isNSData(v71),
        v72,
        v71,
        v72))
  {
    id v73 = [v234 objectForKeyedSubscript:@"MFiProperties"];
    id v74 = [v73 length];

    if (v74 != (id)32)
    {
      id v124 = [v234 objectForKeyedSubscript:@"MFiProperties"];
      id v230 = createMobileActivationError((uint64_t)"create_baa_info", 332, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid value for option (%@): unexpected size (%lu)", @"MFiProperties", [v124 length]);

      goto LABEL_111;
    }
    id v212 = [v234 objectForKeyedSubscript:@"MFiProperties"];
  }
  else
  {
    id v212 = 0;
  }
  if ([v233 containsObject:@"1.2.840.113635.100.6.71.2"])
  {
    id v104 = [v234 objectForKeyedSubscript:@"MFiPPUID"];
    id v40 = isNSString(v104);

    if (!v40)
    {
      id v230 = createMobileActivationError((uint64_t)"create_baa_info", 342, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Missing required option: %@", @"MFiPPUID");
      id v201 = 0;
      BOOL v38 = 0;
      id v208 = 0;
      id v209 = 0;
      id v225 = 0;
      id v211 = 0;
      v206 = 0;
      char v207 = 0;
      goto LABEL_151;
    }
    id v105 = [v234 objectForKeyedSubscript:@"MFiPPUID"];
    id v106 = [v105 length];

    if ((unint64_t)v106 >= 0x25)
    {
      id v107 = [v234 objectForKeyedSubscript:@"MFiPPUID"];
      id v230 = createMobileActivationError((uint64_t)"create_baa_info", 347, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid value for option (%@): unexpected size (%lu)", @"MFiPPUID", [v107 length]);

      id v201 = 0;
      BOOL v38 = 0;
      id v208 = 0;
      id v209 = 0;
      id v225 = 0;
      id v211 = 0;
LABEL_112:
      v206 = 0;
      char v207 = 0;
LABEL_113:
      id v210 = 0;
      id v213 = 0;
      id v39 = 0;
LABEL_114:
      id v40 = 0;
LABEL_115:
      id v41 = 0;
      id v42 = 0;
      id v29 = 0;
LABEL_116:
      CFDataRef v205 = 0;
      id v34 = 0;
      id v43 = 0;
      goto LABEL_117;
    }
    id v125 = [v234 objectForKeyedSubscript:@"MFiPPUID"];
    id v29 = (__SecKey *)[v125 stringByPaddingToLength:36 withString:&stru_100278200 startingAtIndex:0];

    if (!v29)
    {
      id v230 = createMobileActivationError((uint64_t)"create_baa_info", 356, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Failed to pad string.");
      id v201 = 0;
      BOOL v38 = 0;
      id v208 = 0;
      id v209 = 0;
      id v225 = 0;
      id v210 = 0;
      id v211 = 0;
      v206 = 0;
      char v207 = 0;
      id v213 = 0;
      id v39 = 0;
      id v40 = 0;
      id v41 = 0;
      id v42 = 0;
      goto LABEL_116;
    }
    id v39 = (__SecKey *)[(__SecKey *)v29 dataUsingEncoding:4];
    if (!v39)
    {
      v206 = v29;
      id v230 = createMobileActivationError((uint64_t)"create_baa_info", 362, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Failed to convert string to data.");
      id v201 = 0;
      BOOL v38 = 0;
      id v208 = 0;
      id v209 = 0;
      id v225 = 0;
      id v210 = 0;
      id v211 = 0;
      char v207 = 0;
      id v213 = 0;
      goto LABEL_114;
    }
  }
  else
  {
    id v29 = 0;
    id v39 = 0;
  }
  char v207 = v39;
  if ([v233 containsObject:@"1.2.840.113635.100.6.71.3"])
  {
    id v119 = [v234 objectForKeyedSubscript:@"MFiData"];
    id v40 = isNSData(v119);

    if (v40)
    {
      id v120 = [v234 objectForKeyedSubscript:@"MFiData"];
      id v121 = [v120 length];

      if ((unint64_t)v121 >= 0x4B0)
      {
        v206 = v29;
        id v122 = [v234 objectForKeyedSubscript:@"MFiData"];
        id v230 = createMobileActivationError((uint64_t)"create_baa_info", 374, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid value for option (%@): unexpected size (%lu)", @"MFiData", [v122 length]);

        id v201 = 0;
        BOOL v38 = 0;
        id v208 = 0;
        id v209 = 0;
        id v225 = 0;
        id v211 = 0;
        goto LABEL_113;
      }
      id v211 = [v234 objectForKeyedSubscript:@"MFiData"];
      goto LABEL_155;
    }
    v206 = v29;
    id v230 = createMobileActivationError((uint64_t)"create_baa_info", 369, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Missing required option: %@", @"MFiData");
    id v201 = 0;
    BOOL v38 = 0;
    id v208 = 0;
    id v209 = 0;
    id v225 = 0;
    id v211 = 0;
LABEL_151:
    id v210 = 0;
    id v213 = 0;
    id v39 = 0;
    goto LABEL_115;
  }
  id v211 = 0;
LABEL_155:
  id v126 = [v234 objectForKeyedSubscript:@"UseRKSigningInterface"];
  id v127 = isNSNumber(v126);

  unsigned int v232 = v22;
  if (v127)
  {
    id v128 = [v234 objectForKeyedSubscript:@"UseRKSigningInterface"];
    unsigned int v218 = [v128 BOOLValue];
  }
  else
  {
    unsigned int v218 = 0;
  }
  id v129 = [v234 objectForKeyedSubscript:@"UseSoftwareGeneratedKey"];
  id v130 = isNSNumber(v129);

  if (v130)
  {
    id v131 = [v234 objectForKeyedSubscript:@"UseSoftwareGeneratedKey"];
    unsigned __int8 v132 = [v131 BOOLValue];
  }
  else
  {
    unsigned __int8 v132 = 1;
  }
  id v133 = [v234 objectForKeyedSubscript:@"Validity"];
  id v134 = isNSNumber(v133);

  if (v134)
  {
    id v135 = [v234 objectForKeyedSubscript:@"Validity"];
    v215 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v135 unsignedIntegerValue]);
  }
  else
  {
    v215 = (NSNumber *)&off_10027EF48;
  }
  id v136 = [v234 objectForKeyedSubscript:@"CACert"];
  id v137 = isNSNumber(v136);

  if (v137)
  {
    id v138 = [v234 objectForKeyedSubscript:@"CACert"];
    id v214 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v138 unsignedIntegerValue]);
  }
  else
  {
    id v214 = (NSNumber *)&off_10027EF60;
  }
  id v139 = [v234 objectForKeyedSubscript:@"scrtAttestation"];
  id v140 = isNSNumber(v139);

  int v141 = v21;
  if (v140)
  {
    id v142 = [v234 objectForKeyedSubscript:@"scrtAttestation"];
    CFDataRef v227 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v142 unsignedIntegerValue]);
  }
  else
  {
    CFDataRef v227 = (NSNumber *)&off_10027EF60;
  }
  id v143 = [v234 objectForKeyedSubscript:@"ClientAttestationData"];
  id v144 = isNSData(v143);

  if (v144)
  {
    id v145 = [v234 objectForKeyedSubscript:@"ClientAttestationPublicKey"];
    id v42 = isNSData(v145);

    if (!v42)
    {
      v206 = v29;
      id v230 = createMobileActivationError((uint64_t)"create_baa_info", 411, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Missing required option for %@.", @"ClientAttestationPublicKey");
      id v201 = 0;
      BOOL v38 = 0;
      id v208 = 0;
      id v209 = 0;
      id v225 = 0;
      CFDataRef v226 = 0;
      id v210 = 0;
      id v213 = 0;
      id v39 = 0;
      id v40 = 0;
      id v41 = 0;
      id v29 = 0;
      CFDataRef v205 = 0;
      id v34 = 0;
      id v43 = 0;
      id v219 = 0;
      goto LABEL_86;
    }
    id v224 = [v234 objectForKeyedSubscript:@"ClientAttestationData"];
    CFDataRef v226 = (CFDataRef)[v234 objectForKeyedSubscript:@"ClientAttestationPublicKey"];
    id v146 = [v234 objectForKeyedSubscript:@"ClientDirectAttestationCertificate"];
    id v147 = isNSData(v146);

    char v31 = v132;
    if (v147) {
      id v219 = [v234 objectForKeyedSubscript:@"ClientDirectAttestationCertificate"];
    }
    else {
      id v219 = 0;
    }
  }
  else
  {
    id v224 = 0;
    CFDataRef v226 = 0;
    id v219 = 0;
    char v31 = v132;
  }
  id v149 = [v234 objectForKeyedSubscript:@"AppID"];
  id v150 = isNSString(v149);

  if (v150) {
    id v210 = [v234 objectForKeyedSubscript:@"AppID"];
  }
  else {
    id v210 = 0;
  }
  int v25 = v141;
  id v151 = [v234 objectForKeyedSubscript:@"LiveImage4Manifest"];
  id v152 = isNSData(v151);

  if (v152) {
    id v209 = [v234 objectForKeyedSubscript:@"LiveImage4Manifest"];
  }
  else {
    id v209 = 0;
  }
  id v153 = [v234 objectForKeyedSubscript:@"RepairImage4Manifest"];
  id v154 = isNSData(v153);

  if (v154) {
    id v208 = [v234 objectForKeyedSubscript:@"RepairImage4Manifest"];
  }
  else {
    id v208 = 0;
  }
  v220 = v64;
  id v4 = v221;
  unint64_t v28 = v222;
  id v27 = v224;
  unsigned int v26 = v232;
  unsigned int v30 = v218;
LABEL_24:
  unsigned int v229 = v26;
  id v221 = v4;
  id v222 = v28;
  v206 = v29;
  if (is_virtual_machine())
  {
    unsigned int v216 = v30;
    char v32 = v31;
    unsigned int v33 = v20;
    id v247 = 0;
    id v34 = vm_copy_host_certificate(0, &v247);
    id v35 = v247;
    id v225 = v34;
    if (!v34)
    {
      id v223 = v27;
      id v230 = createMobileActivationError((uint64_t)"create_baa_info", 440, @"com.apple.MobileActivation.ErrorDomain", -1, v35, @"Failed to copy VM host certificate.");

      id v201 = 0;
      BOOL v38 = 0;
      id v225 = 0;
      id v213 = 0;
      id v39 = 0;
      id v40 = 0;
      id v41 = 0;
      id v42 = 0;
      id v29 = 0;
      CFDataRef v205 = 0;
      goto LABEL_73;
    }
    unsigned int v36 = key;
    unsigned int v20 = v33;
    char v31 = v32;
    unsigned int v30 = v216;
  }
  else
  {
    id v225 = 0;
    id v35 = 0;
    unsigned int v36 = key;
  }
  id v39 = v36;
  if (!v36)
  {
    id v223 = v27;
    id v230 = createMobileActivationError((uint64_t)"create_baa_info", 472, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");

    id v201 = 0;
    BOOL v38 = 0;
    id v213 = 0;
LABEL_46:
    id v40 = 0;
    id v41 = 0;
    id v42 = 0;
    id v29 = 0;
    CFDataRef v205 = 0;
    id v34 = 0;
LABEL_73:
    id v43 = 0;
LABEL_74:
    CFDataRef v193 = 0;
    SecKeyRef keya = 0;
    id v204 = 0;
    id v217 = 0;
    id v44 = 0;
    id v15 = 0;
    id v197 = 0;
    id v200 = 0;
    goto LABEL_119;
  }
  int v202 = v25;
  if (v27) {
    unsigned int v45 = 0;
  }
  else {
    unsigned int v45 = v30;
  }
  if (v45 != 1)
  {
    long long v188 = 0;
    v189 = 0;
    long long v190 = 0;
LABEL_54:
    id v223 = v27;
    id v243 = v35;
    id v244 = 0;
    id v29 = security_copy_system_key(0, (const __CFData **)&v244, &v243);
    id v43 = v244;
    id v61 = v243;

    if (v29)
    {
      unsigned int v199 = v20;
      keyb = v39;
      if ([(NSNumber *)v227 BOOLValue])
      {
        CFTypeRef cf = v29;
        id v34 = 0;
        id v44 = 0;
        goto LABEL_89;
      }
      id v241 = v61;
      id v242 = 0;
      id v44 = security_copy_system_key(2, (const __CFData **)&v242, &v241);
      id v34 = v242;
      id v77 = v241;

      if (v44)
      {
        CFTypeRef cf = v29;
        id v61 = v77;
LABEL_89:
        id v187 = objc_alloc_init((Class)NSMutableDictionary);
        if (!v187)
        {
          id v230 = createMobileActivationError((uint64_t)"create_baa_info", 541, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");

          id v197 = 0;
          id v200 = 0;
          v192 = 0;
          CFDataRef v193 = 0;
          id v217 = 0;
          SecKeyRef keya = 0;
          id v204 = 0;
          CFDataRef v205 = 0;
          id v29 = 0;
          id v42 = 0;
          id v191 = 0;
          id v40 = 0;
          id v39 = 0;
          id v213 = 0;
          uint64_t v84 = 0;
          id v201 = 0;
          id v15 = 0;
          goto LABEL_209;
        }
        id v184 = v43;
        char v185 = v44;
        if ([(NSNumber *)v227 BOOLValue]
          || (char v78 = +[NSFileManager defaultManager],
              id v79 = copy_ucrt_path(),
              id v80 = [v79 stringByAppendingPathComponent:@"ucrt.pem"],
              unsigned __int8 v81 = [(NSFileManager *)v78 fileExistsAtPath:v80],
              v80,
              v79,
              v78,
              (v81 & 1) != 0))
        {
          id v82 = +[GestaltHlpr getSharedInstance];
          id v83 = (__SecKey *)[v82 copyAnswer:@"UniqueChipID"];

          char v183 = v83;
          uint64_t v84 = (__SecKey *)isNSNumber(v83);

          if (v84)
          {
            id v85 = v61;
            id v86 = +[GestaltHlpr getSharedInstance];
            id v87 = [v86 copyAnswer:@"ChipID"];

            id v182 = v87;
            uint64_t v84 = (__SecKey *)isNSNumber(v87);

            if (v84)
            {
              id v88 = +[GestaltHlpr getSharedInstance];
              id v89 = [v88 copyAnswer:@"BoardId"];

              id v191 = v89;
              uint64_t v84 = (__SecKey *)isNSNumber(v89);

              if (v84)
              {
                id v90 = +[GestaltHlpr getSharedInstance];
                id v91 = [v90 copyAnswer:@"SecurityDomain"];

                id v181 = v91;
                uint64_t v84 = (__SecKey *)isNSNumber(v91);

                if (v84)
                {
                  id v92 = +[GestaltHlpr getSharedInstance];
                  uint64_t v93 = (__SecKey *)[v92 copyAnswer:@"SerialNumber"];

                  unsigned __int8 v180 = v93;
                  uint64_t v84 = (__SecKey *)isNSString(v93);

                  if (!v84)
                  {
                    id v230 = createMobileActivationError((uint64_t)"create_baa_info", 580, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve %@.", @"SerialNumber");

                    id v197 = 0;
                    id v200 = 0;
                    v192 = 0;
                    CFDataRef v193 = 0;
                    id v217 = 0;
                    SecKeyRef keya = 0;
                    id v204 = 0;
                    CFDataRef v205 = 0;
                    id v213 = 0;
                    goto LABEL_204;
                  }
                  id v94 = +[GestaltHlpr getSharedInstance];
                  id v95 = [v94 copyAnswer:@"BuildVersion"];

                  id v213 = v95;
                  id v96 = isNSString(v95);

                  if (!v96)
                  {
                    id v230 = createMobileActivationError((uint64_t)"create_baa_info", 586, @"com.apple.MobileActivation.ErrorDomain", -1, v85, @"Failed to retrieve %@.", @"BuildVersion");

                    id v197 = 0;
                    id v200 = 0;
                    v192 = 0;
                    CFDataRef v193 = 0;
                    id v217 = 0;
                    SecKeyRef keya = 0;
                    id v204 = 0;
                    CFDataRef v205 = 0;
                    uint64_t v84 = 0;
                    goto LABEL_204;
                  }
                  id v97 = SecKeyCopyPublicKey(keyb);
                  uint64_t v84 = v97;
                  if (!v97)
                  {
                    id v230 = createMobileActivationError((uint64_t)"create_baa_info", 595, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy RK public key.");

                    id v197 = 0;
                    id v200 = 0;
                    v192 = 0;
                    CFDataRef v193 = 0;
                    id v217 = 0;
                    SecKeyRef keya = 0;
                    id v204 = 0;
                    CFDataRef v205 = 0;
                    goto LABEL_204;
                  }
                  CFDataRef v98 = SecKeyCopyExternalRepresentation(v97, &error);
                  id v44 = v185;
                  if (v98)
                  {
                    CFDataRef v99 = v98;
                    if (v219)
                    {
                      CFDataRef v240 = v85;
                      id v100 = &v240;
                      id v101 = &v240;
                      uint64_t v102 = (uint64_t)keyb;
                      uint64_t v103 = 7;
                    }
                    else
                    {
                      if ([(NSNumber *)v227 BOOLValue]) {
                        uint64_t v103 = 0;
                      }
                      else {
                        uint64_t v103 = 2;
                      }
                      CFDataRef v239 = v85;
                      id v100 = &v239;
                      id v101 = &v239;
                      uint64_t v102 = (uint64_t)keyb;
                    }
                    id v155 = security_create_system_key_attestation(v102, v103, v222, v101);
                    id v198 = *v100;

                    CFDataRef v205 = v99;
                    if (v155)
                    {
                      CFStringRef v156 = @"RKCertification";
                      id v204 = v155;
                      if (v223)
                      {
                        [v187 setObject:v223 forKeyedSubscript:@"RKCertification"];
                        [v187 setObject:v155 forKeyedSubscript:@"RKSigning"];
                        CFStringRef v156 = @"RKSigningPub";
                        id v157 = v187;
                        CFDataRef v158 = v99;
                      }
                      else
                      {
                        id v157 = v187;
                        CFDataRef v158 = (CFDataRef)v155;
                      }
                      [v157 setObject:v158 forKeyedSubscript:v156];
                      id v159 = objc_alloc((Class)NSMutableDictionary);
                      v253[0] = @"UniqueChipID";
                      v253[1] = @"ChipID";
                      id v29 = v83;
                      v254[0] = v83;
                      v254[1] = v87;
                      v253[2] = @"BoardId";
                      v253[3] = @"SecurityDomain";
                      v254[2] = v191;
                      v254[3] = v181;
                      v253[4] = @"SerialNumber";
                      v253[5] = @"OsBuildVersion";
                      v254[4] = v180;
                      v254[5] = v213;
                      v253[6] = @"scrtAttestation";
                      v253[7] = @"CertType";
                      v254[6] = v227;
                      v254[7] = v220;
                      v253[8] = @"Validity";
                      v253[9] = @"CACert";
                      v254[8] = v215;
                      v254[9] = v214;
                      v253[10] = @"OIDSToInclude";
                      v253[11] = @"SIKPub";
                      v254[10] = v233;
                      id v43 = v184;
                      v254[11] = v184;
                      CFDataRef v160 = +[NSDictionary dictionaryWithObjects:v254 forKeys:v253 count:12];
                      id v161 = [v159 initWithDictionary:v160];

                      if (v223)
                      {
                        [v161 setObject:v226 forKeyedSubscript:@"RKCertificationPub"];
                        [v161 setObject:v99 forKeyedSubscript:@"RKSigningPub"];
                        id v162 = v221;
                        if (v219) {
                          [v161 setObject:v219 forKeyedSubscript:@"DirectAttestationCertificate"];
                        }
                      }
                      else
                      {
                        [v161 setObject:v99 forKeyedSubscript:@"RKCertificationPub"];
                        id v162 = v221;
                      }
                      int v163 = v202;
                      id v164 = v198;
                      if (v225) {
                        [v161 setObject:v225 forKeyedSubscript:@"VMHostIdentityCertificate"];
                      }
                      if (v34) {
                        [v161 setObject:v34 forKeyedSubscript:@"UIKPub"];
                      }
                      if (v162) {
                        [v161 setObject:v162 forKeyedSubscript:@"AppSpecificData"];
                      }
                      id v217 = v161;
                      id v165 = copy_trusted_local_policy_hash();

                      if (v165)
                      {
                        id v238 = v198;
                        id v166 = copyPersonalizedFirmwareData(9, (NSError **)&v238);
                        id v164 = v238;

                        if (!v166)
                        {
                          id v230 = createMobileActivationError((uint64_t)"create_baa_info", 707, @"com.apple.MobileActivation.ErrorDomain", -1, v164, @"Failed to load cryptex1 local policy.");

                          id v197 = 0;
                          id v200 = 0;
                          v192 = 0;
                          CFDataRef v193 = 0;
                          SecKeyRef keya = 0;
                          id v201 = 0;
                          goto LABEL_206;
                        }
                        [v217 setObject:v166 forKeyedSubscript:@"LocalPolicy"];
                        int v163 = v202;
                      }
                      else
                      {
                        id v166 = 0;
                      }
                      id v201 = v166;
                      if (!v163)
                      {
                        id v200 = 0;
                        goto LABEL_238;
                      }
                      id v237 = v164;
                      id v167 = copyPersonalizedFirmwareData(2, (NSError **)&v237);
                      id v168 = v237;
                      id v169 = v164;
                      id v164 = v168;

                      if (v167)
                      {
                        id v200 = v167;
                        [v217 setObject:v167 forKeyedSubscript:@"Image4Manifest"];
                        id v170 = copy_sfr_manifest();
                        [v217 setObject:v170 forKeyedSubscript:@"FWImage4Manifest"];

LABEL_238:
                        if (v165) {
                          unsigned int v171 = v229;
                        }
                        else {
                          unsigned int v171 = 0;
                        }
                        if (v171 != 1)
                        {
                          id v197 = 0;
                          goto LABEL_245;
                        }
                        id v236 = v164;
                        id v172 = copyPersonalizedFirmwareData(10, (NSError **)&v236);
                        id v173 = v236;

                        if (v172)
                        {
                          id v197 = v172;
                          [v217 setObject:v172 forKeyedSubscript:@"Cryptex1Image4Manifest"];
                          id v164 = v173;
LABEL_245:
                          id v15 = v187;
                          if (v210) {
                            [v217 setObject:v210 forKeyedSubscript:@"AppID"];
                          }
                          if (v212) {
                            [v217 setObject:v212 forKeyedSubscript:@"MFiProperties"];
                          }
                          if (v207) {
                            [v217 setObject:v207 forKeyedSubscript:@"MFiPPUID"];
                          }
                          if (v211) {
                            [v217 setObject:v211 forKeyedSubscript:@"MFiData"];
                          }
                          if (v209) {
                            [v217 setObject:v209 forKeyedSubscript:@"LiveImage4Manifest"];
                          }
                          if (v208) {
                            [v217 setObject:v208 forKeyedSubscript:@"RepairImage4Manifest"];
                          }
                          id v235 = 0;
                          NSFileAttributeKey v174 = +[NSPropertyListSerialization dataWithPropertyList:v217 format:100 options:0 error:&v235];
                          id v230 = (NSError *)v235;

                          if (v174)
                          {
                            [v187 setObject:v174 forKeyedSubscript:@"RKProperties"];
                            id v175 = keyb;
                            SecKeyRef keya = (SecKeyRef)v174;
                            CFDataRef v176 = SecKeyCreateSignature(v175, kSecKeyAlgorithmECDSASignatureMessageX962SHA256, (CFDataRef)v174, &error);
                            if (v176)
                            {
                              CFDataRef v193 = v176;
                              [v187 setObject:v176 forKeyedSubscript:@"RKPropertiesSignature"];
                              v192 = (__SecKey *)v187;
                            }
                            else
                            {
                              long long v179 = createMobileActivationError((uint64_t)"create_baa_info", 830, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to sign data with ref key.");

                              v192 = 0;
                              CFDataRef v193 = 0;
                              id v230 = v179;
                            }
                          }
                          else
                          {
                            id v177 = createMobileActivationError((uint64_t)"create_baa_info", 819, @"com.apple.MobileActivation.ErrorDomain", -1, v230, @"Could not convert dictionary to xml data.");

                            v192 = 0;
                            CFDataRef v193 = 0;
                            SecKeyRef keya = 0;
                            id v230 = v177;
                          }
                          goto LABEL_207;
                        }
                        id v230 = createMobileActivationError((uint64_t)"create_baa_info", 780, @"com.apple.MobileActivation.ErrorDomain", -1, v173, @"Failed to load cryptex1 manifest.");

                        SecKeyRef keya = 0;
                        id v197 = 0;
                        v192 = 0;
                        CFDataRef v193 = 0;
LABEL_206:
                        id v15 = v187;
LABEL_207:
                        id v40 = v181;
                        id v42 = v182;
                        id v39 = v180;
                        goto LABEL_208;
                      }
                      if (v199) {
                        id v178 = createMobileActivationError((uint64_t)"create_baa_info", 722, @"com.apple.MobileActivation.ErrorDomain", -1, v164, @"Failed to load boot manifest.");
                      }
                      else {
                        id v178 = createMobileActivationError((uint64_t)"create_baa_info", 742, @"com.apple.MobileActivation.ErrorDomain", -1, v164, @"Failed to load boot manifest.");
                      }
                      id v230 = v178;

                      id v197 = 0;
                      id v200 = 0;
                      v192 = 0;
                      CFDataRef v193 = 0;
                      SecKeyRef keya = 0;
LABEL_205:
                      id v29 = v183;
                      id v43 = v184;
                      goto LABEL_206;
                    }
                    id v230 = createMobileActivationError((uint64_t)"create_baa_info", 614, @"com.apple.MobileActivation.ErrorDomain", -1, v198, @"Failed to create reference key attestation (nonce: %@).", v222);

                    id v197 = 0;
                    id v200 = 0;
                    v192 = 0;
                    CFDataRef v193 = 0;
                    id v217 = 0;
                    SecKeyRef keya = 0;
                    id v204 = 0;
LABEL_204:
                    id v201 = 0;
                    goto LABEL_205;
                  }
                  id v230 = createMobileActivationError((uint64_t)"create_baa_info", 601, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to encode RK public key as data.");

                  id v197 = 0;
                  id v200 = 0;
                  v192 = 0;
                  CFDataRef v193 = 0;
                  id v217 = 0;
                  SecKeyRef keya = 0;
                  id v204 = 0;
                  CFDataRef v205 = 0;
                  id v201 = 0;
                  id v29 = v83;
                  id v43 = v184;
                  id v15 = v187;
                  id v40 = v181;
                  id v42 = v182;
                  id v39 = v180;
LABEL_209:
                  CFRelease(cf);
                  if (v44) {
                    CFRelease(v44);
                  }
                  id v44 = v192;
LABEL_212:
                  if (v188) {
                    CFRelease(v188);
                  }
                  id v148 = v190;
                  if (!v190) {
                    goto LABEL_216;
                  }
                  goto LABEL_215;
                }
                id v230 = createMobileActivationError((uint64_t)"create_baa_info", 574, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve %@.", @"SecurityDomain");

                id v197 = 0;
                id v200 = 0;
                v192 = 0;
                CFDataRef v193 = 0;
                id v217 = 0;
                SecKeyRef keya = 0;
                id v204 = 0;
                CFDataRef v205 = 0;
                id v39 = 0;
                id v213 = 0;
                id v201 = 0;
                id v29 = v83;
                id v43 = v184;
                id v15 = v187;
                id v40 = v91;
                id v42 = v182;
LABEL_208:
                id v44 = v185;
                goto LABEL_209;
              }
              id v230 = createMobileActivationError((uint64_t)"create_baa_info", 568, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve %@.", @"BoardId");

              id v197 = 0;
              id v200 = 0;
              v192 = 0;
              CFDataRef v193 = 0;
              id v217 = 0;
              SecKeyRef keya = 0;
              id v204 = 0;
              CFDataRef v205 = 0;
            }
            else
            {
              id v230 = createMobileActivationError((uint64_t)"create_baa_info", 562, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve %@.", @"ChipID");

              id v197 = 0;
              id v200 = 0;
              v192 = 0;
              CFDataRef v193 = 0;
              id v217 = 0;
              SecKeyRef keya = 0;
              id v204 = 0;
              CFDataRef v205 = 0;
              id v191 = 0;
            }
            id v40 = 0;
            id v39 = 0;
            id v213 = 0;
            id v201 = 0;
            id v29 = v183;
            id v43 = v184;
            id v15 = v187;
            id v42 = v182;
            goto LABEL_208;
          }
          id v230 = createMobileActivationError((uint64_t)"create_baa_info", 556, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve %@.", @"UniqueChipID");

          id v197 = 0;
          id v200 = 0;
          v192 = 0;
          CFDataRef v193 = 0;
          id v217 = 0;
          SecKeyRef keya = 0;
          id v204 = 0;
          CFDataRef v205 = 0;
          id v42 = 0;
          id v191 = 0;
          id v40 = 0;
          id v39 = 0;
          id v213 = 0;
          id v201 = 0;
          id v29 = v183;
          id v43 = v184;
        }
        else
        {
          id v230 = createMobileActivationError((uint64_t)"create_baa_info", 548, @"com.apple.MobileActivation.ErrorDomain", -4, 0, @"UCRT is unavailable.");

          id v197 = 0;
          id v200 = 0;
          v192 = 0;
          CFDataRef v193 = 0;
          id v217 = 0;
          SecKeyRef keya = 0;
          id v204 = 0;
          CFDataRef v205 = 0;
          id v29 = 0;
          id v42 = 0;
          id v191 = 0;
          id v40 = 0;
          id v39 = 0;
          id v213 = 0;
          uint64_t v84 = 0;
          id v201 = 0;
          id v43 = v184;
        }
        id v15 = v187;
        goto LABEL_208;
      }
      id v230 = createMobileActivationError((uint64_t)"create_baa_info", 533, @"com.apple.MobileActivation.ErrorDomain", -1, v77, @"Failed to copy UIK attestation key.");

      CFRelease(v29);
      id v197 = 0;
      id v200 = 0;
      id v15 = 0;
      id v217 = 0;
      CFDataRef v193 = 0;
      SecKeyRef keya = 0;
      id v204 = 0;
      CFDataRef v205 = 0;
      id v29 = 0;
    }
    else
    {
      id v230 = createMobileActivationError((uint64_t)"create_baa_info", 524, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to copy SIK attestation key.");

      id v197 = 0;
      id v200 = 0;
      id v15 = 0;
      id v44 = 0;
      id v217 = 0;
      CFDataRef v193 = 0;
      SecKeyRef keya = 0;
      id v204 = 0;
      CFDataRef v205 = 0;
      id v34 = 0;
    }
    id v42 = 0;
    id v191 = 0;
    id v40 = 0;
    id v39 = 0;
    id v213 = 0;
    uint64_t v84 = 0;
    id v201 = 0;
    goto LABEL_212;
  }
  if ([(NSNumber *)v227 BOOLValue]) {
    uint64_t v46 = 0;
  }
  else {
    uint64_t v46 = 2;
  }
  id v246 = v35;
  id v43 = security_create_system_key_attestation((uint64_t)v39, v46, v28, &v246);
  id v47 = v246;

  id v223 = v43;
  if (!v43)
  {
    id v230 = createMobileActivationError((uint64_t)"create_baa_info", 482, @"com.apple.MobileActivation.ErrorDomain", -1, v47, @"Failed to create reference key attestation.");

    id v201 = 0;
    BOOL v38 = 0;
    id v213 = 0;
    id v39 = 0;
    id v40 = 0;
    id v41 = 0;
    id v42 = 0;
    id v29 = 0;
    CFDataRef v205 = 0;
    id v34 = 0;
LABEL_86:
    id v223 = 0;
    goto LABEL_74;
  }
  id v48 = SecKeyCopyPublicKey(v39);
  if (!v48)
  {
    id v230 = createMobileActivationError((uint64_t)"create_baa_info", 488, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy RK public key.");

    id v201 = 0;
    BOOL v38 = 0;
    id v213 = 0;
    id v39 = 0;
    goto LABEL_46;
  }
  long long v190 = v48;
  CFDataRef v49 = SecKeyCopyExternalRepresentation(v48, &error);

  if (v49)
  {
    uint64_t v50 = SecAccessControlCreate();
    if (v50)
    {
      uint64_t v51 = kSecAttrAccessibleUntilReboot;
      id v52 = (const void *)v50;
      v189 = (const void *)v50;
      if (SecAccessControlSetProtection())
      {
        id v245 = v47;
        id v53 = (__SecKey *)createReferenceKeyBlob(v52, v31, v234, &v245);
        id v35 = v245;

        if (v53)
        {
          CFDataRef v226 = v49;
          id v39 = v53;
          long long v188 = v53;
          id v27 = v223;
          goto LABEL_54;
        }
        id v230 = createMobileActivationError((uint64_t)"create_baa_info", 513, @"com.apple.MobileActivation.ErrorDomain", -1, v35, @"Failed to create reference key.");
        id v47 = v35;
      }
      else
      {
        id v230 = createMobileActivationError((uint64_t)"create_baa_info", 507, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to set ACL protection to %@.", v51);
      }
    }
    else
    {
      id v230 = createMobileActivationError((uint64_t)"create_baa_info", 502, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to create access control.");
      v189 = 0;
    }
    CFDataRef v123 = v49;
  }
  else
  {
    id v230 = createMobileActivationError((uint64_t)"create_baa_info", 494, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to encode RK public key as data.");
    CFDataRef v123 = 0;
    v189 = 0;
  }

  id v197 = 0;
  id v200 = 0;
  id v15 = 0;
  id v44 = 0;
  id v217 = 0;
  CFDataRef v193 = 0;
  SecKeyRef keya = 0;
  id v204 = 0;
  CFDataRef v205 = 0;
  id v43 = 0;
  id v34 = 0;
  id v29 = 0;
  id v42 = 0;
  id v191 = 0;
  id v40 = 0;
  id v39 = 0;
  id v213 = 0;
  uint64_t v84 = 0;
  id v201 = 0;
  CFDataRef v226 = v123;
  id v148 = v190;
LABEL_215:
  CFRelease(v148);
LABEL_216:
  if (v84) {
    CFRelease(v84);
  }
  BOOL v38 = v189;
  id v41 = v191;
LABEL_119:
  if (error)
  {
    id v108 = v39;
    id v109 = v40;
    id v110 = v41;
    id v111 = v42;
    id v112 = v29;
    id v113 = v15;
    id v114 = v34;
    id v115 = v43;
    long long v116 = v38;
    CFRelease(error);
    BOOL v38 = v116;
    id v43 = v115;
    id v34 = v114;
    id v15 = v113;
    id v29 = v112;
    id v42 = v111;
    id v41 = v110;
    id v40 = v109;
    id v39 = v108;
  }
  CFErrorRef error = 0;
  if (v38) {
    CFRelease(v38);
  }
  if (a3 && !v44) {
    *a3 = v230;
  }
  id v117 = v44;

  return v117;
}

id vm_copy_host_certificate(void *a1, void *a2)
{
  id v3 = a1;
  if (is_virtual_machine())
  {
    id v4 = objc_alloc_init((Class)NSMutableDictionary);
    if (v4)
    {
      id v19 = 0;
      id v5 = libavp_copy_strong_identity_data(v3, (NSError **)&v19);
      id v6 = v19;
      if (v5)
      {
        [v4 setObject:@"CopyVMHostCertificateRequest" forKeyedSubscript:@"Command"];
        [v4 setObject:v5 forKeyedSubscript:@"Value"];
        id v18 = v6;
        id v7 = libavp_send_host_message(v4, &v18);
        id v8 = (NSError *)v18;

        id v9 = isNSDictionary(v7);
        if (v9)
        {
          id v9 = [v7 objectForKeyedSubscript:@"Error"];
          id v10 = isNSString(v9);

          if (!v10)
          {
            id v13 = [v7 objectForKeyedSubscript:@"Value"];
            id v14 = isNSDictionary(v13);

            if (v14)
            {
              id v14 = [v13 objectForKeyedSubscript:@"RKCertification"];
              id v12 = isNSData(v14);

              if (v12)
              {
                id v12 = v14;
                id v14 = v12;
                goto LABEL_11;
              }
              id v17 = createMobileActivationError((uint64_t)"vm_copy_host_certificate", 71, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid response message.");
            }
            else
            {
              id v17 = createMobileActivationError((uint64_t)"vm_copy_host_certificate", 65, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid response message.");

              id v12 = 0;
            }
            goto LABEL_17;
          }
          MobileActivationError = createMobileActivationError((uint64_t)"vm_copy_host_certificate", 59, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Error occurred during request: %@", v9);
        }
        else
        {
          MobileActivationError = createMobileActivationError((uint64_t)"vm_copy_host_certificate", 53, @"com.apple.MobileActivation.ErrorDomain", -1, v8, @"Failed to receive response.");
        }
        id v17 = MobileActivationError;

        id v12 = 0;
        id v13 = 0;
        id v14 = 0;
LABEL_17:
        id v8 = v17;
        goto LABEL_11;
      }
      id v8 = createMobileActivationError((uint64_t)"vm_copy_host_certificate", 44, @"com.apple.MobileActivation.ErrorDomain", -1, v6, @"Failed to copy AVP identity data.");

      id v12 = 0;
    }
    else
    {
      id v8 = createMobileActivationError((uint64_t)"vm_copy_host_certificate", 38, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create dictionary.");
      id v12 = 0;
      id v5 = 0;
    }
  }
  else
  {
    id v8 = createMobileActivationError((uint64_t)"vm_copy_host_certificate", 32, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"Device is not a VM (not supported).");
    id v12 = 0;
    id v5 = 0;
    id v4 = 0;
  }
  id v7 = 0;
  id v13 = 0;
  id v14 = 0;
  id v9 = 0;
LABEL_11:
  if (a2 && !v12) {
    *a2 = v8;
  }
  id v15 = v12;

  return v15;
}

id vm_create_host_key_signature(void *a1, void *a2, void *a3, void *a4)
{
  id v6 = a1;
  id v7 = a2;
  id v25 = v7;
  id v26 = v6;
  if (!is_virtual_machine())
  {
    id v14 = createMobileActivationError((uint64_t)"vm_create_host_key_signature", 101, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"Device is not a VM (not supported).");
    id v18 = 0;
    id v11 = 0;
    id v9 = 0;
LABEL_13:
    id v10 = 0;
LABEL_14:
    id v13 = 0;
    id v19 = 0;
    id v15 = 0;
    id v20 = 0;
    id v16 = 0;
    goto LABEL_15;
  }
  id v8 = objc_alloc_init((Class)NSMutableDictionary);
  id v9 = v8;
  if (!v8)
  {
    id v14 = createMobileActivationError((uint64_t)"vm_create_host_key_signature", 107, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create dictionary.");
    id v18 = 0;
    id v11 = 0;
    goto LABEL_13;
  }
  if (v7) {
    [v8 addEntriesFromDictionary:v7];
  }
  id v10 = objc_alloc_init((Class)NSMutableDictionary);
  if (!v10)
  {
    id v14 = createMobileActivationError((uint64_t)"vm_create_host_key_signature", 117, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create dictionary.");
    id v18 = 0;
    id v11 = 0;
    goto LABEL_14;
  }
  id v29 = 0;
  id v11 = libavp_copy_strong_identity_data(v7, (NSError **)&v29);
  id v12 = v29;
  if (!v11)
  {
    id v14 = createMobileActivationError((uint64_t)"vm_create_host_key_signature", 123, @"com.apple.MobileActivation.ErrorDomain", -1, v12, @"Failed to copy AVP identity data.");

    id v18 = 0;
    goto LABEL_14;
  }
  [v9 setObject:v11 forKeyedSubscript:@"BIKData"];
  [v10 setObject:@"CreateVMHostKeyAttestationRequest" forKeyedSubscript:@"Command"];
  [v10 setObject:v6 forKeyedSubscript:@"Value"];
  [v10 setObject:v9 forKeyedSubscript:@"Options"];
  id v28 = v12;
  id v13 = libavp_send_host_message(v10, &v28);
  id v14 = (NSError *)v28;

  id v15 = isNSDictionary(v13);
  if (!v15)
  {
    id v23 = createMobileActivationError((uint64_t)"vm_create_host_key_signature", 136, @"com.apple.MobileActivation.ErrorDomain", -1, v14, @"Failed to receive response.");

    id v18 = 0;
    id v19 = 0;
    id v20 = 0;
    id v16 = 0;
    goto LABEL_22;
  }
  id v16 = [v13 objectForKeyedSubscript:@"Error"];
  id v17 = isNSString(v16);

  if (v17)
  {
    id v23 = createMobileActivationError((uint64_t)"vm_create_host_key_signature", 142, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Error occurred during request: %@", v16);

    id v18 = 0;
    id v19 = 0;
    id v15 = 0;
LABEL_10:
    id v20 = 0;
LABEL_22:
    id v14 = v23;
    goto LABEL_15;
  }
  id v24 = a3;
  id v19 = [v13 objectForKeyedSubscript:@"Value"];
  id v15 = isNSDictionary(v19);

  if (!v15)
  {
    id v23 = createMobileActivationError((uint64_t)"vm_create_host_key_signature", 148, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid response message.");

    id v18 = 0;
    goto LABEL_10;
  }
  id v15 = [v19 objectForKeyedSubscript:@"RKCertification"];
  id v20 = isNSData(v15);

  if (!v20)
  {
    id v23 = createMobileActivationError((uint64_t)"vm_create_host_key_signature", 154, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid response message.");

    id v18 = 0;
    goto LABEL_22;
  }
  id v20 = [v19 objectForKeyedSubscript:@"RKSignature"];
  id v18 = isNSData(v20);

  if (!v18)
  {
    id v23 = createMobileActivationError((uint64_t)"vm_create_host_key_signature", 160, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid response message.");

    goto LABEL_22;
  }
  if (v24) {
    void *v24 = v15;
  }
  id v18 = v20;
  id v20 = v18;
LABEL_15:
  if (a4 && !v18) {
    *a4 = v14;
  }
  id v21 = v18;

  return v21;
}

void sub_100049F44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10004A5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__7(uint64_t a1)
{
}

void sub_10004AAA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_10004AE40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_10004B1E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

id copyPersonalizedFirmwareData(uint64_t a1, NSError **a2)
{
  if (getMSUDataAccessorClass())
  {
    id v4 = [getMSUDataAccessorClass() sharedDataAccessor];
    id v13 = 0;
    id v5 = [v4 copyPathForPersonalizedData:a1 error:&v13];
    id v6 = v13;

    if (v5)
    {
      id v12 = v6;
      id v7 = [objc_alloc((Class)NSData) initWithContentsOfFile:v5 options:0 error:&v12];
      id v8 = (NSError *)v12;

      if (v7)
      {
        id v9 = v7;
        goto LABEL_11;
      }
      id v10 = createMobileActivationError((uint64_t)"copyPersonalizedFirmwareData", 41, @"com.apple.MobileActivation.ErrorDomain", -1, v8, @"Failed to load firmware data from %@.", v5);

      id v8 = v10;
      if (!a2) {
        goto LABEL_10;
      }
LABEL_8:
      id v8 = v8;
      id v9 = 0;
      *a2 = v8;
      goto LABEL_11;
    }
    id v8 = createMobileActivationError((uint64_t)"copyPersonalizedFirmwareData", 35, @"com.apple.MobileActivation.ErrorDomain", -1, v6, @"Failed to retrieve path for firmware data type %d.", a1);

    if (a2) {
      goto LABEL_8;
    }
  }
  else
  {
    id v8 = createMobileActivationError((uint64_t)"copyPersonalizedFirmwareData", 29, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"MSUDataAccessor is not supported on this platform.");
    id v5 = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
LABEL_10:
  id v9 = 0;
LABEL_11:

  return v9;
}

id getMSUDataAccessorClass()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  id v0 = (void *)getMSUDataAccessorClass_softClass;
  uint64_t v7 = getMSUDataAccessorClass_softClass;
  if (!getMSUDataAccessorClass_softClass)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3254779904;
    v3[2] = __getMSUDataAccessorClass_block_invoke;
    v3[3] = &__block_descriptor_40_e8_32r_e5_v8__0l;
    v3[4] = &v4;
    __getMSUDataAccessorClass_block_invoke((uint64_t)v3);
    id v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_10004C570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getMSUDataAccessorClass_block_invoke(uint64_t a1)
{
  if (!MSUDataAccessorLibraryCore_frameworkLibrary) {
    MSUDataAccessorLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  Class result = objc_getClass("MSUDataAccessor");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getMSUDataAccessorClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __MSUDataAccessorLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  MSUDataAccessorLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t createActivationRequest(void *a1, void *a2, int a3, NSError **a4)
{
  id v7 = a1;
  if (!v7)
  {
    id v9 = createMobileActivationError((uint64_t)"createActivationRequest", 36, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    id v8 = 0;
    id v10 = 0;
    id v16 = 0;
    id v17 = 0;
    id v11 = 0;
    if (a4)
    {
LABEL_18:
      id v9 = v9;
      uint64_t v23 = 0;
      id v19 = 0;
      *a4 = v9;
      goto LABEL_19;
    }
LABEL_13:
    uint64_t v23 = 0;
    id v19 = 0;
    goto LABEL_19;
  }
  id v27 = 0;
  id v8 = +[NSPropertyListSerialization dataWithPropertyList:v7 format:100 options:0 error:&v27];
  id v9 = (NSError *)v27;
  if (!v8)
  {
    id v24 = createMobileActivationError((uint64_t)"createActivationRequest", 45, @"com.apple.MobileActivation.ErrorDomain", -1, v9, @"Failed to convert dictionary to data.");

    id v10 = 0;
LABEL_16:
    id v16 = 0;
    id v17 = 0;
    id v11 = 0;
    goto LABEL_17;
  }
  id v10 = [objc_alloc((Class)NSString) initWithData:v8 encoding:4];
  if (!v10)
  {
    id v24 = createMobileActivationError((uint64_t)"createActivationRequest", 51, @"com.apple.MobileActivation.ErrorDomain", -1, v9, @"Failed to convert data to string.");

    goto LABEL_16;
  }
  id v11 = +[NSMutableCharacterSet alphanumericCharacterSet];
  [(NSMutableCharacterSet *)v11 addCharactersInString:@"*-._"];
  [(NSMutableCharacterSet *)v11 addCharactersInString:@" "];
  id v12 = [v10 stringByAddingPercentEncodingWithAllowedCharacters:v11];

  id v10 = [v12 stringByReplacingOccurrencesOfString:@" " withString:@"+"];
  id v13 = objc_alloc((Class)NSString);
  CFStringRef v14 = @"activation-info";
  if (a3) {
    CFStringRef v14 = @"certify-me-info";
  }
  id v15 = [v13 initWithFormat:@"%@=%@", v14, v10];
  id v16 = v15;
  if (!v15)
  {
    id v24 = createMobileActivationError((uint64_t)"createActivationRequest", 64, @"com.apple.MobileActivation.ErrorDomain", -1, v9, @"Failed to convert dictionary to URL encoding.");

    id v17 = 0;
    goto LABEL_17;
  }
  id v17 = [v15 dataUsingEncoding:4 allowLossyConversion:0];
  if (!v17)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"createActivationRequest", 70, @"com.apple.MobileActivation.ErrorDomain", -1, v9, @"Failed to convert string to data.");
LABEL_23:
    id v24 = MobileActivationError;

LABEL_17:
    id v9 = v24;
    if (a4) {
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  id v18 = objc_alloc_init((Class)NSMutableURLRequest);
  if (!v18)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"createActivationRequest", 76, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate request.");
    goto LABEL_23;
  }
  id v19 = v18;
  [v18 setCachePolicy:0];
  [v19 setTimeoutInterval:60.0];
  [v19 setHTTPMethod:@"POST"];
  id v20 = +[NSString stringWithFormat:@"application/x-www-form-urlencoded"];
  [v19 setValue:v20 forHTTPHeaderField:@"Content-Type"];

  id v21 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%lu", [v17 length]);
  [v19 setValue:v21 forHTTPHeaderField:@"Content-Length"];

  [v19 setHTTPBody:v17];
  [v19 setValue:@"iOS Device Activator (MobileActivation-1015.60.1)" forHTTPHeaderField:@"User-Agent"];
  unsigned int v22 = +[NSURL URLWithString:@"https://albert.apple.com/deviceservices/deviceActivation"];
  [v19 setURL:v22];

  if (a2)
  {
    id v19 = v19;
    *a2 = v19;
  }
  uint64_t v23 = 1;
LABEL_19:

  return v23;
}

id getSessionActivationRecordFromData(void *a1, void *a2)
{
  id v3 = a1;
  if (v3)
  {
    id v11 = 0;
    id v4 = +[NSPropertyListSerialization propertyListWithData:v3 options:0 format:0 error:&v11];
    id v5 = (NSError *)v11;
    id v6 = isNSDictionary(v4);

    if (v6)
    {
      id v6 = [v4 objectForKeyedSubscript:@"ActivationRecord"];
      id v7 = isNSDictionary(v6);

      if (v7)
      {
        id v7 = v6;
        id v6 = v7;
        if (!a2) {
          goto LABEL_13;
        }
      }
      else
      {
        id v8 = createMobileActivationError((uint64_t)"getSessionActivationRecordFromData", 124, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Input data is missing activation record.");

        id v5 = v8;
        if (!a2) {
          goto LABEL_13;
        }
      }
    }
    else
    {
      id v7 = 0;
      if (!a2) {
        goto LABEL_13;
      }
    }
  }
  else
  {
    id v5 = createMobileActivationError((uint64_t)"getSessionActivationRecordFromData", 113, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    id v7 = 0;
    id v4 = 0;
    id v6 = 0;
    if (!a2) {
      goto LABEL_13;
    }
  }
  if (!v7) {
    *a2 = v5;
  }
LABEL_13:
  id v9 = v7;

  return v9;
}

id getActivationRecordFromData(uint64_t a1, void *a2)
{
  id v22 = 0;
  id v3 = +[NSPropertyListSerialization propertyListWithData:a1 options:0 format:0 error:&v22];
  id v4 = (NSError *)v22;
  id v5 = isNSDictionary(v3);

  if (v5)
  {
    id v6 = [v3 objectForKeyedSubscript:@"AccountToken"];
    if (v6)
    {
      id v7 = v6;
      id v8 = [v3 objectForKeyedSubscript:@"AccountTokenSignature"];
      if (v8)
      {
        id v9 = v8;
        id v10 = [v3 objectForKeyedSubscript:@"DeviceCertificate"];

        if (v10)
        {
          id v11 = v3;
          id v5 = 0;
          if (!a2) {
            goto LABEL_22;
          }
          goto LABEL_20;
        }
      }
      else
      {
      }
    }
    CFStringRef v12 = @"device-activation";
    id v13 = [v3 objectForKeyedSubscript:@"device-activation"];

    if (v13
      || (CFStringRef v12 = @"iphone-activation",
          id v14 = [v3 objectForKeyedSubscript:@"iphone-activation"],
          v14,
          v14))
    {
      id v5 = [v3 objectForKeyedSubscript:v12];
    }
    else
    {
      id v5 = 0;
    }
    id v15 = isNSDictionary(v5);

    if (v15)
    {
      id v16 = [v5 objectForKeyedSubscript:@"activation-record"];

      id v17 = isNSDictionary(v16);
      if (v17)
      {
        id v11 = v16;
        id v5 = v11;
        if (!a2) {
          goto LABEL_22;
        }
      }
      else
      {
        id v19 = createMobileActivationError((uint64_t)"getActivationRecordFromData", 173, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Input data is missing activation record.");

        id v11 = 0;
        id v4 = v19;
        id v5 = v16;
        if (!a2) {
          goto LABEL_22;
        }
      }
    }
    else
    {
      id v18 = createMobileActivationError((uint64_t)"getActivationRecordFromData", 167, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Input data is missing activation ticket.");

      id v11 = 0;
      id v4 = v18;
      if (!a2) {
        goto LABEL_22;
      }
    }
  }
  else
  {
    id v11 = 0;
    if (!a2) {
      goto LABEL_22;
    }
  }
LABEL_20:
  if (!v11) {
    *a2 = v4;
  }
LABEL_22:
  id v20 = v11;

  return v20;
}

NSDictionary *getRecertInfoFromData(void *a1, void *a2)
{
  id v3 = a1;
  if (!v3)
  {
    id v5 = createMobileActivationError((uint64_t)"getRecertInfoFromData", 197, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    id v6 = 0;
    id v7 = 0;
    id v4 = 0;
    if (!a2) {
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  id v10 = 0;
  id v4 = +[NSPropertyListSerialization propertyListWithData:v3 options:0 format:0 error:&v10];
  id v5 = (NSError *)v10;
  id v6 = isNSDictionary(v4);

  if (v6)
  {
    id v6 = [v4 objectForKeyedSubscript:@"certify-me-info"];
    id v7 = (NSDictionary *)isNSDictionary(v6);

    if (v7)
    {
      CFStringRef v11 = @"certify-me";
      id v12 = v6;
      id v7 = +[NSDictionary dictionaryWithObjects:&v12 forKeys:&v11 count:1];
      if (!a2) {
        goto LABEL_13;
      }
      goto LABEL_11;
    }
    id v8 = createMobileActivationError((uint64_t)"getRecertInfoFromData", 209, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"XML data is missing certify-me-info.");
  }
  else
  {
    id v8 = createMobileActivationError((uint64_t)"getRecertInfoFromData", 203, @"com.apple.MobileActivation.ErrorDomain", -1, v5, @"Failed to create dictionary from data.");

    id v7 = 0;
  }
  id v5 = v8;
  if (!a2) {
    goto LABEL_13;
  }
LABEL_11:
  if (!v7) {
    *a2 = v5;
  }
LABEL_13:

  return v7;
}

NSError *createMobileActivationError(uint64_t a1, uint64_t a2, id a3, uint64_t a4, void *a5, void *a6, ...)
{
  va_start(va, a6);
  id v11 = a3;
  id v12 = a5;
  id v13 = a6;
  id v14 = [objc_alloc((Class)NSMutableString) initWithFormat:v13 arguments:va];

  id v15 = objc_alloc_init((Class)NSMutableDictionary);
  id v16 = v15;
  if (v14) {
    [v15 setObject:v14 forKeyedSubscript:NSLocalizedDescriptionKey];
  }
  if (v12) {
    [v16 setObject:v12 forKeyedSubscript:NSUnderlyingErrorKey];
  }
  if (os_variant_allows_internal_security_policies())
  {
    if (a1)
    {
      id v17 = +[NSString stringWithUTF8String:a1];
      [v16 setObject:v17 forKeyedSubscript:@"FunctionName"];
    }
    if (a2)
    {
      id v18 = +[NSNumber numberWithUnsignedInt:a2];
      [v16 setObject:v18 forKeyedSubscript:@"SourceLine"];
    }
  }
  id v19 = +[NSError errorWithDomain:v11 code:a4 userInfo:v16];

  return v19;
}

uint64_t security_delete_legacy_uik(void *a1)
{
  uint64_t v15 = 1;
  [@"systemgroup.com.apple.mobileactivationd" UTF8String];
  BOOL v2 = (void *)container_system_group_path_for_identifier();
  if (!v2)
  {
    id v9 = createMobileActivationError((uint64_t)"security_delete_legacy_uik", 105, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query group container path: %d", v15);
    id v4 = 0;
    if (!a1) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  id v3 = +[NSString stringWithUTF8String:v2];
  id v4 = [(NSString *)v3 stringByAppendingPathComponent:@"Library/uik/uik.pem"];

  id v5 = +[NSFileManager defaultManager];
  unsigned int v6 = [(NSFileManager *)v5 fileExistsAtPath:v4];

  if (v6)
  {
    id v7 = +[NSFileManager defaultManager];
    id v14 = 0;
    unsigned __int8 v8 = [(NSFileManager *)v7 removeItemAtPath:v4 error:&v14];
    id v9 = (NSError *)v14;

    if ((v8 & 1) == 0)
    {
      id v10 = createMobileActivationError((uint64_t)"security_delete_legacy_uik", 113, @"com.apple.MobileActivation.ErrorDomain", -1, v9, @"Failed to delete %@.", v4);

      id v9 = v10;
      if (!a1)
      {
LABEL_8:
        uint64_t v11 = 0;
        uint64_t v12 = 0;
        if (!v2) {
          goto LABEL_13;
        }
        goto LABEL_12;
      }
LABEL_7:
      *a1 = v9;
      goto LABEL_8;
    }
  }
  else
  {
    id v9 = 0;
  }
  uint64_t v11 = 1;
LABEL_12:
  free(v2);
  uint64_t v12 = v11;
LABEL_13:

  return v12;
}

BOOL security_committed_uik_is_legacy(void *a1)
{
  [@"systemgroup.com.apple.mobileactivationd" UTF8String];
  BOOL v2 = (void *)container_system_group_path_for_identifier();
  if (v2)
  {
    id v3 = +[NSString stringWithUTF8String:v2];
    id v4 = [(NSString *)v3 stringByAppendingPathComponent:@"Library/uik/uik.pem"];

    id v5 = +[NSFileManager defaultManager];
    BOOL v6 = [(NSFileManager *)v5 fileExistsAtPath:v4];

    id v7 = 0;
    if (!a1) {
      goto LABEL_7;
    }
  }
  else
  {
    id v7 = createMobileActivationError((uint64_t)"security_committed_uik_is_legacy", 142, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query group container path: %d", 1);
    BOOL v6 = 0;
    if (!a1) {
      goto LABEL_7;
    }
  }
  if (!v6) {
    *a1 = v7;
  }
LABEL_7:
  if (v2) {
    free(v2);
  }

  return v6;
}

__SecKey *security_copy_system_key(uint64_t a1, const __CFData **a2, void *a3)
{
  BOOL v6 = 0;
  CFErrorRef v38 = 0;
  if (a1 != 2) {
    goto LABEL_12;
  }
  id v37 = 0;
  BOOL is_legacy = security_committed_uik_is_legacy(&v37);
  unsigned __int8 v8 = (NSError *)v37;
  BOOL v6 = v8;
  if (!is_legacy && v8)
  {
    id v9 = createMobileActivationError((uint64_t)"security_copy_system_key", 180, @"com.apple.MobileActivation.ErrorDomain", -1, v8, @"Failed to query legacy UIK support.");
    id v10 = 0;
LABEL_19:
    id v24 = 0;
    goto LABEL_23;
  }
  if (!is_legacy)
  {
LABEL_12:
    id v10 = (__SecKey *)SecKeyCopySystemKey();
    if (!v10)
    {
      id v9 = createMobileActivationError((uint64_t)"security_copy_system_key", 195, @"com.apple.MobileActivation.ErrorDomain", -1, v38, @"Failed to copy system key (%d).", a1);
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  uint64_t v40 = 1;
  CFErrorRef error = 0;
  [@"systemgroup.com.apple.mobileactivationd" UTF8String];
  uint64_t v11 = (void *)container_system_group_path_for_identifier();
  if (!v11)
  {
    id v18 = createMobileActivationError((uint64_t)"copy_legacy_committed_uik", 44, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query group container path: %d", v40);
    id v20 = 0;
    id v17 = 0;
    id v13 = 0;
LABEL_34:
    SecKeyRef v22 = 0;
    id v10 = 0;
    goto LABEL_40;
  }
  uint64_t v12 = +[NSString stringWithUTF8String:v11];
  id v13 = [(NSString *)v12 stringByAppendingPathComponent:@"Library/uik/uik.pem"];

  id v14 = +[NSFileManager defaultManager];
  unsigned __int8 v15 = [(NSFileManager *)v14 fileExistsAtPath:v13];

  if ((v15 & 1) == 0)
  {
    id v18 = createMobileActivationError((uint64_t)"copy_legacy_committed_uik", 50, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Legacy UIK does not exist.");
    id v20 = 0;
    id v17 = 0;
    goto LABEL_34;
  }
  id v16 = objc_alloc((Class)NSData);
  id v39 = 0;
  id v17 = [v16 initWithContentsOfFile:v13 options:0 error:&v39];
  id v18 = (NSError *)v39;
  if (v17)
  {
    SecAccessControlRef v19 = SecAccessControlCreateWithFlags(0, kSecAttrAccessibleAlwaysThisDeviceOnlyPrivate, 0x40000000uLL, &error);
    if (v19)
    {
      v42[0] = kSecAttrIsPermanent;
      v42[1] = kSecAttrTokenID;
      v43[0] = &__kCFBooleanFalse;
      v43[1] = kSecAttrTokenIDAppleKeyStore;
      v42[2] = kSecAttrTokenOID;
      v42[3] = kSecAttrAccessControl;
      v43[2] = v17;
      v43[3] = v19;
      SecAccessControlRef cf = v19;
      id v20 = +[NSDictionary dictionaryWithObjects:v43 forKeys:v42 count:4];
      SecKeyRef v21 = SecKeyCreateWithData((CFDataRef)+[NSData data], (CFDictionaryRef)v20, &error);
      SecKeyRef v22 = v21;
      if (v21)
      {
        id v10 = (__SecKey *)CFRetain(v21);
      }
      else
      {
        id v34 = createMobileActivationError((uint64_t)"copy_legacy_committed_uik", 74, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to query UIK.");

        id v10 = 0;
        id v18 = v34;
      }
      CFRelease(cf);
      goto LABEL_40;
    }
    MobileActivationError = createMobileActivationError((uint64_t)"copy_legacy_committed_uik", 62, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to create access control.");
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"copy_legacy_committed_uik", 56, @"com.apple.MobileActivation.ErrorDomain", -1, v18, @"Failed to load %@.", v13);
  }
  cfa = MobileActivationError;

  id v20 = 0;
  SecKeyRef v22 = 0;
  id v10 = 0;
  id v18 = cfa;
LABEL_40:
  if (error) {
    CFRelease(error);
  }
  CFErrorRef error = 0;
  if (v22) {
    CFRelease(v22);
  }
  if (v11) {
    free(v11);
  }
  char v32 = v6;
  if (!v10) {
    char v32 = v18;
  }

  unsigned int v33 = v32;
  if (!v10)
  {
    id v9 = createMobileActivationError((uint64_t)"security_copy_system_key", 189, @"com.apple.MobileActivation.ErrorDomain", -1, v33, @"Failed to copy system key (legacy).");
    id v24 = 0;
    BOOL v6 = v33;
    goto LABEL_23;
  }
  BOOL v6 = v33;
LABEL_13:
  uint64_t v23 = SecKeyCopyPublicKey(v10);
  id v24 = v23;
  if (v23)
  {
    CFDataRef v25 = SecKeyCopyExternalRepresentation(v23, &v38);
    if (v25)
    {
      CFDataRef v26 = v25;
      if (a2)
      {
        CFDataRef v26 = v25;
        *a2 = v26;
      }
      id v9 = v6;
      goto LABEL_28;
    }
    id v27 = createMobileActivationError((uint64_t)"security_copy_system_key", 208, @"com.apple.MobileActivation.ErrorDomain", -1, v38, @"Failed to copy public key buffer.");
  }
  else
  {
    id v27 = createMobileActivationError((uint64_t)"security_copy_system_key", 202, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy public key.");
  }
  id v9 = v27;
LABEL_23:

  if (a3) {
    *a3 = v9;
  }
  if (v10) {
    CFRelease(v10);
  }
  CFDataRef v26 = 0;
  id v10 = 0;
  CFDataRef v28 = 0;
  id v29 = 0;
  if (v24)
  {
LABEL_28:
    CFRelease(v24);
    CFDataRef v28 = v26;
    id v29 = v10;
  }
  if (v38) {
    CFRelease(v38);
  }
  CFErrorRef v38 = 0;

  return v29;
}

id security_create_system_key_attestation(uint64_t a1, uint64_t a2, id a3, void *a4)
{
  id v7 = a3;
  CFTypeRef cf = 0;
  if (!a1)
  {
    id v9 = createMobileActivationError((uint64_t)"security_create_system_key_attestation", 242, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid input(s)");
    unsigned __int8 v8 = 0;
    if (!a4)
    {
LABEL_16:
      id v12 = 0;
      id v14 = 0;
      if (!v8) {
        goto LABEL_18;
      }
      goto LABEL_17;
    }
LABEL_15:
    *a4 = v9;
    goto LABEL_16;
  }
  id v16 = 0;
  unsigned __int8 v8 = security_copy_system_key(a2, 0, &v16);
  id v9 = (NSError *)v16;
  if (!v8)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"security_create_system_key_attestation", 248, @"com.apple.MobileActivation.ErrorDomain", -1, v9, @"Failed to copy attestation key.");
    goto LABEL_14;
  }
  if (v7)
  {
    if ((unint64_t)[v7 length] >= 0x21)
    {
      MobileActivationError = createMobileActivationError((uint64_t)"security_create_system_key_attestation", 254, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Nonce is too big (> 32 bytes).");
      goto LABEL_14;
    }
    if (!SecKeySetParameter())
    {
      MobileActivationError = createMobileActivationError((uint64_t)"security_create_system_key_attestation", 259, @"com.apple.MobileActivation.ErrorDomain", -1, (void *)cf, @"Failed to set nonce.");
LABEL_14:
      id v13 = MobileActivationError;

      id v9 = v13;
      if (!a4) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
  }
  Attestation = (void *)SecKeyCreateAttestation();
  if (!Attestation)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"security_create_system_key_attestation", 266, @"com.apple.MobileActivation.ErrorDomain", -11, (void *)cf, @"Failed to create attestation.");
    goto LABEL_14;
  }
  id v12 = Attestation;
LABEL_17:
  CFRelease(v8);
  id v14 = v12;
LABEL_18:
  if (cf) {
    CFRelease(cf);
  }
  CFTypeRef cf = 0;

  return v14;
}

id security_create_attestation(uint64_t a1, uint64_t a2, NSError **a3)
{
  if (a1 && a2)
  {
    Attestation = (void *)SecKeyCreateAttestation();
    if (Attestation)
    {
      id v5 = Attestation;
      BOOL v6 = 0;
      goto LABEL_10;
    }
    MobileActivationError = createMobileActivationError((uint64_t)"security_create_attestation", 299, @"com.apple.MobileActivation.ErrorDomain", -11, 0, @"Failed to create attestation.");
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"security_create_attestation", 293, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid input(s)");
  }
  unsigned __int8 v8 = MobileActivationError;
  BOOL v6 = v8;
  if (a3)
  {
    BOOL v6 = v8;
    id v5 = 0;
    *a3 = v6;
  }
  else
  {
    id v5 = 0;
  }
LABEL_10:

  return v5;
}

id security_create_external_representation(__SecKey *a1, NSError *a2, NSError **a3)
{
  if (!a1)
  {
    a2 = createMobileActivationError((uint64_t)"security_create_external_representation", 328, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    CFDictionaryRef v6 = 0;
    if (a3)
    {
LABEL_11:
      a2 = a2;
      id v11 = 0;
      *a3 = a2;
      goto LABEL_12;
    }
LABEL_7:
    id v11 = 0;
    goto LABEL_12;
  }
  CFDictionaryRef v5 = SecKeyCopyAttributes(a1);
  CFDictionaryRef v6 = v5;
  if (!v5)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"security_create_external_representation", 334, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy RK attributes.");
    goto LABEL_10;
  }
  id v7 = [(__CFDictionary *)v5 objectForKeyedSubscript:kSecAttrTokenOID];
  if (!v7)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"security_create_external_representation", 340, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to encode RK as data.");
LABEL_10:
    a2 = MobileActivationError;
    if (a3) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
  unsigned __int8 v8 = v7;
  uint64_t v9 = kSecUseSystemKeychain;
  id v10 = [(__CFDictionary *)v6 objectForKeyedSubscript:kSecUseSystemKeychain];

  id v11 = v8;
  if (a2)
  {
    uint64_t v15 = v9;
    id v12 = +[NSNumber numberWithBool:v10 != 0];
    id v16 = v12;
    a2->super.isa = (Class)+[NSDictionary dictionaryWithObjects:&v16 forKeys:&v15 count:1];

    a2 = 0;
  }
LABEL_12:

  return v11;
}

uint64_t security_valid_security_enclave_reference_key(__SecKey *a1, int a2, unsigned __int8 *a3, NSError **a4)
{
  CFErrorRef error = 0;
  if (!a1)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"security_valid_security_enclave_reference_key", 394, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid input.");
LABEL_23:
    SecKeyRef v22 = MobileActivationError;
    CFDictionaryRef v23 = 0;
    uint64_t v24 = 0;
    SecKeyRef v47 = 0;
    id v48 = 0;
    Duplicate = 0;
    uint64_t v9 = 0;
    id v49 = 0;
    id v50 = 0;
    goto LABEL_35;
  }
  CFDictionaryRef v7 = SecKeyCopyAttributes(a1);
  if (!v7)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"security_valid_security_enclave_reference_key", 400, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query attributes.");
    goto LABEL_23;
  }
  CFDictionaryRef v8 = v7;
  uint64_t v9 = (id)CFDictionaryGetValue(v7, kSecAttrTokenID);
  id v10 = isNSString(v9);

  if (!v10)
  {
    CFDataRef v25 = createMobileActivationError((uint64_t)"security_valid_security_enclave_reference_key", 406, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query attribute '%@'.", kSecAttrTokenID);
LABEL_27:
    SecKeyRef v22 = v25;
    uint64_t v24 = 0;
    SecKeyRef v47 = 0;
    Duplicate = 0;
    id v49 = 0;
LABEL_32:
    id v50 = 0;
    goto LABEL_33;
  }
  if (([v9 isEqualToString:kSecAttrTokenIDSecureEnclave] & 1) == 0
    && ([v9 isEqualToString:kSecAttrTokenIDAppleKeyStore] & 1) == 0)
  {
    CFDataRef v25 = createMobileActivationError((uint64_t)"security_valid_security_enclave_reference_key", 412, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid key type (actual, expected): (%@, %@)", v9, kSecAttrTokenIDSecureEnclave);
    goto LABEL_27;
  }
  id v11 = (id)CFDictionaryGetValue(v8, kSecAttrKeySizeInBits);
  id v12 = isNSNumber(v11);

  id v49 = v11;
  if (!v12)
  {
    CFDataRef v26 = createMobileActivationError((uint64_t)"security_valid_security_enclave_reference_key", 418, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query attribute '%@'.", kSecAttrKeySizeInBits);
LABEL_31:
    SecKeyRef v22 = v26;
    uint64_t v24 = 0;
    SecKeyRef v47 = 0;
    Duplicate = 0;
    goto LABEL_32;
  }
  if ([v11 unsignedIntValue] != 256
    && [v11 unsignedIntValue] != 384)
  {
    CFDataRef v26 = createMobileActivationError((uint64_t)"security_valid_security_enclave_reference_key", 423, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Unsupported key size: %@", v11);
    goto LABEL_31;
  }
  uint64_t v46 = a3;
  id v13 = (id)CFDictionaryGetValue(v8, kSecAttrKeyType);
  id v14 = isNSString(v13);

  id v50 = v13;
  if (!v14)
  {
    id v27 = createMobileActivationError((uint64_t)"security_valid_security_enclave_reference_key", 429, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query attribute '%@'.", kSecAttrKeyType);
LABEL_29:
    SecKeyRef v22 = v27;
    uint64_t v24 = 0;
    SecKeyRef v47 = 0;
    Duplicate = 0;
LABEL_33:
    id v48 = 0;
LABEL_34:
    CFDictionaryRef v23 = v8;
    goto LABEL_35;
  }
  uint64_t v15 = v13;
  if ((objc_msgSend(v13, "isEqualToString:") & 1) == 0
    && ([v13 isEqualToString:kSecAttrKeyTypeECSECPrimeRandomPKA] & 1) == 0
    && ([v13 isEqualToString:kSecAttrKeyTypeSecureEnclaveAttestation] & 1) == 0
    && ([v13 isEqualToString:kSecAttrKeyTypeSecureEnclaveAnonymousAttestation] & 1) == 0)
  {
    id v27 = createMobileActivationError((uint64_t)"security_valid_security_enclave_reference_key", 441, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Unsupported key type: %@", v13);
    goto LABEL_29;
  }
  if (!a2)
  {
    id v20 = 0;
    SecKeyRef v47 = 0;
    id v48 = 0;
    SecAccessControlRef v19 = 0;
    CFDataRef v18 = 0;
    id v32 = 0;
    SecKeyRef v22 = 0;
    CFDictionaryRef v23 = v8;
LABEL_49:
    if (v46)
    {
      if ([v15 isEqualToString:kSecAttrKeyTypeSecureEnclaveAttestation])
      {
        CFDataRef v28 = v9;
        unsigned __int8 v37 = 1;
      }
      else
      {
        CFErrorRef v38 = v15;
        CFDataRef v28 = v9;
        unsigned __int8 v37 = [v38 isEqualToString:kSecAttrKeyTypeSecureEnclaveAnonymousAttestation];
      }
      CFDictionaryRef v23 = v8;
      *uint64_t v46 = v37;
    }
    else
    {
      CFDataRef v28 = v9;
    }
    uint64_t v31 = 1;
LABEL_38:
    CFRelease(v23);
    uint64_t v33 = v31;
    CFDataRef v34 = v18;
    id v35 = v32;
    goto LABEL_39;
  }
  Duplicate = (__SecKey *)SecKeyCreateDuplicate();
  if (!Duplicate)
  {
    id v39 = createMobileActivationError((uint64_t)"security_valid_security_enclave_reference_key", 448, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create duplicate RK.");
LABEL_58:
    SecKeyRef v22 = v39;
    uint64_t v24 = 0;
LABEL_59:
    SecKeyRef v47 = 0;
    goto LABEL_33;
  }
  if (!SecKeySetParameter())
  {
    id v39 = createMobileActivationError((uint64_t)"security_valid_security_enclave_reference_key", 456, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to set RK parameter.");
    goto LABEL_58;
  }
  if (([v15 isEqualToString:kSecAttrKeyTypeECSECPrimeRandom] & 1) != 0
    || [v15 isEqualToString:kSecAttrKeyTypeECSECPrimeRandomPKA])
  {
    CFDataRef v17 = SecKeyCreateSignature(Duplicate, kSecKeyAlgorithmECDSASignatureMessageX962SHA256, (CFDataRef)+[NSData data], &error);
    if (v17)
    {
      CFDataRef v18 = v17;
      SecAccessControlRef v19 = Duplicate;
      id v20 = 0;
      SecKeyRef v47 = 0;
LABEL_69:
      id v32 = 0;
      id v48 = 0;
      SecKeyRef v22 = 0;
      goto LABEL_70;
    }
    if (!mobileactivationErrorHasDomainAndErrorCode(error, TKErrorDomain, (id)0xFFFFFFFFFFFFFFFDLL))
    {
      SecAccessControlRef v19 = Duplicate;
      id v20 = 0;
      SecKeyRef v47 = 0;
      CFDataRef v18 = 0;
      goto LABEL_69;
    }
    id v39 = createMobileActivationError((uint64_t)"security_valid_security_enclave_reference_key", 464, @"com.apple.MobileActivation.ErrorDomain", -2, error, @"Failed to create test signature.");
    goto LABEL_58;
  }
  uint64_t v24 = SecAccessControlCreate();
  if (!v24)
  {
    id v44 = createMobileActivationError((uint64_t)"security_valid_security_enclave_reference_key", 470, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to create access control.");
LABEL_73:
    SecKeyRef v22 = v44;
    goto LABEL_59;
  }
  uint64_t v40 = kSecAttrAccessibleUntilReboot;
  if ((SecAccessControlSetProtection() & 1) == 0)
  {
    id v44 = createMobileActivationError((uint64_t)"security_valid_security_enclave_reference_key", 475, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to set ACL protection to %@.", v40);
    goto LABEL_73;
  }
  v53[0] = kSecAttrIsPermanent;
  v53[1] = kSecAttrTokenID;
  v54[0] = &__kCFBooleanFalse;
  v54[1] = kSecAttrTokenIDAppleKeyStore;
  v53[2] = kSecAttrKeyType;
  void v53[3] = kSecAttrAccessControl;
  v54[2] = kSecAttrKeyTypeECSECPrimeRandom;
  void v54[3] = v24;
  v53[4] = kSecAttrKeySizeInBits;
  v54[4] = &off_10027EF90;
  id v41 = +[NSDictionary dictionaryWithObjects:v54 forKeys:v53 count:5];
  SecKeyRef v42 = SecKeyCreateRandomKey((CFDictionaryRef)v41, &error);
  id v48 = v41;
  if (!v42)
  {
    SecKeyRef v22 = createMobileActivationError((uint64_t)"security_valid_security_enclave_reference_key", 488, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to create reference key.");
    SecKeyRef v47 = 0;
    goto LABEL_34;
  }
  SecKeyRef v43 = v42;
  id v51 = 0;
  SecAccessControlRef v19 = Duplicate;
  id v32 = security_create_attestation((uint64_t)v42, (uint64_t)Duplicate, (NSError **)&v51);
  SecKeyRef v22 = (NSError *)v51;
  SecKeyRef v47 = v43;
  if (v32)
  {
    id v20 = (const void *)v24;
    CFDataRef v18 = 0;
LABEL_70:
    CFDictionaryRef v23 = v8;
    uint64_t v15 = v50;
    goto LABEL_49;
  }
  unsigned int v45 = createMobileActivationError((uint64_t)"security_valid_security_enclave_reference_key", 494, @"com.apple.MobileActivation.ErrorDomain", -11, v22, @"Failed to create test attestation.");

  SecKeyRef v22 = v45;
  CFDictionaryRef v23 = v8;
LABEL_35:
  id v20 = (const void *)v24;
  SecAccessControlRef v19 = Duplicate;
  CFDataRef v28 = v9;
  if (a4)
  {
    CFDictionaryRef v29 = v23;
    unsigned int v30 = v22;
    CFDictionaryRef v23 = v29;
    *a4 = v30;
  }
  uint64_t v31 = 0;
  CFDataRef v18 = 0;
  id v32 = 0;
  uint64_t v33 = 0;
  CFDataRef v34 = 0;
  id v35 = 0;
  if (v23) {
    goto LABEL_38;
  }
LABEL_39:
  if (error) {
    CFRelease(error);
  }
  CFErrorRef error = 0;
  if (v20) {
    CFRelease(v20);
  }
  if (v47) {
    CFRelease(v47);
  }
  if (v19) {
    CFRelease(v19);
  }

  return v33;
}

uint64_t security_certificate_matches_key(__SecKey *a1, id a2, __SecCertificate *a3, void *a4)
{
  id v7 = a2;
  CFErrorRef error = 0;
  if (!a1 || !a3)
  {
    id v11 = createMobileActivationError((uint64_t)"security_certificate_matches_key", 533, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    CFDataRef v10 = 0;
    id v12 = 0;
    uint64_t v9 = 0;
    goto LABEL_20;
  }
  CFDictionaryRef v8 = SecKeyCopyPublicKey(a1);
  uint64_t v9 = v8;
  if (!v8)
  {
    id v11 = createMobileActivationError((uint64_t)"security_certificate_matches_key", 539, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy RK public key.");
    CFDataRef v10 = 0;
LABEL_19:
    id v12 = 0;
LABEL_20:
    CFDataRef v14 = 0;
    if (!a4) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  if (v7)
  {
    CFDataRef v10 = (CFDataRef)v7;
    goto LABEL_9;
  }
  CFDataRef v10 = SecKeyCopyExternalRepresentation(v8, &error);
  if (!v10)
  {
    id v11 = createMobileActivationError((uint64_t)"security_certificate_matches_key", 548, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to copy RK public key buffer.");
    goto LABEL_19;
  }
LABEL_9:
  id v13 = SecCertificateCopyKey(a3);
  id v12 = v13;
  if (!v13)
  {
    id v11 = createMobileActivationError((uint64_t)"security_certificate_matches_key", 557, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve certificate public key.");
    goto LABEL_20;
  }
  CFDataRef v14 = SecKeyCopyExternalRepresentation(v13, &error);
  if (!v14)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"security_certificate_matches_key", 563, @"com.apple.MobileActivation.ErrorDomain", -1, error, @"Failed to encode certificate public key as data.");
    goto LABEL_16;
  }
  if (([(__CFData *)v10 isEqualToData:v14] & 1) == 0)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"security_certificate_matches_key", 570, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Certificate public key does not match RK public key.");
LABEL_16:
    id v11 = MobileActivationError;
    if (!a4)
    {
LABEL_22:
      uint64_t v15 = 0;
      uint64_t v17 = 0;
      if (!v9) {
        goto LABEL_24;
      }
      goto LABEL_23;
    }
LABEL_21:
    *a4 = v11;
    goto LABEL_22;
  }
  id v11 = 0;
  uint64_t v15 = 1;
LABEL_23:
  CFRelease(v9);
  uint64_t v17 = v15;
LABEL_24:
  if (v12) {
    CFRelease(v12);
  }
  if (error) {
    CFRelease(error);
  }
  CFErrorRef error = 0;

  return v17;
}

BOOL is_virtual_machine()
{
  int v3 = 0;
  size_t v2 = 4;
  return !sysctlbyname("kern.hv_vmm_present", &v3, &v2, 0, 0) && v3 == 1;
}

uint64_t createXMLRequest(void *a1, void *a2, NSError **a3)
{
  id v5 = a1;
  if (!v5)
  {
    id v7 = createMobileActivationError((uint64_t)"createXMLRequest", 57, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    CFDictionaryRef v6 = 0;
    if (!a3)
    {
LABEL_12:
      uint64_t v13 = 0;
      id v9 = 0;
      goto LABEL_13;
    }
LABEL_8:
    id v7 = v7;
    uint64_t v13 = 0;
    id v9 = 0;
    *a3 = v7;
    goto LABEL_13;
  }
  id v17 = 0;
  CFDictionaryRef v6 = +[NSPropertyListSerialization dataWithPropertyList:v5 format:100 options:0 error:&v17];
  id v7 = (NSError *)v17;
  if (!v6)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"createXMLRequest", 67, @"com.apple.MobileActivation.ErrorDomain", -1, v7, @"Failed to convert dictionary to data");
    goto LABEL_11;
  }
  id v8 = objc_alloc_init((Class)NSMutableURLRequest);
  if (!v8)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"createXMLRequest", 74, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate request.");
LABEL_11:
    uint64_t v15 = MobileActivationError;

    id v7 = v15;
    if (!a3) {
      goto LABEL_12;
    }
    goto LABEL_8;
  }
  id v9 = v8;
  [v8 setCachePolicy:0];
  LODWORD(v10) = NETWORK_TIMEOUT_SECONDS;
  [v9 setTimeoutInterval:(double)v10];
  [v9 setHTTPMethod:@"POST"];
  id v11 = +[NSString stringWithFormat:@"application/xml"];
  [v9 setValue:v11 forHTTPHeaderField:@"Content-Type"];

  id v12 = +[NSString stringWithFormat:@"%lu", [(NSData *)v6 length]];
  [v9 setValue:v12 forHTTPHeaderField:@"Content-Length"];

  [v9 setHTTPBody:v6];
  if (a2)
  {
    id v9 = v9;
    *a2 = v9;
  }
  uint64_t v13 = 1;
LABEL_13:

  return v13;
}

uint64_t is_erase_installed_build()
{
  if (copyUserDataDisposition_onceToken != -1) {
    dispatch_once(&copyUserDataDisposition_onceToken, &__block_literal_global_8);
  }
  return copyUserDataDisposition_dataDisposition & 1;
}

uint64_t is_upgrade_installed_build()
{
  if (copyUserDataDisposition_onceToken != -1) {
    dispatch_once(&copyUserDataDisposition_onceToken, &__block_literal_global_8);
  }
  return (copyUserDataDisposition_dataDisposition >> 1) & 1;
}

id data_migration_supported()
{
  if (!_os_feature_enabled_impl()) {
    return 0;
  }
  [@"com.apple.mobileactivationd" UTF8String];
  if ((os_variant_is_darwinos() & 1) != 0 || !xpc_user_sessions_enabled()) {
    return 0;
  }
  if (copyUserDataDisposition_onceToken != -1) {
    dispatch_once(&copyUserDataDisposition_onceToken, &__block_literal_global_8);
  }
  if ((copyUserDataDisposition_dataDisposition & 2) == 0) {
    return 0;
  }
  id v1 = +[GestaltHlpr getSharedInstance];
  id v2 = [v1 getBoolAnswer:@"DeviceSupportsMultiUser"];

  return v2;
}

void __copyUserDataDisposition_block_invoke(id a1)
{
  if ((os_variant_is_darwinos() & 1) == 0) {
    copyUserDataDisposition_dataDisposition = DMGetUserDataDisposition();
  }
}

uint64_t setBatteryDateOfFirtUse(void *a1, NSError **a2)
{
  id v3 = a1;
  if (v3)
  {
    if (!_os_feature_enabled_impl() || (uint64_t Use = IOPSSetBatteryDateOfFirstUse(), !Use))
    {
      CFDictionaryRef v6 = 0;
      uint64_t v7 = 1;
      goto LABEL_10;
    }
    MobileActivationError = createMobileActivationError((uint64_t)"setBatteryDateOfFirtUse", 34, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to set battery date of first use: 0x%08x", Use);
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"setBatteryDateOfFirtUse", 27, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
  }
  CFDictionaryRef v6 = MobileActivationError;
  if (a2)
  {
    CFDictionaryRef v6 = v6;
    uint64_t v7 = 0;
    *a2 = v6;
  }
  else
  {
    uint64_t v7 = 0;
  }
LABEL_10:

  return v7;
}

BOOL hasPrimaryICloudAccount(void *a1)
{
  id v2 = [getAKAccountManagerClass() sharedInstance];
  id v3 = v2;
  if (v2)
  {
    id v4 = [v2 primaryAuthKitAccount];
    BOOL v5 = v4 != 0;

    CFDictionaryRef v6 = 0;
    if (!a1) {
      goto LABEL_7;
    }
  }
  else
  {
    CFDictionaryRef v6 = createMobileActivationError((uint64_t)"hasPrimaryICloudAccount", 48, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"Failed to retrieve account manager.");
    BOOL v5 = 0;
    if (!a1) {
      goto LABEL_7;
    }
  }
  if (!v5) {
    *a1 = v6;
  }
LABEL_7:

  return v5;
}

id getAKAccountManagerClass()
{
  uint64_t v3 = 0;
  id v4 = &v3;
  uint64_t v5 = 0x2050000000;
  id v0 = (void *)getAKAccountManagerClass_softClass;
  uint64_t v6 = getAKAccountManagerClass_softClass;
  if (!getAKAccountManagerClass_softClass)
  {
    AuthKitLibraryCore();
    v4[3] = (uint64_t)objc_getClass("AKAccountManager");
    getAKAccountManagerClass_softClass = v4[3];
    id v0 = (void *)v4[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v3, 8);

  return v1;
}

void sub_10004F808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL primaryICloudAccountIsHSA2(void *a1)
{
  id v2 = [getAKAccountManagerClass() sharedInstance];
  uint64_t v3 = v2;
  if (!v2)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"primaryICloudAccountIsHSA2", 81, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"Failed to retrieve account manager.");
LABEL_8:
    id v8 = MobileActivationError;
    goto LABEL_10;
  }
  id v4 = [v2 primaryAuthKitAccount];
  if (!v4)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"primaryICloudAccountIsHSA2", 87, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"No primary account exists.");
    goto LABEL_8;
  }
  uint64_t v5 = v4;
  id v6 = [v3 securityLevelForAccount:v4];
  if (!v6)
  {
    id v8 = createMobileActivationError((uint64_t)"primaryICloudAccountIsHSA2", 93, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"Failed to retrieve account security level.");

LABEL_10:
    BOOL v7 = 0;
    if (!a1) {
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  BOOL v7 = v6 == (id)4;

  id v8 = 0;
  if (!a1) {
    goto LABEL_13;
  }
LABEL_11:
  if (!v7) {
    *a1 = v8;
  }
LABEL_13:

  return v7;
}

id copyTokenForActivationLock(void *a1, void *a2, int a3, BOOL *a4, void *a5)
{
  id v8 = a1;
  id v47 = a2;
  uint64_t v63 = 0;
  id v64 = (id *)&v63;
  uint64_t v65 = 0x3032000000;
  id v66 = __Block_byref_object_copy__8;
  id v67 = __Block_byref_object_dispose__8;
  id v68 = 0;
  uint64_t v57 = 0;
  id v58 = &v57;
  uint64_t v59 = 0x3032000000;
  id v60 = __Block_byref_object_copy__8;
  id v61 = __Block_byref_object_dispose__8;
  id v62 = 0;
  uint64_t v51 = 0;
  id v52 = &v51;
  uint64_t v53 = 0x3032000000;
  unsigned int v54 = __Block_byref_object_copy__8;
  unsigned int v55 = __Block_byref_object_dispose__8;
  id v56 = 0;
  id v9 = objc_alloc_init((Class)NSDictionary);
  unint64_t v10 = (void *)v58[5];
  v58[5] = (uint64_t)v9;

  if (!v58[5])
  {
    uint64_t v15 = createMobileActivationError((uint64_t)"copyTokenForActivationLock", 134, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create dictionary.");
LABEL_13:
    id v16 = 0;
    id v17 = 0;
    id v48 = 0;
    goto LABEL_14;
  }
  dispatch_semaphore_t v11 = dispatch_semaphore_create(0);
  id v12 = (void *)v52[5];
  v52[5] = (uint64_t)v11;

  if (!v52[5])
  {
    uint64_t v15 = createMobileActivationError((uint64_t)"copyTokenForActivationLock", 140, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create semaphore.");
    goto LABEL_13;
  }
  if (!getAKAppleIDAuthenticationControllerClass()
    || !getAKAppleIDAuthenticationContextClass()
    || !getAKAccountManagerClass())
  {
    uint64_t v15 = createMobileActivationError((uint64_t)"copyTokenForActivationLock", 145, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"AuthKit is not supported on this platform.");
    goto LABEL_13;
  }
  id v48 = objc_alloc_init((Class)getAKAccountManagerClass());
  if (!v48)
  {
    uint64_t v15 = createMobileActivationError((uint64_t)"copyTokenForActivationLock", 151, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate account manager.");
    goto LABEL_13;
  }
  if (v8)
  {
    uint64_t v13 = v64;
    id obj = v64[5];
    id v14 = [v48 authKitAccountWithAppleID:v8 error:&obj];
    objc_storeStrong(v13 + 5, obj);
    if (!v14)
    {
      uint64_t v15 = createMobileActivationError((uint64_t)"copyTokenForActivationLock", 158, @"com.apple.MobileActivation.ErrorDomain", -1, v64[5], @"Failed to query account for %@.", v8);
      id v16 = 0;
      id v17 = 0;
LABEL_14:
      id v46 = 0;
LABEL_15:
      id v18 = 0;
      id v19 = 0;
      id v20 = 0;
      id v21 = 0;
LABEL_16:
      id v22 = v64[5];
      v64[5] = v15;
      goto LABEL_17;
    }
  }
  else
  {
    id v14 = [v48 primaryAuthKitAccount];
    if (!v14)
    {
      uint64_t v15 = createMobileActivationError((uint64_t)"copyTokenForActivationLock", 164, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query primary account.");
      id v16 = 0;
      id v17 = 0;
      id v46 = 0;
      id v18 = 0;
LABEL_37:
      id v19 = 0;
      id v20 = 0;
      id v21 = 0;
      id v8 = 0;
      goto LABEL_16;
    }
  }
  id v46 = v14;
  id v26 = [v48 securityLevelForAccount:v14];
  BOOL v44 = v26 == (id)4;
  if (!v47 && (a3 & 1) == 0 && v26 != (id)4)
  {
    uint64_t v15 = createMobileActivationError((uint64_t)"copyTokenForActivationLock", 172, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input for Non-HSA2 account (password required).");
LABEL_35:
    id v16 = 0;
    id v17 = 0;
    goto LABEL_15;
  }
  id v18 = [v48 DSIDForAccount:v14];
  if (!v18)
  {
    uint64_t v15 = createMobileActivationError((uint64_t)"copyTokenForActivationLock", 178, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query DSID.");
    goto LABEL_35;
  }
  id v23 = [v48 formattedUsernameForAccount:v14];

  if (!v23)
  {
    uint64_t v15 = createMobileActivationError((uint64_t)"copyTokenForActivationLock", 184, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query username.");
    id v16 = 0;
    id v17 = 0;
    goto LABEL_37;
  }
  id v19 = [v48 altDSIDForAccount:v14];
  if (!v19)
  {
    id v27 = createMobileActivationError((uint64_t)"copyTokenForActivationLock", 190, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query altDSID.");
    id v16 = 0;
    id v17 = 0;
    id v19 = 0;
LABEL_42:
    id v20 = 0;
    id v21 = 0;
LABEL_43:
    id v22 = v64[5];
    v64[5] = v27;
    goto LABEL_44;
  }
  id v16 = objc_alloc_init((Class)getAKAppleIDAuthenticationControllerClass());
  if (!v16)
  {
    id v27 = createMobileActivationError((uint64_t)"copyTokenForActivationLock", 196, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate auth controller.");
    id v16 = 0;
LABEL_41:
    id v17 = 0;
    goto LABEL_42;
  }
  id v17 = objc_alloc_init((Class)getAKAppleIDAuthenticationContextClass());
  if (!v17)
  {
    id v27 = createMobileActivationError((uint64_t)"copyTokenForActivationLock", 202, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate auth context.");
    goto LABEL_41;
  }
  if (v47)
  {
    if ([v47 hasSuffix:@"PET"])
    {
      id v21 = v47;
      goto LABEL_47;
    }
    [v17 _setPassword:v47];
  }
  id v21 = 0;
LABEL_47:
  [v17 setUsername:v23];
  id v28 = [v18 stringValue];
  [v17 setDSID:v28];

  [v17 setAltDSID:v19];
  [v17 setIsUsernameEditable:0];
  [v17 setShouldPromptForPasswordOnly:0];
  [v17 setShouldUpdatePersistentServiceTokens:0];
  [v17 setServiceType:1];
  [v17 setShouldSkipSettingsLaunchAlert:0];
  [v17 setAuthenticationType:a3 ^ 1u];
  id v20 = objc_alloc_init((Class)NSMutableDictionary);
  if (!v20)
  {
    id v27 = createMobileActivationError((uint64_t)"copyTokenForActivationLock", 226, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");
    id v20 = 0;
    goto LABEL_43;
  }
  id v29 = [v18 stringValue];
  [v20 setObject:v29 forKeyedSubscript:@"dsid"];

  [v20 setObject:v19 forKeyedSubscript:@"altDSID"];
  [v20 setObject:v23 forKeyedSubscript:];
  [v20 setObject:v21 forKeyedSubscript:@"pet"];
  if (!v21)
  {
    v49[0] = _NSConcreteStackBlock;
    v49[1] = 3254779904;
    v49[2] = __copyTokenForActivationLock_block_invoke;
    v49[3] = &__block_descriptor_56_e8_32r40r48r_e34_v24__0__NSDictionary_8__NSError_16l;
    v49[4] = &v63;
    v49[5] = &v57;
    v49[6] = &v51;
    [v16 authenticateWithContext:v17 completion:v49];
    dispatch_semaphore_wait((dispatch_semaphore_t)v52[5], 0xFFFFFFFFFFFFFFFFLL);
    if (v64[5])
    {
      id v21 = 0;
      if (a5) {
        goto LABEL_18;
      }
LABEL_55:
      id v25 = 0;
      goto LABEL_56;
    }
    id v32 = (void *)v58[5];
    id v41 = getAKAuthenticationPasswordKey();
    id v33 = [v32 objectForKeyedSubscript:v41];
    [v20 setObject:v33 forKeyedSubscript:@"pet"];

    id v42 = [v20 objectForKeyedSubscript:@"pet"];
    id v34 = isNSString(v42);

    if (v34)
    {
      id v35 = (void *)v58[5];
      id v43 = getAKAuthenticationUsernameKey();
      id v36 = [v35 objectForKeyedSubscript:v43];
      [v20 setObject:v36 forKeyedSubscript:@"appleID"];

      id v37 = [v20 objectForKeyedSubscript:@"appleID"];
      id v38 = isNSString(v37);

      if (v38) {
        goto LABEL_49;
      }
      id v22 = getAKAuthenticationPasswordKey();
      id v39 = createMobileActivationError((uint64_t)"copyTokenForActivationLock", 263, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Missing authentication value: %@", v22);
    }
    else
    {
      id v22 = getAKAuthenticationPasswordKey();
      id v39 = createMobileActivationError((uint64_t)"copyTokenForActivationLock", 257, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Missing authentication value: %@", v22);
    }
    id v40 = v64[5];
    v64[5] = v39;

    id v21 = 0;
LABEL_44:
    id v8 = v23;
LABEL_17:

    id v23 = v8;
    if (a5)
    {
LABEL_18:
      id v24 = v64[5];
      id v25 = 0;
      *a5 = v24;
      goto LABEL_56;
    }
    goto LABEL_55;
  }
LABEL_49:
  if (a4) {
    *a4 = v44;
  }
  id v25 = v20;
  id v20 = v25;
LABEL_56:
  id v30 = v25;

  _Block_object_dispose(&v51, 8);
  _Block_object_dispose(&v57, 8);

  _Block_object_dispose(&v63, 8);

  return v30;
}

void sub_100050420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v32 - 136), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__8(uint64_t a1)
{
}

id getAKAppleIDAuthenticationControllerClass()
{
  uint64_t v3 = 0;
  id v4 = &v3;
  uint64_t v5 = 0x2050000000;
  id v0 = (void *)getAKAppleIDAuthenticationControllerClass_softClass;
  uint64_t v6 = getAKAppleIDAuthenticationControllerClass_softClass;
  if (!getAKAppleIDAuthenticationControllerClass_softClass)
  {
    AuthKitLibraryCore();
    v4[3] = (uint64_t)objc_getClass("AKAppleIDAuthenticationController");
    getAKAppleIDAuthenticationControllerClass_softClass = v4[3];
    id v0 = (void *)v4[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v3, 8);

  return v1;
}

void sub_100050558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getAKAppleIDAuthenticationContextClass()
{
  uint64_t v3 = 0;
  id v4 = &v3;
  uint64_t v5 = 0x2050000000;
  id v0 = (void *)getAKAppleIDAuthenticationContextClass_softClass;
  uint64_t v6 = getAKAppleIDAuthenticationContextClass_softClass;
  if (!getAKAppleIDAuthenticationContextClass_softClass)
  {
    AuthKitLibraryCore();
    v4[3] = (uint64_t)objc_getClass("AKAppleIDAuthenticationContext");
    getAKAppleIDAuthenticationContextClass_softClass = v4[3];
    id v0 = (void *)v4[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v3, 8);

  return v1;
}

void sub_100050660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t __copyTokenForActivationLock_block_invoke(void *a1, void *a2, void *a3)
{
  if (!a2 || a3)
  {
    id v4 = createMobileActivationError((uint64_t)"copyTokenForActivationLock_block_invoke", 238, @"com.apple.MobileActivation.ErrorDomain", -1, a3, @"Failed to authenticate.");
    uint64_t v5 = a1[4];
  }
  else
  {
    id v4 = (NSError *)[a2 copy];
    uint64_t v5 = a1[5];
  }
  uint64_t v6 = *(void *)(v5 + 8);
  BOOL v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v4;

  id v8 = *(NSObject **)(*(void *)(a1[6] + 8) + 40);

  return dispatch_semaphore_signal(v8);
}

void __copy_helper_block_e8_32r40r48r(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 32), *(const void **)(a2 + 32), 8);
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 8);
  id v4 = *(const void **)(a2 + 48);

  _Block_object_assign((void *)(a1 + 48), v4, 8);
}

void __destroy_helper_block_e8_32r40r48r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 48), 8);
  _Block_object_dispose(*(const void **)(a1 + 40), 8);
  id v2 = *(const void **)(a1 + 32);

  _Block_object_dispose(v2, 8);
}

id getAKAuthenticationPasswordKey()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2020000000;
  id v0 = (void **)getAKAuthenticationPasswordKeySymbolLoc_ptr;
  uint64_t v7 = getAKAuthenticationPasswordKeySymbolLoc_ptr;
  if (!getAKAuthenticationPasswordKeySymbolLoc_ptr)
  {
    id v1 = (void *)AuthKitLibrary();
    v5[3] = (uint64_t)dlsym(v1, "AKAuthenticationPasswordKey");
    getAKAuthenticationPasswordKeySymbolLoc_ptr = v5[3];
    id v0 = (void **)v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (!v0) {
    getAKAuthenticationPasswordKey_cold_1();
  }
  id v2 = *v0;

  return v2;
}

void sub_1000508BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getAKAuthenticationUsernameKey()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2020000000;
  id v0 = (void **)getAKAuthenticationUsernameKeySymbolLoc_ptr;
  uint64_t v7 = getAKAuthenticationUsernameKeySymbolLoc_ptr;
  if (!getAKAuthenticationUsernameKeySymbolLoc_ptr)
  {
    id v1 = (void *)AuthKitLibrary();
    v5[3] = (uint64_t)dlsym(v1, "AKAuthenticationUsernameKey");
    getAKAuthenticationUsernameKeySymbolLoc_ptr = v5[3];
    id v0 = (void **)v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (!v0) {
    getAKAuthenticationUsernameKey_cold_1();
  }
  id v2 = *v0;

  return v2;
}

void sub_1000509C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getAKAccountManagerClass_block_invoke(uint64_t a1)
{
  AuthKitLibraryCore();
  Class result = objc_getClass("AKAccountManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getAKAccountManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t AuthKitLibraryCore()
{
  if (!AuthKitLibraryCore_frameworkLibrary) {
    AuthKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  return AuthKitLibraryCore_frameworkLibrary;
}

uint64_t __AuthKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  AuthKitLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getAKAppleIDAuthenticationControllerClass_block_invoke(uint64_t a1)
{
  AuthKitLibraryCore();
  Class result = objc_getClass("AKAppleIDAuthenticationController");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getAKAppleIDAuthenticationControllerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getAKAppleIDAuthenticationContextClass_block_invoke(uint64_t a1)
{
  AuthKitLibraryCore();
  Class result = objc_getClass("AKAppleIDAuthenticationContext");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getAKAppleIDAuthenticationContextClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getAKAuthenticationPasswordKeySymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)AuthKitLibrary();
  Class result = dlsym(v2, "AKAuthenticationPasswordKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getAKAuthenticationPasswordKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t AuthKitLibrary()
{
  id v1 = 0;
  uint64_t result = AuthKitLibraryCore();
  if (!result) {
    AuthKitLibrary_cold_1(&v1);
  }
  return result;
}

void *__getAKAuthenticationUsernameKeySymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)AuthKitLibrary();
  uint64_t result = dlsym(v2, "AKAuthenticationUsernameKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getAKAuthenticationUsernameKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id libavp_send_host_message(void *a1, void *a2)
{
  id v3 = a1;
  cf[0] = 0;
  if (!is_virtual_machine())
  {
    MobileActivationError = createMobileActivationError((uint64_t)"libavp_send_host_message", 60, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"Device is not a VM (not supported).");
LABEL_15:
    uint64_t v13 = MobileActivationError;
    id v14 = 0;
    dispatch_semaphore_t v11 = 0;
    uint64_t v6 = 0;
    id v12 = 0;
    id v4 = 0;
LABEL_16:
    id v5 = 0;
    goto LABEL_17;
  }
  if (!AppleVirtualPlatformLibraryCore())
  {
    MobileActivationError = createMobileActivationError((uint64_t)"libavp_send_host_message", 65, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Virtualization library not loaded on this platform.");
    goto LABEL_15;
  }
  if (!v3)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"libavp_send_host_message", 70, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid intput.");
    goto LABEL_15;
  }
  id v4 = copy_calling_process_name();
  if (!v4)
  {
    uint64_t v13 = createMobileActivationError((uint64_t)"libavp_send_host_message", 76, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve process name.");
    id v14 = 0;
    dispatch_semaphore_t v11 = 0;
    uint64_t v6 = 0;
    id v12 = 0;
    goto LABEL_16;
  }
  id v5 = [v3 mutableCopy];
  [v5 setObject:v4 forKeyedSubscript:@"HostProcessName"];
  id v20 = 0;
  uint64_t v6 = +[NSPropertyListSerialization dataWithPropertyList:v5 format:100 options:0 error:&v20];
  id v7 = v20;
  if (!v6)
  {
    uint64_t v13 = createMobileActivationError((uint64_t)"libavp_send_host_message", 85, @"com.apple.MobileActivation.ErrorDomain", -1, v7, @"Could not convert dictionary to xml data.");

    id v14 = 0;
    dispatch_semaphore_t v11 = 0;
LABEL_26:
    id v12 = 0;
    goto LABEL_17;
  }
  uint64_t v23 = 0;
  id v24 = &v23;
  uint64_t v25 = 0x2020000000;
  id v8 = (uint64_t (*)(uint64_t, NSData *, CFTypeRef *))getAppleVirtualPlatformSendSubsystemMessageToHostSymbolLoc_ptr;
  id v26 = getAppleVirtualPlatformSendSubsystemMessageToHostSymbolLoc_ptr;
  if (!getAppleVirtualPlatformSendSubsystemMessageToHostSymbolLoc_ptr)
  {
    cf[1] = _NSConcreteStackBlock;
    cf[2] = (CFTypeRef)3254779904;
    cf[3] = __getAppleVirtualPlatformSendSubsystemMessageToHostSymbolLoc_block_invoke;
    cf[4] = &__block_descriptor_40_e8_32r_e5_v8__0l;
    id v22 = &v23;
    id v9 = (void *)AppleVirtualPlatformLibrary();
    unint64_t v10 = dlsym(v9, "AppleVirtualPlatformSendSubsystemMessageToHost");
    *(void *)(v22[1] + 24) = v10;
    getAppleVirtualPlatformSendSubsystemMessageToHostSymbolLoc_ptr = *(_UNKNOWN **)(v22[1] + 24);
    id v8 = (uint64_t (*)(uint64_t, NSData *, CFTypeRef *))v24[3];
  }
  _Block_object_dispose(&v23, 8);
  if (!v8) {
    libavp_send_host_message_cold_1();
  }
  dispatch_semaphore_t v11 = (void *)v8(6, v6, cf);
  if (!v11)
  {
    uint64_t v13 = createMobileActivationError((uint64_t)"libavp_send_host_message", 91, @"com.apple.MobileActivation.ErrorDomain", -1, (void *)cf[0], @"Failed to send message to host.");

    id v14 = 0;
    goto LABEL_26;
  }
  id v19 = 0;
  id v12 = +[NSPropertyListSerialization propertyListWithData:v11 options:0 format:0 error:&v19];
  uint64_t v13 = (NSError *)v19;

  id v14 = isNSDictionary(v12);
  if (v14)
  {
    id v14 = v12;
    id v12 = v14;
  }
  else
  {
    id v18 = createMobileActivationError((uint64_t)"libavp_send_host_message", 97, @"com.apple.MobileActivation.ErrorDomain", -1, v13, @"Failed to serialize data as dictionary.");

    uint64_t v13 = v18;
  }
LABEL_17:
  if (a2 && !v14) {
    *a2 = v13;
  }
  if (cf[0]) {
    CFRelease(cf[0]);
  }
  id v16 = v14;

  return v16;
}

void sub_100051164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id libavp_copy_strong_identity_data(void *a1, NSError **a2)
{
  id v3 = a1;
  CFTypeRef cf = 0;
  if (!is_virtual_machine())
  {
    MobileActivationError = createMobileActivationError((uint64_t)"libavp_copy_strong_identity_data", 126, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"Device is not a VM (not supported).");
LABEL_9:
    dispatch_semaphore_t v11 = MobileActivationError;
    id v4 = 0;
    goto LABEL_10;
  }
  if (!AppleVirtualPlatformLibraryCore())
  {
    MobileActivationError = createMobileActivationError((uint64_t)"libavp_copy_strong_identity_data", 131, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Virtualization library not loaded on this platform.");
    goto LABEL_9;
  }
  id v4 = objc_alloc_init((Class)NSMutableDictionary);
  if (v4)
  {
    id v5 = [v3 objectForKeyedSubscript:@"NetworkTimeoutInterval"];
    id v6 = isNSNumber(v5);

    if (v6)
    {
      id v7 = [v3 objectForKeyedSubscript:@"NetworkTimeoutInterval"];
      [v7 doubleValue];
      if (v8 <= 0.0)
      {
        id v9 = createMobileActivationError((uint64_t)"libavp_copy_strong_identity_data", 144, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid network timeout requested: %@", v7);
        goto LABEL_34;
      }
    }
    else
    {
      id v7 = 0;
    }
    id v13 = [v4 objectForKeyedSubscript:@"SkipNetworkRequest"];
    id v14 = isNSNumber(v13);

    if (v14)
    {
      id v15 = [v4 objectForKeyedSubscript:@"SkipNetworkRequest"];
      id v16 = [v15 BOOLValue];
    }
    else
    {
      id v16 = 0;
    }
    uint64_t v36 = 0;
    id v37 = &v36;
    uint64_t v38 = 0x2020000000;
    id v17 = (void *)getkAppleVirtualPlatformGuestStrongIdentityOptionSynchronousSymbolLoc_ptr;
    id v39 = (void *)getkAppleVirtualPlatformGuestStrongIdentityOptionSynchronousSymbolLoc_ptr;
    if (!getkAppleVirtualPlatformGuestStrongIdentityOptionSynchronousSymbolLoc_ptr)
    {
      uint64_t v31 = _NSConcreteStackBlock;
      uint64_t v32 = 3254779904;
      id v33 = __getkAppleVirtualPlatformGuestStrongIdentityOptionSynchronousSymbolLoc_block_invoke;
      id v34 = &__block_descriptor_40_e8_32r_e5_v8__0l;
      id v35 = &v36;
      id v18 = (void *)AppleVirtualPlatformLibrary();
      v37[3] = (uint64_t)dlsym(v18, "kAppleVirtualPlatformGuestStrongIdentityOptionSynchronous");
      getkAppleVirtualPlatformGuestStrongIdentityOptionSynchronousSymbolLoc_ptr = *(void *)(v35[1] + 24);
      id v17 = (void *)v37[3];
    }
    _Block_object_dispose(&v36, 8);
    if (!v17) {
      libavp_copy_strong_identity_data_cold_1();
    }
    [v4 setObject:&__kCFBooleanTrue forKeyedSubscript:*v17];
    id v19 = +[NSNumber numberWithBool:v16];
    uint64_t v36 = 0;
    id v37 = &v36;
    uint64_t v38 = 0x2020000000;
    id v20 = (void *)getkAppleVirtualPlatformGuestStrongIdentityOptionCachedOnlySymbolLoc_ptr;
    id v39 = (void *)getkAppleVirtualPlatformGuestStrongIdentityOptionCachedOnlySymbolLoc_ptr;
    if (!getkAppleVirtualPlatformGuestStrongIdentityOptionCachedOnlySymbolLoc_ptr)
    {
      uint64_t v31 = _NSConcreteStackBlock;
      uint64_t v32 = 3254779904;
      id v33 = __getkAppleVirtualPlatformGuestStrongIdentityOptionCachedOnlySymbolLoc_block_invoke;
      id v34 = &__block_descriptor_40_e8_32r_e5_v8__0l;
      id v35 = &v36;
      id v21 = (void *)AppleVirtualPlatformLibrary();
      v37[3] = (uint64_t)dlsym(v21, "kAppleVirtualPlatformGuestStrongIdentityOptionCachedOnly");
      getkAppleVirtualPlatformGuestStrongIdentityOptionCachedOnlySymbolLoc_ptr = *(void *)(v35[1] + 24);
      id v20 = (void *)v37[3];
    }
    _Block_object_dispose(&v36, 8);
    if (!v20) {
      libavp_copy_strong_identity_data_cold_2();
    }
    [v4 setObject:v19 forKeyedSubscript:*v20];

    if (v7)
    {
      [v7 doubleValue];
      uint64_t v23 = +[NSNumber numberWithDouble:v22 * 1000000000.0];
      uint64_t v36 = 0;
      id v37 = &v36;
      uint64_t v38 = 0x2020000000;
      id v24 = (void *)getkAppleVirtualPlatformGuestStrongIdentityOptionSynchronousTimeoutNsecSymbolLoc_ptr;
      id v39 = (void *)getkAppleVirtualPlatformGuestStrongIdentityOptionSynchronousTimeoutNsecSymbolLoc_ptr;
      if (!getkAppleVirtualPlatformGuestStrongIdentityOptionSynchronousTimeoutNsecSymbolLoc_ptr)
      {
        uint64_t v31 = _NSConcreteStackBlock;
        uint64_t v32 = 3254779904;
        id v33 = __getkAppleVirtualPlatformGuestStrongIdentityOptionSynchronousTimeoutNsecSymbolLoc_block_invoke;
        id v34 = &__block_descriptor_40_e8_32r_e5_v8__0l;
        id v35 = &v36;
        uint64_t v25 = (void *)AppleVirtualPlatformLibrary();
        v37[3] = (uint64_t)dlsym(v25, "kAppleVirtualPlatformGuestStrongIdentityOptionSynchronousTimeoutNsec");
        getkAppleVirtualPlatformGuestStrongIdentityOptionSynchronousTimeoutNsecSymbolLoc_ptr = *(void *)(v35[1] + 24);
        id v24 = (void *)v37[3];
      }
      _Block_object_dispose(&v36, 8);
      if (!v24) {
        libavp_copy_strong_identity_data_cold_4();
      }
      [v4 setObject:v23 forKeyedSubscript:*v24];
    }
    uint64_t v36 = 0;
    id v37 = &v36;
    uint64_t v38 = 0x2020000000;
    id v26 = (uint64_t (*)(id, CFTypeRef *))getAppleVirtualPlatformGuestCopyStrongIdentityDataSymbolLoc_ptr;
    id v39 = getAppleVirtualPlatformGuestCopyStrongIdentityDataSymbolLoc_ptr;
    if (!getAppleVirtualPlatformGuestCopyStrongIdentityDataSymbolLoc_ptr)
    {
      uint64_t v31 = _NSConcreteStackBlock;
      uint64_t v32 = 3254779904;
      id v33 = __getAppleVirtualPlatformGuestCopyStrongIdentityDataSymbolLoc_block_invoke;
      id v34 = &__block_descriptor_40_e8_32r_e5_v8__0l;
      id v35 = &v36;
      id v27 = (void *)AppleVirtualPlatformLibrary();
      v37[3] = (uint64_t)dlsym(v27, "AppleVirtualPlatformGuestCopyStrongIdentityData");
      getAppleVirtualPlatformGuestCopyStrongIdentityDataSymbolLoc_ptr = *(_UNKNOWN **)(v35[1] + 24);
      id v26 = (uint64_t (*)(id, CFTypeRef *))v37[3];
    }
    _Block_object_dispose(&v36, 8);
    if (!v26) {
      libavp_copy_strong_identity_data_cold_3();
    }
    id v28 = (void *)v26(v4, &cf);
    if (v28)
    {
      id v12 = v28;
      dispatch_semaphore_t v11 = 0;
      goto LABEL_36;
    }
    id v9 = createMobileActivationError((uint64_t)"libavp_copy_strong_identity_data", 162, @"com.apple.MobileActivation.ErrorDomain", -24, (void *)cf, @"Failed to copy AVP guest identity data.");
LABEL_34:
    dispatch_semaphore_t v11 = v9;
    if (!a2) {
      goto LABEL_35;
    }
LABEL_11:
    dispatch_semaphore_t v11 = v11;
    id v12 = 0;
    *a2 = v11;
    goto LABEL_36;
  }
  dispatch_semaphore_t v11 = createMobileActivationError((uint64_t)"libavp_copy_strong_identity_data", 137, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate dictionary.");
LABEL_10:
  id v7 = 0;
  if (a2) {
    goto LABEL_11;
  }
LABEL_35:
  id v12 = 0;
LABEL_36:
  if (cf) {
    CFRelease(cf);
  }

  return v12;
}

void sub_1000517CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const void *libavp_copy_host_key_and_certs_with_data(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v27 = v7;
  if (is_virtual_machine())
  {
    MobileActivationError = createMobileActivationError((uint64_t)"libavp_copy_host_key_and_certs_with_data", 192, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"Device is a VM (not supported).");
LABEL_17:
    id v14 = MobileActivationError;
    id v13 = 0;
    id v10 = 0;
LABEL_18:
    CFDataRef v18 = 0;
    id v7 = 0;
    goto LABEL_19;
  }
  if (!AppleVirtualPlatformLibraryCore())
  {
    MobileActivationError = createMobileActivationError((uint64_t)"libavp_copy_host_key_and_certs_with_data", 197, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Virtualization library not loaded on this platform.");
    goto LABEL_17;
  }
  if (!v7)
  {
    id v14 = createMobileActivationError((uint64_t)"libavp_copy_host_key_and_certs_with_data", 202, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid intput.");
    id v13 = 0;
    id v10 = 0;
    CFDataRef v18 = 0;
LABEL_19:
    id v20 = 0;
    id v16 = 0;
    if (!a4) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  id v10 = objc_alloc_init((Class)NSMutableData);
  if (!v10)
  {
    id v14 = createMobileActivationError((uint64_t)"libavp_copy_host_key_and_certs_with_data", 208, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to allocate data.");
    id v13 = 0;
    goto LABEL_18;
  }
  uint64_t v30 = 0;
  uint64_t v31 = &v30;
  uint64_t v32 = 0x2050000000;
  dispatch_semaphore_t v11 = (void *)getAppleVirtualPlatformHostCertificateClass_softClass;
  uint64_t v33 = getAppleVirtualPlatformHostCertificateClass_softClass;
  if (!getAppleVirtualPlatformHostCertificateClass_softClass)
  {
    v28[1] = _NSConcreteStackBlock;
    v28[2] = (id)3254779904;
    v28[3] = __getAppleVirtualPlatformHostCertificateClass_block_invoke;
    void v28[4] = &__block_descriptor_40_e8_32r_e5_v8__0l;
    id v29 = &v30;
    AppleVirtualPlatformLibraryCore();
    v31[3] = (uint64_t)objc_getClass("AppleVirtualPlatformHostCertificate");
    getAppleVirtualPlatformHostCertificateClass_softClass = *(void *)(v29[1] + 24);
    dispatch_semaphore_t v11 = (void *)v31[3];
  }
  id v12 = v11;
  _Block_object_dispose(&v30, 8);
  v28[0] = 0;
  id v13 = [[v12 alloc] initWithDataRepresentation:v7 error:v28];
  id v14 = (NSError *)v28[0];
  if (!v13)
  {
    uint64_t v25 = createMobileActivationError((uint64_t)"libavp_copy_host_key_and_certs_with_data", 214, @"com.apple.MobileActivation.ErrorDomain", -1, v14, @"Failed to initialize identity data.");

    CFDataRef v18 = 0;
    id v7 = 0;
    id v20 = 0;
    id v16 = 0;
    goto LABEL_35;
  }
  id v15 = [v13 hostKey];
  id v16 = v15;
  if (!v15)
  {
    uint64_t v25 = createMobileActivationError((uint64_t)"libavp_copy_host_key_and_certs_with_data", 220, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy AVP host key.");

    CFDataRef v18 = 0;
    id v7 = 0;
LABEL_34:
    id v20 = 0;
    goto LABEL_35;
  }
  CFRetain(v15);
  id v17 = (__SecCertificate *)[v13 leafCertificate];
  id v7 = v17;
  if (!v17)
  {
    uint64_t v25 = createMobileActivationError((uint64_t)"libavp_copy_host_key_and_certs_with_data", 228, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy AVP host leaf certificate.");

    CFDataRef v18 = 0;
    goto LABEL_34;
  }
  CFRetain(v17);
  CFDataRef v18 = SecCertificateCopyData(v7);
  if (!v18)
  {
    uint64_t v25 = createMobileActivationError((uint64_t)"libavp_copy_host_key_and_certs_with_data", 236, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create PEM data from cert.");

    goto LABEL_34;
  }
  [v10 appendData:v18];
  id v19 = (__SecCertificate *)[v13 intermediateCertificate];
  id v20 = v19;
  if (v19)
  {
    CFRetain(v19);
    CFDataRef v21 = SecCertificateCopyData(v20);
    CFDataRef v22 = v18;
    CFDataRef v18 = v21;

    if (v18)
    {
      [v10 appendData:v18];
      if (a3)
      {
        id v10 = v10;
        *a3 = v10;
      }
      goto LABEL_24;
    }
    id v26 = createMobileActivationError((uint64_t)"libavp_copy_host_key_and_certs_with_data", 252, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create PEM data from cert.");
  }
  else
  {
    id v26 = createMobileActivationError((uint64_t)"libavp_copy_host_key_and_certs_with_data", 244, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy AVP host intermediate certificate.");
  }
  uint64_t v25 = v26;

LABEL_35:
  id v14 = v25;
  if (a4) {
LABEL_20:
  }
    *a4 = v14;
LABEL_21:
  if (v16) {
    CFRelease(v16);
  }
  id v16 = 0;
  uint64_t v23 = 0;
  if (v7)
  {
LABEL_24:
    CFRelease(v7);
    uint64_t v23 = v16;
  }
  if (v20) {
    CFRelease(v20);
  }

  return v23;
}

void sub_100051D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t libavp_guest_has_host_key(void *a1)
{
  if (!is_virtual_machine())
  {
    MobileActivationError = createMobileActivationError((uint64_t)"libavp_guest_has_host_key", 285, @"com.apple.MobileActivation.ErrorDomain", -3, 0, @"Device is not a VM (not supported).");
    goto LABEL_10;
  }
  if (!AppleVirtualPlatformLibraryCore())
  {
    MobileActivationError = createMobileActivationError((uint64_t)"libavp_guest_has_host_key", 290, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Virtualization library not loaded on this platform.");
LABEL_10:
    id v5 = MobileActivationError;
    uint64_t v4 = 0;
    if (!a1) {
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  uint64_t v8 = 0;
  id v9 = &v8;
  uint64_t v10 = 0x2020000000;
  id v2 = (uint64_t (*)(void))getAppleVirtualPlatformGuestHasHostKeySymbolLoc_ptr;
  dispatch_semaphore_t v11 = getAppleVirtualPlatformGuestHasHostKeySymbolLoc_ptr;
  if (!getAppleVirtualPlatformGuestHasHostKeySymbolLoc_ptr)
  {
    id v3 = (void *)AppleVirtualPlatformLibrary();
    v9[3] = (uint64_t)dlsym(v3, "AppleVirtualPlatformGuestHasHostKey");
    getAppleVirtualPlatformGuestHasHostKeySymbolLoc_ptr = (_UNKNOWN *)v9[3];
    id v2 = (uint64_t (*)(void))v9[3];
  }
  _Block_object_dispose(&v8, 8);
  if (!v2) {
    libavp_guest_has_host_key_cold_1();
  }
  uint64_t v4 = v2();
  id v5 = 0;
  if (a1)
  {
LABEL_11:
    if ((v4 & 1) == 0) {
      *a1 = v5;
    }
  }
LABEL_13:

  return v4;
}

void sub_100051ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t AppleVirtualPlatformLibraryCore()
{
  if (!AppleVirtualPlatformLibraryCore_frameworkLibrary) {
    AppleVirtualPlatformLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  return AppleVirtualPlatformLibraryCore_frameworkLibrary;
}

uint64_t __AppleVirtualPlatformLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  AppleVirtualPlatformLibraryCore_frameworkLibrary = result;
  return result;
}

void *__getAppleVirtualPlatformSendSubsystemMessageToHostSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)AppleVirtualPlatformLibrary();
  uint64_t result = dlsym(v2, "AppleVirtualPlatformSendSubsystemMessageToHost");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getAppleVirtualPlatformSendSubsystemMessageToHostSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                                + 24);
  return result;
}

uint64_t AppleVirtualPlatformLibrary()
{
  id v1 = 0;
  uint64_t result = AppleVirtualPlatformLibraryCore();
  if (!result) {
    AppleVirtualPlatformLibrary_cold_1(&v1);
  }
  return result;
}

void *__getkAppleVirtualPlatformGuestStrongIdentityOptionSynchronousSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)AppleVirtualPlatformLibrary();
  uint64_t result = dlsym(v2, "kAppleVirtualPlatformGuestStrongIdentityOptionSynchronous");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkAppleVirtualPlatformGuestStrongIdentityOptionSynchronousSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                                        + 24);
  return result;
}

void *__getkAppleVirtualPlatformGuestStrongIdentityOptionCachedOnlySymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)AppleVirtualPlatformLibrary();
  uint64_t result = dlsym(v2, "kAppleVirtualPlatformGuestStrongIdentityOptionCachedOnly");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkAppleVirtualPlatformGuestStrongIdentityOptionCachedOnlySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                                       + 24);
  return result;
}

void *__getkAppleVirtualPlatformGuestStrongIdentityOptionSynchronousTimeoutNsecSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)AppleVirtualPlatformLibrary();
  uint64_t result = dlsym(v2, "kAppleVirtualPlatformGuestStrongIdentityOptionSynchronousTimeoutNsec");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkAppleVirtualPlatformGuestStrongIdentityOptionSynchronousTimeoutNsecSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getAppleVirtualPlatformGuestCopyStrongIdentityDataSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)AppleVirtualPlatformLibrary();
  uint64_t result = dlsym(v2, "AppleVirtualPlatformGuestCopyStrongIdentityData");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getAppleVirtualPlatformGuestCopyStrongIdentityDataSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                                 + 24);
  return result;
}

Class __getAppleVirtualPlatformHostCertificateClass_block_invoke(uint64_t a1)
{
  AppleVirtualPlatformLibraryCore();
  Class result = objc_getClass("AppleVirtualPlatformHostCertificate");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getAppleVirtualPlatformHostCertificateClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getAppleVirtualPlatformGuestHasHostKeySymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)AppleVirtualPlatformLibrary();
  Class result = dlsym(v2, "AppleVirtualPlatformGuestHasHostKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getAppleVirtualPlatformGuestHasHostKeySymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10005330C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  _Block_object_dispose(&a36, 8);
  _Block_object_dispose(&a40, 8);
  _Block_object_dispose((const void *)(v40 - 200), 8);
  _Block_object_dispose((const void *)(v40 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__9(uint64_t a1)
{
}

void __copy_helper_block_e8_32s40s48s56r64r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  _Block_object_assign((void *)(a1 + 56), *(const void **)(a2 + 56), 8);
  id v7 = *(const void **)(a2 + 64);

  _Block_object_assign((void *)(a1 + 64), v7, 8);
}

void __destroy_helper_block_e8_32s40s48s56r64r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 64), 8);
  _Block_object_dispose(*(const void **)(a1 + 56), 8);

  id v2 = *(void **)(a1 + 32);
}

void sub_100053A24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void __copy_helper_block_e8_32b(uint64_t a1, uint64_t a2)
{
}

void sub_100054AF4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1000556DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a41, 8);
  _Block_object_dispose(&a45, 8);
  _Block_object_dispose((const void *)(v45 - 240), 8);
  _Block_object_dispose((const void *)(v45 - 208), 8);
  _Unwind_Resume(a1);
}

void __copy_helper_block_e8_32s40s48r56r64r72r80r88r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  _Block_object_assign((void *)(a1 + 48), *(const void **)(a2 + 48), 8);
  _Block_object_assign((void *)(a1 + 56), *(const void **)(a2 + 56), 8);
  _Block_object_assign((void *)(a1 + 64), *(const void **)(a2 + 64), 8);
  _Block_object_assign((void *)(a1 + 72), *(const void **)(a2 + 72), 8);
  _Block_object_assign((void *)(a1 + 80), *(const void **)(a2 + 80), 8);
  id v6 = *(const void **)(a2 + 88);

  _Block_object_assign((void *)(a1 + 88), v6, 8);
}

void __destroy_helper_block_e8_32s40s48r56r64r72r80r88r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 88), 8);
  _Block_object_dispose(*(const void **)(a1 + 80), 8);
  _Block_object_dispose(*(const void **)(a1 + 72), 8);
  _Block_object_dispose(*(const void **)(a1 + 64), 8);
  _Block_object_dispose(*(const void **)(a1 + 56), 8);
  _Block_object_dispose(*(const void **)(a1 + 48), 8);

  id v2 = *(void **)(a1 + 32);
}

void __copy_helper_block_e8_32s40s48s56s64b72r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  _Block_object_assign((void *)(a1 + 64), *(const void **)(a2 + 64), 7);
  uint64_t v8 = *(const void **)(a2 + 72);

  _Block_object_assign((void *)(a1 + 72), v8, 8);
}

void sub_100056480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __copy_helper_block_e8_32s40s48r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(const void **)(a2 + 48);

  _Block_object_assign((void *)(a1 + 48), v6, 8);
}

void __destroy_helper_block_e8_32s40s48r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 48), 8);

  id v2 = *(void **)(a1 + 32);
}

void sub_100059060(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void __copy_helper_block_e8_32s40b48r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 7);
  id v5 = *(const void **)(a2 + 48);

  _Block_object_assign((void *)(a1 + 48), v5, 8);
}

void __copy_helper_block_e8_32s40s48b56r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  _Block_object_assign((void *)(a1 + 48), *(const void **)(a2 + 48), 7);
  id v6 = *(const void **)(a2 + 56);

  _Block_object_assign((void *)(a1 + 56), v6, 8);
}

void sub_10005A2B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v26 - 136), 8);
  _Unwind_Resume(a1);
}

void __copy_helper_block_e8_32s40b48r56r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 7);
  _Block_object_assign((void *)(a1 + 48), *(const void **)(a2 + 48), 8);
  id v5 = *(const void **)(a2 + 56);

  _Block_object_assign((void *)(a1 + 56), v5, 8);
}

void __destroy_helper_block_e8_32s40s48r56r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 56), 8);
  _Block_object_dispose(*(const void **)(a1 + 48), 8);

  id v2 = *(void **)(a1 + 32);
}

void sub_10005B7CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void __copy_helper_block_e8_32s40s48s56b64r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  _Block_object_assign((void *)(a1 + 56), *(const void **)(a2 + 56), 7);
  id v7 = *(const void **)(a2 + 64);

  _Block_object_assign((void *)(a1 + 64), v7, 8);
}

void sub_10005C9C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 160), 8);
  _Unwind_Resume(a1);
}

void __copy_helper_block_e8_32s40s48r56r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  _Block_object_assign((void *)(a1 + 48), *(const void **)(a2 + 48), 8);
  id v6 = *(const void **)(a2 + 56);

  _Block_object_assign((void *)(a1 + 56), v6, 8);
}

void __copy_helper_block_e8_32s40s48s56s64s72s80s88b96r104r(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(a2 + 32);
  id v5 = *(id *)(a2 + 40);
  id v6 = *(id *)(a2 + 48);
  id v7 = *(id *)(a2 + 56);
  id v8 = *(id *)(a2 + 64);
  id v9 = *(id *)(a2 + 72);
  id v10 = *(id *)(a2 + 80);
  _Block_object_assign((void *)(a1 + 88), *(const void **)(a2 + 88), 7);
  _Block_object_assign((void *)(a1 + 96), *(const void **)(a2 + 96), 8);
  uint64_t v11 = *(const void **)(a2 + 104);

  _Block_object_assign((void *)(a1 + 104), v11, 8);
}

void __destroy_helper_block_e8_32s40s48s56s64s72s80s88s96r104r(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 104), 8);
  _Block_object_dispose(*(const void **)(a1 + 96), 8);

  id v2 = *(void **)(a1 + 32);
}

void sub_100060E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id copySignpostLoggingHandle()
{
  if (copySignpostLoggingHandle_onceToken != -1) {
    dispatch_once(&copySignpostLoggingHandle_onceToken, &__block_literal_global_10);
  }
  id v0 = copySignpostLoggingHandle_logHandle;

  return v0;
}

void __copySignpostLoggingHandle_block_invoke(id a1)
{
  os_log_t v1 = os_log_create("com.apple.mobileactivationd", "analytics");
  id v2 = copySignpostLoggingHandle_logHandle;
  copySignpostLoggingHandle_logHandle = v1;
}

void **libaks_ref_key_create(int a1, unsigned int a2, void *a3)
{
  uint64_t v11 = 0;
  if (a1 == 13) {
    int v6 = -1;
  }
  else {
    int v6 = 0;
  }
  uint64_t v7 = aks_ref_key_create(v6, a1, a2, 0, 0, &v11);
  if (!v7)
  {
    id v8 = 0;
    id v9 = v11;
    uint64_t v11 = 0;
    if (!a3) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  id v8 = createMobileActivationError((uint64_t)"libaks_ref_key_create", 31, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create ref key: 0x%08x", v7);
  if (v11) {
    aks_ref_key_free((uint64_t *)&v11);
  }
  id v9 = 0;
  if (a3)
  {
LABEL_10:
    if (!v9) {
      *a3 = v8;
    }
  }
LABEL_12:

  return v9;
}

uint64_t libaks_ref_key_create_with_blob(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = v3;
  uint64_t v10 = 0;
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = aks_ref_key_create_with_blob(0, [v5 bytes], (size_t)[v5 length], &v10);
    if (!v6)
    {
      uint64_t v7 = 0;
      uint64_t v8 = v10;
      uint64_t v10 = 0;
      if (!a2) {
        goto LABEL_11;
      }
      goto LABEL_9;
    }
    uint64_t v7 = createMobileActivationError((uint64_t)"libaks_ref_key_create_with_blob", 66, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create ref key from data: 0x%08x", v6);
    if (v10) {
      aks_ref_key_free(&v10);
    }
  }
  else
  {
    uint64_t v7 = createMobileActivationError((uint64_t)"libaks_ref_key_create_with_blob", 60, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
  }
  uint64_t v8 = 0;
  if (!a2) {
    goto LABEL_11;
  }
LABEL_9:
  if (!v8) {
    *a2 = v7;
  }
LABEL_11:

  return v8;
}

id libaks_ref_key_get_public(void *a1, NSError **a2)
{
  uint64_t v14 = 0;
  if (a1)
  {
    public_SecKeyRef key = aks_ref_key_get_public_key(a1, &v14);
    if (!public_key)
    {
      MobileActivationError = createMobileActivationError((uint64_t)"libaks_ref_key_get_public", 102, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query public key.");
      goto LABEL_9;
    }
    uint64_t v4 = public_key;
    id v5 = objc_alloc((Class)NSData);
    id v6 = [v5 initWithBytes:v4 length:v14];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = 0;
      goto LABEL_12;
    }
    id v9 = @"Failed to create data.";
    uint64_t v10 = 108;
  }
  else
  {
    id v9 = @"Invalid input(s).";
    uint64_t v10 = 96;
  }
  MobileActivationError = createMobileActivationError((uint64_t)"libaks_ref_key_get_public", v10, @"com.apple.MobileActivation.ErrorDomain", -2, 0, v9);
LABEL_9:
  id v12 = MobileActivationError;
  uint64_t v8 = v12;
  if (a2)
  {
    uint64_t v8 = v12;
    id v7 = 0;
    *a2 = v8;
  }
  else
  {
    id v7 = 0;
  }
LABEL_12:

  return v7;
}

uint64_t libaks_system_key_operate(uint64_t a1, uint64_t a2, NSError **a3)
{
  if ((a1 - 15) >= 0xFFFFFFF2 && (a2 - 4) > 0xFFFFFFFC)
  {
    uint64_t v8 = aks_system_key_operate(a1, a2, 0);
    if (!v8)
    {
      uint64_t v10 = 0;
      uint64_t v11 = 1;
      goto LABEL_15;
    }
    if (v8 == -536870170) {
      uint64_t v9 = -3;
    }
    else {
      uint64_t v9 = -1;
    }
    MobileActivationError = createMobileActivationError((uint64_t)"libaks_system_key_operate", 138, @"com.apple.MobileActivation.ErrorDomain", v9, 0, @"Failed to perform system key (%d) operation (%d): 0x%08x", a1, a2, v8);
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"libaks_system_key_operate", 132, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
  }
  uint64_t v10 = MobileActivationError;
  if (a3)
  {
    uint64_t v10 = v10;
    uint64_t v11 = 0;
    *a3 = v10;
  }
  else
  {
    uint64_t v11 = 0;
  }
LABEL_15:

  return v11;
}

id libaks_system_key_get_public(uint64_t a1, uint64_t a2, NSError **a3)
{
  uint64_t v20 = 0;
  CFDataRef v21 = 0;
  if ((a1 - 15) < 0xFFFFFFF2 || (a2 - 4) <= 0xFFFFFFFC)
  {
    id v5 = @"Invalid input(s).";
    uint64_t v6 = 165;
LABEL_6:
    uint64_t v7 = -2;
    goto LABEL_9;
  }
  uint64_t v10 = aks_system_key_get_public(a1, a2, 0, 0, &v21, &v20);
  if (!v10)
  {
    id v14 = objc_alloc((Class)NSData);
    id v15 = [v14 initWithBytesNoCopy:v21 length:v20];
    if (v15)
    {
      CFDataRef v21 = 0;
      id v13 = v15;
      id v12 = 0;
      goto LABEL_14;
    }
    id v5 = @"Failed to create data.";
    uint64_t v6 = 177;
    goto LABEL_6;
  }
  uint64_t v18 = a2;
  uint64_t v19 = v10;
  uint64_t v17 = a1;
  id v5 = @"Failed to query system key (%d / %d) public key: 0x%08x";
  uint64_t v6 = 171;
  uint64_t v7 = -1;
LABEL_9:
  uint64_t v11 = createMobileActivationError((uint64_t)"libaks_system_key_get_public", v6, @"com.apple.MobileActivation.ErrorDomain", v7, 0, v5, v17, v18, v19);
  id v12 = v11;
  if (a3)
  {
    id v12 = v11;
    id v13 = 0;
    *a3 = v12;
  }
  else
  {
    id v13 = 0;
  }
LABEL_14:
  if (v21) {
    free(v21);
  }
  CFDataRef v21 = 0;

  return v13;
}

id libaks_system_key_collection(uint64_t a1, uint64_t a2, unsigned int a3, id a4, NSError **a5)
{
  id v9 = a4;
  uint64_t v10 = v9;
  id v34 = 0;
  uint64_t v35 = a3;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  if (a3 <= 0x3F && (a1 - 15) >= 0xFFFFFFF2 && (a2 - 4) > 0xFFFFFFFC)
  {
    if (a3 || v9)
    {
      uint64_t v18 = (void **)aks_params_create(0);
      uint64_t v11 = v18;
      id v34 = v18;
      if (!v18)
      {
        uint64_t v20 = @"Failed to create aks params.";
        uint64_t v21 = 219;
        goto LABEL_24;
      }
      if (a3)
      {
        uint64_t v19 = aks_params_set_number(v18, 18, &v35);
        if (v19)
        {
          uint64_t v29 = v19;
          uint64_t v20 = @"Failed to set aks data: 0x%08x";
          uint64_t v21 = 226;
          goto LABEL_24;
        }
      }
      if (v10)
      {
        id v24 = v10;
        id v25 = [v24 bytes];
        [v24 length];
        uint64_t v26 = aks_params_set_data(v11, 3, (uint64_t)v25);
        if (v26)
        {
          uint64_t v29 = v26;
          uint64_t v20 = @"Failed to set aks data: 0x%08x";
          uint64_t v21 = 234;
          goto LABEL_24;
        }
      }
      uint64_t der = aks_params_get_der(v11, &v33, &v32);
      if (der)
      {
        uint64_t v29 = der;
        uint64_t v20 = @"Failed to get DER encoded aks params: 0x%08x";
        uint64_t v21 = 241;
        goto LABEL_24;
      }
      uint64_t v12 = v32;
      id v13 = v33;
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      id v13 = 0;
    }
    uint64_t v14 = aks_system_key_collection(a1, a2, (uint64_t)v13, v12, &v31, &v30);
    if (v14)
    {
      MobileActivationError = createMobileActivationError((uint64_t)"libaks_system_key_collection", 248, @"com.apple.MobileActivation.ErrorDomain", -11, 0, @"Failed to perform system key (%d / %d) collection (options=%lld): 0x%08x", a1, a2, v35, v14);
      goto LABEL_25;
    }
    id v22 = objc_alloc((Class)NSData);
    id v23 = [v22 initWithBytesNoCopy:v31 length:v30];
    if (v23)
    {
      uint64_t v31 = 0;
      id v17 = v23;
      id v16 = 0;
      goto LABEL_27;
    }
    uint64_t v20 = @"Failed to create data.";
    uint64_t v21 = 254;
LABEL_24:
    MobileActivationError = createMobileActivationError((uint64_t)"libaks_system_key_collection", v21, @"com.apple.MobileActivation.ErrorDomain", -1, 0, v20, v29);
LABEL_25:
    id v16 = MobileActivationError;
    if (!a5) {
      goto LABEL_26;
    }
LABEL_10:
    id v16 = v16;
    id v17 = 0;
    *a5 = v16;
    goto LABEL_27;
  }
  id v16 = createMobileActivationError((uint64_t)"libaks_system_key_collection", 212, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
  uint64_t v11 = 0;
  if (a5) {
    goto LABEL_10;
  }
LABEL_26:
  id v17 = 0;
LABEL_27:
  if (v11) {
    aks_params_free(&v34);
  }
  if (v31) {
    free(v31);
  }
  uint64_t v31 = 0;
  if (v33) {
    free(v33);
  }
  uint64_t v33 = 0;

  return v17;
}

id libaks_system_key_attest(uint64_t *a1, uint64_t a2, uint64_t a3, NSError **a4)
{
  uint64_t v15 = 0;
  id v16 = 0;
  if (a1 && (a2 - 15) >= 0xFFFFFFF2 && (a3 - 4) > 0xFFFFFFFC)
  {
    uint64_t v7 = aks_system_key_attest(a2, a3, a1, 0, 0, &v16, &v15);
    if (v7)
    {
      MobileActivationError = createMobileActivationError((uint64_t)"libaks_system_key_attest", 295, @"com.apple.MobileActivation.ErrorDomain", -11, 0, @"Failed to attest ref key to systemKey (%d / %d): 0x%08x", a2, a3, v7);
    }
    else
    {
      id v12 = objc_alloc((Class)NSData);
      id v13 = [v12 initWithBytesNoCopy:v16 length:v15];
      if (v13)
      {
        id v16 = 0;
        id v11 = v13;
        uint64_t v10 = 0;
        goto LABEL_12;
      }
      MobileActivationError = createMobileActivationError((uint64_t)"libaks_system_key_attest", 301, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to encode RK attestation data.");
    }
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"libaks_system_key_attest", 289, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
  }
  id v9 = MobileActivationError;
  uint64_t v10 = v9;
  if (a4)
  {
    uint64_t v10 = v9;
    id v11 = 0;
    *a4 = v10;
  }
  else
  {
    id v11 = 0;
  }
LABEL_12:
  if (v16) {
    free(v16);
  }
  id v16 = 0;

  return v11;
}

uint64_t isRunningInRecovery()
{
  return 0;
}

uint64_t isRunningInRootLaunchdContext()
{
  return 0;
}

uint64_t isRunningInDiagnosticsMode()
{
  if (isRunningInDiagnosticsMode_onceToken != -1) {
    dispatch_once(&isRunningInDiagnosticsMode_onceToken, &__block_literal_global_11);
  }
  return isRunningInDiagnosticsMode_retval;
}

void __isRunningInDiagnosticsMode_block_invoke(id a1)
{
  os_log_t v1 = (void *)MGCopyAnswer();
  id v2 = isNSNumber(v1);

  if (v2) {
    isRunningInDiagnosticsMode_retval = [v1 BOOLValue];
  }
}

uint64_t isSupportedDeviceIdentityClient(uint64_t a1, NSError **a2)
{
  if (isSupportedDeviceIdentityClient_onceToken != -1) {
    dispatch_once(&isSupportedDeviceIdentityClient_onceToken, &__block_literal_global_3_0);
  }
  id v4 = copy_process_name(a1);
  if (!v4)
  {
    uint64_t v8 = createMobileActivationError((uint64_t)"isSupportedDeviceIdentityClient", 295, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query process name.");
    id v7 = 0;
    if (a2)
    {
LABEL_12:
      uint64_t v8 = v8;
      uint64_t v9 = 0;
      *a2 = v8;
      goto LABEL_15;
    }
LABEL_14:
    uint64_t v9 = 0;
    goto LABEL_15;
  }
  BOOL v5 = is_virtual_machine();
  uint64_t v6 = &isSupportedDeviceIdentityClient_virtualDeviceSupportedList;
  if (!v5) {
    uint64_t v6 = &isSupportedDeviceIdentityClient_physicalDeviceSupportedList;
  }
  id v7 = (id)*v6;
  if (([v7 containsObject:v4] & 1) == 0)
  {
    uint64_t v8 = createMobileActivationError((uint64_t)"isSupportedDeviceIdentityClient", 302, @"com.apple.MobileActivation.ErrorDomain", -25, 0, @"%@ is not allowed to use this API. File a radar with 'MobileActivation | all' for support.", v4);
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT))
    {
      isSupportedDeviceIdentityClient_cold_1(v8);
      if (a2) {
        goto LABEL_12;
      }
    }
    else if (a2)
    {
      goto LABEL_12;
    }
    goto LABEL_14;
  }
  uint64_t v8 = 0;
  uint64_t v9 = 1;
LABEL_15:

  return v9;
}

void __isSupportedDeviceIdentityClient_block_invoke(id a1)
{
  os_log_t v1 = (void *)isSupportedDeviceIdentityClient_virtualDeviceSupportedList;
  isSupportedDeviceIdentityClient_virtualDeviceSupportedList = (uint64_t)&off_10027F458;

  id v2 = (void *)isSupportedDeviceIdentityClient_physicalDeviceSupportedList;
  isSupportedDeviceIdentityClient_physicalDeviceSupportedList = (uint64_t)&off_10027F470;
}

id copy_calling_process_name()
{
  return copy_process_name(1);
}

id copy_current_process_name()
{
  return copy_process_name(0);
}

id isSupportedRecoveryLogClient(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (isSupportedRecoveryLogClient_onceToken != -1)
  {
    dispatch_once(&isSupportedRecoveryLogClient_onceToken, &__block_literal_global_359);
    if (v2) {
      goto LABEL_3;
    }
LABEL_5:
    id v3 = 0;
    goto LABEL_6;
  }
  if (!v1) {
    goto LABEL_5;
  }
LABEL_3:
  id v3 = [(id)isSupportedRecoveryLogClient_supportedList containsObject:v2];
LABEL_6:

  return v3;
}

void __isSupportedRecoveryLogClient_block_invoke(id a1)
{
  id v1 = (void *)isSupportedRecoveryLogClient_supportedList;
  isSupportedRecoveryLogClient_supportedList = (uint64_t)&off_10027F488;
}

uint64_t isSupportedActivationLockClient(uint64_t a1, NSError **a2)
{
  if (isSupportedActivationLockClient_onceToken != -1) {
    dispatch_once(&isSupportedActivationLockClient_onceToken, &__block_literal_global_391);
  }
  id v4 = copy_process_name(a1);
  if (!v4)
  {
    BOOL v5 = createMobileActivationError((uint64_t)"isSupportedActivationLockClient", 372, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to query process name.");
    if (a2)
    {
LABEL_10:
      BOOL v5 = v5;
      uint64_t v6 = 0;
      *a2 = v5;
      goto LABEL_13;
    }
LABEL_12:
    uint64_t v6 = 0;
    goto LABEL_13;
  }
  if (([(id)isSupportedActivationLockClient_supportedList containsObject:v4] & 1) == 0)
  {
    BOOL v5 = createMobileActivationError((uint64_t)"isSupportedActivationLockClient", 377, @"com.apple.MobileActivation.ErrorDomain", -25, 0, @"%@ is not allowed to use this API. File a radar with 'MobileActivation | all' for support.", v4);
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT))
    {
      isSupportedDeviceIdentityClient_cold_1(v5);
      if (a2) {
        goto LABEL_10;
      }
    }
    else if (a2)
    {
      goto LABEL_10;
    }
    goto LABEL_12;
  }
  BOOL v5 = 0;
  uint64_t v6 = 1;
LABEL_13:

  return v6;
}

void __isSupportedActivationLockClient_block_invoke(id a1)
{
  id v1 = (void *)isSupportedActivationLockClient_supportedList;
  isSupportedActivationLockClient_supportedList = (uint64_t)&off_10027F4A0;
}

NSArray *copy_sorted_file_list(void *a1)
{
  id v1 = a1;
  id v2 = +[NSFileManager defaultManager];
  id v3 = +[NSURL URLWithString:v1];

  id v4 = +[NSArray arrayWithObject:NSURLCreationDateKey];
  BOOL v5 = [(NSFileManager *)v2 contentsOfDirectoryAtURL:v3 includingPropertiesForKeys:v4 options:4 error:0];

  if (v5 && [(NSArray *)v5 count]) {
    uint64_t v6 = [(NSArray *)v5 sortedArrayUsingComparator:&__block_literal_global_399];
  }
  else {
    uint64_t v6 = 0;
  }

  return v6;
}

int64_t __copy_sorted_file_list_block_invoke(id a1, id a2, id a3)
{
  id v4 = a3;
  id v15 = 0;
  unsigned int v5 = [a2 getResourceValue:&v15 forKey:NSURLCreationDateKey error:0];
  id v6 = v15;
  if (v5)
  {
    id v14 = 0;
    unsigned int v7 = [v4 getResourceValue:&v14 forKey:NSURLCreationDateKey error:0];
    id v8 = v14;
    if (v7)
    {
      [v6 timeIntervalSince1970];
      double v10 = v9;
      [v8 timeIntervalSince1970];
      if (v10 < v11) {
        int64_t v12 = 1;
      }
      else {
        int64_t v12 = -1;
      }
    }
    else
    {
      int64_t v12 = 0;
    }
  }
  else
  {
    int64_t v12 = 0;
    id v8 = 0;
  }

  return v12;
}

id isNSDictionary(void *a1)
{
  id v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    id v2 = v1;
  }
  else {
    id v2 = 0;
  }

  return v2;
}

id isNSArray(void *a1)
{
  id v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    id v2 = v1;
  }
  else {
    id v2 = 0;
  }

  return v2;
}

id isNSData(void *a1)
{
  id v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    id v2 = v1;
  }
  else {
    id v2 = 0;
  }

  return v2;
}

id isNSURL(void *a1)
{
  id v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    id v2 = v1;
  }
  else {
    id v2 = 0;
  }

  return v2;
}

id isNSDate(void *a1)
{
  id v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    id v2 = v1;
  }
  else {
    id v2 = 0;
  }

  return v2;
}

id dictionary_to_xml(uint64_t a1)
{
  id v1 = +[NSPropertyListSerialization dataWithPropertyList:a1 format:100 options:0 error:0];
  if (v1) {
    id v2 = [objc_alloc((Class)NSString) initWithData:v1 encoding:4];
  }
  else {
    id v2 = 0;
  }

  return v2;
}

uint64_t store_data(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  unsigned int v7 = v6;
  if (!v5 || !v6)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"store_data", 532, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    goto LABEL_11;
  }
  id v8 = +[NSFileManager defaultManager];
  unsigned __int8 v9 = [(NSFileManager *)v8 fileExistsAtPath:v5];

  id v10 = v5;
  int v11 = open_dprotected_np((const char *)[v10 fileSystemRepresentation], 1794, 4, 0);
  if (v11 == -1)
  {
    uint64_t v21 = __error();
    uint64_t v26 = strerror(*v21);
    MobileActivationError = createMobileActivationError((uint64_t)"store_data", 541, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create %@: %s", v10, v26);
LABEL_11:
    uint64_t v19 = MobileActivationError;
    int v12 = -1;
    if (!a3) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  int v12 = v11;
  if ((v9 & 1) != 0
    || (id v13 = v10, !chmod((const char *)[v13 fileSystemRepresentation], 0x1B6u)))
  {
    id v17 = v7;
    id v18 = (id)write(v12, [v17 bytes], (size_t)[v17 length]);
    if (v18 == [v17 length])
    {
      uint64_t v19 = 0;
      uint64_t v20 = 1;
LABEL_14:
      close(v12);
      uint64_t v22 = v20;
      goto LABEL_15;
    }
    id v24 = __error();
    id v27 = strerror(*v24);
    id v15 = createMobileActivationError((uint64_t)"store_data", 554, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to write data to %@: %s", v10, v27);
  }
  else
  {
    id v14 = __error();
    id v25 = strerror(*v14);
    id v15 = createMobileActivationError((uint64_t)"store_data", 548, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to update file permissions for %@: %s", v13, v25);
  }
  uint64_t v19 = v15;
  if (a3) {
LABEL_12:
  }
    *a3 = v19;
LABEL_13:
  uint64_t v20 = 0;
  uint64_t v22 = 0;
  if (v12 != -1) {
    goto LABEL_14;
  }
LABEL_15:

  return v22;
}

uint64_t store_dict(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  unsigned int v7 = v6;
  if (!v5 || !v6)
  {
    unsigned __int8 v9 = createMobileActivationError((uint64_t)"store_dict", 583, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input(s).");
    id v8 = 0;
    int v14 = -1;
    if (!a3) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  id v29 = 0;
  id v8 = +[NSPropertyListSerialization dataWithPropertyList:v6 format:200 options:0 error:&v29];
  unsigned __int8 v9 = (NSError *)v29;
  if (!v8)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"store_dict", 591, @"com.apple.MobileActivation.ErrorDomain", -1, v9, @"Failed to serialize dictionary.");
LABEL_17:
    id v24 = MobileActivationError;

    int v14 = -1;
    goto LABEL_20;
  }
  id v10 = +[NSFileManager defaultManager];
  unsigned __int8 v11 = [(NSFileManager *)v10 fileExistsAtPath:v5];

  id v12 = v5;
  int v13 = open_dprotected_np((const char *)[v12 fileSystemRepresentation], 1794, 4, 0);
  if (v13 == -1)
  {
    id v23 = __error();
    id v27 = strerror(*v23);
    MobileActivationError = createMobileActivationError((uint64_t)"store_dict", 600, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create %@: %s", v12, v27);
    goto LABEL_17;
  }
  int v14 = v13;
  if ((v11 & 1) != 0
    || (id v15 = v12, !chmod((const char *)[v15 fileSystemRepresentation], 0x1B6u)))
  {
    id v8 = v8;
    uint64_t v22 = (void *)write(v14, [(NSData *)v8 bytes], [(NSData *)v8 length]);
    if (v22 == (void *)[(NSData *)v8 length])
    {
      uint64_t v18 = 1;
      goto LABEL_11;
    }
    id v25 = __error();
    id v28 = strerror(*v25);
    id v17 = createMobileActivationError((uint64_t)"store_dict", 613, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to write data to %@: %s", v12, v28);
  }
  else
  {
    id v16 = __error();
    uint64_t v26 = strerror(*v16);
    id v17 = createMobileActivationError((uint64_t)"store_dict", 607, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to update file permissions for %@: %s", v15, v26);
  }
  id v24 = v17;

LABEL_20:
  unsigned __int8 v9 = v24;
  if (a3) {
LABEL_9:
  }
    *a3 = v9;
LABEL_10:
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  if (v14 != -1)
  {
LABEL_11:
    close(v14);
    uint64_t v19 = v18;
  }

  return v19;
}

NSMutableDictionary *load_dict(NSMutableDictionary *a1)
{
  if (a1)
  {
    a1 = +[NSMutableDictionary dictionaryWithContentsOfFile:a1];
    uint64_t v1 = vars8;
  }
  return a1;
}

id copy_process_name(uint64_t a1)
{
  int v1 = __chkstk_darwin(a1);
  bzero(buffer, 0x1000uLL);
  memset(v9, 0, sizeof(v9));
  if (v1
    && (id v2 = +[NSXPCConnection currentConnection]) != 0)
  {
    id v3 = v2;
    pid_t v4 = [(NSXPCConnection *)v2 processIdentifier];
  }
  else
  {
    pid_t v4 = getpid();
  }
  proc_pidpath(v4, buffer, 0x1000u);
  int v5 = strlen(buffer);
  if ((v5 & 0x80000000) == 0)
  {
    do
    {
      if (buffer[v5] == 47) {
        break;
      }
    }
    while (v5-- > 0);
  }
  __strlcpy_chk();
  id v7 = [objc_alloc((Class)NSString) initWithFormat:@"%s", v9];

  return v7;
}

NSInteger numberOfDaysBetweenDates(void *a1, id a2)
{
  id v3 = a2;
  pid_t v4 = v3;
  id v5 = 0;
  id v6 = 0;
  id v7 = 0;
  NSInteger v8 = 0;
  if (a1 && v3)
  {
    id v9 = a1;
    id v7 = +[NSCalendar currentCalendar];
    id v16 = 0;
    unsigned int v10 = [(NSCalendar *)v7 rangeOfUnit:16 startDate:&v16 interval:0 forDate:v9];

    id v5 = v16;
    if (v10)
    {
      id v15 = 0;
      unsigned int v11 = [(NSCalendar *)v7 rangeOfUnit:16 startDate:&v15 interval:0 forDate:v4];
      id v6 = v15;
      if (v11)
      {
        id v12 = [(NSCalendar *)v7 components:16 fromDate:v5 toDate:v6 options:0];
        if (v12)
        {
          int v13 = v12;
          NSInteger v8 = [(NSDateComponents *)v12 day];

          goto LABEL_9;
        }
      }
    }
    else
    {
      id v6 = 0;
    }
    NSInteger v8 = 0;
  }
LABEL_9:

  return v8;
}

NSMutableString *formatURLRequest(void *a1)
{
  id v1 = a1;
  id v2 = +[NSMutableString stringWithString:@"\n---------REQUEST START---------\n"];
  id v3 = [v1 URL];
  id v4 = [v3 description];
  [(NSMutableString *)v2 appendFormat:@"URL: %@\n", v4];

  id v5 = [v1 HTTPMethod];
  [(NSMutableString *)v2 appendFormat:@"METHOD: %@\n", v5];

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v6 = [v1 allHTTPHeaderFields];
  id v7 = [v6 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v18;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v18 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void *)(*((void *)&v17 + 1) + 8 * i);
        id v12 = [v1 valueForHTTPHeaderField:v11];
        [(NSMutableString *)v2 appendFormat:@"%@: %@\n", v11, v12];
      }
      id v8 = [v6 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v8);
  }

  id v13 = objc_alloc((Class)NSString);
  id v14 = [v1 HTTPBody];
  id v15 = [v13 initWithData:v14 encoding:4];
  [(NSMutableString *)v2 appendFormat:@"BODY: \n%@\n", v15];

  [(NSMutableString *)v2 appendString:@"----------REQUEST END----------\n"];

  return v2;
}

NSMutableString *formatURLResponse(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  id v7 = +[NSMutableString stringWithString:@"\n---------RESPONSE START---------\n"];
  id v8 = +[NSHTTPURLResponse localizedStringForStatusCode:a2];
  [(NSMutableString *)v7 appendFormat:@"HTTP Status Code: %ld (%s)\n", a2, [(NSString *)v8 UTF8String]];

  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v9 = v6;
  id v10 = [v9 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v19;
    do
    {
      for (i = 0; i != v11; i = (char *)i + 1)
      {
        if (*(void *)v19 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v14 = *(void *)(*((void *)&v18 + 1) + 8 * i);
        id v15 = [v9 objectForKeyedSubscript:v14];
        [(NSMutableString *)v7 appendFormat:@"%@: %@\n", v14, v15, (void)v18];
      }
      id v11 = [v9 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v11);
  }

  id v16 = [objc_alloc((Class)NSString) initWithData:v5 encoding:4];
  [(NSMutableString *)v7 appendFormat:@"BODY: \n%@\n", v16];

  [(NSMutableString *)v7 appendString:@"----------RESPONSE END----------\n"];

  return v7;
}

int main(int argc, const char **argv, const char **envp)
{
  memset(&v124, 0, sizeof(v124));
  CFDataRef v123 = 0;
  bzero(v132, 0x400uLL);
  uint64_t v4 = os_transaction_create();
  if (setiopolicy_np(9, 0, 1)) {
    main_cold_12();
  }
  [@"com.apple.mobileactivationd" UTF8String];
  if ((_set_user_dir_suffix() & 1) == 0) {
    main_cold_11();
  }
  signal(30, (void (__cdecl *)(int))1);
  id v5 = copy_system_container_path();
  id v6 = copy_group_container_path((uint64_t)[@"systemgroup.com.apple.regulatory_images" UTF8String]);
  id v7 = copy_group_container_path((uint64_t)[@"systemgroup.com.apple.pisco.suinfo" UTF8String]);
  id v8 = copy_group_container_path((uint64_t)[@"systemgroup.com.apple.mobileactivationd" UTF8String]);
  if (!v5 || !v6 || !v7 || !v8) {
    main_cold_10();
  }
  id v107 = (id)v4;
  context = v3;
  id v109 = v6;
  id v110 = v5;
  v131[0] = v5;
  v131[1] = v6;
  id v105 = v8;
  id v106 = v7;
  v131[2] = v7;
  v131[3] = v8;
  long long v119 = 0u;
  long long v120 = 0u;
  long long v121 = 0u;
  long long v122 = 0u;
  id obj = +[NSArray arrayWithObjects:v131 count:4];
  id v9 = [(NSArray *)obj countByEnumeratingWithState:&v119 objects:v130 count:16];
  if (v9)
  {
    id v10 = v9;
    id v11 = 0;
    uint64_t v12 = 0;
    id v13 = 0;
    uint64_t v14 = *(void *)v120;
    do
    {
      for (i = 0; i != v10; i = (char *)i + 1)
      {
        id v16 = v13;
        if (*(void *)v120 != v14) {
          objc_enumerationMutation(obj);
        }
        long long v17 = +[NSURL fileURLWithPath:*(void *)(*((void *)&v119 + 1) + 8 * i)];

        id v117 = 0;
        id v118 = 0;
        unsigned __int8 v18 = [(NSURL *)v17 getResourceValue:&v118 forKey:NSURLIsExcludedFromBackupKey error:&v117];
        id v13 = v118;

        long long v19 = (NSError *)v117;
        if ((v18 & 1) == 0) {
          main_cold_9(v19);
        }
        id v11 = v17;
        id v20 = isNSNumber(v13);
        if (v20
          && (long long v21 = v20, v22 = [v13 BOOLValue], v21, (v22 & 1) != 0))
        {
          uint64_t v12 = v19;
        }
        else
        {
          id v116 = v19;
          unsigned __int8 v23 = [(NSURL *)v11 setResourceValue:&__kCFBooleanTrue forKey:NSURLIsExcludedFromBackupKey error:&v116];
          uint64_t v12 = (NSError *)v116;

          if ((v23 & 1) == 0) {
            main_cold_8(v12);
          }
        }
      }
      id v10 = [(NSArray *)obj countByEnumeratingWithState:&v119 objects:v130 count:16];
    }
    while (v10);
  }
  else
  {
    id v11 = 0;
    uint64_t v12 = 0;
    id v13 = 0;
  }
  id v104 = v13;

  uid_t v24 = getuid();
  if (getpwuid_r(v24, &v124, v132, 0x400uLL, &v123) || !v123) {
    main_cold_7();
  }
  maLog((uint64_t)"main", 0, @"____________________ Mobile Activation Startup _____________________");
  id v25 = +[GestaltHlpr getSharedInstance];
  id v26 = [v25 copyAnswer:@"BuildVersion"];
  maLog((uint64_t)"main", 0, @"build_version: %@", v26);

  if (is_internal_build()) {
    id v27 = "true";
  }
  else {
    id v27 = "false";
  }
  maLog((uint64_t)"main", 0, @"internal_build: %s", v27);
  maLog((uint64_t)"main", 0, @"uid: %d", v123->pw_uid);
  maLog((uint64_t)"main", 0, @"user_name: %s", v123->pw_name);
  maLog((uint64_t)"main", 0, @"system_container_path: %@", v110);
  maLog((uint64_t)"main", 0, @"regulatory_images_path: %@", v109);
  id v28 = +[GestaltHlpr getSharedInstance];
  id v29 = [v28 copyAnswer:@"HWModelStr"];
  maLog((uint64_t)"main", 0, @"hardware_model: %@", v29);

  uint64_t v30 = get_device_type();
  maLog((uint64_t)"main", 0, @"product_type: %@", v30);

  uint64_t v31 = get_device_class();
  maLog((uint64_t)"main", 0, @"device_class: %@", v31);

  if (is_product_cellular()) {
    uint64_t v32 = "true";
  }
  else {
    uint64_t v32 = "false";
  }
  maLog((uint64_t)"main", 0, @"has_baseband: %s", v32);
  if (use_hactivation()) {
    uint64_t v33 = "true";
  }
  else {
    uint64_t v33 = "false";
  }
  maLog((uint64_t)"main", 0, @"should_hactivate: %s", v33);
  if (is_product_fpga()) {
    id v34 = "true";
  }
  else {
    id v34 = "false";
  }
  maLog((uint64_t)"main", 0, @"is_fpga: %s", v34);
  if (is_devfused_undemoted()) {
    uint64_t v35 = "true";
  }
  else {
    uint64_t v35 = "false";
  }
  maLog((uint64_t)"main", 0, @"is_devfused_undemoted: %s", v35);
  if (is_prodfused_demoted()) {
    uint64_t v36 = "true";
  }
  else {
    uint64_t v36 = "false";
  }
  maLog((uint64_t)"main", 0, @"is_prodfused_demoted: %s", v36);
  id v37 = copy_soc_generation();
  maLog((uint64_t)"main", 0, @"soc_generation: %@", v37);

  maLog((uint64_t)"main", 0, @"____________________________________________________________________");
  id v38 = copyMobileActivationSerialQueue();
  if (!v38) {
    main_cold_1();
  }
  id v39 = v38;
  uint64_t v40 = [DataArk alloc];
  id v41 = copy_data_ark_directory_path();
  id v42 = [(DataArk *)v40 initWithPath:v41];

  if (!v42) {
    main_cold_2();
  }
  id v43 = v42;
  uint64_t v102 = v39;
  if (is_internal_build())
  {
    id v44 = objc_alloc((Class)NSUserDefaults);
    id v45 = [v44 persistentDomainForName:@"com.apple.mobileactivationd"];

    id v46 = [v45 objectForKey:@"DeleteExistingUCRT"];
    id v47 = isNSNumber(v46);

    if (v47)
    {
      id v48 = [v45 objectForKey:@"DeleteExistingUCRT"];
      unsigned int v49 = [v48 BOOLValue];

      if (v49)
      {
        maLog((uint64_t)"perform_boot_initialization_tasks", 0, @"OVERRIDE: Deleting existing UCRT (OOB)");
        deleteUCRT((uint64_t)v43, 0);
        data_ark_remove(v43, 0, @"UCRTOOBForbidden");
      }
    }
    id v50 = [v45 objectForKey:@"UCRTHealingRequired"];
    id v51 = isNSNumber(v50);

    if (v51)
    {
      id v52 = [v45 objectForKey:@"UCRTHealingRequired"];
      unsigned int v53 = [v52 BOOLValue];

      if (v53)
      {
        maLog((uint64_t)"perform_boot_initialization_tasks", 0, @"OVERRIDE: Deleting existing UCRT (Healing)");
        deleteUCRT((uint64_t)v43, 0);
        data_ark_remove(v43, 0, @"UCRTOOBForbidden");
        data_ark_set(v43, 0, @"UCRTHealingRequired", &__kCFBooleanTrue, 1);
      }
    }
    id v54 = [v45 objectForKey:@"DeleteExistingDCRT"];
    id v55 = isNSNumber(v54);

    if (v55
      && (id v56 = [v45 objectForKey:@"DeleteExistingDCRT"],
          unsigned int v57 = [v56 BOOLValue],
          v56,
          v57))
    {
      maLog((uint64_t)"perform_boot_initialization_tasks", 0, @"OVERRIDE: Deleting existing DCRT");
      deleteDCRT((uint64_t)v43, 0, 0);
      data_ark_remove(v43, 0, @"DCRTOOBForbidden");
      id v129 = 0;
      char v58 = libaks_system_key_operate(9, 1, (NSError **)&v129);
      id v59 = v129;
      id v60 = v59;
      if ((v58 & 1) == 0
        && (mobileactivationErrorHasDomainAndErrorCode(v59, @"com.apple.MobileActivation.ErrorDomain", (id)0xFFFFFFFFFFFFFFFDLL) & 1) == 0)
      {
        maLog((uint64_t)"perform_boot_initialization_tasks", 0, @"Failed to bump DAK: %@", v60);
      }
      id v128 = v60;
      char v61 = libaks_system_key_operate(9, 2, (NSError **)&v128);
      id v62 = (NSError *)v128;

      if ((v61 & 1) == 0
        && (mobileactivationErrorHasDomainAndErrorCode(v62, @"com.apple.MobileActivation.ErrorDomain", (id)0xFFFFFFFFFFFFFFFDLL) & 1) == 0)
      {
        maLog((uint64_t)"perform_boot_initialization_tasks", 0, @"Failed to commit DAK: %@", v62);
      }
    }
    else
    {
      id v62 = 0;
    }
    id v65 = [v45 objectForKey:@"DeleteExistingSDCRT"];
    id v66 = isNSNumber(v65);

    if (!v66) {
      goto LABEL_68;
    }
    id v67 = [v45 objectForKey:@"DeleteExistingSDCRT"];
    unsigned int v68 = [v67 BOOLValue];

    if (!v68) {
      goto LABEL_68;
    }
    maLog((uint64_t)"perform_boot_initialization_tasks", 0, @"OVERRIDE: Deleting existing SDCRT");
    CFStringRef v138 = @"sdcrtAttestation";
    id v139 = &__kCFBooleanTrue;
    unsigned int v69 = +[NSDictionary dictionaryWithObjects:&v139 forKeys:&v138 count:1];
    deleteDCRT((uint64_t)v43, v69, 0);

    data_ark_remove(v43, 0, @"SDCRTOOBForbidden");
    id v127 = v62;
    char v70 = libaks_system_key_operate(10, 1, (NSError **)&v127);
    id v71 = v127;

    if ((v70 & 1) == 0
      && (mobileactivationErrorHasDomainAndErrorCode(v71, @"com.apple.MobileActivation.ErrorDomain", (id)0xFFFFFFFFFFFFFFFDLL) & 1) == 0)
    {
      id v72 = copyLoggingHandle();
      if (os_log_type_enabled(v72, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v71;
        _os_log_impl((void *)&_mh_execute_header, v72, OS_LOG_TYPE_DEFAULT, "Failed to bump SDAK: %@", (uint8_t *)&buf, 0xCu);
      }
    }
    id v126 = v71;
    char v73 = libaks_system_key_operate(10, 2, (NSError **)&v126);
    id v62 = (NSError *)v126;

    if ((v73 & 1) == 0)
    {
      uint64_t v63 = v43;
      if ((mobileactivationErrorHasDomainAndErrorCode(v62, @"com.apple.MobileActivation.ErrorDomain", (id)0xFFFFFFFFFFFFFFFDLL) & 1) == 0)maLog((uint64_t)"perform_boot_initialization_tasks", 0, @"Failed to commit SDAK: %@", v62); {
    }
      }
    else
    {
LABEL_68:
      uint64_t v63 = v43;
    }
    id v74 = [v45 objectForKey:@"DeleteExistingPCRT"];
    id v64 = v45;
    id v75 = isNSNumber(v74);

    if (v75
      && (id v76 = [v64 objectForKey:@"DeleteExistingPCRT"],
          unsigned int v77 = [v76 BOOLValue],
          v76,
          v77))
    {
      maLog((uint64_t)"perform_boot_initialization_tasks", 0, @"OVERRIDE: Deleting existing PCRT");
      id v78 = copy_suinfo_directory_path();
      id v79 = [v78 stringByAppendingPathComponent:@"psc.sui"];

      if (v79)
      {
        id v80 = +[NSFileManager defaultManager];
        [(NSFileManager *)v80 removeItemAtPath:v79 error:0];
      }
      data_ark_remove(v63, 0, @"PCRTToken");
      data_ark_remove(v63, 0, @"CollectionLastPerformed");
      data_ark_remove(v63, 0, @"PCRTCollectionString");
      data_ark_remove(v63, 0, @"PCRTCollectionStringBuild");
    }
    else
    {
      id v79 = 0;
    }
    id v103 = v79;
    CFPreferencesSetAppValue(@"DeleteExistingUCRT", kCFBooleanFalse, @"com.apple.mobileactivationd");
    CFPreferencesSetAppValue(@"UCRTHealingRequired", kCFBooleanFalse, @"com.apple.mobileactivationd");
    CFPreferencesSetAppValue(@"DeleteExistingPCRT", kCFBooleanFalse, @"com.apple.mobileactivationd");
    CFPreferencesSetAppValue(@"DeleteExistingDCRT", kCFBooleanFalse, @"com.apple.mobileactivationd");
    CFPreferencesSetAppValue(@"DeleteExistingSDCRT", kCFBooleanFalse, @"com.apple.mobileactivationd");
    CFPreferencesAppSynchronize(@"com.apple.mobileactivationd");
  }
  else
  {
    uint64_t v63 = v43;
    id v64 = 0;
    id v103 = 0;
    id v62 = 0;
  }
  unsigned __int8 v81 = (__CFString *)data_ark_copy(v63, 0, @"BootSessionUUID");
  id v82 = isNSString(v81);

  if (!v82)
  {

    unsigned __int8 v81 = &stru_100276C00;
  }
  id v83 = copy_bootsession_uuid();
  uint64_t v84 = v83;
  if (!v83)
  {
    id v88 = createMobileActivationError((uint64_t)"perform_boot_initialization_tasks", 152, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve boot session UUID.");
LABEL_85:

    id v86 = v88;
    char v85 = 0;
    id v87 = v86;
    goto LABEL_89;
  }
  if ([v83 isEqualToString:v81])
  {
    char v85 = 1;
    id v86 = v12;
    id v87 = v62;
    goto LABEL_89;
  }
  id v125 = v62;
  BOOL is_legacy = security_committed_uik_is_legacy(&v125);
  id v87 = (NSError *)v125;

  if (!is_legacy && v87)
  {
    id v88 = createMobileActivationError((uint64_t)"perform_boot_initialization_tasks", 159, @"com.apple.MobileActivation.ErrorDomain", -1, v87, @"Failed to query legacy UIK support.");
    id v62 = v87;
    goto LABEL_85;
  }
  if (is_legacy) {
    data_ark_set(v63, 0, @"UIKUpgradeRequired", &__kCFBooleanTrue, 1);
  }
  id v90 = copyRTCResetSerialQueue();
  *(void *)&long long buf = _NSConcreteStackBlock;
  *((void *)&buf + 1) = 3254779904;
  id v134 = __perform_boot_initialization_tasks_block_invoke;
  id v135 = &__block_descriptor_48_e8_32s40s_e5_v8__0l;
  id v91 = v63;
  id v136 = v91;
  id v137 = v84;
  dispatch_async(v90, &buf);

  data_ark_remove(v91, 0, @"UCRTOOBForbidden");
  data_ark_remove(v91, 0, @"UCRTOOBForbiddenCount");
  data_ark_remove(v91, 0, @"DCRTOOBForbidden");
  data_ark_remove(v91, 0, @"DCRTOOBForbiddenCount");
  data_ark_remove(v91, 0, @"SDCRTOOBForbidden");
  data_ark_remove(v91, 0, @"SDCRTOOBForbiddenCount");

  char v85 = 1;
  id v86 = v12;
LABEL_89:

  id v92 = v86;
  if ((v85 & 1) == 0) {
    main_cold_6(v92);
  }
  if (!data_migration_supported() || preSydroDataMigrationCompleted(v63))
  {
    id v115 = v92;
    char v93 = performMigration(v63, &v115);
    id v94 = (NSError *)v115;

    id v95 = v102;
    if ((v93 & 1) == 0) {
      main_cold_5(v94);
    }
    id v92 = v94;
    goto LABEL_94;
  }
  id v95 = v102;
  if (!data_migration_supported())
  {
LABEL_94:
    id v96 = v110;
    goto LABEL_95;
  }
  id v96 = v110;
  if ((preSydroDataMigrationCompleted(v63) & 1) == 0)
  {
    id v101 = dispatch_get_global_queue(0, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3254779904;
    block[2] = __main_block_invoke;
    block[3] = &__block_descriptor_48_e8_32s40s_e5_v8__0l;
    id v113 = v102;
    id v114 = v63;
    dispatch_async(v101, block);
  }
LABEL_95:
  id v97 = [[MobileActivationDaemon alloc] initWithContext:v63 Queue:v95];
  if (!v97) {
    main_cold_3();
  }
  CFDataRef v98 = v97;
  [@"com.apple.mobileactivationd" UTF8String];
  if ((os_variant_is_darwinos() & 1) == 0 && !init_lockdown_server(v98, v95)) {
    main_cold_4();
  }
  id v99 = [objc_alloc((Class)NSXPCListener) initWithMachServiceName:@"com.apple.mobileactivationd"];
  [v99 setDelegate:v98];
  [v99 resume];

  CFRunLoopRun();

  return 1;
}

void __main_block_invoke(uint64_t a1)
{
  DMPerformMigrationReturningAfterPlugin();
  id v3 = *(NSObject **)(a1 + 32);
  id v2 = *(void **)(a1 + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3254779904;
  block[2] = __main_block_invoke_2;
  block[3] = &__block_descriptor_40_e8_32s_e5_v8__0l;
  id v5 = v2;
  dispatch_sync(v3, block);
}

void __main_block_invoke_2(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v4 = 0;
  char v2 = performMigration(v1, &v4);
  id v3 = v4;
  if ((v2 & 1) == 0) {
    __main_block_invoke_2_cold_1(v3);
  }
}

void __perform_boot_initialization_tasks_block_invoke(uint64_t a1)
{
  int v2 = copyRTCResetCount();
  id v15 = 0;
  double v3 = copyMonotonicClockTimeInterval(&v15);
  id v4 = v15;
  if (v3 <= 0.0)
  {
    id v5 = copyLoggingHandle();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT)) {
      __perform_boot_initialization_tasks_block_invoke_cold_1((uint64_t)v4, v5);
    }
  }
  id v6 = (_UNKNOWN **)data_ark_copy(*(void **)(a1 + 32), 0, @"LastBootClockTime");
  id v7 = isNSNumber(v6);

  if (!v7)
  {

    id v6 = &off_10027EFA8;
  }
  id v8 = (NSNumber *)data_ark_copy(*(void **)(a1 + 32), 0, @"TotalRTCResetCount");
  id v9 = isNSNumber(v8);

  if (!v9)
  {

    id v8 = (NSNumber *)&off_10027EFA8;
  }
  if (v2 || v3 <= 0.0 || ([v6 doubleValue], v10 > 0.0) && (objc_msgSend(v6, "doubleValue"), v11 > v3))
  {
    uint64_t v12 = +[NSNumber numberWithUnsignedInt:[(NSNumber *)v8 unsignedIntValue] + 1];

    id v8 = v12;
  }
  data_ark_set(*(void **)(a1 + 32), 0, @"TotalRTCResetCount", v8, 1);
  id v13 = *(void **)(a1 + 32);
  uint64_t v14 = +[NSNumber numberWithDouble:v3];
  data_ark_set(v13, 0, @"LastBootClockTime", v14, 1);

  data_ark_set(*(void **)(a1 + 32), 0, @"BootSessionUUID", *(void **)(a1 + 40), 1);
}

void OUTLINED_FUNCTION_0_1()
{
}

uint64_t is_dsp_device()
{
  id v0 = +[GestaltHlpr getSharedInstance];
  id v1 = [v0 copyAnswer:@"SerialNumber"];

  if (v1 && (id v2 = objc_alloc_init((Class)NSMutableArray)) != 0)
  {
    double v3 = v2;
    if (is_internal_build())
    {
      id v4 = objc_alloc((Class)NSUserDefaults);
      id v5 = [v4 persistentDomainForName:@"com.apple.mobileactivationd"];

      id v6 = [v5 objectForKeyedSubscript:@"DSPList"];
      id v7 = isNSArray(v6);

      if (v7)
      {
        id v8 = [v5 objectForKeyedSubscript:@"DSPList"];
        [v3 addObjectsFromArray:v8];
      }
    }
    else
    {
      id v5 = 0;
    }
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v10 = v3;
    uint64_t v9 = (uint64_t)[v10 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v9)
    {
      uint64_t v11 = *(void *)v17;
      while (2)
      {
        for (uint64_t i = 0; i != v9; ++i)
        {
          if (*(void *)v17 != v11) {
            objc_enumerationMutation(v10);
          }
          id v13 = *(void **)(*((void *)&v16 + 1) + 8 * i);
          id v14 = isNSString(v13);

          if (v14 && (objc_msgSend(v13, "isEqualToString:", v1, (void)v16) & 1) != 0)
          {
            uint64_t v9 = 1;
            goto LABEL_19;
          }
        }
        uint64_t v9 = (uint64_t)[v10 countByEnumeratingWithState:&v16 objects:v20 count:16];
        if (v9) {
          continue;
        }
        break;
      }
    }
LABEL_19:
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

NSNumber *copyBridgeKey(void *a1, NSError **a2)
{
  id v3 = a1;
  if (is_virtual_machine() && (uint64_t v4 = remote_device_copy_unique_of_type()) != 0)
  {
    id v5 = (void *)v4;
    if (remote_device_get_state() == 2)
    {
      id v6 = v3;
      [v6 UTF8String];
      id v7 = (void *)remote_device_copy_property();
      id v8 = v7;
      if (v7)
      {
        if (xpc_get_type(v7) == (xpc_type_t)&_xpc_type_uint64)
        {
          uint64_t v9 = +[NSNumber numberWithUnsignedLongLong:xpc_uint64_get_value(v8)];
          if (v9) {
            goto LABEL_7;
          }
        }
        else
        {
          uint64_t v9 = (NSNumber *)_CFXPCCreateCFObjectFromXPCObject();
          if (v9)
          {
LABEL_7:
            id v10 = v9;
            uint64_t v11 = 0;
            goto LABEL_17;
          }
        }
        MobileActivationError = createMobileActivationError((uint64_t)"copyBridgeKey", 294, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to convert value.");
      }
      else
      {
        MobileActivationError = createMobileActivationError((uint64_t)"copyBridgeKey", 284, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve bridgeOS key: %@", v6);
      }
      uint64_t v11 = MobileActivationError;
      if (!a2) {
        goto LABEL_16;
      }
LABEL_10:
      uint64_t v11 = v11;
      id v10 = 0;
      *a2 = v11;
      goto LABEL_17;
    }
    uint64_t v11 = createMobileActivationError((uint64_t)"copyBridgeKey", 278, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Remote device not connected yet.");
  }
  else
  {
    uint64_t v11 = createMobileActivationError((uint64_t)"copyBridgeKey", 273, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to connect to remote device.");
    id v5 = 0;
  }
  id v8 = 0;
  if (a2) {
    goto LABEL_10;
  }
LABEL_16:
  id v10 = 0;
LABEL_17:

  return v10;
}

uint64_t bridge_call(int a1, void *a2, uint64_t a3)
{
  return bridge_call_and_response_internal(a1, a2, 0, a3);
}

uint64_t bridge_call_and_response_internal(int a1, id a2, void *a3, uint64_t a4)
{
  id v7 = a2;
  if (!v7)
  {
    uint64_t v11 = createMobileActivationError((uint64_t)"bridge_call_and_response_internal", 162, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"Invalid input.");
    id v9 = 0;
    id v8 = 0;
    goto LABEL_10;
  }
  id v8 = [objc_alloc((Class)NSMutableDictionary) initWithDictionary:v7];
  if (!v8)
  {
    uint64_t v11 = createMobileActivationError((uint64_t)"bridge_call_and_response_internal", 168, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create dictionary.");
    id v9 = 0;
    goto LABEL_10;
  }
  id v9 = copy_calling_process_name();
  if (!v9)
  {
    uint64_t v11 = createMobileActivationError((uint64_t)"bridge_call_and_response_internal", 174, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve process name.");
LABEL_10:
    id v29 = 0;
    xpc_object_t v12 = 0;
    a3 = 0;
    id v13 = 0;
    xpc_object_t v14 = 0;
    id v15 = 0;
    if (!a4) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  [v8 setObject:v9 forKeyedSubscript:@"HostProcessName"];
  uint64_t v28 = a4;
  id v29 = v9;
  if (a1 == 1)
  {
    id v10 = kMARecoveryLogBridgeConnectionID;
  }
  else
  {
    if (a1)
    {
      uint64_t v11 = 0;
LABEL_24:
      unsigned __int8 v23 = createMobileActivationError((uint64_t)"bridge_call_and_response_internal", 194, @"com.apple.MobileActivation.ErrorDomain", -1, v11, @"Failed to create remote connection.");

      id v9 = 0;
      xpc_object_t v12 = 0;
      a3 = 0;
      id v13 = 0;
      xpc_object_t v14 = 0;
      id v15 = 0;
      goto LABEL_33;
    }
    id v10 = kMABridgeConnectionID;
  }
  long long v16 = *v10;
  id v30 = 0;
  id v15 = copyRemoteServiceConnection(v16, (NSError **)&v30);
  id v17 = v30;
  long long v18 = v17;
  if (v15)
  {
    id v19 = v15;
    id v20 = 0;
  }
  else
  {
    id v20 = v17;
  }

  uint64_t v11 = (NSError *)v20;
  if (!v15) {
    goto LABEL_24;
  }
  id v13 = (void *)_CFXPCCreateXPCObjectFromCFObject();
  if (!v13)
  {
    unsigned __int8 v23 = createMobileActivationError((uint64_t)"bridge_call_and_response_internal", 200, @"com.apple.MobileActivation.ErrorDomain", -1, v11, @"Failed to create XPC dictionary (%@).", v8);

    id v9 = 0;
    xpc_object_t v12 = 0;
LABEL_27:
    a3 = 0;
LABEL_32:
    xpc_object_t v14 = 0;
    goto LABEL_33;
  }
  xpc_object_t v12 = xpc_dictionary_create(0, 0, 0);
  if (!v12)
  {
    unsigned __int8 v23 = createMobileActivationError((uint64_t)"bridge_call_and_response_internal", 206, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create xpc dictionary.");

    id v9 = 0;
    goto LABEL_27;
  }
  xpc_dictionary_set_value(v12, (const char *)[@"BridgeXPCRequestEncodedDictionary" UTF8String], v13);
  if (!a3)
  {
    xpc_remote_connection_send_message();
    xpc_object_t v14 = 0;
    id v9 = 0;
LABEL_29:
    a4 = 1;
    goto LABEL_35;
  }
  id v27 = a3;
  long long v21 = (void *)xpc_remote_connection_send_message_with_reply_sync();
  a3 = v21;
  if (!v21)
  {
    unsigned __int8 v23 = createMobileActivationError((uint64_t)"bridge_call_and_response_internal", 215, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to receive XPC reply.");

    goto LABEL_31;
  }
  if (xpc_get_type(v21) != (xpc_type_t)&_xpc_type_dictionary)
  {
    unsigned __int8 v22 = xpc_copy_description(a3);
    unsigned __int8 v23 = createMobileActivationError((uint64_t)"bridge_call_and_response_internal", 221, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Unexpected message: %s", v22);

    free(v22);
LABEL_31:
    id v9 = 0;
    goto LABEL_32;
  }
  xpc_object_t v14 = xpc_dictionary_get_value(a3, (const char *)[@"BridgeXPCResponseEncodedDictionary" UTF8String]);
  if (v14)
  {
    id v9 = (id)_CFXPCCreateCFObjectFromXPCObject();
    id v26 = isNSDictionary(v9);

    if (v26)
    {
      id v9 = v9;
      *id v27 = v9;
      goto LABEL_29;
    }
    unsigned __int8 v23 = createMobileActivationError((uint64_t)"bridge_call_and_response_internal", 234, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create dictionary from XPC message.");
  }
  else
  {
    unsigned __int8 v23 = createMobileActivationError((uint64_t)"bridge_call_and_response_internal", 228, @"com.apple.MobileActivation.ErrorDomain", -2, 0, @"XPC message missing key (%@) : %@", @"BridgeXPCRequestEncodedDictionary", a3);

    id v9 = 0;
  }
LABEL_33:
  uint64_t v11 = v23;
  a4 = v28;
  if (v28)
  {
LABEL_34:
    uint64_t v11 = v11;
    uid_t v24 = (void *)a4;
    a4 = 0;
    void *v24 = v11;
  }
LABEL_35:

  return a4;
}

id bridge_call_and_response(int a1, void *a2, void *a3)
{
  id v9 = 0;
  id v10 = 0;
  int v4 = bridge_call_and_response_internal(a1, a2, &v10, (uint64_t)&v9);
  id v5 = v10;
  id v6 = v9;
  id v7 = 0;
  if (v4) {
    id v7 = v5;
  }
  if (a3 && !v7) {
    *a3 = v6;
  }

  return v7;
}

id copyRemoteServiceConnection(void *a1, NSError **a2)
{
  id v3 = a1;
  dispatch_semaphore_t v4 = dispatch_semaphore_create(0);
  if (!v4)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"copyRemoteServiceConnection", 35, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create semaphore.");
    goto LABEL_8;
  }
  if (!is_virtual_machine() || (uint64_t v5 = remote_device_copy_unique_of_type()) == 0)
  {
    MobileActivationError = createMobileActivationError((uint64_t)"copyRemoteServiceConnection", 49, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to connect to remote device.");
LABEL_8:
    uint64_t v11 = MobileActivationError;
    id v6 = 0;
    goto LABEL_9;
  }
  id v6 = (void *)v5;
  id v7 = dispatch_get_global_queue(0, 0);
  unsigned __int8 v23 = v4;
  remote_device_set_connected_callback();

  dispatch_time_t v8 = dispatch_time(0, 60000000000);
  if (dispatch_semaphore_wait(v23, v8))
  {
    id v9 = createMobileActivationError((uint64_t)"copyRemoteServiceConnection", 60, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Remote device not connected after %d seconds.", 60, v20, v21, _NSConcreteStackBlock, 3254779904, __copyRemoteServiceConnection_block_invoke, &__block_descriptor_40_e8_32s_e26_v16__0__OS_remote_device_8l);
LABEL_17:
    uint64_t v11 = v9;
LABEL_9:
    xpc_object_t v12 = 0;
    if (a2)
    {
LABEL_10:
      uint64_t v11 = v11;
      id v13 = 0;
      *a2 = v11;
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (remote_device_get_state() != 2)
  {
    id v9 = createMobileActivationError((uint64_t)"copyRemoteServiceConnection", 65, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Remote device not connected after %d seconds.", 60, v20, v21, _NSConcreteStackBlock, 3254779904, __copyRemoteServiceConnection_block_invoke, &__block_descriptor_40_e8_32s_e26_v16__0__OS_remote_device_8l);
    goto LABEL_17;
  }
  id v14 = v3;
  [v14 UTF8String];
  uint64_t v15 = remote_device_copy_service();
  if (!v15)
  {
    uint64_t v17 = *__error();
    long long v18 = __error();
    unsigned __int8 v22 = strerror(*v18);
    id v9 = createMobileActivationError((uint64_t)"copyRemoteServiceConnection", 71, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to connect to remote service %@: %d (%s)", v14, v17, v22, _NSConcreteStackBlock, 3254779904, __copyRemoteServiceConnection_block_invoke, &__block_descriptor_40_e8_32s_e26_v16__0__OS_remote_device_8l);
    goto LABEL_17;
  }
  xpc_object_t v12 = (void *)v15;
  long long v16 = dispatch_get_global_queue(25, 0);
  id v13 = (void *)xpc_remote_connection_create_with_remote_service();

  if (v13)
  {
    xpc_remote_connection_set_event_handler();
    xpc_remote_connection_activate();
    uint64_t v11 = 0;
    goto LABEL_20;
  }
  uint64_t v11 = createMobileActivationError((uint64_t)"copyRemoteServiceConnection", 77, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create remote connection.");
  if (a2) {
    goto LABEL_10;
  }
LABEL_19:
  id v13 = 0;
LABEL_20:

  return v13;
}

intptr_t __copyRemoteServiceConnection_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id copyReverseProxyDictionary(void *a1, uint64_t a2, NSError **a3)
{
  id v5 = a1;
  id v6 = objc_alloc_init((Class)NSMutableDictionary);
  if (!v6)
  {
    dispatch_time_t v8 = createMobileActivationError((uint64_t)"copyReverseProxyDictionary", 31, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create dictionary.");
    id v9 = 0;
    id v7 = 0;
    id v10 = 0;
    if (a3) {
      goto LABEL_14;
    }
LABEL_5:
    id v11 = 0;
    goto LABEL_15;
  }
  if (v5) {
    id v7 = [objc_alloc((Class)NSURL) initWithString:v5];
  }
  else {
    id v7 = 0;
  }
  CFStringRef v21 = @"TestReachability";
  xpc_object_t v12 = +[NSNumber numberWithBool:a2];
  unsigned __int8 v22 = v12;
  id v10 = +[NSDictionary dictionaryWithObjects:&v22 forKeys:&v21 count:1];

  RPSetLogLevel();
  id v13 = (void *)RPCopyProxyDictionaryWithOptions();
  id v9 = v13;
  if (v13)
  {
    id v14 = [v13 objectForKeyedSubscript:@"SOCKSProxy"];
    if (v14)
    {
      uint64_t v15 = v14;
      id v16 = [v9 objectForKeyedSubscript:@"SOCKSPort"];

      if (v16)
      {
        id v17 = [v9 objectForKeyedSubscript:@"SOCKSProxy"];
        [v6 setObject:v17 forKeyedSubscript:@"SOCKSProxyHost"];

        id v18 = [v9 objectForKeyedSubscript:@"SOCKSPort"];
        [v6 setObject:v18 forKeyedSubscript:@"SOCKSProxyPort"];

        id v11 = v6;
        dispatch_time_t v8 = 0;
        goto LABEL_15;
      }
    }
    MobileActivationError = createMobileActivationError((uint64_t)"copyReverseProxyDictionary", 49, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Invalid proxy dictionary.");
  }
  else
  {
    MobileActivationError = createMobileActivationError((uint64_t)"copyReverseProxyDictionary", 44, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy proxy dictionary (proxy likely not running on host).");
  }
  dispatch_time_t v8 = MobileActivationError;
  if (!a3) {
    goto LABEL_5;
  }
LABEL_14:
  dispatch_time_t v8 = v8;
  id v11 = 0;
  *a3 = v8;
LABEL_15:

  return v11;
}

void *sub_100066514(void *result)
{
  *Class result = ++qword_100284A08;
  return result;
}

uint64_t sub_100066530(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  NDR_record_t v34 = NDR_record;
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0;
              int v22 = *(_DWORD *)&v34.mig_vers;
              *a3 = v38;
              long long v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              long long v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              long long v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              long long v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }
        else
        {
          uint64_t v20 = 4294966996;
        }
      }
      else
      {
        uint64_t v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_10006678C(mach_port_t a1, unsigned int a2, long long *a3)
{
  long long v4 = a3[5];
  long long v19 = a3[4];
  long long v20 = v4;
  long long v5 = a3[7];
  long long v21 = a3[6];
  long long v22 = v5;
  long long v6 = a3[1];
  long long v15 = *a3;
  long long v16 = v6;
  long long v7 = a3[3];
  long long v17 = a3[2];
  NDR_record_t v13 = NDR_record;
  unsigned int v14 = a2;
  long long v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_10006691C(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  NDR_record_t v22 = NDR_record;
  *(_DWORD *)long long v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }
        else
        {
          uint64_t v14 = 4294966996;
        }
      }
      else
      {
        uint64_t v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_100066B0C(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if (v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }
      uint64_t v12 = 4294966996;
    }
    else
    {
      uint64_t v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_100066C88(uint64_t a1)
{
  id v1 = (unint64_t *)*(&off_10026C690
                           + ((-113 * ((qword_100283A78 + dword_100283B38) ^ 0xEA)) ^ byte_1002188D0[byte_100214630[(-113 * ((qword_100283A78 + dword_100283B38) ^ 0xEA))] ^ 0x20])
                           - 9);
  id v2 = (unint64_t *)*(&off_10026C690
                           + ((-113 * ((qword_100283A78 + *v1) ^ 0xEA)) ^ byte_10021E6E0[byte_1002186D0[(-113 * ((qword_100283A78 + *v1) ^ 0xEA))] ^ 0x69])
                           + 32);
  unint64_t v3 = 1932141199 * ((unint64_t)&v5[*v1 + *v2] ^ 0xA437147DE07F15EALL);
  *id v1 = v3;
  *id v2 = v3;
  v6[1] = (3804331 * (((v6 | 0x9ADC4F9B) - (v6 & 0x9ADC4F9B)) ^ 0xE4096A6D)) ^ 0x203;
  uint64_t v7 = a1;
  LOBYTE(v1) = -113 * (*(_DWORD *)v1 ^ 0xEA ^ *(_DWORD *)v2);
  (*(void (**)(_DWORD *))((char *)*(&off_10026C690
                                             + ((-113 * ((qword_100283A78 - dword_100283B38) ^ 0xEA)) ^ byte_10021E6E0[byte_1002186D0[(-113 * ((qword_100283A78 - dword_100283B38) ^ 0xEA))] ^ 0xB6])
                                             - 71)
                                   + 8
                                   * (byte_1002188D4[(byte_100214638[v1 - 8] ^ 0x83)
                                                                                  - 4] ^ v1)
                                   + 17332))(v6);
  return v6[0];
}

uint64_t sub_100066E78(uint64_t a1)
{
  id v1 = *(&off_10026C690
       + ((-113 * ((qword_100283A78 - dword_100283AE0) ^ 0xEA)) ^ byte_100214730[byte_1002113C0[(-113 * ((qword_100283A78 - dword_100283AE0) ^ 0xEA))] ^ 0xBB])
       - 70);
  id v2 = *(&off_10026C690
       + (byte_100218ADC[(byte_100214830[(-113 * ((qword_100283A78 + *v1) ^ 0xEA))] ^ 0x62)
                                        - 12] ^ (-113 * ((qword_100283A78 + *v1) ^ 0xEA)))
       - 20);
  unint64_t v3 = (*v2 - *v1) ^ (unint64_t)&v5;
  *id v1 = 1932141199 * v3 + 0x5BC8EB821F80EA16;
  *id v2 = 1932141199 * (v3 ^ 0xA437147DE07F15EALL);
  unsigned int v7 = (235795823 * ((&v6 & 0xFBBFBC65 | ~(&v6 | 0xFBBFBC65)) ^ 0x90ED0AC3)) ^ 0x12D;
  uint64_t v6 = a1;
  LOBYTE(v2) = -113 * (*(_DWORD *)v1 ^ 0xEA ^ *(_DWORD *)v2);
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_10026C690
                                                        + ((-113
                                                                                         * ((qword_100283A78
                                                                                           - dword_100283AE0) ^ 0xEA)) ^ byte_100214730[byte_1002113C0[(-113 * ((qword_100283A78 - dword_100283AE0) ^ 0xEA))] ^ 0x85])
                                                        + 29)
                                              + 8
                                              * (byte_1002187D8[(byte_100214530[v2] ^ 0xAF)
                                                                                             - 8] ^ v2)
                                              + 18956))(&v6);
}

uint64_t sub_10006706C(unsigned int a1)
{
  return byte_10021E7E8[(byte_1002189D8[a1 - 8] ^ 0x66) - 8] ^ a1;
}

uint64_t sub_10006709C(char a1, unsigned int a2)
{
  return byte_100218ADC[(byte_100214830[a2] ^ a1) - 12] ^ a2;
}

uint64_t sub_1000670C8(unsigned int a1)
{
  return byte_100218ADC[(byte_100214830[a1] ^ 0x8C) - 12] ^ a1;
}

uint64_t sub_1000670F8(unsigned int a1)
{
  return byte_10021E6E0[byte_1002186D0[a1] ^ 0x48] ^ a1;
}

uint64_t sub_100067124(unsigned int a1)
{
  return byte_1002187D8[(byte_100214530[a1] ^ 0x2F) - 8] ^ a1;
}

uint64_t sub_100067154(unsigned int a1)
{
  return byte_10021E6E0[byte_1002186D0[a1] ^ 0xB6] ^ a1;
}

uint64_t VLxCLgDpiF(int a1)
{
  uint64_t v1 = (uint64_t)*(&off_10026C690
                + ((-113 * ((qword_100283A78 + dword_100283B88) ^ 0xEA)) ^ byte_1002188D0[byte_100214630[(-113 * ((qword_100283A78 + dword_100283B88) ^ 0xEA))] ^ 0x20])
                - 34);
  uint64_t v2 = *(void *)(v1 - 4);
  unint64_t v3 = *(&off_10026C690
       + (byte_1002188D4[(byte_100214638[(-113 * ((qword_100283A78 + v2) ^ 0xEA)) - 8] ^ 0x83)
                                        - 4] ^ (-113 * ((qword_100283A78 + v2) ^ 0xEA)))
       - 173);
  uint64_t v4 = (*v3 ^ v2) - (void)&v6;
  *(void *)(v1 - 4) = 1932141199 * v4 - 0x5BC8EB821F80EA16;
  void *v3 = 1932141199 * (v4 ^ 0xA437147DE07F15EALL);
  v7[2] = -1543737703 * ((v7 - 664868972 - 2 * ((unint64_t)v7 & 0xD85EE794)) ^ 0xA6AAB7E8)
        + 368378341 * a1
        + 1707427049;
  v7[0] = 1524 - 1543737703 * ((v7 - 664868972 - 2 * ((unint64_t)v7 & 0xD85EE794)) ^ 0xA6AAB7E8);
  LOBYTE(v3) = -113 * ((*(_DWORD *)v3 + *(_DWORD *)(v1 - 4)) ^ 0xEA);
  (*(void (**)(_DWORD *))((char *)*(&off_10026C690
                                             + ((-113
                                                                              * ((qword_100283A78 - dword_100283B88) ^ 0xEA)) ^ byte_100214730[byte_1002113C0[(-113 * ((qword_100283A78 - dword_100283B88) ^ 0xEA))] ^ 0x85])
                                             + 29)
                                   + 8
                                   * (byte_100218ADC[(byte_100214830[v3] ^ 0x62)
                                                                                  - 12] ^ v3)
                                   + 18820))(v7);
  return v7[1] ^ 0xDE6BE0E6;
}

uint64_t sub_1000673A8(uint64_t a1)
{
  uint64_t v1 = (unint64_t *)*(&off_10026C690
                           + ((-113 * ((qword_100283A78 - dword_100283B30) ^ 0xEA)) ^ byte_100214730[byte_1002113C0[(-113 * ((qword_100283A78 - dword_100283B30) ^ 0xEA))] ^ 0xBB])
                           - 140);
  uint64_t v2 = (unint64_t *)*(&off_10026C690
                           + (byte_10021E7E0[byte_1002189D0[(-113
                                                                                             * ((qword_100283A78 - *v1) ^ 0xEA))] ^ 0x9D] ^ (-113 * ((qword_100283A78 - *v1) ^ 0xEA)))
                           - 71);
  unint64_t v3 = 1932141199 * ((unint64_t)&v5[*v1 + *v2] ^ 0xA437147DE07F15EALL);
  *uint64_t v1 = v3;
  *uint64_t v2 = v3;
  int v6 = (235795823 * ((&v6 + 1969711254 - 2 * ((unint64_t)&v6 & 0x75676896)) ^ 0xE1CA21CF)) ^ 0x43B;
  uint64_t v7 = a1;
  LOBYTE(v2) = -113 * ((*(_DWORD *)v2 - *(_DWORD *)v1) ^ 0xEA);
  return (*(uint64_t (**)(int *))((char *)*(&off_10026C690
                                                    + ((-113
                                                                       * (dword_100283B30 ^ 0xEA ^ qword_100283A78)) ^ byte_1002188D0[byte_100214630[(-113 * (dword_100283B30 ^ 0xEA ^ qword_100283A78))] ^ 0x83])
                                                    - 175)
                                          + 8
                                          * (v2 ^ byte_10021E7E0[byte_1002189D0[v2] ^ 0x9D])
                                          + 17812))(&v6);
}

uint64_t sub_100067598(unsigned int a1)
{
  return aQ5g[(byte_1002113C8[a1 - 8] ^ 0x85) - 4] ^ a1;
}

uint64_t sub_1000675C8(unsigned int a1)
{
  return byte_10021E7E8[(byte_1002189D8[a1 - 8] ^ 0x9D) - 8] ^ a1;
}

uint64_t sub_1000675F8(unsigned int a1)
{
  return byte_10021E6E0[byte_1002186D0[a1] ^ 0x69] ^ a1;
}

uint64_t sub_100067624(unsigned int a1)
{
  return aQ5g[(byte_1002113C8[a1 - 8] ^ 0xBB) - 4] ^ a1;
}

uint64_t sub_100067654(unsigned int a1)
{
  return byte_1002187D8[(byte_100214530[a1] ^ 0xAF) - 8] ^ a1;
}

uint64_t XtCqEf5X(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(&off_10026C690
       + (aQ5g[(byte_1002113C8[(-113 * ((qword_100283A78 - dword_100283A80) ^ 0xEA))
                                              - 8] ^ 0x5A)
                              - 4] ^ (-113 * ((qword_100283A78 - dword_100283A80) ^ 0xEA)))
       - 104);
  uint64_t v5 = *(&off_10026C690
       + (byte_100218ADC[(byte_100214830[(-113 * ((qword_100283A78 - *v4) ^ 0xEA))] ^ 0x8C)
                                        - 12] ^ (-113 * ((qword_100283A78 - *v4) ^ 0xEA)))
       - 122);
  unint64_t v6 = (unint64_t)&v8[*v5 ^ *v4];
  *uint64_t v4 = 1932141199 * v6 + 0x5BC8EB821F80EA16;
  *uint64_t v5 = 1932141199 * (v6 ^ 0xA437147DE07F15EALL);
  unsigned int v9 = 2196 - 241568881 * (&v9 ^ 0xD6110442);
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  uint64_t v10 = a1;
  uint64_t v11 = a4;
  LOBYTE(v5) = -113 * ((*(_DWORD *)v5 - *(_DWORD *)v4) ^ 0xEA);
  (*(void (**)(unsigned int *))((char *)*(&off_10026C690
                                                   + ((-113
                                                                      * ((qword_100283A78 + dword_100283A80) ^ 0xEA)) ^ byte_1002187D0[byte_100214530[(-113 * ((qword_100283A78 + dword_100283A80) ^ 0xEA))] ^ 3])
                                                   - 74)
                                         + 8
                                         * (byte_10021E7E8[(byte_1002189D8[v5 - 8] ^ 0x66)
                                                                                        - 8] ^ v5)
                                         + 17364))(&v9);
  return v12 ^ 0xDE6BE0E6;
}

uint64_t sub_100067874(char a1, unsigned int a2)
{
  return byte_10021E6E0[(byte_1002186D0[a2] ^ a1)] ^ a2;
}

uint64_t sub_1000678A0(unsigned int a1)
{
  return byte_10021E6E0[byte_1002186D0[a1] ^ 0xB9] ^ a1;
}

uint64_t sub_1000678CC(char a1, unsigned int a2)
{
  return byte_1002187D8[(byte_100214530[a2] ^ a1) - 8] ^ a2;
}

uint64_t sub_1000678F8(unsigned int a1)
{
  return byte_1002187D8[(byte_100214530[a1] ^ 3) - 8] ^ a1;
}

uint64_t sub_100067924(char a1, unsigned int a2)
{
  return byte_1002188D4[(byte_100214638[a2 - 8] ^ a1) - 4] ^ a2;
}

uint64_t sub_100067950(unsigned int a1)
{
  return byte_1002188D4[(byte_100214638[a1 - 8] ^ 0x20) - 4] ^ a1;
}

uint64_t sub_10006797C(char a1, unsigned int a2)
{
  return byte_10021E7E8[(byte_1002189D8[a2 - 8] ^ a1) - 8] ^ a2;
}

uint64_t sub_1000679A8(char a1, unsigned int a2)
{
  return aQ5g[(byte_1002113C8[a2 - 8] ^ a1) - 4] ^ a2;
}

uint64_t sub_1000679D4(unsigned int a1)
{
  return byte_100218ADC[(byte_100214830[a1] ^ 0x62) - 12] ^ a1;
}

uint64_t sub_100067A04(unsigned int a1)
{
  return byte_1002188D4[(byte_100214638[a1 - 8] ^ 0x83) - 4] ^ a1;
}

uint64_t sub_100067A34(unsigned int a1)
{
  return aQ5g[(byte_1002113C8[a1 - 8] ^ 0x5A) - 4] ^ a1;
}

uint64_t sub_100067A64(unsigned int a1)
{
  return byte_10021E6E0[byte_1002186D0[a1] ^ 0x55] ^ a1;
}

uint64_t sub_100067A90(uint64_t result)
{
  uint64_t v1 = *(void *)result;
  int v2 = *(_DWORD *)(result + 8) ^ (235795823 * ((2 * (result & 0x2C7AE860) - result + 1401231263) ^ 0xC7285EC6));
  *(_DWORD *)(v1 - 0xB999BAB1C512023) = ((v2 & 0x1FF ^ 0x10070F)
                                         + (v2 & 0x90 ^ 0xE7636090)
                                         - ((v2 & 0x1FF ^ 0x10070F) & 0x100690)) ^ 0x50AFD38;
  *(void *)(v1 - 0xB999BAB1C512043) = 0x6CAA79AEDFF50366;
  *(_DWORD *)(v1 - 0xB999BAB1C512027) = 1491164578;
  int v3 = v2 ^ 0x2E;
  if (v3 == 1)
  {
    int v4 = 1491164594;
    goto LABEL_5;
  }
  if (v3 == 2)
  {
    *(_DWORD *)(v1 - 0xB999BAB1C51202BLL) = -1684979659;
    int v4 = 1491164598;
LABEL_5:
    *(void *)(v1 - 0xB999BAB1C51203BLL) = 0xB78E0A4C3F0682C4;
    *(void *)(v1 - 0xB999BAB1C512033) = 0x4871F5B3C0F97D3BLL;
    *(_DWORD *)(v1 - 0xB999BAB1C512027) = v4;
  }
  *(_DWORD *)(result + 16) = 453445646;
  return result;
}

void sub_100067C0C(uint64_t a1)
{
  int v1 = 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 32) - 0x4E07305EAF801B1FLL) + 491918637;
  unsigned int v3 = *(_DWORD *)(a1 + 8) - v1 + 1296166826;
  BOOL v4 = v2 < 0x550D5C59;
  BOOL v5 = v2 > v3;
  if (v3 < 0x550D5C59 != v4) {
    BOOL v5 = v4;
  }
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100067CF8@<X0>(int a1@<W0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27)
{
  BOOL v34 = v27 < v29;
  *(&a27 + (a2 - 1456016381)) = 17 * (v31 ^ 0xBB)
                                            + *(unsigned char *)(v33 + (v28 + v30))
                                            - ((2 * *(unsigned char *)(v33 + (v28 + v30))) & 0xEF)
                                            + 68;
  unsigned int v35 = v28 + 1 + a1;
  int v36 = v34 ^ (v35 < v29);
  BOOL v37 = v35 < v27;
  if (!v36) {
    BOOL v34 = v37;
  }
  return (*(uint64_t (**)(void))(v32 + 8 * ((112 * v34) ^ v31)))();
}

uint64_t sub_100067D7C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((v4 < ((a4 - 1658) | 0x2Cu) - 268) * (((a4 + 1582133837) & 0xA1B2877F) - 107)) ^ a4)))();
}

uint64_t sub_100067DCC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1434 * (((11 * (v2 ^ 0x238)) ^ 0x84B21478) + a1 < (v2 ^ 0x238u) + 1021 + v1)) ^ v2)))();
}

uint64_t sub_100067E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * ((1283
                                * (a21 - *(_DWORD *)(a2 + 4) + 1370577857 == ((((v21 + 474) | 0xA8) + 601342828) ^ v21 ^ 0xA3))) ^ v21)))();
}

uint64_t sub_100067E84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v9 = a1 + 1;
  *int v2 = (v1 + v9 + v5) * ((v3 + v9) ^ v4);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v9 == 31) * v6) ^ v8)))();
}

uint64_t sub_100068184(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(v6 + 8 * (v7 + 1961)))(a1, 0);
  if (result == 16)
  {
    v3 += 3;
    goto LABEL_7;
  }
  if (result == 12)
  {
LABEL_7:
    uint64_t result = (*(uint64_t (**)(uint64_t))(v6 + 8 * (v4 ^ 0xB76)))(a1);
    int v10 = v3;
    goto LABEL_8;
  }
  if (result)
  {
    v3 += 2;
    goto LABEL_7;
  }
  *char v5 = a1;
  int v10 = 481369318;
LABEL_8:
  *char v1 = v10 ^ v2;
  return result;
}

uint64_t sub_10006820C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((30 * (v1 == 1704253533)) ^ 0x5EBu)))();
}

void sub_10006823C(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (69008221 * ((-2 - ((a1 | 0xFC1C80D3) + (~a1 | 0x3E37F2C))) ^ 0xD0412D26));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000682E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42)
{
  *(void *)(*(void *)(a17 + 96) + 504) = v42 + 1;
  *(_DWORD *)(*(void *)(a17 + 96) + 496) = a19 - 1;
  int v45 = 235795823 * ((((v44 - 152) | 0x8A773861) - (v44 - 152) + ((v44 - 152) & 0x7588C798)) ^ 0x1EDA7138);
  *(_DWORD *)(v44 - 144) = v45 ^ 0x78F2562C;
  *(_DWORD *)(v44 - 140) = v45 - 1882357464;
  *(void *)(v44 - 152) = &STACK[0xB999BAB1C51213F];
  uint64_t v46 = (*(uint64_t (**)(uint64_t))(v43 + 19112))(v44 - 152);
  return (*(uint64_t (**)(uint64_t))(v43
                                            + 8
                                            * ((438
                                              * (a19
                                               - 1702013085
                                               + ((2 * (a42 & 0x3F)) ^ 0x5C)
                                               + (a42 & 0x3F ^ 0xFFDDCFD1) < 0xFFFFFFC0)) ^ 0xFDu)))(v46);
}

uint64_t sub_1000684EC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 ^ (46
                                     * ((((v0 - 315) | 0x110) ^ 0x41D8C4F9 ^ (v0 + 1474089100) & (2 * v1))
                                      + (v1 ^ 0x1F038A1A)
                                      - 168312832 != 568732660)))))();
}

uint64_t sub_100068560(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((*(unsigned __int8 *)(v4 + 1) == (v5 + 59))
                                     * (a3 + ((v5 + 1084228167) | 0xB202D400) + 2306)) ^ v5)))();
}

uint64_t sub_1000685B0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v0 - 251) * (LODWORD(STACK[0x290]) != 136246100)) ^ (v0 - 62))))();
}

uint64_t sub_100068614()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v2 - 479750768) & 0x1C986BBB) - 897) ^ 0xD7) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_10006865C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v15 + 8 * (((((v14 - 2001) | 0x184) - 355) * (a14 == 0)) ^ v14)))();
}

uint64_t sub_1000686A0()
{
  return sub_10007B9F4();
}

uint64_t sub_1000686F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * ((3167 * ((int)a6 + v27 + 1260 < ((a9 - 773236923) & 0x2E16A43Fu) - 53)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_100068740@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, uint64_t a6@<X8>)
{
  uint64_t v10 = a5 - 32 + (a3 ^ (v8 + 488));
  long long v11 = *(_OWORD *)(v7 + v10 - 15);
  long long v12 = *(_OWORD *)(v7 + v10 - 31);
  uint64_t v13 = a6 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v6 + 8 * (((a1 == 32) * a4) ^ (v9 + a2 + 879))))();
}

uint64_t sub_10006874C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)(((((v8 - 33571367) & 0xFF0BEBAF ^ 0xFFFFF22C) + a6 + v8 - 290) * (v6 == v7)) ^ v8)))();
}

uint64_t sub_100068794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v18 - 112) = &STACK[0x5E8E72AB319E42C9];
  *(_DWORD *)(v18 - 120) = v14
                         + 831981571 * ((((2 * (v18 - 128)) | 0x7BACAC24) - (v18 - 128) - 1037456914) ^ 0xA4778636)
                         + 97;
  *(void *)(v18 - 128) = a14;
  (*(void (**)(uint64_t))(v15 + 8 * (v14 ^ 0xF4E)))(v18 - 128);
  *(_DWORD *)(v18 - 104) = (v14 - 466) ^ (((((v18 - 128) | 0xD2A1CF3A) - ((v18 - 128) & 0xD2A1CF3A)) ^ 0x1039D30) * v17);
  *(void *)(v18 - 128) = v16;
  *(void *)(v18 - 112) = a14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 + 815)))(v18 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 120) > 0x74F05479u)
                                              * ((v14 - 443) ^ 0x6A3 ^ ((v14 - 888) | 1))) ^ v14)))(v19);
}

uint64_t sub_1000688B0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  return (*(uint64_t (**)(void))(v19 + 8 * ((120 * (v18 - 1922352602 + (a18 | 0x20000581u) < v18 + a2)) ^ 0x69Du)))();
}

uint64_t sub_1000688FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * (((8 * (a4 + (((a31 ^ 0x1E9) + 40) ^ 0xBF61DB3C) < 8)) | (32 * (a4 + (((a31 ^ 0x1E9) + 40) ^ 0xBF61DB3C) < 8))) ^ a31 ^ 0x1E9)))(1084105855, a2, a3, 2099684491, 0x284FA45E2E8D3F12, 9, ((unint64_t)*(unsigned __int8 *)(a2 + a4 + (((a31 ^ 0x1E9) + 40) ^ 0xBF61DB3C)) << ((((a4 ^ 0x98) & 0x80) << (((a31 ^ 0xE9) - 66) ^ v31)) & 0xF8)) ^ a1 ^ 0xE1360CF3818976F1, 3210861372, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_100068988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v19 = (v16 + 437) | 0x200;
  int v20 = 3804331 * ((v18 - 128) ^ 0x7ED525F6);
  *(void *)(v18 - 128) = v17;
  *(_DWORD *)(v18 - 120) = v20 + v16 + 1526;
  *(_DWORD *)(v18 - 116) = v15 - v20 + v19 - 486808148;
  (*(void (**)(uint64_t))(v14 + 8 * (v16 ^ 0xBFF)))(v18 - 128);
  *(_DWORD *)(v18 - 104) = (v19 - 466) ^ (69008221
                                        * ((((v18 - 128) | 0x867F775D) + (~(v18 - 128) | 0x798088A2)) ^ 0x55DD2556));
  *(void *)(v18 - 128) = a13;
  *(void *)(v18 - 112) = a14;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v19 ^ 0xF7F)))(v18 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v18 - 120) > 0x74F05479u)
                                              * (((v19 - 291478121) & 0x115F96F1) + ((v19 - 1543) | 0x44C) - 1695)) ^ v19)))(v21);
}

uint64_t sub_100068AAC@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  int v10 = (a1 - 522) | 0x412;
  unsigned int v11 = *(_DWORD *)(*(void *)(v9 - 0x5E8E72AB319E4281) + 4 * (v7 + v6)) ^ v4;
  *(_DWORD *)(*(void *)(v9 - 0x5E8E72AB319E4281) + 4 * (v3 + a3 + 1)) = ((v11 >> (32 - v5)) | (v4 + v10 - 208 - 1351) ^ a2)
                                                                            + v4
                                                                            - ((2
                                                                              * ((v11 >> (32 - v5)) | (v4 + v10 - 208 - 1351) ^ a2)) & 0xC9C56542);
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((43 * ((v7 - 1 + v6) >> 31)) ^ v10)))();
}

void sub_100068B60(uint64_t a1)
{
  int v1 = 831981571 * ((((2 * a1) | 0xACFEB304) - a1 + 696297086) ^ 0x4FDE89A6);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100068BFC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v7 & (2 * (*(unsigned __int8 *)(a2 + 7) - 100)))
                                 + ((*(unsigned __int8 *)(a2 + 7) - 100) ^ v6) == v6)
                                * (a3 + (v5 ^ (v3 + 201)) + 1200)) ^ v5)))();
}

uint64_t sub_100068C40@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1765
                                * (*(_DWORD *)(*(void *)(a1 - 0x5E8E72AB319E4281)
                                             + 4 * (v2 + v5 + ((v1 - 1156) | 0x484u) - 1197)) == v3)) ^ (v1 - 980))))();
}

uint64_t sub_100068C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                               + 8
                                                                               * (((31 * (v4 ^ 0x3D3)
                                                                                  + 523 * (v4 ^ 0x3C3)
                                                                                  - 1583)
                                                                                 * ((v6 & 8) == 0)) ^ v4)))(a1, a2, a3, a4, (v5 - a4));
}

uint64_t sub_100068CE4@<X0>(uint64_t a1@<X0>, int a2@<W5>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t v9 = (a2 + v5);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a3 + v9) ^ *(unsigned char *)(v4 + (v9 & 0xF)) ^ *(unsigned char *)(a4 + (v9 & 0xF)) ^ *(unsigned char *)((v9 & 0xF) + v6 + 2) ^ (-73 * ((a2 + v5) & 0xF)) ^ 0x77;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((2 * ((v9 + 1) > 0x14F)) | (4 * ((v9 + 1) > 0x14F))) ^ v7)))();
}

uint64_t sub_100068D58()
{
  *(void *)(v2 - 184) = &STACK[0x48DAFC6ABDD90938];
  *(void *)(v2 - 168) = &STACK[0x6C1B4F99CC2E8B5F];
  *(_DWORD *)(v2 - 160) = (v0 - 1127) ^ (1178560073
                                       * ((((v2 - 192) | 0xFAD1E183) - ((v2 - 192) | 0x52E1E7C) + 86908540) ^ 0x1DE4C3EB));
  LOBYTE(STACK[0x18F0]) = 73 * ((((v2 + 64) | 0x83) - ((v2 + 64) | 0x7C) + 124) ^ 0xEB) + 93;
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 965)))(v2 - 192);
  int v4 = *(_DWORD *)(v2 - 192);
  LODWORD(STACK[0x4AC]) = v4;
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((3547 * (v4 == ((927 * ((v0 - 1481) & 0xFFFFFCD3)) ^ 0xDE6BE7D8))) ^ v0)))(v3);
}

uint64_t sub_100068E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(uint64_t))(v64
                                            + 8
                                            * (((((3 * a64) ^ 0x33553D36) == 861224225) * ((2 * v65) ^ 0x7A8)) ^ (v65 + 442))))(803);
}

uint64_t sub_100068ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t x8_0@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19,uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v64 = (char *)&STACK[0x1880] + x8_0;
  *uint64_t v64 = *(unsigned char *)a1;
  *(void *)(v64 + 1) = *(void *)(a1 + 1);
  *(_DWORD *)(v64 + 9) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v64 + 13) = *(_WORD *)(a1 + 13);
  v64[15] = *(unsigned char *)(a1 + 15);
  uint64_t v65 = *(void *)(a1 + 8);
  *((void *)v64 + 2) = *(void *)a1;
  *((void *)v64 + 3) = v65;
  return sub_10006BDE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_100068F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  LODWORD(STACK[0x374]) = v9;
  STACK[0x460] = *(void *)(v11 + 8 * v10);
  return sub_1000743A8(a1, -653949007, 58, a4, 51, 3037000498, a7, a8, a9);
}

uint64_t sub_100068F48@<X0>(unint64_t a1@<X2>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  STACK[0x260] = a1;
  LODWORD(STACK[0x290]) = v18;
  if (v18 == 136246120)
  {
    int v22 = LODWORD(STACK[0x2D4]) - 771;
    int v23 = 15;
  }
  else
  {
    if (v18 != 136246116)
    {
      STACK[0x220] = 0;
      LODWORD(STACK[0x238]) = 0;
      LODWORD(STACK[0x240]) = 0;
      goto LABEL_7;
    }
    int v22 = LODWORD(STACK[0x2D4]) ^ 0x327;
    int v23 = 18;
  }
  LODWORD(STACK[0x240]) = v23;
  STACK[0x220] = (unint64_t)*(&off_10026C690 + v22) - 12;
  LODWORD(STACK[0x238]) = 1;
LABEL_7:
  int v24 = STACK[0x2D4];
  LODWORD(STACK[0x250]) = LODWORD(STACK[0x2D4]) - 64;
  int v25 = 2078219279 * ((v21 - 192) ^ 0xDAFA9674);
  *(void *)(v21 - 128) = v20 + 1168;
  *(_DWORD *)(v21 - 168) = LODWORD(STACK[0x2B8]) - v25 - 238065456;
  *(_DWORD *)(v21 - 132) = v25 + v24 - 140;
  *(void *)(v21 - 184) = 0;
  *(void *)(v21 - 176) = a18;
  *(void *)(v21 - 152) = STACK[0x2C8];
  *(void *)(v21 - 144) = 0;
  *(void *)(v21 - 160) = a2 + 0x5E8E72AB319E45A9;
  *(void *)(v21 - 192) = a2 + 0x5E8E72AB319E4499;
  (*(void (**)(uint64_t))(v19 + 8 * (v24 + 1629)))(v21 - 192);
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v19
                                                                       + 8
                                                                       * ((1918
                                                                         * (*(_DWORD *)(v21 - 136) == LODWORD(STACK[0x298]) - 563357572)) ^ LODWORD(STACK[0x250]))))(44, 0x3A737B19B9CD1C16, STACK[0x260]);
}

void sub_1000690D8(uint64_t a1)
{
  *(unsigned char *)(a1 + v1 + 4) = 87;
  JUMPOUT(0x100067E94);
}

uint64_t sub_100069104@<X0>(uint64_t a1@<X8>)
{
  uint64_t v9 = a1 + 1;
  unsigned char *v3 = ((v2 + v9 + ((7 * (v1 ^ 0x70)) ^ v5)) ^ v6) * (v4 + v9);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v9 != 91) * v7) ^ v1)))();
}

uint64_t sub_10006910C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v9 = STACK[0x430];
  STACK[0x540] = *(void *)(v7 + 8 * (v8 - 771));
  STACK[0x3B0] = v9;
  STACK[0x358] = STACK[0x2B0];
  uint64_t v10 = *(_DWORD *)(v9 - 0xB999BAB1C51203FLL) & 0x3F;
  *(unsigned char *)(v9 - 0xB999BAB1C512083 + (v10 ^ 0x2E)) = -9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * ((((v10 ^ 0x2E) > (((((v8 - 790) | 5) + 495) | 0x122) ^ 0x319u)) * (((((v8 - 790) | 5) + 1027) | 0x381) ^ 0x2A9)) ^ ((v8 - 790) | 5))))(a1, -653949007, 58, 27, 51, a6, a7, 3367574058);
}

void sub_100069124(_DWORD *a1)
{
  unsigned int v1 = 1543737703 * ((1016161312 - (a1 | 0x3C916420) + (a1 | 0xC36E9BDF)) ^ 0xBD9ACBA3);
  unsigned int v2 = *a1 + v1;
  int v3 = a1[2] ^ v1;
  BOOL v5 = (v3 & 0x30000000) == 0 || (v3 & 0x3F000000) == 671088640;
  __asm { BRAA            X10, X17 }
}

uint64_t sub_100069220()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1314
                                * ((((*(unsigned __int8 *)(v2 + 4) - 247) << (((v3 - 85) | 0x40) ^ 0x6C)) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_100069268()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((481
                                * ((v4 ^ 0x5EBF5BE6) - 514916354 + ((v2 - 1115770480) & v1) + (v0 ^ 0x365u) - 1074683100 >= (((v0 ^ 0x365) + 868304382) & 0xCC3EBB5A ^ 0x7FFFFDAF))) ^ v0 ^ 0x365)))();
}

uint64_t sub_100069300()
{
  BOOL v4 = v2 + 124562644 < (int)(v1 + 1039594227);
  if (v1 > 0x42090D0C != v2 + 124562644 < -1107889421) {
    BOOL v4 = v1 > 0x42090D0C;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((!v4 * ((v0 - 2) ^ 0x1F1)) ^ v0)))();
}

uint64_t sub_100069378@<X0>(int a1@<W8>)
{
  STACK[0x508] = v1 - 16;
  return (*(uint64_t (**)(void))(v3 + 8 * ((725 * (v2 == ((a1 + 415219362) & 0xE7403FAF ^ (v4 + a1 - 15 - 491)))) ^ a1)))();
}

uint64_t sub_1000693D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  STACK[0x288] = v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                         + 8
                                                                                         * ((1770
                                                                                           * (v7 == v9 + v8 + 1375 - 2189)) ^ (v8 - 751))))(959364704, 3335604717, a3, a4, a5, 119);
}

uint64_t sub_100069434()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v1 & ~((v0 + 42691551) ^ (v2 == 80601692) ^ 0x28B730B) | (8
                                                                                         * (v1 & ~((v0 + 42691551) ^ (v2 == 80601692) ^ 0x28B730B))) | v0)))();
}

uint64_t sub_100069474@<X0>(int a1@<W1>, int a2@<W8>)
{
  v9.i64[0] = 0x7777777777777777;
  v9.i64[1] = 0x7777777777777777;
  uint64_t v10 = (v5 + v3);
  int8x16_t v11 = *(int8x16_t *)(v2 + v10 - 15);
  int8x16_t v12 = *(int8x16_t *)(v2 + v10 - 31);
  uint64_t v13 = v6 + v10;
  *(int8x16_t *)(v13 - 15) = veorq_s8(v11, v9);
  *(int8x16_t *)(v13 - 31) = veorq_s8(v12, v9);
  LODWORD(v13) = ((a1 - v7) ^ 0x785) == (v4 & 0xFFFFFFE0);
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((v13 | (16 * v13)) ^ (a2 + a1 + 1344))))();
}

uint64_t sub_1000694DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  BOOL v18 = a15 == v16 + ((10 * (v15 ^ 0x256) + 259) | 0x4C) - 1245;
  return (*(uint64_t (**)(void))(v17 + 8 * (((4 * v18) | (16 * v18)) ^ v15)))();
}

uint64_t sub_100069524()
{
  return sub_100099474();
}

uint64_t sub_100069544(uint64_t a1, int a2)
{
  uint64_t v6 = *(void *)(a1 + 8);
  memset((void *)(v5 - 176), 119, 16);
  int v7 = ((2 * ((v5 - 160) & 0x8B7C4E0) - (v5 - 160) - 146261217) ^ 0x63E57246) * a2;
  *(void *)(v5 - 120) = v5 - 176;
  *(void *)(v5 - 160) = v5 - 192;
  *(void *)(v5 - 144) = &STACK[0x278];
  *(void *)(v5 - 136) = v6;
  *(_DWORD *)(v5 - 124) = (v4 + 1961) ^ v7;
  *(_DWORD *)(v5 - 152) = v7 + 396484252;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 + 2308)))(v5 - 160);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((*(_DWORD *)(v5 - 128) == ((v4 - 35084495) & 0x21759C9 ^ (v3 + 137)))
                                              * ((v4 - 85) ^ 0x5DF)) ^ v4)))(v8);
}

uint64_t sub_100069634()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((**(_DWORD **)(v2 + 8 * (v0 - 1078)) == 0) * ((v0 ^ 0x535) + 135)) ^ v0)))();
}

uint64_t sub_10006967C@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*v3 + 4 * (v6 + v5)) = *(_DWORD *)(*v4 + 4 * (v6 + v5));
  return (*(uint64_t (**)(void))(a1 + 8 * (((v2 + v6 - 121 == v1) * v7) ^ v2)))();
}

uint64_t sub_1000696BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  int v19 = ((v16 - 98) ^ 0x448) + (a16 ^ v17) - ((2 * (a16 ^ v17)) & 0x2C452384) + 371362685;
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((230
                                * (((2 * v19) & 0x7A6F5CF8 ^ 0x28450080) + (v19 ^ 0x2B153FBE) - 86016540 == 941042784)) ^ v16)))();
}

uint64_t sub_10006974C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  return (*(uint64_t (**)(void))(v52
                              + 8
                              * (((a51 - 1074653292 < (((v51 + 1224845573) | 0xB40A00AB) ^ (a6 + 16))) * (v51 ^ 0x10C)) ^ v51)))();
}

uint64_t sub_1000697AC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((7 * (STACK[0x2D8] == 0)) ^ (v0 + 1347))))();
}

uint64_t sub_1000697E4@<X0>(int a1@<W0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17)
{
  BOOL v24 = v17 < v19;
  *(&a17 + (v18 - 602656388)) = *(unsigned char *)(v23 + (a2 + a1))
                                            - ((2 * *(unsigned char *)(v23 + (a2 + a1))) & 0xEF)
                                            + 119;
  unsigned int v25 = a2 + 1 + v20;
  int v26 = v24 ^ (v25 < v19);
  BOOL v27 = v25 < v17;
  if (!v26) {
    BOOL v24 = v27;
  }
  return (*(uint64_t (**)(void))(v21 + 8 * ((125 * !v24) ^ v22)))();
}

uint64_t sub_10006986C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int v19 = (v17 + 707566491) & 0xD5D367AB;
  int v20 = 3804331 * ((v18 - 136) ^ 0x7ED525F6);
  *(void *)(v18 - 136) = v14;
  *(_DWORD *)(v18 - 128) = v20 + v17 + 1926;
  *(_DWORD *)(v18 - 124) = v16 - v20 + v19 - 1700721024;
  (*(void (**)(uint64_t))(v15 + 8 * (v17 ^ 0x96F)))(v18 - 136);
  *(void *)(v18 - 120) = a14;
  *(void *)(v18 - 136) = a12;
  *(_DWORD *)(v18 - 112) = (v19 + 44) ^ (69008221 * ((v18 - 1243966731 - 2 * ((v18 - 136) & 0xB5DA937D)) ^ 0x6678C177));
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (int)(v19 + 1325)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (int)(((*(_DWORD *)(v18 - 128) <= 0x74F05479u)
                                                   * (((v19 - 597968175) & 0x23A4476F) - 1613)) ^ v19)))(v21);
}

uint64_t sub_100069998(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((52 * (v3 + 1 == v4 + 16)) ^ a3)))();
}

uint64_t sub_1000699B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  int v8 = (a6 - 834) | 0x260;
  *int v6 = a3;
  uint64_t v13 = v11;
  unsigned int v12 = (v8 - 435) ^ (69008221
                    * (((&v12 | 0x90C46521) - &v12 + (&v12 & 0x6F3B9AD8)) ^ 0x4366372B));
  (*(void (**)(unsigned int *))(v7 + 8 * (v8 + 1719)))(&v12);
  uint64_t v13 = v10;
  unsigned int v12 = ((v8 ^ 0xA8) - 523) ^ (69008221
                             * ((-128049727 - (&v12 | 0xF85E1DC1) + (&v12 | 0x7A1E23E)) ^ 0xD403B034));
  (*(void (**)(unsigned int *))(v7 + 8 * (v8 ^ 0xB77)))(&v12);
  return 0;
}

uint64_t sub_100069AEC()
{
  LODWORD(STACK[0x578]) = v0;
  return sub_10007B9F4();
}

uint64_t sub_100069B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,uint64_t a53,uint64_t a54)
{
  int v57 = 69008221 * ((((v56 - 192) | 0xE9AA6CBB) + (~(v56 - 192) | 0x16559344)) ^ 0x3A083EB0);
  *(_DWORD *)(v56 - 188) = LODWORD(STACK[0x47C]) - v57 + (((v54 ^ 0x286) + 977) ^ 0x16E6399D);
  *(void *)(v56 - 184) = a54;
  *(_DWORD *)(v56 - 152) = v57 + a52 + 1375404271;
  *(void *)(v56 - 168) = a49;
  *(void *)(v56 - 160) = a50;
  *(_DWORD *)(v56 - 176) = (v54 + 1587) ^ v57;
  uint64_t v58 = (*(uint64_t (**)(uint64_t))(v55 + 8 * (v54 ^ 0x8D1)))(v56 - 192);
  int v59 = *(_DWORD *)(v56 - 192);
  LODWORD(STACK[0x4AC]) = v59;
  return (*(uint64_t (**)(uint64_t))(v55 + 8 * ((102 * (v59 == -563355418)) ^ v54)))(v58);
}

void sub_100069BFC(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, uint64_t a4)
{
  a4 = a1;
  a3 = (v5 - 543) ^ (69008221 * ((((2 * &a3) | 0x51435E80) - &a3 - 681684800) ^ 0xFB03FD4A));
  (*(void (**)(unsigned int *))(v4 + 8 * (v5 + 1611)))(&a3);
  sub_100099CE4();
}

uint64_t sub_100069C5C(uint64_t a1)
{
  int v5 = ((15 * (v3 ^ 0x8B8)) ^ 0xBE4209AB) + v2;
  BOOL v6 = v5 < -1491539134;
  BOOL v7 = v4 - 1102967299 < v5;
  if (v4 - 1102967299 < (int)(v3 - 1491541424) != v6) {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * ((482 * v7) ^ v3)))(a1, 1961907321);
}

uint64_t sub_100069CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  HIDWORD(a23) = HIDWORD(a18) - 1745640416;
  v52.i64[0] = 0x7777777777777777;
  v52.i64[1] = 0x7777777777777777;
  return sub_100083D5C(119, a2, 1476395008, a4, a5, a6, v52, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           v51 - 118,
           v50 - 16,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_100069D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  *(_DWORD *)(a35 + 4 * v36) ^= a29;
  return (*(uint64_t (**)(void))(v37
                              + 8
                              * (int)(((((v38 + v35 - 269486460) & 0x5FF3DEBF) + ((v38 + v35 + 1340331332) ^ 0xFFFFFCF4))
                                     * (v39 == 623634654)) ^ (v38 + v35 + 1319))))();
}

uint64_t sub_100069DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v67 = (*(uint64_t (**)(uint64_t))(v64 + 8 * (v66 ^ 0xA5B)))(a64);
  STACK[0x508] = STACK[0x288] - 1824;
  LODWORD(STACK[0x54C]) = v65;
  return (*(uint64_t (**)(uint64_t))(v64
                                            + 8
                                            * (((STACK[0x3A0] != 0) * (((v66 - 294) | 0x444) - 1490)) ^ (v66 - 120))))(v67);
}

uint64_t sub_100069E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v60 = v58 + 746;
  int v61 = (char)(v57 + v58 - 22 + 81) - (char)(v56 - 26);
  LODWORD(STACK[0x2C8]) = (v61 ^ 0xEFB7E9C3) + 2003736512 + ((2 * v61) & 0xDF6FD386);
  uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 8 * (v58 + 2259)))(1576, 2940923044);
  STACK[0x4A0] = v62;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * ((105 * (((v62 == 0) ^ (-105 * (v60 ^ 0xAF) + (v60 ^ 0xAF) + 79)) & 1)) ^ v60)))(v62, v63, v64, v65, v66, v67, v68, v69, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_100069E7C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  int v37 = v34 + v33 - 2147348469;
  unsigned int v38 = v37 + ((v35 - 613) ^ 0x13A);
  if (v38 <= 0x40) {
    unsigned int v38 = 64;
  }
  BOOL v39 = __CFADD__(v37 + 598, a33 + 2147346993 + a1 + v38 + 877);
  return (*(uint64_t (**)(void))(v36 + 8 * ((v39 | (4 * v39)) ^ v35)))();
}

uint64_t sub_100069EEC@<X0>(uint64_t a1@<X0>, int8x16_t *a2@<X4>, int a3@<W8>)
{
  int8x16_t v8 = *(int8x16_t *)(a1 + (v4 + v3 + 57));
  *a2 = vaddq_s8(vsubq_s8(v8, vandq_s8(vaddq_s8(v8, v8), v7)), v6);
  return (*(uint64_t (**)(void))(v5 + 8 * (a3 + 1241)))();
}

uint64_t sub_100069F3C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a2 - 632) ^ 0x2BE) * ((unint64_t)(v2 - v3) < 0x20)) ^ a2)))();
}

uint64_t sub_100069F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                + 8
                                                                                * (((v5 == ((v6 + 2029022225) & 0x870F96FA ^ 0x628))
                                                                                  * v7) ^ v6)))(a1, a2, a3, a4, a5);
}

uint64_t sub_100069FB8(int a1)
{
  int v5 = *(_DWORD *)(v3 + v4 * (uint64_t)a1 + 36) + 783687968;
  BOOL v7 = v5 > -622747206 && v5 < SLODWORD(STACK[0x298]);
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((v7 * ((v1 + 1970300828) & 0x8A8F9B2F ^ 0xBFA)) ^ v1)))();
}

uint64_t sub_10006A02C()
{
  (*(void (**)(void))(v0 + 8 * (v1 + 1607)))();
  return (*(uint64_t (**)(void))(v0 + 8 * ((127 * (STACK[0x498] == 0)) ^ (v1 + 1423))))();
}

uint64_t sub_10006A068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13
                                                                       + 8
                                                                       * ((110
                                                                         * (a13
                                                                          - 1296018759
                                                                          + (a12 & 0x65DD31FEu)
                                                                          + 816
                                                                          + 372 < 0xFFFFFFFB)) ^ (v14 + 1765))))(a1, a2, a3, a4);
}

uint64_t sub_10006A0C0(uint64_t result)
{
  unint64_t v1 = 241568881
     * (((result ^ 0x9C42EF4B24AB98A7)
       - 2 * ((result ^ 0x9C42EF4B24AB98A7) & 0xDC1EF8D758FBB55ELL)
       - 0x23E10728A7044AA2) ^ 0x4F09C315AA4129BBLL);
  uint64_t v2 = (_DWORD *)(result + 4);
  unint64_t v3 = *(void *)(result + 16) - v1;
  unint64_t v4 = *(void *)(result + 32) - v1;
  BOOL v5 = (uint64_t)v4 < (uint64_t)v3;
  BOOL v6 = v4 < v3;
  int v7 = v5;
  if (((*(_DWORD *)(result + 40)
       - 241568881
       * (((result ^ 0x24AB98A7) - 2 * ((result ^ 0x24AB98A7) & 0x58FBB55E) + 1492890974) ^ 0xAA4129BB)) & 1) != 0)
    int v8 = v7;
  else {
    int v8 = v6;
  }
  if (v8) {
    uint64_t v2 = (_DWORD *)result;
  }
  *(_DWORD *)(result + 24) = *(_DWORD *)(result + 44) ^ (241568881
                                                       * (((result ^ 0x24AB98A7)
                                                         - 2 * ((result ^ 0x24AB98A7) & 0x58FBB55E)
                                                         + 1492890974) ^ 0xAA4129BB)) ^ *v2 ^ (241568881
                                                                                             * (((result ^ 0x24AB98A7)
                                                                                               - 2
                                                                                               * ((result ^ 0x24AB98A7) & 0x58FBB55E)
                                                                                               + 1492890974) ^ 0xAA4129BB));
  return result;
}

uint64_t sub_10006A160()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2003
                                * ((((9 * (v2 ^ 0x1C1)) ^ (v1 - 828)) & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_10006A1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(_DWORD *)(v29 - 112) = v27
                         - 1224239923 * ((~((v29 - 144) | 0x36183663) + ((v29 - 144) & 0x36183663)) ^ 0x3B54344B)
                         - 1063;
  *(void *)(v29 - 144) = a25;
  *(void *)(v29 - 136) = v25;
  *(void *)(v29 - 104) = a21;
  *(void *)(v29 - 128) = v25;
  *(void *)(v29 - 120) = v28;
  (*(void (**)(uint64_t))(v26 + 8 * (v27 ^ 0xEFC)))(v29 - 144);
  return sub_100074C50();
}

void sub_10006A224(uint64_t a1)
{
  int v1 = 235795823 * ((2 * (a1 & 0x125A82D6) - a1 - 307921623) ^ 0x79083470);
  int v2 = *(_DWORD *)(a1 + 16) + v1;
  int v3 = *(_DWORD *)(a1 + 4) - v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x5E8E72AB319E4285);
  int v6 = v4 - 1758911813;
  BOOL v5 = v4 - 1758911813 < 0;
  int v7 = 1758911813 - v4;
  if (!v5) {
    int v7 = v6;
  }
  __asm { BRAA            X12, X17 }
}

void sub_10006A30C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) + 1224239923 * ((2 * (a1 & 0x188FD632) - a1 - 412079667) ^ 0x15C3D41A);
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned int v6 = v1 - 460628867 * (((&v4 | 0xA020558C) - (&v4 & 0xA020558C)) ^ 0xECB6D7F1) - 62;
  uint64_t v4 = v2;
  int v3 = (char *)*(&off_10026C690 + (v1 ^ 0x2E0)) - 4;
  (*(void (**)(uint64_t *))&v3[8 * v1 + 13528])(&v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10006A420(int a1)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((127 * (v2 + 1 == v3 + 64)) ^ a1)))();
}

uint64_t sub_10006A4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v19 - 104) = (v14 + 483) ^ ((((((v19 - 128) | 0x22BA0E34) ^ 0xFFFFFFFE) - (~(v19 - 128) | 0xDD45F1CB)) ^ 0xEE7A3C1)
                                        * v16);
  *(void *)(v19 - 128) = v18;
  *(void *)(v19 - 112) = a14;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 ^ 0xB24)))(v19 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v19 - 120) == v17 + 2) * ((788 * (v14 ^ 0x271)) ^ 0xD6)) ^ v14)))(v20);
}

uint64_t sub_10006A5A0(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  return (*(uint64_t (**)(unint64_t, uint64_t))(v62 + 8 * ((((a62 & a2) == 18) * a4) ^ (v63 + 448))))(STACK[0x218], 2943156503);
}

uint64_t sub_10006A630(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((a4 ^ 0x482) - 496) * ((v4 & 0x18) != 0)) ^ a4)))();
}

uint64_t sub_10006A660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t (*a18)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return a18(a18, a2, 0xFFFFFFFFLL, 1669055439, 1265103363, a6, 3029863991, 837, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

void sub_10006A694(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10006A71C@<X0>(int a1@<W7>, int a2@<W8>)
{
  if ((a2 + 405001088) <= 0x12 && ((1 << (a2 + 0x80)) & 0x42405) != 0) {
    return (*(uint64_t (**)(void))(v3
  }
                                + 8
                                * ((((v2 & 0xFFFFFFFFFFFFFFFLL) + (unint64_t)((a1 - 49567107) | 0x200u) - 513 < 2)
                                  * (((a1 - 49567026) | 0xAA) ^ 0xE1)) ^ (a1 - 49565652))))();
  else {
    return sub_1000A52F0();
  }
}

uint64_t sub_10006A7B0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((182 * (v1 != 1704253533)) ^ 0x37Bu)))();
}

uint64_t sub_10006A7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * (int)(((a9 + 4 >= a9) * ((v9 + 1565019377) & 0xA2B7ABFF ^ 0x18B)) ^ v9)))(a1);
}

uint64_t sub_10006A868@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v4 = a1 + v2;
  if ((unint64_t)(v4 + 1) > 0x38) {
    uint64_t v5 = v4 + 1;
  }
  else {
    uint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((v5 - v2 + ((a2 - 729) | 0x104u) + ((a2 - 2018037471) & 0x7848CFBE ^ 0x602256EFuLL) < 8) | a2)))();
}

uint64_t sub_10006A8D8(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((57
                                * (a2
                                 + a1
                                 + ((v2 - 1063365279) & 0x3F61A9BF ^ 0x940A8A81 ^ (v2 + 1363691905) & 0xAEB7AF7F) > 7)) ^ v2)))();
}

uint64_t sub_10006A974(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(result + 24) = a5;
  return result;
}

uint64_t sub_10006A980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, _DWORD *a16)
{
  int v19 = ((v16 ^ 0x22C) - 64930673) & 0x3DEC367;
  BOOL v20 = a12 > (v16 ^ 0x1673CAA4u);
  unsigned int v21 = (*(_DWORD *)(*(void *)(a10 + 8) - 0x5693A2FF918C2410) - 971999952) * (*a16 ^ 0xE4E2B2A1);
  int v22 = 69008221 * ((((v18 - 128) | 0x8CA5F255) - ((v18 - 128) & 0x8CA5F255)) ^ 0x5F07A05F);
  *(void *)(v18 - 120) = a14;
  *(_DWORD *)(v18 - 112) = ((v21 ^ 0x7DDCF92B)
                          - 12845345
                          + ((v21 << (((((v16 ^ 0x2C) - 113) & 0x67) + 1) ^ 0x29)) & 0xFBB9F256)) ^ v22;
  *(void *)(v18 - 104) = a13;
  *(_DWORD *)(v18 - 128) = v22 + v19 + 922;
  *(_DWORD *)(v18 - 124) = 1758911813 - v22;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v19 ^ 0x8E7u)))(v18 - 128);
  BOOL v24 = (int)(a12 + 1770796615) > 1770796616;
  if (v20) {
    BOOL v24 = v20;
  }
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((23 * v24) ^ v19)))(v23);
}

uint64_t sub_10006AB2C()
{
  LODWORD(STACK[0x54C]) = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v0 ^ 0xBEE) - 2188) * v3) ^ (v0 + 1200))))();
}

uint64_t sub_10006AB60(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((a2 + a1 + ((v2 + 339437257) & 0xEBC49477 ^ 0xF031369F) < 8) * (v2 - 2246)) ^ v2)))();
}

uint64_t sub_10006ABE0()
{
  int v4 = 460628867 * ((2120966109 - ((v3 - 192) | 0x7E6B5FDD) + ((v3 - 192) | 0x8194A022)) ^ 0xCD02225F);
  *(void *)(v3 - 144) = STACK[0x268];
  *(void *)(v3 - 192) = STACK[0x278];
  *(void *)(v3 - 152) = STACK[0x270];
  *(void *)(v3 - 160) = STACK[0x280];
  *(_DWORD *)(v3 - 164) = v0 - v4 + 488;
  *(_DWORD *)(v3 - 184) = v1 + v4 + ((v0 - 1845084404) & 0x6DF9C3BF ^ 0xA236977C);
  *(void *)(v3 - 176) = STACK[0x2B0];
  (*(void (**)(uint64_t))(v2 + 8 * (v0 + 2339)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t, __n128))(v2 + 8 * ((1345 * (*(_DWORD *)(v3 - 168) == -563355418)) ^ v0)))(48, (__n128)0);
}

uint64_t sub_10006ACF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *uint64_t v10 = a1;
  int *v11 = (v5 + a5 - 124 - 525) ^ v13;
  int v9 = a5 - 276;
  uint64_t v16 = v12;
  unsigned int v15 = (a5 - 468) ^ (((&v15 & 0x5AEC8B8A | ~(&v15 | 0x5AEC8B8A)) ^ 0x76B1267F) * v6);
  (*(void (**)(unsigned int *))(v7 + 8 * (a5 + 1686)))(&v15);
  uint64_t v16 = v14;
  unsigned int v15 = (v9 - 192) ^ ((&v15 ^ 0xD3A2520A) * v6);
  (*(void (**)(unsigned int *))(v7 + 8 * (v9 ^ 0x86A)))(&v15);
  return 0;
}

uint64_t sub_10006AE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16, uint64_t a17)
{
  a17 = v17;
  a13 = 0x3B842D404CB6A8ACLL;
  a14 = a10;
  a16 = v21
      + 1178560073 * ((2 * (&a13 & 0xE19D760) - &a13 - 236574567) ^ 0x16D30AF1)
      + v18
      - 469;
  (*(void (**)(uint64_t *))(v19 + 8 * (v18 ^ (v20 + 29))))(&a13);
  a13 = a10;
  LODWORD(a14) = v21
               - 241568881 * ((2 * (&a13 & 0x242697B0) - &a13 - 606508978) ^ 0xDC86C0C)
               + v18
               - 61;
  (*(void (**)(uint64_t *))(v19 + 8 * (v18 + v21 + 1719)))(&a13);
  a14 = a10;
  LODWORD(a13) = (v18 + v21 - 533) ^ (69008221
                                    * ((2 * (&a13 & 0x7906D9E0) - &a13 + 116991516) ^ 0xD55B7416));
  (*(void (**)(uint64_t *))(v19 + 8 * (v18 ^ v20)))(&a13);
  LODWORD(a13) = (v18 + v21 - 533) ^ (69008221
                                    * ((((2 * &a13) | 0x85777BEA) - &a13 - 1119600117) ^ 0x9119EFFF));
  a14 = a12;
  uint64_t v22 = (*(uint64_t (**)(uint64_t *))(v19 + 8 * ((v18 + v21) ^ 0xBD5)))(&a13);
  return sub_1000780AC(v22);
}

uint64_t sub_10006AE94(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  int v12 = (a7 | 0x81DA88A) + a5;
  uint64_t v13 = a4 + ((v12 | 0x430) ^ v9);
  long long v14 = *(_OWORD *)(v8 + v13 - 15);
  long long v15 = *(_OWORD *)(v8 + v13 - 31);
  uint64_t v16 = v10 + v13;
  *(_OWORD *)(v16 - 15) = v14;
  *(_OWORD *)(v16 - 31) = v15;
  return (*(uint64_t (**)(void))(v7 + 8 * ((1117 * ((v11 & 0xFFFFFFE0) == 32)) ^ (v12 + 105))))();
}

uint64_t sub_10006AEFC()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0xA5B)))();
  LODWORD(STACK[0x54C]) = v2;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((((v0 ^ 0xBEE) - 2188) * v3) ^ (v0 + 1200))))(v4);
}

uint64_t sub_10006AF4C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 + v2 - 2078011391 < 29 * (v0 ^ 0x27Cu) - 452) * (((v0 - 611) | 0x846) ^ 0x8B4)) ^ v0)))();
}

uint64_t sub_10006AFB0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v5 + 96) + 1428) = 136246120;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(_DWORD *)(a2 + 4) == ((v3 + 1742773441) & 0x981F645B ^ (v2 + 985)))
                                * (((v3 - 827) | 0x16C) - 175)) ^ v3)))();
}

uint64_t sub_10006B024(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + v2 - 1) = ((v4 + 1 + v5) ^ v6) * (v4 + 31);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8 * (((v2 != 1) * (int)a1) ^ v3)))(a1, a2);
}

uint64_t sub_10006B02C(int a1, char a2, int a3, int a4, int a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  *(_DWORD *)(v63 - 152) = v56;
  *(void *)(v63 - 128) = v62 - 7;
  *(void *)(v63 - 120) = v57 - 7;
  *(_DWORD *)(v63 - 140) = a1 & 0xFFFFFFF8;
  *(_DWORD *)(v63 - 136) = a1;
  *(_DWORD *)(v63 - 132) = 8 - (a1 & 0xFFFFFFF8);
  int v64 = -a6;
  char v65 = a2 + a4 + a3;
  uint64_t v66 = (a5 + a4 + a3 + 1046 + v64);
  v68.val[0].i64[0] = ((_BYTE)a5 + (_BYTE)a4 + (_BYTE)a3 + 22 + (_BYTE)v64) & 0xF;
  v68.val[0].i64[1] = (v65 + 10 + (_BYTE)v64) & 0xF;
  v68.val[1].i64[0] = (v65 + 9 + (_BYTE)v64) & 0xF;
  v68.val[1].i64[1] = (v65 + 8 + (_BYTE)v64) & 0xF;
  v68.val[2].i64[0] = (v65 + 7 + (_BYTE)v64) & 0xF;
  v68.val[2].i64[1] = (v65 + 6 + (_BYTE)v64) & 0xF;
  v68.val[3].i64[0] = (v61 + (_BYTE)v64 + (a7 ^ 0xA3)) & 0xF;
  v68.val[3].i64[1] = (v65 + 4 + (_BYTE)v64) & 0xF;
  *(int8x8_t *)(*(void *)(v63 - 128) + v66) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v58 + (v66 & 0xF) - 7), *(int8x8_t *)(*(void *)(v63 - 120) + v66)), veor_s8(*(int8x8_t *)(v60 + (v66 & 0xF) - 7), *(int8x8_t *)((v66 & 0xF) + v59 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v68, (int8x16_t)xmmword_10021E900), (int8x8_t)0x1717171717171717)));
  return (*(uint64_t (**)(__n128))(a56 + 8 * ((1320 * (*(_DWORD *)(v63 - 132) == v64)) ^ a7)))((__n128)xmmword_10021E900);
}

uint64_t sub_10006B17C@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*v1 + (v2 + v7)) = *(unsigned char *)(*v1 + (v7 + v5));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v3 + v7 - 2335 == v4) * v6) | a1)))();
}

uint64_t sub_10006B1B8(uint64_t a1, uint64_t a2)
{
  STACK[0x328] = *(void *)(v2 + 8 * (v3 - 768));
  return sub_1000ABB34(a1, a2, 1062661589, 44);
}

uint64_t sub_10006B1DC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((31 * ((v2 ^ 0x2C1u) + 1477247277 + v1 + v0 - 813 < 8)) ^ v2)))();
}

uint64_t sub_10006B228(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((a6 + v7 + 1319) > 0xFFFFFFFA) * ((((a3 - 57) | 0x34) + 1152) ^ 0x484)) | (a3 + 2126))))();
}

uint64_t sub_10006B270(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((a2 + v7 - 343 == (((a6 ^ 0x114) + 212) ^ 0xCF)) * ((13 * (a6 ^ 0x114)) ^ 0x4CE)) ^ a6)))();
}

uint64_t sub_10006B2BC@<X0>(int a1@<W1>, int a2@<W8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q4>)
{
  *int v5 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v6 + (v4 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(v6 + (v4 + a1)), *(int8x16_t *)(v6 + (v4 + a1))), a4)), a3);
  return (*(uint64_t (**)(void))(v7 + 8 * ((v8 + a2 - 844) ^ 0xE)))();
}

uint64_t sub_10006B310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8 * (((((v7 - 8392873) & 0x4BE7FE43) + ((v7 - 1064) ^ (a7 + 216))) * (v8 == a1)) ^ v7)))();
}

uint64_t sub_10006B358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8 * ((2035 * ((a8 & 0xFFFFFFF0) == ((((a7 - 5) | 0x505) + 288) ^ 0x6BF57757))) ^ a7)))();
}

uint64_t sub_10006B39C()
{
  uint64_t v5 = (v1 + 2102064947) & 0x82B504DB;
  if (v0 <= 0x30) {
    uint64_t v6 = 48;
  }
  else {
    uint64_t v6 = v0;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((2523 * ((unint64_t)(v2 + v6 + v5 - 218 + v4) < 0x40)) ^ v5)))();
}

uint64_t sub_10006B4A8()
{
  int v6 = *(unsigned __int8 *)(*(void *)(v1 + 32) + v0 - 0x6F104D712713834CLL)
     - *(unsigned __int8 *)(v5 + v0 - 0x6F104D712713834CLL);
  uint64_t v7 = v0 + 1;
  BOOL v9 = (v6 ^ 0x6BAB7F5F) - 671091477 + ((2 * v6) & 0xD756FEBE) != 1135309898 || v7 == ((v4 - 377) | 0x29) + v2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((28 * v9) ^ v4)))();
}

uint64_t sub_10006B534@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * (((((2 * v1) ^ 0x186) - 1756)
                                             * ((a1 + v2 + 1814) < 0x7FFFFFFF)) ^ v1)))(((v1 - 227976148) & 0xD96A5EF ^ 0xFFFFFA94) + v2);
}

uint64_t sub_10006B58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14)
{
  *(_DWORD *)(a10 - 0x5693A2FF918C2410) = 1569729929 - v14;
  int v19 = 831981571 * ((((v18 - 136) | 0x1D8DD29A) - (v18 - 136) + ((v18 - 136) & 0xE2722D60)) ^ 0x842C02BE);
  *(void *)(v18 - 136) = v15;
  *(_DWORD *)(v18 - 128) = v17 - v19 - 563;
  *(_DWORD *)(v18 - 124) = v19 + 517764793;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 | 0x15E)))(v18 - 136);
  int v20 = 3804331 * (((v18 - 136) & 0xBBAC2B3F | ~((v18 - 136) | 0xBBAC2B3F)) ^ 0x3A86F136);
  *(_DWORD *)(v18 - 128) = v20 + v17 + 72;
  *(_DWORD *)(v18 - 124) = ((a13 << 6) & 0x9FFFEDC0)
                         - v20
                         + 988672000
                         + ((a13 << (((v17 - 16) | 0x28) ^ 0x3C)) ^ 0xCFFFF6F1);
  *(void *)(v18 - 136) = v15;
  (*(void (**)(uint64_t))(v16 + 8 * (int)(v17 + 363)))(v18 - 136);
  *(_DWORD *)(v18 - 128) = v17
                         + 831981571 * (((v18 - 136) & 0x2C0498D9 | ~((v18 - 136) | 0x2C0498D9)) ^ 0x4A5AB702)
                         - 408;
  *(void *)(v18 - 136) = a14;
  *(void *)(v18 - 120) = &STACK[0x5E8E72AB319E42B9];
  (*(void (**)(uint64_t))(v16 + 8 * (v17 ^ 0x147)))(v18 - 136);
  *(_DWORD *)(v18 - 112) = (v17 - 971) ^ (69008221
                                        * (((v18 - 136) & 0xDFB6986 | ~((v18 - 136) | 0xDFB6986)) ^ 0x21A6C473));
  *(void *)(v18 - 136) = v15;
  *(void *)(v18 - 120) = a14;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (int)(v17 + 310)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((90 * (*(_DWORD *)(v18 - 128) > 0x74F05479u)) | v17)))(v21);
}

uint64_t sub_10006B7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v6 = STACK[0x260] & 0x13F819FA;
  int v7 = STACK[0x374];
  LODWORD(STACK[0x3D4]) = LODWORD(STACK[0x374]) + ((v6 - 2107) ^ 0xF5) - 162;
  unsigned int v8 = LODWORD(STACK[0x594]) + 465802555;
  BOOL v9 = v7 - 208648310 > v8;
  if ((v7 - 208648310) < 0x67BC6544 != v8 < 0x67BC6544) {
    BOOL v9 = (v7 - 208648310) < 0x67BC6544;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                         + 8
                                                                                         * ((4 * v9) | (8 * v9) | v6)))(a1, a2, a3, a4, a5, 3037000498);
}

uint64_t sub_10006B874@<X0>(int a1@<W1>, unsigned int a2@<W2>, char a3@<W3>, char a4@<W6>, uint64_t a5@<X8>)
{
  unsigned int v9 = (v6 + 877714065) & 0xCBAF22CB;
  unint64_t v10 = STACK[0x358];
  int v11 = *(_DWORD *)(a5 - 0xB999BAB1C51203BLL + 4 * ((a1 + 1110362572) >> (((v9 + a3) & a4) - 44)));
  *(unsigned char *)(v10 + (a1 + 1110362572)) = (v7 ^ HIBYTE(v11)) - ((2 * (v7 ^ HIBYTE(v11))) & 0xEF) + 119;
  *(unsigned char *)(v10 + (a1 + 1110362573)) = (BYTE2(v11) ^ 0x43) - ((2 * (BYTE2(v11) ^ 0x43)) & 0xEF) + 119;
  *(unsigned char *)(v10 + (a1 + 1110362574)) = (BYTE1(v11) ^ 0xA1) - ((2 * (BYTE1(v11) ^ 0xA1)) & 0xEF) + 119;
  *(unsigned char *)(v10 + (a1 + 1110362575)) = v11 ^ 0xB2;
  unsigned int v12 = *v5 - 1351850628;
  BOOL v13 = v12 < a2;
  BOOL v14 = v12 > 0x84DC322;
  if (a2 > 0x84DC322 != v13) {
    BOOL v14 = v13;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((3027 * v14) ^ v9)))();
}

uint64_t sub_10006B984()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((2 * (STACK[0x4A0] != 0)) | (4 * (STACK[0x4A0] != 0))) ^ (v1 + 196))))();
}

uint64_t sub_10006B9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  return (*(uint64_t (**)(void))(v28
                              + 8
                              * ((((unint64_t)(&a25 + a14 + v25 + ((v27 + 280) ^ (v26 + 2571))) < 0x10)
                                * ((13 * (v27 ^ 0x4EE)) ^ 0x768)) ^ v27)))();
}

uint64_t sub_10006BA00(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((992 * (v2 + v1 + 1477247021 >= (((a1 + 421) | 4) ^ 0x3ADu))) ^ a1)))();
}

uint64_t sub_10006BA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  LODWORD(a12) = a2;
  return sub_10008D304(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_10006BA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v29 - 144) = a25;
  *(void *)(v29 - 136) = a23;
  *(void *)(v29 - 128) = a23;
  *(void *)(v29 - 112) = v27;
  *(_DWORD *)(v29 - 120) = v25
                         + 127
                         + 69008221 * ((~((v29 - 144) | 0xBBD811F3) + ((v29 - 144) & 0xBBD811F3)) ^ 0x9785BC06);
  (*(void (**)(uint64_t))(v26 + 8 * (v25 + 1140)))(v29 - 144);
  *(void *)(v29 - 136) = a23;
  *(void *)(v29 - 128) = a23;
  *(void *)(v29 - 112) = v27;
  *(void *)(v29 - 144) = a25;
  *(_DWORD *)(v29 - 120) = v25
                         + 127
                         + 69008221
                         * ((((v29 - 144) | 0x72FD70B0) - (v29 - 144) + ((v29 - 144) & 0x8D028F48)) ^ 0xA15F22BA);
  (*(void (**)(uint64_t))(v26 + 8 * (v25 + 1140)))(v29 - 144);
  int v30 = 2078219279 * ((-1280682396 - ((v29 - 144) | 0xB3AA5664) + ((v29 - 144) | 0x4C55A99B)) ^ 0x96AF3FEF);
  *(_DWORD *)(v29 - 140) = -1131453697 - v30 + v28 + 1;
  *(_DWORD *)(v29 - 128) = (v25 + 513) ^ v30;
  *(void *)(v29 - 136) = a24;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v25 + 1156)))(v29 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * ((484
                                              * (((v25 + 23) ^ (*(_DWORD *)(v29 - 144) == -56550210)) & 1)) ^ v25)))(v31);
}

uint64_t sub_10006BC08@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 - 941042785)) = *(unsigned char *)(v5 + (a2 - 941042785)) ^ 0x77;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((28 * (((a3 ^ (v4 + 10)) ^ (a2 - 1 == a4)) & 1)) ^ (v6 + a3 + 683))))();
}

uint64_t sub_10006BC5C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((v1 + 22 + ((v1 + 1588156896) & 0xA156A3F3) - 948) * (v0 > 0)) ^ v1)))();
}

uint64_t sub_10006BCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  STACK[0x460] = *(void *)(v10 + 8 * v9);
  return sub_1000743A8(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_10006BCF8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  int v40 = v37 + v38;
  unsigned int v41 = v37 + v38 + 469835780;
  if (v41 <= 0x40) {
    unsigned int v41 = 64;
  }
  BOOL v42 = __CFADD__(v40 + (((v36 - 1952) | 0x5C6) ^ 0x1C0125DC), a2 - 469837757 + a36 + v41 + 1977);
  return (*(uint64_t (**)(void))(v39 + 8 * ((95 * v42) ^ v36)))();
}

void sub_10006BD74(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10006BDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v67 = v64 ^ 0x3A1;
  uint64_t v68 = *(void *)(v66 + 8 * (v64 - 981)) - 8;
  uint64_t v69 = *(void *)(v66 + 8 * (v64 ^ 0x446)) - 4;
  uint64_t v70 = *(void *)(v66 + 8 * (v64 ^ 0x420)) - 4;
  char v71 = *(unsigned char *)(v70 + (v63[14] ^ ((v64 ^ 0xA1) - 89)));
  char v72 = *(unsigned char *)(v70 + (v63[10] ^ 0xCBLL));
  uint64_t v73 = *(void *)(v66 + 8 * (v64 ^ 0x478)) - 12;
  unsigned int v74 = *(unsigned __int8 *)(v73 + (v63[1] ^ 0x1ALL));
  int v75 = (v74 >> 1) ^ (((((v74 ^ 0x48) + (v74 & 0xD5 ^ 0xBF) + 1) ^ v74 & 0xDF) & 0xF0) >> 4) ^ 0x47;
  int v76 = ((v63[3] ^ 0xB8) + *(unsigned char *)(v68 + (v63[3] ^ 0x54)) - 46) | ((v74 ^ 9 ^ (v75 + (~(2 * v75) | 0xFB) - 125)) << 16);
  LOBYTE(v74) = *(unsigned char *)(v70 + (v63[6] ^ 0x2ELL));
  int v77 = (((*(unsigned __int8 *)(v69 + (v63[8] ^ 0x65)) + (v63[8] ^ 0x34) - 117) ^ 0xF5) << 24) | (((v72 ^ (16 * v72)) ^ 0x4E) << 8) | ((v63[11] ^ 0x3E) + *(unsigned char *)(v68 + (v63[11] ^ 0xD2)) - 46);
  unsigned int v78 = *(unsigned __int8 *)(v73 + (v63[13] ^ 0x5BLL));
  int v79 = ((v63[7] ^ 0x90) + *(unsigned char *)(v68 + (v63[7] ^ 0x7CLL)) - 46) | ((((v63[4] ^ 0x13)
                                                                                         + *(unsigned __int8 *)(v69 + (v63[4] ^ 0x42))
                                                                                         - 117) ^ 0xE6) << 24) | (((v74 ^ (16 * v74)) ^ 0x52) << 8);
  unsigned int v80 = (((v78 >> 4) ^ (v78 >> 1) ^ 0x47) + (~(2 * ((v78 >> 4) ^ (v78 >> 1) ^ 0x47)) | 0xFFFFFFC5) - 98) ^ v78;
  int v81 = (((v71 ^ (16 * v71)) ^ 0x82) << 8) | ((v80 - ((2 * v80) & 0x2E) + 23) << 16);
  LOBYTE(v80) = *(unsigned char *)(v73 + (v63[5] ^ 0xEDLL));
  int v82 = ((v80 ^ 0x9D) >> 4) ^ ((v80 ^ 0x9D) >> 1);
  LOBYTE(v80) = v80 ^ 0x6C ^ (v82 - ((2 * v82) & 0xBC) - 34);
  unsigned int v83 = *(unsigned __int8 *)(v73 + (v63[9] ^ 0x38));
  uint64_t v333 = v69;
  uint64_t v334 = v68;
  uint64_t v332 = v70;
  unsigned int v84 = v76 & 0xFFFF00FF | (((*(unsigned __int8 *)(v69 + (*v63 ^ 0x81)) + (*v63 ^ 0xD0) - 117) ^ 0x3C) << 24) | (((*(unsigned char *)(v70 + (v63[2] ^ 0x22)) ^ (16 * *(unsigned char *)(v70 + (v63[2] ^ 0x22)))) ^ 0x7C) << 8);
  LODWORD(STACK[0x2C8]) = (v81 & 0xFFFFFF00 | ((((v63[12] ^ 0x13) + *(unsigned __int8 *)(v69 + (v63[12] ^ 0x42)) - 117) ^ 0xE6) << 24) | (*(unsigned char *)(v68 + (v63[15] ^ 0x38)) + (v63[15] ^ 0xD4) - 46)) ^ 0x71B038AF;
  LODWORD(STACK[0x2A8]) = v84 ^ 0x43F817AC;
  LODWORD(STACK[0x2A0]) = (v79 & 0xFF00FFFF | (v80 << 16)) ^ 0x6F25ED1;
  LODWORD(STACK[0x2C0]) = (v77 & 0xFF00FFFF | (((v83 ^ (((v83 >> 4) ^ (v83 >> 1) ^ 0x47)
                                                                       - ((2 * ((v83 >> 4) ^ (v83 >> 1) ^ 0x47)) & 0x8C)
                                                                       - 58)) ^ 0xF0) << 16)) ^ 0x5E8B1198;
  CFTypeRef v330 = (unsigned char *)STACK[0x568];
  v331 = (unsigned __int8 *)STACK[0x570];
  STACK[0x288] = 14;
  uint64_t v85 = v70;
  unsigned int v86 = *(unsigned __int8 *)(v70 + (v331[14] ^ 0xD9));
  HIDWORD(v340) = v67 - 865;
  unint64_t v87 = ((v67 - 865) ^ 0xFFFFFB85) & 0x3C355D3D ^ 0x3C355D3D;
  STACK[0x200] = v87;
  HIDWORD(a17) = (v67 - 1560840450) & 0x5D08873B;
  uint64_t v88 = v331[v87];
  int v89 = (((HIDWORD(a17) - 9) ^ (16 * v86)) - (v86 >> 1 << 6) - 31) ^ v86;
  LOBYTE(v86) = v88 ^ 0xB7;
  char v90 = *(unsigned char *)(v69 + (v88 ^ 0xE6));
  STACK[0x298] = 15;
  int v91 = v331[15];
  unsigned __int8 v92 = v90 + v86 - 117;
  if ((v91 & 0x20) != 0) {
    int v93 = -32;
  }
  else {
    int v93 = 32;
  }
  uint64_t v94 = (v93 + v91);
  int v95 = *(unsigned __int8 *)(v68 + (v94 ^ 0xDD));
  STACK[0x260] = 6;
  int v349 = v95 + (v94 ^ 0x31);
  LODWORD(v94) = *(unsigned __int8 *)(v70 + (v331[6] ^ 0x51));
  STACK[0x220] = 12;
  HIDWORD(v96) = v94 ^ (((16 * v94) ^ 0x10) - (v94 >> 1 << 6) - 31) ^ 0x3F;
  LODWORD(v96) = BYTE4(v96) & 0xF8;
  unint64_t v97 = ((v96 >> 3) | ((unint64_t)(v92 ^ 0xE5u) << 13)) ^ 0x58F620A6;
  unsigned int v98 = (v97 >> 21) | (v97 << 11);
  int v348 = *(unsigned __int8 *)(v69 + (v331[12] ^ 0xF7) - 2 * ((v331[12] ^ 0xFFFFFFE7) & 0xAE) + 174) + (v331[12] ^ 8);
  uint64_t v99 = *v331;
  STACK[0x240] = 3;
  uint64_t v100 = v331[3];
  int v101 = *(unsigned __int8 *)(v69 + (v99 ^ 0xD8)) + (v99 ^ 0x76) - 2 * (v99 ^ 0x76);
  STACK[0x250] = 8;
  int v346 = (v100 ^ 0xFFFFFFBB) + *(unsigned __int8 *)(v68 + (v100 ^ 0x57));
  LOBYTE(v99) = (v331[8] ^ 0xA7) + *(unsigned char *)(v69 + (v331[8] ^ 0xF6));
  STACK[0x238] = 7;
  uint64_t v102 = v331[7];
  char v345 = v99 - ((2 * v99 + 22) & 0x4E);
  LOBYTE(v100) = v102 ^ 0xE9;
  LOBYTE(v99) = *(unsigned char *)(v68 + (v102 ^ 5));
  LODWORD(v102) = *(unsigned __int8 *)(v73 + (v331[13] ^ 0x12));
  LOBYTE(v99) = v100 + v99;
  LODWORD(v100) = ((unint64_t)((v102 >> 3) & 0xFFFFFFFB ^ v102 & 0x5A | (v102 >> 3) & 4 ^ v102 & 0xA4) >> 1) ^ 0x47;
  unsigned __int8 v103 = v102 ^ 0xA1 ^ (v100 - ((2 * v100) & 0xC4) - 30);
  LOBYTE(v100) = *(unsigned char *)(v73 + (v331[5] ^ 0x9CLL));
  int v104 = ((v100 ^ 0x9D) >> 4) ^ ((v100 ^ 0x9D) >> 1);
  int v105 = (v99 - 46) | ((v100 ^ 0xE6 ^ (v104 - ((2 * v104) & 0xBC) - 34)) << 16);
  unsigned int v106 = *(unsigned __int8 *)(v73 + (v331[9] ^ 0x76));
  LODWORD(v100) = v106 & 8 ^ 0xFFFFFFD9;
  int v107 = v67;
  BOOL v108 = ((v100 + 15) & (v106 >> 3)) == 0;
  char v109 = v100 + 112;
  char v110 = 18 - v100;
  if (v108) {
    char v110 = v109;
  }
  int v111 = ((((((v106 >> 3) ^ 0x13) + v110 - 65) ^ v106 & 0xF7) & 0xFE) >> 1) ^ 0x4A;
  unsigned __int8 v343 = v106 ^ (v111 - ((2 * v111) & 0xC0) + 96);
  int v112 = *(unsigned __int8 *)(v73 + (v331[1] ^ 0xCFLL));
  unsigned int v113 = ((v112 | 0xFFFFFFBF) + 68) ^ v112 & 0xFFFFFFBF;
  int v114 = (v113 >> 4) ^ (v113 >> 1) ^ 0x46;
  char v115 = *(unsigned char *)(v70 + (v331[10] ^ 0xFBLL));
  unsigned int v116 = (v114 - ((2 * v114) & 0xCCCCCCCC) + 102) ^ v113;
  int v117 = v107;
  HIDWORD(v350) = v107;
  uint64_t v118 = *(void *)(v66 + 8 * (v107 - 1903)) - 4;
  LODWORD(v340) = v103;
  int v119 = *(_DWORD *)(v118 + 4 * (v103 ^ 0xABu));
  uint64_t v120 = *(void *)(v66 + 8 * (v117 - 1847)) - 4;
  LODWORD(v338) = (v115 ^ (16 * v115)) ^ 0x48;
  int v121 = *(_DWORD *)(v120 + 4 * ((v115 ^ (16 * v115)) ^ 0xC7u));
  HIDWORD(v122) = v121 ^ 0xF930;
  LODWORD(v122) = v121 ^ 0x17560000;
  HIDWORD(v338) = v101 - 118;
  uint64_t v123 = *(void *)(v66 + 8 * (v117 ^ 0x7F0)) - 8;
  int v124 = (v122 >> 16) ^ *(_DWORD *)(v123 + 4 * ((v101 - 118) ^ 0xF9u)) ^ (16 * (v119 ^ 0xA0F4B4B0)
                                                                                           + 1759093154
                                                                                           - ((32 * (v119 ^ 0xA0F4B4B0)) & 0xD1B34340));
  int v125 = v105 ^ v98;
  uint64_t v126 = *(void *)(v66 + 8 * (v117 ^ 0x7C9));
  int v127 = *(_DWORD *)(v126 + 4 * ((v105 ^ v98) ^ 0x78u)) ^ v119;
  LODWORD(v341) = v89;
  int v128 = *(_DWORD *)(v120 + 4 * (v89 ^ 0x71u));
  unsigned int v129 = v127 ^ (v124 - 970714929 - ((2 * v124) & 0x8C48219E));
  HIDWORD(v122) = v128 ^ 0xF930;
  LODWORD(v122) = v128 ^ 0x17560000;
  HIDWORD(v339) = v116;
  unsigned int v130 = *(_DWORD *)(v118 + 4 * (v116 ^ 0x47u)) ^ 0xA0F4B4B0;
  int v131 = (v122 >> 16) ^ (16 * v130 + 1759093154 - ((32 * v130) & 0xD1B34340)) ^ *(_DWORD *)(v123
                                                                                          + 4 * (HIBYTE(v98) ^ 0xDD));
  HIDWORD(v337) = (*(unsigned char *)(v68 + (v331[11] ^ 0x12)) + (v331[11] ^ 0xFE) - 46);
  unsigned int v132 = *(_DWORD *)(v126 + 4 * (HIDWORD(v337) ^ 0xB9u)) ^ v130 ^ (v131 - 970714929 - ((2 * v131) & 0x8C48219E));
  int v133 = *(unsigned __int8 *)(v85 + (v331[2] ^ 0x26)) ^ 0x59;
  int v134 = v133 ^ (16 * v133);
  LODWORD(v339) = v125;
  unsigned int v135 = *(_DWORD *)(v118 + 4 * (BYTE2(v125) ^ 3u)) ^ 0xA0F4B4B0;
  LODWORD(v337) = v134;
  int v136 = *(_DWORD *)(v120 + 4 * (v134 ^ 0xFBu));
  HIDWORD(v122) = v136 ^ 0xF930;
  LODWORD(v122) = v136 ^ 0x17560000;
  LODWORD(v336) = (v345 - 78);
  int v137 = (v122 >> 16) ^ *(_DWORD *)(v123 + 4 * (v336 ^ 0x40)) ^ (16 * v135
                                                                               + 1759093154
                                                                               - ((32 * v135) & 0xD1B34340));
  HIDWORD(v336) = v349 - 46;
  unsigned int v138 = *(_DWORD *)(v126 + 4 * ((v349 - 46) ^ 0xEBu)) ^ v135 ^ (v137
                                                                                  - 970714929
                                                                                  - ((2 * v137) & 0x8C48219E));
  LODWORD(v335) = v343 ^ 0xF8;
  int v139 = *(_DWORD *)(v118 + 4 * (v343 ^ 0x81u));
  int v140 = *(_DWORD *)(v120 + 4 * (BYTE1(v98) ^ 0x31u));
  HIDWORD(v122) = v140 ^ 0xF930;
  LODWORD(v122) = v140 ^ 0x17560000;
  HIDWORD(v335) = v348 - 117;
  int v141 = (v122 >> 16) ^ *(_DWORD *)(v123 + 4 * ((v348 - 117) ^ 0xF7u)) ^ (16 * (v139 ^ 0xA0F4B4B0)
                                                                                           + 1759093154
                                                                                           - ((32 * (v139 ^ 0xA0F4B4B0)) & 0xD1B34340));
  HIDWORD(a32) = v346 - 46;
  unsigned int v142 = *(_DWORD *)(v126 + 4 * ((v346 - 46) ^ 0x33u)) ^ v139 ^ (v141
                                                                                  - 970714929
                                                                                  - ((2 * v141) & 0x8C48219E));
  int v143 = *(_DWORD *)(v120 + 4 * (BYTE1(v138) ^ 0xF4u));
  HIDWORD(v122) = v143 ^ 0xF930;
  LODWORD(v122) = v143 ^ 0x17560000;
  unsigned int v144 = *(_DWORD *)(v118 + 4 * (BYTE2(v142) ^ 0x4Fu)) ^ 0xA0F4B4B0;
  unsigned int v145 = v144 ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v129) ^ 0xF7)) ^ *(_DWORD *)(v126
                                                                            + 4 * (v132 ^ 0xDBu)) ^ (16 * v144 + 1759093154 - ((32 * v144) & 0xD1B34340)) ^ (v122 >> 16);
  int v146 = *(_DWORD *)(v118 + 4 * (BYTE2(v129) ^ 0x18u));
  int v147 = *(_DWORD *)(v120 + 4 * ((unsigned __int16)(v142 ^ 0xB69E) >> 8));
  HIDWORD(v122) = v147 ^ 0xF930;
  LODWORD(v122) = v147 ^ 0x17560000;
  int v148 = (16 * (v146 ^ 0xA0F4B4B0) + 1759093154 - ((32 * (v146 ^ 0xA0F4B4B0)) & 0xD1B34340)) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v132) ^ 0xF)) ^ (v122 >> 16);
  unsigned int v149 = *(_DWORD *)(v126 + 4 * (v138 ^ 0x80u)) ^ v146 ^ (v148 - 970714929 - ((2 * v148) & 0x8C48219E));
  unsigned int v150 = *(_DWORD *)(v118 + 4 * (BYTE2(v132) ^ 0xD6u)) ^ 0xA0F4B4B0;
  unsigned int v151 = (16 * v150 + 1759093154 - ((32 * v150) & 0xD1B34340)) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v138) ^ 0x19));
  int v152 = *(_DWORD *)(v120 + 4 * (BYTE1(v129) ^ 0x52u));
  HIDWORD(v122) = v152 ^ 0xF930;
  LODWORD(v122) = v152 ^ 0x17560000;
  unsigned int v153 = *(_DWORD *)(v126 + 4 * (v142 ^ 0x9Eu)) ^ v150 ^ (v122 >> 16) ^ (v151
                                                                                          - 970714928
                                                                                          + ~((2 * v151) & 0x8C48219E));
  int v154 = *(_DWORD *)(v118 + 4 * (BYTE2(v138) ^ 0x32u));
  int v155 = *(_DWORD *)(v120 + 4 * (BYTE1(v132) ^ 0xADu));
  HIDWORD(v122) = v155 ^ 0xF930;
  LODWORD(v122) = v155 ^ 0x17560000;
  int v156 = (v122 >> 16) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v142) ^ 0x1D)) ^ (16 * (v154 ^ 0xA0F4B4B0)
                                                                         + 1759093154
                                                                         - ((32 * (v154 ^ 0xA0F4B4B0)) & 0xD1B34340));
  unsigned int v157 = v154 ^ *(_DWORD *)(v126 + 4 * (v129 ^ 0x10u)) ^ 0xD13D6274 ^ (v156
                                                                                        - 970714929
                                                                                        - ((2 * v156) & 0x8C48219E));
  unsigned int v158 = v157
       - ((2 * v157) & 0x5F186BF6)
       + 797718011
       - ((2 * (v157 - ((2 * v157) & 0x5F186BF6) + 797718011)) & 0x60EECA6)
       + 50820691;
  int v159 = *(_DWORD *)(v118 + 4 * (BYTE2(v158) ^ 0xC4u));
  int v160 = *(_DWORD *)(v120 + 4 * (BYTE1(v153) ^ 0xDFu));
  unsigned int v161 = (16 * (v159 ^ 0xA0F4B4B0) + 1759093154 - ((32 * (v159 ^ 0xA0F4B4B0)) & 0xD1B34340)) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v145) ^ 0x50)) ^ (((v160 ^ 0x1756F930u) >> (v145 & 0x10) >> (v145 & 0x10 ^ 0x10)) + ((v160 << 16) ^ 0xF9300000));
  unsigned int v162 = *(_DWORD *)(v126 + 4 * (v149 ^ 0x69u)) ^ v159 ^ (v161 - 970714929 - ((2 * v161) & 0x8C48219E));
  LOWORD(v161) = v145 ^ 0xC60B;
  unsigned int v163 = *(_DWORD *)(v118 + 4 * (((v145 ^ 0xB7EDC60B) >> 16) ^ 0x93u)) ^ 0xA0F4B4B0;
  int v164 = *(_DWORD *)(v120 + 4 * (BYTE1(v158) ^ 0xE5u));
  HIDWORD(v122) = v164 ^ 0xF930;
  LODWORD(v122) = v164 ^ 0x17560000;
  int v165 = (16 * v163 + 1759093154 - ((32 * v163) & 0xD1B34340)) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v149) ^ 0xEB)) ^ (v122 >> 16);
  unsigned int v166 = *(_DWORD *)(v126 + 4 * (v153 ^ 0xF9u)) ^ v163 ^ (v165 - 970714929 - ((2 * v165) & 0x8C48219E));
  int v167 = *(_DWORD *)(v123 + 4 * (HIBYTE(v153) ^ 5));
  HIDWORD(v122) = v167 ^ 0x1A2;
  LODWORD(v122) = v167 ^ 0x68D9A000;
  int v168 = v122 >> 10;
  int v169 = *(_DWORD *)(v120 + 4 * (BYTE1(v161) ^ 2u));
  HIDWORD(v122) = v169 ^ 0xF930;
  LODWORD(v122) = v169 ^ 0x17560000;
  unsigned int v170 = *(_DWORD *)(v118 + 4 * (BYTE2(v149) ^ 0xC1u)) ^ 0xA0F4B4B0;
  unsigned int v171 = ((v168 ^ 0x25EB099C) << 10) ^ (16 * v170) ^ ((v168 ^ 0x25EB099Cu) >> 22);
  int v172 = *(_DWORD *)(v126 + 4 * (v158 ^ 0x60u)) ^ v170 ^ (v122 >> 16);
  int v173 = *(_DWORD *)(v120 + 4 * (BYTE1(v149) ^ 0x79u));
  HIDWORD(v122) = v173 ^ 0xF930;
  LODWORD(v122) = v173 ^ 0x17560000;
  unsigned int v174 = v172 ^ (v171 - 970714929 - ((2 * v171) & 0x8C48219E));
  int v175 = *(_DWORD *)(v118 + 4 * (BYTE2(v153) ^ 0xEBu));
  int v176 = (v122 >> 16) ^ (16 * (v175 ^ 0xA0F4B4B0) + 1759093154 - ((32 * (v175 ^ 0xA0F4B4B0)) & 0xD1B34340)) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v158) ^ 0xEA));
  unsigned int v177 = *(_DWORD *)(v126 + 4 * (v161 ^ 0xD7u)) ^ v175 ^ (v176 - 970714929 - ((2 * v176) & 0x8C48219E));
  unsigned int v178 = *(_DWORD *)(v118 + 4 * (BYTE2(v177) ^ 0x96u)) ^ 0xA0F4B4B0;
  int v179 = *(_DWORD *)(v120 + 4 * (BYTE1(v174) ^ 0xE4u));
  HIDWORD(v122) = v179 ^ 0xF930;
  LODWORD(v122) = v179 ^ 0x17560000;
  unsigned int v180 = (16 * v178 + 1759093154 - ((32 * v178) & 0xD1B34340)) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v162) ^ 0x7D));
  unsigned int v181 = *(_DWORD *)(v126 + 4 * (v166 ^ 0x68u)) ^ v178 ^ (v122 >> 16) ^ (v180
                                                                                          - 970714929
                                                                                          - ((2 * v180) & 0x8C48219E));
  int v182 = *(_DWORD *)(v118 + 4 * (BYTE2(v162) ^ 0xAFu));
  int v183 = *(_DWORD *)(v120 + 4 * ((unsigned __int16)(v177 ^ 0x9DE7) >> 8));
  HIDWORD(v122) = v183 ^ 0xF930;
  LODWORD(v122) = v183 ^ 0x17560000;
  int v184 = (16 * (v182 ^ 0xA0F4B4B0) + 1759093154 - ((32 * (v182 ^ 0xA0F4B4B0)) & 0xD1B34340)) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v166) ^ 0xCE)) ^ (v122 >> 16);
  unsigned int v185 = *(_DWORD *)(v126 + 4 * (v174 ^ 0x15u)) ^ v182 ^ (v184
                                                                           - 970714928
                                                                           + ~((2 * v184) & 0x8C48219E));
  unsigned int v186 = *(_DWORD *)(v118 + 4 * (BYTE2(v166) ^ 0x60u)) ^ 0xA0F4B4B0;
  int v187 = *(_DWORD *)(v120 + 4 * (BYTE1(v162) ^ 0x2Fu));
  HIDWORD(v122) = v187 ^ 0xF930;
  LODWORD(v122) = v187 ^ 0x17560000;
  int v188 = (16 * v186 + 1759093154 - ((32 * v186) & 0xD1B34340)) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v174) ^ 0xF1)) ^ (v122 >> 16);
  unsigned int v189 = *(_DWORD *)(v126 + 4 * (v177 ^ 0xE7u)) ^ v186 ^ (v188 - 970714929 - ((2 * v188) & 0x8C48219E));
  int v190 = BYTE1(v166) ^ 0xC;
  if ((v166 & 0x1000) != 0) {
    int v191 = -16;
  }
  else {
    int v191 = 16;
  }
  unsigned int v192 = *(_DWORD *)(v118 + 4 * (BYTE2(v174) ^ 0xF7u)) ^ 0xA0F4B4B0;
  unsigned int v193 = *(_DWORD *)(v120 + 4 * ((v190 + v191) ^ 0x83u));
  unsigned int v194 = *(_DWORD *)(v123 + 4 * (HIBYTE(v177) ^ 1)) ^ HIWORD(v193) ^ (v193 << 16) ^ (16 * v192
                                                                                     + 1759093154
                                                                                     - ((32 * v192) & 0xD1B34340)) ^ 0xF9301756;
  unsigned int v195 = *(_DWORD *)(v126 + 4 * (v162 ^ 0xD3u)) ^ v192 ^ (v194 - 970714929 - ((2 * v194) & 0x8C48219E));
  int v196 = *(_DWORD *)(v118 + 4 * (BYTE2(v195) ^ 0xBCu));
  int v197 = *(_DWORD *)(v120 + 4 * (BYTE1(v189) ^ 0x8Du));
  HIDWORD(v198) = v197 ^ 0xF930;
  LODWORD(v198) = v197 ^ 0x17560000;
  int v199 = (v198 >> 16) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v181) ^ 0xCC)) ^ (16 * (v196 ^ 0xA0F4B4B0)
                                                                         + 1759093154
                                                                         - ((32 * (v196 ^ 0xA0F4B4B0)) & 0xD1B34340));
  unsigned int v200 = *(_DWORD *)(v126 + 4 * (v185 ^ 0x19u)) ^ v196 ^ (v199 - 970714929 - ((2 * v199) & 0x8C48219E));
  int v201 = *(_DWORD *)(v118 + 4 * (BYTE2(v181) ^ 0x9Cu));
  int v202 = *(_DWORD *)(v120 + 4 * (BYTE1(v195) ^ 0x3Bu));
  HIDWORD(v198) = v202 ^ 0xF930;
  LODWORD(v198) = v202 ^ 0x17560000;
  int v203 = (v198 >> 16) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v185) ^ 0xA0)) ^ (16 * (v201 ^ 0xA0F4B4B0)
                                                                         + 1759093154
                                                                         - ((32 * (v201 ^ 0xA0F4B4B0)) & 0xD1B34340));
  unsigned int v204 = *(_DWORD *)(v126 + 4 * (v189 ^ 0x48u)) ^ v201 ^ (v203 - 970714929 - ((2 * v203) & 0x8C48219E));
  unsigned int v205 = *(_DWORD *)(v118 + 4 * ((v185 ^ 0x49C0A519) >> 16)) ^ 0xA0F4B4B0;
  int v206 = *(_DWORD *)(v120 + 4 * (BYTE1(v181) ^ 0xD5u));
  HIDWORD(v198) = v206 ^ 0xF930;
  LODWORD(v198) = v206 ^ 0x17560000;
  int v207 = (16 * v205 + 1759093154 - ((32 * v205) & 0xD1B34340)) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v189) ^ 0x80)) ^ (v198 >> 16);
  unsigned int v208 = *(_DWORD *)(v126 + 4 * (v195 ^ 0x77u)) ^ v205 ^ (v207 - 970714929 - ((2 * v207) & 0x8C48219E));
  int v209 = *(_DWORD *)(v118 + 4 * (BYTE2(v189) ^ 0xBEu));
  int v210 = *(_DWORD *)(v120 + 4 * (BYTE1(v185) ^ 0x36u));
  HIDWORD(v198) = v210 ^ 0xF930;
  LODWORD(v198) = v210 ^ 0x17560000;
  int v211 = (v198 >> 16) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v195) ^ 0xEF)) ^ (16 * (v209 ^ 0xA0F4B4B0)
                                                                         + 1759093154
                                                                         - ((32 * (v209 ^ 0xA0F4B4B0)) & 0xD1B34340));
  unsigned int v212 = *(_DWORD *)(v126 + 4 * (v181 ^ 0x83u)) ^ v209 ^ (v211 - 970714929 - ((2 * v211) & 0x8C48219E));
  unsigned int v213 = *(_DWORD *)(v118 + 4 * ((v212 ^ 0x35F9172D) >> 16)) ^ 0xA0F4B4B0;
  int v214 = *(_DWORD *)(v120 + 4 * (BYTE1(v208) ^ 0x89u));
  unsigned int v215 = (16 * v213 + 1759093154 - ((32 * v213) & 0xD1B34340)) ^ *(_DWORD *)(v123 + 4 * ((v200 ^ 0xB1A6AF7A) >> 24));
  HIDWORD(v198) = v214 ^ 0xF930;
  LODWORD(v198) = v214 ^ 0x17560000;
  unsigned __int8 v216 = BYTE1(v204) ^ 0x65;
  int v217 = *(_DWORD *)(v126 + 4 * (v204 ^ 0x38u)) ^ v213 ^ (v198 >> 16) ^ 0x71C9D6C4 ^ (v215 - 970714929 - ((2 * v215) & 0x8C48219E));
  int v218 = *(_DWORD *)(v120 + 4 * (BYTE1(v212) ^ 0x84u));
  HIDWORD(v198) = v218 ^ 0xF930;
  LODWORD(v198) = v218 ^ 0x17560000;
  int v219 = *(_DWORD *)(v118 + 4 * ((v200 ^ 0xB1A6AF7A) >> 16));
  int v220 = v217 - ((2 * v217) & 0xA4F186FA);
  int v221 = (16 * (v219 ^ 0xA0F4B4B0) + 1759093154 - ((32 * (v219 ^ 0xA0F4B4B0)) & 0xD1B34340)) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v204) ^ 0x7F)) ^ (v198 >> 16);
  unsigned int v222 = *(_DWORD *)(v126 + 4 * (v208 ^ 0x43u)) ^ v219 ^ (v221 - 970714929 - ((2 * v221) & 0x8C48219E));
  unsigned int v223 = ((HIBYTE(v208) ^ 0xFFFFFF6C) + 234) ^ ((HIBYTE(v208) ^ 0xFFFFFF85) + 1);
  unsigned int v224 = *(_DWORD *)(v118 + 4 * (BYTE2(v204) ^ 0x53u)) ^ 0xA0F4B4B0;
  int v225 = *(_DWORD *)(v120 + 4 * (BYTE1(v200) ^ 0x3Cu));
  HIDWORD(v198) = v225 ^ 0xF930;
  LODWORD(v198) = v225 ^ 0x17560000;
  int v226 = (16 * v224 + 1759093154 - ((32 * v224) & 0xD1B34340)) ^ (v198 >> 16) ^ *(_DWORD *)(v123
                                                                                          + 4
                                                                                          * ((HIBYTE(v208) ^ 0xE6CFEF2F ^ (v223 - 422580433 - ((2 * v223) & 0xCD9FDEAA) + 38))
                                                                                           + 233));
  unsigned int v227 = *(_DWORD *)(v126 + 4 * (v212 ^ 0x2Du)) ^ v224 ^ (v226 - 970714929 - ((2 * v226) & 0x8C48219E));
  int v228 = *(_DWORD *)(v118 + 4 * (BYTE2(v208) ^ 0x85u));
  int v229 = *(_DWORD *)(v120 + 4 * v216);
  HIDWORD(v198) = v229 ^ 0xF930;
  LODWORD(v198) = v229 ^ 0x17560000;
  int v230 = (v198 >> 16) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v212) ^ 0xDC)) ^ (16 * (v228 ^ 0xA0F4B4B0)
                                                                         + 1759093154
                                                                         - ((32 * (v228 ^ 0xA0F4B4B0)) & 0xD1B34340));
  unsigned int v231 = *(_DWORD *)(v126 + 4 * (v200 ^ 0x49u)) ^ v228 ^ (v230 - 970714929 - ((2 * v230) & 0x8C48219E));
  int v232 = *(_DWORD *)(v118 + 4 * (BYTE2(v231) ^ 0x73u));
  int v233 = *(_DWORD *)(v120 + 4 * (BYTE1(v227) ^ 0xDEu));
  HIDWORD(v198) = v233 ^ 0xF930;
  LODWORD(v198) = v233 ^ 0x17560000;
  int v234 = v220 + 1383646077;
  int v235 = (v198 >> 16) ^ *(_DWORD *)(v123 + 4 * (((v220 + 1383646077) >> 24) ^ 0x3B)) ^ (16 * (v232 ^ 0xA0F4B4B0) + 1759093154 - ((32 * (v232 ^ 0xA0F4B4B0)) & 0xD1B34340));
  int v236 = *(_DWORD *)(v120 + 4 * (BYTE1(v231) ^ 0x8Bu));
  unsigned int v237 = *(_DWORD *)(v126 + 4 * (v222 ^ 0x63u)) ^ v232 ^ (v235 - 970714929 - ((2 * v235) & 0x8C48219E));
  HIDWORD(v198) = v236 ^ 0xF930;
  LODWORD(v198) = v236 ^ 0x17560000;
  unsigned int v238 = *(_DWORD *)(v118 + 4 * (BYTE2(v234) ^ 0x12u)) ^ 0xA0F4B4B0;
  int v239 = *(_DWORD *)(v118 + 4 * (BYTE2(v222) ^ 0xEu));
  unsigned int v240 = v238 ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v222) ^ 0x7D)) ^ *(_DWORD *)(v126
                                                                            + 4 * (v227 ^ 0x69u)) ^ ((v198 >> 16) - 970714929 - ((2 * (v198 >> 16)) & 0x8C48219E)) ^ (16 * v238 + 1759093154 - ((32 * v238) & 0xD1B34340));
  int v241 = *(_DWORD *)(v120 + 4 * (BYTE1(v234) ^ 0xA8u));
  HIDWORD(v198) = v241 ^ 0xF930;
  LODWORD(v198) = v241 ^ 0x17560000;
  int v242 = (16 * (v239 ^ 0xA0F4B4B0) + 1759093154 - ((32 * (v239 ^ 0xA0F4B4B0)) & 0xD1B34340)) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v227) ^ 0x5F)) ^ (v198 >> 16);
  unsigned int v243 = *(_DWORD *)(v126
                   + 4
                   * ((((v231 ^ 0xFFFFFF33) - v231 + 256) ^ 0xFFFFFFFE)
                    + (v231 ^ 0xFF))) ^ v239 ^ (v242 - 970714929 - ((2 * v242) & 0x8C48219E));
  int v244 = *(_DWORD *)(v118 + 4 * (BYTE2(v227) ^ 0x2Du));
  int v245 = *(_DWORD *)(v120 + 4 * (BYTE1(v222) ^ 0x6Bu));
  HIDWORD(v198) = v245 ^ 0xF930;
  LODWORD(v198) = v245 ^ 0x17560000;
  int v246 = (v198 >> 16) ^ *(_DWORD *)(v123
                                  + 4
                                  * ((HIBYTE(v231) ^ 0xB5) & 0x90 ^ 0x86u ^ (~(2
                                                                                              * (HIBYTE(v231) ^ 0xB5 | 0x90))
                                                                                            + (HIBYTE(v231) ^ 0xB5 | 0x90)))) ^ (16 * (v244 ^ 0xA0F4B4B0) + 1759093154 - ((32 * (v244 ^ 0xA0F4B4B0)) & 0xD1B34340));
  unsigned int v247 = *(_DWORD *)(v126 + 4 * (v234 ^ 0x26u)) ^ v244 ^ (v246 - 970714929 - ((2 * v246) & 0x8C48219E));
  int v248 = *(_DWORD *)(v118 + 4 * ((v247 ^ 0xF9514007) >> 16));
  int v249 = *(_DWORD *)(v120 + 4 * ((unsigned __int16)(v243 ^ 0x339B) >> 8));
  HIDWORD(v198) = v249 ^ 0xF930;
  LODWORD(v198) = v249 ^ 0x17560000;
  int v250 = (16 * (v248 ^ 0xA0F4B4B0) + 1759093154 - ((32 * (v248 ^ 0xA0F4B4B0)) & 0xD1B34340)) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v237) ^ 0x72)) ^ (v198 >> 16);
  unsigned int v251 = *(_DWORD *)(v126 + 4 * (v240 ^ 0xEEu)) ^ v248 ^ (v250 - 970714929 - ((2 * v250) & 0x8C48219E));
  unsigned int v252 = *(_DWORD *)(v118 + 4 * (BYTE2(v237) ^ 0xD1u)) ^ 0xA0F4B4B0;
  int v253 = *(_DWORD *)(v120 + 4 * (BYTE1(v247) ^ 0xD3u));
  HIDWORD(v198) = v253 ^ 0xF930;
  LODWORD(v198) = v253 ^ 0x17560000;
  unsigned int v254 = v252 ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v240) ^ 0xD6)) ^ *(_DWORD *)(v126
                                                                            + 4 * (v243 ^ 0xA8u)) ^ (16 * v252 + 1759093154 - ((32 * v252) & 0xD1B34340)) ^ ((v198 >> 16) - 970714929 - ((2 * (v198 >> 16)) & 0x8C48219E));
  unsigned int v255 = *(_DWORD *)(v118 + 4 * (BYTE2(v240) ^ 0x56u)) ^ 0xA0F4B4B0;
  int v256 = *(_DWORD *)(v120 + 4 * (BYTE1(v237) ^ 0xFu));
  HIDWORD(v198) = v256 ^ 0xF930;
  LODWORD(v198) = v256 ^ 0x17560000;
  int v257 = *(_DWORD *)(v123 + 4 * ((v243 ^ 0x31EF339B) >> 24)) ^ *(_DWORD *)(v118 + 4 * (BYTE2(v240) ^ 0x56u)) ^ 0xCDB5C6CE ^ (16 * v255 + 1759093154 - ((32 * v255) & 0xD1B34340)) ^ (v198 >> 16);
  HIDWORD(v198) = *(_DWORD *)(v126 + 4 * (v247 ^ 7u)) ^ 0xDAACB475;
  LODWORD(v198) = HIDWORD(v198);
  LODWORD(v198) = (v198 >> 21) ^ __ROR4__(v257, 21) ^ 0x549BF9D9;
  HIDWORD(v198) = v198;
  int v258 = (v198 >> 11) - ((2 * (v198 >> 11)) & 0x455F60E2);
  unsigned int v259 = *(_DWORD *)(v118 + 4 * (BYTE2(v243) ^ 0x2Cu)) ^ 0xA0F4B4B0;
  int v260 = *(_DWORD *)(v120 + 4 * (BYTE1(v240) ^ 0xE4u));
  HIDWORD(v198) = v260 ^ 0xF930;
  LODWORD(v198) = v260 ^ 0x17560000;
  int v261 = (v198 >> 16) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v247) ^ 0x10)) ^ (16 * v259
                                                                         + 1759093154
                                                                         - ((32 * v259) & 0xD1B34340));
  unsigned int v262 = *(_DWORD *)(v126 + 4 * (v237 ^ 0x16u)) ^ v259 ^ (v261 - 970714929 - ((2 * v261) & 0x8C48219E));
  unsigned int v263 = *(_DWORD *)(v118 + 4 * (BYTE2(v251) ^ 0x80u)) ^ 0xA0F4B4B0;
  int v264 = *(_DWORD *)(v120 + 4 * (BYTE1(v262) ^ 0x66u));
  HIDWORD(v198) = v264 ^ 0xF930;
  LODWORD(v198) = v264 ^ 0x17560000;
  int v265 = *(_DWORD *)(v123 + 4 * (HIBYTE(v254) ^ 0x17)) ^ 0x6D41727E ^ v263 ^ (v198 >> 16) ^ (16 * v263
                                                                                             + 1759093154
                                                                                             - ((32 * v263) & 0xD1B34340));
  int v266 = v258 + 581939313;
  int v267 = *(_DWORD *)(v126 + 4 * (v266 ^ 0x9Eu));
  int v268 = (v265 & 0x200 | ((((unsigned __int16)(v265 & 0x200) >> 9) & 1) << 10)) ^ 0x3FF6F36D;
  BOOL v108 = ((v268 - 1073148781) & (v267 ^ 0xC62410CF)) == 0;
  int v269 = *(_DWORD *)(v118 + 4 * (BYTE2(v262) ^ 0x72u));
  int v270 = *(_DWORD *)(v120 + 4 * (BYTE1(v266) ^ 0x10u));
  HIDWORD(v198) = v270 ^ 0xF930;
  LODWORD(v198) = v270 ^ 0x17560000;
  int v271 = (v198 >> 16) ^ *(_DWORD *)(v123 + 4 * ((v251 ^ 0x744389F7) >> 24)) ^ (16 * (v269 ^ 0xA0F4B4B0)
                                                                               + 1759093154
                                                                               - ((32 * (v269 ^ 0xA0F4B4B0)) & 0xD1B34340));
  unsigned int v272 = *(_DWORD *)(v126 + 4 * (v254 ^ 0xEAu)) ^ v269 ^ (v271 - 970714929 - ((2 * v271) & 0x8C48219E));
  int v273 = v268 - 415252524;
  int v274 = 1731045038 - v268;
  if (v108) {
    int v274 = v273;
  }
  unsigned int v275 = ((v267 ^ 0xDAACB475) - 657896257 + v274) ^ v265 & 0xFFFFFDFF;
  int v276 = *(_DWORD *)(v118 + 4 * (BYTE2(v254) ^ 0x7Cu));
  unsigned int v277 = (16 * (v276 ^ 0xA0F4B4B0) + 1759093154 - ((32 * (v276 ^ 0xA0F4B4B0)) & 0xD1B34340)) ^ *(_DWORD *)(v123 + 4 * ((v266 ^ 0x3C0E839Eu) >> 24));
  int v278 = *(_DWORD *)(v120 + 4 * (BYTE1(v251) ^ 0x1Au));
  HIDWORD(v279) = v278 ^ 0xF930;
  LODWORD(v279) = v278 ^ 0x17560000;
  unsigned int v280 = *(_DWORD *)(v126 + 4 * (v262 ^ 0xDu)) ^ v276 ^ (v279 >> 16) ^ (v277
                                                                                         - 970714929
                                                                                         - ((2 * v277) & 0x8C48219E));
  int v281 = *(_DWORD *)(v118 + 4 * (BYTE2(v266) ^ 0xCDu));
  int v282 = *(_DWORD *)(v120 + 4 * (BYTE1(v254) ^ 0xD9u));
  HIDWORD(v279) = v282 ^ 0xF930;
  LODWORD(v279) = v282 ^ 0x17560000;
  int v283 = (16 * (v281 ^ 0xA0F4B4B0) + 1759093154 - ((32 * (v281 ^ 0xA0F4B4B0)) & 0xD1B34340)) ^ *(_DWORD *)(v123 + 4 * (HIBYTE(v262) ^ 0x32)) ^ (v279 >> 16);
  unsigned int v284 = *(_DWORD *)(v126 + 4 * (v251 ^ 0xC4u)) ^ v281 ^ (v283 - 970714929 - ((2 * v283) & 0x8C48219E));
  id v285 = (char *)*(&off_10026C690 + HIDWORD(v350) - 1888) - 8;
  HIDWORD(v341) = *(_DWORD *)&v285[4 * (HIBYTE(v272) ^ 0x73)];
  v286 = (char *)*(&off_10026C690 + (HIDWORD(v350) ^ 0x755)) - 12;
  unsigned int v287 = *(_DWORD *)&v286[4 * (BYTE2(v272) ^ 0x6D)];
  v288 = (char *)*(&off_10026C690 + (HIDWORD(v350) & 0x5A17805F)) - 4;
  unsigned int v289 = *(_DWORD *)&v288[4 * (BYTE1(v284) ^ 0xC8)] ^ 0xE1EA2667;
  LODWORD(v347) = HIBYTE(v280);
  LODWORD(v344) = *(_DWORD *)&v285[4 * (HIBYTE(v280) ^ 0x14)];
  unsigned int v290 = (v287 >> 4) ^ 0x28749843 ^ (v287 >> 2) ^ ((HIBYTE(v275) ^ 0x9FD529D8)
                                                 - 1796885826
                                                 + *(_DWORD *)&v285[4 * (HIBYTE(v275) ^ 0x45)]) ^ (1515496080 * v289);
  LODWORD(v350) = HIBYTE(v284);
  HIDWORD(v347) = *(_DWORD *)&v285[4 * (HIBYTE(v284) ^ 0x31)];
  unsigned int v291 = v290 - ((2 * v290) & 0x64D4E05A);
  unsigned int v292 = *(_DWORD *)&v286[4 * (BYTE2(v284) ^ 0xF1)];
  unsigned int v293 = *(_DWORD *)&v286[4 * (BYTE2(v275) ^ 0x37)];
  unsigned int v294 = *(_DWORD *)&v286[4 * ~HIWORD(v280)];
  int v295 = *(_DWORD *)&v288[4 * (BYTE1(v280) ^ 0x77)];
  int v296 = *(_DWORD *)&v288[4 * (BYTE1(v272) ^ 2)];
  HIDWORD(v344) = *(_DWORD *)&v288[4 * (BYTE1(v275) ^ 0x5E)];
  int v297 = v275;
  id v298 = (char *)*(&off_10026C690 + (HIDWORD(v350) ^ 0x7FE)) - 12;
  LODWORD(v286) = *(_DWORD *)&v298[4 * (v275 ^ 0x9D)];
  LODWORD(v288) = v284;
  int v299 = *(_DWORD *)&v298[4 * (v284 ^ 0x2E)];
  HIDWORD(v342) = v272;
  LODWORD(v342) = *(_DWORD *)&v298[4 * (v272 ^ 0x14)];
  uint64_t v300 = ((v280 ^ 0xCB) - 702133862 - ((2 * (v280 ^ 0xCB) - 102555424) & 0xB0612254)) ^ LODWORD(STACK[0x2A0]) ^ *(_DWORD *)&v298[4 * (v280 ^ 0xC9)] ^ v287 ^ v289 ^ (v291 - 1301647315);
  uint64_t v301 = v300 ^ 0x6761C395;
  id v302 = (char *)*(&off_10026C690 + (int)(HIDWORD(v350) & 0xDBB89858)) - 4;
  v330[5] = v302[BYTE2(v301) ^ 0x5ELL] ^ BYTE2(v301) ^ 0x8A ^ ((BYTE2(v301) ^ 0x8A)
                                                             - ((2 * (BYTE2(v301) ^ 0x8A) - 18) & 0xA0)
                                                             + 71) ^ 0xB9;
  LODWORD(v285) = ((HIBYTE(v272) ^ 0x9FD529EE) - 1796885826 + HIDWORD(v341)) ^ 0x28749843 ^ (v292 >> 2) ^ (v292 >> 4) ^ (1515496080 * (v295 ^ 0xE1EA2667));
  unsigned int v303 = v292 ^ LODWORD(STACK[0x2A8]) ^ v295 ^ 0xE1EA2667 ^ v286 ^ ((v297 ^ 0x9F)
                                                                                - 702133862
                                                                                - ((2 * (v297 ^ 0x9F) - 102555424) & 0xB0612254)) ^ (v285 - ((2 * v285) & 0xD7D1291E) - 337079153);
  unsigned int v304 = v303 ^ 0xB049ACC;
  uint64_t v305 = (BYTE1(v304) | 0x88) ^ (v304 >> 8) & 0x88;
  id v306 = (char *)*(&off_10026C690 + (HIDWORD(v350) ^ 0x7AA)) - 12;
  v330[2] = (((unsigned __int16)(v303 ^ 0x9ACC) >> 8) | 0x88) ^ ((unsigned __int16)(v303 ^ 0x9ACC) >> 8) & 0x88 ^ 0x35 ^ ((v306[v305 ^ 0x14] ^ 0x82) - ((2 * v306[v305 ^ 0x14]) & 0x20) - 112);
  LODWORD(v305) = ((HIBYTE(v280) ^ 0x9FD52989) - 1796885826 + v344) ^ 0x28749843 ^ (v293 >> 2) ^ (v293 >> 4);
  int v307 = v293 ^ 0xD182C89 ^ (v305 - ((2 * v305) & 0x194A0EF6) - 1935341701);
  id v308 = (char *)*(&off_10026C690 + (HIDWORD(v350) ^ 0x79A)) - 12;
  int v309 = v308[BYTE3(v300) ^ 0xDALL];
  HIDWORD(v279) = v309 ^ 5;
  LODWORD(v279) = (v309 ^ 0x80) << 24;
  unsigned int v310 = (v307 & 0x1000000 | ((((v307 & 0x1000000u) >> 24) & 1) << 25)) ^ 0xDDB32FDF;
  BOOL v108 = ((v310 + 575459361) & (v299 ^ 0x59000000)) == 0;
  v330[STACK[0x200]] = (v279 >> 29) ^ 0x83;
  unsigned int v311 = v299 ^ ((v288 ^ 0x2C) - 702133862 - ((2 * (v288 ^ 0x2C) - 102555424) & 0xB0612254));
  unsigned int v312 = v310 + 785380668;
  unsigned int v313 = -365538054 - v310;
  if (v108) {
    unsigned int v313 = v312;
  }
  unsigned int v314 = v307 & 0xFEFFFFFF ^ (1515496080 * (v296 ^ 0xE1EA2667)) ^ (v311 - 209921307 + v313);
  unsigned int v315 = v296 ^ LODWORD(STACK[0x2C0]) ^ (v314 + 1586172312 - ((2 * v314) & 0xBD1623BC) + 70);
  id v316 = (char *)*(&off_10026C690 + (int)(HIDWORD(v350) & 0x8C879068)) - 8;
  v330[11] = v316[v315 ^ 0x4FLL] & 0xFB ^ ((v316[v315 ^ 0x4FLL] | 0xFB) + 24) ^ 0xE0;
  int v317 = v308[HIBYTE(v303) ^ 0xD0];
  HIDWORD(v318) = v317 ^ 5;
  LODWORD(v318) = (v317 ^ 0x80) << 24;
  *CFTypeRef v330 = (v318 >> 29) ^ 0xFB;
  v330[1] = BYTE2(v304) ^ 0x61 ^ ((BYTE2(v304) ^ 0x61) - ((2 * (BYTE2(v304) ^ 0x61) - 18) & 0xA0) + 71) ^ 0xB8 ^ v302[BYTE2(v304) ^ 0xB5];
  int v319 = (v350 ^ 0x9FD529AC) - 1796885826 + HIDWORD(v347);
  int v320 = (((v294 >> 4) ^ (v294 >> 2) ^ 0x28749843)
        - 2 * (((v294 >> 4) ^ (v294 >> 2) ^ 0x28749843) & 0x19D960DE ^ ((v294 >> 4) ^ (v294 >> 2)) & 0x18)
        + 1507418310) ^ v294;
  int v321 = v320 & 0x80000 | 0x6E716433;
  if ((v320 & 0x80000 & v319) != 0) {
    int v321 = -589117338 - v321;
  }
  unsigned int v322 = (1515496080 * (HIDWORD(v344) ^ 0xE1EA2667)) ^ v320 & 0xFFF7FFFF ^ 0xD8644B34 ^ (v319 - 1852924979 + v321);
  int v323 = v342 ^ ((v272 ^ 0x16) + 2096205936) ^ (v322 - ((2 * v322) & 0xB2697254) + 1496627498);
  unsigned int v324 = HIDWORD(v344) ^ LODWORD(STACK[0x2C8]) ^ (v323 + 1907374239 - ((2 * v323) & 0xE360713E));
  v330[13] = v302[(BYTE2(v324) ^ 0x71) + 213 + ((v324 >> 15) & 0x1A8 ^ 0xFFFFFF5F)] ^ BYTE2(v324) ^ ((BYTE2(v324) ^ 0x71) + (~(2 * (BYTE2(v324) ^ 0x71) - 18) | 0x5F) + 72) ^ 0xF7;
  int v325 = v308[HIBYTE(v324) ^ 0x1BLL];
  HIDWORD(v326) = v325 ^ 5;
  LODWORD(v326) = (v325 ^ 0x80) << 24;
  v330[STACK[0x220]] = (v326 >> 29) ^ 0x50;
  v330[9] = ((v315 ^ 0x2E37FF00) >> 16) ^ 0x94 ^ ((((v315 ^ 0x2E37FF00) >> 16) ^ 0x94)
                                                - ((2 * (((v315 ^ 0x2E37FF00) >> 16) ^ 0x94) - 18) & 0xA0)
                                                + 71) ^ v302[((v315 ^ 0x2E37FF00) >> 16) ^ 0x40] ^ 0xC;
  unsigned int v327 = (((v324 ^ 0xBEDFB448) >> 4) & 0xF0 | ((unsigned __int16)(v324 ^ 0xB448) >> 12)) ^ 0xE6;
  v330[STACK[0x288]] = v306[((v327 >> 4) & 0xFFFFFF0F | (16 * (v327 & 0xF))) ^ 0xAELL] ^ (((v327 >> 4) & 0xF | (16 * (v327 & 0xF)))
                                                                                        - ((v327 >> 3) & 4)
                                                                                        - 126) ^ 0x2B;
  v330[10] = (((unsigned __int16)(v315 ^ 0xFF00) >> 8) - (((v315 ^ 0x2E37FF00) >> 7) & 4) - 126) ^ 0xDB ^ v306[((unsigned __int16)(v315 ^ 0xFF00) >> 8) ^ 0xA0];
  v330[STACK[0x260]] = (BYTE1(v301) - ((v301 >> 7) & 4) - 126) ^ v306[BYTE1(v301) ^ 0x75] ^ 0x80;
  v330[STACK[0x240]] = v316[v303 ^ 0xFFLL] ^ 0x5E;
  v330[STACK[0x238]] = v316[v300 ^ 0x59] ^ 0xCF;
  v330[STACK[0x298]] = v316[v324 ^ 0xE7] ^ 0x60;
  int v328 = v308[HIBYTE(v315) ^ 0xA8];
  HIDWORD(v326) = v328 ^ 5;
  LODWORD(v326) = (v328 ^ 0x80) << 24;
  v330[STACK[0x250]] = (v326 >> 29) ^ 0x2E;
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 8 * SHIDWORD(v350)))(0, v300, 230, 5, v301, 95, &off_10026C690, 1010130221, a9, a10, a11, a12, a13, a14, a15, a16, a17, v330, v331,
           v73,
           v332,
           v333,
           v334,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           v335,
           v336,
           v337,
           v338,
           v339,
           v340,
           v341,
           v342,
           v344,
           v347,
           v350,
           2,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           5,
           11,
           1,
           a63);
}

uint64_t sub_10006E2A4@<X0>(uint64_t a1@<X2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return sub_10009EC3C(a1, a18, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_10006E2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,unsigned int a21,uint64_t a22,unint64_t *a23,int a24)
{
  unsigned int v27 = 1224239923 * ((((2 * &a19) | 0xA63C9F70) - &a19 - 1394495416) ^ 0xA1ADB26F);
  a22 = a17;
  a23 = &STACK[0x634ED76D4AB882AD];
  a20 = (v24 - 2024873993) ^ v27;
  a21 = v27 ^ 0xA69AE8A0;
  a19 = v27 ^ 0x6BCE570A;
  uint64_t v28 = (*(uint64_t (**)(int *))(v26 + 8 * (v24 + 1471)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * (((a24 == v25) * (((v24 + 814004201) & 0x5FD) - 347)) ^ v24)))(v28);
}

uint64_t sub_10006E384(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15)
{
  unsigned int v28 = v21 - 16;
  uint64_t v29 = v28 & 0xF;
  v31.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v31.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v24, a5).u64[0];
  int8x16_t v32 = vrev64q_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a14 + v28), *(int8x16_t *)(v18 + v29 - 15)), *(int8x16_t *)(v29 + v16 - 14)), *(int8x16_t *)(v20 + v29 + v17 - 2258)));
  int8x16_t v33 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v32, v32, 8uLL), a7), vmulq_s8(v31, a6)));
  *(int8x16_t *)(v19 + v28) = vextq_s8(v33, v33, 8uLL);
  return (*(uint64_t (**)(void))(v23 + 8 * (((v22 == 16) * v15) ^ a13)))();
}

uint64_t sub_10006E390(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v6 & (2 * (*(unsigned __int8 *)(a2 + 8) - 1)))
                                      + ((*(unsigned __int8 *)(a2 + 8) - 1) ^ v5) == v5)
                                     * ((v4 - 67643796) & 0xF6AAFFDA ^ (v2 - 553))) ^ v4)))();
}

uint64_t sub_10006E3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  return sub_100069CDC(a1, a2, a3, a4, (int)a8 + v50 + 5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_10006E3F0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((83 * ((v0 ^ 0x11u) >= (v1 ^ 0x789u) - 1164)) ^ v1)))();
}

uint64_t sub_10006E444(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v12 = v7 + v6;
  int v13 = v12 + a6;
  if ((v12 + a6) <= 0x40) {
    int v13 = 64;
  }
  BOOL v14 = __CFADD__(v12 + ((v8 - 595) ^ (a6 - 33)), a4 + v9 + v10 + v13 + 819);
  return (*(uint64_t (**)(void))(v11 + 8 * ((v14 * ((7 * (v8 ^ 0x358)) ^ 0x2E3)) ^ v8)))();
}

uint64_t sub_10006E4B4@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, int a5@<W7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unsigned int v20 = 3 * ((a6 + 493895509) & 0xE28FC6E7 ^ 0x486);
  uint64_t v21 = 4 * a1;
  unsigned int v22 = (v12 ^ 0x811882A1)
      + (v15 ^ (v13 + 449) ^ v20) * (*(_DWORD *)(*v19 + 4 * (int)(v20 - 1731)) ^ v13)
      + (*(_DWORD *)(a12 + v21) ^ v13);
  *(_DWORD *)(a12 + v21) = (v22 + a2 - (a3 & (2 * v22))) ^ v17;
  BOOL v23 = v14 > v16;
  if (v23 == a4 > 50790258) {
    BOOL v23 = a5 > 50790258;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * (int)(v20 ^ (4 * v23))))();
}

void sub_10006E580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, int a14)
{
  unsigned int v17 = 3804331 * (((&a10 | 0x41D7377E) - (&a10 & 0x41D7377E)) ^ 0x3F021288);
  a14 = ((v14 & 0x3BA7AF77) - 2065) ^ v17;
  a13 = 0x5267DA57ABB8ED88;
  a10 = v15;
  a11 = v17 ^ 0x14EDA71E;
  a12 = v17 ^ 0x4CDE25C;
  (*(void (**)(uint64_t *))(v16 + 8 * ((v14 & 0x3BA7AF77u) + 103)))(&a10);
  sub_10008DCF4();
}

uint64_t sub_10006E61C(uint64_t result)
{
  *(_DWORD *)(result + 4) = -545080081;
  return result;
}

uint64_t sub_10006E658@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  int8x16x4_t v33 = vld4q_s8(v5);
  int v6 = LODWORD(STACK[0x2C0]) + 10;
  v7.i64[0] = 0x7777777777777777;
  v7.i64[1] = 0x7777777777777777;
  uint8x16_t v8 = (uint8x16_t)veorq_s8(v33.val[0], v7);
  uint16x8_t v9 = vmovl_u8(*(uint8x8_t *)v8.i8);
  int8x16_t v10 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v9.i8);
  int8x16_t v11 = (int8x16_t)vmovl_high_u16(v9);
  uint16x8_t v12 = vmovl_high_u8(v8);
  int8x16_t v13 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v12.i8);
  int8x16_t v14 = (int8x16_t)vmovl_high_u16(v12);
  uint8x16_t v15 = (uint8x16_t)veorq_s8(v33.val[1], v7);
  uint16x8_t v16 = vmovl_high_u8(v15);
  uint16x8_t v17 = vmovl_u8(*(uint8x8_t *)v15.i8);
  uint8x16_t v18 = (uint8x16_t)veorq_s8(v33.val[2], v7);
  _Q21 = (int8x16_t)vmovl_high_u8(v18);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v18.i8);
  int8x16_t v21 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v26 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v33.val[0] = veorq_s8(v33.val[3], v7);
  v33.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v33.val[0]);
  v33.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v33.val[1]);
  v33.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v33.val[0].i8);
  v33.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v33.val[0]);
  v33.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v33.val[0].i8), 0x18uLL), v21), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v17.i8, 8uLL), v10));
  v33.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v33.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v17, 8uLL), v11));
  v33.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v33.val[1].i8), 0x18uLL), v26), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v16.i8, 8uLL), v13));
  v33.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v33.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v16, 8uLL), v14));
  int32x4_t v27 = (int32x4_t)veorq_s8(vandq_s8(v33.val[0], *(int8x16_t *)&STACK[0x250]), (int8x16_t)(*(_OWORD *)&v10 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
  int32x4_t v28 = (int32x4_t)veorq_s8(vandq_s8(v33.val[3], *(int8x16_t *)&STACK[0x250]), (int8x16_t)(*(_OWORD *)&v11 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
  int32x4_t v29 = (int32x4_t)veorq_s8(vandq_s8(v33.val[1], *(int8x16_t *)&STACK[0x250]), (int8x16_t)(*(_OWORD *)&v13 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
  int32x4_t v30 = (int32x4_t)veorq_s8(vandq_s8(v33.val[2], *(int8x16_t *)&STACK[0x250]), (int8x16_t)(*(_OWORD *)&v14 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
  v33.val[2] = (int8x16_t)vsubq_s32((int32x4_t)v33.val[2], vaddq_s32(v30, v30));
  int32x4_t v31 = *(int32x4_t *)&STACK[0x240];
  v33.val[0] = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)v33.val[0], vaddq_s32(v27, v27)), *(int32x4_t *)&STACK[0x240]);
  v33.val[2] = (int8x16_t)vaddq_s32((int32x4_t)v33.val[2], *(int32x4_t *)&STACK[0x240]);
  *(int32x4_t *)(a5 + 32) = vaddq_s32(vsubq_s32((int32x4_t)v33.val[1], vaddq_s32(v29, v29)), *(int32x4_t *)&STACK[0x240]);
  *(int8x16_t *)(a5 + 48) = v33.val[2];
  *(int8x16_t *)a5 = v33.val[0];
  *(int32x4_t *)(a5 + 16) = vaddq_s32(vsubq_s32((int32x4_t)v33.val[3], vaddq_s32(v28, v28)), v31);
  return sub_100092EE8(v6, a1, a2, a3, a4, 456671172);
}

uint64_t sub_10006E794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _DWORD *a20)
{
  int v25 = 235795823 * ((v24 - 144) ^ 0x94AD4959);
  *(void *)(v24 - 120) = a10;
  *(void *)(v24 - 136) = v22;
  *(_DWORD *)(v24 - 140) = v20 + v25 + 359211049 + 7 * (v23 ^ 0x398);
  *(_DWORD *)(v24 - 128) = v23 - v25 + 737;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v23 ^ 0xA1Fu)))(v24 - 144);
  return sub_10007CFC4(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_10006E80C()
{
  LODWORD(STACK[0x4AC]) = v0 - 135;
  return sub_100070DF8();
}

uint64_t sub_10006E824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32,int a33)
{
  *unsigned int v36 = v36[623];
  uint64_t v38 = 241568881
      * ((((v37 - 144) | 0x4EF753332C06FA70) - ((v37 - 144) & 0x4EF753332C06FA70)) ^ 0x41A287BAFA17FE32);
  *(void *)(v37 - 112) = v38 + 3;
  *(void *)(v37 - 128) = (v34 + 1) + v38;
  *(_DWORD *)(v37 - 144) = a33 ^ v38;
  *(_DWORD *)(v37 - 140) = a33 ^ v38 ^ 0x2C;
  *(_DWORD *)(v37 - 104) = v38;
  *(_DWORD *)(v37 - 100) = a31 ^ v38;
  *(_DWORD *)(v37 - 136) = v38 + v33 + 1452949797;
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (v33 ^ (v33 + 2419))))(v37 - 144);
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * *(int *)(v37 - 120)))(v39);
}

uint64_t sub_10006E8F4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v2 == 0) ^ (v0 + 90)) & 1)
                                * (((v0 + 532777818) ^ 0x1FC194C4) - 1837)) ^ v0)))();
}

uint64_t sub_10006E930()
{
  STACK[0x508] = STACK[0x508] + ((v0 - 60) | 0x202u) - 830;
  return (*(uint64_t (**)(void))(v3 + 8 * (v0 ^ (590 * (v2 == v1)))))();
}

uint64_t sub_10006E96C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v24 = a8 + 1;
  *(unsigned char *)(v20 + (v24 + v16)) = *(unsigned char *)(a16 + v22 + v19)
                                              + (v18 ^ 0x20)
                                              - ((2 * *(unsigned char *)(a16 + v22 + v19)) & 0xEF);
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8 * ((((a3 + v24 + 1) < 0x40) * v21) ^ v17)))(v18 ^ 0x20u, a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_10006E974()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v2 - 1340331332) ^ (1109 * (v0 < v3)))))();
}

uint64_t sub_10006E9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18)
{
  unint64_t v19 = STACK[0x418];
  STACK[0x560] -= 32;
  *(unsigned char *)(v19 + 335) = *(unsigned char *)(a13 + 335) ^ (15 * (((a18 ^ 8) - 21) & 0x6B ^ 0xB)) ^ *(unsigned char *)(*(void *)(a7 + 8 * (a18 ^ 0x615)) + 7) ^ *(unsigned char *)(*(void *)(a7 + 8 * ((a18 ^ 8) & 0x514830A9)) + 9) ^ *(unsigned char *)(*(void *)(a7 + 8 * (int)((a18 ^ 8) - 1494)) + 10) ^ 0x77;
  return (*(uint64_t (**)(void))(v18 + 8 * a18))();
}

uint64_t sub_10006EA98@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v7 = v5 - 1;
  STACK[0x3A8] = v7;
  *(unsigned char *)(a1 + v7) = ((v2 + 1) ^ v3) * (v2 + 18);
  return (*(uint64_t (**)(void))(v6 + 8 * ((31 * (STACK[0x3A8] == v4)) ^ a2)))();
}

uint64_t sub_10006EAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18, unsigned int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26,int a27)
{
  int v30 = (v29 - 1995) | 0x50A;
  int v31 = (((a25 ^ a8) + a26) ^ 0xBDCDEE9C)
      + 2004284412
      + ((((a25 ^ a8) + a26) << (((v29 + 53) | 0xA) ^ 0x1B)) & 0x7B9BDD38);
  BOOL v32 = a19 < a18;
  if (v32 == v31 - 1576382955 < (v30 - 682677357)) {
    BOOL v32 = v31 - 1576382955 < a19;
  }
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (((16 * !v32) | (!v32 << 6)) ^ v30)))(((a27 + (v27 ^ a8)) ^ 0x7BBFFFB6)- 1127746308+ ((2 * (a27 + (v27 ^ a8))) & 0xF77FFF6C), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_10006EBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,int a24,int a25)
{
  *int v25 = v25[623];
  return sub_1000A05AC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_10006EBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  unsigned int v18 = (v17 + 1314085630) & 0xB1ACA4FF;
  unsigned int v19 = a16 - 1758911814 + v18;
  unsigned int v21 = v19 - 1130;
  BOOL v20 = (int)(v19 - 1130) < 0;
  unsigned int v22 = 1130 - v19;
  if (!v20) {
    unsigned int v22 = v21;
  }
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (int)((((int)((v22 ^ 0xFAD6DDF5) + ((2 * v22) & 0xF5ADBBEA) + 86581770) >= 0)
                                                   * ((v18 - 1895117942) & 0x70F535DE ^ 0x537)) ^ v18)))(3840062113);
}

uint64_t sub_10006EC9C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13)
{
  BOOL v16 = a13 > 0x3B648894;
  if (v16 == a1 + 319880890 < (int)((v14 + 1791530326) & 0x95376CED ^ 0xC49B730F)) {
    BOOL v16 = a1 + 319880890 < v15;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * (!v16 | v14)))();
}

uint64_t sub_10006ED4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(v7 + 72) == a5)
                                * ((11 * ((596 * (v5 ^ 0x224)) ^ 0x4B5)) ^ (596 * (v5 ^ 0x224) - 430))) ^ (596 * (v5 ^ 0x224)))))();
}

uint64_t sub_10006EDA0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((28 * (((v0 == v1) ^ (v2 - 13)) & 1)) ^ v2)))();
}

uint64_t sub_10006EDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v12 = *(unsigned char *)(a1 + (v6 ^ v8) + v9 + v5);
  *(unsigned char *)(a5 + v7) = v12 - ((2 * v12) & 0xEF) + 119;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v7 != 63) * v10) ^ v6)))();
}

uint64_t sub_10006EE28(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * (((((a2 + 1) & 0x7FFFFFE0) == v3) | (16 * (((a2 + 1) & 0x7FFFFFE0) == v3))) ^ v2)))();
}

uint64_t sub_10006EF08@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*(void *)(v1 + 16) == 0) * ((a1 ^ 0x74A) + 385)) ^ a1 ^ 0x74A)))();
}

uint64_t sub_10006EF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12 = v11 + ((2 * v10) ^ 0x7Eu) - 3246;
  STACK[0x508] = v12;
  LODWORD(STACK[0x4AC]) = v9;
  LODWORD(STACK[0x2A0]) = STACK[0x4DC];
  LODWORD(STACK[0x298]) = STACK[0x53C];
  uint64_t v13 = (char *)&a9 + v12 - 0x2C2F364FA24C4B49;
  STACK[0x260] = (unint64_t)(v13 + 2048);
  STACK[0x288] = (unint64_t)(v13 + 2176);
  STACK[0x2C8] = (unint64_t)v13;
  STACK[0x290] = (unint64_t)(v13 + 2304);
  LODWORD(STACK[0x2C0]) = -395483150;
  return sub_10009DFAC();
}

uint64_t sub_10006EFF0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v12 = (v7 - 1065286766 + v6 + 326 - v8);
  int8x8_t v13 = vrev64_s8(*(int8x8_t *)(v4 - 7 + v12));
  *(int8x8_t *)(v3 - 7 + v12) = vrev64_s8(vadd_s8(vsub_s8(v13, vand_s8(vadd_s8(v13, v13), v10)), v11));
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((490
                                * ((((a3 ^ 0xEA) + 79) ^ (((a3 ^ 0xFFFFFED4) & v5) - v8 == 8)) & 1)) ^ a3 ^ 0x1EA)))();
}

uint64_t sub_10006F07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  LOBYTE(STACK[0x28C]) = *(unsigned char *)(a8 + v10);
  BOOL v12 = v9 + a6 + v8 + ((v8 + 1145) ^ 6u) > 3;
  return (*(uint64_t (**)(void))(v11 + 8 * (((2 * v12) | (4 * v12)) ^ (v8 + 1145))))();
}

uint64_t sub_10006F0BC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((124 * (v0 - 100 < ((v1 + 160) ^ (v1 + 28)))) ^ v1)))();
}

uint64_t sub_10006F0F4(uint64_t a1, int a2)
{
  BOOL v5 = v3 < v2;
  unint64_t v6 = ((389 * (a2 ^ 0x267u)) ^ 0xA2C6920EBFB5B0CDLL) + a1;
  uint64_t v7 = a1 + 1;
  int v8 = v5 ^ (v6 < v2);
  BOOL v9 = v6 < v3;
  if (!v8) {
    BOOL v5 = v9;
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((15 * v5) ^ a2)))(v7);
}

uint64_t sub_10006F164(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  int v58 = v55 ^ (a2 + 108);
  *(_DWORD *)uint64_t v57 = 0x80000000;
  (*(void (**)(uint64_t))(v56 + 8 * (v55 ^ 0x901)))(a33);
  int8x16_t v59 = (int8x16_t)vld1q_dup_f32((const float *)v57);
  v60.i64[0] = 0x8000000080000000;
  v60.i64[1] = 0x8000000080000000;
  v61.i64[0] = *(void *)(v57 + 4);
  v61.i32[2] = *(_DWORD *)(v57 + 12);
  int8x16_t v62 = vextq_s8(v59, v61, 0xCuLL);
  int8x16_t v63 = v61;
  v63.i32[3] = *(_DWORD *)(v57 + 16);
  int32x4_t v64 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v63, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v62, v60)), 1uLL), *(int8x16_t *)(v57 + 4 * ((v58 - 1340331192) ^ 0x42)));
  v62.i32[0] = *((_DWORD *)&a55 + (*(_DWORD *)(v57 + 4) & 1));
  v62.i32[1] = *((_DWORD *)&a55 + (*(_DWORD *)(v57 + 8) & 1));
  v62.i32[2] = *((_DWORD *)&a55 + (*(_DWORD *)(v57 + 12) & 1));
  v62.i32[3] = *((_DWORD *)&a55 + (v63.i8[12] & 1));
  *(int8x16_t *)uint64_t v57 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v64, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v64, v64), (int8x16_t)vdupq_n_s32(0x7CDE2A3Eu))), vdupq_n_s32(0xBE6F151F)), v62);
  return (*(uint64_t (**)(void))(v56 + 8 * (v58 - 1340330491)))();
}

uint64_t sub_10006F2C8@<X0>(uint64_t a1@<X8>)
{
  return 0;
}

uint64_t sub_10006F2E0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, _DWORD *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v25 = v19 - 852;
  int v22 = 235795823 * ((2 * ((v21 - 136) & 0x7FA36D20) - (v21 - 136) + 6066909) ^ 0x94F1DB84);
  *(_DWORD *)(v21 - 128) = ((((a1 - 948434098) & 0xFFFFFFF0) + 16) ^ 0x9FF6D686)
                         - v22
                         + ((2 * (((a1 - 948434098) & 0xFFFFFFF0) + 16)) & 0x3FEDAD00)
                         + 1996091392;
  *(void *)(v21 - 120) = a19;
  *(_DWORD *)(v21 - 136) = a1 - a13 - v22 + ((v19 + 705) ^ 0x7E9) + 446514157;
  *(_DWORD *)(v21 - 132) = (v19 + 1028) ^ v22;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v19 + 1109)))(v21 - 136);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((1771 * (*a14 == -563355418)) ^ v25)))(v23);
}

uint64_t sub_10006F3F8(int a1, int a2, uint64_t a3, int a4, int a5, int a6, unint64_t a7)
{
  int v16 = v11 + 1;
  uint64_t v17 = 4 * (v16 + a4);
  unint64_t v18 = (*(_DWORD *)(*v10 + v17) ^ v9) + HIDWORD(a7);
  *(_DWORD *)(*v10 + v17) = v18 + v13 - ((v15 + (v12 | a1) - 1896) & (2 * v18));
  BOOL v19 = v16 + a5 < v8;
  if (v8 < v7 != v16 + a5 < v7) {
    BOOL v19 = v8 < v7;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((v19 * a6) ^ a2)))();
}

uint64_t sub_10006F404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a13 = &STACK[0x55D5CC6D86BC0F2F];
  a14 = (831981571 * (((&a13 | 0x5366F27) + (~&a13 | 0xFAC990D8)) ^ 0x9C97BF02)) ^ 0x8F;
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v16 + 18816))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((3013 * (a15 == v15)) ^ 0x2F2u)))(v17);
}

uint64_t sub_10006F49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v28 - 144) = a25;
  *(void *)(v28 - 136) = a23;
  *(_DWORD *)(v28 - 112) = v26 - ((v28 - 144) ^ 0xF2B3FDD7) * v25 + 40;
  *(void *)(v28 - 104) = a18;
  *(void *)(v28 - 128) = a23;
  *(void *)(v28 - 120) = a22;
  (*(void (**)(uint64_t))(v27 + 8 * (v26 ^ 0x94F)))(v28 - 144);
  return sub_100074C50();
}

uint64_t sub_10006F4F0()
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((195
                                              * (v0 - v3 < (((v2 + 172096661) | 0xE0198400) ^ ((unint64_t)((v2 + 1143) ^ 0xFD9u)
                                                                                             + 3931864325u)))) ^ (v2 + 1143))))(v1);
}

uint64_t sub_10006F54C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18
                                                                       + 8
                                                                       * ((252
                                                                         * (((((a4 ^ 0xDA5) - v17 - 1993) ^ ((v19 + a7 + a6 + 1) < 8)) & 1) == 0)) ^ a4 ^ 0x28)))(a1, a2, a3, a17);
}

uint64_t sub_10006F5A4@<X0>(int a1@<W5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v14 = 23 * (a2 ^ 0x90);
  *(_DWORD *)(a8 + 4 * v12) = (v8 ^ 0x811882A1) + v9 - 2 * ((v8 ^ 0x811882A1) & 0x64E2B2AB ^ (v14 - 588) & 0x811882A1);
  BOOL v15 = v10 > 0x2B989B6D;
  if (v15 == v13 + 1116846177 < -731421550) {
    BOOL v15 = v13 + 1116846177 < a1;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((221 * !v15) ^ v14)))();
}

uint64_t sub_10006F5BC()
{
  LODWORD(STACK[0x2A8]) = v0;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((LODWORD(STACK[0x2E4]) - 1704253533 + 478 * (v2 ^ 0x323u) - 3005 > 0xFFFFF7FE)
                                * (((2 * v2) ^ 0x56C) - 735)) ^ v2)))();
}

uint64_t sub_10006F610()
{
  BOOL v3 = (v0 + 243531678) > 0x5A7CCFA7;
  if (v0 + 243531678 < (((v1 + 360) | 0x12) ^ 0x5A7CC9B5u) != (v1 + 1518127887) > 0x5A7CCFA7) {
    BOOL v3 = v0 + 243531678 < (((v1 + 360) | 0x12) ^ 0x5A7CC9B5u);
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((63 * v3) ^ v1)))();
}

uint64_t sub_10006F624()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((241 * (v1 + 1 == v2 + 16)) ^ v0)))();
}

uint64_t sub_10006F70C()
{
  return sub_100085A0C();
}

uint64_t sub_10006F740(int a1, int a2, int a3, int8x8_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(int8x8_t *)(a6 + (v7 + a3)) = veor_s8(*(int8x8_t *)(v8 + (v7 + a3)), a4);
  return (*(uint64_t (**)(void))(v9 + 8 * (((a7 + a3 != 8) * a1) ^ a2)))();
}

uint64_t sub_10006F774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,unsigned int *a63)
{
  (*(void (**)(void, unint64_t *, uint64_t))(v63 + 8 * (v65 + 1441)))(*a63, &STACK[0x338], 2048);
  uint64_t v66 = *(uint64_t (**)(void))(v63
                            + 8
                            * ((((*(unsigned int (**)(void, unint64_t *, void, uint64_t))(v63 + 8 * (v65 + 1533)))(*a63, &STACK[0x3D8], LODWORD(STACK[0x2E4]) + ((2 * v65) ^ 0x456 ^ (v64 - 790)), 1) == 0)* ((661 * (v65 ^ 0x3BE)) ^ 0x146)) ^ v65));
  return v66();
}

uint64_t sub_10006F824()
{
  BOOL v4 = v1 + 844508200 < (int)(v2 + 1759539783);
  if (v2 > 0x171F8DB8 != v1 + 844508200 < -387943865) {
    BOOL v4 = v2 > 0x171F8DB8;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((!v4 * ((6 * (v0 ^ 0x584)) ^ 0x3B5)) ^ v0)))();
}

uint64_t sub_10006F8AC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1845
                                * ((v0 << LODWORD(STACK[0x2A0])) - LODWORD(STACK[0x2B8]) == (((LODWORD(STACK[0x2B0]) - 706) | 0x302) ^ 0x92C86151))) ^ LODWORD(STACK[0x2B0]))))();
}

uint64_t sub_10006F900()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((806
                                * (((((v1 ^ 0x2B) + 30) ^ (*(void *)(v0 + 16) == 0x5267DA57ABB8ED88)) & 1) == 0)) ^ v1)))();
}

uint64_t sub_10006F95C@<X0>(int a1@<W8>)
{
  unsigned int v6 = ((2 * (v8 & 0x487604E0) - v8 + 931789599) ^ 0x495CDEE9) * v2;
  uint64_t v9 = v3;
  v8[0] = -1142731271 - (v6 + a1) - ((((v4 + 894650303) & 0x4AACBFEB ^ 0x15DBC58B) - v5) & 0x61EACE10);
  v8[1] = v6 + v4 + 1181;
  return (*(uint64_t (**)(_DWORD *))(v1 + 8 * (v4 + 2106)))(v8);
}

uint64_t sub_10006FA24@<X0>(int a1@<W1>, unsigned int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (a1 | (4 * (a2 < ((a1 - 632) | 0x30C) + ((a1 - 241) ^ 0xFFFFFD5B))))))();
}

uint64_t sub_10006FA5C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v7 = *(_DWORD *)((char *)&STACK[0x28C] + ((v5 + v2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v5 + v2)) = v7 ^ 0xB2;
  *(unsigned char *)(a1 + (v5 + v2 + 1)) = 19 * (v3 ^ 0xCB)
                                               + (BYTE1(v7) ^ 0xA1)
                                               - ((2 * (BYTE1(v7) ^ 0xA1)) & 0xEF)
                                               + 62;
  *(unsigned char *)(a1 + (v5 + v2 + 2)) = (BYTE2(v7) ^ 0x43) - ((2 * (BYTE2(v7) ^ 0x43)) & 0xEF) + 119;
  *(unsigned char *)(a1 + (v5 + v2 + 3)) = (HIBYTE(v7) ^ 0x58) - ((2 * (HIBYTE(v7) ^ 0x58)) & 0xEF) + 119;
  unsigned int v8 = LODWORD(STACK[0x2E8]) - 1579562589;
  BOOL v9 = v8 < a2;
  BOOL v10 = v5 - 731623592 < v8;
  if (v5 - 731623592 < a2 != v9) {
    BOOL v10 = v9;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((v10 * v4) ^ v3)))();
}

uint64_t sub_10006FB48(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((a6 - 1396504762) & 0x533CF59E ^ 0x465) * ((a4 + a3 - 737045492) < 8)) ^ a6)))();
}

uint64_t sub_10006FBA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))(v67 + 14376))(a1, a2, a3, a4, a5, 2854199772, 1440767523, a8, a9, &a67);
}

uint64_t sub_10006FCD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((242
                                * (((v5 < 0x20) ^ (((-81 * (a5 ^ 0x15)) ^ 0x75)
                                                                  + ((-81 * (a5 ^ 0x15)) ^ 0x5D)
                                                                  + 1)) & 1)) ^ (431 * (a5 ^ 0x515)))))();
}

uint64_t sub_10006FD24(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v11 = *(uint64_t (**)(void))(v7 + 8 * (v8 - 1969));
  uint64_t v12 = *v9;
  unsigned int v13 = v3 + 4 + v5;
  *(unsigned char *)(*v9 + v13) = (v10 ^ ((a3 + 4) >> 24))
                        - ((2 * (v10 ^ ((a3 + 4) >> 24))) & 0xEF)
                        + 119;
  *(unsigned char *)(v12 + v13 + 1) = (((a3 + 4) >> 16) ^ 0x18)
                            - ((2 * (((a3 + 4) >> 16) ^ 0x18)) & 0xEF)
                            + 119;
  *(unsigned char *)(v12 + v13 + 2) = (v6 ^ ((unsigned __int16)(a3 + 4) >> 8))
                            - ((2 * (v6 ^ ((unsigned __int16)(a3 + 4) >> 8))) & 0xEF)
                            + 119;
  *(unsigned char *)(v12 + v13 + 3) = (a3 + 4) ^ v4;
  return v11();
}

uint64_t sub_10006FDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v27 - 128) = v25;
  *(void *)(v27 - 112) = a23;
  *(_DWORD *)(v27 - 104) = (v24 + 326) ^ (((~((v27 - 128) | 0xA0F37DE4) + ((v27 - 128) & 0xA0F37DE4)) ^ 0x8CAED011) * v26);
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 + 1607)))(v27 - 128);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (int)((((*(_DWORD *)(v27 - 120) - 1961907323) < 0xB8579690)
                                                   * ((v24 + 760363822) & 0xD2ADC5E5 ^ 0x466)) | v24)))(v28);
}

uint64_t sub_10006FE68@<X0>(int a1@<W1>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((((a1 + 2023538513) & 0x87633FB9 ^ 0x1B1) & a2) == 0)
                                     * ((a1 + 1097910609) & 0xBE8F373E ^ 0x52D)) ^ a1)))();
}

uint64_t sub_10006FEC8()
{
  unsigned int v4 = ((v2 + v1 + 311 - 700) ^ v0)
     + ((v1 + 1744795190) & 0xFFC2CFF6 ^ 0x71E0D670)
     - ((2 * ((v2 + v1 + 311 - 700) ^ v0)) & 0x2C452384);
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((54 * (((2 * v4) & 0x7A6F5CF8 ^ 0x28450080) + (v4 ^ 0x2B153FBE) - 86016540 != 941042784)) ^ v1)))();
}

uint64_t sub_10006FF6C(uint64_t a1, int a2)
{
  BOOL v5 = v2 + v3 + (((a2 - 151) | 0x403) ^ 0xC2C85673) < ((a2 + 106171244) & 0xF9ABF09F ^ 0x9F);
  return (*(uint64_t (**)(void))(v4 + 8 * (((8 * v5) | (32 * v5)) ^ a2)))();
}

uint64_t sub_10006FFDC@<X0>(int a1@<W8>)
{
  unsigned int v4 = ((a1 - 532815146) & 0x1FC21563) + v3 + 1443919288;
  BOOL v5 = v1 - 2081814454 < v4;
  if ((v1 - 2081814454) < 0xBBA54F77 != v4 < 0xBBA54F77) {
    BOOL v5 = v4 < 0xBBA54F77;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((21 * !v5) ^ a1)))();
}

uint64_t sub_10007005C@<X0>(int a1@<W3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  int v54 = (unsigned int *)(v53 + 4 * v49);
  unsigned int v55 = v50 & 0x80000000;
  uint64_t v56 = v49 + 1;
  int v57 = *(_DWORD *)(v53 + 4 * v56);
  unsigned int v58 = v54[397] ^ ((v57 & 0x7FFFFFFE | v55) >> 1);
  *int v54 = (v58 + v51 - (((a2 - 53) ^ (a1 + 358)) & (2 * v58))) ^ *((_DWORD *)&a49 + (v57 & 1));
  return (*(uint64_t (**)(void))(v52 + 8 * (((4 * (v56 != 227)) | (32 * (v56 != 227))) ^ a2)))();
}

uint64_t sub_1000700C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((v2 + 1887288225) & 0x8F8241CE ^ 0x31C) + 1540) ^ 0x842)
                                     * ((unint64_t)(v1 - a1) < 0x20)) ^ (v2 + 1887288225) & 0x8F8241CE)))();
}

uint64_t sub_100070118(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((4088 * (v3 - v4 - (unint64_t)(a3 - 1888) + 147 < 0x20)) ^ a3)))();
}

uint64_t sub_10007014C(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)a1 - 0x5E8E72AB319E4285);
  int v4 = v2 - 1758911813;
  BOOL v3 = v2 - 1758911813 < 0;
  int v5 = 1758911813 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((((2 * a1) | 0x5510E07A) - a1 - 713584701) ^ 0x661EF240) + 2;
  return (*(uint64_t (**)(void))((char *)*(&off_10026C690 + v1 - 612)
                              + 8
                              * ((1695
                                * ((v5 ^ 0xB7DFDF9F) + 1210064992 + ((v1 ^ 0x6FBFBD9F) & (2 * v5)) < ((v1 - 813361890) & 0x307AEADFu) + 2147482976)) ^ v1)
                              - 4))();
}

uint64_t sub_100070268(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((v8 & (2 * (*(unsigned __int8 *)(a2 + 6) - 44)))
                                 + ((*(unsigned __int8 *)(a2 + 6) - 44) ^ v7) == v7)
                                * (a4 ^ (v4 - 1481))) ^ v6)))();
}

uint64_t sub_1000702A4()
{
  int v5 = ((v3 - 1457) | 0x15D) + *(unsigned __int8 *)(v2 + 2) - 421;
  return (*(uint64_t (**)(void))(v4 + 8 * ((637 * (((v5 << ((v3 + 36) ^ 0xD4)) & v1) + (v5 ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_1000702FC(uint64_t a1)
{
  int v3 = (*(uint64_t (**)(void))(v1 + 19240))();
  if (v3 == 16) {
    unsigned int v4 = -42029;
  }
  else {
    unsigned int v4 = -42030;
  }
  if (v3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  (*(void (**)(uint64_t))(v1 + 19368))(a1);
  return v5;
}

uint64_t sub_100070344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned int a22)
{
  int v28 = v27 - 56;
  unsigned int v29 = 69008221 * ((&a19 & 0x60EEFFDA | ~(&a19 | 0x60EEFFDA)) ^ 0x4CB3522F);
  HIDWORD(a20) = v29 + v28 + 1693;
  a22 = v29 ^ ((v25 ^ 0xFD79BDAC) + 332852216 + ((2 * v25) & 0xFAF37B58));
  a21 = a14;
  a19 = v24;
  (*(void (**)(uint64_t *))(v26 + 8 * (v28 + 1798)))(&a19);
  unsigned int v30 = 1224239923 * ((25684038 - (&a19 | 0x187E846) + (&a19 | 0xFE7817B9)) ^ 0xCCBEA6E);
  LODWORD(a19) = (*v23 ^ 0x6F7E9F79) - v30 + ((*v23 << (((v28 - 40) | 0x80) ^ 0xC1)) & 0xDEFD3EF2) - 125700353;
  LODWORD(a21) = (v28 + 335) ^ v30;
  a20 = a14;
  (*(void (**)(uint64_t *))(v26 + 8 * (v28 ^ 0xBFD)))(&a19);
  int v31 = *v22 ^ 0x7FB9967D;
  unsigned int v32 = (2 * *v22) & 0xFF732CFA;
  unsigned int v33 = 1224239923 * ((((2 * &a19) | 0xC43AEF80) - &a19 + 501385280) ^ 0x10AE8A17);
  LODWORD(a21) = (v28 + 335) ^ v33;
  a20 = a14;
  LODWORD(a19) = v31 - v33 + v32 - 398000133;
  uint64_t v34 = (*(uint64_t (**)(uint64_t *))(v26 + 8 * (v28 + 1837)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((1697 * (HIDWORD(a19) == -563355418)) ^ v28)))(v34);
}

uint64_t sub_10007054C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(unsigned char *)(a5 + v7 + a2) = v9;
  return (*(uint64_t (**)(void))(v10 + 8 * ((((unint64_t)(v7 + a2 + v6 - 56) < 0x38) * v8) | v5)))();
}

uint64_t sub_10007057C@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v8 + ((a2 + v4) & v5) - 2080 == ((a2 + a1) & v2 ^ v6)) * v7) ^ a2)))();
}

uint64_t sub_1000705B8(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_100267840 + ((22 * (*(_DWORD *)(a2 + 4) != 1704253534)) ^ 0x487u)))();
}

uint64_t sub_1000705F4@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x250]) = v3;
  LODWORD(STACK[0x1838]) = v4;
  LODWORD(STACK[0x183C]) = 1367427329;
  int v6 = *(_DWORD **)(v1 + 8 * (a1 ^ 0x323));
  STACK[0x240] = (unint64_t)v6;
  LODWORD(STACK[0x504]) = *v6;
  int v7 = *(unsigned int **)(v1 + 8 * ((a1 ^ 0x2F) - 804));
  STACK[0x288] = (unint64_t)v7;
  uint64_t v8 = *v7;
  unint64_t v9 = 235795823 * ((0x621F11AEB51988FCLL - ((v5 - 192) | 0x621F11AEB51988FCLL) + STACK[0x238]) ^ 0x955054AFDE4B3E5ALL);
  int v10 = ((a1 ^ 0x2F) - 857891782) ^ v9;
  *(_DWORD *)(v5 - 192) = -235795823 * ((-1256617732 - ((v5 - 192) | 0xB51988FC) + LODWORD(STACK[0x238])) ^ 0xDE4B3E5A);
  *(void *)(v5 - 184) = -(uint64_t)v9;
  *(_DWORD *)(v5 - 176) = v10;
  *(_DWORD *)(v5 - 172) = ((a1 ^ 0x2F) + 2021362963) ^ v9;
  *(void *)(v5 - 168) = v8 - v9;
  *(_DWORD *)(v5 - 160) = (a1 ^ 0x2F) - 857891782 - v9 - 96;
  *(_DWORD *)(v5 - 156) = v10 ^ 0xF;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v2 + 8 * ((a1 ^ 0x2F) + 1603)))(v5 - 192);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v5 - 188)))(v11);
}

uint64_t sub_1000706F8@<X0>(int a1@<W0>, char a2@<W2>, int a3@<W6>, int a4@<W8>)
{
  *(unsigned char *)(v5 + v4) = *(unsigned char *)(v8 + (a4 + a1))
                      + (a2 ^ (2 * *(unsigned char *)(v8 + (a4 + a1))) | 0x11)
                      + 120;
  return (*(uint64_t (**)(void))(v7 + 8 * ((2 * (v4 == 63)) | ((v4 == 63) << 8) | (a3 + v6 + 1511))))();
}

uint64_t sub_100070748()
{
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v2
                                                                                + 8 * ((v1 | 0x109) ^ (45 * (v0 > 1)))))(831158450, 0xFEF02AA3466616EFLL, 4277152419, 3463808846);
}

void sub_100070914(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 8) == 0x6BA7059072F2C1D3
    || *(void *)(a1 + 32) == 0x296CA2447D59DC54
    || *(void *)(a1 + 24) == 0x5122BBEDD94E300FLL;
  int v1 = *(_DWORD *)(a1 + 16) ^ (69008221 * ((~a1 & 0xFA1A7A5E | a1 & 0x5E585A1) ^ 0x29B82854));
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100070A24(uint64_t a1, uint64_t a2, int a3)
{
  int v6 = (v4 - 1718889655) & 0x66742BC7;
  BOOL v8 = v3 + 1153485646 > ((v6 + 185) ^ 0x2D97AC12) || v3 + 1153485646 < a3 + v6 - 1382570804;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1525 * v8) ^ v6)))();
}

uint64_t sub_100070AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11
                                                     + 8
                                                     * (((((v9 == v8) ^ (v10 + 83)) & 1)
                                                       * (a6 + v10 - 336 + a8)) | v10)))(a1, 4432325);
}

uint64_t sub_100070B00@<X0>(int a1@<W8>)
{
  int *v3 = v9 ^ v4;
  int v5 = ((a1 & 0x29AB4FB7) - 1168) | 0x2B;
  uint64_t v11 = v8;
  unsigned int v10 = ((a1 & 0x29AB4FB7) - 2015) ^ (69008221
                                    * ((((&v10 | 0x475A7F8C) ^ 0xFFFFFFFE)
                                      - (~&v10 | 0xB8A58073)) ^ 0x6B07D279));
  (*(void (**)(unsigned int *))(v2 + 8 * (a1 & 0x29AB4FB7 ^ 0x18Bu)))(&v10);
  uint64_t v11 = v7;
  unsigned int v10 = (v5 - 890) ^ (69008221 * ((&v10 & 0x83CD08BF | ~(&v10 | 0x83CD08BF)) ^ 0xAF90A54A));
  uint64_t result = (*(uint64_t (**)(unsigned int *))(v2 + 8 * (v5 + 1264)))(&v10);
  *(_DWORD *)(v1 + 24) = -563355418;
  return result;
}

uint64_t sub_100070C34@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unint64_t a5@<X8>)
{
  uint64_t v9 = (a2 + a1 + a3);
  unint64_t v10 = v9 + a5 + 1;
  uint64_t v11 = (a2 + a1) & 0xF;
  uint64_t v12 = v11 - v9;
  unint64_t v13 = v6 + v12;
  unint64_t v14 = v6 + (((a4 - 1559) | 0x2C9u) ^ 0x3C8) + v11;
  unint64_t v15 = v12 + v7 + 2;
  unint64_t v16 = v11 + v7 + 3;
  unint64_t v17 = v12 + v5 + 4;
  unint64_t v18 = v11 + ((a4 - 1534266776) & 0x5B730EB7) + v5 - 2098;
  BOOL v20 = v16 > a5 && v15 < v10;
  int v22 = v13 < v10 && v14 > a5 || v20;
  if (v17 < v10 && v18 > a5) {
    int v24 = 1;
  }
  else {
    int v24 = v22;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((49 * (v24 ^ 1)) ^ a4)))();
}

uint64_t sub_100070CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14, uint64_t a15, int a16)
{
  unsigned int v19 = 1224239923
      * ((((&a13 | 0x5C26CAC4) ^ 0xFFFFFFFE) - (~&a13 | 0xA3D9353B)) ^ 0x516AC8EC);
  a16 = v19 ^ 0x3B7;
  a15 = a10;
  a13 = (v16 ^ 0xEBBCDE78) + ((2 * v16) & 0xD779BCF0) - v19 + 2084812800;
  uint64_t v20 = (*(uint64_t (**)(unsigned int *))(v18 + 19624))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((3349 * (a14 == v17)) ^ 0x500u)))(v20);
}

uint64_t sub_100070DD0@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unsigned int *a57)
{
  uint64_t v58 = (*(uint64_t (**)(void, uint64_t, void))(v57 + 8 * (a2 + 1410)))(*a57, a1, LODWORD(STACK[0x500]));
  return sub_100070DF8(v58);
}

uint64_t sub_100070DF8()
{
  *(_DWORD *)(v3 - 192) = (v0 + 2138962546) ^ (69008221 * ((v3 - 192) ^ 0xD3A2520A));
  uint64_t result = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1666)))(v3 - 192);
  *uint64_t v2 = v5;
  return result;
}

void sub_100070E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(_DWORD *)(v27 - 112) = v25
                         - ((-1089388878 - ((v27 - 144) | 0xBF113EB2) + ((v27 - 144) | 0x40EEC14D)) ^ 0xB25D3C9A) * v26
                         + 243;
  *(void *)(v27 - 104) = a13;
  *(void *)(v27 - 128) = a23;
  *(void *)(v27 - 120) = a22;
  *(void *)(v27 - 144) = a25;
  *(void *)(v27 - 136) = a23;
  JUMPOUT(0x10006F4D8);
}

void sub_100070EFC()
{
  if (v0 == 1810274106) {
    int v1 = -563355418;
  }
  else {
    int v1 = 563395390;
  }
  *(_DWORD *)(v2 + 32) = v1;
}

uint64_t sub_100070F60@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (int)(((((((a1 + 330497681) ^ 0x13B3040A) - 505) & (v13 - 1704253530)) - a12 == -1704253534)
                                     * ((a1 + 330497681) & 0xEC4CFBF5 ^ 0x1EE)) ^ a1)))();
}

uint64_t sub_100070FC4()
{
  return v0();
}

uint64_t sub_100070FCC@<X0>(int a1@<W8>)
{
  uint64_t v5 = (a1 + 1039538008) & 0xC209E6FF;
  LODWORD(STACK[0x53C]) = STACK[0x298];
  LODWORD(STACK[0x4DC]) = STACK[0x2A0];
  STACK[0x2E8] = STACK[0x260];
  STACK[0x3E8] = STACK[0x288];
  STACK[0x488] = STACK[0x290];
  *(_DWORD *)(v1 + 52) += (v5 + 120033529) & 0xF8D86FFF ^ 0x7F9;
  LODWORD(STACK[0x47C]) = *(_DWORD *)(v1 + 360);
  STACK[0x508] = (v5 ^ 0xFFFFFFFFFFFFF07FLL) + (v5 ^ 0xF7F) + v2;
  LODWORD(STACK[0x4AC]) = v4;
  LODWORD(STACK[0x2A0]) = STACK[0x4DC];
  LODWORD(STACK[0x298]) = STACK[0x53C];
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((478 * (STACK[0x3C8] == 0)) ^ v5)))();
}

uint64_t sub_100071020@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_OWORD *)(v5 + (v6 + a3)) = *(_OWORD *)(a4 + a3);
  return (*(uint64_t (**)(void))(v7 + 8 * (((((a1 == a3) ^ a2) & 1) * v8) ^ v4)))();
}

uint64_t sub_100071054()
{
  int v5 = v3 - 533 + *(unsigned __int8 *)(v2 + 6) - 366;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1295 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_100071090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v16 - 136) = v14;
  *(void *)(v16 - 120) = a13;
  *(_DWORD *)(v16 - 128) = v15
                         + 831981571 * (((v16 - 136) & 0xF66E908A | ~((v16 - 136) | 0xF66E908A)) ^ 0x9030BF51)
                         + 633;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v15 + 1366)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((3186 * (a10 < (v15 ^ 0x5E4) + v15 - 14 - 1525)) ^ v15)))(v17);
}

uint64_t sub_10007113C@<X0>(uint64_t a1@<X3>, int a2@<W8>, int8x16_t a3@<Q0>)
{
  uint64_t v11 = v10 - 32 + (v8 ^ (a2 + 387));
  uint64_t v12 = v4 + v11;
  int8x16_t v13 = veorq_s8(*(int8x16_t *)(a1 + v11 - 31), a3);
  *(int8x16_t *)(v12 - 15) = veorq_s8(*(int8x16_t *)(a1 + v11 - 15), a3);
  *(int8x16_t *)(v12 - 31) = v13;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 == 32) * v9) ^ (v3 + v5 + 402))))();
}

uint64_t sub_100071148@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((201
                                * (*(unsigned __int8 *)(v1 + (v3 - 1704253534)) == ((a1 - 1687790050) & 0xDA ^ 0x2D))) ^ a1)))();
}

uint64_t sub_1000711B0@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W8>)
{
  *(unsigned char *)(v7 + (v8 + v6 + 1053)) = *(unsigned char *)(v9 + (v8 + v6 + 1053));
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((((((v5 ^ 2) * a3) ^ a4) + v6 == ((3 * (((v5 ^ 2) * a3) ^ a1)) ^ a5))
                                * ((2 * (v5 ^ 2) * a3) ^ a2)) ^ ((v5 ^ 2) * a3 + 442))))();
}

uint64_t sub_10007120C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((548
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v3 + 2) - 72) ^ v0) == ((v2 + 619701776) & 0xDB1019FF ^ (v0 - 365)))) ^ v2)))();
}

void sub_100071260(_DWORD *a1@<X8>)
{
  uint64_t v4 = *(void *)v1 ^ v2;
  *int v5 = (HIBYTE(v4) ^ 0x6C) + ((2 * (HIBYTE(v4) ^ 0x6C)) & 0xEF ^ (3 * (v3 ^ 0xA8) - 36)) + 120;
  v5[1] = (BYTE6(v4) ^ 0x63) + (~(2 * (BYTE6(v4) ^ 0x63)) | 0x11) + 120;
  v5[2] = (BYTE5(v4) ^ 0xE4) - ((2 * (BYTE5(v4) ^ 0xE4)) & 0xEF) + 119;
  v5[3] = (BYTE4(v4) ^ 0x78) - ((2 * (BYTE4(v4) ^ 0x78)) & 0xEF) + 119;
  void v5[4] = (BYTE3(v4) ^ 0xA2) - ((2 * (BYTE3(v4) ^ 0xA2)) & 0xEF) + 119;
  v5[5] = (BYTE2(v4) ^ 0x51) - ((2 * (BYTE2(v4) ^ 0x51)) & 0xEF) + 119;
  v5[6] = (BYTE1(v4) ^ 0xD1) - ((2 * (BYTE1(v4) ^ 0xD1)) & 0xEF) + 119;
  v5[7] = v4 ^ 0x4D;
  *(_DWORD *)(v1 + 12) = *a1;
}

uint64_t sub_1000713AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v31 = a8 + 1;
  *(unsigned char *)(v27 + ((a4 ^ (v22 + 119)) & (v31 + v23))) = *(unsigned char *)(a22 + v30 + v25)
                                                       + (v26 ^ (2 * *(unsigned char *)(a22 + v30 + v25)) | 0x11)
                                                       + 120;
  unsigned int v32 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((((a6 + v31 + 1) < 0x40) * v28) ^ v24));
  return v32(v32, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1000713B4()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((1010 * (unk_100285638 == 0)) ^ 0x1F8)))();
}

uint64_t sub_1000713F4@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = v2;
  *(_DWORD *)(result + 24) = 563395539;
  return result;
}

uint64_t sub_100071410@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((a1 ^ 0x11u) < ((v1 + 1779656034) & 0x95EC96E7) - 670) * ((v1 - 95) ^ 0x53B)) ^ v1)))();
}

uint64_t sub_10007145C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,char a38)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(v41
                                                             + 8
                                                             * ((1809 * ((((v38 - 832) | 0x42) ^ (v40 + 1207)) + v39 < 4)) ^ v38)))(a1, a2, &a38);
}

void sub_1000714A8(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (2078219279 * (((a1 | 0x2CA10C87) - (a1 & 0x2CA10C87)) ^ 0xF65B9AF3));
  uint64_t v2 = *(void *)(a1 + 8);
  if (*(_DWORD *)(v2 - 0x5E8E72AB319E4285) - 1758911813 >= 0) {
    unsigned int v4 = *(_DWORD *)(v2 - 0x5E8E72AB319E4285) - 1758911813;
  }
  else {
    unsigned int v4 = 1758911813 - *(_DWORD *)(v2 - 0x5E8E72AB319E4285);
  }
  uint64_t v3 = *(void *)(a1 + 24);
  if (*(_DWORD *)(v3 - 0x5E8E72AB319E4285) - 1758911813 >= 0) {
    unsigned int v5 = *(_DWORD *)(v3 - 0x5E8E72AB319E4285) - 1758911813;
  }
  else {
    unsigned int v5 = 1758911813 - *(_DWORD *)(v3 - 0x5E8E72AB319E4285);
  }
  v8[1] = v1 - 1224239923 * ((v8 - 1649905341 - 2 * (v8 & 0x9DA87143)) ^ 0x6F1B8C94) - 463;
  uint64_t v9 = v2;
  int v6 = (char *)*(&off_10026C690 + v1 - 1135) - 4;
  (*(void (**)(_DWORD *))&v6[8 * (v1 ^ 0xD9F)])(v8);
  if (v4 >= v5) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = v4;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_10007164C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v5 = (v3 - 320);
  int8x8_t v6 = vrev64_s8(*(int8x8_t *)(a2 + v5 - 7));
  *(int8x8_t *)(a1 - 7 + v5) = vrev64_s8(vadd_s8(vsub_s8(v6, vand_s8(vadd_s8(v6, v6), (int8x8_t)0xEEEEEEEEEEEEEEEELL)), (int8x8_t)0x7777777777777777));
  return (*(uint64_t (**)(void))(v4 + 8 * ((77 * (((v2 + 393) ^ 0x5E7) == 328)) ^ (v2 - 635))))();
}

uint64_t sub_1000716B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,uint64_t a63)
{
  STACK[0x288] = ((unint64_t)&STACK[0x3E0] ^ 0x738A76FFF763F96DLL)
               - 0x260A5C2001804
               + ((2 * (void)&STACK[0x3E0]) & 0xE714EDFFEEC7F2D0);
  unint64_t v75 = STACK[0x290];
  STACK[0x238] = STACK[0x290] + 49;
  STACK[0x220] = v73 + 49;
  STACK[0x200] = v75 + 29;
  a72 = v75 + 9;
  a73 = v73 + 29;
  a71 = v73 + 9;
  STACK[0x2A8] = (unint64_t)&a9 - 0x2C2F364FA24C4B09;
  LODWORD(STACK[0x298]) = v74 - 782;
  LODWORD(STACK[0x260]) = v74 - 335025367;
  a68 = v74 - 1137795656;
  a66 = 2 * (v74 ^ 0x35F);
  LODWORD(STACK[0x2A0]) = v74 + 951739273;
  *(int32x4_t *)&STACK[0x240] = vdupq_n_s32(0xDE6BE0E6);
  *(int32x4_t *)&STACK[0x250] = vdupq_n_s32(0x5E6BE0F6u);
  LODWORD(STACK[0x2C0]) = v74 ^ 0xA;
  a64 = v74 ^ 0x323;
  a62 = v74 + 1455643005;
  return sub_10007B9F4();
}

uint64_t sub_100071810(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((49 * (a4 + ((2 * ((v4 + 957711010) & 0xC6EA7CFF ^ 0xA7C)) ^ (a3 + 998)) < 0xFFFFFFF0)) ^ (v4 - 7))))();
}

uint64_t sub_100071868()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((((v2 + 320) ^ (v4 - 1604) ^ (v4 + v2 - 778)) * (v0 - v1 == 1147951923)) ^ v2)))();
}

uint64_t sub_1000718BC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((95 * (v1 < (LODWORD(STACK[0x2D4]) ^ 0x7AF60E3Cu))) ^ (LODWORD(STACK[0x2D4]) - 46))))();
}

uint64_t sub_1000718FC@<X0>(int a1@<W8>)
{
  BOOL v3 = (a1 ^ (v1 - 895) ^ (v1 - 1530) ^ 0x694) < 8;
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v3) | (16 * v3)) ^ v1)))();
}

uint64_t sub_100071940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,uint64_t a53,uint64_t a54)
{
  int v57 = (v54 + 540) | 0x100;
  STACK[0x1878] = 0xDC6A836410CFA66BLL;
  STACK[0x1870] = 0x37D4A6B27C52F517;
  int v58 = STACK[0x548];
  LODWORD(STACK[0x47C]) = STACK[0x548];
  int v59 = 944348131 * ((v56 - 192) ^ 0xA319A44E);
  *(void *)(v56 - 128) = &STACK[0x24EBBF705D887860];
  *(void *)(v56 - 184) = a54;
  *(_DWORD *)(v56 - 136) = (2144460849 * v58 - 1553245275) ^ v59;
  *(void *)(v56 - 168) = &STACK[0x5EC77446536A63B6];
  *(void *)(v56 - 160) = &STACK[0x1870];
  *(void *)(v56 - 144) = &STACK[0x7D0C57D6EC0D606A];
  *(_DWORD *)(v56 - 152) = v59 + v57 - 457;
  *(_DWORD *)(v56 - 192) = v59 + a52 - ((2 * a52 - 487618760) & 0xC52B974A) - 737308863;
  uint64_t v60 = (*(uint64_t (**)(uint64_t))(v55 + 8 * (v57 + 1585)))(v56 - 192);
  int v61 = *(_DWORD *)(v56 - 176);
  LODWORD(STACK[0x4AC]) = v61;
  return (*(uint64_t (**)(uint64_t))(v55 + 8 * ((1463 * (v61 == -563355418)) ^ (v57 + 173))))(v60);
}

uint64_t sub_10007197C@<X0>(int a1@<W0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(STACK[0x200]) = v65 ^ 0x34C;
  unint64_t v70 = STACK[0x2B8];
  *(_DWORD *)(v70 + 392) = a2;
  *(_DWORD *)(v70 + 396) = STACK[0x528];
  *(void *)(v70 + 400) = STACK[0x480];
  *(_DWORD *)(v70 + 408) = 23889152 - v66 + ((v65 - 96) | 0x2E0) + LODWORD(STACK[0x324]) - 738;
  *(void *)(v70 + 416) = STACK[0x2B0] + (v66 - 935020333);
  int v71 = (*(uint64_t (**)(unint64_t, uint64_t))(v68 + v69 * (uint64_t)a1 + 8))(STACK[0x260], a65);
  return (*(uint64_t (**)(uint64_t, __n128))(v67
                                                    + 8
                                                    * (((v71 - 563355418 - ((2 * v71) & 0xBCD7C1CC) == -563355418)
                                                      * (LODWORD(STACK[0x200]) - 389)) ^ v65)))(48, (__n128)0);
}

uint64_t sub_100071A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,unsigned int *a63)
{
  int v67 = (v63 - 565) | 0x10C;
  (*(void (**)(void, unint64_t, void))(v65 + 8 * ((v63 + 549) ^ 0xF21)))(*a63, STACK[0x4E8], LODWORD(STACK[0x39C]));
  uint64_t v68 = 235795823 * (v64 ^ 0x8B0BAFE94AD4959);
  *(void *)(v66 - 168) = LODWORD(STACK[0x4AC]) - v68;
  *(_DWORD *)(v66 - 192) = -235795823 * (v64 ^ 0x94AD4959);
  *(void *)(v66 - 184) = 563395388 - v68;
  *(_DWORD *)(v66 - 160) = ((v67 + 1248619592) | 0x80) - v68;
  *(_DWORD *)(v66 - 156) = (v67 + 1248619577) ^ v68;
  *(_DWORD *)(v66 - 176) = (v67 + 1248619592) ^ v68;
  *(_DWORD *)(v66 - 172) = (v67 + 2021362963) ^ v68;
  uint64_t v69 = (*(uint64_t (**)(uint64_t))(v65 + 8 * (v67 ^ 0xA5F)))(v66 - 192);
  return (*(uint64_t (**)(uint64_t))(v65 + 8 * *(int *)(v66 - 188)))(v69);
}

uint64_t sub_100071B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a13 = &STACK[0x55D5CC6D86BC0F37];
  a14 = (831981571 * (((&a13 | 0x8187B219) - (&a13 & 0x8187B219)) ^ 0x1826623D)) ^ 0x8F;
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 18816))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * (int)(((a15 == v15) * ((v17 + 1326) ^ 0xC35E9A66)) ^ 0x2CA)))(v18);
}

uint64_t sub_100071BF0(uint64_t a1, uint64_t a2, char a3)
{
  int v3 = LOBYTE(STACK[0x2EC]) ^ 0x89;
  if (v3 == 1)
  {
    unsigned int v8 = STACK[0x2D0];
    unsigned int v9 = STACK[0x2CC];
    LOBYTE(STACK[0x2C4]) = ((8 * LOBYTE(STACK[0x2D0])) ^ 0x70)
                         - ((2 * ((8 * LOBYTE(STACK[0x2D0])) ^ 0x70)) & 0xE0)
                         + 119;
    unsigned int v10 = (v8 >> (((a3 - 25) | 0x41) - 92)) ^ 0xFFFFFFCD;
    LOBYTE(STACK[0x2C5]) = v10 - ((2 * v10) & 0xEF) + 119;
    LOBYTE(STACK[0x2C6]) = ((v8 >> 13) ^ 0x53) - ((2 * ((v8 >> 13) ^ 0x53)) & 0xEF) + 119;
    HIDWORD(v11) = v9 ^ 6;
    LODWORD(v11) = v8 ^ 0x60000000;
    LOBYTE(STACK[0x2C7]) = ((v8 >> 21) ^ 0x65) - ((2 * ((v8 >> 21) ^ 0x65)) & 0xEF) + 119;
    LOBYTE(STACK[0x2C8]) = (v11 >> 29) - ((2 * (v11 >> 29)) & 0xEF) + 119;
    LOBYTE(STACK[0x2C9]) = ((v9 >> 5) ^ 0x1B) - ((2 * ((v9 >> 5) ^ 0x1B)) & 0xEF) + 119;
    LOBYTE(STACK[0x2CA]) = ((v9 >> 13) ^ 0xA8) - ((2 * ((v9 >> 13) ^ 0xA8)) & 0xEF) + 119;
    unsigned int v7 = 118 - (v9 >> 21) - ((2 * ~(v9 >> 21)) & 0xFFFFFFEF);
    goto LABEL_5;
  }
  if (v3 == 2)
  {
    unsigned int v4 = STACK[0x2CC];
    unsigned int v5 = STACK[0x2D0];
    LOBYTE(STACK[0x2C4]) = ((LODWORD(STACK[0x2CC]) >> 20) | 0x11) - (LODWORD(STACK[0x2CC]) >> 21) + 119;
    LOBYTE(STACK[0x2C5]) = ((v4 >> ((a3 + 40) ^ 0x6C)) ^ 0xA8)
                         - ((2 * ((v4 >> ((a3 + 40) ^ 0x6C)) ^ 0xA8)) & 0xEF)
                         + 119;
    HIDWORD(v6) = v4 ^ 6;
    LODWORD(v6) = v5 ^ 0x60000000;
    LOBYTE(STACK[0x2C6]) = ((v4 >> 5) ^ 0x1B) - ((2 * ((v4 >> 5) ^ 0x1B)) & 0xEF) + 119;
    LOBYTE(STACK[0x2C7]) = (v6 >> 29) + (~(2 * (v6 >> 29)) | 0x11) + 120;
    LOBYTE(STACK[0x2C8]) = ((v5 >> 21) ^ 0x65) - ((2 * ((v5 >> 21) ^ 0x65)) & 0xEF) + 119;
    LOBYTE(STACK[0x2C9]) = ((v5 >> 13) ^ 0x53) - ((2 * ((v5 >> 13) ^ 0x53)) & 0xEF) + 119;
    LOBYTE(STACK[0x2CA]) = ((v5 >> 5) ^ 0xCD) - ((2 * ((v5 >> 5) ^ 0xCD)) & 0xEF) + 119;
    unsigned int v7 = ((8 * v5) ^ 0x70) - 32 * (((8 * v5) ^ 0x70) >> 4) + 119;
LABEL_5:
    LOBYTE(STACK[0x2CB]) = v7;
  }
  return sub_10008D300();
}

uint64_t sub_100071E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  return (*(uint64_t (**)(uint64_t))(v36
                                            + 8 * ((((v35 ^ 0x1E4) + 5 * (v35 ^ 0x508) - 1295) * (v34 == v33)) ^ v35)))(a33);
}

uint64_t sub_100071E7C@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W6>, int a4@<W8>)
{
  int v7 = *(_DWORD *)(v6 + v4 * (uint64_t)a1 + 36);
  BOOL v9 = v7 + 341539994 > a4 - 1064896537 && v7 + 341539994 < SLODWORD(STACK[0x2C0]) && v7 != a3;
  return (*(uint64_t (**)(void))(v5 + 8 * ((195 * (a2 & ~((a4 - 1259) ^ v9))) ^ a4)))();
}

uint64_t sub_100071EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  int v28 = (((v27 - 144) & 0xF81837B4 | ~((v27 - 144) | 0xF81837B4)) ^ 0x9E46186F) * v23;
  *(_DWORD *)(v27 - 136) = v26 - v28 + 844;
  *(_DWORD *)(v27 - 132) = v28 + 517830329;
  *(void *)(v27 - 144) = &a22 + v22;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v26 + 1757)))(v27 - 144);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (int)(((((3 * (v26 ^ 0x30F)) ^ 0xFFFFFBF3) + ((v26 + 354) | 0x103))
                                                   * (v25 == 0)) ^ (v26 - 164))))(v29);
}

uint64_t sub_100071FA0()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((85 * (STACK[0x340] == 0)) ^ (v1 - 506))))();
}

uint64_t sub_100071FCC@<X0>(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v3 + a1 + v5 + ((a2 - 565) | 0x202u)) = *(unsigned char *)(a3 + a1 + v5 + ((a2 - 565) | 0x202u));
  return (*(uint64_t (**)(void))(v6 + 8 * ((1979 * (a1 - 1 == v4)) ^ a2)))();
}

uint64_t sub_10007200C@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, unsigned int a5@<W4>, unint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v39 = 4 * (a1 + 1 + a4);
  unint64_t v40 = (*(_DWORD *)(a25 + v39) ^ v25)
      + ((a3 + (a9 ^ v30) - 544) ^ HIDWORD(a6))
      + a5 * (unint64_t)(*(_DWORD *)(*v26 + v39) ^ v25);
  unint64_t v41 = HIDWORD(v38)
      + v35 * (unint64_t)(*(_DWORD *)(*v36 + v39) ^ v25)
      + ((v40 + a2 - (a8 & (2 * v40))) ^ v37);
  *(_DWORD *)(a25 + 4 * (a1 + a4)) = v41 + v25 - (v31 & (2 * v41));
  BOOL v42 = a1 + v32 < a7;
  if (v28 > v29 != a1 + v32 < v27) {
    BOOL v42 = v28 > v29;
  }
  return (*(uint64_t (**)(void))(v33 + 8 * ((v42 * v34) ^ a9)))();
}

uint64_t sub_1000720D0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v0 ^ 0x3D6) * (((v3 - v2) & 0x1F) == 0x19)) ^ v0)))();
}

uint64_t sub_100072148@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(_DWORD *)(a1 + 4 * (v3 + v5 + 1)) == v1)
                                * ((((v2 | 0x432) - 978) | 0x190) ^ 0x2D3)) | ((v2 | 0x432) - 22))))();
}

uint64_t sub_100072198(unsigned int a1)
{
  LODWORD(STACK[0x3B8]) = v2;
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((((((v1 & 0x6499A9DA) - 2136) | 0x32C) ^ 0x329) * (a1 < 4)) ^ v1 & 0x6499A9DA)))();
}

uint64_t sub_1000721E0(uint64_t a1, uint64_t a2)
{
  *(void *)(v5 + v4 - 0xB999BAAF556A832 + ((v3 - 565) ^ (unint64_t)(a2 - 450))) = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * ((423 * ((v2 & 0x38) == 8)) ^ v3)))();
}

uint64_t sub_100072238()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((44 * (v1 + v0 + (((v2 ^ 0xA54) + 208) ^ 0x802832Fu) < 8)) ^ v2)))();
}

uint64_t sub_100072280@<X0>(unint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((41 * (a1 > 3)) ^ (v1 - 598192747) & 0x23A7AB17u)))(4145960564);
}

void sub_1000722FC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) + 1543737703 * ((150514792 - (a1 | 0x8F8AC68) + (a1 | 0xF7075397)) ^ 0x89F303EB);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_100072438(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v11 = v9 + a6;
  if (v11 <= 0x40) {
    unsigned int v11 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10
                                                                       + 8
                                                                       * (((a1
                                                                          - v7
                                                                          - v8
                                                                          + ((v6 - 1459921970) & 0x57049FF3)
                                                                          + v11 < 0xF)
                                                                         * ((107 * (v6 ^ 0x776)) ^ 0x214)) ^ v6)))(3095667141, a2, a3, 3615489095);
}

uint64_t sub_1000724CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10008D300(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1000724D8@<X0>(uint64_t a1@<X8>, uint64_t a2, int a3)
{
  *(_DWORD *)(a1 - 0x3A31F5D96A0DCBB0) = a3;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(void *)(v4 + 32) == 0x61DFFFBC86B80B30)
                                * (((((v3 ^ 0x3B6) - 771) | 0x80) + 2) ^ (58 * (((v3 ^ 0x3B6) + 914) ^ 0x7ED)))) ^ ((v3 ^ 0x3B6) + 914))))();
}

uint64_t sub_100072554@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unsigned int v10 = v2 - 1313839094;
  int v11 = v2 - 1;
  int v12 = *(unsigned __int8 *)(v7 + v10);
  if (v12 == 119) {
    __asm { BRAA            X11, X17 }
  }
  if (v12 == 247)
  {
    int v13 = -563355418;
    uint64_t v14 = *(void *)(v4 + 16);
    int v15 = (*(unsigned char *)(v4 + 8) + v5);
    *(void *)uint64_t result = v7;
    *(_DWORD *)(result + 8) = v6;
    *(_DWORD *)(result + 12) = v11;
    if (v15 == 82) {
      int v16 = 1081653;
    }
    else {
      int v16 = 1081652;
    }
    *(_DWORD *)(result + 16) = 218024909;
    *(_DWORD *)(result + 20) = v16;
    *(_DWORD *)(result + 24) = -563355418;
    *(void *)(v14 - 0x73801E9372C50DB3) = a2;
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(void))(v9 + 8 * (v8 + 638)))();
    int v13 = 563395391;
  }
  *(_DWORD *)(v4 + 12) = v13;
  return result;
}

uint64_t sub_100072638@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((((((a1 & 0x53E7CFDF) + 1528948091) & 0xA4DE17EF) + 327) | 0x120) ^ 0xF51)
                                     * (v2 > (((a1 & 0x53E7CFDF) + 1528948091) & 0xA4DE17EF) - 712)) ^ ((a1 & 0x53E7CFDF) + 1528948091) & 0xA4DE17EF)))();
}

uint64_t sub_100072768()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v0 + 8 * (v3 ^ 0x9E7)))((*(_DWORD *)(v2 + 24 * v1 + 16) - 1704253533), 2970849626) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v4 * ((((4 * v3) ^ 0x618) - 168724645) & 0xA0E80DD ^ 0xFD)) ^ v3)))();
}

uint64_t sub_1000727E8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  unsigned int v7 = v5 + 1477247020 + v4;
  uint64_t v8 = v2 + v7;
  long long v9 = *(_OWORD *)(v8 - 31);
  uint64_t v10 = a2 + v7;
  *(_OWORD *)(v10 - 15) = *(_OWORD *)(v8 - 15);
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((v3 & 0xFFFFFFE0) == 32) * ((((a1 ^ 0x75C) - 1604844977) & 0x5FA7FEE3) + 1564)) ^ ((a1 ^ 0x75C) - 146))))();
}

uint64_t sub_100072860@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X6>, int a5@<W8>)
{
  char v11 = *(unsigned char *)((v5 - 830) + v6 + v8 + a4);
  *(unsigned char *)(a3 + (a5 + a1)) = v11 + (v10 ^ (2 * v11) | 0x11) + 120;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((a2 + a5 + 50) > 0x3F) * v7) ^ v5)))();
}

uint64_t sub_1000728B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15, uint64_t a16, unint64_t *a17, int a18)
{
  unsigned int v21 = 1224239923 * ((((2 * &a13) | 0x7801179A) - &a13 + 1140814899) ^ 0x4EB3761A);
  a14 = (v20 - 2024874569) ^ v21;
  a15 = v21 ^ 0xBD8E7B6;
  a13 = v21 ^ 0x6BCE5709;
  a16 = a10;
  a17 = &STACK[0x634ED76D4AB8829D];
  uint64_t v22 = (*(uint64_t (**)(int *))(v19 + 8 * (v20 + 895)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((995 * (a18 == ((((v20 + 1369146796) & 0xAE6476C5) + 277) ^ (v18 + 717)))) ^ (v20 - 1002))))(v22);
}

uint64_t sub_1000729A8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2
                                                     + 8
                                                     * ((1919 * ((v3 + 673 + v1 - 1612863796) < 0x38)) ^ (v3 + 583))))(a1, -1612863066);
}

uint64_t sub_1000729F8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v3
                                                    + 8
                                                    * (((((((v2 - 1840559207) & 0x6DB4B2FC) - 572) & v1) == 0)
                                                      * (v2 - 944)) ^ (v2 + 728))))(a1, (v2 + 1192));
}

void sub_100072A40()
{
}

uint64_t sub_100072AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v38 = a16
      + (STACK[0x2D4] & 0x3F ^ a21 ^ 0xE3FED8D0)
      + ((2 * LODWORD(STACK[0x2D4])) & 0x7A ^ ((a14 & 0x38E0EFFD) - 1612)) < 0xFFFFFFC0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t))(v36 + 8 * (((16 * v38) | (v38 << 8)) ^ (v37 + 1617))))(a36, a2, a3, 2342826110, 2952075895, &STACK[0x290], 45, 1689);
}

uint64_t sub_100072B64@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + a1 + v2 - 1) = v4;
  return (*(uint64_t (**)(void))(v5 + 8 * ((2029 * ((unint64_t)(a2 + a1) < 0x40)) ^ (v3 - 851))))();
}

uint64_t sub_100072BA4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v2 - 1340331332) ^ (1109 * (v0 > v3 + 623)))))();
}

uint64_t sub_100072BE4()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1000
                                * (((v1 + ((v3 + 485085772) & 0xE316295F) - 349) & (2
                                                                                  * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                 + ((v3 - 756503250) & 0x2D174DF5 ^ (v0 - 213) ^ (*(unsigned __int8 *)(v2 + 5) - 13)) == v0)) ^ v3)))();
}

uint64_t sub_100072C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  BOOL v38 = (((_BYTE)a11 + (_BYTE)a6 + 21 - 15) & 0xF) == 0 && a11 != 396484236;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * ((39 * v38) ^ ((int)a6 + 96))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_100072CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (((v7 - 335 + (v7 ^ v9) * a7 - 1394) * (v8 == 2)) ^ v7)))();
}

void sub_100072CDC()
{
}

uint64_t sub_100072CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * (int)(((v24 == -563355418) * ((((a9 - 909) ^ 0x199) - a8 - 205) ^ (a6 + 648))) ^ (a9 - 909))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_100072D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10
                                                                                         + 8
                                                                                         * ((((((a6 + 252) ^ 0xB7) + 594) ^ ((a6 + 252) | 0x312))
                                                                                           * (v11 == 0x7419917862B0D7EBLL)) ^ a6)))(a1, a2, a3, a4, a10, 2536055483);
}

uint64_t sub_100072D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  (*(void (**)(uint64_t, uint64_t))(v18 + 8 * (v16 + 1425)))(a12, 2965982036);
  unsigned int v19 = (*(uint64_t (**)(void))(v18 + 8 * (v16 + 1353)))();
  *int v17 = v19;
  uint64_t v20 = 1812433253 * (v19 ^ (v19 >> 30)) + 1;
  v17[1] = v20;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * (((2 * (((v16 + 12) ^ 1) & 1)) & 0xEF | (16 * (((v16 + 12) ^ 1) & 1))) ^ (v16 + 962))))(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_100072E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * (((((v17 - 1121999940) & 0x42E05BFF) - 228) * (a9 != 0)) ^ v17)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a1, a12, a13, a14, a15, v19 + 0x5883B0A40B206ABBLL, a17);
}

uint64_t sub_100072F34@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ (8 * (v4 + 1 != v3 + 40)))))(a2);
}

uint64_t sub_100072FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return (*(uint64_t (**)(void))(v27
                              + 8
                              * (int)(((*(_DWORD *)(a24 + 4 * (v26 + ((v25 - 867968364) & 0x33BC2718u))) == v24)
                                     * (((v25 - 867968364) ^ 0xCC43DCB0) - 800)) ^ (v25 - 540))))();
}

uint64_t sub_100073038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9
                                                                      + 8
                                                                      * (((((v8 < 0x10) ^ a8) & 1)
                                                                        * ((a8 - 1355292623) & 0x50C81DFF ^ 0x1DF)) ^ a8)))(a1, a2, a3, 0);
}

uint64_t sub_100073088@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2221 * (v1 + v3 + 1 < ((a1 - 208081927) & 0xC6713F6) + 2147483227)) ^ a1)))();
}

uint64_t sub_1000730D8(int a1, uint64_t a2, int a3, int a4)
{
  int v10 = (v8 - 656253162) & 0x271DA67F;
  BOOL v11 = v5 < v9;
  if (v11 == a1 + v4 < (v10 ^ a3 ^ a4 ^ ((v10 - 1490) | 0x14u))) {
    BOOL v11 = v5 > a1 + v4;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((!v11 * v6) ^ v10)))();
}

uint64_t sub_1000734F0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  BOOL v9 = v6 < v5;
  if (v9 == ((6 * (v4 ^ 0x156)) ^ a4) + v7 > 0x8EDF3615) {
    BOOL v9 = v5 + v7 + 1 < v6;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((110 * v9) ^ v4)))();
}

uint64_t sub_10007357C@<X0>(int a1@<W3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((a1 ^ (a1 - 2)) + 1190) ^ 0x699 ^ (275 * (a1 ^ (a1 - 2)))) * (a2 == v4)) ^ (v3 + a1 + 554))))();
}

uint64_t sub_1000735C8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((a1 - 1287) | 0x14A) ^ 0x304) * (*v2 > 0x14u)) ^ a1)))();
}

uint64_t sub_1000735FC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  BOOL v8 = v4 > v7;
  if (v8 == a3 + 1582461697 < ((a4 - 1913637443) & 0x720FCDC6) - 543166976) {
    BOOL v8 = a3 + 1582461697 < v6;
  }
  return (*(uint64_t (**)(uint64_t, void))(v5 + 8 * ((131 * v8) ^ a4)))(a1, 0);
}

void sub_100073678(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (3804331 * ((-2 - ((a1 | 0x7F5042C2) + (~a1 | 0x80AFBD3D))) ^ 0xFE7A98CB));
  __asm { BRAA            X10, X17 }
}

void sub_10007373C()
{
  *(_DWORD *)(v0 + 16) = -552278683;
}

void sub_100073748()
{
  *(_DWORD *)(v0 + 8) = *(_DWORD *)(v1 - 0x6BA7059072F2C1BBLL);
}

uint64_t sub_100073798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_DWORD **a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  int v58 = *a24;
  if (((unint64_t)*a24 & ((HIDWORD(a11) + 1203575690) - 656)) != (HIDWORD(a11) + 1203575449)
                                                                                       - 418
    || (uint64_t v59 = (uint64_t)*(&off_10026C690 + (int)(HIDWORD(a11) ^ 0xB842E798)),
        uint64_t v61 = *(void *)(v59 - 4),
        uint64_t v60 = (void *)(v59 - 4),
        v61))
  {
    *a10 = 563395417;
    return sub_100082408(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28);
  }
  else
  {
    *uint64_t v60 = v58;
    *(_DWORD *)*(&off_10026C690 + HIDWORD(a11) + 1203575135) = 255;
    *v58 |= ~v58[*v58 & 0x3ELL] << 16;
    int v62 = (HIDWORD(a11) + 1203575035) | 0x200;
    v58[4] |= ~v58[v58[4] & 0x3ELL] << 16;
    v58[8] |= ~v58[v58[8] & (v62 - 454)] << 16;
    v58[12] |= ~v58[v58[12] & 0x3ELL] << 16;
    v58[16] |= ~v58[v58[16] & 0x3ELL] << 16;
    v58[20] |= ~v58[v58[20] & 0x3ELL] << 16;
    v58[24] |= ~v58[v58[24] & 0x3ELL] << 16;
    v58[28] |= ~v58[v58[28] & 0x3ELL] << 16;
    v58[32] |= ~v58[v58[32] & 0x3ELL] << 16;
    v58[36] |= ~v58[v58[36] & 0x3ELL] << 16;
    v58[40] |= ~v58[v58[40] & 0x3ELL] << 16;
    v58[44] |= ~v58[v58[44] & 0x3ELL] << 16;
    v58[48] |= ~v58[v58[48] & 0x3ELL] << 16;
    v58[52] |= ~v58[v58[52] & 0x3ELL] << 16;
    v58[56] |= ~v58[v58[56] & 0x3ELL] << 16;
    v58[60] |= ~v58[v58[60] & 0x3ELL] << 16;
    uint64_t v63 = (*(uint64_t (**)(char *, void, uint64_t))(v57 + 8 * (HIDWORD(a11) + 1203577510)))(&a57, 0, 1024);
    return (*(uint64_t (**)(uint64_t))(v57 + 8 * (int)(((v62 ^ 0xB01C2B8C) + v62 + 1340331139) ^ v62)))(v63);
  }
}

uint64_t sub_100073AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(void *)(v20 - 136) = a15;
  *(void *)(v20 - 128) = v19;
  *(void *)(v20 - 104) = a11;
  *(_DWORD *)(v20 - 112) = v15 + 69008221 * ((v20 - 1931034688 - 2 * ((v20 - 136) & 0x8CE6C048)) ^ 0x5F449242) - 52;
  *(void *)(v20 - 120) = v19;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v15 ^ 0xCFF)))(v20 - 136);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((50
                                              * (((v16
                                                 + (((v18 - 1140034895) >> 1) ^ 0x77F7BF4F)
                                                 + ((v18 - 1140034895) & 0xEFEF7E9E)
                                                 + 2) & a10) != 0)) ^ v15)))(v21);
}

void sub_100073B80()
{
}

uint64_t sub_100073CE4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v7 = (((a6 - 438) | 0x89A) ^ 0x3FBFFF63 ^ (((a6 + 148) ^ 0x24B) + a2) & 0x7F)
     + ((2 * (((a6 + 148) ^ 0x24B) + a2)) & 0xF2u)
     - 1069545466 > 3;
  return (*(uint64_t (**)(void))(v6 + 8 * (v7 | (8 * v7) | a6)))();
}

uint64_t sub_100073D50@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1317
                                * ((*(_DWORD *)(a1 + 532) - 1758911814) < LODWORD(STACK[0x2A8]))) ^ LODWORD(STACK[0x2B0]))))();
}

uint64_t sub_100073D90(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 != v5) | (2 * (a2 != v5))) ^ (a4 + 28))))();
}

void sub_100073DB0()
{
  STACK[0x328] = *(void *)(v0 + 8 * (v1 - 770));
  JUMPOUT(0x1000ABB28);
}

uint64_t sub_100073DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,_DWORD *a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  unsigned int v30 = (int *)(a25 + 4 * v28);
  int v31 = *v30;
  LODWORD(v30) = -1805087677 * ((*(_DWORD *)(*a22 + (*a21 & 0x6868FD58)) ^ v30) & 0x7FFFFFFF);
  LODWORD(v30) = (v30 >> (v26 + 11)) ^ v30;
  unsigned int v32 = -1805087677 * v30;
  *(_DWORD *)(a26 + 4 * v28) ^= v31 ^ *((_DWORD *)*(&off_10026C690 + a20) + HIBYTE(v32) - 1) ^ *((_DWORD *)*(&off_10026C690 + v26 - 1004)
                                                                                               + HIBYTE(v32)
                                                                                               - 2) ^ *((_DWORD *)*(&off_10026C690 + a19) + HIBYTE(v32) + 5) ^ (-1941766144 * v30) ^ v32 ^ (1018030627 * HIBYTE(v32));
  return (*(uint64_t (**)(void))(v27 + 8 * ((2014 * (v29 - 1 == ((v26 - 1) | 1) - 1029)) ^ (v26 - 9))))();
}

uint64_t sub_100073ED0@<X0>(int a1@<W0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((a1 + 1601) ^ 0xB98) - 569) ^ 0x11D) * ((unint64_t)(a3 - a2 - 1452) < 0x20)) ^ (a1 + 1601))))();
}

uint64_t sub_100073F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, int a17, uint64_t a18, unint64_t *a19, int a20)
{
  unsigned int v22 = 1224239923 * ((2 * (&a15 & 0x137ED580) - &a15 - 327079302) ^ 0x1E32D7AD);
  a18 = a12;
  a19 = &STACK[0x634ED76D4AB882AD];
  a15 = v22 ^ 0x6BCE570A;
  a16 = (a10 - 2024873871) ^ v22;
  a17 = v22 ^ 0x3EC6CCC9;
  uint64_t v23 = (*(uint64_t (**)(int *))(v21 + 8 * (a10 + 1593)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * (((a20 != v20) * ((a10 + 339) ^ 0x46A)) ^ a10)))(v23);
}

void sub_100073FE0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (831981571
                            * (((a1 ^ 0x8A003497) - 575953088 - 2 * ((a1 ^ 0x8A003497) & 0xDDABA740)) ^ 0xCE0A43F3));
  uint64_t v2 = (char *)*(&off_10026C690 + (v1 ^ 0xB2)) - 4;
  uint64_t v3 = *(void *)&v2[8
                    * ((29
                      * ((*(uint64_t (**)(uint64_t, uint64_t))&v2[8 * (v1 ^ 0x919)])(32, 0x101004023FF3BD5) != 0)) ^ v1)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000740A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  unint64_t v30 = ((a6 >> (((a5 + 12) | 6u) - 86)) ^ a2) + HIDWORD(v29) + (*(_DWORD *)(a26 + a12) ^ v26);
  *(_DWORD *)(a26 + 4 * a15) = v30 + v26 - ((v30 << (((a5 + 11) & 0x99) - 8)) & v27);
  *(_DWORD *)(a26 + a12) = HIDWORD(v30) + v26 - ((2 * HIDWORD(v30)) & 0x49C5655A);
  BOOL v32 = a23 - 695708230 < 1512476109 && a23 - 695708230 >= a19;
  return (*(uint64_t (**)(void))(v28 + 8 * (a5 ^ (246 * v32))))();
}

uint64_t sub_100074164()
{
  int v2 = v0 - 668;
  BOOL v3 = 829 * (v2 ^ 0xC0) == 1594;
  return (*(uint64_t (**)(void))(v1 + 8 * (((16 * v3) | (32 * v3)) ^ v2)))();
}

uint64_t sub_1000741AC()
{
  int v4 = (v0 + 689571733) & 0x56E5F7D7;
  uint64_t v5 = (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0xA0Du)))(*v3);
  int v6 = ((*v2 == 0) ^ ((v4 - 1) ^ (v4 + 118))) & 1;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((v6 | (8 * v6)) ^ v4)))(v5);
}

void sub_10007421C(uint64_t a1)
{
  int v1 = 3804331 * ((a1 - 881405234 - 2 * (a1 & 0xCB76D2CE)) ^ 0xB5A3F738);
  int v2 = *(_DWORD *)(a1 + 8) - v1;
  __asm { BRAA            X15, X17 }
}

uint64_t sub_1000742E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((1013 * (v6 == (v7 ^ (a6 + 179)) + 1124218302 + 293 * (v7 ^ 0x1F2))) ^ v7)))();
}

uint64_t sub_100074338@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(void, uint64_t))(v18
                                                    + 8
                                                    * (v17 ^ (62
                                                            * ((unint64_t)(a16 - a2 - a1 - 0x6E436DE5799F9208) > 0x1F)))))((v17 ^ 0x4F0u) - 817, v16);
}

uint64_t sub_100074388@<X0>(unint64_t a1@<X1>, int a2@<W3>, uint64_t a3@<X4>, unsigned int a4@<W5>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v10 = v6 + 16;
  *(_OWORD *)(a3 + (((v7 + a2) & a4 ^ a1) & (a6 + v10))) = *(_OWORD *)(a5 + v10);
  return (*(uint64_t (**)(void))(v9 + 8 * ((52 * (v8 != v10)) ^ v7)))();
}

uint64_t sub_100074390(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 24);
  return 0;
}

uint64_t sub_1000743A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  STACK[0x598] = v10;
  STACK[0x5A0] = v9;
  unint64_t v15 = STACK[0x508];
  uint64_t v16 = (char *)&a9 + STACK[0x508] - 0x2C2F364FA24C4B49;
  STACK[0x5A8] = (unint64_t)v16;
  STACK[0x508] = v15 + 320;
  LODWORD(STACK[0x428]) = *(_DWORD *)(v10 - 0xB999BAB1C51203BLL);
  LODWORD(STACK[0x42C]) = *(_DWORD *)(v10 - 0xB999BAB1C512037);
  LODWORD(STACK[0x4CC]) = *(_DWORD *)(v10 - 0xB999BAB1C512033);
  LODWORD(STACK[0x43C]) = *(_DWORD *)(v10 - 0xB999BAB1C51202FLL);
  int v17 = *(unsigned __int8 *)(v10 - 0xB999BAB1C512023) ^ 0x89;
  if (v17 == 2)
  {
    unsigned int v22 = STACK[0x2A0] & 0xC7459BFA;
    LODWORD(STACK[0x404]) = *(_DWORD *)(v10 - 0xB999BAB1C51202BLL);
    LODWORD(STACK[0x304]) = 456671172;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v13
                                                       + 8
                                                       * (int)((((((v22 - 673) | 0x340) ^ (v12 + 817)) + 456671172 < 0x40)
                                                              * (((v22 - 687) | 8) + 59)) ^ v22)))(1584128230, 847);
  }
  else if (v17 == 1)
  {
    int v18 = STACK[0x2C0];
    LODWORD(STACK[0x304]) = v11;
    BOOL v20 = v9 >= STACK[0x2A8] + v15 || (unint64_t)v16 >= v9 + 64;
    return (*(uint64_t (**)(void))(v13 + 8 * (((v18 - 788) * v20) | (v14 - 138))))();
  }
  else
  {
    return sub_1000745C0();
  }
}

void sub_100074548()
{
  int v9 = v5 - 1541;
  LODWORD(STACK[0x428]) = v0;
  LODWORD(STACK[0x42C]) = v3;
  LODWORD(STACK[0x4CC]) = v1;
  LODWORD(STACK[0x43C]) = v4;
  LODWORD(STACK[0x404]) = v2;
  unint64_t v10 = STACK[0x598];
  int v11 = *(_DWORD *)(STACK[0x598] - 0xB999BAB1C51202BLL);
  LODWORD(STACK[0x304]) = v6 + 80;
  *(_DWORD *)(v10 - 0xB999BAB1C51202BLL) = (v11 ^ v7)
                                         + (v2 ^ (v7 - 347) ^ v9)
                                         + v7
                                         - (v8 & (2 * ((v11 ^ v7) + (v2 ^ (v7 - 347) ^ v9))));
  JUMPOUT(0x1000745BCLL);
}

uint64_t sub_1000745C0()
{
  int v8 = (*(_DWORD *)(v5 - 0xB999BAB1C51203BLL) ^ v6) + (v1 ^ v6);
  *(_DWORD *)(v5 - 0xB999BAB1C51203BLL) = v8 + v6 - (v7 & (2 * v8));
  int v9 = (*(_DWORD *)(v5 - 0xB999BAB1C512037) ^ v6) + (v3 ^ v6);
  *(_DWORD *)(v5 - 0xB999BAB1C512037) = v9 + v6 - (v7 & (2 * v9));
  int v10 = (*(_DWORD *)(v5 - 0xB999BAB1C512033) ^ v6) + (v2 ^ v6);
  *(_DWORD *)(v5 - 0xB999BAB1C512033) = v10 + v6 - (v7 & (2 * v10));
  int v11 = (*(_DWORD *)(v5 - 0xB999BAB1C51202FLL) ^ v6) + (v4 ^ v6);
  *(_DWORD *)(v5 - 0xB999BAB1C51202FLL) = v11 + v6 - (v7 & (2 * v11));
  STACK[0x508] = v0 - 320;
  return ((uint64_t (*)(void))STACK[0x460])();
}

uint64_t sub_1000746A0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (int)(((((a8 + 192) ^ 0xFFFFFC21) + ((a8 + 192) | 2)) * (v8 == a4)) ^ a8)))();
}

uint64_t sub_1000746D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                               + 8
                                                                               * ((25 * (v5 < ((4 * v4) ^ 0xB34u) - 888)) ^ v4)))(a1, a2, a3, a4, 0);
}

void sub_100074704(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) - 69008221 * ((-2 - ((~a1 | 0x2A929A22) + (a1 | 0xD56D65DD))) ^ 0xF930C828);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000747F4@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W5>, int a4@<W6>, int a5@<W8>)
{
  int v11 = (unsigned int *)(v10 + 4 * v6);
  uint64_t v12 = v6 + 1;
  int v13 = *(_DWORD *)(v10 + 4 * v12);
  unsigned int v14 = v11[397] ^ ((v13 & (v8 + 14 * (a5 ^ a3) + 911) | v5 & 0x80000000) >> 1);
  unsigned int *v11 = (v14 + a1 - (a2 & (2 * v14))) ^ *(_DWORD *)(v7 + 4 * (v13 & 1));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v12 != 227) * a4) | a5)))();
}

uint64_t sub_100074868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(_DWORD *)(v24 - 128) = (v20 + 586) ^ (268847287 * ((v24 - 128) ^ 0xFFAA1128));
  *(void *)(v24 - 120) = a20;
  *(void *)(v24 - 112) = v23;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v20 ^ 0x8A7)))(v24 - 128);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((1010
                                              * (((3 * (v20 ^ 0xA0)) ^ (v22 == ((3 * (v20 ^ 0xA0)) ^ 0x32A5ABEB))) & 1)) ^ v20)))(v25);
}

uint64_t sub_100074900@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W8>)
{
  BOOL v7 = *(_DWORD *)(v6 + (v3 + a2) * (uint64_t)a1 + 36) == a3;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((2 * ((v7 ^ ((v4 - 24) ^ (3 * (v4 ^ 0xC3)))) & 1)) & 0xFB | (4 * ((v7 ^ ((v4 - 24) ^ (3 * (v4 ^ 0xC3)))) & 1))) ^ v4)))();
}

uint64_t sub_100074960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v19 - 112) = (v18 - 470) ^ (((((v19 - 136) | 0x5DAE806E) - (v19 - 136) + ((v19 - 136) & 0xA2517F90)) ^ 0x8E0CD264)
                                        * v15);
  *(void *)(v19 - 136) = v17;
  *(void *)(v19 - 120) = a14;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v18 + 811)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((((v14 + *(_DWORD *)(v19 - 128) + 1642) < 0xC2681844)
                                              * (v18 ^ 0x842)) ^ v18)))(v20);
}

uint64_t sub_100074A00()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((4064 * ((((v0 - 1520) ^ (v2 == 1176923396)) & 1) == 0)) ^ v0)))();
}

uint64_t sub_100074A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((25
                                * (((a7 - 18) ^ (v7 < ((a7 - 405836550) & 0x7FF2D7F6 ^ (v8 + 1925)))) & 1)) ^ a7)))();
}

uint64_t sub_100074A9C@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W7>, int a4@<W8>)
{
  unsigned int v10 = a1 + a4 + 1;
  BOOL v11 = v5 < v6;
  *(unsigned char *)(v8 - 0xB999BAB1C512083 + (v4 + a3)) = *(unsigned char *)(STACK[0x4C0]
                                                                            + (a4 - 1949048314));
  if (v11 == v10 < a2 + 1522) {
    BOOL v11 = v10 < v5;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((78 * !v11) ^ (v7 + 169))))();
}

uint64_t sub_100074B20@<X0>(uint64_t a1@<X8>)
{
  BOOL v11 = v6 > v2;
  *(unsigned char *)(a1 + (v8 - 1048981338)) = *(unsigned char *)(v1 + (v8 - 1048981338)) ^ ((v4 ^ 0xDF) * v5) ^ (97 * ((v8 - 90) & 0xF)) ^ *(unsigned char *)(*(void *)(v9 + 8 * (v4 - 1547)) + (((_BYTE)v8 - 90) & 0xF) - 8) ^ *(unsigned char *)(*(void *)(v9 + 8 * (v4 ^ 0x6C1)) + (((_BYTE)v8 - 90) & 0xF) - 12) ^ *(unsigned char *)(*(void *)(v9 + 8 * (v4 ^ 0x6CD)) + (((_BYTE)v8 - 90) & 0xF) - 4) ^ 0x89;
  if (v11 == v8 - 259357589 < v3) {
    BOOL v11 = v8 - 259357589 < v7;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((472 * v11) ^ v4)))();
}

uint64_t sub_100074BEC@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + v3 + a1 - 1) = v7;
  return (*(uint64_t (**)(void))(v6
                              + 8 * (((a2 + v3 < (unint64_t)(7 * ((v2 - 524) ^ v5)) - 14) * v4) ^ (v2 - 524))))();
}

uint64_t sub_100074C28@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8 * (((v1 + 8 == ((a1 - 731) | 0x40) - 70) * (a1 ^ 0x6B8)) ^ a1));
  STACK[0x2A8] = (unint64_t)*(&off_10026C690 + (a1 ^ 0x390)) - 4;
  STACK[0x2A0] = (unint64_t)*(&off_10026C690 + a1 - 665);
  return v3();
}

void sub_100074C30()
{
  STACK[0x328] = *(void *)(v0 + 8 * (v1 - 752));
  JUMPOUT(0x1000ABB28);
}

uint64_t sub_100074C50()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((v2 - 1131453695) < 0x7FFFFFFF)
                                     * (v0 ^ 0x3DA ^ (v0 + 1593065657) & 0xA10BBFFF)) ^ (v0 + 839))))();
}

uint64_t sub_100074CB4()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((1893 * (v1 == v3 + (v2 ^ 0x369) - 71)) ^ (v2 - 743))))();
}

uint64_t sub_100074CE8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v2
                                                    + 8
                                                    * ((11
                                                      * ((((v1 - 1378) | 0x90) ^ 0xB1B068BE)
                                                       + *(_DWORD *)(v3 - 0x6BA7059072F2C1C7) == 0)) ^ (v1 + 697))))(a1, *(void *)(v3 - 0x6BA7059072F2C1D3));
}

void sub_100074D58()
{
}

uint64_t sub_100074D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v68 = STACK[0x4B8];
  STACK[0x420] = *(void *)(v66 + 8 * (v67 - 758));
  LODWORD(STACK[0x240]) = v67 - 845719929;
  STACK[0x508] = a65 + 112;
  STACK[0x318] = v68;
  if (v68) {
    BOOL v69 = v65 == 0;
  }
  else {
    BOOL v69 = 1;
  }
  int v70 = !v69;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v66 + 8 * (((v67 - 810) | 0x280) ^ (8 * v70))))(a1, a2, 1, (__n128)0);
}

uint64_t sub_100074E54(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t, void))(v4
                                                    + 8
                                                    * ((a3 - 1519) | (32
                                                                    * (v3 >= ((a3 - 789683833) & 0x2F1197CF)
                                                                           + ((a3 - 1831) | 0x25u)
                                                                           - 547)))))(a1, 0);
}

uint64_t sub_100074EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52)
{
  return (*(uint64_t (**)(void))(v54
                              + 8
                              * ((((LODWORD(STACK[0x4C8]) ^ v52) != (((v53 ^ 0x40E) + 188) ^ 0xF177C0B2) + a52)
                                * (2 * (v53 ^ 0x40E) - 1040)) ^ v53)))();
}

uint64_t sub_100074EF0@<X0>(int a1@<W4>, int a2@<W6>, int a3@<W8>)
{
  unsigned int v3 = (unint64_t *)STACK[0x3C0];
  STACK[0x260] = STACK[0x220];
  STACK[0x2B0] = *v3;
  return sub_100077D58(a1, a2, a3);
}

uint64_t sub_100074F40(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v25 = 4 * (v21 + v18);
  int v26 = v13 + v22 + (*(_DWORD *)(*(void *)(a10 - 0x5E8E72AB319E4281) + v25) ^ v23);
  *(_DWORD *)(*(void *)(a13 - 0x5E8E72AB319E4281) + v25) = v26 + v23 - (v19 & (2 * v26));
  int v27 = v21 + 1 + v15;
  int v28 = (v20 > a1) ^ (v27 < v14);
  BOOL v29 = v27 < v17;
  if (v28) {
    BOOL v29 = v20 > a1;
  }
  return (*(uint64_t (**)(void))(v24 + 8 * ((2484 * v29) ^ (v16 + 107))))();
}

void sub_10007502C(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  a5 = v6;
  a4 = v7 + 831981571 * (&a3 ^ 0x99A1D024) - 89;
  a3 = a1;
  (*(void (**)(uint64_t *))(v5 + 8 * (v7 ^ 0xF84)))(&a3);
  sub_100079408();
}

uint64_t sub_100075074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v54 = *(void *)(v50 + 24);
  *(int8x16_t *)(v53 - 112) = veorq_s8(*(int8x16_t *)*(void *)(v50 + 16), (int8x16_t)xmmword_10021E910);
  if (v52) {
    BOOL v55 = v54 == 0x5EC77446536A4B76;
  }
  else {
    BOOL v55 = 1;
  }
  int v56 = v55;
  LODWORD(a24) = 2 * v49;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * (int)(((4 * v56) | (16 * v56)) ^ a7)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1000750F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8 * ((2576 * (v7 == ((a7 + 79 * (v8 ^ 0x21C) + 1543) ^ (14 * (v8 ^ 0x283))))) ^ v8)))();
}

uint64_t sub_100075144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12 + 8 * ((107 * (a11 == ((v13 - 85) ^ (v11 + 596)))) ^ v13)))();
}

void sub_100075188()
{
}

uint64_t sub_1000751B8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (a1
                               + 6 * (v6 - a5 - (unint64_t)(a1 - 897) + 955 < 0x20))))();
}

void sub_1000751E8()
{
  uint64_t v0 = (unint64_t *)*(&off_10026C690
                           + ((-113 * (dword_100283B90 ^ 0xEA ^ qword_100283A78)) ^ byte_1002187D0[byte_100214530[(-113 * (dword_100283B90 ^ 0xEA ^ qword_100283A78))] ^ 0x2F])
                           - 64);
  unsigned __int8 v1 = -113 * ((qword_100283A78 - *v0) ^ 0xEA);
  uint64_t v2 = (unint64_t *)*(&off_10026C690 + (aQ5g[(byte_1002113C8[v1 - 8] ^ 0xBB) - 4] ^ v1) - 121);
  unint64_t v3 = *v2 - *v0 - (void)&v8;
  unint64_t v4 = (1932141199 * v3) ^ 0xA437147DE07F15EALL;
  unint64_t v5 = 1932141199 * (v3 ^ 0xA437147DE07F15EALL);
  unint64_t *v0 = v4;
  *uint64_t v2 = v5;
  LOBYTE(v5) = -113 * ((v5 - *(_DWORD *)v0) ^ 0xEA);
  *(_DWORD *)*(&off_10026C690
             + (byte_10021E7E8[(byte_1002189D8[v5 - 8] ^ 0x66) - 8] ^ v5)
             - 47) = -563355418;
  uint64_t v6 = (char *)*(&off_10026C690
               + ((-113 * (dword_100283B90 ^ 0xEA ^ qword_100283A78)) ^ byte_10021E6E0[byte_1002186D0[(-113 * (dword_100283B90 ^ 0xEA ^ qword_100283A78))] ^ 0xB6])
               - 71)
     - 4;
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))&v6[8
                                                      * (byte_100218ADC[(byte_100214830[(-113 * ((*(_DWORD *)v2 - *(_DWORD *)v0) ^ 0xEA))] ^ 0x8C)
                                                                                       - 12] ^ (-113
                                                                                              * ((*(_DWORD *)v2
                                                                                                - *(_DWORD *)v0) ^ 0xEA)))
                                                      + 18152])(512, 1509315540);
  *(void *)*(&off_10026C690
             + (byte_10021E6E0[byte_1002186D0[(-113
                                                                                             * ((*(_DWORD *)v2
                                                                                               + *(_DWORD *)v0) ^ 0xEA))] ^ 0xB6] ^ (-113 * ((*(_DWORD *)v2 + *(_DWORD *)v0) ^ 0xEA)))
             + 40) = v7;
  __asm { BRAA            X8, X17 }
}

void sub_100075454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  *(_DWORD *)(v28 - 192) = (v26 + 2138962936) ^ (69008221
                                               * ((20409577
                                                 - ((v28 - 192) ^ 0xBC004747 | 0x1376CE9)
                                                 + ((v28 - 192) ^ 0xBC004747 | 0xFEC89316)) ^ 0x916A865B));
  (*(void (**)(uint64_t))(v27 + 8 * (v26 + 2056)))(v28 - 192);
  LODWORD(STACK[0x298]) += v26 ^ 0x1A9;
  LOBYTE(STACK[0x18F0]) = 73 * ((~(v28 + 64) & 0x53 | (v28 + 64) & 0xAC) ^ 0x3B) + 94;
  *(void *)(v28 - 184) = a26;
  *(void *)(v28 - 168) = a25;
  *(_DWORD *)(v28 - 160) = (v26 - 68) ^ (1178560073
                                       * ((~(v28 - 192) & 0x3960D353 | (v28 - 192) & 0xC69F2CAC) ^ 0xDE55F13B));
  (*(void (**)(uint64_t))(v27 + 8 * (v26 ^ 0x838)))(v28 - 192);
  LODWORD(STACK[0x4AC]) = *(_DWORD *)(v28 - 192);
  JUMPOUT(0x10006EF94);
}

uint64_t sub_10007558C()
{
  uint64_t v3 = 829 * (v0 ^ 0xF0u);
  int v4 = ((v3 - 1659) & v1)
     - ((((v3 + 4294965637) & v1) << ((v3 - 120) ^ 3)) & (((v3 - 1400) | 0x31) ^ 0x59EAC301))
     - 1393204967;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((204
                                     * (((2 * v4) & 0x4FE5FFA6 ^ 0x49E0C222) + (v4 ^ 0xB079ECA) + 1602052080 == 124805059)) ^ v3)))();
}

uint64_t sub_100075644@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((a1 - 668) | 0x212) ^ (a1 - 1046752231) & 0x3E642BEF ^ 0x8E) * (*v1 == 0)) ^ a1)))();
}

void sub_1000756A0()
{
}

uint64_t sub_100075824()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((4 * (v1 ^ 0x73C) - 292) | 0x10A) ^ 0x14D) * (v0 == 0x3D1A9DC82F89EAE1)) ^ v1)))();
}

uint64_t sub_100075870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int v19 = v16 + 2240514;
  if (v19 <= 0x40) {
    unsigned int v19 = 64;
  }
  uint64_t v20 = (a4 - v14 - v15);
  int v21 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * ((((53 * (v17 ^ 0x6F6) + 1731) ^ ((v17 + 303) | 0x11)) * (v20 + v19 > 0xE)) ^ v17));
  return v21(v21, 64, v20, a4, a5, a6, 2838950915, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_100075904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  *(_DWORD *)(*(void *)(v31 + 96) + 1428) = 136246132;
  return sub_100087A84(995893064, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_100075930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((2 * (a3 == 0)) | (8 * (a3 == 0))) ^ 0x187u)))();
}

uint64_t sub_100075968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12)
{
  *(unsigned char *)(*v15 + (v12 + a6)) = -9;
  unsigned int v16 = v12 - 1412934752 + (v13 ^ 0x602);
  int v17 = (a12 > 0x3268F8F2) ^ (v16 < 0xCD97070D);
  BOOL v18 = v16 < a12 - 845740275;
  if (v17) {
    BOOL v19 = a12 > 0x3268F8F2;
  }
  else {
    BOOL v19 = v18;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((4034 * v19) ^ v13)))();
}

uint64_t sub_1000759E4(uint64_t a1, int8x8_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  *(int8x8_t *)(a6 + v8) = veor_s8(*(int8x8_t *)(a1 + v8), a2);
  return (*(uint64_t (**)(void))(v9 + 8 * (((a5 == 0) * v7) | v6)))();
}

uint64_t sub_100075A18(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(v8 + (v5 ^ v6)) = v10;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 == 0) * a4) ^ v4)))();
}

uint64_t sub_100075A44@<X0>(int a1@<W6>, int a2@<W7>, int a3@<W8>)
{
  *(unsigned char *)(v6 + (v5 + a1 + 684)) = *(unsigned char *)(v4 + (v5 + a1 + 684));
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 - 1 == a3) * ((a2 - 269237861) & 0x100C3DF5 ^ 0x32)) ^ a2)))();
}

uint64_t sub_100075A94(uint64_t a1, uint64_t a2, int a3, unsigned int a4, int a5)
{
  int v12 = (v7 ^ a3) + v5;
  *(_DWORD *)(*v9 + 4 * (v10 + v12)) = *(_DWORD *)(*v9 + 4 * (v6 + v12 + 1703));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v6 + v12 + 1702 < a4) * a5) ^ v8)))();
}

uint64_t sub_100075AA0()
{
  *(_DWORD *)(*(void *)(v4 - 0x5E8E72AB319E4281) + 4 * (v1 + v0 + 870)) = -454905183;
  return (*(uint64_t (**)(void))(v3 + 8 * ((54 * ((v1 + v0 + 869) < 0x7FFFFFFF)) ^ (v2 - 552))))();
}

void sub_100075B08()
{
  *(_DWORD *)(v2 - 120) = v1;
  *(_DWORD *)(v2 - 128) = v0;
  *(_DWORD *)(v2 - 136) = v0 & 0xFFFFFFF8;
  JUMPOUT(0x100075B60);
}

uint64_t sub_100075C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((22 * (v7 == a7 + ((v8 - 687) ^ (a5 + 370)) + 5)) ^ v8)))();
}

uint64_t sub_100075C68@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  BOOL v8 = a1 + 67212571 < (a6 + 224194813);
  if ((a6 + 224194813) < 0xEC975FD != (a1 + 67212571) < 0xEC975FD) {
    BOOL v8 = (a6 + 224194813) < 0xEC975FD;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((!v8 * (((v7 - 142) | 0x32) + 67)) ^ v7)))();
}

uint64_t sub_100075CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((83 * ((v8 ^ 0x11u) < a8 + a6 + (v9 ^ 0x75Fu) - 767 - 38)) ^ v9)))();
}

uint64_t sub_100075D18()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((4 * (v1 + 1 == v2 + 4)) | (16 * (v1 + 1 == v2 + 4)) | v0)))();
}

uint64_t sub_100075DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16, uint64_t a17, uint64_t a18, void *a19)
{
  uint64_t v25 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * (v24 ^ ((v23 > a16) * v20)));
  return v25(*(_DWORD *)(*a19 + 4 * (v21 - 1970106864)) ^ v19, a2, a3, a4, a5, v25, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_100075E14@<X0>(int a1@<W0>, int a2@<W8>)
{
  v7.i64[0] = 0x7777777777777777;
  v7.i64[1] = 0x7777777777777777;
  uint64_t v8 = (a1 + a2);
  int8x16_t v9 = *(int8x16_t *)(v3 + v8 - 15);
  int8x16_t v10 = *(int8x16_t *)(v3 + v8 - 31);
  uint64_t v11 = v5 + v8;
  *(int8x16_t *)(v11 - 15) = veorq_s8(v9, v7);
  *(int8x16_t *)(v11 - 31) = veorq_s8(v10, v7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((2840 * (((v2 + 1904) | 0xC) - 2173 == (v4 & 0xFFFFFFE0))) ^ (v2 + 571))))();
}

uint64_t sub_100075E7C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((620
                                * ((((2 * v2) ^ 0x138 ^ (v1 + v2 + 16 - 1263)) & (2
                                                                                * (*(unsigned __int8 *)(v3 + 3) - 134)))
                                 + ((*(unsigned __int8 *)(v3 + 3) - 134) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_100075ECC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((496
                                * (*(_DWORD *)(v1 + 48 * v0 + 36)
                                 + 706715346
                                 + ((v2 - v4 + 16) ^ (v5 - 762)) >= 0x80000004)) ^ v2)))();
}

uint64_t sub_100075F30(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((((((((v2 - 86) | 6) ^ 0x114) + 212) ^ 0xCF) == 32)
                                              * ((13 * (((v2 - 86) | 6) ^ 0x114)) ^ 0x4CE)) ^ ((v2 - 86) | 6))))(a1);
}

uint64_t sub_100075FC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((582 * (a1 + 1 == v2 + 32)) ^ v1)))();
}

uint64_t sub_100076098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v61 = (v57 - 927) | 0x23;
  int v62 = 1543737703 * ((v58 + 742264651 - 2 * (v58 & 0x2C3E0F4B)) ^ 0x52CA5F37);
  *(void *)(v60 - 176) = 0x4455824F020409ECLL;
  *(_DWORD *)(v60 - 192) = v61 - v62 + 161;
  *(_DWORD *)(v60 - 184) = v62 ^ 0xE86D67F5;
  *(void *)(v60 - 168) = a56;
  *(void *)(v60 - 160) = a57;
  uint64_t v63 = (*(uint64_t (**)(uint64_t))(v59 + 8 * (v61 + 2154)))(v60 - 192);
  return (*(uint64_t (**)(uint64_t))(v59
                                            + 8
                                            * (((*(_DWORD *)(v60 - 188) != -563355418) * ((v61 ^ 0x110) - 34)) ^ v61)))(v63);
}

uint64_t sub_100076188()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (int)(((((v2 + 1634160838) & 0x9E98ADFF) - 71) * (v0 == 1730576771)) ^ v2)))();
}

uint64_t sub_1000761D8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  *a4 = 0;
  *a5 = 0;
  a14 = 1178560073 * ((&a13 & 0xFB2A6C05 | ~(&a13 | 0xFB2A6C05)) ^ 0xE3E0B192) - 504207030;
  uint64_t v17 = (*(uint64_t (**)(int *))(v15 + 18936))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((1808 * (a13 == v16)) ^ v14)))(v17);
}

uint64_t sub_10007626C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((19 * (v3 - 1 + ((739 * (v2 ^ 0x584)) ^ (v1 + 1217)) >= 0)) ^ v2)))();
}

uint64_t sub_1000762B0@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 - 3 + (v4 + v3)) = *(_DWORD *)(v2 - 3 + (v4 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 == 4) * ((a1 ^ 0x347) - 123)) ^ (a1 + 961))))();
}

uint64_t sub_1000762FC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((83 * (*(_DWORD *)(v2 - 0x6BA7059072F2C1C3) == v0 + 218022627 + ((v0 + 1210) | 0x24))) ^ v0)))();
}

uint64_t sub_10007634C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((458 * (((v0 + 980) ^ (v2 - 1198)) + v1 < 0x7FFFFFFF)) ^ v0)))();
}

uint64_t sub_100076384()
{
  *(void *)(v3 - 112) = *(void *)(v5 + 16);
  *(void *)(v3 - 128) = v2;
  *(_DWORD *)(v3 - 120) = v0
                        + 831981571 * ((((v3 - 128) | 0x955F512A) - (v3 - 128) + ((v3 - 128) & 0x6AA0AED0)) ^ 0xCFE810E)
                        + 181;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0xCB2)))(v3 - 128);
}

uint64_t sub_100076440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23)
{
  *(void *)(&a23 + v25 - 301084339) = 0x7777777777777777;
  return (*(uint64_t (**)(void))(v26
                              + 8
                              * ((((((v24 ^ 0x7Bu) - 195) & v23) != 8) * (((v24 ^ 0x7B) + 315) ^ 0x18D)) ^ v24 ^ 0x7B)))();
}

uint64_t sub_1000764A4()
{
  (*(void (**)(void))(v0 + 8 * (v1 + 1607)))();
  return (*(uint64_t (**)(void))(v0 + 8 * (((2 * (STACK[0x4A0] != 0)) | (4 * (STACK[0x4A0] != 0))) ^ (v1 + 196))))();
}

uint64_t sub_1000764DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v12 + 8 * ((958 * (a10 == ((v10 + 358) ^ (v11 + 452)))) ^ v10)))();
}

uint64_t sub_10007650C@<X0>(unsigned int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v7 = v5 + ((a1 + 1287) ^ (v3 + 2678));
  long long v8 = *(_OWORD *)(a2 + v7 - 15);
  long long v9 = *(_OWORD *)(a2 + v7 - 31);
  uint64_t v10 = v2 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((216 * ((v4 & 0xFFFFFFE0) == 32)) ^ a1)))();
}

uint64_t sub_100076560@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v55 = a1 ^ 0x1D;
  unsigned __int8 v56 = 7 * (a1 ^ 0x3B);
  int v57 = a1 ^ 0x10D;
  int v58 = 1543737703 * (((v50 | 0x173579D6) - (v50 & 0x173579D6)) ^ 0x69C129AA);
  *(void *)(v54 - 168) = a49;
  *(void *)(v54 - 160) = a50;
  *(void *)(v54 - 176) = v51;
  *(_DWORD *)(v54 - 192) = v55 - v58 + 161;
  *(_DWORD *)(v54 - 184) = v58 ^ 0xE86D67F7;
  uint64_t v59 = (*(uint64_t (**)(uint64_t))(v52 + 8 * (v55 + 2154)))(v54 - 192);
  return (*(uint64_t (**)(uint64_t))(v52
                                            + 8
                                            * ((29 * ((v56 ^ (*(_DWORD *)(v54 - 188) == v53 + v57 - 63)) & 1)) ^ v55)))(v59);
}

uint64_t sub_100076634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t (*a52)(void))
{
  STACK[0x350] = v52;
  STACK[0x490] = STACK[0x2C0];
  return a52();
}

void sub_10007665C()
{
}

uint64_t sub_100076668@<X0>(int a1@<W8>)
{
  unint64_t v4 = 460628867 * ((~(v3 - 160) & 0x21D797604EF5C5DELL | (v3 - 160) & 0xDE28689FB10A3A21) ^ 0x6348DA0E026347A3);
  *(_DWORD *)(v3 - 140) = a1 - 1387236649 + v4;
  *(void *)(v3 - 136) = 1135309898 - v4;
  *(_DWORD *)(v3 - 128) = v4;
  *(_DWORD *)(v3 - 124) = ((a1 - 1387236649) ^ 0xF3) - v4;
  *(_DWORD *)(v3 - 144) = a1 - 1387236649 - v4 + 142;
  *(_DWORD *)(v3 - 152) = (a1 - 1689051559) ^ v4;
  *(void *)(v3 - 160) = v1 ^ v4;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 2366)))(v3 - 160);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 148)))(v5);
}

uint64_t sub_100076738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)((a7 + 89408598) & 0xFAABBDFF ^ (2
                                                                    * (((((a7 + 89408598) & 0xFAABBDFF) + v7) ^ a6) >> 31)))))();
}

void sub_10007678C()
{
}

uint64_t sub_100076810()
{
  STACK[0x288] = v0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((1908 * (v2 == ((v3 - 741) ^ (v4 - 55)))) ^ (v3 - 751))))();
}

uint64_t sub_100076848()
{
  int v5 = 6 * (v4 ^ 0x221);
  unsigned int v13 = v4 - 944348131 * ((&v11 + 1244961591 - 2 * (&v11 & 0x4A349B37)) ^ 0xE92D3F79) - 248;
  int v11 = &STACK[0x5F548590D8AA6311];
  uint64_t v12 = v10;
  (*(void (**)(unint64_t **))(v1 + 8 * (v4 ^ 0xBA9u)))(&v11);
  LODWORD(v12) = v4
               - 241568881 * (((&v11 | 0xD00DEA05) - (&v11 & 0xD00DEA05)) ^ 0x61CEE47)
               - 82;
  int v11 = v10;
  (*(void (**)(unint64_t **))(v1 + 8 * (v4 ^ 0xB5Eu)))(&v11);
  if (HIDWORD(v12) == (v5 ^ (v2 + 1068))) {
    int v6 = v8;
  }
  else {
    int v6 = HIDWORD(v12);
  }
  uint64_t v12 = v10;
  LODWORD(v11) = (v4 - 554) ^ (((2 * (&v11 & 0x181C2120) - &v11 - 404496677) ^ 0x34418CD1)
                             * v3);
  (*(void (**)(unint64_t **))(v1 + 8 * (v4 ^ 0xBC0u)))(&v11);
  uint64_t v12 = v9;
  LODWORD(v11) = (v5 - 1343) ^ (((&v11 & 0xF2CCF7CB | ~(&v11 | 0xF2CCF7CB)) ^ 0xDE915A3E)
                              * v3);
  uint64_t result = (*(uint64_t (**)(unint64_t **))(v1 + 8 * (v5 ^ 0xCEB)))(&v11);
  *(_DWORD *)(v0 + 4) = v6;
  return result;
}

uint64_t sub_100076A3C(int a1)
{
  int v4 = v3 + 1846618888 + ((23 * (a1 ^ 0x455)) ^ 0x6A);
  int v5 = (v1 > 0xE509994) ^ (v4 < -240163221);
  BOOL v6 = v4 < (int)(v1 + 1907320427);
  if (v5) {
    BOOL v6 = v1 > 0xE509994;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((252 * v6) ^ a1)))();
}

uint64_t sub_100076AC0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v24 = a1 ^ 0x149;
  _DWORD *v20 = a20 + 1;
  unsigned int v25 = 69008221 * ((-1144326816 - (v22 | 0xBBCAF560) + a8) ^ 0x97975895);
  *(_DWORD *)(v23 - 148) = v25 ^ 1;
  *(_DWORD *)(v23 - 136) = ((v24 + 731903356) | 0x1A) - v25;
  *(_DWORD *)(v23 - 120) = v25 + v24 + 731903356 + 88;
  *(_DWORD *)(v23 - 116) = v24 + 731903356 - v25;
  *(_DWORD *)(v23 - 112) = v25 + v24 + 2104631361;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v24 ^ 0xD56)))(v23 - 152);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * *(int *)(v23 - 152)))(v26);
}

uint64_t sub_100076BA8()
{
  uint64_t v0 = (uint64_t)*(&off_10026C690
                + ((-113 * ((qword_100283A78 + dword_100283B28) ^ 0xEA)) ^ byte_100214730[byte_1002113C0[(-113 * ((qword_100283A78 + dword_100283B28) ^ 0xEA))] ^ 0xBB])
                - 114);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = *(&off_10026C690
       + ((-113 * ((qword_100283A78 + v1) ^ 0xEA)) ^ byte_10021E6E0[byte_1002186D0[(-113 * ((qword_100283A78 + v1) ^ 0xEA))] ^ 0x48])
       - 19);
  uint64_t v3 = v1 - (void)&v6 + *v2;
  *(void *)(v0 - 4) = (1932141199 * v3) ^ 0xA437147DE07F15EALL;
  *uint64_t v2 = 1932141199 * (v3 ^ 0xA437147DE07F15EALL);
  unsigned int v8 = (3804331
      * (((&v7 | 0x175DD214) - &v7 + (&v7 & 0xE8A22DE8)) ^ 0x6988F7E2)) ^ 0x203;
  LOBYTE(v3) = -113 * ((*(_DWORD *)v2 - *(_DWORD *)(v0 - 4)) ^ 0xEA);
  long long v9 = (char *)*(&off_10026C690
               + (byte_10021E7E8[(byte_1002189D8[v3 - 8] ^ 0x9D) - 8] ^ v3)
               - 47);
  int v4 = (char *)*(&off_10026C690
               + ((-113 * (dword_100283B28 ^ 0xEA ^ qword_100283A78)) ^ byte_10021E6E0[byte_1002186D0[(-113 * (dword_100283B28 ^ 0xEA ^ qword_100283A78))] ^ 0x48])
               - 21)
     - 4;
  (*(void (**)(unsigned int *))&v4[8
                                            * (byte_100214730[byte_1002113C0[(-113 * (*(unsigned char *)(v0 - 4) ^ 0xEA ^ *(unsigned char *)v2))] ^ 0xBB] ^ (-113 * (*(unsigned char *)(v0 - 4) ^ 0xEA ^ *(unsigned char *)v2)))
                                            + 17752])(&v7);
  long long v9 = (char *)*(&off_10026C690
               + (byte_100218ADC[(byte_100214830[(-113
                                                                                  * ((*(_DWORD *)v2 - *(_DWORD *)(v0 - 4)) ^ 0xEA))] ^ 0x8C)
                                                - 12] ^ (-113 * ((*(_DWORD *)v2 - *(_DWORD *)(v0 - 4)) ^ 0xEA)))
               - 95)
     - 4;
  unsigned int v8 = (3804331 * ((1141020232 - (&v7 | 0x44029648) + (&v7 | 0xBBFD69B7)) ^ 0xC5284C41)) ^ 0x203;
  (*(void (**)(unsigned int *))&v4[8
                                            * ((-113 * ((*(_DWORD *)v2 - *(_DWORD *)(v0 - 4)) ^ 0xEA)) ^ byte_100214730[byte_1002113C0[(-113 * ((*(_DWORD *)v2 - *(_DWORD *)(v0 - 4)) ^ 0xEA))] ^ 0x85])
                                            + 18968])(&v7);
  unsigned int v7 = 1408 - 1178560073 * ((((2 * &v7) | 0x784A44C) - &v7 + 2084416986) ^ 0x64F7704E);
  LOBYTE(v8) = (73 * ((((2 * &v7) | 0x4C) - &v7 - 38) ^ 0x4E)) ^ 0x39;
  return (*(uint64_t (**)(unsigned int *))&v4[8
                                                      * ((-113
                                                                         * ((*(_DWORD *)v2 - *(_DWORD *)(v0 - 4)) ^ 0xEA)) ^ byte_100214730[byte_1002113C0[(-113 * ((*(_DWORD *)v2 - *(_DWORD *)(v0 - 4)) ^ 0xEA))] ^ 0x5A])
                                                      + 18208])(&v7);
}

void sub_100076F70(uint64_t a1)
{
  int v1 = 831981571 * ((-2 - ((~a1 | 0xF33FFBC4) + (a1 | 0xCC0043B))) ^ 0x6A9E2BE0);
  int v2 = *(_DWORD *)(a1 + 8) + v1;
  int v3 = (unsigned __int16)(*(_WORD *)(a1 + 12) + v1);
  BOOL v5 = *(void *)a1 != 0x3BD3A467C7BE8E49 && v3 != 10373;
  __asm { BRAA            X8, X17 }
}

void sub_10007704C()
{
  STACK[0x420] = *(void *)(v1 + 8 * (v0 - 728));
  JUMPOUT(0x100074E28);
}

uint64_t sub_100077084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  unint64_t v63 = STACK[0x4E8];
  int v64 = 2078219279 * ((v62 - 192 - 2 * ((v62 - 192) & 0x177082E3) + 393249507) ^ 0xCD8A1497);
  *(_DWORD *)(v62 - 132) = v64
                         + (LODWORD(STACK[0x39C]) ^ 0xF79DFDDF)
                         + ((v61 - 281283845 + ((v61 - 14210805) & 0xD8D6DF)) & (2 * LODWORD(STACK[0x39C])))
                         + 1576004464;
  *(_DWORD *)(v62 - 128) = v64 + v61 - 408;
  *(void *)(v62 - 184) = v63;
  *(void *)(v62 - 176) = a58;
  *(void *)(v62 - 160) = a27;
  LOBYTE(STACK[0x1918]) = 15 * ((v62 + 64 - 2 * ((v62 + 64) & 0xE3) - 29) ^ 0x97) - 68;
  *(void *)(v62 - 144) = a47;
  *(_DWORD *)(v62 - 152) = (v59 + 499745704) ^ v64;
  *(void *)(v62 - 192) = a59;
  uint64_t v65 = (*(uint64_t (**)(uint64_t))(v60 + 8 * (v61 ^ 0xDDE)))(v62 - 192);
  int v66 = *(_DWORD *)(v62 - 168);
  LODWORD(STACK[0x4AC]) = v66;
  return (*(uint64_t (**)(uint64_t))(v60 + 8 * ((31 * (v66 == -563355418)) ^ v61)))(v65);
}

uint64_t sub_1000771A8(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((2366 * ((v1 + 21 + v2) < 0x28)) ^ (6 * (a1 ^ 0x7AC)))))();
}

uint64_t sub_100077268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(unsigned char *)(a1 + v7 + a6 + ((v6 - 824759313) & 0x3128D4FFu)) = *(unsigned char *)(v8
                                                                         + v7
                                                                         + a6
                                                                         + ((v6 - 824759313) & 0x3128D4FFu));
  return (*(uint64_t (**)(void))(v9 + 8 * ((62 * (v7 == 861224210)) ^ (v6 + 1308))))();
}

uint64_t sub_1000772C0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(v1 ^ (2 * ((v0 >> v3) & 1)))))();
}

uint64_t sub_1000772E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  BOOL v15 = a12 == (v12 ^ 0x838 ^ (v14 + 1932));
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * (((4 * ((((v12 - 699090896) ^ v15) & 1) == 0)) & 0xEF | (16
                                                                                       * (((v12 + 48) ^ ~v15) & 1))) ^ v12)))();
}

uint64_t sub_100077330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,unint64_t a62)
{
  int v65 = *(_DWORD *)(v64 + 1428);
  if (v65 == 136246120 || v65 == 136246116) {
    return (*(uint64_t (**)(void))(v63
  }
                                + 8
                                * ((55
                                  * (((*(_DWORD *)(a5 + 476) == 1054301366) ^ (LODWORD(STACK[0x2D4]) - 1)) & 1)) ^ (LODWORD(STACK[0x2D4]) - 85))))();
  STACK[0x508] = a62;
  return v62(a1, a2, a3, 707, a4, 152);
}

uint64_t sub_10007744C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * ((1345 * (v7 + 1 == v8 + 24)) ^ v6)))(a6);
}

uint64_t sub_10007750C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v15 = v13 - 262639726;
  int v16 = v11 - 261;
  *(_DWORD *)(a9 + 4 * (v10 + a1 + v9)) = *(_DWORD *)(*(void *)(v12 - 0x5E8E72AB319E4281) + 4 * (v10 + a1 + v9));
  BOOL v18 = v9 - 491210222 < 1884843922 && v9 - 491210222 >= v15;
  return (*(uint64_t (**)(void))(v14 + 8 * ((27 * v18) ^ v16)))();
}

uint64_t sub_100077588(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((157 * ((((v1 ^ 0x7B5) + v1 - 541 - 1428) & a1) == 0)) ^ v1)))();
}

uint64_t sub_1000775C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * ((37 * (((((v8 ^ 0x3AC) - 778) | 0x446) ^ ((v8 ^ 0x3AC) - 1084237739) & 0x79FEEFE2 ^ 0xE7352FE2) == -563355418)) ^ v8 ^ 0x3AC)))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10007763C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((37 * (v0 != ((46 * (v1 ^ 0x552u)) ^ 0x293E9C4C918FD589))) ^ v1)))();
}

uint64_t sub_100077684@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((112 * (((((v2 ^ 0x65F) - 324) ^ ((unint64_t)(v1 - a1) < 0x20)) & 1) == 0)) ^ v2)))();
}

uint64_t sub_1000776C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  a16 = v17
      + 1178560073 * ((((2 * &a15) | 0x40AB890A) - &a15 + 1604991867) ^ 0x4760E6ED)
      - 504208157;
  uint64_t v18 = (*(uint64_t (**)(int *))(v16 + 8 * (v17 + 1240)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((924 * (a15 == ((v17 + 1742664595) & 0x67C34FB7 ^ 0xB9A9A754))) ^ v17)))(v18);
}

uint64_t sub_100077768(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,_DWORD *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  *a27 = a38 + 1;
  uint64_t v42 = *v39;
  uint64_t v43 = 69008221 * ((v41 - 144) ^ 0x529C46E3D3A2520ALL);
  *(void *)(v41 - 136) = v43 + 5119;
  *(_DWORD *)(v41 - 140) = v43 | 1;
  *(void *)(v41 - 120) = v42 - v43;
  *(_DWORD *)(v41 - 104) = v43 + v38 + 764300735;
  *(_DWORD *)(v41 - 112) = v43 + v38 - 299939364 + 139;
  *(_DWORD *)(v41 - 108) = v38 - 299939364 - v43;
  *(_DWORD *)(v41 - 128) = ((v38 - 299939364) ^ 1) - v43;
  uint64_t v44 = (*(uint64_t (**)(uint64_t))(v40 + 8 * (v38 ^ (a1 + 2381))))(v41 - 144);
  return (*(uint64_t (**)(uint64_t))(v40 + 8 * *(int *)(v41 - 144)))(v44);
}

uint64_t sub_10007782C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((460 * (((v5 < 0x20) ^ (v6 + (a4 ^ 0x8A) + v4 - 1)) & 1)) ^ a4 ^ 0xE8A)))();
}

void sub_100077878(int a1@<W8>, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  unsigned int v11 = (((&a3 | 0x2E438E06) - (&a3 & 0x2E438E06)) ^ 0x5096ABF0) * v7;
  a6 = 0x5267DA57ABB8ED88;
  a7 = (v8 - 36) ^ v11;
  a3 = v9;
  a4 = v11 ^ a1;
  a5 = v11 ^ 0x4CDE25C;
  (*(void (**)(uint64_t *))(v10 + 8 * (v8 + 2132)))(&a3);
  sub_100096928();
}

uint64_t sub_1000778FC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((v3 + ((v1 + 1031731113) ^ 0x3D7EF909) + ((v1 + 1031731113) & 0xFBDFCF4E) - 1487)
                                     * (a1 != 0)) ^ v1)))();
}

uint64_t sub_100077944@<X0>(uint64_t a1@<X2>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  int v38 = v33 ^ 0x512;
  *(unsigned char *)(a2 + (v34 + v36 + v38)) = a33;
  *(unsigned char *)(a2 + (v35 + a3 + 68)) = *(unsigned char *)(a1 + (v38 ^ 0xB2C05473) + 1296017610);
  return (*(uint64_t (**)(uint64_t))(v37 + 8 * (v38 ^ 0x77D)))(2998948537);
}

uint64_t sub_1000779D4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v4
                                                    + 8
                                                    * ((1426
                                                      * ((((((a2 ^ 0x3D0) - 211) | 0x88) ^ 0x180) & v2) == (((a2 ^ 0x3D0) - 18) | 0x20C) - 989)) ^ a2 ^ 0x3D0)))(a1, (v3 - a1));
}

void sub_100077A24()
{
}

uint64_t sub_100077A98()
{
  BOOL v6 = (*(_DWORD *)(v2 + 24) ^ v0) - 290499045 > 0xFFFFFFBE
    || (*(_DWORD *)(v3 - 0x6BA7059072F2C1BFLL) & ((v1 + 10) ^ 0x1CD)) != ((v1 - 322) | 0x14C) - 460;
  return (*(uint64_t (**)(void))(v4 + 8 * (v6 ^ v1)))();
}

uint64_t sub_100077B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(void *)(&a25 + v27 + (v25 ^ 0x7C2u ^ (unint64_t)(a2 - 310))) = 0x7777777777777777;
  return (*(uint64_t (**)(void))(v28 + 8 * ((392 * ((v26 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ v25)))();
}

uint64_t sub_100077B64@<X0>(int a1@<W0>, uint64_t a2@<X3>, unint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  unint64_t v26 = ((v24 >> ((a1 + 29) & 0xBF ^ 0x8Fu)) ^ a2) + HIDWORD(a3) + (*(_DWORD *)(a22 + a8) ^ v22);
  *(_DWORD *)(a22 + 4 * a9) = v26 + v22 - ((v23 + a1 + 483 - 949) & (2 * v26));
  *(_DWORD *)(a22 + a8) = HIDWORD(v26) + v22 - ((2 * HIDWORD(v26)) & 0x49C56542);
  BOOL v28 = a18 + 328885511 > 151508725 || a18 + 328885511 < a14;
  return (*(uint64_t (**)(void))(v25 + 8 * (a1 ^ (2326 * v28))))();
}

uint64_t sub_100077C28()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v0 - 455) | 5) + 421 * (v0 ^ 0x653) - 1532) * (v2 == v1)) ^ v0)))();
}

void sub_100077C68(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  a6 = v8 + 1224239923 * ((2 * (&a3 & 0x28F022A0) - &a3 - 686826150) ^ 0x25BC208D) - 1370;
  a4 = v7;
  a5 = a1;
  a3 = v7;
  (*(void (**)(uint64_t *))(v6 + 8 * (v8 ^ 0xF7Au)))(&a3);
  sub_100079408();
}

uint64_t sub_100077CD0@<X0>(int a1@<W0>, int a2@<W8>)
{
  *(void *)(v2 + 1516) = v3;
  *(void *)(v2 + 1524) = v3;
  *(_DWORD *)(v2 + 1532) = a1;
  *(void *)(v4 + 96) = v2;
  *(_DWORD *)(v2 + 476) = 1054301366;
  STACK[0x2B0] = STACK[0x318];
  unint64_t v6 = STACK[0x508];
  unint64_t v7 = v5 + STACK[0x508] + ((a2 + 1745) ^ 0xD3D0C9B05DB3A80ELL);
  STACK[0x288] = STACK[0x508];
  STACK[0x250] = v6 + 432;
  STACK[0x2B8] = v7;
  STACK[0x260] = v4;
  return sub_100077D58(48);
}

uint64_t sub_100077D58@<X0>(int a1@<W4>, int a2@<W6>, int a3@<W8>)
{
  STACK[0x2A8] = *(void *)(v5 + 8 * a3);
  STACK[0x508] = STACK[0x250];
  LODWORD(STACK[0x448]) = -405001058;
  LODWORD(STACK[0x528]) = 1704253533;
  STACK[0x480] = 0;
  LODWORD(STACK[0x324]) = 935020333;
  unint64_t v6 = (_DWORD *)STACK[0x2B8];
  *unint64_t v6 = a1;
  LODWORD(STACK[0x2A0]) = v4 + 1464086843;
  LODWORD(STACK[0x2C0]) = v4 - 639570007;
  LODWORD(STACK[0x2C8]) = (v3 ^ 0x69B) + v4 + 436168605;
  LODWORD(STACK[0x290]) = v4 - 1645259736;
  LODWORD(STACK[0x298]) = v4 - 197422033;
  BOOL v8 = *v6 != a1 || a2 + 1 != ((77 * (v3 ^ 0x6FE)) ^ (a2 + 487));
  return (*(uint64_t (**)(void))(v5 + 8 * ((1690 * v8) ^ v3 ^ 0x69B)))();
}

uint64_t sub_100077E4C@<X0>(int a1@<W1>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 ^ 0x15E) - 807) * (a2 == a1)) | v2)))();
}

void sub_100077E8C()
{
  *(_DWORD *)(v0 - 0x6BA7059072F2C1BBLL) = 563395378;
  sub_1000A6498();
}

uint64_t sub_100077EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a13 = &STACK[0x55D5CC6D86BC0F2F];
  a14 = (831981571 * (&a13 ^ 0x99A1D024)) ^ 0x8F;
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v15 + 18816))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((1453 * (a15 == ((v16 + 449) ^ 0x241))) ^ 0x3F7)))(v17);
}

uint64_t sub_100077F44(uint64_t a1, uint64_t a2)
{
  if (**(unsigned char **)(a2 + 8)) {
    char v2 = 82;
  }
  else {
    char v2 = 80;
  }
  *(unsigned char *)(a1 + 88) = ((**(unsigned char **)(a2 + 8) != 0) ^ 0xF3) + v2;
  return 0;
}

uint64_t sub_1000780AC()
{
  return v1 ^ v0;
}

void sub_1000780EC(_DWORD *a1)
{
  unsigned int v1 = *a1 + 1543737703 * (a1 ^ 0x7EF4507C);
  v3[1] = v1
        + 1178560073 * (((~v3 & 0x39D0C9BC) - (~v3 | 0x39D0C9BD)) ^ 0xDEE5EBD5)
        - 504208554;
  char v2 = (char *)*(&off_10026C690 + (int)(v1 ^ 0x5C9)) - 4;
  (*(void (**)(_DWORD *))&v2[8 * (v1 + 843)])(v3);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000781EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((509 * (a14 + v15 - (unint64_t)(((1219 - v17) ^ 0x8FB74639) + v14) < 0x10)) ^ 0x8FAu)))();
}

uint64_t sub_10007823C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((61 * (((STACK[0x380] == 0) ^ (((v0 + 113) | 0x2C) - 83)) & 1)) ^ (((v0 + 113) | 0x22C) + 669))))();
}

uint64_t sub_100078284()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((239 * ((((v1 ^ 0x31B) - 1134) & v0) == ((v1 - 779) ^ 0x35A3A60))) ^ v1)))();
}

uint64_t sub_1000782C8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((247 * ((a6 + 1 + v6) > 0x2F)) ^ a2)))();
}

uint64_t sub_1000783A0@<X0>(unsigned int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, int a7@<W8>)
{
  BOOL v12 = a3 < a1;
  *(unsigned char *)(a6 + (v7 + v9)) = *(unsigned char *)(v10 + (v8 + a4))
                                           - ((2 * *(unsigned char *)(v10 + (v8 + a4))) & 0xEF)
                                           + 119;
  if (v12 == v8 + a2 < a1) {
    BOOL v12 = v8 + a2 < a3;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((v12 * a5) ^ a7)))();
}

uint64_t sub_100078414@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v6 + v4)) = *(unsigned char *)(v3 + (v6 + v4));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v6 - 1 == v2) * v5) ^ v7)))(0);
}

uint64_t sub_100078444@<X0>(uint64_t a1@<X4>, uint64_t a2@<X7>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (a3 - 1199300153)) = *(unsigned char *)(a2 + (v5 - 1349855228));
  return (*(uint64_t (**)(void))(v7 + 8 * (((3 * (v4 ^ 0x4A7) + 639) * ((v6 + v3 + 1263) < 4)) ^ v4)))();
}

uint64_t sub_1000784A0()
{
  int v4 = (v3 - 1270) | 0x284;
  unsigned int v12 = v3
      - 944348131 * ((((2 * &v10) | 0xFE58FDAA) - &v10 - 2133622485) ^ 0xDC35DA9B)
      - 793;
  uint64_t v10 = &STACK[0x5F548590D8AA6329];
  uint64_t v11 = v7;
  (*(void (**)(unint64_t **))(v1 + 8 * (v3 + 1142)))(&v10);
  LODWORD(v11) = v3 - 241568881 * (&v10 ^ 0xD6110442) - 627;
  uint64_t v10 = v7;
  (*(void (**)(unint64_t **))(v1 + 8 * (v3 ^ 0xC81u)))(&v10);
  if (HIDWORD(v11) == (v4 ^ (v0 + 386))) {
    int v5 = v9;
  }
  else {
    int v5 = HIDWORD(v11);
  }
  LODWORD(v10) = (v3 - 1099) ^ (((((&v10 | 0x239FE8D4) ^ 0xFFFFFFFE) - (~&v10 | 0xDC60172B)) ^ 0xFC24521)
                              * v2);
  uint64_t v11 = v7;
  (*(void (**)(unint64_t **))(v1 + 8 * (v3 ^ 0xC1Fu)))(&v10);
  LODWORD(v10) = (v4 - 473) ^ (((((&v10 | 0x7CEACA56) ^ 0xFFFFFFFE) - (~&v10 | 0x831535A9)) ^ 0x50B767A3)
                             * v2);
  uint64_t v11 = v8;
  (*(void (**)(unint64_t **))(v1 + 8 * (v4 + 1681)))(&v10);
  return v5 ^ v0;
}

uint64_t sub_10007866C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ (1651 * (v0 > 1)))))();
}

void OsjTR(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000786EC()
{
  return sub_1000859E0();
}

uint64_t sub_10007870C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(_DWORD *)(v22 - 188) = v21
                         - 1178560073 * ((((v22 - 192) | 0xC410A109) + (~(v22 - 192) | 0x3BEF5EF6)) ^ 0x23258360)
                         + 1064656144;
  (*(void (**)(uint64_t))(v20 + 8 * (v21 ^ 0xB5F)))(v22 - 192);
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8 * (v21 ^ 0xBB5)))(336, 1777295586);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * (((v23 == 0) * (((v21 - 162) ^ 0x2AF) - 810)) | v21)))(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_1000787C8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 == 0) ^ (a1 - 88)) & 1) * ((a1 - 291) ^ 0x2F)) ^ a1)))();
}

uint64_t sub_100078804@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  *(void *)(*a1 - 0x4B3FB627E137F32ALL) = 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((1869 * (*a2 == v3)) ^ (v4 - 1852))))();
}

uint64_t sub_100078848()
{
  return (*(uint64_t (**)(void))(v1
                                           + 8
                                           * ((11
                                             * (((((v0 - 576) ^ 0x9A6B25C2) + LODWORD(STACK[0x528])) ^ 0xFBDB3B9BFFFDFD7DLL)
                                              + 0x424C464DA44652FLL
                                              + ((2 * (((v0 - 576) ^ 0x9A6B25C2) + LODWORD(STACK[0x528]))) & 0x1FFFBFAFALL) != 3661783724)) ^ v0)))(v0 ^ 0x4C3u);
}

uint64_t sub_1000788E0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((*(_DWORD *)(v9 + v10 * (uint64_t)a1 + 32) == a7)
                                * (v7 - 640 + ((2 * v7) ^ 0x5A6) - 186)) ^ v7)))();
}

uint64_t sub_100078918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  unsigned int v10 = v8 + ((a6 - 1300) | 0x130) + 201325895;
  if (v10 <= 0x40) {
    unsigned int v10 = 64;
  }
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((53 * (-v7 - v6 + ((a6 + 1266150966) & 0xFFEFFBF3) - 1466430271 + v10 < 0xF)) ^ a6)))();
}

uint64_t sub_1000789B0(int a1)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((v4 & ~(((v1 ^ 0x79F) * v2 - 1756) ^ (*(_DWORD *)(v6 + 1424) == (((v1 ^ 0x79F) * v2
                                                                                                  - 1756) | v3)
                                                                                                + 278073191)))
                                * a1) ^ ((v1 ^ 0x79F) * v2))))();
}

void sub_1000789FC(int a1@<W8>)
{
  BOOL v7 = *(_DWORD *)(*v4 + 4 * (v2 + a1 + 1)) == v3;
  *uint64_t v6 = (v2 + 3 * (v5 ^ 0x5EC) + a1 - v7 - 1177) * v1 - 1694193230 * (a1 - v7) + 828867143;
}

uint64_t sub_100078A8C@<X0>(int a1@<W8>, int8x16_t a2@<Q1>, int8x16_t a3@<Q4>, int8x16_t a4@<Q5>, int32x4_t a5@<Q6>, int8x16_t a6@<Q7>)
{
  unsigned int v10 = (const float *)(v9 + 908);
  int8x16_t v11 = (int8x16_t)vld1q_dup_f32(v10);
  uint64_t v12 = 4 * v6 - 4196;
  a2.i32[0] = *(_DWORD *)(v9 + v12);
  a2.i32[1] = *(_DWORD *)(v9 + 916);
  a2.i32[2] = *(_DWORD *)(v9 + 920);
  int8x16_t v13 = vextq_s8(v11, a2, 0xCuLL);
  int8x16_t v14 = a2;
  v14.i32[3] = *(_DWORD *)(v9 + 924);
  int32x4_t v15 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v14, a3), vandq_s8(v13, a6)), 1uLL), *(int8x16_t *)v9);
  v13.i32[0] = *(_DWORD *)(v7 + 4 * (*(_DWORD *)(v9 + v12) & 1));
  v13.i32[1] = *(_DWORD *)(v7 + 4 * (*(_DWORD *)(v9 + 916) & 1));
  v13.i32[2] = *(_DWORD *)(v7 + 4 * (*(_DWORD *)(v9 + 920) & 1));
  v13.i32[3] = *(_DWORD *)(v7 + 4 * (v14.i8[12] & 1));
  *(int8x16_t *)(v9 + 908) = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v15, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v15, v15), a4)), a5), v13);
  return (*(uint64_t (**)(void))(v8 + 8 * a1))();
}

uint64_t sub_100078B48()
{
  STACK[0x2B8] = v2 + 1432;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v0 - 1808) ^ (51 * (LODWORD(STACK[0x238]) ^ 1)))))();
}

uint64_t sub_100078BC4@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a2 - 1224025616);
  *(unsigned char *)(a3 + v8) ^= *(unsigned char *)(v5 + (v8 & 0xF)) ^ *(unsigned char *)((v8 & 0xF) + v6 + 2) ^ *(unsigned char *)((v8 & 0xF) + v4 + 4) ^ (119 * (v8 & 0xF));
  return (*(uint64_t (**)(void))(v7 + 8 * ((30 * (a2 - 1 != v3)) ^ (a1 - 1993))))();
}

void sub_100078C30()
{
}

uint64_t sub_100078C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v10 = v6 != a5 && LODWORD(STACK[0x324]) - v7 == -769233200;
  return (*(uint64_t (**)(void))(v8 + 8 * ((v10 * (((v5 - 1879377313) & 0x700502DB) - 36)) ^ v5)))();
}

uint64_t sub_100078C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v8 ^ 0x91F) - v6 - 107) ^ (v5 + 2250)) * (a5 < 0x20)) ^ v8)))();
}

uint64_t sub_100078CC4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(unsigned char *)(*(void *)(v5 + 96) + 1568) = 1;
  return (*(uint64_t (**)(void))(v4 + 8 * ((3905 * (*(_DWORD *)(v5 + 72) == ((a4 - 211) ^ 0x753) + 192842800)) ^ 0x753)))();
}

void sub_100078D28()
{
}

void sub_100078D5C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,unsigned __int8 a33,int a34,int a35,int a36,unsigned __int8 a37,__int16 a38,unsigned __int8 a39,int a40,int a41,int a42,int a43,unsigned __int8 a44,int a45,int a46,char a47)
{
  LODWORD(STACK[0x2A8]) = (a33 | ((a42 ^ (a46 + 865) ^ 0xD3) << 24) | ((a39 ^ 0xEF) << 8) | ((a44 ^ 0x6A) << 16)) ^ 0xDB78C477;
  LODWORD(STACK[0x2A0]) = a43 ^ 0x1732A7A;
  LODWORD(STACK[0x2C0]) = ((a41 << 8) | (a36 << 24) | (a34 << 16) | a40) ^ 0x77553B61;
  LODWORD(STACK[0x2C8]) = (((a35 ^ 0x1A) << 24) | (a45 << 16) | a37 | ((a47 ^ a3) << 8)) ^ 0x6221910E;
  JUMPOUT(0x10006C15CLL);
}

uint64_t sub_100078E3C@<X0>(int a1@<W3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((14 * (a1 ^ (a1 - 9))) ^ 0xFFFFF844) + 1875) * (a2 == v4)) ^ (v3 + a1 + 216))))();
}

uint64_t sub_100078E80@<X0>(int a1@<W8>)
{
  *uint64_t v2 = v2[623];
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((((50 * (a1 ^ 0x1F3)) ^ 0x442) + 1401636673) & 0xAC74B5FF ^ 0x553)
                                     * (v3 == 1460804440)) ^ (25 * (a1 ^ 0x1F3)))))();
}

uint64_t sub_100078EF0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((v4 + a4 + v5 - 118 - 899 < (v4 + a4))
                                     * ((v5 + 277850999) & 0xEF7056D7 ^ 0x6FC)) ^ v5)))();
}

uint64_t sub_100078F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int8x16x4_t v72 = vld4q_s8(a5);
  uint64_t v51 = (v44 - 393842807) & 0x17798CCE;
  uint8x16_t v52 = (uint8x16_t)veorq_s8(v72.val[1], v50);
  _Q17 = vmovl_u8(*(uint8x8_t *)v52.i8);
  _Q16 = vmovl_high_u8(v52);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  uint64_t v61 = (v51 + 1293789113) & 0xB2E25A7F;
  uint64_t v62 = (_DWORD *)(v45 + 4 * (v49 + 16 + v48));
  int v63 = *(v62 - 8) ^ *(_DWORD *)(v45 + 4 * (v49 + 16 + v48 + v61) - 2568);
  unsigned int v64 = v63 + v46 - ((2 * v63) & 0xBCD7C1CC);
  int v65 = *(v62 - 16) ^ *(v62 - 14);
  uint64_t v66 = v65 ^ 0x5E6BE0E6 ^ v64;
  HIDWORD(v68) = v65 ^ 0x5E6BE0E6 ^ v64;
  LODWORD(v68) = v65 ^ ~v64;
  int v67 = v68 >> 31;
  uint64_t v69 = (2 * v67) & 0xBCD7C1CC;
  *uint64_t v62 = v67 + v46 - v69;
  int v70 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * ((680 * (v49 + 17 == v49 + 80)) ^ ((int)v51 + 145)));
  return v70(v70, a2, a3, v51, 680, v61, v69, v66, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_10007912C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  a14 = 1178560073 * ((2 * (&a13 & 0xFF65FB8) - &a13 + 1879679046) ^ 0x973C822E) - 504207030;
  uint64_t v18 = (*(uint64_t (**)(int *))(v15 + 18936))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * (int)(((a13 == v14) * ((v17 - v16) ^ 0xC35E9A72)) ^ v17)))(v18);
}

uint64_t sub_1000791BC(uint64_t a1)
{
  int v2 = 268847287 * (((a1 | 0x9AE06DE0) - (a1 & 0x9AE06DE0)) ^ 0x654A7CC8);
  int v3 = *(_DWORD *)(a1 + 40) + v2;
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 32);
  int v8 = *(_DWORD *)(a1 + 24) + v2;
  unsigned int v9 = 235795823
     * (((&v11 | 0x5FD02389) - &v11 + (&v11 & 0xA02FDC70)) ^ 0xCB7D6AD0);
  int v16 = v9 ^ (v3 - 368398074);
  uint64_t v11 = v7;
  unsigned int v12 = v9 + (v8 ^ 0x47E75027) - 1611137057 + ((2 * v8) & 0xEF53BD5A ^ 0x60111D10);
  uint64_t v17 = v5;
  uint64_t v13 = v6;
  uint64_t v14 = v4;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_10026C690 + v3 - 368400116) + 8 * (v3 ^ 0x15F55EA3) - 4))(&v11);
  *(_DWORD *)(a1 + 8) = v15;
  return result;
}

uint64_t sub_100079334(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v13 = (a6 - 71) | 0x14u;
  uint64_t v14 = (a1 + v9 + v8 + 1972 - a3);
  *(int8x8_t *)(v11 - 7 + v14) = veor_s8(*(int8x8_t *)(v6 - 7 + v14), (int8x8_t)0x7777777777777777);
  return (*(uint64_t (**)(void, uint64_t, void, void))(v12
                                                                    + 8
                                                                    * (int)(((((v13 - 132) & v7) - a3 != 8)
                                                                           * (v13 + 87)) ^ v13)))((v13 + 87), v13, (-a3 - 8), v10 - ((v13 - 132) & v7));
}

uint64_t sub_1000793A8@<X0>(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  a5 = v7;
  a6 = a1;
  a3 = (v8 - 566) ^ (2078219279 * (((&a3 | 0xC3A7E2FA) - (&a3 & 0xC3A7E2FA)) ^ 0x195D748E));
  a4 = v7;
  uint64_t v9 = (*(uint64_t (**)(unsigned int *))(v6 + 8 * (v8 + 730)))(&a3);
  return sub_100079408(v9);
}

void sub_100079430(_DWORD *a1)
{
  unsigned int v1 = *a1 - 69008221 * ((a1 - 2 * (a1 & 0x90A0864D) - 1868528051) ^ 0x4302D447);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_100079528@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1973 * (v1 + 1 == v3)) ^ a1)))();
}

uint64_t sub_10007953C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((3946 * (v1 + 1 == v3 + 32)) ^ a1)))();
}

uint64_t sub_10007960C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v9 = v8 - (((v5 ^ 0xD27) + 349586956 + (v6 << (((v5 ^ 0x27) - 48) ^ 0xB))) & 0x1750AEDC) + 638811920;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8
                                                                                         * ((127
                                                                                           * (((2 * v9) & 0xEFFAFFFE ^ 0x750AEDC)
                                                                                            + (v9 ^ 0x7C552891)
                                                                                            + 995605778 == 861224209)) ^ v5 ^ 0xD27u)))(a1, a2, a3, a4, a5, 3433742033);
}

uint64_t sub_1000796B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = v3 - (**(unsigned char **)(a2 + 8) == 0);
  *(_DWORD *)(*(void *)(a1 + 96) + 800) = 434174314;
  *(_DWORD *)(*(void *)(a1 + 96) + 804) = 1758911813;
  *(void *)(*(void *)(a1 + 96) + 808) = *(void *)(a1 + 96) + 816;
  uint64_t v5 = *(void *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v4);
  unsigned int v6 = 831981571 * (((v8 | 0xE5A776CE) - v8 + (v8 & 0x1A588930)) ^ 0x7C06A6EA);
  uint64_t v9 = *(void *)(a1 + 96) + 0x5E8E72AB319E45A9;
  uint64_t v10 = v5;
  v8[0] = (v4 - 429451004) ^ v6;
  v8[1] = v6 + 1299;
  (*(void (**)(_DWORD *))(a3 + 19160))(v8);
  return (-896403937 * v11 - 1561189052);
}

void sub_1000796D4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20) - 1178560073 * ((-846133519 - (a1 | 0xCD9106F1) + (a1 | 0x326EF90E)) ^ 0xD55BDB66);
  __asm { BRAA            X10, X17 }
}

void sub_1000797B4()
{
}

uint64_t sub_100079944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  return sub_1000928D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_100079950@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v21 = (((((v20 - 144) | 0x5E4A50D4) ^ 0xFFFFFFFE) - (~(v20 - 144) | 0xA1B5AF2B)) ^ 0x7B4F395F) * v19;
  *(_DWORD *)(v20 - 128) = (v18 + 1281) ^ v21;
  *(_DWORD *)(v20 - 140) = a1 - v21;
  *(void *)(v20 - 136) = a17;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v18 ^ 0x89C)))(v20 - 144);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (int)(((*(_DWORD *)(v20 - 144) == ((2 * v18) ^ 0x26A) - 56550644)
                                                   * ((v18 + 2100239331) & 0x82D0E7FD ^ 0x61E)) ^ v18)))(v22);
}

uint64_t sub_100079A10(uint64_t a1, double a2, int8x16_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int32x4_t a19, int8x16_t a20,int8x16_t a21)
{
  int8x16_t v24 = (int8x16_t)vld1q_dup_f32((const float *)v23);
  v25.i64[0] = 0x8000000080000000;
  v25.i64[1] = 0x8000000080000000;
  a3.i64[0] = *(void *)(v23 + 4);
  a3.i32[2] = *(_DWORD *)(v23 + 12);
  int8x16_t v26 = vextq_s8(v24, a3, 0xCuLL);
  int8x16_t v27 = a3;
  v27.i32[3] = *(_DWORD *)(v23 + 16);
  int32x4_t v28 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v27, a21), vandq_s8(v26, v25)), 1uLL), *(int8x16_t *)(v23 + 1588));
  v26.i32[0] = *(_DWORD *)(v21 + 4 * (*(_DWORD *)(v23 + 4) & 1));
  v26.i32[1] = *(_DWORD *)(v21 + 4 * (*(_DWORD *)(v23 + 8) & 1));
  v26.i32[2] = *(_DWORD *)(v21 + 4 * (*(_DWORD *)(v23 + 12) & 1));
  v26.i32[3] = *(_DWORD *)(v21 + 4 * (v27.i8[12] & 1));
  *(int8x16_t *)uint64_t v23 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v28, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v28, v28), a20)), a19), v26);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 14336))(a1, 3857937780, 3028246781, 1266719999);
}

void sub_100079A1C()
{
  *(_DWORD *)(v0 - 0x6BA7059072F2C1BBLL) = 563395391;
  sub_100073748();
}

uint64_t sub_100079A3C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((60 * (*(_DWORD *)(v9 + v10 * (uint64_t)a1 + 36) == ((v7 - 1900) ^ (a7 + 94)))) ^ v7)))();
}

uint64_t sub_100079A70()
{
  *(_DWORD *)(v5 - 128) = (v0 + 866) ^ (268847287
                                      * ((~((v5 - 128) | 0x58EB8656) + ((v5 - 128) & 0x58EB8656)) ^ 0x58BE6881));
  *(void *)(v5 - 120) = v4;
  *(void *)(v5 - 112) = v2;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x9BF)))(v5 - 128);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((11 * (v3 == (v0 ^ 0x3F5) + 396414563)) ^ v0)))(v6);
}

uint64_t sub_100079B18()
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((((v1 - 1374483600) & 0x51ECF7DF ^ 0x51A)
                                              * ((v3 + v2 + 134381569) > 7)) ^ v1)))(v0);
}

uint64_t sub_100079B90()
{
  return ((uint64_t (*)(void))STACK[0x540])();
}

uint64_t sub_100079BC0@<X0>(int a1@<W8>)
{
  uint64_t v6 = (v3 + a1);
  int v7 = *(_DWORD *)((char *)&STACK[0x290] + v6 + 72);
  *(unsigned char *)(v4 + v6) = ((((v2 - 31) | 0x42) + 18) ^ HIBYTE(v7))
                      - ((2 * ((((v2 - 31) | 0x42) + 18) ^ HIBYTE(v7))) & 0xEF)
                      + 119;
  *(unsigned char *)(v4 + (v6 + 1)) = (BYTE2(v7) ^ 0x43) - ((2 * (BYTE2(v7) ^ 0x43)) & 0xEF) + 119;
  *(unsigned char *)(v4 + (v6 + 2)) = (BYTE1(v7) ^ 0xA1) - ((2 * (BYTE1(v7) ^ 0xA1)) & 0xEF) + 119;
  *(unsigned char *)(v4 + (v6 + 3)) = v7 ^ 0xB2;
  unsigned int v8 = LODWORD(STACK[0x2EC]) + 303393374;
  BOOL v9 = v3 + 1603496192 < v8;
  if (v3 + 1603496192 < v1 != v8 < v1) {
    BOOL v9 = v8 < v1;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((8 * v9) | (16 * v9) | v2)))();
}

uint64_t sub_100079CA4@<X0>(uint64_t a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  int v36 = *(_DWORD *)(&a19 + ((v34 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v34 + a2)) = (v32 - 13) & 0xBF ^ 0x1B ^ v36;
  *(unsigned char *)(a1 + (v34 + a2 + 1)) = (BYTE1(v36) ^ 0xA1) - ((2 * (BYTE1(v36) ^ 0xA1)) & 0xEF) + 119;
  *(unsigned char *)(a1 + (v34 + a2 + 2)) = (BYTE2(v36) ^ 0x43) - ((2 * (BYTE2(v36) ^ 0x43)) & 0xEF) + 119;
  *(unsigned char *)(a1 + (v34 + a2 + 3)) = (HIBYTE(v36) ^ 0x58) - ((2 * (HIBYTE(v36) ^ 0x58)) & 0xEF) + 119;
  BOOL v37 = v34 + 383737548 < (a31 - 112158172);
  if (v34 + 383737548 < v31 != a31 - 112158172 < v31) {
    BOOL v37 = a31 - 112158172 < v31;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((!v37 * v33) ^ v32)))();
}

uint64_t sub_100079D9C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((141 * (STACK[0x520] != 0)) ^ (v1 + 801))))();
}

uint64_t sub_100079DC4@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v10 = (a2 + a1 + a3) + a4;
  uint64_t v11 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  unint64_t v12 = v11 - v10 + v8;
  uint64_t v13 = (v6 | v11) - v10;
  uint64_t v14 = (v7 | v11) - v10;
  BOOL v16 = v12 > 0xF && v4 - a4 >= (unint64_t)((v5 ^ 0x33Bu) + 1544) - 2087 && (unint64_t)(v13 + 1) > 0xF;
  unint64_t v17 = v14 + 2;
  int v19 = v16 && v17 > 0xF;
  return (*(uint64_t (**)(void))(v9 + 8 * ((2 * v19) | (8 * v19) | v5)))();
}

uint64_t sub_100079E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((1771 * (a7 + 1 == v8 + 48)) ^ a6)))();
}

uint64_t sub_100079F10@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v5 = 3 * (v4 ^ 0x7D4);
  if (v3 + 388571835 < 0) {
    int v6 = v3;
  }
  else {
    int v6 = v5 - v3 - 777144780;
  }
  return (*(uint64_t (**)(uint64_t, void))(v2 + 8 * ((3350 * (v6 - 1758911814 >= 0)) ^ v5)))(a1, (a2 + 1));
}

uint64_t sub_100079FB0(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((58
                                * (*(_DWORD *)(v7 + (v5 + a4) * (uint64_t)a1) != 74
                                                                              * ((((v4 - 1103721571) & 0x41C977CB)
                                                                                - 156464103) & 0x953773B ^ 0x72B)
                                                                              + 1336679324)) ^ (v4 - 1103721571) & 0x41C977CB)))();
}

uint64_t sub_10007A0D0()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((v1 < ((v2 + 564) ^ 0x48399A6Eu)) * ((v2 ^ 0x64C) - 1128)) ^ (v2 + 593))))();
}

void sub_10007A10C()
{
}

uint64_t sub_10007A138()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 > 0x82) * ((v0 ^ 0x7D1) - 1347)) ^ (v0 + 1139))))();
}

uint64_t sub_10007A164(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((a3 + 1 + v4) < 0x3C) | (8 * ((a3 + 1 + v4) < 0x3C))) ^ v3)))();
}

void sub_10007A234()
{
}

uint64_t sub_10007A23C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = (v2 - 430653321) & 0x19AB3F7C;
  unint64_t v5 = ((unint64_t)&STACK[0x308] ^ 0xD77BBFBE5BC3BEFFLL)
     + 0x7DAFFF5FFD3DE001
     + ((v4 - 0x510880834878864CLL) & (2 * (void)&STACK[0x308]));
  unint64_t v6 = a2 - 1;
  STACK[0x308] = v6;
  *(unsigned char *)(a1 + v6) = (v5 ^ 0xBA) * (v5 + 17);
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((116 * ((v4 ^ 0x6B ^ (STACK[0x308] == 0)) & 1)) ^ v4)))();
}

uint64_t sub_10007A2EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a1 + (v3 - 1657738042) + 4) = (**(unsigned char **)(a2 + 8) ^ 0xD7)
                                                       + ((2 * **(unsigned char **)(a2 + 8)) & 0xAE)
                                                       + 43;
  unsigned int v4 = *(_DWORD *)(a2 + 4) + 1029604229;
  BOOL v5 = v4 < 0xA2F35BE2;
  BOOL v6 = v4 > 0xA2F35BE3;
  if (v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((662 * v6) ^ 0x5F5u)))();
}

uint64_t sub_10007A3A4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v7 = a3 + a1;
  *(unsigned char *)(a2 + v7) = v5;
  return (*(uint64_t (**)(void))(v6
                              + 8 * (((v7 + (unint64_t)((v3 - 314) ^ 0x2B9u) - 56 < 0x38) * v4) | (v3 - 314))))();
}

uint64_t sub_10007A3E4@<X0>(uint64_t a1@<X0>, int a2@<W5>, int a3@<W7>, int a4@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * ((((a4 - 255000199) < 0x38) * (v4 - a2 + 2760)) ^ (a3 + v4 + 482))))(a1, -255000199);
}

uint64_t sub_10007A424()
{
  return sub_1000A5E68();
}

uint64_t sub_10007A43C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int8x16_t *a6)
{
  *a6 = vaddq_s8(vsubq_s8(*(int8x16_t *)(a1 + (v7 + a4)), vandq_s8(vaddq_s8(*(int8x16_t *)(a1 + (v7 + a4)), *(int8x16_t *)(a1 + (v7 + a4))), v10)), v9);
  return (*(uint64_t (**)(void))(v8 + 8 * v6))();
}

void df35957c4e0()
{
  int v0 = *(&off_10026C690
       + ((-113 * ((qword_100283A78 - dword_100283B98) ^ 0xEA)) ^ byte_100214730[byte_1002113C0[(-113 * ((qword_100283A78 - dword_100283B98) ^ 0xEA))] ^ 0xBB])
       - 44);
  unsigned __int8 v1 = -113 * ((qword_100283A78 + *v0) ^ 0xEA);
  int v2 = *(&off_10026C690 + (byte_10021E7E8[(byte_1002189D8[v1 - 8] ^ 0x66) - 8] ^ v1) - 174);
  unint64_t v3 = (*v2 + *v0) ^ (unint64_t)&v5;
  void *v0 = 1932141199 * v3 - 0xC02EA2D01B5AE4ALL;
  *int v2 = 1932141199 * (v3 ^ 0xA437147DE07F15EALL);
  v6[1] = 1178560073 * ((-1176344558 - (v6 | 0xB9E26812) + (v6 | 0x461D97ED)) ^ 0xA128B585)
        - 504207030;
  LOBYTE(v2) = -113 * (*(_DWORD *)v0 ^ 0xEA ^ *(_DWORD *)v2);
  int v4 = (char *)*(&off_10026C690
               + ((-113 * (dword_100283B98 ^ 0xEA ^ qword_100283A78)) ^ byte_10021E6E0[byte_1002186D0[(-113 * (dword_100283B98 ^ 0xEA ^ qword_100283A78))] ^ 0xB9])
               - 23)
     - 4;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_1002187D8[(byte_100214530[v2] ^ 0x2F)
                                                                       - 8] ^ v2)
                                      + 17056])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10007A6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 - 956 + (v7 ^ (v8 + 1038)) + 363104085) * (v6 == a6)) ^ v7)))();
}

uint64_t sub_10007A6FC@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  *(unsigned char *)(v3 + a2 + v4 + ((a1 - 541) | 0x905u)) = *(unsigned char *)(v5 + a2 + v4 + ((a1 - 541) | 0x905u))
                                                   - ((2 * *(unsigned char *)(v5 + a2 + v4 + ((a1 - 541) | 0x905u))) & 0xEF)
                                                   + 119;
  return (*(uint64_t (**)(void))(v6 + 8 * ((2039 * (a2 - 1 == a3)) ^ a1)))();
}

uint64_t sub_10007A74C(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *(unsigned char *)(v7 + (a2 + a6)) = *(unsigned char *)(v8 + (a2 + a6))
                                           - ((*(unsigned char *)(v8 + (a2 + a6)) << ((a1 - 25) ^ v9)) & 0xEE)
                                           + 119;
  return (*(uint64_t (**)(void))(v10 + 8 * (((a2 - 1 == v11) * a7) ^ a1)))();
}

uint64_t sub_10007A790(int a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((701 * (a1 ^ 0x117)) ^ 0x92E) + (a1 ^ 0x4EA))
                                * (*(_DWORD *)(v2 - 144) == *(_DWORD *)(v2 - 152))) ^ a1)))();
}

uint64_t sub_10007A7E4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1011 * (**(unsigned char **)(a2 + 8) == 0)) ^ 0x4D9u)))();
}

uint64_t sub_10007A828@<X0>(int a1@<W8>)
{
  v7.i64[0] = 0xEEEEEEEEEEEEEEEELL;
  v7.i64[1] = 0xEEEEEEEEEEEEEEEELL;
  v8.i64[0] = 0x7777777777777777;
  v8.i64[1] = 0x7777777777777777;
  *(int8x16_t *)(v2 + (v4 + a1)) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v7)), v8);
  return (*(uint64_t (**)(void))(v5 + 8 * (((((v3 + 1) & 0x1FFFFFFF0) == 16) * (v1 ^ 0x684)) ^ v1)))();
}

uint64_t sub_10007A890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((((v20 + 373) ^ 0xF52 ^ (2 * (v20 ^ 0x539))) * (v21 == a1)) ^ v20)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

void sub_10007A8E0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 460628867 * ((-1228667218 - (a1 | 0xB6C406AE) + (a1 | 0x493BF951)) ^ 0x5AD7B2C);
  uint64_t v2 = *(void *)(a1 + 40);
  int v4 = *(unint64_t **)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v5 = *(unint64_t **)(v2 - 0x5693A2FF918C2418);
  uint64_t v13 = *(void *)a1;
  unsigned int v12 = v1 - 1224239923 * ((&v8 - 1600500025 - 2 * (&v8 & 0xA09A4EC7)) ^ 0x5229B310) - 710;
  uint64_t v10 = v5;
  uint64_t v11 = v2;
  uint64_t v8 = v3;
  char v9 = &STACK[0x5E8E72AB319E42A9];
  uint64_t v6 = (char *)*(&off_10026C690 + v1 - 1123) - 4;
  (*(void (**)(uint64_t *))&v6[8 * v1 + 8936])(&v8);
  uint64_t v7 = *(void *)(v2 - 0x5693A2FF918C2420);
  LODWORD(v9) = v1
              + 831981571
              * ((1193525828 - (&v8 | 0x4723C244) + (&v8 | 0xB8DC3DBB)) ^ 0x217DED9F)
              + 489;
  uint64_t v8 = v7;
  uint64_t v10 = &STACK[0x5E8E72AB319E42B9];
  (*(void (**)(uint64_t *))&v6[8 * v1 + 9776])(&v8);
  char v9 = v4;
  LODWORD(v10) = (944348131 * (((&v8 | 0x113A7D54) - (&v8 & 0x113A7D54)) ^ 0xB223D91A)) ^ (v1 - 987);
  (*(void (**)(uint64_t *))&v6[8 * v1 + 10256])(&v8);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10007AB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a14 = (831981571 * ((295820161 - (&a13 | 0x11A1DB81) + (&a13 | 0xEE5E247E)) ^ 0x77FFF45A)) ^ 0x8F;
  a13 = &STACK[0x55D5CC6D86BC0F1F];
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v16 + 18816))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((3996 * (a15 == v15)) ^ 0x792u)))(v17);
}

uint64_t sub_10007AC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * ((((((v3 + 93) | 0x60)
                                                                                   + *(unsigned char *)(a3 + a2)
                                                                                   - **(unsigned char **)(a1 + 8 * (v3 ^ 0x36C))) == 211)
                                                                * ((v3 ^ 0x3ED) - 167)) ^ (v3 + 218))))(1005, 352, 169);
}

uint64_t sub_10007AC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,unint64_t a27,uint64_t a28,_DWORD *a29)
{
  *a29 = v30 + 1;
  int v33 = v32 & ((v29 ^ (v29 >> 11)) << 7) ^ v29 ^ (v29 >> 11);
  *(_DWORD *)(*a25 + a27) ^= a15 & (v33 << 15) ^ v33 ^ ((a15 & (v33 << 15) ^ v33) >> 18);
  return (*(uint64_t (**)(void))(v31 + 8 * ((8 * (a27 < 0x1FC)) | 0x680)))();
}

uint64_t sub_10007ACD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v21 = 4 * (v16 + v14);
  int v22 = v17
      + 797567713
      + ((v20 - 111) ^ 0x93)
      + (*(_DWORD *)(*(void *)(a10 - 0x5E8E72AB319E4281) + v21) ^ v18)
      + (*(_DWORD *)(*(void *)(a11 - 0x5E8E72AB319E4281) + v21) ^ v18)
      - 394;
  *(_DWORD *)(*(void *)(a13 - 0x5E8E72AB319E4281) + v21) = v22 + v18 - (v15 & (2 * v22));
  BOOL v23 = v16 - 44208401 < (int)(v13 + 870823181);
  if (v13 > 0x4C184AF2 != v16 - 44208401 < -1276660467) {
    BOOL v23 = v13 > 0x4C184AF2;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * ((35 * !v23) ^ (v20 - 111))))();
}

uint64_t sub_10007AE0C@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((57 * ((((a1 ^ 0x680) - 728) ^ 0x208) != 32)) ^ a1 ^ 0x680)))();
}

uint64_t sub_10007AE74()
{
  int v5 = *(unsigned __int8 *)STACK[0x480]
     - (*(unsigned char *)(*(void *)(v3 + v4 * (uint64_t)v1 + 24) - 0x6F040A998C7EE55DLL) - 88);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((198
                                              * ((((49 * (v0 ^ 0x263) + 716) ^ 0xFFDE4EA2) & (2 * v5))
                                               + (v5 ^ 0xFFEF26C6) == ((49 * (v0 ^ 0x263) + 511) ^ 0xFFEF24A7))) ^ (49 * (v0 ^ 0x263)))))(48);
}

uint64_t sub_10007AF34()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((41
                                * (*(unsigned __int8 *)((v2 | ((unint64_t)(v2 < v1) << 32)) + v4 - 1417509658) == (((v0 + 39) & 0xCB) - 11))) ^ v0)))();
}

uint64_t sub_10007AF98()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v3 ^ 0x188 ^ (v1 - 347)) & (2 * (*(unsigned __int8 *)(v2 + 8) - 4)))
                                 + ((*(unsigned __int8 *)(v2 + 8) - 4) ^ v0) == v0)
                                * (v3 ^ 0x2E0)) ^ v3)))();
}

uint64_t sub_10007AFE4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((206
                                * (((*(void *)(v1 + 24) == 0x3A31F5D96A0DCBB0) ^ (v0 - 120)) & 1)) ^ v0)))();
}

void sub_10007B024(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 1224239923 * ((-223099009 - (a1 | 0xF2B3C77F) + (a1 | 0xD4C3880)) ^ 0xFFFFC557);
  if (*(_DWORD *)(*(void *)(a1 + 8) - 0x5E8E72AB319E4285) - 1758911813 >= 0) {
    unsigned int v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x5E8E72AB319E4285) - 1758911813;
  }
  else {
    unsigned int v3 = 1758911813 - *(_DWORD *)(*(void *)(a1 + 8) - 0x5E8E72AB319E4285);
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x5E8E72AB319E4285) - 1758911813 >= 0) {
    unsigned int v4 = *(_DWORD *)(v2 - 0x5E8E72AB319E4285) - 1758911813;
  }
  else {
    unsigned int v4 = 1758911813 - *(_DWORD *)(v2 - 0x5E8E72AB319E4285);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  v7[1] = v1 - 1224239923 * ((((2 * v7) | 0x15CF2FCC) - v7 + 1964533786) ^ 0x78546A31) + 341;
  int v5 = (char *)*(&off_10026C690 + (v1 ^ 0x1B5)) - 4;
  (*(void (**)(_DWORD *))&v5[8 * (v1 ^ 0x8BB)])(v7);
  if (v3 >= v4) {
    unsigned int v6 = v4;
  }
  else {
    unsigned int v6 = v3;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_10007B1D4()
{
  *(_DWORD *)(v3 + v2) = v0;
  *(void *)(v7 - 128) = v3;
  *(_DWORD *)(v7 - 136) = (v1 ^ 0x3D9)
                        + ((((v7 - 144) | 0xF8EEAC69) - (v7 - 144) + ((v7 - 144) & 0x7115390)) ^ 0x614F7C4D) * v6
                        + 1239;
  *(void *)(v7 - 144) = v4;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * (v1 ^ 0xB0D)))(v7 - 144);
}

uint64_t sub_10007B27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(void))(v16
                              + 8 * (((a13 == ((v14 + 552287381) & 0xDF14C56F ^ (v13 + 1219))) * (v15 ^ 0x753)) ^ v14)))();
}

uint64_t sub_10007B2C4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v8 = v2 - 1;
  STACK[0x348] = v8;
  *(unsigned char *)(a1 + v8) = ((v3 + v6 + 82) ^ v4) * (v3 + v6 + 99);
  return (*(uint64_t (**)(void))(v7 + 8 * (((STACK[0x348] == 0) * v5) ^ a2)))();
}

uint64_t sub_10007B2D0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 - 1021) | 0x77) ^ 0x22A) * (v2 == 1)) | (v0 + 29))))();
}

void sub_10007B308(_DWORD *a1@<X8>)
{
  *a1 = v1 + 148;
  sub_1000A53D8(a1);
}

uint64_t sub_10007B318()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((((v0 == 63) ^ v1) & 1) * ((v1 ^ 0x165) - 1503)) ^ v1)))(119);
}

uint64_t sub_10007B364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                                           + 8
                                           * ((((((a5 - 347636077) & 0x14B881AB) + 202) ^ 0x266) * (v5 < 0x20)) ^ a5)))(0);
}

uint64_t sub_10007B3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16)
{
  unsigned int v21 = 1224239923
      * ((((2 * (&a13 ^ 0x9F5B1C94)) | 0xF1532BEC) - (&a13 ^ 0x9F5B1C94) + 123103754) ^ 0x954174B5);
  LODWORD(a13) = (v18 ^ 0x6DE1BF7B) + ((2 * v18) & 0xDBC37EF6) - v21 - 98642179;
  LODWORD(a15) = v21 ^ 0x3B7;
  a14 = a11;
  (*(void (**)(uint64_t *))(v20 + 19624))(&a13);
  unsigned int v22 = 69008221 * (((~&a13 & 0x57029748) - (~&a13 | 0x57029749)) ^ 0x84A0C543);
  a13 = v16;
  a16 = ((v17 ^ 0x5174BDEE) - 1076106314 + ((2 * v17) & 0xA2E97BDC)) ^ v22;
  a15 = a11;
  HIDWORD(a14) = v22 + 2309;
  uint64_t v23 = (*(uint64_t (**)(uint64_t *))(v20 + 19312))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((267 * (a14 == v19)) ^ 0x6F4u)))(v23);
}

uint64_t sub_10007B50C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((((a3 + 1104030494) & 0xBE31D7DD) + ((a3 + 1921) | 5) - 3309) * (v3 != v4)) ^ a3)))();
}

uint64_t sub_10007B558(unsigned int a1)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((236
                                * ((((*(unsigned __int8 *)(v3 + 6) - 1) << (((a1 - 116) & 0x3E) - 59)) & v2)
                                 + ((a1 - 1480758164) & 0x584293BF ^ v4 ^ (*(unsigned __int8 *)(v3 + 6) - 1)) != v1)) ^ a1)))();
}

uint64_t sub_10007B5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17)
{
  unsigned int v20 = (&a16 ^ 0xE7352268) * v17;
  a16 = v19 - v20 + 1052;
  a17 = v20 ^ 0x3A;
  (*(void (**)(int *))(v18 + 8 * (v19 + 2053)))(&a16);
  return sub_100069634();
}

uint64_t sub_10007B60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((*(_DWORD *)(*v9 + 4 * a6) != v6 + 2236) * (v7 ^ a5)) ^ (v7 - 1313))))();
}

uint64_t sub_10007B644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8
                                                                       * (((2
                                                                          * ((((v4 + 33) ^ (v5 == v3)) & 1) == 0)) & 0xDF | (32 * (((v4 + 33) ^ ~(v5 == v3)) & 1))) ^ v4)))(a1, a2, a3, 27);
}

uint64_t sub_10007B690(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, int a7)
{
  int v14 = (unsigned int *)(v13 + 4 * v9);
  uint64_t v15 = v9 + 1;
  int v16 = *(_DWORD *)(v13 + 4 * v15);
  unsigned int v17 = v14[397] ^ ((v16 & 0x7FFFFFFE | v8 & 0x80000000) >> 1);
  unsigned int *v14 = (v17 + v12 - ((v17 << ((v7 + 63) ^ a6)) & a2)) ^ *(_DWORD *)(v10 + 4 * (v16 & 1));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v15 == 227) * a7) ^ v7)))();
}

uint64_t sub_10007B6FC()
{
  STACK[0x518] = v0;
  return sub_100079D9C();
}

uint64_t sub_10007B710@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unsigned int *a57)
{
  int v58 = 52 * (a2 ^ 0x11C);
  uint64_t v59 = (*(uint64_t (**)(void, uint64_t, void))(v57 + 8 * (a2 ^ 0x85E)))(*a57, a1, LODWORD(STACK[0x46C]));
  return (*(uint64_t (**)(uint64_t))(v57
                                            + 8
                                            * ((((v58 ^ 0x68B) + 225 + 9 * (v58 ^ 0x68B) - 2179)
                                              * (LODWORD(STACK[0x54C]) != -563355418)) ^ v58)))(v59);
}

uint64_t sub_10007B788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13)
{
  int v16 = 3804331
      * ((((2 * ((v15 - 128) ^ 0x377493FC)) | 0xB4D0945C) - ((v15 - 128) ^ 0x377493FC) - 1516784174) ^ 0x13C9FC24);
  *(void *)(v15 - 120) = a13;
  *(_DWORD *)(v15 - 128) = v13 - v16 + 682;
  *(_DWORD *)(v15 - 124) = (((32 * a12) ^ 0x7FFEFFFB) + ((a12 << 6) & 0xFFFDFFFF) + (((v13 - 551) | 0x6C) ^ 0xF2FB70FA)) ^ v16;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v13 + 923)))(v15 - 128);
  return (*(uint64_t (**)(uint64_t))(v14 + 8
                                                  * ((369 * ((*a9 - 1758911814) < 0x7FFFFFFF)) ^ v13)))(v17);
}

uint64_t sub_10007B870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (int)(((((265 * (a6 ^ 0xA3)) ^ 0xFFFFFBF4) + ((a6 - 2989224) & 0x2D9DDA))
                                     * ((a12 - 674700959) > 0x7FFFFFFE)) ^ a6)))();
}

uint64_t sub_10007B8D4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  unsigned int v10 = 3804331 * ((2 * (&a3 & 0x22CC8A28) - &a3 + 1563653584) ^ 0x23E65026);
  a3 = v7;
  a6 = a1;
  a7 = (v9 - 216) ^ v10;
  a4 = v10 ^ 0x34EDA71E;
  a5 = v10 ^ 0x4CDE268;
  uint64_t v11 = (*(uint64_t (**)(uint64_t *))(v8 + 8 * (v9 ^ 0x8A0)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((652
                                              * (*(_DWORD *)(v7 - 0x6BA7059072F2C1BBLL) == (((v9 + 660) | 0x18A) ^ 0xDE6BD20B)
                                                                                         + ((v9 + 1605351979) & 0xA0504D0D))) ^ v9)))(v11);
}

uint64_t sub_10007B9C8()
{
  return sub_10007B9F4();
}

uint64_t sub_10007B9F4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_10007BA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,_DWORD *a22,void *a23)
{
  int v28 = a15 & 0x2A99E3FC;
  *int8x16_t v27 = v24 + 1;
  unsigned int v29 = ((v23 ^ (v23 >> 11)) << 7) & 0x9D2C5680 ^ v23 ^ (v23 >> 11);
  int v30 = (unsigned char *)(a17 + a20 + (((a15 & 0x2A99E3FC) - 632) | 0x421u) - 1314);
  unsigned int v31 = -1805087677 * ((v30 ^ *(_DWORD *)(*a23 + (*a22 & 0xCDE29BC))) & 0x7FFFFFFF);
  unint64_t v32 = -1805087677 * ((v31 >> ((((a15 & 0xFC) - 120) ^ 5) + 11)) ^ v31);
  LOBYTE(v32) = *(unsigned char *)(*(void *)(v26 + 8 * (v28 - 872)) + (v32 >> 24)) ^ v29 ^ (((v29 << ((a15 & 0xFC) - 105)) & 0xEFC60000 ^ v29) >> 18) ^ *(unsigned char *)(*(void *)(v26 + 8 * (v28 - 694)) + (v32 >> 24)) ^ *(unsigned char *)(*(void *)(v26 + 8 * (v28 - 712)) + (v32 >> 24) + 2) ^ v32 ^ (-93 * ((-1805087677 * ((v31 >> (((v28 - 120) ^ 5) + 11)) ^ v31)) >> 24));
  *int v30 = v32;
  return (*(uint64_t (**)(void))(v25 + 8 * ((1052 * (a20 == (v32 != 0))) ^ a15 & 0x2A99E3FC)))();
}

uint64_t sub_10007BBA4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((107 * (((v1 == 1704253533) ^ (-105 * (v0 ^ 0x35) + 53)) & 1)) ^ v0)))();
}

uint64_t sub_10007BC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15, uint64_t a16, unint64_t *a17, int a18)
{
  unsigned int v22 = ((&a13 & 0x94F48E05 | ~(&a13 | 0x94F48E05)) ^ 0x99B88C2D) * v21;
  a16 = a10;
  a17 = &STACK[0x634ED76D4AB8828D];
  a15 = v22 ^ 0x3177271F;
  a13 = v22 ^ 0x6BCE5709;
  a14 = (v20 - 2024874363) ^ v22;
  uint64_t v23 = (*(uint64_t (**)(int *))(v19 + 8 * (v20 ^ 0xC4D)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a18 == v18) * ((v20 + 1786260927) & 0xFCE ^ 0x297)) | v20)))(v23);
}

uint64_t sub_10007BCD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v9 = v7 - 393410167 + 13 * (v2 ^ 0x130u);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(v1 + v9);
  BOOL v10 = v7 - 857168935 < v5;
  if (v4 > 0x1BA46D0D != v7 - 857168935 < v3) {
    BOOL v10 = v4 > 0x1BA46D0D;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((v10 * v6) ^ v2)))();
}

uint64_t sub_10007BD4C()
{
  int v3 = *(_DWORD *)(v2 - 0x6BA7059072F2C1C3)
     - ((2 * *(_DWORD *)(v2 - 0x6BA7059072F2C1C3) + 100821094) & 0x1750AEDC)
     + 2125040545;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((44
                                * (((((v0 ^ 0x51F) + 413) ^ 0xEFFAFCA3) & (2 * v3) ^ 0x750AEDC)
                                 + (v3 ^ 0x7C552891)
                                 + 995605778 != 861224209)) ^ v0)))();
}

uint64_t sub_10007BDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v5
                                                                                        + 8
                                                                                        * ((31
                                                                                          * (((v6 < 0x20) ^ ((((v7 + 79) | 8) - 27) ^ (((v7 + 79) | 8) - 106))) & 1)) ^ ((v7 - 1201) | 0x408))))(a1, a2, a3, a4, a5, 0);
}

void sub_10007BE44(uint64_t a1)
{
  BOOL v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x5E8E72AB319E4285) == 1758911813
    || *(_DWORD *)(*(void *)a1 - 0x5E8E72AB319E4285) == 1758911813;
  int v1 = *(_DWORD *)(a1 + 16) + 460628867 * ((-2 - ((a1 | 0x675F0E27) + (~a1 | 0x98A0F1D8))) ^ 0xD43673A5);
  __asm { BRAA            X12, X17 }
}

uint64_t sub_10007BF58@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 468) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 13320))(0);
}

uint64_t sub_10007BFBC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(&a19 + a2 + a1) = 119;
  return (*(uint64_t (**)(void))(v20 + 8 * ((4088 * ((unint64_t)(a2 + a1 + 1) > 0x3F)) ^ v19)))();
}

uint64_t sub_10007C018@<X0>(int a1@<W8>)
{
  uint64_t v7 = v1;
  unsigned int v6 = (a1 - 614) ^ (69008221
                   * (((&v6 | 0x4F9F18DC) - &v6 + (&v6 & 0xB060E720)) ^ 0x9C3D4AD6));
  (*(void (**)(unsigned int *))(v3 + 8 * (a1 + 1540)))(&v6);
  return v4 ^ v2;
}

uint64_t sub_10007C0B8(unint64_t a1)
{
  STACK[0x508] = STACK[0x288] - 176;
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8 * (int)(((STACK[0x2C8] <= a1) * ((v2 + 1941122058) & 0x8C4CD3FF ^ 0x274)) | v2));
  STACK[0x418] = a1;
  return v3();
}

void sub_10007C178()
{
}

uint64_t sub_10007C180()
{
  LODWORD(STACK[0x53C]) = STACK[0x298];
  LODWORD(STACK[0x4DC]) = STACK[0x2A0];
  STACK[0x2E8] = STACK[0x260];
  STACK[0x3E8] = STACK[0x288];
  STACK[0x488] = STACK[0x290];
  STACK[0x508] = STACK[0x2B8];
  LODWORD(STACK[0x440]) = 2;
  STACK[0x3A0] = 0;
  LODWORD(STACK[0x46C]) = 0;
  LODWORD(STACK[0x52C]) = 0;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((13 * ((STACK[0x2B0] & 2) == ((v0 + 1002724030) & 0xC43B9FAF ^ 0xFFFFFFFC) + v0 - 1426)) ^ v0)))();
}

uint64_t sub_10007C218(int a1, int a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v12 = v9 + v8;
  unsigned int v13 = ((a2 + 853) ^ 0x4767F475 ^ (a2 + 2146955906) & 0xCB6FFB8B) + v12;
  if (v13 <= 0x40) {
    unsigned int v13 = a4;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((1949 * (a8 - v12 < v10 + a8 + a1 + v13)) ^ a2)))();
}

void sub_10007C284()
{
}

uint64_t sub_10007C290()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((*(_DWORD *)(v1 - 136) + 441) ^ 0x16 ^ ((*(_DWORD *)(v1 - 136) + 441) | 0x16) ^ 0x1C)
                                * (*(_DWORD *)(v1 - 128) == *(_DWORD *)(v1 - 132))) ^ *(_DWORD *)(v1 - 136))))();
}

uint64_t sub_10007C2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  LODWORD(STACK[0x444]) = 1804529743;
  LODWORD(STACK[0x334]) = 128;
  unint64_t v51 = STACK[0x388] + 0x5E8E72AB319E4499;
  unint64_t v52 = STACK[0x388] + 0x5E8E72AB319E45A9;
  unint64_t v53 = STACK[0x4F0];
  unint64_t v54 = STACK[0x408];
  int v55 = 2078219279 * ((~((v50 - 192) | 0xAFF9E70E) + ((v50 - 192) & 0xAFF9E70E)) ^ 0x8AFC8E85);
  *(_DWORD *)(v50 - 132) = v55 + v48 - 218;
  *(void *)(v50 - 128) = v53;
  *(void *)(v50 - 184) = 0;
  *(void *)(v50 - 176) = a48;
  *(void *)(v50 - 152) = 0;
  *(void *)(v50 - 144) = v54;
  *(_DWORD *)(v50 - 168) = 40008677 - v55;
  *(void *)(v50 - 160) = v52;
  *(void *)(v50 - 192) = v51;
  uint64_t v56 = (*(uint64_t (**)(uint64_t))(v49 + 8 * (v48 + 1551)))(v50 - 192);
  return (*(uint64_t (**)(uint64_t))(v49
                                            + 8
                                            * (((*(_DWORD *)(v50 - 136) == ((v48 + 874033219) & 0xCBE74F6E ^ 0xDE6BE3C8))
                                              * (v48 ^ 0x4E6)) ^ v48)))(v56);
}

uint64_t sub_10007C3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v12 = *(unsigned __int8 *)(v9 - 0xB999BAB1C512023) ^ 0x89;
  if (v12 == 1)
  {
    unsigned int v18 = *(_DWORD *)(v9 - 0xB999BAB1C51203FLL);
    int v14 = v11 + 1365;
    *(unsigned char *)(v9 - 0xB999BAB1C51204BLL) = ((8 * v18) ^ 0x70) + ((v11 + 85) ^ 0xF4) - ((2 * ((8 * v18) ^ 0x70)) & 0xE0);
    *(unsigned char *)(v9 - 0xB999BAB1C51204ALL) = ((v18 >> 5) ^ 0xCD) - ((2 * ((v18 >> 5) ^ 0xCD)) & 0xEF) + 119;
    *(unsigned char *)(v9 - 0xB999BAB1C512049) = ((v18 >> 13) ^ 0x53) - ((2 * ((v18 >> 13) ^ 0x53)) & 0xEF) + 119;
    *(unsigned char *)(v9 - 0xB999BAB1C512048) = ((v18 >> 21) ^ 0x65) - 2 * ((v18 >> 21) ^ 0x65 ^ (v18 >> 21) & 8) + 119;
    unsigned int v19 = *(_DWORD *)(v9 - 0xB999BAB1C512043);
    HIDWORD(v20) = v19 ^ 6;
    LODWORD(v20) = v18 ^ 0x60000000;
    *(unsigned char *)(v9 - 0xB999BAB1C512047) = (v20 >> 29) - ((2 * (v20 >> 29)) & 0xEF) + 119;
    *(unsigned char *)(v9 - 0xB999BAB1C512046) = (a4 ^ (v19 >> 5)) - ((2 * (a4 ^ (v19 >> 5))) & 0xEF) + 119;
    unsigned int v17 = ((v19 >> 20) | 0x11) - (v19 >> 21) + 119;
    *(unsigned char *)(v9 - 0xB999BAB1C512045) = ((v19 >> 13) ^ 0xA8) - ((2 * ((v19 >> 13) ^ 0xA8)) & 0xEF) + 119;
    goto LABEL_5;
  }
  int v13 = v11;
  if (v12 == 2)
  {
    unsigned int v17 = *(_DWORD *)(v9 - 0xB999BAB1C512043);
    int v14 = (v11 + 1362) | 3;
    unsigned int v15 = *(_DWORD *)(v9 - 0xB999BAB1C51203FLL);
    HIDWORD(v16) = v17 ^ 6;
    LODWORD(v16) = v15 ^ 0x60000000;
    *(unsigned char *)(v9 - 0xB999BAB1C51204BLL) = ((v17 >> 20) | 0x11) - (v17 >> 21) + 119;
    *(unsigned char *)(v9 - 0xB999BAB1C51204ALL) = ((v17 >> 13) ^ 0xA8)
                                         - ((((v11 + 82) | 3) ^ 0x6D) & (2 * ((v17 >> 13) ^ 0xA8)))
                                         + 119;
    *(unsigned char *)(v9 - 0xB999BAB1C512049) = (a4 ^ (v17 >> 5)) - ((2 * (a4 ^ (v17 >> 5))) & 0xEF) + 119;
    *(unsigned char *)(v9 - 0xB999BAB1C512048) = (v16 >> 29) - ((2 * (v16 >> 29)) & 0xEF) + 119;
    *(unsigned char *)(v9 - 0xB999BAB1C512047) = ((v15 >> 21) ^ 0x65) - ((2 * ((v15 >> 21) ^ 0x65)) & 0xEF) + 119;
    *(unsigned char *)(v9 - 0xB999BAB1C512046) = ((v15 >> 13) ^ 0x53) - ((2 * ((v15 >> 13) ^ 0x53)) & 0xEF) + 119;
    LOBYTE(v17) = ((8 * v15) ^ 0x70) - 2 * ((8 * v15) ^ 0x70 ^ (8 * v15) & 8) + 119;
    *(unsigned char *)(v9 - 0xB999BAB1C512045) = ((v15 >> 5) ^ 0xCD) - ((2 * ((v15 >> 5) ^ 0xCD)) & 0xEF) + 119;
LABEL_5:
    int v13 = 22 * (v14 ^ 0x8A6);
    *(unsigned char *)(v9 - 0xB999BAB1C512044) = v17;
  }
  STACK[0x460] = *(void *)(v10 + 8 * (v13 - 766));
  return sub_1000743A8(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_10007C768()
{
  int v3 = ((*v2 == 0) ^ ((v0 - 1) ^ (v0 + 118))) & 1;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v3 | (8 * v3)) ^ v0)))();
}

uint64_t sub_10007C7A8()
{
  *uint64_t v1 = v0;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((463
                                * (((v0 - ((2 * v0) & 0x2C452384) + 371364290) ^ ((((v3 - 1111576640) & 0x42414EFE) - 734) | 0x8B) ^ (((v3 - 1111576640) & 0x42414EFE) - 251287263) & 0xEFA539F ^ 0x2B1538AA)
                                 + ((2 * (v0 - ((2 * v0) & 0x2C452384) + 371364290)) & 0x7A6F5CF8 ^ 0x28450080)
                                 - 86016540 != 941042784)) ^ (v3 - 1111576640) & 0x42414EFEu)))();
}

uint64_t sub_10007C86C@<X0>(int a1@<W0>, int a2@<W4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((((a2 + v9 - 2057) ^ (a2 + 35))
                                * (a8 + v8 - (unint64_t)(a3 + a1) < 0x10)) ^ v9)))();
}

void jEHf8Xzsv8K(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10007C8E8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  unsigned int v13 = (((&a3 | 0x5190169B) - &a3 + (&a3 & 0xAE6FE960)) ^ 0x2F45336D) * v7;
  a6 = v8;
  a3 = v9;
  a4 = v13 ^ a1;
  a5 = (((v12 - 1417509657) ^ 0x17DDEF7E)
      - 319819042
      + (((v12 - 1417509657) << ((-73 * (v11 ^ 0xE)) ^ 0x92)) & 0x2FBBDEFC)) ^ v13;
  a7 = (v11 - 791) ^ v13;
  uint64_t v14 = (*(uint64_t (**)(uint64_t *))(v10 + 8 * (v11 ^ 0xD67)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * (((2 * (*(_DWORD *)(v9 - 0x6BA7059072F2C1BBLL) == -563355418)) | (16 * (*(_DWORD *)(v9 - 0x6BA7059072F2C1BBLL) == -563355418))) ^ v11)))(v14);
}

uint64_t sub_10007C9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28 = *(_DWORD *)(a1 + 24)
      + 3804331 * ((-2 - ((~a1 | 0x3DED129D) + (a1 | 0xC212ED62))) ^ 0x4338376B);
  unsigned int v29 = 235795823 * ((&v34 - 1061334659 - 2 * (&v34 & 0xC0BD517D)) ^ 0x54101824);
  int v34 = &STACK[0xB999BAB1C51230F];
  int v35 = v29 ^ 0x78F2562C;
  int v36 = v28 + v29 - 1882357521;
  (*(void (**)(unint64_t **))((char *)*(&off_10026C690 + (int)v28 + 4) + 8 * (int)(v28 ^ 0x96C) - 4))(&v34);
  return sub_100098A1C(3615489095, v28, v28 ^ 0x48B, (uint64_t)v33, v30, (uint64_t)&v32, v28, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_10007CC38()
{
  int v4 = v3 ^ 0x406;
  unsigned int v12 = v3
      - 944348131 * ((((2 * &v10) | 0x21534596) - &v10 + 1867930933) ^ 0x33B00685)
      - 1293;
  uint64_t v10 = &STACK[0x5F548590D8AA6311];
  int v11 = v7;
  (*(void (**)(unint64_t **))(v1 + 8 * (v3 + 642)))(&v10);
  LODWORD(v11) = v3
               - 241568881 * ((&v10 - 1200860867 - 2 * (&v10 & 0xB86C513D)) ^ 0x6E7D557F)
               - 1127;
  uint64_t v10 = v7;
  (*(void (**)(unint64_t **))(v1 + 8 * (v3 ^ 0xF75u)))(&v10);
  if (HIDWORD(v11) == (v3 ^ 0x406 ^ (v0 + 302))) {
    int v5 = v8;
  }
  else {
    int v5 = HIDWORD(v11);
  }
  int v11 = v7;
  LODWORD(v10) = (v3 - 1599) ^ (((((2 * (&v10 ^ 0x804118BC)) | 0x67E0F30A)
                                - (&v10 ^ 0x804118BC)
                                - 871397765) ^ 0x60133333)
                              * v2);
  (*(void (**)(unint64_t **))(v1 + 8 * (v3 + 555)))(&v10);
  LODWORD(v10) = (v4 - 573) ^ (((&v10 & 0xFBD564C | ~(&v10 | 0xFBD564C)) ^ 0x23E0FBB9) * v2);
  int v11 = v9;
  (*(void (**)(unint64_t **))(v1 + 8 * (v4 + 1581)))(&v10);
  return v5 ^ v0;
}

uint64_t sub_10007CE20()
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t, void))(v1 + 8 * (v3 ^ 0x838)))(**(unsigned int **)(v2 + 8 * (v3 ^ 0x16B)), v6, v7);
  *(_DWORD *)(v0 + 16) = v4;
  return result;
}

uint64_t sub_10007CE90()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v1 + 1769609043) & 0x9685E67F ^ 0xA0A)
                                     * ((int)((v3 ^ 0xB5EFF3EF) + 1538698975 + (v0 & 0x6BDFE7DE) - 296133327) >= 0)) ^ v1)))();
}

uint64_t sub_10007CF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v20 = 3804331 * ((((v19 - 144) | 0x65655D98) - ((v19 - 144) & 0x65655D98)) ^ 0x1BB0786E);
  *(void *)(v19 - 120) = v17;
  *(_DWORD *)(v19 - 128) = (v18 + 970) ^ v20;
  *(_DWORD *)(v19 - 124) = (v15 + 696745573 + 28 * (v18 ^ 0x383)) ^ v20;
  *(void *)(v19 - 136) = a15;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v18 + 1534)))(v19 - 144);
  return sub_10007CFC4(v21);
}

uint64_t sub_10007CFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _DWORD *a20)
{
  *a20 = a14;
  return sub_10007CFD8();
}

void sub_10007CFD8()
{
  *(_DWORD *)(v1 + 56) = v0;
}

uint64_t sub_10007D018@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((58
                                * ((*(unsigned char *)(a1 + 32)
                                                   + 3 * (v1 ^ 0x51)
                                                   - *((unsigned char *)*(&off_10026C690 + (v1 ^ 0x3EE)) - 8)
                                                   + 60) != ((-99 * (v1 ^ 0x2D)) ^ 0x76))) ^ (v1 + 555))))();
}

uint64_t sub_10007D0C8@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (a1 + v4)) = *(unsigned char *)(a2 + (a1 + v4));
  return (*(uint64_t (**)(void))(v6 + 8 * (((a1 - 1 == a3) * (v5 ^ 0x4BA)) ^ (v5 - 871))))();
}

uint64_t sub_10007D108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  if (a35 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35
  }
                                                                + 8
                                                                * (((LODWORD(STACK[0x2EC]) != 1491164578) * (v36 - 46)) | (v36 + 733))))(a1, a17, 235795823);
  if (a35 != 1) {
    JUMPOUT(0x10007D248);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35
                                                                       + 8
                                                                       * ((119
                                                                         * (LODWORD(STACK[0x2EC]) == v36 + 1491164508)) ^ (v36 + 1260))))(a1, a17, 235795823, a19);
}

uint64_t sub_10007D28C(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a3 + 375) ^ 0x250) * (v3 == a1)) ^ a3)))();
}

uint64_t sub_10007D2B4@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*(void *)(v4 - 0x6BA7059072F2C1D3) + (v5 - 1394948306 + v2)) = *(unsigned char *)(*(void *)(v4 - 0x6BA7059072F2C1D3) + (v2 - 218024910));
  return (*(uint64_t (**)(void))(v3 + 8 * ((25 * ((a1 ^ 0xFFA) + v2 - 2335 == v1 + 2282)) | a1)))();
}

uint64_t sub_10007D324()
{
  int v2 = STACK[0x4FC];
  unint64_t v3 = STACK[0x2F8];
  STACK[0x348] = (LODWORD(STACK[0x4FC]) - 1704253533);
  return (*(uint64_t (**)(unint64_t))(v0
                                                     + 8
                                                     * (((v2 != 1704253533) * (((v1 - 813) | 0x2E0) ^ 0x2A3)) ^ (v1 + 1271))))(v3);
}

uint64_t sub_10007D37C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((54
                                * (((v2 - 1) ^ ((v0 + v2 - 56247003) < 0xFFFFFFFE)) & 1)) ^ v2)))();
}

void sub_10007D3BC()
{
}

uint64_t sub_10007D3D0(int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  *(_DWORD *)(v63 - 120) = a8;
  *(_DWORD *)(v63 - 132) = v61 & 0xFFFFFFF8;
  *(_DWORD *)(v63 - 128) = v61;
  int v64 = -a4;
  int v65 = a2 + a1;
  char v66 = v60 + a2 + a1;
  char v67 = v66 + 5;
  char v68 = v66 + 6;
  char v69 = v66 + 7;
  char v70 = v66 + 8;
  char v71 = v66 + 9;
  char v72 = v66 + 11;
  *(_DWORD *)(v63 - 136) = (a7 - 1743826615) & 0x67F0AECF;
  uint64_t v73 = (v65 + a3 + v64);
  v75.val[0].i64[0] = ((_BYTE)v65 + (_BYTE)a3 + (_BYTE)v64) & 0xF;
  v75.val[0].i64[1] = (v72 + (_BYTE)v64) & 0xF;
  v75.val[1].i64[0] = (v59 + (_BYTE)v64 + ((a7 + 73) ^ 0xFD)) & 0xF;
  v75.val[1].i64[1] = (v71 + (_BYTE)v64) & 0xF;
  v75.val[2].i64[0] = (v70 + (_BYTE)v64) & 0xF;
  v75.val[2].i64[1] = (v69 + (_BYTE)v64) & 0xF;
  v75.val[3].i64[0] = (v68 + (_BYTE)v64) & 0xF;
  v75.val[3].i64[1] = (v67 + (_BYTE)v64) & 0xF;
  *(int8x8_t *)(v62 - 7 + v73) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v62 - 7 + v73), *(int8x8_t *)(v58 + (v73 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v57 + (v73 & 0xF) - 7), *(int8x8_t *)(v56 + (v73 & 0xF) - 7)))), (int8x8_t)0x7777777777777777), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v75, (int8x16_t)xmmword_10021E900), (int8x8_t)0x505050505050505)));
  return (*(uint64_t (**)(__n128))(a56 + 8 * ((101 * (8 - (v61 & 0xFFFFFFF8) == v64)) ^ a7)))((__n128)xmmword_10021E900);
}

void sub_10007D51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, int a14)
{
  int v17 = v14 & 0x203E6E33;
  int v18 = (v14 & 0x203E6E33) - 319;
  unsigned int v19 = 3804331 * ((2 * (&a10 & 0x3A058450) - &a10 - 973440084) ^ 0xBB2F5E5A);
  a14 = v18 ^ v19;
  a10 = v15;
  a13 = 0x5267DA57ABB8ED88;
  a11 = v19 ^ 0x143A90D2;
  a12 = v19 ^ 0x4CDE25C;
  (*(void (**)(uint64_t *))(v16 + 8 * (v17 ^ 0xB5Fu)))(&a10);
  sub_100073748();
}

uint64_t sub_10007D5C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((89
                                * ((*(unsigned char *)(a3 + a2)
                                                   - *(unsigned char *)(*(void *)(a1 + 8 * (v3 ^ 0x308)) - 4)
                                                   - 71) != (v3 ^ 0x52 ^ ((v3 + 101) | 8) ^ 0x46))) | (v3 + 1138))))();
}

uint64_t sub_10007D638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,unsigned int a39)
{
  int v43 = a9 + 839;
  int v44 = (a9 + 839) ^ (a1 - 899);
  unsigned int v45 = v42[396] ^ ((*v42 & 0x7FFFFFFE | v42[623] & 0x80000000) >> 1);
  v42[623] = (v45 + v41 - (a2 & (2 * v45))) ^ *(_DWORD *)(v39 + 4 * (*v42 & (v44 ^ (a1 - 1))));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * ((592 * (a39 > (v44 ^ (a1 - 415)))) ^ v43)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_10007D6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17
                                                              + 8
                                                              * (((*(_DWORD *)(v19 + 72) == 1704253544)
                                                                * ((((a5 - 575) ^ 0x6D) - v18 - 259) ^ 0x5A164EAB)) ^ (a5 - 575))))(a1, a17, 173609183);
}

uint64_t sub_10007D720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(_DWORD *)(v27 - 104) = (v22 + 63) ^ (((2 * ((v27 - 128) & 0x547DE090) - (v27 - 128) - 1417535634) ^ 0x78204D64) * v24);
  *(void *)(v27 - 128) = v26;
  *(void *)(v27 - 112) = a22;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v22 ^ 0xD40)))(v27 - 128);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((*(_DWORD *)(v27 - 120) == v25 + 681) * (((v22 + 761) | 8) ^ 0x6A7)) ^ v22)))(v28);
}

uint64_t sub_10007D7BC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((51 * ((((v2 - 1405) ^ (v1 == ((v2 - 1369) ^ 0x2AE))) & 1) == 0)) ^ v2)))();
}

uint64_t sub_10007D7F8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((*(unsigned char *)(v2 - 0x6BA7059072F2C1BFLL) & 1) == 0) * ((v0 ^ 0x3DB) + v0 - 863 - 2078)) ^ v0)))();
}

uint64_t sub_10007D83C@<X0>(int a1@<W8>)
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v1 + 1964)))(a1 ^ v2, 51302153) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (((((7 * (v1 ^ 0x1B3) + 21) | 0x10A) + 89) * v4) ^ v1)))();
}

uint64_t sub_10007D89C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((25 * (v1 + v0 + v2 - 348129396 + 1084 < 43 * (v2 ^ 0x66Fu) - 1970)) ^ v2)))();
}

uint64_t sub_10007D8FC(uint64_t result)
{
  return sub_1000842F4(result);
}

void sub_10007D944()
{
}

uint64_t sub_10007D958()
{
  _DWORD *v0 = 1758911813;
  return sub_100080954();
}

uint64_t sub_10007D964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27,int a28,unint64_t a29)
{
  int v34 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * a6);
  int v35 = STACK[0x2DC];
  int v36 = STACK[0x2DC];
  int v37 = STACK[0x2E0];
  int v38 = STACK[0x2E4];
  uint64_t v39 = LODWORD(STACK[0x2E0]);
  int v40 = STACK[0x2E4];
  int v41 = LOBYTE(STACK[0x2F0]) ^ 0x89;
  if (v41 == 2)
  {
    BOOL v46 = (unint64_t)&STACK[0x290] < a29 && v29 < (unint64_t)&STACK[0x2D0];
    return (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8 * (((a27 + v31 + 936) * v46) ^ (v31 + 2238))))(821153383, 4432325);
  }
  else if (v41 == 1)
  {
    BOOL v43 = (unint64_t)&STACK[0x290] < a29 && v29 < (unint64_t)&STACK[0x2D0];
    return (*(uint64_t (**)(uint64_t))(v30 + 8 * (((a28 ^ ((v31 + 2042) | 9) ^ 0x63) * v43) ^ (v31 + 607))))(821153383);
  }
  else
  {
    LODWORD(STACK[0x2D8]) = 2 * (LODWORD(STACK[0x2D8]) ^ v32) + v32 - (v33 & (4 * (LODWORD(STACK[0x2D8]) ^ v32)));
    LODWORD(STACK[0x2DC]) = (v36 ^ v32) + (v35 ^ v32) + v32 - (v33 & (2 * ((v36 ^ v32) + (v35 ^ v32))));
    LODWORD(STACK[0x2E0]) = (v39 ^ v32) + (v37 ^ v32) + v32 - (v33 & (2 * ((v39 ^ v32) + (v37 ^ v32))));
    LODWORD(STACK[0x2E4]) = (v40 ^ v32) + (v38 ^ v32) + v32 - (v33 & (2 * ((v40 ^ v32) + (v38 ^ v32))));
    return v34(a1, v39, v34, a2, &STACK[0x290], a3, a4, a5, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
             a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24);
  }
}

uint64_t sub_10007DB3C@<X0>(int a1@<W8>)
{
  *int v1 = STACK[0x52C];
  v1[85] = STACK[0x444];
  v1[86] = STACK[0x378];
  v1[87] = STACK[0x45C];
  v1[88] = STACK[0x44C];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((STACK[0x3A0] != 0) * ((((a1 ^ 0x200) - 294) | 0x444) - 1490)) ^ ((a1 ^ 0x200) - 120))))();
}

uint64_t sub_10007DBA4()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((10 * (v1 ^ 0x504) - 1878) | 0xC8) ^ 0x1C8)
                                * ((v3 + v2 - 1) < 0x7FFFFFFD)) ^ v1 ^ 0x106)))();
}

uint64_t sub_10007DC08()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v2 + 1340332720) ^ (25 * (v0 <= v3 + 623)))))();
}

uint64_t sub_10007DC3C@<X0>(int a1@<W4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  BOOL v19 = a15 - v16 == -769233200 && a16 == a1 + 17;
  return (*(uint64_t (**)(void))(v17 + 8 * ((v19 * ((a2 + 883) ^ 0x139)) ^ a2)))();
}

uint64_t sub_10007DC80(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((11 * (a3 & ~(v6 ^ (((v7 - 1704253530) & 0xFFFFFFFC) - a6 == -1704253533)))) ^ v6)))();
}

uint64_t sub_10007DCC8@<X0>(int a1@<W1>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, int *a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  *a6 = (a2 >> 2) ^ 0x379AF839;
  return (*(uint64_t (**)(void))(v11 + 8 * ((49 * (a10 == ((v10 + 65 * (a1 ^ 0x39F) - 872) ^ (a1 - 423)))) ^ a1)))();
}

uint64_t sub_10007DD2C(uint64_t a1, uint64_t a2)
{
  STACK[0x328] = *(void *)(v2 + 8 * (v3 - 776));
  return sub_1000ABB34(a1, a2, 1062661589, 44);
}

uint64_t sub_10007DD3C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((98 * ((v0 + 1) < 0x14)) ^ v1)))();
}

uint64_t sub_10007DD54@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 448) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 8816))(0);
}

uint64_t sub_10007DDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  LODWORD(STACK[0x53C]) = STACK[0x298];
  LODWORD(STACK[0x4DC]) = STACK[0x2A0];
  STACK[0x2E8] = STACK[0x260];
  STACK[0x3E8] = STACK[0x288];
  STACK[0x488] = STACK[0x290];
  LODWORD(STACK[0x54C]) = v9;
  return sub_10006EF6C(a1, a2, a3, a4, a5, a6, a7, 563395391, a9);
}

uint64_t sub_10007DDF0(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((504 * ((a2 - 732163551) > 0x2F)) ^ (a4 - 1727))))();
}

void sub_10007DEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  *int v32 = 0x80000000;
  (*(void (**)(uint64_t))(v31 + 8 * ((v30 - 217) ^ 0x91F)))(a30);
  JUMPOUT(0x10007DF4CLL);
}

uint64_t sub_10007E064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  BOOL v24 = v22 != a7 || a19 != ((((v19 - 1094) | 0x184) + 184527822) ^ (v19 - 1094 + v21));
  return (*(uint64_t (**)(void))(v20 + 8 * ((835 * v24) ^ v19)))();
}

uint64_t sub_10007E0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, unint64_t *a14, uint64_t a15, unsigned int a16)
{
  a16 = v16 - 944348131 * ((2 * (&a14 & 0xA75C168) - &a14 + 1971994257) ^ 0xD6939ADF) - 1105;
  a14 = &STACK[0x5F548590D8AA63C9];
  a15 = a10;
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v18 + 8 * (v16 ^ 0xF4Eu)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (int)(((a12 == v17)
                                                   * (((v16 - 411125819) & 0xC35EDE3B) + ((v16 - v19 - 878) ^ 0xFFFFF813))) ^ v16)))(v20);
}

void sub_10007E180()
{
}

uint64_t sub_10007E194@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, unint64_t *a6, uint64_t a7, unsigned int a8)
{
  a8 = v10
     - 944348131
     * (((&a6 ^ 0x314AC0E1 | 0xCC251B0C) + (&a6 ^ 0x240B00 | 0x33DAE4F3)) ^ 0x92776FAE)
     - 788;
  a6 = &STACK[0x5F548590D8AA63C1];
  a7 = a1;
  (*(void (**)(unint64_t **))(v8 + 8 * (v10 + 1147)))(&a6);
  a6 = a4;
  LODWORD(a7) = v10
              - 241568881
              * ((((&a6 | 0xDDC2490C) ^ 0xFFFFFFFE) - (~&a6 | 0x223DB6F3)) ^ 0xF42CB2B1)
              - 622;
  uint64_t v11 = (*(uint64_t (**)(unint64_t **))(v8 + 8 * (v10 + 1158)))(&a6);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((4 * (((a4 == 0) ^ (114 * (v10 ^ 0xEA) + v9 + 92)) & 1)) & 0xF7 | (8 * (((a4 == 0) ^ (114 * (v10 ^ 0xEA) + v9 + 92)) & 1)) | (114 * (v10 ^ 0x4EA)))))(v11);
}

uint64_t sub_10007E2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 1424) = ((a5 + 1000 + v5) ^ 0x8663C29D) + *(_DWORD *)(a2 + 4);
  *(void *)(*(void *)(a1 + 96) + 520) = *(void *)(a2 + 8) + 1;
  return 0;
}

uint64_t sub_10007E324@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(v1 + 96) + 528) = 434174314;
  *(_DWORD *)(*(void *)(v1 + 96) + 532) = 1758911813;
  *(void *)(*(void *)(v1 + 96) + 536) = *(void *)(v1 + 96) + 544;
  uint64_t v4 = *(void *)(v2 + 8) + (*(_DWORD *)(v2 + 4) - v3);
  unsigned int v5 = 831981571 * (((v8 | 0xE332320C) - v8 + (v8 & 0x1CCDCDF0)) ^ 0x7A93E228);
  uint64_t v9 = *(void *)(v1 + 96) + 0x5E8E72AB319E4499;
  uint64_t v10 = v4;
  v8[0] = (v3 - 429451004) ^ v5;
  v8[1] = v5 + 1299;
  (*(void (**)(_DWORD *))(a1 + 19160))(v8);
  int v6 = v11;
  *(void *)(*(void *)(v1 + 96) + 512) = *(void *)(v2 + 8) + (*(_DWORD *)(v2 + 4) - v3);
  return (-896403937 * v6 - 1561189052);
}

void sub_10007E464()
{
}

uint64_t sub_10007E48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,unsigned int a24)
{
  if (a24 < 0xFD887C7E != (v25 - 184117388) < 0xFD887C7E) {
    BOOL v26 = (v25 - 184117388) < 0xFD887C7E;
  }
  else {
    BOOL v26 = v25 - 184117388 > a24;
  }
  return (*(uint64_t (**)(void))(v24 + 8 * ((v26 * (((366 * (a6 ^ (a6 + 4)) - 936) | 3) - 441)) ^ (a8 + a6 + 1169))))();
}

void sub_10007E514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _DWORD *a5)
{
  *a5 = v5;
}

void sub_10007E538()
{
  LODWORD(STACK[0x428]) = v0;
  LODWORD(STACK[0x4CC]) = v1;
  LODWORD(STACK[0x42C]) = v2;
  LODWORD(STACK[0x43C]) = v3;
  LODWORD(STACK[0x304]) = v4 + 64;
  JUMPOUT(0x1000745B0);
}

uint64_t sub_10007E568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23)
{
  *(&a23 + v23 - 301084339) = 119;
  return (*(uint64_t (**)(void))(v25 + 8 * ((1224 * ((unint64_t)(v23 - 301084338) < 0x40)) ^ (a7 + v24 + 958))))();
}

uint64_t sub_10007E5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v13 = v7 == v11 && v9 != ((a7 + ((v8 - 521) | 0x40) - 4) ^ (v8 - 457));
  return (*(uint64_t (**)(void))(v10 + 8 * ((389 * v13) ^ v8)))();
}

uint64_t sub_10007E5F8@<X0>(int a1@<W1>, char a2@<W6>, uint64_t a3@<X8>)
{
  int v13 = ((v12 ^ a1) + v8) & v9;
  *(_DWORD *)(*v6 + 4 * (v3 + v4 + v13 - 570)) = v10;
  return (*(uint64_t (**)(void))(a3 + 8 * (((((v11 == v13 + 669 + v5) ^ (v13 + a2)) & 1) * v7) ^ v13)))();
}

uint64_t sub_10007E65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v8 = v5 < v6;
  if (v8 == a3 - 0xAD4458B9BF006CLL < v3 + (unint64_t)((((v4 ^ 0x4B67FA46) - 2037) | 0xA8u) - 37) + 37) {
    BOOL v8 = a3 - 0xAD4458B9BF006CLL < v5;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((16 * v8) | (32 * v8) | v4 ^ 0x4B67FA46)))();
}

uint64_t sub_10007E6D4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1762 * ((v1 ^ 0x77E5D731u) + v0 < (((v1 ^ 0x22B) + 622) | 0xAu) + 2147482276)) ^ v1 ^ 0x22B)))();
}

uint64_t sub_10007E748()
{
  unint64_t v4 = STACK[0x368] + 0xB999BAB1C512103;
  STACK[0x430] = v4;
  int v5 = 235795823 * ((((v3 - 192) | 0x3D2F07D7) - ((v3 - 192) & 0x3D2F07D7)) ^ 0xA9824E8E);
  *(_DWORD *)(v3 - 184) = v5 ^ 0x78F2562C;
  *(_DWORD *)(v3 - 180) = v2 - 1882357529 + v5 + 46;
  *(void *)(v3 - 192) = v4;
  (*(void (**)(uint64_t))(v1 + 8 * (v2 ^ 0x946)))(v3 - 192);
  STACK[0x328] = *(void *)(v1 + 8 * v2);
  STACK[0x2C8] = v0;
  return sub_1000ABB34(1062661589, 44, v0);
}

uint64_t sub_10007E820(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((54 * (((((a3 ^ 0x85F) + 2143) ^ (v3 < ((3 * (a3 ^ 0x85F)) ^ 0x35u))) & 1) == 0)) ^ a3)))();
}

void sub_10007E86C()
{
  STACK[0x328] = *(void *)(v0 + 8 * (v1 - 761));
  JUMPOUT(0x1000ABB28);
}

uint64_t sub_10007E894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,unsigned int a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  int v27 = (a25 ^ a8) - ((2 * (a25 ^ a8)) & 0xF0023CC8) + a20;
  BOOL v28 = ((2 * v27) & 0x7EFDF64E ^ 0x70003448) + (v27 ^ 0xC77FE543) - 638222849 == 427063590;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(v25
                                                                                                 + 8
                                                                                                 * (((4 * v28) | (8 * v28)) ^ (v26 - 22))))(a1, a2, a21, a4, a5, 3867903705, 22);
}

uint64_t sub_10007E92C()
{
  *(void *)(v6 - 136) = v4;
  *(void *)(v6 - 120) = v2;
  *(_DWORD *)(v6 - 112) = (v3 - 627) ^ (((v6 + 1569708531 - 2 * ((v6 - 136) & 0x5D8FDA7B)) ^ 0x8E2D8871) * v0);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v3 + 654)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((462 * (*(_DWORD *)(v6 - 128) > (v5 + v3 - 1519 - 218))) ^ v3)))(v7);
}

uint64_t sub_10007E9CC()
{
  *(void *)(v3 - 112) = v5;
  *(_DWORD *)(v3 - 120) = v0
                        + 831981571 * (((~(v3 - 128) & 0xAD7B35B8) - (~(v3 - 128) | 0xAD7B35B9)) ^ 0x34DAE59D)
                        + 994;
  *(void *)(v3 - 128) = v2;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0xBC1)))(v3 - 128);
}

void sub_10007EA6C(int a1@<W8>, uint64_t a2, uint64_t a3, int a4, unsigned int a5)
{
  unsigned int v9 = 944348131 * ((((2 * &a3) | 0x25FABA30) - &a3 + 1828889320) ^ 0x31E4F956);
  a3 = v6;
  a4 = v7 - v9 + 954;
  a5 = a1 + v9 - (((v7 + 1963) ^ 0x852C4D9B) & (v8 - 366726626)) - 1213711352;
  (*(void (**)(uint64_t *))(v5 + 8 * (v7 ^ 0x924)))(&a3);
  JUMPOUT(0x10006F9FCLL);
}

uint64_t sub_10007EB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  unint64_t v36 = (*(_DWORD *)(a8 + v28) ^ v26) + HIDWORD(v29);
  *(_DWORD *)(a8 + 4 * a5) = v36 + ((23 * (v34 ^ 0x1C5) + v35) & v33 ^ (v26 - 155)) - (v27 & (2 * v36));
  *(_DWORD *)(a26 + v28) = HIDWORD(v36) + v26 - 2 * HIDWORD(v36);
  BOOL v38 = v31 + 720971691 > 543594905 || v31 + 720971691 < v30;
  return (*(uint64_t (**)(void))(v32 + 8 * ((v34 + 228) ^ (2016 * v38))))();
}

uint64_t sub_10007EB94()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((STACK[0x3A0] != 0) * (((v1 - 294) | 0x444) - 1490)) ^ (v1 - 120))))();
}

void sub_10007EBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v27 - 104) = a15;
  *(_DWORD *)(v27 - 112) = (v25 | 0xE4)
                         - 1224239923
                         * ((((v27 - 144) | 0xAB3AC3) - (v27 - 144) + ((v27 - 144) & 0xFF54C538)) ^ 0xF218C714)
                         + 243;
  *(void *)(v27 - 128) = v26;
  *(void *)(v27 - 120) = a22;
  *(void *)(v27 - 144) = a25;
  *(void *)(v27 - 136) = v26;
  JUMPOUT(0x10008783CLL);
}

uint64_t sub_10007EC50@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v30 = (v27 - 1207) | 0xEC;
  HIDWORD(a19) = a1;
  uint64_t v31 = (*(uint64_t (**)(uint64_t, void))(v29 + 8 * (v30 + 1363)))(a4, 0);
  (*(void (**)(uint64_t))(v29 + 8 * (v30 ^ 0xAB2)))(v31);
  uint64_t v32 = (*(uint64_t (**)(void))(v29 + 8 * (v30 + 1362)))();
  return sub_10007ECC8(v32, v33, v34, v35, v36, v37, v38, v39, a2, a3, a4, a5, v28, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_10007ECC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  unsigned int v32 = *(_DWORD *)(v28 + 4 * (v26 - 1));
  *(_DWORD *)(v28 + 4 * v26) = *(_DWORD *)(a25 + 4 * v30)
                               + v30
                               + ((1664525 * (v32 ^ (v32 >> 30))) ^ *(_DWORD *)(v28 + 4 * v26));
  int v33 = (v27 + 1077033186) ^ v25;
  *(_DWORD *)(v31 - 152) = v33;
  *(_DWORD *)(v31 - 148) = v33 ^ 0xF7;
  *(_DWORD *)(v31 - 112) = v25;
  *(_DWORD *)(v31 - 108) = (v27 + 1077033186) & 0x4C7A7D63 ^ v25;
  *(_DWORD *)(v31 - 144) = v25 + v27 - 1501686873;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (v27 + 1400)))(v31 - 152);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * *(int *)(v31 - 128)))(v34);
}

uint64_t sub_10007ED84(int a1, uint64_t a2, uint64_t a3, int a4)
{
  v10.i64[0] = 0x7777777777777777;
  v10.i64[1] = 0x7777777777777777;
  uint64_t v11 = v7 + v8 + a1 + (a4 ^ 0x6EFu);
  int8x16_t v12 = *(int8x16_t *)(v5 + v11 - 15);
  int8x16_t v13 = *(int8x16_t *)(v5 + v11 - 31);
  uint64_t v14 = v4 + v11;
  *(int8x16_t *)(v14 - 15) = veorq_s8(v12, v10);
  *(int8x16_t *)(v14 - 31) = veorq_s8(v13, v10);
  return (*(uint64_t (**)(void))(v9 + 8 * ((1271 * ((v6 & 0xFFFFFFE0) == 32)) ^ (a4 + 67))))();
}

uint64_t sub_10007EDE8@<X0>(unsigned int a1@<W8>)
{
  *(_DWORD *)(v6 + 4 * a1) = a1 + (v1 ^ (v1 >> 30)) * v3;
  return (*(uint64_t (**)(void))(v5 + 8 * (((a1 < 0x26F) * v2) ^ v4)))();
}

uint64_t sub_10007EE14()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((508
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                 + ((47 * (v3 ^ 0xCA)) ^ (v0 - 1457) ^ (*(unsigned __int8 *)(v2 + 3) - 134)) == v0)) ^ v3)))();
}

uint64_t sub_10007EE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  BOOL v20 = v17 > -1876501194;
  *(_DWORD *)(a14 + 4 * (v18 - 1379738350)) = v15;
  int v21 = ((v14 + 283) ^ 0x9D9BFC7F) + v18;
  int v22 = v20 ^ (v21 < 1876501193);
  BOOL v23 = v21 < v16;
  if (!v22) {
    BOOL v20 = v23;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * ((111 * v20) ^ v14)))();
}

uint64_t sub_10007EEE4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, int a4, int a5, unint64_t *a6, int a7)
{
  int v10 = a1 - 1628;
  unsigned int v11 = 3804331 * ((-980822518 - (&a3 | 0xC589D60A) + (&a3 | 0x3A7629F5)) ^ 0x44A30C03);
  a6 = &STACK[0x5267DA57ABB8ED88];
  a7 = (a1 - 1607) ^ v11;
  a4 = v11 ^ 0x143A90D2;
  a5 = ((v9 ^ 0x5CCFF2DC) - 1476530304 + (((a1 - 1628) ^ 0x399FE566) & (2 * v9))) ^ v11;
  a3 = v7;
  uint64_t v12 = (*(uint64_t (**)(uint64_t *))(v8 + 8 * ((a1 - 1628) ^ 0x9B3)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((1145
                                              * (*(_DWORD *)(v7 - 0x6BA7059072F2C1BBLL) == ((442 * (v10 ^ 0xDD)) ^ 0xDE6BE392))) ^ v10)))(v12);
}

uint64_t sub_10007F00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((14 * (a5 + 1 == v9 + 64)) ^ a8)))();
}

uint64_t sub_10007F0CC(int a1)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((577 * (*(_DWORD *)(v2 + 4 * v3) == a1 + (v1 ^ 0x1BF) - 1492)) ^ v1)))();
}

unsigned int *sub_10007F100@<X0>(unsigned int *result@<X0>, char a2@<W8>)
{
  unsigned int v4 = ((*(_DWORD *)(*(void *)(v2 - 0x5E8E72AB319E4281) + 4 * v3) ^ 0xE4E2B2A1) >> a2) ^ 0x27FE7EFE;
  *uint64_t result = v4 & 0x79AA9A81 ^ 0x13FB22D7 ^ ((v4 & 0x10A08080 | 0xEF5A3E69) - (v4 & 0x690A1A00 | 0x10A5C196) + 279298454);
  return result;
}

uint64_t sub_10007F180(int a1, int a2, int a3)
{
  *(int8x8_t *)(v3 - 7 + a1 + v6 + v7 - a2 + 1268 + ((a3 - 296) | 0x100u)) = veor_s8(*(int8x8_t *)(v4- 7+ a1+ v6+ v7- a2+ 1268+ ((a3 - 296) | 0x100u)), (int8x8_t)0x7777777777777777);
  return (*(uint64_t (**)(void))(v8 + 8 * ((1385 * (a2 - (v5 & 0xFFFFFFF8) == -8)) ^ a3)))();
}

void sub_10007F1E8()
{
}

uint64_t sub_10007F204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57)
{
  unint64_t v71 = ((~(v59 - 144) | 0x67AA49DF751AC8F0) + ((v59 - 144) | 0x9855B6208AE5370FLL)) ^ 0x90E50CDE1E487E57;
  LODWORD(a32) = 627257967;
  LODWORD(a31) = 627257862;
  int32x4_t v69 = vdupq_n_s32(0xE5F37574);
  int32x4_t v70 = vdupq_n_s32(0x7FFFFFFEu);
  int32x4_t v68 = vdupq_n_s32(0x72F9BABAu);
  HIDWORD(a11) = -1203575031;
  HIDWORD(a14) = -272236544;
  a56 = 1928968890;
  a57 = -336524699;
  HIDWORD(a37) = dword_100285618;
  *(void *)(v59 - 120) = dword_100285608 - 235795823 * v71;
  *(_DWORD *)(v59 - 112) = -318040021 - 235795823 * v71;
  *(_DWORD *)(v59 - 108) = (235795823 * v71) ^ 0xED0B1841;
  *(void *)(v59 - 136) = -235795823 * v71;
  *(_DWORD *)(v59 - 144) = -235795823 * v71;
  *(_DWORD *)(v59 - 128) = (235795823 * v71) ^ 0xED0B1817;
  *(_DWORD *)(v59 - 124) = (235795823 * v71) ^ 0x787B9041;
  (*(void (**)(uint64_t))(v57 + 19336))(v59 - 144);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, unint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, void, int *, int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * *(int *)(v59 - 140)))(1340331655, v60, v61, v62, v63, v64, v65, v66, a9, v58, a11, &a47, ((unint64_t)&a37 + 4) % 0x25 + 16, a14, 241568881* ((2 * ((v59 - 144) & 0xA72BA0363416570) - (v59 - 144) - 0xA72BA0363416578) ^ 0xFAD891754AAF9ECALL)+ 5119, 241568881* ((2 * ((v59 - 144) & 0xA72BA0363416570) - (v59 - 144) - 0xA72BA0363416578) ^ 0xFAD891754AAF9ECALL),
           v68.i64[0],
           v68.i64[1],
           v69.i64[0],
           v69.i64[1],
           v70.i64[0],
           v70.i64[1],
           v71,
           a24,
           a25,
           0,
           &dword_100285618,
           &dword_100285608,
           a29,
           a30,
           a31,
           a32,
           241568881 * ((v59 - 144) ^ 0xF55D489D6110442),
           v57,
           &a45,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_10007F4BC()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1607)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((46 * (STACK[0x390] != 0)) ^ (v0 + 480))))();
}

uint64_t sub_10007F4F8@<X0>(int a1@<W2>, int a2@<W5>, int a3@<W8>)
{
  uint64_t v8 = (unsigned int *)(v6 + 4 * v4);
  uint64_t v9 = v4 + 1;
  unsigned int *v8 = *(_DWORD *)(v5 + 4 * (*(_DWORD *)(v6 + 4 * v9) & 1)) ^ v8[397] ^ ((*(_DWORD *)(v6 + 4 * v9) & 0x7FFFFFFE | (a1 + a3 - 845 + 329) & v3) >> 1);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v9 == 227) * a2) ^ a3)))();
}

uint64_t sub_10007F554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 a6)
{
  v7.n128_u64[0] = (v6 + 9) & 0xF;
  v7.n128_u64[1] = (v6 + 8) & 0xF;
  v8.n128_u64[0] = (v6 + 7) & 0xF;
  v8.n128_u64[1] = (v6 + 6) & 0xF;
  v9.n128_u64[0] = (v6 + 5) & 0xF;
  v9.n128_u64[1] = (v6 + 4) & 0xF;
  v10.n128_u64[0] = 0x1717171717171717;
  v10.n128_u64[1] = 0x1717171717171717;
  return sub_10007F638(a1, a2, a3, a4, a5, a1 & 0xFFFFFFF0, 0, a6, v7, v8, v9, (__n128)xmmword_10021E8F0, v10);
}

uint64_t sub_10007F638(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, int a14)
{
  uint64_t v28 = (v18 + v17 - a13);
  uint64_t v29 = ((_BYTE)v18 + (_BYTE)v17 - (_BYTE)a13) & 0xF;
  uint64_t v30 = v21;
  v31.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v31.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v24, a5).u64[0];
  int8x16_t v32 = vrev64q_s8(vmulq_s8(v31, a6));
  *(int8x16_t *)(v22 + v28) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v14 + (v28 & 0xF) - 15), *(int8x16_t *)(v20 + v28)), veorq_s8(*(int8x16_t *)(v16 + (v28 & 0xF) - 15), *(int8x16_t *)((v28 & 0xF) + v15 - 14))), vextq_s8(v32, v32, 8uLL));
  return (*(uint64_t (**)(void))(v23 + 8 * (((2 * (a13 + v19 - 440 == a12)) | (4 * (a13 + v19 - 440 == a12))) ^ a14)))();
}

uint64_t sub_10007F6BC()
{
  int v5 = STACK[0x250];
  *(_DWORD *)STACK[0x288] = v1 + 1;
  unsigned int v6 = ((v0 ^ (v0 >> 11)) << 7) & 0x9D2C5680 ^ v0 ^ (v0 >> 11);
  unsigned int v7 = (v6 << ((v4 + 56) ^ 0x69)) & 0xEFC60000 ^ v6;
  unint64_t v8 = STACK[0x260] + (v5 - 1354851959);
  unsigned int v9 = -1805087677
     * ((*(_DWORD *)(*(void *)STACK[0x2A8] + (*(_DWORD *)STACK[0x2A0] & 0x57FB0EB0)) ^ v8) & (2
                                                                                              * (((v4 - 302) | 0x101) ^ 0x184)
                                                                                              + v2));
  unint64_t v10 = -1805087677 * (v9 ^ HIWORD(v9));
  LOBYTE(v10) = *((unsigned char *)*(&off_10026C690 + ((v4 - 712) ^ 0xC2)) + (v10 >> 24) - 8) ^ v7 ^ 0xBC ^ (v7 >> 18) ^ 0xBC ^ *((unsigned char *)*(&off_10026C690 + ((v4 - 712) ^ 0x7A)) + (v10 >> 24) - 12) ^ *((unsigned char *)*(&off_10026C690 + ((v4 - 712) ^ 0xF1)) + (v10 >> 24) + 5) ^ v10 ^ (-85 * BYTE3(v10));
  *(unsigned char *)unint64_t v8 = v10;
  return (*(uint64_t (**)(void))(v3 + 8 * ((191 * (v5 - (v10 != 0) == 1354851958)) ^ (v4 - 712))))();
}

uint64_t sub_10007F850(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((121 * (v4 + v3 + ((a3 - 388) | 0x401u) - 1027060661 < 8)) ^ a3)))();
}

uint64_t sub_10007F8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v36 = 831981571 * ((v35 - 168) ^ 0x99A1D024);
  *(void *)(v35 - 160) = a27;
  *(_DWORD *)(v35 - 168) = v36 ^ a16;
  *(_DWORD *)(v35 - 164) = v36 + v34 + 1185;
  (*(void (**)(uint64_t))(v33 + 8 * (v34 + 2420)))(v35 - 168);
  uint64_t v37 = STACK[0x2D4] & 0x3F;
  *((unsigned char *)&STACK[0x290] + (v37 ^ 0x2E)) = -9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33
                                                                       + 8
                                                                       * ((783 * ((v37 ^ 0x2E) > 0x37)) ^ v34)))(a33, 1284, 413, 2342826110);
}

uint64_t sub_10007F988(uint64_t result)
{
  uint64_t v2 = *v1;
  *(void *)uint64_t result = 0;
  *(void *)(result + 8) = 0x4E4F97F54E4F97F5;
  *(void *)(result + 16) = 0x1081360CFECBCDLL;
  *(_DWORD *)(result + 24) = -563355418;
  *(void *)(v2 - 0x55D5CC6D86BC0F1FLL) = result + 0x6BA7059072F2C1D3;
  *((_DWORD *)v1 + 3) = -563355418;
  return result;
}

uint64_t sub_10007F9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v28 = ((-1813384685 - ((v27 - 144) | 0x93E9F213) + ((v27 - 144) | 0x6C160DEC)) ^ 0xB6EC9B98) * v26;
  *(_DWORD *)(v27 - 140) = -v28;
  *(_DWORD *)(v27 - 128) = (v24 + 1353) ^ v28;
  *(void *)(v27 - 136) = a24;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v24 + 1996)))(v27 - 144);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (int)(((*(_DWORD *)(v27 - 144) == -56550210)
                                                   * (((v24 + 1117) ^ 0xFFFFFC0E) + (v24 ^ 0x7A5))) | v24)))(v29);
}

uint64_t sub_10007F9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v18 - 120) = a14;
  *(void *)(v18 - 136) = v14;
  *(_DWORD *)(v18 - 112) = (v16 + 892) ^ (69008221
                                        * ((((v18 - 136) | 0xA5C87F5D) - ((v18 - 136) & 0xA5C87F5D)) ^ 0x766A2D57));
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 2173)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((57 * (*(_DWORD *)(v18 - 128) != v17 + 41 * (v16 ^ 0xC0) - 1064)) ^ v16)))(v19);
}

void sub_10007FA9C()
{
}

uint64_t sub_10007FB10(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((*(_DWORD *)(v7 + 72) == a5 + 7) * (v6 + a4 + 1858)) ^ (v6 + a4 + 228))))();
}

uint64_t sub_10007FB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_100099474(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_10007FB68(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 88) = 67;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 80) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_10007FB88(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 64) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_10007FBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(void))(v13 + 8 * (((2 * (v15 != a13)) | (32 * (v15 != a13))) ^ v14)))();
}

uint64_t sub_10007FBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v17 - 128) = v13;
  *(void *)(v17 - 112) = a12;
  *(_DWORD *)(v17 - 104) = (v15 + 421) ^ (((v17 - 128) ^ 0xD3A2520A) * v14);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v15 + 1702)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * ((((v15 ^ (*(_DWORD *)(v17 - 120) > v16)) & 1)
                                              * ((v15 - 385058699) & 0x16F387DD ^ 0x2B1)) ^ v15)))(v18);
}

uint64_t sub_10007FC84()
{
  return 4294925278;
}

uint64_t sub_10007FC8C(int a1, int a2, int a3)
{
  uint64_t v9 = (a2 + a1 + a3);
  unint64_t v10 = v9 + v8 + 1;
  uint64_t v11 = ((523 * (v3 ^ 0x875) + 861821281) & 0xCCA1A7FF ^ 0x578) & v9;
  uint64_t v12 = v11 - v9;
  unint64_t v13 = v6 + v12;
  ++v11;
  unint64_t v14 = v6 + v11;
  unint64_t v15 = v5 + v12;
  unint64_t v16 = v5 + v11;
  unint64_t v17 = v4 + v12;
  unint64_t v18 = v4 + v11;
  BOOL v20 = v14 > v8 && v13 < v10;
  if (v16 > v8 && v15 < v10) {
    BOOL v20 = 1;
  }
  int v23 = v18 > v8 && v17 < v10 || v20;
  return (*(uint64_t (**)(void))(v7 + 8 * ((247 * (v23 ^ 1)) ^ v3)))();
}

uint64_t sub_10007FD34(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_100267840 + ((100 * (*(_DWORD *)(a2 + 4) == 1704253534)) ^ 0xA5u)))();
}

uint64_t sub_10007FD70@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((v2 == 24) * a1) | v3)))();
}

uint64_t sub_10007FDD0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16)
{
  *(void *)(&a16 + a1 + ((v17 - 289) ^ 0xFFFFFFFFEE0DD0CFLL)) = 0x7777777777777777;
  return (*(uint64_t (**)(void))(v18 + 8 * ((2036 * ((v16 & 0x38) == 8)) ^ v17)))();
}

void sub_10007FE24(int a1@<W8>, int a2, __int16 a3, char a4, char a5, char a6, char a7, char a8, char a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,char a25,char a26,char a27,char a28,char a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,char a44,char a45,char a46,char a47,char a48,char a49,char a50,char a51,char a52,char a53)
{
  uint64_t v59 = *(unsigned int **)(v57 + 8 * (a1 ^ 0x1E4));
  uint64_t v60 = *v59;
  uint64_t v61 = *(void *)(v57 + 8 * (a1 ^ 0x1C1));
  uint64_t v62 = *(unsigned char **)(v61 - 4);
  a24 = *v62 - 106;
  a25 = v62[1] - 106;
  a26 = v62[2] - 106;
  a27 = v62[3] - 106;
  a28 = v62[4] - 106;
  a29 = v62[5] - 106;
  a30 = v62[6] - 106;
  a31 = v62[7] - 106;
  a32 = v62[8] - 106;
  a33 = v62[9] - 106;
  a34 = v62[10] - 106;
  a35 = v62[11] - 106;
  a36 = v62[12] - 106;
  a37 = v62[13] - 106;
  a38 = v62[14] - 106;
  a39 = v62[15] - 106;
  a40 = v62[16] - 106;
  a41 = v62[17] - 106;
  a42 = v62[18] - 106;
  a43 = v62[19] - 106;
  a44 = v62[20] - 106;
  a45 = v62[21] - 106;
  uint64_t v63 = *(unsigned char **)(v61 - 4);
  a46 = v63[22] - 106;
  a47 = v63[23] - 106;
  a48 = v63[24] - 106;
  a49 = v63[25] - 106;
  a50 = v63[26] - 106;
  a51 = v63[27] - 106;
  a52 = v63[28] - 106;
  a53 = v63[29] - 106;
  uint64_t v64 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v55 + 8 * (a1 ^ 0x8ED)))(v60, &a24, v53);
  int v71 = ((2 * v64) & 0xBF2F29F2) + (v64 ^ 0xDF9794F9);
  if (v71 == -543714055)
  {
    *(_DWORD *)(v58 + 348) |= v56 - 346;
    *(_DWORD *)(v58 + 48) = 1837280493;
    (*(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * (v56 + 2055)))(*v53, v58 + 336, v58 + 340, v58 + 344, v54);
    sub_10008F138();
  }
  else
  {
    if (v71 == -543712953)
    {
      uint64_t v72 = *v59;
      uint64_t v73 = *(unsigned char **)(*(void *)(v57 + 8 * (v56 - 232)) - 4);
      a4 = *v73 - 53;
      a5 = v73[1] - 53;
      a6 = v73[2] - 53;
      a7 = v73[3] - 53;
      a8 = v73[4] - 53;
      a9 = v73[5] - 53;
      a10 = v73[6] - 53;
      a11 = v73[7] - 53;
      a12 = v73[8] - 53;
      a13 = v73[9] - 53;
      a14 = v73[10] - 53;
      a15 = v73[11] - 53;
      a16 = v73[12] - 53;
      a17 = v73[13] - 53;
      a18 = v73[14] - 53;
      a19 = v73[15] - 53;
      a20 = v73[16] - 53;
      a21 = v73[17] - 53;
      a22 = v73[18] - 53;
      a23 = v73[19] - 53;
      uint64_t v64 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v55 + 8 * (v56 + 2085)))(v72, &a4, v53);
      int v74 = (2 * v64) & 0xAF6FBFF2;
      int v71 = (v64 ^ 0x57B7DFF9) - 279071488;
    }
    else
    {
      int v74 = 1736310784;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55
                                                                                          + 8
                                                                                          * ((83
                                                                                            * (v71 + v74 == 17 * (v56 ^ 0x101) + 1192595012)) ^ (v56 + 1361))))(v64, v65, v66, v67, v68, v69, v70);
  }
}

void sub_1000801D0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1000802E8(uint64_t a1, uint64_t a2, double a3, int8x16_t a4, double a5, double a6, int8x16_t a7, int8x16_t a8, int8x16_t a9, int32x4_t a10)
{
  unsigned int v14 = v10 ^ 0x21;
  unint64_t v15 = (const float *)&v13[56].i32[3];
  int8x16_t v16 = (int8x16_t)vld1q_dup_f32(v15);
  a4.i64[0] = v13[57].i64[0];
  a4.i32[2] = v13[57].i32[2];
  int8x16_t v17 = vextq_s8(v16, a4, 0xCuLL);
  int8x16_t v18 = a4;
  v18.i32[3] = v13[57].i32[3];
  int32x4_t v19 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v18, a8), vandq_s8(v17, a7)), 1uLL), *v13);
  v17.i32[0] = *(_DWORD *)(v11 + 4 * (v13[57].i32[0] & 1));
  v17.i32[1] = *(_DWORD *)(v11 + 4 * (v13[57].i32[1] & 1));
  v17.i32[2] = *(_DWORD *)(v11 + 4 * (v13[57].i32[2] & 1));
  v17.i32[3] = *(_DWORD *)(v11 + 4 * (v18.i8[12] & 1));
  *(int8x16_t *)((char *)v13 + 4 * (v14 ^ 0x1B8)) = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v19, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v19, v19), a9)), a10), v17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8 * (int)(v14 ^ 0x21)))(a1, a2, 1269, 1357);
}

uint64_t sub_1000803B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * (((((a9 == 0) ^ (-69 * (v17 ^ 0xDE) + 1)) & 1) * ((229 * (v17 ^ 0x1D1)) ^ 0x2A9)) ^ v17)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, *(void *)(a1 + 24), a12, a13, a14, a15, a16, a17);
}

uint64_t sub_100080428()
{
  unsigned int v3 = LODWORD(STACK[0x324]) + 1142073664;
  int v4 = ((v1 + 372840464) < 0x7BCDF06D) ^ (v3 < 0x7BCDF06D);
  BOOL v5 = v3 < v1 + 372840464;
  if (v4) {
    BOOL v5 = (v1 + 372840464) < 0x7BCDF06D;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((v5 * ((((v0 ^ 0x22B) + 1144) ^ 0xFFFFFBCF) + 49 * (v0 ^ 0x22B))) ^ v0)))();
}

uint64_t sub_1000804A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v50 = (_DWORD *)(a27 + 24 * v43);
  *uint64_t v50 = v48;
  v50[1] = v44;
  *(void *)(v46 + 24 * v43 + 16) = v45;
  v50[4] = a32;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * ((((*(_DWORD *)(a28 + 48 * v47 + 32) + 1020415285) < 0x80000003) * (((v42 ^ 0x2FB) + 751) ^ 0x180)) ^ v42 ^ 0x2FB)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_100080530()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((1613 * (v1 == 1222)) ^ v1 ^ 0x584)))();
}

uint64_t sub_1000805AC()
{
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * (((v1 + v0 + ((v4 + v3 + 462) ^ 0xB25684BD) > 7) * (v3 + 1014)) ^ v3)))(v2);
}

uint64_t sub_1000805F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * (((v27 - 1449786096 >= (v27 - 1449786216 + v28 - 769))
                                              * ((103 * ((v28 + 1436) ^ 0x8DC)) ^ 0x43D)) ^ (v28 + 1436))))(a27);
}

uint64_t sub_10008065C@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v2 - 0x5E8E72AB319E4285);
  int v5 = v4 - 1758911813;
  if (v4 - 1758911813 < 0) {
    int v5 = 1758911813 - v4;
  }
  *(_DWORD *)(v1 - 0x5E8E72AB319E4285) = v4;
  BOOL v6 = (v5 ^ 0x7F63CED3) - 1342243841 + ((v5 << ((v3 - 8) ^ 0xF0 ^ (v3 - 21) & 0xFB)) & 0xFEC79DA6) == 795003602;
  return (*(uint64_t (**)(void))(a1 + 8 * (((8 * v6) | (32 * v6)) ^ v3)))();
}

void sub_10008070C()
{
}

void sub_10008071C(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  int v9 = v7 + 282;
  a4 = v7 + 831981571 * ((&a3 + 2089891314 - 2 * ((unint64_t)&a3 & 0x7C9135F2)) ^ 0xE530E5D6) + 860;
  a3 = a1;
  a5 = v6;
  (*(void (**)(uint64_t *))(v5 + 8 * (v7 + 1593)))(&a3);
  _DWORD *v8 = (v9 ^ 0xD1ADBECD) - *v8;
  sub_1000A20B8();
}

uint64_t sub_100080798@<X0>(int a1@<W0>, int a2@<W4>, int a3@<W6>, int a4@<W7>, uint64_t a5@<X8>)
{
  HIDWORD(v16) = a1 ^ v15;
  LODWORD(v16) = a1 ^ v10;
  int v17 = (a4 ^ v11)
      + (v16 >> 27)
      + (*(_DWORD *)(v14 + 4 * (a5 + v12)) ^ v9)
      + (((a3 ^ v6) + v11 - ((v7 + a2 + 993 - 1912) & (2 * (a3 ^ v6)))) ^ v5);
  return (*(uint64_t (**)(void))(v8 + 8 * ((2738 * (a5 + 1 == v13 + 24)) ^ a2)))(v17
                                                                                             - ((2 * v17 - 575416510) & v7) - 954364570);
}

uint64_t sub_100080858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((500 * (a5 != v5)) ^ v7)))();
}

uint64_t sub_100080888@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + v4 + a1 - 1) = v7;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((228 * (a2 + v4 < (unint64_t)(((v2 ^ 0x1FD) + v5) & v3) - 6)) ^ v2 ^ 0x1FD)))();
}

void sub_1000808C8()
{
  uint64_t v7 = *(void *)(v5 - 0x5E8E72AB319E4281);
  unsigned int v8 = (*(_DWORD *)(v7 + 4 * (v6 - 1)) ^ v2) >> v1;
  *(_DWORD *)(v7 + 4 * (v4 + v0 + 1092)) = v8 + v2 - (v3 & (2 * v8));
  JUMPOUT(0x100080950);
}

uint64_t sub_100080990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v66 = v61 - 88;
  LODWORD(STACK[0x504]) = v60;
  uint64_t v67 = (*(uint64_t (**)(uint64_t, void))(v62 + 8 * (v61 + 1481)))(a60, 0);
  uint64_t v68 = (_DWORD *)STACK[0x2C8];
  uint64_t v69 = *(void *)(STACK[0x2C8] + 16);
  v68[1] = *(_DWORD *)(STACK[0x2C8] + 24);
  v68[2] = v69;
  uint64_t v70 = 8 * (v61 ^ 0xAC8);
  v68[3] = (*(uint64_t (**)(uint64_t))(v62 + v70))(v67);
  *uint64_t v68 = (*(uint64_t (**)(void))(v62 + v70))();
  v63[1] = *(_DWORD *)STACK[0x2C8] + ((1664525 * (*v63 ^ (*v63 >> 30))) ^ v63[1]);
  *(_DWORD *)(v65 - 188) = v64 | 1;
  *(void *)(v65 - 168) = STACK[0x2B8];
  *(_DWORD *)(v65 - 176) = ((v66 - 1827871433) ^ 0xFE) - v64;
  *(_DWORD *)(v65 - 152) = v64 + v66 + 2104631576;
  *(_DWORD *)(v65 - 160) = v64 + v66 - 1827871433 + 123;
  *(_DWORD *)(v65 - 156) = v66 - 1827871433 - v64;
  *(void *)(v65 - 184) = v64 + 2062945556;
  uint64_t v71 = (*(uint64_t (**)(uint64_t))(v62 + 8 * (v66 + 1573)))(v65 - 192);
  return (*(uint64_t (**)(uint64_t))(v62 + 8 * *(int *)(v65 - 192)))(v71);
}

uint64_t sub_100080AE0()
{
  BOOL v5 = v2 + 1376984849 > (int)((v0 - 1645859033) ^ 0x94B0C5D5) || v2 + 1376984849 < v3 - 1990790557;
  return (*(uint64_t (**)(void))(v1 + 8 * ((411 * (((v0 + 39) ^ v5) & 1)) ^ v0)))();
}

uint64_t sub_100080B84(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, int a6)
{
  uint64_t v10 = (((v7 - 556) | 0x80u) ^ a4) + v6;
  BOOL v12 = v8 != 2 && v10 != a2 + ((v7 - 974) | 0x10u) + 24;
  return (*(uint64_t (**)(void))(v9 + 8 * ((v12 * a6) ^ v7)))();
}

uint64_t sub_100080BC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  int v12 = *(unsigned __int8 *)(v8 + (a6 + v11 + 438)) | (a3 << 8);
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v9 + 8 * ((949 * (v10 - 1 == a7)) ^ a8)))(a1, a2, ((v12 + 1797759744) ^ 0x67D7FD5F) - 37954818 + (((2 * a8) ^ 0xCFAFF13E) & (2 * (v12 + 1797759744))));
}

uint64_t sub_100080C38@<X0>(uint64_t a1@<X2>, int a2@<W7>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28)
{
  *(&a28 + a3 + a1) = 119;
  return (*(uint64_t (**)(void))(v29 + 8 * ((1352 * ((unint64_t)(a3 + 1 + a1) < 0x40)) ^ (a2 + v28 + 290))))();
}

uint64_t sub_100080C7C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v12 = (char)(v3 - 2) - (char)(v4 + v2 + 66 + 78);
  LODWORD(STACK[0x2C0]) = a1 + (v12 ^ 0xC7E7FBC6) + ((2 * v12) & 0x8FCFF78C) + 965;
  int v13 = (*(unsigned __int8 *)(a2 + 1128) ^ 0x77) - *(unsigned __int8 *)(v10 + 1148);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((((v13 ^ 0x5E7F9F7F) + v5 + ((v13 << ((v2 + 66) ^ v9)) & v7) != v6) * v11) ^ (v2 - 958))))(44);
}

uint64_t sub_100080CBC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, int a5@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 8) + (a4 + a5)) = ((a3 ^ v7) >> v8)
                                                            - ((((a2 + 48) & 0x7F) - 33) & (2 * ((a3 ^ v7) >> v8)))
                                                            + 119;
  return (*(uint64_t (**)(void))(v5 + 8 * (a2 ^ (1497 * (a4 - 1 == v6)))))();
}

void sub_100080D24()
{
}

void sub_100080D44(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

_DWORD *sub_100080E68(_DWORD *result, uint64_t a2, uint64_t a3, int a4)
{
  *uint64_t result = a4;
  return result;
}

uint64_t sub_100080E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((a7 - 362157433) & 0x159610F5) + 4) * (v8 != a6)) ^ a7)))();
}

uint64_t sub_100080EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v29 - 136) = v25;
  *(void *)(v29 - 128) = v25;
  *(_DWORD *)(v29 - 120) = v27
                         + 69008221
                         * ((((2 * ((v29 - 144) ^ 0x2C1F9B2D)) | 0xC27ADE42) - ((v29 - 144) ^ 0x2C1F9B2D) - 1631416097) ^ 0x9E80A606)
                         - 150;
  *(void *)(v29 - 144) = a25;
  *(void *)(v29 - 112) = v28;
  (*(void (**)(uint64_t))(v26 + 8 * (v27 + 863)))(v29 - 144);
  *(void *)(v29 - 144) = a25;
  *(void *)(v29 - 136) = v25;
  *(_DWORD *)(v29 - 112) = v27
                         - 1224239923
                         * (((((v29 - 144) | 0x14627EE0) ^ 0xFFFFFFFE) - (~(v29 - 144) | 0xEB9D811F)) ^ 0x192E7CC8)
                         - 1063;
  *(void *)(v29 - 104) = a17;
  *(void *)(v29 - 128) = v25;
  *(void *)(v29 - 120) = v28;
  (*(void (**)(uint64_t))(v26 + 8 * (v27 ^ 0xEFC)))(v29 - 144);
  return sub_100074C50();
}

uint64_t sub_100080FA8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  unsigned int v11 = 3804331 * ((-302084566 - (&a3 | 0xEDFE8E2A) + (&a3 | 0x120171D5)) ^ 0x6CD45423);
  a7 = (v10 - 216) ^ v11;
  a6 = a1;
  a4 = v11 ^ 0x14EDA71E;
  a5 = (v9 - 209897288) ^ v11;
  a3 = v7;
  uint64_t v12 = (*(uint64_t (**)(uint64_t *))(v8 + 8 * (v10 + 1952)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((21
                                              * (*(_DWORD *)(v7 - 0x6BA7059072F2C1BBLL) == ((((v10 + 1592) | 0x101)
                                                                                           - 563355709) ^ ((v10 + 1626) | 8)))) ^ v10)))(v12);
}

void sub_100081090(int a1@<W8>, uint64_t a2, int a3, int a4, uint64_t a5)
{
  unsigned int v10 = ((2 * (&a3 & 0x3297F1E8) - &a3 - 848818670) ^ 0xB3BD2BE4) * v7;
  a5 = v8;
  a3 = v5 - v10 - (((a1 ^ 0x1A0B125F) + v9) & 0x61EACE10) + 1039856246;
  a4 = v10 + a1 + 216;
  (*(void (**)(int *))(v6 + 8 * (a1 + 1141)))(&a3);
  sub_10009DD2C();
}

uint64_t sub_100081160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v75 = (v71 + 159) | 0x220;
  *(_DWORD *)uint64_t v74 = 0x80000000;
  (*(void (**)(unint64_t))(v73 + 8 * (v71 ^ 0x91A)))(STACK[0x2C0]);
  int8x16_t v76 = (int8x16_t)vld1q_dup_f32((const float *)v74);
  v77.i64[0] = 0x8000000080000000;
  v77.i64[1] = 0x8000000080000000;
  uint64_t v78 = 131 * (v75 ^ 0x32Au);
  v79.i32[0] = *(_DWORD *)(v74 + 4 * (v78 ^ 0x20D));
  v79.i32[1] = *(_DWORD *)(v74 + 8);
  v79.i32[2] = *(_DWORD *)(v74 + 12);
  int8x16_t v80 = vextq_s8(v76, v79, 0xCuLL);
  int8x16_t v81 = v79;
  v81.i32[3] = *(_DWORD *)(v74 + 16);
  int32x4_t v82 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v81, *(int8x16_t *)&STACK[0x220]), vandq_s8(v80, v77)), 1uLL), *(int8x16_t *)(v74 + 1588));
  v80.i32[0] = *(_DWORD *)(v72 + 4 * (*(_DWORD *)(v74 + 4 * (v78 ^ 0x20D)) & 1));
  v80.i32[1] = *(_DWORD *)(v72 + 4 * (*(_DWORD *)(v74 + 8) & 1));
  v80.i32[2] = *(_DWORD *)(v72 + 4 * (*(_DWORD *)(v74 + 12) & 1));
  v80.i32[3] = *(_DWORD *)(v72 + 4 * (v81.i8[12] & 1));
  *(int8x16_t *)uint64_t v74 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v82, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v82, v82), *(int8x16_t *)&STACK[0x200])), a71), v80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v73
                                                                                                  + 8 * (v75 ^ 0x3F)))(3364485598, 2434003900, 789, 131, 525, 535, 19);
}

uint64_t sub_1000812A4()
{
  (*(void (**)(void))(v0 + 8 * (v1 ^ 0xA5B)))();
  return (*(uint64_t (**)(void))(v0 + 8 * ((85 * (STACK[0x340] == 0)) ^ (v1 - 506))))();
}

uint64_t sub_1000812E4(uint64_t a1, int a2)
{
  BOOL v5 = v4 + 1932435421 > (v2 - 1558283687);
  if (v2 - 1558283687 < (a2 - 1427513506) != v4 + 1932435421 < (a2 - 1427513506)) {
    BOOL v5 = v4 + 1932435421 < (a2 - 1427513506);
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((105 * !v5) ^ a2)))();
}

uint64_t sub_10008135C(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 + 257) ^ 0x75B ^ ((v2 - 301) | 0x22E)) * (v1 == a1)) ^ v2)))();
}

uint64_t sub_100081398()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((*(void *)(*(void *)(v1 + 8 * (((v2 - 301) | 0x141) ^ 0x12F)) - 4) == 0)
                                * (((((v2 - 301) | 0x141) - 284) | 0x108) + ((((v2 - 301) | 0x141) + 1155) ^ 0xDEF))) ^ ((v2 - 301) | 0x141))))();
}

uint64_t sub_1000813EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, unint64_t a13, unint64_t a14, unint64_t a15)
{
  int v20 = 460628867 * ((~((v19 - 160) | 0x6BDD079) + ((v19 - 160) & 0x6BDD079)) ^ 0xB5D4ADFB);
  STACK[0x250] = v18;
  STACK[0x270] = a12;
  STACK[0x268] = a13;
  STACK[0x260] = a15;
  STACK[0x240] = a14;
  *(_DWORD *)(v19 - 152) = v20 + v16 - 1573481390;
  *(_DWORD *)(v19 - 132) = v15 - v20 - 192;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v15 ^ 0xA8F)))(v19 - 160);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8 * ((45 * (*(_DWORD *)(v19 - 136) == (v15 ^ 0x7D0) - 563356660)) ^ v15)))(v21);
}

uint64_t sub_1000814D4()
{
  return sub_1000814E0();
}

uint64_t sub_1000814E0(int8x16_t a1, double a2, double a3, double a4, int8x16_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int8x16_t v20 = *(int8x16_t *)(v19 + (v14 + v17 + v13));
  *(int8x16_t *)(v15 + v13) = vaddq_s8(vsubq_s8(v20, vandq_s8(vaddq_s8(v20, v20), a5)), a1);
  return (*(uint64_t (**)(void))(v18 + 8 * ((60 * (v13 != 48)) ^ (a13 + v16 + 1261))))();
}

void sub_10008152C()
{
}

void sub_10008153C()
{
}

uint64_t sub_100081548@<X0>(int a1@<W8>)
{
  BOOL v6 = ((4 * v5) ^ 0x11FC ^ (v2 + 332) ^ ((v4 ^ (2 * a1)) + v2 - (v4 & (2 * (v4 ^ (2 * a1)))))) <= v1;
  return (*(uint64_t (**)(void))(v3 + 8 * (((2 * v6) | (16 * v6)) ^ v5)))();
}

uint64_t sub_10008158C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  STACK[0x460] = *(void *)(v10 + 8 * v9);
  return sub_1000743A8(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_100081598()
{
  if (v2 >= 0) {
    unsigned int v4 = v2;
  }
  else {
    unsigned int v4 = -v2;
  }
  if (v1 >= 0) {
    unsigned int v5 = v1;
  }
  else {
    unsigned int v5 = -v1;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 | 0x380) + 651) * (v4 > v5)) ^ (v0 | 0x380))))();
}

uint64_t sub_1000815D0@<X0>(uint64_t a1@<X8>, int8x16_t a2@<Q0>, int8x16_t a3@<Q1>, int8x16_t a4@<Q2>, int8x16_t a5@<Q3>, int32x4_t a6@<Q4>, int8x16_t a7@<Q5>)
{
  uint64_t v12 = v10 + 16;
  a7.i64[0] = *(void *)(v12 + 912);
  a7.i32[2] = *(_DWORD *)(v12 + 920);
  int8x16_t v13 = vextq_s8(a2, a7, 0xCuLL);
  int8x16_t v14 = a7;
  v14.i32[3] = *(_DWORD *)(v12 + a1);
  int32x4_t v15 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v14, a4), vandq_s8(v13, a3)), 1uLL), *(int8x16_t *)v12);
  v13.i32[0] = *(_DWORD *)(v8 + 4 * (*(_DWORD *)(v12 + 912) & 1));
  v13.i32[1] = *(_DWORD *)(v8 + 4 * (*(_DWORD *)(v12 + 916) & 1));
  v13.i32[2] = *(_DWORD *)(v8 + 4 * (*(_DWORD *)(v12 + 920) & 1));
  v13.i32[3] = *(_DWORD *)(v8 + 4 * (v14.i8[12] & 1));
  *(int8x16_t *)(v12 + 908) = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v15, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v15, v15), a5)), a6), v13);
  return (*(uint64_t (**)(void))(v11 + 8 * (((2 * (v9 == 4)) | (4 * (v9 == 4))) ^ v7)))();
}

uint64_t sub_1000815DC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 - 838) | 0x44) - 110) * (a1 != 866215440)) ^ v1)))();
}

void sub_100081618()
{
}

uint64_t sub_100081620@<X0>(uint64_t a1@<X2>, char a2@<W6>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30)
{
  int v35 = *((_DWORD *)&a18 + ((v33 + v30) >> (a2 + ((v31 + 72) | 1) - 56)) + 18);
  *(unsigned char *)(a1 + (v33 + v30)) = v35 ^ 0xB2;
  *(unsigned char *)(a1 + (v33 + v30 + 1)) = (BYTE1(v35) ^ 0xA1) - ((2 * (BYTE1(v35) ^ 0xA1)) & 0xEF) + 119;
  *(unsigned char *)(a1 + (v33 + v30 + 2)) = (BYTE2(v35) ^ 0x43) - ((2 * (BYTE2(v35) ^ 0x43)) & 0xEF) + 119;
  *(unsigned char *)(a1 + (v33 + v30 + 3)) = (HIBYTE(v35) ^ 0x58) - ((2 * (HIBYTE(v35) ^ 0x58)) & 0xEF) + 119;
  BOOL v36 = v33 - 1693148158 < (a30 - 2124613016);
  if (v33 - 1693148158 < a3 != a30 - 2124613016 < a3) {
    BOOL v36 = a30 - 2124613016 < a3;
  }
  return (*(uint64_t (**)(void))(v34 + 8 * ((!v36 * v32) ^ v31)))();
}

uint64_t sub_10008171C(int a1, uint64_t a2, uint64_t a3, int a4)
{
  HIDWORD(v18) = a1 ^ v16;
  LODWORD(v18) = a1 ^ v11;
  int v19 = (v17 ^ v12)
      + (v18 >> 27)
      + ((v5 ^ v12 | v6 ^ v12) & (v7 ^ v12) | (v5 ^ v12) & (v6 ^ v12))
      + (*(_DWORD *)(v15 + 4 * (v4 + v13)) ^ v10);
  return (*(uint64_t (**)(void))(v9 + 8 * ((231 * (v4 + 1 != v14 + 44)) ^ a4)))(v19
                                                                                            - ((2 * v19 + 506952120) & v8) - 413180255);
}

uint64_t sub_1000817D8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27)
{
  *(void *)(&a27 + a2 + a1) = 0x7777777777777777;
  return (*(uint64_t (**)(void))(v29 + 8 * (int)((2738 * ((v28 ^ 0x2F7) == (v27 & 0x38))) ^ v28)))();
}

uint64_t sub_10008182C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v31 - 112) = v29;
  *(void *)(v31 - 144) = a25;
  *(void *)(v31 - 136) = v25;
  *(_DWORD *)(v31 - 120) = v27 + 69008221 * ((v31 - 144) ^ 0xD3A2520A) - 114;
  *(void *)(v31 - 128) = v25;
  (*(void (**)(uint64_t))(v26 + 8 * (v27 + 899)))(v31 - 144);
  int v32 = ((v31 - 144) ^ 0xDAFA9674) * v28;
  *(_DWORD *)(v31 - 128) = (v27 + 272) ^ v32;
  *(_DWORD *)(v31 - 140) = -1131453697 - v32 + v30 + 2;
  *(void *)(v31 - 136) = a24;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v27 ^ 0xCAD)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((988 * (*(_DWORD *)(v31 - 144) == (v27 ^ 0xFCA11963))) ^ v27)))(v33);
}

uint64_t sub_100081910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v8
                                                                      + 8
                                                                      * (a6 ^ (8
                                                                             * (v7 < ((v6 + a6 - 1930651701 + 223) | 0xD0u)
                                                                                   - 688)))))(a1, a2, a3, 0);
}

uint64_t sub_100081950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((42 * (a8 + 1 != v9 + 16)) ^ a7)))();
}

uint64_t sub_100081960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v10
                                                    + 8 * ((405 * (((((a5 + v5 + v9) | 0xAE) - 150) & v6) == 0)) ^ a5)))(a1, (v7 - v8));
}

void sub_100081998()
{
}

void sub_1000819A0()
{
}

uint64_t sub_1000819AC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 955) | 0x404) - 1520) * (v1 != a1)) ^ v2)))();
}

uint64_t sub_1000819E4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(void *)(a1 - 7 + v3 + v2 + v4 - v5 + ((v6 - 592853689) & 0x23563B7Fu)) = *(void *)(v7
                                                                                         - 7
                                                                                         + v3
                                                                                         + v2
                                                                                         + v4
                                                                                         - v5
                                                                                         + ((v6 - 592853689) & 0x23563B7Fu));
  return (*(uint64_t (**)(void))(v8 + 8 * ((1716 * (v5 - (a2 & 0xFFFFFFF8) == -8)) ^ v6)))();
}

uint64_t sub_100081A4C()
{
  STACK[0x280] = (unint64_t)&STACK[0x4E07305EAF801E43];
  STACK[0x278] = (unint64_t)&STACK[0x6F85854725FFECD6];
  STACK[0x270] = (unint64_t)&STACK[0x24E69FC949684844];
  STACK[0x268] = (unint64_t)&STACK[0x5E9044A69B37DF3];
  *(void *)(v4 - 192) = &STACK[0x3BD3A467C7BE915D];
  *(_DWORD *)(v4 - 184) = v0
                        - 831981571
                        * ((((2 * ((v4 - 192) ^ 0x5A635D1D)) | 0x9439548E) - ((v4 - 192) ^ 0x5A635D1D) + 904091065) ^ 0x9DE277E)
                        - 825;
  *(_WORD *)(v4 - 180) = 10377
                       - 2051 * ((((2 * ((v4 - 192) ^ 0x5D1D)) | 0x548E) - ((v4 - 192) ^ 0x5D1D) + 21945) ^ 0x277E);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 544)))(v4 - 192);
  int v6 = LOBYTE(STACK[0x317]);
  int v7 = (LOBYTE(STACK[0x314]) << 24) | (LOBYTE(STACK[0x315]) << 16) | (LOBYTE(STACK[0x316]) << 8) | v6;
  LODWORD(STACK[0x2F0]) = v7 + ((v0 - 1040) ^ 0x7440D614) - ((v7 & 0x7440D53F ^ v6 & 5) << (v0 - 61));
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v1 + 8 * ((92 * ((STACK[0x2F4] & 8) == 0)) ^ v0));
  uint64_t v9 = *(void *)(v2 + 8 * (v0 ^ 0x71D));
  STACK[0x210] = v9 - 8;
  STACK[0x218] = v9 + 0x5EC77446536A4B92;
  LODWORD(STACK[0x2D4]) = v3;
  return v8(v5);
}

uint64_t sub_100081D78@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, unint64_t *a5, int a6, unsigned int a7, uint64_t a8, uint64_t a9)
{
  int v13 = v9 + 682;
  unsigned int v14 = (((&a4 | 0x76062D6A) - &a4 + (&a4 & 0x89F9D290)) ^ 0x91330F02) * a1;
  a4 = &STACK[0x4B3FB627E137F332];
  a5 = &STACK[0x5F548590D8AA63B9];
  a9 = v12;
  a6 = v9 + 682 - v14 - 462;
  a7 = 1175189840 - v14;
  uint64_t v15 = (*(uint64_t (**)(unint64_t **))(v11 + 8 * (v9 + 2175)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v11
                                            + 8
                                            * (((*(_DWORD *)(v12 - 0x6BA7059072F2C1BBLL) == ((49 * (v13 ^ 0x39A)) ^ (v10 - 211)))
                                              * ((v13 ^ 0xB80) - 307)) ^ v13)))(v15);
}

uint64_t sub_100081E6C@<X0>(char a1@<W6>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((((v4 == v5 + 669 + v2) ^ (v5 + a1)) & 1) * v3) ^ v5)))();
}

uint64_t sub_100081EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  v11.i64[0] = 0xEEEEEEEEEEEEEEEELL;
  v11.i64[1] = 0xEEEEEEEEEEEEEEEELL;
  v12.i64[0] = 0x7777777777777777;
  v12.i64[1] = 0x7777777777777777;
  uint64_t v13 = (v6 + v8 + 2309);
  int8x16_t v14 = vrev64q_s8(*(int8x16_t *)(v9 + v13 - 15));
  int8x16_t v15 = vextq_s8(v14, v14, 8uLL);
  int8x16_t v16 = vrev64q_s8(*(int8x16_t *)(v9 + v13 - 31));
  int8x16_t v17 = vextq_s8(v16, v16, 8uLL);
  uint64_t v18 = v5 + v13;
  int8x16_t v19 = vrev64q_s8(vaddq_s8(vsubq_s8(v15, vandq_s8(vaddq_s8(v15, v15), v11)), v12));
  *(int8x16_t *)(v18 - 15) = vextq_s8(v19, v19, 8uLL);
  int8x16_t v20 = vrev64q_s8(vaddq_s8(vsubq_s8(v17, vandq_s8(vaddq_s8(v17, v17), v11)), v12));
  *(int8x16_t *)(v18 - 31) = vextq_s8(v20, v20, 8uLL);
  return (*(uint64_t (**)(void))(v10 + 8 * ((1669 * (29 * (a5 ^ 0x92C) - 1157 == (v7 & 0xFFFFFFE0))) ^ (a5 - 1663))))();
}

uint64_t sub_100081F50(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((4080 * (v4 < (a4 ^ 0x216 ^ (a4 + 276) ^ 0xCC2u))) ^ a4)))();
}

uint64_t sub_100081F8C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (int)(((STACK[0x290] & 0xAC162767 ^ 0x598) * (v1 > 0x48399F0F)) ^ (v2 + 593))))();
}

uint64_t sub_100081FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,_DWORD *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  _DWORD *v58 = 0;
  int v62 = v61 & ((v57 ^ (v57 >> 11)) << 7) ^ v57 ^ (v57 >> 11);
  unsigned int v63 = (v62 << 15) & 0xEFC60000 ^ v62 ^ 0x10398E0C ^ (((v62 << 15) & 0xEFC60000 ^ v62) >> 18);
  uint64_t v64 = &a57 + (a26 - 839283907);
  unsigned int v65 = -1805087677 * ((*(_DWORD *)(*a30 + (*a31 & 0x4F6A45DC)) ^ v64) & 0x7FFFFFFF);
  unint64_t v66 = -1805087677 * (v65 ^ HIWORD(v65));
  uint64_t v67 = (v66 >> 24) + 2;
  char v68 = byte_100214930[v67];
  char v69 = byte_100214A58[(v66 >> 24) - 8];
  LOBYTE(v66) = byte_100212BC4[v67 - 4] ^ v66;
  *uint64_t v64 = v69 ^ v63 ^ 0xC ^ v68 ^ v66 ^ (-41 * BYTE3(v66));
  return (*(uint64_t (**)(void))(v59
                              + 8
                              * ((239
                                * (a26
                                 - (((v69 ^ v63 ^ 0xC ^ v68 ^ v66) ^ (-41 * BYTE3(v66))) != 0) != v60)) ^ 0x27C)))();
}

void sub_100081FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned char *a21,uint64_t a22,uint64_t a23,unsigned char *a24,uint64_t a25,unsigned char *a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  a24[3] = (BYTE3(a7) ^ 0x6E) - ((((a7 >> 24) ^ 0x6E) << (((a27 + 77) & 0x97) + 122)) & 0x5E) + 47;
  a21[9] = BYTE5(a1) ^ 0x86;
  a21[15] = BYTE1(a7) ^ 0x9E;
  a26[8] = a7 ^ 0x58;
  a24[9] = (BYTE2(a7) ^ 0x82) - ((2 * (BYTE2(a7) ^ 0x82)) & 0x5E) + 47;
  a26[26] = BYTE4(a1) ^ 0x20;
  if ((v32 ^ 0x1CFFA89239170C78uLL) >= 0x8134422366A90F03) {
    char v31 = (v32 ^ 0x78) - ((2 * (v32 ^ 0x78) - 6) & 0x96) + 72;
  }
  char v37 = v31 ^ 0x4B;
  if ((v32 ^ 0x1CFFA89239170C78uLL) >= 0x8134422366A90F03) {
    char v38 = 3;
  }
  else {
    char v38 = 0;
  }
  char v39 = v37 + v38;
  char v40 = *(unsigned char *)(a31 + 531 + (BYTE6(a1) ^ 0xDLL));
  a21[7] = HIBYTE(a1) ^ 0x5C;
  a26[27] = BYTE1(v32) ^ 0xC;
  a24[10] = 7 * (v40 ^ 0x9C) - ((14 * (v40 ^ 0x9C)) & 0x5E) + 47;
  a21[10] = v39;
  HIDWORD(v41) = *(unsigned __int8 *)(a31 + (((BYTE2(v32) ^ 0x17) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  LODWORD(v41) = (HIDWORD(v41) << 26) ^ (HIDWORD(v41) << 24);
  a26[10] = BYTE4(v32) ^ 0x92;
  a24[14] = (BYTE3(v32) ^ 0x39) - ((2 * (BYTE3(v32) ^ 0x39)) & 0x5E) + 47;
  a24[20] = (v41 >> 25) ^ 0x33;
  a24[4] = ((2 * BYTE6(v32)) | 0xA1) - BYTE6(v32) + 47;
  a24[16] = (BYTE5(v32) ^ 0xA8) - ((2 * (BYTE5(v32) ^ 0xA8)) & 0x5E) + 47;
  unsigned int v42 = *(unsigned __int8 *)(a31 + (((HIBYTE(v32) ^ 0x1C) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a26[20] = v33 ^ 0x42;
  HIDWORD(v41) = v42;
  LODWORD(v41) = (v42 << 26) ^ (v42 << 24);
  a24[15] = (v41 >> 25) ^ 0x33;
  unsigned int v43 = *(unsigned __int8 *)(a19 + (((v33 >> 1) & 0x80 | ((unsigned __int16)v33 >> 9)) ^ 0xE1));
  a26[17] = BYTE3(v33) ^ 0x48;
  a21[14] = BYTE4(v33) ^ 0xCC;
  *a24 = BYTE5(v33) + (~(2 * BYTE5(v33)) | 0xA1) - 80;
  a26[21] = HIBYTE(v33) ^ 0x1F;
  a26[13] = BYTE2(v33) ^ 0x50;
  a26[3] = (v43 ^ 0x8A ^ (v43 >> 2) & 0x17) + 32;
  a21[12] = BYTE6(v33) ^ 6;
  char v44 = *(unsigned char *)(a31 + 531 + (v36 ^ 0x35) + 2 * (v36 & 0xD5 ^ 0x15) - 4 * (v36 & 0xD5 ^ 0x15) + 213) ^ 0x9C;
  a26[11] = BYTE2(v36) ^ 0xB6;
  a24[5] = 7 * v44 - ((14 * v44) & 0x5E) + 47;
  a24[2] = (BYTE3(v36) ^ 0xE4) - ((2 * (BYTE3(v36) ^ 0xE4)) & 0x5E) + 47;
  a26[25] = BYTE1(v36) ^ 0x76;
  unsigned int v45 = *(unsigned __int8 *)(a19 + (((v36 >> 25) & 0x80 | (v36 >> 33) & 0x7F) ^ 0xB1));
  a26[22] = BYTE5(v36) ^ 0xD3;
  a26[18] = HIBYTE(v36) ^ 0x50;
  a26[2] = BYTE1(v35) ^ 0x56;
  a24[1] = v35 ^ 0x7F;
  a26[30] = BYTE3(v34) ^ 0x5F;
  a26[9] = BYTE2(v35) ^ 0xBE;
  a26[19] = (v45 ^ 0x8A ^ (v45 >> 2) & 0x17) + 32;
  a24[7] = (BYTE6(v36) ^ 0x2B) + (~(2 * (BYTE6(v36) ^ 0x2B)) | 0xA1) + 48;
  unsigned int v46 = *(unsigned __int8 *)(a31 + (((BYTE4(v34) ^ 0xF6) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a26[24] = BYTE6(v34) ^ 0x81;
  a26[12] = BYTE5(v34) ^ 0xFD;
  HIDWORD(v41) = v46;
  LODWORD(v41) = (v46 << 26) ^ (v46 << 24);
  a26[1] = HIBYTE(v34) ^ 0x9D;
  a26[23] = (v41 >> 25) ^ 0x1C;
  JUMPOUT(0x100082404);
}

uint64_t sub_100082444(double a1, double a2, double a3, double a4, int8x16_t a5, int8x16_t a6, uint64_t a7, int a8)
{
  int v14 = 163 * (a8 ^ 0x145);
  unsigned int v15 = v12 - 1065286766 + v11 + v14;
  int8x16_t v16 = vrev64q_s8(*(int8x16_t *)(v9 + v15 - 15));
  int8x16_t v17 = vextq_s8(v16, v16, 8uLL);
  int8x16_t v18 = vrev64q_s8(*(int8x16_t *)(v9 + v15 - 31));
  int8x16_t v19 = vextq_s8(v18, v18, 8uLL);
  uint64_t v20 = v8 + v15;
  int8x16_t v21 = vrev64q_s8(vaddq_s8(vsubq_s8(v17, vandq_s8(vaddq_s8(v17, v17), a5)), a6));
  *(int8x16_t *)(v20 - 15) = vextq_s8(v21, v21, 8uLL);
  int8x16_t v22 = vrev64q_s8(vaddq_s8(vsubq_s8(v19, vandq_s8(vaddq_s8(v19, v19), a5)), a6));
  *(int8x16_t *)(v20 - 31) = vextq_s8(v22, v22, 8uLL);
  return (*(uint64_t (**)(void))(v13 + 8 * ((((v14 - 358) & v10) != 32) | v14)))(0);
}

uint64_t sub_1000824EC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1875 * (*(_DWORD *)(v2 - 0x6BA7059072F2C1BBLL) == -563355418)) ^ v0)))();
}

uint64_t sub_10008252C@<X0>(int a1@<W0>, int a2@<W4>, int a3@<W6>, int a4@<W8>)
{
  BOOL v6 = a1 + a4 + 63 < a1 + a4 + ((a3 + a2 + v4 - 440 + 1998) | 1u) - 2057;
  return (*(uint64_t (**)(void))(v5 + 8 * (v6 | (4 * v6) | v4)))();
}

uint64_t sub_100082570(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((53 * (((v5 == a2) ^ ((a5 - 18) ^ (a5 - 123))) & 1)) ^ a5)))();
}

uint64_t sub_1000825A4@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(v3 - 0x5E8E72AB319E4281) + 4 * (v5 - 795003603)) = *(_DWORD *)(*(void *)(v4 - 0x5E8E72AB319E4281)
                                                                                           + 4 * (v5 - 795003603));
  return (*(uint64_t (**)(void))(a1 + 8 * ((1770 * (v2 + v5 - 121 == v1)) ^ v2)))();
}

uint64_t sub_100082604()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ (109 * (v0 != 0x29F83432)))))();
}

uint64_t sub_100082668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v8 = STACK[0x3B0];
  int v9 = *(unsigned __int8 *)(STACK[0x3B0] - 0xB999BAB1C512023) ^ 0x89;
  if (v9 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8 * ((243 * (*(_DWORD *)(v8 - 0xB999BAB1C512027) == ((v7 + 576) ^ 0x58E158CC))) ^ (v7 + 1090))))(a1, 3184604724, 139313950, 2606871779, a5, a6, 1688095615);
  }
  if (v9 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
  }
                                                                         + 8
                                                                         * ((98
                                                                           * (*(_DWORD *)(v8 - 0xB999BAB1C512027) == (((v7 - 800) | 0x1D0) ^ 0x58E15C7C))) ^ (v7 - 133))))(a1, 3659506700, 3135324643, 88);
  unint64_t v11 = STACK[0x288];
  STACK[0x3E0] = 91;
  *(unsigned char *)(v8 - 0xB999BAB1C512028) = ((v11 - 105) ^ 0xBA) * (v11 - 88);
  return (*(uint64_t (**)(void))(v6 + 8 * ((298 * (STACK[0x3E0] == 0)) ^ ((v7 - 812) | 0x6CC))))();
}

uint64_t sub_100082804@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((4 * (((a1 == 0) ^ (v3 - 105 + v2 + 92)) & 1)) & 0xF7 | (8 * (((a1 == 0) ^ (v3 - 105 + v2 + 92)) & 1)) | (v3 + 663))))();
}

uint64_t sub_100082850@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((15 * (v2 == ((300 * ((v1 + 1779212333) & 0x95F35EF7 ^ 0x6A7)) ^ 0x4BFBF339))) ^ v1)))();
}

uint64_t sub_1000828C4@<X0>(int a1@<W8>)
{
  int v4 = a1 + v2 + ((v1 - 265) ^ 0x1DEu) + 853 < ((v1 - 265) | 0x420u) + 2147482587;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 << 6) | (v4 << 9) | v1)))();
}

uint64_t sub_100082914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * ((4 * (((v60 - 806) ^ 0x5092FDCE) != 1351810518)) | (16 * (((v60 - 806) ^ 0x5092FDCE) != 1351810518)) | (v60 + 1170))))(a1, a59, 2943156503, 1351810518, STACK[0x2B0], 73, 35, 115);
}

uint64_t sub_10008298C()
{
  return 0;
}

void sub_1000829CC()
{
}

uint64_t sub_1000829D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000850E4(a1, a2, a3, a4, a4 ^ 0x9CA);
}

uint64_t sub_1000829F8(uint64_t a1, void *a2, unint64_t a3)
{
  STACK[0x390] = a3;
  *a2 = 0x8888888888888888;
  a2[1] = 0x7777777771777765;
  int v6 = 3804331 * ((((v5 - 192) | 0x77F22C4) - (v5 - 192) + ((v5 - 192) & 0xF880DD38)) ^ 0x79AA0732);
  *(_DWORD *)(v5 - 188) = v3 - v6 + 1172344228;
  *(_DWORD *)(v5 - 184) = v6 ^ 0x42B3778E;
  int v7 = *(void (**)(uint64_t))(v4 + 8 * (v3 ^ 0xDEF));
  STACK[0x2C8] = a3;
  v7(v5 - 192);
  LODWORD(STACK[0x3B8]) = 1704253869;
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * (v3 ^ 0xD21)))(336, 1925803308);
  STACK[0x3F8] = v8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                                         + 8
                                                                                         * (((v8 != 0)
                                                                                           * (v3 - 579 + v3 - 393 - 1378)) ^ v3)))(v8, v9, v10, v11, v12, v13);
}

uint64_t sub_100082AEC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ (2 * ((v0 & 0x1F ^ 8) != 3 * (v1 ^ 0x187) - 1005)))))();
}

uint64_t sub_100082B20(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1003
                                * ((v8 & (2 * (*(unsigned __int8 *)(a2 + 4) - 147)))
                                 + (a4 ^ (a5 + 1056) ^ (*(unsigned __int8 *)(a2 + 4) - 147)) == v7)) ^ v6)))();
}

uint64_t sub_100082B60()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v1 & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                      + ((v3 - 626) ^ (v0 - 272) ^ (*(unsigned __int8 *)(v2 + 7) - 1)) == v0)
                                     * ((v3 + 161564269) & 0xF65EB77D ^ 0x628)) ^ v3)))();
}

uint64_t sub_100082BBC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((((a8 ^ 0x796) + a8 - 1341 - 634) * (a1 == v8)) ^ a8)))();
}

uint64_t sub_100082BF8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1999 * (v1 + v3 + (v0 ^ 0x692) + 910 + (v0 ^ 0x692u) + 210 - 3093 < 0x7FFFFFFF)) ^ v0 ^ 0x692)))();
}

uint64_t sub_100082C3C()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 8 * (v1 ^ 0x897)))();
  LODWORD(STACK[0x580]) = v2;
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * (((v2 == ((v1 - 1523218995) & 0x5ACA7B7E) - 563356232)
                                              * (((v1 - 218) | 0x226) + 1525)) ^ v1)))(v3);
}

uint64_t sub_100082CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v18 - 112) = (v16 - 483) ^ (((~((v18 - 136) | 0x4108C787) + ((v18 - 136) & 0x4108C787)) ^ 0x6D556A72) * v13);
  *(void *)(v18 - 136) = v17;
  *(void *)(v18 - 120) = a13;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v16 ^ 0xF6E)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((122
                                              * (*(_DWORD *)(v18 - 128) <= ((((v16 - 502) | 0x200) - 1290) ^ (v15 + 199)))) ^ v16)))(v19);
}

uint64_t sub_100082D60(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((29 * ((a5 + 1 + v5) < 0x40)) ^ a1)))();
}

uint64_t sub_100082E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((a8 + ((106 * (v9 ^ 0x21C)) ^ (a6 + 498)) + 9)
                                * (v8 + v10 + 63 >= (v8 + v10))) ^ v9)))();
}

uint64_t sub_100082E9C@<X0>(uint64_t a1@<X2>, unsigned int a2@<W3>, uint64_t a3@<X5>, uint64_t a4@<X7>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v50 = a5 - 413;
  LODWORD(a29) = 935020333;
  BOOL v52 = ((v50 - a4 - 205) ^ 0xBE261861) != 0x432DB2CB
     || ((v50 - 1270319405) & 0x4BB78EBF ^ 0x400DEEE2) != 1074653292;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t *, uint64_t, void, void, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * ((665 * v52) ^ v50)))(1127068362, 1074653292, a1, 3024647891, 1270320831, a3, 3190167649, a4, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           &STACK[0x2D8],
           &a49,
           a25,
           0,
           0,
           a2 | 0xE7DC2C9E00000000,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_100082F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16)
{
  unsigned int v21 = 1224239923 * ((2 * (&a13 & 0x7345948) - &a13 + 2026612400) ^ 0x8A785B67);
  LODWORD(a15) = (v19 + 374) ^ v21;
  a14 = a11;
  LODWORD(a13) = (v18 ^ 0x6E80BF79) - v21 + ((v18 << (((v19 + 54) | 0x80) ^ 0xF6)) & 0xDD017EF2) - 109062401;
  (*(void (**)(uint64_t *))(v20 + 8 * (v19 + 1876)))(&a13);
  unsigned int v22 = 69008221 * (&a13 ^ 0xD3A2520A);
  a13 = v16;
  a16 = ((v17 ^ 0xD974FDE6) + 937143230 + (((v19 ^ 0xD) - 1293289088) & (2 * v17))) ^ v22;
  HIDWORD(a14) = v22 + v19 + 1732;
  a15 = a11;
  uint64_t v23 = (*(uint64_t (**)(uint64_t *))(v20 + 8 * (v19 + 1837)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((13 * (a14 != -563355418)) ^ v19)))(v23);
}

void sub_1000830A4()
{
}

uint64_t sub_1000830E8@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,char a21)
{
  BOOL v27 = v22 < a1;
  *(&a21 + (a4 - 1540116380)) = *(unsigned char *)(v25 + (v21 + a2))
                                            + ~((v23 + 98) & (2 * *(unsigned char *)(v25 + (v21 + a2))))
                                            + 120;
  unsigned int v28 = v21 + 1 + a3;
  int v29 = v27 ^ (v28 < a1);
  BOOL v30 = v28 < v22;
  if (!v29) {
    BOOL v27 = v30;
  }
  return (*(uint64_t (**)(void))(v26 + 8 * ((v27 * v24) ^ v23)))();
}

uint64_t sub_100083160()
{
  BOOL v4 = v0 < 0xDA4262AC;
  if (v4 == (unint64_t)(v1 - 0x204F192C60D392D0) < 0xDA4262AC) {
    BOOL v4 = v1 - 0x204F192C60D392D0 < v0;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((7 * (v2 ^ 0x26F) - 82) * !v4) | v2)))(v2 ^ 0x203u);
}

uint64_t sub_1000831D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  int v18 = (a15 ^ v16) - ((((v15 - 1964969182) & 0x751F0BFB) + 1508556343) & (2 * (a15 ^ v16))) - 1393204967;
  return (*(uint64_t (**)(uint64_t, void))(v17
                                                    + 8
                                                    * ((44
                                                      * (((2 * v18) & 0x4FE5FFA6 ^ 0x49E0C222)
                                                       + (v18 ^ (v15 + 185047533))
                                                       + 1602052080 != 124805059)) ^ v15)))(a1, (v15 - 332));
}

uint64_t sub_100083288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  unsigned int v50 = *(_DWORD *)(&a33 + ((v48 + v45) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v48 + v45)) = v50 ^ 0xB2;
  *(unsigned char *)(a1 + (v48 + v45 + 1)) = (BYTE1(v50) ^ 0xA1)
                                                 - ((((v50 >> 8) ^ 0xFFFFFFA1) << (a6 + v47 + 103)) & 0xEE)
                                                 + 119;
  *(unsigned char *)(a1 + (v48 + v45 + 2)) = (BYTE2(v50) ^ 0x43) - ((2 * (BYTE2(v50) ^ 0x43)) & 0xEF) + 119;
  *(unsigned char *)(a1 + (v48 + v45 + 3)) = (HIBYTE(v50) ^ 0x58) - ((2 * (HIBYTE(v50) ^ 0x58)) & 0xEF) + 119;
  BOOL v51 = v48 - 1114611644 < (a45 - 1255448017);
  if (v48 - 1114611644 < v46 != a45 - 1255448017 < v46) {
    BOOL v51 = a45 - 1255448017 < v46;
  }
  return (*(uint64_t (**)(void))(v49 + 8 * ((506 * !v51) ^ v47)))();
}

uint64_t sub_100083374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24)
{
  int v27 = ((v26 - 1407700273) ^ 0x86E112D4) + v24;
  BOOL v29 = v27 > 543594905 || v27 < a24 - 1603888742;
  return (*(uint64_t (**)(void))(v25
                              + 8
                              * ((((v26 - 48) ^ v29) & 1 | (16
                                                                           * (((v26 - 48) ^ v29) & 1))) ^ v26)))();
}

uint64_t sub_1000833DC@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * ((((a1 - 1762949364) & 0x69147BBF ^ 0x287)
                                                                * (a3 + v3 - v4 == -139828042)) ^ a1)))(48, a2, 1);
}

uint64_t sub_100083444@<X0>(int a1@<W5>, int a2@<W7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1906 * (((a1 + v3 + ((v3 - a2 - 308) ^ 0x17DB2B58) - 354) ^ a3) == v4 - 2117318372)) ^ v3)))();
}

void sub_10008349C()
{
}

uint64_t sub_100083544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, unsigned int a20,int a21)
{
  a20 = (831981571 * ((&a19 & 0xC67EF54C | ~(&a19 | 0xC67EF54C)) ^ 0xA020DA97)) ^ 0x8F;
  a19 = &STACK[0x55D5CC6D86BC0F47];
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v21 + 18816))(&a19);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (((32 * (((a21 == v22) ^ 0x9F) & 1)) & 0xBF | ((((a21 == v22) ^ 0x9F) & 1) << 6)) ^ 0x2A0u)))(v23);
}

uint64_t sub_1000835F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_10009CB54(a5, a3);
}

uint64_t sub_100083604(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v8 = (a4 - 1929319614) & 0x72FF13F0;
  *uint64_t v5 = a1;
  *int v4 = (v6 + v8 - 896) ^ v11;
  int v9 = 203 * (v8 ^ 0x385);
  unsigned int v14 = ((v8 ^ 0x1CC) - 407) ^ (69008221
                              * ((2 * (&v14 & 0x64DF65F8) - &v14 + 455121410) ^ 0xC882C808));
  uint64_t v15 = v12;
  (*(void (**)(unsigned int *))(v7 + 8 * ((v8 ^ 0x1CC) + 1747)))(&v14);
  unsigned int v14 = (v9 - 834) ^ (69008221 * (((&v14 | 0xD42F85AB) - (&v14 & 0xD42F85AB)) ^ 0x78DD7A1));
  uint64_t v15 = v13;
  (*(void (**)(unsigned int *))(v7 + 8 * (v9 ^ 0xAE8)))(&v14);
  return 0;
}

uint64_t sub_10008375C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((2 * ((v0 + 388906065) > 7)) | (4 * ((v0 + 388906065) > 7))) ^ v2)))();
}

uint64_t sub_1000837A8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v9 = (v4 - 2320) | 0x90Au;
  *(void *)(v6 + v5 - 0xB999BAB1C512083 + (((v9 ^ 0x905) * a3) ^ (unint64_t)(a2 - 1787))) = v8;
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (int)(((((v9 - 2338) & v3) != 8) * a3) ^ v9)))(8);
}

void sub_10008381C(_DWORD *a1)
{
  unsigned int v1 = *a1 + 1178560073 * ((((2 * a1) | 0xD228BF70) - a1 - 1762942904) ^ 0x8E217DD0);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1000838D0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((((v7 ^ a2 ^ v2) + 18 + v3) & (a1 + 1)) == v6) * v4) ^ v7 ^ a2)))();
}

uint64_t sub_100083908(uint64_t result)
{
  *(_DWORD *)(result + 8) = -371152652 - v1;
  return result;
}

uint64_t sub_10008391C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_10009E688(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_100083970@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X5>, int a6@<W8>)
{
  *(unsigned char *)(a5 + (v8 + a6 + 67)) = *(unsigned char *)(a3 + (v7 + v6 + 1149));
  return (*(uint64_t (**)(void))(v9 + 8 * ((((a6 & 0xFFFFFFC0) != a1) * ((a2 - 1447) ^ a4)) ^ a2)))();
}

uint64_t sub_1000839BC(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v29 = (v26 ^ a4) + v27;
  *(_DWORD *)(a24 + 4 * (v29 + a3)) = v24;
  int v30 = v29 + a5;
  if (v29 + a5 < a6)
  {
    BOOL v33 = __OFSUB__(v30, v25);
    BOOL v31 = v30 == v25;
    BOOL v32 = v30 - v25 < 0;
  }
  else
  {
    BOOL v33 = 0;
    BOOL v31 = 1;
    BOOL v32 = 0;
  }
  if (v32 ^ v33 | v31) {
    int v34 = 0;
  }
  else {
    int v34 = 1;
  }
  return (*(uint64_t (**)(void))(v28 + 8 * ((v34 * a7) ^ a2)))();
}

void Ejwmn62s(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a4) {
    BOOL v5 = a5 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = !v5;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100083A4C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((62 * (unk_100285638 == 0)) ^ v0)))();
}

uint64_t sub_100083A78(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((2 * (((a2 - 985) | 0x480) ^ 0x7C7)) ^ 0x789)
                                * (*(_DWORD *)(v3 - 136) == *(_DWORD *)(v3 - 140))) ^ a2)))();
}

uint64_t sub_100083AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 == 1) * a6) ^ v6)))();
}

uint64_t sub_100083AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned int a5@<W4>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  if ((v61 + 405001088) > 0x12 || ((1 << (v61 + 0x80)) & 0x42405) == 0) {
    return sub_1000AC03C(a1, a2, a3, a4, a5);
  }
  uint64_t v67 = a6 & 0xFFFFFFFFFFFFFFFLL;
  if (!v67) {
    return (*(uint64_t (**)(void))(v63
  }
                                + 8
                                * ((3425 * ((a17 & 0xFFFFFFF0) == ((v65 - 1442389339) & 0x1C9A565E ^ 0x33A16256))) ^ (v64 + v65 + 316))))();
  if (v67 != 3) {
    return (*(uint64_t (**)(uint64_t))(v63
  }
                                              + 8
                                              * ((15
                                                * (((v65 - 812877635) & 0xF714BF0A)
                                                 + ((HIDWORD(a16) - 1704253533) ^ 0xFEFF98F5BF397D77)
                                                 + (((v65 - 812877635) ^ 0x17699B911) & (2 * (HIDWORD(a16) - 1704253533))) != 0xFEFF98F5BF398081)) ^ (v64 + v65 - 165))))(0x5D396DF14AA35D0FLL);
  uint64_t v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 48 * a6 + 8))(a9, a8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 8 * ((3196 * (v68 - 563355418 - ((2 * v68) & 0xBCD7C1CC) == -563355418)) ^ (v64 + v65 + 316))))(v68, v69, v70, v71, 3731611878, 2854199772, 1440767523, v72, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

void sub_100083D24()
{
}

void sub_100083D2C()
{
}

uint64_t sub_100083D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W7>, int a6@<W8>)
{
  return sub_100083D5C(a1, a2, a3, a4, (a5 + a6 - 5));
}

uint64_t sub_100083D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int8x16_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  unsigned int v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v55 + 8 * a5);
  LODWORD(a24) = BYTE4(a45) ^ 0xFFFFFF89;
  int v58 = BYTE4(a45) ^ 0x89;
  if (v58 == 2)
  {
    int8x16x4_t v82 = vld4q_s8(v51);
    int v69 = a6 ^ (a6 + 97);
    HIDWORD(a21) = HIDWORD(a44);
    uint8x16_t v70 = (uint8x16_t)veorq_s8(v82.val[1], a7);
    _Q22 = vmovl_u8(*(uint8x8_t *)v70.i8);
    _Q21 = vmovl_high_u8(v70);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    int v75 = (_DWORD *)(v52 + 4 * (v56 + 1442442312));
    int v76 = *(v75 - 8) ^ *(v75 - 3);
    unsigned int v77 = v76 + v53 - ((2 * v76) & 0xBCD7C1CC);
    int v78 = *(v75 - 16) ^ *(_DWORD *)(v52 + 4 * (((v69 - 883712184) & 0x34AC5FF8 ^ a28) + 1442442312));
    HIDWORD(v79) = v78 ^ v77 ^ 0x5E6BE0E6;
    LODWORD(v79) = v78 ^ ~v77;
    *int v75 = (v79 >> 31) + v53 - ((2 * (v79 >> 31)) & 0xBCD7C1CC);
    int8x16_t v80 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void), unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * ((22 * (v54 == 1442442249)) ^ v69));
    return v80(v80, a2, a3, 3168256460, a43, a6, HIDWORD(a42), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             a23,
             a24,
             __PAIR64__(a43, HIDWORD(a42)),
             __PAIR64__(a44, HIDWORD(a43)),
             v57,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51);
  }
  else if (v58 == 1)
  {
    int8x16x4_t v81 = vld4q_s8(v51);
    int v59 = a6 ^ (a6 - 279);
    uint8x16_t v60 = (uint8x16_t)veorq_s8(v81.val[2], a7);
    _Q26 = vmovl_high_u8(v60);
    _Q25 = vmovl_u8(*(uint8x8_t *)v60.i8);
    __asm
    {
      SHLL2           V25.4S, V25.8H, #0x10
      SHLL2           V26.4S, V26.8H, #0x10
    }
    uint64_t v67 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void), unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * ((180 * (a29 + 1 != v54)) ^ v59));
    return v67(a29 + 1, 3053110526, a3, v67, a43, *(_DWORD *)(v52+ 4 * (*((unsigned char *)*(&off_10026C690 + (v59 ^ 0x35A)) + a29 + v56 - 4) - 116)) ^ v53, HIDWORD(a42), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             __PAIR64__(a43, HIDWORD(a42)),
             __PAIR64__(a44, HIDWORD(a43)),
             v57,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51);
  }
  else
  {
    return v57(a1, a2, a3, a4, a43);
  }
}

void sub_1000841E4()
{
}

uint64_t sub_1000842D8()
{
  return sub_1000842F4();
}

uint64_t sub_1000842F4(uint64_t result)
{
  *(_DWORD *)(*(void *)(result + 8) - 0x650624C8F5E8EE41) = v1;
  return result;
}

uint64_t sub_100084310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v9 = STACK[0x430];
  STACK[0x540] = *(void *)(v7 + 8 * (v8 - 812));
  STACK[0x3B0] = v9;
  STACK[0x358] = STACK[0x2B0];
  uint64_t v10 = *(_DWORD *)(v9 - 0xB999BAB1C51203FLL) & 0x3F;
  *(unsigned char *)(v9 - 0xB999BAB1C512083 + (v10 ^ 0x2E)) = -9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * ((((v10 ^ 0x2E) > (((((v8 - 806) | 0x15) + 495) | 0x122) ^ 0x319u)) * (((((v8 - 806) | 0x15) + 1027) | 0x381) ^ 0x2A9)) ^ ((v8 - 806) | 0x15))))(a1, -653949007, 58, 27, 51, a6, a7, 3367574058);
}

uint64_t sub_100084324()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((v2 == v3) ^ (v1 - 87)) & 1)
                                * ((v1 - 615637096) & 0x24B1E17F ^ 0x189)) ^ v1)))();
}

uint64_t sub_10008436C@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((57 * (a1 + 1 != v3 + 24)) ^ a2)))();
}

uint64_t sub_10008441C@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((424
                                * (v3
                                 - a2
                                 + (a1 ^ 0x40Du)
                                 - 0xB999BAB1C512123
                                 + (unint64_t)(v2 + ((a1 - 1886728366) & 0x70752F2B ^ 0xC0A91101)) > 0xF)) ^ a1)))();
}

uint64_t sub_100084498(int a1)
{
  int v8 = v1 + v6;
  *(_DWORD *)(*v3 + 4 * (v8 + 870)) = v2;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 + 869 < v5) * a1) ^ v4)))();
}

uint64_t sub_1000844D4@<X0>(int a1@<W8>)
{
  int v3 = v2 ^ a1;
  BOOL v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v2 ^ 0xF5A)))(200, 1616997413) == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v4 * (v3 ^ 0x27 ^ ((v2 - 1739) | 0x202))) ^ v2)))();
}

uint64_t sub_100084534(uint64_t a1, int8x8_t a2, int8x8_t a3, uint64_t a4, int a5)
{
  uint64_t v11 = (v6 - 8 + v5);
  int8x8_t v12 = vrev64_s8(*(int8x8_t *)(v7 + v11));
  *(int8x8_t *)(a1 + v11) = vrev64_s8(vadd_s8(vsub_s8(v12, vand_s8(vadd_s8(v12, v12), a2)), a3));
  return (*(uint64_t (**)(void))(v10 + 8 * (((v8 == -8) * v9) ^ a5)))();
}

uint64_t sub_100084540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  STACK[0x338] = STACK[0x3D8];
  int v9 = LODWORD(STACK[0x2E4]) - ((2 * LODWORD(STACK[0x2E4]) + 886460230) & 0x59EAC232) + 1197508796;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((14
                                * (((2 * v9) & 0x4FE5FFA6 ^ 0x49E0C222)
                                 + 1602052080
                                 + (v9 ^ (((v7 - 1250) | 0xA4) + 185048542)) == a7)) ^ (v7 + 375))))();
}

void sub_1000845EC(uint64_t a1, int a2)
{
  if (v2 + v3 + ((a2 - 1533525464) & 0x5B67BE37u) - 1575 >= 0x7FFFFFFF) {
    int v7 = -v4;
  }
  else {
    int v7 = v6;
  }
  *int v5 = v7;
  JUMPOUT(0x10006E624);
}

uint64_t sub_10008462C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,uint64_t a24,uint64_t a25,int a26)
{
  unsigned int v27 = a23 + ((((a3 + 939) ^ 0x1F) - 1984) ^ 0xAB17D9F0);
  int v28 = ((a26 - 1642525145) < 0xD6A102D9) ^ (v27 < 0xD6A102D9);
  BOOL v29 = v27 < a26 - 1642525145;
  if (v28) {
    BOOL v29 = (a26 - 1642525145) < 0xD6A102D9;
  }
  return (*(uint64_t (**)(void))(v26 + 8 * ((55 * v29) ^ (a3 + 619))))();
}

uint64_t sub_1000846F4@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *int v2 = a2;
  *(_DWORD *)(result + 12) = 563395539;
  return result;
}

uint64_t sub_100084708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v24 - 128) = a22;
  *(void *)(v24 - 112) = a19;
  *(_DWORD *)(v24 - 120) = v22
                         + 831981571
                         * ((((v24 - 128) | 0x8A1B7C9A) - (v24 - 128) + ((v24 - 128) & 0x75E48360)) ^ 0x13BAACBE)
                         - 143;
  (*(void (**)(uint64_t))(v23 + 8 * (v22 + 590)))(v24 - 128);
  *(_DWORD *)(v24 - 104) = (v22 - 706) ^ (69008221
                                        * ((((v24 - 128) | 0xD14AED18) - ((v24 - 128) & 0xD14AED18)) ^ 0x2E8BF12));
  *(void *)(v24 - 128) = a20;
  *(void *)(v24 - 112) = a22;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v22 ^ 0xE4F)))(v24 - 128);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * ((42 * (*(_DWORD *)(v24 - 120) > (v22 ^ 0x5BFu) + 1961906642)) ^ v22)))(v25);
}

void sub_100084844()
{
}

void sub_10008487C()
{
  _DWORD *v0 = v1 + 1;
}

uint64_t sub_1000848B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,unsigned int a35)
{
  unsigned int v38 = v37 - 227758300 + ((v36 + 962) | 0x30) + 620;
  BOOL v39 = v38 < 0x66C8050A;
  BOOL v40 = v38 > a35;
  if (a35 < 0x66C8050A != v39) {
    BOOL v41 = v39;
  }
  else {
    BOOL v41 = v40;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((21 * v41) ^ (v36 + 1596))))();
}

uint64_t sub_100084934()
{
  int v6 = ((((2 * (v5 - 144)) | 0x1839231E) - (v5 - 144) + 1944284785) ^ 0xF2C9B479) * v0;
  *(void *)(v5 - 120) = v4;
  *(_DWORD *)(v5 - 128) = (v1 + 1389) ^ v6;
  *(_DWORD *)(v5 - 124) = (v9 + 417365691 + v1 + 152) ^ v6;
  *(void *)(v5 - 136) = v10;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 ^ 0x863)))(v5 - 144);
  *(_DWORD *)(v8 - 0x209B06B4820BA795) = v9;
  *(_DWORD *)(v2 + 24) = -563355418;
  return result;
}

uint64_t sub_100084A10(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void, uint64_t))(v6
                                                    + 8
                                                    * ((117 * (v5 - v3 >= (((a3 - 682) | 0x2E1u) ^ 0x7D1uLL))) ^ a3)))((a3 - 1437), v4);
}

uint64_t sub_100084A50(uint64_t a1, int a2)
{
  uint64_t v8 = a2 - 32 + (v5 ^ (v3 + 1390));
  long long v9 = *(_OWORD *)(v2 + v8 - 15);
  long long v10 = *(_OWORD *)(v2 + v8 - 31);
  uint64_t v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 == 32) | (2 * (v6 == 32))) ^ (v4 + 972))))();
}

uint64_t sub_100084A5C()
{
  LODWORD(STACK[0x54C]) = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1594 * ((*(_DWORD *)(STACK[0x210] + 360) - 56245773) < 0xFFFFFFFE)) ^ v0)))();
}

uint64_t sub_100084AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned int a19)
{
  int v23 = v19 + 469835780;
  if ((v19 + 469835780) <= 0x40) {
    int v23 = 64;
  }
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * ((28 * (-v21 - 469837757 - v20 + 3 * (a19 ^ 0x590) + v23 > 0xE)) ^ a19)))(-1952141186);
}

void sub_100084B50()
{
}

uint64_t sub_100084B6C@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x54C]) = v2;
  STACK[0x338] = STACK[0x2C8];
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(_DWORD *)STACK[0x210] == a1 - 2215) * (((a1 - 1327771128) & 0x4F2425FA) - 161)) ^ a1)))();
}

uint64_t sub_100084BC4@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  unsigned int v36 = *(_DWORD *)(&a19 + ((v34 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v34 + a2 + 1)) = (BYTE2(v36) ^ 0x43) - ((2 * (BYTE2(v36) ^ 0x43)) & 0xEF) + 119;
  *(unsigned char *)(a1 + (v34 + a2)) = (HIBYTE(v36) ^ 0x58)
                                            - (((HIBYTE(v36) ^ 0x58) << ((((v32 + 25) | 0x89) ^ 0x20) & 0x77)) & 0xEE)
                                            + 119;
  *(unsigned char *)(a1 + (v34 + a2 + 2)) = (BYTE1(v36) ^ 0xA1) - ((2 * (BYTE1(v36) ^ 0xA1)) & 0xEF) + 119;
  *(unsigned char *)(a1 + (v34 + a2 + 3)) = v36 ^ 0xB2;
  BOOL v37 = v34 + 1852498675 < (a31 + 756094822);
  if (v34 + 1852498675 < v31 != a31 + 756094822 < v31) {
    BOOL v37 = a31 + 756094822 < v31;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((v37 * v33) ^ v32)))();
}

uint64_t sub_100084CC0()
{
  int v4 = ((v0 + 903041907) & 0xCA2CABFF ^ 0xBBFB60C7) + v2;
  BOOL v6 = v4 > 1933522652 || v4 < v3 - 213960995;
  return (*(uint64_t (**)(void))(v1 + 8 * ((61 * v6) ^ v0)))();
}

uint64_t sub_100084D24()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1045 * (v1 + 1 == v2 + 80)) ^ v0)))();
}

uint64_t sub_100084DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58)
{
  int v60 = (((a58 - 1051) ^ 0x2A7FED98) & a24) + (v58 ^ 0x153FF63E);
  int v61 = ((((a58 - 27) ^ 0x98) & a24) + (v58 ^ 0x3E) + 2) & 0xF;
  BOOL v63 = v60 == 356513342 || v61 != (a58 ^ 0x6CD ^ (5 * ((a58 - 1051) ^ 0x1CC)));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * ((1019 * v63) ^ (a58 - 1051))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

void sub_100084E74(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 944348131 * ((((2 * a1) | 0x23956760) - a1 + 1848986704) ^ 0x32D317FE);
  int v2 = *(_DWORD *)(*(void *)a1 - 0x5E8E72AB319E4285);
  uint64_t v6 = *(void *)a1;
  unsigned int v5 = v1 - 1224239923 * (((v4 | 0x11165558) - (v4 & 0x11165558)) ^ 0xE3A5A88F) - 411;
  uint64_t v3 = (char *)*(&off_10026C690 + (v1 ^ 0x445)) - 4;
  (*(void (**)(unsigned char *))&v3[8 * v1 + 9688])(v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100084FB4()
{
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((3246 * (v2 + 1 == v3 + 44)) ^ v0)))(v1);
}

uint64_t sub_100085080(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v8 = v6 + 1547575002 > 447421440 || v6 + 1547575002 < v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((480 * ((v8 ^ ((a4 ^ 0xE0) + 80)) & 1)) ^ a4)))();
}

uint64_t sub_1000850D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a5 + v9 - 8 + (v8 ^ (v7 + 740))) = *(void *)(a4 + v9 - 8 + (v8 ^ (v7 + 740)));
  return (*(uint64_t (**)(void))(v6 + 8 * (((a3 == -8) * a6) ^ v10)))();
}

uint64_t sub_1000850E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  unsigned int v8 = a5 + 2037295286 + a3 + v7;
  unsigned int v9 = v5 - 409719763;
  int v10 = (v9 < 0xEF5F98DC) ^ (v8 < 0xEF5F98DC);
  BOOL v11 = v8 > v9;
  if (v10) {
    BOOL v11 = v8 < 0xEF5F98DC;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((251 * !v11) ^ (a5 + 1302))))();
}

void sub_10008515C(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x5E8E72AB319E4285) = (((v3 + v2) * (v1 - 1694193230)) ^ 0xECDFFF6F)
                                         + 2079776214
                                         + ((2 * (v3 + v2) * (v1 - 1694193230)) & 0xD9BFFEDE);
}

uint64_t sub_1000851E8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((v0 + 1568) ^ 0x8C ^ ((v0 - 518) | 0x826))
                                * (*(_DWORD *)(v2 - 128) == *(_DWORD *)(v2 - 136))) ^ v0)))();
}

uint64_t sub_10008522C()
{
  unsigned int v5 = *(unsigned __int8 *)(v2 + 1) + ((v3 + 415) ^ 0xFFFFFC46);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1369 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_10008526C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * ((((((v4 - 2020) | 0x165) ^ 0xE09) + (v4 ^ 0x7FA))
                                                                * (v2 == v3)) ^ v4)))(-1952141186, a2, 3181458807);
}

void sub_1000852CC(uint64_t a1)
{
  int v1 = (*(_DWORD *)(a1 + 16) ^ (944348131 * ((-2 - ((a1 | 0x128ABCF6) + (~a1 | 0xED754309))) ^ 0x4E6CE747)))
     + 1313;
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x5E8E72AB319E4285);
  int v4 = v2 - 1758911813;
  BOOL v3 = v2 - 1758911813 < 0;
  int v5 = 1758911813 - v2;
  if (!v3) {
    int v5 = v4;
  }
  BOOL v6 = (v5 ^ 0xFFBB6FDF) + 1651367540 + ((v1 ^ 0xFF76DA58) & (2 * v5)) - 1646874196 < ((v1 + 282286617) & 0xEF2CA0C5 ^ 0x7FFFFF3A);
  __asm { BRAA            X6, X17 }
}

uint64_t sub_100085404(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((95 * ((a3 ^ (*v3 == 0x3B842D404CB6A8ACLL)) & 1)) ^ a3)))();
}

void sub_100085440(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) + 944348131 * ((2 * (a1 & 0x4CB3C068) - a1 - 1286848617) ^ 0x10559BD9);
  __asm { BRAA            X8, X17 }
}

void sub_100085514()
{
}

void sub_10008551C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (831981571 * ((~a1 & 0xE26CEAFC | a1 & 0x1D931503) ^ 0x7BCD3AD8));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100085604@<X0>(int a1@<W0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(v4 + 4 * (a1 + a2 + ((v5 + v3) & 0x33BC2718u))) == v2)
                                * (((v5 + v3) ^ (v3 + 540)) - 800)) ^ (v5 - 540))))();
}

uint64_t sub_100085650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8
                                            * (((1167 * (a5 ^ 0x512) - 2250) * ((unint64_t)(a2 - v7 - a3) > 0x1F)) ^ a5)))(v5);
}

void oGBEROq3()
{
  int v0 = *(&off_10026C690
       + (byte_10021E7E8[(byte_1002189D8[(-113
                                                                          * (dword_100283B78 ^ 0xEA ^ qword_100283A78))
                                                        - 8] ^ 0x66)
                                        - 8] ^ (-113 * (dword_100283B78 ^ 0xEA ^ qword_100283A78)))
       - 135);
  int v1 = *(&off_10026C690
       + ((-113 * (*v0 ^ qword_100283A78 ^ 0xEA)) ^ byte_10021E6E0[byte_1002186D0[(-113 * (*v0 ^ qword_100283A78 ^ 0xEA))] ^ 0xB9])
       - 21);
  unint64_t v2 = *v0 ^ (unint64_t)&v4 ^ *v1;
  void *v0 = 1932141199 * v2 + 0x5BC8EB821F80EA16;
  *int v1 = 1932141199 * (v2 ^ 0xA437147DE07F15EALL);
  v5[1] = 1178560073 * ((v5 & 0x294D8B40 | ~(v5 | 0x294D8B40)) ^ 0x318756D7) - 504207030;
  LOBYTE(v1) = -113 * (*(_DWORD *)v0 ^ 0xEA ^ *(_DWORD *)v1);
  int v3 = (char *)*(&off_10026C690
               + ((-113 * ((qword_100283A78 + dword_100283B78) ^ 0xEA)) ^ byte_10021E6E0[byte_1002186D0[(-113 * ((qword_100283A78 + dword_100283B78) ^ 0xEA))] ^ 0x55])
               + 31)
     - 4;
  (*(void (**)(_DWORD *))&v3[8
                                      * (byte_1002187D8[(byte_100214530[v1] ^ 3) - 8] ^ v1)
                                      + 17856])(v5);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10008588C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14, uint64_t a15, int a16)
{
  int v21 = *(_DWORD *)(v16 + 8) + v19;
  unsigned int v22 = 1224239923 * ((54336456 - (&a13 | 0x33D1BC8) + (&a13 | 0xFCC2E437)) ^ 0xE7119E0);
  a15 = a11;
  a13 = ((v20 - 1005465572) & 0x3BEE2FFF ^ 0xEE41FC20)
      - v22
      + (((((v20 + 1794567474) & 0x950915FE) - 1051701767) * v21 - 1590187701) ^ 0x79BE9779)
      + ((2 * ((((v20 + 1794567474) & 0x950915FE) - 1051701767) * v21 - 1590187701)) & 0xF37D2EF2);
  a16 = (v20 + 244) ^ v22;
  uint64_t v23 = (*(uint64_t (**)(unsigned int *))(v17 + 8 * (v20 + 1746)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((28 * (a14 != v18)) ^ v20)))(v23);
}

uint64_t sub_1000859A8()
{
  STACK[0x2B0] = STACK[0x480];
  LODWORD(STACK[0x324]) = 935020333;
  return sub_1000859E0();
}

uint64_t sub_1000859E0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1691 * (v0 == v3 + v1 - 98)) ^ v1)))();
}

uint64_t sub_100085A0C()
{
  return sub_100085A30(&off_10026C690);
}

uint64_t sub_100085A30@<X0>(int a1@<W3>, void *a2@<X8>)
{
  uint64_t v13 = v2 ^ (a1 + 492) ^ (a1 + 101);
  uint64_t v14 = v3 + (v13 ^ 0x5D396DF1404A4C92);
  int v15 = *(unsigned __int8 *)(*a2 + v8 + 0x5D396DF14AA35D0FLL)
      - (*(unsigned __int8 *)(v4 + v8 + 0x5D396DF14AA35D0FLL) ^ v5);
  BOOL v17 = (v15 ^ v9) + (v6 & (2 * v15)) + v12 != v10 || v14 == 0x5D396DF14AA35D0FLL;
  return (*(uint64_t (**)(void))(v7 + 8 * (int)((v17 * v11) ^ v13)))();
}

void sub_100085AB4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1224239923 * ((((2 * a1) | 0x124C8F9E) - a1 - 153503695) ^ 0xFB95BA18));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100085B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20)
{
  a20 = 1178560073
      * ((-68329684 - (&a19 ^ 0xA429BDE0 | 0xFBED5F2C) + (&a19 ^ 0xA429BDE0 | 0x412A0D3)) ^ 0x470E3F5B)
      - 504207030;
  uint64_t v22 = (*(uint64_t (**)(int *))(v20 + 18936))(&a19);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((1452 * (a19 == v21)) ^ 0x2C0u)))(v22);
}

uint64_t sub_100085C48()
{
  return sub_100085C6C();
}

uint64_t sub_100085C6C()
{
  int v5 = v0 - 375351194;
  int v6 = 831981571 * ((((v4 - 192) | 0xE649E4DB) + (~(v4 - 192) | 0x19B61B24)) ^ 0x7FE834FE);
  *(void *)(v4 - 184) = v1;
  *(_DWORD *)(v4 - 192) = v5 ^ v6;
  *(_DWORD *)(v4 - 188) = v6 + v3 + 425;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 + 1660)))(v4 - 192);
  return ((uint64_t (*)(uint64_t))STACK[0x328])(v7);
}

uint64_t sub_100085CF8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2013 * ((((v1 - 716) ^ 0x60) & v0) == v1 - 814)) ^ (v1 - 355))))();
}

_DWORD *sub_100085D30@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  *uint64_t result = v2 - 28913025 + (a2 << (((v3 + 26) | 0xC5) ^ 0xC0));
  return result;
}

void sub_100085D60(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) ^ (3804331 * (((a1 | 0x16831F20) - (a1 | 0xE97CE0DF) - 377691937) ^ 0x68563AD6));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100085E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  return (*(uint64_t (**)(void, uint64_t))(v17
                                                    + 8
                                                    * ((31
                                                      * (((a14 - 108) ^ (v15
                                                                                        + v14
                                                                                        + ((a14 + 63) ^ 0xC0810753) < 8)) & 1)) ^ a14)))((a14 + 597387668) & 0xDC649769, v16);
}

uint64_t sub_100085ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29)
{
  uint64_t v31 = (*(uint64_t (**)(void))(v30 + 8 * (v29 + 1607)))();
  STACK[0x508] -= 16;
  return (*(uint64_t (**)(uint64_t))(v30
                                            + 8
                                            * ((725
                                              * (a29 == ((((v29 + 422) | 8) + 415219362) & 0xE7403FAF ^ (((v29 + 422) | 8) - 563355924)))) ^ ((v29 + 422) | 8))))(v31);
}

uint64_t sub_100085F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59)
{
  unsigned int v60 = ((a59 + 1405858519) & 0xAC344FFD ^ 0x7190A9E4) + a23 - (((a59 - 490) ^ 0x73CEFF38) & a25);
  return (*(uint64_t (**)(void))(v59
                              + 8
                              * ((39
                                * (((2 * v60) & 0x1F9D9AEE ^ 0x138C9A2E) + (v60 ^ 0xB629B0E0) - 41943044 == 223268211)) ^ a59)))();
}

uint64_t sub_10008601C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  BOOL v41 = (unsigned __int8 *)(a5 + a1 + v40);
  int v42 = ((*v41 ^ 0x77) << ((a37 - 101) ^ 0x5E)) | ((v41[1] ^ 0x77) << 16) | ((v41[2] ^ 0x77) << 8);
  *(_DWORD *)(v37 + ((a1 + v40) & 0xFFFFFFFFFFFFFFFCLL)) = (v42 | v41[3] ^ 0x77)
                                                         + v38
                                                         - 2
                                                         * ((v42 | v41[3] ^ 0x77) & 0x5E6BE0EF ^ (v41[3] ^ 0x77) & 9);
  return (*(uint64_t (**)(void))(v39 + 8 * ((69 * ((unint64_t)(a1 + 4 + v40) > 0x3F)) ^ a37)))();
}

uint64_t sub_1000860C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  return sub_1000AC4B0(a33, a2, a3, 2342826110);
}

uint64_t sub_1000860DC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((389 * (((9 * (v1 ^ v2)) ^ 0x3ELL) + a1 == 20)) ^ v1)))();
}

uint64_t sub_10008610C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  HIDWORD(a16) = HIDWORD(a12) + 1645166287;
  v41.i64[0] = 0x7777777777777777;
  v41.i64[1] = 0x7777777777777777;
  return sub_1000A092C(*(double *)vdupq_n_s32(0x5E6BE0EFu).i64, *(double *)vdupq_n_s32(0xDE6BE0E6).i64, v41, a1, 1476395008, 0xFFFFFFFFLL, a4, a5, a6, a7, 837, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           v40 - 16,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_10008617C(uint64_t a1, uint64_t a2, int a3)
{
  return sub_10008624C(a3 + 2102540621 + ((v3 - 1041) | 0x107u), 717980745);
}

uint64_t sub_10008624C(int a1, uint64_t a2, unsigned int a3, uint64_t a4, int a5)
{
  BOOL v9 = a3 > 0x2ADC4FB;
  if (v9 == v6 + a5 < -44942588) {
    BOOL v9 = v6 + a5 < a1;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((v9 * ((73 * (v7 ^ 0x1A5)) ^ v8)) ^ v7)))();
}

uint64_t sub_1000862B8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((4066
                                * ((STACK[0x47C] & 0xFFFFFFFE) == ((74 * (v0 ^ 0x7F3) + 1330590332) & 0xB0B0CBFC ^ 0x35A3FA4))) ^ v0)))();
}

void sub_100086318()
{
}

void sub_100086360(uint64_t a1)
{
  int v1 = 2078219279 * ((a1 & 0x58BF7D47 | ~(a1 | 0x58BF7D47)) ^ 0x7DBA14CC);
  int v2 = *(_DWORD *)(a1 + 60) - v1;
  if (*(void *)(a1 + 8) | *(void *)(a1 + 64)) {
    BOOL v3 = *(_DWORD *)(a1 + 24) + v1 == 40008549;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = !v3;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000864B0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2
                                                     + 8
                                                     * (((2 * (v1 < 0xC2CC8C0C)) | (8 * (v1 < 0xC2CC8C0C))) ^ (v3 + v4 + 643))))(a1, 1340331655);
}

uint64_t sub_1000864F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((v4 - 600) ^ (v4 - 441)) * (v5 != a4)) ^ v4)))();
}

uint64_t sub_100086518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, unsigned int a16, int a17)
{
  a16 = (v18 - 984) ^ (831981571
                     * ((((2 * &a15) | 0x74AE8078) - &a15 + 1168687044) ^ 0x23F69018));
  a15 = &STACK[0x55D5CC6D86BC0F37];
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v17 + 8 * (v18 ^ 0xD57u)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((a17 == ((v18 - 847) ^ 0x67C246AA) + 1990826292)
                                              * (((v18 - 847) | 0x201) ^ 0x1AF)) ^ v18)))(v19);
}

uint64_t sub_1000865E0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((2892 * (((v2 + 266) | 0x28u) + v1 - 1574145288 < 0x38)) ^ (v2 + 798))))(a1, 1);
}

uint64_t sub_100086638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,_DWORD *a35)
{
  int v40 = v36 - v35 - 1319;
  uint64_t v41 = (*(uint64_t (**)(uint64_t, void))(v37 + 8 * (v36 ^ 0xF25u)))(a12, 0);
  (*(void (**)(uint64_t))(v37 + 8 * (v36 ^ 0xF24u)))(v41);
  (*(void (**)(void))(v37 + 8 * (v36 ^ 0xF24u)))();
  v38[1] = *a35 + ((1664525 * (*v38 ^ (*v38 >> 30))) ^ v38[1]);
  int v42 = (v40 - 1446973477) ^ a33;
  *(_DWORD *)(v39 - 144) = v42;
  *(_DWORD *)(v39 - 140) = v42 ^ 0xDB;
  *(_DWORD *)(v39 - 136) = a33 + v40 + 1452949797;
  *(_DWORD *)(v39 - 104) = a33;
  *(_DWORD *)(v39 - 100) = (v40 - 1446973519) ^ a33;
  *(void *)(v39 - 112) = a33 + 3050292072;
  *(void *)(v39 - 128) = a33 + 3050292070;
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(a34 + 8 * (v40 ^ 0x4FE3DFFA)))(v39 - 144);
  return (*(uint64_t (**)(uint64_t))(a34 + 8 * *(int *)(v39 - 120)))(v43);
}

void sub_1000867B4(uint64_t a1)
{
  int v2 = (uint64_t *)*(&off_10026C690
                  + ((-113 * (dword_100283B40 ^ 0xEA ^ qword_100283A78)) ^ byte_10021E7E0[byte_1002189D0[(-113 * (dword_100283B40 ^ 0xEA ^ qword_100283A78))] ^ 0x66])
                  - 102);
  uint64_t v3 = (unint64_t *)*(&off_10026C690
                           + (byte_100218AD0[byte_100214830[(-113
                                                                                             * ((qword_100283A78 + *v2) ^ 0xEA))] ^ 0x8C] ^ (-113 * ((qword_100283A78 + *v2) ^ 0xEA)))
                           - 122);
  unint64_t v4 = (*v3 ^ *v2) - (void)&v8;
  uint64_t v5 = 1932141199 * v4 + 0x5BC8EB821F80EA16;
  unint64_t v6 = 1932141199 * (v4 ^ 0xA437147DE07F15EALL);
  *int v2 = v5;
  unint64_t *v3 = v6;
  LOBYTE(v3) = -113 * ((v6 - *(_DWORD *)v2) ^ 0xEA);
  int v7 = (char *)*(&off_10026C690
               + ((-113 * (dword_100283B40 ^ 0xEA ^ qword_100283A78)) ^ byte_10021E7E0[byte_1002189D0[(-113 * (dword_100283B40 ^ 0xEA ^ qword_100283A78))] ^ 0x66])
               - 176)
     - 4;
  (*(void (**)(char *, uint64_t (*)()))&v7[8
                                                   * (byte_10021E6E0[byte_1002186D0[v3] ^ 0x69] ^ v3)
                                                   + 18920])((char *)*(&off_10026C690+ (v3 ^ byte_100218AD0[byte_100214830[v3] ^ 0x62])- 51)- 12, sub_10009CEB8);
  __asm { BRAA            X10, X17 }
}

void sub_10008697C()
{
}

void vQPeGmEL(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000869F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                + 8
                                                                                * (int)((((((v6 - 2105559406) ^ 0x827FBBA2)
                                                                                         - 416) ^ (v6 - 2105559406) & 0x7D8046FE)
                                                                                       * (v4 == 399219794)) ^ v6)))(a1, a2, a3, a4, 2608590190);
}

uint64_t sub_100086A50(int a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v7 = v4 + 1153485646 > ((a4 + 185) ^ 0x2D97AC12) || v4 + 1153485646 < a1;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1525 * v7) ^ a4)))();
}

uint64_t sub_100086A9C@<X0>(int a1@<W8>)
{
  BOOL v2 = ((2 * (a1 - 1704253533)) & 0x177F8CF7ALL)
     + ((a1 - 1704253533) ^ 0x4BFF27FDBBFC67BDLL)
     - 0x4BFF27FD64D6990ALL != 1462095539;
  return (*(uint64_t (**)(void))(v1 + 8 * ((16 * v2) | (32 * v2) | 0x845u)))();
}

uint64_t sub_100086B44(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((((a4 + 274) | 0x80) + 42) ^ (a4 - 437)) * (v4 == v5)) ^ a4)))();
}

uint64_t sub_100086B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  STACK[0x508] = v58 - 112;
  return v57(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_100086B90@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((13 * (a1 == ((v1 - 958) | 0x34) - 822)) | v1)))((v1 - 586));
}

uint64_t sub_100086BE4(int a1)
{
  unsigned int v5 = (a1 ^ 0xFFFFFA9B) + a1 - 1244 + *(unsigned __int8 *)(v3 + 7);
  return (*(uint64_t (**)(void))(v4 + 8 * ((615 * ((v2 & (2 * v5)) + (v5 ^ v1) == v1)) ^ a1)))();
}

uint64_t sub_100086C34@<X0>(int a1@<W1>, int a2@<W8>, __n128 a3@<Q0>)
{
  *(__n128 *)(v5 + v4 + 2297) = a3;
  *(__n128 *)(v5 + v4 + 2313) = a3;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 != v4) * a1) ^ a2)))();
}

uint64_t sub_100086C68(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1
                                                     + 8
                                                     * (((*(_DWORD *)(*v4 + 4 * v7) ^ (v6 + 118 + v2)) > (*(_DWORD *)(*v5 + 4 * v7) ^ (v2 + v6 + 118))) | v6)))(a1, v3);
}

void sub_100086CB0()
{
}

uint64_t sub_100086CB8@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xDDE));
  return v3(v1);
}

uint64_t sub_100086CEC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = (unint64_t)&v8[qword_100283A90 + qword_100283A78];
  qword_100283A90 = 1932141199 * v2 - 0x5BC8EB821F80EA16;
  qword_100283A78 = 1932141199 * (v2 ^ 0xA437147DE07F15EALL);
  int v3 = *(_DWORD *)(a2 + 4);
  unsigned __int8 v4 = -113 * ((qword_100283A78 + -113 * v2 - 22) ^ 0xEA);
  uint64_t v5 = (char *)*(&off_10026C690 + (v4 ^ byte_100218AD0[byte_100214830[v4] ^ 0x8C]) - 124) - 4;
  if (v3 == 1704253536) {
    __asm { BRAA            X1, X17 }
  }
  if (v3 == 1704253543)
  {
    int v6 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BRAA            X4, X17 }
  }
  return 4294925278;
}

void sub_100086EB0(int a1@<W8>)
{
  *(_DWORD *)(v1 - 0x5E8E72AB319E4285) = a1;
}

uint64_t sub_100086EC8@<X0>(void *a1@<X0>, int a2@<W3>, _DWORD *a3@<X8>)
{
  uint64_t v7 = (a2 - 1558) | 0x91u;
  *(void *)(*a1 - 0x4B3FB627E137F32ALL) = v6 + v5 + v7 - 457;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((1869 * (*a3 == v4)) ^ v7)))();
}

void sub_100086F2C()
{
}

void sub_100086F38()
{
}

uint64_t sub_100087078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * ((30 * (a4 - v4 >= ((((v5 - 217) | 0x82u) - 1930653203) ^ 0x8CEC9AA0uLL))) ^ v5)))();
}

uint64_t sub_1000870C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, int a7, unsigned int a8)
{
  unsigned int v13 = ((2 * (v11 + 4)) & 0xC7AFBCA6) + ((v11 + 4) ^ 0xE3D7DE53) + 472392109;
  int v14 = ((*(unsigned __int8 *)(v10 + v13) ^ 0x77777777) << 24) | ((*(unsigned __int8 *)(v10 + v13 + 1) ^ a6) << 16) | ((*(unsigned __int8 *)(v10 + v13 + 2) ^ a6) << 8);
  int v15 = *(unsigned __int8 *)(v10 + v13 + 3) ^ a6;
  return (*(uint64_t (**)(uint64_t, void))(v8
                                                    + 8
                                                    * (((((a4 - 1905) | 0x219) - 919) * (((-1 - v12) & 0x40000000) == 0)) | a4)))(a1, (v14 | v15) + v9 - 2 * ((v14 | v15) & a7 ^ v15 & a8));
}

uint64_t sub_100087178()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1492 * (((v1 == 0x86ADDE5E) ^ (v0 - 68)) & 1)) ^ v0)))();
}

uint64_t sub_1000871C4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v1 + 32) == 0x61DFFFBC86B80B30)
                                * ((((v0 - 1685) | 0x80) + 2) ^ (58 * (v0 ^ 0x7ED)))) ^ v0)))();
}

uint64_t sub_100087240(unint64_t a1)
{
  unsigned int v2 = 1224239923 * ((-2 - ((~a1 | 0xC412E5) + (a1 | 0xFF3BED1A))) ^ 0xF277EF32);
  unsigned int v3 = *(_DWORD *)(a1 + 20) - v2;
  int v28 = *(_DWORD *)(a1 + 44) ^ v2;
  int v4 = *(_DWORD *)a1;
  unint64_t v13 = 1224239923 * ((-2 - ((~a1 | 0x60AD954400C412E5) + (a1 | 0x9F526ABBFF3BED1ALL))) ^ 0x48F7202DF277EF32);
  int v5 = v4 - v2;
  unsigned int v6 = 235795823 * ((&v31 - 357749991 - 2 * (&v31 & 0xEAAD2B19)) ^ 0x7E006240);
  int v32 = v6 ^ 0x78F2562C;
  unsigned int v33 = v3 + v6 - 1882357534;
  int v21 = &STACK[0xB999BAB1C512313];
  uint64_t v31 = &STACK[0xB999BAB1C512313];
  (*(void (**)(unint64_t **))((char *)*(&off_10026C690 + (int)(v3 - 9)) + 8 * (int)(v3 ^ 0x913) - 4))(&v31);
  int v27 = v5 + 190382744;
  int v12 = v5 - 1064166063;
  int v15 = v5 + 1137360609;
  int v14 = v5 - 634755587;
  uint64_t v24 = &v30;
  _DWORD v8[2] = &v8[-196768032];
  v8[1] = (char *)&v8[-196768193] + 2;
  int v29 = v3 ^ 0x3ED;
  unsigned int v22 = v3 ^ 0xFFFFFC63;
  int v23 = (v3 - 924235113) & 0x3716BD6B;
  int v17 = (v3 - 356047019) & 0x1538DF67;
  unsigned int v10 = v3 - 954263968;
  unsigned int v11 = 37 * (v3 ^ 0x6F);
  unsigned int v9 = v3 - 1708995121;
  uint64_t v25 = v3 - 1708995121;
  unsigned int v26 = v3;
  unint64_t v16 = a1;
  int32x4_t v19 = vdupq_n_s32(0xDE6BE0E6);
  int32x4_t v20 = vdupq_n_s32(0x5E6BE0EFu);
  int32x4_t v18 = vdupq_n_s32(0x5E6BE0F6u);
  return sub_100099ED0(49, v11, 0x59BF7E53u, 88);
}

uint64_t sub_100087548()
{
  int v5 = 3804331 * ((v4 + 1666699428 - 2 * ((v4 - 128) & 0x6357D124)) ^ 0x1D82F4D2);
  *(_DWORD *)(v4 - 120) = v5 + v2 + 1369;
  *(_DWORD *)(v4 - 116) = v0 - v5 + (v2 ^ 0xF34D166F);
  *(void *)(v4 - 128) = v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 + 1660)))(v4 - 128);
  return sub_1000875C4(v6);
}

uint64_t sub_1000875C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(_DWORD *)(v27 - 104) = (v26 + 50) ^ (((2 * ((v27 - 128) & 0x2919DEE0) - (v27 - 128) + 1457922332) ^ 0x85447316) * v25);
  *(void *)(v27 - 112) = a23;
  *(void *)(v27 - 128) = a21;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v26 + 1331)))(v27 - 128);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((*(_DWORD *)(v27 - 120) <= (v23 + v26 - 831 - 229))
                                              * ((3 * (v26 ^ 0x45B)) ^ 0x171)) ^ v26)))(v28);
}

uint64_t sub_10008766C(uint64_t a1, uint64_t a2)
{
  int v6 = 73 * (v4 ^ 0x158) + **(unsigned __int8 **)(a2 + 8) - 407;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1044 * ((v3 & (2 * v6)) + (v6 ^ v2) == v2)) ^ v4)))();
}

uint64_t sub_10008773C@<X0>(int a1@<W0>, unsigned char *a2@<X5>, int a3@<W8>)
{
  unsigned int v13 = a3 + 16;
  uint64_t v14 = v13 - 16;
  unsigned int v15 = (v14 >> 4) - (v5 & (v14 >> 3)) + v6;
  a2[12] = (v7 ^ HIBYTE(v15)) - (((v7 ^ HIBYTE(v15)) << (v4 + 89)) & v8) + 119;
  a2[13] = (BYTE2(v15) ^ 0x18) - ((2 * (BYTE2(v15) ^ 0x18)) & 0xEF) + 119;
  a2[14] = (v9 ^ BYTE1(v15)) - ((2 * (v9 ^ BYTE1(v15))) & 0xEF) + 119;
  a2[15] = v15 ^ v10;
  unint64_t v16 = (unsigned char *)(v3 + v14);
  *v16 ^= *a2 ^ 0x77;
  v16[1] ^= a2[1] ^ 0x77;
  v16[2] ^= a2[2] ^ 0x77;
  v16[3] ^= a2[3] ^ 0x77;
  v16[4] ^= a2[4] ^ 0x77;
  v16[5] ^= a2[5] ^ 0x77;
  v16[6] ^= a2[6] ^ 0x77;
  v16[7] ^= a2[7] ^ 0x77;
  v16[8] ^= a2[8] ^ 0x77;
  v16[9] ^= a2[9] ^ 0x77;
  v16[10] ^= a2[10] ^ 0x77;
  v16[11] ^= a2[11] ^ 0x77;
  v16[12] ^= a2[12] ^ 0x77;
  v16[13] ^= a2[13] ^ 0x77;
  v16[14] ^= a2[14] ^ 0x77;
  v16[15] ^= a2[15] ^ 0x77;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v13 > 0x14F) * a1) ^ (v12 + 321))))();
}

uint64_t sub_100087744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v33 = 268847287 * ((v32 - 192) ^ 0xFFAA1128);
  *(_DWORD *)(v32 - 192) = (v29 - ((2 * v29 + 75767828) & 0xBCD7C1CC) + v31 - 525472318) ^ v33;
  *(void *)(v32 - 184) = a29;
  *(_DWORD *)(v32 - 176) = v33 + v31 + 589 - 362;
  (*(void (**)(uint64_t))(v30 + 8 * (v31 + 1508)))(v32 - 192);
  return sub_100070DF8();
}

void sub_1000877C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v27 - 144) = a25;
  *(void *)(v27 - 136) = v26;
  *(void *)(v27 - 128) = v26;
  *(void *)(v27 - 120) = a22;
  *(_DWORD *)(v27 - 112) = v25
                         - 1029
                         - 1224239923
                         * ((68696897 - ((v27 - 144) | 0x4183B41) + ((v27 - 144) | 0xFBE7C4BE)) ^ 0x9543969)
                         + 243;
  *(void *)(v27 - 104) = a16;
  JUMPOUT(0x100087838);
}

uint64_t sub_100087850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v73 = (v70 + 433637874) & 0xE627337F;
  LODWORD(STACK[0x504]) = 0;
  int v74 = LODWORD(STACK[0x504])++;
  *(_DWORD *)STACK[0x240] = v74 + 1;
  *(void *)(v72 - 176) = *(unsigned int *)STACK[0x288] + a70;
  *(void *)(v72 - 160) = a69;
  *(_DWORD *)(v72 - 152) = a70;
  *(_DWORD *)(v72 - 148) = (v73 + 1602953937) ^ a70;
  *(_DWORD *)(v72 - 184) = a70 + v73 - 1501686658;
  int v75 = (v73 + 1602953798) ^ a70;
  *(_DWORD *)(v72 - 192) = v75;
  *(_DWORD *)(v72 - 188) = v75 ^ 0x1B;
  uint64_t v76 = (*(uint64_t (**)(uint64_t))(v71 + 8 * (int)(v73 ^ 0xA53)))(v72 - 192);
  return (*(uint64_t (**)(uint64_t))(v71 + 8 * *(int *)(v72 - 168)))(v76);
}

uint64_t sub_100087914()
{
  LODWORD(STACK[0x2B8]) = v0;
  return sub_100087954(2147482357);
}

uint64_t sub_100087954()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((385
                                * (((v2 - 1) ^ (*(unsigned __int8 *)(v0
                                                                                    + v3
                                                                                    + v5
                                                                                    + (v2 + 428)) == *(unsigned __int8 *)(v1 + v3 + v5 + (v2 + 428)))) & 1)) ^ v2)))();
}

uint64_t sub_100087994(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((a4 + 155 + ((a4 - 154) | 0x2A9) - 647) * (v4 == a2)) ^ a4)))();
}

uint64_t sub_1000879C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25
                                                                                         + 8
                                                                                         * ((1704
                                                                                           * (a24 == ((v24 + 642) ^ 0xE7DC2832))) ^ v24)))(a1, a2, a3, a4, a5, 3731611878);
}

uint64_t sub_100087A0C()
{
  unsigned int v5 = v2 + v4 + ((v3 - 2124) ^ 0x204) - 1111285206;
  BOOL v6 = v5 < 0x353E6398;
  BOOL v7 = v5 > v0 + 762509033;
  if ((v0 + 762509033) < 0x353E6398 != v6) {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((92 * v7) ^ v3)))();
}

uint64_t sub_100087A84@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24)
{
  int v28 = 235795823 * ((((v27 - 120) ^ 0x256BA31D) & 0xF7DF73A9 | ~((v27 - 120) ^ 0x256BA31D | 0xF7DF73A9)) ^ 0xB9E66612);
  *(_DWORD *)(v27 - 112) = (-1874843427 * a1 - ((545280442 * a1 + 355171766) & 0xF1E4AC5C) - 2088233719) ^ v28;
  *(_DWORD *)(v27 - 108) = v28 + v25 - 1882358577;
  *(void *)(v27 - 120) = &STACK[0xB999BAB1C5120EF];
  (*(void (**)(uint64_t))(v24 + 8 * (v25 + 1276)))(v27 - 120);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((63
                                              * (*v26
                                               + 177437691
                                               + ((2 * a24) & 0xA ^ 8)
                                               + (a24 & 0x3F ^ (((5 * (v25 ^ 0x447) - 1930858647) & 0x731697D9u)
                                                              - 201328878)) > 0xFFFFFFBF)) ^ v25)))(4114095902);
}

uint64_t sub_100087C5C@<X0>(int a1@<W8>, __n128 a2@<Q0>)
{
  uint64_t v6 = (a1 + 1505148183) & 0xA64943ED;
  uint64_t v7 = v4 + v2 + ((v6 - 0x2C2F364FA24C55B0) ^ ((a1 + 156) | 0xEu));
  *(_DWORD *)uint64_t v7 = 23889152;
  *(void *)(v7 + 8) = 0;
  *(_DWORD *)(v7 + 16) = 14250141;
  *(_DWORD *)(v7 + 24) = 1704253533;
  *(void *)(v7 + 32) = 0;
  *(_DWORD *)(v7 + 40) = 1704253533;
  *(void *)(v7 + 48) = 0;
  STACK[0x4D0] = v7 + 40;
  STACK[0x558] = v7 + 48;
  *(_DWORD *)(v7 + 56) = 1704253533;
  STACK[0x470] = v7 + 56;
  *(void *)(v7 + 64) = 0;
  *(_DWORD *)(v7 + 72) = 1704253533;
  STACK[0x3C0] = v7 + 64;
  STACK[0x530] = v7 + 72;
  *(void *)(v7 + 80) = 0;
  STACK[0x4E0] = v7 + 80;
  *(unsigned char *)(v7 + 88) = 67;
  *(_DWORD *)uint64_t v3 = 23889152;
  *(__n128 *)(v3 + 4) = a2;
  *(_DWORD *)(v3 + 20) = 0;
  *(_DWORD *)(v3 + 24) = 1704253533;
  *(_DWORD *)(v3 + 28) = 1657738042;
  STACK[0x238] = v3 + 28;
  *(_DWORD *)(v3 + 232) = 1657738042;
  STACK[0x220] = v3 + 232;
  *(__n128 *)(v3 + 436) = a2;
  *(__n128 *)(v3 + 452) = a2;
  *(void *)(v3 + 468) = 0;
  strcpy((char *)(v3 + 1128), "wwwwwwwwwwwwwwwwwwww");
  *(unsigned char *)(v3 + 1149) = 0;
  *(_WORD *)(v3 + 1150) = 0;
  *(__n128 *)(v3 + 1152) = a2;
  *(__n128 *)(v3 + 1168) = a2;
  *(__n128 *)(v3 + 1184) = a2;
  return (*(uint64_t (**)(void))(v5 + 8 * ((230 * (-v6 != -1129)) ^ ((int)v6 - 26))))();
}

uint64_t sub_100087DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100087DE8(a1, a2, a3, 853);
}

uint64_t sub_100087DE8@<X0>(int a1@<W1>, unsigned int a2@<W3>, uint64_t a3@<X4>, int a4@<W8>, int8x16_t a5@<Q2>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(int8x16_t *)(a3 + (a4 + a1 + v25)) = vaddq_s8(vaddq_s8(*(int8x16_t *)(a24 + v25), a5), vmvnq_s8(vandq_s8(vaddq_s8(*(int8x16_t *)(a24 + v25), *(int8x16_t *)(a24 + v25)), v28)));
  return (*(uint64_t (**)(void))(v27 + 8 * ((1941 * (v25 + 3 * (v24 ^ a2) - 758 == v26)) ^ v24)))();
}

uint64_t sub_100087E40@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = 4 * (v11 + v8);
  int v15 = v3 + v13 + (*(_DWORD *)(*(void *)(a3 - 0x5E8E72AB319E4281) + v14) ^ v9);
  *(_DWORD *)(*(void *)(a1 - 0x5E8E72AB319E4281) + v14) = v9 + v15 - (v12 & (2 * v15));
  int v16 = v4 + v11 + 709;
  BOOL v18 = v16 > v5 || v16 < v6;
  return (*(uint64_t (**)(void))(v10 + 8 * ((2904 * v18) ^ (v7 - 115086191) & 0x6DC13FBu)))();
}

uint64_t sub_100087F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  unint64_t v64 = STACK[0x380];
  int v65 = STACK[0x554];
  int v66 = ((v62 ^ 0x286) + 1620908518) & (2 * LODWORD(STACK[0x554]));
  int v67 = 268847287 * ((((v63 - 192) | 0x63168F3F) - ((v63 - 192) & 0x63168F3F)) ^ 0x9CBC9E17);
  *(_DWORD *)(v63 - 136) = v60 - v67 + 628442011;
  *(void *)(v63 - 144) = a59;
  *(_DWORD *)(v63 - 168) = v65 - v67 - v66 + 810454666;
  *(_DWORD *)(v63 - 152) = v62 - v67 + 368399753;
  *(void *)(v63 - 160) = v64;
  *(void *)(v63 - 192) = a58;
  *(void *)(v63 - 176) = v59;
  uint64_t v68 = (*(uint64_t (**)(uint64_t))(v61 + 8 * (v62 ^ 0x8C5)))(v63 - 192);
  int v69 = *(_DWORD *)(v63 - 184);
  LODWORD(STACK[0x4AC]) = v69;
  return (*(uint64_t (**)(uint64_t))(v61 + 8 * ((668 * (v69 == -563355418)) ^ v62)))(v68);
}

uint64_t sub_100088024@<X0>(int a1@<W8>)
{
  uint64_t v9 = v2 - 1;
  *(unsigned char *)(v4 + v9) = ((v1 + 106) ^ v3) * (v1 + 123);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 & ~(v8 ^ (v9 == 0))) * v6) ^ a1)))();
}

uint64_t sub_100088030(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 ^ 0x347) + 2113) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_10008805C@<X0>(int a1@<W8>)
{
  unsigned __int8 v4 = *(void *)(v1 + 16) == 0x354295EB77E74961 || *(_OWORD *)(v1 + 40) == 0;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((32 * (((((a1 + 8) ^ (a1 + 18)) ^ v4) & 1) == 0)) & 0xBF | (((((a1 + 8) ^ (a1 + 18)) ^ ~v4) & 1) << 6)) ^ (a1 + 273))))();
}

void sub_1000880D0()
{
  _DWORD *v0 = v1;
  sub_10008E84C();
}

void sub_1000880D8()
{
}

uint64_t sub_1000881B4@<X0>(void *a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, char a6@<W5>, int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  int v17 = a2 + 1;
  unsigned int v18 = ((2 * (*(_DWORD *)(*a1 + 4 * (v17 + a9 + v13 + 1)) ^ v10)) << a6) | ((*(_DWORD *)(*a1 + 4 * (v17 + a9 + v13)) ^ v10) >> v9);
  *(_DWORD *)(*a1 + 4 * (v17 + a7 + (a3 | a4))) = v18 + v10 - (v11 & (2 * v18));
  BOOL v20 = v17 + a8 > v15 || v17 + a8 < v12;
  return (*(uint64_t (**)(void))(v14 + 8 * ((v20 * v16) ^ a5)))();
}

void sub_1000881BC(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  a4 = v7;
  a5 = v7;
  a3 = (v8 + 101) ^ (2078219279
                   * (((&a3 | 0xEB04F5FB) - &a3 + (&a3 & 0x14FB0A00)) ^ 0x31FE638F));
  a6 = a1;
  (*(void (**)(unsigned int *))(v6 + 8 * (v8 ^ 0xDFB)))(&a3);
  sub_1000A20B8();
}

uint64_t sub_100088228(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * (((a2 - 732163552 < (a4 - 1928)) * (73 * (a4 ^ 0x7BB) - 102)) ^ a4)))();
}

uint64_t sub_100088268(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, int a16, unsigned int a17)
{
  unsigned int v18 = ((a7 + a5 + 382) ^ 0x58B3E203 ^ ((a7 + a5 - 38) | 0x82)) + a14;
  BOOL v19 = v18 < a4;
  BOOL v20 = v18 > a17;
  if (a17 < a4 != v19) {
    BOOL v21 = v19;
  }
  else {
    BOOL v21 = v20;
  }
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * (v21 ^ (a7 + a5 + 1274))))(4114095902);
}

uint64_t sub_100088270()
{
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((1765 * (*(_DWORD *)(v1 + 4 * (v3 + v6 + (v2 | 0x484u) - 1197)) == v4)) ^ v0)))();
}

uint64_t sub_1000882AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 3804331 * ((((v19 - 136) | 0x5617FA1D) - (v19 - 136) + ((v19 - 136) & 0xA9E805E0)) ^ 0x28C2DFEB);
  *(void *)(v19 - 136) = v14;
  *(_DWORD *)(v19 - 128) = v20 + v18 + 1653;
  *(_DWORD *)(v19 - 124) = v17 - v20 - 740910630;
  (*(void (**)(uint64_t))(v16 + 8 * (v18 ^ 0x878)))(v19 - 136);
  *(_DWORD *)(v19 - 112) = (v18 + 610) ^ (69008221 * ((v19 - 136) ^ 0xD3A2520A));
  *(void *)(v19 - 120) = a14;
  *(void *)(v19 - 136) = v15;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v18 + 1891)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((90 * (*(_DWORD *)(v19 - 128) > ((9 * (v18 ^ 0x145)) ^ 0x74F05240u))) ^ (v18 + 1581))))(v21);
}

uint64_t sub_1000883C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  if (v12) {
    BOOL v16 = a12 == ((v13 + 1768) ^ (v14 + 1614));
  }
  else {
    BOOL v16 = 0;
  }
  int v17 = v16;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v17 * (v13 ^ 0xF6)) ^ v13)))();
}

uint64_t sub_100088410(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v11 = (*(unsigned __int8 *)(STACK[0x4A0] + 1516) ^ a6) - (*(unsigned char *)STACK[0x518] - 55);
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((((((((v6 - 2165) | 0x27) + a1) & a2 ^ v8) & (2 * v11)) + (v11 ^ v7) == v7) * v9) ^ ((v6 - 2165) | 0x27))))();
}

uint64_t sub_10008847C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*(void *)(a2 + 96) + 24) = v3;
  int v4 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) + 886460230) & 0x59EAC232) + 1197508796;
  return (*(uint64_t (**)(void))(v2
                                           + 8
                                           * ((122
                                             * (((2 * v4) & 0x4FE5FFA6 ^ 0x49E0C222) + (v4 ^ 0xB079ECA) + 1602052080 != 124805059)) ^ 0xB6u)))(0);
}

uint64_t sub_100088540@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * ((740
                                * (*(_DWORD *)(a19 + 4 * (v20 - 205 + a1 + v20 + 586 + v21)) == v19)) ^ (v20 - 205))))();
}

uint64_t sub_100088580@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,uint64_t a27,_DWORD *a28)
{
  *a28 ^= a26;
  return (*(uint64_t (**)(void))(v28
                              + 8
                              * (int)((v29 - 1340331332 + ((a1 + 2146575159) & 0x800DDA7D) + 1340331071 == 1904945320) | (a1 + 2146575159) & 0x800DDA7D)))();
}

uint64_t sub_1000885FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, int a17, uint64_t a18, unint64_t *a19, int a20)
{
  unsigned int v23 = 1224239923 * (&a15 ^ 0xF2B3FDD7);
  a18 = a12;
  a19 = &STACK[0x634ED76D4AB882AD];
  a15 = v23 ^ 0x6BCE5709;
  a16 = (v22 - 2024874624) ^ v23;
  a17 = v23 ^ 0x74453DCB;
  uint64_t v24 = (*(uint64_t (**)(int *))(v20 + 8 * (v22 + 840)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * (((a20 == v21)
                                              * ((((v22 - 506) | 0x24) + 2690) ^ (v22 - 172932680) & 0xA4EB8FA)) ^ v22)))(v24);
}

uint64_t sub_1000886C8()
{
  unsigned int v5 = (((v3 + 111) | 0x130) ^ 0xFFFFFC35) + *(unsigned __int8 *)(v2 + 4);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1027 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_100088710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  *(void *)(&a33 + v35 + a2) = 0x7777777777777777;
  return (*(uint64_t (**)(void))(v36 + 8 * ((((v34 & 0xFFFFFFFFFFFFFFF8) == 8) * (145 * (v33 ^ 0x172) + 1519)) ^ v33)))();
}

uint64_t sub_100088760()
{
  unsigned int v4 = ((v3 + v2 - 512 - 302) ^ v1) + (LODWORD(STACK[0x57C]) ^ v3);
  *(_DWORD *)(STACK[0x210] + 52) = ((v4 % 0x2710) ^ 0xF6FBE7D7) + 1842740733 + ((2 * (v4 % 0x2710)) & 0x4FAE);
  int v5 = STACK[0x584];
  STACK[0x508] -= 1616;
  LODWORD(STACK[0x54C]) = v5;
  return (*(uint64_t (**)(void))(v0 + 8 * ((51 * (v5 != v3)) ^ (v2 - 529))))();
}

uint64_t sub_1000887F8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v0 == v1) ^ (29 * (v2 ^ 0xB1))) & 1) * ((3 * (v2 ^ 0x755)) ^ 0x244)) ^ v2)))();
}

uint64_t sub_100088840(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0x90DDF0DD)
                       + 1878753216
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0xBBBB);
  return 0;
}

void sub_100088878()
{
}

uint64_t sub_100088880(int8x8_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  *(int8x8_t *)(a4 + (v6 - 8)) = veor_s8(*(int8x8_t *)(v7 + (v6 - 8)), a1);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 == -8) * a3) ^ a6)))();
}

uint64_t sub_100088890(uint64_t a1, int a2, int a3, uint64_t a4)
{
  *(void *)(a4 + v6) = *(void *)(v5 + v6);
  return (*(uint64_t (**)(void))(v7 + 8 * (((a3 == 0) * v4) ^ a2)))();
}

uint64_t sub_1000888C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v3 + 127 - v1;
  int8x16_t v6 = vrev64q_s8(*(int8x16_t *)(v5 - 15));
  int8x16_t v7 = vextq_s8(v6, v6, 8uLL);
  int8x16_t v8 = vrev64q_s8(*(int8x16_t *)(v5 - 31));
  int8x16_t v9 = vextq_s8(v8, v8, 8uLL);
  uint64_t v10 = a1 + 127 - v1;
  v11.i64[0] = 0xEEEEEEEEEEEEEEEELL;
  v11.i64[1] = 0xEEEEEEEEEEEEEEEELL;
  v12.i64[0] = 0x7777777777777777;
  v12.i64[1] = 0x7777777777777777;
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v7, vandq_s8(vaddq_s8(v7, v7), v11)), v12));
  *(int8x16_t *)(v10 - 15) = vextq_s8(v13, v13, 8uLL);
  int8x16_t v14 = vrev64q_s8(vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v11)), v12));
  *(int8x16_t *)(v10 - 31) = vextq_s8(v14, v14, 8uLL);
  return (*(uint64_t (**)(void))(v4 + 8 * ((2002 * (v1 + 32 == (v2 - 225) - 370)) ^ v2)))();
}

void sub_100088954()
{
}

uint64_t sub_10008897C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(a5 + 1) = *(unsigned char *)(a8 + (v8 - 1349855229));
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((((v8 & 0xFFFFFFFC) == 1349855228) * ((v9 - 1122621559) & 0x42E9D3FB ^ 0x3F2)) ^ v9)))();
}

uint64_t sub_1000889FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (int)(((((3 * (v10 ^ 0x30F)) ^ 0xFFFFFBF3) + ((v10 + 354) | 0x103)) * (v9 == 0)) ^ (v10 - 164))))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_100088A4C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned char *a22)
{
  uint64_t v25 = *(unsigned char **)(v24 + 96);
  v25[1167] = a22[19];
  v25[1166] = a22[18];
  v25[1165] = a22[17];
  v25[1164] = a22[16];
  v25[1163] = a22[15];
  v25[1162] = a22[14];
  v25[1161] = a22[13];
  v25[1160] = a22[12];
  v25[1159] = a22[11];
  v25[1158] = a22[10];
  v25[1157] = a22[9];
  v25[1156] = a22[8];
  v25[1155] = a22[7];
  v25[1154] = a22[6];
  v25[1153] = a22[5];
  v25[1152] = a22[4];
  v25[1151] = a22[3];
  v25[1150] = a22[2];
  v25[1149] = a22[1];
  v25[1148] = *a22;
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (int)((((((v22 + 1165518999) & 0xBA8793FF) + 1515641792) & 0xFFBF6F37 ^ (a4 - 131))
                                                   * (*(_DWORD *)(v24 + 72) == a5 + 7)) ^ (v22 + 1165518999) & 0xBA8793FF)))(a7);
}

void sub_100088B74()
{
}

uint64_t sub_100088C50(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v8 = *v4;
  unint64_t v9 = (2 * ((v7 - 144) & 0x44A332D25A70D0D8) - (v7 - 144) - 0x44A332D25A70D0DCLL) ^ 0xB3EC77D33122667DLL;
  int v10 = (v3 + 1335686706) ^ (v9 * v6);
  *(_DWORD *)(v7 - 112) = ((v3 + 1335686706) ^ 0x59) - v9 * v6;
  *(_DWORD *)(v7 - 108) = v10 ^ 0x2D;
  *(_DWORD *)(v7 - 144) = -(v9 * v6);
  *(void *)(v7 - 136) = -(uint64_t)(v9 * v6);
  *(void *)(v7 - 120) = v8 - v9 * v6;
  *(_DWORD *)(v7 - 128) = v10;
  *(_DWORD *)(v7 - 124) = (v3 + 681032122) ^ (v9 * v6);
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v3 ^ (a3 + 2415))))(v7 - 144);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v7 - 140)))(v11);
}

void sub_100088D4C()
{
}

uint64_t sub_100088D54(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(result + 8) = a4;
  return result;
}

uint64_t sub_100088D5C@<X0>(uint64_t a1@<X6>, int a2@<W7>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v5 + (v4 + a2)) = *(unsigned char *)(v6 + a3 + a1);
  return (*(uint64_t (**)(void))(v7 + 8 * ((((a2 + v4 + 1) > 0x3F) * v8) ^ v3)))();
}

void sub_100088DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  LODWORD(STACK[0x4AC]) = a8 - 54;
  JUMPOUT(0x10006EF94);
}

uint64_t sub_100088DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  *(_DWORD *)(STACK[0x210] + 360) = 56245773;
  uint64_t v65 = (*(uint64_t (**)(void, uint64_t, unint64_t *, unint64_t, void, uint64_t, unint64_t *, unint64_t *))(v62 + 8 * (v57 ^ 0xA62)))(LODWORD(STACK[0x2A8]), 2, &STACK[0x440], STACK[0x338], (v59 - 1704253533), a6, &STACK[0x3A0], &STACK[0x46C]);
  int v69 = ((2 * v65) & 0xF26E5FFE) + (v65 ^ 0xF9372FFF);
  LODWORD(STACK[0x3BC]) = v69 + 1610413280;
  if (v69 == -113823745)
  {
    LODWORD(STACK[0x444]) = 1804530023;
    STACK[0x4B8] = STACK[0x3A0];
    uint64_t v71 = (LODWORD(STACK[0x46C]) ^ 0xF59EDAFD) + 1878392160 + ((2 * LODWORD(STACK[0x46C])) & 0xEB3DB5FA);
    STACK[0x408] = v60;
    STACK[0x4B0] = v58;
    uint64_t v72 = (char *)&STACK[0x5C0] + v61 - 0x2C2F364FA24C4789;
    STACK[0x4F0] = (unint64_t)v72;
    STACK[0x388] = (unint64_t)&STACK[0x5C0] + v61 - 0x2C2F364FA24C4709;
    *(void *)uint64_t v72 = 0x6370646600;
    v72[8] = 1;
    STACK[0x260] = (unint64_t)&STACK[0x5C0] + v61 - 0x2C2F364FA24C4780;
    STACK[0x508] = v61 + 4208;
    BOOL v73 = ((v63 - 1883204015) & 0x703F66E6 ^ 0x7BC3E791) != 2076436352;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, unint64_t *, unint64_t *, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * ((v73 | (8 * v73)) ^ (v63 + 1059))))(v65, v66, v67, 3553918821, 1892305836, v71, 741048474, 563395391, &STACK[0x378], &STACK[0x45C], &STACK[0x44C], &STACK[0x52C], a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             *(void *)(v62 + 8 * (v63 - 789)),
             a53,
             a54,
             a55,
             a56,
             a57);
  }
  else if (v69 == 154611714)
  {
    LODWORD(STACK[0x54C]) = 563395550;
    return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v62
                                                                                  + 8
                                                                                  * (((STACK[0x3A0] != 0)
                                                                                    * (((v63 - 294) | 0x444) - 1490)) ^ (v63 - 120))))(v65, STACK[0x3A0], v67, v68);
  }
  else
  {
    unsigned int v74 = v69 - ((2 * (v69 + 1610413280) + 1301788226) & 0xBCD7C1CC) - 449531673;
    int v75 = 268847287 * ((((v64 - 192) | 0xA2D6F03B) - (v64 - 192) + ((v64 - 192) & 0x5D290FC0)) ^ 0x5D7CE113);
    *(_DWORD *)(v64 - 176) = v75 + v63 + 227;
    *(_DWORD *)(v64 - 192) = v74 ^ v75;
    *(void *)(v64 - 184) = a30;
    uint64_t v76 = (*(uint64_t (**)(uint64_t))(v62 + 8 * (v63 ^ 0xA3C)))(v64 - 192);
    return (*(uint64_t (**)(uint64_t))(v62
                                              + 8
                                              * (((STACK[0x3A0] != 0) * (((v63 - 294) | 0x444) - 1490)) ^ (v63 - 120))))(v76);
  }
}

uint64_t sub_1000890F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v9 - 181 + v6) ^ (v9 - v7 - 1108)) * (v8 == a5)) ^ v9)))(0);
}

uint64_t sub_100089198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * (((*(_DWORD *)(a14 + 4 * (v16 + v18 + 1)) == v14)
                                * (((v15 - 978) | 0x190) ^ 0x2D3)) | (v15 - 22))))();
}

uint64_t sub_1000891E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  if (v48 == 56245776 || v48 == 56245779)
  {
    int v52 = v50 + 661;
    LOBYTE(STACK[0x185F]) = LOBYTE(STACK[0x186F]) - ((2 * LOBYTE(STACK[0x186F])) & 0xEF) + 119;
    LOBYTE(STACK[0x185E]) = LOBYTE(STACK[0x186E]) - ((v50 - 64) & (2 * LOBYTE(STACK[0x186E]))) + 119;
    LOBYTE(STACK[0x185D]) = LOBYTE(STACK[0x186D]) - ((2 * LOBYTE(STACK[0x186D])) & 0xEF) + 119;
    LOBYTE(STACK[0x185C]) = LOBYTE(STACK[0x186C]) - ((2 * LOBYTE(STACK[0x186C])) & 0xEF) + 119;
    LOBYTE(STACK[0x185B]) = LOBYTE(STACK[0x186B]) - ((2 * LOBYTE(STACK[0x186B])) & 0xEF) + 119;
    LOBYTE(STACK[0x185A]) = LOBYTE(STACK[0x186A]) - ((2 * LOBYTE(STACK[0x186A])) & 0xEF) + 119;
    LOBYTE(STACK[0x1859]) = LOBYTE(STACK[0x1869]) - ((2 * LOBYTE(STACK[0x1869])) & 0xEF) + 119;
    LOBYTE(STACK[0x1858]) = LOBYTE(STACK[0x1868]) - ((2 * LOBYTE(STACK[0x1868])) & 0xEF) + 119;
    LOBYTE(STACK[0x1857]) = LOBYTE(STACK[0x1867]) - ((2 * LOBYTE(STACK[0x1867])) & 0xEF) + 119;
    LOBYTE(STACK[0x1856]) = LOBYTE(STACK[0x1866]) - ((2 * LOBYTE(STACK[0x1866])) & 0xEF) + 119;
    LOBYTE(STACK[0x1855]) = LOBYTE(STACK[0x1865]) - ((2 * LOBYTE(STACK[0x1865])) & 0xEF) + 119;
    LOBYTE(STACK[0x1854]) = LOBYTE(STACK[0x1864]) - ((2 * LOBYTE(STACK[0x1864])) & 0xEF) + 119;
    LOBYTE(STACK[0x1853]) = LOBYTE(STACK[0x1863]) - ((2 * LOBYTE(STACK[0x1863])) & 0xEF) + 119;
    LOBYTE(STACK[0x1852]) = LOBYTE(STACK[0x1862]) - ((2 * LOBYTE(STACK[0x1862])) & 0xEF) + 119;
    LOBYTE(STACK[0x1851]) = LOBYTE(STACK[0x1861]) - ((2 * LOBYTE(STACK[0x1861])) & 0xEF) + 119;
    int v48 = STACK[0x47C];
    char v53 = LOBYTE(STACK[0x1860]) - ((2 * LOBYTE(STACK[0x1860])) & 0xEF) + 119;
  }
  else
  {
    int v52 = v50 + 661;
    LOBYTE(STACK[0x185F]) = STACK[0x187F];
    LODWORD(STACK[0x185B]) = STACK[0x187B];
    STACK[0x1853] = STACK[0x1873];
    LOWORD(STACK[0x1851]) = STACK[0x1871];
    char v53 = STACK[0x1870];
  }
  LOBYTE(STACK[0x1850]) = v53;
  unint64_t v54 = STACK[0x4E8];
  int v55 = LODWORD(STACK[0x39C]) ^ 0x578FEB5F;
  unsigned int v56 = (LODWORD(STACK[0x39C]) << ((61 * (v52 ^ 0xD4)) ^ 0x7A)) & 0xAF1FD6BE;
  int v57 = 2078219279 * ((v51 - 192 - 2 * ((v51 - 192) & 0x1033CA39) + 271829561) ^ 0xCAC95C4D);
  LOBYTE(STACK[0x1918]) = 15 * ((v51 + 64 - 2 * ((v51 + 64) & 0x39) + 57) ^ 0x4D) - 68;
  *(_DWORD *)(v51 - 152) = (v48 + 499745704) ^ v57;
  *(void *)(v51 - 192) = v47;
  *(void *)(v51 - 184) = v54;
  *(void *)(v51 - 144) = a47;
  *(void *)(v51 - 176) = &STACK[0x1850];
  *(void *)(v51 - 160) = a27;
  *(_DWORD *)(v51 - 132) = v57 + 3 * (v52 ^ 0x48A) + v55 + v56 - 33687019;
  *(_DWORD *)(v51 - 128) = v57 + v52 - 751;
  uint64_t v58 = (*(uint64_t (**)(uint64_t))(v49 + 8 * (v52 + 1007)))(v51 - 192);
  int v59 = *(_DWORD *)(v51 - 168);
  LODWORD(STACK[0x4AC]) = v59;
  return (*(uint64_t (**)(uint64_t))(v49 + 8 * ((961 * (v59 == -563355418)) ^ v52)))(v58);
}

uint64_t sub_1000894EC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v5 = (335 - v2);
  int8x16_t v6 = vrev64q_s8(*(int8x16_t *)(a2 + v5 - 15));
  int8x16_t v7 = vextq_s8(v6, v6, 8uLL);
  int8x16_t v8 = vrev64q_s8(*(int8x16_t *)(a2 + v5 - 31));
  int8x16_t v9 = vextq_s8(v8, v8, 8uLL);
  uint64_t v10 = a1 + v5;
  v11.i64[0] = 0xEEEEEEEEEEEEEEEELL;
  v11.i64[1] = 0xEEEEEEEEEEEEEEEELL;
  v12.i64[0] = 0x7777777777777777;
  v12.i64[1] = 0x7777777777777777;
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v7, vandq_s8(vaddq_s8(v7, v7), v11)), v12));
  *(int8x16_t *)(v10 - 15) = vextq_s8(v13, v13, 8uLL);
  int8x16_t v14 = vrev64q_s8(vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v11)), v12));
  *(int8x16_t *)(v10 - 31) = vextq_s8(v14, v14, 8uLL);
  return (*(uint64_t (**)(void))(v4 + 8 * ((63 * (((v3 + 429) ^ 0x30E) + v2 == 320)) ^ v3)))();
}

uint64_t sub_100089584(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((19 * (((a4 - ((((a1 ^ 0xC17) - 648) ^ 0x1D3) & v4)) & 0xFFFFFFFC) > a4 + 3)) ^ a1)))();
}

uint64_t sub_1000895D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * ((117 * ((a5 + 1 + v7) < 0x50)) ^ v6)))(v5, a4);
}

uint64_t sub_10008968C@<X0>(int a1@<W3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((4044 * (a2 == v4)) ^ (v3 + a1 + 1784))))();
}

uint64_t sub_1000896B8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((((*(unsigned __int8 *)(v2 + 5) - 13) << ((v3 + 98) & 0x71 ^ 0x70)) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 5) - 13) ^ v0) == v0)
                                * (((v3 - 47736415) & 0x2D867FD) - 278)) ^ v3)))();
}

void sub_100089728(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 268847287 * ((((2 * a1) | 0x834EB920) - a1 - 1101487248) ^ 0xBE0D4DB8);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000897E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v26 - 136) = a24;
  *(_DWORD *)(v26 - 128) = (v25 + 1339) ^ (2078219279
                                         * ((((v26 - 144) ^ 0x2A25DA3C | 0xB199E2BB)
                                           - ((v26 - 144) ^ 0x2A25DA3C)
                                           + (((v26 - 144) ^ 0x2A25DA3C) & 0x4E661D44)) ^ 0x4146AEF3));
  *(_DWORD *)(v26 - 140) = -2078219279
                         * ((((v26 - 144) ^ 0x2A25DA3C | 0xB199E2BB)
                           - ((v26 - 144) ^ 0x2A25DA3C)
                           + (((v26 - 144) ^ 0x2A25DA3C) & 0x4E661D44)) ^ 0x4146AEF3);
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v25 ^ 0x8C2)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((221
                                              * ((((v25 + 58) ^ (v25 + 79)) ^ (*(_DWORD *)(v26 - 144) == -56550210)) & 1)) ^ (v25 + 674))))(v27);
}

uint64_t sub_1000898AC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((46
                                * (v2 - a1 < (unint64_t)((407 * (v1 ^ 0x25C) + 1894673516) & 0x8F1192FF) - 634)) ^ v1)))();
}

uint64_t sub_100089900(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((3764 * (a1 + 1 == v4 + 80)) ^ a3)))();
}

uint64_t sub_100089AE4@<X0>(int a1@<W0>, int a2@<W7>, int a3@<W8>)
{
  *(unsigned char *)(v5 + v3) = *(unsigned char *)(v8 + (v4 + v6))
                      - ((2 * *(unsigned char *)(v8 + (v4 + v6))) & 0xEF)
                      + 119;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v3 == 63) * a1) ^ (a2 + a3 + 1785))))();
}

void sub_100089B30()
{
}

void sub_100089B48()
{
}

uint64_t sub_100089C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (v7 ^ ((v9 == v10) * a7))))();
}

uint64_t sub_100089C34@<X0>(unsigned __int8 *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,unsigned int a37,uint64_t a38,uint64_t a39)
{
  int v44 = v39 - 616;
  int v45 = 3 * ((v39 - 616) ^ 0x14B);
  uint64_t v46 = *(void *)(v42 + 8 * ((v39 - 616) ^ 0x381));
  int v47 = *(unsigned __int8 *)(v46 + (*(unsigned __int8 *)(v40 - 0x5EC77446536A4B75) ^ 0x85));
  HIDWORD(v48) = v47 ^ 1;
  LODWORD(v48) = ((v45 + 9) ^ v47) << 24;
  int v49 = ((v48 >> 30) ^ 0x9F) << 16;
  uint64_t v50 = *(void *)(v42 + 8 * ((v39 - 616) ^ 0x3BF)) - 8;
  int v51 = *(unsigned __int8 *)(v50 + (*(unsigned __int8 *)(v40 - 0x5EC77446536A4B6BLL) ^ 0xBFLL));
  HIDWORD(v48) = v51 ^ 2;
  LODWORD(v48) = (v51 ^ 0x40) << 24;
  unsigned __int8 v52 = v48 >> 28;
  int v53 = *(unsigned __int8 *)(v46 + (*(unsigned __int8 *)(v40 - 0x5EC77446536A4B71) ^ 0x6FLL));
  HIDWORD(v48) = v53 ^ 1;
  LODWORD(v48) = (v53 ^ 0x40) << 24;
  uint64_t v54 = *(void *)(v42 + 8 * (v39 - 1615));
  int v55 = ((v48 >> 30) ^ 0x68) << 16;
  uint64_t v56 = *(void *)(v42 + 8 * (v39 - 1617));
  unsigned __int8 v57 = *(unsigned char *)(v56 + (*(unsigned __int8 *)(v40 - 0x5EC77446536A4B6ALL) ^ 0xD8));
  int v58 = *(unsigned __int8 *)(v50 + (*(unsigned __int8 *)(v40 - 0x5EC77446536A4B67) ^ 0xBCLL));
  HIDWORD(v48) = v58 ^ 2;
  LODWORD(v48) = (v58 ^ 0x40) << 24;
  unsigned __int8 v59 = v48 >> 28;
  uint64_t v60 = v59 ^ 0x68;
  int v61 = *(unsigned __int8 *)(v50 + (*(unsigned __int8 *)(v40 - 0x5EC77446536A4B6FLL) ^ 0x98));
  HIDWORD(v48) = v61 ^ 2;
  LODWORD(v48) = (v61 ^ 0x40) << 24;
  unsigned int v62 = v55 & 0xFFFFFF00 | ((*(unsigned __int8 *)(v54 + (*(unsigned __int8 *)(v40 - 0x5EC77446536A4B70) ^ 0xDFLL)) ^ 0xF1) << 8) | ((*(unsigned __int8 *)(v56 + (*(unsigned __int8 *)(v40 - 0x5EC77446536A4B72) ^ 0xAFLL)) ^ 0x72) << 24) | (v48 >> 28);
  int v63 = v49 | ((*(unsigned __int8 *)(v54 + (*(unsigned __int8 *)(v40 - 0x5EC77446536A4B74) ^ 0x49)) ^ 0x7B) << 8);
  LODWORD(v50) = *(unsigned __int8 *)(v50 + (*(unsigned __int8 *)(v40 - 0x5EC77446536A4B73) ^ 0xD0));
  HIDWORD(v48) = v50 ^ 2;
  LODWORD(v48) = (v50 ^ 0x40) << 24;
  LOBYTE(v50) = v48 >> 28;
  int v64 = *(unsigned __int8 *)(v46 + (*(unsigned __int8 *)(v40 - 0x5EC77446536A4B69) ^ 0xB6));
  HIDWORD(v48) = v64 ^ 1;
  LODWORD(v48) = (v64 ^ 0x40) << 24;
  unsigned int v65 = v63 & 0xFFFFFF00 | ((*(unsigned __int8 *)(v56 + (*v41 ^ 0xFELL)) ^ 0xAB) << 24) | v50 ^ 0x3C;
  uint64_t v66 = (v48 >> 30) ^ 0x21;
  int v67 = *(unsigned __int8 *)(v46 + (*(unsigned __int8 *)(v40 - 0x5EC77446536A4B6DLL) ^ 0xC8));
  HIDWORD(v48) = v67 ^ 1;
  LODWORD(v48) = (v67 ^ 0x40) << 24;
  unint64_t v68 = (((*(unsigned __int8 *)(v54 + (*(unsigned __int8 *)(v40 - 0x5EC77446536A4B68) ^ 0xC7)) ^ 0x30) << 8) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(v57 ^ 0xA2u) << 24) | (v66 << 16) | v60) ^ 0x75F49EF4;
  uint64_t v69 = ((unsigned __int16)((((*(unsigned __int8 *)(v54
                                                                   + (*(unsigned __int8 *)(v40 - 0x5EC77446536A4B68) ^ 0xC7)) ^ 0x30) << 8) | v60) ^ 0x9EF4) >> 8);
  uint64_t v70 = *(void *)(v42 + 8 * (v44 & 0x20B0C461)) - 8;
  LODWORD(v60) = v52 | ((*(unsigned __int8 *)(v54 + (*(unsigned __int8 *)(v40 - 0x5EC77446536A4B6CLL) ^ 0xB7)) ^ 0xD0) << 8) & 0xFF00FFFF | (((v48 >> 30) ^ 0x37) << 16) | ((*(unsigned __int8 *)(v56 + (*(unsigned __int8 *)(v40 - 0x5EC77446536A4B6ELL) ^ 0x18)) ^ 0xED) << 24);
  int v71 = (v69 - ((2 * (v68 >> 8)) & 0x5E) + 358750255) ^ *(_DWORD *)(v70 + 4 * (v69 ^ 0xF5));
  uint64_t v72 = *(void *)(v42 + 8 * (v44 ^ 0x38F)) - 8;
  int v73 = *(_DWORD *)(v72 + 4 * (v57 ^ 0xBDu));
  HIDWORD(v48) = v73 ^ 2;
  LODWORD(v48) = v73 ^ 0xF97227DC;
  uint64_t v74 = *(void *)(v42 + 8 * (v44 ^ 0x388)) - 4;
  LODWORD(v66) = (v48 >> 2) ^ *(_DWORD *)(v74 + 4 * (v66 ^ 0xDD)) ^ (v71
                                                                                   - ((2 * v71) & 0xCE6A6C96)
                                                                                   - 415943093);
  uint64_t v75 = *(void *)(v42 + 8 * (v44 ^ 0x3C2)) - 4;
  unsigned int v228 = v65;
  int v76 = *(_DWORD *)(v75 + 4 * (v59 ^ 0xD9u)) ^ v65 ^ (v66 - ((2 * v66) & 0xDCE9BE20) - 294330608);
  unsigned int v229 = v62;
  int v225 = v76 ^ v62 ^ 0x2789BBD4;
  int v77 = v60 ^ 0xE6 ^ v225;
  int v78 = *(_DWORD *)(v72 + 4 * (((v77 ^ v68) >> 24) ^ 0x21));
  HIDWORD(v48) = v78 ^ 2;
  LODWORD(v48) = v78 ^ 0xF97227DC;
  *(_DWORD *)(v43 - 120) = -294330607;
  int v79 = ((v48 >> 2) - 294330607 + (~(2 * (v48 >> 2)) | 0x231641DF)) ^ *(_DWORD *)(v75
                                                                                + 4
                                                                                * ((v77 ^ v68) ^ 0xDEu));
  HIDWORD(v224) = v77 ^ v68;
  int v226 = v76;
  LODWORD(v224) = *(_DWORD *)(v70 + 4 * (((unsigned __int16)(v77 ^ v68) >> 8) ^ 0x1Eu)) ^ *(_DWORD *)(v74 + 4 * (((v77 ^ v68) >> 16) ^ 0x8Fu)) ^ v76 ^ ((((unsigned __int16)(v77 ^ v68) >> 8) ^ 0xEB) - ((2 * (((v77 ^ v68) >> 8) ^ 0x4BA6EB)) & 0x5E) + 358750255) ^ (v79 - ((2 * v79) & 0xCE6A6C96) - 415943093);
  unsigned int v80 = v224 ^ 0x76E748E2 ^ v76 ^ v62;
  int v227 = v68;
  LODWORD(v68) = v80 ^ v68;
  LODWORD(v66) = *(_DWORD *)(v72 + 4 * (BYTE3(v68) ^ 0xA2));
  HIDWORD(v48) = v66 ^ 2;
  LODWORD(v48) = v66 ^ 0xF97227DC;
  int v81 = v68 ^ 0xC84590C6;
  LODWORD(v66) = *(_DWORD *)(v70 + 4 * (((unsigned __int16)(v68 ^ 0x90C6) >> 8) ^ 0xF5u)) ^ *(_DWORD *)(v74 + 4 * (BYTE2(v68) ^ 0x6Cu)) ^ (((unsigned __int16)(v68 ^ 0x90C6) >> 8) - ((v68 >> 7) & 0x5E) + 358750255) ^ ((v48 >> 2) - ((2 * (v48 >> 2)) & 0xCE6A6C96) - 415943093);
  unint64_t v223 = __PAIR64__(v80, v68);
  HIDWORD(v222) = v224 ^ 0x76E748E2 ^ *(_DWORD *)(v75 + 4 * (v68 ^ 0x83u)) ^ (v66
                                                                                               - ((2 * v66) & 0xDCE9BE20)
                                                                                               - 294330608);
  LODWORD(v222) = HIDWORD(v222) ^ 0x2789BBD4 ^ v80;
  HIDWORD(v221) = v80 ^ v77;
  LODWORD(v68) = v222 ^ 0x8EDEEA78 ^ v80 ^ v77;
  unsigned int v82 = v68 ^ v81;
  int v83 = *(_DWORD *)(v72 + 4 * (((v68 ^ v81) >> 24) ^ 0x67));
  HIDWORD(v48) = v83 ^ 2;
  LODWORD(v48) = v83 ^ 0xF97227DC;
  int v84 = (v48 >> 2) ^ *(_DWORD *)(v70 + 4 * (BYTE1(v82) ^ 0x97u)) ^ ((BYTE1(v82) ^ 0x62)
                                                                    - ((2 * ((v82 >> 8) ^ 0xD8B62)) & 0x5E)
                                                                    + 358750255);
  unsigned int v85 = (v84 - ((2 * v84) & 0xDCE9BE20) - 294330608) ^ *(_DWORD *)(v75 + 4 * (v82 ^ 0xE1u));
  unsigned int v86 = HIDWORD(v222) ^ 0x2789BBD4 ^ *(_DWORD *)(v74 + 4 * (((v82 ^ 0x2142BA5) >> 16) ^ 0xB6u)) ^ (v85 - ((2 * v85) & 0xCE6A6C96) - 415943093);
  int v87 = v86 ^ v222 ^ 0x8EDEEA78;
  LODWORD(v221) = v68;
  LODWORD(v219) = v87 ^ 0x307C325C ^ v68 ^ 0x5EF1BA37;
  int v88 = *(_DWORD *)(v72 + 4 * (((v219 ^ v82) >> 24) ^ 0xA4));
  HIDWORD(v48) = v88 ^ 2;
  LODWORD(v48) = v88 ^ 0xF97227DC;
  int v89 = ((v48 >> 2) - ((2 * (v48 >> 2)) & 0xDCE9BE20) - 294330608) ^ *(_DWORD *)(v75
                                                                               + 4
                                                                               * ((v219 ^ v82) ^ 0x18u));
  HIDWORD(v218) = v219 ^ v82;
  unsigned int v90 = v219 ^ v82 ^ 0xCEE37B5D;
  int v91 = *(_DWORD *)(v74 + 4 * (((v219 ^ v82) >> 16) ^ 0xCAu)) ^ *(_DWORD *)(v70 + 4 * (BYTE1(v90) ^ 0xF5u));
  HIDWORD(v219) = v87;
  unint64_t v220 = __PAIR64__(v82, v86);
  unsigned int v92 = v91 ^ v86 ^ (BYTE1(v90) - ((v90 >> 7) & 0x5E) + 358750255) ^ 0x47F6EBDA ^ (v89
                                                                                 - ((2 * v89) & 0xCE6A6C96)
                                                                                 - 415943093);
  int v93 = v92 ^ ((v68 ^ 0x5EF1BA37) - ((2 * (v68 ^ 0x5EF1BA37)) & 0x8FEDD7B4) + 1207364570);
  LODWORD(v66) = *(_DWORD *)(v72 + 4 * (((v93 ^ v90) >> 24) ^ 0x70));
  HIDWORD(v48) = v66 ^ 2;
  LODWORD(v48) = v66 ^ 0xF97227DC;
  LODWORD(v66) = ((v48 >> 2) - ((2 * (v48 >> 2)) & 0xCE6A6C96) - 415943093) ^ *(_DWORD *)(v74
                                                                                        + 4
                                                                                        * (((v93 ^ v90) >> 16) ^ 0xA0u));
  LODWORD(v66) = (v66 - ((2 * v66) & 0xDCE9BE20) - 294330608) ^ *(_DWORD *)(v75
                                                                          + 4
                                                                          * ((v91 ^ v86 ^ (BYTE1(v90) - ((v90 >> 7) & 0x5E) + 47)) ^ 0xDA ^ (v89 - ((2 * v89) & 0x96) + 75) ^ ((v68 ^ 0x37) - ((2 * (v68 ^ 0x37)) & 0xB4) - 38) ^ v90 ^ 0x91u));
  LODWORD(v217) = v93 ^ v90;
  int v94 = v93 ^ v90 ^ 0x1A89BBD4;
  LODWORD(v66) = (v66 - ((2 * v66) & 0x2AC4305E) + 358750255) ^ *(_DWORD *)(v70 + 4 * (BYTE1(v94) ^ 0xF5u));
  LODWORD(v66) = v92 ^ BYTE1(v94) ^ (v66 - ((2 * v66) & 0x8FEDD7B4) + 1207364570);
  HIDWORD(v217) = v93;
  LODWORD(v218) = v92;
  HIDWORD(v216) = v92 ^ ((v87 ^ 0x307C325C) - 2 * ((v87 ^ 0x307C325C) & 0x47F6EBDB ^ v87 & 1) + 1207364570);
  LODWORD(v216) = v66 ^ 0x883ED7B9;
  LODWORD(v68) = v66 ^ 0x883ED7B9 ^ (HIDWORD(v216) - ((2 * HIDWORD(v216)) & 0x107DAF72) - 2009147463);
  unsigned int v95 = v68 ^ v93 ^ v94;
  int v96 = *(_DWORD *)(v72 + 4 * (HIBYTE(v95) ^ 0xA5));
  HIDWORD(v48) = v96 ^ 2;
  LODWORD(v48) = v96 ^ 0xF97227DC;
  unint64_t v215 = __PAIR64__(v68, v95);
  int v97 = *(_DWORD *)(v70 + 4 * (((unsigned __int16)(v95 ^ 0xF336) >> 8) ^ 0xF5u)) ^ *(_DWORD *)(v74 + 4 * (BYTE2(v95) ^ 0x47u)) ^ (((unsigned __int16)(v95 ^ 0xF336) >> 8) - (((v95 ^ 0xCF6EF336) >> 7) & 0x5E) + 358750255) ^ ((v48 >> 2) - ((2 * (v48 >> 2)) & 0xCE6A6C96) - 415943093);
  int v98 = *(_DWORD *)(v75 + 4 * (v95 ^ 0x73u)) ^ v66 ^ 0x1350FF56 ^ (v97
                                                                                    - ((2 * v97) & 0xDCE9BE20)
                                                                                    - 294330608);
  HIDWORD(v213) = v98 ^ ((v68 ^ 0xE6F58988) - ((2 * (v68 ^ 0xE6F58988)) & 0x26A1FEAC) + 324075350);
  HIDWORD(v214) = v68 ^ v93 ^ 0x2D64964E;
  int v99 = ((HIDWORD(v213) ^ 0x5BF36347) - 2 * ((HIDWORD(v213) ^ 0x5BF36347) & 0x4B911FD6 ^ BYTE4(v213) & 0x10) - 879681594) ^ HIDWORD(v214);
  unsigned int v100 = ((((unsigned __int16)(v99 ^ v95 ^ 0xF336) >> 8) ^ 0xBB)
        - ((2 * (((v99 ^ v95 ^ 0xCF6EF336) >> 8) ^ 0x1A89BB)) & 0x5E)
        + 358750255) ^ *(_DWORD *)(v70 + 4 * (((unsigned __int16)(v99 ^ v95 ^ 0xF336) >> 8) ^ 0x4Eu));
  int v101 = *(_DWORD *)(v72 + 4 * (((v99 ^ v95 ^ 0xCF6EF336) >> 24) ^ 0x70));
  unsigned int v102 = (v100 - ((2 * v100) & 0xDCE9BE20) - 294330608) ^ *(_DWORD *)(v75
                                                                    + 4
                                                                    * ((v99 ^ v95 ^ 0x36) ^ 0x91u));
  HIDWORD(v48) = v101 ^ 2;
  LODWORD(v48) = v101 ^ 0xF97227DC;
  int v103 = (v48 >> 2) ^ *(_DWORD *)(v74 + 4 * (((v99 ^ v95 ^ 0xCF6EF336) >> 16) ^ 0xA0u)) ^ (v102 - ((2 * v102) & 0xCE6A6C96) - 415943093);
  LODWORD(v214) = v98;
  LODWORD(v212) = (v103 - ((2 * v103) & 0x26A1FEAC) + 324075350) ^ v98;
  HIDWORD(v212) = v99 ^ v95 ^ 0xCF6EF336;
  LODWORD(v68) = v212 ^ 0x930000ED ^ HIDWORD(v213) ^ 0x5BF36347;
  LODWORD(v211) = v99 ^ 0x288133AF ^ ((v68 ^ 0x8D06EA22) - 2 * ((v68 ^ 0x8D06EA22) & 0xFC4E35C ^ v68 & 0xC) + 264561488);
  int v104 = *(_DWORD *)(v72 + 4 * (((v211 ^ HIDWORD(v212)) >> 24) ^ 0x23));
  HIDWORD(v48) = v104 ^ 2;
  LODWORD(v48) = v104 ^ 0xF97227DC;
  int v105 = v211 ^ HIDWORD(v212) ^ 0x49571195;
  int v106 = *(_DWORD *)(v75 + 4 * ((v211 ^ BYTE4(v212)) ^ 0xD0u)) ^ *(_DWORD *)(v70
                                                                                              + 4
                                                                                              * (BYTE1(v105) ^ 0xF5u)) ^ 0xFB16C73F ^ (v48 >> 2);
  HIDWORD(v210) = v211 ^ HIDWORD(v212);
  int v107 = (v106 - ((2 * v106) & 0xCE6A6C96) - 415943093) ^ *(_DWORD *)(v74
                                                                    + 4
                                                                    * (((v211 ^ HIDWORD(v212)) >> 16) ^ 0x7Eu)) ^ v212 ^ 0x930000ED ^ BYTE1(v105);
  HIDWORD(v211) = v68;
  LODWORD(v213) = v99;
  LODWORD(v66) = v107 ^ v99;
  unsigned int v108 = v107 ^ v99 ^ v105;
  LODWORD(v72) = *(_DWORD *)(v72 + 4 * (HIBYTE(v108) ^ 0x63));
  LODWORD(v210) = v108 ^ 0x489E5305;
  HIDWORD(v48) = v72 ^ 2;
  LODWORD(v48) = v72 ^ 0xF97227DC;
  int v109 = *(_DWORD *)(v70 + 4 * (BYTE1(v108) ^ 0x2Du)) ^ *(_DWORD *)(v75 + 4
                                                                          * (~(_BYTE)v108 ^ 0xC4u)) ^ ((BYTE1(v108) ^ 0xD8) - ((2 * ((v108 >> 8) ^ 0x97AD8)) & 0x5E) + 358750255) ^ ((v48 >> 2) + *(_DWORD *)(v43 - 120) + (~(2 * (v48 >> 2)) | 0x231641DF));
  unsigned int v110 = (v109 - ((2 * v109) & 0xCE6A6C96) - 415943093) ^ *(_DWORD *)(v74
                                                                    + 4
                                                                    * (((v108 ^ 0x2745D0FF) >> 16) ^ 0x16u));
  int v111 = (char *)*(&off_10026C690 + v44 - 819) - 8;
  int v112 = (char *)*(&off_10026C690 + (v44 ^ 0x38E)) - 12;
  int v113 = v112[*(unsigned __int8 *)(v43 - 109) ^ 0xA5];
  HIDWORD(v48) = v113 ^ 0xE;
  LODWORD(v48) = (v113 ^ 0x40) << 24;
  int v114 = (char *)*(&off_10026C690 + v44 - 939) - 12;
  uint64_t v115 = (uint64_t)*(&off_10026C690 + (int)(v44 & 0x8696E88E));
  unsigned int v208 = v112;
  int v209 = v111;
  uint64_t v206 = v115;
  int v207 = v114;
  LODWORD(v46) = (((((v48 >> 30) ^ 0xDB) >> 2) | (((v48 >> 30) ^ 0xDB) << 6)) | ((v114[*(unsigned __int8 *)(v43 - 111) ^ 0x7ALL] ^ 0x91) << 16) | ((*(unsigned __int8 *)(v115 + (*(unsigned __int8 *)(v43 - 112) ^ 0x78)) ^ 0x59) << 24) | (((v111[*(unsigned __int8 *)(v43 - 110) ^ 0x5DLL] + (*(unsigned char *)(v43 - 110) ^ 0x52) + 105) ^ 0x5D) << 8)) ^ 0xF6F6CD80;
  LODWORD(v70) = ((v112[*(unsigned __int8 *)(v43 - 101) ^ 0x60] ^ 0x85) & 0xFFFF00FF | ((v114[*(unsigned __int8 *)(v43 - 103) ^ 5] ^ 0xC0) << 16) | (((v111[*(unsigned __int8 *)(v43 - 102) ^ 4] + (*(unsigned char *)(v43 - 102) ^ 0xB) + 105) ^ 0x33) << 8) | ((*(unsigned __int8 *)(v115 + (*(unsigned __int8 *)(v43 - 104) ^ 0x1CLL)) ^ 0xAC) << 24)) ^ 0xE55DB34;
  unsigned int v116 = ((v112[*(unsigned __int8 *)(v43 - 105) ^ 0x28] ^ 0x44) & 0xFFFF00FF | ((((*(unsigned char *)(v43 - 106) ^ 0xAC) + v111[*(unsigned __int8 *)(v43 - 106) ^ 0xA3] + 105) ^ 0xF6) << 8) | ((*(unsigned __int8 *)(v115 + (*(unsigned __int8 *)(v43 - 108) ^ 0xB2)) ^ 0x5B) << 24) | ((v114[*(unsigned __int8 *)(v43 - 107) ^ 0x27] ^ 0xA4) << 16)) ^ 0x8ED954AB;
  LODWORD(v111) = ((v112[*(unsigned __int8 *)(v43 - 97) ^ 0x7BLL] ^ 0x31) & 0xFFFF00FF | ((((*(unsigned char *)(v43 - 98) ^ 0xD0) + v111[*(unsigned __int8 *)(v43 - 98) ^ 0xDFLL] + 105) ^ 0xE4) << 8) | ((v114[*(unsigned __int8 *)(v43 - 99) ^ 0xAALL] ^ 0xF2) << 16) | ((*(unsigned __int8 *)(v115 + (*(unsigned __int8 *)(v43 - 100) ^ 0x45)) ^ 0x63) << 24)) ^ 0xB93F03A;
  int v117 = (v68 ^ 0x8D06EA22) - 2 * ((v68 ^ 0x8D06EA22) & 0x5CF9D97 ^ v68 & 5) - 2049991278;
  LODWORD(v68) = v110 - ((2 * v110) & 0xB9F3B24) - 2049991278;
  HIDWORD(v204) = v45 ^ 0x8A4;
  LODWORD(v204) = v45 ^ 0x87B;
  HIDWORD(v203) = v45 ^ 0x8AB;
  LODWORD(v203) = v107 ^ 0x85CF9D92 ^ v117;
  HIDWORD(v205) = v107 ^ 0x85CF9D92;
  LODWORD(v202) = v68 ^ v107 ^ 0x85CF9D92;
  HIDWORD(v202) = v45 ^ 0x896;
  HIDWORD(v201) = v45 ^ 0x884;
  LODWORD(v201) = v45 ^ 0x8AD;
  HIDWORD(v200) = v45 ^ 0x876;
  *(_DWORD *)(v43 - 120) = v45;
  LODWORD(v200) = v45 ^ 0x855;
  HIDWORD(a16) = v66 ^ 0x452FF2BF;
  LODWORD(v205) = v117 ^ 0x3DC8BA5D ^ v68;
  HIDWORD(a4) = v205 ^ v66 ^ 0x452FF2BF;
  *(void *)(v43 - 200) = 7;
  LOBYTE(v68) = a1[7];
  *(void *)(v43 - 168) = 12;
  LODWORD(v68) = v112[(55 * (v45 ^ 0x32)) ^ 0x52 ^ v68];
  uint64_t v118 = a1[12] ^ 0x60;
  *(void *)(v43 - 160) = 8;
  *(void *)(v43 - 128) = 1;
  LODWORD(v118) = *(unsigned __int8 *)(v115 + v118) ^ 0xD8;
  int v119 = *(unsigned __int8 *)(v115 + (a1[8] ^ 0xC1)) ^ 0x6C;
  LODWORD(v69) = v114[a1[1] ^ 0x66] ^ 0x7D;
  *(void *)(v43 - 136) = 15;
  LODWORD(v66) = v69 << 16;
  uint64_t v120 = a1[15] ^ 0xE9;
  *(void *)(v43 - 152) = 11;
  LODWORD(v120) = v112[v120] ^ 0x93;
  int v121 = v112[a1[11] ^ 0xC3];
  *(void *)(v43 - 176) = 0;
  LODWORD(v115) = v120 | (v118 << 24);
  LODWORD(v118) = v66 | ((*(unsigned __int8 *)(v206 + (*a1 ^ 0x30)) ^ 0xE8) << 24);
  LODWORD(v66) = v121 ^ 0x59;
  *(void *)(v43 - 144) = 2;
  LOBYTE(v121) = (v209[a1[2] ^ 0xC0] + (a1[2] ^ 0xCF) + 105) ^ 0xF9;
  *(void *)(v43 - 216) = 4;
  int v122 = *(unsigned __int8 *)(v206 + (a1[4] ^ 0xFCLL)) ^ 0x56;
  *(void *)(v43 - 224) = 9;
  LODWORD(v112) = v114[a1[9] ^ 0x5DLL] ^ 0xAE;
  *(void *)(v43 - 192) = 10;
  int v123 = (v112 << 16) | (((v209[a1[10] ^ 0xD5] + (a1[10] ^ 0xDA) + 105) ^ 0xCF) << 8) | v66 | (v119 << 24);
  *(void *)(v43 - 184) = 14;
  int v124 = (v209[a1[14] ^ 0xE4] + (a1[14] ^ 0xEB) - 23) << 8;
  *(void *)(v43 - 232) = 3;
  *(_DWORD *)(v43 - 208) = 741208253;
  *(_DWORD *)(v43 - 204) = 741208248;
  *(void *)(v43 - 248) = 13;
  int v125 = v124 | ((v114[a1[13] ^ 0x92] ^ 0x93) << 16);
  int v126 = v208[a1[3] ^ 0xDCLL] ^ 0x87;
  *(void *)(v43 - 256) = 6;
  LODWORD(v66) = v123 - 2 * (v123 & 0x37EC628F ^ v66 & 2);
  LOBYTE(v123) = v209[a1[6] ^ 0x4FLL] + (a1[6] ^ 0x40);
  *(void *)(v43 - 240) = 5;
  int v127 = ((v114[a1[5] ^ 0xA9] ^ 0x40) << 16) | (((v123 + 105) ^ 0xB7) << 8) | v68 ^ 0x43 | (v122 << 24);
  unsigned int v128 = v46 ^ v228 ^ ((v126 | v118 & 0xFFFF00FF | (v121 << 8))
                     + 1330607289
                     - 2 * ((v126 & 0x4F4F74BD | v118 & 0x4F4F00BD | (v121 << 8) & 0x74BD) ^ v126 & 4));
  unsigned int v129 = v116 ^ v229 ^ (v127 + 929099026 - 2 * (v127 & 0x3760ED16 ^ (v68 ^ 0x43) & 4));
  LODWORD(v120) = v111 ^ v227 ^ ((v125 | v115)
                                             - 2 * ((v125 | v115) & 0x322A4993 ^ v120 & 0x10)
                                             - 1305851517);
  unsigned int v130 = v70 ^ v60 ^ (v66 - 1209245043);
  int v131 = (char *)*(&off_10026C690 + (v45 ^ 0x8AB)) - 8;
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v130) ^ 0x3F)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  unsigned int v132 = (char *)*(&off_10026C690 + (v45 ^ 0x8A4)) - 8;
  LODWORD(v118) = (v48 >> 1) ^ *(_DWORD *)&v132[4 * (BYTE2(v120) ^ 0x34)] ^ ((BYTE2(v120) ^ 0x68)
                                                                           - 873784370
                                                                           - 2
                                                                           * ((WORD1(v120) ^ 0xB768) & 0xDF ^ WORD1(v120) & 0x11));
  int v133 = (char *)*(&off_10026C690 + (v45 ^ 0x87B)) - 4;
  LODWORD(v112) = *(_DWORD *)&v133[4 * (v130 ^ 0xC6)] ^ ((BYTE2(v128) ^ 0xD5)
                                                                        - 873784370
                                                                        - ((2 * (HIWORD(v128) ^ 0x6CD5)) & 0x19C)) ^ *(_DWORD *)&v132[4 * (BYTE2(v128) ^ 0x89)] ^ ((v130 ^ 0xAB) + 414219232 + ((2 * (v130 ^ 0xAB) + 254) & 0x2C0 ^ 0xCDDEFFFF));
  LODWORD(v66) = *(_DWORD *)&v132[4 * (BYTE2(v129) ^ 0x8C)] ^ *(_DWORD *)&v133[4 * (v120 ^ 0xB6)] ^ ((v120 ^ 0xDB) + 414219232 + ((2 * (v120 ^ 0xDB) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ ((BYTE2(v129) ^ 0xD0) - 873784370 - ((2 * (HIWORD(v129) ^ 0xC8D0)) & 0x19C));
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v129) ^ 0xC8)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  int v134 = ((BYTE2(v130) ^ 0xAD) - 873784370 - ((2 * (HIWORD(v130) ^ 0x3FAD)) & 0x19C)) ^ *(_DWORD *)&v133[4 * (v128 ^ 0x1C)] ^ ((v128 ^ 0x71) + 414219232 + ((2 * (v128 ^ 0x71) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ (v48 >> 1) ^ *(_DWORD *)&v132[4 * (BYTE2(v130) ^ 0xF1)];
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v128) ^ 0x6C)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v115) = v48 >> 1;
  unsigned int v135 = (v129 ^ 0x10) + 414219232 + ((2 * (v129 ^ 0x10) + 254) & 0x2C0 ^ 0xCDDEFFFF);
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (BYTE3(v120) ^ 0xB7)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  uint64_t v136 = (uint64_t)*(&off_10026C690 + *(_DWORD *)(v43 - 120) - 2035);
  LODWORD(v118) = *(_DWORD *)(v136 + 4 * (BYTE1(v128) ^ 0xDEu)) ^ v60 ^ 0xE6 ^ v225 ^ *(_DWORD *)&v133[4 * (v129 ^ 0x7D)] ^ (v118 + 432970823 - ((2 * v118) & 0x339D388E));
  int v137 = *(_DWORD *)(v136 + 4 * (BYTE1(v129) ^ 0x2Fu)) ^ (v48 >> 1);
  int v138 = *(_DWORD *)(v136 + 4 * (BYTE1(v130) ^ 0x29u));
  LODWORD(v112) = (v112 + 432970823 - ((2 * v112) & 0x339D388E)) ^ v137;
  int v139 = *(_DWORD *)(v136 + 4 * (BYTE1(v120) ^ 0x66u));
  int v140 = v112 - ((2 * v112) & 0x5046120E);
  LOWORD(v137) = v118 ^ v135;
  LODWORD(v120) = v138 ^ v226 ^ v115 ^ (v66 + 432970823 - ((2 * v66) & 0x339D388E));
  LODWORD(v115) = v139 ^ v225 ^ (v134 + 432970823 - ((2 * v134) & 0x339D388E));
  HIDWORD(v48) = *(_DWORD *)&v131[4 * ((v118 ^ ~v135) >> 24)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v66) = v48 >> 1;
  int v141 = (v139 ^ v225 ^ (v134 + 71 - ((2 * v134) & 0x8E)));
  LODWORD(v118) = ((v118 ^ v135) >> 16) ^ 0xFF49;
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (BYTE3(v120) ^ 0x91)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  int v142 = v48 >> 1;
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (BYTE3(v115) ^ 0xA3)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v68) = v142 ^ *(_DWORD *)&v132[4 * (BYTE2(v115) ^ 0xF0)] ^ ((BYTE2(v115) ^ 0xAC)
                                                                    - 873784370
                                                                    - ((2 * (WORD1(v115) ^ 0xA3AC)) & 0x19C));
  LODWORD(v118) = (v48 >> 1) ^ *(_DWORD *)&v133[4 * (v120 ^ 0x7B)] ^ (v118
                                                                                     - 873784370
                                                                                     - ((2 * v118) & 0x19C)) ^ *(_DWORD *)&v132[4 * (v118 ^ 0x5C)] ^ ((v120 ^ 0x16) + 414219232 + ((2 * (v120 ^ 0x16) + 254) & 0x2C0 ^ 0xCDDEFFFF));
  int v143 = v118 + 432970823 - ((2 * v118) & 0x339D388E);
  LODWORD(v118) = (v140 + 673384711) ^ HIDWORD(v224);
  LODWORD(v68) = (v68 + 432970823 - ((2 * v68) & 0x339D388E)) ^ *(_DWORD *)(v136 + 4 * (BYTE1(v137) ^ 0x2Cu));
  LODWORD(v66) = v66 ^ *(_DWORD *)&v133[4 * (v141 ^ 3)] ^ ((v141 ^ 0x6E)
                                                         + 414219232
                                                         + ((2 * (v141 ^ 0x6E) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ *(_DWORD *)&v132[4 * (BYTE2(v118) ^ 0x46)] ^ ((BYTE2(v118) ^ 0x1A) - 873784370 - ((2 * (WORD1(v118) ^ 0x461A)) & 0x19C));
  LODWORD(v112) = *(_DWORD *)&v132[4 * (BYTE2(v120) ^ 0x2E)] ^ ((BYTE2(v120) ^ 0x72)
                                                              - 873784370
                                                              - ((2 * (WORD1(v120) ^ 0x9172)) & 0x19C));
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (BYTE3(v118) ^ 0x46)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v112) = ((v137 ^ 0xFC)
                 + 414219232
                 + ((2 * (v137 ^ 0xFC) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ *(_DWORD *)(v136
                                                                                                  + 4 * (BYTE1(v115) ^ 0xBDu)) ^ *(_DWORD *)&v133[4 * (v137 ^ 0x91)] ^ (v112 + 432970823 - ((2 * v112) & 0x339D388E)) ^ (v48 >> 1);
  LODWORD(v115) = ((((v140 + 7) ^ BYTE4(v224)) ^ 0x4A) - 1726037377) ^ v224 ^ *(_DWORD *)&v133[4 * (((v140 + 7) ^ BYTE4(v224)) ^ 0x27)] ^ (v68 + 2140256608 - ((2 * v68) & 0xFF2372C0));
  LODWORD(v120) = *(_DWORD *)(v136 + 4 * (BYTE1(v120) ^ 0x57u)) ^ HIDWORD(v221) ^ (v66
                                                                                   + 432970823
                                                                                   - ((2 * v66) & 0x339D388E));
  unsigned int v144 = (v112 - ((2 * v112) & 0xA6D3EF52) + 1399453609) ^ v223;
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v144) ^ 0xBE)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  unsigned int v145 = *(_DWORD *)(v136 + 4 * (BYTE1(v118) ^ 0x92u)) ^ HIDWORD(v223) ^ v143;
  LODWORD(v68) = (*(unsigned char *)(v136 + 4 * (BYTE1(v118) ^ 0x92u)) ^ BYTE4(v223) ^ v143);
  LODWORD(v68) = ((v68 ^ 0xA1) + 414219232 + ((2 * (v68 ^ 0xA1) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ *(_DWORD *)&v133[4 * (v68 ^ 0xCC)];
  LODWORD(v118) = *(_DWORD *)&v132[4 * (BYTE2(v115) ^ 0xDB)] ^ ((BYTE2(v115) ^ 0x87)
                                                              - 873784370
                                                              - ((2 * (WORD1(v115) ^ 0x3A87)) & 0x19C)) ^ (v48 >> 1);
  LODWORD(v68) = (v68 + 432970823 - ((2 * v68) & 0x339D388E)) ^ *(_DWORD *)(v136 + 4 * (BYTE1(v115) ^ 0xDEu));
  LODWORD(v66) = ((v115 ^ 0x9E)
                + 414219232
                + ((2 * (v115 ^ 0x9E) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ *(_DWORD *)&v133[4 * (v115 ^ 0xF3)];
  LODWORD(v118) = (v118 + 432970823 - ((2 * v118) & 0x339D388E)) ^ *(_DWORD *)(v136 + 4 * (BYTE1(v145) ^ 0x57u));
  unsigned int v146 = (WORD1(v120) ^ 0x740C) & 0xDF ^ WORD1(v120) & 0x11;
  LODWORD(v112) = BYTE2(v120) ^ 0xC;
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (BYTE3(v120) ^ 0x37)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  int v147 = v48 >> 1;
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (BYTE3(v115) ^ 0x3A)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v115) = BYTE2(v145) ^ *(_DWORD *)&v132[4 * (BYTE2(v145) ^ 0xF6)] ^ *(_DWORD *)(v136
                                                                                       + 4 * (BYTE1(v120) ^ 0xBCu)) ^ 0xD2258723 ^ (v48 >> 1);
  LODWORD(v115) = ((v144 ^ 0xB9) - 1726037377) ^ HIDWORD(v222) ^ *(_DWORD *)&v133[4
                                                                                                 * (v144 ^ 0xD4)] ^ (v115 + 2140256608 - ((2 * v115) & 0xFF2372C0));
  LODWORD(v120) = ((v120 ^ 0x3A) - 1726037377) ^ HIDWORD(v220) ^ *(_DWORD *)&v133[4
                                                                                                 * (v120 ^ 0x57)] ^ (v118 + 2140256608 - ((2 * v118) & 0xFF2372C0));
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v145) ^ 0x7C)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  unsigned int v148 = *(_DWORD *)&v132[4 * (BYTE2(v144) ^ 0xEF)] ^ v221 ^ BYTE2(v144) ^ v147 ^ (v68
                                                                                 - 873784370
                                                                                 - ((2 * v68) & 0x97D6379C));
  unsigned int v149 = *(_DWORD *)(v136 + 4 * (BYTE1(v144) ^ 0x17u)) ^ v222 ^ (v112 - 873784370 - 2 * v146) ^ *(_DWORD *)&v132[4 * (v112 ^ 0x5C)] ^ (v66 + 432970823 - ((2 * v66) & 0x339D388E)) ^ (v48 >> 1);
  LODWORD(v66) = ((v148 ^ 0x70)
                + 414219232
                + ((2 * (v148 ^ 0x70) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ *(_DWORD *)&v133[4 * (v148 ^ 0x1D)];
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (BYTE3(v115) ^ 0x5B)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  int v230 = v66 + 432970824 + ~((2 * v66) & 0x339D388E);
  LODWORD(v68) = (v48 >> 1) ^ *(_DWORD *)&v133[4 * (v120 ^ 0x1F)] ^ ((v120 ^ 0x72)
                                                                                    + 414219232
                                                                                    + ((2
                                                                                      * (v120 ^ 0x72)
                                                                                      + 254) & 0x2C0 ^ 0xCDDEFFFF));
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (BYTE3(v120) ^ 0x28)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  int v150 = v48 >> 1;
  LODWORD(v114) = v68 + 432970823 - ((2 * v68) & 0x339D388E);
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v148) ^ 0xB9)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v68) = v48 >> 1;
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v149) ^ 0xB4)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v68) = v68 ^ *(_DWORD *)&v133[4 * (v149 ^ 0x8B)] ^ ((v149 ^ 0xE6)
                                                                             + 414219232
                                                                             + ((2 * (v149 ^ 0xE6) + 254) & 0x2C0 ^ 0xCDDEFFFF));
  int v151 = BYTE2(v115) ^ 0x95;
  LODWORD(v56) = v151 - 873784370 - ((2 * (WORD1(v115) ^ 0x5B95)) & 0x19C);
  int v152 = v115;
  LODWORD(v75) = (v115 ^ 0xF4)
               + 414219232
               + ((2 * (v115 ^ 0xF4) + 254) & 0x2C0 ^ 0xCDDEFFFF);
  LODWORD(v115) = ((BYTE2(v120) ^ 0x14) - 873784370 - 2 * ((WORD1(v120) ^ 0x2814) & 0xCF ^ WORD1(v120) & 1)) ^ v219 ^ *(_DWORD *)(v136 + 4 * (BYTE1(v115) ^ 0x1Fu)) ^ (v68 + 432970823 - ((2 * v68) & 0x339D388E)) ^ *(_DWORD *)&v132[4 * (BYTE2(v120) ^ 0x48)];
  int v153 = BYTE2(v148) ^ 0x64;
  LODWORD(v68) = v153 - 873784370 - ((2 * (HIWORD(v148) ^ 0xFA64)) & 0x19C);
  unsigned int v154 = *(_DWORD *)(v136 + 4 * (BYTE1(v148) ^ 0xA5u)) ^ v86 ^ ((BYTE2(v149) ^ 0x59)
                                                                - 873784370
                                                                - ((2 * (HIWORD(v149) ^ 0xB459)) & 0x19C)) ^ *(_DWORD *)&v132[4 * (BYTE2(v149) ^ 5)] ^ v114;
  LODWORD(v66) = *(_DWORD *)(v136 + 4 * (BYTE1(v149) ^ 0x34u));
  unsigned int v155 = v68 ^ HIDWORD(v219) ^ *(_DWORD *)&v133[4 * (v152 ^ 0x99)] ^ v75 ^ ((v48 >> 1)
                                                                          + 432970823
                                                                          - ((2 * (v48 >> 1)) & 0x339D388E)) ^ *(_DWORD *)&v132[4 * (v153 ^ 0x5C)] ^ *(_DWORD *)(v136 + 4 * (BYTE1(v120) ^ 0x12u));
  LODWORD(v120) = v66 ^ HIDWORD(v218) ^ v56 ^ *(_DWORD *)&v132[4 * (v151 ^ 0x5C)] ^ v230 ^ v150;
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (BYTE3(v120) ^ 0xEB)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  int v156 = (v48 >> 1) + 432970823 - ((2 * (v48 >> 1)) & 0x339D388E);
  LODWORD(v68) = ((BYTE2(v155) ^ 0x81) - 873784370 - ((2 * (HIWORD(v155) ^ 0x1481)) & 0x19C)) ^ *(_DWORD *)&v132[4 * (BYTE2(v155) ^ 0xDD)];
  unsigned int v157 = ((v155 ^ 0x51) + 414219232 + ((2 * (v155 ^ 0x51) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ *(_DWORD *)&v133[4 * (v155 ^ 0x3C)];
  LODWORD(v112) = *(_DWORD *)&v132[4 * (BYTE2(v115) ^ 0xDB)] ^ ((BYTE2(v115) ^ 0x87)
                                                              - 873784370
                                                              - ((2 * (WORD1(v115) ^ 0x7787)) & 0x19C));
  LODWORD(v66) = *(_DWORD *)&v132[4 * (((v120 ^ 0xA87CE98B) >> 16) ^ 0x5C)] ^ ((v120 ^ 0xA87CE98B) >> 16) ^ (v157 - 873784370 - ((2 * v157) & 0x97D6379C));
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v155) ^ 0x14)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  int v158 = v48 >> 1;
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v154) ^ 0x9A)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v68) = ((~(2 * (v120 ^ 0x8B) + 842892542) | 0xCDDEFD3F)
                + (v120 ^ 0x8B)
                + 414219232) ^ *(_DWORD *)(v136 + 4 * (BYTE1(v115) ^ 0xDEu)) ^ *(_DWORD *)&v133[4
                                                                                                * (v120 ^ 0xE6)] ^ (v68 + 432970824 + ~((2 * v68) & 0x339D388E)) ^ (v48 >> 1);
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (BYTE3(v115) ^ 0x77)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  unsigned int v159 = *(_DWORD *)(v136 + 4 * (BYTE1(v155) ^ 0x34u)) ^ v217 ^ ((BYTE2(v154) ^ 0xE9)
                                                                 - 873784370
                                                                 - ((2 * (HIWORD(v154) ^ 0x9AE9)) & 0x19C)) ^ *(_DWORD *)&v132[4 * (BYTE2(v154) ^ 0xB5)] ^ ((v115 ^ 0x9E) + 414219232 + ((2 * (v115 ^ 0x9E) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ v156 ^ *(_DWORD *)&v133[4 * (v115 ^ 0xF3)];
  LODWORD(v120) = *(_DWORD *)(v136 + 4 * (BYTE1(v120) ^ 0xBu)) ^ HIDWORD(v216) ^ ((v154 ^ 0xA8)
                                                                                  + 414219232
                                                                                  + ((2 * (v154 ^ 0xA8)
                                                                                    + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ *(_DWORD *)&v133[4 * (v154 ^ 0xC5)] ^ v158 ^ (v112 + 432970823 - ((2 * v112) & 0x339D388E));
  unsigned int v160 = *(_DWORD *)(v136 + 4 * (BYTE1(v154) ^ 0x2Du)) ^ HIDWORD(v217) ^ (v48 >> 1) ^ (v66
                                                                                       + 432970823
                                                                                       - ((2 * v66) & 0x339D388E));
  LODWORD(v115) = (v68 + 1207364570 - ((2 * v68) & 0x8FEDD7B4)) ^ v218;
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (BYTE3(v120) ^ 0x6D)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v66) = v48 >> 1;
  unsigned int v161 = *(_DWORD *)&v131[4 * (BYTE3(v115) ^ 0xFD)];
  LODWORD(v68) = *(_DWORD *)&v132[4 * (BYTE2(v120) ^ 0x52)] ^ (v161 << 31) ^ (v161 >> 1) ^ ((BYTE2(v120) ^ 0xE)
                                                                                          - 873784370
                                                                                          - ((2 * (WORD1(v120) ^ 0x2E0E)) & 0x19C));
  LODWORD(v118) = ((v120 ^ 0x4A)
                 + 414219232
                 + ((2 * (v120 ^ 0x4A) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ *(_DWORD *)&v133[4 * (v120 ^ 0x27)];
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v160) ^ 0xAE)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v118) = (v48 >> 1) ^ *(_DWORD *)(v136 + 4 * (BYTE1(v115) ^ 0xA4u)) ^ (v118
                                                                                + 432970823
                                                                                - ((2 * v118) & 0x339D388E));
  int v162 = BYTE2(v159) ^ *(_DWORD *)&v132[4 * (BYTE2(v159) ^ 0x4A)] ^ 0x16 ^ (v118 - 873784370 - ((2 * v118) & 0x97D6379C));
  LODWORD(v66) = *(_DWORD *)&v132[4 * (BYTE2(v160) ^ 0x3A)] ^ v66 ^ *(_DWORD *)&v133[4 * (v115 ^ 0x4D)] ^ ((v115 ^ 0x20) + 414219232 + ((2 * (v115 ^ 0x20) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ ((BYTE2(v160) ^ 0x66) - 873784370 - 2 * ((HIWORD(v160) ^ 0xAE66) & 0xDE ^ HIWORD(v160) & 0x10));
  LODWORD(v68) = ((v159 ^ 2)
                + 414219232
                + ((2 * (v159 ^ 2) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ *(_DWORD *)(v136
                                                                                              + 4
                                                                                              * (BYTE1(v160) ^ 0x7Cu)) ^ *(_DWORD *)&v133[4 * (v159 ^ 0x6F)] ^ ((v68 ^ 0x31475149) + 432970823 - 2 * ((v68 ^ 0x31475149) & 0x19CE9C57 ^ v68 & 0x10));
  LODWORD(v118) = ((v160 ^ 0xB3)
                 - 1293066553
                 + ((2 * (v160 ^ 0xB3) + 254) & 0x8E ^ 0xCDE2FFFF)) ^ *(_DWORD *)(v136
                                                                                                 + 4
                                                                                                 * (BYTE1(v120) ^ 0x65u));
  LODWORD(v118) = (v118 + 2140256608 - ((2 * v118) & 0xFF2372C0)) ^ *(_DWORD *)&v133[4 * (v160 ^ 0xDE)];
  unsigned int v163 = *(_DWORD *)&v132[4 * (BYTE2(v115) ^ 0x40)] ^ ((BYTE2(v115) ^ 0x1C)
                                                     - 873784370
                                                     - ((2 * (WORD1(v115) ^ 0xFD1C)) & 0x19C));
  LODWORD(v120) = v163 ^ 0x93B8A0D8 ^ (v118 - 794458101 - ((2 * v118) & 0xA14B1016));
  LODWORD(v118) = v118 ^ 0x6500C283;
  LODWORD(v120) = (v118 + v120 + 1) ^ ((v163 ^ 0x261DEA50) + 1);
  LODWORD(v118) = (v163 ^ 0x9479DA4 ^ (v120 - 794458101 - ((2 * v120) & 0xA14B1016))) + v118;
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v159) ^ 0x3F)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v120) = (v162 - 879681594 - ((2 * v162) & 0x97223F8C)) ^ HIDWORD(v214);
  int v164 = (v118 ^ (v48 >> 1)) - ((2 * (v118 ^ (v48 >> 1))) & 0x4D10C9D2);
  unsigned int v165 = *(_DWORD *)(v136 + 4 * (BYTE1(v159) ^ 0xCBu)) ^ HIDWORD(v215) ^ (v66 + 432970823 - ((2 * v66) & 0x339D388E));
  unsigned int v166 = (v68 - 2009147463 - ((2 * v68) & 0x107DAF72)) ^ v216;
  LODWORD(v68) = ((BYTE2(v166) ^ 0xE9) - 873784370 - 2 * ((HIWORD(v166) ^ 0xB8E9) & 0xDE ^ HIWORD(v166) & 0x10)) ^ *(_DWORD *)&v132[4 * (BYTE2(v166) ^ 0xB5)];
  LODWORD(v115) = v68 + 432970823 - ((2 * v68) & 0x339D388E);
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (BYTE3(v120) ^ 0x9D)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v112) = v48 >> 1;
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v165) ^ 0x61)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v68) = *(_DWORD *)&v133[4 * (v166 ^ 0xC5)] ^ *(_DWORD *)&v132[4 * (BYTE2(v120) ^ 0x28)] ^ (v48 >> 1) ^ ((v166 ^ 0xA8) + 414219232 + ((2 * (v166 ^ 0xA8) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ ((BYTE2(v120) ^ 0x74) - 873784370 - ((2 * (WORD1(v120) ^ 0x9D74)) & 0x19C));
  LODWORD(v118) = (v164 + 646472937) ^ v215;
  unsigned int v167 = v112 ^ ((BYTE2(v118) ^ 0x9B) - 873784370 - ((2 * (WORD1(v118) ^ 0x709B)) & 0x19C)) ^ *(_DWORD *)&v132[4 * (BYTE2(v118) ^ 0xC7)];
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v166) ^ 0xB8)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v112) = ((BYTE2(v165) ^ 8) - 873784370 - ((2 * (HIWORD(v165) ^ 0x6108)) & 0x19C)) ^ *(_DWORD *)&v132[4 * (BYTE2(v165) ^ 0x54)] ^ (v48 >> 1) ^ *(_DWORD *)&v133[4 * (((v164 - 23) ^ v215) ^ 0x48)] ^ ((((v164 - 23) ^ v215) ^ 0x25) + 414219232 + ((2 * (((v164 - 23) ^ v215) ^ 0x25) + 254) & 0x2C0 ^ 0xCDDEFFFF));
  unsigned int v168 = *(_DWORD *)(v136 + 4 * (BYTE1(v118) ^ 0x30u)) ^ HIDWORD(v213) ^ (v68 + 432970823 - ((2 * v68) & 0x339D388E));
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (BYTE3(v118) ^ 0x70)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v118) = (v112 + 432970823 - ((2 * v112) & 0x339D388E)) ^ *(_DWORD *)(v136
                                                                                             + 4
                                                                                             * (BYTE1(v120) ^ 0xBDu));
  LODWORD(v66) = *(_DWORD *)&v133[4 * (v120 ^ 0xB4)] ^ *(_DWORD *)(v136 + 4 * (BYTE1(v165) ^ 0x8Fu)) ^ ((v120 ^ 0xD9) + 414219232 + ((2 * (v120 ^ 0xD9) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ v115;
  int v169 = *(_DWORD *)(v136 + 4 * (BYTE1(v166) ^ 0x2Du));
  unsigned int v170 = (v118 + 324075350 - ((2 * v118) & 0x26A1FEAC)) ^ v214;
  LODWORD(v115) = ((v66 ^ (v48 >> 1)) - ((2 * (v66 ^ (v48 >> 1))) & 0x33E5B526) + 435346067) ^ HIDWORD(v212);
  unsigned int v171 = ((v165 ^ 0x85) + 414219232 + ((2 * (v165 ^ 0x85) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ v213 ^ *(_DWORD *)&v133[4 * (v165 ^ 0xE8)] ^ v169 ^ (v167 + 432970823 - ((2 * v167) & 0x339D388E));
  LODWORD(v66) = ((BYTE2(v171) ^ 0x66) - 873784370 - ((2 * (HIWORD(v171) ^ 0xAE66)) & 0x19C)) ^ *(_DWORD *)&v132[4 * (BYTE2(v171) ^ 0x3A)];
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (BYTE3(v115) ^ 0x26)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  int v172 = ((v48 >> 1) - 873784370 - ((2 * (v48 >> 1)) & 0x97D6379C)) ^ *(_DWORD *)&v132[4 * (BYTE2(v170) ^ 0x40)];
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v170) ^ 0xEF)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v68) = (v48 >> 1) ^ *(_DWORD *)&v133[4 * (v115 ^ 0xFC)] ^ ((v115 ^ 0x91)
                                                                                    + 414219232
                                                                                    + ((2
                                                                                      * (v115 ^ 0x91)
                                                                                      + 254) & 0x2C0 ^ 0xCDDEFFFF));
  int v173 = v66 + 432970823 - ((2 * v66) & 0x339D388E);
  LODWORD(v66) = ((v118 + 86 - ((2 * v118) & 0xAC)) ^ v214);
  unsigned int v174 = ((v168 ^ 0x4A) + 414219232 + ((2 * (v168 ^ 0x4A) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ *(_DWORD *)&v133[4 * (v168 ^ 0x27)];
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v171) ^ 0xAE)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  int v175 = (v48 >> 1) ^ *(_DWORD *)&v132[4 * (BYTE2(v115) ^ 0xB8)] ^ (v174 - 873784370 - ((2 * v174) & 0x97D6379C));
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v168) ^ 0xDC)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v120) = ((BYTE2(v168) ^ 0xE) - 873784370 - 2 * ((HIWORD(v168) ^ 0xDC0E) & 0xDE ^ HIWORD(v168) & 0x10)) ^ v212 ^ *(_DWORD *)&v132[4 * (BYTE2(v168) ^ 0x52)] ^ *(_DWORD *)(v136 + 4 * (BYTE1(v171) ^ 0x7Cu)) ^ (v68 + 432970823 - ((2 * v68) & 0x339D388E));
  LODWORD(v68) = v171;
  LODWORD(v112) = (v171 ^ 0xB3)
                + 414219232
                + ((2 * (v171 ^ 0xB3) + 254) & 0x2C0 ^ 0xCDDEFFFF);
  unsigned int v176 = *(_DWORD *)(v136 + 4 * (BYTE1(v115) ^ 0x11u)) ^ HIDWORD(v211) ^ *(_DWORD *)&v133[4
                                                                                          * (v66 ^ 0x4D)] ^ (v48 >> 1) ^ ((v66 ^ 0x20) + 414219232 + ((2 * (v66 ^ 0x20) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ v173;
  LODWORD(v66) = WORD1(v115);
  unsigned int v177 = (v172 + 432970823 - ((2 * v172) & 0x339D388E)) ^ v211 ^ HIDWORD(v212) ^ *(_DWORD *)(v136
                                                                                           + 4 * (BYTE1(v168) ^ 0x65u)) ^ *(_DWORD *)&v133[4 * (v68 ^ 0xDE)] ^ v112;
  LODWORD(v115) = *(_DWORD *)(v136
                            + 4
                            * (((unsigned __int16)((v118 - 170 - ((2 * v118) & 0xFEAC)) ^ v214) >> 8) ^ 0xA4u)) ^ v211 ^ (v175 + 432970823 - ((2 * v175) & 0x339D388E));
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v177) ^ 0x6C)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  int v178 = v48 >> 1;
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (BYTE3(v120) ^ 0xF7)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  int v179 = v48 >> 1;
  int v180 = ((BYTE2(v177) ^ 0xC8) - 873784370 - 2 * ((HIWORD(v177) ^ 0x6CC8) & 0xDE ^ HIWORD(v177) & 0x10)) ^ *(_DWORD *)&v132[4 * (BYTE2(v177) ^ 0x94)];
  int v181 = v180 + 432970823 - ((2 * v180) & 0x339D388E);
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (BYTE3(v115) ^ 0xE7)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  int v182 = v48 >> 1;
  LODWORD(v68) = v178 ^ *(_DWORD *)&v133[4 * ((v115 ^ v66) ^ 0xAF)] ^ *(_DWORD *)&v132[4 * (BYTE2(v120) ^ 0xB5)] ^ ((BYTE2(v120) ^ 0xE9) - 873784370 - 2 * ((WORD1(v120) ^ 0xF7E9) & 0xDE ^ WORD1(v120) & 0x10)) ^ (((v115 ^ v66) ^ 0xC2) + 414219232 + ((2 * ((v115 ^ v66) ^ 0xC2) + 254) & 0x2C0 ^ 0xCDDEFFFF));
  LODWORD(v68) = (v68 + 432970823 - ((2 * v68) & 0x339D388E)) ^ *(_DWORD *)(v136 + 4 * (BYTE1(v176) ^ 0xECu));
  LODWORD(v118) = v179 ^ *(_DWORD *)&v132[4 * (BYTE2(v176) ^ 0xA7)] ^ *(_DWORD *)&v133[4
                                                                                     * ((v177 ^ BYTE2(v170)) ^ 0x32)] ^ (((v177 ^ BYTE2(v170)) ^ 0x5F) + 414219232 + ((2 * ((v177 ^ BYTE2(v170)) ^ 0x5F) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ ((BYTE2(v176) ^ 0xFB) - 873784370 - ((2 * (HIWORD(v176) ^ 0x57FB)) & 0x19C));
  HIDWORD(v48) = *(_DWORD *)&v131[4 * (HIBYTE(v176) ^ 0x57)];
  LODWORD(v48) = HIDWORD(v48) ^ 0x628EA292;
  LODWORD(v118) = (v118 + 432970823 - ((2 * v118) & 0x339D388E)) ^ *(_DWORD *)(v136 + 4 * (BYTE1(v115) ^ 0x6Du));
  LODWORD(v112) = *(_DWORD *)(v136 + 4 * (BYTE1(v120) ^ 0x2Du));
  LODWORD(v66) = ((BYTE2(v115) ^ 0x31) - 873784370 - ((v115 >> 15) & 0x19C)) ^ *(_DWORD *)&v133[4 * (v120 ^ 0xC5)] ^ ((v120 ^ 0xA8) + 414219232 + ((2 * (v120 ^ 0xA8) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ *(_DWORD *)&v132[4 * (BYTE2(v115) ^ 0x6D)] ^ (v48 >> 1);
  LODWORD(v66) = v203 ^ *(_DWORD *)(v136 + 4 * (BYTE1(v177) ^ 0x61u)) ^ (v66 + 432970823 - ((2 * v66) & 0x339D388E));
  LODWORD(v131) = v66 ^ 0xADE748E2;
  LODWORD(v120) = (v118 - 2049991278 - ((2 * v118) & 0xB9F3B24)) ^ v107 ^ 0x85CF9D92;
  LODWORD(v132) = (v68 + 1105496955 - ((2 * v68) & 0x83C916F6)) ^ v210;
  unsigned int v183 = v112 ^ HIDWORD(a16) ^ v182 ^ *(_DWORD *)&v133[4 * (v176 ^ 0x42)] ^ ((v176 ^ 0x2F) + 414219232 + ((2 * (v176 ^ 0x2F) + 254) & 0x2C0 ^ 0xCDDEFFFF)) ^ v181;
  int v184 = *(_DWORD *)(v43 - 120);
  uint64_t v185 = (uint64_t)*(&off_10026C690 + v184 - 2021);
  uint64_t v186 = (uint64_t)*(&off_10026C690 + v184 - 2067);
  LODWORD(v112) = *(_DWORD *)(v185 + 4 * (v120 ^ 0xA2u));
  int v187 = (char *)*(&off_10026C690 + (v45 ^ 0x896)) - 4;
  LODWORD(v68) = (*(_DWORD *)&v187[4 * (BYTE2(v120) ^ 0x9E)] - 1504334713) ^ (*(_DWORD *)(v185
                                                                                        + 4
                                                                                        * (v183 ^ 0xC9u))
                                                                            + 1923432480);
  LODWORD(v75) = *(_DWORD *)(v185 + 4 * (v66 ^ 0xC8u));
  LODWORD(v133) = *(_DWORD *)(v185 + 4 * (v132 ^ 0xB9u));
  LODWORD(v115) = *(_DWORD *)(v186 + 4 * (BYTE3(v120) ^ 0xE7));
  LODWORD(v185) = *(_DWORD *)(v186 + 4 * (HIBYTE(v183) ^ 0xB8));
  LODWORD(v66) = (*(_DWORD *)&v187[4 * (BYTE2(v183) ^ 0x38)] - 1504334713) ^ (*(_DWORD *)(v186
                                                                                        + 4 * (BYTE3(v66) ^ 0x89))
                                                                            - 1541324812) ^ (v112 + 1923432480);
  int v188 = (char *)*(&off_10026C690 + v184 - 1959) - 8;
  LODWORD(v68) = (v68 + 341094746 - ((2 * v68) & 0x28A962B4)) ^ *(_DWORD *)&v188[4 * (BYTE1(v131) ^ 0x29)] ^ (*(_DWORD *)(v186 + 4 * ((v132 >> 24) ^ 0x65)) - 1541324812);
  uint64_t v189 = *(unsigned int *)&v188[4 * (BYTE1(v120) ^ 0xA0)];
  int v190 = *(_DWORD *)&v188[4 * (BYTE1(v183) ^ 0xE9)];
  LODWORD(v186) = *(_DWORD *)&v188[4 * (BYTE1(v132) ^ 0x74)];
  uint64_t v191 = *(unsigned int *)&v187[4 * (BYTE2(v131) ^ 0x6B)];
  LODWORD(v188) = *(_DWORD *)&v187[4 * (BYTE2(v132) ^ 0x1D)];
  unsigned int v192 = v186 ^ v205 ^ (v66 + 341094746 - ((2 * v66) & 0x28A962B4));
  unsigned int v193 = (char *)*(&off_10026C690 + (v45 ^ 0x884)) - 8;
  LODWORD(v131) = HIDWORD(a4) ^ v210 ^ (v68 + 1105496955 - ((2 * v68) & 0x83C916F6));
  a1[*(void *)(v43 - 256)] = v193[((unsigned __int16)(v186 ^ v205 ^ (v66
                                                                                      - 20134
                                                                                      - ((2 * v66) & 0x62B4))) >> 8) ^ 0x99] ^ 0x74;
  unsigned int v194 = (char *)*(&off_10026C690 + (v45 ^ 0x8AD)) - 12;
  a1[*(void *)(v43 - 248)] = (v194[BYTE2(v131) ^ 0xADLL] - 33) ^ 0xC5;
  LODWORD(v68) = v189 ^ HIDWORD(a4) ^ (v75 - ((2 * v75 + 625639488) & 0x28A962B4) - 2030440070) ^ (v185 - 1541324812) ^ (v188 - 1504334713);
  unsigned int v195 = (char *)*(&off_10026C690 + (v45 ^ 0x876)) - 8;
  a1[*(void *)(v43 - 200)] = v195[(v186 ^ v205 ^ (v66 + 90 - ((2 * v66) & 0xB4))) ^ 0xFCLL] ^ 0xEC;
  a1[*(void *)(v43 - 224)] = (v194[BYTE2(v68) ^ 0x8CLL] - 33) ^ 0x47;
  int v196 = (char *)*(&off_10026C690 + (v45 ^ 0x855)) - 12;
  a1[*(void *)(v43 - 216)] = (v196[HIBYTE(v192) ^ 0xDELL] - 50) ^ 0x1B;
  LODWORD(v185) = v194[BYTE2(v192) ^ 0x15];
  a1[*(void *)(v43 - 240)] = ((v185 + ((v185 - 33) ^ 0xDA) - 32) ^ 0xFE) + v185 - 33;
  unsigned int v197 = v202 ^ v190 ^ (v191 - 1504334713) ^ (v133 + 1923432480) ^ (v115
                                                                          - 2
                                                                          * ((v115 + 69287924) & 0x1454B15B ^ v115 & 1)
                                                                          - 1200230066);
  a1[*(void *)(v43 - 232)] = v195[v197 ^ 5] ^ 0x1E;
  a1[*(void *)(v43 - 168)] = (v196[(v131 >> 24) ^ 0x4ELL] - 50) ^ 0xE6;
  a1[*(void *)(v43 - 160)] = (v196[BYTE3(v68) ^ 0x9CLL] - 50) ^ 0xB8;
  uint64_t v198 = *(void *)(v43 - 176);
  a1[v198] = (v196[HIBYTE(v197) ^ 0x67] - 50) ^ 0x91;
  a1[*(void *)(v43 - 152)] = v195[v68 ^ 0xF2] ^ 0x14;
  a1[*(void *)(v43 - 192)] = v193[BYTE1(v68) ^ 0x1ELL] ^ 0xD7;
  a1[*(void *)(v43 - 144)] = v193[BYTE1(v197) ^ 0x33] ^ 0xCE;
  a1[*(void *)(v43 - 184)] = v193[BYTE1(v131) ^ 0xBCLL];
  a1[*(void *)(v43 - 136)] = v195[v131 ^ 0x9FLL] ^ 0xEC;
  a1[*(void *)(v43 - 128)] = (v194[BYTE2(v197) ^ 0xDLL] - 33) ^ 0x8E;
  return (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(a39 + 8 * ((21 * (((v198 + 741208264 - 2 * ((v198 + 16) & *(_DWORD *)(v43 - 208) ^ *(_DWORD *)(v43 - 204) & 5)) ^ 0x2C2DF0B8u) >= a37)) ^ (v184 - 687))))(5, v202, (v185 - 33) ^ 0xDAu, 341094746, 21, 236, v189, v191, a2, a3, a4, a1, v200, v201, v202, v203, v204, v205, v206,
           v207,
           v208,
           v209,
           a16,
           v210,
           v211,
           v212,
           v213,
           v214,
           v215,
           v216,
           v217,
           v218,
           v219,
           v220,
           v221,
           v222,
           v223,
           v224);
}

uint64_t sub_10008CE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v18 - 120) = a13;
  *(void *)(v18 - 136) = v17;
  *(_DWORD *)(v18 - 112) = (v16 + 605) ^ (((((v18 - 136) | 0x27D7B822) - (v18 - 136) + ((v18 - 136) & 0xD82847D8)) ^ 0xF475EA28)
                                        * v15);
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v16 + 1886)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((2311
                                              * (*(_DWORD *)(v18 - 128)
                                               + ((3 * (v16 ^ 0x166)) ^ (v13 + 1344)) < ((v16 - 278188730) & 0x1094D6EC ^ 0xF4E32CC3))) ^ v16)))(v19);
}

uint64_t sub_10008CF10()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (LODWORD(STACK[0x298]) ^ (331
                                                        * ((LODWORD(STACK[0x2B8])
                                                                        - 278074005
                                                                        + ~(v0 + LODWORD(STACK[0x240]) - 136246100)) > 2)))))();
}

uint64_t sub_10008CFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v16 - 136) = (v15 - 642) ^ (268847287
                                        * ((((v16 - 136) ^ 0x7BD70B6 | 0xAD039F8D)
                                          - (((v16 - 136) ^ 0x7BD70B6) & 0xAD039F8D)) ^ 0x5514FE13));
  *(void *)(v16 - 128) = a12;
  *(void *)(v16 - 120) = v13;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 657)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((v12 == (((v15 - 1736) | 0xE2) ^ 0x704CD4AB))
                                              * ((v15 - 1118582255) & 0x42AC2FFF ^ 0xC9)) ^ v15)))(v17);
}

uint64_t sub_10008D088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((27
                                * ((a12 ^ 0xC3F7BDCF)
                                 + 2147209088
                                 + ((((v13 ^ 0x79F) + 939) ^ 0x87EF7E00) & (2 * a12))
                                 - 1140034897 < 0x7FFFFFFE)) ^ v13)))();
}

uint64_t sub_10008D104@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W4>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  *(_DWORD *)(v47 - 128) = v45 + 8;
  *(_DWORD *)(v47 - 136) = v45 + 7;
  v53.val[1].i64[0] = ((_BYTE)v45 + 14) & 0xF;
  v53.val[1].i64[1] = ((_BYTE)v45 + 13) & 0xF;
  v53.val[2].i64[0] = ((_BYTE)v45 + 12) & 0xF;
  v53.val[2].i64[1] = ((_BYTE)v45 + 11) & 0xF;
  v53.val[3].i64[0] = ((_BYTE)v45 + 10) & 0xF;
  v53.val[3].i64[1] = ((_BYTE)v45 + 9) & 0xF;
  v48.i64[0] = 0x7777777777777777;
  v48.i64[1] = 0x7777777777777777;
  uint64_t v49 = ((_BYTE)a3 + (_BYTE)a4 + (_BYTE)a2 + (_BYTE)a1 + 6) & 0xF;
  v53.val[0].i64[0] = v49;
  v53.val[0].i64[1] = ((_BYTE)v45 - 1) & 0xF;
  v50.i64[0] = vqtbl4q_s8(v53, (int8x16_t)xmmword_10021E8F0).u64[0];
  v54.val[0].i64[1] = *(_DWORD *)(v47 - 136) & 0xF;
  v54.val[1].i64[1] = ((_BYTE)v45 + 5) & 0xF;
  v54.val[2].i64[1] = ((_BYTE)v45 + 3) & 0xF;
  v54.val[3].i64[1] = ((_BYTE)v45 + 1) & 0xF;
  v54.val[0].i64[0] = *(_DWORD *)(v47 - 128) & 0xF;
  v54.val[1].i64[0] = ((_BYTE)v45 + 6) & 0xF;
  v54.val[2].i64[0] = (v45 + 4) & 0xF;
  v54.val[3].i64[0] = ((_BYTE)v45 + 2) & 0xF;
  v50.i64[1] = vqtbl4q_s8(v54, (int8x16_t)xmmword_10021E8F0).u64[0];
  int8x16_t v51 = vrev64q_s8(vmulq_s8(v50, v48));
  *(int8x16_t *)(a5 - 15 + a3 + a4 + a2 + a1 - 506) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v43 + v49 - 15), *(int8x16_t *)(a5 - 15 + a3 + a4 + a2 + a1 - 506)), veorq_s8(*(int8x16_t *)(v49 + v44 - 13), *(int8x16_t *)(v49 + v42 - 11))), vextq_s8(v51, v51, 8uLL));
  return (*(uint64_t (**)(void))(a42 + 8 * ((1879 * ((v46 & 0xFFFFFFF0) == 16)) ^ a4)))();
}

uint64_t sub_10008D274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned int a19)
{
  if (a19 < 0xCED197C3 != (v19 + 2108383635) < 0xCED197C3) {
    BOOL v21 = (v19 + 2108383635) < 0xCED197C3;
  }
  else {
    BOOL v21 = v19 + 2108383635 > a19;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8 * ((v21 | (2 * v21)) ^ 0x3A4)))(a1, 2933508496);
}

uint64_t sub_10008D2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10008D300(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10008D304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return sub_10009D770(a3, a4, a5, a6, a8, (const char *)&STACK[0x28C], a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_10008D310@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X5>, int a4@<W8>)
{
  *(int8x16_t *)(a3 + (((a4 + 519) + a1) & (v4 + 16))) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v9)), v8);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 16) * a2) ^ a4)))();
}

void sub_10008D31C(_DWORD *a1)
{
  unsigned int v1 = (*a1
      + 1224239923 * (((a1 | 0xA81C68C2) - a1 + (a1 & 0x57E3973D)) ^ 0x5AAF9515)
      - 405) | 0x800;
  __asm { BRAA            X3, X17 }
}

void sub_10008D4FC(_DWORD *a1@<X8>)
{
  *a1 = v2;
  *(_DWORD *)(v1 + 20) = 563395539;
}

uint64_t sub_10008D544(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  *(_DWORD *)(a2 + (v6 - a4)) = *(_DWORD *)(v5 + (v6 - a4));
  return (*(uint64_t (**)(void))(v8 + 8 * (((a4 + 4 == v7) * a5) ^ a3)))();
}

void sub_10008D570()
{
}

uint64_t sub_10008D57C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unsigned int a4, unint64_t *a5, char a6, int a7, int a8, unint64_t *a9, unint64_t *a10, uint64_t a11)
{
  uint64_t v14 = *(void *)(v11 + 16);
  unsigned int v15 = 1224239923 * ((~&a4 & 0xAE13C0ED | &a4 & 0x51EC3F12) ^ 0x5CA03D3A);
  a6 = (51 * ((~&a4 & 0xED | &a4 & 0x12) ^ 0x3A)) ^ 0x11;
  a5 = &STACK[0x14281A3685FADE74];
  a7 = v15 + v13 - 423;
  a10 = &STACK[0xD1C4B9DDB1E97B4];
  a11 = v14;
  a9 = &STACK[0x4EABE2FA14688F66];
  a4 = ((a1 ^ 0x1688910B) + 1849687550 + ((2 * a1) & 0xFFCBEDFE ^ 0xD2CACC49 ^ ((v13 - 284) | 0x101))) ^ v15;
  uint64_t v16 = (*(uint64_t (**)(unsigned int *))(v12 + 8 * (v13 + 2008)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * ((108 * (a8 != -563355418)) ^ v13)))(v16);
}

uint64_t sub_10008D6C8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2378 * (LODWORD(STACK[0x2C8]) == v1 + 3 * (a1 ^ 0x127) - 63)) ^ a1)))();
}

uint64_t sub_10008D71C@<X0>(int a1@<W3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((a2 == v4) * ((v3 + a1 + 218) ^ 0x8CB)) ^ (v3 + a1 + 218))))();
}

uint64_t sub_10008D750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((241 * (((a5 + 126) ^ ((((a5 + 111) ^ 0x178) & v6) == 0)) & 1)) ^ (a5 + 1421))))();
}

uint64_t sub_10008D790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  int v46 = (v43 + 182) ^ (a6 - 105);
  int v47 = 831981571 * ((2 * ((v45 - 152) & 0x62362E68) - (v45 - 152) - 1647717994) ^ 0x46801B2);
  *(_DWORD *)(v45 - 152) = (a19 - 805007343) ^ v47;
  *(_DWORD *)(v45 - 148) = v47 + v43 + 1188;
  *(void *)(v45 - 144) = a16;
  uint64_t v48 = (*(uint64_t (**)(uint64_t))(v44 + 8 * (v43 + 2423)))(v45 - 152);
  unsigned int v49 = a43 & 0x3F ^ (v46 + 49567107);
  *(&a34 + v49) = -9;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8 * ((933 * (v49 > 0x37)) ^ v43)))(v48, 4432325);
}

uint64_t sub_10008D890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned int a26,uint64_t a27,int a28,int a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  unsigned int v36 = 460628867
      * ((((&a25 | 0x9A0779E2) ^ 0xFFFFFFFE) - (~&a25 | 0x65F8861D)) ^ 0x296E0460);
  a27 = a23;
  a25 = a15;
  a26 = v36 + a22 - 1573481390;
  a29 = v32 - v36 + 277;
  a31 = a14;
  a32 = a13;
  a30 = a16;
  uint64_t v37 = (*(uint64_t (**)(uint64_t *))(v33 + 8 * (v32 ^ 0x8B0)))(&a25);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33
                                                                                                  + 8 * (((a28 == ((8 * v32) ^ 0xDE6BE94E)) * (v32 + 1417)) ^ v32)))(v37, a17, 173609183, 1511410743, 1704253536, v34, v35);
}

uint64_t sub_10008D9A0@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  unsigned int v6 = (v5 + 620091469) & 0xDB0A278E;
  int v7 = v2 + v3;
  int v8 = v3 + 1;
  *(_DWORD *)(*(void *)(v4 - 0x5E8E72AB319E4281) + 4 * (int)(v7 + v6 - 650)) = a1;
  *(_DWORD *)(v4 - 0x5E8E72AB319E4285) = v8;
  int v9 = v8 + v2;
  if (v8 + v2 < 0) {
    int v9 = -v9;
  }
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)((19
                                     * ((int)((((v6 + 380) | 0x180) ^ v9 ^ 0x6EFED8D3)
                                            + ((2 * v9) & 0xDDFDBAAA)
                                            - 103284752
                                            + ((739 * (((v6 + 380) | 0x180) ^ 0x584)) ^ (v2 + 1217))) >= 0)) ^ ((v6 + 380) | 0x180))))();
}

uint64_t sub_10008DA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v60 = 1543737703 * ((~((v59 - 192) | 0x395EF543) + ((v59 - 192) & 0x395EF543)) ^ 0xB8555AC0);
  *(_DWORD *)(v59 - 192) = v57 - v60 + 161;
  *(_DWORD *)(v59 - 184) = v60 ^ 0xE86D67F7;
  *(void *)(v59 - 176) = 0x4455824F020409ECLL;
  *(void *)(v59 - 168) = a56;
  *(void *)(v59 - 160) = a57;
  uint64_t v61 = (*(uint64_t (**)(uint64_t))(v58 + 8 * (v57 ^ 0x8B6)))(v59 - 192);
  return (*(uint64_t (**)(uint64_t))(v58
                                            + 8
                                            * (((((v57 - 112) ^ (*(_DWORD *)(v59 - 188) == -563355418)) & 1)
                                              * (v57 - 274)) ^ v57)))(v61);
}

uint64_t sub_10008DB90@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 954));
  return v3(v1);
}

void sub_10008DBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  LODWORD(STACK[0x2A0]) = -1985401897;
  LODWORD(STACK[0x4AC]) = a8 + 159;
  JUMPOUT(0x10006EF94);
}

uint64_t sub_10008DBE0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7)
{
  a6 = (v7 + v9) ^ (69008221 * (((&a6 | 0x6BD0036D) - (&a6 & 0x6BD0036D)) ^ 0xB8725167));
  a7 = a1;
  uint64_t v10 = (*(uint64_t (**)(unsigned int *))(v8 + 8 * (v7 + v9 + 2154)))(&a6);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8 * (((a2 == 0) * (((v9 + v7 + 334) | 0x118) - 775)) ^ (v9 + v7 + 602))))(v10);
}

uint64_t sub_10008DC78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  BOOL v11 = *(_DWORD *)STACK[0x2B8] != a5 || v8 != ((77 * (v7 ^ 0x65)) ^ (a7 + 487));
  return (*(uint64_t (**)(void))(v9 + 8 * ((1690 * v11) ^ v7)))();
}

uint64_t sub_10008DCCC(uint64_t a1)
{
  LODWORD(STACK[0x4AC]) = v1 - 54;
  return sub_1000979D4(a1);
}

uint64_t sub_10008DCDC()
{
  return sub_100092440();
}

void sub_10008DCF4()
{
  *(_DWORD *)(v0 + 8) = *(_DWORD *)(v1 - 0x6BA7059072F2C1BBLL);
}

uint64_t sub_10008DD44(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v11 = (_DWORD *)STACK[0x2B8];
  _DWORD *v11 = v8 - 1;
  uint64_t v12 = &v11[6 * (v8 - 1892305837)];
  int v13 = v12[2];
  STACK[0x2B0] = *((void *)v12 + 2);
  LODWORD(STACK[0x324]) = v12[6];
  BOOL v14 = *(_DWORD *)(v10 + (v13 + a4) * (uint64_t)a1 + 36) == ((v7 - 1150) ^ 0x24B ^ (a7 + 537));
  return (*(uint64_t (**)(void))(v9 + 8 * (((16 * v14) | (32 * v14)) ^ (v7 - 709))))();
}

void sub_10008DDFC()
{
}

uint64_t sub_10008DE14@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W4>, uint64_t a4@<X8>)
{
  int v11 = *(_DWORD *)(a4 + 4 * (v8 + v6 - 8)) ^ *(_DWORD *)(a4 + 4 * (v8 + v6 - 3));
  int v12 = v11 + v10 - (v7 & (2 * v11));
  int v13 = *(_DWORD *)(a4 + 4 * ((((v4 ^ a2) * a3) ^ (v8 + 1434)) + v6)) ^ *(_DWORD *)(a4
                                                                                                  + 4 * (v8 + v6 - 14));
  HIDWORD(v14) = v13 ^ v12 ^ a1;
  LODWORD(v14) = v13 ^ ~v12;
  *(_DWORD *)(a4 + 4 * (v5 + v8)) = (v14 >> 31) + v10 - (v7 & (2 * (v14 >> 31)));
  return (*(uint64_t (**)(void))(v9 + 8 * (v4 | (32 * ((v5 + 1 + v8) > 0x4F)))))();
}

void sub_10008DEA4()
{
}

void sub_10008DEB0()
{
}

uint64_t sub_10008DF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v45 = BYTE4(a36) ^ 0x89;
  if (v45 == 1)
  {
    BYTE4(a31) = ((8 * a33) ^ 0x70) - 2 * ((8 * a33) ^ 0x70 ^ (8 * a33) & 8) + 119;
    BYTE5(a31) = ((a33 >> 5) ^ 0xCD)
               - ((((a33 >> 5) ^ 0xFFFFFFCD) << (v44 - 25)) & 0xEE)
               + 119;
    BYTE6(a31) = ((a33 >> 13) ^ 0x53) - ((2 * ((a33 >> 13) ^ 0x53)) & 0xEF) + 119;
    HIBYTE(a31) = ((a33 >> 21) ^ 0x65) - ((2 * ((a33 >> 21) ^ 0x65)) & 0xEF) + 119;
    HIDWORD(v48) = HIDWORD(a32) ^ 6;
    LODWORD(v48) = a33 ^ 0x60000000;
    LOBYTE(a32) = (v48 >> 29) - ((2 * (v48 >> 29)) & 0xEF) + 119;
    BYTE1(a32) = ((HIDWORD(a32) >> 5) ^ 0x1B) + (~(2 * ((HIDWORD(a32) >> 5) ^ 0x1B)) | 0x11) + 120;
    BYTE2(a32) = ((HIDWORD(a32) >> 13) ^ 0xA8) - ((2 * ((HIDWORD(a32) >> 13) ^ 0xA8)) & 0xEF) + 119;
    int v47 = ((HIDWORD(a32) >> 20) | 0x11) - (HIDWORD(a32) >> 21);
    goto LABEL_5;
  }
  if (v45 == 2)
  {
    BYTE4(a31) = 118 - (HIDWORD(a32) >> 21) - ((2 * ~(HIDWORD(a32) >> 21)) & 0xEF);
    BYTE5(a31) = ((HIDWORD(a32) >> 13) ^ 0xA8) + (~(2 * ((HIDWORD(a32) >> 13) ^ 0xA8)) | 0x11) + 120;
    BYTE6(a31) = ((HIDWORD(a32) >> 5) ^ 0x1B) - ((2 * ((HIDWORD(a32) >> 5) ^ 0x1B)) & 0xEF) + 119;
    HIDWORD(v46) = HIDWORD(a32) ^ 6;
    LODWORD(v46) = a33 ^ 0x60000000;
    HIBYTE(a31) = (v46 >> 29) - ((2 * (v46 >> 29)) & 0xEF) + 119;
    LOBYTE(a32) = ((a33 >> 21) ^ 0x65) - ((2 * ((a33 >> 21) ^ 0x65)) & 0xEF) + 119;
    BYTE1(a32) = ((a33 >> 13) ^ 0x53) - ((2 * ((a33 >> 13) ^ 0x53)) & 0xEF) + 119;
    BYTE2(a32) = ((a33 >> 5) ^ 0xCD) - ((2 * ((a33 >> 5) ^ 0xCD)) & 0xEF) + 119;
    int v47 = ((8 * a33) ^ 0x70) - 32 * (((8 * a33) ^ 0x70u) >> 4);
LABEL_5:
    BYTE3(a32) = v47 + 119;
  }
  return sub_1000928D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

void sub_10008E1BC()
{
  _DWORD *v0 = 563395391;
  sub_100093944();
}

uint64_t sub_10008E1CC()
{
  BOOL v5 = v2 - 554284973 > 1847529374 || v2 - 554284973 < v3;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v5 * ((v1 - 743) ^ 0x1D1)) ^ v1)))();
}

uint64_t sub_10008E21C@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v7 + v5)) = *(unsigned char *)(v4 + (v7 + v5));
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v7 - 1 == v2) ^ v6) & 1) * v8) ^ v3)))(0);
}

uint64_t sub_10008E254(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * ((215
                                                       * (v2 + v1 - 1027059324 >= (((v4 + 75659868) | 0x207C1A00) ^ 0x24FE9B97))) ^ v4)))(a1, v3);
}

uint64_t sub_10008E2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void, unint64_t, uint64_t, uint64_t, uint64_t, void))(v13
                                                                                                + 8
                                                                                                * ((((((v12 - 1618279032) ^ (**(_DWORD **)(a10 - 0x5E8E72AB319E4281) == v10)) & 1) == 0)
                                                                                                  * (((v12 + 1216) | 8) - 1725)) ^ (v12 + 1382))))(0, 0x811882A1EC79A0ECLL, 3995751237, 0x2310543D8F341D8, 2198273905, (v11 + 1416062098));
}

uint64_t sub_10008E3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(_DWORD *)(v26 - 104) = (v21 + 881) ^ (((v24 - ((v26 - 128) | v24) + ((v26 - 128) | 0x461595CE)) ^ 0x95B7C7C4) * v23);
  *(void *)(v26 - 112) = a20;
  *(void *)(v26 - 128) = v25;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v21 ^ 0x9B2)))(v26 - 128);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (((*(_DWORD *)(v26 - 120) > v20) * (((v21 + 43) | 0x200) + 833)) ^ v21)))(v27);
}

_DWORD *sub_10008E444(_DWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *uint64_t result = a5;
  return result;
}

uint64_t sub_10008E450@<X0>(int a1@<W0>, int a2@<W6>, int a3@<W8>, int8x16_t a4@<Q3>, int8x16_t a5@<Q4>)
{
  *uint64_t v5 = vaddq_s8(vaddq_s8(*(int8x16_t *)(v8 + (a3 + a1)), a5), vmvnq_s8(vandq_s8(vaddq_s8(*(int8x16_t *)(v8 + (a3 + a1)), *(int8x16_t *)(v8 + (a3 + a1))), a4)));
  return (*(uint64_t (**)(void))(v7 + 8 * (a2 + v6 + 1208)))();
}

uint64_t sub_10008E4A4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1632 * (**(unsigned char **)(a2 + 8) == 0)) ^ 0x162u)))();
}

void sub_10008E4D4()
{
  STACK[0x328] = *(void *)(v0 + 8 * (v1 - 811));
  JUMPOUT(0x1000ABB28);
}

uint64_t sub_10008E4F0(uint64_t a1, unsigned int a2, int a3, char a4)
{
  int v10 = v8 + 4;
  int v11 = *(_DWORD *)(v7 + 4 * ((v10 + a3) >> ((22 * (v4 ^ 0xFB)) ^ 0x2C)));
  *(unsigned char *)(v6 + (v10 + a3)) = v11 ^ 0xB2;
  *(unsigned char *)(v6 + (v10 + a3 + 1)) = (BYTE1(v11) ^ 0xA1) - ((2 * (BYTE1(v11) ^ 0xA1)) & 0xEF) + 119;
  *(unsigned char *)(v6 + (v10 + a3 + 2)) = (BYTE2(v11) ^ 0x43) - ((2 * (BYTE2(v11) ^ 0x43)) & 0xEF) + 119;
  *(unsigned char *)(v6 + (v10 + a3 + 3)) = (a4 ^ HIBYTE(v11)) - ((2 * (a4 ^ HIBYTE(v11))) & 0xEF) + 119;
  unsigned int v12 = *v5 - 2126625174;
  BOOL v13 = v12 < a2;
  BOOL v14 = v10 - 1795103245 < v12;
  if (v10 - 1795103245 < a2 != v13) {
    BOOL v14 = v13;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((983 * !v14) ^ v4)))();
}

uint64_t sub_10008E4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * ((46 * (STACK[0x390] != 0)) ^ (v20 + 480))))(STACK[0x390], a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

void sub_10008E528()
{
}

void sub_10008E55C(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10008E5C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                                           + 8 * (((((43 * (a4 ^ 0x8A2)) ^ 0x1EE) - 493) * (v4 < 0x20)) ^ a4 ^ 0x910)))(0);
}

void sub_10008E608()
{
}

uint64_t sub_10008E6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(_DWORD *)(v14 - 116) = v13 + 237 - 1224239923 * ((v14 - 2134978843 - 2 * ((v14 - 120) & 0x80BECF5D)) ^ 0x720D328A);
  *(void *)(v14 - 112) = a10;
  (*(void (**)(uint64_t))(v12 + 8 * (v13 + 1859)))(v14 - 120);
  *(_DWORD *)(v14 - 116) = v13
                         + 237
                         - 1224239923 * ((((v14 - 120) | 0x1D62533F) + (~(v14 - 120) | 0xE29DACC0)) ^ 0xEFD1AEE9);
  *(void *)(v14 - 112) = a11;
  (*(void (**)(uint64_t))(v12 + 8 * (v13 ^ 0x8C3)))(v14 - 120);
  *(void *)(v14 - 120) = v11;
  *(void *)(v14 - 104) = a11;
  *(_DWORD *)(v14 - 112) = v13
                         + 831981571 * ((2 * ((v14 - 120) & 0x6F747E28) - (v14 - 120) - 1869905454) ^ 0x92A51F6)
                         + 1177;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v13 ^ 0x896)))(v14 - 120);
  return sub_10008E84C(v15);
}

uint64_t sub_10008E888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t *a20,unint64_t *a21,unint64_t *a22,unint64_t *a23)
{
  LODWORD(a20) = a10 + 152 - 2078219279 * (&a20 ^ 0xDAFA9674) - 231789315;
  a22 = &STACK[0x5F548590D8AA63E9];
  a23 = a14;
  a21 = &STACK[0x4B3FB627E137F372];
  (*(void (**)(unint64_t **))(v23 + 8 * (a10 + 2072)))(&a20);
  LODWORD(a21) = a10
               + 152
               + 3804331
               * ((-1325552261 - (&a20 | 0xB0FDAD7B) + (&a20 | 0x4F025284)) ^ 0x31D77772)
               + 453;
  a20 = &STACK[0x2325945160E62A43];
  a22 = a14;
  a23 = &STACK[0x7073A7D8AAAECA4D];
  (*(void (**)(unint64_t **))(v23 + 8 * ((a10 + 152) ^ 0xBA8u)))(&a20);
  LODWORD(a22) = a10 + 152 - 944348131 * (&a20 ^ 0xA319A44E) - 38;
  a20 = &STACK[0x5F548590D8AA63E5];
  a21 = a14;
  (*(void (**)(unint64_t **))(v23 + 8 * (a10 + 2049)))(&a20);
  LODWORD(a21) = a10
               + 152
               - 241568881 * ((2 * (&a20 & 0x36C70448) - &a20 + 1228471220) ^ 0x9F29FFF6)
               + 128;
  a20 = a14;
  uint64_t v24 = (*(uint64_t (**)(unint64_t **))(v23 + 8 * (a10 + 2060)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((HIDWORD(a21) == -563355418) * (((a10 - 245) | 0x30E) + 1783)) ^ (a10 + 152))))(v24);
}

uint64_t sub_10008EA80@<X0>(int a1@<W7>, _OWORD *a2@<X8>)
{
  *(_OWORD *)(v3 + (v2 + a1)) = *a2;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((51
                                * (((((((v5 - 158) | 0x91u) + 0x1FFFFFF5DLL) & (v4 + 1)) == 16) ^ (((v5 + 98) | 0x91) + 112)) & 1)) ^ ((v5 - 158) | 0x91))))();
}

uint64_t sub_10008EB00(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 831981571 * ((2 * (a1 & 0x1F062D56) - a1 - 520498519) ^ 0x7958028D);
  return (*(uint64_t (**)(void))((char *)*(&off_10026C690 + (v1 ^ 0x6B4))
                              + 8
                              * (((*(void *)a1 != *(void *)(a1 + 16)) * (((v1 - 2130237356) & 0x7EF8D7B3) - 1665)) ^ v1)
                              - 4))();
}

void sub_10008EB94()
{
}

uint64_t sub_10008EBA0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((63
                                * (((155 * (v0 ^ 0x19A) - 138945134) & (2 * v1) ^ 0x5139CBC)
                                 + (v1 ^ 0xFD7636FC ^ (377 * (v0 ^ 0x19B)))
                                 - 293850114 == 1784161277)) ^ v0)))();
}

uint64_t sub_10008EC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  a14 = 1178560073 * ((((2 * &a13) | 0x3D2F85A6) - &a13 - 513262291) ^ 0xF9A2E0BB)
      - 504207030;
  uint64_t v16 = (*(uint64_t (**)(int *))(v15 + 18936))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((253 * (a13 == v14)) ^ 0x355u)))(v16);
}

uint64_t sub_10008ECA4(int a1, __n128 a2)
{
  *(_DWORD *)(v3 + 1424) = 278074005;
  *(_DWORD *)(v3 + 1428) = 136246100;
  *(void *)(v3 + 1432) = v4;
  *(void *)(v3 + 1440) = v4;
  *(_DWORD *)(v3 + 1448) = a1;
  *(__n128 *)(v3 + 1452) = a2;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v2 - 1647) | 0x669) - 1635) | (v2 - 1647) | 0x669)))();
}

uint64_t sub_10008ED04@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  uint64_t v4 = a2;
  unint64_t v5 = a2 + a1;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((41
                                * (v5 - v4 + (v2 ^ 0x471u) - 707 + 653947828 >= (((v2 ^ 0x471u) + 449) ^ 0x928uLL))) ^ v2 ^ 0x471)))();
}

uint64_t sub_10008ED7C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v20 = a1 + 902;
  *uint64_t v18 = 0x80000000;
  (*(void (**)(uint64_t))(v19 + 8 * (a1 ^ 0x90A)))(a17);
  unsigned int v21 = v18[1];
  unsigned int v22 = v18[2];
  unsigned int v23 = v18[398];
  int v24 = *(_DWORD *)(v17 + 4 * (v22 & 1));
  *uint64_t v18 = v18[v20 + 845 - 1477] ^ ((v21 & 0x7FFFFFFE | *v18 & 0x80000000) >> 1) ^ *(_DWORD *)(v17 + 4 * (v21 & 1));
  v18[1] = v23 ^ ((v22 & 0x7FFFFFFE | v21 & 0x80000000) >> 1) ^ v24;
  return (*(uint64_t (**)(void))(v19 + 8 * (v20 - 684)))();
}

void sub_10008EE60(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) + 1543737703 * (((a1 | 0xC7921CD6) - (a1 & 0xC7921CD6)) ^ 0xB9664CAA);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10008EF3C()
{
  int v7 = (v4 - 672) ^ (((&v7 + 2080036327 - 2 * ((unint64_t)&v7 & 0x7BFAD5E7)) ^ 0xA85887ED) * v2);
  uint64_t v8 = v6;
  (*(void (**)(int *))(v1 + 8 * (v4 ^ 0xA4A)))(&v7);
  return v3 ^ v0;
}

uint64_t sub_10008EFDC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((a1 != v1) ^ v2)))();
}

uint64_t sub_10008F020(uint64_t a1, int a2, int a3)
{
  unsigned int v10 = v6 + v5 + v7;
  v11.i64[0] = 0x7777777777777777;
  v11.i64[1] = 0x7777777777777777;
  uint64_t v12 = a1 + v10;
  int8x16_t v13 = veorq_s8(*(int8x16_t *)(v3 + v10 - 31), v11);
  *(int8x16_t *)(v12 - 15) = veorq_s8(*(int8x16_t *)(v3 + v10 - 15), v11);
  *(int8x16_t *)(v12 - 31) = v13;
  return (*(uint64_t (**)(void))(v9 + 8 * ((14 * (a3 - (v4 & 0xFFFFFFE0) == 2231)) ^ (v8 + a2 + 594))))();
}

uint64_t sub_10008F098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  return (*(uint64_t (**)(uint64_t))(v36 + 8 * (((v35 + ((8 * v35) ^ 0x900) - 1044) * (v33 == v34)) ^ v35)))(a33);
}

uint64_t sub_10008F0D8()
{
  int v1 = STACK[0x2D4];
  STACK[0x508] -= 1616;
  LODWORD(STACK[0x54C]) = 563395537;
  return (*(uint64_t (**)(void))(v0 + 8 * (((STACK[0x3A0] != 0) * (((v1 - 294) | 0x444) - 1490)) ^ (v1 - 120))))();
}

void sub_10008F138()
{
  uint64_t v4 = *(void *)(v0 + 24);
  *(_DWORD *)(*(void *)(v0 + 8) - 0x48DAFC6ABDD903E8) = *v1;
  *(_DWORD *)(v4 - 0x6C1B4F99CC2E886BLL) = *v2 + 178 * (v3 ^ 0x6B7) - ((2 * *v2) & 0xA3A976D4) - 774587898;
  *(_DWORD *)uint64_t v0 = -563355418;
}

uint64_t sub_10008F1E0()
{
  STACK[0x288] = v0;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 ^ 0xCC7)))(1576, 3012117910);
  STACK[0x340] = v3;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 == 0) * (((v1 - 1321) ^ 0x306) + ((v1 - 1321) | 0x241) - 1399)) | v1)))();
}

uint64_t sub_10008F248()
{
  STACK[0x380] = STACK[0x3C8];
  LODWORD(STACK[0x500]) = STACK[0x554];
  return sub_1000862B8();
}

uint64_t sub_10008F274()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((105 * (v1 != v0 + ((v2 + 780829195) & 0xD1757DF7) - 306)) ^ (v2 + 892))))();
}

void sub_10008F2BC()
{
}

uint64_t sub_10008F2D0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((a2 + 1516133150) & 0xA5A1A3AE ^ 0xFFFFFFCC) + ((a2 - 1885901997) & 0x7068936B))
                                     * (v2 != v3)) | a2)))();
}

uint64_t sub_10008F328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, unint64_t *a13, unint64_t *a14, unsigned int a15)
{
  a15 = v18 - 89 - 944348131 * ((2 * (&a13 & 0x15D91B80) - &a13 + 1780933758) ^ 0xC93F4030);
  a13 = &STACK[0x5F548590D8AA63B9];
  a14 = a11;
  (*(void (**)(unint64_t **))(v16 + 8 * (v18 + 1846)))(&a13);
  a13 = &STACK[0x5F548590D8AA63D1];
  a14 = a11;
  a15 = v18 - 89 - 944348131 * (((&a13 | 0xA075B616) - (&a13 & 0xA075B616)) ^ 0x36C1258);
  (*(void (**)(unint64_t **))(v16 + 8 * (v18 ^ 0xB36)))(&a13);
  a13 = a11;
  LODWORD(a14) = v18
               - 241568881 * ((&a13 & 0x134F22A0 | ~(&a13 | 0x134F22A0)) ^ 0x3AA1D91D)
               + 77;
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v18 ^ 0xBC1)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8 * (((HIDWORD(a14) == v15) * (v17 + v18 - 1666054042 + 938)) ^ v18)))(v19);
}

uint64_t sub_10008F498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned int a26,uint64_t a27,int a28,int a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v38 = 4 * v32;
  int v34 = *(_DWORD *)(a2 + 4);
  uint64_t v35 = *(void *)(a2 + 8);
  unsigned int v36 = 460628867 * ((96139022 - (&a25 | 0x5BAF70E) + (&a25 | 0xFA4508F1)) ^ 0xB6D38A8C);
  a29 = v32 - v36 + 36;
  a31 = a14;
  a30 = a16;
  a25 = a15;
  a26 = v36 + v34 - 1573481390;
  a32 = a13;
  a27 = v35;
  (*(void (**)(uint64_t *))(v33 + 8 * (v32 + 1887)))(&a25);
  return (*(uint64_t (**)(_UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t))(v33
                                                                                    + 8
                                                                                    * (((a28 == -563355418)
                                                                                      * (v38 ^ 0xC7F)) ^ a20)))(&off_10026C690, a17, 173609183, 1511410743, 1704253536);
}

uint64_t sub_10008F5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v71 = STACK[0x388];
  STACK[0x450] = STACK[0x388];
  STACK[0x498] = 0;
  LODWORD(STACK[0x514]) = 1704253533;
  STACK[0x520] = 0;
  LODWORD(STACK[0x414]) = 1704253533;
  STACK[0x4A0] = 0;
  return (*(uint64_t (**)(void))(v70
                              + 8 * (int)(((v71 != 0) * (((a70 - 1772) | 0x32C) + ((a70 - 960) ^ 0xFFFFFD97))) ^ a70)))();
}

uint64_t sub_10008F630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)((((v9 + ((v7 + 1339757051) & 0xB024EFFF) - 879) ^ ((v7 + 151390078) | 0x3058C240))
                                     * (v10 != a7)) ^ v7)))();
}

void sub_10008F69C()
{
}

uint64_t sub_10008F6A4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, int a6)
{
  int v9 = v6 ^ 5;
  a3 = a1;
  a4 = a2;
  a5 = (v6 ^ 5) - 944348131 * ((&a3 & 0xE4E14E4C | ~(&a3 | 0xE4E14E4C)) ^ 0xB80715FD) - 234;
  uint64_t v10 = (*(uint64_t (**)(uint64_t *))(v8 + 8 * (v6 ^ 0xBA2)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * (((a6 != ((v9 + 3) ^ (v7 + 332))) * (v9 - 685)) | v9)))(v10);
}

uint64_t sub_10008F740@<X0>(int a1@<W4>, unsigned int a2@<W8>)
{
  uint64_t v4 = a2;
  uint64_t v5 = a2 - 301084339;
  if ((unint64_t)(v5 + 1) > 0x38) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((v2 + 661) ^ (a1 - 365)) - a1 + 192) ^ 0xFD)
                                * ((unint64_t)(v6 - v4 + 301084339) < 8)) ^ (v2 + 661))))();
}

uint64_t sub_10008F7AC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((((a6 - 1580) | 0x222) - 499) ^ 0x1BC) * (v6 != a1)) ^ a6)))();
}

void sub_10008F7E0()
{
}

uint64_t sub_10008F7E8()
{
  int v6 = 9 * (v0 ^ (v5 + 14));
  int v7 = v4 + v0 - 619;
  BOOL v8 = v1 - 1789262125 < 389 * (v0 ^ (v5 - 2)) - 85009370;
  BOOL v9 = v3 - 1020028925 < (v1 - 1789262125);
  if ((v3 - 1020028925) < 0xFAEEDF30 != v8) {
    BOOL v9 = v8;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((!v9 * (v6 - 108)) ^ v7)))();
}

uint64_t sub_10008F878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)((((((a5 - 1962) | 0x622) + v6) ^ (a5 - 8417773) & 0xEADBEED1) * (v5 < 0x20)) ^ a5)))();
}

uint64_t sub_10008F8C8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void, uint64_t, void))(v4
                                                            + 8
                                                            * ((((137 * ((a4 + 980) ^ 0x5EB)) ^ 0x46)
                                                              * ((v5 & 0x18) == 0)) ^ (a4 + 980))))((a4 + 980) ^ 0x1A9u, a2, (v6 - a2));
}

void XpqjnD(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a5) {
    BOOL v8 = a6 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  int v11 = v8 || a7 == 0 || a8 == 0;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10008F994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  int v8 = (v5 + 275) | 0x1C1;
  *(unsigned char *)(a3 + ((((v8 - 1470) | 0x20u) ^ (unint64_t)(a2 + 1893)) & (a5 + a1))) = *(unsigned char *)(v7 + a4 - 1349855230);
  return (*(uint64_t (**)(void))(v6 + 8 * ((969 * ((a5 - 1199300154) < 0x40)) ^ v8)))();
}

uint64_t sub_10008FA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,char a63)
{
  *(void *)(a65 + 1560) = *(void *)STACK[0x4E0];
  *(_DWORD *)(a65 + 1552) = *(_DWORD *)STACK[0x530];
  *(void *)(*(void *)(a70 + 96) + 488) = *(void *)(a70 + 8);
  *(_DWORD *)(*(void *)(a70 + 96) + 480) = *(_DWORD *)a70;
  *(unsigned char *)(a70 + 103) = (a63 ^ 0xBA) * (a63 + 17);
  return (*(uint64_t (**)(void))(v70 + 8 * ((107 * (a60 == 103)) ^ a61)))();
}

void sub_10008FA88()
{
}

uint64_t sub_10008FA98@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, char a7@<W6>, uint64_t a8@<X8>)
{
  int v18 = (v10 + v15) & a6;
  uint64_t v19 = (a2 + v11 + 290);
  *(unsigned char *)(a1 + v19 + v16) = *(unsigned char *)(a4 + v19) ^ *(unsigned char *)(v8 + ((v18 ^ a5) & v19)) ^ *(unsigned char *)(((v18 ^ a5) & v19) + v9 + 1) ^ *(unsigned char *)(a8 + ((v18 ^ a5) & v19)) ^ (((v18 ^ a5) & v19) * a7) ^ 0x77;
  return (*(uint64_t (**)(void))(v14 + 8 * (((v11 - 1 == a3 + ((v18 + v17) & v13) - 18) * v12) ^ (v18 + 448))))();
}

uint64_t sub_10008FB18@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v30 = (*(uint64_t (**)(void, void, unint64_t))(v27 + 8 * (v23 ^ 0x841)))(LODWORD(STACK[0x52C]), (a1 + v24), STACK[0x3E8]);
  int v38 = (v30 ^ (v26 + 778)) - 650893600 + ((v25 ^ 0xFFFFF8D0) & (2 * v30));
  unint64_t v39 = STACK[0x288];
  if (v38 == 1496589535)
  {
    uint64_t v41 = (char *)&STACK[0x5C0] + v39 - 0x2C2F364FA24C5109;
    STACK[0x368] = (unint64_t)(v41 - 1824);
    LODWORD(STACK[0x3F4]) = 319388122;
    STACK[0x508] = v39 + (v28 ^ 0x10Du) + ((v28 - 1041720368) & 0x3E1765DD) - 1983;
    STACK[0x2F8] = 0;
    LODWORD(STACK[0x4FC]) = 1704253533;
    uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((v28 + 1297) ^ (124 * (v41 == (char *)1576))));
    STACK[0x290] = STACK[0x488];
    STACK[0x2B0] = (unint64_t)(v41 - 1596);
    STACK[0x2B8] = (unint64_t)(v41 - 1824);
    return v42(v30, v31, v32, v33, v34, v35, v36, v37);
  }
  else if (v38 == 1765024994)
  {
    LODWORD(STACK[0x54C]) = 563395550;
    return (*(uint64_t (**)(void))(v27 + 8 * (((STACK[0x3A0] != 0) * (((v28 - 294) | 0x444) - 1490)) ^ (v28 - 120))))();
  }
  else
  {
    int v43 = 268847287 * ((((v29 - 192) | 0x51786A13) + (~(v29 - 192) | 0xAE8795EC)) ^ 0xAED27B3A);
    *(_DWORD *)(v29 - 192) = (v38 - ((2 * v38 + 1301788226) & 0xBCD7C1CC) - 2059944953) ^ v43;
    *(void *)(v29 - 184) = a23;
    *(_DWORD *)(v29 - 176) = v43 + v28 + 227;
    uint64_t v44 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v28 + 1508)))(v29 - 192);
    return (*(uint64_t (**)(uint64_t))(v27
                                              + 8
                                              * (((STACK[0x3A0] != 0) * (((v28 - 294) | 0x444) - 1490)) ^ (v28 - 120))))(v44);
  }
}

void sub_10008FB70()
{
}

void sub_10008FB8C()
{
}

void sub_10008FB94(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,int *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v29 = 4 * (v28 - 1855926950);
  unsigned int v30 = -1805087677 * ((*(_DWORD *)(*a23 + (*a24 & 0xFFFFFFFFB2DB24FCLL)) ^ (a26 + v29)) & 0x7FFFFFFF);
  int v31 = v30 ^ HIWORD(v30);
  unsigned int v32 = -1805087677 * v31;
  *(_DWORD *)(a28 + v29) ^= *(_DWORD *)(a26 + v29) ^ *((_DWORD *)*(&off_10026C690 + a1 - 1167) + HIBYTE(v32) - 3) ^ *((_DWORD *)*(&off_10026C690 + (a1 ^ 0x406)) + HIBYTE(v32) - 3) ^ *((_DWORD *)*(&off_10026C690 + (a1 ^ 0x421)) + HIBYTE(v32) + 5) ^ (-1941766144 * v31) ^ v32 ^ (HIBYTE(v32) * (292 * (a1 ^ 0x491) + 1568224019));
  JUMPOUT(0x1000885B4);
}

void sub_10008FC8C()
{
}

void sub_10008FCEC()
{
  *(_DWORD *)(v1 - 140) = v0 - 268105278;
  JUMPOUT(0x10006EB64);
}

uint64_t sub_10008FE78(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  *(unsigned char *)(v8 + (a4 + v7)) = *(unsigned char *)(v5 + (a4 + v7)) ^ 0x77;
  return (*(uint64_t (**)(void))(v10 + 8 * (((a4 - 1 == v6) * (((a5 + 29505643) | 0x66000792) ^ (v9 + 1956))) ^ a5)))();
}

void sub_10008FEC8(unint64_t a1)
{
  STACK[0x2F8] = a1;
  LODWORD(STACK[0x4FC]) = v1;
  JUMPOUT(0x10008FF54);
}

uint64_t sub_10008FF90()
{
  BOOL v4 = ((2 * (v2 - (v3 & 0x1FD8DA74) + (v1 ^ 0x8FEC6E4E))) & 0xF4F8DF5C ^ 0x14D8DA54)
     + ((v2 - (v3 & 0x1FD8DA74) + (v1 ^ 0x8FEC6E4E)) ^ 0x75900294)
     + 1979686912 == v1 + 1887177786;
  return (*(uint64_t (**)(void))(v0 + 8 * ((2 * v4) | (8 * v4) | v1)))();
}

uint64_t sub_100090014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * ((78 * ((a10 ^ v10) < 0x15)) ^ v12)))();
}

uint64_t sub_10009003C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15, uint64_t a16, unint64_t *a17, int a18)
{
  unsigned int v21 = 1224239923 * ((2 * (&a13 & 0x619B6640) - &a13 - 1637574216) ^ 0x6CD7646F);
  a16 = a11;
  a17 = &STACK[0x634ED76D4AB88295];
  a13 = v21 ^ 0x6BCE5709;
  a14 = (v20 - 2024873671) ^ v21;
  a15 = v21 ^ 0x68D2F2E6;
  uint64_t v22 = (*(uint64_t (**)(int *))(v19 + 8 * (v20 ^ 0xB01)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (((a18 == v18)
                                              * (((((_WORD)v20 + 8619) & 0x7FF) + 53) ^ (v20 + 1024949403) & 0x81FE)) ^ v20)))(v22);
}

uint64_t sub_10009012C(unsigned int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((209 * (((v1 + 8) ^ (a1 < ((v1 - 1016) ^ 0x207u) - 374)) & 1)) ^ v1)))();
}

void sub_100090168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5, unsigned char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned char *a21,uint64_t a22,uint64_t a23,unsigned char *a24,uint64_t a25,uint64_t a26,unsigned char *a27,unsigned char *a28,unsigned char *a29,unsigned char *a30,unsigned char *a31,unsigned char *a32,unsigned char *a33)
{
  uint64_t v41 = ((a7 ^ 0x4B6A856884E70362) + v39 - (v37 & (2 * (a7 ^ 0x4B6A856884E70362)))) ^ a3;
  uint64_t v42 = (((v33 - 1554722561 + ((v38 - 1101) ^ 0xEu)) | (unint64_t)(v35 << 32))
       + 0x7D6DA0F4A237C93CLL
       - 2
       * (((v33 - 1554722561 + ((v38 - 1101) ^ 0xEu)) | (unint64_t)(v35 << 32)) & 0x7D6DA0F4A237C93DLL ^ (v33 - 1554722561 + ((v38 - 1101) ^ 0xEu)) & 1)) ^ v36;
  unint64_t v43 = v42 ^ 0xA173397C065C8DEALL;
  uint64_t v44 = v42 ^ 0x5E8CC683F9A37215;
  unint64_t v45 = ((v42 ^ 0x5E8CC683F9A37215)
       + 0x7122F342C09E16D1
       - ((2 * (v42 ^ 0x5E8CC683F9A37215)) & 0xE245E685813C2DA2)) ^ a1;
  uint64_t v46 = v45 ^ 0x629A61E2FE92CDE4;
  unint64_t v47 = v41 ^ 0x8ABB7B075CE8A96ELL;
  unint64_t v48 = (v45 ^ 0x629A61E2FE92CDE4) & v43 ^ v41 ^ 0x8ABB7B075CE8A96ELL;
  unint64_t v49 = (v45 ^ 0x9D659E1D016D321BLL) & (v34 ^ 0x27241DDFD3EDC661) ^ v44 ^ v48;
  *((void *)&v50 + 1) = v49 ^ 0xABEF87C8808CCB5;
  *(void *)&long long v50 = v49 ^ 0x8000000000000000;
  uint64_t v51 = v49 ^ __ROR8__(v49, 39) ^ (v50 >> 61);
  uint64_t v52 = v44 & (v41 ^ 0x754484F8A3175691);
  uint64_t v53 = v48 ^ 0xF38BFF733C051F6;
  uint64_t v54 = a7 ^ 0x4B6A856884E70362 ^ v34 ^ 0x27241DDFD3EDC661;
  unint64_t v55 = v52 ^ v54;
  uint64_t v56 = (v55 & 0x200000000 ^ 0x7FB6D3EFB7DFEDBFLL) + 2 * (v55 & 0x200000000);
  uint64_t v57 = v56 - 0x7FB6D3EFB7DFEDBFLL;
  uint64_t v58 = v56 - 0x5C040282200E000CLL;
  unint64_t v59 = 0xA369A55D4FB1DB72 - v56;
  if ((v53 & v57) == 0) {
    unint64_t v59 = v58;
  }
  unint64_t v60 = ((v53 + v59 - 0x23B2D16D97D1EDB3) ^ (0x23B2D16D97D1EDB3 - (v53 + v59)) ^ ((v55 & 0xFFFFFFFDFFFFFFFFLL)
                                                                                    - ((v53 + v59 - 0x23B2D16D97D1EDB3) ^ v55 & 0xFFFFFFFDFFFFFFFFLL)))
      + (v55 & 0xFFFFFFFDFFFFFFFFLL);
  unint64_t v61 = v60 - ((2 * v60) & 0x15BF734A61A5B108) + 0xADFB9A530D2D884;
  *((void *)&v62 + 1) = v61 ^ 0x2D884;
  *(void *)&long long v62 = v61 ^ 0xADFB9A530D00000;
  uint64_t v63 = ((v62 >> 19) - ((2 * (v62 >> 19)) & 0x15BF734A61A5B108) + 0xADFB9A530D2D884) ^ v61;
  unint64_t v64 = v63 & 0x88A7E47BC54E7E29 ^ ((v61 >> 28) ^ 0xADFB9A53) & 0xBC54E7E29 | v63 & 0x77581B843AB181D6 ^ ((v61 >> 28) ^ 0xADFB9A53) & 0x43AB181D6;
  uint64_t v65 = (v55 << 23) ^ (v55 >> 7) ^ ((v55 >> 41) | (v55 << 57)) ^ 0x1EC655AF97FB0312;
  uint64_t v66 = v55 ^ 0x2617089132B926A4 ^ (v65 - ((2 * v65) & 0x225C5ECCC5EDCCACLL) - 0x6ED1D0999D0919AALL);
  unint64_t v67 = v66 ^ (v61 << 36) ^ v64;
  unint64_t v68 = v47 & ~v54;
  unint64_t v69 = v46 ^ v54 & (v34 ^ 0xD8DBE2202C12399ELL);
  unint64_t v70 = v68 ^ v34 ^ 0x27241DDFD3EDC661 ^ v69;
  unint64_t v71 = v70 ^ 0xBE3909C673894495 ^ ((((v70 >> 10) ^ (v70 >> 17) | (v70 << 54)) ^ 0xF5EC3F377C10F093)
                                    + 0xFA6EBF2581C2343
                                    + ~(2
                                      * ((((v70 >> 10) ^ (v70 >> 17) | (v70 << 54)) ^ 0xF5EC3F377C10F093) & 0xFA6EBF2581C2366 ^ ((v70 >> 10) ^ (v70 >> 17)) & 0x24)));
  unint64_t v72 = v71 & 0x4C1D4E44A4B3031DLL ^ ((v70 << 47) ^ 0xB3EB800000000000) & 0x4C1D000000000000 | v71 & 0xB3E2B1BB5B4CFCE2 ^ ((v70 << 47) ^ 0xB3EB800000000000) & 0xB3E2800000000000;
  uint64_t v73 = v72
      - 2
      * (v72 & 0x540E055D3A0F109FLL ^ (v70 ^ 0x95 ^ (((v70 >> 10) ^ (v70 >> 17) ^ 0x93)
                                                                                     + 67
                                                                                     + ~(2
                                                                                       * ((((v70 >> 10) ^ (v70 >> 17) | (v70 << 54)) ^ 0xF5EC3F377C10F093) & 0xFA6EBF2581C2366 ^ ((v70 >> 10) ^ (v70 >> 17)) & 0x24)))) & 9)
      + 0x540E055D3A0F1096;
  unint64_t v74 = v73 ^ (v66 - ((2 * v66) & 0xA81C0ABA741E212CLL) + 0x540E055D3A0F1096);
  uint64_t v75 = v67 ^ 0xD2D884000000000;
  *((void *)&v62 + 1) = ~v69;
  *(void *)&long long v62 = v69 ^ 0x92CFC162FD513142;
  unint64_t v76 = v69 ^ 0x9C6BDB2B472C5618 ^ (((v69 << 58) ^ 0xC00000000000000)
                                    - ((2 * ((v69 << 58) ^ 0xC00000000000000)) & 0x1800000000000000)
                                    + 0xEA41A49BA7D675BLL);
  uint64_t v77 = v76 - ((2 * v76) & 0x915593EAD573EC2) - 0x7B755360A954609FLL;
  unint64_t v78 = v51 ^ 0xF724457AB5B62E24;
  uint64_t v79 = ((v69 ^ 0x92CFC162FD513166) >> (v55 & 6 ^ 2) >> (v55 & 6 ^ 4)) ^ (v62 >> 1) ^ v51 ^ 0xF724457AB5B62E24 ^ v77;
  unint64_t v80 = (v73 ^ 0xABF1FAA2C5F0EF69) & v66 ^ v79;
  unint64_t v81 = v80 ^ v73 ^ (((v67 ^ 0xD2D884000000000) & ~v74)
                   - ((2 * ((v67 ^ 0xD2D884000000000) & ~v74)) & 0xA81C0ABA741E212CLL)
                   + 0x540E055D3A0F1096);
  unint64_t v82 = ((v81 >> 10) & 0x2000000000000 ^ 0xB73E9C9FF73BDD77) + 2 * ((v81 >> 10) & 0x2000000000000);
  BOOL v83 = ((v82 + 0x48C1636008C42289) & (v81 ^ 0x28E000000000000)) == 0;
  unint64_t v84 = (v67 ^ 0xF2D277BFFFFFFFFFLL) & (v51 ^ 0x73AEE9E5E31DB145) ^ v74;
  unint64_t v85 = (v84 >> 41) ^ (v84 >> 7);
  unint64_t v86 = (v85 | (v84 << 57)) ^ (v84 << 23) ^ 0xF774B04353CE1CF4;
  uint64_t v87 = v86 - 2 * (v86 & 0x6AE57B8699503DEELL ^ v85 & 0xA) + 0x6AE57B8699503DE4;
  unint64_t v88 = v82 + 0x7FD7EFF67DEDB6E0;
  unint64_t v89 = 0xEE5529366C6571CELL - v82;
  if (!v83) {
    unint64_t v88 = v89;
  }
  unint64_t v90 = (v81 >> 10) & 0xFFFDFFFFFFFFFFFFLL ^ 0xA3E966F75234 ^ ((v81 ^ 0x28FA59BDD48D0B6) - 0x37168C9675299457 + v88);
  uint64_t v91 = ((v90 >> 38) & 0x2A35FE4) + (v90 >> 39) - 2 * ((v90 >> 38) & 0x2A35FE4) + 0x61376A34D751AFF2;
  *((void *)&v92 + 1) = v81 ^ 0xD0B6;
  *(void *)&long long v92 = v81 ^ 0x28FA59BDD480000;
  uint64_t v93 = (((v91 << 39) ^ (v81 << 54)) & 0xFFFFFF8000000000 | ((v91 ^ (v90 << 25)) >> 25)) ^ (v92 >> 17);
  unint64_t v94 = v75 ^ v79 & (v51 ^ 0x8C51161A1CE24EBALL);
  unint64_t v95 = (((v73 ^ 0x540E055D3A0F1096) & ~v79)
       - ((2 * ((v73 ^ 0x540E055D3A0F1096) & ~v79)) & 0x915593EAD573EC2)
       - 0x7B755360A954609FLL) ^ v78 ^ v94;
  unint64_t v96 = (8 * v95) ^ (v95 >> 39) ^ 0xBA3E0AB73A03F932 ^ ((*(unsigned char *)(v40
                                                                                     + (((v95 >> 57) ^ 0x2B) & 0x70 ^ 0xFE)) ^ ((((v95 >> 57) ^ 0x2B) & 0x70 ^ 0xDE) + (((v95 >> 57) ^ 0x2B) & 0x70 ^ 0x4B)) ^ 0xA1)
                                                                         - 122);
  uint64_t v97 = v95 ^ 0x6B5E2D3C204B84DDLL ^ (v96 - ((2 * v96) & 0x7833D8D58E3C5416) + 0x3C19EC6AC71E2A0BLL);
  unint64_t v98 = v97 + ((v95 << 25) ^ 0xADCEAB5DAC000000) - 2 * (v97 & ((v95 << 25) ^ 0xADCEAB5DAC000000));
  unint64_t v99 = v87 ^ v84;
  unint64_t v100 = v84 ^ v94;
  *(void *)&long long v92 = __ROR8__(__ROR8__(v100 ^ 0x787EEEF1A7EE72F1, 16) ^ 0x1712D402E105A6CBLL, 48);
  unint64_t v101 = v100 ^ 0xAC7C0FF4012565E3 ^ ((v100 ^ 0xAC7C0FF4012565E3) >> 19) ^ ((unint64_t)v92 >> 28) ^ ((void)v92 << 36) ^ ((void)v92 << 45) ^ v99;
  *((void *)&v92 + 1) = v101 ^ 0xA1;
  *(void *)&long long v92 = v101 ^ 0xF0DD477E18D04800;
  uint64_t v102 = v98 - 2 * (v98 & 0x4553CBE2F54869ELL ^ v97 & 4) - 0x7BAAC341D0AB7966;
  unint64_t v103 = v93 ^ 0x8557F9309BB51A6BLL;
  unint64_t v104 = v93 ^ 0x8557F9309BB51A6BLL ^ v99;
  unint64_t v105 = v104 ^ 0xF0DD477E18D048A1 ^ (v102 ^ 0x84553CBE2F54869ALL) & ((((unint64_t)(v92 >> 9) ^ 0x284B28057C49B8D1) >> (v69 & 0x37 ^ 3) >> (v69 & 0x37 ^ 0x34)) ^ (((unint64_t)(v92 >> 9) ^ 0x284B28057C49B8D1) << 9) ^ 0x69AFF5076C8E5DAFLL);
  *((void *)&v92 + 1) = v105 ^ 0x118501E2B14;
  *(void *)&long long v92 = v105 ^ 0x26974A0000000000;
  uint64_t v106 = v105 ^ 0x70BC85B9872844AALL ^ (((v92 >> 41) ^ (v105 << 57) ^ 0x2800000000000000)
                                      - 2 * (((v92 >> 41) ^ (v105 << 57)) & 0x562BCEA1D7366FBFLL ^ (v92 >> 41) & 1)
                                      + 0x562BCEA1D7366FBELL);
  uint64_t v107 = v106 + ((v105 >> 7) ^ 0x4D2E9630A03C56) - 2 * (v106 & ((v105 >> 7) ^ 0x4D2E9630A03C56));
  unint64_t v108 = (v80 >> 1) ^ (v80 >> 6) ^ (v80 << 58) ^ 0xDE1FAE11AA0A9F1DLL;
  unint64_t v109 = v80 ^ 0x223451A42FB6E60ALL ^ (v108 - ((2 * v108) & 0x9AE24C770DD24C60) + 0x4D71263B86E92630);
  unint64_t v110 = v109 & 0xF47FF077890F9720 ^ (v80 << 63) | v109 & 0xB800F8876F068DFLL;
  unint64_t v111 = (v104 ^ 0xF0DD477E18D048A1) & (v93 ^ 0x7AA806CF644AE594);
  uint64_t v112 = v102 ^ (v110 - ((2 * v110) & 0x8AA797C5EA90D34) - 0x7BAAC341D0AB7966);
  unint64_t v113 = v111 ^ v112;
  unint64_t v114 = v111 ^ v112 ^ v103 ^ (((v104 ^ 0xF22B881E72FB75ELL) & (v101 ^ 0xF0DD477E18D048A1))
                             - ((2 * ((v104 ^ 0xF22B881E72FB75ELL) & (v101 ^ 0xF0DD477E18D048A1))) & 0x9C9F7263E3F788ALL)
                             - 0x7B1B046CE0E043BBLL);
  *((void *)&v92 + 1) = v111 ^ v102 ^ (v110
                                                                   - ((2 * v110) & 0x5EA90D34)
                                                                   + 794068634) ^ v103 ^ (((v104 ^ 0xE72FB75E) & (v101 ^ 0x18D048A1)) - ((2 * ((v104 ^ 0xE72FB75E) & (v101 ^ 0x18D048A1))) & 0x3E3F788A) + 522173509) ^ 0x373;
  *(void *)&long long v92 = v114 ^ 0xF79457FB4F2F7400;
  uint64_t v115 = v114 ^ 0x84E4FB931F1FBC45 ^ ((v114 ^ 0x84E4FB931F1FBC45) >> 17) ^ (v92 >> 10) ^ ((v114 ^ 0x84E4FB931F1FBC45) << 47);
  uint64_t v116 = v107 + (v115 ^ 0x16EB95D00604E32ELL) - 2 * (v107 & (v115 ^ 0x16EB95D00604E32ELL));
  unint64_t v117 = v103 & ~v112;
  unint64_t v118 = v101 ^ 0xA60648108DB2C645 ^ (((v102 ^ 0x7BAAC341D0AB7965) & v110)
                                      - ((2 * ((v102 ^ 0x7BAAC341D0AB7965) & v110)) & 0xADB61EDD2AC51DC8)
                                      + 0x56DB0F6E95628EE4);
  unint64_t v119 = ((v118 ^ v117) - ((2 * (v118 ^ v117)) & 0x8AA797C5EA90D34) - 0x7BAAC341D0AB7966) ^ v102;
  *((void *)&v92 + 1) = v119 ^ 0x38FE43D2BCLL;
  *(void *)&long long v92 = v119 ^ 0x3278F80000000000;
  uint64_t v120 = (v92 >> 38) ^ (v119 >> 39 << 26) ^ 0xC258A8B62E885BC3;
  *((void *)&v92 + 1) = v113 ^ 0x548B80C;
  *(void *)&long long v92 = v113 ^ 0x7955EAEC48000000;
  unint64_t v121 = __ROR8__(v119, 61) ^ (v119 << 25) ^ __ROR8__(v120, 26);
  unint64_t v122 = (v113 >> 6) ^ (v113 >> 1) ^ ((((((v113 & 0x3F) << 31) ^ 0xE04699B10F1F629ALL ^ (unint64_t)(v92 >> 27)) << 27) ^ (v113 << 63)) & 0xFFFFFFFFF8000000 | ((((v113 & 0x3F) << 31) ^ 0xE04699B10F1F629ALL ^ (unint64_t)(v92 >> 27)) >> 37));
  unint64_t v123 = v121 ^ v122;
  unint64_t v124 = v121 ^ v122 ^ 0xC51AEF5B5CC303B1;
  unint64_t v125 = v116 & (v115 ^ 0xE9146A2FF9FB1CD1) ^ v124;
  unint64_t v126 = ((v125 >> 1) ^ (v125 >> 6) | (v125 << 63)) ^ (v125 << 58) ^ 0x82A267617DDD3C0DLL;
  unint64_t v127 = v125 ^ 0xB0552A2A69733C66 ^ (v126 - ((2 * v126) & 0xC71E6832139970B8) + 0x638F341909CCB85CLL);
  unint64_t v128 = (v122 ^ 0x853759C940934A2BLL) + (v124 | v121 ^ 0xBFD2496DE3AFB665) + 1;
  unint64_t v129 = v118 ^ v105;
  uint64_t v130 = ((v118 ^ v105) >> 19) ^ ((v118 ^ v105) << 36) ^ ((v118 ^ v105) << 45) ^ 0x2A792D60982B22B5;
  uint64_t v131 = (v129 >> 28) ^ 0x6E04C1591;
  unint64_t v132 = v129 ^ 0xB2C06B572581059ELL ^ (v130 - ((2 * v130) & 0xB989541C60550728) - 0x233B55F1CFD57C6CLL);
  unint64_t v133 = (v132 & 0x26452CB7C950B7B6 ^ v131 & 0x7C950B7B6 | v132 & 0xD9BAD34836AF4849 ^ v131 & 0x836AF4849) ^ v107;
  if ((v128 & 1 & v133) != 0) {
    uint64_t v134 = v133 - (v128 & 1) - ((2 * (v133 - (v128 & 1))) & 0xA18C413F9F426728) + 0x50C6209FCFA13394;
  }
  else {
    uint64_t v134 = v133 ^ 0x50C6209FCFA13394 ^ v128 & 1;
  }
  unint64_t v135 = v134 ^ ((v128 & 0xFFFFFFFFFFFFFFFELL) - ((2 * v128) & 0xA18C413F9F426728) + 0x50C6209FCFA13394);
  uint64_t v136 = v121 ^ 0x402DB6921C50499ALL;
  unint64_t v137 = (v123 ^ 0x3AE510A4A33CFC4ELL) & (v115 ^ 0x16EB95D00604E32ELL) ^ v121 ^ 0x402DB6921C50499ALL ^ v135;
  unint64_t v138 = ((8 * v137) ^ 0x12BB25DAC3BED128) & (v137 ^ 0x425764BB5877DA20) ^ __ROR8__(v137, 39) ^ (v137 ^ 0xFE0EB913CCD9C6B5 ^ (((v137 >> 61) ^ 0xBC59DDA894AE1CAALL) - 24) | (8 * v137) ^ 0x12BB25DAC3BED128);
  uint64_t v139 = 2 * v127;
  unint64_t v140 = v127 - 0x30523926A8FA70E4;
  unint64_t v141 = (v138 ^ 0xB91D296D1D8121D5 ^ (v140 - (v139 & 0x9F5B8DB2AE0B1E38))) & 0xA9AD36174A77719DLL;
  unint64_t v142 = (v141 | (v138 ^ 0xB91D296D1D8121D5 ^ (v140 - (v139 & 0x1F5B8DB2AE0B1E38))) & 0x5652C9E8B5888E62)
       - 2
       * ((v141 & 0x290DE923D2521D6ELL | (v138 ^ 0xB91D296D1D8121D5 ^ (v140 - (v139 & 0x1F5B8DB2AE0B1E38))) & 0xC92090000C62) ^ (v138 ^ 0xB91D296D1D8121D5 ^ (v140 - (v139 & 0x1F5B8DB2AE0B1E38))) & 2);
  unint64_t v143 = v136 & ~v133 ^ v116;
  unint64_t v144 = ((v143 + (v143 ^ 0x8F38572C0C9BC202) + 1) ^ 0xFFFFFFFFFFFFFFFELL) + v143;
  unint64_t v145 = v144 - ((2 * v144) & 0x881776EED3E06304) - 0x3BF44488960FCE7ELL;
  uint64_t v146 = v145 & 0x10000000000000 | 0xAE0DD74823A78F7;
  if (((v145 >> 7) & v145 & 0x10000000000000) != 0) {
    uint64_t v146 = 0x15C1BAE90474F1EELL - v146;
  }
  unint64_t v147 = v145 & 0xFFEFFFFFFFFFFFFFLL ^ (v145 >> 41) ^ (v145 << 23) ^ (v145 << 57) ^ (((v145 >> 7) ^ 0x1881776EED3E063)
                                                                                   - 0xAE0DD74823A78F7
                                                                                   + v146) ^ 0x7BBF436FA892345FLL;
  unint64_t v148 = v125 ^ v115 ^ ((v133 & ~v116) - ((2 * (v133 & ~v116)) & 0x9C5D714FB88D1BC2) + 0x4E2EB8A7DC468DE1);
  unint64_t v149 = (v148 & 0x1000000000 | (v148 << 47)) ^ v148 & 0xFFFFFFEFFFFFFFFFLL ^ ((v148 >> 10) ^ (v148 >> 17) | (v148 << 54));
  *((void *)&v150 + 1) = v149 ^ 0x3E021A15A2;
  *(void *)&long long v150 = v149 ^ 0x8D22750000000000;
  unint64_t v151 = v142 + 0x290DE923D2521D6CLL;
  unint64_t v152 = v149 ^ 0xC8D72A6A4950710BLL;
  unint64_t v153 = (v147 - ((2 * v147) & 0x8BEABEA89694C952) + 0x45F55F544B4A64A9) ^ v149 ^ 0xC8D72A6A4950710BLL;
  uint64_t v154 = v151 ^ v153 & (__ROR8__((v150 >> 38) ^ 0xE2AAF8192B2B27F8, 26) ^ 0x353601C75541F9B5);
  unint64_t v155 = ((v154 ^ 0xBB36EDD7F9521DD7) + 0x6DC4FB0BD4FFFF45) ^ ((v154 ^ 0xD6F216DC2DADE293) + 1);
  v154 ^= 0xE8ABF50FA29F4C3FLL;
  unint64_t v156 = (v155 - ((2 * v155) & 0x834C3858E19AA2A6) - 0x3E59E3D38F32AEADLL) ^ v154;
  unint64_t v157 = v156 - ((2 * v156 - 0x247609E856000178) & 0x9A929559C0AD09B4) - 0x44F1BA474AA97BE2;
  *((void *)&v150 + 1) = v157 ^ 0x1A;
  *(void *)&long long v150 = v157 ^ 0x4D494AACE05684C0;
  uint64_t v158 = ((v156 << 63) | 0x26A4A556702B426DLL) ^ (v157 >> 1) ^ (v150 >> 6);
  unint64_t v159 = (v158 + 0x4D494AACE05684C0 - ((2 * v158) & 0x9A929559C0AD09B4) + 26) ^ v157;
  unint64_t v160 = (((2 * v151) ^ 0xADE42DB85B5BC527) + (v151 ^ 0x290DE923D2521D6CLL)) & (v149 ^ 0x8D22753E021A15A2);
  unint64_t v161 = (v135 - ((2 * v135) & 0x4861DF04FCC0353ALL) - 0x5BCF107D819FE563) ^ v143;
  unint64_t v162 = ((v161 ^ 0xA430EF827E601A9DLL) << 45) ^ ((v161 ^ 0xA430EF827E601A9DLL) << 36) ^ v147 ^ __ROR8__(((v161 << 34) & 0xC000000000000000 | ((v161 ^ 0xA430EF827E601A9DLL) >> 30)) ^ __ROR8__(v161 ^ 0x4EBB2176E9BC7F05 ^ (((v161 >> 19) ^ 0x678C90CF111) - ((2 * ((v161 >> 19) ^ 0x678C90CF111)) & 0x1222C2692024) + 0x7D7D691161349012), 2) ^ 0xA6115EFD9A53B36ELL, 62);
  unint64_t v163 = (v151 ^ 0x290DE923D2521D6CLL) & (v138 ^ 0x894F104BB57B5136) ^ v162 ^ 0xE87B635F1624B3E6;
  unint64_t v164 = v163 ^ v138 ^ 0xB91D296D1D8121D5 ^ (v160 - ((2 * v160) & 0x9F5B8DB2AE0B1E38) - 0x30523926A8FA70E4);
  *((void *)&v150 + 1) = v164 ^ 0x5BE354A5BB0B2;
  *(void *)&long long v150 = v164 ^ 0x6000000000000000;
  uint64_t v165 = v164 ^ __ROR8__(v164, 39) ^ (v150 >> 61);
  unint64_t v166 = ((v162 ^ 0x3D9656FDEA6A2FLL ^ -(uint64_t)(v162 ^ 0x3D9656FDEA6A2FLL) ^ ((v162 ^ 0xE87B635F1624B3E6)
                                                                              + 0x17B90AF614312637))
        + 0x17B90AF614312636) & (v138 ^ 0x76B0EFB44A84AEC9) ^ v153;
  unint64_t v167 = v166 ^ 0x2DB5B6AF87F64351 ^ ((v166 ^ 0x2DB5B6AF87F64351) >> 7) ^ ((v166 ^ 0x2DB5B6AF87F64351) << 23) ^ (((v166 ^ 0x2DB5B6AF87F64351) >> 41) | ((v166 ^ 0x2DB5B6AF87F64351) << 57));
  unint64_t v168 = (((v162 ^ 0xE87B635F1624B3E6) & ~v153)
        - ((2 * ((v162 ^ 0xE87B635F1624B3E6) & ~v153)) & 0x8BEABEA89694C952)
        + 0x45F55F544B4A64A9) ^ v152;
  unint64_t v169 = (v168 - ((2 * v168) & 0x834C3858E19AA2A6) - 0x3E59E3D38F32AEADLL) ^ v154;
  unint64_t v170 = v169 ^ (v169 << 54) ^ (v169 << 47) ^ (v169 >> 10) ^ (v169 >> 17);
  *(void *)&long long v150 = __ROR8__(__ROR8__(v163, 61) ^ 0x500CB82D79BEE91BLL, 3);
  unint64_t v171 = (((v166 ^ (unint64_t)v150) >> 19) ^ ((v166 ^ (unint64_t)v150) >> 28) | ((v166 ^ (unint64_t)v150) << 45)) ^ 0x21278C61855392E3;
  unint64_t v172 = v166 ^ v150 ^ ((v166 ^ (unint64_t)v150) << 36) ^ v167 ^ (v171
                                                                       - ((2 * v171) & 0x8AF98475612DA7D0)
                                                                       + 0x457CC23AB096D3E8);
  uint64_t v173 = v172 ^ 0x6251E5BC04D7DAD4;
  uint64_t v174 = v170 ^ 0x45F27F17E3D2B5A3 ^ (v167 - ((2 * v167) & 0x31B6F708C04C031CLL) - 0x6724847B9FD9FE72);
  unint64_t v175 = (v172 ^ 0x9DAE1A43FB28252BLL) & (v165 ^ 0xA9109542E9BBBCELL) ^ v174;
  unint64_t v176 = v159 & (v165 ^ 0xF56EF6ABD1644431) ^ v172 ^ 0x6251E5BC04D7DAD4;
  *((void *)&v150 + 1) = v176 ^ v175 ^ 0x62F93;
  *(void *)&long long v150 = v176 ^ v175 ^ 0x69309AC4CA80000;
  uint64_t v177 = v176 ^ v175 ^ 0x1206A3952446591BLL ^ (((v150 >> 19) ^ ((v176 ^ v175) << 36) ^ 0xCAE2F93000000000)
                                             - 2
                                             * (((v150 >> 19) ^ ((v176 ^ v175) << 36) ^ 0xCAE2F93000000000) & 0x1495AA3968E876BELL ^ (v150 >> 19) & 0x36)
                                             + 0x1495AA3968E87688);
  uint64_t v178 = (v177 ^ -v177 ^ ((((v176 ^ v175) >> 28) ^ 0x69309AC4) - (v177 ^ ((v176 ^ v175) >> 28) ^ 0x69309AC4)))
       + (((v176 ^ v175) >> 28) ^ 0x69309AC4);
  unint64_t v179 = v178 + v39 - ((2 * v178) & 0x2526C4C79D02092ELL);
  LOBYTE(v178) = *(unsigned char *)(a19 + (v179 ^ 0xD1));
  *a27 = BYTE1(v179) ^ 4;
  a5[5] = ((v178 ^ 0x94) >> 6) | (4 * (v178 ^ 0x94));
  uint64_t v180 = (v179 >> 12) & 0xF0 | (v179 >> 20) & 0xF;
  *a28 = (*(unsigned char *)(v40 + (v180 ^ 0xE6)) ^ 0xA1)
       + (v180 ^ 0x53)
       + (v180 ^ 0xC6)
       - 2 * (((v180 ^ 0x53) + (v180 ^ 0xC6)) & (*(unsigned char *)(v40 + (v180 ^ 0xE6)) ^ 0xA1))
       - 122;
  LOBYTE(v180) = *(unsigned char *)(a19 + (BYTE3(v179) ^ 0x88)) ^ 0x94;
  *a29 = (v180 >> 6) | (4 * v180);
  unint64_t v181 = (v159 - ((2 * v159) & 0xA97E211E0A589B2ALL) - 0x2B40EF70FAD3B26BLL) ^ v165 ^ 0xDE2E19DB2BB7F65BLL;
  unint64_t v182 = (((v170 ^ 0xDD29049383F4B42DLL) & ~v181 ^ v176)
        - ((2 * ((v170 ^ 0xDD29049383F4B42DLL) & ~v181 ^ v176)) & 0xA97E211E0A589B2ALL)
        - 0x2B40EF70FAD3B26BLL) ^ v165 ^ 0xDE2E19DB2BB7F65BLL;
  *(void *)&long long v150 = __ROR8__((v182 >> 13) & 0x7000000000000 ^ __ROR8__(v182 ^ 0x3BC357325A03A2A9 ^ (((8 * v182) ^ (v182 << 25) ^ 0xBF0681A6CFCC6AD0)- 2* (((8 * v182) ^ (v182 << 25) ^ 0xBF0681A6CFCC6AD0) & 0x59C05965D57A2FF8 ^ (8 * v182) & 8)+ 0x59C05965D57A2FF3), 16) ^ 0x59AF12027FFB7224, 48);
  uint64_t v183 = (v150 ^ -(uint64_t)v150 ^ (((v182 >> 39) ^ 0xC4061C) - (v150 ^ (v182 >> 39) ^ 0xC4061C)))
       + ((v182 >> 39) ^ 0xC4061C);
  LODWORD(v182) = *(unsigned __int8 *)(a16
                                     + ((((v179 >> 31) & 0xB8 ^ 0x80) + (BYTE4(v179) ^ 0xBF)) ^ 0x77));
  DWORD1(v150) = (v182 >> 6) ^ 0x7F ^ -((v182 >> 6) ^ 0x7F) ^ (((v182 >> 6) | (8 * v182))
                                                                                         - 127);
  LODWORD(v150) = (DWORD1(v150) + 4 * v182) << 24;
  a5[1] = v183 ^ 0xAC;
  a24[6] = (BYTE6(v179) ^ 0x93) + (~(2 * (BYTE6(v179) ^ 0x93)) | 0xA1) + 48;
  a5[4] = BYTE2(v183) ^ 0x24;
  *a30 = (unint64_t)v150 >> 26;
  unint64_t v184 = v181 ^ (v170 ^ 0x22D6FB6C7C0B4BD2) & v167;
  unint64_t v185 = (v184 >> 1) ^ (v184 >> 6) ^ ((v184 << 58) ^ 0xB800000000000000) & 0xE7FFFFFFFFFFFFFFLL ^ (((v184 << 58) ^ 0xB800000000000000) & 0x1800000000000000 ^ v184 & 0x183B3BDBC4516A26 | v184 & 0xE7C4C4243BAE95D9 ^ (v184 << 63));
  a24[12] = (BYTE3(v183) ^ 0x72) - ((2 * (BYTE3(v183) ^ 0x72)) & 0x5E) + 47;
  *(unsigned char *)(a26 + 29) = HIBYTE(v179) ^ 0x92;
  a24[13] = (BYTE5(v179) ^ 0x62) - ((2 * (BYTE5(v179) ^ 0x62)) & 0x5E) + 47;
  a6[6] = (v183 ^ 0x12027FFB722459ACuLL) >> ((v179 >> 20) & 8) >> (~(v179 >> 20) & 8);
  LODWORD(v163) = *(unsigned __int8 *)(a16 + (((BYTE4(v183) ^ 0xFB) - 36) ^ 0x77));
  a6[4] = BYTE6(v183) ^ 2;
  *a5 = HIBYTE(v183) ^ 0x12;
  a6[2] = ((unsigned __int16)((v184 >> 1) ^ (v184 >> 6) ^ v184) >> 8) ^ 5;
  *a31 = BYTE5(v183) ^ 0x7F;
  uint64_t v186 = ((v184 ^ v173 & ~v174) - ((2 * (v184 ^ v173 & ~v174)) & 0x31B6F708C04C031CLL) - 0x6724847B9FD9FE72) ^ v170 ^ 0x45F27F17E3D2B5A3;
  unint64_t v187 = v186
       - ((2 * v186) & 0x9E2B77E5823BC0A6)
       + 0x4F15BBF2C11DE053
       - ((2 * (v186 - ((2 * v186) & 0x9E2B77E5823BC0A6) + 0x4F15BBF2C11DE053)) & 0xE34878B89ECAA2F2)
       - 0xE5BC3A3B09AAE87;
  unint64_t v188 = v175 ^ (v175 << 23) ^ ((v175 >> 7) ^ (v175 >> 41) | (v175 << 57));
  a5[2] = v185 ^ 0xDB;
  *a6 = ((((v163 >> 6) | (4 * v163)) ^ 0x7F) >> 2) | ((((v163 >> 6) | (4 * v163)) ^ 0x7F) << 6);
  unint64_t v189 = v187 ^ (v187 << 47) ^ (v187 >> 10) ^ (v187 << 54);
  unint64_t v190 = v189 ^ (v187 >> 17);
  LOBYTE(v163) = *(unsigned char *)(a15
                          + (((BYTE2(v185) ^ 0x76) + (BYTE2(v185) ^ 0xFFFFFFAA) + 1) ^ 0xFFFFFFFE)
                          + (BYTE2(v185) ^ 0x76));
  *a32 = BYTE3(v185) ^ 0x87;
  a5[3] = BYTE6(v185) ^ 0x5D;
  LOBYTE(v182) = (v163 ^ 0xF2 ^ (16 * v163) & 0x40) & 7 ^ 0x35 ^ ((unint64_t)((v163 ^ 0xF2 ^ (16 * v163) & 0x40) >> 3) << ((v183 ^ 0xAC) & (v183 ^ 0x50)) << ((v183 ^ 0xAC) & (v183 ^ 0x50) ^ 3));
  a5[11] = v190 ^ 0x9F;
  *(unsigned char *)(a26 + 28) = BYTE5(v185) ^ 0x22;
  a5[13] = ((v182 >> 3) | (32 * v182)) ^ 0xA6;
  *a21 = BYTE2(v190) ^ 0x58;
  a24[8] = (HIBYTE(v185) ^ 0xA1) - ((2 * (HIBYTE(v185) ^ 0xA1)) & 0x5E) + 47;
  uint64_t v191 = (v190 >> 20) & 0xF0 | (v190 >> 28);
  a24[17] = (BYTE4(v185) ^ 0x3C) - ((2 * (BYTE4(v185) ^ 0x3C)) & 0x5E) + 47;
  a24[11] = (BYTE1(v190) ^ 0xAF) - ((2 * (BYTE1(v190) ^ 0xAF)) & 0x5E) + 47;
  LOBYTE(v163) = (v191 ^ 0xBA) + (v191 ^ 0x2F);
  LOBYTE(v191) = *(unsigned char *)(v40 + (v191 ^ 0x9A));
  *(unsigned char *)a26 = BYTE6(v189) ^ 0x64;
  *a33 = BYTE5(v190) ^ 0xAD;
  *(unsigned char *)(a26 + 15) = ((v175 ^ (v175 << 23) ^ (v175 >> 7) ^ (v175 >> 41)) >> 24) ^ 0x79;
  a24[19] = v175 ^ (v175 >> 7) ^ (v175 >> 41) ^ 0xBD;
  a6[5] = ((unsigned __int16)(v175 ^ (v175 >> 7) ^ (v175 >> 41)) >> 8) ^ 0x3D;
  a5[8] = ((v175 ^ (v175 << 23) ^ (v175 >> 7) ^ (v175 >> 41)) >> 16) ^ 3;
  a24[18] = (v191 ^ v163 ^ 0xA1) - ((2 * (v191 ^ v163 ^ 0xA1) + 12) & 0x5E) - 75;
  a5[6] = BYTE4(v190) ^ 0x81;
  a6[7] = HIBYTE(v189) ^ 7;
  LOBYTE(v189) = *(unsigned char *)(a19 + (BYTE4(v188) ^ 0x19)) ^ 0x94;
  *(unsigned char *)(a26 + 14) = BYTE5(v188) ^ 0x49;
  a6[3] = HIBYTE(v188) ^ 0xBE;
  a6[1] = BYTE6(v188) ^ 0x75;
  *(unsigned char *)(a26 + 16) = (v189 >> 6) | (4 * v189);
  *(_DWORD *)(a26 + 4) = a17 - 2011036400;
  JUMPOUT(0x10009233CLL);
}

uint64_t sub_1000923C0@<X0>(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X2>, int a4@<W7>, uint64_t a5@<X8>)
{
  *(_DWORD *)(*a3 + 4 * (v6 + v5)) = a2;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a5
                                                     + 8
                                                     * (((v10 == ((v9 - 591) ^ v8) + v7) * (((v9 - 591) ^ a4) - 15)) ^ (v9 - 591))))(a1, 3840062113);
}

uint64_t sub_100092410@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  return sub_1000AC204(a1, 0, a3 + 900, *(_DWORD *)(*v5 + 4 * (a2 - 21856197)), v4, a4);
}

uint64_t sub_100092440()
{
  return sub_100092458();
}

uint64_t sub_100092458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,unsigned int a27)
{
  return (*(uint64_t (**)(void))(v29 + 8 * v27))((v28 ^ 0x200005DC) & a27);
}

uint64_t sub_1000924E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a13 = &STACK[0x55D5CC6D86BC0F27];
  a14 = (831981571 * ((2 * (&a13 & 0x65541590) - &a13 + 447474284) ^ 0x830A3A48)) ^ 0x8F;
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v16 + 18816))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((639 * (a15 == v15)) ^ 0x5CE)))(v17);
}

void sub_1000925A4()
{
}

uint64_t sub_1000925C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((2255 * (a4 + 1 == v5 + 20)) ^ v4)))();
}

uint64_t sub_10009269C()
{
  int v2 = *(_DWORD *)(STACK[0x210] + 56);
  *(_DWORD *)(STACK[0x210] + 56) = v2 + 1;
  return (*(uint64_t (**)(void))(v0 + 8
                                   * ((2459 * (v2 - 1837280498 < (((v1 - 813) | 0x90) ^ 0xFFFFFF6B))) ^ (v1 - 669))))();
}

void sub_1000926F0(uint64_t a1, int a2)
{
  *(_DWORD *)(*(void *)(a1 + 8) - 0x5F548590D8AA63B5) = a2;
  _DWORD *v3 = v2;
  JUMPOUT(0x100071400);
}

uint64_t sub_100092714(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(*(void *)(v8 - 0x5E8E72AB319E4281) + 4 * (((375 * (v5 ^ 0x544)) ^ (v4 + 934)) + v6)) = a4;
  return (*(uint64_t (**)(void))(v7 + 8 * (int)((19 * ((v6 + v4) >> 31)) ^ v5)))();
}

void sub_10009276C()
{
  STACK[0x2C8] = v0;
  *(_DWORD *)(STACK[0x5A8] + ((LODWORD(STACK[0x304]) + v1) & 0xFFFFFFFC)) = v2;
  JUMPOUT(0x1000744F4);
}

void sub_1000927AC()
{
  STACK[0x328] = *(void *)(v0 + 8 * (v1 - 814));
  JUMPOUT(0x1000ABB28);
}

uint64_t sub_1000927CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v18 - 120) = v16 + 69008221 * ((v18 - 144) ^ 0xD3A2520A) + 575;
  *(void *)(v18 - 136) = v13;
  *(void *)(v18 - 128) = v13;
  *(void *)(v18 - 112) = v15;
  *(void *)(v18 - 144) = v14;
  (*(void (**)(uint64_t))(v17 + 8 * (v16 + 1588)))(v18 - 144);
  int v19 = 2078219279 * ((((v18 - 144) | 0xFA4A981B) - (v18 - 144) + ((v18 - 144) & 0x5B567E0)) ^ 0x20B00E6F);
  *(_DWORD *)(v18 - 140) = -1131453695 - v19 + v12;
  *(void *)(v18 - 136) = a12;
  *(_DWORD *)(v18 - 128) = (v16 + 961) ^ v19;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v16 + 1604)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((*(_DWORD *)(v18 - 144) == -56550210) * ((168 * (v16 ^ 0x329)) ^ 0x32C)) ^ v16)))(v20);
}

uint64_t sub_1000928D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  HIDWORD(v46) = HIDWORD(a13) - 849014077;
  v44.i64[0] = 0x7777777777777777;
  v44.i64[1] = 0x7777777777777777;
  LODWORD(v46) = 24021544;
  return sub_1000AB064(1476395008, v44, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, v46,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_100092938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((*(_DWORD *)(v7 + 48 * (v10 + a6) + 36) == v10)
                                * (v9 + v6 + 616 + ((v6 - 2102607) & 0x397EDFEE) - 1552)) | v6)))();
}

void sub_100092994()
{
}

uint64_t sub_10009299C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15)
{
  int *v16 = a10 ^ v17;
  a14 = (v20 + v19) ^ (69008221 * (((&a14 | 0xE7563FA8) - (&a14 & 0xE7563FA8)) ^ 0x34F46DA2));
  a15 = a12;
  (*(void (**)(unsigned int *))(v18 + 8 * (v20 ^ (v15 - 1197))))(&a14);
  return sub_10008EF3C();
}

void sub_100092A24(_DWORD *a1@<X8>)
{
  unsigned int v4 = *v1 + v2 - ((2 * (*v1 + v2) + 805229328) & 0x24306250) - 1441293648;
  *int v5 = (HIBYTE(v4) ^ 0x12) - (((HIBYTE(v4) ^ 0x12) << ((v3 - 19) ^ 0xB6)) & 0xEE) + 119;
  v5[1] = (BYTE2(v4) ^ 0x18) - ((2 * (BYTE2(v4) ^ 0x18)) & 0xEF) + 119;
  v5[2] = (BYTE1(v4) ^ 0x31) - ((2 * (BYTE1(v4) ^ 0x31)) & 0xEF) + 119;
  v5[3] = v4 ^ 0x5F;
  v1[1] = *a1;
}

uint64_t sub_100092B00@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100092B80(a4 - 0x5E8E72AB319E4281, a1 - 0x5E8E72AB319E4281, 3139, 0xD6C163B36E702EDBLL, 0x6BFEDFCDB9AFDD35, 0x1735FBA6ALL, 0xBD3FBC7ED7DFF3F0, 58);
}

uint64_t sub_100092B80(void *a1, void *a2, char a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v19 = 4 * (v17 + v14);
  int v20 = v8 + a4 + (*(_DWORD *)(*a1 + v19) ^ v11);
  *(_DWORD *)(*a2 + v19) = v20 + v15 - ((v20 << ((v13 ^ a3) - 71)) & v18);
  int v21 = v17 + 1 + v9;
  BOOL v23 = v21 > v10 || v21 < v12;
  return (*(uint64_t (**)(void))(v16 + 8 * ((v23 * a8) ^ v13)))();
}

uint64_t sub_100092BF4@<X0>(int a1@<W8>)
{
  uint64_t v2 = 4 * (v1 - 1332704780);
  char v3 = (int *)(STACK[0x2C0] + v2);
  int v4 = *v3;
  LODWORD(v3) = -1805087677
              * ((*(_DWORD *)(*(void *)STACK[0x2A8] + (*(int *)STACK[0x2A0] & 0xFFFFFFFFC4F4DE60)) ^ v3) & 0x7FFFFFFF);
  LODWORD(v3) = v3 ^ (v3 >> 16);
  *(_DWORD *)(STACK[0x2C8] + v2) ^= v4 ^ *((_DWORD *)*(&off_10026C690 + a1 - 1225)
                                         + ((-1805087677 * v3) >> 24)) ^ *((_DWORD *)*(&off_10026C690 + a1 - 1301)
                                                                                               + ((-1805087677 * v3) >> 24)
                                                                                               + 4) ^ *((_DWORD *)*(&off_10026C690 + (a1 ^ 0x55E)) + ((-1805087677 * v3) >> 24) - 2) ^ (v3 * ((a1 - 476) ^ 0x8C430386)) ^ (-1805087677 * v3) ^ (-697817803 * ((-1805087677 * v3) >> 24));
  return sub_1000A0224();
}

void sub_100092CE0()
{
}

uint64_t sub_100092CE8(int8x8_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9)
{
  *(int8x8_t *)(v12 + v9) = veor_s8(*(int8x8_t *)(a9 + v9), a1);
  return (*(uint64_t (**)(void))(v11 + 8 * (((v13 == 0) * a8) ^ v10)))();
}

uint64_t sub_100092D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  int v23 = ((v21 + 883) ^ 0xADC24903) + a21 - *(_DWORD *)(a2 + 4) == 2145959035;
  return (*(uint64_t (**)(void))(v22 + 8 * ((v23 << 6) | (v23 << 9) | v21)))();
}

uint64_t sub_100092D64@<X0>(int a1@<W0>, int8x16_t *a2@<X1>, int a3@<W8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q1>)
{
  *(int8x16_t *)(v8 + a3 + 16 + (v9 ^ (v5 + 774))) = vaddq_s8(vsubq_s8(*a2, vandq_s8(vaddq_s8(*a2, *a2), a4)), a5);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v6 == 16) * a1) ^ v7)))();
}

void sub_100092D70(uint64_t a1)
{
  int v1 = 3804331 * ((-2 - ((a1 | 0xD3EE21B) + (~a1 | 0xF2C11DE4))) ^ 0x8C143812);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_100092E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((462 * (a7 + ((a6 - 795) ^ 0x7B4 ^ (a5 + 100)) < 0xFFFFFFF0)) ^ (a6 - 582))))();
}

uint64_t sub_100092E84(__n128 a1)
{
  a1.n128_u16[0] = 30583;
  a1.n128_u8[2] = 119;
  a1.n128_u8[3] = 119;
  a1.n128_u8[4] = 119;
  a1.n128_u8[5] = 119;
  a1.n128_u8[6] = 119;
  a1.n128_u8[7] = 119;
  return sub_100092EBC(229, a1);
}

uint64_t sub_100092EBC@<X0>(int a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(double *)(v7 + a3 + a2 + v4) = a4;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 + v4 == v6) * a1) ^ v5)))();
}

uint64_t sub_100092EE8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((8 * ((a6 + 1 + v6) < 0x10)) | (16 * ((a6 + 1 + v6) < 0x10))) ^ (a1 - 608))))();
}

uint64_t sub_100093004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,int a61)
{
  *(_DWORD *)(v61 - 128) = a58 ^ 0xC292B33;
  *(_DWORD *)(v61 - 140) = a60 ^ 0x44A39314;
  *(_DWORD *)(v61 - 132) = a61 ^ 0xCFCAAEF5;
  *(_DWORD *)(v61 - 136) = a59 ^ 0x9501F8FF;
  return sub_1000AF25C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_100093058@<X0>(uint64_t a1@<X4>, char a2@<W8>)
{
  *(void *)(a1 + v3 + v4) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((2985 * (((v2 + 782) ^ 0x5BCLL) == (a2 & 0x38))) ^ v2)))();
}

void sub_1000930A0()
{
}

uint64_t sub_1000930AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void, void))(v9
                                                   + 8
                                                   * (int)(((((a5 + 1615496118) | 0x8A110090) ^ (v8 + 1519))
                                                          * ((v5 & 0x18) == 0)) ^ a5)))((v6 - v7), (a5 + 1497));
}

uint64_t sub_1000930F0(int *a1)
{
  unsigned int v2 = a1[1] - 1178560073 * (((a1 | 0xB64875FC) - (a1 & 0xB64875FC)) ^ 0x517D5794);
  uint64_t result = (*(uint64_t (**)(char *, void (*)()))((char *)*(&off_10026C690 + (int)(v2 ^ 0xE1F26977))
                                                         + 8 * (int)(v2 + 504209426)
                                                         - 4))((char *)*(&off_10026C690 + (int)(v2 ^ 0xE1F26974)) - 12, sub_1000751E8);
  int v4 = *(_DWORD *)*(&off_10026C690 + (int)(v2 ^ 0xE1F269F4));
  if (result) {
    int v4 = 563395160;
  }
  *a1 = v4;
  return result;
}

void sub_1000931C8()
{
}

void sub_100093200(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a1 + a2) = 1758911813;
  sub_1000A91F8();
}

uint64_t sub_100093210()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v0 + 8 * (v2 ^ 0xA5B)))();
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * ((1684 * (v1 == ((4 * v2) ^ 0xFC4) - 563356310)) ^ (v2 + 78))))(v3);
}

uint64_t sub_100093260@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1438 * (*(_DWORD *)STACK[0x2B8] - 1892305836 < (a1 ^ 0x34Cu) - 798)) ^ a1)))();
}

void sub_1000932A8()
{
  uint64_t v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1000932FCLL);
}

void sub_1000933A4(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000933EC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((991
                                * (((((v3 - 1843605) & 0xF2BEF7DB) + 189473806) & (2
                                                                                 * (*(unsigned __int8 *)(a2 + 2) - 38)))
                                 + ((*(unsigned __int8 *)(a2 + 2) - 38) ^ v4) == v4)) ^ v3)))();
}

uint64_t sub_100093444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v8 = v5 == ((((v6 - 1948) | 0x18) + 768) ^ 0x322);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8
                                                                                         * ((2 * v8) | (4 * v8) | v6)))(a1, a2, a3, a4, a5, 3037000498);
}

void sub_100093480()
{
}

uint64_t sub_10009348C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13
                                                                       + 8
                                                                       * ((110
                                                                         * (a13
                                                                          - 1296018759
                                                                          + ((v14 - 1708995121) & 0x65DD31FEu)
                                                                          + 816
                                                                          + 372 < 0xFFFFFFFB)) ^ (v14 + 1765))))(a1, a2, a3, a4);
}

uint64_t sub_1000934F0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 - 1 >= 0) * ((v0 - 1895117942) & 0x70F535DE ^ 0x537)) ^ v0)))();
}

uint64_t sub_100093538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)((((v6 & 0x18) == (((a6 - 518) | 0x14C) ^ 0x14E))
                                     * ((a6 + 1498028271) & 0xA6B5E59F ^ 0xA70)) ^ a6)))();
}

uint64_t sub_100093590@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v10 = a2 + 1;
  *int v5 = ((v4 + v10 + (v6 ^ (a1 + 70))) ^ v7) * (v3 + v10);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v10 == 91) * v8) ^ v2)))();
}

uint64_t sub_100093598(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v9 = *(void *)(v8 - 0x6BA7059072F2C1D3);
  int v10 = *(unsigned __int8 *)(v9 + (v7 - 218024906)) ^ 0x77;
  int v11 = ((*(unsigned __int8 *)(v9 + (v7 - 218024909)) ^ 0x77777777) << 24) | ((*(unsigned __int8 *)(v9 + ((a5 + 2029) ^ 0xF3013CC5) + v7) ^ 0x77) << 16) | ((*(unsigned __int8 *)(v9 + (v7 - 218024907)) ^ 0x77) << 8) | v10;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((30
                                * (((v6 + v11 - 2 * (v11 & 0x5E6BE0EF ^ v10 & 9) + 0x1000000) & 0xFFFFFF ^ 0x6BE0E6)
                                 - (a2
                                  + *(_DWORD *)(a1 + 20)) == -1166213644)) ^ a5)))();
}

uint64_t sub_100093678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((3425 * ((a19 & 0xFFFFFFF0) == ((v19 - 1442389339) & 0x1C9A565E ^ 0x33A16256))) ^ (v21 + v19 + 316))))();
}

uint64_t sub_1000936D0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 + ((v2 - 306) | 0x50A) + 504) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_100093700(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((*(_DWORD *)(*a1 + v4) != v2) * (((v3 - 1237) | 0x4E0) - 1748)) ^ v3)))();
}

uint64_t sub_100093734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = *(uint64_t (**)(void, uint64_t, uint64_t))(v5 + 8
                                                               * (((((v4 ^ 0x388) + 562) ^ 0x78C) * (v3 > 0)) ^ v4));
  return v6(v6, a2, a3);
}

uint64_t sub_10009379C()
{
  return sub_1000937EC();
}

uint64_t sub_1000937EC@<X0>(int a1@<W8>, uint64_t a2, int a3, int a4)
{
  uint64_t v8 = *(void *)(v6 - 0x6BA7059072F2C1D3);
  unsigned int v9 = *v5 + a1;
  *(unsigned char *)(v8 + v9) = (HIBYTE(v4) ^ 0x14) - ((2 * (HIBYTE(v4) ^ 0x14)) & 0xEF) + 119;
  *(unsigned char *)(v8 + v9 + 1) = (BYTE2(v4) ^ 0xB2) - ((2 * (BYTE2(v4) ^ 0xB2)) & 0xEF) + 119;
  *(unsigned char *)(v8 + v9 + 2) = (BYTE1(v4) ^ 0x67) - ((2 * (BYTE1(v4) ^ 0x67)) & 0xEF) + 119;
  *(unsigned char *)(v8 + v9 + 3) = v4 ^ 0xE1;
  uint64_t v10 = *(void *)(v6 - 0x6BA7059072F2C1D3);
  LODWORD(v8) = v7 - ((2 * v7 + 912538440) & 0x24306250) + 222973644;
  unsigned int v11 = ((2 * (a1 + *v5 + 4)) & 0x77EB79FE) + ((a1 + *v5 + 4) ^ 0x3BF5BCFF) - 1005960447;
  *(unsigned char *)(v10 + v11) = (BYTE3(v8) ^ 0x12) - ((2 * (BYTE3(v8) ^ 0x12)) & 0xEF) + 119;
  *(unsigned char *)(v10 + v11 + 1) = (BYTE2(v8) ^ 0x18) - ((2 * (BYTE2(v8) ^ 0x18)) & 0xEF) + 119;
  *(unsigned char *)(v10 + v11 + 2) = (BYTE1(v8) ^ 0x31) - ((2 * (BYTE1(v8) ^ 0x31)) & 0xEF) + 119;
  *(unsigned char *)(v10 + v11 + 3) = (v7 - ((2 * v7 + 72) & 0x50) - 52) ^ 0x5F;
  *uint64_t v5 = a4;
  return sub_100093944();
}

uint64_t sub_100093984()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((63 * (v2 + v0 + ((v1 - 1314091996) & 0x4E537257u) + 269027255 > 7)) ^ v1)))();
}

uint64_t sub_1000939E8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((5 * v3) + 4 == v1 - 1704253533) ^ (a1 + 28)) & 1)
                                * (74 * (a1 ^ 0xDA) - 754)) ^ a1)))();
}

uint64_t sub_100093A40()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((LODWORD(STACK[0x2D4]) - 814) | 0x300) - 673) * (v1 > 0x7AF60F81)) ^ (LODWORD(STACK[0x2D4]) - 46))))();
}

uint64_t sub_100093A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unsigned int a8@<W8>)
{
  int v12 = v9 + 3;
  if ((a8 & 0x20) != 0) {
    int v12 = v9;
  }
  LODWORD(STACK[0x548]) = v12;
  if (v8 > -1015098471)
  {
    if (v8 == -1015098470 || v8 == 1970840504) {
      goto LABEL_15;
    }
    int v13 = -323529449;
  }
  else
  {
    if (v8 == -2013225045 || v8 == -1404339823) {
      goto LABEL_15;
    }
    int v13 = -1284903763;
  }
  if (v8 != v13)
  {
    if ((a8 & 2) != 0) {
      int v14 = 56245772;
    }
    else {
      int v14 = 56245773;
    }
    LODWORD(STACK[0x47C]) = v14;
    LODWORD(STACK[0x298]) = 1295906331;
    LODWORD(STACK[0x2A0]) = 2041129940;
    JUMPOUT(0x10006EF94);
  }
LABEL_15:
  *(_OWORD *)&STACK[0x1840] = xmmword_10021E920;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * (int)(((v11 - 687) * ((a8 >> 5) & 1)) ^ (v11 + 1276))))(a1, a2, a3, a4, a5, a6, a7, 563395391);
}

uint64_t sub_100093BCC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unsigned int *a57)
{
  uint64_t v65 = (*(uint64_t (**)(void, void, void, void, unint64_t *, uint64_t, uint64_t, unint64_t *))(v60 + 8 * (v61 + 1217)))(*(unsigned int *)STACK[0x210], (v57 + a1), a40 ^ 0x9A43286E, (*(_DWORD *)(STACK[0x210] + 52) - 1691477460), &STACK[0x5B0], v58, v59, &STACK[0x1860]);
  int v67 = (v65 ^ 0x7FFB3FF4) - 106042400 + (((v61 - 416) ^ 0xFFF67CC6) & (2 * v65));
  if (v67 == -1985401897) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v60
  }
                                                       + 8
                                                       * ((55
                                                         * (LODWORD(STACK[0x298]) - 1295906331 < (((v63 ^ 0x286) + 1901) ^ 0x916u))) ^ (v63 + 1442))))(v65, v66);
  if (v67 != 2041129940)
  {
    LODWORD(STACK[0x2A0]) = v67;
    int v68 = 268847287 * ((((v64 - 192) | 0xB5A806F) - (v64 - 192) + ((v64 - 192) & 0xF4A57F90)) ^ 0xF4F09147);
    *(_DWORD *)(v64 - 176) = v68 + v63 + 227;
    *(void *)(v64 - 184) = a22;
    *(_DWORD *)(v64 - 192) = (v67 - ((2 * v67 + 212707416) & 0xBCD7C1CC) + 1690481938) ^ v68;
    (*(void (**)(uint64_t))(v60 + 8 * (v63 ^ 0xA3C)))(v64 - 192);
    JUMPOUT(0x10006EF94);
  }
  (*(void (**)(void, uint64_t, uint64_t))(v60 + 8 * (v63 ^ 0xA73)))(*a57, v58, v59);
  STACK[0x380] = 0;
  LODWORD(STACK[0x500]) = 0;
  unint64_t v70 = STACK[0x4E8];
  unsigned int v71 = STACK[0x2C8] & 0xDB97BE62 ^ 0x10861040;
  int v72 = 3 * (v63 ^ 0x153) + *(_DWORD *)(STACK[0x210] + 52) + 11610085;
  int v73 = 3804331 * ((((2 * (v64 - 192)) | 0x4D2722E6) - (v64 - 192) + 1500278413) ^ 0xD846B485);
  int v74 = v73 + (LODWORD(STACK[0x39C]) ^ 0xEDF61F7E) + ((2 * LODWORD(STACK[0x39C])) & 0xDBEC3EFC) + 2146299790;
  *(_DWORD *)(v64 - 168) = v63 - v73 - 757;
  *(_DWORD *)(v64 - 164) = v74;
  *(_DWORD *)(v64 - 152) = (a40 & 0x7FFFFFFF ^ 0x7788F75F) - v73 + v71 + 2008495615;
  *(_DWORD *)(v64 - 192) = v72 ^ v73;
  *(void *)(v64 - 160) = &STACK[0x1860];
  *(void *)(v64 - 184) = v62;
  *(void *)(v64 - 176) = v70;
  uint64_t v75 = (*(uint64_t (**)(uint64_t))(v60 + 8 * (v63 + 1664)))(v64 - 192);
  int v76 = *(_DWORD *)(v64 - 188);
  LODWORD(STACK[0x4AC]) = v76;
  return (*(uint64_t (**)(uint64_t))(v60 + 8 * ((3757 * (v76 == -563355418)) ^ (v63 + 846))))(v75);
}

uint64_t sub_100093F04()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((2 * (*v0 - 42)) & 0xEDB53FFE) + ((*v0 - 42) ^ (v1 + 1994039084)) == 1994039295)
                                * ((v1 + 138) ^ 0x16C)) ^ (v1 + 2))))();
}

uint64_t sub_100093F6C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((STACK[0x240] & 0x3268A65B ^ 0x41D) * (v1 == v3)) ^ (v2 - 743))))();
}

void sub_100093FA4(uint64_t a1@<X1>, unsigned int a2@<W2>, uint64_t a3@<X4>, int a4@<W6>, char a5@<W7>, uint64_t a6@<X8>)
{
  uint64_t v11 = ((((v9 | a4) + 259) | 0x200) ^ a2) + v8;
  *(unsigned char *)(a1 + v11 + v10) = *(unsigned char *)(a3 + v11) ^ *(unsigned char *)(v6 + (v11 & 0xF)) ^ *(unsigned char *)((v11 & 0xF) + v7 + 1) ^ *(unsigned char *)(a6 + (v11 & 0xF)) ^ ((v11 & 0xF) * a5) ^ 0x77;
  JUMPOUT(0x100082954);
}

uint64_t sub_100093FF8@<X0>(int a1@<W6>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17)
{
  *(&a17 + a2 - 301084339) = 119;
  return (*(uint64_t (**)(void))(v18 + 8 * ((591 * ((unint64_t)(a2 - 301084338) < 0x38)) ^ (a1 + v17 + 444))))();
}

uint64_t sub_100094040(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v1 & 0x18) == 0) ^ (a1 + 1)) & 1) * (37 * (a1 ^ 0x336) - 804)) ^ a1)))();
}

void sub_100094088()
{
}

uint64_t sub_100094098()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((((v2 ^ 0x6FC) + 336) ^ 0xC56) * (v1 == 671088640)) ^ v2)))();
}

uint64_t sub_1000940CC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((54 * (v1 != ((v2 + 868) ^ 0x6A5))) ^ v2)))();
}

void sub_1000940F8(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (268847287 * (((a1 | 0xE34F1B4D) - (a1 & 0xE34F1B4D)) ^ 0x1CE50A65));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000941BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((((a9 == v10) ^ v9 ^ 0xE5) & 1) * ((6 * (v9 ^ 0x84)) ^ 0x3A8)) ^ v9)))();
}

uint64_t sub_10009420C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, int a18)
{
  int v21 = v20 + 470;
  uint64_t v22 = v18[4];
  uint64_t v27 = v18[5];
  uint64_t v23 = v18[1];
  int v24 = v20 - 508;
  a18 = v24
      - 1543737703 * ((-377324932 - (&a15 | 0xE9827A7C) + (&a15 | 0x167D8583)) ^ 0x6889D5FF);
  a17 = a12;
  a15 = v23;
  (*(void (**)(uint64_t *))(v19 + 8 * (v21 + 921)))(&a15);
  a18 = v24 - 1543737703 * (&a15 ^ 0x7EF4507C);
  a15 = v22;
  a17 = a12;
  (*(void (**)(uint64_t *))(v19 + 8 * (v21 ^ 0xF9B)))(&a15);
  a16 = v21 + 268847287 * ((&a15 & 0xEDF895C2 | ~(&a15 | 0xEDF895C2)) ^ 0xEDAD7B15) + 77;
  a17 = v27;
  a15 = a12;
  uint64_t v25 = (*(uint64_t (**)(uint64_t *))(v19 + 8 * (v21 ^ 0xF53)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a18 == -563355418) * ((v21 ^ 0x22A) - 702)) ^ v21)))(v25);
}

uint64_t sub_100094358()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v2 + 5) - 13) ^ v0) == v0)
                                * (((v3 - 538) | 5) ^ 0xA92)) ^ v3)))();
}

uint64_t sub_10009439C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((2714 * (v1 + 1 == v2 + 48)) ^ v0)))();
}

uint64_t sub_10009448C()
{
  int v3 = 235795823 * ((~((v2 - 152) | 0xAF2008FE) + ((v2 - 152) & 0xAF2008FE)) ^ 0xC472BE58);
  int v4 = (v0 - 2125639302) ^ v3;
  *(_DWORD *)(v2 - 152) = -235795823 * ((~((v2 - 152) | 0xAF2008FE) + ((v2 - 152) & 0xAF2008FE)) ^ 0xC472BE58);
  *(_DWORD *)(v2 - 120) = v0 - 2125639302 - v3 + 60;
  *(_DWORD *)(v2 - 116) = v4 ^ 0x33;
  *(_DWORD *)(v2 - 136) = v4;
  *(_DWORD *)(v2 - 132) = (v0 + 2021362464) ^ v3;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1104)))(v2 - 152);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * *(int *)(v2 - 148)))(v5);
}

uint64_t sub_100094598@<X0>(int a1@<W8>)
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v1 ^ 0xA95u)))(a1 ^ v2, 2089196818) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * (v1 ^ 0x718 ^ (v1 - 183) ^ 0x6D4)) ^ v1)))();
}

void sub_1000945F4()
{
  LODWORD(STACK[0x3B8]) = 1704253533;
  JUMPOUT(0x10008FED8);
}

uint64_t sub_10009460C(uint64_t a1, unsigned int a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v32 = v28 + 1;
  *(_DWORD *)(a26 + 4 * v32) = v26;
  int v33 = v32 + a4 + a3;
  BOOL v34 = v33 < a5;
  BOOL v35 = v33 > v29;
  if (v30 > a2 != v34) {
    BOOL v36 = v34;
  }
  else {
    BOOL v36 = v35;
  }
  return (*(uint64_t (**)(void))(v31 + 8 * ((60 * v36) ^ v27)))();
}

uint64_t sub_100094614(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2299
                                * (((v5 + v3 - 201) & (2 * (*(unsigned __int8 *)(a2 + 5) - 242)))
                                 + ((*(unsigned __int8 *)(a2 + 5) - 242) ^ v4) == v4)) ^ v3)))();
}

uint64_t sub_100094654(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  if (a13 < 0xCA171EDB != (a12 + 1940726764) < 0xCA171EDB) {
    BOOL v14 = (a12 + 1940726764) < 0xCA171EDB;
  }
  else {
    BOOL v14 = a12 + 1940726764 > a13;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((!v14 * (((a3 + 767) | 2) - 762)) ^ (a3 + 2153))))();
}

void sub_1000946CC()
{
}

uint64_t sub_1000946D8()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((*(void *)(v1 - 0x6BA7059072F2C1D3) == 0) ^ (29 * (v2 ^ 0x76))) & 1)
                                * ((214 * (v2 ^ 0x35F)) ^ 0x199)) ^ v2)))();
}

uint64_t sub_10009474C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((a11 - 1751760277 < (((a4 + 244) | 0x128) ^ 0x7FFFFA94u)) * ((2 * a4) ^ 0x11A)) ^ a4)))();
}

uint64_t sub_1000947A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  HIDWORD(a14) = v46 - 714728586;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v47 + 8 * (((4 * (((8 * (v46 ^ 0x46A) + 168) | 0x101) == 1313)) | (8 * (((8 * (v46 ^ 0x46A) + 168) | 0x101) == 1313))) ^ ((8 * (v46 ^ 0x46A) + 168) | 0x101))))(a1, v44 - 0x3BD3A467C7BE8E49, (unsigned __int16)(v45 - 11686 + ((8 * (v46 ^ 0x46A) + 168) | 0x101)), 1456, 1353, 1285, 1057, 215886268, a9, a10, &a44, (unint64_t)&a27 % 0x25 + 16, a13, a14, (v48 - 152) | 0xBD519F4144350A9FLL, v44 - 0x3BD3A467C7BE8E49, a17);
}

void sub_100094954(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) + 1178560073 * ((2 * (a1 & 0xDA2E353F) - a1 + 634505920) ^ 0xC2E4E8A8);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100094A00(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  *(unsigned char *)(v6 + (a4 - 941042785)) = *(unsigned char *)(v7 + (a4 - 941042785)) ^ 0x77;
  return (*(uint64_t (**)(void))(v8 + 8 * ((2188 * ((a5 ^ 0x308) + a4 - 928 == v5)) ^ a5)))();
}

uint64_t sub_100094A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((503 * (((v6 == a5) ^ (v5 + 59)) & 1)) ^ v5)))();
}

void sub_100094A78()
{
}

uint64_t sub_100094AF8(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((v4 == a4) ^ (a2 + 32)) & 1) * (a2 - 2099)) ^ a2)))();
}

void sub_100094B28()
{
  *(_DWORD *)(v1 - 120) = v0 + 14;
  JUMPOUT(0x100094C28);
}

void sub_100094CB0()
{
}

uint64_t sub_100094CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  if (a18 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8 * ((1148 * (a37 != 1491164578)) ^ 0x307)))(a10, 560893864);
  }
  if (a18 != 1) {
    JUMPOUT(0x100094E38);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37
                                                                                + 8
                                                                                * ((497 * (a37 == 1491164578)) ^ 0x2F6)))(a1, 560893864, 3734074650, 560893865, a10);
}

void sub_100094E74()
{
}

uint64_t sub_100094E7C(unsigned int a1, int a2, int a3)
{
  BOOL v12 = v9 > 0xD8A4DCDB;
  *(unsigned char *)(v11 + (a3 - 1515195389)) = *(unsigned char *)(v4 + (((_BYTE)a3 + 3) & 0xF)) ^ *(unsigned char *)(v3 + (a3 - 1515195389)) ^ *(unsigned char *)(v6 + (((_BYTE)a3 + 3) & 0xF)) ^ *(unsigned char *)(((a3 - 1515195389) & 0xFLL) + v5 + 1) ^ (((a3 + 3) & 0xF) * (115 * (v7 ^ 0xD8) + 75));
  if (v12 == a3 - 854911192 < v8) {
    BOOL v12 = a3 - 854911192 < a1;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((v12 * a2) ^ v7)))();
}

uint64_t sub_100094F1C()
{
  BOOL v4 = v1 + 1417278704 > (int)(((v0 + 2024072073) & 0x875B1FDF) + ((v0 + 716) ^ 0xA57291))
    || v1 + 1417278704 < SLODWORD(STACK[0x2C8]);
  return (*(uint64_t (**)(void))(v2 + 8 * ((1324 * v4) ^ v0)))();
}

uint64_t sub_100094F7C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  *(unsigned char *)(*v12 + (v11 + a6)) = *(unsigned char *)(*v12 + (v7 + 944 + a4 + v8));
  return (*(uint64_t (**)(void))(v10 + 8 * (((v6 == 989468002) * v9) ^ v7)))();
}

uint64_t sub_100094FD0(uint64_t result)
{
  uint64_t v1 = 235795823 * (result ^ 0x8B0BAFE94AD4959);
  uint64_t v2 = *(void *)(result + 24);
  unint64_t v3 = v2 + v1;
  uint64_t v4 = *(void *)(result + 8);
  BOOL v5 = v2 == v4;
  BOOL v6 = v3 > v4 + v1;
  if ((*(_DWORD *)result + v1)) {
    BOOL v7 = v6;
  }
  else {
    BOOL v7 = v5;
  }
  BOOL v8 = !v7;
  uint64_t v9 = 36;
  if (!v8) {
    uint64_t v9 = 16;
  }
  *(_DWORD *)(result + 4) = *(_DWORD *)(result + v9) ^ v1 ^ (*(_DWORD *)(result + 32) + v1);
  return result;
}

uint64_t sub_10009504C@<X0>(unsigned int a1@<W3>, int a2@<W5>, int a3@<W8>)
{
  BOOL v12 = a1 > v8;
  *(unsigned char *)(*v11 + (v3 + 1 + a2)) = 119;
  unsigned int v13 = v5 + v3 + 455;
  int v14 = v12 ^ (v13 < (v4 ^ (a3 - 66)));
  BOOL v15 = v13 < v7;
  if (!v14) {
    BOOL v12 = v15;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((v12 * v9) ^ v6)))();
}

void sub_1000950A8()
{
  uint64_t v0 = __chkstk_darwin();
  int v1 = *(_DWORD *)v0 + 1178560073 * (((v0 | 0x375468D4) - v0 + (v0 & 0xC8AB972B)) ^ 0xD0614ABC);
  __asm { BRAA            X13, X17 }
}

void sub_100095214()
{
}

uint64_t sub_100095224(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((472
                                * ((v7 & (2 * (*(unsigned __int8 *)(a2 + 1) - 146)))
                                 + ((*(unsigned __int8 *)(a2 + 1) - 146) ^ ((v5 ^ a4) + 206841471)) == v6)) ^ v5)))();
}

uint64_t sub_10009526C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  return (*(uint64_t (**)(void))(v30 + 8 * ((1858 * (v29 < (a29 ^ 0x605C7112u))) ^ (v31 + 1340331902))))();
}

void sub_1000952C0()
{
}

uint64_t sub_1000952F0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a1 + (v4 - 1887178671)) = *(unsigned char *)(a2 + (v4 - 1887178671))
                                                   - ((((v3 + 76) | 0xA3) + 55) & (2
                                                                                 * *(unsigned char *)(a2
                                                                                            + (v4 - 1887178671))))
                                                   + 119;
  return (*(uint64_t (**)(void))(v5 + 8 * ((2 * (v4 - 1 != v2)) | (32 * (v4 - 1 != v2)) | v3)))();
}

uint64_t sub_100095344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,int a21)
{
  unsigned int v29 = &a21 + 6 * ((a9 + 890402424) & 0x4AED85E7 ^ 0xCC5E9956) + 6 * v21;
  v29[2] = v27;
  v29[3] = v23;
  *((void *)v29 + 2) = v28;
  v29[6] = a18;
  a21 = v21 + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * ((3172 * (*(_DWORD *)(v24 + 48 * v22 + 32) + ((v26 + a9 - 1094) ^ 0x13416A9E) < 0x80000004)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_1000953E0@<X0>(int a1@<W1>, int a2@<W8>)
{
  *(unsigned char *)(v4 + v3) = *(unsigned char *)(v5 + (v2 + a1))
                      - ((2 * *(unsigned char *)(v5 + (v2 + a1))) & 0xEF)
                      + 119;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v3 == 63) ^ (v7 + a2 + 231))))();
}

uint64_t sub_100095428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((4094 * ((v8 | a7) == ((((v7 - 2002) | 0x112) + 1729) ^ v7 ^ 7))) ^ v7)))();
}

void sub_100095464()
{
}

uint64_t sub_100095480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  BOOL v31 = *(_DWORD *)(a28 + 48 * (int)(((3 * (v30 ^ 0x742) - 36967795) & 0xFF3FBEBB ^ 0x41D9E79E) + v28)) != 2100541156;
  return (*(uint64_t (**)(void))(v29 + 8 * ((v31 | (8 * v31)) ^ v30)))();
}

uint64_t sub_1000954F8(uint64_t a1, int a2)
{
  int v8 = (a2 - 241097575) & 0xE5EDB56;
  *(void *)(a1 - 7 + (v3 + v4 - v6 + 958)) = *(void *)(v2 - 7 + (v3 + v4 - v6 + 958));
  BOOL v9 = ((2 * (v8 ^ 0x8FF)) ^ 0x15A) + v6 != ((v8 ^ 0xFFFFF7AE) & v5);
  return (*(uint64_t (**)(void))(v7 + 8 * (((16 * v9) | (32 * v9)) ^ v8)))();
}

uint64_t sub_100095574()
{
  unsigned int v5 = *(unsigned __int8 *)(v3 + 1) + ((v2 + 16) ^ 0xFFFFFE17);
  return (*(uint64_t (**)(void))(v4 + 8 * ((873 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1000955B4()
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * (((((v3 - 589) | 0x816) ^ ((v3 ^ 0xB73) - 241)) * ((v1 & 0x18) == 0)) ^ v3)))((v0 - v2));
}

uint64_t sub_1000955F0(uint64_t a1)
{
  int v6 = *(unsigned __int8 *)(v2 + ((v1 + 1764017003) & 0x96DB3BEF ^ 0xA2C6920EB55CA094) + a1)
     - (*(unsigned __int8 *)(v3 + ((v1 + 1764017003) & 0x96DB3BEF ^ 0xA2C6920EB55CA094) + a1) ^ 0x77);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((154 * (((2 * v6) & 0xEDB53FFE) + ((v1 - v5) ^ 0x4F8454BD ^ v6) == 1994039295)) ^ v1)))();
}

uint64_t sub_100095688()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 938)))(16);
  uint64_t v3 = (uint64_t *)*(&off_10026C690 + v0 - 1428);
  uint64_t *v3 = v2;
  (*(void (**)(void))(v1 + 8 * (v0 ^ 0xC58)))();
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0xC56)))(8);
  uint64_t v5 = (uint64_t)*(&off_10026C690 + (v0 & 0x8E1DAB5));
  *(void *)(v5 - 4) = v4;
  *uint64_t v4 = 0xBDBDBDBDBDBDBDBDLL;
  uint64_t v6 = (uint64_t)*(&off_10026C690 + v0 - 1463);
  *(_DWORD *)(v6 + 4) = 0;
  *(_DWORD *)*(&off_10026C690 + (v0 & 0x23739231)) = 0;
  uint64_t v7 = (unsigned char *)*v3;
  int v8 = *(unsigned char **)(v5 - 4);
  v8[6] = 26;
  *uint64_t v7 = -77;
  void v8[4] = -34;
  BOOL v9 = (unsigned __int8 *)*(&off_10026C690 + v0 - 1416);
  *(v9 - 2) = 96;
  v9[5] = 79;
  *(unsigned char *)(v6 + 29) = 68;
  v9[10] = -105;
  void v7[4] = 73;
  unsigned __int8 *v9 = 62;
  *(unsigned char *)(v6 + 28) = 83;
  *(unsigned char *)*(&off_10026C690 + (int)(v0 & 0xC97AA05C)) = -113;
  v7[1] = 80;
  *(unsigned char *)*(&off_10026C690 + v0 - 1446) = 88;
  v9[9] = 0;
  *(unsigned char *)*(&off_10026C690 + (v0 & 0x745E8011)) = 1;
  _DWORD v7[2] = -44;
  *(unsigned char *)*(&off_10026C690 + (v0 & 0x61232861)) = 51;
  _DWORD v8[2] = 80;
  v7[6] = -11;
  *(unsigned char *)*(&off_10026C690 + v0 - 1509) = 25;
  *(unsigned char *)*(&off_10026C690 + (int)(v0 & 0xA97C9014)) = 39;
  v7[5] = -22;
  _DWORD v7[3] = -15;
  void v9[4] = 73;
  *(unsigned char *)(v6 + 14) = -52;
  v9[11] = -22;
  *(unsigned char *)*(&off_10026C690 + (v0 ^ 0x5AE)) = -109;
  v7[13] = 99;
  uint64_t v16 = *(&off_10026C690 + (v0 ^ 0x59D));
  unsigned char *v16 = 119;
  v8[7] = -80;
  unsigned char *v8 = -122;
  v7[8] = 34;
  v9[3] = -88;
  v7[11] = 54;
  *(unsigned char *)(v6 + 15) = 3;
  v8[5] = -5;
  v8[1] = 73;
  *(unsigned char *)(v6 + 16) = -36;
  *(unsigned char *)uint64_t v6 = 23;
  void v8[3] = 59;
  uint64_t v10 = (unsigned char *)*v3;
  v10[10] = 45;
  v10[15] = -87;
  *(v9 - 4) = 11;
  v9[7] = -93;
  *(unsigned char *)(v6 + 25) = -92;
  v9[1] = -10;
  v9[6] = 15;
  *(unsigned char *)(v6 + 27) = 52;
  *(v9 - 8) = -34;
  *(_WORD *)(v6 + 10) = -3774;
  *(unsigned char *)(v6 + 22) = -121;
  *(unsigned char *)(v6 + 20) = 77;
  *(unsigned char *)(v6 + 26) = 113;
  v10[9] = 31;
  v9[12] = 32;
  v9[2] = -33;
  *(unsigned char *)(v6 + 8) = -85;
  *(v9 - 3) = -10;
  *(v9 - 6) = 70;
  *(unsigned char *)(v6 + 2) = 34;
  v9[8] = 34;
  v10[12] = -86;
  *(v9 - 5) = -35;
  v10[7] = -90;
  v10[14] = -33;
  *(unsigned char *)(v6 + 21) = -105;
  *(unsigned char *)(v6 + 3) = -98;
  *(v9 - 1) = 15;
  *(unsigned char *)(v6 + 24) = -119;
  *(unsigned char *)(v6 + 30) = 58;
  *(unsigned char *)(v6 + 12) = 73;
  *(unsigned char *)(v6 + 1) = -15;
  *(v9 - 7) = 103;
  *(unsigned char *)(v6 + 19) = 120;
  *(unsigned char *)(v6 + 13) = 69;
  *(_WORD *)(v6 + 17) = -4168;
  *(unsigned char *)(v6 + 9) = -105;
  *(unsigned char *)(v6 + 23) = 79;
  int v11 = (unsigned char *)*v3;
  unint64_t v12 = *(unsigned __int8 *)(*v3 + 2) | ((unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 4) + 2) << 8);
  unsigned int v13 = *((unsigned __int8 *)*(&off_10026C690 + (v0 ^ 0x574)) + (((v9[9] ^ 0x2F) - 36) ^ 0x77) + 805);
  HIDWORD(v14) = ~(v13 >> 6);
  LODWORD(v14) = v13 << 26;
  return (*(uint64_t (**)(unint64_t))(v1 + 8 * (int)((v0 + 1239948772) & 0xB617DE67)))((((unint64_t)(*v9 ^ 0x2Fu) << 56) | ((unint64_t)v11[3] << 48) | ((unint64_t)*(unsigned __int8 *)(v6 + 28) << 40) | ((unint64_t)*v16 << 24)) ^ ((((unint64_t)v11[13] << 16) ^ (-65536 * v11[13]) ^ (v12 - (v12 & 0xFFFFFFFFFF00FFFFLL | ((unint64_t)v11[13] << 16)))) + v12) ^ ((unint64_t)((v14 >> 26) ^ 0x1Fu) << 32) ^ 0x7122F342C09E16D1);
}

void sub_100095F68(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10009602C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((1504 * (v6 + 1 == v7 + 60)) ^ a5)))();
}

uint64_t sub_10009610C(int a1, uint64_t a2, int a3)
{
  int v6 = v4 + v3;
  unsigned int v7 = v6 + (((a1 - 814) | 0x4A4) ^ 0xC0A91686);
  if (v7 <= 0x40) {
    unsigned int v7 = 64;
  }
  BOOL v8 = !__CFADD__(v6 + ((a1 + 1813690372) & 0x93E547EF ^ 0xC0A91101), a3 + v7);
  return (*(uint64_t (**)(void))(v5 + 8 * ((175 * v8) ^ a1)))();
}

uint64_t sub_10009618C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((237 * (v0 != ((v1 - 1155939851) & 0x44E63FF3) - 2082)) ^ v1)))();
}

uint64_t sub_1000961E4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                                           + 8 * (int)((((v5 + 1330660693) & 0xB0AFBD57 ^ 0x815) * (v4 == a4)) ^ v5)))((v5 - 1083));
}

void sub_100096224(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  *(unsigned char *)(a5 + ((301 * (a4 ^ 0x4B6)) ^ (a6 + 939)) + v7) = v6;
  JUMPOUT(0x100088990);
}

void sub_100096264()
{
}

uint64_t sub_10009626C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29)
{
  LODWORD(STACK[0x580]) = a29;
  return (*(uint64_t (**)(void))(v30 + 8 * ((46 * (STACK[0x390] != 0)) ^ (v29 + 480))))();
}

void sub_10009629C()
{
}

void sub_100096360()
{
}

void sub_100096368()
{
}

uint64_t sub_100096370@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + a1 + v2 + (v3 ^ v4) - 815) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((62 * ((unint64_t)(a2 + a1) > 0x37)) ^ v3)))();
}

uint64_t sub_1000963AC@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 2081));
  return v3(v1);
}

uint64_t sub_1000963F8(int a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v9 = v7 + v6 + a4;
  uint64_t v10 = a2 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = v4 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)((((v5 & 0xFFFFFFE0) != 32) * (((a1 + 1499508449) & 0xA69F4F9A) - 1932)) ^ (a1 - 1310))))();
}

uint64_t sub_100096460(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((206 * (a2 + 1 == v4 + 60)) ^ a4)))();
}

uint64_t sub_100096528(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  return sub_100085A30(a4, (uint64_t *)va);
}

uint64_t sub_100096544()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((56 * (v0 > (STACK[0x298] & 0xD24CB9DD ^ (LODWORD(STACK[0x2D4]) - 1187355574)))) ^ (LODWORD(STACK[0x2D4]) - 345))))();
}

uint64_t sub_100096594@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W4>, int a4@<W5>, uint64_t a5@<X8>)
{
  HIDWORD(v16) = a1 ^ v15;
  LODWORD(v16) = a1 ^ v10;
  int v17 = (a3 ^ v11)
      + (v16 >> 27)
      + (*(_DWORD *)(v14 + 4 * (a5 + v12)) ^ v9)
      + (((v6 ^ v5) + v11 - (((v6 ^ v5) << ((a2 ^ 0xCB) + 78)) & v7)) ^ a4);
  return (*(uint64_t (**)(void))(v8 + 8 * ((197 * (a5 + 1 == v13 + 64)) ^ a2)))(v17
                                                                                            - ((2 * v17 - 1798995028) & v7) + 581329819);
}

uint64_t sub_100096650()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((2250 * ((v2 ^ (v3 - 175) ^ (v0 - 28)) < (((v0 + 61) | 0x204) ^ 0x12Fu))) ^ v0)))();
}

uint64_t sub_1000966A0@<X0>(int a1@<W8>)
{
  int v7 = STACK[0x324];
  uint64_t v8 = (_DWORD *)STACK[0x2B8];
  unint64_t v9 = STACK[0x2B8] + 24 * v2;
  *(_DWORD *)(v9 + 8) = v4;
  *(_DWORD *)(v9 + 12) = v5;
  *(void *)(v9 + 16) = STACK[0x2B0];
  *(_DWORD *)(v9 + 24) = v7;
  _DWORD *v8 = ((((a1 - 1946217780) & 0x7400EFFF) - 259) ^ 0x22A) + v1;
  BOOL v11 = v3 - 664149735 > -2070584909 && v3 - 664149735 < SLODWORD(STACK[0x290]);
  return (*(uint64_t (**)(void))(v6 + 8 * (a1 ^ (1930 * v11))))();
}

void sub_100096728()
{
}

void sub_100096760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned char *a9)
{
  unsigned int v12 = v10 + 13076357 + (~(2 * v10 + 492743864) | 0xDBCF9DAF);
  int v13 = (v12 >> ((v11 + 93) & 0xBD ^ 0x1D)) ^ 0x12;
  *a9 = v13 - ((2 * v13) & 0xEF) + 119;
  a9[1] = (BYTE2(v12) ^ 0x18) - ((2 * (BYTE2(v12) ^ 0x18)) & 0xEF) + 119;
  a9[2] = (BYTE1(v12) ^ 0x31) - ((2 * (BYTE1(v12) ^ 0x31)) & 0xEF) + 119;
  a9[3] = (v10 - 123 + (~(2 * v10 - 72) | 0xAF)) ^ 0x5F;
  uint64_t v14 = v9 - ((2 * v9) & 0x3C1B6C83571295ECLL) + 0x1E0DB641AB894AF6;
  a9[4] = (HIBYTE(v14) ^ 0x1E) + (~(2 * (HIBYTE(v14) ^ 0x1E)) | 0x11) + 120;
  a9[5] = (BYTE6(v14) ^ 0xD) + (~(2 * (BYTE6(v14) ^ 0xD)) | 0x11) + 120;
  a9[6] = (BYTE5(v14) ^ 0xB6) - ((2 * (BYTE5(v14) ^ 0xB6)) & 0xEF) + 119;
  a9[7] = (BYTE4(v14) ^ 0x41) - ((2 * (BYTE4(v14) ^ 0x41)) & 0xEF) + 119;
  a9[8] = (((v9 - ((2 * v9) & 0x571295EC) - 1417065738) >> 24) ^ 0xAB)
        - ((2 * (((v9 - ((2 * v9) & 0x571295EC) - 1417065738) >> 24) ^ 0xAB)) & 0xEF)
        + 119;
  a9[9] = (BYTE2(v14) ^ 0x89) - ((2 * (BYTE2(v14) ^ 0x89)) & 0xEF) + 119;
  a9[10] = (BYTE1(v14) ^ 0x4A) - ((2 * (BYTE1(v14) ^ 0x4A)) & 0xEF) + 119;
  a9[11] = (v9 - ((2 * v9) & 0xEC) - 10) ^ 0x81;
  sub_10008DCF4();
}

void sub_100096928()
{
  *(_DWORD *)(v0 + 24) = *(_DWORD *)(v1 - 0x6BA7059072F2C1BBLL);
}

uint64_t sub_100096940()
{
  BOOL v7 = *v0 == 119 && LODWORD(STACK[0x578]) == ((v3 - 795) ^ 0xB80F9096) && v2 == v4 + 1;
  return (*(uint64_t (**)(void))(v1 + 8 * ((404 * v7) ^ (v3 - 152))))();
}

uint64_t sub_100096990()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v2 + 1340332720) ^ (25 * (v0 >= v3)))))();
}

uint64_t sub_1000969C0@<X0>(int a1@<W0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((15
                                * (((a2 == (((a1 ^ 0x38D) + 1006) ^ 0x41C)) ^ (13 * (a1 ^ 0x8D) + 1)) & 1)) ^ a1)))();
}

uint64_t sub_100096A0C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v3 - 469) | 0x652) - 1534) * (v1 != v0)) ^ v3)))();
}

uint64_t sub_100096A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t *a10, uint64_t a11, uint64_t a12, unint64_t *a13, unint64_t *a14, unint64_t *a15, unint64_t *a16)
{
  a15 = &STACK[0x5F548590D8AA63B5];
  a16 = a10;
  LODWORD(a13) = v16
               - 2078219279
               * ((((&a13 | 0xEC8CA36A) ^ 0xFFFFFFFE) - (~&a13 | 0x13735C95)) ^ 0xC989CAE1)
               - 231789020;
  a14 = &STACK[0x4B3FB627E137F342];
  (*(void (**)(unint64_t **))(v17 + 8 * (v16 ^ 0x96B)))(&a13);
  a13 = &STACK[0x5F548590D8AA63B9];
  a14 = a10;
  LODWORD(a15) = v16
               - 944348131 * (((&a13 | 0xDB8EA39F) - (&a13 & 0xDB8EA39F)) ^ 0x789707D1)
               + 257;
  (*(void (**)(unint64_t **))(v17 + 8 * (v16 + 2192)))(&a13);
  a13 = a10;
  LODWORD(a14) = v16
               - 241568881 * ((&a13 & 0xF6FDF46A | ~(&a13 | 0xF6FDF46A)) ^ 0xDF130FD7)
               + 423;
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v17 + 8 * (v16 ^ 0x967)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v17 + 8
                                                  * (((HIDWORD(a14) == -563355418) * ((v16 ^ 0x2AA) + 1183)) ^ v16)))(v18);
}

uint64_t sub_100096BE4(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((736
                                * ((*(_DWORD *)(v3 + v4 * (uint64_t)a1 + 40) & 8) == (((v1 ^ 0x40E) + 1184) ^ 0x7CE))) ^ ((v1 ^ 0x40E) - 716))))();
}

uint64_t sub_100096BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * ((((v7 ^ 0x68B) + 225 + 9 * (v7 ^ 0x68B) - 2179) * (LODWORD(STACK[0x54C]) != v9)) ^ v7)))(a1, a2, a3, a4, a5, a6, a7, 563395391);
}

uint64_t sub_100096C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,unsigned int a21,uint64_t a22,unint64_t *a23,int a24)
{
  unsigned int v27 = ((419254032 - (&a19 | 0x18FD4F10) + (&a19 | 0xE702B0EF)) ^ 0x15B14D38) * v24;
  a19 = v27 ^ 0x6BCE5709;
  a20 = (v26 - 2024873699) ^ v27;
  a22 = a14;
  a23 = &STACK[0x634ED76D4AB882BD];
  a21 = v27 ^ 0x9063F851;
  uint64_t v28 = (*(uint64_t (**)(int *))(v25 + 8 * (v26 + 1765)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((259 * (a24 == (v26 ^ 0x122) - 563356260)) ^ v26)))(v28);
}

uint64_t sub_100096D10@<X0>(int a1@<W8>)
{
  uint64_t v7 = v2 - 1;
  *(unsigned char *)(v4 + v7) = ((v1 - 13) ^ v3) * (v1 + 4);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 == 0) * v5) ^ a1)))();
}

uint64_t sub_100096D18()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((1684 * (v1 == ((4 * v2) ^ 0xFC4) - 563356310)) ^ (v2 + 78))))();
}

uint64_t sub_100096D54()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 ^ 0x20E) - 847) * (v0 != v1)) ^ v2)))();
}

void sub_100096D7C()
{
}

uint64_t sub_100096DF8@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(unsigned char *)(a1 + v5 + v3 + ((v4 + 1600819626) & 0xA0956FBF)) = *(unsigned char *)(v2
                                                                         + v5
                                                                         + v3
                                                                         + ((v4 + 1600819626) & 0xA0956FBF));
  return (*(uint64_t (**)(void))(v6 + 8 * ((1764 * (v5 - 1 == a2)) ^ v4)))();
}

uint64_t sub_100096E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v31 = v30 - 144;
  *(_DWORD *)(v30 - 120) = v25
                         - 98
                         + 69008221
                         * ((-789700510 - ((v30 - 144) | 0xD0EE2062) + ((v30 - 144) | 0x2F11DF9D)) ^ 0xFCB38D97);
  *(void *)(v30 - 112) = v28;
  *(void *)(v30 - 136) = a23;
  *(void *)(v30 - 128) = a23;
  *(void *)(v30 - 144) = a25;
  (*(void (**)(uint64_t))(v27 + 8 * (v25 + 915)))(v30 - 144);
  *(void *)(v30 - 112) = v28;
  *(_DWORD *)(v30 - 120) = v25
                         - 98
                         + 69008221 * ((~((v30 - 144) | 0xAA40A461) + ((v30 - 144) & 0xAA40A461)) ^ 0x861D0994);
  *(void *)(v30 - 144) = a25;
  *(void *)(v30 - 136) = a23;
  *(void *)(v30 - 128) = a23;
  (*(void (**)(uint64_t))(v27 + 8 * (v25 + 915)))(v30 - 144);
  *(_DWORD *)(v30 - 120) = v25
                         - 98
                         + 69008221
                         * (((((v30 - 144) | 0xC24BCBF8) ^ 0xFFFFFFFE) - (~(v30 - 144) | 0x3DB43407)) ^ 0xEE16660D);
  *(void *)(v30 - 144) = a25;
  *(void *)(v30 - 136) = a23;
  *(void *)(v30 - 112) = v28;
  *(void *)(v30 - 128) = a23;
  (*(void (**)(uint64_t))(v27 + 8 * (v25 ^ 0xCAD)))(v30 - 144);
  int v32 = 2078219279 * ((~(v31 | 0x7758E8BF) + (v31 & 0x7758E8BF)) ^ 0x525D8134);
  *(_DWORD *)(v30 - 128) = (v25 + 288) ^ v32;
  *(_DWORD *)(v30 - 140) = -1131453697 - v32 + v29 + 1;
  *(void *)(v30 - 136) = v26;
  (*(void (**)(uint64_t))(v27 + 8 * (v25 + 931)))(v30 - 144);
  BOOL v33 = *(_DWORD *)(v30 - 144) == (((3 * (v25 ^ 0x7C1) - 1292) | 0x286) ^ 0xFCA11F20);
  unsigned int v34 = 2078219279 * (((v31 | 0x996094FF) - v31 + (v31 & 0x669F6B00)) ^ 0x439A028B);
  *(_DWORD *)(v30 - 128) = (v25 + 288) ^ v34;
  *(void *)(v30 - 136) = v26;
  *(_DWORD *)(v30 - 140) = -1131453697 - v34 + v29;
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v25 + 931)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((1017 * v33) ^ v25)))(v35);
}

uint64_t sub_1000970C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  int v15 = (v13 ^ 0x8D90026E) + v12;
  BOOL v17 = v15 > 456112503 || v15 < a12 - 1691371144;
  return (*(uint64_t (**)(void))(v14 + 8 * ((79 * v17) ^ v13)))();
}

void sub_100097138()
{
}

void sub_100097204()
{
}

uint64_t sub_100097210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  unsigned int v34 = (v25 + 1051736902) & 0xC14FC7F1;
  int v35 = ((2 * ((v33 - 144) & 0x46CC6E78) - (v33 - 144) - 1187802749) ^ 0x209241A7) * v27;
  *(void *)(v33 - 136) = v30;
  *(void *)(v33 - 128) = v24;
  *(_DWORD *)(v33 - 144) = (v26 + 955413014 + v34) ^ v35;
  *(_DWORD *)(v33 - 140) = v35 + v25 + 602;
  (*(void (**)(uint64_t))(v29 + 8 * (v25 ^ 0xBE2u)))(v33 - 144);
  *(_DWORD *)(v33 - 144) = v34
                         - 1021
                         - 1224239923
                         * ((((v33 - 144) | 0x72DB4EC0) - (v33 - 144) + ((v33 - 144) & 0x8D24B138)) ^ 0x8068B317);
  *(void *)(v33 - 136) = a24;
  *(void *)(v33 - 128) = a23;
  uint64_t v38 = 8 * (int)(v34 ^ 0xC6D);
  (*(void (**)(uint64_t))(v29 + v38))(v33 - 144);
  *(void *)(v33 - 144) = v30;
  *(void *)(v33 - 136) = a24;
  *(_DWORD *)(v33 - 112) = v34
                         - 29
                         - 1543737703
                         * ((((v33 - 144) | 0x4EA87986) - (v33 - 144) + ((v33 - 144) & 0xB1578678)) ^ 0x305C29FA);
  *(void *)(v33 - 128) = v32;
  *(void *)(v33 - 120) = a23;
  (*(void (**)(uint64_t))(v29 + 8 * (int)(v34 ^ 0xCC3)))(v33 - 144);
  *(void *)(v33 - 128) = v28;
  *(void *)(v33 - 120) = a24;
  *(void *)(v33 - 104) = v32;
  *(void *)(v33 - 144) = a23;
  *(void *)(v33 - 136) = v32;
  *(_DWORD *)(v33 - 112) = v34 - 1047 - 1224239923 * ((v33 - 144) ^ 0xF2B3FDD7);
  (*(void (**)(uint64_t))(v29 + 8 * (int)(v34 ^ 0xD0C)))(v33 - 144);
  *(_DWORD *)(v33 - 144) = v34
                         - 1087
                         - 1178560073
                         * ((((v33 - 144) ^ 0xE0146109 | 0xF4B9EC4) + ((v33 - 144) ^ 0xF488E44 | 0xF0B4613B)) ^ 0x869CD24);
  *(void *)(v33 - 128) = a24;
  *(void *)(v33 - 120) = v32;
  *(void *)(v33 - 112) = a15;
  *(void *)(v33 - 104) = v32;
  *(void *)(v33 - 136) = a23;
  (*(void (**)(uint64_t))(v29 + 8 * (int)(v34 + 919)))(v33 - 144);
  *(_DWORD *)(v33 - 144) = v34 - 1021 - 1224239923 * ((v33 - 411936759 - 2 * ((v33 - 144) & 0xE7725899)) ^ 0x15C1A54E);
  *(void *)(v33 - 136) = a24;
  *(void *)(v33 - 128) = a19;
  (*(void (**)(uint64_t))(v29 + v38))(v33 - 144);
  *(_DWORD *)(v33 - 112) = v34
                         - 29
                         - 1543737703 * (((v33 - 144) & 0xED32F927 | ~((v33 - 144) | 0xED32F927)) ^ 0x6C3956A4);
  *(void *)(v33 - 144) = v30;
  *(void *)(v33 - 136) = a24;
  *(void *)(v33 - 128) = v31;
  *(void *)(v33 - 120) = a19;
  (*(void (**)(uint64_t))(v29 + 8 * (int)(v34 ^ 0xCC3)))(v33 - 144);
  *(_DWORD *)(v33 - 112) = v34
                         - 1047
                         - 1224239923
                         * (((((v33 - 144) | 0x2E18EB56) ^ 0xFFFFFFFE) - (~(v33 - 144) | 0xD1E714A9)) ^ 0x2354E97E);
  *(void *)(v33 - 144) = a19;
  *(void *)(v33 - 136) = v31;
  *(void *)(v33 - 128) = v28;
  *(void *)(v33 - 120) = a24;
  *(void *)(v33 - 104) = v31;
  (*(void (**)(uint64_t))(v29 + 8 * (int)(v34 + 780)))(v33 - 144);
  *(void *)(v33 - 136) = a19;
  *(void *)(v33 - 128) = a24;
  *(_DWORD *)(v33 - 144) = v34 - 1087 - 1178560073 * ((v33 - 435891113 - 2 * ((v33 - 144) & 0xE604D4E7)) ^ 0x131F68F);
  *(void *)(v33 - 112) = a17;
  *(void *)(v33 - 104) = v31;
  *(void *)(v33 - 120) = v31;
  (*(void (**)(uint64_t))(v29 + 8 * (int)(v34 ^ 0xC79)))(v33 - 144);
  *(_DWORD *)(v33 - 144) = (v34 - 426) ^ (268847287
                                        * ((((v33 - 144) | 0x44694F9C) - (v33 - 144) + ((v33 - 144) & 0xBB96B060)) ^ 0xBBC35EB4));
  *(void *)(v33 - 136) = v31;
  *(void *)(v33 - 128) = v32;
  (*(void (**)(uint64_t))(v29 + 8 * (int)(v34 + 873)))(v33 - 144);
  *(void *)(v33 - 136) = v31;
  *(_DWORD *)(v33 - 140) = v34
                         - 1224239923 * ((((2 * (v33 - 144)) | 0xFB28F40) - (v33 - 144) + 2015803488) ^ 0x756ABA77)
                         - 788;
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (int)(v34 + 834)))(v33 - 144);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * (int)(((*(_DWORD *)(v33 - 144) < 0x64FB564Eu)
                                                   * ((v34 ^ 0x5F7) + 1536 + 257 * (v34 ^ 0x5F7) + 488)) ^ v34)))(v36);
}

uint64_t sub_1000976C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, unint64_t *a20,unint64_t *a21,unint64_t *a22)
{
  a21 = &STACK[0x5F548590D8AA63F1];
  a22 = a15;
  a20 = &STACK[0x4B3FB627E137F36A];
  LODWORD(a19) = v22
               - 231789632
               - 2078219279 * (((&a19 | 0x4113E74D) + (~&a19 | 0xBEEC18B2)) ^ 0x9BE97138);
  (*(void (**)(unint64_t **))(v23 + 8 * (v22 + 1603)))(&a19);
  LODWORD(a19) = v22 - 231789632 - 2078219279 * (&a19 ^ 0xDAFA9674);
  a20 = &STACK[0x4B3FB627E137F34A];
  a21 = &STACK[0x5F548590D8AA6401];
  a22 = a15;
  (*(void (**)(unint64_t **))(v23 + 8 * (v22 + 1603)))(&a19);
  LODWORD(a21) = v22
               - 944348131 * ((((2 * &a19) | 0xA35E252C) - &a19 - 1370428054) ^ 0xF2B6B6D8)
               - 355;
  a19 = &STACK[0x5F548590D8AA63D1];
  a20 = a15;
  (*(void (**)(unint64_t **))(v23 + 8 * (v22 + 1580)))(&a19);
  LODWORD(a20) = v22
               - 241568881
               * (((&a19 | 0xF5D823CD) - &a19 + (&a19 & 0xA27DC30)) ^ 0x23C9278F)
               - 189;
  a19 = a15;
  uint64_t v24 = (*(uint64_t (**)(unint64_t **))(v23 + 8 * (v22 + 1591)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((3066 * (HIDWORD(a20) == v22 - 563356260)) ^ v22)))(v24);
}

uint64_t sub_1000978B0@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  return (*(uint64_t (**)(void))(v45 + 8 * ((((a45 | 0xE9) ^ 0xF5) * ((a1 & 1) == 0)) ^ (v46 - 479))))();
}

uint64_t sub_1000978E4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int8x16_t *a14)
{
  int8x16_t *v14 = veorq_s8(*a14, (int8x16_t)xmmword_10021E930);
  STACK[0x560] += 32;
  STACK[0x570] = a1;
  STACK[0x568] = a1;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16
                                                                                         + 8
                                                                                         * ((((v15 - 876309971) & 0x343B6FFF ^ 0x118)
                                                                                           * (v14 == (int8x16_t *)a1)) ^ v15)))(a1, a2, a3, a4, a5);
}

uint64_t sub_100097950@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  unsigned int v6 = v5[396] ^ ((*v5 & 0x7FFFFFFE | v5[623] & 0x80000000) >> 1);
  v5[623] = (v6 + ((a3 + 14) ^ (a1 + 1390) ^ (a3 - 1914887615) & 0x7222DB3E) - (a2 & (2 * v6))) ^ *(_DWORD *)(v3 + 4 * (*v5 & 1));
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((2 * (LODWORD(STACK[0x504]) < 0x270)) | (16 * (LODWORD(STACK[0x504]) < 0x270))) ^ a3)))();
}

uint64_t sub_1000979D4(uint64_t a1)
{
  unint64_t v3 = STACK[0x4E8];
  unint64_t v4 = LODWORD(STACK[0x39C]);
  STACK[0x308] = v4;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v2
                                                              + 8
                                                              * ((55
                                                                * (((v1 + 38) ^ (v4 == ((2 * v1) ^ 0xCE6) - 1096)) & 1)) ^ v1)))(a1, v3);
}

uint64_t sub_100097A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v40 = *(void *)(v37 + 24);
  *(int8x16_t *)(v39 - 112) = veorq_s8(*(int8x16_t *)*(void *)(v37 + 40), (int8x16_t)xmmword_10021E8E0);
  if (a9) {
    BOOL v41 = v40 == 0x5EC77446536A4B76;
  }
  else {
    BOOL v41 = 1;
  }
  int v42 = !v41;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * (int)((995 * v42) ^ a6)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

void sub_100097A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char *a60,int a61,unint64_t a62,uint64_t a63)
{
  a62 = (unint64_t)&STACK[0x504] % ((unint64_t)(v71 + 667) - 732) + 16;
  int v74 = (char *)&a9
      + a65
      + ((16 * ((&a9 - 0x2C2F364FA24C4B49) + (_BYTE)a65) + 16) & 0x20)
      - 0x2C2F364FA24C4B49;
  STACK[0x238] = (v73 - 192) | 0x9DE0EE514AE67703;
  a61 = v72 ^ 0xAB8;
  STACK[0x2B8] = 2062945554 - 69008221 * ((v73 - 192) ^ 0x529C46E3D3A2520ALL);
  STACK[0x2B0] = 1211735820
               - 69008221
               * ((((v73 - 192) | 0xB282A286CCFC2F34) - (v73 - 192) + ((v73 - 192) & 0x4D7D5D793303D0C8)) ^ 0xE01EE4651F5E7D3ELL);
  LODWORD(STACK[0x298]) = v72 + 766723273;
  LODWORD(STACK[0x290]) = v72 + 1407834828;
  a69 = 241568881
      * ((2 * ((v73 - 192) & 0x19A5DB9D008F16D8) - (v73 - 192) + 0x665A2462FF70E926) ^ 0x690FF0EB2961ED64)
      + 5119;
  a70 = 241568881
      * ((2 * ((v73 - 192) & 0x19A5DB9D008F16D8) - (v73 - 192) + 0x665A2462FF70E926) ^ 0x690FF0EB2961ED64);
  STACK[0x2C0] = STACK[0x490];
  STACK[0x2C8] = (unint64_t)v74;
  a60 = v74 + 16;
  *(int32x4_t *)&STACK[0x220] = vdupq_n_s32(0x7FFFFFFEu);
  a71 = vdupq_n_s32(0xC889F9DE);
  *(int32x4_t *)&STACK[0x200] = vdupq_n_s32(0x9113F3BC);
  JUMPOUT(0x100097C58);
}

uint64_t sub_100097CB0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((483 * (v3 < a3 + 2147481751)) ^ (a3 - 1680))))();
}

uint64_t sub_100097CF4@<X0>(int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>)
{
  uint64_t v9 = (a1 - 1141662586);
  *(unsigned char *)(a3 + v9) = *(unsigned char *)(v3 + v9) ^ (a2 - 57) ^ *(unsigned char *)(v7 + (v9 & 0xF)) ^ *(unsigned char *)((v9 & 0xF) + v5 + 1) ^ *(unsigned char *)((v9 & 0xF) + v6 + 2) ^ (-73 * (v9 & 0xF)) ^ 0x89;
  return (*(uint64_t (**)(void))(v8 + 8 * ((1631 * (a1 - 1 == v4)) ^ (a2 - 1828))))();
}

uint64_t sub_100097D84(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((1613 * (a2 + 8 == (a4 ^ 0x584) - 1190)) ^ a4)))();
}

uint64_t sub_100097DB8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((53 * (*v0 != 0)) ^ 0x452u)))();
}

uint64_t sub_100097E10()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 | (32 * (v0 + 1 != v3 + 48)))))();
}

uint64_t sub_100097EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, unint64_t *a15, unint64_t *a16, unint64_t *a17, unint64_t *a18)
{
  int v21 = v20 ^ 0x6D8;
  int v22 = 18 * (v20 ^ 0x46A);
  a17 = &STACK[0x5F548590D8AA63C5];
  a18 = a13;
  a16 = &STACK[0x4B3FB627E137F352];
  LODWORD(a15) = (v20 ^ 0x6D8)
               - 2078219279
               * (((&a15 | 0x90938D6A) - &a15 + (&a15 & 0x6F6C7290)) ^ 0x4A691B1E)
               - 231789493;
  (*(void (**)(unint64_t **))(v19 + 8 * (v20 ^ 0xDEA)))(&a15);
  int v23 = (v20 ^ 0x6D8) - 216;
  LODWORD(a17) = v23
               - 944348131
               * ((((&a15 | 0xA7B65146) ^ 0xFFFFFFFE) - (~&a15 | 0x5849AEB9)) ^ 0xFB500AF7);
  a15 = &STACK[0x5F548590D8AA63C5];
  a16 = a13;
  (*(void (**)(unint64_t **))(v19 + 8 * (v21 ^ 0xBC9)))(&a15);
  a15 = &STACK[0x5F548590D8AA63C9];
  a16 = a13;
  LODWORD(a17) = v23 - 944348131 * (&a15 ^ 0xA319A44E);
  (*(void (**)(unint64_t **))(v19 + 8 * (v21 + 1719)))(&a15);
  a15 = a13;
  LODWORD(a16) = v21
               - 241568881 * ((&a15 & 0x63445CEA | ~(&a15 | 0x63445CEA)) ^ 0x4AAAA757)
               - 50;
  uint64_t v24 = (*(uint64_t (**)(unint64_t **))(v19 + 8 * (v21 + 1730)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((1244 * (HIDWORD(a16) == (v22 ^ (v18 - 218)))) ^ v21)))(v24);
}

uint64_t sub_1000980B8(uint64_t a1)
{
  int v1 = 831981571 * ((((2 * a1) | 0xFDCFEF62) - a1 - 2129131441) ^ 0xE7462795);
  int v2 = *(_DWORD *)(a1 + 8) + v1;
  int v3 = *(_DWORD *)(a1 + 12) - v1;
  unsigned int v5 = v3 - 517764792;
  BOOL v4 = v3 - 517764792 < 0;
  LODWORD(v6) = 517764792 - v3;
  if (v4) {
    uint64_t v6 = v6;
  }
  else {
    uint64_t v6 = v5;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_10026C690 + v2 - 1457)
                              + 8 * ((908 * (v6 != ((2 * v6) & 0x45FC479E))) ^ v2)
                              - 4))();
}

void sub_100098164()
{
  v2[31] = 0x68D6DD4519E0F96ALL;
  v2[32] = v2 + 33;
  v2[65] = 0x68D6DD4519E0F96ALL;
  v2[66] = v2 + 67;
  STACK[0x260] = (unint64_t)v2 + 0x5E8E72AB319E4491;
  v2[99] = 0x68D6DD4519E0F96ALL;
  v2[100] = v2 + 101;
  STACK[0x288] = (unint64_t)v2 + 0x5E8E72AB319E45A1;
  v2[133] = 0x68D6DD4519E0F96ALL;
  v2[134] = v2 + 135;
  STACK[0x298] = (unint64_t)v2 + 0x5E8E72AB319E46B1;
  v2[167] = 0x68D6DD4519E0F96ALL;
  v2[168] = v2 + 169;
  STACK[0x2A0] = (unint64_t)v2 + 0x5E8E72AB319E47C1;
  unint64_t v7 = STACK[0x2F8] + 4;
  int v8 = v0;
  int v9 = v5 << ((v0 + 65) ^ 0x2F);
  LODWORD(STACK[0x2C0]) = v9;
  LODWORD(STACK[0x240]) = v1;
  LODWORD(STACK[0x250]) = v8;
  LODWORD(STACK[0x2C8]) = v8 + 1337;
  int v10 = 460628867 * ((v6 - 956244809 - 2 * ((v6 - 192) & 0xC700DD77)) ^ 0x8B965F0A);
  *(_DWORD *)(v6 - 192) = v8 + 1337 + v10;
  *(_DWORD *)(v6 - 184) = ((v5 ^ 0xE59C9F7C) - 446774552 + (v9 & 0x77EEFF34 ^ 0x34C6C104)) ^ v10;
  *(void *)(v6 - 176) = v7;
  *(void *)(v6 - 168) = (char *)v2 + 0x5E8E72AB319E4381;
  uint64_t v11 = 8 * (v8 + 2170);
  STACK[0x2A8] = v11;
  (*(void (**)(uint64_t))(v3 + v11))(v6 - 192);
  uint64_t v12 = v7 + v4;
  int v13 = 460628867 * ((2 * ((v6 - 192) & 0x5BD9D9B8) - (v6 - 192) + 606479941) ^ 0x68B0A438);
  unsigned int v14 = ((v5 ^ 0xFBB53E78) - 76061724 + (STACK[0x2C0] & 0x4BBDBD3C ^ 0x895810C)) ^ v13;
  *(_DWORD *)(v6 - 192) = LODWORD(STACK[0x2C8]) + v13;
  *(_DWORD *)(v6 - 184) = v14;
  unint64_t v15 = STACK[0x260];
  *(void *)(v6 - 176) = v12;
  *(void *)(v6 - 168) = v15;
  uint64_t v16 = 8 * (LODWORD(STACK[0x250]) ^ 0x98A);
  STACK[0x260] = v16;
  (*(void (**)(uint64_t))(v3 + v16))(v6 - 192);
  uint64_t v17 = v12 + v4;
  LODWORD(v12) = STACK[0x2C0];
  int v18 = 460628867 * ((-931669370 - ((v6 - 192) | 0xC877DA86) + ((v6 - 192) | 0x37882579)) ^ 0x7B1EA704);
  unsigned int v19 = ((v5 ^ 0xA93C2A20) - 1442940996 + (STACK[0x2C0] & 0xEEAF958C ^ 0xAC87818C)) ^ v18;
  int v20 = LODWORD(STACK[0x2C8]) + v18;
  *(_DWORD *)(v6 - 184) = v19;
  *(_DWORD *)(v6 - 192) = v20;
  unint64_t v21 = STACK[0x288];
  *(void *)(v6 - 176) = v17;
  *(void *)(v6 - 168) = v21;
  (*(void (**)(uint64_t))(v3 + STACK[0x260]))(v6 - 192);
  uint64_t v22 = v17 + v4;
  int v23 = (v5 ^ 0x6F341F44) + 1878409952 + (v12 & 0x62BFFF44 ^ 0x2097C144);
  int v24 = 460628867 * ((v6 + 1630206759 - 2 * ((v6 - 192) & 0x612AFBE7)) ^ 0x2DBC799A);
  LODWORD(v12) = STACK[0x2C8];
  *(_DWORD *)(v6 - 192) = LODWORD(STACK[0x2C8]) + v24;
  *(_DWORD *)(v6 - 184) = v23 ^ v24;
  unint64_t v25 = STACK[0x298];
  *(void *)(v6 - 176) = v22;
  *(void *)(v6 - 168) = v25;
  (*(void (**)(uint64_t))(v3 + STACK[0x2A8]))(v6 - 192);
  int v26 = 460628867 * ((((v6 - 192) | 0x37D75E9E) - (v6 - 192) + ((v6 - 192) & 0xC828A160)) ^ 0x7B41DCE3);
  unsigned int v27 = ((v5 ^ 0xB19C2F40) - 1319210276 + (STACK[0x2C0] & 0xDFEF9F4C ^ 0x9CC7814C)) ^ v26;
  *(_DWORD *)(v6 - 192) = v12 + v26;
  *(_DWORD *)(v6 - 184) = v27;
  unint64_t v28 = STACK[0x2A0];
  *(void *)(v6 - 176) = v22 + v4;
  *(void *)(v6 - 168) = v28;
  (*(void (**)(uint64_t))(v3 + STACK[0x2A8]))(v6 - 192);
  JUMPOUT(0x10007D334);
}

uint64_t sub_1000985AC@<X0>(unsigned int a1@<W8>)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 + (unint64_t)((v1 - 12582913) & 0xFDCBAAAB) + ((v1 - 172511882) & 0xA4853F9) - 0x10C3EAAA1;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v1 + 288) | (2 * (v4 - v3 + 255000199 < 8)))))();
}

uint64_t sub_100098630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, unint64_t *a15, unint64_t *a16, unsigned int a17)
{
  a17 = v19 + 303 - 944348131 * ((&a15 & 0xD828319E | ~(&a15 | 0xD828319E)) ^ 0x84CE6A2F);
  a15 = &STACK[0x5F548590D8AA63E1];
  a16 = a13;
  (*(void (**)(unint64_t **))(v17 + 8 * (v19 + 2238)))(&a15);
  a17 = v19 + 303 - 944348131 * ((&a15 & 0x7C2082A7 | ~(&a15 | 0x7C2082A7)) ^ 0x20C6D916);
  a15 = &STACK[0x5F548590D8AA63C9];
  a16 = a13;
  (*(void (**)(unint64_t **))(v17 + 8 * (v19 + 2238)))(&a15);
  LODWORD(a16) = v19
               - (((&a15 | 0x247E0372) - &a15 + (&a15 & 0xDB81FC88)) ^ 0xF26F0730)
               * v18
               + 469;
  a15 = a13;
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v17 + 8 * (v19 ^ 0x939)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((HIDWORD(a16) == ((v19 + 2012) ^ 0x838) - 563355590) * (v19 + 1395)) ^ v19)))(v20);
}

void sub_1000987A0()
{
}

uint64_t sub_1000987A8(_DWORD *a1)
{
  unsigned int v1 = 268847287
     * ((2 * ((a1 ^ 0x2D90AAAC) & 0xA0689A7) - (a1 ^ 0x2D90AAAC) + 1979283032) ^ 0xA7C3CDDC);
  unsigned int v2 = a1[4] - v1;
  return (*(uint64_t (**)(void))((char *)*(&off_10026C690 + (int)(v2 ^ 0x42C))
                              + 8
                              * (int)((((*a1 ^ v1 ^ 0xDE6BE0E6) - 1 < 0x63)
                                     * ((v2 ^ 0x40E) + 530 + 19 * (v2 ^ 0x40E) - 1030)) ^ v2)
                              - 4))();
}

void sub_10009885C()
{
}

uint64_t sub_100098864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 112) = ((v16 ^ 0x3B3) - 329) ^ (69008221
                                                  * ((((v17 - 136) | 0x33020D3F) - ((v17 - 136) & 0x33020D3F)) ^ 0xE0A05F35));
  *(void *)(v17 - 120) = a14;
  *(void *)(v17 - 136) = a12;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * ((v16 ^ 0x3B3) + 952)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((v14 + *(_DWORD *)(v17 - 128) + 1643 < (v16 ^ 0x3B3u) - 153216983)
                                              * (((v16 ^ 0x3B3) + 204) ^ 0xAC1)) ^ v16 ^ 0x3B3)))(v18);
}

void sub_100098870(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 3804331 * (((a1 | 0x51A664) - (a1 & 0x51A664)) ^ 0x7E848392);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100098950(void *a1, int a2, uint64_t a3, int a4, unsigned int a5, uint64_t a6, unsigned int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  unint64_t v35 = (*(_DWORD *)(a24 + 4 * (v27 + 1 + v29)) ^ v24)
      + HIDWORD(v28)
      + a5 * (unint64_t)((a4 + a8) & v30 ^ (v24 + 1321) ^ *(_DWORD *)(*a1 + 4 * (v27 + 1 + v29)));
  *(_DWORD *)(a24 + 4 * (v27 + v29)) = v35 + v24 - (v26 & (2 * v35));
  if (v25 > a7 != v27 + v31 < v32) {
    BOOL v36 = v25 > a7;
  }
  else {
    BOOL v36 = v27 + v31 < a2;
  }
  return (*(uint64_t (**)(void))(v33 + 8 * ((!v36 * v34) ^ a4)))();
}

uint64_t sub_1000989E0()
{
  return sub_100098A1C(3615489095);
}

uint64_t sub_100098A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t))(v27 + 8 * ((1980 * (((2 * LODWORD(STACK[0x2D0])) & 0x76 ^ 0x54) + (STACK[0x2D0] & 0x3F ^ (a1 + 782)) + 679477321 < 0xFFFFFFC0)) ^ ((int)a2 + 965))))(a1, 4294965367, a2, a3, a4, 679477382, a5, a6, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           *(void *)(v27 + 8 * a7),
           *(void *)(v28 + 16),
           a27);
}

void DLHL()
{
  uint64_t v0 = (uint64_t)*(&off_10026C690
                + (byte_100218ADC[(byte_100214830[(-113
                                                                                                 * ((qword_100283A78 + dword_100283B80) ^ 0xEA))] ^ 0x62)
                                                               - 12] ^ (-113
                                                                      * ((qword_100283A78 + dword_100283B80) ^ 0xEA)))
                + 35);
  uint64_t v1 = *(void *)(v0 - 4);
  unsigned int v2 = *(&off_10026C690
       + (byte_1002188D0[byte_100214630[(-113 * (v1 ^ qword_100283A78 ^ 0xEA))] ^ 0x83] ^ (-113 * (v1 ^ qword_100283A78 ^ 0xEA)))
       - 173);
  unint64_t v3 = (unint64_t)&v5[*v2 ^ v1];
  *(void *)(v0 - 4) = 1932141199 * v3 - 0x5BC8EB821F80EA16;
  *unsigned int v2 = 1932141199 * (v3 ^ 0xA437147DE07F15EALL);
  v6[1] = 1178560073
        * (((v6 | 0xE965F012) - v6 + (v6 & 0x169A0FE8)) ^ 0xE50D27A)
        - 504207030;
  LOBYTE(v2) = -113 * (*(_DWORD *)(v0 - 4) ^ 0xEA ^ *(_DWORD *)v2);
  unint64_t v4 = (char *)*(&off_10026C690
               + ((-113 * (dword_100283B80 ^ 0xEA ^ qword_100283A78)) ^ byte_1002188D0[byte_100214630[(-113 * (dword_100283B80 ^ 0xEA ^ qword_100283A78))] ^ 0x83])
               - 175)
     - 4;
  (*(void (**)(_DWORD *))&v4[8
                                      * (v2 ^ byte_1002188D0[byte_100214630[v2] ^ 0x20])
                                      + 17448])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100098D40@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(void *)(*(void *)(v3 + 8 * (v2 ^ 0x455)) - 4) == 0) * (a1 - 967)) ^ v2)))();
}

uint64_t sub_100098D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = a7 ^ v7;
  unint64_t v14 = a1 ^ v8 ^ 0xFD5430A5C0BF2832;
  unint64_t v15 = (a7 ^ v7 ^ v11) & (v7 ^ 0x82F80E5FE1DFD4F4);
  *((void *)&v16 + 1) = v8 ^ 0x2824614DCALL;
  *(void *)&long long v16 = v8 ^ 0xB64F2FC000000000;
  unint64_t v12 = a3 ^ ((a7 ^ 0xC0B55FEBDEB43286) + v10 - (v9 & (2 * (a7 ^ 0xC0B55FEBDEB43286))));
  unint64_t v17 = v12 ^ (__ROR8__((v16 >> 38) ^ 0x6AE47E7A0BD06A70, 26) ^ 0xBE563E546E0617DLL) & v14 ^ v11 ^ (v12 ^ 0xC1A33A862C00719DLL) & (v8 ^ 0xB64F2FE824614DCALL) ^ v13;
  *((void *)&v16 + 1) = ~(v15 ^ v14);
  *(void *)&long long v16 = v15 ^ v14 ^ 0xC02B2878112B07C2;
  return sub_100099180(v15 ^ v14 ^ __ROR8__(v15 ^ v14, 6) ^ 0xBE09779B31F1BD0DLL ^ (v16 >> 1), a2, v17 ^ (v17 >> 19) ^ (v17 >> 28) ^ (v17 << 36) ^ (v17 << 45) ^ 0x38BCB963FC4EDD68);
}

uint64_t sub_100099180(uint64_t a1, int a2)
{
  BOOL v6 = v2 < v5;
  unsigned int v7 = v5 + a2 + 1;
  int v8 = v6 ^ (v7 < v5);
  BOOL v9 = v7 < v2;
  if (!v8) {
    BOOL v6 = v9;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((((193 * (v3 ^ 0x5BC)) ^ (v3 - 948)) * v6) ^ v3)))();
}

uint64_t sub_1000991D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19
                                                                                         + 8
                                                                                         * ((1116
                                                                                           * (*(_DWORD *)(a19 - 0x6BA7059072F2C1BBLL) == (((v20 - 982) | 0x2D8) ^ 0xDE6BE1E0 ^ (v20 + 1210365984) & 0xB7DB47DF))) ^ (v20 - 1557))))(a1, a2, a3, a4, a5, a6);
}

void sub_100099254()
{
  int v5 = 3804331 * ((v4 - 1608240163 - 2 * ((v4 - 136) & 0xA0243465)) ^ 0xDEF11193);
  *(void *)(v4 - 136) = v1;
  *(_DWORD *)(v4 - 128) = v5 + v2 + 573;
  *(_DWORD *)(v4 - 124) = v3 - v5 + ((v2 - 1563) | 0x58E) - 1725660165;
  (*(void (**)(uint64_t))(v0 + 8 * (v2 ^ 0xFA0)))(v4 - 136);
  JUMPOUT(0x1000992D8);
}

uint64_t sub_100099388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((*(_DWORD *)(v6 + 48 * (v9 + a6)) == 431333036)
                                     * (((v7 - 976) | 0x200) + (v7 ^ 0xFFFFFA60))) ^ v7)))();
}

uint64_t sub_1000993D4@<X0>(uint64_t a1@<X1>, int a2@<W7>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28)
{
  *(&a28 + a3 + a1) = 119;
  return (*(uint64_t (**)(void))(v29 + 8 * ((1458 * ((unint64_t)(a3 + 1 + a1) < 0x38)) ^ (a2 + v28 + 482))))();
}

uint64_t sub_100099414@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a1 - 1036858269) & 0x3DCD3325) + 1689) * (v1 == v2)) ^ a1)))();
}

void sub_100099454()
{
}

uint64_t sub_100099474()
{
  return sub_100085A0C();
}

uint64_t sub_1000994F0()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((595
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 3) - 134)))
                                 + ((*(unsigned __int8 *)(v3 + 3) - 134) ^ v2) == v0)) ^ v4)))();
}

void sub_100099524()
{
}

uint64_t sub_10009962C(uint64_t a1)
{
  int v1 = 831981571 * ((a1 & 0x847A176C | ~(a1 | 0x847A176C)) ^ 0xE22438B7);
  int v2 = *(_DWORD *)(a1 + 4) - v1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v4 = (*(_DWORD *)a1 ^ v1) - 899246191;
  unsigned int v5 = v4
     + (*(_DWORD *)(v3 - 0xB999BAB1C51203FLL) ^ 0x6CAA79AE)
     - ((2 * (v4 + (*(_DWORD *)(v3 - 0xB999BAB1C51203FLL) ^ 0x6CAA79AE))) & 0xD954F35C)
     + 1823111598;
  *(_DWORD *)(v3 - 0xB999BAB1C51203FLL) = v5;
  return (*(uint64_t (**)(void))((char *)*(&off_10026C690 + (v2 ^ 0x4EA))
                              + 8 * ((830 * ((v5 ^ 0x6CAA79AE) < v4)) ^ v2)
                              - 4))();
}

uint64_t sub_1000996F4(uint64_t a1)
{
  int v2 = 831981571 * ((a1 + 752367241 - 2 * (a1 & 0x2CD83689)) ^ 0xB579E6AD);
  int v3 = *(_DWORD *)a1 + v2;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  int v8 = *(_DWORD *)(a1 + 44) - v2;
  unsigned int v9 = 1224239923
     * (((&v11 | 0xF2B632B2) - &v11 + (&v11 & 0xD49CD48)) ^ 0x5CF65);
  int v17 = v3 + v9 - 1695026406;
  uint64_t v11 = v7;
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  uint64_t v13 = v6;
  unsigned int v12 = (v8 ^ 0xFC72F6E9) - v9 + 1331093351 + ((2 * v8) & 0xF1FFF9FE ^ 0x11A102C);
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_10026C690 + (v3 ^ 0x650810C1))
                                                + 8 * (v3 ^ 0x6508197F)
                                                - 4))(&v11);
  *(_DWORD *)(a1 + 4) = v16;
  return result;
}

uint64_t sub_100099868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  BOOL v22 = v19 - 1978913763 < (a19 + 754530569);
  if ((a19 + 754530569) < 0x928E1167 != v19 - 1978913763 < (v20 ^ 0x58Bu) - 1836183244) {
    BOOL v22 = (a19 + 754530569) < 0x928E1167;
  }
  return (*(uint64_t (**)(void))(v21 + 8 * ((112 * v22) ^ v20)))();
}

uint64_t sub_1000998DC@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v8 + v4)) = *(unsigned char *)(v3 + (v8 + v4));
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v6 ^ (v8 - 1 == v2)) & 1) * v7) ^ v5)))(0);
}

void sub_100099914(uint64_t a1)
{
  int v1 = 268847287 * ((a1 - 2 * (a1 & 0x4542390B) + 1161967883) ^ 0xBAE82823);
  if (*(void *)(a1 + 24)) {
    BOOL v2 = (*(_DWORD *)(a1 + 4) ^ v1) == 1313839093;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = !v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000999D0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((107
                                * (((LODWORD(STACK[0x3B8]) == 1704253533) ^ (-105 * ((v0 - 113) ^ 0x35)
                                                                                            + 53)) & 1)) ^ (v0 + 911))))();
}

uint64_t sub_100099A38@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)(a3 - 7 + (v7 + v5 - a2)) = *(void *)(v4 - 7 + (v7 + v5 - a2));
  return (*(uint64_t (**)(void))(v3 + 8 * ((327 * ((a1 ^ 0x31) + a2 - 1132 == (v6 & 0xFFFFFFF8))) ^ a1)))();
}

void sub_100099A88(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(void *)(v19 - 104) = a5;
  *(void *)(v19 - 128) = a16;
  *(void *)(v19 - 120) = a15;
  *(_DWORD *)(v19 - 112) = a1 - ((((2 * (v19 - 144)) | 0x8BCC4A8C) - (v19 - 144) - 1172710726) ^ 0xB755D891) * v18 + 243;
  *(void *)(v19 - 144) = a18;
  *(void *)(v19 - 136) = a16;
  JUMPOUT(0x10006F4D8);
}

uint64_t sub_100099AEC(double a1)
{
  *(double *)(v6 + (v2 ^ v3)) = a1;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 0) * v4) ^ v1)))();
}

void sub_100099B18(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_100099B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, char a12, int a13, unint64_t *a14, uint64_t a15)
{
  char v22 = *(unsigned char *)(v15 + 56) - v20;
  unsigned int v23 = 268847287 * ((((2 * &a10) | 0x96A7D3F6) - &a10 + 883693061) ^ 0x34F9F8D3);
  a14 = &STACK[0x73801E9372C50DB3];
  a15 = v19;
  a12 = (v22 ^ 0x4E)
      - -73 * ((((2 * &a10) | 0xF6) - &a10 + 5) ^ 0xD3)
      + ((2 * v22) & 0xE7 ^ 0x62)
      + 95;
  a10 = v23 + v18 + 1059;
  a11 = (v21 - 121524570) ^ v23;
  uint64_t v24 = (*(uint64_t (**)(int *))(v17 + 8 * (v18 ^ 0xBA7)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * (((a13 == v16) * (v18 + 1203)) ^ v18)))(v24);
}

uint64_t sub_100099C40(uint64_t a1, uint64_t a2)
{
  int v8 = *(unsigned __int8 *)(v2 + (v5 + v4 + 2));
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3
                                                             + 8
                                                             * ((28 * (((v7 + 1394) ^ 0xE8FBFB17) + v6 != 683407057)) ^ v7)))(a1, a2, (v8 ^ 0x75BFF97F) - 271261986 + ((v8 << (v7 - 77)) & 0xFEu));
}

uint64_t sub_100099CC4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 48) - 0x634ED76D4AB8828DLL) = a1;
  return sub_100099CE4();
}

void sub_100099CE4()
{
  *(_DWORD *)(v0 + 24) = v1;
}

uint64_t sub_100099D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((455 * (v7 + 1 == v8 + 20)) ^ a6)))();
}

uint64_t sub_100099DFC@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  uint64_t v4 = a2;
  unint64_t v5 = ((2 * v2) ^ 0x4EEu ^ (unint64_t)(a1 - 371)) + a2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((107 * (v5 - v4 + 970169018 < 8)) ^ v2)))();
}

uint64_t sub_100099E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  return sub_100099ED0(49, a14, 1505721939, 88, a5, &STACK[0x290], 45, 1689, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_100099ED0(uint64_t a1, uint64_t a2, unsigned int a3, int a4)
{
  BOOL v7 = v4 + ((2 * LODWORD(STACK[0x2D4])) & 0x7A ^ a4) + (STACK[0x2D4] & 0x3F ^ a3) + 776 < 0xFFFFFFC0;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((v7 | (2 * v7)) ^ (v6 + 1143))))(1094675968);
}

uint64_t sub_100099FD4()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((16 * (v1 - 555991477 < (v2 ^ 0xFFFFFD2A))) | (32
                                                                               * (v1 - 555991477 < (v2 ^ 0xFFFFFD2A)))) ^ (v2 + 767))))();
}

void sub_10009A014()
{
}

uint64_t sub_10009A024@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + (v5 + v4)) = *(unsigned char *)(v2 + (v5 + v4));
  return (*(uint64_t (**)(void))(v6 + 8 * ((3432 * (v5 - 1 == ((a1 + 1421) ^ (v3 + 163)))) ^ (a1 + 876))))();
}

uint64_t sub_10009A064(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((52 * (a3 + v8 + (a7 ^ 0x5FAu) - 1073733649 > 7)) ^ a7)))();
}

uint64_t sub_10009A0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  *(unsigned char *)(v11 + (v15 + v12)) = *(unsigned char *)(a9 + (v15 + v12)) ^ 0x77;
  return (*(uint64_t (**)(void))(v16 + 8 * (((v15 + 1 + v12 >= (v13 ^ a11)) * v14) ^ v17)))();
}

void sub_10009A100()
{
}

uint64_t sub_10009A198(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  return (*(uint64_t (**)(void))(v35
                              + 8
                              * ((((unint64_t)(&a33
                                                    + ~a19
                                                    + v33
                                                    + (((a1 + 244) | 0x241) ^ (v34 + 974))) > 0xF)
                                * (((a1 + 183) | 0x20) ^ 0x142)) ^ a1)))();
}

uint64_t sub_10009A1F0()
{
  int v3 = v1 - ((2 * v1 + 886460230) & 0x797EA294) - 685082387;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (v2 ^ (49
                                     * (((v3 << ((-10 * (v2 ^ 0xD8)) ^ 0xD9)) & 0xDFEDEBEA ^ ((v2 ^ 0x462) + 1500290754))
                                      + (v3 ^ 0xD349A4BF)
                                      + 362806208 == 93778357)))))();
}

uint64_t sub_10009A29C@<X0>(void *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,uint64_t a33,char a34,uint64_t a35,char a36)
{
  BOOL v41 = &a36 + v36;
  uint64_t v62 = &a34 + v36;
  int v61 = &a20 + v36;
  uint64_t v60 = &a26 + v36;
  uint64_t v58 = &a30 + v36;
  int v57 = &a24 + v36;
  uint64_t v56 = &a32 + v36;
  int v42 = &a28 + v36;
  int v43 = v37 ^ 0x692;
  uint64_t v66 = a1[4];
  uint64_t v44 = a1[1];
  uint64_t v45 = *(void *)(a1[2] - 0x5693A2FF918C2418);
  uint64_t v46 = a1[2];
  *(void *)(v40 - 104) = a2;
  *(_DWORD *)(v40 - 112) = (v37 ^ 0x692)
                         - 799
                         - 1224239923 * ((((v40 - 144) | 0x4AC3EA30) - ((v40 - 144) & 0x4AC3EA30)) ^ 0xB87017E7);
  *(void *)(v40 - 128) = v45;
  *(void *)(v40 - 120) = v46;
  uint64_t v47 = v46;
  uint64_t v64 = v46;
  int v48 = ((v37 ^ 0x692) - 1995132186) & 0x76EB4DFD;
  *(void *)(v40 - 144) = v44;
  *(void *)(v40 - 136) = &a36 + v36;
  int v49 = ((v37 ^ 0x692) - 2102394254) & 0x7D4FFAFF;
  uint64_t v63 = 8 * ((v37 ^ 0x692) + 1028);
  (*(void (**)(uint64_t))(v39 + v63))(v40 - 144);
  *(_DWORD *)(v40 - 120) = v43
                         + 69008221
                         * ((((v40 - 144) | 0xADA53259) - (v40 - 144) + ((v40 - 144) & 0x525ACDA0)) ^ 0x7E076053)
                         + 114;
  *(void *)(v40 - 112) = v47;
  *(void *)(v40 - 144) = v44;
  *(void *)(v40 - 136) = v41;
  *(void *)(v40 - 128) = v42;
  int v50 = v43;
  int v65 = v43;
  (*(void (**)(uint64_t))(v39 + 8 * (v43 ^ 0xD99)))(v40 - 144);
  *(void *)(v40 - 128) = v41;
  *(void *)(v40 - 120) = v47;
  *(void *)(v40 - 104) = v42;
  *(void *)(v40 - 144) = v44;
  *(void *)(v40 - 136) = v62;
  LODWORD(v41) = v43 - 799;
  int v51 = v43 - 799 - 1224239923 * ((v40 - 144) ^ 0xF2B3FDD7);
  *(_DWORD *)(v40 - 112) = v51;
  uint64_t v52 = 8 * (v50 ^ 0xC04);
  (*(void (**)(uint64_t))(v39 + v52))(v40 - 144);
  *(_DWORD *)(v40 - 112) = v51;
  *(void *)(v40 - 104) = v42;
  *(void *)(v40 - 128) = v62;
  *(void *)(v40 - 120) = v64;
  *(void *)(v40 - 144) = v44;
  *(void *)(v40 - 136) = v61;
  (*(void (**)(uint64_t))(v39 + v52))(v40 - 144);
  *(void *)(v40 - 104) = v42;
  *(_DWORD *)(v40 - 112) = v41
                         - 1224239923
                         * (((((v40 - 144) | 0xBB10DC) ^ 0xFFFFFFFE) - (~(v40 - 144) | 0xFF44EF23)) ^ 0xDF712F4);
  *(void *)(v40 - 144) = v44;
  *(void *)(v40 - 136) = v60;
  *(void *)(v40 - 128) = v61;
  *(void *)(v40 - 120) = v64;
  (*(void (**)(uint64_t))(v39 + v63))(v40 - 144);
  *(void *)(v40 - 144) = v44;
  *(void *)(v40 - 136) = v58;
  *(_DWORD *)(v40 - 112) = v41
                         - 1224239923 * ((((v40 - 144) | 0xF29ABA3C) - ((v40 - 144) & 0xF29ABA3C)) ^ 0x2947EB);
  *(void *)(v40 - 128) = v60;
  *(void *)(v40 - 120) = v64;
  *(void *)(v40 - 104) = v42;
  (*(void (**)(uint64_t))(v39 + v63))(v40 - 144);
  *(_DWORD *)(v40 - 112) = v41
                         - 1224239923 * (((v40 - 144) & 0xF279EF04 | ~((v40 - 144) | 0xF279EF04)) ^ 0xFF35ED2C);
  *(void *)(v40 - 128) = v58;
  *(void *)(v40 - 120) = v64;
  *(void *)(v40 - 144) = v44;
  *(void *)(v40 - 136) = v57;
  *(void *)(v40 - 104) = v42;
  (*(void (**)(uint64_t))(v39 + v63))(v40 - 144);
  *(_DWORD *)(v40 - 112) = v41
                         - 1224239923 * (((v40 - 144) & 0x3B67870F | ~((v40 - 144) | 0x3B67870F)) ^ 0x362B8527);
  *(void *)(v40 - 128) = v57;
  *(void *)(v40 - 120) = v64;
  *(void *)(v40 - 144) = v44;
  *(void *)(v40 - 136) = v56;
  *(void *)(v40 - 104) = v42;
  (*(void (**)(uint64_t))(v39 + v63))(v40 - 144);
  int v59 = 2 * (v40 - 144);
  *(_DWORD *)(v40 - 112) = v41 - 1224239923 * (((v59 | 0x9B7A3224) - (v40 - 144) + 843245294) ^ 0x3F0EE4C5);
  *(void *)(v40 - 104) = v42;
  *(void *)(v40 - 144) = v44;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 128) = v56;
  *(void *)(v40 - 120) = v64;
  (*(void (**)(uint64_t))(v39 + v63))(v40 - 144);
  uint64_t v53 = *(void *)(v64 - 0x5693A2FF918C2420);
  *(void *)(v40 - 128) = v38;
  *(void *)(v40 - 144) = v53;
  *(_DWORD *)(v40 - 136) = v65 + 831981571 * ((v40 + 1572311972 - 2 * ((v40 - 144) & 0x5DB79434)) ^ 0xC4164410) + 400;
  (*(void (**)(uint64_t))(v39 + 8 * (v65 + 1133)))(v40 - 144);
  *(_DWORD *)(v40 - 128) = (v65 - 1076) ^ (944348131 * (((v59 | 0x7083DFB6) - (v40 - 144) - 943845339) ^ 0x9B584B95));
  *(void *)(v40 - 136) = v66;
  uint64_t v54 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (v65 ^ 0xD5B)))(v40 - 144);
  return (*(uint64_t (**)(uint64_t))(v39
                                            + 8
                                            * ((((*(_DWORD *)(v40 - 144) - 1131453695) < 0x7FFFFFFF)
                                              * ((v48 - 885) ^ v49)) ^ v65)))(v54);
}

void sub_10009A7D0()
{
}

uint64_t sub_10009A7DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)((((3 * (v5 ^ 0x96A)) ^ (v5 + 1269071721) & 0xB45B7BEF ^ 0x1A5) * (v4 == a4)) ^ v5)))();
}

uint64_t sub_10009A828@<X0>(int a1@<W8>)
{
  int v4 = v1 + a1;
  if (v4 >= 0) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = -v4;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((53 * (((v5 > 0x82) ^ (v2 + 79)) & 1)) ^ v2)))();
}

void sub_10009A85C()
{
  *int v1 = v0;
  sub_100082408();
}

uint64_t sub_10009A864@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((16 * (*(_DWORD *)(a1 + 1424) != 278074005)) | (32
                                                                                * (*(_DWORD *)(a1 + 1424) != 278074005))) ^ v1)))();
}

uint64_t sub_10009A890(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 32) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_10009A8A8@<X0>(uint64_t a1@<X2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  unsigned int v34 = *(_DWORD *)(&a17 + ((v32 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v32 + a2 + 1)) = ((v34 >> (v30 + 20)) ^ 0x43)
                                                - ((2 * ((v34 >> (v30 + 20)) ^ 0x43)) & 0xEF)
                                                + 119;
  *(unsigned char *)(a1 + (v32 + a2)) = (HIBYTE(v34) ^ 0x58) - ((2 * (HIBYTE(v34) ^ 0x58)) & 0xEF) + 119;
  *(unsigned char *)(a1 + (v32 + a2 + 2)) = (BYTE1(v34) ^ 0xA1) - ((2 * (BYTE1(v34) ^ 0xA1)) & 0xEF) + 119;
  *(unsigned char *)(a1 + (v32 + a2 + 3)) = v34 ^ 0xB2;
  BOOL v35 = v32 - 2132022152 < (a29 + 1448629391);
  if (v32 - 2132022152 < v29 != a29 + 1448629391 < v29) {
    BOOL v35 = a29 + 1448629391 < v29;
  }
  return (*(uint64_t (**)(void))(v33 + 8 * ((v35 * v31) ^ v30)))();
}

uint64_t sub_10009A990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,int a47)
{
  if (a23 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47
  }
                                                                                  + 8
                                                                                  * ((30
                                                                                    * (a47 == ((a6 + 1187462368) & 0xBC2D1F7F)
                                                                                            + 1491162775)) ^ (a8 + a6 + 1757))))(a1, a2, a3, 1704253533, a15);
  if (a23 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47
  }
                                                                         + 8
                                                                         * (((a47 == 1491164578) * (a8 + a6 + 71)) ^ (a8 + a6 + 241))))(a15, a2, a3, 1704253533);
  uint64_t v49 = 13 * ((a6 + 61) ^ 0xFD0BAAAB);
  uint64_t v50 = ((unint64_t)&a29 ^ 0x337FF55CFFADEDFFLL)
      + ((2 * (void)&a29) & 0x66FFEAB9FF5BDBF0)
      - 0x1185000C4A4E6FELL
      + v49;
  a46 = ((13 * ((a6 + 61) ^ 0xAB) + 49 + v50) ^ 0xBA) * (v50 - 87);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * (int)v49))(a15, a2, a3, 1704253533);
}

uint64_t sub_10009AB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  *(void *)(v33 - 144) = v32;
  *(void *)(v33 - 136) = v29;
  *(_DWORD *)(v33 - 128) = (v31 + 500) ^ (3804331
                                        * ((2 * ((v33 - 144) & 0x24362F0) - (v33 - 144) + 2109512971) ^ 0x369B8FD));
  (*(void (**)(uint64_t))(v30 + 8 * (v31 + 929)))(v33 - 144);
  *(void *)(v33 - 104) = v32;
  *(void *)(v33 - 128) = a29;
  *(void *)(v33 - 120) = a24;
  *(_DWORD *)(v33 - 112) = v31
                         - 1068
                         - 1224239923
                         * ((((v33 - 144) ^ 0xCA7DE41E) & 0xF0BA43E2 | ~((v33 - 144) ^ 0xCA7DE41E | 0xF0BA43E2)) ^ 0x378BA5D4);
  *(void *)(v33 - 144) = v29;
  *(void *)(v33 - 136) = v32;
  (*(void (**)(uint64_t))(v30 + 8 * (v31 + 759)))(v33 - 144);
  *(_DWORD *)(v33 - 112) = v31
                         - 1068
                         - 1224239923 * ((((v33 - 144) | 0x4AD5FD1B) - ((v33 - 144) & 0x4AD5FD1B)) ^ 0xB86600CC);
  *(void *)(v33 - 104) = a18;
  *(void *)(v33 - 144) = v29;
  *(void *)(v33 - 136) = v32;
  *(void *)(v33 - 128) = v32;
  *(void *)(v33 - 120) = a24;
  (*(void (**)(uint64_t))(v30 + 8 * (v31 + 759)))(v33 - 144);
  *(_DWORD *)(v33 - 144) = v31
                         - 235795823 * (((v33 - 144) & 0x46F1697D | ~((v33 - 144) | 0x46F1697D)) ^ 0x2DA3DFDB)
                         + 426521475;
  *(void *)(v33 - 136) = a23;
  *(void *)(v33 - 128) = v32;
  (*(void (**)(uint64_t))(v30 + 8 * (v31 + 919)))(v33 - 144);
  *(_DWORD *)(v33 - 128) = (v31 + 500) ^ (3804331
                                        * ((1507516239 - ((v33 - 144) | 0x59DADF4F) + ((v33 - 144) | 0xA62520B0)) ^ 0xD8F00546));
  *(void *)(v33 - 144) = v32;
  *(void *)(v33 - 136) = a25;
  (*(void (**)(uint64_t))(v30 + 8 * (v31 ^ 0xFA1)))(v33 - 144);
  *(void *)(v33 - 144) = v32;
  *(_DWORD *)(v33 - 136) = v31
                         + 831981571 * (((v33 - 144) & 0xA0A8D7DE | ~((v33 - 144) | 0xA0A8D7DE)) ^ 0xC6F6F805)
                         + 131;
  *(void *)(v33 - 128) = a25;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v30 + 8 * (v31 ^ 0xF60)))(v33 - 144);
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * (((2 * (v31 - 1061) - 957) * (a22 == 0)) | (v31 - 310))))(v34);
}

void sub_10009AB9C(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(_DWORD *)(v19 - 112) = a1
                         - ((516638053 - ((v19 - 144) | 0x1ECB4565) + ((v19 - 144) | 0xE134BA9A)) ^ 0x1387474D) * v18
                         + 243;
  *(void *)(v19 - 144) = a18;
  *(void *)(v19 - 136) = a16;
  *(void *)(v19 - 128) = a16;
  *(void *)(v19 - 120) = a15;
  *(void *)(v19 - 104) = a4;
  JUMPOUT(0x100099AE4);
}

void zxcm2Qme0x(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10009AC90(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((472
                                * ((*(unsigned char *)(v7 + (a4 + v5 + ((22 * (v4 ^ 0x47)) ^ 0x663) - 1357) * (uint64_t)a1 + 40) & 8) == 0)) ^ v4)))();
}

uint64_t sub_10009ACE0()
{
  BOOL v4 = *(void *)(v1 + 32) != 0x209B06B4820BA795 && *(_OWORD *)v1 != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (((v0 ^ 0x27A) + 762) ^ 0x23C)) ^ v0)))();
}

uint64_t sub_10009AD38@<X0>(int a1@<W8>, uint64_t a2, ...)
{
  va_start(va, a2);
  BOOL v5 = (*(uint64_t (**)(void, char *, void, uint64_t))(v3 + 8 * (v4 ^ 0xF69)))(**(unsigned int **)(v2 + 8 * (v4 ^ 0x6DE)), va, (((a1 - 384874119) << ((v4 - 115) ^ 0xA1 ^ ((v4 - 95) | 0x8C))) & 0xDCFF6000)+ ((a1 - 384874119) & 0xFFFFF000 ^ 0xEE7FBFF5)+ 293617675, 1) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((58 * v5) ^ v4)))();
}

uint64_t sub_10009ADDC@<X0>(unsigned int a1@<W4>, uint64_t a2@<X8>, uint8x8_t a3@<D0>)
{
  a3.i32[0] = *(_DWORD *)(a2 + a1 + 1);
  return sub_10009AE08(39 * (v3 ^ 0x449u), 0, a2 - 3, 289, COERCE_DOUBLE(vmovn_s16((int16x8_t)vmovl_u8(a3))));
}

uint64_t sub_10009AE08(int a1, int a2, uint64_t a3, int a4, float a5)
{
  *(float *)(a3 + (v7 + v5 - a2)) = a5;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a2 + a1 - 659 == v8) * a4) | v6)))();
}

uint64_t sub_10009AE38@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v2 - 280387059) = *(unsigned char *)(v4 + v2 - 280387059)
                                  - ((2 * *(unsigned char *)(v4 + v2 - 280387059)) & 0xEF)
                                  + 119;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1587 * (v2 - 1 == ((v1 - 320) ^ v3))) ^ v1)))();
}

uint64_t sub_10009AE88(uint64_t a1, uint64_t a2, int a3, uint64_t a4, char a5, uint64_t a6)
{
  *(unsigned char *)(a6 + (v6 + a3)) = ((v7 + a5) & v9)
                                           + *(unsigned char *)(v8 + v10 + a1)
                                           - ((2 * *(unsigned char *)(v8 + v10 + a1)) & 0xEF)
                                           + 91;
  return (*(uint64_t (**)(void))(v11 + 8 * ((252 * ((a3 + v6 + 1) > 0x3F)) ^ v7)))();
}

uint64_t sub_10009AEE8@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2
                                                     + 8
                                                     * ((((a2 - 970169018) < 0x38)
                                                       * (((v3 - 560893824) | 0x114) - 300)) ^ (v3 - 560892646))))(a1, -970169018);
}

uint64_t sub_10009AF3C@<X0>(int a1@<W8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 8 * (a1 + 1791)))(*v4);
  _DWORD *v3 = 0;
  *(_DWORD *)uint64_t v1 = 0;
  *(void *)(v1 + 344) = 0;
  *(void *)(v1 + 352) = 0;
  *(_DWORD *)(v1 + 360) = 56245771;
  *(_DWORD *)(v1 + 56) = 1837280493;
  return result;
}

uint64_t sub_10009AF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a13 = &STACK[0x55D5CC6D86BC0F27];
  a14 = (831981571 * ((2 * (&a13 & 0x49672DD0) - &a13 - 1231498705) ^ 0x2F39020B)) ^ 0x8F;
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 18816))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((a15 == v15) | ((a15 == v15) << 6) | v17)))(v18);
}

void sub_10009B01C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) + 1224239923 * (a1 ^ 0xF2B3FDD7);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_10009B118(uint64_t a1, unsigned int a2)
{
  int v3 = (*(uint64_t (**)(void, uint64_t))(v2 + 19632))(a2, 1252601147) == 0;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((4 * v3) | (v3 << 6) | 0x98u)))(4294925268);
}

uint64_t sub_10009B15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24)
{
  return (*(uint64_t (**)(void))(v25
                              + 8
                              * (((((a24 == -405001186) ^ (((v24 - 42) ^ 3) + 45)) & 1)
                                * (149 * ((v24 - 42) ^ 0x103) - 1130)) ^ (v24 - 42))))();
}

uint64_t sub_10009B1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22
                                                              + 8
                                                              * ((217 * (v21 == (((a21 - 2111) | 0x29A) ^ 0x284))) ^ a21)))(a1, a2, -970169018);
}

uint64_t sub_10009B210@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v4 = a2 & 0x21BC951F;
  int v5 = 37 * (a2 & 0x21BC951F ^ 0x40B);
  int v6 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (a2 & 0x21BC951F ^ 0xD8Bu));
  LODWORD(STACK[0x2C8]) = v3;
  int v7 = *(uint64_t (**)(void))(v2 + 8 * (((v6(a1, 4182676990) != 0) * (v5 - 755)) ^ v4));
  return v7();
}

uint64_t sub_10009B27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  (*(void (**)(uint64_t, uint64_t))(v26 + 8 * (v25 ^ (v25 + 2186))))(a24, 2965982036);
  uint64_t v28 = (*(uint64_t (**)(void))(v26 + 8 * (v25 - 1340329273)))();
  *uint64_t v27 = v28;
  v27[1] = 1812433253 * (v28 ^ (v28 >> 30)) + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * ((v25 - 1340330092) ^ 0x5B)))(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_10009B304(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v12 = v11 - 0x7419917862B0D7EBLL + (v10 ^ 0xE4E2B2A1);
  *(_DWORD *)(v7 + 4 * v9) = v12 + v10 - ((v12 << (((a3 ^ 0x93) - 76) ^ 0xC6)) & 0xC9C56542);
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((54
                                * ((HIDWORD(v12) ^ 0xFC799BFF67B3D7FBLL)
                                 + ((v12 >> 31) & 0xCF67AFF6)
                                 + 0x779FF578FAFCFFF0 != a7)) ^ a3)))();
}

uint64_t sub_10009B310@<X0>(int a1@<W8>)
{
  *(_DWORD *)(v3 + 4 * (v1 - 1503900612)) = 1503900612
                                                          - v1
                                                          + ((1566083941
                                                            * (*(_DWORD *)(v3 + 4 * (v1 - 1503900613)) ^ (*(_DWORD *)(v3 + 4 * (v1 - 1503900613)) >> 30))) ^ *(_DWORD *)(v3 + 4 * (v1 - 1503900612)));
  uint64_t v5 = 69008221 * ((v4 - 192) ^ 0x529C46E3D3A2520ALL);
  *(_DWORD *)(v4 - 176) = ((a1 + 1437244142) ^ 7) - v5;
  *(void *)(v4 - 168) = 3107611710 - v5;
  *(void *)(v4 - 184) = (v1 + 1603711099) + v5;
  *(_DWORD *)(v4 - 160) = ((a1 + 1437244142) ^ 0x72) + v5;
  *(_DWORD *)(v4 - 156) = a1 + 1437244142 - v5;
  *(_DWORD *)(v4 - 152) = v5 + a1 + 2104631576;
  *(_DWORD *)(v4 - 188) = v5 | 1;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 1573)))(v4 - 192);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v4 - 192)))(v6);
}

uint64_t sub_10009B410@<X0>(int a1@<W4>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((((a3 - 301084339) < 0x38) * (v4 - a1 + 107)) ^ (a2 + v4 + 372))))();
}

void sub_10009B448()
{
  STACK[0x260] = (unint64_t)&STACK[0x1870];
  JUMPOUT(0x100088F78);
}

uint64_t sub_10009B464()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((407 * (v1 ^ 0x722)) ^ 0x320) * (v0 == v2 - 1353457354)) ^ v1)))();
}

uint64_t sub_10009B4A4()
{
  int v6 = (v0 - 538454643) & 0x6FFBFEBF;
  *int v4 = v4[623];
  unint64_t v7 = 241568881 * ((~((v5 - 144) | 0xE1C96A0F1E85860) + ((v5 - 144) & 0xE1C96A0F1E85860)) ^ 0xFEB6BDD6D806A3DDLL);
  *(_DWORD *)(v5 - 104) = v7;
  *(_DWORD *)(v5 - 100) = (v6 + 1202852222) ^ v7;
  *(_DWORD *)(v5 - 136) = v7 + v6 + 1452949797;
  *(_DWORD *)(v5 - 144) = (v6 + 1202852327) ^ v7;
  *(_DWORD *)(v5 - 140) = (v6 + 1202852357) ^ v7;
  *(void *)(v5 - 128) = v7 + 3268185100u;
  *(void *)(v5 - 112) = (v3 + 1412258150) + v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v6 ^ (v1 + 2419))))(v5 - 144);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v5 - 120)))(v8);
}

void sub_10009B5B8()
{
}

uint64_t sub_10009B5C0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((v3 - 231) | a3) + 323) * (v4 == 2)) ^ v3)))();
}

uint64_t sub_10009B5E8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  BOOL v37 = v32 == a2 || a32 - v35 != (v33 ^ 0xD2266726 ^ (293 * (v33 ^ 0x1F2)));
  return (*(uint64_t (**)(void))(v34 + 8 * ((1013 * v37) ^ v33)))();
}

uint64_t sub_10009B63C@<X0>(int a1@<W0>, unsigned int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, int a8@<W8>)
{
  BOOL v13 = a3 < a2;
  char v14 = *(unsigned char *)(a6 + (a1 + v8 + 57));
  *(unsigned char *)(a5 + (a7 + v11 + a8)) = v14 - ((2 * v14) & 0xEF) + 119;
  unsigned int v15 = v8 + 1 + v10;
  int v16 = v13 ^ (v15 < a2);
  BOOL v17 = v15 < a3;
  if (!v16) {
    BOOL v13 = v17;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v13 * a4) ^ v9)))();
}

uint64_t sub_10009B6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((v23 + 264) ^ (448 * ((a22 & 0x20000000) == 0)))))(((a22 & 0x20000000) == 0) << 9, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_10009B6DC()
{
  return 4294925278;
}

uint64_t sub_10009B6E4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(unsigned char *)(*(void *)(v6 + 96) + 1568) = 0;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((3905
                                * (*(_DWORD *)(v6 + 72) == (v4 ^ 0x60D ^ (a4 - 211))
                                                         - 1318567943
                                                         + (((v4 ^ 0x60D) - 84482772) & 0x5F1F5FB7))) ^ v4 ^ 0x60D)))();
}

uint64_t sub_10009B74C@<X0>(int a1@<W1>, int a2@<W6>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (a1 + v7)) = *(unsigned char *)(v3 + (a1 + v7));
  return (*(uint64_t (**)(void))(v6 + 8 * (((a1 - 1 == a2) * v5) ^ (v4 + 53))))();
}

void sub_10009B780()
{
}

void sub_10009B78C()
{
}

uint64_t sub_10009B798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47)
{
  int v52 = *(_DWORD *)(STACK[0x210] + 52);
  int v53 = STACK[0x500];
  LODWORD(STACK[0x2C8]) = 2 * a47;
  int v54 = 1224239923 * ((((v51 - 192) | 0xAFEE53DD) - ((v51 - 192) & 0xAFEE53DD)) ^ 0x5D5DAE0A);
  *(void *)(v51 - 184) = v50;
  *(_DWORD *)(v51 - 176) = (v52 - 530131245) ^ v54;
  *(_DWORD *)(v51 - 172) = v54 + v49 - 354;
  *(_DWORD *)(v51 - 148) = (((2 * a47) & 0xDFF37FEE ^ 0x148250CC)
                          + 1430191280
                          + (a47 ^ 0x75BA94B7 ^ ((v49 ^ 0x566) - 416))) ^ v54;
  *(void *)(v51 - 168) = &STACK[0x5B0];
  *(void *)(v51 - 160) = v47;
  *(_DWORD *)(v51 - 192) = v54 + (v53 ^ 0xFBFF3AFB) + ((2 * v53) & 0xF7FE75F6) + 1601161079;
  uint64_t v55 = (*(uint64_t (**)(uint64_t))(v48 + 8 * (v49 ^ 0x8DA)))(v51 - 192);
  int v56 = *(_DWORD *)(v51 - 152);
  LODWORD(STACK[0x4AC]) = v56;
  return (*(uint64_t (**)(uint64_t))(v48 + 8 * ((2545 * (v56 == -563355418)) ^ v49)))(v55);
}

uint64_t sub_10009B8E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1310
                                * ((unint64_t)*(&off_10026C690 + v1 - 362) - a1 - 4 < (unint64_t)((2 * v1) ^ 0x1CAu)
                                                                                           - 680)) ^ v1)))();
}

uint64_t sub_10009B940()
{
  int v3 = 235795823 * ((((v2 - 192) | 0x18B47B94) - (v2 - 192) + ((v2 - 192) & 0xE74B8468)) ^ 0x8C1932CD);
  *(void *)(v2 - 192) = STACK[0x430];
  *(_DWORD *)(v2 - 184) = v3 ^ 0x78F2562C;
  *(_DWORD *)(v2 - 180) = v3 + v1 - 1882357529;
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v0 + 8 * ((int)v1 + 2324)))(v2 - 192);
  STACK[0x328] = *(void *)(v0 + 8 * v1);
  return sub_1000ABB34(v4, v5, 1062661589, 44);
}

void sub_10009B9D8()
{
}

uint64_t sub_10009B9E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v9 = (v3 + v6);
  int v10 = *(unsigned __int8 *)(v1 + v9) ^ v5;
  int v11 = ((*(unsigned __int8 *)(v1 + (v9 + 2)) ^ v5) << 16) | ((*(unsigned __int8 *)(v1
                                                                                                + (v9 + 3)) ^ 0x77777777) << 24) | ((*(unsigned __int8 *)(v1 + (v9 + 1)) ^ v5) << (((v2 + 41) | 0xE) ^ 0x26)) | v10;
  *(_DWORD *)(a1 + v9) = v11 + v8 - 2 * (v11 & 0x5E6BE0F6 ^ v10 & 0x10);
  return (*(uint64_t (**)(void))(v7 + 8 * ((467 * ((v3 & 0xFFFFFFC0) != v4 - 4)) ^ v2)))();
}

uint64_t sub_10009BA94(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v11 = a3 - 32 + (v7 ^ (a6 + 2157));
  long long v12 = *(_OWORD *)(v9 + v11 - 15);
  long long v13 = *(_OWORD *)(v9 + v11 - 31);
  uint64_t v14 = a1 + v11;
  *(_OWORD *)(v14 - 15) = v12;
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v10 + 8 * (((v8 == 32) * a2) ^ (v6 + 775))))();
}

uint64_t sub_10009BAA0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((884
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v0) == (((v3 - 1184) | 0x4C) ^ (v0 - 349)))) ^ v3)))();
}

uint64_t sub_10009BAEC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  return sub_100080CBC(a1, a2, *(_DWORD *)(*v4 + 4 * (v5 - 1047330087)), v3, a3);
}

uint64_t sub_10009BB18@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v56 = a1 ^ 0xE2;
  unint64_t v57 = STACK[0x3C8];
  int v58 = 831981571 * ((v55 + 1478228203 - 2 * ((v55 - 192) & 0x581BF9AB)) ^ 0xC1BA298F);
  int v59 = v58 + LODWORD(STACK[0x554]) - ((a1 ^ 0x91A1566) & (2 * LODWORD(STACK[0x554]))) + 76352022;
  *(void *)(v55 - 184) = v53;
  *(void *)(v55 - 176) = a52;
  *(_DWORD *)(v55 - 152) = (v52 - ((2 * v52 - 112491542) & 0xBA057A34) + 1504214799) ^ v58;
  *(_DWORD *)(v55 - 148) = v59;
  *(_DWORD *)(v55 - 192) = a1 - v58 + 1695027122;
  *(void *)(v55 - 168) = a51;
  *(void *)(v55 - 160) = v57;
  uint64_t v60 = (*(uint64_t (**)(uint64_t))(v54 + 8 * (a1 + 2109)))(v55 - 192);
  int v61 = *(_DWORD *)(v55 - 188);
  LODWORD(STACK[0x4AC]) = v61;
  LODWORD(STACK[0x2A0]) = -1985401897;
  return (*(uint64_t (**)(uint64_t))(v54
                                            + 8
                                            * ((1209 * (v61 == ((v56 + 633924039) & 0xDA3717BE) - 563356232)) ^ v56)))(v60);
}

uint64_t sub_10009BC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52)
{
  return (*(uint64_t (**)(void))(v54
                              + 8
                              * ((249 * (((v52 + 37 * (v53 ^ 0x56D) - 814) ^ LODWORD(STACK[0x4C8])) != a52 - 243809380)) ^ v53)))();
}

uint64_t sub_10009BCA8()
{
  *uint64_t v4 = v4[623];
  *(_DWORD *)(v5 - 152) = v2 + v0 + 2104631622;
  *(void *)(v5 - 184) = (v1 - 120968960) + v2;
  *(_DWORD *)(v5 - 188) = v2 ^ 1;
  *(_DWORD *)(v5 - 160) = v2 + v0 - 1583920785 - 94;
  *(_DWORD *)(v5 - 156) = v0 - 1583920785 - v2;
  *(_DWORD *)(v5 - 176) = ((v0 - 1583920785) ^ 9) - v2;
  *(void *)(v5 - 168) = STACK[0x2B0];
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v3 + 8 * ((v0 + 46) ^ 0xA7D)))(v5 - 192);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v5 - 192)))(v6);
}

uint64_t sub_10009BD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v7 = v6 - (((v6 << ((9 * ((a5 + 27) ^ 0x13)) ^ 0xD7)) + 886460228) & 0xE5A47280) + 222126306;
  BOOL v8 = ((2 * v7) & 0x7FFFBFCA ^ (((a5 + 1628095845) & 0xCB9336D9) + 1705258407)) + (v7 ^ 0x4D2DE6A5) - 209869825 == 863863780;
  return (*(uint64_t (**)(void))(v5 + 8 * (((4 * v8) | (8 * v8)) ^ (a5 + 748550427))))();
}

uint64_t sub_10009BE14(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned int v9 = v5 - 1062661589;
  if (v9 <= 0x40) {
    unsigned int v9 = 64;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * (((a3 - v6 - v7 + v9 < ((v4 + 601282544) & 0xDC2923FF) - 808) * a4) ^ v4)))();
}

uint64_t sub_10009BED8(int8x8_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(int8x8_t *)(a4 + (v5 - 8)) = veor_s8(*(int8x8_t *)(v6 + (v5 - 8)), a1);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 == -8) * v8) ^ a5)))();
}

uint64_t sub_10009BEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8
                                                                       * ((((((v3 - 815) | 0x12) + 785) ^ 0x90D)
                                                                         * (v4 == v5)) ^ v3)))(a1, a2, a3, 27);
}

uint64_t sub_10009BF24()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((((v2 + 1308) ^ 0x216E83E9 ^ ((v2 + 560204141) | 0xA8381)) * (v1 == v0)) ^ v2)))();
}

uint64_t sub_10009BF74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((*(unsigned __int8 *)(*(void *)(a1 + 16) + (v2 - 935020333))
                                   - 405001057
                                   + (~(*(unsigned __int8 *)(*(void *)(a1 + 16) + (v2 - 935020333)) << ((18 * (v3 ^ 0x63)) ^ 0xAB)) | 0xFFFFFEC3)) & 0x1F) == 1)
                                * (v3 - 1780)) ^ v3)))();
}

uint64_t sub_10009BFE0@<X0>(int a1@<W0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,_DWORD *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  return sub_1000A7C3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           0);
}

uint64_t sub_10009BFE8@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((61
                                * (((a2 - 43) ^ (*(unsigned __int8 *)(v2 + a1) == ((a2 - 566008157) & 0x1F ^ 0xEA))) & 1)) ^ (a2 - 1797))))();
}

uint64_t sub_10009C038(uint64_t a1)
{
  int v2 = 1224239923 * ((-2 - ((a1 | 0xB4CFA43B) + (~a1 | 0x4B305BC4))) ^ 0xB983A613);
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = (*(_DWORD *)(a1 + 8) ^ v2) - ((2 * (*(_DWORD *)(a1 + 8) ^ v2) + 552173082) & 0x348650DC);
  int v5 = (*(_DWORD *)(a1 + 4) ^ v2) + 2024873144;
  int v6 = (*(_DWORD *)(a1 + 4) ^ v2) + 2024873897;
  unsigned int v7 = (((2 * &v10) | 0xD9CF7000) - &v10 + 320358400) ^ 0x1E5445D7;
  unsigned int v8 = ((*(_DWORD *)a1 ^ v2 ^ 0x433297F) - 1635074579 + ((2 * (*(_DWORD *)a1 ^ v2)) & 0xDFFAFCEE ^ 0xD798AC00)) ^ (1224239923 * v7);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v14 = v3;
  int v15 = (1224239923 * v7) ^ v6;
  unsigned int v12 = v8;
  int v13 = v4 - 1224239923 * v7 + 1253566331;
  uint64_t result = (*(uint64_t (**)(int *))((char *)*(&off_10026C690 + v5) + 8 * v5 + 18788))(&v10);
  *(_DWORD *)(a1 + 32) = v10;
  return result;
}

uint64_t sub_10009C1C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v13 = v8 + 1;
  *(_DWORD *)(v11 + 4 * v13 + 908) = *(_DWORD *)(v10 + 4 * (*(_DWORD *)(v11 + 4 * v13 + 912) & 1)) ^ *(_DWORD *)(v11 + 4 * v13) ^ ((*(_DWORD *)(v11 + 4 * v13 + 912) & (6 * (v7 ^ a7) + a3) | v9 & 0x80000000) >> 1);
  return (*(uint64_t (**)(void))(v12 + 8 * (((4 * (v13 == 395)) | (8 * (v13 == 395))) ^ (v7 + 145))))();
}

uint64_t sub_10009C1CC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)((((v5 - 1883572762) & 0x70450C4D ^ (v5 + 1174014505) & 0xBA05F7F1 ^ 0x49)
                                     * (v4 == a4)) ^ v5)))();
}

void sub_10009C230()
{
  LODWORD(STACK[0x57C]) = v0;
  JUMPOUT(0x10009C248);
}

void sub_10009C250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  *(_DWORD *)(v28 - 192) = (v26 + 2138963215) ^ (69008221
                                               * ((((v28 - 192) | 0x54517644) - ((v28 - 192) & 0x54517644)) ^ 0x87F3244E));
  (*(void (**)(uint64_t))(v27 + 8 * (v26 ^ 0x921)))(v28 - 192);
  *(void *)(v28 - 184) = a26;
  *(void *)(v28 - 168) = a25;
  *(_DWORD *)(v28 - 160) = (v26 + 211) ^ (1178560073
                                        * ((v28 - 192 - 2 * ((v28 - 192) & 0x9BD09A5) + 163383717) ^ 0xEE882BCD));
  LOBYTE(STACK[0x18F0]) = 73 * ((v28 + 64 - 2 * ((v28 + 64) & 0xA5) - 91) ^ 0xCD) + 94;
  (*(void (**)(uint64_t))(v27 + 8 * (v26 ^ 0x901)))(v28 - 192);
  JUMPOUT(0x10007824CLL);
}

uint64_t sub_10009C334(uint64_t result)
{
  unint64_t v1 = 69008221
     * (((result | 0xD11098B7B4482233) - (result | 0x2EEF67484BB7DDCCLL) + 0x2EEF67484BB7DDCCLL) ^ 0x838CDE5467EA7039);
  unint64_t v2 = *(void *)(result + 24) + v1;
  unint64_t v3 = *(void *)(result + 8) - v1;
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 > v3;
  int v6 = v4;
  if (((*(_DWORD *)(result + 4) ^ v1) & 1) == 0) {
    BOOL v5 = v6;
  }
  BOOL v4 = !v5;
  uint64_t v7 = 16;
  if (!v4) {
    uint64_t v7 = 36;
  }
  *(_DWORD *)uint64_t result = (*(_DWORD *)(result + v7) + v1) ^ (*(_DWORD *)(result + 32) - v1);
  return result;
}

uint64_t sub_10009C3DC(uint64_t result)
{
  unint64_t v1 = 460628867 * ((2 * (result & 0x6088BD7CEA4303EALL) - result - 0x6088BD7CEA4303EBLL) ^ 0xDDE80FED592A7E68);
  unint64_t v2 = *(void *)(result + 24) + v1;
  unint64_t v3 = *(void *)result ^ v1;
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 >= v3;
  int v6 = !v4;
  if (((*(_DWORD *)(result + 32) - 460628867 * ((2 * (result & 0xEA4303EA) - result + 364706837) ^ 0x592A7E68)) & 1) == 0) {
    BOOL v5 = v6;
  }
  if (v5) {
    int v7 = *(_DWORD *)(result + 20) - 460628867 * ((2 * (result & 0xEA4303EA) - result + 364706837) ^ 0x592A7E68);
  }
  else {
    int v7 = *(_DWORD *)(result + 36) + 460628867 * ((2 * (result & 0xEA4303EA) - result + 364706837) ^ 0x592A7E68);
  }
  *(_DWORD *)(result + 12) = v7 ^ (*(_DWORD *)(result + 16)
                                 + 460628867 * ((2 * (result & 0xEA4303EA) - result + 364706837) ^ 0x592A7E68));
  return result;
}

void sub_10009C47C(uint64_t a1)
{
  int v1 = 460628867 * (((a1 | 0xB9F12765) - a1 + (a1 & 0x460ED89A)) ^ 0xF567A518);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10009C520(int a1, uint64_t a2, uint64_t a3, int a4)
{
  *(unsigned char *)(v7 + (a1 - 124805060)) = *(unsigned char *)(v5 + (a1 - 124805060));
  return (*(uint64_t (**)(void))(v8 + 8 * (((a1 - 1 != v4) * (((v6 + a4 + 2013) | 0x110) - 450)) ^ (v6 + a4 + 2636))))();
}

uint64_t sub_10009C56C(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)a1 - 0x5E8E72AB319E4285) + 1272695153;
  int v3 = *(_DWORD *)(*(void *)(a1 + 16) - 0x5E8E72AB319E4285) + 1272695153;
  int v4 = (v2 < 884123318) ^ (v3 < 884123318);
  BOOL v5 = v2 > v3;
  if (v4) {
    BOOL v6 = v2 < 884123318;
  }
  else {
    BOOL v6 = v5;
  }
  int v1 = *(_DWORD *)(a1 + 24) ^ (69008221 * ((a1 - 1382558880 - 2 * (a1 & 0xAD97D360)) ^ 0x7E35816A));
  return (*(uint64_t (**)(void))((char *)*(&off_10026C690 + (v1 ^ 0x46B))
                              + 8 * ((!v6 * ((v1 - 1696560216) & 0x651F78F3 ^ 0x8D4)) ^ v1)
                              - 4))();
}

void sub_10009C660()
{
}

void sub_10009C66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  if (a8 == 1403727501) {
    int v8 = -563355418;
  }
  else {
    int v8 = 563395390;
  }
  *(_DWORD *)(v9 + 40) = v8;
}

uint64_t sub_10009C6D0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((3540
                                * ((((*(unsigned __int8 *)(v2 + 1) - 134) << ((v3 ^ 0xEC) - 92)) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_10009C718@<X0>(uint64_t a1@<X4>, uint64_t a2@<X7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t))
{
  uint64_t v26 = 19 * (v21 ^ 0x4B7u);
  *(unsigned char *)(a1 + (a3 + 2)) = *(unsigned char *)(a2 + ((v23 + v26 + 1871) & (v22 + 2945112069)));
  int v27 = 831981571
      * ((((v25 - 160) ^ 0xA1FAE2DE | 0x727E95CD)
        - ((v25 - 160) ^ 0xA1FAE2DE)
        + (((v25 - 160) ^ 0xA1FAE2DE) & 0x8D816A32)) ^ 0x4A25A737);
  *(_DWORD *)(v25 - 160) = v27 ^ 0x35996873;
  *(_DWORD *)(v25 - 156) = v27 + v26 + 1182;
  *(void *)(v25 - 152) = a20;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v24 + 8 * ((int)v26 + 2417)))(v25 - 160);
  return a21(v28);
}

uint64_t sub_10009C7D8(uint64_t a1)
{
  int v1 = 2078219279 * (((a1 | 0x62FDDF9E) - (a1 & 0x62FDDF9E)) ^ 0xB80749EA);
  int v2 = *(_DWORD *)(a1 + 16) ^ v1;
  int v3 = *(_DWORD *)(a1 + 4) + v1;
  if (v3 < 0) {
    int v3 = -v3;
  }
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x5E8E72AB319E4285);
  unsigned int v6 = v4 - 1758911813;
  BOOL v5 = v4 - 1758911813 < 0;
  unsigned int v7 = 1758911813 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_10026C690 + (v2 ^ 0x6D0))
                              + 8 * ((19 * (v3 >> 5 < v7)) ^ v2)
                              - 4))();
}

void sub_10009C894()
{
  *(_DWORD *)(v0 + 4) = -563355418;
}

uint64_t sub_10009C8E0(int a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v11 = v8 + v7 + v9 - a1 + (a4 ^ 0x7ACu);
  int8x8_t v12 = vrev64_s8(*(int8x8_t *)(v5 - 7 + v11));
  *(int8x8_t *)(v4 - 7 + v11) = vrev64_s8(vadd_s8(vsub_s8(v12, vand_s8(vadd_s8(v12, v12), (int8x8_t)0xEEEEEEEEEEEEEEEELL)), (int8x8_t)0x7777777777777777));
  return (*(uint64_t (**)(void))(v10 + 8 * ((1150 * (a1 - (v6 & 0xFFFFFFF8) == -8)) ^ a4)))();
}

uint64_t sub_10009C958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  int v50 = *((_DWORD *)&a33 + ((v48 + v45) >> ((v47 - a8 + 35) ^ (a6 - 2))) + 18);
  *(unsigned char *)(a5 + (v48 + v45 + 1)) = (BYTE2(v50) ^ 0x43) - ((2 * (BYTE2(v50) ^ 0x43)) & 0xEF) + 119;
  *(unsigned char *)(a5 + (v48 + v45)) = (HIBYTE(v50) ^ 0x58) - ((2 * (HIBYTE(v50) ^ 0x58)) & 0xEF) + 119;
  *(unsigned char *)(a5 + (v48 + v45 + 2)) = (BYTE1(v50) ^ 0xA1) - ((2 * (BYTE1(v50) ^ 0xA1)) & 0xEF) + 119;
  *(unsigned char *)(a5 + (v48 + v45 + 3)) = v50 ^ 0xB2;
  BOOL v51 = v48 + 1899675074 < (a45 + 664913108);
  if (v48 + 1899675074 < v46 != a45 + 664913108 < v46) {
    BOOL v51 = a45 + 664913108 < v46;
  }
  return (*(uint64_t (**)(void))(v49 + 8 * ((30 * !v51) ^ v47)))();
}

uint64_t sub_10009CA48()
{
  STACK[0x2C8] = (unint64_t)&STACK[0x5C0] + STACK[0x288] + ((11 * (v0 ^ 3u)) ^ 0xD3D0C9B05DB3ADA9);
  int v1 = STACK[0x2D4];
  int v2 = (LODWORD(STACK[0x2D4]) - 1588905792) & 0x5EB4C6FF;
  LODWORD(STACK[0x2A8]) = ((v2 + 759784528) & 0xD2B69BEF) + 2147482833;
  LODWORD(STACK[0x2B0]) = v2;
  LODWORD(STACK[0x2A0]) = ((v2 + 1935610049) & 0x8CA0EF7E) - 812;
  LODWORD(STACK[0x298]) = v1 ^ 0xB44;
  return sub_10009CB54(44, 0x3A737B19B9CD1C16);
}

uint64_t sub_10009CB54@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  int v5 = v2 ^ a1;
  int v6 = v2 + 1376;
  if (a2) {
    BOOL v7 = v4 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v8 = v7;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v8 * (v5 - 1922)) ^ v6)))();
}

uint64_t sub_10009CB8C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((((v6 - 439) | 0x622) - 91) ^ (v6 - 1829972969) & 0x6D132FEC) * (a1 == a6)) | v6)))();
}

void sub_10009CBDC(uint64_t a1)
{
  int v1 = 944348131 * ((a1 & 0x896AFC50 | ~(a1 | 0x896AFC50)) ^ 0xD58CA7E1);
  int v2 = *(_DWORD *)(a1 + 40) - v1;
  int v3 = *(_DWORD *)(a1 + 56) ^ v1;
  int v4 = *(_DWORD *)a1 - v1;
  uint64_t v5 = *(void *)(a1 + 8);
  unsigned int v6 = 69008221 * (((v8 | 0x904891BE) - v8 + (v8 & 0x6FB76E40)) ^ 0x43EAC3B4);
  int v10 = v6 ^ (v2 + 1654);
  unsigned int v13 = (v4 ^ 0x272B452) + v6 + 2140912988 + ((2 * v4) & 0xC1CEFFEE ^ 0xC10A974A);
  uint64_t v9 = v5;
  v8[1] = ((-228493103 * v3 - 1954179008) ^ 0x7E477DEF)
        + ((2 * (-228493103 * v3 - 1954179008)) & 0xFC8EFBDE)
        - v6
        - 1678180482;
  uint64_t v11 = &STACK[0x5122BBEDD94E3023];
  int8x8_t v12 = &STACK[0x296CA2447D59DC5C];
  uint64_t v7 = (char *)*(&off_10026C690 + v2 - 296) - 4;
  (*(void (**)(_DWORD *))&v7[8 * v2 + 16544])(v8);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10009CDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8
                                                                       * (int)(((((v5 + 434166903) & 0xE61F23EF) - 650)
                                                                              * (v3 == v4)) ^ v5)))(a1, a2, a3, 3263642160);
}

uint64_t sub_10009CE1C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 241568881 * ((-720613086 - (a1 | 0xD50C5122) + (a1 | 0x2AF3AEDD)) ^ 0xFCE2AA9F);
  return (*(uint64_t (**)(void))((char *)*(&off_10026C690 + (v1 ^ 0x2B0))
                              + 8 * ((28 * (*(void *)a1 != 0x6BA7059072F2C1D3)) ^ v1)
                              - 4))();
}

uint64_t sub_10009CEB8()
{
  int v0 = (unint64_t *)*(&off_10026C690
                           + (aQ5g[(byte_1002113C8[(-113
                                                                                                  * ((qword_100283A78 + dword_100283AD8) ^ 0xEA))
                                                                                - 8] ^ 0x5A)
                                                                - 4] ^ (-113
                                                                      * ((qword_100283A78 + dword_100283AD8) ^ 0xEA)))
                           + 60);
  unsigned __int8 v1 = -113 * ((qword_100283A78 - *v0) ^ 0xEA);
  int v2 = (unint64_t *)*(&off_10026C690
                           + (byte_10021E7E8[(byte_1002189D8[v1 - 8] ^ 0x66) - 8] ^ v1)
                           - 174);
  unint64_t v3 = (*v2 + *v0) ^ (unint64_t)&v7;
  unint64_t v4 = (1932141199 * v3) ^ 0xA437147DE07F15EALL;
  unint64_t v5 = 1932141199 * (v3 ^ 0xA437147DE07F15EALL);
  unint64_t *v0 = v4;
  *int v2 = v5;
  LOBYTE(v5) = -113 * ((v5 - *(_DWORD *)v0) ^ 0xEA);
  int v10 = (char *)*(&off_10026C690
                + (byte_1002188D4[(byte_100214638[v5 - 8] ^ 0x20) - 4] ^ v5)
                - 76)
      - 4;
  unsigned int v9 = (3804331 * ((v8 + 117650343 - 2 * (v8 & 0x70333A7)) ^ 0x79D61651)) ^ 0x203;
  LOBYTE(v0) = -113 * ((*(_DWORD *)v2 - *(_DWORD *)v0) ^ 0xEA);
  return (*(uint64_t (**)(unsigned char *))((char *)*(&off_10026C690
                                                      + ((-113
                                                                         * ((qword_100283A78 - dword_100283AD8) ^ 0xEA)) ^ byte_1002188D0[byte_100214630[(-113 * ((qword_100283A78 - dword_100283AD8) ^ 0xEA))] ^ 0x83])
                                                      - 175)
                                            + 8
                                            * (byte_10021E6E0[byte_1002186D0[v0] ^ 0xB9] ^ v0)
                                            + 18548))(v8);
}

uint64_t sub_10009D0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  return (*(uint64_t (**)(void))(v11
                              + 8 * ((((v12 ^ 0x79F) - 473) * ((a11 - 2012725073) < 0x7FFFFFFE)) ^ v12)))();
}

void tbttItCTp3MZ(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10009D190(_DWORD *a1)
{
  *((unsigned char *)a1 + v1 + ((v2 - 1644309204) & 0x8CDF77F6) + 273913976) = 2;
  *a1 = v1;
  return 0;
}

uint64_t sub_10009D1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, unsigned int a15, uint64_t a16, unint64_t *a17, int a18)
{
  int v23 = ((&a13 + 487303392 - 2 * ((unint64_t)&a13 & 0x1D0BA8E0)) ^ 0xEFB85537) * v22;
  a14 = (v21 - 2024874863) ^ v23;
  a15 = v23 ^ 0xFD16F859;
  a16 = a11;
  a17 = &STACK[0x634ED76D4AB8828D];
  a13 = v23 ^ 0x6BCE5709;
  uint64_t v24 = (*(uint64_t (**)(int *))(v19 + 8 * (v21 + 601)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a18 == v18) * (v20 - 399)) ^ v21)))(v24);
}

uint64_t sub_10009D288(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (int)(((((a3 + 620) ^ 0xFFFFFDCF) + (a3 ^ 0x306)) * (v3 == a2)) ^ a3)))();
}

uint64_t sub_10009D2BC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((2036 * (v1 != 1704253533)) ^ 0x3F9u)))();
}

uint64_t sub_10009D2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40 = BYTE4(a34) ^ 0x89;
  if (v40 == 1)
  {
    BYTE4(a29) = ((8 * a31) ^ 0x70) - ((2 * ((8 * a31) ^ 0x70)) & 0xE0) + 119;
    BYTE5(a29) = ((a7 + a5 + 103) ^ (a31 >> 5) ^ 0x6C)
               - ((2 * ((a7 + a5 + 103) ^ (a31 >> 5) ^ 0x6C)) & 0xEF)
               + 119;
    BYTE6(a29) = ((a31 >> 13) ^ 0x53) - ((2 * ((a31 >> 13) ^ 0x53)) & 0xEF) + 119;
    HIDWORD(v43) = HIDWORD(a30) ^ 6;
    LODWORD(v43) = a31 ^ 0x60000000;
    HIBYTE(a29) = ((a31 >> 21) ^ 0x65) - ((2 * ((a31 >> 21) ^ 0x65)) & 0xEF) + 119;
    LOBYTE(a30) = (v43 >> 29) - ((2 * (v43 >> 29)) & 0xEF) + 119;
    BYTE1(a30) = ((HIDWORD(a30) >> 5) ^ 0x1B) - ((2 * ((HIDWORD(a30) >> 5) ^ 0x1B)) & 0xEF) + 119;
    BYTE2(a30) = ((HIDWORD(a30) >> 13) ^ 0xA8) - ((2 * ((HIDWORD(a30) >> 13) ^ 0xA8)) & 0xEF) + 119;
    int v42 = ((HIDWORD(a30) >> 20) | 0x11) - (HIDWORD(a30) >> 21);
    goto LABEL_5;
  }
  if (v40 == 2)
  {
    BYTE4(a29) = (((a5 ^ (a5 - 97)) + 112) | (2 * (HIDWORD(a30) >> 21))) - (HIDWORD(a30) >> 21) + 119;
    BYTE5(a29) = ((HIDWORD(a30) >> 13) ^ 0xA8) - ((2 * ((HIDWORD(a30) >> 13) ^ 0xA8)) & 0xEF) + 119;
    BYTE6(a29) = ((HIDWORD(a30) >> 5) ^ 0x1B) - ((2 * ((HIDWORD(a30) >> 5) ^ 0x1B)) & 0xEF) + 119;
    HIDWORD(v41) = HIDWORD(a30) ^ 6;
    LODWORD(v41) = a31 ^ 0x60000000;
    HIBYTE(a29) = (v41 >> 29) - ((2 * (v41 >> 29)) & 0xEF) + 119;
    LOBYTE(a30) = ((a31 >> 21) ^ 0x65) - ((2 * ((a31 >> 21) ^ 0x65)) & 0xEF) + 119;
    BYTE1(a30) = ((a31 >> 13) ^ 0x53) - ((2 * ((a31 >> 13) ^ 0x53)) & 0xEF) + 119;
    BYTE2(a30) = ((a31 >> 5) ^ 0xCD) - ((2 * ((a31 >> 5) ^ 0xCD)) & 0xEF) + 119;
    int v42 = ((8 * a31) ^ 0x70) - 32 * (((8 * a31) ^ 0x70u) >> 4);
LABEL_5:
    BYTE3(a30) = v42 + 119;
  }
  return sub_10008610C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

void sub_10009D4F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) ^ (3804331 * (((a1 | 0x72B1B0A3) - a1 + (a1 & 0x8D4E4F5C)) ^ 0xC649555));
  __asm { BRAA            X10, X17 }
}

void sub_10009D5B0(uint64_t a1)
{
  int v2 = 1224239923 * (((a1 | 0x1AEAD958) - a1 + (a1 & 0xE51526A7)) ^ 0xE859248F);
  int v3 = *(_DWORD *)(a1 + 20) - v2;
  v5[1] = v3
        - 1178560073 * (((v5 | 0xB082C97F) - (v5 & 0xB082C97F)) ^ 0x57B7EB17)
        + 1064656670;
  uint64_t v4 = (char *)*(&off_10026C690 + v3 + 40) - 4;
  (*(void (**)(_DWORD *))&v4[8 * (v3 ^ 0x969)])(v5);
  __asm { BRAA            X1, X17 }
}

uint64_t sub_10009D748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_10009D770(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_10009D770@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X7>, const char *a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * v34);
  uint64_t v45 = LODWORD(STACK[0x2D8]);
  uint64_t v46 = LODWORD(STACK[0x2D4]);
  int v47 = v45;
  unsigned int v48 = STACK[0x2DC];
  int v49 = STACK[0x2E0];
  int v50 = STACK[0x2DC];
  int v51 = STACK[0x2E0];
  int v52 = LOBYTE(STACK[0x2EC]) ^ 0x89;
  if (v52 == 2)
  {
    int8x16x4_t v83 = vld4q_s8(a6);
    int v70 = a1 + 836;
    uint8x16_t v71 = (uint8x16_t)veorq_s8(v83.val[1], v43);
    _Q17 = vmovl_u8(*(uint8x8_t *)v71.i8);
    _Q16 = vmovl_high_u8(v71);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    int v76 = (_DWORD *)(v42 + 4 * (v39 + 1336294788));
    int v77 = *(v76 - 8) ^ *(v76 - 3);
    int v78 = v77 + v37 - (v40 & (2 * v77));
    int v79 = *(_DWORD *)(v42 + 4 * (v39 + 1336294788 + (v70 + 24)) - 3732) ^ *(v76 - 14);
    HIDWORD(v80) = v79 ^ v78 ^ 0x5E6BE0E6;
    LODWORD(v80) = v79 ^ ~v78;
    *int v76 = (v80 >> 31) + v37 - (v40 & (2 * (v80 >> 31)));
    return (*(uint64_t (**)(uint64_t))(v36 + 8 * ((1065 * (v41 == 1336294725)) ^ v70)))(v46);
  }
  else if (v52 == 1)
  {
    unint64_t v81 = __PAIR64__(v48, v45);
    LODWORD(a30) = STACK[0x2E0];
    int8x16x4_t v82 = vld4q_s8(a6);
    uint64_t v53 = (a1 + 71) | 0x704u;
    uint8x16_t v54 = (uint8x16_t)veorq_s8(v82.val[2], v43);
    _Q21 = vmovl_high_u8(v54);
    _Q20 = vmovl_u8(*(uint8x8_t *)v54.i8);
    __asm
    {
      SHLL2           V20.4S, V20.8H, #0x10
      SHLL2           V21.4S, V21.8H, #0x10
    }
    uint64_t v61 = v41 - 16;
    uint64_t v62 = 643 * (v53 ^ 0x787);
    uint64_t v63 = (char *)*(&off_10026C690 + (int)(v53 ^ 0x7E1)) - 4;
    uint64_t v64 = (char *)*(&off_10026C690 + (int)v53 - 1815) - 12;
    int v65 = (v46 ^ v38)
        - 1241856770
        + ((v47 ^ 0xA7BC5E3A) & (v51 ^ (v38 + v62 - 1929)) | (v47 ^ v38) & (v50 ^ v38))
        + *(_DWORD *)&v64[4 * v61 + 4 * v39]
        + (*(_DWORD *)(v42 + 4 * (v63[v61 + v39] - 116)) ^ v37);
    uint64_t v66 = (char *)*(&off_10026C690 + (int)(v53 ^ 0x712)) - 8;
    unsigned int v67 = (v65 + v38 - (v35 & (2 * v65))) ^ v38;
    int v68 = ((v67 << (v66[v61 + v39] - 6)) | (v67 >> (6 - v66[v61 + v39]))) + (v47 ^ v38);
    HIDWORD(a28) = LOBYTE(STACK[0x2EC]) ^ 0xFFFFFF89;
    return (*(uint64_t (**)(_UNKNOWN **, char *, char *, char *, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v36 + 8 * (int)v53))(&off_10026C690, v63, v64, v66, v53, v62, v68 + v38 - (v35 & (2 * v68)), v41 - 15, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
             a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             v81,
             a30,
             v44,
             a32,
             a33,
             a34);
  }
  else
  {
    LODWORD(STACK[0x2D4]) = 2 * (LODWORD(STACK[0x2D4]) ^ v38) + v38 - (v35 & (4 * (LODWORD(STACK[0x2D4]) ^ v38)));
    LODWORD(STACK[0x2D8]) = 2 * (v45 ^ v38) + v38 - (v35 & (4 * (v45 ^ v38)));
    LODWORD(STACK[0x2DC]) = (v50 ^ v38) + (v48 ^ v38) + v38 - (v35 & (2 * ((v50 ^ v38) + (v48 ^ v38))));
    LODWORD(STACK[0x2E0]) = (v51 ^ v38) + (v49 ^ v38) + v38 - (v35 & (2 * ((v51 ^ v38) + (v49 ^ v38))));
    return v44(v46, v45, a1, a2, a3, a4, v45, a5, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
  }
}

void sub_10009DBCC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(STACK[0x2E4]) = v7 + (a5 ^ v7) + (a2 ^ v7) - (v6 & (2 * ((a5 ^ v7) + (a2 ^ v7)))) + v5 - 1459;
  JUMPOUT(0x10009DC14);
}

uint64_t sub_10009DCA0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, int a4, int a5)
{
  unsigned int v9 = ((a1 ^ 0xE5F4EDA7) - v8) & 0x852C45F2;
  unsigned int v10 = 944348131 * (((&a3 | 0x9355BA87) - (&a3 & 0x9355BA87)) ^ 0x304C1EC9);
  a3 = v7;
  a4 = a1 - v10 - 11;
  a5 = v10 - v5 - v9 + 898668427;
  uint64_t v11 = (*(uint64_t (**)(uint64_t *))(v6 + 8 * (a1 + 1303)))(&a3);
  return sub_10009DD2C(v11);
}

uint64_t sub_10009DD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29
                                                              + 8
                                                              * ((19
                                                                * (((v28 == 63) ^ ((a28 - 73) ^ (a6 + 96))) & 1)) ^ a28)))(a1, a2, -255000199);
}

uint64_t sub_10009DD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,uint64_t a62)
{
  STACK[0x2C0] = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 8 * a61))(a62, 2965982036);
  unsigned int v65 = (*(uint64_t (**)(void))(v62 + 8 * (v64 + 1568)))();
  *uint64_t v63 = v65;
  v63[1] = 1812433253 * (v65 ^ (v65 >> 30)) + 1;
  return (*(uint64_t (**)(void))(v62 + 8 * ((v64 - 213) ^ 0xDE)))();
}

void sub_10009DE20()
{
}

uint64_t sub_10009DE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(void))(v70 + 8 * ((241 * (v71 == (a70 ^ (v73 + 1314)))) ^ (v72 + 78))))();
}

uint64_t sub_10009DE5C(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  *(void *)(a2 + (v6 + a4)) = *(void *)(v8 + (v6 + a4));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a3 == a4) * a6) ^ v7)))();
}

uint64_t sub_10009DE88()
{
  return sub_100099474();
}

uint64_t sub_10009DEB4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  unsigned int v56 = (((v48 | 0xD09C481E) - (v48 & 0xD09C481E)) ^ 0xAE681862) * v51;
  *(void *)(v55 - 176) = v52;
  *(void *)(v55 - 168) = a47;
  *(_DWORD *)(v55 - 184) = a1 ^ v56;
  *(_DWORD *)(v55 - 192) = v50 - v56 + 401;
  *(void *)(v55 - 160) = a48;
  uint64_t v57 = (*(uint64_t (**)(uint64_t))(v53 + 8 * (v50 ^ 0x9A6)))(v55 - 192);
  int v58 = *(_DWORD *)(v55 - 188);
  STACK[0x518] = v49;
  return (*(uint64_t (**)(uint64_t, __n128))(v53
                                                    + 8
                                                    * (((v58 == v54) * (407 * (((v50 - 57) | 0x328) ^ 0x32C) - 106)) ^ v50)))(v57, (__n128)0);
}

void sub_10009DF98()
{
}

uint64_t sub_10009DFA0()
{
  LODWORD(STACK[0x4AC]) = v0;
  return sub_10009DFAC();
}

uint64_t sub_10009DFAC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((LODWORD(STACK[0x4AC]) == v2)
                                     * ((((v0 - 776) | 0x881) - 1846) ^ (v0 + 1488300131) & 0xA74A54FF)) ^ (v0 + 454))))();
}

void sub_10009E000(_DWORD *a1)
{
  unsigned int v1 = *a1 + 241568881 * ((a1 - 348976960 - 2 * (a1 & 0xEB3308C0)) ^ 0x3D220C82);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10009E0D0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((651
                                * (((((v0 - 2097234906) & 0x7D01473E) - 1049) & *(_DWORD *)(v2 - 0x6BA7059072F2C1BFLL)) == 0)) ^ (v0 + 1234))))();
}

void sub_10009E124()
{
}

uint64_t sub_10009E130@<X0>(unsigned int a1@<W1>, unsigned int a2@<W3>, int a3@<W4>, int a4@<W6>, int a5@<W8>)
{
  unsigned int v14 = ((v8 - 875) ^ 0x9D4F29A2)
      + v9
      + (v7 ^ 0xE4E2B2A1)
      + v11 * (*(_DWORD *)(*v10 + 4 * a3) ^ (v7 + v8 - 541 - 773));
  *(_DWORD *)(v12 + 4 * v13) = v14 + v7 - ((2 * v14) & 0xC9C56542);
  BOOL v15 = a2 > a1;
  if (v15 == a3 + 1429502903 < a5) {
    BOOL v15 = a3 + 1429502903 < a4;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * (v8 ^ (v15 * v6))))();
}

uint64_t sub_10009E1EC@<X0>(unsigned int a1@<W8>, uint64_t a2)
{
  BOOL v8 = v2 < a1;
  *(unsigned char *)(a2 + (v4 - 1815540714)) = *(unsigned char *)(v6 + (v4 - 1815540714))
                                                   - ((*(unsigned __int8 *)(v6 + (v4 - 1815540714)) << (61 * (v7 ^ 4) + 110)) & 0xEE)
                                                   + 119;
  if (v8 == v4 - 1868697886 < a1) {
    BOOL v8 = v4 - 1868697886 < v2;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((v8 * v3) ^ v7)))();
}

uint64_t sub_10009E2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, unsigned int a17)
{
  unsigned int v21 = 69008221 * ((&a13 & 0x3E414D53 | ~(&a13 | 0x3E414D53)) ^ 0x121CE0A6);
  a16 = a12;
  a17 = (((2 * v18) & 0xBEE37348) + (v18 ^ 0xDF71B9A4) + 836694016) ^ v21;
  a13 = v17;
  a15 = v21 + 2309;
  uint64_t v22 = (*(uint64_t (**)(uint64_t *))(v20 + 19312))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * (((4 * (a14 == v19)) | (32 * (a14 == v19))) ^ 0x65Fu)))(v22);
}

uint64_t sub_10009E38C(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x5E8E72AB319E4285);
  if (v2 - 1758911813 < 0) {
    unsigned int v3 = 1758911813 - v2;
  }
  else {
    unsigned int v3 = v2 - 1758911813;
  }
  unsigned int v1 = 3804331 * ((676526031 - (a1 | 0x2852F7CF) + (a1 | 0xD7AD0830)) ^ 0xA9782DC6);
  return (*(uint64_t (**)(void))((char *)*(&off_10026C690 + (int)((*(_DWORD *)(a1 + 16) ^ v1) - 1809))
                              + 8
                              * (int)((((*(_DWORD *)(a1 + 20) ^ v1) - 736754318 >= 4 * (unint64_t)v3)
                                     * (((*(_DWORD *)(a1 + 16) ^ v1) - 1091) ^ 0x3DC)) ^ *(_DWORD *)(a1 + 16) ^ v1)
                              - 4))();
}

uint64_t sub_10009E460()
{
  return sub_10009E488(v0 - (v1 & 0xFFFFFFF8));
}

uint64_t sub_10009E488(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  *(void *)(v9 + (v6 + v5 - v7)) = *(void *)(v8 + (v6 + v5 - v7));
  return (*(uint64_t (**)(void))(v11 + 8 * ((14 * (a5 + v7 == v10)) ^ a3)))();
}

uint64_t sub_10009E4BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((a4 + ((a5 + 1254701248) & 0xB536CEB7) + a6 - 2119 < 0xFFFFFFF0)
                                     * ((a5 + 748090518) & 0xD3690BBE ^ 0x175)) ^ a5)))();
}

uint64_t sub_10009E520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, unint64_t *a12, int a13, unsigned int a14, uint64_t a15, uint64_t a16)
{
  unsigned int v20 = 1178560073 * ((2 * (&a11 & 0x493717C8) - &a11 - 1228347340) ^ 0x51FDCA5C);
  a13 = v19 - v20 - 523;
  a14 = 1172488852 - v20;
  a16 = v18;
  a11 = &STACK[0x4B3FB627E137F32A];
  a12 = &STACK[0x5F548590D8AA63C1];
  uint64_t v21 = (*(uint64_t (**)(unint64_t **))(v17 + 8 * (v19 ^ 0xAA8)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((*(_DWORD *)(v18 - 0x6BA7059072F2C1BBLL) == ((29 * (v19 ^ 0x3F9)) ^ (v16 + 1009)))
                                              * (v19 ^ 0x7BB)) ^ v19)))(v21);
}

void sub_10009E618()
{
}

void sub_10009E624(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10009E688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return a21(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

void sub_10009E71C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v6 = (v4 + 1109) | 0x1C0;
  *(void *)(v9 - 0x296CA2447D59DC54) = *v5;
  *(_DWORD *)(v10 - 0x5122BBEDD94E300FLL) = a4;
  *(void *)(v13 - 0x6BA7059072F2C1CBLL) = 0x4E4F97F54E4F97F5;
  *int v5 = 0;
  _DWORD *v8 = 218024909;
  unsigned int v7 = ((*(_DWORD *)(v13 - 0x6BA7059072F2C1BFLL) & 0x2299C74A ^ 0x2900543)
      + (*(_DWORD *)(v13 - 0x6BA7059072F2C1BFLL) & 0xDD6638B4 ^ 0x41462895)
      - 2) ^ 0x6286C7CB;
  *(_DWORD *)(v13 - 0x6BA7059072F2C1BFLL) = ((v7 | (v6 - 13439189)) - (v7 | 0xCD08F9) + 13437177) ^ 0xDE621D1A;
  *uint64_t v12 = *v11;
}

void sub_10009E86C()
{
}

void sub_10009E878()
{
}

void sub_10009E884(uint64_t a1)
{
  int v1 = 235795823 * (a1 ^ 0x94AD4959);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 16) - 0x6BA7059072F2C1C7) - 299155572;
  unsigned int v3 = *(_DWORD *)(a1 + 8) + v1 + 629805307;
  int v4 = (v3 < 0x3C7AD781) ^ (v2 < 0x3C7AD781);
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v6 = v3 < 0x3C7AD781;
  }
  else {
    BOOL v6 = v5;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_10009E988()
{
  *(_DWORD *)(*v2 + 4 * (v4 + v0)) = v1;
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v3 + 30) ^ (v4 - 1 + v0 >= 0)) & 1) * v5) ^ v3)))();
}

uint64_t sub_10009EBE4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)((((((27 * (v3 ^ 0x6E4)) ^ 0xFFFFF924) + v2 + v1) >> 31)
                                     * ((81 * ((27 * (v3 ^ 0x6E4)) ^ 0x6DD)) ^ 0x1DE)) ^ (27 * (v3 ^ 0x6E4)))))();
}

uint64_t sub_10009EC3C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v28 = (v22 - 1280877036) & 0x4C589FCF;
  int v29 = v22 - 245;
  unint64_t v30 = ((v19 + 4 * (v28 ^ 0x3EBu) - 656) ^ *(_DWORD *)(a2 + v26)) + HIDWORD(v23);
  *(_DWORD *)(a2 + 4 * a1) = v30 + v19 - (v21 & (2 * v30));
  *(_DWORD *)(a19 + v26) = HIDWORD(v30) + v19 - 2 * HIDWORD(v30);
  BOOL v31 = v25 + 1846619736 < a3;
  if (v20 > 0xE509994 != v25 + 1846619736 < -240163221) {
    BOOL v31 = v20 > 0xE509994;
  }
  return (*(uint64_t (**)(void))(v24 + 8 * (v29 ^ (v31 * v27))))();
}

uint64_t sub_10009ECF4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2
                                                     + 8
                                                     * ((((v3 + v4 + 848) ^ 0x499) * (v1 > 0xC2CC8C0F)) ^ (v3 + v4 + 643))))(a1, 1340331655);
}

uint64_t sub_10009ED38()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((v3 - 1758911813) * (v1 - 1758911813) > ((v2 - 1676185588) ^ 0x63E8891C))
                                * (((v2 - 1676185588) & 0x63E88FFE) - 1743)) ^ (v2 + 17))))();
}

uint64_t sub_10009ED98@<X0>(unsigned int a1@<W0>, int a2@<W1>, unint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, void *a6@<X7>, unint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v40 = v39 ^ v27;
  uint64_t v41 = 4 * (v36 + 1 + a5);
  unint64_t v42 = ((v40 * v28) ^ (v25 + 887) ^ *(_DWORD *)(a25 + v41))
      + (a4 ^ HIDWORD(v33))
      + a1 * (unint64_t)(*(_DWORD *)(*a6 + v41) ^ v25);
  unint64_t v43 = HIDWORD(a7)
      + v29 * (unint64_t)(*(_DWORD *)(*v37 + v41) ^ v25)
      + ((v42 + a2 - (v35 & (2 * v42))) ^ a3);
  *(_DWORD *)(a25 + 4 * (v36 + a5)) = v43 + v25 - (v26 & (2 * v43));
  BOOL v45 = v36 + v31 > v32 || v36 + v31 < v38;
  return (*(uint64_t (**)(void))(v34 + 8 * ((v45 * v30) ^ v39)))();
}

void sub_10009EE40()
{
}

uint64_t sub_10009EE8C()
{
  *int v4 = v4[623];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((205 * (((v1 == 1431907797) ^ (v3 + v0 + 40)) & 1)) ^ (v3 + v0 + 1283))))();
}

uint64_t sub_10009EEE4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(uint64_t), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(unsigned char *)(a2 + (a3 + v24 + v22)) = *(unsigned char *)(a1 + (v23 - 1296017607));
  int v27 = 831981571 * (((((v26 - 168) | 0xEC6C17E8) ^ 0xFFFFFFFE) - (~(v26 - 168) | 0x1393E817)) ^ 0x8A323833);
  *(void *)(v26 - 160) = a22;
  *(_DWORD *)(v26 - 168) = v27 ^ 0x35996873;
  *(_DWORD *)(v26 - 164) = v27 + v22 + 1169;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v22 + 2404)))(v26 - 168);
  return a15(v28);
}

void sub_10009EF80()
{
}

void sub_10009EF88()
{
  int v3 = 235795823
     * ((((2 * ((v2 - 192) ^ 0xE5053A66)) | 0x39AB4DA6) - ((v2 - 192) ^ 0xE5053A66) - 483763923) ^ 0x6D7DD5EC);
  *(void *)(v2 - 192) = STACK[0x430];
  *(_DWORD *)(v2 - 184) = v3 ^ 0x78F2562C;
  *(_DWORD *)(v2 - 180) = v1 - 1882357529 + v3 + 43;
  (*(void (**)(uint64_t))(v0 + 8 * (v1 + 2367)))(v2 - 192);
  JUMPOUT(0x10009F014);
}

uint64_t sub_10009F030@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((v4 + 1 == v3 + 32) | (2 * (v4 + 1 == v3 + 32))) ^ a1)))(v1);
}

uint64_t sub_10009F0FC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1858 * (v0 > 0x605C7597)) ^ (v2 + 1340331902))))();
}

uint64_t sub_10009F160()
{
  *(void *)(v5 - 128) = v4;
  *(void *)(v5 - 120) = v1;
  *(_DWORD *)(v5 - 136) = (v2 + 618) ^ (268847287
                                      * ((2 * ((v5 - 136) & 0x6EEF3EC0) - (v5 - 136) + 286310717) ^ 0xEEBAD015));
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v2 + 1917)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8 * ((((v2 - 87571377) & 0x5383FFF ^ 0x608) * (v3 != 1909022040)) ^ v2)))(v6);
}

uint64_t sub_10009F214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, unint64_t *a13, int a14)
{
  unsigned int v17 = 3804331
      * (((&a10 | 0x4F6F6A9A) - &a10 + (&a10 & 0xB0909560)) ^ 0x31BA4F6C);
  a13 = &STACK[0x5267DA57ABB8ED88];
  a14 = (v14 - 213) ^ v17;
  a10 = v15;
  a11 = v17 ^ 0x14497ECE;
  a12 = v17 ^ 0x4CDE264;
  uint64_t v18 = (*(uint64_t (**)(uint64_t *))(v16 + 8 * (v14 + 1955)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((((v14 ^ (*(_DWORD *)(v15 - 0x6BA7059072F2C1BBLL) == -563355418)) & 1)
                                              * ((v14 + 602) ^ 0x41D)) ^ v14)))(v18);
}

uint64_t sub_10009F2FC(_DWORD *a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_100267840
                             + ((116 * ((*a1 + *(_DWORD *)(a2 + 4) + 932975722) < 0xC9)) ^ 0x72Fu)))();
}

uint64_t sub_10009F344(uint64_t a1)
{
  unsigned int v5 = *(unsigned __int8 *)(v1 + (v3 + 1));
  uint64_t v6 = (((((v4 ^ 0x58B) + 580) ^ 0xFFD7F503) + 73 * (v4 ^ 0x58B)) ^ v5) + 2 * v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v2 + 8 * (int)((46 * ((v5 >> 7) ^ 1)) ^ v4)))(a1, v6, (v6 + 1706876766));
}

void sub_10009F3B0()
{
}

void sub_10009F5CC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 40) + 235795823 * (((a1 | 0xBFD03985) - a1 + (a1 & 0x402FC67A)) ^ 0x2B7D70DC);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10009F70C@<X0>(uint64_t a1@<X5>, uint64_t a2@<X6>, uint64_t a3@<X7>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = v13 ^ 0x6C;
  uint64_t v18 = (v13 ^ 0x1FFFFFC21) & (v14 + 1);
  unint64_t v19 = (v17 - 801) ^ v10;
  v20.i64[0] = 0xEEEEEEEEEEEEEEEELL;
  v20.i64[1] = 0xEEEEEEEEEEEEEEEELL;
  v21.i64[0] = 0x7878787878787878;
  v21.i64[1] = 0x7878787878787878;
  *(int8x16_t *)(v12 + (v19 & (a4 + v11))) = vaddq_s8(vaddq_s8(*v16, v21), vmvnq_s8(vandq_s8(vaddq_s8(*v16, *v16), v20)));
  int v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8 * (int)((108 * (v18 != 16)) ^ v17));
  return v22(v17, a4 + v11, v18 - 16, v19, v22, a1, a2, a3, a5, a6, a7, a8, a9, a10);
}

void sub_10009F798()
{
}

uint64_t sub_10009F7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(STACK[0x2B0]) = v68;
  STACK[0x2B8] = v69;
  STACK[0x2D8] = 0;
  int v73 = 1543737703 * ((((2 * (v72 - 192)) | 0xC0B38ABC) - (v72 - 192) + 530987682) ^ 0x9EAD9522);
  *(_DWORD *)(v72 - 184) = v73 ^ LODWORD(STACK[0x2C0]);
  *(_DWORD *)(v72 - 192) = v70 - v73 + 294;
  *(void *)(v72 - 168) = a67;
  *(void *)(v72 - 160) = a68;
  *(void *)(v72 - 176) = 0x4455824F020409ECLL;
  uint64_t v74 = (*(uint64_t (**)(uint64_t))(v71 + 8 * (v70 ^ 0x933)))(v72 - 192);
  BOOL v75 = *(_DWORD *)(v72 - 188) != ((v70 + 631) ^ 0x549) - 563357058;
  return (*(uint64_t (**)(uint64_t))(v71 + 8 * (((8 * v75) | (16 * v75)) ^ v70)))(v74);
}

void sub_10009F880()
{
}

void sub_10009F888()
{
}

uint64_t sub_10009F894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, unsigned int a16, int a17)
{
  a16 = (v19 - 928) ^ (831981571 * ((&a15 & 0x6D2950CC | ~(&a15 | 0x6D2950CC)) ^ 0xB777F17));
  a15 = &STACK[0x55D5CC6D86BC0F37];
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v17 + 8 * (v19 ^ 0xD1Fu)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * (((a17 == v18) * (((v19 + 1121) | 4) + 1032)) ^ v19)))(v20);
}

uint64_t sub_10009F938@<X0>(void *a1@<X1>, int a2@<W2>, int a3@<W5>, unsigned int a4@<W6>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  unint64_t v34 = (*(_DWORD *)(a23 + 4 * (a5 + 1 + v26)) ^ v23)
      + HIDWORD(v25)
      + a4 * (unint64_t)(*(_DWORD *)(*a1 + 4 * (a5 + 1 + v26)) ^ v23);
  BOOL v35 = v33 > v27;
  *(_DWORD *)(a23 + 4 * (a5 + v26)) = v34 + v23 - ((v34 << (a3 ^ v29)) & v24);
  if (v35 != a5 + v30 < v31) {
    BOOL v36 = v35;
  }
  else {
    BOOL v36 = a5 + v30 < a2;
  }
  return (*(uint64_t (**)(void))(v28 + 8 * ((v36 * v32) ^ a3)))();
}

uint64_t sub_10009F9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24)
{
  return (*(uint64_t (**)(void))(v26 + 8 * (((a24 == -405001042) * (v24 ^ 0xD6B)) ^ v25)))();
}

void sub_10009F9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v30 = 831981571 * ((-609318725 - ((v29 - 144) | 0xDBAE88BB) + ((v29 - 144) | 0x24517744)) ^ 0xBDF0A760);
  *(void *)(v29 - 144) = a21;
  *(_DWORD *)(v29 - 136) = v27 - v30 + 899;
  *(_DWORD *)(v29 - 132) = v30 + 517764793;
  (*(void (**)(uint64_t))(v26 + 8 * (v27 + 1812)))(v29 - 144);
  *(void *)(v29 - 144) = a25;
  *(void *)(v29 - 136) = v25;
  *(_DWORD *)(v29 - 112) = v27
                         - 1224239923 * (((v29 - 144) & 0x229A5DFF | ~((v29 - 144) | 0x229A5DFF)) ^ 0x2FD65FD7)
                         - 145;
  *(void *)(v29 - 128) = v25;
  *(void *)(v29 - 120) = v28;
  *(void *)(v29 - 104) = a21;
  (*(void (**)(uint64_t))(v26 + 8 * (v27 ^ 0xA96)))(v29 - 144);
  JUMPOUT(0x10007B1E0);
}

uint64_t sub_10009FAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (int)(((((a6 - 570433928) & 0xAEECBAFD) + (a6 ^ 0x5B9 ^ (v11 + 2259))) * (a5 == a11)) ^ a6)))();
}

uint64_t sub_10009FB3C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v1 & (2 * (*(unsigned __int8 *)(v2 + 6) - 1)))
                                      + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v0) == v0)
                                     * (v3 + 136 + ((v3 + 2056543976) & 0x856BA5F3) + 299)) ^ v3)))();
}

void sub_10009FB94(int a1@<W8>)
{
  **(_DWORD **)(v1 - 0x5E8E72AB319E4281) = (v2 + 587080655) ^ 0xC61C916E;
  sub_100086EB0(a1 + 1);
}

void sub_10009FBD4()
{
}

uint64_t sub_10009FBF8(uint64_t a1, int a2)
{
  v8.i64[0] = 0xEEEEEEEEEEEEEEEELL;
  v8.i64[1] = 0xEEEEEEEEEEEEEEEELL;
  v9.i64[0] = 0x7777777777777777;
  v9.i64[1] = 0x7777777777777777;
  uint64_t v10 = v6 + ((a2 - 375) ^ (v4 + 156));
  int8x16_t v11 = vrev64q_s8(*(int8x16_t *)(v3 + v10 - 15));
  int8x16_t v12 = vextq_s8(v11, v11, 8uLL);
  int8x16_t v13 = vrev64q_s8(*(int8x16_t *)(v3 + v10 - 31));
  int8x16_t v14 = vextq_s8(v13, v13, 8uLL);
  uint64_t v15 = v2 + v10;
  int8x16_t v16 = vrev64q_s8(vaddq_s8(vsubq_s8(v12, vandq_s8(vaddq_s8(v12, v12), v8)), v9));
  *(int8x16_t *)(v15 - 15) = vextq_s8(v16, v16, 8uLL);
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v14, vandq_s8(vaddq_s8(v14, v14), v8)), v9));
  *(int8x16_t *)(v15 - 31) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v7 + 8 * ((22 * ((v5 & 0xFFFFFFE0) != 32)) ^ (a2 + 275))))();
}

void sub_10009FC98(uint64_t a1)
{
  int v1 = 2078219279 * ((2 * (a1 & 0x636844EC) - a1 - 1667777773) ^ 0x466D2D67);
  int v2 = *(_DWORD *)(a1 + 64) - v1;
  int v3 = *(_DWORD *)(a1 + 40) ^ v1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)a1;
  int v6 = *(_DWORD *)(a1 + 60) - v1;
  unsigned int v7 = 831981571 * (((v9 | 0x3F000E94) - (v9 & 0x3F000E94)) ^ 0xA6A1DEB0);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = v4;
  v9[0] = v2 - v7 + 1695026728;
  uint64_t v10 = v4;
  uint64_t v11 = v5;
  unsigned int v14 = (v3 - ((2 * v3 - 1111982950) & 0xBA057A34) + 1004469095) ^ v7;
  int v15 = v6 + v7 - ((2 * v6 + 82062690) & 0x91A142C) - 1359011641;
  int8x16_t v8 = (char *)*(&off_10026C690 + (v2 ^ 0x2E9)) - 4;
  (*(void (**)(_DWORD *))&v8[8 * v2 + 13720])(v9);
  __asm { BRAA            X8, X17 }
}

void sub_10009FE44()
{
}

uint64_t sub_10009FE4C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void))(a3
                                                    + 8 * (((*(_DWORD *)(*v5 + 4 * a2) == v3) * (v4 - 473)) ^ v4)))(a1, (v4 + 64));
}

uint64_t sub_10009FE78(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((a1 + 1) ^ (v1 < ((2 * a1) ^ 0x8C4u))) & 1 | (4
                                                                                               * (((a1 + 1) ^ (v1 < ((2 * a1) ^ 0x8C4u))) & 1)) | a1)))();
}

uint64_t sub_10009FEB8()
{
  STACK[0x508] = STACK[0x288];
  return ((uint64_t (*)(void))STACK[0x2A8])();
}

uint64_t sub_10009FED0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  return (*(uint64_t (**)(void))(v27
                              + 8
                              * (((((a1 == 0) ^ *(_DWORD *)(v29 - 140)) & 1) * a27) ^ (v28 - 1300))))();
}

uint64_t sub_10009FF00(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 8);
  unsigned int v5 = 1178560073 * (v8 ^ 0xE7352268);
  int v6 = *(_DWORD *)a1 + 2078219279 * ((-2 - ((a1 | 0xC3B1469C) + (~a1 | 0x3C4EB963))) ^ 0xE6B42F17) + 231788851;
  int v9 = v6 - v5 + 404;
  unsigned int v10 = 1172488852 - v5;
  uint64_t v12 = v2;
  v8[0] = v4;
  v8[1] = v3;
  uint64_t result = (*(uint64_t (**)(void *))((char *)*(&off_10026C690 + v6) + 8 * v6 + 18868))(v8);
  *(_DWORD *)(a1 + 4) = v11;
  return result;
}

void sub_1000A0010(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 69008221 * ((a1 - 1655620505 - 2 * (a1 & 0x9D513C67)) ^ 0x4EF36E6D);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_1000A0118@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 - 0xD1C4B9DDB1E97A5) = 1;
  return sub_1000A0130();
}

uint64_t sub_1000A0130(uint64_t result)
{
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)(*(void *)(v1 + 8) - 0x14281A3685FADE74) = result;
  *(_DWORD *)(v3 - 0x4EABE2FA14688F5ELL) = v2;
  *(_DWORD *)(v1 + 24) = -563355418;
  return result;
}

uint64_t sub_1000A01A8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20)
{
  v21[623] = *(_DWORD *)(v20 + 4 * (*v21 & (a1 ^ 0x54D))) ^ v21[396] ^ ((*v21 & 0x7FFFFFFE | v21[623] & 0x80000000) >> 1);
  return (*(uint64_t (**)(void))(v22 + 8 * (int)((779 * (a20 > 0x26F)) ^ a1)))();
}

uint64_t sub_1000A0200()
{
  *(_DWORD *)STACK[0x2C8] ^= STACK[0x2C0];
  return sub_1000A0224();
}

uint64_t sub_1000A0224()
{
  BOOL v3 = (((v0 - 898) | 0x32A) ^ 0xFFFFFCD1) + v1 == 820911360;
  return (*(uint64_t (**)(void))(v2 + 8 * ((16 * v3) | (32 * v3) | v0)))();
}

void sub_1000A0274()
{
}

uint64_t sub_1000A02EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned int a26)
{
  return (*(uint64_t (**)(void))(v28 + 8 * (((v27 ^ 0x430) * (v26 == 989468001)) ^ v27)))(a26);
}

void sub_1000A0328()
{
}

uint64_t sub_1000A033C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,uint64_t a26,int a27,int a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v33 = *(_DWORD *)(a2 + 4);
  unsigned int v34 = 460628867 * ((((2 * &a24) | 0xDCB423AC) - &a24 + 296087082) ^ 0xA2CC93AB);
  a26 = *(void *)(a2 + 8);
  a31 = a13;
  a24 = a15;
  a25 = v31 - 1573480507 + v33 + v34 - 1192;
  a29 = a16;
  a30 = a14;
  a28 = v31 - v34 + 277;
  uint64_t v37 = (*(uint64_t (**)(uint64_t *))(v32 + 8 * (v31 ^ 0x8B0)))(&a24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32
                                                                                                  + 8 * ((1705 * (a27 == -563355418)) ^ v31)))(v37, a17, 173609183, 1511410743, 1704253536, a6, a7);
}

uint64_t sub_1000A0454()
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x6BA7059072F2C1C3) - 965683193;
  unsigned int v4 = *(_DWORD *)(v1 - 0x6BA7059072F2C1C7) - 2061497385;
  BOOL v5 = v3 < ((v2 - 1800) | 0x11u) - 747658757;
  BOOL v6 = v3 > v4;
  if (v5 == v4 < 0xD36FA3CC) {
    BOOL v5 = v6;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((v5 * ((v2 ^ 0x9CC) - 256)) ^ v2)))();
}

uint64_t sub_1000A04F8(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6)
{
  uint64_t v12 = a4 + a3 + a5 + 523 * (a6 ^ 0x3A0u) + v11;
  uint64_t v13 = ((_BYTE)a4 + (_BYTE)a3 + (_BYTE)a5 + 11 * (a6 ^ 0xA0)) & 0xF;
  unint64_t v14 = v13 + v7 - v12;
  unint64_t v15 = (v13 | v9) - v12;
  uint64_t v16 = (v13 | v8) - v12;
  BOOL v18 = (unint64_t)(v6 - v11) > 0xF && v14 > 0xF && v15 > 0xF;
  unint64_t v19 = v16 + 1;
  int v21 = v18 && v19 >= (unint64_t)((a6 ^ 0x3A0u) + 1911) - 1897;
  return (*(uint64_t (**)(void))(v10 + 8 * (a6 | (16 * v21))))();
}

uint64_t sub_1000A0570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(void))(v14 + 8 * (((a13 == (v16 ^ 0x42D9EA40)) * (v15 ^ (v13 + 128) ^ (v13 - 2017))) ^ v15)))();
}

uint64_t sub_1000A05AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,int a24,int a25)
{
  *(_DWORD *)(v27 - 120) = a23 + 69008221 * ((v27 - 119519730 - 2 * ((v27 - 152) & 0xF8E046A6)) ^ 0x2B4214AC);
  *(_DWORD *)(v27 - 116) = a25 - 69008221 * ((v27 - 119519730 - 2 * ((v27 - 152) & 0xF8E046A6)) ^ 0x2B4214AC);
  *(_DWORD *)(v27 - 112) = 69008221 * ((v27 - 119519730 - 2 * ((v27 - 152) & 0xF8E046A6)) ^ 0x2B4214AC)
                         + 2104631361
                         + v25;
  *(_DWORD *)(v27 - 148) = (69008221 * ((v27 - 119519730 - 2 * ((v27 - 152) & 0xF8E046A6)) ^ 0x2B4214AC)) ^ 1;
  *(_DWORD *)(v27 - 136) = a24 - 69008221 * ((v27 - 119519730 - 2 * ((v27 - 152) & 0xF8E046A6)) ^ 0x2B4214AC);
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v26 + 8 * a22))(v27 - 152);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * *(int *)(v27 - 152)))(v28);
}

uint64_t sub_1000A0664@<X0>(int a1@<W4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(void))(v16 + 8
                                    * (((a16 == (((a2 - 645) | 0x68) ^ (a1 - 71))) * (((a2 - 97) | 2) - 209)) ^ a2)))();
}

void sub_1000A06A4()
{
}

uint64_t sub_1000A0700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  STACK[0x360] = a9 + 1;
  int v59 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x420];
  STACK[0x508] = v58 - 112;
  return v59(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1000A0720(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  int v40 = (a2 - 53) | 0x420;
  int v35 = 831981571 * ((((2 * (v34 - 120)) | 0xA7832B06) - (v34 - 120) - 1405195651) ^ 0xCA6045A7);
  *(void *)(v34 - 112) = a10;
  *(_DWORD *)(v34 - 120) = (a13 + 875357039) ^ v35;
  *(_DWORD *)(v34 - 116) = v35 + a2 + 1181;
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v33 + 8 * (a2 ^ 0x990)))(v34 - 120);
  uint64_t v37 = a33 & 0x3F;
  *(&a24 + (v37 ^ 0x2E)) = -9;
  return (*(uint64_t (**)(uint64_t))(v33 + 8 * ((((v37 ^ 0x2E) > 0x37) * (v40 - 146)) ^ a2)))(v36);
}

uint64_t sub_1000A0830()
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((((v2 ^ 0x7AB) + 3880) * (v0 == v1)) ^ v2)))(3095667141);
}

uint64_t sub_1000A0868(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1009
                                * ((((*(unsigned __int8 *)(a2 + 3) - 137) << ((v5 - a3) ^ (v3 + 1))) & v7)
                                 + ((*(unsigned __int8 *)(a2 + 3) - 137) ^ v6) == v6)) ^ v5)))();
}

uint64_t sub_1000A08B0(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * (((((v3 - 1175) | 0x1B) - 186) * ((a3 + a2 + 422776967) < 8)) ^ v3)))();
}

uint64_t sub_1000A0924()
{
  return sub_1000A092C();
}

uint64_t sub_1000A092C(double a1, double a2, int8x16_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  uint64_t v50 = *(void *)(v46 + 8 * v45);
  int v51 = BYTE4(a37) ^ 0x89;
  if (v51 != 2)
  {
    if (v51 == 1)
    {
      int8x16x4_t v71 = vld4q_s8(v44);
      uint8x16_t v52 = (uint8x16_t)veorq_s8(v71.val[2], a3);
      _Q27 = vmovl_high_u8(v52);
      _Q26 = vmovl_u8(*(uint8x8_t *)v52.i8);
      __asm
      {
        SHLL2           V26.4S, V26.8H, #0x10
        SHLL2           V27.4S, V27.8H, #0x10
      }
      JUMPOUT(0x1000A0A9CLL);
    }
    JUMPOUT(0x1000A0DC0);
  }
  int8x16x4_t v72 = vld4q_s8(v44);
  HIDWORD(a18) = HIDWORD(a36);
  uint8x16_t v59 = (uint8x16_t)veorq_s8(v72.val[1], a3);
  _Q23 = vmovl_u8(*(uint8x8_t *)v59.i8);
  _Q22 = vmovl_high_u8(v59);
  __asm
  {
    SHLL2           V24.4S, V22.8H, #0x10
    SHLL2           V25.4S, V23.8H, #0x10
  }
  int v64 = (_DWORD *)(v43 + 4 * (v47 + 1902818082));
  int v65 = *(v64 - 8) ^ *(v64 - 3);
  unsigned int v66 = v65 + v49 - ((2 * v65) & 0xBCD7C1CC);
  int v67 = *(v64 - 16) ^ *(v64 - 14);
  HIDWORD(v68) = v67 ^ 0x5E6BE0E6 ^ v66;
  LODWORD(v68) = v67 ^ ~v66;
  *int v64 = (v68 >> 31) + v49 - ((2 * (v68 >> 31)) & 0xBCD7C1CC);
  unint64_t v69 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8 * ((21 * (v48 == 1902818019)) ^ 0x4E9u));
  LODWORD(a19) = BYTE4(a37) ^ 0xFFFFFF89;
  return v69(3168256460, a5, v69, a7, 1257, a35, a10, HIDWORD(a36), a12, a13, a14, a15, a16, a17, a18, a19, __PAIR64__(a36, HIDWORD(a35)), v50, __PAIR64__(a35, HIDWORD(a34)),
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

void sub_1000A0D6C()
{
}

uint64_t sub_1000A0E48(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23)
{
  return (*(uint64_t (**)(void))(v25
                              + 8
                              * (a3 | (32
                                     * ((unint64_t)(&a23 + a13 + (v24 + v23 + 1012)) < ((a3 - a7 - 1808) ^ (a5 + 1507) ^ 0x5F5uLL))))))();
}

uint64_t sub_1000A0E90(int a1, uint64_t a2, int a3)
{
  int v8 = v5 + v4;
  if ((v8 + v6 + 1147) > 0x40) {
    int v3 = v8 + v6 + 1147;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((59 * (a3 - v8 < (a1 + v3))) ^ 0x8DDu)))();
}

uint64_t sub_1000A0EF4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1641 * (v1 + 1 == v3 + 44)) ^ a1)))();
}

uint64_t sub_1000A0FC0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((343 * ((a7 + 1 + v7) < 0x20)) ^ a2)))();
}

uint64_t sub_1000A1090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v11 = *(unsigned __int8 *)(v9 + a3 - 0xAD445910E4CF20) - *(unsigned __int8 *)(v7 + a3 - 0xAD445910E4CF20);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((683 * ((((a6 + v8 - 248) ^ 0xB6DA1D27) & (2 * v11)) + (v11 ^ v6) == v6)) ^ v8)))(4294925278);
}

uint64_t sub_1000A10F4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * ((v3 + 814) | (2
                                                                    * (v1
                                                                     + v2
                                                                     + (((v3 - 114) | 0x90) ^ (v5 + 978)) < ((v3 - 114) ^ 0x449u))))))(a1, a1);
}

void sub_1000A1144()
{
}

uint64_t sub_1000A11D4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2
                                                     + 8
                                                     * ((((65 * (v3 ^ (v3 + 7))) ^ (2 * (v3 ^ (v3 + 7) ^ 0x16E)) ^ 0x9F)
                                                       * (v1 < 0xD798F02C)) ^ (v3 - 1340330937))))(a1, 1340331655);
}

uint64_t sub_1000A1234()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v2 + 46) ^ 0x53 ^ ((v1 & (2 * (*(unsigned __int8 *)(v3 + 8) - 5)))
                                                                       + ((*(unsigned __int8 *)(v3 + 8) - 5) ^ v0) == v0)) & 1)
                                * (((v2 - 266925522) & 0xFE8F7FD) - 751)) | v2)))();
}

void sub_1000A1290(uint64_t a1)
{
  int v1 = 1178560073 * ((a1 - 2 * (a1 & 0xA5CBBCEE) - 1513374482) ^ 0x42FE9E86);
  int v2 = *(_DWORD *)(a1 + 32) ^ v1;
  uint64_t v3 = (char *)*(&off_10026C690 + v2 - 295) - 4;
  int v4 = (*(unsigned char *)(a1 + 16) - v1);
  (*(void (**)(char *, uint64_t (*)()))&v3[8 * v2 + 16320])((char *)*(&off_10026C690 + (v2 ^ 0x14D)) - 12, sub_100076BA8);
  uint64_t v6 = *(void *)*(&off_10026C690 + v2 - 269);
  unsigned int v5 = (235795823 * (((&v5 | 0xAD911F22) - (&v5 & 0xAD911F22)) ^ 0x393C567B)) ^ (v2 + 727);
  (*(void (**)(unsigned int *))&v3[8 * v2 + 16040])(&v5);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000A13E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v17 - 128) = v12;
  *(void *)(v17 - 120) = v14;
  *(void *)(v17 - 104) = a11;
  *(void *)(v17 - 144) = v13;
  *(void *)(v17 - 136) = v12;
  *(_DWORD *)(v17 - 112) = v15 - 1224239923 * ((v17 - 144) ^ 0xF2B3FDD7) - 366;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v15 ^ 0xBB5)))(v17 - 144);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((15
                                              * (v11 - 1131453695 + ((296 * (v15 ^ 0x34C)) ^ 0x78Cu) - 813 > 0x7FFFFFFE)) | (296 * (v15 ^ 0x34C)))))(v18);
}

uint64_t sub_1000A1484@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15, int a16)
{
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (int)((((a16 + 209) ^ a14 & 0x812B04F9) * (a3 == v18)) ^ (v17 + a2 + 459))))(a1);
}

uint64_t sub_1000A14D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  a20 = a9 - 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * ((1472 * ((((((v20 + 553912508) | 0x185AC142u) + v22) ^ 0xFFFFFFFFFFFFCF4) & (*(&a20 + 6 * (a9 - 866215441) + 2) + (int)a6)) == 2)) ^ v20)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_1000A1590()
{
  BOOL v3 = v1 == 829 * ((v0 - 668) ^ 0xC0u) - 1594;
  return (*(uint64_t (**)(void))(v2 + 8 * (((16 * v3) | (32 * v3)) ^ (v0 - 668))))();
}

uint64_t sub_1000A15D0(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,unsigned int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  unsigned int v59 = ((*v58 & 0x7FFFFFFE | (((v55 + 222) ^ (a1 - 392)) + 807151993) & v58[623]) >> (((v55 + 106) | 0x83) ^ a25)) ^ v58[396];
  v58[623] = (v59 + v56 - (a4 & (2 * v59))) ^ *((_DWORD *)&a55 + (*v58 & 1));
  return (*(uint64_t (**)(void))(v57 + 8 * ((1512 * (a38 > 0x26F)) ^ (v55 + 222))))();
}

void sub_1000A166C()
{
}

uint64_t sub_1000A171C@<X0>(int a1@<W5>, int a2@<W6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18)
{
  *(&a18 + (v20 + a3)) = *(unsigned char *)(v18 + v22 - 180871394)
                                     - ((2 * *(unsigned char *)(v18 + v22 - 180871394)) & 0xEF)
                                     + 119;
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * (((8 * ((a1 + v20 + 1) < 0x40)) | (16
                                                                               * ((a1 + v20 + 1) < 0x40))) ^ (a2 + v19 + 650))))();
}

uint64_t sub_1000A1790(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v10 = (v6 - 365) | 0x124;
  *(unsigned char *)(v8 + v5 + a5 + ((v10 - 1412) | v7) - 57) = a1;
  return (*(uint64_t (**)(void))(v9 + 8 * ((73 * ((unint64_t)(v5 + 1 + v8) < 0x40)) ^ v10)))();
}

uint64_t sub_1000A17DC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((31
                                * (((3 * (v3 ^ 0x93)) ^ (v1 + v0 + 92508242 < 6 * (v3 ^ 0x330u) - 400)) & 1)) ^ v3 ^ 0x514)))();
}

void sub_1000A1854()
{
}

void sub_1000A1880()
{
}

void sub_1000A1888(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (235795823 * (a1 ^ 0x94AD4959));
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = (char *)*(&off_10026C690 + v1 - 1022) - 4;
  (*(void (**)(char *, uint64_t (*)()))&v3[8 * (v1 ^ 0xD67)])((char *)*(&off_10026C690 + v1 - 1051) - 12, sub_10009CEB8);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000A192C(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8
                                                * (((v5 + ((a4 + 285214254) | 0x48488111) + 26) * (v6 != a2)) ^ a4)))(0);
}

uint64_t sub_1000A1970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_1000A19D0(a11 - 0x5E8E72AB319E4281, a7 - 0x5E8E72AB319E4281, 0x3DFEDDED6F8DEFE1, 3743145922, 0xFF1BBFDABFFBFB00, 691);
}

uint64_t sub_1000A19D0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v19 = 4 * (v14 + v12);
  int v20 = v6 + v15 + (*(_DWORD *)(*a1 + v19) ^ (v16 + v8 + 501 - 1886));
  *(_DWORD *)(*a2 + v19) = v20 + v16 - (v13 & (2 * v20));
  int v21 = v14 + 1 + v9;
  int v22 = (v17 > v11) ^ (v21 < v7);
  BOOL v23 = v21 < v10;
  if (v22) {
    BOOL v23 = v17 > v11;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * ((v23 * a6) ^ v8)))();
}

uint64_t sub_1000A1A5C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 - 7 + (v4 + 1477247020 + v3 - v5)) = *(void *)(v1
                                                                              - 7
                                                                              + (v4 + 1477247020 + v3 - v5));
  return (*(uint64_t (**)(void))(v7 + 8 * ((3622 * (v6 - (v2 & 0xFFFFFFF8) - 1728 == -v5)) ^ v6)))();
}

uint64_t sub_1000A1AC0()
{
  *(void *)(v5 - 128) = v2;
  *(void *)(v5 - 120) = v0;
  *(_DWORD *)(v5 - 136) = (v4 - 508) ^ (268847287
                                      * ((2 * ((v5 - 136) & 0x67744AF8) - (v5 - 136) - 1735674621) ^ 0x6721A42B));
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v4 + 791)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((((v4 - 1557369926) & 0x5CD38F3B ^ 0xC77) + (v4 ^ 0x7B7))
                                              * (v1 == 924273944)) ^ v4)))(v6);
}

uint64_t sub_1000A1B7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A1C14(a1 - 0x5E8E72AB319E4281, 909065907, 0xAF7FBD4CDDEFD5EDLL, 0x1BBDFABDALL, 0x79BEDEFFB39FFB38, 311225851, 3385901388, 433);
}

uint64_t sub_1000A1C14(void *a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  uint64_t v20 = 4 * (v17 + v14);
  int v21 = v8 + v19 + (*(_DWORD *)(*v12 + v20) ^ v15) - (*(_DWORD *)(*v13 + v20) ^ v15);
  *(_DWORD *)(*a1 + v20) = v21 + v15 - (((v11 - 211) ^ (v18 + 345)) & (2 * v21));
  BOOL v22 = v9 > a2;
  if (v22 == v17 + a6 < a7) {
    BOOL v22 = v17 + a6 < v10;
  }
  return (*(uint64_t (**)(void))(v16 + 8 * ((v22 * a8) ^ v11)))();
}

void sub_1000A1CB0()
{
}

uint64_t sub_1000A1CBC(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (69008221 * ((((2 * a1) | 0xE6169F4E) - a1 + 217362521) ^ 0x20A91DAD));
  uint64_t v2 = *(void *)*(&off_10026C690 + (int)(v1 ^ 0x7F7DFDF7));
  unsigned int v5 = (235795823 * (((&v4 | 0x234F2E8E) - (&v4 & 0x234F2E8E)) ^ 0xB7E267D7)) ^ (v1 - 2138963059);
  uint64_t v4 = v2;
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_10026C690 + (int)(v1 ^ 0x7F7DFD9D))
                                              + 8 * (int)(v1 - 2138960909)
                                              - 4))(&v4);
}

void sub_1000A1DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  uint64_t v14 = *(void *)(v12 + 48);
  *(void *)(*(void *)(v12 + 64) - 0x24EBBF705D8874E0) = v13;
  *(_DWORD *)(v14 - 0x7D0C57D6EC0D5B6ALL) = a12;
  JUMPOUT(0x10007CE50);
}

uint64_t sub_1000A1E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  a16 = v17
      + 1178560073 * (((~&a15 & 0xD8E99ADE) - (~&a15 | 0xD8E99ADF)) ^ 0x3FDCB8B7)
      - 504208101;
  uint64_t v18 = (*(uint64_t (**)(int *))(v16 + 8 * (v17 ^ 0xD10u)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * (((a15 == -563355418) * ((v17 + 1125) ^ 0x42D)) ^ v17)))(v18);
}

uint64_t sub_1000A1E9C(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))*(&off_100267840 + ((56 * (*(_DWORD *)(a2 + 4) != 1704253546)) ^ 0x192u)))(4294925278);
}

void sub_1000A1EE0()
{
}

uint64_t sub_1000A1EE8(uint64_t a1, __n128 a2, __n128 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, int a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33)
{
  v34.n128_u64[0] = 0x7878787878787878;
  v34.n128_u64[1] = 0x7878787878787878;
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128, __n128, __n128))(v33
                                                                             + 8
                                                                             * ((424
                                                                               * (((a21 + 1) ^ (a18 + ((2 * (STACK[0x2D0] & 0x1F)) ^ 0x1C) + (STACK[0x2D0] & 0x3F ^ 0x7FFDEDB1u) < (a33 ^ 0x303u) - 890)) & 1)) ^ (a33 + 1710))))(a1, 3263642209, a2, a3, v34);
}

uint64_t sub_1000A1FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((2036 * ((v7 & 0x18) == ((a6 + 67) | 0x11C) + v6 + ((a6 + 172556291) | 0xE0128090))) ^ a6)))();
}

void sub_1000A1FF4(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_1000A2038()
{
}

uint64_t sub_1000A2058@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  a4 = v7;
  a5 = a1;
  a3 = v7;
  a6 = v8 + 1224239923 * ((&a3 + 396803106 - 2 * ((unint64_t)&a3 & 0x17A6BC22)) ^ 0xE51541F5) - 421;
  uint64_t v9 = (*(uint64_t (**)(uint64_t *))(v6 + 8 * (v8 ^ 0xAB5)))(&a3);
  return sub_1000A20B8(v9);
}

uint64_t sub_1000A20E4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10)
{
  BOOL v12 = a10 < 0x9F39C153;
  unsigned int v13 = v10 + ((a1 + 310169490) & 0xED8329FF ^ 0x2ADE71E7);
  int v14 = v12 ^ (v13 < 0x9F39C153);
  BOOL v15 = v13 < a10;
  if (!v14) {
    BOOL v12 = v15;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((23 * v12) ^ a1)))();
}

uint64_t sub_1000A216C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned int a28,uint64_t a29,unsigned int a30,uint64_t a31,uint64_t a32,int a33)
{
  uint64_t v39 = ((v34 ^ 0x7F73C4F205F91AD5)
       - 0x4211752C10F41757
       - ((2 * (v34 ^ 0x7F73C4F205F91AD5)) & 0x7BDD15A7DE17D152)
       + (v36 + 10)
       - 380) ^ a7;
  uint64_t v40 = __ROR8__(__ROR8__(v33 ^ a29, 12) ^ 0xA9F5355D327AAF0FLL, 52);
  uint64_t v41 = v40 ^ 0x322397601515A6F7;
  uint64_t v42 = ((v40 ^ 0x322397601515A6F7)
       - 0x15B087F26EF738EFLL
       - (((v36 ^ 0xD0u) - 0x2B610FE4DDEE7380) & (2 * (v40 ^ 0x322397601515A6F7)))) ^ v38;
  uint64_t v43 = v37 ^ v34 ^ 0x7F73C4F205F91AD5;
  unint64_t v44 = (v39 ^ 0x97FBFBAE09CFCCD0) & (v40 ^ 0x322397601515A6F7);
  v39 ^= 0x68040451F630332FuLL;
  unint64_t v45 = (v42 ^ 0xE4C1C31231B4037DLL) & (v40 ^ 0xCDDC689FEAEA5908) ^ v39;
  unint64_t v46 = v42 ^ 0xE4C1C31231B4037DLL ^ (v43 ^ 0x101580FBE5F339FCLL) & (v37 ^ 0xEFEA7F041A0CC603);
  uint64_t v47 = (v42 ^ 0x1B3E3CEDCE4BFC82) & (v37 ^ 0x101580FBE5F339FCLL);
  *((void *)&v48 + 1) = v37 ^ 0x39FC;
  *(void *)&long long v48 = v37 ^ 0x101580FBE5F30000;
  unint64_t v49 = ((v44 - ((2 * v44) & 0x9AE726132CF457FCLL) - 0x328C6CF66985D402) ^ v43 ^ 0xDD6613F273891202) & 0x90DEF08A367683D6 | ((v44 - ((2 * v44) & 0x1AE726132CF457FCLL) + 0x4D739309967A2BFELL) ^ v43 ^ 0xDD6613F273891202) & 0x6F210F75C9897C29;
  unint64_t v50 = v47 ^ v41 ^ v45;
  unint64_t v51 = v39 & (v43 ^ 0xEFEA7F041A0CC603);
  unint64_t v52 = __ROR8__(__ROR8__(v45, 38) ^ __ROR8__(v49, 38) ^ 0xB8AB4977971512F1, 26);
  LOBYTE(v47) = *(unsigned char *)(a31 + ((((v50 >> 61) ^ 4) + 241) ^ 0x78));
  char v53 = 4 * (v47 ^ 0xDD) - ((8 * (v47 ^ 0xDD)) & 0x58) + 44;
  char v54 = v47 ^ 0xE5;
  char v55 = (v47 ^ 0xE5) + (v53 ^ ((v47 ^ 0xDD) + ~(2 * ((v47 ^ 0xDD) & 0x2E ^ v47 & 2)) + 45) ^ 0xC7) + 1;
  unint64_t v56 = v51 ^ __ROR8__((v48 >> 16) ^ 0x4D81525DA35B383ALL, 48) ^ v46;
  char v57 = (v53 ^ 0xD3) + 24;
  char v58 = (~(2 * (v53 ^ 0xD3) + 2) | 0xD1) + v57 + (v55 & 0x40);
  if ((v55 & 0x40 & ((v53 ^ 0xD3) + 1)) != 0) {
    char v58 = ~(v55 & 0x40 | (2 * ((v53 ^ 0xD3) + 1)) & 0x28) + v57;
  }
  char v59 = v58 ^ ((v55 & 0xBF) - ((2 * v55) & 0x2C) + 22);
  unsigned __int8 v60 = ((v59 - ((2 * v59) & 0x58) + 44) ^ v53) + v54;
  *((void *)&v61 + 1) = ~v46;
  *(void *)&long long v61 = v46 ^ 0x92CFC162FD513142;
  uint64_t v62 = v46 ^ 0x3F46C6A670CB9C82 ^ ((v61 >> 1) - ((2 * (v61 >> 1)) & 0x5B120F891B355B82) - 0x5276F83B7265523FLL);
  unint64_t v63 = v62 ^ (v46 << 58);
  unint64_t v64 = __ROR8__(v46, 57) & 0xFFFFFFFFFFFFE07FLL;
  *((void *)&v61 + 1) = v62;
  *(void *)&long long v61 = v63 ^ 0xC00000000000000;
  uint64_t v65 = v61 >> 51;
  uint64_t v66 = v50 ^ (v50 >> 39) ^ (8 * v50) ^ (((v60 >> 1) | (v60 << 7)) | (v50 << 25));
  uint64_t v67 = v66 ^ 0x39AF9918B32AE22FLL;
  uint64_t v68 = v65 + (v64 ^ 0x8F8AC7F1FBA51795);
  unint64_t v69 = v49 << 23;
  unint64_t v70 = (v49 << 23) ^ 0xFBA827E079000000;
  unint64_t v71 = (((v52 << 45) ^ (v52 << 36)) & 0xFFFFFFF000000000 | (v52 >> 28)) ^ (v52 >> 19) ^ 0xD0A2B87327B31AB3;
  uint64_t v72 = v71 - ((2 * v71) & 0x79AF49E4EBC10BBCLL) + 0x3CD7A4F275E085DELL;
  unint64_t v73 = v49 ^ (v49 >> 41) ^ (v49 >> 7) ^ (((v49 << 57) ^ 0xE400000000000000)
                                        - ((2 * ((v49 << 57) ^ 0xE400000000000000)) & 0x4444444444444444)
                                        + 0x23DE67E612E394A5);
  uint64_t v74 = v73 & 0x10000000000000;
  uint64_t v75 = v73 & 0x10000000000000 | 0x86D8BBB6287F489;
  unint64_t v76 = v73 & 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v77 = __ROR8__(v68 - 2 * (v65 & (v64 ^ 0x8F8AC7F1FBA51795)), 13);
  unint64_t v78 = v56 ^ (v56 >> 10) ^ (v56 << 47) ^ ((v56 >> 17) | (v56 << 54));
  if ((v74 & v69) != 0) {
    uint64_t v79 = 0x10DB1776C50FE912 - v75;
  }
  else {
    uint64_t v79 = v75;
  }
  uint64_t v80 = (v70 - 0x86D8BBB6287F489 + v79) ^ v76;
  unint64_t v81 = ((v80 ^ 0x9589325EAC575745)
       - ((2 * (v80 ^ 0x9589325EAC575745)) & 0xE24B1691CEDBA44CLL)
       + 0x71258B48E76DD226) ^ v78;
  uint64_t v82 = __ROR8__(__ROR8__(v81 ^ 0x464DB9765407BD9FLL, 23) ^ 0x6C4FE5A873E441B7, 41);
  uint64_t v83 = v67 ^ (v77 + 0x1FF6B319107136C2 - ((2 * v77) & 0x3FED663220E26D84));
  uint64_t v84 = v72 ^ v52 ^ v80;
  unint64_t v85 = v82 & (v78 ^ 0x1CAE3FE19723B7B4) ^ v83;
  unint64_t v86 = (v84 ^ 0x63229535C0A5DE88 | ~v82)
      + ((v82 + 0x40482C2FF6FA087ELL - ((2 * v82) & 0x8090585FEDF410FCLL)) ^ v84 ^ 0x236AB91A365FD6F6)
      + 1;
  unint64_t v87 = (((v83 ^ 0xBEE74353B47A99EDLL) & (v66 ^ 0xD9A6D5FE5CA42B12))
       + 0x40482C2FF6FA087ELL
       - ((2 * ((v83 ^ 0xBEE74353B47A99EDLL) & (v66 ^ 0xD9A6D5FE5CA42B12))) & 0x8090585FEDF410FCLL)) ^ v84 ^ 0x236AB91A365FD6F6;
  unint64_t v88 = v81 ^ (v84 ^ 0x9CDD6ACA3F5A2177) & (v66 ^ 0x26592A01A35BD4EDLL);
  unint64_t v89 = ((v87 ^ (v83 ^ 0x4118BCAC4B856612) & (v78 ^ 0xE351C01E68DC484BLL))
       + 0x1FF6B319107136C2
       - ((2 * (v87 ^ (v83 ^ 0x4118BCAC4B856612) & (v78 ^ 0xE351C01E68DC484BLL))) & 0x3FED663220E26D84)) ^ v67;
  unint64_t v90 = ((v85 ^ 0xBEE74353B47A99EDLL) >> 27) ^ __ROR8__(v78 ^ 0xE1DE6585B59498FDLL, 27);
  *((void *)&v92 + 1) = v88 ^ v87 ^ 0xE94FF8E;
  *(void *)&long long v92 = v88 ^ v87 ^ 0x3E0844A280000000;
  uint64_t v91 = v92 >> 28;
  unint64_t v93 = v86 ^ __ROR8__(v90 ^ (((v85 ^ 0xBEE74353B47A99EDLL) << 37)- (((v85 ^ 0xBEE74353B47A99EDLL) << 38) & 0x1379170000000000)- 0x7643747485F20715), 37);
  *(void *)&long long v92 = __ROR8__(v88 ^ v87, 19);
  unint64_t v94 = (v91 ^ v92 ^ 0x9FF1C7C1089451D2)
      - 2 * ((v91 ^ v92 ^ 0x9FF1C7C1089451D2) & 0x5561C4A700F5ED3FLL ^ (v91 ^ v92) & 4)
      - 0x2A9E3B58FF0A12C5;
  *((void *)&v92 + 1) = v89 ^ 0x1747C156E755AED6;
  *(void *)&long long v92 = v89 ^ 0x4000000000000000;
  uint64_t v95 = v89 ^ __ROR8__(v89, 39) ^ (v92 >> 61);
  unint64_t v96 = v95 ^ 0xE968B9F952FD813FLL;
  uint64_t v97 = v95 & 0x7C09B5691D153F3ALL;
  unint64_t v98 = ((v88 >> 7) ^ (v88 >> 41) | (v88 << 57)) ^ (v88 << 23) ^ 0x87178018C81845E5;
  unint64_t v99 = v98 - ((2 * v98) & 0xBD0703CD90A8D7E8) + 0x5E8381E6C8546BF4;
  unint64_t v100 = v99 ^ v88;
  unint64_t v101 = v99 ^ v87 ^ v94;
  unint64_t v102 = v93 ^ (v93 << 47) ^ (v93 >> 10) ^ (v93 >> 17) ^ (v93 << 54);
  unint64_t v103 = (v100 & (unint64_t)&_mh_execute_header & 0xFFFFFFFDFFFFFFFFLL | ((((v100 & (unint64_t)&_mh_execute_header) >> 32) & 1) << 33)) ^ 0x14FF2FB9FC5AFBEFLL;
  unint64_t v104 = v103 - 0x140208806442AA00;
  unint64_t v105 = v100 & 0xFFFFFFFEFFFFFFFFLL;
  unint64_t v106 = ((v85 ^ 0xD1A234CC1D2559D7) >> 6) ^ (v85 >> 1) ^ (((v85 ^ 0xD1A234CC1D2559D7) << 58) | v85 ^ 0xD1A234CC1D2559D7) ^ ((((v85 ^ 0xD1A234CC1D2559D7) << 58) & (v85 ^ 0xD000000000000000) ^ ((v85 ^ 0xD1A234CC1D2559D7) << 63)) + 0x13E1D3F21906A06BLL - ((2 * (((v85 ^ 0xD1A234CC1D2559D7) << 58) & (v85 ^ 0xD000000000000000))) & 0x2000000000000000)) ^ v95 ^ 0xE968B9F952FD813FLL;
  uint64_t v107 = v106 ^ 0x68D11A660E92ACEBLL;
  unint64_t v108 = v103 - 0x14FF2FB9FC5AFBEFLL;
  unint64_t v109 = 0x15FC56F394734DDELL - v103;
  if (((v102 ^ 0xBEE8B63400000000) & v108) == 0) {
    unint64_t v109 = v104;
  }
  unint64_t v110 = ((v102 ^ 0xBEE8B6349A795903) - 0xFD2739981851EFLL + v109) ^ v105;
  *((void *)&v111 + 1) = v101 ^ 0x148049669;
  *(void *)&long long v111 = v101 ^ 0xBDA6764C00000000;
  unint64_t v112 = (v110 ^ 0xA93009B7399A7B23) & (v101 ^ 0xBDA6764D48049669);
  char v113 = v110 & 1;
  *(void *)&long long v111 = __ROR8__((v111 >> 33) ^ __ROR8__((v106 ^ 0x68D11A660E92ACEBLL) & (v95 ^ 0x57695F4B404DEABLL), 33) ^ 0xCF4F457632C10184, 31);
  unint64_t v114 = (v101 ^ 0x425989B2B7FB6996) & (v95 ^ 0xFA896A0B4BFB2154);
  uint64_t v115 = (v110 ^ 0x56CFF648C66584DCLL) & (v102 ^ 0x411749CB6586A6FCLL);
  unint64_t v116 = v110 ^ (v114 - ((2 * v114) & 0x91B033CD1CB437D4) - 0x3727E61971A5E416);
  unint64_t v117 = v106 ^ 0x972EE599F16D5314;
  unint64_t v118 = v115 ^ v107;
  unint64_t v119 = (v102 ^ 0xBEE8B6349A795903) & v117;
  unint64_t v120 = v115 ^ v107 ^ v102 ^ (v112 - ((2 * v112) & 0x21E21BD94BDA7906) + 0x10F10DECA5ED3C83);
  unint64_t v121 = v116 ^ v111;
  unint64_t v122 = v111 ^ v96 ^ (v119 + 0x13E1D3F21906A06BLL - ((2 * v119) & 0x27C3A7E4320D40D6));
  unint64_t v123 = (v116 ^ (unint64_t)v111) << 36;
  unint64_t v124 = (v118 ^ 0x7955EAEC4D48B80CLL) >> v113 >> (v113 ^ 1u);
  uint64_t v125 = v122 ^ 0x5ECC204877AA9C78 ^ (((v122 >> 61) ^ (v122 >> 39) ^ 0xAFF5F4)
                                      - ((2 * ((v122 >> 61) ^ (v122 >> 39) ^ 0xAFF5F4)) & 0x2EF8850)
                                      + 0x936DB791777C428);
  uint64_t v126 = (((v122 << 25) ^ 0x62C1BAB0A0000000 ^ -(uint64_t)((v122 << 25) ^ 0x62C1BAB0A0000000) ^ (v125
                                                                                                  - (v125 ^ (v122 << 25) ^ 0x62C1BAB0A0000000)))
        + v125) ^ (8 * v122);
  uint64_t v127 = ((v116 >> 41) | (v116 << 57)) ^ (v116 >> 7) ^ (((v116 << 23) ^ 0x5B0C10DA11000000)
                                                      - ((2 * ((v116 << 23) ^ 0x5B0C10DA11000000)) & 0x7209D6B795000000)
                                                      - 0x46FB14A43502C6A2);
  unint64_t v128 = v127 ^ v116;
  unint64_t v129 = (v120 >> 10) ^ (v120 << 47) ^ (v120 >> 17) ^ (v120 << 54) ^ 0x9F7734F167C3DEF9;
  uint64_t v130 = (v129 - ((2 * v129) & 0xAF67954E5CB161CLL) + 0x57B3CAA72E58B0ELL) ^ v120;
  unint64_t v131 = v130 ^ 0xBD892B1A1D4125B8;
  uint64_t v132 = v123 ^ (v121 << 45) ^ (v121 >> 19) ^ (v121 >> 28) ^ 0x62D32FBB7CAD078DLL;
  uint64_t v133 = v128 ^ v130;
  uint64_t v134 = v127 ^ v111 ^ (v132 - ((2 * v132) & 0x6767BCBB0E0402EELL) + 0x33B3DE5D87020177);
  unint64_t v135 = (((v118 << 58) ^ (v118 << 63)) & 0xFC00000000000000 | (v118 >> 6)) ^ v124;
  uint64_t v136 = ((v135 ^ 0x31E557ABB13522E0)
        + 0x38B2BC1D34E7A15DLL
        - 2 * ((v135 ^ 0x31E557ABB13522E0) & 0x38B2BC1D34E7A15FLL ^ v135 & 2)) ^ v118;
  uint64_t v137 = v136 ^ 0x41E756F179AF1951;
  unint64_t v138 = ((v136 ^ 0x41E756F179AF1951)
        + 0x4AFE057ACA1B3713
        - 2 * ((v136 ^ 0x41E756F179AF1951) & 0x4AFE057ACA1B373BLL ^ v136 & 0x28)) ^ v126 ^ 0xF529DCF1CCF1F593;
  uint64_t v139 = (v126 ^ 0x40282674F9153D7FLL) & v137;
  unint64_t v140 = ((v131 & ~v138) + 0x4AFE057ACA1B3713 - ((2 * (v131 & ~v138)) & 0x95FC0AF594366E26)) ^ v126 ^ 0xF529DCF1CCF1F593;
  unint64_t v141 = v138 ^ (v128 ^ v130 ^ 0xF97C65BEA3F1ABFELL) & (v130 ^ 0x4276D4E5E2BEDA47);
  uint64_t v142 = (v139 - ((v139 - 0x674D9E2138A8378ALL - ((2 * v139) & 0x3164C3BD8EAF90ECLL)) ^ v134 ^ 0x7A65DCD93DEFD497)) ^ ((v134 ^ 0x1D2842F80547E31ELL) + 1);
  uint64_t v143 = ((v142 - 0x674D9E2138A8378ALL - ((2 * v142) & 0x3164C3BD8EAF90ECLL)) ^ v134 ^ 0x7A65DCD93DEFD497) + v139;
  unint64_t v144 = v140 ^ v143;
  unint64_t v145 = (((2 * v133) ^ 0xD073482B81CA803) + (v133 ^ 0xF97C65BEA3F1ABFELL)) & (v134 ^ 0xE2D7BD07FAB81CE1);
  unint64_t v146 = (((v126 ^ 0xBFD7D98B06EAC280) & (v134 ^ 0x1D2842F80547E31ELL))
        - ((2 * ((v126 ^ 0xBFD7D98B06EAC280) & (v134 ^ 0x1D2842F80547E31ELL))) & 0xDFB99E0B92C09BD4)
        + 0x6FDCCF05C9604DEALL) ^ v133;
  unint64_t v147 = v143 ^ v146;
  *((void *)&v111 + 1) = v144 ^ 0x1877DA25;
  *(void *)&long long v111 = v144 ^ 0x425764BB40000000;
  uint64_t v148 = v111 >> 30;
  unint64_t v149 = v141 ^ v131 ^ v145;
  *((void *)&v111 + 1) = v147 ^ 0x1139E;
  *(void *)&long long v111 = v147 ^ 0x1560D5E9C780000;
  uint64_t v150 = (v144 << 25) ^ 0x76B0EFB44A000000;
  unint64_t v151 = v141 & 0xFDFEEACE34F5F11BLL ^ 0x3BDA1E3360BF843ALL ^ (v141 & 0x2011531CB0A0EE4 | (v141 << 58));
  unint64_t v152 = v148 ^ (v144 >> 61 << 34) ^ 0x84F57132E3442245;
  uint64_t v153 = (v146 >> 41) ^ 0x733381;
  uint64_t v154 = (v111 >> 19) ^ ((v147 ^ 0x96A0AABB6A91E614) << 36) ^ ((v147 ^ 0x96A0AABB6A91E614) >> 28) ^ 0x6E8F58A97F6A7E5FLL;
  uint64_t v155 = v147 ^ 0x16ECF169B3ABE2D9 ^ (v154 - ((2 * v154) & 0x2F75F86E5FA5E28ELL) + 0x17BAFC372FD2F147);
  unint64_t v156 = (-2
        - ((~(((v141 >> 1) ^ 0x858B8A3588FE4611) & 0xD8B3A347B12BA6E5) | 0xB02D7D7325CEE830)
         + (((v141 >> 1) ^ 0x858B8A3588FE4611) & 0x90212143210AA020 | 0x4FD2828CDA3117CFLL))) ^ ((v141 >> 1) ^ 0x858B8A3588FE4611) & 0xD8B3AB47B12BA6E5;
  uint64_t v157 = __ROR8__(v152, 34);
  *((void *)&v111 + 1) = v146 ^ 0x69;
  *(void *)&long long v111 = v146 ^ 0xE667026899F5DB80;
  uint64_t v158 = v146 ^ 0xDF1CB01A15D39B8FLL ^ ((v111 >> 7) - ((2 * (v111 >> 7)) & 0x72F764E5184C80CCLL) + 0x397BB2728C264066);
  uint64_t v159 = (v157 ^ (v144 >> 39) ^ 0x84AEC9) + v150;
  uint64_t v160 = v157 & v150;
  uint64_t v161 = v158 & v153;
  uint64_t v162 = v158 + v153;
  unint64_t v163 = v151 ^ (v141 << 63);
  uint64_t v164 = v159 - 2 * v160;
  uint64_t v165 = v156 ^ 0x1DC478FD4583D433 ^ (v163 - ((2 * v151) & 0x5BD20B1CC09A7806) - 0x5216FA719FB2C3FDLL);
  BOOL v166 = v97 == 0x7809200909112110;
  uint64_t v167 = v165 ^ 0x5216FA719FB2C3FCLL;
  if (v166) {
    uint64_t v167 = v156 ^ 0x1DC478FD4583D433;
  }
  uint64_t v168 = v164 ^ (8 * v144);
  uint64_t v169 = v165 + 2 * ((v167 ^ 0x2DE9058E604D3C03) & v151) + 0x58013DC2B89A8F86;
  if (((v156 ^ 0xB02D7D7325CEE830) & v163) != 0) {
    uint64_t v169 = ((v163 + (v156 ^ 0x4FD2828CDA3117CFLL) + 1) ^ 0x7B6DBFD2B8BADFFELL)
  }
         - 0x236C821000205078
         + ((2 * (v163 + (v156 ^ 0x4FD2828CDA3117CFLL) + 1)) & 0xF6DB7FA57175BFFCLL);
  uint64_t v170 = (v162 - 2 * v161) ^ (v146 << 23);
  unint64_t v171 = v149 ^ (v149 >> 10) ^ (v149 >> 17) ^ (v149 << 47) ^ (v149 << 54);
  uint64_t v172 = v170 ^ v171;
  *((void *)&v173 + 1) = v169 + 0x7FEC23D4765707ALL;
  *(void *)&long long v173 = v169 - 0x58013DC2B89A8F86;
  unint64_t v174 = v168 ^ 0xAA6A2D4BA2838D66;
  uint64_t v175 = __ROR8__(__ROR8__(v170, 57) ^ __ROR8__(v155, 57) ^ 0x588402B327C86711, 7);
  unint64_t v176 = v168 ^ 0xAA6A2D4BA2838D66 ^ (v141 >> 6) ^ __ROR8__(__ROR8__(v141, 62) & 0xFFFFBFFFFFFFFFFBLL ^ 0x4F1EC6363424B53DLL ^ (v173 >> 61), 3);
  unint64_t v177 = (v170 ^ 0x344CFAEDF4800000) & (v171 ^ 0xAEA93A9FECEAF928);
  uint64_t v178 = (v176 ^ 0x3CBE485844A65555) & (v171 ^ 0x5156C560131506D7);
  v176 ^= 0xC341B7A7BB59AAAALL;
  unint64_t v179 = v176 ^ v177;
  unint64_t v180 = v178 ^ v168 ^ 0xAA6A2D4BA2838D66;
  *((void *)&v173 + 1) = v175 ^ 0x16FDF2E892CF90CELL;
  *(void *)&long long v173 = v175;
  uint64_t v181 = v176 & (v168 ^ 0x5595D2B45D7C7299) ^ v175 ^ 0x16FDF2E892CF90CELL;
  unint64_t v182 = (v175 ^ 0x16FDF2E892CF90CELL) & (v172 ^ 0x9AE5C072186AF928);
  unint64_t v183 = (__ROR8__((v173 >> 38) ^ 0x2F851D43D911B5B3, 26) ^ 0xAD6F61F41EB8AF09) & v174 ^ v172;
  unint64_t v184 = v180 ^ v181;
  unint64_t v185 = ((v179 ^ v182) - ((2 * (v179 ^ v182)) & 0xF1F3FAD9BBFDD7A0) - 0x706029322011430) ^ v171;
  *((void *)&v173 + 1) = v183 ^ v181 ^ 0x3D2C8;
  *(void *)&long long v173 = v183 ^ v181 ^ 0x6C261CCEFCE00000;
  uint64_t v186 = v184 ^ (v184 >> 39) ^ (8 * v184) ^ (v184 << 25) ^ (v184 >> 61);
  uint64_t v187 = (v173 >> 19) ^ ((v183 ^ v181 ^ 0x651A3F8DE79506D7) << 36) ^ ((v183 ^ v181 ^ 0x651A3F8DE79506D7) >> 28);
  unint64_t v188 = v179 ^ 0x6DC4FB0BD4FFFF44;
  unint64_t v189 = __ROR8__(__ROR8__(v179 ^ 0x616B258C5FF13C26, 27) ^ 0x61D86C4195FBD0F1, 37);
  unint64_t v190 = ((v187 ^ 0xB76D41F000000000)
        + 0x56AF173809489612
        - 2 * ((v187 ^ 0xB76D41F000000000) & 0x56AF173809489617 ^ v187 & 5)) ^ v183 ^ v181;
  *((void *)&v173 + 1) = v183 ^ 0x12260634586;
  *(void *)&long long v173 = v183 ^ 0xE3EE980000000000 ^ (((v183 << 57) ^ 0xC00000000000000)
                                                  - ((2 * ((v183 << 57) ^ 0xC00000000000000)) & 0x5555555555555555)
                                                  - 0x54BEEFB68E9C6219);
  uint64_t v191 = ((v186 ^ 0xABCF8FE7C463E5DLL)
        + (v188 ^ (v188 >> 1) ^ (v189 << 58))
        - 2 * ((v186 ^ 0xABCF8FE7C463E5DLL) & (v188 ^ (v188 >> 1) ^ (v189 << 58)))) ^ ((v189 >> 6) | (v189 << 63));
  unint64_t v192 = v185 ^ (v185 >> 10) ^ (((v185 << 54) ^ (v185 << 47)) & 0xFFFF800000000000 | (v185 >> 17));
  unint64_t v193 = (v183 << 23) ^ 0x913031A2C3000000;
  uint64_t v194 = __ROR8__(__ROR8__(v183, 49) & 0xFFFFFFFFFFC07FFFLL ^ 0x1E5FD5EF68E2BB65 ^ (v173 >> 42), 22);
  uint64_t v195 = v193 & 0x228B35C087800000 | (v183 >> 41);
  unint64_t v196 = v194 ^ 0xDD74CA3F78583B7ELL;
  if (!v68) {
    unint64_t v196 = 0x228B35C087A7C481;
  }
  unint64_t v197 = v196 & v194 ^ v195;
  uint64_t v198 = v192 ^ 0x3011F09219995ED8;
  unint64_t v199 = v193 & 0xDD74CA3F78000000 ^ v194 & 0xDD74CA3F78583B7ELL ^ 0x8A7CCB6B3BB32CECLL ^ v197;
  unint64_t v200 = v190 ^ v199;
  unint64_t v201 = (v200 ^ 0xC576F40999968F14) & (v186 ^ 0xABCF8FE7C463E5DLL);
  uint64_t v202 = (v199 - 0xC018CEB344C2584 - 2 * (v199 & 0x73FE7314CBB3DA7DLL ^ v197 & 1)) ^ v198;
  unint64_t v203 = v200 ^ 0x3A890BF6666970EBLL ^ v191 & (v186 ^ 0xF543070183B9C1A2);
  unint64_t v204 = v202 ^ v201 ^ v203;
  *((void *)&v205 + 1) = v202 ^ v201 ^ v203 ^ 0x862;
  *(void *)&long long v205 = v204 ^ 0x6E829E585CD8000;
  *(void *)&long long v205 = __ROR8__((v205 >> 14) ^ __ROR8__(v204, 33) & 0xFFFC00007FFFFFFFLL ^ 0x7A565A2AF4F5B45ELL, 50);
  unint64_t v206 = (v205 ^ 0x968ABDE0682B2E2CLL) & 0x6181A3FA608E1D1DLL ^ ((v204 << 45) ^ 0xB10C400000000000) & 0x6181A00000000000 | (v205 ^ 0x968ABDE0682B2E2CLL) & 0x9E7E5C059F71E2E2 ^ ((v204 << 45) ^ 0xB10C400000000000) & 0x9E7E400000000000;
  if (a30 > 0xD5D7AA1E != (a33 - 101300644) < 0x2A2855E1) {
    BOOL v207 = a30 > 0xD5D7AA1E;
  }
  else {
    BOOL v207 = a33 - 101300644 < a28;
  }
  return (*(uint64_t (**)(unint64_t))(v35 + 8 * (v36 ^ (226 * !v207))))(v206 ^ (v204 >> 28) ^ (v204 << 36));
}

uint64_t sub_1000A3A64(double a1)
{
  *uint64_t v2 = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

uint64_t sub_1000A3A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v32 = v19;
  int v28 = 196 * (v18 ^ 0x50F);
  int v29 = ((((2 * (v27 - 144)) | 0x4F0C6938) - (v27 - 144) + 1484376932) ^ 0x3E27E4B8) * v20;
  *(void *)(v27 - 136) = v25;
  *(void *)(v27 - 128) = v26;
  *(_DWORD *)(v27 - 144) = (v21 + 1234792412 + v28) ^ v29;
  *(_DWORD *)(v27 - 140) = v29 + v18 + 12;
  (*(void (**)(uint64_t))(v22 + 8 * (v18 + 1108)))(v27 - 144);
  *(_DWORD *)(v27 - 144) = v28
                         - 1224239923
                         * ((((v27 - 144) | 0x608DC9E7) - (v27 - 144) + ((v27 - 144) & 0x9F723618)) ^ 0x923E3430)
                         - 1068;
  *(void *)(v27 - 136) = a17;
  *(void *)(v27 - 128) = v23;
  (*(void (**)(uint64_t))(v22 + 8 * (v28 ^ 0xFBC)))(v27 - 144);
  *(_DWORD *)(v27 - 136) = v28 - ((((2 * (v27 - 144)) | 0x495F6FA2) - (v27 - 144) - 615495633) ^ 0x683935AC) * v32 - 384;
  *(void *)(v27 - 128) = a16;
  *(void *)(v27 - 120) = v23;
  *(void *)(v27 - 144) = v25;
  *(void *)(v27 - 112) = a18;
  *(void *)(v27 - 104) = a17;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v28 ^ 0xF84)))(v27 - 144);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * ((((v28 - 668) ^ (v28 - 382833308) & 0x16D18FFF ^ 0xE) * (v24 == 0)) ^ v28)))(v30);
}

uint64_t sub_1000A3C30(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v19 = ((3 * (a4 ^ 0x4DE)) ^ 0x16229571) + (a17 ^ v17) - ((2 * (a17 ^ v17)) & 0x2C452384);
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((50
                                * (((2 * v19) & 0x7A6F5CF8 ^ 0x28450080) + (v19 ^ 0x2B153FBE) - 86016540 != 941042784)) ^ a4)))();
}

uint64_t sub_1000A3CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8
                                                                                         * ((920
                                                                                           * (a6 - 653949008 < (v6 ^ 0x316u))) ^ (v6 + 372))))(a1, a2, a3, a4, a5, 3037000498);
}

uint64_t sub_1000A3D20(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 + 235795823 * (a1 ^ 0x94AD4959);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  unsigned int v6 = v1
     - 460628867 * ((1948750583 - (v5 | 0x742792F7) + (v5 | 0x8BD86D08)) ^ 0xC74EEF75)
     - 426521943;
  v5[0] = v3;
  v5[1] = v2;
  return (*(uint64_t (**)(void *))((char *)*(&off_10026C690 + (v1 ^ 0x196C39B4)) + 8 * (v1 ^ 0x196C3003) - 4))(v5);
}

uint64_t sub_1000A3E14@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((((v3 - 894) | 0xC7) ^ 0xFFFFFFBF) + ((v3 - 892) | 0xC5)) * (a1 == v1)) ^ v3)))();
}

uint64_t sub_1000A3E58(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))*(&off_100267840 + ((3672 * (*(_DWORD *)(a2 + 4) == 1704253546)) ^ 0x6C4u)))(4294925278);
}

uint64_t sub_1000A3E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  if ((a14 + 1963483873) < 0x7674E7E1 != v14 + 625914225 < ((v15 - 1345024191) & 0xA7F) + 1987372948) {
    BOOL v17 = (a14 + 1963483873) < 0x7674E7E1;
  }
  else {
    BOOL v17 = v14 + 625914225 < (a14 + 1963483873);
  }
  return (*(uint64_t (**)(void))(v16 + 8 * ((90 * v17) ^ v15)))();
}

uint64_t sub_1000A3F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v35 = 235795823 * ((((v34 - 192) | 0x56014207) + (~(v34 - 192) | 0xA9FEBDF8)) ^ 0xC2AC0B5F);
  *(_DWORD *)(v34 - 152) = v33 - v35 + 313;
  *(_DWORD *)(v34 - 148) = v35 ^ 0x130979DA;
  *(void *)(v34 - 144) = 0;
  *(void *)(v34 - 136) = a15;
  *(void *)(v34 - 192) = v31;
  *(void *)(v34 - 184) = 0;
  *(void *)(v34 - 160) = a31;
  *(void *)(v34 - 176) = a16;
  (*(void (**)(uint64_t))(v32 + 8 * (v33 ^ 0xDB6)))(v34 - 192);
  int v36 = *(_DWORD *)(v34 - 168);
  LODWORD(STACK[0x584]) = v36;
  return (*(uint64_t (**)(uint64_t))(v32
                                            + 8
                                            * ((((v33 - 30) ^ (v36 == ((v33 - 1318160655) & 0x4E91876F ^ 0xDE6BE3C8))) & 1 | (16 * (((v33 - 30) ^ (v36 == ((v33 - 1318160655) & 0x4E91876F ^ 0xDE6BE3C8))) & 1))) ^ v33)))(1584128230);
}

uint64_t sub_1000A4030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15, uint64_t a16, unint64_t *a17, int a18)
{
  unsigned int v22 = (((&a13 | 0x37E51031) + (~&a13 | 0xC81AEFCE)) ^ 0xC556EDE7) * v21;
  a13 = v22 ^ 0x6BCE5709;
  a14 = (v20 - 2024873818) ^ v22;
  a16 = a11;
  a17 = &STACK[0x634ED76D4AB882A5];
  a15 = v22 ^ 0x8F16D73;
  uint64_t v23 = (*(uint64_t (**)(int *))(v18 + 8 * (v20 ^ 0xB92)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * (((a18 == v19) * (v20 + 904)) ^ v20)))(v23);
}

uint64_t sub_1000A40F0(uint64_t a1, int a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((62 * (*(_DWORD *)(*v3 + 4 * v4) != a3 + a2)) ^ a3)))();
}

void sub_1000A4128(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)*(&off_10026C690
                  + ((-113 * ((qword_100283A78 + dword_100283B48) ^ 0xEA)) ^ byte_1002187D0[byte_100214530[(-113 * ((qword_100283A78 + dword_100283B48) ^ 0xEA))] ^ 0xAF])
                  + 79);
  int v3 = (unint64_t *)*(&off_10026C690
                           + (byte_1002187D0[byte_100214530[(-113
                                                                                             * (*v2 ^ qword_100283A78 ^ 0xEA))] ^ 0xAF] ^ (-113 * (*v2 ^ qword_100283A78 ^ 0xEA)))
                           - 18);
  unint64_t v4 = *v2 ^ (unint64_t)&v8 ^ *v3;
  uint64_t v5 = 1932141199 * v4 - 0x5BC8EB821F80EA16;
  unint64_t v6 = 1932141199 * (v4 ^ 0xA437147DE07F15EALL);
  *uint64_t v2 = v5;
  unint64_t *v3 = v6;
  LODWORD(v2) = *(_DWORD *)v2;
  uint64_t v7 = (char *)*(&off_10026C690
               + ((-113 * ((qword_100283A78 - dword_100283B48) ^ 0xEA)) ^ byte_10021E7E0[byte_1002189D0[(-113 * ((qword_100283A78 - dword_100283B48) ^ 0xEA))] ^ 0x9D])
               - 73)
     - 4;
  (*(void (**)(char *, uint64_t (*)()))&v7[8
                                                   * (byte_10021E6E0[byte_1002186D0[(-113 * (v2 ^ 0xEA ^ v6))] ^ 0x55] ^ (-113 * (v2 ^ 0xEA ^ v6)))
                                                   + 18928])((char *)*(&off_10026C690+ ((-113 * ((v6 - (_BYTE)v2) ^ 0xEA)) ^ byte_1002187D0[byte_100214530[(-113 * ((v6 - (_BYTE)v2) ^ 0xEA))] ^ 3])- 103)- 12, sub_10009CEB8);
  __asm { BRAA            X9, X17 }
}

void sub_1000A4304(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BRAA            X0, X17 }
}

uint64_t sub_1000A4484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, void))(v9
                                                    + 8
                                                    * ((1794 * ((((a7 ^ 0x2DA) + ((a7 - 381) | 0x1A9) - 1336) & v7) == 0)) ^ a7)))(a1, (v8 - a1));
}

uint64_t sub_1000A44C4@<X0>(int a1@<W8>)
{
  int v10 = v5 + 1;
  BOOL v11 = v1 < v2;
  *(_DWORD *)(*v4 + 4 * (v10 + v6)) = *(_DWORD *)(*v4 + 4 * (a1 + v10));
  if (v11 == v10 + v7 < v2) {
    BOOL v11 = v10 + v7 < v1;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((v11 * v8) ^ v3)))();
}

uint64_t sub_1000A44CC(int a1)
{
  return (*(uint64_t (**)(void, void))(v1
                                                   + 8
                                                   * ((37 * (v3 < (((a1 ^ 0x102) + 138410691) | 0x51088852u) + v2)) | a1 ^ 0x102u)))((a1 ^ 0x102u) - 509, 0);
}

void sub_1000A4518()
{
}

uint64_t sub_1000A452C@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  *(unsigned char *)(v4 + (v5 + a2)) = *(unsigned char *)(a1 + (v5 + a2)) ^ 0x77;
  return (*(uint64_t (**)(void))(v6
                              + 8 * (int)(((v5 - 1 != v2) * (((v7 + 2033175927) & 0xF9E39CBB) - 1192)) ^ (v7 + v3))))();
}

uint64_t sub_1000A457C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 - 1995 + ((v0 - 2261) | 0x10A) - 604) * ((v1 & 0xFFFFFFFE) != 56245772)) ^ v0)))();
}

void sub_1000A45C0()
{
}

uint64_t sub_1000A46D0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v5 + 96) + 1428) = 136246116;
  return (*(uint64_t (**)(void))(v4 + 8 * (((*(_DWORD *)(a2 + 4) == v2) * ((v3 ^ 0x5E5) + (v3 ^ 0x188))) ^ v3 ^ 0x3E9)))();
}

uint64_t sub_1000A4730()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((41 * (v1 + 1 != v2 + 64)) ^ v0)))();
}

void sub_1000A47F4()
{
}

void sub_1000A4A40()
{
}

uint64_t sub_1000A4A4C(uint64_t a1, int a2)
{
  *(void *)(v3 + v6) = v8;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((2 * (a2 & ~(v5 ^ (v4 == v6)))) & 0xFFFFFFF7 | (8
                                                                                     * ((v5 ^ ~(v4 == v6)) & 1))) ^ v2)))();
}

uint64_t sub_1000A4ABC(int a1, uint64_t a2, int a3, int a4, uint64_t a5)
{
  *(void *)(a5 + (v5 + a1)) = *(void *)(v6 + (v5 + a1));
  return (*(uint64_t (**)(void))(v8 + 8 * (((a4 + a1 != 8) * v7) ^ a3)))((a1 - 8));
}

uint64_t sub_1000A4AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  *(void *)(*(void *)(v9 + 96) + 1544) = *(void *)(a2 + 8);
  *(_DWORD *)(*(void *)(v9 + 96) + 1536) = *(_DWORD *)(a2 + 4);
  return v8 ^ a8;
}

uint64_t sub_1000A4B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  if (a16 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34
  }
                                                                + 8
                                                                * ((441 * (a34 != (a5 ^ (a5 - 260)) + 1491163814)) ^ (a7 + a5 + 706))))(a1, a2, a9);
  if (a16 != 1) {
    JUMPOUT(0x1000A4CC4);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34
                                                              + 8
                                                              * ((309
                                                                * (a34 == ((a5 - 977598281) & 0xEEDD05FF ^ 0x58E15D18))) ^ (a7 + a5 + 128))))(a1, a2, a9);
}

uint64_t sub_1000A4CF4@<X0>(unsigned int a1@<W8>)
{
  *(_DWORD *)(v6 + 4 * v1) = v1 + (a1 ^ (a1 >> 30)) * v2;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v1 < 0x26F) * v3) ^ v4)))();
}

void sub_1000A4D24()
{
}

void sub_1000A4D30()
{
}

uint64_t sub_1000A4D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (v64 == 56245779 || v64 == 56245776)
  {
    LOBYTE(STACK[0x5BF]) = LOBYTE(STACK[0x187F]) ^ 0x77;
    LOBYTE(STACK[0x5BE]) = LOBYTE(STACK[0x187E]) ^ 0x77;
    LOBYTE(STACK[0x5BD]) = LOBYTE(STACK[0x187D]) ^ 0x77;
    LOBYTE(STACK[0x5BC]) = LOBYTE(STACK[0x187C]) ^ 0x77;
    LOBYTE(STACK[0x5BB]) = LOBYTE(STACK[0x187B]) ^ 0x77;
    LOBYTE(STACK[0x5BA]) = LOBYTE(STACK[0x187A]) ^ 0x77;
    LOBYTE(STACK[0x5B9]) = LOBYTE(STACK[0x1879]) ^ 0x77;
    LOBYTE(STACK[0x5B8]) = LOBYTE(STACK[0x1878]) ^ 0x77;
    LOBYTE(STACK[0x5B7]) = LOBYTE(STACK[0x1877]) ^ 0x77;
    LOBYTE(STACK[0x5B6]) = LOBYTE(STACK[0x1876]) ^ 0x77;
    LOBYTE(STACK[0x5B5]) = LOBYTE(STACK[0x1875]) ^ 0x77;
    LOBYTE(STACK[0x5B4]) = LOBYTE(STACK[0x1874]) ^ 0x77;
    LOBYTE(STACK[0x5B3]) = LOBYTE(STACK[0x1873]) ^ 0x77;
    LOBYTE(STACK[0x5B2]) = LOBYTE(STACK[0x1872]) ^ 0x77;
    LOBYTE(STACK[0x5B1]) = LOBYTE(STACK[0x1871]) ^ 0x77;
    LOBYTE(STACK[0x5B0]) = LOBYTE(STACK[0x1870]) ^ 0x77;
  }
  int v67 = (*(uint64_t (**)(void, void, void, void, unint64_t *, unint64_t, void, unint64_t *))(v65 + 8 * (v66 + 1633)))(LODWORD(STACK[0x550]), (v64 - 56245771), a47 ^ 0x9A43286E, LODWORD(STACK[0x2F0]) ^ 0x7440D53Au, &STACK[0x5B0], STACK[0x380], LODWORD(STACK[0x500]), &STACK[0x1860]);
  unsigned int v68 = ((2 * v67) & 0xFB7BDFEC) + (v67 ^ 0xFDBDEFF6);
  uint64_t v69 = (*(uint64_t (**)(void, unint64_t, void))(v65 + 8 * (v66 + 1583)))(*a64, STACK[0x380], LODWORD(STACK[0x500]));
  return (*(uint64_t (**)(uint64_t))(v65 + 8 * (((v68 == -37883914) * (v66 - 753)) ^ (v66 + 1264))))(v69);
}

void sub_1000A4FB0()
{
}

uint64_t sub_1000A501C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  int v37 = 831981571 * ((~((v36 - 128) | 0x33845586) + ((v36 - 128) & 0x33845586)) ^ 0x55DA7A5D);
  *(void *)(v36 - 120) = a11;
  *(_DWORD *)(v36 - 128) = (a14 + 875354895 + 67 * (((a4 + 543557307) | 0x10888A1) ^ 0x216E8F89)) ^ v37;
  *(_DWORD *)(v36 - 124) = v37 + a4 + 1162;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (a4 + 2397)))(v36 - 128);
  uint64_t v39 = a35 & 0x3F;
  *(&a26 + (v39 ^ 0x2E)) = -9;
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * ((2290 * ((v39 ^ 0x2E) > 0x37)) ^ a4)))(v38);
}

uint64_t sub_1000A5134@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((((v1 + 1803023820) & 0xDFEFFB63) - 1265103320) * (a1 != 1704253542)) ^ v1)))(4294925278);
}

void sub_1000A5184()
{
  uint64_t v0 = __chkstk_darwin();
  if (*(void *)(v0 + 24)) {
    BOOL v2 = *(void *)(v0 + 8) == 0x634ED76D4AB8828DLL;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  int v1 = *(_DWORD *)(v0 + 32) ^ (1224239923 * (((v0 | 0xB7698061) - v0 + (v0 & 0x48967F9E)) ^ 0x45DA7DB6));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000A52CC()
{
  return sub_1000A52F0();
}

uint64_t sub_1000A52F0()
{
  return v0 ^ v1;
}

void sub_1000A5330(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0xB999BAB1C512043) = (*(_DWORD *)(a1 - 0xB999BAB1C512043) ^ 0xDFF50366)
                                        - 537590938
                                        - ((2 * (*(_DWORD *)(a1 - 0xB999BAB1C512043) ^ 0xDFF50366) + 2) & 0xBFEA06CC)
                                        + 1;
}

void sub_1000A5378()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 2240)))();
  JUMPOUT(0x1000A5394);
}

uint64_t sub_1000A53AC()
{
  return 4294925278;
}

uint64_t sub_1000A53B4(uint64_t a1, uint64_t a2, int a3)
{
  if (v3 == a3 + v5 - 927) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = v6;
  }
  *(void *)(v4 - 0x3B842D404CB6A8ACLL) = v7;
  return sub_1000A53D8();
}

void sub_1000A53D8(_DWORD *a1@<X8>)
{
  *(_DWORD *)(v1 + 16) = *a1;
}

uint64_t sub_1000A541C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (v0 | (16 * ((((v0 - 1036) ^ (v1 + v3 < (v0 - 540 + v2))) & 1) == 0)))))();
}

uint64_t sub_1000A5454()
{
  return 4294925273;
}

_DWORD *sub_1000A5460(_DWORD *result)
{
  *uint64_t result = -56550210;
  return result;
}

void sub_1000A5470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 *a9)
{
  int v11 = a9[3] ^ 0x77;
  int v12 = ((*a9 ^ 0x77777777) << 24) | ((a9[1] ^ 0x77) << 16) | ((a9[2] ^ 0x77) << 8) | v11;
  *(_DWORD *)(*v9 - 0x5F548590D8AA63B5) = v12 + v10 - 2 * (v12 & 0x5E6BE0EF ^ v11 & 9);
  JUMPOUT(0x10008D508);
}

uint64_t sub_1000A54E8@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 1908));
  return v3(v1);
}

uint64_t sub_1000A5518@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((a2 == 24) * ((v2 ^ 0xB01C2B8C) + a1 + v2 - 516)) ^ v2)))();
}

uint64_t sub_1000A5560(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, void))(v5
                                                    + 8
                                                    * ((4005
                                                      * (((v4 == a3) ^ ((a4 + 28) ^ (a4 + 109))) & 1)) ^ a4)))(a1, (a4 + 58865773) | 0x644007A0u);
}

uint64_t sub_1000A55A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AC4B0(a1, a2, a3, a4);
}

uint64_t sub_1000A55BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15)
{
  a13 = &STACK[0x55D5CC6D86BC0F2F];
  a14 = (v17 - 1381) ^ (831981571
                      * (((&a13 | 0xEDA12E04) - (&a13 & 0xEDA12E04)) ^ 0x7400FE20));
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v15 + 8 * (v17 + 828)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((3481 * (a15 == v16 + (v17 ^ 0x737) - 707)) ^ v17)))(v18);
}

void sub_1000A5664()
{
}

void sub_1000A5698()
{
}

uint64_t sub_1000A56A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17 = *(void *)(v15 + 32);
  *(_DWORD *)(a9 - 0x354295EB77E74961) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8 * (int)((29 * (v12 & ~((337 * (v13 & 0xBB870FFF ^ 0x6A8)) ^ (v17 == 0x5E8E72AB319E4289)))) ^ v13 & 0xBB870FFF)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, v14, a12);
}

uint64_t sub_1000A577C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v0 - 764) ^ 0x542)
                                * ((((767 * ((v0 - 396) ^ 0x6A9)) ^ 0xCD99DB0C) & (2 * v1) ^ 0x41904860)
                                 + (v1 ^ 0xCF34DB4B)
                                 + 1564439291 == 1141662324)) ^ (v0 - 396))))();
}

uint64_t sub_1000A57FC@<X0>(char a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  *(_DWORD *)(v50 - 144) = v49;
  *(void *)(v50 - 120) = v43 - 7;
  *(void *)(v50 - 128) = a6 - 7;
  *(_DWORD *)(v50 - 152) = v49 & 0xFFFFFFF8;
  *(_DWORD *)(v50 - 136) = -(v49 & 0xFFFFFFF8);
  int v51 = -8 - a5;
  int v52 = a3 + a2;
  char v53 = a3 + a2 + a1;
  uint64_t v54 = (v52 + a4 + v51 + 8);
  v56.val[0].i64[0] = v54 & 0xF;
  v56.val[0].i64[1] = (v53 + 10 + (_BYTE)v51 + 8) & 0xF;
  v56.val[1].i64[0] = (v53 + 9 + (_BYTE)v51 + 8) & 0xF;
  v56.val[1].i64[1] = (v53 + 8 + (_BYTE)v51 + 8) & 0xF;
  v56.val[2].i64[0] = (v53 + 7 + (_BYTE)v51 + 8) & 0xF;
  v56.val[2].i64[1] = (v53 + 6 + (_BYTE)v51 + 8) & 0xF;
  v56.val[3].i64[0] = (v47 + (_BYTE)v51 + 8) & 0xF;
  v56.val[3].i64[1] = (v53 + (_BYTE)v51 + (v48 ^ 0xDB) + 8) & 0xF;
  *(int8x8_t *)(*(void *)(v50 - 128) + v54) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(*(void *)(v50 - 120) + v54), *(int8x8_t *)(v46 + v56.val[0].i64[0] - 7)), veor_s8(*(int8x8_t *)(v56.val[0].i64[0] + v44 - 6), *(int8x8_t *)(v56.val[0].i64[0] + v45 - 5)))), (int8x8_t)0x7777777777777777), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v56, (int8x16_t)xmmword_10021E900), (int8x8_t)0xB7B7B7B7B7B7B7B7)));
  return (*(uint64_t (**)(__n128))(a43 + 8 * (v48 ^ (16 * (*(_DWORD *)(v50 - 136) == v51)))))((__n128)xmmword_10021E900);
}

uint64_t sub_1000A5968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return sub_100095428(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1000A5988@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((a1 > 0x82) * ((v1 ^ 0x7D1) - 1347)) ^ (v1 + 1139))))();
}

uint64_t sub_1000A59CC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((((100 * (((a4 - 1084) | 0x448) ^ 0x44A)) ^ 0x15D) * ((v4 & 0x18) == 0)) ^ a4)))();
}

uint64_t sub_1000A5A10@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + v7 + a1) = v5;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 + 1 + a1 < (unint64_t)(v4 + v6)) * v2) ^ v3)))();
}

uint64_t sub_1000A5A40@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  BOOL v15 = a1 != 866215440 && a10 - v11 == -769233200;
  return (*(uint64_t (**)(void))(v12 + 8 * ((v15 * (v13 + ((v10 + 675822586) | 0x11168B02) - 564)) ^ v10)))();
}

uint64_t sub_1000A5AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  return sub_100069CDC(a1, 4432325, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_1000A5AC0@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned int v7 = v5 + a2 + ((v3 + 1921359949) & 0x8D7A5AC6);
  int v8 = *(_DWORD *)((char *)&STACK[0x290] + (v7 & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + v7) = v8 ^ 0xB2;
  *(unsigned char *)(a1 + (v5 + a2 + 71)) = (BYTE1(v8) ^ 0xA1) - ((2 * (BYTE1(v8) ^ 0xA1)) & 0xEF) + 119;
  *(unsigned char *)(a1 + (v5 + a2 + 72)) = (BYTE2(v8) ^ 0x43) - ((2 * (BYTE2(v8) ^ 0x43)) & 0xEF) + 119;
  *(unsigned char *)(a1 + (v5 + a2 + 73)) = (HIBYTE(v8) ^ 0x58) - ((2 * (HIBYTE(v8) ^ 0x58)) & 0xEF) + 119;
  unsigned int v9 = LODWORD(STACK[0x2EC]) - 397873702;
  BOOL v10 = v9 < v2;
  BOOL v11 = v5 - 123467318 < v9;
  if (v5 - 123467318 < v2 != v10) {
    BOOL v11 = v10;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((!v11 * v4) ^ v3)))();
}

uint64_t sub_1000A5BB8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 - 1473955524) & 0x57DABFFD) + ((v0 - 2122) | 0x182) - 653)
                                * ((v3 + v1) > 0x7FFFFFFD)) ^ v0)))();
}

uint64_t sub_1000A5C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((v5 == v6) ^ (a5 + v7)) & 1)
                                * ((v7 - 880807663) & 0x7FE7FEFB ^ (a5 - 124))) ^ v7)))();
}

uint64_t sub_1000A5C58(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, void))(v6
                                                    + 8
                                                    * ((1260 * (((((v4 - 88270563) & 0x542E6F5) - 696) & v5) == 0)) ^ v4)))(a1, (a1 - a4));
}

uint64_t sub_1000A5C9C()
{
  int v5 = 3804331 * ((2 * ((v4 - 128) & 0x7DAFB138) - (v4 - 128) + 38817477) ^ 0x7C856B33);
  *(void *)(v4 - 128) = v3;
  *(_DWORD *)(v4 - 120) = v5 + v0 + 1106;
  *(_DWORD *)(v4 - 116) = v1 - v5 + ((v0 + 769) ^ 0xD84831EE);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1397)))(v4 - 128);
  return sub_1000A5D18(v6);
}

uint64_t sub_1000A5D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v26 - 112) = a22;
  *(void *)(v26 - 128) = a20;
  *(_DWORD *)(v26 - 104) = (v23 - 706) ^ (69008221 * (((v25 | (v26 - 128)) - ((v26 - 128) & v25)) ^ 0x9EEF0D10));
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v23 + 575)))(v26 - 128);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (int)(((*(_DWORD *)(v26 - 120) > (v24 + 679))
                                                   * (((v23 - 1809) | 0x208) + ((v23 - 1137) ^ 0xFFFFFCBC))) ^ v23)))(v27);
}

uint64_t sub_1000A5DC0()
{
  unsigned int v3 = *(_DWORD *)(v2 - 0x6BA7059072F2C1C3) - 1207789969;
  unsigned int v4 = *(_DWORD *)(v2 - 0x6BA7059072F2C1C7) + 1991363143;
  BOOL v5 = v4 < 0xC501623C;
  BOOL v6 = v3 < v4;
  if (v3 < 0xC501623C != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((2693 * v6) ^ v0)))();
}

uint64_t sub_1000A5E4C()
{
  return sub_1000A5E68();
}

uint64_t sub_1000A5E68()
{
  return sub_100092440();
}

uint64_t sub_1000A5F48@<X0>(unsigned int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((70 * (*(_DWORD *)(*v3 + 4 * a1) != ((v4 - 1215) ^ (v2 + 166)))) ^ v4)))();
}

uint64_t sub_1000A5F7C()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * ((v0 - 316) ^ 0xC2D)))(32, 0x101004023FF3BD5) == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((v2 * (v0 ^ 0x728 ^ (v0 + 681463684) & 0xD761ABFE)) ^ (v0 - 316))))();
}

void sub_1000A6000()
{
}

uint64_t sub_1000A6024(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((a6 + v7 + 1477247021 < 8 * (a3 ^ 0x707) - 1848) * ((7 * (a3 ^ 0x766)) ^ 0xC2E)) ^ a3)))();
}

uint64_t sub_1000A6098(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((954 * (a5 + 1 == v6 + 16)) ^ a3)))();
}

void sub_1000A617C()
{
}

uint64_t sub_1000A6198@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1107 * (*(unsigned char *)(a1 + v2) == 94)) ^ v1)))();
}

void sub_1000A61DC()
{
}

uint64_t sub_1000A61E8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 + 746 + 155 * ((a2 + 717) ^ 0x414) - 2094) * (v2 == v3)) ^ (a2 + 717))))();
}

uint64_t sub_1000A6230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * (((~a19
                                 + v20
                                 - (unint64_t)((((v21 - 1794595853) | 0x68030082) ^ 0xA75B01Du) + v19) < 0x10)
                                * (a8 + ((v21 - 603743638) | 0x21080A0B) + 52)) ^ v21)))();
}

uint64_t sub_1000A62A8()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((*(_DWORD *)(v2 - 0x6BA7059072F2C1BBLL) == -563355418)
                                * ((v1 - 2074003460) & 0x7B9ECEFA ^ 0xCDC)) ^ v1)))();
}

uint64_t sub_1000A6304(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2
                                                     + 8
                                                     * (((((v3 ^ (v3 - 441)) + 133) ^ 0x2D6) * (v1 > 0xD798F29B)) ^ (v3 - 1340330937))))(a1, 1340331655);
}

void sub_1000A6358()
{
}

uint64_t sub_1000A63D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                       + 8
                                                                       * (((((v5 - 703) | 0x702)
                                                                          + 27 * (v5 ^ 0x306)
                                                                          - 2193)
                                                                         * (v4 == 736754318)) ^ v5)))(a1, a2, a3, 1251020603);
}

uint64_t sub_1000A6428()
{
  uint64_t v5 = (*(uint64_t (**)(void, void, void))(v1 + 8 * (int)(((v0 + 1674119806) & 0x9C36F3FF) + 1536)))(*v3, *v4, *(_DWORD *)(v2 - 0x6BA7059072F2C1CBLL) + ((v0 + 1674119806) & 0x9C36F3FF ^ 0xB1B06B56));
  return sub_1000A647C(v5);
}

uint64_t sub_1000A647C()
{
  *int v4 = v3;
  *(_DWORD *)(v0 - 0x6BA7059072F2C1CBLL) = v2;
  *uint64_t v1 = v2;
  return sub_1000A6498();
}

uint64_t sub_1000A64B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, int a6@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((839 * (v6 < (a6 ^ 0x417u) - 1164)) ^ a6)))(a1, a2, a3, a4, 2814139962, a5, 3053110526);
}

uint64_t sub_1000A64FC@<X0>(int a1@<W5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24,int a25,int a26,int a27)
{
  int v34 = v32 ^ (a1 - 512);
  LODWORD(STACK[0x2D8]) = a2;
  LODWORD(STACK[0x2DC]) = a25;
  STACK[0x2E0] = a24;
  LODWORD(STACK[0x2E8]) = v32 - 158 - v27 + a27 + 23888798;
  STACK[0x2F0] = v28 + (v27 - 935020333);
  int v35 = (*(uint64_t (**)(uint64_t, uint64_t))(a22 + 48 * v29 + 8))(a11, a20);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v31
                                                     + 8
                                                     * ((2746 * (v34 + v35 - (v33 & (2 * v35)) - 513788357 == v30)) ^ v32)))(1127068362, 1074653292);
}

uint64_t sub_1000A65DC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((15 * (v0 - 1131453695 + (v1 ^ 0x78Cu) - 813 > 0x7FFFFFFE)) | v1)))();
}

uint64_t sub_1000A6620()
{
  unsigned int v3 = v1 - ((2 * v1 - 580997960) & 0xEA7622BC) + 1676306362;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (v2 ^ (111
                                     * (((v3 << ((v2 - 41) ^ 4)) & 0x297FFBEE ^ 0x287622AC)
                                      + (v3 ^ 0x6184ECA9)
                                      - 67739653 == 280387058)))))();
}

uint64_t sub_1000A66BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15, uint64_t a16, unint64_t *a17, int a18)
{
  unsigned int v21 = 1224239923
      * (((&a13 | 0x2599EE82) - &a13 + (&a13 & 0xDA661178)) ^ 0xD72A1355);
  a16 = a12;
  a17 = &STACK[0x634ED76D4AB88295];
  a15 = v21 ^ 0x7F5F299F;
  a13 = v21 ^ 0x6BCE5709;
  a14 = (v20 - 2024874714) ^ v21;
  uint64_t v22 = (*(uint64_t (**)(int *))(v19 + 8 * (v20 + 750)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((3643
                                              * (a18 == v18
                                                      + ((v20 - 1623) | 0x2C2)
                                                      + ((v20 + 1524650330) & 0xE7E)
                                                      - 2306)) ^ v20)))(v22);
}

uint64_t sub_1000A67B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((v7 ^ 0x11u) < ((v8 + 1059654013) & 0xC0D6F7AF ^ 0x2AB)) * (a7 + a5 + v8 - 374 + 186)) ^ v8)))();
}

uint64_t sub_1000A6808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((((v6 + a5 + 1282067022) & 0xC939BBFC) - 2139)
                                     * ((unint64_t)(v5 - a1) < 0x20)) ^ a5)))();
}

uint64_t sub_1000A6850()
{
  int v3 = (v1 == (((v0 - 58) | 1) ^ 0x12)) * ((v0 - 804) | 0x441);
  if (v1 == (((v0 - 58) | 1) ^ 0x12)) {
    ++v3;
  }
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 ^ v0)))(4294925278);
}

uint64_t sub_1000A689C(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v5 + 30 * (v5 ^ 0x683) - 2733) * (a3 < a4)) ^ v5)))();
}

uint64_t sub_1000A68D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, _DWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20)
{
  *a5 = 0;
  *a6 = 0;
  a20 = 1178560073 * (((&a19 | 0xD492092) - (&a19 & 0xD492092)) ^ 0xEA7C02FA) - 504207030;
  uint64_t v22 = (*(uint64_t (**)(int *))(v21 + 18936))(&a19);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((38 * (a19 != v20)) ^ 0x153u)))(v22);
}

uint64_t sub_1000A696C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, unsigned int a15, uint64_t a16, unint64_t *a17, int a18)
{
  unsigned int v22 = ((((2 * &a13) | 0x1A80A97C) - &a13 + 1925163842) ^ 0x7FF3A969) * v21;
  a16 = a9;
  a17 = &STACK[0x634ED76D4AB8829D];
  a15 = v22 ^ 0x859392F2;
  a13 = v22 ^ 0x6BCE5709;
  a14 = (v20 - 2024874358) ^ v22;
  uint64_t v23 = (*(uint64_t (**)(int *))(v19 + 8 * (v20 ^ 0xDB6)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a18 == v18) * (v20 + 2031)) ^ v20)))(v23);
}

uint64_t sub_1000A6A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, int a12, int a13, uint64_t a14)
{
  unsigned int v20 = 235795823 * ((&a11 & 0x844DC5BB | ~(&a11 | 0x844DC5BB)) ^ 0xEF1F731D);
  a13 = (*(_DWORD *)(a1 + 12) ^ v18) + *(_DWORD *)(v14 - 0x6BA7059072F2C1C3) - 80601684 - v20 + 166853305;
  a14 = v14;
  a12 = (v19 + 2090) ^ v20;
  a11 = 1176923396 - v20;
  uint64_t v21 = (*(uint64_t (**)(unsigned int *))(v17 + 8 * (v19 + 2171)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((1346 * (*v16 == ((v19 + 1077) ^ (v15 + 1257)))) ^ v19)))(v21);
}

void sub_1000A6B10()
{
}

uint64_t sub_1000A6B24(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  return (*(uint64_t (**)(void))(v35
                              + 8
                              * ((((a6 + a35 + 1319) > 0xFFFFFFFA) * ((((a3 - 57) | 0x34) + 1152) ^ 0x484)) | (a3 + 2126))))();
}

uint64_t sub_1000A6B74@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (a1 | (8 * (v1 - 1704253598 < ((2 * a1) ^ 0xCB6 ^ (2 * a1) ^ 0xEB6 ^ 0xFFFFFDBF))))))();
}

void sub_1000A6BC4()
{
}

uint64_t sub_1000A6BD0(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned int a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned int a31)
{
  v32.n128_u64[0] = 0xEEEEEEEEEEEEEEEELL;
  v32.n128_u64[1] = 0xEEEEEEEEEEEEEEEELL;
  v33.n128_u64[0] = 0x7777777777777777;
  v33.n128_u64[1] = 0x7777777777777777;
  return (*(uint64_t (**)(void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(v31 + 8 * (((a22 + 1498) * (a17 < 0xFFFFFFFE)) | a22)))(a31, a26, 303575336, 3564556096, a9, 3727773272, 2870467056, a1, a2, a3, a4, v32, v33);
}

uint64_t sub_1000A6C48@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((475
                                * (v2 == ((26 * (((v1 - 1490) | 0x482) ^ 0x4CF) + 559300073) ^ (3
                                                                                              * (((v1 - 1490) | 0x482) ^ 0x42D))))) ^ ((v1 - 1490) | 0x482))))();
}

void sub_1000A6CC0()
{
}

uint64_t sub_1000A6CF4@<X0>(int a1@<W0>, int a2@<W3>, uint64_t a3@<X8>)
{
  *(void *)(v3 - 7 + (v6 + v5 + v8 - a1)) = *(void *)(a3 - 7 + (v6 + v5 + v8 - a1));
  return (*(uint64_t (**)(void, void))(v9
                                                   + 8
                                                   * ((61 * ((((a2 - 21) ^ 0xFFFFFE6E) & v4) - a1 != 8)) ^ (a2 - 21))))((-a1 - 8), v7 - (((a2 - 21) ^ 0xFFFFFE6E) & v4));
}

uint64_t sub_1000A6D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10008D300(a1, a2, a3, a4, a5, 2945110806);
}

uint64_t sub_1000A6D6C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1019 * (((((65 * (v0 ^ 0x1C2) - 922) | 0x802) - 2095) & v1) != 0)) ^ v0)))();
}

uint64_t sub_1000A6DB0@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (a1 + v5)) = *(unsigned char *)(v4 + (a1 + v5))
                                           - ((2 * *(unsigned char *)(v4 + (a1 + v5))) & 0xEF)
                                           + 119;
  return (*(uint64_t (**)(void))(v6 + 8 * (int)(((a1 - 1 == a3 + 563) * ((a2 + 1108344351) & 0xBDF0027B ^ 0x4B1)) ^ a2)))();
}

void sub_1000A6E10()
{
}

uint64_t sub_1000A6E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, unint64_t *a13, int a14)
{
  unsigned int v17 = 3804331 * ((101839932 - (&a10 | 0x611F43C) + (&a10 | 0xF9EE0BC3)) ^ 0x873B2E35);
  a14 = (v14 - 726) ^ v17;
  a10 = v15;
  a11 = v17 ^ 0x14497ECE;
  a12 = v17 ^ 0x4CDE260;
  a13 = &STACK[0x5267DA57ABB8ED88];
  uint64_t v18 = (*(uint64_t (**)(uint64_t *))(v16 + 8 * (v14 + 1442)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v15 - 0x6BA7059072F2C1BBLL) == -563355418)
                                              * (((v14 - 151) | 0x84) ^ 0x95F)) ^ v14)))(v18);
}

void sub_1000A6F08()
{
}

uint64_t sub_1000A6F80@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((740 * (*(_DWORD *)(v1 + 4 * (v3 - 205 + a1 + v3 + 586 + v4)) == v2)) ^ (v3 - 205))))();
}

void sub_1000A6FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  int v27 = ((((v26 - 144) | 0x7F683405) + (~(v26 - 144) | 0x8097CBFA)) ^ 0xEBC57D5D) * v24;
  *(void *)(v26 - 120) = a10;
  *(_DWORD *)(v26 - 128) = v22 - v27 + 1156;
  *(void *)(v26 - 136) = v25;
  *(_DWORD *)(v26 - 140) = a22 + v27 + ((3 * (v22 ^ 0x132)) ^ 0x4C22081);
  (*(void (**)(uint64_t))(v23 + 8 * (v22 + 1978)))(v26 - 144);
  JUMPOUT(0x1000849B0);
}

uint64_t sub_1000A7044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  return sub_10008610C(a1, a2, a3, 1669055439, a5, a6, a7, a8, a9, a10, a11, a12, a13, v40, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000A7054()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((117 * ((((v0 ^ 0x630) + 134) ^ 0xFFFFFB49) + v2 + v1 >= 0x7FFFFF7D)) ^ v0)))();
}

uint64_t sub_1000A709C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v50 = BYTE4(a44) ^ 0x89;
  if (v50 == 1)
  {
    int v52 = (a6 - 513377384) & 0x218DDDFC;
    BYTE4(a39) = ((((a6 - 104) & 0xFC) + 48) ^ (8 * a41))
               - ((2 * ((((a6 - 104) & 0xFC) + 48) ^ (8 * a41))) & 0xE0)
               + 119;
    BYTE5(a39) = ((a41 >> 5) ^ 0xCD) - ((2 * ((a41 >> 5) ^ 0xCD)) & 0xEF) + 119;
    BYTE6(a39) = ((a41 >> 13) ^ 0x53) - ((2 * ((a41 >> 13) ^ 0x53)) & 0xEF) + 119;
    HIBYTE(a39) = ((a41 >> 21) ^ 0x65) - ((2 * ((a41 >> 21) ^ 0x65)) & 0xEF) + 119;
    HIDWORD(v55) = HIDWORD(a40) ^ 6;
    LODWORD(v55) = a41 ^ 0x60000000;
    LOBYTE(a40) = (v55 >> 29) - ((2 * (v55 >> 29)) & 0xEF) + 119;
    BYTE1(a40) = ((HIDWORD(a40) >> 5) ^ 0x1B) + (~(2 * ((HIDWORD(a40) >> 5) ^ 0x1B)) | 0x11) + 120;
    BYTE2(a40) = ((HIDWORD(a40) >> 13) ^ 0xA8) - ((2 * ((HIDWORD(a40) >> 13) ^ 0xA8)) & 0xEF) + 119;
    int v54 = ((HIDWORD(a40) >> 20) | 0x11) - (HIDWORD(a40) >> 21) + 119;
    goto LABEL_5;
  }
  int v51 = -49567061;
  if (v50 == 2)
  {
    int v52 = a8 + a6 + 1042;
    BYTE4(a39) = ((a8 + a6 + 18) ^ 0x51 | (2 * (HIDWORD(a40) >> 21))) - (HIDWORD(a40) >> 21) + 119;
    BYTE5(a39) = ((HIDWORD(a40) >> 13) ^ 0xA8) - ((2 * ((HIDWORD(a40) >> 13) ^ 0xA8)) & 0xEF) + 119;
    BYTE6(a39) = ((HIDWORD(a40) >> 5) ^ 0x1B) - ((2 * ((HIDWORD(a40) >> 5) ^ 0x1B)) & 0xEF) + 119;
    HIDWORD(v53) = HIDWORD(a40) ^ 6;
    LODWORD(v53) = a41 ^ 0x60000000;
    HIBYTE(a39) = (v53 >> 29) - ((2 * (v53 >> 29)) & 0xEF) + 119;
    LOBYTE(a40) = ((a41 >> 21) ^ 0x65) - ((2 * ((a41 >> 21) ^ 0x65)) & 0xEF) + 119;
    BYTE1(a40) = ((a41 >> 13) ^ 0x53) + (~(2 * ((a41 >> 13) ^ 0x53)) | 0x11) + 120;
    BYTE2(a40) = ((a41 >> 5) ^ 0xCD) - ((2 * ((a41 >> 5) ^ 0xCD)) & 0xEF) + 119;
    LOBYTE(v54) = ((8 * a41) ^ 0x70) - 2 * ((8 * a41) ^ 0x70 ^ (8 * a41) & 8) + 119;
LABEL_5:
    int v51 = v52 - a8 - 1042;
    BYTE3(a40) = v54;
  }
  return sub_100069CDC(a1, 4432325, a3, a4, (int)a8 + v51 - 37, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_1000A72DC@<X0>(int a1@<W8>)
{
  *(_DWORD *)(v4 + 4 * (v5 - 1362986814)) = 1362986814
                                                          - v5
                                                          + ((1566083941
                                                            * (*(_DWORD *)(v4 + 4 * (v5 - 1362986815)) ^ (*(_DWORD *)(v4 + 4 * (v5 - 1362986815)) >> 30))) ^ *(_DWORD *)(v4 + 4 * (v5 - 1362986814)));
  *(void *)(v6 - 120) = v3 - v2;
  *(_DWORD *)(v6 - 140) = v2 ^ 1;
  *(_DWORD *)(v6 - 112) = v2 + a1 + 239666101 + 35;
  *(_DWORD *)(v6 - 108) = a1 + 239666101 - v2;
  *(void *)(v6 - 136) = (v5 + 1577768503) + v2;
  *(_DWORD *)(v6 - 128) = ((a1 + 239666101) ^ 0x58) - v2;
  *(_DWORD *)(v6 - 104) = v2 + a1 + 764300735;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 - 1340329268)))(v6 - 144);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * *(int *)(v6 - 144)))(v7);
}

uint64_t sub_1000A73C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((2949 * (((((a7 + 1955872062) & 0x8B6BC7B5) - 1949) & v7) == 0)) ^ a7)))();
}

uint64_t sub_1000A7404(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,char a31)
{
  if (a31 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v31
  }
                                                       + 8
                                                       * ((77
                                                         * (LODWORD(STACK[0x2E8]) == (((a3 - 53) | 0x481) ^ 0x58E15927))) ^ (a3 + 1100))))(a1, 235795823);
  if (a31 != 1) {
    JUMPOUT(0x1000A7560);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v31
                                                     + 8
                                                     * ((1004
                                                       * (LODWORD(STACK[0x2E8]) != ((12 * (a3 ^ 0x5F)) ^ 0x58E1596A))) ^ (a3 + 1167))))(a13, 235795823);
}

uint64_t sub_1000A7598(uint64_t a1, int a2, int a3)
{
  *(void *)(v9 - 7 + (v6 + v5 + a3 - v8)) = *(void *)(v3 - 7 + (v6 + v5 + a3 - v8));
  return (*(uint64_t (**)(void))(v10 + 8 * (((v8 - (v4 & 0xFFFFFFF8) == -8) * ((a2 ^ 0x64F) + 101)) ^ a2)))(v7 - (v4 & 0xFFFFFFF8));
}

uint64_t sub_1000A75F0()
{
  unsigned int v5 = (((v4 + v3) >> 4) & 0xFCBAFF6 ^ 0xB0B0670)
     + (((v4 + v3) >> 5) ^ 0x72627CC3)
     - 1521951340;
  BOOL v7 = v5 <= 0x1D2EB58E || v5 >= v1 + 489600399;
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((((((v2 + 1186185376) & 0xB94C3F5F) - 1171) ^ 0xA6) * v7) ^ (v2 - 314))))();
}

uint64_t sub_1000A7680()
{
  *(void *)(v1 + v4) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 != v4) * v3) ^ v0)))();
}

uint64_t sub_1000A76A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((((unint64_t)(v2 - a1) < 0x20) ^ (v3 + 26)) & 1)
                                * (((v3 + 606376664) | 0xDA0184) ^ (v1 + 2169))) ^ (v3 - 230))))();
}

uint64_t sub_1000A76F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (132 * (v6 ^ 0x6BF)
                               + 2
                               * ((a5 & 0x18) == ((132 * (v6 ^ 0x6BF) - 1930651272) ^ 0x8CEC9B0C ^ ((132 * (v6 ^ 0x6BF) - 256) | 0x184))))))();
}

uint64_t sub_1000A7750(uint64_t a1, int a2)
{
  *int v6 = v6[623];
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((4 * (((((v2 - 206) | 0x49) + 1136873017) | 0xC208605) ^ (a2 + 19))) ^ 0x1B8)
                                * (v3 - 1 == v5)) ^ ((v2 - 206) | 0x49))))();
}

uint64_t sub_1000A77B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v12 = v10 + 1126498;
  if (v12 <= 0x40) {
    unsigned int v12 = 64;
  }
  uint64_t v13 = (a3 - v8 - v9);
  int v14 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * ((61 * (v13 + v12 < 0xF)) ^ 0x892u));
  return v14(v13, v14, a3, 2754850916, a5, a6, a7, a8);
}

uint64_t sub_1000A782C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 112) = (v17 + 797) ^ (69008221
                                        * ((((2 * (v18 - 136)) | 0x3CAD119A) - (v18 - 136) + 1638496051) ^ 0x4DF4DAC7));
  *(void *)(v18 - 120) = a14;
  *(void *)(v18 - 136) = v14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v17 ^ 0x86E)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (int)(((*(_DWORD *)(v18 - 128) == v16 + ((v17 + 75) | 0x70) - 498)
                                                   * ((v17 + 238781635) & 0xF1C47BF7 ^ 0x825)) ^ v17)))(v19);
}

uint64_t sub_1000A78E8@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(_DWORD *)(a11 + 4 * (a3 + v11 + 409)) = a2;
  int v17 = v14 + v11 + 781;
  BOOL v19 = v17 > 398 * (v12 ^ 0x19B) + v15 || v17 < a1;
  return (*(uint64_t (**)(void))(v16 + 8 * ((v19 * v13) ^ v12)))();
}

uint64_t sub_1000A7938@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a3 + v5)) = *(unsigned char *)(v4 + (a3 + v5)) ^ 0x77;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((a2 - v7 - 64) ^ (a3 - 1 == a4)) & 1 | (4
                                                                                          * (((a2 - v7 - 64) ^ (a3 - 1 == a4)) & 1))) ^ (v6 + a2 + 2367))))();
}

uint64_t sub_1000A7980@<X0>(int a1@<W1>, unint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, int a5@<W6>, unint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v36 = 4 * ((v32 ^ v26 ^ (a4 + 179)) + v33);
  unint64_t v37 = (*(_DWORD *)(a24 + v36) ^ v24) + (a3 ^ HIDWORD(v29));
  unint64_t v38 = HIDWORD(a6)
      + v27 * (unint64_t)(*(_DWORD *)(*v34 + v36) ^ v24)
      + ((v37 + a1 - (v28 & (2 * v37))) ^ a2);
  *(_DWORD *)(a24 + 4 * (v33 + a4)) = v38 + v24 - (v25 & (2 * v38));
  int v39 = v33 + 1 + a5;
  BOOL v41 = v39 > v31 || v39 < v35;
  return (*(uint64_t (**)(void))(v30 + 8 * ((v41 | (2 * v41)) ^ v32)))();
}

uint64_t sub_1000A7A10(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  *(unsigned char *)(a6 + v8) = *(unsigned char *)(a1 + (v7 + a4))
                      - ((*(unsigned char *)(a1 + (v7 + a4)) << (v9 + 63)) & 0xEE)
                      + 119;
  return (*(uint64_t (**)(void))(v10 + 8 * (((v8 != 63) * a7) ^ v9)))();
}

void sub_1000A7A5C()
{
}

uint64_t sub_1000A7A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (int)(((((9 * (v7 ^ 0x141)) ^ 0xFFFFFCE6) + v7 - 143) * (v6 == a6)) | v7)))();
}

uint64_t sub_1000A7AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  return sub_10008610C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000A7AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, unsigned int a20,int a21)
{
  a19 = &STACK[0x55D5CC6D86BC0F5F];
  a20 = (831981571 * (&a19 ^ 0x99A1D024)) ^ 0x8F;
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v21 + 18816))(&a19);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((1472 * (a21 == -563355418)) ^ 0x175u)))(v22);
}

uint64_t sub_1000A7B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, unint64_t *a12, int a13, unsigned int a14, uint64_t a15, uint64_t a16)
{
  unsigned int v20 = 1178560073
      * (((&a11 | 0x93C5D81) - &a11 + (&a11 & 0xF6C3A278)) ^ 0xEE097FE9);
  a11 = &STACK[0x4B3FB627E137F32A];
  a12 = &STACK[0x5F548590D8AA63C1];
  a16 = v19;
  a13 = v18 - v20 - 22;
  a14 = 1182669668 - v20;
  uint64_t v21 = (*(uint64_t (**)(unint64_t **))(v17 + 8 * (v18 + 1933)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((532 * (*(_DWORD *)(v19 - 0x6BA7059072F2C1BBLL) == v16 + v18 + 115 - 602)) ^ v18)))(v21);
}

uint64_t sub_1000A7C3C@<X0>(int a1@<W0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,_DWORD *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32)
{
  *a21 = a32 + 1;
  *(void *)(v34 - 128) = *v32 + a10;
  *(void *)(v34 - 112) = a9;
  int v35 = (a2 - 1485070320) ^ a10;
  *(_DWORD *)(v34 - 104) = a10;
  *(_DWORD *)(v34 - 100) = v35 ^ 0x51;
  *(_DWORD *)(v34 - 144) = v35;
  *(_DWORD *)(v34 - 140) = ((a2 - 1485070320) | 0x28) ^ a10;
  *(_DWORD *)(v34 - 136) = a10 + a2 + 1452949797;
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v33 + 8 * (a2 ^ (a1 + 2419))))(v34 - 144);
  return (*(uint64_t (**)(uint64_t))(v33 + 8 * *(int *)(v34 - 120)))(v36);
}

uint64_t sub_1000A7CD4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16 = 454 * (v13 ^ 0x55Bu);
  *(void *)(a11 + v12) = v15;
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * (int)(((2 * (a2 & ~((v16 - 970) ^ (((v16 ^ 0xFFFFFFFFFFFFFAAALL) & v11) == 8)))) & 0xFFFFFFF7 | (8 * (((v16 + 54) ^ ~(((v16 ^ 0xFFFFFFFFFFFFFAAALL) & v11) == 8)) & 1))) ^ v16)))();
}

uint64_t sub_1000A7D40(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((a4 + 617 + a4 + 1704 - 880) * (v4 == v5)) ^ a4)))();
}

uint64_t sub_1000A7D6C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1742 * (v1 != 0x34EDE1EE)) ^ v0)))((v1 ^ 0x34EDE1EEu) + 660284196);
}

uint64_t sub_1000A7DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v25 - 128) = a23;
  *(_DWORD *)(v25 - 120) = v24
                         + 831981571 * ((((v25 - 128) | 0x7351214A) - ((v25 - 128) & 0x7351214A)) ^ 0xEAF0F16E)
                         + 613;
  *(void *)(v25 - 112) = a20;
  (*(void (**)(uint64_t))(v23 + 8 * (v24 ^ 0xD42)))(v25 - 128);
  *(_DWORD *)(v25 - 104) = (v24 + 50) ^ (69008221
                                       * (((v25 - 128) & 0x67520804 | ~((v25 - 128) | 0x67520804)) ^ 0x4B0FA5F1));
  *(void *)(v25 - 128) = a21;
  *(void *)(v25 - 112) = a23;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 + 1331)))(v25 - 128);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((4 * (*(_DWORD *)(v25 - 120) <= 0x74F05479u)) | (8
                                                                                               * (*(_DWORD *)(v25 - 120) <= 0x74F05479u))) ^ v24)))(v26);
}

uint64_t sub_1000A7F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  *(int8x8_t *)(v7 - 7 + (a7 + a6 + v11 - v8)) = veor_s8(*(int8x8_t *)(a4- 7+ (a7 + a6 + v11 - v8)), (int8x8_t)0x7777777777777777);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10
                                                     + 8
                                                     * (((v8 - (a5 & 0xFFFFFFF8) == -8) * ((v9 - 130) ^ 0x141)) ^ v9)))(a1, a2);
}

uint64_t sub_1000A7F64(uint64_t a1)
{
  v2.n128_u64[0] = 0x7777777777777777;
  v2.n128_u64[1] = 0x7777777777777777;
  return sub_1000A7F94(a1, v1 & 0xFFFFFFE0, v2);
}

uint64_t sub_1000A7F94(uint64_t a1, int a2, int a3, int8x16_t a4, uint64_t a5, int a6, int a7, int a8)
{
  uint64_t v13 = (v11 + v9 - a6);
  int8x16_t v14 = *(int8x16_t *)(v8 + v13 - 15);
  int8x16_t v15 = *(int8x16_t *)(v8 + v13 - 31);
  uint64_t v16 = a1 + v13;
  *(int8x16_t *)(v16 - 15) = veorq_s8(v14, a4);
  *(int8x16_t *)(v16 - 31) = veorq_s8(v15, a4);
  return (*(uint64_t (**)(void))(v12 + 8 * (((a7 + a6 == a2) * a8) ^ (v10 + a3 + 1756))))();
}

void sub_1000A7FE4(uint64_t a1@<X8>)
{
  *(void *)(a1 - 0x61DFFFBC86B80B30) = v2;
  *(_DWORD *)(v1 + 4) = -563355418;
}

uint64_t sub_1000A803C(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  _DWORD *v24 = a3;
  unsigned int v27 = ((v25 - 53419369) & 0x32F1BFF) + a2 + (a19 ^ 0xDE6BE0E6) - (a1 & (2 * (a19 ^ 0xDE6BE0E6)));
  return (*(uint64_t (**)(void))(v26 + 8
                                    * ((15 * (((v27 << (v25 + 78)) & v21 ^ v22) + (v27 ^ v23) + v20 != v19)) ^ v25)))();
}

uint64_t sub_1000A80B4@<X0>(int a1@<W1>, int a2@<W4>, int a3@<W8>)
{
  *(unsigned char *)(v5 + (a1 + a3)) = *(unsigned char *)(v4 + (a1 + a3)) ^ 0x77;
  return (*(uint64_t (**)(void))(v6 + 8 * (((a1 - 1 == v3) * (((a2 - 655) | 0x14A) ^ 0x2A0)) ^ a2)))();
}

uint64_t sub_1000A80F8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(&a19 + a2 + a1) = 119;
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((493 * (a2 + 1 + a1 < (unint64_t)((v19 ^ 0x1EDu) - v21) - 560893809)) ^ v19 ^ 0x1ED)))();
}

uint64_t sub_1000A8144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, int a18)
{
  int v24 = (49 * (v23 ^ 0x30E) - 683984489) & (2 * v21);
  unsigned int v25 = 1224239923 * ((((2 * &a15) | 0xE12D7366) - &a15 - 1888926131) ^ 0x82254464);
  unsigned int v26 = (v21 ^ 0x6B9D9EFF) - v25;
  int v27 = v23 + 158;
  a17 = a12;
  a18 = (v23 + 158) ^ v25;
  a15 = v26 + v24 - 60622983;
  (*(void (**)(int *))(v22 + 8 * (v23 ^ 0xA8C)))(&a15);
  unsigned int v28 = 1224239923 * ((&a15 & 0x244F7FC | ~(&a15 | 0x244F7FC)) ^ 0xF08F5D4);
  a18 = (v23 + 158) ^ v28;
  a15 = (v20 ^ 0x7E66BE78) - v28 + (((v23 - 5) ^ 0xFCCD7FE4) & (2 * v20)) - 375793664;
  a17 = a12;
  (*(void (**)(int *))(v22 + 8 * (v23 ^ 0xA8C)))(&a15);
  if (v19) {
    int v29 = -281231619;
  }
  else {
    int v29 = -281231617;
  }
  int v30 = ((v19 == 0) ^ 0x78C3D77B) + v29;
  unsigned int v31 = 1224239923 * ((&a15 - 107021952 - 2 * (&a15 & 0xF99EF980)) ^ 0xB2D0457);
  a15 = v30 - v31;
  a17 = a12;
  a18 = v27 ^ v31;
  (*(void (**)(int *))(v22 + 8 * (v23 + 1660)))(&a15);
  int v32 = *v18 ^ 0x7919B7F9;
  unsigned int v33 = (2 * *v18) & 0xF2336FF2;
  unsigned int v34 = 1224239923 * ((2 * (&a15 & 0x71B1DCE0) - &a15 + 240001818) ^ 0xFCFDDECD);
  a17 = a12;
  a18 = v27 ^ v34;
  a15 = v32 - v34 + v33 - 286859649;
  uint64_t v35 = (*(uint64_t (**)(int *))(v22 + 8 * (v23 + 1660)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((1661 * (a16 == -563355418)) ^ v23)))(v35);
}

uint64_t sub_1000A83C4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * ((492
                                * (*(_DWORD *)(a21
                                             + 48
                                             * (int)(((((a1 + 1167920851) & 0xBA62E8FF) - 1127068836) ^ (a1 - 1990))
                                                   + v21)
                                             + 36) != v21)) ^ (a1 - 1081))))();
}

uint64_t sub_1000A8434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((882 * (v7 + 1 != v8 + 32)) ^ a6)))();
}

void sub_1000A8500()
{
}

void sub_1000A86B4()
{
}

uint64_t sub_1000A86BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6
                                                     + 8
                                                     * (((v4 - v5 < (((a4 - 668) | 0x80u) ^ 0x295uLL))
                                                       * ((a4 - 66) ^ 0x4B4)) ^ a4)))(a1, a1);
}

uint64_t sub_1000A86FC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 + 1174) | 6) - 1761) * ((v0 ^ 0x11u) > 7)) ^ v1)))();
}

uint64_t sub_1000A8730(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  HIDWORD(v19) = a1 ^ v18;
  LODWORD(v19) = a1 ^ v13;
  int v20 = (a4 ^ v14)
      + (v19 >> 27)
      + ((v9 ^ 0xA7BC5E3A) & (v8 ^ v14) | (((a6 - 911) | 0x391) ^ (v14 + 141) ^ v9) & (v7 ^ v14))
      + (*(_DWORD *)(v17 + 4 * (v6 + v15)) ^ v12);
  return (*(uint64_t (**)(void))(v11 + 8 * (a6 ^ (2 * (v6 + 1 == v16 + 4)))))(v20
                                                                                          - ((2 * v20 - 1257966798) & v10) - 1295639714);
}

uint64_t sub_1000A8804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v27 = 831981571 * ((((v26 - 160) | 0x9561A3CC) - ((v26 - 160) & 0x9561A3CC)) ^ 0xCC073E8);
  *(void *)(v26 - 152) = a25;
  *(_DWORD *)(v26 - 160) = v27 ^ a11;
  *(_DWORD *)(v26 - 156) = v27 + a7 + 1190;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (a7 + 2425)))(v26 - 160);
  uint64_t v29 = STACK[0x2D0] & 0x3F;
  *((unsigned char *)&STACK[0x28C] + (v29 ^ 0x2E)) = -9;
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((638 * ((v29 ^ 0x2E) > 0x37)) ^ a7)))(v28);
}

uint64_t sub_1000A88FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v6 - 1784) ^ v6 ^ 0xD3B ^ 0x42F) * (v5 == a5)) ^ v6)))();
}

uint64_t sub_1000A8934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v20 = 3804331 * ((((2 * (v19 - 136)) | 0x38F3BF76) - (v19 - 136) - 477749179) ^ 0x62ACFA4D);
  *(void *)(v19 - 136) = v18;
  *(_DWORD *)(v19 - 128) = v20 + a12 + 884;
  *(_DWORD *)(v19 - 124) = 183363314 - v20;
  (*(void (**)(uint64_t))(v16 + 8 * (a12 + 1175)))(v19 - 136);
  *(void *)(v19 - 120) = a14;
  *(void *)(v19 - 136) = a15;
  *(_DWORD *)(v19 - 128) = a12
                         + 831981571
                         * ((-856587052 - ((v19 - 136) | 0xCCF184D4) + ((v19 - 136) | 0x330E7B2B)) ^ 0xAAAFAB0F)
                         + 404;
  (*(void (**)(uint64_t))(v16 + 8 * (a12 ^ 0xD93)))(v19 - 136);
  *(void *)(v19 - 120) = a15;
  *(void *)(v19 - 136) = v18;
  *(_DWORD *)(v19 - 112) = (a12 - 159) ^ (((((v19 - 136) | 0x2BB75D3D) + (~(v19 - 136) | 0xD448A2C2)) ^ 0xF8150F36) * v17);
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (a12 + 1122)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((53 * (a12 ^ 0x4EAu) + v15 + *(_DWORD *)(v19 - 128) < 0xF6DE1DC8)
                                              * (5 * (a12 ^ 0x490) - 28)) ^ a12)))(v21);
}

void sub_1000A8ABC()
{
}

void sub_1000A8ADC()
{
}

uint64_t sub_1000A8AE8()
{
  unsigned int v5 = *(_DWORD *)(v2 + 4 * (v0 - 1));
  *(_DWORD *)(v2 + 4 * v0) = ((1566083941 * (v5 ^ (v5 >> 30))) ^ *(_DWORD *)(v2 + 4 * v0)) - v0;
  int v6 = 241568881 * ((~((v4 - 152) | 0x88B80944) + ((v4 - 152) & 0x88B80944)) ^ 0xA156F2F9);
  *(_DWORD *)(v4 - 148) = (v1 + 1240661931) ^ v6;
  *(_DWORD *)(v4 - 144) = v6 + v1 - 1501686873;
  int v7 = (v1 + 1240661977) ^ v6;
  *(_DWORD *)(v4 - 112) = v6;
  *(_DWORD *)(v4 - 108) = v7 ^ 0x18;
  *(_DWORD *)(v4 - 152) = v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 + 1400)))(v4 - 152);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 128)))(v8);
}

void sub_1000A8BD8()
{
}

void sub_1000A8C48(uint64_t a1@<X8>)
{
  int v6 = 460628867 * ((2 * ((v5 - 144) & 0xE505430) - (v5 - 144) - 240145459) ^ 0xBD3929B0);
  *(_DWORD *)(v5 - 144) = v6 + v1 - 68 + 877;
  *(_DWORD *)(v5 - 136) = (((v1 - 68) ^ 0xE4CCB91) + v2) ^ v6;
  *(void *)(v5 - 128) = a1;
  *(void *)(v5 - 120) = v4;
  (*(void (**)(uint64_t))(v3 + 8 * ((v1 - 68) ^ 0xBDE)))(v5 - 144);
  JUMPOUT(0x100097298);
}

uint64_t sub_1000A8CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, void))(v8
                                                    + 8
                                                    * (int)(((((a6 + 2122743188) & 0x81797F5F ^ (v6 + 806))
                                                            + ((a6 - 268437963) & 0xFA5B85F2))
                                                           * (v7 < 0x20)) ^ a6)))(a1, 0);
}

uint64_t sub_1000A8D30@<X0>(int a1@<W8>)
{
  *(void *)(v1 - 0x5267DA57ABB8ED88) = (*v3 + a1) + *(void *)(v4 - 0x6BA7059072F2C1D3) + 8;
  return (*(uint64_t (**)(void))(v7 + 8 * ((1910 * (*v6 == v5)) ^ (122 * v2))))();
}

uint64_t sub_1000A8D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v17 - 128) = (v15 + 323) ^ (268847287
                                        * ((((v17 - 128) | 0xD959A92C) - ((v17 - 128) & 0xD959A92C)) ^ 0x26F3B804));
  *(void *)(v17 - 120) = a13;
  *(void *)(v17 - 112) = v16;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 1622)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((((v15 + 1601417331) & 0x208C4EFB ^ 0x51C ^ (3 * (v15 ^ 0x3D5)))
                                              * (v13 == 670169886)) ^ v15)))(v18);
}

uint64_t sub_1000A8E54@<X0>(uint64_t a1@<X8>)
{
  int v6 = v1 + v2;
  int v7 = v2 + 1;
  *(_DWORD *)(*(void *)(v3 - 0x5E8E72AB319E4281) + 4 * (v6 + ((v5 + 192) | 0x2A4) - 1700)) = v4;
  *(_DWORD *)(v3 - 0x5E8E72AB319E4285) = v7;
  if (v1 + v7 + 1 >= 0) {
    int v8 = v1 + v7 + 1;
  }
  else {
    int v8 = ~(v1 + v7);
  }
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((((v8 ^ 0x7FFFDDC7)
                                       - 388563074
                                       + ((v8 << ((((v5 - 64) | 0xA4) + 54) ^ 0xDA)) & 0xFFFFBB8E)
                                       + v1) >> 31)
                                     * ((81 * ((((v5 + 192) | 0x2A4) + 54) ^ 0x6DD)) ^ 0x1DE)) ^ (((v5 + 192) | 0x2A4)
                                                                                                + 54))))();
}

uint64_t sub_1000A8F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v5
                                                                      + 8
                                                                      * (((v4 < ((v3 - 841) ^ 0x23Eu))
                                                                        * ((v3 ^ 0x157) - 802)) ^ v3)))(a1, a2, a3, 0);
}

uint64_t sub_1000A8F6C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((v1 ^ (v5 - 762)) - 1367514788) ^ v0) == v2 - 448110252) * ((v1 - v4) ^ (v5 + 269))) ^ v1)))();
}

void sub_1000A8FC0(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x5F548590D8AA63B5) = v1 + 1;
  JUMPOUT(0x100099CDCLL);
}

uint64_t sub_1000A8FDC@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)(v6 + (a1 ^ v3)) = a2;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 0) * v4) ^ v2)))();
}

uint64_t sub_1000A9008(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  unsigned int v9 = ((((a5 - 578921499) & 0x2281A7D7) + 93 * (a5 ^ 0x39C) + 972920467) & (2 * (a3 + v8 + (a2 ^ v6) + 8)))
     + ((a3 + v8 + (a2 ^ v6) + 8) ^ 0x9CFECFDD)
     + 1338508772;
  unsigned int v10 = v7 - 1636352564;
  int v11 = (v10 < 0xECC6D5C1) ^ (v9 < 0xECC6D5C1);
  BOOL v12 = v9 > v10;
  if (v11) {
    BOOL v12 = v9 < 0xECC6D5C1;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((113 * v12) ^ a5)))();
}

uint64_t sub_1000A90BC@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((v4 == (v5 ^ v3) + v2) * ((v5 ^ a1) - 15)) ^ v5)))();
}

void sub_1000A90E8()
{
  *(_DWORD *)(v1 + 16) = v0;
}

uint64_t sub_1000A912C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((229
                                * ((((((v17 - 1704253530) & 0xFFFFFFFC) - a16 == -1704253533) ^ (v16 - 57)) ^ (35 * (v16 ^ 0x7D) + 1)) & 1)) ^ v16)))();
}

uint64_t sub_1000A918C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v15 - 128) = v14;
  *(_DWORD *)(v15 - 120) = v13
                         + 831981571
                         * ((-855703707 - ((v15 - 128) | 0xCCFEFF65) + ((v15 - 128) | 0x3301009A)) ^ 0xAAA0D0BE)
                         + 1292;
  *(void *)(v15 - 112) = a12;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v13 + 2025)))(v15 - 128);
  return sub_1000A91F8(v16);
}

uint64_t sub_1000A9234(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((a1 - 1192003318) & 0x470C8B55 ^ (a1 - 1419146662) & 0x5496779F ^ 0xF96) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1000A928C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((122 * (((a2 - 503284277) | 0x85B0080) ^ (v4 + 1488))) ^ 0x35B)
                                * ((v3 + v2 - 1027059324) > 7)) ^ a2)))();
}

void sub_1000A930C()
{
}

void sub_1000A93EC()
{
}

void sub_1000A93FC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + v3) = v2;
  JUMPOUT(0x10007EA30);
}

uint64_t sub_1000A9404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  int v12 = 13 * (v9 ^ 0x494) + (a9 ^ v10) - ((2 * (a9 ^ v10)) & 0x2C452384) + 371362431;
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((86
                                * (((2 * v12) & 0x7A6F5CF8 ^ 0x28450080) + (v12 ^ 0x2B153FBE) - 86016540 == 941042784)) ^ v9)))();
}

void sub_1000A9498()
{
}

uint64_t sub_1000A94A8@<X0>(int a1@<W2>, int a2@<W3>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (a1 + v6)) = *(unsigned char *)(v5 + (a1 + v6));
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * ((217 * (((a2 - 89 - v7) ^ (a1 - 1 == v4)) & 1)) ^ (a2 - 89))))(0);
}

uint64_t sub_1000A94EC@<X0>(int a1@<W8>)
{
  unint64_t v4 = v1 + v2;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((246
                                * (v4 - v1 + ((a1 - 817441824) ^ 0xCF46D028) + 1574143520 < (unint64_t)((a1 - 817441824) & 0x30B92FFF)
                                                                                          - 1360)) ^ a1)))();
}

uint64_t sub_1000A9560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  return (*(uint64_t (**)(void))(v29
                              + 8
                              * ((((*(_DWORD *)(a28 + 48 * v28 + 36) + 1020415285) < 0x80000003)
                                * (v30 + 1820)) ^ v30)))();
}

uint64_t sub_1000A95B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((((v6 - 75778741) & 0xEEDFCED8 ^ (v7 + 2202)) + 11 * (v6 ^ 0x3F)) * (v5 == a5)) | v6)))();
}

uint64_t sub_1000A95FC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  (*(void (**)(uint64_t, uint64_t))(v22 + 8 * (a1 ^ (a1 + 2186))))(a13, 2965982036);
  uint64_t v25 = (*(uint64_t (**)(void))(v22 + 8 * (v23 + 1340333714)))();
  _DWORD *v24 = v25;
  return sub_1000A9670(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1000A9670@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  *(_DWORD *)(v8 + 4 * a2) = a2 + (a1 ^ (a1 >> 30)) * v2;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a2 < 0x26F) * ((v6 + v3) & v4 ^ v5)) ^ v6)))();
}

uint64_t sub_1000A96AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v28 = v24 - 2147347870;
  if ((v24 - 2147347870) <= 0x40) {
    int v28 = 64;
  }
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((480 * (2147346993 - v25 - v26 + (HIDWORD(a17) ^ 0x18Bu) + v28 < ((HIDWORD(a17) + 748) ^ 0x5DDu))) ^ HIDWORD(a17))))(-v26, a2, a3, 3263642160, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_1000A9744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(void *)(v23 - 112) = a19;
  *(void *)(v23 - 128) = v22;
  *(_DWORD *)(v23 - 104) = (v19 + 583) ^ (((((v23 - 128) ^ 0x49DE5C78)
                                          + 368649495
                                          - 2 * (((v23 - 128) ^ 0x49DE5C78) & 0x15F92517)) ^ 0x8F852B65)
                                        * v21);
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v19 ^ 0xB58)))(v23 - 128);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * ((((*(_DWORD *)(v23 - 120) - 1961907322) < 0xCDFB732B)
                                              * (((v19 + 520) ^ 0x5EA) + 2343)) ^ v19)))(v24);
}

uint64_t sub_1000A980C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(_DWORD *)(*(void *)(a7 - 0x5E8E72AB319E4281) + 4 * (v11 + v9)) = v7
                                                                         - ((2 * v7 - 1595135426) & v10)
                                                                         + ((98 * (v8 ^ 0x16A)) ^ 0xB558C648);
  return sub_1000A9860();
}

void sub_1000A9860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(_DWORD *)(a7 - 0x5E8E72AB319E4285) = (((v8 + v7) * (v9 - 1694193230)) ^ 0x6CFEFFDD)
                                         - 69739160
                                         + ((2 * (v8 + v7) * (v9 - 1694193230)) & 0xD9FDFFBA);
}

uint64_t sub_1000A98F0@<X0>(_DWORD *a1@<X4>, int a2@<W8>)
{
  int v4 = (((a2 - 1683) | 0x441) ^ 0x2521B281) + *a1;
  BOOL v5 = v2 + 622966336 < ((a2 - 1541060690) & 0x5BDAB5FF ^ 0xDF89744);
  int v6 = v5 ^ (v4 < 234394501);
  BOOL v7 = v2 + 622966336 > v4;
  if (!v6) {
    BOOL v5 = v7;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((4032 * v5) ^ a2)))();
}

void sub_1000A997C()
{
}

uint64_t sub_1000A9988(uint64_t a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a10 + v11 + ((v12 - 613) | a2)) = v14;
  return (*(uint64_t (**)(void))(v13 + 8 * ((((v10 & 0x38) == 8) * a3) ^ v12)))();
}

uint64_t sub_1000A99CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v37 = (*(uint64_t (**)(uint64_t, void))(v36 + 8 * (v35 ^ 0xB07)))(a23, 0);
  uint64_t v38 = *(void *)(a35 + 16);
  *(_DWORD *)(a35 + 4) = *(_DWORD *)(a35 + 24);
  *(_DWORD *)(a35 + 8) = v38;
  uint64_t v39 = 8 * (v35 ^ 0xB06);
  *(_DWORD *)(a35 + 12) = (*(uint64_t (**)(uint64_t))(v36 + v39))(v37);
  uint64_t v40 = (*(uint64_t (**)(void))(v36 + v39))();
  *(_DWORD *)a35 = v40;
  LODWORD(a29) = 570;
  return sub_1000A9ADC(v40, v41, v42, v43, v44, v45, v46, v47, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1000A9ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  *(_DWORD *)(v40 + 4 * (v36 + 1 + v39)) = *(_DWORD *)(a35 + 4 * (v38 - 1855926951))
                                                         + v38
                                                         - 1855926951
                                                         + ((1664525
                                                           * (*(_DWORD *)(v40 + 4 * (v36 + v39)) ^ (*(_DWORD *)(v40 + 4 * (v36 + v39)) >> 30))) ^ *(_DWORD *)(v40 + 4 * (v36 + 1 + v39)));
  *(void *)(v42 - 120) = a32;
  *(_DWORD *)(v42 - 128) = ((v41 + 2034911559) ^ 0x22) - v35;
  *(_DWORD *)(v42 - 108) = v41 + 2034911559 - v35;
  *(_DWORD *)(v42 - 104) = v35 + v41 + 764300735;
  *(_DWORD *)(v42 - 112) = ((v41 + 2034911559) ^ 0x4F) + v35;
  *(void *)(v42 - 136) = (v36 - 12661208) + v35;
  *(_DWORD *)(v42 - 140) = v35 ^ 1;
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(v37 + 8 * (v41 - 1340329268)))(v42 - 144);
  return (*(uint64_t (**)(uint64_t))(v37 + 8 * *(int *)(v42 - 144)))(v43);
}

uint64_t sub_1000A9BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1018 * (a5 + 1 != v7 + 48)) ^ a6)))();
}

uint64_t sub_1000A9C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8 * (((a11 == ((v13 - 1345326691) & 0x50300DEF ^ (v11 + 31))) * (v13 ^ 0x27B)) ^ v13)))();
}

void sub_1000A9CD8()
{
}

uint64_t sub_1000A9CE0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10)
{
  return (*(uint64_t (**)(void))(v10
                              + 8 * ((216 * (a1 - v11 - 435081137 != (((a10 ^ 0x858) + 1061) ^ 0xEFCBA3BC))) ^ a10)))();
}

uint64_t sub_1000A9D6C@<X0>(int a1@<W6>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a1 + ((a2 + 1224834686) | 0x2667203) + 576) * (v3 == v2)) ^ a2)))();
}

uint64_t sub_1000A9DA8(uint64_t a1, int a2)
{
  *(_DWORD *)(v5 + 4 * (v2 + 1 + v4)) = 1629332737
                                                      - v2
                                                      + ((1566083941
                                                        * (*(_DWORD *)(v5 + 4 * (v2 + v4)) ^ (*(_DWORD *)(v5 + 4 * (v2 + v4)) >> 30))) ^ *(_DWORD *)(v5 + 4 * (v2 + 1 + v4)));
  unint64_t v8 = 69008221
     * ((((v7 - 144) | 0x97377B8E1D0D2CA1) - (v7 - 144) + ((v7 - 144) & 0x68C88471E2F2D358)) ^ 0xC5AB3D6DCEAF7EABLL);
  *(void *)(v7 - 120) = 3617124396u - v8;
  *(void *)(v7 - 136) = (v2 + 1987791660) + v8;
  int v9 = v6 - 53885601 - v8;
  *(_DWORD *)(v7 - 128) = v9 - 2;
  *(_DWORD *)(v7 - 140) = v8 | 1;
  *(_DWORD *)(v7 - 112) = ((v6 - 53885601) ^ 0x5D) + v8;
  *(_DWORD *)(v7 - 108) = v9;
  *(_DWORD *)(v7 - 104) = v8 + v6 + 764300735;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v6 ^ (a2 + 2381))))(v7 - 144);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v7 - 144)))(v10);
}

uint64_t sub_1000A9ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16)
{
  a15 = ((v17 ^ 0x1A6) - 612) ^ (69008221
                               * ((((2 * &a15) | 0x865F37CA) - &a15 + 1020290075) ^ 0x108DC9EF));
  a16 = a13;
  uint64_t v18 = (*(uint64_t (**)(unsigned int *))(v16 + 8 * (v17 ^ 0xBA0)))(&a15);
  return sub_1000B13E0(v18);
}

uint64_t sub_1000A9EE4@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  LOBYTE(STACK[0x290]) = *(unsigned char *)(a1 + a2);
  return (*(uint64_t (**)(void))(v5 + 8 * ((1298 * (v4 + v3 + 1150 < 14 * (v2 ^ 0x341) - 66)) ^ v2)))();
}

uint64_t sub_1000A9F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v14 = (unsigned __int8 *)(a5 + a1 + v12);
  int v15 = *v14 ^ v13;
  LODWORD(v14) = ((v14[2] ^ v13) << 16) | ((v14[3] ^ 0x77777777) << 24) | v15 | ((*(unsigned __int8 *)(a5 + ((v8 - 1241) ^ (unint64_t)(v12 + 337)) + a1) ^ v13) << 8);
  *(_DWORD *)(v9 + ((a1 + v12) & 0xFFFFFFFFFFFFFFFCLL)) = v14
                                                        + v10
                                                        - 2 * (v14 & (a8 + 16) ^ v15 & 0x10);
  return (*(uint64_t (**)(void))(v11 + 8 * ((7 * ((unint64_t)(a1 + 4 + v12) < 0x40)) ^ v8)))();
}

uint64_t sub_1000A9FB8@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v3 - 1234009425) & 0x498D7FBF ^ (a2 + 2537)) + ((v3 + 1728052844) | 0xC24400))
                                * (v2 == a1)) ^ v3)))();
}

uint64_t sub_1000AA010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_10007EB04(a1, a2, a3, a4, a5, a6, a7, a26, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1000AA020(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(int8x8_t *)(v9 - 7 + (v7 + v8 + v11 - a4)) = veor_s8(*(int8x8_t *)(v5- 7+ (v7 + v8 + v11 - a4)), (int8x8_t)0x7777777777777777);
  return (*(uint64_t (**)(void))(v10 + 8 * (((a4 - (v6 & 0xFFFFFFF8) == -8) * (((v4 + 385) | 0x200) - 1612)) | v4)))();
}

uint64_t sub_1000AA080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a10 + v11) = v14;
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * ((((((v12 - 130) - 139) & v10) != 8) * ((v12 + 361) ^ 0x3E8)) ^ (v12 - 130))))();
}

uint64_t sub_1000AA0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14, uint64_t a15, int a16)
{
  unsigned int v19 = 1224239923
      * ((-1424351604 - (&a13 | 0xAB1A1E8C) + (&a13 | 0x54E5E173)) ^ 0xA6561CA4);
  a15 = a9;
  a16 = v19 ^ 0x3B7;
  a13 = ((2 * v16) & 0xD1DB6FF2) - v19 + (v16 ^ 0xE8EDB7F9) + 2131943039;
  uint64_t v20 = (*(uint64_t (**)(unsigned int *))(v18 + 19624))(&a13);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((3677 * (a14 == v17)) ^ 0x6CAu)))(v20);
}

uint64_t sub_1000AA1B4()
{
  return (*(uint64_t (**)(void))(v0
                              + 8 * ((786 * (((v1 - 1185727500) & 0x46ACC393 ^ 0xA8576421) + v2 != -53157173)) ^ v1)))();
}

void sub_1000AA20C()
{
}

uint64_t sub_1000AA284()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((((2 * v0) ^ 0x4B4) - 967) | 0x98) ^ 0xEF)
                                * (*(void *)(v1 + 40) == 0xD1C4B9DDB1E97A5)) ^ v0)))();
}

uint64_t sub_1000AA2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * (((((v4 - 506) & v3) == 0) * (3 * (v4 ^ 0xBF) - 2082)) ^ v4)))(a1, a2, a3);
}

uint64_t sub_1000AA458(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(a6 + (v9 + 69)) = *(unsigned char *)(a3
                                                      + (((v6 - 766) + 4294967225) & (v8 + 2998949688)));
  return (*(uint64_t (**)(void))(v10 + 8 * (v6 ^ (3029 * ((a1 + v7 + 1152) < 4)))))();
}

uint64_t sub_1000AA4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((113 * (a3 + 1 == v4 + 40)) ^ v3)))();
}

void sub_1000AA56C(int a1@<W8>)
{
  if (*v2 + 388571835 >= v1) {
    int v3 = a1 - 88;
  }
  else {
    int v3 = -271863906 - a1;
  }
  *uint64_t v2 = *v2 - 2011551651 + v3;
  JUMPOUT(0x1000AA5FCLL);
}

void sub_1000AA64C()
{
}

uint64_t sub_1000AA6C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _DWORD *a5@<X8>)
{
  uint64_t v11 = a1[5];
  uint64_t v10 = a1[6];
  uint64_t v12 = *a1;
  *a5 = v7 - 1043703471;
  *(_DWORD *)(v12 - 0x6F85854725FFE88ELL) = v6;
  *(_DWORD *)(v11 - 0x24E69FC94968431CLL) = a3;
  *(void *)(v10 - 0x5E9044A69B37973) = v5 + (((v8 - 447) | 0x24A) ^ 0xEFA3E8CB) + v9;
  return sub_10006A974((uint64_t)a1, a2, a3, a4, -563355418);
}

uint64_t sub_1000AA740(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 48) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1000AA758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8
                                   * ((((v6 ^ 0x5E9) + ((v6 - 1007294770) & 0x3C0A16F3) + 2285) * (v5 == a5)) ^ v6)))();
}

uint64_t sub_1000AA79C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8 * (((v3 - 618 + 22 * (v3 ^ 0x723) - 1932) * (v1 == v2)) ^ v3)))(a1, -653949007);
}

uint64_t sub_1000AA7DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((14 * ((((unint64_t)(v6 - v4 + 4) < 0x20) ^ (a4 - 36)) & 1)) ^ a4)))();
}

uint64_t sub_1000AA820(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 8);
  memset((void *)(v5 - 204), 119, 16);
  int v8 = ((v5 - 168) ^ 0x94AD4959) * a3;
  int v9 = (void *)(v5 - 168);
  v9[5] = v5 - 204;
  void *v9 = v6;
  _DWORD v9[2] = v5 - 188;
  v9[3] = v7;
  *(_DWORD *)(v5 - 132) = (v3 + 2033) ^ v8;
  *(_DWORD *)(v5 - 160) = v8 + 396484252;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v3 ^ 0x9D4)))(v5 - 168);
  *(_DWORD *)(a2 + 40) = *(_DWORD *)(v5 - 136);
  return result;
}

uint64_t sub_1000AA8E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26)
{
  return sub_100092458(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           v26);
}

void wyjYwk(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3) {
    BOOL v6 = a4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v9 = v6 || a5 == 0 || a6 == 0;
  __asm { BRAA            X8, X17 }
}

void sub_1000AA978()
{
}

uint64_t sub_1000AA980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((3926 * (v6 + 1 == v8 + 16)) ^ a6)))();
}

uint64_t sub_1000AAA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t a19, uint64_t a20,uint64_t a21)
{
  unsigned int v28 = v21 + 537;
  int v29 = 1224239923 * ((v26 & 0x2790CF84 | ~(v26 | 0x2790CF84)) ^ 0x2ADCCDAC);
  LODWORD(a21) = (v28 + 41) ^ v29;
  LODWORD(a19) = (v25 ^ 0x69BEB7FD) + ((2 * v25) & 0xD37D6FFA) - v29 - 29237637;
  a20 = a17;
  (*(void (**)(unint64_t *))(v27 + 8 * (v28 ^ 0xA1B)))(&a19);
  int v30 = 1224239923 * ((((2 * v26) | 0x97CE40C2) - v26 + 874045343) ^ 0x3954DDB6);
  a20 = a17;
  LODWORD(a19) = (v24 ^ 0xEDD8B7FF) - v30 + ((((v28 - 910) | 0x175) - 609128823) & (2 * v24)) + 2049433209;
  LODWORD(a21) = (v28 + 41) ^ v30;
  (*(void (**)(unint64_t *))(v27 + 8 * (v28 ^ 0xA1B)))(&a19);
  unint64_t v31 = 831981571 * ((v26 - 2 * (v26 & 0x26717E1E77E9F691) + 0x26717E1E77E9F691) ^ 0xF7813F5EEE4826B5);
  LODWORD(a20) = (v28 + 149) ^ v31;
  a21 = a17;
  a19 = v31 ^ (v23 - ((2 * v23) & 0xD8C7C8F144A3A274) + 0x6C63E478A251D13ALL);
  (*(void (**)(unint64_t *))(v27 + 8 * (v28 ^ 0xA27)))(&a19);
  unint64_t v32 = 831981571 * ((-2 - ((~v26 | 0x54A2F2BB4CFCE4EBLL) + (v26 | 0xAB5D0D44B3031B14))) ^ 0x8552B3FBD55D34CFLL);
  a21 = a17;
  a19 = v32 ^ (v22 - ((2 * v22) & 0xD8C7C8F144A3A274) + 0x6C63E478A251D13ALL);
  LODWORD(a20) = (v28 + 149) ^ v32;
  uint64_t v33 = (*(uint64_t (**)(unint64_t *))(v27 + 8 * (v28 ^ 0xA27)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((1584 * (HIDWORD(a20) == -563355418)) ^ v28)))(v33);
}

uint64_t sub_1000AACE8(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(v6 + (v4 ^ v7) + a1) = v9;
  BOOL v10 = v5 == a1;
  uint64_t v11 = a1 + 8;
  int v12 = !v10;
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((v12 * a3) ^ v3)))(v11);
}

uint64_t sub_1000AAD14@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  unsigned int v7 = *(_DWORD *)((char *)&STACK[0x28C] + ((v5 + v2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v5 + v2 + 1)) = (BYTE2(v7) ^ 0x43) - ((2 * (BYTE2(v7) ^ 0x43)) & 0xEF) + 119;
  *(unsigned char *)(a1 + (v5 + v2)) = (HIBYTE(v7) ^ 0x58)
                                           - (((HIBYTE(v7) ^ 0x58) << (((v3 + 118) & 0x3D) - 56)) & 0xEE)
                                           + 119;
  *(unsigned char *)(a1 + (v5 + v2 + 2)) = (BYTE1(v7) ^ 0xA1) - ((2 * (BYTE1(v7) ^ 0xA1)) & 0xEF) + 119;
  *(unsigned char *)(a1 + (v5 + v2 + 3)) = v7 ^ 0xB2;
  unsigned int v8 = LODWORD(STACK[0x2E8]) - 2094768670;
  BOOL v9 = v8 < a2;
  BOOL v10 = v5 + 1796450391 < v8;
  if (v5 + 1796450391 < a2 != v9) {
    BOOL v10 = v9;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((!v10 * v4) ^ v3)))();
}

uint64_t sub_1000AAE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 460628867 * ((v18 - 644137939 - 2 * ((v18 - 152) & 0xD99B3CC5)) ^ 0x950DBEB8);
  *(_DWORD *)(v18 - 124) = v14 - v20 + 232;
  *(void *)(v18 - 120) = a14;
  *(void *)(v18 - 112) = a12;
  *(void *)(v18 - 136) = v19;
  *(void *)(v18 - 104) = a11;
  *(_DWORD *)(v18 - 144) = v20 + v17 - 1573481390;
  *(void *)(v18 - 152) = a13;
  (*(void (**)(uint64_t))(v16 + 8 * (v14 ^ 0x8E7u)))(v18 - 152);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16
                                                     + 8
                                                     * (int)(((*(_DWORD *)(v18 - 128) == v15)
                                                            * (((v14 + 702) | 0x314) ^ 0xFD0BA4AA ^ (v14 - 15733427) & 0xFDFBBBFB)) ^ v14)))(1127068362, 1074653292);
}

uint64_t sub_1000AAF30(double a1)
{
  *(double *)(v2 + v4) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 != v4) * v5) ^ v1)))();
}

void sub_1000AAF54()
{
}

uint64_t sub_1000AAFAC(int a1, uint64_t a2, unint64_t a3, int a4, uint64_t a5, unint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  BOOL v37 = v25 > v28;
  int v38 = a1 + a4;
  int v39 = a1 + 1;
  uint64_t v40 = 4 * (v39 + a4);
  unint64_t v41 = (*(_DWORD *)(a24 + v40) ^ v24) + (a2 ^ HIDWORD(a6));
  unint64_t v42 = (v36 >> ((v32 + 68) ^ v34))
      + v31 * (unint64_t)(*(_DWORD *)(*v33 + v40) ^ v24)
      + ((v41 + v27 - (v30 & (2 * v41))) ^ a3);
  *(_DWORD *)(a24 + 4 * v38) = v42 + v24 - (v26 & (2 * v42));
  if (v37 == v39 + 319880890 < a8 + 1116) {
    BOOL v37 = v39 + 319880890 < v35;
  }
  return (*(uint64_t (**)(void))(v29 + 8 * (v37 ^ v32 ^ 1)))();
}

uint64_t sub_1000AB05C()
{
  return sub_1000AB064();
}

uint64_t sub_1000AB064(uint64_t a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v53 = BYTE4(a37) ^ 0x89;
  unint64_t v73 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8 * v46);
  HIDWORD(a18) = BYTE4(a37) ^ 0xFFFFFF89;
  HIDWORD(v72) = a36;
  LODWORD(v72) = HIDWORD(a34);
  *(void *)((char *)&v72 + 4) = a35;
  if (v53 == 2)
  {
    int8x16x4_t v75 = vld4q_s8(v47);
    HIDWORD(a16) = HIDWORD(a36);
    uint8x16_t v61 = (uint8x16_t)veorq_s8(v75.val[1], a2);
    _Q22 = vmovl_u8(*(uint8x8_t *)v61.i8);
    _Q21 = vmovl_high_u8(v61);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    int v66 = (_DWORD *)(v45 + 4 * (v48 + 16 + v51));
    int v67 = *(v66 - 8) ^ *(v66 - 3);
    unsigned int v68 = v67 + v49 - ((v67 << (v52 - 25)) & 0xBCD7C1CC);
    int v69 = *(v66 - 16) ^ *(v66 - 14);
    HIDWORD(v70) = v69 ^ 0x5E6BE0E6 ^ v68;
    LODWORD(v70) = v69 ^ ~v68;
    *int v66 = (v70 >> 31) + v49 - ((2 * (v70 >> 31)) & 0xBCD7C1CC);
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8 * ((84 * (v48 + 17 == v48 + 80)) ^ (v52 + 560892780))))(a1, HIDWORD(a36), HIDWORD(v70), 732163552, a6, a35, a8, HIDWORD(a34), a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, v72,
             *((void *)&v72 + 1),
             v73,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45);
  }
  else
  {
    if (v53 == 1)
    {
      int8x16x4_t v74 = vld4q_s8(v47);
      uint8x16_t v54 = (uint8x16_t)veorq_s8(v74.val[2], a2);
      _Q26 = vmovl_high_u8(v54);
      _Q25 = vmovl_u8(*(uint8x8_t *)v54.i8);
      __asm
      {
        SHLL2           V25.4S, V25.8H, #0x10
        SHLL2           V26.4S, V26.8H, #0x10
      }
      JUMPOUT(0x1000AB1E8);
    }
    return sub_10009E688(a1, HIDWORD(a34), a36, a5, a6, a35, a8, HIDWORD(a34), a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, v72,
             *((uint64_t *)&v72 + 1),
             v73,
             a23,
             a24,
             a25,
             a26,
             a27);
  }
}

uint64_t sub_1000AB4D8(uint64_t result)
{
  if ((v2 + v1) >= 0x7FFFFFFF) {
    int v6 = v5 - v4 - 777144156;
  }
  else {
    int v6 = v4;
  }
  int *v3 = v6;
  *(_DWORD *)(result + 24) = 1569142212;
  return result;
}

uint64_t sub_1000AB520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(unsigned char *)(v16 + (a8 + v13)) = *(unsigned char *)(v9 + ((a8 + v13) & 0xFLL)) ^ *(unsigned char *)(v8
                                                                                                + (a8 + v13)) ^ *(unsigned char *)(v11 + (((_BYTE)a8 + (_BYTE)v13) & 0xF)) ^ *(unsigned char *)((((_BYTE)a8 + (_BYTE)v13) & 0xF) + v10 + 1) ^ (((a8 + v13) & 0xF) * ((v14 - 74) ^ 0xDB));
  return (*(uint64_t (**)(void))(v15 + 8 * ((38 * (a8 - 1 == v12)) ^ (v14 + 688))))();
}

uint64_t sub_1000AB588@<X0>(int a1@<W8>)
{
  BOOL v5 = (*(_DWORD *)(v2 + 44) ^ a1) == ((v1 + 302291833) & 0xEDFB5E7B ^ 0x13097B23) || *(_OWORD *)(v2 + 48) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((90 * (((v1 + 1) ^ v5) & 1)) ^ v1)))();
}

uint64_t sub_1000AB5F4()
{
  *int v1 = v1[623];
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 - 1021) | 0x77) ^ 0x22A) * (v3 == 1)) | (v0 + 29))))();
}

void sub_1000AB638()
{
}

void sub_1000AB644()
{
}

void sub_1000AB64C()
{
}

uint64_t sub_1000AB658()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2324
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ (v0 + (v3 ^ 0x2A1) - 828)) == v0)) ^ v3)))();
}

uint64_t sub_1000AB69C(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(v6 + (v3 | a2)) = v8;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 0) * a3) ^ v4)))();
}

void sub_1000AB6CC(_DWORD *a1@<X8>)
{
  uint64_t v4 = *v2;
  *(void *)(v2[3] - 0x7073A7D8AAAECA15) = v1;
  *(_DWORD *)(v4 - 0x2325945160E62A17) = v3;
  *((_DWORD *)v2 + 3) = *a1;
}

void sub_1000AB738()
{
}

uint64_t sub_1000AB740()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((95
                                * ((((((v2 + 98730128) & 0xFA1D7F6F ^ (((v2 + 913) ^ 0x2F9) - 1758913201)) + v3)
                                   * (v1 - 1758911813)) & 0x80000000) == 0)) ^ (v2 + 913))))();
}

uint64_t sub_1000AB7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12)
{
  BOOL v15 = a12 < 0x501C34EE;
  if (v15 == (v12 - 105760321) < 0x501C34EE) {
    BOOL v15 = v12 - 105760321 < a12;
  }
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((!v15 * (v13 - 727)) ^ v13)))(2845181080);
}

uint64_t sub_1000AB818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, int a14, uint64_t a15, int a16, uint64_t a17, int a18, uint64_t a19, unsigned int a20)
{
  uint64_t v26 = *(void *)(v20 + 32);
  unsigned int v27 = 268847287 * ((270127462 - (&a13 | 0x1019D166) + (&a13 | 0xEFE62E99)) ^ 0x104C3FB1);
  a19 = *(void *)(v20 + 24);
  a17 = a10;
  a20 = (v23 ^ 0xB8FFE3E7) + (v24 & 0x71FFC7CE) - v27 + 1875877311;
  a18 = v25 - v27 + 368398211;
  a13 = v26;
  a15 = a10;
  a16 = v25 - v27 + a12 - ((((v25 - 1673) | 0x40) + 1620908975) & (2 * a12)) + 810452700;
  uint64_t v28 = (*(uint64_t (**)(uint64_t *))(v22 + 8 * (v25 + 447)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((30 * (a14 == v21)) ^ v25)))(v28);
}

void sub_1000AB928()
{
}

void sub_1000AB934(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 3804331 * ((2 * (a1 & 0x5C5A643E) - a1 - 1549427775) ^ 0xDD70BE37);
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned int v6 = v1
     - 460628867 * ((-4722230 - (&v4 | 0xFFB7F1CA) + (&v4 | 0x480E35)) ^ 0x4CDE8C48)
     - 700;
  uint64_t v4 = v2;
  int v3 = (char *)*(&off_10026C690 + (v1 ^ 0x566)) - 4;
  (*(void (**)(uint64_t *))&v3[8 * v1 + 8424])(&v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000ABA84@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = 0;
  *int v1 = a1;
  return result;
}

uint64_t sub_1000ABA98()
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((481 * (v0 - STACK[0x4B0] < (((v1 ^ 0x1AFu) + 95) ^ 0x312uLL))) ^ v1 ^ 0x1AF)))();
}

uint64_t sub_1000ABAE4(__n128 a1)
{
  *(__n128 *)(v4 + v3) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 != 1500) * v2) | v1)))();
}

void sub_1000ABB08()
{
  STACK[0x328] = *(void *)(v0 + 8 * (v1 - 759));
  JUMPOUT(0x1000ABB20);
}

uint64_t sub_1000ABB34@<X0>(int a1@<W2>, int a2@<W3>, unint64_t a3@<X8>)
{
  STACK[0x588] = v4;
  LODWORD(STACK[0x594]) = v3;
  STACK[0x4C0] = a3;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1416
                                * (v3
                                 + 1957708257
                                 + (a2 & (2 * *(_DWORD *)(v4 - 0xB999BAB1C51203FLL)) ^ 0xC)
                                 + (*(_DWORD *)(v4 - 0xB999BAB1C51203FLL) & 0x3F ^ (a1 + 35)) < (((v6 ^ 0x7A5) - 687) ^ 0xFFFFFB58))) ^ v6)))();
}

uint64_t sub_1000ABBBC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, void))(v3 + 8 * ((3350 * (v4 - 1758911814 >= 0)) ^ a2)))(a1, (a3 + 1));
}

uint64_t sub_1000ABC04()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2424
                                * (((v1 + 69 * (v2 ^ 0x191) - 828) & (2 * (*(unsigned __int8 *)(v3 + 8) - 11)))
                                 + ((*(unsigned __int8 *)(v3 + 8) - 11) ^ v0) == v0)) ^ v2)))();
}

void sub_1000ABC50(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (235795823 * (((a1 | 0x87E968F1) - (a1 & 0x87E968F1)) ^ 0x134421A8));
  unsigned int v2 = (char *)*(&off_10026C690 + (v1 ^ 0x110)) - 4;
  uint64_t v3 = *(void *)a1;
  (*(void (**)(char *, uint64_t (*)()))&v2[8 * (v1 ^ 0x871)])((char *)*(&off_10026C690 + (v1 ^ 0x10D)) - 12, sub_10009CEB8);
  __asm { BRAA            X9, X17 }
}

void sub_1000ABD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(&off_10026C690
       + ((-113 * (dword_100283A88 ^ 0xEA ^ qword_100283A78)) ^ byte_100214730[byte_1002113C0[(-113 * (dword_100283A88 ^ 0xEA ^ qword_100283A78))] ^ 0xBB])
       - 144);
  uint64_t v4 = *(&off_10026C690
       + ((-113 * ((qword_100283A78 - *v3) ^ 0xEA)) ^ byte_10021E6E0[byte_1002186D0[(-113 * ((qword_100283A78 - *v3) ^ 0xEA))] ^ 0x69])
       + 32);
  uint64_t v5 = (*v4 ^ *v3) - (void)&v7;
  void *v3 = 1932141199 * v5 - 0x5BC8EB821F80EA16;
  *uint64_t v4 = 1932141199 * (v5 ^ 0xA437147DE07F15EALL);
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  LODWORD(v5) = 235795823
              * (((&v9 | 0xD878EB21) - &v9 + (&v9 & 0x278714D8)) ^ 0x4CD5A278);
  uint64_t v9 = &STACK[0xB999BAB1C5120FF];
  int v10 = v5 ^ 0x78F2562C;
  int v11 = v5 - 1882357464;
  LODWORD(v3) = 1932141199 * ((*(_DWORD *)v4 + *(_DWORD *)v3) ^ 0xE07F15EA);
  int v6 = (char *)*(&off_10026C690
               + ((-113 * ((qword_100283A78 + dword_100283A88) ^ 0xEA)) ^ byte_10021E6E0[byte_1002186D0[(-113 * ((qword_100283A78 + dword_100283A88) ^ 0xEA))] ^ 0x55])
               + 31)
     - 4;
  (*(void (**)(unint64_t **))&v6[8
                                                 * (byte_10021E6E0[byte_1002186D0[v3] ^ 0x48] ^ v3)
                                                 + 18456])(&v9);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000AC02C()
{
  return sub_1000AC03C();
}

uint64_t sub_1000AC03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return v5 ^ a5;
}

uint64_t sub_1000AC07C()
{
  uint64_t v6 = *(void *)(v9 + 32);
  int v7 = 831981571 * ((((v5 - 144) | 0x90F04090) - ((v5 - 144) & 0x90F04090)) ^ 0x95190B4);
  *(void *)(v5 - 144) = v10;
  *(_DWORD *)(v5 - 136) = v0 - v7 + 334;
  *(_DWORD *)(v5 - 132) = v7 + 517764793;
  (*(void (**)(uint64_t))(v4 + 8 * (v0 ^ 0xDDF)))(v5 - 144);
  *(void *)(v5 - 128) = v1;
  *(void *)(v5 - 120) = v3;
  *(_DWORD *)(v5 - 112) = v0 - 1224239923 * ((v5 - 144) ^ 0xF2B3FDD7) - 710;
  *(void *)(v5 - 144) = v2;
  *(void *)(v5 - 136) = v1;
  *(void *)(v5 - 104) = v10;
  (*(void (**)(uint64_t))(v4 + 8 * (v0 + 1117)))(v5 - 144);
  *(_DWORD *)(v5 - 136) = v0 + 831981571 * (((v5 - 144) & 0x591B3C7C | ~((v5 - 144) | 0x591B3C7C)) ^ 0x3F4513A7) + 489;
  *(void *)(v5 - 144) = v1;
  *(void *)(v5 - 128) = v6;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v0 + 1222)))(v5 - 144);
}

uint64_t sub_1000AC1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((3 * ((v7 - 1207960126) & 0x6CFE9B9F ^ (v5 + 2088))) ^ 0x436) * (v6 == a5)) ^ v7)))();
}

uint64_t sub_1000AC204@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W4>, int a4@<W5>, int a5@<W6>, int a6@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 24) + (a5 + a6)) = (a4 ^ v8) >> a2;
  return (*(uint64_t (**)(void))(v6 + 8 * ((294 * (a5 + a3 - 900 - 323 == (a3 ^ 0x2A3) + v7)) ^ a3)))();
}

uint64_t sub_1000AC258@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t v9 = (a2 - 875809647);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(v4 + (v9 & 0xF)) ^ *(unsigned char *)(a3 + v9) ^ (v7 - 7) ^ *(unsigned char *)(a4 + (v9 & 0xF)) ^ *(unsigned char *)((v9 & 0xF) + v5 + 2) ^ (-73 * (v9 & 0xF));
  return (*(uint64_t (**)(void))(v8 + 8 * ((1472 * (a2 - 1 == v6)) ^ v7)))();
}

uint64_t sub_1000AC2C8@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W8>)
{
  int v6 = STACK[0x2D4];
  if ((a3 + 405001088) <= 0x12 && (int v6 = STACK[0x2D4], ((a2 << (a3 + 0x80)) & 0x42405) != 0)) {
    return sub_1000AC33C();
  }
  else {
    return (*(uint64_t (**)(void))(v3
  }
                                + 8
                                * ((736 * ((*(_DWORD *)(v4 + v5 * (uint64_t)a1 + 40) & 8) == ((v6 + 1184) ^ 0x7CE))) ^ (v6 - 716))))();
}

uint64_t sub_1000AC33C(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 - 813) & *(_DWORD *)(v3 + v4 * (uint64_t)a1 + 40)) != 0) * ((v1 + 371) ^ 0x775)) ^ (v1 + 715))))();
}

uint64_t sub_1000AC374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, char a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((v9 == ((v8 ^ v11) * a7 - 44)) * (((v8 + a6) & a8) - 812)) | v8)))();
}

uint64_t sub_1000AC3A8(uint64_t a1, int a2)
{
  if (a1) {
    BOOL v3 = a2 == 0;
  }
  else {
    BOOL v3 = 0;
  }
  int v4 = !v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((37 * v4) ^ 0x2CAu)))();
}

void sub_1000AC3EC(int a1@<W8>)
{
  int v7 = ((v6 - 144) ^ 0x4C96827D) * v1;
  *(_DWORD *)(v6 - 136) = ((a1 ^ 0x1EF3C21A) + v2) ^ v7;
  *(_DWORD *)(v6 - 144) = v7 + a1 + 287;
  *(void *)(v6 - 128) = v4;
  *(void *)(v6 - 120) = v5;
  (*(void (**)(uint64_t))(v3 + 8 * (a1 + 1120)))(v6 - 144);
  JUMPOUT(0x1000A3B04);
}

void sub_1000AC4A0()
{
}

void sub_1000AC4B4()
{
}

uint64_t sub_1000AC4BC()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((127 * (STACK[0x498] == 0)) ^ (v1 + 1423))))();
}

void sub_1000AC4E8()
{
}

uint64_t sub_1000AC4F0(int a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  int v11 = a1 + a5;
  uint64_t v12 = (a2 + v11);
  long long v13 = *(_OWORD *)(v8 + v12 - 15);
  long long v14 = *(_OWORD *)(v8 + v12 - 31);
  uint64_t v15 = v9 + v12;
  *(_OWORD *)(v15 - 15) = v13;
  *(_OWORD *)(v15 - 31) = v14;
  return (*(uint64_t (**)(void))(v10 + 8 * (((a7 == v11) * a8) ^ (a6 + 1739))))();
}

uint64_t sub_1000AC664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v45 = (_DWORD *)(a27 + 24 * (v42 - 1074653293));
  LODWORD(a32) = v45[4];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8 * ((23 * (((((v43 + 1432032743) ^ 0x555B14C2) + *v45 - 1127070707) & 0xFFFFFFFFFFFFFFDLL) == 0)) ^ v43)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_1000AC734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v12 = (a5 - 223268212);
  *(unsigned char *)(v11 + v12) ^= *(unsigned char *)(v9 + (v12 & 0xF)) ^ *(unsigned char *)(v8 + (v12 & 0xF)) ^ *(unsigned char *)(v7 + (v12 & 0xF)) ^ (5 * (v12 & 0xF)) ^ 0x77;
  return (*(uint64_t (**)(void))(v10 + 8 * ((2032 * (a5 - 1 == v6)) ^ (a6 - 492))))();
}

uint64_t sub_1000AC798@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v21 = (char *)*(&off_10026C690 + (a1 ^ 0x60)) - 4;
  int v22 = (v21[*(unsigned __int8 *)(v19 - 0x5EC77446536A4B74) ^ 0xD7] ^ 0x4D) << 8;
  uint64_t v23 = (uint64_t)*(&off_10026C690 + (int)(a1 & 0xBAC3DB05));
  int v24 = *(unsigned __int8 *)(v23 + (*v17 ^ (a1 - 28)));
  *(_DWORD *)(v20 - 208) = v18;
  int v25 = (char *)*(&off_10026C690 + (a1 ^ 0x52)) - 4;
  int v26 = v25[*(unsigned __int8 *)(v19 - 0x5EC77446536A4B69) ^ 0x49];
  int v27 = v22 | ((v24 ^ 0x98) << 24);
  HIDWORD(v28) = v26 ^ 1;
  LODWORD(v28) = (v26 ^ 0x3C) << 24;
  LOBYTE(v24) = v28 >> 26;
  uint64_t v29 = (char *)*(&off_10026C690 + (a1 ^ 0x6E)) - 12;
  int v30 = *(unsigned __int8 *)(v23 + (*(unsigned __int8 *)(v19 - 0x5EC77446536A4B6ALL) ^ 0xB8));
  int v31 = v25[*(unsigned __int8 *)(v19 - 0x5EC77446536A4B6DLL) ^ 0x6BLL];
  HIDWORD(v28) = v31 ^ 1;
  LODWORD(v28) = (v31 ^ 0x3C) << 24;
  int v32 = ((v28 >> 26) ^ 0x53) << 16;
  LOBYTE(v26) = v21[*(unsigned __int8 *)(v19 - 0x5EC77446536A4B68) ^ 0x2ELL];
  int v33 = v25[*(unsigned __int8 *)(v19 - 0x5EC77446536A4B75) ^ 0x47];
  HIDWORD(v28) = v33 ^ 1;
  LODWORD(v28) = (v33 ^ 0x3C) << 24;
  unsigned int v34 = v27 & 0xFF00FF00 | (v29[*(unsigned __int8 *)(v19 - 0x5EC77446536A4B73) ^ 0xECLL] - 106) ^ 9 | (((v28 >> 26) ^ 0x1E) << 16);
  int v35 = v21[*(unsigned __int8 *)(v19 - 0x5EC77446536A4B70) ^ 0x30];
  LODWORD(v21) = v32 | ((v21[*(unsigned __int8 *)(v19 - 0x5EC77446536A4B6CLL) ^ 0x77] ^ 0x82) << 8);
  int v36 = (v29[*(unsigned __int8 *)(v19 - 0x5EC77446536A4B6FLL) ^ 0xA9] - 106) | ((v35 ^ 0x78) << 8);
  LOBYTE(v32) = v29[*(unsigned __int8 *)(v19 - 0x5EC77446536A4B67) ^ 0x36] - 106;
  LODWORD(v25) = v25[*(unsigned __int8 *)(v19 - 0x5EC77446536A4B71) ^ 0xCBLL];
  HIDWORD(v28) = v25 ^ 1;
  LODWORD(v28) = (v25 ^ 0x3C) << 24;
  LOBYTE(v29) = v29[*(unsigned __int8 *)(v19 - 0x5EC77446536A4B6BLL) ^ 0xB5];
  int v37 = v32 ^ 0x2A | ((v26 ^ 0x88) << 8) | ((v24 ^ 0xFB) << 16) | ((v30 ^ 0x20) << 24);
  unsigned int v38 = v36 & 0xFF00FFFF | (((v28 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v23
                                                                                                + (*(unsigned __int8 *)(v19 - 0x5EC77446536A4B72) ^ 0x35)) ^ 0x57) << 24);
  unsigned int v39 = v21 | ((*(unsigned __int8 *)(v23 + (*(unsigned __int8 *)(v19 - 0x5EC77446536A4B6ELL) ^ 0xBFLL)) ^ 0x4E) << 24);
  uint64_t v40 = (char *)*(&off_10026C690 + (a1 ^ 0x9B)) - 8;
  unint64_t v41 = (char *)*(&off_10026C690 + a1 - 154) - 8;
  int v42 = *(_DWORD *)&v40[4 * (v32 ^ 0xFD)] ^ 0x3964B61D ^ *(_DWORD *)&v41[4
                                                                                        * (v24 ^ 0x61)];
  *(_DWORD *)(v20 - 152) = a1;
  int v43 = (char *)*(&off_10026C690 + (a1 ^ 0x53)) - 8;
  int v44 = (v42 - ((2 * v42) & 0x50AA1872) - 1470821319) ^ *(_DWORD *)&v43[4 * (v30 ^ 0xB5)];
  unsigned int v45 = v44 - ((2 * v44) & 0xD8D8B456);
  int v46 = (char *)*(&off_10026C690 + a1 - 48) - 8;
  LODWORD(v23) = *(_DWORD *)&v46[4 * (v26 ^ 0xB0)] ^ v34 ^ (v45 - 328443349);
  unint64_t v309 = __PAIR64__(v34, v37);
  int v47 = v37 + 1100936508 + (~(2 * v37) | 0x7CC21589);
  LOBYTE(v29) = ((_BYTE)v29 - 106) ^ 0xA8;
  unsigned int v48 = v39 & 0xFFFFFF00 | v29;
  int v219 = v23;
  *(_DWORD *)(v20 - 168) = v23 ^ v38;
  int v49 = v23 ^ v38 ^ 0x4D ^ v48;
  *(_DWORD *)(v20 - 176) = v49;
  int v50 = v23 ^ v38 ^ 0x4D;
  unsigned __int8 v187 = v23 ^ v38 ^ 0x4D;
  int v51 = v49 ^ v47;
  int v242 = BYTE1(v51);
  int v221 = BYTE2(v51);
  unsigned int v52 = *(_DWORD *)&v46[4 * (BYTE1(v51) ^ 0xF)] ^ *(_DWORD *)&v41[4 * (BYTE2(v51) ^ 0x20)] ^ 0x92ED6499;
  *(_DWORD *)(v20 - 192) = 1882517153;
  unsigned int v53 = v51 ^ 0xFB69D892;
  int v236 = v51;
  int v54 = (v52 + 1206225072 + (~(2 * v52) | 0x7034EEA1)) ^ *(_DWORD *)&v40[4 * (v51 ^ 0x12)];
  unsigned int v230 = HIBYTE(v53);
  int v55 = v23 ^ *(_DWORD *)&v43[4 * (HIBYTE(v53) ^ 0x65)] ^ (v54 - ((2 * v54) & 0x50AA1872) - 1470821319);
  int v56 = (v23 ^ v38 ^ 0xBAF72DE4) - ((2 * (v23 ^ v38 ^ 0xBAF72DE4)) & 0x9DC48B94);
  unint64_t v308 = __PAIR64__(v38, v48);
  *(_DWORD *)(v20 - 160) = v55;
  LODWORD(v23) = v55 ^ 0x4EE245CA ^ (v48 - 2 * (v48 & 0x4EE245DA ^ v29 & 0x10) + 1323451850);
  LODWORD(v29) = v23 ^ v53;
  *(_DWORD *)(v20 - 120) = v23;
  int v249 = ((v23 ^ v53) >> 16);
  int v252 = ((unsigned __int16)(v23 ^ v53) >> 8);
  unsigned int v57 = *(_DWORD *)&v41[4 * (v249 ^ 0x2E)] ^ *(_DWORD *)&v46[4 * (v252 ^ 0x9B)] ^ 0x92ED6499;
  int v323 = v29;
  unsigned int v58 = (v57 - ((2 * v57) & 0x8FCB115E) + 1206225071) ^ *(_DWORD *)&v40[4 * (v29 ^ 0xD2)];
  unsigned int v59 = v29 ^ 0xA77003BD;
  *(_DWORD *)(v20 - 216) = v29 >> 24;
  int v60 = (v58 - ((2 * v58) & 0x50AA1872) - 1470821319) ^ *(_DWORD *)&v43[4 * ((v29 >> 24) ^ 0x69)];
  unsigned int v61 = v60 ^ v50 ^ 0x8B343C7E;
  int v274 = v60 ^ v50;
  LODWORD(v23) = v61 ^ v23;
  *(_DWORD *)(v20 - 140) = v23;
  LODWORD(v29) = ((v23 ^ 0x11B23194) - ((2 * (v23 ^ 0x11B23194)) & 0xA7AF45E8) - 740842764) ^ v29 ^ 0xA77003BD;
  unsigned int v62 = v29 ^ 0x9547167F;
  int v290 = ((v29 ^ 0x9547167F) >> 16);
  int v300 = ((unsigned __int16)((unsigned __int16)v29 ^ 0x167F) >> 8);
  unsigned int v63 = *(_DWORD *)&v41[4 * (v290 ^ 0x89)] ^ *(_DWORD *)&v46[4 * (v300 ^ 0x3A)] ^ 0x92ED6499;
  int v298 = v29;
  LODWORD(v29) = (v63 - ((2 * v63) & 0x8FCB115E) + 1206225071) ^ *(_DWORD *)&v40[4 * (v29 ^ 0xE4)];
  unsigned int v310 = HIBYTE(v62);
  int v64 = (v29 - ((2 * v29) & 0x50AA1872) - 1470821319) ^ *(_DWORD *)&v43[4 * (HIBYTE(v62) ^ 0x1D)];
  unsigned int v258 = v60 ^ v55;
  unsigned int v319 = (v64 - ((2 * v64) & 0xB422C6FE) - 636394625) ^ v60 ^ v55;
  *(_DWORD *)(v20 - 248) = v319 ^ 0xDA11637F;
  unsigned int v327 = v319 ^ 0xDA11637F ^ v60 ^ v50;
  unsigned int v65 = ((v327 ^ 0xFE25CD6D) - ((2 * (v327 ^ 0xFE25CD6D)) & 0xA7AF45E8) - 740842764) ^ v59;
  *(_DWORD *)(v20 - 220) = BYTE1(v65);
  int v66 = *(_DWORD *)&v46[4 * (BYTE1(v65) ^ 0x6F)];
  *(_DWORD *)(v20 - 232) = BYTE2(v65);
  int v67 = v56 + 1323451850;
  unsigned int v68 = v66 ^ *(_DWORD *)&v41[4 * (BYTE2(v65) ^ 0xA8)] ^ 0x92ED6499;
  unsigned int v315 = HIBYTE(v65);
  int v69 = (v68 - ((2 * v68) & 0x50AA1872) - 1470821319) ^ *(_DWORD *)&v43[4 * (HIBYTE(v65) ^ 0x85)];
  int v313 = (((v327 ^ 0x6D) - ((2 * (v327 ^ 0x6D)) & 0xE8) - 12) ^ v59);
  unsigned int v70 = (v69 - ((2 * v69) & 0x8FCB115E) + 1206225071) ^ *(_DWORD *)&v40[4 * (v313 ^ 0x25)];
  unsigned int v325 = v327 ^ v23;
  LODWORD(v23) = (v70 - ((2 * v70) & 0x638623AE) + 834867671) ^ v61 ^ v327 ^ v23;
  int v71 = (v70 - ((2 * v70) & 0x638623AE) + 834867671) ^ v61;
  unsigned int v183 = v71;
  *(_DWORD *)(v20 - 128) = v23;
  int v72 = v65 ^ v23 ^ 0x94C7C819;
  int v73 = v23 ^ 0x94C7C819;
  __int16 v176 = v23 ^ 0xC819;
  *(_DWORD *)(v20 - 256) = v65;
  unsigned int v216 = (v72 ^ 0x92014E8E) >> 24;
  int v204 = ((v72 ^ 0x92014E8E) >> 16);
  int v74 = *(_DWORD *)&v41[4 * (v204 ^ 0x89)] ^ *(_DWORD *)&v43[4 * (v216 ^ 0x1D)];
  int v208 = ((unsigned __int16)(v72 ^ 0x4E8E) >> 8);
  unsigned int v75 = ((v74 ^ 0xD6D4328B) - 2 * ((v74 ^ 0xD6D4328B) & 0x6C6C5A3F ^ v74 & 0x14) - 328443349) ^ *(_DWORD *)&v46[4 * (v208 ^ 0x3A)];
  *(_DWORD *)(v20 - 184) = v319 ^ 0xDA11637F ^ v70;
  int v201 = (v65 ^ v23 ^ 0x19);
  LODWORD(v23) = v319 ^ 0xDA11637F ^ v70 ^ *(_DWORD *)&v40[4 * (v201 ^ 0x15)] ^ (v75
                                                                               - ((2 * v75) & 0x8FCB115E)
                                                                               + 1206225071);
  unsigned __int8 v213 = BYTE2(v71) ^ 0x16;
  int v76 = v23 ^ v71 ^ 0x7C166C11;
  int v283 = v23;
  int v77 = v76 ^ v65;
  *(_DWORD *)(v20 - 240) = (v76 ^ v65) >> 24;
  int v293 = (v76 ^ ((v327 ^ 0x6D) - ((2 * (v327 ^ 0x6D)) & 0xE8) - 12) ^ v59);
  unsigned int v78 = *(_DWORD *)&v43[4 * (((v76 ^ v65) >> 24) ^ 0x9B)] ^ *(_DWORD *)&v40[4 * (v293 ^ 0x31)] ^ 0xEFB08496;
  unsigned int v269 = ((v76 ^ v65) >> 8) ^ 0x86839A;
  int v272 = ((unsigned __int16)(v76 ^ v65) >> 8) ^ 0x9A;
  unsigned int v79 = (v78 - ((2 * v78) & 0xD8D8B456) - 328443349) ^ *(_DWORD *)&v46[4
                                                                     * (((unsigned __int16)(v76 ^ v65) >> 8) ^ 0xA0)];
  int v264 = ((v76 ^ v65) >> 16);
  int v80 = *(_DWORD *)&v41[4 * (v264 ^ 0xA)];
  unsigned int v239 = (((v79 - ((2 * v79) & 0xFD027D64) + 2122399410) ^ v80)
        - ((2 * ((v79 - ((2 * v79) & 0xFD027D64) + 2122399410) ^ v80)) & 0xBEBE92CC)
        + 1600080230) ^ v23;
  unsigned int v227 = v239 ^ 0xA2DCD3CC ^ v76;
  unsigned __int8 v214 = (((v79 - ((2 * v79) & 0x64) - 78) ^ v80) - ((2 * ((v79 - ((2 * v79) & 0x64) - 78) ^ v80)) & 0xCC) + 102) ^ v23 ^ 0xCC;
  unsigned int v278 = v76 ^ v73;
  int v255 = v76;
  unsigned int v81 = v76 ^ v73 ^ 0x851527F9;
  *(_DWORD *)(v20 - 136) = v81;
  unsigned int v82 = ((v227 ^ 0x5A137D54) - ((2 * (v227 ^ 0x5A137D54)) & 0xDE0BA696) - 284830901) ^ v81;
  *(_DWORD *)(v20 - 132) = v82;
  int v83 = v82 ^ 0x3C40B926;
  LODWORD(v23) = ((v82 ^ 0xBBDF6126) - 2 * ((v82 ^ 0x3C40B926) & 2 ^ (v82 ^ 0xBBDF6126) & 0x6B445CC7) - 347841339) ^ v76 ^ v65 ^ 0x6DC7C66F ^ 0x479AB031;
  int v305 = (((v82 ^ 0x26) - 2 * ((v82 ^ 0x26) & 2 ^ (v82 ^ 0x26) & 0xC7) - 59) ^ v76 ^ v65 ^ 0x6F);
  int v321 = ((unsigned __int16)(((v82 ^ 0x6126)
                                             - 2 * ((v82 ^ 0xB926) & 2 ^ (v82 ^ 0x6126) & 0x5CC7)
                                             + 23749) ^ v76 ^ v65 ^ 0xC66F ^ 0xB031) >> 8);
  unsigned int v84 = *(_DWORD *)&v46[4 * (v321 ^ 0x3A)] ^ *(_DWORD *)&v40[4 * (v305 ^ 0xAA)] ^ 0xAB89D284;
  int v85 = BYTE2(v23);
  unsigned int v86 = (v84 - ((2 * v84) & 0xFD027D64) + 2122399410) ^ *(_DWORD *)&v41[4 * (BYTE2(v23) ^ 0x89)];
  unsigned int v233 = BYTE3(v23);
  LODWORD(v23) = (v86 - ((2 * v86) & 0x50AA1872) - 1470821319) ^ *(_DWORD *)&v43[4 * (BYTE3(v23) ^ 0x1D)];
  unsigned int v87 = v23 ^ v76;
  LODWORD(v29) = ((v87 ^ 0xA6C48CD5) - ((2 * (v87 ^ 0xA6C48CD5)) & 0xD688B98A) - 347841339) ^ v77 ^ 0x6DC7C66F;
  int v88 = ((unsigned __int16)(((v87 ^ 0x8CD5) - ((2 * (v87 ^ 0x8CD5)) & 0xB98A) + 23749) ^ v77 ^ 0xC66F) >> 8);
  int v89 = v55 ^ 0x4EE245CA ^ v67;
  LODWORD(v25) = *(_DWORD *)&v43[4 * ((v29 >> 24) ^ 5)] ^ *(_DWORD *)&v46[4 * (BYTE1(v29) ^ 0x6F)] ^ 0x44395612;
  int v280 = (((v87 ^ 0xD5) - ((2 * (v87 ^ 0xD5)) & 0x8A) - 59) ^ v77 ^ 0x6F);
  LODWORD(v25) = (v25 + 1206225072 + (*(_DWORD *)(v20 - 192) | ~(2 * v25))) ^ *(_DWORD *)&v40[4 * (v280 ^ 0x25)];
  int v90 = v239 ^ 0xA2DCD3CC ^ v23;
  unsigned int v91 = v90 ^ *(_DWORD *)&v41[4 * (BYTE2(v29) ^ 0xA8)] ^ (v25 - ((2 * v25) & 0xFD027D64) + 2122399410);
  int v92 = v82 ^ 0x3C40B926 ^ v91;
  *(_DWORD *)(v20 - 200) = v92;
  int v317 = ((unsigned __int16)(v92 ^ ((v87 ^ 0x8CD5) - ((2 * (v87 ^ 0x8CD5)) & 0xB98A) + 23749) ^ v77 ^ 0xC66F) >> 8);
  unsigned int v191 = (v92 ^ v29) >> 24;
  int v93 = *(_DWORD *)&v46[4 * (v317 ^ 0x44)] ^ *(_DWORD *)&v43[4 * (v191 ^ 0x47)] ^ 0x44395612;
  int v189 = (v92 ^ v29);
  unsigned int v94 = (v93 - ((2 * v93) & 0x8FCB115E) + 1206225071) ^ *(_DWORD *)&v40[4 * (v189 ^ 0xD5)];
  int v174 = ((v92 ^ v29) >> 16);
  LODWORD(v21) = (v94 - ((2 * v94) & 0xFD027D64) + 2122399410) ^ *(_DWORD *)&v41[4 * (v174 ^ 0xCB)];
  *(_DWORD *)(v20 - 192) = v91;
  HIDWORD(v307) = v91 ^ 0x5ED6BD52 ^ (v21 - ((2 * v21) & 0xBC4321F6) - 568225541);
  int v179 = v91 ^ v87;
  LODWORD(v307) = v91 ^ v87 ^ 0xEC262BAF ^ (HIDWORD(v307) - ((2 * HIDWORD(v307)) & 0x9109C976) - 930814789);
  HIDWORD(v306) = v92 ^ 0x4018996 ^ v307;
  LODWORD(v306) = (HIDWORD(v306) - ((2 * HIDWORD(v306)) & 0x2DF290BE) + 385435743) ^ v92 ^ v29;
  LODWORD(v41) = *(_DWORD *)(v20 - 152);
  uint64_t v95 = (char *)*(&off_10026C690 + (int)v41 - 68) - 8;
  LODWORD(v23) = (((v90 ^ 0x1B9155BDu) >> 16)
                + 201545842
                + ((2 * ((((v90 ^ 0x1B9155BDu) >> 16) + 44) & 0x47 ^ (((v90 ^ 0x1B9155BDu) >> 16) | 0xFFFFFFFD))) ^ 0x8081405)) ^ *(_DWORD *)&v95[4 * (((v90 ^ 0x1B9155BDu) >> 16) ^ 0x2D)];
  LODWORD(v46) = ((BYTE2(v29) ^ 0x89) + 201545842 + ((2 * (BYTE2(v29) ^ 0x89) + 88) & 0x8A ^ 0xF7F7EBFF)) ^ *(_DWORD *)&v95[4 * (BYTE2(v29) ^ 0xA4)];
  unint64_t v96 = (char *)*(&off_10026C690 + (int)(v41 ^ 0x7A)) - 8;
  int v97 = (v23 - ((2 * v23) & 0xCC120192) - 435617591) ^ *(_DWORD *)&v96[4 * (BYTE1(v90) ^ 0x47)];
  unint64_t v98 = (char *)*(&off_10026C690 + (int)v41 - 152) - 4;
  int v99 = (v46 - ((2 * v46) & 0x36A73A36) - 1689019109) ^ *(_DWORD *)&v98[4
                                                                                      * ((v29 >> 24) ^ 0xCC)];
  unsigned __int8 v303 = BYTE1(v83) ^ BYTE1(v87);
  unint64_t v100 = (char *)*(&off_10026C690 + (int)(v41 ^ 0x6B)) - 8;
  int v101 = *(_DWORD *)&v100[4 * ((v83 ^ v87) ^ 0x53)];
  LODWORD(v23) = *(_DWORD *)&v95[4 * (((v83 ^ v87) >> 16) ^ 0xAA)] ^ *(_DWORD *)&v98[4 * (((v83 ^ v87) >> 24) ^ 0x3E)] ^ ((((v83 ^ v87) >> 16) ^ 0x87) + 201545842 + ((2 * (((v83 ^ v87) >> 16) ^ 0x87) + 88) & 0x8A ^ 0xF7F7EBFF)) ^ (181304767 * v101 - ((362609534 * v101 + 101572548) & 0x36A73A36) + 1582992637);
  LODWORD(v21) = *(_DWORD *)&v100[4 * (v87 ^ 0x74)];
  unsigned int v295 = v87;
  LODWORD(v21) = (181304767 * v21 - ((362609534 * v21 - 2045911100) & 0xCC120192) - 1458573141) ^ *(_DWORD *)&v96[4 * (BYTE1(v87) ^ 0x5A)];
  int v304 = v21 - ((2 * v21) & 0x36A73A36);
  int v262 = BYTE2(v87);
  unsigned int v312 = (BYTE2(v87) ^ 0x4C) + 201545842 + ((2 * (BYTE2(v87) ^ 0x4C) + 88) & 0x8A ^ 0xF7F7EBFF);
  unsigned int v267 = v88 ^ 0xB0;
  unsigned int v288 = v99 - ((2 * v99) & 0xCC120192);
  int v285 = v23 - ((2 * v23) & 0xCC120192);
  HIDWORD(v311) = (v97 - ((2 * v97) & 0x36A73A36) - 1689019109) ^ *(_DWORD *)&v98[4 * ((v90 ^ 0x1B9155BDu) >> 24)] ^ (181304767 * *(_DWORD *)&v100[4 * (v90 ^ 0x7D)] - 1022955550);
  unsigned int v102 = *(_DWORD *)&v95[4 * (((v89 ^ 0xE9B45E6C) >> 16) ^ 0xF5)] ^ ((((v89 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                    + 201545842
                                                                                    + ((2
                                                                                      * (((((v89 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                        + 44) & 0x47 ^ (((v89 ^ 0xE9B45E6C) >> 16) | 0xFFFFFFFD))) ^ 0x8081405));
  LODWORD(v21) = *(_DWORD *)(v20 - 120) ^ 0x31676F78;
  LODWORD(v29) = *(_DWORD *)&v95[4 * (BYTE2(v21) ^ 0x7B)] ^ ((BYTE2(v21) ^ 0x56)
                                                           + 201545842
                                                           + ((2 * (BYTE2(v21) ^ 0x56) + 88) & 0x8A ^ 0xF7F7EBFF));
  LODWORD(v21) = (v29 - ((2 * v29) & 0x36A73A36) - 1689019109) ^ *(_DWORD *)&v98[4
                                                                                               * (v21 >> 24)];
  LODWORD(v29) = *(_DWORD *)&v95[4 * (v249 ^ 0x34)] ^ ((v249 ^ 0x19)
                                                     + 201545842
                                                     + ((2 * (v249 ^ 0x19) + 88) & 0x8A ^ 0xF7F7EBFF));
  LODWORD(v29) = (v29 - ((2 * v29) & 0xCC120192) - 435617591) ^ *(_DWORD *)&v96[4 * (v252 ^ 5)];
  unsigned int v250 = v21 - ((2 * v21) & 0xCC120192);
  int v253 = v29 - ((2 * v29) & 0x36A73A36);
  LODWORD(v21) = *(_DWORD *)&v100[4 * (*(_DWORD *)(v20 - 160) ^ 0xDF)];
  LODWORD(v29) = *(_DWORD *)(v20 - 160) ^ 0x5A18571F;
  LODWORD(v21) = *(_DWORD *)&v98[4 * (v29 >> 24)] ^ ((BYTE2(v29) ^ 0xC1)
                                                                 + 201545841
                                                                 - ((2 * (BYTE2(v29) ^ 0xC1) + 160207960) & 0x808148A)) ^ *(_DWORD *)&v95[4 * (BYTE2(v29) ^ 0xEC)] ^ (181304767 * v21 - ((362609534 * v21 + 101572548) & 0x36A73A36) + 1582992637);
  unsigned int v246 = v21 - ((2 * v21) & 0xCC120192);
  LODWORD(v23) = *(_DWORD *)&v98[4 * ((v89 ^ 0xE9B45E6C) >> 24)] ^ (v102 - ((2 * v102) & 0x36A73A36) - 1689019109);
  int v225 = v23 - 435617590 + (~(2 * v23) | 0x33EDFE6D);
  LOWORD(v99) = v227 ^ 0x8EA4;
  unsigned int v103 = v227 ^ 0x35C48CD5;
  LODWORD(v21) = *(_DWORD *)&v95[4 * (v85 ^ 0xDE)] ^ ((v85 ^ 0xF3)
                                                    + 201545842
                                                    + ((2 * (v85 ^ 0xF3) + 88) & 0x8A ^ 0xF7F7EBFF));
  LODWORD(v29) = *(_DWORD *)&v95[4 * (((v227 ^ 0x35C48CD5) >> 16) ^ 0xFE)] ^ ((((v227 ^ 0x35C48CD5) >> 16) ^ 0xD3)
                                                                                             + 201545842
                                                                                             + ((2
                                                                                               * (((v227 ^ 0x35C48CD5) >> 16) ^ 0xD3)
                                                                                               + 88) & 0x8A ^ 0xF7F7EBFF));
  int v104 = *(_DWORD *)&v100[4 * (v83 ^ 0xC5)];
  int v105 = v29 - ((2 * v29) & 0x36A73A36);
  LODWORD(v29) = 181304767 * v104 - ((362609534 * v104 - 2045911100) & 0xCC120192);
  LODWORD(v21) = (v21 - 1689019109 + (~(2 * v21) | 0xC958C5C9) + 1) ^ *(_DWORD *)&v98[4 * (v233 ^ 0x36)];
  unsigned int v106 = *(_DWORD *)&v95[4 * (BYTE2(v239) ^ 0xF0)] ^ ((BYTE2(v239) ^ 0xDD)
                                                    + 201545842
                                                    + ((2 * (BYTE2(v239) ^ 0xDD) + 88) & 0x8A ^ 0xF7F7EBFF));
  unsigned int v107 = (v106 - ((2 * v106) & 0xCC120192) - 435617591) ^ *(_DWORD *)&v96[4
                                                                        * (((unsigned __int16)(v239 ^ 0xD3CC) >> 8) ^ 0x8B)];
  unsigned int v234 = HIBYTE(v239) ^ 0x4E;
  unsigned int v228 = v21 - ((2 * v21) & 0xCC120192);
  unsigned int v240 = v107 - ((2 * v107) & 0x36A73A36);
  LODWORD(v21) = *(_DWORD *)(v20 - 132) ^ 0x5EDF6126;
  LODWORD(v21) = *(_DWORD *)&v96[4 * (BYTE1(v21) ^ 0x20)] ^ ((BYTE2(v21) ^ 0xD7)
                                                           + 201545842
                                                           + ((2 * (BYTE2(v21) ^ 0xD7) + 88) & 0x8A ^ 0xF7F7EBFF)) ^ *(_DWORD *)&v95[4 * (BYTE2(v21) ^ 0xFA)] ^ (v29 - 1458573141);
  LODWORD(v29) = (v105 - 1689019109) ^ *(_DWORD *)&v98[4 * HIBYTE(v103)] ^ (181304767
                                                                          * *(_DWORD *)&v100[4
                                                                                           * (v99 ^ 0x99)]
                                                                          - 1022955550);
  unsigned int v193 = BYTE1(v99) ^ 0x14;
  unsigned int v181 = v214 ^ 0xA3;
  unsigned int v198 = v29 - ((2 * v29) & 0xCC120192);
  int v215 = v21 - ((2 * v21) & 0x36A73A36);
  int v108 = *(_DWORD *)(v20 - 176);
  unsigned int v185 = BYTE1(v108) ^ 0xF5;
  unsigned int v196 = v219 ^ 0x2BEAE26B;
  LODWORD(v21) = *(_DWORD *)&v95[4 * (((v219 ^ 0x2BEAE26Bu) >> 16) ^ 0xEC)] ^ ((((v219 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                              + 201545842
                                                                                              + ((2
                                                                                                * (((v219 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                                + 88) & 0x8A ^ 0xF7F7EBFF)) ^ (181304767 * *(_DWORD *)&v100[4 * (v219 ^ 0x1E)] - 1022955550);
  LODWORD(v21) = (v21 - ((2 * v21) & 0xCC120192) - 435617591) ^ *(_DWORD *)&v96[4 * (BYTE1(v219) ^ 8)];
  LODWORD(v29) = *(_DWORD *)&v95[4 * (v221 ^ 0xBE)] ^ ((v221 ^ 0x93)
                                                     + 201545842
                                                     + ((2 * (v221 ^ 0x93) + 88) & 0x8A ^ 0xF7F7EBFF));
  int v109 = *(_DWORD *)&v100[4 * (v187 ^ 0x55)];
  int v222 = v21 - ((2 * v21) & 0x36A73A36);
  int v172 = BYTE2(v108) ^ 0xF7;
  unsigned int v220 = (BYTE2(v108) ^ 0xA7)
       + 201545842
       + ((2 * (((BYTE2(v108) ^ 0xA7) + 44) & 0x47 ^ (v172 | 0xFFFFFFFD))) ^ 0x8081405);
  LODWORD(v21) = (v29 - ((2 * v29) & 0xCC120192) - 435617591) ^ *(_DWORD *)&v96[4 * (v242 ^ 0x65)] ^ (181304767 * *(_DWORD *)&v100[4 * (v236 ^ 0x61)] - 1022955550);
  int v243 = v21 - ((2 * v21) & 0x36A73A36);
  unsigned int v110 = *(_DWORD *)(v20 - 168);
  LODWORD(v29) = (181304767 * v109 - ((362609534 * v109 + 101572548) & 0x36A73A36) + 1582992637) ^ ((BYTE2(v110) ^ 0xBA)
                                                                                                  + 201545842
                                                                                                  + ((2 * (BYTE2(v110) ^ 0xBA) + 88) & 0x8A ^ 0xF7F7EBFF)) ^ *(_DWORD *)&v98[4 * (HIBYTE(v110) ^ 0x2F)] ^ *(_DWORD *)&v95[4 * (BYTE2(v110) ^ 0x97)];
  unsigned int v188 = v29 - ((2 * v29) & 0xCC120192);
  LODWORD(v29) = BYTE2(*(_DWORD *)(v20 - 128));
  LODWORD(v29) = *(_DWORD *)&v95[4 * (v29 ^ 0x31)] ^ ((v29 ^ 0x1C)
                                                                  + 201545842
                                                                  + ((2 * (v29 ^ 0x1C) + 88) & 0x8A ^ 0xF7F7EBFF));
  unsigned int v111 = *(_DWORD *)&v95[4 * (BYTE2(*(_DWORD *)(v20 - 184)) ^ 0x56)] ^ ((BYTE2(*(_DWORD *)(v20 - 184)) ^ 0x7B)
                                                                                       + 201545842
                                                                                       + ((2
                                                                                         * (BYTE2(*(_DWORD *)(v20 - 184)) ^ 0x7B)
                                                                                         + 88) & 0x8A ^ 0xF7F7EBFF));
  unsigned int v112 = v111 - ((2 * v111) & 0x36A73A36);
  LODWORD(v29) = (v29 - ((2 * v29) & 0xCC120192) - 435617591) ^ *(_DWORD *)&v96[4 * (HIBYTE(v176) ^ 0xE)] ^ (181304767 * *(_DWORD *)&v100[4 * (v176 ^ 0xFD)] - 1022955550);
  int v113 = *(_DWORD *)&v100[4 * (v183 ^ 0xFB)];
  unsigned int v114 = (181304767 * v113 - ((362609534 * v113 - 2045911100) & 0xCC120192) - 1458573141) ^ *(_DWORD *)&v96[4 * (BYTE1(v183) ^ 0xEF)];
  LODWORD(v177) = v29 - ((2 * v29) & 0x36A73A36);
  HIDWORD(v169) = v114 - ((2 * v114) & 0x36A73A36);
  LODWORD(v29) = (v112 - 1689019109) ^ *(_DWORD *)&v98[4 * (HIBYTE(*(_DWORD *)(v20 - 184)) ^ 0xD9)] ^ (181304767 * *(_DWORD *)&v100[4 * (*(_DWORD *)(v20 - 184) ^ 0x79)] - 1022955550);
  unsigned int v115 = *(_DWORD *)&v95[4 * (v204 ^ 0x86)] ^ ((v204 ^ 0xAB) + 201545842 + ((2 * (v204 ^ 0xAB) + 88) & 0x8A ^ 0xF7F7EBFF));
  int v116 = (v115 - ((2 * v115) & 0x36A73A36) - 1689019109) ^ *(_DWORD *)&v98[4 * v216];
  unsigned int v168 = v201 ^ 0xB3;
  unsigned int v205 = v29 - ((2 * v29) & 0xCC120192);
  int v210 = v213;
  unsigned int v237 = (v210 ^ 0x65) + 201545842 + ((2 * (v210 ^ 0x65) + 88) & 0x8A ^ 0xF7F7EBFF);
  LODWORD(v29) = *(_DWORD *)&v95[4 * (v174 ^ 0x8B)] ^ ((v174 ^ 0xA6)
                                                     + 201545842
                                                     + ((2 * (v174 ^ 0xA6) + 88) & 0x8A ^ 0xF7F7EBFF));
  int v175 = BYTE2(*(_DWORD *)(v20 - 200));
  unsigned int v217 = (v175 ^ 0x8F) + 201545842 + ((2 * (v175 ^ 0x8F) + 88) & 0x8A ^ 0xF7F7EBFF);
  unsigned int v202 = HIBYTE(v183) ^ 0xE8;
  unsigned int v117 = *(_DWORD *)(v20 - 192);
  LODWORD(v23) = *(_DWORD *)&v95[4 * (BYTE2(v117) ^ 0xE8)] ^ ((BYTE2(v117) ^ 0xC5)
                                                            + 201545842
                                                            + ((2 * (BYTE2(v117) ^ 0xC5) + 88) & 0x8A ^ 0xF7F7EBFF));
  LODWORD(v23) = (181304767 * *(_DWORD *)&v100[4 * (v117 ^ 0xCA)] - 1022955550) ^ *(_DWORD *)&v98[4 * (HIBYTE(v117) ^ 0x8E)] ^ (v23 - ((2 * v23) & 0x36A73A36) - 1689019109);
  unsigned int v184 = v179 ^ 0x44039AAA;
  unsigned int v118 = (181304767 * *(_DWORD *)&v100[4 * (v179 ^ 0xDB)] - 1022955550) ^ (((v179 ^ 0x44039AAAu) >> 16)
                                                                                          + 201545842
                                                                                          + ((2
                                                                                            * ((v179 ^ 0x44039AAAu) >> 16)
                                                                                            + 88) & 0x8A ^ 0xF7F7EBFF)) ^ *(_DWORD *)&v95[4 * (((v179 ^ 0x44039AAAu) >> 16) ^ 0x2D)];
  int v166 = v23 - ((2 * v23) & 0xCC120192);
  LODWORD(v23) = (v118 - ((2 * v118) & 0xCC120192) - 435617591) ^ *(_DWORD *)&v96[4 * (BYTE1(v179) ^ 0xC0)];
  LODWORD(v29) = *(_DWORD *)&v98[4 * (v191 ^ 0x22)] ^ (181304767 * *(_DWORD *)&v100[4 * (v189 ^ 0xFE)] - 1022955550) ^ (v29 - ((2 * v29) & 0x36A73A36) - 1689019109);
  int v192 = v23 - ((2 * v23) & 0x36A73A36);
  unsigned int v190 = v29 - ((2 * v29) & 0xCC120192);
  LODWORD(v23) = *(_DWORD *)&v100[4 * (v258 ^ 0xEC)];
  LODWORD(v29) = *(_DWORD *)&v95[4 * (v290 ^ 0x32)] ^ ((v290 ^ 0x1F)
                                                     + 201545842
                                                     + ((2 * (v290 ^ 0x1F) + 88) & 0x8A ^ 0xF7F7EBFF));
  int v119 = *(_DWORD *)&v100[4 * (v274 ^ 0xE6)];
  LODWORD(v23) = *(_DWORD *)&v98[4 * (HIBYTE(v258) ^ 0xCA)] ^ ((BYTE2(v258) ^ 0x2F)
                                                             + 201545842
                                                             + ((2 * (BYTE2(v258) ^ 0x2F) + 88) & 0x8A ^ 0xF7F7EBFF)) ^ *(_DWORD *)&v95[4 * (BYTE2(v258) ^ 2)] ^ (181304767 * v23 - ((362609534 * v23 + 101572548) & 0x36A73A36) + 1582992637);
  LODWORD(v21) = (v29 - ((2 * v29) & 0xCC120192) - 435617591) ^ *(_DWORD *)&v96[4 * (v300 ^ 0x8C)] ^ (181304767 * *(_DWORD *)&v100[4 * (v298 ^ 0xD9)] - 1022955550);
  LODWORD(v29) = *(_DWORD *)&v98[4 * ((v274 ^ 0x49A657C7u) >> 24)] ^ ((((v274 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                                    + 201545842
                                                                    + ((2
                                                                      * (((v274 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                                      + 88) & 0x8A ^ 0xF7F7EBFF)) ^ *(_DWORD *)&v95[4 * (((v274 ^ 0x49A657C7u) >> 16) ^ 0x18)] ^ (181304767 * v119 - ((362609534 * v119 + 101572548) & 0x36A73A36) + 1582992637);
  unsigned int v120 = *(_DWORD *)&v95[4 * (((*(_DWORD *)(v20 - 140) ^ 0x2F4F27EBu) >> 16) ^ 0x2D)] ^ (((*(_DWORD *)(v20 - 140) ^ 0x2F4F27EBu) >> 16) + 201545842 + ((2 * ((*(_DWORD *)(v20 - 140) ^ 0x2F4F27EBu) >> 16) + 88) & 0x8A ^ 0xF7F7EBFF));
  unsigned int v301 = v310 ^ 0xAA;
  LODWORD(v311) = (v23 - ((2 * v23) & 0xCC120192) - 435617591) ^ *(_DWORD *)&v96[4 * (BYTE1(v258) ^ 0x2E)];
  int v299 = v21 - ((2 * v21) & 0x36A73A36);
  unsigned int v259 = BYTE1(v274) ^ 0xB9;
  LODWORD(v23) = (v120 - ((2 * v120) & 0x36A73A36) - 1689019109) ^ *(_DWORD *)&v98[4
                                                                                 * ((*(_DWORD *)(v20 - 140) ^ 0x2F4F27EBu) >> 24)] ^ (181304767 * *(_DWORD *)&v100[4 * (*(_DWORD *)(v20 - 140) ^ 0x7B)] - 1022955550);
  unsigned int v291 = v29 - ((2 * v29) & 0xCC120192);
  int v275 = v23 - ((2 * v23) & 0xCC120192);
  LODWORD(v21) = *(_DWORD *)&v95[4 * (v264 ^ 0xC1)] ^ ((v264 ^ 0xEC)
                                                     + 201545842
                                                     + ((2 * (v264 ^ 0xEC) + 88) & 0x8A ^ 0xF7F7EBFF));
  LODWORD(v23) = (v21 - ((2 * v21) & 0xCC120192) - 435617591) ^ *(_DWORD *)&v96[4
                                                                                              * ((v272
                                                                                                - ((2 * v269) & 0x166)
                                                                                                + 179) ^ 0x54)] ^ (181304767 * *(_DWORD *)&v100[4 * (v293 ^ 0xE2)] - 1022955550);
  unsigned int v165 = BYTE1(v283) ^ 0x77;
  LODWORD(v29) = *(_DWORD *)&v100[4 * (*(_DWORD *)(v20 - 136) ^ 0x39)];
  LODWORD(v29) = (181304767 * v29 - ((362609534 * v29 + 101572548) & 0x36A73A36) + 1582992637) ^ *(_DWORD *)&v98[4 * (HIBYTE(v278) ^ 0xC1)];
  int v294 = v23 - ((2 * v23) & 0x36A73A36);
  int v270 = v29 - 435617590 + (~(2 * v29) | 0x33EDFE6D);
  unsigned int v180 = v255 ^ 0xEEA2BFA8;
  LODWORD(v29) = *(_DWORD *)&v95[4 * (((v255 ^ 0xEEA2BFA8) >> 16) ^ 0x86)] ^ ((((v255 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                             + 201545841
                                                                                             - ((2
                                                                                               * (((v255 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                               + 160207960) & 0x808148A));
  LODWORD(v23) = (181304767 * *(_DWORD *)&v100[4 * (v255 ^ 0x68)] - 1022955550) ^ *(_DWORD *)&v96[4 * (BYTE1(v255) ^ 0x55)] ^ (v29 - ((2 * v29) & 0xCC120192) - 435617591);
  unsigned int v256 = v283 ^ 0x231B9DB5;
  int v170 = ((v283 ^ 0x231B9DB5u) >> 16);
  unsigned int v273 = (v170 ^ 0xC1) + 201545842 + ((2 * (v170 ^ 0xC1) + 88) & 0x8A ^ 0xF7F7EBFF);
  LODWORD(v178) = v23 - ((2 * v23) & 0x36A73A36);
  int v121 = BYTE2(v278);
  unsigned int v265 = (BYTE2(v278) ^ 0x45) + 201545842 + ((2 * (BYTE2(v278) ^ 0x45) + 88) & 0x8A ^ 0xF7F7EBFF);
  unsigned int v122 = v319 ^ 0x4BB3AC6B;
  unsigned int v163 = v315 ^ 0x7B;
  int v123 = *(_DWORD *)&v100[4 * (v313 ^ 0x74)];
  unsigned int v124 = *(_DWORD *)(v20 - 176);
  LODWORD(v43) = *(_DWORD *)(v20 - 200);
  LODWORD(v23) = *(_DWORD *)&v100[4 * (v283 ^ 0x75)];
  BYTE1(v112) = BYTE1(v327);
  int v125 = *(_DWORD *)&v100[4 * (v327 ^ 0x2A)];
  LODWORD(v21) = *(_DWORD *)&v100[4 * (v319 ^ 0x52)];
  int v284 = 181304767 * *(_DWORD *)&v100[4 * (v280 ^ 0x60)] - 1022955550;
  int v320 = 181304767 * *(_DWORD *)&v100[4 * (v323 ^ 0xFB)] - 1022955550;
  int v314 = 181304767 * *(_DWORD *)&v100[4 * (*(_DWORD *)(v20 - 120) ^ 0xB8)] - 1022955550;
  int v316 = 181304767 * *(_DWORD *)&v100[4 * (v89 ^ 0xAC)] - 1022955550;
  int v279 = 181304767 * *(_DWORD *)&v100[4 * v181] - 1022955550;
  int v281 = 181304767 * *(_DWORD *)&v100[4 * (v305 ^ 0xF0)] - 1022955550;
  int v324 = 181304767 * *(_DWORD *)&v100[4 * (v124 ^ 0x57)] - 1022955550;
  int v224 = 181304767 * *(_DWORD *)&v100[4 * v168] - 1022955550;
  HIDWORD(v171) = 181304767 * *(_DWORD *)&v100[4 * (v43 ^ 0x78)] - 1022955550;
  HIDWORD(v177) = 181304767 * v23 - 1022955550;
  LODWORD(v182) = 181304767 * v21 - 1022955550;
  LODWORD(v21) = (181304767 * v123 - ((362609534 * v123 + 101572548) & 0x36A73A36) + 1582992637) ^ *(_DWORD *)&v98[4 * v163];
  LODWORD(v23) = *(_DWORD *)&v95[4 * (BYTE2(v325) ^ 0x6F)] ^ ((BYTE2(v325) ^ 0x42)
                                                            + 201545842
                                                            + ((2 * (BYTE2(v325) ^ 0x42) + 88) & 0x8A ^ 0xF7F7EBFF)) ^ (181304767 * *(_DWORD *)&v100[4 * (v325 ^ 0xD6)] - 1022955550);
  LODWORD(v23) = (v23 - ((2 * v23) & 0xCC120192) - 435617591) ^ *(_DWORD *)&v96[4 * (BYTE1(v325) ^ 0x95)];
  LODWORD(v100) = *(_DWORD *)&v95[4 * (BYTE2(v122) ^ 0x3C)] ^ ((BYTE2(v122) ^ 0x11)
                                                             + 201545842
                                                             + ((2 * (BYTE2(v122) ^ 0x11) + 88) & 0x8A ^ 0xF7F7EBFF));
  unsigned int v126 = (181304767 * v125 - 1022955550) ^ ((BYTE2(v327) ^ 0x37)
                                          + 201545842
                                          + ((2
                                            * (((BYTE2(v327) ^ 0x37) + 44) & 0x47 ^ (BYTE2(v327) ^ 0x37 | 0xFFFFFFFD))) ^ 0x8081405)) ^ *(_DWORD *)&v95[4 * (BYTE2(v327) ^ 0x1A)];
  int v127 = (v126 - ((2 * v126) & 0x36A73A36) - 1689019109) ^ *(_DWORD *)&v98[4 * (HIBYTE(v327) ^ 0xF9)];
  unsigned int v128 = v321 ^ 0x1A;
  int v129 = *(_DWORD *)(v20 - 232);
  HIDWORD(v167) = *(_DWORD *)&v95[4 * (v262 ^ 0x61)];
  *(_DWORD *)(v20 - 232) = *(_DWORD *)&v95[4 * (v172 ^ 0x7D)];
  int v211 = *(_DWORD *)&v95[4 * (v210 ^ 0x48)];
  LODWORD(v164) = *(_DWORD *)&v95[4 * (v175 ^ 0xA2)];
  LODWORD(v173) = *(_DWORD *)&v95[4 * (v170 ^ 0xEC)];
  int v263 = *(_DWORD *)&v95[4 * (v121 ^ 0x68)];
  int v322 = *(_DWORD *)&v95[4 * (v129 ^ 0x1A)];
  LODWORD(v95) = ((*(_DWORD *)(v20 - 256) >> 15) & 0x58 ^ 0x48) + (v129 ^ 0x4C64A1B);
  int v268 = *(_DWORD *)&v96[4 * v267];
  LODWORD(v171) = *(_DWORD *)&v96[4 * (v303 ^ 0x8E)];
  *(_DWORD *)(v20 - 256) = v95 + 121441862 + ((2 * v95) & 0x8A ^ 0xF7F7EBFF);
  *(_DWORD *)(v20 - 120) = *(_DWORD *)&v96[4 * (BYTE1(*(_DWORD *)(v20 - 120)) ^ 0x85)];
  *(_DWORD *)(v20 - 160) = *(_DWORD *)&v96[4 * (BYTE1(*(_DWORD *)(v20 - 160)) ^ 0xBD)];
  HIDWORD(v173) = *(_DWORD *)&v96[4 * (BYTE1(v89) ^ 0xB4)];
  int v130 = v23 - ((2 * v23) & 0x36A73A36);
  LODWORD(v162) = *(_DWORD *)&v96[4 * v193];
  HIDWORD(v162) = *(_DWORD *)&v96[4 * v128];
  int v194 = *(_DWORD *)&v96[4 * v185];
  *(_DWORD *)(v20 - 168) = *(_DWORD *)&v96[4 * (BYTE1(*(_DWORD *)(v20 - 168)) ^ 0xD6)];
  int v245 = *(_DWORD *)&v96[4 * (v208 ^ 0xEE)];
  int v328 = *(_DWORD *)&v96[4 * (BYTE1(*(_DWORD *)(v20 - 184)) ^ 0xD7)];
  HIDWORD(v161) = *(_DWORD *)&v96[4 * (BYTE1(v43) ^ 0x76)];
  int v131 = *(_DWORD *)&v96[4 * (BYTE1(*(_DWORD *)(v20 - 192)) ^ 0x16)];
  LODWORD(v161) = *(_DWORD *)&v96[4 * (v317 ^ 0xBE)];
  *(_DWORD *)(v20 - 184) = *(_DWORD *)&v96[4 * v259];
  *(_DWORD *)(v20 - 192) = *(_DWORD *)&v96[4 * (BYTE1(*(_DWORD *)(v20 - 140)) ^ 0xA7)];
  LODWORD(v169) = *(_DWORD *)&v96[4 * v165];
  int v260 = *(_DWORD *)&v96[4 * (BYTE1(*(_DWORD *)(v20 - 136)) ^ 0xBE)];
  *(_DWORD *)(v20 - 200) = *(_DWORD *)&v96[4 * (*(_DWORD *)(v20 - 220) ^ 0x84)];
  *(_DWORD *)(v20 - 220) = *(_DWORD *)&v96[4 * (BYTE1(v112) ^ 0x2E)];
  int v132 = *(_DWORD *)&v96[4 * (BYTE1(*(_DWORD *)(v20 - 248)) ^ 0xC8)];
  HIDWORD(v164) = *(_DWORD *)&v98[4 * (HIBYTE(v295) ^ 0xB2)];
  unsigned int v289 = v288 - 435617591;
  int v286 = v285 - 435617591;
  unsigned int v318 = v250 - 435617591;
  LODWORD(v186) = v246 - 435617591;
  HIDWORD(v160) = v228 - 435617591;
  LODWORD(v160) = v198 - 435617591;
  *(_DWORD *)(v20 - 248) = v188 - 435617591;
  unsigned int v251 = v116 - ((2 * v116) & 0xCC120192) - 435617591;
  HIDWORD(v186) = v205 - 435617591;
  LODWORD(v23) = v166 - 435617591;
  unsigned int v296 = v190 - 435617591;
  unsigned int v229 = v291 - 435617591;
  int v206 = v275 - 435617591;
  LODWORD(a15) = v21 - ((2 * v21) & 0xCC120192) - 435617591;
  unsigned int v247 = v127 - ((2 * v127) & 0xCC120192) - 435617591;
  *(_DWORD *)(v20 - 216) = *(_DWORD *)&v98[4 * (*(_DWORD *)(v20 - 216) ^ 7)];
  HIDWORD(v159) = *(_DWORD *)&v98[4 * v234];
  int v276 = *(_DWORD *)&v98[4 * (HIBYTE(*(_DWORD *)(v20 - 132)) ^ 0x29)];
  unsigned int v133 = HIBYTE(v196);
  int v197 = *(_DWORD *)&v98[4 * (HIBYTE(v124) ^ 0xB8)];
  int v209 = *(_DWORD *)&v98[4 * v133];
  int v199 = *(_DWORD *)&v98[4 * (v230 ^ 0x4B)];
  int v231 = *(_DWORD *)&v98[4 * (HIBYTE(*(_DWORD *)(v20 - 128)) ^ 0x49)];
  LODWORD(v167) = *(_DWORD *)&v98[4 * v202];
  int v134 = *(_DWORD *)&v98[4 * ((v43 >> 24) ^ 0xA6)];
  uint64_t v135 = *(unsigned int *)&v98[4 * HIBYTE(v184)];
  int v235 = *(_DWORD *)&v98[4 * v301];
  unsigned int v136 = v132 ^ (v100 - ((2 * v100) & 0xCC120192) - 435617591);
  *(_DWORD *)(v20 - 176) = *(_DWORD *)&v98[4 * HIBYTE(v256)];
  int v257 = *(_DWORD *)&v98[4 * (*(_DWORD *)(v20 - 240) ^ 0x38)];
  LODWORD(v159) = *(_DWORD *)&v98[4 * HIBYTE(v180)];
  HIDWORD(v182) = *(_DWORD *)&v98[4 * (HIBYTE(v325) ^ 0xBB)];
  HIDWORD(v178) = *(_DWORD *)&v98[4 * HIBYTE(v122)];
  uint64_t v137 = (v304 - 1689019109);
  int v203 = v253 - 1689019109;
  uint64_t v138 = v240 - 1689019109;
  uint64_t v139 = (v215 - 1689019109);
  *(_DWORD *)(v20 - 240) = v222 - 1689019109;
  int v326 = v243 - 1689019109;
  uint64_t v140 = (v192 - 1689019109);
  int v241 = v299 - 1689019109;
  uint64_t v141 = (v294 - 1689019109);
  uint64_t v142 = (v178 - 1689019109);
  int v143 = v130 - 1689019109;
  int v144 = v136 - ((2 * v136) & 0x36A73A36) - 1689019109;
  int v145 = HIDWORD(v311) ^ v311 ^ 0x6285F181;
  int v146 = v23 ^ v131 ^ v145;
  int v147 = *(_DWORD *)(v20 - 152);
  uint64_t v148 = (uint64_t)*(&off_10026C690 + (v147 ^ 0x8E));
  unint64_t v149 = (char *)*(&off_10026C690 + v147 - 202) - 8;
  uint64_t v150 = (char *)*(&off_10026C690 + (v147 ^ 0x49)) - 12;
  int v151 = v147;
  unint64_t v152 = (char *)*(&off_10026C690 + v147 - 194) - 8;
  unsigned int v153 = (v152[*(unsigned __int8 *)(v20 - 109) ^ 0x41] ^ 0x51) & 0xFF00FFFF | (((v149[*(unsigned __int8 *)(v20 - 111) ^ 0x40] - 112) ^ 0x5A) << 16) | ((v150[*(unsigned __int8 *)(v20 - 110) ^ 0xBBLL] ^ 0x97) << 8) | ((*(unsigned __int8 *)(v148 + (*(unsigned __int8 *)(v20 - 112) ^ 0x1ELL)) ^ (*(unsigned __int8 *)(v20 - 112) + (~(2 * *(unsigned __int8 *)(v20 - 112)) | 0xA5) + 46) ^ 0x84) << 24);
  int v154 = v152[*(unsigned __int8 *)(v20 - 97) ^ 0x74] ^ 0xF6 | (((v149[*(unsigned __int8 *)(v20 - 99) ^ 0xF3] ^ 2)
                                                                                                  - 112) << 16) | ((v150[*(unsigned __int8 *)(v20 - 98) ^ 0x20] ^ 0x7D) << 8) | ((*(unsigned __int8 *)(v148 + (*(unsigned __int8 *)(v20 - 100) ^ 0xF3)) ^ (*(unsigned __int8 *)(v20 - 100) - ((2 * *(unsigned __int8 *)(v20 - 100)) & 0x5A) + 45) ^ 0x85) << 24);
  id v302 = v150;
  unsigned int v155 = (v152[*(unsigned __int8 *)(v20 - 105) ^ 0xE4] ^ 0x67) & 0xFF00FFFF | ((*(unsigned __int8 *)(v148 + (*(unsigned __int8 *)(v20 - 108) ^ 0x3ELL)) ^ (*(unsigned __int8 *)(v20 - 108) - ((2 * *(unsigned __int8 *)(v20 - 108)) & 0x5A) + 45) ^ 0xFFFFFFE1) << 24) | (((v149[*(unsigned __int8 *)(v20 - 107) ^ 0x27] - 112) ^ 0x96) << 16) | ((v150[*(unsigned __int8 *)(v20 - 106) ^ 9] ^ 0x92) << 8);
  unsigned int v156 = (v152[*(unsigned __int8 *)(v20 - 101) ^ 0xF2] ^ 0xDE) & 0xFF00FFFF | ((*(unsigned __int8 *)(v148 + (*(unsigned __int8 *)(v20 - 104) ^ 0xD3)) ^ (*(unsigned __int8 *)(v20 - 104) - ((2 * *(unsigned __int8 *)(v20 - 104)) & 0x5A) + 45) ^ 0xE0) << 24) | ((v150[*(unsigned __int8 *)(v20 - 102) ^ 0xBELL] ^ 0x35) << 8) & 0xFF00FFFF | (((v149[*(unsigned __int8 *)(v20 - 103) ^ 0xE9] - 112) ^ 0x8A) << 16);
  if ((v146 & 0x80) != 0) {
    int v157 = -128;
  }
  else {
    int v157 = 128;
  }
  *(_DWORD *)(v20 - 128) = v154 ^ 0x5599F23E;
  *(_DWORD *)(v20 - 132) = v153 ^ 0x395EE58F;
  *(_DWORD *)(v20 - 136) = v155 ^ 0xEEDFE561;
  *(_DWORD *)(v20 - 140) = v156 ^ 0x7D787039;
  HIDWORD(v297) = v296 ^ v161;
  LODWORD(v297) = v134 ^ v217 ^ HIDWORD(v161) ^ v164 ^ HIDWORD(v171);
  HIDWORD(v292) = v140 ^ v135;
  LODWORD(v292) = v284 ^ v268 ^ v289;
  HIDWORD(v287) = v286 ^ v171;
  LODWORD(v287) = HIDWORD(v164) ^ v312 ^ HIDWORD(v167) ^ v137;
  HIDWORD(v282) = v160 ^ v162;
  LODWORD(v282) = HIDWORD(v160) ^ HIDWORD(v162) ^ v281;
  HIDWORD(v277) = v138 ^ HIDWORD(v159) ^ v279;
  LODWORD(v277) = v139 ^ v276;
  HIDWORD(v271) = v169 ^ *(_DWORD *)(v20 - 176) ^ v273 ^ v173 ^ HIDWORD(v177);
  LODWORD(v271) = v260 ^ v265 ^ v263 ^ v270;
  HIDWORD(v266) = v142 ^ v159;
  LODWORD(v266) = v141 ^ v257;
  HIDWORD(v261) = HIDWORD(v186) ^ v328;
  LODWORD(v261) = v167 ^ v237 ^ v211 ^ (HIDWORD(v169) - 1689019109);
  HIDWORD(v254) = (v177 - 1689019109) ^ v231;
  LODWORD(v254) = v224 ^ v245 ^ v251;
  HIDWORD(v248) = v182 ^ HIDWORD(v178) ^ v144;
  LODWORD(v248) = v247 ^ *(_DWORD *)(v20 - 220);
  HIDWORD(v244) = v143 ^ HIDWORD(v182);
  LODWORD(v244) = *(_DWORD *)(v20 - 200) ^ *(_DWORD *)(v20 - 256) ^ v322 ^ a15;
  HIDWORD(v238) = v241 ^ v235;
  LODWORD(v238) = *(_DWORD *)(v20 - 184) ^ v229;
  HIDWORD(v232) = v206 ^ *(_DWORD *)(v20 - 192);
  LODWORD(v232) = v186 ^ *(_DWORD *)(v20 - 160);
  HIDWORD(v226) = v318 ^ *(_DWORD *)(v20 - 120) ^ v314;
  LODWORD(v226) = v316 ^ HIDWORD(v173) ^ v225;
  HIDWORD(v223) = v320 ^ *(_DWORD *)(v20 - 216) ^ v203;
  LODWORD(v223) = *(_DWORD *)(v20 - 248) ^ *(_DWORD *)(v20 - 168);
  HIDWORD(v218) = v194 ^ v197 ^ *(_DWORD *)(v20 - 232) ^ v220 ^ v324;
  LODWORD(v218) = v326 ^ v199;
  HIDWORD(v212) = *(_DWORD *)(v20 - 240) ^ v209;
  LODWORD(v212) = *(_DWORD *)(v20 - 208) - 356513342;
  HIDWORD(v207) = (v157 + (v146 ^ 0x2497E332)) ^ v145;
  LODWORD(v207) = v151 + 994873107;
  HIDWORD(v200) = (v151 + 841) ^ 0x426;
  LODWORD(v200) = (v151 + 841) & 0x9F9A4A03;
  HIDWORD(v195) = (v151 + 841) ^ 0x48D;
  LODWORD(v195) = (v151 + 841) ^ 0x467;
  *(_DWORD *)(v20 - 120) = v151 + 841;
  HIDWORD(a17) = (v151 + 841) ^ 0x47A;
  return sub_1000AF25C(243, v140, v137, v139, v142, v138, v141, v135, v159, v160, v161, v162, v164, v167, v169, v171, v173, v177, v178,
           v182,
           v186,
           a15,
           a16,
           a17,
           v195,
           v200,
           v207,
           v212,
           v218,
           v223,
           v226,
           v232,
           v238,
           v244,
           v248,
           v254,
           v261,
           v266,
           v271,
           v277,
           v282,
           v287,
           v292,
           v297,
           v152,
           v302,
           v149,
           v148,
           v306,
           v307,
           v308,
           v309,
           v311);
}

uint64_t sub_1000AF25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v59 = v56 & 0xFFFFFFF2 ^ ((a27 & 0xC4B3761F) + 2003155293);
  *(void *)(v58 - 176) = v59;
  char v60 = *(unsigned char *)(a47 + (*(unsigned __int8 *)(v57 + v59) ^ 0xF3));
  uint64_t v61 = v56 & 0xFFFFFFFE ^ 0x7765BF5D;
  *(void *)(v58 - 152) = v61;
  int v62 = ((v60 ^ 2) - 112) << 16;
  uint64_t v63 = *(unsigned __int8 *)(v57 + v61) ^ 0x57;
  uint64_t v64 = v56 & 0xFFFFFFF5 ^ 0x7765BF5F;
  *(void *)(v58 - 160) = v64;
  uint64_t v65 = *(unsigned __int8 *)(v57 + v64) ^ 0xB6;
  int v66 = ((*(unsigned char *)(a47 + v63) - 112) ^ 0xF6) << 16;
  uint64_t v67 = v56 & 0xFFFFFFFB ^ 0x7765BF5D;
  *(void *)(v58 - 192) = v67;
  LODWORD(v65) = (*(unsigned __int8 *)(a46 + v65) ^ 0x18) << 8;
  uint64_t v68 = *(unsigned __int8 *)(v57 + v67);
  int v69 = *(unsigned __int8 *)(a48 + (v68 ^ 0x9A));
  uint64_t v70 = v56 & 0xFFFFFFF8 ^ 0x7765BF5F;
  *(void *)(v58 - 232) = v70;
  LODWORD(v68) = v69 ^ (v68 - ((2 * v68) & 0x5A) + 45) ^ 0xFFFFFFCF;
  uint64_t v71 = *(unsigned __int8 *)(v57 + v70) ^ 0xD6;
  uint64_t v72 = v56 & 0xFFFFFFFD ^ 0x7765BF5F;
  *(void *)(v58 - 216) = v72;
  LODWORD(v68) = *(unsigned __int8 *)(a45 + v71) ^ 0x34 | (v68 << 24);
  LODWORD(v71) = *(unsigned __int8 *)(a46 + *(unsigned __int8 *)(v57 + v72));
  uint64_t v73 = v56 & 0xFFFFFFFC ^ 0x7765BF5F;
  *(void *)(v58 - 184) = v73;
  unsigned int v74 = v66 | ((v71 ^ 0xA) << 8);
  LODWORD(v71) = *(unsigned __int8 *)(a45 + (*(unsigned __int8 *)(v57 + v73) ^ 0x74));
  uint64_t v75 = v56 & 0xFFFFFFF3 ^ 0x7765BF5D;
  *(void *)(v58 - 168) = v75;
  int v76 = v74 | v71 ^ 0xF6;
  LODWORD(v71) = *(unsigned __int8 *)(a48 + (*(unsigned __int8 *)(v57 + v75) ^ 0x6ELL)) ^ (*(unsigned __int8 *)(v57 + v75)
                                                                                         - ((2
                                                                                           * *(unsigned __int8 *)(v57 + v75)) & 0x5A)
                                                                                         + 45) ^ 0x51;
  uint64_t v77 = v56 ^ 0x7765BF5Du;
  *(void *)(v58 - 208) = v77;
  int v78 = v62 | (v71 << 24);
  uint64_t v218 = v56 & 0xFFFFFFF7 ^ 0x7765BF5D;
  int v79 = v76 | ((*(unsigned __int8 *)(a48 + (*(unsigned __int8 *)(v57 + v77) ^ 0x15)) ^ (*(unsigned __int8 *)(v57 + v77)
                                                                                        - ((2
                                                                                          * *(unsigned __int8 *)(v57 + v77)) & 0x5A)
                                                                                        + 45) ^ 0xAE) << 24);
  unsigned int v80 = *(unsigned __int8 *)(a48 + (*(unsigned __int8 *)(v57 + v218) ^ 0x46)) ^ (*(unsigned __int8 *)(v57 + v218)
                                                                                 - ((2 * *(unsigned __int8 *)(v57 + v218)) & 0x5A)
                                                                                 + 45) ^ 0xFFFFFFE7;
  uint64_t v81 = v56 & 0xFFFFFFF1 ^ 0x7765BF5F;
  *(void *)(v58 - 200) = v81;
  LODWORD(v65) = v65 | (v80 << 24);
  int v82 = *(unsigned __int8 *)(a46 + (*(unsigned __int8 *)(v57 + v81) ^ 0xD5)) ^ 0x82;
  uint64_t v83 = v56 & 0xFFFFFFFA ^ 0x7765BF5D;
  *(void *)(v58 - 240) = v83;
  int v84 = v78 | (v82 << 8);
  uint64_t v85 = v56 & 0xFFFFFFF4 ^ 0x7765BF5F;
  *(void *)(v58 - 256) = v85;
  LODWORD(v68) = v68 & 0xFF00FFFF | (((*(unsigned char *)(a47 + (*(unsigned __int8 *)(v57 + v83) ^ 0x9DLL))
                                                      - 112) ^ 0xF7) << 16);
  int v86 = *(unsigned __int8 *)(a45 + (*(unsigned __int8 *)(v57 + v85) ^ 0xC2)) ^ 0xD3 | v65;
  uint64_t v217 = v56 & 0xFFFFFFF6 ^ 0x7765BF5D;
  uint64_t v87 = *(unsigned __int8 *)(v57 + v217) ^ 0x3ELL;
  *(_DWORD *)(v58 - 220) = 2003156831;
  uint64_t v216 = v56 & 0xFFFFFFF9 ^ 0x7765BF5F;
  uint64_t v88 = *(unsigned __int8 *)(v57 + v216) ^ 0xA4;
  unsigned int v89 = v86 & 0xFF00FFFF | (((*(unsigned char *)(a47 + v87) - 112) ^ 0xDF) << 16);
  uint64_t v90 = v56 & 0xFFFFFFF0 ^ 0x7765BF5F;
  *(void *)(v58 - 248) = v90;
  int v215 = v68 | ((*(unsigned __int8 *)(a46 + v88) ^ 0xD2) << 8);
  uint64_t v91 = (uint64_t)*(&off_10026C690 + SHIDWORD(a26));
  LODWORD(v87) = *(_DWORD *)(v91 + 4 * (((unsigned __int16)(v215 ^ a50) >> 8) ^ 0x21u)) ^ ((((unsigned __int16)(v215 ^ a50) >> 8) ^ 0x4C) - 1395247466 - ((2 * (((v215 ^ a50) >> 8) ^ 0xB71C4C)) & 0x12C));
  LODWORD(v88) = v87 + 463208426 - ((2 * v87) & 0x3737FFD4);
  uint64_t v92 = (uint64_t)*(&off_10026C690 + *(_DWORD *)(v58 - 120) - 849);
  LODWORD(v87) = v79 ^ HIDWORD(a50) ^ 0x730032AA;
  int v93 = v88 ^ *(_DWORD *)(v92 + 4 * ((v79 ^ BYTE4(a50)) ^ 0xAAu));
  int v214 = *(unsigned __int8 *)(a45 + (*(unsigned __int8 *)(v57 + v90) ^ 0x47)) ^ 0xF6 | v84;
  unsigned int v94 = *(_DWORD *)(v91 + 4 * (((unsigned __int16)(a49 ^ v214) >> 8) ^ 0x44u)) ^ ((((unsigned __int16)(a49 ^ v214) >> 8) ^ 0x29) - 1395247466 - (((a49 ^ v214) >> 7) & 0x12C));
  uint64_t v95 = (char *)*(&off_10026C690 + *(_DWORD *)(v58 - 120) - 1000) - 8;
  int v96 = *(_DWORD *)&v95[4 * (((v89 ^ HIDWORD(a49)) >> 16) ^ 0x68)];
  HIDWORD(v98) = v96 ^ 0x38E;
  LODWORD(v98) = v96 ^ 0x63082000;
  int v97 = v98 >> 12;
  unsigned int v99 = v94 - 904581027 - ((2 * v94) & 0x942A60BA);
  int v100 = *(_DWORD *)&v95[4 * (BYTE2(v79) ^ BYTE6(a50))];
  HIDWORD(v98) = v100 ^ 0x38E;
  LODWORD(v98) = v100 ^ 0x63082000;
  uint64_t v101 = (uint64_t)*(&off_10026C690 + (int)a26);
  LODWORD(v68) = v99 ^ *(_DWORD *)(v101 + 4 * (((v215 ^ a50) >> 24) ^ 0xB7)) ^ (v98 >> 12);
  int v102 = *(_DWORD *)&v95[4 * (((a49 ^ v214) >> 16) ^ 9)];
  HIDWORD(v98) = v102 ^ 0x38E;
  LODWORD(v98) = v102 ^ 0x63082000;
  int v103 = ((unsigned __int16)(v89 ^ WORD2(a49)) >> 8) ^ *(_DWORD *)(v92
                                                                                  + 4
                                                                                  * ((v215 ^ a50) ^ 0xFBu)) ^ *(_DWORD *)(v91 + 4 * (((unsigned __int16)(v89 ^ WORD2(a49)) >> 8) ^ 0x23u)) ^ (v98 >> 12);
  unsigned int v104 = (v103 ^ 0xB74DC932) - 904581026 + ((2 * ((v103 ^ 0xB74DC932) & 0x4A15305F ^ v103 & 2)) ^ 0xFFFFFFFB);
  int v105 = *(_DWORD *)&v95[4 * (((v215 ^ a50) >> 16) ^ 0x1C)];
  HIDWORD(v98) = v105 ^ 0x38E;
  LODWORD(v98) = v105 ^ 0x63082000;
  int v106 = *(_DWORD *)(v101 + 4 * (((v89 ^ HIDWORD(a49)) >> 24) ^ 0xF6)) ^ (BYTE1(v87)
                                                                          - 1395247466
                                                                          - ((v87 >> 7) & 0x12C)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v87) ^ 0x6Du)) ^ ((v98 >> 12) - 904581027 - ((2 * (v98 >> 12)) & 0x942A60BA));
  unsigned int v107 = HIDWORD(a44) ^ v97 ^ *(_DWORD *)(v101 + 4 * (((a49 ^ v214) >> 24) ^ 0x40)) ^ (v93 - 904581027 - ((2 * v93) & 0x942A60BA));
  LODWORD(v88) = a44 ^ *(_DWORD *)(v92 + 4 * ((a49 ^ v214) ^ 0x10u)) ^ (v106
                                                                                         + 463208426
                                                                                         - ((2 * v106) & 0x3737FFD4));
  unsigned int v108 = HIDWORD(a43) ^ *(_DWORD *)(v92 + 4 * ((v89 ^ BYTE4(a49)) ^ 0x5Fu)) ^ (v68
                                                                                                + 463208426
                                                                                                - ((2 * v68) & 0x3737FFD4));
  unsigned int v109 = HIDWORD(a27) ^ *(_DWORD *)(v101 + 4 * BYTE3(v87)) ^ v104;
  LODWORD(v87) = v107 ^ 0xF9388C2F;
  LODWORD(v68) = *(_DWORD *)&v95[4 * ((v107 ^ 0xF9388C2F) >> 16)];
  HIDWORD(v98) = v68 ^ 0x38E;
  LODWORD(v98) = v68 ^ 0x63082000;
  LODWORD(v68) = v98 >> 12;
  int v110 = *(_DWORD *)&v95[4 * (BYTE2(v88) ^ 0x22)];
  HIDWORD(v98) = v110 ^ 0x38E;
  LODWORD(v98) = v110 ^ 0x63082000;
  int v111 = v98 >> 12;
  int v112 = *(_DWORD *)&v95[4 * (BYTE2(v108) ^ 0x66)];
  HIDWORD(v98) = v112 ^ 0x38E;
  LODWORD(v98) = v112 ^ 0x63082000;
  int v113 = (v98 >> 12) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v109) ^ 5u)) ^ ((BYTE1(v109) ^ 0x68)
                                                                    - 1395247466
                                                                    - ((v109 >> 7) & 0x12C));
  LODWORD(v68) = (v68 + 463208426 - ((2 * v68) & 0x3737FFD4)) ^ *(_DWORD *)(v92 + 4 * (v108 ^ 0xB6u));
  int v114 = (v113 + 463208426 - ((2 * v113) & 0x3737FFD4)) ^ *(_DWORD *)(v92 + 4 * (v107 ^ 0x61u));
  unsigned int v115 = (((unsigned __int16)(v107 ^ 0x8C2F) >> 8) - 1395247466 - (((v107 ^ 0xF9388C2F) >> 7) & 0x12C)) ^ 0xD678EAEF ^ *(_DWORD *)(v91 + 4 * (((unsigned __int16)(v107 ^ 0x8C2F) >> 8) ^ 0x6Du));
  int v116 = *(_DWORD *)(v101 + 4 * (HIBYTE(v108) ^ 0x43)) ^ 0x680F6BE3;
  unsigned int v117 = v115 + v116;
  int v118 = v115 & v116;
  int v119 = *(_DWORD *)&v95[4 * (BYTE2(v109) ^ 0xBD)];
  unsigned int v120 = v117 - 2 * v118;
  HIDWORD(v98) = v119 ^ 0x38E;
  LODWORD(v98) = v119 ^ 0x63082000;
  LODWORD(v87) = *(_DWORD *)(v101 + 4 * BYTE3(v87)) ^ (v111 - 904581027 - ((2 * v111) & 0x942A60BA));
  LODWORD(v87) = (v87 + 463208426 - ((2 * v87) & 0x3737FFD4)) ^ *(_DWORD *)(v92 + 4 * (v109 ^ 0xABu));
  unsigned int v121 = *(_DWORD *)(v101 + 4 * (HIBYTE(v109) ^ 0x42)) ^ HIDWORD(a53) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v88) ^ 0x6Bu)) ^ ((BYTE1(v88) ^ 6) - 1395247466 - 2 * (((v88 >> 8) ^ 0xA82206) & 0x97 ^ (v88 >> 8) & 1)) ^ (v68 - 904581027 - ((2 * v68) & 0x942A60BA));
  LOBYTE(v117) = BYTE1(v108) ^ 0x54;
  unsigned int v122 = a43 ^ *(_DWORD *)(v91 + 4 * (BYTE1(v108) ^ 0x39u)) ^ (v87 - 1395247466 - ((2 * v87) & 0x59AC6D2C));
  unsigned int v123 = HIDWORD(a42) ^ *(_DWORD *)(v101 + 4 * (BYTE3(v88) ^ 0xA8)) ^ (v114 - 904581027 - ((2 * v114) & 0x942A60BA));
  LODWORD(v87) = a42 ^ *(_DWORD *)(v92 + 4 * (v88 ^ 0xBAu)) ^ ((v120 ^ (v98 >> 12))
                                                                                + 463208426
                                                                                - ((2 * (v120 ^ (v98 >> 12))) & 0x3737FFD4));
  LODWORD(v68) = *(_DWORD *)&v95[4 * (BYTE2(v87) ^ 0x79)];
  HIDWORD(v98) = v68 ^ 0x38E;
  LODWORD(v98) = v68 ^ 0x63082000;
  BYTE1(v88) = ((unsigned __int16)(WORD2(a42) ^ *(_WORD *)(v101 + 4 * (BYTE3(v88) ^ 0xA8)) ^ (v114
                                                                                              + 12381
                                                                                              - ((2 * v114) & 0x60BA))) >> 8) ^ 0x68;
  int v124 = ((v98 >> 12) - 904581027 - ((2 * (v98 >> 12)) & 0x942A60BA)) ^ *(_DWORD *)(v101
                                                                                  + 4 * ((v123 ^ 0x2261685E) >> 24));
  LODWORD(v68) = ((BYTE1(v87) ^ 0xD0)
                - 1395247466
                - 2 * (((v87 >> 8) ^ 0x679D0) & 0x9E ^ (v87 >> 8) & 8)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v87) ^ 0xBDu));
  LODWORD(v68) = (v68 + 463208426 - ((2 * v68) & 0x3737FFD4)) ^ *(_DWORD *)(v92 + 4 * (v121 ^ 0x76u));
  int v125 = ((BYTE1(v122) ^ 0xEC) - 1395247466 - 2 * (((v122 >> 8) ^ 0xE5FEC) & 0x97 ^ (v122 >> 8) & 1)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v122) ^ 0x81u));
  int v126 = *(_DWORD *)&v95[4 * (BYTE2(v122) ^ 0x5F)];
  HIDWORD(v98) = v126 ^ 0x38E;
  LODWORD(v98) = v126 ^ 0x63082000;
  int v127 = v98 >> 12;
  HIDWORD(v98) = *(_DWORD *)(v92 + 4 * (v123 ^ 0x5Eu)) ^ 0xF28CD862;
  LODWORD(v98) = HIDWORD(v98);
  int v128 = (v98 >> 28) ^ __ROR4__(*(_DWORD *)(v101 + 4 * (BYTE3(v87) ^ 6)) ^ 0x7462B151 ^ (v125- 904581027- ((2 * v125) & 0x942A60BA)), 28);
  unsigned int v129 = (v127 - 904581027 - ((2 * v127) & 0x942A60BA)) ^ *(_DWORD *)(v101 + 4 * (HIBYTE(v121) ^ 0xD2));
  int v130 = *(_DWORD *)&v95[4 * (BYTE2(v123) ^ 0x1B)];
  HIDWORD(v98) = v130 ^ 0x38E;
  LODWORD(v98) = v130 ^ 0x63082000;
  int v131 = v98 >> 12;
  LODWORD(v87) = (v129 + 463208426 - ((2 * v129) & 0x3737FFD4)) ^ *(_DWORD *)(v92 + 4 * (v87 ^ 0x4Cu));
  int v132 = v124 + 463208426 - ((2 * v124) & 0x3737FFD4);
  int v133 = ((v121 >> 8) ^ 0xD2CCC0) & 0x9E ^ (v121 >> 8) & 8;
  int v134 = BYTE1(v121) ^ 0xC0;
  int v135 = *(_DWORD *)&v95[4 * (BYTE2(v121) ^ 0xCC)];
  HIDWORD(v98) = v135 ^ 0x38E;
  LODWORD(v98) = v135 ^ 0x63082000;
  int v136 = HIDWORD(a41) ^ (v98 >> 12) ^ __ROR4__(v128 ^ 0x78071371, 4);
  unsigned int v137 = a41 ^ *(_DWORD *)(v101 + 4 * (HIBYTE(v122) ^ 0xE)) ^ v131 ^ (v68 - 904581026 + ~((2 * v68) & 0x942A60BA));
  LODWORD(v68) = BYTE1(v88);
  LODWORD(v88) = HIDWORD(a40) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v88) ^ 0x6Du)) ^ (v87
                                                                               - 1395247466
                                                                               - ((2 * v87) & 0x59AC6D2C));
  LODWORD(v87) = a40 ^ (v134 - 1395247466 - 2 * v133) ^ *(_DWORD *)(v92 + 4 * ((v122 ^ v117) ^ 0xCAu)) ^ *(_DWORD *)(v91 + 4 * (v134 ^ 0x6Du)) ^ v132;
  unsigned int v138 = v68 ^ 0x4552953C ^ v88;
  LODWORD(v68) = *(_DWORD *)&v95[4 * BYTE2(v138)];
  HIDWORD(v98) = v68 ^ 0x38E;
  LODWORD(v98) = v68 ^ 0x63082000;
  int v139 = v98 >> 12;
  BYTE1(v122) = BYTE1(v136) ^ 0xE7;
  LODWORD(v68) = *(_DWORD *)&v95[4 * ((v136 ^ 0x99FEE750) >> 16)];
  HIDWORD(v98) = v68 ^ 0x38E;
  LODWORD(v98) = v68 ^ 0x63082000;
  LODWORD(v68) = (v98 >> 12) + 463208426 - ((2 * (v98 >> 12)) & 0x3737FFD4);
  int v140 = BYTE1(v137);
  int v141 = (BYTE1(v137) ^ 0x29) - 1395247466 - ((v137 >> 7) & 0x12C);
  int v142 = *(_DWORD *)&v95[4 * (BYTE2(v87) ^ 2)];
  HIDWORD(v98) = v142 ^ 0x38E;
  LODWORD(v98) = v142 ^ 0x63082000;
  LODWORD(v90) = (BYTE1(v138) - 1395247466 - ((v138 >> 7) & 0x12C)) ^ *(_DWORD *)(v92
                                                                                + 4 * (v137 ^ 0x72u)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v138) ^ 0x6Du)) ^ v68;
  LODWORD(v68) = *(_DWORD *)(v92 + 4 * v138) ^ *(_DWORD *)(v101 + 4 * (HIBYTE(v137) ^ 0xA7)) ^ (v98 >> 12) ^ 0xD18ECFB7;
  int v143 = *(_DWORD *)&v95[4 * (BYTE2(v137) ^ 0x3B)];
  HIDWORD(v98) = v143 ^ 0x38E;
  LODWORD(v98) = v143 ^ 0x63082000;
  LODWORD(v88) = HIDWORD(a39) ^ ((BYTE1(v87) ^ 0xD9) - 1395247466 - ((2 * ((v87 >> 8) ^ 0x9802D9)) & 0x12C)) ^ *(_DWORD *)(v92 + 4 * (v136 ^ 0x1Eu)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v87) ^ 0xB4u)) ^ (v98 >> 12) ^ *(_DWORD *)(v101 + 4 * (BYTE3(v88) ^ 0x61));
  unsigned int v144 = a39 ^ *(_DWORD *)(v101 + 4 * (BYTE3(v87) ^ 0x98)) ^ (v90 - 904581027 - ((2 * v90) & 0x942A60BA));
  LODWORD(v90) = v68 - 1395247466 - ((2 * v68) & 0x59AC6D2C);
  LODWORD(v68) = HIDWORD(a38) ^ *(_DWORD *)(v92 + 4 * (v87 ^ 0x3Du)) ^ v141 ^ *(_DWORD *)(v101 + 4 * ((v136 ^ 0x99FEE750) >> 24)) ^ *(_DWORD *)(v91 + 4 * (v140 ^ 0x44u));
  LODWORD(v87) = *(_DWORD *)&v95[4 * (BYTE2(v88) ^ 0x32)];
  HIDWORD(v98) = v87 ^ 0x38E;
  LODWORD(v98) = v87 ^ 0x63082000;
  int v145 = v98 >> 12;
  LODWORD(v87) = v68 ^ v139;
  unsigned int v146 = a38 ^ *(_DWORD *)(v91 + 4 * (((unsigned __int16)(v136 ^ 0xE750) >> 8) ^ 0x6Du)) ^ v90;
  LODWORD(v90) = *(_DWORD *)&v95[4 * (((v68 ^ v139) >> 16) ^ 0x66)];
  HIDWORD(v98) = v90 ^ 0x38E;
  LODWORD(v98) = v90 ^ 0x63082000;
  int v147 = ((unsigned __int16)(v68 ^ v139) >> 8) ^ 0x30;
  unsigned int v148 = v147 - 1395247466 - 2 * (((v87 >> 8) ^ 0x46630) & 0x9F ^ (v87 >> 8) & 9);
  LOBYTE(v143) = v88 ^ 0xC5;
  LODWORD(v90) = *(_DWORD *)(v92 + 4 * ((v146 ^ BYTE1(v122)) ^ 0x41u)) ^ (((unsigned __int16)(v88 ^ 0xCAC5) >> 8)
                                                                                           - 1395247466
                                                                                           - (((v88 ^ 0x3A48CAC5) >> 7) & 0x12C)) ^ *(_DWORD *)(v91 + 4 * (((unsigned __int16)(v88 ^ 0xCAC5) >> 8) ^ 0x6Du)) ^ ((v98 >> 12) + 463208426 - ((2 * (v98 >> 12)) & 0x3737FFD4));
  LODWORD(v68) = *(_DWORD *)&v95[4 * (BYTE2(v146) ^ 0x81)];
  HIDWORD(v98) = v68 ^ 0x38E;
  LODWORD(v98) = v68 ^ 0x63082000;
  LODWORD(v68) = ((v98 >> 12) - 904581027 - ((2 * (v98 >> 12)) & 0x942A60BA)) ^ *(_DWORD *)(v101
                                                                                          + 4
                                                                                          * ((v88 ^ 0x3A48CAC5) >> 24));
  LODWORD(v68) = (v68 + 463208426 - ((2 * v68) & 0x3737FFD4)) ^ *(_DWORD *)(v92 + 4 * (v87 ^ 0xB2u));
  int v149 = ((BYTE1(v146) ^ 0xA0) - 1395247466 - 2 * (((v146 >> 8) ^ 0x6881A0) & 0x9F ^ (v146 >> 8) & 9)) ^ (v145 + 463208426 - ((2 * v145) & 0x3737FFD4)) ^ *(_DWORD *)(v92 + 4 * (v144 ^ 0xFCu)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v146) ^ 0xCDu));
  LODWORD(v88) = *(_DWORD *)&v95[4 * (BYTE2(v144) ^ 0xC6)];
  LODWORD(v98) = __ROR4__((v88 >> 12) ^ 0x26BEDA0, 17) ^ 0xEE910136;
  HIDWORD(v98) = v98;
  int v150 = (v98 >> 15) + (v88 << 20);
  LODWORD(v88) = v149 - 904581027 - ((2 * v149) & 0x942A60BA);
  unsigned int v151 = HIDWORD(a37) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v144) ^ 0x75u)) ^ (v68 - 1395247466 - ((2 * v68) & 0x59AC6D2C));
  LODWORD(v88) = a37 ^ *(_DWORD *)(v101 + 4 * (BYTE3(v87) ^ 4)) ^ v88;
  LODWORD(v87) = HIDWORD(a36) ^ *(_DWORD *)(v101 + 4 * (HIBYTE(v144) ^ 0x5A)) ^ (v90
                                                                                 - 904581027
                                                                                 - ((2 * v90) & 0x942A60BA));
  unsigned int v152 = a36 ^ v148 ^ *(_DWORD *)(v92 + 4 * v143) ^ *(_DWORD *)(v101 + 4 * (HIBYTE(v146) ^ 0x68)) ^ *(_DWORD *)(v91 + 4 * (v147 ^ 0x6Du)) ^ v150;
  LODWORD(v68) = ((unsigned __int16)(WORD2(a37) ^ *(_WORD *)(v91 + 4 * (BYTE1(v144) ^ 0x75u)) ^ (v68 + 13974 - ((2 * v68) & 0x6D2C))) >> 8) ^ 0x9D;
  LODWORD(v90) = (v68 - 1395247466 + (~(2 * ((v151 >> 8) ^ 0xC2489D)) | 0xFFFFFED3) + 1) ^ *(_DWORD *)(v91 + 4 * (v68 ^ 0x6D));
  unsigned int v153 = *(_DWORD *)&v95[4 * (BYTE2(v88) ^ 0x8F)];
  unsigned int v154 = v87 ^ 0xCFB8D782;
  int v155 = *(_DWORD *)&v95[4 * ((v87 ^ 0xCFB8D782) >> 16)];
  HIDWORD(v98) = v155 ^ 0x38E;
  LODWORD(v98) = v155 ^ 0x63082000;
  LODWORD(v90) = *(_DWORD *)(v92 + 4 * (v152 ^ 0x3Du)) ^ (v153 << 20) ^ (v153 >> 12) ^ 0x38E63082 ^ (v90 + 463208426 - ((2 * v90) & 0x3737FFD4));
  LODWORD(v68) = ((v98 >> 12) + 463208426 - ((2 * (v98 >> 12)) & 0x3737FFD4)) ^ *(_DWORD *)(v92
                                                                                          + 4
                                                                                          * ((v151 ^ BYTE1(v144)) ^ 0x3Fu));
  int v156 = v90 - 904581027 - ((2 * v90) & 0x942A60BA);
  LODWORD(v90) = v68 - 904581027 - ((2 * v68) & 0x942A60BA);
  int v157 = BYTE1(v88) ^ 0xD9;
  LODWORD(v68) = v157 - 1395247466 - ((2 * ((v88 >> 8) ^ 0xC78FD9)) & 0x12C);
  int v158 = *(_DWORD *)&v95[4 * (BYTE2(v151) ^ 0x48)];
  HIDWORD(v98) = v158 ^ 0x38E;
  LODWORD(v98) = v158 ^ 0x63082000;
  LODWORD(v87) = ((BYTE1(v152) ^ 0xAF) - 1395247466 - ((2 * ((v152 >> 8) ^ 0xCFE5AF)) & 0x12C)) ^ *(_DWORD *)(v92 + 4 * (v87 ^ 0xCCu)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v152) ^ 0xC2u)) ^ ((v98 >> 12) + 463208426 - ((2 * (v98 >> 12)) & 0x3737FFD4));
  int v159 = *(_DWORD *)&v95[4 * (BYTE2(v152) ^ 0xE5)];
  HIDWORD(v98) = v159 ^ 0x38E;
  LODWORD(v98) = v159 ^ 0x63082000;
  unsigned int v160 = HIDWORD(a35) ^ (BYTE1(v154) - 1395247466 - ((v154 >> 7) & 0x12C)) ^ *(_DWORD *)(v92
                                                                                       + 4
                                                                                       * (v88 ^ 0x50u)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v154) ^ 0x6Du)) ^ *(_DWORD *)(v101 + 4 * (HIBYTE(v151) ^ 0xC2)) ^ (v98 >> 12);
  LODWORD(v88) = a35 ^ *(_DWORD *)(v101 + 4 * (BYTE3(v88) ^ 0xC7)) ^ (v87 - 904581027 - ((2 * v87) & 0x942A60BA));
  unsigned int v161 = HIDWORD(a34) ^ *(_DWORD *)(v101 + 4 * HIBYTE(v154)) ^ v156;
  unsigned int v162 = a34 ^ v68 ^ *(_DWORD *)(v91 + 4 * (v157 ^ 0x6Du)) ^ *(_DWORD *)(v101 + 4 * (HIBYTE(v152) ^ 0xCF)) ^ v90;
  int v163 = *(_DWORD *)&v95[4 * (BYTE2(v88) ^ 0xE6)];
  HIDWORD(v98) = v163 ^ 0x38E;
  LODWORD(v98) = v163 ^ 0x63082000;
  int v164 = v98 >> 12;
  int v165 = *(_DWORD *)&v95[4 * (BYTE2(v161) ^ 0x1C)];
  unsigned int v166 = (((unsigned __int16)(v162 ^ 0xCCA2) >> 8) - 1395247466 - (((v162 ^ 0x33C8CCA2) >> 7) & 0x12C)) ^ *(_DWORD *)(v91 + 4 * (((unsigned __int16)(v162 ^ 0xCCA2) >> 8) ^ 0x6Du));
  HIDWORD(v98) = v165 ^ 0x38E;
  LODWORD(v98) = v165 ^ 0x63082000;
  LODWORD(v90) = (v98 >> 12) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v88) ^ 0xD9u)) ^ ((BYTE1(v88) ^ 0xB4)
                                                                              - 1395247466
                                                                              - 2
                                                                              * (((v88 >> 8) ^ 0x4FE6B4) & 0x9F ^ (v88 >> 8) & 9));
  LODWORD(v90) = (v90 + 463208426 - ((2 * v90) & 0x3737FFD4)) ^ *(_DWORD *)(v92 + 4 * (v160 ^ 0x5Du));
  int v167 = (v166 + 463208426 - ((2 * v166) & 0x3737FFD4)) ^ *(_DWORD *)(v92 + 4 * (v161 ^ 0x3Au));
  HIDWORD(v98) = *(_DWORD *)(v92 + 4 * (v88 ^ 0x96u)) ^ 0x1B9BFFEA;
  LODWORD(v98) = *(_DWORD *)(v92 + 4 * (v88 ^ 0x96u));
  unsigned int v168 = *(_DWORD *)(v92 + 4 * (v162 ^ 0xA2u)) ^ (((unsigned __int16)(v160 ^ 0xDB5D) >> 8)
                                                                   - 1395247466
                                                                   - (((v160 ^ 0xC8BDDB5D) >> 7) & 0x12C)) ^ *(_DWORD *)(v91 + 4 * (((unsigned __int16)(v160 ^ 0xDB5D) >> 8) ^ 0x6Du)) ^ (v164 + 463208426 - ((2 * v164) & 0x3737FFD4));
  HIDWORD(v98) = (v98 >> 29) ^ 0x6615DA09;
  LODWORD(v98) = HIDWORD(v98);
  int v169 = (v98 >> 3) - 1395247466 - ((2 * (v98 >> 3)) & 0x59AC6D2C);
  LODWORD(v68) = *(_DWORD *)&v95[4 * ((v160 ^ 0xC8BDDB5D) >> 16)];
  HIDWORD(v98) = v68 ^ 0x38E;
  LODWORD(v98) = v68 ^ 0x63082000;
  LODWORD(v68) = v98 >> 12;
  LODWORD(v87) = *(_DWORD *)&v95[4 * ((v162 ^ 0x33C8CCA2) >> 16)];
  HIDWORD(v98) = v87 ^ 0x38E;
  LODWORD(v98) = v87 ^ 0x63082000;
  unsigned int v170 = HIDWORD(a33) ^ *(_DWORD *)(v101 + 4 * (HIBYTE(v162) ^ 0x17)) ^ (v90 - 904581027 - ((2 * v90) & 0x942A60BA));
  LODWORD(v90) = v169 ^ *(_DWORD *)(v91 + 4 * (BYTE1(v161) ^ 0xD1u)) ^ (v98 >> 12);
  unsigned int v171 = *(_DWORD *)(v101 + 4 * (HIBYTE(v160) ^ 0xEC)) ^ a53 ^ (v90 - 904581027 - ((2 * v90) & 0x942A60BA));
  LODWORD(v87) = a33 ^ *(_DWORD *)(v101 + 4 * (BYTE3(v88) ^ 0x4F)) ^ v68 ^ (v167
                                                                            - 904581027
                                                                            - ((2 * v167) & 0x942A60BA));
  unsigned int v172 = HIDWORD(a32) ^ *(_DWORD *)(v101 + 4 * (HIBYTE(v161) ^ 0x1B)) ^ (v168 - 904581027 - ((2 * v168) & 0x942A60BA));
  LODWORD(v90) = *(_DWORD *)&v95[4 * (BYTE2(v172) ^ 0x7E)];
  HIDWORD(v98) = v90 ^ 0x38E;
  LODWORD(v98) = v90 ^ 0x63082000;
  LODWORD(v90) = v98 >> 12;
  LODWORD(v68) = *(_DWORD *)&v95[4 * (BYTE2(v87) ^ 1)];
  HIDWORD(v98) = v68 ^ 0x38E;
  LODWORD(v98) = v68 ^ 0x63082000;
  LODWORD(v68) = ((v98 >> 12) + 463208426 - ((2 * (v98 >> 12)) & 0x3737FFD4)) ^ *(_DWORD *)(v92
                                                                                          + 4
                                                                                          * (v170 ^ 0xC6u));
  LODWORD(v88) = ((BYTE1(v170) ^ 0x71) - 1395247466 - ((2 * ((v170 >> 8) ^ 0xF25B71)) & 0x12C)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v170) ^ 0x1Cu));
  int v173 = *(_DWORD *)&v95[4 * (BYTE2(v170) ^ 0x5B)];
  HIDWORD(v98) = v173 ^ 0x38E;
  LODWORD(v98) = v173 ^ 0x63082000;
  int v174 = v98 >> 12;
  LODWORD(v88) = (v88 - 904581027 - ((2 * v88) & 0x942A60BA)) ^ *(_DWORD *)(v101 + 4 * (BYTE3(v87) ^ 0x1F));
  unsigned int v175 = BYTE1(v161) ^ 0x73F4E0AF ^ v171;
  int v176 = *(_DWORD *)&v95[4 * BYTE2(v175)];
  HIDWORD(v98) = v176 ^ 0x38E;
  LODWORD(v98) = v176 ^ 0x63082000;
  int v177 = v98 >> 12;
  int v178 = v88 + 463208426 - ((2 * v88) & 0x3737FFD4);
  HIDWORD(v98) = v90 ^ ((BYTE1(v87) ^ 0x81) - 1395247466 - ((2 * ((v87 >> 8) ^ 0x1F0181)) & 0x12C)) ^ 0xD678EAEF ^ *(_DWORD *)(v91 + 4 * (BYTE1(v87) ^ 0xECu));
  LODWORD(v98) = HIDWORD(v98);
  LODWORD(v98) = (v98 >> 11) ^ __ROR4__(*(_DWORD *)(v101 + 4 * (HIBYTE(v170) ^ 0xF2)) ^ 0x680F6BE3, 11) ^ 0xD490839A;
  HIDWORD(v98) = v98;
  LODWORD(v87) = a32 ^ *(_DWORD *)(v92 + 4 * (v87 ^ 0xB8u)) ^ ((BYTE1(v172) ^ 0xAA)
                                                                                - 1395247466
                                                                                - ((2 * ((v172 >> 8) ^ 0x967EAA)) & 0x12C)) ^ *(_DWORD *)(v101 + 4 * (HIBYTE(v171) ^ 0x57)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v172) ^ 0xC7u)) ^ v174;
  LODWORD(v88) = HIDWORD(a31) ^ (BYTE1(v175) - 1395247466 - ((v175 >> 7) & 0x12C)) ^ *(_DWORD *)(v101
                                                                                               + 4
                                                                                               * (HIBYTE(v172) ^ 0x96)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v175) ^ 0x6Du)) ^ (v68 - 904581027 - ((2 * v68) & 0x942A60BA));
  LODWORD(v68) = a31 ^ *(_DWORD *)(v92 + 4 * (v172 ^ 0x88u)) ^ v177 ^ v178;
  unsigned int v179 = HIDWORD(a30) ^ *(_DWORD *)(v92 + 4 * (BYTE1(v161) ^ 0xAFu ^ v171)) ^ ((v98 >> 21)
                                                                                                + 463208426
                                                                                                - ((2 * (v98 >> 21)) & 0x3737FFD4));
  BYTE2(v172) = BYTE2(v68) ^ 0x4A;
  int v180 = *(_DWORD *)&v95[4 * (BYTE2(v87) ^ 0x65)];
  HIDWORD(v98) = v180 ^ 0x38E;
  LODWORD(v98) = v180 ^ 0x63082000;
  int v181 = v98 >> 12;
  unsigned int v182 = *(_DWORD *)(v91 + 4 * (BYTE1(v88) ^ 0x96u)) ^ ((BYTE1(v88) ^ 0xFB)
                                                        - 1395247466
                                                        - ((2 * ((v88 >> 8) ^ 0x3EA2FB)) & 0x12C));
  int v183 = (v182 + 463208426 - ((2 * v182) & 0x3737FFD4)) ^ *(_DWORD *)(v92 + 4 * (v68 ^ 0x75u));
  int v184 = *(_DWORD *)&v95[4 * (BYTE2(v88) ^ 0xA2)];
  HIDWORD(v98) = v184 ^ 0x38E;
  LODWORD(v98) = v184 ^ 0x63082000;
  LODWORD(v90) = (((unsigned __int16)(v68 ^ 0xF075) >> 8)
                - 1395247466
                - (((v68 ^ 0xB54AF075) >> 7) & 0x12C)) ^ (v98 >> 12) ^ *(_DWORD *)(v91
                                                                                               + 4
                                                                                               * (((unsigned __int16)(v68 ^ 0xF075) >> 8) ^ 0x6Du));
  LODWORD(v68) = *(_DWORD *)(v101 + 4 * (BYTE3(v68) ^ 0x91));
  int v185 = *(_DWORD *)(v101 + 4 * (BYTE3(v88) ^ 0x3E));
  int v186 = *(_DWORD *)(v101 + 4 * (BYTE3(v87) ^ 0x16));
  LODWORD(v90) = (v90 - 904581027 - ((2 * v90) & 0x942A60BA)) ^ *(_DWORD *)(v101 + 4 * (HIBYTE(v179) ^ 0xED));
  v179 ^= 0xC9AF1D8F;
  int v187 = BYTE1(v179);
  int v188 = BYTE1(v179) - 1395247466 - ((v179 >> 7) & 0x12C);
  LODWORD(v101) = *(_DWORD *)(v92 + 4 * v179);
  unsigned int v189 = *(_DWORD *)&v95[4 * BYTE2(v179)];
  int v190 = *(_DWORD *)&v95[4 * BYTE2(v172)];
  HIDWORD(v98) = v190 ^ 0x38E;
  LODWORD(v98) = v190 ^ 0x63082000;
  unsigned int v191 = a30 ^ *(_DWORD *)(v92 + 4 * (v88 ^ 0x9Au)) ^ v181 ^ v68 ^ v188 ^ *(_DWORD *)(v91 + 4 * (v187 ^ 0x6Du));
  LODWORD(v88) = HIDWORD(a29) ^ ((BYTE1(v87) ^ 0xF) - 1395247466 - ((2 * ((v87 >> 8) ^ 0x16650F)) & 0x12C)) ^ v185 ^ *(_DWORD *)(v91 + 4 * (BYTE1(v87) ^ 0x62u)) ^ v101 ^ (v98 >> 12);
  LODWORD(v95) = a29 ^ *(_DWORD *)(v92 + 4 * (v87 ^ 0xD8u)) ^ (v90
                                                                                + 463208426
                                                                                - ((2 * v90) & 0x3737FFD4));
  unsigned int v192 = HIDWORD(a28) ^ v186 ^ (v189 >> 12) ^ (v189 << 20) ^ (v183 - 904581027 - ((2 * v183) & 0x942A60BA));
  int v193 = *(_DWORD *)(v58 - 120);
  int v194 = (char *)*(&off_10026C690 + v193 - 961) - 12;
  uint64_t v195 = (char *)*(&off_10026C690 + SHIDWORD(a25)) - 12;
  unsigned int v196 = *(_DWORD *)&v194[4 * (v95 ^ 7)] ^ *(_DWORD *)&v195[4
                                                                           * (((unsigned __int16)(WORD2(a28) ^ v186 ^ (v189 >> 12) ^ (v183 + 12381 - ((2 * v183) & 0x60BA))) >> 8) ^ 0x13)] ^ 0x8FBBF48E;
  LODWORD(v92) = *(_DWORD *)&v195[4 * (BYTE1(v191) ^ 0xBE)];
  int v197 = *(_DWORD *)&v195[4 * ((unsigned __int16)((unsigned __int16)v95 ^ 0x6F07) >> 8)];
  LODWORD(v87) = *(_DWORD *)&v195[4 * (BYTE1(v88) ^ 0x17)];
  LODWORD(v195) = v196 - 324413455 - ((2 * v196) & 0xD953AFE2);
  unsigned int v198 = (char *)*(&off_10026C690 + v193 - 967) - 8;
  uint64_t v199 = *(unsigned int *)&v198[4 * ((v95 >> 24) ^ 0xEF)];
  int v200 = *(_DWORD *)&v198[4 * (BYTE3(v88) ^ 0x52)];
  LODWORD(v101) = *(_DWORD *)&v198[4 * (HIBYTE(v192) ^ 0xA5)];
  LODWORD(v198) = *(_DWORD *)&v198[4 * (HIBYTE(v191) ^ 0xE0)];
  LODWORD(v195) = v200 ^ v195;
  int v201 = (char *)*(&off_10026C690 + (int)a25) - 8;
  int v202 = *(_DWORD *)&v201[4 * (BYTE2(v192) ^ 0x5A)];
  uint64_t v203 = *(unsigned int *)&v201[4 * (BYTE2(v95) ^ 0x2A)];
  LODWORD(v95) = *(_DWORD *)&v201[4 * (BYTE2(v88) ^ 0x5E)];
  LODWORD(v195) = *(_DWORD *)&v201[4 * (BYTE2(v191) ^ 5)] ^ (v195
                                                           + 1642847319
                                                           - ((2 * v195) & 0xC3D7B8AE));
  LODWORD(v201) = *(_DWORD *)&v194[4 * (v191 ^ 0x6B)];
  LODWORD(v88) = *(_DWORD *)&v194[4 * (v88 ^ 0x42)];
  int v204 = *(_DWORD *)&v194[4 * (v192 ^ 0x59)];
  unsigned int v205 = *(_DWORD *)(v58 - 140) ^ a51 ^ (v195 - ((2 * v195) & 0xFFF5E576) - 331077);
  uint64_t v206 = (uint64_t)*(&off_10026C690 + v193 - 904);
  *(unsigned char *)(a54 + v218) = *(unsigned char *)(v206 + (HIBYTE(v205) ^ 0xD7)) ^ 0x36;
  LODWORD(v195) = ((v202 ^ 0xF6F42E9D ^ v197) - 324413455 - ((2 * (v202 ^ 0xF6F42E9D ^ v197)) & 0xD953AFE2)) ^ v198;
  LODWORD(v195) = (v195 + 413402692 - ((2 * v195) & 0x31480C88)) ^ v88;
  LODWORD(v195) = *(_DWORD *)(v58 - 136) ^ HIDWORD(a51) ^ (v195 - ((2 * v195) & 0xD8BACFC6) + 1818060771);
  uint64_t v207 = (uint64_t)*(&off_10026C690 + v193 - 1004);
  *(unsigned char *)(a54 + *(void *)(v58 - 232)) = (*(unsigned char *)(v207 + (v195 ^ 0xC7)) - 125) ^ 0x5F;
  uint64_t v208 = (uint64_t)*(&off_10026C690 + v193 - 943);
  LODWORD(v198) = *(unsigned __int8 *)(v208 + (BYTE1(v195) ^ 0x13));
  HIDWORD(v98) = v198 ^ 0x1F;
  LODWORD(v98) = v198 << 24;
  *(unsigned char *)(a54 + v216) = (v98 >> 30) ^ 0x40;
  int v209 = v203 ^ v201 ^ 0x794FDA13;
  LODWORD(v198) = (v203 ^ v201) & 4;
  uint64_t v210 = v209 & 0x6CA9D7F5;
  LODWORD(v198) = (v209 - 324413455 - 2 * (v210 ^ v198)) ^ v101;
  LODWORD(v198) = (v198 - ((2 * v198) & 0x2E3FE594) - 1759513910) ^ v87;
  LODWORD(v87) = *(_DWORD *)(v58 - 132) ^ HIDWORD(a52) ^ (v198 - ((2 * v198) & 0x77B8CE1A) - 1143183603);
  LODWORD(v198) = *(unsigned __int8 *)(v208
                                     + ((unsigned __int16)(*(_WORD *)(v58 - 132) ^ WORD2(a52) ^ ((_WORD)v198 - ((2 * (_WORD)v198) & 0xCE1A) + 26381)) >> 8));
  HIDWORD(v98) = v198 ^ 0x1F;
  LODWORD(v98) = v198 << 24;
  *(unsigned char *)(a54 + *(void *)(v58 - 216)) = (v98 >> 30) ^ 0x7E;
  uint64_t v211 = (uint64_t)*(&off_10026C690 + SHIDWORD(a24));
  *(unsigned char *)(a54 + v217) = *(unsigned char *)(v211 + (BYTE2(v205) ^ 0xFBLL)) ^ 0xCB;
  LODWORD(v198) = ((v92 ^ 0x7BB6253B ^ v199) + 1642847319 - ((2 * (v92 ^ 0x7BB6253B ^ v199)) & 0xC3D7B8AE)) ^ v95;
  LODWORD(v198) = v204 ^ (v198 + 413402692 - ((2 * v198) & 0x31480C88));
  LODWORD(v198) = *(_DWORD *)(v58 - 128) ^ a52 ^ (v198 - ((2 * v198) & 0xAE36E03E) - 686067681);
  *(unsigned char *)(a54 + *(void *)(v58 - 176)) = *(unsigned char *)(v211 + (BYTE2(v198) ^ 0xB8)) ^ 0x18;
  *(unsigned char *)(a54 + *(void *)(v58 - 256)) = (*(unsigned char *)(v207 + (v205 ^ 0x1BLL)) - 125) ^ 0x7D;
  *(unsigned char *)(a54 + *(void *)(v58 - 240)) = *(unsigned char *)(v211 + (BYTE2(v195) ^ 3)) ^ 0x66;
  *(unsigned char *)(a54 + *(void *)(v58 - 192)) = *(unsigned char *)(v206 + ((v195 >> 24) ^ 0x6DLL)) ^ 0xCE;
  LODWORD(v195) = *(unsigned __int8 *)(v208 + (BYTE1(v205) ^ 0x92));
  HIDWORD(v98) = v195 ^ 0x1F;
  LODWORD(v98) = v195 << 24;
  *(unsigned char *)(a54 + *(void *)(v58 - 160)) = (v98 >> 30) ^ 0xD2;
  uint64_t v212 = *(void *)(v58 - 208);
  *(unsigned char *)(a54 + v212) = *(unsigned char *)(v206 + (BYTE3(v87) ^ 0x53)) ^ 0x22;
  *(unsigned char *)(a54 + *(void *)(v58 - 184)) = (*(unsigned char *)(v207 + (v87 ^ 0x95)) - 125) ^ 0xAF;
  *(unsigned char *)(a54 + *(void *)(v58 - 248)) = (*(unsigned char *)(v207 + (v198 ^ 0x64)) - 125) ^ 0x27;
  *(unsigned char *)(a54 + *(void *)(v58 - 168)) = *(unsigned char *)(v206 + ((v198 >> 24) ^ 0x6ELL)) ^ 0xB4;
  LODWORD(v195) = *(unsigned __int8 *)(v208 + (BYTE1(v198) ^ 0x1FLL));
  HIDWORD(v98) = v195 ^ 0x1F;
  LODWORD(v98) = v195 << 24;
  *(unsigned char *)(a54 + *(void *)(v58 - 200)) = (v98 >> 30) ^ 0x58;
  *(unsigned char *)(a54 + *(void *)(v58 - 152)) = *(unsigned char *)(v211 + (BYTE2(v87) ^ 0xC8)) ^ 0x49;
  return (*(uint64_t (**)(_UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a56 + 8 * ((2769 * (((v212 + 2003156845 - 2 * ((v212 + 16) & *(_DWORD *)(v58 - 220) ^ v56 & 2)) ^ 0x7765BF5Du) < a28)) ^ (v193 - 504))))(&off_10026C690, 109, v210, 1642847319, v199, v203, 826805384, 2485805242, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_1000B0F20(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((240
                                * (((v3 + v4 + 463 - 828) & (2 * (**(unsigned __int8 **)(a2 + 8) - 42)))
                                 + ((**(unsigned __int8 **)(a2 + 8) - 42) ^ v2) != ((7 * (v4 ^ 0x156)) ^ (v2 - 413)))) ^ v4)))();
}

uint64_t sub_1000B0F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = LOBYTE(STACK[0x2F0]) ^ 0x89;
  if (v5 == 1)
  {
    unsigned int v11 = STACK[0x2D4];
    unsigned int v12 = STACK[0x2D0];
    LOBYTE(STACK[0x2C8]) = ((8 * LOBYTE(STACK[0x2D4])) ^ 0x70)
                         - (((v4 ^ 0xA2) - 4) & (2 * ((8 * LOBYTE(STACK[0x2D4])) ^ 0x70)))
                         + 119;
    LOBYTE(STACK[0x2C9]) = ((v11 >> 5) ^ 0xCD) - ((2 * ((v11 >> 5) ^ 0xCD)) & 0xEF) + 119;
    LOBYTE(STACK[0x2CA]) = ((v11 >> 13) ^ 0x53) - ((2 * ((v11 >> 13) ^ 0x53)) & 0xEF) + 119;
    LOBYTE(STACK[0x2CB]) = ((v11 >> 21) ^ 0x65) - ((2 * ((v11 >> 21) ^ 0x65)) & 0xEF) + 119;
    HIDWORD(v13) = v12 ^ 6;
    LODWORD(v13) = v11 ^ 0x60000000;
    LOBYTE(STACK[0x2CC]) = (v13 >> 29) - ((2 * (v13 >> 29)) & 0xEF) + 119;
    LOBYTE(STACK[0x2CD]) = ((v12 >> 5) ^ 0x1B) - ((2 * ((v12 >> 5) ^ 0x1B)) & 0xEF) + 119;
    LOBYTE(STACK[0x2CE]) = ((v12 >> 13) ^ 0xA8) - ((2 * ((v12 >> 13) ^ 0xA8)) & 0xEF) + 119;
    int v10 = ((v12 >> 20) | 0x11) - (v12 >> 21) + 119;
    goto LABEL_5;
  }
  if (v5 == 2)
  {
    unsigned int v6 = STACK[0x2D0];
    unsigned int v7 = STACK[0x2D4];
    LOBYTE(STACK[0x2C8]) = ((LODWORD(STACK[0x2D0]) >> 20) | 0x11) - (LODWORD(STACK[0x2D0]) >> 21) + 119;
    unsigned int v8 = (v6 >> (-71 * (v4 ^ 0x42) + 41)) ^ 0xFFFFFFA8;
    LOBYTE(STACK[0x2C9]) = v8 - ((2 * v8) & 0xEF) + 119;
    LOBYTE(STACK[0x2CA]) = ((v6 >> 5) ^ 0x1B) - ((2 * ((v6 >> 5) ^ 0x1B)) & 0xEF) + 119;
    HIDWORD(v9) = v6 ^ 6;
    LODWORD(v9) = v7 ^ 0x60000000;
    LOBYTE(STACK[0x2CB]) = (v9 >> 29) - ((2 * (v9 >> 29)) & 0xEF) + 119;
    LOBYTE(STACK[0x2CC]) = ((v7 >> 21) ^ 0x65) - ((2 * ((v7 >> 21) ^ 0x65)) & 0xEF) + 119;
    LOBYTE(STACK[0x2CD]) = ((v7 >> 13) ^ 0x53) + (~(2 * ((v7 >> 13) ^ 0x53)) | 0x11) + 120;
    LOBYTE(STACK[0x2CE]) = ((v7 >> 5) ^ 0xCD) - ((2 * ((v7 >> 5) ^ 0xCD)) & 0xEF) + 119;
    int v10 = ((8 * v7) ^ 0x70) - 32 * (((8 * v7) ^ 0x70) >> 4) + 119;
LABEL_5:
    LOBYTE(STACK[0x2CF]) = v10;
  }
  return sub_1000AC4B0(a1, a2, a3, a4);
}

uint64_t sub_1000B1198(uint64_t a1, int a2, int a3, int a4)
{
  int v9 = v5 + v4;
  int v10 = v9 + v6;
  if ((v9 + v6) <= 0x40) {
    int v10 = a2;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((13 * (a4 - v9 + ((v7 - 1726) ^ 0x1EF) - 156 >= a3 + v10)) ^ v7)))();
}

uint64_t sub_1000B11E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((*(_DWORD *)(*(void *)(a1 + 8) + v4) == v2)
                                     * (((v3 + 1994589504) & 0x891CF72D) - 701)) ^ v3)))();
}

uint64_t sub_1000B1228(uint64_t a1, uint64_t a2, char a3)
{
  BOOL v10 = (((*(unsigned __int8 *)(a2 + 9) - 1) << (a3 + v6 + 71 + 56)) & v8) + ((*(unsigned __int8 *)(a2 + 9) - 1) ^ v7) == v7
     && (v3 + v4 + 4) < 0xC9;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1448 * v10) ^ v6)))();
}

uint64_t sub_1000B1294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (v7 ^ (117 * ((unint64_t)(a6 - v8 - 1167) < 0x20)))))();
}

uint64_t sub_1000B1318()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((56 * (v0 < ((LODWORD(STACK[0x2D4]) - 557) | 0xD4u) - 1187356055)) ^ (LODWORD(STACK[0x2D4]) - 345))))();
}

void sub_1000B135C(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, int a5)
{
  *uint64_t v5 = (a2 + a1 + 792) ^ (v6 + 793) ^ a5;
  JUMPOUT(0x1000B1378);
}

uint64_t sub_1000B13E0()
{
  uint64_t v8 = v6;
  unsigned int v7 = (v4 - 946) ^ ((((&v7 | 0xB5CD1467) - (&v7 & 0xB5CD1467)) ^ 0x666F466D) * v0);
  (*(void (**)(unsigned int *))(v2 + 8 * (v4 ^ 0xD78)))(&v7);
  return v3 ^ v1;
}

uint64_t sub_1000B147C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  int8x16x4_t v38 = vld4q_s8(a5);
  uint8x16_t v30 = (uint8x16_t)veorq_s8(v38.val[2], v29);
  _Q21 = vmovl_high_u8(v30);
  _Q20 = vmovl_u8(*(uint8x8_t *)v30.i8);
  __asm
  {
    SHLL2           V20.4S, V20.8H, #0x10
    SHLL2           V21.4S, V21.8H, #0x10
  }
  return sub_1000B15A0(a1, (a29 - 1241));
}

void sub_1000B15A0()
{
}

unsigned char *sub_1000B16AC(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      *uint64_t result = a2;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1000B1798()
{
  LODWORD(STACK[0x4AC]) = v0 - 135;
  JUMPOUT(0x100071A9CLL);
}

uint64_t DERDecodeItem(uint64_t a1, unint64_t *a2)
{
  return DERDecodeItemPartialBufferGetLength(a1, a2, 0);
}

uint64_t DERDecodeItemPartialBufferGetLength(uint64_t result, unint64_t *a2, unint64_t *a3)
{
  unint64_t v3 = *(void *)(result + 8);
  if (v3 < 2) {
    return 3;
  }
  unint64_t v4 = *(unsigned char **)result;
  if (*(void *)result == -1) {
    goto LABEL_68;
  }
  uint64_t v5 = &v4[v3];
  unint64_t v6 = v4 + 1;
  unint64_t v7 = v3 - 1;
  unint64_t v8 = *v4 & 0x1F;
  if ((*v4 & 0x1F) != 0x1F)
  {
    unsigned int v12 = v4 + 1;
LABEL_20:
    *a2 = v8 | ((unint64_t)(*v4 & 0xE0) << 56);
    if (v12 != (char *)-1)
    {
      if (v12 >= v5 || v12 < v4) {
        goto LABEL_69;
      }
      long long v14 = v12 + 1;
      unint64_t v15 = *v12;
      unint64_t v16 = v7 - 1;
      if ((*v12 & 0x80000000) == 0)
      {
        if (a3 || v16 >= v15)
        {
          if (v16 >= v15) {
            unint64_t v17 = *v12;
          }
          else {
            unint64_t v17 = v7 - 1;
          }
          BOOL v10 = v5 >= v14;
          unint64_t v18 = v5 - v14;
          if (v10 && v4 <= v14 && v17 <= v18)
          {
            a2[1] = (unint64_t)v14;
            a2[2] = v17;
            if (!a3) {
              return 0;
            }
LABEL_34:
            uint64_t result = 0;
            *a3 = v15;
            return result;
          }
LABEL_69:
          __break(0x5519u);
LABEL_70:
          __break(0x5515u);
          return result;
        }
        return 3;
      }
      unint64_t v19 = v15 & 0x7F;
      if ((v15 & 0x7F) > 8) {
        return 3;
      }
      if ((v15 & 0x7F) == 0 || v16 < v19) {
        return 3;
      }
      if (v14 >= v5 || v14 < v4) {
        goto LABEL_69;
      }
      if (!*v14) {
        return 3;
      }
      unint64_t v15 = 0;
      uint64_t v21 = (v19 - 1);
      unint64_t v22 = v7 - v21 - 2;
      unint64_t v23 = (unint64_t)&v12[v21 + 2];
      while (v14 != (unsigned char *)-1)
      {
        if (v14 >= v5) {
          goto LABEL_69;
        }
        BOOL v10 = v16-- != 0;
        if (!v10) {
          goto LABEL_70;
        }
        unsigned int v24 = *v14++;
        unint64_t v15 = (v15 << 8) | v24;
        LODWORD(v19) = v19 - 1;
        if (!v19)
        {
          if (a3) {
            BOOL v25 = 0;
          }
          else {
            BOOL v25 = v15 > v22;
          }
          char v26 = v25;
          uint64_t result = 3;
          if (v15 < 0x80 || (v26 & 1) != 0) {
            return result;
          }
          if (v15 >= v22) {
            unint64_t v27 = v22;
          }
          else {
            unint64_t v27 = v15;
          }
          BOOL v10 = (unint64_t)v5 >= v23;
          unint64_t v28 = &v5[-v23];
          if (!v10 || (unint64_t)v4 > v23 || v27 > (unint64_t)v28) {
            goto LABEL_69;
          }
          a2[1] = v23;
          a2[2] = v27;
          if (a3) {
            goto LABEL_34;
          }
          return 0;
        }
      }
    }
LABEL_68:
    __break(0x5513u);
    goto LABEL_69;
  }
  unsigned int v9 = *v6;
  BOOL v10 = v9 != 128 && v9 >= 0x1F;
  if (!v10) {
    return 3;
  }
  unint64_t v8 = 0;
  uint64_t result = 3;
  while (v7 >= 2)
  {
    unint64_t v11 = v8;
    if (v8 >> 57) {
      break;
    }
    if (v6 == (unsigned __int8 *)-1) {
      goto LABEL_68;
    }
    if (v6 >= v5 || v6 < v4) {
      goto LABEL_69;
    }
    unsigned int v12 = (char *)(v6 + 1);
    --v7;
    unsigned __int8 v13 = *v6;
    unint64_t v8 = *v6++ & 0x7F | (v8 << 7);
    if ((v13 & 0x80) == 0)
    {
      if (v11 >> 54) {
        return 3;
      }
      goto LABEL_20;
    }
  }
  return result;
}

uint64_t DERDecodeItemPartialBuffer(uint64_t result, unint64_t *a2, int a3)
{
  unint64_t v3 = *(void *)(result + 8);
  if (v3 < 2) {
    return 3;
  }
  unint64_t v4 = *(unsigned char **)result;
  if (*(void *)result == -1) {
    goto LABEL_54;
  }
  uint64_t v5 = &v4[v3];
  unint64_t v6 = v4 + 1;
  unint64_t v7 = v3 - 1;
  unint64_t v8 = *v4 & 0x1F;
  if ((*v4 & 0x1F) != 0x1F)
  {
    unsigned int v12 = v4 + 1;
LABEL_20:
    *a2 = v8 | ((unint64_t)(*v4 & 0xE0) << 56);
    if (v12 != (char *)-1)
    {
      if (v12 >= v5 || v12 < v4) {
        goto LABEL_55;
      }
      long long v14 = v12 + 1;
      unint64_t v15 = *v12;
      unint64_t v16 = v7 - 1;
      if ((*v12 & 0x80000000) == 0)
      {
        BOOL v17 = v16 < v15 && a3 == 0;
        unint64_t v18 = (unint64_t)(v12 + 1);
        if (v17) {
          return 3;
        }
LABEL_28:
        if (v15 > (~v18 & 0x7FFFFFFFFFFFFFFFLL)) {
          return 7;
        }
        if (v18 <= v18 + v15)
        {
          uint64_t result = 0;
          a2[1] = v18;
          a2[2] = v15;
          return result;
        }
        goto LABEL_55;
      }
      unint64_t v19 = v15 & 0x7F;
      if ((v15 & 0x7F) > 8) {
        return 3;
      }
      if ((v15 & 0x7F) == 0 || v16 < v19) {
        return 3;
      }
      if (v14 >= v5 || v14 < v4)
      {
LABEL_55:
        __break(0x5519u);
LABEL_56:
        __break(0x5515u);
        return result;
      }
      if (!*v14) {
        return 3;
      }
      unint64_t v15 = 0;
      uint64_t v21 = (v19 - 1);
      unint64_t v22 = v7 - v21 - 2;
      unint64_t v18 = (unint64_t)&v12[v21 + 2];
      while (v14 != (unsigned char *)-1)
      {
        if (v14 >= v5) {
          goto LABEL_55;
        }
        BOOL v10 = v16-- != 0;
        if (!v10) {
          goto LABEL_56;
        }
        unsigned int v23 = *v14++;
        unint64_t v15 = (v15 << 8) | v23;
        LODWORD(v19) = v19 - 1;
        if (!v19)
        {
          if (v15 <= v22) {
            char v24 = 1;
          }
          else {
            char v24 = a3;
          }
          uint64_t result = 3;
          if (v15 >= 0x80 && (v24 & 1) != 0) {
            goto LABEL_28;
          }
          return result;
        }
      }
    }
LABEL_54:
    __break(0x5513u);
    goto LABEL_55;
  }
  unsigned int v9 = *v6;
  BOOL v10 = v9 != 128 && v9 >= 0x1F;
  if (!v10) {
    return 3;
  }
  unint64_t v8 = 0;
  uint64_t result = 3;
  while (v7 >= 2)
  {
    unint64_t v11 = v8;
    if (v8 >> 57) {
      break;
    }
    if (v6 == (unsigned __int8 *)-1) {
      goto LABEL_54;
    }
    if (v6 >= v5 || v6 < v4) {
      goto LABEL_55;
    }
    unsigned int v12 = (char *)(v6 + 1);
    --v7;
    unsigned __int8 v13 = *v6;
    unint64_t v8 = *v6++ & 0x7F | (v8 << 7);
    if ((v13 & 0x80) == 0)
    {
      if (v11 >> 54) {
        return 3;
      }
      goto LABEL_20;
    }
  }
  return result;
}

uint64_t DERParseBitString(uint64_t result, unint64_t *a2, unsigned char *a3)
{
  *a3 = 0;
  *a2 = 0;
  a2[1] = 0;
  if (!*(void *)(result + 8)) {
    return 3;
  }
  unsigned int v3 = **(unsigned __int8 **)result;
  *a3 = v3;
  uint64_t v4 = *(void *)(result + 8);
  if (v4 != 1)
  {
    if (v3 <= 7)
    {
      unint64_t v5 = v4 - 1;
      if (!v4)
      {
LABEL_20:
        __break(0x5515u);
        goto LABEL_21;
      }
      unint64_t v6 = *(void *)result;
      unint64_t v7 = *(void *)result + v4;
      unint64_t v8 = (unsigned __int8 *)(*(void *)result + v5);
      if ((unint64_t)v8 >= v7 || (unint64_t)v8 < v6)
      {
LABEL_19:
        __break(0x5519u);
        goto LABEL_20;
      }
      if (((0xFFu >> (8 - v3)) & *v8) == 0)
      {
        if (v6 == -1)
        {
LABEL_21:
          __break(0x5513u);
          return result;
        }
        unint64_t v10 = v6 + 1;
        if (v6 + 1 <= v7 && v6 <= v10)
        {
          uint64_t result = 0;
          *a2 = v10;
          a2[1] = v5;
          return result;
        }
        goto LABEL_19;
      }
    }
    return 3;
  }
  if (v3) {
    return 3;
  }
  else {
    return 0;
  }
}

uint64_t DERParseBoolean(unsigned __int8 **a1, BOOL *a2)
{
  if (a1[1] != (unsigned __int8 *)1) {
    return 3;
  }
  int v2 = **a1;
  if (v2 != 255 && v2 != 0) {
    return 3;
  }
  uint64_t result = 0;
  *a2 = v2 != 0;
  return result;
}

uint64_t DERParseBooleanWithDefault(unsigned __int8 **a1, BOOL a2, BOOL *a3)
{
  unsigned int v3 = a1[1];
  if (!v3) {
    goto LABEL_9;
  }
  if (v3 == (unsigned __int8 *)1)
  {
    int v4 = **a1;
    if (v4 == 255 || v4 == 0)
    {
      a2 = v4 != 0;
LABEL_9:
      uint64_t result = 0;
      *a3 = a2;
      return result;
    }
  }
  return 3;
}

uint64_t DERParseInteger(char **a1, _DWORD *a2)
{
  unint64_t v4 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t result = DERParseInteger64(a1, &v4);
  if (!result)
  {
    if (HIDWORD(v4))
    {
      return 7;
    }
    else
    {
      uint64_t result = 0;
      *a2 = v4;
    }
  }
  return result;
}

uint64_t DERParseInteger64(char **a1, unint64_t *a2)
{
  unint64_t v2 = (unint64_t)a1[1];
  if (!v2) {
    return 3;
  }
  unsigned int v3 = (unsigned __int8 *)*a1;
  if (**a1 < 0) {
    return 3;
  }
  if (**a1)
  {
    if (v2 > 8) {
      return 7;
    }
    goto LABEL_10;
  }
  if (v2 >= 2)
  {
    if (((char)v3[1] & 0x80000000) == 0) {
      return 3;
    }
    if (v2 > 9) {
      return 7;
    }
  }
LABEL_10:
  unint64_t v5 = 0;
  do
  {
    unsigned int v6 = *v3++;
    unint64_t v5 = v6 | (v5 << 8);
    --v2;
  }
  while (v2);
  uint64_t result = 0;
  *a2 = v5;
  return result;
}

uint64_t DERDecodeSeqInit(uint64_t a1, void *a2, void *a3)
{
  memset(v8, 170, sizeof(v8));
  uint64_t result = DERDecodeItemPartialBufferGetLength(a1, v8, 0);
  if (!result)
  {
    unint64_t v6 = v8[0];
    *a2 = v8[0];
    if (v6 >> 1 == 0x1000000000000008)
    {
      if (__CFADD__(v8[1], v8[2]))
      {
        __break(0x5513u);
      }
      else
      {
        unint64_t v7 = v8[1] + v8[2];
        if (v8[1] <= v8[1] + v8[2])
        {
          uint64_t result = 0;
          *a3 = v8[1];
          a3[1] = v7;
          return result;
        }
      }
      __break(0x5519u);
    }
    else
    {
      return 2;
    }
  }
  return result;
}

unint64_t *DERDecodeSeqContentInit(unint64_t *result, unint64_t *a2)
{
  unint64_t v2 = *result;
  unint64_t v3 = result[1];
  if (__CFADD__(*result, v3))
  {
    __break(0x5513u);
  }
  else
  {
    unint64_t v4 = v2 + v3;
    if (v2 <= v4)
    {
      *a2 = v2;
      a2[1] = v4;
      return 0;
    }
  }
  __break(0x5519u);
  return result;
}

uint64_t DERDecodeSeqNext(unint64_t *a1, unint64_t *a2)
{
  v10[0] = 0;
  unint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  if (*a1 >= v3) {
    return 1;
  }
  v10[0] = *a1;
  v10[1] = v3 - v2;
  uint64_t result = DERDecodeItemPartialBufferGetLength((uint64_t)v10, a2, 0);
  if (!result)
  {
    unint64_t v8 = a2[1];
    unint64_t v7 = a2[2];
    if (!__CFADD__(v8, v7))
    {
      unint64_t v9 = v8 + v7;
      if (v9 <= a1[1] && *a1 <= v9)
      {
        uint64_t result = 0;
        *a1 = v9;
        return result;
      }
      __break(0x5519u);
    }
    __break(0x5513u);
  }
  return result;
}

uint64_t DERParseSequenceToObject(uint64_t a1, unsigned int a2, uint64_t a3, unint64_t a4, unint64_t a5, size_t a6)
{
  memset(v12, 170, sizeof(v12));
  uint64_t result = DERDecodeItemPartialBufferGetLength(a1, v12, 0);
  if (!result)
  {
    if (v12[0] == 0x2000000000000010) {
      return DERParseSequenceContentToObject(&v12[1], a2, a3, a4, a5, a6);
    }
    else {
      return 2;
    }
  }
  return result;
}

uint64_t DERParseSequenceContentToObject(unint64_t *a1, unsigned int a2, uint64_t a3, unint64_t a4, unint64_t a5, size_t a6)
{
  unint64_t v32 = 0;
  if (a6)
  {
    if (a6 > a5) {
      goto LABEL_59;
    }
    bzero((void *)a4, a6);
  }
  unint64_t v10 = *a1;
  unint64_t v11 = a1[1];
  if (__CFADD__(*a1, v11)) {
    goto LABEL_58;
  }
  unint64_t v12 = v10 + v11;
  if (v10 > v12) {
LABEL_59:
  }
    __break(0x5519u);
  unint64_t v32 = *a1;
  unint64_t v33 = v12;
  if (a2)
  {
    unsigned __int16 v13 = 0;
    int8x16_t v29 = (char *)(a4 + a5);
    while (1)
    {
      memset(v31, 170, sizeof(v31));
      unint64_t v15 = v32;
      unint64_t v14 = v33;
      uint64_t result = DERDecodeSeqNext(&v32, v31);
      if (result) {
        break;
      }
      if (a2 <= v13) {
        return 2;
      }
      while (1)
      {
        if (24 * (__int16)v13 > (unint64_t)~a3) {
          goto LABEL_58;
        }
        unsigned __int16 v17 = v13;
        __int16 v18 = *(_WORD *)(a3 + 24 * v13 + 16);
        if ((v18 & 2) != 0 || v31[0] == *(void *)(a3 + 24 * v13 + 8)) {
          break;
        }
        uint64_t result = 2;
        if (v18)
        {
          ++v13;
          if (a2 > (unsigned __int16)(v17 + 1)) {
            continue;
          }
        }
        return result;
      }
      if ((v18 & 4) == 0)
      {
        unint64_t v19 = *(void *)(a3 + 24 * v13);
        if (v19 > 0xFFFFFFFFFFFFFFEFLL || v19 + 16 > a5) {
          return 7;
        }
        if (v19 > ~a4) {
          goto LABEL_58;
        }
        uint64_t v21 = (char *)(a4 + v19);
        if (v21 >= v29 || (unint64_t)v21 < a4) {
          goto LABEL_59;
        }
        *(_OWORD *)uint64_t v21 = *(_OWORD *)&v31[1];
        if ((v18 & 8) != 0)
        {
          if (v15 >= v31[1])
          {
            if (v21 + 16 <= v29 && v14 >= v15 && *((void *)v21 + 1) <= v14 - v15)
            {
              *(void *)uint64_t v21 = v15;
              return 3;
            }
            goto LABEL_59;
          }
          if (v21 + 16 > v29) {
            goto LABEL_59;
          }
          uint64_t v23 = *((void *)v21 + 1);
          unint64_t v24 = v23 + v31[1] - v15;
          if (__CFADD__(v23, v31[1] - v15))
          {
            __break(0x5500u);
            return result;
          }
          if (v14 < v15 || v24 > v14 - v15) {
            goto LABEL_59;
          }
          *(void *)uint64_t v21 = v15;
          *((void *)v21 + 1) = v24;
        }
      }
      ++v13;
      if (a2 == (unsigned __int16)(v17 + 1))
      {
        if (!__CFADD__(v31[1], v31[2]))
        {
          unint64_t v28 = a1[1];
          if (!__CFADD__(*a1, v28))
          {
            unint64_t v10 = v31[1] + v31[2];
            unint64_t v12 = *a1 + v28;
            goto LABEL_47;
          }
        }
LABEL_58:
        __break(0x5513u);
        goto LABEL_59;
      }
      if (a2 <= (unsigned __int16)(v17 + 1))
      {
        unint64_t v10 = v32;
        unint64_t v12 = v33;
        goto LABEL_47;
      }
    }
    if (result == 1)
    {
      if (a2 <= v13)
      {
        return 0;
      }
      else
      {
        BOOL v25 = (__int16 *)(a3 + 24 * v13 + 16);
        unint64_t v26 = a2 - (unint64_t)v13;
        uint64_t result = 0;
        while (1)
        {
          __int16 v27 = *v25;
          v25 += 12;
          if ((v27 & 1) == 0) {
            break;
          }
          if (!--v26) {
            return result;
          }
        }
        return 5;
      }
    }
  }
  else
  {
LABEL_47:
    if (v10 == v12) {
      return 0;
    }
    else {
      return 3;
    }
  }
  return result;
}

uint64_t DERParseSequence(uint64_t result, unsigned int a2, uint64_t a3, unint64_t a4, size_t a5)
{
  if ((a4 | 0x7FFFFFFFFFFFFFFFLL) >= a4) {
    return DERParseSequenceToObject(result, a2, a3, a4, ~a4 & 0x7FFFFFFFFFFFFFFFLL, a5);
  }
  __break(0x5519u);
  return result;
}

unint64_t *DERParseSequenceContent(unint64_t *result, unsigned int a2, uint64_t a3, unint64_t a4, size_t a5)
{
  if ((a4 | 0x7FFFFFFFFFFFFFFFLL) >= a4) {
    return (unint64_t *)DERParseSequenceContentToObject(result, a2, a3, a4, ~a4 & 0x7FFFFFFFFFFFFFFFLL, a5);
  }
  __break(0x5519u);
  return result;
}

uint64_t DERDecodeSequenceWithBlock(uint64_t a1, uint64_t a2)
{
  memset(v4, 170, sizeof(v4));
  uint64_t result = DERDecodeItemPartialBufferGetLength(a1, v4, 0);
  if (!result)
  {
    if (v4[0] - 0x2000000000000012 >= 0xFFFFFFFFFFFFFFFELL) {
      return DERDecodeSequenceContentWithBlock(&v4[1], a2);
    }
    else {
      return 2;
    }
  }
  return result;
}

uint64_t DERDecodeSequenceContentWithBlock(unint64_t *a1, uint64_t a2)
{
  v9[0] = 0;
  unint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  if (__CFADD__(*a1, v3))
  {
    __break(0x5513u);
LABEL_13:
    __break(0x5519u);
  }
  unint64_t v4 = v2 + v3;
  if (v2 > v4) {
    goto LABEL_13;
  }
  v9[0] = *a1;
  v9[1] = v4;
  memset(v8, 170, sizeof(v8));
  char v7 = 0;
  while (1)
  {
    LODWORD(result) = DERDecodeSeqNext(v9, v8);
    if (result) {
      break;
    }
    LODWORD(result) = (*(uint64_t (**)(uint64_t, unint64_t *, char *))(a2 + 16))(a2, v8, &v7);
    if (result) {
      break;
    }
    if (v7) {
      return 0;
    }
  }
  if (result <= 1) {
    return 0;
  }
  else {
    return result;
  }
}

void *aks_params_create(uint64_t a1)
{
  unint64_t v2 = calloc(8uLL, 1uLL);
  unint64_t v3 = v2;
  if (v2)
  {
    *unint64_t v2 = 0;
    if (a1)
    {
      if (encode_list_merge_dict((uint64_t)v2))
      {
        memset_s(v3, 8uLL, 0, 8uLL);
        free(v3);
        return 0;
      }
    }
  }
  return v3;
}

void *_params_get_der_key(int a1, int a2)
{
  switch(a1)
  {
    case 1:
      unint64_t v2 = (void **)&der_key_access_groups;
      goto LABEL_28;
    case 2:
      unint64_t v2 = (void **)&der_key_external_data;
      goto LABEL_28;
    case 3:
      unint64_t v2 = (void **)&der_key_acm_handle;
      goto LABEL_28;
    case 4:
      unint64_t v2 = (void **)&der_key_salt;
      goto LABEL_28;
    case 5:
      unint64_t v2 = (void **)&der_key_data;
      goto LABEL_28;
    case 6:
      unint64_t v2 = (void **)&der_key_ecdh_seed;
      goto LABEL_28;
    case 7:
      unint64_t v2 = (void **)&der_key_ecdh_iv;
      goto LABEL_28;
    case 8:
      unint64_t v4 = (void **)&der_key_raw_output;
      goto LABEL_30;
    case 9:
      unint64_t v4 = (void **)&der_key_options;
      goto LABEL_30;
    case 10:
      unint64_t v2 = (void **)&der_key_shared_info;
      goto LABEL_28;
    case 11:
      unint64_t v2 = (void **)&der_key_shared_info2;
      goto LABEL_28;
    case 12:
      unint64_t v2 = (void **)&der_key_transcode_shared_info;
      goto LABEL_28;
    case 13:
      unint64_t v2 = (void **)&der_key_transcode_shared_info2;
      goto LABEL_28;
    case 14:
      unint64_t v2 = (void **)&der_key_transcode_ecdh_seed;
      goto LABEL_28;
    case 15:
      unint64_t v2 = (void **)&der_key_persona_uuid;
      goto LABEL_28;
    case 16:
      unint64_t v4 = (void **)&der_key_sub_key_type;
      goto LABEL_30;
    case 17:
      unint64_t v2 = (void **)&der_key_system_key_client_seed;
      goto LABEL_28;
    case 18:
      unint64_t v4 = (void **)&der_key_system_key_options;
      goto LABEL_30;
    case 19:
      unint64_t v5 = der_key_system_key_no_img4;
      BOOL v6 = a2 == 3;
      goto LABEL_31;
    case 20:
      unint64_t v4 = (void **)&der_key_remote_session_signing_key_type;
      goto LABEL_30;
    case 21:
      unint64_t v2 = (void **)&der_key_remote_session_signing_key_certificate;
      goto LABEL_28;
    case 22:
      unint64_t v4 = (void **)&der_key_gid_ref_key_options;
      goto LABEL_30;
    case 23:
      unint64_t v4 = (void **)&der_key_pka_flags;
      goto LABEL_30;
    case 24:
      unint64_t v2 = (void **)&der_key_volume_uuid;
      goto LABEL_28;
    case 25:
      unint64_t v2 = (void **)&der_key_seed;
LABEL_28:
      unint64_t v5 = *v2;
      BOOL v6 = a2 == 2;
      goto LABEL_31;
    case 26:
      unint64_t v4 = (void **)&der_key_test_flags;
LABEL_30:
      unint64_t v5 = *v4;
      BOOL v6 = a2 == 1;
LABEL_31:
      if (v6) {
        uint64_t result = v5;
      }
      else {
        uint64_t result = 0;
      }
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t aks_params_set_number(void *a1, int a2, uint64_t *a3)
{
  uint64_t v5 = 3758097090;
  der_SecKeyRef key = (unsigned __int8 *)_params_get_der_key(a2, 1);
  if (der_key)
  {
    uint64_t v7 = (uint64_t)der_key;
    if (!encode_list_remove_key(a1, der_key)
      && (!a3 || !encode_list_add_number(a1, v7, *a3)))
    {
      return 0;
    }
  }
  return v5;
}

uint64_t aks_params_set_data(void *a1, int a2, uint64_t a3)
{
  uint64_t v6 = 3758097090;
  der_SecKeyRef key = (unsigned __int8 *)_params_get_der_key(a2, 2);
  if (der_key)
  {
    uint64_t v8 = (uint64_t)der_key;
    if (!encode_list_remove_key(a1, der_key))
    {
      if (a3)
      {
        if (a2 == 1 || a2 == 2)
        {
          ccder_blob_decode_tag();
          return v6;
        }
        if (encode_list_add_data(a1, v8, a3)) {
          return v6;
        }
      }
      return 0;
    }
  }
  return v6;
}

uint64_t aks_params_free(void ***a1)
{
  uint64_t result = 3758097090;
  if (a1)
  {
    unint64_t v3 = *a1;
    if (*a1)
    {
      *a1 = 0;
      encode_list_free(v3);
      memset_s(v3, 8uLL, 0, 8uLL);
      free(v3);
      return 0;
    }
  }
  return result;
}

uint64_t aks_ref_key_create(int a1, int a2, unsigned int a3, uint64_t a4, uint64_t a5, void ***a6)
{
  uint64_t v11 = 3758097090;
  unint64_t v12 = der_key_op_create;
  unsigned __int16 v13 = (void **)calloc(8uLL, 1uLL);
  void *v13 = 0;
  encode_list_add_key(v13, (uint64_t)der_key_op, (uint64_t)v12);
  BOOL v25 = 0;
  size_t v26 = 0;
  uint64_t v23 = 0;
  rsize_t v24 = 0;
  if (!a6) {
    goto LABEL_14;
  }
  unint64_t v14 = calloc(0x50uLL, 1uLL);
  unint64_t v22 = v14;
  if (!v14)
  {
    uint64_t v11 = 3758604298;
    goto LABEL_14;
  }
  unint64_t v15 = (void **)v14;
  memset_s(v14, 0x50uLL, 0, 0x50uLL);
  if (a4 && encode_list_merge_dict((uint64_t)v13)
    || encode_list_add_number(v13, (uint64_t)der_key_keybag_class, a2)
    || encode_list_add_number(v13, (uint64_t)der_key_type, a3)
    || encode_list_dict(v13, &v25, &v26))
  {
LABEL_17:
    aks_ref_key_free((uint64_t *)&v22);
    goto LABEL_14;
  }
  uint64_t v16 = _aks_operation();
  if (v16)
  {
    uint64_t v11 = v16;
    goto LABEL_17;
  }
  unsigned __int16 v17 = (char *)v23;
  rsize_t v18 = v24;
  *unint64_t v15 = v23;
  v15[1] = (void *)v18;
  *((_DWORD *)v15 + 10) = a1;
  void v15[2] = &v17[v18];
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  if (der_dict_find_value((uint64_t)der_key_ref_key, &v20, &v21)) {
    void v15[4] = v20;
  }
  if (der_dict_find_value((uint64_t)der_key_external_data, &v20, &v21)) {
    void v15[3] = v20;
  }
  uint64_t v11 = 0;
  *a6 = v15;
  uint64_t v23 = 0;
  rsize_t v24 = 0;
LABEL_14:
  encode_list_free(v13);
  memset_s(v13, 8uLL, 0, 8uLL);
  free(v13);
  memset_s(v25, v26, 0, v26);
  free(v25);
  memset_s(v23, v24, 0, v24);
  free(v23);
  return v11;
}

uint64_t aks_ref_key_free(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (!*a1) {
    return 3758097090;
  }
  *a1 = 0;
  if (*(void *)v1)
  {
    memset_s(*(void **)v1, *(void *)(v1 + 8), 0, *(void *)(v1 + 8));
    free(*(void **)v1);
  }
  unint64_t v2 = *(void **)(v1 + 48);
  if (v2)
  {
    memset_s(v2, *(void *)(v1 + 56), 0, *(void *)(v1 + 56));
    free(*(void **)(v1 + 48));
  }
  unint64_t v3 = *(void **)(v1 + 64);
  if (v3)
  {
    memset_s(v3, *(void *)(v1 + 72), 0, *(void *)(v1 + 72));
    free(*(void **)(v1 + 64));
  }
  memset_s((void *)v1, 0x50uLL, 0, 0x50uLL);
  free((void *)v1);
  return 0;
}

uint64_t aks_ref_key_create_with_blob(int a1, const void *a2, size_t a3, uint64_t *a4)
{
  uint64_t v4 = 3758097090;
  if (a2)
  {
    if (a3)
    {
      if (der_get_sizeof((uint64_t)a2) == a3)
      {
        uint64_t v4 = 3758604298;
        unint64_t v9 = calloc(0x50uLL, 1uLL);
        unint64_t v12 = v9;
        if (v9)
        {
          uint64_t v10 = (uint64_t)v9;
          memset_s(v9, 0x50uLL, 0, 0x50uLL);
          *(_DWORD *)(v10 + 40) = a1;
          if (_set_blob(v10, a2, a3))
          {
            aks_ref_key_free((uint64_t *)&v12);
          }
          else
          {
            uint64_t v4 = 0;
            *a4 = v10;
          }
        }
      }
    }
  }
  return v4;
}

uint64_t _aks_operation()
{
  int v0 = __chkstk_darwin();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  size_t v6 = v5;
  uint64_t v8 = v7;
  int v9 = v0;
  mach_port_t aks_client_connection = get_aks_client_connection();
  if (aks_client_connection)
  {
    if (v8)
    {
      mach_port_t v11 = aks_client_connection;
      uint64_t v12 = 3758097090;
      if (der_get_sizeof((uint64_t)v8) == v6)
      {
        bzero(__src, 0x8000uLL);
        size_t __count = 0x8000;
        uint64_t input = v9;
        uint64_t v12 = IOConnectCallMethod(v11, 0x2Bu, &input, 1u, v8, v6, 0, 0, __src, &__count);
        if (!v12 && v4 && v2)
        {
          unsigned __int16 v13 = calloc(__count, 1uLL);
          *uint64_t v4 = v13;
          if (v13)
          {
            memcpy(v13, __src, __count);
            uint64_t v12 = 0;
            *unint64_t v2 = __count;
          }
          else
          {
            uint64_t v12 = 3758097085;
          }
        }
      }
    }
    else
    {
      uint64_t v12 = 3758097090;
    }
  }
  else
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "_aks_operation", ":", 457, "", 0, "", "");
    uint64_t v12 = 3758097084;
  }
  memset_s(__src, 0x8000uLL, 0, 0x8000uLL);
  return v12;
}

uint64_t _set_blob(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  if (!der_dict_find_value((uint64_t)der_key_ref_key, &v8, &v9)) {
    return 3758097090;
  }
  if (*(void *)a1)
  {
    memset_s(*(void **)a1, *(void *)(a1 + 8), 0, *(void *)(a1 + 8));
    free(*(void **)a1);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
  }
  size_t v6 = calloc(a3, 1uLL);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = a3;
  if (!v6) {
    return 3758604298;
  }
  memcpy(v6, a2, a3);
  *(void *)(a1 + 16) = *(void *)a1 + *(void *)(a1 + 8);
  if (der_dict_find_value((uint64_t)der_key_ref_key, &v8, &v9)) {
    *(void *)(a1 + 32) = v8;
  }
  if ((der_dict_find_value((uint64_t)der_key_external_data, &v8, &v9) & 1) != 0
    || (uint64_t result = der_dict_find_value((uint64_t)der_key_auth_data, &v8, &v9), result))
  {
    uint64_t result = 0;
    *(void *)(a1 + 24) = v8;
  }
  return result;
}

uint64_t _get_merged_params(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3 = 3758604298;
  if (a1
    && (!*(void *)(a1 + 48) || !encode_list_merge_dict((uint64_t)a2))
    && (!a3 || !encode_list_merge_dict((uint64_t)a2)))
  {
    encode_list_remove_key(a2, (unsigned __int8 *)der_key_external_data);
    return 0;
  }
  return v3;
}

uint64_t aks_ref_key_get_type(uint64_t a1)
{
  if (!*(void *)(a1 + 32)) {
    return 0;
  }
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  uint64_t result = der_dict_find_value((uint64_t)der_key_type, &v2, &v3);
  if (result) {
    return der_get_number();
  }
  return result;
}

uint64_t aks_ref_key_get_public_key(void *a1, void *a2)
{
  unsigned int v17 = 0;
  uint64_t v16 = 0;
  if (!a1[4]) {
    return 0;
  }
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  if (der_dict_find_value((uint64_t)der_key_public_key, &v14, &v15))
  {
    *(void *)&long long v13 = v14;
    *((void *)&v13 + 1) = v14 + v15;
    der_utils_decode_implicit_raw_octet_string(&v13, 4, &v17, &v16);
  }
  int type = aks_ref_key_get_type((uint64_t)a1);
  if ((type - 7) < 2)
  {
    uint64_t v5 = ccec_cp_384();
    goto LABEL_9;
  }
  if ((type - 4) <= 1)
  {
    uint64_t v5 = ccec_cp_256();
LABEL_9:
    if (v5)
    {
      uint64_t v7 = firebloom_cp_prime_bitlen(v5);
      if (v17 == (unint64_t)(v7 + 7) >> 3)
      {
        if (v16 && !a1[8])
        {
          __chkstk_darwin();
          bzero((char *)&v12 - v8, v8);
          ccec_compact_import_pub();
          size_t v9 = (2 * firebloom_cp_prime_size()) | 1;
          uint64_t v10 = calloc(v9, 1uLL);
          a1[8] = v10;
          a1[9] = v9;
          if (v10) {
            ccec_export_pub();
          }
          cc_clear();
        }
        uint64_t v11 = a1[9];
        uint64_t v16 = a1[8];
        unsigned int v17 = v11;
      }
    }
  }
  *a2 = v17;
  return v16;
}

uint64_t aks_sik_optional_params(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v11 = 0;
  size_t v12 = 0;
  long long v13 = 0;
  uint64_t v9 = 3758097090;
  if ((!a1 || a2 <= 0x20 && !encode_list_add_data(&v13, (uint64_t)der_key_salt, a1))
    && (!a3 || !encode_list_add_data(&v13, (uint64_t)der_key_data, a3)))
  {
    if (encode_list_is_empty(&v13))
    {
      uint64_t v9 = 0;
    }
    else if (!encode_list_dict(&v13, &v11, &v12))
    {
      uint64_t v9 = 0;
      *a5 = v11;
      *a6 = v12;
    }
  }
  encode_list_free(&v13);
  return v9;
}

uint64_t aks_sik_collection(uint64_t a1)
{
  uint64_t v2 = 3758097090;
  uint64_t v3 = der_key_op_sik_collection;
  uint64_t v4 = (void **)calloc(8uLL, 1uLL);
  *uint64_t v4 = 0;
  encode_list_add_key(v4, (uint64_t)der_key_op, (uint64_t)v3);
  __s = 0;
  rsize_t __n = 0;
  if ((!a1 || !encode_list_merge_dict((uint64_t)v4)) && !encode_list_dict(v4, &__s, &__n)) {
    uint64_t v2 = _aks_operation();
  }
  encode_list_free(v4);
  memset_s(v4, 8uLL, 0, 8uLL);
  free(v4);
  if (__s)
  {
    memset_s(__s, __n, 0, __n);
    free(__s);
  }
  return v2;
}

uint64_t aks_system_key_collection(unsigned int a1, unsigned int a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v11 = 3758097090;
  size_t v12 = der_key_op_system_key_collect;
  long long v13 = (void **)calloc(8uLL, 1uLL);
  void *v13 = 0;
  encode_list_add_key(v13, (uint64_t)der_key_op, (uint64_t)v12);
  __s = 0;
  rsize_t __n = 0;
  if ((!a3 || !encode_list_merge_dict((uint64_t)v13))
    && !encode_list_add_number(v13, (uint64_t)der_key_system_key_type, a1)
    && !encode_list_add_number(v13, (uint64_t)der_key_system_key_generation, a2)
    && !encode_list_dict(v13, &__s, &__n))
  {
    uint64_t v11 = _aks_operation();
    if (!v11)
    {
      *a5 = 0;
      *a6 = 0;
    }
  }
  encode_list_free(v13);
  memset_s(v13, 8uLL, 0, 8uLL);
  free(v13);
  if (__s)
  {
    memset_s(__s, __n, 0, __n);
    free(__s);
  }
  return v11;
}

uint64_t aks_system_key_attest(unsigned int a1, unsigned int a2, uint64_t *a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v13 = 3758097090;
  uint64_t v14 = der_key_op_system_key_attest;
  uint64_t v15 = (void **)calloc(8uLL, 1uLL);
  *uint64_t v15 = 0;
  encode_list_add_key(v15, (uint64_t)der_key_op, (uint64_t)v14);
  __s = 0;
  rsize_t __n = 0;
  if (a3)
  {
    if (!_get_merged_params((uint64_t)a3, v15, a4))
    {
      encode_list_remove_key(v15, (unsigned __int8 *)der_key_ref_key);
      if (!encode_list_add_der(v15, (uint64_t)der_key_ref_key, *a3, a3[2])
        && !encode_list_add_number(v15, (uint64_t)der_key_system_key_type, a1)
        && !encode_list_add_number(v15, (uint64_t)der_key_system_key_generation, a2)
        && !encode_list_dict(v15, &__s, &__n))
      {
        uint64_t v13 = _aks_operation();
        if (!v13)
        {
          *a6 = 0;
          *a7 = 0;
        }
      }
    }
  }
  encode_list_free(v15);
  memset_s(v15, 8uLL, 0, 8uLL);
  free(v15);
  if (__s)
  {
    memset_s(__s, __n, 0, __n);
    free(__s);
  }
  return v13;
}

uint64_t aks_system_key_operate(unsigned int a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = 3758097090;
  uint64_t v7 = der_key_op_system_key_operate;
  size_t v8 = (void **)calloc(8uLL, 1uLL);
  const void *v8 = 0;
  encode_list_add_key(v8, (uint64_t)der_key_op, (uint64_t)v7);
  __s = 0;
  rsize_t __n = 0;
  if ((!a3 || !encode_list_merge_dict((uint64_t)v8))
    && !encode_list_add_number(v8, (uint64_t)der_key_system_key_type, a1)
    && !encode_list_add_number(v8, (uint64_t)der_key_system_key_operation, a2)
    && !encode_list_dict(v8, &__s, &__n))
  {
    uint64_t v6 = _aks_operation();
  }
  encode_list_free(v8);
  memset_s(v8, 8uLL, 0, 8uLL);
  free(v8);
  if (__s)
  {
    memset_s(__s, __n, 0, __n);
    free(__s);
  }
  return v6;
}

uint64_t aks_system_key_get_public(unsigned int a1, unsigned int a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v11 = 3758097090;
  size_t v12 = der_key_op_system_key_get_public;
  uint64_t v13 = (void **)calloc(8uLL, 1uLL);
  void *v13 = 0;
  encode_list_add_key(v13, (uint64_t)der_key_op, (uint64_t)v12);
  __s = 0;
  rsize_t __n = 0;
  if ((!a3 || !encode_list_merge_dict((uint64_t)v13))
    && !encode_list_add_number(v13, (uint64_t)der_key_system_key_type, a1)
    && !encode_list_add_number(v13, (uint64_t)der_key_system_key_generation, a2)
    && !encode_list_dict(v13, &__s, &__n))
  {
    uint64_t v11 = _aks_operation();
    if (!v11)
    {
      *a5 = 0;
      *a6 = 0;
    }
  }
  encode_list_free(v13);
  memset_s(v13, 8uLL, 0, 8uLL);
  free(v13);
  if (__s)
  {
    memset_s(__s, __n, 0, __n);
    free(__s);
  }
  return v11;
}

uint64_t get_aks_client_connection()
{
  if (get_aks_client_dispatch_queue_onceToken != -1) {
    dispatch_once(&get_aks_client_dispatch_queue_onceToken, &__block_literal_global_173);
  }
  dispatch_sync((dispatch_queue_t)get_aks_client_dispatch_queue_connection_queue, &__block_literal_global_152);
  uint64_t result = get_aks_client_connection_connection;
  if (!get_aks_client_connection_connection)
  {
    syslog(3, "failed to open connection to %s\n", "AppleKeyStore");
    return get_aks_client_connection_connection;
  }
  return result;
}

void __get_aks_client_connection_block_invoke(id a1)
{
  if (!get_aks_client_connection_connection) {
    get_aks_client_connection_connection = _copy_aks_client_connection("IOService:/IOResources/AppleKeyStore", "AppleKeyStore");
  }
}

void __get_aks_client_dispatch_queue_block_invoke(id a1)
{
  get_aks_client_dispatch_queue_connection_queue = (uint64_t)dispatch_queue_create("aks-client-queue", 0);
}

uint64_t _copy_aks_client_connection(char *path, const char *a2)
{
  kern_return_t v5;
  CFDictionaryRef v6;
  io_service_t MatchingService;
  io_object_t v8;
  uint64_t result;
  kern_return_t v10;
  io_connect_t connect;

  connect = 0;
  io_service_t v3 = IORegistryEntryFromPath(kIOMasterPortDefault, path);
  if (!v3 || (io_object_t v4 = v3, v5 = IOServiceOpen(v3, mach_task_self_, 0, &connect), IOObjectRelease(v4), v5))
  {
    uint64_t v6 = IOServiceMatching(a2);
    MatchingService = IOServiceGetMatchingService(kIOMasterPortDefault, v6);
    if (MatchingService)
    {
      size_t v8 = MatchingService;
      IOServiceOpen(MatchingService, mach_task_self_, 0, &connect);
      IOObjectRelease(v8);
    }
  }
  uint64_t result = connect;
  if (connect)
  {
    uint64_t v10 = IOConnectCallMethod(connect, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    uint64_t result = connect;
    if (v10)
    {
      IOServiceClose(connect);
      return 0;
    }
  }
  return result;
}

uint64_t aks_absinthe_generate(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, size_t *a7)
{
  uint64_t v21 = 0;
  uint64_t input = a1;
  int v20 = 0;
  uint64_t v7 = 3758097090;
  if (a2 && a6 && a7)
  {
    mach_port_t aks_client_connection = get_aks_client_connection();
    if (aks_client_connection)
    {
      mach_port_t v17 = aks_client_connection;
      aks_pack_data(&v21, (unsigned int *)&v20, 2, v12, v13, v14, v15, v16, a2);
      size_t v19 = *a7;
      uint64_t v7 = IOConnectCallMethod(v17, 0x51u, &input, 1u, v21, v20, 0, 0, a6, &v19);
      if (!v7) {
        *a7 = (int)v19;
      }
    }
    else
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_absinthe_generate", ":", 3253, "", 0, "", "");
      uint64_t v7 = 3758097084;
    }
  }
  free(v21);
  return v7;
}

unint64_t firebloom_cp_prime_size()
{
  return (unint64_t)(cczp_bitlen() + 7) >> 3;
}

BOOL der_equal(const void *a1, uint64_t a2, const void *a3)
{
  size_t v5 = der_get_sizeof((uint64_t)a1);
  return v5 == der_get_sizeof((uint64_t)a3) && memcmp(a1, a3, v5) == 0;
}

uint64_t der_get_sizeof(uint64_t a1)
{
  if (ccder_blob_decode_tag() && ccder_blob_decode_len()) {
    return a1 - a1;
  }
  else {
    return 0;
  }
}

uint64_t der_dict_iterate()
{
  uint64_t result = ccder_blob_decode_range();
  if (result)
  {
    if (ccder_blob_decode_sequence_tl())
    {
      uint64_t result = ccder_blob_decode_tl();
      if (result) {
        return 0;
      }
    }
    else
    {
      return 1;
    }
  }
  return result;
}

uint64_t der_dict_find_value(uint64_t a1, void *a2, void *a3)
{
  if (a1)
  {
    der_dict_iterate();
    if (a2)
    {
      if (a3)
      {
        *a2 = 0;
        *a3 = 0;
      }
    }
  }
  return 0;
}

BOOL _dict_find_value_cb(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v8 = der_equal(*(const void **)a5, *(void *)a5 + *(unsigned __int8 *)(*(void *)a5 + 1) + 2, a1);
  if (v8)
  {
    *(unsigned char *)(a5 + 24) = 1;
    *(void *)(a5 + 8) = a3;
    *(void *)(a5 + 16) = a3 + a4;
  }
  return !v8;
}

uint64_t der_get_number()
{
  return 0;
}

double der_utils_decode_implicit_raw_octet_string(long long *a1, uint64_t a2, _DWORD *a3, void *a4)
{
  long long v8 = *a1;
  if (ccder_blob_decode_range())
  {
    *a4 = 0;
    *a3 = 0;
    double result = *(double *)&v8;
    *a1 = v8;
  }
  return result;
}

uint64_t encode_list_free(void **a1)
{
  if (!a1) {
    return 0xFFFFFFFFLL;
  }
  while (1)
  {
    uint64_t v2 = *a1;
    if (!*a1) {
      break;
    }
    io_service_t v3 = (void *)*((void *)v2 + 1);
    *a1 = *(void **)v2;
    if (v3)
    {
      memset_s(v3, *((void *)v2 + 2), 0, *((void *)v2 + 2));
      free(*((void **)v2 + 1));
    }
    memset_s(v2, 0x18uLL, 0, 0x18uLL);
    free(v2);
  }
  return 0;
}

uint64_t encode_list_remove_key(void *a1, unsigned __int8 *a2)
{
  if (!a1) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v2 = (void **)a1;
  uint64_t result = (uint64_t)_encode_list_find_key(a1, a2);
  if (result)
  {
    uint64_t v4 = result;
    for (uint64_t i = *v2; i != (void *)result; uint64_t i = (void *)*i)
      uint64_t v2 = (void **)i;
    *uint64_t v2 = *(void **)result;
    uint64_t v6 = *(void **)(result + 8);
    if (v6)
    {
      memset_s(v6, *(void *)(v4 + 16), 0, *(void *)(v4 + 16));
      free(*(void **)(v4 + 8));
    }
    memset_s((void *)v4, 0x18uLL, 0, 0x18uLL);
    free((void *)v4);
    return 0;
  }
  return result;
}

void *_encode_list_find_key(void *a1, unsigned __int8 *a2)
{
  if (!a1) {
    return 0;
  }
  uint64_t v2 = (void *)*a1;
  if (*a1)
  {
    do
    {
      size_t v5 = (const void *)v2[1];
      if (ccder_blob_decode_sequence_tl() && der_equal(a2, (uint64_t)&a2[a2[1] + 2], v5)) {
        break;
      }
      uint64_t v2 = (void *)*v2;
    }
    while (v2);
  }
  return v2;
}

uint64_t der_key_validate(uint64_t a1)
{
  if ((ccder_blob_decode_tl() & 1) == 0)
  {
    fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s bad 1%s\n", "aks", "", "", "", "der_key_validate");
    return 0;
  }
  return a1;
}

uint64_t encode_list_merge_dict(uint64_t a1)
{
  if (a1) {
    return der_dict_iterate() - 1;
  }
  else {
    return 4294967285;
  }
}

uint64_t _merge_dict_cb(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  long long v8 = (unsigned __int8 *)der_key_validate(a1);
  if (v8)
  {
    uint64_t v9 = (uint64_t)v8;
    if (!encode_list_remove_key(a5, v8) && !encode_list_add_der(a5, v9, a3, a3 + a4)) {
      return 1;
    }
  }
  fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s fail%s\n", "aks", "", "", "", "_merge_dict_cb", ":", 647, "", 0, "", "");
  return 0;
}

uint64_t encode_list_dict(void *a1, void *a2, size_t *a3)
{
  uint64_t v3 = 0xFFFFFFFFLL;
  if (a1)
  {
    if (a2)
    {
      if (a3)
      {
        uint64_t v7 = (void *)*a1;
        if (*a1)
        {
          unint64_t v8 = 0;
          uint64_t v9 = 0;
          uint64_t v10 = 0;
          do
          {
            v10 += v7[2];
            uint64_t v7 = (void *)*v7;
            v9 -= 16;
            --v8;
          }
          while (v7);
          if (v8 >= 0xF000000000000001 && (v11 = -v9, (uint64_t v12 = calloc(-v9, 1uLL)) != 0))
          {
            uint64_t v13 = v12;
            uint64_t v14 = (void *)*a1;
            if (*a1)
            {
              uint64_t v15 = v12;
              do
              {
                *v15++ = *(_OWORD *)(v14 + 1);
                uint64_t v14 = (void *)*v14;
              }
              while (v14);
            }
            qsort(v12, -(uint64_t)v8, 0x10uLL, (int (__cdecl *)(const void *, const void *))_qsort_compare);
            size_t v16 = ccder_sizeof();
            mach_port_t v17 = (char *)calloc(v16, 1uLL);
            rsize_t v18 = v17;
            if (v17)
            {
              BOOL v25 = v17;
              size_t v26 = &v17[v16];
              unint64_t v19 = v8 - 1;
              uint64_t v20 = (uint64_t)v13 - v9 - 8;
              while (!__CFADD__(v19++, 1))
              {
                uint64_t v22 = v20 - 16;
                char v23 = ccder_blob_encode_body();
                uint64_t v20 = v22;
                if ((v23 & 1) == 0) {
                  goto LABEL_16;
                }
              }
              if (!ccder_blob_encode_tl() || v25 != v26)
              {
LABEL_16:
                uint64_t v3 = 0xFFFFFFFFLL;
                goto LABEL_20;
              }
              uint64_t v3 = 0;
              *a2 = v18;
              *a3 = v16;
              rsize_t v18 = 0;
            }
            else
            {
              uint64_t v3 = 4294967279;
            }
LABEL_20:
            memset_s(v13, v11, 0, v11);
            free(v13);
            if (v18)
            {
              memset_s(v18, v16, 0, v16);
              free(v18);
            }
          }
          else
          {
            return 0xFFFFFFFFLL;
          }
        }
      }
    }
  }
  return v3;
}

uint64_t encode_list_add_der(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = 0xFFFFFFFFLL;
  if (a1 && a2 && a3 && a4)
  {
    if (der_get_sizeof(a3) <= (unint64_t)(a4 - a3))
    {
      size_t v6 = ccder_sizeof();
      uint64_t v7 = (char *)calloc(v6, 1uLL);
      if (!v7) {
        return 4294967279;
      }
      unint64_t v8 = v7;
      size_t v16 = &v7[v6];
      if (ccder_blob_encode_body())
      {
        int v9 = ccder_blob_encode_body();
        uint64_t v10 = v16;
        if (!v9) {
          uint64_t v10 = 0;
        }
        mach_port_t v17 = v10;
        int v11 = ccder_blob_encode_tl();
        uint64_t v12 = v17;
        if (!v11) {
          uint64_t v12 = 0;
        }
        if (v12 && v12 == v8)
        {
          uint64_t v14 = calloc(0x18uLL, 1uLL);
          if (v14)
          {
            uint64_t v15 = v14;
            uint64_t result = 0;
            v15[1] = v8;
            void v15[2] = v6;
            *uint64_t v15 = *a1;
            *a1 = v15;
            return result;
          }
        }
      }
      memset_s(v8, v6, 0, v6);
      free(v8);
    }
    return 0xFFFFFFFFLL;
  }
  return result;
}

uint64_t encode_list_add_key(void *a1, uint64_t a2, uint64_t a3)
{
  return encode_list_add_der(a1, a2, a3, a3 + *(unsigned __int8 *)(a3 + 1) + 2);
}

uint64_t encode_list_add_data(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = 0xFFFFFFFFLL;
  if (a1 && a2 && a3)
  {
    ccder_sizeof();
    size_t v5 = ccder_sizeof();
    size_t v6 = (char *)calloc(v5, 1uLL);
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v15 = &v6[v5];
      if (!ccder_blob_encode_body() || !ccder_blob_encode_tl()) {
        goto LABEL_19;
      }
      int v8 = ccder_blob_encode_body();
      int v9 = v15;
      if (!v8) {
        int v9 = 0;
      }
      size_t v16 = v9;
      int v10 = ccder_blob_encode_tl();
      int v11 = v16;
      if (!v10) {
        int v11 = 0;
      }
      BOOL v12 = v11 && v11 == v7;
      if (v12 && (uint64_t v13 = calloc(0x18uLL, 1uLL)) != 0)
      {
        uint64_t v14 = v13;
        uint64_t result = 0;
        v14[1] = v7;
        void v14[2] = v5;
        void *v14 = *a1;
        *a1 = v14;
      }
      else
      {
LABEL_19:
        memset_s(v7, v5, 0, v5);
        free(v7);
        return 0xFFFFFFFFLL;
      }
    }
    else
    {
      return 4294967279;
    }
  }
  return result;
}

uint64_t encode_list_add_number(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  unint64_t v5 = HIBYTE(a3);
  if ((HIBYTE(a3) + 1) > 1u)
  {
    uint64_t v10 = 8;
  }
  else
  {
    uint64_t v6 = 9;
    uint64_t v7 = 48;
    uint64_t v8 = 1;
    while ((unint64_t)(v6 - 2) >= 2)
    {
      uint64_t v9 = a3 >> v7;
      --v6;
      v7 -= 8;
      if (v5 != v9)
      {
        uint64_t v8 = v6 - 1;
        goto LABEL_8;
      }
    }
    uint64_t v6 = 2;
LABEL_8:
    if ((((a3 >> (8 * v8 - 8)) ^ v5) & 0x80) != 0) {
      uint64_t v10 = v6;
    }
    else {
      uint64_t v10 = v8;
    }
  }
  uint64_t v25 = 0;
  uint64_t result = 0xFFFFFFFFLL;
  if (a1 && a2)
  {
    ccder_sizeof();
    size_t v12 = ccder_sizeof();
    uint64_t v13 = (char *)calloc(v12, 1uLL);
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = v10;
      do
      {
        *((unsigned char *)&v25 + v15 - 1) = v3;
        v3 >>= 8;
        --v15;
      }
      while (v15);
      char v23 = &v13[v12];
      if ((ccder_blob_encode_body() & 1) == 0 || !ccder_blob_encode_tl()) {
        goto LABEL_30;
      }
      int v16 = ccder_blob_encode_body();
      mach_port_t v17 = v23;
      if (!v16) {
        mach_port_t v17 = 0;
      }
      rsize_t v24 = v17;
      int v18 = ccder_blob_encode_tl();
      unint64_t v19 = v24;
      if (!v18) {
        unint64_t v19 = 0;
      }
      BOOL v20 = v19 && v19 == v14;
      if (v20 && (uint64_t v21 = calloc(0x18uLL, 1uLL)) != 0)
      {
        uint64_t v22 = v21;
        uint64_t result = 0;
        v22[1] = v14;
        v22[2] = v12;
        void *v22 = *a1;
        *a1 = v22;
      }
      else
      {
LABEL_30:
        memset_s(v14, v12, 0, v12);
        free(v14);
        return 0xFFFFFFFFLL;
      }
    }
    else
    {
      return 4294967279;
    }
  }
  return result;
}

BOOL encode_list_is_empty(void *a1)
{
  return *a1 == 0;
}

uint64_t _qsort_compare(const void **a1, void **a2)
{
  unint64_t v5 = *a1;
  __s2 = *a2;
  if (!ccder_blob_decode_sequence_tl()
    || !ccder_blob_decode_sequence_tl()
    || !ccder_blob_decode_tag()
    || !ccder_blob_decode_len()
    || !v5
    || !ccder_blob_decode_tag()
    || !ccder_blob_decode_len()
    || !__s2)
  {
    return 4294967293;
  }
  int v2 = memcmp(v5, __s2, 0);
  if (v2 > 0) {
    return 1;
  }
  else {
    return ((v2 < 0) << 31 >> 31);
  }
}

char *aks_copy_packed_data(_DWORD *a1, const void *a2, int a3)
{
  uint64_t v3 = (char *)(a1 + 1);
  if (a2)
  {
    *a1 = a3;
    memcpy(a1 + 1, a2, a3);
    v3 += a3;
    int v5 = -a3;
    size_t v6 = -a3 & 3;
    if ((v5 & 3) != 0)
    {
      int __s = 0;
      memset_s(&__s, 4uLL, 0, 4uLL);
      memcpy(v3, &__s, v6);
      v3 += v6;
    }
  }
  else
  {
    *a1 = 0;
  }
  return v3;
}

char *aks_pack_data(char **a1, unsigned int *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v21 = &a9;
  unsigned int v12 = 4;
  if (a3)
  {
    int v13 = a3;
    do
    {
      uint64_t v14 = v21;
      v21 += 2;
      v12 += *((_DWORD *)v14 + 2) + (-*((_DWORD *)v14 + 2) & 3) + 4;
      --v13;
    }
    while (v13);
  }
  uint64_t result = (char *)calloc(1uLL, v12);
  int v16 = result;
  uint64_t v22 = (const void **)&a9;
  int v17 = 0;
  if (a3)
  {
    uint64_t v18 = 4;
    do
    {
      unint64_t v19 = v22;
      BOOL v20 = *v22;
      v22 += 2;
      uint64_t result = aks_copy_packed_data(&v16[v18], v20, *((_DWORD *)v19 + 2));
      uint64_t v18 = result - v16;
      ++v17;
    }
    while (a3 != v17);
  }
  *(_DWORD *)int v16 = v17;
  *a1 = v16;
  *a2 = v12;
  return result;
}

uint64_t sub_1000B4F04(mach_port_t a1, unsigned int a2, uint64_t a3, unsigned int a4, unint64_t *a5, void *a6, unsigned int *a7)
{
  int v18 = 1;
  uint64_t v19 = a3;
  int v20 = 16777472;
  unsigned int v21 = a4;
  NDR_record_t v22 = NDR_record;
  unint64_t v23 = __PAIR64__(a4, a2);
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v12 = mach_msg(&msg, 3, 0x3Cu, 0x48u, reply_port, 0, 0);
  uint64_t v13 = v12;
  if ((v12 - 268435458) <= 0xE && ((1 << (v12 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v13;
  }
  if (v12)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v13;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v15 = 4294966988;
  }
  else if (msg.msgh_id == 1300)
  {
    if ((msg.msgh_bits & 0x80000000) != 0)
    {
      uint64_t v15 = 4294966996;
      if (v18 == 1 && msg.msgh_size == 64 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
      {
        unsigned int v16 = v21;
        if (v21 == v24)
        {
          *a5 = v23;
          *a6 = v19;
          *a7 = v16;
          return 0;
        }
      }
    }
    else if (msg.msgh_size == 36)
    {
      uint64_t v15 = 4294966996;
      if (HIDWORD(v19))
      {
        if (msg.msgh_remote_port) {
          uint64_t v15 = 4294966996;
        }
        else {
          uint64_t v15 = HIDWORD(v19);
        }
      }
    }
    else
    {
      uint64_t v15 = 4294966996;
    }
  }
  else
  {
    uint64_t v15 = 4294966995;
  }
  mach_msg_destroy(&msg);
  return v15;
}

uint64_t sub_1000B50FC(mach_port_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  int v11 = 1;
  uint64_t v12 = a4;
  int v13 = 16777472;
  int v14 = a5;
  NDR_record_t v15 = NDR_record;
  int v16 = a2;
  uint64_t v17 = a3;
  int v18 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v7 = mach_msg(&msg, 3, 0x44u, 0x2Cu, reply_port, 0, 0);
  uint64_t v8 = v7;
  if ((v7 - 268435458) <= 0xE && ((1 << (v7 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v8;
  }
  if (v7)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v8;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v8 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v8;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v8 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v8 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v8 = HIDWORD(v12);
  if (HIDWORD(v12)) {
    goto LABEL_17;
  }
  return v8;
}

uint64_t sub_1000B5278(mach_port_t a1, int a2, uint64_t a3, uint64_t a4, int a5, void *a6, _DWORD *a7)
{
  int v17 = 1;
  uint64_t v18 = a4;
  int v19 = 16777472;
  int v20 = a5;
  NDR_record_t v21 = NDR_record;
  int v22 = a2;
  uint64_t v23 = a3;
  int v24 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x44u, 0x40u, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) <= 0xE && ((1 << (v11 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v12;
  }
  if (v11)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v12;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v14 = 4294966988;
  }
  else if (msg.msgh_id == 1302)
  {
    if ((msg.msgh_bits & 0x80000000) != 0)
    {
      uint64_t v14 = 4294966996;
      if (v17 == 1 && msg.msgh_size == 56 && !msg.msgh_remote_port && HIBYTE(v19) == 1)
      {
        int v15 = v20;
        if (v20 == v22)
        {
          *a6 = v18;
          *a7 = v15;
          return 0;
        }
      }
    }
    else if (msg.msgh_size == 36)
    {
      uint64_t v14 = 4294966996;
      if (HIDWORD(v18))
      {
        if (msg.msgh_remote_port) {
          uint64_t v14 = 4294966996;
        }
        else {
          uint64_t v14 = HIDWORD(v18);
        }
      }
    }
    else
    {
      uint64_t v14 = 4294966996;
    }
  }
  else
  {
    uint64_t v14 = 4294966995;
  }
  mach_msg_destroy(&msg);
  return v14;
}

uint64_t sub_1000B546C(mach_port_t a1, unsigned int a2, uint64_t a3)
{
  NDR_record_t v9 = NDR_record;
  unsigned int v10 = a2;
  uint64_t v11 = a3;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v5 = mach_msg(&msg, 3, 0x2Cu, 0x2Cu, reply_port, 0, 0);
  uint64_t v6 = v5;
  if ((v5 - 268435458) <= 0xE && ((1 << (v5 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v6;
  }
  if (v5)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v6;
  }
  else
  {
    if (msg.msgh_id == 71)
    {
      uint64_t v6 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      uint64_t v6 = 4294966996;
      if ((msg.msgh_bits & 0x80000000) == 0 && msg.msgh_size == 36 && !msg.msgh_remote_port)
      {
        uint64_t v6 = v10;
        if (!v10) {
          return v6;
        }
      }
    }
    else
    {
      uint64_t v6 = 4294966995;
    }
    mach_msg_destroy(&msg);
    return v6;
  }
}

uint64_t Be81a395Bf0(uint64_t a1)
{
  uint64_t v1 = *(&off_10026D100
       + ((91 * ((dword_100283D08 + dword_100283D00) ^ 0x70)) ^ byte_10021ED30[byte_10021F730[(91 * ((dword_100283D08 + dword_100283D00) ^ 0x70))] ^ 0x94])
       + 8);
  int v2 = *(&off_10026D100
       + ((91 * (*v1 ^ dword_100283D08 ^ 0x70)) ^ byte_10021F330[byte_10021EF30[(91 * (*v1 ^ dword_100283D08 ^ 0x70))] ^ 0x39])
       - 222);
  uint64_t v3 = *v2 - *v1 - (void)&v9;
  *uint64_t v1 = 1822798427 * v3 + 0x6E6E655B55E8ACD0;
  *int v2 = 1822798427 * (v3 ^ 0x8EC5F3EEF9E6FF70);
  uint64_t v4 = (uint64_t)*(&off_10026D100
                + ((91 * ((dword_100283D08 + dword_100283D00) ^ 0x70)) ^ byte_10021F330[byte_10021EF30[(91 * ((dword_100283D08 + dword_100283D00) ^ 0x70))] ^ 0xB1])
                - 99);
  uint64_t v5 = *(void *)(v4 + 120);
  unint64_t v6 = 942846689 * ((unint64_t)&v10 ^ 0x2DF4282E8CBBA516);
  int v10 = v6 ^ 0xF067FA72;
  uint64_t v11 = a1;
  unint64_t v12 = v5 ^ v6;
  unsigned __int8 v7 = 91 * ((*(_DWORD *)v2 + *(_DWORD *)v1) ^ 0x70);
  (*(void (**)(int *))(v4 + 8
                                     * ((byte_10021F530[byte_10021F238[v7 - 8] ^ 0x89] ^ v7) - 29)))(&v10);
  return v13;
}

uint64_t IW1PcFszqNK(uint64_t a1)
{
  uint64_t v1 = (uint64_t)*(&off_10026D100
                + ((91 * (dword_100283CF8 ^ 0x70 ^ dword_100283D08)) ^ byte_10021F430[byte_10021F030[(91 * (dword_100283CF8 ^ 0x70 ^ dword_100283D08))] ^ 0xB5])
                - 155);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = (unint64_t *)*(&off_10026D100
                           + ((91 * ((dword_100283D08 - v2) ^ 0x70)) ^ byte_10021EC30[byte_10021F630[(91 * ((dword_100283D08 - v2) ^ 0x70))] ^ 0xAA])
                           - 63);
  unint64_t v4 = 1822798427 * ((unint64_t)&v10[*v3 ^ v2] ^ 0x8EC5F3EEF9E6FF70);
  *(void *)(v1 - 4) = v4;
  unint64_t *v3 = v4;
  uint64_t v5 = (uint64_t)*(&off_10026D100
                + ((91 * ((dword_100283D08 - dword_100283CF8) ^ 0x70)) ^ byte_10021ED30[byte_10021F730[(91 * ((dword_100283D08 - dword_100283CF8) ^ 0x70))] ^ 0x52])
                - 196);
  uint64_t v6 = *(void *)(v5 + 248);
  unint64_t v7 = 942846689
     * ((((unint64_t)&v11 | 0xDBD392286209E2F0)
       - ((unint64_t)&v11 | 0x242C6DD79DF61D0FLL)
       + 0x242C6DD79DF61D0FLL) ^ 0xF627BA06EEB247E6);
  int v11 = v7 ^ 0xF067FA72;
  uint64_t v12 = a1;
  unint64_t v13 = v6 ^ v7;
  unsigned __int8 v8 = 91 * ((*(_DWORD *)v3 - *(_DWORD *)(v1 - 4)) ^ 0x70);
  (*(void (**)(int *))(v5
                                + 8
                                * ((byte_10021F13C[(byte_10021EE3C[v8 - 12] ^ 0x24) - 12] ^ v8)
                                 + 68)))(&v11);
  return v14;
}

void sub_1000B59D4(uint64_t a1)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000B5A90@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 - 1531033816) & 0x6AD9BE7F) + 27) * (v2 != 0)) ^ (a1 + v1 - 13))))();
}

uint64_t sub_1000B5AD0()
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 + 61)))(v2);
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

void KxmB0CKvgWt(uint64_t a1, int a2)
{
  if (a1) {
    BOOL v2 = a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = !v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000B5CC4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = *(void *)(v5 + 16);
  unsigned int v18 = 1829790799
      * (((&v16 | 0xD30D353F) - &v16 + (&v16 & 0x2CF2CAC0)) ^ 0x11C49574)
      + 463207035;
  int v17 = v12;
  (*(void (**)(int *))(v5 + 528))(&v16);
  v12[0] = *(void *)(v5 + 280);
  v12[1] = a1;
  int v13 = a2;
  v12[2] = a3;
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  unsigned int v18 = 1829790799
      * ((((&v16 | 0xC30BD196) ^ 0xFFFFFFFE) - (~&v16 | 0x3CF42E69)) ^ 0xFE3D8E22)
      + 463207035;
  int v17 = v12;
  (*(void (**)(int *))(v5 + 528))(&v16);
  return (v16 - 955058042);
}

void sub_1000B5DF8(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (646995413 * ((((2 * a1) | 0x8F18737E) - a1 + 947111489) ^ 0x534DB4D5));
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(unsigned int *)*(&off_10026D100 + (v1 ^ 0xA));
  strcpy(v6, "com.apple.absd");
  uint64_t v4 = (uint64_t)*(&off_10026D100 + v1 + 2);
  int v5 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 8 * (v1 ^ 0x69)))(v3, v6, v2);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000B5F18()
{
  uint64_t v7 = *v5;
  uint64_t v9 = v4;
  strcpy(v10, "e.absinthed");
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v6 + 8 * (v3 ^ 0x59)))(v7, &v9, v1);
  if (result != v3 - 48) {
    int v2 = 955013739;
  }
  *(_DWORD *)(v0 + 4) = v2;
  return result;
}

void nDYmeMqvWb(uint64_t a1, uint64_t a2, int a3)
{
  if (a1) {
    BOOL v3 = a2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  int v5 = !v3 && a3 != 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000B6014(uint64_t a1, uint64_t a2, int a3)
{
  v8[0] = *(void *)(v3 + 16);
  unsigned int v12 = 1829790799 * (&v10 ^ 0xC2C9A04B) + 463207035;
  int v11 = v8;
  (*(void (**)(int *))(v3 + 528))(&v10);
  v8[0] = *(void *)(v3 + 224);
  v8[1] = a1;
  void v8[2] = a2;
  int v9 = a3;
  int v11 = v8;
  unsigned int v12 = 1829790799 * ((2 * (&v10 & 0x21EBD450) - &v10 + 1578380203) ^ 0x9CDD8BE0)
      + 463207035;
  (*(void (**)(int *))(v3 + 528))(&v10);
  return (v10 - 955058042);
}

void sub_1000B6118(uint64_t a1)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000B61C0()
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t (*)()))(v2 + 8 * (int)(v0 & 0xC4000437)))(*(void *)(v3 + 8 * (v0 ^ 0x1B9BFA72)) - 8, nullsub_3);
  *uint64_t v1 = -1133814153;
  return result;
}

void t1BoNctgaUu66(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1) {
    BOOL v4 = a4 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  int v5 = v4;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000B7354()
{
  return 4294923273;
}

uint64_t sub_1000B7474(__SecKey *a1, const UInt8 *a2, CFIndex length, UInt8 **a4, unsigned int *a5)
{
  CFErrorRef error = 0;
  CFDataRef v8 = CFDataCreate(0, a2, length);
  CFDataRef v9 = SecKeyCreateSignature(a1, kSecKeyAlgorithmECDSASignatureMessageX962SHA256, v8, &error);
  if (!v9)
  {
    uint64_t v14 = 4294925247;
    if (!v8) {
      return v14;
    }
    goto LABEL_8;
  }
  CFDataRef v10 = v9;
  unsigned int v11 = CFDataGetLength(v9);
  unsigned int v12 = (UInt8 *)malloc_type_malloc(v11, 0xF748375AuLL);
  if (v12)
  {
    int v13 = v12;
    v17.length = CFDataGetLength(v10);
    v17.location = 0;
    CFDataGetBytes(v10, v17, v13);
    uint64_t v14 = 0;
    *a4 = v13;
    *a5 = v11;
  }
  else
  {
    uint64_t v14 = 4294925268;
  }
  CFRelease(v10);
  if (v8) {
LABEL_8:
  }
    CFRelease(v8);
  return v14;
}

uint64_t sub_1000B7568()
{
  uint64_t v7 = 0;
  CFDataRef v8 = &v7;
  uint64_t v9 = 0x3052000000;
  CFDataRef v10 = sub_1000B7768;
  unsigned int v11 = sub_1000B7778;
  uint64_t v12 = 0;
  int v0 = dispatch_semaphore_create(0);
  if (v0)
  {
    if (getenv("RunningTestSUInfoRefetch"))
    {
      v15[0] = @"IgnoreExistingCollection";
      v16[0] = +[NSNumber numberWithUnsignedChar:1];
      v16[1] = &__kCFBooleanTrue;
      v15[1] = @"scheduleCollectionForCurrentBuild";
      void v15[2] = @"NetworkTimeoutInterval";
      v16[2] = &off_10027EFC0;
      uint64_t v1 = (const __CFString **)v15;
      uint64_t v2 = (void **)v16;
      uint64_t v3 = 3;
    }
    else
    {
      CFStringRef v13 = @"scheduleCollectionForCurrentBuild";
      uint64_t v14 = &__kCFBooleanTrue;
      uint64_t v1 = &v13;
      uint64_t v2 = &v14;
      uint64_t v3 = 1;
    }
    +[NSDictionary dictionaryWithObjects:v2 forKeys:v1 count:v3];
    MAEPerformCollectionWithCompletion();
    dispatch_time_t v5 = dispatch_time(0, 70000000000);
    uint64_t v4 = 4294924355;
    if (!dispatch_semaphore_wait(v0, v5))
    {
      if (v8[5]) {
        uint64_t v4 = 4294924355;
      }
      else {
        uint64_t v4 = 0;
      }
    }
  }
  else
  {
    uint64_t v4 = 4294925268;
  }
  dispatch_release(v0);
  _Block_object_dispose(&v7, 8);
  return v4;
}

void sub_1000B7750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000B7768(uint64_t a1, uint64_t a2)
{
}

void sub_1000B7778(uint64_t a1)
{
}

intptr_t sub_1000B7784(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000B7798(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 32), *(const void **)(a2 + 32), 3);
  uint64_t v4 = *(const void **)(a2 + 40);

  _Block_object_assign((void *)(a1 + 40), v4, 8);
}

void sub_1000B77E8(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 8);
  uint64_t v2 = *(const void **)(a1 + 32);

  _Block_object_dispose(v2, 3);
}

uint64_t xtiKg(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  unint64_t v5 = (qword_1002846E8 - qword_100284708) ^ (unint64_t)&v9;
  qword_100284708 = 431200057 * v5 - 0x76B82A39AB17D7D3;
  qword_1002846E8 = 431200057 * (v5 ^ 0xA5F8A63A3EE64495);
  unint64_t v6 = 444472921
     * ((((unint64_t)v10 | 0xEA735D22C64C6F32)
       - ((unint64_t)v10 | 0x158CA2DD39B390CDLL)
       + 0x158CA2DD39B390CDLL) ^ 0x6A6885817B3808DCLL);
  int v13 = v6 ^ 0x68D9B3A5;
  uint64_t v11 = a4;
  uint64_t v12 = (char *)sub_1001F5000 + v6;
  uint64_t v15 = a2;
  uint64_t v16 = a1;
  LOBYTE(v5) = 57 * ((qword_1002846E8 + 57 * v5 + 45) ^ 0x95);
  char v7 = byte_10024B190[byte_10024B090[v5] ^ 0xBB];
  v10[0] = v6 ^ a5;
  v10[1] = v6 ^ a3;
  ((void (*)(_DWORD *))*(&off_10026D1A0 + (v5 ^ v7) + 2071))(v10);
  return v14;
}

uint64_t ewFHQ(uint64_t a1)
{
  uint64_t v1 = qword_1002846F8 - (void)&v5 + qword_1002846E8;
  qword_1002846F8 = (431200057 * v1) ^ 0xA5F8A63A3EE64495;
  qword_1002846E8 = 431200057 * (v1 ^ 0xA5F8A63A3EE64495);
  unint64_t v2 = 941074649
     * (((unint64_t)&v6 - 2 * ((unint64_t)&v6 & 0xBB02B8911101A284) - 0x44FD476EEEFE5D7CLL) ^ 0xBA845F7311C96DE0);
  char v7 = (char *)sub_100168654 + v2;
  uint64_t v8 = a1;
  char v3 = byte_10024AD90[byte_10024AC90[(57 * ((qword_1002846E8 + qword_1002846F8) ^ 0x95))] ^ 0x1E];
  int v9 = -804802556 - v2;
  ((void (*)(unsigned int *))*(&off_10026D1A0
                                        + ((57
                                                                         * ((qword_1002846E8 + qword_1002846F8) ^ 0x95)) ^ v3)
                                        + 2105))(&v6);
  return v6;
}

void sub_1000B7ADC()
{
  uint64_t v0 = __chkstk_darwin();
  int v1 = *(_DWORD *)(v0 + 64) + 1448877107 * (v0 ^ 0x713B1D2A);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = ((uint64_t (*)(uint64_t, uint64_t))*(&off_10026D1A0 + v1 + 1321))(21504, 3184530223);
  *(void *)(v2 - 0x31B578D4EA47062FLL) = v3 + 0x73FCE2C07DC88EB7;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000B7BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v16 = *(unsigned int *)(a14 + 80);
  BOOL v20 = v16 - v14 == (a7 ^ 0x184EFAC9)
     || (*(_DWORD *)(a14 + 32) ^ v14) == 842674963
     || *(_DWORD *)(a14 + 4) - v14 == 1149012013
     || *(_DWORD *)a14 + v14 == 41571260;
  *(_DWORD *)(*(void *)(a14 + 56) - 0x23371728A3D18504) = 867373565;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8 * (((16 * (((a7 - 94) ^ v20) & 1)) & 0xDF | (32 * (((a7 - 94) ^ v20) & 1))) ^ a7)))(a1, v16, a2, a3, a4, 4294924397, a5, a6, a8, a9, a10, a11, a12);
}

uint64_t sub_1000B7CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  int v17 = v15 & 0x6E03E3EB;
  uint64_t v18 = a15[9];
  uint64_t v19 = a15[5];
  int v20 = 23 * (v15 & 0x6E03E3EB ^ 0x1A4);
  BOOL v24 = v18 != 0x4E52AB80F767C04BLL
     && a15[6] != 0x3E93D6427590D1A8
     && v19 != 0x57414C243E4E466
     && a15[3] != 0x228E0CD37FCCF1ACLL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8 * ((v24 * (v20 ^ 0x66)) ^ v17)))(v18, a2, v19, a4, a5, 4294924396, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_1000B7D50()
{
  int v1 = v0 + 416;
  *((_DWORD *)&STACK[0x8E0] + 0xD2AC % ((v1 + 233) ^ 0x7A0u)) = -539127609;
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v1 | 8)))(4291543022);
}

uint64_t sub_1000B84E0(uint64_t a1, int a2, int a3)
{
  LODWORD(STACK[0x1580]) = -539127609;
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + (((4 * ((a2 ^ 0xDFDD90C6) < 0x1A0)) | (8 * ((a2 ^ 0xDFDD90C6) < 0x1A0))) ^ (a3 + 484))))(201772725);
}

uint64_t sub_1000B85D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v15 = v10 + v14;
  int v16 = v12 + v9;
  int v17 = v11 + v8;
  unsigned int v18 = (((v17 - 1860105850) * (v17 - 1860105850)) ^ 0x67FFA1F6)
      + a8
      + v13
      + ((2 * (v17 - 1860105850) * (v17 - 1860105850)) & 0xCFFF43EC);
  unsigned int v19 = ((((v18 + 1883974460) % 0xFFFF) ^ 0xDFF6C9B7) + 537474633 + ((2 * ((v18 + 1883974460) % 0xFFFF)) & 0x1936E))
      % 0x190;
  unsigned int v20 = (v19 - 1015567631 - ((2 * v19) & 0x1E2)) ^ 0xC377AAF1;
  uint64_t v21 = 4
      * ((((194 * ((a8 + v13 - 666186447) % ((a3 + 44) ^ 0x2B8u))) & 0x166FE)
        + ((97 * ((a8 + v13 - 666186447) % ((a3 + 44) ^ 0x2B8u))) ^ 0xAEEFB37F)
        + 1360076589)
       % 0x55C);
  int v22 = *(_DWORD *)((char *)&STACK[0x8E0] + v21);
  uint64_t v23 = 4 * ((((194 * v20) & 0x6CFD2) + ((97 * v20) ^ 0x7CAB67E9) - 2091554109) % 0x55C);
  *(_DWORD *)((char *)&STACK[0x8E0] + v21) = *(_DWORD *)((char *)&STACK[0x8E0] + v23);
  LODWORD(v21) = (v17
                + (((v16 - 368316048) * (v16 - 368316048)) ^ 0x5DBFCC3F)
                + ((2 * (v16 - 368316048) * (v16 - 368316048)) & 0xBB7F987E)
                + 862010696)
               % 0xFFFF;
  LODWORD(v21) = ((v21 ^ 0xDFFFFBDD) + 536871971 + ((2 * v21) & 0x1F7BA)) % 0x190;
  LODWORD(v21) = (v21 - 299422891 - ((2 * v21) & 0x2AA)) ^ 0xEE272B55;
  unsigned int v24 = ((v17 - 1860105850) % 0x190u - 1669107760 - ((2 * ((v17 - 1860105850) % 0x190u)) & 0x3A0)) ^ 0x9C836FD0;
  *(_DWORD *)((char *)&STACK[0x8E0] + v23) = v22;
  uint64_t v25 = 4 * ((((194 * v24) & 0x33EF76) + ((97 * v24) ^ 0xCFF9F7BB) + 805755633) % 0x55C);
  LODWORD(v23) = *(_DWORD *)((char *)&STACK[0x8E0] + v25);
  uint64_t v26 = 4 * ((((194 * v21) & 0xFE7DE) + ((97 * v21) ^ 0xBA27F3EF) + 1171840701) % 0x55C);
  *(_DWORD *)((char *)&STACK[0x8E0] + v25) = *(_DWORD *)((char *)&STACK[0x8E0] + v26);
  unsigned int v27 = (v16 - 368316048) % 0x190u;
  unsigned int v28 = (((v15 - 32423687) * (v15 - 32423687)) ^ 0xFFFDEFFF)
      + v16
      + ((2 * (v15 - 32423687) * (v15 - 32423687)) & 0xFFFBDFFE);
  *(_DWORD *)((char *)&STACK[0x8E0] + v26) = v23;
  LODWORD(v26) = ((((v28 - 368180878) % 0xFFFF) ^ 0xFCF7F3FF) + 50859009 + ((2 * ((v28 - 368180878) % 0xFFFF)) & 0x1E7FE))
               % 0x190;
  uint64_t v29 = 4 * ((97 * ((v27 ^ 0xDFC755FF) + 2 * v27) + 897137933) % 0x55C);
  int v30 = *(_DWORD *)((char *)&STACK[0x8E0] + v29);
  uint64_t v31 = 4 * ((((194 * v26) & 0x1F7F6) + ((97 * v26) ^ 0x57D3FBFBu) - 1473456463) % 0x55C);
  *(_DWORD *)((char *)&STACK[0x8E0] + v29) = *(_DWORD *)((char *)&STACK[0x8E0] + v31);
  *(_DWORD *)((char *)&STACK[0x8E0] + v31) = v30;
  LODWORD(v25) = ((v15 - 32423687) % 0x190u - 907169436 - ((2 * ((v15 - 32423687) % 0x190u)) & 0x2C8)) ^ 0xC9EDB164;
  unsigned int v32 = (v10
       + v14
       + (((v18 + 1883974460) * (v18 + 1883974460)) ^ 0xEFD3F57F)
       + ((2 * (v18 + 1883974460) * (v18 + 1883974460)) & 0xDFA7EAFE)
       + 238898043)
      % 0xFFFF;
  unsigned int v33 = ((v32 ^ 0xE7F9A9BD) + 403068483 + ((2 * v32) & 0x1537A)) % 0x190;
  uint64_t v34 = 4 * ((((194 * v33) & 0x1FFBC) + ((97 * v33) ^ 0xFFEBFFDE) + 1364686) % 0x55C);
  LODWORD(v31) = *((_DWORD *)&STACK[0x8E0]
                 + (((194 * v25) & 0x1BEFF8) + ((97 * v25) ^ 0x79EDF7FCu) - 2045584720) % 0x55C);
  *((_DWORD *)&STACK[0x8E0] + (((194 * v25) & 0xFBBF2) + ((97 * v25) ^ 0xFF77DDF9) + 8975539) % 0x55C) = *(_DWORD *)((char *)&STACK[0x8E0] + v34);
  *(_DWORD *)((char *)&STACK[0x8E0] + v34) = v31;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + a3 - 46))();
}

void sub_1000B8B74()
{
}

uint64_t sub_1000B8BA8@<X0>(int a1@<W1>, int a2@<W8>)
{
  unsigned int v4 = *((_DWORD *)&STACK[0x8E0]
       + (((194 * (a2 ^ 0xDFDD90C7)) & 0xFB0EFDD4) + (v3 ^ 0x827950EA) + ((97 * (a2 ^ 0xDFDD90C7)) ^ 0x7D877EEA))
       % 0x55C) ^ 0xDFDD90C7;
  *((_DWORD *)&STACK[0x8E0] + (((194 * v4) & 0x77B3FFFE) + ((97 * v4) ^ 0x3BD9FFFF) - 1004049859) % 0x55C) = a2;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((106
                                * ((((a2 ^ 0xDFDD90C7) - 539127609 - ((2 * (a2 ^ 0xDFDD90C7) + 2) & 0xBFBB218E) + 1) ^ a1) > 0x18F)) ^ v3)))();
}

uint64_t sub_1000B8CA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unsigned int a5, int a6, uint64_t a7, int a8)
{
  uint64_t v11 = 4
      * (v8
       + 392
       + v9 * a3
       + 1174305734
       - ((((v8 + 392 + v9 * a3 + 1174305734) * (unint64_t)a5) >> 32) >> 10) * a6);
  int v12 = dword_100240570[(((2722 * (*(_DWORD *)(a7 + v11) ^ (a8 + 2))) & 0xB3C3F36E)
                       + ((1361 * (*(_DWORD *)(a7 + v11) ^ (a8 + 2))) ^ 0xD9E1F9B7)
                       + 639851674)
                      % 0x12E0] ^ 0x3BD5EEAA;
  int v13 = -1057164639 * v12 + 108114272 - ((33154370 * v12) & 0xCE362C0);
  int v14 = (8 * ((v13 ^ 0x671B160) * (v13 ^ 0x671B160) - ((2 * (v13 ^ 0x671B160) * (v13 ^ 0x671B160)) & 0x1231F276))
       + 1221052888) ^ 0x48C7C9D8;
  unsigned int v15 = v13 ^ 0x9AEE8CD7 ^ (v14 - ((2 * v14) & 0xE0145D40) - 267768154);
  int v16 = *(uint64_t (**)(void))(v10 + 8 * ((1928 * (v9 == 2113239739)) ^ v8));
  *(_DWORD *)(a7 + v11) = v15;
  return v16();
}

uint64_t sub_1000B8DF0@<X0>(unsigned int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  unsigned int v8 = (((v5 - 2002554811) ^ 0xE) - 2044738605 - ((((v5 - 2002554811) ^ 0xE) << (((a3 + 53) & 0xE3) + 30)) & 0xC3F87A6)) ^ 0x861FC3D3;
  unsigned int v9 = ((v8 * v4) & 0xE66FBEB6) + ((v8 * v3) ^ 0x7337DF5B) - 1932691722;
  int v10 = *(_DWORD *)(v6 + 4 * (v9 - (((v9 * (unint64_t)a1) >> 32) >> 10) * a2)) ^ 0x3BD5EEAA;
  int v11 = -1057164639 * v10 - 1946026974 - ((33154370 * v10) & 0x1803F844);
  unsigned int v12 = (8 * ((v11 ^ 0x8C01FC22) * (v11 ^ 0x8C01FC22) - ((2 * (v11 ^ 0x8C01FC22) * (v11 ^ 0x8C01FC22)) & 0x165C95BE))
       - 646818056) ^ 0xD97256F8;
  int v13 = *(uint64_t (**)(void))(v7 + 8 * ((783 * (v5 == 2002555226)) ^ a3));
  *((_DWORD *)&STACK[0x8E0] + (97 * v5 - 974195615) % 0x55Cu) = v11 ^ 0x3482C ^ (v12
                                                                               - ((2 * v12) & 0xC12F4E30)
                                                                               - 526932193);
  return v13();
}

uint64_t sub_1000B8F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v69 = ((((v66 + 268320724) * (v66 + 458225857)) ^ 0xFFEF7FFB)
       - 1814883794
       + ((2 * (v66 + 268320724) * (v66 + 458225857)) & 0xFFDEFFF6))
      * (v66 + 458225857);
  *(_DWORD *)(*a66 + 4 * (v66 + 2085868788) - 0x73FCE2C201D7FF83) = ((2 * v69) & 0xE6FFFEAE)
                                                                                    + (v69 ^ 0xF37FFF57)
                                                                                    - ((2
                                                                                      * (((2 * v69) & 0xE6FFFEAE)
                                                                                       + (v69 ^ 0xF37FFF57))
                                                                                      - 505155680) & 0xBFBB218E)
                                                                                    + 1355778199;
  BOOL v70 = ((v67 - 1736) ^ 0x11ALL) + v66 == 3836746815;
  return (*(uint64_t (**)(void))(v68 + 8 * ((v70 | (4 * v70)) ^ v67)))();
}

uint64_t sub_1000B9068@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,uint64_t a59,int a60)
{
  int v61 = (a1 - 265) | 0x821;
  uint64_t v62 = (*(uint64_t (**)(void, uint64_t))(v60 + 8 * (a1 + 1802)))((a9 + a6 + a5 - ((((a9 + a6 + a5) << (((a1 - 9) | 0x21) ^ 0x32)) - 504066612) & 0xA5D31920) - 1008479370) ^ 0x52E98C90, 0x100004077774924);
  BOOL v63 = (a5 - 1434326616) < 0xEEFE71D5;
  *(unsigned char *)(v62 + (a58 + a9 - a60 - 1250504941)) = *(unsigned char *)(a56
                                                                           - 0x57414C243E4E466
                                                                           + ((v61 - 1335) ^ 0xFFFFFFFFA6629527)
                                                                           + 1503488037);
  if ((a5 - 1434326616) >= 0xEEFE71D5) {
    BOOL v63 = (a5 - 1434326616) > 0xEEFE71D6;
  }
  return (*(uint64_t (**)(void))(v60 + 8 * (((2 * v63) | (8 * v63)) ^ v61)))();
}

void sub_1000B91B0()
{
}

uint64_t sub_1000B91BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  BOOL v65 = (HIDWORD(a12) - 1195766940) < 0xD109093E;
  uint64_t v66 = (v64 + 1052);
  *(unsigned char *)(a1 + (a15 - 842674963)) = *(unsigned char *)(a64 - 0x4E52AB80F767C04BLL);
  if ((HIDWORD(a12) - 1195766940) >= 0xD109093E) {
    BOOL v65 = (HIDWORD(a12) - 1195766940) > 0xD109093F;
  }
  int v67 = *(uint64_t (**)(uint64_t, void, BOOL, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8 * (int)((90 * !v65) ^ v66));
  return v67(a1, v67, (HIDWORD(a12) - 1195766940) < 0xD109093E, a4, v66, a6, a7, a8, a9, a10, a11, a12);
}

void sub_1000B928C()
{
}

uint64_t sub_1000B9298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  BOOL v67 = (a15 - 905702699) < 0xFC3E45E8;
  unint64_t v68 = (((unint64_t)(((16 * v66) ^ 0x2E50u) + 547852043 > 0x20A7909B) << 32) | 0x20A7909B) - 547852443;
  *(unsigned char *)(a1 + v68) = *(unsigned char *)(a66 - 0x3E93D6427590D1A8 + v68)
                       - ((2 * *(unsigned char *)(a66 - 0x3E93D6427590D1A8 + v68)) & 0x99)
                       + 76;
  if ((a15 - 905702699) >= 0xFC3E45E8) {
    BOOL v67 = (a15 - 905702699) > 0xFC3E45E9;
  }
  int v69 = *(uint64_t (**)(uint64_t, void, BOOL, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8 * ((56 * v67) ^ (v66 + 1051)));
  return v69(a1, v69, (a15 - 905702699) > 0xFC3E45E9, a4, v68, a6, a7, a8, a9, a10, a11);
}

void sub_1000B9368()
{
}

uint64_t sub_1000B9370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2
                                                              + 8
                                                              * (int)((((145 * ((a3 + 248501742) & 0xF1302BE7 ^ 0x360)) ^ 0x329)
                                                                     * ((v4 ^ (v3 - 16)) > 0x1F)) ^ (a3 + 1059))))(a1, 76, 76);
}

uint64_t sub_1000B956C@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55,int a56,int a57,int a58,int a59)
{
  HIDWORD(v854) = v59;
  int v64 = a2 + 743;
  unsigned int v65 = *(unsigned __int8 *)(a1 + (v63 - 367584251));
  unsigned int v66 = ((((v63 - 367584251) ^ 1) - 312041437 - ((2 * ((v63 - 367584251) ^ 1)) & 0xDACD4046)) ^ 0xED66A023)
      + 146801712
      + ((v64 ^ 0x64E) & (2 * v63) ^ 0xF73FFBD2);
  unsigned int v67 = ((2 * v66) & 0x96FF3DEE) + (v66 ^ 0xCB7F9EF7);
  int v866 = *(unsigned __int8 *)(a1 + v67 + 880828682);
  int v867 = *(unsigned __int8 *)(a1 + v67 + 880828683);
  LODWORD(v857) = *(unsigned __int8 *)(a1 + v67 + 880828684);
  unsigned int v68 = *(unsigned __int8 *)(a1 + v67 + 880828685);
  int v864 = *(unsigned __int8 *)(a1 + v67 + 880828686);
  unsigned __int8 v865 = *(unsigned char *)(a1 + v67 + 880828687);
  int v69 = *(unsigned __int8 *)(a1 + v67 + 880828688);
  unsigned int v70 = *(unsigned __int8 *)(a1 + v67 + 880828689);
  unsigned int v71 = *(unsigned __int8 *)(a1 + v67 + 880828690);
  HIDWORD(v837) = v61 + (v62 ^ v61) - 2 * (((v62 ^ v61) + 2147483616) & (v61 + 4) ^ v62 & 4) - 32;
  HIDWORD(v856) = *(unsigned __int8 *)(a1 + v67 + 880828691);
  int v72 = *(unsigned __int8 *)(a1 + v67 + 880828692);
  unsigned int v73 = *(unsigned __int8 *)(a1 + v67 + 880828693);
  LODWORD(v856) = *(unsigned __int8 *)(a1 + v67 + 880828694);
  int v870 = *(unsigned __int8 *)(a1 + v67 + 880828695);
  unsigned int v74 = *(unsigned __int8 *)(a1 + v67 + 880828696);
  unsigned int v75 = *(unsigned __int8 *)(a1 + v67 + 880828697);
  unsigned int v76 = *(unsigned __int8 *)(a1 + v67 + 880828698);
  int v77 = *(unsigned __int8 *)(a1 + v67 + 880828699);
  unsigned int v78 = *(unsigned __int8 *)(a1 + v67 + 880828700);
  int v79 = *(unsigned __int8 *)(a1 + v67 + 880828701);
  int v863 = *(unsigned __int8 *)(a1 + v67 + 880828702);
  int v869 = *(unsigned __int8 *)(a1 + v67 + 880828703);
  int v80 = *(unsigned __int8 *)(a1 + v67 + 880828705);
  int v81 = *(unsigned __int8 *)(a1 + v67 + 880828706);
  unsigned int v82 = *(unsigned __int8 *)(a1 + v67 + 880828707);
  unsigned int v83 = *(unsigned __int8 *)(a1 + v67 + 880828708);
  unsigned int v84 = *(unsigned __int8 *)(a1 + v67 + 880828709);
  unsigned int v85 = *(unsigned __int8 *)(a1 + v67 + 880828710);
  HIDWORD(v855) = *(unsigned __int8 *)(a1 + v67 + 880828681);
  unsigned int v86 = *(unsigned __int8 *)(a1 + v67 + 880828711);
  LODWORD(v855) = v67 + 1248412963;
  LODWORD(v829) = *(unsigned __int8 *)(a1 + v67 + 880828704);
  HIDWORD(v851) = (v64 + 806484451) | 0x402C4681;
  int v87 = (v829 ^ v60) - ((HIDWORD(v851) - 1883129331) & (2 * (v829 ^ v60)));
  int v88 = (v83 ^ v60) - ((2 * (v83 ^ v60)) & 0x192);
  HIDWORD(v830) = v80;
  int v89 = ((((v80 ^ v60) - ((2 * (v80 ^ v60)) & 0x5C)) << 8) + 753479168) ^ 0x2CE92E00;
  int v90 = ((((v87 << 16) + 1667170304) ^ 0x635F0000)
       + 1555005748
       - ((2 * (((v87 << 16) + 1667170304) ^ 0x635F0000)) & 0x395E0000)) ^ 0x5CAF8134 | (v89
                                                                                       + 1411895700
                                                                                       - ((2 * v89) & 0x284FA200)) ^ 0x5427D194;
  unsigned int v91 = v90 - 866828276 - ((2 * v90) & 0x18AA8018);
  HIDWORD(a16) = v81;
  unsigned int v92 = v91 ^ 0xCC55400C | ((v81 ^ v60) - 1389239436 - ((2 * (v81 ^ v60)) & 0xE8)) ^ 0xAD31E374;
  unsigned int v848 = v92 - ((2 * v92) & 0x50BA9B8E) - 1470280249;
  unint64_t v835 = __PAIR64__(v86, v84);
  int v93 = (v84 ^ v60) + 10272742 - ((2 * v84) & 0x164);
  int v94 = (v82 ^ v60) - 1100985328 - ((2 * v82) & 0x20);
  unsigned int v95 = (((v848 << 8) ^ 0x5D4DC700) + 1169129742 - ((2 * ((v848 << 8) ^ 0x5D4DC700)) & 0x8B5F0200)) ^ 0x45AF810E | v94 ^ 0xBE604C10;
  int v96 = v95 + 546831969 - ((2 * v95) & 0x412FFCC2);
  unint64_t v831 = __PAIR64__(v76, v74);
  int v97 = (v74 ^ v60) - ((2 * (v74 ^ v60)) & 0x15A);
  LODWORD(v837) = v69;
  unint64_t v834 = __PAIR64__(v83, v70);
  int v98 = (v70 ^ v60) - ((2 * (v70 ^ v60)) & 0x2C);
  int v99 = ((((v69 ^ v60) - ((2 * (v69 ^ v60)) & 0x8E)) << 16) + 289865728) ^ 0x11470000;
  unsigned int v100 = (v99 - 81970115 - ((2 * v99) & 0x763A0000)) ^ 0xFB1D3C3D | ((((v98 << 8) - 670034432) ^ 0xD8101600)
                                                                   - 90447704
                                                                   - ((2 * (((v98 << 8) - 670034432) ^ 0xD8101600)) & 0x7537C000)) ^ 0xFA9BE0A8;
  HIDWORD(a42) = v100 + 1968400181 - ((2 * v100) & 0x6AA6CE6A);
  LODWORD(v830) = v72;
  int v101 = (v72 ^ v60) - ((2 * (v72 ^ v60)) & 0x1B2);
  int v102 = (v75 ^ v60) - ((2 * (v75 ^ v60)) & 0x38);
  unsigned int v103 = ((((v97 << 16) + 229441536) ^ 0xDAD0000)
        - 1642230756
        - ((2 * (((v97 << 16) + 229441536) ^ 0xDAD0000)) & 0x3C3A0000)) ^ 0x9E1D8C1C | ((((v102 << 8) - 731964416) ^ 0xD45F1C00)
                                                                                      + 709694357
                                                                                      - ((2
                                                                                        * (((v102 << 8) - 731964416) ^ 0xD45F1C00)) & 0x549A2600)) ^ 0x2A4D1395;
  unsigned int v860 = v103 - 439894714 - ((2 * v103) & 0x4B8F7A8C);
  unsigned int v104 = v860 ^ 0xE5C7BD46 | ((v76 ^ v60) + 1632768102 - ((2 * (v76 ^ v60)) & 0xCC)) ^ 0x61521066;
  unsigned int v105 = ((((v93 << 8) + 117760) ^ 0x9CC1B200) - 495093611 - ((2 * (((v93 << 8) + 117760) ^ 0x9CC1B200)) & 0x44FAF000)) ^ 0xE27D7895 | ((((v88 << 16) + 1539899392) ^ 0x5BC90000) + 1054918123 - ((2 * (((v88 << 16) + 1539899392) ^ 0x5BC90000)) & 0x7DC00000)) ^ 0x3EE0C5EB;
  unsigned int v871 = v105 + 1877118556 - ((2 * v105) & 0xDFC51CB8);
  unsigned int v106 = v871 ^ 0x6FE28E5C | ((v85 ^ v60) - 1365616199 - ((2 * (v85 ^ v60)) & 0x172)) ^ 0xAE9A59B9;
  unsigned int v861 = v106 - ((2 * v106) & 0xBFA7BB8C) - 539763258;
  unsigned int v107 = (((v104 + (~(2 * v104) | 0xEA89B7)) << 8) - 1967446784) ^ 0x8ABB2400;
  unint64_t v832 = __PAIR64__(v75, v73);
  int v108 = (v73 ^ v60) - ((2 * (v73 ^ v60)) & 0xA2);
  LODWORD(v854) = v77;
  int v109 = (v77 ^ v60) + 964097985 - ((2 * (v77 ^ v60)) & 0x182);
  unsigned int v110 = (v107 + 1130444111 - ((2 * v107) & 0x86C26A00)) ^ 0x4361354F | v109 ^ 0x3976F7C1;
  LODWORD(a41) = v110 - 350355854 - ((2 * v110) & 0xD63BFCE4);
  unint64_t v833 = __PAIR64__(v71, v68);
  int v111 = (v68 ^ v60) - ((2 * (v68 ^ v60)) & 0x1CC);
  unint64_t v828 = __PAIR64__(v82, v78);
  unsigned int v112 = (v78 ^ v60) - ((2 * (v78 ^ v60)) & 0xFFFFFFF3);
  unsigned int v113 = (((v96 << 15) ^ 0xFF308000) - 1891050501 - ((2 * ((v96 << 15) ^ 0xFF308000)) & 0x1E910000)) ^ 0x8F48DBFB | (v91 >> 9) ^ 0x662AA0;
  HIDWORD(v829) = v79;
  int v114 = (v79 ^ v60) - ((2 * (v79 ^ v60)) & 0x16E);
  unsigned int v115 = HIDWORD(a42) ^ 0x75536735 | ((v71 ^ v60) - 1216775990 - ((2 * (v71 ^ v60)) & 0x194)) ^ 0xB77978CA;
  unsigned int v116 = (((v115 - ((2 * v115) & 0x699F72)) << 8) - 1261455104) ^ 0xB4CFB900;
  unsigned int v117 = (BYTE4(v856) ^ v60) - 1653435161 + (~(2 * (HIDWORD(v856) ^ v60)) | 0xFFFFFE31) + 1;
  unsigned int v118 = (v116 + 1585708097 - ((2 * v116) & 0xBD07F800)) ^ 0x5E83FC41 | v117 ^ 0x9D7294E7;
  unsigned int v119 = v118 + 504319232 - ((2 * v118) & 0x3C1E9AFE) + 127;
  unint64_t v836 = __PAIR64__(v85, v65);
  int v120 = (v65 ^ v60) - ((2 * v65) & 4);
  unsigned int v121 = (((v861 << 8) ^ 0xD3DDC600) + 1454523172 - ((2 * ((v861 << 8) ^ 0xD3DDC600)) & 0xAD648600)) ^ 0x56B24324 | ((v86 ^ 0x4C) - 799191184 - ((2 * (v86 ^ 0x4C)) & 0xE0)) ^ 0xD05D4F70;
  unsigned int v122 = v121 + 1859689437 - ((2 * v121) & 0xDDB137BA);
  unsigned int v123 = ((((v101 << 16) - 1931935744) ^ 0x8CD90000)
        + 192172610
        - ((2 * (((v101 << 16) - 1931935744) ^ 0x8CD90000)) & 0x16E80000)) ^ 0xB745242 | ((((v108 << 8) + 1881493760) ^ 0x70255100)
                                                                                        + 535673511
                                                                                        - ((2
                                                                                          * (((v108 << 8) + 1881493760) ^ 0x70255100)) & 0x3FDB7400)) ^ 0x1FEDBAA7;
  unsigned int v124 = v123 - 1570640858 - ((2 * v123) & 0x44C3D84C);
  LODWORD(v859) = v96;
  HIDWORD(v125) = v94 ^ 0x10;
  LODWORD(v125) = v96 ^ 0x2097FE00;
  int v858 = v125 >> 7;
  int v126 = v124 ^ 0xA261EC26 | ((v856 ^ 0x4C) - 508721957 - ((2 * (v856 ^ 0x4C)) & 0x1B6)) ^ 0xE1AD84DB;
  int v127 = (((v126 + 5559384 - ((2 * v126) & 0xA9B5B6)) << 8) + 426752) ^ 0x54DADB00;
  int v128 = (-65536 * (v857 ^ 0x4C) + 83820544) ^ 0x4FF0000;
  unsigned int v129 = ((((v111 << 8) - 591534592) ^ 0xDCBDE600)
        + 403975482
        - ((2 * (((v111 << 8) - 591534592) ^ 0xDCBDE600)) & 0x30285A00)) ^ 0x18142D3A | (v128
                                                                                       - 164811462
                                                                                       - ((2 * v128) & 0x6C5A0000)) ^ 0xF62D2D3A;
  int v130 = v129 - 1506306371 - ((2 * v129) & 0x4C6F2D7A);
  int v131 = (v870 ^ 0x4C) - 958722577 - ((2 * (v870 ^ 0x4C)) & 0x1DE);
  unsigned int v132 = ((v127 - 1863994560 - ((2 * v127) & 0x21CB6600)) ^ 0x90E5B340 | v131 ^ 0xC6DB0DEF)
       - 475864448
       - ((2 * ((v127 - 1863994560 - ((2 * v127) & 0x21CB6600)) ^ 0x90E5B340 | v131 ^ 0xC6DB0DEF)) & 0xC745C544);
  unsigned int v852 = (((v96 << 14) ^ 0xFF984000) - 1800430558 - ((2 * ((v96 << 14) ^ 0xFF984000)) & 0x295F0000)) ^ 0x94AF9C22 | (v91 >> 10) ^ 0x331550;
  HIDWORD(v125) = v117 ^ 0xFFFFFFE7;
  LODWORD(v125) = v119 ^ 0x1E0F4D00;
  unsigned int v133 = (((v120 << 16) - 385744896) ^ 0xE9020000)
       + 196175249
       - ((2 * (((v120 << 16) - 385744896) ^ 0xE9020000)) & 0x17620000);
  int v134 = ((((BYTE4(v855) ^ 0x4C) - ((2 * (HIDWORD(v855) ^ 0x4C)) & 0x16A)) << 8) + 563590400) ^ 0x2197B500;
  int v135 = (v134 + 871461931 - ((2 * v134) & 0x67E2E800)) ^ 0x33F1742B | v133 ^ 0xBB16591;
  unsigned int v136 = (((v96 << 13) ^ 0xFFCC2000) - 1277271007 - ((2 * ((v96 << 13) ^ 0xFFCC2000)) & 0x67BCC000)) ^ 0xB3DE6421 | (v91 >> 11) ^ 0x198AA8;
  unsigned int v137 = v130 ^ 0xA63796BD | ((v864 ^ 0x4C) + 1556948323 - ((2 * (v864 ^ 0x4C)) & 0xC6)) ^ 0x5CCD2563;
  unsigned int v138 = (((v137 + 9976910 - ((2 * v137) & 0x307890)) << 8) - 1536) ^ 0x983C4800;
  int v139 = ((((v863 ^ 0x4C) - ((2 * (v863 ^ 0x4C)) & 0x9C)) << 8) + 1477463552) ^ 0x58104E00;
  unsigned int v140 = ((v869 ^ 0x4C) + 308336830 - ((2 * (v869 ^ 0x4C)) & 0x17C)) ^ 0x1260D8BE | (v139 - 472269687 - ((2 * v139) & 0x47B37800)) ^ 0xE3D9BC89;
  unsigned int v141 = ((((v114 << 16) - 1028194304) ^ 0xC2B70000)
        - 1717395297
        - ((2 * (((v114 << 16) - 1028194304) ^ 0xC2B70000)) & 0x33440000)) ^ 0x99A2A09F | ((((v112 << 24) + 2030043136) ^ 0x79000000)
                                                                                         - 523099187
                                                                                         - ((((v112 << 24) + 2030043136) ^ 0x79000000) >> 29 << 30)) ^ 0xE0D223CD;
  int v142 = v141 + 244930506 - ((2 * v141) & 0x1D32AF94);
  unsigned int v143 = (((v119 << 14) ^ 0xD35FC000) + 285486128 - ((2 * ((v119 << 14) ^ 0xD35FC000)) & 0x22080000)) ^ 0x11042C30 | (HIDWORD(a42) >> 10) ^ 0x1D54D9;
  unsigned int v144 = v142 ^ 0xE9957CA | (v140 - 626251637 - ((2 * v140) & 0x35585116)) ^ 0xDAAC288B;
  unsigned int v145 = v144 + 1762465241 - ((2 * v144) & 0xD21A2BB2);
  unsigned int v146 = (((v122 << 13) ^ 0x137BA000) + 1551318139 - ((2 * ((v122 << 13) ^ 0x137BA000)) & 0xB8EE4000)) ^ 0x5C773C7B | (v871 >> 11) ^ 0xDFC51;
  LODWORD(v842) = v119;
  int v147 = ((v119 >> 3) ^ 0x83C0E9A7)
       + ((v848 >> 2) ^ 0x4DF9A9CE)
       + ((v119 >> 2) & 0x3FFDFFEE ^ 0xF87E2CB1)
       + ((v125 >> 7) ^ 0x9D7ACF5E)
       + ((2 * (v125 >> 7)) & 0x3AF59EBC)
       + ((2 * (v848 >> 2)) & 0x4FDDF57E ^ 0x440CA462)
       + (v143 ^ 0xD5FD36BF)
       + ((2 * v143) & 0xABFA6D7E)
       + (v136 ^ 0x1AD50405)
       + (v113 ^ 0xA2C5D4E0)
       - ((2 * v136) & 0xCA55F7F4);
  unsigned int v148 = v147
       - ((2 * v113) & 0xBA74563E)
       + 2
       - ((2 * (v147 - ((2 * v113) & 0xBA74563E) + 2) - 839234452) & 0xA5A6FA4A)
       - 1177509029;
  HIDWORD(v125) = v131 ^ 0xFFFFFFEF;
  LODWORD(v125) = (v132 + 34) ^ 0xE3A2E280;
  int v149 = v125 >> 7;
  unsigned int v150 = (((v122 << 15) ^ 0x4DEE8000) + 2107101167 - ((2 * ((v122 << 15) ^ 0x4DEE8000)) & 0xFB2F0000)) ^ 0x7D97CFEF | (v871 >> 9) ^ 0x37F147;
  unsigned int v151 = (v138 - 30776529 - ((2 * v138) & 0xFC54C600)) ^ 0xFE2A632F | v865 ^ 0x4C;
  int v152 = v151 - 1554110436 - ((2 * v151) & 0x46BC5038);
  unsigned int v153 = (((a41 << 14) ^ 0x7F9C8000) - 2004400843 - ((2 * ((a41 << 14) ^ 0x7F9C8000)) & 0x110E8000)) ^ 0x88874535 | (v860 >> 10) ^ 0x3971EF;
  int v154 = ((v122 << 14) ^ 0x26F74000) - 1374211634 - ((2 * ((v122 << 14) ^ 0x26F74000)) & 0x5C2E0000);
  HIDWORD(v125) = v109 ^ 0xFFFFFFC1;
  LODWORD(v125) = a41 ^ 0xEB1DFE00;
  unsigned int v155 = ((((v132 + 34) << 14) ^ 0xB8A88000) + 486559010 - ((2 * (((v132 + 34) << 14) ^ 0xB8A88000)) & 0x3A008000)) ^ 0x1D004D22 | (v124 >> 10) ^ 0x28987B;
  int v849 = v152;
  unsigned int v156 = (v152 ^ 0x718D5539 ^ v148)
       + (v152 ^ 0xA35E281C)
       - 2075197952
       - ((2 * ((v152 ^ 0x718D5539 ^ v148) + (v152 ^ 0xA35E281C))) & 0x89DFCCE)
       + 103;
  int v157 = ((v125 >> 7) ^ 0x7BEC6FEB)
       + ((2 * (v125 >> 7)) & 0xF7D8DFD6)
       + (v153 ^ 0x85240901)
       - ((2 * v153) & 0xF5B7EDFC)
       + 1;
  HIDWORD(v125) = v156 ^ 0x6FE67;
  LODWORD(v125) = v156 ^ 0x84480000;
  int v158 = (v125 >> 19) - ((2 * (v125 >> 19)) & 0x371C8EB8);
  unsigned int v159 = (v146 ^ 0x7FFFDB6F) + (v150 ^ 0xFFE8FEFB) + ((2 * v150) & 0xFFD1FDF6) + ((2 * v146) & 0xFFFFB6DE);
  HIDWORD(v125) = v156 ^ 0xFE67;
  LODWORD(v125) = v156 ^ 0x844E0000;
  unsigned int v160 = v157 - ((2 * v157 - 35713498) & 0xAF161FD4) + 1450874621;
  int v161 = v158 + 462309212;
  int v162 = (v125 >> 17) - ((2 * (v125 >> 17)) & 0x76957D8) - 2085311508;
  unsigned int v163 = (((v132 + 34) >> 3) ^ 0x83BBA3A8)
       + (((v132 + 34) >> 2) & 0x3F9FFFF8 ^ 0x3888B8A8)
       + (v149 ^ 0xDE6FFFAB)
       + ((2 * v149) & 0xBCDFFF56)
       + (v155 ^ 0xDFEAFF77)
       + ((2 * v155) & 0xBFD5FEEE)
       - 1579876126
       + ((v159 - ((2 * v159 + 3033900) & 0x477F472C) + 601278764) ^ (v861 >> 2) ^ 0x944B54E7);
  int v164 = (2 * v163) & 0x2A6A2C4;
  unsigned int v165 = v163 + 22237538;
  HIDWORD(v125) = v156 ^ 0x2FE67;
  LODWORD(v125) = v156 ^ 0x844C0000;
  int v166 = v125 >> 18;
  unsigned int v167 = v165 - v164;
  HIDWORD(v125) = v145 ^ 0x115D9;
  LODWORD(v125) = v142 ^ 0xE980000;
  int v168 = v125 >> 18;
  unsigned int v169 = (v161 ^ (v156 >> 10) ^ v162 ^ 0x981BFF0F) + (v160 ^ (a41 >> 3) ^ 0x4AE8B024);
  unsigned int v170 = (v135 + 1951841638 - ((2 * v135) & 0x68AD7ACC)) ^ 0x7456BD66 | ((v866 ^ 0x4C)
                                                                       - 954109991
                                                                       - ((2 * (v866 ^ 0x4C)) & 0x1B2)) ^ 0xC7216FD9;
  LODWORD(v841) = v132 + 34;
  unsigned int v171 = ((4 * (v132 + 34)) & 0x7FBACCFC ^ 0xE8A8888)
       + ((2 * (v132 + 34)) ^ 0xF898A33B)
       + (v169 ^ 0xF5FF77FE)
       + ((2 * v169) & 0xEBFEEFFC);
  unsigned int v172 = v171 - 308562599 + (~(2 * v171 + 340148998) | 0xB90ED855);
  unsigned int v173 = (((v170 - ((2 * v170) & 0x6FD58C)) << 8) - 1209350656) ^ 0xB7EAC600;
  int v862 = v173 + 969469199 - ((2 * v173) & 0x7391DA00);
  HIDWORD(v125) = ((v869 ^ 0x4C) + 308336830 - ((2 * (v869 ^ 0x4C)) & 0x17C)) ^ 0x3E;
  LODWORD(v125) = v145 ^ 0x690D1580;
  int v174 = v125 >> 7;
  unsigned int v175 = v156;
  HIDWORD(v125) = v156 ^ 0xFFFFFFE7;
  LODWORD(v125) = v156 ^ 0x844EFE00;
  int v176 = v125 >> 7;
  unsigned int v177 = v121 + 1859689437 - ((2 * v121) & 0xDDB137BA);
  HIDWORD(v125) = ((v86 ^ 0x4C) - 799191184 - ((2 * (v86 ^ 0x4C)) & 0xE0)) ^ 0x70;
  LODWORD(v125) = v177 ^ 0x6ED89B80;
  int v178 = v125 >> 7;
  HIDWORD(v125) = v167 ^ 0x15162;
  LODWORD(v125) = v167 ^ 0x1520000;
  int v179 = v125 >> 17;
  HIDWORD(v125) = v172 ^ 0x93D5;
  LODWORD(v125) = v172 ^ 0x23780000;
  int v180 = (v125 >> 17) - ((2 * (v125 >> 17)) & 0xBEFB4428);
  HIDWORD(v125) = v167 ^ 0x35162;
  LODWORD(v125) = v167 ^ 0x1500000;
  int v181 = (v179 ^ 0xFFE7FDFD)
       + ((v125 >> 19) ^ 0xF23BF6AB)
       + ((2 * (v125 >> 19)) & 0xE477ED56)
       + ((2 * v179) & 0xFFCFFBFA);
  unsigned int v182 = ((v145 >> 3) ^ 0xA2C94F06)
       + (v168 ^ 0xFFE6B3DF)
       + ((2 * v168) & 0xFFCD67BE)
       + ((v145 >> 2) & 0x1FD1DB7A ^ 0x1A414172)
       + 1345347172
       + ((v181 - ((2 * v181 + 465049264) & 0x2EA28952) - 1523757055) ^ (v167 >> 10) ^ 0x9751107D);
  unsigned int v183 = (v174 ^ 0xDDF7DFFD) + ((2 * v174) & 0xBBEFBFFA) + (v182 ^ 0x8420A440) - ((2 * v182) & 0xF7BEB77E) + 1;
  unsigned int v184 = v154 ^ 0xAE1731CE | (v871 >> 10) ^ 0x1BF8A3;
  HIDWORD(v841) = a41 ^ 0xEB1DFE72;
  int v185 = (a41 ^ 0xE0EA2A61 ^ (v183 - ((2 * v183 + 466548612) & 0x17EFA826) - 1444982827)) + (a41 ^ 0xEB1DFE72);
  unsigned int v186 = ((v172 >> 10) ^ 0xEB7F21DB)
       + ((2 * (v172 >> 10)) & 0x6FFFFE ^ 0x1BC48)
       + 344457217
       + ((v180 - 545414636) ^ (v172 >> 19) ^ (((v172 << 13) ^ 0x127AA000)
                                             - ((2 * ((v172 << 13) ^ 0x127AA000)) & 0x9EDEC000)
                                             + 1332702063) ^ 0x9012CD14);
  *(void *)((char *)&v842 + 4) = __PAIR64__(v167, v145);
  unsigned int v187 = ((v859 >> 3) ^ 0x1104DFF4)
       + (v858 ^ 0xFAFFEFF7)
       + ((2 * v858) & 0xF5FFDFEE)
       + ((v859 >> 2) & 0x15D3BF8E ^ 0xFFFE4077)
       + ((2 * v145) ^ 0x15ED351D)
       + ((4 * v145) & 0x8FEE3D5C ^ 0x84241544)
       + (v852 ^ 0x1E8005CC)
       - ((2 * v852) & 0xC2FFF466)
       + (v186 ^ 0x81130054)
       - ((2 * v186) & 0xFDD9FF56)
       + 4;
  unsigned int v188 = v185 + 612324480 + (~(2 * v185) | 0xB70156D1) + 24;
  unsigned int v189 = ((v177 >> 3) ^ 0x8139398)
       + (v178 ^ 0xF3F3FEF9)
       + ((2 * v178) & 0xE7E7FDF2)
       + ((v177 >> 2) & 0x346EFE38 ^ 0xEFD9D9CF)
       + (v184 ^ 0x1C4D0084)
       + 3;
  unsigned int v190 = v189
       - ((2 * v184) & 0xC765FEF6)
       - 2 * ((v189 - ((2 * v184) & 0xC765FEF6) + 1777762206) & 0x4251D011 ^ v189 & 1);
  HIDWORD(v125) = v188 ^ 0x75497;
  LODWORD(v125) = v188 ^ 0x24780000;
  int v191 = (v125 >> 19) - ((2 * (v125 >> 19)) & 0xC6ECDF52);
  HIDWORD(v125) = v188 ^ 0x15497;
  LODWORD(v125) = v188 ^ 0x247E0000;
  unsigned int v192 = v187 - ((2 * v187 + 280991230) & 0x5681D74A) + 866170532;
  int v193 = ((v188 >> 10) ^ 0x9C811DD5)
       + ((2 * (v188 >> 10)) & 0x6FFBFE ^ 0xFFFDC455)
       + 1668808193
       + ((v191 - 478777431) ^ ((v125 >> 17) - ((2 * (v125 >> 17)) & 0xCA6C1024) - 449443822) ^ 0x64067BB);
  unsigned int v194 = (v193 - ((2 * v193) & 0xBE17B274) - 552871622) ^ (v190 + 742936494);
  HIDWORD(v125) = v192 ^ 0xEBA5;
  LODWORD(v125) = v192 ^ 0xAB400000;
  int v195 = (v125 >> 19) - ((2 * (v125 >> 19)) & 0x16FB976A) + 192793525;
  unsigned int v196 = (v176 ^ 0xBD6FFBD7)
       + ((v175 >> 3) ^ 0x7E142131)
       + (v166 ^ 0x7D7E7F36)
       + ((v175 >> 2) & 0x1D3BFDFA ^ 0x113BD98)
       + ((2 * v176) & 0x7ADFF7AE)
       + ((2 * v166) & 0xFAFCFE6C);
  unsigned int v197 = v196 - ((2 * v196 - 1394144276) & 0xFDB12516) + 1431050369;
  HIDWORD(v125) = v192 ^ 0xEBA5;
  LODWORD(v125) = v192 ^ 0xAB400000;
  int v198 = (v125 >> 17) - ((2 * (v125 >> 17)) & 0xCB515076) - 441931717;
  HIDWORD(v125) = v167 ^ 0x62;
  LODWORD(v125) = v167 ^ 0x1535100;
  int v199 = v125 >> 7;
  HIDWORD(v125) = v172 ^ 0x93D5;
  LODWORD(v125) = v172 ^ 0x23780000;
  int v200 = (v125 >> 18) - ((2 * (v125 >> 18)) & 0xCC7547DC);
  HIDWORD(v125) = v167 ^ 0x35162;
  LODWORD(v125) = v167 ^ 0x1500000;
  int v201 = v125 >> 18;
  HIDWORD(v842) = v177;
  unsigned int v202 = ((2 * v177) ^ 0xAA4C2462)
       + ((4 * v177) & 0xEFFA27B0 ^ 0xAB622730)
       - 2013074392
       + (v197 ^ (v192 >> 10) ^ v195 ^ v198 ^ 0x1027213F);
  unsigned int v203 = v202 - 664121271 + (~(2 * v202) | 0x4F2B5F6D) + 1;
  HIDWORD(v125) = v192 ^ 0x25;
  LODWORD(v125) = v192 ^ 0xAB40EB80;
  int v204 = (v125 >> 7) - ((2 * (v125 >> 7)) & 0x6AA63EDC);
  unsigned int v853 = v862 ^ 0x39C8ED0F | ((v867 ^ 0x4C) - 111170882 - ((2 * (v867 ^ 0x4C)) & 0x17C)) ^ 0xF95FAABE;
  HIDWORD(v125) = v203 ^ 0x5049;
  LODWORD(v125) = v203 ^ 0xD86A0000;
  int v205 = v125 >> 17;
  unsigned int v206 = v172;
  HIDWORD(v125) = v172 ^ 0x55555555;
  LODWORD(v125) = v172 ^ 0x23789380;
  int v207 = (v125 >> 7) - ((2 * (v125 >> 7)) & 0x8C5081F0);
  HIDWORD(v125) = v194 ^ 0x92A;
  LODWORD(v125) = v194 ^ 0x9D5A0000;
  int v208 = v125 >> 17;
  unsigned int v209 = (v201 ^ 0xF7FEFDFF) + ((v167 >> 3) ^ 0x6FD515D3) + (v199 ^ 0xCBFF6BD6) + ((v167 >> 2) & 0x1FFEFFFE ^ 0x54D458);
  unsigned int v210 = ((2 * v201) & 0xEFFDFBFE) + ((2 * v199) & 0x97FED7AC);
  HIDWORD(v125) = v194 ^ 0x2092A;
  LODWORD(v125) = v194 ^ 0x9D580000;
  int v211 = (v208 ^ 0xFBBF7FF6)
       + ((v194 >> 10) ^ 0x26A766AE)
       + ((v125 >> 19) ^ 0x3EF72D97)
       + ((v194 >> 9) & 0x7F9FA6 ^ 0xFFB172FB)
       + ((2 * v208) & 0xF77EFFEC)
       + ((2 * (v125 >> 19)) & 0x7DEE5B2E);
  LODWORD(v843) = v175;
  unsigned int v212 = ((2 * v175) ^ 0xC98998CD)
       + ((4 * v175) & 0x7DD737F8 ^ 0xEEECCE67)
       + 1055628286
       + ((v209 + v210 - ((2 * (v209 + v210) - 1744556968) & 0xD7E38BB4) + 938728454) ^ 0x12B5BC19 ^ (v211 - ((2 * v211 + 1032995984) & 0xF288F386) + 403545099));
  unsigned int v213 = v212 + 849101014 - ((2 * v212) & 0x653881AC);
  HIDWORD(v125) = v188 ^ 0x17;
  LODWORD(v125) = v188 ^ 0x247F5480;
  int v214 = (v125 >> 7) - ((2 * (v125 >> 7)) & 0x262AB358);
  unsigned int v215 = v188;
  HIDWORD(v125) = v188 ^ 0x35497;
  LODWORD(v125) = v188 ^ 0x247C0000;
  int v216 = (v125 >> 18) - ((2 * (v125 >> 18)) & 0x4F43D5E6);
  LODWORD(v844) = v206;
  unsigned int v217 = ((v206 >> 3) ^ 0xB9D0ED86)
       + ((v206 >> 2) & 0x3B7FFFF8 ^ 0x85E24F0)
       + 1111490564
       + ((v200 + 1715119086) ^ (v207 + 1177043192) ^ 0x2012E316);
  HIDWORD(v125) = v194 ^ 0x2092A;
  LODWORD(v125) = v194 ^ 0x9D580000;
  int v218 = v125 >> 18;
  HIDWORD(v125) = v203 ^ 0x25049;
  LODWORD(v125) = v203 ^ 0xD8680000;
  int v219 = (v167 ^ 0x1535162)
       + ((v125 >> 19) ^ 0xBBA8DA77)
       + (v205 ^ 0x5FFF7C17)
       + ((2 * (v125 >> 19)) & 0x7751B4EE)
       + ((2 * v205) & 0xBFFEF82E)
       - 464017038;
  unsigned int v220 = (v217 ^ 0x7CF3FE7A)
       + ((2 * v217) & 0xF9E7FCF4)
       + ((v203 >> 10) ^ 0x1D4947F9)
       + ((v203 >> 9) & 0x7EBADA ^ 0x6C3008)
       + (v219 ^ 0x1C080040)
       - ((2 * v219) & 0xC7EFFF7E)
       + 1;
  unsigned int v221 = v213;
  HIDWORD(v125) = v213 ^ 0x440D6;
  LODWORD(v125) = v213 ^ 0x32980000;
  int v222 = v125 >> 19;
  HIDWORD(v125) = v213 ^ 0x40D6;
  LODWORD(v125) = v213 ^ 0x329C0000;
  int v223 = (v222 ^ 0x9FF9B1BC)
       + ((v125 >> 17) ^ 0x7FDF5DED)
       + ((2 * (v125 >> 17)) & 0xFFBEBBDA)
       + ((2 * v222) & 0x3FF36378);
  unsigned int v224 = (v214 + 320166316) ^ (v215 >> 3) ^ (v216 + 664922867) ^ (v213 >> 10) ^ (v223
                                                                               + 1642195380
                                                                               - ((2 * v223 + 5103790) & 0x375F2BA));
  HIDWORD(v125) = v194 ^ 0xAAAAAAAA;
  LODWORD(v125) = v194 ^ 0x9D5A0900;
  int v225 = v125 >> 7;
  unsigned int v226 = (v220 - ((2 * v220 + 319375280) & 0x3011C10E) - 510819233) ^ v167;
  HIDWORD(v125) = v226 ^ 0x1B1E5;
  LODWORD(v125) = v226 ^ 0x995A0000;
  int v227 = v125 >> 17;
  HIDWORD(v125) = v213 ^ 0x56;
  LODWORD(v125) = v213 ^ 0x329C4080;
  int v228 = (v125 >> 7) + 98811571 + (~(2 * (v125 >> 7)) | 0xF438829B);
  HIDWORD(v125) = v203 ^ 0x49;
  LODWORD(v125) = v203 ^ 0xD86A5000;
  int v229 = v125 >> 7;
  LODWORD(a35) = v192;
  HIDWORD(v125) = v226 ^ 0x3B1E5;
  LODWORD(v125) = v226 ^ 0x99580000;
  int v230 = ((v192 >> 3) ^ 0x31FD1E74)
       + ((v192 >> 2) & 0x36D5F9FE ^ 0xDD2FC717)
       + ((v204 + 894639982) ^ ((__PAIR64__(v192 ^ 0xEBA5, v192 ^ 0xAB400000) >> 18)
                              - ((2 * (__PAIR64__(v192 ^ 0xEBA5, v192 ^ 0xAB400000) >> 18)) & 0x44C60B7A)
                              - 1570568771) ^ 0x97301AD3)
       + ((v226 >> 10) ^ 0x98A6C36A)
       + ((v125 >> 19) ^ 0xFDFFE01D)
       + (v227 ^ 0x80990416)
       + ((2 * (v125 >> 19)) & 0xFBFFC03A)
       - ((2 * v227) & 0xFECDF7D2)
       + ((v226 >> 9) & 0x7ED4F2 ^ 0xFFB37B2F)
       - 1001290935;
  HIDWORD(v843) = v215;
  unsigned int v231 = (v215 ^ 0x247F5497) + (v230 ^ 0xF7FE66FA) + ((2 * v230) & 0xEFFCCDF4) + 134322438;
  int v232 = (__PAIR64__(v213 ^ 0x40D6, v213 ^ 0x329C0000) >> 18)
       - ((2 * (__PAIR64__(v213 ^ 0x40D6, v213 ^ 0x329C0000) >> 18)) & 0x3FDA57B2);
  HIDWORD(v125) = v226 ^ 0x3B1E5;
  LODWORD(v125) = v226 ^ 0x99580000;
  int v233 = v125 >> 18;
  HIDWORD(v125) = v226 ^ 0x65;
  LODWORD(v125) = v226 ^ 0x995BB180;
  int v234 = v125 >> 7;
  HIDWORD(v125) = v203 ^ 0x25049;
  LODWORD(v125) = v203 ^ 0xD8680000;
  int v235 = v125 >> 18;
  unsigned int v236 = (v231 - ((2 * v231) & 0x1BE4BFD4) + 233988074) ^ v215;
  HIDWORD(v125) = v236 ^ 0x50B7D;
  LODWORD(v125) = v236 ^ 0x29880000;
  int v237 = v125 >> 19;
  HIDWORD(v125) = v224 ^ 0x50780;
  LODWORD(v125) = v224 ^ 0xB1880000;
  int v238 = v125 >> 19;
  HIDWORD(v125) = v224 ^ 0x10780;
  LODWORD(v125) = v224 ^ 0xB18C0000;
  int v239 = (v238 ^ 0x668B5F7E)
       + ((v125 >> 17) ^ 0x39F3FCDF)
       + ((2 * (v125 >> 17)) & 0x73E7F9BE)
       + ((2 * v238) & 0xCD16BEFC);
  unsigned int v240 = (v218 ^ 0xB37FFBEE)
       + ((v194 >> 3) ^ 0x6C14AFDF)
       + (v225 ^ 0x79DEFFF7)
       + ((v194 >> 2) & 0x3F7FDDF4 ^ 0x27568040)
       + ((2 * v218) & 0x66FFF7DC)
       + ((2 * v225) & 0xF3BDFFEE)
       + ((v239 - ((2 * v239 - 1090435258) & 0xC9C069D0) - 1000286069) ^ (v224 >> 10) ^ 0x9B33A856);
  LODWORD(a37) = v203;
  unsigned int v241 = ((v203 >> 3) ^ 0xE9C997B6)
       + (v229 ^ 0xAD6DFFFF)
       + (v235 ^ 0xC42A004)
       + ((v203 >> 2) & 0x2589BB7E ^ 0x24089012)
       + ((2 * v229) & 0x5ADBFFFE)
       - ((2 * v235) & 0xE77ABFF6)
       + ((v236 >> 10) ^ 0x3FD5BC35);
  int v242 = v236 ^ 0x10B7D;
  int v243 = v236 ^ 0x298C0000;
  HIDWORD(v125) = v236 ^ 0x10B7D;
  LODWORD(v125) = v236 ^ 0x298C0000;
  unsigned int v244 = v236;
  int v245 = v241
       + ((v125 >> 17) ^ 0x7DFEEFFF)
       + (v237 ^ 0x7BFEB6F3)
       + ((v236 >> 9) & 0x3FBEEE ^ 0x148684)
       + ((2 * (v125 >> 17)) & 0xFBFDDFFE)
       + ((2 * v237) & 0xF7FD6DE6)
       + 1;
  LODWORD(a34) = v194 ^ 0x9D5A092A;
  unsigned int v246 = (v194 ^ 0x554E2D37 ^ (v245 - ((2 * v245 + 861534120) & 0x9028483A) - 507437071)) + (v194 ^ 0x9D5A092A);
  unsigned int v247 = v240 - ((2 * v240 + 633481796) & 0x388D15E4) - 282615788;
  HIDWORD(v125) = v247 ^ 0x68AF2;
  LODWORD(v125) = v247 ^ 0x9C400000;
  int v248 = v125 >> 19;
  int v249 = __PAIR64__(v242, v243) >> 18;
  HIDWORD(v125) = v247 ^ 0x8AF2;
  LODWORD(v125) = v247 ^ 0x9C460000;
  int v250 = ((v125 >> 17) ^ 0xF7AFCE7B)
       + (v248 ^ 0x7FBDBFBF)
       + ((2 * v248) & 0xFF7B7F7E)
       + ((2 * (v125 >> 17)) & 0xEF5F9CF6);
  unsigned int v251 = v246 - 55481856 - ((2 * v246) & 0xF962D4E2) + 113;
  HIDWORD(v125) = v251 ^ 0x16A71;
  LODWORD(v125) = v251 ^ 0xFCB00000;
  int v252 = v125 >> 17;
  HIDWORD(v125) = v251 ^ 0x16A71;
  LODWORD(v125) = v251 ^ 0xFCB00000;
  int v253 = v125 >> 19;
  unsigned int v254 = (v253 ^ 0x66400084) + (v252 ^ 0xEDEFE7BF);
  unsigned int v255 = (v233 ^ 0x414A040) + (v234 ^ 0xBBE7FF2F) + ((2 * v234) & 0x77CFFE5E) - ((2 * v233) & 0xF7D6BF7E) + 1;
  unsigned int v256 = (2 * v252) & 0xDBDFCF7E;
  HIDWORD(v125) = v224 ^ 0x10780;
  LODWORD(v125) = v224 ^ 0xB18C0000;
  int v257 = v125 >> 18;
  HIDWORD(v125) = v224;
  LODWORD(v125) = v224 ^ 0xB18D0780;
  int v258 = v125 >> 7;
  HIDWORD(v846) = v224;
  HIDWORD(a36) = v221;
  unsigned int v259 = ((v221 >> 3) ^ 0xFBA57BC0)
       + ((v221 >> 2) & 0x3BEDE7B4 ^ 0x8A50034)
       + 34147366
       + ((v250 + 991823354 - ((2 * v250 + 287630220) & 0x65172868)) ^ (v247 >> 10) ^ 0xB2AC8596);
  HIDWORD(v125) = v244 ^ 0xFFFFFFFD;
  LODWORD(v125) = v244 ^ 0x298D0B00;
  int v260 = v125 >> 7;
  unsigned int v261 = ((v232 + 535636953) ^ v228 ^ 0x1A0E956B) + (v259 ^ 0x1200E09) - ((2 * v259) & 0xFDBFE3EC) - 18877961;
  unsigned int v262 = v247;
  HIDWORD(v125) = v247 ^ 0x28AF2;
  LODWORD(v125) = v247 ^ 0x9C440000;
  int v263 = (v125 >> 18) - ((2 * (v125 >> 18)) & 0xEB81C1C8);
  unsigned int v264 = (v257 ^ 0x81401180) + (v258 ^ 0xFCB526F9) + ((2 * v258) & 0xF96A4DF2) - ((2 * v257) & 0xFD7FDCFE) + 1;
  int v265 = v254 + v256 - ((2 * v253) & 0x337FFEF6);
  HIDWORD(v125) = a54 ^ 0xFFFFFFE1;
  LODWORD(v125) = a54 ^ 0xE28A1380;
  int v266 = v125 >> 6;
  unsigned int v267 = v261 + 624364032 - ((2 * v261) & 0x4A6E14A4) + 82;
  HIDWORD(v125) = v267 ^ 0x70A52;
  LODWORD(v125) = v267 ^ 0x25300000;
  int v268 = v125 >> 19;
  HIDWORD(v125) = v262 ^ 0x72;
  LODWORD(v125) = v262 ^ 0x9C468A80;
  int v269 = (v125 >> 7) - ((2 * (v125 >> 7)) & 0x2735C8D6);
  unsigned int v270 = ((v255 - ((2 * v255 + 442656) & 0x4B8C0574) - 439786678) ^ (v226 >> 3) ^ 0xB6ED7486) + (v221 ^ 0x329C40D6);
  unsigned int v271 = (v270 ^ 0x7CA73B32)
       + ((2 * v270) & 0xF94E7664)
       - 2091334450
       + ((v265 + 1 - ((2 * (v265 + 1) + 1470115704) & 0x856F2530) + 1854384724) ^ (v251 >> 10) ^ 0xC288BEC2);
  HIDWORD(v125) = v267 ^ 0x10A52;
  LODWORD(v125) = v267 ^ 0x25360000;
  int v272 = ((v264 - ((2 * v264 + 68521740) & 0x8C61AD94) + 1211866704) ^ (v224 >> 3) ^ 0xD001763A)
       + ((v267 >> 10) ^ 0x28994DE6)
       + (v268 ^ 0xC8222864)
       + ((v125 >> 17) ^ 0x88219040)
       + ((v267 >> 9) & 0x5FFFB6 ^ 0xFFED647B)
       - ((2 * (v125 >> 17)) & 0xEFBCDF7E)
       - ((2 * v268) & 0x6FBBAF36)
       - 2027141319;
  unint64_t v845 = __PAIR64__(v244, v226);
  unsigned int v273 = (v226 ^ 0x5F34B0D8 ^ (v272 - ((2 * v272) & 0x8CDE027A) - 965803715)) + (v226 ^ 0x995BB1E5);
  unsigned int v274 = v273 + 2094467584 - ((2 * v273) & 0xF9AE14CC);
  unsigned int v275 = (v221 ^ 0x329C40D6) + (v271 ^ 0xFF73EFB7) + ((2 * v271) & 0xFEE7DF6E) + 9179209;
  unsigned int v276 = v275 - 82846990 - ((2 * v275) & 0xF61FB5E4);
  LODWORD(a41) = v251;
  HIDWORD(v125) = v251 ^ 0xFFFFFFF1;
  LODWORD(v125) = v251 ^ 0xFCB16A00;
  int v277 = v125 >> 7;
  HIDWORD(v125) = v276 ^ 0x1DAF2;
  LODWORD(v125) = v276 ^ 0xFB0E0000;
  int v278 = (v125 >> 17) - ((2 * (v125 >> 17)) & 0xE5FA6DE0);
  HIDWORD(v125) = a54 ^ 0x3A1;
  LODWORD(v125) = a54 ^ 0xE28A1000;
  int v279 = v125 >> 11;
  unsigned int v280 = v274 + 102;
  HIDWORD(v125) = (v274 + 102) ^ 0x70A66;
  LODWORD(v125) = (v274 + 102) ^ 0x7CD00000;
  int v281 = v125 >> 19;
  int v282 = __PAIR64__(v251 ^ 0x16A71, v251 ^ 0xFCB00000) >> 18;
  unsigned int v283 = (v282 ^ 0x80008401) + (v277 ^ 0xE3FDFFB9);
  unsigned int v284 = (2 * v282) & 0xFFFEF7FC;
  HIDWORD(v125) = v276 ^ 0x7DAF2;
  LODWORD(v125) = v276 ^ 0xFB080000;
  int v285 = ((v244 >> 3) ^ 0xFBEA7E99)
       + (v249 ^ HIDWORD(a12))
       + ((2 * v249) & 0xFBFBE57E)
       + ((v244 >> 2) & 0x3DB7BFEC ^ 0x82302CC)
       + 52833611
       + (((v125 >> 19) - ((2 * (v125 >> 19)) & 0x386484D4) - 1674427798) ^ (v276 >> 10) ^ (v278 + 1929197296) ^ 0xEEF1B76C);
  unsigned int v286 = (v260 ^ 0x7BFEFF7D) + ((2 * v260) & 0xF7FDFEFA) + (v285 ^ 0x8C120920) - ((2 * v285) & 0xE7DBEDBE) + 1;
  unsigned int v287 = v286 - ((2 * v286 - 270668092) & 0xB884749A);
  HIDWORD(v125) = a54 ^ 0x8A13A1;
  LODWORD(v125) = a54 ^ 0xE2000000;
  int v288 = v125 >> 25;
  HIDWORD(v125) = v267 ^ 0x30A52;
  LODWORD(v125) = v267 ^ 0x25340000;
  int v289 = (v125 >> 18) - ((2 * (v125 >> 18)) & 0x2DE0AA54);
  unsigned int v290 = (v288 ^ 0x908960E2)
       + (v266 ^ 0xDF3FF7F5)
       + (v279 ^ 0x4A62000A)
       + ((2 * v266) & 0xBE7FEFEA)
       - ((2 * v288) & 0xDEED3E3A)
       - ((2 * v279) & 0x6B3BFFEA);
  HIDWORD(v125) = v280 ^ 0x10A66;
  LODWORD(v125) = v280 ^ 0x7CD60000;
  int v291 = v125 >> 17;
  unsigned int v292 = v267;
  HIDWORD(v125) = v267 ^ 0x52;
  LODWORD(v125) = v267 ^ 0x25370A00;
  int v293 = v125 >> 7;
  int v294 = v290 + 2 - ((2 * (v290 + 2) + 195644986) & 0x50897278);
  HIDWORD(v125) = v276 ^ 0x72;
  LODWORD(v125) = v276 ^ 0xFB0FDA80;
  int v839 = v125 >> 7;
  HIDWORD(v125) = v280 ^ 0x30A66;
  LODWORD(v125) = v280 ^ 0x7CD40000;
  HIDWORD(a42) = v125 >> 18;
  unsigned int v295 = ((v262 >> 3) ^ 0xEC713C2D)
       + ((v262 >> 2) & 0x3FF3DAE6 ^ 0x271182A4)
       + 397965
       + ((v263 + 1975574756) ^ (v269 + 328918123) ^ 0x665A048F);
  unsigned int v296 = (v295 ^ 0xBEEBFDF2)
       + ((2 * v295) & 0x7DD7FBE4)
       + ((v280 >> 10) ^ 0x7A004A5F)
       + (v291 ^ 0x7C9FFBF6)
       + (v281 ^ 0xE2200414)
       + ((2 * (v280 >> 10)) & 0x3EFF3A ^ 0x3E6B00)
       + ((2 * v291) & 0xF93FF7EC)
       - ((2 * v281) & 0x3BBFF7D6)
       + 1;
  HIDWORD(v125) = a54 ^ 1;
  LODWORD(v125) = a54 ^ 0xE28A13A0;
  int v297 = v125 >> 2;
  int v298 = (v244 ^ 0x352E45CF ^ (v296 - ((2 * v296 + 275317964) & 0x39469D64) - 2066231016)) + (v244 ^ 0x298D0B7D);
  unsigned int v299 = v298 + 1690186719 - ((2 * v298) & 0xC97C67BE);
  unsigned int v300 = v283 + ((2 * v277) & 0xC7FBFF72) - v284 + 1;
  HIDWORD(v125) = a54 ^ 0xA13A1;
  LODWORD(v125) = a54 ^ 0xE2800000;
  int v301 = v125 >> 22;
  HIDWORD(v125) = (v287 - 734973521) ^ 0x3A4D;
  LODWORD(v125) = (v287 - 734973521) ^ 0xDC420000;
  int v302 = v125 >> 17;
  HIDWORD(v125) = v299 ^ 0x633DF;
  LODWORD(v125) = v299 ^ 0x64B80000;
  int v303 = (v125 >> 19) - ((2 * (v125 >> 19)) & 0x4CDAD6DA);
  HIDWORD(v125) = a54 ^ 0x13A1;
  LODWORD(v125) = a54 ^ 0xE28A0000;
  unsigned int v304 = v292;
  unsigned int v305 = ((v292 >> 3) ^ 0xF2015C91)
       + ((v292 >> 2) & 0x2D4F7BB6 ^ 0x94D4294)
       + 156779045
       + ((v289 - 1762634454) ^ (v293 - ((2 * v293) & 0x94B4D4) + 4872810) ^ 0x96BA0F40);
  unsigned int v872 = v287 - 734973521;
  LODWORD(v838) = (v287 - 734973521) ^ 0xDC400000;
  HIDWORD(v838) = (v287 - 734973521) ^ 0x23A4D;
  int v306 = ((v300 - ((2 * v300 + 939718794) & 0xD57DFF18) + 113277905) ^ (v251 >> 3) ^ 0x7528D2C2)
       + ((v872 >> 10) ^ 0x7E896FFE)
       + (v302 ^ 0x9BE59F27)
       + ((v838 >> 19) ^ 0x80280A3)
       + ((v872 >> 9) & 0x7CFEE0 ^ 0x6C2000)
       + ((2 * v302) & 0x37CB3E4E)
       - ((2 * (v838 >> 19)) & 0xEFFAFEB8)
       - 581345082;
  unsigned int v307 = a59 ^ ((a54 ^ 0xE28A13A1)
              + (a55 ^ a54 ^ 0xC8A85BB)
              - ((2 * ((a54 ^ 0xE28A13A1) + (a55 ^ a54 ^ 0xC8A85BB))) & 0x245E1012)
              + 305072137) ^ 0x3DE53298 ^ (v294 + 1847156825);
  int v308 = (((a54 ^ 0xE28A13A1) + (a55 ^ 0xEE00961A)) ^ 0x87110000)
       + (v301 ^ 0x63FEFBFB)
       + (v297 ^ 0x2E6FE67F)
       + ((v125 >> 13) ^ 0xA422220B)
       + ((2 * v301) & 0xC7FDF7F6)
       + ((2 * v297) & 0x5CDFCCFE)
       - ((2 * ((a54 ^ 0xE28A13A1) + (a55 ^ 0xEE00961A))) & 0xF1DDFFFE)
       - ((2 * (v125 >> 13)) & 0xB7BBBBE8);
  unsigned int v309 = (a56 ^ a54 ^ 0x5D54EBFC)
       - 1005738695
       + (((a55 ^ 0xEE00961A) + (a56 ^ 0xBFDEF85D)) ^ 0x3BDDEAC7)
       + ((2 * ((a55 ^ 0xEE00961A) + (a56 ^ 0xBFDEF85D))) & 0x77BBD58E)
       + 1339392;
  unsigned int v310 = v308
       + (v309 ^ 0x444DE7DF)
       + ((2 * v309) & 0x889BCFBE)
       + ((v307 + 694531638) ^ 0xEDDDD7CB)
       + ((2 * (v307 + 694531638)) & 0xDBBBAF96)
       + (v853 ^ 0xDD7FFF36)
       + ((2 * v853) & 0xBAFFFE6C)
       + 2;
  unsigned int v311 = v299;
  HIDWORD(v125) = v299 ^ 0x33DF;
  LODWORD(v125) = v299 ^ 0x64BE0000;
  int v312 = (v125 >> 17) - ((2 * (v125 >> 17)) & 0xDC70F4D4);
  HIDWORD(a38) = v240 - ((2 * v240 + 633481796) & 0x388D15E4) - 282615788;
  HIDWORD(v125) = v276 ^ 0x3DAF2;
  LODWORD(v125) = v276 ^ 0xFB0C0000;
  int v313 = v125 >> 18;
  unsigned int v314 = (v262 ^ 0x63B9750D) + (v262 ^ 0xF242F5A4 ^ (v306 - ((2 * v306) & 0xDC08FEAC) + 1845788502)) + 1;
  unsigned int v315 = v314 - 108478174 + (~(2 * v314) | 0xCEE7DBD);
  unsigned int v316 = v310 - ((2 * v310 + 1701083442) & 0xBAB25BD2) - 1878300030;
  unsigned int v317 = (v316 << 21) ^ 0xBD200000;
  unsigned int v318 = (((v317 - ((2 * v317) & 0x11400000) - 2000996997) & 0xF8000000 ^ 0x421AA692)
        + ((v317 - ((2 * v317) & 0x11400000) - 2000996997) & 0xE0000000 ^ 0xA0A55820)
        - (((v317 - ((2 * v317) & 0x11400000) - 2000996997) & 0xF8000000 ^ 0x421AA692) & 0xE0088492)) ^ 0xAEF49A25;
  unsigned int v319 = (-450172777 - (v318 | 0xE52AE897) + (v318 | 0x1AD51768)) ^ 0x9E96F76D;
  int v320 = (v316 >> 11) ^ 0xBAB25;
  unsigned int v321 = ((v311 >> 10) ^ 0x1091B78C)
       + ((v311 >> 9) & 0x6ECFFE ^ 0xFFDDB0E7)
       - 277387263
       + ((v303 + 644705133) ^ (v312 - 298288534) ^ 0xC8551107);
  HIDWORD(v859) = v280;
  HIDWORD(v125) = v280 ^ 0x66666666;
  LODWORD(v125) = v280 ^ 0x7CD70A00;
  int v322 = v125 >> 7;
  int v323 = v316 ^ 0x5D592DE9;
  unsigned int v324 = (v316 ^ 0x5D592DE9)
       + (a54 ^ 0xE28A13A1)
       - 532775603
       - ((2 * ((v316 ^ 0x5D592DE9) + (a54 ^ 0xE28A13A1))) & 0xC07CFA9A);
  HIDWORD(v125) = (v316 >> 11) ^ 0x3AB25;
  LODWORD(v125) = ((v319 | v320) - ((2 * (v319 | v320)) & 0xD170D740) + 1756916640) ^ 0x68B80000;
  int v325 = (v125 >> 19) + 896696320 - ((2 * (v125 >> 19)) & 0x6AE5001C);
  unsigned int v326 = (v321 - ((2 * v321) & 0x2DCD5C7C) + 384216638) ^ (v305 - ((2 * v305) & 0xED435B36) - 157176421);
  HIDWORD(v125) = v315 ^ 0xC121;
  LODWORD(v125) = v315 ^ 0xF9880000;
  int v327 = (v125 >> 19) - ((2 * (v125 >> 19)) & 0x5319FAAC);
  HIDWORD(v125) = (v325 + 14) ^ 0xE;
  LODWORD(v125) = (v325 + 14) ^ 0x35728000;
  int v328 = (v125 >> 8) + 1788188704 + (~(2 * (v125 >> 8)) | 0x2AD4CFBF);
  HIDWORD(v125) = v316 ^ 0x1592DE9;
  LODWORD(v125) = v316 ^ 0x5C000000;
  int v329 = v125 >> 25;
  HIDWORD(v125) = v316 ^ 0x192DE9;
  LODWORD(v125) = v316 ^ 0x5D400000;
  int v330 = v125 >> 22;
  HIDWORD(v125) = v315 ^ 0xC121;
  LODWORD(v125) = v315 ^ 0xF9880000;
  unsigned int v331 = (v317 + 1831963319 - ((2 * v317) & 0xDA400000)) ^ 0x6D318AB7 | v320;
  unsigned int v332 = v331 - ((2 * v331) & 0xC106B3A0);
  HIDWORD(v850) = a55 ^ 0xEE00961A;
  unint64_t v847 = __PAIR64__(v326, v315);
  int v333 = ((v315 >> 10) ^ 0xFD6909CE)
       + ((v315 >> 9) & 0x2ED7FC ^ 0x2CC460)
       + 44602370
       + (((v125 >> 17) - ((2 * (v125 >> 17)) & 0x693AE01E) - 1264750577) ^ (v327 - 1450377898) ^ 0x1D118D59);
  HIDWORD(v125) = v326 ^ 0x103A5;
  LODWORD(v125) = v326 ^ 0xE0460000;
  int v334 = (v125 >> 17) - ((2 * (v125 >> 17)) & 0x365A9034);
  unsigned int v335 = (v328 + 1) ^ 0x6A959820 | (((v316 << 26) ^ 0xA4000000)
                                  + 363942263
                                  - ((2 * ((v316 << 26) ^ 0xA4000000)) & 0x28000000)) ^ 0x15B15177;
  HIDWORD(v125) = v326 ^ 0x703A5;
  LODWORD(v125) = v326 ^ 0xE0400000;
  int v336 = (v125 >> 19) + 1971654253 + (~(2 * (v125 >> 19)) | 0x14F5E327);
  HIDWORD(v125) = v316 ^ 1;
  LODWORD(v125) = v316 ^ 0x5D592DE8;
  int v337 = v125 >> 2;
  HIDWORD(v125) = v316 ^ 0xDE9;
  LODWORD(v125) = v316 ^ 0x5D592000;
  int v338 = v125 >> 13;
  HIDWORD(v844) = v304;
  unsigned int v339 = (v304 ^ 0xDAC8F5AD) + (v333 ^ 0x1FBDFDA) + ((2 * v333) & 0x3F7BFB4) - 33284057;
  unsigned int v340 = ((v276 >> 3) ^ 0xCF30BB1F)
       + (v839 ^ 0xBBD7FFDF)
       + (v313 ^ 0xA0843012)
       + ((v276 >> 2) & 0x1F5D7F7C ^ 0xE1BE89C3)
       + ((2 * v839) & 0x77AFFFBE)
       - ((2 * v313) & 0xBEF79FDA)
       + (v339 ^ 0x2F6DDFCE)
       + ((2 * v339) & 0x5EDBBF9C)
       + 3;
  unsigned int v341 = ((v332 - 528262704) ^ 0x419E5FBD ^ (v335 - ((2 * v335) & 0x423A0CDA) - 1591933331))
       + (a55 ^ v324 ^ 0xFD6D5FD9 ^ ((a55 ^ 0x11FF69E5)
                                   + (v316 ^ 0x5D592DE9)
                                   + 1
                                   - ((2 * ((a55 ^ 0x11FF69E5) + (v316 ^ 0x5D592DE9) + 1)) & 0xE6A7691C)
                                   - 212618098));
  unsigned int v342 = (a56 ^ 0xBFDEF85D) + (v329 ^ 0x7FA7D53F) + ((2 * v329) & 0xFF4FAA7E) - 2141705535;
  unsigned int v343 = (v342 ^ 0x277FFF77) + ((2 * v342) & 0x4EFFFEEE) + (v341 ^ 0x2524044) - ((2 * v341) & 0xFB5B7F76) + 1;
  int v344 = ((v326 >> 10) ^ 0x33CEA93F)
       + ((v326 >> 9) & 0x6D71FE ^ 0x602180)
       - 871807231
       + ((v334 + 455952410) ^ v336 ^ 0x6EA84676);
  HIDWORD(v125) = v311 ^ 0xFFFFFFDF;
  LODWORD(v125) = v311 ^ 0x64BE3380;
  LODWORD(v851) = v125 >> 7;
  unsigned int v345 = ((v280 >> 3) ^ 0x8E8EF13F)
       + (v322 ^ 0x72BDF663)
       + (HIDWORD(a42) ^ 0xF35FCDBF)
       + ((2 * (v280 >> 3)) & 0x3DD7DF18 ^ 0xE2EA3DE7)
       + ((2 * v322) & 0xE57BECC6)
       + ((2 * HIDWORD(a42)) & 0xE6BF9B7E)
       + (v344 ^ 0x10EC8000)
       - ((2 * v344) & 0xDE26FFFE)
       + 3;
  unsigned int v346 = (a54 ^ 0xBFD33E48 ^ v316)
       + (((v316 ^ 0x5D592DE9) + (a55 ^ 0xEE00961A)) ^ 0xE0320102)
       - ((2 * ((v316 ^ 0x5D592DE9) + (a55 ^ 0xEE00961A))) & 0x3F9BFDFA)
       + 533593854;
  unsigned int v347 = (((a55 ^ 0xEE00961A) + (a54 ^ 0x1D75EC5E) + 1) ^ 0xEFF7EB7E)
       + ((2 * ((a55 ^ 0xEE00961A) + (a54 ^ 0x1D75EC5E) + 1)) & 0xDFEFD6FC)
       + (v330 ^ 0x81484802)
       + (v338 ^ 0xD7B3DBF5)
       + (v337 ^ 0xFDDDFFF6)
       + ((2 * v338) & 0xAF67B7EA)
       + ((2 * v337) & 0xFBBBFFEC)
       - ((2 * v330) & 0xFD6F6FFA)
       + (v346 ^ 0x7F6F37DF)
       + ((2 * v346) & 0xFEDE6FBE)
       + 968800438
       + (v849 ^ 0x378CCCBB ^ (v343 - ((2 * v343 + 734026372) & 0x29A5C94E) - 357363223));
  int v348 = v347 - 1096878080 - ((2 * v347) & 0x7D3DF616);
  HIDWORD(v840) = v311;
  HIDWORD(v125) = v311 ^ 0x233DF;
  LODWORD(v125) = v311 ^ 0x64BC0000;
  LODWORD(v850) = v125 >> 18;
  LODWORD(v846) = v276;
  int v349 = (v846 ^ 0x4F0250D) + (v846 ^ 0xFC040A2E ^ (v345 - ((2 * v345 + 264459986) & 0xE17A1B8) + 250444869)) + 1;
  HIDWORD(v125) = v872 ^ 0x4D;
  LODWORD(v125) = v872 ^ 0xDC423A00;
  LODWORD(v840) = (v125 >> 7) - ((2 * (v125 >> 7)) & 0xE3CD0492);
  int v350 = v348 + 779;
  unsigned int v351 = (v348 + 779) ^ 0xBE9EFB0B;
  unsigned int v352 = ((2 * (v351 + (v316 ^ 0x5D592DE9))) & 0xF6FEF59E) + ((v351 + (v316 ^ 0x5D592DE9)) ^ 0xFB7F7ACF);
  HIDWORD(v838) = (v838 >> 18) - ((2 * (v838 >> 18)) & 0x7BD0F1CE);
  HIDWORD(v125) = (v348 + 779) ^ 0xB;
  LODWORD(v125) = (v348 + 779) ^ 0xBE9EFB00;
  int v353 = (v125 >> 6) - ((2 * (v125 >> 6)) & 0xC6391E44);
  HIDWORD(v125) = (v348 + 779) ^ 0x30B;
  LODWORD(v125) = (v348 + 779) ^ 0xBE9EF800;
  int v354 = (v125 >> 11) - ((2 * (v125 >> 11)) & 0xDBDBC664);
  HIDWORD(v125) = (v348 + 779) ^ 0x1B0B;
  LODWORD(v125) = (v348 + 779) ^ 0xBE9EE000;
  int v355 = v125 >> 13;
  HIDWORD(v125) = (v348 + 779) ^ 0x9EFB0B;
  LODWORD(v125) = (v348 + 779) ^ 0xBE000000;
  int v356 = ((v125 >> 25) ^ 0x39EFFFE1)
       + ((2 * (v125 >> 25)) & 0x73DFFFC2)
       - 972029921
       + ((v354 + 1844306738) ^ (v353 - 484667614) ^ 0x8EF16C10);
  unsigned int v357 = (a54 ^ 0x5C14E8AA ^ (v348 + 779)) + 75531569 + v352;
  HIDWORD(v125) = (v348 + 779) ^ 0x1EFB0B;
  LODWORD(v125) = (v348 + 779) ^ 0xBE800000;
  int v358 = v125 >> 22;
  int v359 = (v340 - ((2 * v340 + 130637820) & 0x3CE17048) + 1112893474) ^ v304;
  HIDWORD(v125) = v359 ^ 0x7B276;
  LODWORD(v125) = v359 ^ 0xBB400000;
  int v360 = v125 >> 19;
  HIDWORD(v125) = -808 - v348;
  LODWORD(v125) = (v348 + 779) ^ 0xBE9EFB08;
  int v361 = v125 >> 2;
  int v362 = v360 - ((2 * v360) & 0x897F7756);
  unsigned int v363 = (a54 ^ 0xE28A13A1) + (v357 ^ 0x77BDEBFD) + ((2 * v357) & 0xEF7BD7FA) - 2008935421;
  unsigned int v364 = (v363 ^ 0xFE3679BF)
       + ((2 * v363) & 0xFC6CF37E)
       + 29984321
       + (a55 ^ 0x255F8CBE ^ (v356 - ((2 * v356) & 0x96BE3548) - 882959708));
  unsigned int v365 = v359;
  HIDWORD(a42) = v359;
  HIDWORD(v125) = v359 ^ 0x1B276;
  LODWORD(v125) = v359 ^ 0xBB460000;
  int v366 = (v125 >> 17) - ((2 * (v125 >> 17)) & 0x62EBFB94);
  unsigned int v367 = (v358 ^ 0xA1020801)
       + (v361 ^ 0xCFCBF7D5)
       + (v355 ^ 0xEBFDFFBA)
       + ((2 * v361) & 0x9F97EFAA)
       + ((2 * v355) & 0xD7FBFF74)
       - ((2 * v358) & 0xBDFBEFFC);
  unsigned int v368 = (v324 ^ 0xE03E7D4D)
       + ((v351 + 1 + (v316 ^ 0xA2A6D216) - ((2 * (v351 + 1 + (v316 ^ 0xA2A6D216))) & 0x7DEC15DE) + 1056312047) ^ (v351 + (a54 ^ 0xE28A13A1) + 240762166 + (~(2 * (v351 + (a54 ^ 0xE28A13A1))) | 0xE34C8595)) ^ 0xCF504825)
       + 1;
  int v369 = v367
       + (v368 ^ 0xBFD67BF9)
       + ((2 * v368) & 0x7FACF7F2)
       - 480410505
       + (v842 ^ 0x176A5998 ^ (((2 * v364) & 0xD5B95E44)
                             + (v364 ^ 0x6ADCAF22)
                             - ((2 * (((2 * v364) & 0xD5B95E44) + (v364 ^ 0x6ADCAF22)) + 182732104) & 0x12CA29CE)
                             - 1630062709));
  int v370 = v369 - 1083024199 - ((2 * v369) & 0x7EE4B972);
  unsigned int v868 = v349 - ((2 * v349) & 0xC8B94FCC) - 463689754;
  HIDWORD(v125) = v868 ^ 0x4A7E6;
  LODWORD(v125) = v868 ^ 0xE4580000;
  int v371 = v125 >> 19;
  HIDWORD(v125) = v868 ^ 0xA7E6;
  LODWORD(v125) = v868 ^ 0xE45C0000;
  int v372 = v125 >> 17;
  unsigned int v373 = (v350 ^ 0x416104F4)
       + (v370 ^ 0xBF725CB9)
       + 1502413600
       - ((2 * ((v350 ^ 0x416104F4) + (v370 ^ 0xBF725CB9) + 1)) & 0xB31A063E);
  HIDWORD(v125) = v370 ^ 0x325CB9;
  LODWORD(v125) = v370 ^ 0xBF400000;
  int v374 = v125 >> 22;
  HIDWORD(v125) = v370 ^ 0x1CB9;
  LODWORD(v125) = v370 ^ 0xBF724000;
  int v375 = (v125 >> 13) - 1202542808 + (~(2 * (v125 >> 13)) | 0x8F5AB1B1);
  HIDWORD(v125) = v370 ^ 0x4B9;
  LODWORD(v125) = v370 ^ 0xBF725800;
  int v376 = (v125 >> 11) - ((2 * (v125 >> 11)) & 0x2FA58F64);
  HIDWORD(v125) = v370 ^ 1;
  LODWORD(v125) = v370 ^ 0xBF725CB8;
  int v377 = (v125 >> 2) - ((2 * (v125 >> 2)) & 0xAC18E9A8);
  HIDWORD(v125) = v370 ^ 0x1725CB9;
  LODWORD(v125) = v370 ^ 0xBE000000;
  int v378 = (v125 >> 25) - ((2 * (v125 >> 25)) & 0xA8416524);
  unsigned int v379 = (v374 ^ 0x224A6000) - ((2 * v374) & 0xBB6B3FFE) - 575299584 + ((v377 + 1443656916) ^ v375 ^ 0xEE5ED3F3);
  HIDWORD(v125) = v370 ^ 0xFFFFFFF9;
  LODWORD(v125) = v370 ^ 0xBF725C80;
  unsigned int v380 = (v373 ^ ((v370 ^ 0xBF725CB9)
                + (v316 ^ 0x5D592DE9)
                - ((2 * ((v370 ^ 0xBF725CB9) + (v316 ^ 0x5D592DE9))) & 0xC88B2712)
                + 1682281353) ^ 0x3DC89096)
       - v352;
  int v381 = (a54 ^ 0xE28A13A1)
       + ((v376 + 399689650) ^ ((v125 >> 6) - ((2 * (v125 >> 6)) & 0xA318DE4C) - 779325658) ^ (v378 - 736054638) ^ 0xED81E5F9);
  unsigned int v382 = v351 - 2080372686 + ((2 * v370) ^ 0x51B4EF9) + ((4 * v370) & 0xF7FFEF14 ^ 0xF5C96204) + 67;
  unsigned int v383 = ((2 * v316) ^ 0xC40DA539)
       + ((4 * v316) & 0xFD7FFDD4 ^ 0x7564B584)
       + (v382 ^ 0x2C069000)
       - ((2 * v382) & 0xA7F2DFFE)
       + ((v381 + 1) ^ 0xADDEE3F5)
       + ((2 * (v381 + 1)) & 0x5BBDC7EA)
       + 1;
  int v384 = (v841 ^ 0xB027D600 ^ (v383 - ((2 * v383 - 1166259114) & 0xA70A6944) + 818109133))
       + ((v379 - ((2 * v379) & 0x9A6B33E4) + 1295358450) ^ 0x4DB7F496 ^ (v380
                                                                        - ((2 * v380 + 16709022) & 0x104DAC8)
                                                                        - 66983885));
  unsigned int v385 = v384 - 523289688 - ((2 * v384) & 0xC19E7750);
  HIDWORD(v125) = v385 ^ 0x28;
  LODWORD(v125) = v385 ^ 0xE0CF3B80;
  int v386 = v125 >> 6;
  HIDWORD(v125) = v385 ^ 0x1BA8;
  LODWORD(v125) = v385 ^ 0xE0CF2000;
  int v387 = v125 >> 13;
  HIDWORD(v125) = v385 ^ 0xF3BA8;
  LODWORD(v125) = v385 ^ 0xE0C00000;
  int v388 = v125 >> 22;
  unsigned int v389 = (v371 ^ 0x29091221) + (v372 ^ 0x37D29EDD) + ((2 * v372) & 0x6FA53DBA) - ((2 * v371) & 0xADEDDBBC) + 1;
  HIDWORD(v857) = v389 - 1236774039 + (~(2 * v389 + 1044946434) | 0xD1B7F731);
  int v390 = (v370 ^ 0x408DA346) + 1;
  unsigned int v391 = (((v385 ^ 0xE0CF3BA8) + v390) ^ 0x5FF4CD5C) - 1609878876 + ((2 * ((v385 ^ 0xE0CF3BA8) + v390)) & 0xBFE99AB8);
  unsigned int v392 = (v350 ^ 0x416104F4)
       + (((v385 ^ 0xE0CF3BA8) + (v370 ^ 0xBF725CB9)) ^ 0xEDEFE5DD)
       + ((2 * ((v385 ^ 0xE0CF3BA8) + (v370 ^ 0xBF725CB9))) & 0xDBDFCBBA)
       + 303045156;
  unsigned int v393 = ((2 * (v351 + 1 + (v385 ^ 0x1F30C457))) & 0xBFD9BF7E)
       + ((v351 + 1 + (v385 ^ 0x1F30C457)) ^ 0xDFECDFBF)
       + (v392 ^ 0xFB76FD5F)
       + ((2 * v392) & 0xF6EDFABE);
  HIDWORD(v125) = v385 ^ 0xCF3BA8;
  LODWORD(v125) = v385 ^ 0xE0000000;
  int v394 = v125 >> 25;
  HIDWORD(v125) = v385 ^ 0x3A8;
  LODWORD(v125) = v385 ^ 0xE0CF3800;
  int v395 = (v394 ^ 0x517DADFF)
       + ((2 * v394) & 0xA2FB5BFE)
       - 1367191038
       + ((v386 - ((2 * v386) & 0xFB748A06) + 2109359363) ^ ((v125 >> 11) - ((2 * (v125 >> 11)) & 0xBAA08E6A) - 581941451) ^ 0x5F15FDC9);
  unsigned int v396 = v323 + (v395 ^ 0x6FFFEB47) + ((2 * v395) & 0xDFFFD68E) - 1879042887;
  int v397 = ((v393 + 433928664 + (~(2 * v393 + 1228424644) | 0x157DD215)) ^ 0x50580AC7 ^ (v396
                                                                                     - ((2 * v396) & 0x4A323864)
                                                                                     - 1525081038))
       + 672521749;
  HIDWORD(v125) = v384;
  LODWORD(v125) = v385 ^ 0xE0CF3BA8;
  unsigned int v398 = (v373 ^ 0x598D031F)
       + ((v391 + (v350 ^ 0x5E51C0A3 ^ v385)) ^ 0xFBA75DFE)
       + ((2 * (v391 + (v350 ^ 0x5E51C0A3 ^ v385))) & 0xF74EBBFC)
       + 72917506;
  unsigned int v399 = HIDWORD(v841) + (v397 ^ 0x4FFBFDBC) + ((2 * v397) & 0x9FF7FB78) - 1341914556;
  int v400 = ((v125 >> 2) ^ 0x5BE7FFDE)
       + (v388 ^ 0x9FFFBDEF)
       + (v387 ^ 0x890A0405)
       + ((2 * (v125 >> 2)) & 0xB7CFFFBC)
       + ((2 * v388) & 0x3FFF7BDE)
       - ((2 * v387) & 0xEDEBF7F4)
       + (v398 ^ 0xD8043C1)
       - ((2 * v398) & 0xE4FF787C)
       + (v399 ^ 0xEB53CDFF);
  unsigned int v401 = v400
       + 2
       + ((2 * v399) & 0xD6A79BFE)
       - 2 * ((v400 + 2 + ((2 * v399) & 0xD6A79BFE) + 37366892) & 0x70D4B23F ^ (v400 + 2) & 1)
       + 1930354346;
  unsigned int v402 = (v401 ^ 0xF0D4B23E)
       + (v385 ^ 0xE0CF3BA8)
       - 599513418
       - ((2 * ((v401 ^ 0xF0D4B23E) + (v385 ^ 0xE0CF3BA8))) & 0xB8884D6C);
  unsigned int v403 = ((2 * HIDWORD(v859)) ^ 0x4E60FB37)
       + ((4 * HIDWORD(v859)) & 0x6F9DDFF4 ^ 0x631C0990)
       + 1211174917
       + ((v366 - 1317667382) ^ (v365 >> 10) ^ (v362 + 1153416107) ^ 0xF5E4978D);
  HIDWORD(v125) = v401 ^ 2;
  LODWORD(v125) = v401 ^ 0xF0D4B23C;
  int v404 = v125 >> 2;
  HIDWORD(v125) = v401 ^ 0x123E;
  LODWORD(v125) = v401 ^ 0xF0D4A000;
  int v405 = v125 >> 13;
  HIDWORD(v125) = v401 ^ 0x3E;
  LODWORD(v125) = v401 ^ 0xF0D4B200;
  int v406 = v125 >> 6;
  HIDWORD(v125) = v401 ^ 0x14B23E;
  LODWORD(v125) = v401 ^ 0xF0FFFFFF;
  int v407 = v125 >> 22;
  HIDWORD(v125) = v401 ^ 0x23E;
  LODWORD(v125) = v401 ^ 0xF0D4B000;
  int v408 = v125 >> 11;
  unsigned int v409 = (v370 ^ 0xB0591178 ^ v401) + (v402 ^ 0xDC4426B6) + 1;
  HIDWORD(v125) = v401 ^ 0xD4B23E;
  LODWORD(v125) = v401 ^ 0xF0000000;
  unsigned int v410 = (((v401 ^ 0xF0D4B23E) + v390 - ((2 * ((v401 ^ 0xF0D4B23E) + v390)) & 0x39402922) + 480253073) ^ v402 ^ 0xC0E43227)
       + v391;
  int v411 = v351
       + (v408 ^ 0xCDA820)
       + ((v125 >> 25) ^ 0x3BBFF7FE)
       + (v406 ^ 0xDFD9FF5F)
       + ((2 * (v125 >> 25)) & 0x777FEFFC)
       + ((2 * v406) & 0xBFB3FEBE)
       - ((2 * v408) & 0xFE64AFBE)
       - 476553085;
  unsigned int v412 = (v411 ^ 0x7FDFEA7E)
       - 2145384815
       + ((2 * v411) & 0xFFBFD4FC)
       + (v370 ^ 0x4E2DCF3B ^ (v409 - ((2 * v409) & 0xE2BF2704) - 245394558))
       + 3825;
  int v413 = (DWORD1(v842) ^ 0x690D15D9) + (v412 ^ 0x3D7D9DF7) + ((2 * v412) & 0x7AFB3BEE) + 933432074;
  unsigned int v414 = (v407 ^ 0x100C89D4)
       + (v405 ^ 0xC6800201)
       + (v404 ^ 0x39D7EDFF)
       + ((2 * v404) & 0x73AFDBFE)
       - ((2 * v407) & 0xDFE6EC56)
       - ((2 * v405) & 0x72FFFBFC)
       + (v410 ^ 0x5FC68D6F)
       + ((2 * v410) & 0xBF8D1ADE)
       + (v413 ^ 0x7DB79DFA)
       + ((2 * v413) & 0xFB6F3BF4)
       + 2;
  unsigned int v415 = v414 - ((2 * v414 + 607827330) & 0x28A191AA);
  unsigned int v416 = v415 + 644752278;
  HIDWORD(v125) = (v415 + 644752278) ^ 0x55555555;
  LODWORD(v125) = (v415 + 644752278) ^ 0x1450C8C0;
  int v417 = v125 >> 6;
  int v418 = (v415 + 644752278) ^ 0x1450C8D5;
  unsigned int v419 = ((2 * (v418 + (v385 ^ 0xE0CF3BA8))) & 0xFFF773F6) + ((v418 + (v385 ^ 0xE0CF3BA8)) ^ 0x7FFBB9FB);
  HIDWORD(v125) = (v415 + 644752278) ^ 0x8D5;
  LODWORD(v125) = (v415 + 644752278) ^ 0x1450C000;
  int v420 = v125 >> 13;
  HIDWORD(v125) = (v415 + 644752278) ^ 0xD5;
  LODWORD(v125) = (v415 + 644752278) ^ 0x1450C800;
  int v421 = v125 >> 11;
  int v422 = (v401 ^ 0xF2B4DC1) + 1;
  HIDWORD(v125) = (v415 + 644752278) ^ 0x50C8D5;
  LODWORD(v125) = (v415 + 644752278) ^ 0x14000000;
  int v423 = (v125 >> 25) - ((2 * (v125 >> 25)) & 0x8B07D29C);
  HIDWORD(v125) = (v415 + 644752286) ^ 1;
  LODWORD(v125) = (v415 + 644752278) ^ 0x1450C8D4;
  int v424 = v125 >> 2;
  unsigned int v425 = (v418 + v422 - 65963919 - ((2 * (v418 + v422)) & 0xF822F0E2)) ^ 0xFC117871 ^ (v419 - 2147203579);
  unsigned int v426 = (v421 ^ 0x4BB3EFDB) + (v417 ^ 0x797C57FD) + ((2 * v417) & 0xF2F8AFFA) + ((2 * v421) & 0x9767DFB6);
  HIDWORD(v125) = v416 ^ 0x10C8D5;
  LODWORD(v125) = v416 ^ 0x14400000;
  int v427 = ((v125 >> 22) ^ 0x75FBDFF3)
       + (v424 ^ 0xBE7DDBFD)
       + (v420 ^ 0x36808D10)
       + ((2 * (v125 >> 22)) & 0xEBF7BFE6)
       + ((2 * v424) & 0x7CFBB7FA)
       - ((2 * v420) & 0x92FEE5DE)
       + 1;
  unsigned int v428 = ((v423 + 1166272846) ^ 0xB5BF356 ^ (v426 - 2 * ((v426 + 986691624) & 0x4ED81A1A ^ v426 & 2) - 1985490368))
       + (v370 ^ 0xBF725CB9);
  unsigned int v429 = ((v425 - 1815589301 - ((2 * v425) & 0x27909C96)) ^ 0x93C84E4B) + (v385 ^ 0x101B8996 ^ v401);
  unsigned int v430 = (v385 ^ 0xE0CF3BA8)
       + ((v418 + (v401 ^ 0xF0D4B23E)) ^ 0xEE87A07D)
       + ((2 * (v418 + (v401 ^ 0xF0D4B23E))) & 0xDD0F40FA)
       + v419
       - 1854102136;
  int v431 = (v859 ^ 0x2097FE61) + (v430 ^ 0xAF7DFAF7) + ((2 * v430) & 0x5EFBF5EE) + 1350698249;
  unsigned int v432 = (v431 ^ 0x2A04042)
       - ((2 * v431) & 0xFABF7F7A)
       + (v428 ^ 0xE7EF1F7F)
       + ((2 * v428) & 0xCFDE3EFE)
       + ((v427 - ((2 * v427 + 705392126) & 0x25BB7EB4) - 1478265255) ^ 0xDA59E6D0 ^ (v429
                                                                                    - ((2 * v429) & 0x9108B314)
                                                                                    - 930850422))
       - 1335681992;
  int v433 = v432 + 402274304 - ((2 * v432) & 0x2FF47E9A);
  int v434 = v433 + 1869;
  int v435 = (v433 + 1869) ^ 0x17FA3F4D;
  int v436 = ((v435 + v422) ^ 0x3AFDFFCE)
       + ((v435 + v418) ^ 0x2E7EF3FF)
       + ((2 * (v435 + v418)) & 0x5CFDE7FE)
       + ((2 * (v435 + v422)) & 0x75FBFF9C);
  unsigned int v437 = v436 - ((2 * v436 + 755374182) & 0x87DD9DE4);
  HIDWORD(v125) = (v433 + 1889) ^ 1;
  LODWORD(v125) = (v433 + 1869) ^ 0x17FA3F4C;
  int v438 = v125 >> 2;
  unsigned int v439 = (v416 ^ 0xEBAF372A) + 1;
  int v440 = v435 + v439 + 412483063 - ((2 * (v435 + v439)) & 0x312BFBEE);
  HIDWORD(v125) = v434 ^ 0xD;
  LODWORD(v125) = v434 ^ 0x17FA3F40;
  int v441 = v125 >> 6;
  HIDWORD(v125) = v434 ^ 0x74D;
  LODWORD(v125) = v434 ^ 0x17FA3800;
  int v442 = v125 >> 11;
  HIDWORD(v125) = v434 ^ 0x1F4D;
  LODWORD(v125) = v434 ^ 0x17FA2000;
  int v443 = v125 >> 13;
  HIDWORD(v125) = v434 ^ 0x1FA3F4D;
  LODWORD(v125) = v434 ^ 0x16000000;
  int v444 = v125 >> 25;
  HIDWORD(v125) = v434 ^ 0x3A3F4D;
  LODWORD(v125) = v434 ^ 0x17C00000;
  unsigned int v445 = (v442 ^ 0x11342606)
       + (v444 ^ 0xCD2AFEFF)
       + (v441 ^ 0x7B7EF77B)
       + ((2 * v444) & 0x9A55FDFE)
       + ((2 * v441) & 0xF6FDEEF6)
       - ((2 * v442) & 0xDD97B3F2)
       - 1507728512
       + (v401 ^ 0x3AAAF46C ^ ((v440 ^ 0x1895FDF7)
                             + (v401 ^ 0xE72E8D73 ^ v434)
                             - ((2 * ((v440 ^ 0x1895FDF7) + (v401 ^ 0xE72E8D73 ^ v434))) & 0x94FC8CA4)
                             - 897694126));
  unsigned int v446 = (v385 ^ 0xE0CF3BA8) + (v445 ^ 0xB6892239) - ((2 * v445) & 0x92EDBB8C) + 1232526791;
  unsigned int v447 = (v443 ^ 0x77B7E9FF) + ((2 * v443) & 0xEF6FD3FE) - 2008541695 + (v401 ^ v416 ^ 0x276AB419 ^ (v437 + 1517411109));
  int v448 = (v438 ^ 0xFED42DF5)
       + ((v125 >> 22) ^ 0xEF87ACE9)
       + ((2 * v438) & 0xFDA85BEA)
       + ((2 * (v125 >> 22)) & 0xDF0F59D2)
       + (v447 ^ 0xB000000)
       - ((2 * v447) & 0xE9FFFFFE);
  unsigned int v449 = (HIDWORD(v842) ^ 0x6ED89BDD) + (v446 ^ 0x7FFBCAEB) + ((2 * v446) & 0xFFF795D6) - 190921806;
  unsigned int v450 = v448 + (v449 ^ 0xB5FEF23C) + ((2 * v449) & 0x6BFDE478);
  int v451 = (2 * v450 + 558523852) & 0x34DCD9B0;
  v450 -= 351035458;
  unsigned int v452 = v450 - v451;
  HIDWORD(v125) = (v450 - v451) ^ 0x18;
  LODWORD(v125) = (v450 - v451) ^ 0x9A6E6CC0;
  int v453 = v125 >> 6;
  HIDWORD(v125) = v452 ^ 0x4D8;
  LODWORD(v125) = v452 ^ 0x9A6E6800;
  int v454 = v125 >> 11;
  HIDWORD(v125) = v452 ^ 0xCD8;
  LODWORD(v125) = v452 ^ 0x9A6E6000;
  int v455 = v125 >> 13;
  HIDWORD(v125) = v450;
  LODWORD(v125) = v452 ^ 0x9A6E6CD8;
  int v456 = (v455 ^ 0xFDBFFBEF) + ((v125 >> 2) ^ 0x737FFD77) + ((2 * (v125 >> 2)) & 0xE6FFFAEE) + ((2 * v455) & 0xFB7FF7DE);
  unsigned int v457 = (v454 ^ 0x80070504) + (v453 ^ 0xFEEFFFAF) + ((2 * v453) & 0xFDDFFF5E) - ((2 * v454) & 0xFFF1F5F6) + 1;
  HIDWORD(v125) = v452 ^ 0x2E6CD8;
  LODWORD(v125) = v452 ^ 0x9A400000;
  int v458 = (v125 >> 22) - ((2 * (v125 >> 22)) & 0x5F42EEEA);
  HIDWORD(v125) = v452 ^ 0x6E6CD8;
  LODWORD(v125) = v452 ^ 0x9A000000;
  unsigned int v459 = (v434 ^ v416 ^ v452 ^ 0xF2DAD852 ^ ((v452 ^ 0x9A6E6CD8)
                                           + v439
                                           - ((2 * ((v452 ^ 0x9A6E6CD8) + v439)) & 0xD63C8624)
                                           + 1797145362))
       - 898248179;
  int v460 = (v459 ^ 0x35EDFFDB)
       + ((2 * v459) & 0x6BDBFFB6)
       - 904789979
       + (v401 ^ ((v125 >> 25) - ((2 * (v125 >> 25)) & 0xFAC73AB4) - 43803302) ^ 0x46739111 ^ (v457
                                                                                             - ((2 * v457 + 34731672) & 0x97897CEA)
                                                                                             - 858932799));
  unsigned int v461 = (v843 ^ 0x4C8AF93D ^ (v460 - ((2 * v460) & 0x91880EB4) - 926677158))
       + (v434 ^ v416 ^ v440 ^ (v458 + 799111029) ^ 0xA847A8A ^ (v456 - ((2 * v456 + 494931252) & 0x7C340F20) - 858124758));
  int v462 = v461 - 2125588480 - ((2 * v461) & 0x29C3F08);
  int v463 = v462 + 1924;
  unsigned int v464 = (v462 + 1924) ^ 0x814E1F84;
  HIDWORD(v125) = (v462 + 1924) ^ 0x14E1F84;
  LODWORD(v125) = v462 - 2147481724;
  int v465 = v125 >> 25;
  HIDWORD(v125) = (v462 + 1924) ^ 4;
  LODWORD(v125) = (v462 + 1924) ^ 0x814E1F80;
  int v466 = v125 >> 6;
  unsigned int v467 = v464 + (v452 ^ 0x9A6E6CD8) + 1189952680 - ((2 * (v464 + (v452 ^ 0x9A6E6CD8))) & 0x8DDA7950);
  HIDWORD(v125) = v463 ^ 0x1F84;
  LODWORD(v125) = v463 ^ 0x814E0000;
  int v468 = v125 >> 13;
  HIDWORD(v125) = v463 ^ 0x784;
  LODWORD(v125) = v463 ^ 0x814E1800;
  int v469 = ((v125 >> 11) ^ 0xA443)
       + (v466 ^ 0xDF7EBFF5)
       + ((2 * v466) & 0xBEFD7FEA)
       - ((2 * (v125 >> 11)) & 0xFFFEB778)
       + 1;
  unsigned int v470 = v435
       + (((v434 ^ 0x96B420C9 ^ v463) + (v452 ^ 0x9A6E6CD8)) ^ 0xEFFBDFEB)
       + ((2 * ((v434 ^ 0x96B420C9 ^ v463) + (v452 ^ 0x9A6E6CD8))) & 0xDFF7BFD6)
       + 268705813;
  HIDWORD(v125) = v463 ^ 0xE1F84;
  LODWORD(v125) = v463 ^ 0x81400000;
  unsigned int v471 = ((v465 - ((2 * v465) & 0x505D8C0C) - 1473329658) ^ 0x7A114903 ^ (v469
                                                                        - ((2 * v469 + 1090598798) & 0xA47F1E0A)
                                                                        - 222287156))
       + v418;
  unsigned int v472 = v464 + (v470 ^ 0x88064242) - ((2 * v470) & 0xEFF37B7A) + 2012855742;
  int v473 = (v468 ^ 0x883049C)
       + ((__PAIR64__(v461, v464) >> 2) ^ 0xFEE3FFFD)
       + ((v125 >> 22) ^ 0xCA8C1033)
       + ((2 * (__PAIR64__(v461, v464) >> 2)) & 0xFDC7FFFA)
       - ((2 * (v125 >> 22)) & 0x6AE7DF98)
       - ((2 * v468) & 0xEEF9F6C6)
       + (((v452 ^ 0x9A6E6CD8) + v435 - ((2 * ((v452 ^ 0x9A6E6CD8) + v435)) & 0x71010F08) - 1199536252) ^ v467 ^ 0xAD3DB291 ^ ((v434 ^ 0xE805C0B2) + v464 + 1 - ((2 * ((v434 ^ 0xE805C0B2) + v464 + 1)) & 0xA6A0137A) + 1397754301))
       + 772598580;
  unsigned int v474 = (DWORD2(v842) ^ 0xFEACAE9D)
       + (v472 ^ 0xFFFBF5EF)
       + ((2 * v472) & 0xFFF7EBDE)
       + (v471 ^ 0xEFF6F6DF)
       + ((2 * v471) & 0xDFEDEDBE)
       + 1920737616;
  unsigned int v475 = ((2 * v473) & 0xB277F798) + (v473 ^ 0xD93BFBCC) + (v474 ^ 0xDFFF77BA) + ((2 * v474) & 0xBFFEEF74);
  unsigned int v476 = v475 - ((2 * v475 - 1920395020) & 0xCBC63072) + 749184179;
  unsigned int v477 = (((v476 ^ 0xE5E31839) + v464) ^ 0x7EFFFFFE)
       + (v452 ^ 0x80728B1E ^ v476)
       + ((2 * ((v476 ^ 0xE5E31839) + v464)) & 0xFDFFFFFC);
  HIDWORD(v125) = v476 ^ 0x1839;
  LODWORD(v125) = v476 ^ 0xE5E30000;
  int v478 = v125 >> 13;
  HIDWORD(v125) = v476 ^ 1;
  LODWORD(v125) = v476 ^ 0xE5E31838;
  int v479 = v125 >> 2;
  unsigned int v480 = (v476 ^ v463 ^ 0x7F1C2768 ^ ((v476 ^ 0xE5E31839)
                                    + (v452 ^ 0x9A6E6CD8)
                                    - ((2 * ((v476 ^ 0xE5E31839) + (v452 ^ 0x9A6E6CD8))) & 0x376241AA)
                                    + 464593109))
       + (v467 ^ 0x46ED3CA8);
  HIDWORD(v125) = v476 ^ 0x39;
  LODWORD(v125) = v476 ^ 0xE5E31800;
  int v481 = v125 >> 6;
  HIDWORD(v125) = v476 ^ 0x39;
  LODWORD(v125) = v476 ^ 0xE5E31800;
  int v482 = (v125 >> 11) - ((2 * (v125 >> 11)) & 0x75166D24) - 1165281646;
  HIDWORD(v125) = v482 ^ 0x33692;
  LODWORD(v125) = v482 ^ 0xBA880000;
  int v483 = (v125 >> 19) - ((2 * (v125 >> 19)) & 0xC3EEFC76);
  HIDWORD(v125) = v476 ^ 0x1E31839;
  LODWORD(v125) = v476 ^ 0xE4000000;
  int v484 = v125 >> 25;
  v483 += 1643609659;
  HIDWORD(v125) = v483 ^ 0x1E3B;
  LODWORD(v125) = v483 ^ 0x61F76000;
  int v485 = v125 >> 13;
  unsigned int v486 = (v478 ^ 0x80010870) + (v479 ^ 0x7B6E73FD) + ((2 * v479) & 0xF6DCE7FA) - ((2 * v478) & 0xFFFDEF1E);
  HIDWORD(v125) = v476 ^ 0x231839;
  LODWORD(v125) = v476 ^ 0xE5C00000;
  unsigned int v487 = v435
       + (v484 ^ 0x84000832)
       + (v481 ^ 0x36441B08)
       - ((2 * v481) & 0x9377C9EE)
       - ((2 * v484) & 0xF7FFEF9A)
       + (v485 ^ 0x76FAEFDF)
       + ((2 * v485) & 0xEDF5DFBE);
  unsigned int v488 = (v452 ^ 0x84BD2D70 ^ (v477 - ((2 * v477 + 33554438) & 0x3DA68350) - 1613545045))
       + ((v487 - 826217241) ^ 0xDBEEC9DE)
       + ((2 * (v487 - 826217241)) & 0xB7DD93BC)
       + 605107746;
  int v489 = (v844 ^ 0xDC876C2A) + (v488 ^ 0xBBF07FDE) + ((2 * v488) & 0x77E0FFBC) - 911972820;
  int v490 = (((v125 >> 22) - 1863225346 + (~(2 * (v125 >> 22)) | 0xDE1D2005)) ^ (v480 - ((2 * v480) & 0xC8292E2) + 104941937) ^ (v486 + 1 - ((2 * (v486 + 1) + 153159460) & 0x255DD688) + 390033110) ^ 0x841ECDC8)
       + (v489 ^ 0xFFCFBA77)
       + ((2 * v489) & 0xFF9F74EE)
       + 3163529;
  unsigned int v491 = v490 - 939368528 - ((2 * v490) & 0x9004BF60);
  HIDWORD(v125) = v491 ^ 0x1FB0;
  LODWORD(v125) = v491 ^ 0xC8024000;
  int v492 = v125 >> 13;
  HIDWORD(v125) = v490;
  LODWORD(v125) = v491 ^ 0xC8025FB0;
  int v493 = (v125 >> 2) - ((2 * (v125 >> 2)) & 0x74EBEA4C);
  int v494 = v492 - ((2 * v492) & 0x77FAB6E0);
  unsigned int v495 = (v491 ^ 0xC8025FB0)
       + (v476 ^ 0xE5E31839)
       - 2065618537
       - ((2 * ((v491 ^ 0xC8025FB0) + (v476 ^ 0xE5E31839))) & 0x9C2532E);
  HIDWORD(v125) = v491 ^ 0x7B0;
  LODWORD(v125) = v491 ^ 0xC8025800;
  int v496 = v125 >> 11;
  v493 += 980808998;
  HIDWORD(v125) = v493 ^ 0x7526;
  LODWORD(v125) = v493 ^ 0x3A758000;
  int v497 = (v125 >> 15) - ((2 * (v125 >> 15)) & 0x44B6BFAE) - 1571069993;
  HIDWORD(v125) = v497 ^ 0x15FD7;
  LODWORD(v125) = v497 ^ 0xA25A0000;
  int v498 = v125 >> 17;
  HIDWORD(v125) = v491 ^ 0x30;
  LODWORD(v125) = v491 ^ 0xC8025F80;
  int v499 = v125 >> 6;
  HIDWORD(v125) = v491 ^ 0x25FB0;
  LODWORD(v125) = v491 ^ 0xC8000000;
  int v500 = v125 >> 22;
  HIDWORD(v125) = v491 ^ 0x25FB0;
  LODWORD(v125) = v491 ^ 0xC8000000;
  unsigned int v501 = (v500 ^ 0x5BFF7EFD)
       + ((2 * v500) & 0xB7FEFDFA)
       - 1543470845
       + ((v494 - 1141023888) ^ 0xBB25C495 ^ (v498 - ((2 * v498) & 0x1B13FCA) + 14196709));
  unsigned int v502 = v501 - ((2 * v501) & 0xFD22E57A);
  unsigned int v503 = v495 ^ 0x84E12997;
  unsigned int v504 = (((v491 ^ 0xC8025FB0) + v464) ^ 0xFFCD9FF)
       + ((2 * ((v491 ^ 0xC8025FB0) + v464)) & 0x1FF9B3FE)
       - 268229119
       + (v495 ^ 0x84E12997);
  unsigned int v505 = (((v463 ^ 0x7EB1E07B)
         + (v491 ^ 0xC8025FB0)
         + 1
         - ((2 * ((v463 ^ 0x7EB1E07B) + (v491 ^ 0xC8025FB0) + 1)) & 0x43E3DB48)
         + 569503140) ^ v495 ^ 0xA510C433)
       + (v476 ^ v463 ^ 0x64AD07BD);
  int v506 = (v452 ^ 0x9A6E6CD8)
       + (v496 ^ 0xF3FDFF4F)
       + ((v125 >> 25) ^ 0xB3FFEF7B)
       + ((2 * v496) & 0xE7FBFE9E)
       + ((2 * (v125 >> 25)) & 0x67FFDEF6);
  unsigned int v507 = v464 + (v504 ^ 0xFEBAD1FD) + ((2 * v504) & 0xFD75A3FA) + 21310979;
  unsigned int v508 = (v499 ^ 0x240C1634)
       - ((2 * v499) & 0xB7E7D396)
       + ((v506 + 1476530486) ^ 0xDEB7FAFA)
       + ((2 * (v506 + 1476530486)) & 0xBD6FF5F4)
       + (v507 ^ 0x1880502C)
       - ((2 * v507) & 0xCEFF5FA6)
       + 2;
  unsigned int v509 = ((v505 - ((2 * v505) & 0x11DD891E) - 1997618033) ^ 0xF67FB632 ^ (v502 + 2123461309))
       + (HIDWORD(v843) ^ 0x94037F7C ^ (v508 - ((2 * v508 + 252503368) & 0x60F857D6) - 1207787889));
  int v510 = v509 - 1087184960 - ((2 * v509) & 0x7E65BF80);
  unsigned int v511 = (v510 ^ 0xBF32DFC0)
       + (v491 ^ 0x37FDA04F)
       - 1775220252
       - ((2 * ((v510 ^ 0xBF32DFC0) + (v491 ^ 0x37FDA04F) + 1)) & 0x2C6093C6);
  unsigned int v512 = (v476 ^ 0x5AD1C7F9 ^ v510)
       - 2145891039
       + (((v510 ^ 0xBF32DFC0) + (v491 ^ 0xC8025FB0)) ^ 0x7FE7AEE2)
       + ((2 * ((v510 ^ 0xBF32DFC0) + (v491 ^ 0xC8025FB0))) & 0xFFCF5DC4)
       + 1021;
  HIDWORD(v125) = v509;
  LODWORD(v125) = v510 ^ 0xBF32DFC0;
  int v513 = (v125 >> 2) - ((2 * (v125 >> 2)) & 0xA954501C) - 727046130;
  HIDWORD(v125) = v513 ^ 0x2A280E;
  LODWORD(v125) = v513 ^ 0xD4800000;
  int v514 = (v125 >> 23) - ((2 * (v125 >> 23)) & 0xBD3778BE) + 1587264607;
  HIDWORD(v125) = v514 ^ 0x1E9BBC5F;
  LODWORD(v125) = v514 ^ 0x40000000;
  int v515 = v125 >> 30;
  HIDWORD(v125) = v510 ^ 0x7C0;
  LODWORD(v125) = v510 ^ 0xBF32D800;
  int v516 = v125 >> 11;
  int v517 = v515 - 1291599872 - ((2 * v515) & 0x6607816A) + 181;
  HIDWORD(v125) = v517 ^ 0xB5;
  LODWORD(v125) = v517 ^ 0xB303C000;
  int v518 = v125 >> 11;
  HIDWORD(v125) = v510 ^ 0x1FC0;
  LODWORD(v125) = v510 ^ 0xBF32C000;
  int v519 = v125 >> 13;
  HIDWORD(v125) = v510 ^ 0x132DFC0;
  LODWORD(v125) = v510 ^ 0xBE000000;
  int v520 = v125 >> 25;
  unsigned int v521 = (v511 ^ ((v510 ^ 0xBF32DFC0)
                + (v476 ^ 0xE5E31839)
                - ((2 * ((v510 ^ 0xBF32DFC0) + (v476 ^ 0xE5E31839))) & 0xB167C6AE)
                + 1488184151) ^ 0xCE83AAB4)
       + v503;
  HIDWORD(v125) = v509;
  LODWORD(v125) = v510 ^ 0xBF32DFC0;
  int v522 = (v516 ^ 0xFBFA64EF)
       + (v520 ^ 0xEF2F7AFF)
       + ((v125 >> 6) ^ 0xFDFEDCD5)
       + ((2 * v520) & 0xDE5EF5FE)
       + ((2 * v516) & 0xF7F4C9DE)
       + ((2 * (v125 >> 6)) & 0xFBFDB9AA);
  HIDWORD(v125) = v510 ^ 0x32DFC0;
  LODWORD(v125) = v510 ^ 0xBF000000;
  unsigned int v523 = (v476 ^ 0x9D10B5FD ^ (v512 - ((2 * v512) & 0xF1E75B88) + 2029235652)) - 2114705756;
  unsigned int v524 = (v523 ^ 0x47F7FFBF)
       + ((2 * v523) & 0x8FEFFF7E)
       + (v463 ^ 0x3B15D732 ^ (v522 - ((2 * v522 + 766412410) & 0x74B7916C) - 785183757))
       - 1207435199;
  int v525 = ((v125 >> 22) ^ 0x7BFFD1EF)
       + (v519 ^ 0xD7F73F7B)
       + ((2 * (v125 >> 22)) & 0xF7FFA3DE)
       + ((2 * v519) & 0xAFEE7EF6)
       + (v521 ^ 0x86004412)
       - ((2 * v521) & 0xF3FF77DA)
       + (v518 ^ 0xF6CF7B51)
       + ((2 * v518) & 0xED9EF6A2)
       + (a35 ^ 0x12308942 ^ (v524 - ((2 * v524) & 0x72E0C5CE) - 1183816985))
       + 792276787;
  unsigned int v526 = v525 - 294856704 - ((2 * v525) & 0xDCD9B1A6);
  unsigned int v527 = v526 + 211;
  HIDWORD(v125) = (v526 + 211) ^ 0xD3;
  LODWORD(v125) = (v526 + 211) ^ 0xEE6CD800;
  int v528 = v125 >> 11;
  HIDWORD(v125) = (v526 + 211) ^ 0x13;
  LODWORD(v125) = (v526 + 211) ^ 0xEE6CD8C0;
  int v529 = v125 >> 6;
  HIDWORD(v125) = (v526 + 211) ^ 0x2CD8D3;
  LODWORD(v125) = (v526 + 211) ^ 0xEE400000;
  int v530 = ((v840 - 236551607) ^ (v872 >> 3) ^ (HIDWORD(v838) - 1108838169) ^ 0xA8794218)
       + (v403 ^ 0x7F74FFFA)
       + ((2 * v403) & 0xFEE9FFF4);
  unsigned int v531 = (v526 + 211) ^ 0xEE6CD8D3;
  int v532 = (v125 >> 22) - ((2 * (v125 >> 22)) & 0xCEBC65C2);
  HIDWORD(v125) = (v526 + 211) ^ 0x6CD8D3;
  LODWORD(v125) = (v526 + 211) ^ 0xEE000000;
  int v533 = ((v125 >> 25) ^ 0x3BFEFBFC)
       + (v529 ^ 0x4BE6D7B7)
       + (v528 ^ 0x80184D21)
       + ((2 * (v125 >> 25)) & 0x77FDF7F8)
       + ((2 * v529) & 0x97CDAF6E)
       - ((2 * v528) & 0xFFCF65BC)
       + 1;
  HIDWORD(v125) = -224 - v526;
  LODWORD(v125) = (v526 + 211) ^ 0xEE6CD8D0;
  int v534 = (v125 >> 2) - ((2 * (v125 >> 2)) & 0x99B4A170);
  unsigned int v535 = v531 + (v491 ^ 0xC8025FB0) - ((2 * (v531 + (v491 ^ 0xC8025FB0))) & 0x143CFDF8) - 1977712900;
  unsigned int v536 = ((2 * (v531 + (v510 ^ 0xBF32DFC0))) & 0xFE8FF5EC)
       + ((v531 + (v510 ^ 0xBF32DFC0)) ^ 0xFF47FAF6)
       + (v535 ^ 0x75E18103);
  unsigned int v537 = (v476 ^ 0x326E2B8 ^ (v533 - ((2 * v533 - 268190122) & 0xCD8BF502) - 557327956))
       + (v491 ^ 0x80CBA76D ^ (v536 + 1233255913 + (~(2 * v536 + 24119830) | 0x6E6C0E45)));
  HIDWORD(v125) = v527 ^ 0x18D3;
  LODWORD(v125) = v527 ^ 0xEE6CC000;
  int v538 = a34 + (v537 ^ 0xF9BBFDFF) + ((2 * v537) & 0xF377FBFE);
  unsigned int v539 = (v527 ^ v510 ^ 0xDB4079EF ^ v535) + (v511 ^ 0x963049E3);
  int v540 = (((v125 >> 13) - ((2 * (v125 >> 13)) & 0xE19683A8) - 255114796) ^ (v534 + 1289375928) ^ (v532 + 1734226657) ^ 0x4F0FF0A ^ (v539 - ((2 * v539) & 0xBF7FB90E) - 541074297))
       + ((v538 + 1174430426) ^ 0xAF7FFCEB)
       + ((2 * (v538 + 1174430426)) & 0x5EFFF9D6)
       + 1350566677;
  int v541 = v540 + 775057280 - ((2 * v540) & 0x5C64DF00);
  int v542 = (v527 ^ 0x1193272C)
       + (v541 ^ 0x2E326F80)
       + 105170083
       - ((2 * ((v527 ^ 0x1193272C) + (v541 ^ 0x2E326F80) + 1)) & 0xC898944);
  HIDWORD(v125) = v541 ^ 0x326F80;
  LODWORD(v125) = v541 ^ 0x2E000000;
  int v543 = v125 >> 22;
  HIDWORD(v125) = v541 ^ 0x326F80;
  LODWORD(v125) = v541 ^ 0x2E000000;
  int v544 = v125 >> 25;
  HIDWORD(v125) = v540;
  LODWORD(v125) = v541 ^ 0x2E326F80;
  int v545 = (v125 >> 6) - ((2 * (v125 >> 6)) & 0xD5054D8C);
  HIDWORD(v125) = v541 ^ 0xF80;
  LODWORD(v125) = v541 ^ 0x2E326000;
  int v546 = (v125 >> 13) - ((2 * (v125 >> 13)) & 0x635E02C0);
  HIDWORD(v125) = v540;
  LODWORD(v125) = v541 ^ 0x2E326F80;
  unsigned int v547 = (v510 ^ 0x9100B040 ^ v541)
       + (((v541 ^ 0x2E326F80) + v531) ^ 0xBB3F1FC6)
       + ((2 * ((v541 ^ 0x2E326F80) + v531)) & 0x767E3F8C)
       + 1153491002;
  int v548 = (v543 ^ 0xA08830A4)
       - ((2 * v543) & 0xBEEF9EB6)
       + 1601687388
       + (((v125 >> 2) - ((2 * (v125 >> 2)) & 0x2EA9B230) - 1756047080) ^ (v546 - 1313930912) ^ 0x26FBD878);
  int v549 = (v547 - ((2 * v547) & 0xF5B1224) - 2018670318) ^ v527 ^ v510 ^ (v548 - ((2 * v548) & 0x279B0A10) - 1815247608);
  HIDWORD(v125) = v541 ^ 0x780;
  LODWORD(v125) = v541 ^ 0x2E326800;
  int v550 = (v544 ^ 0x80010110)
       - ((2 * v544) & 0xFFFDFDDE)
       + 2147417840
       + (((v125 >> 11) - ((2 * (v125 >> 11)) & 0x3F7ED2BC) - 1614845602) ^ (v545 + 1786947270) ^ 0xF53DCF98);
  HIDWORD(v125) = v549 ^ 0x13E0B09;
  LODWORD(v125) = v549 ^ 0x44444444;
  int v551 = (v125 >> 26) - 464857088 - ((2 * (v125 >> 26)) & 0xC895B72E) + 919;
  HIDWORD(v125) = v551 ^ 0x397;
  LODWORD(v125) = v551 ^ 0xE44AD800;
  unsigned int v552 = (v510 ^ 0x40CD203F)
       + (v542 ^ ((v541 ^ 0x2E326F80)
                + (v510 ^ 0xBF32DFC0)
                - ((2 * ((v541 ^ 0x2E326F80) + (v510 ^ 0xBF32DFC0))) & 0x2AB750A)
                - 2125088123) ^ 0x87117E27)
       + 1;
  unsigned int v553 = (v552 ^ 0xE7DDEF16)
       + ((2 * v552) & 0xCFBBDE2C)
       + 404885738
       + (v491 ^ 0xA22EF07 ^ (v550 - ((2 * v550) & 0x8441616E) - 1038045001));
  int v554 = (v125 >> 11) - ((2 * (v125 >> 11)) & 0xA3235B6A) - 778981963;
  HIDWORD(v125) = v554 ^ 0x191ADB5;
  LODWORD(v125) = v554 ^ 0xD0000000;
  int v555 = (a37 ^ 0xD86A5049) + (v553 ^ 0xFFEF9BE5) + ((2 * v553) & 0xFFDF37CA) + 1839310089;
  int v556 = ((2 * v555) & 0xBFFDCABE)
       + (v555 ^ 0xDFFEE55F)
       + ((v125 >> 27) ^ 0xCBEEFBDF)
       + ((2 * (v125 >> 27)) & 0x97DDF7BE);
  int v557 = v556 - ((2 * v556 + 673463684) & 0x54023F9E);
  int v558 = v557 + 2115190417;
  HIDWORD(v125) = -2115190442 - v557;
  LODWORD(v125) = (v557 + 2115190417) ^ 0x2A011FCC;
  int v559 = v125 >> 2;
  int v560 = (v557 + 2115190417) ^ 0x2A011FCF;
  unsigned int v561 = (v541 ^ 0xD1CD907F) + 1;
  unsigned int v562 = v560 + v561 + 1285167391 - ((2 * (v560 + v561)) & 0x9934323E);
  HIDWORD(v125) = v558 ^ 0xF;
  LODWORD(v125) = v558 ^ 0x2A011FC0;
  int v563 = v125 >> 6;
  HIDWORD(v125) = v558 ^ 0xFFFFFFCF;
  LODWORD(v125) = v558 ^ 0x2A011800;
  int v564 = v125 >> 11;
  HIDWORD(v125) = v558 ^ 0xFFFFFFCF;
  LODWORD(v125) = v558 ^ 0x2A010000;
  unsigned int v565 = (v541 ^ 0x433704F ^ v558) + ((v560 + v531) ^ 0x77FF6F4E) + ((2 * (v560 + v531)) & 0xEFFEDE9C) - 2013228878;
  int v566 = (v559 ^ 0xF57EFFAF)
       + ((v125 >> 13) ^ 0x3FBD1F7B)
       + ((2 * (v125 >> 13)) & 0x7F7A3EF6)
       + ((2 * v559) & 0xEAFDFF5E);
  HIDWORD(v125) = v558 ^ 0x11FCF;
  LODWORD(v125) = v558 ^ 0x2A000000;
  int v567 = v125 >> 25;
  HIDWORD(v125) = v558 ^ 0x11FCF;
  LODWORD(v125) = v558 ^ 0x2A000000;
  unsigned int v568 = (v510 ^ 0xBF32DFC0)
       + (v563 ^ 0xCC403B00)
       + (v564 ^ 0x7FDF6FFD)
       + (v567 ^ 0x796EFB69)
       + ((2 * v564) & 0xFFBEDFFA)
       + ((2 * v567) & 0xF2DDF6D2)
       - ((2 * v563) & 0x677F89FE)
       + 980507034;
  unsigned int v569 = (v527 ^ 0xD572D554 ^ (v565 + 991823354 - ((2 * v565) & 0x763C1B0E) + 1933))
       + (v568 ^ 0x75EFEC77)
       + ((2 * v568) & 0xEBDFD8EE)
       - 1978657911;
  int v570 = (v527 ^ 0x3B9238E3 ^ v558) + (v562 ^ 0x4C9A191F) + 1;
  unsigned int v571 = (v542 ^ 0x644C4A2) + (v570 ^ 0x6DBFEC75) + ((2 * v570) & 0xDB7FD8EA) - 1841294453;
  int v572 = (((v125 >> 22) - ((2 * (v125 >> 22)) & 0xF57CD02C) + 2059298838) ^ 0x7D0EF46 ^ (v566
                                                                                       - ((2 * v566 - 1786265172) & 0xFADD0EA0)
                                                                                       + 1211263014))
       + (v571 ^ 0xBFFB3FE5)
       + ((2 * v571) & 0x7FF67FCA)
       + 1074053147;
  unsigned int v573 = (HIDWORD(a36) ^ 0xCD63BF29) + (v569 ^ 0xB0FA5F96) + ((2 * v569) & 0x61F4BF2C) - 1584497390;
  unsigned int v574 = ((2 * v572) & 0x5DF7F23E) + (v572 ^ 0xAEFBF91F) + (v573 ^ 0xF9EDF7DF) + ((2 * v573) & 0xF3DBEFBE);
  int v575 = (2 * v574 + 774643204) & 0x660ABAF0;
  v574 -= 1977914246;
  unsigned int v576 = v574 - v575;
  HIDWORD(v125) = (v574 - v575) ^ 0x578;
  LODWORD(v125) = (v574 - v575) ^ 0x33055800;
  int v577 = v125 >> 11;
  HIDWORD(v125) = v576 ^ 0x38;
  LODWORD(v125) = v576 ^ 0x33055D40;
  int v578 = v125 >> 6;
  HIDWORD(v125) = v576 ^ 0x1D78;
  LODWORD(v125) = v576 ^ 0x33054000;
  int v579 = v125 >> 13;
  HIDWORD(v125) = v576 ^ 0x1055D78;
  LODWORD(v125) = v576 ^ 0x33333333;
  int v580 = (v125 >> 25) - ((2 * (v125 >> 25)) & 0x8919719E);
  int v581 = v576 ^ 0x33055D78;
  HIDWORD(v125) = v574;
  LODWORD(v125) = v576 ^ 0x33055D78;
  int v582 = (v579 ^ 0xFB2EA89D) + ((v125 >> 2) ^ 0x6C5CAEFE) + ((2 * (v125 >> 2)) & 0xD8B95DFC) + ((2 * v579) & 0xF65D513A);
  unsigned int v583 = (v576 ^ 0x33055D78) + v561;
  unsigned int v584 = (v558 ^ 0xD5FEE030) + 1;
  unsigned int v585 = (v583 ^ 0x597FDAEA)
       + (((v576 ^ 0x33055D78) + v584) ^ 0x6EDBFF7E)
       + ((2 * ((v576 ^ 0x33055D78) + v584)) & 0xDDB7FEFC)
       + ((2 * v583) & 0xB2FFB5D4);
  unsigned int v586 = (v577 ^ 0x81488471) + (v578 ^ 0xBA7F5FFF) + ((2 * v578) & 0x74FEBFFE) - ((2 * v577) & 0xFD6EF71C) + 1;
  HIDWORD(v125) = v576 ^ 0x55D78;
  LODWORD(v125) = v576 ^ 0x33333333;
  int v587 = v585 - ((2 * v585 + 1867008816) & 0x492D63C4) - 600123526;
  int v588 = (v562 ^ 0x17F35702 ^ v587)
       + (((v125 >> 22) - ((2 * (v125 >> 22)) & 0x22EFC650) - 1854414040) ^ 0xF3C44931 ^ (v582
                                                                                        - ((2 * v582 + 820596938) & 0xC5675432)
                                                                                        - 81243522));
  unsigned int v589 = v527 ^ v541 ^ (v580 - 997410609) ^ v587 ^ 0xC1B01097 ^ (v586
                                                               - ((2 * v586 - 2005911778) & 0xC3E95DD2)
                                                               + 640469624);
  int v590 = ((v588 + 1) ^ 0xDE7DF7FF)
       + ((2 * (v588 + 1)) & 0xBCFBEFFE)
       + 562169857
       + (v845 ^ 0x3921CC69 ^ (v589 - 2 * ((v589 + 848821368) & 0x207A7D8F ^ v589 & 3) + 319977988));
  int v591 = v590 - 2095159208 - ((2 * v590) & 0x63CD0B0);
  unsigned int v592 = v591 ^ 0x831E6858;
  HIDWORD(v125) = v591 ^ 0x18;
  LODWORD(v125) = v591 ^ 0x831E6840;
  int v593 = (v125 >> 6) - ((2 * (v125 >> 6)) & 0x52EE9ABA);
  HIDWORD(v125) = v591 ^ 0x11E6858;
  LODWORD(v125) = v591 ^ 0x83FFFFFF;
  int v594 = (v125 >> 25) - ((2 * (v125 >> 25)) & 0xF7B58102);
  HIDWORD(v125) = v591 ^ 0x58;
  LODWORD(v125) = v591 ^ 0x831E6800;
  int v595 = v576 ^ v558;
  int v596 = (((v595 ^ 0x190442B7) + v584) ^ 0xFF435DF3)
       + ((2 * ((v595 ^ 0x190442B7) + v584)) & 0xFE86BBE6)
       + 12362253
       + (v541 ^ (v593 - 1451799203) ^ ((v125 >> 11) - ((2 * (v125 >> 11)) & 0x5A1243E2) - 1391910415) ^ (v594 + 2077933697) ^ 0x5196C3AD);
  HIDWORD(v125) = v591 ^ 0x858;
  LODWORD(v125) = v591 ^ 0x831E6000;
  int v597 = v125 >> 13;
  HIDWORD(v125) = v591 ^ 0x1E6858;
  LODWORD(v125) = v591 ^ 0x83000000;
  int v598 = v125 >> 22;
  int v599 = v591 ^ v576;
  HIDWORD(v125) = v590;
  LODWORD(v125) = v591 ^ 0x831E6858;
  int v600 = (v598 ^ 0xE77DFFFE)
       + (v597 ^ 0xDF07EFFF)
       + ((v125 >> 2) ^ 0xD7FE6AFF)
       + ((2 * v598) & 0xCEFBFFFC)
       + ((2 * v597) & 0xBE0FDFFE)
       + ((2 * (v125 >> 2)) & 0xAFFCD5FE);
  unsigned int v601 = (v595 ^ 0xE6FBBD48)
       + (v591 ^ v576 ^ 0x235BF05E ^ ((v591 ^ 0x831E6858)
                                    + v560
                                    - ((2 * ((v591 ^ 0x831E6858) + v560)) & 0x26818AFC)
                                    - 1824471682))
       + 1;
  unsigned int v602 = v600
       + (v601 ^ 0xFFAEBDE5)
       + ((2 * v601) & 0xFF5D7BCA)
       + 1640818463
       + (HIDWORD(v846) ^ 0x4551BD16 ^ (((2 * v596) & 0xEDFFFFFC)
                                      + (v596 ^ 0x76FFFFFE)
                                      + 546667671
                                      + ~(2
                                        * ((((2 * v596) & 0xEDFFFFFC) + (v596 ^ 0x76FFFFFE) + 733528576) & 0x74DCBA9F ^ (((2 * v596) & 0xEDFFFFFC) + (v596 ^ 0x76FFFFFE)) & 9))));
  int v603 = v602 + 823891553 - ((2 * v602) & 0x62372CC2);
  HIDWORD(v125) = v603 ^ 0x1B9661;
  LODWORD(v125) = v603 ^ 0x31000000;
  int v604 = ((HIDWORD(v840) >> 3) ^ 0x22B83DA4)
       + ((HIDWORD(v840) >> 2) & 0x1C5FF7BE ^ 0x180F84B6)
       - 774896607
       + (HIDWORD(v857) ^ (v868 >> 10) ^ 0x171D134E);
  int v605 = (v125 >> 22) - 1090439267 - ((2 * (v125 >> 22)) & 0x7E026F3A);
  HIDWORD(v125) = v603 ^ 0xFFFFFFE1;
  LODWORD(v125) = v603 ^ 0x311B9640;
  int v606 = v125 >> 6;
  HIDWORD(v125) = v603 ^ 0x661;
  LODWORD(v125) = v603 ^ 0x311B9000;
  int v607 = ((v125 >> 11) ^ 0x4196233)
       + (v606 ^ 0xBFF771E7)
       + ((2 * v606) & 0x7FEEE3CE)
       - ((2 * (v125 >> 11)) & 0xF7CD3B98)
       + 1;
  int v608 = v603 ^ 0x311B9661;
  unsigned int v609 = (v576 ^ 0x21ECB19 ^ v603)
       + (((v603 ^ 0x311B9661) + (v591 ^ 0x831E6858)) ^ 0x6FEEFCC2)
       + ((2 * ((v603 ^ 0x311B9661) + (v591 ^ 0x831E6858))) & 0xDFDDF984)
       - 1877933250;
  HIDWORD(v125) = v603 ^ 0x11B9661;
  LODWORD(v125) = v603 ^ 0x30000000;
  int v610 = (v125 >> 25) - ((2 * (v125 >> 25)) & 0x8D3A30C4);
  HIDWORD(v125) = v603 ^ 1;
  LODWORD(v125) = v603 ^ 0x311B9660;
  int v611 = (v125 >> 2) - ((2 * (v125 >> 2)) & 0xFF9874E4);
  HIDWORD(v125) = v603 ^ 0x1661;
  LODWORD(v125) = v603 ^ 0x311B8000;
  unsigned int v612 = ((v610 - 962783134) ^ 0xBC4B1044 ^ (v607 - ((2 * v607 + 2011060170) & 0xF5AC104C) - 1228590069)) + v560;
  int v613 = (v599 ^ 0xD2036200 ^ (v609 - ((2 * v609) & 0xC430AE40) + 1645762336))
       + ((v611 + 2144090738) ^ ((v125 >> 13) - ((2 * (v125 >> 13)) & 0x20F04B3E) + 276309407) ^ v605 ^ 0xD0B52870);
  int v614 = (v591 ^ 0x20338B71 ^ (v612 - ((2 * v612) & 0x465BC652) - 1557273815)) + 846739860;
  unsigned int v615 = (HIDWORD(v845) ^ 0xD672F482) + (v614 ^ 0x76BBCE6D) + ((2 * v614) & 0xED779CDA) - 1992019564;
  unsigned int v616 = ((2 * v613) & 0xFEEE7FA6) + (v613 ^ 0xFF773FD3) + (v615 ^ 0xFFFFFFFE) + 4 * (v615 >> 1);
  unsigned int v617 = v616 - ((2 * v616 + 17924190) & 0x7CF2A0A);
  unsigned int v618 = v617 + 74470708;
  int v619 = (v617 + 74470708) ^ 0x3E79505;
  HIDWORD(v125) = (v617 + 74470708) ^ 5;
  LODWORD(v125) = (v617 + 74470708) ^ 0x3E79500;
  int v620 = (v125 >> 6) - ((2 * (v125 >> 6)) & 0xCB46CD62);
  HIDWORD(v125) = (v617 + 74470708) ^ 0x1E79505;
  LODWORD(v125) = (v617 + 74470708) ^ 0x2000000;
  int v621 = v125 >> 25;
  HIDWORD(v125) = (v617 + 74470708) ^ 0x505;
  LODWORD(v125) = (v617 + 74470708) ^ 0x3E79000;
  int v622 = (v125 >> 11) - ((2 * (v125 >> 11)) & 0xBA4CAA56);
  HIDWORD(v125) = (v617 + 74470708) ^ 0x1505;
  LODWORD(v125) = (v617 + 74470708) ^ 0x3E78000;
  int v623 = v125 >> 13;
  HIDWORD(v125) = (v617 + 74470724) ^ 1;
  LODWORD(v125) = (v617 + 74470708) ^ 0x3E79504;
  unsigned int v624 = (v621 ^ 0x75FFFB27)
       - 1979711478
       + ((2 * v621) & 0xEBFFF64E)
       + ((v622 - 584690389) ^ (v620 + 1705207473) ^ 0x477ACC65)
       + 1232;
  int v625 = (v623 ^ 0x84C03920)
       + ((v125 >> 2) ^ 0xEBDFEF6F)
       + ((2 * (v125 >> 2)) & 0xD7BFDEDE)
       - ((2 * v623) & 0xF67F8DBE)
       + 1;
  HIDWORD(v125) = v618 ^ 0x279505;
  LODWORD(v125) = v618 ^ 0x3C00000;
  unsigned int v626 = (v603 ^ 0xCEE4699E) + v619 + 1 - ((2 * ((v603 ^ 0xCEE4699E) + v619 + 1)) & 0x9023B26C) - 938354378;
  unsigned int v627 = v581 + (v624 ^ 0x6B774F7F) + ((2 * v624) & 0xD6EE9EFE) - 1802981247;
  int v628 = (((v125 >> 22) - ((2 * (v125 >> 22)) & 0x602C6A1E) + 806761743) ^ 0x6CECDB27 ^ (v625
                                                                                       - ((2 * v625 + 515878624) & 0xB9F5DC50)
                                                                                       - 329595496))
       + (v591 ^ ((v591 ^ 0x7CE197A7)
                + (v603 ^ 0x311B9661)
                + 1
                - ((2 * ((v591 ^ 0x7CE197A7) + (v603 ^ 0x311B9661) + 1)) & 0x8C4E677C)
                + 1176974270) ^ v618 ^ 0xECF17D5 ^ v626);
  unsigned int v629 = ((2 * v591) ^ 0x74CA8E2B) + ((4 * v591) & 0xE5ECBD34 ^ 0x468A120) - 1928748699 + v619;
  unsigned int v630 = (v629 ^ 0x7DD37F7B) + ((2 * v629) & 0xFBA6FEF6) - 2111012730 + (v626 ^ 0x37EE26C9);
  unsigned int v631 = (HIDWORD(a38) ^ 0x9C468AF2)
       + 1642195380
       + (v630 ^ 0x9E76DFFF)
       + ((2 * v630) & 0x3CEDBFFE)
       + (v627 ^ 0x3BECBD63)
       + ((2 * v627) & 0x77D97AC6)
       + 4036;
  unsigned int v632 = ((2 * v628) & 0xD7FE3FBE) + (v628 ^ 0xEBFF1FDF) + (v631 ^ 0xDED96F4F) + ((2 * v631) & 0xBDB2DE9E);
  int v633 = v632 - ((2 * v632 + 1783554468) & 0x4D73D94A) + 1541496183;
  HIDWORD(v125) = v633 ^ 0xCA5;
  LODWORD(v125) = v633 ^ 0x26B9E000;
  int v634 = v125 >> 13;
  int v635 = v633 ^ 0x26B9ECA5;
  HIDWORD(v125) = v633 ^ 0x39ECA5;
  LODWORD(v125) = v633 ^ 0x26800000;
  int v636 = v125 >> 22;
  int v637 = v603 ^ 0x32FC0364 ^ v618;
  int v638 = v637 + (v603 ^ 0x311B9661) - ((2 * (v637 + (v603 ^ 0x311B9661))) & 0x12601E62);
  unsigned int v639 = v637
       + (((v633 ^ 0x26B9ECA5) + (v603 ^ 0x311B9661)) ^ 0x5FFAFFCE)
       + ((2 * ((v633 ^ 0x26B9ECA5) + (v603 ^ 0x311B9661))) & 0xBFF5FF9C)
       - 1610285006;
  HIDWORD(v125) = v633 ^ 0x4A5;
  LODWORD(v125) = v633 ^ 0x26B9E800;
  int v640 = v125 >> 11;
  HIDWORD(v125) = v633 ^ 0x25;
  LODWORD(v125) = v633 ^ 0x26B9EC80;
  int v641 = v125 >> 6;
  HIDWORD(v125) = v633 ^ 0xB9ECA5;
  LODWORD(v125) = v633 ^ 0x26000000;
  int v642 = v125 >> 25;
  HIDWORD(v125) = v633 ^ 1;
  LODWORD(v125) = v633 ^ 0x26B9ECA4;
  unsigned int v643 = v592
       + (v642 ^ 0x8008A102)
       + (v640 ^ 0x20401385)
       + (v641 ^ 0x85091C6C)
       - ((2 * v640) & 0xBF7FD8F4)
       - ((2 * v642) & 0xFFEEBDFA)
       - ((2 * v641) & 0xF5EDC726)
       - 626118899;
  unsigned int v644 = (v638 - 1993339087) ^ 0xC7F39840 ^ (v643 - ((2 * v643) & 0x9D872EE2) + 1321441137);
  unsigned int v645 = (v618 ^ 0x255E79A0 ^ v633) + (v639 ^ 0x984811) - ((2 * v639) & 0xFECF6FDC) - 9979921;
  int v646 = (v636 ^ 0x666ADB44)
       + (v634 ^ 0x6FEFBFBE)
       + ((v125 >> 2) ^ 0xD7BB66DF)
       + ((2 * v636) & 0xCCD5B688)
       + ((2 * v634) & 0xDFDF7F7C)
       + ((2 * (v125 >> 2)) & 0xAF76CDBE)
       + (v645 ^ 0x77E75E7D)
       + ((2 * v645) & 0xEFCEBCFA)
       - 637362270
       + (a41 ^ 0xBE6FE340 ^ (v644 - ((2 * v644 + 1590488644) & 0x85BD1262) + 1917124691));
  unsigned int v647 = v646 + 1609988268 - ((2 * v646) & 0xBFECF158);
  unsigned int v648 = (v618 ^ 0xFC186AFA)
       + (v647 ^ 0x5FF678AC)
       + 1369400956
       - ((2 * ((v618 ^ 0xFC186AFA) + (v647 ^ 0x5FF678AC) + 1)) & 0xA33ECCF6);
  unsigned int v649 = (v633 ^ 0xD946135A) + 1;
  unsigned int v650 = (v647 ^ 0x5FF678AC) + v649 - 662939320 - ((2 * ((v647 ^ 0x5FF678AC) + v649)) & 0xB0F8B290);
  HIDWORD(v125) = v647 ^ 0x18AC;
  LODWORD(v125) = v647 ^ 0x5FF66000;
  int v651 = v125 >> 13;
  HIDWORD(v125) = v647 ^ 0x2C;
  LODWORD(v125) = v647 ^ 0x5FF67880;
  int v652 = v125 >> 6;
  HIDWORD(v125) = v647 ^ 0xAC;
  LODWORD(v125) = v647 ^ 0x5FF67800;
  int v653 = v125 >> 11;
  HIDWORD(v125) = v647 ^ 0x1F678AC;
  LODWORD(v125) = v647 ^ 0x5E000000;
  unsigned int v654 = (((v633 ^ 0x26B9ECA5) + v619) ^ 0xA2860234)
       - ((2 * ((v633 ^ 0x26B9ECA5) + v619)) & 0xBAF3FB96)
       + (((v648 ^ 0x519F667B) + (v650 ^ 0xD87C5948)) ^ 0xFDD37E57)
       + ((2 * ((v648 ^ 0x519F667B) + (v650 ^ 0xD87C5948))) & 0xFBA6FCAE)
       + 1;
  int v655 = v608
       + ((v125 >> 25) ^ 0x8026A082)
       + (v652 ^ 0x22201495)
       + (v653 ^ 0xBDEFF6D7)
       - ((2 * v652) & 0xBBBFD6D4)
       - ((2 * (v125 >> 25)) & 0xFFB2BEFA);
  HIDWORD(v125) = v646;
  LODWORD(v125) = v647 ^ 0x5FF678AC;
  int v656 = v125 >> 2;
  unsigned int v657 = ((v648 ^ v650 ^ 0x89E33F33) + v619 - ((2 * ((v648 ^ v650 ^ 0x89E33F33) + v619)) & 0xE08EAC46) - 263760349) ^ 0xF3287A67 ^ (v655 + ((2 * v653) & 0x7BDFEDAE) - 1614195694 - ((2 * (v655 + ((2 * v653) & 0x7BDFEDAE) - 1614195694)) & 0x6DE5888) + 57617476);
  HIDWORD(v125) = v647 ^ a12;
  LODWORD(v125) = v647 ^ 0x5FC00000;
  int v658 = ((v125 >> 22) ^ 0x35FF3A1F)
       + (v656 ^ 0x3BFFECF1)
       + (v651 ^ 0x60B0810)
       + ((2 * (v125 >> 22)) & 0x6BFE743E)
       + ((2 * v656) & 0x77FFD9E2)
       - ((2 * v651) & 0xF3E9EFDE)
       + 1;
  unsigned int v659 = (HIDWORD(v844) ^ 0xDB330C92 ^ (v657 - ((2 * v657 + 1845629730) & 0xFC080D80) - 1257959343))
       + ((v658 - ((2 * v658 + 267100606) & 0x200ACDA8) - 1745143885) ^ 0xE4002607 ^ (v654
                                                                                    - ((2 * v654 - 1085473048) & 0xE80A81A6)
                                                                                    + 1403764807));
  unsigned int v660 = v659 - 137299106;
  unsigned int v661 = v659 - 137299106 - ((2 * v659) & 0xEFA1F694) - 20;
  unsigned int v662 = v661 ^ 0xF7D0FB4A;
  unsigned int v663 = (v661 ^ 0xF7D0FB4A)
       + (v647 ^ 0x5FF678AC)
       + 1774599599
       - ((2 * ((v661 ^ 0xF7D0FB4A) + (v647 ^ 0x5FF678AC))) & 0xD38C7B5E);
  HIDWORD(v125) = v661 ^ 0x34A;
  LODWORD(v125) = v661 ^ 0xF7D0F800;
  int v664 = (v125 >> 11) - ((2 * (v125 >> 11)) & 0xA791DEAC);
  unsigned int v665 = ((2 * ((v661 ^ 0xF7D0FB4A) + v649)) & 0xDDFEF3CE) + (((v661 ^ 0xF7D0FB4A) + v649) ^ 0xEEFF79E7);
  unsigned int v666 = (v647 ^ 0xA82683E6 ^ v661)
       - 285247001
       - v665
       - ((2 * ((v647 ^ 0xA82683E6 ^ v661) - 285247001 - v665)) & 0x6520BE32);
  HIDWORD(v125) = v661 ^ 0xA;
  LODWORD(v125) = v661 ^ 0xF7D0FB40;
  int v667 = ((v125 >> 6) - ((2 * (v125 >> 6)) & 0xF59A0948) + 2060256420) ^ (v664 - 741806250);
  HIDWORD(v125) = v661 ^ 0x1D0FB4A;
  LODWORD(v125) = v661 ^ 0xF7FFFFFF;
  int v668 = ((v125 >> 25) ^ 0x4025160C) - ((2 * (v125 >> 25)) & 0x7FB5D3E6) - 1076172300 + (v667 ^ 0xA905EBF2);
  HIDWORD(v125) = v661 ^ 0x10FB4A;
  LODWORD(v125) = v661 ^ 0xF7FFFFFF;
  int v669 = v125 >> 22;
  unsigned int v670 = v619 + (v668 ^ 0xE5F7DFE9) + ((2 * v668) & 0xCBEFBFD2) + 436740119;
  HIDWORD(v125) = v660 ^ 2;
  LODWORD(v125) = v661 ^ 0xF7D0FB48;
  int v671 = (v125 >> 2) - ((2 * (v125 >> 2)) & 0x44571DCC);
  HIDWORD(v125) = v661 ^ 0x1B4A;
  LODWORD(v125) = v661 ^ 0xF7D0E000;
  unsigned int v672 = (v633 ^ 0x794F9409 ^ v647)
       + ((v665 + 285247001 + (v663 ^ 0x69C63DAF)) ^ 0xF6FB6F7F)
       + ((2 * (v665 + 285247001 + (v663 ^ 0x69C63DAF))) & 0xEDF6DEFE)
       + 151294081;
  unsigned int v673 = v633 ^ (v666 - 1299161319) ^ 0xA0236A37 ^ (v670 - ((2 * v670) & 0x6815B316) + 873126283);
  int v674 = (v669 ^ 0x8A060090)
       - ((2 * v669) & 0xEBF3FEDE)
       + (((v125 >> 13) - ((2 * (v125 >> 13)) & 0x1742AF16) + 195123083) ^ (v671 - 1574203674) ^ 0xA98AD96D)
       + (v672 ^ 0xA4622168)
       - ((2 * v672) & 0xB73BBD2E)
       - 778576376;
  int v675 = (v846 ^ 0xFB0FDAF2)
       - 2145384815
       + ((v673 - 1298429573) ^ 0x7FDFF96F)
       + ((2 * (v673 - 1298429573)) & 0xFFBFF2DE);
  unsigned int v676 = ((2 * v674) & 0xFB3C6F7E) + (v674 ^ 0xFD9E37BF) + (v675 ^ 0xDFF2A793) + ((2 * v675) & 0xBFE54F26);
  unsigned int v677 = v676 - ((2 * v676 + 1155416412) & 0xDB5B78A2);
  unsigned int v678 = v677 - 1;
  unsigned int v679 = v677 + 270327039;
  unsigned int v680 = (v677 + 270327039) ^ 0xEDADBC51;
  HIDWORD(v125) = (v677 + 270327039) ^ 0x451;
  LODWORD(v125) = (v677 + 270327039) ^ 0xEDADB800;
  int v681 = v125 >> 11;
  HIDWORD(v125) = v678 ^ 1;
  LODWORD(v125) = v679 ^ 0xEDADBC50;
  int v682 = v125 >> 2;
  HIDWORD(v125) = v679 ^ 0x1ADBC51;
  LODWORD(v125) = v679 ^ 0xEC000000;
  int v683 = v125 >> 25;
  int v684 = v682 - ((2 * v682) & 0x413CA026);
  HIDWORD(v125) = v679 ^ 0x2DBC51;
  LODWORD(v125) = v679 ^ 0xED800000;
  int v685 = v125 >> 22;
  unsigned int v686 = (v661 ^ 0xF7D0FB4A)
       + ((v680 + (v647 ^ 0x5FF678AC)) ^ 0xA7EEFDF5)
       + ((2 * (v680 + (v647 ^ 0x5FF678AC))) & 0x4FDDFBEA)
       + 1477509643;
  unsigned int v687 = v680 + (v686 ^ 0x34504D) - ((2 * v686) & 0xFF975F64) - 3428429;
  unsigned int v688 = v687 - ((2 * v687) & 0x6D3FCB94);
  int v689 = v679 ^ v661;
  HIDWORD(v125) = v679 ^ 0x11111111;
  LODWORD(v125) = v679 ^ 0xEDADBC40;
  int v690 = v125 >> 6;
  HIDWORD(v125) = v679 ^ 0x1C51;
  LODWORD(v125) = v679 ^ 0xEDADA000;
  int v691 = (v685 ^ 0x81022F29)
       - ((2 * v685) & 0xFDFBA1AC)
       + 2130563287
       + ((v684 + 547246099) ^ ((v125 >> 13) - ((2 * (v125 >> 13)) & 0x283B8594) + 337494730) ^ 0x348392D9);
  int v692 = (v647 ^ 0x4DA43B02 ^ v679) + (v679 ^ v661 ^ 0x1A7D471B) + 1;
  unsigned int v693 = (v647 ^ 0x5FF678AC) + (v692 ^ 0x7BD7D94F) + ((2 * v692) & 0xF7AFB29E);
  unsigned int v694 = v635
       + (v683 ^ 0x1C44880)
       + (v690 ^ 0xD2688057)
       + (v681 ^ 0x6B7F3F75)
       - ((2 * v690) & 0x5B2EFF50)
       - ((2 * v683) & 0xFC776EFE)
       + ((2 * v681) & 0xD6FE7EEA)
       + ((v693 - 2077743439) ^ 0x80008280)
       - ((2 * (v693 - 2077743439)) & 0xFFFEFAFE)
       + 1079211316;
  unsigned int v695 = (((v691 ^ 0x7DDBBCFE) + ((2 * v691) & 0xFBB779FC) - 2111552766 + (v663 ^ 0x5F59D865 ^ (v688 + 916448714))) ^ 0xBF7B238F)
       + ((2 * ((v691 ^ 0x7DDBBCFE) + ((2 * v691) & 0xFBB779FC) - 2111552766 + (v663 ^ 0x5F59D865 ^ (v688 + 916448714)))) & 0x7EF6471E)
       + 1082449009
       + (HIDWORD(v859) ^ 0xEEB82CE4 ^ (((2 * v694) & 0xFFF77E9A)
                                      + (v694 ^ 0x7FFBBF4D)
                                      - ((2 * (((2 * v694) & 0xFFF77E9A) + (v694 ^ 0x7FFBBF4D)) + 316852592) & 0x24DE4D04)
                                      - 1679783110));
  int v696 = v695 + 601961792 - ((2 * v695) & 0x47C26AC6);
  int v697 = v696 + 35;
  HIDWORD(v125) = (v696 + 35) ^ 0x563;
  LODWORD(v125) = (v696 + 35) ^ 0x23E13000;
  int v698 = v125 >> 11;
  int v699 = (v696 + 35) ^ 0x23E13563;
  HIDWORD(v125) = (v696 + 35) ^ 0xFFFFFFE3;
  LODWORD(v125) = (v696 + 35) ^ 0x23E13540;
  int v700 = v125 >> 6;
  unsigned int v701 = v679 ^ 0xCE4C8932 ^ (v696 + 35);
  int v702 = (v661 ^ 0x2BCE31D6 ^ (v696 + 35)) + v701 + 1;
  HIDWORD(v125) = (v696 + 35) ^ 0x1E13563;
  LODWORD(v125) = (v696 + 35) ^ 0x22222222;
  int v703 = v125 >> 25;
  unsigned int v704 = (v661 ^ 0xF7D0FB4A) + ((v696 + 35) ^ 0xDC1ECA9C) + 1;
  unsigned int v705 = ((2 * (v699 + (v679 ^ 0x125243AE) + 1)) & 0xCDFFACBE)
       + ((v699 + (v679 ^ 0x125243AE) + 1) ^ 0xE6FFD65F)
       + (v704 ^ 0xEFF6BEEE)
       + ((2 * v704) & 0xDFED7DDC);
  int v706 = (v705 - ((2 * v705 + 303224166) & 0x27ACD142) + 1021301588) ^ v661;
  HIDWORD(v125) = (v696 + 35) ^ 0x1563;
  LODWORD(v125) = (v696 + 35) ^ 0x23E12000;
  int v707 = v125 >> 13;
  unsigned int v708 = (v703 ^ 0x50480254)
       + (v698 ^ 0x5040442)
       + (v700 ^ 0xF2FEFF97)
       + ((2 * v700) & 0xE5FDFF2E)
       - ((2 * v703) & 0x5F6FFB56)
       - ((2 * v698) & 0xF5F7F77A)
       + 2;
  HIDWORD(v125) = (v696 + 35) ^ 0x213563;
  LODWORD(v125) = (v696 + 35) ^ 0x23C00000;
  int v709 = v125 >> 22;
  HIDWORD(v125) = v706 ^ 0x693EB;
  LODWORD(v125) = v706 ^ 0xE4000000;
  int v710 = (v125 >> 24) + 1220871168 - ((2 * (v125 >> 24)) & 0x918A08A2) + 81;
  unsigned int v711 = (((v696 + 35) ^ 0x23E13560u) >> 2) - (v696 << 30);
  HIDWORD(v125) = v710 ^ 0x51;
  LODWORD(v125) = v710 ^ 0x48C50400;
  unsigned int v712 = (v709 ^ 0x540190A)
       + (v707 ^ 0x2C40500)
       + (v711 ^ 0x7DD7ACC5)
       + ((2 * v711) & 0xFBAF598A)
       - ((2 * v709) & 0xF57FCDEA)
       - ((2 * v707) & 0xFA77F5FE)
       + 2;
  int v713 = (v647 ^ (v708 - ((2 * v708 + 1869214626) & 0x79BFAB14) - 191574181) ^ 0xBC6B2549 ^ ((v125 >> 8)
                                                                                           - ((2 * (v125 >> 8)) & 0xBE8510DE)
                                                                                           - 549287825))
       + 1088089828;
  unsigned int v714 = (v872 ^ 0x23BDC5B2) + (v713 ^ 0x5F7FF9D7) + ((2 * v713) & 0xBEFFF3AE) - 1602222550;
  unsigned int v715 = (v689 ^ (v702 - ((2 * v702) & 0xAB72C21C) + 1438212366) ^ 0xDD0B4ED5 ^ (v712
                                                                               - ((2 * v712 + 877161054) & 0x259ED180)
                                                                               + 217292271))
       + (v714 ^ 0xA7DFFAFB)
       + ((2 * v714) & 0x4FBFF5F6)
       + 1478493445;
  unsigned int v716 = v715 - 1764755456 + (~(2 * v715) | 0xD2600401) + 1536;
  unsigned int v717 = v716 ^ 0x96CFFDFF;
  unsigned int v718 = (v716 ^ 0x96CFFDFF) + v699;
  HIDWORD(v125) = v715;
  LODWORD(v125) = v716 ^ 0x96CFFDC0;
  int v719 = (v125 >> 6) - ((2 * (v125 >> 6)) & 0xF83B9D54);
  HIDWORD(v125) = v715;
  LODWORD(v125) = v716 ^ 0x96CFFDFC;
  int v720 = (v125 >> 2) - ((2 * (v125 >> 2)) & 0x795D076E);
  HIDWORD(v125) = v716 ^ 0xCFFDFF;
  LODWORD(v125) = v716 ^ 0x96000000;
  int v721 = v125 >> 25;
  HIDWORD(v125) = v716 ^ 0xFFDFF;
  LODWORD(v125) = v716 ^ 0x96C00000;
  int v722 = v125 >> 22;
  HIDWORD(v125) = v716 ^ 0xFFFFFDFF;
  LODWORD(v125) = v716 ^ 0x96CFF800;
  int v723 = (v125 >> 11) - ((2 * (v125 >> 11)) & 0xB35F90BC);
  HIDWORD(v125) = v716 ^ 0xFFFFFDFF;
  LODWORD(v125) = v716 ^ 0x96CFE000;
  int v724 = v716 ^ v679;
  unsigned int v725 = (v721 ^ 0xFEFDFBF7)
       + ((2 * v721) & 0xFDFBF7EE)
       + 16909322
       + ((v723 - 642791330) ^ (v719 - 65155414) ^ 0xDA4DF90B);
  unsigned int v726 = (v724 ^ 0x51E0F733 ^ (v718 - ((2 * v718) & 0x55056D3A) + 713209501)) + v680;
  unsigned int v727 = v662 + (v725 ^ 0xFE34ECEE) + ((2 * v725) & 0xFC69D9DC);
  unsigned int v728 = v724 ^ 0x3C85A835 ^ (v718 - ((2 * v718) & 0x8FCFD336) + 1206380955);
  unsigned int v729 = (HIDWORD(v840) ^ 0x64BE33DF)
       + (v726 ^ 0x48D7D57F)
       + ((2 * v726) & 0x91AFAAFE)
       + ((v727 + 30085906) ^ 0xEEFCEAF4)
       + ((2 * (v727 + 30085906)) & 0xDDF9D5E8)
       - 1635070808;
  int v730 = ((v728 + v701) ^ 0x8A014018)
       + ((v720 - 1129413705) ^ ((v125 >> 13) - ((2 * (v125 >> 13)) & 0x963F2F34) - 887122022) ^ (v722
                                                                                                - 1542601519
                                                                                                + (~(2 * v722) | 0xB7E4765F)) ^ 0xD3BCD0FD)
       - ((2 * (v728 + v701)) & 0xEBFD7FCE)
       + 1979629544;
  unsigned int v731 = ((2 * v730) & 0x89FEFB6A) + (v730 ^ 0xC4FF7DB5) + (v729 ^ 0xD55FFBF5) + ((2 * v729) & 0xAABFF7EA);
  int v732 = (2 * v731 + 1262554284) & 0x7770F880;
  v731 += 559481494;
  unsigned int v733 = v731 - v732;
  unsigned int v734 = (v731 - v732) ^ 0xBBB87C40;
  HIDWORD(v125) = v733 ^ 0x440;
  LODWORD(v125) = v733 ^ 0xBBB87800;
  int v735 = v125 >> 11;
  HIDWORD(v125) = v733 ^ 0x1B87C40;
  LODWORD(v125) = v733 ^ 0xBA000000;
  int v736 = (v125 >> 25) - ((2 * (v125 >> 25)) & 0x981A0D8A) - 871561531;
  int v737 = (v735 ^ 0xFEBBCE9F)
       + ((__PAIR64__(v731, v734) >> 6) ^ 0x7F32CDC7)
       + ((2 * (__PAIR64__(v731, v734) >> 6)) & 0xFE659B8E)
       + ((2 * v735) & 0xFD779D3E);
  HIDWORD(v125) = v733 ^ 0x1C40;
  LODWORD(v125) = v733 ^ 0xBBB86000;
  int v738 = (v125 >> 13) - ((2 * (v125 >> 13)) & 0x7603E636) + 989983515;
  unsigned int v739 = (v716 ^ 0x2D7781BF ^ v733) + (v697 ^ 0x98594923 ^ v733);
  int v740 = v739 ^ 0x48880000;
  int v741 = (2 * v739) & 0x6EEFFFFE;
  HIDWORD(v125) = v733 ^ 0x387C40;
  LODWORD(v125) = v733 ^ 0xBBBBBBBB;
  int v742 = (v733 ^ 0x444783BF) + 1;
  int v743 = v736 ^ 0x6D5664A8 ^ (v737 - ((2 * v737 + 69388084) & 0x42B6C4DA) + 594331143);
  unsigned int v744 = v742 + (v716 ^ 0x96CFFDFF);
  unsigned int v745 = (v716 ^ 0x96CFFDFF) + ((v743 + v680) ^ 0x7B7FFFDF) + ((2 * (v743 + v680)) & 0xF6FFFFBE) - 2071986143;
  unsigned int v746 = (v697 ^ 0xB52EC89C ^ v716) + v740 - v741 - 1216872448;
  int v747 = (v746 ^ 0x7F5FC7D7)
       + ((2 * v746) & 0xFEBF8FAE)
       + (((__PAIR64__(v731, v734) >> 2) - ((2 * (__PAIR64__(v731, v734) >> 2)) & 0x2343F1E) - 2128994417) ^ v738 ^ ((v125 >> 22) - ((2 * (v125 >> 22)) & 0x93D5C19A) - 907353907) ^ 0x73F10C59)
       - 2136983511;
  int v748 = (v747 ^ 0x3F17C7DE)
       + ((2 * v747) & 0x7E2F8FBC)
       - 1058523102
       + (v847 ^ 0xF2D75E15 ^ (((2 * v745) & 0xFF277354)
                             + (v745 ^ 0x7F93B9AA)
                             - ((2 * (((2 * v745) & 0xFF277354) + (v745 ^ 0x7F93B9AA)) + 448264518) & 0x16BF3E68)
                             + 1488690135));
  unsigned int v749 = (2 * v748) & 0xEB4D860C;
  v748 -= 173620474;
  int v750 = v748 - v749;
  unsigned int v751 = (v748 - v749) ^ 0xF5A6C306;
  HIDWORD(v125) = v750 ^ 0x26C306;
  LODWORD(v125) = v750 ^ 0xF5800000;
  int v752 = v125 >> 22;
  unsigned int v753 = (v716 ^ 0x9C96C106 ^ v750) + ((v751 + v734) ^ 0xFCF777B1) + ((2 * (v751 + v734)) & 0xF9EEEF62) + 50890832;
  HIDWORD(v125) = v750 ^ 0x306;
  LODWORD(v125) = v750 ^ 0xF5A6C000;
  int v754 = v125 >> 11;
  unsigned int v755 = ((2 * v744) & 0xF51FDEFA) + (v744 ^ 0x7A8FEF7D) + (v753 ^ 0xD3FF2FFD) + ((2 * v753) & 0xA7FE5FFA);
  HIDWORD(v125) = v750 ^ 0x1A6C306;
  LODWORD(v125) = v750 ^ 0xF4000000;
  int v756 = v125 >> 25;
  HIDWORD(v125) = v750 ^ 0x306;
  LODWORD(v125) = v750 ^ 0xF5A6C000;
  int v757 = (v125 >> 13) - ((2 * (v125 >> 13)) & 0xD1A4F228);
  HIDWORD(v125) = v750 ^ 6;
  LODWORD(v125) = v750 ^ 0xF5A6C300;
  int v758 = v125 >> 6;
  HIDWORD(v125) = v748 ^ 2;
  LODWORD(v125) = v750 ^ 0xF5A6C304;
  int v759 = (v752 ^ 0xC09843E1)
       - ((2 * v752) & 0x7ECF783C)
       + 1063762975
       + ((v757 + 1758624020) ^ ((v125 >> 2) - ((2 * (v125 >> 2)) & 0x3798C9DE) - 1681103633) ^ 0xF31E1DFB);
  unsigned int v760 = v699
       + (v756 ^ 0xBA800700)
       + (v754 ^ 0x6FF3F6FC)
       + (v758 ^ 0xB3FFB4BF)
       + ((2 * v754) & 0xDFE7EDF8)
       + ((2 * v758) & 0x67FF697E)
       - ((2 * v756) & 0x8AFFF1FE)
       + 562842949;
  unsigned int v761 = v734 + (v760 ^ 0xFDFB7F7F) + ((2 * v760) & 0xFBF6FEFE) + 33849473;
  unsigned int v762 = (HIDWORD(v847) ^ 0xA881F65A ^ (((2 * v761) & 0xFEAEFB7A)
                                      + (v761 ^ 0xFF577DBD)
                                      - ((2 * (((2 * v761) & 0xFEAEFB7A) + (v761 ^ 0xFF577DBD)) - 1025324024) & 0x918DEBFE)
                                      + 708336643))
       + ((v759 - ((2 * v759) & 0x9992972) - 2066967367) ^ (v755 - ((2 * v755 + 1658962188) & 0x52C2E986) + 1523733833) ^ 0x2DADE07A);
  unsigned int v763 = v762 - 751504239 - ((2 * v762) & 0xA669E922);
  unsigned int v764 = v763 ^ 0xD334F491;
  unsigned int v765 = (v763 ^ 0xD334F491) + v751 - ((2 * ((v763 ^ 0xD334F491) + v751)) & 0xFF619DD2) + 2142293737;
  HIDWORD(v125) = v763 ^ 0x1491;
  LODWORD(v125) = v763 ^ 0xD334E000;
  int v766 = (v125 >> 13) - ((2 * (v125 >> 13)) & 0x5570299E) - 1430776625;
  unsigned int v767 = ((v742 + (v763 ^ 0xD334F491) - ((2 * (v742 + (v763 ^ 0xD334F491))) & 0x3ECE2826) - 1620634605) ^ v765 ^ 0xE0D7DAFA)
       + v734;
  HIDWORD(v125) = v763 ^ 0x134F491;
  LODWORD(v125) = v763 ^ 0xD2000000;
  int v768 = v125 >> 25;
  HIDWORD(v125) = v763 ^ 1;
  LODWORD(v125) = v763 ^ 0xD334F490;
  int v769 = (v125 >> 2) - ((2 * (v125 >> 2)) & 0x43343778);
  HIDWORD(v125) = v763 ^ 0x11111111;
  LODWORD(v125) = v763 ^ 0xD334F480;
  int v770 = v125 >> 6;
  HIDWORD(v125) = v763 ^ 0x34F491;
  LODWORD(v125) = v763 ^ 0xD3000000;
  int v771 = v125 >> 22;
  HIDWORD(v125) = v763 ^ 0x491;
  LODWORD(v125) = v763 ^ 0xD334F000;
  int v772 = (v750 ^ 0x26923797 ^ v763) + (v733 ^ 0x688C88D1 ^ v763);
  unsigned int v773 = (v733 ^ 0x4E1EBF46 ^ v750) + (v772 ^ 0x4F8FCF3E) + ((2 * v772) & 0x9F1F9E7C) - 1334824766;
  int v774 = v717
       + (v768 ^ 0x28820114)
       + (v770 ^ 0x28848221)
       + ((v125 >> 11) ^ 0xFEBFA59F)
       - ((2 * v770) & 0xAEF6FBBC)
       - ((2 * v768) & 0xAEFBFDD6)
       + ((2 * (v125 >> 11)) & 0xFD7F4B3E)
       - 1338386644;
  unsigned int v775 = (v771 ^ 0x10247005) - ((2 * v771) & 0xDFB71FF4) - 270823429 + (v766 ^ (v769 - 1583735876) ^ 0xB220F73);
  unsigned int v776 = (HIDWORD(a42) ^ 0xBB47B276)
       + (v767 ^ 0x7676CBFC)
       + (v774 ^ 0x83FD1B7E)
       + ((2 * v767) & 0xECED97F8)
       + ((2 * v774) & 0x7FA36FC)
       - 1149020731;
  unsigned int v777 = ((v773 - ((2 * v773) & 0x77A5DEE8) + 1003679604) ^ 0xD34ADC12 ^ (v775 - ((2 * v775) & 0xD13066CC) - 392678554))
       + (v776 ^ 0x7FDBFAFE)
       + ((2 * v776) & 0xFFB7F5FC)
       - 2145123070;
  unsigned int v778 = v777 + 1666670725 - ((2 * v777) & 0xC6AEC10A);
  unsigned int v779 = ((2 * (v778 ^ v763)) & 0xBF5DE7F6 ^ 0x20452020) + (v778 ^ v763 ^ 0x6FCD67EF);
  int v780 = (((v778 ^ 0x63576085) + v751) ^ 0x41850250) - ((2 * ((v778 ^ 0x63576085) + v751)) & 0x7CF5FB5E) + v779 + 1;
  HIDWORD(v125) = v778 ^ 0x85;
  LODWORD(v125) = v778 ^ 0x63576000;
  int v781 = v125 >> 13;
  HIDWORD(v125) = v778 ^ 5;
  LODWORD(v125) = v778 ^ 0x63576080;
  int v782 = v125 >> 6;
  HIDWORD(v125) = v778 ^ 0x85;
  LODWORD(v125) = v778 ^ 0x63576000;
  int v783 = v125 >> 11;
  HIDWORD(v125) = v778 ^ 0x1576085;
  LODWORD(v125) = v778 ^ 0x62000000;
  int v784 = v125 >> 25;
  unsigned int v785 = (v750 ^ 0x96F1A383 ^ v778)
       + (((v763 ^ 0x2CCB0B6E) + (v778 ^ 0x63576085) + 1) ^ 0x777F5EF0)
       + ((2 * ((v763 ^ 0x2CCB0B6E) + (v778 ^ 0x63576085) + 1)) & 0xEEFEBDE0)
       - 2004836080;
  HIDWORD(v125) = v778 ^ 1;
  LODWORD(v125) = v778 ^ 0x63576084;
  int v786 = v125 >> 2;
  HIDWORD(v125) = v778 ^ 0x176085;
  LODWORD(v125) = v778 ^ 0x63400000;
  unsigned int v787 = v734
       + (v783 ^ 0x56092202)
       + (v784 ^ 0x7FE7FFB7)
       + (v782 ^ 0x60F08410)
       + ((2 * v784) & 0xFFCFFF6E)
       - ((2 * v783) & 0x53EDBBFA);
  unsigned int v788 = v781 ^ 0x80DE6215;
  unsigned int v789 = (2 * v781) & 0xFE433BD4;
  unsigned int v790 = v751 + (v785 ^ 0x8FF35743) + ((2 * v785) & 0x1FE6AE86) + 1879877821;
  int v791 = v787 - ((2 * v782) & 0x3E1EF7DE) - 920757705;
  int v792 = (v868 ^ 0x1BA35819) + (v791 ^ 0x3D97F5E6) + (v790 ^ 0xA7FDD3E);
  int v793 = v788
       + (v786 ^ 0x6CFBFFEB)
       + ((v125 >> 22) ^ 0x7002490A)
       + ((2 * v786) & 0xD9F7FFD6)
       - ((2 * (v125 >> 22)) & 0x1FFB6DEA)
       - v789
       - 1574742794
       + (v765 ^ 0x56EC2DE1 ^ (v780 - ((2 * v780 + 1033376616) & 0x52B9C610) + 136899772));
  unsigned int v794 = ((2 * v793) & 0xEFEFF77E)
       + (v793 ^ 0xF7F7FBBF)
       + ((v792 + ((2 * v791) & 0x7B2FEBCC) + ((2 * v790) & 0x14FFBA7C) + 745919162) ^ 0x5FCFBAF7)
       + ((2 * (v792 + ((2 * v791) & 0x7B2FEBCC) + ((2 * v790) & 0x14FFBA7C) + 745919162)) & 0xBF9F75EE);
  unsigned int v795 = v794 - 1968658890;
  unsigned int v796 = v794 - 1968658890 - ((2 * v794 + 1349554836) & 0xC4E0B9D8);
  HIDWORD(v125) = v796 ^ 0x2C;
  LODWORD(v125) = v796 ^ 0xE2705CC0;
  int v797 = v125 >> 6;
  HIDWORD(v125) = v796 ^ 0x4EC;
  LODWORD(v125) = v796 ^ 0xE2705800;
  int v798 = v125 >> 11;
  unsigned int v799 = v796 ^ 0xE2705CEC;
  HIDWORD(v125) = v796 ^ 0x705CEC;
  LODWORD(v125) = v796 ^ 0xE2000000;
  int v800 = v125 >> 25;
  HIDWORD(v125) = v796 ^ 0x305CEC;
  LODWORD(v125) = v796 ^ 0xE2400000;
  int v801 = v125 >> 22;
  int v802 = v796 ^ v763;
  unsigned int v803 = v751
       + (v800 ^ 0x4001A018)
       + (v798 ^ 0xF87FCF7B)
       + (v797 ^ 0xA9DFBED6)
       + ((2 * v798) & 0xF0FF9EF6)
       + ((2 * v797) & 0x53BF7DAC);
  HIDWORD(v125) = v796 ^ 0x1CEC;
  LODWORD(v125) = v796 ^ 0xE2704000;
  int v804 = v125 >> 13;
  HIDWORD(v125) = v795;
  LODWORD(v125) = v796 ^ 0xE2705CEC;
  unsigned int v805 = (v802 ^ 0x3144A87D)
       + (((v796 ^ 0xE2705CEC) + (v778 ^ 0x63576085)) ^ 0x27F9DBEB)
       + ((2 * ((v796 ^ 0xE2705CEC) + (v778 ^ 0x63576085))) & 0x4FF3B7D6)
       - 670686187;
  int v806 = ((v125 >> 2) ^ 0x3F7DFFFF)
       + (v804 ^ 0x5DBF7FDF)
       + (v801 ^ 0x9945080C)
       + ((2 * (v125 >> 2)) & 0x7EFBFFFE)
       + ((2 * v804) & 0xBB7EFFBE)
       - ((2 * v801) & 0xCD75EFE6)
       + 1;
  unsigned int v807 = (v802 ^ 0xBDA03435 ^ ((v778 ^ 0x9CA89F7A)
                             + (v796 ^ 0xE2705CEC)
                             + 1
                             - ((2 * ((v778 ^ 0x9CA89F7A) + (v796 ^ 0xE2705CEC) + 1)) & 0x19C93890)
                             - 1931174840))
       - v779;
  unsigned int v808 = v764 + (v805 ^ 0x9B086804) - ((2 * v805) & 0xC9EF2FF6) + 1693947900;
  unsigned int v809 = ((v530 - 2138374137) ^ 0xFEEEBD6E)
       + ((2 * (v530 - 2138374137)) & 0xFDDD7ADC)
       + ((v803 - ((2 * v800) & 0x7FFCBFCE) + 496947607) ^ 0xF4BFFD99)
       + (v808 ^ 0x1F9F9AEF)
       + ((2 * v808) & 0x3F3F35DE)
       + ((2 * (v803 - ((2 * v800) & 0x7FFCBFCE) + 496947607)) & 0xE97FFB32)
       - 459211438
       + ((v807 - ((2 * v807 + 1063118838) & 0x2E94A0A4) - 151436211) ^ (v806
                                                                       - ((2 * v806 - 1829048278) & 0xB41F5BE6)
                                                                       + 596452872) ^ 0x4D45FDA1);
  int v810 = v809 - 2002756791 - ((2 * v809) & 0x1140B692);
  HIDWORD(v125) = v810 ^ 0xA05B49;
  LODWORD(v125) = v810 ^ 0x88888888;
  int v811 = v125 >> 25;
  uint64_t v812 = (v778 ^ 0x63576085)
       + (a59 ^ 0x78E83AD)
       + 126780333
       - ((2 * ((v778 ^ 0x63576085) + (a59 ^ 0x78E83AD))) & 0xF1D075A);
  unsigned int v813 = ((v796 ^ 0xE2705CEC) & (a56 ^ 0xBFDEF85D))
       + 542361596
       + (~(2 * ((v796 ^ 0xE2705CEC) & (a56 ^ 0xBFDEF85D))) | 0xBF587009);
  HIDWORD(v125) = v810 ^ 0x1B49;
  LODWORD(v125) = v810 ^ 0x88A04000;
  int v814 = v125 >> 13;
  HIDWORD(v125) = v810 ^ 1;
  LODWORD(v125) = v810 ^ 0x88A05B48;
  int v815 = v125 >> 2;
  unsigned int v816 = (v796 ^ 0x6AD007A5 ^ v810) + (v778 ^ 0xEBF73BCC ^ v810);
  HIDWORD(v125) = v810 ^ 0x349;
  LODWORD(v125) = v810 ^ 0x88A05800;
  int v817 = v125 >> 11;
  uint64_t v818 = v816 ^ 0xF6FEF6AC;
  int v819 = (a56 ^ 0x5DAEA4B1 ^ v796) + ((2 * v813) ^ 0x4F526808) + ((4 * v813) & 0x1FEBCFFC ^ 0x14B0FEC) - 267773950;
  int v820 = (v778 ^ 0x81273C69 ^ v796) + v818 + ((2 * v816) & 0xEDFDED58) + 151062868;
  HIDWORD(v125) = v810 ^ 9;
  LODWORD(v125) = v810 ^ 0x88A05B40;
  int v821 = v125 >> 6;
  HIDWORD(v125) = v810 ^ 0x205B49;
  LODWORD(v125) = v810 ^ 0x88888888;
  int v822 = ((v125 >> 22) ^ 0x1FDB73B7)
       + (v814 ^ 0xFFB7BEFF)
       + (v815 ^ 0xDBFFFFDF)
       + ((2 * v814) & 0xFF6F7DFE)
       + ((2 * (v125 >> 22)) & 0x3FB6E76E)
       + ((2 * v815) & 0xB7FFFFBE);
  uint64_t v823 = v817 ^ 0xB4A6080u;
  int v824 = v764
       + (v811 ^ 0x1205B25)
       + (v821 ^ 0x3AA7FEED)
       + v823
       + ((2 * v821) & 0x754FFDDA)
       - ((2 * v811) & 0xFDBF49B4)
       - ((2 * v817) & 0xE96B3EFE);
  v810 ^= 0x88A05B49;
  unsigned int v825 = ((2 * v778) ^ 0xBD591BF7) + ((4 * v778) & 0xF7EFB5F8 ^ 0x854D8010) - 2079841021 + v810;
  int v826 = (v850 ^ 0x8A244260)
       + (v851 ^ 0xD64AD0)
       - ((2 * v850) & 0xEBB77B3E)
       - ((2 * v851) & 0xFE536A5E)
       + (v604 ^ 0xD6DCFC6F)
       + ((2 * v604) & 0xADB9F8DE)
       + ((v810 + v799) ^ 0x737F23DD)
       + (v825 ^ 0x8B880008)
       + ((2 * (v810 + v799)) & 0xE6FE47BA)
       - ((2 * v825) & 0xE8EFFFEE)
       + ((v824 - 1192409746) ^ 0x475A86E7)
       + ((2 * (v824 - 1192409746)) & 0x8EB50DCE)
       - 1702779662
       + ((v820 - ((2 * v820) & 0x9542979E) - 895398961) ^ 0x77C10889 ^ (v822
                                                                       - ((2 * v822 + 148478678) & 0x7AC0868C)
                                                                       - 1043525455));
  return ((uint64_t (*)(uint64_t, uint64_t, void, _UNKNOWN **, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + (int)((84 * (((((HIDWORD(v851) | HIDWORD(v854)) - HIDWORD(v851)) | (HIDWORD(v854) - HIDWORD(v851)) & ~(HIDWORD(v854) ^ HIDWORD(v851))) >> (BYTE4(v851) + 110)) & 1)) ^ (HIDWORD(v851) - 1883129765 + HIDWORD(v851) - 1883128491))))(v823, 2059437708, (v826 + 1274209522 - ((2 * v826) & 0x97E5C9E4)) ^ a54, &off_10026D1A0, v818, v819 - 1075906467 - ((2 * v819) & 0x7FBDF0BAu), v812, 2292210505, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           v828,
           v829,
           v830,
           v831,
           v832,
           v833,
           v834,
           v835,
           v836,
           v837,
           v838,
           v840,
           v841,
           v842,
           *((void *)&v842 + 1),
           v843,
           v844,
           a34,
           a35,
           a36,
           a37,
           a38,
           v845,
           v846,
           a41,
           a42,
           v847,
           v850,
           v851,
           v854,
           v855,
           v856,
           v857,
           v859);
}

uint64_t sub_1000C3434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,unsigned int a59)
{
  return (*(uint64_t (**)(uint64_t, void))(a4 + 8 * (((50 * (v59 ^ 0x40E) + 186) * (v60 == v61 + 1)) ^ v59)))(a21, a59);
}

void sub_1000C3494()
{
}

uint64_t sub_1000C3544(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  unsigned int v19 = (unsigned char *)(v18 - 120);
  v19[3] = a7 ^ 0x93;
  v19[8] = BYTE2(a3) ^ 0x46;
  v19[15] = HIBYTE(a7) ^ 0x39;
  unsigned int v20 = (((2 * (HIBYTE(a6) & 0xF0 ^ 0x10)) | 0xF5B3442) - (HIBYTE(a6) & 0xF0 ^ 0x10) + 2018665951) ^ 0x86A09202;
  unsigned int v21 = (((2 * v20) | 0x8BB5CE12) - v20 - 1171973897) ^ 0x44D7EF8A | ((HIBYTE(a6) & 5)
                                                                    + 306217663
                                                                    + (HIBYTE(a6) & 0xA ^ 0x4803)) ^ 0x1240CACD;
  int v22 = v21 - ((2 * v21) & 0x8E) - 57;
  v19[14] = v22 ^ 0xF9;
  int v390 = (a7 ^ 0xAD) + v17 - ((2 * (a7 ^ 0xAD)) & 0x120);
  int v392 = (v22 ^ 0xC7) - ((2 * (v22 ^ 0xC7)) & 0x130);
  v19[6] = BYTE1(a6) ^ 0xC6;
  int v23 = (BYTE1(a6) ^ 0xF8) - ((2 * (BYTE1(a6) ^ 0xF8)) & 0x2C);
  int v24 = *(unsigned __int8 *)((LODWORD(STACK[0xC58]) ^ 0x7F5FDF8020322F30)
                           + a13
                           + ((2 * (LODWORD(STACK[0xC58]) ^ 0xDFDD90C7)) & 0x1FFDF7FEELL)
                           + 0x5E1213AB80434E5DLL);
  int v388 = (BYTE2(a3) ^ 0x78) - ((a3 >> 15) & 0xC);
  int v379 = (v24 ^ 0x11) - ((2 * (v24 ^ 0x11)) & 0x128);
  v19[9] = BYTE2(v16) ^ 0x3E;
  int v384 = BYTE2(v16) + 4893253 - ((2 * BYTE2(v16)) & 0xFF87);
  int v25 = *(unsigned __int8 *)((LODWORD(STACK[0xAD4]) ^ 0x56FDBFFEF30BEF3ELL)
                           + ((2 * (LODWORD(STACK[0xAD4]) ^ 0xDFDD90C7)) & 0x59ACFFF2)
                           + a13
                           - 0x798BCCD1ACA371A5) ^ 0x11;
  int v26 = v25 - ((2 * v25) & 0x1F4);
  int v27 = *(unsigned __int8 *)((LODWORD(STACK[0xF60]) ^ 0x2FF72FEC28A24F31)
                           + a13
                           + ((2 * (LODWORD(STACK[0xF60]) ^ 0xDFDD90C7)) & 0x1EEFFBFECLL)
                           - 0x52853CC0774CD1A2) ^ 0x11;
  int v380 = v27 - ((2 * v27) & 0xB0);
  unsigned int v382 = STACK[0x988];
  int v28 = *(unsigned __int8 *)((LODWORD(STACK[0x950]) ^ 0x7BFEFDEF33200EB0)
                           + a13
                           + ((2 * (LODWORD(STACK[0x950]) ^ 0xDFDD90C7)) & 0x1D9FB3CEELL)
                           + 0x6172F53C93356FDDLL) ^ 0x11;
  int v29 = v28 - ((2 * v28) & 0x6E);
  int v30 = *(unsigned __int8 *)((LODWORD(STACK[0x1268]) ^ 0xEEE9FBFF14648739)
                           + a13
                           + ((2 * (LODWORD(STACK[0x1268]) ^ 0xDFDD90C7)) & 0x197722FFCLL)
                           - 0x117808D34B8609AALL) ^ 0x11;
  v19[13] = HIBYTE(v16) ^ 0xD0;
  int v31 = (HIBYTE(v16) ^ 0xEE) - ((2 * (HIBYTE(v16) ^ 0xEE)) & 0xE4);
  int v33 = *(unsigned __int8 *)((LODWORD(STACK[0x16F4]) ^ 0x79F77AEB8D766B11)
                           + ((2 * (LODWORD(STACK[0x16F4]) ^ 0xDFDD90C7)) & 0xA557F7AC)
                           + a13
                           + 0x637A78412D87127ELL) ^ 0x11;
  int v34 = v33 - ((2 * v33) & 0x2A);
  int v35 = *(unsigned __int8 *)((LODWORD(STACK[0x18B0]) ^ 0x7FDE2AEB0831A830)
                           + a13
                           + ((2 * (LODWORD(STACK[0x18B0]) ^ 0xDFDD90C7)) & 0x1AFD871EELL)
                           + 0x5D93C840A846D55DLL);
  int v36 = (v35 ^ 0x11) - ((2 * v35) & 0x194);
  *unsigned int v19 = a3 ^ 0x6D;
  int v37 = (a3 ^ 0x53) + (~(2 * (a3 ^ 0x53)) | 0xFE6D);
  v19[12] = HIBYTE(a3) ^ 0x97;
  unsigned int v38 = (HIBYTE(a3) ^ 0xA9) - ((2 * (HIBYTE(a3) ^ 0xA9)) & 0xBBBBBBBB);
  void v19[4] = BYTE1(a3) ^ 0xC9;
  v19[5] = (v16 >> (v15 + 54)) ^ 0xA8;
  int v39 = (v16 >> (v15 + 54)) ^ 0x96;
  int v40 = *(unsigned __int8 *)((LODWORD(STACK[0x1A34]) ^ 0xEDFFFF9D20A66B3ALL)
                           + a13
                           + ((2 * (LODWORD(STACK[0x1A34]) ^ 0xDFDD90C7)) & 0x1FEF7F7FALL)
                           - 0x108E0C717F48EDA9) ^ 0x11;
  int v41 = v40 - ((2 * v40) & 0xF0);
  int v42 = *(unsigned __int8 *)((LODWORD(STACK[0x1570]) ^ 0xB2FFFEF7B1301729)
                           + ((2 * (LODWORD(STACK[0x1570]) ^ 0xDFDD90C7)) & 0xDDDB0FDC)
                           + a13
                           + 0x2A71F43511458666) ^ 0x11;
  unsigned int v43 = v42 - ((2 * v42) & 0xFFFFFF0F);
  unsigned int v44 = ((((v29 << 16) + 2100756480) ^ 0x7D370000)
       - ((2 * (((v29 << 16) + 2100756480) ^ 0x7D370000)) & 0x4F6C0000)
       + 666254366) ^ 0x27B63C1E | (((((v26 << 8) - 1681589760) ^ 0x9BC4FA00)
                                   + 899557185
                                   + (~(2 * (((v26 << 8) - 1681589760) ^ 0x9BC4FA00)) | 0x94C3B1FF)) | 1) ^ 0x359E2741;
  unsigned int v45 = v44 - ((2 * v44) & 0x85A0226);
  unsigned int v46 = ((((BYTE1(a3) ^ 0xF7) - ((2 * (BYTE1(a3) ^ 0xF7)) & 0x8E)) << 16) - 1756954624) ^ 0x97470000;
  int v47 = (((v39 - 2 * (v39 & 0x7F)) << 8) + 378830592) ^ 0x16947F00;
  int v48 = (v47 - ((2 * v47) & 0x66E76200) + 1936962029) ^ 0x7373B1ED | (v46 - ((2 * v46) & 0x4B8E0000) + 633840017) ^ 0x25C7A191;
  int v49 = v48 - ((2 * v48) & 0x2027578C);
  int v50 = *(unsigned __int8 *)((LODWORD(STACK[0x19FC]) ^ 0x3E3BFFDF223B7804)
                           + a13
                           + ((2 * (LODWORD(STACK[0x19FC]) ^ 0xDFDD90C7)) & 0x1FBCDD186)
                           - 0x60CA0CB37DB3DA6FLL);
  int v51 = (v50 ^ 0x11) - ((2 * v50) & 0x4C);
  int v52 = *(unsigned __int8 *)((LODWORD(STACK[0x1878]) ^ 0xDFEFCB7DA020EB24)
                           + ((2 * (LODWORD(STACK[0x1878]) ^ 0xDFDD90C7)) & 0xFFFAF7C6)
                           + a13
                           - 0x27DD850FFCA6D8FLL);
  int v53 = *(unsigned __int8 *)((LODWORD(STACK[0x13EC]) ^ 0x5E73DBDF2D2B7F78)
                           + a13
                           + ((2 * (LODWORD(STACK[0x13EC]) ^ 0xDFDD90C7)) & 0x1E5EDDF7ELL)
                           + 0x7EFE174C8D3C1E95) ^ 0x11;
  unsigned int v54 = v53 - ((2 * v53) & 0xFFFFFFDF);
  int v55 = (HIBYTE(a7) ^ 7) - ((2 * (HIBYTE(a7) ^ 7)) & 0x166) - 1393458765;
  v19[2] = a6 ^ 0x63;
  int v383 = v15;
  int v56 = *(unsigned __int8 *)((LODWORD(STACK[0x1BB8]) ^ 0xCF3FFEDF3566CFBALL)
                           + a13
                           + ((2 * (LODWORD(STACK[0x1BB8]) ^ 0xDFDD90C7)) & 0x1D576BEFALL)
                           + 0xE31F44C9577AED7) ^ 0x11;
  unsigned int v57 = (v49 - 1877759034) ^ 0x9013ABC6 | (v23 + 566093590) ^ 0x21BDE716;
  unsigned int v58 = ((((v41 << 8) - 1459914752) ^ 0xA8FB7800)
       - ((2 * (((v41 << 8) - 1459914752) ^ 0xA8FB7800)) & 0x1D81C00)
       - 2132013470) ^ 0x80EC0E62 | ((((v36 << 16) - 2117468160) ^ 0x81CA0000)
                                   - 1819970919
                                   + (~(2 * (((v36 << 16) - 2117468160) ^ 0x81CA0000)) | 0xD8F5FFFF)
                                   + 1) ^ 0x93857299;
  unsigned int v59 = (v58 - ((2 * v58) & 0x1518E5C8) - 1970507036) ^ 0x8A8C72E4 | (v56 - ((2 * v56) & 0xCE) + 44222311) ^ 0x2A2C767;
  int v60 = ((((v43 << 16) + 1686568960) ^ 0x64870000)
       - ((2 * (((v43 << 16) + 1686568960) ^ 0x64870000)) & 0x45B40000)
       + 1658477681) ^ 0x62DA5C71 | ((((v34 << 8) + 1617958144) ^ 0x60701500)
                                   - ((2 * (((v34 << 8) + 1617958144) ^ 0x60701500)) & 0x37FFC200)
                                   + 469754303) ^ 0x1BFFE1BF;
  int v61 = *(unsigned __int8 *)((LODWORD(STACK[0xDDC]) ^ 0x3FFEFDE50042EE38)
                           + a13
                           + ((2 * (LODWORD(STACK[0xDDC]) ^ 0xDFDD90C7)) & 0x1BF3EFDFELL)
                           - 0x628D0AB95F6C70ABLL) ^ 0x11;
  int v62 = (v60 - ((2 * v60) & 0x1CD405F0) + 1315570424) ^ 0x4E6A02F8 | (1946131967 - (v52 ^ 0x11)) ^ 0x73FF9DFF;
  v19[1] = v16 ^ 0x24;
  int v63 = (((v57 + 3206194 - ((2 * v57) & 0x61E3AE)) << 8) + 369920) ^ 0x30F1D700;
  unsigned int v64 = (v45 - 1003683565) ^ 0xC42D0113 | (v379 - 1890144620) ^ 0x8F56AE94;
  unsigned int v65 = (((v59 - ((2 * v59) & 0x1536E8)) << 8) - 1969523712) ^ 0x8A9B7400;
  unsigned int v66 = v65 - ((2 * v65) & 0x19C87C00);
  int v67 = (((v64 - ((2 * v64) & 0xCE3B6)) << 8) + 108124928) ^ 0x671DB00;
  int v68 = v67 - ((2 * v67) & 0x911F200);
  v19[11] = BYTE2(a7) ^ 0xB0;
  v19[10] = BYTE2(a6) ^ 0xE0;
  unsigned int v69 = (BYTE2(a6) ^ 0xDE) - ((2 * (BYTE2(a6) ^ 0xDE)) & 0x99999999);
  int v70 = (((v37 << 16) + 667549696) ^ 0x27C90000) - ((2 * (((v37 << 16) + 667549696) ^ 0x27C90000)) & 0x153C0000);
  int v71 = ((((v16 ^ 0x1A) - ((2 * (v16 ^ 0x1A)) & 0x13A)) << 8) + 1038720256) ^ 0x3DE99D00;
  unsigned int v72 = (v71 - ((2 * v71) & 0x4B5D6200) - 1515277853) ^ 0xA5AEB1E3 | (v70 - 1969321824) ^ 0x8A9E88A0;
  v19[7] = BYTE1(a7) ^ 0xBD;
  int v73 = *(unsigned __int8 *)((LODWORD(STACK[0x10E4]) ^ 0x1EFFDFC9BB726B22)
                           + ((2 * (LODWORD(STACK[0x10E4]) ^ 0xDFDD90C7)) & 0xC95FF7CA)
                           + a13
                           - 0x418DEC9CE47CED91) ^ 0x11;
  int v74 = (v72 + 1826084955 + (~(2 * v72) | 0x26504F49) + 1) ^ 0x6CD7D85B | ((a6 ^ 0x5D)
                                                                         - ((2 * (a6 ^ 0x5D)) & 0xD6)
                                                                         + 910598507) ^ 0x3646A16B;
  int v75 = v74 - ((2 * v74) & 0xAEA76A);
  int v76 = *(unsigned __int8 *)((LODWORD(STACK[0x1D3C]) ^ 0x1B37EF7F0403F31ALL)
                           + a13
                           + ((2 * (LODWORD(STACK[0x1D3C]) ^ 0xDFDD90C7)) & 0x1B7BCC7BALL)
                           - 0x3DC5FC535BAB5589) ^ 0x11;
  unsigned int v77 = (v63 - ((2 * v63) & 0xA3559800) - 777335796) ^ 0xD1AACC0C | ((BYTE1(a7) ^ 0x83)
                                                                   - ((2 * (BYTE1(a7) ^ 0x83)) & 0xE2)
                                                                   - 1580449167) ^ 0xA1CC4271;
  unsigned int v78 = v77 - ((2 * v77) & 0xC6C32E98) + 1667340108;
  unsigned int v79 = (((v73 + 3666247 - ((2 * v73) & 0xFFFFFFC3)) << 8) + 760320) ^ 0x37FCE100;
  unsigned int v80 = (v79 - ((2 * v79) & 0x7D4E7C00) - 1096335838) ^ 0xBEA73E22 | ((((v380 << 16) - 1688731648) ^ 0x9B580000)
                                                                    - ((2 * (((v380 << 16) - 1688731648) ^ 0x9B580000)) & 0x6CC60000)
                                                                    + 912520979) ^ 0x3663F713;
  unsigned int v81 = (v66 - 1931198900) ^ 0x8CE43E4C | (v76 - ((2 * v76) & 0xFC) + 1926292350) ^ 0x72D0E37E;
  unsigned int v82 = (v80 - ((2 * v80) & 0x7721ABA) + 62459229) ^ 0x3B90D5D | (v30 - ((2 * v30) & 0x5A) - 1964266195) ^ 0x8AEBAD2D;
  unsigned int v83 = (((((v62 - ((2 * v62) & 0x149D30)) << 8) - 1974560768) ^ 0x8A4E9800)
       - ((2 * ((((v62 - ((2 * v62) & 0x149D30)) << 8) - 1974560768) ^ 0x8A4E9800)) & 0x17D5D600)
       - 1947538471) ^ 0x8BEAEBD9 | (v51 + 770609190) ^ 0x2DEE9026;
  unsigned int v84 = (v68 - 2071397990) ^ 0x8488F99A | (v61 - 1167046387 + (~(2 * v61) | 0xFFFFFFE5) + 1) ^ 0xBA70490D;
  unsigned int v85 = (((((v384 << 8) + 753152) ^ 0x4AB5C300) + 213910809 + (~(2 * (((v384 << 8) + 753152) ^ 0x4AB5C300)) | 0xE67FF5FF)) | 1) ^ 0xCC00519 | ((((v388 << 16) + 1057357824) ^ 0x3F060000) - ((2 * (((v388 << 16) + 1057357824) ^ 0x3F060000)) & 0x38A00000) - 1672456452) ^ 0x9C5056FC;
  unsigned int v86 = (v69 + 1268065740) ^ 0x4B9525CC | (v85 - ((2 * v85) & 0x8425B6F6) + 1108532091) ^ 0x4212DB7B;
  unsigned int v87 = (((v86 - ((2 * v86) & 0x6CBD76)) << 8) - 1235305728) ^ 0xB65EBB00;
  unsigned int v88 = (v87 + 422414516 + (~(2 * v87) | 0xCDA4EFFF) + 1) ^ 0x192D88B4 | ((BYTE2(a7) ^ 0x8E)
                                                                        - ((2 * (BYTE2(a7) ^ 0x8E)) & 0xAC)
                                                                        - 930024618) ^ 0xC890F356;
  int v89 = (((v82 - ((2 * v82) & 0x999DE6)) << 8) + 1288631040) ^ 0x4CCEF300;
  int v90 = (v89 - ((2 * v89) & 0x3F6CC00) + 33252908) ^ 0x1FB662C | (v54 + 193308655) ^ 0xB85A7EF;
  unsigned int v91 = (v84 - ((2 * v84) & 0xFEC28DB0) - 10402088) ^ v55 ^ (v83 - ((2 * v83) & 0x65259E86) + 848482115) ^ v78;
  unsigned int v92 = (v81 - ((2 * v81) & 0xBB14A9E8) + 1569346804) ^ v390 ^ ((((v75 << 8) + 1465103616) ^ 0x5753B500)
                                                              - ((2 * (((v75 << 8) + 1465103616) ^ 0x5753B500)) & 0x3FCC5200)
                                                              + 535177515) ^ (v90 - ((2 * v90) & 0xB7C82E06) + 1541674755) ^ (v88 - ((2 * v88) & 0x9C69D826) - 835392493);
  unsigned int v93 = ((((v38 << 16) - 1411579904) ^ 0xABDD0000)
       - ((2 * (((v38 << 16) - 1411579904) ^ 0xABDD0000)) & 0x30C60000)
       - 664581137) ^ 0xD8634BEF | ((((v31 << 8) - 1140821504) ^ 0xBC007200)
                                  - ((2 * (((v31 << 8) - 1140821504) ^ 0xBC007200)) & 0x51F75400)
                                  - 386160101) ^ 0xE8FBAA1B;
  unsigned int v94 = (v93 - ((2 * v93) & 0x7A5C001A) - 47316979) ^ 0xFD2E000D | (v392 + 22036376) ^ 0x1503F98;
  int v95 = (((v94 - ((2 * v94) & 0x8616F0)) << 8) + 1124825088) ^ 0x430B7800;
  LOBYTE(STACK[0x488]) = v92 ^ 0x13;
  LOBYTE(STACK[0x4C0]) = v92 ^ 0x13;
  unsigned int v96 = v91 ^ (v95 - ((2 * v95) & 0xB8365A00) + 1545285021);
  unsigned int v97 = ((((v96 ^ 0x5E78B2F9) - 1487922518) ^ 0xFC7776BF)
       + 59279681
       + ((2 * ((v96 ^ 0x5E78B2F9) - 1487922518)) & 0xF8EEED7E))
      * (v96 ^ 0x5E78B2F9);
  LOBYTE(STACK[0x651]) = BYTE1(v92) ^ 0x46;
  LOBYTE(STACK[0x689]) = BYTE1(v92) ^ 0x46;
  LOBYTE(STACK[0x66D]) = BYTE1(v96) ^ 0xFE;
  LOBYTE(STACK[0x6A5]) = BYTE1(v96) ^ 0xFE;
  LOBYTE(STACK[0x852]) = BYTE2(v92) ^ 0x19;
  LOBYTE(STACK[0x81A]) = BYTE2(v92) ^ 0x19;
  LOBYTE(STACK[0x2DB]) = HIBYTE(v92) ^ 0xC9;
  LOBYTE(STACK[0x313]) = HIBYTE(v92) ^ 0xC9;
  LOBYTE(STACK[0x86E]) = BYTE2(v96) ^ 0x34;
  LOBYTE(STACK[0x836]) = BYTE2(v96) ^ 0x34;
  unsigned int v98 = (v97 ^ 0x7DEFAD7F) + (v92 ^ 0x85550A5F) + ((2 * v97) & 0xFBDF5AFE) - 2050675341;
  unsigned int v99 = ((2 * v98) & 0xBEFF3BB8) + (v98 ^ 0x5F7F9DDC);
  LOBYTE(v91) = v91 ^ 0x28;
  LOBYTE(STACK[0x4A4]) = v91;
  LOBYTE(STACK[0x4DC]) = v91;
  unsigned int v100 = (v96 ^ 0x5E78B2F9)
       + (((v99 + 114047665) * (v99 - 1602199004)) ^ 0xF96FFFEA)
       + ((2 * (v99 + 114047665) * (v99 - 1602199004)) & 0xF2DFFFD4)
       - 2133905520;
  unsigned int v101 = ((2 * v100) & 0x77BEF7CA) + (v100 ^ 0xBBDF7BE5);
  LOBYTE(v38) = (((v99 - 1602199004) >> 16) - (((v99 - 1602199004) >> 15) & 0x36) + 27) ^ 0x57;
  LOBYTE(STACK[0x2F7]) = HIBYTE(v96) ^ 0x12;
  LOBYTE(STACK[0x32F]) = HIBYTE(v96) ^ 0x12;
  LOBYTE(STACK[0x88A]) = v38;
  LOBYTE(STACK[0x8C2]) = v38;
  LOBYTE(v75) = v99 - ((2 * v99 + 72) & 0x98) + 112;
  LOBYTE(STACK[0x4F8]) = v75;
  LOBYTE(STACK[0x530]) = v75;
  LOBYTE(v31) = (((unsigned __int16)(v99 + 25124) >> 8) - (((v99 - 1602199004) >> 7) & 8) - 124) ^ 0xC8;
  LOBYTE(STACK[0x6C1]) = v31;
  LOBYTE(STACK[0x6F9]) = v31;
  LOBYTE(v31) = v101 + (~(2 * v101 + 54) | 0x67) + 104;
  LOBYTE(STACK[0x514]) = v31;
  LOBYTE(STACK[0x54C]) = v31;
  LOBYTE(v91) = (((v99 - 1602199004) >> 24) - (((v99 - 1602199004) >> 23) & 0xF2) + 121) ^ 0x35;
  LOBYTE(STACK[0x383]) = v91;
  LOBYTE(STACK[0x34B]) = v91;
  unsigned int v102 = (((v101 + 1142981659) * (v101 + 932878799)) ^ 0x676D78BF)
       + v99
       + ((2 * (v101 + 1142981659) * (v101 + 932878799)) & 0xCEDAF17E);
  LOBYTE(v91) = (((unsigned __int16)(v101 - 31717) >> 8) - (((v101 + 1142981659) >> 7) & 0xA) - 123) ^ 0xC9;
  LOBYTE(STACK[0x6DD]) = v91;
  LOBYTE(STACK[0x715]) = v91;
  LOBYTE(v91) = (((v101 + 1142981659) >> 24) - (((v101 + 1142981659) >> 23) & 4) + 2) ^ 0x4E;
  LOBYTE(STACK[0x39F]) = v91;
  LOBYTE(STACK[0x367]) = v91;
  unsigned int v103 = (((v102 + 1937809264) * (v102 - 1750329334)) ^ 0xDFDD9DFF)
       + v101
       + ((2 * (v102 + 1937809264) * (v102 - 1750329334)) & 0xBFBB3BFE);
  LOBYTE(STACK[0x8A6]) = (((v101 + 1142981659) >> 16) - (((v101 + 1142981659) >> 15) & 0xAE) + 87) ^ 0x1B;
  LOBYTE(v96) = v102 - ((2 * v102 + 20) & 0x98) + 86;
  LOBYTE(STACK[0x5A0]) = v96;
  LOBYTE(STACK[0x568]) = v96;
  LOBYTE(v54) = (((unsigned __int16)(v102 + 6154) >> 8) - (((v102 - 1750329334) >> 7) & 0xE6) - 13) ^ 0xBF;
  LOBYTE(STACK[0x731]) = v54;
  LOBYTE(STACK[0x769]) = v54;
  LOBYTE(STACK[0x22A]) = (((v102 - 1750329334) >> 16) - (((v102 - 1750329334) >> 15) & 0xA2) + 81) ^ 0x1D;
  LOBYTE(v101) = (((v103 - 1635984458) >> 16) - (((v103 - 1635984458) >> 15) & 0xBA) + 93) ^ 0x11;
  HIDWORD(v105) = v102
                + (((v103 - 1635984458) * (v103 - 1820617369)) ^ 0xBEB79CD7)
                + ((2 * (v103 - 1635984458) * (v103 - 1820617369)) & 0x7D6F39AE)
                + 821502992;
  LODWORD(v105) = HIDWORD(v105);
  int v104 = v105 >> 30;
  HIDWORD(v105) = v104;
  LODWORD(v105) = (v104 - ((2 * v104) & 0xAA7976C8) - 717440156) ^ 0xD53CBB64;
  int v106 = (v105 >> 2) - ((2 * (v105 >> 2)) & 0xC941BEA2) + 1688264529;
  char v107 = (((unsigned __int16)(v103 - 9290) >> 8) - (((v103 - 1635984458) >> 7) & 0x38) + 28) ^ 0x50;
  LOBYTE(STACK[0x785]) = v107;
  LOBYTE(STACK[0x74D]) = v107;
  LOBYTE(v31) = (((v102 - 1750329334) >> 24) - (((v102 - 1750329334) >> 23) & 4) + 2) ^ 0x4E;
  LOBYTE(STACK[0x3F3]) = v31;
  LOBYTE(STACK[0x3BB]) = v31;
  LOBYTE(v96) = ((v103 - 1635984458) >> 24) - (((v103 - 1635984458) >> 23) & 0x34);
  unsigned int v108 = ((((v106 ^ 0x64A0DF51) + 237491931) ^ 0xCE5FAFCF)
        + 832589873
        + ((2 * ((v106 ^ 0x64A0DF51) + 237491931)) & 0x9CBF5F9E))
       * (v106 ^ 0x64A0DF51);
  LOBYTE(v88) = v103 - ((2 * v103 + 108) & 0x98) + 2;
  LOBYTE(STACK[0x584]) = v88;
  LOBYTE(STACK[0x5BC]) = v88;
  LOBYTE(STACK[0x610]) = v106 ^ 0x1D;
  LOBYTE(STACK[0x5D8]) = v106 ^ 0x1D;
  LOBYTE(STACK[0x246]) = v101;
  LOBYTE(STACK[0x20E]) = v101;
  unsigned int v109 = (v108 ^ 0x7BFBE6DB) + v103 + ((2 * v108) & 0xF7F7CDB6);
  LOBYTE(v96) = (v96 - 102) ^ 0xD6;
  LOBYTE(STACK[0x3D7]) = v96;
  LOBYTE(STACK[0x40F]) = v96;
  LOBYTE(STACK[0x262]) = BYTE2(v106) ^ 0xEC;
  LOBYTE(STACK[0x29A]) = BYTE2(v106) ^ 0xEC;
  unsigned int v110 = (v106 ^ 0x64A0DF51)
       + (((v109 + 826441964) * (v109 + 1129484195)) ^ 0xCDEFD7FF)
       + ((2 * (v109 + 826441964) * (v109 + 1129484195)) & 0x9BDFAFFE)
       + 101860627;
  unsigned int v111 = ((2 * v110) & 0x7FCEFD76) + (v110 ^ 0xBFE77EBB);
  LOBYTE(STACK[0x7D9]) = BYTE1(v106) ^ 0x93;
  LOBYTE(STACK[0x7A1]) = BYTE1(v106) ^ 0x93;
  LOBYTE(v102) = v111 + (~(2 * v111 - 118) | 0x67) - 110;
  LOBYTE(STACK[0x680]) = v102;
  LOBYTE(STACK[0x648]) = v102;
  LOBYTE(v102) = v109 - ((2 * v109 + 70) & 0x98) - 17;
  LOBYTE(STACK[0x5F4]) = v102;
  LOBYTE(STACK[0x62C]) = v102;
  LOBYTE(v102) = (((unsigned __int16)(v109 - 28765) >> 8) - (((v109 + 1129484195) >> 7) & 0x7E) + 63) ^ 0x73;
  LOBYTE(STACK[0x7BD]) = v102;
  LOBYTE(STACK[0x7F5]) = v102;
  LOBYTE(v31) = ((v111 + 1075347781) >> 16) - (((v111 + 1075347781) >> 15) & 0x1A);
  LOBYTE(STACK[0x463]) = HIBYTE(v106) ^ 0x28;
  LOBYTE(STACK[0x42B]) = HIBYTE(v106) ^ 0x28;
  LOBYTE(v75) = (((v109 + 1129484195) >> 24) - (((v109 + 1129484195) >> 23) & 0x54) + 42) ^ 0x66;
  LOBYTE(STACK[0x47F]) = v75;
  LOBYTE(STACK[0x447]) = v75;
  LOBYTE(v75) = ((~((v111 + 1075347781) >> 7) | 0xBF) + ((unsigned __int16)(v111 - 32443) >> 8) + 33) ^ 0x6C;
  LOBYTE(v88) = (((v109 + 1129484195) >> 16) - (((v109 + 1129484195) >> 15) & 0x54) - 86) ^ 0xE6;
  LOBYTE(STACK[0x27E]) = v88;
  LOBYTE(STACK[0x2B6]) = v88;
  unsigned int v112 = (((v111 + 417823491) * (v111 + 1075347781)) ^ 0x556D7FF6)
       + v109
       + ((2 * (v111 + 417823491) * (v111 + 1075347781)) & 0xAADAFFEC);
  LOBYTE(STACK[0x849]) = v75;
  LOBYTE(STACK[0x811]) = v75;
  LOBYTE(v106) = (((v111 + 1075347781) >> 24) - (((v111 + 1075347781) >> 23) & 0x62) - 79) ^ 0xFD;
  LOBYTE(STACK[0x49B]) = v106;
  LOBYTE(STACK[0x4D3]) = v106;
  unsigned int v113 = (((v112 - 1346218887) * (v112 - 1249567487)) ^ 0xBFEFED7E)
       + v111
       + ((2 * (v112 - 1346218887) * (v112 - 1249567487)) & 0x7FDFDAFC);
  LOBYTE(v60) = ((unsigned __int16)(v112 + 7425) >> 8) - (((v112 - 1249567487) >> 7) & 0x78);
  LOBYTE(v31) = (v31 - 115) ^ 0xC1;
  LOBYTE(STACK[0x30A]) = v31;
  LOBYTE(STACK[0x2D2]) = v31;
  LOBYTE(v88) = (((v112 - 1249567487) >> 24) - (((v112 - 1249567487) >> 23) & 0x82) + 65) ^ 0xD;
  LOBYTE(v106) = ((v112 - 1249567487) >> 16) - (((v112 - 1249567487) >> 15) & 0x98) + 76;
  LOBYTE(STACK[0x2EE]) = v106;
  LOBYTE(STACK[0x326]) = v106;
  LOBYTE(v69) = v112 - ((2 * v112 + 2) & 0x98);
  unsigned int v114 = (((v113 - 1443072169) * (v113 + 1156756039)) ^ 0x7F7FF35B)
       + v112
       + ((2 * (v113 - 1443072169) * (v113 + 1156756039)) & 0xFEFFE6B6);
  LOBYTE(v31) = (((unsigned __int16)(v113 + 30551) >> 8) - (((v113 - 1443072169) >> 7) & 0xCC) + 102) ^ 0x2A;
  LOBYTE(STACK[0x881]) = v31;
  LOBYTE(STACK[0x8B9]) = v31;
  LOBYTE(STACK[0x69C]) = v69 + 77;
  LOBYTE(STACK[0x664]) = v69 + 77;
  LOBYTE(STACK[0x4EF]) = v88;
  LOBYTE(STACK[0x4B7]) = v88;
  LOBYTE(v106) = (((v113 - 1443072169) >> 16) - (((v113 - 1443072169) >> 15) & 0xD2) - 23) ^ 0xA5;
  LOBYTE(v31) = (v60 - 68) ^ 0xF0;
  LOBYTE(STACK[0x82D]) = v31;
  LOBYTE(STACK[0x865]) = v31;
  LOBYTE(STACK[0x342]) = v106;
  LOBYTE(STACK[0x37A]) = v106;
  LOBYTE(v60) = v114 - ((2 * v114 - 124) & 0x98) + 14;
  LOBYTE(STACK[0x70C]) = v60;
  LOBYTE(STACK[0x6D4]) = v60;
  LOBYTE(v60) = v113 - ((2 * v113 - 82) & 0x98) - 93;
  LOBYTE(STACK[0x6B8]) = v60;
  LOBYTE(STACK[0x6F0]) = v60;
  LOBYTE(v108) = (((v113 - 1443072169) >> 24) - (((v113 - 1443072169) >> 23) & 0x56) + 43) ^ 0x67;
  LOBYTE(STACK[0x543]) = v108;
  LOBYTE(STACK[0x50B]) = v108;
  LOBYTE(v108) = ((~((v114 + 1397968066) >> 7) | 0xB3) + ((unsigned __int16)(v114 + 19650) >> 8) - 89) ^ 0xEA;
  unsigned int v115 = (((v114 + 1397968066) * (v114 - 311986336)) ^ 0x5DFFF7FF)
       + v113
       + ((2 * (v114 + 1397968066) * (v114 - 311986336)) & 0xBBFFEFFE);
  LOBYTE(STACK[0x8D5]) = v108;
  LOBYTE(STACK[0x89D]) = v108;
  char v116 = (((v114 + 1397968066) >> 24) - (((v114 + 1397968066) >> 23) & 0x5E) + 47) ^ 0x63;
  LOBYTE(v31) = ((v115 - 328438049) >> 16) - (((v115 - 328438049) >> 15) & 0xBC);
  LOBYTE(v88) = ((unsigned __int16)(v115 + 28383) >> 8) - (((v115 - 328438049) >> 7) & 0x38);
  LOBYTE(v106) = (((v114 + 1397968066) >> 16) - (((v114 + 1397968066) >> 15) & 0x84) - 62) ^ 0x8E;
  LOBYTE(STACK[0x396]) = v106;
  LOBYTE(STACK[0x35E]) = v106;
  LOBYTE(STACK[0x55F]) = v116;
  LOBYTE(STACK[0x527]) = v116;
  unsigned int v117 = (((v115 + 1967068598) * (v115 - 328438049)) ^ 0xBFFDC678)
       + v114
       + ((2 * (v115 + 1967068598) * (v115 - 328438049)) & 0x7FFB8CF0);
  char v118 = (((v115 - 328438049) >> 24) - (((v115 - 328438049) >> 23) & 0xDE) + 111) ^ 0x23;
  LOBYTE(v51) = v115 - ((2 * v115 - 66) & 0x98) + 43;
  LOBYTE(STACK[0x760]) = v51;
  LOBYTE(STACK[0x728]) = v51;
  LOBYTE(v108) = (((unsigned __int16)(v117 + 24969) >> 8) - (((v117 + 1356095881) >> 7) & 0xD8) - 20) ^ 0xA0;
  LOBYTE(STACK[0x23D]) = v108;
  LOBYTE(STACK[0x205]) = v108;
  unsigned int v119 = (((v117 + 1356095881) * (v117 - 1615133553)) ^ 0xFB6FE3DE)
       + v115
       + ((2 * (v117 + 1356095881) * (v117 - 1615133553)) & 0xF6DFC7BC);
  LOBYTE(STACK[0x221]) = (v88 - 100) ^ 0xD0;
  LOBYTE(v30) = (v31 + 94) ^ 0x12;
  LOBYTE(STACK[0x3B2]) = v30;
  LOBYTE(STACK[0x3EA]) = v30;
  LOBYTE(STACK[0x57B]) = v118;
  LOBYTE(STACK[0x5B3]) = v118;
  LOBYTE(v31) = (((v117 + 1356095881) >> 16) - (((v117 + 1356095881) >> 15) & 0x1A) + 13) ^ 0x41;
  LOBYTE(STACK[0x3CE]) = v31;
  LOBYTE(STACK[0x406]) = v31;
  unsigned int v120 = (((v119 - 318050062) * (v119 - 736063251)) ^ 0x62F37FBF)
       + v117
       + ((2 * (v119 - 318050062) * (v119 - 736063251)) & 0xC5E6FF7E);
  LOBYTE(v106) = (((v117 + 1356095881) >> 24) - (((v117 + 1356095881) >> 23) & 0x68) + 52) ^ 0x78;
  LOBYTE(STACK[0x597]) = v106;
  LOBYTE(STACK[0x5CF]) = v106;
  char v121 = (((unsigned __int16)(v119 - 3854) >> 8) - (((v119 - 318050062) >> 7) & 0x96) + 75) ^ 7;
  LOBYTE(STACK[0x259]) = v121;
  LOBYTE(STACK[0x291]) = v121;
  LOBYTE(v117) = v117 - ((2 * v117 + 18) & 0x98) - 43;
  LOBYTE(STACK[0x744]) = v117;
  LOBYTE(STACK[0x77C]) = v117;
  LOBYTE(v117) = (((v119 - 318050062) >> 16) - (((v119 - 318050062) >> 15) & 0x5A) - 83) ^ 0xE1;
  LOBYTE(STACK[0x45A]) = v117;
  LOBYTE(STACK[0x422]) = v117;
  LOBYTE(v117) = (((unsigned __int16)(v120 - 6795) >> 8) - (((v120 + 358671733) >> 7) & 0xF2) - 7) ^ 0xB5;
  LOBYTE(v98) = v119 - ((2 * v119 - 28) & 0x98) + 62;
  LOBYTE(STACK[0x798]) = v98;
  LOBYTE(STACK[0x7D0]) = v98;
  unsigned int v122 = (((v120 - 157480314) * (v120 + 358671733)) ^ 0xBB2DBEFD)
       + v119
       + ((2 * (v120 - 157480314) * (v120 + 358671733)) & 0x765B7DFA);
  LOBYTE(v30) = (((v120 + 358671733) >> 16) - (((v120 + 358671733) >> 15) & 0xEE) - 9) ^ 0xBB;
  LOBYTE(v108) = (((v119 - 318050062) >> 24) - (((v119 - 318050062) >> 23) & 0x20) - 112) ^ 0xDC;
  LOBYTE(STACK[0x5EB]) = v108;
  LOBYTE(STACK[0x623]) = v108;
  LOBYTE(STACK[0x43E]) = v30;
  LOBYTE(STACK[0x476]) = v30;
  unsigned int v123 = 127 - ((v122 - 884372656) >> 24);
  LOBYTE(STACK[0x275]) = v117;
  LOBYTE(STACK[0x2AD]) = v117;
  LOBYTE(v117) = (((~(_BYTE)v123 | 0xF0) + ((2 * (v123 & 7 ^ (~(_BYTE)v123 | 0x7B))) ^ 0xC7) - 28) ^ 0xE3) & (((v123 & 0xF0 ^ 0x7F) - ((2 * (v123 & 0xF0 ^ 0x7F)) & 0xA4) + 82) ^ 0x52);
  LOBYTE(STACK[0x65B]) = v117 - ((2 * v117) & 0x99) + 76;
  LOBYTE(v117) = v120 - ((2 * v120 - 22) & 0x98) - 63;
  LOBYTE(STACK[0x7EC]) = v117;
  LOBYTE(STACK[0x7B4]) = v117;
  char v124 = (((v122 - 884372656) >> 16) - (((v122 - 884372656) >> 15) & 0x7A) + 61) ^ 0x71;
  LOBYTE(STACK[0x492]) = v124;
  LOBYTE(STACK[0x4CA]) = v124;
  char v125 = (((v120 + 358671733) >> 24) - (((v120 + 358671733) >> 23) & 0xC8) + 100) ^ 0x28;
  LOBYTE(STACK[0x607]) = v125;
  LOBYTE(STACK[0x63F]) = v125;
  char v126 = (((unsigned __int16)(v122 - 29872) >> 8) - (((v122 - 884372656) >> 7) & 0x7E) - 65) ^ 0xF3;
  LOBYTE(STACK[0x2C9]) = v126;
  LOBYTE(STACK[0x301]) = v126;
  unsigned int v127 = (((v122 - 884372656) * (v122 + 122335075)) ^ 0x7A7FF6F8)
       + v120
       + ((2 * (v122 - 884372656) * (v122 + 122335075)) & 0xF4FFEDF0);
  LOBYTE(v102) = v122 + ~(2 * ((v122 + 80) & 0x4D ^ v122 & 1)) - 99;
  LOBYTE(STACK[0x808]) = v102;
  LOBYTE(STACK[0x840]) = v102;
  LOBYTE(STACK[0x693]) = v123 ^ 0x33;
  LOBYTE(v123) = v127 - ((2 * v127 + 110) & 0x98) + 3;
  LOBYTE(STACK[0x824]) = v123;
  LOBYTE(STACK[0x85C]) = v123;
  LOBYTE(v123) = (((v127 + 1527810999) >> 24) - (((v127 + 1527810999) >> 23) & 0xB0) + 88) ^ 0x14;
  unsigned int v128 = (((v127 + 1527810999) * (v127 + 627739305)) ^ 0xFFF3FFFD)
       + v122
       + ((2 * (v127 + 1527810999) * (v127 + 627739305)) & 0xFFE7FFFA);
  LOBYTE(v119) = (((v127 + 1527810999) >> 16) - (((v127 + 1527810999) >> 15) & 0x66) + 51) ^ 0x7F;
  LOBYTE(STACK[0x4AE]) = v119;
  LOBYTE(STACK[0x4E6]) = v119;
  LOBYTE(STACK[0x6AF]) = v123;
  LOBYTE(STACK[0x677]) = v123;
  unsigned int v129 = ((v127 + 1527810999) >> 8) - (((v127 + 1527810999) >> 7) & 0x38) - 100;
  LOBYTE(STACK[0x31D]) = v129 ^ 0xD0;
  unsigned int v130 = (((v128 - 1314050039) * (v128 - 14072311)) ^ 0xFDFFE945)
       + v127
       + ((2 * (v128 - 1314050039) * (v128 - 14072311)) & 0xFBFFD28A);
  LOBYTE(v102) = (127 - ((unsigned __int16)(v128 + 12297) >> 8)) ^ 0x33;
  LOBYTE(v49) = ((unsigned __int16)(v130 + 7982) >> 8) - (((v130 + 538058542) >> 7) & 0x76);
  LOBYTE(v129) = (((v129 & 0xA9 ^ 0xDE) - ((2 * (v129 & 0xA9 ^ 0xDE)) & 0x6A) + 53) ^ 0x35) & (((v129 & 0x56 ^ 0xBD)
                                                                                              + ((2 * v129) & 0xA8 ^ 0xC7)
                                                                                              - 35) ^ 0xDC);
  LOBYTE(STACK[0x2E5]) = v129 - ((2 * v129) & 0x99) + 76;
  LOBYTE(STACK[0x339]) = v102;
  LOBYTE(STACK[0x371]) = v102;
  LOBYTE(v119) = v128 - ((2 * v128 + 18) & 0x98) + 85;
  LOBYTE(STACK[0x878]) = v119;
  LOBYTE(STACK[0x8B0]) = v119;
  LOBYTE(v78) = (((v128 - 1314050039) >> 16) - (((v128 - 1314050039) >> 15) & 0x60) + 48) ^ 0x7C;
  LOBYTE(STACK[0x502]) = v78;
  LOBYTE(STACK[0x53A]) = v78;
  unsigned int v131 = (((v130 + 538058542) * (v130 + 833839122)) ^ 0x6EF57FBE)
       + v128
       + ((2 * (v130 + 538058542) * (v130 + 833839122)) & 0xDDEAFF7C);
  LOBYTE(v102) = (((v130 + 538058542) >> 16) - (((v130 + 538058542) >> 15) & 0x34) - 102) ^ 0xD6;
  LOBYTE(v129) = (((v128 - 1314050039) >> 24) - (((v128 - 1314050039) >> 23) & 0x1E) + 15) ^ 0x43;
  LOBYTE(STACK[0x703]) = v129;
  LOBYTE(STACK[0x6CB]) = v129;
  LOBYTE(v66) = (((v130 + 538058542) >> 24) - (((v130 + 538058542) >> 23) & 0xA) + 5) ^ 0x49;
  LOBYTE(STACK[0x71F]) = v66;
  LOBYTE(STACK[0x6E7]) = v66;
  LOBYTE(STACK[0x51E]) = v102;
  LOBYTE(STACK[0x556]) = v102;
  LOBYTE(v102) = v130 - ((2 * v130 + 92) & 0x98);
  unsigned int v132 = (((v131 + 57333895) * (v131 + 1306394792)) ^ 0x7EEE7EFF)
       + v130
       + ((2 * (v131 + 57333895) * (v131 + 1306394792)) & 0xFDDCFDFE);
  LOBYTE(v68) = (v49 + 59) ^ 0x77;
  LOBYTE(STACK[0x38D]) = v68;
  LOBYTE(STACK[0x355]) = v68;
  LOBYTE(v88) = (((v131 + 1306394792) >> 16) - (((v131 + 1306394792) >> 15) & 0xE2) + 113) ^ 0x3D;
  LOBYTE(v102) = v102 + 122;
  LOBYTE(STACK[0x8CC]) = v102;
  LOBYTE(STACK[0x894]) = v102;
  LOBYTE(v119) = (((v131 + 1306394792) >> 24) - (((v131 + 1306394792) >> 23) & 0x8A) + 69) ^ 9;
  LOBYTE(STACK[0x5AA]) = v88;
  LOBYTE(STACK[0x572]) = v88;
  LOBYTE(v102) = (((unsigned __int16)(v131 + 168) >> 8) - (((v131 + 1306394792) >> 7) & 0x92) + 73) ^ 5;
  LOBYTE(STACK[0x3E1]) = v102;
  LOBYTE(STACK[0x3A9]) = v102;
  LOBYTE(STACK[0x218]) = v131 - 2 * ((v131 + 40) & 0x4D ^ v131 & 1) - 12;
  LOBYTE(v66) = ((~((v132 - 62421509) >> 15) | 0x47) + ((v132 - 62421509) >> 16) - 35) ^ 0x90;
  LOBYTE(STACK[0x773]) = v119;
  LOBYTE(STACK[0x73B]) = v119;
  unsigned int v133 = (((v132 - 283744834) * (v132 - 62421509)) ^ 0x7F3DEDFF)
       + v131
       + ((2 * (v132 - 283744834) * (v132 - 62421509)) & 0xFE7BDBFE);
  LOBYTE(STACK[0x234]) = v132 - ((2 * v132 - 10) & 0x98) + 71;
  LOBYTE(v68) = ((~((v132 - 62421509) >> 7) | 5) + ((unsigned __int16)(v132 - 31237) >> 8) - 2) ^ 0xB1;
  LOBYTE(STACK[0x3C5]) = v68;
  LOBYTE(STACK[0x3FD]) = v68;
  LOBYTE(v78) = (((v132 - 62421509) >> 24) - (((v132 - 62421509) >> 23) & 0x84) - 62) ^ 0x8E;
  LOBYTE(STACK[0x757]) = v78;
  LOBYTE(STACK[0x78F]) = v78;
  unsigned int v134 = (((v133 + 98258695) * (v133 - 574765576)) ^ 0x92FEE8FF)
       + v132
       + ((2 * (v133 + 98258695) * (v133 - 574765576)) & 0x25FDD1FE);
  LOBYTE(v88) = v133 - ((2 * v133 + 14) & 0x98) + 83;
  LOBYTE(STACK[0x250]) = v88;
  LOBYTE(STACK[0x288]) = v88;
  LOBYTE(v68) = (((v133 + 98258695) >> 16) - (((v133 + 98258695) >> 15) & 0xB4) - 38) ^ 0x96;
  LOBYTE(STACK[0x58E]) = v66;
  LOBYTE(STACK[0x5C6]) = v66;
  LOBYTE(STACK[0x5E2]) = v68;
  LOBYTE(STACK[0x61A]) = v68;
  LOBYTE(v68) = (((v133 + 98258695) >> 24) - (((v133 + 98258695) >> 23) & 0x50) + 40) ^ 0x64;
  LOBYTE(STACK[0x7AB]) = v68;
  LOBYTE(STACK[0x7E3]) = v68;
  LOBYTE(v68) = (((unsigned __int16)(v133 + 20231) >> 8) - (((v133 + 98258695) >> 7) & 0x62) - 79) ^ 0xFD;
  LOBYTE(STACK[0x451]) = v68;
  LOBYTE(STACK[0x419]) = v68;
  int v135 = (((v134 - 808089906) * (v134 - 1987365014)) ^ 0x3DD7DDF3)
       + v133
       + ((2 * (v134 - 808089906) * (v134 - 1987365014)) & 0x7BAFBBE6);
  LOBYTE(v133) = ((((unsigned __int16)(v134 + 14186) >> 8) - (((v134 - 1987365014) >> 7) & 0x9E) + 87) ^ 3) - 8;
  LOBYTE(STACK[0x46D]) = v133;
  LOBYTE(STACK[0x435]) = v133;
  LOBYTE(v68) = v134 - ((2 * v134 - 44) & 0x98) - 74;
  LOBYTE(STACK[0x26C]) = v68;
  LOBYTE(STACK[0x2A4]) = v68;
  LOBYTE(v133) = (((v134 - 1987365014) >> 16) - (((v134 - 1987365014) >> 15) & 0x7A) + 61) ^ 0x71;
  LOBYTE(STACK[0x5FE]) = v133;
  LOBYTE(STACK[0x636]) = v133;
  LOBYTE(v133) = (((v135 - 1029532701) >> 16) - (((v135 - 1029532701) >> 15) & 0x36) - 101) ^ 0xD7;
  LOBYTE(v106) = ((v134 - 1987365014) >> 24) - (((v134 - 1987365014) >> 23) & 0x5C);
  unsigned int v136 = (((v135 - 635453898) * (v135 - 1029532701)) ^ 0x71CFF7FE)
       + v134
       + ((2 * (v135 - 635453898) * (v135 - 1029532701)) & 0xE39FEFFC);
  LOBYTE(v106) = (v106 + 46) ^ 0x62;
  LOBYTE(v102) = (((unsigned __int16)(v135 - 27677) >> 8) - (((v135 - 1029532701) >> 7) & 0x54) + 42) ^ 0x66;
  LOBYTE(STACK[0x652]) = v133;
  LOBYTE(STACK[0x68A]) = v133;
  LOBYTE(v133) = v136 + (~(2 * v136 + 50) | 0x67) + 102;
  LOBYTE(STACK[0x2DC]) = v133;
  LOBYTE(STACK[0x314]) = v133;
  LOBYTE(v133) = v135 - ((2 * v135 - 58) & 0x98) + 47;
  LOBYTE(STACK[0x2C0]) = v133;
  LOBYTE(STACK[0x2F8]) = v133;
  LOBYTE(STACK[0x7C7]) = v106;
  LOBYTE(STACK[0x7FF]) = v106;
  LOBYTE(v31) = (((v135 - 1029532701) >> 24) - (((v135 - 1029532701) >> 23) & 0xBC) + 94) ^ 0x12;
  LOBYTE(STACK[0x81B]) = v31;
  LOBYTE(STACK[0x853]) = v31;
  LOBYTE(STACK[0x4C1]) = v102;
  LOBYTE(STACK[0x489]) = v102;
  LOBYTE(v102) = (((unsigned __int16)(v136 - 13799) >> 8) - (((v136 + 2079377945) >> 7) & 0x42) - 95) ^ 0xED;
  LOBYTE(STACK[0x4DD]) = v102;
  LOBYTE(STACK[0x4A5]) = v102;
  unsigned int v137 = (((v136 - 319752191) * (v136 + 2079377945)) ^ 0x4FFDF71E)
       + v135
       + ((2 * (v136 - 319752191) * (v136 + 2079377945)) & 0x9FFBEE3C);
  LOBYTE(v31) = v137 - 2 * ((v137 + 48) & 0x4D ^ v137 & 1) - 4;
  LOBYTE(STACK[0x368]) = v31;
  LOBYTE(STACK[0x330]) = v31;
  LOBYTE(v106) = (((v136 + 2079377945) >> 16) - (((v136 + 2079377945) >> 15) & 0xA) - 123) ^ 0xC9;
  LOBYTE(STACK[0x66E]) = v106;
  LOBYTE(STACK[0x6A6]) = v106;
  LOBYTE(v133) = ((v137 + 1243304368) >> 24) - (((v137 + 1243304368) >> 23) & 0xE6);
  LOBYTE(v102) = (((v137 + 1243304368) >> 16) - (((v137 + 1243304368) >> 15) & 0x44) - 94) ^ 0xEE;
  LOBYTE(v62) = ((unsigned __int16)(v137 + 20912) >> 8) ^ 0x4C;
  LOBYTE(STACK[0x6C2]) = v102;
  LOBYTE(STACK[0x6FA]) = v102;
  LOBYTE(v102) = (((v136 + 2079377945) >> 24) - (((v136 + 2079377945) >> 23) & 0x5C) - 82) ^ 0xE2;
  unsigned int v138 = (((v137 + 1243304368) * (v137 - 1474832348)) ^ 0x7FF7FF5D)
       + v136
       + ((2 * (v137 + 1243304368) * (v137 - 1474832348)) & 0xFFEFFEBA);
  LOBYTE(STACK[0x837]) = v102;
  LOBYTE(STACK[0x86F]) = v102;
  unsigned int v139 = (((v138 - 88587887) * (v138 + 1260368311)) ^ 0x5F5F67DB)
       + v137
       + ((2 * (v138 - 88587887) * (v138 + 1260368311)) & 0xBEBECFB6);
  LOBYTE(STACK[0x531]) = v62;
  LOBYTE(STACK[0x4F9]) = v62;
  LOBYTE(v133) = (v133 + 115) ^ 0x3F;
  LOBYTE(STACK[0x8C3]) = v133;
  LOBYTE(STACK[0x88B]) = v133;
  LOBYTE(v133) = v138 - ((2 * v138 + 34) & 0x98) - 35;
  LOBYTE(STACK[0x34C]) = v133;
  LOBYTE(STACK[0x384]) = v133;
  LOBYTE(v102) = (((v138 - 88587887) >> 24) - (((v138 - 88587887) >> 23) & 0xA) - 123) ^ 0xC9;
  LOBYTE(v117) = (((v138 - 88587887) >> 16) - (((v138 - 88587887) >> 15) & 0x92) + 73) ^ 5;
  LOBYTE(v31) = (((unsigned __int16)(v138 + 16785) >> 8) - (((v138 - 88587887) >> 7) & 4) + 2) ^ 0x4E;
  LOBYTE(STACK[0x54D]) = v31;
  LOBYTE(STACK[0x515]) = v31;
  unsigned int v140 = (((v139 + 2094765004) * (v139 + 2146409025)) ^ 0x7FF78FF3)
       + v138
       + ((2 * (v139 + 2094765004) * (v139 + 2146409025)) & 0xFFEF1FE6);
  LOBYTE(STACK[0x6DE]) = v117;
  LOBYTE(STACK[0x716]) = v117;
  LOBYTE(v117) = v139 - 2 * ((v139 + 76) & 0x4F ^ v139 & 3) + 24;
  LOBYTE(STACK[0x3D8]) = v117;
  LOBYTE(STACK[0x3A0]) = v117;
  LOBYTE(v117) = (((v139 + 2094765004) >> 16) - (((v139 + 2094765004) >> 15) & 0xA) + 5) ^ 0x49;
  LOBYTE(v106) = ((unsigned __int16)(v139 - 27700) >> 8) - (((v139 + 2094765004) >> 7) & 0xEE);
  LOBYTE(STACK[0x8A7]) = v102;
  LOBYTE(STACK[0x22B]) = (((v139 + 2094765004) >> 24) - (((v139 + 2094765004) >> 23) & 0x20) - 112) ^ 0xDC;
  unsigned int v141 = (((v140 + 318081207) * (v140 - 1634338921)) ^ 0x5EFFDE8F)
       + v139
       + ((2 * (v140 + 318081207) * (v140 - 1634338921)) & 0xBDFFBD1E);
  LOBYTE(v31) = (((unsigned __int16)(v140 - 30537) >> 8) - (((v140 + 318081207) >> 7) & 0x52) - 87) ^ 0xE5;
  LOBYTE(STACK[0x5BD]) = v31;
  LOBYTE(STACK[0x585]) = v31;
  LOBYTE(v106) = (v106 + 119) ^ 0x3B;
  LOBYTE(v31) = v140 + (~(2 * v140 + 110) | 0x67) + 4;
  LOBYTE(STACK[0x3F4]) = v31;
  LOBYTE(STACK[0x3BC]) = v31;
  LOBYTE(v31) = ((v140 + 318081207) >> 24) - (((v140 + 318081207) >> 23) & 0x24);
  LOBYTE(STACK[0x569]) = v106;
  LOBYTE(STACK[0x5A1]) = v106;
  LOBYTE(STACK[0x76A]) = v117;
  LOBYTE(STACK[0x732]) = v117;
  LOBYTE(v106) = (((unsigned __int16)(v141 + 22344) >> 8) - (((v141 - 455649464) >> 7) & 0xC) - 122) ^ 0xCA;
  LOBYTE(v117) = v141 - 2 * ((v141 + 72) & 0x4F ^ v141 & 3) - 108;
  LOBYTE(STACK[0x448]) = v117;
  LOBYTE(STACK[0x410]) = v117;
  LOBYTE(STACK[0x611]) = v106;
  LOBYTE(STACK[0x5D9]) = v106;
  int v142 = (((v141 - 455649464) * (v141 - 856888326)) ^ 0x277DFF9B)
       + v140
       + ((2 * (v141 - 455649464) * (v141 - 856888326)) & 0x4EFBFF36);
  LOBYTE(v140) = (((v140 + 318081207) >> 16) - (((v140 + 318081207) >> 15) & 0xD0) + 104) ^ 0x24;
  LOBYTE(STACK[0x786]) = v140;
  LOBYTE(STACK[0x74E]) = v140;
  LOBYTE(v54) = (((v141 - 455649464) >> 24) - (((v141 - 455649464) >> 23) & 0x32) + 25) ^ 0x55;
  LOBYTE(v31) = (v31 - 110) ^ 0xDE;
  unsigned int v143 = (v142 + 1217709193) * (v142 + 482819945)
       - 402671909
       - ((2 * (v142 + 1217709193) * (v142 + 482819945)) & 0xCFFF7364)
       + 727;
  LOBYTE(STACK[0x20F]) = v31;
  LOBYTE(STACK[0x247]) = v31;
  LOBYTE(v128) = ((v141 - 455649464) >> 16) - (((v141 - 455649464) >> 15) & 2);
  unsigned int v144 = ((2 * v143) ^ 0xCFFF7364) - 2 * (((2 * v143) ^ 0xCFFF7364) & 0x245AECBE ^ (2 * v143) & 0xA) + 609938613;
  unsigned int v145 = (v143 ^ 0x34BC07BD) + (v144 & 0xA6877C1E ^ 0x4AF5E3AA) + ((2 * v144) & 0x4D0E183C ^ 0x48041828) - 1861717950;
  LOBYTE(STACK[0x29B]) = v54;
  LOBYTE(STACK[0x263]) = v54;
  LOBYTE(v106) = (((v142 + 1217709193) >> 16) - (((v142 + 1217709193) >> 15) & 0xCE) + 103) ^ 0x2B;
  int v146 = (v145 ^ 0x2BB7FE55) + v141 + ((2 * v145) & 0x576FFCAA);
  LOBYTE(v141) = (((v142 + 1217709193) >> 24) - (((v142 + 1217709193) >> 23) & 0x2E) - 105) ^ 0xDB;
  LOBYTE(v128) = (v128 + 1) ^ 0x4D;
  LOBYTE(STACK[0x7DA]) = v128;
  LOBYTE(STACK[0x7A2]) = v128;
  LOBYTE(v128) = (((unsigned __int16)(v142 - 15223) >> 8) - (((v142 + 1217709193) >> 7) & 0xD6) + 107) ^ 0x27;
  LOBYTE(STACK[0x5F5]) = v128;
  LOBYTE(STACK[0x62D]) = v128;
  LOBYTE(v54) = v142 - ((2 * v142 + 18) & 0x98);
  unsigned int v147 = (((v146 + 1237130545) * (v146 - 1189127949)) ^ 0x709FFFAB)
       + v142
       + ((2 * (v146 + 1237130545) * (v146 - 1189127949)) & 0xE13FFF56);
  LOBYTE(STACK[0x42C]) = v54 - 43;
  LOBYTE(STACK[0x464]) = v54 - 43;
  LOBYTE(STACK[0x7BE]) = v106;
  LOBYTE(STACK[0x7F6]) = v106;
  LOBYTE(v140) = ((~((v146 - 1189127949) >> 7) | 0x45)
                + ((unsigned __int16)(v146 + 22771) >> 8)
                - 34) ^ 0x91;
  LOBYTE(STACK[0x681]) = v140;
  LOBYTE(STACK[0x649]) = v140;
  LOBYTE(v54) = v146 - ((2 * v146 - 26) & 0x98) + 63;
  LOBYTE(STACK[0x480]) = v54;
  LOBYTE(STACK[0x4B8]) = v54;
  LOBYTE(v54) = (((v146 - 1189127949) >> 16) - (((v146 - 1189127949) >> 15) & 0xC8) - 28) ^ 0xA8;
  LOBYTE(STACK[0x27F]) = v141;
  LOBYTE(STACK[0x2B7]) = v141;
  LOBYTE(v143) = (((unsigned __int16)(v147 + 7819) >> 8) - (((v147 - 1199104373) >> 7) & 0x88) - 60) ^ 0x88;
  LOBYTE(v102) = (((v146 - 1189127949) >> 24) - (((v146 - 1189127949) >> 23) & 0x3A) - 99) ^ 0xD1;
  LOBYTE(STACK[0x69D]) = v143;
  LOBYTE(STACK[0x665]) = v143;
  LOBYTE(STACK[0x2D3]) = v102;
  LOBYTE(STACK[0x30B]) = v102;
  LOBYTE(STACK[0x84A]) = v54;
  LOBYTE(STACK[0x812]) = v54;
  unsigned int v148 = (((v147 - 971834074) * (v147 - 1199104373)) ^ 0x7F75DDF7)
       + v146
       + ((2 * (v147 - 971834074) * (v147 - 1199104373)) & 0xFEEBBBEE);
  LOBYTE(v140) = (((v147 - 1199104373) >> 24) - (((v147 - 1199104373) >> 23) & 0xCA) + 101) ^ 0x29;
  LOBYTE(STACK[0x327]) = v140;
  LOBYTE(STACK[0x2EF]) = v140;
  int v149 = (v148 + 666642405) * (v148 - 1911344767);
  unsigned int v150 = v149 ^ 0xDBBEEFEB;
  unsigned int v151 = (2 * v149) & 0xB77DDFD6;
  LOBYTE(v149) = v148 - ((2 * v148 - 54) & 0x98) + 49;
  LOBYTE(STACK[0x4F0]) = v149;
  LOBYTE(STACK[0x528]) = v149;
  LOBYTE(v143) = (((v147 - 1199104373) >> 16) - (((v147 - 1199104373) >> 15) & 0x16) + 11) ^ 0x47;
  LOBYTE(STACK[0x866]) = v143;
  LOBYTE(STACK[0x82E]) = v143;
  LOBYTE(v143) = v147 - ((2 * v147 + 22) & 0x98);
  unsigned int v152 = v150 + v147 + v151;
  int v153 = (v152 + 1012380784) * (v152 - 861978833);
  int v154 = v153 ^ 0x5BD59FE3;
  unsigned int v155 = (2 * v153) & 0xB7AB3FC6;
  LOBYTE(v153) = ((unsigned __int16)(v148 + 10213) >> 8) - (((v148 + 666642405) >> 7) & 0x98) + 76;
  LOBYTE(STACK[0x6B9]) = v153;
  LOBYTE(STACK[0x6F1]) = v153;
  LOBYTE(v106) = ((v148 + 666642405) >> 16) - (((v148 + 666642405) >> 15) & 0x58);
  LOBYTE(v143) = v143 - 41;
  LOBYTE(STACK[0x49C]) = v143;
  LOBYTE(STACK[0x4D4]) = v143;
  LOBYTE(v60) = (((v148 + 666642405) >> 24) - (((v148 + 666642405) >> 23) & 0x54) - 86) ^ 0xE6;
  unsigned int v156 = v154 + v148 + v155;
  LOBYTE(v106) = (v106 - 84) ^ 0xE0;
  LOBYTE(STACK[0x882]) = v106;
  LOBYTE(STACK[0x8BA]) = v106;
  LOBYTE(v133) = v152 - 2 * ((v152 + 112) & 0x4F ^ v152 & 3) - 68;
  LOBYTE(STACK[0x50C]) = v133;
  LOBYTE(STACK[0x544]) = v133;
  LOBYTE(STACK[0x343]) = v60;
  LOBYTE(STACK[0x37B]) = v60;
  LOBYTE(v133) = ((v156 + 1559787941) >> 16) - (((v156 + 1559787941) >> 15) & 0x84);
  LOBYTE(v60) = (((unsigned __int16)(v156 + 31141) >> 8) - (((v156 + 1559787941) >> 7) & 0x28) - 108) ^ 0xD8;
  LOBYTE(v146) = (((unsigned __int16)(v152 - 19344) >> 8) - (((v152 + 1012380784) >> 7) & 0x48) + 36) ^ 0x68;
  LOBYTE(STACK[0x6D5]) = v146;
  LOBYTE(STACK[0x70D]) = v146;
  LOBYTE(v143) = (((v152 + 1012380784) >> 16) - (((v152 + 1012380784) >> 15) & 0x3E) - 97) ^ 0xD3;
  LOBYTE(STACK[0x8D6]) = v143;
  LOBYTE(STACK[0x89E]) = v143;
  LOBYTE(v143) = ((v152 + 1012380784) >> 24) - (((v152 + 1012380784) >> 23) & 0xD2);
  unsigned int v157 = (((v156 + 1559787941) * (v156 + 953127621)) ^ 0xFFFEF7DF)
       + v152
       + ((2 * (v156 + 1559787941) * (v156 + 953127621)) & 0xFFFDEFBE);
  LOBYTE(STACK[0x729]) = v60;
  LOBYTE(STACK[0x761]) = v60;
  LOBYTE(v152) = v156 - ((2 * v156 + 74) & 0x98) - 15;
  LOBYTE(STACK[0x598]) = v152;
  LOBYTE(STACK[0x560]) = v152;
  LOBYTE(v152) = (((v156 + 1559787941) >> 24) - (((v156 + 1559787941) >> 23) & 0xDE) - 17) ^ 0xA3;
  LOBYTE(v143) = (v143 + 105) ^ 0x25;
  LOBYTE(STACK[0x397]) = v143;
  LOBYTE(STACK[0x35F]) = v143;
  unsigned int v158 = (((v157 - 696314409) * (v157 + 1353557287)) ^ 0x67FAAF9C)
       + v156
       + ((2 * (v157 - 696314409) * (v157 + 1353557287)) & 0xCFF55F38);
  LOBYTE(STACK[0x3EB]) = v152;
  LOBYTE(STACK[0x3B3]) = v152;
  LOBYTE(STACK[0x222]) = (v133 - 62) ^ 0x8E;
  LOBYTE(v133) = (((unsigned __int16)(v157 + 5591) >> 8) - (((v157 - 696314409) >> 7) & 2) + 1) ^ 0x4D;
  LOBYTE(STACK[0x745]) = v133;
  LOBYTE(STACK[0x77D]) = v133;
  LOBYTE(v143) = ((v158 + 1740963387) >> 24) - (((v158 + 1740963387) >> 23) & 0xA4);
  LOBYTE(v78) = v157 - ((2 * v157 - 82) & 0x98) + 35;
  LOBYTE(STACK[0x5B4]) = v78;
  LOBYTE(STACK[0x57C]) = v78;
  LOBYTE(v133) = (((v157 - 696314409) >> 16) - (((v157 - 696314409) >> 15) & 0xE) - 121) ^ 0xCB;
  LOBYTE(v154) = (((v158 + 1740963387) >> 16) - (((v158 + 1740963387) >> 15) & 0x52) + 41) ^ 0x65;
  LOBYTE(STACK[0x206]) = v133;
  LOBYTE(STACK[0x23E]) = v133;
  LOBYTE(v60) = (((v157 - 696314409) >> 24) - (((v157 - 696314409) >> 23) & 0xB2) + 89) ^ 0x15;
  unsigned int v159 = (((v158 + 1349614690) * (v158 + 1740963387)) ^ 0x7DD7F5EF)
       + v157
       + ((2 * (v158 + 1349614690) * (v158 + 1740963387)) & 0xFBAFEBDE);
  LOBYTE(STACK[0x407]) = v60;
  LOBYTE(STACK[0x3CF]) = v60;
  LOBYTE(v60) = v158 - ((2 * v158 + 118) & 0x98) - 121;
  LOBYTE(STACK[0x608]) = v60;
  LOBYTE(STACK[0x5D0]) = v60;
  LOBYTE(v66) = v159 - ((2 * v159 - 24) & 0x98) - 64;
  LOBYTE(STACK[0x624]) = v66;
  LOBYTE(STACK[0x5EC]) = v66;
  LOBYTE(v155) = (((v159 + 1149670772) >> 16) - (((v159 + 1149670772) >> 15) & 0x10) - 120) ^ 0xC4;
  LOBYTE(v152) = (((unsigned __int16)(v158 - 453) >> 8) - (((v158 + 1740963387) >> 7) & 0x78) - 68) ^ 0xF0;
  LOBYTE(STACK[0x799]) = v152;
  LOBYTE(STACK[0x7D1]) = v152;
  unsigned int v160 = (((v159 + 1149670772) * (v159 + 1458325533)) ^ 0xEDF6FFFF)
       + v158
       + ((2 * (v159 + 1149670772) * (v159 + 1458325533)) & 0xDBEDFFFE);
  LOBYTE(STACK[0x25A]) = v154;
  LOBYTE(STACK[0x292]) = v154;
  LOBYTE(v143) = (v143 + 82) ^ 0x1E;
  LOBYTE(STACK[0x423]) = v143;
  LOBYTE(STACK[0x45B]) = v143;
  LOBYTE(v152) = (((unsigned __int16)(v159 - 27276) >> 8) - (((v159 + 1149670772) >> 7) & 0x84) - 62) ^ 0x8E;
  LOBYTE(STACK[0x7ED]) = v152;
  LOBYTE(STACK[0x7B5]) = v152;
  LOBYTE(v157) = ((v159 + 1149670772) >> 24) - (((v159 + 1149670772) >> 23) & 0xE6);
  LOBYTE(STACK[0x276]) = v155;
  LOBYTE(STACK[0x2AE]) = v155;
  LOBYTE(v143) = v160 - ((2 * v160 - 30) & 0x98) - 67;
  LOBYTE(STACK[0x640]) = v143;
  LOBYTE(STACK[0x678]) = v143;
  LOBYTE(v128) = (((v160 + 1925994097) >> 24) - (((v160 + 1925994097) >> 23) & 0x3A) + 29) ^ 0x51;
  unsigned int v161 = (((v160 + 1640275191) * (v160 + 1925994097)) ^ 0x691FD6C7)
       + v159
       + ((2 * (v160 + 1640275191) * (v160 + 1925994097)) & 0xD23FAD8E);
  LOBYTE(v157) = (v157 - 13) ^ 0xBF;
  LOBYTE(STACK[0x477]) = v157;
  LOBYTE(STACK[0x43F]) = v157;
  LOBYTE(STACK[0x493]) = v128;
  LOBYTE(STACK[0x4CB]) = v128;
  LOBYTE(v60) = (((v160 + 1925994097) >> 16) - (((v160 + 1925994097) >> 15) & 0x6E) - 73) ^ 0xFB;
  LOBYTE(STACK[0x302]) = v60;
  LOBYTE(STACK[0x2CA]) = v60;
  LOBYTE(v88) = ((((unsigned __int16)(v160 + 22129) >> 8) - (((v160 + 1925994097) >> 7) & 0x9E) + 111) ^ 3) - 32;
  LOBYTE(STACK[0x809]) = v88;
  LOBYTE(STACK[0x841]) = v88;
  LOBYTE(v88) = (((unsigned __int16)(v161 + 21521) >> 8) - (((v161 + 645682193) >> 7) & 0xC6) - 29) ^ 0xAF;
  unsigned int v162 = (((v161 - 1936816522) * (v161 + 645682193)) ^ 0xE7CFBB6F)
       + v160
       + ((2 * (v161 - 1936816522) * (v161 + 645682193)) & 0xCF9F76DE);
  LOBYTE(v160) = (((v161 + 645682193) >> 24) - (((v161 + 645682193) >> 23) & 0xCE) - 25) ^ 0xAB;
  LOBYTE(v143) = v161 - ((2 * v161 + 34) & 0x98) + 93;
  LOBYTE(STACK[0x694]) = v143;
  LOBYTE(STACK[0x65C]) = v143;
  LOBYTE(v154) = ((unsigned __int16)(v162 + 12848) >> 8) - (((v162 - 398314960) >> 7) & 0x18);
  LOBYTE(v157) = (((v161 + 645682193) >> 16) - (((v161 + 645682193) >> 15) & 0xE0) + 112) ^ 0x3C;
  LOBYTE(STACK[0x2E6]) = v157;
  LOBYTE(STACK[0x31E]) = v157;
  LOBYTE(STACK[0x4AF]) = v160;
  LOBYTE(STACK[0x4E7]) = v160;
  LOBYTE(v160) = v162 - ((2 * v162 + 96) & 0x98) + 124;
  LOBYTE(STACK[0x6B0]) = v160;
  LOBYTE(STACK[0x6E8]) = v160;
  LOBYTE(v153) = (((v162 - 398314960) >> 16) - (((v162 - 398314960) >> 15) & 8) + 4) ^ 0x48;
  unsigned int v163 = (((v162 - 1800679788) * (v162 - 398314960)) ^ 0xF3FAFCFF)
       + v161
       + ((2 * (v162 - 1800679788) * (v162 - 398314960)) & 0xE7F5F9FE);
  LOBYTE(STACK[0x372]) = v153;
  LOBYTE(STACK[0x33A]) = v153;
  LOBYTE(v160) = (((v162 - 398314960) >> 24) - (((v162 - 398314960) >> 23) & 0x8E) + 71) ^ 0xB;
  LOBYTE(STACK[0x53B]) = v160;
  LOBYTE(STACK[0x503]) = v160;
  LOBYTE(v143) = v163 - ((2 * v163 + 4) & 0x98) - 50;
  LOBYTE(STACK[0x6CC]) = v143;
  LOBYTE(STACK[0x704]) = v143;
  LOBYTE(STACK[0x825]) = v88;
  LOBYTE(STACK[0x85D]) = v88;
  LOBYTE(v160) = (((unsigned __int16)(v163 - 27518) >> 8) - (((v163 - 755198846) >> 7) & 2) + 1) ^ 0x4D;
  LOBYTE(STACK[0x8CD]) = v160;
  LOBYTE(STACK[0x895]) = v160;
  unsigned int v164 = (((v163 - 755198846) * (v163 + 152491326)) ^ 0xB7DBDFDF)
       + v162
       + ((2 * (v163 - 755198846) * (v163 + 152491326)) & 0x6FB7BFBE);
  LOBYTE(v160) = (v154 + 12) ^ 0x40;
  LOBYTE(STACK[0x879]) = v160;
  LOBYTE(STACK[0x8B1]) = v160;
  LOBYTE(v60) = (((v163 - 755198846) >> 16) - (((v163 - 755198846) >> 15) & 0x4E) + 39) ^ 0x6B;
  char v165 = ((v164 - 858653265) >> 24) - (((v164 - 858653265) >> 23) & 0x52);
  LOBYTE(v157) = (((v164 - 858653265) >> 16) - (((v164 - 858653265) >> 15) & 0xEA) - 11) ^ 0xB9;
  LOBYTE(v152) = (((v163 - 755198846) >> 24) - (((v163 - 755198846) >> 23) & 0x22) + 17) ^ 0x5D;
  LOBYTE(STACK[0x51F]) = v152;
  LOBYTE(STACK[0x557]) = v152;
  unsigned int v166 = (((v164 - 858653265) * (v164 - 1347363338)) ^ 0x76FF71FF)
       + v163
       + ((2 * (v164 - 858653265) * (v164 - 1347363338)) & 0xEDFEE3FE);
  LOBYTE(v160) = ((unsigned __int16)(v164 - 593) >> 8) - (((v164 - 858653265) >> 7) & 0xBE);
  LOBYTE(v152) = v164 + (~(2 * v164 + 94) | 0x67) - 4;
  LOBYTE(STACK[0x720]) = v152;
  LOBYTE(STACK[0x758]) = v152;
  LOBYTE(STACK[0x38E]) = v60;
  LOBYTE(STACK[0x356]) = v60;
  LOBYTE(STACK[0x3E2]) = v157;
  LOBYTE(STACK[0x3AA]) = v157;
  LOBYTE(v141) = (((v166 - 1113183091) >> 16) - (((v166 - 1113183091) >> 15) & 0x16) + 11) ^ 0x47;
  unsigned int v167 = (((v166 - 1113183091) * (v166 - 1520069198)) ^ 0xFF3FFDFF)
       + v164
       + ((2 * (v166 - 1113183091) * (v166 - 1520069198)) & 0xFE7FFBFE);
  LOBYTE(STACK[0x219]) = (v160 - 33) ^ 0x93;
  LOBYTE(v149) = (v165 - 87) ^ 0xE5;
  LOBYTE(v88) = ((v166 - 1113183091) >> 24) - (((v166 - 1113183091) >> 23) & 0xE6);
  LOBYTE(STACK[0x235]) = (((unsigned __int16)(v166 + 11405) >> 8) - (((v166 - 1113183091) >> 7) & 0x24) - 110) ^ 0xDE;
  LOBYTE(STACK[0x573]) = v149;
  LOBYTE(STACK[0x5AB]) = v149;
  char v168 = v166 - ((2 * v166 + 26) & 0x98) - 39;
  LOBYTE(STACK[0x774]) = v168;
  LOBYTE(STACK[0x73C]) = v168;
  LOBYTE(STACK[0x3FE]) = v141;
  LOBYTE(STACK[0x3C6]) = v141;
  unsigned int v169 = (((v167 - 517546157) * (v167 - 2044566136)) ^ 0x7B6FBE7B)
       + v166
       + ((2 * (v167 - 517546157) * (v167 - 2044566136)) & 0xF6DF7CF6);
  LOBYTE(v166) = (((v167 - 517546157) >> 16) - (((v167 - 517546157) >> 15) & 0xFA) - 3) ^ 0xB1;
  LOBYTE(v152) = ((unsigned __int16)(v169 - 1304) >> 8) - (((v169 - 1006896408) >> 7) & 0x98);
  LOBYTE(v88) = (v88 + 115) ^ 0x3F;
  LOBYTE(STACK[0x5C7]) = v88;
  LOBYTE(STACK[0x58F]) = v88;
  LOBYTE(v88) = v167 - ((2 * v167 - 90) & 0x98) - 97;
  LOBYTE(STACK[0x7C8]) = v88;
  LOBYTE(STACK[0x790]) = v88;
  LOBYTE(v160) = (((unsigned __int16)(v167 - 8365) >> 8) - (((v167 - 517546157) >> 7) & 0x68) + 52) ^ 0x78;
  LOBYTE(STACK[0x289]) = v160;
  LOBYTE(STACK[0x251]) = v160;
  LOBYTE(v88) = ((v169 - 1006896408) >> 24) - (((v169 - 1006896408) >> 23) & 0x50);
  LOBYTE(v160) = v169 - 2 * ((v169 + 104) & 0x4E ^ v169 & 2) + 52;
  LOBYTE(STACK[0x7E4]) = v160;
  LOBYTE(STACK[0x7AC]) = v160;
  LOBYTE(STACK[0x452]) = v166;
  LOBYTE(STACK[0x41A]) = v166;
  LOBYTE(v157) = ((v169 - 1006896408) >> 16) - (((v169 - 1006896408) >> 15) & 0x90);
  LOBYTE(v141) = (((v167 - 517546157) >> 24) - (((v167 - 517546157) >> 23) & 0x12) + 9) ^ 0x45;
  unsigned int v170 = (((v169 - 979048880) * (v169 - 1006896408)) ^ 0xF3FBF3FA)
       + v167
       + ((2 * (v169 - 979048880) * (v169 - 1006896408)) & 0xE7F7E7F4);
  LOBYTE(STACK[0x5E3]) = v141;
  LOBYTE(STACK[0x61B]) = v141;
  int v171 = (((v170 - 1956569468) * (v170 - 78377020)) ^ 0x2F9E787D)
       + v169
       + ((2 * (v170 - 1956569468) * (v170 - 78377020)) & 0x5F3CF0FA);
  LOBYTE(STACK[0x26D]) = v152 + 76;
  LOBYTE(STACK[0x2A5]) = v152 + 76;
  LOBYTE(v160) = (v88 + 40) ^ 0x64;
  LOBYTE(STACK[0x5FF]) = v160;
  LOBYTE(STACK[0x637]) = v160;
  LOBYTE(v119) = (((v170 - 78377020) >> 16) - (((v170 - 78377020) >> 15) & 0x50) + 40) ^ 0x64;
  LOBYTE(v166) = (((unsigned __int16)(v170 + 4036) >> 8) - (((v170 - 78377020) >> 7) & 0x94) - 54) ^ 0x86;
  LOBYTE(v160) = (v157 + 72) ^ 4;
  LOBYTE(STACK[0x436]) = v160;
  LOBYTE(STACK[0x46E]) = v160;
  LOBYTE(v160) = v170 - 2 * ((v170 + 68) & 0x4D ^ v170 & 1) + 16;
  LOBYTE(STACK[0x800]) = v160;
  LOBYTE(STACK[0x838]) = v160;
  LOBYTE(v160) = (((v170 - 78377020) >> 24) - (((v170 - 78377020) >> 23) & 0xFC) - 2) ^ 0xB2;
  LOBYTE(STACK[0x653]) = v160;
  LOBYTE(STACK[0x68B]) = v160;
  LOBYTE(STACK[0x4C2]) = v119;
  LOBYTE(STACK[0x48A]) = v119;
  char v172 = (((unsigned __int16)(v171 + 21883) >> 8) - (((v171 - 1204529797) >> 7) & 0x6E) + 55) ^ 0x7B;
  LOBYTE(STACK[0x2C1]) = v166;
  LOBYTE(STACK[0x2F9]) = v166;
  unsigned int v173 = (((v171 + 50030781) * (v171 - 1204529797)) ^ 0x6AEBDAF7)
       + v170
       + ((2 * (v171 + 50030781) * (v171 - 1204529797)) & 0xD5D7B5EE);
  LOBYTE(v160) = ((v173 + 1365815724) >> 16) - (((v173 + 1365815724) >> 15) & 0x1A);
  LOBYTE(STACK[0x2DD]) = v172;
  LOBYTE(STACK[0x315]) = v172;
  LOBYTE(v157) = ((unsigned __int16)(v173 - 20052) >> 8) - (((v173 + 1365815724) >> 7) & 0xFC);
  LOBYTE(v152) = v171 - ((2 * v171 - 10) & 0x98) - 57;
  LOBYTE(STACK[0x854]) = v152;
  LOBYTE(STACK[0x81C]) = v152;
  LOBYTE(v119) = ((v171 - 1204529797) >> 24) - (((v171 - 1204529797) >> 23) & 0x76);
  LOBYTE(v152) = ((~((v171 - 1204529797) >> 15) | 0x97)
                + ((v171 - 1204529797) >> 16)
                + 53) ^ 0x78;
  LOBYTE(STACK[0x4A6]) = v152;
  LOBYTE(STACK[0x4DE]) = v152;
  int v174 = (((v173 - 831020838) * (v173 + 1365815724)) ^ 0x2B67E7BF)
       + v171
       + ((2 * (v173 - 831020838) * (v173 + 1365815724)) & 0x56CFCF7E);
  int v175 = v174 - 766419119 + (~(2 * v174 - 651479144) | 0x348878F7);
  LOBYTE(v119) = (v119 + 59) ^ 0x77;
  LOBYTE(v166) = (((v173 + 1365815724) >> 24) - (((v173 + 1365815724) >> 23) & 0x34) + 26) ^ 0x56;
  LOBYTE(STACK[0x6A7]) = v119;
  LOBYTE(STACK[0x66F]) = v119;
  LOBYTE(STACK[0x6C3]) = v166;
  LOBYTE(STACK[0x6FB]) = v166;
  LOBYTE(v173) = v173 - ((2 * v173 + 88) & 0x98) - 8;
  LOBYTE(STACK[0x870]) = v173;
  LOBYTE(STACK[0x8A8]) = v173;
  LOBYTE(v173) = (v160 + 13) ^ 0x41;
  LOBYTE(v119) = (v157 - 2) ^ 0xB2;
  LOBYTE(STACK[0x385]) = BYTE1(v175) ^ 0x8F;
  LOBYTE(STACK[0x34D]) = BYTE1(v175) ^ 0x8F;
  LOBYTE(STACK[0x369]) = v119;
  LOBYTE(STACK[0x331]) = v119;
  LOBYTE(STACK[0x4FA]) = v173;
  LOBYTE(STACK[0x532]) = v173;
  LOBYTE(STACK[0x8C4]) = v175 ^ 0xC8;
  LOBYTE(STACK[0x88C]) = v175 ^ 0xC8;
  LOBYTE(STACK[0x717]) = HIBYTE(v175) ^ 0xA9;
  LOBYTE(STACK[0x6DF]) = HIBYTE(v175) ^ 0xA9;
  LOBYTE(STACK[0x54E]) = BYTE2(v175) ^ 0xF7;
  LOBYTE(STACK[0x516]) = BYTE2(v175) ^ 0xF7;
  unsigned int v176 = (*(unsigned __int8 *)(v18 - 115) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 115) ^ 0x3E)) & 0xFFFFFF3F);
  int v389 = (*(unsigned __int8 *)(v18 - 120) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 120) ^ 0x3E)) & 0x1CA);
  int v391 = (*(unsigned __int8 *)(v18 - 114) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 114) ^ 0x3E)) & 0x1AA);
  int v177 = (*(unsigned __int8 *)(v18 - 112) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 112) ^ 0x3E)) & 0x94);
  int v178 = *(unsigned __int8 *)((LODWORD(STACK[0x18E8]) ^ 0x9FF3ECFF3E727B30)
                            + a13
                            + ((2 * (LODWORD(STACK[0x18E8]) ^ 0xDFDD90C7)) & 0x1C35FD7EELL)
                            + 0x3D7E062C9E83225DLL);
  unsigned int v179 = (*(unsigned __int8 *)(v18 - 111) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 111) ^ 0x3E)) & 0xBBBBBBBB);
  int v180 = LOBYTE(STACK[0x790]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x15E0]) ^ 0x3B6B3EB500400F38)
                                                          + a13
                                                          + ((2 * (LODWORD(STACK[0x15E0]) ^ 0xDFDD90C7)) & 0x1BF3B3FFELL)
                                                          - 0x5DF94B895F6A91ABLL);
  int v181 = v180 - ((2 * v180) & 0x58);
  int v182 = *(unsigned __int8 *)((LODWORD(STACK[0x1D74]) ^ 0x7FFAE9AFC4026738)
                            + ((2 * (LODWORD(STACK[0x1D74]) ^ 0xDFDD90C7)) & 0x37BFEFFE)
                            + a13
                            + 0x5D77097D64531655);
  int v183 = (*(unsigned __int8 *)(v18 - 108) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 108) ^ 0x3E)) & 0xA0);
  int v385 = (*(unsigned __int8 *)(v18 - 119) ^ 0x3E) + (~(2 * (*(unsigned __int8 *)(v18 - 119) ^ 0x3E)) | 0xFFFF21);
  int v184 = *(unsigned __int8 *)((LODWORD(STACK[0x172C]) ^ 0xAFBE7FBF001EBF18)
                            + a13
                            + ((2 * (LODWORD(STACK[0x172C]) ^ 0xDFDD90C7)) & 0x1BF865FBELL)
                            + 0x2DB3736CA06FDE75);
  int v381 = *(unsigned __int8 *)((LODWORD(STACK[0xB0C]) ^ 0xBBFEFEF5E0216718)
                            + ((2 * (LODWORD(STACK[0xB0C]) ^ 0xDFDD90C7)) & 0x7FF9EFBE)
                            + a13
                            + 0x2172F43740361675);
  int v185 = *(unsigned __int8 *)((LODWORD(STACK[0x15A8]) ^ 0xFE49EF424262B30)
                            + a13
                            + ((2 * (LODWORD(STACK[0x15A8]) ^ 0xDFDD90C7)) & 0x1F7F777EELL)
                            - 0x3272ABC87BC8ADA3);
  int v186 = LOBYTE(STACK[0x7AC]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x1BF0]) ^ 0x8DFEDB7E7126AE1ELL)
                                                          + a13
                                                          + ((2 * (LODWORD(STACK[0x1BF0]) ^ 0xDFDD90C7)) & 0x15DF67DB2)
                                                          + 0x4F7317ADD137CF7BLL);
  LODWORD(v19) = *(unsigned __int8 *)((LODWORD(STACK[0x12A0]) ^ 0x7D87FB76A0A22B3ELL)
                                    + ((2 * (LODWORD(STACK[0x12A0]) ^ 0xDFDD90C7)) & 0xFEFF77F2)
                                    + a13
                                    + 0x5FE9F7B600B3525BLL);
  int v187 = v186 - ((2 * v186) & 0xCA);
  unsigned int v188 = ((((v179 << 8) - 2073109248) ^ 0x846EDD00)
        - ((2 * (((v179 << 8) - 2073109248) ^ 0x846EDD00)) & 0x21B44C00)
        + 1356473965) ^ 0x50DA266D | ((((v177 << 16) + 1934229504) ^ 0x734A0000)
                                    - ((2 * (((v177 << 16) + 1934229504) ^ 0x734A0000)) & 0x5A00000)
                                    + 1120939620) ^ 0x42D02E64;
  unsigned int v189 = v188 - ((2 * v188) & 0x4507A17C);
  int v190 = LOBYTE(STACK[0x289]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0xE14]) ^ 0x4FEFF71E3E82EB70)
                                                          + a13
                                                          + ((2 * (LODWORD(STACK[0xE14]) ^ 0xDFDD90C7)) & 0x1C2BEF76ELL)
                                                          - 0x727E03F2612C6D63);
  int v191 = v190 + 245108 - 2 * (v190 & 0xF);
  int v192 = LOBYTE(STACK[0x7C8]) ^ *(unsigned __int8 *)((LODWORD(STACK[0xC90]) ^ 0xFFFFAFDB2506AE38)
                                                   + a13
                                                   + ((2 * (LODWORD(STACK[0xC90]) ^ 0xDFDD90C7)) & 0x1F5B67DFELL)
                                                   - 0x228DBCAF7AA830ABLL);
  int v193 = (v192 ^ 0x5D) - ((2 * v192) & 0x40);
  int v194 = *(unsigned __int8 *)((v382 ^ 0xE3CEFFAFA027751ALL)
                            + ((2 * (v382 ^ 0xDFDD90C7)) & 0xFFF5CBBA)
                            + a13
                            - 0x65D0C82FFC7D789);
  int v195 = *(unsigned __int8 *)((LODWORD(STACK[0x1764]) ^ 0xFC79C89F3D3262BFLL)
                            + a13
                            + ((2 * (LODWORD(STACK[0x1764]) ^ 0xDFDD90C7)) & 0x1C5DFE4F0)
                            - 0x1F07D57362BCE424);
  int v196 = (*(unsigned __int8 *)(v18 - 116) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 116) ^ 0x3E)) & 0x50);
  int v387 = (*(unsigned __int8 *)(v18 - 105) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 105) ^ 0x3E)) & 0x42);
  int v197 = (((v196 << 8) + 1396582400) ^ 0x533E2800)
       + 1391037584
       - ((2 * (((v196 << 8) + 1396582400) ^ 0x533E2800)) & 0x25D31800);
  int v198 = (v184 ^ LOBYTE(STACK[0x637]) ^ 0x5D) - ((2 * (v184 ^ LOBYTE(STACK[0x637]))) & 4);
  int v199 = *(unsigned __int8 *)((LODWORD(STACK[0x1424]) ^ 0x7FBECFBD6187F370)
                            + a13
                            + ((2 * (LODWORD(STACK[0x1424]) ^ 0xDFDD90C7)) & 0x17CB4C76ELL)
                            + 0x5DB3236EC1D8AA9DLL);
  unsigned int v200 = (LOBYTE(STACK[0x7E4]) ^ 0x5D ^ v19)
       - ((2 * (LOBYTE(STACK[0x7E4]) ^ 0x5D ^ v19)) & 0x70);
  int v201 = *(unsigned __int8 *)((LODWORD(STACK[0x111C]) ^ 0xC9FE6D9708887C39)
                            + a13
                            + ((2 * (LODWORD(STACK[0x111C]) ^ 0xDFDD90C7)) & 0x1AEABD9FCLL)
                            + 0x13738594A8DD2156);
  int v202 = (LOBYTE(STACK[0x251]) ^ 0x5D ^ v195) - ((2 * (LOBYTE(STACK[0x251]) ^ 0x5D ^ v195)) & 0x1E8);
  int v203 = (v197 ^ 0x52E98C90 | (v176 + 214254495) ^ 0xCC5439F)
       - ((2 * (v197 ^ 0x52E98C90 | (v176 + 214254495) ^ 0xCC5439F)) & 0x6D98);
  int v204 = (LOBYTE(STACK[0x2A5]) ^ 0x5D ^ v199) - ((2 * (LOBYTE(STACK[0x2A5]) ^ 0x5D ^ v199)) & 0x1D6);
  int v205 = ((((*(unsigned __int8 *)(v18 - 107) ^ 0x3E) + 2072022 - ((2 * (*(unsigned __int8 *)(v18 - 107) ^ 0x3E)) & 0x5A)) << 8)
        + 874240) ^ 0x1FAB2D00;
  unsigned int v206 = (v205 - ((2 * v205) & 0x2BD75000) + 1441507378) ^ 0x55EBA832 | ((((v183 << 16) - 565182464) ^ 0xDE500000)
                                                                       - ((2 * (((v183 << 16) - 565182464) ^ 0xDE500000)) & 0x4ACC0000)
                                                                       - 1519988752) ^ 0xA566CFF0;
  unsigned int v207 = (v206 - ((2 * v206) & 0x2E5DB202) - 1758537471) ^ 0x972ED901 | ((*(unsigned __int8 *)(v18 - 106) ^ 0x3E)
                                                                       - 1621218026
                                                                       + (~(2 * (*(unsigned __int8 *)(v18 - 106) ^ 0x3E)) | 0xFFFFFFD3)
                                                                       + 1) ^ 0x9F5E2D16;
  unsigned int v208 = v207 - ((2 * v207) & 0xAB2F9E);
  unsigned int v209 = ((((v202 << 8) - 1602882560) ^ 0xA075F400)
        - ((2 * (((v202 << 8) - 1602882560) ^ 0xA075F400)) & 0x18436000)
        + 203534430) ^ 0xC21B05E | ((((v181 << 16) - 584318976) ^ 0xDD2C0000)
                                  - ((2 * (((v181 << 16) - 584318976) ^ 0xDD2C0000)) & 0x7E6C0000)
                                  - 1086922671) ^ 0xBF36E051;
  int v210 = LOBYTE(STACK[0x5E3]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x1A6C]) ^ 0x7A7ADD0EB8A0EB00)
                                                          + ((2 * (LODWORD(STACK[0x1A6C]) ^ 0xDFDD90C7)) & 0xCEFAF78E)
                                                          + a13
                                                          + 0x62F7161E18B5928DLL);
  int v211 = v210 - ((2 * v210) & 0xC);
  int v212 = (v185 ^ LOBYTE(STACK[0x46E]) ^ 0x5D) - ((2 * (v185 ^ LOBYTE(STACK[0x46E]))) & 0x140);
  unsigned int v213 = (v189 - 1568419650) ^ 0xA283D0BE | ((*(unsigned __int8 *)(v18 - 110) ^ 0x3E)
                                           - ((2 * (*(unsigned __int8 *)(v18 - 110) ^ 0x3E)) & 0x1D8)
                                           - 1703883540) ^ 0x9A70CCEC;
  unsigned int v214 = v213 - ((2 * v213) & 0x346852);
  unsigned int v215 = ((((LOBYTE(STACK[0x26D]) ^ 0x5D ^ v182) - ((2 * (LOBYTE(STACK[0x26D]) ^ 0x5D ^ v182)) & 0xBC)) << 8)
        - 1020568064) ^ 0xC32B5E00;
  unsigned int v216 = ((((v187 << 16) + 6619136) ^ 0x650000) - ((2 * (((v187 << 16) + 6619136) ^ 0x650000)) & 0xD5900000) - 355957634) ^ 0xEAC8847E | (v215 - ((2 * v215) & 0x1447FA00) + 170130856) ^ 0xA23FDA8;
  unsigned int v217 = v216 - ((2 * v216) & 0x898ECBBE);
  unsigned int v218 = (v209 - ((2 * v209) & 0x79F1ABFC) + 1022940670) ^ 0x3CF8D5FE | ((LOBYTE(STACK[0x41A]) ^ 0x5D ^ v178)
                                                                       - ((2 * (LOBYTE(STACK[0x41A]) ^ 0x5D ^ v178)) & 0x42)
                                                                       - 1565387999) ^ 0xA2B21321;
  int v219 = LOBYTE(STACK[0x452]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0xF98]) ^ 0xBF55C7EF3026EFF0)
                                                          + a13
                                                          + ((2 * (LODWORD(STACK[0xF98]) ^ 0xDFDD90C7)) & 0x1DFF6FE6ELL)
                                                          + 0x1E1C2B3C90378F1DLL);
  unsigned int v220 = ((((v191 << 8) + 629504) ^ 0x3C70F00) - ((2 * (((v191 << 8) + 629504) ^ 0x3C70F00)) & 0x21511C00) + 1353223724) ^ 0x50A88E2C | ((((v193 << 16) + 975175680) ^ 0x3A200000) + 893605216 + (~(2 * (((v193 << 16) + 975175680) ^ 0x3A200000)) | 0x9579FFFF) + 1) ^ 0x35435560;
  unsigned int v221 = (((v218 - ((2 * v218) & 0x30EC32)) << 8) - 1737090816) ^ 0x98761900;
  unsigned int v222 = v221 - ((2 * v221) & 0x91874E00);
  unsigned int v223 = ((((v204 << 8) - 1473451264) ^ 0xA82CEB00)
        - ((2 * (((v204 << 8) - 1473451264) ^ 0xA82CEB00)) & 0x2693EC00)
        + 2070541990) ^ 0x7B69F6A6 | ((((v200 << 16) + 976748544) ^ 0x3A380000)
                                    - ((2 * (((v200 << 16) + 976748544) ^ 0x3A380000)) & 0x7CFA0000)
                                    + 1048388397) ^ 0x3E7D232D;
  unsigned int v224 = v223 - ((2 * v223) & 0x67C0C83E);
  int v225 = (v219 - ((2 * v219) & 0xF8) + 1216359548) ^ 0x48802C7C | (v220 - ((2 * v220) & 0x2072055C) + 272171694) ^ 0x103902AE;
  unsigned int v226 = ((v194 ^ LOBYTE(STACK[0x436]) ^ 0x5D) - ((2 * (v194 ^ LOBYTE(STACK[0x436]) ^ 0x5D)) & 0xB2) - 96876455) ^ 0xFA39C859 | (v217 - 993565217) ^ 0xC4C765DF;
  unsigned int v227 = ((((v385 << 8) + 654602240) ^ 0x27046F00)
        - ((2 * (((v385 << 8) + 654602240) ^ 0x27046F00)) & 0x54200)
        - 1944936071) ^ 0x8C12A179 | ((((v389 << 16) - 1008402432) ^ 0xC3E50000)
                                    - ((2 * (((v389 << 16) - 1008402432) ^ 0xC3E50000)) & 0xD0C0000)
                                    + 1183215008) ^ 0x46866DA0;
  unsigned int v228 = (((v225 - ((2 * v225) & 0x54809A)) << 8) - 1438626560) ^ 0xAA404D00;
  unsigned int v229 = ((((v203 << 16) - 1228144640) ^ 0xB6CC0000)
        - ((2 * (((v203 << 16) - 1228144640) ^ 0xB6CC0000)) & 0x8D1E0000)
        + 1183777144) ^ 0x468F0178 | ((((v391 << 8) - 686893824) ^ 0xD70ED500)
                                    - ((2 * (((v391 << 8) - 686893824) ^ 0xD70ED500)) & 0x3742B400)
                                    + 463559178) ^ 0x1BA15A0A;
  unsigned int v230 = ((*(unsigned __int8 *)(v18 - 109) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 109) ^ 0x3E)) & 0xF0) - 1989857416) ^ 0x89652F78 | (((((v214 + 10105923) << 8) - 6656) ^ 0x9A342900) - ((2 * ((((v214 + 10105923) << 8) - 6656) ^ 0x9A342900)) & 0x7319D200) - 1181947631) ^ 0xB98CE911;
  LODWORD(v19) = (v224 - 1277139937) ^ 0xB3E0641F | (v212 + 1851355552) ^ 0x6E5971A0;
  unsigned int v231 = (v228 - ((2 * v228) & 0x93019400) - 914306528) ^ 0xC980CA20 | ((LOBYTE(STACK[0x61B]) ^ 0x5D ^ v201)
                                                                      - ((2 * (LOBYTE(STACK[0x61B]) ^ 0x5D ^ v201)) & 0x128)
                                                                      - 1063781484) ^ 0xC097FB94;
  int v232 = (((v226 - ((2 * v226) & 0xB0952A) + 5786271) << 8) - 2560) ^ 0x584A9500;
  unsigned int v233 = (v229 + 890565854 + (~(2 * v229) | 0x95D61643) + 1) ^ 0x3514F4DE | ((*(unsigned __int8 *)(v18 - 113) ^ 0x3E)
                                                                           - ((2
                                                                             * (*(unsigned __int8 *)(v18 - 113) ^ 0x3E)) & 0xFFFFFF3F)
                                                                           - 1046933345) ^ 0xC199109F;
  unsigned int v234 = ((*(unsigned __int8 *)(v18 - 118) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 118) ^ 0x3E)) & 0xB6) - 1007891877) ^ 0xC3ECCA5B | (v227 - ((2 * v227) & 0x116FF78C) - 2001208378) ^ 0x88B7FBC6;
  unsigned int v235 = (((v234 - ((2 * v234) & 0x945D28)) << 8) - 902917120) ^ 0xCA2E9400;
  unsigned int v236 = (v231 - 2122147912 + (~(2 * v231) | 0xFCFAD091)) ^ (v230 - ((2 * v230) & 0x98A21718) + 1280379788);
  int v237 = (((v19 - ((2 * v19) & 0xC062D8)) << 8) + 1613851648) ^ 0x60316C00;
  unsigned int v238 = (v235 - ((2 * v235) & 0x79F8F800) - 1124303747) ^ 0xBCFC7C7D | ((*(unsigned __int8 *)(v18 - 117) ^ 0x3E)
                                                                       - ((2 * (*(unsigned __int8 *)(v18 - 117) ^ 0x3E)) & 0x1B2)
                                                                       + 1224939737) ^ 0x490318D9;
  unsigned int v239 = (v232 - ((2 * v232) & 0xA3D49C00) + 1374309966) ^ 0x51EA4E4E | ((v381 ^ LOBYTE(STACK[0x5FF]) ^ 0x5D)
                                                                       - 2
                                                                       * ((v381 ^ LOBYTE(STACK[0x5FF]) ^ 0x5D) & 0x7F)
                                                                       + 845413759) ^ 0x3263FD7F;
  LODWORD(STACK[0xE08]) = v236 ^ 0x120E0CFC;
  unsigned int v240 = ((((v208 << 8) + 1436012288) ^ 0x5597CF00)
        - ((2 * (((v208 << 8) + 1436012288) ^ 0x5597CF00)) & 0x7DBD4800)
        + 1054778552) ^ 0x3EDEA4B8 | (v387 - 872786399) ^ 0xCBFA5621;
  unsigned int v241 = (v239 - ((2 * v239) & 0xF9B58616) - 52772085) ^ (v233 - ((2 * v233) & 0x586FA894) - 1405627318);
  unsigned int v242 = (v237 - ((2 * v237) & 0xD6D53E00) + 1802149794) ^ 0x6B6A9FA2 | (v198 + 2001823490) ^ 0x77516702;
  unsigned int v243 = (v240 - ((2 * v240) & 0xC822E0A4) + 1678864466) ^ (v242 - ((2 * v242) & 0xF02F1184) + 2014808258);
  unsigned int v244 = v243 ^ 0xC3DB6857;
  LODWORD(STACK[0xC84]) = v241 ^ 0x8F308786;
  int v245 = v241 ^ 0x50ED1741;
  v243 ^= 0x1C06F890u;
  unsigned int v246 = (((v222 - 926701790) ^ 0xC8C3A722 | (v211 + 1162331398) ^ 0x4547C506)
        - ((2 * ((v222 - 926701790) ^ 0xC8C3A722 | (v211 + 1162331398) ^ 0x4547C506)) & 0xDFF35A6C)
        - 268849866) ^ (v238 - ((2 * v238) & 0x8A3965F0) + 1159508728);
  v236 ^= 0xCDD39C3B;
  LODWORD(STACK[0xB00]) = v246 ^ 0x75388F09;
  unsigned int v247 = (((v243 - 1206593844) ^ 0xFFFEEDFF) + 66469 + ((2 * (v243 - 1206593844)) & 0xFFFDDBFE) + 3676) * v243;
  unsigned int v248 = ((((v241 ^ 0x50ED1741) - 365499804) ^ 0x5DB7AFF7)
        - 1572319223
        + ((2 * ((v241 ^ 0x50ED1741) - 365499804)) & 0xBB6F5FEE))
       * (v241 ^ 0x50ED1741);
  unsigned int v249 = v248 ^ 0xDDFCE770;
  LODWORD(v19) = (2 * v248) & 0xBBF9CEE0;
  unsigned int v250 = v236 + (v247 ^ 0x4BFFFFDF) + ((2 * v247) & 0x97FFFFBE) - 1723665436;
  unsigned int v251 = v250 - 539127609 - ((2 * v250) & 0xBFBB218E);
  unsigned int v252 = (((v236 + 206442678) ^ 0xFFB5FCEF) + 4850449 + ((2 * (v236 + 206442678)) & 0xFF6BF9DE)) * v236;
  LODWORD(STACK[0xF8C]) = v244;
  unsigned int v253 = (v246 ^ 0xAAE51FCE)
       + v249
       + v19
       - 874080241
       - ((2 * ((v246 ^ 0xAAE51FCE) + v249 + v19 - 334952632)) & 0xBFBB218E);
  unsigned int v254 = v253 ^ 0xDFDD90C7;
  unsigned int v255 = (v253 ^ 0xDFDD90C7) - 1849164566;
  unsigned int v256 = v245 + (v252 ^ 0xEDF7FA4F) + ((2 * v252) & 0xDBEFF49E) + 361522636;
  unsigned int v257 = v256 - 539127609 - ((2 * v256) & 0xBFBB218E);
  LODWORD(STACK[0x1110]) = v253;
  unsigned int v258 = v257 ^ 0xDFDD90C7;
  unsigned int v259 = ((v255 ^ 0x5FFFF89D) - 1610610845 + ((2 * v255) & 0xBFFFF13A)) * v254;
  LODWORD(STACK[0x1418]) = v251;
  unsigned int v260 = ((((v257 ^ 0xDFDD90C7) + 1655660131) ^ 0x75FFFFF6)
        - 1979711478
        + ((2 * ((v257 ^ 0xDFDD90C7) + 1655660131)) & 0xEBFFFFEC))
       * (v257 ^ 0xDFDD90C7);
  HIDWORD(v105) = (v260 + 1292905256) ^ 8;
  LODWORD(v105) = (v260 + 1292905256 - ((2 * v260) & 0x9A205650)) ^ 0x4D102B20;
  int v261 = (v105 >> 4) - ((2 * (v105 >> 4)) & 0x4D7CCC0E) + 650012167;
  LODWORD(STACK[0x1294]) = v257;
  unsigned int v262 = v243 - 142674337 + (v259 ^ 0x6FE7D5D9) + ((2 * v259) & 0xDFCFABB2);
  unsigned int v263 = v262 - 539127609 - ((2 * v262) & 0xBFBB218E);
  unsigned int v264 = v263 ^ 0xDFDD90C7;
  unsigned int v265 = ((((v251 ^ 0xDFDD90C7) + 931829429) ^ 0xFE7FDDBB)
        + 25174597
        + ((2 * ((v251 ^ 0xDFDD90C7) + 931829429)) & 0xFCFFBB76))
       * (v251 ^ 0xDFDD90C7);
  unsigned int v266 = ((((v263 ^ 0xDFDD90C7) + 231422626) ^ 0xED3F3BFC)
        + 314622980
        + ((2 * ((v263 ^ 0xDFDD90C7) + 231422626)) & 0xDA7E77F8))
       * (v263 ^ 0xDFDD90C7);
  HIDWORD(v105) = v261 ^ 0x6BE6607;
  LODWORD(v105) = v261 ^ 0x20000000;
  int v267 = v254 + ((v105 >> 28) ^ 0x3FA7AFB9) + ((2 * (v105 >> 28)) & 0x7F4F5F72) - 1490789601;
  unsigned int v268 = v267 - 539127609 - ((2 * v267) & 0xBFBB218E);
  LODWORD(STACK[0x159C]) = v263;
  unsigned int v269 = (v251 ^ 0xDFDD90C7) + (v266 ^ 0x5EC3BE13) + ((2 * v266) & 0xBD877C26) + 1067685037;
  unsigned int v270 = v269 - 539127609 - ((2 * v269) & 0xBFBB218E);
  unsigned int v271 = ((((v268 ^ 0xDFDD90C7) - 500197015) ^ 0xBEE57FF3)
        + 1092255757
        + ((2 * ((v268 ^ 0xDFDD90C7) - 500197015)) & 0x7DCAFFE6))
       * (v268 ^ 0xDFDD90C7);
  unsigned int v272 = ((((v270 ^ 0xDFDD90C7) - 2080480705) ^ 0x3EF7F7D7)
        - 1056438231
        + ((2 * ((v270 ^ 0xDFDD90C7) - 2080480705)) & 0x7DEFEFAE))
       * (v270 ^ 0xDFDD90C7);
  unsigned int v273 = v258 + (v265 ^ 0x9FB7F2CF) + ((2 * v265) & 0x3F6FE59E) - 166923101;
  unsigned int v274 = v273 - 539127609 - ((2 * v273) & 0xBFBB218E);
  unsigned int v275 = v264 + (v271 ^ 0xEFFF3DFF) + ((2 * v271) & 0xDFFE7BFE) + 95594253;
  unsigned int v276 = v275 - 539127609 - ((2 * v275) & 0xBFBB218E);
  unsigned int v277 = (v276 ^ 0xDFDD90C7) - 437995449;
  unsigned int v278 = v277 ^ 0xC7FB2FEC;
  unsigned int v279 = (2 * v277) & 0x8FF65FD8;
  unsigned int v280 = ((((v274 ^ 0xDFDD90C7) + 1094628872) ^ 0xFD2D67FE)
        + 47355906
        + ((2 * ((v274 ^ 0xDFDD90C7) + 1094628872)) & 0xFA5ACFFC))
       * (v274 ^ 0xDFDD90C7);
  unsigned int v281 = (v274 ^ 0xDFDD90C7) + (v272 ^ 0xB8FCFBB9) + ((2 * v272) & 0x71F9F772) + 720321430;
  unsigned int v282 = v281 - 539127609 - ((2 * v281) & 0xBFBB218E);
  unsigned int v283 = (v268 ^ 0xDFDD90C7) + (v280 ^ 0x7AFFF7AF) + ((2 * v280) & 0xF5FFEF5E) + 2014943222;
  unsigned int v284 = v283 - 539127609 - ((2 * v283) & 0xBFBB218E);
  LODWORD(STACK[0x1A28]) = v270;
  LODWORD(STACK[0x1720]) = v268;
  unsigned int v285 = (v270 ^ 0xDFDD90C7)
       + (((v278 + 939839508 + v279) * (v276 ^ 0xDFDD90C7)) ^ 0x699D5BBD)
       + ((2 * (v278 + 939839508 + v279) * (v276 ^ 0xDFDD90C7)) & 0xD33AB77A)
       + 207645505;
  unsigned int v286 = v285 - 539127609 - ((2 * v285) & 0xBFBB218E);
  unsigned int v287 = ((((v282 ^ 0xDFDD90C7) + 1060866930) ^ 0xDA75FFFF)
        + 629800961
        + ((2 * ((v282 ^ 0xDFDD90C7) + 1060866930)) & 0xB4EBFFFE))
       * (v282 ^ 0xDFDD90C7);
  LODWORD(STACK[0x18A4]) = v274;
  unsigned int v288 = ((((v284 ^ 0xDFDD90C7) - 1885332716) ^ 0xE53F0EFF)
        + 448852225
        + ((2 * ((v284 ^ 0xDFDD90C7) - 1885332716)) & 0xCA7E1DFE))
       * (v284 ^ 0xDFDD90C7);
  unsigned int v289 = (v276 ^ 0xDFDD90C7) + (v288 ^ 0x7FCFFFFF) + ((2 * v288) & 0xFF9FFFFF) + 167719209;
  unsigned int v290 = v289 - 539127609 - ((2 * v289) & 0xBFBB218E);
  LODWORD(STACK[0x1BAC]) = v276;
  unsigned int v291 = v290 ^ 0xDFDD90C7;
  unsigned int v292 = ((((v290 ^ 0xDFDD90C7) - 1991769739) ^ 0x5E3BF62A)
        - 1580987946
        + ((2 * ((v290 ^ 0xDFDD90C7) - 1991769739)) & 0xBC77EC54))
       * (v290 ^ 0xDFDD90C7);
  unsigned int v293 = ((((v286 ^ 0xDFDD90C7) - 979017405) ^ 0xDEFBF0BF)
        + 553914177
        + ((2 * ((v286 ^ 0xDFDD90C7) - 979017405)) & 0xBDF7E17E))
       * (v286 ^ 0xDFDD90C7);
  LODWORD(STACK[0x1D30]) = v284;
  unsigned int v294 = (v282 ^ 0xDFDD90C7) + (v293 ^ 0x6F2DFBA7) + ((2 * v293) & 0xDE5BF74E) - 1092070678;
  unsigned int v295 = v294 - 539127609 - ((2 * v294) & 0xBFBB218E);
  unsigned int v296 = (v286 ^ 0xDFDD90C7) + (v292 ^ 0x5FBB7F3D) + ((2 * v292) & 0xBF76FE7A) - 1059855272;
  unsigned int v297 = v296 - 539127609 - ((2 * v296) & 0xBFBB218E);
  unsigned int v298 = (v284 ^ 0xDFDD90C7) + (v287 ^ 0x6EBEDDBC) + ((2 * v287) & 0xDD7DBB78) + 912601207;
  unsigned int v299 = v298 - 539127609 - ((2 * v298) & 0xBFBB218E);
  unsigned int v300 = ((((v295 ^ 0xDFDD90C7) + 1139318838) ^ 0x9E7F3FD5)
        + 1635827755
        + ((2 * ((v295 ^ 0xDFDD90C7) + 1139318838)) & 0x3CFE7FAA))
       * (v295 ^ 0xDFDD90C7);
  LODWORD(STACK[0xAC8]) = v286;
  unsigned int v301 = ((((v299 ^ 0xDFDD90C7) + 276784180) ^ 0x1F5B57DF)
        - 526079967
        + ((2 * ((v299 ^ 0xDFDD90C7) + 276784180)) & 0x3EB6AFBE))
       * (v299 ^ 0xDFDD90C7);
  unsigned int v302 = ((((v297 ^ 0xDFDD90C7) + 1191749206) ^ 0x3BFD37F3)
        - 1006450675
        + ((2 * ((v297 ^ 0xDFDD90C7) + 1191749206)) & 0x77FA6FE6))
       * (v297 ^ 0xDFDD90C7);
  LODWORD(STACK[0xC4C]) = v290;
  LODWORD(STACK[0xF54]) = v295;
  unsigned int v303 = (v295 ^ 0xDFDD90C7) + (v302 ^ 0xFFFF3D7F) + ((2 * v302) & 0xFFFE7AFE) - 1929747104;
  unsigned int v304 = v303 - 539127609 - ((2 * v303) & 0xBFBB218E);
  unsigned int v305 = (v299 ^ 0xDFDD90C7) + (v300 ^ 0xF79FFF91) + ((2 * v300) & 0xEF3FFF22) + 292411317;
  unsigned int v306 = v305 - 539127609 - ((2 * v305) & 0xBFBB218E);
  unsigned int v307 = v291 + (v301 ^ 0x6FAED7FE) + ((2 * v301) & 0xDF5DAFFC) - 188181353;
  unsigned int v308 = v307 - 539127609 - ((2 * v307) & 0xBFBB218E);
  unsigned int v309 = v304 ^ 0xDFDD90C7;
  unsigned int v310 = v308 ^ 0xDFDD90C7;
  LODWORD(v19) = ((((v308 ^ 0xDFDD90C7) - 1438325955) ^ 0x6F6DEDDA)
                - 1869475290
                + ((2 * ((v308 ^ 0xDFDD90C7) - 1438325955)) & 0xDEDBDBB4))
               * (v308 ^ 0xDFDD90C7);
  LODWORD(v19) = (v297 ^ 0xDFDD90C7) + (v19 ^ 0xC7FEF3FB) + ((2 * v19) & 0x8FFDE7F6) + 482670452;
  LODWORD(v19) = v19 - 539127609 - ((2 * v19) & 0xBFBB218E);
  LODWORD(STACK[0xDD0]) = v299;
  LODWORD(STACK[0x10D8]) = v297;
  unsigned int v311 = ((((v19 ^ 0xDFDD90C7) - 638075184) ^ 0x731FDF7B)
        - 1931468667
        + ((2 * ((v19 ^ 0xDFDD90C7) - 638075184)) & 0xE63FBEF6))
       * (v19 ^ 0xDFDD90C7);
  unsigned int v312 = ((((v304 ^ 0xDFDD90C7) + 887327061) ^ 0x5EBEDAA4)
        - 1589566116
        + ((2 * ((v304 ^ 0xDFDD90C7) + 887327061)) & 0xBD7DB548))
       * (v304 ^ 0xDFDD90C7);
  LODWORD(STACK[0x125C]) = v308;
  unsigned int v313 = ((((v306 ^ 0xDFDD90C7) + 1574679164) ^ 0x1FFDDEB4)
        - 536731316
        + ((2 * ((v306 ^ 0xDFDD90C7) + 1574679164)) & 0x3FFBBD68))
       * (v306 ^ 0xDFDD90C7);
  unsigned int v314 = v310 + (v313 ^ 0x5F7D9F6F) + ((2 * v313) & 0xBEFB3EDE) - 500082157;
  unsigned int v315 = v314 - 539127609 - ((2 * v314) & 0xBFBB218E);
  LODWORD(STACK[0x1564]) = v304;
  unsigned int v316 = (v306 ^ 0xDFDD90C7) + (v312 ^ 0x5DED37E1) + ((2 * v312) & 0xBBDA6FC2) + 1295908835;
  unsigned int v317 = v316 - 539127609 - ((2 * v316) & 0xBFBB218E);
  int v318 = v309 + (v311 ^ 0x176EF6F1) + ((2 * v311) & 0x2EDDEDE2) - 1417390524;
  unsigned int v319 = v318 - 539127609 - ((2 * v318) & 0xBFBB218E);
  unsigned int v320 = ((((v315 ^ 0xDFDD90C7) + 1613576073) ^ 0x7DFF77FB)
        - 2113894395
        + ((2 * ((v315 ^ 0xDFDD90C7) + 1613576073)) & 0xFBFEEFF6))
       * (v315 ^ 0xDFDD90C7);
  unsigned int v321 = ((((v317 ^ 0xDFDD90C7) - 982741109) ^ 0x59FBFDFF)
        - 1509686783
        + ((2 * ((v317 ^ 0xDFDD90C7) - 982741109)) & 0xB3F7FBFE))
       * (v317 ^ 0xDFDD90C7);
  LODWORD(STACK[0x16E8]) = v19;
  LODWORD(STACK[0x13E0]) = v306;
  unsigned int v322 = (v315 ^ 0xDFDD90C7) + (v321 ^ 0x3B7BFC3F) + ((2 * v321) & 0x76F7F87E) - 1742908493;
  unsigned int v323 = v322 - 539127609 - ((2 * v322) & 0xBFBB218E);
  unsigned int v324 = (v19 ^ 0xDFDD90C7) + (v320 ^ 0x6FABDDF9) + ((2 * v320) & 0xDF57BBF2) - 1873534457;
  unsigned int v325 = ((2 * v324) & 0x7FEFBFFE) + (v324 ^ 0xBFF7DFFF);
  unsigned int v326 = v325 - ((2 * v325 - 729603958) & 0xBFBB218E) + 1243554060;
  unsigned int v327 = v323 ^ 0xDFDD90C7;
  LODWORD(STACK[0x944]) = v282;
  LODWORD(STACK[0x90C]) = v323;
  unsigned int v328 = ((((v323 ^ 0xDFDD90C7) - 1563902107) ^ 0xAF6DBDFE)
        + 1351762434
        + ((2 * ((v323 ^ 0xDFDD90C7) - 1563902107)) & 0x5EDB7BFC))
       * (v323 ^ 0xDFDD90C7);
  LODWORD(STACK[0x186C]) = v315;
  unsigned int v329 = (v328 ^ 0xDBF5FF7F) + ((2 * v328) & 0xB7EBFEFE) - 748527003 + (v326 ^ 0xDFDD90C7);
  unsigned int v330 = v329 - 539127609 - ((2 * v329) & 0xBFBB218E);
  unsigned int v331 = ((((v319 ^ 0xDFDD90C7) + 24266156) ^ 0x7F6FB7FF)
        - 2138028031
        + ((2 * ((v319 ^ 0xDFDD90C7) + 24266156)) & 0xFEDF6FFE))
       * (v319 ^ 0xDFDD90C7);
  LODWORD(STACK[0x1B74]) = v319;
  unsigned int v332 = (v319 ^ 0xDFDD90C7)
       + (((v326 ^ 0xDFDD90C7) * (v325 - 989072712)) ^ 0x3FBF5EFD)
       + ((2 * (v326 ^ 0xDFDD90C7) * (v325 - 989072712)) & 0x7F7EBDFA)
       - 612237919;
  unsigned int v333 = v332 - 539127609 - ((2 * v332) & 0xBFBB218E);
  LODWORD(STACK[0x1CF8]) = v326;
  LODWORD(STACK[0x19F0]) = v317;
  unsigned int v334 = (v317 ^ 0xDFDD90C7) + (v331 ^ 0x7DDF77CD) + ((2 * v331) & 0xFBBEEF9A) - 1573693862;
  unsigned int v335 = v334 - 539127609 - ((2 * v334) & 0xBFBB218E);
  unsigned int v336 = v335 ^ 0xDFDD90C7;
  unsigned int v337 = v330 ^ 0xDFDD90C7;
  unsigned int v338 = ((((v335 ^ 0xDFDD90C7) + 1632780830) ^ 0x7FFDFDF7)
        - 2147352055
        + ((2 * ((v335 ^ 0xDFDD90C7) + 1632780830)) & 0xFFFBFBEE))
       * (v335 ^ 0xDFDD90C7);
  unsigned int v339 = ((((v330 ^ 0xDFDD90C7) - 833715648) ^ 0xA3FBEEFE)
        + 1543770370
        + ((2 * ((v330 ^ 0xDFDD90C7) - 833715648)) & 0x47F7DDFC))
       * (v330 ^ 0xDFDD90C7);
  LODWORD(v19) = v333 ^ 0xDFDD90C7;
  unsigned int v340 = (v333 ^ 0xDFDD90C7) + 1602764768;
  LODWORD(STACK[0xC14]) = v333;
  LODWORD(STACK[0xA90]) = v335;
  unsigned int v341 = v327 + (v338 ^ 0x57B559FD) + ((2 * v338) & 0xAF6AB3FA) + 29650802;
  unsigned int v342 = v341 - 539127609 - ((2 * v341) & 0xBFBB218E);
  unsigned int v343 = v19 + (v339 ^ 0x9FFEFBEC) + ((2 * v339) & 0x3FFDF7D8) + 1863869839;
  unsigned int v344 = v343 - 539127609 - ((2 * v343) & 0xBFBB218E);
  unsigned int v345 = ((v340 ^ 0xFEA7FABE) + 22545730 + ((2 * v340) & 0xFD4FF57C)) * v19;
  LODWORD(STACK[0xD98]) = v330;
  int v346 = v336 + (v345 ^ 0x1BF65FBF) + ((2 * v345) & 0x37ECBF7E) + 1120156650;
  unsigned int v347 = v346 - 539127609 - ((2 * v346) & 0xBFBB218E);
  unsigned int v348 = ((((v342 ^ 0xDFDD90C7) - 862877015) ^ 0xBDF95939)
        + 1107732167
        + ((2 * ((v342 ^ 0xDFDD90C7) - 862877015)) & 0x7BF2B272))
       * (v342 ^ 0xDFDD90C7);
  unsigned int v349 = v344 ^ 0xDFDD90C7;
  unsigned int v350 = ((((v344 ^ 0xDFDD90C7) + 247930638) ^ 0x6DFBEFEF)
        - 1845227503
        + ((2 * ((v344 ^ 0xDFDD90C7) + 247930638)) & 0xDBF7DFDE))
       * (v344 ^ 0xDFDD90C7);
  LODWORD(v19) = v347 ^ 0xDFDD90C7;
  unsigned int v351 = v337 + (v348 ^ 0x7DFD7F7C) + ((2 * v348) & 0xFBFAFEF8) + 304415201;
  unsigned int v352 = v351 - 539127609 - ((2 * v351) & 0xBFBB218E);
  unsigned int v353 = ((((v347 ^ 0xDFDD90C7) + 29657148) ^ 0x4EFDDFFE)
        - 1325260798
        + ((2 * ((v347 ^ 0xDFDD90C7) + 29657148)) & 0x9DFBBFFC))
       * (v347 ^ 0xDFDD90C7);
  unsigned int v354 = v352 ^ 0xDFDD90C7;
  LODWORD(STACK[0x1224]) = v344;
  LODWORD(STACK[0xF1C]) = v342;
  unsigned int v355 = (v342 ^ 0xDFDD90C7) + (v353 ^ 0x3AFFD97F) + ((2 * v353) & 0x75FFB2FE) - 420913110;
  unsigned int v356 = v355 - 539127609 - ((2 * v355) & 0xBFBB218E);
  unsigned int v357 = v356 ^ 0xDFDD90C7;
  unsigned int v358 = (v356 ^ 0xDFDD90C7) - 91915878;
  LODWORD(STACK[0x152C]) = v356;
  unsigned int v359 = ((((v352 ^ 0xDFDD90C7) + 873602273) ^ 0xF5FEDF7C)
        + 167846020
        + ((2 * ((v352 ^ 0xDFDD90C7) + 873602273)) & 0xEBFDBEF8))
       * (v352 ^ 0xDFDD90C7);
  LODWORD(STACK[0x10A0]) = v347;
  unsigned int v360 = ((v358 ^ 0x6C9C7A12) - 1822194194 + ((2 * v358) & 0xD938F424)) * v357;
  LODWORD(STACK[0x13A8]) = v352;
  unsigned int v361 = v19 + (v350 ^ 0xD7F7AB7B) + ((2 * v350) & 0xAFEF56F6) - 1956535711;
  unsigned int v362 = v361 - 539127609 - ((2 * v361) & 0xBFBB218E);
  unsigned int v363 = ((((v362 ^ 0xDFDD90C7) + 536294654) ^ 0xEA7BB54B)
        + 360991413
        + ((2 * ((v362 ^ 0xDFDD90C7) + 536294654)) & 0xD4F76A96))
       * (v362 ^ 0xDFDD90C7);
  unsigned int v364 = v349 + (v359 ^ 0x6DDFB73B) + ((2 * v359) & 0xDBBF6E76) - 291396532;
  unsigned int v365 = v364 - 539127609 - ((2 * v364) & 0xBFBB218E);
  unsigned int v366 = v354 + (v360 ^ 0x8DC3BDFF) + ((2 * v360) & 0x1B877BFE) + 1932097164;
  unsigned int v367 = v366 - 539127609 - ((2 * v366) & 0xBFBB218E);
  LODWORD(STACK[0x1834]) = v365;
  v365 ^= 0xDFDD90C7;
  LODWORD(STACK[0x16B0]) = v362;
  unsigned int v368 = v357 + (v363 ^ 0x7DE75BAD) + ((2 * v363) & 0xFBCEB75A) + 344022667;
  unsigned int v369 = v368 - 539127609 - ((2 * v368) & 0xBFBB218E);
  unsigned int v370 = ((((v367 ^ 0xDFDD90C7) - 646577300) ^ 0x7FFFBEF7)
        - 2147470963
        + ((2 * ((v367 ^ 0xDFDD90C7) - 646577300)) & 0xFFFF7DEE)
        + 3964)
       * (v367 ^ 0xDFDD90C7);
  LODWORD(v19) = ((((v369 ^ 0xDFDD90C7) - 147545505) ^ 0x7BFFB9F3)
                - 2080356851
                + ((2 * ((v369 ^ 0xDFDD90C7) - 147545505)) & 0xF7FF73E6))
               * (v369 ^ 0xDFDD90C7);
  unsigned int v371 = v365 + (v370 ^ 0x7F62AFA6) + ((2 * v370) & 0xFEC55F4C) + 1582008236;
  unsigned int v372 = (((v365 - 1434580277) ^ 0xEFBFF5DE) + 272632354 + ((2 * (v365 - 1434580277)) & 0xDF7FEBBC)) * v365;
  unsigned int v373 = (v362 ^ 0xDFDD90C7) + (v372 ^ 0xEFBDDFF1) + ((2 * v372) & 0xDF7BBFE2) + 1300484071;
  unsigned int v374 = v373 - 539127609 - ((2 * v373) & 0xBFBB218E);
  LODWORD(STACK[0x1CC0]) = v374;
  unsigned int v375 = (v367 ^ 0xDFDD90C7) + (v19 ^ 0xDFF1BD7F) + ((2 * v19) & 0xBFE37AFE) + 60047022;
  LODWORD(STACK[0x19B8]) = v367;
  LODWORD(STACK[0xA58]) = v375 - 539127609 - ((2 * v375) & 0xBFBB218E);
  unsigned int v376 = ((((v374 ^ 0xDFDD90C7) - 889553716) ^ 0x9FE277DE)
        + 1612548130
        + ((2 * ((v374 ^ 0xDFDD90C7) - 889553716)) & 0x3FC4EFBC))
       * (v374 ^ 0xDFDD90C7);
  LODWORD(STACK[0x1E44]) = v371 - 539127609 - ((2 * v371) & 0xBFBB218E);
  LODWORD(STACK[0xBDC]) = (v369 ^ 0xDFDD90C7)
                        + (v376 ^ 0x76D8E7F3)
                        + ((2 * v376) & 0xEDB1CFE6)
                        - 757632242
                        - ((2 * ((v369 ^ 0xDFDD90C7) + (v376 ^ 0x76D8E7F3) + ((2 * v376) & 0xEDB1CFE6) - 218504633)) & 0xBFBB218E);
  LODWORD(STACK[0x1B3C]) = v369;
  BOOL v377 = (a15 + 951796224) < 0x6AF57513 || (a15 + 951796224) > 0x6AF57514;
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + ((238 * !v377) ^ (v383 + 663))))(1794471187);
}

void sub_1000C96F4()
{
}

uint64_t sub_1000C96FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned char *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  uint64_t v67 = v66 ^ 0x1CDu;
  LOBYTE(STACK[0x3B5]) = (v63 >> (v66 ^ 0xD1)) ^ 0x15;
  LOBYTE(STACK[0x562]) = BYTE2(v64) ^ 0xE4;
  LOBYTE(STACK[0x747]) = HIBYTE(v63) ^ 0x20;
  LOBYTE(STACK[0x399]) = BYTE1(v64) ^ 0xE6;
  LOBYTE(STACK[0x57E]) = BYTE2(v63) ^ 0xED;
  LOBYTE(STACK[0x72B]) = HIBYTE(v64) ^ 0xA8;
  LOBYTE(STACK[0x208]) = a4 ^ 0x6B;
  LOBYTE(STACK[0x77F]) = HIBYTE(v62) ^ 0xB9;
  LOBYTE(STACK[0x224]) = v62 ^ 0x5F;
  LOBYTE(STACK[0x3D1]) = BYTE1(a4) ^ 0xE8;
  LOBYTE(STACK[0x59A]) = BYTE2(a4) ^ 0x64;
  LOBYTE(STACK[0x3ED]) = BYTE1(v62) ^ 0x26;
  LOBYTE(STACK[0x763]) = HIBYTE(a4) ^ 0x18;
  LOBYTE(STACK[0x5B6]) = BYTE2(v62) ^ 0x9B;
  uint64_t v68 = (HIDWORD(a12) - 1983278700);
  BOOL v69 = v68 < 0xA2188F6E;
  unsigned int v70 = (a5 ^ 0xBB0EFD53)
      - 838698623
      * (((2 * (((v66 ^ 0x1CD) + 605) ^ 0x3D ^ *a20)) & 0x1DE)
       + (((v66 ^ 0xCD) + 93) ^ 0x3D ^ *a20 ^ 0x3F7967EF))
      + 2144643473;
  unsigned int v71 = ((2 * v70) & 0xFDDFED7A) + (v70 ^ 0x7EEFF6BD);
  unsigned int v72 = (v71 - 2129655485) % 0x101;
  int v73 = a4 ^ v65;
  unsigned int v74 = v73
      + (((v61 ^ 0xCE93D11D) - 2129655485 + v71 + 1) ^ 0x7FFB73E7)
      + ((2 * ((v61 ^ 0xCE93D11D) - 2129655485 + v71 + 1)) & 0xFFF6E7CE)
      - 2147185639;
  unsigned int v75 = ((2 * v72) & 0x3CE) + (v72 ^ 0xAFF7E9E7) + (v74 ^ 0x3D4B6FFF) + ((2 * v74) & 0x7A96DFFE);
  unsigned int v76 = v75 - ((2 * v75 + 628706356) & 0xD2A81886) + 2081469021;
  int v77 = v76 ^ v62;
  unsigned int v78 = (v77 ^ 0xF6457E31) + 1;
  unsigned int v79 = v78 + v73 - ((2 * (v78 + v73)) & 0xEA8CAC5E) + 1967543855;
  unsigned int v80 = v78 + (v61 ^ 0x316C2EE2) - ((2 * (v78 + (v61 ^ 0x316C2EE2))) & 0xC2600664) - 516947150;
  unsigned int v81 = (v80 ^ v77 ^ 0xE88A82FC) + 644140058;
  int v82 = v81 ^ 0x5EFFF277;
  unsigned int v83 = (2 * v81) & 0xBDFFE4EE;
  if (v68 >= 0xA2188F6E) {
    BOOL v69 = v68 > 0xA2188F6F;
  }
  unsigned int v84 = v76 ^ 0xFC6DEBDD;
  unsigned int v85 = ((v84 + v82 + v83 - 1593832055) ^ 0x7DBD176F)
      + (v79 ^ 0x8AB9A9D0)
      + ((2 * (v84 + v82 + v83 - 1593832055)) & 0xFB7A2EDE);
  unsigned int v86 = v85 - ((2 * v85 + 75878692) & 0xFDF3E32C) + 20765224;
  int v87 = v86 ^ v79;
  int v88 = v86 ^ v80;
  v86 ^= 0x7EF9F196u;
  int v89 = v86 + v84 + 200486236 - ((2 * (v86 + v84)) & 0x17E65AB8);
  unsigned int v90 = (((v87 ^ 0xBBFA7B9) + v86) ^ 0x65DBF85F) + (v88 ^ 0x60360D5B) + ((2 * ((v87 ^ 0xBBFA7B9) + v86)) & 0xCBB7F0BE);
  unsigned int v91 = v89 ^ 0x718DB978 ^ (v90 - ((2 * v90 + 877137732) & 0xF4FD2848) + 346201030);
  unsigned int v92 = v91 - ((2 * v91 - 1717201034) & 0xC933FD9A) + 829213320;
  int v93 = v92 ^ v87;
  unsigned int v94 = (((v92 ^ 0xE499FECD) + (v89 ^ 0xBF32D5C)) ^ 0xF0420046)
      - ((2 * ((v92 ^ 0xE499FECD) + (v89 ^ 0xBF32D5C))) & 0x1F7BFF72)
      + 264110010
      + (v93 ^ 0x3E55F95B ^ ((v92 ^ 0xE499FECD)
                           + (v92 ^ v88 ^ 0x84AFF396)
                           + 1
                           - ((2 * ((v92 ^ 0xE499FECD) + (v92 ^ v88 ^ 0x84AFF396) + 1)) & 0xA2E7405E)
                           - 780951505));
  uint64_t v95 = ((2 * v94) & 0xE6FCEBFC)
      + (v94 ^ 0xF37E75FE)
      - ((2 * (((2 * v94) & 0xE6FCEBFC) + (v94 ^ 0xF37E75FE)) + 1846959000) & 0x761DFAA6)
      - 233166049;
  uint64_t v96 = v95 ^ v93;
  unsigned int v97 = (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + (int)((11 * v69) | v67));
  return v97(1846959000, 2165311811, v97, v96, v95, 200486236, v67, v68, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

void sub_1000C9C80()
{
}

uint64_t sub_1000C9C88@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  LOBYTE(STACK[0x25C]) = v8 ^ 0x76;
  LOBYTE(STACK[0x425]) = BYTE1(v8) ^ 0xBD;
  LOBYTE(STACK[0x79B]) = HIBYTE(a2) ^ 0xF7;
  LOBYTE(STACK[0x5EE]) = BYTE2(v8) ^ 0x12;
  LOBYTE(STACK[0x5D2]) = BYTE2(a2) ^ 0x42;
  LOBYTE(STACK[0x240]) = a2 ^ 0x1F;
  LOBYTE(STACK[0x409]) = BYTE1(a2) ^ 0xB1;
  LOBYTE(STACK[0x278]) = a1 ^ 0x6B;
  LOBYTE(STACK[0x60A]) = BYTE2(a1) ^ 0x64;
  LOBYTE(STACK[0x626]) = BYTE2(v7) ^ 0x9B;
  LOBYTE(STACK[0x45D]) = BYTE1(v7) ^ 0x26;
  LOBYTE(STACK[0x7B7]) = HIBYTE(v8) ^ 0x8C;
  LOBYTE(STACK[0x7D3]) = HIBYTE(a1) ^ 0x18;
  LOBYTE(STACK[0x294]) = v7 ^ 0x5F;
  LOBYTE(STACK[0x441]) = BYTE1(a1) ^ 0xE8;
  LOBYTE(STACK[0x7EF]) = HIBYTE(v7) ^ 0xB9;
  BOOL v9 = (a7 + 1179059730) < 0x8AC38E3F;
  if ((a7 + 1179059730) >= 0x8AC38E3F) {
    BOOL v9 = (a7 + 1179059730) > 0x8AC38E40;
  }
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((11 * !v9) ^ a3)))();
}

void sub_1000CA20C()
{
}

uint64_t sub_1000CA214(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  LOBYTE(STACK[0x479]) = BYTE1(a3) ^ 0x7F;
  LOBYTE(STACK[0x80B]) = HIBYTE(a3) ^ 0xD3;
  LOBYTE(STACK[0x2CC]) = v11 ^ 0xAE;
  LOBYTE(STACK[0x2E8]) = a4 ^ 0x6B;
  LOBYTE(STACK[0x4B1]) = BYTE1(a4) ^ 0xE8;
  LOBYTE(STACK[0x827]) = HIBYTE(v11) ^ 0x7D;
  LOBYTE(STACK[0x495]) = BYTE1(v11) ^ 0x62;
  LOBYTE(STACK[0x65E]) = BYTE2(v11) ^ 0x20;
  LOBYTE(STACK[0x67A]) = BYTE2(a4) ^ 0x64;
  LOBYTE(STACK[0x304]) = a2 ^ 0x2E;
  LOBYTE(STACK[0x642]) = BYTE2(a3) ^ 0xCE;
  LOBYTE(STACK[0x696]) = BYTE2(a2) ^ 0xF0;
  LOBYTE(STACK[0x843]) = HIBYTE(a4) ^ 0x18;
  unsigned int v13 = (((a3 & 0xFFFFFFCA ^ 0x7F) - (((a3 & 0xFFFFFFCA ^ 0x7F) << (107 * (v12 ^ 0x44) + 16)) & 0x52) + 41) ^ 0x29) & (((a3 & 0x35 ^ 0xFFFFFFCE) + ((2 * a3) & 0x40 ^ 0xFFFFFFFB) + 35) ^ 0x22);
  LOBYTE(STACK[0x2B0]) = v13 - ((2 * v13) & 0x99) + 76;
  LOBYTE(STACK[0x85F]) = HIBYTE(a2) ^ 0x92;
  LOBYTE(STACK[0x4CD]) = BYTE1(a2) ^ 0x46;
  BOOL v14 = (a11 - 945279046) < 0xCA228376 || (a11 - 945279046) > 0xCA228377;
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + ((4071 * v14) ^ (107 * (v12 ^ 0x444)))))(92732);
}

void sub_1000CA848()
{
}

uint64_t sub_1000CA860@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,unsigned __int8 a60)
{
  LOBYTE(STACK[0x33C]) = v61 ^ 0xAE;
  LOBYTE(STACK[0x320]) = a1 ^ 0x1F;
  LOBYTE(STACK[0x897]) = HIBYTE(v61) ^ 0x7D;
  LOBYTE(STACK[0x4E9]) = BYTE1(a1) ^ 0xD7;
  LOBYTE(STACK[0x6EA]) = BYTE2(v60) ^ 0xE;
  LOBYTE(STACK[0x6CE]) = BYTE2(v61) ^ 0x20;
  LOBYTE(STACK[0x87B]) = HIBYTE(a1) ^ 0xF9;
  LOBYTE(STACK[0x374]) = v62 ^ 0x5F;
  LOBYTE(STACK[0x505]) = BYTE1(v61) ^ 0x62;
  LOBYTE(STACK[0x358]) = v60 ^ 0x57;
  LOBYTE(STACK[0x8B3]) = HIBYTE(v60) ^ 0x31;
  LOBYTE(STACK[0x706]) = BYTE2(v62) ^ 0x9B;
  LOBYTE(STACK[0x6B2]) = BYTE2(a1) ^ 0x6F;
  LOBYTE(STACK[0x53D]) = BYTE1(v62) ^ 0x26;
  LOBYTE(STACK[0x8CF]) = HIBYTE(v62) ^ 0xB9;
  LOBYTE(STACK[0x521]) = BYTE1(v60) ^ 0x11;
  HIDWORD(a48) = -153104523;
  int v64 = v63 - 471;
  int v65 = -1490100004 - 1487347361 * (((2 * (a60 ^ 0x4C)) & 0x1F4) + ((v64 - 1255) ^ 0x7CBAA6C9 ^ a60 ^ 0x4C));
  unsigned int v66 = v65
      - 418090588
      + (((v65 + 738185089) % 0x101u) ^ 0xDFFE7FDD)
      + ((2 * ((v65 + 738185089) % 0x101u)) & 0x3BA)
      + 1275154340;
  unsigned int v67 = (v66 ^ 0xABDBDB8C) + 621096836 + ((2 * v66) & 0x57B7B718) + 1411654772;
  unsigned int v68 = ((v67 - ((2 * v67) & 0xD31285E4) - 376880398) ^ 0xABAFED5C) - 1738420157;
  unsigned int v69 = (v68 ^ 0x97F72DEE) + 1597240168 + ((2 * v68) & 0x2FEE5BDC) + 1;
  unsigned int v70 = ((v69 - ((2 * v69 - 1040228622) & 0xCE202FE6) - 938490004) ^ 0x363C8A30) + 882052842;
  unsigned int v71 = ((v70 - ((2 * v70 + 1862799942) & 0x4677D98C) - 624953879) ^ 0xE36AABA7) - 35086739;
  unsigned int v72 = (v71 - ((2 * v71) & 0x7AA0A172) + 1028673721) ^ 0xC7F1901B;
  int v73 = v72 - 2 * ((v72 + 774899216) & 0x21B03EFF ^ v72 & 9) + 266355974;
  int v74 = (v73 ^ 0x5E4FC109) + 1529235676 - ((2 * ((v73 ^ 0x5E4FC109) + 644941651)) & 0x696A8312);
  int v75 = (v73 ^ 0x5E4FC109) + 621096837;
  unsigned int v76 = v75 ^ 0xAFDBFDFB;
  int v77 = (2 * v75) & 0x5FB7FBF6;
  unsigned int v78 = v73 ^ 0xA3C9B81B;
  int v79 = (v73 ^ 0x5E4FC109) - 982631084 - ((2 * ((v73 ^ 0x5E4FC109) + 1117723493)) & 0x59E43DE);
  unsigned int v80 = ((2 * ((v73 ^ 0xA1B03EF6) - 1068415135)) & 0xB9FFF7F2) + (((v73 ^ 0xA1B03EF6) - 1068415135) ^ 0xDCFFFBF9);
  unsigned int v81 = v73 ^ 0xE3969158;
  unsigned int v82 = (v73 ^ 0xE3969158) + (v73 ^ 0xA1B03EF6);
  unsigned int v83 = v82 ^ 0xDFEFA784;
  unsigned int v84 = (2 * v82) & 0xBFDF4F08;
  unsigned int v85 = v76 + 1344537093 + v77;
  int v86 = v73 ^ 0x46A44F52;
  unsigned int v87 = (v74 ^ 0x34B54189)
      + (((v73 ^ 0x68CDA45D) + v85) ^ 0xF75BFF7B)
      + ((2 * ((v73 ^ 0x68CDA45D) + v85)) & 0xEEB7FEF6)
      + 144965765;
  unsigned int v88 = ((v86 + v83 + v84 + 537942140) ^ 0x7FFFCFFF)
      + ((2 * (v86 + v83 + v84 + 537942140)) & 0xFFFF9FFF)
      + (v87 ^ 0x663A2040)
      - ((2 * v87) & 0x338BBF7E);
  int v89 = v73 ^ 0x5C92D97;
  unsigned int v90 = v73 ^ 0xB7E81C6B;
  int v91 = (v73 ^ 0x5E4FC109) + 1009116781 - ((2 * ((v73 ^ 0x5E4FC109) + 1009116781) + 59076610) & 0x7933D35C) + 2119999919;
  int v92 = v73 ^ 0x4465DC7;
  int v93 = (v73 ^ 0x5E4FC109) - 1738420156 - ((2 * ((v73 ^ 0x5E4FC109) - 1738420156)) & 0x953D518) - 2069239156;
  unsigned int v94 = (v73 ^ 0xA1B03EF6) + 334030835 - ((2 * ((v73 ^ 0xA1B03EF6) + 334030835)) & 0x2B3A77D4) - 1784857622;
  unsigned int v95 = (((v73 ^ 0xA1B03EF6) - 179867185) ^ 0x262DF4AF)
      - 640545967
      + ((2 * ((v73 ^ 0xA1B03EF6) - 179867185)) & 0x4C5BE95E);
  unsigned int v96 = (v93 ^ 0x84DA3031 ^ (v88 + 1 - 2 * ((v88 + 4591553) & 0x73DABF ^ (v88 + 1) & 2) + 440003197)) + v95;
  unsigned int v97 = (v73 ^ 0x86FFFFD8) + (v79 ^ 0x8B48E815 ^ (v96 - ((2 * v96) & 0x130F93F4) + 159894010)) + 1;
  v73 ^= 0xE5C010FB;
  unsigned int v98 = v73 + (v97 ^ 0xDBD0B79B) + ((2 * v97) & 0xB7A16F36) + 607078501;
  unsigned int v99 = (v90 ^ v94 ^ 0x483ECD86 ^ (v98 - ((2 * v98) & 0xC2EB3DC) - 2045290002)) - v80;
  unsigned int v100 = (v89 ^ 0xA1272C3C) + (v91 ^ 0x98F3D8E0 ^ (v99 - ((2 * v99 + 973076466) & 0x48D4629C) + 23735623)) + 1;
  unsigned int v101 = ((2 * v100) & 0x39FA63F4)
       + (v100 ^ 0x1CFD31FA)
       - ((2 * (((2 * v100) & 0x39FA63F4) + (v100 ^ 0x1CFD31FA)) - 2100788744) & 0xDD81DDE2)
       - 1339740179;
  unsigned int v102 = (v101 ^ 0xEEC0EEF1) + v73 - 423650434 - ((2 * ((v101 ^ 0xEEC0EEF1) + v73)) & 0xCD7F4342) + 1571;
  unsigned int v103 = ((2 * ((v101 ^ 0xEEC0EEF1) + (v79 ^ 0x82CF21EF))) & 0xFEBE7F8E)
       + (((v101 ^ 0xEEC0EEF1) + (v79 ^ 0x82CF21EF)) ^ 0x7F5F3FC7);
  int v104 = v101 ^ v90;
  int v105 = v101 ^ v94;
  int v106 = v101 ^ v89;
  unsigned int v107 = (v101 ^ 0xEEC0EEF1) + v86 - ((2 * ((v101 ^ 0xEEC0EEF1) + v86)) & 0xF3A80CCE) - 103545241;
  unsigned int v108 = ((2 * ((v101 ^ 0xEEC0EEF1) + (v91 ^ 0xBC99E9AE))) & 0x3B5DFFF0)
       + (((v101 ^ 0xEEC0EEF1) + (v91 ^ 0xBC99E9AE)) ^ 0x9DAEFFF8);
  unsigned int v109 = ((2 * ((v101 ^ 0xEEC0EEF1) + v95)) & 0xBFB374F6) + (((v101 ^ 0xEEC0EEF1) + v95) ^ 0xDFD9BA7B);
  int v110 = v101 ^ v78;
  unsigned int v111 = v81 + (v101 ^ 0x113F110E) - 74149442 - ((2 * (v81 + (v101 ^ 0x113F110E) + 1)) & 0xF729237A);
  int v112 = v101 ^ v92;
  unsigned int v113 = (v101 ^ 0xEEC0EEF1) + v85 - 1163676313 - ((2 * ((v101 ^ 0xEEC0EEF1) + v85)) & 0x75476ACE);
  unsigned int v114 = (v101 ^ 0x113F110E) + v80 - ((2 * ((v101 ^ 0x113F110E) + v80) + 1174407184) & 0xD46B0A4A) + 221612333;
  int v115 = v93 ^ 0x6A69047D ^ v101;
  unsigned int v116 = (v101 ^ v113 ^ v107 ^ v111 ^ 0x5623CC4C) + v115;
  unsigned int v117 = v74 ^ 0xDA75AF78 ^ v101;
  unsigned int v118 = (((v110 ^ 0x25C4F2B7) + v117) ^ 0x21000301)
       - v103
       - ((2 * ((v110 ^ 0x25C4F2B7) + v117)) & 0xBDFFF9FC)
       + v109
       + (v116 ^ 0x6FFDED35)
       + ((2 * v116) & 0xDFFBDA6A)
       - 218869867;
  int v119 = (v102 ^ 0x19405E5E) + (v112 ^ 0x411E34C ^ (v118 - ((2 * v118 + 925272834) & 0x2F2EA0BA) - 1289054754)) + 1;
  unsigned int v120 = (v104 ^ 0xB5744173) + (v119 ^ 0x14EDFFF7) + ((2 * v119) & 0x29DBFFEE) - 351141879;
  unsigned int v121 = (v105 ^ v114 ^ 0x5F3B01E2 ^ (v120 - ((2 * v120) & 0x9CA6A3B8) - 833400356)) - 762027389;
  unsigned int v122 = (v106 ^ 0x4FE7C2CD) + (v121 ^ 0xF973B1D5) + ((2 * v121) & 0xF2E763AA) + 109858348;
  unsigned int v123 = ((2 * v122) & 0x6EAFBFFE) + (v122 ^ 0xB757DFFF);
  unsigned int v124 = v108 + v123 - ((2 * (v108 + v123) + 1441939474) & 0xAA531882) - 2145211318;
  unsigned int v125 = v124 ^ 0xD5298C41;
  unsigned int v126 = (v124 ^ 0xD5298C41) + (v113 ^ 0xBAA3B567);
  unsigned int v127 = ((2 * (v125 + (v111 ^ 0xFB9491BD))) & 0xEDBF9EEA) + ((v125 + (v111 ^ 0xFB9491BD)) ^ 0xF6DFCF75);
  unsigned int v128 = ((2 * (v125 + (v114 ^ 0xEA358525))) & 0xFFCFFFBE) + ((v125 + (v114 ^ 0xEA358525)) ^ 0xFFE7FFDF);
  HIDWORD(v129) = (v126 ^ 0x427C65BA) + 2;
  LODWORD(v129) = (v126 ^ 0x427C65BA) - 1115448762 + ((2 * v126) & 0x84F8CB74);
  int v130 = (v129 >> 2) - 464945152 - ((2 * (v129 >> 2)) & 0xC8931DD4) + 3818;
  HIDWORD(v129) = v130 ^ 0xEEA;
  LODWORD(v129) = v130 ^ 0xE4498000;
  int v131 = (v129 >> 12) - ((2 * (v129 >> 12)) & 0xD968B64A) + 1823759141;
  int v132 = v117 + (v124 ^ 0x2AD673BE) + 1056799591 - ((2 * (v117 + (v124 ^ 0x2AD673BE) + 1)) & 0x7DFAF6CC);
  HIDWORD(v129) = v131 ^ 0x5B25;
  LODWORD(v129) = v131 ^ 0x6CB40000;
  int v133 = (v129 >> 18) - 521627992 - ((2 * (v129 >> 18)) & 0xC1D12D50);
  unsigned int v134 = ((2 * (v125 + (v112 ^ 0x9386B311))) & 0xF3C7FFFE) + ((v125 + (v112 ^ 0x9386B311)) ^ 0xF9E3FFFF);
  uint64_t v135 = ((2 * (v124 ^ v107)) & 0xBEF0ECEE ^ 0x18F0044C) + (v124 ^ v107 ^ 0xF385FC51);
  unsigned int v136 = ((2 * (v124 ^ v102)) & 0x7FF72AEE ^ 0x67240AC0) + (v124 ^ v102 ^ 0x8C6DB897);
  int v137 = ((2 * (v124 ^ v110)) & 0x5FE8FEFE ^ 0x41C8FCEC)
       + (v124 ^ v110 ^ 0x5F190189)
       + v127
       + v135
       + (((v124 ^ 0x35C11AE9 ^ v133) + (v132 ^ 0x3EFD7B66)) ^ 0x7EDEDFF7)
       + ((2 * ((v124 ^ 0x35C11AE9 ^ v133) + (v132 ^ 0x3EFD7B66))) & 0xFDBDBFEE)
       + 1832277845;
  unsigned int v138 = ((v125 + v115 + 85648036 - ((2 * (v125 + v115)) & 0xA35C548)) ^ 0x239BE22B ^ (v137
                                                                                     - ((2 * v137 + 456918674) & 0x4D02011E)
                                                                                     - 1273035816))
       - (((2 * (v109 + 539379077 + v125)) & 0x7FFFDDDE)
        + ((v109 + 539379077 + v125) ^ 0xBFFFEEEF));
  unsigned int v139 = ((v103 - 2136948679 + v125 + 971134459 - ((2 * (v103 - 2136948679 + v125)) & 0x73C4ABF6)) ^ 0x4D639D24 ^ (v138 - ((2 * v138 + 2147474910) & 0xE90391BE) + 880916430))
       + (v104 ^ 0x605DCD32 ^ v124);
  unsigned int v140 = (v139 ^ 0x7DEA7DFD)
       - (v136
        + ((2 * (v125 + (v105 ^ 0x7B5DD51B))) & 0xDEF5FCF6)
        + ((v125 + (v105 ^ 0x7B5DD51B)) ^ 0xEF7AFE7B)
        + v134)
       + ((2 * v139) & 0xFBD4FBFA)
       + 666119464;
  unsigned int v141 = (v140 - ((2 * v140 + 125292952) & 0xB14BFA44) + 1549919726) ^ (v128 + 1572897);
  unsigned int v142 = (v124 ^ v106 ^ 0x9ACE4E8C)
       + (((v141 ^ 0x58A5FD22) + 70868885 - 2 * ((v141 ^ 0x58A5FD22) & 0x4395F9D ^ v141 & 8)) ^ 0x4395F95)
       + 1;
  unsigned int v143 = (v142 ^ 0x7FBD3F7E) + v123 + ((2 * v142) & 0xFF7A7EFC);
  unsigned int v144 = v143 - ((2 * v143 - 1848262394) & 0xD9087360) + 896473651;
  uint64_t v145 = ((2 * v144) & 0xBDBDFE8E ^ 0xB8B0180E) + (v144 ^ 0x2286F3E0);
  return ((uint64_t (*)(uint64_t, void, void, void, void, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + v64))(v135, v128 - v145 - 2 * ((v128 - v145 + 519503720) & 0x16D542BF ^ (v128 - v145) & 5), ((v145 - 1591672647) ^ v132 ^ 0x3EFD7B66) & 0x61D675FD, v145 + v127 - ((2 * (v145 + v127) + 1417831048) & 0xF46FB40C), v136 - v145 - ((2 * (v136 - v145) + 1036440480) & 0x8D12099A), v145, (v145 - 1591672647), v145 + v134 - ((2 * (v145 + v134) + 1316618612) & 0xB9ECC62C), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

void sub_1000CBB10()
{
}

uint64_t sub_1000CBB38@<X0>(int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61,uint64_t a62,int a63)
{
  LODWORD(a48) = a1;
  LODWORD(v75) = v69;
  LOBYTE(STACK[0x378]) = LOBYTE(STACK[0x3D8]) ^ LOBYTE(STACK[0x3A0]) ^ *(unsigned char *)((LODWORD(STACK[0x1200]) ^ 0x4EFBF7EE60023350)
                                                                                + a7
                                                                                + ((2
                                                                                  * (LODWORD(STACK[0x1200]) ^ 0xDFDD90C7)) & 0x17FBF472ELL)
                                                                                - 0x718A04C23FAC9543) ^ *(unsigned char *)((LODWORD(STACK[0x1E20]) ^ 0xAF9ED33A21E95F38) + a7 + ((2 * (LODWORD(STACK[0x1E20]) ^ 0xDFDD90C7)) & 0x1FC699FFELL) + 0x2DD31FF181FE3E55) ^ 0x4C;
  LOBYTE(STACK[0x541]) = *(unsigned char *)((LODWORD(STACK[0x1384]) ^ 0xFEEDFFFE28726B10)
                                  + a7
                                  + ((2 * (LODWORD(STACK[0x1384]) ^ 0xDFDD90C7)) & 0x1EF5FF7AELL)
                                  - 0x217C0CD2777CED83) ^ LOBYTE(STACK[0x569]) ^ LOBYTE(STACK[0x5A1]) ^ *(unsigned char *)((LODWORD(STACK[0xA34]) ^ 0x7AC67DFD21AB47B1) + a7 + ((2 * (LODWORD(STACK[0xA34]) ^ 0xDFDD90C7)) & 0x1FCEDAEECLL) + 0x62AB752E81BC36DELL) ^ 0x4C;
  LOBYTE(STACK[0x70A]) = LOBYTE(STACK[0x76A]) ^ LOBYTE(STACK[0x732]) ^ *(unsigned char *)((LODWORD(STACK[0x1508]) ^ 0x1BFEFDF72C02675DLL)
                                                                                + a7
                                                                                + ((2
                                                                                  * (LODWORD(STACK[0x1508]) ^ 0xDFDD90C7)) & 0x1E7BFEF34)
                                                                                - 0x3E8D0ACB73ACE946) ^ *(unsigned char *)((LODWORD(STACK[0xBB8]) ^ 0xDFBDE3F3622B6F0CLL) + a7 + ((2 * (LODWORD(STACK[0xBB8]) ^ 0xDFDD90C7)) & 0x17BEDFF96) - 0x24BF0C73DC3F177) ^ 0x4C;
  LOBYTE(STACK[0x8D3]) = a66 ^ *(unsigned char *)((LODWORD(STACK[0xD3C]) ^ 0xFFBBFFFF28634E3ALL)
                                        + a7
                                        + ((2 * (LODWORD(STACK[0xD3C]) ^ 0xDFDD90C7)) & 0x1EF7DBDFALL)
                                        - 0x224A0CD3778BD0A9) ^ *(unsigned char *)((LODWORD(STACK[0x168C]) ^ 0xFFFEFF7D260C6F29)
                                                                           + a7
                                                                           + ((2
                                                                             * (LODWORD(STACK[0x168C]) ^ 0xDFDD90C7)) & 0x1F3A3FFDCLL)
                                                                           - 0x228D0C51799EF19ALL) ^ LOBYTE(STACK[0x22B]) ^ 0x4C;
  LOBYTE(STACK[0x394]) = LOBYTE(STACK[0x3BC]) ^ LOBYTE(STACK[0x3F4]) ^ *(unsigned char *)((LODWORD(STACK[0x1810]) ^ 0xF3FFBFFDAC237F28)
                                                                                + ((2
                                                                                  * (LODWORD(STACK[0x1810]) ^ 0xDFDD90C7)) & 0xE7FDDFDE)
                                                                                + a7
                                                                                - 0x168DCCD0F3CBE19BLL) ^ *(unsigned char *)((LODWORD(STACK[0xEC0]) ^ 0x3EFF7B952014EEA8) + a7 + ((2 * (LODWORD(STACK[0xEC0]) ^ 0xDFDD90C7)) & 0x1FF92FCDELL) - 0x618D88697F96701BLL) ^ 0x4C;
  LOBYTE(STACK[0x55D]) = LOBYTE(STACK[0x585]) ^ LOBYTE(STACK[0x5BD]) ^ *(unsigned char *)((LODWORD(STACK[0x1044]) ^ 0x6D8FF7C128026F78)
                                                                                + a7
                                                                                + ((2
                                                                                  * (LODWORD(STACK[0x1044]) ^ 0xDFDD90C7)) & 0x1EFBFFF7ELL)
                                                                                + 0x6FE1FB6A88530E95) ^ *(unsigned char *)((LODWORD(STACK[0x1994]) ^ 0x7B5E3FEA2A020D18) + a7 + ((2 * (LODWORD(STACK[0x1994]) ^ 0xDFDD90C7)) & 0x1EBBF3BBELL) + 0x6213B3418A537075) ^ 0x4C;
  LOBYTE(STACK[0x726]) = LOBYTE(STACK[0x786]) ^ *(unsigned char *)((LODWORD(STACK[0x1B18]) ^ 0x6C744FF32E227E9CLL)
                                                         + a7
                                                         + ((2 * (LODWORD(STACK[0x1B18]) ^ 0xDFDD90C7)) & 0x1E3FFDCB6)
                                                         + 0x70FDA3388E331FF9) ^ *(unsigned char *)((LODWORD(STACK[0x11C8]) ^ 0x75FF7EFB02267FE0)
                                                                                            + a7
                                                                                            + ((2
                                                                                              * (LODWORD(STACK[0x11C8]) ^ 0xDFDD90C7)) & 0x1BBF7DE4ELL)
                                                                                            + 0x67727430A2371F2DLL) ^ LOBYTE(STACK[0x74E]) ^ 0x4C;
  a65 = LOBYTE(STACK[0x20F]) ^ LOBYTE(STACK[0x247]) ^ *(unsigned char *)((LODWORD(STACK[0x134C]) ^ 0xDDBD6EFB232AEF3ELL)
                                                               + a7
                                                               + ((2 * (LODWORD(STACK[0x134C]) ^ 0xDFDD90C7)) & 0x1F9EEFFF2)
                                                               - 0x4B7BCF7CC471A5) ^ *(unsigned char *)((LODWORD(STACK[0x1C9C]) ^ 0x7D5CF1BE22A2611ALL)
                                                                                                + a7
                                                                                                + ((2
                                                                                                  * (LODWORD(STACK[0x1C9C]) ^ 0xDFDD90C7)) & 0x1FAFFE3BALL)
                                                                                                + 0x6015016D82B31C77) ^ 0x4C;
  uint64_t v70 = (v66 - 1024381804) & 0x3D0ED3BB;
  uint64_t v71 = v70 ^ 0x182;
  LOBYTE(STACK[0x388]) = 76;
  int v72 = LOBYTE(STACK[0x378]);
  if ((v71 & 0x63D7F028) == 0) {
    int v72 = 76;
  }
  LOBYTE(STACK[0x388]) = v72;
  int v73 = v72 ^ 0x4C;
  LOBYTE(STACK[0x388]) = v73 ^ 0x4C;
  LOBYTE(STACK[0x388]) = v73 ^ 0x4C;
  LOBYTE(STACK[0x388]) = v73 ^ 0x4C;
  LOBYTE(STACK[0x388]) = v73 ^ 0x4C;
  LOBYTE(STACK[0x388]) = v73 ^ 0x4C;
  LOBYTE(STACK[0x388]) = v73 ^ 0x4C;
  LOBYTE(STACK[0x388]) = v73 ^ 0x4C;
  *(&a61 + (457 * (((2 * v73) & 0x13C) + (v73 ^ 0xB3DF3E9E)) - 428000206) % 0x708) = 76;
  HIDWORD(v75) = a2 + 1543159804;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + v66))(v70, 457, 3280372696, 2443359173, 1800, &a61, 2619871192, v71, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           v75,
           __PAIR64__(v67, v68),
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_1000CC2C8(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v71 = (v68 - ((2 * v68 + 1134829892) & ((a1 - 598291373) & 0x23A937EF ^ 0x7766FFE0)) + 1569033653) ^ 0x3BB37DAB;
  int v72 = *(_DWORD *)(v70 + 4 * ((((2722 * v71) & 0x77FCDFBC) + ((1361 * v71) ^ 0xBBFE6FDE) + 1143273627) % 0x12E0)) ^ 0x3BD5EEAA;
  unsigned int v73 = v72 - ((2 * v72 + 374804154) & 0x163BB3C8) - 162963135;
  int v74 = v73 ^ (v73 >> 7) ^ (v73 >> 3) ^ 0x42F29945;
  uint64_t v75 = *(uint64_t (**)(void))(v69 + 8 * ((2441 * (v68 + 1 == v67 + 256)) ^ a1));
  *(&a67 + (457 * v68 + 1610621810) % 0x708u) = byte_10023B160[(((4424 * v74) & 0x7EB3FF78)
                                                              + ((2212 * v74) ^ 0x3F59FFBEu)
                                                              - 1061099818)
                                                             % 0x97F] ^ 0x68;
  return v75();
}

uint64_t sub_1000CC470@<X0>(int a1@<W1>, unsigned int a2@<W2>, int a3@<W4>, unsigned int a4@<W5>, int a5@<W6>, int a6@<W8>)
{
  uint64_t v12 = ((13 * (v8 ^ 0x580)) ^ 0xD23904F1)
      + v6 * a1
      - ((((((13 * (v8 ^ 0x580)) ^ 0xD23904F1) + v6 * a1) * (unint64_t)a4) >> 32) >> 10) * a5;
  unsigned int v13 = (((2 * (*(unsigned __int8 *)(v7 + v12) ^ 0x48)) & 0x1F4) + (*(unsigned __int8 *)(v7 + v12) ^ 0xBF6FBEB6)) * a1
      + 1099438070;
  int v14 = *(unsigned __int8 *)(v7 + v13 - (((v13 * (unint64_t)a4) >> 32) >> 10) * a5);
  unsigned int v15 = (((2 * (v14 ^ 3)) & 0xFFFFFFF7) + (v14 ^ 0x3E7FFBFC)) * v9 - 165496012;
  int v16 = *(unsigned __int8 *)(v10 + v15 - (((v15 * (unint64_t)a2) >> 32) >> 10) * a3);
  HIDWORD(v17) = v16 ^ 0x30;
  LODWORD(v17) = v16 << 24;
  unsigned int v18 = (v17 >> 31) - ((2 * (v17 >> 31)) & 0xFFFFFFEA) - 11;
  int v19 = (~(v18 >> 1) & 0x7A) + ((v18 & 0xFC) >> 2) - 61;
  unsigned int v20 = (v19 & (v18 ^ 0xFFFFFFF5)) - ((2 * (v19 & (v18 ^ 0xFFFFFFF5))) & 0x26);
  unsigned int v21 = ((v19 + (v18 ^ 0xFFFFFFF5)) ^ 0x7F)
      + 2 * (v19 + (v18 ^ 0xFFFFFFF5))
      + ((2 * v20 - 90) ^ 0xFFFFFFBF)
      + ((2 * (2 * v20 - 90)) & 0xFFFFFFCF ^ 0xFFFFFFB3)
      + 105;
  int v22 = v18 ^ 0xF4 ^ ((v21 >> 4) - ((v21 >> 3) & 0xE) + 119);
  unsigned int v23 = (((2 * v22) & 0x11E) + (v22 ^ 0x73FF18F)) * v9 + 1539525288;
  int v24 = *(unsigned __int8 *)(v10 + v23 - (((v23 * (unint64_t)a2) >> 32) >> 10) * a3);
  unsigned int v25 = (((2 * (v24 ^ 0xA)) & 0xDE) + (v24 ^ 0x77FF36F5)) * a1 - 915913191;
  int v26 = *(unsigned __int8 *)(v7 + v25 - (((v25 * (unint64_t)a4) >> 32) >> 10) * a5);
  unsigned int v27 = (((2 * (v26 ^ 0x1F)) & 0x1DA) + (v26 ^ 0x3FF75FF2)) * v9 + 1250945724;
  int v28 = *(unsigned __int8 *)(v10 + v27 - (((v27 * (unint64_t)a2) >> 32) >> 10) * a3);
  int v29 = (-97 * (v28 ^ 0x30) - (((v28 << 6) - 2 * (v28 ^ 0x30)) & 0x96) + 75) ^ 0xA7;
  unsigned int v30 = (((2 * v29) & 0x1DE) + (v29 ^ 0xE9B775EF)) * v9 - 1962536559;
  int v31 = *(unsigned __int8 *)(v10 + v30 - (((v30 * (unint64_t)a2) >> 32) >> 10) * a3);
  unsigned int v32 = 23 * (v31 ^ 0x30) - ((-2 * v31) & 8) + 4;
  int v33 = v32 ^ 9 ^ ((v32 >> 3) & 9 | 0x86);
  unsigned int v34 = (((2 * v33) & 0x1D6) + (v33 ^ 0xFBDF9FEB)) * a1 + 1573765309;
  int v35 = *(unsigned __int8 *)(v7 + v34 - (((v34 * (unint64_t)a4) >> 32) >> 10) * a5);
  *(unsigned char *)(v7
           + v6 * a1
           - 767455097
           - ((((v6 * a1 - 767455097) * (unint64_t)a4) >> 32) >> 10) * a5) = *(unsigned char *)(v7 + (((2 * (v35 ^ 4)) & 0x16E) + (v35 ^ 0x75FFDFB)) * a1 - 710403951 - (((((((2 * (v35 ^ 4)) & 0x16E) + (v35 ^ 0x75FFDFBu)) * a1 - 710403951) * (unint64_t)a4) >> 32) >> 10) * a5);
  LODWORD(v12) = (((2 * (*(unsigned __int8 *)(v7 + v12) ^ 0x4C)) & 0xDDDDDDDD)
                + (*(unsigned __int8 *)(v7 + v12) ^ 0x2E797BA2))
               * a1
               + 153471074;
  LODWORD(v12) = *(unsigned __int8 *)(v7
                                    + v12
                                    - (((v12 * (unint64_t)a4) >> 32) >> 10) * a5);
  LODWORD(v12) = (((2 * (v12 ^ 0x55555555)) & 0xFC) + (v12 ^ 0x57FFCFAA)) * v9 - 1583144120;
  LODWORD(v12) = *(unsigned __int8 *)(v10
                                    + v12
                                    - (((v12 * (unint64_t)a2) >> 32) >> 10) * a3);
  HIDWORD(v17) = v12 ^ 0x30;
  LODWORD(v17) = v12 << 24;
  unsigned int v36 = ((v17 >> 31) - ((2 * (v17 >> 31)) & 0x92) - 55);
  LODWORD(v12) = (((2 * (((v17 >> 31) - ((2 * (v17 >> 31)) & 0xFFFFFF92) - 55) ^ (v36 >> 4) ^ (v36 >> 6) ^ 0x3C)) & 0xFC)
                + ((((v17 >> 31) - ((2 * (v17 >> 31)) & 0x92) - 55) ^ (v36 >> 4) ^ (v36 >> 6)) ^ 0x6BD43E42))
               * a1
               - 2112036014;
  LODWORD(v12) = *(unsigned __int8 *)(v7
                                    + v12
                                    - (((v12 * (unint64_t)a4) >> 32) >> 10) * a5);
  LODWORD(v12) = (((2 * ~v12) & 0x1AE) + (v12 ^ 0x5DFEDB08)) * v9 - 770076048;
  LODWORD(v12) = *(unsigned __int8 *)(v10
                                    + v12
                                    - (((v12 * (unint64_t)a2) >> 32) >> 10) * a3) ^ 0x30;
  LODWORD(v12) = 23 * v12 - ((46 * v12) & 0xFFFFFFD8) + 108;
  LODWORD(v12) = v12 ^ 0xC7 ^ (((2 * ((v12 >> 3) & 9)) | 0xC6) - ((v12 >> 3) & 9) - 3);
  LODWORD(v12) = (((2 * v12) & 0x1FA) + (v12 ^ 0x7BFD75FD)) * a1 - 1467311461;
  LODWORD(v12) = *(unsigned __int8 *)(v7
                                    + v12
                                    - (((v12 * (unint64_t)a4) >> 32) >> 10) * a5) ^ 0x4C;
  LODWORD(v12) = (((2 * v12) & 0x9E) + (v12 ^ 0xBFFEF54F)) * a1 + 1105205817;
  int v37 = *(uint64_t (**)(void))(v11 + 8 * (((2 * (v6 + 1 == a6 + 256)) | (16 * (v6 + 1 == a6 + 256))) ^ v8));
  *(unsigned char *)(v7
           + v6 * a1
           - 767776825
           - ((((v6 * a1 - 767776825) * (unint64_t)a4) >> 32) >> 10) * a5) = *(unsigned char *)(v7 + v12 - (((v12 * (unint64_t)a4) >> 32) >> 10) * a5);
  return v37();
}

uint64_t sub_1000CC994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v156 = v73 ^ 0x37A;
  HIDWORD(a48) = 1879341208;
  int v75 = *(unsigned __int8 *)((LODWORD(STACK[0x179C]) ^ 0xBB98DFFD2A227F38)
                           + a65
                           + ((2 * (LODWORD(STACK[0x179C]) ^ 0xDFDD90C7)) & 0x1EBFFDFFELL)
                           + 0x446720020A001001) ^ LOBYTE(STACK[0x573]) ^ 0x5D;
  int v76 = a70 ^ *(unsigned __int8 *)((LODWORD(STACK[0x1494]) ^ 0x57FFFDDFBD206FB9)
                                 + ((2 * (LODWORD(STACK[0x1494]) ^ 0xDFDD90C7)) & 0xC5FBFEFC)
                                 + a65
                                 - 0x57FFFDDF62FDFF7ELL);
  int v77 = LOBYTE(STACK[0x3AA]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x1618]) ^ 0xFFEEDFDF38717C1DLL)
                                                         + a65
                                                         + ((2 * (LODWORD(STACK[0x1618]) ^ 0xDFDD90C7)) & 0x1CF59D9B4)
                                                         + 0x11202018531326);
  int v78 = *(unsigned __int8 *)((LODWORD(STACK[0x1310]) ^ 0x7657EFEE701AEAF8)
                           + a65
                           + ((2 * (LODWORD(STACK[0x1310]) ^ 0xDFDD90C7)) & 0x15F8EF47ELL)
                           - 0x7657EFEEAFC77A3FLL) ^ 0x11;
  int v79 = (((v75 - ((2 * v75) & 0x164)) << 16) + 984743936) ^ 0x3AB20000;
  unsigned int v80 = (((v77 + 10105923 - ((2 * v77) & 0x56)) << 8) + 1042432) ^ 0x9A442B00;
  unsigned int v81 = (v80 + 181926882 - ((2 * v80) & 0x15AFF600)) ^ 0xAD7FBE2 | (v79 - 137560522 - ((2 * v79) & 0x6F980000)) ^ 0xF7CCFE36;
  int v82 = (v81 + 1695720919 - ((2 * v81) & 0x4A254BAE)) ^ 0x6512A5D7 | ((v76 ^ 0x5D) + 908737794 - ((2 * v76) & 4)) ^ 0x362A3D02;
  int v83 = (((v82 - ((2 * v82) & 0x705470)) << 8) + 942290944) ^ 0x382A3800;
  int v84 = (v83 + 763929304 - ((2 * v83) & 0x5B114400)) ^ 0x2D88A2D8 | (v78 + 1607271547 - ((2 * v78) & 0xF6)) ^ 0x5FCD047B;
  *(_DWORD *)(*a66 - 0x73FCE2C07DC83D77) = ((LOBYTE(STACK[0x720]) ^ 0x4C)
                                            - ((2 * (LOBYTE(STACK[0x720]) ^ 0x4C)) & 0x50)
                                            + 664626472) ^ 0x146316D5 ^ (v84 - ((2 * v84) & 0xD847C674) - 333192390);
  int v85 = LOBYTE(STACK[0x58F]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x1DAC]) ^ 0xEFEF57EE00764459)
                                                         + a65
                                                         + ((2 * (LODWORD(STACK[0x1DAC]) ^ 0xDFDD90C7)) & 0x1BF57A93CLL)
                                                         + 0x1010A81120542B62);
  int v86 = *(unsigned __int8 *)((LODWORD(STACK[0x1C28]) ^ 0xFBAFFFEFE020EE26)
                           + ((2 * (LODWORD(STACK[0x1C28]) ^ 0xDFDD90C7)) & 0x7FFAFDC2)
                           + a65
                           + 0x4500010C002811FLL) ^ LOBYTE(STACK[0x3C6]) ^ 0x5D;
  int v87 = a73 ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x1AA4]) ^ 0xEFACD77FA432EBBBLL)
                                        + ((2 * (LODWORD(STACK[0x1AA4]) ^ 0xDFDD90C7)) & 0xF7DEF6F8)
                                        + a65
                                        + 0x1053288084108484);
  int v88 = (((v85 - ((2 * v85) & 0x1AC)) << 16) + 1104543744) ^ 0x41D60000;
  unsigned int v89 = (((v86 - ((2 * v86) & 0x18A)) << 8) - 1935162112) ^ 0x8CA7C500;
  unsigned int v90 = (v89 + 1161781359 - ((2 * v89) & 0xA7EC000)) ^ 0x453F606F | (v88 - 71522473 - ((2 * v88) & 0x77780000)) ^ 0xFBBCA757;
  unsigned int v91 = (v90 + 361913460 - ((2 * v90) & 0x2B24B8E8)) ^ 0x15925C74 | (v87 - 250608314 - ((2 * v87) & 0x8C)) ^ 0xF1100546;
  int v92 = LOBYTE(STACK[0x73C]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x1920]) ^ 0xE9B7DB5520306F79)
                                                         + a65
                                                         + ((2 * (LODWORD(STACK[0x1920]) ^ 0xDFDD90C7)) & 0x1FFDBFF7CLL)
                                                         + 0x164824AA00120042);
  int v93 = (((v91 + (~(2 * v91) | 0xBB8FDB)) << 8) + 574100224) ^ 0x22381200;
  unsigned int v94 = (v93 - 2051679922 - ((2 * v93) & 0xB6BB200)) ^ 0x85B5D94E | (v92 - 2019674213 - ((2 * v92) & 0x136)) ^ 0x879E379B;
  *(_DWORD *)(*a66 - 0x73FCE2C07DC83D67) = v94 - 539127609 - ((2 * v94) & 0xBFBB218E);
  int v95 = *(unsigned __int8 *)((LODWORD(STACK[0xCC8]) ^ 0xB6FB7FFC28C04438)
                           + a65
                           + ((2 * (LODWORD(STACK[0xCC8]) ^ 0xDFDD90C7)) & 0x1EE3BA9FELL)
                           + 0x4904800308E22B01);
  unsigned int v96 = ((2 * (v95 ^ 0x11)) & 0xFFFFFFEF) + (v95 ^ 0x3D779FE6);
  int v97 = *(unsigned __int8 *)((LODWORD(STACK[0x9C0]) ^ 0x7EBDFFFC622A4A78)
                           + a65
                           + ((2 * (LODWORD(STACK[0x9C0]) ^ 0xDFDD90C7)) & 0x17BEFB57ELL)
                           - 0x7EBDFFFCBDF7DABFLL) ^ LOBYTE(STACK[0x758]) ^ 0x5D;
  int v98 = LOBYTE(STACK[0x5AB]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0xE4C]) ^ 0x3C7FFF7F102A5BBALL)
                                                         + a65
                                                         + ((2 * (LODWORD(STACK[0xE4C]) ^ 0xDFDD90C7)) & 0x19FEF96FALL)
                                                         - 0x3C7FFF7FCFF7CB7DLL);
  int v99 = (((v98 - ((2 * v98) & 0x134)) << 8) + 1342872064) ^ 0x500A9A00;
  int v100 = ((LOBYTE(STACK[0x3E2]) ^ 0x4C) + 1297252448 - ((2 * (LOBYTE(STACK[0x3E2]) ^ 0x4C)) & 0xC0)) ^ 0x4D528060;
  unsigned int v101 = (v99 - 627396124 - ((2 * v99) & 0x35356200)) ^ 0xDA9AB1E4 | v100;
  int v102 = (v101 ^ 0xCE5FF3) + v96 + ((2 * v101) & 0x9CBFE6);
  int v103 = (((v100 & (v96 - 1031249911)) - ((2 * (v100 & (v96 - 1031249911))) & 0x44E712)) << 9) - 991489536;
  int v104 = *(unsigned __int8 *)((LODWORD(STACK[0xB44]) ^ 0xDF6FDD65402DF668)
                            + a65
                            + ((2 * (LODWORD(STACK[0xB44]) ^ 0xDFDD90C7)) & 0x13FE0CD5ELL)
                            + 0x2090229A600F9951) ^ 0x11;
  unsigned int v105 = ((v103 ^ 0xEAE39721)
        + ((2 * v103) & 0xA3F6F400 ^ 0x7E39DBFF)
        + (((v102 << 8) - 1174399488) ^ 0x7FDBCB9F)
        + ((2 * ((v102 << 8) - 1174399488)) & 0xFFB79600)
        + 1377808193) | (v104 + 1305570465 - ((2 * v104) & 0x142)) ^ 0x4DD16CA1;
  unsigned int v106 = (((v105 + 4893253 - ((2 * v105) & 0x95548A)) ^ ((LOBYTE(STACK[0x219]) ^ 0x4C)
                                                       - ((2 * LOBYTE(STACK[0x219])) & 0x64)
                                                       + 12504626)) << 8) ^ 0xF4647700;
  unsigned int v107 = (v106 - 1080051247 - ((2 * v106) & 0x7F3F7200)) ^ 0xBF9FB9D1 | (v97 - 785494073 - ((2 * v97) & 0xFFFFFF8F)) ^ 0xD12E4FC7;
  *(_DWORD *)(*a66 - 0x73FCE2C07DC83D57) = v107 - 539127609 - ((2 * v107) & 0xBFBB218E);
  LODWORD(v152) = (*(unsigned __int8 *)(v74 - 117) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v74 - 117) ^ 0x3E)) & 0x10A);
  int v108 = *(unsigned __int8 *)((LODWORD(STACK[0x1A0C]) ^ 0xFFFFDBBF642B05BCLL)
                            + a65
                            + ((2 * (LODWORD(STACK[0x1A0C]) ^ 0xDFDD90C7)) & 0x177ED2AF6)
                            + 0x244044096A85);
  LODWORD(v155) = (*(unsigned __int8 *)(v74 - 120) ^ 0x3E)
                - 2138616428
                - ((2 * (*(unsigned __int8 *)(v74 - 120) ^ 0x3E)) & 0x128);
  int v109 = (LOBYTE(STACK[0x2DB]) ^ 0x5D ^ v108) - ((2 * (LOBYTE(STACK[0x2DB]) ^ 0x5D ^ v108)) & 0x1B8);
  HIDWORD(v155) = 1033;
  int v110 = (*(unsigned __int8 *)(v74 - 118) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v74 - 118) ^ 0x3E)) & 0x1A2);
  int v111 = *(unsigned __int8 *)((LODWORD(STACK[0x1888]) ^ 0xDDCEDAA83C205330)
                            + a65
                            + ((2 * (LODWORD(STACK[0x1888]) ^ 0xDFDD90C7)) & 0x1C7FB87EELL)
                            + 0x223125571C023C09) ^ 0x11;
  HIDWORD(v152) = v111 - ((2 * v111) & 0x1AA);
  unsigned int v112 = (((v109 << 8) - 1237459968) ^ 0xB63DDC00)
       - 1633368089
       - ((2 * (((v109 << 8) - 1237459968) ^ 0xB63DDC00)) & 0x3D498E00);
  HIDWORD(a44) = 147;
  uint64_t v154 = (LODWORD(STACK[0x195C]) ^ 0x13ED6FBBA02E5558)
       + ((2 * (LODWORD(STACK[0x195C]) ^ 0xDFDD90C7)) & 0xFFE78B3E)
       + a65;
  HIDWORD(a42) = 1490;
  uint64_t v153 = (LODWORD(STACK[0x1654]) ^ 0x7FFEFDFD7862FD18)
       + a65
       + ((2 * (LODWORD(STACK[0x1654]) ^ 0xDFDD90C7)) & 0x14F7EDBBELL);
  int v113 = (LOBYTE(STACK[0x81A]) ^ 0x4C) - 1484686958 - ((2 * LOBYTE(STACK[0x81A])) & 0x124);
  unsigned int v114 = ((((v110 << 8) + 138793216) ^ 0x845D100)
        - 457241811
        - ((2 * (((v110 << 8) + 138793216) ^ 0x845D100)) & 0x497E1600)) ^ 0xE4BF0B2D | ((((v152 << 16)
                                                                                        - 930807808) ^ 0xC8850000)
                                                                                      - 602709904
                                                                                      - ((2
                                                                                        * (((v152 << 16)
                                                                                          - 930807808) ^ 0xC8850000)) & 0x38260000)) ^ 0xDC136070;
  unsigned int v115 = (v114 - 423870275 - ((2 * v114) & 0x4D78817A)) ^ 0xE6BC40BD | ((*(unsigned __int8 *)(v74 - 119) ^ 0x3E)
                                                                      + 1162864727
                                                                      - ((2 * (*(unsigned __int8 *)(v74 - 119) ^ 0x3E)) & 0xAE)) ^ 0x454FE857;
  unsigned int v116 = (((v115 - ((2 * v115) & 0x1D1264)) << 8) - 1903611392) ^ 0x8E893200;
  unsigned int v117 = v116 - 304182686 - ((2 * v116) & 0xDBBD1400);
  int v118 = LOBYTE(STACK[0x7AB]) ^ *(unsigned __int8 *)((LODWORD(STACK[0xE1C]) ^ 0xFF5ED3AA0982FF3ELL)
                                                   + a65
                                                   + ((2 * (LODWORD(STACK[0xE1C]) ^ 0xDFDD90C7)) & 0x1ACBEDFF2)
                                                   + 0xA12C5529A09007);
  int v119 = (v118 ^ 0x5D) - ((2 * v118) & 0x44444444);
  int v120 = LOBYTE(STACK[0x5E2]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0xC98]) ^ 0xF7EB675C20B57FE0)
                                                          + a65
                                                          + ((2 * (LODWORD(STACK[0xC98]) ^ 0xDFDD90C7)) & 0x1FED1DE4ELL)
                                                          + 0x81498A3009710D9);
  int v121 = v120 - ((2 * v120) & 0x128);
  int v122 = LOBYTE(STACK[0x651]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x1704]) ^ 0x97F6FFF9620377F8)
                                                          + a65
                                                          + ((2 * (LODWORD(STACK[0x1704]) ^ 0xDFDD90C7)) & 0x17BBDCE7ELL)
                                                          + 0x68090006422118C1);
  int v123 = LOBYTE(STACK[0x488]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x1580]) ^ 0x743E81FE883B46B5)
                                                          + ((2 * (LODWORD(STACK[0x1580]) ^ 0xDFDD90C7)) & 0xAFCDACE4)
                                                          + a65
                                                          - 0x743E81FE57E6D672);
  int v124 = v123 - 137259579 - ((2 * v123) & 0x18A);
  int v125 = LOBYTE(STACK[0x419]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0xB14]) ^ 0x6EF79E3D24276F38)
                                                          + a65
                                                          + ((2 * (LODWORD(STACK[0xB14]) ^ 0xDFDD90C7)) & 0x1F7F5FFFELL)
                                                          - 0x6EF79E3DFBFAFFFFLL);
  int v126 = (v117 ^ 0xEDDE8A62 | v155 ^ 0x80874D94) - ((2 * (v117 ^ 0xEDDE8A62 | v155 ^ 0x80874D94)) & 0x32ED500C);
  unsigned int v127 = ((((v121 << 8) + 782668800) ^ 0x2EA69400)
        - 1732219312
        - ((2 * (((v121 << 8) + 782668800) ^ 0x2EA69400)) & 0x3180DC00)) ^ 0x98C06E50 | ((((v119 << 16) - 1105068032) ^ 0xBE220000)
                                                                                       + 337342323
                                                                                       - ((2
                                                                                         * (((v119 << 16) - 1105068032) ^ 0xBE220000)) & 0x28360000)) ^ 0x141B6F73;
  int v128 = *(unsigned __int8 *)((LODWORD(STACK[0x990]) ^ 0x737EEF7F20265FD8)
                            + a65
                            + ((2 * (LODWORD(STACK[0x990]) ^ 0xDFDD90C7)) & 0x1FFF79E3ELL)
                            - 0x737EEF7FFFFBCF1FLL) ^ LOBYTE(STACK[0x250]) ^ 0x5D;
  unsigned int v129 = ((((v113 ^ 0xA7817992 | v112 ^ 0x9EA4C7E7) - ((2 * (v113 ^ 0xA7817992 | v112 ^ 0x9EA4C7E7)) & 0xD090) + 59464) ^ (HIDWORD(v152) + 8917)) << 16) ^ 0xCA9D0000;
  unsigned int v130 = (((v122 - ((2 * v122) & 0x1D2)) << 8) - 980227840) ^ 0xC592E900;
  uint64_t v131 = (2 * v130) & 0x460E2400;
  int v132 = (v129 + 532496134 - ((2 * v129) & 0x3F7A0000)) ^ 0x1FBD3F06 | (v130 - 486075756 - v131) ^ 0xE3071294;
  unsigned int v133 = (v127 - 2122961011 - ((2 * v127) & 0x2EC5F1A)) ^ 0x81762F8D | (v125 - 493872904 - ((2 * v125) & 0x1F0)) ^ 0xE29018F8;
  unsigned int v134 = (((v133 - ((2 * v133) & 0xE2FC80)) << 8) - 243384320) ^ 0xF17E4000;
  unsigned int v135 = (v132 + 45927899 - ((2 * v132) & 0x5799BB6)) ^ 0x2BCCDDB | v124 ^ 0xF7D195C5;
  unsigned int v136 = LODWORD(STACK[0xB00]) ^ (v126 - 1720276986) ^ (v128 - ((2 * v128) & 0x15A) - 8475987) ^ (v134
                                                                                                - ((2 * v134) & 0xD878EA00)
                                                                                                + 1815901562) ^ 0xFF906655 ^ (v135 - ((2 * v135) & 0xEB482308) - 173796988);
  int v137 = *(unsigned __int8 *)(v154 - 0x13ED6FBB7FF3C59FLL);
  int v138 = LOBYTE(STACK[0x5D9]);
  int v139 = *(unsigned __int8 *)(v153 - 0x7FFEFDFDA7BF6DDFLL);
  int v140 = *(unsigned __int8 *)((LODWORD(STACK[0x17D8]) ^ 0xFCFBF3EA71266F3ALL)
                            + a65
                            + ((2 * (LODWORD(STACK[0x17D8]) ^ 0xDFDD90C7)) & 0x15DF7FFFALL)
                            + 0x3040C1551040003);
  int v141 = LOBYTE(STACK[0x7A2]);
  int v142 = LOBYTE(STACK[0x263]);
  int v143 = LOBYTE(STACK[0x410]);
  int v144 = *(unsigned __int8 *)((LODWORD(STACK[0x14D0]) ^ 0x6BA73FDF6922CE31)
                            + a65
                            + ((2 * (LODWORD(STACK[0x14D0]) ^ 0xDFDD90C7)) & 0x16DFEBDECLL)
                            - 0x6BA73FDFB6FF5EF6);
  *(_DWORD *)(*a66 - 0x73FCE2C07DC88EB7) = v136;
  int v145 = (v140 ^ v141 ^ 0x5D) - ((2 * (v140 ^ v141 ^ 0x5D)) & 0x56);
  unsigned int v146 = (((v137 ^ v142 ^ 0x5D) - ((2 * (v137 ^ v142 ^ 0x5D)) & 0x88888888)) << 16) - 515637248;
  unsigned int v147 = ((v146 ^ 0xE1440000) + 34265122 - ((2 * v146) & 0x4140000)) ^ 0x20AD822 | ((((v145 << 8) + 2029071104) ^ 0x78F12B00)
                                                                                  + 1181822571
                                                                                  - ((2
                                                                                    * (((v145 << 8) + 2029071104) ^ 0x78F12B00)) & 0xCE25C00)) ^ 0x46712E6B;
  int v148 = (v147 + 300819278 - ((2 * v147) & 0x23DC469C)) ^ 0x11EE234E | ((v138 ^ 0x5D ^ v139)
                                                                      + 1824923451
                                                                      - ((2 * (v138 ^ 0x5D ^ v139)) & 0x76)) ^ 0x6CC61F3B;
  int v149 = (v143 ^ 0x5D ^ v144) + 2084095357 - ((2 * (v143 ^ 0x5D ^ v144)) & 0xFA);
  unsigned int v150 = (((v148 - ((2 * v148) & 0xDC9B74)) << 8) - 296896000) ^ 0xEE4DBA00;
  *(_DWORD *)(*a66 - 0x73FCE2C07DC83DE7) = ((v150 - 675686562 - ((2 * v150) & 0xAF73AE00)) ^ 0xD7B9D75E | v149 ^ 0x7C38C57D)
                                           - 539127609
                                           - ((2
                                             * ((v150 - 675686562 - ((2 * v150) & 0xAF73AE00)) ^ 0xD7B9D75E | v149 ^ 0x7C38C57D)) & 0xBFBB218E);
  return ((uint64_t (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + (int)(v156 ^ 0x37A)))(v156, 682824845, 218302662, v131, 532496134, 585, 3205573259, 128, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           0x2B8000000EELL,
           v152,
           202418848,
           v153,
           a42,
           v154,
           a44,
           v155,
           0xDDDDBFE100000240,
           682824841,
           a48);
}

uint64_t sub_1000CE0A4(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v67 = (((a3 - 218302646) >> 1) & 0x27FBD6FA)
      + ((a1 - 1812075895) ^ ((a3 - 218302646) >> 2));
  int v68 = &STACK[0x8E0];
  unsigned int v69 = *((_DWORD *)&STACK[0x8E0] + (97 * a3 + 299572550) % 0x55Cu);
  uint64_t v70 = *((_DWORD *)&STACK[0x8E0] + (97 * a3 + 299572841) % 0x55Cu) ^ 0xDFDD90C7;
  int v71 = *(unsigned __int8 *)((*((unsigned int *)v68 + (97 * a3 + 299596121) % 0x55Cu) ^ 0xEEFF9F7B26226DEALL)
                           + a65
                           + ((2 * (*((_DWORD *)v68 + (97 * a3 + 299596121) % 0x55Cu) ^ 0xDFDD90C7)) & 0x1F3FFFA5ALL)
                           + 0x11006084060002D3);
  int v72 = *(unsigned __int8 *)((v70 ^ 0x7F67EBFD7FBBDF7FLL) + ((2 * v70) & 0xFF77BEFE) + a65 - 0x7F67EBFD7FBBDF7FLL);
  uint64_t v73 = *((_DWORD *)&STACK[0x8E0] + (97 * a3 + 299596024) % 0x55Cu) ^ 0xDFDD90C7;
  LODWORD(v70) = *(unsigned __int8 *)((v69 ^ 0xF77FDB57E4A26F58)
                                    + ((2 * (v69 ^ 0xDFDD90C7)) & 0x76FFFF3E)
                                    + a65
                                    + 0x88024A8C4800061);
  LODWORD(v73) = *(unsigned __int8 *)((v73 ^ 0x5F7DBEBAEFFDD6EFLL)
                                    + a65
                                    + ((2 * v73) & 0x1DFFBADDELL)
                                    - 0x5F7DBEBAEFFDD6EFLL);
  int v74 = *(&a67 + (457 * a3 - 979545461) % 0x708u) ^ *(unsigned __int8 *)((*((unsigned int *)v68
                                                                                           + (97 * a3 + 299572647)
                                                                                           % 0x55Cu) ^ 0x527CFDF34364EC1)
                                                                                        + a65
                                                                                        + ((2
                                                                                          * (*((_DWORD *)v68
                                                                                             + (97 * a3 + 299572647)
                                                                                             % 0x55Cu) ^ 0xDFDD90C7)) & 0x1D7D7BC0CLL)
                                                                                        - 0x527CFDFEBEBDE06);
  int v75 = *(&a67 + (457 * a3 - 979545004) % 0x708u) ^ 0x5D ^ *(unsigned __int8 *)((*((unsigned int *)v68
                                                                                                  + (97 * a3 + 299572744) % 0x55Cu) ^ 0x1FFBB9F3088B6D2ALL)
                                                                                               + a65
                                                                                               + ((2
                                                                                                 * (*((_DWORD *)v68 + (97 * a3 + 299572744) % 0x55Cu) ^ 0xDFDD90C7)) & 0x1AEADFBDALL)
                                                                                               - 0x1FFBB9F3D756FDEDLL);
  uint64_t v76 = *((_DWORD *)&STACK[0x8E0] + (97 * a3 + 299595927) % 0x55Cu) ^ 0xDFDD90C7;
  int v77 = v72 ^ *(&a67 + (457 * a3 - 979544547) % 0x708u) ^ 0x5D;
  unsigned int v78 = *((_DWORD *)&STACK[0x8E0] + (97 * a3 + 299595830) % 0x55Cu);
  int v79 = *(unsigned __int8 *)((v76 ^ 0x4BFD7FFF3FFFBFDFLL) + ((2 * v76) & 0x7FFF7FBE) + a65 - 0x4BFD7FFF3FFFBFDFLL);
  int v80 = *(unsigned __int8 *)((v78 ^ 0xFFC78F7B212C3B3CLL)
                           + a65
                           + ((2 * (v78 ^ 0xDFDD90C7)) & 0x1FDE357F6)
                           + 0x387084010E5405);
  int v81 = *(&a67 + (457 * a3 - 979545918) % 0x708u) ^ 0x5D ^ v70;
  LODWORD(v70) = (((v77 - ((2 * v77) & 0x72)) << 16) + 188284928) ^ 0xB390000;
  int v82 = (((v75 + 1902407 - ((2 * v75) & 0x5E)) << 8) - 6144) ^ 0x1D072F00;
  int v83 = (v82 + 45597892 - ((2 * v82) & 0x56F8800)) ^ 0x2B7C4C4 | (v70 + 736323431 - ((2 * v70) & 0x57C60000)) ^ 0x2BE36767;
  unsigned int v84 = (v83 - 1132174719 - ((2 * v83) & 0x7908C502)) ^ 0xBC846281 | ((v74 ^ 0x5D) - 1668916062 - ((2 * v74) & 0x144)) ^ 0x9C865CA2;
  unsigned int v85 = (((v84 - ((2 * v84) & 0x15FCBE)) << 8) - 1963041024) ^ 0x8AFE5F00;
  unsigned int v86 = (v85 - 50726303 - ((2 * v85) & 0xF9F3F400)) ^ 0xFCF9FA61 | (v81 - 2001516865 - ((2 * v81) & 0xFFFFFF7F)) ^ 0x88B346BF;
  int v87 = *(&a67 + (457 * a3 - 979434867) % 0x708u);
  int v88 = *(&a67 + (457 * a3 - 979436238) % 0x708u);
  int v89 = *(&a67 + (457 * a3 - 979435781) % 0x708u);
  int v90 = *(&a67 + (457 * a3 - 979435324) % 0x708u);
  *(_DWORD *)(((4 * (v67 + 1827028928)) | ((unint64_t)(v67 + 1827028928 < 0xE42B3D) << 34))
            + *a66
            - 0x73FCE2C081593BABLL) = *((_DWORD *)&STACK[0x8E0] + (97 * (v67 + 1827028928) - 1450443037) % 0x55C) ^ 0x6F20B384 ^ (v86 + 1864414084 - ((2 * v86) & 0xDE416708));
  int v91 = ((((v71 ^ v87 ^ 0x5D) + 6355159 - ((2 * (v71 ^ v87 ^ 0x5D)) & 0x11111111)) << 8) + 569600) ^ 0x61018800;
  int v92 = (v91 - 1726593683 - ((2 * v91) & 0x322C8A00)) ^ 0x9916456D | ((v73 ^ 0x11) + 756263658 - ((2 * v73) & 0x1D4)) ^ 0x2D13AAEA;
  LODWORD(v73) = (v79 ^ v89 ^ 0x5D) - ((2 * (v79 ^ v89 ^ 0x5D)) & 0x5C);
  int v93 = ((v90 ^ 0x4C) - ((2 * (v90 ^ 0x4C)) & 0xCE) + 9063) ^ (v92 - ((2 * v92) & 0x4B22) + 9617);
  unsigned int v94 = (((v93 << 16) ^ 0x6F60000) + 549956630 - ((2 * ((v93 << 16) ^ 0x6F60000)) & 0x418E0000)) ^ 0x20C7AC16 | ((((v73 << 8) - 77451776) ^ 0xFB622E00) + 168610752 - ((2 * (((v73 << 8) - 77451776) ^ 0xFB622E00)) & 0x14199600)) ^ 0xA0CCBC0;
  unsigned int v95 = (v94 + 1941494546 - ((2 * v94) & 0xE771B624)) ^ 0x73B8DB12 | ((v80 ^ v88 ^ 0x5D)
                                                                    + 1480644925
                                                                    - ((2 * (v80 ^ v88 ^ 0x5D)) & 0x7A)) ^ 0x5840D93D;
  *(_DWORD *)(((4 * (v67 - 1903056257)) | ((unint64_t)(v67 - 1903056257 < 0x228F81C8) << 34))
            + *a66
            - 0x73FCE2C1080695D7) = v95 - 539127609 - ((2 * v95) & 0xBFBB218E);
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((436 * ((a3 - 218302642) > 0x1F)) ^ a57)))();
}

uint64_t sub_1000CE878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  HIDWORD(v73) = a7 + 29;
  LODWORD(v73) = a7 - 1781580579;
  int v74 = (v73 >> 5) - ((2 * (v73 >> 5)) & 0xBEDAF632) + 1601010457;
  HIDWORD(v73) = v74 ^ 0x1B19;
  LODWORD(v73) = v74 ^ 0x5F6D6000;
  int v75 = (v73 >> 13) - ((2 * (v73 >> 13)) & 0x5E1A2756) + 789386155;
  uint64_t v76 = (((a7 - 1781581535) >> 2)
       - 2135157891
       - ((a6 + 24649509) & (2 * ((a7 - 1781581535) >> 2)))) ^ 0x80BC137D;
  int v77 = __PAIR64__(v75 ^ 0x13ABu, v75 ^ 0x2F0D0000u) >> 14;
  unsigned int v78 = (2 * v77) & 0xA38A2A48;
  unsigned int v79 = ((194 * v76) & 0x23FBFEEE) + ((97 * v76) ^ 0x91FDFF77) + 1845649801;
  int v80 = v77 - 775613148;
  unsigned int v81 = v79 - (((v79 * (unint64_t)a2) >> 32) >> 10) * v71;
  int v82 = *(unsigned __int8 *)(v69
                           + 457 * a7
                           + 1861541612
                           - ((((457 * a7 + 1861541612) * (unint64_t)v70) >> 32) >> 10)
                           * v68) ^ v66 ^ *(unsigned __int8 *)((*(unsigned int *)(v72
                                                                                + 4
                                                                                * (97 * a7
                                                                                 - 1014624032
                                                                                 - ((((97 * a7 - 1014624032)
                                                                                                  * (unint64_t)a2) >> 32) >> 10)
                                                                                 * v71)) ^ 0xFFDFFFFF2F22EAB8)
                                                             + a65
                                                             + ((2
                                                               * (*(_DWORD *)(v72
                                                                            + 4
                                                                            * (97 * a7
                                                                             - 1014624032
                                                                             - ((((97 * a7 - 1014624032)
                                                                                              * (unint64_t)a2) >> 32) >> 10)
                                                                             * v71)) ^ 0xDFDD90C7)) & 0x1E1FEF4FELL)
                                                             + 0x2000000F008581);
  unsigned int v83 = ((194 * ((v80 - v78) ^ 0xD1C51524)) & 0xB7FD9162) + ((97 * ((v80 - v78) ^ 0xD1C51524)) ^ 0xDBFEC8B1) + 604059471;
  uint64_t v84 = *(_DWORD *)(v72 + 4 * (v83 - (((v83 * (unint64_t)a2) >> 32) >> 10) * v71)) ^ 0xDFDD90C7;
  unsigned int v85 = *(unsigned __int8 *)(v69
                           + 457 * a7
                           + 1861540241
                           - ((((457 * a7 + 1861540241) * (unint64_t)v70) >> 32) >> 10)
                           * v68) ^ a8;
  int v86 = *(unsigned __int8 *)(v69
                           + 457 * a7
                           + 1861541155
                           - ((((457 * a7 + 1861541155) * (unint64_t)v70) >> 32) >> 10)
                           * v68) ^ v66 ^ *(unsigned __int8 *)((*(unsigned int *)(v72
                                                                                + 4
                                                                                * (97 * a7
                                                                                 - 1014624129
                                                                                 - ((((97 * a7 - 1014624129)
                                                                                                  * (unint64_t)a2) >> 32) >> 10)
                                                                                 * v71)) ^ 0x3FB3E33D322A6F78)
                                                             + a65
                                                             + ((2
                                                               * (*(_DWORD *)(v72
                                                                            + 4
                                                                            * (97 * a7
                                                                             - 1014624129
                                                                             - ((((97 * a7 - 1014624129)
                                                                                              * (unint64_t)a2) >> 32) >> 10)
                                                                             * v71)) ^ 0xDFDD90C7)) & 0x1DBEFFF7ELL)
                                                             - 0x3FB3E33DEDF7FFBFLL);
  unsigned int v87 = (((v82 - ((2 * v82) & 0x99999999)) << 16) + 214695936) ^ 0xCCC0000;
  unsigned int v88 = (((v86 - ((2 * v86) & 0x42)) << 8) - 1443028736) ^ 0xA9FD2100;
  LODWORD(v84) = *(unsigned __int8 *)((v84 ^ 0x7A737D5E7DB3CFEFLL)
                                    + ((2 * v84) & 0xFB679FDE)
                                    + a65
                                    - 0x7A737D5E7DB3CFEFLL) ^ v67;
  unsigned int v89 = (v88 - 179460259 - ((2 * v88) & 0x6A9B4E00)) ^ 0xF54DA75D | (v87 - 2053040257 - ((2 * v87) & 0xB420000)) ^ 0x85A1177F;
  uint64_t v90 = v84 - ((2 * v84) & 0xB0) + 1952769368;
  int v91 = *(unsigned __int8 *)(v69
                           + 457 * a7
                           + 1861540698
                           - ((((457 * a7 + 1861540698) * (unint64_t)v70) >> 32) >> 10)
                           * v68) ^ v66 ^ *(unsigned __int8 *)((*(unsigned int *)(v72
                                                                                + 4
                                                                                * (97 * a7
                                                                                 - 1014624226
                                                                                 - ((((97 * a7 - 1014624226)
                                                                                                  * (unint64_t)a2) >> 32) >> 10)
                                                                                 * v71)) ^ 0x9B5F7DB720024F38)
                                                             + a65
                                                             + ((2
                                                               * (*(_DWORD *)(v72
                                                                            + 4
                                                                            * (97 * a7
                                                                             - 1014624226
                                                                             - ((((97 * a7 - 1014624226)
                                                                                              * (unint64_t)a2) >> 32) >> 10)
                                                                             * v71)) ^ 0xDFDD90C7)) & 0x1FFBFBFFELL)
                                                             + 0x64A0824800202001);
  uint64_t v92 = (2 * v91) & 0x174;
  int v93 = (v89 - 77142376 - ((2 * v89) & 0xF6CDCD30)) ^ 0xFB66E698 | (v91 + 1664138938 - v92) ^ 0x6330BEBA;
  unsigned int v94 = (((v93 - ((2 * v93) & 0x1167A0)) << 8) - 2001481728) ^ 0x88B3D000;
  unsigned int v95 = (v94 - 794607514 - ((2 * v94) & 0xA1468000)) ^ 0xD0A34066 | (v85 + 1075872557 - ((2 * v85) & 0x5A)) ^ 0x4020832D;
  *(_DWORD *)(*a66
            + 4
            * (((((a7 - 1781581535) >> 2)
               - 2135157891
               - ((a6 + 24649509) & (2 * ((a7 - 1781581535) >> 2)))) ^ 0x1FA345EF79E18DA2)
             + ((2 * v76) & 0x1F2BB3DBELL))
            + 0xD76057F9CC0F5CDLL) = v90 ^ *(_DWORD *)(v72 + 4 * v81) ^ 0xB0A54012 ^ (v95
                                                                                      - ((2 * v95) & 0x89834A94)
                                                                                      - 993942198);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + (int)(a6 | (32 * ((a7 - 1781581531) < 0x60)))))(2513385761, a2, 0x1F2BB3DBELL, v92, v90, a6, (a7 + 4), a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1000CED80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v68 = ((2 * (((a57 ^ 0xC55C1CDF) + v67) >> 2)) & 0x39FFBC9E) + ((((a57 ^ 0xC55C1CDF) + v67) >> 2) ^ 0x9CFFDE4F);
  unsigned int v69 = (97 * v67 - 941073636) % 0x55Cu;
  unsigned int v70 = &STACK[0x8E0];
  unsigned int v71 = *((_DWORD *)&STACK[0x8E0] + (97 * v67 - 941073733) % 0x55Cu);
  unsigned int v72 = *((_DWORD *)&STACK[0x8E0] + (97 * v67 - 941073442) % 0x55Cu);
  uint64_t v73 = *((_DWORD *)&STACK[0x8E0] + (97 * v67 - 941090514) % 0x55Cu) ^ 0xDFDD90C7;
  int v74 = *(unsigned __int8 *)((v73 ^ 0xCFFFF2FEFDEFC7F7) + a65 + ((2 * v73) & 0x1FBDF8FEELL) + 0x30000D0102103809);
  uint64_t v75 = *((_DWORD *)&STACK[0x8E0] + (97 * v67 - 941073539) % 0x55Cu) ^ 0xDFDD90C7;
  int v76 = *(unsigned __int8 *)((v71 ^ 0x57B7B7CCA2A06A6CLL)
                           + ((2 * (v71 ^ 0xDFDD90C7)) & 0xFAFBF556)
                           + a65
                           - 0x57B7B7CC7D7DFAABLL);
  uint64_t v77 = *((_DWORD *)&STACK[0x8E0] + v69) ^ 0xDFDD90C7;
  uint64_t v78 = *((unsigned int *)&STACK[0x8E0] + v69) ^ 0x7EFF6DFD09215A48;
  int v79 = *(unsigned __int8 *)((v75 ^ 0xBF6F6F2A847CB9E5) + a65 + ((2 * v75) & 0x108F973CALL) + 0x409090D57B83461BLL);
  LODWORD(v77) = *(unsigned __int8 *)(v78 + a65 + ((2 * v77) & 0x1ADF9951ELL) - 0x7EFF6DFDD6FCCA8FLL);
  int v80 = *(unsigned __int8 *)((v72 ^ 0xFFDBB97FA84A0A3BLL)
                           + ((2 * (v72 ^ 0xDFDD90C7)) & 0xEF2F35F8)
                           + a65
                           + 0x24468088686504);
  LODWORD(v73) = *(unsigned __int8 *)((*((unsigned int *)v70 + (97 * v67 - 941090611) % 0x55Cu) ^ 0xADEC6F6F2E626738)
                                    + a65
                                    + ((2 * (*((_DWORD *)v70 + (97 * v67 - 941090611) % 0x55Cu) ^ 0xDFDD90C7)) & 0x1E37FEFFELL)
                                    + 0x521390900E400801) ^ *(&a67 + (457 * v67 + 1366700321)
                                                                                      % 0x708u) ^ 0x5D;
  int v81 = v74 ^ *(&a67 + (457 * v67 + 1366700778) % 0x708u) ^ 0x5D;
  LODWORD(v78) = *(&a67 + (457 * v67 + 1366699864) % 0x708u) ^ 0x5D ^ *(unsigned __int8 *)((*((unsigned int *)v70 + (97 * v67 - 941090708) % 0x55Cu) ^ 0x5DFBF5DD01646C3ELL) + a65 + ((2 * (*((_DWORD *)v70 + (97 * v67 - 941090708) % 0x55Cu) ^ 0xDFDD90C7)) & 0x1BD73F9F2) - 0x5DFBF5DDDEB9FCF9);
  unsigned int v82 = (((v81 - ((2 * v81) & 0xFFFFFFF7)) << 16) + 1023082496) ^ 0x3CFB0000;
  LODWORD(v73) = (((v73 - ((2 * v73) & 0x2C)) << 8) + 1762399744) ^ 0x690C1600;
  LODWORD(v73) = (v73 + 1394326195 - ((2 * v73) & 0x26377400)) ^ 0x531BBAB3;
  int v83 = (v82 + 1469713211 - ((2 * v82) & 0x2F340000)) ^ 0x579A0B3B | v73;
  LODWORD(v73) = v73 | (v78 - 1277821936 - ((2 * v78) & 0x20)) ^ 0xB3D5FC10;
  uint64_t v84 = *((_DWORD *)&STACK[0x8E0] + (97 * v67 - 941090805) % 0x55Cu) ^ 0xDFDD90C7;
  HIDWORD(v85) = (v73 - ((2 * v73) & 0x2F4) + 2426) ^ 0x97A;
  LODWORD(v85) = (v83 + 1731289088 - ((2 * v83) & 0x4E62D7F8) + 3068) ^ 0x67316000;
  LODWORD(v78) = *(&a67 + (457 * v67 + 1366699407) % 0x708u) ^ 0x5D ^ *(unsigned __int8 *)((v84 ^ 0x7F7D7BFCC9EBAFBELL) + a65 + ((2 * v84) & 0x193D75F7CLL) - 0x7F7D7BFCC9EBAFBELL);
  int v86 = (v85 >> 12) - ((2 * (v85 >> 12)) & 0x97550BD0) + 1269466600;
  HIDWORD(v85) = v86 ^ 0xA85E8;
  LODWORD(v85) = v86 ^ 0x4BA00000;
  unsigned int v87 = ((((v85 >> 20) - ((2 * (v85 >> 20)) & 0x4EC4EC)) << 8) + 660764160) ^ 0x27627600;
  int v88 = (v87 - 744567601 + (~(2 * v87) | 0x58C267FF) + 1) ^ 0xD39ECCCF | (v78 + 618497384 - ((2 * v78) & 0xD0)) ^ 0x24DD8568;
  LODWORD(v78) = *(&a67 + (457 * v67 + 1366781210) % 0x708u);
  LODWORD(v84) = *(&a67 + (457 * v67 + 1366780753) % 0x708u);
  uint64_t v89 = *(&a67 + (457 * v67 + 1366779839) % 0x708u);
  uint64_t v90 = *(&a67 + (457 * v67 + 1366780296) % 0x708u);
  *(_DWORD *)(((4 * (v68 + 2147319223)) | ((unint64_t)(v68 + 2147319223 < 0x1CFD5C06) << 34))
            + *a66
            - 0x73FCE2C0F1BDFECFLL) = *((_DWORD *)&STACK[0x8E0] + (97 * (v68 + 2147319223) + 67142330) % 0x55C) ^ 0x9DB1F96A ^ (v88 - 1649280662 - ((2 * v88) & 0x3B63F2D4));
  LODWORD(v73) = ((((v78 ^ 0x5D ^ v80) - ((2 * (v78 ^ 0x5D ^ v80)) & 0x5A)) << 16)
                + 1311571968) ^ 0x4E2D0000;
  unsigned int v91 = ((((v84 ^ 0x5D ^ v79) - ((2 * (v84 ^ 0x5D ^ v79)) & 0x1A2)) << 8) + 982896896) ^ 0x3A95D100;
  int v92 = (v91 - 964721240 + (~(2 * v91) | 0xF300F5FF) + 1) ^ 0xC67F85A8 | (v73 - 1847510556 - ((2 * v73) & 0x23C20000)) ^ 0x91E139E4;
  int v93 = (v92 - 587210480 - ((2 * v92) & 0x39FFC220)) ^ 0xDCFFE110 | ((v90 ^ 0x4C)
                                                                   - 367492036
                                                                   + (~(2 * (v90 ^ 0x4C)) | 0xFFFFFF87)
                                                                   + 1) ^ 0xEA18843C;
  int v94 = (v93 - ((2 * v93) & 0x716EB0) + 3716952) ^ ((v77 ^ 0x11)
                                                  + 14767921
                                                  + (~(2 * (v77 ^ 0x11)) | 0xFFFFFF9F));
  int v95 = (((v94 << 8) ^ 0xD9E06800) + 1517120739 - ((2 * ((v94 << 8) ^ 0xD9E06800)) & 0xB4DAD800)) ^ 0x5A6D6CE3 | ((v76 ^ v89 ^ 0x5D) + 1450312927 - ((2 * (v76 ^ v89 ^ 0x5D)) & 0xFFFFFFBF)) ^ 0x567204DF;
  *(_DWORD *)(((4 * (v68 - 1131465656)) | ((unint64_t)(v68 - 1131465656 < 0x598EFE73) << 34))
            + *a66
            - 0x73FCE2C1E4048883) = v95 - 539127609 - ((2 * v95) & 0xBFBB218E);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + ((2265 * ((v67 - 983819213) < 0xB0)) ^ a57)))(3707756816, 3330246056, 93, v89, 2447456740, 3927475260, v90, a66, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1000CF5CC@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,void *a60)
{
  unsigned int v69 = (((a2 - 834708178) >> 1) & 0x7FEFDFDE) + (((a2 - 834708178) >> 2) ^ 0x7FF7EFEF);
  int v70 = *(unsigned __int8 *)(v60
                           + 457 * a2
                           + 790968408
                           - ((((457 * a2 + 790968408) * (unint64_t)v63) >> 32) >> 10)
                           * v64) ^ a1 ^ *(unsigned __int8 *)((*(unsigned int *)(v66
                                                                               + 4
                                                                               * (a2 * v68
                                                                                + 637778284
                                                                                - ((((a2 * v68 + 637778284)
                                                                                                 * (unint64_t)v61) >> 32) >> 10)
                                                                                * v62)) ^ 0xFDBFFFD531306428)
                                                            + a59
                                                            + ((2
                                                              * (*(_DWORD *)(v66
                                                                           + 4
                                                                           * (a2 * v68
                                                                            + 637778284
                                                                            - ((((a2 * v68 + 637778284)
                                                                                             * (unint64_t)v61) >> 32) >> 10)
                                                                            * v62)) ^ 0xDFDD90C7)) & 0x1DDDBE9DELL)
                                                            + 0x240002A11120B11);
  int v71 = *(unsigned __int8 *)(v60
                           + 457 * a2
                           + 790968865
                           - ((((457 * a2 + 790968865) * (unint64_t)v63) >> 32) >> 10)
                           * v64) ^ a1 ^ *(unsigned __int8 *)((*(unsigned int *)(v66
                                                                               + 4
                                                                               * (a2 * v68
                                                                                + 637778381
                                                                                - ((((a2 * v68 + 637778381)
                                                                                                 * (unint64_t)v61) >> 32) >> 10)
                                                                                * v62)) ^ 0x6BEDFAE9251A6FB8)
                                                            + a59
                                                            + ((2
                                                              * (*(_DWORD *)(v66
                                                                           + 4
                                                                           * (a2 * v68
                                                                            + 637778381
                                                                            - ((((a2 * v68 + 637778381)
                                                                                             * (unint64_t)v61) >> 32) >> 10)
                                                                            * v62)) ^ 0xDFDD90C7)) & 0x1F58FFEFELL)
                                                            - 0x6BEDFAE9FAC7FF7FLL);
  int v72 = *(unsigned __int8 *)((*(unsigned int *)(v66
                                              + 4
                                              * (a2 * v68
                                               + 637778187
                                               - ((((a2 * v68 + 637778187)
                                                                * (unint64_t)v61) >> 32) >> 10)
                                               * v62)) ^ 0x7B4E6FDF043BEF15)
                           + a59
                           + ((2
                             * (*(_DWORD *)(v66
                                          + 4
                                          * (a2 * v68
                                           + 637778187
                                           - ((((a2 * v68 + 637778187)
                                                            * (unint64_t)v61) >> 32) >> 10)
                                           * v62)) ^ 0xDFDD90C7)) & 0x1B7CCFFA4)
                           - 0x7B4E6FDFDBE67FD2);
  int v73 = *(unsigned __int8 *)(v60
                           + 457 * a2
                           + 790967951
                           - ((((457 * a2 + 790967951) * (unint64_t)v63) >> 32) >> 10)
                           * v64);
  int v74 = (((v71 - ((2 * v71) & 0x1D4)) << 16) + 1391067136) ^ 0x52EA0000;
  unsigned int v75 = (((v70 - ((2 * v70) & 0x19A)) << 8) - 1035350784) ^ 0xC249CD00;
  unsigned int v76 = (v74 + 584656959 - ((2 * v74) & 0x45B20000)) ^ 0x22D9283F | (v75 - 390378020 - ((2 * v75) & 0x51769A00)) ^ 0xE8BB4DDC;
  int v77 = (v76 + 42230556 - ((2 * v76) & 0x508C638)) ^ 0x284631C | ((v73 ^ a1 ^ v72)
                                                                + 1183141481
                                                                - ((2 * (v73 ^ a1 ^ v72)) & 0xD2)) ^ 0x46854E69;
  int v78 = *(unsigned __int8 *)(v60
                           + 457 * a2
                           + 790967494
                           - ((((457 * a2 + 790967494) * (unint64_t)v63) >> 32) >> 10)
                           * v64) ^ a1 ^ *(unsigned __int8 *)((*(unsigned int *)(v66
                                                                               + 4
                                                                               * (a2 * v68
                                                                                + 637778090
                                                                                - ((((a2 * v68 + 637778090)
                                                                                                 * (unint64_t)v61) >> 32) >> 10)
                                                                                * v62)) ^ 0x5235FDE52A62C674)
                                                            + a59
                                                            + ((2
                                                              * (*(_DWORD *)(v66
                                                                           + 4
                                                                           * (a2 * v68
                                                                            + 637778090
                                                                            - ((((a2 * v68 + 637778090)
                                                                                             * (unint64_t)v61) >> 32) >> 10)
                                                                            * v62)) ^ 0xDFDD90C7)) & 0x1EB7EAD66)
                                                            - 0x5235FDE5F5BF56B3);
  unsigned int v79 = (((v77 - ((2 * v77) & 0xBC325C)) << 8) - 568775168) ^ 0xDE192E00;
  unsigned int v80 = (v79 - 1515059021 - ((2 * v79) & 0x4B641000)) ^ 0xA5B208B3 | (v78 - 1818977076 - ((2 * v78) & 0x99999999)) ^ 0x93949CCC;
  unsigned int v81 = (v80 - ((2 * v80) & 0xE4D4D0A6) - 227907501) ^ *(_DWORD *)(v66
                                                                 + 4
                                                                 * (v69 * v68
                                                                  - 2096207799
                                                                  - ((((v69 * v68 - 2096207799)
                                                                                   * (unint64_t)v61) >> 32) >> 10)
                                                                  * v62));
  HIDWORD(v82) = v81 ^ 0x94;
  LODWORD(v82) = v81 ^ 0x2DB7F800;
  int v83 = (v82 >> 11) - ((2 * (v82 >> 11)) & 0x8C1EA08A) + 1175408709;
  HIDWORD(v82) = v83 ^ 0x60F5045;
  LODWORD(v82) = v83 ^ 0x40000000;
  int v84 = (v82 >> 29) - ((2 * (v82 >> 29)) & 0x7CBC7964) - 1101120334;
  HIDWORD(v82) = v84 ^ 0x5E3CB2;
  LODWORD(v82) = v84 ^ 0xBE000000;
  *(_DWORD *)(((4 * (v69 - 538162924)) | ((unint64_t)(v69 - 538162924 < 0x5FE43907) << 34))
            + *a60
            - 0x73FCE2C1FD5972D3) = (v82 >> 24) - 539127609 - ((2 * (v82 >> 24)) & 0xBFBB218E);
  return (*(uint64_t (**)(void))(v65 + 8 * ((29 * ((a2 - 834708174) < 0xE0)) ^ v67)))();
}

uint64_t sub_1000CFA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v71 = ((v70 ^ 0x90C022A3) + (a49 + 104) - ((2 * (a49 + 104)) & 0x9C)) ^ 0x90C0224E;
  int v72 = *(&a68 + (((914 * v71) & 0xBF17E) + ((457 * v71) ^ 0x9F7DF8BF) + 1619397505) % 0x708);
  int v73 = *(_DWORD *)(v69 + 4
                        * ((1361 * (((2 * (v72 ^ 0x86)) & 0xFFFFFF1F) + (v72 ^ 0xFFB7DF19)) + 2143124797) % 0x12E0));
  unsigned int v74 = (2 * ((v73 ^ 0x19DD941) * (v73 ^ 0x19DD941) - ((2 * (v73 ^ 0x19DD941) * (v73 ^ 0x19DD941)) & 0x7A6ABD7E))
       - 93667970) ^ 0xFA6ABD7E;
  unsigned int v75 = (v74 - ((2 * v74) & 0x328065F0) - 1723845895) ^ v73;
  int v76 = HIBYTE(v75) ^ 0x4B;
  int v77 = BYTE2(v75) ^ 0xA2;
  int v78 = ((2 * (v75 ^ 0x75)) & 0x1AE) - (v75 ^ 0x75) - 1565688024;
  unsigned int v79 = (1743714629 - (BYTE1(v75) ^ 0xB7 | 0x67EEF945) + (BYTE1(v75) ^ 0xB7 | 0x981106BA)) ^ 0x1C1106BF;
  unsigned int v80 = ((914 * v77) & 0x14BFA) + ((457 * v77) ^ 0x6FFEA5FD) - 1878813373;
  int v81 = ((v78 & 0x15015 ^ 0x3D00011) + (v78 & 0xAFEA ^ 0x4202723) - 1) ^ 0x7F15875;
  uint64_t v82 = (((914 * v81) & 0xEBDED85E) + ((457 * v81) ^ 0x75EF6C2F) - 1978478831) % 0x708;
  unsigned int v83 = (v79 - ((2 * v79) & 0xD9B353B6) + 1826204123) ^ 0xE8D9A9C3;
  int v84 = *(&a68 + (((914 * v76) & 0x1BF6E) + ((457 * v76) ^ 0xCFDADFB7) + 807883905) % 0x708) ^ 0x4C;
  int v85 = *(&a68 + v80 % 0x708) ^ 0x4C;
  unsigned int v86 = (((v84 - ((2 * v84) & 0x99999999)) << 16) + 1321992192) ^ 0x4ECC0000;
  unsigned int v87 = (((v85 - ((2 * v85) & 0xFFFFFFEF)) << 8) - 170461440) ^ 0xF5D6F700;
  unsigned int v88 = (v87 - 1384870161 - ((2 * v87) & 0x5AE91C00)) ^ 0xAD748EEF | (v86 + 538835435 - ((2 * v86) & 0x403A0000)) ^ 0x201DF9EB;
  int v89 = *(&a68 + (((914 * v83) & 0xF5DE997E) + ((457 * v83) ^ 0x7AEF4CBF) - 2062356863) % 0x708);
  unsigned int v90 = (v88 - 333420215 - ((2 * v88) & 0x5840D292)) ^ 0xEC206949 | ((v89 ^ 0x4C) - 1588985342 - ((2 * v89) & 4)) ^ 0xA14A0202;
  int v91 = (((v90 + 124926 - ((2 * v90) & 0x3EE74)) << 8) + 998400) ^ 0x1F73A00;
  int v92 = (v91 + 256250697 - ((2 * v91) & 0x1E8C2600)) ^ 0xF461349 | ((*(&a68 + v82) ^ 0x4C)
                                                                  + 1901576646
                                                                  - ((2
                                                                    * (*(&a68 + v82) ^ 0x4C)) & 0x18C)) ^ 0x7157C1C6;
  unsigned int v93 = (v92 - 37447610 - ((2 * v92) & 0xFB89308C)) ^ a55;
  *((_DWORD *)&STACK[0x8E0] + (97 * a49 - 1907470744) % 0x55Cu) = (v93 ^ 0xFDC49846)
                                                                - 539127609
                                                                - 2 * ((v93 ^ 0xFDC49846) & 0x5FDD90CF ^ v93 & 8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 8 * ((730 * (a49 == 1879341463)) ^ v70)))(538835435, 4125006206, v82, 2062503103, 3957250142, 1743714629, (a49 + 1), a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000CFF40@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * v61 - 0x73FCE2C239101DA3) = *(_DWORD *)(v60
                                                                 + 4
                                                                 * (((int)v61 * a1 + 41038193)
                                                                  % (v59 + 931)));
  return (*(uint64_t (**)(void))(v62 + 8 * ((122 * (v61 == 1859253742)) ^ v59)))();
}

uint64_t sub_1000CFFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v71 = ((((v68 + 46) & 0x1E ^ 9) + a49)
       + 808719906
       - ((2 * (((v68 - 236456402) & 0xE180C1E ^ 0x409) + a49)) & 0x44)) ^ 0x30341622;
  int v72 = *(&a68 + (((914 * v71) & 0x7FFFE) - 2126512128 + ((457 * v71) ^ 0x7EC3FFFFu) + 1089) % 0x708);
  unsigned int v73 = ((v72 ^ 0x4C) - ((2 * (v72 ^ 0x4C)) & 0x84) + 1444787522) ^ *(_DWORD *)(v70
                                                                              + 4
                                                                              * ((1361
                                                                                * (2
                                                                                 * ((v72 ^ 0x38) & 0x3F)
                                                                                 + (v72 ^ 0x6EDB7B87u))
                                                                                - 1552320721)
                                                                               % 0x12E0));
  unsigned int v74 = (((2 * (BYTE1(v73) ^ 0x8D0100C1)) | 0xCE151D38) - (BYTE1(v73) ^ 0x8D0100C1) - 1728745116) ^ 0xEA0B8EDC;
  unsigned int v75 = ((914 * (HIBYTE(v73) ^ 0x19)) & 0x3BDFE) + ((457 * (HIBYTE(v73) ^ 0x19)) ^ 0xBBEBDEFF) + 1142316097;
  int v76 = BYTE2(v73) ^ 0x21;
  int v77 = (((2 * (v73 ^ 0x5C)) & 0x1A4) - (v73 ^ 0x5C) + 395112493) ^ 0x1ECE220F;
  unsigned int v78 = (v77 - ((2 * v77) & 0x8416BE) - 495252641) ^ 0xEB39D9DE;
  unsigned int v79 = ((914 * v78) & 0xCBABEEEE) + ((457 * v78) ^ 0x65D5F777);
  unsigned int v80 = (((914 * v74) & 0xFF27F176) + ((457 * v74) ^ 0xFF93F8BB) + 7225989) % 0x708;
  uint64_t v81 = (97 * a49 + 2061230201) % 0x55C;
  int v82 = *(&a68 + v75 % 0x708) ^ 0x4C;
  int v83 = *(&a68 + (((914 * v76) & 0x2ED54) + ((457 * v76) ^ 0xD5FF76AA) + 704824470) % 0x708) ^ 0x4C;
  int v84 = (((v82 - ((2 * v82) & 0x130)) << 16) + 1217921024) ^ 0x48980000;
  int v85 = (((v83 - 2 * (v83 & 7)) << 8) + 735053568) ^ 0x2BD00700;
  unsigned int v86 = (v85 - 139158570 - ((2 * v85) & 0x6F693600)) ^ 0xF7B49BD6 | (v84 - 1084725707 - ((2 * v84) & 0x7EB00000)) ^ 0xBF586635;
  int v87 = *(&a68 + v80) ^ 0x4C;
  unsigned int v88 = (v86 - 163325038 - ((2 * v86) & 0xEC87B724)) ^ 0xF643DB92 | (v87 - 739702299 - ((2 * v87) & 0x1CA)) ^ 0xD3E909E5;
  unsigned int v89 = (((v88 - ((2 * v88) & 0xFE6FFE)) << 8) - 13107456) ^ 0xFF37FF00;
  int v90 = (v89 + 980256466 - ((2 * v89) & 0x74DB0C00)) ^ 0x3A6D86D2 | *(&a68 + (v79 - 1708375095) % 0x708) ^ 0x4C;
  *((_DWORD *)&STACK[0x8E0] + v81) = a60 ^ 0x72721688 ^ (v90 - ((2 * v90) & 0xAF30B892) - 677880759);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * ((2527 * (a49 == 332974566)) ^ v68)))(4131642258, v81, 3555264997, 3210241589, 4280807798, a49, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000D03FC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * ((v59 ^ 0x3FFFFFFF9195CF72) + v61) - 0x73FCE2C07DC88EB7) = *(_DWORD *)(a1
                                                                                                  + 4 * (v61 * v62 + 700181614 - ((((v61 * v62 + 700181614) * (unint64_t)v63) >> 32) >> 10) * v60));
  return (*(uint64_t (**)(void))(v64 + 8 * (((v61 == 1852458449) | ((v61 == 1852458449) << 6)) ^ v59)))();
}

uint64_t sub_1000D0480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,unsigned int a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v72 = (((a50 + 71) & (v69 - 850)) + 2143405542 - ((2 * (a50 + 71)) & 0x1CC)) ^ 0x7FC1C5E6;
  unsigned int v73 = (((914 * v72) & 0x1F9DD6) + ((457 * v72) ^ 0xFD8FCEEB) + 41170261) % 0x708;
  unsigned int v74 = &a69;
  unsigned int v75 = *(_DWORD *)(v71
                  + 4
                  * ((1361
                    * (((2 * (v74[v73] ^ 0x33333333)) & 0xAE)
                     + (v74[v73] ^ 0x4FEF9F6Cu))
                    + 121285605)
                   % 0x12E0));
  unsigned int v76 = ((32 * ((BYTE2(v75) ^ 0x95) >> 4)) | 0xE292320F) - (BYTE2(v75) ^ 0x95);
  unsigned int v77 = ((v76 & 0xE00033DA ^ 0x90C01D2) + (v76 ^ 0xF0A33E0D) - ((v76 ^ 0xF0A33E0D) & 0x10010BDA)) ^ 0xEB3C37F6;
  __int16 v78 = ((2 * (v75 ^ 0x25)) & 0x19C) - (v75 ^ 0x25) - 30671;
  int v79 = ((v78 & 0x5AC ^ 0x305018D) + (v78 & 0xA53) - 1) ^ 0x30509BC;
  int v80 = ((BYTE1(v75) ^ 0xF2) + ((v75 >> 8) & 0xD1 ^ 0x201) - ((BYTE1(v75) ^ 0xF2) & 0xD1)) ^ 0x27F;
  int v81 = *(&a69
                         + (((914 * (HIBYTE(v75) ^ 0xCA)) & 0x2FFF0)
                          + ((457 * (HIBYTE(v75) ^ 0xCA)) ^ 0xFF7F7FF8)
                          + 8567624)
                         % 0x708);
  unsigned int v82 = (((914 * v79) & 0xAF3C4FDE) + ((457 * v79) ^ 0x579E27EF) - 1469836463) % 0x708;
  int v83 = *(&a69 + (((914 * v80) & 0xFF17E) + ((457 * v80) ^ 0x7E1FF8BFu) - 2115878271) % 0x708);
  int v84 = *(&a69 + (((914 * v77) & 0xDF2FB6FE) + ((457 * v77) ^ 0x6F97DB7F) - 1872076863) % 0x708);
  int v85 = (((v81 ^ 0x4C) - ((2 * (v81 ^ 0x4C)) & 0x84)) << 16) - 532545536;
  int v86 = ((((v84 ^ 0x4C) + 3816174 - ((2 * (v84 ^ 0x4C)) & 0x1C4)) << 8) - 3072) ^ 0x3A3AE200;
  unsigned int v87 = (v86 + 1482910374 - ((2 * v86) & 0x30C6D400)) ^ 0x58636AA6 | ((v85 ^ 0xE0420000)
                                                                    + 370762824
                                                                    - ((2 * v85) & 0x2C320000)) ^ 0x16196448;
  unsigned int v88 = (v87 - 539035008 - ((2 * v87) & 0xBFBDF500)) ^ 0xDFDEFA80 | ((v83 ^ 0x4C)
                                                                   - 1678439711
                                                                   - ((2 * (v83 ^ 0x4C)) & 0xFFFFFFC3)) ^ 0x9BF50AE1;
  int v89 = (((v88 + 428786 - ((2 * v88) & 0xD2B9A)) << 8) + 711424) ^ 0x695CD00;
  int v90 = (v89 + 669546707 - ((2 * v89) & 0x4FD0F000)) ^ 0x27E878D3 | ((v74[v82] ^ 0x4C)
                                                                   + 1057884239
                                                                   - ((2 * (v74[v82] ^ 0x4C)) & 0x9E)) ^ 0x3F0E084F;
  *((_DWORD *)&STACK[0x8E0] + (97 * a50 - 1683758361) % 0x55C) = a59 ^ 0xB7E1204A ^ (v90
                                                                                   - ((2 * v90) & 0xA430EBA0)
                                                                                   + 1377334736);
  int v91 = *(uint64_t (**)(void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 8 * ((749 * (a50 == 1168586936)) ^ v69));
  return v91(v91, 2616527585, 370762824, a50, 50659725, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1000D0938@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * v63 - 0x73FCE2C0B8326A73) = *(_DWORD *)(v62
                                                                 + 4
                                                                 * (v63 * v59
                                                                  + 2004061629
                                                                  - ((((v63 * v59
                                                                                                  + 2004061629)
                                                                                   * (unint64_t)v60) >> 32) >> 10)
                                                                  * v61));
  return (*(uint64_t (**)(void))(v64 + 8 * ((v63 != 245007906) | (16 * (v63 != 245007906)) | a1)))();
}

uint64_t sub_1000D09A0@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  int v63 = (((a1 + 604885657) & 0x5BF22AFB ^ 0x534DE61) + (a43 + 113) - ((2 * (a43 + 113)) & 0x184)) ^ 0x534DCC2;
  int v64 = *(&a61 + (((914 * v63) & 0x1D0F6E) + ((457 * v63) ^ 0x7DDE87B7u) - 2111472503) % 0x708) ^ 0x3C;
  int v65 = *(_DWORD *)(v62 + 4 * ((1361 * (((2 * v64) & 0x1B6) + (v64 ^ 0xFEBBDDDB)) - 1149426451) % 0x12E0));
  HIDWORD(v66) = v65 ^ 0xEEAA;
  LODWORD(v66) = v65 ^ 0x3BD50000;
  int v67 = (v66 >> 16) - ((2 * (v66 >> 16)) & 0x693B2172) + 882741433;
  int v68 = ((16 * v67) & 0x3B897AE0 ^ 0x9890A80) + ((8 * v67) ^ 0x392838BE);
  unsigned int v69 = (v68 - ((2 * v68 + 1244552612) & 0x519AA440) - 840662795) ^ v67;
  unsigned int v70 = ((2 * HIBYTE(v69)) ^ 0x1FA) + (HIBYTE(v69) ^ 0xD7F9D702);
  unsigned int v71 = ((BYTE2(v69) ^ 0xF2) - ((2 * (BYTE2(v69) ^ 0xF2)) & 0x1A8) - 223778092) ^ 0xD2286AD5;
  int v72 = ((2 * (v69 ^ 0x20026AFC)) & 0xC4EC) - (v69 ^ 0x20026AFC) + 848988297;
  unsigned int v73 = (-1068364054 - (v71 | 0xC0520EEA) + (v71 | 0x3FADF115)) ^ 0x1F2CF1B7;
  unsigned int v74 = (v70 - ((2 * v70 + 1342984834) & 0xA5D31920) + 2062530001) ^ 0x52E98C90;
  unsigned int v75 = (335265256 - (BYTE1(v69) ^ 0x234032A9 | 0x13FBBDE8) + (BYTE1(v69) ^ 0x234032A9 | 0xEC044217)) ^ 0xCF447017;
  unsigned int v76 = (((914 * v75) & 0xFFDFB7CE) + ((457 * v75) ^ 0xFFEFDBE7) + 1204057) % 0x708;
  int v77 = *(&a61 + (((914 * v73) & 0x7FBD45D4) + ((457 * v73) ^ 0xBFDEA2EA) + 1076074582) % 0x708) ^ 0x4C;
  int v78 = *(&a61 + (((914 * v74) & 0x649AD778) + ((457 * v74) ^ 0xB24D6BBC) + 1303548996) % 0x708) ^ 0x4C;
  unsigned int v79 = (((v78 - ((2 * v78) & 0xFFFFFF8F)) << 16) + 566689792) ^ 0x21C70000;
  int v80 = (((v77 - ((2 * v77) & 0x1CC)) << 8) + 1162667520) ^ 0x454CE600;
  int v81 = *(&a61 + v76);
  unsigned int v82 = (v79 - 571902340 - ((2 * v79) & 0x3BD20000)) ^ 0xDDE9767C | (v80 + 2109369684 - ((2 * v80) & 0x7B74DA00)) ^ 0x7DBA6D54;
  uint64_t v83 = (2 * v81) & 0x126;
  int v84 = (v82 - 1450687301 - ((2 * v82) & 0x53108976)) ^ 0xA98844BB | ((v81 ^ 0x4C) + 14699667 - v83) ^ 0xE04C93;
  int v85 = *(&a61
                         + (((914 * (v72 ^ 0x1298E2A9)) & 0x3E9FFFBE)
                          + ((457 * (v72 ^ 0x1298E2A9)) ^ 0x7F4FFFDFu)
                          - 2135803039)
                         % 0x708);
  unsigned int v86 = (((v84 - ((2 * v84) & 0x5D29B4)) << 8) - 1365976576) ^ 0xAE94DA00;
  unsigned int v87 = (v86 - 909407465 - ((2 * v86) & 0x93971600)) ^ 0xC9CB8B17 | ((v85 ^ 0x4C)
                                                                   - 821556287
                                                                   - ((2 * (v85 ^ 0x4C)) & 0xFFFFFF83)) ^ 0xCF080BC1;
  *((_DWORD *)&STACK[0x8E0] + (97 * a43 + 1524613841) % 0x55Cu) = a52 ^ 0x1EC7A7A0 ^ (v87
                                                                                    - ((2 * v87) & 0x41988526)
                                                                                    - 1597226349);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * ((577 * (a43 == 1268344974)) | a1)))(3385559831, v83, 2844279995, 14699667, 2109369684, 4293909479, 1050673086, 2135949279, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_1000D0F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a66 + 4 * v71 - 0x73FCE2C181DAD8BBLL) = *(_DWORD *)(v70
                                                                 + 4
                                                                 * (v71 * v67
                                                                  + 1564317547
                                                                  - ((((v71 * v67
                                                                                                  + 1564317547)
                                                                                   * (unint64_t)v68) >> 32) >> 10)
                                                                  * v69));
  return (*(uint64_t (**)(void))(v72 + 8 * ((118 * (v71 != 1090823604)) ^ v66)))();
}

uint64_t sub_1000D0F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v71 = ((a51 - 13) + 1873362 - ((2 * (a51 + 243)) & 0x1A4)) ^ 0x1C95D2;
  int v72 = *(&a68
                         + (((914 * v71) & 0x176A7E)
                          + ((v71 * ((v68 - 4457528) & 0x226DD59F ^ 0x2229D5C2)) ^ 0x6F8BB53F)
                          - 1871163647)
                         % 0x708) ^ 0x1D;
  int v73 = *(_DWORD *)(v70 + 4 * ((1361 * (((2 * v72) & 0xFFFFFFEF) + (v72 ^ 0xFBEFFBF7)) - 1724680084) % 0x12E0));
  unsigned int v74 = (v73 ^ 0x3BD5EEAA) - 2 * (((v73 ^ 0x3BD5EEAA) + 734056026) & 0x5602D4BD ^ v73 & 1) + 29598486;
  int v75 = ((unsigned __int16)((v73 ^ 0xEEAA) - 2 * (((v73 ^ 0xEEAA) - 12710) & 0xD4BD ^ v73 & 1) - 23786) >> 8) ^ 0xF0;
  unsigned int v76 = ((914 * (HIBYTE(v74) ^ 0x5C)) & 0x3FF8A) + ((457 * (HIBYTE(v74) ^ 0x5C)) ^ 0x5F77FFC5) - 1601553541;
  unsigned int v77 = ((BYTE2(v74) ^ 0x19) - ((2 * (BYTE2(v74) ^ 0x19)) & 0xFFFFFFEF) + 757195511) ^ 0x2DABAAC7;
  unsigned int v78 = (v77 - ((2 * v77) & 0x10862C) - 497523946) ^ 0xE2D22B5A;
  LOWORD(v74) = ((2 * (v74 ^ 0x9A)) & 0xCCCC) - (v74 ^ 0x9A) - 5479;
  unsigned int v79 = (v74 & 0x3A6 ^ 0xB002E923) + (v74 & 0x59) - 1;
  int v80 = *(&a68 + v76 % 0x708) ^ 0x4C;
  int v81 = *(&a68 + (((914 * v78) & 0xF51FFFD0) + ((457 * v78) ^ 0x7A8FFFE8) - 2056111272) % 0x708) ^ 0x4C;
  int v82 = (((v80 - 2 * (v80 & 0x7F)) << 16) + 1199505408) ^ 0x477F0000;
  unsigned int v83 = (((v81 - ((2 * v81) & 0x180)) << 8) - 1624129536) ^ 0x9F31C000;
  unsigned int v84 = (v83 + 698352162 - ((2 * v83) & 0x53400400)) ^ 0x29A00222 | (v82 - 1843307422 - ((2 * v82) & 0x24420000)) ^ 0x92215C62;
  uint64_t v85 = (97 * a51 + 393236499) % 0x55Cu;
  int v86 = *(&a68
                         + (((914 * ((1129888276 - (v75 | 0x4358BA14) + (v75 | 0xBCA745EB)) ^ 0xBCA745A3)) & 0xFE2A7FAE)
                          + ((457 * ((1129888276 - (v75 | 0x4358BA14) + (v75 | 0xBCA745EB)) ^ 0xBCA745A3)) ^ 0xFF153FD7)
                          + 15530857)
                         % 0x708) ^ 0x4C;
  uint64_t v87 = (2 * v86) & 0x1C4;
  int v88 = (v84 + 938994734 - ((2 * v84) & 0x6FEFD85C)) ^ 0x37F7EC2E | (v86 + 254650082 - v87) ^ 0xF2DA6E2;
  int v89 = *(&a68
                         + (((914 * (v79 ^ 0xB002EB37)) & 0x6DB9DEDC)
                          + ((457 * (v79 ^ 0xB002EB37)) ^ 0x36DCEF6E)
                          - 920302638)
                         % 0x708);
  unsigned int v90 = (((v88 - ((2 * v88) & 0xCC93D2)) << 8) - 431363840) ^ 0xE649E900;
  unsigned int v91 = (v90 + 1191539386 - ((2 * v90) & 0x8E0AE400)) ^ 0x470572BA | ((v89 ^ 0x4C) - 129403472 - ((2 * v89) & 0x160)) ^ 0xF84975B0;
  *((_DWORD *)&STACK[0x8E0] + v85) = a59 ^ 0xD3A14CC ^ (v91 - ((2 * v91) & 0x65FA9058) - 1292023764);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * ((1400 * (a51 == 305892364)) ^ v68)))(v85, v87, 938994734, 254650082, 2952980771, (a51 + 1), a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_1000D1454@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * v63 - 0x73FCE2C1066FC213) = *(_DWORD *)(a1
                                                                 + 4
                                                                 * (v63 * v60
                                                                  + 237439189
                                                                  - ((((v63 * v60 + 237439189)
                                                                                   * (unint64_t)v61) >> 32) >> 10)
                                                                  * v62));
  uint64_t v65 = (((v59 - 573166537) | 0x128u) ^ 0x16BLL) + v63;
  BOOL v66 = ((v65 - v59) | (v59 - v65)) >= 0;
  return (*(uint64_t (**)(void))(v64 + 8 * ((2 * v66) | (32 * v66) | v59 ^ 0x2229D38F)))();
}

uint64_t sub_1000D14E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,unsigned int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v70 = ((a51 + 89) - 986791221 - ((2 * (a51 + 89)) & 0x196)) ^ 0xC52EC2CB;
  int v71 = *(&a67
                         + (((914 * v70) & 0xEF7F6) + ((457 * v70) ^ (19 * (v67 ^ 0x17A) - 1409320245)) + 1409583173)
                         % 0x708);
  unsigned int v72 = ((v71 ^ 0x62) - ((2 * (v71 ^ 0x62)) & 0x170) - 695860552) ^ *(_DWORD *)(v69
                                                                              + 4
                                                                              * ((1361
                                                                                * (((2 * (v71 ^ 0xFFFFFFCF)) & 0xF8)
                                                                                 + (v71 ^ 0x2576BF32))
                                                                                - 741821366)
                                                                               % 0x12E0));
  unsigned int v73 = ((BYTE2(v72) ^ 0xD6) + (HIWORD(v72) & 0xA0 ^ 0xBB6F7820) - ((BYTE2(v72) ^ 0xD6) & 0xA0)) ^ 0x7B6D78B0;
  __int16 v74 = (BYTE1(v72) ^ 0xB8) - ((2 * (BYTE1(v72) ^ 0xB8)) & 0x9999) + 30924;
  int v75 = (((2 * v73) | 0x615010D8) - v73 + 1331165076) ^ 0x70AA0860;
  unsigned int v76 = ((v72 ^ 0xB9) - 787974009 - ((2 * (v72 ^ 0xB9)) & 0x17A) + 54) ^ 0xD1087887;
  unsigned int v77 = (457 * v76) ^ 0xF7F51EDF;
  unsigned int v78 = (914 * v76) & 0xEFEA3DBE;
  unsigned int v79 = ((v74 & 0x8BB ^ 0xE5A97021) + (v74 & 0x744 ^ 0x8020005) - 1) ^ 0xEDAB789B;
  int v80 = *(&a67
                         + (((914 * (HIBYTE(v72) ^ 0x63)) & 0x1FB7C)
                          + ((457 * (HIBYTE(v72) ^ 0x63)) ^ 0xDFFAFDBE)
                          + 537345410)
                         % 0x708);
  int v81 = (v80 ^ 0x4C) - ((2 * (v80 ^ 0x4C)) & 0x118);
  int v82 = *(&a67 + (((914 * v75) & 0x4DCFBFE8) + ((457 * v75) ^ 0xA6E7DFF4) + 1494899532) % 0x708) ^ 0x4C;
  unsigned int v83 = (((v82 - ((2 * v82) & 0xFFFFFF8F)) << 8) - 489109760) ^ 0xE2D8C700;
  unsigned int v84 = ((((v81 << 16) - 611581952) ^ 0xDB8C0000)
       + 2080037501
       - ((2 * (((v81 << 16) - 611581952) ^ 0xDB8C0000)) & 0x77F40000)) ^ 0x7BFADA7D | (v83
                                                                                      - 1184420284
                                                                                      - ((2 * v83) & 0x72CE5C00)) ^ 0xB9672E44;
  int v85 = *(&a67 + (((914 * v79) & 0xF5FFE79E) + ((457 * v79) ^ 0x7AFFF3CF) - 2063448207) % 0x708) ^ 0x4C;
  unsigned int v86 = 97 * a51 + 136755385;
  unsigned int v87 = (v84 - 1125383689 - ((2 * v84) & 0x79D803EE)) ^ 0xBCEC01F7 | (v85 - 1449738403 - ((2 * v85) & 0xBA)) ^ 0xA996BF5D;
  unsigned int v88 = (((v87 - ((2 * v87) & 0xF61034)) << 8) - 83355136) ^ 0xFB081A00;
  int v89 = *(&a67 + (v78 + v77 + 135076961) % 0x708) ^ 0x4C;
  unsigned int v90 = (v88 - 2132064889 - ((2 * v88) & 0x1D68A00)) ^ 0x80EB4587 | (v89 - 1737628850 - ((2 * v89) & 0x9C)) ^ 0x986DE34E;
  *((_DWORD *)&STACK[0x8E0] + v86 % 0x55C) = a59 ^ 0xF5E907A9 ^ (v90 - ((2 * v90) & 0x81016BBC) + 1082176990);
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 8 * ((187 * (a51 == 529926566)) ^ v67)))(2162902407, v86 / 0x55CuLL, 3169583607, 2845228893, a51, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_1000D19AC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * (((157 * (v59 ^ 0x132u)) ^ 0x3FFFFFFFDCDE8552) + v63) - 0x73FCE2C07DC88EB7) = *(_DWORD *)(a1 + 4 * (v63 * v61 - 1337052492 - ((((v63 * v61 - 1337052492) * (unint64_t)v60) >> 32) >> 10) * v62));
  return (*(uint64_t (**)(void))(v64 + 8 * (((2 * (v63 == 589398475)) | (8 * (v63 == 589398475))) ^ v59)))();
}

uint64_t sub_1000D1A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,unsigned int a52,uint64_t a53,uint64_t a54,int a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v72 = (((v69 + 216) ^ 0xFE895F6E) + (a52 - 92) - 2 * ((a52 + 164) & 0x7D ^ a52 & 1)) ^ 0xFE895D7C;
  unsigned int v73 = (((914 * v72) & 0x2EBCF79C) + ((457 * v72) ^ 0xD75E7BCE) + 681937010) % 0x708;
  unsigned int v74 = *(_DWORD *)(v71
                  + 4
                  * ((1361
                    * (2 * ((*(&a69 + v73) ^ 0xEE) & 0x7F)
                     + (*(&a69 + v73) ^ 0x7EE7CF11u))
                    + 1372063792)
                   % 0x12E0));
  int v75 = ((2 * (BYTE1(v74) ^ 0xFE)) | 0x25702AB2) - (BYTE1(v74) ^ 0xFE) + 1833429671;
  int v76 = (v74 & 0xA6 ^ 0x38A18407) + (v74 & 0x59) - 1;
  unsigned int v77 = (v76 & 0x30208405 ^ 0x86001201) + (v76 ^ 0x38F0CCA6) - ((v76 ^ 0x38F0CCA6) & 0x504805);
  unsigned int v78 = ((HIWORD(v74) & 0x27 ^ 0x84E9EE07) + (HIWORD(v74) & 0xD8 ^ 0xC9) - 1) ^ 0x1321EE37;
  int v79 = HIBYTE(v74) ^ 0xC8;
  uint64_t v80 = (457 * v79) ^ 0x65FFD7FCu;
  int v81 = (((2 * v78) & 0x29000048) - v78 - 882323493) ^ 0x5CA0CFFB;
  uint64_t v82 = (457 * v81) ^ 0xBDC1FE4E;
  unsigned int v83 = ((v75 & 0x100811B5 ^ 0xB80670B4) + (v75 & 0x2B0064A ^ 0xA08C43) - 1) ^ 0xAA1EE9B1;
  int v84 = *(&a69 + (((914 * v79) & 0x3AFF8) + v80 - 1711119548) % 0x708) ^ 0x4C;
  int v85 = *(&a69 + (((914 * v81) & 0x7B83FC9C) + v82 + 1111506162) % 0x708);
  int v86 = *(&a69
                         + (((914 * (v77 ^ 0xB6219623)) & 0x7E315DDE)
                          + ((457 * (v77 ^ 0xB6219623)) ^ 0x3F18AEEF)
                          - 1058436015)
                         % 0x708);
  int v87 = *(&a69 + (((914 * v83) & 0xFFFB73E6) + ((457 * v83) ^ 0xFFFDB9F3) + 295245) % 0x708);
  int v88 = (((v84 - ((2 * v84) & 0x16C)) << 16) + 1890975744) ^ 0x70B60000;
  unsigned int v89 = ((((v85 ^ 0x4C) - ((2 * (v85 ^ 0x4C)) & 0x6A)) << 8) - 111594240) ^ 0xF9593500;
  unsigned int v90 = (v89 - 112430904 - ((2 * v89) & 0x7298E000)) ^ 0xF94C70C8 | (v88 + 62283165 + (~(2 * v88) | 0xF893FFFF) + 1) ^ 0x3B65D9D;
  unsigned int v91 = (v90 + 775319548 - ((2 * v90) & 0x5C6CDFF8)) ^ 0x2E366FFC | ((v87 ^ 0x4C)
                                                                   + 1169499633
                                                                   - ((2 * (v87 ^ 0x4C)) & 0xFFFFFFE3)) ^ 0x45B525F1;
  unsigned int v92 = (((v91 - ((2 * v91) & 0xF0474A)) << 8) - 131881728) ^ 0xF823A500;
  unsigned int v93 = (v92 - 516926466 - ((2 * v92) & 0xC260A600)) ^ 0xE13053FE | ((v86 ^ 0x4C)
                                                                   + 939974218
                                                                   - ((2 * (v86 ^ 0x4C)) & 0x94)) ^ 0x3806DE4A;
  unsigned int v94 = a55 ^ 0xC08237C5 ^ (v93 - 1065207867 - ((2 * v93) & 0x81046F8A));
  *((_DWORD *)&STACK[0x8E0] + (97 * a52 + 2096897316) % 0x55C) = a59 ^ a60 ^ 0x8BDC1F21 ^ (v94
                                                                                         - ((2 * v94) & 0x1C7F0D38)
                                                                                         + 239044252);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 8 * ((808 * (a52 == 1218167131)) ^ v69)))(4294818291, v82, v80, 2854152625, a52, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1000D1F54@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * v61 - 0x73FCE2C1791EA68BLL) = *(_DWORD *)(v60
                                                                 + 4
                                                                 * (((int)v61 * a1 + 823394167)
                                                                  % (v59 + 842)));
  return (*(uint64_t (**)(void))(v62 + 8 * ((175 * (v61 == 1054183976)) ^ v59)))();
}

uint64_t sub_1000D1FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,unsigned int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,int a61,uint64_t a62,uint64_t a63)
{
  unsigned int v72 = (((a52 + 177) & (v69 ^ 0x242)) - 287630762 - ((2 * (a52 + 177)) & 0xAC)) ^ 0xEEDB1A56;
  int v73 = *(&a69 + (((914 * v72) & 0xFBB7E) + ((457 * v72) ^ 0x1FF7DDBF) - 536074623) % 0x708);
  unsigned int v74 = *(_DWORD *)(v71
                  + 4 * ((1361 * (((2 * (v73 ^ 0xFFFFFF83)) & 0x18A) + (v73 ^ 0x7FF7DF5E)) - 1422698069) % 0x12E0));
  unsigned int v75 = (((2 * (BYTE2(v74) ^ 0x4E)) & 0x90) - (BYTE2(v74) ^ 0x4E) - 137511241) ^ 0xE54DFB7A;
  unsigned int v76 = -2013401244 - (v75 | 0x87FDEF64) + (v75 | 0x7802109B);
  unsigned int v77 = ((BYTE1(v74) ^ 0x818080F7) + ((v74 >> 8) & 0xD9 ^ 0x5E6B2508) - ((BYTE1(v74) ^ 0x818080F7) & 0x808000D9)) ^ 0x5F6BA5B1;
  unsigned int v78 = ((914 * (HIBYTE(v74) ^ 0x66)) & 0x2B5DE) + ((457 * (HIBYTE(v74) ^ 0x66)) ^ 0xFB7F5AEF) + 75685969;
  unsigned int v79 = (((914 * (v74 ^ 0x1E)) & 0xBEE6)
       + ((457 * (v74 ^ 0x1E)) ^ 0x98F65F73)
       + 1728830413)
      % 0x708;
  int v80 = *(&a69 + v78 % 0x708);
  int v81 = *(&a69
                         + (((914 * (v76 ^ 0x6A8255BB)) & 0x1D7FE73E)
                          + ((457 * (v76 ^ 0x6A8255BB)) ^ 0xEBFF39F)
                          - 247314527)
                         % 0x708) ^ 0x4C;
  int v82 = ((((v80 ^ 0x4C) - 2 * (v80 & 3)) << 16) + 1208156160) ^ 0x48030000;
  int v83 = (((v81 - ((2 * v81) & 0x180)) << 8) + 1571995648) ^ 0x5DB2C000;
  unsigned int v84 = (v82 - 2125335496 - ((2 * v82) & 0x2A20000)) ^ 0x8151F438 | (v83 - 1719783614 - ((2 * v83) & 0x32FC5E00)) ^ 0x997E2F42;
  int v85 = *(&a69 + (((914 * v77) & 0x1DF3BE) + ((457 * v77) ^ 0x7F8EF9DF) - 2139930271) % 0x708) ^ 0x4C;
  uint64_t v86 = (2 * v85) & 0x10C;
  int v87 = (v84 - 386125511 - ((2 * v84) & 0xD1F86272)) ^ 0xE8FC3139 | (v85 + 1729089414 - v86) ^ 0x670FCF86;
  int v88 = *(&a69 + v79);
  unsigned int v89 = (((v87 - ((2 * v87) & 0x3AF5B4)) << 8) - 1652893184) ^ 0x9D7ADA00;
  unsigned int v90 = (v89 - 1076073016 - ((2 * v89) & 0x7FB8DA00)) ^ 0xBFDC6DC8 | ((v88 ^ 0x4C)
                                                                    - 1163928130
                                                                    - ((2 * (v88 ^ 0x4C)) & 0x17C)) ^ 0xBA9FDDBE;
  *((_DWORD *)&STACK[0x8E0] + (97 * a52 + 20725521) % 0x55C) = a60 ^ a61 ^ a59 ^ 0x894410C0 ^ (v90
                                                                                             - ((2 * v90) & 0x4F981A8A)
                                                                                             + 667684165);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 8 * ((1834 * (a52 == 265454670)) ^ v69)))(v86, 3908841785, 1729089414, 2169631800, 2566283123, v78 / 0x708uLL, 4047652769, a52, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1000D242C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * ((v62 ^ 0x3FFFFFFF92B83460) + v63) - 0x73FCE2C07DC88EB7) = *(_DWORD *)(v61
                                                                                                  + 4 * (v63 * a1 - 1748487197 - ((((v63 * a1 - 1748487197) * (unint64_t)v59) >> 32) >> 10) * v60));
  return (*(uint64_t (**)(void))(v64 + 8 * (int)((803 * (v63 == 1833424444)) ^ v62)))();
}

uint64_t sub_1000D24B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,unsigned int a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,uint64_t a63)
{
  unsigned int v72 = (((v69 - 9) ^ 0xAC4F579C) + (a53 + 81) - ((2 * (a53 + 81)) & 0x6E)) ^ 0xAC4F5137;
  unsigned int v73 = (((914 * v72) & 0x3EFD4E) + ((457 * v72) ^ 0x59DF7EA7) - 1507555943) % 0x708;
  unsigned int v74 = &a69;
  int v75 = *(_DWORD *)(v71
                  + 4
                  * ((1361 * (((2 * ~v74[v73]) & 0x1C) + (v74[v73] ^ 0x5B7FFD30u))
                    - 1933364252)
                   % 0x12E0)) ^ 0x3BD5EEAA;
  unsigned int v76 = v75 - ((2 * v75 + 670994672) & 0x492E7D3C) + 2023130902;
  unsigned int v77 = (((2 * (BYTE1(v76) ^ 0x12)) & 0x1CC) - (BYTE1(v76) ^ 0x12) - 1670853863) ^ 0xDC6ACB19;
  int v78 = ((2 * (BYTE2(v76) ^ 0x49)) & 0x17C) - (BYTE2(v76) ^ 0x49) - 1723836351;
  unsigned int v79 = (1068681586 - (v77 | 0x3FB2C972) + (v77 | 0xC04D368D)) ^ 0x804F3606;
  unsigned int v80 = (2021986934 - (v76 ^ 0xC21040B8 | 0x78851276) + (v76 ^ 0xC21040B8 | 0x877AED89)) ^ 0x456AADFC;
  uint64_t v81 = (457 * v79) ^ 0xBA41F5EF;
  unsigned int v82 = ((v78 & 0x11000774 ^ 0x60820630) + (v78 ^ 0x9368E947) - ((v78 ^ 0x9368E947) & 0x283774)) ^ 0x7B828634;
  uint64_t v83 = (457 * v82) ^ 0x7DFF397A;
  unsigned int v84 = ((914 * (HIBYTE(v76) ^ 0x5D)) & 0x3BFFE) + ((457 * (HIBYTE(v76) ^ 0x5D)) ^ 0xF7FFDFFF) + 134372161;
  unsigned int v85 = (((914 * v80) & 0xFFDE9DFA) + ((457 * v80) ^ 0xFFEF4EFD) + 1240131) % 0x708;
  int v86 = *(&a69 + v84 % 0x708);
  int v87 = *(&a69 + (((914 * v82) & 0xFBFE72F4) + v83 - 2113732154) % 0x708);
  int v88 = ((((v86 ^ 0x4C) - ((2 * v86) & 0x40)) << 16) + 1797259264) ^ 0x6B200000;
  unsigned int v89 = ((((v87 ^ 0x4C) - ((2 * (v87 ^ 0x4C)) & 0x30)) << 8) - 666298368) ^ 0xD8491800;
  int v90 = (v89 + 1498213616 - ((2 * v89) & 0x3299D800)) ^ 0x594CECF0 | (v88 + 1644832750 - ((2 * v88) & 0x44140000)) ^ 0x620A27EE;
  int v91 = *(&a69 + (((914 * v79) & 0x7483EBDE) + v81 + 1170228561) % 0x708) ^ 0x4C;
  unsigned int v92 = (v90 - 1875812358 - ((2 * v90) & 0x2062BFF4)) ^ 0x90315FFA | (v91 + 451289160 - ((2 * v91) & 0x90)) ^ 0x1AE62048;
  unsigned int v93 = (((v92 - ((2 * v92) & 0x5850E8)) << 8) - 1406635008) ^ 0xAC287400;
  LODWORD(v74) = (v93 - 151168213 - ((2 * v93) & 0xEDFAB600)) ^ 0xF6FD5B2B | ((v74[v85] ^ 0x4C)
                                                                            - 110928598
                                                                            - ((2 * (v74[v85] ^ 0x4C)) & 0x54)) ^ 0xF9635D2A;
  *((_DWORD *)&STACK[0x8E0] + (97 * a53 + 471390385) % 0x55C) = a62 ^ (v74
                                                                     - ((2 * v74) & 0xFBB4ADDC)
                                                                     + 2111461102) ^ 0x76AC2F61;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 8 * ((117 * (a53 == 570754734)) ^ v69)))(1498213616, v81, v83, 93, 2113878394, a53, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}