uint64_t sub_1000D2994@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  *(_DWORD *)(*a59 + 4 * v63 - 0x73FCE2C18EB6A32BLL) = *(_DWORD *)(v62
                                                                 + 4
                                                                 * (v63 * v60
                                                                  + 627788111
                                                                  - ((((v63 * v60 + 627788111)
                                                                                   * (unint64_t)a1) >> 32) >> 10)
                                                                  * v61));
  return (*(uint64_t (**)(void))(v64 + 8 * (((v63 == 1144756560) * ((23 * (v59 ^ 0x69D)) ^ 0x4AA)) ^ v59)))();
}

uint64_t sub_1000D2A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  unsigned int v71 = ((a53 - 125) - 979520368 - (((83 * (v68 ^ 0x4DE)) ^ 0x6C) & (2 * (a53 + 131)))) ^ 0xC59DB490;
  int v72 = *(&a68 + (((914 * v71) & 0x1EF1F2) + ((457 * v71) ^ 0xAAFF78F9) + 1426361159) % 0x708) ^ 0x76;
  unsigned int v73 = *(_DWORD *)(v70 + 4 * ((1361 * (((2 * v72) & 0x1B6) + (v72 ^ 0xE7FFB6DB)) - 1717377733) % 0x12E0));
  int v74 = (((2 * (BYTE1(v73) ^ 0xB2)) & 0xC8) - (BYTE1(v73) ^ 0xB2) + 10139) ^ 0x2742;
  unsigned int v75 = ((v73 ^ 0xC3) + (v73 & 0x7A ^ 0x7BC41738) - ((v73 ^ 0xC3) & 0x7A)) ^ 0xC2C51DF7;
  int v76 = HIBYTE(v73) ^ 0x44;
  unsigned int v77 = (BYTE2(v73) ^ 0x46 | 0xA5E4B963) - (BYTE2(v73) ^ 0x46 | 0x5A1B469C) + 1511736988;
  unsigned int v78 = ((v77 & 0x8000318D ^ 0x88023104) + (v77 ^ 0x60AC40C9) - ((v77 ^ 0x60AC40C9) & 0x880A318D)) ^ 0x4D42C89B;
  unsigned int v79 = (v75 - ((2 * v75) & 0x72000534) + 1023410842) ^ 0x8401089A;
  unsigned int v80 = ((914 * v79) & 0xDFDD9DD2) + ((457 * v79) ^ 0xEFEECEE9) + 269708375;
  int v81 = *(&a68 + (((914 * v76) & 0x1CCF4) + 215084 + ((457 * v76) ^ 0xFFFEE67A) + 3226) % 0x708) ^ 0x4C;
  int v82 = *(&a68 + (((914 * v78) & 0xBFEAEEFA) + ((457 * v78) ^ 0x5FF5777D) - 1609776189) % 0x708);
  unsigned int v83 = v80 % 0x708;
  int v84 = *(&a68 + (((914 * v74) & 0xFE7FE6) + ((457 * v74) ^ 0xDBFF3FF3) + 604175181) % 0x708);
  int v85 = (v82 ^ 0x4C) - ((2 * v82) & 0x44444444);
  unsigned int v86 = (((v81 - ((2 * v81) & 0xF4)) << 16) - 2122711040) ^ 0x817A0000;
  unsigned int v87 = ((((v85 << 8) + 1330848256) ^ 0x4F532200)
       + 758210519
       - ((2 * (((v85 << 8) + 1330848256) ^ 0x4F532200)) & 0x5A62BE00)) ^ 0x2D315FD7 | (v86
                                                                                      - 2141503146
                                                                                      - ((2 * v86) & 0xB60000)) ^ 0x805B4156;
  unsigned int v88 = (v87 + 1698606842 - ((2 * v87) & 0xCA7D5DF4)) ^ 0x653EAEFA | ((v84 ^ 0x4C)
                                                                    - 85028780
                                                                    - ((2 * (v84 ^ 0x4C)) & 0xA8)) ^ 0xFAEE9054;
  unsigned int v89 = (((v88 - ((2 * v88) & 0xB277FE)) << 8) - 650379520) ^ 0xD93BFF00;
  unsigned int v90 = (v89 - 716144521 - ((2 * v89) & 0xAAA10000)) ^ 0xD5508077 | ((*(&a68 + v83) ^ 0x4C)
                                                                   - 1546895644
                                                                   + (~(2 * (*(&a68 + v83) ^ 0x4C)) | 0xFFFFFE37)
                                                                   + 1) ^ 0xA3CC3EE4;
  *((_DWORD *)&STACK[0x8E0] + (97 * a53 - 1701809245) % 0x55Cu) = a63 ^ 0xF6E7FC39 ^ (v90
                                                                                    - ((2 * v90) & 0xEB981FD0)
                                                                                    - 171175960);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * ((471 * (a53 != 1832943228)) ^ v68)))(3578822775, 4209938516, 1698606842, 215084, (a53 + 1), 1511736988, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_1000D2ED8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * v63 - 0x73FCE2C1DA4E6DE7) = *(_DWORD *)(v62
                                                                 + 4
                                                                 * (v63 * v60
                                                                  - 61840128
                                                                  - ((((v63 * v60 - 61840128)
                                                                                   * (unint64_t)v61) >> 32) >> 10)
                                                                  * a1));
  return (*(uint64_t (**)(void))(v64 + 8 * (((4 * (v63 != 1461812223)) | (32 * (v63 != 1461812223))) ^ v59)))();
}

uint64_t sub_1000D2F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,uint64_t a62,uint64_t a63)
{
  int v71 = (((v68 + 726) ^ 0x4AEE45F9) + (a54 - 65) - ((2 * (a54 + 191)) & 0x1B6)) ^ 0x4AEE41DB;
  int v72 = *(&a68 + (((914 * v71) & 0x13BF7DC) + ((457 * v71) ^ 0x679DFBEEu) - 1738143662) % 0x708);
  unsigned int v73 = *(_DWORD *)(v70 + 4 * ((1361 * (((2 * (v72 ^ 9)) & 0x15E) + (v72 ^ 0xF5CFFCB6)) + 697303487) % 0x12E0));
  unsigned int v74 = (-1135379446 - (BYTE2(v73) ^ 0x5E | 0xBC537C0A) + (BYTE2(v73) ^ 0x5E | 0x43AC83F5)) ^ 0x43AC831E;
  unsigned int v75 = (v73 ^ 0xCF | 0xC984AF22) - (v73 ^ 0xCF | 0x367B50DD) + 914051293;
  uint64_t v76 = (457 * v74) ^ 0x6F7F7BFA;
  unsigned int v77 = ((914 * (HIBYTE(v73) ^ 0x5F)) & 0x3BD74) + ((457 * (HIBYTE(v73) ^ 0x5F)) ^ 0x7BDDDEBA) - 2077991802;
  int v78 = BYTE1(v73) ^ 0x83;
  uint64_t v79 = (457 * v78) ^ 0xFD7E4AFB;
  unsigned int v80 = ((v75 & 0x8900B571 ^ 0x2A327500) + (v75 ^ 0xD185887B) - ((v75 ^ 0xD185887B) & 0xAB32F571)) ^ 0xB333D257;
  int v81 = *(&a68 + v77 % 0x708) ^ 0x4C;
  int v82 = *(&a68 + (((914 * v74) & 0xDEFEF7F4) + v76 - 1870479546) % 0x708) ^ 0x4C;
  int v83 = (((v81 - ((2 * v81) & 0x17A)) << 16) + 1606221824) ^ 0x5FBD0000;
  unsigned int v84 = (((v82 - ((2 * v82) & 0xFFFFFFCF)) << 8) + 539682560) ^ 0x202AE700;
  unsigned int v85 = (v84 + 2135652027 - ((2 * v84) & 0x3E96EC00)) ^ 0x7F4B76BB | (v83 - 610821348 - ((2 * v83) & 0x372E0000)) ^ 0xDB979B1C;
  int v86 = *(&a68 + (((914 * v78) & 0x95F6) + v79 + 42201157) % 0x708);
  int v87 = *(&a68 + (((914 * v80) & 0xC6BAE7FC) + ((457 * v80) ^ 0xE35D73FE) + 480560962) % 0x708);
  unsigned int v88 = (v85 - 1318602952 - ((2 * v85) & 0x62CF6E70)) ^ 0xB167B738 | ((v86 ^ 0x4C)
                                                                    + 1898238600
                                                                    - ((2 * (v86 ^ 0x4C)) & 0x11111111)) ^ 0x7124D288;
  int v89 = (((v88 - ((2 * v88) & 0xFE831A)) << 8) + 2135002368) ^ 0x7F418D00;
  unsigned int v90 = (v89 + 789470900 - ((2 * v89) & 0x5E1CBC00)) ^ 0x2F0E5EB4 | ((v87 ^ 0x4C)
                                                                   - 697038554
                                                                   - ((2 * (v87 ^ 0x4C)) & 0x4C)) ^ 0xD6740926;
  *((_DWORD *)&STACK[0x8E0] + (97 * a54 - 881105825) % 0x55Cu) = a61 ^ 0x8DC1AFA3 ^ (v90
                                                                                   - ((2 * v90) & 0x445137D6)
                                                                                   - 1574396949);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * ((1234 * (a54 == 1824482368)) ^ v68)))(789470900, 2976364344, 1898238600, 3684145948, 2135652027, v76, v79, 3814552574, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_1000D3398@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * v63 - 0x73FCE2C1F9F24F4FLL) = *(_DWORD *)(v62
                                                                 + 4
                                                                 * (a1
                                                                  - 165
                                                                  + v63 * v59
                                                                  - 49633175
                                                                  - ((((a1
                                                                                                  - 165
                                                                                                  + v63 * v59
                                                                                                  - 49633175)
                                                                                   * (unint64_t)v60) >> 32) >> 10)
                                                                  * v61));
  return (*(uint64_t (**)(void))(v64 + 8 * ((118 * (v63 == 1594520409)) ^ a1)))();
}

uint64_t sub_1000D340C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,unsigned int a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v71 = ((a55 + 123) + 1383323677 - ((2 * (a55 + 123)) & 0x3A)) ^ 0x5273D81D;
  unsigned int v72 = (((914 * v71) & 0x376BBE) + (v68 ^ 0xFF5BB6A2 ^ (457 * v71)) + 11030113) % 0x708;
  int v73 = *(_DWORD *)(v70
                  + 4
                  * ((1361
                    * (((2 * (*(&a68 + v72) ^ 0x13)) & 0xFFFFFFF7)
                     + (*(&a68 + v72) ^ 0x9CF9FDE8))
                    + 1929649354)
                   % 0x12E0));
  HIDWORD(v74) = v73 ^ 0x3D5EEAA;
  LODWORD(v74) = v73 ^ 0x38000000;
  unsigned int v75 = (v74 >> 27) - ((2 * (v74 >> 27)) & 0x2C81C10) - 2124149240;
  unsigned int v76 = (((2 * (BYTE1(v75) ^ 0xBE)) & 0x136) - (BYTE1(v75) ^ 0xBE) - 1195624604) ^ 0xFEF43764;
  unsigned int v77 = ((2 * (BYTE2(v75) ^ 0x4B)) & 0xAAAAAAAA) - (BYTE2(v75) ^ 0x4B) - 1337981270;
  unsigned int v78 = ((v77 & 0xA040019F ^ 0x5000015) + (v77 ^ 0xB0CA8FEA) - ((v77 ^ 0xB0CA8FEA) & 0x2099F)) ^ 0xA5C8800F;
  unsigned int v79 = (v76 - ((2 * v76) & 0x80802EB6) - 792357029) ^ 0x968D971D;
  int v80 = (2 * (((2 * v75) ^ 0x10) & 0x36 ^ (2 * (_BYTE)v75) & 2)
       - ((2 * v75) ^ 0x10)
       + 74) & 0x80;
  uint64_t v81 = v80 ^ 0xEFFEDF95;
  int v82 = (((v74 >> 27) - ((2 * (v74 >> 27)) & 0x10) + 8) ^ 0x1F6) + 2 * v80 + v81 + 268509291;
  int v83 = *(&a68
                         + (((914 * (HIBYTE(v75) ^ 0xE6)) & 0x1DB7A)
                          + ((457 * (HIBYTE(v75) ^ 0xE6)) ^ 0xFF6EEDBD)
                          + 9653635)
                         % 0x708) ^ 0x4C;
  int v84 = *(&a68 + (((914 * v78) & 0xF27E7FFC) + ((457 * v78) ^ 0x793F3FFE) - 2034042046) % 0x708) ^ 0x4C;
  unsigned int v85 = (((v83 - ((2 * v83) & 0xCCCCCCCC)) << 16) + 1097203712) ^ 0x41660000;
  int v86 = (((v84 - ((2 * v84) & 0x1C4)) << 8) + 1864688128) ^ 0x6F24E200;
  unsigned int v87 = (v86 - 1934465306 - ((2 * v86) & 0x1964CC00)) ^ 0x8CB266E6 | (v85 + 1793660153 - ((2 * v85) & 0x55D20000)) ^ 0x6AE914F9;
  int v88 = *(&a68 + (((914 * v79) & 0xEFBE8F5E) + 136508305 + ((457 * v79) ^ 0xF7DF47AF)) % 0x708) ^ 0x4C;
  int v89 = *(&a68 + (457 * (((2 * v82) & 0x57AEB7F2) + (v82 ^ 0xEBD75BF9)) - 57880449) % 0x708);
  int v90 = (v87 + 1024114459 - ((2 * v87) & 0x7A157E36)) ^ 0x3D0ABF1B | (v88 + 1461435148 - ((2 * v88) & 0x18)) ^ 0x571BBB0C;
  int v91 = ((v90 - ((2 * v90) & 0x95716E)) << 8) - 893864192;
  unsigned int v92 = ((v91 ^ 0xCAB8B700) + 1587916908 - ((2 * (v91 ^ 0xCAB8B700)) & 0xBD4B6000)) ^ 0x5EA5B06C | ((v89 ^ 0x4C)
                                                                                                  + 662840948
                                                                                                  - ((2 * (v89 ^ 0x4C)) & 0xE8)) ^ 0x27822674;
  *((_DWORD *)&STACK[0x8E0] + (97 * a55 + 1877949339) % 0x55C) = a65 ^ 0x582AB0A1 ^ (v92
                                                                                   - ((2 * v92) & 0x82FC4956)
                                                                                   + 1098785963);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * ((224 * (a55 != 1264702340)) ^ v68)))(1587916908, 1793660153, 4285459901, v81, a55, 46668816, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1000D3900@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * v63 - 0x73FCE2C1145A0067) = *(_DWORD *)(v62
                                                                 + 4
                                                                 * (v63 * v60
                                                                  - 1129055648
                                                                  - ((((v63 * v60
                                                                                                  - 1129055648)
                                                                                   * (unint64_t)a1) >> 32) >> 10)
                                                                  * v61));
  return (*(uint64_t (**)(void))(v64 + 8 * ((937 * (v63 + 7 * (v59 ^ 0x1E9u) == 631532709)) ^ v59)))();
}

uint64_t sub_1000D3980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,unsigned int a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,uint64_t a62,uint64_t a63)
{
  unsigned int v70 = ((((v67 - 26) ^ 0xAB) + a55)
       - 1981563544
       - ((2 * ((((v67 + 91529958) | 0x22005800) ^ 0x2774FCAB) + a55)) & 0xD0)) ^ 0x89E3BD68;
  int v71 = *(&a67 + (((914 * v70) & 0x1FDAFA) + ((457 * v70) ^ 0xF59FED7D) + 174331587) % 0x708);
  int v72 = v71 ^ 0x4C;
  unsigned int v73 = (*(_DWORD *)(v69
                   + 4 * ((1361 * (((2 * (v71 ^ 0xDDDDDDDD)) & 0x16C) + (v71 ^ 0xEBBDEB6A)) - 1280906710) % 0x12E0)) ^ 0x3BD5EEAA)
      + ((((v72 - ((2 * v72) & 0x16) - 32976373) ^ 0x1B6EC3A8) + 1) ^ 0x55F53BBF)
      + ((2 * (((v72 - ((2 * v72) & 0x16) - 32976373) ^ 0x1B6EC3A8) + 1)) & 0xABEA777E)
      - 1442134975;
  unsigned int v74 = v73 - ((2 * v73) & 0x6E010C52) - 1224702423;
  unsigned int v75 = ((v74 & 0xB2 ^ 0x27578803) + (v74 & 0x4D) - 1) ^ 0xEF9FB8AA;
  unsigned int v76 = ((2 * (BYTE2(v74) ^ 0xAD)) | 0x981D097C) - (BYTE2(v74) ^ 0xAD) - 1276019902;
  unsigned int v77 = ((v76 & 0x80C82A8 ^ 0x8204E2A9) + (v76 & 0x44020557) - 1) ^ 0xCE0A66BA;
  unsigned int v78 = (176968663 - (v75 | 0xA8C53D7) + (v75 | 0xF573AC28)) ^ 0x3DBB9C48;
  uint64_t v79 = (457 * v78) ^ 0xCF95F5F5;
  unsigned int v80 = (1871899100 - (BYTE1(v74) ^ 0x13087C88 | 0x6F92E9DC) + (BYTE1(v74) ^ 0x13087C88 | 0x906D1623)) ^ 0x83656A25;
  uint64_t v81 = (457 * v80) ^ 0x77AEEADF;
  unsigned int v82 = ((914 * v77) & 0x3F7FFE68) + ((457 * v77) ^ 0x9FBFFF34) + 1614953484;
  unsigned int v83 = ((914 * v78) & 0x9F2BEBEA) + v79 + 812401995;
  int v84 = *(&a67 + v82 % 0x708);
  int v85 = *(&a67
                         + (((914 * (HIBYTE(v74) ^ 0xF7)) & 0x3FFFC)
                          + ((457 * (HIBYTE(v74) ^ 0xF7)) ^ 0x7DFFFFFE)
                          - 2113782974)
                         % 0x708u) ^ 0x4C;
  int v86 = (((v85 - ((2 * v85) & 0x108)) << 16) + 830734336) ^ 0x31840000;
  unsigned int v87 = ((((v84 ^ 0x4C) - ((2 * v84) & 0x120)) << 8) - 376664064) ^ 0xE98C9000;
  unsigned int v88 = ((v86 + 1267932940 - ((2 * v86) & 0x17260000)) ^ 0x4B931F0C | (v87 - 2138490775 - ((2 * v87) & 0x1127000)) ^ 0x80893869)
      - 1943721623
      - ((2
        * ((v86 + 1267932940 - ((2 * v86) & 0x17260000)) ^ 0x4B931F0C | (v87 - 2138490775 - ((2 * v87) & 0x1127000)) ^ 0x80893869)) & 0x184A52D2);
  int v89 = *(&a67 + (((914 * v80) & 0xEF5DD5BE) + v81 - 2007805855) % 0x708) ^ 0x4C;
  unsigned int v90 = (v88 ^ 0x8C252969 | (v89 + 319489722 - ((2 * v89) & 0x174)) ^ 0x130B06BA)
      + 3300537
      - ((2 * (v88 ^ 0x8C252969 | (v89 + 319489722 - ((2 * v89) & 0x174)) ^ 0x130B06BA)) & 0x64CEE6);
  int v91 = *(&a67 + v83 % 0x708);
  unsigned int v92 = ((((v90 << 8) + 702976) ^ 0x32677300) + 14961793 - ((2 * (((v90 << 8) + 702976) ^ 0x32677300)) & 0x1C89800)) ^ 0xE44C81 | ((v91 ^ 0x4C) + 2055422457 - ((2 * (v91 ^ 0x4C)) & 0xFFFFFFF3)) ^ 0x7A8341F9;
  *((_DWORD *)&STACK[0x8E0] + (97 * a55 + 1984428007) % 0x55C) = a61 ^ 0xB69ED264 ^ (v92
                                                                                   - ((2 * v92) & 0xCB0B12B4)
                                                                                   - 444233382);
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 8 * (((4 * (a55 != 555156408)) | (8 * (a55 != 555156408))) ^ v67)))(14961793, 319489722, v82 / 0x708uLL, v79, v81, 4015904190, a55, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1000D3EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a66 + 4 * v71 - 0x73FCE2C11B9C7D97) = *(_DWORD *)(v70
                                                                 + 4
                                                                 * (v71 * v68
                                                                  + 212634516
                                                                  - ((((v71 * v68 + 212634516)
                                                                                   * (unint64_t)v69) >> 32) >> 10)
                                                                  * v67));
  return (*(uint64_t (**)(void))(v72
                              + 8
                              * (int)(v66 ^ 0x2774FEEA ^ (2630
                                                        * (((61 * (v66 ^ 0xEB)) ^ (((v71 + 1 - v66) | (v66 - (v71 + 1))) < 0)) & 1)))))();
}

uint64_t sub_1000D3F54@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  int v63 = ((a49 - 117) + 1670447876 - ((2 * (a49 + 139)) & 8)) ^ 0x63910304;
  unsigned int v64 = (((914 * v63) & 0x7B9AFAE) + ((457 * v63) ^ 0x37DCD7D7u) - 936956823) % 0x708;
  unsigned int v65 = *(_DWORD *)(v62
                  + 4
                  * ((1361
                    * (((2 * (*(&a61 + v64) ^ 0xFFFFFFF9)) & 0x1B6)
                     + (*(&a61 + v64) ^ 0x4F97BE06))
                    - 626998424)
                   % 0x12E0));
  int v66 = (a1 - 330) * a49;
  unsigned int v67 = v66 + 1568815349;
  unsigned int v68 = ((v65 ^ 0xCA) - ((2 * (v65 ^ 0xCA)) & 0x8A) - 1719095739) ^ 0x93C637EF;
  unsigned int v69 = ((2 * (BYTE1(v65) ^ 0x920AE560)) | 0x249ACB6C) - (BYTE1(v65) ^ 0x920AE560) + 1840421450;
  int v70 = ((457 * (HIBYTE(v65) ^ 0x91)) ^ 0x4F7FFFFF) + 914 * (HIBYTE(v65) ^ 0x91);
  unsigned int v71 = (HIWORD(v65) & 0x2C) + (BYTE2(v65) ^ 0xFFFFFFFC) + (BYTE2(v65) | 0xB9E7F2D3) + 1;
  unsigned int v72 = (v71 & 0xB6D4F245 ^ 0x14102000) + (v71 & 0x492B0DBA ^ 0x92A0091);
  int v73 = ((v69 & 0x408FF40F ^ 0x408A7402) + (v69 ^ 0x25808D) - ((v69 ^ 0x25808D) & 0x408FF40F)) ^ 0x40EDF407;
  unsigned int v74 = v70 - 1333642431;
  unsigned int v75 = v66 + 63381327;
  unsigned int v76 = (-1996952315 - (v68 | 0x88F8ED05) + (v68 | 0x770712FA)) ^ 0x7D498BFB;
  uint64_t v77 = (914 * v73) & 0xBFFD7CDC;
  uint64_t v78 = (457 * v76) ^ 0x67EAFFFF;
  uint64_t v79 = (914 * v76) & 0xCFD5FFFE;
  uint64_t v80 = ((v75 % 0x55C) ^ 0x7FFF7E4E) - 642017796 + ((2 * (v75 % 0x55C)) & 0xC9C);
  unsigned int v81 = (v72 - 1) ^ 0xA4DDD245;
  if (v75 >= 0xFFFFFAA4) {
    unsigned int v82 = v67;
  }
  else {
    unsigned int v82 = ((v75 % 0x55C) ^ 0x7FFF7E4E) - 642017796 + ((2 * (v75 % 0x55C)) & 0xC9C);
  }
  int v83 = *(&a61 + v74 % 0x708) ^ 0x4C;
  int v84 = *(&a61 + (((914 * v81) & 0xFFF89E7A) + ((457 * v81) ^ 0xFFFC4F3D) + 388099) % 0x708) ^ 0x4C;
  unsigned int v85 = (((v83 - ((2 * v83) & 0x114)) << 16) - 745930752) ^ 0xD38A0000;
  unsigned int v86 = (((v84 - ((2 * v84) & 0xEC)) << 8) - 161909248) ^ 0xF6597600;
  unsigned int v87 = (v86 - 763339104 - ((2 * v86) & 0x2500BC00)) ^ 0xD2805EA0 | (v85 - 365053012 - ((2 * v85) & 0x547A0000)) ^ 0xEA3DBBAC;
  int v88 = *(&a61 + (v77 + ((457 * v73) ^ 0xDFFEBE6E) + 537099474) % 0x708) ^ 0x4C;
  unsigned int v89 = (v87 + 1946026591 - ((2 * v87) & 0x67FC04BE)) ^ 0x73FE025F | (v88 - 519183705 + (~(2 * v88) | 0xFFFFFEB1) + 1) ^ 0xE10DE2A7;
  unsigned int v90 = (((v89 + 12606839 - ((2 * v89) & 0x80BACC)) << 8) - 4352) ^ 0xC05D6600;
  int v91 = *(&a61 + ((int)v79 + (int)v78 - 1743307967) % 0x708u) ^ 0x4C;
  unsigned int v92 = (v90 + 623224051 - ((2 * v90) & 0x4A4B4800)) ^ 0x2525A4F3 | (v91 - 496350488 - ((2 * v91) & 0x1D0)) ^ 0xE26A4AE8;
  *((_DWORD *)&STACK[0x8E0] + v82 - 1505432650) = a57 ^ 0x1CA9A1C8 ^ (v92 - ((2 * v92) & 0x72E140F6) + 963682427);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * (a1 ^ (4 * (a49 == 353570932)))))(623224051, 3775783591, 1946026591, 3531628192, v78, v77, v79, v80, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000D4474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a66 + 4 * v70 - 0x73FCE2C1D1CEB6ABLL) = *(_DWORD *)(v69
                                                                 + 4
                                                                 * (97 * v70
                                                                  - 899229329
                                                                  - ((((97 * v70 - 899229329)
                                                                                   * (unint64_t)v67) >> 32) >> 10)
                                                                  * v68));
  return (*(uint64_t (**)(void))(v72
                              + 8
                              * ((1991
                                * (((v70 + (v66 - 1426165449) - 1639 - v66) | (v66
                                                                                           - (v70
                                                                                            + (v66 - 1426165449)
                                                                                            - 1639))) >= 0)) ^ (v71 + (int)v66 + 334))))();
}

uint64_t sub_1000D44FC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned int a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54,int a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  int v64 = *(&a61
                         + ((((a49 - 47) * (((a1 + 60) | 3) - 789)) & 0x3FEFE)
                          + ((457 * (a49 - 47)) ^ 0xFBBDFF7F)
                          + 71697601)
                         % 0x708);
  unsigned int v65 = 1361 * (((2 * (v64 ^ 0xFFFFFFF1)) & 0x2E) + (v64 ^ 0xFFC7F746)) + 706755339;
  unsigned int v66 = ((2 * (v64 ^ 4)) & 0xFFFFFF7F) + (v64 ^ 0x7BD3E7BB);
  unsigned int v67 = (v66 - 867168193 + ((2 * v66 + 904) & 0x4F4 ^ 0x5F6FFFFF)) ^ *(_DWORD *)(v63 + 4 * (v65 % 0x12E0));
  int v68 = (((2 * (BYTE1(v67) ^ 0x2F)) & 0x5A) - (BYTE1(v67) ^ 0x2F) + 4562) ^ 0x11D8;
  int v69 = (((2 * (BYTE2(v67) ^ 0xCD082)) | 0x6FCE2532) - (BYTE2(v67) ^ 0xCD082) - 937890457) ^ 0x37EBC2FC;
  int v70 = HIBYTE(v67) ^ 0xB2;
  uint64_t v71 = (914 * v70) & 0x3C676;
  uint64_t v72 = (457 * v68) ^ 0x3EFDC37Fu;
  unsigned int v73 = ((v67 & 0x5D ^ 0x67C14F15) + (v67 & 0xA2 ^ 0xA1) - 1) ^ 0xA549477D;
  unsigned int v74 = (((2 * v73) | 0xEBDEAFF2) - v73 + 168863751) ^ 0x37675FF9;
  unsigned int v75 = ((914 * v74) & 0xFDDE7BFA) - 2129461949 + ((457 * v74) ^ 0x7EEF3DFD);
  unsigned int v76 = (((914 * v69) & 0xFE70AAB6) + ((457 * v69) ^ 0x7F38555B) - 2134252059) % 0x708;
  int v77 = *(&a61 + (v71 + ((457 * v70) ^ 0xD765E33B) + 681334789) % 0x708) ^ 0x4C;
  int v78 = *(&a61 + v76) ^ 0x4C;
  int v79 = (((v77 - ((2 * v77) & 0x19C)) << 16) + 701366272) ^ 0x29CE0000;
  unsigned int v80 = (((v78 - ((2 * v78) & 0x4E)) << 8) - 10410240) ^ 0xFF612700;
  unsigned int v81 = (v80 - 250203015 - ((2 * v80) & 0x622C6800)) ^ 0xF1163479 | (v79 - 1172111949 - ((2 * v79) & 0x74440000)) ^ 0xBA22FDB3;
  int v82 = *(&a61 + (((914 * v68) & 0x7B86FE) + v72 - 1056671807) % 0x708) ^ 0x4C;
  unsigned int v83 = (v81 + 688155845 - ((2 * v81) & 0x5208D98A)) ^ 0x29046CC5 | (v82 - 2092275569 - ((2 * v82) & 0xFFFFFF1F)) ^ 0x834A688F;
  int v84 = *(&a61 + v75 % 0x708);
  int v85 = (((v83 - ((2 * v83) & 0xFAD9BA)) << 8) + 2104286464) ^ 0x7D6CDD00;
  int v86 = (v85 + 645474418 - ((2 * v85) & 0x4CF25000)) ^ 0x26792872 | ((v84 ^ 0x4C)
                                                                   + 322605621
                                                                   - ((2 * (v84 ^ 0x4C)) & 0x6A)) ^ 0x133A9235;
  *((_DWORD *)&STACK[0x8E0] + (a49 * v61 + 1196364337) % 0x55C) = a54 ^ a53 ^ a55 ^ 0x93F7BFBD ^ (v86
                                                                                                - ((2 * v86) & 0xC8E75288)
                                                                                                - 462182076);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * ((432 * (a49 == 2068733230)) ^ a1)))(688155845, 3122855347, 2165505347, v71, 929521657, v72, 1056818047, a49, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_1000D49A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a66 + 4 * v70 - 0x73FCE2C1DA0E2887) = *(_DWORD *)(v69
                                                                 + 4
                                                                 * (97 * v70
                                                                  + 40004440
                                                                  - ((((97 * v70 + 40004440)
                                                                                   * (unint64_t)v67) >> 32) >> 10)
                                                                  * v68));
  return (*(uint64_t (**)(void))(v71 + 8 * ((126 * (v70 != 1460762279)) ^ v66)))();
}

uint64_t sub_1000D4A10@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,unsigned int a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,int a58,int a59,int a60,uint64_t a61,uint64_t a62,char a63)
{
  unsigned int v66 = (((a50 + 253) & (v63 - 1448)) - 146698432 - ((2 * (a50 + 253)) & 0x80)) ^ 0xF7418F40;
  int v67 = *(&a63 + (((914 * v66) & 0x1C7EF86) + ((457 * v66) ^ 0xCEE3F7C3) + 824183933) % 0x708);
  int v68 = (((v67 ^ 0x4C) - ((2 * (v67 ^ 0x4C)) & 0x7C) - 729250498) ^ 0x3B9E348D)
      + (*(_DWORD *)(v65
                   + 4 * ((1361 * (((2 * (v67 ^ 0x39)) & 0xFFFFFFF3) + (v67 ^ 0xC7DCEFC6)) + 1923510908) % 0x12E0)) ^ 0x3BD5EEAA);
  unsigned int v69 = v68 - ((2 * v68) & 0x7046D4E8) + 941845108;
  unsigned int v70 = (152853897 - (BYTE2(v69) ^ 0x4F | 0x91C5D89) + (BYTE2(v69) ^ 0x4F | 0xF6E3A276)) ^ 0x16C3A23E;
  int v71 = HIBYTE(v69) ^ 0x43;
  unsigned int v72 = (((2 * v70) & 0x20AFF1B6) - v70 + 1873282852) ^ 0x8F880711;
  uint64_t v73 = (457 * v72) ^ 0x7BDB6F7D;
  unsigned int v74 = (1767269915 - (BYTE1(v69) ^ 0x81 | 0x6956661B) + (BYTE1(v69) ^ 0x81 | 0x96A999E4)) ^ 0x96A99955;
  int v75 = ((2 * (v69 ^ 0xA)) & 0xEC) - (v69 ^ 0xA) - 1588022391;
  uint64_t v76 = (457 * v74) ^ 0x5BB4DFBF;
  uint64_t v77 = (((914 * v71) & 0x1EF0E) + ((457 * v71) ^ 0xAFFEF787) + 1342391225) % 0x708;
  unsigned int v78 = ((v75 & 0x2100999B ^ 0x200810) + (v75 ^ 0x6397B1AF) - ((v75 ^ 0x6397B1AF) & 0xC2C2199B)) ^ 0x212D9B9B;
  int v79 = *(&a63 + v77) ^ 0x4C;
  int v80 = *(&a63 + (((914 * v72) & 0xF7B6DEFA) + v73 - 2077832253) % 0x708) ^ 0x4C;
  int v81 = (((v79 - ((2 * v79) & 0x2A)) << 16) + 1981087744) ^ 0x76150000;
  int v82 = (((v80 + 5103790 - ((2 * v80) & 0x74)) << 8) + 101376) ^ 0x4DE23A00;
  int v83 = *(&a63 + (((914 * v78) & 0x5FE77FF2) + ((457 * v78) ^ 0x2FF3BFF9) - 804357305) % 0x708);
  unsigned int v84 = (v82 - 1575363579 - ((2 * v82) & 0x4433B800)) ^ 0xA219DC05 | (v81 + 2077179062 - ((2 * v81) & 0x779E0000)) ^ 0x7BCF3CB6;
  int v85 = *(&a63 + (((914 * v74) & 0xB769BF7E) + v76 - 1538434175) % 0x708);
  unsigned int v86 = (v84 - 2012606486 - ((2 * v84) & 0x10141FD4)) ^ 0x880A0FEA | ((v85 ^ 0x4C)
                                                                    + 562148033
                                                                    - ((2 * (v85 ^ 0x4C)) & 0xFFFFFF83)) ^ 0x2181B2C1;
  unsigned int v87 = (((((v86 + 4512727 - ((2 * v86) & 0x89B79E)) << 8) - 2048) ^ 0x44DBCF00)
       + 673692010
       - ((2 * ((((v86 + 4512727 - ((2 * v86) & 0x89B79E)) << 8) - 2048) ^ 0x44DBCF00)) & 0x504F7200)) ^ 0x2827B96A | ((v83 ^ 0x4C) + 697292198 + (~(2 * (v83 ^ 0x4C)) | 0xFFFFFEB3) + 1) ^ 0x298FD5A6;
  *((_DWORD *)&STACK[0x8E0] + (a50 * a1 - 1635113507) % 0x55C) = a60 ^ a57 ^ a58 ^ 0x2F56E5DE ^ (v87
                                                                                               - ((2 * v87) & 0x21E1076C)
                                                                                               + 284197814);
  int v88 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * ((3737 * (a50 == 105413122)) ^ v63));
  return v88(v88, v77, v73, 556637083, 3077160830, v76, 3267500443, a50, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1000D4F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v72 = v70 - ((2 * v70 + 947057592) & 0x6B01E674) - 776311530;
  *(_DWORD *)(*a66
            + 4 * ((v72 ^ 0x3FBFF9E8AB96165) + ((2 * (v72 ^ 0x3580F33A)) & 0x17E7324BELL))
            + 0x7C131EC4855127CDLL) = *(_DWORD *)(v66
                                                + 4
                                                * (((v69 + 175165856) & 0xF58F27F4 ^ 0x31C41048)
                                                 + 97 * v70
                                                 - ((((((v69 + 175165856) & 0xF58F27F4 ^ 0x31C41048)
                                                                   + 97 * v70)
                                                                  * (unint64_t)v67) >> 32) >> 10)
                                                 * v68));
  unsigned int v73 = ((2 * v72) ^ 0x6B01E674) - ((2 * ((2 * v72) ^ 0x6B01E674)) & 0xEAF62EF0) - 176482439;
  unsigned int v74 = (v72 ^ 0xCA7F04F7) + (v73 & 0xFFFFEF9A ^ 0x6F640D4) + ((2 * v73) & 0xE71A8F10 ^ 0xE2120E10) + 208844852;
  return (*(uint64_t (**)(void))(v71
                              + 8
                              * ((30 * (((2 * v74) & 0xE79FDEB6) + (v74 ^ 0x73CFEF5B) - 1943007067 < 0x100)) ^ v69)))();
}

uint64_t sub_1000D50B0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  int v61 = byte_10023B160[(((4424 * ((((401 * (a1 ^ 0xE2)) ^ 0xB8019C2E) + 25) ^ 0xB8019F0C)) & 0x5FEFBBE8)
                                       + ((2212 * ((((401 * (a1 ^ 0xE2)) ^ 0xB8019C2E) + 25) ^ 0xB8019F0C)) ^ 0xAFF7DDF5)
                                       + 1346716215)
                                      % 0x97F] ^ 0x30;
  unsigned int v62 = 23 * v61 - ((46 * v61) & 0xFFFFFFA2) + 81;
  int v63 = *(&a60
                         + (457
                          * (((2 * (v62 ^ 0x52 ^ (v62 >> 3) & 9)) & 0xF6)
                           + (v62 ^ 0x52 ^ (v62 >> 3) & 9 ^ 0xFEFF7E7B))
                          - 907447891)
                         % 0x708) ^ 0x4C;
  unsigned int v64 = (v63 - 1418784915 - ((2 * v63) & 0xDA)) ^ 0xAB6F0F6D | (((a29 + 1868824780) & 0xFFFFFF00)
                                                              - ((2 * (a29 + 1868824780)) & 0xBCD6AA00)
                                                              + 1584092456) ^ 0x5E6B5528;
  *((_DWORD *)&STACK[0x8E0] + (1399347521 * v60 + 1702243935) % 0x55Cu) = v64 - 539127609 - ((2 * v64) & 0xBFBB218E);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))*(&off_10026D1A0 + a1))(218, 1702243935, 3205573259, 1372, &STACK[0x8E0]);
}

void sub_1000D52D4()
{
}

uint64_t sub_1000D52DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a66 + 4 * a7 - 0x73FCE2C127F12A7BLL) = *((_DWORD *)&STACK[0x8E0]
                                                      + ((v66 ^ 0xE1A3C2D9) + 97 * a7) % 0x55C);
  return (*(uint64_t (**)(void))(v67 + 8 * (((2 * (a7 == 713699620)) | ((a7 == 713699620) << 6)) ^ v66)))();
}

uint64_t sub_1000D5360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v72 = *(&a67 + ((((v67 ^ 0x47) + 980) ^ 0x3BF7F8CFu) - 1005845430) % 0x708);
  int v73 = byte_10023B160[(2212 * (((2 * (v72 ^ 0x31)) & 0xFFFFFFF7) + (v72 ^ 0x7EBDB7CA)) - 524924108)
                                      % 0x97F];
  HIDWORD(v74) = v73 ^ 0x30;
  LODWORD(v74) = v73 << 24;
  LOBYTE(v73) = ((v74 >> 31) - ((2 * (v74 >> 31)) & 0x46) + 35) ^ (((v74 >> 31)
                                                                                   - ((2 * (v74 >> 31)) & 0x46)
                                                                                   + 35) >> 6) ^ (((v74 >> 31) - ((2 * (v74 >> 31)) & 0x46) + 35) >> 4) ^ 0x21;
  unsigned int v75 = (v73 + 1400702979 - 2 * (v73 & 3)) ^ 0x537D0803 | ((((a37 & 0xCE8B200 ^ 0x840B26B | a37 & 0xF3174D00)
                                                                            - 1) ^ 0x45861D19)
                                                                          - 1) ^ 0x5B13ED72;
  *(_DWORD *)(v71
            + 4
            * (557676257 * v68
             + 1739977919
             - ((((557676257 * v68 + 1739977919) * (unint64_t)v69) >> 32) >> 10)
             * v70)) = (v75 - ((2 * v75) & 0x25990736) - 1832090725) ^ 0x4D1113E9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + (v67 ^ 0x47)))(1465642797, 1400702979, 33);
}

void sub_1000D5568()
{
}

uint64_t sub_1000D5570(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a66 + 4 * ((a4 ^ 0x3FFFFFFFFF4DC529) + v66) - 0x73FCE2C07DC88EB7) = *((_DWORD *)&STACK[0x8E0]
                                                                                       + (97 * (int)v66 - 1133385636)
                                                                                       % 0x55Cu);
  return (*(uint64_t (**)(void))(v67 + 8 * (int)((3885 * (v66 == 11684643)) ^ a4)))();
}

uint64_t sub_1000D5608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(&a67 + (457 * v67 - 35283429) % 0x708u) = *(&a67
                                              + (457
                                               * ((((v68 - 2001186910) & 0x7747ADBF ^ 0x545) & (2
                                                                                              * (*(&a67 + (457 * v67 - 35283429) % 0x708u) ^ 0x4C)))
                                                + (*(&a67 + (457 * v67 - 35283429) % 0x708u) ^ 0x778BFFBBu))
                                               - 1759587239)
                                              % 0x708);
  int v70 = *(uint64_t (**)(void))(v69 + 8 * ((60 * (v67 == 827117692)) ^ v68));
  *(&a67 + (457 * v67 - 35162781) % 0x708u) = *(&a67
                                              + (457
                                               * (((2
                                                  * (*(&a67 + (457 * v67 - 35162781) % 0x708u) ^ 0x44)) & 0xFFFFFFEF)
                                                + (*(&a67 + (457 * v67 - 35162781) % 0x708u) ^ 0x76E7CEBB))
                                               - 1137589167)
                                              % 0x708);
  return v70();
}

uint64_t sub_1000D5730@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v5
           + a1 * v1
           + 1260917811
           - ((((a1 * v1 + 1260917811) * (unint64_t)v2) >> 32) >> 10) * v3) = *(unsigned char *)(v5 + a1 * v1 + 1261155451 - ((((a1 * v1 + 1261155451) * (unint64_t)v2) >> 32) >> 10) * v3);
  return (*(uint64_t (**)(void))(v6 + 8 * ((26 * (a1 + 1 != (v4 ^ 0xF3) + 260389325)) ^ v4)))();
}

uint64_t sub_1000D57A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,int a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v69 = (v68 - 1110) | 0x44C;
  int v70 = *(&a68 + (1028 * (v69 ^ 0x44Cu) + 144184) % 0x708) ^ 0x4C;
  unsigned int v71 = (v70 - 1404176571 + (~(2 * v70) | 0xFFFFFF75) + 1) ^ 0xAC4DF745 | (((1781104450 - a37) & 0xFFFFFF00)
                                                                         - ((2 * (1781104450 - a37)) & 0x7110C800)
                                                                         + (v69 ^ 0xB88860D3)) ^ 0xB888649D;
  LODWORD(STACK[0x8E0]) = v71 - 539127609 - ((2 * v71) & 0xBFBB218E);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + (v69 ^ 0x16)))(524152557, 2443359173, 1800, &a68, 76, 4294967157, 177010029, 3205573259);
}

void sub_1000D58F4()
{
}

uint64_t sub_1000D58FC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  HIDWORD(v62) = v60 + 89068783;
  LODWORD(v62) = v60 - 45148945;
  int v63 = a1 + (v62 >> 27) - (((v62 >> 27) << (v59 - 7)) & 0xC739C7AE) + 23;
  HIDWORD(v62) = v63 ^ 0xFFFFFFF7;
  LODWORD(v62) = v63 ^ a1;
  int v64 = ((2 * (v62 >> 5)) & 0xF3596CB6) + ((v62 >> 5) ^ 0x79ACB65B);
  *(_DWORD *)(((4 * (v64 - 2105408)) | ((unint64_t)((v64 - 2105408) < 0x798C961B) << 34))
            + *a59
            - 0x73FCE2C263FAE723) = *((_DWORD *)&STACK[0x8E0] + (97 * v60 - 84510245) % 0x55Cu);
  return (*(uint64_t (**)(void))(v61 + 8 * ((39 * ((v64 - 2041362318) > 0xFF)) ^ v59)))();
}

uint64_t sub_1000D5A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v74 = (v72 + 1186372963) & 0xB9495BF7;
  unsigned int v75 = ((LOBYTE(STACK[0x380]) ^ 0x4C) - 796694848 - ((2 * (LOBYTE(STACK[0x380]) ^ 0x4C)) & 0x180)) ^ 0xD08366C0 | (((v74 ^ 0xFFFFFE9C) + (a38 & 0x829C5800 ^ 0x141859)) | a38 & 0x7D63A700) ^ 0xFF7CF558;
  *(_DWORD *)(v71
            + 4
            * (1502118999 * v68
             + 323345161
             - ((((1502118999 * v68 + 323345161) * (unint64_t)v69) >> 32) >> 10)
             * v70)) = v75 - 539127609 - ((2 * v75) & 0xBFBB218E);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v73 + 8 * (int)(v74 ^ 0x12)))(457, 323345161, 726648049, 2443359173, 1800, &a68, 1435837123, 76);
}

void sub_1000D5B50()
{
}

uint64_t sub_1000D5B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a66 + 4 * (((382 * (v67 ^ 0x161u)) ^ 0x3FFFFFFFAA6AE38DLL) + a7) - 0x73FCE2C07DC88EB7) = *((_DWORD *)&STACK[0x8E0] + (97 * (int)a7 - 1837247459) % 0x55Cu);
  return (*(uint64_t (**)(void))(v68 + 8 * ((800 * (a7 + 1 == v66 + 256)) ^ v67)))();
}

uint64_t sub_1000D5BF4@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,void *a60)
{
  *a5 = 867373565;
  int v66 = *(unsigned __int8 *)(v65
                           + (((4424 * ((408924592 - (((v63 ^ 0x5F2) - 1454) & 0x3C3CF400)) ^ 0x185FB15A)) & 0xFE77F8)
                            + ((2212 * ((408924592 - (((v63 ^ 0x5F2) - 1454) & 0x3C3CF400)) ^ 0x185FB15A)) ^ 0xB47F3BFF)
                            + 1270140889)
                           % 0x97F);
  unsigned int v67 = (((2 * (v66 ^ 0x38)) & 0xF4) + (v66 ^ 0xFDFEB746)) * a2 - 1032000398;
  *(_DWORD *)(v62 + 4 * (v67 - (((v67 * (unint64_t)v60) >> 32) >> 10) * v61)) = *(_DWORD *)(*a60 + a1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64
                                                                       + 8
                                                                       * ((42
                                                                         * ((v63 ^ 0x2714C44Eu) + 2021437166 > 0x9F9174A1)) ^ v63 ^ 0x5F2)))(272, 657137094, 2350513918, 194);
}

void sub_1000D5DA8()
{
}

uint64_t sub_1000D5DB4@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  int v73 = (((((a5 - 1291) | a1) - 532) & (a64 - 1364300014)) + v69 - ((a62 + 1566367268) & 0x1E)) ^ v69;
  unsigned int v74 = ((v73 * a4) & 0x3FDFC) + ((v73 * a6) ^ a3) + v72;
  *(_DWORD *)(((4 * (a64 - 1364300072)) | ((unint64_t)(a64 - 1364300072 < a2) << 34)) + *a65 + v70) = *(_DWORD *)(v67 + 4 * (v74 - (((v74 * (unint64_t)v65) >> 32) >> 10) * v66));
  BOOL v76 = a64 + 2021694568 < v68 || a64 + 2021694823 <= (a64 + 2021694568);
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((v76 * v71) ^ (a5 - 1422))))();
}

void sub_1000D5E8C()
{
}

uint64_t sub_1000D5E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(void))(v66
                              + 8
                              * (((((v65 - 711) | 0x2B0) + 765) * ((a65 - 1219898733) < 0x2FC69581)) ^ v65)))();
}

void sub_1000D5EE8()
{
}

uint64_t sub_1000D5F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t result = (*(uint64_t (**)())(v6 + 8 * (v7 ^ 0xAD2)))();
  *(_DWORD *)(v10 + 8) = a6;
  return result;
}

uint64_t qSCskg(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v7 = (qword_1002846E8 - qword_100284710) ^ (unint64_t)&v15;
  qword_100284710 = 431200057 * v7 - 0x76B82A39AB17D7D3;
  qword_1002846E8 = 431200057 * (v7 ^ 0xA5F8A63A3EE64495);
  v10[0] = sub_1001F5558;
  v10[1] = a1;
  int v11 = a3;
  v10[2] = a2;
  v10[3] = a4;
  uint64_t v12 = a5;
  uint64_t v13 = a6;
  uint64_t v14 = a7;
  unsigned int v16 = (230600693
       * ((((&vars0 - 32) | 0x4099155E) - ((&vars0 - 32) & 0x4099155E)) ^ 0x92A59375)) ^ 0x54F58F50;
  LOBYTE(v7) = 57 * ((qword_1002846E8 - (57 * v7 + 45)) ^ 0x95);
  char v8 = byte_10024B390[byte_10024B290[v7] ^ 0x1E];
  v17 = v10;
  ((void (*)(unsigned int *))*(&off_10026D1A0 + (v7 ^ v8) + 1927))(&v16);
  return v18;
}

uint64_t NAAB(uint64_t a1, int a2)
{
  uint64_t v2 = qword_1002846E8 - qword_100284720 - (void)&v7;
  qword_100284720 = 431200057 * v2 + 0x5A0759C5C119BB6BLL;
  qword_1002846E8 = 431200057 * (v2 ^ 0xA5F8A63A3EE64495);
  v5[0] = sub_1001F54C8;
  v5[1] = a1;
  int v6 = a2;
  unsigned int v8 = (230600693
      * ((-568580562 - ((&vars0 - 32) | 0xDE1C262E) + ((&vars0 - 32) | 0x21E3D9D1)) ^ 0xF3DF5FFA)) ^ 0x54F58F50;
  char v3 = byte_10024B190[byte_10024B090[(57 * ((qword_1002846E8 + qword_100284720) ^ 0x95))] ^ 0x8D];
  v9 = v5;
  ((void (*)(unsigned int *))*(&off_10026D1A0
                                        + ((57
                                                                         * ((qword_1002846E8 + qword_100284720) ^ 0x95)) ^ v3)
                                        + 1995))(&v8);
  return v10;
}

void sub_1000D6214(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 928048777 * (((a1 | 0x634B8ECF) - (a1 | 0x9CB47130) - 1665896144) ^ 0x4557FBA2);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000D62EC()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0xA83)))(152, 0x10300401EA5018FLL) != 0;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((((v0 - 613) | 0x94) ^ 0xFFFFFB55) + ((v0 - 1394377399) & 0x531C84F7)) * v2) ^ v0)))();
}

uint64_t sub_1000D6368(uint64_t a1)
{
  *(_DWORD *)a1 = 2023518720;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1279805853;
  *(void *)(a1 + 64) = 0x228E0CD37FCCF1ACLL;
  *(_DWORD *)(a1 + 72) = 1649474516;
  *(_WORD *)(a1 + 92) = 13854;
  *(void *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = 1494274718;
  *(_DWORD *)(a1 + 96) = 68414646;
  *(void *)(a1 + 120) = 0x7E422C649661EC57;
  *(void *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 144) = 1664814209;
  return (*(uint64_t (**)(void))(v1 + 8 * (v2 ^ 0x8F6)))();
}

uint64_t sub_1000D6458()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((8 * (((v2 == v1) ^ ((v0 ^ 0x61) + 10)) & 1)) & 0xEF | (16 * (((v2 == v1) ^ ((v0 ^ 0x361) - 1014)) & 1))) ^ v0)))();
}

uint64_t sub_1000D648C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((*(void *)(v1 - 0x7E422C649661EC4FLL) == 0) ^ (a1 - 38)) & 1)
                                * (((a1 + 148) | 8) + 92)) ^ a1)))();
}

uint64_t sub_1000D64DC()
{
  unsigned int v3 = v0 ^ 0xEC9E6246;
  (*(void (**)(void))(v2 + 8 * (int)(v0 ^ 0xEC9E6BE5)))();
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((*(void *)(v1 - 0x7E422C649661EC3FLL) == 0) ^ (v3 + 90)) & 1)
                                     * ((v3 ^ 0x56A) - 1231)) ^ v3)))();
}

uint64_t sub_1000D6544()
{
  (*(void (**)(void))(v2 + 8 * (v3 + 839)))();
  (*(void (**)(uint64_t))(v2 + 8 * (v3 + 839)))(v1 - 0x7E422C649661EC57);
  *(void *)(v0 + 120) = 0x7E422C649661EC57;
  BOOL v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v3 ^ 0xCC2)))(40, 0x1010040725982CDLL) == 0;
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((v3 + 44) ^ v4) & 1) * ((v3 + 335) ^ 0x604)) ^ (v3 - 279))))();
}

uint64_t sub_1000D6644(uint64_t *a1)
{
  int v6 = v4 + 555;
  int v7 = *(_DWORD *)(v1 + 20) + v2;
  *a1 = *(void *)(v1 + 40) ^ v2;
  a1[1] = 0;
  a1[3] = 0;
  uint64_t v8 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v6 ^ 0xF37)))((v7 - 1067439884), 1174015124);
  a1[1] = v8;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v6 - 1) ^ (v8 == 0)) & 1)
                                     * (((v6 + 1347095021) & 0xAFB4EFDC) - 184)) | v6)))();
}

uint64_t sub_1000D66D4()
{
  *(_DWORD *)(v0 + 16) = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((152
                                * ((v2 | ((unint64_t)(v2 < ((v3 - 1519053139) & 0x5A8AE7D8u)
                                                                              + 1067438452) << 32)) == 1067439884)) ^ (v3 - 736))))();
}

uint64_t sub_1000D6770@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  BOOL v10 = v3 < v2;
  char v11 = *(unsigned char *)(v5 + *(void *)(v8 + 32) - 0x46CAA1F943420962);
  *(unsigned char *)(v6 + a1 - 0xE12EB7A184A0BF8) = v11 + ((-52 * (a2 ^ 0x30)) ^ 0xF2) - ((2 * v11) & 0xD4);
  if (v10 == v7 - 0x75FCE2784E5EFC13 < v2) {
    BOOL v10 = v7 - 0x75FCE2784E5EFC13 < v3;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((!v10 * v4) ^ a2)))();
}

uint64_t sub_1000D6828()
{
  uint64_t v5 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v4 ^ 0xDBD)))(*(_DWORD *)(v0 + 28) ^ v2 ^ ((v4 - 1233) | 0x210) ^ (((v4 + 1014343239) & 0xC38A54FC) - 1997148268), 80338550);
  *(void *)(v1 + 24) = v5;
  return (*(uint64_t (**)(void))(v3 + 8 * (((8 * (v5 == 0)) | ((v5 == 0) << 6)) ^ v4)))();
}

uint64_t sub_1000D68AC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((v2 + 1637778914) & 0x9E617F77) + ((v2 + 179) ^ 0xFFFFFB8D)) * (v0 != 0)) ^ v2)))();
}

uint64_t sub_1000D68F0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((251 * (((v0 + 625) | 0xE7) ^ 0x4E2)) ^ 0x4F4) * (*(void *)(v1 + 8) == 0)) ^ v0)))();
}

void sub_1000D6934(int a1@<W8>)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1000D6B4C()
{
  int v4 = (v0 - 1591959322) & 0x5EE35DDE;
  (*(void (**)(void))(v3 + 8 * (v0 + 1559)))();
  (*(void (**)(uint64_t))(v3 + 8 * (v4 ^ 0x8F2u)))(v2);
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((86 * (((*(void *)(v1 + 48) == 0) ^ ((v4 + 80) ^ (v4 + 89))) & 1)) ^ (v4 + 1370))))();
}

uint64_t sub_1000D6BE4@<X0>(int a1@<W8>)
{
  int v3 = 2 * (a1 ^ 0x79D);
  uint64_t v4 = (*(uint64_t (**)(void))(v2 + 8 * (a1 ^ 0xE02)))();
  *(void *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 56) = -1279805853;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((235
                                              * (((5 * (v3 ^ 0x45)) ^ (*(void *)(v1 + 64) == 0x228E0CD37FCCF1ACLL)) & 1)) ^ v3)))(v4);
}

uint64_t sub_1000D6C5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v2 ^ 0xB4C)))(a1 - 0x228E0CD37FCCF1ACLL);
  *(void *)(v1 + 64) = 0x228E0CD37FCCF1ACLL;
  *(_DWORD *)(v1 + 72) = 1649474516;
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((((((v2 + 117) & 0xEB) + 20) ^ (*(void *)(v1 + 120) == 0x7E422C649661EC57)) & 1)
                                              * (((v2 - 494564235) & 0x1D7A75EB ^ 0x26) - 1478)) ^ (v2 - 494564235) & 0x1D7A75EB)))(v4);
}

uint64_t sub_1000D6D7C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((a1 & 0x7953C6AB) + 411320628) & 0xE77BBFEF ^ 0xFFFFFAB5)
                                      + (a1 & 0x7953C6AB)
                                      + 1174)
                                     * (v2 == v1)) ^ a1 & 0x7953C6AB)))();
}

uint64_t sub_1000D6DCC()
{
  *(void *)(v0 + 120) = 0x7E422C649661EC57;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((503 * (v1 ^ 0x3A4)) ^ 0x4FB ^ (*(void *)(v0 + 104) == 0)) & 1) == 0)
                                * ((503 * (v1 ^ 0x3A4) - 702) ^ 0x32D)) ^ (503 * (v1 ^ 0x3A4)))))();
}

uint64_t sub_1000D7044()
{
  int v3 = (v0 - 498207656) & 0x1DB2099E;
  (*(void (**)(void))(v2 + 8 * (v0 + 1287)))();
  *(void *)(v1 + 104) = 0;
  *(_DWORD *)(v1 + 112) = 1494274718;
  return (*(uint64_t (**)(void))(v2 + 8 * (((*(void *)(v1 + 136) == 0) * (v3 + 35 + v3 + 392 - 904)) ^ v3)))();
}

void sub_1000D70AC()
{
  *int v0 = 2023518720;
  (*(void (**)(_DWORD *))(v2 + 8 * (v1 + 1416)))(v0);
  JUMPOUT(0x1000D70D0);
}

void sub_1000D70F0(uint64_t a1)
{
  int v1 = 1189216979 * ((2 * (a1 & 0xB5105BF) - a1 - 189859264) ^ 0xDA45F686);
  int v2 = *(_DWORD *)a1 ^ v1;
  if (*(void *)(a1 + 16)) {
    BOOL v3 = *(_DWORD *)(a1 + 8) - v1 == 1080579747;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = v3;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000D71C8()
{
  uint64_t v3 = (*(uint64_t (**)(void, uint64_t))(v0 + 8 * (v1 ^ 0xB80)))(((((v1 + 151) | 0x200) - 1612) & (v2 - 1080579732) ^ 0x57BFDFDF)+ ((2 * (v2 - 1080579732)) & 0xAF7FBFA0)- 1472192461, 1766098721);
  STACK[0x478] = v3;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((v3 != 0) | ((v3 != 0) << 6)) ^ v1)))();
}

uint64_t sub_1000D7258(unsigned char *a1)
{
  STACK[0x420] = (unint64_t)a1;
  *a1 = 1;
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((932
                                              * ((v3 | ((unint64_t)(v3 < v1) << 32)) - 679690685 != (v2 - 623) + 400888752)) ^ (v2 + 589))))(0x2529CB7575BFAA0FLL);
}

uint64_t sub_1000D730C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  BOOL v12 = v5 < v6;
  *(unsigned char *)(v9 + a2 - 0x3E00B48F098C3E71) = *(unsigned char *)(v8 + v10 - 0x2753AE28DD8E3DF2);
  unint64_t v13 = a1 - 0x2529CB755DDA9528;
  uint64_t v14 = a1 + 1;
  int v15 = v12 ^ (v13 < a3 + v4);
  BOOL v16 = v13 < v5;
  if (!v15) {
    BOOL v12 = v16;
  }
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * ((v12 * v7) ^ v3)))(v14);
}

uint64_t sub_1000D7398@<X0>(unint64_t a1@<X4>, unint64_t a2@<X5>, int a3@<W8>)
{
  STACK[0x400] = v6;
  LODWORD(STACK[0x41C]) = v5;
  STACK[0x428] = v4;
  STACK[0x408] = a1;
  STACK[0x410] = a2;
  *(unsigned char *)(a2 + a1 - 0x217F59977FC75E46) = 0x80;
  return (*(uint64_t (**)(void))(v7 + 8 * ((15 * (v3 - 280166708 >= (a3 ^ 0x739u) + 2147482096)) ^ a3)))();
}

uint64_t sub_1000D7414@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v3 + v2 + v1 + 1545) = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((15 * (((a1 + 1241) ^ v2) + v1 > 0x7FFFFFFE)) ^ a1)))();
}

uint64_t sub_1000D7454()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((355 * (dword_1002846DC == ((7 * (v0 ^ 0x646)) ^ 0x525B8796))) ^ v0)))();
}

uint64_t sub_1000D74A4()
{
  int v2 = (*(uint64_t (**)(void, unint64_t *))(v1 + 8 * (v0 ^ 0x968)))(0, &STACK[0x494]);
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((735
                               * (((v0 + 2145335551) & (2 * v2)) + (v2 ^ 0x3FEF9D7F) == 15 * (v0 ^ 0x1BA) + 1072666996)) ^ v0)))();
}

uint64_t sub_1000D7528()
{
  strcpy((char *)(v1 - 215), "com_apple_driver_FairPlayIOKit");
  BOOL v3 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1159)))(v1 - 215) != 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (int)((v3 * ((v0 + 561) ^ 0x7D8 ^ (v0 + 319111148) & 0xECFABDFB)) ^ v0)))();
}

uint64_t sub_1000D75DC(uint64_t a1)
{
  int v3 = (*(uint64_t (**)(void, uint64_t, unint64_t *))(v2 + 8 * (v1 + 1653)))(LODWORD(STACK[0x494]), a1, &STACK[0x430]);
  BOOL v4 = ((2 * v3) & 0xBBFE5FFE) + (v3 ^ 0x5DFF2FFF) != ((v1 - 491) | 0x634) + 1577003459;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((4 * v4) | (8 * v4) | v1)))();
}

uint64_t sub_1000D7654()
{
  int v2 = v0 + 1380;
  int v3 = (*(uint64_t (**)(void))(v1 + 8 * (v2 ^ 0xF3B)))(LODWORD(STACK[0x430]));
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((227
                               * (((v2 ^ 0x7B1BFE91 ^ (266 * (v2 ^ 0x751))) & (2 * v3)) + (v3 ^ 0xBD8DFFFD) != -1114767363)) ^ v2)))();
}

uint64_t sub_1000D76D4@<X0>(int a1@<W8>)
{
  int v3 = (*(uint64_t (**)(void, void, void, unint64_t *))(v1 + 8 * (v2 ^ 0x8E2)))(a1 + (v2 ^ 0x683u) + 1114765767, mach_task_self_, 0, &STACK[0x448]);
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((1715 * (((2 * v3) & 0xFEFD6FFC) + (v3 ^ 0xFF7EB7FE) == -8472578)) ^ v2)))();
}

uint64_t sub_1000D775C()
{
  *(_DWORD *)(v4 + 1756) = ((v2 + 1407157678) ^ LODWORD(STACK[0x448]))
                         + ((2 * LODWORD(STACK[0x448])) & 0xA7BF0CDA)
                         - 25427972;
  (*(void (**)(uint64_t))(v0 + 8 * ((v2 + 1405) ^ 0xE41)))(v1);
  uint64_t v5 = ((uint64_t (*)(void))*(&off_10026D1A0 + ((v2 + 1405) ^ 0xE41)))(LODWORD(STACK[0x430]));
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + ((47 * (*(_DWORD *)(v4 + 1756) == ((v2 - 28985664) & 0x1BA4DAC ^ v3))) ^ (v2 + 1360))))(v5);
}

uint64_t sub_1000D7824(uint64_t a1)
{
  unint64_t v4 = STACK[0x420] + 2;
  LODWORD(STACK[0x5E0]) = 0;
  return (*(uint64_t (**)(uint64_t, unint64_t, unint64_t *))(v3
                                                                                  + 8
                                                                                  * (((v1 - 1226)
                                                                                    * ((v2 | ((unint64_t)(v2 < 0x511B57D6) << 32)) != 1360746454)) ^ v1)))(a1, v4, &STACK[0x5E0]);
}

uint64_t sub_1000D78B8(uint64_t a1, uint64_t a2)
{
  BOOL v10 = v4 < v3;
  *(unsigned char *)(v6 + v8 - 0x204076AA34B3326CLL) = *(unsigned char *)(v5 + a2 - 0x76E5A03120A00CD8);
  if (v10 == v7 - 0x2F0A3A7D32AA70F9 < v3) {
    BOOL v10 = v7 - 0x2F0A3A7D32AA70F9 < v4;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((98 * v10) ^ v2)))();
}

uint64_t sub_1000D794C@<X0>(unint64_t a1@<X1>, unint64_t a2@<X2>, int a3@<W8>)
{
  STACK[0x3F8] = a1;
  LODWORD(STACK[0xDB4]) = v5 - v3 - 739 + v4;
  STACK[0x548] = 2008;
  uint64_t v7 = (a3 - 1381729897);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, unint64_t *))(v6 + 8 * (v5 + 1394));
  STACK[0x3F0] = a2;
  BOOL v9 = v8(v7, 34, a2, 2008, a2, &STACK[0x548]) == v5 - 739;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((1949 * v9) ^ v5)))();
}

uint64_t sub_1000D79CC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((v2 + ((v0 - v2 - 1781) | 0x630) + 870) ^ v0 ^ (1887
                                                                               * (((LODWORD(STACK[0xDB4]) - v1 - v0) | (v0 - (LODWORD(STACK[0xDB4]) - v1))) >= 0)))))();
}

uint64_t sub_1000D7A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v4
                                                                       + 8
                                                                       * (int)((14
                                                                              * (v3 + 1599546412 != (a3 ^ 0xB0727B03))) | a3)))(a1, a2, STACK[0x3F8]);
}

uint64_t sub_1000D7ADC@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  BOOL v9 = v3 < v2;
  *(unsigned char *)(v5 + a1 - 0x2A495A22A80A49D8) = *(unsigned char *)(v4 + v7 - 0x56A4AB65C6D482FLL);
  if (v9 == v6 - 0x8133F152AE30F4DLL < v2) {
    BOOL v9 = v6 - 0x8133F152AE30F4DLL < v3;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((v9 * ((a2 + 1722211437) & 0x99591EDB ^ 0x244)) | a2)))();
}

uint64_t sub_1000D7B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  STACK[0x4C0] = 0x7BB775407D70C8E2;
  int v8 = 230600693 * ((v6 - 152) ^ 0xD23C862B);
  *(_DWORD *)(v6 - 124) = (v3 ^ 0xB794E351) - v8 + ((v5 - 173022050) & (2 * v3) ^ (v5 - 1870258690)) + 2013195452;
  unint64_t v9 = STACK[0x420];
  *(void *)(v6 - 144) = a3 + v4;
  *(void *)(v6 - 136) = v9;
  *(_DWORD *)(v6 - 152) = (v5 - 387) ^ v8;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v7 + 8 * (v5 + 1543)))(v6 - 152);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + ((47 * (*(_DWORD *)(v6 - 128) == 0)) ^ v5)))(v10);
}

uint64_t sub_1000D7C54()
{
  STACK[0x560] = 1;
  BOOL v2 = (*(uint64_t (**)(void, const char *, unint64_t *))(v1 + 8 * (v0 + 1579)))(0, "systemgroup.com.apple.pisco.suinfo", &STACK[0x560]) == 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (int)((((((v0 - 26) ^ v2) & 1) == 0) * ((v0 + 1503315378) & 0xA6653E3F ^ 0x639)) ^ (v0 + 153))))();
}

uint64_t sub_1000D7CD4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((((v0 | 0x100) ^ 0x364) + 1712) ^ 0x167 ^ (19 * ((v0 | 0x100) ^ 0x364)))
                                * (STACK[0x560] == 1)) ^ (v0 | 0x100))))();
}

uint64_t sub_1000D7D1C()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0xF75)))(v1);
  BOOL v4 = ((uint64_t (*)(unint64_t, uint64_t))*(&off_10026D1A0 + v0 + 289))((((v0 ^ 0x4D9u) + 607 + 0x649AB9CBBD5FD8D3) ^ v3) + ((2 * v3) & 0xC93573977ABFBE1ELL) - 0x649AB9CBBD5FDEF1, 3185216350) == 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((v4 | (16 * v4)) ^ v0)))();
}

uint64_t sub_1000D7DCC()
{
  (*(void (**)(uint64_t))(v2 + 8 * (v0 ^ 0xE12)))(v1);
  uint64_t result = ((uint64_t (*)())*(&off_10026D1A0 + (v0 ^ 0xE12)))();
  *(_DWORD *)(v4 + 4) = -42908;
  return result;
}

uint64_t sub_1000D9D4C()
{
  uint64_t v1 = (const float *)&xmmword_100283D10;
  int8x16_t v2 = (int8x16_t)vld1q_dup_f32(v1);
  int v3 = LODWORD(STACK[0x41C]) - 92;
  v4.i64[0] = 0x8000000080000000;
  v4.i64[1] = 0x8000000080000000;
  v5.i64[0] = 0x100000001;
  v5.i64[1] = 0x100000001;
  v0.i64[0] = *(void *)((char *)&xmmword_100283D10 + 4);
  v0.i32[2] = HIDWORD(xmmword_100283D10);
  int8x16_t v6 = vextq_s8(v2, v0, 0xCuLL);
  int8x16_t v7 = v0;
  v7.i32[3] = dword_100283D20[0];
  int8x16_t v8 = (int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v6, v4), vdupq_n_s32(0x95BD1EF9));
  int32x4_t v9 = (int32x4_t)veorq_s8(vandq_s8(v7, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0xA01EC64F));
  int8x16_t v10 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v9, v9), (int8x16_t)vdupq_n_s32(0xB1772202)), v9), vdupq_n_s32(0xA7446EFE));
  int32x4_t v11 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vaddq_s32(vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v10, (int8x16_t)vdupq_n_s32(0x50C74406u)), (int8x16_t)vdupq_n_s32(0x40454401u)), (int32x4_t)veorq_s8(vandq_s8(v10, (int8x16_t)vdupq_n_s32(0xAF38BBF8)), (int8x16_t)vdupq_n_s32(0x25202041u))), v5), vandq_s8(v8, v4)), (int8x16_t)vdupq_n_s32(0x68E6C40Eu));
  v12.i32[0] = *((_DWORD *)&STACK[0x598] + (DWORD1(xmmword_100283D10) & (v3 ^ 0x5E1u)));
  v12.i32[1] = *((_DWORD *)&STACK[0x598] + (BYTE8(xmmword_100283D10) & 1));
  v12.i32[2] = *((_DWORD *)&STACK[0x598] + (BYTE12(xmmword_100283D10) & 1));
  v12.i32[3] = *((_DWORD *)&STACK[0x598] + (dword_100283D20[0] & 1));
  xmmword_100283D10 = (__int128)veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_100284344, v12), (int8x16_t)vdupq_n_s32(0x4DF06F9Fu)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v11, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v11, v11), (int8x16_t)vdupq_n_s32(0xBF541A06))), vdupq_n_s32(0xDFAA0D03)), 1uLL));
  return ((uint64_t (*)(void))*(&off_10026D1A0 + v3))();
}

uint64_t sub_1000D9F38@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, int a5@<W8>)
{
  int8x16_t v7 = (unsigned int *)(a2 + 4 * (v6 + a3));
  unsigned int v8 = a5 - 905300471 + (v5 & 0x80000000) - 877469229;
  uint64_t v9 = v6 + 1;
  int v10 = *(_DWORD *)(a2 + 4 * (v9 + a3));
  unsigned int v11 = ((2 * (v10 & 0x7FFFFFFE ^ 0xA01EC64F)) & 0xB1772202) - (v10 & 0x7FFFFFFE ^ 0xA01EC64F) - 1488687362;
  unsigned int v12 = (((v11 & 0x50C74406 ^ 0x40454401) + (v11 & 0xAF38BBF8 ^ 0x25202041) - 2) | v8 & 0x80000000) ^ 0x68E6C40E;
  *int8x16_t v7 = v7[397] ^ *((_DWORD *)&STACK[0x598] + (v10 & 1)) ^ ((v12 - ((2 * v12) & 0xBF541A06) - 542503677) >> 1) ^ 0x4DF06F9F;
  return (*(uint64_t (**)(void))(a1 + 8 * ((59 * (v9 != a4 + 3)) ^ a5)))();
}

uint64_t sub_1000DA04C(uint64_t a1, uint64_t a2, uint64_t a3, int8x16_t *a4)
{
  int v7 = (v5 + 905299962) | 0x97;
  unsigned int v8 = (const float *)&a4[56].i32[3];
  int8x16_t v9 = (int8x16_t)vld1q_dup_f32(v8);
  v10.i64[0] = 0x8000000080000000;
  v10.i64[1] = 0x8000000080000000;
  int32x4_t v11 = vdupq_n_s32(0x50ACF547u);
  v12.i64[0] = -1;
  v12.i64[1] = -1;
  v13.i64[0] = 0x8000000080000000;
  v13.i64[1] = 0x8000000080000000;
  v6.i64[0] = a4[57].i64[0];
  v6.i32[2] = a4[57].i32[2];
  int8x16_t v14 = vextq_s8(v9, v6, 0xCuLL);
  int8x16_t v15 = v6;
  v15.i32[3] = a4[57].i32[3];
  int8x16_t v16 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(v14, v10), vdupq_n_s32(0xB048335B)), (int8x16_t)vdupq_n_s32(0x3EB7DD8Du)), vdupq_n_s32(0xBDB6DC17));
  int8x16_t v17 = veorq_s8(vandq_s8(v15, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x272FD3DAu));
  int8x16_t v18 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v17, (int8x16_t)vdupq_n_s32(0xAF530AB8)), (int32x4_t)vorrq_s8(v17, (int8x16_t)v11)), v11);
  int32x4_t v19 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(veorq_s8(vandq_s8(v18, (int8x16_t)vdupq_n_s32(0x19EFBB5Eu)), (int8x16_t)vdupq_n_s32(0x18EA2843u)), vandq_s8(v18, (int8x16_t)vdupq_n_s32(0xE61044A0))), v12), (int8x16_t)vdupq_n_s32(0x9A4FF9DE));
  v20.i32[0] = *(_DWORD *)(v4 + 4 * (a4[57].i32[0] & 1));
  v20.i32[1] = *(_DWORD *)(v4 + 4 * (a4[57].i32[1] & 1));
  v20.i32[2] = *(_DWORD *)(v4 + 4 * (a4[57].i32[2] & 1));
  v20.i32[3] = *(_DWORD *)(v4 + 4 * (v15.i8[12] & 1));
  *(int8x16_t *)((char *)a4 + 4 * (v7 - 810) - 1704) = veorq_s8(veorq_s8(veorq_s8(*a4, v20), (int8x16_t)vdupq_n_s32(0x6DF6B964u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v19, vandq_s8(v16, v13)), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v19, v19), (int8x16_t)vdupq_n_s32(0x3F4F41E8u))), vdupq_n_s32(0x9FA7A0F4)), 1uLL));
  return (*(uint64_t (**)(void))(a3 + 8 * v7))();
}

void sub_1000DA210()
{
}

uint64_t sub_1000DA21C@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  int v2 = (-478670807
      - ((14 * (a2 ^ 0x2FF)) ^ 0x3221D18E ^ xmmword_100283D10 & 0x7FFFFFFE | 0xE3781029)
      + ((14 * (a2 ^ 0x2FF)) ^ 0x3221D18E ^ xmmword_100283D10 & 0x7FFFFFFE | 0x1C87EFD6)) ^ 0x4CFEB92;
  unsigned int v3 = (((v2 << ((3 * (a2 ^ 0x99)) ^ 0x3D)) & 0x64363AA0) - v2 - 840637777) ^ 0xED5439A7;
  dword_1002846CC = dword_100284340 ^ *((_DWORD *)&STACK[0x598] + (xmmword_100283D10 & 1)) ^ (((v3 | ~dword_1002846CC & 0x80000000)
                                                                                             - ((2 * v3) & 0x3077797A)
                                                                                             - 1740915523) >> 1) ^ 0x6E38B740;
  return (*(uint64_t (**)(void))(a1 + 8 * ((45 * (LODWORD(STACK[0x514]) > 0x26F)) ^ a2)))();
}

uint64_t sub_1000DA330()
{
  LODWORD(STACK[0x514]) = 0;
  int v2 = v0;
  int v3 = LODWORD(STACK[0x514])++;
  dword_1002846D8 = v3 + 340121380;
  uint64_t v4 = (*(_DWORD *)aHr + 504018905);
  unint64_t v5 = 516615401
     * ((0x641260299975D211
       - ((v1 - 152) ^ 0x44954548B8C9ED11 | 0x641260299975D211)
       + ((v1 - 152) ^ 0x44954548B8C9ED11 | 0x9BED9FD6668A2DEELL)) ^ 0x57C452E5AD20C6CDLL);
  *(_DWORD *)(v1 - 152) = v5;
  *(void *)(v1 - 144) = v4 - v5;
  *(_DWORD *)(v1 - 132) = (v2 - 564507341) ^ v5;
  *(void *)(v1 - 128) = v5 ^ 0x7E5D2002;
  *(_DWORD *)(v1 - 116) = (v2 - 185257397) ^ v5;
  *(_DWORD *)(v1 - 112) = v5 + v2 - 564507341 - 84;
  *(_DWORD *)(v1 - 120) = ((v2 - 564507341) ^ 0x4A) + v5;
  uint64_t v6 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v2 ^ 0xE79)))(v1 - 152);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v1 - 136)))(v6);
}

uint64_t sub_1000DA470()
{
  int v1 = LODWORD(STACK[0x41C]) - 535;
  if (v0 >= 0x7E5D2002) {
    int v2 = *(_DWORD *)aHr + 1;
  }
  else {
    int v2 = 1616013353;
  }
  *(_DWORD *)aHr = v2;
  return sub_100103A94(STACK[0x3D0], (uint64_t)&unk_10021F920, (uint64_t)&unk_10021F8F0, (uint64_t)&unk_10023AFC0, 0xE9FE122F, v1);
}

uint64_t sub_1000DA5F0()
{
  unint64_t v3 = STACK[0x420] + 3;
  STACK[0x338] = STACK[0x4C0];
  LODWORD(STACK[0x544]) = -1741588327;
  STACK[0x408] = v3;
  if (v3) {
    BOOL v4 = 1;
  }
  else {
    BOOL v4 = v0 == -604659854;
  }
  int v5 = v4;
  return (*(uint64_t (**)(void))(v2 + 8 * ((152 * v5) ^ v1)))();
}

uint64_t sub_1000DA64C@<X0>(int a1@<W8>)
{
  int v4 = v1 ^ 0x110;
  int v5 = (char *)&STACK[0x5A0] + STACK[0x338] + (v1 ^ 0x84488ABF828F3537);
  STACK[0x3D8] = (unint64_t)(v5 + 255);
  STACK[0x348] = (unint64_t)(v5 + 510);
  STACK[0x3E0] = (unint64_t)v5;
  STACK[0x3A8] = (unint64_t)(v5 + 528);
  return (*(uint64_t (**)(void, uint64_t, unint64_t, uint64_t))(v3
                                                                               + 8
                                                                               * (int)(((((((v4 + 117) & 0xD7) - 69) ^ ((a1 - 1816283062) > 0xD131EF37uLL)) & 1)
                                                                                      * ((((v4 + 1164288885) & 0xBA9A59D7)
                                                                                        + 580) ^ 0x301)) ^ (v4 + 1164288885) & 0xBA9A59D7)))((v2 + a1 - 1456910838), qword_100284C30, dword_100284A28 & 0xFFFFFFFFF413B3F8, 296520604);
}

uint64_t sub_1000DA764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v12 = a6 - v8;
  int8x16_t v13 = (unsigned __int8 *)(v10 + a4 + v6);
  unsigned int v14 = ((*(_DWORD *)(a2 + a3) ^ v13) & ((a6 - v8) ^ 0x7FFFFC86)) * v9;
  unint64_t v15 = (v14 ^ HIWORD(v14)) * v9;
  LODWORD(v13) = byte_100248B40[v15 >> 24] ^ *v13 ^ byte_100240450[v15 >> 24] ^ byte_100220FF0[(v15 >> 24) + 1] ^ v15 ^ (41 * (v15 >> 24));
  *(unsigned char *)(STACK[0x3E0] + a4 + v6) = ((_BYTE)v13 - ((2 * (_BYTE)v13) & 0x96) - 53) ^ byte_100223851[a4 + v6] ^ (v12 + 125) & 0xCF ^ 0x28;
  return (*(uint64_t (**)(void))(v11 + 8 * ((207 * (a4 + (v12 + 334) - 1222 == v7 + 255)) ^ v12)))();
}

void sub_1000DA7EC()
{
  STACK[0x4C0] = STACK[0x338];
  (*(void (**)(uint64_t))(v3 + 8 * ((266 * (v0 ^ 0x26F)) ^ 0xE12)))(v2);
  STACK[0x5E8] = 0;
  LODWORD(STACK[0x5F0]) = v1;
  JUMPOUT(0x1000D7DF0);
}

uint64_t sub_1000DA80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  STACK[0x488] = STACK[0x3A8];
  LODWORD(STACK[0x524]) = v9;
  STACK[0x4A8] = STACK[0x3D8];
  unsigned int v10 = ((235 * (a8 ^ 0x6E5) - 466) ^ (2 * v8) & 0x5E) + (v8 & 0x3F ^ 0xAB7DFABD);
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((308
                               * ((((v9 ^ 0x98317866) + 1417807185 + v10) ^ 0x7FE7C7F6)
                                - 2145896502
                                + ((2 * ((v9 ^ 0x98317866) + 1417807185 + v10)) & 0xFFCF8FEC) < 0xFFFFFFC0)) ^ a8)))();
}

uint64_t sub_1000DA8E4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v7 = v5 + 1417807185;
  if ((v7 + 1) > 0x40) {
    int v8 = v7 + 1;
  }
  else {
    int v8 = 64;
  }
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + (((-a5 - v6 + ((a1 + 1440) ^ 0xAB7DFDD8) + v8 > 0xE) * (a1 ^ 0x1DC)) ^ a1)))(2131970610);
}

uint64_t sub_1000DA994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, int a8)
{
  if ((v9 + a5 + 1417807186) > 0x40) {
    int v10 = v9 + a5 + 1417807186;
  }
  else {
    int v10 = 64;
  }
  unsigned int v11 = a8 - 1417807186 + v8 + v10;
  BOOL v13 = __CFADD__(v9 + a5 + 1417807185 + (a7 ^ 0x597) + 1198 - 1935, v11) || v11 > 0xF;
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + ((15 * v13) ^ a7)))(2131970610);
}

uint64_t sub_1000DAA10(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v7 = (char *)&STACK[0x5A0] + STACK[0x338] + (v3 + 1417807185) - 0x7BB775407D70C692;
  unint64_t v8 = (unint64_t)&v7[-v4];
  unint64_t v9 = (unint64_t)&v7[-v5];
  BOOL v10 = (unint64_t)&v7[-v4] < ((a3 - 1198) ^ 0x2F1uLL) || (unint64_t)&v7[-v5] < 0x10;
  unint64_t v11 = (unint64_t)&v7[STACK[0x320]];
  if (v11 < 0x10) {
    BOOL v10 = 1;
  }
  char v12 = (unint64_t)&v7[-v6] < 0x10 || v10;
  if (v8 < 0x10) {
    char v12 = 1;
  }
  if (v9 < 0x10) {
    char v12 = 1;
  }
  if (v11 < (a3 ^ 0x79FuLL)) {
    char v12 = 1;
  }
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (int)((35 * (v12 & 1)) ^ a3)))(2131970610);
}

uint64_t sub_1000DAAD8(int8x16_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(int8x16_t *)(STACK[0x3A8] + (((a6 + 169280197) & 0xF5E8FBF6 ^ STACK[0x398]) & (v7 + v9))) = veorq_s8(*v8, a1);
  return ((uint64_t (*)(uint64_t, uint64_t, int8x16_t *))*(&off_10026D1A0
                                                                 + ((1525 * (((v6 + 1) & 0x1FFFFFFF0) == 16)) ^ a6)))(((v6 + 1) & 0x1FFFFFFF0) + 2131970610, a3, &v8[1]);
}

void sub_1000DAB58()
{
}

void sub_1000DAB64()
{
  switch(((((v0 - 1604193480) & 0x5F9E07DB ^ 0x80ECB49E) + 2131970610 >= v1)
          * (((v0 + 2080209217) & 0x840287DB) - 1825)) ^ (v0 - 622))
  {
    case 0u:
LABEL_2:
      while (2)
      {
        switch((((LODWORD(STACK[0x3C0]) ^ 0x53B) - 164)
                * ((char)(LODWORD(STACK[0x3B8]) ^ *(unsigned char *)(STACK[0x480] + 96)) < -70)) ^ LODWORD(STACK[0x3C0]))
        {
          case 0:
            continue;
          case 1:
            goto LABEL_3;
        }
      }
    case 1u:
LABEL_3:
      while (2)
      {
        BOOL v2 = LODWORD(STACK[0x3B0]) < 0xFFFFFFC0;
        STACK[0x4C0] -= 640;
        int v3 = (_DWORD *)STACK[0x550];
        STACK[0x460] = STACK[0x550] + 56;
        v3[31] = -2116520046;
        v3[30] = 375050475;
        v3[32] = 1772312350;
        v3[33] = -517218410;
        v3[34] = -1772312351;
        v3[35] = 517218409;
        v3[38] = 1513631264;
        v3[37] = 1809559827;
        unint64_t v4 = STACK[0x3F0];
        STACK[0x528] = STACK[0x3F0];
        STACK[0x538] = v4;
        switch(((&unk_10021F920 ^ 0x480 ^ LODWORD(STACK[0x3E8])) * v2) ^ (&unk_10021F920
                                                                                        - 1520))
        {
          case 0u:
            goto LABEL_2;
          case 1u:
            continue;
        }
      }
  }
}

uint64_t sub_1000DCCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  unsigned int v9 = (*(_DWORD *)(a8 + 68) ^ 0x81D87792)
     + v8
     - 2116520046
     - (((21 * (a7 ^ 0x11C)) ^ 0x3B0E918) & (2 * ((*(_DWORD *)(a8 + 68) ^ 0x81D87792) + v8)));
  *(_DWORD *)(a8 + 68) = v9;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((1635 * ((v9 ^ 0x81D87792) < v8)) ^ a7)))();
}

uint64_t sub_1000DCD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  *(_DWORD *)(a8 + 64) = (a7 ^ 0x76C) + *(_DWORD *)(a8 + 64) - 1595;
  return ((uint64_t (*)(void))STACK[0x468])();
}

uint64_t sub_1000DCD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x4D8] = (unint64_t)*(&off_10026D1A0 + LODWORD(STACK[0x41C]) - 1592);
  return sub_1000DD2F4(a1, a2, a3, a4, a5, a6, a7, STACK[0x3A8]);
}

uint64_t sub_1000DCDB8(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v5 = v3 + 2131970610 - v4;
  LODWORD(STACK[0x344]) = v5;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((((a3 + 196) ^ 0xDAE ^ ((a3 - 817) | 0x140)) * (v5 < 8)) ^ a3)))();
}

uint64_t sub_1000DCE1C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v10 = v8 + 2131970610 + a7 - 1;
  BOOL v13 = v10 > 0xF || ((((a1 + 67) | 8) - v9 + 9) & 0xFu) < (v10 & 0xF) || 18143917 - v7 < v10;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((v13 * ((a1 - 30) ^ 0x7FD)) | a1)))();
}

uint64_t sub_1000DCE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (v9 + v14) + a8;
  unint64_t v17 = v16 - v8 - v10;
  uint64_t v18 = (v15 + 14) & 0xF;
  BOOL v20 = (unint64_t)(v16 - (v11 + v18)) >= 0x10 && v17 >= 0x10 && (unint64_t)(v16 - (v12 + v18)) >= 0x10;
  unint64_t v21 = ~(v13 + v18) + v16;
  int v23 = !v20 || v21 < 0x10;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((((8 * a5) ^ 0x3A90) + 11 * (a5 ^ 0x7E8) + 2431) * v23) ^ a5)))();
}

uint64_t sub_1000DCF24(int a1)
{
  LODWORD(STACK[0x3D8]) = a1 + 32;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((LODWORD(STACK[0x344]) >= ((a1 + 225) ^ 0x1CEu)) * (a1 + 258)) ^ a1)))();
}

uint64_t sub_1000DCF68(double a1, double a2, int8x16_t a3, double a4, int8x16_t a5, double a6, int8x16_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  unsigned int v19 = STACK[0x344] & 0xFFFFFFF0;
  LODWORD(STACK[0x30C]) = v18 + 11;
  LODWORD(STACK[0x310]) = v18 + 12;
  LODWORD(STACK[0x318]) = v18 + 13;
  STACK[0x3D8] = ((_BYTE)v18 - 1) & 0xF;
  STACK[0x390] = v18 & 0xF;
  STACK[0x388] = (v18 + 1) & 0xF;
  STACK[0x380] = ((_BYTE)v18 + 2) & 0xF;
  STACK[0x378] = (v18 + 3) & 0xF;
  STACK[0x370] = ((_BYTE)v18 + 4) & 0xF;
  STACK[0x368] = ((_BYTE)v18 + 5) & 0xF;
  STACK[0x360] = ((_BYTE)v18 + 6) & 0xF;
  STACK[0x358] = ((_BYTE)v18 + 7) & 0xF;
  STACK[0x350] = ((_BYTE)v18 + 8) & 0xF;
  v23.val[0].i64[0] = ((_BYTE)v18 - 50) & 0xF;
  v23.val[0].i64[1] = STACK[0x3D8];
  v23.val[1].i64[0] = STACK[0x390];
  v23.val[1].i64[1] = STACK[0x388];
  v23.val[2].i64[0] = STACK[0x380];
  v23.val[2].i64[1] = STACK[0x378];
  v23.val[3].i64[0] = STACK[0x370];
  v23.val[3].i64[1] = STACK[0x368];
  v23.val[0].i64[0] = vqtbl4q_s8(v23, a5).u64[0];
  v23.val[1].i64[0] = STACK[0x360];
  v23.val[1].i64[1] = STACK[0x358];
  v23.val[2].i64[0] = STACK[0x350];
  v23.val[2].i64[1] = ((_BYTE)v18 + 9) & 0xF;
  v23.val[3].i64[0] = ((_BYTE)v18 + 10) & 0xF;
  v23.val[3].i64[1] = STACK[0x30C] & 0xF;
  uint64_t v20 = STACK[0x310] & 0xF;
  uint64_t v21 = STACK[0x318] & 0xF;
  v23.val[0].i64[1] = vqtbl4q_s8(*(int8x16x4_t *)((char *)&v23 + 16), a5).u64[0];
  *(int8x16_t *)(a15 + (v16 - 18143918)) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v17 + (v18 - 2131970610)), *(int8x16_t *)((char *)&unk_10021F920+ (((_BYTE)v18 - 50) & 0xF))), veorq_s8(*(int8x16_t *)((char *)&unk_10021F8F0+ (((_BYTE)v18 - 50) & 0xF)), *(int8x16_t *)((char *)&unk_10023AFC0+ ((v18 - 50) & 0xF)+ 1))), a3), vmulq_s8(v23.val[0], a7));
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((v19 == 16) * (((v15 + 546) | 0x200) ^ 0x639)) ^ v15)))();
}

void sub_1000DD134()
{
}

uint64_t sub_1000DD144()
{
  STACK[0x468] = (unint64_t)*(&off_10026D1A0 + LODWORD(STACK[0x41C]) - 1566);
  STACK[0x3D8] = STACK[0x348];
  return sub_1000DDB74();
}

uint64_t sub_1000DD168()
{
  STACK[0x468] = (unint64_t)*(&off_10026D1A0 + LODWORD(STACK[0x41C]) - 1590);
  STACK[0x3D8] = (unint64_t)&unk_10023C323;
  return sub_1000DDB74();
}

uint64_t sub_1000DD1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x4D8] = (unint64_t)*(&off_10026D1A0 + LODWORD(STACK[0x41C]) - 1595);
  return sub_1000DD2F4(a1, a2, a3, a4, a5, a6, a7, STACK[0x3A8]);
}

uint64_t sub_1000DD1DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v16 = v8 + 1;
  char v17 = *(unsigned char *)(STACK[0x538] + (v8 + v11));
  *(unsigned char *)(a8 + (v12 + 1869071940)) = v17 + ((((a3 ^ v10) * v15) ^ 0xA6) & (2 * v17)) - 64;
  BOOL v18 = v16 + v14 < v9;
  if (v9 < v13 != v16 + v14 < v13) {
    BOOL v18 = v9 < v13;
  }
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((500 * v18) ^ (a3 - 910))))();
}

void sub_1000DD264()
{
}

void sub_1000DD270(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)(a8 + 64) = *(_DWORD *)(a8 + 64) + (((a1 ^ 0x55) - 1643) | 0x11) - 24;
  JUMPOUT(0x1000DD294);
}

uint64_t sub_1000DD2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  STACK[0x480] = a8;
  STACK[0x438] = v8;
  unsigned int v10 = ((2 * *(_DWORD *)(a8 + 68)) & 0x2E ^ 0x24)
      + ((v9 + 223) ^ 0xB676FC86 ^ *(_DWORD *)(a8 + 68) & (21 * (v9 ^ 0x68) - 1533));
  *(unsigned char *)(a8 + v10 + 1233715817) = 64;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((223 * (v10 + 1233715761 < 0xFFFFFFC8)) ^ v9)))(v10 - 1736101527);
}

uint64_t sub_1000DD390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((1492 * ((((a5 ^ 0x7F7) + 1233714010) ^ (a5 - 223)) + v5 < 0x40)) ^ a5)))();
}

uint64_t sub_1000DD3F0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3
                                                              + 8
                                                              * ((510
                                                                * (-1233716090 - v4 - v5 + 335 >= ((((v2 - 229265334) & 0xDAA4EFD)
                                                                                                  - 1581) ^ 8u))) ^ v2)))(a1, a2, a1);
}

uint64_t sub_1000DD448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(a7 ^ 0x93 ^ (89
                                                 * (((-75 * (a7 ^ 0xC)) ^ (((a7 ^ v8) & a7) >> (__clz(a7 ^ v8 | 1) ^ 0x1F))) & 1)))))();
}

uint64_t sub_1000DD49C(int a1, double a2, double a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11)
{
  int v12 = 42 * (a10 ^ 0x29);
  *(__n128 *)(a11 + (a1 - 1325149951)) = a4;
  BOOL v13 = ((v12 - 1399453313) & 0x5369F5F5) - 1441 != (v11 & 0x1FFFFFFF0);
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((v13 | (4 * v13)) ^ (v12 - 1252))))();
}

uint64_t sub_1000DD514(int a1, uint64_t a2, int a3)
{
  int v3 = (a1 - 1325151961 + 1005 * ((a3 - 1341488266) & 0x4FF57E6D ^ 0x822)) ^ (a3 - 1540);
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (int)((3132 * (((v3 & (a3 - 1540)) >> (__clz(v3 | 1) ^ 0x1F)) & 1)) ^ (a3 - 563))))();
}

uint64_t sub_1000DD5A4(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v1 ^ (8 * (1325147412 - a1 + (v1 ^ 0xBC6) + ((v1 - 996) | 0x200u) > 6)))))();
}

uint64_t sub_1000DD5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(a8 + (v8 + a5)) = v11;
  return (*(uint64_t (**)(void))(v9 + 8 * (((((a1 + 1) & 0x1FFFFFFF8) == 8) * ((v10 ^ 0x7EF) - 1020)) ^ v10)))();
}

uint64_t sub_1000DD62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  *(void *)(a8 + v8) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v11 == 0) * a7) ^ v10)))();
}

uint64_t sub_1000DD654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((56 * ((((a1 == a3) ^ a5) ^ (a5 - 47)) & 1)) ^ a5)))();
}

uint64_t sub_1000DD6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8)
{
  *(unsigned char *)(a8 + (v8 + a5)) = v12;
  return (*(uint64_t (**)(void))(v9
                              + 8 * (((v8 + ((a7 + 414) ^ (v10 + 3505)) < 0x38) * v11) ^ (a7 - 1382))))();
}

uint64_t sub_1000DD6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (int)((995
                                    * ((char)(*(unsigned char *)(a8 + 96) ^ (v8 + 20) & 0xF7 ^ 0x1B) >= (char)(((11 * ((v8 + 20) & 0xF7 ^ 0xCD)) ^ 0x39) + ((((v8 + 20) & 0xF7) + 90) | 0xBE)))) ^ (v8 + 1498453524) & 0xA6AF67F7)))();
}

uint64_t sub_1000DD760()
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((39 * (((v1 == -34) ^ ((v0 + 33) ^ (v0 + 102))) & 1)) ^ v0)))();
}

uint64_t sub_1000DD7B8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = *(_DWORD *)(a8 + 64);
  unsigned int v9 = *(_DWORD *)(a8 + 68);
  *(unsigned char *)(a8 + 56) = (30 * (a1 ^ 0x2E)
                       + ((v8 - 375050475) >> 21)
                       - (((v8 - 375050475) >> 20) & 0x10)
                       + 10) ^ 0xC8;
  *(unsigned char *)(a8 + 57) = (((v8 - 375050475) >> 13) - (((v8 - 375050475) >> 12) & 0x1A) - 115) ^ 0x4D;
  HIDWORD(v10) = v8 + 161820437;
  LODWORD(v10) = v9 ^ 0x80000000;
  *(unsigned char *)(a8 + 58) = (((v8 - 375050475) >> 5) - (((v8 - 375050475) >> 4) & 0x10) - 120) ^ 0x48;
  *(unsigned char *)(a8 + 59) = ((v10 >> 29) - ((2 * (v10 >> 29)) & 0x4E) + 39) ^ 0xE7;
  *(unsigned char *)(a8 + 60) = (v9 >> 21) ^ 0xCE;
  *(unsigned char *)(a8 + 61) = (v9 >> 13) ^ 3;
  *(unsigned char *)(a8 + 62) = (v9 >> 5) ^ 0x7C;
  *(unsigned char *)(a8 + 63) = ((8 * v9) ^ 0x90) + ((v9 >> 3) << 7) - 64;
  STACK[0x508] = (unint64_t)*(&off_10026D1A0 + (int)((30 * (a1 & 0xC44387FF ^ 0x32E) + 1053773341) & 0xC130AFE4));
  return sub_1000DDD54();
}

uint64_t sub_1000DDA30()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((63 * (((v1 - 11) ^ (((v1 - 1596) | 4u) - 4 < 0x10)) & 1)) ^ (v1 + 149))))();
}

uint64_t sub_1000DDA8C(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(unsigned char *)(a7 + a1) ^= *(unsigned char *)(v11 + a1) ^ 0x1E;
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((63 * (((v8 + 45) ^ (v9 + 1 + a8 + ((v8 - 4) | 4u) < 0x10)) & 1)) ^ (v8 + 1741))))();
}

void sub_1000DDAEC(double a1, double a2, double a3, int8x16_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int8x16_t *a11)
{
  *a11 = veorq_s8(*a11, a4);
  BOOL v13 = (_DWORD *)STACK[0x3E0];
  v13[156] = 1513631264;
  v13[149] = -2116520046;
  v13[148] = 375050475;
  v13[150] = 1772312350;
  v13[151] = -517218410;
  v13[152] = -1772312351;
  v13[153] = 517218409;
  v13[155] = 1809559827;
  STACK[0x468] = *(void *)(v11 + 8 * v12);
  JUMPOUT(0x1000DDB70);
}

uint64_t sub_1000DDB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1000DA80C(a1, a2, a3, a4, a5, a6, a7, v7 + 1426);
}

uint64_t sub_1000DDB90()
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (((((v0 ^ 0x52D ^ (((v2 - v1) | (unint64_t)(v1 - v2)) >> 63)) & 1) == 0)
                               * ((v0 - 1421) ^ 0x397)) ^ v0)))();
}

uint64_t sub_1000DDBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v5
                                                                               + 8
                                                                               * ((1562
                                                                                 * (((3 * (v7 ^ 0x29) - 535) & v6) == 0)) ^ v7)))(a1, a2, v4 + a1, a4, v7 ^ 0x6A0);
}

uint64_t sub_1000DDC30(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = (v10 - 20);
  *(void *)(a8 + v11 + a1 - 1670 + v8 + 167 * (v13 ^ 0x201)) = v12;
  BOOL v14 = ((v13 ^ 0x1FFFFFDF3) & v9) - 8 != v8;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (int)(((4 * v14) | (16 * v14)) ^ v13)))();
}

void sub_1000DDC9C()
{
}

uint64_t sub_1000DDCA4()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((((798 * (v3 ^ 0x684)) ^ 0x63A) + v3 - 1634) * (v1 == v2)) ^ v3)))();
}

uint64_t sub_1000DDCF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(a8 + (a3 + v9)) = v12;
  return (*(uint64_t (**)(void))(v8
                              + 8 * ((((v10 + a3 + 1 + 2010) < 0x40) * ((a5 ^ v11) - 22)) ^ (a5 - 1337))))();
}

void sub_1000DDD34()
{
}

void sub_1000DDD54()
{
}

uint64_t sub_1000DDD64(uint64_t a1, uint64_t a2, int a3)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (((((a3 ^ 0x604) + 249) ^ 0x1A6 ^ (84 * (a3 ^ 0x604))) * (LODWORD(STACK[0x344]) == v3)) | a3)))();
}

uint64_t sub_1000DDDD4()
{
  LODWORD(STACK[0x3D8]) = v0 + 32;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((((v0 - 245) | 0x560) ^ 0x1DA) * ((STACK[0x344] & 8) == 0)) ^ v0)))();
}

uint64_t sub_1000DDE20(double a1, double a2, double a3, double a4, double a5, int8x16_t a6, double a7, int8x8_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  unsigned int v23 = STACK[0x344] & 0xFFFFFFF8;
  LODWORD(STACK[0x390]) = v17 + v19;
  LODWORD(STACK[0x388]) = v23 - 8;
  LODWORD(STACK[0x380]) = v20 + LODWORD(STACK[0x3D8]) - 281;
  v25.val[0].i64[0] = ((_BYTE)v20 + (_BYTE)v21 + (_BYTE)v16) & 0xF;
  v25.val[0].i64[1] = ((_BYTE)v20 + (_BYTE)v16 - 1) & 0xF;
  v25.val[1].i64[0] = ((_BYTE)v20 + (_BYTE)v16) & 0xF;
  v25.val[1].i64[1] = ((_BYTE)v20 + (_BYTE)v16 + 1) & 0xF;
  v25.val[2].i64[0] = ((_BYTE)v20 + (_BYTE)v16 + 2) & 0xF;
  v25.val[2].i64[1] = ((_BYTE)v20 + (_BYTE)v16 + 3) & 0xF;
  v25.val[3].i64[0] = (LODWORD(STACK[0x380]) + v16) & 0xFLL;
  v25.val[3].i64[1] = ((_BYTE)v20 + (_BYTE)v16 + 5) & 0xF;
  *(int8x8_t *)(a16 + (LODWORD(STACK[0x390]) + v16)) = veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v18+ (v20 + v21 + v16)), *(int8x8_t *)((char *)&unk_10021F920+ v25.val[0].i64[0])), veor_s8(*(int8x8_t *)((char *)&unk_10021F8F0+ v25.val[0].i64[0]), *(int8x8_t *)((char *)&unk_10023AFC0+ v25.val[0].i64[0]+ 1))), v22), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v25, a6), a8));
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((52 * (LODWORD(STACK[0x388]) == v16)) ^ LODWORD(STACK[0x3D8]))))();
}

void sub_1000DDF48()
{
}

uint64_t sub_1000DDF50()
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((3148
                               * (((((LODWORD(STACK[0x344]) - v0) | (v0 - LODWORD(STACK[0x344]))) >> ((48 * ((LOBYTE(STACK[0x3D8]) + 50) ^ 0x48)) ^ 0x4F)) & 1) == 0)) ^ (LODWORD(STACK[0x3D8]) + 818))))();
}

uint64_t sub_1000DDFE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = (v10 + v16);
  *(unsigned char *)(a8 + (a3 + v15)) = *(unsigned char *)(v11 + v17) ^ *(unsigned char *)(v12 + (v17 & 0xF)) ^ *(unsigned char *)(v13 + (v17 & 0xF)) ^ *(unsigned char *)((v17 & 0xF) + v14 + 1) ^ (39 * (v17 & 0xF)) ^ 0xC0;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((1694 * (v10 + 1 + v16 < v9)) ^ ((v8 - 1048) | 0x2A6))))();
}

void sub_1000DE060()
{
}

uint64_t sub_1000DE06C()
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((167
                               * ((*(unsigned int *)(STACK[0x460] + 92) | ((unint64_t)(*(_DWORD *)(STACK[0x460] + 92) < 0x6BDBB103u) << 32))
                                - 1150605463 == ((v0 - 1007) ^ 0x1DEu) + 658953433)) ^ (v0 - 214))))();
}

uint64_t sub_1000DE0E0()
{
  STACK[0x4C0] -= 32;
  STACK[0x580] = (unint64_t)&STACK[0x608];
  STACK[0x588] = STACK[0x3D0];
  STACK[0x568] = (unint64_t)&STACK[0x608];
  STACK[0x370] = (unint64_t)&STACK[0x608];
  STACK[0x578] = (unint64_t)&STACK[0x608];
  STACK[0x590] = 0;
  uint64_t v1 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + v0 + 1216))(1028);
  STACK[0x590] = v1;
  uint64_t v2 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v0 ^ 0xBC0)))(1032);
  STACK[0x570] = v2;
  if (v1) {
    BOOL v3 = v2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = !v3;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((v4 * (((v0 + 149) ^ 0x615) + 755)) ^ v0)))();
}

uint64_t sub_1000DE180()
{
  uint64_t v1 = LOBYTE(STACK[0x604]) ^ 0x89;
  int v2 = LOBYTE(STACK[0x5F9]) ^ 0x46 ^ byte_100248A30[LOBYTE(STACK[0x5F9]) ^ 0xDELL];
  LODWORD(STACK[0x420]) = (v0 + 1266947006) & 0xB47BEF6D;
  int v3 = (((v2 - ((2 * v2) & 0x74) + 7232) << (((v0 - 66) & 0x6D) - 89)) - 393216) ^ 0x1C3A0000;
  int v4 = v3 - ((2 * v3) & 0x231E0000);
  unsigned int v5 = byte_10023CFC0[v1];
  int v6 = LOBYTE(STACK[0x603]);
  unsigned int v7 = ((v5 >> 1) & 4 | 0x41) ^ (((2 * (v5 & 0x14 ^ 0x15)) & 0xFFFFFFE7) - (v5 & 0x14 ^ 0x15) + 68) | ((v5 & 0xEB ^ 0xFFFFFFCA | 0xFFFFFF95) - (v5 & 0xEB ^ 0xFFFFFFCA | 0x6A) + 106) ^ (~(byte_10023CFC0[v1] >> 1) | 0xFFFFFFBF);
  unsigned int v8 = v7 - ((2 * v7) & 0xFFFFFF94) - 54;
  LODWORD(v1) = ((((v8 ^ 0xCA) - ((2 * (v8 ^ 0xCA)) & 0x90)) << 24) + 1207959552) ^ 0x48000000;
  unsigned int v9 = ((2 * (v6 ^ 0x7C)) & 0xFFFFFFEF) + (v6 ^ 0xF7FDFE8B);
  int v10 = byte_100249A60[LOBYTE(STACK[0x5FC]) ^ 0xDLL];
  unsigned int v11 = v9
      + 134349065
      + ((-(v6 ^ 0xA8) - 2146892799 + v9 - ((2 * (-(v6 ^ 0xA8) - 2146892799 + v9) + 267516432) & 0x9522CF46) - 762682197) ^ 0xB56E985B);
  HIDWORD(v12) = ~v10;
  LODWORD(v12) = (v10 ^ 0x2A) << 24;
  int v13 = (v12 >> 25) - ((2 * (v12 >> 25)) & 0x44) + 34;
  unsigned int v14 = v13 ^ 0x5E ^ (((4 * v13) ^ 0xFFFFFF88) - ((2 * ((4 * v13) ^ 0xFFFFFF88)) & 0x98) + 79);
  int v15 = ((v14 - ((2 * v14) & 0x48)) << 24) - 1543503872;
  int v16 = byte_100248A30[LOBYTE(STACK[0x606]) ^ 0xF1] ^ LOBYTE(STACK[0x606]);
  unsigned int v17 = ((((v16 ^ 0xCF) - ((2 * (v16 ^ 0xCF)) & 0xF6)) << 8) - 1175749888) ^ 0xB9EB7B00;
  LODWORD(v1) = (v1 - ((2 * v1) & 0x50000000) - 1467118157) ^ 0xA88D8DB3 | (v17 - ((2 * v17) & 0x2BC88E00) + 1441023891) ^ 0x55E44793;
  int v18 = v1 - ((2 * v1) & 0x57C35352);
  unint64_t v19 = STACK[0x588];
  unint64_t v20 = *(unsigned __int8 *)(STACK[0x588] + 5);
  STACK[0x350] = v20;
  int v21 = (unsigned __int8 *)v19;
  LODWORD(v19) = byte_100249A60[v20 ^ 0x89];
  HIDWORD(v12) = ~v19;
  LODWORD(v12) = (v19 ^ 0x2A) << 24;
  LODWORD(v20) = (v12 >> 25) - ((2 * (v12 >> 25)) & 0xFFFFFFEA) + 117;
  LODWORD(v20) = v20 ^ 0xC8 ^ (((4 * v20) ^ 0xD6) - 1);
  LODWORD(v20) = (((v20 - ((2 * v20) & 0x182)) << 16) + 1103167488) ^ 0x41C10000;
  LODWORD(v20) = (v20 - ((2 * v20) & 0x19580000) + 212655842) ^ 0xCACDEE2 | ((v15 ^ 0xA4000000)
                                                                           - ((2 * v15) & 0x20000000)
                                                                           + 284357830) ^ 0x10F2F4C6;
  int v22 = v20 - ((2 * v20) & 0x4B931624);
  unint64_t v23 = v21[13];
  STACK[0x3B0] = v23;
  LODWORD(v20) = byte_10023CFC0[v23 ^ 0xD2];
  LODWORD(v23) = ((v20 >> 1) & 4 ^ 0xFFFFFF86)
               - ((v20 >> 1) & 4)
               + ((v20 >> 1) & 0x44444444 ^ 0x40);
  LODWORD(v20) = ((v23 ^ 0x7D) + ((2 * v23) | 0xFFFFFFCC) + 27) ^ v20;
  LODWORD(v23) = ((((v20 ^ 0x5D) - ((2 * (v20 ^ 0x5D)) & 0x14A)) << 16) - 240844800) ^ 0xF1A50000;
  unint64_t v24 = v21[10];
  STACK[0x320] = v24;
  LODWORD(v24) = byte_10023CFC0[v24 ^ 0xBF] ^ (-(~(byte_10023CFC0[v24 ^ 0xBF] >> 1) & 0x44) - 50);
  LODWORD(v24) = ((((v24 ^ 3) - ((2 * v24) & 0x178) + 7959258) << 8) - 7680) ^ 0x7972BC00;
  int v25 = v6 ^ 0xFB ^ byte_100248A30[v11];
  int v26 = (v24 - ((2 * v24) & 0x5EFEDE00) - 1350603006) ^ 0xAF7F6F02 | (v25
                                                                    - ((2 * v25) & 0xC)
                                                                    + 204849414) ^ 0xC35C106;
  unint64_t v27 = v21[3];
  STACK[0x348] = v27;
  int v28 = v27 ^ 0x17 ^ byte_100248A30[v27 ^ 6];
  LODWORD(v24) = (~(2 * v28) | 0xFFFFFF3B) + v28;
  unint64_t v29 = v21[6];
  STACK[0x2F0] = v29;
  v30 = v21;
  int v31 = byte_10023CFC0[v29 ^ 0x4C] ^ 0xC2 ^ (byte_10023CFC0[v29 ^ 0x4C] >> 1) & 0x44;
  int v32 = (((v31 - ((2 * v31) & 0x26)) << 8) + 2233088) ^ 0x221300;
  unsigned int v33 = (v22 - 1513518318) ^ 0xA5C98B12 | (v32 - ((2 * v32) & 0x3A9A7400) + 491600553) ^ 0x1D4D3AA9;
  LODWORD(v21) = v33 - ((2 * v33) & 0x42822C7A);
  unint64_t v34 = v30[8];
  STACK[0x318] = v34;
  LODWORD(v34) = byte_100249A60[v34 ^ 0xAD];
  HIDWORD(v12) = ~v34;
  LODWORD(v12) = (v34 ^ 0x2A) << 24;
  LODWORD(v34) = (v12 >> 25) - ((2 * (v12 >> 25)) & 0x7A) + 61;
  LODWORD(v34) = v34 ^ 0xE4 ^ (((4 * v34) ^ 0xFFFFFFF4) - ((2 * ((4 * v34) ^ 0xFFFFFFF4)) & 0x18) - 115);
  LODWORD(v29) = (((v34 - ((2 * v34) & 0xFFFFFFF7)) << 24) - 83886080) ^ 0xFB000000;
  int v35 = (v29 - ((2 * v29) & 0xC2000000) - 504796549) ^ 0xE1E96A7B | (v26 - ((2 * v26) & 0x34777B10) - 633619064) ^ 0xDA3BBD88;
  LODWORD(v29) = v35 - ((2 * v35) & 0x728362CA);
  unint64_t v36 = v30[15];
  STACK[0x310] = v36;
  unsigned int v37 = byte_100220240[v36 ^ 0x9D] ^ v36;
  int v38 = (v23 - ((2 * v23) & 0x1E760000) - 818195421) ^ 0xCF3B5423 | (v18 - 1411274327) ^ 0xABE1A9A9;
  unsigned int v39 = (v38 - ((2 * v38) & 0x10EE96CA) + 142035813) ^ 0x8774B65 | ((v37 ^ 0xDB)
                                                                  - ((2 * (v37 ^ 0xDB)) & 0x4E)
                                                                  - 923717081) ^ 0xC8F13227;
  unint64_t v40 = v30[7];
  STACK[0x3B8] = v40;
  int v41 = byte_100248A30[v40 ^ 0x1C];
  int v42 = v39 - ((2 * v39) & 0x5D4073AE) - 1365231145;
  LODWORD(STACK[0x3E8]) = v42;
  int v43 = (v21 - 1589569987) ^ 0xA141163D | ((v40 ^ 0xBF ^ v41)
                                                 - ((2 * (v40 ^ 0xBF ^ v41)) & 0x1E8)
                                                 + 920216308) ^ 0x36D962F4;
  unsigned int v44 = v43 - ((2 * v43) & 0xFED26EF2) + 2137601913;
  LODWORD(STACK[0x3C8]) = v44;
  unint64_t v45 = v30[9];
  STACK[0x2E8] = v45;
  LODWORD(v45) = byte_10023CFC0[v45 ^ 0x7C] ^ 0xB ^ (((byte_10023CFC0[v45 ^ 0x7C] >> 1) & 0x44 ^ 0xB7) - 1);
  LODWORD(v45) = ((v45 - ((2 * v45) & 0x98)) << 16) - 2142502912;
  unint64_t v46 = *v30;
  STACK[0x388] = v46;
  STACK[0x290] = (unint64_t)v30;
  int v47 = byte_100249A60[v46 ^ 0x23];
  HIDWORD(v12) = ~v47;
  LODWORD(v12) = (v47 ^ 0x2A) << 24;
  int v48 = (v12 >> 25) - 2 * ((v12 >> 25) & 0xF) + 15;
  LODWORD(v45) = (v29 - 1186877083) ^ 0xB941B165 | ((v45 ^ 0x804C0000) - ((2 * v45) & 0x1A220000) + 219229773) ^ 0xD112E4D;
  int v49 = v48 ^ (((4 * v48) ^ 0x3C) - ((2 * ((4 * v48) ^ 0x3C)) & 0x20) - 110) ^ 7;
  int v50 = (((v49 - ((2 * v49) & 0xA)) << 24) + 83886080) ^ 0x5000000;
  unint64_t v51 = v30[2];
  STACK[0x2F8] = v51;
  LODWORD(v29) = byte_10023CFC0[v51 ^ 0xDF] ^ 0xE3 ^ (((byte_10023CFC0[v51 ^ 0xDF] >> 1) & 0x44444444)
                                                    - ((byte_10023CFC0[v51 ^ 0xDF] >> 1) & 4)
                                                    + ((byte_10023CFC0[v51 ^ 0xDF] >> 1) & 4 ^ 0x36)) & 0x5C;
  LODWORD(v29) = (((v29 - ((2 * v29) & 0x77777777)) << 8) + 197114624) ^ 0xBBFBB00;
  int v52 = (v29 - ((2 * v29) & 0x1CC14E00) + 1314957182) ^ 0x4E60A77E | (v4 + 294623957) ^ 0x118F9AD5;
  unsigned int v53 = (v52 - ((2 * v52) & 0x7BE0626A) - 1108332235) ^ 0xBDF03135 | (v50 - ((2 * v50) & 0xCA000000) + 1710981428) ^ 0x65FB8134;
  LODWORD(v24) = v24 + 1477429347;
  LODWORD(STACK[0x3F0]) = v24;
  int v54 = (v53 - ((2 * v53) & 0x5E81F540) + 792787616) ^ 0x2F40FAA0 | v24 ^ 0x580FC862;
  int v55 = dword_1002247E0[v8 ^ 0xB0];
  HIDWORD(v12) = v55 ^ 0x1A6468;
  LODWORD(v12) = v55 ^ 0xDFFFFFFF;
  int v56 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0x5A3F87E) + 47316031;
  LODWORD(v24) = (((2 * v56) ^ 0x5A3F87E) - ((2 * ((2 * v56) ^ 0x5A3F87E)) & 0x4DB0BF34) + 651714459) & 0xE97D4E04 ^ 0x36DAFFFA;
  LODWORD(v24) = (v24 - 781877917 + ((2 * v24) & 0x82CA9800 ^ 0xDFFF9D3B)) ^ v56;
  HIDWORD(v12) = v24 ^ 0x6D;
  LODWORD(v12) = v24 ^ 0xFBFC8000;
  LODWORD(v24) = (v12 >> 8) - ((2 * (v12 >> 8)) & 0x12D2B96C) - 1989583690;
  int v57 = dword_1002247E0[v16 ^ 0xAD];
  HIDWORD(v12) = v57 ^ 0x1A6468;
  LODWORD(v12) = v57 ^ 0xDFFFFFFF;
  int v58 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0x32826E4C) + 423704358;
  unsigned int v59 = (((2 * v58) ^ 0x32826E4C) - 666468200 + (~(2 * ((2 * v58) ^ 0x32826E4C)) | 0x4F72FED3)) & 0xE97D4E04 ^ 0xDEC6B1FE;
  unsigned int v60 = (v59 - ((2 * v59) & 0xC2858F3C) - 515717218) ^ v58;
  HIDWORD(v12) = v60 ^ 0x4BF188;
  LODWORD(v12) = v60 ^ 0xD0000000;
  int v61 = (v12 >> 24) - ((2 * (v12 >> 24)) & 0x950D36C0);
  LODWORD(v20) = dword_100239C90[v20 ^ 0xC4];
  LODWORD(v20) = v20 - ((2 * v20 + 54081700) & 0xCD54E736) - 397996051;
  HIDWORD(v12) = v20 ^ 0xD398;
  LODWORD(v12) = v20 ^ 0x181B0000;
  unsigned int v62 = (v37 ^ 0xE7ABAAEA) + 2 * (v37 ^ 0x15);
  int v63 = dword_1002451F0[v37 ^ 0x2D] ^ (v62 + 1414183536 + ((2 * v62 + 3902) & 0x25A0 ^ 0x7FFDBFFF)) ^ ((v12 >> 16) - ((2 * (v12 >> 16)) & 0x4FCA2088) + 669323332) ^ (v61 - 897148064);
  LODWORD(v20) = v54 - 1575863144 - ((2 * v54) & 0x4424793A) + 5;
  LODWORD(STACK[0x3E0]) = v20;
  LODWORD(v20) = v63 ^ v20 ^ v24;
  int v64 = v45 - ((2 * v45) & 0x1931368) + 13207988;
  int v65 = v44 ^ 0x45B95C0C ^ v20;
  int v66 = v20;
  int v67 = v64;
  LODWORD(STACK[0x3A0]) = v64;
  LODWORD(STACK[0x400]) = v65 ^ v64;
  int v68 = v65;
  LODWORD(STACK[0x3C0]) = v65;
  unsigned int v69 = v65 ^ v64 ^ v42;
  LODWORD(v20) = ((HIWORD(v69) & 0xFB ^ 0x42) + (HIWORD(v69) & 0xDA ^ 0xDF1BA498) - ((HIWORD(v69) & 0xFB ^ 0x42) & 0xDA)) ^ 0xDD6AC498;
  int v70 = dword_1002247E0[(((v69 >> 8) & 0x66 ^ 0xC81D8805) + ((v69 >> 8) & 0x99) - 1) ^ 0xC81D8811];
  HIDWORD(v12) = v70 ^ 0x1A6468;
  LODWORD(v12) = v70 ^ 0xDFFFFFFF;
  int v71 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xB2DB3BA6) + 1500356051;
  LODWORD(v20) = ((v20 | 0x62520AC9) - (v20 | 0x9DADF536) - 1649543882) ^ ((((-(HIWORD(v69) | 3) ^ 6)
                                                                           - 1) & 4 ^ 0xBF)
                                                                         - 1162105329);
  unsigned int v72 = (((2 * v71) ^ 0xB2DB3BA6) - ((2 * ((2 * v71) ^ 0xB2DB3BA6)) & 0x59C4B774) - 1394451525) & 0xE97D4E04 ^ 0xBEE2FBFA;
  unsigned int v73 = (v72 - 389190910 + ((2 * v72) & 0xD09A9400 ^ 0xFEFFBDFF)) ^ v71;
  HIDWORD(v12) = v73 ^ 0xE8F7E2;
  LODWORD(v12) = v73 ^ 0x99999999;
  int v74 = (v12 >> 24) - ((2 * (v12 >> 24)) & 0x49C2BCE) + 38671847;
  LODWORD(v20) = ((v20 ^ 0xDA98C4A8) - ((2 * (v20 ^ 0xDA98C4A8) - 1498782404) & 0xB06DF5C6) + 730606977) ^ dword_1002451F0[v20 ^ 0xDA98C490];
  HIDWORD(v12) = v20 ^ 0x423D;
  LODWORD(v12) = v20 ^ 0x941E0000;
  LODWORD(v20) = v12 >> 16;
  int v75 = dword_1002247E0[HIBYTE(v69) ^ 6];
  HIDWORD(v12) = v75 ^ 0x1A6468;
  LODWORD(v12) = v75 ^ 0xDFFFFFFF;
  int v76 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xD38102BA) - 373259939;
  LODWORD(v23) = (((2 * v76) ^ 0xD38102BA) - ((2 * ((2 * v76) ^ 0xD38102BA)) & 0x284E68B0) - 1809370024) & 0xE97D4E04 ^ 0x96A7B5FA;
  int v77 = (v23 - ((2 * v23) & 0x40B00808) - 1613364691) ^ v76;
  LODWORD(v23) = v69;
  LODWORD(v45) = v69;
  unsigned int v78 = ((v69 ^ 0x340885B | 0x3A04E923) - (v69 ^ 0x340885B | 0xC5FB16DC) - 973400356) ^ 0x39446198;
  HIDWORD(v12) = v77 ^ 0xB0;
  LODWORD(v12) = v77 ^ 0x61528500;
  int v79 = v45;
  LODWORD(STACK[0x274]) = v45;
  int v80 = (v45 ^ 0xF014E35B)
      + (((v45 ^ 0x56B8658C) + 1) ^ 0xFB9CF6FE)
      + ((2 * ((v45 ^ 0x56B8658C) + 1)) & 0xF739EDFC)
      + 73599234;
  int v81 = v74 ^ dword_1002451F0[(((2 * (v23 ^ 0x2803000F)) & 0x500401B6)
                             - (v23 ^ 0x2803000F)
                             - 794745052) ^ 0xF8A227F3] ^ ((v12 >> 8) - ((2 * (v12 >> 8)) & 0x5DFAD51A) - 1359123827) ^ v66 ^ (v78 - ((2 * v78 + 648701244) & 0x4E42C61E) - 92891731) ^ (v20 - 1323107881 - ((2 * v20) & 0x624604A8) + 2173);
  int v82 = ((v80 - ((2 * v80) & 0xF0ACBFB6) - 128557093) ^ 0x7A9A02B) + (v45 ^ 0xF014E35B);
  LODWORD(v20) = v82 - ((2 * v82) & 0xC7D5DA22) + 1676340497;
  int v83 = v81 ^ v67;
  int v84 = v81;
  int v85 = v81 ^ v67 ^ 0x4A7BE995;
  LODWORD(v23) = (((unsigned __int16)(v85 ^ v20) >> 8) ^ 0xF7 | 0x130A0C17)
               - (((unsigned __int16)(v85 ^ v20) >> 8) ^ 0xF7 | 0xECF5F3E8)
               - 319425560;
  LODWORD(v23) = dword_100249660[((v23 & 0x100A0CCA ^ 0x80652049) + (v23 & 0x3000335) - 1) ^ 0x936F2C28];
  LODWORD(v23) = 96924509 * v23 - ((193849018 * v23 - 799979766) & 0xBEA90EB6) + 1199385312;
  unsigned int v86 = (((2 * ((v23 >> 2) & 0x94457BF ^ 0x904462A)) & 0x10800646)
       - ((v23 >> 2) & 0x94457BF ^ 0x904462A)
       - 1246440228) ^ 0xADA490E8;
  LODWORD(v23) = (v86 - ((2 * v86) & 0x5B287186) + 764754115) ^ v23;
  int v87 = ((v85 ^ v20) >> 16);
  LODWORD(STACK[0x3D8]) = v85 ^ v20;
  unsigned int v88 = (((2 * (v87 ^ 7)) & 0x122) - (v87 ^ 7) - 1424403090) ^ 0xEDBB556A;
  HIDWORD(v12) = v23 ^ 0xB93408;
  LODWORD(v12) = v23 ^ 0xDC000000;
  LODWORD(v23) = (v12 >> 24) - ((2 * (v12 >> 24)) & 0x4770E68E) - 1548192953;
  unsigned int v89 = ((v87 ^ 0xE8100882 | 0xDCF6EE8F) - (v87 ^ 0xE8100882 | 0x23091170) + 587796848) ^ 0x34E6E635;
  int v90 = (v89 - ((2 * v89 + 111830332) & 0x73EFE9E) + 1458876909) ^ dword_1002451F0[(((2 * v88) | 0xE8C3AB2C)
                                                                                  - v88
                                                                                  + 194914922) ^ 0xB2C3D595];
  HIDWORD(v12) = v90 ^ 0xC791;
  LODWORD(v12) = v90 ^ 0x4FB70000;
  int v91 = (v12 >> 16) - ((2 * (v12 >> 16)) & 0xFF2757BC) - 7099426;
  HIDWORD(v12) = v91 ^ 0xABDE;
  LODWORD(v12) = v91 ^ 0xFF930000;
  int v92 = (v12 >> 16) - ((2 * (v12 >> 16)) & 0x5B17EBB0) - 1383336488;
  LODWORD(v23) = v84 ^ v23;
  LODWORD(STACK[0x3A8]) = v84;
  HIDWORD(v12) = v23 ^ 0xE16F;
  LODWORD(v12) = v23 ^ 0x51DD0000;
  int v93 = dword_100249660[(v85 ^ v20) ^ 0x1C];
  LODWORD(v23) = v92 ^ ((v12 >> 16) - ((2 * (v12 >> 16)) & 0x2DD430F6) + 384440443);
  unsigned int v94 = 96924509 * v93 - ((193849018 * v93 - 799979766) & 0xA42B73AA) + 977165658;
  HIDWORD(v12) = v23 ^ 0x4B6A;
  LODWORD(v12) = v23 ^ 0x42510000;
  LODWORD(v23) = (v12 >> 16) - ((2 * (v12 >> 16)) & 0x79BE2E42) + 1021253409;
  unsigned int v95 = (((v94 >> 2) & 0x94457BF ^ 0x844531D)
       + ((v94 >> 2) & 0x444017 ^ 0xA6820002)
       - (((v94 >> 2) & 0x94457BF ^ 0x844531D) & 0x444017)) ^ 0xBE844D37;
  LODWORD(v19) = dword_100249660[((v85 ^ v20) >> 24) ^ 0xC8];
  LODWORD(v19) = 96924509 * v19 - ((193849018 * v19 + 1347503882) & 0x5C9E90D2) - 1770525714;
  LODWORD(v19) = (v19 >> 2) & 0x94457BF ^ v19;
  HIDWORD(v12) = v19 ^ 0x6B;
  LODWORD(v12) = v19 ^ 0x19679200;
  int v96 = v94 ^ ((v95 | 0xECFE66CB) - (v95 | 0x13019934) + 318871860) ^ ((v12 >> 8)
                                                                     - ((2 * (v12 >> 8)) & 0xC71780CE)
                                                                     + 1670103143) ^ 0xA83E53F6 ^ v23;
  LODWORD(STACK[0x410]) = v84 ^ v68;
  LODWORD(v23) = v96 ^ v84 ^ v68;
  LODWORD(v45) = v96;
  LODWORD(STACK[0x344]) = v96;
  int v97 = v23 ^ 0xDC8BE651 ^ v85;
  LODWORD(STACK[0x408]) = v97;
  unsigned int v98 = v23 ^ 0xDC8BE651 ^ v20;
  LODWORD(v19) = ((v83 ^ 0xB1BED69B) - ((2 * (v83 ^ 0xB1BED69B) + 1990652498) & 0x7CA94AA0) - 1180164487) ^ v83 ^ ((v83 ^ 0xCAEDAFB3) - ((2 * (v83 ^ 0xCAEDAFB3) + 2) & 0x85A71598) - 1026323763);
  unsigned int v99 = (BYTE1(v98) ^ 0x9D | 0x379146E7) - (BYTE1(v98) ^ 0x9D | 0xC86EB918) - 932267752;
  int v100 = dword_1002247E0[((v99 & 0x261100C0) + (v99 ^ 0x37D104E5) - ((v99 ^ 0x37D104E5) & 0xC0) - 938727424) ^ 0xEE5D6AA2];
  HIDWORD(v12) = v100 ^ 0x1A6468;
  LODWORD(v12) = v100 ^ 0xDFFFFFFF;
  int v101 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xE296A284) - 246722238;
  LODWORD(v20) = (((2 * v101) ^ 0xE296A284) - 2 * (((2 * v101) ^ 0xE296A284) & 0x5BCB105E ^ (2 * v101) & 8) + 1540034647) & 0xE97D4E04 ^ 0x5FCBB1FE;
  int v102 = (v20 - 529225084 + ((2 * v20) & 0xC0E81400 ^ 0xFFFEBEFB)) ^ v101;
  HIDWORD(v12) = v102 ^ 0x77FAF1;
  LODWORD(v12) = v102 ^ 0x39000000;
  int v103 = (v12 >> 24) - ((2 * (v12 >> 24)) & 0xFD55E040) + 2125131808;
  int v104 = ((HIWORD(v98) & 0x8C ^ 0x5A278CFB) - (HIWORD(v98) & 0x73)) ^ 0x5A278CCA;
  unsigned int v105 = (v104 - ((2 * v104 - 1498782404) & 0x8202056E) - 1059046059) ^ dword_1002451F0[((((HIWORD(v98) & 0xCA)
                                                                                         + (BYTE2(v98) ^ 0x51020CCA)) | 0x8238C200)
                                                                                       - ((BYTE2(v98) ^ 0x51020CCA) & 0x10004CA)) ^ 0xD23ACA09];
  HIDWORD(v12) = v105 ^ 0xB269;
  LODWORD(v12) = v105 ^ 0x21A30000;
  int v106 = (v12 >> 16) - ((2 * (v12 >> 16)) & 0x55A0E42C) + 718303766;
  int v107 = dword_1002247E0[HIBYTE(v98) ^ 0xB4];
  HIDWORD(v12) = v107 ^ 0x1A6468;
  LODWORD(v12) = v107 ^ 0xDFFFFFFF;
  int v108 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0x8401FA9E) + 1107361103;
  unsigned int v109 = (((2 * v108) ^ 0x8401FA9E) - ((2 * ((2 * v108) ^ 0x8401FA9E)) & 0x1F4A6924) + 262485138) & 0xE97D4E04 ^ 0x1FA7B5FA;
  int v110 = (v109 + 31999178 - ((2 * v109) & 0x10D20808) + 3832) ^ v108;
  LODWORD(v30) = v98;
  HIDWORD(v12) = v110 ^ 0x39;
  LODWORD(v12) = v110 ^ 0x64A14800;
  int v111 = (v12 >> 8) - ((2 * (v12 >> 8)) & 0x90E7B9AE) + 1215552727;
  int v112 = dword_1002247E0[((v98 ^ 0x51B1297)
                        + (v98 & 0xC7 ^ 0x9004A840)
                        - ((v98 ^ 0x51B1297) & 0x902C7)) ^ 0x9516B833];
  HIDWORD(v12) = v112 ^ 0x1A6468;
  LODWORD(v12) = v112 ^ 0xDFFFFFFF;
  int v113 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xECB43D28) + 1985617556;
  unsigned int v114 = (((2 * v113) ^ 0xECB43D28) - ((2 * ((2 * v113) ^ 0xECB43D28)) & 0xB26648CC) + 1496523878) & 0xE97D4E04 ^ 0x5FB3B5FE;
  int v115 = (v114 - ((2 * v114) & 0x50101408) - 1786410684) ^ v113 ^ v111 ^ v45 ^ v106 ^ v103;
  LODWORD(STACK[0x330]) = v115;
  unsigned int v116 = v115 ^ 0x96E7464E;
  int v117 = v115 ^ 0x96E7464E ^ v23 ^ 0x861B5476;
  LODWORD(STACK[0x368]) = v117;
  int v118 = v23 ^ 0x861B5476;
  LODWORD(STACK[0x300]) = v23 ^ 0x861B5476;
  LODWORD(STACK[0x32C]) = v117 ^ v97;
  unsigned int v119 = v117 ^ v97 ^ 0xCE6CCF47;
  int v120 = (int)v30;
  LODWORD(v20) = ((v119 ^ v30) >> 16) ^ 0x31;
  LODWORD(v20) = dword_100239C90[(((((2 * v20) & 0xFFFFFF0F) - v20 + 1620005496) & 0x60821187 ^ 0x702D87)
                                + ((((2 * v20) & 0xFFFFFF0F) - v20 + 1620005496) ^ 0xE4875278)
                                - (((((2 * v20) & 0xFFFFFF0F) - v20 + 1620005496) ^ 0xE4875278) & 0x80000187)) ^ 0x64FA3D58];
  LODWORD(v20) = v20 - ((2 * v20 + 54081700) & 0x92A7C3CC) - 890208712;
  HIDWORD(v12) = v20 ^ 0x41E5;
  LODWORD(v12) = v20 ^ 0x37E20000;
  LODWORD(v20) = (v12 >> 16) - ((2 * (v12 >> 16)) & 0x965AB174) - 886220614;
  LODWORD(STACK[0x304]) = v119 ^ v30;
  int v121 = dword_1002247E0[(((v119 ^ v30) & 0x4B ^ 0x42785048)
                        + ((v119 ^ v30) & 0xB4 ^ 0x10800421)
                        - 1) ^ 0x52F85435];
  HIDWORD(v12) = v121 ^ 0x1A6468;
  LODWORD(v12) = v121 ^ 0xDFFFFFFF;
  int v122 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0x8E0D8A20) + 1191626000;
  unsigned int v123 = (((2 * v122) ^ 0x8E0D8A20) - 2 * (((2 * v122) ^ 0x8E0D8A20) & 0x63704A3E ^ (2 * v122) & 0x14) - 479180246) & 0xE97D4E04 ^ 0xF7F2FBFA;
  LODWORD(v23) = dword_1002247E0[((v119 ^ v30) >> 24) ^ 0x11];
  HIDWORD(v12) = v23 ^ 0x1A6468;
  LODWORD(v12) = v23 ^ 0xDFFFFFFF;
  LODWORD(v23) = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xC0B61EAA) - 530903211;
  int v124 = (((2 * v23) ^ 0xC0B61EAA) - ((2 * ((2 * v23) ^ 0xC0B61EAA)) & 0x514A16AC) + 681904982) & 0xE97D4E04 ^ 0x3EA7BBFE;
  LODWORD(v23) = (v124 - ((2 * v124) & 0x426A1000) - 1632479567) ^ v23;
  unsigned int v125 = (v119 ^ v30) >> 8;
  unsigned int v126 = ((v125 & 0x6D ^ 0x6A618248) + (v125 & 0x92 ^ 0x84000181) - 1) ^ 0xEE618356;
  HIDWORD(v12) = v23 ^ 0x34;
  LODWORD(v12) = v23 ^ 0x6BA4B700;
  LODWORD(v23) = (v12 >> 8) - ((2 * (v12 >> 8)) & 0x19B6A554) + 215700138;
  int v127 = (v126 - ((2 * v126 + 648701244) & 0x40CBDC3A) - 205840197) ^ dword_1002451F0[((((unsigned __int16)(v119 ^ (unsigned __int16)v30) >> 8) ^ 0xCD300B21)
                                                                                     + (v125 & 0x98 ^ 0x32422098)
                                                                                     - ((((unsigned __int16)(v119 ^ (unsigned __int16)v30) >> 8) ^ 0xCD300B21) & 0x49100398)) ^ 0xB662281F];
  HIDWORD(v12) = v127 ^ 0x4D56C3;
  LODWORD(v12) = v127 ^ 0xEC000000;
  LODWORD(v20) = v20 ^ v122 ^ (v123 - ((2 * v123) & 0x61011004) - 1333753853) ^ ((v12 >> 24)
                                                                               - ((2 * (v12 >> 24)) & 0x514EB194)
                                                                               + 682055882) ^ v23;
  int v128 = v20 ^ v118;
  unsigned int v129 = v20 ^ v118 ^ v30;
  int v130 = ((unsigned __int16)(v129 ^ 0x2B10) >> 8);
  LODWORD(v23) = ((v130 ^ 0x82) + (((v129 ^ 0xAA152B10) >> 8) & 0xF6 ^ 0x4174) - ((v130 ^ 0x82) & 0xF6)) ^ 0x41E4;
  unsigned int v131 = ((v130 ^ 0x32CA6B87) - ((2 * (v130 ^ 0x32CA6B87)) & 0x6110421C) - 1316178674) ^ 0x8B6F4E9D;
  unsigned int v132 = ((((2 * v131) | 0x31C6F3D6) - v131 + 1729922581) ^ 0x90CAE957) - 749391202;
  unsigned int v133 = ((2 * v132) & 0xB3FFFBFE) + (v132 ^ 0x59FFFDFF);
  LODWORD(v23) = dword_1002451F0[v23];
  LODWORD(v23) = (((2 * (v23 & 0x3F864EB7 ^ 0x2E455931)) & 0x7288AB64) - (v23 & 0x3F864EB7 ^ 0x2E455931) + 109292045) ^ 0x88B30F55 ^ (((v133 + 100663809) & 0x130402B7) - ((2 * (v133 + 100663809)) & 0x2000062) - 2056146823) | (((2 * (v23 & 0xC079B148 ^ 0x798100)) & 0xB26080) - (v23 & 0xC079B148 ^ 0x798100) - 719011560) & 0xC1FFFFC8 ^ 0x6577FA21 ^ (((v133 - 1509948927) & 0xC0513148) - ((2 * (v133 - 1509948927)) & 0x822200) + 610999073);
  LODWORD(v23) = v23 - ((2 * v23) & 0x9B07ED8A) + 1300494021;
  HIDWORD(v12) = v23 ^ 0xEEA303;
  LODWORD(v12) = v23 ^ 0x24000000;
  int v134 = v20 ^ v116;
  LODWORD(STACK[0x2E4]) = v20 ^ v116;
  int v135 = (v12 >> 24) - ((2 * (v12 >> 24)) & 0xBA83CB20) - 582883952;
  LODWORD(v20) = ((v129 ^ 0xAA152B10) >> 16) ^ 0x5F;
  LODWORD(v20) = ((v20 | 0x935732A7) - (v20 | 0x6CA8CD58) + 1823001944) ^ 0x93573304;
  LODWORD(v20) = dword_100239C90[(((2 * v20) | 0xF4BBBF2) - v20 + 2019172871) ^ 0x87A5DC2E];
  LODWORD(v20) = v20 - 2 * ((v20 + 27040850) & 0x48CDAC13 ^ v20 & 1) - 899004316;
  HIDWORD(v12) = v20 ^ 0xC11;
  LODWORD(v12) = v20 ^ 0x367C0000;
  LODWORD(v20) = (v12 >> 16) - ((2 * (v12 >> 16)) & 0x760365E2) - 1157516559;
  int v136 = dword_1002247E0[v129 ^ 0x11];
  HIDWORD(v12) = v136 ^ 0x1A6468;
  LODWORD(v12) = v136 ^ 0xDFFFFFFF;
  int v137 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0x3F72345A) + 532224557;
  LODWORD(v23) = (((2 * v137) ^ 0x3F72345A) - ((2 * ((2 * v137) ^ 0x3F72345A)) & 0x4CF66558) + 645608109) & 0xE97D4E04 ^ 0x36FBB3FE;
  unsigned int v138 = v129 ^ 0xC2942E3F;
  int v139 = dword_1002247E0[HIBYTE(v129) ^ 0x55];
  HIDWORD(v12) = v139 ^ 0x1A6468;
  LODWORD(v12) = v139 ^ 0xDFFFFFFF;
  int v140 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xCA731E1C) - 449212658;
  unsigned int v141 = (((2 * v140) ^ 0xCA731E1C) - 2 * (((2 * v140) ^ 0xCA731E1C) & 0x6E8D6D76 ^ (2 * v140) & 2) + 1854762356) & 0xE97D4E04 ^ 0x7E8FFDFE;
  unsigned int v142 = (v141 - ((2 * v141) & 0xC0D20000) - 832020778) ^ v140;
  HIDWORD(v12) = v142 ^ 0x14;
  LODWORD(v12) = v142 ^ 0x3F182F00;
  LODWORD(v24) = v20 ^ v137 ^ (v23 - ((2 * v23) & 0xC2B321B8) + 1633259740) ^ v134 ^ ((v12 >> 8)
                                                                                    - ((2 * (v12 >> 8)) & 0x14A1911E)
                                                                                    - 1974417265) ^ v135;
  LODWORD(v40) = v24 ^ v119;
  LODWORD(STACK[0x2B8]) = v24 ^ v119;
  LODWORD(STACK[0x2D8]) = v138;
  unsigned int v143 = v24 ^ v119 ^ v138;
  int v144 = ((unsigned __int16)(v20 ^ v137 ^ (v23 - ((2 * v23) & 0x21B8) - 28452) ^ v134 ^ ((v12 >> 8) - ((2 * (v12 >> 8)) & 0x911E) - 14193) ^ v135 ^ v119 ^ v138) >> 8) ^ 0x48008191;
  int v145 = dword_100239C90[(v144 - ((2 * v144) & 0x2F6) - 1223921797) ^ 0xFF0CEEC3];
  int v146 = v145 - ((2 * v145 + 54081700) & 0x5D22D390) + 808322586;
  int v147 = (v24 ^ v119 ^ v138);
  unsigned int v148 = ((v147 ^ 0x840004B6 | 0xA7662105) - (v147 ^ 0x840004B6 | 0x5899DEFA) + 1486479098) ^ 0x23662597;
  HIDWORD(v12) = v146 ^ 0x20C9CB;
  LODWORD(v12) = v146 ^ 0xD0000000;
  int v149 = (v12 >> 24) - ((2 * (v12 >> 24)) & 0x161574AC) - 1962231210;
  LODWORD(STACK[0x2E0]) = v143;
  LODWORD(v20) = dword_1002247E0[HIBYTE(v143) ^ 0xD0];
  HIDWORD(v12) = v20 ^ 0x1A6468;
  LODWORD(v12) = v20 ^ 0xDFFFFFFF;
  LODWORD(v20) = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xD8EC6A) - 2140375499;
  LODWORD(v23) = (((2 * v20) ^ 0xD8EC6A) - ((2 * ((2 * v20) ^ 0xD8EC6A)) & 0xD0B9F320) + 1750923664) & 0xE97D4E04 ^ 0x7EDEF9FA;
  LODWORD(v20) = (v23 - 193744260 + ((2 * (v23 & 0x60710204 ^ ((2 * v20) | 0x7FFFFFFB))) ^ 0x280560FD)) ^ v20;
  HIDWORD(v12) = v20 ^ 0x7E;
  LODWORD(v12) = v20 ^ 0x5C57C500;
  LODWORD(v20) = v12 >> 8;
  LODWORD(v23) = ((BYTE2(v143) ^ 0xF9) - ((2 * (BYTE2(v143) ^ 0xF9)) & 0x6E) - 1074156489) ^ 0x3FB93417;
  LODWORD(v23) = dword_100239C90[(((2 * v23) | 0x23C0275C) - v23 + 1847585874) ^ 0x11A08B3C];
  LODWORD(v23) = v23 - ((2 * v23 + 54081700) & 0x66C24DB6) + 889045805;
  HIDWORD(v12) = v23 ^ 0x86D8;
  LODWORD(v12) = v23 ^ 0xCDD00000;
  int v150 = dword_1002451F0[((v147 ^ 0xD3) + (v143 & 0xE0 ^ 0xB8DE0320) - ((v147 ^ 0xD3) & 0xE0)) ^ 0xB8DE032F] ^ v149 ^ ((v12 >> 16) - ((2 * (v12 >> 16)) & 0x8BB202E0) - 975634064);
  LODWORD(STACK[0x2DC]) = v24;
  int v151 = v150 ^ v24 ^ (v148 - ((2 * v148 + 648701244) & 0x53192ABE) - 52312067) ^ 0xFC2C23F8 ^ (v20
                                                                                              - ((2 * v20) & 0x31DE14CC)
                                                                                              + 418318950);
  int v152 = v24 ^ v128;
  LODWORD(STACK[0x2D4]) = v24 ^ v128;
  int v153 = v24 ^ v128 ^ 0xE417D096 ^ v151;
  int v154 = v151;
  LODWORD(STACK[0x2CC]) = v151;
  unsigned int v155 = v153 ^ v138;
  LODWORD(v24) = v153;
  LODWORD(STACK[0x2D0]) = v153;
  int v156 = dword_1002247E0[((((v153 ^ v138) >> 16) ^ 0x1B) - (((v153 ^ v138) >> 15) & 0x140) - 1548320608) ^ 0xA3B680F0];
  LODWORD(STACK[0x338]) = (v19 ^ 0xC9957FD0)
                        - 2 * (((v19 ^ 0xC9957FD0) + 2069068072) & 0x7AFFF6DE ^ v19 & 6)
                        - 162304000;
  HIDWORD(v12) = v156 ^ 0x1A6468;
  LODWORD(v12) = v156 ^ 0xDFFFFFFF;
  int v157 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xD6AA9F7A) - 346730563;
  unsigned int v158 = (((2 * v157) ^ 0xD6AA9F7A) - ((2 * ((2 * v157) ^ 0xD6AA9F7A)) & 0x77812674) - 1145007301) & 0xE97D4E04 ^ 0xBFC2B3FA;
  LODWORD(v19) = dword_1002247E0[((v155 ^ 0x2D | 0x22C61E5D)
                                - (v155 ^ 0x2D | 0xDD39E1A2)
                                - 583409246) ^ 0x22C61E83];
  int v159 = (v158 - ((2 * v158) & 0x52629C08) - 1833886611) ^ v157;
  HIDWORD(v12) = v19 ^ 0x1A6468;
  LODWORD(v12) = v19 ^ 0xDFFFFFFF;
  int v160 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xAEC2BC7A) + 1465998909;
  HIDWORD(v12) = v159 ^ 0x3110;
  LODWORD(v12) = v159 ^ 0x7CAC0000;
  int v161 = (v12 >> 16) - ((2 * (v12 >> 16)) & 0xB8C08F8A) + 1549813701;
  LODWORD(v19) = (((2 * v160) ^ 0xAEC2BC7A) - 2 * (((2 * v160) ^ 0xAEC2BC7A) & 0x5109F3C ^ (2 * v160) & 4) - 2062508232) & 0xE97D4E04 ^ 0x9792BFFA;
  LODWORD(v20) = dword_1002247E0[HIBYTE(v155) ^ 0x2F];
  HIDWORD(v12) = v20 ^ 0x1A6468;
  LODWORD(v12) = v20 ^ 0xDFFFFFFF;
  LODWORD(v20) = (v12 >> 27) - ((2 * (v12 >> 27)) & 0x13849262) + 163727665;
  int v162 = (((2 * v20) ^ 0x13849262) - ((2 * ((2 * v20) ^ 0x13849262)) & 0x22B28A8C) + 291063110) & 0xE97D4E04 ^ 0x17DBF5FE;
  LODWORD(v20) = (v162 - ((2 * v162) & 0x2E2F297C) + 387421374) ^ v20;
  HIDWORD(v12) = v20 ^ 0xFFFFFFBF;
  LODWORD(v12) = v20 ^ 0x369DDC00;
  int v163 = (v12 >> 8) - ((2 * (v12 >> 8)) & 0x5854A874) - 1406512070;
  int v164 = ((BYTE1(v155) ^ 0xBD) - ((v155 >> 7) & 0x80) + 546430784) ^ 0x28B15FD4;
  LODWORD(v20) = (139213 - (BYTE1(v155) ^ 0xC6) + ((2 * (BYTE1(v155) ^ 0xC6)) & 0xA) + 45) ^ 0x21FCD;
  LODWORD(v20) = (v20 - ((2 * v20 - 1498782404) & 0xA49468A4) + 1245669104) ^ dword_1002451F0[(v164
                                                                                             - ((2 * v164) & 0x1E0AE)
                                                                                             + 576712791) ^ 0x2A7F70B7];
  HIDWORD(v12) = v20 ^ 0xC28C8C;
  LODWORD(v12) = v20 ^ 0xBA000000;
  int v165 = (v19 - 536754998 + ((2 * v19) & 0xC0028800 ^ 0xFFFEFE6F)) ^ v160 ^ v163 ^ ((v12 >> 24)
                                                                                  - ((2 * (v12 >> 24)) & 0x7961F94)
                                                                                  - 2083844150) ^ v161;
  LODWORD(v19) = v40 ^ 0xA5219770 ^ v24;
  int v166 = v165 ^ v152 ^ v19;
  int v167 = v165 ^ v152;
  LODWORD(STACK[0x2A8]) = v165 ^ v152;
  LODWORD(STACK[0x2BC]) = v19;
  LODWORD(STACK[0x2C8]) = v166;
  int v168 = dword_100239C90[((((unsigned __int16)(v166 ^ v155) >> 8) ^ 0x52001112 | 0xB502E3BC)
                        - (((unsigned __int16)(v166 ^ v155) >> 8) ^ 0x52001112 | 0x4AFD1C43)
                        + 1258101827) ^ 0xE702F23D];
  int v169 = v168 + 1974944756 + (~(2 * v168 + 54081700) | 0x17CAB0BD);
  HIDWORD(v12) = v169 ^ 0xAB07A2;
  LODWORD(v12) = v169 ^ 0x8A000000;
  LODWORD(v20) = dword_100239C90[(((v166 ^ v155) ^ 0x4860032D)
                                - ((2 * ((v166 ^ v155) ^ 0x4860032D)) & 0x10800790)
                                - 1714404408) ^ 0xD1B04078];
  int v170 = ((v12 >> 24) - ((2 * (v12 >> 24)) & 0xA56BAB16) + 1387648395) ^ (v20
                                                                        - ((2 * v20 + 54081700) & 0xA22831B8)
                                                                        - 760171218);
  LODWORD(v20) = ((v166 ^ v155) >> 16) ^ 0xB9;
  LODWORD(v20) = dword_1002247E0[(v20 + (((v166 ^ v155) >> 16) & 0xD ^ 0x204) - (v20 & 0xD)) ^ 0x238];
  HIDWORD(v12) = v20 ^ 0x1A6468;
  LODWORD(v12) = v20 ^ 0xDFFFFFFF;
  LODWORD(v20) = (v12 >> 27) - ((2 * (v12 >> 27)) & 0x55748890) - 1430633400;
  int v171 = (((2 * v20) ^ 0x55748890) - 2 * (((2 * v20) ^ 0x55748890) & 0x6F9B606E ^ (2 * v20) & 2) + 1872453741) & 0xE97D4E04 ^ 0x7F9BF1FE;
  LODWORD(v20) = (v171 + 1517922433 + ((2 * v171) & 0x90F21000 ^ 0xDBFEBEFF)) ^ v20;
  HIDWORD(v12) = v20 ^ 0xEDF8;
  LODWORD(v12) = v20 ^ 0xD88B0000;
  LODWORD(v20) = (v12 >> 16) - ((2 * (v12 >> 16)) & 0x62478BA2) + 824427985;
  LODWORD(v23) = v166 ^ v155 ^ 0xC119330C;
  LODWORD(STACK[0x2C4]) = v23;
  LODWORD(v19) = ((((v166 ^ v155) >> 24) ^ 0x3C)
                - 859504793
                + ((2 * (((v166 ^ v155) >> 24) ^ 0x3C) + 316) & 0x190 ^ 0x5D75FFFF)) ^ dword_1002451F0[((v166 ^ v155) >> 24) ^ 4];
  HIDWORD(v12) = v19 ^ 0x16;
  LODWORD(v12) = v19 ^ 0x35477400;
  int v172 = v165 ^ v154;
  LODWORD(STACK[0x2AC]) = v172;
  int v173 = v170 ^ v172 ^ ((v12 >> 8) - ((2 * (v12 >> 8)) & 0x5ADC7DA6) + 762199763) ^ v20;
  LODWORD(STACK[0x2B0]) = v167 ^ 0x9294D9A6;
  LODWORD(v20) = v173 ^ v167 ^ 0x9294D9A6;
  int v174 = v20 ^ v166;
  unsigned int v175 = v20 ^ v166 ^ v23;
  int v176 = dword_1002247E0[HIBYTE(v175) ^ 0xFC];
  HIDWORD(v12) = v176 ^ 0x1A6468;
  LODWORD(v12) = v176 ^ 0xDFFFFFFF;
  int v177 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xC65C04A6) + 1663959635;
  unsigned int v178 = (((2 * v177) ^ 0xC65C04A6) - ((2 * ((2 * v177) ^ 0xC65C04A6)) & 0xFEE10BEC) - 9402889) & 0xE97D4E04 ^ 0xFFF2B5FE;
  unsigned int v179 = (v178 + 1774224085 + ((2 * v178) & 0xD2800408 ^ 0xFEFEFE5F)) ^ v177;
  HIDWORD(v12) = v179 ^ 0xB7;
  LODWORD(v12) = v179 ^ 0x22A68100;
  int v180 = (v12 >> 8) + 1491506014 + (~(2 * (v12 >> 8)) | 0x4E32D945);
  int v181 = (((2 * ((v20 ^ v166 ^ v23) ^ 0x8E)) & 0xB2)
        - ((v20 ^ v166 ^ v23) ^ 0x8E)
        + 1578375078) ^ 0x5C1C3385;
  int v182 = dword_100239C90[(((2 * v181) | 0x267B502A) - v181 + 1824675819) ^ 0x91358C82];
  LODWORD(v34) = dword_1002247E0[(((v175 >> 8) & 0x4F ^ 0x7BCB8444) + ((v175 >> 8) & 0xB0 ^ 0x80204021) - 1) ^ 0xFBEBC428];
  HIDWORD(v12) = v34 ^ 0x1A6468;
  LODWORD(v12) = v34 ^ 0xDFFFFFFF;
  LODWORD(v34) = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xE2D72D24) + 1902876306;
  int v183 = ((2 * v34) ^ 0xE2D72D24) - 2 * (((2 * v34) ^ 0xE2D72D24) & 0xA009036 ^ (2 * v34) & 2) + 167809077;
  LODWORD(v34) = ((v183 & 0xE97D4E04 ^ 0x1E82B1FE) - 2020252415 + ((2 * v183) & 0x22A8800 ^ 0xF2FFBDFF)) ^ v34;
  HIDWORD(v12) = v34 ^ 0xB6F2A2;
  LODWORD(v12) = v34 ^ 0xDE000000;
  LODWORD(v34) = (v12 >> 24) - ((2 * (v12 >> 24)) & 0x1A906ABA) + 222836061;
  LODWORD(STACK[0x2C0]) = v175 ^ 0x9C148819;
  unsigned int v184 = (BYTE2(v175) ^ 0x36 | 0xCF48A4AE) - (BYTE2(v175) ^ 0x36 | 0x30B75B51) + 817322833;
  int v185 = dword_100249660[((v184 & 0x424805AC ^ 0x40540D21) + (v184 & 0x8D00A253) - 1) ^ 0x8F1CA989];
  unsigned int v186 = 96924509 * v185 - ((193849018 * v185 - 799979766) & 0xBC16DE9C) - 969665837;
  unsigned int v187 = (((2 * ((v186 >> 2) & 0x94457BF ^ 0x14402A0)) | 0x95B0E404) - ((v186 >> 2) & 0x94457BF ^ 0x14402A0) - 1255698946) ^ v186;
  HIDWORD(v12) = v187 ^ 0xC467;
  LODWORD(v12) = v187 ^ 0x2ABF0000;
  int v188 = ((v12 >> 16) - ((2 * (v12 >> 16)) & 0x11CBF296) + 149289291) ^ (v182
                                                                       - ((2 * v182 + 54081700) & 0xADFEE4AA)
                                                                       - 660861273) ^ v180 ^ v34 ^ v173;
  LODWORD(STACK[0x2B4]) = v20 ^ 0xEFA86EDA;
  int v189 = LODWORD(STACK[0x408]) ^ 0x31BCA71D;
  int v190 = v20 ^ 0xEFA86EDA ^ v188;
  int v191 = v190 ^ v20 ^ v166;
  LODWORD(STACK[0x3F8]) = v191;
  LODWORD(v20) = (v191 ^ 0x8F858CC9) + 1;
  int v192 = ((2 * (v20 + v189)) & 0x368FFCFA) + ((v20 + v189) ^ 0x1B47FE7D);
  LODWORD(STACK[0x378]) = v192 - ((2 * v192 + 49145382) & 0x45E827A) + 1537619024;
  LODWORD(STACK[0x358]) = (v79 ^ 0x9A9C9713 ^ v40 ^ 0xA5219770 ^ v24)
                        - 2
                        * (((v79 ^ 0x9A9C9713 ^ v40 ^ 0xA5219770 ^ v24) + 131358868) & 0x4F82C7B ^ (v79 ^ 0x9A9C9713 ^ v40 ^ 0xA5219770 ^ v24) & 3)
                        + 1422691596;
  LODWORD(STACK[0x30C]) = (v190 ^ 0x3CFCE19D)
                        + (v174 ^ 0xD197BF59)
                        - ((2 * ((v190 ^ 0x3CFCE19D) + (v174 ^ 0xD197BF59))) & 0x67A3805A)
                        + 869384237;
  LODWORD(v19) = STACK[0x3C8];
  LODWORD(v24) = (LODWORD(STACK[0x3C8]) ^ 0x405FFE0A) + (v174 ^ 0xD197BF59) + 1;
  int v193 = ((2 * v24) & 0x9B7D7EFE) + (v24 ^ 0x4DBEBF7F);
  int v194 = v128 ^ v119;
  LODWORD(v24) = v128 ^ 0xAAEAA00E;
  unsigned int v195 = ((2 * ((v128 ^ 0x36723FD8) + (v30 ^ 0x2D3FF3D5))) & 0xEC7F96FA)
       + (((v128 ^ 0x36723FD8) + (v30 ^ 0x2D3FF3D5)) ^ 0x763FCB7D);
  int v196 = v66;
  LODWORD(v29) = ((2 * ((v66 ^ 0x20356DF) + (v191 ^ 0x707A7336) + 1)) & 0xCE7EFFFE)
               + (((v66 ^ 0x20356DF) + (v191 ^ 0x707A7336) + 1) ^ 0x673F7FFF);
  LODWORD(STACK[0x360]) = (LODWORD(STACK[0x410]) ^ 0xCD4BCE7E ^ v24)
                        - ((2 * (LODWORD(STACK[0x410]) ^ 0xCD4BCE7E ^ v24) + 812454938) & 0x802FB05C)
                        - 665951685;
  int v197 = STACK[0x3A0];
  LODWORD(v40) = (4 * LODWORD(STACK[0x3A0])) & 0x3EBD7FF8 ^ 0xFB47D35F;
  LODWORD(STACK[0x390]) = v195 - ((2 * v195 - 1599041214) & 0x9CE3F6BE) + 516572160;
  unsigned int v198 = v66 ^ 0xFDFCA920;
  unsigned int v199 = (v66 ^ 0xFDFCA920)
       + (((v190 ^ 0x3CFCE19D) - 389043312) ^ 0xBBDAAF77)
       + ((2 * ((v190 ^ 0x3CFCE19D) - 389043312)) & 0x77B55EEE)
       + 1143296137;
  LODWORD(v45) = (v30 ^ 0x2D3FF3D5) + (v197 ^ 0x317E0B29);
  LOBYTE(v79) = v45 ^ 0xEB;
  LODWORD(STACK[0x398]) = v29 - ((2 * v29 + 400895530) & 0x3651A978) + 1729850321;
  int v200 = v193 - ((2 * v193 + 165964534) & 0x9B08C2C) - 372606063;
  LODWORD(v45) = v40 + ((2 * v197) ^ 0x825D5651) + (v45 ^ 0x9990BFEB) + ((2 * v45) & 0x33217FD6);
  int v201 = STACK[0x2A8];
  LODWORD(v34) = ((2 * ((v174 ^ 0xD197BF59) + (LODWORD(STACK[0x2A8]) ^ 0xE8738819))) & 0x5F5FA27C)
               + (((v174 ^ 0xD197BF59) + (LODWORD(STACK[0x2A8]) ^ 0xE8738819)) ^ 0x2FAFD13E);
  int v202 = 331399871 - v34 - ((1298719094 - 2 * v34) & 0x5A18A408);
  int v203 = STACK[0x2B8];
  LODWORD(v34) = (v194 ^ 0x939E11E6) + (LODWORD(STACK[0x2B8]) ^ 0xD41826EE) + 1;
  LODWORD(v51) = v34 - ((2 * v34) & 0xA68B7754) + 1397078954;
  LODWORD(v23) = v199 - ((2 * v199) & 0x15AA5CB2) - 1965740455;
  HIDWORD(v12) = v23 ^ 1;
  LODWORD(v12) = v23 ^ 0x8AD52E58;
  int v204 = (v12 >> 3) - ((2 * (v12 >> 3)) & 0x72F120CA) + 964202597;
  unsigned int v205 = (v188 ^ 0xC1154CFC) + v198 - ((2 * ((v188 ^ 0xC1154CFC) + v198)) & 0xFE534C6C) + 2133435958;
  LODWORD(v29) = STACK[0x3E8];
  LODWORD(v20) = ((2 * (v20 + (LODWORD(STACK[0x3E8]) ^ 0xB2D53129))) & 0x36EE67E8)
               + ((v20 + (LODWORD(STACK[0x3E8]) ^ 0xB2D53129)) ^ 0x9B7733F4);
  HIDWORD(v12) = LODWORD(STACK[0x3F0]) ^ 2;
  LODWORD(v12) = LODWORD(STACK[0x3E0]) ^ 0xA2123C98;
  int v206 = v204 ^ ((v12 >> 3) - ((2 * (v12 >> 3)) & 0x71C755E8) - 1193039116);
  int v207 = STACK[0x2AC];
  unsigned int v208 = (LODWORD(STACK[0x2AC]) ^ 0xB4FB0452) + (v173 ^ 0xE6A3E5EA) + 1;
  unsigned int v209 = v208 - ((2 * v208) & 0xCC0AF4A8) - 435848620;
  LODWORD(v30) = v45 - 2 * ((v45 + 1352419888) & 0x522D862B ^ v79 & 1) + 583651418;
  HIDWORD(v12) = v206 ^ 0x126110C8;
  LODWORD(v12) = v206 ^ 0x60000000;
  LODWORD(STACK[0x3F0]) = (v12 >> 29) - ((2 * (v12 >> 29)) & 0xA08986F0) - 800799880;
  LODWORD(v45) = v197 ^ v23 ^ 0xE0C8F134;
  int v210 = v20 - ((2 * v20 + 926183954) & 0x27D1EE98) - 813485995;
  LODWORD(v34) = v19 ^ v51 ^ v23 ^ 0xF60A6B6D;
  LODWORD(STACK[0x250]) = v23;
  LODWORD(v20) = v29 ^ v23 ^ 0x6363CB34;
  unsigned int v211 = v196 ^ 0x90B7CF42;
  int v212 = LODWORD(STACK[0x2B0]) ^ LODWORD(STACK[0x408]);
  unsigned int v213 = v209 ^ 0xC16522AE;
  LODWORD(STACK[0x2A4]) = LODWORD(STACK[0x408]) ^ v209 ^ 0xC16522AE ^ 0xBCA47A44;
  LODWORD(STACK[0x3A0]) = v203 ^ 0x5E5E20A6;
  LODWORD(STACK[0x23C]) = v209;
  LODWORD(STACK[0x2A0]) = v120 ^ v209 ^ 0x6B6C92C8;
  int v214 = v24 ^ 0x1E536EC9;
  int v215 = v194 ^ 0x1155E0F9;
  LODWORD(v29) = STACK[0x390];
  LODWORD(STACK[0x2B0]) = LODWORD(STACK[0x390]) ^ v174 ^ 0x6251FB9E;
  LODWORD(STACK[0x408]) = v207 ^ 0x3D9C5F07;
  LODWORD(STACK[0x298]) = v29 ^ v173 ^ 0xAA9A5ED2;
  LODWORD(STACK[0x2AC]) = v188 ^ 0x29FC3AB9;
  LODWORD(STACK[0x380]) = v210;
  unsigned int v216 = v212 ^ 0x88979EBA ^ v210;
  LODWORD(STACK[0x284]) = v216 ^ v201 ^ 0x6114D34C;
  unsigned int v217 = v200 ^ v30;
  unsigned int v218 = v200 ^ v30 ^ LODWORD(STACK[0x2D8]);
  int v219 = v218 ^ 0x34A7EB6D;
  int v220 = (v216 ^ v201 ^ 0x5F324CE4) + (v218 ^ 0x1F6625B1) + 1;
  LODWORD(STACK[0x2A8]) = v190 ^ 0xD41597D8;
  LODWORD(v40) = 2 * &unk_100248C40;
  LODWORD(STACK[0x3E0]) = v40;
  int v221 = (&unk_100248C40 ^ 0xEFDEFBED) + 270599187 + (v40 & 0xDFBDF7C0);
  unsigned int v222 = (v220 - ((2 * v220) & 0x497D835C) - 1531002450) ^ (v221 - ((2 * v221) & 0xE692392A) - 213312363);
  LODWORD(STACK[0x270]) = LODWORD(STACK[0x3F8]) ^ v205 ^ 0xB978FB8E;
  LODWORD(STACK[0x280]) = LODWORD(STACK[0x2CC]) ^ 0xC4324EDB;
  LODWORD(STACK[0x27C]) = v155 ^ 0x4236229E;
  LODWORD(STACK[0x278]) = LODWORD(STACK[0x368]) ^ v202 ^ 0xB8C3C456;
  unsigned int v223 = (((v222 ^ 0xA80822C4) + 1597978868) ^ 0x8BF9BF7F)
       + 1946566785
       + ((2 * ((v222 ^ 0xA80822C4) + 1597978868)) & 0x17F37EFE);
  int v224 = LODWORD(STACK[0x358]) ^ v210;
  unsigned int v225 = LODWORD(STACK[0x2D0]) ^ 0xFB663E42 ^ v224;
  unsigned int v226 = ((((v222 ^ 0x57F7DD3B) - 1597978868) ^ 0x7FEF7FEF)
        - 2146402287
        + ((2 * ((v222 ^ 0x57F7DD3B) - 1597978868)) & 0xFFDEFFDE)) & v225;
  unsigned int v227 = (v223 & v225 ^ 0x5FF7FFFF)
       + (v226 ^ 0xFFEDFDE6)
       + ((2 * v226) & 0xFFDBFBCC)
       + ((2 * (v223 & v225)) & 0xBFEFFFFE);
  LODWORD(STACK[0x288]) = v227 - ((2 * v227 + 1077150774) & 0xB0E41408) + 2022444063;
  int v228 = v200 ^ v205 ^ 0x21EBFEFD;
  int v229 = v205 ^ 0x21EBFEFD;
  int v230 = v228 ^ LODWORD(STACK[0x3A8]);
  unsigned int v231 = v230 ^ 0x9826C3E0;
  unsigned int v232 = v223 + (v230 ^ 0x51454C84);
  LODWORD(STACK[0x248]) = v51;
  LODWORD(STACK[0x244]) = v51 ^ 0x981C9085;
  int v233 = STACK[0x398];
  int v234 = LODWORD(STACK[0x398]) ^ v51 ^ 0x981C9085;
  int v235 = v45 ^ v234;
  int v236 = v20 ^ v234;
  unsigned int v237 = v234 ^ 0xF0C1A050 ^ LODWORD(STACK[0x3F0]);
  int v238 = LODWORD(STACK[0x400]) ^ 0x5BD09992;
  unsigned int v239 = LODWORD(STACK[0x3C0]) ^ 0xFACA0E30;
  unsigned int v240 = LODWORD(STACK[0x274]) ^ 0xC2E06176;
  LODWORD(STACK[0x254]) = v240;
  int v241 = LODWORD(STACK[0x378]) ^ v240;
  int v242 = v211 ^ v241;
  int v243 = v238 ^ v241;
  int v244 = v239 ^ v241;
  int v245 = v34 ^ v233;
  int v246 = v233;
  unsigned int v247 = v232 ^ 0xFF57BDF9;
  BOOL v248 = ((v232 ^ 0xFF57BDF9) & 1) == 0;
  if ((v232 ^ 0xFF57BDF9)) {
    int v249 = v235;
  }
  else {
    int v249 = v236;
  }
  LODWORD(STACK[0x3F0]) = v249;
  if (v247) {
    int v235 = v245;
  }
  LODWORD(STACK[0x3C0]) = v235;
  if (v247) {
    int v245 = v237;
  }
  LODWORD(STACK[0x3E8]) = v245;
  if ((v247 & 1) == 0) {
    int v236 = v237;
  }
  LODWORD(STACK[0x3A8]) = v236;
  unsigned int v250 = LODWORD(STACK[0x410]) ^ 0xEB991ABB;
  int v251 = LODWORD(STACK[0x338]) ^ v200 ^ 0xD828BFE;
  int v252 = LODWORD(STACK[0x3D8]) ^ 0x49FE29EE;
  unsigned int v253 = LODWORD(STACK[0x344]) ^ 0xF2DFA593;
  int v254 = v228;
  LODWORD(STACK[0x2B8]) = v228;
  int v255 = v250 ^ v228;
  int v256 = v251 ^ v229;
  int v257 = v229;
  LODWORD(STACK[0x368]) = v229;
  int v258 = v252 ^ v254;
  if (v247) {
    unsigned int v259 = v231;
  }
  else {
    unsigned int v259 = v255;
  }
  LODWORD(STACK[0x410]) = v259;
  if ((v247 & 1) == 0) {
    int v255 = v256;
  }
  LODWORD(STACK[0x338]) = v255;
  if (v247) {
    unsigned int v260 = v258;
  }
  else {
    unsigned int v260 = v231;
  }
  LODWORD(STACK[0x2D8]) = v260;
  if (v247) {
    int v261 = v256;
  }
  else {
    int v261 = v258;
  }
  LODWORD(STACK[0x344]) = v261;
  int v262 = STACK[0x30C];
  int v263 = LODWORD(STACK[0x30C]) ^ 0xA2E9EEA;
  int v264 = v253 ^ v263 ^ v213;
  unsigned int v265 = LODWORD(STACK[0x300]) ^ 0xCA209678 ^ v263 ^ v213;
  unsigned int v266 = LODWORD(STACK[0x32C]) ^ v202 ^ 0xE6CA9B0B;
  int v267 = LODWORD(STACK[0x330]) ^ v202 ^ 0xC87AF93;
  int v268 = LODWORD(STACK[0x304]) ^ v202 ^ 0x6A2C5FD9;
  unsigned int v269 = LODWORD(STACK[0x2E4]) ^ 0x813070E3;
  unsigned int v270 = LODWORD(STACK[0x2DC]) ^ 0xFBB20E98;
  int v271 = LODWORD(STACK[0x2E0]) ^ 0x3F7C367E;
  int v272 = LODWORD(STACK[0x2D4]) ^ 0x1A8E3DEA;
  LODWORD(STACK[0x28C]) = v217;
  int v273 = v214 ^ v217;
  int v274 = v215 ^ v217;
  int v275 = v269 ^ v217;
  if (v247) {
    int v276 = v219;
  }
  else {
    int v276 = v275;
  }
  if (v247) {
    int v277 = v275;
  }
  else {
    int v277 = v273;
  }
  LODWORD(STACK[0x2E0]) = v277;
  if (v247) {
    int v219 = v274;
  }
  else {
    int v273 = v274;
  }
  LODWORD(STACK[0x2DC]) = v219;
  int v278 = STACK[0x390];
  int v279 = v200 ^ LODWORD(STACK[0x390]);
  LODWORD(STACK[0x2E4]) = v279;
  int v280 = LODWORD(STACK[0x3A0]) ^ v279;
  if (v247) {
    int v281 = LODWORD(STACK[0x3A0]) ^ v279;
  }
  else {
    int v281 = v271 ^ v279;
  }
  LODWORD(STACK[0x3D8]) = v281;
  if (v247) {
    int v282 = v271 ^ v279;
  }
  else {
    int v282 = v270 ^ v279;
  }
  LODWORD(STACK[0x2D0]) = v282;
  if (v247) {
    int v283 = v270 ^ v279;
  }
  else {
    int v283 = v272 ^ v279;
  }
  LODWORD(STACK[0x3A0]) = v283;
  if (v247) {
    int v280 = v272 ^ v279;
  }
  LODWORD(STACK[0x2CC]) = v280;
  unsigned int v284 = LODWORD(STACK[0x2BC]) ^ 0xC1D41471;
  int v285 = LODWORD(STACK[0x2C4]) ^ 0x23EFD6AF;
  unsigned int v286 = v278 ^ LODWORD(STACK[0x2B4]) ^ 0xD33EC454;
  unsigned int v287 = v216;
  LODWORD(STACK[0x3C8]) = v216;
  int v288 = LODWORD(STACK[0x408]) ^ v216;
  int v289 = v285 ^ v287;
  int v290 = STACK[0x284];
  if (v247) {
    int v291 = v288;
  }
  else {
    int v291 = STACK[0x284];
  }
  LODWORD(STACK[0x2D4]) = v291;
  if (v247) {
    int v292 = v289;
  }
  else {
    int v292 = v288;
  }
  LODWORD(STACK[0x408]) = v292;
  int v293 = LODWORD(STACK[0x2C8]) ^ 0x3B4BAFA6 ^ v287;
  if (v247) {
    int v294 = LODWORD(STACK[0x2C8]) ^ 0x3B4BAFA6 ^ v287;
  }
  else {
    int v294 = v289;
  }
  LODWORD(STACK[0x2B4]) = v294;
  if (v247) {
    int v295 = v290;
  }
  else {
    int v295 = v293;
  }
  LODWORD(STACK[0x400]) = v295;
  unsigned int v296 = v278 ^ LODWORD(STACK[0x2C0]) ^ 0xB8265B9E;
  int v297 = LODWORD(STACK[0x2C0]) ^ LODWORD(STACK[0x3F8]) ^ 0xE6237D8;
  LODWORD(STACK[0x308]) = v202;
  int v298 = LODWORD(STACK[0x2B0]) ^ v202;
  int v299 = LODWORD(STACK[0x298]) ^ v202;
  int v300 = v286 ^ v202;
  int v301 = v296 ^ v202;
  if (v247) {
    int v302 = LODWORD(STACK[0x298]) ^ v202;
  }
  else {
    int v302 = v300;
  }
  LODWORD(STACK[0x2C8]) = v302;
  if (v247) {
    int v303 = v301;
  }
  else {
    int v303 = v299;
  }
  if (v247) {
    int v301 = v298;
  }
  LODWORD(STACK[0x2C4]) = v301;
  if (v247) {
    int v304 = v300;
  }
  else {
    int v304 = v298;
  }
  int v305 = v246 ^ LODWORD(STACK[0x360]);
  int v306 = v305 ^ LODWORD(STACK[0x270]);
  int v307 = v305 ^ v257;
  LODWORD(STACK[0x298]) = v305 ^ v257;
  int v308 = v305 ^ v257 ^ LODWORD(STACK[0x2AC]);
  int v309 = v307 ^ LODWORD(STACK[0x2A8]);
  int v310 = v307 ^ v297;
  if (v247) {
    int v311 = v310;
  }
  else {
    int v311 = v308;
  }
  LODWORD(STACK[0x2B0]) = v311;
  if (v247) {
    int v312 = v306;
  }
  else {
    int v312 = v310;
  }
  LODWORD(STACK[0x330]) = v312;
  if ((v247 & 1) == 0) {
    int v308 = v309;
  }
  LODWORD(STACK[0x32C]) = v308;
  if (v247) {
    int v313 = v309;
  }
  else {
    int v313 = v306;
  }
  LODWORD(STACK[0x2A8]) = v313;
  unsigned int v314 = byte_10023CFC0[STACK[0x388] ^ 0xCC];
  int v316 = LODWORD(STACK[0x2A4]) ^ v262;
  int v317 = LODWORD(STACK[0x2A0]) ^ v263;
  int v318 = v224;
  LODWORD(STACK[0x29C]) = v224;
  int v319 = LODWORD(STACK[0x280]) ^ v224;
  int v320 = LODWORD(STACK[0x27C]) ^ v224;
  int v321 = STACK[0x380];
  int v322 = LODWORD(STACK[0x380]) ^ LODWORD(STACK[0x278]);
  LODWORD(STACK[0x234]) = v247;
  int v323 = -(((_BYTE)v247 + 2 * (_BYTE)v232 - 1) & 2);
  LODWORD(STACK[0x230]) = v323;
  unsigned int v324 = LODWORD(STACK[0x378]) ^ 0xBB815546;
  LODWORD(STACK[0x210]) = v317;
  if (v248) {
    int v325 = v264;
  }
  else {
    int v325 = v317;
  }
  LODWORD(STACK[0x2C0]) = v325;
  if (v248) {
    unsigned int v326 = v265;
  }
  else {
    unsigned int v326 = v264;
  }
  LODWORD(STACK[0x220]) = v326;
  LODWORD(STACK[0x21C]) = v316;
  if (v248) {
    unsigned int v327 = v316;
  }
  else {
    unsigned int v327 = v265;
  }
  LODWORD(STACK[0x2AC]) = v327;
  int v328 = v321 ^ v266;
  int v329 = v284 ^ v318;
  LODWORD(STACK[0x218]) = v319;
  int v330 = STACK[0x288];
  if (v248) {
    int v331 = STACK[0x288];
  }
  else {
    int v331 = v319;
  }
  LODWORD(STACK[0x2A4]) = v331;
  if (v248) {
    int v332 = v329;
  }
  else {
    int v332 = v330;
  }
  LODWORD(STACK[0x2BC]) = v332;
  LODWORD(STACK[0x20C]) = v320;
  if (v248) {
    int v329 = v320;
  }
  LODWORD(STACK[0x2A0]) = v329;
  LODWORD(STACK[0x24C]) = v243;
  LODWORD(STACK[0x240]) = v244;
  if (v248) {
    int v333 = v243;
  }
  else {
    int v333 = v244;
  }
  LODWORD(STACK[0x268]) = v242;
  LODWORD(STACK[0x200]) = v324;
  if (v248) {
    unsigned int v334 = v242;
  }
  else {
    unsigned int v334 = v324;
  }
  LODWORD(STACK[0x208]) = v322;
  if (!v248) {
    int v328 = v322;
  }
  LODWORD(STACK[0x388]) = v328;
  if (v248) {
    int v335 = v321 ^ v267;
  }
  else {
    int v335 = v321 ^ v268;
  }
  BOOL v336 = v323 == 0;
  if (v323) {
    unsigned int v337 = v333;
  }
  else {
    unsigned int v337 = v334;
  }
  LODWORD(STACK[0x304]) = v337;
  if (v323) {
    int v333 = v334;
  }
  LODWORD(STACK[0x278]) = v333;
  if (v323) {
    int v338 = v276;
  }
  else {
    int v338 = v273;
  }
  LODWORD(STACK[0x3F8]) = v338;
  if (v323) {
    int v339 = v273;
  }
  else {
    int v339 = v276;
  }
  LODWORD(STACK[0x300]) = v339;
  unsigned int v315 = ((2 * ((v314 >> 1) & 0x44 ^ 0xFFFFFF85)) | 0x66) - ((v314 >> 1) & 0x44 ^ 0xFFFFFF85);
  int v340 = ((((v314 ^ (v315 + 77) ^ 0x1F) - ((2 * (v314 ^ (v315 + 77) ^ 0x1F)) & 0x96)) << 24) + 1258291200) ^ 0x4B000000;
  int v341 = *(unsigned __int8 *)(STACK[0x290] + 1) ^ 0x79 ^ byte_100248A30[*(unsigned __int8 *)(STACK[0x290] + 1) ^ 0x8BLL];
  int v342 = (((v341 - ((2 * v341) & 0xFC)) << 16) + 159252480) ^ 0x97E0000;
  int v343 = (v340 + 185703216 - ((2 * v340) & 0x16000000)) ^ 0xB119B30 | (v342 - ((2 * v342) & 0x3EA00000) + 525345149) ^ 0x1F50217D;
  int v344 = v343 - ((2 * v343) & 0x7386C0F0);
  int v345 = STACK[0x2F0] ^ 0x57 ^ byte_100248A30[STACK[0x2F0] ^ 0x88];
  unsigned int v346 = (((v345 - ((2 * v345) & 0x38)) << 8) - 1735517184) ^ 0x988E1C00;
  int v347 = STACK[0x2E8] ^ 0xFB ^ byte_100220240[STACK[0x2E8] ^ 0x9F];
  unsigned int v348 = (((v347 - ((2 * v347) & 0x120)) << 16) - 124780544) ^ 0xF8900000;
  unsigned int v349 = byte_10023CFC0[STACK[0x350] ^ 0x25];
  int v350 = (((v349 ^ 0xD0 ^ (v349 >> 1) & 0x44) - ((2 * (v349 ^ 0xD0 ^ (v349 >> 1) & 0x44)) & 0x106)) << 16)
       + 612564992;
  unsigned int v351 = ((v350 ^ 0x24830000) - ((2 * v350) & 0x12480000) + 153402880) ^ 0x924BE00 | (v346
                                                                                    - ((2 * v346) & 0x68104C00)
                                                                                    - 1274534195) ^ 0xB40826CD;
  unsigned int v352 = v351 - ((2 * v351) & 0x3245F2F8);
  int v353 = STACK[0x320] ^ 0xAB ^ byte_100220240[STACK[0x320] ^ 0xF8];
  unsigned int v354 = (((v353 - ((2 * v353) & 0x8A)) << 8) - 566082304) ^ 0xDE424500;
  unsigned int v355 = (v354 - ((2 * v354) & 0x540E1400) - 1442379033) ^ 0xAA070AE7 | (v348 - ((2 * v348) & 0x4EE40000) - 411944652) ^ 0xE7723934;
  unsigned int v356 = v355 - ((2 * v355) & 0x582D3986);
  unsigned int v357 = byte_100220240[STACK[0x3B0] ^ 0x5C] ^ STACK[0x3B0];
  int v358 = ((((v357 ^ 0xC) - ((2 * (v357 ^ 0xC)) & 0x16)) << 16) + 420151296) ^ 0x190B0000;
  int v359 = byte_100248A30[STACK[0x310] ^ 0xE2];
  int v360 = (v358 - ((2 * v358) & 0x547C0000) + 1782508247) ^ 0x6A3EEAD7 | (((v359 ^ STACK[0x310]) ^ 2)
                                                                       - ((2 * (v359 ^ STACK[0x310] ^ 2)) & 0x34)
                                                                       - 1461226982) ^ 0xA8E7721A;
  int v361 = v360 - ((2 * v360) & 0x5D6F7D94);
  int v362 = ((STACK[0x348] ^ 0xAA ^ byte_100248A30[STACK[0x348] ^ 0x70])
        - ((2 * (STACK[0x348] ^ 0xAA ^ byte_100248A30[STACK[0x348] ^ 0x70])) & 0x140)
        - 60034144) ^ 0xFC6BF3A0 | (v344 - 1178378120) ^ 0xB9C36078;
  int v363 = v362 - ((2 * v362) & 0x1C04DC6A);
  int v364 = STACK[0x318] ^ byte_100220240[STACK[0x318] ^ 0x5D] ^ 2;
  unsigned int v365 = (((v364 - ((2 * v364) & 0xFFFFFFE7)) << 24) - 218103808) ^ 0xF3000000;
  unsigned int v366 = ((v365 - 1810196343 + (~(2 * v365) | 0xD7FFFFFF)) | 1) ^ 0x941A9889 | (v356 - 1407804221) ^ 0xAC169CC3;
  unsigned int v367 = byte_10023CFC0[*(unsigned __int8 *)(STACK[0x290] + 4) ^ 0xD6];
  int v368 = ((v367 >> 1) & 0x40 | ~(v367 >> 1) & 0x44) - (~(v367 >> 1) & 0x40) - 95;
  int v369 = v367 ^ 0x55 ^ ((v368 & 0x84) - (v368 | 0x9E) + 9);
  unsigned int v370 = (((v369 - ((2 * v369) & 0x2C)) << 24) - 1778384896) ^ 0x96000000;
  unsigned int v371 = (v370 - ((2 * v370) & 0x24000000) - 1842811221) ^ 0x9228EEAB | (v352 + 421722492) ^ 0x1922F97C;
  unsigned int v372 = byte_10023CFC0[*(unsigned __int8 *)(STACK[0x290] + 14) ^ 0x14];
  int v373 = (((((v372 ^ (v372 >> 1) & 0x44) ^ 0xA0) - ((2 * (v372 ^ (v372 >> 1) & 0x44)) & 0x96)) << 8)
        + 1948994304) ^ 0x742B4B00;
  int v374 = v373 - ((2 * v373) & 0x43E4F400);
  int v375 = byte_100249A60[*(unsigned __int8 *)(STACK[0x290] + 12) ^ 0x78];
  HIDWORD(v376) = ~v375;
  LODWORD(v376) = (v375 ^ 0x2A) << 24;
  int v377 = (v376 >> 25) - ((2 * (v376 >> 25)) & 0x68) - 76;
  unsigned int v378 = (((4 * v377) ^ 0xFFFFFFD0) - ((8 * v377) & 0x40) - 96) ^ v377;
  unsigned int v379 = ((((v378 ^ 0xC1) - ((2 * (v378 ^ 0xC1)) & 0xEC)) << 24) - 167772160) ^ 0xF6000000;
  unsigned int v380 = byte_10023CFC0[STACK[0x2F8] ^ 0x94];
  int v381 = (v379 - ((2 * v379) & 0x4E000000) + 660153514) ^ 0x275924AA | (v374 + 569539073) ^ 0x21F27A01;
  unsigned int v382 = (v381 - ((2 * v381) & 0xDC691A8) - 2031925036) ^ 0x86E348D4 | (v361 - 1363689782) ^ 0xAEB7BECA;
  unsigned int v383 = v382 - ((2 * v382) & 0xEAFA228A) + 1971130693;
  unsigned int v384 = v380 ^ 0x61 ^ (((((v380 >> 1) & 0x44 ^ 0xFFFFFFFB) - 33) ^ 0xC1) + 15);
  unsigned int v385 = (((v384 - ((2 * v384) & 0x1DA)) << 8) - 1049170688) ^ 0xC176ED00;
  unsigned int v386 = (v385 - ((2 * v385) & 0x3FE8F200) - 537626293) ^ 0xDFF4794B | (v363 + 235040309) ^ 0xE026E35;
  int v387 = (v371 - ((2 * v371) & 0x65BF0D3E) + 853509791) ^ 0x32DF869F | ((STACK[0x3B8] ^ 0xA0 ^ byte_100220240[STACK[0x3B8] ^ 0xF4])
                                                                      - ((2
                                                                        * (STACK[0x3B8] ^ 0xA0 ^ byte_100220240[STACK[0x3B8] ^ 0xF4])) & 0x176)
                                                                      - 508421701) ^ 0xE1B219BB;
  unsigned int v388 = byte_10023CFC0[*(unsigned __int8 *)(STACK[0x290] + 11) ^ 0x44];
  int v389 = v387 - ((2 * v387) & 0x1E2D9430) - 1894331880;
  int v390 = v388 ^ (((2 * (~(v388 >> 1) & 0x44)) | 0x6A) - (~(v388 >> 1) & 0x44) + 75) ^ 0xC;
  unsigned int v391 = (v390 - ((2 * v390) & 0x1CC) - 1174345242) ^ 0xBA00E9E6 | (v366
                                                                                   - ((2 * v366) & 0x88DD9FF2)
                                                                                   + 1148112889) ^ 0x446ECFF9;
  int v392 = ((BYTE1(v383) ^ 0x3E) - 1306438566 + ((2 * (BYTE1(v383) ^ 0x3E) + 316) & 0x77777777 ^ 0x5B77BFFF)) ^ dword_1002451F0[BYTE1(v383) ^ 6];
  HIDWORD(v376) = v392 ^ 0xE49965;
  LODWORD(v376) = v392 ^ 0x12000000;
  int v393 = (v376 >> 24) - ((2 * (v376 >> 24)) & 0x2137A628) + 278647572;
  int v394 = dword_100249660[v378 ^ 0x99];
  unsigned int v395 = 96924509 * v394 - ((193849018 * v394 - 799979766) & 0xC2B525DC) - 914147725;
  int v396 = (((2 * ((v395 >> 2) & 0x94457BF ^ 0x1001634)) & 0x10880C64) - ((v395 >> 2) & 0x94457BF ^ 0x1001634) + 1127479693) ^ 0x4A336B8E;
  int v397 = (v396 - ((2 * v396) & 0x43813F00) + 635477888) ^ v395;
  HIDWORD(v376) = v397 ^ 0xFA;
  LODWORD(v376) = v397 ^ 0x7AD60500;
  int v398 = (v376 >> 8) - ((2 * (v376 >> 8)) & 0xF20EA9AA) - 116960043;
  int v399 = dword_100239C90[v357 ^ 0x95];
  int v400 = v399 - ((2 * v399 + 54081700) & 0x30D341F0) + 436616522;
  int v401 = dword_100239C90[(v359 ^ ~STACK[0x310])];
  HIDWORD(v376) = v400 ^ 0xFB;
  LODWORD(v376) = v400 ^ 0xE6D80000;
  int v402 = ((v376 >> 16) - ((2 * (v376 >> 16)) & 0x8A08B564) + 1157913266) ^ (v401
                                                                          - ((2 * v401 + 54081700) & 0x5EC6D0B6)
                                                                          + 822084781) ^ (v386
                                                                                        - ((2 * v386) & 0xF32831C0)
                                                                                        - 107734816) ^ v398 ^ v393;
  int v403 = v389 ^ (v391 - ((2 * v391) & 0x61364B22) - 1332009583) ^ v402;
  unsigned int v404 = v403 ^ v383 ^ 0xD96B5EF8;
  int v405 = dword_100249660[HIBYTE(v404) ^ 0xC5];
  if (v336) {
    int v406 = v303;
  }
  else {
    int v406 = v304;
  }
  LODWORD(STACK[0x3B8]) = v406;
  if (v336) {
    int v407 = v304;
  }
  else {
    int v407 = v303;
  }
  LODWORD(STACK[0x26C]) = v407;
  unsigned int v408 = 96924509 * v405 - ((193849018 * v405 + 1347503882) & 0x607060EA) + 408998906;
  char v409 = -1 - ((33 - (HIBYTE(v404) | 0xEF)) & 0x10 | 0x42);
  int v410 = (((2 * ((v408 >> 2) & 0x94457BF ^ 0x825087C)) & 0x1282A13A) - ((v408 >> 2) & 0x94457BF ^ 0x825087C) + 1916677986) ^ v408;
  HIDWORD(v411) = v410 ^ 0x6E;
  LODWORD(v411) = v410 ^ 0xFC0F9B00;
  unsigned int v412 = ((((v403 ^ v383 ^ 0xC812AA17) >> (v409 ^ 0xBD))
         - ((2 * ((v403 ^ v383 ^ 0xC812AA17) >> (v409 ^ 0xBD))) & 0x7EA01F3C)
         + 1062211486) ^ 0x3F500F9E) >> (v409 & 0x10);
  int v413 = dword_1002247E0[(v412 - ((2 * v412) & 0x80) - 64) ^ 0x36];
  int v414 = (v411 >> 8) - ((2 * (v411 >> 8)) & 0xF514D074);
  HIDWORD(v411) = v413 ^ 0x1A6468;
  LODWORD(v411) = v413 ^ 0xDFFFFFFF;
  int v415 = (v411 >> 27) + 1207991115 + (~(2 * (v411 >> 27)) | 0x6FFF096B);
  unsigned int v416 = (((2 * v415) ^ 0x9000F694) - ((2 * ((2 * v415) ^ 0x9000F694)) & 0x6F0AAD20) + 931485329) & 0xE97D4E04 ^ 0x3787F7FA;
  int v417 = (v416 - ((2 * v416) & 0x613DFD6C) + 815726263) ^ v415;
  int v418 = (((2 * (BYTE1(v404) ^ 0x64)) | 0x570834C2) - (BYTE1(v404) ^ 0x64) - 730077793) ^ 0xDA41661;
  HIDWORD(v411) = v417 ^ 0x84CD;
  LODWORD(v411) = v417 ^ 0x50D60000;
  int v419 = dword_1002247E0[(((2 * v418) | 0x8548962A) - v418 + 1029420267) ^ 0xE4844773];
  int v420 = (v411 >> 16) - ((2 * (v411 >> 16)) & 0x5C4BDBCC);
  HIDWORD(v411) = v419 ^ 0x1A6468;
  LODWORD(v411) = v419 ^ 0xDFFFFFFF;
  int v421 = v420 + 774237670;
  int v422 = (v411 >> 27) - ((2 * (v411 >> 27)) & 0x23CE18D2) + 300354665;
  unsigned int v423 = (((2 * v422) ^ 0x23CE18D2) - ((2 * ((2 * v422) ^ 0x23CE18D2)) & 0x60CBA438) - 1335504356) & 0xE97D4E04 ^ 0xB6E7F3FE;
  unsigned int v424 = (v423 - ((2 * v423) & 0xD2708800) + 1463141297) ^ v422;
  HIDWORD(v411) = v424 ^ 0x95C908;
  LODWORD(v411) = v424 ^ 0x42000000;
  int v425 = dword_100249660[(((2 * ((v403 ^ v383) ^ 0xB2)) | 0xADCD10C)
                        - ((v403 ^ v383) ^ 0xB2)
                        + 1922144122) & 0xFFFFFFF ^ 0xD6E68F7];
  unsigned int v426 = 96924509 * v425 - ((193849018 * v425 + 1347503882) & 0x55722C0E) - 1830700660;
  unsigned int v427 = (((2 * ((v426 >> 2) & 0x94457BF ^ 0x4568B)) & 0x12880950) - ((v426 >> 2) & 0x94457BF ^ 0x4568B) - 1834421417) ^ 0xC282F85D;
  int v428 = (v414 - 91592646) ^ v426 ^ (((2 * v427) | 0xE081B2AA) - v427 - 1883298133) ^ ((v411 >> 24)
                                                                                     - ((2 * (v411 >> 24)) & 0xA662EF24)
                                                                                     + 1395750802) ^ v421;
  unsigned int v429 = v389 ^ 0xE6B6FB57;
  unsigned int v430 = v402 ^ 0xC8E9F944;
  int v431 = v429 ^ v428;
  int v432 = v428 ^ v430;
  LODWORD(STACK[0x3B0]) = v428 ^ v430;
  unsigned int v433 = v403 ^ v404 ^ v429 ^ v428;
  unsigned int v434 = v433 ^ 0xF8ABE76F;
  int v435 = ((unsigned __int16)(v433 ^ 0xE76F) >> 8);
  unsigned int v436 = ((v435 ^ 0x33 | 0xA6157F55) - (v435 ^ 0x33 | 0x59EA80AA) + 1508540586) ^ 0xA6060C55;
  unsigned int v437 = ((v435 ^ 0x20A08E) + (((v433 ^ 0xF8ABE76F) >> 8) & 0xE2 ^ 0x84C01460) - ((v435 ^ 0x20A08E) & 0x20E2)) ^ 0x84E094DD;
  int v438 = (v437 - ((2 * v437 + 648701244) & 0x2F805AAC) - 350920716) ^ dword_1002451F0[(((2 * v436) & 0x5C25AA66)
                                                                                     - v436
                                                                                     - 1846727988) ^ 0x91FE5976];
  HIDWORD(v411) = v438 ^ 0xE89588;
  LODWORD(v411) = v438 ^ 0xDB000000;
  unsigned int v439 = v433 ^ 0xF7400572;
  int v440 = dword_100239C90[HIBYTE(v433) ^ 8];
  int v441 = (v411 >> 24) - ((2 * (v411 >> 24)) & 0xE2111148) - 251098972;
  int v442 = v440 - ((2 * v440 + 54081700) & 0x10F24CB2) + 169198251;
  int v443 = ((2 * (BYTE2(v434) ^ 0xF8)) & 0x1A2) - (BYTE2(v434) ^ 0xF8) - 167193298;
  HIDWORD(v411) = v442 ^ 0x5A;
  LODWORD(v411) = v442 ^ 0xF6C88600;
  int v444 = (v443 & 0x3008C2BD ^ 0x40AB1) + (v443 ^ 0x72EBF50E) - ((v443 ^ 0x72EBF50E) & 0x6022BD);
  int v445 = (v411 >> 8) - ((2 * (v411 >> 8)) & 0xEA1C09EC);
  unsigned int v446 = ((v444 ^ 0xB48FCA1A) - ((2 * (v444 ^ 0xB48FCA1A) + 648701244) & 0x29D9E502) - 398318305) ^ dword_1002451F0[v444 ^ 0xB48FCA22];
  HIDWORD(v411) = v446 ^ 0x4A5F;
  LODWORD(v411) = v446 ^ 0xD8C40000;
  int v447 = v445 - 183630602;
  int v448 = dword_100249660[(((2 * (v434 ^ 0xE6)) | 0x79CB9534)
                        - (v434 ^ 0xE6)
                        - 1021692570) ^ 0x3CE5CA43];
  unsigned int v449 = 96924509 * v448 - ((193849018 * v448 - 799979766) & 0x941B9F5E) - 1305054412;
  int v450 = v449 ^ v447 ^ v432 ^ v441 ^ ((v411 >> 16) - ((2 * (v411 >> 16)) & 0xA0FF77D8) + 1350548460) ^ (((2 * ((v449 >> 2) & 0x94457BF ^ 0x140112A)) & 0x1008A758) - ((v449 >> 2) & 0x94457BF ^ 0x140112A) + 291570771) ^ 0xF3C43C58;
  int v451 = v403 ^ 0x387C0FDB ^ v450;
  int v452 = ((v451 ^ v439) >> 16) ^ 0x40924497;
  int v453 = dword_100249660[(v452 + (((v451 ^ v439) >> 16) & 0x52 ^ 0x8B65A240) - (v452 & 0x40924452)) ^ 0x8B65A284];
  unsigned int v454 = 96924509 * v453 - ((193849018 * v453 - 799979766) & 0xFE1270C2) + 1731320806;
  int v455 = (v454 >> 2) & 0x94457BF ^ v454;
  HIDWORD(v411) = v455 ^ 0xF661;
  LODWORD(v411) = v455 ^ 0xC8610000;
  int v456 = (v411 >> 16) - ((2 * (v411 >> 16)) & 0x7DE3B14A) + 1056037029;
  unsigned int v457 = (v451 ^ v439) >> 8;
  unsigned int v458 = ((((unsigned __int16)(v451 ^ v439) >> 8) ^ 4)
        + (v457 & 0x44 ^ 0x8F04D140)
        - ((((unsigned __int16)(v451 ^ v439) >> 8) ^ 4) & 0x44444444)) ^ 0xD2A4F9C6;
  int v459 = ((v457 & 0xB5 ^ 0x701) + (v457 & 0x4A ^ 0xB) - 1) ^ 0x752;
  int v460 = (v459 - 899253418 + ((2 * v459 + 25916) & 0x916E ^ 0x59DDFFFF)) ^ dword_1002451F0[(((2 * v458) & 0xA9400742)
                                                                                          - v458
                                                                                          - 1458766754) ^ 0xF4ACD4B9];
  unsigned int v461 = (((v451 ^ v439) ^ 0x8F)
        + ((v451 ^ v439) & 0x3D ^ 0x5F0E2530)
        - (((v451 ^ v439) ^ 0x8F) & 0x3D)) ^ 0x809748F7;
  HIDWORD(v411) = v460 ^ 0x39F069;
  LODWORD(v411) = v460 ^ 0x3B000000;
  int v462 = dword_1002247E0[((v461 | 0x96E69F55) - (v461 | 0x691960AA) + 1763270826) ^ 0x497FF2CC];
  int v463 = (v411 >> 24) - ((2 * (v411 >> 24)) & 0xEAE861AC);
  HIDWORD(v411) = v462 ^ 0x1A6468;
  LODWORD(v411) = v462 ^ 0xDFFFFFFF;
  int v464 = (v411 >> 27) - ((2 * (v411 >> 27)) & 0x5F760E70) - 1346697416;
  unsigned int v465 = (((2 * v464) ^ 0x5F760E70) - 2 * (((2 * v464) ^ 0x5F760E70) & 0x777B9BEA ^ (2 * v464) & 2) + 2004589544) & 0xE97D4E04 ^ 0x77FBBBFA;
  int v466 = dword_100239C90[(v451 ^ ~v439) >> 24];
  int v467 = v466 - ((2 * v466 + 54081700) & 0x3A22D266) + 514721157;
  HIDWORD(v411) = v467 ^ 0x30;
  LODWORD(v411) = v467 ^ 0xE3A0C900;
  int v468 = v450 ^ v431;
  int v469 = v464 ^ ((v411 >> 8) - ((2 * (v411 >> 8)) & 0x7C51CE6C) - 1104615626) ^ v456 ^ v450 ^ (v463 + 1970548950) ^ 0xBA1F3F87 ^ (v465 - ((2 * v465) & 0x10488008) + 1973690189);
  int v470 = v468 ^ v469;
  unsigned int v471 = v468 ^ v469 ^ v439;
  int v472 = (((2 * (v471 ^ 0x89)) & 0x62) - (v471 ^ 0x89) - 2130115122) ^ 0x2807DA;
  int v473 = dword_100249660[(((2 * v472) | 0xCC3E75AE) - v472 - 1713322711) ^ 0xE73E3853];
  unsigned int v474 = 96924509 * v473 - ((59631290 * v473 + 5326602) & 0x40B3042) + 1781414822;
  int v475 = (((v474 >> 2) & 0x10051B3 ^ 0x805912) + ((v474 >> 2) & 0x844060C ^ 0x2C3E0401) - 1) ^ 0x3CBE1B2F;
  unsigned int v476 = ((BYTE1(v471) ^ 0xFC | 0x73AAD353) - (BYTE1(v471) ^ 0xFC | 0x8C552CAC) - 1940575060) ^ 0x67AB9043;
  unsigned int v477 = ((BYTE1(v471) ^ 0x1300218) - ((2 * (BYTE1(v471) ^ 0x1300218)) & 0x2200434) - 1860828390) ^ 0x90260131;
  unsigned int v478 = (v477 - ((2 * v477 - 1498782404) & 0xCF163874) - 1159704872) ^ dword_1002451F0[(((2 * v476) & 0x5533DCAC)
                                                                                       - v476
                                                                                       - 1788472919) ^ 0x8167524E];
  HIDWORD(v411) = v478 ^ 0xA3A4E4;
  LODWORD(v411) = v478 ^ 0x2B000000;
  int v479 = (v411 >> 24) - ((2 * (v411 >> 24)) & 0xF6F0B6A) + 129467829;
  unsigned int v480 = ((2 * (BYTE2(v471) ^ 0xF)) | 0xCCC7C86A) - (BYTE2(v471) ^ 0xF) - 1717822517;
  int v481 = dword_100239C90[((v480 & 0xDA4B0A4C ^ 0x98010848) + (v480 ^ 0x667E6614) - ((v480 ^ 0x667E6614) & 0xDA4B0A4C)) ^ 0xDA568848];
  unsigned int v482 = v481 - ((2 * v481 + 54081700) & 0x98B4CF4C) + 1308034040;
  HIDWORD(v411) = v482 ^ 0xC7A5;
  LODWORD(v411) = v482 ^ 0xB2EB0000;
  int v483 = (v411 >> 16) - ((2 * (v411 >> 16)) & 0x6D7D754E) + 918469287;
  int v484 = dword_100249660[HIBYTE(v471) ^ 0x32];
  unsigned int v485 = 96924509 * v484 - ((193849018 * v484 - 799979766) & 0xB410D728) - 1036972263;
  int v486 = (((v485 >> 2) & 0x4458A ^ 0x2497490B) + ((v485 >> 2) & 0x9401235) - 1) ^ 0x9401211;
  unsigned int v487 = ((v486 & 0x40C12 ^ 0xC0208451) + (v486 & 0x94053AD) - 1) ^ v485;
  HIDWORD(v411) = v487 ^ 0x62;
  LODWORD(v411) = v487 ^ 0xAD442E00;
  int v488 = v474 ^ v483 ^ ((v411 >> 8) - ((2 * (v411 >> 8)) & 0xBF509706) - 542618749) ^ v469 ^ (((2 * v475) & 0x10003758)
                                                                                            - v475
                                                                                            - 1789606829) ^ v479 ^ 0xC67F073E;
  int v489 = v488 ^ v451;
  int v490 = v488 ^ v451 ^ v471;
  unsigned int v491 = v490 ^ 0x8FAA257C;
  unsigned int v492 = v490 ^ 0x89395957;
  unsigned int v493 = (v490 ^ 0xE1)
       + ((v490 ^ 0x8FAA257C) & 0x68 ^ 0x67656060)
       - ((v490 ^ 0xE1) & 0x68);
  int v494 = dword_1002247E0[((v493 & 0x4243560 ^ 0x80101520) + (v493 ^ 0x56E42248) - ((v493 ^ 0x56E42248) & 0x20007560)) ^ 0x95B537E1];
  HIDWORD(v411) = v494 ^ 0x1A6468;
  LODWORD(v411) = v494 ^ 0xDFFFFFFF;
  int v495 = (v411 >> 27) - ((2 * (v411 >> 27)) & 0x3074A1FC) + 406475006;
  unsigned int v496 = (((2 * v495) ^ 0x3074A1FC) + 1295958204 + (~(2 * ((2 * v495) ^ 0x3074A1FC)) | 0x65827E8B)) & 0xE97D4E04 ^ 0x5FBEF1FA;
  int v497 = dword_100249660[(((2 * (BYTE1(v491) ^ 0xC100105C)) | 0x73369160) - (BYTE1(v491) ^ 0xC100105C) + 1181005648) ^ 0x789B5844];
  unsigned int v498 = 96924509 * v497 - ((193849018 * v497 - 799979766) & 0xC847297C) - 867420093;
  unsigned int v499 = (((v498 >> 2) & 0x94457BF ^ 0x844429F | 0x1619D1EF)
        - ((v498 >> 2) & 0x94457BF ^ 0x844429F | 0xE9E62E10)
        - 370790896) ^ 0x77DD2BF;
  int v500 = (v499 - ((2 * v499) & 0x799EF018) + 2093971468) ^ v498;
  HIDWORD(v411) = v500 ^ 0xE4604A;
  LODWORD(v411) = v500 ^ 0x36000000;
  int v501 = (v411 >> 24) - ((2 * (v411 >> 24)) & 0x5EC12124) + 794857618;
  int v502 = dword_100249660[BYTE2(v491) ^ 0x9C];
  unsigned int v503 = 96924509 * v502 - ((193849018 * v502 - 799979766) & 0x930184E4) + 833185271;
  int v504 = (v503 >> 2) & 0x94457BF ^ v503;
  HIDWORD(v411) = v504 ^ 0x5AF6;
  LODWORD(v411) = v504 ^ 0xF7E80000;
  int v505 = (v411 >> 16) - ((2 * (v411 >> 16)) & 0x47FF3868) - 1543529420;
  unsigned int v506 = ((HIBYTE(v491) ^ 0x88) + 24768717 + ((2 * (HIBYTE(v491) ^ 0x88) + 60) & 0x5C ^ 0xFBF79BFF)) ^ dword_1002451F0[HIBYTE(v491) ^ 0xB0];
  HIDWORD(v411) = v506 ^ 0xF0;
  LODWORD(v411) = v506 ^ 0xE20C0600;
  int v507 = v505 ^ v495 ^ (v496 - ((2 * v496) & 0x52880008) + 650203050) ^ ((v411 >> 8)
                                                                       - ((2 * (v411 >> 8)) & 0x11277960)
                                                                       + 143899824) ^ v501;
  int v508 = v507 ^ v488;
  int v509 = v507 ^ v470;
  LODWORD(STACK[0x320]) = v509 ^ 0x1994262A;
  int v510 = v489 ^ 0x6ABA6D4F ^ v509 ^ 0x1994262A;
  unsigned int v511 = v510 ^ v492;
  int v512 = v510;
  LODWORD(STACK[0x290]) = v510;
  int v513 = ((v510 ^ v492) >> 16);
  unsigned int v514 = ((v513 ^ 3 | 0xFFB02A1D) - (v513 ^ 3 | 0x4FD5E2) + 5232098) ^ 0xEFBC621F;
  unsigned int v515 = (((v511 >> 15) & 0x162) + (v513 ^ 0xFFFFFFB7) + 2019608655) ^ 0x7860C83D;
  int v516 = (v515 - ((2 * v515 + 111830332) & 0x88394) + 1465611368) ^ dword_1002451F0[((v514 | 0x359825A3)
                                                                                   - (v514 | 0xCA67DA5C)
                                                                                   - 899163556) ^ 0x25946DA1];
  HIDWORD(v411) = v516 ^ 0xF914;
  LODWORD(v411) = v516 ^ 0x482E0000;
  int v517 = (v411 >> 16) - ((2 * (v411 >> 16)) & 0x24CE59A6) - 1838732077;
  int v518 = dword_100249660[(((2 * (BYTE1(v511) ^ 0xF)) | 0xC9B22838) - (BYTE1(v511) ^ 0xF) + 455535588) ^ 0xE4D9146C];
  unsigned int v519 = 96924509 * v518 - ((193849018 * v518 - 799979766) & 0x8F3C55E8) - 1345925511;
  int v520 = ((2 * ((v519 >> 2) & 0x94457BF ^ 0x10012BA)) & 0x8F04) - ((v519 >> 2) & 0x94457BF ^ 0x10012BA) + 1809158269;
  unsigned int v521 = ((v520 & 0x2247C826 ^ 0x84064806) + (v520 ^ 0x6BC1B078) - ((v520 ^ 0x6BC1B078) & 0x47C826)) ^ v519;
  HIDWORD(v411) = v521 ^ 0xA15AC8;
  LODWORD(v411) = v521 ^ 0xDFFFFFFF;
  int v522 = (v411 >> 24) - ((2 * (v411 >> 24)) & 0x7D4C14D4) - 1096414614;
  int v523 = dword_1002247E0[HIBYTE(v511) ^ 0x68];
  HIDWORD(v411) = v523 ^ 0x1A6468;
  LODWORD(v411) = v523 ^ 0xDFFFFFFF;
  int v524 = (v411 >> 27) - ((2 * (v411 >> 27)) & 0x404B6DBA) + 539342557;
  unsigned int v525 = (((2 * v524) ^ 0x404B6DBA) - ((2 * ((2 * v524) ^ 0x404B6DBA)) & 0x25BBE68) - 2127700171) & 0xE97D4E04 ^ 0x97AFFFFE;
  unsigned int v526 = (v525 - ((2 * v525) & 0xE9FFF138) + 1962932381) ^ v524;
  HIDWORD(v411) = v526 ^ 0x70;
  LODWORD(v411) = v526 ^ 0x7C924F00;
  unsigned int v527 = v511 ^ 0x9234560F;
  LODWORD(STACK[0x22C]) = v511 ^ 0x9234560F;
  int v528 = dword_100239C90[(((2 * (v511 ^ 0x63)) | 0xCC52651E)
                        - (v511 ^ 0x63)
                        - 1713975951) ^ 0x66293226];
  int v529 = (v528 - ((2 * v528 + 54081700) & 0x16DE79FA) - 1928603313) ^ ((v411 >> 8)
                                                                     - ((2 * (v411 >> 8)) & 0x855E62D4)
                                                                     - 1028705942) ^ v508 ^ v517 ^ 0x2C6AD534 ^ v522;
  int v530 = v509 ^ 0x7EB53B76 ^ v529;
  LODWORD(STACK[0x228]) = v529;
  LODWORD(STACK[0x284]) = v530 ^ v512;
  int v531 = v530 ^ v512 ^ 0x392D0FE5;
  unsigned int v532 = v531 ^ v527;
  int v533 = v509 ^ 0x76 ^ v529 ^ v512 ^ 0xE5 ^ v527 ^ 0xDB;
  int v534 = dword_100249660[(((v533 - ((2 * v533) & 0x84) + 1368143938) & 0x10C0D5F ^ 0x2062450E)
                        + ((v533 - ((2 * v533) & 0x84) + 1368143938) ^ 0xD51CB851)
                        - (((v533 - ((2 * v533) & 0x84) + 1368143938) ^ 0xD51CB851) & 0x84000D5F)) ^ 0x21FECDBB];
  unsigned int v535 = 96924509 * v534 - ((193849018 * v534 - 799979766) & 0xCF48BB92) + 1338835278;
  unsigned int v536 = ((v532 >> 8) & 0x49 ^ 0x9B400141) + ((v532 >> 8) & 0xB6 ^ 0x23) - 1;
  int v537 = dword_100239C90[((v536 & 0x23A ^ 0x47324E1B) + (v536 & 0x1C5) - 1) ^ 0x47324F76];
  int v538 = v537 - ((2 * v537 + 54081700) & 0x4233D20E) + 582387033;
  HIDWORD(v411) = v538 ^ 0xA84904;
  LODWORD(v411) = v538 ^ 0xDFFFFFFF;
  int v539 = (v411 >> 24) - ((2 * (v411 >> 24)) & 0x33C5212A) - 1713205099;
  int v540 = dword_100249660[((v531 ^ v527) >> 24) ^ 0xBA];
  unsigned int v541 = 96924509 * v540 - ((193849018 * v540 - 799979766) & 0xAE2557C8) - 1086632087;
  int v542 = (((2 * ((v541 >> 2) & 0x94457BF ^ 0x140031F)) & 0x80A348) - ((v541 >> 2) & 0x94457BF ^ 0x140031F) - 75198949) ^ v541;
  HIDWORD(v411) = v542 ^ 0x41;
  LODWORD(v411) = v542 ^ 0x92BAAC00;
  int v543 = (v411 >> 8) - ((2 * (v411 >> 8)) & 0xEE3C24CE) - 149024153;
  LOWORD(v541) = (BYTE2(v532) ^ 0x27) - ((2 * (BYTE2(v532) ^ 0x27)) & 0x1EA) + 8949;
  int v544 = dword_100239C90[((v541 & 0x2C ^ 0xD930429) + (v541 & 0x3D3) - 1) ^ 0xD9306A8];
  int v545 = v544 - ((2 * v544 + 54081700) & 0xB2DF990) + 120822042;
  HIDWORD(v411) = v545 ^ 0x5CCB;
  LODWORD(v411) = v545 ^ 0xFB270000;
  int v546 = v535 ^ v539 ^ ((v411 >> 16) - ((2 * (v411 >> 16)) & 0xF346D234) - 106731238) ^ v543 ^ (((2
                                                                                                * ((v535 >> 2) & 0x94457BF ^ 0x1C107733)) & 0x30A8040E)
                                                                                              - ((v535 >> 2) & 0x94457BF ^ 0x1C107733)
                                                                                              + 117636600) ^ v529 ^ 0x6FF108B3;
  int v547 = v530 ^ v546;
  unsigned int v548 = (v530 ^ v546 ^ LODWORD(STACK[0x3C8]) ^ 0x7F5AC0A6)
       + (((v492 ^ 0x4B9F3388 ^ LODWORD(STACK[0x28C])) + 1) ^ 0x7FBF7BDD)
       + ((2 * ((v492 ^ 0x4B9F3388 ^ LODWORD(STACK[0x28C])) + 1)) & 0xFF7EF7BA)
       - 2143255517;
  int v549 = v548 + 860921063 - ((2 * v548) & 0x66A139CE);
  unsigned int v550 = (~v549 & 0x400 | ((((~v549 & 0x400u) >> 10) & 1) << 11)) ^ 0x3FDF56BF;
  unsigned int v551 = (&unk_100248C40 ^ 0x8FF5F7BB) + 1879705669 + (STACK[0x3E0] & 0x1FEBEF60);
  unsigned int v552 = v551 - ((2 * v551) & 0xC78169FA) - 473910019;
  unsigned int v553 = (v550 - 1071601343) & (v552 ^ 0xE3C0B400);
  int v554 = STACK[0x3F0];
  if (!v336) {
    int v554 = STACK[0x3E8];
  }
  LODWORD(STACK[0x288]) = v554;
  int v555 = STACK[0x3C0];
  if (v336) {
    int v555 = STACK[0x3A8];
  }
  LODWORD(STACK[0x318]) = v555;
  int v556 = STACK[0x338];
  if (!v336) {
    int v556 = STACK[0x2D8];
  }
  LODWORD(STACK[0x350]) = v556;
  int v557 = STACK[0x410];
  if (v336) {
    int v557 = STACK[0x344];
  }
  LODWORD(STACK[0x2F8]) = v557;
  int v558 = STACK[0x2C0];
  if (!v336) {
    int v558 = STACK[0x2AC];
  }
  LODWORD(STACK[0x310]) = v558;
  LODWORD(STACK[0x264]) = v335;
  int v559 = STACK[0x388];
  if (!v336) {
    int v559 = v335;
  }
  LODWORD(STACK[0x25C]) = v559;
  int v560 = STACK[0x3D8];
  if (!v336) {
    int v560 = STACK[0x3A0];
  }
  LODWORD(STACK[0x238]) = v560;
  int v561 = STACK[0x2E0];
  if (v336) {
    int v561 = STACK[0x2DC];
  }
  LODWORD(STACK[0x260]) = v561;
  int v562 = STACK[0x2D0];
  if (v336) {
    int v562 = STACK[0x2CC];
  }
  LODWORD(STACK[0x2F0]) = v562;
  int v563 = STACK[0x2A4];
  if (v336) {
    int v563 = STACK[0x2A0];
  }
  LODWORD(STACK[0x258]) = v563;
  int v564 = STACK[0x2D4];
  if (!v336) {
    int v564 = STACK[0x2B4];
  }
  LODWORD(STACK[0x2E8]) = v564;
  int v565 = STACK[0x408];
  if (!v336) {
    int v565 = STACK[0x400];
  }
  LODWORD(STACK[0x348]) = v565;
  int v566 = STACK[0x2C8];
  if (v336) {
    int v566 = STACK[0x2C4];
  }
  LODWORD(STACK[0x204]) = v566;
  int v567 = STACK[0x2B0];
  if (!v336) {
    int v567 = STACK[0x2A8];
  }
  LODWORD(STACK[0x270]) = v567;
  int v568 = v532 ^ 0x23C028EE;
  unsigned int v569 = v532 ^ 0x23C028EE ^ v531 ^ v547;
  int v570 = v531 ^ v547;
  LODWORD(STACK[0x28C]) = v531 ^ v547;
  int v571 = v532 ^ 0xEE ^ (v531 ^ v547) ^ 0x3464B3;
  int v572 = dword_100239C90[(((2 * v571) & 0x600164) - v571 - 1811484851) ^ 0x94328B6D];
  int v573 = dword_1002247E0[(((v569 >> 8) & 0x2F ^ 0x92E4F421) + ((v569 >> 8) & 0xD0 ^ 0x81) - 1) ^ 0x92E4F423];
  HIDWORD(v574) = v573 ^ 0x1A6468;
  LODWORD(v574) = v573 ^ 0xDFFFFFFF;
  int v575 = (v574 >> 27) - ((2 * (v574 >> 27)) & 0xDB783E88) + 1841045316;
  unsigned int v576 = (((2 * v575) ^ 0xDB783E88) - 2 * (((2 * v575) ^ 0xDB783E88) & 0x3FA40ABA ^ (2 * v575) & 2) + 1067715256) & 0xE97D4E04 ^ 0x3FA6BBFA;
  int v577 = (v576 - ((2 * v576) & 0x42321400) - 1869182586) ^ v575;
  HIDWORD(v574) = v577 ^ 0x6F940E;
  LODWORD(v574) = v577 ^ 0xF4000000;
  int v578 = (v574 >> 24) - ((2 * (v574 >> 24)) & 0x28F7B6D8);
  int v579 = dword_100249660[((HIWORD(v569) & 0xF ^ 0x36922D0D) + (HIWORD(v569) & 0xF0 ^ 0x150B1) - 1) ^ 0x36937DED];
  unsigned int v580 = 96924509 * v579 - ((193849018 * v579 - 799979766) & 0xE041F34E) + 1481219372;
  int v581 = (v580 >> 2) & 0x94457BF ^ v580;
  HIDWORD(v574) = v581 ^ 0x6796;
  LODWORD(v574) = v581 ^ 0xC6080000;
  char v582 = v578 + 108;
  int v583 = (v574 >> 16) - ((2 * (v574 >> 16)) & 0x4B583EA2);
  unsigned int v584 = v569 ^ 0xA1129B5E;
  int v585 = dword_1002247E0[HIBYTE(v569) ^ 0xFD];
  HIDWORD(v574) = v585 ^ 0x1A6468;
  LODWORD(v574) = v585 ^ 0xDFFFFFFF;
  int v586 = (v574 >> 27) - ((2 * (v574 >> 27)) & 0xC3FE81DE) - 503365393;
  unsigned int v587 = (((2 * v586) ^ 0xC3FE81DE) - ((2 * ((2 * v586) ^ 0xC3FE81DE)) & 0x5EEA0D3C) - 1351285089) & 0xE97D4E04 ^ 0xBFF7B7FE;
  unsigned int v588 = (v587 + 379318794 + ((2 * v587) & 0x328400 ^ 0xD2FA9FEF)) ^ v586;
  HIDWORD(v574) = v588 ^ 0xD6;
  LODWORD(v574) = v588 ^ 0xDF2CB300;
  v583 += 632037201;
  int v589 = v583 ^ (v572 - ((2 * v572 + 54081700) & 0xAEB9E950) + 1492750586) ^ ((v574 >> 8)
                                                                            - ((2 * (v574 >> 8)) & 0x7D01D570)
                                                                            - 1098847560) ^ (v578 + 343661420);
  int v590 = v530 ^ v589 ^ v570 ^ 0x289562B9;
  int v591 = (v584 ^ v530 ^ v583 ^ (v572 - ((2 * v572 - 92) & 0x50) - 6) ^ (BYTE1(v574)
                                                                                       - ((2 * BYTE1(v574)) & 0x70)
                                                                                       - 72) ^ v582 ^ v570 ^ 0xB9) ^ 0x9A;
  unsigned int v592 = (v591 + ((v584 ^ v590) & 0xE1 ^ 0xB6224961) - (v591 & 0xFFFFFFE1)) ^ 0xBF223D49;
  int v593 = dword_100249660[((v592 | 0x4A360A28) - (v592 | 0xB5C9F5D7) - 1245055529) ^ 0x43367EE2];
  unsigned int v594 = 96924509 * v593 - ((193849018 * v593 - 799979766) & 0xC9907C32) - 856628834;
  int v595 = ((v594 >> 2) & 0x94457BF ^ 0x944023A) - ((2 * ((v594 >> 2) & 0x94457BF ^ 0x944023A)) & 0x2000D00) + 1102057152;
  int v596 = (v595 & 0x1114B538 ^ 0x10201521) + (v595 & 0x6E4B4A87);
  int v597 = dword_1002247E0[((v584 ^ v590) >> 24) ^ 0x59];
  HIDWORD(v574) = v597 ^ 0x1A6468;
  LODWORD(v574) = v597 ^ 0xDFFFFFFF;
  int v598 = (v574 >> 27) - ((2 * (v574 >> 27)) & 0x19748548) + 213533348;
  unsigned int v599 = (((2 * v598) ^ 0x19748548) - 2 * (((2 * v598) ^ 0x19748548) & 0x13E953FE ^ (2 * v598) & 4) + 334058490) & 0xE97D4E04 ^ 0x17EBF3FA;
  int v600 = (v599 - ((2 * v599) & 0x2D20C00) - 278502345) ^ v598;
  int v601 = dword_100239C90[((unsigned __int16)(v584 ^ v530 ^ v589 ^ v570 ^ 0x62B9) >> 8) ^ 0x7A];
  HIDWORD(v574) = v600 ^ 0x5F;
  LODWORD(v574) = v600 ^ 0x3799E400;
  int v602 = (v574 >> 8) - ((2 * (v574 >> 8)) & 0x5D9A0F9C) - 1362294834;
  int v603 = v601 - 2 * ((v601 + 27040850) & 0x345381F ^ v601 & 1) - 2065574800;
  HIDWORD(v574) = v603 ^ 0xF4981D;
  LODWORD(v574) = v603 ^ 0x7D000000;
  int v604 = (v574 >> 24) - ((2 * (v574 >> 24)) & 0xB0405608) - 668980476;
  int v605 = ((v584 ^ v590) >> 16);
  unsigned int v606 = ((v605 ^ 0xBB) - ((2 * (v605 ^ 0xBB)) & 0x9C) - 1431846322) ^ 0x8EEEE2EE;
  int v607 = (((2 * v606) | 0x28C38588) - v606 - 341951172) ^ 0x3028E25B;
  int v608 = (v607 - ((2 * v607 + 648701244) & 0x518721FA) - 65485925) ^ dword_1002451F0[(((-(v605 ^ 9) - 570011137) ^ 0xDC1445F9 | 0x1EB6BA60)
                                                                                    - ((-(v605 ^ 9) - 570011137) ^ 0xDC1445F9 | 0xE149459F)
                                                                                    - 515291745) ^ 0x1CA4AED3];
  HIDWORD(v574) = v608 ^ 0x2823;
  LODWORD(v574) = v608 ^ 0xE4EB0000;
  int v609 = v594 ^ v604 ^ (v596 - 1) ^ v546 ^ v589 ^ ((v574 >> 16) - ((2 * (v574 >> 16)) & 0x1DE20276) + 250675515) ^ v602 ^ 0x855D6BA8;
  HIDWORD(v574) = LODWORD(STACK[0x284]) ^ 0x1E2CDCB;
  LODWORD(v574) = LODWORD(STACK[0x284]) ^ 0xA6000000;
  int v610 = (v574 >> 25) - ((2 * (v574 >> 25)) & 0x3ACF96F8);
  HIDWORD(v574) = LODWORD(STACK[0x358]) ^ 0xF82C78;
  LODWORD(v574) = LODWORD(STACK[0x358]) ^ 0x84000000;
  int v611 = (v610 + 493341564) ^ ((v574 >> 25) - ((2 * (v574 >> 25)) & 0x8B371228) - 979662572);
  HIDWORD(v574) = v611 ^ 0xCCCCCCCC;
  LODWORD(v574) = v611 ^ 0x6B506200;
  int v612 = (v574 >> 7) - ((2 * (v574 >> 7)) & 0x857066F8) + 1119368060;
  unsigned int v613 = ((v549 & 0xFFFFFBFF ^ 0xD2897A28 | 0x3662A98A) - (v549 & 0xFFFFFBFF ^ 0xD2897A28 | 0xC99D5675) - 912435595) ^ 0xD7F2EB46;
  int v614 = ((2 * v613) | 0x7A44876A) - v613 - 1025655733;
  unsigned int v615 = v550 - 268452370;
  unsigned int v616 = 1874750316 - v550;
  if (v553 == ((2 * v553) & 0xF4B7F000)) {
    unsigned int v616 = v615;
  }
  unsigned int v617 = ((v552 ^ 0xE3C0B4FD)
        - 803148973
        + v616
        - ((2 * ((v552 ^ 0xE3C0B4FD) - 803148973 + v616)) & 0x43E88902)
        - 1577827199) ^ v614;
  int v618 = v617 ^ v552 ^ 0x7F5F13CA;
  unsigned int v619 = LODWORD(STACK[0x3B8]) ^ v617 ^ v552 ^ 0xAFE4FE56;
  LODWORD(STACK[0x284]) = v619 + v618;
  LODWORD(STACK[0x280]) = 2 * ((v619 & v618) - ((2 * (v619 & v618)) & 0x3246196A)) + 843454826;
  int v620 = (LODWORD(STACK[0x3B0]) ^ 0x321FD2E1 ^ LODWORD(STACK[0x2B8])) + 1;
  unsigned int v621 = (v617 ^ 0x636058C8) + v620;
  int v622 = v621 ^ 0x5DE4BF5F;
  unsigned int v623 = ((2 * v621) & 0xBBC97EBE)
       + v622
       - 2 * ((((2 * v621) & 0xBBC97EBE) + v622 + 22706580) & 0x12F2977B ^ (((2 * v621) & 0xBBC97EBE) + v622) & 3)
       + 340594956;
  unsigned int v624 = (&unk_100248C40 ^ 0xB4FBDAD7) + 1258562857 + (STACK[0x3E0] & 0x69F7B5A0);
  unsigned int v625 = (&unk_100248C40 ^ 0xEDDDE8FF) + 304224001 + (STACK[0x3E0] & 0xDBBBD1E0);
  LODWORD(STACK[0x27C]) = ((v625 - ((2 * v625) & 0xD4947DFE) + 1783250677) ^ 0xA6E55DED ^ v549) + v620;
  unsigned int v626 = ((v624 - ((2 * v624) & 0x264BDC5C) - 1826230740) ^ 0x5F8A8D34 ^ v549) + v620;
  unsigned int v627 = ((2 * v626) & 0xFEEFF5D4) + (v626 ^ 0x7F77FAEA);
  LODWORD(STACK[0x3B0]) = 2 * v627 - 1081181166;
  LODWORD(STACK[0x224]) = v627 + 1249377122;
  unsigned int v628 = v568 ^ 0xF0C5F3E9;
  unsigned int v629 = v612 ^ 0xCE59A320;
  unsigned int v630 = LODWORD(STACK[0x29C]) ^ LODWORD(STACK[0x228]) ^ 0xB14788C7;
  int v631 = LODWORD(STACK[0x29C]) ^ v628;
  int v632 = LODWORD(STACK[0x29C]) ^ v530 ^ 0x4DC7820C;
  unsigned int v633 = LODWORD(STACK[0x28C]) ^ v609 ^ LODWORD(STACK[0x298]) ^ v584 ^ v590 ^ 0xCB4B3A9D;
  int v634 = LODWORD(STACK[0x298]) ^ v609 ^ 0x22EA13BC;
  int v635 = LODWORD(STACK[0x348]) ^ 0x3E269FA8;
  unsigned int v636 = (LODWORD(STACK[0x26C]) ^ 0xD0BBED9C) + (LODWORD(STACK[0x270]) ^ 0xC427F8B6);
  unsigned int v637 = (v636 ^ 0x4A385662)
       + (((LODWORD(STACK[0x3F8]) ^ 0xB8756384) + 1123900472) ^ 0x547A5FFC)
       + ((2 * ((LODWORD(STACK[0x3F8]) ^ 0xB8756384) + 1123900472)) & 0x28F4BFF8)
       - ((2 * v636) & 0x6B8F533A);
  unsigned int v638 = LODWORD(STACK[0x320]) ^ 0xAC7BA012 ^ LODWORD(STACK[0x2E4]);
  unsigned int v639 = LODWORD(STACK[0x290]) ^ 0x9C811C26 ^ LODWORD(STACK[0x2E4]);
  int v640 = LODWORD(STACK[0x22C]) ^ 0x3B6E4AC8 ^ LODWORD(STACK[0x2E4]);
  LODWORD(STACK[0x298]) = v622;
  if ((v622 & 1) == 0) {
    int v640 = v639;
  }
  LODWORD(STACK[0x290]) = v640;
  if ((v622 & 1) == 0) {
    unsigned int v639 = v638;
  }
  LODWORD(STACK[0x29C]) = v639;
  int v641 = LODWORD(STACK[0x380]) ^ v629;
  if (v622) {
    int v642 = v631;
  }
  else {
    int v642 = LODWORD(STACK[0x380]) ^ v629;
  }
  if ((v622 & 1) == 0) {
    int v641 = v632;
  }
  LODWORD(STACK[0x28C]) = v641;
  if (v622) {
    unsigned int v643 = v632;
  }
  else {
    unsigned int v643 = v630;
  }
  if (v622) {
    unsigned int v644 = v634;
  }
  else {
    unsigned int v644 = v633;
  }
  LODWORD(STACK[0x2B8]) = v644;
  LODWORD(STACK[0x3B8]) = v623;
  LODWORD(STACK[0x214]) = v635;
  unsigned int v645 = ((2 * (2 * v637 - 1030057148)) & 0xF9FDFDD4) + ((2 * v637 - 1030057148) ^ 0xFCFEFEEB);
  unsigned int v646 = (LODWORD(STACK[0x350]) ^ 0x369C709B)
       + ((v635 - ((2 * v635 + 139108668) & 0x47489210) + 1741265318) ^ 0x8DCBD5B6)
       + 1;
  unsigned int v647 = (LODWORD(STACK[0x288]) ^ 0x5B552393)
       + (((LODWORD(STACK[0x310]) ^ 0x174B205F) + 1496722228) ^ 0x6FFE6E7F)
       + ((2 * ((LODWORD(STACK[0x310]) ^ 0x174B205F) + 1496722228)) & 0xDFFCDCFE)
       - 1878945407;
  unsigned int v648 = v645 - ((2 * v645 + 1656759624) & 0xCBFCD1C4) + 392067974;
  unsigned int v649 = LODWORD(STACK[0x204]) ^ 0xD0BBED9C;
  LODWORD(STACK[0x228]) = v649;
  unsigned int v650 = v649 + (v646 ^ 0xEB32EF7F) + ((2 * v646) & 0xD665DEFE) + 1590192772;
  unsigned int v651 = (v650 ^ 0xDDF0DFF9) + 571416583 + ((2 * v650) & 0xBBE1BFF2);
  unsigned int v652 = ((v651 >> 1) ^ 0xFFCE64FF)
       + (v651 & 0xFF9CC9FE)
       - ((2 * (((v651 >> 1) ^ 0xFFCE64FF) + (v651 & 0xFF9CC9FE)) - 669411578) & 0xE0679BEC)
       - 599746183;
  unsigned int v653 = (LODWORD(STACK[0x318]) ^ 0x5B552393) + (v647 ^ 0x7EB6FD56) + ((2 * v647) & 0xFD6DFAAC) - 478801593;
  int v654 = 2 * (((2 * v653) & 0x5BA39EFA) + (v653 ^ 0x6DD1CF7D)) + 610033926;
  int v655 = ((2 * v654) & 0xEFEBE7C) + (v654 ^ 0x77F5F3E);
  v656 = (void *)STACK[0x568];
  unsigned int v657 = v655 - ((2 * v655 + 343458314) & 0x9C5BFC22) + 1483366166;
  int v658 = *(void *)(STACK[0x568]
                   + 8
                   * ((*(void *)(STACK[0x568]
                                 + 8 * (*(void *)(STACK[0x568] + 8 * (*(void *)(STACK[0x568] + 8) & 1)) & 1)) & 1) == 0)) & 1;
  unsigned int v659 = (v658 ^ 0xFE7DFFFF) + 2 * v658 + 683161310;
  LODWORD(STACK[0x3E0]) = LODWORD(STACK[0x230]) - 1254488118;
  LODWORD(STACK[0x3C8]) = v657;
  LODWORD(STACK[0x3B0]) = v652;
  LODWORD(STACK[0x320]) = v648;
  LODWORD(STACK[0x230]) = v642;
  LODWORD(STACK[0x22C]) = v643;
  if ((v623 & 2) != 0) {
    int v660 = v642;
  }
  else {
    int v660 = v643;
  }
  LODWORD(STACK[0x204]) = v660;
  int v661 = STACK[0x420];
  *(void *)STACK[0x578] = *v656 ^ 0xAEAEAEAEAEAEAEAELL;
  BOOL v662 = v659 > 0x273636DE;
  if (v659 < 0x273636DD) {
    BOOL v662 = 1;
  }
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + ((230 * !v662) ^ v661)))(579636850);
}

uint64_t sub_1000E56EC@<X0>(unint64_t a1@<X8>)
{
  *(unsigned char *)(STACK[0x4F8] - 0x69023F1E88EC7975) = *(unsigned char *)STACK[0x450] ^ 0xB4 ^ byte_1002477C0[(183 * (v1 ^ 0x248u)) ^ 0x390];
  BOOL v3 = v2 > 0x2746D86D;
  if (v2 < a1 != a1 > 0x2746D86D) {
    BOOL v3 = v2 < a1;
  }
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((137 * !v3) ^ v1)))();
}

void sub_1000E5820()
{
}

uint64_t sub_1000E5830(uint64_t a1)
{
  ((void (*)(unint64_t))*(&off_10026D1A0 + (v1 ^ 0xC06)))(STACK[0x590]);
  ((void (*)(uint64_t))*(&off_10026D1A0 + v1 + 1030))(a1);
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((v1 - 9) ^ 0x37)))();
}

uint64_t sub_1000E5838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,uint64_t a54,uint64_t a55,int a56,int a57,uint64_t a58,int a59,int a60,int a61,int a62,int a63)
{
  if (STACK[0x234]) {
    int v78 = STACK[0x24C];
  }
  else {
    int v78 = STACK[0x200];
  }
  if (STACK[0x234]) {
    int v79 = STACK[0x268];
  }
  else {
    int v79 = STACK[0x240];
  }
  int v80 = STACK[0x21C];
  if (STACK[0x234])
  {
    int v81 = a74;
  }
  else
  {
    int v80 = STACK[0x210];
    int v81 = STACK[0x208];
  }
  if (STACK[0x234]) {
    a73 = a75;
  }
  if (STACK[0x234]) {
    int v83 = STACK[0x20C];
  }
  else {
    int v83 = STACK[0x218];
  }
  int v84 = a68 ^ LODWORD(STACK[0x2E4]);
  int v85 = (v77 - 2117582552) | 0x804;
  BOOL v86 = LODWORD(STACK[0x3E0]) == -1254488118;
  int v87 = STACK[0x410];
  if (LODWORD(STACK[0x3E0]) != -1254488118) {
    int v87 = STACK[0x344];
  }
  LODWORD(STACK[0x24C]) = v87;
  int v88 = STACK[0x220];
  if (v86) {
    int v89 = v80;
  }
  else {
    int v89 = STACK[0x220];
  }
  LODWORD(STACK[0x2E4]) = v89;
  if (v86) {
    int v80 = v88;
  }
  LODWORD(STACK[0x240]) = v80;
  int v90 = STACK[0x2E0];
  if (!v86) {
    int v90 = STACK[0x2DC];
  }
  LODWORD(STACK[0x2E0]) = v90;
  int v91 = STACK[0x2A4];
  if (!v86) {
    int v91 = STACK[0x2A0];
  }
  LODWORD(STACK[0x2A4]) = v91;
  int v92 = STACK[0x2D4];
  if (v86) {
    int v92 = STACK[0x2B4];
  }
  LODWORD(STACK[0x2DC]) = v92;
  int v93 = STACK[0x2B0];
  if (v86) {
    int v93 = STACK[0x2A8];
  }
  LODWORD(STACK[0x220]) = v93;
  LODWORD(STACK[0x2B0]) = LODWORD(STACK[0x284]) ^ 0x6E0DF939;
  LODWORD(STACK[0x2A0]) = LODWORD(STACK[0x280]) ^ 0x334D9B6B;
  int v94 = v84 ^ 0x7E983DA4;
  LODWORD(STACK[0x280]) = v78;
  LODWORD(STACK[0x200]) = v79;
  if (v86) {
    int v95 = v78;
  }
  else {
    int v95 = v79;
  }
  LODWORD(STACK[0x234]) = v95;
  LODWORD(STACK[0x210]) = v81;
  LODWORD(STACK[0x20C]) = a73;
  if (v86) {
    int v96 = v81;
  }
  else {
    int v96 = a73;
  }
  LODWORD(STACK[0x344]) = v96;
  int v97 = STACK[0x2BC];
  LODWORD(STACK[0x218]) = v83;
  if (v86) {
    int v97 = v83;
  }
  LODWORD(STACK[0x27C]) = v97;
  BOOL v98 = (STACK[0x298] & 1) == 0;
  if (STACK[0x298]) {
    int v99 = a57;
  }
  else {
    int v99 = v94;
  }
  if ((STACK[0x298] & 1) == 0) {
    a63 = a62;
  }
  LODWORD(STACK[0x2B4]) = a63;
  if (!v98) {
    a53 = a59;
  }
  LODWORD(STACK[0x208]) = v99;
  STACK[0x420] = (v85 - 1926426645) & 0x72D2E89E;
  LODWORD(STACK[0x21C]) = a53;
  unint64_t v102 = (STACK[0x420] ^ 0xC23B04F52BC36E07) + v75 + ((unint64_t)(v75 < v76) << 32) + 0x3DC4FB0A66B9D9CDLL;
  *(void *)(STACK[0x578] + 8 * v102) = *(void *)(STACK[0x568] + 8 * v102) ^ 0xAEAEAEAEAEAEAEAELL;
  return ((uint64_t (*)(uint64_t, uint64_t))*(&off_10026D1A0 + ((46 * (v75 - 1837283233 > 1)) ^ v85)))(4216840473, 1812684658);
}

void sub_1000E60F8()
{
}

uint64_t sub_1000E6100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v74 = (((unint64_t)(a6 + 0x4AA16570590ACCAFLL) >> 30) ^ 0xD2FF6B327EDEFCFFLL)
      + a6
      + (((unint64_t)(a6 + 0x4AA16570590ACCAFLL) >> 29) & 0x4FDBDF9FELL);
  unint64_t v75 = (((v74 + 0x77A1FA3DDA2BCFB0) >> 12) ^ 0xEDED6DEAFB3FFFF6)
      + v74
      + (((v74 + 0x77A1FA3DDA2BCFB0) >> 11) & 0x1ADBD5F67FFFECLL);
  unint64_t v76 = v75
      + (((v75 - 0x764B73AD21143046) >> 7) ^ 0xDCC04395170E1288)
      - (((v75 - 0x764B73AD21143046) >> 6) & 0x27F78D5D1E3DAEELL)
      + 1;
  uint64_t v77 = v76 - ((2 * v76 + 0x59E8917B8FBB7A62) & 0x4C2317E923BB072ALL) - 0x2CFA2B4DA644BF3ALL;
  unint64_t v78 = ((2 * ((v77 ^ 0x26118BF491DD8395) + 0x288AB139EA2E5744)) & 0xE75FFFFEFC7F3EDALL)
      + (((v77 ^ 0x26118BF491DD8395) + 0x288AB139EA2E5744) ^ 0x73AFFFFF7E3F9F6DLL);
  unint64_t v79 = v78
      + (((v78 - 0x73AFFFFF7E3F9F6DLL) >> 24) ^ 0x8804085100051082)
      - (((v78 - 0x73AFFFFF7E3F9F6DLL) >> 23) & 0x15DFFF5DEFALL);
  unint64_t v80 = v79
      + (((v79 + 0x44BF7AF81BB5011) >> 13) ^ 0xAC840148802A1C20)
      - (((v79 + 0x44BF7AF81BB5011) >> 12) & 0x7FD6EFFABC7BELL);
  unint64_t v81 = v80
      + (((v80 + 0x57C7F667019133F1) >> 5) ^ 0xB05A82D008030001)
      - (((v80 + 0x57C7F667019133F1) >> 4) & 0xF4AFA5FEFF9FFFCLL)
      + 3;
  unint64_t v82 = v81 - ((2 * v81 + 0x4EDAE72DF31C67DALL) & 0xB48B7E454FFD7E64) - 0x7E4CCD465E730CE1;
  unint64_t v83 = (v82 ^ 0xF254B173A45EAA12)
      + ((v82 >> 31) ^ 0x916C8589C4A962B7)
      + ((v82 >> 30) & 0x3BFFFFF5ELL ^ 0xFFFFFFFC76AD3AB1)
      + 0x6E937A77DFFFFFB1;
  unint64_t v84 = (((((2 * v83) & 0xC47A5B58E95F7A9ELL) + (v83 ^ 0xE23D2DAC74AFBD4FLL) + 0x1DC2D2538B5042B1) >> 11) ^ 0x739FFF4FF56F5DFDLL)
      + ((2 * v83) & 0xC47A5B58E95F7A9ELL)
      + (v83 ^ 0xE23D2DAC74AFBD4FLL)
      + (((((2 * v83) & 0xC47A5B58E95F7A9ELL) + (v83 ^ 0xE23D2DAC74AFBD4FLL) + 0x1DC2D2538B5042B1) >> 10) & 0x3FFE9FEADEBBFALL);
  unint64_t v85 = (((v84 - 0x55DD2CFC6A1F1B4CLL) >> 4) ^ 0xBEFF3F57DFBCED6FLL)
      + v84
      + (((v84 - 0x55DD2CFC6A1F1B4CLL) >> 3) & 0x1DFE7EAFBF79DADELL);
  uint64_t v86 = v85 - ((2 * v85 + 0x4727576C47EE8ALL) & 0xE06EC9D02057EELL) - 0x146C34EF61CBDCC4;
  uint64_t v87 = ((2 * ((v86 ^ 0x703764E8102BF7) + 0x1E4A8A832E7300A6)) & 0x7FADBF37BFFFFFFCLL)
      + (((v86 ^ 0x703764E8102BF7) + 0x1E4A8A832E7300A6) ^ 0x3FD6DF9BDFFFFFFELL);
  unint64_t v88 = v87
      + (((unint64_t)(v87 - 0x3FD6DF9BDFFFFFFELL) >> 30) ^ 0x854185040001D12ALL)
      - (((unint64_t)(v87 - 0x3FD6DF9BDFFFFFFELL) >> 29) & 0x7FFFC5DAALL);
  unint64_t v89 = v88
      + (((v88 + 0x3AE79B601FFE2ED8) >> 15) ^ 0x7E7B65FDB5F7BCF8)
      + (((v88 + 0x3AE79B601FFE2ED8) >> 14) & 0x2CBFB6BEF79F0);
  unint64_t v90 = v89
      + (((v89 - 0x4393CA9D95F98E20) >> 8) ^ 0xEE352763AFBE8CEDLL)
      + (((v89 - 0x4393CA9D95F98E20) >> 7) & 0x6A4EC75F7D19DALL)
      + 1;
  unint64_t v91 = v90 - ((2 * v90 - 0x6391E4028B70361CLL) & 0x86F079A3613DDDEELL) - 0x6E50B52F95192C17;
  unint64_t v92 = ((2 * ((v91 ^ 0xC3783CD1B09EEEF7) + 0x2C1E97BC5C429E81)) & 0x55FD2D1DBCDCFFA6)
      + (((v91 ^ 0xC3783CD1B09EEEF7) + 0x2C1E97BC5C429E81) ^ 0x2AFE968EDE6E7FD3);
  unint64_t v93 = (((v92 - 0x2AFE968EDE6E7FD3) >> 27) ^ 0xF7FE76B73DBFEFE9)
      + v92
      + (((v92 - 0x2AFE968EDE6E7FD3) >> 26) & 0x2E7B7FDFD2);
  unint64_t v94 = (((v93 - 0x22FD0D461C2E6FBCLL) >> 15) ^ 0x5F72FFFE7C5EEB36)
      + v93
      + (((v93 - 0x22FD0D461C2E6FBCLL) >> 14) & 0x1FFFCF8BDD66CLL);
  unint64_t v95 = (((v94 + 0x7D8FF2BB6772A50ELL) >> 8) ^ 0xFBEF7E7B37BBBF97)
      + v94
      + (((v94 + 0x7D8FF2BB6772A50ELL) >> 7) & 0x1DEFCF66F777F2ELL);
  unint64_t v96 = v95 - ((2 * v95 + 0x340E8805F6DCAEELL) & 0x220468122728BA24) - 0x6D5D57B6BCB4BD77;
  unint64_t v97 = (v96 ^ 0x8D13B1AEBFEB8D82)
      + ((v96 >> 30) ^ 0x7DB5FF95F9913D43)
      + ((v96 >> 29) & 0x79BBFF7F2 ^ 0x4089D8570)
      - 0x7DB5FF97CDDFFBF9;
  unint64_t v98 = (((((2 * v97) & 0xFD7FADD425FF7AF8) + (v97 ^ 0xFEBFD6EA12FFBD7CLL) + 0x1402915ED004284) >> 8) ^ 0x7FFEA7EFEC95FE7CLL)
      + ((2 * v97) & 0xFD7FADD425FF7AF8)
      + (v97 ^ 0xFEBFD6EA12FFBD7CLL)
      + (((((2 * v97) & 0xFD7FADD425FF7AF8) + (v97 ^ 0xFEBFD6EA12FFBD7CLL) + 0x1402915ED004284) >> 7) & 0x1FD4FDFD92BFCF8);
  unint64_t v99 = v98
      + (((v98 - 0x7EBE7ED9FF95BBF8) >> 8) ^ 0xD5044618043C00CALL)
      - (((v98 - 0x7EBE7ED9FF95BBF8) >> 7) & 0x1F773CFF787FE6ALL)
      + 1;
  unint64_t v100 = v99 - ((2 * v99 + 0x587A761BF85C867ALL) & 0x9C79C01BD0E66262) - 0x585E4E41B5E8B92;
  uint64_t v101 = ((2 * ((v100 ^ 0x4E3CE00DE8733131) + 0x75D572E7727DD82)) & 0x4FDFBDBEC5EFBA7CLL)
       + (((v100 ^ 0x4E3CE00DE8733131) + 0x75D572E7727DD82) ^ 0x27EFDEDF62F7DD3ELL);
  unint64_t v102 = v101
       + (((unint64_t)(v101 - 0x27EFDEDF62F7DD3ELL) >> 30) ^ 0x8B4781A8050A0899)
       - (((unint64_t)(v101 - 0x27EFDEDF62F7DD3ELL) >> 29) & 0x7F5EBEECCLL);
  unint64_t v103 = v102
       + (((v102 + 0x4CC89F7897FE1A29) >> 9) ^ 0xA94C01009A020046)
       - (((v102 + 0x4CC89F7897FE1A29) >> 8) & 0x67FDFECBFBFF72);
  unint64_t v104 = v103
       + (((v103 - 0x5C8361880203E61DLL) >> 7) ^ 0x4D3FF6FFF8DFFFF9)
       + (((v103 - 0x5C8361880203E61DLL) >> 6) & 0x27FEDFFF1BFFFF2)
       + 2;
  unint64_t v105 = v104 - ((2 * v104 - 0x5386B10FF5C7CC30) & 0xD460B24072623150) - 0x3F92FF67C1B2CD70;
  uint64_t v106 = ((2 * ((v105 ^ 0x6A305920393118A8) + 0x20226CA5EA003BB7)) & 0x66F6DE69FF777BC6)
       + (((v105 ^ 0x6A305920393118A8) + 0x20226CA5EA003BB7) ^ 0x337B6F34FFBBBDE3);
  unint64_t v107 = v106
       + (((unint64_t)(v106 - 0x337B6F34FFBBBDE3) >> 27) ^ 0x12279880020A1840)
       - (((unint64_t)(v106 - 0x337B6F34FFBBBDE3) >> 26) & 0x3FFBEBCF7ELL);
  unint64_t v108 = v107
       + (((v107 - 0x45A307B501C5D623) >> 13) ^ 0xBEF7FD7F767ED4FFLL)
       + (((v107 - 0x45A307B501C5D623) >> 12) & 0xFFAFEECFDA9FELL);
  unint64_t v109 = v108
       + (((v108 - 0x49B05347844AB22) >> 4) ^ 0xF97F5DFEF9FCB7FALL)
       + (((v108 - 0x49B05347844AB22) >> 3) & 0x12FEBBFDF3F96FF4)
       + 1;
  unint64_t v110 = v109 - ((2 * v109 + 0x3CB39991B7D39C6) & 0x8E4CE4A1DB415BCELL) - 0x36F3F0E284A0B536;
  unint64_t v111 = (v110 ^ 0xB541D018924A52A8)
       + ((v110 >> 26) ^ 0x33EFE5828783F1DALL)
       + ((v110 >> 25) & 0x5FAFEFEFFCLL ^ 0x5AA0E80C48)
       - 0x33EFE5AFD7F7F7FELL;
  unint64_t v112 = ((2 * v111) & 0xE76BD399FA5E9DB6)
       + (v111 ^ 0xF3B5E9CCFD2F4EDBLL)
       + (((((2 * v111) & 0xE76BD399FA5E9DB6) + (v111 ^ 0xF3B5E9CCFD2F4EDBLL) + 0xC4A163302D0B125) >> 15) ^ 0x9A040A74264704)
       - (((((2 * v111) & 0xE76BD399FA5E9DB6) + (v111 ^ 0xF3B5E9CCFD2F4EDBLL) + 0xC4A163302D0B125) >> 14) & 0x3F7EB17B371F6);
  int v113 = ((v112 + 0xBB012288EAA6A21) >> 6) - (((v112 + 0xBB012288EAA6A21) >> 5) & 0x2FF64738);
  LODWORD(v112) = ((2 * (v112 - 1901434335)) & 0xE1DFFFAE)
                + ((v112 - 1901434335) ^ 0x70EFFFD7)
                + ((v113 + 402334620) ^ 0xB6FFE7DC)
                + ((2 * (v113 + 402334620)) & 0xBDF6777E ^ 0xD209B8C7);
  int v114 = v100 ^ v86 ^ a5 ^ (v112 - ((2 * v112 + 1472468) & 0x3B419B6) - 270186299);
  LODWORD(v86) = ((2 * (v114 & 7 ^ 5)) | 0x42236B82) - (v114 & 7 ^ 5) - 554808769;
  int v115 = (v86 & 0x6B111EF4 ^ 0xA81106A4) + (v86 ^ 0x53A8795B) - ((v86 ^ 0x53A8795B) & 0x6B111EF4);
  LODWORD(v86) = (((v114 ^ 2) + 1) & 7) - 2 * (((v114 ^ 2) + 1) & 3) + 1453350803;
  LODWORD(STACK[0x2A8]) = v86;
  unint64_t v116 = v86 ^ 0x56A05F93;
  uint64_t v117 = 255;
  if (v115 == -1716989330) {
    uint64_t v117 = 0;
  }
  STACK[0x410] = v116;
  int v118 = (v117 << v116) - ((2 * (v117 << v116)) & 0xC5B07EB8) - 489144484;
  __int16 v119 = 2 * ((v117 << v116) - ((2 * (v117 << v116)) & 0x7EB8) + 16220);
  char v120 = (v118 ^ 0xD1) + (v119 & 0x1A ^ 0x18) + 115 + (((v119 ^ 0xB8) - ((2 * (v119 ^ 0xB8)) & 0x44) - 94) ^ 0x5D);
  char v121 = (v120 ^ 0xED) + 19 + ((2 * v120) & 0xDA);
  LODWORD(STACK[0x268]) = v115;
  if (v115 == -1716989330) {
    char v121 = 0;
  }
  BOOL v122 = LODWORD(STACK[0x3E0]) == -1254488118;
  int v123 = STACK[0x3C0];
  if (LODWORD(STACK[0x3E0]) != -1254488118) {
    int v123 = STACK[0x3A8];
  }
  LODWORD(STACK[0x284]) = v123;
  int v124 = STACK[0x338];
  if (v122) {
    int v124 = STACK[0x2D8];
  }
  LODWORD(STACK[0x2D4]) = v124;
  int v125 = STACK[0x210];
  if (v122) {
    int v125 = STACK[0x20C];
  }
  LODWORD(STACK[0x2D8]) = v125;
  int v126 = STACK[0x2D0];
  if (!v122) {
    int v126 = STACK[0x2CC];
  }
  LODWORD(STACK[0x2D0]) = v126;
  int v127 = STACK[0x2BC];
  if (!v122) {
    int v127 = STACK[0x218];
  }
  LODWORD(STACK[0x210]) = v127;
  int v128 = STACK[0x2C8];
  if (!v122) {
    int v128 = STACK[0x2C4];
  }
  LODWORD(STACK[0x2CC]) = v128;
  LODWORD(STACK[0x20C]) = a63 & 0xDC1BF272;
  HIDWORD(a63) &= 0xEFFCFFBC;
  if (STACK[0x298]) {
    a67 = a71;
  }
  BOOL v130 = (STACK[0x3B8] & 2) == 0;
  int v131 = STACK[0x290];
  if ((STACK[0x3B8] & 2) != 0) {
    int v131 = STACK[0x208];
  }
  HIDWORD(a42) = v131;
  int v132 = STACK[0x28C];
  if ((STACK[0x3B8] & 2) != 0) {
    int v132 = a72;
  }
  HIDWORD(a45) = v132;
  if ((STACK[0x3B8] & 2) != 0) {
    a66 = a64;
  }
  LODWORD(a52) = a66;
  unsigned int v134 = v91 ^ v77 ^ v72 ^ v105;
  unsigned int v135 = v96 ^ v82 ^ v73 ^ v110;
  unsigned int v136 = ((v134 & 0x54) + (v134 & 0x7F ^ 0xFFFFFFFD) + (v134 & 0x54 | 0xAFABEC2B) + 1) ^ 0xAFABEC16;
  unsigned int v137 = ((2 * (v134 & 0xFFFFFF80 ^ 0xBEC1D880)) | 0x34F2DF7E) - (v134 & 0xFFFFFF80 ^ 0xBEC1D880) - 444166079;
  int v138 = v137 ^ 0xE986FBE;
  HIDWORD(v171) = v137 & 0xC988221E ^ 0xC1000000;
  unsigned int v139 = ((v118 ^ 0xFFF7EBE3) + (v119 & 0x100) + 1226397312) ^ 0x4911423F;
  LODWORD(STACK[0x218]) = v114;
  HIDWORD(v170) = (((419430400 * v139 - ((838860800 * v139) & 0x9C000000) + 1322904326) ^ 0x4ED9EB06) & (v135 ^ 0x857EB65B))
                - ((2
                  * (((419430400 * v139 - ((838860800 * v139) & 0x9C000000) + 1322904326) ^ 0x4ED9EB06) & (v135 ^ 0x857EB65B))) & 0x924F8556)
                - 920141141;
  unsigned __int8 v140 = (v121 & (v134 ^ 0x79)) - ((2 * (v121 & (v134 ^ 0x79))) & 0xA6) - 45;
  int v141 = (v134 ^ BYTE1(v134) ^ BYTE2(v134)) ^ HIBYTE(v134) ^ 0x4F;
  unsigned int v142 = 16843009 * v141 - ((33686018 * v141) & 0x84A1CC6E) - 1034885577;
  unsigned int v143 = (((v135 ^ BYTE1(v135) ^ BYTE2(v135)) ^ 0x72)
        - ((2 * ((v135 ^ BYTE1(v135) ^ BYTE2(v135)) ^ 0x72)) & 0x2C)
        + 1124834838) ^ 0xC20AD664;
  unsigned int v144 = (((2 * v143) | 0x1F5A7FD0) - v143 - 263012328) ^ HIBYTE(v135) ^ 0x8EAC7773;
  int v145 = 16843009 * v144 - ((33686018 * v144) & 0x629247AE) + 826876887;
  LODWORD(a63) = v134;
  LODWORD(STACK[0x3A8]) = 33686018 * v136;
  LODWORD(v170) = v138 & 0xC9882200;
  LODWORD(v171) = 16843009 * v139 - ((33686018 * v139) & 0x24EC8E9C) + 309741390;
  LODWORD(STACK[0x3C0]) = ((v140 & 0xED ^ 0x410A082C) + (v140 ^ 0x203430D3) - ((v140 ^ 0x203430D3) & 0x2030ED)) ^ v171;
  unint64_t v146 = STACK[0x578];
  uint64_t v147 = *(void *)(v146 + 8 * (*(void *)(v146 + 8 * ((*(_DWORD *)STACK[0x578] & 1) == 0)) & 1));
  LODWORD(STACK[0x298]) = v142;
  LODWORD(STACK[0x2BC]) = v145 ^ v142;
  LODWORD(v147) = *(void *)(v146 + 8 * ((v147 & 1) == 0)) & 1;
  LODWORD(STACK[0x208]) = v135;
  LODWORD(STACK[0x290]) = v135 ^ 0x2937AA06;
  uint64_t v148 = (v147 | (2 * v147) | 0x8F65A390) ^ 2;
  uint64_t v149 = STACK[0x420] ^ 0x2BC;
  int v150 = STACK[0x2B4];
  LODWORD(STACK[0x338]) = a67;
  if (!v130) {
    int v150 = a67;
  }
  HIDWORD(a49) = v150;
  BOOL v151 = v148 == -1889164400;
  unint64_t v152 = (unint64_t)((v149 + 103361864) > 0x6292F72) << 32;
  unint64_t v153 = 0x5F3D51B5D321F3ADLL
       * (*(void *)(v146 + ((unint64_t)((v149 + 103361864) > 0x6292F72) << 35)) ^ 0xAEAEAEAEAEAEAEAELL)
       - ((0xBE7AA36BA643E75ALL
         * (*(void *)(v146 + ((unint64_t)((v149 + 103361864) > 0x6292F72) << 35)) ^ 0xAEAEAEAEAEAEAEAELL)) & 0x91978618F26D4518)
       - 0x37343CF386C95D74;
  unint64_t v154 = ((2 * ((v153 ^ 0x2E32AD250418208CLL) + v152)) & 0xE7FA6F7CFEFDB9BCLL)
       + (((v153 ^ 0x2E32AD250418208CLL) + v152) ^ 0xF3FD37BE7F7EDCDELL);
  unint64_t v155 = v154
       + (((v154 + 0xC02C84180812322) >> 32) ^ 0x66295085011060C8)
       - (((v154 + 0xC02C84180812322) >> 31) & 0x1FDDF3E6ELL);
  unint64_t v156 = v155
       + (((v155 - 0x5A268843808F3DA6) >> 16) ^ 0x7E7FBF6CD56EFFFFLL)
       + (((v155 - 0x5A268843808F3DA6) >> 15) & 0x17ED9AADDFFFELL);
  unint64_t v157 = v156
       + (((v156 + 0x2759B84FAA01C25BLL) >> 8) ^ 0x8233201500105420)
       - (((v156 + 0x2759B84FAA01C25BLL) >> 7) & 0x199BFD5FFDF57BELL)
       + 2;
  uint64_t v158 = v157 - ((2 * v157 + 0x3853AD88371BB5F2) & 0x5F42EE5CFC703BDELL) - 0x7434B20D663A0718;
  unint64_t v159 = ((2 * ((v153 ^ 0xE76AB422070EBF63 ^ v158) + v152)) & 0xE7D4FEFFFCF7F9EELL)
       + (((v153 ^ 0xE76AB422070EBF63 ^ v158) + v152) ^ 0xF3EA7F7FFE7BFCF7);
  unint64_t v160 = v159
       + (((v159 + 0xC15808001840309) >> 32) ^ 0x5AC048154813ALL)
       - (((v159 + 0xC15808001840309) >> 31) & 0xFD56FD8A);
  unint64_t v161 = v160
       + (((v160 + 0xC0FD47B802F81CFLL) >> 16) ^ 0x3DEFFF75AFEF9DF7)
       + (((v160 + 0xC0FD47B802F81CFLL) >> 15) & 0x1FEEB5FDF3BEELL);
  unint64_t v162 = v161
       + (((v161 - 0x31E02AFA2FC01C28) >> 8) ^ 0x40601210200488)
       - (((v161 - 0x31E02AFA2FC01C28) >> 7) & 0x17F3FDBDFBFF6EELL)
       + 2;
  unint64_t v163 = v162 - ((2 * v162 + 0x9C566FA6378981CLL) & 0xD3FE8E379A2C3A9ALL) + 0x6EE1FA98FED2695BLL;
  unint64_t v164 = ((2 * ((v153 ^ 0x21348417B420BFC1 ^ v163) + v152)) & 0xF7FF5F3D779D70F2)
       + (((v153 ^ 0x21348417B420BFC1 ^ v163) + v152) ^ 0xFBFFAF9EBBCEB879);
  unint64_t v165 = v164
       + (((v164 + 0x400506144314787) >> 32) ^ 0xE088006042507E00)
       - (((v164 + 0x400506144314787) >> 31) & 0x17B5F03FELL);
  unint64_t v166 = v165
       + (((v165 + 0x2378500101E0C987) >> 16) ^ 0x76F9A98ADF1DFAF5)
       + (((v165 + 0x2378500101E0C987) >> 15) & 0x15315BE3BF5EALL);
  if (v148 != -1889164400) {
    BOOL v151 = v148 > 0x8F65A392;
  }
  HIDWORD(a50) = v145 ^ 0xB4978217;
  LODWORD(v169) = 16843009 * v136 - 803244119;
  HIDWORD(v169) = (33686018 * v136) & 0xA03EEF52;
  unint64_t v167 = v166
       + (((v166 - 0x53815989DD3D316ELL) >> 8) ^ 0x649282C0360C488ALL)
       - (((v166 - 0x53815989DD3D316ELL) >> 7) & 0xDAFA7F93E76EEALL)
       + 2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + ((49 * !v151) ^ STACK[0x420])))(2405802896, 3879603023, 1240448233, v149, v148, 0x7DDEC47EBCA5E58CLL, 1342219776, v167 - ((2 * v167 + 0x7DDEC47EBCA5E58CLL) & 0x7A2161056704D8B6) + 0x3C0012C211D55F21, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           v169,
           v170,
           v171,
           a63);
}

uint64_t sub_1000E7AC0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,int a62,int a63)
{
  BOOL v73 = LODWORD(STACK[0x3E0]) == -1254488118;
  int v74 = STACK[0x280];
  if (LODWORD(STACK[0x3E0]) == -1254488118) {
    int v74 = STACK[0x200];
  }
  LODWORD(STACK[0x280]) = v74;
  int v75 = STACK[0x388];
  if (v73) {
    int v75 = STACK[0x264];
  }
  LODWORD(STACK[0x2C8]) = v75;
  int v76 = STACK[0x408];
  if (v73) {
    int v76 = STACK[0x400];
  }
  LODWORD(STACK[0x2C4]) = v76;
  LODWORD(STACK[0x388]) = (a4 - 1686648063) ^ a72;
  LODWORD(STACK[0x28C]) = a66 ^ 0xF0F13CB0;
  LODWORD(STACK[0x2B4]) = a60 - a61;
  LODWORD(STACK[0x338]) = a63 ^ a64;
  LODWORD(STACK[0x264]) = LODWORD(STACK[0x2BC]) ^ 0x98E35E99;
  LODWORD(STACK[0x29C]) = a66 ^ 0x805280A2;
  LODWORD(STACK[0x420]) = a66 ^ 0x9F06705;
  return ((uint64_t (*)(uint64_t, uint64_t))*(&off_10026D1A0
                                                    + ((2 * ((v72 - 103362417) < 2)) | (32 * ((v72 - 103362417) < 2)) | (a4 - 34))))(0xA8AD9D00ACE38CALL, 328705121);
}

void sub_1000E8404()
{
}

#error "1000EAFC0: call analysis failed (funcsize=1834)"

uint64_t sub_1000EAFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60)
{
  int v64 = (STACK[0x3F8] + 1360239058) & 0xFBCEB1F7;
  int v65 = STACK[0x330];
  if (LODWORD(STACK[0x3E0]) == -1254488118) {
    int v65 = STACK[0x32C];
  }
  HIDWORD(a52) = v65;
  LODWORD(STACK[0x408]) = LODWORD(STACK[0x208]) ^ 0xF42E8F18;
  LODWORD(STACK[0x3F8]) = a60 - LODWORD(STACK[0x2B8]);
  LODWORD(STACK[0x2B8]) = HIDWORD(a39) - a40;
  LODWORD(STACK[0x2B4]) = LODWORD(STACK[0x240]) ^ 0xF27071FC;
  LODWORD(STACK[0x330]) = LODWORD(STACK[0x318]) ^ 0x300615CA;
  LODWORD(STACK[0x32C]) = HIDWORD(a38) - LODWORD(STACK[0x2A4]);
  LODWORD(STACK[0x2B0]) = (v64 - 347067732) ^ LODWORD(STACK[0x228]);
  uint64_t v66 = (v64 + 1569);
  unint64_t v67 = (v61 | ((unint64_t)(v61 < 0x2B676E17) << 32)) - 728198679;
  unint64_t v68 = v66
      + 0x5F3D51B5D321F3ADLL * (*(void *)(STACK[0x578] + 8 * v67) ^ 0xAEAEAEAEAEAEAEAELL)
      - ((0x3E7AA36BA643E75ALL * (*(void *)(STACK[0x578] + 8 * v67) ^ 0xAEAEAEAEAEAEAEAELL)) & 0x7A47032A15A61FB4)
      + 0x3D2381950AD307E2;
  unint64_t v69 = ((2 * ((v63 ^ 0x138548781DB6ACEALL ^ v68) + v67)) & 0xD5FFFCF97DDDB27ALL)
      + (((v63 ^ 0x138548781DB6ACEALL ^ v68) + v67) ^ 0x6AFFFE7CBEEED93DLL);
  unint64_t v70 = v69
      + (((v69 - 0x6AFFFE7CBEEED93DLL) >> 32) ^ 0x4890C6101700000)
      - (((v69 - 0x6AFFFE7CBEEED93DLL) >> 31) & 0x1FD1FFFFELL);
  unint64_t v71 = v70
      + (((v70 - 0x6F890ADDC05ED93DLL) >> 16) ^ 0xFB3BD179F7FEAFB3)
      + (((v70 - 0x6F890ADDC05ED93DLL) >> 15) & 0x1A2F3EFFD5F66);
  unint64_t v72 = v71 - 0x6AC4DC57B85D88F0;
  unint64_t v73 = v71 + (((v71 - 0x6AC4DC57B85D88F0) >> 8) ^ 0x2303804840A0A2E2) + 2;
  unint64_t v74 = v73 - ((v72 >> 7) & 0x1F8FF6F7EBEBA3ALL);
  int v75 = (2 * v74 - 2 * ((2 * v74 + 235120728) & 0x6E935E7E ^ (2 * v74) & 6) + 2090272464) & v62 ^ 0x391A6AC9;
  int v76 = (v74 + 117560364) ^ 0xA77A2E6C ^ (((((2 * v75) | 0xA1CE239E) - v75 + 790162993) & 0xA39C0F0C ^ 0x22840901 | (((2 * v75) | 0xA1CE239E) - v75 + 790162993) & 0x5C63F0E0)
                                        - 1);
  LODWORD(v73) = (v76 - 2 * (v76 & 0x58BC9F3D ^ v73 & 1) - 658727108) ^ v60;
  uint64_t v77 = v74 - ((2 * v74 + 0x5275C3D2F13C81D8) & 0x51F45EB45CFBFAAALL) + 0x52351143A71C3E41;
  LODWORD(v74) = (2 * (v74 - ((2 * v74 - 247692840) & 0x5CFBFAAA) - 1491321279)) ^ 0x5CFBFAAA;
  uint64_t v78 = (v74 - ((2 * v74) & 0x83001424) + 1098910227) & 0x70402048 ^ 0x10502159 | (v74
                                                                                                 - ((2 * v74) & 0x83001424)
                                                                                                 + 1098910227) & 0x8D2FDC24;
  unint64_t v79 = ((2 * ((v68 ^ 0x15D9AECF24AEF28FLL ^ v77) + v67)) & 0x73DFDFFC7EABFFAALL)
      + (((v68 ^ 0x15D9AECF24AEF28FLL ^ v77) + v67) ^ 0xB9EFEFFE3F55FFD5);
  unint64_t v80 = v79
      + (((v79 + 0x46101001C0AA002BLL) >> 32) ^ 0x8602008400000820)
      - ((2 * ((v79 + 0x46101001C0AA002BLL) >> 32)) & 0x1FFFFEFBELL);
  unint64_t v81 = v80
      + (((v80 - 0x3FF1F0823F5607F5) >> 16) ^ 0x1F9DBFBBBF72DDE1)
      + (((v80 - 0x3FF1F0823F5607F5) >> 15) & 0x17F777EE5BBC2);
  unint64_t v82 = v81
      + (((v81 - 0x5F8FB03DFEC8E5D6) >> 8) ^ 0x949384860831170FLL)
      - (((v81 - 0x5F8FB03DFEC8E5D6) >> 7) & 0xD8F6F3EF9DD1E0);
  unint64_t v83 = v82 + 2;
  unint64_t v84 = (((unint64_t)((v73 ^ 0xCFBD922D) - 2 * ((v73 ^ 0xCFBD922D) & 1) + 2) << 61)
       + 0x6000000000000000) ^ 0xA000000000000000;
  uint64_t v85 = 2 * (v82 + 2);
  uint64_t v86 = (v85 - ((4 * (v82 + 2) + 1679297636) & 0x7CCBAE9C) + 812768640) & v62 ^ 0xED42BC2CLL;
  uint64_t v87 = (v86 - ((2 * v86) & 0x102D330D0) + 0x4FF83699BFALL) & 0x7FFFFFFFFFCLL ^ (v82 + 0xBDCCB3BF906031BLL);
  uint64_t v88 = (v87 ^ 0x4FF524EF398)
      - 0x6FE81C7C37739610
      - 2 * ((v87 ^ 0x4FF524EF398) & 0x1017E383C88C69F7 ^ v87 & 5)
      + 2;
  uint64_t v89 = (v84 + 0x7F3293C7B29DCE14 - 2 * v84) ^ 0x7F3293C7B29DCE14 | (((v73 >> 3) ^ 0x19F7B245)
                                                                       + 0x6E405979623A081BLL
                                                                       - ((2 * ((v73 >> 3) ^ 0x19F7B245)) & 0x4741036)) ^ 0x6E405979623A081BLL;
  *((void *)&v90 + 1) = v88 ^ 2;
  *(void *)&long long v90 = v88 ^ 0x9017E383C88C69F0;
  unint64_t v91 = ((v90 >> 3) - ((2 * (v90 >> 3)) & 0x9B7B5EDC740BEBA4) - 0x32425091C5FA0A2ELL) ^ (v89
                                                                                         - ((2 * v89) & 0x595EF9186C7DECFCLL)
                                                                                         - 0x53508373C9C10982);
  LODWORD(v91) = ((v91 >> 61) + 758337000 + ((8 * v91) ^ 0xEDD7720) - ((2 * ((8 * v91) ^ 0xEDD7720)) & 0x5A669BD0)) ^ 0x2D334DEA;
  unint64_t v92 = ((2
        * ((v68 ^ 0xF40A36064FA05455 ^ (v83
                                        - ((v85 - 0x7A3FEC752ABB204ELL) & 0x92536F268AE6B71ELL)
                                        - 0x73F63EA74FEA3498))
         + v67)) & 0x7C9DFB5C6735F97ELL)
      + (((v68 ^ 0xF40A36064FA05455 ^ (v83
                                       - ((v85 - 0x7A3FEC752ABB204ELL) & 0x92536F268AE6B71ELL)
                                       - 0x73F63EA74FEA3498))
        + v67) ^ 0x3E4EFDAE339AFCBFLL);
  unint64_t v93 = v92
      + (((v92 - 0x3E4EFDAE339AFCBFLL) >> 32) ^ 0x81014038415C00A0)
      - (((v92 - 0x3E4EFDAE339AFCBFLL) >> 31) & 0x17D47FEBELL);
  unint64_t v94 = v93
      + (((v93 + 0x40AFC2198B0902A1) >> 16) ^ 0x6BDDB7DFF6C358DBLL)
      + (((v93 + 0x40AFC2198B0902A1) >> 15) & 0x16FBFED86B1B6);
  unint64_t v95 = v94
      + (((v94 - 0x2B2DF5C66BBA563ALL) >> 8) ^ 0xAB2480BA34E28800)
      - (((v94 - 0x2B2DF5C66BBA563ALL) >> 7) & 0x1B6FE8B963AEFFELL)
      + 2;
  LODWORD(v86) = (2 * v95 - 2 * ((2 * v95 + 1053180808) & 0x421BD632 ^ (2 * v95) & 2) - 2132665928) & v62 ^ 0x46D428;
  LODWORD(v86) = (((2 * v86) | 0x5EFB72CE) - v86 - 796768615) ^ 0xEF34B9E5;
  LODWORD(v86) = (((2 * v86) & 0x460D800) - v86 - 36727810) ^ (v94
                                                             + (((v94 - 0x2B2DF5C66BBA563ALL) >> 8) ^ 0x34E28800)
                                                             - (((v94 - 0x2B2DF5C66BBA563ALL) >> 7) & 0x963AEFFE)
                                                             + 1600332230);
  int v96 = v95 - ((2 * v95 + 811774024) & 0x88E54714) - 593232978;
  LODWORD(v67) = (((2 * v96) ^ 0x88E54714) - ((2 * ((2 * v96) ^ 0x88E54714)) & 0x4C4DD870) - 1507398600) & v62 ^ 0xE8074C2C;
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + ((1013 * ((v61 & 0xFFFFFFFE) != 728198678)) ^ v64)))(v78, v91 - ((2 * v91) & 0xC25B8), 0xF5791F5E86531B4, v66, ~(2 * ((v86 ^ 0xFDCB9374) & 0x9F971F ^ v86 & 1)) + (v86 ^ 0xFDCB9374) + 10458911, 758337000, (v67 - ((2 * v67) & 0x709AA8D0) - 1201842823) & 0xFFFFFDFC ^ v96, 0x5D4D93DA2ECB4660, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

void sub_1000EBCE0()
{
}

#error "1000EF984: call analysis failed (funcsize=2381)"

#error "1000EF98C: too big function (funcsize=0)"

void sub_10010391C()
{
}

uint64_t sub_100103928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W8>, uint64_t a5)
{
  LODWORD(STACK[0x3E8]) = a3;
  int v6 = a4 ^ 0x4CF;
  unint64_t v7 = ((unint64_t)&STACK[0x514] ^ 0x775CF75AE6F67AFFLL)
     - 0x775CF75AE6F67AFFLL
     + (((void)&STACK[0x514] << ((a4 ^ 0xCFu) + 23)) & 0xEEB9EEB5CDECF5F8);
  STACK[0x3F8] = ((v7 % 0x25) ^ 0x3EF5F7FBFFFDEFF3)
               - 0x3EF5F7FBFFFDEFE3
               + ((2 * (v7 % 0x25)) & 0x66);
  unint64_t v8 = STACK[0x4C0];
  STACK[0x3E0] = STACK[0x4C0];
  unsigned int v9 = (char *)&a5 + v8 - 0x7BB775407D70C302;
  int v10 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, void *, void *, void *, uint64_t))(v5 + 8 * ((289 * (v6 + 1848031518 + 38 * (v6 ^ 0xC0) == 1848033348)) ^ v6));
  STACK[0x410] = STACK[0x4E8];
  STACK[0x420] = (unint64_t)v9;
  STACK[0x3F0] = (unint64_t)(v9 + 16);
  return v10(a1, a2, STACK[0x3D0], &unk_10021F920, &unk_10021F8F0, &unk_10023AFC0, 3925742127);
}

uint64_t sub_100103A94@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, unsigned int a5@<W6>, int a6@<W8>)
{
  unsigned int v11 = (v7 ^ a5) >> (v6 + ((a6 + 122) ^ 0x43));
  LOBYTE(v11) = (v11 - (((a6 - 59) ^ 0xB0) & (2 * v11)) + 45) ^ 0x36;
  *(unsigned char *)(a1 + (v9 - 525641235)) = v11;
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((307
                                * (v9
                                 - ((*(unsigned __int8 *)(a2 + ((v9 - 525641235) & 0xFLL)) ^ (39 * ((v9 - 19) & 0xF)) ^ *(unsigned __int8 *)(a3 + ((v9 - 525641235) & 0xFLL)) ^ *(unsigned __int8 *)(((v9 - 525641235) & 0xFLL) + a4 + 1)) != v11) == v8)) ^ a6)))();
}

uint64_t sub_100103B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((289 * (v8 + 8 == v9 + 827 + a8 + 38 * (v9 ^ 0xC0))) ^ v9)))();
}

uint64_t sub_100103B74()
{
  LODWORD(STACK[0x400]) = v1;
  STACK[0x598] = 0xBB2DD9C12225691ELL;
  LODWORD(STACK[0x514]) = dword_1002846D8 - 340121379;
  uint64_t v4 = *(unsigned int *)aHr;
  unint64_t v5 = 1856021207
     * ((((v2 - 152) | 0x8A6AD391298A1BEDLL) - (v2 - 152) + ((v2 - 152) & 0x75952C6ED675E410)) ^ 0x677E440A67E3CD13);
  *(_DWORD *)(v2 - 140) = v0 - 1713751891 + v5;
  *(_DWORD *)(v2 - 120) = v5 + v0 + 1123495981;
  *(_DWORD *)(v2 - 116) = v5;
  int v6 = v5 ^ (v0 - 1713751891);
  *(void *)(v2 - 136) = v4 - v5;
  *(void *)(v2 - 128) = v5 ^ 0x60526829;
  *(_DWORD *)(v2 - 148) = v6 ^ 0x7B;
  *(_DWORD *)(v2 - 144) = v6 ^ 0x5E;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 ^ 0xE4F)))(v2 - 152);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v2 - 152)))(v7);
}

uint64_t sub_100103C80()
{
  int v0 = STACK[0x41C];
  int v1 = LODWORD(STACK[0x41C]) ^ 0xD8;
  STACK[0x410] = ((uint64_t (*)(unint64_t, uint64_t))*(&off_10026D1A0 + LODWORD(STACK[0x41C]) + 489))(STACK[0x3F8], 3312658705);
  int v2 = ((uint64_t (*)(void))*(&off_10026D1A0 + v0 + 551))();
  unsigned int v3 = v1 - 1965487874 + v2 - ((2 * v2) & 0x15B211FC) - 1764;
  LODWORD(xmmword_100283D10) = v3;
  DWORD1(xmmword_100283D10) = ((1812433253 * (v3 ^ 0x8AD908FC ^ (v3 >> 30))) ^ 0xDB7A77BE)
                            + ((-670100790 * (v3 ^ 0x8AD908FC ^ (v3 >> 30))) & 0xB6F4EF7C)
                            - 1352756927
                            - ((((((1812433253 * (v3 ^ 0x8AD908FC ^ (v3 >> 30))) ^ 0xDB7A77BE)
                                + ((-670100790 * (v3 ^ 0x8AD908FC ^ (v3 >> 30))) & 0xB6F4EF7C)
                                + 628279112) << ((v1 - 47) & 0x7F ^ 0x34))
                              + 505774582) & 0x15B211FC);
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (v1 ^ 0x1F)))();
}

void sub_100103DF0()
{
}

uint64_t sub_100103E0C@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  LODWORD(STACK[0x514]) = a2 + 1;
  uint64_t v5 = (*(uint64_t (**)(unint64_t, void))(a1 + 8 * (v2 ^ v3)))(STACK[0x3F0], 0);
  int v6 = (_DWORD *)STACK[0x420];
  int v7 = *(_DWORD *)(STACK[0x420] + 16) - 1965487874 - ((2 * *(_DWORD *)(STACK[0x420] + 16)) & 0x15B211FC);
  v6[1] = *(_DWORD *)(STACK[0x420] + 24) - 1965487874 - ((*(_DWORD *)(STACK[0x420] + 24) << (v2 - 52)) & 0x15B211FC);
  v6[2] = v7;
  int v8 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + v2 + 499727150))(v5);
  v6[3] = v8 - 1965487874 - ((2 * v8) & 0x15B211FC);
  int v9 = ((uint64_t (*)(void))*(&off_10026D1A0 + (v2 ^ (v3 + 15))))();
  *int v6 = v9 - 1965487874 - ((2 * v9) & 0x15B211FC);
  unint64_t v10 = 516615401 * ((v4 - 152) ^ 0x88BC887B73630632);
  LODWORD(STACK[0x408]) = LODWORD(STACK[0x41C]) - 125091471;
  int v11 = (DWORD1(xmmword_100283D10) ^ 0x40C98719 ^ (1664525
                                                 * (xmmword_100283D10 ^ 0xAFA33E38 ^ ((xmmword_100283D10 >> 30) | 0x257A36C4))
                                                 - ((3329050
                                                   * (xmmword_100283D10 ^ 0xAFA33E38 ^ ((xmmword_100283D10 >> 30) | 0x257A36C4))) & 0x94211FCE)
                                                 - 904884249))
      + (*(_DWORD *)STACK[0x420] ^ 0x8AD908FE);
  unsigned int v12 = (v11 ^ 0xFD4DF7F7) + 1257025232 + ((2 * v11) & 0xFA9BEFEE);
  DWORD1(xmmword_100283D10) = v12 - ((2 * v12 + 260747890) & 0x15B211FC) + 1117676087;
  *(_DWORD *)(v4 - 132) = (v2 - 1787609054) ^ v10;
  *(void *)(v4 - 144) = 1114820231 - v10;
  *(_DWORD *)(v4 - 120) = ((v2 - 1787609054) & 0x7FBE6D86) + v10;
  *(_DWORD *)(v4 - 116) = (v2 + 314469202) ^ v10;
  *(_DWORD *)(v4 - 112) = ((v2 - 1787609054) & 0xFFEE1FF8) + v10;
  *(_DWORD *)(v4 - 152) = v10;
  *(void *)(v4 - 128) = v10 ^ 0x4272CE85;
  uint64_t v13 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + v2 + 499727120))(v4 - 152);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v4 - 136)))(v13);
}

uint64_t sub_10010411C()
{
  BOOL v2 = v1 >= (LODWORD(STACK[0x41C]) ^ 0x360u) + 1114818857;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v2 | (4 * v2)) ^ (LODWORD(STACK[0x41C]) - 227))))();
}

uint64_t sub_100104160()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((((LODWORD(STACK[0x41C]) + 16) ^ (v1 > 0x4272D0F4)) & 1) == 0) | (4 * ((((LODWORD(STACK[0x41C]) + 16) ^ (v1 > 0x4272D0F4)) & 1) == 0))) ^ (LODWORD(STACK[0x41C]) - 227))))();
}

uint64_t sub_1001041B4()
{
  int v6 = (v0 - 348) | 0x23C;
  *int v3 = v3[623];
  unint64_t v7 = 516615401 * ((0xE919A3F3EA000F92 - ((v5 - 152) | 0xE919A3F3EA000F92) + v2) ^ 0x9E5AD477669CF65FLL);
  *(_DWORD *)(v5 - 132) = (v6 + 773368451) ^ v7;
  *(void *)(v5 - 144) = (v4 + 247723212) - v7;
  *(_DWORD *)(v5 - 152) = v7;
  *(void *)(v5 - 128) = v7 ^ 0x59B0A39B;
  *(_DWORD *)(v5 - 116) = (v6 - 185257397) ^ v7;
  *(_DWORD *)(v5 - 112) = v7 + v6 + 773368451 + 16;
  *(_DWORD *)(v5 - 120) = ((v6 + 773368451) ^ 0x43) + v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v6 ^ 0xE79)))(v5 - 152);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v5 - 136)))(v8);
}

uint64_t sub_1001042A8()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((v1 < (STACK[0x408] & 0x774BBFB ^ 0x59B0A032u)) * (LODWORD(STACK[0x41C]) - 1551)) ^ (LODWORD(STACK[0x41C]) - 1132))))();
}

uint64_t sub_100104310()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((45 * (v1 > ((LODWORD(STACK[0x41C]) - 1472) | 0x181u) + 1504747937)) ^ (LODWORD(STACK[0x41C]) - 1132))))();
}

uint64_t sub_100104370@<X0>(int a1@<W8>)
{
  int v4 = (a1 - 117) | 0x221;
  *(_DWORD *)(STACK[0x420] + 4 * ((v4 ^ 0xB5135298) + v3)) ^= 0x7018468C ^ *(_DWORD *)(STACK[0x410]
                                                                                       + 4 * ((v4 ^ 0xB5135298) + v3));
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((21
                                * (((((v4 - 288134187) & 0x112C96BD) - 3193) ^ ((v4 - 373) | 0x408)) + v2 == 989631341)) ^ v4)))();
}

void sub_100104428()
{
}

uint64_t sub_100104430@<X0>(int a1@<W8>)
{
  *int v2 = v2[623];
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((4 * (a1 ^ 0x3A3) + 521726825) & 0xE0E710FF ^ 0xFFFFFFDA) + v3 == 1675212282)
                                * ((532 * ((4 * (a1 ^ 0x3A3)) ^ 0x3BF)) ^ 0x10E)) ^ (4 * (a1 ^ 0x3A3)))))();
}

uint64_t sub_1001044AC@<X0>(int a1@<W8>)
{
  uint64_t v6 = 4 * (v4 - 2058244370);
  unsigned int v7 = *(_DWORD *)(v3 + 4 * (v4 - 2058244371));
  int v8 = (*(_DWORD *)(v3 + v6) ^ 0xA0FE06D5 ^ (1566083941 * (v7 ^ v2 ^ (v7 >> 30))
                                           - ((984684234 * (v7 ^ v2 ^ (v7 >> 30))) & 0x544E1C56)
                                           + 707202603))
     - v4;
  *(_DWORD *)(v3 + v6) = v8 - ((2 * v8 + 358392356) & 0x15B211FC) + 92756496;
  unint64_t v9 = 1606104089 * ((v5 - 152) ^ 0xC2BEFB347517423ELL);
  *(_DWORD *)(v5 - 120) = -1231241978 - v9 + a1;
  *(void *)(v5 - 128) = (v4 - 1140200194) ^ v9;
  *(_DWORD *)(v5 - 140) = v9 ^ (a1 - 1268367938) ^ 0x54;
  *(_DWORD *)(v5 - 136) = a1 - 1268367938 + v9;
  *(_DWORD *)(v5 - 152) = v9 | 1;
  *(_DWORD *)(v5 - 144) = (a1 - 1268367947) ^ v9;
  *(void *)(v5 - 112) = 918044175 - v9;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 + 534)))(v5 - 152);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v5 - 148)))(v10);
}

uint64_t sub_100104610()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((1908
                                * (v1 < ((239 * (LODWORD(STACK[0x41C]) ^ 0x638)) ^ 0x36B8397Fu)
                                      + LODWORD(STACK[0x41C])
                                      - 752)) ^ (LODWORD(STACK[0x41C]) - 752))))();
}

uint64_t sub_100104658()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((1908 * (v1 > (((LODWORD(STACK[0x41C]) - 1020) | 0x10C) ^ 0x36B84332u))) ^ (LODWORD(STACK[0x41C]) - 752))))();
}

void sub_1001046A0()
{
  LODWORD(xmmword_100283D10) = 181995774;
  (*(void (**)(unint64_t))(v1 + 8 * (v0 + 2057)))(STACK[0x410]);
  JUMPOUT(0x1000D9D50);
}

uint64_t sub_1001046CC()
{
  STACK[0x4C0] = STACK[0x3E0];
  STACK[0x4B8] = v0;
  STACK[0x4E8] = STACK[0x410];
  return (*(uint64_t (**)(void))(v2 + 8 * (((STACK[0x5E8] == 0) * ((v1 + 1867) ^ (v1 + 1437))) ^ v1)))();
}

uint64_t sub_100104728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (unsigned __int8 *)(STACK[0x5E8]
                          + (int)((((v11 << ((v7 - 101) ^ 0x85)) - 1371128582) ^ 0x6EFF2F5F)
                                - 1862217567
                                + ((((v11 << ((v7 - 101) ^ 0x85)) - 1371128582) << (v7 + 24)) & 0xDDFE5EBC)));
  unint64_t v14 = ((((v13 ^ *(_DWORD *)(v9 + v10)) & 0x7FFFFFFF) * v8) ^ ((((v13 ^ *(_DWORD *)(v9 + v10)) & 0x7FFFFFFF)
                                                                             * v8) >> 16))
      * v8;
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((499
                                * (*v13 == (*(unsigned char *)(a6 + (v14 >> 24)) ^ *(unsigned char *)(a5 + (v14 >> 24)) ^ *(unsigned char *)(a7 + (v14 >> 24)) ^ v14 ^ (-33 * BYTE3(v14))))) ^ v7)))();
}

uint64_t sub_1001047E0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v17 = (unsigned char *)(v14 + (int)((((v9 - 588) ^ 0xFF69FBED) & v12) + (a1 ^ 0xFFB4FFB9) + (((v9 - 1200) | 0x102) ^ 0x4B037C)));
  unint64_t v18 = ((((v17 ^ v15) & 0x7FFFFFFF) * v10) ^ ((((v17 ^ v15) & 0x7FFFFFFF) * v10) >> 16))
      * v10;
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((703
                                * ((char)(v18 ^ *v17 ^ *(unsigned char *)(v11 + (v18 >> 24)) ^ *(unsigned char *)(v13 + (v18 >> 24)) ^ *(unsigned char *)((v18 >> 24) + a8 + 1) ^ (BYTE3(v18) * v8)) > 47)) ^ (v9 - 588))))();
}

uint64_t sub_1001048A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((char)(v7 ^ (-33 * a1) ^ *(unsigned char *)(a5 + a1) ^ *(unsigned char *)(a6 + a1) ^ *(unsigned char *)(a7 + a1)) >= (char)((((a3 ^ 0x7E) - 95) | 2) - 76))
                                * (a3 ^ 0x49B)) ^ a3 ^ 0x57E)))();
}

uint64_t sub_100104908(uint64_t a1, uint64_t a2, int a3)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((27 * ((a3 ^ 0xBD ^ (v3 > ((a3 - 75) ^ 0x7Bu))) & 1)) ^ a3)))();
}

uint64_t sub_100104958(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((char)(v7 ^ *(unsigned char *)(a5 + a1) ^ *(unsigned char *)(a6 + a1) ^ *(unsigned char *)(a7 + a1) ^ ((a2 - 92) * a1)) > 96)
                                * ((a2 + 769) ^ 0x65)) ^ (a2 - 325))))();
}

uint64_t sub_1001049AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v17 = (char *)(v14
               + (int)((v9 ^ 0x7F4ED7FF)
                     - 2135873534
                     + ((v9 << ((v12 + 43) ^ 0x20)) & (((v12 + 83290449) & 0xFB0917FF) - 23221067))));
  char v18 = *v17;
  unint64_t v19 = ((((v17 ^ v15) & 0x7FFFFFFF) * v10) ^ ((((v17 ^ v15) & 0x7FFFFFFF) * v10) >> 16))
      * v10;
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((25
                                * ((char)(*(unsigned char *)(v11 + (v19 >> 24)) ^ v18 ^ *(unsigned char *)(v13 + (v19 >> 24)) ^ *(unsigned char *)((v19 >> 24) + a8 + 1) ^ v19 ^ (BYTE3(v19) * v8)) < 48)) ^ (v12 + 280))))();
}

uint64_t sub_100104B84(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 < ((a1 + 99) ^ 0xBEu)) * (((a1 - 353178211) & 0x150D177D) - 1568)) ^ a1)))();
}

uint64_t sub_100104BE0(uint64_t a1, int a2)
{
  int v5 = a2 - 440;
  BOOL v7 = v2 + 1558748170 < 0 && v3 - 805031979 <= (int)((56 * (a2 ^ 0x634)) ^ 0xFFFFFE3F);
  return (*(uint64_t (**)(void))(v4 + 8 * ((30 * v7) ^ v5)))();
}

uint64_t sub_100104D4C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v18 = (((v16 << (v9 + 68)) - (((v16 << (v9 + 69)) + 64) & 0xE0) + 25) ^ 0x79 | (a1 + 17))
      - ((2 * (((v16 << (v9 + 68)) - (((v16 << (v9 + 69)) + 64) & 0xE0) + 25) ^ 0x79 | (a1 + 17))) & 0x60)
      + 48;
  unint64_t v19 = (unsigned char *)(v13 + v12 - 685564291);
  unint64_t v20 = ((((v19 ^ v15) & 0x7FFFFFFF) * v10) ^ ((((v19 ^ v15) & 0x7FFFFFFF) * v10) >> 16))
      * v10;
  *unint64_t v19 = v20 ^ (((((((v19 ^ v15) & 0x7FFFFFFF) * v10) ^ ((((v19 ^ v15) & 0x7FFFFFFF) * v10) >> 16))
                * v10) >> 24)
              * v8) ^ *(unsigned char *)(v11 + (v20 >> 24)) ^ *(unsigned char *)(v14 + (v20 >> 24)) ^ *(unsigned char *)((v20 >> 24) + a8 + 1) ^ v18 ^ 0x30;
  return (*(uint64_t (**)(void))(v17 + 8 * (v9 ^ (14 * ((v12 - 685564290) < 0x14)))))();
}

uint64_t sub_100104E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100104728(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100104E3C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((663 * (LODWORD(STACK[0x410]) == ((v0 - 1628895509) & 0x6116F7D7) - 839)) ^ v0)))();
}

uint64_t sub_100104E7C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((8 * (((STACK[0x5E8] == 0) ^ (v0 - 122)) & 1)) & 0xDF | (32 * (((STACK[0x5E8] == 0) ^ (v0 + 390)) & 1))) ^ (v0 + 389))))();
}

uint64_t sub_100104EB8()
{
  ((void (*)(void))*(&off_10026D1A0 + (v1 ^ 0xE12u)))();
  STACK[0x5E8] = v0;
  return sub_1001069EC(1031026433);
}

void sub_100104F14()
{
  if (v0 >= v1) {
    int v2 = *(_DWORD *)aHr + 1;
  }
  else {
    int v2 = 1616013353;
  }
  *(_DWORD *)aHr = v2;
  JUMPOUT(0x10010508CLL);
}

uint64_t sub_1001050FC(uint64_t a1, int a2, char a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((393 * (((((v3 + 8 - v4) | (v4 - (v3 + 8))) >> (v4 - a3 + 49)) & 1) == 0)) ^ (a2 + v4 + 1212))))();
}

uint64_t sub_100105144(uint64_t a1)
{
  *(void *)(v4 - 184) = 0x39907029A91B7DDLL;
  LODWORD(STACK[0x4F4]) = dword_1002846D8 - 340121379;
  uint64_t v5 = *(unsigned int *)aHr;
  unint64_t v6 = 1856021207 * ((v4 - 152 + v3 - 2 * ((v4 - 152) & v3)) ^ 0xDD86721C725D88F9);
  *(_DWORD *)(v4 - 140) = v1 + 290879479 + v6;
  int v7 = v6 ^ (v1 + 290879479);
  *(void *)(v4 - 136) = a1 - v6;
  *(void *)(v4 - 128) = v5 ^ v6;
  *(_DWORD *)(v4 - 120) = v6 + v1 + 1123495981;
  *(_DWORD *)(v4 - 116) = v6;
  *(_DWORD *)(v4 - 148) = v7 ^ 0xD;
  *(_DWORD *)(v4 - 144) = v7 ^ 0x87;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 + 567)))(v4 - 152);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v4 - 152)))(v8);
}

uint64_t sub_100105220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  LODWORD(STACK[0x3A8]) = v5;
  int v8 = (2 * v7) ^ 0xEE4;
  STACK[0x3E8] = (*(uint64_t (**)(unint64_t, uint64_t))(a5 + 8 * (v7 + 489)))(STACK[0x398], 3312658705);
  int v9 = ((uint64_t (*)(void))*(&off_10026D1A0 + (v7 ^ 0xE5F)))();
  unsigned int v10 = v8 - 1965487874 + v9 - ((2 * v9) & 0x15B211FC) - 668;
  LODWORD(xmmword_100283D10) = v10;
  int v11 = v10 ^ (v10 >> 30) ^ (11 * ((2 * v7) ^ 0xC2B) - 1965488789);
  *(_DWORD *)(v6 + 4) = ((1812433253 * v11) ^ 0xEDCFFCE5)
                      + ((-670100790 * v11) & 0xDB9FF9CA)
                      - 2
                      * ((((1812433253 * v11) ^ 0xEDCFFCE5) + ((-670100790 * v11) & 0xDB9FF9CA) + 1378878236) & 0xAD908FF ^ (((101 * v11) ^ 0xE5) + ((-54 * (_BYTE)v11) & 0xCA) + 48) & 1)
                      - 1660351462;
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + v8))(1355690544);
}

void sub_100105390()
{
}

uint64_t sub_1001053AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v9 = (v6 - 1265) | 0x230;
  int8x16_t v10 = (int8x16_t)vld1q_dup_f32((const float *)v5);
  int32x4_t v11 = vdupq_n_s32(0xC9143492);
  v12.i64[0] = 0x8000000080000000;
  v12.i64[1] = 0x8000000080000000;
  uint64_t v13 = (v9 + 7);
  v8.i32[0] = *(_DWORD *)(v5 + 4);
  v8.i32[1] = *(_DWORD *)(v5 + 4 * (v13 - 896));
  v8.i32[2] = *(_DWORD *)(v5 + 12);
  int8x16_t v14 = vextq_s8(v10, v8, 0xCuLL);
  int8x16_t v15 = v8;
  v15.i32[3] = *(_DWORD *)(v5 + 16);
  int8x16_t v16 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(v14, v12), vdupq_n_s32(0x8D8812C6)), (int8x16_t)vdupq_n_s32(0x629199BEu)), vdupq_n_s32(0xFF6BD24F));
  int8x16_t v17 = veorq_s8(vandq_s8(v15, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x3D4BF1B0u));
  int32x4_t v18 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v17, (int8x16_t)vdupq_n_s32(0x36EBCB6Du)), (int32x4_t)vorrq_s8(v17, (int8x16_t)v11)), v11), (int8x16_t)vdupq_n_s32(0x36B5A2Bu));
  int32x4_t v19 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32(v18, v18), (int8x16_t)vdupq_n_s32(0x4826262u)), v18), vdupq_n_s32(0xFDBECECF)), veorq_s8(v16, (int8x16_t)vdupq_n_s32(0xEE855DCA))), (int8x16_t)vdupq_n_s32(0x535939u));
  v20.i32[0] = *(_DWORD *)(v7 - 184 + 4 * (*(_DWORD *)(v5 + 4) & 1));
  v20.i32[1] = *(_DWORD *)(v7 - 184 + 4 * (*(_DWORD *)(v5 + 4 * (v13 - 896)) & 1));
  v20.i32[2] = *(_DWORD *)(v7 - 184 + 4 * (*(_DWORD *)(v5 + 12) & 1));
  v20.i32[3] = *(_DWORD *)(v7 - 184 + 4 * (v15.i8[12] & 1));
  *(int8x16_t *)uint64_t v5 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v5 + 1588), v20), (int8x16_t)vdupq_n_s32(0xBBA45E56)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v19, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v19, v19), (int8x16_t)vdupq_n_s32(0x84D7A62E))), vdupq_n_s32(0x426BD317u)), 1uLL));
  return (*(uint64_t (**)(void))(a5 + 8 * v9))();
}

uint64_t sub_100105EB8@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X4>, int a4@<W8>)
{
  int v9 = (unsigned int *)(v7 + 4 * (v4 + v6));
  int v10 = (((v5 | 0x7FFFFFFF) - 1920462138) ^ (((a4 - 2008961906) | 0x31024023) - 1454528117)) - 9711025;
  uint64_t v11 = v4 + 1;
  int v12 = *(_DWORD *)(v7 + 4 * (v11 + v6));
  int v13 = (a2 - (v12 & 0x7FFFFFFE ^ 0x3D4BF1B0 | a2) + (v12 & 0x7FFFFFFE ^ 0x3D4BF1B0 | 0x36EBCB6D)) ^ 0x36B5A2B;
  unsigned int v14 = ((((2 * v13) | 0x4826262) - v13 - 37826865) | v10 ^ 0xEE855DCA) ^ 0x535939;
  unsigned int *v9 = v9[397] ^ *(_DWORD *)(v8 - 184 + 4 * (v12 & 1)) ^ ((v14 - ((2 * v14) & 0x84D7A62E) + 1114362647) >> 1) ^ 0xBBA45E56;
  return (*(uint64_t (**)(void))(a3 + 8 * ((2970 * (v11 == a1 + 3)) ^ a4)))();
}

uint64_t sub_100105FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v9 = (const float *)&unk_10028409C;
  int8x16_t v10 = (int8x16_t)vld1q_dup_f32(v9);
  uint64_t v11 = 7 * (v6 ^ 0xB943F072);
  v12.i64[0] = 0x8000000080000000;
  v12.i64[1] = 0x8000000080000000;
  v13.i64[0] = 0x8000000080000000;
  v13.i64[1] = 0x8000000080000000;
  v8.i32[0] = dword_1002840A0;
  v8.i32[1] = *(_DWORD *)(v7 + 4 * (v11 - 226));
  v8.i32[2] = dword_1002840A8;
  int8x16_t v14 = vextq_s8(v10, v8, 0xCuLL);
  int8x16_t v15 = v8;
  v15.i32[3] = dword_1002840AC;
  int8x16_t v16 = (int8x16_t)vsubq_s32(vdupq_n_s32(0x3492F3F7u), (int32x4_t)vorrq_s8(v14, v12));
  int32x4_t v17 = (int32x4_t)veorq_s8(vandq_s8(v15, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x24AF0CCEu));
  int32x4_t v18 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), (int8x16_t)vdupq_n_s32(0x31F08B08u))), vdupq_n_s32(0x18F84584u)), (int8x16_t)vdupq_n_s32(0xB4FC4584));
  int32x4_t v19 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vaddq_s32(vsubq_s32(v18, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v18, v18), (int8x16_t)vdupq_n_s32(0x8A11A4D4))), vdupq_n_s32(0xC508D26A)), vandq_s8(v16, v13)), (int8x16_t)vdupq_n_s32(0x477AD65Au));
  v20.i32[0] = *(_DWORD *)(v5 + 4 * (dword_1002840A0 & 1));
  v20.i32[1] = *(_DWORD *)(v5 + 4 * (*(_DWORD *)(v7 + 4 * (v11 - 226)) & 1));
  v20.i32[2] = *(_DWORD *)(v5 + 4 * (dword_1002840A8 & 1));
  v20.i32[3] = *(_DWORD *)(v5 + 4 * (dword_1002840AC & 1));
  unk_10028409C = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_100283D10, v20), (int8x16_t)vdupq_n_s32(0xCB06BB50)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v19, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v19, v19), (int8x16_t)vdupq_n_s32(0x465C3236u))), vdupq_n_s32(0xA32E191B)), 1uLL));
  return (*(uint64_t (**)(void))(a5
                              + 8
                              * (int)((1373 * (((4 - (v6 ^ 0xB943F1BF)) | ((v6 ^ 0xB943F1BF) - 4)) >= 0)) ^ ((v6 ^ 0xB943F1BF) - 72))))();
}

void sub_1001061A4()
{
}

uint64_t sub_1001061B4@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  unsigned int v4 = ((*v2 & 0x42B26832 ^ 0xC0B02001) - 1) | *v2 & ((a2 ^ 0x7FB) + 1028493712);
  unsigned int v5 = (((v4 & ((a2 + 1141) ^ 0x35E2454E) ^ 0xB4820301) - 1) | v4 & 0x4A1DBC8C) ^ 0xFEEB2BFE;
  v2[623] = v2[396] ^ *(_DWORD *)(v3 - 184 + 4 * (*v2 & 1)) ^ (((((v2[623] & 0x80000000) - 2096650292) & 0x80000000)
                                                                + v5
                                                                - ((2 * v5) & 0x82323CDC)
                                                                - 1055318417) >> 1) ^ 0xFA1D38EA;
  return (*(uint64_t (**)(void))(a1 + 8 * ((963 * (LODWORD(STACK[0x4F4]) > 0x26F)) ^ a2)))();
}

uint64_t sub_1001062B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  LODWORD(STACK[0x4F4]) = 0;
  int v8 = v5;
  int v9 = LODWORD(STACK[0x4F4])++;
  *(_DWORD *)(v6 + 1752) = v9 + 340121380;
  uint64_t v10 = (*(_DWORD *)aHr + 1958664424);
  unint64_t v11 = 1606104089
      * ((((v7 - 152) | 0xE47FA843712E5989) - (v7 - 152) + ((v7 - 152) & 0x1B8057BC8ED1A670)) ^ 0x26C1537704391BB7);
  int v12 = v11 ^ (v8 - 943509761);
  *(_DWORD *)(v7 - 120) = -1231241978 - v11 + v8;
  *(_DWORD *)(v7 - 140) = v12 ^ 0x78;
  *(_DWORD *)(v7 - 136) = v8 - 943509761 + v11;
  *(void *)(v7 - 128) = v10 ^ v11;
  *(void *)(v7 - 112) = 3574677777u - v11;
  *(_DWORD *)(v7 - 152) = v11 | 1;
  *(_DWORD *)(v7 - 144) = v12 ^ 0x62;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(a5 + 8 * (v8 + 534)))(v7 - 152);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v7 - 148)))(v13);
}

void sub_1001063D4()
{
}

uint64_t sub_1001063E8()
{
  STACK[0x518] = v0;
  STACK[0x4D0] = STACK[0x3E8];
  return ((uint64_t (*)(void))STACK[0x380])();
}

uint64_t sub_100106400()
{
  uint64_t v0 = ((uint64_t (*)(unint64_t))*(&off_10026D1A0 + (LODWORD(STACK[0x41C]) ^ 0xE12)))(STACK[0x388]);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + (((((LODWORD(STACK[0x41C]) - 572) | 0x26) - 848)
                                             * (LODWORD(STACK[0x44C]) == 0)) ^ (LODWORD(STACK[0x41C]) - 534))))(v0);
}

void sub_1001064C0(int a1@<W8>)
{
  LODWORD(STACK[0x5F0]) = STACK[0x45C];
  STACK[0x5E8] = STACK[0x3A0];
  STACK[0x4C0] = STACK[0x3B0];
  (*(void (**)(unint64_t))(v1 + 8 * (a1 ^ 0xC51)))(STACK[0x3C8]);
  JUMPOUT(0x100106530);
}

uint64_t sub_1001065A8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1288
                                * (((-69 * ((v2 + 40) & 0xFD ^ 0x35)) ^ (((a1 - v2) | (v2 - a1)) < 0)) & 1)) ^ (v1 + v2 + 329))))();
}

uint64_t sub_100106608()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 + 402)))(20, 2865462264) != 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((v2 * ((v0 ^ 0xAF) + ((v0 - 1615) | 0x18A) - 2051)) ^ v0)))();
}

uint64_t sub_100106668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x410]) = v6;
  STACK[0x3A0] = v4;
  STACK[0x3D0] = v5;
  return sub_100104728(a1, a2, a3, a4, (uint64_t)&unk_100238250, (uint64_t)&unk_100221550, (uint64_t)&unk_10023FF20);
}

uint64_t sub_10010670C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((v1 + 703134773) & 0xD61707BC) - 1406) * (a1 == v2 + 26)) ^ v1)))();
}

uint64_t sub_10010674C()
{
  int v2 = (uint64_t (*)(void))*(&off_10026D1A0
                          + ((((((v0 - 528) ^ ((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 + 489)))(25, 4244850056) == 0)) & 1) == 0)* ((v0 - 82658977) & 0x4ED41EF ^ 0x19B)) ^ (v0 - 757)));
  return v2();
}

uint64_t sub_1001067CC(uint64_t a1)
{
  STACK[0x3A0] = v1;
  STACK[0x3D0] = v3;
  uint64_t v5 = (int)((((v2 ^ 0xC) + 1443) ^ 0x9BACA478) + 1683184814);
  int v6 = (char *)(STACK[0x5E8] + v5);
  char v7 = *v6;
  int v8 = *(_DWORD *)(qword_100284C30 + (int)((v2 ^ 0xF413B273) & dword_100284A28));
  unint64_t v9 = 1755343967
     * ((1755343967 * ((v6 ^ v8) & 0x7FFFFFFF)) ^ ((1755343967 * ((v6 ^ v8) & 0x7FFFFFFF)) >> 16));
  uint64_t v10 = (unsigned char *)(a1 + v5);
  unint64_t v11 = 1755343967
      * ((1755343967 * ((v10 ^ v8) & 0x7FFFFFFF)) ^ ((1755343967 * ((v10 ^ v8) & 0x7FFFFFFF)) >> 16));
  *uint64_t v10 = byte_100248B40[v9 >> 24] ^ v7 ^ byte_100240450[v9 >> 24] ^ byte_100220FF0[(v9 >> 24) + 1] ^ byte_100248B40[v11 >> 24] ^ byte_100240450[v11 >> 24] ^ byte_100220FF0[(v11 >> 24) + 1] ^ v9 ^ v11 ^ (41 * BYTE3(v9)) ^ (41 * BYTE3(v11));
  return (*(uint64_t (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 8 * v2))(byte_100240450, byte_100220FF0, 41);
}

uint64_t sub_100106918()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((7 * (v1 != 12 * (((v0 - 1754) | 0x25) ^ 0xF0) - 1596)) ^ v0)))();
}

void sub_100106954()
{
  ((void (*)(uint64_t))*(&off_10026D1A0 + (v1 ^ 0xE12)))(v0);
  JUMPOUT(0x1000D7DF0);
}

uint64_t sub_100106980@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (((((STACK[0x5E8] == 0) ^ ((a1 ^ 0x49) + 1)) & 1) * (a1 + 99)) ^ a1)))();
}

uint64_t sub_1001069C0@<X0>(int a1@<W8>)
{
  uint64_t v2 = ((uint64_t (*)(void))*(&off_10026D1A0 + ((a1 + 1479) ^ 0xE12)))();
  STACK[0x5E8] = v1;
  return sub_1001069EC(v2);
}

uint64_t sub_1001069EC@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x5F0]) = a1;
  LODWORD(STACK[0x5E0]) = 65;
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((1035 * (*(unsigned __int8 *)STACK[0x408] == ((v1 ^ 0xA3) + 98))) ^ (v1 - 1437))))();
}

uint64_t sub_100106A44()
{
  unint64_t v2 = *(unsigned __int8 *)STACK[0x3F8];
  STACK[0x3C8] = v2;
  int v3 = STACK[0x400] - (((2 * v2) & 0xE4) + (v2 ^ 0xDBF59F72));
  LODWORD(STACK[0x400]) = v3;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1089 * (((v3 + 12) & (((57 * (v0 ^ 0x83)) ^ 0x455) - 602)) == ((2 * v3) & 4))) ^ v0)))();
}

uint64_t sub_100106AF0@<X0>(int a1@<W8>)
{
  int v4 = a1 + v1 - 164318290;
  uint64_t v5 = (char *)&STACK[0x5A0] + STACK[0x338] + ((v2 - 1929694696) & 0x7304C92F) - 0x7BB775407D70C8A2;
  STACK[0x4C0] = STACK[0x338] - 1682119004 + (v2 + 1682118869);
  int v6 = *(void (**)(void *))(v3 + 8 * (v2 + 936));
  STACK[0x410] = (unint64_t)(v5 + 944);
  v6(&unk_10023B012);
  char v7 = *(uint64_t (**)(void *, char *, uint64_t))(v3 + 8 * (v2 ^ 0xCA8));
  STACK[0x3F8] = (unint64_t)(v5 + 1008);
  uint64_t v8 = v7(&unk_100245A57, v5 + 1008, 64);
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (v2 | (16 * ((v4 - 262048269) > 0xF7)) | (32 * ((v4 - 262048269) > 0xF7)))))(v8);
}

uint64_t sub_100106BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = (v7 + 1752);
  STACK[0x4C0] = v9 + v8 - 2215;
  uint64_t v10 = (void *)STACK[0x3E0];
  v10[74] = 0x81D87792165AD0EBLL;
  unint64_t v11 = (void *)((char *)v10 + 620);
  v10[75] = 0xE12BDF9669A3571ELL;
  v10[76] = 0x1ED42069965CA8E1;
  unint64_t v12 = (unint64_t)*(&off_10026D1A0 + v7);
  *unint64_t v11 = 0x5A382E206BDBB113;
  STACK[0x468] = v12;
  int v13 = STACK[0x400];
  LODWORD(STACK[0x410]) = LODWORD(STACK[0x400]) + 2097253747;
  STACK[0x3F0] = STACK[0x408] + STACK[0x3C8];
  LODWORD(STACK[0x330]) = v13 + 520850630;
  int v14 = v13 - 1685239684;
  STACK[0x398] = 4294966825;
  LODWORD(v12) = STACK[0x41C];
  int v15 = 710 * (LODWORD(STACK[0x41C]) ^ 0x63E);
  LODWORD(STACK[0x3E8]) = 13 * (LODWORD(STACK[0x41C]) ^ 0x613);
  int v16 = (v12 - 70236094) & 0x42FB7DB;
  LODWORD(STACK[0x3F8]) = v16;
  LODWORD(STACK[0x408]) = v16 ^ 0x634;
  LODWORD(STACK[0x32C]) = v12 + 520402793;
  LODWORD(STACK[0x400]) = -512473929;
  LODWORD(STACK[0x3B0]) = v14;
  LODWORD(STACK[0x334]) = v14 + 64;
  STACK[0x320] = ~(unint64_t)&unk_10023AFC0;
  LODWORD(STACK[0x3C0]) = v15;
  LODWORD(STACK[0x3B8]) = v15 ^ 0x15;
  return sub_1000DA80C(a1, 249984031, a3, 115766303, a5, 100, a7, v9);
}

uint64_t sub_10010A864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8 = STACK[0x350];
  int v9 = LODWORD(STACK[0x350]) + 612;
  int v10 = LODWORD(STACK[0x350]) + 588;
  LODWORD(STACK[0x3F0]) = a8 ^ 0x98317866;
  if ((a8 ^ 0x98317866) <= 1) {
    unsigned int v11 = 1;
  }
  else {
    unsigned int v11 = a8 ^ 0x98317866;
  }
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((121 * (((v10 ^ (v11 - 17 < (v9 ^ 0xFFFFFBE3))) & 1) == 0)) ^ v8)))();
}

uint64_t sub_10010A8D0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v5 = v4 < ((a4 - 62442069) & 0x3B8C6EB) + ((a4 + 552) ^ 0xFFFFF959);
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((v5 | (2 * v5)) ^ a4)))();
}

uint64_t sub_10010A920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)STACK[0x3D8] = xmmword_10021F840;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v4
                                                                      + 8
                                                                      * ((1360
                                                                        * ((((v5 - 72600254) ^ (((16 - (v3 & 0xFFFFFFF0)) | ((v3 & 0xFFFFFFF0) - 16)) >> 31)) & 1) == 0)) ^ (v5 - 606))))(a1, a2, a3, (v5 - 72600254) & 0x453C7F3);
}

void sub_10010A984()
{
}

uint64_t sub_10010A990(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (int)(((((a4 + 948405385) & 0x47787BF6 ^ 0xFFFFFE4D) + 9 * (a4 ^ 0x333)) * (v4 == v5)) | a4)))();
}

uint64_t sub_10010A9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (int)(((((a6 - 533) | 0x3C8) - 1018) * ((v6 >> 3) & 1)) ^ a6)))();
}

uint64_t sub_10010AA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  v11.val[0].i64[0] = v8 & 8;
  v11.val[0].i64[1] = v8 & 8 | 1;
  v11.val[1].i64[0] = v11.val[0].i64[0] | 2;
  v11.val[1].i64[1] = (13 * (a5 ^ 0x86u) - 582) | v11.val[0].i64[0];
  v11.val[2].i64[0] = v11.val[0].i64[0] | 4;
  v11.val[2].i64[1] = v11.val[0].i64[0] | 5;
  v11.val[3].i64[0] = v11.val[0].i64[0] | 6;
  v11.val[3].i64[1] = v11.val[0].i64[0] | 7;
  *(int8x8_t *)(STACK[0x3E0] + v8 + 255) = veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v9 + v11.val[0].i64[0]), *(int8x8_t *)(v5 + v11.val[0].i64[0])), *(int8x8_t *)(v6 + v11.val[0].i64[0] + 1)), (int8x8_t)0x1818181818181818), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v11, (int8x16_t)xmmword_10021E900), (int8x8_t)0x2121212121212121));
  return ((uint64_t (*)(__n128))*(&off_10026D1A0 + ((1473 * ((v7 & 0xFFFFFFF8) - 8 == v8)) ^ a5)))((__n128)xmmword_10021E900);
}

void sub_10010AB24()
{
}

uint64_t sub_10010AB2C@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (int)((((v2 + 15125941) & 0xFF1933FD ^ ((v2 ^ 0x1BB) + 21)) * (v1 == a1)) ^ v2)))();
}

uint64_t sub_10010AB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v9 = v6 - 19;
  int v10 = ((v6 - 19) ^ 0x4406831A) + v5;
  int v11 = v6 - 957599741;
  uint64_t v12 = (v8 - 1141276916);
  *(unsigned char *)(STACK[0x3D8] + v12) = *(unsigned char *)(v7 + ((v11 & 0x3913CFF2 ^ 0x3FD) & v12)) ^ *(unsigned char *)(v3 + ((v11 & 0x3913CFF2 ^ 0x3FD) & v12)) ^ *(unsigned char *)(((v11 & 0x3913CFF2 ^ 0x3FD) & v12) + v4 + 1) ^ (33 * ((v11 & 0xF2 ^ 0xFD) & v12)) ^ 0x18;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + ((21 * (v8 != v10)) ^ v9)))(a1, a2, a3, 957599730);
}

void sub_10010AC10()
{
}

void sub_10010AC18()
{
}

uint64_t sub_10010AC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((v7 + a7 - 77) ^ (a4 + 3213190043 < v8)) & 1)
                                * ((a7 + 580) ^ 0x301)) ^ a7)))();
}

uint64_t sub_10010ACA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v9 = v5 < 0x4869D40F || a4 + 2687573129 + (unint64_t)((a5 + 658096243) & 0xD8C63D8E) < v6;
  return (*(uint64_t (**)(void))(v7 + 8 * ((v9 * (((a5 - 778) | 0x10C) - 214)) ^ a5)))();
}

uint64_t sub_10010AD00(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((127 * (a6 ^ 0x10B) - 847) * (a4 + 3756430965 < a1)) ^ a6)))();
}

void sub_10010AD3C()
{
}

void sub_10010AE50(_DWORD *a1)
{
  unsigned int v1 = 230600693 * (a1 ^ 0xD23C862B);
  int v2 = *a1 ^ v1;
  unsigned int v3 = ((a1[7] + v1) & 0xFFFFFFF0) - 1926684720;
  uint64_t v4 = (uint64_t)*(&off_10026D1A0
                + (((((uint64_t (*)(void, uint64_t))*(&off_10026D1A0 + v2 + 1886))(((2 * v3) & 0x1DFD7FA0) + (v3 ^ 0xEFEBFDF) - 251576271, 1867024353) == 0)* (((v2 - 1136040168) & 0x43B69FBC) - 1497)) ^ v2));
  __asm { BRAA            X8, X17 }
}

void sub_10010AF48()
{
  *(_DWORD *)(v0 + 24) = -45013;
}

void sub_100117374(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) + 176504963 * (a1 ^ 0x8AA6E91F);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_100117408(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((*(_DWORD *)(a1 + 8) + v3 == (((v2 + 917) | 0x2A0) ^ 0x14A9A261)) * (v2 ^ 0x848)) ^ v2)))();
}

uint64_t sub_100117450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (*(void *)(a1 + 56)) {
    BOOL v10 = *(void *)(a1 + 40) == 0xC2C3062343A3C93;
  }
  else {
    BOOL v10 = 1;
  }
  int v11 = !v10;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8 * ((v11 * (((v9 - 465) ^ 0x5E4) - 178)) ^ v9)))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1001174A0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((1843
                                * (((439 * (v2 ^ 0xC2)) ^ (*(_DWORD *)(a1 + 4) - v3) ^ 0xE689115D) == *(_DWORD *)(a1 + 48) + v3 - 1253782788)) ^ v2)))();
}

uint64_t sub_100117500(uint64_t a1, uint64_t a2)
{
  unsigned int v5 = (v3 & 0xF ^ 0x2814018E | 0xC0E187FE) - (v3 & 0xF ^ 0x2814018E | 0x3F1E7801);
  BOOL v7 = *(_DWORD *)(a1 + 64) - v4 == 734402563 && v5 == (((v2 - 193) | 0xA4) ^ 0xA9D70ED3);
  return (*(uint64_t (**)(void))(a2 + 8 * ((1219 * v7) ^ v2)))();
}

#error "10011757C: too big function (funcsize=0)"

void sub_100168260(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, int a19, int a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  BOOL v73 = v72 == 49;
  if (v72 == 49) {
    a20 = a4;
  }
  LODWORD(STACK[0x354]) = a20;
  if (v72 == 49) {
    a21 = v71;
  }
  LODWORD(STACK[0x350]) = a21;
  int v76 = STACK[0x314];
  if (v72 == 49) {
    int v76 = v70;
  }
  LODWORD(STACK[0x348]) = v76;
  int v77 = LODWORD(STACK[0x328]) - 1207805124;
  if (v73) {
    a22 = v69;
  }
  LODWORD(STACK[0x34C]) = a22;
  int v79 = (STACK[0x4AC] & 3) + 1738501085 - ((LODWORD(STACK[0x4AC]) << (v77 ^ 0xE1)) & 2);
  int v80 = LODWORD(STACK[0x310]) ^ 0x3F3687F;
  int v81 = (((a69 + 1) & 3) + 1182176802 - ((2 * (a69 + 1)) & 4)) ^ 0x46769622 | v80;
  unsigned int v82 = ((STACK[0x2E4] & 3) - 1306575377 - 2 * (STACK[0x2E4] & 3)) ^ 0xB21F3DEF | v80;
  LODWORD(STACK[0x4B0]) = (v82 ^ 0xFFF7F75F) + 1073732604 + ((2 * v82) & 0x7FEFEEBE);
  int v83 = (LODWORD(STACK[0x2E8]) + 1) & 3 | v80;
  LODWORD(STACK[0x340]) = (v83 ^ 0xE777A66B) + 1541397981 + ((2 * v83) & 0x4EEF4CD6);
  int v84 = (LODWORD(STACK[0x2F0]) - 1) & 3 | v80;
  LODWORD(STACK[0x4C0]) = (STACK[0x2F8] & 3 | v80) + 1461125917 - ((2 * (STACK[0x2F8] & 3 | v80)) & 0x2E2E063A);
  int v85 = (LODWORD(STACK[0x304]) + 1) & 3;
  int v86 = (v85 + 120242567 - 2 * v85) ^ 0x72AC187 | v80;
  LODWORD(STACK[0x330]) = (v86 ^ 0xFFFC0BFF) + 157810349 + ((2 * v86) & 0x7FF817FE);
  int v87 = ((STACK[0x308] & 3) + 62153145 - 2 * (STACK[0x308] & 1)) ^ 0x3B461B9 | v80;
  LODWORD(STACK[0x328]) = (v87 ^ 0xFFCECEF9) + 1564212152 + ((2 * v87) & 0x7F9D9DF2);
  int v88 = (LODWORD(STACK[0x30C]) + 1) & 3;
  LODWORD(STACK[0x320]) = ((v79 ^ 0x679F6BDD | v80) ^ 0x3BEF7F5E)
                        - 18884672
                        + ((2 * (v79 ^ 0x679F6BDD | v80)) & 0x77DEFEBC);
  LODWORD(STACK[0x310]) = a19 - 849609230;
  LODWORD(STACK[0x4B8]) = v81 - ((2 * v81) & 0x3E198C) + 1075776710;
  LODWORD(STACK[0x338]) = v84 - ((2 * v84) & 0x1672) - 104105167;
  LODWORD(STACK[0x4E4]) = ((a18 + 1) & 3 | v80) - ((2 * ((a18 + 1) & 3 | v80)) & 0x29C) + 930361670;
  LODWORD(STACK[0x318]) = ((v88 - 60896685 - 2 * v88) ^ 0xFC5ECA53 | v80) - 671264608;
  JUMPOUT(0x100119890);
}

_DWORD *sub_10016856C@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  *uint64_t result = a2;
  return result;
}

void sub_100168590(uint64_t a1)
{
  __asm { BRAA            X13, X17 }
}

uint64_t sub_100168654@<X0>(uint64_t a1@<X8>)
{
  unsigned int v6 = ((v8 & 0xBE9DF940 | ~(v8 | 0xBE9DF940)) ^ 0x52F8FAFC) * v2;
  memset(v8, 0, sizeof(v8));
  uint64_t v9 = v3;
  long long v10 = 0u;
  int v12 = v6 ^ 0x1D49DC7F;
  int v13 = (v1 + v4) ^ v6;
  uint64_t v14 = a1;
  uint64_t result = ((uint64_t (*)(unsigned char *))*(&off_10026D1A0 + (int)(v1 ^ 0xD007B828)))(v8);
  *unsigned int v5 = v11;
  return result;
}

uint64_t ZyNF2D9(uint64_t a1)
{
  unint64_t v1 = (unint64_t)&v5[qword_1002846E8 - qword_100284700];
  qword_100284700 = 431200057 * v1 + 0x5A0759C5C119BB6BLL;
  qword_1002846E8 = 431200057 * (v1 ^ 0xA5F8A63A3EE64495);
  unint64_t v2 = 941074649
     * ((((unint64_t)&v6 | 0x6B6B37162FCDE1F4) - ((unint64_t)&v6 & 0x6B6B37162FCDE1F4)) ^ 0x6AEDD0F42F052E90);
  int v9 = -804802556 - v2;
  char v3 = byte_10024AF90[byte_10024AE90[(57 * ((qword_1002846E8 - qword_100284700) ^ 0x95))] ^ 0xAB];
  BOOL v7 = (char *)&loc_1001686B8 + v2;
  uint64_t v8 = a1;
  ((void (*)(unsigned int *))*(&off_10026D1A0
                                        + ((57
                                                                         * ((qword_1002846E8 - qword_100284700) ^ 0x95)) ^ v3)
                                        + 1994))(&v6);
  return v6;
}

void sub_1001688B8(uint64_t a1)
{
  unsigned int v1 = 755310587 * ((a1 + 704913948 - 2 * (a1 & 0x2A04221C)) ^ 0x6B0879D5);
  unsigned int v2 = *(_DWORD *)(a1 + 8) - v1;
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(_DWORD *)(a1 + 48) ^ v1;
  uint64_t v7 = 0;
  int v8 = 0;
  char v6 = (v2 + 64) ^ (41 * (v2 ^ 0x55)) ^ (((unsigned int (*)(uint64_t, uint64_t, uint64_t, uint64_t *, int *))*(&off_10026D1A0 + (int)(v2 + 810)))(*(void *)(v3 - 0x7E422C649661EC57) - 0xF2AF1F3399A0E89, v4, v5, &v7, &v8) == 0);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1001689C0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a1 - 252108704) & 0xF06DF5F ^ 0x556) * (a4 == 0)) ^ a1)))();
}

uint64_t sub_100168A00@<X0>(int a1@<W8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v3 + 8 * (a1 + 668)))();
  *(_DWORD *)(v1 + 24) = v2;
  return result;
}

void sub_100168F78()
{
  uint64_t v0 = __chkstk_darwin();
  int v1 = 562267567 * ((~v0 & 0xCACA2F0 | v0 & 0xF3535D0F) ^ 0x1F365EB3);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1001691B4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((((v3 + 696) | 0x430) ^ 0x7E9) * (v2 < 1788183827)) ^ v3)))();
}

uint64_t sub_100169200(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((v3 < v2 + 1015229591) * ((v2 ^ 0x34C) - 1146)) ^ v2)))();
}

uint64_t sub_10016923C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((v3 == (((v2 ^ 0x3E0) + 1342) ^ v4)) * (3 * (v2 ^ 0x3E0) - 1074)) ^ v2)))();
}

uint64_t sub_100169270@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (int)(((STACK[0x538] != 0) * ((a2 + 490182779) & 0xE2C867EE ^ 0x7CC)) ^ a2)))();
}

void sub_1001692B4(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2 = (*(uint64_t (**)(unint64_t))(a1 + 8 * (((a2 - 2111550780) | 0x400220B1) + 1037669755)))(STACK[0x538]);
  sub_1001F0F6C(v2, v3, v4, v5, v6, v7, 0);
}

uint64_t sub_10016B640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v10 = v8 & 0xB0B59FAF;
  STACK[0x6F8] = 0x73FCE2C07DC88EB7;
  LODWORD(STACK[0x878]) = 867352061;
  BOOL v11 = (*(uint64_t (**)(void, uint64_t))(a8 + 8 * (int)(v10 ^ 0xB09)))(((((v10 - 390) ^ 0x5F4) + 1006189436) ^ (v9 - 1715765038) & 0xFFFFFFF0)+ ((2 * (v9 - 1715765038)) & 0x77F27F80)- 1006190526, 1750171035) == 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (int)((21 * v11) ^ v10)))();
}

uint64_t sub_10016B700(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LODWORD(STACK[0x570]) = v9;
  STACK[0x578] = a1;
  BOOL v11 = (uint64_t (*)(void))*(&off_10026D1A0
                           + ((((*(uint64_t (**)(uint64_t, uint64_t))(a8 + 8 * (v8 + 979)))(v10, 771563492) == 0)
                             * (v8 - 1098)) | v8));
  LODWORD(STACK[0x4D8]) = -42028;
  return v11();
}

uint64_t sub_10016B760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (int)(((((v4 == 1715765038) ^ (((v3 - 37) ^ 0x85) + 1)) & 1)
                                     * (((v3 + 475) ^ 0xD4464739) + 733593433)) ^ (v3 + 475))))();
}

uint64_t sub_10016B7E0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  int v7 = 9 * (v4 ^ v3);
  *(unsigned char *)(v6 + a2 + 200571139 + ((unint64_t)(v2 > 0xBF47903) << 32)) = v7
                                                                               - 121
                                                                               + *(unsigned char *)(STACK[0x518]
                                                                                          + a2
                                                                                          + 200571139
                                                                                          + ((unint64_t)(v2 > 0xBF47903) << 32))
                                                                               - 77;
  BOOL v8 = (v5 + 486501397) > 0x8343EB44;
  if (v5 + 486501397 < (v7 - 2092701662)) {
    BOOL v8 = 1;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((2 * v8) | (16 * v8) | v7)))();
}

void sub_10016B888()
{
}

uint64_t sub_10016B890@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  LOBYTE(STACK[0xAA0]) = LOBYTE(STACK[0xA90]) ^ 0xE9;
  LOBYTE(STACK[0xAA1]) = LOBYTE(STACK[0xA91]) ^ 0xE9;
  LOBYTE(STACK[0xAA2]) = LOBYTE(STACK[0xA92]) ^ 0xE9;
  LOBYTE(STACK[0xAA3]) = LOBYTE(STACK[0xA93]) ^ 0xE9;
  LOBYTE(STACK[0xAA4]) = LOBYTE(STACK[0xA94]) ^ 0xE9;
  LOBYTE(STACK[0xAA5]) = LOBYTE(STACK[0xA95]) ^ 0xE9;
  LOBYTE(STACK[0xAA6]) = LOBYTE(STACK[0xA96]) ^ (((a2 - 18) | 0x89) + 62);
  LOBYTE(STACK[0xAA7]) = LOBYTE(STACK[0xA97]) ^ 0xE9;
  LOBYTE(STACK[0xAA8]) = LOBYTE(STACK[0xA98]) ^ 0xE9;
  LOBYTE(STACK[0xAA9]) = LOBYTE(STACK[0xA99]) ^ 0xE9;
  LOBYTE(STACK[0xAAA]) = LOBYTE(STACK[0xA9A]) ^ 0xE9;
  LOBYTE(STACK[0xAAB]) = LOBYTE(STACK[0xA9B]) ^ 0xE9;
  LOBYTE(STACK[0xAAC]) = LOBYTE(STACK[0xA9C]) ^ 0xE9;
  LOBYTE(STACK[0xAAD]) = LOBYTE(STACK[0xA9D]) ^ 0xE9;
  LOBYTE(STACK[0xAAE]) = LOBYTE(STACK[0xA9E]) ^ 0xE9;
  LOBYTE(STACK[0xAAF]) = LOBYTE(STACK[0xA9F]) ^ 0xE9;
  LODWORD(STACK[0xB68]) = -932955626;
  STACK[0xB48] = 0xDED30A4024145F56;
  STACK[0xB50] = 0x1482B5319C0A3DB9;
  STACK[0xB58] = 0xEB7D4ACE63F5C246;
  LODWORD(STACK[0xB60]) = 949878600;
  LODWORD(STACK[0xB64]) = 1804694436;
  unint64_t v2 = STACK[0x870];
  int v3 = STACK[0x8C4];
  unint64_t v4 = STACK[0x518];
  STACK[0x7F8] = *(void *)(a1 + 8 * a2);
  STACK[0x978] = v2;
  LODWORD(STACK[0x7F4]) = v3;
  STACK[0x880] = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)((1132
                                     * (v3
                                      - 1872156399
                                      + ((((a2 + 750) | 0x89) - 2034619574) & 0x7945D79B)
                                      + ((2 * *(_DWORD *)(v2 + 68)) & 0x4A)
                                      - 1644734133
                                      + (*(_DWORD *)(v2 + 68) & 0x3F ^ (((((a2 + 750) | 0x89) - 358060991) & 0x155797BBu)
                                                                      + 1801121789)) < 0xFFFFFFC0)) ^ ((a2 + 750) | 0x89))))();
}

uint64_t sub_10016B9E0@<X0>(int a1@<W1>, uint64_t a2@<X7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((613 * (((a3 - ((a1 ^ 0x3EE) - 1223710037)) | ((a1 ^ 0x3EE) - 1223710037 - a3)) >= 0)) ^ ((a1 ^ 0x48F0566C) + (a1 ^ 0x3EE) - 1223710037))))();
}

uint64_t sub_10016BA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a8
                                                                                                 + 8
                                                                                                 * (int)(((((2 * (*(_DWORD *)(v9 + 96) & 2 ^ 0xA444A4A)) | 0x879F537A) - (*(_DWORD *)(v9 + 96) & 2 ^ 0xA444A4A) != -1923379790) * (((v8 ^ 0x32D) + 840424249) & 0xCDE827E9 ^ 0x7BC)) ^ v8 ^ 0x32D)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10016BAB0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((31
                                * ((((__int16)LODWORD(STACK[0x568]) < -8974) ^ (-17
                                                                                               * ((a1 + 35) ^ 0xAA)
                                                                                               - 1)) & 1)) ^ (a1 - 343))))();
}

uint64_t sub_10016BAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((592 * (v8 == (unsigned __int16)(a7 + ((8 * a7) ^ 0xFBBA) + 458))) ^ a7)))(a1, a2, a3, a4, a5, a6, 4294924368);
}

uint64_t sub_10016BB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  STACK[0x8E8] = (unint64_t)&STACK[0x58405A597B2429E8];
  STACK[0x788] = 208;
  uint64_t v9 = *(void *)(v8 + 104);
  STACK[0x7E8] = v8 + 104;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((53 * (v9 != 0)) ^ v6 ^ 0x2A68)))(a1, a2, a3, a4, a5, a6, 4294924366);
}

uint64_t sub_10016BB94@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((21
                               * (*(_DWORD *)(v1 + 112) >= ((a1 - 1029185241) & 0x3D581EFA ^ 0x453)
                                                         + 206
                                                         + ((a1 - 1029185241) & 0x3D581EFA ^ 0x433)
                                                         + 1494274206)) ^ (a1 - 1029185241) & 0x3D581EFA ^ 0x453u)))();
}

uint64_t sub_10016BBFC@<X0>(int a1@<W8>)
{
  BOOL v3 = a1 == ((v1 + ((v2 + 1410359155) & 0xABEFA7AB) - 1024) ^ (v2 + 1039));
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((8 * v3) | (32 * v3)) ^ v2)))();
}

uint64_t sub_10016BC50@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v4 = STACK[0x570];
  *(unsigned char *)(v3 + a2 + 13274046 - 0xC2C3062343A3C93) = -37;
  unsigned int v5 = (((v2 - 1672) | 0x45) ^ 0x1BBB9120) + 13274046;
  int v6 = ((v4 - 293036777) < 0x1C861C02) ^ (v5 < 0x1C861C02);
  BOOL v7 = v5 < v4 - 293036777;
  if (v6) {
    BOOL v7 = (v4 - 293036777) < 0x1C861C02;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((v7 * ((v2 ^ 0x683) - 270)) ^ (v2 - 1603))))();
}

uint64_t sub_10016BD14@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v9 = v7 < v4;
  *(unsigned char *)(v8 + (v3 + 1) + a2 + ((unint64_t)(v3 + 1 < v2) << 32)) = 91;
  if (v9 == v3 + v5 < v4) {
    BOOL v9 = v3 + v5 < v7;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((v9 * ((v6 ^ 0x4E) - 270)) ^ v6)))();
}

uint64_t sub_10016BD78(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 64);
  int v8 = 1448877107 * ((2 * ((v6 - 192) & 0x6AB54B10) - (v6 - 192) + 357217515) ^ 0x6471A9C1);
  int v9 = *(_DWORD *)(v2 + 72) - v8 - 1607903256;
  *(_DWORD *)(v6 - 128) = v3 - v8 + 465;
  *(_DWORD *)(v6 - 192) = v9;
  *(_DWORD *)(v6 - 188) = v8 + 1149012029;
  *(_DWORD *)(v6 - 160) = v8 ^ 0x323A3323;
  *(void *)(v6 - 152) = v2 + 0x57414C243E4E482;
  *(void *)(v6 - 144) = v2 + 0x3E93D6427590D1F4;
  *(void *)(v6 - 120) = v2 + 0x4E52AB80F767C057;
  *(_DWORD *)(v6 - 112) = v8 + 407829994;
  *(void *)(v6 - 176) = v4;
  *(void *)(v6 - 168) = v7;
  *(void *)(v6 - 136) = v5;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (v3 ^ 0x97F)))(v6 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + (((*(_DWORD *)(v6 - 184) != 0) * (((v3 - 1314017877) & 0x4E5253FD) - 622)) ^ v3)))(v10);
}

uint64_t sub_10016BEB0()
{
  int v3 = v2 + 1236;
  (*(void (**)(uint64_t))(v0 + 8 * (v3 + 134)))(v1);
  uint64_t v4 = ((uint64_t (*)(unint64_t))*(&off_10026D1A0 + (v3 ^ 0xF86)))(STACK[0x578]);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + v3 - 1538))(v4);
}

uint64_t sub_10016C168(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8 * (v2 + 1839)))(16, 2270204515);
  STACK[0x8B8] = v3;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((v3 == 0) * ((v2 + 176) ^ 0x68)) ^ v2)))();
}

uint64_t sub_10016C1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8
                                                                                                  + 8 * (int)(((((v9 - 94) ^ 0xFFFFFA5B) + ((v9 - 94) | 0x410)) * (v8 != 0)) ^ v9)))(a1, a2, a3, a4, a5, a6, 4294925268);
}

uint64_t sub_10016C1F8(unsigned __int16 a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(uint64_t (**)(void))(a8
                           + 8
                           * ((1669
                             * (a1 == (unsigned __int16)(49 * ((a3 - 1637) ^ 0x16B) + ((a3 - 32699) & 0x7FBA) - 12938))) ^ (a3 - 1637)));
  LODWORD(STACK[0x568]) = a2;
  return v8();
}

uint64_t sub_10016C254(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((726
                                * ((unsigned __int16)(v8 + ((v9 + 76) ^ 0xA0A2) - ((2 * (v9 + 76)) & 0xBEBA) + 13996) < (unsigned __int16)(((11 * (a3 ^ 0x7CC)) ^ 0xFFFB) + ((a3 - 16866) & 0x3E7F)))) ^ (a3 - 500))))();
}

uint64_t sub_10016C2E8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = ((v11 + ((a1 - v10 - 1606392652) & 0x2A2CEFE9) - 2036) & (2 * (v13 + 59510)))
      + ((unsigned __int16)(v13 - 6026) ^ 0x7DF7FBD9u)
      - 638678283;
  unint64_t v15 = STACK[0x530] + v9 + ((v14 + 0x19A31ED87B88CCCCLL) | ((unint64_t)(v14 < 0x57E686CD) << 32));
  __int16 v16 = (((*(unsigned __int8 *)v15 - ((2 * *(unsigned __int8 *)v15) & 0x4A)) << 8) + 9472) ^ 0x2500;
  LOWORD(v15) = (v16 - ((2 * v16) & 0x6E00) + 14230) ^ 0x3796 | (*(unsigned __int8 *)(v15 + 1)
                                                               - ((2 * *(unsigned __int8 *)(v15 + 1)) & 0x9A)
                                                               + 5453) ^ 0x154D;
  LODWORD(v15) = (unsigned __int16)((v15 - ((2 * v15) & 0xB9A4) - 9006) ^ v12);
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((49
                                * ((v8 | ((v8 < 0x28AFu) << 16)) - 880719015 < ((v11 + 1904) & (2 * v15))
                                                                                              + (v15 ^ 0xADEDFFB7)
                                                                                              + 496202836)) | a1)))();
}

uint64_t sub_10016C444(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                                          + (((*(char *)(STACK[0x530] + (v6 - 2113403865)) < (char)(v5 + a3 - 74))
                                            * (((v5 + a3 + 768) ^ 0x6B4) - 448)) ^ (v5 + a3 + 768))))((a5 - 9002));
}

uint64_t sub_10016C4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, int a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * (((a6 == (a7 + 9)) * (a7 ^ 0x68A)) ^ a7)))();
}

uint64_t sub_10016C4D4(uint64_t a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * ((278 * (a2 == ((unsigned __int16)(a7 - 279) ^ 0xDC23))) ^ (a7 - 279))))();
}

uint64_t sub_10016C508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  STACK[0x560] = a4 + 3;
  return sub_10016C254(a1, a2, a1 ^ 0x749, a4, a5, a6, a7, a8);
}

uint64_t sub_10016C51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a8
                                                             + 8
                                                             * (a5 ^ 0x1FA ^ (1019
                                                                            * ((((a6 - a5) | (a5 - a6)) & 0x80) == 0)))))(a1, a2, (a5 - 960757765) & 0x394407AA);
}

uint64_t sub_10016C568(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  STACK[0x570] = a4 + 3;
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * (((((a1 & ((a3 - 10930) ^ a1) | (a1 - (a3 - 10930)) & ~((a3 - 10930) ^ a1)) & 0x8000) == 0)
                                * ((a3 + 718852951) & 0x552727B3 ^ 0x208)) ^ (a3 - 136))))();
}

uint64_t sub_10016C5CC(unsigned __int16 a1, int a2, uint64_t a3, int a4, __int16 a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned __int16 v8 = *(uint64_t (**)(void))(a8 + 8 * (((a1 == (unsigned __int16)((a4 ^ 0x51B) + a5)) * ((a4 + 1269) ^ 0x3AA)) ^ a4));
  LODWORD(STACK[0x568]) = a2;
  return v8();
}

uint64_t sub_10016C60C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v13 = v11 ^ 0x470;
  uint64_t v14 = (unsigned char *)((v12 | ((unint64_t)(v12 < v10 + 16) << 32)) + v9 + 0x13C33699AE49CD7CLL);
  *a1 = v14[(5 * (((v13 - 1104) | 0x28) ^ 0x10Du)) ^ 0xEC3CC9660339FE46];
  v14 -= 0x13C33699FCC60296uLL;
  a1[1] = *v14;
  a1[2] = v14[1];
  a1[3] = v14[2];
  a1[4] = v14[3];
  a1[5] = v14[4];
  a1[6] = v14[5];
  a1[7] = v14[6];
  a1[8] = v14[7];
  a1[9] = v14[8];
  a1[10] = v14[9];
  a1[11] = v14[10];
  a1[12] = v14[11];
  a1[13] = v14[12];
  a1[14] = v14[13];
  a1[15] = v14[14];
  LOWORD(STACK[0x816]) = 172;
  uint64_t v15 = (*(uint64_t (**)(void, uint64_t))(a8 + 8 * (v13 + 591)))(*(_DWORD *)(v8 + 56) ^ 0xB3B7B663, 3461793785);
  STACK[0x688] = v15;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((978 * (v15 == 0)) ^ v13)))();
}

uint64_t sub_10016C754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * (int)((108
                                     * ((*(_DWORD *)(v8 + 56) ^ v10 ^ (5 * (v9 ^ 0x2A7) - 0x109B0060012007B8))
                                      + ((2 * (*(_DWORD *)(v8 + 56) ^ v10)) & 0x1FDBFFFE0)
                                      + 0x109B006038837114 != (v9 ^ 0x3763722BLL))) ^ v9)))();
}

uint64_t sub_10016C810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, unint64_t a3@<X8>)
{
  BOOL v9 = v5 < a3;
  *(unsigned char *)(v7 + a1 - 0xE6557886D2875E7) = *(unsigned char *)(v4
                                                       + ((v3 + 1156240564) & 0xBB152FBE ^ 0xDC85EDAD9671E7EDLL)
                                                       + v6)
                                            - 83;
  if (v9 == v8 - 0x5009BD05CA8038B2 < a3) {
    BOOL v9 = v8 - 0x5009BD05CA8038B2 < v5;
  }
  return (*(uint64_t (**)(void))(a2 + 8 * ((127 * !v9) ^ v3)))();
}

uint64_t sub_10016C8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LOWORD(STACK[0x656]) = ((v8 + 18950) & 0xAFF7 ^ 0x61E0 ^ (2 * *(_DWORD *)(v9 + 56)) & 0xF36E)
                       + (*(_DWORD *)(v9 + 56) ^ 0xCFD4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a8
                                                                                                 + 8
                                                                                                 * (int)(((((((v8 + 1401047558) & 0xAC7DAFF7) - 94) ^ 0xFFFFFA5B) + ((((v8 + 1401047558) & 0xAC7DAFF7) - 94) | 0x410)) * (v10 != 0)) ^ (v8 + 1401047558) & 0xAC7DAFF7)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10016C8C8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 + a2 + 898292060 - 0xC2C3062343A3C93) = -37;
  BOOL v5 = (v3 + 2077778436) > 0xD1C3E1F4;
  if ((v3 + 2077778436) < 0xD1C3E1F3) {
    BOOL v5 = 1;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((27 * (((((v2 + 5) & 0x5F) + 66) ^ v5) & 1)) ^ (v2 - 1435))))();
}

uint64_t sub_10016C998@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  BOOL v11 = v4 < v5;
  uint64_t v12 = (v3 + 1);
  *(unsigned char *)(a2 + v10 + v12 + ((unint64_t)(v12 < v2) << 32) + v9 - 847) = 91;
  if (v11 == (int)v12 + v6 < v5) {
    BOOL v11 = (int)v12 + v6 < v4;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((!v11 * v8) ^ v7)))();
}

uint64_t sub_10016CA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v8 = STACK[0x580] + 0x3E93D6427590D1F4;
  unint64_t v9 = STACK[0x580] + 0x4E52AB80F767C057;
  unint64_t v10 = STACK[0x580] + 0x57414C243E4E482;
  uint64_t v11 = *(void *)(STACK[0x580] + 64);
  int v12 = *(_DWORD *)(STACK[0x580] + 72);
  int v13 = 1448877107 * (((v7 - 192) & 0x8D583415 | ~((v7 - 192) | 0x8D583415)) ^ 0x39CD6C0);
  *(_DWORD *)(v7 - 160) = v13 ^ 0x323A3323;
  *(_DWORD *)(v7 - 112) = v13 + 407829994;
  *(void *)(v7 - 144) = v8;
  *(void *)(v7 - 136) = a6;
  *(void *)(v7 - 152) = v10;
  *(_DWORD *)(v7 - 192) = ((v6 - 491629425) & 0x1D4DA9BF ^ 0xA0295676) - v13 + v12;
  *(_DWORD *)(v7 - 188) = v13 + 1149012029;
  *(_DWORD *)(v7 - 128) = v6 - v13 - 83;
  *(void *)(v7 - 120) = v9;
  *(void *)(v7 - 176) = a5;
  *(void *)(v7 - 168) = v11;
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(a3 + 8 * (v6 ^ 0xB1B)))(v7 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (((*(_DWORD *)(v7 - 184) == 0) * (v6 - 816)) ^ v6)))(v14);
}

uint64_t sub_10016CB40()
{
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 8 * (v5 ^ 0x918)))(v1, 0, v2, -1);
  unint64_t v7 = STACK[0x660];
  int v8 = 176504963 * ((2 * ((v6 - 192) & 0x61636310) - (v6 - 192) + 513580264) ^ 0x943A75F7);
  int v9 = LODWORD(STACK[0x96C]) - v8 - 520711526;
  *(_DWORD *)(v6 - 188) = v8 + v3 - ((2 * v3 + 1411973154) & 0xCD1228E0) + v5 - 1868721429;
  *(_DWORD *)(v6 - 184) = v9;
  *(void *)(v6 - 152) = v4;
  LOBYTE(STACK[0x15D4]) = -125 * ((2 * ((v6 + 64) & 0x10) - (v6 + 64) - 24) ^ 0xF7) + 49;
  *(_DWORD *)(v6 - 128) = v8 + 734402563;
  *(void *)(v6 - 176) = &unk_100238850;
  *(void *)(v6 - 168) = v7;
  *(_DWORD *)(v6 - 160) = v5 - v8 + 903;
  *(void *)(v6 - 136) = v1;
  *(_DWORD *)(v6 - 144) = v3 - v8 - 187714283;
  uint64_t v10 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + v5 + 1670))(v6 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + ((2017 * (*(_DWORD *)(v6 - 192) == 0)) ^ v5)))(v10);
}

uint64_t sub_10016CC90()
{
  STACK[0x948] = v1;
  LODWORD(STACK[0x7DC]) = v3 - 213434859;
  (*(void (**)(unint64_t))(v0 + 8 * (v5 ^ 0xF86u)))(STACK[0x660] - 0x73FCE2C07DC88EB7);
  uint64_t v6 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v5 + 134)))(v2);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + ((2584 * (v4 == ((v5 - 1192) | 0x53) - 851)) ^ (v5 - 1357))))(v6);
}

uint64_t sub_10016D6CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8 * (v3 ^ 0xB76)))(16, 2751337138);
  STACK[0x958] = v4;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((v4 == 0) * ((((v3 - 1662247773) & 0x6313E2CF) + 1) ^ 0x22D)) ^ v3)))();
}

uint64_t sub_10016D73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((22
                                * (a1
                                 - STACK[0x948]
                                 - (LODWORD(STACK[0x7DC]) - 23499672)
                                 - ((unint64_t)((LODWORD(STACK[0x7DC]) - 23499672) < 0x47CC2A7C) << 32)
                                 + 1204562556 >= (unint64_t)(v8 ^ 0x54) - 642)) ^ v8)))();
}

void sub_10016D7F8(int8x16_t *a1@<X0>, uint64_t a2@<X8>)
{
  int8x16_t v5 = *(int8x16_t *)(v2 + v3 + a2 + ((v4 + 2047226165) & 0x85F9CEFF));
  v6.i64[0] = 0xF7F7F7F7F7F7F7F7;
  v6.i64[1] = 0xF7F7F7F7F7F7F7F7;
  int8x16_t v7 = veorq_s8(v5, v6);
  v8.i64[0] = 0xEEEEEEEEEEEEEEEELL;
  v8.i64[1] = 0xEEEEEEEEEEEEEEEELL;
  int8x16_t v9 = vandq_s8(vaddq_s8(v5, v5), v8);
  v8.i64[0] = 0x3C3C3C3C3C3C3C3CLL;
  v8.i64[1] = 0x3C3C3C3C3C3C3C3CLL;
  *a1 = vaddq_s8(vaddq_s8(v7, v8), v9);
  JUMPOUT(0x10016D8F4);
}

uint64_t sub_10016D84C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a1 + (((v8 - 577) | 0x242) ^ 0xC3BBFC7532AF690ALL) + v6) = (*(unsigned char *)(a3 + v5 + v3 + 711) ^ 0xF7)
                                                                      + ((2 * *(unsigned char *)(a3 + v5 + v3 + 711)) & 0xEF)
                                                                      + 60;
  return (*(uint64_t (**)(void))(a2 + 8 * ((1505 * (v7 + 1 == v4 + 16)) ^ v8)))();
}

uint64_t sub_10016D8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t))(a3 + 8 * (v4 ^ 0xF86)))(v3);
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((STACK[0x948] != 0) * (((v4 - 1249) ^ 0x38D) + 148)) ^ (v4 - 1249))))();
}

uint64_t sub_10016D920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  int v9 = 33 * (v8 ^ 0x2CD);
  uint64_t v10 = *(uint64_t (**)(void))(a8 + 8 * (v8 ^ 0xAE9));
  uint64_t v12 = v10();
  STACK[0x948] = 0;
  LODWORD(STACK[0x7DC]) = 1228062212;
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + ((599 * (a7 == ((v9 - 880746827) & 0x347F2539) - 1337)) ^ v9)))(v12);
}

uint64_t sub_10016D9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * ((599 * (a7 == ((v8 - 880746827) & 0x347F2539) - 1337)) ^ v8)))();
}

uint64_t sub_10016D9E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, int a8@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a7
                                                                                                 + 8
                                                                                                 * (int)((((STACK[0x818] | STACK[0x658] | STACK[0x958]) == 0) * (((91 * (a8 ^ 0x53E)) ^ 0xFFFFFCB3) + a8 - 915)) ^ a8)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10016DA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LOWORD(STACK[0x816]) = 159;
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * (int)(((LODWORD(STACK[0x904]) == (((v8 - 125) | 0x102) ^ 0x26E08589))
                                     * ((v8 + 1624378465) & 0x9F2DF3AD ^ 0x27D)) ^ v8)))();
}

uint64_t sub_10016DA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8
                                   * (((v9 == v10 + 3 * (v8 ^ 0x3D6) - 636) * (((v8 - 386) | 0x203) ^ 0x385)) ^ v8)))();
}

uint64_t sub_10016DAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v11 = 29 * (v8 ^ 0x263);
  LOWORD(STACK[0x816]) = ((2 * (v9 + 17167)) & 0x7FEE) + v10 + ((v11 - 908) ^ (v9 + 17167)) + 12;
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * (((LODWORD(STACK[0x7BC]) == ((v11 - 569) ^ 0x7A3F012D)) * (((v11 - 105) | 0x85) ^ 0x383)) | v11)))();
}

uint64_t sub_10016DBE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = (*(uint64_t (**)(void, uint64_t))(a8 + 8 * (v8 ^ 0x96F)))((unsigned __int16)(v9 + v8 + 92 - 578), 564493012);
  STACK[0x8B8] = v10;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((222 * (((v8 - 75) ^ (v10 == 0)) & 1)) ^ v8)))();
}

uint64_t sub_10016DC90(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *a1 = 1;
  int v10 = (unsigned __int16)(v9 - 159) >> ((v8 & 0xAD) + 91);
  a1[1] = (v10 - ((2 * v10) & 0xF8) + 124) ^ ((((v8 & 0xAD) - 126) & 0xDF) + 109);
  a1[2] = (v9 + (~(2 * v9 - 62) | 0x1B) + 84) ^ 0xF2;
  return (*(uint64_t (**)(void))(a8 + 8 * (int)((493 * (LODWORD(STACK[0x904]) == 652248715)) ^ v8 & 0xD2CEEFAD)))();
}

uint64_t sub_10016DD38@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (((((a2 - 1357) ^ 0xFD) - 164) * (v2 != v3)) ^ (a2 - 1357))))();
}

uint64_t sub_10016DD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * (int)(((((v8 + 1266256471) & 0xB486768F) - 587) * (v9 == v10)) ^ v8)))();
}

uint64_t sub_10016DDC0(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  a1[3] = 4;
  __int16 v10 = LOWORD(STACK[0x904]) - ((2 * LOWORD(STACK[0x904]) + 29418) & 0x766E) - 19284;
  a1[4] = (v8 - 103) ^ HIBYTE(v10) ^ 0x93;
  a1[5] = v10 ^ 0x37;
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((108
                                * ((LODWORD(STACK[0x904]) | ((unint64_t)(LODWORD(STACK[0x904]) < ((5 * (v8 ^ 0x48D)) ^ (v9 - 1418))) << 32)) == 652248715)) ^ v8)))();
}

uint64_t sub_10016DE98@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((((a2 + 1057354185) & 0xC0FA07EE ^ 0xFD) - 164) * (v2 != v3)) ^ (a2 + 1057354185) & 0xC0FA07EE)))();
}

uint64_t sub_10016DF9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (a3 + v3 - 3)) = 1;
  int v6 = v5 - (((v5 << (((2 * v4) ^ 0x38) + 13)) + 1566) & 0x660E) + 30230;
  uint64_t v7 = (unsigned char *)(((a3 - 380576369) | ((unint64_t)((a3 - 380576369) < 0x3EF18C4D) << 32))
               + a1
               - 1056017485);
  *uint64_t v7 = BYTE1(v6) ^ 0x33;
  v7[1] = v6 ^ 7;
  return (*(uint64_t (**)(void))(a2 + 8 * (v4 ^ (3243 * ((unint64_t)v5 - 1010547954 < 0xFFFFFFFFECF6ACB2)))))();
}

uint64_t sub_10016E078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0
                                                                      + (((v6
                                                                         + (unint64_t)((a6 - 1488050489) & 0x58B1D77D) < 8)
                                                                        * (((a6 - 1513) | 0x440) ^ 0x9B1)) ^ a6)))(a1, 0x592D6D089F395208, 0x60DA7C9A38CA41A8, 0x4E4E21E9419924C0);
}

uint64_t sub_10016E130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((93
                               * ((((unint64_t)(a1 - v9 + v8) < 0x10) ^ (((a8 + 18) ^ 0xD3) + 1)) & 1)) ^ a8)))();
}

uint64_t sub_10016E178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((((a5 + 16) ^ 0x239) - 1388) * (v5 < 0x10)) | a5)))();
}

uint64_t sub_10016E1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v11 = (int8x8_t *)(a1 + a6 + v8);
  *int v11 = vadd_s8(*(int8x8_t *)(v10 + a6), (int8x8_t)0xCDCDCDCDCDCDCDCDLL);
  return ((uint64_t (*)(uint64_t, int8x8_t *, uint64_t))*(&off_10026D1A0
                                                                + ((229
                                                                  * (((a6 - (v9 & 0xFFFFFFFFFFFFFFF8) == -8) ^ ((a8 ^ 0xE5) - 1)) & 1)) ^ a8 ^ 0xE5)))(a1, &v11[1], v10 + a6 + 8);
}

void sub_10016E22C()
{
}

void sub_10016E234()
{
  STACK[0x948] = STACK[0x578];
  LODWORD(STACK[0x7DC]) = v0 + 221871686;
  JUMPOUT(0x10016E250);
}

uint64_t sub_10016E2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8 * (v3 ^ 0xC28)))(16, 49968828);
  STACK[0x658] = v4;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((v4 == 0) * (v3 - 684 + ((v3 - 953) | 0x60A) - 1960)) ^ v3)))();
}

uint64_t sub_10016E338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8
                                                                                                  + 8 * (((((v8 - 91) | 0xA0) ^ (4 * v8) ^ 0x22C ^ 0x6F9) * (v9 == 0)) ^ v8)))(a1, a2, a3, a4, a5, a6, 4294925268);
}

uint64_t sub_10016E384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (*(uint64_t (**)(unint64_t))(a3 + 8 * (v4 ^ 0xF86)))(STACK[0x578]);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + (int)(((((((v4 + 745758289) & 0xD38C9B67) - 91) | 0xA0) ^ (4 * ((v4 + 745758289) & 0xD38C9B67)) ^ 0x22C ^ 0x6F9)
                                                  * (v3 == 0)) ^ (v4 + 745758289) & 0xD38C9B67)))(v5);
}

uint64_t sub_10016E404@<X0>(int a1@<W6>, uint64_t a2@<X7>, int a3@<W8>)
{
  int v6 = a3 - 1960;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (a3 + 134)))(v4);
  STACK[0x948] = 0;
  LODWORD(STACK[0x7DC]) = v3;
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + ((v6 + 1357) ^ v6 ^ (685
                                                                * (((((a1 - v6) | (v6 - a1)) >> (((v6 - 66) & 0xE9) + 119)) & 1) == 0)))))(v7);
}

uint64_t sub_10016E438()
{
  (*(void (**)(unint64_t))(v0 + 8 * (v1 + 1603)))(STACK[0x840] - 0x73FCE2C07DC88EB7);
  uint64_t v4 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v1 ^ 0x9C5)))(v2);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + (((v3 != ((v1 + 219031043) & 0xF2F1DFB9) - 1960)
                                             * (((v1 - 1509745422) & 0x59FCE57E) - 117)) ^ v1)))(v4);
}

void sub_10016E4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(a3 + 8 * (v3 ^ 0xF86)))(v4);
  sub_1001F0F6C(v6, v7, v8, v9, v10, v11, v5);
}

uint64_t sub_10016E500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 8 * ((305 * (v3 == 1101)) ^ v3)))(STACK[0x6B0]);
}

void sub_10016E568()
{
}

uint64_t sub_10016E574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5 = (-22 * ((v4 + 38) ^ 0xFFFFFF86)) ^ ((v3 & 0xF0) >> 4) ^ 0xFFFFFFA9 | v3 ^ 0x16;
  int v6 = v5 - (((v4 - 1302508718) & 0x4DA2B7F9 ^ 0x24) & (2 * v5)) - 58;
  unsigned int v7 = ((v6 & 0xFC) >> 2) ^ 0x31 | v6 ^ 0xFFFFFFC6;
  unsigned int v8 = 1 - (v7 | ((1 - v7) >> 1));
  uint64_t v10 = (*(uint64_t (**)(void))(a3 + 8 * (v4 + 978)))();
  STACK[0x6B0] = 0;
  LODWORD(STACK[0x790]) = 984789230;
  return (*(uint64_t (**)(uint64_t))(a3 + 8 * ((7 * ((v8 & 1) == 0)) ^ (v4 + 38))))(v10);
}

void sub_10016E64C()
{
}

uint64_t sub_10016E6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * (((a1
                                 - ((v8 + 565145905)
                                  + v10)
                                 - ((unint64_t)(v8 + 565145905 < (v9 + 1793206503)) << 32)
                                 + 1793208133 < 0x10)
                                * ((v9 - 784) ^ 0x37E)) ^ v9)))();
}

uint64_t sub_10016E794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v14 = *(unsigned __int8 *)(v8 + v11 + a3 + 1960);
  *(unsigned char *)(v12 + a1 - 0x5E45D7E57CF9CC69) = v14 - ((v14 << ((70 * (v10 ^ 0x52)) ^ 0xA9)) & 0xD2) - 23;
  return (*(uint64_t (**)(void))(a8 + 8 * ((28 * (v13 + 1 == v9 + 16)) ^ v10)))();
}

void sub_10016E814()
{
  LODWORD(STACK[0x7BC]) = v0 + 16;
  JUMPOUT(0x10016E408);
}

uint64_t sub_10016E8CC@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((((v2 ^ 0x61F) - 253) * (a1 == v1 + 32)) ^ v2)))();
}

uint64_t sub_10016E908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (STACK[0x518]) {
    BOOL v5 = STACK[0x570] == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = !v5;
  return (*(uint64_t (**)(void))(a4 + 8 * ((((((v4 ^ 0x49A) + 1958) ^ 0x78F) + 4 * (v4 ^ 0x49A)) * v6) ^ v4)))();
}

void sub_10016E950(uint64_t a1@<X3>, int a2@<W8>)
{
  STACK[0x860] = (unint64_t)&STACK[0xAF8];
  STACK[0x998] = (unint64_t)&STACK[0xAB4];
  int v2 = (unsigned char *)STACK[0x570];
  LOBYTE(STACK[0xA90]) = *(unsigned char *)STACK[0x570];
  LOBYTE(STACK[0xA91]) = v2[1];
  LOBYTE(STACK[0xA92]) = v2[2];
  LOBYTE(STACK[0xA93]) = v2[3];
  LOBYTE(STACK[0xA94]) = v2[4];
  LOBYTE(STACK[0xA95]) = v2[5];
  LOBYTE(STACK[0xA96]) = v2[6];
  LOBYTE(STACK[0xA97]) = v2[7];
  LOBYTE(STACK[0xA98]) = v2[8];
  LOBYTE(STACK[0xA99]) = v2[9];
  LOBYTE(STACK[0xA9A]) = v2[10];
  LOBYTE(STACK[0xA9B]) = v2[11];
  LOBYTE(STACK[0xA9C]) = v2[12];
  LOBYTE(STACK[0xA9D]) = v2[13];
  LOBYTE(STACK[0xA9E]) = v2[14];
  LOBYTE(STACK[0xA9F]) = v2[15];
  LODWORD(STACK[0xB58]) = -932955626;
  STACK[0xB38] = 0xDED30A4024145F56;
  STACK[0xB40] = 0x1482B5319C0A3DB9;
  STACK[0xB48] = 0xEB7D4ACE63F5C246;
  LODWORD(STACK[0xB50]) = 949878600;
  LODWORD(STACK[0xB54]) = 1804694436;
  STACK[0x7F8] = *(void *)(a1 + 8 * a2);
  JUMPOUT(0x1001B9E08);
}

uint64_t sub_10016EA9C()
{
  v4.i64[0] = 0xCDCDCDCDCDCDCDCDLL;
  v4.i64[1] = 0xCDCDCDCDCDCDCDCDLL;
  *int v0 = vaddq_s8(*v3, v4);
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (int)((1586 * ((v2 ^ 0x7B8) == (v1 & 0xFFFFFFFFFFFFFFF0))) ^ (v2 - 993))))();
}

uint64_t sub_10016EAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((((7 * (v7 ^ 0x6CC)) ^ 0x6E3 ^ (88 * (v7 ^ 0x7D3))) * (v6 == a6)) ^ v7)))();
}

uint64_t sub_10016EB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (int)(((((7 * (a5 ^ 0x15B) + 1266256471) & 0xB486768F) - 587) * (v5 == v6)) ^ (7 * (a5 ^ 0x15B)))))();
}

uint64_t sub_10016EBC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (((v5 + v4) | 0x120) ^ (v3 - 95)) + a3) = 2;
  int v7 = (unsigned char *)(((a3 - 1414784038 + v5 + 1604372593) | ((unint64_t)(a3 - 1414784038 + v5 + 1604372593 < 0x14CCD1C) << 32))
               + a1
               - 21810460);
  *int v7 = BYTE1(v6);
  v7[1] = v6 ^ 0x67;
  uint64_t v8 = (v6 ^ 0x7ABBD1BB9DC0F69CLL) - 0x7ABBD1BB47A0BCE8 + ((2 * (v6 ^ 0x7A3F0067)) & 0x1CFFFEDF6);
  return (*(uint64_t (**)(void))(a2
                              + 8 * (int)((642 * (((v8 - v5) | ((unint64_t)v5 - v8)) >> 63)) ^ (v5 + v4 + 288))))();
}

uint64_t sub_10016ED08@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v7 + a2 - 0x1FC001661BF5F27ELL) = *(unsigned char *)((v4 ^ 0x320u) + v6 + v9 - 0x428925971CC71D7CLL) ^ 0xE9;
  BOOL v10 = v2 < v3;
  if (v10 == v8 - 0x6C8FBACB4F9D55DLL < v3) {
    BOOL v10 = v8 - 0x6C8FBACB4F9D55DLL < v2;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((v10 * v5) ^ v4)))();
}

uint64_t sub_10016EDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LOWORD(STACK[0x656]) = 31162;
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * (((LODWORD(STACK[0x904]) == ((v8 - 23267015) & 0x163047F ^ (v9 + 43)))
                                * (((v8 - 627) | 0x28E) ^ 0x284)) | v8)))();
}

uint64_t sub_10016EE00@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((((a2 + 1838) ^ 0x7E7) * (v2 != v3)) ^ a2)))();
}

uint64_t sub_10016EE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8
                              + 8 * ((27 * (((v9 == v10) ^ (((v8 - 103) | 0x80) + 69)) & 1)) ^ v8)))();
}

uint64_t sub_10016EE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LOWORD(STACK[0x656]) = v8
                       - 610
                       + ((LOWORD(STACK[0x994]) - 4724) ^ 0x3F3E)
                       + ((2 * (LOWORD(STACK[0x994]) - 4724)) & 0x7E7C)
                       + 14914;
  return (*(uint64_t (**)(void))(a8 + 8 * ((((v8 + 1228) ^ 0x7E7) * (v9 != v10)) ^ (v8 - 610))))();
}

uint64_t sub_10016EEC4@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v5 = 633 * (a2 ^ 0x3E);
  LOWORD(STACK[0x656]) = v4
                       + (*(_WORD *)(STACK[0x580] + 56) ^ 0x5B9C)
                       + v5
                       + ((2 * *(_WORD *)(STACK[0x580] + 56)) & 0xDBFE ^ 0x48C6)
                       + 2713;
  return (*(uint64_t (**)(void))(a1 + 8
                                   * ((27 * (((v2 == v3) ^ (((v5 - 103) | 0x80) + 69)) & 1)) ^ v5)))();
}

uint64_t sub_10016EF40@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  unint64_t v3 = STACK[0x580];
  LOWORD(STACK[0x656]) = v2
                       + (*(_WORD *)(STACK[0x580] + 56) ^ 0x472C)
                       + ((2 * *(_WORD *)(STACK[0x580] + 56)) & 0xE29E ^ 0x6086)
                       + 3764;
  return (*(uint64_t (**)(void))(a1
                              + 8 * (((*(void *)(v3 + 136) != 0) * ((a2 - 302259535) & 0x12041DEE ^ 0x430)) ^ a2)))();
}

uint64_t sub_10016EFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((145
                                * (((*(_DWORD *)(v9 + 144) == 1664814209) ^ (7 * (v8 ^ 0x8B))) & 1)) | v8)))();
}

uint64_t sub_10016EFF8@<X0>(uint64_t a1@<X7>, __int16 a2@<W8>)
{
  int v4 = v2 ^ 0xED;
  __int16 v5 = v3 + ((a2 - 4426 + (v2 ^ 0xED)) ^ 0xFFA8) + ((2 * (a2 - 4426 + (v2 ^ 0xED))) & 0xFF50);
  LOWORD(STACK[0x656]) = v5 + 91;
  uint64_t v6 = (*(uint64_t (**)(void, uint64_t))(a1 + 8 * (v2 ^ 0xC01)))((unsigned __int16)(v5 - 31490 + (v2 ^ 0x582)), 4019456641);
  STACK[0x688] = v6;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (v4 ^ (16 * (v6 != 0)))))();
}

uint64_t sub_10016F090(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *a1 = 1;
  a1[1] = (((unsigned __int16)(v9 - 31162) >> 8) - (((v9 - 31162) >> 7) & 0xA) - 123) ^ 0x85;
  a1[2] = (v9 - (((v9 << (((v10 + 65) | 0x81) + 118)) + 12) & 0x64) + 120) ^ 0x32;
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((4 * (LODWORD(STACK[0x904]) == v8)) | ((LODWORD(STACK[0x904]) == v8) << 6) | (v10 - 959) | 0x481)))();
}

uint64_t sub_10016F120@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((((v2 == v3) ^ (a2 + 110)) & 1)
                                * ((a2 - 523102634) & 0x1F2DE5FF ^ 0x1F9)) | (a2 - 523102634) & 0x1F2DE5FF)))();
}

uint64_t sub_10016F188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a8
                                                                                                 + 8
                                                                                                 * (((v8 - 1619 + v8 - 1814 - 646) * (v9 != v10)) ^ v8)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10016F1B8@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X7>, int a3@<W8>)
{
  a1[3] = 4;
  unsigned __int16 v3 = LOWORD(STACK[0x994]) - ((2 * LOWORD(STACK[0x994]) + 23320) & 0x4C26) + 5023;
  a1[4] = (v3 >> (((14 * ((a3 - 90) ^ 0xBD)) ^ 0xA0) & 0xFE)) ^ 0x26;
  a1[5] = v3 ^ 0x13;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((1007
                                * ((LODWORD(STACK[0x994]) | ((unint64_t)(LODWORD(STACK[0x994]) < 0x4961274uLL) << 32)) == 76943988)) ^ (a3 - 90))))();
}

uint64_t sub_10016F2A4@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((((v2 == v3) ^ (((a2 + 85) & 0xE3) + 24)) & 1)
                                     * ((a2 + 242888277) & 0xF185CBE3 ^ 0x1F9)) | (a2 + 242888277) & 0xF185CBE3)))();
}

uint64_t sub_10016F3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, unsigned int a3@<W8>)
{
  *(unsigned char *)(a1 + (v4 + v3)) = 1;
  unint64_t v6 = STACK[0x580];
  int v7 = *(_DWORD *)(STACK[0x580] + 56);
  int v8 = (unsigned char *)(((v4 + 235014901) | ((unint64_t)(v4 + 235014901 < ((v5 - 1333222922) & 0x4F775BFD ^ 0x2AC15AABu)) << 32))
               + a1
               - 717315015);
  *int v8 = v5 ^ 0x38 ^ BYTE1(v7) ^ 0xF6;
  v8[1] = v7 ^ 0x63;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((1862
                                * ((*(_DWORD *)(v6 + 56) ^ a3 ^ 0x5DDFE378EEFFAF7FLL)
                                 - 0x5DDFE3781EF18641
                                 + ((2 * (*(_DWORD *)(v6 + 56) ^ a3)) & 0x1DDFF5EFELL) == 3490588990)) ^ v5)))();
}

uint64_t sub_10016F510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))*(&off_10026D1A0
                                                                                                + (((v6 + 58 + v6 - 137 - 646)
                                                                                                  * (v7 != v8)) ^ (v6 + 1677))))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10016F640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, unsigned int a3@<W8>)
{
  *(unsigned char *)(a1 + (v4 + v3)) = 2;
  uint64_t v6 = v4 - 293945097 + ((v5 - 97) | 0x28) + ((v5 + 1282260252) & 0xB3924271);
  unint64_t v7 = v6 | ((unint64_t)(v6 < 0xB3A12E4) << 32);
  unint64_t v8 = STACK[0x580];
  int v9 = *(_DWORD *)(STACK[0x580] + 56);
  int v10 = (unsigned char *)(v7 + a1 - 188355300);
  *int v10 = BYTE1(v9) ^ 0xB6;
  v10[1] = v9 ^ 0x63;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((1042
                                * ((*(_DWORD *)(v8 + 56) ^ a3 ^ 0xDE7FFBB729FDFE5FLL)
                                 + ((2 * (*(_DWORD *)(v8 + 56) ^ a3)) & 0x53FBFCBE)
                                 + 0x21800449103A8658 == 976782519)) ^ v5)))();
}

uint64_t sub_10016F78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))*(&off_10026D1A0
                                                                                                + ((203
                                                                                                  * (*(void *)(v6 + 136) != 0)) ^ v7)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10016F888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a8
                                                                                                 + 8
                                                                                                 * ((119 * (*(_DWORD *)(v8 + 144) == (((v9 + 1731) | 0x81) ^ 0x613) + 1664813787)) ^ ((v9 + 1731) | 0x81))))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10016F8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, int a3@<W8>)
{
  unsigned int v8 = ((2 * (v5 + v4)) & 0xEBFFB53E) + ((v7 + 1979701497) ^ (v5 + v4));
  *(unsigned char *)(a1 + v8 - 1979701919) = 5;
  __int16 v9 = *(_WORD *)(v3 + 144) - ((2 * *(_WORD *)(v3 + 144) + 1790) & (((a3 - 537) | 0x86) + 1186)) - 2397;
  int v10 = (unsigned char *)(((v8 - 426885940) | ((unint64_t)(v8 - 426885940 < 0x5C8E176A) << 32)) + a1 - 1552815978);
  *int v10 = HIBYTE(v9) ^ 3;
  v10[1] = v9 ^ 0x24;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((1958
                                * ((*(unsigned int *)(v3 + 144) | ((unint64_t)(*(_DWORD *)(v3 + 144) < v6) << 32)) != 1664814209)) ^ a3)))();
}

uint64_t sub_10016FA20@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  BOOL v10 = v2 < v3;
  *(unsigned char *)(v8 + v4 - 0x598255749887B338) = *(unsigned char *)(v7 + v5 - 0x1F43A200490039DALL) - 126;
  unint64_t v11 = v9 - 0x265D4E7BC0B2C219 + (a2 - 403);
  int v12 = v10 ^ (v11 < v3);
  BOOL v13 = v11 < v2;
  if (!v12) {
    BOOL v10 = v13;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((v10 * v6) ^ a2)))();
}

uint64_t sub_10016FAB8()
{
  unint64_t v3 = STACK[0x578];
  ((void (*)(unint64_t, void, uint64_t, uint64_t))*(&off_10026D1A0 + v0 + 2027))(STACK[0x578], 0, v1, -1);
  unint64_t v4 = STACK[0x890];
  int v5 = STACK[0x780];
  int v6 = STACK[0x568];
  int v7 = 176504963 * ((((v2 - 192) | 0x7D73C2A0) - ((v2 - 192) | 0x828C3D5F) - 2104738465) ^ 0xF7D52BBF);
  *(_DWORD *)(v2 - 128) = v7 + 734402563;
  *(void *)(v2 - 152) = STACK[0x560];
  *(_DWORD *)(v2 - 188) = v7 + v6 - ((2 * v6 - 2138832574) & 0xCD1228E0) - 1496640231;
  *(_DWORD *)(v2 - 184) = v5 - v7 - 520711526;
  *(_DWORD *)(v2 - 144) = v6 - v7 + ((v0 + 26) ^ 0xAFD34E0 ^ (16 * (v0 ^ 0x84)));
  *(void *)(v2 - 176) = &unk_100238850;
  *(void *)(v2 - 168) = v4;
  *(_DWORD *)(v2 - 160) = v0 - v7 + 1162;
  *(void *)(v2 - 136) = v3;
  LOBYTE(STACK[0x15D4]) = -125 * ((((v2 + 64) | 0xA0) - ((v2 + 64) | 0x5F) + 95) ^ 0xBF) + 49;
  uint64_t v8 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v0 ^ 0x8BF)))(v2 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + ((46 * (*(_DWORD *)(v2 - 192) != 0)) ^ v0)))(v8);
}

uint64_t sub_10016FC28()
{
  (*(void (**)(unint64_t))(v1 + 8 * (v0 ^ 0x9DE)))(STACK[0x890] - 0x73FCE2C07DC88EB7);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1598)))(v2);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((((v0 + 136) ^ 0x6C ^ ((v0 - 495) | 0x88)) * (v3 == 0)) ^ v0)))(v4);
}

uint64_t sub_10016FDBC()
{
  return ((uint64_t (*)(unint64_t))*(&off_10026D1A0 + v0))(STACK[0x6B0]);
}

void sub_10016FE38()
{
}

void sub_10016FE40()
{
  uint64_t v2 = ((uint64_t (*)(unint64_t))*(&off_10026D1A0 + v1 + 1957))(STACK[0x578]);
  sub_1001F0F6C(v2, v3, v4, v5, v6, v7, v0);
}

uint64_t sub_10016FE64@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a1 + 8 * (a2 + 918)))();
  return sub_1001F0F6C(v2);
}

uint64_t sub_10016FEBC@<X0>(char a1@<W0>, int a2@<W3>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3
                              + 8 * (((((a2 ^ 0x503) - 982) ^ ((a2 ^ 0x503) - 839)) * ((a1 & 8) == 0)) ^ a2 ^ 0x503)))();
}

uint64_t sub_10016FEF8(uint64_t a1, int a2)
{
  LODWORD(STACK[0x200]) = LODWORD(STACK[0x3F0]) ^ 0xF229010E;
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + ((108 * ((v2 + 1) > 0xF)) ^ (a2 - 105))))(1606081807);
}

uint64_t sub_1001707A0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v69 = (((v68 + 731244245) >> 8) ^ 0xB31EF52F)
      + v68
      + (((v68 + 731244245) >> 7) & 0x3DEA5E);
  int v70 = v66 + 1742753891;
  unsigned int v71 = v69 + ((((v70 ^ 0x7876F313) + v69) >> 5) ^ 0x408001A2) - ((((v70 ^ 0x7876F313) + v69) >> 4) & 0xEFFFCBA) + 1;
  int v72 = v71 + 756013590 + (~(2 * v71 + 1877860358) | 0x15CE2BDB);
  unsigned int v73 = ((2 * ((v72 ^ 0xF518EA12) - 1879573490)) & 0x7F7F7678) + (((v72 ^ 0xF518EA12) - 1879573490) ^ 0x3FBFBB3C);
  unsigned int v74 = (((v73 - 1069529916) >> 10) ^ 0x7FFDDFEF) + v73 + (((v73 - 1069529916) >> 9) & 0x7BBFDE);
  unsigned int v75 = ((v74 + 1078093013) & 0xFDEBECC6) + v74 + (((v74 + 1078093013) >> 1) ^ 0x7EF5F663);
  unsigned int v76 = v75 - ((2 * v75 - 2103911196) & 0x9B5FFDA6) - 1896059579;
  unsigned int v77 = ((2 * ((v76 ^ 0xCDAFFED3) + 1287124013)) & 0xABFB48E6) + (((v76 ^ 0xCDAFFED3) + 1287124013) ^ 0xD5FDA473);
  unsigned int v78 = v77 + (((v77 + 704797581) >> 13) ^ 0x3000027) - ((2 * ((v77 + 704797581) >> 13)) & 0xFFFB0);
  unsigned int v79 = v78 + (((v78 + 654465894) >> 6) ^ 0x30A51208) - (((v78 + 654465894) >> 5) & 0x6B5DBEE) + 2;
  unsigned int v80 = v79 - ((2 * v79 - 323317064) & 0x8F4EB030) - 1106992780;
  unsigned int v81 = ((2 * ((v80 ^ 0xC7A75818) - 1282870125)) & 0x5DD77C38) + (((v80 ^ 0xC7A75818) - 1282870125) ^ 0x2EEBBE1C);
  unsigned int v82 = (((v81 - 787201564) >> 8) ^ 0x7DDFD59F) + v81 + (((v81 - 787201564) >> 7) & 0x1BFAB3E);
  unsigned int v83 = (((v82 + 1395944517) >> 2) ^ 0xB7FDDCDC) + v82 + (((v82 + 1395944517) >> 1) & 0x6FFBB9B8);
  unsigned int v84 = v83 - ((2 * v83 + 913120978) & 0xF7AE7C26) - 1760703108;
  unsigned int v85 = ((2 * ((v84 ^ 0xFBD73E13) + 707258702)) & 0xFF79E4BA) + (((v84 ^ 0xFBD73E13) + 707258702) ^ 0xFFBCF25D);
  unsigned int v86 = (((v85 + 4394403) >> 13) ^ 0x1FCFFFF7) + v85 + ((2 * ((v85 + 4394403) >> 13)) & 0xFFFEE);
  unsigned int v87 = (((v86 - 529330772) >> 3) ^ 0x6FDCCFCD) + v86 + (((v86 - 529330772) >> 2) & 0x1FB99F9A);
  unsigned int v88 = v87 + 1551839369 + (~(2 * v87 - 517178434) | 0x282E1AAD);
  unsigned int v89 = (v88 ^ 0x6067A423) + ((v88 >> 11) ^ 0x801D49D4) + ((v88 >> 10) & 0x1D75BE ^ 0xFFE7EE57) + 2146351841;
  unsigned int v90 = (((((2 * v89) & 0x22EBFFFE) + (v89 ^ 0x9175FFFF) + 1854537729) >> 5) ^ 0x27ED8FFE)
      + ((2 * v89) & 0x22EBFFFE)
      + (v89 ^ 0x9175FFFF)
      + (((((2 * v89) & 0x22EBFFFE) + (v89 ^ 0x9175FFFF) + 1854537729) >> 4) & 0xFDB1FFC);
  unsigned int v91 = v90 - ((2 * v90 - 1925652474) & 0xA2EB2CB2) + 403834460;
  unsigned int v92 = (v91 ^ 0xE52942A1) + ((v91 >> 12) ^ 0xE8CED7BD) + ((v91 >> 11) & 0x1EF5AC ^ 0xFFE35AD7) + 390036184;
  unsigned int v93 = (((((2 * v92) & 0xBDFFFEFC) + (v92 ^ 0x5EFFFF7E) - 1593835390) >> 7) ^ 0x74C27BCB)
      + ((2 * v92) & 0xBDFFFEFC)
      + (v92 ^ 0x5EFFFF7E)
      + (((((2 * v92) & 0xBDFFFEFC) + (v92 ^ 0x5EFFFF7E) - 1593835390) >> 6) & 0x184F796);
  unsigned int v94 = v93 - ((2 * v93 + 1484458350) & 0xB9430BA0) + 148834951;
  unsigned int v95 = ((2 * ((v94 ^ 0xDCA185D0) - 2045107421)) & 0xFFFEB9FE) + (((v94 ^ 0xDCA185D0) - 2045107421) ^ 0xFFFF5CFF);
  unsigned int v96 = (((v95 + 41729) >> 11) ^ 0x6FEA7FEF) + v95 + (((v95 + 41729) >> 10) & 0x14FFDE);
  unsigned int v97 = v96 + (((v96 - 1877597422) >> 8) ^ 0xC42D1842) - (((v96 - 1877597422) >> 7) & 0x1A5CF7A) + 1;
  unsigned int v98 = v97 - ((2 * v97 - 1747839586) & 0xF36FE872) + 1168178952;
  unsigned int v99 = ((v84 ^ v72 ^ v94) >> 1) & 0x7FFBE43E ^ 0x6A2F642C;
  unsigned int v100 = ((v88 ^ v76 ^ v98) >> 1) & 0x7FFBE43E ^ 0x1CE1B692;
  unsigned int v101 = ((v100 - ((2 * v100) & 0x30D64564) + 409936818) & 0x21D3C4FA ^ 0x208104EB)
       + ((v100 - ((2 * v100) & 0x30D64564) + 409936818) & 0xDE2C3904 ^ 0x8241101);
  unsigned int v102 = (v98 ^ 0x43277A6A) + ((v98 >> 8) ^ 0xE4F9167B) + ((v98 >> 7) & 0x8B9DFC ^ 0xFF7DF30B) + 457559808;
  unsigned int v103 = (((((2 * v102) & 0xBFEDFFFC) + (v102 ^ 0xDFF6FFFE) + 537460738) >> 8) ^ 0xDF7A2FEE)
       + ((2 * v102) & 0xBFEDFFFC)
       + (v102 ^ 0xDFF6FFFE)
       + (((((2 * v102) & 0xBFEDFFFC) + (v102 ^ 0xDFF6FFFE) + 537460738) >> 7) & 0xF45FDC);
  int v104 = v103 - ((2 * v103 + 18718760) & 0xE0626FE) - 946740333;
  unsigned int v105 = ((v91 ^ v80 ^ v104) >> 1) & 0x7FFBE43E ^ 0x45816038;
  int v106 = (((2 * v105) | 0x568CB5DE) - v105 + 1421452561) ^ 0x418DD52E;
  unsigned int v107 = STACK[0x4B0];
  unsigned int v108 = LODWORD(STACK[0x368]) ^ LODWORD(STACK[0x4B0]) ^ a65 ^ 0x92B0B623 ^ ((LODWORD(STACK[0x4B0]) ^ a65) >> 1) & 0x7FFBE43E;
  unsigned int v109 = ((v108 & 0xFF188309 ^ 0xE0088308) - ((2 * (v108 & 0xFF188309 ^ 0xE0088308)) & 0xB4000602) + 1512507141) ^ 0x5B620320;
  unsigned int v110 = (((2 * v109) | 0xF7A0361C) - v109 + 70247666) ^ 0xAF851F2A | (((2 * (v108 & 0xE77CF6 ^ 0x1302427)) | 0x64132CF0)
                                                                     - (v108 & 0xE77CF6 ^ 0x1302427)
                                                                     + 1307994504) ^ 0xB39AD27D;
  HIDWORD(v111) = LODWORD(STACK[0x4E8]) ^ 0x26D4;
  LODWORD(v111) = LODWORD(STACK[0x4E8]) ^ 0x7B0C8000;
  unsigned int v112 = v67 ^ (v110 - ((2 * v110) & 0x7B9E1AD2) - 1110504087) ^ v72 ^ v84 ^ v94 ^ (v99
                                                                                  - ((2 * v99) & 0xB0B1407C)
                                                                                  + 1482209471);
  int v113 = (v111 >> 14) - ((2 * (v111 >> 14)) & 0x276B889E) - 1816804273;
  HIDWORD(v111) = v112 ^ 0x11BC;
  LODWORD(v111) = v112 ^ 0x17784000;
  int v114 = ((v111 >> 14) - ((2 * (v111 >> 14)) & 0xB2A46A72) - 648923847) ^ v113;
  HIDWORD(v111) = v114 ^ 0x1B405;
  LODWORD(v111) = v114 ^ 0xD79C0000;
  int v115 = v111 >> 18;
  LODWORD(STACK[0x4E8]) = (2 * v115) & 0xE261717A;
  LODWORD(STACK[0x4C0]) = v115 + 1899018429;
  unsigned int v116 = LODWORD(STACK[0x4F0]) ^ LODWORD(STACK[0x414]) ^ LODWORD(STACK[0x4C8]);
  unsigned int v117 = (((v116 >> 1) & 0x7FFBE43E ^ 0x25CA6018)
        + ((v116 >> 1) & 0x2BE0843E ^ 0x8A208E66)
        - (((v116 >> 1) & 0x7FFBE43E ^ 0x25CA6018) & 0x2BE0843E)) ^ 0xD888C5D;
  int v118 = STACK[0x4F8];
  unsigned int v119 = (((LODWORD(STACK[0x494]) ^ LODWORD(STACK[0x4B8])) ^ LODWORD(STACK[0x4F8])) >> 1) & 0x7FFBE43E ^ 0x2DB1642E;
  unsigned int v120 = ((v119 | 0x3DC34C31) - (v119 | 0xC23CB3CE) - 1036209202) ^ 0x318B4FB1;
  int v121 = (((2 * ((LODWORD(STACK[0x4B8]) >> 1) & 0x7FFBE43E ^ 0x3F1B0430)) & 0x4EE60004)
        - ((LODWORD(STACK[0x4B8]) >> 1) & 0x7FFBE43E ^ 0x3F1B0430)
        + 1485635453) ^ 0x10E2B859;
  int v122 = LODWORD(STACK[0x414]) ^ LODWORD(STACK[0x398]) ^ LODWORD(STACK[0x4F0]) ^ (LODWORD(STACK[0x414]) >> 1) & 0x7FFBE43E ^ LODWORD(STACK[0x4E0]) ^ LODWORD(STACK[0x208]) ^ v116;
  LODWORD(STACK[0x568]) = (v107 >> 1) & 0x7FFBE43E;
  LODWORD(STACK[0x36C]) ^= v122 ^ LODWORD(STACK[0x44C]) ^ (v117 - ((2 * v117) & 0x9058B7E8) - 936616972) ^ a1 ^ v76 ^ v88 ^ v98 ^ (v101 - 2);
  LODWORD(STACK[0x368]) = (((2 * v121) | 0x38784C2) - v121 - 29606497) ^ LODWORD(STACK[0x39C]) ^ v118 ^ ((v120 | 0x5330D9FE) - (v120 | 0xACCF2601) - 1395710463) ^ v65 ^ v80 ^ v91 ^ v104 ^ (v106 - 1) ^ 0x23DC5A27;
  unsigned int v123 = LODWORD(STACK[0x450]) ^ 0xFFFFFF94;
  LODWORD(STACK[0x3A0]) = LODWORD(STACK[0x358]) ^ 0x4475BBEA;
  LODWORD(STACK[0x39C]) = LODWORD(STACK[0x350]) ^ 0xA2101912;
  LODWORD(STACK[0x398]) = LODWORD(STACK[0x3E0]) ^ 0x3F73C0C;
  unint64_t v124 = STACK[0xA68];
  int v125 = LODWORD(STACK[0x23C]) ^ LODWORD(STACK[0x234]);
  unsigned int v126 = (2 * ((STACK[0x3AC] & 0x48FF756B) - ((2 * (STACK[0x3AC] & 0x48FF756B)) & 0xCED2E84)) - 1930613116) ^ 0x8CED2E84;
  unsigned int v127 = (v126 + 1206949376 - ((2 * v126) & 0x8FE30C00) + 61440) ^ 0xF0EF36B;
  unsigned int v128 = (v127 & STACK[0x39C]) + 1845085777 - ((2 * (v127 & STACK[0x39C])) & 0xDBF38CA2);
  unsigned int v129 = (((v127 & STACK[0x398]) - 415205122 - ((2 * (v127 & STACK[0x398])) & 0xCE80F1FC)) ^ 0xE74078FE) >> STACK[0x3B0];
  uint64_t v130 = ((v128 ^ 0x6DF9C651) << LODWORD(STACK[0x3A4]))
       - 1799203340
       - ((2 * ((v128 ^ 0x6DF9C651) << LODWORD(STACK[0x3A4]))) & 0x2984ABE8);
  uint64_t v131 = LODWORD(STACK[0x558]);
  uint64_t v132 = 4
       * ((LODWORD(STACK[0x558]) ^ ((227969280 << v123) - ((2 * (227969280 << v123)) & 0xB4) - 38)) ^ 0xB2u);
  *(_DWORD *)(STACK[0xA58] + v132) = v125 ^ v130 ^ (v129 - ((2 * v129) & 0xB29FC646) + 1498407715) ^ 0x2D23E99D;
  *(_DWORD *)(v124 + v132) = v125 ^ 0x63C269C5 ^ ((unsigned __int16)(unk_10023AF58 - 7889)
                                                - ((2 * (unsigned __int16)(unk_10023AF58 - 7889)) & 0x13A26)
                                                - 382427885);
  return ((uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + v70))(v130, v131, v70 ^ 0x2ACu, 3879762174, 2231851456, 1845085777, 2495763956, 3966488660, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

#error "1001715A8: too big function (funcsize=0)"

void sub_1001860F0()
{
  int v0 = STACK[0x254];
  LODWORD(STACK[0x2B8]) = LODWORD(STACK[0x570]) - 104419360;
  LODWORD(STACK[0x3C0]) += 1204648960;
  LODWORD(STACK[0x268]) = LODWORD(STACK[0x248]) ^ 0xBF1B7777;
  LODWORD(STACK[0x258]) = (v0 + 1005412694) ^ LODWORD(STACK[0x250]);
  LODWORD(STACK[0x260]) = LODWORD(STACK[0x24C]) ^ 0x5868BFBC;
  LODWORD(STACK[0x264]) = LODWORD(STACK[0x244]) ^ 0xD9D21802;
  int v1 = STACK[0x23C];
  int v2 = STACK[0x3BC];
  if (LODWORD(STACK[0x240]) == 829073770) {
    int v3 = STACK[0x23C];
  }
  else {
    int v3 = STACK[0x3BC];
  }
  if (LODWORD(STACK[0x240]) == 829073770) {
    int v4 = STACK[0x238];
  }
  else {
    int v4 = STACK[0x234];
  }
  if (LODWORD(STACK[0x240]) == 829073770) {
    int v1 = STACK[0x234];
  }
  else {
    int v2 = STACK[0x238];
  }
  int v5 = STACK[0x3C4];
  if (LODWORD(STACK[0x3C4]) == 709617036) {
    int v6 = v3;
  }
  else {
    int v6 = v4;
  }
  LODWORD(STACK[0x23C]) = v6;
  if (v5 == 709617036) {
    int v3 = v4;
  }
  LODWORD(STACK[0x238]) = v3;
  if (v5 == 709617036) {
    int v7 = v1;
  }
  else {
    int v7 = v2;
  }
  LODWORD(STACK[0x234]) = v7;
  if (v5 == 709617036) {
    int v8 = v2;
  }
  else {
    int v8 = v1;
  }
  LODWORD(STACK[0x3BC]) = v8;
  JUMPOUT(0x10017A2A0);
}

uint64_t sub_1001861D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  (*(void (**)(unint64_t))(v12 + 8 * (a12 ^ 0xCA6)))(STACK[0xA68]);
  uint64_t v13 = ((uint64_t (*)(unint64_t))*(&off_10026D1A0 + (a12 ^ 0x52D) + 1673))(STACK[0xA58]);
  return sub_1001E962C(v13);
}

uint64_t sub_10018621C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = ((v7 << 6) & 0x3AB06F40 ^ 0x3A004740) - 1364233168 + ((v7 << (((a4 + 127) & 0x6C) - 103)) ^ 0xE2F81C4F);
  if (v9 >= 0x2E07ABBF) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = 0xFFFFFFFF00000000;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a7
                                                     + 8
                                                     * ((13 * (STACK[0x560] + v8 + a1 + v9 - v10 - 772254655 < 0x10)) | a4)))(0x45F2F5AC818D5A5BLL, 0x582402397BEC8B77);
}

uint64_t sub_100186324()
{
  v2.i64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v2.i64[1] = 0xBCBCBCBCBCBCBCBCLL;
  v3.i64[0] = 0x7878787878787878;
  v3.i64[1] = 0x7878787878787878;
  *(int8x16_t *)&STACK[0xAC0] = vaddq_s8(vaddq_s8(veorq_s8(*v1, v2), v3), vandq_s8(vaddq_s8(*v1, *v1), v3));
  LODWORD(STACK[0x614]) = v0 + 64;
  int v4 = (unsigned char *)STACK[0x830];
  *int v4 = v1[1].i8[0];
  v4[1] = v1[1].i8[1];
  v4[2] = v1[1].i8[2];
  v4[3] = v1[1].i8[3];
  v4[4] = v1[1].i8[4];
  v4[5] = v1[1].i8[5];
  v4[6] = v1[1].i8[6];
  v4[7] = v1[1].i8[7];
  v4[8] = v1[1].i8[8];
  v4[9] = v1[1].i8[9];
  v4[10] = v1[1].i8[10];
  v4[11] = v1[1].i8[11];
  v4[12] = v1[1].i8[12];
  v4[13] = v1[1].i8[13];
  v4[14] = v1[1].i8[14];
  v4[15] = v1[1].i8[15];
  return sub_1001AA4B8();
}

uint64_t sub_1001863F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(unsigned char *)(a2 + v7 - 0x582402397BEC8B77) = (*(unsigned char *)((v10 ^ v11) + a1 + v8 - 0x45F2F5AC818D5CBCLL) ^ 0xBC)
                                             + ((2 * *(unsigned char *)((v10 ^ v11) + a1 + v8 - 0x45F2F5AC818D5CBCLL)) & 0x78)
                                             + 120;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 8 * ((228 * (a4 + 1 != v9 + 16)) ^ v10)))(a1 + 1, a2 + 1);
}

uint64_t sub_10018647C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (*(uint64_t (**)(unint64_t, uint64_t))(a3 + 8 * (v3 ^ 0xC95)))(STACK[0x570], 2722084108);
  STACK[0x558] = v5 + 0x228E0CD37FCCF1ACLL;
  STACK[0x960] = v5 + 0x228E0CD37FCCF1ACLL;
  return (*(uint64_t (**)(void))(a3 + 8 * (((v5 == 0) * ((((v3 - 304) | 0x428) - 1038) ^ ((v3 - 284) | 0xA))) ^ v3)))();
}

uint64_t sub_1001864FC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((85
                                * ((STACK[0x570] ^ 0xF9334FDD7B6FFF9ELL)
                                 + 0x6CCB0233BB1AEABLL
                                 + ((2 * STACK[0x570]) & 0x1FF3CLL) != ((v1 + 728) ^ 0xB721A83FLL))) ^ v1)))();
}

uint64_t sub_1001865A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, unint64_t a4@<X8>)
{
  BOOL v10 = v4 < a4;
  *(unsigned char *)(v7 + a1 - 0x2A2D4C3DC919F48ELL) = *(unsigned char *)(v6 + a3 - 0x5C3BD53D0E70C091)
                                             - ((2 * *(unsigned char *)(v6 + a3 - 0x5C3BD53D0E70C091)) & 0x22)
                                             + 17;
  if (v10 == v8 - 0x720825050F08B557 < a4) {
    BOOL v10 = v8 - 0x720825050F08B557 < v4;
  }
  return (*(uint64_t (**)(void))(a2 + 8 * ((v10 * v5) ^ v9)))();
}

uint64_t sub_100186648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (STACK[0x570] ^ 0xBEDABAA) + 1735093792 + (STACK[0x560] & 0x15754);
  unint64_t v8 = v5 + v6 + ((v4 + 5312900) & 0xFFAEEFAD ^ 0x42B3AEA6);
  BOOL v9 = v8 < 0x80C09F7A;
  unint64_t v10 = (v7 & 0xFFFFFFFEFFFFFFFFLL | ((unint64_t)(v7 < 0x73591987) << 32)) + 224888311;
  int v11 = (v10 < 0x80C09F7A) ^ v9;
  BOOL v12 = v10 <= v8;
  if (!v11) {
    BOOL v9 = v12;
  }
  return (*(uint64_t (**)(void))(a4 + 8 * ((155 * v9) ^ v4)))();
}

uint64_t sub_10018670C()
{
  LODWORD(STACK[0x550]) = STACK[0x778];
  LODWORD(STACK[0x548]) = -1842144807;
  unint64_t v4 = ((v2 - 429100752) | ((unint64_t)((v2 - 429100752) < 0x59C58AB5) << 32))
     + v3
     - 1506118325;
  unsigned int v5 = (((*(unsigned __int8 *)v4 - ((*(unsigned __int8 *)v4 << ((2 * (v0 + 50)) ^ 0x51)) & 0xC4)) << 8) - 7680) ^ 0xFFFFE200;
  LOWORD(v4) = (v5 - ((2 * v5) & 0x4E00) - 22651) ^ 0xA785 | (*(unsigned __int8 *)(v4 + 1)
                                                            - ((2 * *(unsigned __int8 *)(v4 + 1)) & 0x42)
                                                            + 26657) ^ 0x6821;
  int v6 = (unsigned __int16)(v4 - ((2 * v4) & 0x55E0) - 21776) ^ 0xAAF0;
  unsigned int v7 = v2 + (v6 ^ 0x3FB7FEEF) + ((2 * v6) & 0x1FDDE) + 1877342448;
  BOOL v8 = v7 < 0x22F71162;
  BOOL v9 = v7 > v1 - 454419722;
  if ((v1 - 454419722) < 0x22F71162 != v8) {
    BOOL v9 = v8;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + ((58 * v9) ^ (v0 - 793))))(4294925278, 4294953326, 758, v2);
}

uint64_t sub_1001868BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, __int16 a7)
{
  int v13 = (v9 ^ 0x894) - 838;
  uint64_t v14 = v8 + v11 - 0x3749BB5A557E7DA5 + v12 + 0x3749BB59E225641ELL;
  __int16 v15 = (a6
       + ((*(unsigned __int8 *)v14 - (((unsigned __int16)v13 ^ 0x52) & (unsigned __int16)(2 * *(unsigned __int8 *)v14))) << 8)) ^ a6;
  LOWORD(v14) = (v15 - ((2 * v15) & 0xBFFF) + v7) ^ v7 | (*(unsigned __int8 *)(v14 + 1)
                                                        - ((2 * *(unsigned __int8 *)(v14 + 1)) & 0x16C)
                                                        + a7) ^ a7;
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((232
                                * ((__int16)(v14 - ((2 * v14) & 0x88C0) - 15248) >= (__int16)(((v13 ^ 0xC004) + 16269) ^ 0xC07D))) ^ v13)))();
}

uint64_t sub_1001869A0(int a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((863
                                * (((3 * ((a1 + 64) & 0x77 ^ 0xC9)) ^ (((v3 - a1) | (a1 - v3)) >> 15)) & 1)) ^ v2)))();
}

uint64_t sub_1001869F0()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8 * ((1562 * ((((v0 - v1) | (v1 - v0)) & 0x8000) == 0)) ^ (v1 - 43589))))(4294925278);
}

uint64_t sub_100186A40(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v8 = (((v5 + 2082228144) & 0x83E30DFE) + 1138) | 0x20;
  int v9 = *(unsigned __int8 *)(v7 + (a4 - 1935219075));
  LODWORD(STACK[0x550]) = (v8 ^ LODWORD(STACK[0x548])) + v9 - ((2 * v9) & 0x1D6);
  BOOL v10 = v4 < 0x80C09F7A;
  unint64_t v11 = (a4 + 5) + 224888311 + ((unint64_t)((a4 + 5) < 0x73591987) << 32);
  int v12 = v10 ^ (v11 < 0x80C09F7A);
  BOOL v13 = v11 <= v4;
  if (!v12) {
    BOOL v10 = v13;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((v10 * ((v8 - 66043190) & 0x3EFBFAB ^ 0xA ^ (28 * (v8 ^ 0x574)))) ^ v8)))();
}

void sub_100186C7C()
{
}

uint64_t sub_100186C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (*(uint64_t (**)(void, uint64_t))(a4 + 8 * (v4 ^ 0xF8D)))(v4 ^ 0xB3B7B1CB ^ LODWORD(STACK[0x8C8]), 2168017039);
  STACK[0x7B0] = v5;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((201 * (v5 != 0)) ^ (v4 - 1880))))();
}

uint64_t sub_100186D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x550]) = v4;
  BOOL v7 = (v5 ^ 0x736FE46FA5B9FF96) - 0x736FE46F770FFFD4 + ((v5 << ((v6 + 112) ^ 0xD2u)) & 0x14B73FF2CLL) != 782892994;
  return (*(uint64_t (**)(unint64_t))(a4 + 8 * ((v7 | (8 * v7)) ^ v6)))(STACK[0x530]);
}

uint64_t sub_100186DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, unint64_t a3@<X8>)
{
  BOOL v9 = v3 < a3;
  *(unsigned char *)(v5 + v7 - 0x213D59D78CBAC61BLL) = (*(unsigned char *)(v4 + a1 - 0x5D9649EC48261E52) ^ 0x7B)
                                             + ((2 * *(unsigned char *)(v4 + a1 - 0x5D9649EC48261E52)) & 0xF7)
                                             - 40;
  if (v9 == v6 - 0x3B5F6F3E56D97BEBLL < a3) {
    BOOL v9 = v6 - 0x3B5F6F3E56D97BEBLL < v3;
  }
  return (*(uint64_t (**)(void))(a2 + 8 * ((v9 | (8 * v9)) ^ v8)))();
}

uint64_t sub_100186E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * (((dword_1002846DC == 227 * (v4 ^ 0x2D6) + 1381728762) * (v4 - 671)) ^ v4)))();
}

uint64_t sub_100186ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = v4 + 300;
  unsigned int v6 = (v4 + 230671532) & 0xF2403FB7;
  int v7 = (*(uint64_t (**)(void, unint64_t *))(a4 + 8 * ((v4 + 300) ^ 0xB68)))(0, &STACK[0x87C]);
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (((((v6 - 9078585) & (2 * v7)) + (v7 ^ 0x7FBABFFF) == 2142945279) * (v5 + 723)) ^ v5)))();
}

uint64_t sub_100186F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v5 = (*(uint64_t (**)(unint64_t *))(a4 + 8 * (v4 + 347)))(&STACK[0x14C1]) == 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((118 * ((v5 ^ (v4 + 113 + v4 - 61 + 1)) & 1)) ^ v4)))();
}

uint64_t sub_100186FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = (*(uint64_t (**)(void, uint64_t, unint64_t *))(a4 + 8 * (v4 ^ 0xB92)))(LODWORD(STACK[0x87C]), a1, &STACK[0x90C]);
  BOOL v6 = ((2 * v5) & 0xAEEAEFF6) + ((((v4 - 634) | 0x628) + 1467314259) ^ v5) == 1467316219;
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (((v4 + 71) ^ v6) & 1 | (4 * (((v4 + 71) ^ v6) & 1)) | v4)))();
}

uint64_t sub_100187038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = v4 | 0x12C;
  int v6 = (*(uint64_t (**)(void))(a4 + 8 * (v5 + 255)))(LODWORD(STACK[0x90C]));
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((28
                               * (((2 * v6) & 0xEB793FDA) + ((((v5 + 1050736701) & 0xC15F07FD) + 1975294021) ^ v6) != ((v5 + 116934797) & 0xF907B23F) + 1975295411)) ^ v5)))();
}

uint64_t sub_1001870D4()
{
  int v1 = ((uint64_t (*)(void))*(&off_10026D1A0 + (v0 ^ 0xA67)))();
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((99 * (((2 * v1) & 0xFFFDFD7E) + (v1 ^ 0x7FFEFEBF) == 2147417791)) ^ v0)))();
}

uint64_t sub_100187164()
{
  *(_DWORD *)(v2 + 1756) = (LODWORD(STACK[0x8DC]) ^ 0x777BC67B)
                         - 622870546
                         + ((LODWORD(STACK[0x8DC]) << (v0 ^ 0x3B)) & 0xEEF78CF6);
  ((void (*)(uint64_t))*(&off_10026D1A0 + (v0 ^ 0xA47)))(v1);
  uint64_t v3 = ((uint64_t (*)(void))*(&off_10026D1A0 + (v0 ^ 0x592) + 213))(LODWORD(STACK[0x90C]));
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + ((1191 * (*(_DWORD *)(v2 + 1756) == (v0 ^ 0x592) + 1381727937)) ^ ((v0 ^ 0x592) - 1237))))(v3);
}

void sub_100187234()
{
  STACK[0x788] = v2;
  ((void (*)(uint64_t))*(&off_10026D1A0 + (v1 ^ 0xF86)))(v0);
  STACK[0x7B0] = 0;
  JUMPOUT(0x100187A8CLL);
}

uint64_t sub_100187AB4(int a1)
{
  int v2 = STACK[0x4B0];
  if (LODWORD(STACK[0x4F0]) != 2089942522) {
    int v2 = STACK[0x4A8];
  }
  LODWORD(STACK[0x550]) = v2;
  LODWORD(STACK[0x4F0]) = LODWORD(STACK[0x4D8]) ^ 0x6AE519AE;
  LODWORD(STACK[0x4A8]) = STACK[0x350] & 0x27CFE90;
  int v3 = LODWORD(STACK[0x374]) - LODWORD(STACK[0x3BC]);
  LODWORD(STACK[0x3BC]) = v3;
  LODWORD(STACK[0x358]) ^= v3;
  LODWORD(STACK[0x280]) = LODWORD(STACK[0x370]) ^ 0x3986F3EE;
  LODWORD(STACK[0x4B0]) = a1 ^ 0x4E06C865;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((45 * (v1 - 1487072877 >= STACK[0x568])) ^ a1)))();
}

void sub_100188234()
{
}

uint64_t sub_100188258()
{
  int v0 = (LODWORD(STACK[0x4B0]) + 1778381827) & 0x47F946EB;
  LODWORD(STACK[0x288]) = LODWORD(STACK[0x28C]) + LODWORD(STACK[0x38C]);
  LODWORD(STACK[0x4B0]) = STACK[0x454] & 0xFFFFFF80;
  LODWORD(STACK[0x454]) = LODWORD(STACK[0x4A8]) - LODWORD(STACK[0x3A8]) - 20873036;
  LODWORD(STACK[0x4A8]) = LODWORD(STACK[0x558]) ^ 0x4897E03F;
  int v1 = *(unsigned __int8 *)(STACK[0x570]
                          + (*(unsigned char *)(STACK[0x570]
                                      + ((*(unsigned char *)(STACK[0x570] + ((*(unsigned char *)(STACK[0x570] + 5) + 12) & 0xF)) + 6) & 0xF)) & 0xF))
     + 14;
  int v2 = ((v1 & 0xF) + (~(2 * v1) | 0xE9) - 116) ^ 0x8B;
  unsigned int v3 = ((2 * v2) & 0x1BC) + (v2 ^ 0x7D70FBDE);
  BOOL v4 = v3 < 0x7D70FBDE || v3 + 975828682 > 0xB79AF2A9;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((486 * v4) ^ v0)))();
}

uint64_t sub_100189394(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  int v6 = STACK[0x3F8];
  if ((STACK[0x548] & 2) != 0) {
    int v6 = STACK[0x3AC];
  }
  LODWORD(STACK[0x258]) = v6;
  LODWORD(STACK[0x350]) = LODWORD(STACK[0x3F0]) ^ LODWORD(STACK[0x3BC]);
  int v7 = v5 + 243;
  int v8 = (a3 - 1075921141) & 0x40214507;
  LODWORD(STACK[0x548]) = v8;
  int v9 = *(unsigned __int8 *)(STACK[0x570] + v7 + 795478812 + (v8 ^ 0xD095F1E2));
  unsigned int v10 = 1364176807 * (((2 * v9) & 0xFFFFFFEF) + (v9 ^ 0x6FFAFBF7))
      - ((-1566613682 * (((2 * v9) & 0xFFFFFFEF) + (v9 ^ 0x6FFAFBF7)) - 241331778) & 0x8471F2C2)
      + 990364224;
  unsigned int v11 = v7 + 795478812 + (a5 ^ 0x4A99770F ^ v10) + (v8 ^ 0xD095F1E2);
  unsigned int v12 = (((((2 * v11) & 0xEB3677BA) + (v11 ^ 0xF59B3BDD) + 174375971) >> 16) ^ 0xF97EFBFF)
      + ((2 * v11) & 0xEB3677BA)
      + (v11 ^ 0xF59B3BDD)
      + ((2 * ((((2 * v11) & 0xEB3677BA) + (v11 ^ 0xF59B3BDD) + 174375971) >> 16)) & 0x1F7FE);
  unsigned int v13 = (((v12 + 283494436) >> 8) ^ 0xC38CBFFD) + v12 + (((v12 + 283494436) >> 7) & 0x1197FFA);
  unsigned int v14 = v13 - ((2 * v13 - 1145665006) & 0xB7B0985A) - 1179414218;
  unsigned int v15 = v7 + 795478812 + (v10 ^ 0x99E0B54C ^ v14) + (v8 ^ 0xD095F1E2);
  unsigned int v16 = (((((2 * v15) & 0xAFFFFB76) + (v15 ^ 0xD7FFFDBB) + 671089221) >> 16) ^ 0xB2DD7FCF)
      + ((2 * v15) & 0xAFFFFB76)
      + (v15 ^ 0xD7FFFDBB)
      + (((((2 * v15) & 0xAFFFFB76) + (v15 ^ 0xD7FFFDBB) + 671089221) >> 15) & 0xFF9E);
  unsigned int v17 = (((v16 + 1965195894) >> 8) ^ 0x5FBFFFCF) + v16 + ((2 * ((v16 + 1965195894) >> 8)) & 0x17FFF9E);
  int v18 = v17 - ((2 * v17 + 1271496466) & 0x6D700F86) + 1553778508;
  unsigned int v19 = v7 + 795478812 + (v10 ^ 0xF480FEA2 ^ v18) + (v8 ^ 0xD095F1E2);
  unsigned int v20 = (((((2 * v19) & 0xABF1D73E) + (v19 ^ 0xD5F8EB9F) + 705107041) >> 16) ^ 0xDF9BCFF7)
      + ((2 * v19) & 0xABF1D73E)
      + (v19 ^ 0xD5F8EB9F)
      + ((2 * ((((2 * v19) & 0xABF1D73E) + (v19 ^ 0xD5F8EB9F) + 705107041) >> 16)) & 0x19FEE);
  unsigned int v21 = (((v20 + 1248543850) >> 8) ^ 0x5BF9FDCF) + v20 + (((v20 + 1248543850) >> 7) & 0x1F3FB9E);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))*(&off_10026D1A0
                                                                     + ((28 * ((v7 + 1) < 0x10)) ^ (a3 + 1620))))(1248543850, a2 ^ v14 ^ v18 ^ 0xE5C1C580 ^ (v21 - ((2 * v21 + 501679866) & 0x11431CDC) - 2020273685), 1543110095, 32766878);
}

uint64_t sub_1001897FC(uint64_t a1, int a2)
{
  int v5 = LODWORD(STACK[0x3D4]) - LODWORD(STACK[0x478]);
  unsigned int v6 = LODWORD(STACK[0x2A8]) ^ 0x9A316B6B;
  int v7 = (LODWORD(STACK[0x548]) - 1091133015) & 0x41095D7D;
  LODWORD(STACK[0x38C]) = v7;
  unsigned int v8 = (((v4 - 1192880174) >> 8) ^ 0xFB5FDDBD) + v4 + (((v4 - 1192880174) >> 7) & 0xBFBB7A);
  unsigned int v9 = v8
     + (((v8 - 1115276779) >> (v7 ^ 0x28)) ^ 0x5200C029)
     - ((2 * ((v8 - 1115276779) >> (v7 ^ 0x28))) & 0xBFE7FAC)
     + 1;
  unsigned int v10 = v9 - ((2 * v9 - 687148074) & 0x93FEC25E) - 1249584358;
  unsigned int v11 = ((2 * ((v10 ^ 0x49FF612F) - 1879573490)) & 0x9FEFFEFA) + (((v10 ^ 0x49FF612F) - 1879573490) ^ 0x4FF7FF7D);
  unsigned int v12 = (((v11 - 1341652861) >> 10) ^ 0x7F7D3B95) + v11 + (((v11 - 1341652861) >> 9) & 0x7A772A);
  unsigned int v13 = ((v12 + 814400750) & 0x3F5DFCAE) + v12 + (((v12 + 814400750) >> 1) ^ 0x9FAEFE57);
  unsigned int v14 = v13 - ((2 * v13 + 565677358) & 0xA809C926) + 1692445482;
  unsigned int v15 = ((2 * ((v14 ^ 0xD404E493) + 1287124013)) & 0xFBACFCFE) + (((v14 ^ 0xD404E493) + 1287124013) ^ 0xFDD67E7F);
  unsigned int v16 = v15 + (((v15 + 36274561) >> 13) ^ 0x90021280) - (((v15 + 36274561) >> 12) & 0xBDAFE);
  unsigned int v17 = v16 + (((v16 + 1915186945) >> 6) ^ 0x80022838) - (((v16 + 1915186945) >> 5) & 0x7FBAF8E) + 2;
  unsigned int v18 = v17 - ((2 * v17 - 464876146) & 0xA2AFADE8) + 1132273083;
  unsigned int v19 = ((2 * ((v18 ^ 0x5157D6F4) - 1282870125)) & 0xEDFE8DF8) + (((v18 ^ 0x5157D6F4) - 1282870125) ^ 0x76FF46FC);
  unsigned int v20 = (((v19 - 1996441340) >> 8) ^ 0x7BBDEC7F) + v19 + (((v19 - 1996441340) >> 7) & 0x17BD8FE);
  unsigned int v21 = (((v20 + 222481541) >> 2) ^ 0xB863EBCF) + v20 + (((v20 + 222481541) >> 1) & 0x70C7D79E);
  int v22 = v21 - ((2 * v21 + 700301676) & 0x6649A64E) - 2013023267;
  unsigned int v23 = ((2 * ((v22 ^ 0x3324D327) + 707258702)) & 0xB3FEF7BC) + (((v22 ^ 0x3324D327) + 707258702) ^ 0x59FF7BDE);
  unsigned int v24 = (((v23 - 1509915614) >> 13) ^ 0x3F3DA9B7) + v23 + (((v23 - 1509915614) >> 12) & 0xB536E);
  unsigned int v25 = (((v24 + 1724045931) >> 3) ^ 0xBBFE78BE) + v24 + (((v24 + 1724045931) >> 2) & 0x37FCF17C);
  unsigned int v26 = v25 - ((2 * v25 + 361284442) & 0x3DB27B64) - 912416929;
  unsigned int v27 = (v26 ^ 0x95566B38) + ((v26 >> 11) ^ 0x8739AEC4) + ((v26 >> 10) & 0x29F7EC ^ 0xFFDEAA77) + 2027224056;
  unsigned int v28 = (((((2 * v27) & 0xB9BB7B6A) + (v27 ^ 0xDCDDBDB5) + 589447755) >> 5) ^ 0x77CF48E7)
      + ((2 * v27) & 0xB9BB7B6A)
      + (v27 ^ 0xDCDDBDB5)
      + (((((2 * v27) & 0xB9BB7B6A) + (v27 ^ 0xDCDDBDB5) + 589447755) >> 4) & 0xF9E91CE);
  unsigned int v29 = v28 - ((2 * v28 + 1453716168) & 0xD3F7B7DE) - 1789995693;
  unsigned int v30 = (v29 ^ 0xDDA70F17) + ((v29 >> 12) ^ 0x85DA50) - 8912927 + ((2 * (v29 >> 12)) & 0xFFFBE ^ 0xFFF44B5F);
  unsigned int v31 = (((((2 * v30) & 0x8B75F49E) + (v30 ^ 0x45BAFA4F) - 1169881679) >> 7) ^ 0xF7EDFCFD)
      + ((2 * v30) & 0x8B75F49E)
      + (v30 ^ 0x45BAFA4F)
      + (((((2 * v30) & 0x8B75F49E) + (v30 ^ 0x45BAFA4F) - 1169881679) >> 6) & 0x3DBF9FA);
  int v32 = v31 - ((2 * v31 + 78516584) & 0x6B158B38) + 2011287120;
  unsigned int v33 = ((2 * ((v32 ^ 0xB58AC59C) - 2045107421)) & 0xF79BFF7E) + (((v32 ^ 0xB58AC59C) - 2045107421) ^ 0x7BCDFFBF);
  unsigned int v34 = (((v33 - 2077097919) >> 11) ^ 0x7AFFDBED) + v33 + (((v33 - 2077097919) >> 10) & 0x3FB7DA);
  unsigned int v35 = v34 + (((v34 + 154281044) >> 8) ^ 0x4188000C) - (((v34 + 154281044) >> 7) & 0xEFFFE6) + 1;
  unsigned int v36 = v35 + 1825213414 - ((2 * v35 + 257181838) & 0x4A40E34C) + 2567;
  unsigned int v37 = (v36 ^ 0x9FB0FFF5) + ((v36 >> 8) ^ 0xC09EB2EE) + 1073675760 + ((2 * (v36 >> 8)) & 0x1FDFBDC ^ 0xFEC29E23);
  unsigned int v38 = (((((2 * v37) & 0xF1F3FDBC) + (v37 ^ 0x78F9FEDE) - 2029649630) >> 8) ^ 0x7A952DFD)
      + ((2 * v37) & 0xF1F3FDBC)
      + (v37 ^ 0x78F9FEDE)
      + (((((2 * v37) & 0xF1F3FDBC) + (v37 ^ 0x78F9FEDE) - 2029649630) >> 7) & 0x12A5BFA);
  int v148 = v18 ^ a2 ^ v29 ^ (v38 - ((2 * v38 + 417441354) & 0x6D585D8A) + 1125974506);
  unsigned int v39 = (~v148 & 4 | 0x5388D0A3) - (~v148 & 3 | 0xAC772F5C) - 1401475236;
  int v40 = (v39 & 0x10800B2 ^ 0x80431) + (v39 & 0x5280D00D) - 1;
  int v41 = v40 ^ 0x614CFA39;
  int v42 = -(-v148 & 7) - 1270251721;
  if ((v40 ^ 0x614CFA39) == 0x32CC2EAD) {
    int v43 = 0;
  }
  else {
    int v43 = 255;
  }
  unint64_t v44 = v42 ^ 0xB4497F37;
  unsigned int v45 = v10 ^ v3 ^ v22 ^ v32;
  unsigned int v46 = v14 ^ v2 ^ v26 ^ v36;
  unsigned int v47 = ((v45 & 0x7F ^ 0x2B) + (v45 & 0x74 ^ 0x67F04554) - ((v45 & 0x7F ^ 0x2B) & 0x74)) ^ 0xED784FE5;
  int v48 = ((2 * v47) | 0x50021692) - v47 - 671157065;
  LODWORD(STACK[0x28C]) = v48;
  unsigned int v49 = v48 ^ 0xA28901D1;
  unsigned int v50 = 33686018 * (v48 ^ 0xA28901D1);
  LODWORD(STACK[0x2A8]) = v50;
  LODWORD(STACK[0x27C]) = v49;
  unsigned int v51 = 16843009 * v49 - (v50 & 0x8CBCEAEA);
  LODWORD(STACK[0x214]) = (v45 & 0xFFFFFF80 ^ 0x3C40DB80)
                        + (v45 & 0x358D8980 ^ 0x18D001C)
                        - ((v45 & 0xFFFFFF80 ^ 0x3C40DB80) & 0x358D8980);
  unsigned int v52 = ((v43 << ((55 - (-(char)v148 & 7)) ^ 0x37))
       + 1239056511
       - ((2 * (v43 << ((55 - (-(char)v148 & 7)) ^ 0x37))) & 0x93B502CE)
       + 232) ^ 0xB6257E98;
  int v53 = (((_BYTE)v43 << ((55 - (-(char)v148 & 7)) ^ 0x37))
                        + 127
                        - ((2 * ((_BYTE)v43 << ((55 - (-(char)v148 & 7)) ^ 0x37))) & 0xCE)
                        - 24) ^ 0x51530033;
  unsigned int v54 = (((2 * v53) | 0xC0058D42) - v53 + 536688991) ^ 0xB151C6F5;
  unsigned int v55 = 16843009 * v54 - ((33686018 * v54) & 0xF64C4E06) + 2066097923;
  unsigned int v56 = (LODWORD(STACK[0x47C]) ^ 0x9FE9C7A9)
      + (v55 ^ 0x84D9D8FC)
      + 1
      - ((2 * ((LODWORD(STACK[0x47C]) ^ 0x9FE9C7A9) + (v55 ^ 0x84D9D8FC) + 1)) & 0xFE327C94)
      + 2132360778;
  int v57 = 2 * (((v56 ^ 0x7F193E4A) & (v55 ^ 0x7B262703)) - ((2 * ((v56 ^ 0x7F193E4A) & (v55 ^ 0x7B262703))) & 0x1339D95C))
      - 1824925348;
  unsigned int v58 = ((-1191182336 * v54 - ((1912602624 * v54) & 0x68000000) - 1273267421) ^ 0xB41B7B23) & (v46 ^ 0x529C019E);
  LODWORD(STACK[0x3D4]) = v58 - ((2 * v58) & 0xCCCCCCCC) - 428096153;
  LODWORD(STACK[0x478]) = v55;
  unsigned int v59 = (v55 ^ 0x43F1949 ^ v56) + (v57 ^ 0x684F6463) + 76104385 + ((2 * v57) & 0xF6ED7A7C ^ 0x26613238);
  LODWORD(STACK[0x374]) = v59 ^ 0xFA9739FE;
  LODWORD(STACK[0x370]) = (2 * v59) & 0xF52E73FC;
  if (v41 == 852242093) {
    LOBYTE(v52) = 0;
  }
  unsigned __int8 v60 = (v52 & (v45 ^ 0xDA)) - ((2 * (v52 & (v45 ^ 0xDA))) & 0xA8) - 44;
  LODWORD(STACK[0x23C]) = (v60 ^ 0xA11148D4) + (v60 & 0xF ^ 0x58C0130B) - ((v60 ^ 0xA11148D4) & 0x8100400F);
  unsigned int v61 = v51 - 966888075;
  unsigned int v62 = (v51 - 966888075) ^ 0xC65E7575;
  int v63 = v46 ^ (v46 >> 8) ^ HIWORD(v46) ^ 0x6A680E4A;
  int v64 = ((v63 & 0xF5 ^ 0x1AC486F5) - (v63 & 0xF5) + ((v46 ^ BYTE1(v46) ^ BYTE2(v46)) ^ 0x4A)) ^ 0x52C446F7;
  unsigned int v65 = HIBYTE(v45) ^ 0x778776 ^ (((v45 ^ BYTE1(v45) ^ BYTE2(v45)) ^ 0x1B)
                                + ((v45 ^ (v45 >> 8) ^ HIWORD(v45) ^ 0xDF8FF851) & 0x7A ^ 0x778730)
                                - (((v45 ^ BYTE1(v45) ^ BYTE2(v45)) ^ 0x1B) & 0x7A));
  LODWORD(STACK[0x234]) = v46;
  unsigned int v66 = (((2 * v64) & 0x90010044) - v64 + 317157341) ^ HIBYTE(v46) ^ 0x5AE7AF5F;
  unsigned int v67 = (~(33686018 * v66) | 0xE5AC53A1) + 16843009 * v66;
  unsigned int v68 = 16843009 * v65 - ((33686018 * v65) & 0x917D8940) + 1220461728;
  LODWORD(STACK[0x3F8]) = v67 - 1926638032;
  LODWORD(STACK[0x208]) = v5;
  int v69 = STACK[0x44C];
  LODWORD(STACK[0x47C]) = LODWORD(STACK[0x44C]) ^ LODWORD(STACK[0x24C]) ^ v42 ^ ((v42 ^ LODWORD(STACK[0x44C])) >> 1);
  LODWORD(STACK[0x3A8]) = v5 ^ 0xC4D51A5E;
  uint64_t v70 = 4 * ((((v5 ^ 0xC4D51A5E) % 0x101) ^ 0x27FFBF9F) - 671072159 + ((2 * ((v5 ^ 0xC4D51A5E) % 0x101)) & 0x33E));
  int v71 = *(_DWORD *)((char *)dword_100237300 + v70);
  HIDWORD(v72) = v71 ^ 0x1934;
  LODWORD(v72) = v71 ^ 0xF960000;
  LODWORD(STACK[0x3F0]) = v68;
  int v73 = (v67 - 1926638032) ^ v68;
  int v74 = STACK[0x4A8];
  LODWORD(STACK[0x548]) = v73 ^ 0xECD9A44B;
  LODWORD(STACK[0x24C]) = (2 * ((16 * (v73 ^ 0xECD9A44B ^ v74)) ^ 0x33751C50)) & 0xC052C580;
  int v75 = (((v72 >> 17) - ((2 * (v72 >> 17)) & 0xBC01414) - 2048914934) ^ 0x9785A4BB) + 1;
  unsigned int v76 = v6 + (v75 ^ 0xBFF9BF7F) + ((2 * v75) & 0x7FF37EFE) + 1074151553;
  LODWORD(STACK[0x3AC]) = v62;
  unsigned int v77 = dword_100237300[v62 % 0x101];
  HIDWORD(v72) = v77 ^ 0x1934;
  LODWORD(v72) = v77 ^ 0xF960000;
  LODWORD(STACK[0x200]) = ((((v72 >> 17) - ((2 * (v72 >> 17)) & 0x6F43A498) + 933352012) ^ 0xDA3B8302)
                         + (v76 ^ 0x39E5BDFE)
                         + ((2 * v76) & 0x73CB7BFC)
                         - 971357694) ^ 0xFE19F679;
  int v78 = STACK[0x3E0];
  LODWORD(STACK[0x244]) = LODWORD(STACK[0x3E0]) ^ LODWORD(STACK[0x2AC]);
  int v79 = v78 ^ LODWORD(STACK[0x450]);
  LODWORD(STACK[0x3BC]) = v41;
  int v80 = STACK[0x3E8];
  unsigned int v81 = v79 ^ ((v41 ^ LODWORD(STACK[0x3E8])) >> 2);
  unint64_t v82 = STACK[0x3B0];
  uint64_t v83 = 4 * STACK[0x3B0];
  int v84 = *(_DWORD *)((char *)dword_100221680 + v83)
      - ((2 * *(_DWORD *)((char *)dword_100221680 + v83) + 139067286) & 0xC08A49A)
      + 1915310616;
  LODWORD(STACK[0x450]) = v40;
  unsigned int v85 = v40 ^ 0x5380D494;
  LODWORD(STACK[0x204]) = v81 ^ 0xC9CBA826;
  int v86 = STACK[0x558];
  unsigned int v87 = (16 * ((v84 ^ 0x604524D) * (v84 ^ 0x604524D) - ((2 * (v84 ^ 0x604524D) * (v84 ^ 0x604524D)) & 0xDB8CBD6))
       - 305766736) ^ 0xEDC65EB0;
  unsigned int v88 = v87 - ((2 * v87) & 0xC5619420) + 1655753240;
  unsigned int v89 = (LODWORD(STACK[0x558]) ^ 0x74B85168u) % 0x101
      - ((2 * ((LODWORD(STACK[0x558]) ^ 0x74B85168u) % 0x101)) & 0x392)
      + 810237385;
  LODWORD(STACK[0x3E0]) = v42;
  STACK[0x218] = v44;
  uint64_t v90 = v42 ^ 0xB4497F37;
  int v91 = (dword_100223300[v90] ^ v42 ^ (v44 - ((2 * v44 - 2073191046) & 0xE5DE12D8) - 1255811031) ^ 0x958E5520) + 1;
  unsigned int v92 = (LODWORD(STACK[0x368]) ^ 0x33347CFB) + (v91 ^ 0xF7EEBDFF) + ((2 * v91) & 0xEFDD7BFE) + 135348737;
  unsigned int v93 = v92 ^ 0xFBEFFABE;
  unsigned int v94 = (2 * v92) & 0xF7DFF57C;
  int v95 = (v89 ^ ((v89 ^ 0x304B3DC9) - ((2 * (v89 ^ 0x304B3DC9) + 74292602) & 0x63A038B6) - 200873192) ^ dword_100223300[v89 ^ 0x304B3DC9] ^ 0x2D4CFD16)
      + (LODWORD(STACK[0x36C]) ^ 0xB5FA5A4);
  int v96 = *(_DWORD *)((char *)dword_1002226B0 + v70)
      - ((2 * *(_DWORD *)((char *)dword_1002226B0 + v70) + 434692178) & 0x47641CC0)
      - 257524087;
  LODWORD(v70) = (v84 ^ 0xB6C0490E ^ v88) + v93 + v94 + 68158786;
  int v147 = v70 ^ 0x6FBCFFCF;
  int v146 = (2 * v70) & 0xDF79FF9E;
  LODWORD(v70) = dword_100237300[(v73 ^ 0x93C144D9) % 0x101];
  HIDWORD(v72) = v70 ^ 0x1934;
  LODWORD(v72) = v70 ^ 0xF960000;
  int v97 = ((v77 << 15) ^ 0xC9A0000) - ((2 * ((v77 << 15) ^ 0xC9A0000)) & 0x3D320000) + 513371522;
  LODWORD(v70) = v77 >> 17;
  int v98 = (((v77 >> 17) & 0x3C65 ^ 0x3860)
       + ((v77 >> 17) & 0x2845 ^ 0xF3A401D)
       - (((v77 >> 17) & 0x3C65 ^ 0x3860) & 0x2845)) ^ 0x4DBA757F;
  int v99 = ((2 * v98) & 0x4026C44) - v98 + 2040187357;
  unsigned int v100 = v80 ^ 0xDC7A4D6B;
  unsigned int v101 = (v97 & 0x6E98000 ^ 0x8E810000) + (v97 & 0x6C08000 ^ 0x7150D614) - ((v97 & 0x6E98000 ^ 0x8E810000) & 0x86C08000);
  unsigned int v102 = (v96 ^ 0xBD30A193) + (LODWORD(STACK[0x3A4]) ^ 0x97EF21F);
  int v103 = v102 ^ 0x7FF9F55D;
  unsigned int v104 = (2 * v102) & 0xFFF3EABA;
  int v105 = (((v72 >> 17) - 180176413 - ((2 * (v72 >> 17)) & 0xEA858822) + 2606) ^ 0xE7276AA0) + 1;
  int v106 = v105 ^ 0x7EDEFFFF;
  unsigned int v107 = (2 * v105) & 0xFDBDFFFE;
  int v108 = dword_1002226B0[v80 ^ 0xDC7A4D6B];
  unsigned int v109 = ((2 * v95) & 0xBF9F77BC) + (v95 ^ 0xDFCFBBDE) + v106 + v107;
  int v110 = 2 * v109 + 1117947974;
  LODWORD(STACK[0x36C]) = v109 - 1725657635;
  LODWORD(v70) = ((((v97 & 0xF9160000 ^ 0xA1120000) - ((2 * (v97 & 0xF9160000 ^ 0xA1120000)) & 0xBBBBBBBB) - 637666373) ^ 0xF3A06D7A)
                - 1) ^ 0x935F96C0 | ((v70 & 0x439A ^ 0x20A4288)
                                   + (v70 & 0x398 ^ 0xDD208D14)
                                   - ((v70 & 0x439A ^ 0x20A4288) & 0x3FF8)) ^ 0xDF2ACE9E;
  unsigned int v111 = v85;
  int v112 = dword_100221680[v85] - ((2 * dword_100221680[v85] + 407502742) & 0x3CD2C66C) - 1970380031;
  int v113 = (v70 - ((2 * v70) & 0x9ADCE736) - 848399461) ^ 0xCD6E739B | ((v99 ^ 0x3B1AE8DE | v101 ^ 0x7FD8D614)
                                                                    - ((2 * (v99 ^ 0x3B1AE8DE | v101 ^ 0x7FD8D614)) & 0x98AC4A34)
                                                                    - 866769638) ^ 0xCC56251A;
  unsigned int v114 = ((v113 - ((2 * v113) & 0x847845D0) - 1036246296) ^ 0xD0598C59) + 1;
  unsigned int v115 = v104 + v103 + (v114 ^ 0x5B9FDEFF) + ((2 * v114) & 0xB73FBDFE);
  LODWORD(STACK[0x240]) = (2 * v115 + 1221351240) & 0xDC50A666;
  LODWORD(STACK[0x238]) = v115 + 311328471;
  int v116 = 16
       * ((v112 ^ 0x1E696336) * (v112 ^ 0x1E696336) - ((2 * (v112 ^ 0x1E696336) * (v112 ^ 0x1E696336)) & 0xE039510));
  unsigned int v117 = ((v108 - ((2 * v108 + 434692178) & 0x722E7E6E) + 101429088) ^ 0xA79590C4)
       + (LODWORD(STACK[0x438]) ^ 0xA55FF9A6);
  LODWORD(STACK[0x438]) = (2 * ((8 * v73) ^ 0x9E0A26C8)) & 0x55B817F0;
  int v118 = (v112 ^ 0x56C0AC72 ^ (((v116 + 1880926336) ^ 0x701CA880)
                             - 2 * (((v116 + 1880926336) ^ 0x701CA880) & 0x6522E1F0 ^ ((_BYTE)v116 + 0x80) & 0x10)
                             + 1696784864))
       + 1;
  unsigned int v119 = ((2 * v117) & 0x5F33B5FE) + (v117 ^ 0xAF99DAFF) + (v118 ^ 0xFF7E377E) + ((2 * v118) & 0xFEFC6EFC);
  LODWORD(STACK[0x368]) = (2 * v119 + 567270150) & 0x6C3CD71A;
  LODWORD(STACK[0x248]) = v119 - 2029627120;
  int v120 = (v82 - ((2 * v82 - 2073191046) & 0x86A5DDA8) + 92913041) ^ v69;
  int v121 = ((2 * (v120 & 0x22640A9 ^ 0x22040A1)) | 0x421015B8) - (v120 & 0x22640A9 ^ 0x22040A1) + 1593308452;
  int v122 = *(_DWORD *)((char *)dword_100223300 + v83);
  int v123 = ((2 * (v122 & 0x3AA640A9 ^ 0x2060029)) & 0x60008010) - (v122 & 0x3AA640A9 ^ 0x2060029) - 877187915;
  unsigned int v124 = ((v121 & 0x58408925 ^ 0x5040B501) + (v121 & 0xA7BF42DA ^ 0xA1280083) - 1) ^ ((v123 & 0xCBB56125 ^ 0xAC00120)
                                                                                    + (v123 ^ 0xE13F6017)
                                                                                    - ((v123 ^ 0xE13F6017) & 0xCAA54923)) ^ 0x9BBBDA5A | ((v122 & 0xC559BF56 ^ 0x1DD83C83) - 1) & 0xC559BF56 ^ 0x8109A006;
  int v125 = dword_1002226B0[v90] - ((2 * dword_1002226B0[v90] + 434692178) & 0x204B24F8) + 1561985701;
  unsigned int v126 = (LODWORD(STACK[0x480]) ^ 0xA55FF9A6)
       + ((((2 * (v120 & 0x40108E56 ^ 0x40000214)) | 0x5BF1DB08) - (v120 & 0x40108E56 ^ 0x40000214) + 1376195196) ^ 0x2DF884EA ^ (v124 - ((2 * v124) & 0x7FDF31AA) + 1072666837))
       + 1;
  LODWORD(STACK[0x480]) = ((8 * v86) ^ 0xA5C28B40) - ((2 * ((8 * v86) ^ 0xA5C28B40)) & 0xCD997200) - 422790907;
  unsigned int v127 = (v125 ^ 0xEA73D8F) + (v126 ^ 0xF76FFED7) + ((2 * v126) & 0xEEDFFDAE) + 143655209;
  int v128 = (LODWORD(STACK[0x208]) ^ 0x8F)
       - ((2 * (LODWORD(STACK[0x208]) ^ 0x8F)) & 0xC8)
       + 861819236;
  unsigned int v129 = ((v128 & 0x34E0AC7 ^ 0xC00082C3) + (v128 ^ 0x237F5934) - ((v128 ^ 0x237F5934) & 0xAC7)) ^ 0xD36F8246;
  unsigned int v130 = v129
       + (LODWORD(STACK[0x4B0]) ^ 0xE24B0580)
       - 2 * ((v129 + (LODWORD(STACK[0x4B0]) ^ 0xE24B0580)) & 0x1B1072DB ^ v129 & 0xA)
       - 1693420847;
  unsigned int v131 = LODWORD(STACK[0x454]) ^ 0xDCB28384 | v100;
  LODWORD(STACK[0x3A4]) = v100;
  LODWORD(STACK[0x4B0]) = v131 & 0x22CC416F ^ v100 & 5;
  int v132 = STACK[0x4E0];
  LODWORD(STACK[0x2AC]) = v61;
  unsigned int v133 = ((v61 ^ 0x2091407E)
        + (v61 & 0xD6 ^ 0xC72CBB80)
        - ((v61 ^ 0x2091407E) & 0x200040D6)) ^ 0xC7BDBBDD;
  unsigned int v134 = (v133 | STACK[0x214] & 0xFFFFFF80 ^ 0x3264FB00)
       - 2 * ((v133 | STACK[0x214] & 0xFFFFFF80 ^ 0x3264FB00) & 0x2CF6E9BF ^ v133 & 0x12);
  LODWORD(v82) = v45 ^ 0x1B1A7F28 ^ LODWORD(STACK[0x470]) ^ ((LODWORD(STACK[0x214]) ^ v45) >> 8);
  LODWORD(STACK[0x470]) = (((4 * v148) ^ 0xA52B7940) + 1992535490 + (~(2 * ((4 * v148) ^ 0xA52B7940)) | 0x1278A47F)) ^ LODWORD(STACK[0x250]) ^ (((4 * v148) ^ 0x113146A0) - 2 * (((4 * v148) ^ 0x113146A0) & 0x603E016C ^ (4 * v148) & 4) + 1614676328);
  LODWORD(STACK[0x44C]) = v130;
  LODWORD(STACK[0x208]) = ((16 * v132) ^ 0x587BBA40) & 0x2481430 ^ (16 * v132) & 0x10;
  LODWORD(STACK[0x200]) = (2
                         * (((1456694535 * (v148 ^ 0xC44C51A8)) ^ 0x77E7FF7D)
                          + ((-1381578226 * (v148 ^ 0xC44C51A8)) & 0xEFCFFEFA)
                          + ((1381578226 * (v148 ^ 0xC44C51A8)) & 0xEEEB67B4)
                          + ((-1456694535 * (v148 ^ 0xC44C51A8)) ^ 0xF775B3DA)
                          + LODWORD(STACK[0x374])
                          + LODWORD(STACK[0x370]))
                         + 739648854) & 0x7697A2D8;
  LODWORD(v83) = (-1775709411 * LODWORD(STACK[0x468])) ^ 0xE3EFBF9F;
  unsigned int v135 = (743548474 * LODWORD(STACK[0x468])) & 0xC7DF7F3E;
  LODWORD(STACK[0x214]) = v111;
  LODWORD(STACK[0x468]) = v45;
  unsigned int v136 = 0xF30A3ECA % STACK[0x568];
  int v137 = v83
       + v135
       + ((-743548474 * (v45 ^ 0xBCEF228)) & 0xFFFA678E)
       + ((1775709411 * (v45 ^ 0xBCEF228)) ^ 0x7FFD33C7)
       + v147
       + v146;
  LODWORD(STACK[0x378]) = (2 * v137 + 11278742) & 0x2D8307E;
  LODWORD(STACK[0x204]) = v137 + 767698186;
  unint64_t v138 = (*(void *)(STACK[0xA50] + 8 * v136) ^ 0xC9C9C9C9C9C9C9C9) + 152420640;
  unint64_t v139 = (*(void *)(STACK[0xA50]
                    + 8
                    * (((v138 ^ 0x7E9FBEF9B7F6B7FFLL) - 0x7E9FBEF9B7F6B7FFLL + ((2 * v138) & 0xFD3F7DF36FED6FFELL))
                     % STACK[0x4C0])) ^ 0xC9C9C9C9C9C9C9C9)
       + 2316401174u;
  unint64_t v140 = (*(void *)(STACK[0xA50]
                    + 8
                    * (((v139 ^ 0xAFFE9F5FFFF7C72FLL) + 0x500160A0000838D1 + ((2 * v139) & 0x5FFD3EBFFFEF8E5ELL))
                     % STACK[0x4C0])) ^ 0xC9C9C9C9C9C9C9C9)
       + 3287320712u;
  unint64_t v141 = (*(void *)(STACK[0xA50]
                    + 8
                    * (((v140 ^ 0xDBF7FFF9EF7BFFFBLL) + 0x2408000610840005 + ((2 * v140) & 0xB7EFFFF3DEF7FFF6))
                     % STACK[0x4C0])) ^ 0xC9C9C9C9C9C9C9C9)
       + 304768445;
  LODWORD(v141) = ((v141 ^ 0xBFE7F7F7AFB3CEFFLL) + 0x40180808504C3101 + ((2 * v141) & 0x7FCFEFEF5F679DFELL))
                % STACK[0x4C0];
  unsigned int v142 = ((v141 - ((2 * v141) & 0xE85E2E64) - 198240462) ^ 0x2FD0E0EC)
       - 1044254412
       + ((2 * (v141 - ((2 * v141) & 0xE85E2E64) - 198240462)) & 0xB7FFEFBC ^ 0xA05E2E24);
  unsigned int v143 = STACK[0x38C];
  STACK[0x550] = (LODWORD(STACK[0x38C]) + 568834506) & 0xDE1843BD;
  LODWORD(STACK[0x380]) = v110 & 0xEFA69374;
  LODWORD(STACK[0x374]) = (2 * v127) & 0x84164DAE;
  LODWORD(STACK[0x370]) = v127 - 1039456553;
  LODWORD(STACK[0x458]) = v134 + 754379181;
  LODWORD(STACK[0x3E8]) = v82 ^ (v134 + 754379181);
  LODWORD(STACK[0x250]) = LODWORD(STACK[0x3F8]) ^ 0x2F788544;
  BOOL v144 = v142 < 0x9DC1E912;
  if (v142 >= 0x9DC1E912) {
    BOOL v144 = v142 > 0x9DC1E913;
  }
  return ((uint64_t (*)(uint64_t, uint64_t))*(&off_10026D1A0 + ((299 * v144) ^ v143)))(1804738045, 1159995119);
}

void sub_10018C6F8()
{
}

uint64_t sub_10018C704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v75 = STACK[0x550] ^ 0x486;
  STACK[0x550] = (v75 + 4) ^ LODWORD(STACK[0x3E0]);
  LODWORD(STACK[0x388]) = a68 - a72;
  LODWORD(STACK[0x3E0]) = LODWORD(STACK[0x23C]) ^ LODWORD(STACK[0x478]);
  LODWORD(STACK[0x480]) ^= LODWORD(STACK[0x4A8]) ^ LODWORD(STACK[0x444]) ^ LODWORD(STACK[0x548]) ^ (a59
                                                                                                  - LODWORD(STACK[0x438]));
  LODWORD(STACK[0x38C]) = LODWORD(STACK[0x3E8]) ^ 0x86063186;
  LODWORD(STACK[0x438]) = HIDWORD(a57) - 2 * a58;
  LODWORD(a63) = a56 + 376816253;
  LODWORD(STACK[0x4B0]) = a53 - HIDWORD(a54);
  LODWORD(STACK[0x24C]) = HIDWORD(a55) - a55;
  LODWORD(STACK[0x23C]) = LODWORD(STACK[0x468]) ^ 0x8FAAFDA4;
  unint64_t v76 = v73 - 38938703 + ((unint64_t)(v73 < 0x252284F) << 32);
  unint64_t v77 = 0xC76BB339E9ED63B1 * (*(void *)(STACK[0xA50] + 8 * v76) ^ 0xC9C9C9C9C9C9C9C9)
      - ((0xED76673D3DAC762 * (*(void *)(STACK[0xA50] + 8 * v76) ^ 0xC9C9C9C9C9C9C9C9)) & ((v75 - 65) ^ 0x342050506AC8E704))
      - 0x65EFD7D7CA9B8E05;
  unint64_t v78 = ((2 * ((v72 ^ 0x7BAAB294610BA9A1 ^ v77) + v76)) & 0xCB7EF7DF5F49DFE6)
      + (((v72 ^ 0x7BAAB294610BA9A1 ^ v77) + v76) ^ 0x65BF7BEFAFA4EFF3);
  unint64_t v79 = v78
      + (((v78 - 0x65BF7BEFAFA4EFF3) >> 32) ^ 0x851112014099D1)
      - (((v78 - 0x65BF7BEFAFA4EFF3) >> 31) & 0x1FD7ECC5CLL);
  unint64_t v80 = v79
      + (((v79 - 0x66448D01B0E589C4) >> 16) ^ 0x3B77FFFFADFBDBFELL)
      + (((v79 - 0x66448D01B0E589C4) >> 15) & 0x1FFFF5BF7B7FCLL);
  unint64_t v81 = v80
      + (((v80 + 0x5E4372FEA11E9A3ELL) >> 8) ^ 0x3FD7F6DE7FFFE7E9)
      + (((v80 + 0x5E4372FEA11E9A3ELL) >> 7) & 0x1AFEDBCFFFFCFD2)
      + 1;
  unint64_t v82 = v81 - ((2 * v81 - 0x7D58C3C47CAAE224) & 0xBF1EFC45FF902E26) - 0x5F1CE3BF3E8D59FFLL;
  int v83 = (((2 * v82) ^ 0xFF902E26) - ((2 * ((2 * v82) ^ 0xFF902E26)) & 0x71C21120) + 2028013713) & a8 ^ 0x71011430;
  int v84 = v83 - ((2 * v83) & 0x7C2306C0);
  unint64_t v85 = ((2 * ((v77 ^ 0x459F560ACAAC66E8 ^ v82) + v76)) & 0xAF3AAFFAFF9BA7EALL)
      + (((v77 ^ 0x459F560ACAAC66E8 ^ v82) + v76) ^ 0x579D57FD7FCDD3F5);
  unint64_t v86 = v85
      + (((v85 - 0x579D57FD7FCDD3F5) >> 32) ^ 0x10105090802604)
      - (((v85 - 0x579D57FD7FCDD3F5) >> 31) & 0xDEFFB3F6);
  unint64_t v87 = v86
      + (((v86 - 0x57AD684E104DF9F9) >> 16) ^ 0xDF6F7EFDE4F5D7DFLL)
      + (((v86 - 0x57AD684E104DF9F9) >> 15) & 0xFDFBC9EBAFBELL);
  unint64_t v88 = v87
      + (((v87 - 0x371CE74BF543D1D8) >> 8) ^ 0x3A7F5FFDAFBBB7BBLL)
      + (((v87 - 0x371CE74BF543D1D8) >> 7) & 0xFEBFFB5F776F76)
      + 1;
  unint64_t v89 = (v88 - ((2 * v88 + 0x1CC7716CB600ECD8) & 0x29A5FF9D398C051CLL) + 0x2336B884F7C678FALL) ^ 0x94D2FFCE9CC6028ELL;
  unint64_t v90 = v89 - ((2 * v89 + 0x45D043FB4117B934) & 0xFD4BFFBA93B3B9D6) + 0x218E21DAEA65B985;
  int v91 = 2 * (v89 - ((2 * v89 + 1092073780) & 0x93B3B9D6) - 362432123);
  int v92 = ((v91 ^ 0x93B3B9D6) + 54363238 - 2 * ((v91 ^ 0x93B3B9D6) & 0x33D846E ^ v91 & 8)) & a8 ^ 0x25000210;
  LODWORD(v89) = (v92 - ((2 * v92) & 0x72200EC0) - 1187901594) & 0xFFFBFFF8 ^ (v89
                                                                             - ((2 * v89 + 1092073780) & 0x93B3B9D6)
                                                                             - 362432123);
  unint64_t v93 = ((2 * ((v77 ^ 0xE4B5D7F57CBDAD10 ^ v90) + v76)) & 0xCFBECBFFFE5FFEDALL)
      + (((v77 ^ 0xE4B5D7F57CBDAD10 ^ v90) + v76) ^ 0x67DF65FFFF2FFF6DLL);
  unint64_t v94 = v93
      + (((v93 - 0x67DF65FFFF2FFF6DLL) >> 32) ^ 0xC866401099001863)
      - (((v93 - 0x67DF65FFFF2FFF6DLL) >> 31) & 0xCDFFCF38);
  unint64_t v95 = v94
      + (((v94 - 0x3045A610983017D0) >> 16) ^ 0x54DCFF57DFD7747FLL)
      + (((v94 - 0x3045A610983017D0) >> 15) & 0x1FEAFBFAEE8FELL);
  unint64_t v96 = v95
      + (((v95 + 0x7ADD5A9787F873B1) >> 8) ^ 0x7D3DE6C3F89FDFDDLL)
      + (((v95 + 0x7ADD5A9787F873B1) >> 7) & 0x7BCD87F13FBFBALL)
      + 1;
  unint64_t v97 = v96 - 2 * ((v96 + 1604223520) & 0x6FE81C36 ^ v96 & 0x10) - 813261242;
  int v98 = ((2 * v97) ^ 0xDFD0384C) - ((2 * ((2 * v97) ^ 0xDFD0384C)) & 0x15761B60) - 893710928;
  unsigned int v99 = (v98 & 0x22118330 ^ 0xA0006291) + (v98 & 0x5D081448 ^ 0x45001001) - 2;
  LODWORD(v80) = v96 - ((2 * v96 + 1607000282) & 0xA8DFB0B4) - 2074851129;
  LODWORD(v95) = (((2 * v80) ^ 0xA8DFB0B4) - ((2 * ((2 * v80) ^ 0xA8DFB0B4)) & 0x23CBD6DC) + 1374022511) & a8 ^ 0x7D089240;
  return ((uint64_t (*)(void, void, uint64_t, unint64_t, void, unint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + (v75 ^ (4 * (STACK[0x568] > v73 - 38938702)))))(v73 - 38938702, (v84 - 1099707548) & 0xFFFFFFF8 ^ v82 ^ v74 ^ v89 ^ (-1233421293- (v95 | 0xB67B7C13)+ (v95 | 0x498483EC)) ^ v80, 4294705144, STACK[0xA50], ((v99 & 0x33011810 ^ 0x10021003) + (v99 ^ 0xAB116FB0) - ((v99 ^ 0xAB116FB0) & 0x33011810)) ^ v97, v97, (v99 ^ 0xAB116FB0) & 0x33011810, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

void sub_10018D23C()
{
}

uint64_t sub_10018D268@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56,int a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  LODWORD(STACK[0x3D4]) ^= LODWORD(STACK[0x478]);
  LODWORD(STACK[0x444]) = LODWORD(STACK[0x36C]) - LODWORD(STACK[0x380]);
  LODWORD(STACK[0x380]) = LODWORD(STACK[0x248]) - LODWORD(STACK[0x368]);
  LODWORD(STACK[0x368]) = a65 - a66;
  LODWORD(STACK[0x36C]) = a60 - a61;
  LODWORD(STACK[0x478]) = a63 ^ LODWORD(STACK[0x37C]) ^ LODWORD(STACK[0x458]);
  LODWORD(STACK[0x468]) = a59 + a56;
  int v67 = STACK[0x234];
  LODWORD(STACK[0x248]) = a57 - a58;
  LODWORD(STACK[0x234]) = v67 ^ 0x7DDCC2CF;
  unint64_t v68 = v66
      + (((unint64_t)(v66 - 0x75014711FDA3A804) >> 24) ^ 0x8004A160085522B0)
      - (((unint64_t)(v66 - 0x75014711FDA3A804) >> 23) & 0x13FEF55BA9ELL);
  unint64_t v69 = v68
      + (((v68 + 0xAFA178DFA07354CLL) >> 14) ^ 0xBAFF7DC9F9FFA2EFLL)
      + (((v68 + 0xAFA178DFA07354CLL) >> 13) & 0x6FB93F3FF45DELL);
  unint64_t v70 = v69
      + (((v69 + 0x4FFA99C40007925DLL) >> 7) ^ 0xE0AC1C484300D1CLL)
      - (((v69 + 0x4FFA99C40007925DLL) >> 6) & 0x3EA7C76F79FE5C6);
  unint64_t v71 = (((v70 + 0x6052247533A9D9A6) >> 28) ^ 0x5BE9F3F6735FFF5BLL)
      + v70
      + 2
      + (((v70 + 0x6052247533A9D9A6) >> 27) & 0xCE6BFFEB6);
  unint64_t v72 = (((v71 + 0x468307EC049DA49) >> 8) ^ 0x7F58BBD337DF7FFCLL)
      + v71
      + (((v71 + 0x468307EC049DA49) >> 7) & 0xB177A66FBEFFF8);
  unint64_t v73 = v72
      + (((v72 - 0x7AF08B547795A5B3) >> 2) ^ 0xAC440A8818105200)
      - (((v72 - 0x7AF08B547795A5B3) >> 1) & 0x2777EAEFCFDF5BFELL);
  unint64_t v74 = (((v73 + 0x5250F7179CC8BD16) >> 27) ^ 0x73EDEEDFEF1FDFFELL)
      + v73
      + 1
      + (((v73 + 0x5250F7179CC8BD16) >> 26) & 0x3FDE3FBFFCLL);
  unint64_t v75 = v74
      + (((v74 - 0x219CF7C8525722E9) >> 14) ^ 0x104012907110C016)
      - (((v74 - 0x219CF7C8525722E9) >> 13) & 0x7DADF1DDE7FD2);
  unint64_t v76 = v75
      + (((v75 - 0x31DD0A58C367E2FFLL) >> 6) ^ 0xAC00040104200C20)
      - (((v75 - 0x31DD0A58C367E2FFLL) >> 5) & 0x7FFF7FDF7BFE7BELL);
  LODWORD(v75) = ((2 * (v76 + 2 - ((2 * (v76 + 2) + 1894785470) & 0x485A5636)) + 961181684) ^ 0xC85A5636)
               - 2
               * (((2 * (v76 + 2 - ((2 * (v76 + 2) + 1894785470) & 0x485A5636)) + 961181684) ^ 0xC85A5636) & 0x117CE0BC ^ (2 * ((_BYTE)v76 + 2 - ((2 * ((_BYTE)v76 + 2) - 66) & 0x36)) + 4) & 8)
               - 780345163;
  int v77 = v76 + 2 - ((2 * (v76 + 2) + 1894785470) & 0xA87A1FFC) - 1934286627;
  unint64_t v78 = v76
      + 2
      + (((v76 + 0x4A7E5246B39B0F50) >> 27) ^ 0xA08001414F0AD12ALL)
      - (((v76 + 0x4A7E5246B39B0F50) >> 26) & 0x3D61EA5DAALL);
  unint64_t v79 = v78
      + (((v78 - 0x5601AEFA9B6FC1DCLL) >> 11) ^ 0x91D040A6C0490901)
      - (((v78 - 0x5601AEFA9B6FC1DCLL) >> 10) & 0x1F7EB27F6DEDFCLL);
  unint64_t v80 = v79
      + (((v79 + 0x182E105EA4473523) >> 7) ^ 0xBBFAFD7FD7D7EFFFLL)
      + (((v79 + 0x182E105EA4473523) >> 6) & 0x3F5FAFFAFAFDFFELL)
      + 2;
  uint64_t v81 = v80 + 0x53E8CEB9614D20B1 + (~(2 * v80 - 0x4799DA42672175BCLL) | 0x1094884AD64448E3);
  unint64_t v82 = ((2 * ((v81 ^ 0xF7B5BBDA94DDDB8ELL) + 0x2CA9E7BAB642E976)) & 0xFC2D8FDEAEE7FBFCLL)
      + (((v81 ^ 0xF7B5BBDA94DDDB8ELL) + 0x2CA9E7BAB642E976) ^ 0x7E16C7EF5773FDFELL);
  unint64_t v83 = (((v82 - 0x7E16C7EF5773FDFELL) >> 27) ^ 0xFEFEFE5BF5BFF5C5)
      + v82
      + (((v82 - 0x7E16C7EF5773FDFELL) >> 26) & 0x37EB7FEB8ALL);
  unint64_t v84 = v83
      + (((v83 - 0x7D15C64B4D33F3C3) >> 8) ^ 0x440008050A4001)
      - (((v83 - 0x7D15C64B4D33F3C3) >> 7) & 0x177FFEFF5EB7FFCLL);
  unint64_t v85 = v84
      + (((v84 - 0x7D59C653523E33C4) >> 6) ^ 0xFDF5F6BFEE32FBAFLL)
      + (((v84 - 0x7D59C653523E33C4) >> 5) & 0x3EBED7FDC65F75ELL)
      + 1;
  unint64_t v86 = v85 - ((2 * v85 + 0x96085D97F1DA118) & 0x84180501B11C8C2) - 0x772EFCEB32E84B13;
  unint64_t v87 = (v86 ^ 0x3ED5DB549D1022A5)
      + ((v86 >> 24) ^ 0x30A1A3CD4DA5D3FLL)
      + ((v86 >> 23) & 0x1FBFDFDECBALL ^ 0xFFFFFF86564B57C5)
      - 0x30A1A02010109A1;
  unint64_t v88 = (((((2 * v87) & 0xFF64FFFFFFBFFBD6) + (v87 ^ 0xFFB27FFFFFDFFDEBLL) + 0x4D800000200215) >> 10) ^ 0x6FFFFB27BDBAFB7FLL)
      + ((2 * v87) & 0xFF64FFFFFFBFFBD6)
      + (v87 ^ 0xFFB27FFFFFDFFDEBLL)
      + (((((2 * v87) & 0xFF64FFFFFFBFFBD6) + (v87 ^ 0xFFB27FFFFFDFFDEBLL) + 0x4D800000200215) >> 9) & 0x7FF64F7B75F6FELL);
  unint64_t v89 = v88
      + (((v88 - 0x6FB27B27BD9AF96ALL) >> 5) ^ 0x840007A118104106)
      - (((v88 - 0x6FB27B27BD9AF96ALL) >> 4) & 0x7FFF0BDCFDF7DF2)
      + 1;
  uint64_t v90 = v89 + 0x611AA1A6B236087 + (~(2 * v89 + 0x189AFA6E54A98B1ELL) | 0xC77A6397E62CA11);
  LODWORD(v89) = ((2 * v90) ^ 0x819D35EE) - ((2 * ((2 * v90) ^ 0x819D35EE)) & 0xBD301B0) - 974552872;
  LODWORD(v89) = (v89 & 0x43081278 ^ 0xAFF | v89 & 0x3C118500) - 1;
  LODWORD(v89) = ((v89 & 0x7E099706 ^ 0x3E638500) + (v89 ^ 0x41881A2F) - ((v89 ^ 0x41881A2F) & 0x7E099700)) ^ v90;
  unint64_t v91 = ((2 * ((v90 ^ 0xF9C42CE340CE9AF7) - 0x5F6C9CB288BB47ADLL)) & 0xDFDF9D9FBFBFF7F4)
      + (((v90 ^ 0xF9C42CE340CE9AF7) - 0x5F6C9CB288BB47ADLL) ^ 0xEFEFCECFDFDFFBFALL);
  unint64_t v92 = v91
      + (((v91 + 0x1010313020200406) >> 29) ^ 0x8028130004E80CA0)
      - (((v91 + 0x1010313020200406) >> 28) & 0xFF62FE6BELL);
  unint64_t v93 = v92
      + (((v92 - 0x7017E1CFE4C8089ALL) >> 11) ^ 0xFF77FFEF6BA2F3FBLL)
      + (((v92 - 0x7017E1CFE4C8089ALL) >> 10) & 0x2FFFDED745E7F6);
  unint64_t v94 = v93
      + (((v93 - 0x6F8FE1BF506AFC95) >> 8) ^ 0x60081808F098A0C8)
      - (((v93 - 0x6F8FE1BF506AFC95) >> 7) & 0x1EFCFEE1ECEBE6ELL)
      + 2;
  unint64_t v95 = v94 - ((2 * v94 + 0xD00C6F7DF8C542) & 0xE0ED654B0B0EDB6) + 0x376F71621754D97CLL;
  unint64_t v96 = (v95 ^ 0xB22B2720A5AEC5D2)
      + ((v95 >> 31) ^ 0x77EF6BD61B08B1BFLL)
      + ((v95 >> 30) & 0x2FEBDFFFCLL ^ 0x2C8AC9C80)
      - 0x77EF6BD77F5EFFFELL;
  unint64_t v97 = ((2 * v96) & 0xFDFEFDE3D7FEF3DCLL)
      + (v96 ^ 0x7EFF7EF1EBFF79EELL)
      + (((((2 * v96) & 0xFDFEFDE3D7FEF3DCLL) + (v96 ^ 0x7EFF7EF1EBFF79EELL) - 0x7EFF7EF1EBFF79EELL) >> 13) ^ 0x1024448220808040)
      - (((((2 * v96) & 0xFDFEFDE3D7FEF3DCLL) + (v96 ^ 0x7EFF7EF1EBFF79EELL) - 0x7EFF7EF1EBFF79EELL) >> 12) & 0x776FBBEFEFF7ELL);
  unint64_t v98 = v97
      + (((v97 + 0x70DC3C8BF38005D2) >> 6) ^ 0x6F5FEBBBDF970FE8)
      + (((v97 + 0x70DC3C8BF38005D2) >> 5) & 0x6BFD777BF2E1FD0)
      + 1;
  uint64_t v99 = v98 - ((2 * v98 + 0x2F8A1A027D1EBD2) & 0x49C577F9D78D4DCALL) - 0x59A0F33300506332;
  unint64_t v100 = ((2 * ((v99 ^ 0xA4E2BBFCEBC6A6E5) + 0xDD7C7F76974F1B8)) & 0xEA7F9FDFE86FABDELL)
       + (((v99 ^ 0xA4E2BBFCEBC6A6E5) + 0xDD7C7F76974F1B8) ^ 0xF53FCFEFF437D5EFLL);
  unint64_t v101 = v100
       + (((v100 + 0xAC030100BC82A11) >> 29) ^ 0x24200D21A0408434)
       - (((v100 + 0xAC030100BC82A11) >> 28) & 0xCBF7EF796);
  unint64_t v102 = v101
       + (((v101 - 0x195FDD1194785A23) >> 8) ^ 0x8068080130402032)
       - (((v101 - 0x195FDD1194785A23) >> 7) & 0x12FEFFD9F7FBF9ALL);
  LODWORD(v102) = v102
                + (((v102 + 0x66381AED3B4785ABLL) >> 4) ^ 0xC5250591)
                - (((v102 + 0x66381AED3B4785ABLL) >> 3) & 0x75B5F4DC)
                + 2;
  LODWORD(v102) = v102 - ((2 * v102 - 331022288) & 0xDB2DED6E) + 1673098959;
  LODWORD(v99) = ((2 * v102) ^ 0xDB2DED6E) - ((2 * ((2 * v102) ^ 0xDB2DED6E)) & 0x3155F334) - 1733625445;
  LODWORD(v99) = (v99 & 0x22019220 ^ 0x203F285 | v99 & 0x5D180558) - 1;
  LODWORD(v89) = a1 ^ v77 ^ ((v75 & 0x7F199778 ^ 0x811506AE)
                           + (v75 & 0x4B109320 ^ 0x4AE2D901)
                           - ((v75 & 0x7F199778 ^ 0x811506AE) & 0xCB1493A4)) ^ v89 ^ 0x4E0CE215 ^ ((v99 & 0x7C180718 ^ 0x50184C1F)
                                                                                                 + (v99 & 0x3019060 ^ 0x2018001)
                                                                                                 - 2) ^ v102;
  LOBYTE(v102) = *(unsigned char *)(STACK[0x570]
                          + ((*(unsigned char *)(STACK[0x570]
                                       + ((*(unsigned char *)(STACK[0x570] + ((*(unsigned char *)(STACK[0x570] + 13) + 10) & 0xF)) + 9) & 0xF))
                            + 3) & 0xF))
               + 11;
  LODWORD(v102) = ((v102 & 0xF) - 2 * (v102 & 7) - 57) ^ 0xC7;
  unsigned int v103 = (v102 ^ 0x457FAFD5) + ((2 * v102) & 0x1AA) - 59694301;
  LODWORD(STACK[0x458]) = LODWORD(STACK[0x47C]) ^ 0x2804E132;
  LODWORD(STACK[0x37C]) = LODWORD(STACK[0x4F8]) >> 3;
  LODWORD(v75) = ((2 * *(unsigned __int8 *)STACK[0x570]) & 0xDE)
               + (*(unsigned __int8 *)STACK[0x570] ^ ((a2 ^ 0xC7B75599) + 783379972));
  int v104 = 1364176807 * v75 - ((-1566613682 * v75 - 384140498) & 0xF97AAF72) - 246770352;
  LODWORD(v75) = ((2 * (v104 ^ 0x94BDA38D)) & 0xFFDFFEDA) + (v104 ^ 0x6B525CE0);
  LODWORD(v75) = (((v75 + 1048723) >> 16) ^ 0xEAEDF5BB)
               + v75
               + ((2 * ((v75 + 1048723) >> 16)) & 0x1EB76);
  int v105 = (((v75 + 354552536) >> 8) ^ 0xDDBBFF53)
       + v75
       + (((v75 + 354552536) >> 7) & 0x177FEA6);
  unsigned int v106 = v105 - ((2 * v105 - 1882156850) & 0xBE374556) + 654568210;
  LODWORD(v75) = (((2 * v106) ^ 0xBE374556) + 12906792 - ((2 * ((2 * v106) ^ 0xBE374556)) & 0x189E250)) & 0x7F199778 ^ 0x4F081208;
  LODWORD(v75) = (((2 * v75) | 0x6E0893CC) - v75 - 923027942) ^ 0xF6A849E6;
  LODWORD(v99) = ((2 * (v104 ^ 0xA3A6F512 ^ v106)) & 0xFA5FFFFE) + (v104 ^ 0xA3A6F512 ^ v106 ^ 0x7D2FFFFF);
  LODWORD(v99) = (((v99 - 2100297727) >> 16) ^ 0xAF7DBFBC)
               + v99
               + ((2 * ((v99 - 2100297727) >> 16)) & 0x17F78);
  int v107 = (((v99 - 749584315) >> 8) ^ 0xF7FEE2FF)
       + v99
       + (((v99 - 749584315) >> 7) & 0x1FDC5FE);
  int v108 = v107 - 2 * ((v107 + 198548008) & 0x1562427F ^ v107 & 7) - 2127045472;
  LODWORD(v80) = ((2 * v108) ^ 0x2AC484F0) - 2 * (((2 * v108) ^ 0x2AC484F0) & 0x279167DC ^ (2 * v108) & 8) - 409901099;
  int v109 = (v80 & 0x1D001658 ^ 0x9042380B) + (v80 & 0x62198120 ^ 0x42018121);
  LODWORD(v80) = ((2 * (v104 ^ 0xE9DF15C1 ^ v108)) & 0xBF7D757A) + (v104 ^ 0xE9DF15C1 ^ v108 ^ 0x5FBEBABD);
  LODWORD(v80) = (((v80 - 1606335165) >> 16) ^ 0x42FD377A)
               + v80
               + (((v80 - 1606335165) >> 15) & 0x6EF4);
  LODWORD(v80) = (((v80 + 1564741065) >> 8) ^ 0xEF7FBBFF)
               + v80
               + (((v80 + 1564741065) >> 7) & 0xFF77FE);
  LODWORD(v80) = v80 - ((2 * v80 + 461939604) & 0x12366FBA) + 1994361255;
  int v110 = (v80 ^ 0x91B37DD) - ((2 * (v80 ^ 0x91B37DD) + 17070532) & 0x1BDE9E6C) + 510757912;
  LODWORD(v99) = (((2 * v110) ^ 0x1BDE9E6C)
                + 1738678006
                - 2 * (((2 * v110) ^ 0x1BDE9E6C) & 0x27A22562 ^ (2 * v110) & 2)
                + 1643) & 0x7F199778 ^ 0x2D088710;
  uint64_t v111 = v89 ^ v106 ^ (v75 - ((2 * v75) & 0xA95F705C) + 1420802095) ^ v108 ^ (((v109 - 2) ^ 0x7C37E66F) - 1) ^ v110 ^ 0x7BEE39EF ^ (((((2 * v99) | 0x6F350A8) - v99 + 2089179052) & 0x279095C4 ^ 0x26009505) + ((((2 * v99) | 0x6F350A8) - v99 + 2089179052) ^ 0xC1F74AF0) - (((((2 * v99) | 0x6F350A8) - v99 + 2089179052) ^ 0xC1F74AF0) & 0x279095C4));
  BOOL v112 = v103 > 0x41F0D2F9;
  if (v103 < 0x41F0D2F8) {
    BOOL v112 = 1;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + ((499 * !v112) ^ a2)))(663786948, 305557434, v111);
}

uint64_t sub_10018EBEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v77 = v73 + 944289327;
  LODWORD(STACK[0x3BC]) ^= LODWORD(STACK[0x244]);
  LODWORD(STACK[0x244]) = LODWORD(STACK[0x238]) - LODWORD(STACK[0x240]);
  LODWORD(STACK[0x208]) = a73 - 2 * LODWORD(STACK[0x208]);
  LODWORD(STACK[0x238]) = a69 - a70;
  LODWORD(STACK[0x454]) = a71 - a72;
  int v78 = *(unsigned __int8 *)(STACK[0x570] + v75);
  uint64_t v79 = (v77 - 1942) | 0x500u;
  int v80 = (v79 ^ 0x4F9924B6)
      + 1364176807 * ((v78 ^ 0x35BBCFFF) + 2 * v78)
      - ((580869966 * ((v78 ^ 0x35BBCFFF) + 2 * v78) + 557186894) & 0x3DFC4416);
  unsigned int v81 = ((2 * (v75 + (v76 ^ 0x93116D3D ^ v80))) & 0xB7DF93AE) + ((v75 + (v76 ^ 0x93116D3D ^ v80)) ^ 0xDBEFC9D7);
  unsigned int v82 = (((v81 + 605042217) >> 16) ^ 0x7AB6DEB7) + v81 + ((2 * ((v81 + 605042217) >> 16)) & 0x1BD6E);
  unsigned int v83 = (((v82 - 1453762702) >> 8) ^ 0xEFF720FD) + v82 + (((v82 - 1453762702) >> 7) & 0x1EE41FA);
  unsigned int v84 = v83 - ((2 * v83 + 1925475562) & 0xBEA819E2) + 414597990;
  int v85 = 2 * (v84 ^ 0x5F540CF1);
  unsigned int v86 = (v84 ^ 0x5F540CF1) - ((v85 + 276970722) & 0xE48C224A) + 2055679894;
  unsigned int v87 = ((2 * v86) ^ 0xE48C224A) - 2 * (((2 * v86) ^ 0xE48C224A) & 0x2442FF52 ^ (2 * v86) & 0x10) - 1539113150;
  int v88 = (v87 & v74 ^ 0x4E081540) + (v87 & 0x3E100350 ^ 0x30F24213) - ((v87 & v74 ^ 0x4E081540) & 0x3E100350);
  uint64_t v89 = v88 & 0xFB71AAA0 ^ 0xE30128A1 | v88 & 0x4885558;
  unsigned int v90 = (v84 ^ 0x5F540CF1) - ((v85 + 553941444) & 0xCCC90E28) + 1994834934;
  unsigned int v91 = ((2 * v90) ^ 0xCCC90E28) - 2 * (((2 * v90) ^ 0xCCC90E28) & 0x3AF38B54 ^ (2 * v90) & 0x14) - 84702399;
  int v92 = (v91 & 0x22181160 ^ 0xC05825 | v91 & 0x5D018618) - 1;
  unsigned int v93 = (v92 & 0x4600970C ^ 0x84060208) + (v92 ^ 0x72D0FDE4) - ((v92 ^ 0x72D0FDE4) & 0x4600B708);
  unsigned int v94 = ((2 * (v75 + (v80 ^ 0xF89AA51F ^ v90))) & 0x7FBFE7AA) + ((v75 + (v80 ^ 0xF89AA51F ^ v90)) ^ 0xBFDFF3D5);
  unsigned int v95 = (((v94 + 1075842091) >> 16) ^ 0x7FAF8BA7) + v94 + ((2 * ((v94 + 1075842091) >> 16)) & 0x1174E);
  unsigned int v96 = (((v95 - 1066368892) >> 8) ^ 0xBECD7B7E) + v95 + (((v95 - 1066368892) >> 7) & 0x19AF6FC);
  int v97 = v96 - ((2 * v96 + 331892462) & 0x132D9A6A) - 1820659540;
  int v98 = ((2 * v97) ^ 0x132D9A6A) - ((2 * ((2 * v97) ^ 0x132D9A6A)) & 0x72AA7184) - 111855421;
  unsigned int v99 = ((v98 & 0x4F091560 ^ 0xCDC15005) + (v98 & 0x30108218 ^ 0x30000211) - 2) ^ 0x8ED95154;
  uint64_t v100 = v99 - ((2 * v99) & 0x56132600);
  unsigned int v101 = v96 - ((2 * v96 + 608863184) & 0xAF43D77C) + 1774661030;
  unsigned int v102 = (((2 * v101) ^ 0xAF43D77C) - ((2 * ((2 * v101) ^ 0xAF43D77C)) & 0x7D0B9C5C) + 1048956462) & v74 ^ 0x7E0962D;
  unsigned int v103 = ((2 * (v75 + (v80 ^ 0xC95FC9B5 ^ v101))) & 0xF2EEF77E) + ((v75 + (v80 ^ 0xC95FC9B5 ^ v101)) ^ 0xF9777BBF);
  unsigned int v104 = (((v103 + 109610049) >> 16) ^ 0x67FF7F79) + v103 + (((v103 + 109610049) >> 15) & 0xFEF2);
  unsigned int v105 = (((v104 - 1635187512) >> 8) ^ 0x5FEBFDF3) + v104 + (((v104 - 1635187512) >> 7) & 0x1D7FBE6);
  unsigned int v106 = v105 - ((2 * v105 - 1917039988) & 0xA530511C) - 1720300076;
  unsigned int v107 = (((2 * v106) ^ 0xA530511C) - 2 * (((2 * v106) ^ 0xA530511C) & 0x20005206 ^ (2 * v106) & 2) + 1610633732) & v74 ^ 0x87477D4B;
  int v108 = v105 - ((2 * v105 + 507414382) & 0x1BDE9E6C) + 1561236205;
  unsigned int v109 = (((2 * v108) ^ 0x1BDE9E6C) - ((2 * ((2 * v108) ^ 0x1BDE9E6C)) & 0x51C5F614) + 685964042) & v74 ^ 0xAA00F838;
  return ((uint64_t (*)(void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + ((59 * (v75 + 1 < 0x10)) ^ v77)))(((2 * v107) & 0x3AA3F6B4) - v107, a3 ^ v90 ^ v93, a3 ^ v90 ^ v93 ^ v101 ^ (-118725562 - v102 + ((2 * v102) | 0xE27188C) + 3956) ^ v108 ^ 0xA0B32EDE ^ (v109 - ((2 * v109) & 0xDC10D670) - 294884419), 1041236816, 321755754, v100, v79, v89, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_10018F48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v72 = (a7 + 515129559) & 0xE14BBEEF;
  LODWORD(STACK[0x394]) ^= LODWORD(STACK[0x4A8]) ^ LODWORD(STACK[0x548]) ^ a69;
  LODWORD(STACK[0x4A8]) = LODWORD(STACK[0x204]) - LODWORD(STACK[0x378]);
  unsigned int v73 = (((v70 + 152164364) >> 8) ^ 0xB56EFBAC)
      + v70
      + (((v70 + 152164364) >> 7) & 0xDDF758);
  unsigned int v74 = v73 + (((v73 + 1403182176) >> 5) ^ 0x83129125) - (((v73 + 1403182176) >> 4) & 0x9DADDB4) + 1;
  unsigned int v75 = v74 - 556438370 + (~(2 * v74 + 18912884) | 0xE375B375) + 1250;
  unsigned int v76 = ((2 * ((v75 ^ 0xE452645) - 1879573490)) & 0xDFFAFFFE) + (((v75 ^ 0xE452645) - 1879573490) ^ 0x6FFD7FFF);
  unsigned int v77 = (((v76 - 1878884351) >> 10) ^ 0x7F82F2FE) + v76 + (((v76 - 1878884351) >> 9) & 0x5E5FC);
  unsigned int v78 = ((v77 + 276794627) & 0xEF26FDDA) + v77 + (((v77 + 276794627) >> 1) ^ 0xF7937EED);
  int v79 = v78 - ((2 * v78 + 836246572) & 0x55CA40D6) + 1137782401;
  unsigned int v80 = ((2 * ((v79 ^ 0x2AE5206B) + 1287124013)) & 0xF1DDEBDE) + (((v79 ^ 0x2AE5206B) + 1287124013) ^ 0x78EEF5EF);
  unsigned int v81 = v80 + (((v80 - 2028926447) >> 13) ^ 0x4880088) - ((2 * ((v80 - 2028926447) >> 13)) & 0xFFEEE) + 1;
  unsigned int v82 = (((v81 - 2104948344) >> 5) & 0x57AFB76) + (((v81 - 2104948344) >> 6) ^ 0xB6BD7DBB);
  unsigned int v83 = v82 + v81 + ((2 * v82 - 1836776310) ^ 0x1000C217) - ((2 * (2 * v82 - 1836776310)) & 0xDFFE7BD0);
  int v84 = v83 - ((2 * v83 + 2006291308) & 0x6D39348E) - 228105219;
  int v85 = ((2 * ((v84 ^ 0x369C9A47) - 1282870125)) & 0x41FCFEF2) + (((v84 ^ 0x369C9A47) - 1282870125) ^ 0x20FE7F79);
  unsigned int v86 = (((v85 - 553549689) >> 8) ^ 0xBBADC22D)
      + v85
      + (((v85 - 553549689) >> 7) & 0x15B845A);
  unsigned int v87 = (((v86 + 592690778) >> 2) ^ 0x29FBBFFF) + v86 + (((v86 + 592690778) >> 1) & 0x53F77FFE);
  unsigned int v88 = v87 - ((2 * v87 - 223347530) & 0xB3EE8AE8) - 749780017;
  unsigned int v89 = ((2 * ((v88 ^ 0xD9F74574) + 707258702)) & 0xE7FBFED8) + (((v88 ^ 0xD9F74574) + 707258702) ^ 0xF3FDFF6C);
  unsigned int v90 = (((v89 + 201457812) >> 13) ^ 0x96D63D66) + v89 + (((v89 + 201457812) >> 12) & 0xC7ACC);
  unsigned int v91 = (((v90 + 1965802286) >> 3) ^ 0x5F7FCFBF) + v90 + (((v90 + 1965802286) >> 2) & 0x3EFF9F7E);
  unsigned int v92 = v91 - 424714034 - ((2 * v91 + 727181022) & 0xA206DABE);
  int v93 = v92 ^ v79;
  unsigned int v94 = (v92 ^ 0x5A8C3BD5) + ((v92 >> 11) ^ 0x4B5895) + ((v92 >> 10) & 0x3FEDDA ^ 0xFFE95EF5) - 4196625;
  unsigned int v95 = (((((2 * v94) & 0x66B279B8) + (v94 ^ 0xB3593CDC) + 1285997348) >> 5) ^ 0x6FF5FF3A)
      + ((2 * v94) & 0x66B279B8)
      + (v94 ^ 0xB3593CDC)
      + (((((2 * v94) & 0x66B279B8) + (v94 ^ 0xB3593CDC) + 1285997348) >> 4) & 0xFEBFE74);
  unsigned int v96 = v95 - ((2 * v95 - 1184790572) & 0xE4BCCD52) + 1326394003;
  unsigned int v97 = (v96 ^ 0x4602B251) + ((v96 >> 12) ^ 0x994100D) + ((v96 >> 11) & 0x1F1FB2 ^ 0xFFF7FFED) - 160460837;
  unsigned int v98 = (((((2 * v97) & 0x7B9EF7E4) + (v97 ^ 0xBDCF7BF2) + 1110475790) >> 7) ^ 0x8FFFA473)
      + ((2 * v97) & 0x7B9EF7E4)
      + (v97 ^ 0xBDCF7BF2)
      + (((((2 * v97) & 0x7B9EF7E4) + (v97 ^ 0xBDCF7BF2) + 1110475790) >> 6) & 0x3FF48E6);
  int v99 = v98 - ((2 * v98 + 1684127542) & 0x4FA34B88) + 1510114655;
  unsigned int v100 = ((2 * ((v99 ^ 0xA7D1A5C4) - 2045107421)) & 0xF7FFCFBE) + (((v99 ^ 0xA7D1A5C4) - 2045107421) ^ 0x7BFFE7DF);
  unsigned int v101 = (((2 * (v88 ^ v75 ^ v99)) ^ 0xE0C78DEA)
        - ((2 * ((2 * (v88 ^ v75 ^ v99)) ^ 0xE0C78DEA)) & 0x6B1C2124)
        + 1972244626) & v69 ^ 0x59008618;
  unsigned int v102 = (((2 * v101) & 0x96130260) - v101 - 1269678386) ^ 0x9478AE47;
  unsigned int v103 = v71 ^ v75 ^ v88 ^ v99 ^ ((v102 | 0x9CC7E6FB) - (v102 | 0x63381904) + 1664620804);
  unsigned int v104 = (((v100 - 2080368607) >> 11) ^ 0xFE5DBB5D) + v100 + (((v100 - 2080368607) >> 10) & 0x3B76BA);
  unsigned int v105 = v104 + (((v104 - 2052956988) >> 8) ^ 0xFE049440) - (((v104 - 2052956988) >> 7) & 0x1F6D77E) + 1;
  unsigned int v106 = v105 - ((2 * v105 + 255561990) & 0x7D09165A) + 1176654768;
  unsigned int v107 = (v106 ^ 0x8414057E) + ((v106 >> 8) ^ 0x80C72411) + ((v106 >> 7) & 0x1799FD6 ^ 0xFEF7F7FD) + 2143080429;
  unsigned int v108 = (((((2 * v107) & 0xF9525D78) + (v107 ^ 0x7CA92EBC) - 2091462332) >> 8) ^ 0xDDAFE4B7)
       + ((2 * v107) & 0xF9525D78)
       + (v107 ^ 0x7CA92EBC)
       + (((((2 * v107) & 0xF9525D78) + (v107 ^ 0x7CA92EBC) - 2091462332) >> 7) & 0x15FC96E);
  unsigned int v109 = v108 - ((2 * v108 + 1263393050) & 0xFC6C83E2) + 601697918;
  HIDWORD(v153) = (((((2 * (v93 ^ v106)) ^ 0x8AC58C32)
                   - ((2 * ((2 * (v93 ^ v106)) ^ 0x8AC58C32)) & 0x49C55DC)
                   - 2108806417) & 0x5A109318 ^ 0x8AE6119D)
                 - 1) & 0xDAD2931C;
  unsigned int v110 = (a67 ^ 0x4BF69DB4) + (a67 ^ 0xD429C207 ^ v103) + 1;
  unsigned int v111 = (v103 ^ ((v103 ^ 0x9FDF5FB3) - ((2 * (v103 ^ 0x9FDF5FB3) + 2) & 0x6249BF40) - 1322983519) ^ (v110 - ((2 * v110) & 0xB2CE2912) + 1499927689) ^ 0x88636B65)
       + (a67 ^ 0x4BF69DB4);
  LODWORD(v153) = (2 * v111) & 0x5563677C;
  HIDWORD(v152) = v111 + 716288958;
  unsigned int v112 = ((2 * LODWORD(STACK[0x444])) ^ 0xEFA69374)
       - 2 * (((2 * LODWORD(STACK[0x444])) ^ 0xEFA69374) & 0x1B1544C8 ^ (2 * LODWORD(STACK[0x444])) & 8)
       - 1693104960;
  int v113 = (v112 & v69 ^ 0x32109560) + (v112 & 0x7A100710 ^ 0x48246A95) - ((v112 & v69 ^ 0x32109560) & 0x7A100710);
  int v114 = STACK[0x418];
  LODWORD(v152) = LODWORD(STACK[0x4F0]) ^ LODWORD(STACK[0x418]) ^ LODWORD(STACK[0x4C8]);
  int v115 = (((2 * v152) ^ 0x659031F4) - ((2 * ((2 * v152) ^ 0x659031F4)) & 0x70E2E524) + 946958994) & v69 ^ 0x3A0F0531;
  HIDWORD(a61) = ((2 * v115) | 0x31BB2056) - v115 - 417173547;
  unint64_t v116 = STACK[0xA50];
  unint64_t v117 = (*(void *)(STACK[0xA50] + 8 * (0x8EA31169 % STACK[0x568])) ^ 0xC9C9C9C9C9C9C9C9)
       + 1547586649;
  unint64_t v118 = STACK[0x4C0];
  unint64_t v119 = (*(void *)(STACK[0xA50]
                    + 8
                    * (((v117 ^ 0xFDB7DBF4DFEDEF3FLL) + 0x248240B201210C1 + ((2 * v117) & 0xFB6FB7E9BFDBDE7ELL))
                     % STACK[0x4C0])) ^ 0xC9C9C9C9C9C9C9C9)
       + 2207661067u;
  unint64_t v120 = (*(void *)(STACK[0xA50]
                    + 8
                    * (((v119 ^ 0x3F6B34F3FFFC6BFALL) - 0x3F6B34F3FFFC6BFALL + ((2 * v119) & 0x7ED669E7FFF8D7F4))
                     % STACK[0x4C0])) ^ 0xC9C9C9C9C9C9C9C9)
       + 1300402492;
  unint64_t v121 = ((v120 ^ 0xEDDBFFBF6BDFEEDALL) + 0x1224004094201126 + ((2 * v120) & 0xDBB7FF7ED7BFDDB4)) % STACK[0x4C0];
  STACK[0x548] = STACK[0xA50];
  unsigned int v122 = ((2 * v114) ^ 0xED57F878) - ((2 * ((2 * v114) ^ 0xED57F878)) & 0x9D559798) - 827667507;
  unint64_t v123 = (*(void *)(v116 + 8 * v121) ^ 0xC9C9C9C9C9C9C9C9) + 214590498;
  int v124 = ((v123 ^ 0xEFEDDD7CF1EBF95FLL) + 0x101222830E1406A1 + ((2 * v123) & 0xDFDBBAF9E3D7F2BELL)) % v118;
  int v125 = -212321494 - (v122 & 0x20 | 0x79AC1D95);
  if ((v122 & 0x20 & ~v114) == 0) {
    int v125 = v122 & 0x20 | 0x79AC1D95;
  }
  unsigned int v126 = v114 ^ 0xF6ABFC3C;
  LODWORD(STACK[0x240]) = v126;
  HIDWORD(a58) = (((2 * (v122 & (v69 - 32) ^ 0x16180740)) & 0x6A3208A0) - (v122 & (v69 - 32) ^ 0x16180740) - 905921652) & 0xFFFFFFF8 ^ LODWORD(STACK[0x3A0]) ^ (v126 - 2041322901 + v125 - ((2 * (v126 - 2041322901 + v125)) & 0x82E20ADA) + 1097925997);
  unsigned int v127 = (2 * (LODWORD(STACK[0x4F8]) ^ LODWORD(STACK[0x494]) ^ v84 ^ v96 ^ v109)) ^ 0xF6074A2E;
  int v128 = v127 - ((2 * v127) & 0x7A9C57A8) - 45208620;
  int v129 = LODWORD(STACK[0x4D8]) ^ 0x1CF8CF87;
  unsigned int v130 = ((v124 - ((2 * v124) & 0xADA8B3B2) + 1456757209) ^ 0x2B8BC276)
       - 259262224
       + ((2 * (v124 - ((2 * v124) & 0xADA8B3B2) + 1456757209)) & 0xFABF375E ^ 0xA8A83312);
  LODWORD(STACK[0x4D8]) = LODWORD(STACK[0x470]) ^ 0x25BC713E ^ v72;
  LODWORD(STACK[0x4C0]) = v113 & 0xFFFFFFF8;
  uint64_t v131 = v72 ^ 0x4E4;
  unint64_t v132 = 0xC76BB339E9ED63B1 * (*(void *)STACK[0x548] ^ 0xC9C9C9C9C9C9C9C9)
       - ((0x8ED76673D3DAC762 * (*(void *)STACK[0x548] ^ 0xC9C9C9C9C9C9C9C9)) & ((12 * v131) ^ 0xAEB96725F21256B4))
       + 0x575CB392F9092A40;
  unint64_t v133 = ((2 * (v132 ^ 0x9221AE62F5CD9AFALL)) & 0xDE9BFFFF37D67AEELL) + (v132 ^ 0xFD6C519D6E26A78DLL);
  unint64_t v134 = v133
       + (((v133 - 0x6F4DFFFF9BEB3D77) >> 32) ^ 0x901980AA122800A0)
       - (((v133 - 0x6F4DFFFF9BEB3D77) >> 31) & 0x1DBAFFEBELL);
  unint64_t v135 = v134
       + (((v134 + 0x987F5651ECC1E9) >> 16) ^ 0xDFF76BBB7D7FCBE7)
       + (((v134 + 0x987F5651ECC1E9) >> 15) & 0xD776FAFF97CELL);
  unint64_t v136 = v135
       + (((v135 + 0x20A1139AD46CF602) >> 8) ^ 0x3BBF7FFE3E9D7DBFLL)
       + (((v135 + 0x20A1139AD46CF602) >> 7) & 0x17EFFFC7D3AFB7ELL)
       + 1;
  uint64_t v137 = v136 - ((2 * v136 + 0x1C327392B9EF084) & 0x478CFA42D4A7E62) - 0x18E20491538B488DLL;
  uint64_t v138 = 2 * (v137 ^ 0x23C67D216A53F31);
  unsigned int v139 = (v137 ^ 0x16A53F31) - ((v138 - 1601446758) & 0xBC22A92A) - 1370012958;
  uint64_t v140 = (v137 ^ 0x23C67D216A53F31) - ((v138 + 0x45D043FB4117B934) & 0x7FFF4E1498E50982) - 0x1D1836F813019EA5;
  unint64_t v141 = ((2 * (v132 ^ 0x68A31498B57BAE81 ^ v140)) & 0x3EDDD55FAF2EF6F8)
       + (v132 ^ 0x68A31498B57BAE81 ^ v140 ^ 0x9F6EEAAFD7977B7CLL);
  unint64_t v142 = v141
       + (((v141 + 0x6091155028688484) >> 32) ^ 0xA010048AD1B9F721)
       - (((v141 + 0x6091155028688484) >> 31) & 0x5C8C11BC);
  unint64_t v143 = v142
       + (((v142 - 0x3F7EEF3AA951729DLL) >> 16) ^ 0xABFE7FAFBBB73FDDLL)
       + (((v142 - 0x3F7EEF3AA951729DLL) >> 15) & 0xFF5F776E7FBALL);
  unint64_t v144 = v143
       + (((v143 + 0x148291159AF74D86) >> 8) ^ 0x7BCBFF9DFEEE5EFALL)
       + (((v143 + 0x148291159AF74D86) >> 7) & 0x197FF3BFDDCBDF4)
       + 1;
  unint64_t v145 = (v144 - ((2 * v144 + 0x316D22EF3811DD16) & 0x22B05403AC20C342) + 0x2A0EBB797219502CLL) ^ 0x91582A01D61061A1;
  uint64_t v146 = v145 - ((2 * v145 + 0x5D043FB4117B934) & 0x97EA2F431C60566) - 0x58588C88469120B3;
  unint64_t v147 = ((2 * (v132 ^ 0x53E3E2E8E1EA28F3 ^ v146)) & 0xEDBD7F9FEF7BFE9CLL)
       + (v132 ^ 0x53E3E2E8E1EA28F3 ^ v146 ^ 0xF6DEBFCFF7BDFF4ELL);
  unint64_t v148 = v147
       + (((v147 + 0x9214030084200B2) >> 32) ^ 0x5049ACA0AFC2D222)
       - (((v147 + 0x9214030084200B2) >> 31) & 0xA07A5BBA);
  unint64_t v149 = v148
       + (((v148 - 0x47286C70A780D170) >> 16) ^ 0xCAF7F8FA7DFE7DEFLL)
       + (((v148 - 0x47286C70A780D170) >> 15) & 0x1F1F4FBFCFBDELL);
  BOOL v150 = v130 > 0x6DEB94A0;
  if (v130 < 0x6DEB949F) {
    BOOL v150 = 1;
  }
  LODWORD(a59) = v128 & 0x4C180630 ^ 0x4080031;
  LODWORD(a60) = v128 & 0x33019148 ^ 0x3242E845;
  return ((uint64_t (*)(BOOL, void, uint64_t, unint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + (int)((463 * v150) ^ (a7 + 515129559) & 0xE14BBEEF)))(v130 < 0x6DEB949F, (-22596057- ((v146 >> 1) & 0x7FFBE43E ^ 0x88FB803C | 0xFEA73627)+ ((v146 >> 1) & 0x7FFBE43E ^ 0x88FB803C | 0x158C9D8)) ^ v146, a3, v149+ (((v149 - 0x1220656B257F4F5FLL) >> 8) ^ 0xFFBFFEFF662F7E7ELL)+ 1+ (((v149 - 0x1220656B257F4F5FLL) >> 7) & 0x17FFDFECC5EFCFCLL), v129 ^ v139, v131, 1089807006, 712649025, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           v152,
           v153);
}

void sub_100190B1C()
{
}

uint64_t sub_100190B28(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  unsigned int v81 = (v80 + 227839307) & 0xF26B76D7;
  LODWORD(STACK[0x204]) = LODWORD(STACK[0x404]) ^ 0x91BF2BE9;
  LODWORD(STACK[0x378]) = a79 - LODWORD(STACK[0x200]);
  LODWORD(STACK[0x3A0]) = a67 - a68;
  int v82 = a59 ^ LODWORD(STACK[0x4F0]) ^ a66 ^ a65 ^ LODWORD(STACK[0x4F8]) ^ LODWORD(STACK[0x37C]) ^ a78 ^ a72 ^ v79 ^ a77 ^ a75 ^ a71 ^ (a69 | a70 & 0x25090460);
  LODWORD(STACK[0x37C]) = LODWORD(STACK[0x4F8]) ^ LODWORD(STACK[0x390]) ^ a3 ^ a76 ^ a74 ^ a73 ^ (a62 + a60 - 2);
  LODWORD(STACK[0x4D0]) = v82;
  LODWORD(STACK[0x548]) = v82 ^ 0xF436205F ^ v81;
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + (int)((38 * (STACK[0x568] <= a7 - 1089807004)) ^ v81)))(2673588286);
}

void sub_100191514()
{
}

#error "100192A04: call analysis failed (funcsize=810)"

void sub_100192A08()
{
}

uint64_t sub_100192A14@<X0>(int a1@<W8>)
{
  STACK[0x788] = ((14 * (a1 ^ 0x268u)) ^ 0xFFFFFFFFFFFFFD98) + v1;
  return sub_100192A40();
}

uint64_t sub_100192A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x550]) = STACK[0x684];
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (((STACK[0x6A8] == 0)
                                * ((((v4 - 1044571346) & 0x3E42E76B) - 1158) ^ 0x233 ^ ((((v4 - 1044571346) & 0x3E42E76B)
                                                                                       - 770) | 0x54))) ^ (v4 - 1044571346) & 0x3E42E76B)))();
}

uint64_t sub_100192A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * (((STACK[0x730] == 0) * (((v4 ^ 0x7D4) - 736) ^ (v4 + 959))) ^ v4)))();
}

uint64_t sub_100192AD0()
{
  STACK[0x4E8] = v2;
  STACK[0x788] = STACK[0x788] + ((v1 + 33251629) & 0xFE049E7F) - 1595;
  unint64_t v3 = STACK[0x7C0];
  STACK[0x4C0] = STACK[0x7C0];
  return (*(uint64_t (**)(void))(v0 + 8 * (((4 * (v3 != 0)) | (16 * (v3 != 0))) ^ v1)))();
}

uint64_t sub_100192B38()
{
  uint64_t v3 = (v2 - 1148) | 0x1ACu;
  STACK[0x4C8] = v0;
  uint64_t v4 = -16 * (~(&STACK[0xA90] + v0) & 2) - 0x71704E76C778D250;
  STACK[0x570] = (v4 ^ (v3 + 0x1B7D866F4DE07E70))
               + ((2 * v4) & 0x9046300600E5BA0 ^ 0x9046300600E5B20)
               + 0x7AFFFE5FFEDBFDC0;
  uint64_t v5 = (*(uint64_t (**)(void))(v1 + 8 * (int)(v3 ^ 0xBEF)))();
  uint64_t v6 = v5 ^ ((v3 - 894) | 0x40Au) ^ 0x6D5FFF76E5FF7B2DLL;
  unint64_t v7 = (2 * v5) & 0xDABFFEEDCBFEFF4ELL;
  uint64_t v8 = ((uint64_t (*)(void))*(&off_10026D1A0 + (int)v3 + 1168))();
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (int)((2032
                                    * (v7
                                     + ((v3 + 342) ^ 0x555)
                                     + v6
                                     + (v8 ^ 0xA10DB09010208008)
                                     - ((2 * v8) & 0xBDE49EDFDFBEFFEELL) != 0xE6DB006F61FFFB0)) ^ v3)))();
}

uint64_t sub_100192CA8()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 903)))(v2);
  unint64_t v4 = v3 ^ 0xFF16FFBAEFFA7749;
  unint64_t v5 = (v3 << (3 * (v1 ^ 0x55u) + 100)) & 0xFE2DFF75DFF4EE92;
  uint64_t v6 = ((uint64_t (*)(void))*(&off_10026D1A0 + v1 + 996))();
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((25
                               * (v4 + (v6 ^ 0x240000821490101) - ((2 * v6) & 0xFB7FFFEFBD6DFDFCLL) + v5 == 0x156FFC31143784ALL)) ^ v1)))();
}

uint64_t sub_100192D7C()
{
  int v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * ((v1 ^ 0x3F6) + 174)))(v2);
  unsigned int v4 = v3 - ((2 * v3) & 0xF33F7FB2) + (v1 ^ 0x3F6) - 257 + (v1 ^ 0x759) + 2040509835;
  unsigned int v5 = ((2 * v4) & 0xFF3FF36A ^ 0xF33F7322) + (v4 ^ 0x8600466C);
  LODWORD(STACK[0x7AC]) = v5 + 1994852336;
  BOOL v6 = ((uint64_t (*)(void, uint64_t))*(&off_10026D1A0 + (v1 ^ 0xCAF)))(v5 + 6293067, 2381541563) != 0;
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + ((198 * v6) ^ v1 ^ 0x3F6)))(v2);
}

uint64_t sub_100192E68(unint64_t a1)
{
  unint64_t v7 = (void *)(STACK[0x570] + v3 - 0x10F236467443AD9ELL);
  *unint64_t v7 = 0;
  v7[1] = (v2 & 0xFFFFFFFEFFFFFFFFLL | ((unint64_t)(v2 < v6) << 32))
        + ((17 * (v5 ^ 0x3D1)) ^ 0x84u)
        - 1988559435;
  uint64_t v8 = *(void (**)(void))(v1 + 8 * (v5 + 1226));
  STACK[0x4B8] = a1;
  v8();
  uint64_t v9 = ((uint64_t (*)(uint64_t, uint64_t))*(&off_10026D1A0 + v5 + 1106))(v4, 3796205151);
  STACK[0x4B0] = v9;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((43 * (v9 != 0)) ^ v5)))();
}

uint64_t sub_100192F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((110 * ((v5 << 32) + v3 + ((2 * v4) ^ 0x44F3F600) == 3145398513)) ^ v4)))();
}

uint64_t sub_100192FA8@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  LODWORD(STACK[0x990]) = a2;
  STACK[0x4A8] = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((((unsigned __int16)(v3 - ((2 * v3 + 3254) & 0x982) + (v2 ^ 0x33E)) ^ 0x4C0u) > 1)
                                * ((v2 ^ 0x78A) - 617)) ^ v2 ^ 0x24D)))();
}

uint64_t sub_1001933BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = *(uint64_t (**)(void))(a3
                           + 8
                           * ((228
                             * (((unsigned __int16)v4 ^ 0x4C1 ^ (((v3 - 47) | 0xC) + 2145055898))
                              + ((2 * (v4 ^ 0x4C1)) & 0x1EDCC)
                              - 1259339782 != 885716704)) ^ v3));
  STACK[0x4E0] = v5;
  return v6();
}

uint64_t sub_10019342C@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  STACK[0x4A0] = v2;
  uint64_t v4 = a2 ^ 0x639u;
  unint64_t v5 = ((unint64_t)&STACK[0x6D0] ^ 0x53EDAEFFFFFFBBBDLL)
     - 0x53EDAEFFFFFFBBBDLL
     + ((2 * (void)&STACK[0x6D0]) & 0xA7DB5DFFFFFF7778);
  STACK[0x4D8] = ((2 * (v5 % 0x25)) & 0x74)
               + ((v4 + 0x37BBFFDDBFEFD785) ^ (v5 % 0x25))
               - 0x37BBFFDDBFEFDBEALL;
  unint64_t v6 = STACK[0x570] + v3 - 0x10F236467443AD9ELL;
  unint64_t v7 = *(uint64_t (**)(uint64_t))(a1 + 8 * (int)v4);
  STACK[0x548] = STACK[0x988];
  STACK[0x570] = v6;
  STACK[0x4D0] = v6 + 16;
  return v7(940786443);
}

uint64_t sub_10019357C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  STACK[0xA70] = 0x3275FC70AB7D4CAFLL;
  LODWORD(STACK[0x6D0]) = dword_1002846D8 - 340121379;
  uint64_t v6 = *(unsigned int *)aHr;
  unint64_t v7 = 1856021207 * ((v5 - 192) ^ 0xED14979B4E69D6FELL);
  *(_DWORD *)(v5 - 160) = v7 + v3 + 1123495617;
  *(_DWORD *)(v5 - 156) = v7;
  int v8 = v7 ^ (v3 - 1853260508);
  *(void *)(v5 - 176) = v4 - v7;
  *(void *)(v5 - 168) = v6 ^ v7;
  *(_DWORD *)(v5 - 180) = v3 - 1853260508 + v7;
  *(_DWORD *)(v5 - 188) = v8 ^ 0x18;
  *(_DWORD *)(v5 - 184) = v8 ^ 0x77;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(a3 + 8 * (v3 ^ 0xFDB)))(v5 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v5 - 192)))(v9);
}

uint64_t sub_10019364C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = STACK[0x578];
  unsigned int v5 = (STACK[0x578] - 284876014) & 0x10FADD57;
  STACK[0x548] = (*(uint64_t (**)(unint64_t, uint64_t))(a3 + 8 * (int)(STACK[0x578] + 125)))(STACK[0x4D8], 3312658705);
  int v7 = (*(uint64_t (**)(void))(a3 + 8 * (int)(v4 ^ 0xFCB)))();
  unsigned int v8 = v7 - 1965487874 - ((v5 + 363989482) & (2 * v7));
  LODWORD(xmmword_100283D10) = v8;
  *(_DWORD *)(v3 + 4) = ((1812433253 * (v8 ^ 0x8AD908FC ^ (v8 >> 30))) ^ 0x5F499525)
                      + (((v8 ^ 0x8AD908FC ^ (v8 >> 30)) * (((v5 + 677692464) | 0x811130A5) + 781784547)) & 0xBE932A4A)
                      + 730821594
                      - ((2
                        * (((1812433253 * (v8 ^ 0x8AD908FC ^ (v8 >> 30))) ^ 0x5F499525)
                         + (((v8 ^ 0x8AD908FC ^ (v8 >> 30)) * (((v5 + 677692464) | 0x811130A5) + 781784547)) & 0xBE932A4A))
                        - 512961096) & 0x15B211FC);
  return ((uint64_t (*)(void))*(&off_10026D1A0 + v5))();
}

void sub_1001937B0()
{
}

uint64_t sub_1001937CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int8x16_t v5 = (int8x16_t)vld1q_dup_f32((const float *)v3);
  int v6 = STACK[0x578] ^ 0xC8;
  v7.i64[0] = 0x8000000080000000;
  v7.i64[1] = 0x8000000080000000;
  v4.i64[0] = *(void *)(v3 + 4);
  v4.i32[2] = *(_DWORD *)(v3 + 12);
  int8x16_t v8 = vextq_s8(v5, v4, 0xCuLL);
  int8x16_t v9 = v4;
  v9.i32[3] = *(_DWORD *)(v3 + 16);
  int8x16_t v10 = (int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v8, v7), vdupq_n_s32(0xF10E8CD4));
  int32x4_t v11 = (int32x4_t)veorq_s8(vandq_s8(v9, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x775A672Eu));
  int32x4_t v12 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v11, v11), (int8x16_t)vdupq_n_s32(0xCD193A50)), v11), vdupq_n_s32(0x197362D7u)), vandq_s8(v10, v7)), (int8x16_t)vdupq_n_s32(0x64F00D07u));
  v13.i32[0] = *((_DWORD *)&STACK[0xA70] + (*(_DWORD *)(v3 + 4) & 1));
  v13.i32[1] = *((_DWORD *)&STACK[0xA70] + (*(_DWORD *)(v3 + 8) & 1));
  v13.i32[2] = *((_DWORD *)&STACK[0xA70] + (*(_DWORD *)(v3 + 12) & 1));
  v13.i32[3] = *((_DWORD *)&STACK[0xA70] + (v9.i8[12] & 1));
  *(int8x16_t *)uint64_t v3 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v3 + 4 * (((v6 - 1658) | 0x11u) ^ 0x17ALL)), v13), (int8x16_t)vdupq_n_s32(0x8F6FA741)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v12, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v12, v12), (int8x16_t)vdupq_n_s32(0x904BAFB8))), vdupq_n_s32(0x4825D7DCu)), 1uLL));
  return (*(uint64_t (**)(void))(a3 + 8 * v6))();
}

void sub_1001942B8()
{
}

uint64_t sub_1001942C0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W8>)
{
  int8x16_t v7 = (_DWORD *)(v5 + 4 * (v3 + v6));
  unsigned int v8 = ((((2 * (*v7 & 0x7FFFFFFE ^ 0x775A672E)) & 0xCD193A50) - (*v7 & 0x7FFFFFFE ^ 0x775A672E) + 426992343) | ((v4 & 0x80000000) - 250704684) & 0x80000000) ^ 0x64F00D07;
  *(_DWORD *)(v5 + 4 * ((a3 - 1033328924) + v3) - 0x428DCD824) = v7[396] ^ *((_DWORD *)&STACK[0xA70]
                                                                                           + (*v7 & 1)) ^ ((v8 - ((2 * v8) & 0x904BAFB8) + 1210439644) >> 1) ^ 0x8F6FA741;
  return (*(uint64_t (**)(void))(a1 + 8 * ((448 * (v3 + 1 != a2 + 3)) ^ a3)))();
}

uint64_t sub_1001943A8()
{
  int v4 = (const float *)&unk_10028409C;
  int v5 = v1 + 1033329593;
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32(v4);
  v7.i64[0] = 0x8000000080000000;
  v7.i64[1] = 0x8000000080000000;
  v8.i64[0] = 0x100000001;
  v8.i64[1] = 0x100000001;
  uint64_t v9 = (v5 + 118) | 0x120u;
  v3.i32[0] = dword_1002840A0;
  v3.i32[1] = *(_DWORD *)(v2 + 4 * (v9 ^ 0x5CF));
  v3.i32[2] = dword_1002840A8;
  int8x16_t v10 = vextq_s8(v6, v3, 0xCuLL);
  int8x16_t v11 = v3;
  v11.i32[3] = dword_1002840AC;
  int32x4_t v12 = (int32x4_t)vorrq_s8(veorq_s8((int8x16_t)vaddq_s32(vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v11, (int8x16_t)vdupq_n_s32(0x7E6E02C0u)), (int8x16_t)vdupq_n_s32(0xBA280001)), (int32x4_t)veorq_s8(vandq_s8(v11, (int8x16_t)vdupq_n_s32(0x191FD3Eu)), (int8x16_t)vdupq_n_s32(0x101111Fu))), v8), (int8x16_t)vdupq_n_s32(0xB1F019E0)), veorq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v10, v7), (int8x16_t)vdupq_n_s32(0xDFFA7B8F)), vdupq_n_s32(0x7143EC23u)), (int8x16_t)vdupq_n_s32(0xD13E67B2)));
  v13.i32[0] = *(_DWORD *)(v0 + 4 * (dword_1002840A0 & 1));
  v13.i32[1] = *(_DWORD *)(v0 + 4 * (*(_DWORD *)(v2 + 4 * (v9 ^ 0x5CF)) & 1));
  v13.i32[2] = *(_DWORD *)(v0 + 4 * (dword_1002840A8 & 1));
  v13.i32[3] = *(_DWORD *)(v0 + 4 * (dword_1002840AC & 1));
  unk_10028409C = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_100283D10, v13), (int8x16_t)vdupq_n_s32(0xFF36F178)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v12, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v12, v12), (int8x16_t)vdupq_n_s32(0x512EF75Eu))), vdupq_n_s32(0xA8977BAF)), 1uLL));
  return ((uint64_t (*)(void))*(&off_10026D1A0 + v5))();
}

void sub_100194544()
{
}

uint64_t sub_100194550@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v3 = ((((a2 - 394) | 0x408) ^ 0x322B130C ^ *v2 & 0x7FFFFFFE)
      + (*v2 & 0x50E35F0A ^ 0x40C04B0A)
      - ((((a2 - 394) | 0x408) ^ 0x322B130C ^ *v2 & 0x7FFFFFFE) & 0x50E35F0A)) ^ 0xC063430A;
  int v4 = ((2 * v3) | 0x9B08582) - v3 + 2066201919;
  unsigned int v5 = (v4 | (((a2 - 463603069) & 0x1BA207FA) + 768459200 + (v2[623] & 0x80000000 ^ 0xB4CFD7E8)) & 0x80000000) ^ 0x2CAA429B;
  v2[623] = v2[396] ^ *((_DWORD *)&STACK[0xA70] + (*v2 & 1)) ^ ((v5 - 2 * (v5 & 0x33F44EFC ^ v4 & 4) - 1275834632) >> 1) ^ 0xF2876BD3;
  return (*(uint64_t (**)(void))(a1 + 8 * ((101 * (LODWORD(STACK[0x6D0]) > 0x26F)) ^ a2)))();
}

uint64_t sub_100194684(uint64_t a1)
{
  LODWORD(STACK[0x6D0]) = 0;
  unint64_t v4 = 1606104089 * ((((v3 - 192) | 0x9C57C659393F90E6) - ((v3 - 192) & 0x9C57C659393F90E6)) ^ 0x5EE93D6D4C28D2D8);
  int v5 = LODWORD(STACK[0x6D0])++;
  *(_DWORD *)(v2 + 1752) = v5 + 340121380;
  uint64_t v6 = (*(_DWORD *)aHr - 1196301951);
  *(_DWORD *)(v3 - 160) = -1231242342 - v4 + v1;
  *(void *)(v3 - 168) = v6 ^ v4;
  *(void *)(v3 - 152) = 419711402 - v4;
  *(_DWORD *)(v3 - 184) = (v1 - 1384653047) ^ v4;
  *(_DWORD *)(v3 - 180) = (v1 - 1384653062) ^ v4;
  *(_DWORD *)(v3 - 192) = v4 + 1;
  *(_DWORD *)(v3 - 176) = v1 - 1384653005 + v4;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (v1 + 170)))(v3 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v3 - 188)))(v7);
}

uint64_t sub_10019479C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v10 = (STACK[0x578] - 1581) | 0x80;
  if (v4 >= v5) {
    int v11 = *(_DWORD *)aHr + 1;
  }
  else {
    int v11 = v7;
  }
  *(_DWORD *)aHr = v11;
  unsigned int v12 = ((((((v3 ^ (v3 >> 11)) << 7) ^ 0x6429EE7B ^ v10)
         - ((2 * (((v3 ^ (v3 >> 11)) << 7) ^ 0x6429EE7B ^ v10)) & 0x266A7E00)
         + 322256659) & 0x9D2C5680 ^ 0xC4FC1B7)
       - 1) ^ v3 ^ (v3 >> 11);
  unsigned int v13 = (((v12 << 15) ^ 0xC2348000) - ((2 * ((v12 << 15) ^ 0xC2348000)) & 0x84E70000) + 1114866289) & 0xEFC60000 ^ 0x25C40000;
  unsigned int v14 = (((((2 * v13) | 0x781D69B0) - v13 - 1007596760) & 0x1FB40E74 ^ 0x1140A25)
       + ((((2 * v13) | 0x781D69B0) - v13 - 1007596760) & 0xE04BF18A)
       - 1) ^ v12;
  unsigned int v15 = v14 ^ (v14 >> 18) ^ 0xF52C4AD1;
  *(unsigned char *)(v9 + (v8 - 885716705)) = ((v15 ^ 0xB)
                                                   - (((v10 + 116) ^ 0xC5) & (2 * (v15 ^ 0xB)))
                                                   + ((v10 - 6) & 0x7F ^ 0x9E)
                                                   - 22) ^ 0xCD;
  return (*(uint64_t (**)(uint64_t))(a3
                                            + 8
                                            * ((951
                                              * (v8
                                               - (((v15 ^ 0xB)
                                                                  - (((v10 + 116) ^ 0xC5) & (2 * (v15 ^ 0xB)))
                                                                  + ((v10 - 6) & 0x7F ^ 0x9E)
                                                                  - 22) != 0xCD) != v6)) ^ v10)))(940786443);
}

uint64_t sub_1001948D8()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0xA8C)))(v2);
  uint64_t v4 = v3 ^ 0x491FBF3EF7FF7FE5;
  unint64_t v5 = (v3 << (((v1 - 124) | 0x5Au) - 122)) & 0x923F7E7DEFFEFFCALL;
  uint64_t v6 = ((uint64_t (*)(void))*(&off_10026D1A0 + v1 + 1505))();
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + ((1715
                                             * (v4
                                              + (v6 ^ 0xE20CD2444031884)
                                              - ((2 * v6) & 0xE3BE65B777F9CEF6)
                                              + v5
                                              + 1 == (((v1 - 157) | 0x43Au) ^ 0x57408C633C029E50))) ^ v1)))(v2);
}

uint64_t sub_1001949D0(unint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8 * (v2 ^ 0xE41));
  STACK[0x4B8] = a1;
  int v4 = v3();
  return ((uint64_t (*)(unint64_t))*(&off_10026D1A0
                                                    + ((87
                                                      * ((((v2 ^ 0x39) - 108) ^ ((((v4 << (41 * (v2 ^ 0x39) - 122)) & 0xBE) + (v4 ^ 0x5F)) == 95)) & 1)) ^ v2)))(STACK[0x4B8]);
}

uint64_t sub_100194A5C()
{
  LODWORD(STACK[0x7AC]) = v2 + 8;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0xAB2)))(8, 3533575369);
  return ((uint64_t (*)(unint64_t))*(&off_10026D1A0 + (((v3 == 0) * ((v1 + 859) ^ (v1 + 865))) ^ v1)))(STACK[0x4B8]);
}

uint64_t sub_100194AC8()
{
  *int v2 = (v1 + LOBYTE(STACK[0x5BF]) - (((v1 - 125) & 0xEC ^ 0xF8) & (2 * LOBYTE(STACK[0x5BF]))) + 80) ^ 0x48;
  v2[1] = (HIWORD(STACK[0x5B8]) - ((STACK[0x5B8] >> 47) & 0x24) - 110) ^ 0x92;
  v2[2] = (((unsigned __int16)WORD2(STACK[0x5B8]) >> 8) - ((STACK[0x5B8] >> 39) & 0x52) - 87) ^ 0xA9;
  v2[3] = (HIDWORD(STACK[0x5B8]) - ((STACK[0x5B8] >> 31) & 0x7E) + 63) ^ 0x3F;
  v2[4] = (HIBYTE(LODWORD(STACK[0x5B8])) - ((LODWORD(STACK[0x5B8]) >> 23) & 0x20) + 16) ^ 0x10;
  v2[5] = (HIWORD(LODWORD(STACK[0x5B8])) - ((LODWORD(STACK[0x5B8]) >> 15) & 0x56) - 85) ^ 0xAB;
  v2[6] = (BYTE1(LODWORD(STACK[0x5B8])) - ((LODWORD(STACK[0x5B8]) >> 7) & 0xA0) - 48) ^ 0xD0;
  v2[7] = (LOBYTE(STACK[0x5B8]) - ((2 * LOBYTE(STACK[0x5B8])) & 0xF8) + 124) ^ 0x7C;
  uint64_t v3 = v0;
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0xDDD)))(8, 3715716460);
  STACK[0x4B0] = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((960 * (v4 != 0)) ^ v1)))();
}

uint64_t sub_100194C4C()
{
  unsigned int v2 = 1755343967
     * ((*(_DWORD *)(qword_100284C30 + (dword_100284A28 & 0xFFFFFFFFB2A98008)) ^ STACK[0x4B0]) & 0x7FFFFFFF);
  unint64_t v3 = 1755343967 * (v2 ^ HIWORD(v2));
  *(unsigned char *)STACK[0x4B0] = byte_100236E00[v3 >> 24] ^ *(unsigned char *)(v1
                                                               + ((v0 - 852) ^ 0xF5BBB0935C02EE7BLL)
                                                               + 0xA444F6CA3FD1191) ^ byte_1002231E0[(v3 >> 24) + 3] ^ byte_100245950[(v3 >> 24) + 2] ^ v3 ^ (13 * BYTE3(v3));
  return ((uint64_t (*)(unsigned char *, unsigned char *, uint64_t, unint64_t, void))*(&off_10026D1A0 + v0))(byte_1002231E0, byte_100245950, 13, 0xD6A0FE0E107AF0DFLL, 0);
}

void sub_100194D84()
{
}

uint64_t sub_100194D94()
{
  unsigned int v8 = 1755343967
     * ((*(_DWORD *)(qword_100284C30 + (dword_100284A28 & 0xFFFFFFFFB2A98008)) ^ (v4
                                                                                  + LODWORD(STACK[0x4B0])
                                                                                  + 1350926784)) & 0x7FFFFFFF);
  unint64_t v9 = 1755343967 * (v8 ^ HIWORD(v8));
  char v10 = byte_100236E00[v9 >> 24] ^ *(unsigned char *)(((v6 + 286450940) & 0xEEED1A7F) + v3 + v7 - 0x7709C0F478AEBB6DLL) ^ byte_1002231E0[(v9 >> 24) + 3] ^ byte_100245950[(v9 >> 24) + 2] ^ v9 ^ (13 * BYTE3(v9));
  if (v1 < v0 != v5 - 0x3B2D24740838ADB5 < v0) {
    BOOL v11 = v1 < v0;
  }
  else {
    BOOL v11 = v5 - 0x3B2D24740838ADB5 < v1;
  }
  *(unsigned char *)(v4 + STACK[0x4B0] - 0x3EDCC9D4AF7A7E40) = v10;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((!v11 * v2) ^ v6)))();
}

uint64_t sub_100194ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W8>)
{
  unsigned int v14 = ((*(_DWORD *)(qword_100284C30 + (dword_100284A28 & v3)) ^ (v10 + a1 + 1228906477)) & 0x7FFFFFFF) * a3;
  unint64_t v15 = (v14 ^ HIWORD(v14)) * a3;
  unint64_t v16 = v15 >> (((v11 - 64) | 2) + 6);
  *(unsigned char *)(v10 + a1 - 0x6FB30C29B6C06013) = *(unsigned char *)(v6 + v16) ^ *(unsigned char *)(v9 + v13 - 0x5916F71378A59CC3) ^ *(unsigned char *)(v16 + v7 + 3) ^ *(unsigned char *)(v16 + v5 + 2) ^ v15 ^ (13 * v16);
  if (v8 < v4 != a2 - 0x41286C1B8FF94209 < v4) {
    BOOL v17 = v8 < v4;
  }
  else {
    BOOL v17 = a2 - 0x41286C1B8FF94209 < v8;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * (v17 | (2 * v17) | v11)))();
}

uint64_t sub_100194FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(STACK[0x5CC]) = a5;
  STACK[0x4A8] = v5;
  return sub_1001933BC(a1, a2, (uint64_t)&off_10026D1A0);
}

uint64_t sub_100194FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (const float *)&unk_10028409C;
  int8x16_t v8 = (int8x16_t)vld1q_dup_f32(v7);
  v9.i64[0] = 0x8000000080000000;
  v9.i64[1] = 0x8000000080000000;
  int8x16_t v10 = (int8x16_t)vdupq_n_s32(0x3D953674u);
  v6.i64[0] = *(void *)&dword_1002840A0;
  v6.i32[2] = dword_1002840A8;
  int8x16_t v11 = vextq_s8(v8, v6, 0xCuLL);
  int8x16_t v12 = v6;
  v12.i32[3] = dword_1002840AC;
  int8x16_t v13 = vandq_s8(v11, v9);
  int32x4_t v14 = (int32x4_t)vorrq_s8(v13, (int8x16_t)vdupq_n_s32(0x2280804u));
  int8x16_t v15 = (int8x16_t)vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vdupq_n_s32(0xD0018018), v13), v14), (int8x16_t)vdupq_n_s32(0x4400102u)), (int32x4_t)vandq_s8((int8x16_t)v14, (int8x16_t)vdupq_n_s32(0x80000804)));
  int32x4_t v16 = (int32x4_t)veorq_s8(vandq_s8(v12, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x28D90AFAu));
  int32x4_t v17 = (int32x4_t)vorrq_s8(veorq_s8(v15, (int8x16_t)vdupq_n_s32(0x5669811Au)), veorq_s8((int8x16_t)vsubq_s32(vaddq_s32(v16, (int32x4_t)veorq_s8(vandq_s8(v12, v10), (int8x16_t)vdupq_n_s32(0x15043404u))), (int32x4_t)vandq_s8((int8x16_t)v16, v10)), (int8x16_t)vdupq_n_s32(0x1F953470u)));
  v18.i32[0] = *(_DWORD *)(v5 + 4 * (dword_1002840A0 & 1));
  v18.i32[1] = *(_DWORD *)(v5 + 4 * (unk_1002840A4 & 1));
  v18.i32[2] = *(_DWORD *)(v5 + 4 * (dword_1002840A8 & ((v4 - 471) ^ 0x1C5u)));
  v18.i32[3] = *(_DWORD *)(v5 + 4 * (dword_1002840AC & 1));
  unk_10028409C = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_100283D10, v18), (int8x16_t)vdupq_n_s32(0x5DD46855u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), (int8x16_t)vdupq_n_s32(0x7CF94D10u))), vdupq_n_s32(0x3E7CA688u)), 1uLL));
  return (*(uint64_t (**)(void))(a4 + 8 * v4))();
}

void sub_100195190()
{
}

uint64_t sub_10019519C@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned int v3 = (((a2 + 1508) ^ (a2 + 1082172907) & 0xBF7F5FF8 ^ 0x7FFFFFFE) & *v2 ^ 0x71E80A89) - 1;
  unsigned int v4 = (((v3 & 0x3F77F3CA ^ 0x44261C8) + (v3 ^ 0xFB359E32) - ((v3 ^ 0xFB359E32) & 0xBF77F3CA)) | ((v2[623] & 0x80000000 ^ 0xBC50ED13)
                                                                                                - 1084377374) ^ 0xFBAEA3F5) ^ 0x3F736F8E;
  v2[623] = v2[396] ^ *((_DWORD *)&STACK[0x14A8] + (*v2 & 1)) ^ ((v4 - ((2 * v4) & 0xADF6EA2) - 2056276143) >> 1) ^ 0x5DE0B9;
  return (*(uint64_t (**)(void))(a1 + 8 * ((1603 * (LODWORD(STACK[0x610]) > 0x26F)) ^ a2)))();
}

uint64_t sub_1001952B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x610]) = 0;
  int v7 = LODWORD(STACK[0x610])++;
  *(_DWORD *)(v5 + 1752) = v7 + 340121380;
  unint64_t v8 = 516615401
     * ((((v6 - 192) | 0x5642CE80E520FB21) - (v6 - 192) + ((v6 - 192) & 0xA9BD317F1ADF04D8)) ^ 0xDEFE46FB9643FD13);
  *(void *)(v6 - 184) = (*(_DWORD *)aHr + 932360373) - v8;
  *(_DWORD *)(v6 - 172) = (v4 + 1947213023) ^ v8;
  *(void *)(v6 - 168) = v8 ^ 0x97E518DE;
  *(_DWORD *)(v6 - 152) = ((v4 + 1947213023) ^ 0x57) + v8;
  *(_DWORD *)(v6 - 192) = v8;
  *(_DWORD *)(v6 - 160) = v8 + v4 + 1947213023 + 53;
  *(_DWORD *)(v6 - 156) = (v4 - 185257761) ^ v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v4 ^ 0xFED)))(v6 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v6 - 176)))(v9);
}

uint64_t sub_1001953D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v10 = v5 < v6;
  unint64_t v11 = STACK[0x578];
  int v12 = STACK[0x548];
  int v13 = STACK[0x578] - 1364;
  if (v10) {
    int v14 = v7;
  }
  else {
    int v14 = *(_DWORD *)aHr + 1;
  }
  *(_DWORD *)aHr = v14;
  int v15 = v4 ^ (v4 >> 11);
  unsigned int v16 = ((v15 << 7) ^ 0x6429EF80) - ((((v15 << 7) ^ 0x6429EF80) << (v11 + 89)) & 0x96EF2200) - 881356514;
  unsigned int v17 = ((v16 & 0x9D2C5680 ^ 0x8C2C5600)
       + (v16 & 0x81000600 ^ 0x61012858)
       - ((v16 & 0x9D2C5680 ^ 0x8C2C5600) & 0x81000600)) ^ 0xA1016818;
  unsigned int v18 = (((2 * v17) & 0xFA097C80) - v17 - 2105851473) ^ v15;
  unsigned int v19 = (((((v18 << 15) ^ 0x89180000) - ((2 * ((v18 << 15) ^ 0x89180000)) & 0x2AB10000) + 358136438) & v8 ^ 0x6C7EA17F)
       - 1) ^ 0x7F043DDE;
  unsigned int v20 = (v19 - ((2 * v19) & 0x44A01940) + 575680497) ^ v18;
  unsigned int v21 = (unsigned char *)(v9 + (v12 - 1921021613));
  *unsigned int v21 = ((v20 ^ (v20 >> 18) ^ 0x15)
        - ((2 * (v20 ^ (v20 >> 18) ^ 0x15)) & 0x9E)
        + ((v13 + 78) ^ 0xD9)
        + (v13 ^ 0x2E)
        + 90) ^ 0x34;
  LODWORD(v21) = 1755343967
               * ((*(_DWORD *)(qword_100284C30 + (dword_100284A28 & 0x561E13BC)) ^ v21) & 0x7FFFFFFF);
  unint64_t v22 = 1755343967 * (v21 ^ (v21 >> 16));
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((328
                                * (v12
                                 - ((byte_100223750[v22 >> 24] ^ byte_100249460[v22 >> 24] ^ byte_1002204A0[(v22 >> 24) + 5] ^ v22 ^ (79 * BYTE3(v22))) != (((v20 ^ (v20 >> 18) ^ 0x15) - ((2 * (v20 ^ (v20 >> 18) ^ 0x15)) & 0x9E) + ((v13 + 78) ^ 0xD9) + (v13 ^ 0x2E) + 90) ^ 0x34)) == 1921021612)) ^ v13)))();
}

uint64_t sub_100196DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(a4
                              + 8 * (int)(((v5 + 8 == a5) * ((((v6 + 1288629552) & 0xB33117FD) - 1364) ^ 0x48D)) ^ v6)))();
}

uint64_t sub_100196DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x548]) = v5;
  unint64_t v8 = 1856021207
     * ((((v7 - 192) | 0x4E4EC8390FF411A2) - (v7 - 192) + ((v7 - 192) & 0xB1B137C6F00BEE58)) ^ 0xA35A5FA2419DC75CLL);
  STACK[0x14A8] = 0xDBE28BCE42EA3B11;
  LODWORD(STACK[0x610]) = dword_1002846D8 - 340121379;
  uint64_t v9 = *(unsigned int *)aHr;
  *(_DWORD *)(v7 - 188) = (v4 - 870273649) ^ v8;
  *(_DWORD *)(v7 - 184) = (v4 - 870273617) ^ v8;
  *(_DWORD *)(v7 - 180) = v4 - 870273678 + v8;
  *(void *)(v7 - 176) = v6 - v8;
  *(void *)(v7 - 168) = v9 ^ v8;
  *(_DWORD *)(v7 - 160) = v8 + v4 + 1123495617;
  *(_DWORD *)(v7 - 156) = v8;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v4 + 203)))(v7 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v7 - 192)))(v10);
}

uint64_t sub_100196EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = v4 + 72;
  int v8 = v4;
  STACK[0x560] = (*(uint64_t (**)(unint64_t, uint64_t))(a4 + 8 * (v4 + 125)))(STACK[0x4E8], 3312658705);
  int v9 = (*(uint64_t (**)(void))(a4 + 8 * (v8 + 187)))();
  unsigned int v10 = v9 - 1965487874 - ((v9 << (v6 ^ 0xF1)) & 0x15B211FC);
  LODWORD(xmmword_100283D10) = v10;
  *(_DWORD *)(v5 + 4) = ((1812433253 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))) ^ (v6 + 1610168239))
                      + ((-670100790 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))) & 0xBFF27F3E)
                      + 719309152
                      - ((2
                        * (((1812433253 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))) ^ (v6 + 1610168239))
                         + ((-670100790 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))) & 0xBFF27F3E))
                        - 2146598716) & 0x15B211FC);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + v6))(813489423);
}

void sub_10019703C()
{
}

uint64_t sub_100197058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int8x16_t v7 = (int8x16_t)vld1q_dup_f32((const float *)v5);
  v8.i64[0] = 0x8000000080000000;
  v8.i64[1] = 0x8000000080000000;
  v9.i64[0] = -1;
  v9.i64[1] = -1;
  uint64_t v10 = (v4 - 918);
  v6.i32[0] = *(_DWORD *)(v5 + 4);
  v6.i32[1] = *(_DWORD *)(v5 + 4 * (v10 - 1040));
  v6.i32[2] = *(_DWORD *)(v5 + 12);
  int8x16_t v11 = vextq_s8(v7, v6, 0xCuLL);
  int8x16_t v12 = v6;
  v12.i32[3] = *(_DWORD *)(v5 + 16);
  int8x16_t v13 = (int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v11, v8), vdupq_n_s32(0xF2BD5A23));
  int32x4_t v14 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v12, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0xCCA09167)), v9), (int8x16_t)vdupq_n_s32(0xC6799998));
  v15.i32[0] = *((_DWORD *)&STACK[0x14A8] + (*(_DWORD *)(v5 + 4) & 1));
  v15.i32[1] = *((_DWORD *)&STACK[0x14A8] + (*(_DWORD *)(v5 + 4 * (v10 - 1040)) & 1));
  v15.i32[2] = *((_DWORD *)&STACK[0x14A8] + (*(_DWORD *)(v5 + 12) & 1));
  v15.i32[3] = *((_DWORD *)&STACK[0x14A8] + (v12.i8[12] & 1));
  *(int8x16_t *)uint64_t v5 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v5 + 1588), v15), (int8x16_t)vdupq_n_s32(0x183604EBu)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(vandq_s8(v13, v8), (int8x16_t)v14), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v14, v14), (int8x16_t)vdupq_n_s32(0x6B70FFE8u))), vdupq_n_s32(0xB5B87FF4)), 1uLL));
  return (*(uint64_t (**)(void))(a4 + 8 * (v4 - 1030)))();
}

uint64_t sub_100197AB0@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  int8x16_t v7 = (unsigned int *)(v6 + 4 * (v3 + v4));
  uint64_t v8 = v3 + 1;
  *int8x16_t v7 = v7[397] ^ *((_DWORD *)&STACK[0x14A8] + (*(_DWORD *)(v6 + 4 * (v8 + v4)) & 1)) ^ ((((((a2 + 1512403945) & 0xA5DA8B9F ^ 0xF2BD59B8)
                                                                                            + (v2 & 0x80000000)) & 0x80000000 | ((*(_DWORD *)(v6 + 4 * (v8 + v4)) & 0x7FFFFFFE ^ 0xCCA09167) - 1) ^ 0xC6799998)
                                                                                          - ((2
                                                                                            * (((*(_DWORD *)(v6 + 4 * (v8 + v4)) & 0x7FFFFFFE ^ 0xCCA09167)
                                                                                              - 1) ^ 0xC6799998)) & 0x6B70FFE8)
                                                                                          - 1246199820) >> 1) ^ 0x183604EB;
  return (*(uint64_t (**)(void))(a1 + 8 * ((481 * (v8 == v5 + 3)) ^ a2)))();
}

uint64_t sub_100197B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v7 = v5 & 0xD8E52AFF ^ 0x2DE;
  STACK[0x788] = STACK[0x4D0];
  STACK[0x628] = v4;
  STACK[0x928] = STACK[0x560];
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (int)(v5 & 0xD8E52AFF ^ 0xA8C)))(v6);
  STACK[0x6A8] = 0;
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + (int)(((STACK[0x730] == 0) * (((v7 ^ 0x7D4) - 736) ^ (v7 + 959))) ^ v7)))(v8);
}

uint64_t sub_100197C08@<X0>(uint64_t a1@<X3>, int a2@<W6>, int a3@<W8>)
{
  LODWORD(STACK[0x4D8]) = a2;
  uint64_t v5 = (a3 + 455044963) & 0xE4E08EF1;
  unint64_t v6 = ((unint64_t)&STACK[0x924] ^ 0xFF9D7FF6F9B7F7FFLL)
     + ((2 * (void)&STACK[0x924]) & 0xFF3AFFEDF36FEFF8)
     + 0x62800906480571
     + v5;
  STACK[0x4F0] = ((v6 % 0x25) ^ 0x7DFD8BBFF6D7B9FDLL)
               - 0x7DFD8BBFF6D7B9EDLL
               + ((2 * (v6 % 0x25)) & 0x7ALL);
  unint64_t v7 = STACK[0x788];
  uint64_t v8 = *(uint64_t (**)(void))(a1
                           + 8
                           * (int)((1636
                                  * (((196 * (v5 ^ 0x29A)) ^ 0x33C46C78) + v5 + 397 == 868511725)) ^ v5));
  STACK[0x4E0] = STACK[0x788];
  STACK[0x560] = STACK[0x7D0];
  STACK[0x570] = (unint64_t)&STACK[0xA90] + v7;
  STACK[0x4E8] = (unint64_t)&STACK[0xA90] + v7 + 16;
  STACK[0x4F8] = v4;
  STACK[0x548] = v3;
  return v8();
}

uint64_t sub_100197D7C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(a4
                              + 8 * (((a7 == ((a2 - 660) | 0x220) - 1844) * (20 * (a2 ^ 0x7ED) + 595)) ^ (a2 - 1690))))();
}

uint64_t sub_100197DC4()
{
  int v1 = LODWORD(STACK[0x784]) - LODWORD(STACK[0x930]);
  LODWORD(STACK[0x7CC]) = v1;
  uint64_t v2 = ((uint64_t (*)(void, uint64_t))*(&off_10026D1A0 + v0 + 241))(v1 + ((v0 - 464) ^ 0x9CC4F61B), 3113660523);
  STACK[0x898] = v2;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((v2 == 0) * (v0 - 1835)) ^ v0)))();
}

uint64_t sub_100197E34()
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((452
                               * ((v1 | ((unint64_t)(v1 < 0x633B0C81) << 32))
                                + ((v0 - 694505287) & 0x29654FBA ^ 0xFFFFFFFFB06077AFLL) == 328957064)) ^ (v0 - 1642))))();
}

uint64_t sub_100197EAC@<X0>(unsigned char *a1@<X0>, unint64_t a2@<X8>)
{
  int v4 = v3 - 1690;
  BOOL v5 = v2 < a2;
  *a1 = ((2 * *(unsigned char *)STACK[0x8A0]) & 0xFC) + (*(unsigned char *)STACK[0x8A0] ^ 0x7E);
  if (v5 == a2 > 0x139B7C89) {
    BOOL v5 = v2 > 0x139B7C89;
  }
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((1883 * v5) ^ v4)))();
}

void sub_100197F8C()
{
}

uint64_t sub_100197FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((73 * (((v4 == 0) ^ (v5 - 20)) & 1)) ^ v5)))();
}

uint64_t sub_100197FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = 16 * (v5 ^ 0x7EA);
  (*(void (**)(uint64_t))(a4 + 8 * (v6 + 108)))(18);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8 * (v6 + 122)))(v4, 289);
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (int)(v6 + 12 * ((((2 * v8) & 0xEEBFFFEE) + (v8 ^ 0xF75FFFF7) - 2002780151) >> 31))))();
}

uint64_t sub_100198080@<X0>(int a1@<W8>)
{
  uint64_t v2 = ((uint64_t (*)(void, uint64_t))*(&off_10026D1A0 + v1 + 1245))(((139 * (v1 ^ 0x3A8)) ^ 0x8A0011Fu) + a1, 64);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + ((1334 * (v2 == 0)) ^ v1)))(v2);
}

uint64_t sub_1001980EC()
{
  int v1 = (v0 - 680) | 0x2A8;
  BOOL v2 = *(_DWORD *)((uint64_t (*)(void))*(&off_10026D1A0 + v1 + 1207))() == 2;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((v2 * ((v1 ^ 0x2BC) - 252)) ^ v1)))();
}

uint64_t sub_100198144()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v0 + 8 * (v2 ^ 0xBE5)))(v1, 801, 4, 0);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + (int)((((((2 * v3) & 0x3FBBFBDE)
                                                    + (v3 ^ 0x1FDDFDEF)
                                                    + 1612841489) >> 31)
                                                  * (v2 + 396)) ^ v2)))(v3);
}

uint64_t sub_1001981CC()
{
  unint64_t v4 = LODWORD(STACK[0x8B0]);
  uint64_t v5 = (*(uint64_t (**)(void, unint64_t, void))(v0 + 8 * (v2 + 1190)))((v3 + v1), STACK[0x8A8], (v4 - 1236203077));
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((1045
                               * ((v5 ^ 0xBFFF26AEE231DEFDLL)
                                - ((v4 | ((unint64_t)(v4 < 0x49AEF645) << 32))
                                 + 0x8544D26F3587D16)
                                + ((((2 * v2) ^ 0x642u) + 0x7FFE4D5DC463BCE4) & (2 * v5)) == 0xB7AAD987A52A6BA2)) ^ v2)))();
}

uint64_t sub_100198298@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(v1 + 8 * (v3 + 1258)))(v4, a1 - 0x8544D273D07735BLL);
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (((2 * (((v5 + v2 >= 0) ^ (v3 + 107)) & 1)) & 0xDF | (32 * (((v5 + v2 >= 0) ^ (v3 + 107)) & 1))) ^ (v3 - 660))))();
}

uint64_t sub_100198344()
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((57 * (v1 < (int)(((v0 - 206009273) & 0xC476DDF) + ((v0 - 1497) ^ 0xFFFFFFFE)))) ^ (v0 - 1549))))();
}

uint64_t sub_100198394()
{
  uint64_t v2 = ((uint64_t (*)(void))*(&off_10026D1A0 + v0 + 232))();
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + ((57
                                             * (v1 < (int)(((v0 - 206009273) & 0xC476DDF) + ((v0 - 1497) ^ 0xFFFFFFFE)))) ^ (v0 - 1549))))(v2);
}

uint64_t sub_1001983F8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1399 * (v2 == ((a1 - 1313703638) & 0x4E4D85CF ^ 0xFFFF589A))) ^ a1)))();
}

uint64_t sub_10019843C()
{
  int v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0x9BE)))(v2);
  BOOL v4 = ((uint64_t (*)(const CFAllocatorRef, uint64_t, void, void))*(&off_10026D1A0 + v1 + 1697))(kCFAllocatorDefault, v2, ((2 * v3) & 0xBEE5FEBE) + (v3 ^ (v1 + 1288847374) & 0xB32DBEEB ^ 0xDF72FF96) + 546111649, 0) != 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((23 * v4) ^ v1)))();
}

uint64_t sub_1001984F0(uint64_t a1)
{
  unsigned int v6 = (v2 + 752430640) & 0xD326D0C9;
  (*(void (**)(uint64_t, const CFStringRef, const CFBooleanRef, void))(v1 + 8 * (v2 ^ 0x9B6)))(a1, kCFURLIsExcludedFromBackupKey, kCFBooleanTrue, 0);
  ((void (*)(uint64_t))*(&off_10026D1A0 + (v2 ^ 0x9B8)))(a1);
  int v7 = (v6 - 183) | 0xAC;
  ((void (*)(uint64_t))*(&off_10026D1A0 + (int)(v6 + 1907)))(v4);
  ((void (*)(uint64_t))*(&off_10026D1A0 + v7 + 1904))(v3);
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (((STACK[0x8A8] == 0)
                               * ((8 * (v7 ^ 0x27B)) ^ 0x1193 ^ (980 * ((2 * (v7 ^ 0x27B)) ^ 0x588)))) ^ (2 * (v7 ^ 0x27B)))))();
}

void sub_100198624(uint64_t a1@<X3>, int a2@<W6>, int a3@<W8>)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a1 + 8 * (a3 ^ 0xF86)))();
  sub_1001F0F6C(v4, v5, v6, v7, v8, v9, a2);
}

uint64_t sub_100198638@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  BOOL v10 = v2 < v3;
  *(unsigned char *)(v4 + v5 + v9 + v6) = 0;
  if (v10 == v4 + v7 < v3) {
    BOOL v10 = v4 + v7 < v2;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((v10 * v8) ^ a2)))();
}

uint64_t sub_100198680@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  return sub_100198638(a1, a2);
}

uint64_t sub_100198688(uint64_t a1)
{
  *(_DWORD *)a1 = 2023518720;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1279805853;
  *(void *)(a1 + 64) = 0x228E0CD37FCCF1ACLL;
  *(_DWORD *)(a1 + 72) = 1649474516;
  *(unsigned char *)(a1 + 8) = (v3 >> (20 * (v2 ^ 0x6A) + 112)) ^ 0x48;
  *(unsigned char *)(a1 + 9) = BYTE2(v3) ^ 0xC7;
  *(unsigned char *)(a1 + 10) = (v2 - 9) & 0xFD ^ BYTE1(v3) ^ 0xEE;
  *(unsigned char *)(a1 + 11) = v3 ^ 0x80;
  *(_WORD *)(a1 + 92) = v4;
  *(_DWORD *)(a1 + 96) = v1;
  *(void *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = 1494274718;
  *(void *)(a1 + 120) = 0x7E422C649661EC57;
  *(void *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 144) = 1664814209;
  *(_DWORD *)(a1 + 128) = 0;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((1314 * ((~(v1 - 68414640) + (unint64_t)v2) >> 32)) ^ (v2 | 0x2F5))))();
}

uint64_t sub_1001987AC@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((500
                                * ((((((a1 - 72) & 0xDF) + 42) >> v1) & ((a1 - 1333760840) ^ 0x4F7F97B4)) != 0)) ^ a1)))();
}

uint64_t sub_100198800()
{
  STACK[0x560] = v4;
  STACK[0x568] = v2;
  *(_DWORD *)(v5 + 4) = dword_10023A490[v0];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 8 * (int)(((((((v1 + 900739434) & 0xCA4FCDCB) - 1227) | 0x482) - 1404) * (1703118420 - ((1148667756 << ((((v1 + 106) & 0xCB) + 55) ^ 3)) & 4) >= 1703118420)) ^ (((v1 + 900739434) & 0xCA4FCDCB) + 567))))(1154, 1098, 178, -1148666367, 1842, 918876196, 3376091123, 1418);
}

uint64_t sub_1001988DC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((15 * (v2 < (((v3 - 1265) | a2) ^ v5))) ^ v3)))();
}

uint64_t sub_100198908()
{
  int v7 = v0 - 143;
  char v8 = (*(uint64_t (**)(void))(v1 + 8 * ((v0 - 167) ^ 0xCB8)))();
  uint64_t v9 = (v7 + 418);
  *(unsigned char *)(v5 + (v9 ^ 0xFFFFFFFFBB88BE01) + v6) = (v8 - 2 - ((v7 + 9) & (2 * v8))) ^ 0xB2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + (int)(((((v7 + 418) ^ 0x732u ^ v3) + v6 == (((v7 - 811) | v2) ^ 0x447742B7)) * v4) ^ v9)))(1154, 1098, 178, -1148666367, 1842, 918876196, 3376091123, 1418);
}

uint64_t sub_100198A20()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((8 * (((v1 + 36) ^ (v0 == ((7 * (v1 ^ 0x46E)) ^ v3))) & 1)) & 0xDF | (32 * (((v1 + 36) ^ (v0 == ((7 * (v1 ^ 0x46E)) ^ v3))) & 1))) ^ v1)))();
}

uint64_t sub_100198A74()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((125 * (STACK[0x938] != 0)) ^ (v1 - 792))))();
}

uint64_t sub_100198AA0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((4 * (((*(_DWORD *)(v2 + 4) == -1223708077) ^ (91 * (v0 ^ 0xA4))) & 1)) & 0xEF | (16 * (((*(_DWORD *)(v2 + 4) == -1223708077) ^ (91 * (v0 ^ 0xA4))) & 1))) ^ v0)))();
}

uint64_t sub_100198AE4()
{
  int v2 = 274 * (v0 ^ 0x1A1);
  STACK[0x858] = 0xD0C883D6A823E977;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v2 ^ 0xE49)))(21, 519376027);
  STACK[0x938] = v3;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((v3 == 0) * (14 * (((v2 - 100) | 0xB2) ^ 0x636) - 1944)) ^ v2)))();
}

uint64_t sub_100198EDC(unsigned char *a1)
{
  (*(void (**)(void *, unint64_t *, uint64_t))(v1 + 8 * (v2 + 437)))(&unk_10021F990, &STACK[0xAA0], 16);
  *a1 = ((v4[4] & 0x7F ^ 0xD7) - ((2 * (v4[4] & 0x7F ^ 0xD7)) & 0x72) - 71) ^ 0xB9;
  a1[1] = v4[12] ^ 0x4C;
  a1[2] = v4[13] ^ (((v2 - 56) | v3) + 103 * (v2 ^ 0xB5) - 84);
  a1[3] = v4[14] ^ 0x4C;
  a1[4] = v4[15] ^ 0x4C;
  a1[5] = v4[16] ^ 0x4C;
  a1[6] = v4[17] ^ 0x4C;
  a1[7] = v4[18] ^ 0x4C;
  a1[8] = v4[19] ^ 0x4C;
  a1[9] = v4[20] ^ 0x4C;
  a1[10] = v4[21] ^ 0x4C;
  a1[11] = v4[22] ^ 0x4C;
  a1[12] = v4[23] ^ 0x4C;
  a1[13] = v4[24] ^ 0x4C;
  a1[14] = v4[25] ^ 0x4C;
  a1[15] = v4[26] ^ 0x4C;
  a1[16] = v4[27] ^ 0x4C;
  a1[17] = v4[8] ^ 0x33;
  a1[18] = v4[9] ^ 0x33;
  a1[19] = v4[10] ^ 0x33;
  a1[20] = v4[11] ^ 0x33;
  unint64_t v6 = STACK[0x938] + 1;
  STACK[0x9B0] += 32;
  LODWORD(STACK[0x9DC]) = 0;
  STACK[0x9C8] = v6;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((89 * (v6 == 0)) ^ v2)))();
}

uint64_t sub_100199088()
{
  STACK[0x9B0] = v0;
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v2 + 1553) ^ 0x7A8) == -42900) * (((v2 - 271) | 1) ^ 0x7BE)) ^ v2)))();
}

uint64_t sub_1001990C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((125 * (a1 != 0)) ^ (v2 - 792))))();
}

void sub_1001990F0()
{
  (*(void (**)(void))(v0 + 8 * (v1 ^ 0xF86)))();
  JUMPOUT(0x10019911CLL);
}

uint64_t sub_10019912C()
{
  STACK[0x578] = v1;
  int v2 = LOBYTE(STACK[0xAA4]);
  int v3 = (v2 ^ 0x3D) - ((2 * (v2 ^ 0x3D)) & 0x66666666) + 1781140787;
  unsigned int v4 = (v3 ^ 0x95D5F2A1) + 1;
  v3 ^= 0x6A2A0D33u;
  unsigned int v5 = v3 + (v4 ^ 0x7DFF77D3) + ((2 * v4) & 0xFBFEEFA6) - 2113894355;
  LOBYTE(v2) = ((v2 ^ 0xD8) - ((2 * (v2 ^ 0xD8) + 54) & 0xBC) + 121) ^ v2 ^ ((v2 ^ 0xC2)
                                                                           - ((2 * (v2 ^ 0xC2) + 2) & 0xCA)
                                                                           - 26);
  LODWORD(STACK[0x9DC]) = -1879803947;
  int v6 = byte_100237810[((v5 + 1332117162 - ((2 * v5) & 0x9ECD1A1C) + 3684) ^ 0xB09972F0) + v3];
  int v7 = byte_100238130[LOBYTE(STACK[0xAAD]) ^ 0x9CLL];
  int v8 = ((v2 ^ 0x86) - 2 * (((v2 ^ 0x86) + 26) & 0xDF ^ v2 & 1) + 120);
  int v9 = (v7 - ((2 * v7 + 90) & 0xEE) + 36) ^ 0x3B;
  int v10 = (((v9 - ((2 * v9) & 0xD0)) << 16) + 90701824) ^ 0x5680000;
  int v11 = byte_100237A20[LOBYTE(STACK[0xAA2]) ^ 0x46];
  int v12 = byte_10023E5E0[LOBYTE(STACK[0xAAF]) ^ 0x32] ^ 0xB8;
  unsigned int v13 = (v10 - ((2 * v10) & 0x27DC0000) + 334371433) ^ 0x13EE1A69 | (v12 - ((2 * v12) & 0x15C) - 404084050) ^ 0xE7EA2AAE;
  int v14 = (((v6 ^ v8 ^ 0x64) - ((2 * (v6 ^ v8 ^ 0x64)) & 0x80)) << 24) - 0x40000000;
  int v15 = byte_100238130[LOBYTE(STACK[0xAA5]) ^ 0x73];
  unsigned int v16 = ((((v11 ^ 0x14 ^ (((16 * v11) ^ 0x40)
                                                          - ((2 * ((16 * v11) ^ 0x40)) & 0xC0)
                                                          + 106))
         - ((2 * (v11 ^ 0x14 ^ (((16 * v11) ^ 0x40) - ((2 * ((16 * v11) ^ 0x40)) & 0xC0) + 106))) & 0x1A0)) << 8)
       - 1036529664) ^ 0xC237D000;
  int v17 = byte_10023E5E0[LOBYTE(STACK[0xAA3]) ^ 0x95] ^ 0xB8;
  uint64_t v18 = LOBYTE(STACK[0xAA8]);
  unsigned int v19 = (v16 - ((2 * v16) & 0x3CD1AC00) - 1637296420) ^ 0x9E68D6DC | (v17 - ((2 * v17) & 0x1E8) - 94012940) ^ 0xFA6579F4;
  HIDWORD(v20) = v15 + 1;
  LODWORD(v20) = (v15 << 24) - 1392508928;
  int v21 = (v20 >> 25) - ((2 * (v20 >> 25)) & 0xFFFFFFD8);
  HIDWORD(v20) = (v21 + 108) ^ 0x6C;
  LODWORD(v20) = (19 - v21) << 24;
  unsigned int v22 = ((((((v20 >> 31) - ((2 * (v20 >> 31)) & 0x5A) + 45) ^ 0x25)
         - ((2 * (((v20 >> 31) - ((2 * (v20 >> 31)) & 0x5A) + 45) ^ 0x25)) & 0x70)) << 16)
       - 1539833856) ^ 0xA4380000;
  unsigned int v23 = (v22 - ((2 * v22) & 0x72220000) + 957470611) ^ 0x3911D793 | ((v14 ^ 0xC0000000)
                                                                   - 1946429871
                                                                   - ((2 * v14) & 0x16000000)) ^ 0x8BFBD651;
  unsigned int v24 = v23 - ((2 * v23) & 0xE3686C18);
  int v25 = byte_100238130[LOBYTE(STACK[0xAA1]) ^ 0x99];
  uint64_t v26 = LOBYTE(STACK[0xAAB]) ^ 0xDLL;
  STACK[0x9C0] = 0;
  STACK[0x9F0] = 0;
  STACK[0x9E8] = 0;
  STACK[0x9B8] = 0;
  STACK[0x9E0] = 0;
  STACK[0x9F8] = 0;
  STACK[0xA00] = 0;
  int v27 = v25 - ((2 * (_BYTE)v25 + 90) & 0x70) - 27;
  int v28 = v18 ^ 0xFB ^ byte_100237810[v18 ^ 9];
  int v29 = ((((v27 ^ 0x36) - ((2 * v27) & 0x10)) << 16) + 1745354752) ^ 0x68080000;
  int v30 = byte_10023E5E0[LOBYTE(STACK[0xAA7]) ^ 0xD0];
  unsigned int v31 = (v29 - ((2 * v29) & 0x4760000) - 2110042458) ^ 0x823B4EA6 | (v19 - ((2 * v19) & 0x795F9862) - 1129329615) ^ 0xBCAFCC31;
  unsigned int v32 = ((byte_10023E5E0[v26] ^ 0xB8) - ((2 * (byte_10023E5E0[v26] ^ 0xB8)) & 0xFFFFFF3F) - 1126013537) ^ 0xBCE2659F | ((v28 << 24) - ((v28 << 25) & 0x72000000) - 1175254943) ^ 0xB9F30861;
  unsigned int v33 = v32 - ((2 * v32) & 0xD3977900);
  LODWORD(v18) = ((2 * v30) ^ 0x70) + 65;
  int v34 = v13 - ((2 * v13) & 0x23DE702) - 2128678015;
  int v35 = (((v30 ^ 0xFFFFFFB8) - 78) ^ 0xDE) + ((2 * ((v30 ^ 0xFFFFFFB8) - 78)) & 0xBC) - ((2 * v18) & 0x40);
  int v36 = v31 - ((2 * v31) & 0x2054AD6E) + 271210167;
  int v37 = byte_100237A20[LOBYTE(STACK[0xAA6]) ^ 0x72];
  int v38 = (v24 - 239847924) ^ 0xF1B4360C | ((v35 + (v18 & 0x64 ^ 0x97) + 75)
                                        - ((2 * (v35 + (v18 & 0x64 ^ 0x97) + 75)) & 0xEC)
                                        - 348347530) ^ 0xEB3CA376;
  LODWORD(v26) = v37 ^ 0x79 ^ (((16 * v37) ^ 0x40) - ((2 * ((16 * v37) ^ 0x40)) & 0xA0) + 92);
  LODWORD(v26) = (((v26 - ((2 * v26) & 0xC6)) << 8) + 646210304) ^ 0x26846300;
  LODWORD(v18) = byte_100238130[LOBYTE(STACK[0xAA9]) ^ 0x73];
  int v39 = (v38 - ((2 * v38) & 0xED9EC4A0) + 1993302608) ^ 0x76CF6250 | (v26 - ((2 * v26) & 0x15E05800) + 183512105) ^ 0xAF02C29;
  int v40 = byte_100237A20[LOBYTE(STACK[0xAAE]) ^ 0x46];
  unsigned int v41 = (((((v18 - ((2 * v18 + 2) & 6) + 48) ^ 0x8B)
         - ((2 * ((v18 - ((2 * (_BYTE)v18 + 2) & 6) + 48) ^ 0x8B)) & 0x128)) << 16)
       - 7077888) ^ 0xFF940000;
  LODWORD(v26) = ((16 * v40) ^ 0xFFFFFF90) - ((2 * ((16 * v40) ^ 0xFFFFFF90)) & 0x20) - 112;
  unsigned int v42 = (v41 - ((2 * v41) & 0xDBA60000) - 304911902) ^ 0xEDD369E2 | (v33 + 1774959744) ^ 0x69CBBC80;
  v40 ^= 0x7Eu;
  LODWORD(v26) = v26 ^ 0x40;
  int v43 = (v26 & v40) + (~(2 * (v26 & v40)) | 0xFFFFFFD5) + 86;
  int v44 = ((v26 + v40) ^ 0x3A) + ((2 * (v26 + v40)) & 0x74);
  int v45 = ((((v44 + ((2 * v43) ^ 0xB) + ((4 * v43) & 0xBC ^ 0xEB) + 38)
         - ((2 * (v44 + ((2 * v43) ^ 0xB) + ((4 * v43) & 0xBC ^ 0xEB) + 38)) & 0xCC)) << 8)
       + 1593337344) ^ 0x5EF86600;
  unsigned int v46 = v34 ^ 0x811EF381;
  uint64_t v47 = LOBYTE(STACK[0xAA0]);
  LODWORD(v26) = byte_100237A20[LOBYTE(STACK[0xAAA]) ^ 0x50];
  int v48 = (v45 - ((2 * v45) & 0x5B77EE00) + 1841035104) ^ 0x6DBBF760 | v46;
  int v49 = LOBYTE(STACK[0xAAC]) ^ 0x6B ^ byte_100237810[LOBYTE(STACK[0xAAC]) ^ 0xELL];
  unsigned int v50 = (((v49 - ((2 * v49) & 0xFFFFFF8F)) << 24) + 1191182336) ^ 0x47000000;
  unsigned int v51 = (v48 - ((2 * v48) & 0x8DDDE610) - 957418744) ^ 0xC6EEF308 | (v50 - 812239916 + (~(2 * v50) | 0x61FFFFFF) + 1) ^ 0xCF9633D4;
  LODWORD(STACK[0x4B0]) = v51 + 1770402728 - ((2 * v51) & 0xD30C676E) + 15;
  int v52 = byte_100237810[v47 ^ 0xB0];
  unsigned int v53 = ((((v26 ^ 0xEA ^ (((16 * v26) ^ 0x40) + ((2 * ((16 * v26) ^ 0x40)) & 0x80) - 63) | 0x610100)
         - ((2
           * (v26 ^ 0xEA ^ (((16 * v26) ^ 0x40) + ((2 * ((16 * v26) ^ 0x40)) & 0x80) - 63))) & 0x116)) << 8)
       + 494336) ^ 0x61088B00;
  unsigned int v54 = (v53 - ((2 * v53) & 0x9FA1400) - 2063791602) ^ 0x84FD0A0E | (v42 - ((2 * v42) & 0x7CD2F7C4) - 1100383262) ^ 0xBE697BE2;
  LODWORD(STACK[0x560]) = (2 * v54) & 0x47B102CE;
  LODWORD(STACK[0x558]) = v54 - 1546092185;
  unsigned int v55 = (((v47 ^ 0x92 ^ v52) - ((2 * (v47 ^ 0x92 ^ v52)) & 0x62)) << 24) - 1325400064;
  unsigned int v56 = (v55 ^ 0xB1000000) - ((2 * v55) & 0x90000000) - 937424467;
  LODWORD(STACK[0x4D0]) = v56;
  LODWORD(STACK[0x4C0]) = v56 ^ 0xC82009AD;
  unsigned int v57 = v56 ^ 0xC82009AD | v36 ^ 0x102A56B7;
  LODWORD(STACK[0x570]) = (2 * v57) & 0xCB6A5D3A;
  LODWORD(STACK[0x568]) = v57 - 441110883;
  LODWORD(STACK[0x470]) = (v39 - ((2 * v39) & 0xEBD700AA) + 1978368085) ^ 0x65B7B765;
  int v58 = *(unsigned __int8 *)STACK[0x9C8];
  LOBYTE(STACK[0xA90]) = v58 + 107;
  int v59 = (v58 ^ 0x3BFFFFEF) + ((((v0 - 777) | 0x4A8) - 1482) & (2 * v58)) + 47645916;
  unsigned int v60 = (-1950399707 * v59 - ((394167882 * v59 - 1235244528) & 0x88055B94) - 1624079662) ^ 0xDA429950;
  unsigned int v61 = ((v60 + 1363901570) ^ 0x2090A084)
      + ((v60 % 0x101) ^ 0x72BEF7EF)
      + ((2 * (v60 % 0x101)) & 0x3DE)
      - ((2 * (v60 + 1363901570)) & 0xBEDEBEF6)
      + 1;
  int v62 = v61 - ((2 * v61 + 1499516696) & 0x44EC72FC) - 1893293814;
  unsigned int v63 = (v62 ^ ((v62 ^ 0xDD89C681) - ((2 * (v62 ^ 0xDD89C681) + 2) & 0x98F09898) - 864531379) ^ ((v62 ^ 0x6BD7213C)
                                                                                               - 1235294274
                                                                                               - ((2
                                                                                                 * ((v62 ^ 0x6BD7213C)
                                                                                                  - 1235294274)) & 0x819584E6)
                                                                                               + 1087029875) ^ 0xAEC4B741)
      - 1235294275;
  unsigned int v64 = (v63 - ((2 * v63) & 0x6117B450) + 814471720) ^ 0xD8AE23FA;
  unsigned int v65 = v64 - ((2 * v64 + 247228098) & 0x31C0F4D8);
  unsigned int v66 = v65 - 1606505011;
  HIDWORD(v20) = (v65 - 1606505011) ^ 0x18E07A6C;
  LODWORD(v20) = 1606505010 - v65;
  int v67 = (((v20 >> 31) ^ 0xDCACBEFD)
       - 827053620
       + ((2 * (v20 >> 31)) & 0xB9597DFA)
       + 1
       - ((2 * (((v20 >> 31) ^ 0xDCACBEFD) - 827053620 + ((2 * (v20 >> 31)) & 0xB9597DFA) + 1) + 911950276) & 0xE60D3C02)
       + 238304995) ^ (v65 - 1606505011) ^ 0x47E65936;
  unsigned int v68 = (((v66 ^ 0x98E07A6C) + 1363901570) ^ 0xDF7FFAEF)
      + ((2 * ((v66 ^ 0x98E07A6C) + 1363901570)) & 0xBEFFF5DE)
      + 545260817
      + (v67 ^ 0x60B2E6DE);
  return ((uint64_t (*)(void, void))*(&off_10026D1A0 + v0))((v68 ^ 0x7BFFBF6D) - 1074051180 + ((2 * v68) & 0xF7FF7EDA), v67 ^ 0xBB01FC9A);
}

void sub_100199F04()
{
}

uint64_t sub_100199F0C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v7 = LODWORD(STACK[0x558]) - LODWORD(STACK[0x560]);
  LODWORD(STACK[0x4C8]) = v7;
  LODWORD(STACK[0x498]) = v7 ^ 0x4842EED5;
  char v8 = (v6 ^ 0x8B) - 117 - ((2 * (v6 ^ 0x8B) + 2) & 0x16) + 1;
  unsigned int v9 = a2 ^ 0x9F27C539 ^ ((LOBYTE(STACK[0xA90]) - 107)
                        - ((2 * (LOBYTE(STACK[0xA90]) + 149)) & 0xFA)
                        + 1150607229);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + ((1761 * (((134217726 - ((~(v8 & 3) | 0x59E3C62) + (v8 & 2 | 0x261C39D))) & 0x498047F) == 77071457)) ^ (v5 - 994))))(a1, v9 - ((2 * v9 + 864704412) & 0xB7663488) + 1970816530, 236, 250, a5, 1150607229, 2670183737, 864704412);
}

void sub_10019A068()
{
}

uint64_t sub_10019A070(int a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(STACK[0x560]) = LODWORD(STACK[0x568]) - LODWORD(STACK[0x570]);
  unsigned int v7 = (2 * a2) ^ 0xB7267199;
  unsigned int v8 = (4 * a2) & 0xFF7F75DC ^ 0x91B39EEF;
  unsigned int v9 = (a2 ^ 0xDBB31A44)
     - 1752068653
     * ((*(unsigned __int8 *)STACK[0x578] ^ 0x5FDFE32E) - 1599324051 + ((2 * *(unsigned __int8 *)STACK[0x578]) & 0x5C))
     - 2024331024;
  unsigned int v10 = v7 + v8 + (v9 ^ 0xF7E76AEF) + ((2 * v9) & 0xEFCED5DE);
  unsigned int v11 = v10 + 1;
  unsigned int v12 = a5 ^ 0xBB79EB1B;
  unsigned int v13 = (a5 ^ 0xBB79EB1B) - a1 + 1137923841 + v10 + 1;
  unsigned int v14 = v13 ^ 0xFAFBF99F;
  unsigned int v15 = (2 * v13) & 0xF5F7F33E;
  if (v10 + 131616769 >= 0xCAD9B2A3) {
    int v16 = 1468616377;
  }
  else {
    int v16 = 576913756;
  }
  unsigned int v17 = v15 + v14 + (((v11 - 445296988 + v16) % 0x101) ^ 0x6FC9DD8B) + ((2 * ((v11 - 445296988 + v16) % 0x101)) & 0x316);
  int v18 = (v17 - 1565546093 - ((2 * v17 + 175395244) & 0x1AEB017A)) ^ v6;
  int v19 = (v18 ^ 0x447EBE7B ^ (a1 - 1006307073)) + 120897070 - ((2 * (v18 ^ 0x447EBE7B ^ (a1 - 1006307073))) & 0xE697C5C);
  HIDWORD(v20) = v18 ^ 0x47EBE7B;
  LODWORD(v20) = v18 ^ 0x40000000;
  int v21 = ((v12 + (v18 ^ 0xBB814184) + 1 - ((2 * (v12 + (v18 ^ 0xBB814184) + 1)) & 0x6B138934) - 1249262438) ^ 0x4A763B65)
      + (v19 ^ 0x9C46F628 ^ ((v20 >> 29) - ((2 * (v20 >> 29)) & 0x36E4900C) - 1687009274))
      + 1;
  unsigned int v22 = ((v18 ^ 0x447EBE7B)
       + (v6 ^ 0xF1B8BE8B)
       + 2060771752
       - ((2 * ((v18 ^ 0x447EBE7B) + (v6 ^ 0xF1B8BE8B))) & 0xF5A9C350)) ^ 0xFEC5562F ^ (v21
                                                                                      - ((2 * v21) & 0x8236F0E)
                                                                                      - 2079213689);
  unsigned int v23 = v22 - ((2 * v22 + 1655225282) & 0xB7663488) - 1928890331;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + v5 - 1816))((((v23 ^ 0x244CE5BB) + 1 + (v19 ^ 0x734BE2E)) ^ 0xFFFFA7C3)+ 1006329662+ ((2 * ((v23 ^ 0x244CE5BB) + 1 + (v19 ^ 0x734BE2E))) & 0xFFFF4F86));
}

void sub_10019A3E4()
{
}

uint64_t sub_10019A3EC(uint64_t a1, int a2)
{
  unsigned int v4 = (v2 + (a2 ^ v2) - ((2 * (a2 ^ v2) + 2) & 0xB7663488) + 1) ^ v2;
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((124 * (((v4 % 3) ^ 0x7CC58DFF) + 2 * (v4 % 3) == 2093321727)) ^ (v3 - 1268))))();
}

void sub_10019A524()
{
}

uint64_t sub_10019A530(int a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v8 = (v7 + 844964218) * (v5 ^ v6) - ((1689929286 * (v5 ^ v6)) & 0x44949A94) + 575294794;
  int v9 = -134217728 * ((3 * (v5 ^ v6)) & 0xF) - 1946157056 * (v5 ^ v6) + 1009568654;
  unsigned int v10 = ((2 * ((v9 ^ 0x3C2CCB8E) & 0xFC000000 | (v8 >> 6))) & 0x93EFAB3E ^ 0x102022A)
      + (((v9 ^ 0x3C2CCB8E) & 0xFC000000 | (v8 >> 6)) ^ 0x497EFCAA);
  unsigned int v11 = ((192114608 * (a4 ^ 0x6E3ADEDE) - ((384229216 * (a4 ^ 0x6E3ADEDE)) & 0x9633A140) + 1259983018) ^ 0x4B19D0AA) & 0xFFFFFFF0 | ((-524863749 * (a4 ^ 0x6E3ADEDE) - ((-1049727498 * (a4 ^ 0x6E3ADEDE)) & 0xD680D032) - 348100583) >> 28);
  unsigned int v12 = ((2 * v11) & 0xBBFBFFF6 ^ 0x14) + (v11 ^ 0xDDFDFFF5);
  unsigned int v13 = (((~(1563722576 * a1) | 0x8B8E9E5F) - 1365622360 * a1 + 976793815) ^ 0x3A38B0D6) & 0xFFFFFFF8 | ((-170702795 * a1 - ((195465322 * a1) & 0x1869D990u) + 204795080) >> 29);
  int v14 = v13 ^ 0x6FB9FBD5;
  unsigned int v15 = (2 * v13) & 0xDF73F7AA;
  unsigned int v16 = ((-913864192 * v4 - ((-1827728384 * v4 + 208528384) & 0x977CEC00) - 772446140) ^ 0x4BBE7644) & 0xFFFFFE00 | ((-1570454587 * v4 - ((1154058122 * v4 + 1803958002) & 0x4966E66Cu) + 1517719215) >> 23);
  unsigned int v17 = ((2 * v16) & 0x3F6BFFBA ^ 0x92) + (v16 ^ 0x9FB5FF94);
  unsigned int v18 = 1642707893 * v17 - ((64190314 * v17 + 177034110) & 0x216A555A) + 368825452;
  int v19 = v12 + v14 + v15 - v17 + v10 - 1626632993;
  unsigned int v20 = ((-2123366400 * v19 - ((48234496 * v19 + 2065694720) & 0xEA000000) - 1298906932) ^ 0xF50440CC) & 0xFFF00000 | ((741165079 * v19 - ((1482330158 * v19 - 869304398) & 0xBD659856) + 1154123780) >> 12);
  HIDWORD(v21) = v12 + 5;
  LODWORD(v21) = (-1279558367 * v12 - ((1735850562 * v12 - 1109990582) & 0xF700DDC2) - 630464378) ^ 0xFB806EE0;
  unsigned int v22 = ((2 * v20) & 0xF76EFF9C ^ 0xAD618) + (v20 ^ 0xFBB294E2);
  int v23 = (v21 >> 5) - ((2 * (v21 >> 5)) & 0x6C4BCECE) - 1239029913;
  unsigned int v24 = (377029380 * v10 - ((754058760 * v10 - 1661888248) & 0xEC037290)) & 0xFFFFFFFC | ((((-1958968958 * v10
                                                                                           + 658269762) & 0xA37CA2FC)
                                                                                         + 979484479 * v10
                                                                                         + 446921568) >> 30);
  unsigned int v25 = 1513788405 * v22 - 2 * ((1513788405 * v22 + 1515415002) & 0x79B2DE71 ^ (1513788405 * v22) & 1) - 737786806;
  unsigned int v26 = ((2 * (v24 - 998603316)) & 0xFEFFFFFE ^ 0xEC037290) + ((v24 - 998603316) ^ 0x97E46B7);
  unsigned int v27 = v23 ^ 0xB625E767;
  unsigned int v28 = 1337753485 * (v23 ^ 0xB625E767) - ((-1619460326 * (v23 ^ 0xB625E767)) & 0x84D9ED44) - 1033046366;
  unsigned int v29 = -774594648 * v22 - ((-1549189296 * v22 - 1523163744) & 0x9274EE50) - 1680497156;
  int v30 = -2019103020 * v17 - ((256761256 * v17 + 708136440) & 0x23D77820) + 654729997;
  unsigned int v31 = ((2 * ((v30 ^ 0x11EBBC11) & 0xFFFFFFFC | (v18 >> 30))) & 0x7FE6DCAC ^ 4)
      + (((v30 ^ 0x11EBBC11) & 0xFFFFFFFC | (v18 >> 30)) ^ 0xBFF36E54)
      + v22;
  unsigned int v32 = (v23 ^ 0x951F7D14 ^ (v31 - ((2 * v31 + 145367992) & 0x467534E6) + 1737469007)) - v26 + 2139095039;
  int v33 = v32 ^ 0x3DFF76ED;
  int v34 = -1146936625 * (((2 * v32) & 0x7BFEEDDA) + (v32 ^ 0x3DFF76ED))
      - ((2001094046 * (((2 * v32) & 0x7BFEEDDA) + (v32 ^ 0x3DFF76ED)) + 829995194) & 0x60757086)
      + 1224152224;
  unsigned int v35 = -141561440 * v27 - ((-283122880 * v27) & 0x9846E580) + 1277391561;
  unsigned int v36 = ((v29 ^ 0xC93A772C) & 0xFFFFFFF8 | (v25 >> 29)) ^ 3;
  unsigned int v37 = v36 - ((2 * v36) & 0xB50B67EE) + 1518711799;
  HIDWORD(v21) = v33 + 1;
  LODWORD(v21) = v34 ^ 0x303AB842;
  int v38 = (v21 >> 1) - ((2 * (v21 >> 1)) & 0xB69B59C0) - 615666464;
  unsigned int v39 = ((((((v28 >> 27) & 0x1C ^ 0x18 | 0x1C2D5E48) + -472735306 - ((v28 >> 27) & 0x1C ^ 0x18 | 0xE3D2A1B6)) | 1) ^ 0x8CD066EC)
       - 1) ^ 0x90FD38A4 | ((((v35 ^ 0x4C2372C9) & 0xFFFFFFFC | ((2112093288 * v27
                                                                - ((-70780720 * v27) & 0xB0C0B580)
                                                                + 1482709696) >> 30)) ^ 1)
                          - ((2 * (v35 ^ 0x4C2372C9)) & 0x23540840)
                          + 296354852) ^ 0x11AA0424;
  HIDWORD(v21) = v39 ^ 1;
  LODWORD(v21) = (v39 - ((2 * v39) & 0x17B4618) + 12428044) ^ 0x679F3C38;
  unsigned int v40 = 2107421365 * (v37 ^ 0x5A85B3F7) - ((2067359082 * (v37 ^ 0x5A85B3F7)) & 0x57C8670C) - 1411107962;
  unsigned int v41 = (((-805306368 * v26 - (((v26 << 29) + 0x20000000) & 0x40000000) + 1931189494) ^ 0xA31B9CF6) & 0xF0000000 | ((71091677 * v26 - ((142183354 * v26 + 91851706) & 0x1D99DBBA) - 2121681990) >> 4)) ^ 0xECCEDD;
  unsigned int v42 = v41 - ((2 * v41) & 0xDBED4278) - 302603972;
  int v43 = -886353920 * (v37 ^ 0x5A85B3F7) - ((374775808 * (v37 ^ 0x5A85B3F7)) & 0x5E368000) - 1357165796;
  unsigned int v44 = v42 ^ 0xEDF6A13C;
  unsigned int v45 = -1761270391 * (v42 ^ 0xEDF6A13C) - ((772426514 * (v42 ^ 0xEDF6A13C)) & 0xB122D242) - 661559007;
  int v46 = ((v21 >> 2) - ((2 * (v21 >> 2)) & 0x1EBE0D0) + 16117864) ^ v42 ^ v37 ^ 0x3503E98E ^ v38;
  unsigned int v47 = (((973078528 * (v38 ^ 0xDB4DACE0) - ((1946157056 * (v38 ^ 0xDB4DACE0)) & 0x94000000) + 1267397027) ^ 0x4B8AF1A3) & 0xFE000000 | ((-721323363 * (v38 ^ 0xDB4DACE0) - ((-1442646726 * (v38 ^ 0xDB4DACE0)) & 0xE2D9925A) - 244528851) >> 7)) ^ 0x1E2D992;
  int v48 = v47 - ((2 * v47) & 0xB9989EC) - 2050177802;
  unsigned int v49 = ((v43 ^ 0xAF1B4B1C) & 0xFFFFF000 | (v40 >> 20)) ^ 0xABE;
  int v50 = v49 - ((2 * v49) & 0x11F6A210) + 150688008;
  unsigned int v51 = ((1259470848 * v44 - ((-1776025600 * v44) & 0x90900000) + 1212778565) ^ 0x48498845) & 0xFFFE0000 | (v45 >> 15);
  int v52 = (v51 ^ 0x2F3E2DC5) + ((2 * v51) & 0x5E7F39CE ^ 0x32044) - 792698087 + (v50 ^ 0x8FB5108);
  unsigned int v53 = v48 ^ (v52 - ((2 * v52) & 0xB4B27BA4) + 1515797970);
  unsigned int v54 = (((-945815552 * v46 - ((-1891631104 * v46) & 0xFB800000) + 2110705686) ^ 0x7DCED016) & 0xFFE00000 | ((1719619133 * v46 - ((1291754618 * v46) & 0x56485F4Cu) - 1423691866) >> 11)) ^ 0x156485;
  unsigned int v55 = v54 - ((2 * v54) & 0xB43E647A) - 635489731;
  unsigned int v56 = 2 * (((v53 ^ 0xDF95F924) & (v55 ^ 0xDA1F323D)) - ((2 * ((v53 ^ 0xDF95F924) & (v55 ^ 0xDA1F323D))) & 0x72974800))
      + 1922516992;
  unsigned int v57 = -152148793 * (v50 ^ v48 ^ v55 ^ 0x39DF4930)
      - ((-304297586 * (v50 ^ v48 ^ v55 ^ 0x39DF4930)) & 0xBD7578F6)
      - 558187397;
  unsigned int v58 = (v55 ^ 0x58ACB19 ^ v53) + (v56 ^ 0xDD9BDF7) - 2135881207 + ((2 * v56) & 0xFE9DEBEC ^ 0xE40C8000);
  unsigned int v59 = v58 - ((2 * v58) & 0xC2DB2F3E) + 1634572191;
  LODWORD(STACK[0x4F8]) = v59 ^ 0x616D979F;
  unsigned int v60 = 2 * (((v59 ^ 0x616D979F) & (v57 ^ 0xDEBABC7B)) - ((2 * ((v59 ^ 0x616D979F) & (v57 ^ 0xDEBABC7B))) & 0x7F49278A))
      + 2135500682;
  unsigned int v61 = (v57 ^ 0xBFD72BE4 ^ v59) + (v60 ^ 0x8013897D) + 10834185 + ((2 * v60) & 0xFEB55DEC ^ 0xFE904D04);
  unsigned int v62 = ((2 * v61) & 0xCCFFF4BE) + (v61 ^ 0xE67FFA5F);
  int v63 = 2 * v62 + 28806980;
  LODWORD(STACK[0x508]) = v63;
  LODWORD(STACK[0x510]) = v62;
  unsigned int v64 = v62 - (v63 & 0xC24B9E38) - 503212354;
  int v65 = v64 ^ v59;
  int v66 = v64 ^ 0x6125CF1C;
  LODWORD(STACK[0x458]) = v65;
  int v67 = v65 ^ 0x485883;
  unsigned int v68 = (v64 ^ 0x6125CF1C)
      + (v48 ^ 0x85CCC4F6)
      - ((2 * ((v64 ^ 0x6125CF1C) + (v48 ^ 0x85CCC4F6))) & 0x7189E3C)
      + 59526942;
  int v69 = -1909726993 * (v64 ^ 0x6125CF1C) - 1191383511;
  unsigned int v70 = v69 - ((475513310 * (v64 ^ 0x6125CF1C)) & 0x71F9DC52);
  LODWORD(STACK[0x4B8]) = v68;
  int v71 = v68 ^ 0x38C4F1E;
  int v72 = 1847209695 * (v68 ^ 0x38C4F1E) - ((473193918 * (v68 ^ 0x38C4F1E)) & 0x28E6D896) - 1804374965;
  unsigned int v73 = 2 * (((v64 ^ 0x6125CF1C) & (v55 ^ 0xDA1F323D)) - ((2 * ((v64 ^ 0x6125CF1C) & (v55 ^ 0xDA1F323D))) & 0x4B9156EA))
      - 879667478;
  LODWORD(STACK[0x550]) = v64;
  unsigned int v74 = (v55 ^ 0xBB3AFD21 ^ v64) + (v73 ^ 0x6C8AA111) + 1491339269 + ((2 * v73) & 0x4E37EFF4 ^ 0x622ADD4);
  int v75 = v74 - ((2 * v74) & 0x18B1CAA0) + 207152464;
  LODWORD(STACK[0x570]) = v75;
  LODWORD(STACK[0x4F0]) = v66;
  int v76 = 1002438656 * v66 - ((2004877312 * v66) & 0x46800000) + 593305188;
  unsigned int v77 = ((1571042304 * (v75 ^ 0xC58E550) - ((-1152882688 * (v75 ^ 0xC58E550)) & 0xA5B16800) + 1389934150) ^ 0x52D8B646) & 0xFFFFFC00 | ((198666509 * (v75 ^ 0xC58E550) - ((397333018 * (v75 ^ 0xC58E550)) & 0xB8135104) + 1544136834) >> 22);
  unsigned int v78 = ((2 * v77) & 0xEF6E7FDE ^ 0x2C0) + (v77 ^ 0xF7B73E9F);
  LODWORD(STACK[0x4E8]) = v67;
  unsigned int v79 = ((786366464 * v71 - ((1572732928 * v71) & 0x4E160000) + 655043157) ^ 0x270B2A55) & 0xFFFF0000 | HIWORD(v72);
  unsigned int v80 = ((2 * v79) & 0x9F7B7BD6 ^ 0x128C6) + (v79 ^ 0x4FBD2998);
  unsigned int v81 = (((260087808 * v67 - ((520175616 * v67) & 0x5F0DC000) + 797375320) ^ 0x2F86FB58) & 0xFFFFE000 | ((-2048885755 * v67 - ((197195786 * v67) & 0x3B16D8CAu) + 495676517) >> 19)) ^ 0x3B1;
  unsigned int v82 = v81 - ((2 * v81) & 0xC8779D9E) + 1681641167;
  unsigned int v83 = ((2 * ((v76 ^ 0x235D1E64) & 0xFFC00000 | (v70 >> 10))) & 0xDF57774C ^ 0x547644)
      + (((v76 ^ 0x235D1E64) & 0xFFC00000 | (v70 >> 10)) ^ 0x6F85849D)
      - v80
      + v78;
  int v84 = v82 ^ 0x643BCECF;
  unsigned int v85 = 1257180215 * (v82 ^ 0x643BCECF) - ((-1780606866 * (v82 ^ 0x643BCECF)) & 0x9BC9BB68) - 840639052;
  unsigned int v86 = v82 ^ 0x2281BF ^ (v83 - ((2 * v83 - 793410388) & 0xC8329EE0) + 1282675142);
  unsigned int v87 = ((-40894464 * v86 - ((455081984 * v86) & 0x17200000) + 195006150) ^ 0xB9F8EC6) & 0xFFF00000 | ((435343321 * v86 - ((870686642 * v86) & 0x320D1444) - 1727624670) >> 12);
  unsigned int v88 = ((2 * v87) & 0xD4BFFFF8 ^ 0x1320D0) + (v87 ^ 0xEA566F94);
  unsigned int v89 = (((-1316814848 * v78 - ((1661337600 * v78 + 325451776) & 0xC3AA0000) - 343405885) ^ 0xE1D50AC3) & 0xFFFF0000 | ((182563203 * v78 - ((365126406 * v78 + 99488614) & 0xC6BDFE40) - 430569261) >> 16)) ^ 0xE35E;
  int v90 = v89 - ((2 * v89) & 0x19060E22) + 209913617;
  unsigned int v91 = ((((~v80 << 30) & 0x80000000) - (v80 << 29) - 1279471520) ^ 0x53BCD060) & 0xE0000000 | ((943187215 * v80
                                                                                               - ((1886374430 * v80
                                                                                                 - 956084106) & 0xBC5CD6E4)
                                                                                               - 1045425235) >> 3);
  unsigned int v92 = ((2 * v91) & 0x7FEFDFFC ^ 0x178B9ADC) + (v91 ^ 0x34322290) + v88;
  unsigned int v93 = v92 - ((2 * v92 - 1420812276) & 0xA5F67DA6) - 1465692455;
  unsigned int v94 = ((2019670016 * v84 - ((-255627264 * v84) & 0xAE5D1000) - 684816334) ^ 0xD72E8832) & 0xFFFFF800 | (v85 >> 21);
  unsigned int v95 = ((2 * v94) & 0xBB67FCDE ^ 0xCDE) + (v94 ^ 0x5DB3F800);
  unsigned int v96 = -1045817253 * v88 - ((55849142 * v88 + 1829815000) & 0x408D059C) + 1456399418;
  unsigned int v97 = 289091809 * (v90 ^ 0xC830711) - ((578183618 * (v90 ^ 0xC830711)) & 0x8B673DFA) + 1169399549;
  v88 *= 204308480;
  unsigned int v98 = v88 + 817233920;
  unsigned int v99 = (((v88 + 817233920) & 0xFFFF8000 | (v96 >> 17)) ^ 0x4142E263)
      + v88
      + ((2 * ((v88 + 817233920) & 0xFFFF8000 | (v96 >> 17))) & 0x7D7A9B7E ^ 0xFFFF7FB9);
  unsigned int v100 = ((2 * ((v90 ^ 0xDE7839C2 ^ v93) - v95 + 1572077167)) & 0xFFDFB2EE)
       + (((v90 ^ 0xDE7839C2 ^ v93) - v95 + 1572077167) ^ 0x7FEFD977);
  unsigned int v101 = (v96 >> 17) ^ (((v96 >> 17) ^ 0xFFFFAFDC) - ((2 * ((v96 >> 17) ^ 0xFFFFAFDC) + 2) & 0x771858EC) + 999042167) ^ 0xEED1C8E1 ^ (v99 - ((2 * v99 - 555312254) & 0xAABB6968) - 992935307);
  int v102 = v101 + v98 - 2 * ((v101 + v98) & 0x6684C65B ^ v101 & 0x19) + 1719977538;
  unsigned int v103 = ((-2145703632 * v100 - ((3560032 * v100 + 1397511520) & 0x838E1CA0) + 1802320134) ^ 0x41C70E56) & 0xFFFFFFF0 | ((-1207848301 * v100 - ((1879270694 * v100 - 986397354) & 0xBDA425BA) + 1097627016) >> 28);
  unsigned int v104 = ((2 * v103) & 0xC6B5EB7A ^ 0x1A) + (v103 ^ 0xE35AF5B0);
  unsigned int v105 = 492085891 * (v102 ^ 0x6684C642) - ((984171782 * (v102 ^ 0x6684C642)) & 0x6363739C) - 1313752626;
  unsigned int v106 = (((1986118144 * (v90 ^ 0xC830711) - ((-322731008 * (v90 ^ 0xC830711)) & 0xC06D1800) - 533295979) ^ 0xE0368C95) & 0xFFFFFE00 | (v97 >> 23)) ^ 0x8B;
  int v107 = v106 - 2 * (v106 & 0x521D26FC ^ (v97 >> 23) & 0x14) - 769841432;
  unsigned int v108 = -1483399605 * v104 - ((1328168086 * v104 - 753289406) & 0xA60CD74A) - 1131198650;
  unsigned int v109 = ((-1799663310 * v95 - ((695640676 * v95 + 1887723172) & 0x779C6E70) - 200251765) ^ 0x3BCE3739) & 0xFFFFFFFE | ((((-1799663310 * v95 - 1203622062) & 0xA585CF7C) - 1247651993 * v95 - 786693992) >> 31);
  int v110 = ((2 * v109) & 0x7BD3F2AE) + (v109 ^ 0x3DE9F957);
  unsigned int v111 = 1968343564 * (v102 ^ 0x6684C642) - ((-358280168 * (v102 ^ 0x6684C642)) & 0xC3E20E88);
  unsigned int v112 = ((v104 + (v107 ^ 0xB499E0AA ^ v102) + 480578115) ^ 0xFEFFD32A)
       - v110
       + ((2 * (v104 + (v107 ^ 0xB499E0AA ^ v102) + 480578115)) & 0xFDFFA654);
  unsigned int v113 = -162153024 * v112 - ((-324306048 * v112 - 243681920) & 0xB0F67E80) + 1362631222;
  unsigned int v114 = (v113 ^ 0x587B3F76) & 0xFFFFFFC0 | ((735663863 * v112
                                            - ((1471327726 * v112 + 264627926) & 0x5328AF48)
                                            + 1903643407) >> 26);
  int v115 = (v114 ^ 0xA) - ((2 * v114) & 0x23036420) + 293712400;
  unsigned int v116 = (((-224147104 * v104 - ((625447616 * v104 + 590800960) & 0x3D611780) - 800325634) ^ 0x9EB08BDE) & 0xFFFFFFE0 | (v108 >> 27)) ^ 0xA;
  int v117 = v116 - 2 * (v116 & 0x712C0C5F ^ (v108 >> 27) & 5) - 248771494;
  unsigned int v118 = ((1507413208 * v110 - ((867342768 * v110 + 1705088304) & 0x4F39F650)) & 0xFFFFFFF8 | ((-348444261 * v110
                                                                                              - ((1450595126 * v110
                                                                                                + 1823748774) & 0x615662A4u)
                                                                                              + 1728400037) >> 29))
       - 630340160;
  unsigned int v119 = (v117 ^ 0xF12C0C5A)
       + ((((v111 - 504297659) ^ 0xE1F10745) & 0xFFFFFFFC | (v105 >> 30)) ^ 0x6DE3BD4A)
       + ((2 * (v111 - 504297659)) & 0xDBC77A90 ^ 0xC3C20A80);
  unsigned int v120 = v119 + (v118 ^ 0xB92716D3) + ((2 * v118) & 0x3D77DBFC ^ 0xD31D258) - 211790662;
  int v121 = ((2 * (v119 - 1843641672)) & 0x5D7FEFF6) + ((v119 - 1843641672) ^ 0x2EBFF7FB);
  unsigned int v122 = v115 ^ (v120 - ((2 * v120) & 0xB94B16FE) + 1554353023);
  HIDWORD(v21) = v115 ^ 0x210;
  LODWORD(v21) = v113 ^ 0x587B3C00;
  unsigned int v123 = (((-1438646272 * v121 - ((1417674752 * v121 + 645922816) & 0x69800000) + 137322998) ^ 0xB4EF61F6) & 0xFFC00000 | ((600736425 * v121 - ((1201472850 * v121 - 1799640422) & 0xCF81A5BA) + 840869930) >> 10)) ^ 0x19F034;
  int v124 = (v123 - ((2 * v123) & 0x5623EDBC) - 1424886050) ^ ((v21 >> 10) - ((2 * (v21 >> 10)) & 0xB2338BD2) - 652622359);
  HIDWORD(v21) = v124 ^ 0x301867;
  LODWORD(v21) = v124 ^ 0xD6000000;
  int v125 = ((v21 >> 22) - ((2 * (v21 >> 22)) & 0x21855ABE) - 1866289825) ^ 0x706FEFCF;
  unsigned int v126 = (-921885487 * v125 - ((-1843770974 * v125) & 0xFAE35A52) - 42881751) ^ v122;
  int v127 = ((2 * v126) ^ 0x60AB288C) - ((2 * ((2 * v126) ^ 0x60AB288C)) & 0x27348F10) + 1939490697;
  v126 ^= 0xAC349D75;
  int v128 = v126 + (v127 & 0x38C21266 ^ 0x2D65FDFC) + ((2 * v127) & 0x318424C8 ^ 0x21040400) - 501743612;
  int v129 = v128 - 2 * (v128 & 0x136BCE0F ^ v126 & 1) - 1821651442;
  int v130 = v129 ^ v117;
  LODWORD(STACK[0x494]) = v129 ^ v115;
  int v131 = (v122 ^ 0x4D24396F)
       + (v129 ^ 0x6C9431F1)
       + 1
       - ((2 * ((v122 ^ 0x4D24396F) + (v129 ^ 0x6C9431F1) + 1)) & 0x168653C0)
       - 1958532640;
  unsigned int v132 = ((-1019281408 * (v130 ^ 0x6247C254) - ((-2038562816 * (v130 ^ 0x6247C254)) & 0xBE880000) + 1598295720) ^ 0x5F440EA8) & 0xFFFF0000 | ((-932265153 * (v130 ^ 0x6247C254) - ((-1864530306 * (v130 ^ 0x6247C254)) & 0xEFC7B944) + 2011421858) >> 16);
  unsigned int v133 = ((2 * v132) & 0xCAADE4BE ^ 0xE486) + (v132 ^ 0x655685BC);
  LODWORD(STACK[0x468]) = v129;
  unsigned int v134 = ((-268435456 * ((v129 ^ v115 ^ 0x82EA7C1E) & 7) - 939524096 * (v129 ^ v115 ^ 0x82EA7C1E) + 1025609613) ^ 0x3D218F8D) & 0xF8000000 | ((-407839463 * (v129 ^ v115 ^ 0x82EA7C1E) - ((1331804722 * (v129 ^ v115 ^ 0x82EA7C1E)) & 0x6C69C8BA) - 1238047651) >> 5);
  unsigned int v135 = ((2 * v134) & 0xAFF8BE1C ^ 0xB600E04) + (v134 ^ 0xD24DF82C);
  unsigned int v136 = ((876609536 * (v131 ^ 0x8B4329E0) - ((1753219072 * (v131 ^ 0x8B4329E0)) & 0xEC800000) - 162739603) ^ 0xF64CCA6D) & 0xFFC00000 | ((-1957866287 * (v131 ^ 0x8B4329E0) - ((379234722 * (v131 ^ 0x8B4329E0)) & 0x21635A54) + 280079658) >> 10);
  unsigned int v137 = ((2 * v136) & 0xFF37AFF6 ^ 0x8D6) + (v136 ^ 0xFF9FFB90);
  unsigned int v138 = ((714735616 * (v129 ^ 0x936BCE0E) - ((1429471232 * (v129 ^ 0x936BCE0E)) & 0x5F2C0000) - 1349066588) ^ 0xAF96E0A4) & 0xFFFE0000 | ((1818858829 * (v129 ^ 0x936BCE0E) - ((-657249638 * (v129 ^ 0x936BCE0E)) & 0xD03C0FA2) + 1746798545) >> 15);
  unsigned int v139 = (v138 ^ 0xDFB03FC7) + ((2 * v138) & 0xBF61DFF6 ^ 0x18070) + v135 + v133 - v137 - 1176531217;
  unsigned int v140 = -1985904479 * v135 - ((323158338 * v135 + 1776709732) & 0x473050C8) + 1485529238;
  unsigned int v141 = ((-1918894080 * v139 - ((457179136 * v139 + 889192448) & 0xDD000000) + 152924137) ^ 0xEE9D6FE9) & 0xFFE00000 | ((-742505363 * v139 - ((-1485010726 * v139 + 540385704) & 0xF1422E6E) - 2000951285) >> 11);
  int v142 = ((2 * v141) & 0x6F72DFFA ^ 0x120840) + (v141 ^ 0x37B67BDF);
  int v143 = 1107296256 * v135 - (((v135 << 26) + 1207959552) & 0x48000000) - 2003996090;
  unsigned int v144 = ((-116832896 * v133 - ((303205120 * v133 + 297298688) & 0x142AAE00) + 49384627) ^ 0xA155733) & 0xFFFFFF80 | ((-1007545717 * v133 - ((132392214 * v133 + 65237206) & 0x6CE5384) - 447159763) >> 25);
  int v145 = v144 ^ 0x7EFEFA0A;
  unsigned int v146 = (2 * v144) & 0xFDFDF496 ^ 0x82;
  unsigned int v147 = ((2 * ((v143 ^ 0x248D7246) & 0xFE000000 | (v140 >> 7))) & 0xC33E7AFE ^ 0x20E60A0)
       + (((v143 ^ 0x248D7246) & 0xFE000000 | (v140 >> 7)) ^ 0x60D80D2F);
  unsigned int v148 = -597694891 * v147 - ((952093866 * v147 + 494859690) & 0x487D3814) - 1291970849;
  unsigned int v149 = ((553648128 * v137 - ((1107296256 * v137 + 1241513984) & 0xA4000000) + 1998967821) ^ 0xD225D40D) & 0xFF000000 | ((1254474017 * v137 - ((-1786019262 * v137 - 1713644726) & 0xDC4925E6) - 1156415336) >> 8);
  unsigned int v150 = ((2 * v149) & 0xECBDFB3E ^ 0x9C4924) + (v149 ^ 0xF6B0D90D);
  LOBYTE(v149) = ((v69 & 1) - (v70 & 8) - 22) & 0x7B;
  unsigned int v151 = ((-80322113 * v142 - ((-160644226 * v142 - 172938630) & 0xE5AAC454) + 1840117607) ^ 0xF2D5622A) >> (v149 ^ 0x63);
  unsigned int v152 = ((v151 - ((2 * v151) & 0xBE565C96) + 1596665419) ^ 0x5F2B2E4B) >> (v149 ^ 0x6A);
  unsigned int v153 = ((2 * v152) & 0xEEF777FE) + (v152 ^ 0x777BBBFF);
  int v154 = -309554688 * v153 - 1940614656;
  unsigned int v155 = v153 - 545259520 * v142;
  int v156 = v145 + v146 - 2104948344 + v147 - v150 - v142 + 0x20000;
  unsigned int v157 = -351613019 * v150 - ((-703226038 * v150 + 284815114) & 0xD4577E86) - 223824184;
  int v158 = 1409286144 * v147 - ((671088640 * v147 + 671088640) & 0x48000000) - 113779217;
  unsigned int v159 = (1239945263 * v156 - 2 * ((1239945263 * v156 + 834519446) & 0x2A18E71D ^ (1239945263 * v156) & 1u) - 1680430926) >> 16;
  int v160 = ((2 * (v159 & 0x1ABD ^ 0x30360A18)) & 0x40082450) - (v159 & 0x1ABD ^ 0x30360A18) + 364522645;
  int v161 = 271515648 * v156 - ((6160384 * v156 + 53215232) & 0x18AE0000) - 840074116;
  unsigned int v162 = ((v159 & 0xE542 ^ 0xC102) + (v159 & 0x2402 ^ 0x984B2C05) - ((v159 & 0xE542 ^ 0xC102) & 0x3E3E3E3E)) ^ 0x98CA4D37;
  unsigned int v163 = ((2 * (v161 & 0xF66A0000 ^ 0xE6600000)) | 0x24783A06) - (v161 & 0xF66A0000 ^ 0xE6600000) + 1841554173;
  unsigned int v164 = 671088640 * v150 - ((1342177280 * v150 + 1342177280) & 0xE0000000) + 495407065;
  unsigned int v165 = v160 ^ 0x258C2C95 | (((2 * (v161 & 0x9950000 ^ 0x191D0204)) | 0xC8A0C1B4)
                            - (v161 & 0x9950000 ^ 0x191D0204)
                            + 464494374) ^ 0xF55862DE;
  unsigned int v166 = ((v162 | 0xD6662610) - (v162 | 0x2999D9EF) + 697948655) ^ 0xD6E7A622 | ((v163 & 0x9FC16E50 ^ 0xDC06251 | v163 & 0x603E91A8)
                                                                               - 1) ^ 0x7DDE7F50;
  unsigned int v167 = (v166 - ((2 * v166) & 0xBB8754D6) + 1573104235) ^ 0x5DC3AA6B | (v165 - ((2 * v165) & 0xCE8CC16C) - 414818122) ^ 0xE74660B6;
  unsigned int v168 = ((2 * v167) & 0xBE7BDFFC) + (v167 ^ 0x5F3DEFFE);
  unsigned int v169 = (v158 ^ 0xA537DDEF) & 0xFC000000 | (v148 >> 6);
  int v170 = v169 ^ 0x7B2F00DF;
  unsigned int v171 = (2 * v169) & 0xF77FF55E ^ 0x121F440;
  unsigned int v172 = -(v154 & 0xB8B47A00) - 154777344 * v155 - 1568373203;
  LODWORD(STACK[0x500]) = v130;
  LODWORD(STACK[0x480]) = v131;
  int v173 = v130 ^ v115 ^ v131;
  unsigned int v174 = (-1745435063 * v155 - ((804097170 * v155 - 1181985646) & 0xB44D8724) - 1225986597) >> 24;
  int v175 = v174 ^ 0x84;
  LODWORD(STACK[0x4A0]) = v173;
  if (v173 == -125478492) {
    int v175 = 33;
  }
  int v176 = (v175 & (v174 ^ 0x5A)) - ((2 * (v175 & (v174 ^ 0x5A))) & 0x1A);
  unsigned int v177 = ((2 * ((v164 ^ 0xF5874FD9) & 0xF8000000 | (v157 >> 5))) & 0x76F5FFDA ^ 0x6A0BBD0)
       + (((v164 ^ 0xF5874FD9) & 0xF8000000 | (v157 >> 5)) ^ 0xB82BA217);
  unsigned int v178 = ((v174 & 0x8E ^ 5) - (v174 & 0x50) - 230720400) ^ 0xF46F5E33;
  unsigned int v179 = 356336609 * v177 - ((712673218 * v177 + 920785766) & 0x3981B62A) + 942793928;
  unsigned int v180 = v172 & 0xDD1EDE00 ^ 0x241BCE91;
  unsigned int v181 = ((v172 & 0x610100 ^ 0x8949D6C3) + (v172 & 0x22802000) - 1) ^ 0x803D553;
  unsigned int v182 = (v176 + 984218637) ^ 0x3AA9FC0D | (v180 - 1) ^ 0xF801D290;
  int v183 = v170 + v171 + v177 - v155 - v168 + 228194072;
  int v184 = (((2 * v178) & 0x204C80) - v178 + 401443263) ^ 0x11BDABA3 | (((2 * v181) | 0x6CC4C1FE) - v181 + 1235066625) ^ 0x3768426E;
  unsigned int v185 = ((2 * v182) & 0x73BE693C) + (v182 ^ 0xB9DF349E) + (v184 ^ 0xFC9FF773) + ((2 * v184) & 0xF93FEEE6);
  int v186 = v185 - ((2 * v185 + 318875614) & 0x1AD27B2C) - 689303163;
  unsigned int v187 = (~(1374320446 * v183 + 615976110) | 0x6E98C1B) + 687160223 * v183 - 1897480118;
  int v188 = -1175453696 * v183 - ((870318080 * v183 + 182452224) & 0x28E00000) + 2044945369;
  unsigned int v189 = ((-585842332 * v168 - 2 * ((-585842332 * v168 + 336052936) & 0x7E4823A4 ^ (-585842332 * v168) & 4)) & 0xFFFFFFFC | ((-146460583 * v168 - ((1854562482 * v168 + 168026468) & 0x4FBC1CBE) - 1394606319) >> 30))
       + 307226216;
  unsigned int v190 = ((2 * v189) & 0xFF9E9F1E ^ 0xFC900700) + (v189 ^ 0x81876C2F);
  unsigned int v191 = (((260308992 * v177 - ((520617984 * v177 + 1301807104) & 0xCDE00000) + 230503192) ^ 0xE6F13318) & 0xFFFC0000 | (v179 >> 14)) ^ 0x27303;
  int v192 = v191 - 2 * (v191 & 0x4244CF5D ^ (v179 >> 14) & 0x10) - 1035677875;
  unsigned int v193 = ((2 * ((v188 ^ 0x147363D9) & 0xFFF00000 | (v187 >> 12))) & 0xA3CFFBAE ^ 0xF9126)
       + (((v188 ^ 0x147363D9) & 0xFFF00000 | (v187 >> 12)) ^ 0xD1E03564);
  unsigned int v194 = (((v186 ^ 0x8D693D96) - v190 - ((2 * ((v186 ^ 0x8D693D96) - v190) - 6381794) & 0xDF4FC908) - 277400557) ^ 0xC546335C)
       - v193
       - 773325353;
  int v195 = (v192 ^ 0x4F2DF2DB ^ v186) - (v190 + v193) + 1370967398;
  int v196 = v195 - ((2 * v195) & 0x597A221E) + 750588175;
  unsigned int v197 = (1298035837 * (((2 * v194) & 0xABFFFBD6) + (v194 ^ 0x55FFFDEB))
        - ((448588026 * (((2 * v194) & 0xABFFFBD6) + (v194 ^ 0x55FFFDEB)) + 256970882) & 0x12DAF9EE)
        - 1592392392) ^ v196;
  LODWORD(STACK[0x454]) = v197;
  unsigned int v198 = (v197 ^ 0xA5D06DF8) - ((2 * (v197 ^ 0xA5D06DF8) - 518696158) & 0xAC03FA7E) - 963860784;
  int v199 = v196 ^ 0x2CBD110F;
  LODWORD(STACK[0x558]) = v198;
  int v200 = v198 ^ 0x5601FD3F;
  unsigned int v201 = v193 + 773325353 + v200 - ((2 * (v193 + 773325353 + v200)) & 0xC3C9CBE2);
  int v202 = 2 * ((v200 & v199) - ((2 * (v200 & v199)) & 0x1675A92E)) + 376809774;
  unsigned int v203 = ((2 * (v190 - 2144292751 + v200)) & 0xB99EF1F8) + ((v190 - 2144292751 + v200) ^ 0xDCCF78FC);
  unsigned int v204 = ((v200 + v199) ^ 0x6FDF1F9D)
       + ((2 * (v200 + v199)) & 0xDFBE3F3A)
       + (v202 ^ 0xB6F5AE63)
       + ((2 * v202) & 0xBEFFF164 ^ 0xD314AFBB);
  int v205 = v204 + 1 - 2 * ((v204 + 799070487) & 0x2BC36939 ^ (v204 + 1) & 1) - 1687928242;
  unsigned int v206 = -1679190127 * v203 - ((936587042 * v203 + 965192328) & 0x57E99D86) + 146318343;
  unsigned int v207 = -(((v203 << 28) + 0x40000000) & 0xAAAAAAAA) - 2013265920 * v203 - 167381828;
  LODWORD(STACK[0x47C]) = v205;
  unsigned int v208 = v205 ^ 0xABC36938;
  unsigned int v209 = -835817011 * v200 - ((-1671634022 * v200) & 0xA78E03F8) - 741932548;
  LODWORD(STACK[0x4D8]) = v203;
  v203 += 590382852;
  LODWORD(STACK[0x478]) = v203;
  if (v203 >= 0xF510DE7C) {
    int v210 = 1118286080;
  }
  else {
    int v210 = 934842236;
  }
  LODWORD(STACK[0x4E0]) = v210;
  unsigned int v211 = v201 - 505092623;
  LODWORD(STACK[0x568]) = v211;
  unsigned int v212 = v211 ^ 0xE1E4E5F1;
  unsigned int v213 = (~(965091214 * (v211 ^ 0xE1E4E5F1)) | 0xDB24B71B) + 1019416519 * (v211 ^ 0xE1E4E5F1) - 1838308237;
  unsigned int v214 = v207 ^ 0xD605F4BC | (v206 >> 5);
  int v215 = 1558419968 * v200 - ((432485376 * v200) & 0x11BBE800);
  unsigned int v216 = ((1643700224 * v212 - ((66174976 * v212) & 0x29C00000) - 1797255233) ^ 0x94E00FBF) & 0xFFFFE000 | (v213 >> 19);
  unsigned int v217 = ((2 * v216) & 0xFBB7FDB6 ^ 0x2492) + (v216 ^ 0x7DDBEC96);
  int v218 = 2
       * ((v214 ^ 0x1C2C69E8)
        + (v214 ^ 0x9DF3E72)
        + ((2 * v214) & 0x6EFECFF6 ^ 0x7D41B31B)
        + ((2 * v214) & 0x3AE79F3C ^ 0x2A70C2C))
       - 1273548610;
  unsigned int v219 = ((2 * v214) & 0xD6F8D8DA ^ 0x2B848C8) + (v214 ^ 0xEA23CA1B) + (v218 ^ 0x7FF83FEF);
  unsigned int v220 = v219
       + ((2 * v218) & 0xFFF07FDC)
       - 2 * ((v219 + ((2 * v218) & 0xFFF07FDC) + 344675236) & 0x6D504D67 ^ v219 & 2)
       + 31170825;
  unsigned int v221 = (((v215 - 1998719919) ^ 0x88DDF451) & 0xFFFFFE00 | (v209 >> 23)) ^ 0x1A7;
  unsigned int v222 = ((581304320 * v208 - ((1162608640 * v208) & 0xDD140000) - 292844490) ^ 0xEE8B8C36) & 0xFFFE0000 | ((-1653501613 * v208 - ((987964070 * v208) & 0xA455E93C) - 768936802) >> 15);
  unsigned int v223 = ((2 * v222) & 0x1F9E7FF6 ^ 0x248A2) + (v222 ^ 0x8FCE9BAE);
  unsigned int v224 = v217 - 2111569627 + ((v221 - 2 * (v221 & 0x567BCD5B ^ (v209 >> 23) & 8) - 696529581) ^ 0xBB2B8036 ^ v220);
  unsigned int v225 = (v224 ^ 0xF3FF79AC) - v223 + ((2 * v224) & 0xE7FEF358);
  unsigned int v226 = -1797732091 * v225 - ((699503114 * v225 + 1490406678) & 0xEF45D14A) - 1542598864;
  unsigned int v227 = (((335544320 * v225 - ((671088640 * v225 + 1476395008) & 0x40000000) - 850167959) ^ 0xA1537769) & 0xFC000000 | (v226 >> 6)) ^ 0x1DE8BA2;
  unsigned int v228 = ((1501495296 * v217 - ((855506944 * v217 + 1555431424) & 0x5A200000) - 1687456902) ^ 0x2D10737A) & 0xFFFF0000 | ((-1067558529 * v217 - ((-2135117058 * v217 + 2142297270) & 0x8E955836) + 119741046) >> 16);
  unsigned int v229 = ((2 * v228) & 0xEEFFEC6A ^ 0x18C00) + (v228 ^ 0x777F317F);
  unsigned int v230 = ((1020903016 * (v220 ^ 0x6D504D65) - ((2041806032 * (v220 ^ 0x6D504D65)) & 0x8B72FAC0) - 977699482) ^ 0xC5B97D66) & 0xFFFFFFF8 | ((-2019870771 * (v220 ^ 0x6D504D65) - ((255225754 * (v220 ^ 0x6D504D65)) & 0x196F63F2) + 213365241) >> 29);
  int v231 = 2 * v229 + 285217686;
  int v232 = v231 ^ 0x150B0533;
  unsigned int v233 = (2 * v231) & 0xD5E9F598;
  unsigned int v234 = ((-2124698916 * v223 - ((45569464 * v223 + 543075480) & 0x4384E350)) & 0xFFFFFFFC | ((542567095 * v223
                                                                                             - ((1085134190 * v223
                                                                                               - 937972954) & 0xF67E21D8)
                                                                                             + 1598744191) >> 30))
       - 1309554700;
  unsigned int v235 = ((2 * v234) & 0xFE6FFFD6 ^ 0x4204E352) + (v234 ^ 0xDEF58E42);
  int v236 = v227 - 2 * (v227 & 0x68BE9B1C ^ (v226 >> 6) & 8) - 390161644;
  unsigned int v237 = v236 ^ 0xE8BE9B14;
  unsigned int v238 = 1896977585 * (v236 ^ 0xE8BE9B14) - ((-501012126 * (v236 ^ 0xE8BE9B14)) & 0xA81E26BA) - 737209507;
  unsigned int v239 = v229 - 2004874805 + ((v230 - ((2 * v230) & 0xF6934CF8) + 2068424316) ^ 0x93F73D68 ^ v236);
  unsigned int v240 = v239 ^ 0xEDFFB55F;
  unsigned int v241 = (2 * v239) & 0xDBFF6ABE;
  unsigned int v242 = -888650713 * v229 - ((34637902 * v229 + 48681946) & 0x3B053C0) + 390829005;
  int v243 = v232 - v233 - v235 + v240 + v241 + 1884436128;
  unsigned int v244 = (((573740576 * v237 - ((73739328 * v237) & 0x1EDFDA40) + 258993469) ^ 0xF6FED3D) & 0xFFFFFFE0 | (v238 >> 27)) ^ 0x1A;
  unsigned int v245 = (~(110100480 * v235 + 30408704) | 0xF9BFFFFF) + 457703424 * v235;
  unsigned int v246 = (740364444 * v229 - ((1480728888 * v229 - 1415884952) & 0xB2176DF8) + 785997489) ^ 0xD90BB6FD;
  unsigned int v247 = (v246 & 0xFFFFFFFC | (v242 >> 30))
       - 2 * ((v246 & 0x3519329C | (v242 >> 30) & 0x3519329D) ^ v246 & 0x10)
       + 890843789;
  unsigned int v248 = ((1634190592 * v243 - ((-1026586112 * v243 + 797358592) & 0xF46ED200) - 1845836219) ^ 0xFA376945) & 0xFFFFFF00 | ((123824069 * v243 - ((247648138 * v243 - 886077766) & 0x96F65B64) + 823324943) >> 24);
  unsigned int v249 = ((2 * v248) & 0x4EFEEEF2 ^ 0x92) + (v248 ^ 0xA77F77B2);
  int v250 = v244 - ((2 * v244) & 0x4F34E7EA) + 664433653;
  unsigned int v251 = -1510210467 * (v250 ^ 0x279A73F5) - ((1274546362 * (v250 ^ 0x279A73F5)) & 0x8BD9497A) + 1173136573;
  unsigned int v252 = ((1752761193 * v235 - ((1358038738 * v235 + 2011860794) & 0x56039722) - 420015314) >> 13) ^ 0x5580E;
  int v253 = (v252 | (v245 + 1074773267) ^ 0x327BD12)
       - 2 * ((v252 | (v245 + 1074773267) ^ 0x327BD12) & 0x634B525F ^ v252 & 0xA);
  char v254 = ((2 * ((v238 >> 27) & 0x1E ^ 0x5A)) | 0x54) - ((v238 >> 27) & 0x1E ^ 0x5A) + 86;
  unsigned int v255 = -805306368 * (v250 ^ 0x279A73F5) - ((-1610612736 * (v250 ^ 0x279A73F5)) & 0xBFFFFFFF);
  unsigned int v256 = (v253 + 1665880661) ^ 0xA27ACFF6 ^ ((v247 ^ 0x12834178 ^ v250)
                                           + 1484818567
                                           + v249
                                           - ((2 * ((v247 ^ 0x12834178 ^ v250) + 1484818567 + v249)) & 0x82633B46)
                                           - 1053712989);
  unsigned int v257 = ((-54826807 * v256 - ((-109653614 * v256) & 0xBFF19BDE) - 537342481) ^ 0xDFF8CDEF) >> (v254 ^ 0xEA);
  unsigned int v258 = v257 - ((2 * v257) & 0xF0012B72);
  unsigned int v259 = ((2 * ((v255 - 780566289) ^ 0xD17980EF | (v251 >> 4))) & 0xFAF6E9FE ^ 0x8B48096)
       + (((v255 - 780566289) ^ 0xD17980EF | (v251 >> 4)) ^ 0xF925BEB4);
  LOBYTE(v255) = v254 ^ 0xF4;
  unsigned int v260 = ((-869343120 * ((v253 + 1665880661) ^ 0x634B5255)
         - ((-1738686240 * ((v253 + 1665880661) ^ 0x634B5255)) & 0x8EAD9220)
         + 1196869909) ^ 0x4756C915) & 0xFFFFFFF0 | ((1287843335 * ((v253 + 1665880661) ^ 0x634B5255)
                                                    - ((-1719280626 * ((v253 + 1665880661) ^ 0x634B5255)) & 0x94CA466E)
                                                    + 1248142135) >> 28);
  unsigned int v261 = (((v258 - 134179399) ^ 0xF80095B9) >> v255) - ((2 * (((v258 - 134179399) ^ 0xF80095B9) >> v255)) & 0x32);
  unsigned int v262 = 44593339 * v249 - ((89186678 * v249 + 275617082) & 0xF04885CC) + 5967235;
  unsigned int v263 = ((1356953088 * v249 - ((-1581061120 * v249 - 617974784) & 0xE360B800) + 1598395918) ^ 0xF1B05C0E) & 0xFFFFFE00 | (v262 >> 23);
  int v264 = (v263 ^ 0xF0) - 2 * ((v263 ^ 0xF0) & 0x2822252E ^ (v262 >> 23) & 0xE);
  unsigned int v265 = ((2 * v260) & 0xFBBD7F74) + (v260 ^ 0x7DDEBFBE) - v259;
  int v266 = v265 - ((2 * v265 + 2134469258) & 0x6F495406) + 927031112;
  v264 -= 1474157280;
  unsigned int v267 = v264 ^ 0xA8222520;
  unsigned int v268 = 2
       * (((v264 ^ 0xA8222520) & (v266 ^ 0xB7A4AA03)) - ((2 * ((v264 ^ 0xA8222520) & (v266 ^ 0xB7A4AA03))) & 0x2A3120E6))
       - 1439620890;
  unsigned int v269 = ((2 * (v259 + 42240769 + (v264 ^ 0xA8222520))) & 0xD1FDFFFE)
       + ((v259 + 42240769 + (v264 ^ 0xA8222520)) ^ 0x68FEFFFF);
  unsigned int v270 = ((-219307228 * v256) ^ 0xEBFFE8CF)
       + ((-438614456 * v256) & 0xD7FFD198)
       + ((v261 + 25) ^ 0xAF7FD6E4)
       + ((2 * (v261 + 281)) & 0x1FA ^ 0x32);
  int v271 = v270 - ((2 * v270 + 1224769640) & 0x412FFDFC) - 2062008526;
  unsigned int v272 = (v266 ^ v264 ^ 0x1F868F23) + (v268 ^ 0x972E4759) - 1025468351 + ((2 * v268) & 0x7A3ECF7C ^ 0x5022414C);
  int v273 = (v272 ^ 0x36B7FB7D) + ((2 * v272) & 0x6D6FF6FA) - 918027133 + (v271 ^ 0x2097FEFE);
  int v274 = v273 - ((2 * v273) & 0x263A550E);
  int v275 = (v271 ^ 0x2097FEFE)
       + 1391156377 * v269
       - 293315431
       - ((2 * ((v271 ^ 0x2097FEFE) + 1391156377 * v269 - 293315431)) & 0x3BE87886)
       - 1644938173;
  v274 += 320678535;
  int v276 = (v275 ^ v274 ^ 0x42A11380) + 1;
  unsigned int v277 = v276 + v267 - 1658338315 + (~(2 * (v276 + v267)) | 0xC5B07815);
  int v278 = v275 ^ v274 ^ 0x6C691E6;
  LODWORD(STACK[0x488]) = v278 ^ v271;
  int v279 = v276 + (v274 ^ 0x131D2A87) - ((2 * (v276 + (v274 ^ 0x131D2A87))) & 0x2330F8EA) + 295206005;
  LODWORD(STACK[0x4A8]) = v279;
  HIDWORD(v280) = v275 ^ ~v274;
  LODWORD(v280) = (1810100545 * (v275 ^ v274 ^ 0xBD5EEC7F)
                 - ((1472717442 * (v275 ^ v274 ^ 0xBD5EEC7F)) & 0x718A7BF8)
                 - 1195033092) ^ 0xB8C53DFC;
  int v281 = (v280 >> 2) - ((2 * (v280 >> 2)) & 0x9B839268) + 1304545588;
  LODWORD(STACK[0x530]) = v277 + 1;
  unsigned int v282 = (((-(((v277 + 1) << 29) ^ 0x40000000) - 817267585) ^ 0xEF497C7F) & 0xE0000000 | ((1570816535
                                                                                         * ((v277 + 1) ^ 0x9D27C3F5)
                                                                                         - ((-1153334226
                                                                                           * ((v277 + 1) ^ 0x9D27C3F5)) & 0x8B991106)
                                                                                         + 1171032195) >> 3)) ^ 0x8B99110;
  LODWORD(STACK[0x464]) = v278;
  LODWORD(STACK[0x49C]) = v271;
  HIDWORD(v280) = v278 ^ ~v271;
  LODWORD(v280) = (-2094532911 * (v278 ^ v271 ^ 0x9B0F8367)
                 - 1377939456
                 - ((105901474 * (v278 ^ v271 ^ 0x9B0F8367)) & 0x5BBCA006)
                 + 3) ^ 0xADDE5000;
  unsigned int v283 = v282 - ((2 * v282) & 0xC0DC4BCA);
  int v284 = (v280 >> 3) - ((2 * (v280 >> 3)) & 0x2E9EF81C) + 391085070;
  int v285 = v284 ^ 0x174F7C0E;
  unsigned int v286 = -826717667 * (v284 ^ 0x174F7C0E) - ((-1653435334 * (v284 ^ 0x174F7C0E)) & 0x8727F72E) + 1133771671;
  unsigned int v287 = ((((~(-310030720 * (v279 ^ 0x11987C75)) | 0x7BC6F9FF) + 1992468288 * (v279 ^ 0x11987C75) + 1109164855) | 1) ^ 0x421C8337) & 0xFFFFFFC0 | ((1037765277 * (v279 ^ 0x11987C75) - ((2075530554 * (v279 ^ 0x11987C75)) & 0x442033CAu) + 571480549) >> 26);
  unsigned int v288 = ((2 * v287) & 0xC6B9FFEE) + (v287 ^ 0x635CFFFF);
  int v289 = v281 ^ v284 ^ 0x3AE090DF;
  v283 += 1617831397;
  int v290 = v283 ^ 0x606E25E5;
  unsigned int v291 = ((2 * ((v283 ^ v289) - v288 + 1667039223)) & 0xF7FF7166) + (((v283 ^ v289) - v288 + 1667039223) ^ 0xFBFFB8B3);
  unsigned int v292 = -652470813 * v291 - ((842542022 * v291 + 1191777422) & 0x5C93BD32) + 1372481760;
  int v293 = 59574554 * (v283 ^ 0x606E25E5);
  unsigned int v294 = (v293 & 0xF2269F76) - 29787277 * v290;
  int v295 = v293 - ((119149108 * v290) & 0x368D6374) - 1689865798;
  int v296 = v295 & 4;
  unsigned int v297 = (v295 & 0xFFFFFFFE | ((v294 + 116174916) >> 31)) ^ 0x9B46B1BA;
  int v298 = v297 - 2 * (v297 & 0x221A48C5 ^ v296) + 572147905;
  unsigned int v299 = (((1468792832 * v291 - ((-1357381632 * v291 + 1379401728) & 0xEA880000) + 509807486) ^ 0xF5470B7E) & 0xFFFC0000 | (v292 >> 14)) ^ 0x2B927;
  unsigned int v300 = v299 - ((2 * v299) & 0xE11C0CBC) - 259127714;
  unsigned int v301 = -1879532367 * (v300 ^ 0xF08E065E) - 1307093984 - ((535902562 * (v300 ^ 0xF08E065E)) & 0x642EA842);
  unsigned int v302 = ((-1525776384 * v285 - ((1243414528 * v285) & 0xB2000000) - 654297474) ^ 0xD900367E) & 0xFFFF8000 | (v286 >> 17);
  unsigned int v303 = ((2 * v302) & 0xFFBFF36C ^ 0x4300) + (v302 ^ 0x7FDFD87F);
  unsigned int v304 = ((1800536064 * v288 - ((-693895168 * v288 - 1950089216) & 0xE2500000) - 1223997908) ^ 0xF129462C) & 0xFFFE0000 | ((-2110409303 * v288 - ((74148690 * v288 + 1962722786) & 0xF044EB22) + 849401986) >> 15);
  unsigned int v305 = ((2 * v304) & 0xAFFF75B6 ^ 0x36080) + (v304 ^ 0x57FE4A9F);
  unsigned int v306 = 1843957469 * v305 - ((-607052358 * v305 + 842821090) & 0xF137444C) - 1850091241;
  unsigned int v307 = (v298 ^ 0xD2944E9F ^ v300) - (v305 + v303) - 673205103;
  unsigned int v308 = ((2 * v307) & 0xFEB37AFE) + (v307 ^ 0xFF59BD7F);
  unsigned int v309 = -1975125367 * v308 - ((344716562 * v308 + 1499537938) & 0xBE66C81A) - 1947994858;
  HIDWORD(v280) = ~(v292 >> 14);
  LODWORD(v280) = (v301 + 1) ^ 0xB2175420;
  unsigned int v310 = ((1327401336 * v303 - ((-1640164624 * v303 - 1978066592) & 0xA922D530) - 1717700786) ^ 0xD4916A9E) & 0xFFFFFFF8 | ((-1981558481 * v303 - ((331850334 * v303 - 1321000148) & 0x8922EF84) + 489883992) >> 29);
  int v311 = (v310 ^ 2) - ((2 * v310) & 0x50AE682);
  int v312 = (v280 >> 3) - ((2 * (v280 >> 3)) & 0x4EC864C) + 41304870;
  int v313 = v312 ^ 0x2764326;
  unsigned int v314 = -2097495347 * (v312 ^ 0x2764326) - ((99976602 * (v312 ^ 0x2764326)) & 0x40249168) - 1609414476;
  int v315 = v311 - 2105183423;
  unsigned int v316 = ((v312 ^ 0x2764326) & ((v311 - 2105183423) ^ 0x82857341))
       - ((2 * ((v312 ^ 0x2764326) & ((v311 - 2105183423) ^ 0x82857341))) & 0x53EDA0B6);
  unsigned int v317 = -1085202432 * v308 - ((2124562432 * v308 + 608321536) & 0xB8824000) - 295548856;
  int v318 = 498728960 * v305 - ((997457920 * v305 + 1539571712) & 0x46FC0000) + 291517934;
  unsigned int v319 = ((v317 ^ 0xDC412848) & 0xFFFFE000 | (v309 >> 19)) ^ 0xBE6;
  int v320 = v319 - 2 * (v319 & 0x6B0960F ^ (v309 >> 19) & 8) + 112236039;
  unsigned int v321 = ((v318 ^ 0xA37E35EE) & 0xFFFE0000 | (v306 >> 15)) ^ 0x1F137;
  unsigned int v322 = (v315 ^ 0x80F33067 ^ v312)
       + ((2 * v316 - 739401546) ^ 0xAC325B4C)
       - 2145385466
       + ((2 * (2 * v316 - 739401546)) & 0xFFBFF7F4 ^ 0xA79B4164);
  unsigned int v323 = v322 - ((2 * v322) & 0xD4FDE7CE) - 360778777;
  unsigned int v324 = v321 - ((2 * v321) & 0x9D96200A) + 1321930757;
  int v325 = v324 ^ 0x4ECB1005;
  unsigned int v326 = 901433759 * (v324 ^ 0x4ECB1005) - ((1802867518 * (v324 ^ 0x4ECB1005)) & 0x810F1252) - 1064859351;
  unsigned int v327 = v324 ^ v320 ^ 0xA20575E5 ^ v323;
  unsigned int v328 = -1895857437 * v327 - ((503252422 * v327) & 0x189BE4E6) + 206434931;
  int v329 = -1049526272 * v327 - ((48431104 * v327) & 0x238C0000);
  unsigned int v330 = ((-1757413376 * (v320 ^ 0x6B09607) - ((780140544 * (v320 ^ 0x6B09607)) & 0xC9800000) - 455774119) ^ 0xE4D57059) & 0xFFC00000 | ((-1046001059 * (v320 ^ 0x6B09607) - ((-2092002118 * (v320 ^ 0x6B09607)) & 0xE6297032) + 1930737689) >> 10);
  unsigned int v331 = ((2 * v330) & 0xDEFFE76E ^ 0x39824C) + (v330 ^ 0xEF633699);
  unsigned int v332 = (((v329 - 1849283673) ^ 0x91C62BA7) & 0xFFFF8000 | (v328 >> 17)) ^ 0x626;
  unsigned int v333 = ((-1218890784 * v325 - ((1857185728 * v325) & 0x8CAE8D40) + 1180124861) ^ 0x465746BD) & 0xFFFFFFE0 | (v326 >> 27);
  unsigned int v334 = (((-175793664 * v313 - ((-351587328 * v313) & 0x81B4CC00) + 1088055063) ^ 0x40DA6717) & 0xFFFFFE00 | (v314 >> 23)) ^ 0x140;
  int v335 = v334 - ((2 * v334) & 0x590F3CA) - 2100790811;
  unsigned int v336 = v331 + 276827209 + (v335 ^ 0x82C879E5);
  unsigned int v337 = v331 + 276827209 + (((v333 ^ 0x18) - ((2 * v333) & 0x634D064A) + 832996133) ^ 0xB36EFAC0 ^ v335);
  unsigned int v338 = v332 - ((2 * v332) & 0x83F09618) - 1040692468;
  unsigned int v339 = (v336 ^ 0xAFB19CBF) + ((2 * v336) & 0x5F63397E) + 1347314497 + (v338 ^ 0xC1F84B0C);
  unsigned int v340 = v338 ^ (v337 - ((2 * v337) & 0x69789306) + 884754819) ^ 0xAC29AA02 ^ (((2 * v339) & 0x67F63F8E)
                                                                             + (v339 ^ 0xB3FB1FC7)
                                                                             - ((2
                                                                               * (((2 * v339) & 0x67F63F8E)
                                                                                + (v339 ^ 0xB3FB1FC7))
                                                                               + 909056416) & 0xB2DB511A)
                                                                             + 1954887005);
  unsigned int v341 = v340 - ((2 * v340 - 1701039570) & 0xD5A89B9E);
  LODWORD(STACK[0x520]) = v341 - 1205704986;
  LODWORD(STACK[0x578]) = ((v341 - 1205704986) ^ 0x6AD44DCF)
                        + (v338 ^ 0xC1F84B0C)
                        - ((2 * (((v341 - 1205704986) ^ 0x6AD44DCF) + (v338 ^ 0xC1F84B0C))) & 0x69716264)
                        - 1262964430;
  LODWORD(STACK[0x548]) = ((v341 - 1205704986) ^ 0x952BB230)
                        + v331
                        - ((2 * (((v341 - 1205704986) ^ 0x952BB230) + v331) + 553654420) & 0xA84544DC)
                        + 1688383160;
  uint64_t v342 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + v7 + 1706))(1032);
  STACK[0x9D0] = v342;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((27 * (v342 == 0)) ^ v7)))();
}

uint64_t sub_10019E9F8@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v10 = STACK[0x560];
  int v11 = STACK[0x4F0];
  LODWORD(STACK[0x420]) = (STACK[0x4E8] & LODWORD(STACK[0x4F0]))
                        - ((2 * (STACK[0x4E8] & LODWORD(STACK[0x4F0]))) & 0xA24107DE)
                        - 786398225;
  LODWORD(STACK[0x418]) = (v11 | LODWORD(STACK[0x4F8])) - ((2 * (v11 | LODWORD(STACK[0x4F8]))) & 0xE2182546) - 250867037;
  unsigned int v12 = STACK[0x550];
  LODWORD(STACK[0x4E8]) = LODWORD(STACK[0x550]) >> 8;
  LODWORD(STACK[0x448]) = HIBYTE(v12) ^ 0xEF9384C4;
  LODWORD(STACK[0x438]) = HIWORD(v12) ^ 0xF3640A8A;
  int v13 = LODWORD(STACK[0x4D8]) + LODWORD(STACK[0x4E0]) + v4 - 344459384;
  LODWORD(STACK[0x4D8]) = v13 - ((2 * v13) & 0x2504FAB0) + 310541656;
  LODWORD(STACK[0x404]) = v3 - 1205704960;
  unsigned int v14 = STACK[0x520];
  int v15 = LODWORD(STACK[0x520]) ^ v6;
  int v16 = STACK[0x578];
  int v17 = LODWORD(STACK[0x548]) ^ (v7 | 0x6E);
  LODWORD(STACK[0x414]) = v17 - 449817616 + v8 + 1398804763 + (~(2 * (v17 - 449817616 + v8)) | 0x593FDDCB);
  unsigned int v18 = (((2 * (v15 & 0x684CEC41 ^ 0x4800CC00)) | 0x87B83528) - (v15 & 0x684CEC41 ^ 0x4800CC00) - 1138498196) ^ 0x3DC9AD4 | v15 & 0x97B313BE ^ 0x97900300;
  int v19 = v18 - ((2 * v18) & 0x5E896580) + 793031360;
  LODWORD(STACK[0x428]) = v19;
  int v20 = v19 ^ 0x2F44B2C0;
  unsigned int v21 = 1892111955 * (v19 ^ 0x2F44B2C0) - ((26127526 * (v19 ^ 0x2F44B2C0)) & 0x2F9DAF8) - 2122519172;
  int v22 = -1259183163 * v17 - ((1776600970 * v17) & 0x5485065C) + 709002030;
  unsigned int v23 = (((-1933756032 * (v16 ^ v5) - ((427455232 * (v16 ^ v5)) & 0xDB75EE00) + 1840969498) ^ 0x6DBAF71A) & 0xFFFFFF80 | ((119110259 * (v16 ^ v5) - ((238220518 * (v16 ^ v5)) & 0xED18EB58) + 1988916652) >> 25)) ^ 0x3B;
  unsigned int v24 = (1811939328 * v2 - ((-671088640 * v2) & 0xDFFFFFFF) + 1824568893) ^ 0x6CC0B63D | ((-292073701 * v2
                                                                                         - ((-584147402 * v2) & 0xB071846C)
                                                                                         + 1480114742) >> 6);
  int v25 = -228342528 * v17 - ((80185856 * v17) & 0x14226C00);
  unsigned int v26 = v23 - ((2 * v23) & 0xB9732648) + 1555665700;
  unsigned int v27 = ((-899678208 * v20 - ((348127232 * v20) & 0x4C800000) - 1505034311) ^ 0xA64AFFB9) & 0xFFE00000 | (v21 >> 11);
  unsigned int v28 = ((2 * v27) & 0xFFBDDBDC ^ 0x205B18) + (v27 ^ 0xFFCEC273);
  unsigned int v29 = ((v25 + 168900113) ^ 0xA113611) & 0xFFFFFF00 | HIBYTE(v22);
  unsigned int v30 = ((2 * v29) & 0xFB7EE7FE ^ 0x54) + (v29 ^ 0xFDBF73D5);
  unsigned int v31 = ((2 * v24) & 0xFDBF7BDE ^ 0x814210) + (v24 ^ 0xFFBF5EE7) - v30;
  int v32 = v31 - 731394840 + ~(2 * ((v31 + 2128590352) & 0x558816DF ^ v31 & 8));
  int v33 = v26 ^ 0x5CB99324;
  unsigned int v34 = 990449079 * (v26 ^ 0x5CB99324) - ((1980898158 * (v26 ^ 0x5CB99324)) & 0xA32550EC) - 778917770;
  unsigned int v35 = 2 * (((v32 ^ 0xD58816D7) & (v26 ^ 0x5CB99324)) - ((2 * ((v32 ^ 0xD58816D7) & (v26 ^ 0x5CB99324))) & 0x3DA41D3A))
      + 1034165562;
  unsigned int v36 = (v26 ^ 0x893185F3 ^ v32) + (v35 ^ 0xE859E6C5) + 704775169 + ((2 * v35) & 0xABFBF7FC ^ 0x2B483274);
  HIDWORD(v37) = v28 - 1711351195 + (v36 ^ 0xEEF9A5FD);
  LODWORD(v37) = (1772274431 * (HIDWORD(v37) + ((2 * v36) & 0xDDF34BFA))
                - ((1397065214 * (HIDWORD(v37) + ((2 * v36) & 0xDDF34BFA)) + 576781472) & 0x4E84B098)
                - 126691684) ^ 0x2742584C;
  int v38 = (v37 >> 1) - ((2 * (v37 >> 1)) & 0x162ED7BE) + 186084319;
  unsigned int v39 = ((-448640624 * v28 - ((1250202400 * v28 + 113940544) & 0x53A83560) + 1832478421) ^ 0x29D41AB5) & 0xFFFFFFF0 | ((-296475495 * v28 - ((-592950990 * v28 - 932402812) & 0xDC342872) - 766482181) >> 28);
  int v40 = ((2 * v39) & 0x79EAD5EE ^ 0xC) + (v39 ^ 0x3CF56AF1);
  unsigned int v41 = ((151893760 * v33 - ((303787520 * v33) & 0x87DF3600) - 1007707257) ^ 0xC3EF9B87) & 0xFFFFFF00 | HIBYTE(v34);
  unsigned int v42 = ((2 * v41) & 0xEFB377AE ^ 0x1A2) + (v41 ^ 0xF7D9BB06);
  unsigned int v43 = (((508559360 * v30 - ((480247808 * v30 + 480247808) & 0x17000000) + 1775975450) ^ 0x8B8B3C1A) & 0xFFF00000 | ((1757266405 * v30 - ((-780434486 * v30 - 468845622) & 0x8BA2A7AC) - 1210560069) >> 12)) ^ 0x45D15;
  unsigned int v44 = 513021603 * v40 - ((489172294 * v40 + 528438646) & 0x13EE31DE) + 1505149866;
  int v45 = 189890560 * v40 - ((379781120 * v40 + 716898304) & 0x4FC00000) - 46300920;
  unsigned int v46 = v42 + 136725545 + ((v43 - ((2 * v43) & 0x81459774) - 1063072838) ^ 0xCBB5A065 ^ v38);
  unsigned int v47 = -1293815639 * v42 - ((1707336018 * v42 + 1449451042) & 0x48932C38) + 1333527853;
  int v48 = STACK[0x558];
  int v49 = 1895322752 * v42 - ((32549120 * v42 + 40833280) & 0xB4FE800) + 517962991;
  int v50 = (v46 ^ 0x335DF57D) - v40 + ((2 * v46) & 0x66BBEAFA);
  unsigned int v51 = -1183072685 * v50 - ((49773734 * v50 + 30623004) & 0xCBE09E0) + 659072894;
  unsigned int v52 = 1275068416 * v50 - ((-1744830464 * v50 + 1879048192) & 0xA0000000) - 1985084938;
  unsigned int v53 = (((238747648 * (v38 ^ 0xB176BDF) - ((477495296 * (v38 ^ 0xB176BDF)) & 0xA5980000) - 758323832) ^ 0xD2CCE588) & 0xFFFF0000 | ((1225264699 * (v38 ^ 0xB176BDF) - ((-1844437898 * (v38 ^ 0xB176BDF)) & 0xBF6D221A) + 1605800205) >> 16)) ^ 0x5FB6;
  unsigned int v54 = v53 - ((2 * v53) & 0x94CAB38C) - 899327546;
  unsigned int v55 = v54 ^ 0xCA6559C6;
  unsigned int v56 = -1225981559 * (v54 ^ 0xCA6559C6) - ((1843004178 * (v54 ^ 0xCA6559C6)) & 0x5CC9B37A) + 778361277;
  unsigned int v57 = ((2 * ((v52 ^ 0x51AE01F6) & 0xFC000000 | (v51 >> 6))) & 0xDFCF59FE ^ 0x25826)
      + (((v52 ^ 0x51AE01F6) & 0xFC000000 | (v51 >> 6)) ^ 0xEFFED0EC);
  unsigned int v58 = ((v45 ^ 0x27E00108) & 0xFFFF8000 | (v44 >> 17)) ^ 0x4FB;
  unsigned int v59 = v58 - ((2 * v58) & 0x9A51F3D2) - 852952599;
  unsigned int v60 = ((v49 ^ 0x85A7F46F) & 0xFFFFFF80 | (v47 >> 25)) ^ 0x52;
  unsigned int v61 = ((v60 - ((2 * v60) & 0x793E58C) - 2083917114) ^ 0x49ACAB00 ^ v54) + 270029569 + v57;
  int v62 = v61 - ((2 * v61) & 0x79E92D4C) + 1022662310;
  unsigned int v63 = 2 * (((v62 ^ 0x3CF496A6) & (v59 ^ 0xCD28F9E9)) - ((2 * ((v62 ^ 0x3CF496A6) & (v59 ^ 0xCD28F9E9))) & 0x17612972))
      - 1755240078;
  unsigned int v64 = -551430355 * v57 - ((1044622938 * v57 + 674946138) & 0x77201FBE) - 1884455412;
  unsigned int v65 = (v59 ^ 0xF1DC6F4F ^ v62) + (v63 ^ 0x483E9591) + 547373115 + ((2 * v63) & 0xBEBF79C4 ^ 0x2E8250C4) + 738;
  unsigned int v66 = ((2 * v65) & 0xBFF791D8) + (v65 ^ 0x5FFBC8EC);
  LODWORD(STACK[0x4F8]) = HIWORD(LODWORD(STACK[0x558])) ^ 0x927E7AA6;
  unsigned int v67 = (((824180736 * v55 - ((1648361472 * v55) & 0xD6400000) + 1798560292) ^ 0x6B33DA24) & 0xFFE00000 | (v56 >> 11)) ^ 0x5CC9B;
  LODWORD(STACK[0x410]) = v16 & 0xFFFFFDFF;
  unsigned int v68 = (((-1978697760 * (v59 ^ 0xCD28F9E9) - ((2027456 * (v59 ^ 0xCD28F9E9)) & 0x23EDE00) + 18837277) ^ 0x11F6F1D) & 0xFFFFFFE0 | ((877689791 * (v59 ^ 0xCD28F9E9) - ((1755379582 * (v59 ^ 0xCD28F9E9)) & 0xCA5B6C66) + 1697494579) >> 27)) ^ 0xC;
  unsigned int v69 = v67 - ((2 * v67) & 0x8FB3FFC2) + 1205469153;
  unsigned int v70 = (((1896947712 * v66 - ((-501071872 * v66 + 107806720) & 0xD97DC000) - 269130505) ^ 0xECBEE4F7) & 0xFFFFE000 | ((1312000137 * v66 - 2 * ((1312000137 * v66 + 813701556) & 0x3AB706B9 ^ (1312000137 * v66) & 1) + 725033068) >> 19)) ^ 0x756;
  unsigned int v71 = ((((~(481558528 * v57 + 951320576) | 0xCCD3FFFF) - 1369833472 * v57 - 168729870) ^ 0x199762F1) & 0xFFFE0000 | (v64 >> 15)) ^ 0x17720;
  int v72 = v71 - 2 * (v71 & 0x39FC0FCF ^ (v64 >> 15) & 3) - 1174663220;
  unsigned int v73 = ((2 * ((v69 ^ 0x47D9FFE1) + (v72 ^ 0x4603F033) + 1)) & 0xFE9EFFFE)
      + (((v69 ^ 0x47D9FFE1) + (v72 ^ 0x4603F033) + 1) ^ 0x7F4F7FFF);
  LODWORD(STACK[0x434]) = HIWORD(v14);
  unsigned int v74 = v70 - ((2 * v70) & 0xFF8EE3BA) + 2143777245;
  unsigned int v75 = (v72 ^ 0xB9FC0FCC) + ((v68 - ((2 * v68) & 0xCD8224DC) + 1723929198) ^ 0x2118ED8F ^ v69);
  unsigned int v76 = ((2 * v75) & 0xB7FE577E) + (v75 ^ 0x5BFF2BBF) + (v74 ^ 0x80388E22);
  LODWORD(STACK[0x4E0]) = (v14 >> 8) ^ 0x21DCF3F3;
  unsigned int v77 = v76 - ((2 * v76 + 1208068228) & 0xC12D3806) - 2070450107;
  int v78 = v74 ^ (v73 - ((2 * v73 + 5804200) & 0x65B7FDE) + 56232003) ^ v77;
  LODWORD(STACK[0x450]) = v78 ^ 0xD0020F08;
  LODWORD(STACK[0x4F0]) = (v74 ^ 0x7FC771DD)
                        + (v78 ^ 0x610EBF58)
                        + 1
                        - ((2 * ((v74 ^ 0x7FC771DD) + (v78 ^ 0x610EBF58) + 1)) & 0x687F976)
                        + 54787259;
  unsigned int v79 = (v78 ^ 0x9EF140A7)
      + (v77 ^ 0xE0969C03)
      - ((2 * ((v78 ^ 0x9EF140A7) + (v77 ^ 0xE0969C03))) & 0xFA70B282)
      - 46638783;
  LODWORD(STACK[0x444]) = v72;
  int v80 = v72 ^ 0x47D4140 ^ v78;
  LODWORD(STACK[0x408]) = LODWORD(STACK[0x510]) - (STACK[0x508] & 0xE92A2692) - 177153301;
  LODWORD(STACK[0x44C]) = v79;
  unsigned int v81 = (((v79 ^ 0x15975740) - ((2 * (v79 ^ 0x15975740) - 2023407034) & 0xFA70B282) + 1089141348) ^ 0xFD385941)
      + (v10 ^ 0xE5B52EE9);
  unsigned int v82 = -992175073
      * ((((((2 * v81) & 0x96FFEDFC) + (v81 ^ 0xCB7FF6FE)) & 0xFFFFFFFE)
        - ((2 * (((2 * v81) & 0x96FFEDFC) + (v81 ^ 0xCB7FF6FE)) + 1761612292) & 0x9EE63614)
        + 66266125) ^ 0xD4DBAA66);
  int v83 = LODWORD(STACK[0x500]) ^ LODWORD(STACK[0x530]);
  LODWORD(STACK[0x510]) = v80;
  int v84 = ((v82 - ((v82 << ((v9 - 98) ^ 0x46)) & 0x36) + 27) ^ v48 ^ v12 ^ v14) ^ 0x489524C1;
  *(_DWORD *)(a1 + 4 * ((v82 - ((v82 << ((v9 - 98) ^ 0x46)) & 0x36) + 27) ^ a2)) = v83 ^ v80 ^ 0x200DC107 ^ dword_1002243E0[(((2 * v84) | 0x6533AA82) - v84 - 848942401) ^ 0x7A0CF1DF];
  return ((uint64_t (*)(void))*(&off_10026D1A0 + v9 + 28))();
}

void sub_10019FA6C()
{
}

uint64_t sub_10019FA78()
{
  LODWORD(STACK[0x508]) = v1;
  uint64_t v2 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + v0 + 780))(1028);
  STACK[0x9E0] = v2;
  STACK[0x560] = v2;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((28 * (((v2 == 0) ^ (v0 + 80)) & 1)) ^ v0)))();
}

uint64_t sub_10019FAE0(uint64_t a1, uint64_t a2)
{
  LODWORD(STACK[0x430]) = v4;
  LODWORD(STACK[0x500]) = v3;
  LODWORD(STACK[0x40C]) = v5;
  LODWORD(STACK[0x3F8]) = LODWORD(STACK[0x4F0]) ^ LODWORD(STACK[0x4D0]);
  return (*(uint64_t (**)(uint64_t))(a2 + 8 * ((1344 * (((v2 + 199448111) | 7) == 592)) ^ (v2 + 199448249))))(3350075232);
}

uint64_t sub_10019FBB4(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (((((a3 + v7 - a4 == v7) ^ (a2 - 90)) & 1) * ((a2 + 1369) ^ v8)) ^ a2)))();
}

uint64_t sub_10019FBF0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v6 = (a4 - 560467446) & 0xEF6FFA67;
  unsigned int v7 = ((2 * ((v4 ^ 0x52392EAA) + (LODWORD(STACK[0x4C8]) ^ 0xA3D88175))) & 0x7FA7F7FC)
     + (((v4 ^ 0x52392EAA) + (LODWORD(STACK[0x4C8]) ^ 0xA3D88175)) ^ 0xBFD3FBFE);
  int v8 = ((unsigned __int16)LODWORD(STACK[0x550]) >> 9) ^ 0x4A;
  unsigned int v9 = (v8 + ((LODWORD(STACK[0x550]) >> 9) & 0x63 ^ 0x7681E5A1) - (v8 & 0xFFFFFFE3)) ^ 0xFDA4656B;
  int v10 = ((LODWORD(STACK[0x4E8]) << 7) ^ 0x3092E780) - 52967782;
  LODWORD(STACK[0x550]) = v5;
  int v11 = ((unsigned __int16)LODWORD(STACK[0x558]) >> 9) ^ 0x2002864D;
  unsigned int v12 = (((2 * v9) & 0x20B01E4) - v9 - 299344115) ^ 0x650DDFA8 | v10 ^ 0xFCD7C69A;
  int v13 = v12 - ((2 * v12) & 0xA6) + 211;
  unsigned int v14 = ((v11 | 0xA85FDAB1) - (v11 | 0x57A0254E) + 1470113102) ^ 0x885D5C82 | (((v5 << 7) ^ 0x2B00FE80) - 939206021) ^ 0xC804DA7B;
  int v15 = v14 - ((2 * v14) & 0x56) + 171;
  unsigned int v16 = ((v7 & 0xFFFFFFFE) - (((v7 << ((a4 + 10) & 0x67 ^ 0x66)) + 5769220) & 0x5FF304CC) + 1881507432) ^ 0x1DBF6025;
  HIDWORD(v17) = v15 ^ 0x5C ^ v13;
  LODWORD(v17) = (v15 ^ ~v13) << 24;
  char v18 = -117 * v16 - 71;
  int v19 = (LOBYTE(STACK[0x4E0]) ^ ((((v17 >> 31) - ((2 * (v17 >> 31)) & 0xFA) + 125) ^ 0x7D)
                                                - ((2 * (((v17 >> 31) - ((2 * (v17 >> 31)) & 0xFA) + 125) ^ 0x7D)) & 0x6E)
                                                + 55) ^ (v18 - ((22 * v16) & 0x72)));
  int v20 = dword_100221E90[((v19 ^ 0x22283305) - ((2 * (v19 ^ 0x22283305)) & 0x44102582) + 864788161) ^ 0x11A3AD39];
  unsigned int v21 = ((((2 * (v19 ^ 0x1200B018)) | 0x3E53284) - (v19 ^ 0x1200B018) - 32676162) ^ 0x13F22949)
      + (((v19 ^ 0xDA) - (((v6 + 838340999) ^ 0x192) & (2 * (v19 ^ 0xDA))) + 1947269438) ^ 0xA0F49F3E);
  *(_DWORD *)(STACK[0x560] + 4 * ((v18 - ((22 * v16) & 0x72)) ^ 0xB9u)) = LODWORD(STACK[0x570]) ^ LODWORD(STACK[0x568]) ^ LODWORD(STACK[0x578]) ^ v20 ^ (v21 - ((2 * v21) & 0x2BEB38B8) + 368417884) ^ 0x8BCDCCA;
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (int)((71 * (((-838340760 - v6) | (v6 + 838340760)) >> 31)) ^ (v6 + 838341451))))();
}

void sub_10019FF6C()
{
}

uint64_t sub_10019FF80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (v2 + 1637)))(1032);
  STACK[0x9E8] = v3;
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (int)(((v3 != 0) * ((((v2 + 268153616) & 0xF0044FB3) - 311) ^ (v2 - 343))) ^ v2)))();
}

uint64_t sub_10019FFEC(uint64_t a1)
{
  int v3 = v1 ^ LODWORD(STACK[0x510]) ^ 0x3165A916;
  int v4 = (2 * v3 + 111957800) & 0x5F04112;
  v3 -= 1102164963;
  unsigned int v5 = ((((v3 - v4) ^ 0x3165A916) - ((2 * ((v3 - v4) ^ 0x3165A916) + 111957800) & 0x5F04112) - 1102164963) ^ 0x82F82089)
     + LODWORD(STACK[0x4C0]);
  LOBYTE(v3) = ((v5 - ((2 * v5) & 0x1E) + 15) | v3 & 1) ^ 0x5A;
  LOBYTE(v3) = (v3 - ((2 * v3) & 0x2A) - 107) ^ 0x95;
  unsigned int v6 = (((2 * (STACK[0x4B8] & 0x90BF9B66 ^ 0x908C9926)) | 0x4C6AEACA)
      - (STACK[0x4B8] & 0x90BF9B66 ^ 0x908C9926)
      - 641037669) ^ 0xA23547F4;
  unsigned int v7 = 369967432 - v6 + ((2 * v6) | 0xD3E598B2) - 3489;
  LOBYTE(v6) = 30 - -45 * v3;
  char v8 = 90 * v3;
  int v9 = dword_10023A9B0[(((2 * ((v2 + 280) ^ 0x4A111139 ^ ((v6 - (v8 & 0x3C)) ^ LODWORD(STACK[0x508])))) | 0xBE84BD0C)
                      - ((v2 + 280) ^ 0x4A111139 ^ ((v6 - (v8 & 0x3C)) ^ LODWORD(STACK[0x508])))
                      + 549298554) ^ 0x95534A04];
  *(_DWORD *)(a1 + 4 * ((v6 - (v8 & 0x3C)) ^ 0x1Eu)) = (((2 * (STACK[0x4B8] & 0x6F406499 ^ 0x21000411)) | 0x40BF64C6)
                                                                         - (STACK[0x4B8] & 0x6F406499 ^ 0x21000411)
                                                                         + 1604341149) ^ v7 ^ LODWORD(STACK[0x4D8]) ^ LODWORD(STACK[0x548]) ^ 0x2D3E694 ^ (v9 - ((2 * v9 + 288591482) & 0x39254930) + 623668181);
  return ((uint64_t (*)(void))*(&off_10026D1A0 + v2))();
}

void sub_1001A0248()
{
}

uint64_t sub_1001A0258()
{
  uint64_t v1 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v0 ^ 0xD99)))(1028);
  STACK[0x9C0] = v1;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((v1 == 0) * (((v0 ^ 0x5CF) + 991) ^ (203 * (v0 ^ 0x5CF)))) ^ v0)))();
}

uint64_t sub_1001A02B8()
{
  int v3 = LODWORD(STACK[0x450]) ^ LODWORD(STACK[0x4D0]);
  char v4 = ((2 * v3) ^ 4) - 4 - ((2 * ((2 * v3) ^ 4)) & 0xF8) + (v0 ^ 0x1A) + 19;
  LOBYTE(v3) = (((v4 & 0x60 ^ 0x64) + (v4 & 0x40 ^ 0xB) - ((v4 & 0x60 ^ 0x64) & 0x40)) ^ 0xF) + (v3 ^ 0x9E);
  LOBYTE(v3) = v3 - ((2 * v3) & 4) + 2;
  char v5 = ((2 * v3) ^ 4) - ((2 * ((2 * v3) ^ 4)) & 0xF8) - 4;
  LOBYTE(v3) = (((v5 & 0x60 ^ 0x64) + (v5 & 0x40 ^ 0xB) - ((v5 & 0x60 ^ 0x64) & 0x40)) ^ 0xF) + (v3 ^ 0x9E);
  LOBYTE(v3) = v3 - ((2 * v3) & 4) + 2;
  char v6 = ((2 * v3) ^ 4) - ((2 * ((2 * v3) ^ 4)) & 0xF8) - 4;
  LOBYTE(v3) = (((v6 & 0x60 ^ 0x64) + (v6 & 0x40 ^ 0xB) - ((v6 & 0x60 ^ 0x64) & 0x40)) ^ 0xF) + (v3 ^ 0x9E);
  LOBYTE(v3) = v3 - ((2 * v3) & 4) + 2;
  int v7 = STACK[0x4B0];
  int v8 = LODWORD(STACK[0x4B0]) ^ 0x698633A8;
  LODWORD(STACK[0x578]) = v8;
  char v9 = 2 * (((v3 ^ 2) & v8) - ((2 * ((v3 ^ 2) & v8)) & 0xAC)) - 84;
  LOBYTE(v3) = (v7 ^ 0xAA ^ v3) + (v9 ^ 0x59) + 11 + ((2 * v9) & 0xE8 ^ 0x48);
  LOBYTE(v3) = (((((2 * v3) & 0xFC) + (v3 ^ 0xFE)) & 0xFE) - ((2 * (((2 * v3) & 0xFC) + (v3 ^ 0xFE)) + 4) & 0x5C) - 79) ^ 0x88;
  unsigned int v10 = LODWORD(STACK[0x4A0]) ^ 0xF88559A4;
  unsigned int v11 = v10
      + (((LODWORD(STACK[0x4A0]) ^ 0xA222B284) + 1) ^ 0x92F46FFE)
      + ((2 * ((LODWORD(STACK[0x4A0]) ^ 0xA222B284) + 1)) & 0x25E8DFFC)
      + 1829474306;
  unsigned int v12 = ((v11 - ((2 * v11) & 0x16F7F9BC) - 1954808610) ^ 0x74840320) + v10;
  int v13 = (63 * v3 + (((v0 ^ 0x1A) + 18) & 0xDF ^ 0xFC) - ((126 * v3) & 0x46));
  int v14 = dword_100236500[v1 ^ LODWORD(STACK[0x448]) ^ v2 ^ 0x86D0BC13 ^ ((v13 ^ 0xEE8680E8)
                                                                      - ((2 * (v13 ^ 0xEE8680E8)) & 0x9D0001BA)
                                                                      + 1336499933)];
  HIDWORD(v15) = v14 ^ 0xB7B36;
  LODWORD(v15) = v14 ^ 0x4DF00000;
  *(_DWORD *)(STACK[0x9C0] + 4 * (v13 ^ 0x23u)) = (v12 - ((2 * v12) & 0xABB98FA) - 2057450371) ^ LODWORD(STACK[0x530]) ^ LODWORD(STACK[0x49C]) ^ LODWORD(STACK[0x4A8]) ^ LODWORD(STACK[0x444]) ^ LODWORD(STACK[0x44C]) ^ LODWORD(STACK[0x4F0]) ^ 0x1C9E71CC ^ ((v15 >> 20) - ((2 * (v15 >> 20)) & 0x1FFF2674) + 268407610);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + v0))(4001792232, 2634023354, 1336499933, 2261826579, dword_100236500, 752438, 1307574272, 536815220);
}

void sub_1001A06B0()
{
}

uint64_t sub_1001A06C0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((445 * ((((v2 - 231) | 0xC4u) ^ 0x1E6142051A3E1423) + v3 == 3081835211)) ^ v2)))();
}

uint64_t sub_1001A0740@<X0>(uint64_t a1@<X1>, unint64_t a2@<X8>)
{
  BOOL v10 = v2 < a2;
  *(unsigned char *)(v5 + v9 - 0x543054E31D5E2E28) = *(unsigned char *)(v4 + v8 - 0x6B822E0319913C21);
  unint64_t v11 = v6 - 0x1C74F948877CCD6BLL + (v7 ^ 0x2Du);
  int v12 = v10 ^ (v11 < a2);
  BOOL v13 = v11 < v2;
  if (!v12) {
    BOOL v10 = v13;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((!v10 * v3) ^ v7)))();
}

uint64_t sub_1001A07D8(uint64_t a1, uint64_t a2)
{
  strcpy((char *)(v4 + v5 + v3), "/Library/ProvenanceV2/psc.id");
  (*(void (**)(uint64_t))(a2 + 8 * (v6 + 1879)))(v2);
  uint64_t v7 = ((uint64_t (*)(uint64_t, void *))*(&off_10026D1A0 + v6 + 1816))(v4, &unk_100248B30);
  uint64_t v8 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v6 ^ 0x8F9)))(v4);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + ((60 * ((((((v6 - 1860792952) & 0x6EE977BF) + 393) ^ (v7 == 0)) & 1) == 0)) ^ v6)))(v8);
}

uint64_t sub_1001A08D8()
{
  uint64_t v3 = (v1 - 1439) | 3;
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 8 * (v1 ^ 0xE6B)))(v2, 0, 2);
  uint64_t v4 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v1 ^ 0xE29)))(v2);
  uint64_t v5 = (v3 + v4 - ((2 * v4) & 0x7FB63C92u) - 1076159034) ^ 0x15B7BF99;
  uint64_t v6 = (v5
      + ((v3 + v4 - ((2 * v4) & 0x7FB63C92) + 0x1BFDB1DC6) & 0x93390523 ^ 0x3C99598482080022)
      - (v5 & (((v1 + 233) | 0xA0) + 2469985659))) ^ 0x4D34924317585A3;
  unint64_t v7 = (v6 | 0x348BAD5A8E7DAE95) - (v6 | 0xCB7452A57182516ALL) - 0x348BAD5A8E7DAE96;
  ((void (*)(uint64_t, void, void))*(&off_10026D1A0 + (int)(v1 + 597)))(v2, 0, 0);
  uint64_t v8 = ((uint64_t (*)(unint64_t, uint64_t))*(&off_10026D1A0 + (int)(v1 + 518)))(v7 ^ 0xCC1BDFA865D8FC5, 4205034404);
  STACK[0x6E0] = v8;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((46 * (v8 != 0)) ^ v1)))();
}

uint64_t sub_1001A0A64(uint64_t a1)
{
  LODWORD(STACK[0x568]) = 1715765038;
  LODWORD(STACK[0x560]) = 50950829;
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 8 * (v5 + 2018)))(a1, 1, v3, v2);
  STACK[0x570] = 0;
  unint64_t v7 = (v6 + 12879382 - ((2 * v6) & 0x1890C2Cu)) ^ 0xA110028008D24702;
  uint64_t v8 = ((v7 << (v5 ^ 0x82u)) & 0x2000001246CDF7ALL) - v7 - 0xF21950E92366FBELL;
  STACK[0x558] = v8 ^ 0xFB78FB1BC823E46BLL;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((686 * ((v8 ^ 0xFB78FB1BC823E46BLL ^ v4) == 0xA6772E902BA13AF8)) ^ v5)))();
}

uint64_t sub_1001A0B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x570] = 0;
  return (*(uint64_t (**)(void))(a4 + 8 * (((*v4 == 1) * (((v5 - 1695891858) & 0x651547BE) - 1680)) | v5)))();
}

uint64_t sub_1001A0BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x570] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a4
                                                     + 8
                                                     * (((((v5 + 1183) ^ 0x392) - 262)
                                                       * ((v4 ^ 0x51CE687165DF5156uLL) > 1)) ^ v5)))(a1, 0x1347C1F822F2880BLL);
}

uint64_t sub_1001A0C54(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((*(unsigned char *)(v4 + a2 + v2) != 2) * (((v3 - 1185) | 2) ^ 0x8A)) ^ v3)))();
}

uint64_t sub_1001A0CB8(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x570] = 0;
  uint64_t v11 = a3 + a2 + v7 + v10 + 0x66595E99473BD26ALL;
  __int16 v12 = (((*(unsigned __int8 *)v11 - ((2 * *(unsigned __int8 *)v11) & 0xE0) + (((_WORD)a1 + 13870) & 0xCFFE ^ 0xC9)) << 8)
       - 2304) ^ 0x7000;
  LOWORD(v11) = (v12 - ((2 * v12) & 0x2E00) - 26674) ^ 0x97CE | (*(unsigned __int8 *)(v11 + 1)
                                                               - ((2 * *(unsigned __int8 *)(v11 + 1)) & 0x15C)
                                                               - 6226) ^ 0xE7AE;
  LODWORD(v11) = (unsigned __int16)(v11 - ((2 * v11) & 0xD762) - 5199) ^ 0xEBB1;
  uint64_t v13 = v5 + (v11 ^ 0x7FD8FFB7) + ((v4 + 1904) & (2 * v11)) - 2144927668;
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((1450
                                * (v9 > (v13 | ((unint64_t)(v13 < v8) << 32))
                                      + 0x1347C1F7C354B36ALL
                                      + v6)) ^ a1)))();
}

uint64_t sub_1001A0DF0()
{
  uint64_t v1 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v0 ^ 0x88C)))(1028);
  STACK[0xA00] = v1;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((((v1 == 0) ^ (v0 + 24)) & 1) * (v0 - 191)) | v0)))();
}

uint64_t sub_1001A0E5C(uint64_t a1)
{
  unsigned int v3 = ((LODWORD(STACK[0x498]) ^ LODWORD(STACK[0x510]) ^ 0xFC997A64)
      - ((2 * (LODWORD(STACK[0x498]) ^ LODWORD(STACK[0x510]) ^ 0xFC997A64) + 363524808) & 0x91D4C316)
      - 742401297) ^ 0xFC997A64;
  unsigned int v4 = ((v3 - ((2 * v3 + 363524808) & 0x91D4C316) - 742401297) ^ 0xC8EA618B) + LODWORD(STACK[0x4C0]);
  unsigned int v5 = (v4 ^ 0x7FDD7FEF) - 2145222639 + ((2 * v4) & 0xFFBAFFDE);
  unsigned int v6 = (v5 & 0xFFFFFFFE) - ((2 * v5) & 0xF6B1BE4C) - 78061786;
  int v7 = (2 * (v1 & 8)) ^ 0x10 | v1 & 8;
  char v8 = v7 + 72;
  int v9 = v7 - 8;
  char v10 = v7 ^ 0x58;
  unsigned int v11 = ((-448883050 * (v6 ^ 0x5ED1B3F1)) & 0xDFFFFFA6) + ((1923042123 * (v6 ^ 0x5ED1B3F1)) ^ 0xEFFFFFD3);
  if (((v11 + (((v2 + 193) | 0x44D) ^ 0x100005C0)) & v9)
     - 1361342885
     - ((2 * ((v11 + (((v2 + 193) | 0x44D) ^ 0x100005C0)) & v9)) & 0x5DB71C98) == -1361342885)
    char v12 = v8;
  else {
    char v12 = v10;
  }
  int v13 = (((v1 & 0xF7 ^ 0x27) - ((2 * (v1 & 0xF7 ^ 0x27)) & 0xFC) + 118) ^ LOBYTE(STACK[0x4E8]) ^ LOBYTE(STACK[0x4E0]) ^ (v12 + v11 - ((2 * (v12 + v11) + 58) & 0x5C) - 117));
  __int16 v14 = (v13 ^ 1) - ((2 * (v13 ^ 1)) & 0x5A) + 24621;
  unsigned int v15 = ((v14 & 0x1982 ^ 0x101D5083) + 0x7FFFFFFF) | v14 & 0x267D ^ 0x8300223D;
  *(_DWORD *)(a1 + 4 * (v11 + 45)) = LODWORD(STACK[0x494]) ^ 0x8D4000B3 ^ LODWORD(STACK[0x488]) ^ LODWORD(STACK[0x4F0]) ^ dword_100221A90[v13 ^ 0x6C] ^ v15 ^ ((v15 ^ 0x931D5262) - ((2 * (v15 ^ 0x931D5262) + 963012762) & 0x2924B056) - 1857713032);
  return ((uint64_t (*)(void))*(&off_10026D1A0 + v2 + 899))();
}

void sub_1001A111C()
{
}

uint64_t sub_1001A112C()
{
  uint64_t v1 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v0 ^ 0xDBE)))(1032);
  STACK[0x9B8] = v1;
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (((((v1 == 0) ^ (v0 - 78)) & 1) * (((v0 - 388) | 0x210) ^ 0x67A)) ^ v0)))();
}

uint64_t sub_1001A11A8(uint64_t a1)
{
  int v2 = LODWORD(STACK[0x4B0]) ^ LODWORD(STACK[0x450]) ^ 0x5AF8DC2B;
  int v3 = (2 * v2 + 1383897270) & 0x4D5B58A0;
  v2 -= 806618965;
  int v4 = ((((v2 - v3) ^ 0x5B200C7C) - ((2 * ((v2 - v3) ^ 0x5B200C7C) + 1383897270) & 0x4D5B58A0) - 806618965) ^ 0x26ADAC50)
     + LODWORD(STACK[0x4C0]);
  unsigned int v5 = ((((v4 - ((2 * v4) & 0xE6DEE672) - 210799815) | ((v2 & 1) == 0)) ^ 0x8726146E) + 2005849984) ^ 0x778ED780;
  int v6 = LODWORD(STACK[0x434]) ^ 0x6AD4;
  unsigned int v7 = ((1648467110 * v5) & 0x767BFE56) + (((v1 - 1527) | 0x40) ^ (-1323250093 * v5) ^ 0xBB3DFFE9);
  int v8 = 2 * (((v7 + 213) & v6) - ((2 * ((v7 + 213) & v6)) & 0x1232A)) - 1846074582;
  unsigned int v9 = ((v6 + 1153564885 + v7) ^ 0xFFD3DD1F)
     + ((2 * (v6 + 1153564885 + v7)) & 0xFFA7BA3E)
     + (v8 ^ 0x1DD7F70B)
     + ((2 * v8) & 0xE7BE57BC ^ 0xDC51B9EB);
  int v10 = LODWORD(STACK[0x4F8]) ^ LODWORD(STACK[0x438]) ^ (v9
                                                       + 1
                                                       - 2 * ((v9 + 1946898113) & 0x6AF1E01A ^ (v9 + 1) & 0xA)
                                                       - 553832752);
  int v11 = (((32 * v10) ^ 0x7D74E300) + 323119979 - ((2 * ((32 * v10) ^ 0x7D74E300)) & 0x2684D6C0)) ^ 0x13426B6B | (v10 >> 3) ^ 3;
  int v12 = v11 - ((2 * v11) & 0x16);
  HIDWORD(v13) = (v12 + 43) ^ 0xF;
  LODWORD(v13) = (v12 << 24) - 1962934272;
  int v14 = dword_10024A080[((v13 >> 29) - 2 * ((v13 >> 29) & 3) - 125) ^ 0x7D];
  HIDWORD(v13) = v14 ^ 0xBB3DBE9;
  LODWORD(v13) = v14 ^ 0xC0000000;
  *(_DWORD *)(a1 + 4 * (((-90 * v5) & 0x56) + (((v1 + 9) | 0x40) ^ (83 * v5) ^ 0xE9) - 43)) = LODWORD(STACK[0x480]) ^ LODWORD(STACK[0x4A8]) ^ LODWORD(STACK[0x44C]) ^ 0xC1FD272F ^ ((v13 >> 29) - ((2 * (v13 >> 29)) & 0x17559DC8) + 195743460);
  return ((uint64_t (*)(void))*(&off_10026D1A0 + v1))();
}

void sub_1001A1478()
{
}

uint64_t sub_1001A1488()
{
  uint64_t v1 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v0 ^ 0x891)))(1028);
  STACK[0x9F0] = v1;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((v1 != 0) * (((v0 - 60) | 0x11) - 137)) ^ v0)))();
}

uint64_t sub_1001A14E4(uint64_t a1)
{
  unsigned int v4 = (((LODWORD(STACK[0x3F8]) ^ 0x27F30014)
       - ((2 * (LODWORD(STACK[0x3F8]) ^ 0x27F30014) + 1225213828) & 0xA4725D54)
       - 155397524) ^ 0x52392EAA)
     + LODWORD(STACK[0x578]);
  LOBYTE(v4) = ((v4 & 0xFE) - ((2 * v4) & 0x24) - 109) ^ 0x2E;
  int v5 = (-5 * v4 + 40 + v1 + 44 - ((-10 * v4) & 0x2C));
  unsigned int v6 = dword_100236A00[v2 ^ LODWORD(STACK[0x448]) ^ v3 ^ 0x27FF6279 ^ v5];
  unsigned int v7 = LODWORD(STACK[0x418]) ^ LODWORD(STACK[0x4B8]) ^ LODWORD(STACK[0x420]) ^ LODWORD(STACK[0x570]) ^ LODWORD(STACK[0x568]) ^ LODWORD(STACK[0x478]) ^ LODWORD(STACK[0x520]) ^ LODWORD(STACK[0x410]) ^ LODWORD(STACK[0x428]) ^ LODWORD(STACK[0x414]) ^ v6 ^ (v6 >> 2) ^ (v6 >> 6) ^ 0x82D683AC;
  *(_DWORD *)(a1 + 4 * (v5 ^ 0x16u)) = LODWORD(STACK[0x558]) ^ LODWORD(STACK[0x47C]) ^ 0x374CAE5F ^ (v7 - ((2 * v7) & 0x4921F9F8) + 613481724);
  return ((uint64_t (*)(void))*(&off_10026D1A0 + v1 + 1603))();
}

void sub_1001A16D4()
{
}

uint64_t sub_1001A16E4()
{
  uint64_t v1 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v0 ^ 0xCBD)))(1028);
  STACK[0x9F8] = v1;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((v1 == 0) * (((v0 - 1111) ^ 0x51F) - 1398)) ^ v0)))();
}

uint64_t sub_1001A1738(uint64_t a1)
{
  unsigned int v2 = ((LODWORD(STACK[0x470]) ^ LODWORD(STACK[0x450]) ^ 0x4D720263)
      - ((2 * (LODWORD(STACK[0x470]) ^ LODWORD(STACK[0x450]) ^ 0x4D720263) - 419084490) & 0xBD5EF148)
      - 768467905) ^ 0x4D720263;
  unsigned int v3 = ((v2 - ((2 * v2 - 419084490) & 0xBD5EF148) - 768467905) ^ 0x5EAF78A4) + LODWORD(STACK[0x4C0]);
  int v4 = (v3 ^ 0x3FEFFFEF) - 1072693231 + ((2 * v3) & 0x7FDFFFDE);
  unsigned int v5 = ((v4 & 0xFFFFFFFE) - ((2 * v4) & 0xC452C814) - 500603894) ^ 0xEC3E6D9F;
  int v6 = LODWORD(STACK[0x4F8]) ^ LODWORD(STACK[0x438]) ^ LODWORD(STACK[0x434]);
  int v7 = 1226662033 * v5 + 1772470042;
  int v8 = -1841643230 * v5;
  unsigned int v9 = (((v6 ^ (v7 - (v8 & 0xD34B7E34))) & (v1 - 1161) ^ 0xBF)
      - ((2 * ((v6 ^ (v7 - (v8 & 0xD34B7E34))) & (v1 - 1161) ^ 0xBF)) & 0x13A)
      + 1455976861) ^ 0xA6C86184;
  *(_DWORD *)(a1 + 4 * ((v7 - (v8 & 0x34)) ^ 0x1Au)) = LODWORD(STACK[0x458]) ^ LODWORD(STACK[0x47C]) ^ LODWORD(STACK[0x428]) ^ (((2 * v9) & 0x20001F60) - v9 + 1634947151) ^ 0x7259E8A0 ^ dword_100238450[(((2 * v9) & 0x20001F60) - v9 + 1634947151) ^ 0x91734092];
  return ((uint64_t (*)(void))*(&off_10026D1A0 + v1))();
}

void sub_1001A1914()
{
}

uint64_t sub_1001A1924()
{
  LODWORD(STACK[0x578]) = v0 - 43;
  int v1 = byte_100238130[(LOBYTE(STACK[0xA9D]) - ((2 * LOBYTE(STACK[0xA9D])) & 0xFC) - 100) ^ 0xCFLL];
  int v2 = v1 - (((v1 << ((v0 - 43) ^ 0x96)) + 90) & 0xEA) + 34;
  unsigned int v3 = ((((v2 ^ 0x41) - ((2 * v2) & 0x7C)) << 16) - 1690435584) ^ 0x9B3E0000;
  int v4 = byte_10023E5E0[(LOBYTE(STACK[0xA9F]) - ((2 * LOBYTE(STACK[0xA9F]) - 56) & 0xDD) - 46) ^ 0x54] ^ 0xB8;
  unsigned int v5 = (v4 - ((2 * v4) & 0xB4) - 90976422) ^ 0xFA93CF5A | (v3 - ((2 * v3) & 0x5A2A0000) + 756401757) ^ 0x2D15C65D;
  unsigned int v6 = v5 - ((2 * v5) & 0x6DBA9474);
  unsigned int v7 = byte_100237810[(LOBYTE(STACK[0xA9C]) - ((2 * LOBYTE(STACK[0xA9C]) + 66) & 0x92) + 106) ^ 0xB7] ^ (LOBYTE(STACK[0xA9C]) - ((2 * LOBYTE(STACK[0xA9C]) + 66) & 0xFFFFFF92) + 106);
  int v8 = (((v7 ^ 4) - ((2 * v7) & 0x62)) << 24) - 973078528;
  unsigned int v9 = (((v8 - 352321536) ^ 0xB1000000) - ((2 * ((v8 - 352321536) ^ 0xB1000000)) & 0x12000000) + 167455886) ^ 0x9FB2C8E | (v6 + 1994213946) ^ 0x76DD4A3A;
  LOBYTE(v8) = byte_100237A20[(LOBYTE(STACK[0xA9E]) - ((2 * LOBYTE(STACK[0xA9E]) + 6) & 0x20) - 77) ^ 0x6ALL];
  LOBYTE(v8) = v8 ^ 0x17 ^ (((16 * v8) ^ 0x40) - 32 * (v8 & 1) - 103);
  unsigned int v10 = (v9 - ((2 * v9) & 0x99E9D10A) + 1291118725) ^ 0x4CF4E885 | ((v8 << 8)
                                                                  - ((v8 & 3) << 9)
                                                                  - 2034105455) ^ 0x86C20391;
  int v11 = (v10 - ((2 * v10) & 0x5D48BCA8) - 1364959660) ^ LODWORD(STACK[0x4B0]);
  unsigned int v12 = ((25 - LODWORD(STACK[0x404])) & 0x40000 ^ 0xFDCEF7C9) + 2 * ((25 - LODWORD(STACK[0x404])) & 0x40000);
  BOOL v13 = ((v11 ^ 0xC7200000) & (v12 + 36767799)) == ((2 * ((v11 ^ 0xC7200000) & (v12 + 36767799))) & 0x7C080000);
  int v14 = byte_100238130[(LOBYTE(STACK[0xA95]) - ((2 * LOBYTE(STACK[0xA95]) + 52) & 0x48) - 2) ^ 0xEALL];
  int v15 = byte_100237A20[(LOBYTE(STACK[0xA96]) - ((2 * LOBYTE(STACK[0xA96]) + 54) & 0xC8) + 127) ^ 0x14];
  int v16 = v15 ^ 0x84 ^ (((16 * v15) ^ 0x46) - 3);
  unsigned int v17 = (((v16 - ((2 * v16) & 0x1B6)) << 8) - 1102652672) ^ 0xBE46DB00;
  int v18 = (v14 - ((2 * v14 + 10) & 0xA) + 50) ^ 0x96;
  unsigned int v19 = (((v18 - ((2 * v18) & 0x1B6)) << 16) - 1227161600) ^ 0xB6DB0000;
  unsigned int v20 = (v19 - ((2 * v19) & 0x6BD40000) - 169186274) ^ 0xF5EA6C1E | (v17 - ((2 * v17) & 0x4325E400) - 1584205128) ^ 0xA192F2B8;
  unsigned int v21 = byte_100237810[(LOBYTE(STACK[0xA94]) - ((2 * LOBYTE(STACK[0xA94]) + 50) & 0xDA) - 122) ^ 0xB3] ^ (LOBYTE(STACK[0xA94]) - ((2 * LOBYTE(STACK[0xA94]) + 50) & 0xFFFFFFDA) - 122) ^ 0xC7;
  unsigned int v22 = (((v21 - ((2 * v21) & 0x38)) << 24) - 1677721600) ^ 0x9C000000;
  int v23 = (v22 - ((2 * v22) & 0x77777777) + 999399551) ^ 0x3B91A07F | (v20 - ((2 * v20) & 0x35718116) + 1522057355) ^ 0x5AB8C08B;
  int v24 = byte_10023E5E0[(LOBYTE(STACK[0xA97]) - ((2 * LOBYTE(STACK[0xA97]) - 72) & 0x96) + 39) ^ 0x12];
  HIDWORD(v26) = v24 ^ 0x18;
  LODWORD(v26) = (v24 ^ 0xFFFFFFBF) << 24;
  int v25 = v26 >> 29;
  HIDWORD(v26) = v25 ^ 2;
  LODWORD(v26) = ((v25 - ((2 * v25) & 0xA0) - 48) ^ 0x68) << 24;
  int v27 = ((((v26 >> 27) - ((2 * (v26 >> 27)) & 0x4E) - 89) ^ 0xA7)
       - ((2 * (((v26 >> 27) - ((2 * (v26 >> 27)) & 0x4E) - 89) ^ 0xA7)) & 0x1CC)
       - 885280282) ^ 0xCB3BB1E6 | (v23 - ((2 * v23) & 0x4604100A) - 1560147963) ^ 0xA3020805;
  int v28 = STACK[0x520];
  int v29 = LODWORD(STACK[0x520]) ^ LODWORD(STACK[0x470]) ^ (v27 - ((2 * v27) & 0x2A136AF4) + 352957818);
  unsigned int v30 = v12 + 926781440;
  unsigned int v31 = 853245842 - v12;
  if (!v13) {
    unsigned int v30 = v31;
  }
  int v32 = STACK[0x558];
  unsigned int v33 = (LODWORD(STACK[0x558]) ^ 0xC67FCD9B ^ v29) + 1;
  int v34 = v29 ^ 0x6F81CF5B;
  unsigned int v35 = v34 + (v33 ^ 0xB2E77C37) + ((2 * v33) & 0x65CEF86E) + 1293452233;
  unsigned int v36 = (((LODWORD(STACK[0x454]) ^ 0x5A2F9207)
        - ((2 * (LODWORD(STACK[0x454]) ^ 0x5A2F9207) + 518696160) & 0xADF6D0F4)
        - 428818710) ^ LODWORD(STACK[0x558]) ^ 0xAB50001 ^ (v35 - ((2 * v35) & 0x149F2A88) + 172987716))
      + v34;
  int v37 = STACK[0x408];
  unsigned int v38 = (v36 - ((2 * v36) & 0x60BF475C) - 1335909458) ^ LODWORD(STACK[0x408]);
  unsigned int v39 = (v38 ^ 0x280A5C61) % 0x3A5E0577;
  LOBYTE(v36) = LOBYTE(STACK[0xA9B]) - ((2 * LOBYTE(STACK[0xA9B]) - 106) & 0xEF) + 66;
  char v40 = ((2 * v36) ^ 0xEE) - ((2 * ((2 * v36) ^ 0xEE)) & 0x18);
  LOBYTE(v36) = (v36 ^ 0xE2) + ((v40 + 45) & 0x2A ^ 0xD7) + ((2 * ((v40 + 45) & 0x2A)) ^ 0x50) + 1;
  unsigned int v41 = LOBYTE(STACK[0xA91]) - ((2 * LOBYTE(STACK[0xA91]) - 84) & 0xFFFFFFDF) + 69;
  int v42 = 1687718911 - (v41 ^ 0x6F);
  unsigned int v43 = ((2 * (v41 ^ 0x93)) & 0x1CE) + (v41 ^ 0x99DF7F74);
  unsigned int v44 = v42 ^ 0x19EB9152 ^ (-864038238 - v43 - ((868155846 - 2 * v43) & 0x6540A37E)) ^ ((v42 ^ 0x9B677400)
                                                                                      - ((2 * (v42 ^ 0x9B677400) + 2) & 0x9FA69624)
                                                                                      + 1339247379);
  unsigned int v45 = v44 - 963435576 - ((2 * v44 + 504) & 0x8D2647A6) + 263;
  LOWORD(v42) = ((v45 ^ 0x92) + (v45 & 0x42 ^ 0x2240) - ((v45 ^ 0x92) & 0x42)) ^ 0x2303;
  unsigned int v46 = v45 ^ 0xC69323C8;
  LOWORD(v45) = v45 ^ 0xCBD7 ^ (((2 * v42) | 0x6210) - v42 + 20216);
  unsigned int v47 = ((2 * (v45 & 0xAC ^ 0x9234320C)) | 0x893846AC) - (v45 & 0xAC ^ 0x9234320C) - 1151083350;
  LOWORD(v45) = (v45 & 0x53 ^ 0x40) - ((2 * v45) & 0x20) + 23216;
  unsigned int v48 = ((v45 & 0x152 ^ 0x94302943) + (v45 & 0x2A1) - 1) ^ 0x94302BB3 | v47 ^ 0xD6A8115E;
  unsigned int v49 = ((v48 - ((2 * v48) & 0x98) - 52) ^ 0xFFFFFFBF)
      + byte_100238130[v46]
      + ((2 * (v48 - ((2 * v48) & 0x98) - 52)) & 0xFFFFFFE7)
      - 128;
  unsigned int v50 = v49 - ((2 * v49 + 98) & 0xFFFFFFAA) + 6;
  LODWORD(STACK[0x570]) = v50;
  unsigned int v51 = ((((v50 ^ 1) - ((2 * (v50 ^ 1)) & 0x116)) << 16) - 1198850048) ^ 0xB88B0000;
  int v52 = LOBYTE(STACK[0xA90]) - ((2 * LOBYTE(STACK[0xA90]) + 42) & 0x24) - 89;
  int v53 = byte_100237810[(LOBYTE(STACK[0xA90]) - ((2 * LOBYTE(STACK[0xA90]) + 42) & 0x24) - 89) ^ 0x9ELL] ^ v52 ^ 0x97;
  unsigned int v54 = (((v53 - ((2 * v53) & 0xD6)) << 24) - 352321536) ^ 0xEB000000;
  unsigned __int8 v55 = byte_100238130[(LOBYTE(STACK[0xA99]) - ((2 * LOBYTE(STACK[0xA99]) + 60) & 0x66) + 17) ^ 0xD0];
  unsigned __int8 v56 = (v55 - ((2 * v55 + 2) & 4) + 47) ^ 0xE9;
  int v57 = (((v56 - 2 * (v56 & 3)) << 16) + 1594032128) ^ 0x5F030000;
  int v58 = byte_10023E5E0[(v36 - ((2 * v36) & 0x8A) - 59) ^ 0x7ALL];
  unsigned int v59 = (v57 - ((2 * v57) & 0x26200000) - 1827640003) ^ 0x93106D3D | ((v58 ^ 0xB8)
                                                                    - 711576507
                                                                    + (~(2 * v58) | 0xFFFFFF75)
                                                                    + 1) ^ 0xD5963445;
  int v60 = byte_100237A20[(LOBYTE(STACK[0xA9A]) - ((2 * LOBYTE(STACK[0xA9A]) + 62) & 0xB0) + 119) ^ 0x17];
  int v61 = v60 ^ 0x62 ^ (((16 * v60) ^ 0x40) - 32 * (v60 & 1) + 25);
  unsigned int v62 = (((v61 - ((2 * v61) & 0x136)) << 8) - 825582848) ^ 0xCECA9B00;
  unsigned int v63 = (v59 - ((2 * v59) & 0x42058DA0) + 553830096) ^ 0x2102C6D0 | (v62 - ((2 * v62) & 0x5F1FFE00) - 1349517549) ^ 0xAF8FFF13;
  unsigned int v64 = byte_100237810[(LOBYTE(STACK[0xA98]) - ((2 * LOBYTE(STACK[0xA98]) + 58) & 0x8A) + 98) ^ 0x9ALL] ^ (LOBYTE(STACK[0xA98]) - ((2 * LOBYTE(STACK[0xA98]) + 58) & 0xFFFFFF8A) + 98) ^ 0xA5;
  unsigned int v65 = (((v64 - ((2 * v64) & 0x52)) << 24) - 1459617792) ^ 0xA9000000;
  unsigned int v66 = (v63 - ((2 * v63) & 0xA0619156) - 802109269) ^ 0xD030C8AB | (v65 - ((2 * v65) & 0xBFFFFFFF) + 1600755187) ^ 0x5F6995F3;
  int v67 = byte_100237A20[(LOBYTE(STACK[0xA92]) - ((2 * LOBYTE(STACK[0xA92]) + 46) & 0x3C) - 75) ^ 0xE4];
  int v68 = (((16 * v67) ^ 0x90) + (~(32 * v67) | 0x3F) + 110) ^ v67;
  unsigned int v69 = (((v68 - ((2 * v68) & 0x54)) << 8) - 1171052032) ^ 0xBA332A00;
  int v70 = (v69 - ((2 * v69) & 0x239EFE00) + 298811275) ^ 0x11CF7F8B | (v54 - ((2 * v54) & 0x7C000000) + 1049848274) ^ 0x3E9369D2;
  int v71 = byte_10023E5E0[(LOBYTE(STACK[0xA93])
                                       - 2 * ((LOBYTE(STACK[0xA93]) + 24) & 0x35 ^ STACK[0xA93] & 4)
                                       - 119) ^ 0xEFLL] ^ 0xB8;
  unsigned int v72 = (v70 - ((2 * v70) & 0xC950EDD4) - 458721558) ^ 0xE4A876EA | (v71 - ((2 * v71) & 0x24) + 2042471954) ^ 0x79BDA612;
  unsigned int v73 = (v51 - ((2 * v51) & 0x5D6E0000) - 289966921) ^ 0xEEB774B7 | (v72 - ((2 * v72) & 0xBEFE5880) + 1602169920) ^ 0x5F7F2C40;
  unsigned int v74 = v37 ^ LODWORD(STACK[0x498]) ^ v32 ^ v28 ^ (v66 - ((2 * v66) & 0xAA95DA6C) - 716509898);
  unsigned int v75 = v37 ^ LODWORD(STACK[0x40C]) ^ v32 ^ v28 ^ (v73 - ((2 * v73) & 0x9B1ABEEC) - 846373002);
  unsigned int v76 = (((2 * (v28 & 0xFFFBFFFF ^ 0x5C00D9E9)) & 0xCA777112) - (v28 & 0xFFFBFFFF ^ 0x5C00D9E9) - 1698674826) ^ 0xAC80D750;
  unsigned int v77 = v32 ^ v37 ^ (((2 * v76) & 0xB10DD1B2) - v76 - 1485236442) ^ ((v11 ^ 0xC7226D4E)
                                                                   - 890013641
                                                                   + v30
                                                                   - ((2 * ((v11 ^ 0xC7226D4E) - 890013641 + v30)) & 0x13284D86)
                                                                   - 1986779453);
  unsigned int v78 = (v32 ^ v37 ^ (((2 * v76) & 0xB2) - v76 + 38) ^ ((v11 ^ 0x4E)
                                                                       + 55
                                                                       + v30
                                                                       - ((2 * ((v11 ^ 0x4E) + 55 + v30)) & 0x86)
                                                                       - 61)) ^ 0xE4;
  char v79 = (v39 ^ 0x2E) - 46 + ((2 * v39) & 0x5C);
  if (((2 * v39) & 0x75D9F7AE) + (v39 ^ 0xFAECFBD7) != -85132329) {
    char v79 = 0;
  }
  char v80 = (v38 ^ 0x61) - v79;
  unint64_t v81 = STACK[0x9F8];
  unint64_t v82 = STACK[0x9F0];
  unsigned int v83 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v38) ^ 0xAu)) ^ 0xABA47756 ^ *(_DWORD *)(STACK[0x9F0]
                                                                                       + 4 * (HIBYTE(v75) ^ 0x70));
  unint64_t v84 = STACK[0x9E0];
  unsigned int v85 = *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v74) ^ 0x39u)) ^ 0x86BF6D7C;
  int v86 = (v85 & v83) - ((2 * (v85 & v83)) & 0x3B817694);
  unsigned int v87 = ((2 * (v85 + v83)) & 0xBD77BDDE)
      + ((v85 + v83) ^ 0xDEBBDEEF)
      + ((2 * v86 - 1149143404) ^ 0x3BC16013)
      + ((2 * (2 * v86 - 1149143404)) & 0xFF7FD2F0 ^ 0x88FD3FDF);
  unsigned int v88 = (((2 * (BYTE2(v75) ^ 0xD1)) & 0x11A) - (BYTE2(v75) ^ 0xD1) + 1461222002) ^ 0x57187AB3;
  unsigned int v89 = BYTE1(v75) ^ 0x4D;
  unsigned int v90 = v75 ^ 0x80;
  unint64_t v91 = STACK[0x9E8];
  unsigned int v92 = *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v77) ^ 0xEEu)) ^ *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v74) ^ 0x94u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v38) ^ 0x28)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * v90);
  unsigned int v93 = (v87 - ((2 * v87 + 1107825942) & 0x5BA3AE2E) - 824843870) ^ *(_DWORD *)(STACK[0x9E8] + 4 * v78);
  unsigned int v94 = *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v74) ^ 0xEA)) ^ *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v77) ^ 0xBFu)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * v89) ^ *(_DWORD *)(STACK[0x9E8] + 4 * ((v80 ^ 0x7B) + ((2 * v80) & 0xF7) - 123));
  unsigned int v95 = *(_DWORD *)(STACK[0x9F8] + 4 * v88) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v38) ^ 0x5Cu)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v77) ^ 0x68)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v74 ^ 0xA2u));
  unsigned int v96 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v92) ^ 0x8Cu)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v94) ^ 0xB0u)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v95 ^ 0x7Bu)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v93) ^ 0xFE));
  unsigned int v97 = HIBYTE(v95) ^ 0x39;
  int v98 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v95) ^ 0x6Eu)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v94) ^ 0x18));
  unsigned int v99 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v94) ^ 0x31u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v92) ^ 0x80)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * ((((2 * (BYTE1(v95) ^ 0x4221A028)) & 0x44301D4) - (BYTE1(v95) ^ 0x4221A028) + 1632395797) ^ 0x236DC26Bu)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (((v87 - ((2 * v87 + 22) & 0x2E) - 94) ^ *(unsigned char *)(STACK[0x9E8] + 4 * v78)) ^ 0xB1u));
  unsigned int v100 = v98 ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v92 ^ 0x2Eu)) ^ *(_DWORD *)(STACK[0x9E0]
                                                                                            + 4 * (BYTE1(v93) ^ 0x7Bu));
  unsigned int v101 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v93) ^ 9u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * v97) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v92) ^ 0xDEu)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v94 ^ 0x60u));
  unsigned int v102 = *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v99) ^ 0x85)) ^ *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v100) ^ 0x66u)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v101) ^ 0x6Bu)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v96 ^ 0xB3u));
  unsigned int v103 = *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v96) ^ 0x26)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v100) ^ 0x65u)) ^ *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v99) ^ 2u)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v101 ^ 0xA8u));
  int v104 = (v103 ^ 0x4472580F) + 61136;
  unsigned int v105 = v104 ^ 0xFFD76DD3;
  unsigned int v106 = (2 * v104) & 0xFFAEDBA6;
  int v107 = ((2 * v103) ^ 0x46AAB05C) + 204868 - 2 * (((2 * v103) ^ 0x46AAB05C) & 0x28EE ^ (2 * v103) & 2) + 2216;
  unsigned int v108 = v107 & 0x1DDA0 ^ 0xC021D9A9;
  unsigned int v109 = (2 * v107) & 0x21940 ^ 0xFFFDEEBF;
  unsigned int v110 = HIBYTE(v101) ^ 0xA4;
  unsigned int v111 = *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v96) ^ 0xBu)) ^ *(_DWORD *)(STACK[0x9E8]
                                                                           + 4 * (v99 ^ 0xB3u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v100) ^ 0xBE)) ^ *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v101) ^ 0x5Du));
  unsigned int v112 = v105 + v106 + v108 + v109 + 1074250021;
  unsigned int v113 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v96) ^ 0xDBu)) ^ *(_DWORD *)(STACK[0x9E8]
                                                                            + 4 * (v100 ^ 0xFDu)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * v110) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v99) ^ 0x8Du));
  unsigned int v114 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v111) ^ 0x16u)) ^ *(_DWORD *)(STACK[0x9E0] + 4
                                                                                            * (BYTE1(v113) ^ 0x83u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v102) ^ 0xE2)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v103 ^ 0xFu));
  unsigned int v115 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v102) ^ 0x25u)) ^ *(_DWORD *)(STACK[0x9E8]
                                                                             + 4
                                                                             * ((*(unsigned char *)(STACK[0x9F8] + 4 * (BYTE2(v96) ^ 0xDBu)) ^ *(unsigned char *)(STACK[0x9E8] + 4 * (v100 ^ 0xFDu)) ^ *(unsigned char *)(STACK[0x9F0] + 4 * v110) ^ *(unsigned char *)(STACK[0x9E0] + 4 * (BYTE1(v99) ^ 0x8Du))) ^ 0xC7u)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v111) ^ 0xB0u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v103) ^ 0x44));
  unsigned int v116 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v113) ^ 0x1Eu)) ^ *(_DWORD *)(STACK[0x9F0] + 4
                                                                                            * (HIBYTE(v111) ^ 0x7F)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v103) ^ 0x58u)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v102 ^ 0x92u));
  unsigned int v117 = *(_DWORD *)(STACK[0x9F8] + 4 * ((BYTE2(v112) - ((v112 >> 15) & 0xA2) + 81) ^ 0x51u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v113) ^ 0xF8)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v102) ^ 0x8Du)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v111 ^ 0x41u));
  int v118 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v114) ^ 0x35u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v115) ^ 9)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v116) ^ 0xFBu)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v117 ^ 0xFEu));
  unsigned int v119 = ((2 * v118) & 0xC7FFEBF6 ^ 0x68C6AF4) + (v118 ^ 0x7CB9C885);
  unsigned int v120 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v116) ^ 0x76u)) ^ *(_DWORD *)(STACK[0x9F0] + 4
                                                                                            * (HIBYTE(v114) ^ 0xC8)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v115 ^ 0xC4u)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v117) ^ 0x20u));
  unsigned int v121 = *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v116) ^ 0x94)) ^ *(_DWORD *)(STACK[0x9E0] + 4
                                                                                            * (BYTE1(v115) ^ 0xC6u)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v114 ^ 0x78u)) ^ *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v117) ^ 0x3Du));
  unsigned int v122 = v119 + 469764613;
  unsigned int v123 = *(_DWORD *)(STACK[0x9E8] + 4 * (v116 ^ 0x17u)) ^ *(_DWORD *)(STACK[0x9F8]
                                                                                       + 4 * (BYTE2(v115) ^ 0x45u)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v114) ^ 0x13u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v117) ^ 0x4F));
  if (v119 + 2086889195 >= 0x9F9CA31A) {
    char v124 = 42;
  }
  else {
    char v124 = 68;
  }
  if (v122 >= 0x9F9CA31A) {
    char v125 = 36;
  }
  else {
    char v125 = 10;
  }
  if (v122 < 0x9F9CA31A) {
    char v124 = 94;
  }
  unsigned int v126 = ((((v121 ^ 0xC305D511) >> (BYTE2(v117) & 0x10 ^ 0x10))
         - ((2 * ((v121 ^ 0xC305D511) >> (BYTE2(v117) & 0x10 ^ 0x10))) & 0x8DB71696)
         - 958690485) ^ 0xC6DB8B4B) >> (BYTE2(v117) & 0x10);
  int v127 = *(_DWORD *)(v84 + 4 * (BYTE1(v123) ^ 0xADu)) ^ *(_DWORD *)(v82 + 4 * (HIBYTE(v120) ^ 0x74)) ^ *(_DWORD *)(v91 + 4 * (v119 + v125 + v124 - 99)) ^ *(_DWORD *)(v81 + 4 * ((v126 - ((2 * v126) & 0xC8) + 100) ^ 0x64u));
  unsigned int v128 = HIBYTE(v123) ^ 0xAF;
  unsigned int v129 = *(_DWORD *)(v81 + 4 * (BYTE2(v120) ^ 0x26u)) ^ *(_DWORD *)(v91 + 4 * (v123 ^ 0xC1u)) ^ *(_DWORD *)(v84 + 4 * (BYTE1(v121) ^ 0xD5u)) ^ *(_DWORD *)(v82 + 4 * HIBYTE(v122));
  int v130 = *(_DWORD *)(v81 + 4 * (BYTE2(v123) ^ 0x6Du)) ^ *(_DWORD *)(v82 + 4 * (HIBYTE(v121) ^ 0xC3)) ^ *(_DWORD *)(v91 + 4 * (v120 ^ 0x28u)) ^ *(_DWORD *)(v84 + 4 * ((BYTE1(v122) - ((v122 >> 7) & 0x5A) + 45) ^ 0x2Du));
  int v131 = (14 - (v127 | 0x1F)) & 0x20 | 0x3F5A9DD6;
  char v132 = (((v52 & 0x10) + (v52 & 0x18 ^ 0x71)) | 6) - ((v52 & 0x18 ^ 0x71) & 0x70);
  unsigned int v133 = ((2 * (v127 & 0xFFFFFFDF ^ 0x34BD800)) & 0xD824314) - (v127 & 0xFFFFFFDF ^ 0x34BD800) - 113320363;
  unsigned int v134 = ((v133 & 0x7DCBE49 ^ 0x6D02000) + (v133 & 0xF82341B6 ^ 0xF8224011) - 1) ^ v131;
  unsigned int v135 = *(_DWORD *)(v81 + 4 * ((((v119 + 2565) >> 16) + 0x80) ^ 0x80u)) ^ *(_DWORD *)(v82 + 4 * v128) ^ *(_DWORD *)(v91 + 4 * (v121 ^ 0x11u)) ^ *(_DWORD *)(v84 + 4 * (BYTE1(v120) ^ 0x76u));
  unsigned int v136 = ((((v130 ^ 0x1D437685u) >> ((v132 ^ 0x11) & 0xF9))
         - ((2 * ((v130 ^ 0x1D437685u) >> ((v132 ^ 0x11) & 0xF9))) & 0x10054802)
         + 134390785) ^ 0x802A401) >> ((v132 ^ 0xF) & 0xF9);
  unsigned int v137 = *(_DWORD *)(v84 + 4 * (BYTE1(v130) ^ 0x76u)) ^ *(_DWORD *)(v82 + 4 * (HIBYTE(v129) ^ 0xAA)) ^ *(_DWORD *)(v91 + 4 * (v135 ^ 0x6Au)) ^ *(_DWORD *)(v81 + 4 * (BYTE2(v134) ^ 0xCEu));
  unsigned int v138 = *(_DWORD *)(v81 + 4 * (BYTE2(v130) ^ 0x43u)) ^ *(_DWORD *)(v84 + 4 * (BYTE1(v135) ^ 0x83u)) ^ *(_DWORD *)(v91 + 4 * (v129 ^ 0xBCu)) ^ *(_DWORD *)(v82 + 4 * (HIBYTE(v134) ^ 0xC6));
  unsigned int v139 = *(_DWORD *)(v91 + 4 * (v134 ^ 9u)) ^ *(_DWORD *)(v81 + 4 * (BYTE2(v135) ^ 0x7Bu)) ^ *(_DWORD *)(v82 + 4 * ((v136 - ((2 * v136) & 0x1A) - 115) ^ 0x8Du)) ^ *(_DWORD *)(v84 + 4 * (BYTE1(v129) ^ 0xD5u));
  unsigned int v140 = *(_DWORD *)(v82 + 4 * (HIBYTE(v135) ^ 0x91)) ^ *(_DWORD *)(v91 + 4 * (v130 ^ 0x85u)) ^ *(_DWORD *)(v81 + 4 * (BYTE2(v129) ^ 0x60u)) ^ *(_DWORD *)(v84 + 4 * BYTE1(v134));
  unsigned int v141 = ((2 * v139) & 0x30231824 ^ 0x30C65FC8)
       + (v139 & 0x9A958C13 ^ 0xE71CD01B)
       + (((v139 ^ 0xE492805A) + 1) ^ 0x3F7FDDFB)
       + ((2 * ((v139 ^ 0xE492805A) + 1)) & 0x7EFFBBF6);
  unsigned int v142 = (v141 - ((2 * v141 + 1343808542) & 0x66185C30) - 619143129) ^ ((v139 & 0x9A958C13 ^ 0xBF359820)
                                                                      + (v139 & 0x12118403 ^ 0x402507)
                                                                      - ((v139 & 0x9A958C13 ^ 0xBF359820) & 0x13118423));
  unsigned int v143 = BYTE2(v137) ^ 0x57;
  int v144 = *(_DWORD *)(v82 + 4 * (HIBYTE(v137) ^ 0x9E));
  int v145 = *(_DWORD *)(v84
                   + 4
                   * (((unsigned __int16)((v141 - ((2 * v141 - 7138) & 0x5C30) - 24537) ^ ((v139 & 0x8C13 ^ 0x9820) + (v139 & 0x8403 ^ 0x2507) - ((v139 & 0x8C13 ^ 0x9820) & 0x8423))) >> 8) ^ 0x1Fu));
  int v146 = *(_DWORD *)(v91 + 4 * (v140 ^ 0xDu));
  unsigned int v147 = *(_DWORD *)(v81 + 4 * (BYTE2(v138) ^ 0x11u)) ^ v144 ^ v146 ^ v145;
  unsigned int v148 = HIBYTE(v140) ^ 0xCC;
  unsigned int v149 = BYTE2(v140) ^ 0x29;
  int v150 = *(_DWORD *)(v84 + 4 * (BYTE1(v140) ^ 0xD7u));
  int v151 = *(_DWORD *)(v91 + 4 * (v137 ^ 0x76u));
  int v152 = *(_DWORD *)(v82 + 4 * (HIBYTE(v138) ^ 0x40)) ^ v150 ^ v151 ^ *(_DWORD *)(v81 + 4 * (BYTE2(v142) ^ 0x6Du));
  int v153 = *(_DWORD *)(v84 + 4 * (BYTE1(v137) ^ 0x81u));
  int v154 = *(_DWORD *)(v81 + 4 * v149);
  int v155 = v153 ^ *(_DWORD *)(v91 + 4 * (v138 ^ 0xE2u)) ^ v154 ^ *(_DWORD *)(v82
                                                                                            + 4 * (HIBYTE(v142) ^ 5));
  unsigned int v156 = ((((v155 & 0x6E4B94B6 ^ 0x69985647) - 1) & 0x2E4B9432 ^ 0xA5349933 | ((v155 & 0x6E4B94B6 ^ 0x69985647) - 1) & 0x40000084)
        - 1) ^ 0xEF7D9D12 | ((v155 & 0x91B46B49 ^ 0x91006949 | 0x94A6B557)
                           - (v155 & 0x91B46B49 ^ 0x91006949 | 0x6B594AA8)
                           + 1801013928) ^ 0x4B29416;
  int v157 = v156 - ((2 * v156) & 0x4AD6D17C) - 1519687490;
  int v158 = *(_DWORD *)(v82 + 4 * v148) ^ *(_DWORD *)(v81 + 4 * v143);
  unsigned int v159 = v158 ^ *(_DWORD *)(v84 + 4 * (BYTE1(v138) ^ 0x22u)) ^ *(_DWORD *)(v91 + 4 * (v142 ^ 0x1Eu));
  LODWORD(STACK[0x560]) = v157 ^ 0x83;
  unsigned int v160 = (v138 ^ 0xBFEEDD1D) + 1;
  v138 ^= 0x2355582Eu;
  int v161 = v138 + (v160 ^ 0x3FFFB96B) + ((2 * v160) & 0x7FFF72D6) - 1073723755;
  unsigned int v162 = ((v161 - ((2 * v161) & 0x9B0F16EA) + 1300728693) ^ 0xB278748D) + v138;
  unsigned int v163 = v162 - ((2 * v162) & 0xCDB0678E) + 1725445063;
  unsigned int v164 = v144 ^ v146 ^ *(_DWORD *)(v84 + 4 * (BYTE1(v139) ^ 0xCu)) ^ *(_DWORD *)(v81 + 4 * (BYTE2(v163) ^ 0xD8u));
  unsigned int v165 = v163 ^ 0xC7;
  unsigned int v166 = *(_DWORD *)(v81 + 4 * (BYTE2(v139) ^ 7u)) ^ v150 ^ v151 ^ *(_DWORD *)(v82 + 4 * (HIBYTE(v163) ^ 0x66));
  unsigned int v167 = v158 ^ *(_DWORD *)(v91 + 4 * (v139 ^ 0x49u)) ^ *(_DWORD *)(v84 + 4 * (BYTE1(v163) ^ 0x33u));
  int v168 = *(_DWORD *)(v82 + 4 * (HIBYTE(v139) ^ 0x7E)) ^ v154 ^ *(_DWORD *)(v91 + 4 * v165);
  int v169 = v153 ^ 0x2355582E;
  int v170 = v168 ^ ~v153;
  int v171 = v168 ^ v169;
  if ((v170 & 0x40000 | 0x200) == 0x200) {
    int v172 = 0x40000;
  }
  else {
    int v172 = -262144;
  }
  unsigned int v173 = v172 + v171 - 2 * ((v172 + v171) & 0x22F7425F ^ v171 & 0x14) + 586629707;
  int v174 = *(_DWORD *)(v81 + 4 * (BYTE2(v152) ^ 0x7Bu));
  int v175 = *(_DWORD *)(v81 + 4 * (BYTE2(v157) ^ 0x17u));
  LODWORD(STACK[0x558]) = *(_DWORD *)(v81 + 4 * (BYTE2(v159) ^ 0x55u));
  LODWORD(STACK[0x550]) = *(_DWORD *)(v81 + 4 * (BYTE2(v147) ^ 0x3Fu));
  int v176 = *(_DWORD *)(v81 + 4 * (BYTE2(v173) ^ 0x8Fu));
  int v177 = *(_DWORD *)(v81 + 4 * (BYTE2(v167) ^ 0x55u));
  int v178 = *(_DWORD *)(v81 + 4 * (BYTE2(v164) ^ 0x3Fu));
  int v179 = *(_DWORD *)(v91 + 4 * (v167 ^ 0x30u)) ^ *(_DWORD *)(v81 + 4 * (BYTE2(v166) ^ 0x7Bu)) ^ *(_DWORD *)(v82 + 4 * (HIBYTE(v164) ^ 0x84));
  unsigned int v180 = v152;
  unsigned int v181 = BYTE1(v152) ^ 0x31;
  int v182 = *(_DWORD *)(v84 + 4 * (BYTE1(v159) ^ 0xEAu));
  unsigned int v183 = v157;
  LODWORD(STACK[0x568]) = v157;
  int v184 = *(_DWORD *)(v84 + 4 * (BYTE1(v157) ^ 0x55u));
  int v185 = *(_DWORD *)(v84 + 4 * (BYTE1(v147) ^ 0x4Bu));
  int v186 = *(_DWORD *)(v84 + 4 * v181);
  int v187 = *(_DWORD *)(v84 + 4 * (BYTE1(v167) ^ 0xEAu));
  int v188 = *(_DWORD *)(v84 + 4 * (BYTE1(v173) ^ 0x7Fu));
  int v189 = *(_DWORD *)(v84 + 4 * (BYTE1(v164) ^ 0x4Bu));
  int v190 = *(_DWORD *)(v84 + 4 * (BYTE1(v166) ^ 0x31u));
  int v191 = *(_DWORD *)(v82 + 4 * (HIBYTE(v147) ^ 0x84));
  int v192 = *(_DWORD *)(v82 + 4 * (HIBYTE(v180) ^ 0xE7));
  int v193 = *(_DWORD *)(v82 + 4 * (HIBYTE(v159) ^ 0x55));
  int v194 = *(_DWORD *)(v82 + 4 * (HIBYTE(v183) ^ 0x3C));
  int v195 = *(_DWORD *)(v82 + 4 * (HIBYTE(v166) ^ 0xE7));
  int v196 = *(_DWORD *)(v82 + 4 * (HIBYTE(v173) ^ 0xBB));
  int v197 = *(_DWORD *)(v82 + 4 * (HIBYTE(v167) ^ 0x55));
  int v198 = v179 ^ v188;
  int v199 = v147;
  int v200 = v191 ^ v174 ^ *(_DWORD *)(v91 + 4 * (v159 ^ 0x30u));
  int v201 = STACK[0x578];
  unsigned int v202 = ((2 * ((v200 ^ 0xB74FF3C8 ^ v184) - 1202274211)) & 0x7E4DBDFA)
       + (((v200 ^ 0xB74FF3C8 ^ v184) - 1202274211) ^ 0xBF26DEFD);
  int v203 = v189 ^ v177 ^ *(_DWORD *)(v91 + 4 * (v166 ^ 0x74u)) ^ v196;
  int v204 = *(_DWORD *)(v91 + 4 * (v180 ^ 0x74u));
  int v205 = v195 ^ v187 ^ *(_DWORD *)(v91 + 4 * (v164 ^ 0xB8u)) ^ v176;
  int v206 = *(_DWORD *)(v91 + 4 * LODWORD(STACK[0x560]));
  int v207 = v202 + (v198 ^ 0x48B00C37) - ((2 * (v202 + (v198 ^ 0x48B00C37)) + 28459528) & 0x7EE3CC62);
  int v208 = (v192 ^ v182 ^ *(_DWORD *)(v91 + 4 * (v199 ^ 0xB8u)) ^ 0x73619A92 ^ v175) + 758658806;
  int v209 = v190 ^ v178 ^ v197 ^ *(_DWORD *)(v91 + 4 * (v173 ^ 0x76u));
  unsigned int v210 = (v193 ^ LODWORD(STACK[0x550]) ^ v186 ^ 0x9C1D15B1 ^ v206) - 907041214;
  unsigned int v211 = ((2 * v210) & 0x9BF77F9C) + (v210 ^ 0x4DFBBFCE) + (v209 ^ 0x63E2EA4E);
  unsigned int v212 = (v204 ^ LODWORD(STACK[0x558]) ^ v185 ^ 0xEA1DA7AF ^ v194) + 1794750297;
  unsigned int v213 = ((2 * v212) & 0xFDCCFF9E) + (v212 ^ 0x7EE67FCF) + (v203 ^ 0x15E25850);
  unsigned int v214 = (v213 - ((2 * v213 + 36896868) & 0xE70BF7AA) - 190874617) ^ 0xC4FCB75E;
  int v215 = ((-1397497827 * v214) ^ 0x3CFF7D53) + ((1499971642 * v214) & 0x79FEFAA6);
  unsigned int v216 = (((2 * v208) & 0xCAFB7FDC)
        + (v208 ^ 0x657DBFEE)
        + (v205 ^ 0x8C9E656D)
        - ((2 * (((2 * v208) & 0xCAFB7FDC) + (v208 ^ 0x657DBFEE) + (v205 ^ 0x8C9E656D)) + 17072166) & 0x3650D60)
        - 1674262845) ^ 0x3D43A6E1;
  unsigned int v217 = ((1339632071 * v216) ^ 0xBF7FD7CF) + ((531780494 * v216) & 0x7EFFAF9E);
  unsigned int v218 = (v211 - ((2 * v211 + 1678278758) & 0xE5A8AF96) + 618174462) ^ 0xE485AD5C;
  unsigned int v219 = ((-193647233 * v218) ^ 0xFFDFFFBF) + ((-387294466 * v218) & 0xFFBFFF7E);
  unsigned int v220 = ((-619630751 * ((v207 + 4917045) ^ 0x799E9A03)) ^ 0x67FEFE1D)
       + ((-1239261502 * ((v207 + 4917045) ^ 0x799E9A03)) & 0xCFFDFC3A)
       + v217;
  int v221 = v219 - v220 - ((2 * (v219 - v220) + 255700058) & 0x1AE17752) - 1257270826;
  unsigned int v222 = v217
       + ((v215 - 1023376422 + (v221 ^ 0x8D70BBA9) - 301) ^ 0xAA242441)
       - ((2 * (v215 - 1023376422 + (v221 ^ 0x8D70BBA9) - 301)) & 0xABB7B77C)
       + 1;
  unsigned int v223 = v219 + v215 - ((2 * (v219 + v215) - 2042559012) & 0xE5B6D3A4) + 905702592;
  unsigned int v224 = (v223 ^ 0x8D24962D) + v220 - ((2 * ((v223 ^ 0x8D24962D) + v220) + 822236202) & 0x3D78C100) + 2000521877;
  unsigned int v225 = (v222 - ((2 * v222 + 750258142) & 0x9BB843F4) - 466082327) ^ v221;
  unsigned int v226 = (v198 ^ 0xB74FF3C8) + (v224 ^ 0xA1EF052C ^ v225) + 1;
  int v227 = v224 ^ v221;
  unsigned int v228 = ((2 * v226) & 0xB24EDEFE)
       + (v226 ^ 0xD9276F7F)
       - ((2 * (((2 * v226) & 0xB24EDEFE) + (v226 ^ 0xD9276F7F)) + 490115130) & 0x364C45B2)
       - 1983812874;
  unsigned int v229 = ((2 * ((v205 ^ 0x73619A92) + (v227 ^ 0xEC3324D6) + 1)) & 0xED0FA3FE)
       + (((v205 ^ 0x73619A92) + (v227 ^ 0xEC3324D6) + 1) ^ 0x7687D1FF);
  unsigned int v230 = v229 - ((2 * v229 - 766354110) & 0x9EA0BBFA) + 947489950;
  unsigned int v231 = (v227 ^ 0x13CCDB29)
       + (v223 ^ 0xEC670952 ^ v224)
       - ((2 * ((v227 ^ 0x13CCDB29) + (v223 ^ 0xEC670952 ^ v224))) & 0x12CE42FC)
       - 1989729922;
  unsigned int v232 = ((2 * ((v203 ^ 0xEA1DA7AF) + (v231 ^ 0x7698DE81) + 1)) & 0xFD6FDE9E)
       + (((v203 ^ 0xEA1DA7AF) + (v231 ^ 0x7698DE81) + 1) ^ 0x7EB7EF4F);
  unsigned int v233 = v225 ^ 0xC0AC9A53;
  unsigned int v234 = ((v231 ^ 0x8967217E) & (v225 ^ 0xC0AC9A53)) - ((2 * ((v231 ^ 0x8967217E) & (v225 ^ 0xC0AC9A53))) & 0x531DCC3C);
  unsigned int v235 = (v225 ^ 0xC0AC9A53) + (v225 ^ v231 ^ 0xB63444D2) + 1;
  int v236 = v235 - ((2 * v235) & 0x7ACFEECC) + 1030223718;
  unsigned int v237 = v232 - ((2 * v232 + 1814123742) & 0x656BA3BA) + 1757838412;
  unsigned int v238 = (v231 ^ ((v231 ^ 0x7698DE81) - ((2 * (v231 ^ 0x7698DE81) + 2) & 0xB057FB66) + 1479278004) ^ 0xEC2B2BAB ^ v236)
       + v233;
  unsigned int v239 = (v209 ^ 0x9C1D15B1)
       + ((2 * v234 - 753021892) ^ 0x333A4439)
       + (v238 ^ 0x80803088)
       + ((2 * (2 * v234 - 753021892)) & 0x3FB0EFF4 ^ 0xD9CF778F)
       - ((2 * v238) & 0xFEFF9EEE)
       - 1621604492;
  unsigned int v240 = ((2 * v239) & 0x5EEFFFC6)
       + (v239 ^ 0x2F77FFE3)
       - ((2 * (((2 * v239) & 0x5EEFFFC6) + (v239 ^ 0x2F77FFE3)) + 855968676) & 0x9A0DCF1A)
       + 1720282463;
  int v241 = *(_DWORD *)(STACK[0x9C0] + 4 * (HIBYTE(v237) ^ 0xB2));
  int v242 = v241 ^ 0x7D93C5C3;
  int v243 = *(_DWORD *)(STACK[0x9B8] + 4 * (BYTE2(v240) ^ 6u));
  unsigned int v244 = (v241 ^ 0x7D93C5C3) + (v241 ^ 0x8544C05E ^ v243) + 1;
  unsigned int v245 = (v243 ^ ((v243 ^ 0xF8D7059D) + 1132172253 + (~(2 * (v243 ^ 0xF8D7059D) + 2) | 0x7908D849)) ^ 0x2BF24030 ^ (v244 - ((2 * v244) & 0xDF425312) + 1872832905))
       + v242;
  int v246 = *(_DWORD *)(STACK[0x9C0] + 4 * (HIBYTE(v240) ^ 0xCD));
  int v247 = *(_DWORD *)(STACK[0x9B8] + 4 * (BYTE2(v228) ^ 0x26u));
  int v248 = *(_DWORD *)(STACK[0xA00] + 4 * (BYTE1(v240) ^ 0xE7u));
  int v249 = LODWORD(STACK[0x450]) ^ LODWORD(STACK[0x464]);
  int v250 = v249 ^ LODWORD(STACK[0x468]);
  unsigned int v251 = v250 ^ *(_DWORD *)(STACK[0x9B8] + 4 * (BYTE2(v230) ^ 0x50u)) ^ *(_DWORD *)(STACK[0xA00]
                                                                                    + 4 * (BYTE1(v237) ^ 0xD1u)) ^ *(_DWORD *)(STACK[0x9C0] + 4 * (HIBYTE(v228) ^ 0x1B)) ^ *(_DWORD *)(STACK[0x9D0] + 4 * (v240 ^ 0x8Du));
  int v252 = v249 ^ *(_DWORD *)(STACK[0x9B8] + 4 * (BYTE2(v237) ^ 0xB5u)) ^ *(_DWORD *)(STACK[0x9D0]
                                                                                    + 4
                                                                                    * (v228 ^ 0xD9u)) ^ *(_DWORD *)(STACK[0x9C0] + 4 * (HIBYTE(v230) ^ 0xCF)) ^ v248;
  unsigned int v253 = v250 ^ *(_DWORD *)(STACK[0x9D0] + 4 * (v230 ^ 0xFDu)) ^ *(_DWORD *)(STACK[0xA00]
                                                                                              + 4
                                                                                              * (BYTE1(v228) ^ 0x22u)) ^ (v245 - ((2 * v245) & 0x9AA76126) + 1297330323);
  unsigned int v254 = v250 ^ *(_DWORD *)(STACK[0x9D0] + 4 * (v237 ^ 0xDDu)) ^ v247 ^ *(_DWORD *)(STACK[0xA00] + 4 * (BYTE1(v230) ^ 0x5Du)) ^ v246;
  HIDWORD(v255) = LODWORD(STACK[0x468]) ^ 0x6BCE0E;
  LODWORD(v255) = LODWORD(STACK[0x468]) ^ 0x93000000;
  int v256 = (v255 >> 24) - ((2 * (v255 >> 24)) & 0x8553A4F0) + 1118425720;
  HIDWORD(v255) = v252 ^ 0x5B65DE;
  LODWORD(v255) = v252 ^ 0xD000000;
  int v257 = ((v255 >> 24) - ((2 * (v255 >> 24)) & 0xF783F8F8) - 71172996) ^ v256;
  HIDWORD(v255) = v257 ^ 0xFFFFFFFB;
  LODWORD(v255) = v257 ^ 0xE9D54A00;
  int v258 = (v255 >> 8) - ((2 * (v255 >> 8)) & 0x54AB2F02) + 710252417;
  if (LODWORD(STACK[0x570]) == 1) {
    int v259 = -1500974396;
  }
  else {
    int v259 = -1495767328;
  }
  unsigned int v260 = v258 ^ v259;
  unsigned int v261 = (((v258 ^ v259) & 0xFF0E6B48 ^ 0x860A6308 | 0x70A1E963)
        - ((v258 ^ v259) & 0xFF0E6B48 ^ 0x860A6308 | 0x8F5E169C)
        - 1889659236) ^ 0x85A7C26B | ((v258 & 0xF194B7 ^ 0x19A74AC9 | 0xC94931E6)
                                    - (v258 & 0xF194B7 ^ 0x19A74AC9 | 0x36B6CE19)
                                    + 917949977) ^ 0xD0EF7B8A;
  unsigned int v262 = v261 - ((2 * v261) & 0x81F1F8AC) + 1090059350;
  int v263 = byte_10021FC00[(((v254 >> 8) & 0xB3 ^ 0x1FC11) + ((v254 >> 8) & 0x4C ^ 0x49) - 1) & 0x3FFFF ^ 0x1FC89];
  char v264 = 2 * v263;
  unsigned int v265 = v263 - ((2 * v263 + 36) & 0x34) - 52;
  LOBYTE(v265) = ((v265 | 0xBE) - (v264 & 2) - 3) ^ ((v265 & 0xA2 ^ 0x20) - (v265 | 0xE3)) ^ (((v265 >> 2) & 0x1D ^ 0xB1 | 0x78)
                                                                                            - ((v265 >> 2) & 0x1D ^ 0xB1 | 7)
                                                                                            + 7);
  int v266 = (v254 & 0xF2 ^ 3) - (v254 & 0xD) - 1162854644;
  LOBYTE(v266) = byte_1002242E0[((v266 & 0x8287C37A ^ 0x101C122)
                               + (v266 ^ 0x9E8E3EDD)
                               - ((v266 ^ 0x9E8E3EDD) & 0x427C37A)) ^ 0xA399C266];
  LOBYTE(STACK[0xA9E]) = v265 ^ 0xEF;
  LOBYTE(STACK[0xA9F]) = v266 ^ 0xC6;
  uint64_t v267 = HIBYTE(v253);
  int v268 = 2 * (v267 ^ 0x54);
  unsigned int v269 = ((((v267 ^ 0x54) - (v268 & 0x7E)) << 24) - 1090519040) ^ 0xBF000000;
  char v270 = byte_100239880[HIBYTE(v254) ^ 0x25];
  LOBYTE(STACK[0xA9C]) = (v270 - ((2 * v270 + 90) & 0xD2) + 22) ^ 0x58;
  unsigned int v271 = ((((((v267 ^ 0x54) - (v268 & 0xFFFFFFFB)) << 24) + 2097152000) ^ 0x7D000000)
        - ((2 * (((((v267 ^ 0x54) - (v268 & 0xFFFFFFFB)) << 24) + 2097152000) ^ 0x7D000000)) & 0x2C000000)
        - 1775206282) ^ 0xAAAA48AF;
  int v272 = (v269 - ((2 * v269) & 0x46000000) - 1548354262) ^ 0x423A36EB;
  int v273 = (v271 & v272) - ((2 * (v271 & v272)) & 0x5854502E);
  unsigned int v274 = ((v272 + v271) ^ 0x373DAFF5)
       + ((2 * (v272 + v271)) & 0x6E7B5FEA)
       + ((2 * v273 - 665563090) ^ 0x801240A3)
       + 1887190911
       + ((2 * (2 * v273 - 665563090)) & 0x4F73DEE4 ^ 0xFFDF7FBB);
  unsigned int v275 = ((v274 >> 22) + 1275867968 - ((v274 >> 21) & 0x762) + 113) ^ 0x4C0C3340;
  unsigned int v276 = (((((v275 >> 2) - ((v275 >> 1) & 0x70) + 72) ^ 0xB) - 16) ^ 0xFFFFFFD6) + 1;
  LOBYTE(v276) = (v276 ^ 0xFB) + byte_100239880[v267 ^ 0x71] + ((2 * v276) & 0xF7);
  int v277 = (HIWORD(v253) ^ 0x89FE) + (HIWORD(v253) ^ 0x89E1);
  LOBYTE(STACK[0xA98]) = (v276 - ((2 * v276 + 90) & 0xFC) + 43) ^ 0x33;
  LOBYTE(v277) = ((2 * v277) & 0xEC) + (v277 ^ 0xF6) + 10;
  LOBYTE(v276) = byte_100238350[((BYTE2(v253) ^ 0x202931A0 | 0xABD4BFD6)
                               - (BYTE2(v253) ^ 0x202931A0 | 0x542B4029)
                               + 1412120617) ^ 0x8BFD8E23]
               + ((2 * v277) & 4)
               + (v277 ^ 0x82)
               + 51;
  LOBYTE(v277) = byte_100239880[HIBYTE(v260) ^ 0xBALL];
  LOBYTE(STACK[0xA99]) = (v276 - ((2 * v276) & 0x87) + 67) ^ 0xF2;
  char v278 = v277 - ((2 * v277 + 90) & 0x4A) + 82;
  LOBYTE(v276) = ((-92 - v277 - ((-90 - 2 * v277) & 0xA2)) ^ v278 ^ 0xB4 ^ ((v278 ^ 0x38)
                                                                          + ((2 * (v278 ^ 0x38) - 58) & 0x80)
                                                                          - 93))
               + 98;
  LOBYTE(STACK[0xA94]) = (v276 ^ 0xFB) + ((2 * v276) & 0xF7) + 5;
  int v279 = ((2 * (BYTE2(v254) ^ 0x2C)) & 0xAE) - (BYTE2(v254) ^ 0x2C) - 860859736;
  int v280 = (HIWORD(v254) ^ 0x9ED4) + (HIWORD(v254) ^ 0x9ECB);
  LOBYTE(v280) = ((2 * v280) & 0xF6) + (v280 ^ 0x7B) - 123;
  LOBYTE(v279) = byte_100238350[((v279 & 0x841041A1 ^ 0x134B2D01)
                               + (v279 ^ 0x841450B0)
                               - ((v279 ^ 0x841450B0) & 0x82001A1)) ^ 0xD7DF6FEALL]
               + (v280 ^ 0x7B)
               + ((2 * v280) & 0xF7);
  LOBYTE(STACK[0xA9D]) = (v279 - ((2 * v279 + 116) & 0xF7) - 75) ^ 0xD6;
  int v281 = (((2 * (v262 ^ 0x36)) | 0x5F193132) - (v262 ^ 0x36) - 797743257) ^ 0x2FCEC2F9;
  LOBYTE(STACK[0xA97]) = byte_1002242E0[(v281 - ((2 * v281) & 0x61666CB2u) + 1890793049) ^ 0x70F16C98] ^ 0x91;
  unsigned int v282 = ((v251 ^ 0xB7) - ((2 * (v251 ^ 0xB7)) & 0x162) - 1830773583) ^ 0x98A49C94;
  int v283 = (BYTE1(v253) ^ 7) - ((2 * (BYTE1(v253) ^ 7)) & 0xB6) - 1379338149;
  LOBYTE(v283) = byte_10021FC00[((v283 & 0x84C0D40A) + (v283 ^ 0x9FC8FE5B) - ((v283 ^ 0x9FC8FE5B) & 0x2200040A) + 3473408) ^ 0x94F5D2BELL];
  LOBYTE(STACK[0xA93]) = byte_1002242E0[(((2 * v282) & 0x48806E8) - v282 - 1187316597) ^ 0xB37EFCDELL] ^ 0xCE;
  char v284 = v283 - ((2 * v283 + 100) & 0x6E) + 105;
  char v285 = v284 ^ 0xBF;
  if (!((LODWORD(STACK[0x568]) ^ 0x3C000000u) >> 24)) {
    char v285 = 116;
  }
  char v286 = v284 ^ ((((v285 & (v284 ^ 0x37)) - ((2 * (v285 & (v284 ^ 0x37))) & 0xF0) - 8) & 0xFC) >> 2) ^ 0xD8;
  char v287 = byte_1002242E0[((v253 ^ 0x401EA)
                       + (v253 & 0x5D ^ 0x781A4A15)
                       - ((v253 ^ 0x401EA) & 0x4005D)) ^ 0x781A4BB9];
  LOBYTE(STACK[0xA9A]) = v286;
  LOBYTE(STACK[0xA9B]) = v287 ^ 0x60;
  int v288 = (HIWORD(v251) ^ 0xF793) + (HIWORD(v251) ^ 0xF78C);
  int v289 = (((2 * (BYTE2(v251) ^ 0x225BEB23)) & 0x3755BA) - (BYTE2(v251) ^ 0x225BEB23) + 801129762) ^ 0xD1B8F30;
  int v290 = ((2 * v288) & 0x46) + (v288 ^ 0xA3) + 93;
  unsigned int v291 = (v290 ^ 0x66)
       + ((2 * v290) & 0xFFFFFFCC)
       + byte_100238350[(((2 * v289) & 0xFAC4E8u) - v289 - 1232953973) ^ 0xB602BC9DLL];
  HIDWORD(v292) = v291 - 1;
  LODWORD(v292) = (v291 << 24) + 1325400064;
  int v293 = (v292 >> 27) + (~(2 * (v292 >> 27)) | 0xFFFFFF9F) + 49;
  HIDWORD(v292) = v293 ^ 0x1B;
  LODWORD(v292) = (v293 ^ 0xFFFFFFBF) << 24;
  LOBYTE(STACK[0xA91]) = ((v292 >> 29) - ((2 * (v292 >> 29)) & 0x44) + 34) ^ 0x28;
  int v294 = byte_10021FC00[((BYTE1(v251) ^ 0x1F) + ((v251 >> 8) & 0xE7 ^ 0x13E0) - ((BYTE1(v251) ^ 0x1F) & 0xFFFFFFE7)) ^ 0x130CLL];
  unsigned int v295 = v294 - 2 * ((v294 + 50) & 0x53 ^ v294 & 1) - 124;
  int v296 = (((v295 >> 2) & 0x1D ^ 0x11) - ((2 * ((v295 >> 2) & 0x1D ^ 0x11)) & 0x38) + 62) ^ 0x3C;
  LOBYTE(STACK[0xA92]) = v295 ^ 0x2A ^ (v296 - ((2 * v296) & 0x33) - 103);
  int v297 = byte_10021FC00[BYTE1(v262) ^ 9];
  unsigned int v298 = v297 - ((2 * v297 + 100) & 0xFFFFFFDA) - 97;
  char v299 = ((v298 >> 2) & 0x1D ^ 8) - ((v298 >> 1) & 0x28) - 106;
  int v300 = (HIWORD(v262) ^ 0x402B) + (HIWORD(v262) ^ 0x4034);
  LOBYTE(STACK[0xA96]) = v298 ^ 0x14 ^ ((v299 & 0x8D ^ 8) + (v299 & 0x70 ^ 0x11) - 1);
  LOBYTE(v300) = 2 * (v300 & 0x1F) + (v300 ^ 0x9F) + 97;
  LOBYTE(v298) = ((2 * v300) & 0x3A)
               + (v300 ^ 0x9D)
               + byte_100238350[(((2 * (BYTE2(v262) ^ 0x104024EA)) & 0x80000E) - (BYTE2(v262) ^ 0x104024EAu) + 856601848) ^ 0x234E908DLL];
  LOBYTE(STACK[0xA95]) = (v298 - 2 * ((v298 + 24) & 0x1F ^ v298 & 5) + 50) ^ 0x45;
  char v301 = byte_100239880[HIBYTE(v251) ^ 0xB4];
  LOBYTE(STACK[0xA90]) = (v301 + (~(2 * v301 + 90) | 0x89) - 23) ^ 0x38;
  LODWORD(STACK[0x9DC]) = 0;
  unsigned int v302 = (void (*)(unint64_t))*(&off_10026D1A0 + v201 + 1943);
  v302(STACK[0x9C0]);
  v302(STACK[0x9E8]);
  unsigned int v303 = (void (*)(unint64_t))*(&off_10026D1A0 + (v201 ^ 0x8B9));
  v303(STACK[0x9B8]);
  v303(STACK[0xA00]);
  v303(STACK[0x9D0]);
  v302(STACK[0x9E0]);
  v303(STACK[0x9F0]);
  v302(STACK[0x9F8]);
  if (LODWORD(STACK[0x9DC]) == v201 - 151) {
    int v304 = 0;
  }
  else {
    int v304 = -42885;
  }
  unint64_t v305 = STACK[0x938];
  STACK[0x9B0] -= 32;
  return ((uint64_t (*)(unint64_t))*(&off_10026D1A0
                                                    + (((v304 == ((v201 + 1809) ^ 0x7A8)) * (((v201 - 15) | 1) ^ 0x7BE)) ^ (v201 + 256))))(v305);
}

void sub_1001A4CBC(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W8>)
{
  a1[17] ^= LOBYTE(STACK[0xA90]) ^ 0xBD;
  a1[18] ^= (a7 + 99) & 0xBB ^ LOBYTE(STACK[0xA91]) ^ 0xD5;
  a1[19] ^= LOBYTE(STACK[0xA92]) ^ 0x1A;
  a1[20] ^= LOBYTE(STACK[0xA93]) ^ 0x25;
  unsigned int v7 = (_DWORD *)STACK[0x8F0];
  *unsigned int v7 = 2023518721;
  *(void *)STACK[0x518] = a1;
  *(_DWORD *)STACK[0x528] = LODWORD(STACK[0x858]) ^ 0xA823E962;
  *(void *)STACK[0x538] = v7;
  sub_1001F0F6C((uint64_t)a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1001A4D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x570] = 0;
  uint64_t v8 = a3 + a2 + v7 - 345090756;
  int v9 = (((*(unsigned __int8 *)v8 - ((*(unsigned __int8 *)v8 << ((88 * (v6 ^ 0x81)) ^ 0xB1)) & 0xC0)) << 8) + 24576) ^ 0x6000;
  LODWORD(v8) = (v9 - ((2 * v9) & 0xFFFF9A00) - 13024) ^ 0xFFFFCD20 | (*(unsigned __int8 *)(v8 + 1)
                                                                     - ((2 * *(unsigned __int8 *)(v8 + 1)) & 0x18A)
                                                                     + 14277) ^ 0x37C5;
  LODWORD(v8) = (v8 - ((2 * v8) & 0x5E) + 47) ^ 0x2F;
  int v10 = ((unsigned __int16)v8 ^ 0x67767FFE) + ((2 * v8) & 0xFFFC) - 20054224;
  unint64_t v11 = ((v5 - 1180336884) | ((unint64_t)((v5 - 1180336884) < 0x194351A9) << 32))
      + v7
      - 423842217;
  LOWORD(v9) = (((*(unsigned __int8 *)v11 - ((2 * *(unsigned __int8 *)v11) & 0xA4)) << 8) - 11776) ^ 0xD200;
  LOWORD(v11) = (v9 - ((2 * v9) & 0x7200) - 18134) ^ 0xB92A | (*(unsigned __int8 *)(v11 + 1)
                                                             - ((2 * *(unsigned __int8 *)(v11 + 1)) & 0x152)
                                                             - 23383) ^ 0xA4A9;
  LODWORD(v11) = (unsigned __int16)(v11 - ((2 * v11) & 0x7A28) + 15636) ^ 0x3D14;
  LODWORD(STACK[0x560]) = (v11 ^ 0xA74DFABD) + 1539012592 + ((v4 - 644) & (2 * v11));
  LODWORD(STACK[0x568]) = v10;
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((1698
                                * (*(unsigned __int8 *)(v7 + (v5 - 1468586280 + v10 - 1851357857)) == 128)) ^ v6)))();
}

uint64_t sub_1001A4F94@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  int v8 = (v3 + 1421) | 0xA0;
  STACK[0x570] = v5 + (v8 ^ v4) + v2;
  uint64_t v10 = v6;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (v8 + 473)))(v10);
  STACK[0x8A0] = v7;
  STACK[0x648] = STACK[0x570];
  LODWORD(STACK[0x784]) = STACK[0x568];
  LODWORD(STACK[0x930]) = STACK[0x560];
  return (*(uint64_t (**)(uint64_t))(a1
                                            + 8
                                            * (int)(((a2 != 0)
                                                   * (((4 * v8) ^ 0xFFFFE06A) + ((v8 + 910519998) & 0xC9BA8FF5))) ^ v8)))(v12);
}

void sub_1001A5038()
{
  ((void (*)(uint64_t, void, uint64_t))*(&off_10026D1A0 + (v0 ^ 0x1AE8) + 2102))(v1, 0, 16);
  JUMPOUT(0x100195C84);
}

uint64_t sub_1001A50AC(int a1)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (int)(((((v1 + 486) ^ 0xFFFFF809) + v1 + 790) * (a1 == LODWORD(STACK[0x570]))) | v1)))();
}

uint64_t sub_1001A50FC@<X0>(unsigned int a1@<W0>, uint64_t a2@<X3>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (v4 + v6)) = *(unsigned char *)(v5 + (a3 + v7))
                                           - ((2 * *(unsigned char *)(v5 + (a3 + v7))) & 0xF4)
                                           - 6;
  return (*(uint64_t (**)(void))(a2 + 8 * ((7 * ((v4 & 0xFFFFFFC0) != v8)) ^ a1)))();
}

uint64_t sub_1001A5158@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  LODWORD(STACK[0x5DC]) = a2;
  STACK[0x728] = *(void *)(a1 + 8 * v2);
  return sub_1001F48B8();
}

uint64_t sub_1001A5170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = 7 * (STACK[0x578] ^ 0x721);
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32((const float *)v3);
  uint64_t v7 = 222 * (v5 ^ 0x3BDu);
  v8.i64[0] = 0x8000000080000000;
  v8.i64[1] = 0x8000000080000000;
  v9.i64[0] = 0x100000001;
  v9.i64[1] = 0x100000001;
  v4.i32[0] = *(_DWORD *)(v3 + 4);
  v4.i32[1] = *(_DWORD *)(v3 + 4 * (v7 - 442));
  v4.i32[2] = *(_DWORD *)(v3 + 12);
  int8x16_t v10 = vextq_s8(v6, v4, 0xCuLL);
  int8x16_t v11 = v4;
  v11.i32[3] = *(_DWORD *)(v3 + 16);
  int32x4_t v12 = (int32x4_t)veorq_s8(vorrq_s8(veorq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(v10, v8), vdupq_n_s32(0xCF9307E1)), (int8x16_t)vdupq_n_s32(0x7B45F037u)), vdupq_n_s32(0x2A29F587u)), (int8x16_t)vdupq_n_s32(0xDF00ED5E)), (int8x16_t)vaddq_s32(vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v11, (int8x16_t)vdupq_n_s32(0x687B51B6u)), (int8x16_t)vdupq_n_s32(0x48024085u)), (int32x4_t)veorq_s8(vandq_s8(v11, (int8x16_t)vdupq_n_s32(0x1784AE48u)), (int8x16_t)vdupq_n_s32(0x17808E49u))), v9)),
                     (int8x16_t)vdupq_n_s32(0x555BC632u));
  v13.i32[0] = *((_DWORD *)&STACK[0x14A0] + (*(_DWORD *)(v3 + 4) & 1));
  v13.i32[1] = *((_DWORD *)&STACK[0x14A0] + (*(_DWORD *)(v3 + 4 * (v7 - 442)) & 1));
  v13.i32[2] = *((_DWORD *)&STACK[0x14A0] + (*(_DWORD *)(v3 + 12) & 1));
  v13.i32[3] = *((_DWORD *)&STACK[0x14A0] + (v11.i8[12] & 1));
  *(int8x16_t *)uint64_t v3 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v3 + 1588), v13), (int8x16_t)vdupq_n_s32(0x3A70024Bu)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v12, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v12, v12), (int8x16_t)vdupq_n_s32(0xB3DBB9B6))), vdupq_n_s32(0xD9EDDCDB)), 1uLL));
  return (*(uint64_t (**)(void))(a3 + 8 * (v5 ^ 0x57)))();
}

uint64_t sub_1001A534C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W8>)
{
  int8x16_t v8 = (unsigned int *)(v6 + 4 * (v4 + v7));
  int v9 = a3 + ((a4 + 1516 + (v5 | 0x7FFFFFFF) - 812449735) ^ 0x7B45F037) + 3253;
  uint64_t v10 = v4 + 1;
  int v11 = *(_DWORD *)(v6 + 4 * (v10 + v7));
  unsigned int v12 = (((v11 & 0x687B51B6 ^ 0x48024085) + (v11 & 0x1784AE48 ^ 0x17808E49) - 2) | v9 ^ 0xDF00ED5E) ^ 0x555BC632;
  *int8x16_t v8 = v8[397] ^ *((_DWORD *)&STACK[0x14A0] + (v11 & 1)) ^ ((v12 - ((2 * v12) & 0xB3DBB9B6) - 638722853) >> 1) ^ 0x3A70024B;
  return (*(uint64_t (**)(void))(a1 + 8 * ((102 * (v10 == a2 + 3)) ^ a4)))();
}

uint64_t sub_1001A544C(double a1, double a2, double a3, double a4, double a5, double a6, double a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int8x16_t v15 = (int8x16_t)vld1q_dup_f32((const float *)v14);
  uint64_t v16 = (v12 - 921545803) & 0x36EDA6FE;
  v17.i64[0] = 0x8000000080000000;
  v17.i64[1] = 0x8000000080000000;
  a8.i32[0] = *(_DWORD *)(v14 + 4);
  a8.i32[1] = *(_DWORD *)(v13 + 4 * (v16 - 392) + 68);
  a8.i32[2] = *(_DWORD *)(v14 + 12);
  int8x16_t v18 = vextq_s8(v15, a8, 0xCuLL);
  int8x16_t v19 = a8;
  v19.i32[3] = *(_DWORD *)(v14 + 16);
  int32x4_t v20 = (int32x4_t)veorq_s8(vorrq_s8(vandq_s8(v19, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v18, v17)), (int8x16_t)vdupq_n_s32(0x8AD908FE));
  v21.i32[0] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v14 + 4) & 1));
  v21.i32[1] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v13 + 4 * (v16 - 392) + 68) & 1));
  v21.i32[2] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v14 + 12) & 1));
  v21.i32[3] = *(_DWORD *)(v11 + 4 * (v19.i8[12] & 1));
  *(int8x16_t *)uint64_t v14 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v14 - 908), v21), (int8x16_t)vdupq_n_s32(0x29408E43u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v20, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v20, v20), (int8x16_t)vdupq_n_s32(0xFF198994))), vdupq_n_s32(0xFF8CC4CA)), 1uLL));
  return (*(uint64_t (**)(void))(a11 + 8 * ((v12 - 408) | 6)))();
}

void sub_1001A556C()
{
}

uint64_t sub_1001A5578@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  unsigned int v3 = ((*v2 & 0x7FFFFFFE ^ 0x22B03DFA) & 0x6BF0E0EA) - (*v2 & 0x7FFFFFFE ^ 0x22B03DFA | 0xEBF0E0EB);
  unsigned int v4 = (((v3 & 0x27A81992 ^ 0x3A01183 | v3 & 0x5857E66C) - 1) | ((a2 + 1356) ^ 0x800007A8) & v2[623]) ^ 0xBFC63B92;
  v2[623] = v2[396] ^ *((_DWORD *)&STACK[0x14A0] + (*v2 & 1)) ^ ((v4 + 835165102 + (~(2 * v4) | 0x9C70C8A5)) >> 1) ^ 0x4E6521F0;
  return (*(uint64_t (**)(void))(a1 + 8 * ((200 * (LODWORD(STACK[0x8B4]) > 0x26F)) ^ a2)))();
}

uint64_t sub_1001A5668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  LODWORD(STACK[0x8B4]) = 0;
  int v7 = LODWORD(STACK[0x8B4])++;
  *(_DWORD *)(v4 + 1752) = v7 + 340121380;
  uint64_t v8 = (*(_DWORD *)(v5 + 1760) + 455641086);
  unint64_t v9 = 516615401
     * ((0x8C41F14010420192 - ((v6 - 192) | 0x8C41F14010420192) + ((v6 - 192) | 0x73BE0EBFEFBDFE6DLL)) ^ 0xFB0286C49CDEF85FLL);
  *(_DWORD *)(v6 - 172) = (v3 + 2134297591) ^ v9;
  *(void *)(v6 - 168) = v9 ^ 0x7B7AF027;
  *(_DWORD *)(v6 - 160) = ((v3 + 2134297591) ^ 0x36) + v9;
  *(_DWORD *)(v6 - 156) = (v3 - 185257761) ^ v9;
  *(void *)(v6 - 184) = v8 - v9;
  *(_DWORD *)(v6 - 192) = v9;
  *(_DWORD *)(v6 - 152) = ((v3 + 2134297591) & 0xFF7EDBF9) + v9;
  (*(void (**)(uint64_t))(a3 + 8 * (v3 + 157)))(v6 - 192);
  return ((uint64_t (*)(void))*(&off_10026D1A0 + *(int *)(v6 - 176)))();
}

void sub_1001A5784()
{
  if (v0 >= v1) {
    int v3 = *(_DWORD *)(v2 + 1760) + 1;
  }
  else {
    int v3 = 1616013353;
  }
  *(_DWORD *)(v2 + 1760) = v3;
  JUMPOUT(0x1001A5910);
}

uint64_t sub_1001A5988(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 8
                                   * (((v1 + 8 == ((v2 + 1632) ^ 0x316475B1)) * (((v2 + 704) | 0x96) - 1119)) ^ v2)))();
}

uint64_t sub_1001A59CC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  LODWORD(STACK[0x548]) = a4;
  unint64_t v9 = 1856021207
     * ((((2 * (v8 - 192)) | 0x7CACD15A334DE292) - (v8 - 192) - 0x3E5668AD19A6F149) ^ 0xD342FF3657CF27B7);
  STACK[0x14A0] = 0xCF8E5CF95686EC26;
  LODWORD(STACK[0x8B4]) = *(_DWORD *)(v6 + 1752) - 340121379;
  uint64_t v10 = *(unsigned int *)(v7 + 1760);
  *(_DWORD *)(v8 - 160) = v9 + v4 + 1123495617;
  *(_DWORD *)(v8 - 156) = v9;
  *(_DWORD *)(v8 - 180) = v4 + 1251605921 + v9;
  *(void *)(v8 - 176) = v10 - v9;
  *(void *)(v8 - 168) = v9 ^ v5;
  *(_DWORD *)(v8 - 188) = (v4 + 1251605851) ^ v9;
  *(_DWORD *)(v8 - 184) = (v4 + 1251605863) ^ v9;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (v4 + 203)))(v8 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v8 - 192)))(v11);
}

uint64_t sub_1001A5AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = STACK[0x578];
  int v6 = (STACK[0x578] + 755294135) & 0xD2FB1FBF;
  STACK[0x560] = (*(uint64_t (**)(unint64_t, uint64_t))(a3 + 8 * (int)(STACK[0x578] ^ 0xF8D)))(STACK[0x4F8], 3312658705);
  int v8 = (*(uint64_t (**)(void))(a3 + 8 * ((int)v5 + 187)))();
  unsigned int v9 = v8 - 1965487874 - ((v8 << (v6 - 30)) & 0x15B211FC);
  *(_DWORD *)(v4 + 3344) = v9;
  unsigned int v10 = v9 ^ 0x8AD908FC ^ (v9 >> 30);
  *(_DWORD *)(v3 + 4) = ((1812433253 * v10) ^ 0xF7F3CDFE)
                      + ((-670100790 * v10) & 0xEFE79BFC)
                      - 2
                      * ((((1812433253 * v10) ^ 0xF7F3CDFE) + ((-670100790 * v10) & 0xEFE79BFC) + 1208758787) & ((v6 ^ 0x42D) + 181994957) ^ (((101 * v10) ^ 0xFE) + ((-54 * (_BYTE)v10) & 0xFC) - 1) & 1)
                      - 1830470911;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (v6 ^ 0x75)))();
}

void sub_1001A5C30()
{
}

uint64_t sub_1001A5C4C@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x8B4]) = a1 + 1;
  uint64_t v4 = ((uint64_t (*)(unint64_t, void))*(&off_10026D1A0 + v2 + 1344))(STACK[0x4F0], 0);
  int v5 = LODWORD(STACK[0xAC8]) - 1965487874 - ((2 * LODWORD(STACK[0xAC8])) & 0x15B211FC);
  LODWORD(STACK[0xAB8]) = LODWORD(STACK[0xAC0]) - 1965487874 - ((2 * LODWORD(STACK[0xAC0])) & 0x15B211FC);
  LODWORD(STACK[0xAB4]) = v5;
  int v6 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + v2 + 1329))(v4);
  LODWORD(STACK[0xABC]) = v6 - 1965487874 - ((v6 << (v2 ^ 0x33)) & 0x15B211FC);
  int v7 = ((uint64_t (*)(void))*(&off_10026D1A0 + (v2 ^ 0xB51)))();
  LODWORD(STACK[0xAB0]) = v7 - 1965487874 - ((2 * v7) & 0x15B211FC);
  int v8 = ((2 * STACK[0x560]) & 0xCEDFCD5E) + (STACK[0x560] ^ 0xE76FE6AF);
  LODWORD(STACK[0x558]) = v8 - ((2 * v8 + 824193698) & 0x26FAD8E4) + 739083715;
  unint64_t v9 = STACK[0x578];
  LODWORD(STACK[0x568]) = (STACK[0x578] + 1643913169) ^ 0x17;
  LODWORD(STACK[0x550]) = v9 - 1403947069;
  int v10 = (DWORD1(xmmword_100283D10) ^ 0x83A2201 ^ (1664525
                                                * (xmmword_100283D10 ^ v1 ^ (xmmword_100283D10 >> 30))
                                                - ((3329050
                                                  * (xmmword_100283D10 ^ v1 ^ (xmmword_100283D10 >> 30))) & 0x5C655FE)
                                                - 2099041537))
      + (*(_DWORD *)STACK[0x570] ^ 0x8AD908FE);
  unsigned int v11 = (v10 ^ 0xFBF6CFF7) + 474872998 + ((2 * v10) & 0xF7ED9FEE);
  DWORD1(xmmword_100283D10) = v11 - ((2 * v11 + 259417798) & 0x15B211FC) + 1922317409;
  unint64_t v12 = 516615401
      * ((~((v3 - 192) | 0xAFE6AC81552A45E8) + ((v3 - 192) & 0xAFE6AC81552A45E8)) ^ 0xD8A5DB05D9B6BC25);
  int v13 = v12 + (v2 ^ 0x49A) + 798918314;
  *(void *)(v3 - 184) = 1805391306 - v12;
  *(_DWORD *)(v3 - 160) = v13 + 27;
  *(_DWORD *)(v3 - 156) = ((v2 ^ 0x49A) - 185257761) ^ v12;
  *(_DWORD *)(v3 - 172) = ((v2 ^ 0x49A) + 798918314) ^ v12;
  *(_DWORD *)(v3 - 192) = v12;
  *(void *)(v3 - 168) = v12 ^ 0x6B9C15C8;
  *(_DWORD *)(v3 - 152) = v13 - 26;
  uint64_t v14 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v2 ^ 0x49A) + 157))(v3 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v3 - 176)))(v14);
}

uint64_t sub_1001A5FB4()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((STACK[0x578] - 1711) ^ (510 * (v1 >= 0x6B9C15C8)))))();
}

uint64_t sub_1001A5FE4()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((STACK[0x578] - 1711) ^ (510 * (v1 <= 0x6B9C1837)))))();
}

uint64_t sub_1001A6018()
{
  LODWORD(xmmword_100283D10) = dword_1002846CC;
  *(_DWORD *)(v7 - 192) = v3;
  *(_DWORD *)(v7 - 160) = LODWORD(STACK[0x568]) + v3;
  *(_DWORD *)(v7 - 156) = (v1 - 185257761) ^ v3;
  *(_DWORD *)(v7 - 152) = v3 + v4 - 42;
  *(void *)(v7 - 184) = (v5 + 194106417) - v3;
  *(void *)(v7 - 168) = v6;
  *(_DWORD *)(v7 - 172) = v4 ^ v3;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v0 + 8 * v2))(v7 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v7 - 176)))(v8);
}

uint64_t sub_1001A60A8()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v2 - 831) ^ 0x438) * (v1 >= 0x27DFD0D6)) ^ (v2 - 1294))))();
}

uint64_t sub_1001A60E4@<X0>(int a1@<W8>)
{
  int v3 = a1 ^ 0x75B;
  LODWORD(STACK[0xAB0]) ^= LODWORD(STACK[0x558]) ^ (v3 + 326986048);
  return (*(uint64_t (**)(void))(v1 + 8 * ((115 * (v2 + ((v3 + 758) | 0x180) == 1510844739)) ^ v3)))();
}

uint64_t sub_1001A61E4()
{
  *int v2 = v2[623];
  return (*(uint64_t (**)(void))(v1 + 8 * ((1818 * (v3 - 1 == (v0 ^ 0x5523DB60))) ^ (v0 - 1127))))();
}

uint64_t sub_1001A623C()
{
  uint64_t v4 = 4 * (v2 - 1972446410);
  unsigned int v5 = *((_DWORD *)&xmmword_100283D10 + (v2 - 1972446411));
  int v6 = (*(_DWORD *)((char *)&xmmword_100283D10 + v4) ^ 0xC72B3C6D ^ (1566083941
                                                                   * (v5 ^ 0xA7E210F0 ^ ((v5 >> 30) | 0x2D3B180C))
                                                                   - ((-1162799414
                                                                     * (v5 ^ 0xA7E210F0 ^ ((v5 >> 30) | 0x2D3B180C))) & 0x9BE46926)
                                                                   + 1307718803))
     - v2;
  *(_DWORD *)((char *)&xmmword_100283D10 + v4) = v6 - ((2 * v6 + 186796436) & 0x15B211FC) + 6958536;
  unint64_t v7 = 1606104089 * ((((v3 - 192) | 0x61C84BC974780156) - ((v3 - 192) & 0x61C84BC974780156)) ^ 0xA376B0FD016F4368);
  *(_DWORD *)(v3 - 180) = (v1 - 1937845642) ^ v7;
  *(_DWORD *)(v3 - 176) = v1 - 1937845560 + v7;
  *(_DWORD *)(v3 - 160) = -1231242342 - v7 + v1;
  *(void *)(v3 - 152) = 2529343070u - v7;
  *(_DWORD *)(v3 - 192) = v7 + 1;
  *(_DWORD *)(v3 - 184) = v7 ^ (v1 - 1937845560) ^ 0x21;
  *(void *)(v3 - 168) = (v2 + 556896661) ^ v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 170)))(v3 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v3 - 188)))(v8);
}

uint64_t sub_1001A63D8()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((STACK[0x578] - 1224) | (27 * (v1 < 0x96C2B65E)))))();
}

uint64_t sub_1001A6408()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((STACK[0x578] - 1224) ^ (27 * (v1 > 0x96C2B8CD)))))();
}

void sub_1001A643C(int a1@<W8>)
{
  LODWORD(xmmword_100283D10) = 181995774;
  (*(void (**)(unint64_t))(v1 + 8 * (a1 - 1688338501)))(STACK[0x560]);
  JUMPOUT(0x1001A5178);
}

uint64_t sub_1001A64B0(uint64_t a1)
{
  STACK[0x788] = 32;
  STACK[0x720] = v1;
  STACK[0x620] = STACK[0x560];
  return sub_1001EFD58(a1);
}

uint64_t sub_1001A64C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = v4 + 1335;
  unsigned int v6 = (v4 + 2030006010) & 0x870097FA;
  unsigned int v7 = (v4 + 2048544571) & 0x85E5B673;
  BOOL v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8 * (v4 + 1906)))(20, 2865462264) == 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (int)((v8 * (v7 ^ v6 ^ 0x234)) ^ v5)))();
}

uint64_t sub_1001A654C()
{
  LODWORD(STACK[0x568]) = v2;
  int v3 = dword_100284A28;
  STACK[0x570] = qword_100284C30;
  uint64_t v4 = (int)(((2 * v0) ^ 0xB2A98CCC) & v3);
  int v5 = *(unsigned __int8 **)(v1 + 8);
  int v6 = *v5;
  unint64_t v7 = 1755343967
     * ((1755343967 * ((v5 ^ *(_DWORD *)(STACK[0x570] + v4)) & 0x7FFFFFFF)) ^ ((1755343967
                                                                                            * ((v5 ^ *(_DWORD *)(STACK[0x570] + v4)) & 0x7FFFFFFF)) >> 16));
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((4042
                               * (v6 != (byte_1002231E0[(v7 >> 24) + 3] ^ byte_100236E00[v7 >> 24] ^ byte_100245950[(v7 >> 24) + 2] ^ v7 ^ (13 * BYTE3(v7))))) ^ (2 * v0) ^ 0xB0E)))();
}

uint64_t sub_1001A66B0@<X0>(int a1@<W2>, int a2@<W8>)
{
  unint64_t v12 = (char *)(v10 + (int)(v2 + (a1 & 0xFDDCFFF4) + (v4 ^ 0x7EEE7FFA) + 29 * (a2 ^ 0xFC) + 1257));
  char v13 = *v12;
  unint64_t v14 = ((((v12 ^ v9) & 0x7FFFFFFF) * v3) ^ ((((v12 ^ v9) & 0x7FFFFFFF) * v3) >> 16)) * v3;
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((1974
                                * ((char)(*(unsigned char *)(v5 + (v14 >> (((a2 ^ 0xFC) - 90) ^ 0xB0u))) ^ v13 ^ *(unsigned char *)((v14 >> (((a2 ^ 0xFC) - 90) ^ 0xB0u)) + v6 + 3) ^ *(unsigned char *)((v14 >> (((a2 ^ 0xFC) - 90) ^ 0xB0u)) + v7 + 2) ^ v14 ^ ((v14 >> (((a2 ^ 0xFC) - 90) ^ 0xB0u)) * v8)) > 47)) ^ a2)))();
}

uint64_t sub_1001A6768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8
                                                             + 8
                                                             * (a6 ^ 0x394 ^ (1967
                                                                            * ((((v7 ^ ~(_BYTE)a6) & (v7 - a6) | a6 & ~v7) >> (((a6 - 125) & 0xEA) + 95)) & 1)))))(a1, a2, ((2 * v6) & 0x9FBFF7FE) + (v6 ^ 0xCFDFFBFF));
}

uint64_t sub_1001A67E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (unsigned char *)(v14
                + (int)(((a5 + v8 + v10 - 644) ^ v11)
                      + (((v10 - 1932) | 0x222) ^ 0x80001EBD)
                      + ((2 * (a5 + v8 + v10 - 644)) & 0xFFFFC6FA)));
  unint64_t v17 = ((((v16 ^ v13) & 0x7FFFFFFF) * v9) ^ ((((v16 ^ v13) & 0x7FFFFFFF) * v9) >> 16)) * v9;
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((55
                                * ((char)(v17 ^ *v16 ^ *(unsigned char *)(v12 + (v17 >> 24)) ^ byte_100239B80[(v17 >> 24) + 2] ^ *(unsigned char *)(a8 + (v17 >> 24)) ^ (-95 * ((((((v16 ^ v13) & 0x7FFFFFFF) * v9) ^ ((((v16 ^ v13) & 0x7FFFFFFF) * v9) >> 16)) * v9) >> 24))) > 47)) ^ (v10 - 21))))();
}

uint64_t sub_1001A6A00(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (a3 | (16
                                     * ((char)(v6 ^ *(unsigned char *)(v8 + v7) ^ *(unsigned char *)(v9 + v7 + 3) ^ *(unsigned char *)(v10 + a6) ^ ((((a3 + 111) ^ 0xF6) + a3 - 124) * v7)) > 57)))))();
}

uint64_t sub_1001A6A54()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((88 * (v1 > (v0 - 85 + ((v0 + 44) & 0x7E) - 60))) ^ v0)))();
}

uint64_t sub_1001A6AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((((char)(v13 ^ v7 ^ (v8 * v12) ^ *(unsigned char *)(v9 + v8) ^ *(unsigned char *)(v11 + a6) ^ *(unsigned char *)(v10 + ((49 * (v6 ^ 0x239)) ^ 0x154u) + (unint64_t)v8)) < 71)
                                * (v6 ^ 0x45E)) ^ v6)))();
}

uint64_t sub_1001A6B0C@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((30
                                     * ((((((v2 ^ 0x596) - 1499330793) & 0x595DF7F3 ^ 0x480C6134) + a2) & ((((v2 ^ 0x596) - 1256) ^ 0x3F492539u) + a1 + v3)) >> 31)) ^ ((v2 ^ 0x596) - 953))))();
}

uint64_t sub_1001A6C40@<X0>(int a1@<W1>, char a2@<W2>, int a3@<W5>, uint64_t a4@<X7>, char a5@<W8>)
{
  char v10 = (((a3 + 23) ^ 0x9D) - ((32 * a5 - 32) & 0x40) + 16 * a5 - 60) ^ 0xAB | (a2 - 7);
  uint64_t v11 = (unsigned char *)(v7 + a1 - 1164587208);
  unint64_t v12 = ((((v11 ^ v8) & 0x7FFFFFFF) * v5) ^ ((((v11 ^ v8) & 0x7FFFFFFF) * v5) >> 16)) * v5;
  *uint64_t v11 = v12 ^ (-95
              * ((((((v11 ^ v8) & 0x7FFFFFFF) * v5) ^ ((((v11 ^ v8) & 0x7FFFFFFF) * v5) >> 16))
                * v5) >> 24)) ^ *(unsigned char *)(v6 + (v12 >> 24)) ^ byte_100239B80[(v12 >> 24) + 2] ^ *(unsigned char *)(a4 + (v12 >> 24)) ^ (v10 - ((2 * v10) & 0x33) - 103) ^ 0x99;
  return (*(uint64_t (**)(void))(v9 + 8 * (a3 ^ (119 * ((a1 - 1164587207) > 0x13)))))();
}

uint64_t sub_1001A6D40()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 ^ 0x397) + 81) ^ 0x479) * (LODWORD(STACK[0x568]) == 0)) ^ v0)))();
}

uint64_t sub_1001A6D74()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 - 1268837138) & 0x4BA0EFA8) - 910205654) ^ (v0 - 910204470))
                                * (*(void *)(v1 + 8) == 0)) ^ v0)))();
}

uint64_t sub_1001A6DC8@<X0>(int a1@<W8>)
{
  int v6 = v2 + v1 + 1175;
  (*(void (**)(void))(v5 + 8 * (v1 ^ (a1 + 4043))))();
  *(void *)(v3 + 8) = v4;
  *(_DWORD *)(v3 + 16) = 1988559289;
  *(_DWORD *)uint64_t v3 = 65;
  STACK[0x7A0] = 1;
  BOOL v7 = ((uint64_t (*)(void, const char *, unint64_t *))*(&off_10026D1A0 + v6 + 205))(0, "systemgroup.com.apple.pisco.suinfo", &STACK[0x7A0]) == 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (int)((v7 * (((v6 + 931172437) & 0xC87F6B76) - 770)) ^ (v6 - 1270))))();
}

uint64_t sub_1001A6E00()
{
  int v4 = v0;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 ^ 0xAEE)))(v2);
  return sub_1001F2D74(v5, v6, v7, (uint64_t)&off_10026D1A0, v8, v9, v4);
}

uint64_t sub_1001A6E1C@<X0>(unsigned int a1@<W6>, int a2@<W8>)
{
  unint64_t v7 = a1 - 1764038811 + ((unint64_t)(a1 < (((v5 - 1865) | 0x209) ^ (v2 - 615))) << 32) + 185;
  *(void *)(v4 + 8 * v7) = *(void *)(v3 + 8 * v7) ^ 0xC9C9C9C9C9C9C9C9;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((a1 + a2 < STACK[0x568]) * v6) ^ v5)))();
}

uint64_t sub_1001A741C@<X0>(int a1@<W6>, int a2@<W7>, int a3@<W8>)
{
  return sub_1001A6E1C(a1 + a2, a3);
}

uint64_t sub_1001A7450(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4 = 49 * (a4 ^ 0x2BB);
  if (STACK[0x498]) {
    int v5 = STACK[0x374];
  }
  else {
    int v5 = STACK[0x370];
  }
  BOOL v6 = LODWORD(STACK[0x4F0]) == 2089942522;
  int v7 = STACK[0x448];
  if (LODWORD(STACK[0x4F0]) != 2089942522) {
    int v7 = STACK[0x444];
  }
  LODWORD(STACK[0x3A4]) = v7;
  int v8 = STACK[0x560];
  if (!v6) {
    int v8 = STACK[0x410];
  }
  LODWORD(STACK[0x498]) = v8;
  int v9 = STACK[0x47C];
  if (v6) {
    int v9 = STACK[0x478];
  }
  LODWORD(STACK[0x444]) = v9;
  int v10 = STACK[0x404];
  LODWORD(STACK[0x478]) = v5;
  if (!v6) {
    int v10 = v5;
  }
  LODWORD(STACK[0x448]) = v10;
  int v11 = STACK[0x470];
  if (!v6) {
    int v11 = STACK[0x468];
  }
  LODWORD(STACK[0x47C]) = v11;
  int v12 = STACK[0x458];
  if (!v6) {
    int v12 = STACK[0x454];
  }
  LODWORD(STACK[0x40C]) = v12;
  int v13 = STACK[0x450];
  if (!v6) {
    int v13 = STACK[0x44C];
  }
  LODWORD(STACK[0x410]) = v13;
  LODWORD(STACK[0x560]) = LODWORD(STACK[0x27C]) - LODWORD(STACK[0x268]);
  if (STACK[0x3C0]) {
    int v14 = STACK[0x29C];
  }
  else {
    int v14 = STACK[0x2A0];
  }
  BOOL v15 = (STACK[0x548] & 2) == 0;
  int v16 = STACK[0x3BC];
  if ((STACK[0x548] & 2) == 0) {
    int v16 = STACK[0x288];
  }
  LODWORD(STACK[0x2BC]) = v16;
  int v17 = STACK[0x3E0];
  if (!v15) {
    int v17 = STACK[0x3D4];
  }
  LODWORD(STACK[0x2A0]) = v17;
  int v18 = *(unsigned __int8 *)(STACK[0x570]
                           + ((*(unsigned char *)(STACK[0x570]
                                        + ((*(unsigned char *)(STACK[0x570] + ((*(unsigned char *)(STACK[0x570] + 1) + 10) & 0xF)) + 9) & 0xF))
                             + 6) & 0xF))
      + 11;
  int v19 = ((v18 & 0xF) - ((2 * v18) & 0xC) - 122) ^ 0x86;
  unsigned int v20 = ((2 * v19) & 0xBE) + (v19 ^ 0xA5FE695F);
  LODWORD(STACK[0x470]) = (v4 + 1993445453) & 0x892E6FBB;
  int v21 = STACK[0x434];
  LODWORD(STACK[0x468]) = v14;
  if (v15) {
    int v21 = v14;
  }
  LODWORD(STACK[0x264]) = v21;
  BOOL v22 = v20 < 0xA5FE695F;
  if (v20 >= 0xA5FE695F) {
    BOOL v22 = v20 + 407106552 > 0xBE425D58;
  }
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((14 * !v22) ^ v4)))();
}

uint64_t sub_1001A85F8()
{
  int v1 = 529 * (LODWORD(STACK[0x470]) ^ 0x68F);
  BOOL v2 = LODWORD(STACK[0x4F0]) == 2089942522;
  int v3 = STACK[0x4E0];
  if (LODWORD(STACK[0x4F0]) != 2089942522) {
    int v3 = STACK[0x414];
  }
  LODWORD(STACK[0x29C]) = v3;
  int v4 = STACK[0x480];
  if (v2) {
    int v4 = STACK[0x358];
  }
  LODWORD(STACK[0x450]) = v4;
  int v5 = STACK[0x550];
  if (v2) {
    int v5 = STACK[0x4F8];
  }
  LODWORD(STACK[0x414]) = v5;
  int v6 = STACK[0x4C8];
  if (v2) {
    int v6 = STACK[0x350];
  }
  LODWORD(STACK[0x480]) = v6;
  BOOL v7 = (STACK[0x548] & 2) == 0;
  int v8 = STACK[0x3B0];
  if ((STACK[0x548] & 2) == 0) {
    int v8 = STACK[0x3A8];
  }
  LODWORD(STACK[0x254]) = v8;
  int v9 = STACK[0x3F0];
  if (!v7) {
    int v9 = STACK[0x3E8];
  }
  LODWORD(STACK[0x268]) = v9;
  LODWORD(STACK[0x550]) = v1 ^ 0xB95;
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((2 * ((v0 + 1) > 0xF)) | (8 * ((v0 + 1) > 0xF)) | v1)))();
}

uint64_t sub_1001A8A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v8 = LODWORD(STACK[0x550]) + 813;
  unsigned int v9 = (((v7 + 1079042172) >> 8) ^ 0xFFEF8FF7) + v7 + (((v7 + 1079042172) >> 7) & 0x1DF1FEE);
  LODWORD(STACK[0x550]) = v8;
  unsigned int v10 = v9 - (((v9 + 1080119429) >> 4) & 0xBFDFB76) + (v8 ^ ((v9 + 1080119429) >> 5) ^ 0x320104BA);
  int v11 = v10 + 1 - 2 * ((v10 + 241192513) & 0x3BD264EB ^ (v10 + 1) & 2) - 902646999;
  unsigned int v12 = ((2 * ((v11 ^ 0xBBD264E9) - 1879573490)) & 0xFDEBE9DE) + (((v11 ^ 0xBBD264E9) - 1879573490) ^ 0xFEF5F4EF);
  unsigned int v13 = (((v12 + 17435409) >> 10) ^ 0x8CDEFF6F) + v12 + (((v12 + 17435409) >> 9) & 0x3DFEDE);
  unsigned int v14 = ((v13 + 1948978082) & 0x7FEAFFDE) + v13 + (((v13 + 1948978082) >> 1) ^ 0x3FF57FEF);
  unsigned int v15 = v14 - ((2 * v14 + 1751848806) & 0xCD5ECDDE) + 451211938;
  unsigned int v16 = ((2 * ((v15 ^ 0xE6AF66EF) + 1287124013)) & 0xEF1FEFFE) + (((v15 ^ 0xE6AF66EF) + 1287124013) ^ 0xF78FF7FF);
  unsigned int v17 = v16 + (((v16 + 141559809) >> 13) ^ 0x20B000) - (((v16 + 141559809) >> 12) & 0xE9FFE);
  unsigned int v18 = v17 + (((v17 + 139417601) >> 6) ^ 0x10400200) - (((v17 + 139417601) >> 5) & 0x77FFBFE) + 2;
  unsigned int v19 = v18 - ((2 * v18 - 266425346) & 0xF99F5C72) - 186710984;
  unsigned int v20 = ((2 * ((v19 ^ 0xFCCFAE39) - 1282870125)) & 0x97A9EF7E) + (((v19 ^ 0xFCCFAE39) - 1282870125) ^ 0xCBD4F7BF);
  unsigned int v21 = (((v20 + 875235393) >> 8) ^ 0x2F5B7F7F) + v20 + (((v20 + 875235393) >> 7) & 0xB6FEFE);
  unsigned int v22 = (((v21 + 80709826) >> 2) ^ 0x6F73AE7F) + v21 + (((v21 + 80709826) >> 1) & 0x5EE75CFE);
  int v23 = v22 - ((2 * v22 + 716682374) & 0x3D4D691C) - 1274900783;
  unsigned int v24 = ((2 * ((v23 ^ 0x1EA6B48E) + 707258702)) & 0xD6BBFFF6) + (((v23 ^ 0x1EA6B48E) + 707258702) ^ 0x6B5DFFFB);
  unsigned int v25 = (((v24 - 1801322491) >> 13) ^ 0x7DFFF4FE) + v24 + (((v24 - 1801322491) >> 12) & 0xFE9FC);
  unsigned int v26 = (((v25 + 379718407) >> 3) ^ 0xBDDFFD7E) + v25 + (((v25 + 379718407) >> 2) & 0x3BBFFAFC);
  unsigned int v27 = v26 - 1966765006 - ((2 * v26 + 830741266) & 0x64070A0A) + 1628;
  unsigned int v28 = (v27 ^ 0xB98CD38F) + ((v27 >> 11) ^ 0xE1917148) + ((v27 >> 10) & 0x337E5A ^ 0xFFDD9DEF) + 511295279;
  unsigned int v29 = (((((2 * v28) & 0xDB77F6D8) + (v28 ^ 0x6DBBFB6C) - 1841036140) >> 5) ^ 0xFC6BBDF7)
      + ((2 * v28) & 0xDB77F6D8)
      + (v28 ^ 0x6DBBFB6C)
      + (((((2 * v28) & 0xDB77F6D8) + (v28 ^ 0x6DBBFB6C) - 1841036140) >> 4) & 0x8D77BEE);
  unsigned int v30 = v29 - ((2 * v29 + 732990778) & 0xBCF78A94) - 195818521;
  unsigned int v31 = (v30 ^ 0x6A2711B2) + ((v30 >> 12) ^ 0x886E19D) + ((v30 >> 11) & 0x1F7826 ^ 0xFFF2BFDD) - 142623723;
  unsigned int v32 = (((((2 * v31) & 0x8D6F75DE) + (v31 ^ 0x46B7BAEF) - 1186446063) >> 7) ^ 0x75F7FFEF)
      + ((2 * v31) & 0x8D6F75DE)
      + (v31 ^ 0x46B7BAEF)
      + (((((2 * v31) & 0x8D6F75DE) + (v31 ^ 0x46B7BAEF) - 1186446063) >> 6) & 0x3EFFFDE);
  int v33 = v32 - ((2 * v32 + 111184452) & 0x1E40BF58) - 764369714;
  unsigned int v34 = ((2 * ((v33 ^ 0x8F205FAC) - 2045107421)) & 0xFFFFBAF6) + (((v33 ^ 0x8F205FAC) - 2045107421) ^ 0x7FFFDD7B);
  unsigned int v35 = (((v34 - 2147474811) >> 11) ^ 0xEBBCA7DE) + v34 + (((v34 - 2147474811) >> 10) & 0x394FBC);
  unsigned int v36 = v35 + (((v35 - 1807517017) >> 8) ^ 0x90028601) - (((v35 - 1807517017) >> 7) & 0x1FAF3FC) + 1;
  unsigned int v37 = v36 - ((2 * v36 + 142731594) & 0x81B44AAA) - 988079622;
  unsigned int v38 = (v37 ^ 0xFA4AAB06) + ((v37 >> 8) ^ 0xC8DA4A18) + ((v37 >> 7) & 0x1BFFE98 ^ 0xFE4B6BEF) + 937426766;
  unsigned int v39 = (((((2 * v38) & 0x75DDFBEE) + (v38 ^ 0x3AEEFDF7) - 988741111) >> 8) ^ 0xDFFF6DEA)
      + ((2 * v38) & 0x75DDFBEE)
      + (v38 ^ 0x3AEEFDF7)
      + ((2 * ((((2 * v38) & 0x75DDFBEE) + (v38 ^ 0x3AEEFDF7) - 988741111) >> 8)) & 0x1FEDBD4);
  unsigned int v40 = v19 ^ v6 ^ v30 ^ (v39 - ((2 * v39 - 903665602) & 0xDD1F4AEC) - 744408683);
  unsigned int v41 = (v40 & 6 | 0xDE7A4D79) - (v40 & 1 | 0x639DB296) + 1637724806;
  int v42 = (((v40 ^ 5) + 1) & 7) - ((2 * ((v40 ^ 5) + 1)) & 8) + 2081264396;
  LODWORD(STACK[0x3E8]) = v41;
  unsigned int v43 = v41 ^ 0x8C30BCE9;
  if ((v41 ^ 0x8C30BCE9) == 0x504AF182) {
    int v44 = 0;
  }
  else {
    int v44 = 255;
  }
  LODWORD(STACK[0x44C]) = v42;
  STACK[0x3B0] = v42 ^ 0x7C0D930Cu;
  LODWORD(STACK[0x3E0]) = v43;
  unsigned int v45 = (v44 << (v42 ^ 0xC)) - ((2 * (v44 << (v42 ^ 0xC))) & 0xDC70D3C4) + 1849190882;
  char v46 = (((_BYTE)v44 << (v42 ^ 0xC)) - ((2 * ((_BYTE)v44 << (v42 ^ 0xC))) & 0xC4) - 30) ^ 0x1D;
  if (v43 == 1347088770) {
    char v46 = 0;
  }
  BOOL v47 = LODWORD(STACK[0x4F0]) == 2089942522;
  int v48 = STACK[0x404];
  if (LODWORD(STACK[0x4F0]) == 2089942522) {
    int v48 = STACK[0x478];
  }
  LODWORD(STACK[0x458]) = v48;
  int v49 = STACK[0x558];
  if (!v47) {
    int v49 = STACK[0x360];
  }
  LODWORD(STACK[0x470]) = v49;
  int v50 = STACK[0x434];
  if ((STACK[0x548] & 2) != 0) {
    int v50 = STACK[0x468];
  }
  LODWORD(STACK[0x434]) = v50;
  int v51 = v15 ^ v5 ^ v27;
  unsigned int v52 = v11 ^ a5 ^ v23 ^ v33;
  unsigned int v53 = v51 ^ v37;
  LODWORD(STACK[0x454]) = (v52 & 0xFFFFFF80 ^ 0x612D7980)
                        + (v52 & 0x96E1C780 ^ 0x96C08645)
                        - ((v52 & 0xFFFFFF80 ^ 0x612D7980) & 0x96E1C780);
  unsigned int v54 = ((v52 & 0x7F ^ 0xB10223C | 0xAA86E873) - (v52 & 0x7F ^ 0xB10223C | 0x5579178C) + 1433999244) ^ 0xA196CA6B;
  LODWORD(STACK[0x4F8]) = v40;
  unsigned int v55 = v40 & 0xFFFFFFF8 ^ 0x54697F30;
  int v56 = ((v45 & 0x48 ^ 0x9F41) + (v45 & 0xB7) - 1) ^ 0x9FA2;
  LODWORD(STACK[0x3BC]) = (33686018 * v56) & 0xE3B5AEF2;
  LODWORD(STACK[0x374]) = 16843009 * v56 + 1910167417;
  unsigned int v57 = ((1593835520 * v56 - ((-1107296256 * v56) & 0x9C000000) + 1324848903) ^ 0x4EF79707) & (v53 ^ 0x4EC33927);
  LODWORD(STACK[0x3F0]) = v57 - ((2 * v57) & 0x586A6328) + 741683604;
  LODWORD(STACK[0x468]) = v52 ^ 0x25E0E0AE;
  LOBYTE(v57) = (v46 & (v52 ^ 0xAE)) - ((2 * (v46 & (v52 ^ 0xAE))) & 0x9C) - 50;
  int v58 = (((2 * ((v52 ^ BYTE1(v52) ^ BYTE2(v52)) ^ 0x99)) | 0x5040FC88)
       - ((v52 ^ BYTE1(v52) ^ BYTE2(v52)) ^ 0x99)
       - 673218116) ^ 0x2C387C41;
  LODWORD(STACK[0x4E0]) = v52;
  unsigned int v59 = (v58 - ((2 * v58) & 0x6E0D5EE6) - 150556813) ^ HIBYTE(v52) ^ 0xF31EADF4;
  unsigned int v60 = 16843009 * v59 - ((33686018 * v59) & 0xCBA3C764) - 439229518;
  unsigned int v61 = 0xE668D621 % STACK[0x568];
  unsigned int v62 = (((v53 ^ BYTE1(v53) ^ BYTE2(v53)) ^ 0x7E)
       + ((v53 ^ (v53 >> 8) ^ HIWORD(v53) ^ 0x63F7A954) & 0x7A ^ 0xFEE2A350)
       - (((v53 ^ BYTE1(v53) ^ BYTE2(v53)) ^ 0x7E) & 0x7A)) ^ 0x36E2A3C2;
  LODWORD(STACK[0x4C8]) = v53;
  unsigned int v63 = (((2 * v62) & 0x10006942) - v62 + 1097714526) ^ HIBYTE(v53) ^ 0x896DCB9C;
  unsigned int v64 = 16843009 * v63 - ((33686018 * v63) & 0x9362D404) + 1236363778;
  unint64_t v65 = (*(void *)(STACK[0xA50] + 8 * v61) ^ 0xC9C9C9C9C9C9C9C9) + 2103980986;
  unint64_t v66 = (*(void *)(STACK[0xA50]
                   + 8
                   * (((v65 ^ 0xDFFD9FDBFBFFBF7FLL) + 0x2002602404004081 + ((2 * v65) & 0xBFFB3FB7F7FF7EFELL))
                    % STACK[0x4C0])) ^ 0xC9C9C9C9C9C9C9C9)
      + 815561086;
  unint64_t v67 = (*(void *)(STACK[0xA50]
                   + 8
                   * (((v66 ^ 0xD7F3EEE2657EDFFBLL) + 0x280C111D9A812005 + ((2 * v66) & 0xAFE7DDC4CAFDBFF6))
                    % STACK[0x4C0])) ^ 0xC9C9C9C9C9C9C9C9)
      + 925802721;
  uint64_t v68 = *(void *)(STACK[0xA50]
                  + 8
                  * (((v67 ^ 0x75FBFF7FFDEFF73FLL) - 0x75FBFF7FFDEFF73FLL + ((2 * v67) & 0xEBF7FEFFFBDFEE7ELL))
                   % STACK[0x4C0]));
  unint64_t v69 = 2 * v68 - ((4 * v68) & 0xDA82EB4209305E5CLL) + 0x6D4175A104982F2ELL;
  LODWORD(v68) = (v68
                + (v69 & 0x9393939393939392 ^ 0x9181112760DE5045)
                + ((2 * v69) & 0x627262327230120 ^ 0xFDFDDDFDFEDFFFFFLL)
                + 0x3949C923979583FFLL)
               % STACK[0x4C0];
  unsigned int v70 = ((v68 - ((2 * v68) & 0x351CBADC) - 1701946002) ^ 0x67752031)
      + 1042623779
      + ((2 * (v68 - ((2 * v68) & 0x351CBADC) - 1701946002)) & 0xFBF6FABE ^ 0x3114BA9C);
  LODWORD(STACK[0x2E0]) = 33686018 * v54;
  LODWORD(STACK[0x478]) = (33686018 * v54) & 0x89AA34BC;
  LODWORD(STACK[0x358]) = (v57 & 0x93 ^ 0x152E6C11) + (v57 & 0x6C ^ 0x2081004D) - 1;
  LODWORD(STACK[0x360]) = v54;
  LODWORD(STACK[0x3D4]) = 16843009 * v54 - 992667042;
  LODWORD(STACK[0x3A8]) = v55;
  LODWORD(STACK[0x350]) = 2 * v55;
  LODWORD(STACK[0x404]) = v60;
  LODWORD(STACK[0x370]) = v64;
  LODWORD(STACK[0x558]) = v64 ^ v60;
  BOOL v71 = v70 > 0x3C20AA83;
  if (v70 < 0x3C20AA82) {
    BOOL v71 = 1;
  }
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((504 * v71) ^ LODWORD(STACK[0x550]))))();
}

uint64_t sub_1001A9E48@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X7>, int a3@<W8>)
{
  int v4 = (a3 ^ 0x470) - 227;
  unsigned int v5 = *a2;
  if (LODWORD(STACK[0x714]) - 359584764 >= (a3 ^ 0x470u) - 1976) {
    int v6 = -42023;
  }
  else {
    int v6 = 0;
  }
  LODWORD(STACK[0x568]) = v5;
  if (v5 <= 1) {
    int v6 = 0;
  }
  LODWORD(STACK[0x570]) = v6;
  int v7 = *(unsigned __int8 *)(STACK[0x910] + 8) ^ 0x33;
  int v8 = (unsigned __int8 *)(a1 + (v3 - 2141259750));
  int v9 = (19 * (v4 ^ 0x6A2)) ^ 0x5F ^ ((v7 ^ *v8) + (~((v7 ^ *v8) << (((v4 - 27) | 1) + 86)) | 0xB) - 5) | *(unsigned __int8 *)(STACK[0x910] + 9) ^ 0x33 ^ v8[1];
  LOBYTE(v9) = (v9 + (~(2 * v9) | 0xB) - 5) ^ 0xFA | *(unsigned char *)(STACK[0x910] + 10) ^ 0x33 ^ v8[2];
  LOBYTE(v9) = (v9 + (~(2 * v9) | 0xB) - 5) ^ 0xFA | *(unsigned char *)(STACK[0x910] + 11) ^ 0x33 ^ v8[3];
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((35 * (~(v9 + (~(2 * v9) | 0xB)) == 0)) ^ v4)))();
}

uint64_t sub_1001A9FA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  BOOL v9 = v4 > 0xA4;
  unsigned int v10 = (a4 + 74);
  int v11 = v9 ^ (v10 < 0x5B);
  BOOL v12 = v10 < v5;
  if (!v11) {
    BOOL v9 = v12;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * (v8 ^ (v9 * v7))))();
}

void sub_1001A9FEC()
{
}

uint64_t sub_1001AA024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                                  + 8 * (int)((((((LODWORD(STACK[0x778]) | 0x7Fu) + 203) >> 7) & 1) * ((v7 - 216) ^ 0x6CF)) | v7)))(a1, a2, a3, a4, a5, a6, v6);
}

uint64_t sub_1001AA058(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  LODWORD(STACK[0x614]) = 1127998211;
  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (((*a1 == (((v7 + 68) | 0x88) ^ 0x98)) * (3 * (v7 ^ 0x606) - 593)) ^ v7)))();
}

uint64_t sub_1001AA0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  BOOL v9 = (LODWORD(STACK[0x714]) | ((unint64_t)(LODWORD(STACK[0x714]) < ((v8 + 1856301141) & 0x915B17B9 ^ (v7 + 88))) << 32)) != 359584748;
  return (*(uint64_t (**)(void))(a7 + 8 * (((2 * v9) | (4 * v9)) ^ v8)))();
}

uint64_t sub_1001AA11C()
{
  int v3 = (v2 - 1673) | 0x689;
  BOOL v4 = v1 < ((v2 - 716926140) ^ 0xFE269AF6uLL);
  *(unsigned char *)STACK[0x830] = 0;
  unint64_t v5 = ((v3 + 15) ^ 0xA8B6671460E0E0DALL) + 0x574998EBCA8118BALL;
  int v6 = v4 ^ (v5 < v0);
  BOOL v7 = v5 < v1;
  if (!v6) {
    BOOL v4 = v7;
  }
  return ((uint64_t (*)(unint64_t))*(&off_10026D1A0 + ((77 * v4) ^ v3)))(0xA8B6671460E0E0DALL);
}

void sub_1001AA1D0()
{
}

uint64_t sub_1001AA1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(char *, uint64_t))(a7 + 8 * (v7 ^ 0xE6 ^ (131 * (LODWORD(STACK[0x568]) == 1)))))((char *)&STACK[0xA90] + ((7 * (v7 ^ 0x6B1) - 1203741602) & 0x47BFA7BD ^ 0x7B0), a1 + (LODWORD(STACK[0x550]) - 1715765038));
}

uint64_t sub_1001AA268(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = (((a3 - 728) | 0x310) + 1898932033) ^ (16 * v7);
  uint64_t v10 = ((a3 - 361903508) ^ 0xF7933380) & (32 * v7) ^ 0x1DA02A40;
  unint64_t v11 = 0xFFFFFFFF00000000;
  if ((v9 + v10 + 389323981) >= 0x57341BEA) {
    unint64_t v11 = 0;
  }
  return (*(uint64_t (**)(uint64_t))(a7
                                            + 8
                                            * ((248 * (STACK[0x560] + v8 + a1 + v9 + v10 - v11 - 1073708829 < 0x10)) ^ a3)))(0x7D488786B62193C1);
}

void sub_1001AA364()
{
  v2.i64[0] = 0xBEBEBEBEBEBEBEBELL;
  v2.i64[1] = 0xBEBEBEBEBEBEBEBELL;
  v3.i64[0] = 0x7C7C7C7C7C7C7C7CLL;
  v3.i64[1] = 0x7C7C7C7C7C7C7C7CLL;
  int8x16_t v4 = vandq_s8(vaddq_s8(*v1, *v1), v3);
  v3.i64[0] = 0x7676767676767676;
  v3.i64[1] = 0x7676767676767676;
  *(int8x16_t *)&STACK[0xAC0] = vaddq_s8(vaddq_s8(veorq_s8(*v1, v2), v3), v4);
  LODWORD(STACK[0x614]) = v0 + 64;
  JUMPOUT(0x1001AA39CLL);
}

void sub_1001AA3A8(uint64_t a1)
{
  char v3 = 49 * (v1 ^ 0x49);
  int8x16_t v4 = (unsigned char *)STACK[0x830];
  uint64_t v5 = ((16 * v2) ^ 0x31278C2D) - 591744485 + ((v2 << (v3 ^ 0xAD)) & 0x9DEF33A0 ^ 0x9DA023A0);
  unint64_t v6 = 0xFFFFFFFF00000000;
  if (v5 >= 0x5CB24BE8) {
    unint64_t v6 = 0;
  }
  int v7 = (unsigned char *)(v6 - v5 + a1 + (LODWORD(STACK[0x550]) - 1715765038) + 1555188712);
  *int8x16_t v4 = *v7;
  v4[1] = v7[1];
  v4[2] = v7[2];
  v4[3] = v7[3];
  v4[4] = v7[4];
  v4[5] = v7[5];
  v4[6] = v7[6];
  v4[7] = v7[7];
  v4[8] = v7[8];
  v4[9] = v7[9];
  v4[10] = v7[10];
  v4[11] = v7[11];
  v4[12] = v7[12];
  v4[13] = v7[13];
  v4[14] = v7[14];
  v4[15] = v7[15];
  JUMPOUT(0x1001AA4B4);
}

uint64_t sub_1001AA4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  LODWORD(STACK[0x714]) = v7;
  return (*(uint64_t (**)(void))(a7 + 8 * ((STACK[0x6A0] != 0) | (v8 - 462))))();
}

uint64_t sub_1001AA4C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(unsigned char *)(v12 + v8 - 0x2339ABB92F50013FLL) = (*(unsigned char *)(v7 + v9 - 0x30A9B36E6810CFCFLL) ^ 0xBE)
                                              + ((2 * *(unsigned char *)(v7 + v9 - 0x30A9B36E6810CFCFLL)) & 0x7C)
                                              + 118;
  return (*(uint64_t (**)(void))(a7 + 8 * ((1193 * (a1 + 1 == v10 + 16)) ^ v11)))();
}

uint64_t sub_1001AA558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = STACK[0x8E8] + 16;
  unint64_t v6 = STACK[0x860];
  STACK[0x668] = *(void *)(a4 + 8 * (v4 - 1955));
  uint64_t v7 = (v4 - 1905);
  STACK[0x640] = v6;
  unint64_t v8 = STACK[0x788];
  uint64_t v9 = (char *)&STACK[0xA90] + STACK[0x788];
  STACK[0x5A8] = (unint64_t)v9;
  STACK[0x788] = v7 + v8 - 23;
  STACK[0x6B8] = v5;
  STACK[0x918] = *(void *)(a4 + 8 * (v4 - 1907));
  STACK[0x608] = v6;
  STACK[0x800] = (unint64_t)v9;
  unsigned int v10 = (*(_DWORD *)(v6 + 68) & 0x3F ^ 0xBF376D3A)
      + ((*(_DWORD *)(v6 + 68) << ((((v4 - 113) ^ 0x79) + 90) ^ 0xA9)) & 0x74);
  *(unsigned char *)(v6 + v10 + 1086886598) = 122;
  return (*(uint64_t (**)(void))(a4 + 8 * (int)((1198 * (v10 + 1086886542 < 0xFFFFFFC8)) ^ v7)))();
}

uint64_t sub_1001AA628(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (((v5 + a2 + 57 < (((v4 - 1804) | 0x280) ^ 0x282u)) * (((v4 - 1836) | 0x15) ^ 0xC0)) ^ v4)))();
}

uint64_t sub_1001AA674(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((44 * (v4 - v6 - v5 + 62 < ((((a1 + 446) | 0x328) - 818) ^ 0x471u))) ^ a1)))();
}

uint64_t sub_1001AA6CC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((14 * (v4 >= ((a2 + 1718178629) & 0x9996AFEC ^ 0x7A7))) ^ a2)))();
}

uint64_t sub_1001AA718@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  *(void *)&long long v6 = 0xFAFAFAFAFAFAFAFALL;
  *((void *)&v6 + 1) = 0xFAFAFAFAFAFAFAFALL;
  *(_OWORD *)(v2 + (a2 + v3)) = v6;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((21 * ((((v5 - 1796) | 0x300u) ^ 0x3B4) != (v4 & 0x1FFFFFFF0))) ^ (v5 - 1049))))();
}

uint64_t sub_1001AA76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (((((v4 == v5) ^ (13 * (v6 ^ 0xAB))) & 1) * (((v6 - 930) | 0x35) + 47)) ^ v6)))();
}

uint64_t sub_1001AA7B0(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((7 * (((3 * (a1 ^ 0x56u) - 439) & v4) != 0)) ^ a1)))();
}

uint64_t sub_1001AA7EC@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  *(void *)(v2 + (a2 + v3 + v5)) = 0xFAFAFAFAFAFAFAFALL;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((1750 * (((v6 + 113634607) & 0xF93A13FF ^ 0x2E6) + v5 == (v4 & 0x1FFFFFFF8))) ^ v6)))();
}

void sub_1001AA848()
{
}

uint64_t sub_1001AA854(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (int)(((((a2 + 1432532155) & 0xAA9D4FFE) - 520) * (v2 == a1)) ^ a2)))();
}

uint64_t sub_1001AA898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x728] = *(void *)(a4 + 8 * v4);
  return sub_1001F48B8();
}

uint64_t sub_1001AA8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(v4 + (v7 + v5)) = -6;
  return (*(uint64_t (**)(void))(a4 + 8 * ((14 * ((v8 - 1905 + v6 + v7 + 1) < 0x40)) ^ (v8 - 1748))))();
}

uint64_t sub_1001AA8E4@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unint64_t v3 = STACK[0x838];
  STACK[0x568] = STACK[0x838];
  return (*(uint64_t (**)(void))(a1 + 8 * (((v3 + 28 + ~v2 > 0xF) * (5 * (a2 ^ 0x627) - 443)) ^ a2)))();
}

uint64_t sub_1001AA96C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W8>)
{
  int v6 = (a3 ^ 0x45B) - 432;
  v7.i64[0] = 0x9898989898989898;
  v7.i64[1] = 0x9898989898989898;
  v8.i64[0] = 0x4C4C4C4C4C4C4C4CLL;
  v8.i64[1] = 0x4C4C4C4C4C4C4C4CLL;
  *unint64_t v3 = vaddq_s8(vsubq_s8(*v4, vandq_s8(vaddq_s8(*v4, *v4), v7)), v8);
  unsigned int v9 = (((v6 + 1662) ^ 0xFFFFF0A8)
      + ((*(unsigned __int8 *)(a2 + 65) - ((2 * *(unsigned __int8 *)(a2 + 65)) & 0xC8)) << 8)
      - 4864) ^ 0xFFFFE400;
  int v10 = (v9 - ((v9 << ((v6 ^ 0x9A) + 81)) & 0x1C00) + 3604) ^ 0xE14 | (*(unsigned __int8 *)(a2 + 66)
                                                                     - ((2 * *(unsigned __int8 *)(a2 + 66)) & 0x134)
                                                                     + 30874) ^ 0x789A;
  LOWORD(v10) = v10 - ((2 * v10) & 0x3C10) + 7688;
  LOWORD(STACK[0x75A]) = v10;
  unint64_t v11 = (unsigned __int16)v10 ^ 0x1E08u;
  STACK[0x570] = v11;
  LODWORD(STACK[0x560]) = 2 * v11;
  unsigned int v12 = ((unsigned __int16)v10 ^ 0xF4DFE9F7) + 1318072496 + ((2 * v11) & 0x1EFFE);
  BOOL v13 = v12 < 0x4370286C;
  BOOL v14 = v12 > v5 + 90386944;
  if ((v5 + 90386944) < 0x4370286C != v13) {
    BOOL v14 = v13;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * (((8 * v14) | (16 * v14)) ^ v6)))();
}

void sub_1001AAB3C(uint64_t a1@<X3>, int a2@<W6>, int a3@<W8>)
{
  LODWORD(STACK[0x8CC]) = a2 + v3;
  STACK[0x728] = *(void *)(a1 + 8 * (a3 - 1943));
  JUMPOUT(0x1001AAB58);
}

uint64_t sub_1001AABB8@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((486 * (v2 >= (char)(((a2 + 49) & 0xFB) + 84))) ^ a2)))();
}

uint64_t sub_1001AABF4@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (((v2 == (a2 - 127)) * (a2 - 33)) ^ (a2 - 211))))();
}

uint64_t sub_1001AAC20@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v6 = a2 - 47;
  int v7 = v2[((v6 - 613) ^ 0xFFFFFFFF90930E49) + 1869410538] ^ v5;
  int v8 = (((v7 - ((2 * v7) & 0x7C)) << 24) + 1040187392) ^ 0x3E000000;
  int v9 = ((((v2[1] ^ v5) - ((2 * (v2[1] ^ v5)) & 0x14C)) << 16) + 2141585408) ^ 0x7FA60000;
  unsigned int v10 = (v9 - 1643161566 - ((2 * v9) & 0x3C1E0000)) ^ 0x9E0F5822 | (v8 - 1549879587 - ((2 * v8) & 0x46000000)) ^ 0xA39EB6DD;
  unsigned int v11 = ((((v2[2] ^ v5) - ((2 * (v2[2] ^ v5)) & 0x188)) << 8) - 1316109312) ^ 0xB18DC400;
  unsigned int v12 = (v10 + 1061707957 - ((2 * v10) & 0x7E90C16A)) ^ 0x3F4860B5 | (v11 - 1152875589 - ((2 * v11) & 0x76910600)) ^ 0xBB4883BB;
  unsigned int v13 = (v12 - 1609113254 - ((2 * v12) & 0x402DC2B4)) ^ 0xA016E15A | ((v2[3] ^ v5)
                                                                    - 1093991613
                                                                    - ((2 * (v2[3] ^ v5)) & 0x86)) ^ 0xBECB0343;
  *(_DWORD *)(a1 + ((v3 + 1869410538) & 0xFFFFFFFC)) = v13 + v4 - ((2 * v13) & 0x77C4E32A);
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (((2 * ((v3 + 1869410542) > 0x3F)) | (16
                                                                                 * ((v3 + 1869410542) > 0x3F))) ^ v6)))();
}

uint64_t sub_1001AADF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  HIDWORD(v12) = *(_DWORD *)(a7 + 4 * (v8 + v7 - 8)) ^ *(_DWORD *)(a7 + 4
                                                                                      * (v8 + v7 - 3)) ^ *(_DWORD *)(a7 + 4 * (v8 + v7 - 14)) ^ *(_DWORD *)(a7 + 4 * (v8 + v7 - 16));
  LODWORD(v12) = HIDWORD(v12);
  *(_DWORD *)(a7 + 4 * (v9 + v8)) = v10
                                                  + ((a6 + 1080801304) & 0xBF94479C)
                                                  + (v12 >> 31)
                                                  - ((2 * (v12 >> 31)) & 0x77C4E32A)
                                                  - 276;
  return (*(uint64_t (**)(void))(v11 + 8 * ((1086 * ((v9 + 1 + v8) < 0x50)) ^ a6)))();
}

uint64_t sub_1001AAE94()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((75 * ((v3 + 1 + v0) < 0x14)) ^ v1)))();
}

uint64_t sub_1001AB03C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((70 * ((v0 + 1 + v1) > 0x27)) ^ v2)))();
}

uint64_t sub_1001AB1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((665 * ((v10 + 1 + v8) < 0x3C)) ^ a8)))();
}

uint64_t sub_1001AB370@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((62 * ((v1 + 1 + v2) < 0x50)) ^ a1)))();
}

uint64_t sub_1001AB4D8(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  LODWORD(STACK[0x6D4]) = a6;
  LODWORD(STACK[0x69C]) = a8;
  LODWORD(STACK[0x5E8]) = v10;
  LODWORD(STACK[0x6EC]) = a3;
  int v12 = (v8[22] ^ a1) + (v9 ^ a1);
  v8[22] = v12 + a1 - ((v12 << (((v11 - 83) | 8) ^ 0xA9)) & a2);
  int v13 = (v8[18] ^ a1) + (LODWORD(STACK[0x6D4]) ^ a1);
  int v14 = (v8[19] ^ a1) + (LODWORD(STACK[0x69C]) ^ a1);
  v8[18] = v13 + a1 - (a2 & (2 * v13));
  v8[19] = v14 + a1 - (a2 & (2 * v14));
  int v15 = v8[21];
  int v16 = (v8[20] ^ a1) + (LODWORD(STACK[0x5E8]) ^ a1);
  v8[20] = v16 + a1 - (a2 & (2 * v16));
  v8[21] = (v15 ^ a1) + (LODWORD(STACK[0x6EC]) ^ a1) + a1 - (a2 & (2 * ((v15 ^ a1) + (LODWORD(STACK[0x6EC]) ^ a1))));
  STACK[0x788] -= 320;
  return ((uint64_t (*)(void))STACK[0x728])();
}

uint64_t sub_1001ABF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((53
                                * (LODWORD(STACK[0x8CC]) - 280610772 <= ((LODWORD(STACK[0x560])
                                                                                      + 1888466665) ^ LODWORD(STACK[0x77C])))) ^ (v4 - 1613))))();
}

uint64_t sub_1001AC1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v13 = (v8 + 872516349) & 0xCBFE74FD;
  unsigned int v14 = a7 + v7;
  *(unsigned char *)STACK[0x980] = *(unsigned char *)(STACK[0x5F8] + v14) ^ *(unsigned char *)(v9 + (v14 & 0xF)) ^ *(unsigned char *)(v10 + (v14 & 0xF) + 1) ^ *(unsigned char *)(v12 + (v14 & 0xF) + 1) ^ ((v14 & 0xF) * (((v13 - 75) & 0xF9) - 15)) ^ v11;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (int)(v13 ^ 7)))();
}

uint64_t sub_1001AC24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, int a4@<W7>, int a5@<W8>, int8x16_t a6@<Q0>, int8x16_t a7@<Q1>)
{
  *int v7 = vaddq_s8(vaddq_s8(*(int8x16_t *)(v8 + (a5 + v9)), a7), vmvnq_s8(vandq_s8(vaddq_s8(*(int8x16_t *)(v8 + (a5 + v9)), *(int8x16_t *)(v8 + (a5 + v9))), a6)));
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a3 + 8 * ((((a4 + v10) & v11) + 46) ^ (a4 - 1115))))(a1, a2, (a5 + 64));
}

uint64_t sub_1001AC2AC@<X0>(int a1@<W2>, uint64_t a2@<X3>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(((a3 - 436726134 < ((a1 - 463801450) & 0x1BA506DF ^ 0x226u))
                                     * (((a1 + 766601263) & 0xD24E927E) - 151)) ^ (a1 - 681))))();
}

uint64_t sub_1001AC31C@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((55 * (v2 + 1418 - a2 + 436724229 < 7)) ^ v2)))();
}

uint64_t sub_1001AC364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = (v8 - 366) | 0x446u;
  *(void *)(v4 + ((((v10 - 726) | 9u) ^ (unint64_t)(v5 + 822)) & (v7 + v6))) = 0xFAFAFAFAFAFAFAFALL;
  return (*(uint64_t (**)(void))(a4 + 8 * (int)((572 * ((((v10 ^ 0x4F7) + v9) & 0x1FFFFFFF8) == 8)) ^ v10)))();
}

void sub_1001AC3CC()
{
}

uint64_t sub_1001AC3E0(int a1)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((((a1 ^ 0x7F) + ((a1 + 1271) | 0x88) - 1222) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1001AC41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (int)(((((((v5 + 710768997) & 0xD5A2857F) - 304) | 0x100) ^ 0x10F)
                                     * ((char)((((v5 + 101) & 0x7F) + 71) ^ *(unsigned char *)(v4 + 96)) < -105)) | (v5 + 710768997) & 0xD5A2857F)))();
}

uint64_t sub_1001AC470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (((v5 == ((83 * (v4 ^ 0x1A)) ^ 0x17)) * ((v4 ^ 0x11A) + 76)) ^ v4)))();
}

uint64_t sub_1001AC4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = (v5 - 1152) | 8;
  int v7 = *(_DWORD *)(v4 + 64);
  unsigned int v8 = *(_DWORD *)(v4 + 68);
  *(unsigned char *)(v4 + 56) = ((v6 ^ 0x24)
                       + ((v7 - 605314902) >> 21)
                       - (((v7 - 605314902) >> 20) & 0x58)
                       - 3) ^ 0xD6;
  *(unsigned char *)(v4 + 57) = (((v7 - 605314902) >> 13) - (((v7 - 605314902) >> 12) & 0x42) - 95) ^ 0x5B;
  *(unsigned char *)(v4 + 58) = (((v7 - 605314902) >> 5) - (((v7 - 605314902) >> 4) & 0x20) - 112) ^ 0x6A;
  HIDWORD(v9) = v7 + 468426922;
  LODWORD(v9) = v8 ^ 0xC0000000;
  *(unsigned char *)(v4 + 59) = ((v9 >> 29) - ((2 * (v9 >> 29)) & 0x2A) - 107) ^ 0x6F;
  *(unsigned char *)(v4 + 60) = (v8 >> 21) ^ 0xC;
  *(unsigned char *)(v4 + 61) = (v8 >> 13) ^ 0x62;
  *(unsigned char *)(v4 + 62) = (v8 >> 5) ^ 0xA8;
  *(unsigned char *)(v4 + 63) = ~(16 * v8) + 8 * v8 - 5;
  STACK[0x728] = *(void *)(a4 + 8 * (v6 - 264));
  return sub_1001F48B8();
}

uint64_t sub_1001AC734@<X0>(uint64_t a1@<X3>, int a2@<W6>, int a3@<W8>)
{
  BOOL v4 = a3 - 1666527557 < (a2 - 1917455505);
  if (a2 - 1917455505 < ((2 * v3) ^ 0xF3FA7DCD) != (a3 - 1666527557) < 0xF3FA729D) {
    BOOL v4 = a2 - 1917455505 < ((2 * v3) ^ 0xF3FA7DCD);
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((23 * !v4) ^ (v3 - 965))))();
}

uint64_t sub_1001AC74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return sub_1001F4938(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1001AC764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = (char)(v5 ^ 0x71 ^ *(_DWORD *)(STACK[0x608] + 96));
  STACK[0x570] = v4;
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((1001 * (((v6 < (char)(v5 ^ 0x67)) ^ ((v5 ^ 0x48) - 99)) & 1)) ^ v5 ^ 0x648)))();
}

uint64_t sub_1001AC7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((((((v4 - v5) | (v5 - v4)) & 0x80) == 0) * (v5 + 373 * (v5 ^ 0xCD) + 696)) ^ (v5 + 354))))();
}

uint64_t sub_1001AC808@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((443 * (((*(_DWORD *)(a1 + 92) == 1804694416) ^ ((v1 ^ 0x42) - 35)) & 1)) ^ v1)))();
}

uint64_t sub_1001AC85C@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  int v3 = v2 + 1575705516;
  int v4 = (unsigned char *)STACK[0x800];
  uint64_t v5 = (v3 + 288196046) & 0xEED27FA8;
  int v6 = *(_DWORD *)(a2 + 72);
  v4[v5 - 1960] = *((unsigned char *)&unk_10021F9A0 + ((v5 - 1960) & 0xE)) ^ *((unsigned char *)&unk_100223AC0 + ((v5 - 1960) & 0xE)) ^ HIBYTE(v6) ^ *((unsigned char *)&unk_100223730 + ((v5 - 1960) & 0xE)) ^ (105 * ((v5 + 88) & 0xE)) ^ 0xFB;
  v4[1] = BYTE2(v6) ^ 0x2C;
  v4[2] = BYTE1(v6) ^ 0xD2 ^ unk_10021F9A2 ^ unk_100223AC2 ^ unk_100223732 ^ 0x1E;
  v4[3] = v6 ^ 0x3B ^ unk_10021F9A3 ^ unk_100223AC3 ^ unk_100223733 ^ 0xB8;
  unsigned int v7 = *(_DWORD *)(a2 + 92) - 1033055748;
  BOOL v8 = v7 < 0x2DFE458C;
  BOOL v9 = v7 > 0x2DFE4590;
  if (v8) {
    BOOL v9 = v8;
  }
  return ((uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + ((1606 * v9) ^ v3)))(0x866F51493560A1FLL, &unk_100223AC0, 105, 79, 184, a1, 3460785470, 3261911548);
}

void sub_1001ACA30()
{
}

uint64_t sub_1001ACA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (((v4 == (((v5 & 0xB3) + 46) & 0xFB ^ 0x97)) * (8 * (v5 & 0x25F6F6B3 ^ 0x2C4) - 1783)) ^ v5 & 0x25F6F6B3)))();
}

uint64_t sub_1001ACA94@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((7
                               * (*(_DWORD *)(a1 + 92) == ((v1 - 370560687) & 0x16164FFB)
                                                        + 1804694432
                                                        + 980 * (v1 ^ 0x659)
                                                        - 3936)) ^ v1)))();
}

uint64_t sub_1001ACAF8()
{
  return ((uint64_t (*)(void))STACK[0x918])();
}

uint64_t sub_1001ACB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B9CF0(a1, a2, a3, &off_10026D1A0);
}

uint64_t sub_1001ACB1C()
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((38
                               * (((v0 + 95) ^ ((((v0 - 1800) | 0x710) ^ 0xF61CC372) + 165886782 < 0x10)) & 1)) ^ (v0 - 1694))))();
}

void sub_1001ACB90(char a1)
{
  *(unsigned char *)(STACK[0x600] + v3) ^= *(unsigned char *)(v2 + v3) ^ (40 * (a1 ^ v1) + 118);
  JUMPOUT(0x1001ACB54);
}

uint64_t sub_1001ACBC0()
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((13
                               * (((v0 + 207899447) & 0xF39BAFFF)
                                + (unint64_t)*(unsigned int *)(STACK[0x640] + 92)
                                + ((unint64_t)(*(_DWORD *)(STACK[0x640] + 92) < 0x6B917390u) << 32) == 1804695151)) ^ (v0 + 61))))();
}

uint64_t sub_1001ACC60()
{
  STACK[0x788] = v0 - 352;
  return ((uint64_t (*)(void))STACK[0x668])();
}

uint64_t sub_1001ACC74()
{
  unint64_t v1 = STACK[0x730];
  unint64_t v2 = STACK[0x950] - 0x58405A597B241F58;
  STACK[0xA20] = v2;
  STACK[0xA28] = v1;
  STACK[0xA18] = v2;
  STACK[0xA30] = v2;
  if (v2) {
    BOOL v3 = v1 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  char v4 = v3;
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((((((v0 ^ 0xC5) - 40) ^ v4) & 1)
                               * (5 * (v0 ^ 0x6C5) - 1823)) | (v0 + 37))))();
}

uint64_t sub_1001ACCE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0xA10] = 0;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v4 + 306)))(1032);
  STACK[0xA38] = v5;
  uint64_t v6 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v4 ^ 0xF72)))(1028);
  STACK[0xA10] = v6;
  if (v5) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v8 = !v7;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((v8 * ((((v4 - 1585) | 0x603) - 1246) ^ 0xD05)) ^ v4)))();
}

uint64_t sub_1001ACD6C()
{
  HIDWORD(v2) = byte_100245850[v0[14] ^ 0xDELL];
  LODWORD(v2) = ~HIDWORD(v2) << 24;
  int v3 = (v2 >> 25) - ((2 * (v2 >> 25)) & 0xFFFFFFF4) + 122;
  unsigned int v4 = ((((v3 ^ 0x74) - ((2 * (v3 ^ 0x74)) & 0x26)) << 8) - 1843457280) ^ 0x921F1300;
  HIDWORD(v2) = byte_100245850[v0[10] ^ 0x9CLL];
  LODWORD(v2) = ~HIDWORD(v2) << 24;
  uint64_t v5 = v0[13] ^ 0xC8;
  unsigned int v6 = ((((((v2 >> 25) - ((2 * (v2 >> 25)) & 0x74) + 58) ^ 0x92)
        - ((2 * (((v2 >> 25) - ((2 * (v2 >> 25)) & 0x74) + 58) ^ 0x92)) & 0x132)) << 8)
      + 2101975296) ^ 0x7D499900;
  int v7 = v6 - ((2 * v6) & 0x3E308E00) - 552057055;
  unsigned int v8 = byte_100245750[v5] - ((2 * byte_100245750[v5] - 108) & 0xFFFFFFB8) + 38;
  unsigned int v9 = ((((2 * (v8 >> 4)) | 0xFFFFFFF6) - ((v8 >> 4) & 4) + 13) ^ 7) + 8;
  unsigned int v10 = ((v9 & 0xFFFFFFEF) - (v9 | 0xFFFFFFEF)) ^ v8;
  LOBYTE(v5) = v5
             - 11
             * ((((unsigned __int16)(117 * v5) >> 8)
                                + (((v5 - ((unsigned __int16)(117 * v5) >> 8)) & 0xFE) >> 1)) >> 3);
  int v11 = ((((v10 ^ 0x44) - ((2 * v10) & 0x102)) << 16) + 1904279552) ^ 0x71810000;
  unsigned int v12 = (v11 - ((2 * v11) & 0x7FF80000) + 1073504318) ^ 0x3FFC603E | (v4 - ((2 * v4) & 0x6EFB9200) - 1216493144) ^ 0xB77DC9A8;
  HIDWORD(v2) = byte_100245850[v0[5] ^ 0x50];
  LODWORD(v2) = ~HIDWORD(v2) << 24;
  unsigned int v13 = (unsigned __int8 *)STACK[0xA28];
  unsigned int v14 = ((((((v2 >> 25) - ((2 * (v2 >> 25)) & 0xB8) - 36) ^ 0x9C)
         - ((2 * (((v2 >> 25) - ((2 * (v2 >> 25)) & 0xB8) - 36) ^ 0x9C)) & 0x166)) << 16)
       - 88932352) ^ 0xFAB30000;
  int v15 = v14 - ((2 * v14) & 0x499C0000) - 1529992302;
  uint64_t v16 = *(unsigned __int8 *)(STACK[0xA28]
                           + (40 - (((2 * v5) & 0x1A) + (v5 ^ 0x1D)))
                           + (((2 * v5) & 0x1A) + (v5 ^ 0x1D) - 29)) ^ 0x12;
  int v17 = byte_10023BEE0[*v0 ^ 0x3DLL] ^ 0x6F;
  unsigned int v18 = (((v17 - ((2 * v17) & 0xB6)) << 24) - 620756992) ^ 0xDB000000;
  LODWORD(v16) = byte_100245750[v16] - ((2 * byte_100245750[v16] + 20) & 0x2E) + 97;
  unint64_t v19 = *(unsigned __int8 *)(STACK[0xA28] + 6);
  STACK[0x548] = v19;
  unsigned int v20 = byte_100245750[v19 ^ 0x22] - ((2 * byte_100245750[v19 ^ 0x22] + 4) & 6) - 51;
  int v21 = (((v16 >> 4) & 4 ^ v16 ^ 0xFD)
       - ((2 * ((v16 >> 4) & 4 ^ v16 ^ 0xFD)) & 0x142)
       + 703156897) ^ 0x29E952A1 | v7 ^ 0xDF184721;
  LODWORD(v16) = v21 - ((2 * v21) & 0x3FDB24FE);
  int v22 = v20 ^ 0x23 ^ (((v20 >> 4) & 4 ^ 0xB5) - 1);
  unsigned int v23 = (((v22 + 12906792 - ((2 * v22) & 0x1D4)) << 8) + 901632) ^ 0xC4FEEA00;
  unint64_t v24 = v13[4];
  STACK[0x4F8] = v24;
  unsigned int v25 = (v23 - ((2 * v23) & 0x77215E00) - 74404057) ^ 0xFB90AF27 | v15 ^ 0xA4CE2B92;
  unsigned int v26 = byte_100245750[v24 ^ 0xB8] + (~(2 * byte_100245750[v24 ^ 0xB8] + 20) | 0xFFFFFFA1) + 122;
  unsigned int v27 = (((((v26 >> 4) & 4 ^ v26 ^ 0x4D) - ((2 * ((v26 >> 4) & 4 ^ v26 ^ 0x4D)) & 0xDA)) << 24) - 318767104) ^ 0xED000000;
  unint64_t v28 = v13[1];
  STACK[0x470] = v28;
  unsigned int v29 = (v25 - ((2 * v25) & 0x48F2B39A) + 1685674445) ^ 0x647959CD | (v27 - ((2 * v27) & 0xAAAAAAAA) + 1434816703) ^ 0x558590BF;
  int v30 = byte_100245850[v28 ^ 2];
  LODWORD(v28) = v29 - ((2 * v29) & 0x59C8CB6);
  HIDWORD(v2) = v30;
  LODWORD(v2) = ~v30 << 24;
  int v31 = ((((((v2 >> 25) + (~(2 * (v2 >> 25)) | 0x9D) - 78) ^ 0xA0)
         - 2 * ((((v2 >> 25) + (~(2 * (v2 >> 25)) | 0x9D) - 78) ^ 0xA0) & 0x7F)) << 16)
       + 830406656) ^ 0x317F0000;
  unint64_t v32 = v13[15];
  STACK[0x4C0] = v32;
  unsigned int v33 = (v31 - ((2 * v31) & 0x46B40000) - 480577106) ^ 0xE35AF9AE | (v18 - ((2 * v18) & 0x28000000) + 339316933) ^ 0x143990C5;
  unsigned int v34 = v33 - ((2 * v33) & 0x3E42AD9C);
  unsigned int v35 = byte_100245750[v32 ^ 0x3A] - ((2 * byte_100245750[v32 ^ 0x3A] - 108) & 0xFFFFFFC4) - 84;
  unint64_t v36 = v13[9];
  STACK[0x428] = v36;
  unsigned int v37 = v13;
  int v38 = (v35 >> 4) & 4 ^ v35;
  HIDWORD(v2) = byte_100245850[v36 ^ 0x2B];
  LODWORD(v2) = ~HIDWORD(v2) << 24;
  int v39 = ((v2 >> 25) - ((2 * (v2 >> 25)) & 0x4A) - 91) ^ 0x5B;
  int v40 = ((((~(2 * v39) | 0xFE1B) + v39) << 16) + 2012413952) ^ 0x77F20000;
  LODWORD(v16) = (v40 - ((2 * v40) & 0xD700000) - 424115308) ^ 0xE6B88394 | (v16 - 538078593) ^ 0xDFED927F;
  int v41 = v16 - ((2 * v16) & 0x2AA5838A);
  unint64_t v42 = v13[3];
  STACK[0x468] = v42;
  HIDWORD(v2) = byte_100245850[v42 ^ 0x5B];
  LODWORD(v2) = ~HIDWORD(v2) << 24;
  LODWORD(v42) = (v34 + 522278606) ^ 0x1F2156CE | ((((v2 >> 25) - ((2 * (v2 >> 25)) & 0x84) - 62) ^ 0xDF)
                                                 - ((2 * (((v2 >> 25) - ((2 * (v2 >> 25)) & 0x84) - 62) ^ 0xDF)) & 0x1C6)
                                                 - 1228194333) ^ 0xB6CB3DE3;
  unint64_t v43 = v13[7];
  STACK[0x458] = v43;
  unsigned int v44 = byte_100245750[v43 ^ 0xFB] - 2 * ((byte_100245750[v43 ^ 0xFB] + 10) & 9 ^ byte_100245750[v43 ^ 0xFB] & 1) + 82;
  unsigned int v45 = v44 ^ 0xE7 ^ (((((v44 >> 4) | 0xFFFFFFFB) + 23) ^ 0x39) - 1);
  LODWORD(v28) = (v28 + 47072859) ^ 0x2CE465B | (v45 - ((2 * v45) & 0x6A) - 1161211339) ^ 0xBAC95235;
  LODWORD(v13) = v28 - ((2 * v28) & 0x46F1A73A) - 1552362595;
  LODWORD(STACK[0x550]) = v13;
  unint64_t v46 = v37[8];
  STACK[0x420] = v46;
  HIDWORD(v2) = byte_100245850[v46 ^ 5];
  LODWORD(v2) = ~HIDWORD(v2) << 24;
  LODWORD(v28) = ((v2 >> 25) - ((2 * (v2 >> 25)) & 0xE2) - 15) ^ 0x95;
  LODWORD(v28) = (((v28 - ((2 * v28) & 0x33333333)) << 24) + 419430400) ^ 0x19000000;
  LODWORD(v28) = (v28 - ((2 * v28) & 0xD2000000) + 1769885423) ^ 0x697E4EEF | (v41 + 357745093) ^ 0x1552C1C5;
  unint64_t v47 = v37[2];
  STACK[0x480] = v47;
  STACK[0x568] = (unint64_t)v37;
  int v48 = byte_10023BEE0[v47 ^ 0x7D];
  int v49 = v28 - ((2 * v28) & 0xC3C8B480) - 505128384;
  LODWORD(STACK[0x4E8]) = v49;
  LODWORD(v28) = ((((v48 ^ 0x72) - ((2 * (v48 ^ 0x72)) & 0x16A)) << 8) + 249607424) ^ 0xEE0B500;
  uint64_t v50 = byte_100239980[v37[12] ^ 0x5ALL];
  LODWORD(v47) = ((((v50 ^ 0xA4) - ((2 * v50) & 0x26)) << 24) - 1828716544) ^ 0x93000000;
  LODWORD(v32) = (v47 - ((2 * v47) & 0xE7FFFFFF) - 208432792) ^ 0xF3939168 | ((v38 ^ 0x62)
                                                                            - ((2 * (v38 ^ 0x62)) & 0x7C)
                                                                            + 397422654) ^ 0x17B0303E;
  int v51 = (v32 - ((2 * v32) & 0xF9182BE6) - 57928205) ^ 0xFC8C15F3 | (v12 - ((2 * v12) & 0x86D8B7CA) + 1131174885) ^ 0x436C5BE5;
  LODWORD(v37) = (v51 - ((2 * v51) & 0x9105D5C8) - 930944284) ^ 0xCD270489;
  LODWORD(STACK[0x4F0]) = v37;
  int v52 = (v42 - ((2 * v42) & 0x542F4082) + 706191425) ^ 0x2A17A041 | (v28 - ((2 * v28) & 0x55FA1200) - 352515667) ^ 0xEAFD09AD;
  unsigned int v53 = v52 - ((2 * v52) & 0x8FA1AD26) + 1204868755;
  LODWORD(STACK[0x558]) = v53;
  int v54 = dword_100238860[v10 ^ 1];
  HIDWORD(v2) = v54 ^ 0x2261;
  LODWORD(v2) = v54 ^ 0x9F280000;
  int v55 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0xAEF895B6);
  int v56 = dword_100238860[v50 ^ 1];
  HIDWORD(v2) = v56 ^ 0x61;
  LODWORD(v2) = v56 ^ 0x9F282200;
  int v57 = dword_100223EE0[v38 ^ 6] ^ ((v2 >> 8) - ((2 * (v2 >> 8)) & 0x9FE091B4) + 1341147354);
  int v58 = dword_100238860[v3 ^ 0xFB];
  HIDWORD(v2) = v58 ^ 0x282261;
  LODWORD(v2) = v58 ^ 0x9FFFFFFF;
  int v59 = (v55 - 679720229) ^ v57 ^ ((v2 >> 24) - ((2 * (v2 >> 24)) & 0x16807480) - 1958725056) ^ v53;
  LODWORD(v13) = v59 ^ v13;
  int v60 = v59;
  LODWORD(STACK[0x4E0]) = v59;
  LODWORD(STACK[0x560]) = v13 ^ v49;
  unsigned int v61 = v13 ^ v49 ^ 0x85026CC;
  unsigned int v62 = v37 ^ v61;
  LODWORD(STACK[0x4D8]) = v61;
  int v63 = ((v37 ^ v61) >> 16) ^ 0x26;
  int v64 = dword_100238860[(((2 * v63) | 0xF82EE8) - v63 + 2130962572) & 0xFFFFFF ^ 0xFC170E];
  HIDWORD(v2) = v64 ^ 0x2261;
  LODWORD(v2) = v64 ^ 0x9F280000;
  int v65 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x14143FBC);
  int v66 = dword_1002360D0[HIBYTE(v62) ^ 0xC2];
  HIDWORD(v2) = v66 ^ 0x1F8;
  LODWORD(v2) = v66 ^ 0xF0A1D000;
  int v67 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x5DA5D48) + 49098404;
  int v68 = (((2 * v67) ^ 0x5DA5D48) - 2 * (((2 * v67) ^ 0x5DA5D48) & 0xA134476 ^ (2 * v67) & 4) + 169034866) & 0x32119686 ^ 0x22108484;
  int v69 = (((2 * v68) | 0x3F0F607C) - v68 - 528986174) ^ 0x3685B1D8;
  unsigned int v70 = (v69 - ((2 * v69) & 0xD1549254) + 1755990314) ^ v67;
  HIDWORD(v2) = v70 ^ 0x6C;
  LODWORD(v2) = v70 ^ 0x62C07100;
  int v71 = (v2 >> 8) - ((2 * (v2 >> 8)) & 0xFF37155C) + 2140900014;
  int v72 = dword_100238860[(((2 * (BYTE1(v62) ^ 0x948020ED)) & 0x90041D6) - (BYTE1(v62) ^ 0x948020ED) - 1828238828) ^ 0x7876AE1];
  HIDWORD(v2) = v72 ^ 0x282261;
  LODWORD(v2) = v72 ^ 0x9FFFFFFF;
  int v73 = ((v2 >> 24) - ((2 * (v2 >> 24)) & 0xE18B3B0C) + 1891999110) ^ v60 ^ (v65 - 1979047970) ^ v71;
  unsigned int v74 = ((v62 ^ 0x3F) - 1202640297 + ((2 * (v62 ^ 0x3F) + 428) & 0x300 ^ 0x8EFDA7FF)) ^ dword_100239080[(((2 * (v62 ^ 0x1F)) | 0xEBD103CA) - (v62 ^ 0x1F) - 1978171877) ^ 0x75E88122];
  unsigned int v75 = ((2 * v73) & 0x3FFFFFEA ^ 0x1B7CACA) + (v73 ^ 0x9F241A9A);
  unsigned int v76 = ((2 * ((v74 ^ 0x6D3F88DD ^ v73) + 1)) & 0xEDBE9F5E) + (((v74 ^ 0x6D3F88DD ^ v73) + 1) ^ 0xF6DF4FAF) + v75;
  unsigned int v77 = v75
      + 1610612734
      + (v74 ^ 0x6D1622FF ^ ((v74 ^ 0x6DE46DB2) - ((2 * (v74 ^ 0x6DE46DB2) + 2) & 0xC99985AA) - 456342826) ^ (v76 - 2065554749 - ((2 * v76 + 306274488) & 0x3782E4CE)))
      + 13;
  unsigned int v78 = v77 - ((2 * v77) & 0xC6C209EC) - 480181002;
  LODWORD(STACK[0x4D0]) = v62 ^ 0x464E7CF0;
  LODWORD(STACK[0x4C8]) = v78 ^ v13;
  unsigned int v79 = v78 ^ v13 ^ v13 ^ v49 ^ 0x85026CC;
  int v80 = v79 ^ v62 ^ 0x464E7CF0;
  LODWORD(STACK[0x4A0]) = v80;
  unsigned int v81 = v80 ^ 0x9283DD4F;
  unsigned int v82 = ((((unsigned __int16)(v80 ^ 0xDD4F) >> 8) ^ 0x44)
       + (((v80 ^ 0x9283DD4F) >> 8) & 0x5B ^ 0x4271091B)
       - ((((unsigned __int16)(v80 ^ 0xDD4F) >> 8) ^ 0x44) & 0x5B)) ^ 0xE2738859;
  int v83 = dword_100223EE0[(v82 - ((2 * v82) & 0x13A0) + 324348368) ^ 0xB357A89C];
  HIDWORD(v2) = v83 ^ 0xD66DF5;
  LODWORD(v2) = v83 ^ 0x49000000;
  int v84 = (v2 >> 24) - ((2 * (v2 >> 24)) & 0x48C17030) + 610318360;
  unsigned int v85 = ((HIBYTE(v81) ^ 0xB8) + 507824944 + ((2 * (HIBYTE(v81) ^ 0xB8) + 172) & 0xB2 ^ 0xBEFDE7FF)) ^ dword_100239080[HIBYTE(v81) ^ 0x5F];
  LODWORD(v32) = ((((v81 >> 1) ^ 0x161063 | 0x89790652)
                 - ((v81 >> 1) ^ 0x161063 | 0x7686F9AD)
                 + 1988557229) | (25279725 - ((v81 & 1) << 7)) ^ 0x181BCED) ^ 0x896F1654;
  LODWORD(v32) = v32
               - 2
               * (v32 & 0x2DE4CD1D ^ (((v81 >> 1) ^ 0x63 | 0x52)
                                    - ((v81 >> 1) ^ 0x63 | 0xAD)
                                    - 83) & 1)
               - 1377514212;
  HIDWORD(v2) = v85 ^ 0x70;
  LODWORD(v2) = v85 ^ 0x6BB06E00;
  int v86 = (v2 >> 8) - ((2 * (v2 >> 8)) & 0x8D9B9DAC) + 1187892950;
  LODWORD(v32) = (((((2 * v32) ^ 0xD6) - ((2 * ((2 * v32) ^ 0xD6)) & 0xD4) - 22) & 0xFE ^ 3)
                - 1) ^ 0xE8 | (v32 >> 7) ^ 0x15BC99B;
  LOWORD(v42) = ((2 * (BYTE2(v81) ^ 0x14)) & 0x1A4) - (BYTE2(v81) ^ 0x14) + 6445;
  LODWORD(v42) = dword_1002360D0[((v42 & 0x654 ^ 0x9088251) + (v42 & 0x9AB) - 1) ^ 0x9088B22];
  HIDWORD(v2) = v42 ^ 0x1F8;
  LODWORD(v2) = v42 ^ 0xF0A1D000;
  LODWORD(v42) = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x6602C9BC) + 855729374;
  LODWORD(v28) = (((2 * v42) ^ 0x6602C9BC) + 189122794 + (~(2 * ((2 * v42) ^ 0x6602C9BC)) | 0x29746E2F)) & 0x32119686 ^ 0x2427E4F4;
  LODWORD(v42) = (((2 * v28) & 0x4F25C8) - v28 - 1093112550) ^ v42;
  HIDWORD(v2) = v42 ^ 0xFA32;
  LODWORD(v2) = v42 ^ 0xAA7B0000;
  int v87 = v84 ^ dword_100223EE0[(v32 - ((2 * v32) & 0x89CE32) + 1950672665) ^ 0x7444E7B4] ^ v86 ^ ((v2 >> 16) - ((2 * (v2 >> 16)) & 0xAE21366A) + 1460706101);
  LODWORD(v32) = v13 ^ 0x4D778808 ^ v87;
  int v88 = v79 ^ 0xA17F842A ^ v32;
  LODWORD(v47) = v32;
  LODWORD(STACK[0x4B0]) = v32;
  unsigned int v89 = v88 ^ v81;
  LODWORD(STACK[0x49C]) = v88;
  int v90 = dword_100223EE0[HIBYTE(v89) ^ 0x9F];
  HIDWORD(v2) = v90 ^ 0xF5;
  LODWORD(v2) = v90 ^ 0x49D66D00;
  LODWORD(v32) = ((v89 ^ 0x71) + (v89 & 0xB1 ^ 0x1339880) - ((v89 ^ 0x71) & 0xB1)) ^ 0x35398BF5;
  LODWORD(v42) = ((BYTE2(v89) ^ 0x6D) - ((2 * (BYTE2(v89) ^ 0x6D)) & 0x12) - 210437111) ^ 0xE474F42B;
  int v91 = ((v2 >> 8) - ((2 * (v2 >> 8)) & 0x3D7B5200) - 1631737600) ^ dword_100223EE0[(v32
                                                                                   - ((2 * v32) & 0x680036BC)
                                                                                   - 1104848034) ^ 0x8A2F48BC];
  LODWORD(v50) = v89 ^ 0x358BFAC7;
  LODWORD(STACK[0x4A8]) = v89 ^ 0x358BFAC7;
  LODWORD(v32) = dword_100223EE0[((v42 | 0x5B5A04AB) - (v42 | 0xA4A5FB54) - 1532626092) ^ 0x4C5A0C4D];
  HIDWORD(v2) = v32 ^ 0x6DF5;
  LODWORD(v2) = v32 ^ 0x49D60000;
  LODWORD(v32) = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x78F192A0) + 1014548816;
  int v92 = dword_100238860[((BYTE1(v89) ^ 0x60012BD) - ((2 * (BYTE1(v89) ^ 0x60012BD)) & 0x40004D6) + 2051859307) ^ 0x7C4CF10E];
  HIDWORD(v2) = v92 ^ 0x282261;
  LODWORD(v2) = v92 ^ 0x9FFFFFFF;
  int v93 = v87 ^ v78;
  LODWORD(STACK[0x4B8]) = v93;
  int v94 = v91 ^ ((v2 >> 24) - ((2 * (v2 >> 24)) & 0x3CBDEA34) - 1637944038) ^ v93 ^ v32;
  LODWORD(STACK[0x494]) = v94 ^ v47;
  LODWORD(STACK[0x570]) = v94;
  int v95 = v94 ^ v47 ^ 0xFE05D15D;
  LODWORD(v32) = v95 ^ v88 ^ v50;
  int v96 = dword_1002360D0[((v32 & 0x2E ^ 0x1CB8180F) + (v32 & 0xD1) - 1) ^ 0x1CB81885];
  HIDWORD(v2) = v96 ^ 0x1F8;
  LODWORD(v2) = v96 ^ 0xF0A1D000;
  int v97 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xED0300F6) - 159285125;
  unsigned int v98 = ((BYTE2(v32) ^ 0xA34FD17A) + 570562565 - ((2 * (BYTE2(v32) ^ 0xA34FD17A)) & 0x44042182) + 1212) ^ 0xD379CE6E;
  LODWORD(v42) = (((2 * v97) ^ 0xED0300F6) - 2 * (((2 * v97) ^ 0xED0300F6) & 0x19DF7DF8 ^ (2 * v97) & 8) + 970948080) & 0x32119686 ^ 0x10011606;
  int v99 = dword_100238860[(-393069138 - v98 + ((2 * v98) & 0x2C580238) + 309) ^ 0xBAA63DAF];
  HIDWORD(v2) = v99 ^ 0x2261;
  LODWORD(v2) = v99 ^ 0x9F280000;
  LODWORD(v28) = (v2 >> 16) - ((2 * (v2 >> 16)) & 0xF26C0C8E) - 113899961;
  LODWORD(v50) = dword_1002360D0[((BYTE1(v32) ^ 0xE1 | 0xBDB1D54) - (BYTE1(v32) ^ 0xE1 | 0x424E2AB) + 69526187) ^ 0xBDB1DD0];
  HIDWORD(v2) = v50 ^ 0x1F8;
  LODWORD(v2) = v50 ^ 0xF0A1D000;
  LODWORD(v50) = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xA33AEF54) + 1369274282;
  LODWORD(v47) = (((2 * v50) ^ 0xA33AEF54) - ((2 * ((2 * v50) ^ 0xA33AEF54)) & 0xA7BD934) + 87944347) & 0x32119686 ^ 0x73090E0A;
  LODWORD(v50) = (((2 * v47) | 0xF695EB7A) - v47 + 78973507) ^ v50;
  int v100 = v32 ^ 0xC9C14531;
  LODWORD(STACK[0x478]) = v32 ^ 0xC9C14531;
  HIDWORD(v2) = v50 ^ 0x4B9F1D;
  LODWORD(v2) = v50 ^ 0xD8000000;
  LODWORD(v50) = (v2 >> 24) - ((2 * (v2 >> 24)) & 0x2A5394) - 2146096694;
  LODWORD(v32) = ((BYTE3(v32) ^ 4) + 2094239616 + ((2 * (BYTE3(v32) ^ 4) + 428) & 0x152 ^ 0xFFF8BFFF)) ^ dword_100239080[BYTE3(v32) ^ 0xE3];
  HIDWORD(v2) = v32 ^ 0x80;
  LODWORD(v2) = v32 ^ 0xCA3E9200;
  int v101 = v28 ^ v97 ^ (((((2 * v42) & 0xFFFE07FF) - v42 + 1221393768) & 0xA442CF26 ^ 0x840A0347)
                    + ((((2 * v42) & 0xFFFE07FF) - v42 + 1221393768) & 0x5A353098 ^ 0x8843089)
                    - 2) ^ v94 ^ ((v2 >> 8) - ((2 * (v2 >> 8)) & 0xC18635D8) - 524084500) ^ v50;
  unsigned int v102 = v95 ^ v88 ^ 0xD7683F30;
  LODWORD(STACK[0x498]) = v102;
  LODWORD(v32) = v101 ^ 0x7C0E3050 ^ v95;
  LODWORD(STACK[0x47C]) = v32;
  LODWORD(v32) = v32 ^ 0x50AC5171;
  int v103 = v32 ^ v102;
  int v104 = v32;
  LODWORD(STACK[0x464]) = v32;
  unsigned int v105 = v32 ^ v102 ^ v100;
  LODWORD(v47) = v103;
  unsigned int v106 = ((HIBYTE(v105) ^ 0xA9) + 543402010 + ((2 * (HIBYTE(v105) ^ 0xA9) + 428) & 0x286 ^ 0xBEF8AFFF)) ^ dword_100239080[HIBYTE(v105) ^ 0x4E];
  HIDWORD(v2) = v106 ^ 0x6A;
  LODWORD(v2) = v106 ^ 0x69AE8B00;
  int v107 = (v2 >> 8) - ((2 * (v2 >> 8)) & 0xE87EDFD6) - 197169173;
  LODWORD(v32) = (((2 * (BYTE1(v105) ^ 0x56)) | 0x325AA922) - (BYTE1(v105) ^ 0x56) + 1188211567) & 0x3FFFFFFF ^ 0x392D5440;
  LODWORD(v32) = (v32 - ((2 * v32 + 1896307116) & 0x6211AA48) + 1808564730) ^ dword_100239080[((BYTE1(v105) ^ 0x70E545)
                                                                                             - ((2
                                                                                               * (BYTE1(v105) ^ 0x70E545)) & 0xC00B22)
                                                                                             - 613612143) ^ 0xDB1DE0B4];
  HIDWORD(v2) = v32 ^ 0x39A50D;
  LODWORD(v2) = v32 ^ 0xBD000000;
  LODWORD(v32) = (v2 >> 24) - ((2 * (v2 >> 24)) & 0xE7A474EA) + 1943157365;
  int v108 = (v105 & 0xE1 ^ 0x62ED88C1) + (v105 & 0x1E ^ 9) - 1;
  int v109 = v105 ^ 0x6FF2E6A0;
  LODWORD(STACK[0x450]) = v105 ^ 0x6FF2E6A0;
  LODWORD(STACK[0x454]) = v47;
  unsigned int v110 = (v62 ^ 0x90F0B4F7)
       + (((v62 ^ 0x96E44B08) + 1) ^ 0xBFEF7FDF)
       + ((2 * ((v62 ^ 0x96E44B08) + 1)) & 0x7FDEFFBE)
       + 1074823201;
  int v111 = dword_100223EE0[(((2 * (BYTE2(v105) ^ 0x57)) & 0xFFFFFF0F) - (BYTE2(v105) ^ 0x57) + 632) ^ 0x295];
  unsigned int v112 = ((v110 ^ 0x77C1B37F) - 2009183103 + ((2 * v110) & 0xEF8366FE)) | v111 ^ 0x49D66DF5;
  HIDWORD(v2) = (v112 - ((2 * v112) & 0x38AE) + 7255) ^ 0x1C57;
  LODWORD(v2) = v111 ^ 0x49D60000;
  int v113 = dword_100223EE0[((v108 & 0x818A6A ^ 0x810426A) + (v108 ^ 0xF68D8811) - ((v108 ^ 0xF68D8811) & 0x10400A6A)) ^ 0x8CB1CAD0] ^ v101 ^ 0x7C0E3050 ^ v107 ^ v32 ^ 0xDD4A123B ^ ((v2 >> 16) - ((2 * (v2 >> 16)) & 0xAFE0794E) + 1475361959);
  LODWORD(STACK[0x3F8]) = v113;
  int v114 = v113 ^ v104;
  HIDWORD(v2) = v113 ^ v104 ^ 0x2C252;
  LODWORD(v2) = v113 ^ v104 ^ 0x7A880000;
  int v115 = ((v2 >> 18) - ((2 * (v2 >> 18)) & 0x35C1245E) + 450925103) ^ (((v47 << 14) ^ 0x54DD8000)
                                                                     - ((2 * ((v47 << 14) ^ 0x54DD8000)) & 0xA080000)
                                                                     + 84159885);
  HIDWORD(v2) = v115 ^ (v47 >> 18) ^ 0x3C9B;
  LODWORD(v2) = v115 ^ 0xE8C14000;
  int v116 = (v2 >> 14) - ((2 * (v2 >> 14)) & 0xE3184DC4) - 242473246;
  LODWORD(v50) = v116;
  LODWORD(STACK[0x3DC]) = v116;
  unsigned int v117 = v109 ^ 0x624A635 ^ v116;
  int v118 = dword_1002360D0[(((((2 * (BYTE2(v117) ^ 0xCA8CC0C1)) | 0x2E17CFBC) - (BYTE2(v117) ^ 0xCA8CC0C1) + 1760827426) & 0x1C002373 ^ 0x100DD021)
                        + ((((2 * (BYTE2(v117) ^ 0xCA8CC0C1)) | 0x2E17CFBC) - (BYTE2(v117) ^ 0xCA8CC0C1) + 1760827426) & 0x41800C8C ^ 0x41A00801)
                        - 1) ^ 0xC2DFF24];
  LODWORD(STACK[0x358]) = v1;
  HIDWORD(v2) = v118 ^ 0x1F8;
  LODWORD(v2) = v118 ^ 0xF0A1D000;
  unint64_t v119 = *(unsigned __int8 *)(STACK[0x568] + 13);
  STACK[0x380] = v119;
  LODWORD(STACK[0x3C0]) = (v119 ^ 0x3F) - 12 * ((171 * (v119 ^ 0x3F)) >> 11);
  int v120 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x30275AE4) - 1743540878;
  LODWORD(v119) = ((2 * v120) ^ 0x30275AE4) - ((2 * ((2 * v120) ^ 0x30275AE4)) & 0x1D9F45B4) + 1322230491;
  LODWORD(v119) = ((v119 & 0x20019084 ^ 0x40C1B86D | v119 & 0x12100602) - 1) ^ 0x6C172EE;
  LODWORD(v119) = (v119 - ((2 * v119) & 0x4029800) - 2098369216) ^ v120;
  HIDWORD(v2) = v119 ^ 0x1FB0;
  LODWORD(v2) = v119 ^ 0x5F7B0000;
  LODWORD(v119) = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x6ABE0ACA) - 1252063899;
  unsigned int v121 = ((BYTE1(v117) ^ 7) - ((2 * (BYTE1(v117) ^ 7)) & 0x24) - 344697838) ^ 0xEFE62CB0;
  unsigned int v122 = (((2 * v121) & 0x8202AFC) - v121 - 2083624319) ^ 0x875C1277;
  int v123 = (((2 * (BYTE1(v117) ^ 0x6B)) & 0x13C) - (BYTE1(v117) ^ 0x6B) + 1985381217) ^ 0x7714A3E1;
  int v124 = (v122 - ((2 * v122 + 1896307116) & 0x43C6FC90) + 1516710686) ^ dword_100239080[(v123
                                                                                       - ((2 * v123) & 0x20042B6)
                                                                                       + 565191003) ^ 0x20F20104];
  unsigned int v125 = (v124 ^ ((v124 ^ 0x33CA6E7A) - ((2 * (v124 ^ 0x33CA6E7A) + 2) & 0xAE88F8A8) + 1464106069) ^ ((v124 ^ 0x506DF19E) - ((2 * (v124 ^ 0x506DF19E) + 122634186) & 0x28BC3C8A) - 133841366) ^ 0xF2FF394)
       + 1671929828;
  HIDWORD(v2) = (v125 ^ 0xFFFF32DF) + 52513 + ((2 * v125) & 0xFFFE65BE);
  LODWORD(v2) = HIDWORD(v2);
  LODWORD(v119) = dword_100238860[(((2 * (v117 ^ 0x42)) | 0x39FDF754)
                                 - (v117 ^ 0x42)
                                 + 1124140118) & 0x3FFFFFFF ^ 0x3CFEFB3A] ^ v113 ^ ((v2 >> 24)
                                                                                  - ((2 * (v2 >> 24)) & 0xE71CE00C)
                                                                                  - 208769018) ^ 0xBEBE2F2 ^ v119;
  int v126 = (((2 * (v119 & 0x2387EEED ^ 0x210406C5)) & 0x7001CD8) - (v119 & 0x2387EEED ^ 0x210406C5) + 806346881) ^ 0x3A0941C0;
  LODWORD(v119) = (((2 * v126) | 0x2B0D3812) - v126 - 361143305) ^ 0x1D069101 | ((v119 & 0xDC781112 ^ 0x494CA6F) - 1) ^ 0xCBCCA6C;
  LODWORD(STACK[0x430]) = v117;
  LODWORD(STACK[0x3BC]) = HIBYTE(v117);
  int v127 = dword_100238860[HIBYTE(v117) ^ 0xD3];
  HIDWORD(v2) = v127 ^ 0x61;
  LODWORD(v2) = v127 ^ 0x9F282200;
  int v128 = (v119 - ((2 * v119) & 0x8F853ADA) - 943547027) ^ ((v2 >> 8) - ((2 * (v2 >> 8)) & 0x4F5C5B8A) - 1481757243);
  LODWORD(STACK[0x3E8]) = v113 ^ v104;
  LODWORD(v119) = v113 ^ v104 ^ 0x550C652C ^ v128;
  int v129 = v128;
  LODWORD(STACK[0x3F0]) = v119;
  int v130 = v119 ^ v50;
  LODWORD(v119) = v119 ^ v50 ^ 0xBD6CF7F2;
  unsigned int v131 = v119 ^ v117;
  int v132 = v119;
  LODWORD(STACK[0x378]) = v119;
  LODWORD(v119) = (((v119 ^ v117) ^ 0x92)
                 + ((v119 ^ v117) & 0x8B ^ 0xAB854209)
                 - (((v119 ^ v117) ^ 0x92) & 0x8B)) ^ 0xAB85421F;
  int v133 = dword_1002360D0[((HIWORD(v131) & 0x89) + (BYTE2(v131) ^ 0xFFFFFF8D) + (BYTE2(v131) | 0x323C0D76) + 1) ^ 0x323C0DFD];
  HIDWORD(v2) = v133 ^ 0x1F8;
  LODWORD(v2) = v133 ^ 0xF0A1D000;
  int v134 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xA039B632) + 1344068377;
  unsigned int v135 = (((2 * v134) ^ 0xA039B632) - ((2 * ((2 * v134) ^ 0xA039B632)) & 0x18165B38) + 738930076) & 0x32119686 ^ 0x100682;
  unsigned int v136 = ((v135 | 0xFBCC5C9E) - (v135 | 0x433A361) + 70493025) ^ 0xF3FC5FD8;
  unsigned int v137 = ((v136 | 0x2084DBA5) - (v136 | 0xDF7B245A) - 545577894) ^ v134;
  HIDWORD(v2) = v137 ^ 0x967E;
  LODWORD(v2) = v137 ^ 0x593D0000;
  int v138 = dword_100238860[(((v131 >> 8) & 3) + 539561983 + ((v131 >> 8) & 0xFC ^ 0x18448BF5)) ^ 0x386D9BD1];
  int v139 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x7BE70440) - 1108114912;
  HIDWORD(v2) = v138 ^ 0x282261;
  LODWORD(v2) = v138 ^ 0x9FFFFFFF;
  LODWORD(v32) = dword_100223EE0[HIBYTE(v131) ^ 0xB1];
  int v140 = (v2 >> 24) - ((2 * (v2 >> 24)) & 0xC677E7D6) - 482610197;
  HIDWORD(v2) = v32 ^ 0xF5;
  LODWORD(v2) = v32 ^ 0x49D66D00;
  LODWORD(v119) = v140 ^ dword_100239080[((v131 & 0x29 ^ 0xAB992620) + (v131 & 0xD6 ^ 0xD3) - 1) ^ 0xAB992613] ^ ((v2 >> 8) - ((2 * (v2 >> 8)) & 0x38D8869A) - 1670626483) ^ (v119 - ((2 * v119 + 822565292) & 0x28D974AE) + 1290823469) ^ v139;
  int v141 = v114 ^ 0xF37692D1 ^ v119;
  int v142 = v130 ^ 0x25CFBBD7 ^ v141;
  LODWORD(STACK[0x370]) = v141;
  unsigned int v143 = v142 ^ v131;
  int v144 = v142;
  LODWORD(STACK[0x374]) = v142;
  int v145 = ((v142 ^ v131) >> 16);
  unsigned int v146 = (-736306729 - (v145 ^ 0xB4) + ((2 * (v145 ^ 0xB4)) & 0x3A) + 11) ^ 0xD41CD9D7;
  int v147 = ((v145 ^ 0x9D) + (HIWORD(v143) & 0xBE ^ 0x222) - ((v145 ^ 0x9D) & 0xBE)) ^ 0x245;
  int v148 = (v147 - ((2 * v147 + 822565292) & 0x3C128796) - 695406431) ^ dword_100239080[v146];
  HIDWORD(v2) = v148 ^ 0x33E2;
  LODWORD(v2) = v148 ^ 0x10780000;
  int v149 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x8A4A773C) + 1160067998;
  unsigned int v150 = ((BYTE1(v143) ^ 0x34) - ((2 * (BYTE1(v143) ^ 0x34)) & 0x172) - 706234183) ^ 0x97F18A8B;
  int v151 = dword_100223EE0[((v150 | 0x6291D17D) - (v150 | 0x9D6E2E82) - 1653723518) ^ 0x2087E346];
  HIDWORD(v2) = v151 ^ 0xD66DF5;
  LODWORD(v2) = v151 ^ 0x49000000;
  int v152 = (v2 >> 24) - ((2 * (v2 >> 24)) & 0xE7215B4A) + 1938861477;
  LODWORD(v32) = ((v143 ^ 0x7C) - ((2 * (v143 ^ 0x7C)) & 0x5C) + 1156527662) ^ 0xF0E7662A;
  unsigned int v153 = ((v143 ^ 0xB2A1047A) - ((2 * (v143 ^ 0xB2A1047A)) & 0x65020822) + 1938525969) ^ 0xC12A8B64;
  LODWORD(v32) = ((v32 | 0x69438041) - (v32 | 0x96BC7FBE) - 1766031426) ^ 0xDD4BD0D1;
  LODWORD(v50) = v143 ^ 0xC404A5C8;
  LODWORD(STACK[0x3A8]) = v143 ^ 0xC404A5C8;
  int v154 = dword_1002360D0[HIBYTE(v143) ^ 0x57];
  HIDWORD(v2) = v154 ^ 0x1F8;
  LODWORD(v2) = v154 ^ 0xF0A1D000;
  int v155 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x84508958) - 1037548372;
  LODWORD(v42) = ((2 * v155) ^ 0x84508958) - ((2 * ((2 * v155) ^ 0x84508958)) & 0x156167C8) + 1253094373;
  LODWORD(v42) = ((v42 & 0x32108004 ^ 0xD8F2A051 | v42 & 0x11682) - 1) ^ 0xFB00D654;
  int v156 = (v42 - ((2 * v42) & 0x2323E508) + 361888741) ^ v155;
  HIDWORD(v2) = v156 ^ 0x4B;
  LODWORD(v2) = v156 ^ 0xF7DFCC00;
  int v157 = v152 ^ dword_100239080[v153];
  LODWORD(v47) = v129;
  LODWORD(STACK[0x438]) = v129;
  int v158 = v119 ^ v129;
  int v159 = v157 ^ v158 ^ (v32 - ((2 * v32 + 1896307116) & 0x593DCB9E) - 1524460891) ^ v149 ^ ((v2 >> 8)
                                                                                          - ((2 * (v2 >> 8)) & 0xEE1BEAE4)
                                                                                          + 1997403506);
  LODWORD(v42) = v159 ^ v132 ^ v50;
  int v160 = dword_1002360D0[BYTE3(v42) ^ 0x14];
  HIDWORD(v2) = v160 ^ 0x1F8;
  LODWORD(v2) = v160 ^ 0xF0A1D000;
  int v161 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x44E37CB4) + 577879642;
  int v162 = (((2 * v161) ^ 0x44E37CB4) - ((2 * ((2 * v161) ^ 0x44E37CB4)) & 0x2CE7C4D8) + 376693356) & 0x32119686 ^ 0x10110406;
  unsigned int v163 = ((v162 | 0x53AFC413) - (v162 | 0xAC503BEC) - 1404027924) ^ 0x53ADC001;
  unsigned int v164 = ((v163 | 0x17EF00A4) - (v163 | 0xE810FF5B) - 401539237) ^ v161;
  HIDWORD(v2) = v164 ^ 0x6C;
  LODWORD(v2) = v164 ^ 0x3618AB00;
  int v165 = (v2 >> 8) - ((2 * (v2 >> 8)) & 0x3457DE52) - 1708396759;
  int v166 = dword_1002360D0[((BYTE1(v42) ^ 0x2032678 | 0x2B6F5C1E) - (BYTE1(v42) ^ 0x2032678 | 0xD490A3E1) - 728718367) ^ 0x296C7A24];
  HIDWORD(v2) = v166 ^ 0x1F8;
  LODWORD(v2) = v166 ^ 0xF0A1D000;
  int v167 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xCF0CA1AA) - 410627883;
  unsigned int v168 = (((2 * v167) ^ 0xCF0CA1AA) - ((2 * ((2 * v167) ^ 0xCF0CA1AA)) & 0x29510C70) + 883459641) & 0x32119686 ^ 0x118204;
  unsigned int v169 = (((2 * v168) | 0xDAA5AF46) - v168 + 313337949) ^ 0xFC63F7F7;
  unsigned int v170 = ((v169 | 0x44B121F0) - (v169 | 0xBB4EDE0F) - 1152459249) ^ v167;
  HIDWORD(v2) = v170 ^ 0x93C2F7;
  LODWORD(v2) = v170 ^ 0x83FFFFFF;
  int v171 = (v2 >> 24) - ((2 * (v2 >> 24)) & 0x5AF784E4) + 763085426;
  int v172 = dword_1002360D0[(((2 * (BYTE2(v42) ^ 0x49A33BAE)) & 0x9342200A) - (BYTE2(v42) ^ 0x49A33BAE) + 907161594) ^ 0x7FB114CE];
  HIDWORD(v2) = v172 ^ 0x1F8;
  LODWORD(v2) = v172 ^ 0xF0A1D000;
  int v173 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x5CDDD016) + 779020299;
  int v174 = ((2 * v173) ^ 0x5CDDD016) - ((2 * ((2 * v173) ^ 0x5CDDD016)) & 0x1C430264) + 1847689522;
  unsigned int v175 = (v174 & 0x2111486 ^ 0x80DC215B) + (v174 & 0x30008200 ^ 0x20008001) - 2;
  unsigned int v176 = ((v175 & 0x3000940E ^ 0xB860AC01) + (v175 & 0x21102B0 ^ 0x2130091) - 2) ^ v173;
  HIDWORD(v2) = v176 ^ 0xD301;
  LODWORD(v2) = v176 ^ 0x97880000;
  int v177 = v42;
  LODWORD(STACK[0x368]) = v42;
  int v178 = ((v159 ^ v132 ^ v50) ^ 0x66)
       - ((2 * ((v159 ^ v132 ^ v50) ^ 0x66)) & 0xC)
       - 14732538;
  int v179 = dword_1002360D0[((v178 & 0xE0042DF8 ^ 0x20CCE8) + (v178 ^ 0xFD962311) - ((v178 ^ 0xFD962311) & 0x10DF8)) ^ 0xE2ACFD23];
  int v180 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0xCA153D46) + 1695194787;
  HIDWORD(v2) = v179 ^ 0x1F8;
  LODWORD(v2) = v179 ^ 0xF0A1D000;
  int v181 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x254CF72A) + 312900501;
  unsigned int v182 = v181 ^ (((2 * v181) ^ 0x254CF72A) - 2 * (((2 * v181) ^ 0x254CF72A) & 0x774222E ^ (2 * v181) & 4) + 125051435) & 0x32119686 ^ v165 ^ v180 ^ v171 ^ v159 ^ 0xA1A9E458;
  LODWORD(STACK[0x36C]) = v182;
  LODWORD(v32) = v159 ^ v132 ^ 0xB04B9B72;
  LODWORD(STACK[0x3D8]) = v32;
  LODWORD(STACK[0x414]) = v79;
  LODWORD(STACK[0x40C]) = (v79 ^ 0x5D53C8A ^ v144)
                        - ((2 * (v79 ^ 0x5D53C8A ^ v144) + 534755402) & 0x2755CAD0)
                        - 2087009907;
  int v183 = v159 ^ v114 ^ 0xF37692D1 ^ v119;
  int v184 = v182 ^ v183 ^ v32 ^ 0x492AC31;
  LODWORD(STACK[0x3C8]) = v184;
  LODWORD(v50) = v13;
  LODWORD(v19) = v13 ^ 0xBBDABDB5;
  int v185 = ((2 * ((v182 ^ v183 ^ v32 ^ 0x438823A5) + (v13 ^ 0xBBDABDB5))) & 0x9F35EDDE)
       + (((v182 ^ v183 ^ v32 ^ 0x438823A5) + (v13 ^ 0xBBDABDB5)) ^ 0xCF9AF6EF);
  LODWORD(STACK[0x448]) = v185 - ((2 * v185 + 133227276) & 0x2954811E) - 1734168043;
  int v186 = STACK[0x494];
  LODWORD(v119) = STACK[0x4A0];
  unsigned int v187 = (LODWORD(STACK[0x4A0]) ^ 0x742B99AC) + (LODWORD(STACK[0x494]) ^ 0xA469BB30) + 1;
  LODWORD(STACK[0x418]) = v187 - ((2 * v187) & 0x6E220ED2) + 923862889;
  LODWORD(v42) = STACK[0x550];
  unsigned int v188 = (LODWORD(STACK[0x550]) ^ 0xCB7A0ECD) + 1299289891;
  LODWORD(v43) = v188 ^ 0x637FF1FF;
  unsigned int v189 = (2 * v188) & 0xC6FFE3FE;
  LODWORD(v13) = v101;
  unsigned int v190 = ((2 * ((v79 ^ 0xA29551AB) + (v101 ^ 0x5A890D92) + 1)) & 0xFF5EFB7E)
       + (((v79 ^ 0xA29551AB) + (v101 ^ 0x5A890D92) + 1) ^ 0x7FAF7DBF);
  LODWORD(v32) = v78;
  int v191 = ((2 * ((v78 ^ 0xF89CC5E6) + (v47 ^ 0x6A88F55F) + 1)) & 0x5F6EDFFE)
       + (((v78 ^ 0xF89CC5E6) + (v47 ^ 0x6A88F55F) + 1) ^ 0x2FB76FFF);
  unsigned int v192 = v190 - ((2 * v190 - 726434902) & 0xA7F7747C) + 1045788691;
  int v193 = v158 ^ 0x2A123CD3;
  LODWORD(STACK[0x434]) = (LODWORD(STACK[0x570]) ^ 0x1ABE282B ^ v158 ^ 0x2A123CD3)
                        - ((2 * (LODWORD(STACK[0x570]) ^ 0x1ABE282B ^ v158 ^ 0x2A123CD3) + 301399612) & 0x22C2E67E)
                        + 2052911709;
  int v194 = v43 + v189 - 1669329407 + (v186 ^ 0xA469BB30);
  LODWORD(STACK[0x364]) = v182 ^ v183 ^ 0xCDFDA880;
  unsigned int v195 = v191 - ((2 * v191 - 1997703592) & 0x8FB9ADAC) - 1940680190;
  LODWORD(STACK[0x488]) = (LODWORD(STACK[0x560]) ^ 0x50DFD573 ^ v182 ^ v183 ^ 0xCDFDA880)
                        - ((2 * (LODWORD(STACK[0x560]) ^ 0x50DFD573 ^ v182 ^ v183 ^ 0xCDFDA880) + 148052344) & 0x2BF08AC0)
                        + 1516360220;
  LODWORD(v28) = v119;
  LODWORD(STACK[0x464]) = (v119 ^ 0x74588F34 ^ LODWORD(STACK[0x464]))
                        - ((2 * (v119 ^ 0x74588F34 ^ LODWORD(STACK[0x464])) + 843590444) & 0x72544060)
                        - 766626362;
  unsigned int v196 = v177 ^ 0xD91396AA ^ v184;
  unsigned int v197 = (v183 ^ 0x58D24E44 ^ v196) - ((2 * (v183 ^ 0x58D24E44 ^ v196) - 1181361762) & 0xDF49DA90) + 1282398743;
  LODWORD(v119) = ((2 * ((v47 ^ 0x6A88F55F) + (v101 ^ 0x5A890D92))) & 0xDBFF53DE)
                + (((v47 ^ 0x6A88F55F) + (v101 ^ 0x5A890D92)) ^ 0x6DFFA9EF);
  LODWORD(v43) = ((2 * ((v159 ^ 0x9DA91006) + (v183 ^ 0x80134782) + 1)) & 0xB5ADFDD6)
               + (((v159 ^ 0x9DA91006) + (v183 ^ 0x80134782) + 1) ^ 0xDAD6FEEB);
  int v198 = v119 - ((2 * v119 + 772928260) & 0xFC639174) + 356172348;
  LODWORD(STACK[0x444]) = v43 - ((2 * v43 + 1697688276) & 0x71A877DC) - 345206440;
  LODWORD(v119) = ((2 * ((v158 ^ 0x5393B5C0) + (LODWORD(STACK[0x4C8]) ^ 0xC1D6D7E8))) & 0xE78EE7FC)
                + (((v158 ^ 0x5393B5C0) + (LODWORD(STACK[0x4C8]) ^ 0xC1D6D7E8)) ^ 0xF3C773FE);
  int v199 = 1070637563 - v119 - ((835626112 - 2 * v119) & 0x4DD29F76);
  int v200 = v50;
  int v201 = STACK[0x478];
  LODWORD(v47) = (v50 ^ 0x921ADF1B ^ v201)
               - 2 * (((v50 ^ 0x921ADF1B ^ v201) + 346385642) & 0x3BF7139F ^ (v50 ^ 0x921ADF1B ^ v201) & 1)
               - 1868791672;
  LODWORD(v119) = ((v19 + 813040745) ^ 0x7DBA1FCB) + ((2 * (v19 + 813040745)) & 0xFB743F96) - 2109349835;
  LODWORD(v19) = STACK[0x47C];
  LODWORD(v119) = v119
                + (LODWORD(STACK[0x47C]) ^ 0xAF20B816)
                - ((2 * (v119 + (LODWORD(STACK[0x47C]) ^ 0xAF20B816))) & 0x1C1E85E0);
  LODWORD(v50) = v159 ^ 0x19BBF4DF ^ v42;
  int v202 = v42 ^ v47 ^ v199 ^ 0xABF400E7;
  int v203 = v200 ^ 0x638E071B;
  LODWORD(v43) = LODWORD(STACK[0x414]) ^ 0xF0C0A300;
  int v204 = LODWORD(STACK[0x4C8]) ^ 0x6C7CDABC;
  LODWORD(STACK[0x2F0]) = v198;
  LODWORD(STACK[0x2E8]) = v197;
  int v205 = v197 ^ v198;
  LODWORD(STACK[0x550]) = v28 ^ 0x267E6B07 ^ v205;
  LODWORD(STACK[0x4A0]) = v43 ^ v205;
  LODWORD(STACK[0x408]) = v204 ^ v205;
  LODWORD(STACK[0x404]) = v32 ^ 0xAAC9374D ^ v205;
  LODWORD(STACK[0x3D4]) = LODWORD(STACK[0x438]) ^ 0x9CAC928C;
  LODWORD(STACK[0x410]) = v194;
  LODWORD(v32) = v194 - ((2 * v194) & 0x43F4F276) - 1577420485;
  LODWORD(v119) = v119 + 235881200;
  LODWORD(STACK[0x438]) = v119;
  int v206 = v119 ^ v32;
  unsigned int v207 = v119 ^ v32 ^ 0x7B4CF780 ^ v193;
  LODWORD(STACK[0x3D0]) = v159 ^ 0x77D3143E;
  LODWORD(STACK[0x3CC]) = v183 ^ 0x9596BC45;
  int v208 = v32;
  LODWORD(STACK[0x494]) = v32;
  LODWORD(STACK[0x3E0]) = v32 ^ v199;
  LODWORD(v119) = v32 ^ v199 ^ 0xC009B914 ^ LODWORD(STACK[0x3C8]);
  int v209 = LODWORD(STACK[0x418]) ^ 0xC057284;
  LODWORD(v28) = LODWORD(STACK[0x418]) ^ 0xF68793FE;
  LODWORD(STACK[0x414]) = v28;
  int v210 = (v119 + v28) ^ 0x36FEFFBC;
  int v211 = (2 * (v119 + v28)) & 0x6DFDFF78;
  LODWORD(v119) = 2 * ((v119 & v28) - ((2 * (v119 & v28)) & 0x4555B038)) + 1163243576;
  unsigned int v212 = 2 * &unk_100234D80;
  LODWORD(STACK[0x418]) = v212;
  LODWORD(v119) = v211 + v210 + (v119 ^ 0x25D5F26D) + ((2 * v119) & 0x3EFF7B54 ^ 0xF5549FAF);
  unsigned int v213 = v119 - ((2 * v119 - 788431904) & 0xCC95F4EC) - 825509786;
  int v214 = LODWORD(STACK[0x3E8]) ^ v206;
  LODWORD(STACK[0x338]) = v209;
  int v215 = v32 ^ v199 ^ v209;
  int v216 = v196 ^ v215;
  unsigned int v217 = (((&unk_100234D80 ^ 0x5BB5EBFF) - 1538649087 + (v212 & 0xB76BD7E0)) ^ 0x3E3D5FEE)
       - 1044209646
       + (v214 ^ 0x482C0343 ^ v216);
  int v218 = LODWORD(STACK[0x4E0]) ^ 0x755F55AE;
  unsigned int v219 = LODWORD(STACK[0x450]) ^ 0x932C0643;
  LODWORD(STACK[0x3A0]) = LODWORD(STACK[0x3D8]) ^ 0x4B7B9DFC;
  LODWORD(v32) = (v217 ^ 0x66DFF6D9) + 729929899 + ((2 * v217) & 0xCDBFEDB2);
  unsigned int v220 = v216 ^ 0xC31A244A;
  unsigned int v221 = LODWORD(STACK[0x454]) ^ 0xF92A920B;
  LODWORD(STACK[0x330]) = v195;
  LODWORD(STACK[0x3D8]) = v13 ^ 0xAF12F045 ^ v195 ^ v192;
  LODWORD(STACK[0x3C8]) = v19 ^ 0x5ABB45C1 ^ v195 ^ v192;
  LODWORD(STACK[0x3B0]) = v219 ^ v195 ^ v192;
  LODWORD(STACK[0x3AC]) = v221 ^ v195 ^ v192;
  int v222 = LODWORD(STACK[0x3F8]) ^ v206;
  int v223 = v32 ^ v222;
  unsigned int v224 = v222 ^ 0x982CDDA9;
  unsigned int v225 = v206 ^ 0x92223FB4 ^ LODWORD(STACK[0x3A8]);
  LODWORD(v19) = LODWORD(STACK[0x4E8]) ^ v199 ^ 0xE4161F0D;
  LODWORD(STACK[0x39C]) = (v223 & 2 | 0xD1B7B285) - 2 * (v223 & 2);
  unsigned int v226 = LODWORD(STACK[0x498]) ^ 0xA255FA9D;
  int v227 = LODWORD(STACK[0x558]) ^ v199 ^ 0x3D31477C;
  LODWORD(STACK[0x44C]) = v199;
  unsigned int v228 = LODWORD(STACK[0x4F0]) ^ v199 ^ 0xBA0360C7;
  int v229 = v50 ^ 0xB6AFFDE;
  LODWORD(STACK[0x2D8]) = v47;
  int v230 = v50 ^ 0xB6AFFDE ^ v47;
  int v231 = v19 ^ v230;
  int v232 = v227 ^ v230;
  int v233 = v228 ^ v230;
  LODWORD(STACK[0x2F8]) = v50;
  int v234 = v202 ^ v50;
  LODWORD(STACK[0x348]) = v223;
  BOOL v235 = (v223 & 1) == 0;
  if (v223) {
    int v236 = v231;
  }
  else {
    int v236 = v234;
  }
  LODWORD(STACK[0x3F8]) = v236;
  if ((v223 & 1) == 0) {
    int v234 = v232;
  }
  LODWORD(STACK[0x558]) = v234;
  if (v223) {
    int v237 = v233;
  }
  else {
    int v237 = v231;
  }
  LODWORD(STACK[0x4F0]) = v237;
  if (v223) {
    int v238 = v232;
  }
  else {
    int v238 = v233;
  }
  LODWORD(STACK[0x3E8]) = v238;
  int v239 = LODWORD(STACK[0x4D8]) ^ 0x39879356;
  int v240 = LODWORD(STACK[0x4D0]) ^ 0x738522ED;
  LODWORD(STACK[0x300]) = v192;
  int v241 = LODWORD(STACK[0x40C]) ^ v192;
  LODWORD(STACK[0x390]) = v241;
  int v242 = v203 ^ v241;
  int v243 = v218 ^ v241;
  int v244 = v239 ^ v241;
  if (v223) {
    int v245 = v242;
  }
  else {
    int v245 = v243;
  }
  LODWORD(STACK[0x4E0]) = v245;
  if (v223) {
    int v246 = v244;
  }
  else {
    int v246 = v242;
  }
  LODWORD(STACK[0x3A8]) = v246;
  int v247 = v240 ^ v241;
  if ((v223 & 1) == 0) {
    int v243 = v247;
  }
  LODWORD(STACK[0x3A4]) = v243;
  if (v223) {
    int v244 = v247;
  }
  LODWORD(STACK[0x4C8]) = v244;
  unsigned int v248 = LODWORD(STACK[0x49C]) ^ 0xA633C62D;
  int v249 = LODWORD(STACK[0x4B0]) ^ 0x33681F85;
  unsigned int v250 = LODWORD(STACK[0x4B8]) ^ 0xD687B3B3;
  unsigned int v251 = LODWORD(STACK[0x4A8]) ^ 0xE3A17420;
  LODWORD(STACK[0x2E0]) = v229;
  int v252 = v229 ^ LODWORD(STACK[0x464]);
  LODWORD(STACK[0x388]) = v252;
  int v253 = v248 ^ v252;
  int v254 = v249 ^ v252;
  int v255 = v250 ^ v252;
  if (v223) {
    int v256 = v253;
  }
  else {
    int v256 = v254;
  }
  LODWORD(STACK[0x4A8]) = v256;
  if ((v223 & 1) == 0) {
    int v254 = v255;
  }
  LODWORD(STACK[0x4E8]) = v254;
  int v257 = v251 ^ v252;
  if (v223) {
    int v258 = v255;
  }
  else {
    int v258 = v251 ^ v252;
  }
  LODWORD(STACK[0x47C]) = v258;
  if (v223) {
    int v253 = v257;
  }
  LODWORD(STACK[0x4D0]) = v253;
  int v259 = LODWORD(STACK[0x434]) ^ v208;
  int v260 = v201 ^ 0x549C0ECE ^ v259;
  int v261 = LODWORD(STACK[0x570]) ^ 0x1E63CD58 ^ v259;
  if (v223) {
    int v262 = v201 ^ 0x549C0ECE ^ v259;
  }
  else {
    int v262 = v226 ^ v259;
  }
  LODWORD(STACK[0x454]) = v262;
  if (v223) {
    int v260 = v261;
  }
  LODWORD(STACK[0x570]) = v260;
  if (v223) {
    int v263 = v186 ^ 0x26CA28AF ^ v259;
  }
  else {
    int v263 = v261;
  }
  LODWORD(STACK[0x450]) = v263;
  if (v223) {
    int v264 = v226 ^ v259;
  }
  else {
    int v264 = v186 ^ 0x26CA28AF ^ v259;
  }
  LODWORD(STACK[0x398]) = v264;
  int v265 = v214 ^ 0xF1D66DA;
  LODWORD(STACK[0x3C4]) = v206;
  unsigned int v266 = v206 ^ 0xE4DF3FF6 ^ LODWORD(STACK[0x430]);
  unsigned int v267 = v206 ^ 0xECF13043 ^ LODWORD(STACK[0x3DC]);
  LODWORD(STACK[0x37C]) = v131 ^ 0xE868CDB5;
  if (v223) {
    unsigned int v268 = v265;
  }
  else {
    unsigned int v268 = v224;
  }
  LODWORD(STACK[0x394]) = v268;
  if ((v223 & 1) == 0) {
    unsigned int v224 = v266;
  }
  LODWORD(STACK[0x4B8]) = v224;
  if (v223) {
    unsigned int v269 = v266;
  }
  else {
    unsigned int v269 = v267;
  }
  LODWORD(STACK[0x38C]) = v269;
  if (v223) {
    unsigned int v270 = v267;
  }
  else {
    unsigned int v270 = v265;
  }
  LODWORD(STACK[0x4B0]) = v270;
  LODWORD(STACK[0x378]) ^= 0x972056CB;
  unsigned int v271 = v206 ^ 0xA58D13B2 ^ LODWORD(STACK[0x374]);
  unsigned int v272 = v206 ^ 0xB1CD4D27 ^ LODWORD(STACK[0x370]);
  if (v223) {
    unsigned int v273 = v207;
  }
  else {
    unsigned int v273 = v225;
  }
  if (v223) {
    unsigned int v274 = v225;
  }
  else {
    unsigned int v274 = v206 ^ 0xA58D13B2 ^ LODWORD(STACK[0x374]);
  }
  LODWORD(STACK[0x4D8]) = v274;
  if (v223) {
    unsigned int v275 = v271;
  }
  else {
    unsigned int v275 = v272;
  }
  if (v223) {
    unsigned int v276 = v272;
  }
  else {
    unsigned int v276 = v207;
  }
  LODWORD(STACK[0x478]) = v276;
  LODWORD(STACK[0x374]) = LODWORD(STACK[0x368]) ^ 0x3A9ADC66;
  LODWORD(STACK[0x560]) = v215;
  unsigned int v277 = v215 ^ 0xA287F7CB ^ LODWORD(STACK[0x364]);
  unsigned int v278 = v215 ^ 0x86BE2F90 ^ LODWORD(STACK[0x36C]);
  if (v223) {
    unsigned int v279 = v213;
  }
  else {
    unsigned int v279 = v215 ^ 0xA287F7CB ^ LODWORD(STACK[0x364]);
  }
  LODWORD(STACK[0x430]) = v279;
  if (v223) {
    unsigned int v280 = v277;
  }
  else {
    unsigned int v280 = v278;
  }
  LODWORD(STACK[0x49C]) = v280;
  if (v223) {
    unsigned int v213 = v220;
  }
  LODWORD(STACK[0x498]) = v213;
  if (v223) {
    unsigned int v281 = v278;
  }
  else {
    unsigned int v281 = v220;
  }
  LODWORD(STACK[0x3DC]) = v281;
  int v282 = byte_100245750[STACK[0x420] ^ 0x1D];
  unsigned int v283 = v282 - ((2 * v282 - 108) & 0xFFFFFFD6) - 75;
  unsigned int v284 = ((((v283 ^ 0x17 ^ (v283 >> 4) & 4) - ((2 * (v283 ^ 0x17 ^ (v283 >> 4) & 4)) & 0xAC)) << 24) - 704643072) ^ 0xD6000000;
  unsigned int v285 = (2 * v284) & 0xA8000000;
  v284 -= 731403315;
  HIDWORD(v286) = byte_100245850[STACK[0x428] ^ 0x15];
  LODWORD(v286) = ~HIDWORD(v286) << 24;
  unsigned int v287 = ((((((v286 >> 25) - ((2 * (v286 >> 25)) & 0x56) + 43) ^ 0xB8)
          - ((2 * (((v286 >> 25) - ((2 * (v286 >> 25)) & 0x56) + 43) ^ 0xB8)) & 0x34)) << 16)
        + 1528430592) ^ 0x5B1A0000;
  int v288 = v287 - ((2 * v287) & 0x68820000) - 197043787;
  unsigned int v289 = ((v288 & 0x4A0000 ^ 0xF3E2F919) + 2054212238) ^ 0x946D14FE;
  unsigned int v290 = v284 - v285;
  unsigned int v291 = (((2 * (v290 & 0xE9000000 ^ 0x9CB3CE6C)) & 0x782790C8) - (v290 & 0xE9000000 ^ 0x9CB3CE6C) + 1101272969) ^ 0x3F3599B4;
  unsigned int v292 = ((v288 & 0xB50000 ^ 0x50000) - ((2 * (v288 & 0xB50000 ^ 0x50000)) & 0x4A0000) + 237471709) ^ 0xCD671EDD;
  unsigned int v293 = ((v291 | 0xF3F32D79) - (v291 | 0xC0CD286) + 202166918) ^ 0xD1D16D28 | (v289 - 1) ^ 0xFA7ED758;
  unsigned int v294 = (((2 * v284) & 0x8000000) - 1687759596 + (v290 & 0x16000000 ^ 0xEDFFFFFF)) ^ 0xFDCFD553;
  unsigned int v295 = (((2 * v292) | 0x5FFCCE0E) - v292 + 1342281977) ^ 0x6CBAFE07 | (v294 - ((2 * v294) & 0x70400000) - 1184863336) ^ 0xD9C96BD8;
  unsigned int v296 = (v293 - ((2 * v293) & 0x5AB3584) - 2099930430) ^ 0x82D59AC2 | (v295 - ((2 * v295) & 0xD6261268) - 351073996) ^ 0xEB130934;
  unsigned int v297 = v296 - ((2 * v296) & 0x8E5EC1D2);
  int v298 = byte_10023BEE0[STACK[0x470] ^ 0xD8] ^ 0x68;
  int v299 = (((v298 - ((2 * v298) & 0xF2)) << 16) + 964231168) ^ 0x39790000;
  int v300 = byte_100239980[STACK[0x468] ^ 0x79] ^ 0x17;
  int v301 = (v299 - ((2 * v299) & 0x47680000) + 1672740882) ^ 0x63B40012 | (v300 - ((2 * v300) & 0x168) + 1740646068) ^ 0x67C026B4;
  int v302 = byte_100245750[STACK[0x458] ^ 0x68];
  int v303 = v301 - ((2 * v301) & 0x22ABD57A);
  int v304 = v302 - ((2 * v302 + 20) & 0x56);
  int v305 = byte_100245750[*(unsigned __int8 *)(STACK[0x568] + 11) ^ 0x88];
  unsigned int v306 = v305 - 2 * ((v305 + 10) & 0x1D ^ v305 & 1) + 102;
  int v307 = v306 ^ 0x4E ^ ((v306 >> 4) & 4 | 0x52);
  unsigned int v308 = (v297 + 1194287337) ^ 0x472F60E9 | (v307 - ((2 * v307) & 0x34) - 1652147430) ^ 0x9D863B1A;
  HIDWORD(v286) = byte_100245850[STACK[0x380] ^ 0xBE];
  LODWORD(v286) = ~HIDWORD(v286) << 24;
  unsigned int v309 = ((((((v286 >> 25) - ((2 * (v286 >> 25)) & 0x60) - 80) ^ 0xAA)
          - ((2 * (((v286 >> 25) - ((2 * (v286 >> 25)) & 0x60) - 80) ^ 0xAA)) & 0x186)) << 16)
        + 2026045440) ^ 0x78C30000;
  unsigned int v310 = v309 - ((2 * v309) & 0x7C7A0000);
  int v311 = byte_10023BEE0[STACK[0x548] ^ 0x16] ^ 0x3B;
  unsigned int v312 = (((v311 - ((2 * v311) & 0x178)) << 8) - 753288192) ^ 0xD319BC00;
  unsigned int v313 = (v304 + 117) ^ (((v304 + 117) >> 4) & 4 | 0xB0);
  unsigned int v314 = (v312 - ((2 * v312) & 0x33EA7E00) - 638238727) ^ 0xD9F53FF9 | ((v313 ^ 0x9B)
                                                                      - ((2 * v313) & 0x88)
                                                                      + 548141892) ^ 0x20ABFB44;
  int v315 = byte_100245750[*(unsigned __int8 *)STACK[0x568] ^ 0x13];
  unsigned int v316 = v315 - 2 * ((v315 + 10) & 0xB ^ v315 & 1) - 44;
  unsigned int v317 = v316 ^ (((v316 >> 4) & 4 | 0xFFFFFFE2) + 25);
  int v318 = ((((v317 ^ 0x9A) - ((2 * v317) & 0x48)) << 24) + 603979776) ^ 0x24000000;
  unsigned int v319 = (v318 - ((2 * v318) & 0xCA000000) + 1697309709) ^ 0x652AE40D | (v303 - 1856640323) ^ 0x9155EABD;
  int v320 = byte_10023BEE0[STACK[0x4F8] ^ 0x3F] ^ 0xD4;
  unsigned int v321 = (((v320 - ((2 * v320) & 0xFFFFFFEF)) << 24) - 150994944) ^ 0xF7000000;
  unsigned int v322 = (v314 - ((2 * v314) & 0x4186F0CE) - 524060569) ^ 0xE0C37867 | (v321 - ((2 * v321) & 0x12000000) - 1993243542) ^ 0x8931846A;
  unsigned int v323 = v322 - ((2 * v322) & 0x34A67946);
  int v324 = byte_10023BEE0[*(unsigned __int8 *)(STACK[0x568] + 10) ^ 0x7BLL] ^ 6;
  int v325 = (((v324 - ((2 * v324) & 0x6A)) << 8) + 497890560) ^ 0x1DAD3500;
  int v326 = (v308 - ((2 * v308) & 0x4CE47726) + 645020563) ^ 0x26723B93 | (v325 - ((2 * v325) & 0x4903EA00) + 612496842) ^ 0x2481F5CA;
  unsigned int v327 = v326 - ((2 * v326) & 0x8C9AAE2A) + 1179473685;
  LOBYTE(v326) = (LODWORD(STACK[0x3C0]) ^ 0x6F) + 2 * LOBYTE(STACK[0x3C0]);
  uint64_t v328 = byte_100239980[*(unsigned __int8 *)(STACK[0x568] + 14) ^ 0x57];
  unsigned int v329 = ((((v328 ^ 0x8D) + 12515030 + (~(2 * (v328 ^ 0x8D)) | 0xFFFE5F)) << 8) + 981760) ^ 0xBF05D000;
  uint64_t v330 = *(unsigned __int8 *)(STACK[0x568] + (123 - v326) + (v326 - 111));
  int v331 = byte_10023BEE0[*(unsigned __int8 *)(STACK[0x568] + 5) ^ 0x6BLL] ^ 0xF1;
  unsigned int v332 = (((v331 - ((2 * v331) & 0xE6)) << 16) - 1955397632) ^ 0x8B730000;
  unsigned int v333 = (v332 - ((2 * v332) & 0x11300000) - 2003290950) ^ 0x889834BA | (v323 + 441662627) ^ 0x1A533CA3;
  int v334 = v333 - ((2 * v333) & 0x2838FF00) + 337411968;
  int v335 = (v329 - ((2 * v329) & 0x5D200) + 1638590891) ^ 0x61AAE9AB | (v310 + 2117927029) ^ 0x7E3D0075;
  uint64_t v336 = byte_10023BEE0[v330 ^ 0xA4];
  int v337 = v335 - ((2 * v335) & 0x452307F2);
  unsigned int v338 = ((((v336 ^ 0xA3) - ((2 * (v336 ^ 0xA3)) & 0x12)) << 24) - 1996488704) ^ 0x89000000;
  unsigned int v339 = v338 - ((2 * v338) & 0xD6000000);
  HIDWORD(v286) = byte_100245850[STACK[0x4C0] ^ 0xF1];
  LODWORD(v286) = ~HIDWORD(v286) << 24;
  int v340 = (v286 >> 25) - ((2 * (v286 >> 25)) & 0xFFFFFFE3) + 113;
  unsigned int v341 = (v339 - 336401922) ^ 0xEBF2E9FE | (v337 - 1567521799) ^ 0xA29183F9;
  unsigned int v342 = (v341 - ((2 * v341) & 0x10145B9E) + 134884815) ^ 0x80A2DCF | ((v340 ^ 0xE4)
                                                                     - ((2 * (v340 ^ 0xE4)) & 0xF8)
                                                                     - 1149984900) ^ 0xBB749F7C;
  int v343 = v342 - ((2 * v342) & 0x2DA6F382) - 1764525631;
  LOBYTE(v339) = ((2 * (STACK[0x3BC] & 0x10 ^ 0x14)) | 0xA) - (STACK[0x3BC] & 0x10 ^ 0x14) + 123;
  LODWORD(v330) = byte_100239980[STACK[0x480] ^ 0x5B] ^ 0xA5;
  LODWORD(v330) = (((v330 - ((2 * v330) & 0x2A) + 5228056) << 8) - 768) ^ 0x4FC61500;
  int v344 = (v330 - ((2 * v330) & 0x463C4A00) - 1558305380) ^ 0xA31E259C | (v319 - ((2 * v319) & 0xD8D83E2) + 113689073) ^ 0x6C6C1F1;
  LODWORD(v330) = v344 - ((2 * v344) & 0xE4BD42) - 2139988319;
  unsigned int v345 = ((((v343 ^ 0x9F3A5AE7) >> (v339 ^ 0x81))
         - ((2 * ((v343 ^ 0x9F3A5AE7) >> (v339 ^ 0x81))) & 0xE3369C98)
         + 1906003532) ^ 0x719B4E4C) >> (v339 ^ 0x91);
  int v346 = (v345 - ((2 * v345) & 0x7C) - 66);
  unsigned int v347 = ((v346 ^ 0x33 | 0xB1CBF6B2) - (v346 ^ 0x33 | 0x4E34094D) + 1312033101) ^ 0xB1CBF6F7;
  int v348 = (v347 - 2 * ((v347 + 948153558) & 0x2C905D3F ^ v347 & 1) + 1695812116) ^ dword_100239080[v346 ^ 0x91];
  HIDWORD(v286) = v348 ^ 0x2D17;
  LODWORD(v286) = v348 ^ 0xA2E10000;
  LODWORD(v336) = dword_100238860[v336 ^ 6];
  int v349 = (v286 >> 16) - ((2 * (v286 >> 16)) & 0xA2EC4B22) - 780786287;
  HIDWORD(v286) = v336 ^ 0x61;
  LODWORD(v286) = v336 ^ 0x9F282200;
  LODWORD(v336) = (v286 >> 8) - ((2 * (v286 >> 8)) & 0x758C1DA2) - 1161425199;
  LODWORD(v328) = dword_100223EE0[v328 ^ 0xEC];
  HIDWORD(v286) = v328 ^ 0xD66DF5;
  LODWORD(v286) = v328 ^ 0x49000000;
  unsigned int v350 = ((2 * (v340 ^ 0xA)) & 0x19E) + (v340 ^ 0xFCEFB9C5);
  int v351 = v336 ^ dword_100239080[v340 ^ 0xED] ^ ((v286 >> 24)
                                                               - ((2 * (v286 >> 24)) & 0xB7612CF2)
                                                               - 609184135) ^ (v350
                                                                             - 1237668363
                                                                             + ((2 * v350 + 1550) & 0x5DA ^ 0x8EFAAFFF)) ^ v330 ^ v349;
  unsigned int v352 = v334 ^ 0xB9B746BD ^ v351;
  LODWORD(STACK[0x4C0]) = v352;
  unsigned int v353 = v327 ^ 0xA513B55F ^ v352;
  unsigned int v354 = v353 ^ v343;
  LODWORD(STACK[0x480]) = v353;
  LODWORD(v328) = ((v353 ^ v343) & 1) + ((v353 ^ v343) & 0xFE ^ 0x36C1B2F9) - 1;
  LODWORD(v328) = dword_1002360D0[((v328 & 0x228120BC ^ 0x2002C)
                                 + (v328 ^ 0x7AA9BED2)
                                 - ((v328 ^ 0x7AA9BED2) & 0x48000CBC)) ^ 0x26EB204B];
  LODWORD(STACK[0x4F8]) = LODWORD(STACK[0x3F0]) ^ 0x5D2A35F2;
  HIDWORD(v286) = v328 ^ 0x1F8;
  LODWORD(v286) = v328 ^ 0xF0A1D000;
  LODWORD(v328) = (v286 >> 9) - ((2 * (v286 >> 9)) & 0xDCDC9286) - 294762173;
  LODWORD(v336) = dword_100223EE0[(((2 * (BYTE1(v354) ^ 0xA02A35F4)) | 0x5FBC54EE)
                                 - (BYTE1(v354) ^ 0xA02A35F4)
                                 - 803089015) ^ 0x8FF41F3C];
  HIDWORD(v286) = v336 ^ 0xD66DF5;
  LODWORD(v286) = v336 ^ 0x49000000;
  LODWORD(v336) = (v286 >> 24) - ((2 * (v286 >> 24)) & 0xE1664242);
  unsigned int v355 = ((HIWORD(v354) & 0xCC) + (BYTE2(v354) ^ 0xFFFFFFEF) + (BYTE2(v354) | 0x2622B333) + 1) ^ 0x36273923;
  int v356 = dword_1002360D0[(v355 - ((2 * v355) & 0x5FD0DD4E) - 1343721817) ^ 0xBFEDE425];
  HIDWORD(v286) = v356 ^ 0x1F8;
  LODWORD(v286) = v356 ^ 0xF0A1D000;
  int v357 = (v286 >> 9) - ((2 * (v286 >> 9)) & 0x961711D8) + 1259047148;
  LODWORD(v330) = (((2 * v357) ^ 0x961711D8) - ((2 * ((2 * v357) ^ 0x961711D8)) & 0xBA969BC) + 97826014) & 0x32119686 ^ 0x32018204;
  int v358 = ((v330 | 0xEDD60413) - (v330 | 0x1229FBEC) + 304741356) ^ v357;
  HIDWORD(v286) = v358 ^ 0xDFF;
  LODWORD(v286) = v358 ^ 0x95480000;
  int v359 = (v286 >> 16) + 1246092075 + (~(2 * (v286 >> 16)) | 0x6B7449AB);
  int v360 = v353 ^ v343 ^ 0x675AB6CD;
  int v361 = dword_100223EE0[((v353 ^ v343) >> 24) ^ 0x9C];
  HIDWORD(v286) = v361 ^ 0xF5;
  LODWORD(v286) = v361 ^ 0x49D66D00;
  int v362 = v328 ^ (v336 - 256696031) ^ ((v286 >> 8) - ((2 * (v286 >> 8)) & 0xC59CFB02) - 489783935) ^ (((2 * v328) ^ 0xDCDC9286) - 2 * (((2 * v328) ^ 0xDCDC9286) & 0x183A7C1E ^ (2 * v328) & 0x10) + 406486030) & 0x32119686 ^ 0xB3B03983 ^ v359;
  int v363 = v362 ^ v334;
  unsigned int v364 = v360 ^ v353 ^ v363;
  int v365 = v360;
  LODWORD(STACK[0x468]) = v360;
  LODWORD(v336) = v364 ^ 0x51D1F988;
  int v366 = ((v364 ^ 0x51D1F988) >> 16);
  LODWORD(v330) = (((2 * (v366 ^ 0x2D)) & 0x1E8) - (v366 ^ 0x2D) + 8971) ^ 0x2398;
  unsigned int v367 = ((v366 ^ 0x26 | 0x30CC997) - (v366 ^ 0x26 | 0xFCF33668) - 51169688) ^ 0x829C7F7;
  int v368 = (v330 - ((2 * v330 + 1896307116) & 0x41061542) + 1617868663) ^ dword_100239080[(((2 * v367) | 0x64C4000C)
                                                                                       - v367
                                                                                       - 845283334) ^ 0x39470E19];
  HIDWORD(v286) = v368 ^ 0x7A88;
  LODWORD(v286) = v368 ^ 0xA99A0000;
  int v369 = (v286 >> 16) - ((2 * (v286 >> 16)) & 0xEFAE390A) - 136897403;
  LOWORD(v330) = (v364 & 7 ^ 0xC607) - (v364 & 7) + (v364 ^ 0xE8);
  unsigned int v370 = (((2 * (BYTE1(v336) ^ 0x42022841)) & 0x40041B2) - (BYTE1(v336) ^ 0x42022841) - 36484826) ^ 0xBFD16130;
  int v371 = dword_100223EE0[HIBYTE(v364) ^ 0xB4];
  HIDWORD(v286) = v371 ^ 0xF5;
  LODWORD(v286) = v371 ^ 0x49D66D00;
  int v372 = (v286 >> 8) - ((2 * (v286 >> 8)) & 0xD93D0B02);
  LODWORD(v336) = (((((v336 >> 8) & 0x19) + (BYTE1(v336) ^ 0xB9)) | 0xB5353E00)
                 - ((BYTE1(v336) ^ 0xB9) & 0x19)) ^ 0xA255B62B;
  LODWORD(v336) = (v370 - ((2 * v370 + 1896307116) & 0x410BF4F0) + 476161870) ^ dword_100239080[(((2 * v336) | 0x408D5500)
                                                                                               - v336
                                                                                               - 541502080) ^ 0x372622BB];
  HIDWORD(v286) = v336 ^ 0xAC8A51;
  LODWORD(v286) = v336 ^ 0x6D000000;
  int v373 = (v372 - 325155455) ^ dword_100238860[((v330 & 0x2B5 ^ 0x24403091) + (v330 & 0x14A ^ 0x1008040B) - 1) ^ 0x344836C1];
  LODWORD(STACK[0x320]) = v351;
  int v374 = v373 ^ v362 ^ v351 ^ v369 ^ ((v286 >> 24) - ((2 * (v286 >> 24)) & 0x3735B9F6) - 1684349701);
  int v375 = v374 ^ v363;
  unsigned int v376 = v374 ^ 0xCD5B5AB5;
  LODWORD(STACK[0x428]) = v374 ^ 0xCD5B5AB5;
  unsigned int v377 = v374 ^ v363 ^ 0xC6C82B2E;
  int v378 = ((unsigned __int16)(v377 ^ v360) >> 8);
  LODWORD(v330) = ((2 * (v378 ^ 0xD)) & 0x14A) - (v378 ^ 0xD) + 260455002;
  unsigned int v379 = ((2 * ((v377 ^ v365) >> 8)) ^ 0xE0FD8)
       - 2 * (((2 * ((v377 ^ v365) >> 8)) ^ 0xE0FD8) & 0x76 ^ (2 * ((v377 ^ v365) >> 8)) & 4)
       + 882;
  unsigned int v380 = (((v379 & 0x88888888 ^ 0x4B) + (v379 & 0x124 ^ 0x121) + 510) & 0x1AC ^ 0x188) + (v378 ^ 0x3883ACF2);
  unsigned int v381 = (v380 - 1071038318 + ((2 * v380) & 0x122 ^ 0xFFFDFFFF)) ^ dword_100239080[((v330 & 0x1863110 ^ 0xE068C100)
                                                                                  + (v330 ^ 0xB863A3B)
                                                                                  - ((v330 ^ 0xB863A3B) & 0x110)) ^ 0xE5EEF1BF];
  HIDWORD(v286) = v381 ^ 0x5830B8;
  LODWORD(v286) = v381 ^ 0x4E000000;
  int v382 = dword_1002360D0[((v377 ^ v365) >> 24) ^ 0x55];
  int v383 = (v286 >> 24) - ((2 * (v286 >> 24)) & 0x6D8AB1C6) - 1228580637;
  HIDWORD(v286) = v382 ^ 0x1F8;
  LODWORD(v286) = v382 ^ 0xF0A1D000;
  int v384 = (v286 >> 9) - ((2 * (v286 >> 9)) & 0x7AED1A6C) - 1116304074;
  LODWORD(v330) = (((2 * v384) ^ 0x7AED1A6C) - ((2 * ((2 * v384) ^ 0x7AED1A6C)) & 0x8D75444) + 611035683) & 0x32119686 ^ 0x12119484;
  LODWORD(v330) = ((v330 | 0xD117EFF7) - (v330 | 0x2EE81008) + 786960392) ^ 0xE585DF79;
  int v385 = (v330 - ((2 * v330) & 0x2DAA823C) + 383074590) ^ v384;
  HIDWORD(v286) = v385 ^ 0xA2;
  LODWORD(v286) = v385 ^ 0xACA57D00;
  int v386 = (v286 >> 8) - ((2 * (v286 >> 8)) & 0x11F4DDE8) - 1996853516;
  int v387 = v377 ^ v365 ^ 0xE5139EF;
  unsigned int v388 = (((v377 ^ v365) ^ 0xE4)
        + ((v377 ^ v365) & 0x41 ^ 0xEB905901)
        - (((v377 ^ v365) ^ 0xE4) & 0x41)) ^ 0x7AB04959;
  LODWORD(v336) = dword_100238860[((v377 ^ v365) >> 16) ^ 0xAB];
  HIDWORD(v286) = v336 ^ 0x2261;
  LODWORD(v286) = v336 ^ 0x9F280000;
  int v389 = dword_100223EE0[((v388 | 0x82CD633D) - (v388 | 0x7D329CC2) + 2100468930) ^ 0x13ED73B3] ^ ((v286 >> 16)
                                                                                                 - ((2 * (v286 >> 16)) & 0x34B5C6BE)
                                                                                                 - 1705319585) ^ v376 ^ v383 ^ 0x8452D4E4 ^ v386;
  unsigned int v390 = v353 ^ v363 ^ 0xC4779593 ^ v377;
  LODWORD(STACK[0x380]) = v390;
  LODWORD(STACK[0x3BC]) = v375 ^ 0x945F48FB;
  unsigned int v391 = v390 ^ v375 ^ 0x945F48FB ^ v389;
  int v392 = (v390 ^ v375 ^ 0xFB ^ v389 ^ v387) ^ 0x77;
  unsigned int v393 = ((v392 | 0xE51FCE22) - (v392 | 0x1AE031DD) + 450900445) ^ 0xC955C206;
  int v394 = dword_1002360D0[((v393 | 0x6918E8C9) - (v393 | 0x96E71736) - 1763240138) ^ 0x4552E489];
  HIDWORD(v286) = v394 ^ 0x1F8;
  LODWORD(v286) = v394 ^ 0xF0A1D000;
  LODWORD(v328) = (v286 >> 9) - ((2 * (v286 >> 9)) & 0xF5DFAF6E) - 84944969;
  int v395 = (((2 * v328) ^ 0xF5DFAF6E) - 2 * (((2 * v328) ^ 0xF5DFAF6E) & 0x1CB6787A ^ (2 * v328) & 0x10) + 1018591339) & 0x32119686 ^ 0x110606;
  int v396 = dword_1002360D0[((((v391 ^ v387) >> 8) & 0x56 ^ 0x545) + (((v391 ^ v387) >> 8) & 0xA9) - 1) ^ 0x528];
  unsigned int v397 = (v395 - ((2 * v395) & 0x40030800) + 1745480801) & 0xF21FFEC6;
  HIDWORD(v286) = v396 ^ 0x1F8;
  LODWORD(v286) = v396 ^ 0xF0A1D000;
  int v398 = (v286 >> 9) - ((2 * (v286 >> 9)) & 0x50FD3674) + 679385914;
  int v399 = (((2 * v398) ^ 0x50FD3674) - 2 * (((2 * v398) ^ 0x50FD3674) & 0x5C5549E ^ (2 * v398) & 2) + 96818332) & 0x32119686 ^ 0x22100206;
  int v400 = (((((2 * v399) & 0x240C) - v399 + 2052689400) & 0x32088A28 ^ 0x21200001 | (((2 * v399) & 0x240C)
                                                                                  - v399
                                                                                  + 2052689400) & 0x1775D6)
        - 1) ^ v398;
  HIDWORD(v286) = v400 ^ 0xD297C2;
  LODWORD(v286) = v400 ^ 0x18000000;
  int v401 = (v286 >> 24) - ((2 * (v286 >> 24)) & 0xE2BE673C) + 1902064542;
  __int16 v402 = (((v391 ^ v387) >> 16) & 0x79 ^ 0x648) + (((v391 ^ v387) >> 16) & 0x86 ^ 7) - 1;
  int v403 = ((v402 & 0x575 ^ 0x26EC100) + (v402 & 0x28A ^ 0x20012089) - 1) ^ 0x226FE7AD;
  int v404 = (v403 - ((2 * v403 + 285694380) & 0x19025374) + 84203152) ^ dword_100239080[((((v391 ^ v387) >> 16) & 0xE6 ^ 0x245)
                                                                                    - (((v391 ^ v387) >> 16) | 0x3E6)
                                                                                    + 1022) & 0x3FF ^ 0x2D1];
  HIDWORD(v286) = v404 ^ 0x5993;
  LODWORD(v286) = v404 ^ 0x42F00000;
  int v405 = (v286 >> 16) - ((2 * (v286 >> 16)) & 0x5FAF12AE) + 802654551;
  int v406 = dword_100238860[((v391 ^ v387) >> 24) ^ 0x49];
  HIDWORD(v286) = v406 ^ 0x61;
  LODWORD(v286) = v406 ^ 0x9F282200;
  int v407 = v328 ^ ((v286 >> 8) - ((2 * (v286 >> 8)) & 0xCBEDB924) - 436806510) ^ v397 ^ v405 ^ 0x755FCD16 ^ v401;
  int v408 = v375 ^ 0x1069B46 ^ v407;
  LODWORD(STACK[0x310]) = v387;
  unsigned int v409 = v408 ^ v387;
  unsigned int v410 = v408 ^ v387 ^ 0xA4BF9D33;
  int v411 = LODWORD(STACK[0x448]) ^ LODWORD(STACK[0x444]);
  int v412 = LODWORD(STACK[0x3D4]) ^ v411;
  int v413 = STACK[0x464];
  int v414 = LODWORD(STACK[0x488]) ^ LODWORD(STACK[0x464]);
  LODWORD(STACK[0x368]) = v414;
  int v415 = LODWORD(STACK[0x3D0]) ^ v414;
  int v416 = LODWORD(STACK[0x3CC]) ^ v414;
  int v417 = LODWORD(STACK[0x3A0]) ^ v414;
  int v418 = LODWORD(STACK[0x39C]) + 2;
  int v419 = LODWORD(STACK[0x37C]) ^ v411;
  int v420 = LODWORD(STACK[0x378]) ^ v411;
  LODWORD(STACK[0x2D0]) = v412;
  if (v235) {
    int v421 = v419;
  }
  else {
    int v421 = v412;
  }
  LODWORD(STACK[0x3D4]) = v421;
  LODWORD(STACK[0x2BC]) = v420;
  if (v235) {
    int v422 = v420;
  }
  else {
    int v422 = v419;
  }
  LODWORD(STACK[0x308]) = v422;
  int v423 = LODWORD(STACK[0x374]) ^ v414;
  int v424 = STACK[0x550];
  if (!v235) {
    int v424 = STACK[0x404];
  }
  LODWORD(STACK[0x568]) = v424;
  int v425 = STACK[0x4A0];
  if (v235) {
    int v425 = STACK[0x408];
  }
  LODWORD(STACK[0x374]) = v425;
  int v426 = STACK[0x3AC];
  if (v235) {
    int v426 = STACK[0x3C8];
  }
  LODWORD(STACK[0x458]) = v426;
  int v427 = STACK[0x3D8];
  if (v235) {
    int v427 = STACK[0x3B0];
  }
  LODWORD(STACK[0x3C0]) = v427;
  LODWORD(STACK[0x2B8]) = v415;
  LODWORD(STACK[0x2B4]) = v416;
  if (v235) {
    int v416 = v415;
  }
  LODWORD(STACK[0x3D0]) = v416;
  LODWORD(STACK[0x2B0]) = v417;
  LODWORD(STACK[0x2A8]) = v423;
  if (v235) {
    int v428 = v417;
  }
  else {
    int v428 = v423;
  }
  LODWORD(STACK[0x3CC]) = v428;
  LODWORD(STACK[0x548]) = v418;
  BOOL v429 = v418 == -776490363;
  int v430 = dword_100238860[(((v410 >> 8) & 0xF4 ^ 0x21) - ((v410 >> 8) & 0xB) - 995961078) ^ 0xC4A2D7C9];
  if (v418 == -776490363) {
    unsigned int v431 = v275;
  }
  else {
    unsigned int v431 = v273;
  }
  LODWORD(STACK[0x470]) = v431;
  if (v418 == -776490363) {
    unsigned int v432 = v273;
  }
  else {
    unsigned int v432 = v275;
  }
  LODWORD(STACK[0x36C]) = v432;
  HIDWORD(v433) = v430 ^ 0x282261;
  LODWORD(v433) = v430 ^ 0x9FFFFFFF;
  int v434 = (v433 >> 24) - ((2 * (v433 >> 24)) & 0x580FAA7E) + 738710847;
  unsigned int v435 = (((2 * (BYTE2(v410) ^ 0x442001AB)) | 0xCD113030) - (BYTE2(v410) ^ 0x442001AB) - 1720227864) ^ 0x22A89993;
  int v436 = (v435 - ((2 * v435 + 17258924) & 0x3893860) - 95926010) ^ dword_100239080[(((BYTE2(v410) ^ 0x328AD711) & 0x36F ^ 0x10086F)
                                                                                  + ((BYTE2(v410) ^ 0x328AD711) & 0x10020490 ^ 0xC0450011)
                                                                                  - 1) ^ 0xD0570FA9];
  int v437 = v409 ^ 0x3EB0AF43;
  HIDWORD(v433) = v436 ^ 0xEC19;
  LODWORD(v433) = v436 ^ 0x4FB50000;
  int v438 = (v433 >> 16) - ((2 * (v433 >> 16)) & 0x72E0F360) + 963672496;
  int v439 = dword_100223EE0[HIBYTE(v409) ^ 0xA0];
  HIDWORD(v433) = v439 ^ 0xF5;
  LODWORD(v433) = v439 ^ 0x49D66D00;
  unsigned int v440 = (((2 * (v410 ^ 0xF6)) & 0xC2) - (v410 ^ 0xF6) - 666580322) ^ 0xD065C89C;
  int v441 = dword_1002360D0[(((2 * v440) & 0x6AA) - v440 - 1385841494) ^ 0xA544BEC6];
  int v442 = (v433 >> 8) - ((2 * (v433 >> 8)) & 0xA8DCC41A);
  HIDWORD(v433) = v441 ^ 0x1F8;
  LODWORD(v433) = v441 ^ 0xF0A1D000;
  int v443 = (v433 >> 9) - ((2 * (v433 >> 9)) & 0x91925C9C) - 926339506;
  unsigned int v444 = v434 ^ (v442 - 730963443) ^ v443 ^ v389 ^ v407 ^ v438 ^ 0xD2B04256 ^ (((((2 * v443) ^ 0x91925C9C)
                                                                               - ((2 * ((2 * v443) ^ 0x91925C9C)) & 0x32811E80)
                                                                               + 423661376) & 0x32119686 ^ 0x19E206CF)
                                                                             - 1);
  unsigned int v445 = v444 ^ v391 ^ 0xD4079423;
  LODWORD(STACK[0x3A0]) = v445;
  unsigned int v446 = v445 ^ v437;
  unsigned int v447 = ((HIBYTE(v446) ^ 0x51) + 2026814576 + ((2 * (HIBYTE(v446) ^ 0x51) + 428) & 0x33333333 ^ 0xFFF9E7FF)) ^ dword_100239080[HIBYTE(v446) ^ 0xB6];
  HIDWORD(v433) = v447 ^ 0xB0;
  LODWORD(v433) = v447 ^ 0xCE3A7F00;
  int v448 = (v433 >> 8) - ((2 * (v433 >> 8)) & 0x9E8C3120) - 817489776;
  int v449 = ((HIWORD(v446) & 0xB7 ^ 0x1CD33390) + (HIWORD(v446) & 0x48 ^ 9) - 1) ^ 0x3DD233F7;
  int v450 = ((v446 & 0xD3 ^ 0x3895B8D2) + (v446 & 0x2C ^ 0xD) - 1) ^ 0x5E753B92;
  int v451 = dword_100223EE0[(v449 - ((2 * v449) & 0x2098C) - 859353914) ^ 0xEDC64C82];
  HIDWORD(v433) = v451 ^ 0x6DF5;
  LODWORD(v433) = v451 ^ 0x49D60000;
  int v452 = (v433 >> 16) - ((2 * (v433 >> 16)) & 0x9C1EE9A6) + 1309635795;
  int v453 = dword_100238860[(((2 * (BYTE1(v446) ^ 0x202400A3)) | 0xA9A967C2) - (BYTE1(v446) ^ 0x202400A3) - 1423225825) ^ 0x74F0B379];
  HIDWORD(v433) = v453 ^ 0x282261;
  LODWORD(v433) = v453 ^ 0x9FFFFFFF;
  int v454 = v452 ^ dword_100239080[(v450 - ((2 * v450) & 0x48011FE4) + 1025220594) ^ 0x5BFB1CFF] ^ ((v433 >> 24)
                                                                                               - ((2 * (v433 >> 24)) & 0x8345BEB8)
                                                                                               - 1046290596) ^ (((v445 ^ v437) ^ 0xA6) - ((2 * ((v445 ^ v437) ^ 0xA6) + 285694380) & 0x110000B8) + 1097314098) ^ v448;
  int v455 = v454 ^ v408;
  int v456 = v454 ^ v408 ^ 0x1644779A ^ v444 ^ v391;
  LODWORD(STACK[0x350]) = v456;
  unsigned int v457 = v454 ^ v408 ^ 0x1644779A ^ v437;
  int v458 = dword_1002360D0[HIBYTE(v457) ^ 0xA8];
  HIDWORD(v433) = v458 ^ 0x1F8;
  LODWORD(v433) = v458 ^ 0xF0A1D000;
  int v459 = (v433 >> 9) - ((2 * (v433 >> 9)) & 0x2E1FA1FC) - 1760571138;
  unsigned int v460 = (((((2 * v459) ^ 0x2E1FA1FC) - ((2 * ((2 * v459) ^ 0x2E1FA1FC)) & 0x3DDBECB0) + 1055782489) & 0x32119686 ^ 0xE16F59AF)
        - 1) & 0xB25397A6 ^ v459;
  unsigned int v461 = ((v457 ^ 0x2D215A01 | 0xF379C55B)
        - (v457 ^ 0x2D215A01 | 0xC863AA4)
        + 210123428) ^ 0xDE589FFE;
  unsigned int v462 = (((2 * (v457 ^ 0xC3BCE4C3)) | 0x82E624F0) - (v457 ^ 0xC3BCE4C3) + 1049423240) ^ 0x2CFF6F8;
  HIDWORD(v433) = v460 ^ 0xDA;
  LODWORD(v433) = v460 ^ 0x4C9C000;
  int v463 = (v433 >> 8) - ((2 * (v433 >> 8)) & 0x47FFCC32) + 603973145;
  unsigned int v464 = (((2 * (BYTE2(v457) ^ 0xF7)) & 0x1D6) - (BYTE2(v457) ^ 0xF7) - 50143212) ^ 0xCF12A01D;
  int v465 = dword_1002360D0[(((2 * v464) | 0x7DCECAC) - v464 + 2081524138) ^ 0xB1FE3626];
  HIDWORD(v433) = v465 ^ 0x1F8;
  LODWORD(v433) = v465 ^ 0xF0A1D000;
  int v466 = (v433 >> 9) - ((2 * (v433 >> 9)) & 0xB91AC308) - 594714236;
  unsigned int v467 = (((2 * v466) ^ 0xB91AC308) - 2 * (((2 * v466) ^ 0xB91AC308) & 0x14904B7E ^ (2 * v466) & 4) + 345000826) & 0x32119686 ^ 0x2A71E702;
  unsigned int v468 = ((v467 | 0xD622F6A9) - (v467 | 0x29DD0956) + 702351702) ^ v466;
  int v469 = v457 ^ 0x19EA2CCC;
  LODWORD(STACK[0x39C]) = v457 ^ 0x19EA2CCC;
  int v470 = BYTE1(v457);
  unsigned int v471 = ((v470 ^ 0xCC) - ((2 * (v470 ^ 0xCC)) & 0x194) + 660592074) ^ 0xA78AD1AC;
  int v472 = (v471 - ((2 * v471) & 0x2A00EC) - 130213770) ^ 0x78E81CD8;
  HIDWORD(v433) = v468 ^ 0xE5AF;
  LODWORD(v433) = v468 ^ 0x314A0000;
  int v473 = (v433 >> 16) - ((2 * (v433 >> 16)) & 0x12DAD50) - 2137598296;
  unsigned int v474 = ((v470 ^ 0x7F | 0xC4A086B0) - (v470 ^ 0x7F | 0x3B5F794F) + 996112719) ^ 0xCCA0DA7C;
  int v475 = (v472 - ((2 * v472 + 285694380) & 0x12057402) - 2121898281) ^ dword_100239080[(v474
                                                                                      - ((2 * v474) & 0x3AC12814)
                                                                                      + 1566610442) ^ 0x5560C85A];
  HIDWORD(v433) = v475 ^ 0x73CA28;
  LODWORD(v433) = v475 ^ 0xC7FFFFFF;
  int v476 = v463 ^ dword_100239080[v462];
  int v477 = v454 ^ v444;
  int v478 = v476 ^ v454 ^ v444 ^ (v461 - ((2 * v461 + 822565292) & 0x2651C0A8) + 195857706) ^ ((v433 >> 24)
                                                                                          - ((2 * (v433 >> 24)) & 0x7E273F48)
                                                                                          - 1089232988) ^ v473;
  int v479 = v454 ^ v408 ^ 0x79F99472 ^ v478;
  LODWORD(STACK[0x378]) = v479;
  int v480 = v479 ^ v456;
  unsigned int v481 = v479 ^ v456 ^ 0xBA8F1620;
  LODWORD(STACK[0x340]) = v481;
  unsigned int v482 = v481 ^ v469;
  unsigned int v483 = ((2 * ((v481 ^ v469) ^ 0x4C)) | 0xB1B907CE)
       - ((v481 ^ v469) ^ 0x4C)
       + 656636953;
  unsigned int v484 = ((((v481 ^ v469) >> 8) & 0x49 ^ 0xE71B5001) + (((v481 ^ v469) >> 8) & 0xB6 ^ 0x93) - 1) ^ 0x8F3BD249;
  int v485 = dword_100223EE0[((v484 | 0x72E3508A) - (v484 | 0x8D1CAF75) - 1927499915) ^ 0x1AC3D212];
  HIDWORD(v433) = v485 ^ 0xD66DF5;
  LODWORD(v433) = v485 ^ 0x49000000;
  int v486 = (v433 >> 24) - ((2 * (v433 >> 24)) & 0xE883936C) - 197015114;
  unsigned int v487 = v482 ^ 0x97202FCF;
  LODWORD(STACK[0x328]) = v482 ^ 0x97202FCF;
  unsigned int v488 = HIBYTE(v482) ^ 0xDF;
  LOWORD(v482) = (BYTE2(v482) ^ 0x43) + 22620 - ((2 * (BYTE2(v482) ^ 0x43)) & 0x1DA) + 3217;
  int v489 = dword_100223EE0[v488];
  HIDWORD(v433) = v489 ^ 0xF5;
  LODWORD(v433) = v489 ^ 0x49D66D00;
  int v490 = dword_1002360D0[((v482 & 0x7F9 ^ 0x8498618) + (v482 & 6 ^ 0x22021805) - 1) ^ 0x2A4B9A4C];
  int v491 = v486 ^ dword_100223EE0[v483 ^ 0xD8DC831D] ^ ((v433 >> 8) - ((2 * (v433 >> 8)) & 0xFAA454E8) - 44946828);
  HIDWORD(v433) = v490 ^ 0x1F8;
  LODWORD(v433) = v490 ^ 0xF0A1D000;
  int v492 = (v433 >> 9) - ((2 * (v433 >> 9)) & 0x75CC1820) + 988154896;
  int v493 = (((2 * v492) ^ 0x75CC1820) - ((2 * ((2 * v492) ^ 0x75CC1820)) & 0x385F505C) + 1009756207) & 0x32119686 ^ 0x32238042;
  unsigned int v494 = ((v493 | 0x458E86CF) - (v493 | 0xBA717930) - 1166968528) ^ v492;
  HIDWORD(v433) = v494 ^ 0x1D19;
  LODWORD(v433) = v494 ^ 0x7CCE0000;
  int v495 = v491 ^ ((v433 >> 16) - ((2 * (v433 >> 16)) & 0xDB352FDE) - 308635665);
  unsigned int v496 = v495 ^ v478 ^ 0x95C97A2E;
  int v497 = v495 ^ v455 ^ 0x1C18024E;
  unsigned int v498 = v497 ^ v480 ^ 0xA4B9E383;
  LODWORD(STACK[0x2D4]) = v498;
  int v499 = v497;
  LODWORD(STACK[0x2AC]) = v497;
  unsigned int v500 = v487 ^ v498;
  int v501 = dword_1002360D0[(((2 * v500) & 0x10A) - v500 + 1402) ^ 0x53E];
  HIDWORD(v433) = v501 ^ 0x1F8;
  LODWORD(v433) = v501 ^ 0xF0A1D000;
  int v502 = (v433 >> 9) - ((2 * (v433 >> 9)) & 0xC4AA5524) - 497735022;
  int v503 = dword_100223EE0[HIBYTE(v500) ^ 3];
  unsigned int v504 = (((2 * v502) ^ 0xC4AA5524) - ((2 * ((2 * v502) ^ 0xC4AA5524)) & 0x149D23FC) + 709792255) & 0x32119686 ^ 0x2318508F;
  int v505 = ((2 * v504) & 0x4220211A) - v504 - 1840517342;
  unsigned int v506 = (((2 * (BYTE1(v500) ^ 0xB2)) | 0xB965B718) - (BYTE1(v500) ^ 0xB2) - 1555225484) ^ 0xC9B5996;
  HIDWORD(v433) = v503 ^ 0xF5;
  LODWORD(v433) = v503 ^ 0x49D66D00;
  int v507 = dword_100238860[(v506 - ((2 * v506) & 0xD0523846) + 1747524643) ^ 0x38009EC1];
  int v508 = (v433 >> 8) - ((2 * (v433 >> 8)) & 0xFC8B7E5A);
  HIDWORD(v433) = v507 ^ 0x282261;
  LODWORD(v433) = v507 ^ 0x9FFFFFFF;
  int v509 = (v433 >> 24) - ((2 * (v433 >> 24)) & 0x33951520);
  int v510 = v500 ^ 0xB45E713;
  LODWORD(STACK[0x290]) = v500 ^ 0xB45E713;
  int v511 = BYTE2(v500);
  unsigned int v512 = ((BYTE2(v500) ^ 0xA1) - ((v500 >> 15) & 4) - 2077658110) ^ 0x872A74B3;
  unsigned int v513 = (((2 * (v511 ^ 5)) | 0xDCD34D18) - (v511 ^ 5) + 295065972) ^ 0xC6CCCC90;
  unsigned int v514 = (((2 * v513) | 0xA6541CDA) - v513 - 1395265133) ^ 0x7B8F64A4;
  int v515 = (v514 - ((2 * v514 + 17258924) & 0xBF2F642) - 1099094025) ^ dword_100239080[(((2 * v512) & 0x60407D8)
                                                                                    - v512
                                                                                    + 1215671315) ^ 0x4B76AC34];
  HIDWORD(v433) = v515 ^ 0xB08;
  LODWORD(v433) = v515 ^ 0xB880000;
  int v516 = v502 ^ (v508 + 2118500141) ^ (v509 + 432704144) ^ v496 ^ ((v433 >> 16)
                                                                 - ((2 * (v433 >> 16)) & 0x4E1F1446)
                                                                 - 1492153821) ^ 0x911A9642 ^ v505;
  HIDWORD(v433) = STACK[0x410];
  LODWORD(v433) = LODWORD(STACK[0x494]) ^ 0xA1FA793A;
  int v517 = (v433 >> 1) - ((2 * (v433 >> 1)) & 0xD80459BA) - 335401763;
  HIDWORD(v433) = v478 ^ ~LODWORD(STACK[0x438]);
  LODWORD(v433) = v478 ^ LODWORD(STACK[0x438]) ^ 0xA2E289A;
  int v518 = ((v433 >> 1) - ((2 * (v433 >> 1)) & 0x1684D0EA) - 1958582155) ^ v517;
  HIDWORD(v433) = v518 ^ 0x674044A8;
  LODWORD(v433) = v518;
  int v519 = (v433 >> 31) - ((2 * (v433 >> 31)) & 0xF82D0F68) - 65632332;
  HIDWORD(v433) = LODWORD(STACK[0x488]) ^ 0x60;
  LODWORD(v433) = LODWORD(STACK[0x488]) ^ 0x95F84500;
  int v520 = (v433 >> 8) - ((2 * (v433 >> 8)) & 0xC509958A) + 1652869829;
  int v521 = v499 ^ 0x28976EA0 ^ v516;
  LODWORD(STACK[0x2C0]) = v516;
  int v522 = STACK[0x414];
  int v523 = 2 * ((v521 & STACK[0x414]) - ((2 * (v521 & STACK[0x414])) & 0xB8954D6)) - 1953934122;
  int v524 = v496 ^ v413;
  HIDWORD(v433) = v524 ^ 0x13;
  LODWORD(v433) = v524 ^ 0x1DD84700;
  int v525 = ((v433 >> 8) - ((2 * (v433 >> 8)) & 0x6F1B96B4) - 1215444134) ^ v520;
  HIDWORD(v433) = v525 ^ 0x9065C3;
  LODWORD(v433) = v525 ^ 0x58000000;
  LODWORD(STACK[0x294]) = (v433 >> 24) - ((2 * (v433 >> 24)) & 0x2206E8D4);
  unsigned int v526 = ((v521 + v522) ^ 0xD9BB7AFF)
       + ((2 * (v521 + v522)) & 0xB376F5FE)
       + (v523 ^ 0xAB8A7597)
       + ((2 * v523) & 0xBFF9BD7C ^ 0xE8EF56D3);
  LODWORD(STACK[0x2A0]) = v526 + 1 - 2 * ((v526 + 104948673) & 0x5A51B09F ^ (v526 + 1) & 6) + 1620251737;
  unsigned int v527 = (&unk_100234D80 ^ 0xFF1FDDB9) + 14688839 + (STACK[0x418] & 0xFE3FBB60);
  int v528 = v480 ^ LODWORD(STACK[0x560]) ^ v516;
  int v529 = STACK[0x3C4];
  int v530 = LODWORD(STACK[0x3C4]) ^ v408 ^ v444;
  int v531 = v528 ^ v510;
  unsigned int v532 = (v527 ^ 0xDD63CF5D) + ((2 * v527) & 0xBAC79EBA) + 580661411 + (v528 ^ v510 ^ v530 ^ 0x61D87C9A);
  unsigned int v533 = (&unk_100234D80 ^ 0xDF79E5F8) + 545659400 + (STACK[0x418] & 0xBEF3CBE0);
  unsigned int v534 = ((2 * (v531 ^ v530 ^ 0x442EF06D)) & 0xDF7DE4FE ^ 0x4B6D00EE) + (v531 ^ v530 ^ 0x8E668EE5);
  unsigned int v535 = (&unk_100234D80 ^ 0xFEB4CFB3) + 21704781 + (STACK[0x418] & 0xFD699F60);
  unsigned int v536 = ((2 * v533) & 0xF477ACFA) + (v533 ^ 0xFA3BD67D) + v534;
  int v537 = v536 - 2 * ((v536 + 596400550) & 0x2099CED1 ^ v536 & 1) + 69609590;
  int v538 = v444 ^ LODWORD(STACK[0x3C4]);
  unsigned int v539 = ((2 * v535) & 0xAFFEC5DE) + (v535 ^ 0xD7FF62EF) + v534;
  LODWORD(STACK[0x318]) = (2 * v539 + 194091624) & 0x62786FB4;
  LODWORD(STACK[0x244]) = v539 - 1224407794;
  LODWORD(STACK[0x298]) = (v538 ^ ((v538 ^ 0xFB7574BB) - ((2 * (v538 ^ 0xFB7574BB) + 2) & 0x91C29D6E) + 1222725304) ^ 0x3D6320A7 ^ ((v538 ^ 0xDBECBA6B ^ v537) + (v537 ^ 0x2099CED0) + 1 - ((2 * ((v538 ^ 0xDBECBA6B ^ v537) + (v537 ^ 0x2099CED0) + 1)) & 0xE211CAA8) + 1896408404))
                        + (v537 ^ 0x2099CED0);
  LODWORD(STACK[0x2CC]) = LODWORD(STACK[0x4C0]) ^ 0xE3ADF147;
  unsigned int v540 = (((2 * v532) & 0x7FB7BECA)
        + (v532 ^ 0xBFDBDF65)
        - ((2 * (((2 * v532) & 0x7FB7BECA) + (v532 ^ 0xBFDBDF65)) + 458655354) & 0xAA986FC4)
        + 1660386079) ^ v538;
  int v541 = STACK[0x390];
  int v542 = LODWORD(STACK[0x468]) ^ 0x4B2E177A ^ LODWORD(STACK[0x390]);
  unsigned int v543 = LODWORD(STACK[0x480]) ^ 0xB34EFB50 ^ LODWORD(STACK[0x390]);
  if (v429) {
    int v544 = STACK[0x4F0];
  }
  else {
    int v544 = STACK[0x558];
  }
  LODWORD(STACK[0x414]) = v544;
  if (v429) {
    int v545 = STACK[0x3E8];
  }
  else {
    int v545 = STACK[0x3F8];
  }
  LODWORD(STACK[0x418]) = v545;
  int v546 = STACK[0x4C8];
  if (v429) {
    int v546 = STACK[0x4E0];
  }
  LODWORD(STACK[0x370]) = v546;
  int v547 = STACK[0x3A4];
  if (v429) {
    int v547 = STACK[0x3A8];
  }
  LODWORD(STACK[0x254]) = v547;
  if (v429) {
    int v548 = STACK[0x568];
  }
  else {
    int v548 = STACK[0x374];
  }
  if (v429) {
    int v549 = STACK[0x47C];
  }
  else {
    int v549 = STACK[0x4A8];
  }
  LODWORD(STACK[0x420]) = v549;
  int v550 = STACK[0x398];
  if (v429) {
    int v550 = STACK[0x570];
  }
  LODWORD(STACK[0x364]) = v550;
  if (v429) {
    int v551 = STACK[0x450];
  }
  else {
    int v551 = STACK[0x454];
  }
  if (v429) {
    int v552 = STACK[0x458];
  }
  else {
    int v552 = STACK[0x3C0];
  }
  if (v429) {
    int v553 = STACK[0x38C];
  }
  else {
    int v553 = STACK[0x394];
  }
  if (v429) {
    int v554 = STACK[0x4B8];
  }
  else {
    int v554 = STACK[0x4B0];
  }
  if (v429) {
    int v555 = STACK[0x478];
  }
  else {
    int v555 = STACK[0x4D8];
  }
  int v556 = STACK[0x3CC];
  if (!v429) {
    int v556 = STACK[0x3D0];
  }
  LODWORD(STACK[0x360]) = v556;
  if (v429) {
    int v557 = STACK[0x430];
  }
  else {
    int v557 = STACK[0x3DC];
  }
  if (v429) {
    int v558 = STACK[0x498];
  }
  else {
    int v558 = STACK[0x49C];
  }
  LODWORD(STACK[0x3F0]) = v558;
  if ((v540 & 1) == 0) {
    int v542 = v543;
  }
  LODWORD(STACK[0x274]) = v542;
  LODWORD(STACK[0x280]) = LODWORD(STACK[0x380]) ^ 0x8F08CF62;
  int v559 = STACK[0x388];
  int v560 = LODWORD(STACK[0x3BC]) ^ 0x56C5147F ^ LODWORD(STACK[0x388]);
  if ((v540 & 1) == 0) {
    int v560 = LODWORD(STACK[0x428]) ^ 0x1068C02 ^ LODWORD(STACK[0x388]);
  }
  LODWORD(STACK[0x2A4]) = v560;
  LODWORD(STACK[0x37C]) = v529 ^ 0x2D1CFA53 ^ v446;
  unsigned int v561 = v529 ^ 0xF1FB86E9 ^ LODWORD(STACK[0x3A0]);
  unsigned int v562 = v530 ^ 0x2208FF72;
  int v563 = v411 ^ 0x7FCEFFFB ^ v477;
  int v564 = v411 ^ 0x3AFA4A58 ^ LODWORD(STACK[0x39C]);
  unsigned int v565 = v411 ^ 0xE9B36DB4 ^ v455;
  LODWORD(STACK[0x29C]) = LODWORD(STACK[0x4F8]) ^ v411;
  int v566 = v411 ^ 0x6E7E65D9 ^ LODWORD(STACK[0x350]);
  unsigned int v567 = v529 ^ 0x899A5813 ^ LODWORD(STACK[0x328]);
  unsigned int v568 = v519 ^ 0xEEF5CB57;
  unsigned int v569 = v529 ^ 0xFD8C977C ^ LODWORD(STACK[0x340]);
  unsigned int v570 = v529 ^ 0xF0B14E7D ^ LODWORD(STACK[0x378]);
  if (v540) {
    int v571 = v563;
  }
  else {
    int v571 = v564;
  }
  if (v540) {
    int v563 = v565;
  }
  LODWORD(STACK[0x3A0]) = v563;
  if (v540) {
    unsigned int v572 = v566;
  }
  else {
    unsigned int v572 = v565;
  }
  if (v540) {
    int v573 = v564;
  }
  else {
    int v573 = v566;
  }
  LODWORD(STACK[0x39C]) = v573;
  int v574 = LODWORD(STACK[0x368]) ^ 0x7CC727E1 ^ LODWORD(STACK[0x2D4]);
  unsigned int v575 = LODWORD(STACK[0x3E0]) ^ 0x8AE6C4CF ^ LODWORD(STACK[0x2A0]);
  unsigned int v576 = v528 ^ 0xED8FD122;
  int v577 = STACK[0x368];
  int v578 = LODWORD(STACK[0x368]) ^ 0x7D0EEFC9 ^ LODWORD(STACK[0x290]);
  unsigned int v579 = v531 ^ 0xA7D2D027;
  int v580 = LODWORD(STACK[0x560]) ^ 0x299A2756 ^ LODWORD(STACK[0x2C0]);
  if (v540) {
    unsigned int v581 = v576;
  }
  else {
    unsigned int v581 = LODWORD(STACK[0x3E0]) ^ 0x8AE6C4CF ^ LODWORD(STACK[0x2A0]);
  }
  LODWORD(STACK[0x380]) = v581;
  if (v540) {
    unsigned int v582 = v531 ^ 0xA7D2D027;
  }
  else {
    unsigned int v582 = v576;
  }
  if (v540) {
    unsigned int v583 = v575;
  }
  else {
    unsigned int v583 = v580;
  }
  if (v540) {
    unsigned int v579 = v580;
  }
  LODWORD(STACK[0x328]) = v538;
  LODWORD(STACK[0x2A0]) = v561;
  if (v540) {
    unsigned int v584 = v561;
  }
  else {
    unsigned int v584 = v562;
  }
  LODWORD(STACK[0x3C4]) = v584;
  LODWORD(STACK[0x28C]) = v538 ^ 0xC909F954;
  if ((v540 & 1) == 0) {
    unsigned int v562 = v538 ^ 0xC909F954;
  }
  LODWORD(STACK[0x24C]) = v562;
  if (v540) {
    unsigned int v585 = v568;
  }
  else {
    unsigned int v585 = v567;
  }
  LODWORD(STACK[0x480]) = v585;
  LODWORD(STACK[0x270]) = v570;
  if (v540) {
    unsigned int v586 = v570;
  }
  else {
    unsigned int v586 = v568;
  }
  LODWORD(STACK[0x278]) = v569;
  if (v540) {
    unsigned int v587 = v567;
  }
  else {
    unsigned int v587 = v569;
  }
  LODWORD(STACK[0x26C]) = v574;
  LODWORD(STACK[0x250]) = v578;
  if (v540) {
    int v588 = v578;
  }
  else {
    int v588 = v574;
  }
  LODWORD(STACK[0x378]) = v588;
  LODWORD(STACK[0x4C0]) = v540;
  if ((v540 & 2) != 0) {
    unsigned int v589 = v586;
  }
  else {
    unsigned int v589 = v587;
  }
  LODWORD(STACK[0x2D4]) = v589;
  if ((v540 & 2) != 0) {
    unsigned int v586 = v587;
  }
  LODWORD(STACK[0x2C0]) = v586;
  LODWORD(STACK[0x248]) = v577 ^ 0x1C6B3216 ^ LODWORD(STACK[0x2AC]);
  LODWORD(STACK[0x240]) = (LODWORD(STACK[0x294]) + 285439082) ^ 0x9FA3CDC5;
  LODWORD(STACK[0x3E0]) = v557;
  LODWORD(STACK[0x468]) = v553;
  LODWORD(STACK[0x2AC]) = v553 ^ 0xE261BBA5;
  LODWORD(STACK[0x428]) = v548;
  LODWORD(STACK[0x290]) = v548 ^ 0x3C3F28A6;
  unsigned int v590 = (((v557 ^ 0x664AFA76) - ((2 * (v557 ^ 0x664AFA76) - 1059470582) & 0x92E897DE) + 702623092) ^ 0xDDD1284F)
       + (v548 ^ 0x3C3F28A6);
  LODWORD(STACK[0x340]) = v551;
  unsigned int v591 = ((v590 - ((2 * v590) & 0x6DE8979C) - 1225503794) ^ 0x6D9675D8) + (v554 ^ 0xE261BBA5);
  LODWORD(STACK[0x410]) = v552;
  LODWORD(STACK[0x350]) = v555;
  unsigned int v592 = (v591 ^ 0x6DFBEA7B) - 1845226107 + ((2 * v591) & 0xDBF7D4F6);
  LODWORD(STACK[0x368]) = v554;
  unsigned int v593 = (LODWORD(STACK[0x470]) ^ 0x52C7BAA7)
       + (v554 ^ 0x6C848DDD ^ ((v553 ^ 0xE261BBA5) - ((2 * (v553 ^ 0xE261BBA5) + 400437652) & 0x1DCA6CF0) - 1428926654))
       + 1;
  int v594 = 2 * (((2 * v593) & 0x77BF7FFA) + (v593 ^ 0x7BDFBFFD)) + 138444806;
  int v595 = ((2 * v594) & 0x25FFFBD4)
       + (v594 ^ 0x12FFFDEB)
       - ((2 * (((2 * v594) & 0x25FFFBD4) + (v594 ^ 0x12FFFDEB)) + 465397550) & 0x299A80EC)
       + 44823565;
  unsigned int v596 = ((v555 ^ v552 ^ ((v551 ^ 0x3238999B) - ((2 * (v551 ^ 0x3238999B) + 99801830) & 0x8CA74958) - 917695969)) >> 1) ^ 0x77F97B6A;
  int v597 = ((v592 >> 1) ^ 0x2F72F5BB)
       + (v592 & 0x5EE5EB76)
       - 2
       * ((((v592 >> 1) ^ 0x2F72F5BB) + (v592 & 0x5EE5EB76) + 407258144) & 0x1F49AD2F ^ (((v592 >> 1) ^ 0x2F72F5BB)
                                                                                       + (v592 & 0x5EE5EB76)) & 7)
       + 932180296;
  int v598 = (void *)STACK[0xA18];
  int v599 = 1980530059
       - (*(void *)(STACK[0xA18]
                    + 8
                    * ((*(void *)(STACK[0xA18]
                                  + 8 * (*(void *)(STACK[0xA18] + 8 * ((*(_DWORD *)STACK[0xA18] & 1) == 0)) & 1)) & 1) == 0)) & 1);
  unsigned int v600 = (v599 ^ 0x49FBC254) - 1021761605 + ((2 * v599) & 0x6C087B3E ^ 0x6C087B16);
  int v601 = STACK[0x358];
  int v602 = STACK[0x298];
  LODWORD(STACK[0x288]) = (2 * LODWORD(STACK[0x298])) & 0x18AE1F0A;
  LODWORD(STACK[0x284]) = v602 + 207032197;
  LODWORD(STACK[0x264]) = LODWORD(STACK[0x2CC]) ^ v541;
  LODWORD(STACK[0x23C]) = LODWORD(STACK[0x280]) ^ v559;
  LODWORD(STACK[0x3BC]) = v595;
  LODWORD(STACK[0x4F8]) = v596 - ((2 * v596 + 1015697154) & 0xF3980564) + 403778099;
  LODWORD(STACK[0x560]) = v597;
  LODWORD(STACK[0x298]) = v571;
  LODWORD(STACK[0x294]) = v572;
  if ((v540 & 2) != 0) {
    unsigned int v603 = v572;
  }
  else {
    unsigned int v603 = v571;
  }
  LODWORD(STACK[0x2CC]) = v603;
  LODWORD(STACK[0x260]) = v579;
  unsigned int v604 = STACK[0x380];
  if ((v540 & 2) == 0) {
    unsigned int v604 = v579;
  }
  LODWORD(STACK[0x27C]) = v604;
  LODWORD(STACK[0x268]) = v582;
  LODWORD(STACK[0x258]) = v583;
  if ((v540 & 2) != 0) {
    unsigned int v605 = v583;
  }
  else {
    unsigned int v605 = v582;
  }
  LODWORD(STACK[0x280]) = v605;
  BOOL v606 = v600 < 0x310E79A;
  *(void *)STACK[0xA30] = *v598 ^ 0x9696969696969696;
  if (v600 >= 0x310E79A) {
    BOOL v606 = v600 > 0x310E79B;
  }
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((51 * !v606) ^ v601)))();
}

void sub_1001B3A30()
{
}

uint64_t sub_1001B3A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8
                                   * (((((((2 * v4) ^ 0x832) - 1840) | 0x518) ^ 0x558) * (STACK[0x768] == 0)) ^ v4)))();
}

uint64_t sub_1001B3A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x84C]) = v5;
  return (*(uint64_t (**)(void))(a4
                              + 8 * (((STACK[0x678] == 0) * (((v4 - 558) | 0x1B) + ((v4 - 714) | 0x320) - 3297)) ^ v4)))();
}

uint64_t sub_1001B3AC8@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unint64_t v2 = STACK[0x600];
  unint64_t v3 = STACK[0x600] + 16;
  BOOL v5 = STACK[0x600] < (unint64_t)&unk_10021F920 && v3 > (unint64_t)&unk_10021F910;
  if (v2 < (unint64_t)&unk_10021F9B0 && v3 > (unint64_t)&unk_10021F9A0) {
    BOOL v5 = 1;
  }
  if (v2 < (unint64_t)&unk_100223AD0 && v3 > (unint64_t)&unk_100223AC0) {
    BOOL v5 = 1;
  }
  int v9 = v2 < (unint64_t)&unk_100223740 && v3 > (unint64_t)&unk_100223730 || v5;
  return (*(uint64_t (**)(void))(a1 + 8 * ((v9 * (((a2 - 722715972) & 0x2B13C63F) - 1524)) ^ a2)))();
}

uint64_t sub_1001B3B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *int v7 = veorq_s8(*v7, (int8x16_t)xmmword_10021F860);
  unint64_t v9 = STACK[0x820];
  *(void *)(v9 + 64) = 0xDED30A4024145F56;
  *(void *)(v9 + 72) = 0x1482B5319C0A3DB9;
  *(void *)(v9 + 80) = 0xEB7D4ACE63F5C246;
  *(_DWORD *)(v9 + 96) = -932955627;
  *(_DWORD *)(v9 + 92) = 1804694432;
  STACK[0x888] = *(void *)(a4 + 24 * (v8 ^ 0x628));
  return sub_1001F4544(a1, a2, a3, a4, a5, a6, a7, 1888467959);
}

uint64_t sub_1001B3C10@<X0>(unint64_t a1@<X8>)
{
  int v6 = (v2 - 479) | 0x410;
  BOOL v7 = v1 < a1;
  *(unsigned char *)(STACK[0x6B8] - 0x58405A597B241F58) = *v3 ^ *(unsigned char *)STACK[0x5A8] ^ *(unsigned char *)(v4 + 1) ^ *(unsigned char *)(v5 + 1);
  if (v7 == a1 > 0xD3FEEFE9) {
    BOOL v7 = v1 > 0xD3FEEFE9;
  }
  return ((uint64_t (*)(unint64_t, uint64_t, unint64_t, uint64_t, unint64_t))*(&off_10026D1A0 + ((51 * v7) ^ v6)))(0x95B79991C92078D1, 4294967193, 0xA84B5B97106DEECALL, 1961, 0xEFB5148194DE5178);
}

void sub_1001B3D24()
{
}

uint64_t sub_1001B3D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = STACK[0x600];
  STACK[0xA08] = v5;
  return (*(uint64_t (**)(void))(a4 + 8 * ((114 * (((v6 == 0) ^ (5 * (v4 ^ 0xD3))) & 1)) ^ v4)))();
}

uint64_t sub_1001B3D7C@<X0>(__int16 a1@<W7>, unsigned __int8 *a2@<X8>)
{
  unsigned int v4 = (v2 + 1773459653) & 0x964B268D;
  LODWORD(STACK[0x568]) = v4;
  unsigned __int8 v5 = byte_100238030[a2[9] ^ 0xF3];
  char v6 = 32 * v5;
  char v7 = (v6 & 0x40 ^ 0xE9) + 2 * (v6 & 0x40);
  char v8 = v4 + v7 - 46;
  char v9 = (v7 + 23) & ~v5;
  char v10 = 49 - v7;
  if ((v9 & 0xC0) != 0) {
    char v11 = v10;
  }
  else {
    char v11 = v8;
  }
  unint64_t v12 = byte_10024A990[a2[3] ^ 0xAELL];
  STACK[0x560] = v12;
  STACK[0x570] = v3;
  int v13 = *a2;
  HIDWORD(v14) = ((v13 ^ 1) + 2) ^ 2;
  LODWORD(v14) = ((v13 ^ 0x99) + 1642155452 - ((2 * (v13 ^ 0x99)) & 0xFFFFFF7F) + 3) ^ 0x61E14DBC;
  int v15 = (v14 >> 2) - ((2 * (v14 >> 2)) & 0x92261702);
  LOBYTE(v13) = (v13 ^ 0xE)
              + ((31 - ((2 * v13) ^ 0x32)) & 0x2E ^ 0xF1)
              + ((2 * ((31 - ((2 * v13) ^ 0x32)) & 0x2E)) ^ 0x1C)
              + 1;
  HIDWORD(v14) = (v15 - 1995240575) ^ 0x227406B5;
  LODWORD(v14) = -1225984898 - v15;
  int v16 = byte_10023B060[((v14 >> 30) - ((2 * (v14 >> 30)) & 0x69BAD64) - 2092050766) ^ 0x2ED1E287] ^ (v13 - ((2 * v13) & 0xE0) - 16) ^ 0x15;
  unsigned int v17 = (((v16 - ((2 * v16) & 0x88888888)) << 24) + 1140850688) ^ 0x44000000;
  LODWORD(v12) = (v17 - ((2 * v17) & 0x1A000000) - 1922976028) ^ 0x8D61B6E4 | ((v12 ^ 0x37)
                                                                             - ((2 * (v12 ^ 0x37)) & 0xD8)
                                                                             + 865305964) ^ 0x3393856C;
  int v18 = byte_1002239C0[a2[2] ^ 0x4CLL];
  int v19 = (105 * v18 - ((82 * v18 + 58) & 0x6C) + 19) ^ 0x2F;
  unsigned int v20 = (((v19 - ((2 * v19) & 0xC)) << 8) - 1079900672) ^ 0xBFA20600;
  int v21 = byte_100238030[a2[1] ^ 0xA5];
  int v22 = (32 * v21 - ((v21 & 1) << 6) + 38) ^ v21;
  LODWORD(STACK[0x558]) = v22;
  int v23 = ((((v22 ^ 6) - ((2 * (v22 ^ 6)) & 0x136)) << 16) + 647692288) ^ 0x269B0000;
  LODWORD(v12) = (v12 - ((2 * v12) & 0xD51ACBBC) - 359832098) ^ 0xEA8D65DE | (v20 - ((2 * v20) & 0x18764E00) - 868538524) ^ 0xCC3B2764;
  LODWORD(v12) = (v12 - ((2 * v12) & 0xBFDE3D7C) - 537977154) ^ 0xDFEF1EBE | (v23 - ((2 * v23) & 0x30F80000) + 410790180) ^ 0x187C2924;
  unsigned int v24 = v12 - ((2 * v12) & 0x5E276A2E) + 789820695;
  int v25 = ((v24 >> 8) & 0x3A ^ 0x484D6103) + ((v24 >> 8) & 0xC5) - 1;
  unsigned int v26 = ((v25 ^ 0xA80) & 0x3FF ^ 0xB71DB444)
      + ((v25 ^ 0xA80) & 0x3FF ^ 0x88B10B3A)
      + ((2 * ((v25 ^ 0xA80) & 0x3FF)) ^ 0xFFFFE98B)
      + ((2 * (v25 ^ 0xA80)) & 0x6FC ^ 0x1674);
  unsigned __int8 v27 = ((v5 ^ 0xEC) + v11 - 72 - ((2 * ((v5 ^ 0xEC) + v11 - 72)) & 0x5C) - 82) ^ (((2 * (v6 & 0xBF ^ 0xB9)) | 0x82)
                                                                                 - (v6 & 0xBF ^ 0xB9)
                                                                                 + 63);
  LOWORD(v20) = byte_1002239C0[a2[10] ^ 0xCCLL];
  LOWORD(v20) = ((~(82 * v20 + 58) | 0x87) + 105 * v20 - 102) ^ 0x85;
  LOWORD(v20) = (((v20 - ((2 * (_WORD)v20) & 0x7A)) << 8) + 15616) ^ 0x3D00;
  LOWORD(v12) = (v20 - ((2 * v20) & 0x5200) - 22151) ^ 0xA979;
  uint64_t v28 = a2[8];
  uint64_t v29 = byte_10024A990[a2[7] ^ 0x56];
  uint64_t v30 = byte_10024A990[a2[15] ^ 0x2BLL];
  __int16 v31 = byte_10024A990[a2[11] ^ 0xA1] ^ 0x37;
  __int16 v32 = (v31 - (a1 & (2 * v31)) + 7737) ^ 0x1E39;
  LOWORD(v12) = (v32 - ((2 * v32) & 0x20C) - 26362) ^ 0x9906 | (v12 - ((2 * v12) & 0xBB18) + 23948) ^ 0x5D8C;
  int v33 = byte_1002239C0[a2[14] ^ 0x8BLL];
  __int16 v34 = v12 - ((2 * v12) & 0x40DE) - 24465;
  LODWORD(v12) = ((~(82 * v33 + 58) | 0x9B) + 105 * v33 + 16) ^ 0xB6;
  LODWORD(v12) = (((v12 - ((2 * v12) & 0x10E)) << 8) + 724862720) ^ 0x2B348700;
  LODWORD(v12) = (v12 - ((2 * v12) & 0x5C5E0800) + 774833375) ^ 0x2E2F04DF | ((v30 ^ 0x37)
                                                                            - ((2 * (v30 ^ 0x37)) & 0xFFFFFF8F)
                                                                            + 197462983) ^ 0xBC50BC7;
  int v35 = ((a2[12] ^ 0x49) + (~(2 * (a2[12] ^ 0x49) + 46) | 0x6D) + 97) ^ byte_10023B060[a2[12] ^ 0xAELL];
  int v36 = ((((v35 ^ 0x1D) - ((2 * (v35 ^ 0x1D)) & 0x6E)) << 24) + 922746880) ^ 0x37000000;
  int v37 = byte_100238030[a2[13] ^ 0x2FLL];
  unsigned int v38 = (((2 * v37) ^ 0x50) - ((2 * ((2 * v37) ^ 0x50)) & 0xFFFFFFA4) + 82) & 0xFFFFFF88;
  unsigned int v39 = (((v37 ^ 0xFFFFFFA8) + 68) ^ 0x7F) + 2 * ((v37 ^ 0xFFFFFFA8) + 68);
  int v40 = (-32 * v39 - 62) ^ 0xBF ^ (v39 - v38 - 127 - ((2 * (v39 - v38 - 127)) & 0xCE) + 103);
  unsigned int v41 = (((v40 - ((2 * v40) & 0x1C0)) << 16) - 1327497216) ^ 0xB0E00000;
  int v42 = (v41 - ((2 * v41) & 0x2B240000) + 361945438) ^ 0x1592D95E | (v36 - ((2 * v36) & 0x68000000) + 879746769) ^ 0x346FDED1;
  LODWORD(v12) = (v42 - ((2 * v42) & 0x3024CB34) + 403858842) ^ 0x1812659A | (v12 - ((2 * v12) & 0x36192318) + 1527550348) ^ 0x5B0C918C;
  int v43 = (2 * v12) & 0xD9859710;
  LODWORD(v12) = v12 - 322778232;
  LODWORD(STACK[0x550]) = v12;
  int v44 = v12 - v43;
  LODWORD(v12) = ((((v44 ^ 0x8C4A7C47) >> (v34 & 0x10 ^ 0x10))
                 - ((2 * ((v44 ^ 0x8C4A7C47) >> (v34 & 0x10 ^ 0x10))) & 0xD1247B5C)
                 - 393069138) ^ 0xE8923DAE) >> (v34 & 0x10);
  LODWORD(v12) = (v12 - ((2 * v12) & 0x6A) - 75) ^ 0x60B0D5;
  unsigned __int8 v45 = byte_10023B060[v28 ^ 4] ^ ((v28 ^ 0xE3) - ((2 * (v28 ^ 0xE3) + 46) & 0xA4) + 105);
  int v46 = dword_10023CBC0[((v12 | 0xF09F1DC7) - (v12 | 0xF60E238) + 258007608) ^ 0xF0FFADBF];
  unsigned int v47 = ((32 * v46) ^ 0x6B1C9380) - ((2 * ((32 * v46) ^ 0x6B1C9380)) & 0x8114C680) + 1082811207;
  unsigned int v48 = v26 + 1879321235;
  if (((v26 - 1070514045) & 0xCC591789) != ((2 * (v26 - 1070514045)) & 0x10300C02)) {
    unsigned int v48 = -274617971 - v26;
  }
  int v49 = dword_10023BAE0[v29 ^ 0xCA];
  HIDWORD(v50) = v49 ^ 0x91;
  LODWORD(v50) = v49 ^ 0x2E359800;
  unsigned int v51 = dword_1002473C0[v45 ^ 0xA1] ^ v46 ^ v47 ^ ((v50 >> 8) - ((2 * (v50 >> 8)) & 0x9D036CDA) + 1317123693) ^ dword_100240030[v25 ^ 0x8E5AFB75 ^ (v48 - ((2 * v48 + 420240114) & 0x149D1A6C) + 651475631)];
  unsigned int v52 = v25 ^ v51;
  unsigned int v53 = (((v25 ^ LOBYTE(dword_1002473C0[v45 ^ 0xA1]) ^ v46 ^ v47 ^ (BYTE1(v50)
                                                                                   - ((2 * BYTE1(v50)) & 0xDA)
                                                                                   + 109) ^ LOBYTE(dword_100240030[v25 ^ 0x8E5AFB75 ^ (v48 - ((2 * v48 + 420240114) & 0x149D1A6C) + 651475631)])) ^ 0x76FBFF95)
       - 1996226495
       + ((2 * (v25 ^ v51 ^ 0x947F1A0D)) & 0x17E ^ 0x4E))
      % 0x62;
  int v54 = byte_10023B060[a2[4] ^ 0x5BLL] ^ 0xC1 ^ ((a2[4] ^ 0xBC)
                                                                + (~(2 * (a2[4] ^ 0xBC) + 46) | 0x4D)
                                                                + 113);
  int v55 = ((v54 - ((2 * v54) & 0x42)) << 24) + 553648128;
  int v56 = ((v55 ^ 0x21000000) - ((2 * v55) & 0x18000000) - 1939955474) ^ 0x8C5EA0EE | ((v29 ^ 0x37)
                                                                                   - ((2 * (v29 ^ 0x37)) & 0x20)
                                                                                   - 1816148464) ^ 0x93BFC610;
  int v57 = byte_1002239C0[a2[6] ^ 0xBBLL];
  int v58 = (105 * v57 - ((-46 * v57 - 70) & 0xA6) - 80) ^ 0x9D;
  unsigned int v59 = (((v58 - ((2 * v58) & 0x22)) << 8) - 607186688) ^ 0xDBCF1100;
  int v60 = byte_100238030[a2[5] ^ 0xF0];
  unsigned int v61 = ((~(v60 << 6) | 0xFFFFFFBF) + 32 * v60 + 35) ^ v60;
  unsigned int v62 = ((((v61 ^ 0xE2) - ((2 * (v61 ^ 0xE2)) & 0x16A)) << 16) - 290127872) ^ 0xEEB50000;
  unsigned int v63 = (v62 - ((2 * v62) & 0x13BC0000) + 165553529) ^ 0x9DE2579 | (v59 - ((2 * v59) & 0xBC6C000) - 974954428) ^ 0xC5E36044;
  unsigned int v64 = (v63 - ((2 * v63) & 0x1F339C28) - 812003820) ^ 0xCF99CE14 | (v56 - ((2 * v56) & 0x40041698) + 537004876) ^ 0x20020B4C;
  unsigned int v65 = v64 - ((2 * v64) & 0x9865B004) + 1278400514;
  unsigned int v66 = HIBYTE(v24);
  unsigned int v67 = HIBYTE(v24) & 0xA4 ^ 0x8C4DF6E4 ^ ((((HIBYTE(v24) & 0xA4 ^ 0xDE03F2F9) - 1) & 0xA0 ^ 0xD66C1 | ((HIBYTE(v24) & 0xA4 ^ 0xDE03F2F9) - 1) & 4)
                                         - 1) | HIBYTE(v24) & 0x5B ^ 0x57BF2467 ^ (((2
                                                                                   * (HIBYTE(v24) & 0x5B ^ 0x62413B2A)) | 0x6ADE2A28)
                                                                                 - (HIBYTE(v24) & 0x5B ^ 0x62413B2A)
                                                                                 - 896472340);
  int v68 = dword_10023CBC0[v61 ^ 0x93];
  unsigned int v69 = (HIBYTE(v34) ^ 0xBF | 0xC4B11377) - (HIBYTE(v34) ^ 0xBF | 0x3B4EEC88) + 995028104;
  int v70 = ((v69 & 0x4480014F ^ 0x1606880E) + (v69 ^ 0x49B057F1) - ((v69 ^ 0x49B057F1) & 0x5686894F)) ^ 0x247832F0;
  unsigned int v71 = (HIBYTE(v34) ^ 0x9E | 0x5AA41FF2) - (HIBYTE(v34) ^ 0x9E | 0xA55BE00D) - 1520705523;
  int v72 = dword_10023BAE0[v30 ^ 0x4B];
  HIDWORD(v50) = v72 ^ 0x91;
  LODWORD(v50) = v72 ^ 0x2E359800;
  int v73 = v68 ^ dword_1002473C0[v66 ^ 0x23] ^ (((32 * v68) ^ 0x6B1C9380)
                                           - ((2 * ((32 * v68) ^ 0x6B1C9380)) & 0x5B4F5A40)
                                           + 765963581) ^ ((v50 >> 8) - ((2 * (v50 >> 8)) & 0xB1734C8C) + 1488561734) ^ dword_100240030[(v71 ^ ((v71 ^ 0xA55BE09A) - ((2 * (v71 ^ 0xA55BE09A) + 2) & 0x1AD868F0) - 1922288519) ^ 0xC3E6F823 ^ (v70 - ((2 * v70 + 226) & 0x285DA67C) + 338613167)) + 112] ^ (v67 - ((2 * v67) & 0x6064E45C) + 808612398);
  int v74 = dword_10023CBC0[v27 ^ 0xE6];
  int v75 = BYTE1(v44);
  unsigned int v76 = (BYTE1(v44) ^ 0x40081CEC | 0xFDE4BF57) - (BYTE1(v44) ^ 0x40081CEC | 0x21B40A8) + 35340456;
  int v77 = dword_10023BAE0[STACK[0x560] ^ 0xA1];
  HIDWORD(v50) = v77 ^ 0x91;
  LODWORD(v50) = v77 ^ 0x2E359800;
  unsigned int v78 = v74 ^ dword_1002473C0[HIBYTE(v65) ^ 0x95] ^ (((32 * v74) ^ 0x6B1C9380)
                                                   - ((2 * ((32 * v74) ^ 0x6B1C9380)) & 0x1031F280)
                                                   + 135854405) ^ ((v50 >> 8)
                                                                 - ((2 * (v50 >> 8)) & 0x77AECE36)
                                                                 + 1003972379) ^ v76 ^ dword_100240030[v75 ^ 0xC];
  int v79 = dword_10023CBC0[LODWORD(STACK[0x558]) ^ 0xAA];
  unsigned int v80 = ((v34 ^ 0xC5) - ((2 * (v34 ^ 0xC5)) & 0x156) - 1611241813) ^ 0x85E633AA;
  unsigned int v81 = (BYTE1(v65) ^ 0x5D | 0x50E9CB0E) - (BYTE1(v65) ^ 0x5D | 0xAF1634F1) - 1357499151;
  unsigned int v82 = ((BYTE1(v65) ^ 0xB8) + ((v65 >> 8) & 0xB7 ^ 0x97FAFE07) - ((BYTE1(v65) ^ 0xB8) & 0xB7)) ^ 0x97BEFBAF;
  int v83 = dword_10023BAE0[((v80 | 0xFEB6C469) - (v80 | 0x1493B96) + 21576598) ^ 0xE4A6914A];
  HIDWORD(v50) = v83 ^ 0x91;
  LODWORD(v50) = v83 ^ 0x2E359800;
  unsigned int v84 = dword_1002473C0[v35 ^ 0x50] ^ v79 ^ (((32 * v79) ^ 0x6B1C9380)
                                                            - ((2 * ((32 * v79) ^ 0x6B1C9380)) & 0xE20EF180)
                                                            - 251168547) ^ dword_100240030[(((2 * v82) | 0x76CB795C)
                                                                                          - v82
                                                                                          + 1150960466) ^ 0xBB21B9DD] ^ ((v81 & 0x50C14C14 ^ 0x47024C05) + (v81 & 0x2883EB) - 1) ^ ((v50 >> 8) - ((2 * (v50 >> 8)) & 0x636EDCBC) + 834104926);
  int v85 = ((BYTE2(v78) ^ 0x95) - ((2 * (BYTE2(v78) ^ 0x95)) & 0xEC) - 824050570) ^ 0x42EAFE74;
  int v86 = dword_10023CBC0[(((2 * v85) & 0x140E40) - v85 + 1022439647) ^ 0xB0FA32F2];
  int v87 = (BYTE1(v52) ^ 0xC8) + (((v52 >> 8) ^ 0xD9FBF5) & 0x33 ^ 0x202) - ((BYTE1(v52) ^ 0xC8) & 0x33333333);
  unsigned int v88 = ((BYTE1(v52) ^ 0xBB | 0xB6ED5C2A) - (BYTE1(v52) ^ 0xBB | 0x4912A3D5) + 1225958357) ^ 0xB4FE9E2E;
  unsigned int v89 = (((2 * v88) & 0x30B98C88) - v88 + 665008571) ^ 0x25B0FB1A;
  int v90 = dword_10023BAE0[((v84 ^ 0x130290)
                       - ((2 * (v84 ^ 0x130290)) & 0x405CC)
                       - 1096141850) ^ 0xBEB93101];
  HIDWORD(v50) = v90 ^ 0x91;
  LODWORD(v50) = v90 ^ 0x2E359800;
  unsigned int v91 = v73 ^ v71 ^ 0xA80CE5F3;
  unsigned int v92 = dword_1002473C0[((v73 ^ v71) >> 24) ^ 0x7C] ^ v86 ^ (((32 * v86) ^ 0x6B1C9380)
                                                           - ((2 * ((32 * v86) ^ 0x6B1C9380)) & 0xD3A78DC0)
                                                           + 1775486716) ^ ((v50 >> 8)
                                                                          - ((2 * (v50 >> 8)) & 0x5B84EC96)
                                                                          - 1379764661) ^ dword_100240030[v89];
  unsigned int v93 = ((((v84 ^ 0x28B38A) >> 8) & 0x8D ^ 0x7F86720C) + (((v84 ^ 0x28B38A) >> 8) & 0x72 ^ 0x41) - 1) ^ 0xFF86609F;
  int v94 = dword_10023CBC0[(((2 * (BYTE2(v51) ^ 0x3C)) & 0x178) - (BYTE2(v51) ^ 0x3C) + 579) ^ 0x2E0];
  unsigned int v95 = (v73 ^ ((HIBYTE(v34) ^ 0x9E | 0xF2) - (HIBYTE(v34) ^ 0x9E | 0xD) + 13)) ^ 0x2D;
  unsigned int v96 = ((((v84 ^ 0x28B38A) >> 16) & 0x72 ^ 0xE5C2823 | ((v84 ^ 0x28B38A) >> 16) & 0x8C) - 1) ^ 0x8E7021B0;
  unsigned int v97 = (((2 * v96) | 0x7C05088A) - v96 - 1040352325) ^ 0xBE2E8D6D | (((int)(v84 << 15) >> 31) + 1121465849) ^ 0x42D835F9;
  int v98 = dword_10023BAE0[v95];
  HIDWORD(v50) = v98 ^ 0x91;
  LODWORD(v50) = v98 ^ 0x2E359800;
  unsigned int v99 = dword_1002473C0[HIBYTE(v78) ^ 0x55] ^ dword_100240030[((v93 | 0xCFBC8172) - (v93 | 0x30437E8D) + 809729677) ^ 0x4FBC93E2] ^ v94 ^ ((v50 >> 8) - ((2 * (v50 >> 8)) & 0x588B4E30) - 1404721384) ^ ((((unsigned __int16)(v84 ^ 0xB38A) >> 8) ^ 9) - ((2 * (((unsigned __int16)(v84 ^ 0xB38A) >> 8) ^ 9)) & 0x3A) + 8733) ^ (((32 * v94) ^ 0xCF62A900) - ((2 * ((32 * v94) ^ 0xCF62A900)) & 0xCFB6D40) + 108902067);
  int v100 = dword_10023CBC0[(v97 + 1717714272 - ((2 * v97) & 0x4CC47AF0) + 24) ^ 0x66623D60];
  unsigned int v101 = v100 ^ ((v100 ^ 0xC984EAB7) - ((2 * (v100 ^ 0xC984EAB7) + 2) & 0xF0792572) - 130248006) ^ ((v100 ^ 0xCCA71B63)
                                                                                                  - ((2 * (v100 ^ 0xCCA71B63) + 172483498) & 0xE165AA9E)
                                                                                                  + 1977009956) ^ 0xBEF552BE;
  int v102 = v101 - ((2 * v101 + 172483496) & 0x5DF72A72) + 874481421;
  unsigned int v103 = HIBYTE(v51) ^ 0x97;
  unsigned int v104 = ((v91 >> 8) & 0x9B ^ 0xDB66E0F6) - ((v91 >> 8) & 0x64);
  unsigned int v105 = ((BYTE1(v91) ^ 0xFC | 0x84A1E046) - (BYTE1(v91) ^ 0xFC | 0x7B5E1FB9) + 2069766073) ^ 0x8C21E047;
  unsigned int v106 = (((((((v84 ^ 0x28B38A) << 6) ^ 0xAE8CD380)
           - ((2 * (((v84 ^ 0x28B38A) << 6) ^ 0xAE8CD380)) & 0x555F8B00)
           - 1431321179) & 0xC0000000 ^ 0x6F7F3000)
         - 33558528) & 0xC0000000 | (v84 >> 26)) ^ 0xC0000027;
  unsigned int v107 = v106 - ((2 * v106) & 0x8000000E) - 933267769;
  HIDWORD(v50) = v107 ^ 0x2678F391;
  LODWORD(v50) = v107;
  int v108 = dword_10023BAE0[v78 & 0xFD ^ 0x7E67A574 ^ (2120721715 - (v78 & 2))];
  int v109 = (v50 >> 30) - ((2 * (v50 >> 30)) & 0x251919F2);
  HIDWORD(v50) = v108 ^ 0x91;
  LODWORD(v50) = v108 ^ 0x2E359800;
  int v110 = v109 + 311201017;
  unsigned int v111 = dword_100240030[((v105 | 0xA3F18AD6) - (v105 | 0x5C0E7529) + 1544451369) ^ 0xAB718A02] ^ ((v50 >> 8)
                                                                                                 - ((2 * (v50 >> 8)) & 0x217D1A50)
                                                                                                 + 280923432) ^ dword_1002473C0[v103] ^ v104 ^ v102 ^ (((32 * v102) ^ 0xDF72A720) - ((2 * ((32 * v102) ^ 0xDF72A720)) & 0x30156800) + 403354631);
  unsigned int v112 = (BYTE2(v73) ^ 0x2E | 0x5EAAD6EC) - (BYTE2(v73) ^ 0x2E | 0xA1552913) - 1588254445;
  int v113 = dword_10023CBC0[((v112 & 0x50809692 ^ 0xA0500013) + (v112 & 0xE2A416D) - 1) ^ 0xFEFAD6AA];
  unsigned int v114 = v110 ^ 0xAA12998F;
  unsigned int v115 = ((BYTE1(v78) ^ 0xE1) + ((v78 >> 8) & 0xB1 ^ 0xC8E74B10) - ((BYTE1(v78) ^ 0xE1) & 0xB1)) ^ 0xFBD44BB2;
  unsigned int v116 = v53 ^ 0xAFEDBBDE;
  unsigned int v117 = v53 + (v52 ^ 0xF2CA6E2A);
  v53 *= 2;
  int v118 = ((v117 - v53) ^ 0xBF) + 2 * ((v117 - v53) & 0x3F) + 65;
  int v119 = (v53 & 0xBC) + v116 + ((2 * v118) & 0x1AC) + (v118 ^ 0x7BDFBFD6);
  unsigned int v120 = dword_10023BAE0[(v119 - 2 * ((v119 + 70419532) & 0x66686AE ^ v119 & 2) + 1519979256) ^ 0x8666861F];
  unsigned int v121 = ((v120 << 25) & 0xFC000000 ^ 0x20000000) + ((v120 << 24) ^ 0xEFDFDE97);
  int v122 = v113 ^ dword_100240030[(v115 - ((2 * v115) & 0x2400B6A) - 1994086987) ^ 0xBA17A501] ^ (((32 * v113) ^ 0x6B1C9380)
                                                                                              - ((2
                                                                                                * ((32 * v113) ^ 0x6B1C9380)) & 0x6EED4E40)
                                                                                              - 1216960720) ^ (((2 * (BYTE1(v78) ^ 0x51)) & 0x2A) - (BYTE1(v78) ^ 0x51) + 2341866) & 0x200FFF ^ dword_1002473C0[v114];
  unsigned int v123 = (((v121 - 2128600727) & 0xFF000000 | (v120 >> 8)) ^ 0x1AF0798)
       + v121
       + ((2 * ((v121 - 2128600727) & 0xFF000000 | (v120 >> 8))) & 0xFCFD9BFE ^ 0xFFA3F4CF);
  unsigned int v124 = (((v120 >> 8) ^ 0xFFD1CA67) + 2041765489 - ((2 * ((v120 >> 8) ^ 0xFFD1CA67) + 2) & 0xF365CE20) + 2208) ^ (v120 >> 8) ^ (v123 - ((2 * v123 - 12722476) & 0xBE4C5056) + 1589974933);
  HIDWORD(v50) = v122 ^ 0x9EC;
  LODWORD(v50) = v122 ^ 0x1AC71000;
  int v125 = (v50 >> 12) - ((2 * (v50 >> 12)) & 0x473BCC40) + 597550624;
  HIDWORD(v50) = v124 ^ 0xAA3;
  LODWORD(v50) = (((v124 ^ 0xA6BAFAA3) + v121 - 2128600727) ^ 0xBFEBFDDF)
               + 1075053089
               + ((2 * ((v124 ^ 0xA6BAFAA3) + v121 - 2128600727)) & 0x7FD7FBBE);
  int v126 = ((v50 >> 12) - ((2 * (v50 >> 12)) & 0x23605CA2) - 1850724783) ^ v125;
  HIDWORD(v50) = v126 ^ 0x9719D;
  LODWORD(v50) = v126 ^ 0x4FD00000;
  unsigned int v127 = (v50 >> 20) - ((2 * (v50 >> 20)) & 0x95655336) - 894260837;
  LOBYTE(v126) = (STACK[0x550] & 8 ^ 0xA) + 64;
  LOBYTE(v126) = (v126 & 0xA) + (v126 ^ 0x4A) + 76 - ((v126 ^ 0x4A) & 8) + 68;
  unsigned int v128 = ((((v127 ^ 0x245AA9C9) >> (v126 ^ 0x9A))
         - ((2 * ((v127 ^ 0x245AA9C9) >> (v126 ^ 0x9A))) & 0x8BE53394)
         - 973956662) ^ 0xC5F299CA) >> (v126 ^ 0x92);
  int v129 = dword_10023CBC0[BYTE2(v99) ^ 0xFC];
  int v130 = ((v50 >> 20) - ((2 * (v50 >> 20)) & 0x36) - 101) ^ 0x4804BC;
  int v131 = dword_10023BAE0[(v130 + (v127 & 0xE8 ^ 0xBBA0AA40) - (v130 & 0x4000E8)) ^ 0xBBA8AE2E];
  HIDWORD(v50) = v131 ^ 0x91;
  LODWORD(v50) = v131 ^ 0x2E359800;
  unsigned int v132 = dword_1002473C0[HIBYTE(v92) ^ 0x88] ^ v129 ^ (((32 * v129) ^ 0x6B1C9380)
                                                     + 924224033
                                                     + (~(2 * ((32 * v129) ^ 0x6B1C9380)) | 0x91D2EBBF)) ^ dword_100240030[(((2 * (BYTE1(v111) ^ 0xD8)) | 0xA2B730F6) - (BYTE1(v111) ^ 0xD8) + 782526341) ^ 0xD15B980E] ^ ((BYTE1(v111) ^ 0x88044159 | 0xCA6DC25F) - (BYTE1(v111) ^ 0x88044159 | 0x35923DA0) + 898776480) ^ ((v50 >> 8) - ((2 * (v50 >> 8)) & 0xA9F43AE2) - 721805967);
  int v133 = dword_10023CBC0[BYTE2(v111) ^ 0xFA];
  int v134 = (v128 - ((2 * v128) & 0x8C) - 58);
  int v135 = ((2 * (v134 ^ 0x2838164)) & 0x50100BA) - (v134 ^ 0x2838164) + 1007364514;
  unsigned __int8 v136 = BYTE1(v92) ^ BYTE1(v87);
  unsigned int v137 = (((2 * (v134 ^ 0x7C)) & 0xA2) - (v134 ^ 0x7C) - 1086559826) ^ 0x9D78E9A6;
  int v138 = dword_10023BAE0[(((v92 ^ v87) ^ 0xC952289)
                        - ((2 * ((v92 ^ v87) ^ 0xC952289)) & 0x92045A8)
                        + 349862868) ^ 0x184F596A];
  HIDWORD(v50) = v138 ^ 0x91;
  LODWORD(v50) = v138 ^ 0x2E359800;
  unsigned int v139 = dword_1002473C0[HIBYTE(v99) ^ 0xD6] ^ v133 ^ (((32 * v133) ^ 0x6B1C9380)
                                                     - ((2 * ((32 * v133) ^ 0x6B1C9380)) & 0x8363C540)
                                                     + 1102176931) ^ ((v50 >> 8)
                                                                    - ((2 * (v50 >> 8)) & 0xB757F2E0)
                                                                    + 1537997168) ^ v135 ^ dword_100240030[(((2 * v137) | 0x390EEEFA) - v137 + 1668843651) ^ 0xBEC3F7BF];
  unsigned int v140 = ((BYTE2(v127) ^ 0x7E) - ((2 * (BYTE2(v127) ^ 0x7E)) & 0x174) - 1832983878) ^ 0xB03FF0BA;
  int v141 = dword_10023CBC0[(v140 - ((2 * v140) & 0x40002614) - 1458539766) ^ 0x8B916136];
  int v142 = v141 ^ 0x367B1548;
  if ((v141 & 0x1000000) != 0) {
    int v143 = -16777216;
  }
  else {
    int v143 = 0x1000000;
  }
  int v144 = v143 + v142 - 2 * ((v143 + v142) & 0x70D853F ^ v142 & 0xB) + 118326580;
  int v145 = (((2 * (v136 ^ 0x38)) & 0x122) - (v136 ^ 0x38) + 1539369070) & 0x41000FFF;
  unsigned int v146 = ((v136 ^ 0x5C) - ((2 * (v136 ^ 0x5C)) & 0xFFFFFFC3) + 475741153) ^ 0x9B8BBDE8;
  int v147 = dword_10023BAE0[v99 ^ 0x7A];
  HIDWORD(v148) = v147 ^ 0x91;
  LODWORD(v148) = v147 ^ 0x2E359800;
  unsigned int v149 = dword_1002473C0[HIBYTE(v111) ^ 0xC0] ^ v145 ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0xA3ADAF9E) + 1373034447) ^ dword_100240030[(((2 * v146) | 0x91C89564) - v146 + 924562766) ^ 0x4F34CC91] ^ v144 ^ (((32 * v144) ^ 0x65CE9C00) - ((2 * ((32 * v144) ^ 0x65CE9C00)) & 0x8A8A4700) - 985324646);
  unsigned int v150 = ((BYTE2(v92) ^ 0x5F | 0x27BB7A1) - (BYTE2(v92) ^ 0x5F | 0xFD84485E) - 41662370) ^ 0x60BBDC35;
  int v151 = dword_10023CBC0[(v150 - ((2 * v150) & 0x4CE7248C) + 645108294) ^ 0x44B3F91A];
  unsigned int v152 = (BYTE1(v99) ^ 0x2E | 0xA8567AA5) - (BYTE1(v99) ^ 0x2E | 0x57A9855A) + 1470727514;
  int v153 = (((((v99 >> 8) & 0x34) + (BYTE1(v99) ^ 0xB7)) | 0x19148E00) - ((BYTE1(v99) ^ 0xB7) & 0x34)) ^ 0x90DDE37;
  int v154 = dword_10023BAE0[v111 ^ 0xE7];
  HIDWORD(v148) = v154 ^ 0x91;
  LODWORD(v148) = v154 ^ 0x2E359800;
  char v155 = ((((BYTE1(v148) - ((2 * BYTE1(v148)) & 0x66) + 51) | 0xEF) + 85) ^ 0xED) - 7;
  int v156 = dword_1002473C0[HIBYTE(v127) ^ 9] ^ v151 ^ dword_100240030[((v153 | 0xF54EAE0A) - (v153 | 0xAB151F5) + 179393013) ^ 0xE557FE76] ^ (((32 * v151) ^ 0x6B1C9380) - ((2 * ((32 * v151) ^ 0x6B1C9380)) & 0x9928C480) - 862690730) ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0x6BDB7866) - 1242710989) ^ ((v152 & 0xA8161890 ^ 0x3B90411) + (v152 & 0x40636F) - 1);
  unsigned int v157 = (v132 ^ (((((v127 >> 15) | 0xFFFFFFFD) - (HIWORD(v127) & 1) + 1014852301) ^ 0x145C6B41) + 235353976) ^ 0x38C0C9D5) >> (v155 ^ 0xB2);
  HIDWORD(v148) = v156 ^ 0x107;
  LODWORD(v148) = v156 ^ 0x7F071400;
  int v158 = (v148 >> 10) - ((2 * (v148 >> 10)) & 0xCC28864A) - 434879707;
  unsigned int v159 = ((v157 - ((2 * v157) & 0x2EF01A14) + 393743626) ^ 0x17780D0A) >> (v155 & 0x10);
  HIDWORD(v148) = v158 ^ 0x395CED;
  LODWORD(v148) = v158 ^ 0x20400000;
  unsigned int v160 = (v148 >> 22) - ((2 * (v148 >> 22)) & 0xAC5AA560) + 1445810864;
  int v161 = dword_10023CBC0[(((2 * (BYTE2(v139) ^ 0x2200003B)) | 0xCF6D553E) - (BYTE2(v139) ^ 0x2200003B) + 407459169) ^ 0xC5B6AA5C];
  int v162 = ((v148 >> 22) - ((2 * (v148 >> 22)) & 0x60) - 80) ^ 0x5F;
  unsigned int v163 = ((v162 | 0x79E4D473) - (v162 | 0x861B2B8C) - 2045039732) ^ 0xB9ECF6B4;
  unsigned int v164 = ((2 * (BYTE1(v149) ^ 0xA)) | 0xE3C51246) - (BYTE1(v149) ^ 0xA) + 236811997;
  unsigned int v165 = ((BYTE1(v149) ^ 0xF68FA124) - ((2 * (BYTE1(v149) ^ 0xF68FA124)) & 0x6C020076) + 1047594043) ^ 0xEDEFE2DB;
  int v166 = dword_10023BAE0[((v163 | 0xBACF222) - (v163 | 0xF4530DDD) - 195883555) ^ 0xCBA4D0CB];
  HIDWORD(v148) = v166 ^ 0x91;
  LODWORD(v148) = v166 ^ 0x2E359800;
  unsigned int v167 = dword_1002473C0[HIBYTE(v132) ^ 0x23] ^ v161 ^ (((32 * v161) ^ 0x6B1C9380)
                                                      - ((2 * ((32 * v161) ^ 0x6B1C9380)) & 0x31295280)
                                                      + 412395861) ^ dword_100240030[(((2 * v165) | 0x67CBB33C)
                                                                                    - v165
                                                                                    - 870701470) ^ 0x16F49E66] ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0xF68A367C) + 2068126526) ^ ((v164 & 0x416008A8 ^ 0x1392089) + (v164 & 0xB0828757) - 1);
  int v168 = ((BYTE2(v149) ^ 0x17) + (HIWORD(v149) & 0x9D ^ 0x35290888) - ((BYTE2(v149) ^ 0x17) & 0x9D)) ^ 0x352B10CC;
  int v169 = dword_10023CBC0[(v168 - ((2 * v168) & 0x43EF8) - 2036686980) ^ 0x8698879B];
  unsigned int v170 = (((2 * (BYTE1(v160) ^ 0x5B)) & 0x92) - (BYTE1(v160) ^ 0x5B) - 463976266) ^ 0xAD074877;
  int v171 = (BYTE1(v160) ^ 0xFD) - ((2 * (BYTE1(v160) ^ 0xFD)) & 0x1F4) + 915884794;
  int v172 = dword_10023BAE0[(((2 * (v132 ^ 0x1A00A4E4)) | 0x374C173C)
                        - (v132 ^ 0x1A00A4E4)
                        + 1683616866) ^ 0x81A6AF1F];
  HIDWORD(v148) = v172 ^ 0x91;
  LODWORD(v148) = v172 ^ 0x2E359800;
  unsigned int v173 = dword_1002473C0[HIBYTE(v139) ^ 0x31] ^ dword_100240030[((v171 & 0x2160271 ^ 0x281050)
                                                               + (v171 ^ 0xAE17C6AF)
                                                               - ((v171 ^ 0xAE17C6AF) & 0x10808A71)) ^ 0x8A3E1629] ^ v169 ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0x608852E4) + 809773426) ^ (((2 * v170) & 0x90101408) - v170 + 58172923) ^ (((32 * v169) ^ 0x6B1C9380) - ((2 * ((32 * v169) ^ 0x6B1C9380)) & 0x445F6000) + 573550617);
  unsigned int v174 = ((BYTE2(v160) ^ 0x88) + (HIWORD(v160) & 0xFB ^ 0x59E6BE73) - ((BYTE2(v160) ^ 0x88) & 0xFFFFFFFB)) ^ 0x3BFFBCDE;
  int v175 = dword_10023CBC0[(((2 * v174) | 0x256DF570) - v174 - 313981624) ^ 0x70AFF8C8];
  int v176 = (33 * (v175 ^ 0x3358E49C)) ^ 0x7DFFFF6B;
  unsigned int v177 = (66 * (v175 ^ 0x3358E49C)) & 0xFBFFFED6;
  unsigned int v178 = ((((v175 << 6) ^ 0xD6392700) - ((2 * ((v175 << 6) ^ 0xD6392700)) & 0x70597780) + 942455756) ^ 0x382CBBCC) & ((((2 * v175) ^ 0x66B1C938) - ((2 * ((2 * v175) ^ 0x66B1C938)) & 0x3409AA58) + 436524332) ^ 0x1A04D52C);
  int v179 = (((v132 >> 8) & 0x6F ^ 0x5DFA924F) + ((v132 >> 8) & 0x90 ^ 0x11) - 1) ^ 0x2FFCB26F;
  unsigned int v180 = v177 + v176 + (v178 ^ 0xA0448020) - ((2 * v178) & 0xBF76FFBE) + 1;
  unsigned int v181 = (v139 ^ 0x44 | 0x13F97163) - (v139 ^ 0x44 | 0xEC068E9C) - 335114596;
  int v182 = dword_10023BAE0[((v181 & 0x11C8030A ^ 0xC880E09) + (v181 & 0x23170F5 ^ 0xA2302060) - 1) ^ 0xBD415FB8];
  HIDWORD(v148) = v182 ^ 0x91;
  LODWORD(v148) = v182 ^ 0x2E359800;
  unsigned int v183 = dword_100240030[(((2 * v179) & 0x44004076) - v179 + 1501454276) ^ 0x2B787F74] ^ ((BYTE1(v132) ^ 0x15)
                                                                                        - ((2 * (BYTE1(v132) ^ 0x15)) & 0xCCCCCCCC)
                                                                                        + 614) ^ dword_1002473C0[HIBYTE(v149) ^ 0xB1] ^ ((v148 >> 8) - 1077153913 + (~(2 * (v148 >> 8)) | 0x806820F3)) ^ (v180 - ((2 * v180 - 1015611160) & 0x85913EE6) - 1534844953);
  unsigned int v184 = (((v159 - ((2 * v159) & 0xB6) + 347) & 0x47) + ((v159 - ((2 * v159) & 0xB6) + 347) & 0xB8 ^ 0xBB0F1309) - 1) ^ 0x9A17129B;
  int v185 = dword_10023CBC0[(((2 * v184) & 0x420007C0) - v184 + 1075649567) ^ 0x61051DCF];
  int v186 = v185 ^ dword_1002473C0[HIBYTE(v160) ^ 0x71] ^ (((32 * v185) ^ 0x6B1C9380)
                                                      - ((2 * ((32 * v185) ^ 0x6B1C9380)) & 0x2DBA8600)
                                                      - 1763884268);
  unsigned int v187 = v139 >> 8;
  int v188 = dword_100240030[(((v139 >> 8) & 0xC9) + ((v139 >> 8) & 0x36 ^ 0x221) - 1) ^ 0x2A8];
  unsigned int v189 = v188 ^ 0xB5E66342;
  unsigned int v190 = (v188 ^ 0xB5E66342) + (v188 ^ 0x5D566A88 ^ v186) + 1;
  int v191 = ((v149 & 0xA1) + 1317375 + (v149 & 0x5E ^ 0x72026011)) ^ 0x7E4E3C94;
  unsigned int v192 = (v186 ^ ((v186 ^ 0xE8B009CA) - ((2 * (v186 ^ 0xE8B009CA) + 2) & 0x2D79007C) + 381452351) ^ (v190 - ((2 * v190) & 0xE683BA36) + 1933696283) ^ 0x72B2AB10)
       + v189;
  int v193 = dword_10023BAE0[(((2 * v191) & 0x18200982) - v191 + 1097524030) ^ 0x4D32A598];
  HIDWORD(v148) = v193 ^ 0x91;
  LODWORD(v148) = v193 ^ 0x2E359800;
  int v194 = dword_10023CBC0[BYTE2(v173) ^ 0xD1];
  unsigned int v195 = (v192 - ((2 * v192) & 0x6E8AFB70) - 1220182600) ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0x7061C114) - 1204756342);
  unsigned int v196 = (BYTE1(v183) ^ 0xD8) + ((v183 >> 8) & 0xE4 ^ 0xB2DAF424) - ((BYTE1(v183) ^ 0xD8) & 0xE4);
  int v197 = dword_10023BAE0[(((v195 ^ v187) ^ 0x602060)
                        - ((2 * ((v195 ^ v187) ^ 0x602060)) & 0x400122)
                        - 491485295) ^ 0xE2D4A730];
  HIDWORD(v148) = v197 ^ 0x91;
  LODWORD(v148) = v197 ^ 0x2E359800;
  unsigned int v198 = v167 ^ 0xB4820147;
  unsigned int v199 = v194 ^ dword_1002473C0[HIBYTE(v167) ^ 0x22] ^ (((32 * v194) ^ 0x6B1C9380)
                                                      - ((2 * ((32 * v194) ^ 0x6B1C9380)) & 0xA0810B40)
                                                      + 1346405821) ^ dword_100240030[((v196 & 0xA010116C ^ 0x40040128)
                                                                                     + (v196 ^ 0xA4DB74C6)
                                                                                     - ((v196 ^ 0xA4DB74C6) & 0x1200016C)) ^ 0xE4159109] ^ ((BYTE1(v183) ^ 0x61AC0B6D) - ((2 * (BYTE1(v183) ^ 0x61AC0B6D)) & 0x3181140) - 2116278112) ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0x3BBA723A) + 501037341);
  unsigned int v200 = ((2 * (BYTE1(v195) ^ 0x48)) & 0xFFFFFF9F) - (BYTE1(v195) ^ 0x48) - 969747408;
  int v201 = dword_10023CBC0[((BYTE2(v183) ^ 0x28001FA) - ((2 * (BYTE2(v183) ^ 0x28001FA)) & 0x10002A6) - 1516615341) ^ 0xA71A4881];
  unsigned int v202 = ((BYTE1(v195) ^ 0xDFD7FF97) + 194178454 + ((2 * BYTE1(v195)) | 0xE8DA24D6)) ^ 0xD445121B;
  unsigned int v203 = (((2 * (v198 ^ 0x7F)) | 0x111FD88C) - (v198 ^ 0x7F) + 2003833786) ^ 0xF9DFE858;
  unsigned int v204 = dword_10023BAE0[(((2 * v203) | 0x391319D4) - v203 - 478776554) ^ 0x6DD98879];
  unsigned int v205 = ((v204 >> 8) & 0x8404 ^ 0xD2C43355) + ((v204 >> 8) & 0x12088B) - 1;
  unsigned int v206 = ((v204 >> 7) & 0x41114 ^ 0x115EC5F0)
       + ((v204 >> 8) & 0x128C8F ^ 0x77401D02)
       + ((((v204 >> 8) ^ 0x163CB917) + 1) ^ 0xDC7E7E79)
       + ((2 * (((v204 >> 8) ^ 0x163CB917) + 1)) & 0x28FCFCF2);
  unsigned int v207 = ((v205 & 0x823D41 ^ 0x220801) + (v205 ^ 0x93DCB7D6) - ((v205 ^ 0x93DCB7D6) & 0x10A0C01)) ^ 0xD2861671 ^ (v206 - ((2 * v206 + 161754394) & 0x246D5674) + 386449863);
  unsigned int v208 = ((v204 << 24) ^ 0x2A7FB7A7) + ((v204 << 25) & 0x77777777 ^ 0x22000000) + 1149257817 + v207;
  int v209 = v208 - 2 * (v208 & 0x3C6F513D ^ v207 & 1) - 1133555396;
  unsigned int v210 = HIBYTE(v195) ^ 0xBA;
  int v211 = dword_10023CBC0[BYTE2(v195) ^ 0xC9];
  unsigned int v212 = dword_1002473C0[HIBYTE(v173) ^ 0xB3] ^ v201 ^ (((32 * v201) ^ 0x6B1C9380)
                                                      - ((2 * ((32 * v201) ^ 0x6B1C9380)) & 0x446C9000)
                                                      - 1573500918) ^ dword_100240030[v202] ^ ((v200 & 0x11EC ^ 0x110009CC)
                                                                                             + (v200 ^ 0xE88DD430)
                                                                                             - ((v200 ^ 0xE88DD430) & 0x223201EC)) ^ v209;
  unsigned int v213 = ((v173 ^ 0xD) + (v173 & 0xAD ^ 0x144FE0A0) - ((v173 ^ 0xD) & 0xAD)) ^ 0xF004A095;
  int v214 = dword_10023BAE0[(v213 - ((2 * v213) & 0x8806D746) - 677123165) ^ 0x33E8ABB6];
  HIDWORD(v148) = v214 ^ 0x91;
  LODWORD(v148) = v214 ^ 0x2E359800;
  unsigned int v215 = dword_1002473C0[HIBYTE(v183) ^ 0xBE] ^ dword_100240030[BYTE1(v198) ^ 0x78] ^ ((BYTE1(v198) ^ 0x55)
                                                                                     - ((2 * (BYTE1(v198) ^ 0x55)) & 0x3A)
                                                                                     + 22045) & 0x43FF ^ v211 ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0xA36288F8) - 776911748) ^ (((32 * v211) ^ 0x6B1C9380) - ((2 * ((32 * v211) ^ 0x6B1C9380)) & 0xF93D4980) - 56711979);
  int v216 = dword_1002473C0[v210];
  int v217 = (v216 ^ 0x4D35AE42) + 1;
  v216 ^= 0x3E1BCB60u;
  int v218 = v216 + (v217 ^ 0x2FFFFFFF) + ((2 * v217) & 0x5FFFFFFE) - 805306367;
  int v219 = dword_10023CBC0[BYTE2(v198) ^ 0xD5];
  int v220 = ((v218 - ((2 * v218) & 0x830D397E) - 1048142657) ^ 0x3E796341) + v216;
  unsigned int v221 = BYTE1(v173) ^ 0xCDDFEF84;
  int v222 = (2 * BYTE1(v173)) ^ 0xF6;
  v173 >>= 8;
  int v223 = ((2 * v173) ^ 0x167A2F6) - ((2 * ((2 * v173) ^ 0x167A2F6)) & 0x5C) + 431;
  unsigned int v224 = v221 + v222 + (v223 & 0xE0 ^ 0x82C8021) + ((2 * v223) & 0xC0 ^ 0xFFFFFFBF) + 703827953;
  int v225 = dword_10023BAE0[v183 ^ 0xA6];
  HIDWORD(v148) = v225 ^ 0x91;
  LODWORD(v148) = v225 ^ 0x2E359800;
  unsigned int v226 = dword_100240030[v224] ^ v219 ^ (((32 * v219) ^ 0x6B1C9380)
                                       - ((2 * ((32 * v219) ^ 0x6B1C9380)) & 0xE4210940)
                                       - 233798493) ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0xED3EC150) + 1990156456) ^ (v220 - ((2 * v220) & 0x15E1FDE2) - 1963917583);
  int v227 = dword_10023CBC0[BYTE2(v212) ^ 0xB2];
  unsigned int v228 = ((BYTE1(v215) ^ 0x2C | 0x2BDE0994) - (BYTE1(v215) ^ 0x2C | 0xD421F66B) - 735971733) ^ 0xBEDE5914;
  unsigned int v229 = ((v173 ^ 0xA ^ v226 ^ 0xE)
        + ((v173 ^ 0xA ^ v226) & 0x38 ^ 0x87E02D30)
        - ((v173 ^ 0xA ^ v226 ^ 0xE) & 0x38)) ^ 0xA1C14D6B;
  int v230 = dword_10023BAE0[((v229 | 0xB1C29E39) - (v229 | 0x4E3D61C6) + 1312645574) ^ 0x97E3FE8B];
  HIDWORD(v148) = v230 ^ 0x91;
  LODWORD(v148) = v230 ^ 0x2E359800;
  unsigned int v231 = dword_1002473C0[HIBYTE(v199) ^ 0x5B] ^ v227 ^ dword_100240030[(v228 - ((2 * v228) & 0x8C2D9C9E) + 1175899727) ^ 0xD3169E43] ^ (((32 * v227) ^ 0x6B1C9380) - ((2 * ((32 * v227) ^ 0x6B1C9380)) & 0x60C06E00) - 1335871737) ^ ((BYTE1(v215) ^ 0xD7D1C82C) + ((v215 >> 8) & 0x7E ^ 0x28083652) - ((BYTE1(v215) ^ 0xD7D1C82C) & 0x93C0087E)) ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0x871C8F58) + 1133397932);
  int v232 = dword_10023CBC0[BYTE2(v215) ^ 0x9F];
  unsigned int v233 = (((2 * (BYTE1(v226) ^ 0xE8)) & 0xFFFFFFE3) - (BYTE1(v226) ^ 0xE8) + 2100007182) ^ 0x799BBFA2;
  int v234 = dword_10023BAE0[v199 ^ 0x68];
  HIDWORD(v148) = v234 ^ 0x91;
  LODWORD(v148) = v234 ^ 0x2E359800;
  unsigned int v235 = dword_1002473C0[HIBYTE(v212) ^ 0x51] ^ v232 ^ (((32 * v232) ^ 0x6B1C9380)
                                                      - ((2 * ((32 * v232) ^ 0x6B1C9380)) & 0x65995340)
                                                      - 1295210050) ^ ((v148 >> 8)
                                                                     - ((2 * (v148 >> 8)) & 0xEF96D47C)
                                                                     + 2009819710) ^ (((2 * (BYTE1(v226) ^ 0x22)) | 0x3CF56A30)
                                                                                    - (BYTE1(v226) ^ 0x22)
                                                                                    + 1636125416) ^ dword_100240030[(v233 - ((2 * v233) & 0x9400908) - 320076668) ^ 0xE85C2AB4];
  int v236 = dword_10023CBC0[((BYTE2(v226) ^ 0xB64144E3) - ((2 * (BYTE2(v226) ^ 0xB64144E3)) & 0x4002093A) + 1611894685) ^ 0xD652CB16];
  unsigned int v237 = (((2 * (BYTE1(v199) ^ 0x3B)) | 0xAAB4B1EC) - (BYTE1(v199) ^ 0x3B) + 715499274) ^ 0x8540599E;
  unsigned int v238 = v236 ^ (((2 * (BYTE1(v199) ^ 0x703089F3)) | 0x9EAC5D94) - (BYTE1(v199) ^ 0x703089F3) - 1331048138) ^ dword_1002473C0[HIBYTE(v215) ^ 0xC0] ^ dword_100240030[((v237 | 0x3EF5F6C6) - (v237 | 0xC10A0939) - 1056306887) ^ 0x6EEFF736] ^ (((32 * v236) ^ 0x6B1C9380) - ((2 * ((32 * v236) ^ 0x6B1C9380)) & 0x51A29340) + 684804514);
  HIDWORD(v148) = v238 ^ 9;
  LODWORD(v148) = v238 ^ 0xBA265B00;
  int v239 = (v148 >> 6) - ((2 * (v148 >> 6)) & 0xA837DCDA);
  int v240 = dword_10023BAE0[v212 ^ 7];
  HIDWORD(v148) = v240 ^ 0x91;
  LODWORD(v148) = v240 ^ 0x2E359800;
  int v241 = (v148 >> 8) + 235352320 - ((2 * (v148 >> 8)) & 0x1C0E623E) + 31;
  HIDWORD(v148) = v241 ^ 0x1F;
  LODWORD(v148) = v241 ^ 0xE073100;
  v239 -= 736366995;
  int v242 = (v148 >> 6) - ((2 * (v148 >> 6)) & 0xB4BC2DB8) - 631367972;
  HIDWORD(v148) = v242 ^ 0x3EAC78C ^ v239;
  LODWORD(v148) = v242 ^ ~v239;
  unsigned int v243 = (v148 >> 26) - ((2 * (v148 >> 26)) & 0x6EA9D20) + 58019472;
  int v244 = dword_10023CBC0[(((2 * (BYTE2(v199) ^ 0xED)) | 0xACA06A94) - (BYTE2(v199) ^ 0xED) - 1448097098) ^ 0x5650351B];
  unsigned int v245 = ((v215 ^ 0xFFFFFFE3) + 700767140 + ((2 * v215) | 0xAC7648BA)) ^ 0x923A2D15;
  int v246 = (BYTE1(v212) ^ 0xCD) + ((v212 >> 8) & 0x6E ^ 0x2120D422) - ((BYTE1(v212) ^ 0xCD) & 0x6E);
  int v247 = dword_10023BAE0[(((2 * v245) | 0x7544511E) - v245 + 1163777905) ^ 0xFEA3213E];
  HIDWORD(v148) = v247 ^ 0x91;
  LODWORD(v148) = v247 ^ 0x2E359800;
  unsigned int v248 = v244 ^ dword_1002473C0[HIBYTE(v226) ^ 0x9F] ^ dword_100240030[(((((v212 >> 8) & 4) + (BYTE1(v212) ^ 0x7110015)) | 0xB8883E00)
                                                                      - ((BYTE1(v212) ^ 0x7110015) & 0x10004)) ^ 0xBF983E74] ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0xF1ECFEEE) + 2029420407) ^ ((v246 & 0x1004514 ^ 0x462D00) + (v246 ^ 0x9101C03E) - ((v246 ^ 0x9101C03E) & 0xA0010514)) ^ (((32 * v244) ^ 0x6B1C9380) - ((2 * ((32 * v244) ^ 0x6B1C9380)) & 0x1C287200) - 1911277302);
  int v249 = dword_10023CBC0[BYTE2(v231) ^ 0x13];
  unsigned int v250 = dword_1002473C0[HIBYTE(v248) ^ 0x7B] ^ v249 ^ (((32 * v249) ^ 0x6B1C9380)
                                                      - ((2 * ((32 * v249) ^ 0x6B1C9380)) & 0x9C38BD40)
                                                      - 837001566);
  unsigned int v251 = ((v250 ^ 0x602A931F) & 0xDDE3163B ^ 0xD9631628)
       + ((v250 ^ 0x602A931F) & 0xCDE01610 ^ 0x69C4014)
       - (((v250 ^ 0x602A931F) & 0xDDE3163B ^ 0xD9631628) & 0xCDE01610);
  unsigned int v252 = (((2 * ((v250 ^ 0x602A931F) & 0x22082904 ^ 0x22002004)) & 0x44101000)
        - ((v250 ^ 0x602A931F) & 0x22082904 ^ 0x22002004)
        - 1847233611) ^ 0x95C06B95;
  unsigned int v253 = (((2 * v252) & 0xE4232208) - v252 - 1934726934) ^ 0x888B78CA;
  int v254 = v253 | (((v250 ^ 0x602A931F) & 0x14C0C0 ^ 0x8080) - ((2 * v250) & 0x280080) + 20906855) & 0x1FDFFC0 ^ 0x139C340;
  unsigned int v255 = (v254 - 2 * (v254 & 0x5C952087 ^ v253 & 7) + 1553277056) ^ 0x5C952080 | ((v251 & 0xB3F468DB ^ 0x20C028CB)
                                                                                + (v251 ^ 0x9F3FD434)
                                                                                - ((v251 ^ 0x9F3FD434) & 0xB3E0E8DB)) ^ 0x37F46CCB;
  unsigned int v256 = ((2 * v243) & 0x10A) + (v243 ^ 0xFFFFFFA5) - 1759622533;
  int v257 = dword_10023BAE0[((v256 & 0x141A09AF ^ 0x6020218D) + (v256 & 0x250 ^ 0x800651) - 1) ^ 0x74BA2D1A];
  HIDWORD(v148) = v257 ^ 0x91;
  LODWORD(v148) = v257 ^ 0x2E359800;
  unsigned int v258 = dword_100240030[((BYTE1(v235) ^ 0xC1) - ((2 * (BYTE1(v235) ^ 0xC1)) & 0xE2) + 1871788913) ^ 0x6F913B9F] ^ ((BYTE1(v235) ^ 0x400D1817) - ((2 * (BYTE1(v235) ^ 0x400D1817)) & 0x8000208E) - 601706425) ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0x17084014) + 193208330) ^ (v255 - ((2 * v255) & 0x20ED6604) + 276214530);
  unsigned int v259 = (((LOBYTE(dword_100240030[((BYTE1(v235) ^ 0xC1)
                                                   - ((2 * (BYTE1(v235) ^ 0xC1)) & 0xE2)
                                                   + 1871788913) ^ 0x6F913B9F]) ^ ((BYTE1(v235) ^ 0x17)
                                                                                 - ((2 * (BYTE1(v235) ^ 0x17)) & 0x8E)
                                                                                 + 71) ^ (BYTE1(v148)
                                                                                        - ((2 * BYTE1(v148)) & 0x14)
                                                                                        + 10) ^ (v255
                                                                                               - ((2 * v255) & 4)
                                                                                               + 2)) ^ 0x57977F82)
        - 1469546430
        + ((2 * v258) & 0x17C ^ 0x78))
       % 0x72;
  int v260 = dword_10023CBC0[BYTE2(v235) ^ 0x5A];
  unsigned int v261 = ((BYTE1(v243) ^ 0x2E | 0xA3601F78) - (BYTE1(v243) ^ 0x2E | 0x5C9FE087) + 1553981575) ^ 0xA3041D62;
  unsigned int v262 = (((2 * (BYTE1(v243) ^ 0x8D)) & 0xE6) - (BYTE1(v243) ^ 0x8D) - 1131204212) ^ 0xB8B71984;
  int v263 = dword_10023BAE0[v248 ^ 0xCF];
  HIDWORD(v148) = v263 ^ 0x91;
  LODWORD(v148) = v263 ^ 0x2E359800;
  int v264 = v260 ^ dword_1002473C0[HIBYTE(v231) ^ 0xD0] ^ (((32 * v260) ^ 0x6B1C9380)
                                                      - ((2 * ((32 * v260) ^ 0x6B1C9380)) & 0x66F78380)
                                                      - 1283735099) ^ ((v148 >> 8)
                                                                     - ((2 * (v148 >> 8)) & 0xA47A9DEE)
                                                                     - 767734025) ^ ((v261 | 0x3D0DEAF8)
                                                                                   - (v261 | 0xC2F21507)
                                                                                   - 1024322297);
  int v265 = dword_10023CBC0[BYTE2(v243) ^ 0x19];
  int v266 = (((32 * v265) ^ 0x6B1C9380) - ((2 * ((32 * v265) ^ 0x6B1C9380)) & 0x3C4A23C0) - 1641737749) ^ v265;
  HIDWORD(v148) = v266 ^ 0x1973C29;
  LODWORD(v148) = v266 ^ 0x8A000000;
  unsigned int v267 = v264 ^ dword_100240030[(((2 * v262) & 0x84032D4) - v262 + 1078322837) ^ 0x4461CE11];
  int v268 = (v148 >> 25) - ((2 * (v148 >> 25)) & 0x86E1502C) - 1016027114;
  unsigned int v269 = ((v231 ^ 0x7D) - ((2 * (v231 ^ 0x7D)) & 0x14) - 72085238) ^ 0x91D674B5;
  unsigned int v270 = ((2 * (BYTE1(v248) ^ 0xF3)) | 0x80EEEED6) - (BYTE1(v248) ^ 0xF3) + 1065912469;
  HIDWORD(v148) = v268 ^ 5;
  LODWORD(v148) = v268 ^ 0xB6140700;
  unsigned int v271 = dword_10023BAE0[(v269 - ((2 * v269) & 0x9404D528) + 1326967444) ^ 0x25758FC4];
  unsigned int v272 = dword_100240030[((BYTE1(v248) ^ 0xCE) + ((v248 >> 8) & 0xC7 ^ 0x201) - ((BYTE1(v248) ^ 0xCE) & 0xFFFFFFC7)) ^ 0x252] ^ dword_1002473C0[HIBYTE(v235) ^ 9] ^ (((v271 << 24) ^ 0x91000000) - ((2 * ((v271 << 24) ^ 0x91000000)) & 0xEFFFFFFF) + 2008364344) ^ ((v270 & 0xC0714075 ^ 0x8C80014) + (v270 & 0x63F8A ^ 0x402338B) - 1) ^ ((v148 >> 7) - ((2 * (v148 >> 7)) & 0x4C9A84A6) - 1504886189);
  int v273 = dword_10023CBC0[((HIWORD(v248) & 0xA3 ^ 0x8406B302) + (HIWORD(v248) & 0x5C ^ 0x60084041) - 1) ^ 0xE40EF38C];
  int v274 = dword_10023BAE0[v235 ^ 0x45];
  HIDWORD(v148) = v274 ^ 0x91;
  LODWORD(v148) = v274 ^ 0x2E359800;
  unsigned int v275 = v273 ^ ((BYTE1(v231) ^ 0x8200A3E) + ((v231 >> 8) & 0xC3 ^ 0x230981C1) - ((BYTE1(v231) ^ 0x8200A3E) & 0xC3)) ^ dword_100240030[((BYTE1(v231) ^ 0xFFFFFFBA) + 1687710252 + ((2 * BYTE1(v231)) | 0x36CF2BAA)) ^ 0x9B679544] ^ (((32 * v273) ^ 0x6B1C9380) - ((2 * ((32 * v273) ^ 0x6B1C9380)) & 0x84CB9AC0) + 1113967976) ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0x11C6DB02) - 1998361215) ^ dword_1002473C0[HIBYTE(v243) ^ 0x35];
  unsigned int v276 = v272 ^ (v271 >> 8);
  char v279 = (v259 ^ 0xE3) + 29 + ((2 * v259) & 0xC6);
  if ((v259 ^ 0xEEFEBFFF) + 2 * v259 != -285294593) {
    char v279 = 0;
  }
  unsigned __int8 v280 = (((v258 ^ 0x3C) - v279) ^ 0x7F) + 2 * ((v258 ^ 0x3C) - v279) - 127;
  int v281 = dword_10023BAE0[(v280 - 2 * (v280 & 1) + 1798969857) ^ 0x6B3A1AB2];
  HIDWORD(v282) = v281 ^ 0x91;
  LODWORD(v282) = v281 ^ 0x2E359800;
  int v283 = dword_10023CBC0[BYTE2(v275) ^ 0x2B];
  int v278 = ((2 * (BYTE1(v275) ^ 0x2822329F)) | 0x18A127C2) - (BYTE1(v275) ^ 0x2822329F) - 206607329;
  int v277 = dword_10023CBC0[((HIWORD(v276) & 0xD ^ 0x92844005) + (HIWORD(v276) & 0xF2 ^ 0x20671) - 1) ^ 0x92864655];
  unsigned int v284 = v277 ^ dword_1002473C0[HIBYTE(v267) ^ 6] ^ dword_100240030[v278 ^ 0x2472A1D1] ^ (((32 * v277) ^ 0x6B1C9380)
                                                                                        - ((2
                                                                                          * ((32 * v277) ^ 0x6B1C9380)) & 0x7CEDC700)
                                                                                        + 1047978900) ^ v278 ^ ((v282 >> 8) - ((2 * (v282 >> 8)) & 0xC0409D24) - 534753646);
  unsigned int v285 = (BYTE1(v258) ^ 0xEB045B2E) - ((2 * (BYTE1(v258) ^ 0xEB045B2E)) & 0x4000357A) + 611359421;
  int v286 = ((BYTE1(v258) ^ 0x88) - ((2 * (BYTE1(v258) ^ 0x88)) & 0x1EA) + 913739509) ^ 0x6364F5D;
  int v287 = dword_10023BAE0[(((2 * (v267 ^ 0xB7)) & 0x1E0) - (v267 ^ 0xB7) + 29455) ^ 0x73BC];
  HIDWORD(v282) = v287 ^ 0x91;
  LODWORD(v282) = v287 ^ 0x2E359800;
  unsigned int v288 = HIBYTE(v258) ^ 0x2D;
  int v289 = ((2 * (BYTE2(v258) ^ 0xC5)) | 0x5F77467C) - (BYTE2(v258) ^ 0xC5) - 800826174;
  unsigned int v290 = dword_1002473C0[HIBYTE(v272) ^ 0x69] ^ v283 ^ (((32 * v283) ^ 0x6B1C9380)
                                                      - ((2 * ((32 * v283) ^ 0x6B1C9380)) & 0x6175B340)
                                                      + 817551788) ^ ((v282 >> 8)
                                                                    - ((2 * (v282 >> 8)) & 0x1673E49C)
                                                                    - 1959136690) ^ v285 ^ dword_100240030[((v286 | 0xD80ADDC0) - (v286 | 0x27F5223F) + 670376511) ^ 0xE84A1CE0];
  int v291 = dword_10023CBC0[((v289 & 0x1A1A529 ^ 0x10C44521) + (v289 & 0x2E1A02D6 ^ 0x2E1A0295) - 1) ^ 0x1165E46A];
  int v292 = dword_10023BAE0[v276 ^ 0x8F];
  HIDWORD(v282) = v292 ^ 0x91;
  LODWORD(v282) = v292 ^ 0x2E359800;
  unsigned int v293 = v291 ^ dword_1002473C0[HIBYTE(v275) ^ 0x19] ^ dword_100240030[BYTE1(v267) ^ 0x8F] ^ (((2
                                                                                              * (BYTE1(v267) ^ 0x700258AB)) & 0x200081A0)
                                                                                            - (BYTE1(v267) ^ 0x700258AB)
                                                                                            - 347889873) ^ ((v282 >> 8) - ((2 * (v282 >> 8)) & 0x97A3C31E) - 875437681) ^ (((32 * v291) ^ 0x6B1C9380) - ((2 * ((32 * v291) ^ 0x6B1C9380)) & 0xB3674A80) + 1504945481);
  int v294 = dword_10023CBC0[(((v267 >> 15) & 0x152) + (BYTE2(v267) ^ 0xFFFFFFE9) + 1304516695) ^ 0x4DC158FE];
  unsigned int v295 = ((v276 >> 8) & 0xD ^ 0xE8A3BF07) + ((v276 >> 8) & 0xD0 ^ 0x51) - 1;
  int v296 = ((2 * (BYTE1(v276) ^ 0x5C)) | 0x15648B42) - (BYTE1(v276) ^ 0x5C) + 1968028255;
  LOWORD(v295) = (v295 & 0xB5 ^ 0x684) + (v295 & 0x4A ^ 0xB) + 4095;
  int v297 = dword_10023BAE0[(((2 * (v275 ^ 0x1008202A)) | 0x57363316)
                        - (v275 ^ 0x1008202A)
                        + 1415898741) ^ 0xBB93392B];
  HIDWORD(v282) = v297 ^ 0x91;
  LODWORD(v282) = v297 ^ 0x2E359800;
  unsigned int v298 = dword_1002473C0[v288] ^ v294 ^ (((32 * v294) ^ 0x6B1C9380)
                                       - ((2 * ((32 * v294) ^ 0x6B1C9380)) & 0x7712C780)
                                       - 1148623912) ^ ((((2 * ((v276 >> 8) & 0x22 ^ 0x945D3236)) & 0x3A6040)
                                                       - ((v276 >> 8) & 0x22 ^ 0x945D3236)
                                                       - 691878057) & 0x9FE1E2 | 0x8320021C) ^ ((v282 >> 8)
                                                                                              - ((2 * (v282 >> 8)) & 0xEC223040)
                                                                                              + 1980831776) ^ dword_100240030[((v296 & 0x2300658 ^ 0x6340BA59) + (v296 & 0x88241A7) - 1) ^ 0x69F2FF98] ^ ((v295 & 0x4DD ^ 0x99E567B6) + 1067996247 + ((2 * ((v295 & 0x4DD ^ 0x99E567B6) & 0x5C ^ (v295 | 0xFFFFFFF7))) ^ 0x33408015));
  int v299 = dword_10023CBC0[BYTE2(v290) ^ 0xFC];
  unsigned int v300 = ((BYTE1(v293) ^ 0xD3 | 0xC19C053A) - (BYTE1(v293) ^ 0xD3 | 0x3E63FAC5) + 1046739653) ^ 0xC7BC053A;
  int v301 = dword_10023BAE0[((v298 ^ 0x42) - ((2 * (v298 ^ 0x42)) & 0x1BC) + 2526) ^ 0x98A];
  HIDWORD(v282) = v301 ^ 0x91;
  LODWORD(v282) = v301 ^ 0x2E359800;
  unsigned int v302 = dword_1002473C0[HIBYTE(v284) ^ 0xB6] ^ v299 ^ dword_100240030[((BYTE1(v293) ^ 0x2A54D087)
                                                                      + ((v293 >> 8) & 0x2C ^ 0x15200128)
                                                                      - ((BYTE1(v293) ^ 0x2A54D087) & 0x2A44502C)) ^ 0x1530815D] ^ (((32 * v299) ^ 0x6B1C9380) - ((2 * ((32 * v299) ^ 0x6B1C9380)) & 0x1792DBC0) + 197750271) ^ ((v282 >> 8) - ((2 * (v282 >> 8)) & 0x65B0CBB0) + 853042648) ^ (v300 - ((2 * v300) & 0x1AF91498) - 847476148);
  int v303 = (HIWORD(v293) & 0xFE ^ 0x566095D1) - (HIWORD(v293) & 1);
  int v304 = dword_10023CBC0[((v303 & 0x12200510 ^ 0x281A4810) + (v303 ^ 0x57648743) - ((v303 ^ 0x57648743) & 0x40210)) ^ 0x3B3A5D8B];
  unsigned int v305 = dword_10023BAE0[(((2 * (v284 ^ 0x2804A519)) & 0x90188)
                        - (v284 ^ 0x2804A519)
                        + 768111931) ^ 0x5CCD080];
  int v306 = dword_1002473C0[HIBYTE(v290) ^ 0x30] ^ dword_100240030[(((v298 >> 8) & 0x31 ^ 0x4B471C10)
                                                               + ((v298 >> 8) & 0xCE ^ 7)
                                                               - 1) ^ 0x4B471C2C] ^ v304 ^ (v305 >> 8) ^ (((32 * v304) ^ 0x6B1C9380) - ((2 * ((32 * v304) ^ 0x6B1C9380)) & 0x285A3C0) + 21156329);
  int v307 = dword_10023CBC0[BYTE2(v298) ^ 0x8E];
  int v308 = v306 ^ BYTE1(v298);
  unsigned int v309 = (((v305 << 24) ^ 0x91000000) - ((2 * ((v305 << 24) ^ 0x91000000)) & 0xAE000000) + 1470564818) ^ v308 ^ 0x61C21882;
  unsigned int v310 = dword_10023BAE0[v290 ^ 0x74];
  int v311 = dword_10023CBC0[BYTE2(v284) ^ 0x99];
  unsigned int v312 = v307 ^ dword_1002473C0[HIBYTE(v293) ^ 0xFA] ^ (((2 * (BYTE1(v284) ^ 0xE823A7D4)) & 0x100500C4)
                                                      - (BYTE1(v284) ^ 0xE823A7D4)
                                                      + 2002878365) ^ dword_100240030[((BYTE1(v284) ^ 0x48290006 | 0x2C5087AC)
                                                                                     - (BYTE1(v284) ^ 0x48290006 | 0xD3AF7853)
                                                                                     - 743475117) ^ 0x64798788] ^ (v310 >> 8) ^ (((32 * v307) ^ 0x6B1C9380) - ((2 * ((32 * v307) ^ 0x6B1C9380)) & 0x28D81300) + 342624642) ^ (((v310 << 24) ^ 0x91000000) - ((2 * ((v310 << 24) ^ 0x91000000)) & 0x4A000000) + 624497110);
  unsigned int v313 = ((BYTE1(v290) ^ 0xDD | 0x53367355) - (BYTE1(v290) ^ 0xDD | 0xACC98CAA) - 1396077398) ^ 0x43367AC5;
  unsigned int v314 = ((v293 & 0xE ^ 0xFF369D05) + (v293 & 0xF1) - 1) ^ 0xB91A1D8F;
  int v315 = dword_10023BAE0[(((2 * v314) | 0xEC7E9E98) - v314 + 163623092) ^ 0xB013CF88];
  HIDWORD(v282) = v315 ^ 0x91;
  LODWORD(v282) = v315 ^ 0x2E359800;
  unsigned int v316 = dword_1002473C0[HIBYTE(v298) ^ 0x7F] ^ dword_100240030[(((2 * (BYTE1(v290) ^ 0xA)) & 0x1B6)
                                                               - (BYTE1(v290) ^ 0xA)
                                                               + 5924) ^ 0x175B] ^ v311 ^ ((v282 >> 8)
                                                                                         - ((2 * (v282 >> 8)) & 0x47CAAB52)
                                                                                         - 1545251415) ^ (v313 - ((2 * v313) & 0x6F7F086E) - 138443721) ^ (((32 * v311) ^ 0x6B1C9380) - ((2 * ((32 * v311) ^ 0x6B1C9380)) & 0x6340B480) + 832592479);
  unsigned int v317 = ((BYTE2(v306) ^ 0xC6 | 0xF72E6087) - (BYTE2(v306) ^ 0xC6 | 0x8D19F78) + 147955576) ^ 0xAF2C2085;
  int v318 = dword_1002357D0[(((2 * v317) & 0x21F850FC) - v317 - 284960895) ^ 0xB7019790];
  HIDWORD(v282) = v318 ^ 0x1EC;
  LODWORD(v282) = v318 ^ 0x4C235C00;
  int v319 = (v316 ^ 0x12B1D9E3)
       + (v316 & 0x6D ^ 0x410E260C)
       - ((v316 ^ 0x12B1D9E3) & 0x1210C86D);
  int v320 = HIBYTE(v302) ^ dword_100249C80[HIBYTE(v302) ^ 0xB0] ^ dword_10023D4C0[((BYTE1(v312) ^ 0xD4)
                                                                              - ((2 * (BYTE1(v312) ^ 0xD4)) & 0xA2)
                                                                              + 1361) ^ 0x525] ^ 0x1C1EAC65 ^ ((v282 >> 10) + 256456930 - ((2 * (v282 >> 10)) & 0x1E927220) + 46);
  unsigned int v321 = ((2 * (v320 & 0xA1A9E454 ^ 0xA0A88054)) | 0x35A5B442) - (v320 & 0xA1A9E454 ^ 0xA0A88054) + 1697457631;
  unsigned int v322 = ((v321 & 0x3158090C ^ 0x31480905 | v321 & 0xCEA7F6F0) - 1) ^ 0xAB3AF330 | ((v320 & 0x5E561BAB ^ 0x100207AB)
                                                                                  - ((2
                                                                                    * (v320 & 0x5E561BAB ^ 0x100207AB)) & 0x90800354)
                                                                                  - 915889666) ^ 0xC378A5F4;
  int v323 = dword_10023D0C0[((v319 & 0x5FFEB1 ^ 0xC537801) + (v319 & 0xA0014E ^ 0x10A0010D) - 1) ^ 0x1C5C4EB7];
  HIDWORD(v282) = v323 ^ 0x189E7;
  LODWORD(v282) = v323 ^ 0xDC00000;
  unsigned int v324 = (v282 >> 18) - ((2 * (v282 >> 18)) & 0x3914C0F0) - 1668652936;
  unsigned int v325 = ((v324 >> 2) & 0x21D899CA ^ 0x1089182 | 0xC89725B0)
       - ((v324 >> 2) & 0x21D899CA ^ 0x1089182 | 0x3768DA4F)
       + 929618511;
  unsigned int v326 = v324 ^ ((BYTE1(v312) ^ 0x14A022ED | 0x64680870) - (BYTE1(v312) ^ 0x14A022ED | 0x9B97F78F) - 1684539505) ^ ((v325 & 0xC61B5DB2 ^ 0x16081193 | v325 & 0x29E4A248) - 1) ^ (v322 - ((2 * v322) & 0x733CB426) + 966679059);
  unsigned int v327 = HIBYTE(v309) ^ 0x9FD654DF;
  int v328 = dword_100249C80[HIBYTE(v309) ^ 0x7E] ^ 0x68B0356A;
  int v329 = (v328 & v327) + 1291989934 - ((2 * (v328 & v327)) & 0x1A042950);
  unsigned int v330 = v328 + v327;
  unsigned int v331 = ((2 * v330) & 0xFEEFFFE4)
       + (v330 ^ 0x7F77FFF2)
       + ((2 * v329 + 1012) ^ 0x8A046B19)
       + ((2 * (2 * v329 + 1012)) & 0xDFFFFF6C ^ 0xEBF729DF);
  int v332 = dword_1002357D0[BYTE2(v312) ^ 0xF];
  unsigned int v333 = v331 - 2 * ((v331 + 814219206) & 0x2480641F ^ v330 & 1);
  HIDWORD(v282) = v332 ^ 0x1EC;
  LODWORD(v282) = v332 ^ 0x4C235C00;
  int v334 = (v282 >> 10) - ((2 * (v282 >> 10)) & 0xD748F04) + 112871298;
  unsigned int v335 = ((BYTE1(v316) ^ 0xFD | 0x88BD08DF) - (BYTE1(v316) ^ 0xFD | 0x7742F720) + 2000877344) ^ 0x35248C94;
  int v336 = ((2 * v335) & 0x77D5791C) - v335 - 1005239439;
  int v337 = (v302 & 0xE2 ^ 3) - (v302 & 0x1D) + 1081648924;
  int v338 = dword_10023D0C0[((v337 & 0x280B6B ^ 0x8014960) + (v337 ^ 0x413AA69F) - ((v337 ^ 0x413AA69F) & 0x1420B6B)) ^ 0x8294AB4];
  HIDWORD(v282) = v338 ^ 0x189E7;
  LODWORD(v282) = v338 ^ 0xDC00000;
  unsigned int v339 = (v282 >> 18) - ((2 * (v282 >> 18)) & 0x6777225E) + 867930415;
  int v340 = v334 ^ dword_10023D4C0[(((2 * (BYTE1(v316) ^ 0x8285162)) | 0xD7BBEE6) - (BYTE1(v316) ^ 0x8285162) + 2034376845) ^ 0x8E958E3D] ^ v339 ^ (v339 >> 2) & 0x21D899CA ^ v336;
  int v341 = dword_1002357D0[BYTE2(v316) ^ 0x8D];
  unsigned int v342 = v340 ^ (v333 - 1794612252);
  HIDWORD(v282) = v341 ^ 0x1EC;
  LODWORD(v282) = v341 ^ 0x4C235C00;
  unsigned int v343 = ((2 * (BYTE1(v302) ^ 0xC8)) & 0xFFFFFFF7) - (BYTE1(v302) ^ 0xC8) - 918247164;
  unsigned int v344 = ((v343 & 0x804AF45 ^ 0x36000641) + (v343 ^ 0xC967F904) - ((v343 ^ 0xC967F904) & 0x35F45)) ^ 0x3E24AFB0;
  LOBYTE(v343) = ((2 * (((v342 & 0x12 ^ 2) - ((2 * (v342 & 0x12 ^ 2)) & 4) - 89) ^ 0xB4)) | 0x76)
               - (((v342 & 0x12 ^ 2) - ((2 * (v342 & 0x12 ^ 2)) & 4) - 89) ^ 0xB4)
               + 69;
  int v345 = (v308 & 0x1E ^ 0x5B219711) + (v308 & 0xE1) - 1;
  int v346 = dword_10023D0C0[((v345 & 0x42000258 ^ 0x24440048) + (v345 ^ 0x52AA6AB7) - ((v345 ^ 0x52AA6AB7) & 0x189F858)) ^ 0x6E46076D];
  unsigned int v347 = ((((v346 ^ 0xDC189E7u) >> (v343 ^ 0xB8))
         - ((2 * ((v346 ^ 0xDC189E7u) >> (v343 ^ 0xB8))) & 0x2C1FFD82)
         - 1777336639) ^ 0x960FFEC1) >> (v343 ^ 0xAA);
  unsigned int v348 = (v347 - ((2 * v347) & 0x675D3F24) + 867082130) ^ 0x33AE9F92 | (((v346 << 14) ^ 0x6279C000)
                                                                      - ((2 * ((v346 << 14) ^ 0x6279C000)) & 0x64910000)
                                                                      - 1303869637) ^ 0xB248873B;
  unsigned int v349 = v348 - ((2 * v348) & 0x1B4E3E2A) + 229056277;
  unsigned int v350 = dword_1002357D0[((((BYTE2(v302) ^ 0xB6) + (HIWORD(v302) & 0x69 ^ 0x6088E449) - ((BYTE2(v302) ^ 0xB6) & 0x69)) & 0x43E ^ 0x18D2C03)
                        + (((BYTE2(v302) ^ 0xB6) + (HIWORD(v302) & 0x69 ^ 0x6088E449) - ((BYTE2(v302) ^ 0xB6) & 0x69)) & 0x3C1)
                        - 1) ^ 0x18D2887];
  unsigned int v351 = ((HIBYTE(v312) ^ 0x8000007E) - 1951391687 + (~(2 * (HIBYTE(v312) ^ 0x8000007E)) | 0xFFFFFF8F)) ^ (1226963448 - (BYTE1(v302) ^ 0xC6) + ((2 * (BYTE1(v302) ^ 0xC6)) | 0x6DBBF05C) + 3546) & 0x7FFFFFFF ^ dword_100249C80[HIBYTE(v312) ^ 0x5B] ^ dword_10023D4C0[v344] ^ ((v282 >> 10) - ((2 * (v282 >> 10)) & 0x83315FF2) - 1046958087) ^ v349 ^ (((v349 >> 2) & 0x21D899CA ^ 0x219080C0 | 0x8214981C) - ((v349 >> 2) & 0x21D899CA ^ 0x219080C0 | 0x7DEB67E3) + 2112579555);
  int v352 = BYTE1(v309);
  int v353 = STACK[0x568];
  unsigned int v354 = ((v352 ^ 0x6C | 0x6321ABB4) - (v352 ^ 0x6C | 0x9CDE544B) - 1663151029) ^ 0x7383BA24;
  int v355 = dword_10023D4C0[((v352 ^ 0x14B30D4) - ((2 * (v352 ^ 0x14B30D4)) & 0x2142022) - 247819503) ^ 0xF071A37E];
  int v356 = dword_100249C80[HIBYTE(v316) ^ 0x58] ^ (v350 >> 10) ^ HIBYTE(v316) ^ (((v350 << 22) ^ 0x7B000000)
                                                                             - 1105428950
                                                                             - ((2 * ((v350 << 22) ^ 0x7B000000)) & 0x7C000000)
                                                                             + 2139);
  unsigned int v357 = (v355 ^ 0x5E2B57EF) + (v355 ^ v356 ^ 0xE8BD47D1) + 1;
  unsigned int v358 = (v356 ^ ((v356 ^ 0xB696103E) + 495852841 + (~(2 * (v356 ^ 0xB696103E) + 2) | 0xC4E3C5B1)) ^ 0x7E2D3201 ^ (v357 - ((2 * v357) & 0x559581CE) + 717930727))
       + (v355 ^ 0x5E2B57EF);
  unsigned int v359 = v358 - ((2 * v358) & 0xFDF20A4C) + 2130248998;
  unsigned int v360 = dword_10023D0C0[v312 ^ 0x31];
  unsigned int v361 = (v360 << 8) ^ 0xC189E700;
  unsigned int v362 = (v361 - ((2 * v361) & 0x4E830C00) - 1488877837) & 0xFC000000 ^ 0xA4860504;
  int v363 = (v361 - ((2 * v361) & 0x1F69C00) + 50023983) & 0x3FFFF00;
  unsigned int v364 = ((v363 ^ 0xFCBFF5FF) + 1748730223 + ((2 * v363) | 0x2F88FD24)) ^ 0x1FF57EF3;
  v360 >>= 24;
  int v365 = (((2 * v362) & 0x69040008) - v362 + 1230800251) ^ 0x49DA807F | v360 ^ 0xD;
  unsigned int v366 = (v365 - 2 * (v365 & 0x54006007 ^ v360 & 2) - 725458939) ^ 0xD4C26005 | (((2 * v364) & 0x1517A202)
                                                                               - v364
                                                                               + 896806642) ^ 0xBCFE6A93;
  int v367 = v366 - ((2 * v366) & 0x1C11136C) - 1912043082;
  HIDWORD(v282) = v367 ^ 0x37B27AC;
  LODWORD(v282) = v367 ^ 0x5C000000;
  unsigned int v368 = (v282 >> 26) - ((2 * (v282 >> 26)) & 0x850FA2CE) - 1031286425;
  unsigned int v369 = v359 ^ ((v354 | 0x86032236) - (v354 | 0x79FCDDC9) + 2046614985) ^ v368 ^ (((v368 >> 2) & 0x21D899CA ^ 0x200009C8)
                                                                                 - ((2
                                                                                   * ((v368 >> 2) & 0x21D899CA ^ 0x200009C8)) & 0x43300100)
                                                                                 - 509721456) & 0xFFFC9FDA;
  unsigned int v370 = (unsigned char *)STACK[0xA08];
  int v371 = (unsigned char *)STACK[0xA08];
  v370[10] = byte_100249B60[(((2 * (BYTE1(v351) ^ 0x242445DD)) | 0x81CDECAA) - (BYTE1(v351) ^ 0x242445DD) - 1088878165) ^ 0x64C2B38DLL] ^ 0xD0;
  int v372 = (BYTE1(v369) ^ 0x94) - ((v369 >> 7) & 0xD4) + 1069443178;
  v370[14] = byte_100249B60[((v372 & 0xA7D ^ 0xA702A15) + (v372 & 0x582 ^ 0x21000003u) - 1) ^ 0x2B70223ELL] ^ 0x43;
  v370[1] = byte_100247C00[((BYTE2(v326) ^ 0x2809005B)
                          + (HIWORD(v326) & 0x67 ^ 0x83220124)
                          - ((BYTE2(v326) ^ 0x2809005B) & 0x10067)) ^ 0xAB2A01A3] ^ 0x86;
  unsigned int v373 = (((2 * (BYTE2(v369) ^ 0xDF)) | 0x9DFE1A9C) - (BYTE2(v369) ^ 0xDF) + 822145714) ^ 0x548D0525;
  v370[13] = byte_100247C00[(-1726053798 - v373 + ((2 * v373) | 0xCDC2F26A) + 1137) ^ 0xFC9371CELL] ^ 0x86;
  unsigned int v374 = ((v351 ^ 0xD640BBC5)
        + (v351 & 0xF2 ^ 0x82B4032)
        - ((v351 ^ 0xD640BBC5) & 0xC040ABF2)) ^ 0x8E495D6A;
  LOBYTE(v365) = ((2 * (v351 ^ 0xA5)) & 0x48) - (v351 ^ 0xA5) + 91;
  LOBYTE(v365) = (v365 & 0xFB ^ 0xE0) + (v365 ^ 0x1B) - ((v365 ^ 0x1B) & 0xFB);
  LOBYTE(v374) = byte_100238D80[((v374 | 0xA61E5B0D) - (v374 | 0x59E1A4F2) + 1507960050) ^ 0x367C56E7];
  LOBYTE(v357) = v365 ^ v374;
  LOBYTE(v374) = 2 * (((v365 ^ 0x6F) & (v374 ^ 0x6F)) - ((2 * ((v365 ^ 0x6F) & (v374 ^ 0x6F))) & 0x18)) + 24;
  LOBYTE(v374) = v357 + (v374 ^ 0x47) + ((2 * v374) & 0xBF ^ 0x30) - 95;
  v371[11] = (v374 - ((2 * v374) & 0x58) + 44) ^ 0xA;
  LOBYTE(v374) = byte_100220EF0[HIBYTE(v326) ^ 0x76];
  int v375 = ((2 * (BYTE2(v342) ^ 0xDC)) & 0x1E0) - (BYTE2(v342) ^ 0xDC) + 939267343;
  *int v371 = (v374 - 2 * ((v374 + 78) ^ v374 & 1) + 76) ^ 0x7B;
  unsigned int v376 = ((BYTE2(v342) ^ 0x40) + (HIWORD(v342) & 0x5B ^ 0x21B) - ((BYTE2(v342) ^ 0x40) & 0x5B)) ^ 0xFFFFFDA1;
  unsigned int v377 = (v375 & 0x16201001 | 0x2C252) + (v375 ^ 0xD7A51787) - ((v375 ^ 0xD7A51787) & 0x20490001) + 1454;
  unsigned int v378 = (v376 - 2 * ((v376 + 38) & 0xB975471 ^ v376 & 1) - 1953016682) ^ v377 ^ 0x93B5FEC6 ^ ((v377 ^ 0x29CD25CA)
                                                                                             - ((2 * (v377 ^ 0x29CD25CA)
                                                                                               + 2) & 0x9C20E106)
                                                                                             - 837783420);
  v371[5] = byte_100247C00[(v378 - ((2 * v378 + 74) & 0xE1FF065A) + 1895793490) ^ 0x70FF8391] ^ 0x3D;
  unsigned int v379 = ((BYTE1(v326) ^ 0x69) + ((v326 >> 8) & 0x91 ^ 0x50354590) - ((BYTE1(v326) ^ 0x69) & 0x91)) ^ 0xB13FEEBC;
  v371[2] = byte_100249B60[(((2 * v379) | 0x7201ACBC) - v379 - 956356190) ^ 0xD80A7D4ELL] ^ 0x1A;
  v371[9] = byte_100247C00[(((2 * (BYTE2(v351) ^ 0x2200250D)) & 0x40000310) - (BYTE2(v351) ^ 0x2200250Du) - 1706384265) ^ 0xB84A811FLL] ^ 0x20;
  LOBYTE(v372) = byte_100220EF0[HIBYTE(v369) ^ 0xA0];
  v371[12] = (v372 + ((2 * v372 - 100) & 0x80) - 114) ^ 0x29;
  int v380 = HIBYTE(v351) ^ 0xE9;
  unsigned int v381 = v380
       + (((HIBYTE(v351) ^ 0xFFFFFFA5) + 1) ^ 0x25DFBBCF)
       + ((2 * ((HIBYTE(v351) ^ 0xFFFFFFA5) + 1)) & 0x4BBF779E)
       - 635419599;
  unsigned int v382 = ((v381 - ((2 * v381) & 0x2528C1E6) - 1835769613) ^ 0x6D6B9F0D) + v380;
  LOBYTE(v382) = byte_100220EF0[(v382 - ((2 * v382) & 0x6C6A605C) - 1238028242) ^ 0xB63530DD];
  v371[8] = (v382 - 2 * ((v382 + 78) & 0xF7 ^ v382 & 1) + 68) ^ 0xD0;
  LOBYTE(v382) = (byte_100238D80[(((2 * (v342 ^ 0x98)) & 0xFFFFFFDF)
                                - (v342 ^ 0x98)
                                + 16656) ^ 0x410FLL] ^ 0x6F)
               + (v342 ^ 0x41);
  v371[7] = (v382 - ((2 * v382) & 0x55) + 42) ^ 0x88;
  unsigned int v383 = (((2 * (BYTE1(v342) ^ 0xE9)) | 0xF2046E2A) - (BYTE1(v342) ^ 0xE9) + 117295339) ^ 0x59041F56;
  unint64_t v384 = STACK[0x570];
  v371[6] = byte_100249B60[((v383 | 0x5BA7E472) - (v383 | 0xA4581B8D) - 1537729651) ^ 0xFBA1CC64] ^ 0xEA;
  LOBYTE(v383) = (byte_100238D80[((v326 & 0x52 ^ 0x8C9DE42)
                                + (v326 ^ 0x400420B9)
                                - ((v326 ^ 0x400420B9) & 0x40040052)) ^ 0x8C9FE76] ^ 0x6F)
               + (v326 ^ 0x5B);
  v371[3] = (v383 - ((2 * v383) & 0x4A) - 91) ^ 0x6F;
  unsigned int v385 = ((v369 & 0x87 ^ 0xFFD34206) + (v369 & 0x78 ^ 0x21) - 1) ^ 0x6A7894B7;
  LOBYTE(v385) = (v369 ^ 0x96) + (byte_100238D80[(((2 * v385) & 0x522946) - v385 - 1753037988) ^ 0x229159DLL] ^ 0x6F);
  v371[15] = (v385 - ((2 * v385) & 0x4C) - 90) ^ 0xD5;
  LOBYTE(v385) = byte_100220EF0[HIBYTE(v342) ^ 0x8FLL];
  v371[4] = ((2 * v385 - 100) & 0xF4) - v385 + 55;
  unint64_t v386 = (v353 - 295160460) ^ 0xFFFFFFFF173B6C39;
  unsigned int v387 = 1755343967
       * (((v386 + v384 + 111978952) ^ *(_DWORD *)(qword_100284C30 + (dword_100284A28 & 0x561E13BC))) & 0x7FFFFFFF);
  *(unsigned char *)(v384 + 111978952 + v386) ^= byte_100245BA0[((_BYTE)v386 - 56) & 0xF | (16
                                                                                  * ((1755343967 * (v387 ^ HIWORD(v387))) >> 24))] ^ (95 * (v387 ^ BYTE2(v387)));
  return ((uint64_t (*)(void))*(&off_10026D1A0 + v353))();
}

void sub_1001B9C4C()
{
}

uint64_t sub_1001B9C54()
{
  if (v1 + (((v2 ^ 0xEE683D53) - 268535426) & v0) == 1723752819) {
    int v4 = v3;
  }
  else {
    int v4 = 387111794;
  }
  LODWORD(STACK[0x84C]) = v4;
  BOOL v6 = v4 != v3 || STACK[0x678] == 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (int)((v6
                                    * ((((v2 ^ 0xEE683D53) - 558) | 0x1B) + (((v2 ^ 0xEE683D53) - 714) | 0x320) - 3297)) ^ v2 ^ 0xEE683D53)))();
}

uint64_t sub_1001B9CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  STACK[0x788] = (((v7 ^ 0x26Bu) + 569) ^ 0xFFFFFFFFFFFFFFE8) + a6;
  return (*(uint64_t (**)(void))(a4 + 8 * ((v6 == 387156805) | ((v6 == 387156805) << 10) | v7)))();
}

void sub_1001B9D3C(int a1@<W8>)
{
  int v1 = (void *)STACK[0x718];
  STACK[0x590] = STACK[0x718] + 40;
  v1[13] = 0xDED30A4024145F56;
  v1[14] = 0x1482B5319C0A3DB9;
  v1[15] = 0xEB7D4ACE63F5C246;
  *(void *)((char *)v1 + 132) = 0xC8643A156B9173A0;
  uint64_t v2 = (a1 + 892 + LODWORD(STACK[0x774]) - 629594508);
  LODWORD(STACK[0x754]) = v2;
  STACK[0x808] = (v2 | ((unint64_t)(v2 < 0x5675B644) << 32)) + 0x2BC116DF365F1015;
  JUMPOUT(0x1001B9E04);
}

uint64_t sub_1001B9F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v9 = (*(_DWORD *)(v7 + 68) ^ 0xDED30A40) + a7 - 1715765038;
  unsigned int v10 = v9 - ((v9 << ((((v8 - 6) | 8) + 17) ^ (v8 + 84) & 0xBD)) & 0xBDA61480) - 556594624;
  *(_DWORD *)(v7 + 68) = v10;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((14 * ((v10 ^ 0xDED30A40) >= a7 - 1715765038)) ^ v8)))();
}

uint64_t sub_1001B9FD0@<X0>(int a1@<W8>)
{
  *(_DWORD *)(v1 + 64) += (196 * (a1 ^ 0x292)) ^ 0x7A9;
  return ((uint64_t (*)(void))STACK[0x7F8])();
}

void sub_1001BA000()
{
}

uint64_t sub_1001BA018@<X0>(int a1@<W8>)
{
  int v8 = a1 + 1;
  char v9 = *(unsigned char *)(STACK[0x880] + (a1 - 1464837090));
  *(unsigned char *)(v1 + (v4 ^ 0xF6ADAFD7) + v3) = v9 - ((2 * v9) & 0xF4) - 6;
  BOOL v10 = v8 + v5 < v6;
  if (v6 < v7 != v8 + v5 < v2) {
    BOOL v10 = v6 < v7;
  }
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + ((1117 * v10) ^ (v4 - 948))))(2830130206);
}

void sub_1001BA0AC()
{
}

void sub_1001BA0B8()
{
  STACK[0x6C0] = STACK[0x630] + 16;
  JUMPOUT(0x1001AA56CLL);
}

void sub_1001BA0D4()
{
  (*(void (**)(uint64_t))(v0 + 8 * (v1 + 315)))(v2);
  ((void (*)(unint64_t))*(&off_10026D1A0 + (v1 ^ 0xEDD)))(STACK[0xA10]);
  JUMPOUT(0x1001D8A50);
}

uint64_t sub_1001BA0DC(uint64_t a1, unsigned int a2)
{
  if (STACK[0x348]) {
    int v3 = STACK[0x550];
  }
  else {
    int v3 = STACK[0x4A0];
  }
  if (STACK[0x348]) {
    int v4 = STACK[0x408];
  }
  else {
    int v4 = STACK[0x404];
  }
  if (STACK[0x348]) {
    int v5 = STACK[0x3C8];
  }
  else {
    int v5 = STACK[0x3D8];
  }
  if (STACK[0x348]) {
    int v6 = STACK[0x3B0];
  }
  else {
    int v6 = STACK[0x3AC];
  }
  int v7 = STACK[0x2B4];
  if (STACK[0x348]) {
    int v7 = STACK[0x2B0];
  }
  int v8 = STACK[0x2B8];
  if ((STACK[0x348] & 1) == 0) {
    int v8 = STACK[0x2A8];
  }
  int v9 = LODWORD(STACK[0x320]) ^ LODWORD(STACK[0x390]);
  int v10 = LODWORD(STACK[0x388]) ^ LODWORD(STACK[0x310]);
  unsigned int v11 = (v2 + 1309598121) & 0xBB00BEEB;
  int v12 = STACK[0x2D0];
  if (STACK[0x348])
  {
    int v12 = STACK[0x29C];
    int v13 = STACK[0x2BC];
  }
  else
  {
    int v13 = STACK[0x29C];
  }
  BOOL v14 = LODWORD(STACK[0x548]) == -776490363;
  int v15 = STACK[0x3F8];
  if (LODWORD(STACK[0x548]) != -776490363) {
    int v15 = STACK[0x3E8];
  }
  LODWORD(STACK[0x390]) = v15;
  int v16 = STACK[0x3A8];
  if (v14) {
    int v16 = STACK[0x3A4];
  }
  LODWORD(STACK[0x404]) = v16;
  int v17 = STACK[0x568];
  if (v14) {
    int v17 = STACK[0x374];
  }
  LODWORD(STACK[0x4A0]) = v17;
  int v18 = STACK[0x570];
  if (v14) {
    int v18 = STACK[0x398];
  }
  LODWORD(STACK[0x2D0]) = v18;
  int v19 = STACK[0x394];
  if (!v14) {
    int v19 = STACK[0x38C];
  }
  LODWORD(STACK[0x38C]) = v19;
  int v20 = STACK[0x308];
  if (v14) {
    int v21 = v12;
  }
  else {
    int v21 = STACK[0x308];
  }
  LODWORD(STACK[0x3AC]) = v21;
  if (v14) {
    int v12 = v20;
  }
  LODWORD(STACK[0x3A8]) = v12;
  if (v14) {
    int v22 = v8;
  }
  else {
    int v22 = v7;
  }
  LODWORD(STACK[0x3A4]) = v22;
  if (!v14) {
    int v7 = v8;
  }
  LODWORD(STACK[0x3F8]) = v7;
  unsigned int v23 = v9 ^ 0xFBAF4907;
  LODWORD(STACK[0x3C8]) = v3;
  LODWORD(STACK[0x3B0]) = v4;
  if (v14) {
    int v24 = v3;
  }
  else {
    int v24 = v4;
  }
  LODWORD(STACK[0x394]) = v24;
  int v25 = STACK[0x4E8];
  if (v14) {
    int v25 = STACK[0x4D0];
  }
  LODWORD(STACK[0x408]) = v25;
  LODWORD(STACK[0x348]) = v5;
  LODWORD(STACK[0x320]) = v6;
  if (v14) {
    int v26 = v5;
  }
  else {
    int v26 = v6;
  }
  LODWORD(STACK[0x388]) = v26;
  int v27 = STACK[0x3D4];
  LODWORD(STACK[0x29C]) = v13;
  if (v14) {
    int v27 = v13;
  }
  LODWORD(STACK[0x398]) = v27;
  int v28 = STACK[0x4C0];
  if (STACK[0x4C0]) {
    unsigned int v23 = STACK[0x264];
  }
  LODWORD(STACK[0x264]) = v23;
  int v29 = v10 ^ (v11 - 1282867164);
  if (v28)
  {
    int v30 = STACK[0x278];
  }
  else
  {
    int v29 = STACK[0x23C];
    int v30 = STACK[0x270];
  }
  if (v28) {
    int v31 = STACK[0x26C];
  }
  else {
    int v31 = STACK[0x248];
  }
  int v32 = STACK[0x240];
  if (v28) {
    int v33 = STACK[0x248];
  }
  else {
    int v33 = STACK[0x240];
  }
  if ((v28 & 1) == 0) {
    int v32 = STACK[0x250];
  }
  int v34 = STACK[0x37C];
  if ((v28 & 1) == 0) {
    int v34 = STACK[0x2A0];
  }
  BOOL v35 = (v28 & 2) == 0;
  if ((v28 & 2) != 0) {
    int v29 = STACK[0x2A4];
  }
  LODWORD(STACK[0x2BC]) = v29;
  int v36 = STACK[0x24C];
  if (v35) {
    int v37 = STACK[0x24C];
  }
  else {
    int v37 = v34;
  }
  LODWORD(STACK[0x2B4]) = v37;
  if (v35) {
    int v38 = v34;
  }
  else {
    int v38 = v36;
  }
  LODWORD(STACK[0x2B8]) = v38;
  int v39 = STACK[0x298];
  if (v35) {
    int v39 = STACK[0x294];
  }
  LODWORD(STACK[0x2B0]) = v39;
  int v40 = STACK[0x268];
  if (v35) {
    int v40 = STACK[0x258];
  }
  LODWORD(STACK[0x26C]) = v40;
  int v41 = STACK[0x480];
  LODWORD(STACK[0x310]) = v30;
  if (v35) {
    int v41 = v30;
  }
  LODWORD(STACK[0x2A8]) = v41;
  LODWORD(STACK[0x278]) = v31;
  LODWORD(STACK[0x250]) = v32;
  if (v35) {
    int v42 = v31;
  }
  else {
    int v42 = v32;
  }
  LODWORD(STACK[0x2A0]) = v42;
  int v43 = STACK[0x378];
  LODWORD(STACK[0x258]) = v33;
  if (v35) {
    int v43 = v33;
  }
  LODWORD(STACK[0x2A4]) = v43;
  unint64_t v44 = v11 + 38 - 2072664713 + a2 + ((unint64_t)(a2 < 0x7B8A5580) << 32);
  *(void *)(STACK[0xA30] + 8 * v44) = *(void *)(STACK[0xA18] + 8 * v44) ^ 0x9696969696969696;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (int)((27 * (a2 - 2072663423 > 1)) ^ v11)))();
}

void sub_1001BAA48()
{
}

uint64_t sub_1001BAA58@<X0>(int a1@<W0>, uint64_t a2@<X3>, int a3@<W8>)
{
  unint64_t v5 = (a1 - 1670360394) & 0x638FAF6B;
  STACK[0x570] = v5;
  unint64_t v6 = a2 ^ v5 ^ 0xE1A5DB7216E45FB9;
  unint64_t v7 = (((v6 >> (a2 & 0x1B ^ 0x18)) - ((2 * (v6 >> (a2 & 0x1B ^ 0x18))) & 0x53CD490A0C583730) + 0x29E6A485062C1B98) ^ 0x29E6A485062C1B98) >> (a2 & 0x1B ^ 3);
  unint64_t v8 = v6 + (v7 ^ 0xA1851088460A8305) - ((2 * v7) & 0xBCF5DEEF73EAF9F4) + 0x5E7AEF77B9F57CFBLL;
  unint64_t v9 = ((2 * v8) & 0xEDFFDFF9FFFDBFB4)
     + (v8 ^ 0xF6FFEFFCFFFEDFDALL)
     + (((((2 * v8) & 0xEDFFDFF9FFFDBFB4) + (v8 ^ 0xF6FFEFFCFFFEDFDALL) + 0x900100300012026) >> 14) ^ 0xCA10880800030005)
     - (((((2 * v8) & 0xEDFFDFF9FFFDBFB4) + (v8 ^ 0xF6FFEFFCFFFEDFDALL) + 0x900100300012026) >> 13) & 0x6EFEFFFF9FFF4);
  unint64_t v10 = v9
      + (((v9 + 0x3EEF87FAFFFE2021) >> 6) ^ 0x40044C436002408CLL)
      - (((v9 + 0x3EEF87FAFFFE2021) >> 5) & 0x7F767793FFB7EE6)
      + 2;
  uint64_t v11 = v10 - ((2 * v10 + 0x3DD6776F3FF7BF26) & 0x217DE5309423B2DCLL) - 0x7055D1B015F246FFLL;
  unint64_t v12 = ((2 * ((v11 ^ 0x90BEF2984A11D96ELL) + 0x301F1AB817992D55)) & 0x527FF7FF6C86EDDELL)
      + (((v11 ^ 0x90BEF2984A11D96ELL) + 0x301F1AB817992D55) ^ 0xA93FFBFFB64376EFLL);
  unint64_t v13 = v12
      + (((v12 + 0x56C0040049BC8911) >> 24) ^ 0x8514005D1886068)
      - (((v12 + 0x56C0040049BC8911) >> 23) & 0x1F45CEF3F2ELL);
  unint64_t v14 = v13
      + (((v13 + 0x4E6EC3FA783428A9) >> 14) ^ 0x2181A08408064FCLL)
      - (((v13 + 0x4E6EC3FA783428A9) >> 13) & 0x7CBEF7EFF3606);
  unint64_t v15 = v14
      + (((v14 + 0x4C56A9F237B3C3ADLL) >> 6) ^ 0xAC7BA0ECF7ED2CFELL)
      + (((v14 + 0x4C56A9F237B3C3ADLL) >> 5) & 0xF741D9EFDA59FCLL)
      + 2;
  unint64_t v16 = v15 - ((2 * v15 + 0x3FB6120A7F8D2D5ALL) & 0xEAE86454B4804144) + 0x154F3B2F9A06B74FLL;
  unint64_t v17 = ((2 * ((v16 ^ 0x7574322A5A4020A2) - 0x5C4C23E8A21DDE13)) & 0xFF3FBBDFFD51B8EALL)
      + (((v16 ^ 0x7574322A5A4020A2) - 0x5C4C23E8A21DDE13) ^ 0x7F9FDDEFFEA8DC75);
  unint64_t v18 = (((v17 - 0x7F9FDDEFFEA8DC75) >> 27) ^ 0xE367F2FE7F499FDFLL)
      + v17
      + (((v17 - 0x7F9FDDEFFEA8DC75) >> 26) & 0x3CFE933FBELL);
  unint64_t v19 = (((v18 - 0x6307D0EE7DF27C54) >> 12) ^ 0x7BFFBEFF7FEFFFDBLL)
      + v18
      + (((v18 - 0x6307D0EE7DF27C54) >> 11) & 0x1F7DFEFFDFFFB6);
  unint64_t v20 = v19
      + (((v19 + 0x20F87012021D83D1) >> 2) ^ 0x88C8D50028C44042)
      - (((v19 + 0x20F87012021D83D1) >> 1) & 0x6E6E55FFAE777F7ALL);
  LODWORD(v6) = v20 + 1311975575 + (~(2 * (v20 + 1) - 1296922852) | 0x164C35F1);
  unint64_t v21 = v20
      + 1
      + (((v20 - 0x544BE01A667A9023) >> 30) ^ 0x40804084304080CLL)
      - (((v20 - 0x544BE01A667A9023) >> 29) & 0x779F7EFE6);
  unint64_t v22 = v21
      + (((v21 - 0x5853E422A97E9830) >> 12) ^ 0x3826A0B224040980)
      - (((v21 - 0x5853E422A97E9830) >> 11) & 0x12BE9BB7F7ECFELL);
  unint64_t v23 = v22
      + (((v22 + 0x6F857B2B327D5E50) >> 7) ^ 0x540D102B300036)
      - (((v22 + 0x6F857B2B327D5E50) >> 6) & 0x357E5DFA99FFF92)
      + 3;
  uint64_t v24 = v23 - ((2 * v23 + 0x5E62DC360E9ABC2ELL) & 0x7A50F41BFA2E2E8CLL) - 0x53A617D6FB9B8AA3;
  unint64_t v25 = ((2 * ((v24 ^ 0x3D287A0DFD171746) + 0x3DEAA251E4C860FCLL)) & 0xEF6EFD9BDE2AE7DELL)
      + (((v24 ^ 0x3D287A0DFD171746) + 0x3DEAA251E4C860FCLL) ^ 0xF7B77ECDEF1573EFLL);
  unint64_t v26 = (((v25 + 0x848813210EA8C11) >> 31) ^ 0xFA3FDF7F5B5F59EFLL)
      + v25
      + (((v25 + 0x848813210EA8C11) >> 30) & 0x2B6BEB3DELL);
  unint64_t v27 = (((v26 + 0xE08A1B2B58B3222) >> 8) ^ 0x6F66F7FFFEE835EDLL)
      + v26
      + (((v26 + 0xE08A1B2B58B3222) >> 7) & 0xCDEFFFFDD06BDALL);
  unint64_t v28 = (((v27 - 0x615E564D495D03CBLL) >> 7) ^ 0x7FFCEFFEDFD5BF71)
      + v27
      + (((v27 - 0x615E564D495D03CBLL) >> 6) & 0x3F9DFFDBFAB7EE2);
  unint64_t v29 = v28 - ((2 * v28 + 0x3D497367AD9A7988) & 0x68F62DF03D80F4D6) - 0x2CE02F540A7248D1;
  unint64_t v30 = (v29 ^ 0x8A37D526F36D0EA4)
      + ((v29 >> 30) ^ 0xC015002A4DA1E3BLL)
      + ((v29 >> 29) & 0x6E7F56ABELL ^ 0xFFFFFFFBBE4BD7C9)
      - 0xC0150008C054A9FLL;
  unint64_t v31 = (((((2 * v30) & 0x7BBBBFCD3CFFDE66) + (v30 ^ 0x3DDDDFE69E7FEF33) - 0x3DDDDFE69E7FEF33) >> 13) ^ 0x5FFFF9D75FDFCD7FLL)
      + ((2 * v30) & 0x7BBBBFCD3CFFDE66)
      + (v30 ^ 0x3DDDDFE69E7FEF33)
      + (((((2 * v30) & 0x7BBBBFCD3CFFDE66) + (v30 ^ 0x3DDDDFE69E7FEF33) - 0x3DDDDFE69E7FEF33) >> 12) & 0xFF3AEBFBF9AFELL);
  unint64_t v32 = v31
      + (((v31 + 0x6222264201A0434ELL) >> 2) ^ 0x3001002202380)
      - (((v31 + 0x6222264201A0434ELL) >> 1) & 0x7FF9FFDFFBBFB8FELL);
  LODWORD(v6) = v6 ^ v3 ^ (v32 + 1 - ((2 * (v32 + 1) - 16760934) & 0xAEE80918) + 1458840665);
  int v33 = (v6 & 0x34EEE5CD ^ 0x142884C8) - ((2 * (v6 & 0x34EEE5CD ^ 0x142884C8)) & 0x2889099A) - 1638556433;
  LODWORD(v6) = ((v6 & 0xCB111A32 ^ 0xC0011032) - ((2 * (v6 & 0xCB111A32 ^ 0xC0011032)) & 0x221424) + 609970903) ^ 0x27586A23;
  unint64_t v34 = v32
      + 1
      + (((v32 + 0x309D26821377148ALL) >> 25) ^ 0x589834008C143440)
      - (((v32 + 0x309D26821377148ALL) >> 24) & 0xFEE7D7977ELL);
  LODWORD(v6) = ((v6 | 0x242DC32C) - (v6 | 0xDBD23CD3) - 606978861) ^ 0x243FD3E8 | v33 ^ 0x8A1F1CE2;
  unint64_t v35 = v34
      + (((v34 - 0x27FB0D7E789D1FB7) >> 9) ^ 0x7BF77D797FFDFE39)
      + (((v34 - 0x27FB0D7E789D1FB7) >> 8) & 0xEEFAF2FFFBFC72);
  unint64_t v36 = v35
      + ((v35 + 0x5C0D75080764E210) & 0xFBFAB7EF5F96E7FELL)
      + (((v35 + 0x5C0D75080764E210) >> 1) ^ 0xFDFD5BF7AFCB73FFLL)
      + 1;
  unint64_t v37 = v36 - ((2 * v36 - 0x43DFCDDF50CD23E0) & 0xE899B830513D3928) - 0x2DA30AD77FC7F55CLL;
  unint64_t v38 = ((2 * ((v37 ^ 0x744CDC18289E9C94) + 0x38FC44A9709D19CALL)) & 0xFFEFD3FFFEEFFDBELL)
      + (((v37 ^ 0x744CDC18289E9C94) + 0x38FC44A9709D19CALL) ^ 0x7FF7E9FFFF77FEDFLL);
  unint64_t v39 = v38
      + (((v38 - 0x7FF7E9FFFF77FEDFLL) >> 24) ^ 0xC38C399177920040)
      - (((v38 - 0x7FF7E9FFFF77FEDFLL) >> 23) & 0xDD10DBFF7ELL);
  unint64_t v40 = v39
      + (((v39 - 0x438423917709FF1FLL) >> 15) ^ 0xC4020900000302DLL)
      - (((v39 - 0x438423917709FF1FLL) >> 14) & 0x3BEDFFFFF9FA4);
  unint64_t v41 = v40
      + (((v40 - 0x4FC44421770A2F4CLL) >> 8) ^ 0xBDCCFFBCADDFDACBLL)
      + (((v40 - 0x4FC44421770A2F4CLL) >> 7) & 0x199FF795BBFB596)
      + 2;
  uint64_t v42 = v41 - ((2 * v41 + 0x24DD7843B62BEBCELL) & 0x2A6CFD59271E04C0) + 0x7A53ACE6EA4F847;
  unint64_t v43 = ((2 * ((v42 ^ 0x15367EAC938F0260) + 0x627FE9C2823FDEE7)) & 0xBEF7EF5AED75FFFELL)
      + (((v42 ^ 0x15367EAC938F0260) + 0x627FE9C2823FDEE7) ^ 0xDF7BF7AD76BAFFFFLL);
  unint64_t v44 = (((v43 + 0x2084085289450001) >> 29) ^ 0xFFF6EB75739F7778)
      + v43
      + (((v43 + 0x2084085289450001) >> 28) & 0xAE73EEEF0);
  unint64_t v45 = v44
      + (((v44 + 0x208D1CDD15A58889) >> 9) ^ 0x8250978028201040)
      - (((v44 + 0x208D1CDD15A58889) >> 8) & 0x5ED0FFAFBFDF7ELL);
  int v46 = ((v45 - 0x61C37AA3127A87B7) >> 5) - (((v45 - 0x61C37AA3127A87B7) >> 4) & 0x7FBC4066);
  LODWORD(v45) = ((2 * (v45 - 310020023)) & 0x766DFE26)
               + ((v45 - 310020023) ^ 0xBB36FF13)
               + ((v46 + 1071521843) ^ 0xC823DF84)
               + ((2 * (v46 + 1071521843)) & 0xEFFBFF6E ^ 0x6FB84066);
  int v47 = (v45 - ((2 * v45 - 1718222228) & 0xD4A96278) - 1222659470) ^ (v6 - ((2 * v6) & 0x56212718) - 1424977012);
  LODWORD(v6) = (((2 * (v47 & 7 ^ 2)) & 4) - (v47 & 7 ^ 2) + 222521261) ^ 0xD43712F;
  LODWORD(STACK[0x550]) = v47;
  LOBYTE(v45) = (v47 ^ 0x4F) + 1;
  LOBYTE(v47) = v45 ^ 6;
  LOBYTE(v45) = 2 * v45;
  int v48 = ((2 * v6) | 0xDCB8F832) - v6 + 295928807;
  LODWORD(v6) = ((_BYTE)v47 + (v45 & 4) + 2) & 7;
  LODWORD(v45) = v45 & 2;
  LODWORD(STACK[0x308]) = v6;
  LODWORD(STACK[0x268]) = v45;
  int v49 = v6 - v45 + 1435045793;
  if (v48 == -295933287) {
    int v50 = 0;
  }
  else {
    int v50 = 255;
  }
  LODWORD(STACK[0x374]) = v49;
  LODWORD(STACK[0x568]) = v49 ^ 0x55890FA1;
  int v51 = ((v50 << (v49 ^ 0xA1)) - ((2 * (v50 << (v49 ^ 0xA1))) & 0xFB) + 125);
  unsigned int v52 = (((-(v51 ^ 0xD6) - 1645525761) ^ 0xB10BD0F5 | 0x66A28745)
       - ((-(v51 ^ 0xD6) - 1645525761) ^ 0xB10BD0F5 | 0x995D78BA)
       - 1721927494) ^ 0x981AC209;
  LODWORD(STACK[0x3D8]) = v48;
  if (v48 == -295933287) {
    unsigned int v52 = -765931246;
  }
  BOOL v53 = LODWORD(STACK[0x548]) == -776490363;
  int v54 = STACK[0x4E0];
  if (LODWORD(STACK[0x548]) == -776490363) {
    int v54 = STACK[0x4C8];
  }
  LODWORD(STACK[0x248]) = v54;
  int v55 = STACK[0x4A8];
  if (!v53) {
    int v55 = STACK[0x47C];
  }
  LODWORD(STACK[0x3E8]) = v55;
  int v56 = STACK[0x454];
  if (!v53) {
    int v56 = STACK[0x450];
  }
  LODWORD(STACK[0x358]) = v56;
  int v57 = STACK[0x348];
  if (v53) {
    int v57 = STACK[0x320];
  }
  LODWORD(STACK[0x298]) = v57;
  int v58 = STACK[0x3D4];
  if (!v53) {
    int v58 = STACK[0x29C];
  }
  LODWORD(STACK[0x294]) = v58;
  int v59 = STACK[0x3D0];
  if (!v53) {
    int v59 = STACK[0x3CC];
  }
  LODWORD(STACK[0x29C]) = v59;
  int v60 = STACK[0x430];
  if (v53) {
    int v60 = STACK[0x3DC];
  }
  LODWORD(STACK[0x270]) = v60;
  LODWORD(STACK[0x320]) = LODWORD(STACK[0x284]) - LODWORD(STACK[0x288]);
  if (STACK[0x4C0]) {
    int v61 = STACK[0x28C];
  }
  else {
    int v61 = STACK[0x37C];
  }
  BOOL v62 = (STACK[0x4C0] & 2) == 0;
  int v63 = STACK[0x378];
  if ((STACK[0x4C0] & 2) != 0) {
    int v63 = STACK[0x258];
  }
  LODWORD(STACK[0x284]) = v63;
  int v64 = STACK[0x278];
  if (v62) {
    int v64 = STACK[0x250];
  }
  LODWORD(STACK[0x278]) = v64;
  int v65 = v29 ^ v16;
  unsigned int v66 = v24 ^ v11 ^ v4 ^ v37;
  unsigned int v67 = v65 ^ a3 ^ v42;
  LODWORD(STACK[0x450]) = ((2 * (v66 & 0xFFFFFF80 ^ 0xCC8A1D84)) | 0x9973EE06) - (v66 & 0xFFFFFF80 ^ 0xCC8A1D84);
  int v68 = ((v51 ^ 0x5F) - ((2 * (v51 ^ 0x5F)) & 0x30) + 4888) ^ 0x133A;
  LODWORD(STACK[0x3CC]) = (33686018 * v68) & 0x32B68E26;
  LODWORD(STACK[0x378]) = 16843009 * v68 + 425412371;
  int v69 = ((452984832 * v68 - ((905969664 * v68) & 0x6C000000) + 913300291) ^ 0x366FDB43) & (v67 ^ 0x2D8241C1);
  LODWORD(STACK[0x240]) = v69 - ((2 * v69) & 0xE000000) - 2016149605;
  LODWORD(STACK[0x24C]) = (~(2
                           * ((((v66 ^ 0xC8D0C49F ^ v52) + 1) ^ 0xB3)
                            + ((v52 ^ 0xD258D112 | v66 ^ 0xD90E0472) ^ 0xBE)
                            + ((2 * ((v66 ^ 0xC8D0C49F ^ v52) + 1)) & 0x66)
                            + ((2 * (v52 ^ 0xD258D112 | v66 ^ 0xD90E0472)) & 0x7C)
                            + 143)) | 0xFFFFFEAD)
                        + ((((v66 ^ 0x9F ^ v52) + 1) ^ 0xB3)
                                          + ((v52 ^ 0x12 | v66 ^ 0x72) ^ 0xBE)
                                          + ((2 * ((v66 ^ 0x9F ^ v52) + 1)) & 0x66)
                                          + ((2 * (v52 ^ 0x12 | v66 ^ 0x72)) & 0x7C)
                                          - 113)
                        + 2022818218;
  unsigned int v70 = BYTE2(v66) ^ HIBYTE(v66) ^ (v66 | 0x37CD500) ^ 0xD26CDD36 ^ (((v66 >> 8) & 0xC6 ^ 0xD1100885)
                                                                                    + ((v66 >> 8) & 0x39)
                                                                                    - 1);
  unsigned int v71 = 16843009 * v70 - ((33686018 * v70) & 0xE8977E04) + 1951121154;
  LODWORD(STACK[0x454]) = v67;
  int v72 = HIBYTE(v67) ^ 0x401015C1 ^ (((v67 ^ (v67 >> 8) ^ HIWORD(v67)) & 0x6E ^ 0x40101541)
                                  + ((v67 ^ (v67 >> 8) ^ HIWORD(v67)) & 0x91)
                                  - 1);
  int v73 = 16843009 * v72 - ((33686018 * v72) & 0x244BC178) - 1843011396;
  int v74 = *(void *)(STACK[0xA30]
                  + 8
                  * ((*(void *)(STACK[0xA30]
                                + 8
                                * ((*(void *)(STACK[0xA30] + 8 * ((*(_DWORD *)STACK[0xA30] & 1) == 0)) & 1) == 0)) & 1) == 0)) & 1;
  unsigned int v75 = ((~(2 * v74) + v74 - 1526184742) ^ 0xFF97CF36)
      - 815712825
      + ((2 * (~(2 * v74) + v74 - 1526184742)) & 0x10019E ^ 0x100192);
  LODWORD(STACK[0x4E0]) = v66;
  int v76 = v66 & 0x7F ^ 2;
  LODWORD(STACK[0x4C8]) = 33686018 * v76;
  LODWORD(STACK[0x47C]) = (33686018 * v76) & 0xC4E0A262;
  int v77 = STACK[0x3C4];
  LODWORD(STACK[0x348]) = v61;
  if (!v62) {
    int v77 = v61;
  }
  LODWORD(STACK[0x28C]) = v77;
  int v78 = STACK[0x3A0];
  if (v62) {
    int v78 = STACK[0x39C];
  }
  LODWORD(STACK[0x288]) = v78;
  LODWORD(STACK[0x430]) = v76;
  LODWORD(STACK[0x23C]) = 16843009 * v76 - 495955663;
  LODWORD(STACK[0x3D4]) = v71;
  LODWORD(STACK[0x3D0]) = v73;
  LODWORD(STACK[0x4A8]) = v73 ^ v71;
  BOOL v79 = v75 > 0x2A00C1B7;
  if (v75 < 0x2A00C1B6) {
    BOOL v79 = 1;
  }
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((118 * v79) ^ STACK[0x570])))();
}

uint64_t sub_1001BC308()
{
  unsigned int v2 = v1 - 839;
  BOOL v3 = LODWORD(STACK[0x548]) == -776490363;
  int v4 = STACK[0x558];
  if (LODWORD(STACK[0x548]) != -776490363) {
    int v4 = STACK[0x4F0];
  }
  LODWORD(STACK[0x3DC]) = v4;
  int v5 = STACK[0x4E8];
  if (!v3) {
    int v5 = STACK[0x4D0];
  }
  LODWORD(STACK[0x258]) = v5;
  int v6 = STACK[0x4B8];
  if (v3) {
    int v6 = STACK[0x4B0];
  }
  LODWORD(STACK[0x37C]) = v6;
  int v7 = STACK[0x49C];
  if (!v3) {
    int v7 = STACK[0x498];
  }
  LODWORD(STACK[0x250]) = v7;
  BOOL v8 = (STACK[0x4C0] & 2) == 0;
  int v9 = STACK[0x274];
  if ((STACK[0x4C0] & 2) != 0) {
    int v9 = STACK[0x264];
  }
  LODWORD(STACK[0x274]) = v9;
  int v10 = STACK[0x3A0];
  if (!v8) {
    int v10 = STACK[0x39C];
  }
  LODWORD(STACK[0x264]) = v10;
  int v11 = STACK[0x380];
  if (!v8) {
    int v11 = STACK[0x260];
  }
  LODWORD(STACK[0x260]) = v11;
  int v12 = STACK[0x4E0];
  LODWORD(STACK[0x498]) = LODWORD(STACK[0x4E0]) ^ 0x864A9377;
  LODWORD(STACK[0x47C]) = LODWORD(STACK[0x23C]) - LODWORD(STACK[0x47C]);
  int v13 = LODWORD(STACK[0x378]) - LODWORD(STACK[0x3CC]);
  LODWORD(STACK[0x380]) = v13;
  LODWORD(STACK[0x49C]) = LODWORD(STACK[0x240]) ^ v13;
  LODWORD(STACK[0x218]) = (v1 - 1428680142) ^ LODWORD(STACK[0x4A8]);
  LODWORD(STACK[0x3A0]) = v12 ^ 0x3A801845;
  STACK[0x570] = v2 ^ 0x68A;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (int)(v2 ^ 0x33A ^ (113 * ((v0 + (unint64_t)v2) >> 32)))))();
}

void sub_1001BCB20()
{
}

#error "1001C2364: call analysis failed (funcsize=3576)"

uint64_t sub_1001C236C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  LODWORD(STACK[0x3BC]) = a76 - LODWORD(STACK[0x36C]);
  int v77 = LODWORD(STACK[0x560]) ^ LODWORD(STACK[0x370]) ^ LODWORD(STACK[0x498]) ^ a75;
  LODWORD(STACK[0x370]) = a52 ^ LODWORD(STACK[0x480]);
  LODWORD(STACK[0x3C4]) = v77 ^ a74 ^ a73 ^ a72 ^ a70 ^ a68 ^ a65 ^ a66 ^ a51 ^ a50 ^ a60 ^ a59 & 0xDF03F2AC;
  unsigned int v78 = a53 ^ LODWORD(STACK[0x550]) ^ a54 ^ a67 ^ LODWORD(STACK[0x24C]) ^ a62 ^ a61 ^ a55 ^ a49 & 0xDF1BF6BC;
  LODWORD(STACK[0x24C]) = v78;
  LODWORD(STACK[0x36C]) = v78 ^ 0xD8424A6D;
  STACK[0x570] = v76 ^ 0x415u;
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + ((((a8 - 1816423545) > 1) | (16
                                                                                      * ((a8 - 1816423545) > 1))) ^ v76)))(213616);
}

void sub_1001C2F54()
{
}

uint64_t sub_1001C2F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int v67 = LODWORD(STACK[0x478]) ^ LODWORD(STACK[0x204]);
  LODWORD(STACK[0x204]) = a64 - a65;
  unint64_t v68 = (v66 ^ 0xC4B876F2AEE1A5ECLL)
      + ((v66 >> 27) ^ 0x140B21885F0EBFD4)
      + ((v66 >> 26) & 0x1E6FFF3CFCLL ^ 0xFFFFFFEFD1E2C357)
      - 0x140B2190C8006180;
  unint64_t v69 = ((2 * v68) & 0x5EB78F5D7FD5D7FCLL)
      + (v68 ^ 0x2F5BC7AEBFEAEBFELL)
      + (((((2 * v68) & 0x5EB78F5D7FD5D7FCLL) + (v68 ^ 0x2F5BC7AEBFEAEBFELL) - 0x2F5BC7AEBFEAEBFELL) >> 14) ^ 0xCEA18405C50A000ALL)
      - (((((2 * v68) & 0x5EB78F5D7FD5D7FCLL) + (v68 ^ 0x2F5BC7AEBFEAEBFELL) - 0x2F5BC7AEBFEAEBFELL) >> 13) & 0x4F7F475EBFFEALL);
  unint64_t v70 = v69
      + (((v69 + 0x202B44B7B0B13F8) >> 6) ^ 0xCAA0233001D02AB0)
      - (((v69 + 0x202B44B7B0B13F8) >> 5) & 0x2BFB99FFC5FAA9ELL)
      + 2;
  uint64_t v71 = v70 - ((2 * v70 + 0x2EC52236F275D28CLL) & 0x321180D0336A34EELL) + 0x506B518392F003BDLL;
  unint64_t v72 = ((2 * ((v71 ^ 0x1908C06819B51A77) + 0x301F1AB817992D55)) & 0xFFFEBFFCDF7BEFF2)
      + (((v71 ^ 0x1908C06819B51A77) + 0x301F1AB817992D55) ^ 0xFFFF5FFE6FBDF7F9);
  unint64_t v73 = v72
      + (((v72 + 0xA00190420807) >> 24) ^ 0x8590A0082044610ELL)
      - (((v72 + 0xA00190420807) >> 23) & 0x1EFBF773DE2);
  unint64_t v74 = v73
      + (((v73 + 0x7A6FFFF96FFDA6F9) >> 14) ^ 0x1412800820078808)
      - (((v73 + 0x7A6FFFF96FFDA6F9) >> 13) & 0x2FFEFBFF0EFEELL);
  unint64_t v75 = v74
      + (((v74 + 0x665D7FF14FF61EF1) >> 6) ^ 0xEEFBBB7BFB5477EFLL)
      + (((v74 + 0x665D7FF14FF61EF1) >> 5) & 0x5F776F7F6A8EFDELL);
  unint64_t v76 = (((v75 + 0x1B15A08CB283C8EFLL) >> 27) ^ 0x7EB41FCF7ADD75DELL)
      + v75
      + 2
      + (((v75 + 0x1B15A08CB283C8EFLL) >> 26) & 0x1EF5BAEBBCLL);
  unint64_t v77 = (((v76 - 0x639E7F42C859ACF1) >> 12) ^ 0x4AB3BFB27AD5CFE9)
      + v76
      + (((v76 - 0x639E7F42C859ACF1) >> 11) & 0x77F64F5AB9FD2);
  unint64_t v78 = v77
      + (((v77 + 0x51ADC10ABCD08326) >> 2) ^ 0x98100A1000440070)
      - (((v77 + 0x51ADC10ABCD08326) >> 1) & 0x4FDFEBDFFF77FF1ELL);
  int v79 = 2 * (v78 + 1);
  int v80 = 4 * (v78 + 1 - ((v79 + 18417002) & 0x4356372));
  unsigned int v81 = (((v80 - 90385992) ^ 0x86AC6E4)
       - 2 * (((v80 - 90385992) ^ 0x86AC6E4) & 0x44F88638 ^ ((_BYTE)v80 + 56) & 8)
       - 990345678) & 0x9A6FB9D0 ^ 0x887A80F2;
  int v82 = v81 - ((2 * v81) & 0x402300) + 606098305;
  int v83 = v78 + 1 - ((v79 + 957941098) & 0x25214DF4) - 820172369;
  unint64_t v84 = v78
      + 1
      + (((v78 - 0x32DDC431834750FCLL) >> 30) ^ 0x41071E04812193)
      - (((v78 - 0x32DDC431834750FCLL) >> 29) & 0x3F6FDBCD8);
  unint64_t v85 = v84
      + (((v84 - 0x331ECB4F87C87290) >> 12) ^ 0x18C020502005210)
      - (((v84 - 0x331ECB4F87C87290) >> 11) & 0x7FBF5FBFF5BDELL);
  unint64_t v86 = v85
      + (((v85 - 0x34AACD5489C8C4A0) >> 7) ^ 0x42B8C80AA2902820)
      - (((v85 - 0x34AACD5489C8C4A0) >> 6) & 0x28E6FEABADFAFBELL)
      + 3;
  unint64_t v87 = v86 - ((2 * v86 + 0x1138D541A74E267ALL) & 0xD0BFBD32A427A0DELL) + 0x70FC493A25BAE3ACLL;
  unint64_t v88 = ((2 * ((v87 ^ 0xE85FDE995213D06FLL) + 0x3DEAA251E4C860FCLL)) & 0x77FAB8E66FE8FFFELL)
      + (((v87 ^ 0xE85FDE995213D06FLL) + 0x3DEAA251E4C860FCLL) ^ 0x3BFD5C7337F47FFFLL);
  unint64_t v89 = (((v88 - 0x3BFD5C7337F47FFFLL) >> 31) ^ 0x6F77F9CBB7FDF7DBLL)
      + v88
      + (((v88 - 0x3BFD5C7337F47FFFLL) >> 30) & 0x36FFBEFB6);
  unint64_t v90 = (((v89 + 0x548AA9C1100D8826) >> 8) ^ 0xEFDFDFF77EFBDC7BLL)
      + v89
      + (((v89 + 0x548AA9C1100D8826) >> 7) & 0x1BFBFEEFDF7B8F6);
  unint64_t v91 = (((v90 + 0x64AAC9C99111ABABLL) >> 7) ^ 0x768B9AE756DCF7F7)
      + v90
      + (((v90 + 0x64AAC9C99111ABABLL) >> 6) & 0x11735CEADB9EFEELL);
  unint64_t v92 = v91 - ((2 * v91 + 0x5C3E5DC474696768) & 0x7148E65BB7D120E2) - 0x593C5DEFE9E2BBDBLL;
  unint64_t v93 = (v92 ^ 0x86E8B0F33645E4BELL)
      + ((v92 >> 30) ^ 0x49D945B1AE6E254)
      + ((v92 >> 29) & 0x5FD77BCCELL ^ 0xFFFFFFFBCABA7B77)
      - 0x49D945901442197;
  unint64_t v94 = (((((2 * v93) & 0x7DEBF9D37AECFDEALL) + (v93 ^ 0x3EF5FCE9BD767EF5) - 0x3EF5FCE9BD767EF5) >> 13) ^ 0xE79FF75FEB7FBFF8)
      + ((2 * v93) & 0x7DEBF9D37AECFDEALL)
      + (v93 ^ 0x3EF5FCE9BD767EF5)
      + (((((2 * v93) & 0x7DEBF9D37AECFDEALL) + (v93 ^ 0x3EF5FCE9BD767EF5) - 0x3EF5FCE9BD767EF5) >> 12) & 0xFEEBFD6FF7FF0);
  unint64_t v95 = v94
      + (((v94 - 0x2695F449A8F63EEDLL) >> 2) ^ 0x28C2443280004E34)
      - (((v94 - 0x2695F449A8F63EEDLL) >> 1) & 0x2E7B779AFFFF6396)
      + 1;
  uint64_t v96 = v95 - ((2 * v95 + 0x614F8F07AE12E5BCLL) & 0x532F0CEC3CB27762) - 0x25C0B2060A9D5171;
  int v97 = ((4 * v96) ^ 0x7964EEC4) - ((2 * ((4 * v96) ^ 0x7964EEC4)) & 0x50792F88) + 675059654;
  unsigned int v98 = ((v97 & 0x22938D0 ^ 0x26A95EB5 | v97 & 0x98468100) - 1) ^ 0x2AF76F7D;
  int v99 = (((2 * v98) | 0x41485962) - v98 + 1599853391) ^ v96;
  unint64_t v100 = ((2 * ((v96 ^ 0x299786761E593BB1) - 0x3181FFAFEC090B44)) & 0xF57B4766CFFF9EF6)
       + (((v96 ^ 0x299786761E593BB1) - 0x3181FFAFEC090B44) ^ 0x7ABDA3B367FFCF7BLL);
  unint64_t v101 = v100
       + (((v100 - 0x7ABDA3B367FFCF7BLL) >> 25) ^ 0x865CE00280400240)
       - (((v100 - 0x7ABDA3B367FFCF7BLL) >> 24) & 0xFAFF7FFB7ELL);
  unint64_t v102 = v101
       + (((v101 - 0x11A83B5E83FD1BBLL) >> 9) ^ 0x777EBDDEDAFDFFFFLL)
       + (((v101 - 0x11A83B5E83FD1BBLL) >> 8) & 0xFD7BBDB5FBFFFELL);
  int v103 = LODWORD(STACK[0x550]) ^ LODWORD(STACK[0x248]) ^ LODWORD(STACK[0x458]);
  unsigned int v104 = ((v103 & 0x6A46EBBD ^ 0x4246E091)
        + (v103 & 0x60406B14 ^ 0x20991B44)
        - ((v103 & 0x6A46EBBD ^ 0x4246E091) & 0x60406B14)) ^ 0x84593A06;
  unsigned int v105 = ((v104 | 0x69841C73) - (v104 | 0x967BE38C) - 1770265716) ^ 0xE7041C31 | (((2 * (v103 & 0x95B91442 ^ 0x422C7E5E)) | 0x69C36830)
                                                                                - (v103 & 0x95B91442 ^ 0x422C7E5E)
                                                                                + 1260276712) ^ 0x76D5DA44;
  unsigned int v106 = v105 - ((2 * v105) & 0xC890CBF4) - 465017350;
  unint64_t v107 = v102
       + ((v102 - 0x78994194C33DD1BALL) & 0xE60BFD53CFD2D3EELL)
       + (((v102 - 0x78994194C33DD1BALL) >> 1) ^ 0x7305FEA9E7E969F7)
       + 1;
  LODWORD(v102) = ((4 * v106) ^ 0x912197E8)
                + 657943968
                - 2 * (((4 * v106) ^ 0x912197E8) & 0x27376DB4 ^ (4 * v106) & 0x10)
                + 4;
  int v108 = (v103 & 0x10 | (32 * (((v103 & 0x10) >> 4) & 1))) ^ 0x7FDF6CDA;
  BOOL v109 = ((v102 ^ 0x27376DA0) & (v108 - 2145348826)) == ((2
                                                                      * ((v102 ^ 0x27376DA0) & (v108 - 2145348826))) & 0x80590FA0);
  uint64_t v110 = v107 - ((2 * v107 + 0x28C17F82A9B1889CLL) & 0x70AC0240598F734ELL) - 0x33493F1E7E5F820BLL;
  uint64_t v111 = ((2 * v110) ^ 0x70AC0240598F734ELL)
       - ((2 * ((2 * v110) ^ 0x70AC0240598F734ELL)) & 0x4C268AF1CE9FC8E8)
       - 0x19ECBA8718B01B8BLL;
  unint64_t v112 = (v110 ^ 0x80AA45895C5AA06DLL)
       + (v111 & 0x71F88952E13A3394 ^ 0x7EB8EEF9DE11A22)
       + ((2 * v111) & 0xC3F11224C0546428 ^ 0xC0200220C0144028)
       - 0x67FB8FBF7CEB3A36;
  unint64_t v113 = ((2 * v112) & 0xBDFBA7F1FAFBFE7CLL)
       + (v112 ^ 0x5EFDD3F8FD7DFF3ELL)
       + (((((2 * v112) & 0xBDFBA7F1FAFBFE7CLL) + (v112 ^ 0x5EFDD3F8FD7DFF3ELL) - 0x5EFDD3F8FD7DFF3ELL) >> 24) ^ 0x803C201A81020011)
       - (((((2 * v112) & 0xBDFBA7F1FAFBFE7CLL) + (v112 ^ 0x5EFDD3F8FD7DFF3ELL) - 0x5EFDD3F8FD7DFF3ELL) >> 23) & 0x1CAFDFBFFDCLL);
  unint64_t v114 = v113
       + (((v113 + 0x20C60BEC818000B1) >> 15) ^ 0x10224972A08C4A18)
       - (((v113 + 0x20C60BEC818000B1) >> 14) & 0x36D1ABEE76BCELL);
  unint64_t v115 = v114
       + (((v114 + 0x10A3C279E0F3B699) >> 8) ^ 0xF5AF9A9FFBAC53BDLL)
       + (((v114 + 0x10A3C279E0F3B699) >> 7) & 0x15F353FF758A77ALL);
  int v116 = v115 + 2;
  LODWORD(v107) = 2 * (v115 + 2);
  unint64_t v117 = (((v115 + 0x7D74119C678741C3) >> 29) ^ 0x7BBB73B7F92FAE2CLL)
       + v115
       + 2
       + (((v115 + 0x7D74119C678741C3) >> 28) & 0xFF25F5C58);
  unint64_t v118 = v117
       + (((v117 + 0x1B89DE46E579395) >> 9) ^ 0xD4D106E808E05C8DLL)
       - (((v117 + 0x1B89DE46E579395) >> 8) & 0x5DF22FEE3F46E4);
  LODWORD(v118) = v118
                + (((v118 + 0x2CE796FC65773708) >> 5) ^ 0xFD7F7FFF)
                + (((v118 + 0x2CE796FC65773708) >> 4) & 0xFAFEFFFE);
  LODWORD(v110) = v118 + 1;
  int v119 = v118 - 231143930 + ~(2 * ((v118 + 133674761) & 0xA414EFE ^ (v118 + 1) & 2));
  int v120 = 4 * (v116 + (~(v107 + 177128884) | 0x5A42B9F)) - 1982516180;
  unsigned int v121 = ((((v120 ^ 0xF4B7A8C0) - 2 * ((v120 ^ 0xF4B7A8C0) & 0x7D820E7C ^ v120 & 4) + 2105675385) & 0x9A6FB9D0 ^ 0x3A5FA747)
        - 1) ^ 0xB3BBEF3A;
  unsigned int v122 = (4 * (LODWORD(STACK[0x560]) ^ LODWORD(STACK[0x468]) ^ LODWORD(STACK[0x498]))) ^ 0x89B20620;
  unsigned int v123 = v122 - ((2 * v122) & 0xA4339970) - 770061125;
  LODWORD(v107) = (4 * (v110 - ((2 * v110 + 133131792) & 0x4801E3E)) - 1461774180) ^ 0x9003C7C;
  int v124 = (v107 - ((2 * v107) & 0xE9B32A18) - 187067124) & 0x98043800 ^ 0xFD147629 | (v107
                                                                                   - ((2 * v107) & 0xE9B32A18)
                                                                                   - 187067124) & 0x26B81D0;
  int v125 = (4 * (LODWORD(STACK[0x4F8]) ^ LODWORD(STACK[0x3E0]) ^ LODWORD(STACK[0x4D8]))) ^ 0x67496394;
  unsigned int v126 = ((v125 - ((2 * v125) & 0x79D56418) + 1022013967) & 0xA6110D0 ^ 0x66E100DD)
       + ((v125 - ((2 * v125) & 0x79D56418) + 1022013967) & 0x900EA900 ^ 0x1002A801)
       - 2;
  unsigned int v127 = v126 & 0x92251140 ^ 0x90A4430B | v126 & 0x84AA890;
  int v128 = ((2 * v102) & 0x344F5380 ^ 0x44E5300) + (v102 & 0x9A6FB9D0 ^ 0xF990C26F);
  unsigned int v129 = (v106 & 0xFFFFFFEF ^ 0x596AAF6F)
       + (v106 & 0xDF4C10E1 ^ 0x86041080)
       - ((v106 & 0xFFFFFFEF ^ 0x596AAF6F) & 0xDF4C10E1);
  int v130 = v108 - 286351432;
  int v131 = -290621076 - v108;
  if (v109) {
    int v131 = v130;
  }
  LODWORD(a56) = v123 & 0x9A6FB9D0;
  unsigned int v132 = (((4 * LODWORD(STACK[0x454])) ^ 0xA3489610)
        - 2 * (((4 * LODWORD(STACK[0x454])) ^ 0xA3489610) & 0xBCB2F44 ^ (4 * LODWORD(STACK[0x454])) & 4)
        - 1949618367) & 0x9A6FB9D0 ^ 0x8EEA394A;
  int v133 = LODWORD(STACK[0x458]) ^ LODWORD(STACK[0x248]) ^ (((2 * v132) | 0x700F6100) - v132 + 1207455616) ^ v129 ^ LODWORD(STACK[0x3BC]) ^ (v128 + v131 - ((2 * (v128 + v131) + 720637694) & 0x6063545A) + 1168880044) ^ v65;
  LODWORD(STACK[0x350]) = LODWORD(STACK[0x3B0]) ^ 0xD72CF292;
  LODWORD(STACK[0x358]) = LODWORD(STACK[0x3C4]) ^ 0x50EE4D89;
  HIDWORD(a55) = v127 - 1;
  int v134 = v133 ^ v83 ^ v82 ^ v99 ^ v119 ^ (v124 - 1);
  LODWORD(STACK[0x248]) = v134;
  LODWORD(STACK[0x348]) = v134 ^ 0xD3694FAB;
  LODWORD(STACK[0x550]) = LODWORD(STACK[0x4B0]) ^ 0xDDAD66E9;
  unsigned int v135 = LODWORD(STACK[0x3D8]) ^ 0xFFFFFF99;
  int v136 = LODWORD(STACK[0x340]) ^ 0xF4;
  LODWORD(STACK[0x4F8]) = LODWORD(STACK[0x4A8]) ^ 0x61CA86BA;
  int v137 = LODWORD(STACK[0x450]) ^ LODWORD(STACK[0x244]) ^ 0x7E2C1B0D;
  LODWORD(STACK[0x478]) = v67;
  LODWORD(STACK[0x560]) = v67 ^ 0x80E1024D;
  LODWORD(STACK[0x450]) = v121;
  LODWORD(STACK[0x3BC]) = 2 * v121;
  unint64_t v138 = STACK[0xA38];
  unint64_t v139 = STACK[0x570];
  int v140 = ((((723531132 << (STACK[0x570] - 115)) - 32) ^ 0x56406AD8) - 160602496) ^ 0x203178C7;
  unsigned __int8 v141 = ((v140 ^ 0x47) & LOBYTE(STACK[0x550])) - ((2 * ((v140 ^ 0x47) & LOBYTE(STACK[0x550]))) & 0xDA) + 109;
  unsigned int v142 = ((1434178613 - (v141 ^ 0xC) + ((2 * (v141 ^ 0xC)) & 0x194)) ^ 0x557BD454u) >> STACK[0x558];
  unsigned int v143 = (v142 - ((2 * v142) & 0x40) + 32) ^ 0x20 | (((v140 ^ 0x47) << v135) - ((v140 ^ 0x47u) << v135 >> 5 << 6) + 96) ^ 0x60;
  char v144 = v143 + (~(2 * v143) | 0xDB);
  int v145 = (2 * ((STACK[0x4F0] & 0x1AB4AEAE) - ((2 * (STACK[0x4F0] & 0x1AB4AEAE)) & 0xD906F74)) + 227569524) ^ 0xD906F74;
  unsigned int v146 = (v145 - ((2 * v145) & 0xCDD10898) + 1726514252) ^ 0x7C5C2AE2;
  unsigned int v147 = (((v146 & STACK[0x4F8]) + 863603758 - ((2 * (v146 & STACK[0x4F8])) & 0x66F3185C)) ^ 0x33798C2E) >> LODWORD(STACK[0x568]);
  unsigned int v148 = (((v146 & STACK[0x560]) - 91681788 - ((2 * (v146 & STACK[0x560])) & 0xF5121808)) ^ 0xFA890C04) << LODWORD(STACK[0x548]);
  unsigned int v149 = LODWORD(STACK[0x4E0]) ^ LODWORD(STACK[0x4D8]) ^ (v148 - ((2 * v148) & 0x274A0176) + 329580731) ^ (v147 - ((2 * v147) & 0xA644EEBA) + 1394767709) ^ 0xDC88C624;
  unint64_t v150 = STACK[0xA10];
  uint64_t v151 = 4 * (v136 ^ (v144 - 109));
  *(_DWORD *)(STACK[0xA10] + v151) = v149;
  *(_DWORD *)(v138 + v151) = v137 ^ 0x9F288C61;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + (int)v139))(v150, v151, 1394767709, v138, 2191054492, 4203285508, v139, 4269169638, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

void sub_1001C4914()
{
}

#error "1001C491C: too big function (funcsize=0)"

uint64_t sub_1001D8AB8@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t, unint64_t))(a1 + 8 * a2))(0x5F5D9DFCE6EFFCF6, 0xD05131018C880185);
}

void sub_1001D8B80()
{
}

uint64_t sub_1001D8B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((1978 * (v5 == ((v4 ^ 0x2C) - 73))) ^ v4)))();
}

uint64_t sub_1001D8BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x788] += 16;
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((83 * (((v5 + (_BYTE)v4 + 13 - 115) & 0xF) != 2 * ((v5 + (_BYTE)v4 + 13 - 115) & 7))) ^ (v4 + 158))))();
}

uint64_t sub_1001D8C44()
{
  STACK[0x570] = (unint64_t)&STACK[0xA90] + v2;
  *(_OWORD *)((char *)&STACK[0xA90] + v2) = xmmword_10021F880;
  unsigned int v3 = 1755343967 * ((v1 ^ *(_DWORD *)(qword_100284C30 + (dword_100284A28 & 0x561E13BC))) & 0x7FFFFFFF);
  *((unsigned char *)&STACK[0x14E0] + STACK[0x9B0]) = byte_100245BA0[16
                                                           * ((1755343967 * ((v3 >> ((23 * (v0 ^ 0x46)) ^ 0x85)) ^ v3)) >> 24)] ^ *v1 ^ (95 * ((v3 >> ((23 * (v0 ^ 0x46)) ^ 0x85)) ^ v3));
  return ((uint64_t (*)(void))*(&off_10026D1A0 + v0))();
}

void sub_1001D8D50()
{
}

uint64_t sub_1001D8D58@<X0>(int a1@<W0>, unint64_t a2@<X8>)
{
  STACK[0x9B0] = v2 + ((8 * a1) ^ 0x2380u) - 1800;
  STACK[0xA40] = a2;
  STACK[0xA48] = v3;
  STACK[0xA60] = a2;
  STACK[0xA50] = a2;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (a1 | (8 * (STACK[0x570] == a2)) | ((STACK[0x570] == a2) << 9))))();
}

uint64_t sub_1001D8DB0@<X0>(int a1@<W0>, uint64_t a2@<X3>, char *a3@<X8>)
{
  int v4 = (char *)&STACK[0x14E0] + v3;
  *int v4 = *a3;
  v4[1] = a3[1];
  v4[2] = a3[2];
  v4[3] = a3[3];
  v4[4] = a3[4];
  v4[5] = a3[5];
  v4[6] = a3[6];
  v4[7] = a3[7];
  v4[8] = a3[8];
  v4[9] = a3[9];
  v4[10] = a3[10];
  v4[11] = a3[11];
  v4[12] = a3[12];
  v4[13] = a3[13];
  v4[14] = a3[14];
  char v5 = a3[15];
  STACK[0x570] = (unint64_t)v4;
  v4[15] = v5;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((171 * (((a3 == 0) ^ (((a1 - 89) & 0xEB) + 65)) & 1)) ^ (a1 - 585196889) & 0x22E167EB)))();
}

uint64_t sub_1001D8E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7 = (v4 - 1147573553) & 0x44668F6E;
  BOOL v9 = v6 == -1146572414
    || (v6 & 0xE) + (v6 & 0xF ^ 0xFFFFFFFE) + ((v5 + (v7 ^ 0x5EE) + 672) ^ 0x1A25D718 | v6 & 0xF) != 1161137265;
  return (*(uint64_t (**)(void))(a4 + 8 * ((195 * v9) ^ v7)))();
}

uint64_t sub_1001D8F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x568]) = v5;
  LODWORD(STACK[0x3D0]) = v4;
  int v7 = (v6 - 1569220777) & 0x5D886765;
  STACK[0xA58] = 0;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v6 + 971)))(1032);
  STACK[0xA68] = v8;
  uint64_t v9 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v6 ^ 0xCDBu)))(1032);
  STACK[0xA58] = v9;
  if (v8) {
    BOOL v12 = v9 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  int v13 = !v12;
  LODWORD(STACK[0x560]) = v7;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + ((v13 * ((v6 ^ 0x52D) + v7 - 955)) ^ v6)))(v9, v10, v11);
}

#error "1001D8FB4: too big function (funcsize=0)"

void sub_1001E9070()
{
}

uint64_t sub_1001E907C()
{
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + (int)((58
                                                  * ((*(unsigned int *)(STACK[0x580] + 112) ^ 0x6C7F9FF1A4CE3DC5)
                                                   - 0x6C7F9FF10517CCB0
                                                   + ((v0 ^ 0x1FBBDD91ELL) & (2
                                                                            * (*(_DWORD *)(STACK[0x580] + 112) ^ 0x5910D29Eu))) != 4173800107)) ^ (v0 - 725))))(0x7CE71BA66064733FLL);
}

uint64_t sub_1001E914C(uint64_t a1)
{
  BOOL v9 = v4 < v1;
  *(unsigned char *)(v7 + v8 - 0x22DCFC8A43EDC37) = *(unsigned char *)(v6 + v3 - 0x7CA649BC926593ABLL) - 66;
  uint64_t v10 = a1 + 392 * (v2 ^ 0x4D6u);
  unint64_t v11 = a1 - 0x7CE71BA5679D5093;
  uint64_t v12 = v10 - 1959;
  int v13 = v9 ^ (v11 < v1);
  BOOL v14 = v11 < v4;
  if (!v13) {
    BOOL v9 = v14;
  }
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + ((v9 * v5) ^ v2)))(v12);
}

uint64_t sub_1001E91F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * (int)((v8 + 1381727937) ^ 0x525B8159 ^ (((((dword_1002846DC - (v8 + 1381727937)) | (v8 + 1381727937 - dword_1002846DC)) >> ((13 * (v8 ^ 0xE1)) ^ 0xAA)) & 1)
                                                                      * ((v8 - 1402) ^ 0x258)))))();
}

uint64_t sub_1001E9404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = (*(uint64_t (**)(void, unint64_t *))(a8 + 8 * (v8 + 1250)))(0, &STACK[0x854]);
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (((((v9 << (v8 ^ 0xB4)) & 0x8F37BBFE) + (v9 ^ 0xC79BDDFF) == -946086401) * (v8 - 829)) ^ v8)))();
}

uint64_t sub_1001E9474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = v8 + 486;
  BOOL v10 = (*(uint64_t (**)(unint64_t *))(a8 + 8 * (v9 + 759)))(&STACK[0x14C1]) == 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((v10 * ((v9 + 464) ^ (v9 + 427))) ^ v9)))();
}

uint64_t sub_1001E94C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = v8 + 27;
  int v10 = (*(uint64_t (**)(void, uint64_t, unint64_t *))(a8 + 8 * (v9 ^ 0xDDE)))(LODWORD(STACK[0x854]), a1, &STACK[0x61C]);
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((674 * (((2 * v10) & 0xFBFF6FF6) + (v10 ^ 0xFDFFB7FB) == ((v9 - 948) | 0x544) - 33574731)) ^ v9)))();
}

uint64_t sub_1001E9544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = (*(uint64_t (**)(void))(a8 + 8 * (v8 + 694)))(LODWORD(STACK[0x61C]));
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (((((2 * v9) & 0x3F1DFFDE) + ((v8 - 1286) ^ 0x1F8EFF5F ^ v9) == 529465327)
                               * ((v8 - 1431176697) & 0x554E07EA ^ 0x60D)) ^ (v8 - 1286))))();
}

uint64_t sub_1001E962C()
{
  uint64_t v3 = v2 ^ (v0 + 1260);
  STACK[0x9B0] = v1 + (v3 ^ 0xFFFFFFFFFFFFFDA4);
  return sub_100192A14(v3);
}

uint64_t sub_1001E964C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v8 = (v7 + 1103) | 0x2D1;
  LODWORD(STACK[0x28C]) = LODWORD(STACK[0x398]) + 612144827;
  int v9 = LODWORD(STACK[0x39C]) ^ LODWORD(STACK[0x3D8]) ^ LODWORD(STACK[0x230]) ^ 0x5E69A1B;
  unsigned int v10 = LODWORD(STACK[0x404]) ^ LODWORD(STACK[0x3D8]) ^ LODWORD(STACK[0x230]) ^ 0xBD33F489;
  BOOL v11 = (STACK[0x498] & 1) == 0;
  if (STACK[0x498]) {
    int v12 = STACK[0x358];
  }
  else {
    int v12 = STACK[0x2CC];
  }
  int v13 = STACK[0x2E0];
  if ((STACK[0x498] & 1) == 0) {
    int v13 = STACK[0x2B0];
  }
  LODWORD(STACK[0x404]) = v13;
  if (v11) {
    int v14 = v9;
  }
  else {
    int v14 = STACK[0x350];
  }
  if (v11) {
    unsigned int v15 = STACK[0x360];
  }
  else {
    unsigned int v15 = v10;
  }
  if (v11) {
    unsigned int v16 = v10;
  }
  else {
    unsigned int v16 = v9;
  }
  if (v11) {
    int v17 = STACK[0x2BC];
  }
  else {
    int v17 = STACK[0x2D0];
  }
  if (v11) {
    int v18 = STACK[0x378];
  }
  else {
    int v18 = STACK[0x37C];
  }
  BOOL v19 = LODWORD(STACK[0x4F0]) == 2089942522;
  int v20 = STACK[0x4B8];
  if (LODWORD(STACK[0x4F0]) == 2089942522) {
    int v20 = STACK[0x49C];
  }
  LODWORD(STACK[0x250]) = v20;
  int v21 = STACK[0x40C];
  if (v19) {
    int v21 = STACK[0x408];
  }
  LODWORD(STACK[0x378]) = v21;
  int v22 = STACK[0x494];
  if (v19) {
    int v22 = STACK[0x464];
  }
  LODWORD(STACK[0x2A8]) = v22;
  int v23 = STACK[0x434];
  if (!v19) {
    int v23 = STACK[0x430];
  }
  LODWORD(STACK[0x37C]) = v23;
  int v24 = STACK[0x428];
  if (!v19) {
    int v24 = STACK[0x420];
  }
  LODWORD(STACK[0x464]) = v24;
  int v25 = STACK[0x414];
  if (!v19) {
    int v25 = STACK[0x410];
  }
  LODWORD(STACK[0x408]) = v25;
  int v26 = STACK[0x4E0];
  LODWORD(STACK[0x414]) = v12;
  if (v19) {
    int v26 = v12;
  }
  LODWORD(STACK[0x2D0]) = v26;
  LODWORD(STACK[0x560]) = v14;
  LODWORD(STACK[0x410]) = v15;
  if (v19) {
    unsigned int v27 = v15;
  }
  else {
    unsigned int v27 = v14;
  }
  LODWORD(STACK[0x49C]) = v27;
  unsigned int v28 = STACK[0x480];
  LODWORD(STACK[0x358]) = v16;
  if (!v19) {
    unsigned int v28 = v16;
  }
  LODWORD(STACK[0x4B8]) = v28;
  int v29 = STACK[0x558];
  LODWORD(STACK[0x360]) = v17;
  if (v19) {
    int v29 = v17;
  }
  LODWORD(STACK[0x39C]) = v29;
  int v30 = STACK[0x4C8];
  LODWORD(STACK[0x350]) = v18;
  if (!v19) {
    int v30 = v18;
  }
  LODWORD(STACK[0x398]) = v30;
  if (STACK[0x3C0]) {
    int v31 = STACK[0x26C];
  }
  else {
    int v31 = STACK[0x264];
  }
  if (STACK[0x3C0]) {
    int v32 = STACK[0x258];
  }
  else {
    int v32 = STACK[0x254];
  }
  if (STACK[0x3C0]) {
    int v33 = STACK[0x280];
  }
  else {
    int v33 = STACK[0x260];
  }
  int v34 = STACK[0x244];
  if ((STACK[0x3C0] & 1) == 0) {
    int v34 = STACK[0x240];
  }
  LODWORD(STACK[0x434]) = v34;
  BOOL v35 = (STACK[0x548] & 2) == 0;
  int v36 = STACK[0x3B0];
  if ((STACK[0x548] & 2) != 0) {
    int v36 = STACK[0x3AC];
  }
  LODWORD(STACK[0x260]) = v36;
  int v37 = STACK[0x234];
  if (!v35) {
    int v37 = STACK[0x214];
  }
  LODWORD(STACK[0x26C]) = v37;
  int v38 = STACK[0x218];
  if (!v35) {
    int v38 = STACK[0x208];
  }
  LODWORD(STACK[0x428]) = v38;
  int v39 = STACK[0x3A8];
  if (v35) {
    int v39 = STACK[0x3A4];
  }
  LODWORD(STACK[0x430]) = v39;
  int v40 = STACK[0x23C];
  if (!v35) {
    int v40 = STACK[0x238];
  }
  LODWORD(STACK[0x2B0]) = v40;
  LODWORD(STACK[0x494]) = LODWORD(STACK[0x4D0]) ^ 0x7F66E918 ^ v8;
  int v41 = STACK[0x3F8];
  LODWORD(STACK[0x3AC]) = v31;
  if (v35) {
    int v41 = v31;
  }
  LODWORD(STACK[0x2CC]) = v41;
  LODWORD(STACK[0x3B0]) = v32;
  LODWORD(STACK[0x3A8]) = v33;
  if (v35) {
    int v42 = v32;
  }
  else {
    int v42 = v33;
  }
  LODWORD(STACK[0x420]) = v42;
  return sub_1001A6E1C(a7, -1764038625);
}

uint64_t sub_1001E98FC@<X0>(int a1@<W8>)
{
  int v2 = a1 - 529465327;
  uint64_t v3 = (uint64_t (*)(void))*(&off_10026D1A0 + v1 + 671);
  LODWORD(STACK[0x568]) = v2;
  int v4 = v3();
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((3575
                               * ((v4 ^ (196 * ((v1 - 313218) & 0xE5EEF3EB ^ 0xE5EA3222)) ^ 0x5FDAB910)
                                + ((2 * v4) & 0xBFB57D70) == 1608171192)) ^ v1)))();
}

uint64_t sub_1001E99B0()
{
  *(_DWORD *)(v1 + 1756) = (LODWORD(STACK[0x5EC]) ^ 0xD3DFD67B)
                         + 2122035182
                         + ((2 * LODWORD(STACK[0x5EC])) & 0xA7BFACF6);
  uint64_t v2 = ((uint64_t (*)(void))*(&off_10026D1A0 + ((v0 + 286989703) & 0x8FAB7F8) + 213))(LODWORD(STACK[0x568]));
  return sub_1001E9A18(v2);
}

uint64_t sub_1001E9A18()
{
  uint64_t v3 = ((uint64_t (*)(void))*(&off_10026D1A0 + v2 + 213))(LODWORD(STACK[0x61C]));
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + ((((186 * ((((v2 ^ 0xEE) - 1830) | 0x788) ^ 0x7AB)) ^ 0x209)
                                             * (*(_DWORD *)(v1 + 1756) == v0 + 1135)) ^ v2 ^ 0xEE)))(v3);
}

uint64_t sub_1001E9A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)((char *)&STACK[0xA90] + v9) = 0;
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((118
                                * ((unint64_t)&STACK[0xA90] + v11 - v10 + 0x58405A597B241DFCLL >= ((v8 + 42) ^ 0x248uLL))) ^ v8)))();
}

uint64_t sub_1001E9B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_OWORD *)(v10 + v8) = *(_OWORD *)(v11 + v8);
  return (*(uint64_t (**)(void))(a8 + 8 * ((1318 * (v8 + 16 == (v9 + 236) - 804)) | v9)))();
}

uint64_t sub_1001E9B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)(v10 + v9) = *(_DWORD *)(v11 + v9);
  return (*(uint64_t (**)(void))(a8 + 8 * (((v9 == 32) * ((v8 - 163) ^ 0x2BD)) ^ v8)))();
}

uint64_t sub_1001E9BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v11 + v13 - 0x16217BCF538BB6BBLL) = *(unsigned char *)(v10 + v14 - 0x5FBC7429D31443F3);
  return (*(uint64_t (**)(void))(a8 + 8 * ((1270 * (v12 + (v8 ^ 0x8Fu) - 672 == v9 + 36)) ^ v8)))();
}

uint64_t sub_1001E9C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)(v9 + 68) = 36;
  return (*(uint64_t (**)(uint64_t))(a8
                                            + 8
                                            * ((447
                                              * (((2 * (v10 ^ 0x5910D29Eu)) & 0x1FFA757F0)
                                               - 0x6BF6F7D356B591A8
                                               + (((v8 - 287) + 0x6BF6F7D3FFD3AA76) ^ v10 ^ 0x5910D29Eu) == 2837322320)) ^ v8)))(0x77E6F300326269E4);
}

uint64_t sub_1001E9CD4(uint64_t a1)
{
  BOOL v9 = v4 < v2;
  *(unsigned char *)(v7 + v3 - 0x2FB812D95698A023) = *(unsigned char *)(v6 + v8 - 0x31AD9354BCD330F2);
  uint64_t v10 = a1 + ((v1 - 415) | 0x80u);
  unint64_t v11 = a1 - 0x77E6F2FF89444F93;
  uint64_t v12 = v10 - 385;
  int v13 = v9 ^ (v11 < v2);
  BOOL v14 = v11 < v4;
  if (!v13) {
    BOOL v9 = v14;
  }
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + ((!v9 * v5) ^ v1)))(v12);
}

uint64_t sub_1001E9D78@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  *(_DWORD *)(v3 + 136) = v2;
  STACK[0x748] = 140;
  BOOL v5 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(a1 + 8 * (v4 + 1747)))((a2 - 1381729897), 35, v3, 140, v3, &STACK[0x748]) == ((v4 + 1406) | 0xA8) - 1960;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((112 * v5) | v4)))();
}

uint64_t sub_1001E9DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8
                                                                                                  + 8 * (((*(_DWORD *)(v8 + 68) == v9 - 350) * (((v9 + 673) ^ 0x38B) - 1390)) ^ (v9 + 673))))(a1, a2, a3, a4, a5, a6, 4294925247);
}

uint64_t sub_1001E9E2C@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((51
                                * (v2
                                 - ((void)&STACK[0xA90]
                                  + v3)
                                 + ((a2 + 133) ^ 0xA7BFA5A684DBE400)
                                 + 348 > 0xF)) ^ (a2 + 120))))();
}

uint64_t sub_1001E9EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_OWORD *)(v11 + v8) = *(_OWORD *)(v10 + v8);
  return (*(uint64_t (**)(void))(a8 + 8 * ((931 * (v8 + 16 == ((v9 - 156) ^ 0x42CLL))) ^ v9)))();
}

uint64_t sub_1001E9EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, int a8@<W8>)
{
  *(_DWORD *)(v10 + v8) = *(_DWORD *)(v9 + v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a7
                                                                                                 + 8
                                                                                                 * (((v8 == 32) * (((a8 - 33367123) & 0x1FD27EE) - 1913)) ^ a8)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1001E9F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, int a8@<W8>)
{
  *(unsigned char *)(v10 + v13 - 0x2AF974615BD18CC1) = *(unsigned char *)(v12 + v9 + ((a8 + 781) ^ 0xC35586ED80AC41FCLL));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a7
                                                                                                 + 8
                                                                                                 * ((782 * (v11 + 1 == v8 + 36)) ^ a8)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1001E9FB0()
{
  return v0();
}

uint64_t sub_1001E9FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * ((((v8 ^ 0x67D) + 89) * (a7 == 0)) ^ (v8 - 1735))))();
}

uint64_t sub_1001E9FE4@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_10026D1A0 + a1))(0x22804801300080BLL, 4294967189, 42);
}

void sub_1001EA0A4()
{
}

uint64_t sub_1001EA0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * (((v8 ^ 0x7AD) * (a7 != 0)) ^ (v8 - 559))))();
}

uint64_t sub_1001EA0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = v8 ^ 0x19D;
  BOOL v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a8 + 8 * ((v8 ^ 0x19D) + 496)))(32, 1912147195) == 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((113 * ((v10 ^ (-93 * ((v9 - 55) & 0xA9 ^ 0xA5))) & 1)) ^ v9)))();
}

uint64_t sub_1001EA15C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *a1 = STACK[0xA90];
  a1[1] = STACK[0xA91];
  a1[2] = STACK[0xA92];
  a1[3] = STACK[0xA93];
  a1[4] = STACK[0xA94];
  a1[5] = STACK[0xA95];
  a1[6] = STACK[0xA96];
  a1[7] = STACK[0xA97];
  a1[8] = STACK[0xA98];
  a1[9] = STACK[0xA99];
  a1[10] = STACK[0xA9A];
  a1[11] = STACK[0xA9B];
  a1[12] = STACK[0xA9C];
  a1[13] = STACK[0xA9D];
  a1[14] = STACK[0xA9E];
  a1[15] = STACK[0xA9F];
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((((unint64_t)&a1[-STACK[0x6C0] + 0x58405A597B241F68] > 0xF)
                                * (3 * ((v8 - 1210191912) & 0x7D3FFFED ^ 0x351DFA4F) - 1703)) ^ v8)))();
}

void sub_1001EA2A0(unint64_t a1)
{
  v5.i64[0] = 0xD2D2D2D2D2D2D2D2;
  v5.i64[1] = 0xD2D2D2D2D2D2D2D2;
  v6.i64[0] = 0xE9E9E9E9E9E9E9E9;
  v6.i64[1] = 0xE9E9E9E9E9E9E9E9;
  *int v1 = vaddq_s8(vsubq_s8(*v4, vandq_s8(vaddq_s8(*v4, *v4), v5)), v6);
  STACK[0x658] = a1;
  LODWORD(STACK[0x7BC]) = 2050949191;
  STACK[0x788] = ((v3 - v2 - 1960) ^ 0xFFFFFFFFFFFFFDC0) + STACK[0x570];
  JUMPOUT(0x1001EA378);
}

void sub_1001EA3D0()
{
}

uint64_t sub_1001EA3DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * ((((((v8 + 946) ^ (STACK[0x948] == 0)) & 1) == 0) * (v8 ^ 0x1CD)) ^ v8)))();
}

uint64_t sub_1001EA418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  (*(void (**)(uint64_t))(a8 + 8 * (v9 ^ 0x980)))(v8);
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (int)(((STACK[0x818] != 0)
                                    * ((((v9 + 654534059) & 0xD8FC9DFE ^ 0x6DD) + 502) ^ (((v9 + 654534059) & 0xD8FC9DFE)
                                                                                        - 18))) ^ (v9 + 654534059) & 0xD8FC9DFE)))();
}

uint64_t sub_1001EA490@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v2 = a2 - 449;
  (*(void (**)(void))(a1 + 8 * (a2 + 744)))();
  LODWORD(STACK[0x904]) = 652248715;
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (int)((((v2 + 1384331258) & 0xAD7CC6EE ^ (v2 - 2019323271) & 0x785C6BA9 ^ 0x383)
                                    * (STACK[0x798] == 0)) ^ v2)))();
}

uint64_t sub_1001EA518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * (((14 * (v8 ^ 0x124) - 1886) * (STACK[0x658] != 0)) ^ v8)))();
}

uint64_t sub_1001EA550@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((102 * (STACK[0x958] == 0)) ^ (a2 - 1678))))();
}

uint64_t sub_1001EA57C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  (*(void (**)(void))(a8 + 8 * (v8 + 134)))();
  return ((uint64_t (*)(unint64_t))*(&off_10026D1A0
                                                    + (((((2 * v8) ^ 0xEDA) + ((v8 - 933) ^ 0x411)) * (v9 != 0)) ^ (v8 - 1773))))(STACK[0x8B8]);
}

uint64_t sub_1001EA5D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((a3 + 933 + ((4 * a3) ^ 0x17A4) - 3911) * (a1 == 0)) ^ a3)))();
}

uint64_t sub_1001EA604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * ((172 * (STACK[0x688] != 0)) | (v8 - 1637))))();
}

uint64_t sub_1001EA630@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v2 = a2 ^ 0x3C6;
  (*(void (**)(void))(a1 + 8 * (a2 ^ 0xA40)))();
  LODWORD(STACK[0x994]) = 76943988;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((14 * (v2 ^ 0x124) - 1886) * (STACK[0x658] != 0)) ^ v2)))();
}

uint64_t sub_1001EA698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  (*(void (**)(void))(a8 + 8 * (v8 + 134)))();
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((102 * (STACK[0x958] == 0)) ^ (v8 - 1678))))();
}

uint64_t sub_1001EA6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 8 * (((((2 * v8) ^ 0xEDA) + ((v8 - 933) ^ 0x411)) * (v9 != 0)) ^ (v8 - 1773))))(STACK[0x8B8], a2, a3, a4, a5, a6, v9);
}

void sub_1001EA718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *(_DWORD **)(STACK[0x540] + 48);
  *(void *)STACK[0x530] = a1;
  *(_DWORD *)STACK[0x520] = (LOWORD(STACK[0x816]) | ((LOWORD(STACK[0x816]) < ((unsigned __int16)(v6 + 1566) ^ 0x734u)) << 16))
                          - 156;
  *(void *)STACK[0x510] = STACK[0x688];
  *uint64_t v7 = (LOWORD(STACK[0x656]) | ((LOWORD(STACK[0x656]) < 0x79B7u) << 16)) - 31159;
  sub_1001F0F6C(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1001EA788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  (*(void (**)(void))(a8 + 8 * (v8 + 134)))();
  return (*(uint64_t (**)(void))(a8 + 8 * ((172 * (STACK[0x688] != 0)) | (v8 - 1637))))();
}

void sub_1001EA7CC()
{
}

void sub_1001EA7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v8 = ((v7 & 0xF0) >> 4) ^ 9 | v7 ^ 0xFFFFFF95;
  unsigned int v9 = ((v8 - ((2 * v8) & 0x6A) - 75) >> (((40 * (v6 ^ 0xD0)) ^ 0xAA) & 0xFE)) ^ 0x2D | (v8 - ((2 * v8) & 0x6A) - 75) ^ 0xFFFFFFB5;
  int v10 = v9 & 1 | ((v9 & 2) != 0);
  sub_1001F0F6C(a1, a2, a3, a4, a5, a6, -42022 * (((2 * (((v10 ^ 0x17) + 2 * v10 - 1) ^ 0x12)) & 0xFFFFFFF7) + (((v10 ^ 0x17) + 2 * v10 - 1) ^ 0xA5BFF0AD))- 1867151422);
}

uint64_t sub_1001EA890@<X0>(uint64_t a1@<X6>, int a2@<W8>, int8x16_t a3@<Q0>, int8x8_t a4@<D1>, int8x8_t a5@<D2>)
{
  v13.val[0].i64[0] = v9 & 8;
  v13.val[0].i64[1] = v11 & v9 | 1;
  v13.val[1].i64[0] = v13.val[0].i64[0] | 2;
  v13.val[1].i64[1] = v13.val[0].i64[0] | 3;
  v13.val[2].i64[0] = v13.val[0].i64[0] | 4;
  v13.val[2].i64[1] = v13.val[0].i64[0] | v5;
  v13.val[3].i64[0] = v13.val[0].i64[0] | 6;
  v13.val[3].i64[1] = v13.val[0].i64[0] | 7;
  *(int8x8_t *)(v7 + v9) = veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v8 + v13.val[0].i64[0]), *(int8x8_t *)(a1 + v13.val[0].i64[0])), *(int8x8_t *)(v6 + v13.val[0].i64[0] + 4)), a5), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v13, a3), a4));
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((120 * (v10 != v9)) ^ a2)))();
}

uint64_t sub_1001EA938@<X0>(uint64_t a1@<X6>, int a2@<W8>, int8x16_t a3@<Q0>, int8x8_t a4@<D1>, int8x8_t a5@<D2>)
{
  return sub_1001EA890(a1, a2, a3, a4, a5);
}

uint64_t sub_1001EA940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(a4 + 8 * (((((v5 - 218) | 0x21) ^ ((v5 - 1508) | 0x440) ^ 0x32E) * (a5 == v6)) ^ v5)))();
}

uint64_t sub_1001EA9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v12 = v8 < v9 || a5 + (unint64_t)((a8 + 990) ^ 0xC5Du) + 11044235 < v8;
  return (*(uint64_t (**)(void))(v10 + 8 * (v12 | a8)))();
}

void sub_1001EAA24()
{
}

uint64_t sub_1001EAAB0@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  int v5 = a2 + v2 - 1044660243 + v4 - 536;
  STACK[0x568] = (unint64_t)&STACK[0xA90] + a1;
  int v6 = (char *)&STACK[0xA90] + a1 + 383;
  unint64_t v7 = STACK[0x570] + 1088;
  STACK[0x558] = v7;
  STACK[0x788] = v7;
  unint64_t v8 = *(void (**)(void *))(v3 + 8 * (v4 + 1348));
  STACK[0x570] = (unint64_t)&STACK[0xA90] + a1 + 319;
  v8(&unk_10023B012);
  STACK[0x560] = (unint64_t)v6;
  uint64_t v9 = ((uint64_t (*)(void *, char *, uint64_t))v8)(&unk_100245A57, v6, 64);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((1253 * ((v4 + 1270918663 + v5) < 0xF8)) ^ v4)))(v9);
}

uint64_t sub_1001EAB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x670]) = 1888467959;
  *(unsigned char *)(STACK[0x568] + 269827420 + (v6 + 63) - 269827758) = *(unsigned char *)(v5 + 0u % (v4 + v7 + 66));
  return (*(uint64_t (**)(void))(a4 + 8 * v6))();
}

uint64_t sub_1001EAC00@<X0>(uint64_t a1@<X3>, int a2@<W4>, uint64_t a3@<X6>, int a4@<W8>)
{
  uint64_t v7 = (unsigned __int16)(v5
                        + 22455
                        - 319
                        * ((unsigned __int16)(((39651 * (unsigned __int16)(v5 + 22455)) >> 16)
                                                             + ((unsigned __int16)((v5
                                                                                  + 22455
                                                                                  - ((39651
                                                                                    * (unsigned __int16)(v5 + 22455)) >> 16)) & 0xFFFE) >> 1)) >> 8));
  int v8 = *(unsigned __int8 *)(a3 + ((v6 ^ (a2 - 306)) + v5 + 467901379) % 0x13F);
  HIDWORD(v9) = v8 ^ 6;
  LODWORD(v9) = (v8 ^ 0x20) << 24;
  int v10 = *(unsigned __int8 *)(a3 + (v5 + a4 + 98) % 0x13Fu);
  int v11 = (v9 >> 29) - ((2 * (v9 >> 29)) & 0x30) + 24;
  HIDWORD(v9) = v10 ^ 6;
  LODWORD(v9) = (v10 ^ 0x20) << 24;
  int v12 = ((v9 >> 27) ^ 0xFFFFFFEF) + ((2 * (v9 >> 27)) & 0xFFFFFFDF) + (*(unsigned __int8 *)(a3 + v7) ^ v11 ^ 0x3E) + 17;
  HIDWORD(v9) = *(unsigned __int8 *)(a3 + (v5 + a4) % 0x13Fu);
  LODWORD(v9) = (HIDWORD(v9) ^ 0x26) << 24;
  int v13 = ((v9 >> 25) ^ 0xFFFFFFC1) - ((2 * (v9 >> 25)) & 0x7C) + (v12 ^ 0x6D) + ((2 * v12) & 0xFFFFFFDA) + 1;
  BOOL v14 = *(uint64_t (**)(void))(a1 + 8 * ((1421 * (v5 + 1 == v4 + 1276)) ^ v6));
  *(unsigned char *)(a3 + v7) = v13 + (~(2 * v13 + 34) | 0xB3) - 8;
  return v14();
}

uint64_t sub_1001EAD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, unsigned __int8 *a7)
{
  int v12 = v7 ^ (a5 + 737);
  LODWORD(STACK[0x4D0]) = 0;
  unsigned int v13 = a7[109] ^ v8;
  LODWORD(STACK[0x49C]) = v12 + 185;
  unsigned int v14 = v13 + ((v12 + 185) ^ 0x9562D704) - ((2 * v13) & 0x1D8);
  unsigned int v15 = (a7[21] ^ v8) - ((2 * (a7[21] ^ v8)) & 0x136) - 851535717;
  unsigned int v16 = ((v15 ^ 0xCD3E989B | v14 ^ 0x9562D2EC) - ((2 * (v15 ^ 0xCD3E989B | v14 ^ 0x9562D2EC)) & 0x24) + 18) & 0x73;
  unsigned int v17 = (((v15 ^ 0x8522809B) & (v14 ^ 0x12EC)) - ((2 * ((v15 ^ 0x8522809B) & (v14 ^ 0x12EC))) & 0x649FB9AC) + 1917836502) ^ 0x724FDCD6;
  unsigned int v18 = ((v16 ^ 0x12 | v17) - 2 * ((v16 ^ 0x12 | v17) & 0x73B5D79D ^ v17 & 0xC) - 206186607) ^ 0xF3B5D791;
  unsigned int v19 = ((v18 * v18 - ((2 * v18 * v18) & 0x80143E62) - 1073078479) ^ 0xC00A1F31) * v18;
  int v20 = ((2 * v19) & 0x5FFE73B8) + (v19 ^ 0x2FFF39DC);
  LOBYTE(v19) = ((a7[352] & 2 | a7[352] & 0x88 ^ 0xA1) - 1) ^ 0x2A;
  LOBYTE(v15) = v19 | *(unsigned char *)(v11 + (a7[40] & 0x3F ^ v8)) & 0x75 ^ 0x74;
  LOBYTE(v15) = v15 + ~(2 * (v15 & 0x78 ^ v19 & 8)) - 15;
  LOBYTE(v19) = a7[355];
  unint64_t v21 = STACK[0x560];
  char v22 = (*(unsigned char *)(STACK[0x560] + (a7[52] & 0x3F ^ v8)) ^ 0xFE) & (v19 ^ 0xFE);
  char v23 = (v22 + (~(2 * v22) | 0xCF) - 103) ^ 0x98 | (((((2 * v19) & 0x50) + (v19 & 0xB8 ^ 0xEE) + 83) ^ 0x52) - 1) ^ 0x12;
  LOBYTE(v15) = v15 ^ 0xF0;
  char v24 = (v23 - ((2 * v23) & 0x62) - 79) ^ 0xB1;
  char v25 = ((v24 | v15) - ((2 * (v24 | v15)) & 0x3C) + 30) & 0x2B ^ 0xA;
  char v26 = (v25 - ((2 * v25) & 0xCF) - 29) ^ 0xE3 | ((v24 & v15) - ((2 * (v24 & v15)) & 0x6A) - 75) ^ 0xB5;
  char v27 = (a7[94] ^ v8) + (v26 ^ 2) - ((2 * v26) & 0xFB) - 2;
  a7[94] = v27 - ((2 * v27) & 0x4C) + 38;
  char v28 = ((a7[139] & 0x36 ^ 0x8A) + (a7[139] & 0x10 ^ 0x51) - ((a7[139] & 0x36 ^ 0x8A) & 0x98)) ^ 0x75 | ~byte_100221504[a7[85] & 0x3F ^ v8] & 0x40;
  int v29 = *(unsigned __int8 *)(v11 + (a7[157] & 0x3F ^ v8));
  a7[64] ^= 0x39 ^ (((v28 - ((2 * v28) & 0xA4) + 82) & 0xF7 ^ 0x5A)
                                   + ((2
                                     * (((v28 - ((2 * v28) & 0xA4) + 82) & 0xF7 ^ 0x5A) & 0x35 ^ ((v28
                                                                                                 - ((2 * v28) & 0xA4)
                                                                                                 + 82) | 0x7B))) ^ 0x19)
                                   + 58);
  LODWORD(STACK[0x4F0]) = (v29 ^ 1) - ((2 * (_BYTE)v29 + 12) & 8);
  unsigned int v30 = ((a7[125] & 0xC9) - 92) & 0xFFFFFFC9 ^ 0xFFFFFF82;
  LODWORD(STACK[0x4E8]) = v30 - 2 * (v30 & 3);
  unsigned int v31 = *(unsigned __int8 *)(v11 + (a7[104] & 0x3F ^ v8)) ^ 0xFFFFFFFE;
  unsigned __int8 v32 = a7[387];
  unsigned int v33 = ((v32 & 0xA ^ 0xFFFFFF83 | v32 & 0x34) - 1) ^ 0xFFFFFFDC;
  int v34 = (v33 - ((2 * v33) & 0x10) + 9) ^ 0x57;
  unsigned int v35 = v34 | ((v32 & 0xA1) - 36) & 0xFFFFFFA1 ^ 0x20;
  unsigned int v36 = ((v35 - 2 * (v35 & 0x27 ^ v34 & 6) + 33) ^ 0x21) & ((v31 * v31 - ((2 * v31 * v31) & 0xFFFFFFEA) - 11) ^ 0xFFFFFFF5);
  LODWORD(STACK[0x558]) = v36 - ((2 * v36) & 0x20);
  LOBYTE(v35) = (a7[52] ^ 0xD9) + (a7[175] ^ v8) + 1;
  a7[175] = v35 - ((2 * v35) & 0x4C) + 38;
  unsigned int v37 = 205 * (*(unsigned __int8 *)(v21 + (a7[44] & 0x3F ^ v8)) ^ 0xFE);
  LODWORD(STACK[0x4D8]) = (v37 >> 10) - ((v37 >> 9) & 0x44444444);
  a7[100] = (a7[100] ^ v8) - ((2 * (a7[100] ^ v8) + 122) & 0x4C) + 35;
  a7[327] = 2;
  LOBYTE(v37) = (a7[386] ^ 0xFE) + (*(unsigned char *)(v11 + (a7[17] & 0x3F ^ v8)) ^ 0xFE);
  a7[386] = v37 - ((2 * v37) & 0xFC) - 2;
  LOBYTE(v37) = byte_100221504[a7[57] & 0x3F ^ v8];
  LOBYTE(v37) = ((v37 & 0x22 ^ 0x29) + (v37 & 0x51) - 1) ^ 0x7D;
  LOBYTE(v34) = ((2 * v37) & 0x6C) - v37;
  LOBYTE(v37) = a7[415];
  char v38 = ((((v37 & 4 ^ 0x44) - (v37 & 4) + (v37 & 0x8C ^ 8)) & 0xDF ^ 0x67)
       - (((v37 & 4 ^ 0x44) - (v37 & 4) + (v37 & 0x8C ^ 8)) | 0xDC)
       - 36) ^ 0xA7;
  LOBYTE(v34) = (v38 - ((2 * v38) & 0x24) - 110) ^ 0x92 | (v34 - 55) ^ 0xDF;
  unsigned __int8 v39 = (v34 - ((2 * v34) & 0xC6) - 29) ^ 0xE3;
  unsigned int v40 = (a7[101] ^ v8) + ((v39 / 3u) ^ 0x42) - (((171 * v39) >> 8) & 0x7A) - 66;
  unsigned __int8 v41 = byte_100221504[a7[217] & 0x3F ^ v8];
  a7[101] = v40 - ((2 * v40) & 0x4C) + 38;
  unsigned int v42 = (((v41 & 0x75 ^ 0xFFFFFFCB) - ((2 * (v41 & 0x75 ^ 0xFFFFFFCB)) & 0xFFFFFFBF) - 33) ^ 0xFFFFFFDF) & (a7[398] ^ 0xFFFFFFFE);
  unsigned int v43 = (v42 + (~(2 * v42) | 0xFFFFFF81) - 64) ^ 0xFFFFFFBF | (-93
                                                             - ((((v41 & 0x8A ^ 0xFFFFFFFD) - 17) & 0xFFFFFFA0)
                                                              + (((v41 & 0x8A ^ 0xFFFFFFFD) - 17) | 0xFFFFFFB5))) ^ 0xFFFFFF84;
  unsigned int v44 = (v43 - ((2 * v43) & 0x7A) - 67) ^ 0xFFFFFFBD | (a7[7] >> 1) ^ 0x13;
  LOBYTE(v44) = (a7[249] ^ v8) + (v44 ^ 0x40) - 2 * (v44 & 0x3F) - 64;
  a7[249] = v44 - ((2 * v44) & 0x4C) + 38;
  a7[30] ^= 0x58u;
  LOBYTE(v44) = (*(unsigned char *)(STACK[0x570] + (a7[241] & 0x3F ^ v8)) & 0xFC ^ 0xE7) - 1;
  LOBYTE(v44) = ((v44 & 0x9F ^ 5) + (v44 ^ 0x9A) - ((v44 ^ 0x9A) & 0x9F)) ^ 0x1F | *(unsigned char *)(STACK[0x568] + 383) & 3 ^ 2;
  LOBYTE(v44) = (v44 - ((2 * v44) & 0x3C) + 30) ^ 0x1E;
  LOBYTE(v44) = ((v44 * v44 - (v8 & (2 * v44 * v44)) - 109) ^ 0x93) * v44;
  *(unsigned char *)(STACK[0x568] + 215) = v44 + (v10 | ~(2 * v44)) + 39;
  LODWORD(STACK[0x550]) = v20;
  *(unsigned char *)(STACK[0x568] + 446) = *(unsigned char *)(STACK[0x570] + ((28 - (_BYTE)v20) & 0x3F));
  char v45 = *(unsigned char *)(STACK[0x570] + (*(unsigned char *)(STACK[0x568] + 13) & 0x3F ^ v8));
  unsigned int v46 = (((2 * v45) & 8) + (v45 & 0x2C ^ 0x74) + 44) & 0x7C ^ 0xFFFFFF8F;
  int v47 = (v46 - 2 * (v46 & 0x1F) - 97) ^ 0x9F;
  LOBYTE(v44) = (*(unsigned char *)(STACK[0x568] + 146) ^ 0xD8) + 2 + ((2 * (*(unsigned char *)(STACK[0x568] + 146) ^ v8)) & 0xFC);
  char v48 = (((v44 * v44) ^ 0xED) + 19 + ((2 * v44 * v44) & 0xDA)) * v44;
  char v49 = ((2 * v48) & 0x9E) + (v48 ^ 0xCF);
  unsigned int v50 = (v47 - ((2 * v47) & 0x102) - 1849324159) ^ 0x91C58D81;
  *(unsigned char *)(STACK[0x568] + 381) = ((v50 << ((v49 + 1) & 7)) - ((2 * (v50 << ((v49 + 1) & 7))) & 0xE0) - 16) ^ ((v50 >> ((7 - v49) & 7)) - ((2 * (v50 >> ((7 - v49) & 7))) & 0xD8) + 108) ^ 0x62;
  int v51 = *(unsigned __int8 *)(STACK[0x568] + 400) ^ 0xFE;
  unsigned int v52 = *(unsigned __int8 *)(STACK[0x568] + 131) ^ v8;
  int v53 = *(unsigned __int8 *)(STACK[0x568] + 393) ^ 0xFE;
  unsigned int v54 = v52 - ((2 * v52) & 0xFFFFFF9F) + 1400492751;
  int v55 = v53 - ((2 * v53) & 0x126) + 615286931;
  int v56 = (((v55 ^ 0x24AC8893 | v54 ^ 0x5379D2CF) - ((2 * (v55 ^ 0x24AC8893 | v54 ^ 0x5379D2CF)) & 0xB68) + 1460) ^ 0x5B4) & ((v51 - ((2 * v51) & 0x15A) + 1646354861) ^ 0x622161AD);
  int v57 = (v56 - ((2 * v56) & 0x2453D1B2) + 304736473) ^ 0x1229E8D9 | (((v55 ^ 0x280093) & (v54 ^ 0xD2CF))
                                                                   - ((2 * ((v55 ^ 0x280093) & (v54 ^ 0xD2CF))) & 0x41D298AA)
                                                                   + 1625902165) ^ 0x60E94C55;
  LOBYTE(v54) = ((*(unsigned char *)(v21 + (*(unsigned char *)(STACK[0x568] + 220) & 0x3F ^ v8)) & 3 ^ 0xFD) - 28) ^ 0xE7;
  LOBYTE(v54) = (v54 - 2 * (v54 & 1) - 79) ^ 0xB1;
  LOBYTE(v54) = ((2 * v54) & 0x36) + (v54 ^ 0x9B);
  unsigned int v58 = (v57 - ((2 * v57) & 0x3ED17D38) + 526958236) ^ 0x1F68BE9C;
  unsigned int v59 = ((v58 >> (v54 + 101)) + (~(2 * (v58 >> (v54 + 101))) | 0xFFFFFF81) + 64) ^ ((v58 << (-93 - v54))
                                                                                  - ((2 * (v58 << (-93 - v54))) & 0x4C)
                                                                                  + 38);
  LOBYTE(v59) = (*(unsigned char *)(STACK[0x568] + 330) ^ 0xFE) + (v59 ^ 0xE6) + ((2 * v59) ^ 0x32) + 1;
  *(unsigned char *)(STACK[0x568] + 330) = v59 - ((2 * v59) & 0xFC) - 2;
  int v60 = (*(unsigned __int8 *)(STACK[0x568] + 10) >> 1) ^ 0x13;
  LOBYTE(v54) = *(unsigned char *)(v21 + (*(unsigned char *)(STACK[0x568] + 27) & 0x3F ^ v8));
  LOBYTE(v54) = ((2 * ~(_BYTE)v54) & 0xFC) + v54 + 2;
  unsigned int v61 = (v60 - ((2 * v60) & 0x16) + 307826571) ^ 0x12590F8B;
  int v62 = ((v61 >> ((((v54 * v54) ^ 0xF4) + 4) & 7)) - ((2 * (v61 >> ((((v54 * v54) ^ 0xF4) + 4) & 7))) & 0x44) + 34) ^ ((v61 << ((4 - ((v54 * v54) ^ 0xF4)) & 7)) - ((2 * (v61 << ((4 - ((v54 * v54) ^ 0xF4)) & 7))) & 0x30) + 152);
  LOBYTE(v62) = (*(unsigned char *)(STACK[0x568] + 67) ^ v8) + (v62 ^ 0x19) + ((2 * v62) & 0xB8 ^ 0xCF) + 94;
  *(unsigned char *)(STACK[0x568] + 67) = v62 - ((2 * v62) & 0x4C) + 38;
  LOBYTE(v62) = byte_100221504[*(unsigned char *)(STACK[0x568] + 136) & 0x3F ^ v8] & 0xAC ^ 0x84;
  LOBYTE(v37) = (((v62 | 0x47) - (v62 | 0xB8) - 72) ^ 0x43 | 0x75)
              - (((v62 | 0x47) - (v62 | 0xB8) - 72) ^ 0x43 | 0x8A)
              - 118;
  LOBYTE(v37) = (*(unsigned char *)(STACK[0x568] + 195) ^ v8) + (v37 & 0xED ^ 0xA8) + ((2 * v37) & 0x9A ^ 0xAE) + 33;
  char v63 = *(unsigned char *)(STACK[0x570] + (*(unsigned char *)(STACK[0x568] + 196) & 0x3F ^ v8));
  LOBYTE(v55) = *(unsigned char *)(v21 + (*(unsigned char *)(STACK[0x568] + 21) & 0x3F ^ v8));
  *(unsigned char *)(STACK[0x568] + 195) = v37 - ((2 * v37) & 0x4C) + 38;
  LOBYTE(v20) = ((v55 ^ 0xFE | v63 ^ 0xFE) + (~(2 * (v55 ^ 0xFE | v63 ^ 0xFE)) | 0xF1) + 72) & 0x49 ^ 0x41 | (((v55 ^ 0xFE) & (v63 ^ 0xFE)) - ((2 * ((v55 ^ 0xFE) & (v63 ^ 0xFE))) & 0xA) - 123) ^ 0x85;
  LOBYTE(v20) = (*(unsigned char *)(v21 + (*(unsigned char *)(STACK[0x568] + 127) & 0x3F ^ v8)) ^ 0xFE)
              + (v20 ^ 0xA2)
              - ((2 * v20) & 0xBA)
              + 94;
  LOBYTE(v20) = (*(unsigned char *)(STACK[0x568] + 423) ^ 0xFE) + (v20 ^ 0x72) + ((2 * v20) & 0xE4) - 114;
  *(unsigned char *)(STACK[0x568] + 423) = v20 + (~(2 * v20) | 3) - 1;
  LOBYTE(v20) = *(unsigned char *)(v21 + (*(unsigned char *)(STACK[0x568] + 65) & 0x3F ^ v8)) & 2;
  LOBYTE(v20) = (((v20 ^ 0x9E) + 2 * v20 - 6) ^ 0x92) & (*(unsigned char *)(STACK[0x568] + 140) ^ v8);
  int v64 = *(unsigned __int8 *)(STACK[0x570] + (*(unsigned char *)(STACK[0x568] + 182) & 0x3F ^ v8));
  *(unsigned char *)(STACK[0x568] + 369) = v20 - ((2 * v20) & 0x7C) - 2;
  LOBYTE(v20) = ((*(unsigned char *)(STACK[0x568] + 134) & 0x89)
               - (*(unsigned char *)(STACK[0x568] + 134) & 0x88)
               + (*(unsigned char *)(STACK[0x568] + 134) & 0x88 ^ 0xD8)) ^ 0xFC;
  unsigned __int8 v65 = ((((((v20 | 0x15) - (v20 | 0xEA)) ^ 1) - 22) | 0x74)
       + ((2 * (((((v20 | 0x15) - (v20 | 0xEA)) ^ 1) - 22) & 0xB ^ (((v20 | 0x15) - (v20 | 0xEA)) ^ 1 | 0x7E))) ^ 0x4B)
       + 47) ^ 0x2E;
  *(unsigned char *)(STACK[0x568] + 321) = v65 / 5u - (((205 * v65) >> 9) & 0x7C) - 2;
  unsigned int v66 = 171 * (*(unsigned __int8 *)(STACK[0x568] + 339) ^ 0xFE);
  unsigned int v67 = (~(v66 >> 8) | 0xFFFFFFC5) + (v66 >> 9) + 94;
  LOBYTE(v37) = (*(unsigned char *)(STACK[0x570] + (*(unsigned char *)(STACK[0x568] + 39) & 0x3F ^ v8)) ^ 0xFE) + 50;
  LOBYTE(v67) = ((((v67 & 0xC ^ 5) - (v67 | 0xBE) - 2) ^ 0x5E) - 2) ^ 0x54 | ((((v37 ^ 0x1F) + 2 * v37 + 33) & 0x32)
                                                                            - ((2 * ((v37 ^ 0x1F) + 2 * v37 + 33)) & 0x20)
                                                                            - 44) ^ 0xD4;
  LOBYTE(v67) = (*(unsigned char *)(STACK[0x568] + 330) ^ 0xFE) + (v67 ^ 0xAF) + ((2 * v67) & 0x5E) + 81;
  *(unsigned char *)(STACK[0x568] + 330) = v67 - ((2 * v67) & 0xFC) - 2;
  int v68 = *(unsigned __int8 *)(STACK[0x568] + 401) ^ 0xFE;
  LOBYTE(v37) = 2 * (*(unsigned char *)(STACK[0x568] + 322) & 1) + (*(unsigned char *)(STACK[0x568] + 322) & 7 ^ 0xCF);
  unsigned int v69 = ((0x37u >> ((1 - v37) & 7)) - ((0x6Eu >> ((1 - v37) & 7)) & 0x7C) - 1651082498) ^ ((55 << (v37 + 55))
                                                                                         - ((110 << (v37 + 55)) & 0x25A0C36)
                                                                                         + 19727899);
  unsigned int v70 = (((v69 & 0xFFFFFFD2 ^ 0x9CBB7CED) - ((2 * (v69 & 0xFFFFFFD2 ^ 0x9CBB7CED)) & 0x2A4) + 806) ^ 0x37E) & ((v68 - ((2 * v68) & 0xC6) - 1695866269) ^ 0x9AEB2263);
  int v71 = ((v69 & 0x2D ^ 8) - ((2 * v69) & 0x4A) + 277480997) ^ 0x53A70424;
  unsigned int v72 = (v70 - ((2 * v70) & 0x392116A8) + 1552976724) ^ 0x5C908B54 | ((v71 | 0x59990F37)
                                                                    - (v71 | 0xA666F0C8)
                                                                    - 1503203128) ^ 0x1AB40D1B;
  unsigned int v73 = ((LODWORD(STACK[0x558]) + 16) ^ 0x5B)
      + ((v72 - ((2 * v72) & 0xB0) - 40) ^ 0xFFFFFFA7)
      + ((2 * (v72 - ((2 * v72) & 0xB0) - 40)) ^ 0xFFFFFFB0)
      - 127;
  LODWORD(STACK[0x4C8]) = v73 ^ 0x55;
  LODWORD(STACK[0x4C0]) = (2 * v73) & 0xFFFFFFAA;
  LOBYTE(v73) = (*(unsigned char *)(STACK[0x568] + 237) ^ v8)
              + (byte_100221504[*(unsigned char *)(STACK[0x568] + 201) & 0x3F ^ v8] ^ 0x3C);
  *(unsigned char *)(STACK[0x568] + 237) = v73 - ((2 * v73) & 0x4C) + 38;
  int v74 = *(unsigned __int8 *)(STACK[0x568] + 436) ^ 0xFE;
  int v75 = *(unsigned __int8 *)(STACK[0x568] + 392) ^ 0xFE;
  int v76 = *(unsigned __int8 *)(STACK[0x568] + 400) ^ 0xFE;
  int v77 = *(unsigned __int8 *)(v21 + (*(unsigned char *)(STACK[0x568] + 120) & 0x3F ^ v8)) ^ 0xFE;
  int v78 = v76 - ((2 * v76) & 0x5E) + 2002810415;
  int v79 = v77 - ((2 * v77) & 0x72) - 596292295;
  unsigned int v80 = (((v79 ^ 0xDC754D39 | v78 ^ 0x7760762F) - ((2 * (v79 ^ 0xDC754D39 | v78 ^ 0x7760762F)) & 0x124) + 146) ^ 0x92) & ((v75 - ((2 * v75) & 0x33333333) + 1959879833) ^ 0x74D16499);
  unsigned int v81 = (v80 - ((2 * v80) & 0x26E26ECC) - 1821296794) ^ 0x93713766 | (((v79 ^ 0x54604139) & (v78 ^ 0x62F))
                                                                    - ((2 * ((v79 ^ 0x54604139) & (v78 ^ 0x62F))) & 0x264E6FBC)
                                                                    + 1395079134) ^ 0x532737DE;
  unsigned int v82 = (v74 - ((2 * v74) & 0x1A6) - 1287248685) ^ 0xB34624D3;
  int v83 = v81 - ((2 * v81) & 0x5038B77A) - 1474536515;
  LOBYTE(v78) = (v83 ^ 0xBD | v82) - ((2 * (v83 ^ 0xBD | v82)) & 0x30) - 40;
  int v84 = ((v78 & 0x43) + (v78 & 0x4F ^ 0x3C02CA5B) - ((v78 & 0x4F ^ 0x3C02CA5B) & 0x4000A53) + 23856160) ^ 0x396EC460 | (((v83 ^ 0x3BD) & v82) - ((2 * ((v83 ^ 0x3BD) & v82)) & 0x2CB29A94) + 374951242) ^ 0x16594D4A;
  LODWORD(STACK[0x4A0]) = v84 - ((2 * v84) & 0xF6);
  STACK[0x558] = (v64 ^ 0xFFFFFFFE) + 13;
  int v85 = *(unsigned __int8 *)(STACK[0x568] + 327);
  unsigned int v86 = (v85 ^ 0x7E) & ((~*(unsigned __int8 *)(STACK[0x570] + (((v64 ^ 0xFE) + 13) & 0x3F)) & 0xFEu) >> 1);
  LOBYTE(v78) = (*(unsigned char *)(STACK[0x568] + 208) ^ v8) + 43;
  LOBYTE(v85) = ((v78 ^ 0xDF) + ((2 * v78) & 0xBF) + 33) & (v85 ^ 1);
  LOBYTE(v86) = (v85 - ((2 * v85) & 0xFB) + 125) ^ 0x7D | (v86 - ((2 * v86) & 0xB0) - 40) ^ 0xD8;
  LOBYTE(v86) = (*(unsigned char *)(STACK[0x568] + 335) ^ 0xFE) + (v86 ^ 0x77) + ((2 * v86) & 0xEF) - 119;
  *(unsigned char *)(STACK[0x568] + 335) = v86 - ((2 * v86) & 0xFC) - 2;
  LOBYTE(v86) = *(unsigned char *)(v21 + (*(unsigned char *)(STACK[0x568] + 162) & 0x3F ^ v8));
  LOBYTE(v78) = (((v86 & 0x81 ^ 0xFE) - 2 * (v86 & 0x81) + 43) ^ 0xD7) & (*(unsigned char *)(STACK[0x568] + 323) ^ 0xFE);
  LOBYTE(v86) = (v78 - ((2 * v78) & 0x94) - 54) ^ 0xCA | ~(_BYTE)v86 & 0x7E;
  LOBYTE(v78) = *(unsigned char *)(STACK[0x570] + (*(unsigned char *)(STACK[0x568] + 65) & 0x3F ^ v8));
  *(unsigned char *)(STACK[0x568] + 394) ^= (((v86 - ((2 * v86) & 0x10) + 8) & 0xFE) >> 1) ^ 4;
  *(unsigned char *)(STACK[0x568] + 356) ^= ((v78 ^ 0xFE) - ((2 * (v78 ^ 0xFE) + 98) & 0xBC) + 15) ^ 0xF0;
  LOBYTE(v86) = (*(unsigned char *)(STACK[0x568] + 103) ^ 0xD9) + (*(unsigned char *)(STACK[0x568] + 436) ^ 0xFE) + 1;
  *(unsigned char *)(STACK[0x568] + 436) = v86 - ((2 * v86) & 0xFC) - 2;
  LOBYTE(v86) = *(unsigned char *)(v21 + (*(unsigned char *)(STACK[0x568] + 173) & 0x3F ^ v8));
  LOBYTE(v86) = ((2 * v86) ^ 0x3D) + (*(unsigned char *)(STACK[0x568] + 227) ^ v8) + ((4 * (v86 & 0x1F)) ^ 0x87) + 64;
  *(unsigned char *)(STACK[0x568] + 227) = v86 - ((2 * v86) & 0x4C) + 38;
  unsigned int v87 = 171 * (byte_100221504[*(unsigned char *)(STACK[0x568] + 56) & 0x3F ^ v8] ^ 0x25);
  unint64_t v88 = ((v87 >> 9) ^ 0xFFFFFFF5) + ((v87 >> 8) & 0xEA) + 11;
  STACK[0x4F8] = v88;
  *(unsigned char *)(STACK[0x568] + 383) ^= *(unsigned char *)(v21 + (v88 & 0x3F)) ^ 0xFE;
  LOBYTE(v88) = (*(unsigned char *)(STACK[0x568] + 350) ^ 0xFE)
              + (((*(unsigned char *)(STACK[0x568] + 26) ^ v8) * (*(unsigned char *)(STACK[0x568] + 26) ^ v8)) ^ 0x18)
              - ((2 * (*(unsigned char *)(STACK[0x568] + 26) ^ v8) * (*(unsigned char *)(STACK[0x568] + 26) ^ v8)) & 0xCF)
              - 24;
  *(unsigned char *)(STACK[0x568] + 350) = v88 - ((2 * v88) & 0xFC) - 2;
  LOBYTE(v55) = *(unsigned char *)(STACK[0x570] + (*(unsigned char *)(STACK[0x568] + 136) & 0x3F ^ v8)) ^ 0xFE;
  char v89 = (*(unsigned char *)(STACK[0x568] + 385) ^ 0xFE) - ((2 * (*(unsigned char *)(STACK[0x568] + 385) ^ 0xFE)) & 0x16) + 11;
  LOBYTE(v55) = v55 - ((2 * v55) & 0x8A) - 59;
  LOBYTE(v88) = (((v55 ^ 0xC5 | v89 ^ 0xB) - ((2 * (v55 ^ 0xC5 | v89 ^ 0xB)) & 0x10) + 8) ^ 8) & (((*(unsigned char *)(STACK[0x568] + 378) ^ 0xFE)
                                                                                                 - ((2 * (*(unsigned char *)(STACK[0x568] + 378) ^ 0xFE)) & 0xAA)
                                                                                                 - 43) ^ 0xD5);
  LOBYTE(v88) = (v88 - ((2 * v88) & 2) + 1) ^ 1 | (((v55 ^ 0xC5) & (v89 ^ 0xB))
                                                 - ((2 * ((v55 ^ 0xC5) & (v89 ^ 0xB))) & 0x94)
                                                 + 74) ^ 0x4A;
  char v90 = v88 - ((2 * v88) & 0x42) + 33;
  LOBYTE(v88) = (((v90 | 0x3D) - ((2 * v90) & 4) - 7) ^ 0xB) & (((~*(unsigned char *)(STACK[0x568] + 374) >> 1)
                                                               - (~*(unsigned char *)(STACK[0x568] + 374) & 0xA8)
                                                               - 44) ^ 0xD4);
  char v91 = (v88 - ((2 * v88) & 0x20) - 112) ^ 0x90 | v90 & 0xBD ^ 0x21;
  *(unsigned char *)(STACK[0x568] + 358) = (v91 - ((2 * v91) & 0x48) + 36) ^ 0xDA;
  int v92 = *(unsigned __int8 *)(STACK[0x568] + 422) ^ 0xFE;
  int v93 = v92 - ((2 * v92) & 0xC8) - 1649306524;
  LOWORD(v55) = (v93 & 0x8A ^ 0x82) - ((2 * (v93 & 0x8A ^ 0x82)) & 0xFF0F);
  unsigned int v94 = *(unsigned __int8 *)(STACK[0x568] + 92) ^ v8;
  int v95 = ((v94 - ((2 * v94) & 0x1A4) + 1204136914) ^ 0x581ABD2) & (v93 ^ 0x2B9B);
  int v96 = ((_WORD)v55 + 1159) & 0x7FE ^ 0x404 | (v95 - ((2 * v95) & 0x14771BA4) + 1245416914) ^ 0x4A3B8DD2;
  unsigned int v97 = ((205 * (*(unsigned __int8 *)(STACK[0x568] + 155) ^ v8)) >> 10) & 7 ^ 0xFFFFFFDE;
  LOBYTE(v29) = ((v97 | 0xB1) - (v97 | 0x4E) + 78) ^ 0xC9;
  LOBYTE(v29) = ((v29 | 0x53) - (v29 | 0xAC) - 84) ^ 0xF5;
  LOBYTE(v29) = ((2 * v29) & 0xEE) + (v29 ^ 0x77);
  unsigned int v98 = (v96 - ((2 * v96) & 0x7F6068BE) - 1078971297) ^ 0xBFB0345F;
  int v99 = ((v98 >> ((7 - v29) & 7)) - ((2 * (v98 >> ((7 - v29) & 7))) & 0x9E) + 79) ^ ((v98 << (v29 - 119))
                                                                                   - ((2 * (v98 << (v29 - 119))) & 0xC4)
                                                                                   + 226);
  LOBYTE(v99) = ~(((2 * v99) ^ 0x5A) + (v99 ^ 0x52)) + (*(unsigned char *)(STACK[0x568] + 395) ^ 0xFE);
  *(unsigned char *)(STACK[0x568] + 395) = v99 + (~(2 * v99) | 3) - 1;
  *(unsigned char *)(STACK[0x568] + 345) ^= 0xFDu;
  LOBYTE(v99) = ((*(unsigned char *)(STACK[0x568] + 366) ^ 0xFE) * (*(unsigned char *)(STACK[0x568] + 366) ^ 0xFE)
               - ((2 * (*(unsigned char *)(STACK[0x568] + 366) ^ 0xFE) * (*(unsigned char *)(STACK[0x568] + 366) ^ 0xFE)) & 0xBF)
               - 33) ^ 0xDF;
  LOBYTE(v99) = (*(unsigned char *)(STACK[0x568] + 343) ^ 0xFE) + ((-90 * v99) & 0xEF) + ((-45 * v99) ^ 0x77) - 119;
  *(unsigned char *)(STACK[0x568] + 343) = v99 + (~(2 * v99) | 3) - 1;
  unsigned int v100 = ((((*(unsigned char *)(STACK[0x568] + 69) & 0xAC ^ 0xFFFFFF80) & 0xFFFFFF80)
         + (*(unsigned char *)(STACK[0x568] + 69) & 0x80)
         + (*(unsigned char *)(STACK[0x568] + 69) & 0xAC ^ 0xFFFFFF80)) | 0x12) ^ 0x18;
  unsigned int v101 = ((v100 | 9) - (v100 | 0xFFFFFFF6) - 10) & 0xFFFFFFBD ^ 0x67;
  unsigned int v102 = ((v101 + ((2 * v101) & 0x38 ^ 0xFFFFFFFB) + 31) ^ 0x1E)
       * (*(unsigned __int8 *)(STACK[0x570] + (*(unsigned char *)(STACK[0x568] + 116) & 0x3F ^ v8)) ^ 1);
  LODWORD(STACK[0x4A8]) = v102 ^ 0x3D;
  LODWORD(STACK[0x4B0]) = (2 * v102) & 0x7A;
  LOBYTE(v102) = (2 * *(unsigned char *)(v21 + (*(unsigned char *)(STACK[0x568] + 85) & 0x3F ^ v8))) ^ 0xFC;
  LOBYTE(v98) = (v102 - ((2 * v102) & 0x66) + 51) ^ 0xEA;
  unsigned int v103 = (*(unsigned char *)(STACK[0x568] + 39) & 0x58)
       + ((*(unsigned __int8 *)(STACK[0x568] + 39) >> 1) & 0x6C ^ 0xFFFFFFBF)
       - 89;
  LODWORD(STACK[0x4B8]) = v103;
  unsigned int v104 = (v103 & 0xFE) - ((2 * v103) & 0x18C) - 145745978;
  LOBYTE(v97) = byte_100221504[*(unsigned char *)(STACK[0x568] + 33) & 0x3F ^ v8];
  LOBYTE(v64) = *(unsigned char *)(STACK[0x570] + (v104 & 0x3C ^ 6));
  *(unsigned char *)(STACK[0x568] + 96) = v98;
  *(unsigned char *)(STACK[0x568] + 373) ^= (((v64 ^ 0xFE) & (v97 ^ 0xC3))
                                                    - ((2 * ((v64 ^ 0xFE) & (v97 ^ 0xC3))) & 0xAA)
                                                    + 85) ^ 0x55;
  unint64_t v105 = *(unsigned char *)(STACK[0x568] + 239) & 0x3F ^ v8;
  unsigned int v106 = *(unsigned __int8 *)(v21 + v105) ^ 0xFFFFFFFE | *(unsigned __int8 *)(STACK[0x568] + 148) ^ v8;
  unsigned int v107 = ((*(unsigned __int8 *)(v21 + (*(unsigned char *)(STACK[0x568] + 105) & 0x3F ^ v8)) | 0xFFFFFFE7) - 67) ^ 0xFFFFFFBC;
  unsigned int v108 = (((v106 - ((2 * v106) & 0x1C) + 14) & 0xFFFFFFC6 | v107) ^ 6) - ((2 * v107) & 0x20);
  LOBYTE(v107) = *(unsigned char *)(STACK[0x568] + 354);
  LOBYTE(v106) = (*(unsigned char *)(STACK[0x568] + 221) ^ v8) & (v107 ^ 0xFE);
  LOBYTE(v107) = (*(unsigned char *)(STACK[0x568] + 339) ^ 0xFE) & (v107 ^ 1);
  LOBYTE(v106) = (v107 - ((2 * v107) & 0x56) - 85) ^ 0xAB | (v106 + (~(2 * v106) | 0x99) + 52) ^ 0x33;
  unint64_t v109 = STACK[0x570];
  *(unsigned char *)(STACK[0x568] + 441) = (((v106 - ((2 * v106) & 0x48) - 28) & 0x68 ^ 0x89)
                                  + ((v106 - ((2 * v106) & 0x48) - 28) & 0x17)
                                  - 1) ^ 0x12;
  unsigned int v110 = 205 * (*(unsigned __int8 *)(v109 + (*(unsigned char *)(STACK[0x568] + 171) & 0x3F ^ v8)) ^ 0xFE);
  unsigned int v111 = (*(unsigned __int8 *)(STACK[0x568] + 24) ^ v8)
       + ((v110 >> 10) ^ 0xFFFFFFCE)
       + ((v110 >> 9) & 0x1C)
       + 50;
  *(unsigned char *)(STACK[0x568] + 44) ^= 0xD7 ^ (v111 + (~(2 * v111) | 0x51) - 40);
  int v112 = (((~((*(unsigned __int8 *)(STACK[0x568] + 137) >> 1) & 0x24) | 0x22)
         + ((*(unsigned __int8 *)(STACK[0x568] + 137) >> 1) & 0x20 | 0x1D)) ^ 0x1C | *(unsigned char *)(STACK[0x568] + 329) & 0x53) ^ 0x52;
  *(unsigned char *)(STACK[0x568] + 423) ^= 0xD8 ^ (v112 - ((2 * v112) & 0xB0) - 40);
  *(unsigned char *)(STACK[0x568] + 344) ^= 0xCE ^ (3
                                                           * (((*(unsigned char *)(STACK[0x568] + 67) | 0x2F)
                                                             - ((2 * *(unsigned char *)(STACK[0x568] + 67)) & 0xA0)
                                                             - 54) ^ 0xD6)
                                                           + (~(6
                                                              * (((*(unsigned char *)(STACK[0x568] + 67) | 0x2F)
                                                                - ((2 * *(unsigned char *)(STACK[0x568] + 67)) & 0xA0)
                                                                - 54) ^ 0xD6)) | 0x67)
                                                           - 49);
  *(unsigned char *)(STACK[0x568] + 370) = 75;
  *(unsigned char *)(STACK[0x568] + 419) ^= 0xBDu;
  LOBYTE(v20) = *(unsigned char *)(v109 + (*(unsigned char *)(STACK[0x568] + 37) & 0x3F ^ v8)) & 0x5E ^ 0x1C;
  LOBYTE(v88) = ((((v20 - ((2 * v20) & 0x18) - 116) & 0xD8 ^ 0xD1) + ((v20 - ((2 * v20) & 0x18) - 116) & v8 ^ 5) - 2) | ((((*(unsigned char *)(STACK[0x568] + 400) & 0xA1 ^ 0x7E) + 52) ^ 0xD4) - 122) & 0xA1) ^ 0x1A;
  LOBYTE(v88) = ((v88 - ((2 * v88) & 0xA8) - 44) ^ v9) + (*(unsigned char *)(STACK[0x568] + 188) ^ v8);
  LOBYTE(v107) = v88 - ((2 * v88) & 0x4C);
  LODWORD(STACK[0x4E0]) = byte_100221504[v105];
  char v113 = *(unsigned char *)(STACK[0x568] + 61) ^ v8;
  LOBYTE(v88) = byte_100221504[*(unsigned char *)(STACK[0x568] + 193) & 0x3F ^ v8] ^ 0xC3;
  LOBYTE(v20) = (((v88 | v113) - ((2 * (v88 | v113)) & 0xE8) - 12) ^ 0xF4) & (*(unsigned char *)(STACK[0x568] + 403) ^ 0xFE);
  LOBYTE(v88) = (v20 - ((2 * v20) & 0xEA) - 11) ^ 0xF5 | ((v88 & v113) - ((2 * (v88 & v113)) & 0x28) - 108) ^ 0x94;
  LOBYTE(v88) = (*(unsigned char *)(STACK[0x568] + 357) ^ 0xFE) + (v88 ^ 0x22) - ((2 * v88) & 0xBA) - 34;
  *(unsigned char *)(STACK[0x568] + 357) = v88 + (~(2 * v88) | 3) - 1;
  unsigned int v114 = v108 - 79;
  unint64_t v115 = (unsigned char *)STACK[0x568];
  LOBYTE(v88) = *(unsigned char *)(v109 + (*(unsigned char *)(STACK[0x568] + 159) & 0x3F ^ v8)) ^ 0xFE;
  LODWORD(STACK[0x548]) = v114;
  LOBYTE(v88) = (v88 & (v114 ^ 0x4E)) - ((2 * (v88 & (v114 ^ 0x4E))) & 0x58) + 44;
  LOBYTE(v88) = ((v88 & 0x9D ^ 0xF3) + ((2 * v88) & 0x20) - 112) & 0xDD ^ 0xAF;
  v115[371] ^= (v88 + ((2 * v88) & 0x18 ^ 0xFB) + 15) ^ 0xE;
  LOBYTE(v112) = (v115[116] ^ v8) - ((2 * (v115[116] ^ v8)) & 0xC2) + 97;
  LOBYTE(v79) = (v115[416] ^ 0xFE) - ((2 * (v115[416] ^ 0xFE)) & 0x1A) - 115;
  LOBYTE(v114) = (((v79 ^ 0x8D | v112 ^ 0x61) - ((2 * (v79 ^ 0x8D | v112 ^ 0x61)) & 0xE4) - 14) ^ 0xF2) & (((v115[349] ^ 0xFE) - ((2 * (v115[349] ^ 0xFE)) & 0xA2) + 81) ^ 0x51);
  LOBYTE(v114) = (v114 - ((2 * v114) & 0x4C) - 90) ^ 0xA6 | (((v79 ^ 0x8D) & (v112 ^ 0x61))
                                                           - ((2 * ((v79 ^ 0x8D) & (v112 ^ 0x61))) & 0xC6)
                                                           - 29) ^ 0xE3;
  int v116 = (v104 >> 1) ^ 0x7BA80BE3;
  LOBYTE(v114) = v114 - ((2 * v114) & 0x60) - 80;
  LOBYTE(v88) = (((v114 ^ 0xB0 | v116) - ((2 * (v114 ^ 0xB0 | v116)) & 0x7C) - 66) ^ 0xBE) & (((v115[321] ^ 0xFE)
                                                                                             - ((2 * (v115[321] ^ 0xFE)) & 0xBC)
                                                                                             - 34) ^ 0xDE);
  LOBYTE(v88) = (v88 - ((2 * v88) & 0x34) + 26) ^ 0x1A | (((v114 ^ 0xB0) & v116)
                                                        - ((2 * ((v114 ^ 0xB0) & v116)) & 0x8C)
                                                        + 70) ^ 0x46;
  v115[347] = (v88 - ((2 * v88) & 0xE8) + 116) ^ 0x8A;
  v115[188] = v107 + 38;
  LODWORD(v88) = *(unsigned __int8 *)(v21 + (((_BYTE)v107 + 38) & 0x3F ^ v8));
  HIDWORD(v117) = v88 ^ 2;
  LODWORD(v117) = ~v88 << 24;
  LOBYTE(v88) = (v115[381] ^ 0xFE) - ((2 * (v115[381] ^ 0xFE)) & 0xE7);
  LOBYTE(v112) = ((2 * ~v115[4]) & 0xC) + (v115[4] & 7);
  unsigned int v118 = ((v115[430] ^ 0xFE) - ((2 * (v115[430] ^ 0xFE)) & 0x24) - 682251758) ^ 0xD755AA12;
  int v119 = (v118 << (v112 - 6)) - ((2 * (v118 << (v112 - 6))) & 0xD4A7B96) + 111492555;
  int v120 = (v118 >> ((46 - v112) & 7)) - ((2 * (v118 >> ((46 - v112) & 7))) & 0x10CCA16) - 2138675957;
  LOBYTE(v112) = (v115[415] ^ 0xFE) - ((2 * (v115[415] ^ 0xFE)) & 0x50);
  char v121 = (v115[247] ^ v8) - ((2 * (v115[247] ^ v8)) & 0xA);
  v115[151] = v8;
  v121 += 5;
  char v122 = (*(unsigned char *)(v21 + (v115[41] & 0x3F ^ v8)) ^ 0xFE) + 0x80;
  LOBYTE(v112) = (((v122 ^ 0x80 | v121 ^ 5) - ((2 * (v122 ^ 0x80 | v121 ^ 5)) & 0xF6) - 5) ^ 0xFB) & ((v112 + 40) ^ 0x28);
  char v123 = (v112 - ((2 * v112) & 0x28) + 20) ^ 0x14 | (((v122 ^ 0x80) & (v121 ^ 5))
                                                   - ((2 * ((v122 ^ 0x80) & (v121 ^ 5))) & 0xC0)
                                                   - 32) ^ 0xE0;
  LOBYTE(v120) = v119 ^ v120 ^ 0xC0;
  char v124 = (v123 - ((2 * v123) & 0xB2) - 39) ^ 0xD9;
  LOBYTE(v88) = (((v124 | v120) - ((2 * (v124 | v120)) & 0xE4) + 114) ^ 0x72) & ((v88 - 13) ^ 0xF3);
  LOBYTE(v88) = (v88 - ((2 * v88) & 0xE6) - 13) ^ 0xF3 | ((v124 & v120) - ((2 * (v124 & v120)) & 0x46) - 93) ^ 0xA3;
  LOBYTE(v88) = (v115[354] ^ 0xFE)
              + ((v88 - ((2 * v88) & 4) - 126) ^ 0xFC)
              + ((2 * (v88 - ((2 * v88) & 4) - 126)) & 0xFC ^ 4)
              - 126;
  v115[354] = v88 - ((2 * v88) & 0xFC) - 2;
  LOBYTE(v88) = (v115[442] ^ 0xFE) - ((2 * (v115[442] ^ 0xFE)) & 0x1F) - 113;
  char v125 = ((v88 & 0x23 ^ 1) - ((2 * v88) & 4) - 62) ^ 0xC4;
  LOBYTE(v88) = (((v115[372] ^ 0xFE) - ((2 * (v115[372] ^ 0xFE)) & 0xE0) + 112) ^ 0x70) & (v88 ^ 0x70);
  LOBYTE(v88) = (v125 - ((2 * v125) & 0xA2) - 47) ^ 0xD5 | (v88 - ((2 * v88) & 0x6C) - 74) ^ 0xB6;
  LOBYTE(v88) = (v88 - ((2 * v88) & 0xC8) + 100) ^ 0x64;
  v115[339] = (v88 * v88) ^ 0xFE;
  LOBYTE(v88) = (((v115[444] & 0x20) + (v115[444] & 0x25 ^ 0xA6)) | 0x10) - ((v115[444] & 0x25 ^ 0xA6) & 0x20);
  LOBYTE(v88) = (v115[322] ^ 0xFE) + (v88 & 0xE5 ^ 0x6F) + ((2 * v88) & 0x40) - 25;
  LOBYTE(v88) = (v115[361] ^ 0xFE) + (v88 ^ 0xF9) + ((2 * v88) & 0xF3) + 7;
  v115[361] = v88 - ((2 * v88) & 0xFC) - 2;
  LODWORD(v88) = v7 ^ 0x708FBFBE ^ (45 * (((LODWORD(STACK[0x670]) - v7) | (v7 - LODWORD(STACK[0x670]))) >= 0));
  LODWORD(STACK[0x4E8]) = LODWORD(STACK[0x4D8]) + 34;
  LODWORD(STACK[0x4F0]) = (v117 >> 26) - ((2 * (v117 >> 26)) & 0x76) + 59;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (int)v88))();
}

uint64_t sub_1001ED37C@<X0>(char a1@<W1>, int a2@<W2>, unsigned char *a3@<X6>, int a4@<W8>)
{
  int v13 = LODWORD(STACK[0x4A8]) + LODWORD(STACK[0x4B0]);
  int v14 = LODWORD(STACK[0x4C8]) + LODWORD(STACK[0x4C0]);
  LODWORD(STACK[0x570]) = v4 ^ v8;
  char v15 = (((*v9 ^ 0x99) + 127) ^ 0x17) + ((2 * ((*v9 ^ 0x99) + 127)) & 0x2E) - 2;
  unsigned char *v9 = ((v15 ^ 3) + 2 * (v15 & 3) - 24) ^ 0x99;
  if (v5 == a2 - 1) {
    unsigned int v16 = v11;
  }
  else {
    unsigned int v16 = v11 + 1;
  }
  char v17 = *v16;
  if (v5 == a2 - 1) {
    char v18 = 0;
  }
  else {
    char v18 = 89;
  }
  char v19 = v17 ^ v18;
  if (v5 == a2 - 1) {
    uint64_t v20 = 4;
  }
  else {
    uint64_t v20 = 5;
  }
  char v21 = v19 ^ *(unsigned char *)(v6 + v20);
  if (v5 == a2 - 1) {
    char v22 = a3;
  }
  else {
    char v22 = a3 + 1;
  }
  char v23 = v21 ^ *v22;
  if (v5 == a2 - 1) {
    char v24 = v9;
  }
  else {
    char v24 = v9 + 1;
  }
  char v25 = (((v23 ^ *v24) - 20) ^ 0x7F) + 2 * ((v23 ^ *v24) - 20) - 1;
  *char v24 = v23 ^ ((v25 ^ 0x22) + ((2 * v25) & 0x44) + 96);
  uint64_t v26 = 2 % v7;
  char v27 = (89 * v26) ^ v11[v26] ^ *(unsigned char *)(v6 + v26 + 4) ^ a3[v26];
  char v28 = (((v27 ^ v9[v26]) + 111) ^ 0xC7) + ((2 * ((v27 ^ v9[v26]) + 111)) & 0x8F) + 125;
  v9[v26] = v27 ^ ((v28 ^ 0xA8) + (v10 & (2 * v28)) + 20);
  uint64_t v29 = 3 % v7;
  int v30 = (byte_10021F9C0[v29] ^ v9[v29] ^ (-79 * v29) ^ byte_10023C0E0[v29] ^ byte_100246BA0[v29 | 4])
      + LODWORD(STACK[0x4B8]);
  v9[v29] = v11[v29] ^ (89 * v29) ^ *(unsigned char *)(v6 + (v29 | 4)) ^ a3[v29] ^ (((2 * (v30 & 0x1F) + (v30 ^ 0x9F) + 121) ^ 0x5E)
                                                                          + ((2 * (2 * (v30 & 0x1F) + (v30 ^ 0x9F)) - 14) & 0xBC)
                                                                          - 118);
  int v31 = STACK[0x670];
  unsigned int v32 = LODWORD(STACK[0x670]) ^ 0x708FBBE7;
  uint64_t v33 = 4 % v32;
  int v34 = (89 * v33) ^ v11[v33] ^ *(unsigned __int8 *)(v33 + v6 + 4) ^ a3[v33];
  unsigned int v35 = (v34 ^ v9[v33]) - 3;
  unsigned int v36 = (v35 ^ 0xFFFFFFFE) + 4 * (v35 >> 1) + 82;
  v9[v33] = v34 ^ ((v36 ^ 0x26) + ((2 * v36) & 0x4C) - 118);
  uint64_t v37 = 5 % v32;
  LOBYTE(v34) = (89 * v37) ^ v11[v37] ^ *(unsigned char *)(v37 + v6 + 4) ^ a3[v37];
  v9[v37] = v34 ^ (((((2 * ((v34 ^ v9[v37]) + 17)) & 0xF7) + (((v34 ^ v9[v37]) + 17) ^ 0xFB)) ^ 0xE1)
                 + ((2 * (((2 * ((v34 ^ v9[v37]) + 17)) & 0xF7) + (((v34 ^ v9[v37]) + 17) ^ 0xFB))) & 0xC3)
                 + 36);
  uint64_t v38 = 6 % v32;
  int v39 = (byte_10021F9C0[v38] ^ v9[v38] ^ (-79 * v38) ^ byte_10023C0E0[v38] ^ byte_100246BA0[v38 + 4])
      + (LODWORD(STACK[0x4E8]) ^ 0x52);
  v9[v38] = v11[v38] ^ (89 * v38) ^ *(unsigned char *)(v6 + v38 + 4) ^ a3[v38] ^ ((v39 ^ 0x7F) + 2 * v39 - 127);
  uint64_t v40 = 7 % v32;
  LOBYTE(v39) = (89 * v40) ^ v11[v40] ^ *(unsigned char *)(v40 + v6 + 4) ^ a3[v40];
  v9[v40] = v39 ^ ((((v39 ^ v9[v40]) + 47) ^ 0x4D) + ((2 * ((v39 ^ v9[v40]) + 47)) & 0x9A) - 77);
  uint64_t v41 = 8 % v32;
  LOBYTE(v39) = v13 + (byte_10021F9C0[v41] ^ v9[v41] ^ (-79 * v41) ^ byte_10023C0E0[v41] ^ byte_100246BA0[v41 + 4]) + 36;
  v9[v41] = v11[v41] ^ (89 * v41) ^ *(unsigned char *)(v6 + v41 + 4) ^ a3[v41] ^ (((((2 * v39) & 0xDA) + (v39 ^ 0xED)) ^ 0x19)
                                                                        + ((2 * (((2 * v39) & 0xDA) + (v39 ^ 0xED))) & 0x33)
                                                                        - 6);
  uint64_t v42 = 9 % v32;
  LOBYTE(v39) = (v11[v42] ^ v9[v42] ^ (89 * v42) ^ *(unsigned char *)(v42 + v6 + 4) ^ a3[v42]) - 118;
  v9[v42] = byte_10021F900[v42] ^ (63 * v42) ^ byte_100220470[v42 + 1] ^ byte_100224BE0[v42 + 7] ^ ((v39 | 0xFD)
                                                                                                  + ((((2 * v39) & 0xB8) + (v39 ^ 0x5C)) & 0xFD)
                                                                                                  - 89);
  uint64_t v43 = 0xA % (v31 ^ 0x708FBBE7u);
  int v44 = (63 * v43) ^ byte_10021F900[v43] ^ byte_100220470[v43 + 1] ^ byte_100224BE0[v43 + 7];
  unsigned int v45 = ((LODWORD(STACK[0x550]) + 36) ^ 0xFFFFFFC0)
      - 2 * ((LODWORD(STACK[0x550]) + 36) & 0x3F)
      + (v44 ^ v9[v43])
      + 64;
  v9[v43] = v44 ^ (((((2 * v45) & 0xBC) + (v45 ^ 0xDE) + 116) ^ 0xF4)
                 + ((2 * (((2 * v45) & 0xBC) + (v45 ^ 0xDE)) - 24) & 0xE8)
                 - 70);
  uint64_t v46 = 0xB % (v31 ^ 0x708FBBE7u);
  LOBYTE(v44) = (63 * v46) ^ byte_10021F900[v46] ^ byte_100220470[v46 + 1] ^ byte_100224BE0[v46 + 7];
  v9[v46] = v44 ^ ((((v44 ^ v9[v46]) - 44) ^ 0x37) + ((2 * ((v44 ^ v9[v46]) - 44)) & 0x6E) - 55);
  uint64_t v47 = 0xC % (v31 ^ 0x708FBBE7u);
  LOBYTE(v46) = (a1 - 19) ^ 0xBD;
  LOBYTE(v44) = (36 - 2 * a1) & 0x72;
  char v48 = (63 * v47) ^ byte_10021F900[v47] ^ byte_100220470[v47 + 1] ^ byte_100224BE0[v47 + 7];
  LOBYTE(v46) = v46 - v44 + (v48 ^ v9[v47]) + 58;
  v9[v47] = v48 ^ (((((2 * v46) & 0x4E) + (v46 ^ 0x27) + 113) ^ 0xA9)
                 + ((2 * (((2 * v46) & 0x4E) + (v46 ^ 0x27)) + 98) & 0x52)
                 + 31);
  LODWORD(v46) = STACK[0x670];
  unsigned int v49 = LODWORD(STACK[0x670]) ^ 0x708FBBE7;
  uint64_t v50 = 0xD % v49;
  int v51 = (byte_10021F9C0[v50] ^ v9[v50] ^ (-79 * v50) ^ byte_10023C0E0[v50] ^ byte_100246BA0[v50 + 4])
      + (LODWORD(STACK[0x4E0]) ^ 0xFFFFFFC3);
  v9[v50] = byte_10021F900[v50] ^ (63 * v50) ^ byte_100220470[v50 + 1] ^ byte_100224BE0[v50 + 7] ^ (((((2 * v51) & 0xEA) + (v51 ^ 0x75)) ^ 0x73)
                                                                                                  + ((2 * (((2 * v51) & 0xEA) + (v51 ^ 0x75))) & 0xE7)
                                                                                                  + 24);
  uint64_t v52 = 0xE % v49;
  LOBYTE(v45) = (63 * v52) ^ byte_10021F900[v52] ^ byte_100220470[v52 + 1] ^ byte_100224BE0[v52 + 7];
  char v53 = (v45 ^ v9[v52]) + 42;
  v9[v52] = v45 ^ (((((2 * v53) & 0xDA) + (v53 ^ 0x6D) - 41) | 0x3A)
                 - ((40 - (((2 * v53) & 0xDA) + (v53 ^ 0x6D))) & 0x3A)
                 - 68);
  uint64_t v54 = 0xF % v49;
  LOBYTE(v45) = (63 * v54) ^ byte_10021F900[v54] ^ byte_100220470[v54 + 1] ^ byte_100224BE0[v54 + 7];
  char v55 = (((v45 ^ v9[v54]) - 75) ^ 0xF7) + ((2 * ((v45 ^ v9[v54]) - 75)) & 0xEF) + 76;
  v9[v54] = v45 ^ ((v55 ^ 0x4D) + ((2 * v55) & 0x9A) + 112);
  LODWORD(v46) = v46 ^ 0x708FBBE7;
  uint64_t v56 = 0x10 % v46;
  char v57 = v14
      + (byte_10021F9C0[v56 & 0xF] ^ v9[v56] ^ byte_10023C0E0[v56 & 0xF] ^ byte_100246BA0[(v56 & 0xF) + 4] ^ (-79 * (v56 & 0xF)))
      - 85;
  v9[v56] = byte_10021F900[v56 & 0xF] ^ (63 * (v56 & 0xF)) ^ byte_100220470[(v56 & 0xF) + 1] ^ byte_100224BE0[(v56 & 0xF) + 7] ^ (((~v57 + 2 * v57 + 127) ^ 0xA1) + ((2 * (~v57 + 2 * v57) + 126) & 0x42) - 31);
  uint64_t v58 = 0x11 % v46;
  char v59 = byte_100220470[(v58 & 0xF) + 1] ^ byte_10021F900[v58 & 0xF];
  LOBYTE(v45) = 63 * (v58 & 0xF);
  unsigned __int8 v60 = byte_100224BE0[(v58 & 0xF) + 7];
  char v61 = (v59 ^ v9[v58] ^ v60 ^ v45) + 35;
  v9[v58] = v59 ^ v45 ^ v60 ^ (((2 * v61) & 0xFB)
                             + (v61 ^ 0xFD)
                             + ((15 - (((2 * v61) & 0xFB) + (v61 ^ 0xFD))) | 0xCD)
                             + ((((2 * v61) & 0xFB) + (v61 ^ 0xFD) + 48) | 0xCD)
                             + 55);
  uint64_t v62 = 0x12 % v46;
  int v63 = (v11[v62 & 0xF] ^ v9[v62] ^ *(unsigned __int8 *)((v62 & 0xF) + v6 + 4) ^ (89 * (v62 & 0xF)) ^ a3[v62 & 0xF])
      + (LODWORD(STACK[0x4F0]) ^ 0xFFFFFF86);
  v9[v62] = byte_10021F900[v62 & 0xF] ^ (63 * (v62 & 0xF)) ^ byte_100220470[(v62 & 0xF) + 1] ^ byte_100224BE0[(v62 & 0xF) + 7] ^ ((v63 ^ 0x6B) + ((2 * v63) & 0xD6) - 107);
  LODWORD(v62) = STACK[0x670];
  unsigned int v64 = LODWORD(STACK[0x670]) ^ 0x708FBBE7;
  uint64_t v65 = 0x13 % v64;
  LOBYTE(v58) = (byte_10021F9C0[v65 & 0xF] ^ v9[v65] ^ byte_10023C0E0[v65 & 0xF] ^ byte_100246BA0[(v65 & 0xF) + 4] ^ (-79 * (v65 & 0xF)))
              + STACK[0x4F8];
  LOBYTE(v58) = (v58 ^ 0xBF) + 2 * (v58 & 0x3F) + 84;
  v9[v65] = byte_10021F980[v65 & 0xF] ^ (-59 * (v65 & 0xF)) ^ byte_100220440[(v65 & 0xF) + 1] ^ byte_1002455F0[(v65 & 0xF) + 1] ^ ((v58 ^ 0xF3) + ((2 * v58) & 0xE7) - 6);
  uint64_t v66 = 0x14 % v64;
  uint64_t v67 = (v66 & 0xF) + 1;
  char v68 = byte_100220440[v67];
  LOBYTE(v67) = byte_1002455F0[v67];
  char v69 = v68 ^ byte_10021F980[v66 & 0xF];
  LOBYTE(v32) = -59 * (v66 & 0xF);
  char v70 = (v69 ^ v9[v66] ^ v67 ^ v32) - 64;
  v9[v66] = v69 ^ v32 ^ v67 ^ ((v70 ^ 0xDF) + ((2 * v70) & 0xBF) + 33);
  uint64_t v71 = 0x15 % v64;
  uint64_t v72 = (v71 & 0xF) + 1;
  LOBYTE(v32) = byte_100220440[v72] ^ byte_10021F980[v71 & 0xF];
  LOBYTE(v72) = byte_1002455F0[v72];
  LOBYTE(v66) = -59 * (v71 & 0xF);
  char v73 = (v32 ^ v9[v71] ^ v72 ^ v66) - 26;
  v9[v71] = v32 ^ v66 ^ v72 ^ ((v73 ^ 0x56) + ((2 * v73) & 0xAC) - 86);
  LODWORD(v62) = v62 ^ 0x708FBBE7;
  uint64_t v74 = 0x16 % v62;
  uint64_t v75 = (v74 & 0xF) + 1;
  LOBYTE(v32) = byte_100220440[v75] ^ byte_10021F980[v74 & 0xF];
  LOBYTE(v75) = byte_1002455F0[v75];
  LOBYTE(v66) = -59 * (v74 & 0xF);
  char v76 = (v32 ^ v9[v74] ^ v75 ^ v66) - 95;
  v9[v74] = v32 ^ v66 ^ v75 ^ ((v76 ^ 0xF7) + ((2 * v76) & 0xEF) + 9);
  uint64_t v77 = 0x17 % v62;
  int v78 = (byte_10021F9C0[v77 & 0xF] ^ v9[v77] ^ byte_10023C0E0[v77 & 0xF] ^ byte_100246BA0[(v77 & 0xF) + 4] ^ (-79 * (v77 & 0xF)))
      + (LODWORD(STACK[0x570]) ^ 0x4D);
  v9[v77] = byte_10021F980[v77 & 0xF] ^ (-59 * (v77 & 0xF)) ^ byte_100220440[(v77 & 0xF) + 1] ^ byte_1002455F0[(v77 & 0xF) + 1] ^ ((v78 ^ 0xF7) + ((2 * v78) & 0xEF) + 9);
  uint64_t v79 = 0x18 % v62;
  uint64_t v80 = (v79 & 0xF) + 1;
  char v81 = byte_100220440[v80] ^ byte_10021F980[v79 & 0xF];
  LOBYTE(v80) = byte_1002455F0[v80];
  LOBYTE(v32) = -59 * (v79 & 0xF);
  LOBYTE(v75) = (v81 ^ v9[v79] ^ v80 ^ v32) - 118;
  v9[v79] = v81 ^ v32 ^ v80 ^ ((v75 ^ 0x1B) + ((2 * v75) & 0x36) - 27);
  uint64_t v82 = 0x19 % v62;
  uint64_t v83 = (v82 & 0xF) + 1;
  LOBYTE(v75) = byte_100220440[v83];
  LOBYTE(v83) = byte_1002455F0[v83];
  char v84 = -59 * (v82 & 0xF);
  LOBYTE(v80) = v75 ^ byte_10021F980[v82 & 0xF];
  LOBYTE(v79) = (v80 ^ v9[v82] ^ v83 ^ v84) - 125;
  v9[v82] = v80 ^ v84 ^ v83 ^ ((v79 ^ 0x6D) + ((2 * v79) & 0xDA) - 109);
  LODWORD(v82) = STACK[0x670];
  LODWORD(v80) = LODWORD(STACK[0x670]) ^ 0x708FBBE7;
  uint64_t v85 = 0x1A % v80;
  uint64_t v86 = (v85 & 0xF) + 1;
  LOBYTE(v83) = byte_100220440[v86] ^ byte_10021F980[v85 & 0xF];
  LOBYTE(v86) = byte_1002455F0[v86];
  LOBYTE(v50) = -59 * (v85 & 0xF);
  char v87 = (v83 ^ v9[v85] ^ v86 ^ v50) + 118;
  v9[v85] = v83 ^ v50 ^ v86 ^ ((v87 ^ 0x7B) + ((2 * v87) & 0xF7) - 123);
  uint64_t v88 = 0x1B % v80;
  LOBYTE(v58) = byte_100220440[(v88 & 0xF) + 1] ^ byte_10021F980[v88 & 0xF] ^ (-59 * (v88 & 0xF)) ^ byte_1002455F0[(v88 & 0xF) + 1];
  v9[v88] = v58 ^ ((((v58 ^ v9[v88]) - 122) ^ 0xAB) + ((2 * (v58 ^ v9[v88]) + 12) & 0x56) + 6);
  uint64_t v89 = 0x1C % v80;
  uint64_t v90 = (v89 & 0xF) + 2;
  LOBYTE(v45) = byte_10021FBE0[v90];
  LOBYTE(v90) = byte_10023C780[v90];
  LOBYTE(v83) = 87 * (v89 & 0xF);
  LOBYTE(v86) = v45 ^ byte_10021F8C0[v89 & 0xF];
  char v91 = (v86 ^ v9[v89] ^ v90 ^ v83) + 115;
  v9[v89] = v86 ^ v83 ^ v90 ^ ((v91 ^ 0x7D) + ((2 * v91) & 0xFB) - 125);
  uint64_t v92 = 0x1D % v80;
  char v93 = (byte_10021F9C0[v92 & 0xF] ^ v9[v92] ^ byte_10023C0E0[v92 & 0xF] ^ byte_100246BA0[(v92 & 0xF) + 4] ^ (-79 * (v92 & 0xF)))
      + STACK[0x558];
  v9[v92] = byte_10021F8C0[v92 & 0xF] ^ (87 * (v92 & 0xF)) ^ byte_10021FBE0[(v92 & 0xF) + 2] ^ byte_10023C780[(v92 & 0xF) + 2] ^ ((v93 ^ 0x9F) + 2 * (v93 & 0x1F) + 97);
  unsigned int v94 = v82 ^ 0x708FBBE7;
  uint64_t v95 = 0x1E % (v82 ^ 0x708FBBE7);
  uint64_t v96 = (v95 & 0xF) + 2;
  LOBYTE(v45) = byte_10021FBE0[v96];
  LOBYTE(v96) = byte_10023C780[v96];
  LOBYTE(v80) = 87 * (v95 & 0xF);
  LOBYTE(v83) = v45 ^ byte_10021F8C0[v95 & 0xF];
  LOBYTE(v92) = (v83 ^ v9[v95] ^ v96 ^ v80) + 81;
  v9[v95] = v83 ^ v80 ^ v96 ^ (((((2 * v92) & 0xD6) + (v92 ^ 0xEB) + 62) ^ 0x2B)
                             + ((2 * (((2 * v92) & 0xD6) + (v92 ^ 0xEB)) + 124) & 0x56)
                             - 84);
  uint64_t v97 = 0x1F % v94;
  LODWORD(v26) = (byte_10021F9C0[v97 & 0xF] ^ v9[v97] ^ byte_10023C0E0[v97 & 0xF] ^ byte_100246BA0[(v97 & 0xF) + 4] ^ (-79 * (v97 & 0xF)))
               + (LODWORD(STACK[0x548]) ^ 0xFFFFFFB1);
  LOBYTE(v26) = (v26 ^ 0xE9) + ((2 * v26) & 0xD2) + 64;
  v9[v97] = byte_10021F8C0[v97 & 0xF] ^ (87 * (v97 & 0xF)) ^ byte_10021FBE0[(v97 & 0xF) + 2] ^ byte_10023C780[(v97 & 0xF) + 2] ^ ((v26 ^ 0xDF) + ((2 * v26) & 0xBF) - 8);
  v9[0 % v94] ^= *v12 ^ 0xFE;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((106 * (a4 == 1390)) ^ a4)))();
}

uint64_t sub_1001EE3D0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(v8 + ((int)v7 - 1544884126) % a3) ^= *(unsigned char *)(v7 + v9 - 1544884126) ^ 0xFE;
  return (*(uint64_t (**)(void))(a4 + 8 * ((83 * (v7 + 1 != a6 + 64)) ^ v6)))();
}

uint64_t sub_1001EE434(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(unsigned char *)(v10 + ((int)v8 + a7) % a3) ^= *(unsigned char *)(v8 + v11 - 2139391791) ^ 0x26;
  return (*(uint64_t (**)(void))(a4 + 8 * (((v8 + 1 == v9 + 319) * (((v7 - 112) | 0x100) ^ 0x5E3)) ^ v7)))();
}

uint64_t sub_1001EE498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, int a4@<W4>, int a5@<W8>)
{
  uint64_t v7 = (a4 - 1775133580) % a3;
  uint64_t v8 = (a4 - 1775133587) % a3;
  int v9 = *(unsigned __int8 *)(v6 + v8);
  uint64_t v10 = v8 & 0xF;
  uint64_t v11 = (a4 - 1775133617) % a3;
  unsigned int v12 = *(unsigned __int8 *)(v6 + v11);
  int v13 = *(unsigned __int8 *)(v5 + v10) ^ v9 ^ *(unsigned __int8 *)(a1 + v10 + 2);
  uint64_t v14 = (a4 - 1775133757) % a3;
  HIDWORD(v15) = -(int)v11 ^ v12 ^ *(unsigned __int8 *)(v5 + (v11 & 0xF)) ^ *(unsigned __int8 *)(a1 + (v11 & 0xF) + 2) ^ *(unsigned __int8 *)(a2 + (v11 & 0xF) + 2);
  LODWORD(v15) = ((105 * (v11 & 0xF)) ^ v12 ^ *((unsigned __int8 *)&unk_10021F9A0 + (v11 & 0xF)) ^ *((unsigned __int8 *)&unk_100223AC0 + (v11 & 0xF)) ^ *((unsigned __int8 *)&unk_100223730 + (v11 & 0xF))) << 24;
  int v16 = __PAIR64__(v13 ^ (v10 * (a5 ^ 0x296)) ^ *(unsigned __int8 *)(a2 + v10 + 2), (v13 ^ (v10 * (a5 ^ 0x296)) ^ *(unsigned __int8 *)(a2 + v10 + 2)) << 24) >> 31;
  int v17 = *((unsigned __int8 *)&unk_10021F9A0 + (v14 & 0xF)) ^ *(unsigned __int8 *)(v6 + v14) ^ *((unsigned __int8 *)&unk_100223AC0
                                                                                              + (v14 & 0xF));
  int v18 = *((unsigned __int8 *)&unk_100223730 + (v14 & 0xF));
  int v19 = (v15 >> 26) - ((2 * (v15 >> 26)) & 0x12);
  HIDWORD(v15) = v17 ^ v14 ^ v18;
  LODWORD(v15) = (v17 ^ (105 * (((a4 - 1775133757) % a3) & 0xF)) ^ v18) << 24;
  uint64_t v20 = (uint64_t (*)(void))*(&off_10026D1A0 + (((a4 != 1775133835) | (2 * (a4 != 1775133835))) ^ a5));
  *(unsigned char *)(v6 + v7) ^= (105 * (v7 & 0xF)) ^ (87 * (v7 & 0xF)) ^ *(unsigned char *)(v5 + (v7 & 0xF)) ^ *(unsigned char *)(a1 + (v7 & 0xF) + 2) ^ *(unsigned char *)(a2 + (v7 & 0xF) + 2) ^ (v19 + 9) ^ (v16 - ((2 * v16) & 0x98) + 76) ^ *((unsigned char *)&unk_10021F9A0 + (v7 & 0xF)) ^ *((unsigned char *)&unk_100223AC0 + (v7 & 0xF)) ^ *((unsigned char *)&unk_100223730 + (v7 & 0xF)) ^ ((v15 >> 27) - ((2 * (v15 >> 27)) & 0x90) - 56) ^ 0x8D;
  return v20();
}

uint64_t sub_1001EE688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  uint64_t v8 = (void *)STACK[0x820];
  int v9 = STACK[0x670];
  STACK[0x788] = 263 * (a8 ^ 0x1C3u) + STACK[0x788] - 974;
  v8[8] = 0xDED30A4024145F56;
  v8[9] = 0x1482B5319C0A3DB9;
  v8[10] = 0xEB7D4ACE63F5C246;
  *(void *)((char *)v8 + 92) = 0xC8643A156B9173A0;
  STACK[0x888] = *(void *)(a4 + 8 * (a8 ^ 0x1FB));
  return sub_1001F4544(a1, a2, a3, a4, a5, a6, a7, v9);
}

uint64_t sub_1001EE728(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  if ((v4 ^ a3) <= 1) {
    int v5 = 1;
  }
  else {
    int v5 = v4 ^ a3;
  }
  return (*(uint64_t (**)(uint64_t))(a4
                                            + 8
                                            * (((8 * ((v5 - 17) > 0xFFFFFFF6)) | (16
                                                                                              * ((v5 - 17) > 0xFFFFFFF6))) ^ LODWORD(STACK[0x49C]))))(1731199255);
}

uint64_t sub_1001EE784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((((((LODWORD(STACK[0x49C]) - 35) ^ 0x26D) - 1610) ^ (LODWORD(STACK[0x49C]) - 1186))
                                * (a5 < 0x10)) ^ (LODWORD(STACK[0x49C]) - 35))))();
}

uint64_t sub_1001EE7C0@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  return sub_1001EA890(a1, 53 * (a2 ^ 0x140u), (int8x16_t)xmmword_10021E900, (int8x8_t)0x5959595959595959, (int8x8_t)0x1818181818181818);
}

uint64_t sub_1001EE808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  *uint64_t v6 = xmmword_10021F840;
  return (*(uint64_t (**)(__n128))(a4
                                           + 8
                                           * ((((a5 & 0xFFFFFFF0) == 16) * ((a6 - 2036705333) & 0x7965A7FF ^ 0x78D)) ^ (a6 - 49))))((__n128)xmmword_10021F840);
}

void sub_1001EE860()
{
}

uint64_t sub_1001EE868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(a4 + 8 * (((((a5 == v6) ^ (v5 + 106)) & 1) * (v5 ^ 0x7B8)) ^ v5)))();
}

uint64_t sub_1001EE8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((566 * ((((v5 - 1175) ^ 0x50A ^ ((v5 - 413) | 4)) & a5) == 0)) ^ v5)))();
}

uint64_t sub_1001EE8DC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7)
{
  *(unsigned char *)(v9 + (a6 - 1731199255)) = *(unsigned char *)(v10 + ((a6 - 1731199255) & 0xFLL)) ^ *(unsigned char *)((((_BYTE)a6 - 23) & 0xF) + v8 + 4) ^ *(unsigned char *)(a7 + ((a6 - 1731199255) & 0xFLL)) ^ (89 * ((a6 - 23) & 0xF)) ^ 0x18;
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((109 * (((a6 == a1 + a5 + (v7 ^ 0x6D) - 1066) ^ ((v7 ^ 0x6D) + 6)) & 1)) ^ v7 ^ 0x6D)))();
}

void sub_1001EE95C()
{
}

uint64_t sub_1001EE964@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32((const float *)v4);
  uint64_t v7 = (a2 - 869) ^ 0x2DLL;
  v8.i64[0] = 0x8000000080000000;
  v8.i64[1] = 0x8000000080000000;
  v5.i64[0] = *(void *)(v4 + 4);
  v5.i32[2] = *(_DWORD *)(v3 + 4 * v7);
  int8x16_t v9 = vextq_s8(v6, v5, 0xCuLL);
  int8x16_t v10 = v5;
  v10.i32[3] = *(_DWORD *)(v4 + 16);
  int32x4_t v11 = (int32x4_t)veorq_s8(vandq_s8(v10, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x64254C8Au));
  int8x16_t v12 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v11, v11), (int8x16_t)vdupq_n_s32(0x804EB5B4)), v11), vdupq_n_s32(0x3FD8A524u));
  int32x4_t v13 = (int32x4_t)veorq_s8(v12, (int8x16_t)vdupq_n_s32(0x1758A545u));
  int32x4_t v14 = (int32x4_t)veorq_s8((int8x16_t)vsubq_s32(vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v12, (int8x16_t)vdupq_n_s32(0xC4492C3A)), (int8x16_t)vdupq_n_s32(0xC001083A)), v13), (int32x4_t)vandq_s8((int8x16_t)v13, (int8x16_t)vdupq_n_s32(0xC4492C3B))), (int8x16_t)vdupq_n_s32(0x8235682E));
  v13.i32[0] = *(_DWORD *)(v2 + 4 * (*(_DWORD *)(v4 + 4) & 1));
  v13.i32[1] = *(_DWORD *)(v2 + 4 * (*(_DWORD *)(v4 + 8) & 1));
  v13.i32[2] = *(_DWORD *)(v2 + 4 * (*(_DWORD *)(v3 + 4 * v7) & 1));
  v13.i32[3] = *(_DWORD *)(v2 + 4 * (v10.i8[12] & 1));
  *(int8x16_t *)uint64_t v4 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v4 - 908), (int8x16_t)v13), (int8x16_t)vdupq_n_s32(0x3607A655u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v14, vbicq_s8(v8, v9)), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v14, v14), (int8x16_t)vdupq_n_s32(0x34B771FCu))), vdupq_n_s32(0x9A5BB8FE)), 1uLL));
  return (*(uint64_t (**)(void))(a1 + 8 * (a2 - 869)))();
}

void sub_1001EEAF4()
{
}

uint64_t sub_1001EEB00@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned int v3 = (*v2 & 0x7FFFFFFE ^ 0x7DE71258)
     - (((a2 + 1085146367) & 0xBF51FFFF ^ 0x7BD7D594) & (2 * (*v2 & 0x7FFFFFFE ^ 0x7DE71258)))
     + 1038870815;
  unsigned int v4 = (v3 & 0xBCB31936 ^ 0x90201024) + (v3 ^ 0x2FDFEB9A) - ((v3 ^ 0x2FDFEB9A) & 0xBCB31936);
  v2[623] = v2[396] ^ *((_DWORD *)&STACK[0x14B8] + (*v2 & 1)) ^ (((v4 ^ 0xD9B90115 | ~v2[623] & 0x80000000)
                                                                  - 2 * ((v4 ^ 0xD9B90115) & 0x6AFFA17E ^ v4 & 2)
                                                                  - 352345732) >> 1) ^ 0xE55AA94;
  return (*(uint64_t (**)(void))(a1 + 8 * ((1465 * (LODWORD(STACK[0x934]) > 0x26F)) ^ a2)))();
}

uint64_t sub_1001EEC08@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  LODWORD(STACK[0x934]) = 0;
  int v5 = LODWORD(STACK[0x934])++;
  *(_DWORD *)(v2 + 1752) = v5 + 340121380;
  unint64_t v6 = 516615401
     * ((0x83ACD9DE97B2E20CLL - ((v4 - 192) | 0x83ACD9DE97B2E20CLL) + ((v4 - 192) | 0x7C532621684D1DF3)) ^ 0xF4EFAE5A1B2E1BC1);
  int v7 = v6 + a2 + 761498074;
  *(void *)(v4 - 184) = (*(_DWORD *)(v3 + 1760) - 143219350) - v6;
  *(_DWORD *)(v4 - 192) = v6;
  *(_DWORD *)(v4 - 160) = v7 + 81;
  *(_DWORD *)(v4 - 156) = (a2 - 185256482) ^ v6;
  *(_DWORD *)(v4 - 152) = v7 + 31;
  *(void *)(v4 - 168) = v6 ^ 0x57C90D93;
  *(_DWORD *)(v4 - 172) = (a2 + 761498074) ^ v6;
  (*(void (**)(uint64_t))(a1 + 8 * (a2 + 1436)))(v4 - 192);
  return ((uint64_t (*)(void))*(&off_10026D1A0 + *(int *)(v4 - 176)))();
}

void sub_1001EED18()
{
  if (v0 >= v1) {
    int v3 = *(_DWORD *)(v2 + 1760) + 1;
  }
  else {
    int v3 = 1616013353;
  }
  *(_DWORD *)(v2 + 1760) = v3;
  JUMPOUT(0x1001EEE74);
}

uint64_t sub_1001EEEEC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((v3 + 8 == a3) * ((((v4 ^ 0x35D) + 1958) ^ 0xFFFFF807) + 857 * (v4 ^ 0x35D))) ^ v4)))();
}

uint64_t sub_1001EEF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  LODWORD(STACK[0x4F8]) = a6;
  STACK[0x14B8] = 0xE222CAF57B2A7A2ALL;
  LODWORD(STACK[0x934]) = *(_DWORD *)(v7 + 1752) - 340121379;
  uint64_t v10 = *(unsigned int *)(v8 + 1760);
  unint64_t v11 = 1856021207
      * ((((v9 - 192) | 0x7795070DA2BE965CLL) - ((v9 - 192) & 0x7795070DA2BE965CLL)) ^ 0x9A819096ECD740A2);
  *(_DWORD *)(v9 - 188) = v11 ^ (v6 + 640448582) ^ 0xEC;
  *(_DWORD *)(v9 - 184) = (v6 + 640448482) ^ v11;
  *(_DWORD *)(v9 - 160) = v11 + v6 + 1123495617;
  *(_DWORD *)(v9 - 156) = v11;
  *(_DWORD *)(v9 - 180) = v6 + 640448582 + v11;
  *(void *)(v9 - 176) = a2 - v11;
  *(void *)(v9 - 168) = v10 ^ v11;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (v6 ^ 0xFDB)))(v9 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v9 - 192)))(v12);
}

uint64_t sub_1001EF01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = STACK[0x578];
  int v7 = (STACK[0x578] - 1448260593) & 0x5652AF7F;
  STACK[0x558] = (*(uint64_t (**)(unint64_t, uint64_t))(a4 + 8 * (int)(STACK[0x578] + 125)))(STACK[0x4F0], 3312658705);
  int v9 = (*(uint64_t (**)(void))(a4 + 8 * (int)(v6 ^ 0xFCB)))();
  unsigned int v10 = v7 - 1965487874 + v9 - ((2 * v9) & 0x15B211FC) - 823;
  *(_DWORD *)(v5 + 3344) = v10;
  *(_DWORD *)(v4 + 4) = (v7 ^ 0x7FFF3EAC ^ (1812433253 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))))
                      + ((-670100790 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))) & 0xFFFE7B36)
                      + 182045540
                      - ((2
                        * ((v7 ^ 0x7FFF3EAC ^ (1812433253 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))))
                         + ((-670100790 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))) & 0xFFFE7B36))
                        - 536771380) & 0x15B211FC);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v7 ^ 0xB1u)))(1723915817);
}

void sub_1001EF168()
{
}

uint64_t sub_1001EF184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = 536 * (STACK[0x578] ^ 0x7AA);
  int8x16_t v7 = (int8x16_t)vld1q_dup_f32((const float *)v4);
  int8x16_t v8 = (int8x16_t)vdupq_n_s32(0x3944F7A8u);
  v9.i64[0] = 0x8000000080000000;
  v9.i64[1] = 0x8000000080000000;
  v5.i64[0] = *(void *)(v4 + 4);
  v5.i32[2] = *(_DWORD *)(v4 + 12);
  int8x16_t v10 = vextq_s8(v7, v5, 0xCuLL);
  int8x16_t v11 = v5;
  v11.i32[3] = *(_DWORD *)(v4 + 16);
  int8x16_t v12 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v10, v9), (int8x16_t)vdupq_n_s32(0xC20E1A00)), vdupq_n_s32(0x4C847444u));
  int32x4_t v13 = (int32x4_t)veorq_s8(vandq_s8(v11, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x106C6A00u));
  int32x4_t v14 = (int32x4_t)veorq_s8((int8x16_t)vsubq_s32(vaddq_s32(v13, (int32x4_t)veorq_s8(vandq_s8(v11, v8), (int8x16_t)vdupq_n_s32(0xA90095A8))), (int32x4_t)vandq_s8((int8x16_t)v13, v8)), (int8x16_t)vdupq_n_s32(0xA3F19556));
  v15.i32[0] = *((_DWORD *)&STACK[0x14B8] + (*(_DWORD *)(v4 + 4) & 1));
  v15.i32[1] = *((_DWORD *)&STACK[0x14B8] + (*(_DWORD *)(v4 + 8) & 1));
  v15.i32[2] = *((_DWORD *)&STACK[0x14B8] + (*(_DWORD *)(v4 + 12) & 1));
  v15.i32[3] = *((_DWORD *)&STACK[0x14B8] + (v11.i8[12] & 1));
  *(int8x16_t *)uint64_t v4 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v4 + 1588), v15), (int8x16_t)vdupq_n_s32(0x79E3C826u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v14, veorq_s8(v12, (int8x16_t)vdupq_n_s32(0x8E928E44))), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v14, v14), (int8x16_t)vdupq_n_s32(0xB26C832u))), vdupq_n_s32(0x5936419u)), 1uLL));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 8 * (v6 ^ 0x57)))(1779453764, 2750515926, 960821160);
}

uint64_t sub_1001EFC60@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W8>)
{
  int8x16_t v9 = (unsigned int *)(v7 + 4 * (v6 + v8));
  unsigned int v10 = (v5 & 0x80000000 ^ 0xC20E1A00) + 1283748932;
  uint64_t v11 = v6 + 1;
  int v12 = *(_DWORD *)(v7 + 4 * (v11 + v8));
  unsigned int v13 = ((v12 & 0x7FFFFFFE ^ (a5 + 275539408)) + (v12 & a3 ^ 0xA90095A8) - ((v12 & 0x7FFFFFFE ^ (a5 + 275539408)) & a3)) ^ (a2 + 2688);
  unsigned int *v9 = v9[397] ^ *((_DWORD *)&STACK[0x14B8] + (v12 & 1)) ^ (((v13 | v10 ^ 0x8E928E44)
                                                            - ((2 * v13) & 0xB26C832)
                                                            + 93545497) >> 1) ^ 0x79E3C826;
  return (*(uint64_t (**)(void))(a4 + 8 * ((754 * (v11 == a1 + 3)) ^ a5)))();
}

uint64_t sub_1001EFD44()
{
  STACK[0x788] = 0;
  STACK[0x868] = v0;
  STACK[0x8F8] = STACK[0x558];
  return sub_1001EFD58();
}

uint64_t sub_1001EFD58(uint64_t a1)
{
  int v3 = *(uint64_t (**)(void))(a1 + 8 * v1);
  if (!qword_100284C30)
  {
    unint64_t v4 = 0;
    qword_100284C30 = v2;
    dword_100284A28 = 255;
    do
    {
      *(_DWORD *)(v2 + 4 * v4) |= ~*(_DWORD *)(v2 + 4 * (*(_DWORD *)(v2 + 4 * v4) & 0x3ELL)) << 16;
      BOOL v5 = v4 >= 0x3B;
      v4 += 4;
    }
    while (!v5);
  }
  return v3();
}

uint64_t sub_1001EFDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((v2 - 710) ^ (7 * (a2 == 0)))))();
}

uint64_t sub_1001EFDDC(uint64_t a1)
{
  byte_100284A2C = 1;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((((*(char *)(STACK[0x538] + 1) < 2) ^ (((v1 + 79) & 0x7F ^ 0x75) + 1)) & 1)
                                * ((((v1 - 241420721) & 0xE63C77F) + 38314096) & 0x1DB75EB9 ^ 0x4AD)) ^ (v1 - 241420721) & 0xE63C77Fu)))();
}

uint64_t sub_1001EFE64@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((1899 * ((v3 ^ (((v2 - a2) | (a2 - v2)) >> 7)) & 1)) ^ (a2 | 0x130u))))();
}

uint64_t sub_1001EFE9C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  if (*(unsigned __int8 *)(STACK[0x538] + 2) == ((a2 + 41) ^ 0x56 ^ ((_BYTE)a2 - 24) & 0xBD ^ 0xD4)) {
    int v3 = v2;
  }
  else {
    int v3 = -42018;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((1540 * (v3 == 0)) ^ (a2 + 553))))();
}

uint64_t sub_1001EFF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned int a7@<W8>)
{
  int v8 = (a7 + 27) ^ 0x6798 ^ (((a7 - 117) | 0x3A0)
                           + ((*(unsigned __int8 *)(STACK[0x538] + 3)
                             - ((2 * *(unsigned __int8 *)(STACK[0x538] + 3)) & 0xC6)) << 8)
                           + 23384);
  unsigned int v9 = (v8 - 27904 + (~(2 * v8) | 0xFFFFDBFF)) ^ 0xFFFF92FF | (*(unsigned __int8 *)(STACK[0x538] + 4)
                                                             + (~(2 * *(unsigned __int8 *)(STACK[0x538] + 4)) | 0xFFFFFE63)
                                                             - 3377) ^ 0xFFFFF2CE;
  int v10 = (v9 - ((2 * v9) & 0x3076) - 26565) ^ 0x983B;
  unsigned int v11 = ((2 * v10) & 0x1AF6A) + ((unsigned __int16)v10 ^ 0xFFEBD7B5) + 776186655;
  unsigned int v12 = LODWORD(STACK[0x704]) - 1104274682;
  int v13 = (v12 < 0x2E2F82D4) ^ (v11 < 0x2E2F82D4);
  BOOL v14 = v11 < v12;
  if (v13) {
    BOOL v14 = v12 < 0x2E2F82D4;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((479 * v14) ^ a7)))(a1, a2, a3, a4, a5, a6, 4294925278);
}

uint64_t sub_1001F0020()
{
  unint64_t v4 = STACK[0x538] + 5;
  int v5 = 1189216979 * (((v3 - 192) & 0x97A295A5 | ~((v3 - 192) | 0x97A295A5)) ^ 0x46B6669C);
  *(_DWORD *)(v3 - 192) = (v0 + 420) ^ v5;
  *(_DWORD *)(v3 - 184) = v1 + v5 + ((280 * (v0 ^ 0x49F)) ^ 0x407C7946);
  *(void *)(v3 - 176) = v4;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1021)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((930 * (*(_DWORD *)(v3 - 188) == 0)) ^ v0)))(v6);
}

uint64_t sub_1001F00D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * (((*(unsigned __int8 *)(STACK[0x538] + (v6 + 1321040)) == (((v7 ^ 0x22) + 30) ^ 0xAA)) * (((v7 ^ 0x622) + 763) ^ 0x325)) ^ v7 ^ 0x622)))(a1, a2, a3, a4, a5, a6, 4294925278);
}

uint64_t sub_1001F0128@<X0>(int a1@<W8>)
{
  unint64_t v4 = ((v1 + 1766622586) | ((unint64_t)((v1 + 1766622586) < 0x69385D29) << 32))
     + STACK[0x538]
     - 1765301545;
  unsigned int v5 = (((((a1 + 803) ^ 0xC9) + *(unsigned __int8 *)v4 - ((*(unsigned __int8 *)v4 << (a1 ^ 0x84)) & 0xB8)) << 8) - 1280) ^ 0x5C00;
  LODWORD(v4) = (v5 - (v5 >> 11 << 12) + 30973) ^ 0x78FD | (*(unsigned __int8 *)(v4 + 1)
                                                          - ((2 * *(unsigned __int8 *)(v4 + 1)) & 0xB2)
                                                          - 24743) ^ 0xFFFF9F59;
  LODWORD(v4) = (v4 - ((2 * v4) & 0x702) - 31871) ^ 0x8381;
  LODWORD(v4) = ((2 * v4) & 0x1BEBC) + ((unsigned __int16)v4 ^ 0x7FDDDF5E) - 429163034;
  int v6 = ((v2 - 163056266) < 0x66495D44) ^ (v4 < 0x66495D44);
  BOOL v7 = v4 < v2 - 163056266;
  if (v6) {
    BOOL v7 = (v2 - 163056266) < 0x66495D44;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((494 * v7) ^ a1)))();
}

uint64_t sub_1001F0284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v10 = a7 ^ 0x532;
  unint64_t v11 = STACK[0x538] + ((v10 + 1521) ^ 0x142FFBu) + v8;
  BOOL v13 = v7 - 1771061764 != ((v10 + 1709825504) & 0x9A16237D) + 374184517 && v11 != 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                                  + 8 * ((99 * v13) ^ v10)))(a1, a2, a3, a4, a5, a6, 4294925273);
}

uint64_t sub_1001F0300()
{
  unsigned int v3 = (((v1 ^ 0x802223B7) + v0) & 0xFFFFFFF0 ^ 0x7EFBF3FF) + ((2 * ((v1 ^ 0x802223B7) + v0)) & 0xFDF7E7E0);
  LODWORD(STACK[0x8B0]) = v3 - 894238099;
  uint64_t v4 = (*(uint64_t (**)(void, uint64_t))(v2 + 8 * (v1 + 1296)))(((v1 - 2125185822) & 0x7EABC5FF) - 2130442703 + v3, 3996565863);
  STACK[0x8A8] = v4;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v4 != 0) | (32 * (v4 != 0))) ^ v1)))();
}

uint64_t sub_1001F03A8(uint64_t a1)
{
  *(_WORD *)a1 = 513;
  __int16 v7 = v2 - ((2 * v2 + 6178) & 0xFF40) - 29771;
  *(unsigned char *)(a1 + 2) = HIBYTE(v7) ^ 0x7F;
  *(unsigned char *)(a1 + 3) = (v3 - 83) ^ v7;
  *(unsigned char *)(a1 + 4) = ((unsigned __int16)(v2 - v1 - ((2 * (v2 - v1) + 5854) & 0x2718) + 32507) >> 8) ^ 0x93;
  *(unsigned char *)(a1 + 5) = (v2 - v1 - ((2 * (v2 - v1) - 34) & 0x18) - 5) ^ 0x8C;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (v3 ^ (8
                                     * (((v1 + 1341028784) | ((unint64_t)(v4 < v5 + 789) << 32)) != 3486275854)))))();
}

uint64_t sub_1001F0498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v11 = v5 < v4;
  *(unsigned char *)(v7 + a1 - 0x15B1AFD711AB82B6) = *(unsigned char *)(v6 + v9 - 0x513F94EB6E173DBALL);
  if (v11 == v8 - 0x2242D5E3F9160B8ALL < v4) {
    BOOL v11 = v8 - 0x2242D5E3F9160B8ALL < v5;
  }
  return (*(uint64_t (**)(void))(a4 + 8 * (v10 | (8 * v11))))();
}

uint64_t sub_1001F053C@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  LODWORD(STACK[0x550]) = v4 + a2;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((493
                                * (((2 * (v3 + 14805871)) & 0xFFDA7AEE75EE6A2ALL)
                                 - 0x7FED3D772B43D7B4
                                 + ((v3 + 14805871) ^ 0x7FED3D773AF73093 ^ ((v2 ^ 0x6E8u) + 1405)) == 263413089)) ^ v2)))();
}

void sub_1001F05CC(int a1@<W8>)
{
  LODWORD(STACK[0x5D8]) = (a1 ^ 0xB2DA22AC) + v1;
  JUMPOUT(0x100195664);
}

uint64_t sub_1001F05F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((((v2 - 1521) ^ 0x186) * (a2 == 0)) | (v2 - 932))))();
}

uint64_t sub_1001F0620(uint64_t a1)
{
  STACK[0x570] = v2;
  byte_100284A2C = 1;
  return (*(uint64_t (**)(void))(a1 + 8 * ((28 * (LODWORD(STACK[0x8C0]) != (v1 ^ 0x261) + 68413165)) | (v1 - 869))))();
}

uint64_t sub_1001F0678()
{
  int v2 = (*(uint64_t (**)(const char *, void))(v1 + 8 * (v0 ^ 0xDAE)))("mobactivationd", __progname);
  BOOL v3 = ((2 * v2) & 0xBFFCFBE6) + ((v0 + 21) ^ 0xDFFE782D ^ v2) == (v0 ^ 0xD6A47CAC) + 156894350;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v3 | (16 * v3)) ^ v0)))();
}

uint64_t sub_1001F0708()
{
  int v4 = (*(uint64_t (**)(const char *, void))(v3 + 8 * (v2 ^ v1)))("mobileactivationd", *v0);
  unsigned int v5 = ((v4 << (v2 - v1 - 98)) & ((v2 - v1 - 645) ^ 0xAD48F714)) + (v4 ^ (v1 + 2147));
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 ^ (v1 + 3723) ^ (31 * ((((v5 - v2) | (v2 - v5)) & 0x80000000) == 0)))))();
}

uint64_t sub_1001F0784()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 + 4)))("findmydeviced", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((508
                                * (((v3 << ((((v1 - 101) & 0xDF) - 48) ^ 0xAF)) & 0xEFCDFBC2) + (v3 ^ 0xF7E6FDE1) == -135856671)) ^ (v1 - 366))))();
}

uint64_t sub_1001F0814()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 + 697)))("findmydeviced-nano-support", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((((v1 ^ 0x5A0) + 1488) ^ (((2 * v3) & 0xBFF9F3CA) + (v3 ^ 0x5FFCF9E5) == 1610414565)) & 1) == 0)
                                * ((23 * (v1 ^ 0x5A0)) ^ 0x12C)) ^ v1)))();
}

uint64_t sub_1001F0890()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 ^ 0x925)))("identityservicesd", *v0);
  BOOL v4 = ((((v1 - 65) | 0x2C2) ^ 0xADFAF30D) & (2 * v3)) + (v3 ^ 0xD6FD7867) == -688031641;
  return (*(uint64_t (**)(void))(v2 + 8 * (((4 * v4) | (8 * v4)) ^ v1)))();
}

uint64_t sub_1001F090C()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 + 1188)))("amsaccountsd", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1926
                                * (((2 * v3) & 0xAD4AF4EE) + (v3 ^ (((v1 + 69) | 0x45) + 1453684266)) == (((v1 - 933) | 0x5C0) ^ 0x56A57FA9))) ^ v1)))();
}

uint64_t sub_1001F0988()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 + 1050)))("AppStore", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((37
                                * (((687 * ((v1 + 810619826) & 0xCFAEEDDE ^ 0x5DD) - 1107693615) & (2 * v3))
                                 + (v3 ^ 0xDEFCFBEF) != -553845777)) ^ v1)))();
}

uint64_t sub_1001F0A10()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 + 90)))("itunesstored", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((79
                                * ((((v1 - 559) ^ (((2 * v3) & 0xFD6BFDD2) + (v3 ^ 0xFEB5FEE9) == (((v1 - 866) | 0x10) ^ 0xFEB5FA52))) & 1) == 0)) ^ v1)))();
}

uint64_t sub_1001F0A88()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 ^ 0xCDC)))("StoreKitUIService", *v0);
  BOOL v4 = ((2 * v3) & 0xBDE9F3DA) + (v3 ^ 0x5EF4F9ED) == (((v1 ^ 0x165) + 561) ^ 0x5EF4F1E2);
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v4) | (4 * v4)) ^ v1)))();
}

uint64_t sub_1001F0AF8()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 + 88)))("appstored", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((28
                                * (((v3 << (((v1 + 113) | 0x51) + 48)) & ((751 * (v1 ^ 0x80D)) ^ 0xBDECF224))
                                 + (v3 ^ 0x5EF67BFD) == 1593211901)) ^ v1)))();
}

uint64_t sub_1001F0B78()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 + 150)))("Fitness", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((4076
                                * (((v3 << (((v1 - 75) | 0x58) + ((v1 + 48) ^ 0x22))) & 0xED4BFCE6) + (v3 ^ 0xF6A5FE73) != -156893581)) ^ v1)))();
}

uint64_t sub_1001F0BF0()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 + 614)))("appinstallationmetricsd", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((11
                                * (((v3 << (((v1 - 2) & 0xDE) + 35)) & 0xAD69F4E2) + (v3 ^ 0xD6B4FA71) != ((v1 - 1700422212) & 0x655A5FFA ^ 0xD6B4F9C9))) ^ v1)))();
}

uint64_t sub_1001F0C84()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (int)(v1 + 1199)))("attributionkitd", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((125
                                * (((((v1 ^ 0x666) - 1116014900) ^ (v1 + 908)) & (2 * v3)) + (v3 ^ 0x5EBD7DF7) == 1589476855)) ^ v1)))();
}

uint64_t sub_1001F0CF0()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 ^ 0xF23)))("test", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((62
                                * (((2 * v3) & 0xBFDAFFE6) + ((751 * (v1 ^ 0x746)) ^ 0xDFED7A2D ^ v3) == ((v1 - 1226001993) & 0x491347E5 ^ 0xDFED7F12))) ^ v1)))();
}

uint64_t sub_1001F0D8C()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (int)(v1 + 1926)))("ProvenanceCombo", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((2 * v3) & 0xBDEDF4FE) + (v3 ^ 0x5EF6FA7F) == ((v1 + 1735) ^ 0x5EF6FDD7))
                                * ((v1 - 1339013858) & 0x4FCFBFDE ^ 0x146)) ^ v1)))();
}

uint64_t sub_1001F0E18()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0xDFB)))(152, 0x10300401EA5018FLL);
  STACK[0x8F0] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 != 0) * (((4 * (v0 ^ 0x434)) ^ 0x413) + ((2 * v0) ^ 0xBB4))) ^ v0)))();
}

uint64_t sub_1001F0E80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((((v2 - 396) ^ 0x161) * (v1 == 1)) ^ v2)))();
}

void sub_1001F0EAC(uint64_t a1@<X0>, int a2@<W8>)
{
  int v3 = 1189216979 * ((1484279903 - ((v2 - 192) | 0x5878505F) + ((v2 - 192) | 0xA787AFA0)) ^ 0x896CA366);
  int v4 = a2 + LODWORD(STACK[0x704]) - 798561344 + v3;
  *(void *)(v2 - 176) = STACK[0x538];
  *(_DWORD *)(v2 - 184) = v4;
  *(_DWORD *)(v2 - 192) = (a2 + 807) ^ v3;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (a2 ^ 0xB80)))(v2 - 192);
  sub_1001F0F6C(v5, v6, v7, v8, v9, v10, *(_DWORD *)(v2 - 188));
}

uint64_t sub_1001F0F40(uint64_t a1)
{
  return sub_1001F0F6C(a1);
}

void sub_1001F0F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(_DWORD *)(v7 + 56) = a7;
}

uint64_t sub_1001F0FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v8 = v4 < v5;
  *(unsigned char *)(a1
           + ((v7 - 1497249851) | ((unint64_t)((v7 - 1497249851) < 0x269FA71D) << 32))
           - 647997213) = 0;
  unint64_t v9 = ((v6 - 1405) ^ 0xE3EF2F4A14FB9C5ALL) + 0x1C10D0B5FAB7C10FLL;
  int v10 = v8 ^ (v9 < v5);
  BOOL v11 = v9 < v4;
  if (!v10) {
    BOOL v8 = v11;
  }
  return (*(uint64_t (**)(void))(a4 + 8 * ((106 * !v8) ^ v6)))();
}

void sub_1001F1058()
{
}

uint64_t sub_1001F1064()
{
  uint64_t v7 = 4 * (v1 - 1836454634);
  unsigned int v8 = *((_DWORD *)&xmmword_100283D10 + (v1 - 1836454635)) ^ 0x57F38384 ^ ((*((_DWORD *)&xmmword_100283D10
                                                                                          + (v1 - 1836454635)) >> 30) | 0xDD2A8B78);
  unsigned int v9 = (*(_DWORD *)((char *)&xmmword_100283D10 + v7) ^ 0x2350A8ED ^ (1664525 * v8
                                                                   - ((3329050 * v8) & 0x53134026)
                                                                   - 1450598381))
     + (*(_DWORD *)(STACK[0x570] + 4 * (v5 - 681142906)) ^ 0x8AD908FE);
  unsigned int v10 = (v9 ^ 0x79F7F6FB) + v5 + ((2 * v9) & 0xF3EFEDF6);
  *(_DWORD *)((char *)&xmmword_100283D10 + v7) = v10 - ((2 * v10 + 450706710) & 0x15B211FC) - 397957239;
  *(_DWORD *)(v6 - 160) = ((v4 - 1110431544) ^ 0x53) + v3;
  *(_DWORD *)(v6 - 156) = (v4 - 185257761) ^ v3;
  *(_DWORD *)(v6 - 152) = v3 + v4 - 1110431544 + 14;
  *(void *)(v6 - 184) = (v1 + 776223007) - v3;
  *(_DWORD *)(v6 - 172) = (v4 - 1110431544) ^ v3;
  *(void *)(v6 - 168) = v2;
  *(_DWORD *)(v6 - 192) = v3;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v4 ^ 0xFED)))(v6 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v6 - 176)))(v11);
}

uint64_t sub_1001F11EC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((((STACK[0x578] - 1680) | 1) ^ 0x109) * (v1 >= 0x9BBA4C08)) ^ (STACK[0x578] - 1695))))();
}

uint64_t sub_1001F122C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((STACK[0x578] - 1695) | (16 * (v1 <= STACK[0x578] - 1682290993)))))();
}

uint64_t sub_1001F1264@<X0>(int a1@<W8>)
{
  LODWORD(xmmword_100283D10) = dword_1002846CC;
  *(void *)(v5 - 152) = v2;
  *(_DWORD *)(v5 - 184) = ((a1 ^ 0x6B1) - 742914327) ^ v3;
  *(_DWORD *)(v5 - 192) = v3 | 1;
  *(void *)(v5 - 168) = (v4 - 1142824270) ^ v3;
  *(_DWORD *)(v5 - 160) = -1231242342 - v3 + (a1 ^ 0x6B1);
  *(_DWORD *)(v5 - 180) = (((a1 ^ 0x6B1) - 742914336) | 0x45) ^ v3;
  *(_DWORD *)(v5 - 176) = (a1 ^ 0x6B1) - 742914336 + v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 ^ 0x94B)))(v5 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v5 - 188)))(v6);
}

uint64_t sub_1001F131C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((((STACK[0x578] - 1431) | 8) - 533) * (v1 < 0xE47B4D2B)) ^ (STACK[0x578] - 389))))();
}

uint64_t sub_1001F1378()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((v1 > ((STACK[0x578] - 1943) | 0x208) - 461681899)
                                     * (((STACK[0x578] - 919) | 0xC0) - 1229)) ^ (STACK[0x578] - 389))))();
}

uint64_t sub_1001F13DC@<X0>(int a1@<W8>)
{
  int v4 = 3 * (a1 ^ 0x462);
  *(_DWORD *)(STACK[0x570] + 4 * ((v4 ^ 0xD766979E) + v2)) ^= 0x833E66AD ^ *(_DWORD *)(STACK[0x560]
                                                                                       + 4 * ((v4 ^ 0xD766979E) + v2));
  return (*(uint64_t (**)(void))(v1 + 8 * ((1297 * (v3 + ((v4 + 119363025) & 0xF8E2AFBD) == 1058833062)) ^ v4)))();
}

uint64_t sub_1001F1484()
{
  return sub_1001F1064();
}

uint64_t sub_1001F1490@<X0>(int a1@<W8>)
{
  *int v2 = v2[623];
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((((a1 ^ 0x7A9) - 308) | 0x600) ^ 0xFFFFF857) + v4 != v3)
                                * ((8 * (a1 ^ 0x7A9)) ^ 0x16C6)) ^ a1 ^ 0x7A9)))();
}

uint64_t sub_1001F14E4@<X0>(int a1@<W8>)
{
  uint64_t v5 = 4 * (v2 - 1836454634);
  unsigned int v6 = *((_DWORD *)&xmmword_100283D10 + (v2 - 1836454635));
  int v7 = (*(_DWORD *)((char *)&xmmword_100283D10 + v5) ^ 0xEB4022E5 ^ (1566083941 * (v6 ^ v3 ^ (v6 >> 30))
                                                                   - ((-1162799414 * (v6 ^ v3 ^ (v6 >> 30))) & 0xC3325436)
                                                                   + 1637427739))
     - v2;
  *(_DWORD *)((char *)&xmmword_100283D10 + v5) = v7 - ((2 * v7 + 451683796) & 0x15B211FC) - 129033240;
  unint64_t v8 = 516615401
     * ((~((v4 - 192) ^ 0xD0F2459FE8D34947 | 0xD7C1FE4EC6377693)
       + (((v4 - 192) ^ 0xD0F2459FE8D34947) & 0xD7C1FE4EC6377693)) ^ 0x7070CC55A278C619);
  *(_DWORD *)(v4 - 192) = v8;
  *(_DWORD *)(v4 - 172) = (a1 - 758943632) ^ v8;
  *(_DWORD *)(v4 - 152) = ((a1 - 758943632) ^ 0xF) + v8;
  *(void *)(v4 - 168) = v8 ^ 0xCE359D0B;
  *(void *)(v4 - 184) = (v2 + 1623165474) - v8;
  *(_DWORD *)(v4 - 160) = v8 + a1 - 758943632 + 125;
  *(_DWORD *)(v4 - 156) = (a1 - 185257761) ^ v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 + 157)))(v4 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v4 - 176)))(v9);
}

uint64_t sub_1001F1674()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((v1 < ((STACK[0x578] - 1228) ^ 0xCE359FD7))
                                     * ((STACK[0x578] + 1671998925) & 0x9C574FFF ^ 0x5BF)) ^ (STACK[0x578] - 563))))();
}

uint64_t sub_1001F16CC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((((STACK[0x578] ^ 0x574) + 739) ^ (STACK[0x578] - 563)) * (v1 > 0xCE359F7A)) ^ (STACK[0x578] - 563))))();
}

uint64_t sub_1001F1708()
{
  int v2 = (v0 ^ 0x1688) + 1856;
  LODWORD(xmmword_100283D10) = 181995774;
  (*(void (**)(unint64_t))(v1 + 8 * (v0 ^ 0x1ECE)))(STACK[0x560]);
  int v3 = (v2 - 1960) | 0x356;
  int8x16_t v4 = (int8x16_t)vld1q_dup_f32((const float *)&xmmword_100283D10);
  int8x16_t v5 = (int8x16_t)vdupq_n_s32(0x7FFFFFFEu);
  int32x4_t v6 = vdupq_n_s32(0x22267D4u);
  v7.i64[0] = 0x8000000080000000;
  v7.i64[1] = 0x8000000080000000;
  v8.i64[0] = *(void *)((char *)&xmmword_100283D10 + 4);
  v8.i32[2] = *((_DWORD *)&xmmword_100283D10 + (v3 ^ 0x7D9u) - 1164);
  int8x16_t v9 = vextq_s8(v4, v8, 0xCuLL);
  int8x16_t v10 = v8;
  v10.i32[3] = dword_100283D20[0];
  int8x16_t v11 = (int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(v9, v5), vdupq_n_s32(0xFBF00F3A));
  int8x16_t v12 = veorq_s8(vandq_s8(v10, v5), (int8x16_t)vdupq_n_s32(0x1E1F2A76u));
  int32x4_t v13 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v12, (int8x16_t)vdupq_n_s32(0xFDDD982B)), (int32x4_t)vorrq_s8(v12, (int8x16_t)v6)), v6), (int8x16_t)vdupq_n_s32(0xE91BBAA3));
  v14.i32[0] = *((_DWORD *)&STACK[0x14B0] + (BYTE4(xmmword_100283D10) & 1));
  v14.i32[1] = *((_DWORD *)&STACK[0x14B0] + (BYTE8(xmmword_100283D10) & 1));
  v14.i32[2] = *((_DWORD *)&STACK[0x14B0] + (*((_DWORD *)&xmmword_100283D10 + (v3 ^ 0x7D9u) - 1164) & 1));
  v14.i32[3] = *((_DWORD *)&STACK[0x14B0] + (dword_100283D20[0] & 1));
  xmmword_100283D10 = (__int128)veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_100284344, v14), (int8x16_t)vdupq_n_s32(0x63C78C9Cu)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v13, vbicq_s8(v7, v11)), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v13, v13), (int8x16_t)vdupq_n_s32(0x25D24BFAu))), vdupq_n_s32(0x12E925FDu)), 1uLL));
  return ((uint64_t (*)(void))*(&off_10026D1A0 + v3))();
}

uint64_t sub_1001F1778()
{
  uint64_t v4 = ((176 * (v1 ^ 0x150)) ^ (v2 + 576)) + v3;
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0x971)))(v4, 54355340);
  STACK[0x6A0] = v5;
  uint64_t v6 = ((uint64_t (*)(uint64_t, uint64_t))*(&off_10026D1A0 + v1 + 1745))(v4, 691708531);
  STACK[0x5A0] = v6;
  if (v5) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v8 = !v7;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((16 * v8) | (32 * v8)) ^ v1)))();
}

uint64_t sub_1001F1814()
{
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8 * (v1 + 1809)))(v3, 1, v5, v2);
  LODWORD(STACK[0x550]) = v4 + 144146311;
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((1790
                               * (v5 == ((v6
                                                - ((2 * v6) & 0x1890C2C)
                                                + ((v1 + 1727635054) & 0x990662FD ^ 0xFFFFFD0F)
                                                + 12879431) ^ 0xC48616))) ^ v1)))();
}

uint64_t sub_1001F18BC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((234
                                * (((v3 + v2 + ((v1 - 1051552399) & 0x3EAD6BFA)) & 0xF) == ((2
                                                                                           * (v3
                                                                                            + v2
                                                                                            + ((v1 - 1051552399) & 0x3EAD6BFA))) & 0x1A))) ^ v1)))();
}

uint64_t sub_1001F190C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((v1 + 891) | (32
                                             * ((v2 | ((unint64_t)(v2 < 0x1824E994) << 32))
                                              + ((17 * ((v1 + 891) ^ 0x4DBu)) ^ 0x293F9A41) == 1097106601)))))();
}

void sub_1001F1990()
{
  ((void (*)(uint64_t))*(&off_10026D1A0 + (v0 ^ 0x97A)))(v1);
  STACK[0x6A0] = 0;
  sub_1001F203C();
}

uint64_t sub_1001F19CC@<X0>(int a1@<W8>)
{
  BOOL v8 = v2 < v1;
  *(unsigned char *)(v4 + v7 - 0x578940B1185EA4AFLL) = *(unsigned char *)(v3 + v6 - 0x2AB5E19A4E6BBB14);
  unint64_t v9 = ((a1 - 891) ^ 0xC318495B0C59FA5ELL) + v5;
  int v10 = v8 ^ (v9 < v1);
  BOOL v11 = v9 < v2;
  if (!v10) {
    BOOL v8 = v11;
  }
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (a1 ^ (32 * !v8))))();
}

uint64_t sub_1001F1A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * (((((v6 - 1331) | 0x41) ^ 0xFA) * (a6 == 4)) ^ (v6 - 1354))))(a1, a2, v7, a3, a4, a5, 4294925295);
}

uint64_t sub_1001F1AA0@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  uint64_t v13 = (int)(v7 - 1);
  int8x16_t v14 = (char *)(*(void *)(v11 + 8) + v13);
  char v15 = *v14;
  int v16 = *(_DWORD *)(v5 + v6);
  unint64_t v17 = ((((v14 ^ v16) & v8) * a4) ^ ((((v14 ^ v16) & v8) * a4) >> 16)) * a4;
  int v18 = (unsigned char *)(v12 + v13);
  unint64_t v19 = ((((v18 ^ v16) & 0x7FFFFFFF) * a4) ^ ((((v18 ^ v16) & 0x7FFFFFFF) * a4) >> 16)) * a4;
  *int v18 = *(unsigned char *)(v9 + (v17 >> 24)) ^ v15 ^ *(unsigned char *)((v17 >> 24) + v10 + 2) ^ *(unsigned char *)(a1 + (v17 >> 24)) ^ *(unsigned char *)(v9 + (v19 >> 24)) ^ *(unsigned char *)((v19 >> 24) + v10 + 2) ^ *(unsigned char *)(a1 + (v19 >> 24)) ^ v17 ^ v19 ^ (BYTE3(v17) * a2) ^ (BYTE3(v19) * a2);
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((v7 > 0x18) * a3) ^ v4)))();
}

uint64_t sub_1001F1B64@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  return sub_1001F1AA0(a1, a2, a3, a4);
}

uint64_t sub_1001F1B6C()
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (int)((((((v0 + 62) | 0x128) ^ 0xFFFFFF1D) + ((v0 + 2001639837) & 0x88B1677C)) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1001F1BC0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((56 * (((((a1 ^ 0xF4) - 1873780082) ^ (*(void *)(v1 + 8) == 0)) & 1) == 0)) ^ a1)))();
}

void sub_1001F1C04()
{
  (*(void (**)(void))(v3 + 8 * (int)(v0 ^ 0x90506218)))();
  *(void *)(v1 + 8) = v2;
  JUMPOUT(0x1001F1C3CLL);
}

uint64_t sub_1001F1CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((1135 * (STACK[0x7A0] == ((v4 - 180) ^ 0x2C1))) ^ v4)))();
}

uint64_t sub_1001F1CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v5 + 1277)))(v4);
  BOOL v7 = ((uint64_t (*)(unint64_t, uint64_t))*(&off_10026D1A0 + (v5 ^ 0xB51)))(((2 * v6) & 0x7F3F37FF3FEDFA0ELL) + (v6 ^ 0xBF9F9BFF9FF6FD07) + 0x4060640060090317, 2921436063) == 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (((((3 * (v5 ^ 0x49)) ^ v7) & 1) * (((v5 - 692) | 0x200) - 696)) ^ v5)))();
}

uint64_t sub_1001F1DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((((v5 ^ 0xB8) - 697) * (v4 == 0xBF9F9BFF9FF6FD07)) ^ v5)))();
}

uint64_t sub_1001F1E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v5 + v4 + v8;
  qmemcpy((void *)(v9 + 1406), "/Library/ProvenanceV2", 21);
  *(void *)(v9 + ((v6 - 397) | 0x411u)) = 0x6975732E6373702FLL;
  *(unsigned char *)(v8 + ((v6 - 1505061671) & 0x59B56FBF ^ (unint64_t)(v4 + 1859)) + v5) = 0;
  (*(void (**)(uint64_t))(a4 + 8 * (v6 ^ 0xB21)))(v7);
  uint64_t v10 = ((uint64_t (*)(uint64_t, void *))*(&off_10026D1A0 + (v6 ^ 0x4E0)))(v8, &unk_100248B30);
  uint64_t v11 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + v6 + 1311))(v8);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + ((43 * (v10 == 0)) ^ v6)))(v11);
}

uint64_t sub_1001F1F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = *(void (**)(uint64_t, void, uint64_t))(a4 + 8 * (v5 + 737));
  v6(v4, 0, 2);
  int v7 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + v5 + 675))(v4);
  unsigned int v8 = ((2 * (v7 - ((2 * v7) & 0x7FB63C92) - 1076158903)) & 0xBB59FF2A ^ ((v5 ^ 0x4C7) + 990919342))
     + ((v7 - ((2 * v7) & 0x7FB63C92) - 1076158903) ^ 0xE277E1DC);
  LODWORD(STACK[0x674]) = v8 - 1166546433;
  uint64_t v9 = ((uint64_t (*)(uint64_t, void, void))v6)(v4, 0, 0);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + (((2 * (v8 - 1571618709 < 0x32)) | ((v8 - 1571618709 < 0x32) << 6)) ^ v5)))(v9);
}

void sub_1001F203C()
{
  (*(void (**)(uint64_t))(v0 + 8 * (v1 + 1481)))(v2);
  JUMPOUT(0x1001F20B8);
}

uint64_t sub_1001F2064()
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 + 134)))(v1);
  return sub_1001F2D74(v4, v5, v6, (uint64_t)&off_10026D1A0, v7, v8, v2);
}

void sub_1001F2088()
{
}

uint64_t sub_1001F20C8@<X0>(uint64_t a1@<X3>, unint64_t a2@<X8>)
{
  BOOL v9 = v2 < a2;
  *(unsigned char *)(v4 + v7 + ((v8 - 439) | 0x10Fu) - 0x3282A4E3768D033ALL) = *(unsigned char *)(v3 + v6 - 0x3B9580D58ACC9C7FLL);
  if (v9 == v5 - 0x13D4C79F74588464 < a2) {
    BOOL v9 = v5 - 0x13D4C79F74588464 < v2;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((86 * !v9) ^ v8)))();
}

uint64_t sub_1001F2168(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  v19.val[1].i64[0] = ((_BYTE)a7 + 14) & 0xF;
  v19.val[1].i64[1] = ((_BYTE)a7 - 1) & 0xF;
  v19.val[2].i64[0] = a7 & 0xF;
  v19.val[2].i64[1] = ((_BYTE)a7 + 1) & 0xF;
  v19.val[3].i64[0] = ((_BYTE)a7 + 2) & 0xF;
  v19.val[3].i64[1] = ((_BYTE)a7 + 3) & 0xF;
  v20.val[0].i64[0] = ((_BYTE)a7 + 4) & 0xF;
  v20.val[0].i64[1] = ((_BYTE)a7 + 5) & 0xF;
  v20.val[1].i64[0] = ((_BYTE)a7 + 6) & 0xF;
  v20.val[1].i64[1] = ((_BYTE)a7 + 7) & 0xF;
  v20.val[2].i64[0] = ((_BYTE)a7 + 8) & 0xF;
  v20.val[2].i64[1] = (a7 + 9) & 0xF;
  v20.val[3].i64[0] = (a7 + 10) & 0xF;
  v20.val[3].i64[1] = (a7 + 11) & 0xF;
  v14.i64[0] = 0x9999999999999999;
  v14.i64[1] = 0x9999999999999999;
  v15.i64[0] = 0xFAFAFAFAFAFAFAFALL;
  v15.i64[1] = 0xFAFAFAFAFAFAFAFALL;
  uint64_t v16 = v8 + a7 - 843 + ((a3 - 557) | 0x10Bu);
  v19.val[0].i64[0] = ((_BYTE)v8 + (_BYTE)a7 - 75 + ((a3 - 45) | 0xB)) & 0xF;
  v19.val[0].i64[1] = ((_BYTE)a7 + 13) & 0xF;
  v17.i64[0] = vqtbl4q_s8(v19, (int8x16_t)xmmword_10021E8F0).u64[0];
  v17.i64[1] = vqtbl4q_s8(v20, (int8x16_t)xmmword_10021E8F0).u64[0];
  *(int8x16_t *)(v13 + (v7 - 156426912)) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v9 + v16), *(int8x16_t *)(v10 + (v16 & 0xF))), veorq_s8(*(int8x16_t *)(v11 + (v16 & 0xF) + 1), *(int8x16_t *)(v12 + (v16 & 0xF) + 1))), v15), vmulq_s8(v17, v14));
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((307 * ((a1 & 0xFFFFFFF0) == 16)) ^ a3)))();
}

void sub_1001F22CC()
{
}

uint64_t sub_1001F22DC(int a1, int a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((31 * (a1 != a2)) ^ a4)))();
}

uint64_t sub_1001F2310(uint64_t a1)
{
  LODWORD(STACK[0x778]) = *(unsigned __int8 *)(a1 + 1)
                        - ((*(unsigned __int8 *)(a1 + 1) << (((v1 + 127) | 0x88) + 41)) & 0x1D6)
                        - 1842144021;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((52 * (*(unsigned __int8 *)(a1 + 6) != ((v1 - 22) ^ 0xBB))) ^ v1)))();
}

uint64_t sub_1001F2374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>)
{
  uint64_t v4 = *(uint64_t (**)(void))(a2 + 8 * ((56 * (v3 <= (char)((-93 * (a3 ^ 0xDB)) ^ 0x16))) ^ a3));
  STACK[0x560] = -a1;
  return v4();
}

uint64_t sub_1001F23C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (v4 ^ (((unint64_t)&STACK[0xA90]
                                      + v5
                                      - ((v4 + 1431581206) & 0xAAABCE64 ^ 0x263) < 0x10) << 10))))();
}

uint64_t sub_1001F2464(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(unsigned char *)(a4 + v8 - 0x72F073B601281E39) = (*(unsigned char *)(a3 + v7 - 0x4E03C0E584F213FDLL) ^ 0x76)
                                             + ((2 * *(unsigned char *)(a3 + v7 - 0x4E03C0E584F213FDLL)) & 0xEC)
                                             - 66;
  return (*(uint64_t (**)(void))(a7 + 8 * ((1933 * (a5 + 1 != v9 + 48)) ^ a2)))();
}

uint64_t sub_1001F24FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int8x16_t v11 = *(int8x16_t *)(v7 + v10);
  v12.i64[0] = 0x7676767676767676;
  v12.i64[1] = 0x7676767676767676;
  int8x16_t v13 = veorq_s8(v11, v12);
  v14.i64[0] = 0xECECECECECECECECLL;
  v14.i64[1] = 0xECECECECECECECECLL;
  int8x16_t v15 = vandq_s8(vaddq_s8(v11, v11), v14);
  v14.i64[0] = 0xBEBEBEBEBEBEBEBELL;
  v14.i64[1] = 0xBEBEBEBEBEBEBEBELL;
  *(int8x16_t *)(v9 + v10) = vaddq_s8(vaddq_s8(v13, v14), v15);
  return (*(uint64_t (**)(void))(a7 + 8 * (((v10 == 32) * ((v8 ^ 0x641) - 1051)) ^ v8)))();
}

void sub_1001F2550()
{
}

uint64_t sub_1001F2564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v5 = (LODWORD(STACK[0x614]) | ((unint64_t)(LODWORD(STACK[0x614]) < 0x433BE303uLL) << 32)) == 1127998211;
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((((v4 + 68) ^ v5) & 1 | (4 * (((v4 + 68) ^ v5) & 1))) ^ v4)))();
}

uint64_t sub_1001F25E0@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  LODWORD(STACK[0x614]) = v2;
  BOOL v3 = (LODWORD(STACK[0x714]) | ((unint64_t)(LODWORD(STACK[0x714]) < 0x156ED3ECuLL) << 32)) == 359584748;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((4 * ((((a2 + 25) ^ (a2 + 64)) ^ v3) & 1)) & 0xEF | (16 * (((a2 + 521728281) ^ (a2 + 713762368) ^ v3) & 1))) ^ a2)))();
}

uint64_t sub_1001F266C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100198638(a4, (v4 | 0xC0C20502) + 539298277);
}

uint64_t sub_1001F26C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v8 = v6 < v4;
  *((unsigned char *)&STACK[0xA90] + v7 - 0x10D613B284EBC003) = 52;
  if (v8 == v7 - 0x10D613B1B75E2B42 < v4) {
    BOOL v8 = v7 - 0x10D613B1B75E2B42 < v6;
  }
  return (*(uint64_t (**)(void))(a4 + 8 * ((v8 * (((v5 - 1854) | 0x105) ^ 0x4EC)) ^ (v5 - 1261))))();
}

uint64_t sub_1001F2750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x714]) = v4;
  return (*(uint64_t (**)(void))(a4 + 8 * ((STACK[0x6A0] != 0) | (v5 - 462))))();
}

uint64_t sub_1001F2760()
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 1659)))(v2);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + (int)(((*(_DWORD *)(STACK[0x7C0] + 16) < (int)(v3
                                                                                          + ((v1 + 185441538) & 0xF4F263E3)
                                                                                          - 559
                                                                                          - 138))
                                                  * (134 * ((((v1 + 185441538) & 0xF4F263E3) + 1018) ^ 0x6DA) - 417)) ^ (((v1 + 185441538) & 0xF4F263E3) + 1018))))(v4);
}

uint64_t sub_1001F2794()
{
  int v2 = (v1 - 1704) | 0x20B;
  int v3 = (v2 - 11) | 0xD9;
  (*(void (**)(void))(v0 + 8 * (v2 + 1315)))();
  STACK[0x6A0] = 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((62 * (((STACK[0x5A0] == 0) ^ v3) & 1)) ^ v3)))();
}

uint64_t sub_1001F27FC()
{
  (*(void (**)(void))(v0 + 8 * (v1 ^ 0xBF7)))();
  STACK[0x5A0] = 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (((*(void *)(STACK[0x7C0] + 8) != 0) * (((v1 + 975) ^ 0x7D2) - 14)) ^ (v1 + 738))))();
}

uint64_t sub_1001F2854()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v1 + 8 * (v0 + 1972)))();
  *(void *)(v2 + 8) = 0;
  *(_DWORD *)(v2 + 16) = 1988559269;
  STACK[0x788] -= 144;
  return ((uint64_t (*)(uint64_t))STACK[0x6F0])(v3);
}

uint64_t sub_1001F2894()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((980 * (((v1 == 0) ^ (STACK[0x578] + 19)) & 1)) ^ (STACK[0x578] - 1571))))();
}

void sub_1001F28C8()
{
  LODWORD(STACK[0x770]) = 178495898;
  (*(void (**)(void))(v0 + 8 * (v1 + 190)))();
  JUMPOUT(0x1001F2974);
}

uint64_t sub_1001F2A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = off_1002846D0;
  LOBYTE(STACK[0xA79]) = *off_1002846D0 - 12;
  LOBYTE(STACK[0xA7A]) = v5[1] - 12;
  LOBYTE(STACK[0xA7B]) = v5[2] - 12;
  LOBYTE(STACK[0xA7C]) = v5[3] - 12;
  LOBYTE(STACK[0xA7D]) = v5[4] - 12;
  LOBYTE(STACK[0xA7E]) = v5[5] - 12;
  LOBYTE(STACK[0xA7F]) = (v4 ^ 0x16) - 127 + v5[6] - 111;
  LOBYTE(STACK[0xA80]) = v5[7] - 12;
  LOBYTE(STACK[0xA81]) = v5[8] - 12;
  LOBYTE(STACK[0xA82]) = v5[9] - 12;
  LOBYTE(STACK[0xA83]) = v5[10] - 12;
  LOBYTE(STACK[0xA84]) = v5[11] - 12;
  LOBYTE(STACK[0xA85]) = v5[12] - 12;
  LOBYTE(STACK[0xA86]) = v5[13] - 12;
  LOBYTE(STACK[0xA87]) = v5[14] - 12;
  LOBYTE(STACK[0xA88]) = v5[15] - 12;
  LOBYTE(STACK[0xA89]) = v5[16] - 12;
  LOBYTE(STACK[0xA8A]) = v5[17] - 12;
  LOBYTE(STACK[0xA8B]) = v5[18] - 12;
  LOBYTE(STACK[0xA8C]) = v5[19] - 12;
  LOBYTE(STACK[0xA8D]) = v5[20] - 12;
  LOBYTE(STACK[0xA8E]) = v5[21] - 12;
  LOBYTE(STACK[0xA8F]) = off_1002846D0[22] - 12;
  uint64_t v6 = (*(uint64_t (**)(void))(a4 + 8 * (v4 ^ 0x99D)))();
  BOOL v7 = ((uint64_t (*)(void, unint64_t *, uint64_t))*(&off_10026D1A0 + (v4 ^ 0x962)))(0, &STACK[0xA79], v6) == 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (v4 ^ (8 * v7))))();
}

uint64_t sub_1001F2C00@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((1796 * (a2 == ((41 * (v2 ^ 0x305)) ^ (v3 + 849)))) ^ v2)))();
}

uint64_t sub_1001F2C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8 * (v4 ^ 0xD6C)))(25, 4244850056) != 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((v5 * ((v4 + 1388667183) ^ 0x52C566F3)) ^ v4)))();
}

uint64_t sub_1001F2CB8()
{
  return sub_1001F1AA0((uint64_t)&unk_10021FAD0, -95, 887, 1755343967);
}

uint64_t sub_1001F2D30@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((7 * (a2 == v3 + ((v2 + 1985656586) & 0x89A54FEA) - 1919)) ^ v2)))();
}

uint64_t sub_1001F2D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  LODWORD(STACK[0x75C]) = STACK[0x550];
  return (*(uint64_t (**)(void))(a4 + 8 * ((1612 * (a7 == (v7 ^ 0x7A8))) ^ (v7 - 1817))))();
}

uint64_t sub_1001F2DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((((((*(unsigned __int8 *)STACK[0x5A0] - (v4 ^ 0x7A9)) | ((v4 ^ 0x7A9)
                                                                                        - *(unsigned __int8 *)STACK[0x5A0])) & 0x80) == 0)
                                * ((49 * ((((v4 ^ 0x7A9) + 1105) | 0x200) ^ 0x67A)) ^ 0xF3D)) ^ ((v4 ^ 0x7A9) + 142))))();
}

uint64_t sub_1001F2E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7 = (char *)&STACK[0xA90] + STACK[0x788];
  int v8 = 230600693 * (((v6 - 192) & 0xB0AAFE3F | ~((v6 - 192) | 0xB0AAFE3F)) ^ 0x9D6987EB);
  *(_DWORD *)(v6 - 164) = LODWORD(STACK[0x674]) - v8 + 1521612428;
  *(_DWORD *)(v6 - 192) = (v5 - 1419) ^ v8;
  *(void *)(v6 - 184) = v7;
  *(void *)(v6 - 176) = v4;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v5 + 511)))(v6 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0
                                           + (((*(_DWORD *)(v6 - 168) == 0) * (((v5 ^ 0x3FD08687) - 1070627117) ^ 0x79C)) ^ v5)))(v9);
}

uint64_t sub_1001F2F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  STACK[0x788] = v6;
  return sub_1001F2F10(a1, a2, a3, a4, a5, a6, 4294924393);
}

uint64_t sub_1001F2F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((71 * (a7 == (v7 ^ 0x503) - 683)) ^ (v7 - 1277))))();
}

uint64_t sub_1001F2F48@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(unsigned __int8 *))(v1
                                                      + 8
                                                      * (((*v2 - 1 < 2) * (((a1 + 1277) ^ 0x579) - 623)) ^ a1)))(v2);
}

uint64_t sub_1001F2FAC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((62 * (((STACK[0x5A0] == 0) ^ ((_BYTE)v1 + 81) & 0xDF) & 1)) ^ (v1 + 1625515089) & 0x9F1C97DF)))();
}

uint64_t sub_1001F2FF8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((*(void *)(STACK[0x7C0] + 8) != 0) * (((a1 + 237) ^ 0x7D2) - 14)) ^ a1)))();
}

uint64_t sub_1001F302C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * (int)(v6 ^ (v5 + 44) ^ (3661 * (((v4 + 1 - v6) | (v6 - (v4 + 1))) >= 0)))))();
}

uint64_t sub_1001F30DC@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned int v4 = (v2 >> ((a2 + 109) & 0xCF ^ 0x8B)) ^ 0xFB7B80F1;
  unsigned int v5 = (v4 - ((2 * v4) & 0x6B997B6) - 2091070509) ^ 0x835CCBD3 | v2 ^ v3;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((204
                                * (((((v5 - ((2 * v5) & 8) + 4) >> 2) ^ 1 | v5) & 3) == 0)) ^ a2)))();
}

uint64_t sub_1001F3174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x788] = v5;
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((((v4 + 1817) ^ 0x518) * ((LODWORD(STACK[0x550]) - 1715765038) < 0x7D1)) ^ v4)))();
}

void sub_1001F31B8()
{
}

uint64_t sub_1001F31CC(uint64_t a1)
{
  BOOL v3 = (*(uint64_t (**)(uint64_t, void))(v1 + 8 * (v2 ^ 0xE01)))(a1, 0) == 0;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((((((4 * v2) ^ 0x1870) - 432) | 0x682) ^ 0x6D6) * v3) | v2)))();
}

uint64_t sub_1001F3228@<X0>(int a1@<W8>)
{
  int v2 = 7 * (a1 ^ 0x16E);
  int v3 = *(unsigned __int8 *)STACK[0x518];
  LODWORD(STACK[0x578]) = v3 - 1223708077 - ((v3 << (v2 ^ 0xD2)) & 0xAE) + 4;
  return (*(uint64_t (**)(void))(v1 + 8 * ((((char)v3 >= (char)(v2 + 49)) * (v2 ^ 0x5E7)) ^ v2)))();
}

uint64_t sub_1001F3298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, char a6@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((((a6 - 1) <= (((v6 ^ 0xD6) - 93) ^ 0xA9u)) * (45 * (v6 ^ 0x5D6) - 198)) ^ v6 ^ 0x55A)))(a1, a2, v7, a3, a4, a5, 4294925295);
}

uint64_t sub_1001F32EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((25 * (v3 + 1440 + LODWORD(STACK[0x58C]) - 1041038573 >= (v3 ^ 0x749u) - 1893)) ^ v3)))();
}

uint64_t sub_1001F3344(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = (unsigned int *)(v8 + 4 * (v5 + v7));
  unsigned int v11 = ((v4 - 1521788060) & 0x5AB4A3BD) - (((v6 | 0x7FFFFFFE) - 68153542) & 0xE8200110);
  uint64_t v12 = v5 + 1;
  int v13 = *(_DWORD *)(v8 + 4 * (v12 + v7));
  unsigned int v14 = (a2 - (v13 & 0x7FFFFFFE ^ 0x1E1F2A76 | a2) + (v13 & 0x7FFFFFFE ^ 0x1E1F2A76 | 0xFDDD982B)) ^ 0xE91BBAA3;
  *uint64_t v10 = v10[397] ^ *((_DWORD *)&STACK[0x14B0] + (v13 & 1)) ^ (((v14 | (v11 - 17611777) & 0x80000000)
                                                              - ((2 * v14) & 0x25D24BFA)
                                                              + 317269501) >> 1) ^ 0x63C78C9C;
  return (*(uint64_t (**)(void))(a4 + 8 * ((965 * (v12 == v9 + 3)) ^ v4)))();
}

uint64_t sub_1001F3444@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  int v4 = (const float *)&unk_10028409C;
  int8x16_t v5 = (int8x16_t)vld1q_dup_f32(v4);
  v6.i64[0] = 0x8000000080000000;
  v6.i64[1] = 0x8000000080000000;
  v7.i64[0] = 0x100000001;
  v7.i64[1] = 0x100000001;
  v3.i64[0] = *(void *)&dword_1002840A0;
  v3.i32[2] = dword_1002840A8;
  int8x16_t v8 = vextq_s8(v5, v3, 0xCuLL);
  int8x16_t v9 = v3;
  v9.i32[3] = dword_1002840AC;
  int8x16_t v10 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(v8, v6), vdupq_n_s32(0xEC87F6Au)), (int8x16_t)vdupq_n_s32(0xA5230B16)), vdupq_n_s32(0x1FF29AB4u));
  int32x4_t v11 = (int32x4_t)veorq_s8(vandq_s8(v9, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x6AD6896Cu));
  int8x16_t v12 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v11, v11), (int8x16_t)vdupq_n_s32(0x96CA0A00)), v11), vdupq_n_s32(0x349AFAFEu));
  int32x4_t v13 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vaddq_s32(vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v12, (int8x16_t)vdupq_n_s32(0x3ECE1838u)), (int8x16_t)vdupq_n_s32(0x2A460001u)), (int32x4_t)veorq_s8(vandq_s8(v12, (int8x16_t)vdupq_n_s32(0xC131E7C6)), (int8x16_t)vdupq_n_s32(0x10E245u))), v7), veorq_s8(v10, (int8x16_t)vdupq_n_s32(0xCBDE0F33))), (int8x16_t)vdupq_n_s32(0x7EC39928u));
  v14.i32[0] = *(_DWORD *)(v2 + 4 * (dword_1002840A0 & 1));
  v14.i32[1] = *(_DWORD *)(v2 + 4 * (unk_1002840A4 & (((a2 - 929) | 0x20C) - 539)));
  v14.i32[2] = *(_DWORD *)(v2 + 4 * (dword_1002840A8 & 1));
  v14.i32[3] = *(_DWORD *)(v2 + 4 * (dword_1002840AC & 1));
  unk_10028409C = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_100283D10, v14), (int8x16_t)vdupq_n_s32(0x42E2C256u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v13, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v13, v13), (int8x16_t)vdupq_n_s32(0xA14770D0))), vdupq_n_s32(0x50A3B868u)), 1uLL));
  return (*(uint64_t (**)(void))(a1 + 8 * a2))();
}

void sub_1001F3614()
{
}

uint64_t sub_1001F3620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = ((*v5 & 0x52780AFC ^ 0x42480A9D) + (((((v4 + 908) | 0x200) + 763882242) ^ (v4 + 1420)) & *v5 ^ 0x4857503) - 2) ^ 0x4A741B60;
  v5[623] = v5[396] ^ *((_DWORD *)&STACK[0x14B0] + (*v5 & 1)) ^ (((((v6 | 0x3E11C090) - (v6 | 0xC1EE3F6F) - 1041350801) ^ 0x3871AC90 | ~v5[623] & 0x80000000)
                                                                  - 2
                                                                  * ((((v6 | 0x3E11C090) - (v6 | 0xC1EE3F6F) - 1041350801) ^ 0x3871AC90) & 0x13E1515C ^ ((v6 | 0x3E11C090) - (v6 | 0xC1EE3F6F) - 1041350801) & 8)
                                                                  - 1813950124) >> 1) ^ 0x2343B6C8;
  return (*(uint64_t (**)(void))(a4 + 8 * ((LODWORD(STACK[0x924]) > 0x26F) ^ v4)))();
}

uint64_t sub_1001F3724@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  LODWORD(STACK[0x924]) = 0;
  int v4 = LODWORD(STACK[0x924])++;
  *(_DWORD *)(v2 + 1752) = v4 + 340121380;
  uint64_t v5 = (*(_DWORD *)aHr + 1304497375);
  uint64_t v6 = 516615401
     * ((2 * ((v3 - 192) & 0x48D57A0D0CC69FA0) - (v3 - 192) - 0x48D57A0D0CC69FA4) ^ 0x3F960D89805A666ELL);
  *(void *)(v3 - 168) = v6 ^ 0xAE137508;
  *(_DWORD *)(v3 - 192) = v6;
  *(_DWORD *)(v3 - 172) = (a2 - 1765426025) ^ v6;
  *(_DWORD *)(v3 - 160) = ((a2 - 1765426025) ^ 0x63) + v6;
  *(_DWORD *)(v3 - 156) = (a2 - 185257761) ^ v6;
  *(void *)(v3 - 184) = v5 - v6;
  *(_DWORD *)(v3 - 152) = ((a2 - 1765426025) ^ 0x2B) + v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (a2 + 157)))(v3 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v3 - 176)))(v7);
}

uint64_t sub_1001F3844()
{
  if (v0 >= v1) {
    int v3 = *(_DWORD *)aHr + 1;
  }
  else {
    int v3 = v2;
  }
  *(_DWORD *)aHr = v3;
  return sub_1001F39A0();
}

uint64_t sub_1001F39A0@<X0>(uint64_t a1@<X3>, int a2@<W4>, unsigned int a3@<W5>, int a4@<W6>, int a5@<W8>)
{
  uint64_t v8 = (a4 - 296018884 + a5 - 397);
  *(unsigned char *)(v7 + v8) = (((v6 ^ a3) >> (v5 + 51)) - ((((a5 + 101) | 0xD) - 115) & (2 * ((v6 ^ a3) >> (v5 + 51)))) + 14) ^ 0x68;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((38
                                * (a4
                                 - (((105 * (v8 & 0xF)) ^ *((unsigned __int8 *)&unk_10021F9A0
                                                                           + (v8 & 0xF)) ^ *((unsigned __int8 *)&unk_100223AC0
                                                                                           + (v8 & 0xF)) ^ *((unsigned __int8 *)&unk_100223730 + (v8 & 0xF))) != ((((v6 ^ a3) >> (v5 + 51)) - ((((a5 + 101) | 0xD) - 115) & (2 * ((v6 ^ a3) >> (v5 + 51)))) + 14) ^ 0x68)) != a2)) ^ a5)))();
}

uint64_t sub_1001F3A5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((1636 * (v4 + 8 == ((196 * (v5 ^ 0x29A)) ^ a3) + v5 + 397)) ^ v5)))();
}

uint64_t sub_1001F3A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  LODWORD(STACK[0x558]) = a7;
  STACK[0x14B0] = 0xF3BBAEBD6AB31E62;
  LODWORD(STACK[0x924]) = dword_1002846D8 - 340121379;
  uint64_t v10 = *(unsigned int *)aHr;
  unint64_t v11 = 1856021207 * ((v9 - 192) ^ 0xED14979B4E69D6FELL);
  int v12 = v11 ^ (v7 - 188580821);
  *(_DWORD *)(v9 - 184) = v12 ^ 0x44;
  *(_DWORD *)(v9 - 180) = v7 - 188580821 + v11;
  *(_DWORD *)(v9 - 188) = v12 ^ 0x2C;
  *(_DWORD *)(v9 - 160) = v11 + v7 + 1123495617;
  *(_DWORD *)(v9 - 156) = v11;
  *(void *)(v9 - 176) = v8 - v11;
  *(void *)(v9 - 168) = v10 ^ v11;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v7 ^ 0xFDB)))(v9 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + *(int *)(v9 - 192)))(v13);
}

uint64_t sub_1001F3B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = v4 - 1262;
  int v8 = v4;
  STACK[0x560] = (*(uint64_t (**)(unint64_t, uint64_t))(a4 + 8 * (v4 ^ 0xF8D)))(STACK[0x4F0], 3312658705);
  int v9 = (*(uint64_t (**)(void))(a4 + 8 * (v8 + 187)))();
  unsigned int v10 = v9 - 1965487874 - ((v6 + 363990850) & (2 * v9));
  LODWORD(xmmword_100283D10) = v10;
  *(_DWORD *)(v5 + 4) = ((1812433253 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))) ^ 0xFDFF6DAF)
                      + (((v10 ^ 0x8AD908FC ^ (v10 >> 30)) * (((v6 - 2137780906) | 0x2040404C) + 926597742)) & 0xFBFEDB5E)
                      - 1931895984
                      - ((2
                        * (((1812433253 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))) ^ 0xFDFF6DAF)
                         + (((v10 ^ 0x8AD908FC ^ (v10 >> 30)) * (((v6 - 2137780906) | 0x2040404C) + 926597742)) & 0xFBFEDB5E))
                        - 1543428956) & 0x15B211FC);
  return ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + (v6 ^ 0x76)))(1250631515);
}

void sub_1001F3CC4()
{
}

uint64_t sub_1001F3E70@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x924]) = a1 + 1;
  uint64_t v2 = ((uint64_t (*)(unint64_t, void))*(&off_10026D1A0 + (int)(v1 ^ 0xA0D4582E)))(STACK[0x4E8], 0);
  int v3 = (_DWORD *)STACK[0x570];
  int v4 = *(_DWORD *)(STACK[0x570] + 16)
     - 1965487874
     - ((*(_DWORD *)(STACK[0x570] + 16) << (((v1 - 84) | 0xA0) ^ 0xA9)) & 0x15B211FC);
  v3[1] = *(_DWORD *)(STACK[0x570] + 24) - 1965487874 - ((2 * *(_DWORD *)(STACK[0x570] + 24)) & 0x15B211FC);
  v3[2] = v4;
  int v5 = ((uint64_t (*)(uint64_t))*(&off_10026D1A0 + v1 + 1596700679))(v2);
  v3[3] = v5 - 1965487874 - ((2 * v5) & 0x15B211FC);
  int v6 = ((uint64_t (*)(void))*(&off_10026D1A0 + (int)(v1 ^ 0xA0D4583F)))();
  *int v3 = v6 - 1965487874 - ((2 * v6) & 0x15B211FC);
  int v7 = ((2 * STACK[0x560]) & 0xF617F6CC) + (STACK[0x560] ^ 0xFB0BFB66);
  LODWORD(STACK[0x568]) = v7 - ((2 * v7 + 166201652) & 0x7367D5A2) - 1096290453;
  return sub_1001F1064();
}

uint64_t sub_1001F4064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x788] = STACK[0x4E0];
  STACK[0x828] = v4;
  STACK[0x7D0] = STACK[0x560];
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v5 ^ 0x8A1)))(v6);
  return sub_1001F2F10(v7, v8, v9, (uint64_t)&off_10026D1A0, v10, v11, STACK[0x4D8]);
}

uint64_t sub_1001F40B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (((v7 - a7 + 280610836 >= ((v8 + 2) | 0x110u) - 872) * (((v8 - 556) | 0x34C) ^ 0x34B)) ^ v8)))();
}

uint64_t sub_1001F4138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X6>, int a4@<W7>, uint64_t a5@<X8>)
{
  unsigned int v9 = v8 + v6 + v7 + (a4 ^ 0x5DE) - 1711;
  BOOL v12 = v9 > ((a4 - 1676084082) & 0x63E7037Fu) - 879
     || ((3 - (_BYTE)a3) & 0xFu) < (((_BYTE)v8 + (_BYTE)v6 + (_BYTE)v7 + (a4 ^ 0xDE) + 81) & 0xFu)
     || 156426911 - (int)v5 < v9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 8 * (((2 * v12) | (4 * v12)) ^ a4)))(a1, a2, v5, a3);
}

uint64_t sub_1001F41B8(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, char a7)
{
  uint64_t v14 = (v7 + v13) + v12;
  unint64_t v15 = v14 - a2 - v8;
  uint64_t v16 = (a7 + 12) & 0xF;
  BOOL v18 = (unint64_t)(v14 - (v9 + v16)) >= 0x10
     && v15 >= (unint64_t)(268 * (a5 ^ 0x6A8u)) - 1592
     && (((a5 - 816) - 895) ^ (v16 | v10)) + v14 >= 0x10;
  unint64_t v19 = v14 + ~(v16 | v11);
  int v21 = !v18 || v19 < 0x10;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((22 * v21) ^ a5)))();
}

uint64_t sub_1001F4248(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  int v14 = 5 * (a6 ^ 0x327);
  uint64_t v15 = (a4 + v7);
  *(unsigned char *)(v12 + (v14 ^ 0x513 ^ (v13 - 914)) + a3) = *(unsigned char *)(v8 + v15) ^ *(unsigned char *)(v9 + (v15 & 0xF)) ^ *(unsigned char *)(v10 + (v15 & 0xF) + 1) ^ *(unsigned char *)(v11 + (v15 & 0xF) + 1) ^ (-103 * (v15 & 0xF)) ^ 0xFA;
  return ((uint64_t (*)(uint64_t, uint64_t))*(&off_10026D1A0 + ((1080 * (a4 + 1 + v7 < v6)) ^ v14)))(1299, 4294967193);
}

void sub_1001F42D8()
{
}

uint64_t sub_1001F42E4(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + (((8 * (((a8 - 71) ^ (a1 < ((103 * (a8 ^ 0x643)) ^ 0x47Du))) & 1)) & 0xEF | (16 * (((a8 - 71) ^ (a1 < ((103 * (a8 ^ 0x643)) ^ 0x47Du))) & 1))) ^ a8)))();
}

uint64_t sub_1001F4334(int a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  LODWORD(STACK[0x570]) = a1 & 0xFFFFFFF8;
  v16.val[0].i64[0] = ((_BYTE)a7 + (_BYTE)v8 + (_BYTE)a2) & 0xF;
  v16.val[0].i64[1] = ((_BYTE)a7 + (_BYTE)a2 + 13) & 0xF;
  v16.val[1].i64[0] = ((_BYTE)a7 + (_BYTE)a2 + 14) & 0xF;
  v16.val[1].i64[1] = ((_BYTE)a7 + (_BYTE)a2 - 1) & 0xF;
  v16.val[2].i64[0] = (a7 + a2) & 0xFLL;
  v16.val[2].i64[1] = (a7 - 407 + a2 + (a5 ^ 0x299u)) & 0xFLL;
  v16.val[3].i64[0] = ((_BYTE)a7 + (_BYTE)a2 + 2) & 0xF;
  v16.val[3].i64[1] = (a7 + a2 + 3) & 0xFLL;
  *(int8x8_t *)(v13 + (v7 + v14 + a2)) = veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v9 + (a7 + v8 + a2)), *(int8x8_t *)(v10 + v16.val[0].i64[0])), veor_s8(*(int8x8_t *)(v11 + v16.val[0].i64[0] + 1), *(int8x8_t *)(v12 + v16.val[0].i64[0] + 1))), (int8x8_t)0xFAFAFAFAFAFAFAFALL), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v16, (int8x16_t)xmmword_10021E900), (int8x8_t)0x9999999999999999));
  return ((uint64_t (*)(__n128))*(&off_10026D1A0 + ((1210 * ((a1 & 0xFFFFFFF8) - 8 == a2)) | a5)))((__n128)xmmword_10021E900);
}

void sub_1001F443C()
{
}

uint64_t sub_1001F4444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v7 = (*(_DWORD *)(v6 + 68) ^ 0xDED30A40)
     + v5
     - ((((*(_DWORD *)(v6 + 68) ^ 0xDED30A40) + v5) << (a5 + 83)) & 0xBDA61480)
     - 556594624;
  *(_DWORD *)(v6 + 68) = v7;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((966 * ((v7 ^ 0xDED30A40) < v5)) ^ a5)))();
}

uint64_t sub_1001F44A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(v5 + 64) += (a5 + 762) ^ 0x7A9;
  return ((uint64_t (*)(void))STACK[0x888])();
}

void sub_1001F44C8()
{
}

uint64_t sub_1001F44E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x888] = *(void *)(a4 + 8 * (v8 - 1919));
  return sub_1001F4544(a1, a2, a3, a4, a5, a6, a7, v7 + 16);
}

uint64_t sub_1001F451C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x888] = *(void *)(a4 + 8 * (v4 - 1900));
  return sub_1001F4544();
}

uint64_t sub_1001F4544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  STACK[0x980] = v10;
  LODWORD(STACK[0x77C]) = a8;
  STACK[0x5F8] = v9;
  unsigned int v11 = ((((4 * v8) ^ 0xF90) + 1888465983) ^ a8)
      + 42207235
      + (*(_DWORD *)(v10 + 68) & 0x3F ^ 0xFD7BF7FD)
      + ((2 * *(_DWORD *)(v10 + 68)) & 0x7A);
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((30 * ((v11 ^ 0x54FE6BFF) - 1425959999 + ((2 * v11) & 0xA9FCD7FE) < 0xFFFFFFC0)) ^ v8)))();
}

uint64_t sub_1001F45FC(uint64_t a1, int a2, int a3, uint64_t a4)
{
  int v8 = v4 ^ 0x5F2;
  int v9 = v5 + v6;
  if ((v9 + 1) > 0x40) {
    int v10 = v9 + 1;
  }
  else {
    int v10 = 64;
  }
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((((v7 - a3 - a2 + v10) < 0xF) ^ v8 ^ 0x95) & 1 ^ v8)))();
}

uint64_t sub_1001F4674(uint64_t a1, int a2, int a3, int a4, unsigned int a5, int a6)
{
  int v8 = a2 + a3;
  unsigned int v9 = v6 + ((a4 - 1904522235) ^ 0x8E7B4DE5) + ((a4 - 1904522235) & 0x7184B7FF) + v8 - 1528;
  if (v9 <= 0x40) {
    unsigned int v9 = a5;
  }
  unsigned int v10 = a6 + v9;
  BOOL v12 = v7 - v8 >= v10 && v10 < 0x10;
  return ((uint64_t (*)(void))*(&off_10026D1A0 + ((27 * v12) ^ a4)))();
}

uint64_t sub_1001F46E8(unsigned int a1, int a2)
{
  uint64_t v5 = (a2 + v2) + v4;
  unint64_t v6 = v5 - (void)&unk_10021F950;
  BOOL v7 = (unint64_t)(v5 - (void)&unk_10021F950) < 0x10;
  unint64_t v8 = ~(unint64_t)&unk_10023C300 + v5;
  if (v8 < ((a1 + 5) ^ 0x563uLL)) {
    BOOL v7 = 1;
  }
  unint64_t v9 = ~(unint64_t)&unk_100245730 + v5;
  if (v9 < 0x10) {
    BOOL v7 = 1;
  }
  char v10 = v5 - v3 < (unint64_t)((a1 - 957982143) & 0x3919A0DB) - 123 || v7;
  if (v6 < 0x10) {
    char v10 = 1;
  }
  if (v8 < 0x10) {
    char v10 = 1;
  }
  if (v9 < 0x10) {
    char v10 = 1;
  }
  return ((uint64_t (*)(void))*(&off_10026D1A0 + (((8 * (v10 & 1)) & 0xEF | (16 * (v10 & 1))) ^ a1)))();
}

uint64_t sub_1001F47A8@<X0>(int a1@<W0>, int a2@<W8>)
{
  *(int8x16_t *)(v7 + (v2 + a1 + a2)) = veorq_s8(*v6, (int8x16_t)xmmword_10021F870);
  return ((uint64_t (*)(void))*(&off_10026D1A0
                             + ((49 * ((((v5 - 49) ^ 0x1FFFFFAB2) & ((v3 ^ 0x8A) + v4)) != 16)) | (v5 - 49))))();
}

uint64_t sub_1001F4828(int a1, uint64_t a2, int8x16_t a3, uint64_t a4, uint64_t a5)
{
  *(int8x16_t *)(v9 + (v7 + a2)) = veorq_s8(*(int8x16_t *)(v8 + a2), a3);
  return (*(uint64_t (**)(void))(a5 + 8 * (((v6 != a2) * a1) | v5)))();
}

uint64_t sub_1001F4858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * (((((v4 - 1419645383) & 0x549E0C5E) + 557) * (v5 == v6)) ^ v4)))();
}

void sub_1001F4894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  LODWORD(STACK[0x618]) = a7;
  JUMPOUT(0x1001F48B4);
}

uint64_t sub_1001F48B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x570]) = -202377345;
  LODWORD(STACK[0x560]) = (2 * v8) ^ 0xBAE;
  uint64_t v4 = (((v7 - 490) | 0x20) - 1653277242) & 0x628B04DF;
  STACK[0x788] += v4 ^ 0x586;
  LODWORD(STACK[0x6D4]) = v6[18];
  LODWORD(STACK[0x69C]) = v6[19];
  LODWORD(STACK[0x5E8]) = v6[20];
  LODWORD(STACK[0x6EC]) = v6[21];
  return sub_1001AABB8(a4, v4);
}

uint64_t sub_1001F4938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((772 * (a7 + (((v8 ^ 0x5F6) + 592) ^ 0xEF463342) < (a8 ^ 0x708FBBE7u))) ^ (v8 - 1515))))();
}

uint64_t sub_1001F4988@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v7 = (v4 + 1005) | 0x105;
  uint64_t v8 = a1 - 280610836;
  *(unsigned char *)(v6 + (a2 + v3 + 1390)) = *(unsigned char *)(v5 + v8) ^ byte_10021F950[v8 & 0xF] ^ (-103 * (v8 & 0xF)) ^ byte_10023C300[((v7 - 1403) | 0xCu) - 13 + (unint64_t)(v8 & 0xF)] ^ byte_100245730[((v7 - 1403) | 0xCu) - 13 + (unint64_t)(v8 & 0xF)] ^ 0xFA;
  return ((uint64_t (*)(uint64_t, uint64_t))*(&off_10026D1A0
                                                    + ((237 * ((v2 + v3 + 1) > 0x3F)) ^ v7)))(4294967193, 250);
}

void sub_1001F4A3C()
{
}

void sub_1001F4A44()
{
}

uint64_t sub_1001F4A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8 * (((v3 + 8 != v5) * ((490 * (v4 ^ 0x471)) ^ 0x75C)) ^ v4)))();
}

uint64_t sub_1001F4B34()
{
  STACK[0x8D0] = v0;
  STACK[0x988] = STACK[0x548];
  return ((uint64_t (*)(void))STACK[0x4A0])();
}

uint64_t sub_1001F4B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(unint64_t))(a3 + 8 * (v3 ^ 0xF86)))(STACK[0x4A8]);
  return (*(uint64_t (**)(unint64_t))(a3
                                                     + 8
                                                     * (int)(((LODWORD(STACK[0x5CC]) == ((((v3 - 1820533305) & 0x6C831BBF)
                                                                                        + 1284) | 0x48)
                                                                                      - 1659)
                                                            * ((((v3 - 1820533305) & 0x6C831BBF) - 1364260857) ^ 0xAEAF0952)) ^ (v3 - 1820533305) & 0x6C831BBF)))(STACK[0x4B8]);
}

void sub_1001F4C2C(int a1@<W8>)
{
  int v4 = 79 * (v1 ^ (a1 + 284));
  unint64_t v5 = STACK[0x4C0];
  *(_DWORD *)(v5 + 16) = STACK[0x7AC];
  *(void *)(v5 + 8) = STACK[0x4B0];
  STACK[0x788] = v2;
  (*(void (**)(void))(v3 + 8 * (v4 + 508)))();
  JUMPOUT(0x1001F2764);
}

uint64_t TcswZQtsc8hw(uint64_t a1, uint64_t a2, uint64_t a3)
{
  qword_100284718 = 431200057 * (((unint64_t)&v4[10] + qword_100284718 + qword_1002846E8) ^ 0xA5F8A63A3EE64495);
  qword_1002846E8 = qword_100284718;
  v4[0] = &loc_1001F561C;
  v4[1] = a1;
  v4[2] = a2;
  v4[3] = a3;
  unsigned int v5 = (230600693 * ((&vars0 + 1575738355 - 2 * ((&vars0 - 32) & 0x5DEBDC13)) ^ 0x8FD75A38)) ^ 0x54F58F50;
  uint64_t v6 = v4;
  ((void (*)(unsigned int *))*(&off_10026D1A0 + (unk_10024B5DD ^ 0x2Du) + 1961))(&v5);
  return v7;
}

void sub_1001F4DB4(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    BOOL v2 = *(void *)(a1 + 8) == 0;
  }
  else {
    BOOL v2 = 1;
  }
  char v4 = v2 || *(void *)(a1 + 16) == 0;
  int v1 = *(_DWORD *)a1 - 941074649 * ((-2 - ((a1 | 0xC1705FEE) + (~a1 | 0x3E8FA011))) ^ 0x3E476F75);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1001F4E6C@<X0>(uint64_t a1@<X8>)
{
  int v6 = v4 - 501;
  unsigned int v7 = 562267567
     * (((v10 ^ 0x5A23AF60 | 0xAF18922F)
       - (v10 ^ 0x5A23AF60)
       + ((v10 ^ 0x5A23AF60) & 0x50E76DD0)) ^ 0xE6A1C10C);
  uint64_t v17 = 0x3242838E4E8EDB12;
  v10[0] = 0;
  v10[1] = &v9;
  uint64_t v12 = v2;
  uint64_t v13 = 0;
  v10[3] = 0;
  uint64_t v11 = v1;
  unsigned int v15 = v7 ^ 0xCC933444;
  int v16 = (v6 + 764) ^ v7;
  v10[2] = a1;
  uint64_t result = (*(uint64_t (**)(void *))(v3 + 8 * (v6 ^ 0xC80)))(v10);
  *(_DWORD *)(v5 + 4) = v14;
  return result;
}

void sub_1001F4F4C(uint64_t a1)
{
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1001F5000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v11 = v10 + v7;
  if (v6) {
    BOOL v12 = v9 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  int v13 = v12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6
                                                                                + 8
                                                                                * ((((v10 - v8 + 692) ^ 0x791) * v13) ^ v11)))(a1, a2, a3, a4, a5);
}

uint64_t sub_1001F5048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v11 = v10 + v7;
  if (v6) {
    BOOL v12 = v9 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  int v13 = v12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6
                                                                                + 8
                                                                                * ((((4 * (v10 ^ (v8 + 886))) ^ 0x791)
                                                                                  * v13) ^ v11)))(a1, a2, a3, a4, a5);
}

uint64_t sub_1001F5098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, uint64_t a7, int a8, int a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6
                                                                                + 8 * (((a9 != 1) * (v9 - 1866)) ^ v9)))(a1, a2, a3, a4, a5);
}

uint64_t sub_1001F50E0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((2 * ((v2 ^ (v3 + v1)) & 1)) & 0xEF | (16
                                                                                        * ((v2 ^ (v3 + v1)) & 1))) ^ v3)))();
}

uint64_t sub_1001F5104@<X0>(uint64_t a1@<X8>)
{
  unsigned int v5 = 562267567 * (((&v9 | 0xBF346368) - (&v9 & 0xBF346368)) ^ 0xACAE9F2B);
  uint64_t v14 = v1;
  uint64_t v15 = 0;
  int v17 = v5 ^ 0x3C8333C8;
  int v18 = ((v3 ^ 0x16) + 724) ^ v5;
  uint64_t v19 = 0x3242838E4E8EDB12;
  uint64_t v12 = 0;
  int v13 = &v8;
  uint64_t v10 = v2;
  int v11 = &v7;
  int v9 = (char *)&v7 + 4;
  uint64_t result = (*(uint64_t (**)(char **))(a1 + 8 * (v3 ^ 0xCEE)))(&v9);
  *(_DWORD *)(v4 + 28) = v16;
  return result;
}

uint64_t sub_1001F52A8(uint64_t result)
{
  uint64_t v1 = 1856021207 * ((((2 * result) | 0x4840409B3328D17ELL) - result + 0x5BDFDFB2666B9741) ^ 0x4934B7D6D7FDBE41);
  int v2 = *(_DWORD *)(result + 12) - v1;
  unint64_t v3 = *(void *)(result + 24) ^ v1;
  unint64_t v4 = *(void *)(result + 16) + v1;
  int v5 = *(_DWORD *)(result + 36) ^ v1;
  int v6 = *(_DWORD *)(result + 4) ^ v1;
  int v7 = *(_DWORD *)(result + 8) ^ v1;
  BOOL v8 = v4 == v3;
  BOOL v9 = v4 > v3;
  int v10 = v8;
  if ((v5 & 1) == 0) {
    BOOL v9 = v10;
  }
  if (!v9) {
    int v2 = v6;
  }
  *(_DWORD *)uint64_t result = v7 ^ v2;
  return result;
}

uint64_t sub_1001F5344(uint64_t result)
{
  unint64_t v1 = 516615401 * (result ^ 0x88BC887B73630632);
  int v2 = *(_DWORD *)(result + 20) ^ v1;
  unint64_t v3 = *(void *)(result + 24) ^ v1;
  int v4 = *(_DWORD *)result - v1;
  int v5 = *(_DWORD *)(result + 32) - v1;
  unint64_t v6 = *(void *)(result + 8) + v1;
  int v7 = *(_DWORD *)(result + 40) - v1;
  BOOL v8 = v6 >= v3;
  BOOL v9 = (uint64_t)v6 < (uint64_t)v3;
  int v10 = !v8;
  if ((v4 & 1) == 0) {
    BOOL v9 = v10;
  }
  if (v9) {
    int v7 = v2;
  }
  *(_DWORD *)(result + 16) = v7 ^ v5;
  return result;
}

void sub_1001F53BC(uint64_t a1)
{
  __asm { BRAA            X11, X17 }
}

void sub_1001F5440(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v10 = *(void *)(v9 + 24);
  unsigned int v11 = 941074649 * (((&a5 | 0xB3A4DD8A) - (&a5 & 0xB3A4DD8A)) ^ 0xB36C12EE);
  a6 = *(void *)(v9 + 16);
  a7 = v10;
  int v12 = v8 - 1425377192;
  a5 = v12 + v11 - 263;
  a8 = a1 - v11;
  ((void (*)(int *))*(&off_10026D1A0 + v12 + 210))(&a5);
  JUMPOUT(0x1001F585CLL);
}

void sub_1001F54C8(int a1@<W8>, int a2, int a3, uint64_t a4, uint64_t a5, long long a6, long long a7, uint64_t a8, int *a9, uint64_t a10, int a11, unsigned int a12, int a13, uint64_t a14)
{
  a3 = a1;
  int v15 = v14 - 1425377192;
  unsigned int v16 = 562267567 * ((&a6 - 978615212 - 2 * (&a6 & 0xC5AB8454)) ^ 0xD6317817);
  a14 = 0x3242838E4E8EDB12;
  a6 = 0u;
  a7 = 0u;
  a9 = &a3;
  a12 = v16 ^ 0xF65764A4;
  a13 = v15 ^ v16;
  a10 = 0;
  JUMPOUT(0x1001F55FCLL);
}

uint64_t sub_1001F5558()
{
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  int v8 = *(_DWORD *)(v1 + 32);
  uint64_t v13 = *(void *)(v1 + 8);
  int v12 = v8;
  int v9 = v0 - 1425377192;
  unsigned int v10 = 562267567 * (((v14 | 0x916BB34E) - (v14 & 0x916BB34E)) ^ 0x82F14F0D);
  v14[5] = v7;
  v14[6] = v3;
  v14[2] = &v12;
  v14[3] = v4;
  v14[0] = v5;
  v14[1] = v6;
  uint64_t v18 = 0x3242838E4E8EDB12;
  v14[4] = &v13;
  unsigned int v16 = v10 ^ 0x8304D27D;
  int v17 = v9 ^ v10;
  uint64_t result = ((uint64_t (*)(void *))*(&off_10026D1A0 + v9 + 132))(v14);
  *(_DWORD *)(v2 + 16) = v15;
  return result;
}

uint64_t sub_1001F5894(uint64_t result)
{
  unint64_t v1 = 1606104089 * ((((2 * result) | 0x3ADB71A5212363FCLL) - result - 0x1D6DB8D29091B1FELL) ^ 0xDFD343E6E586F3C0);
  unint64_t v2 = *(void *)(result + 24) ^ v1;
  unint64_t v3 = *(void *)(result + 40) + v1;
  BOOL v4 = v3 == v2;
  BOOL v5 = v3 > v2;
  int v6 = v4;
  if (((*(_DWORD *)result
       - 1606104089 * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0)) & 1) == 0)
    BOOL v5 = v6;
  if (v5) {
    int v7 = *(_DWORD *)(result + 16) - 1606104089 * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0);
  }
  else {
    int v7 = *(_DWORD *)(result + 8) ^ (1606104089 * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0));
  }
  *(_DWORD *)(result + 4) = *(_DWORD *)(result + 12) ^ (1606104089
                                                      * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0)) ^ v7;
  return result;
}

uint64_t mbdz5ztWyQD(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  unint64_t v5 = (qword_1002846E8 - qword_1002846F0) ^ (unint64_t)&v9;
  qword_1002846F0 = (431200057 * v5) ^ 0xA5F8A63A3EE64495;
  qword_1002846E8 = 431200057 * (v5 ^ 0xA5F8A63A3EE64495);
  unint64_t v6 = 444472921
     * ((((unint64_t)v10 | 0xB9499F8FED8967C6) - ((unint64_t)v10 & 0xB9499F8FED8967C6)) ^ 0x3952472C50FD0028);
  uint64_t v11 = a4;
  int v12 = (char *)sub_1001F5048 + v6;
  v10[0] = v6 ^ a5;
  v10[1] = v6 ^ a3;
  uint64_t v15 = a2;
  uint64_t v16 = a1;
  char v7 = byte_10024AB90[byte_10024AA90[(57 * ((qword_1002846E8 + qword_1002846F0) ^ 0x95))] ^ 0x51];
  int v13 = v6 ^ 0x68D9B3A5;
  ((void (*)(_DWORD *))*(&off_10026D1A0
                                  + ((57 * ((qword_1002846E8 + qword_1002846F0) ^ 0x95)) ^ v7)
                                  + 1892))(v10);
  return v14;
}

char *sub_1001F5A8C(char *result, char *a2, unint64_t a3)
{
  if (((a2 ^ result) & 7) != 0)
  {
    if ((a3 + 7) >= 8)
    {
      unsigned int v3 = (a3 + 7) >> 3;
      switch(a3 & 7)
      {
        case 1uLL:
          goto LABEL_23;
        case 2uLL:
          goto LABEL_22;
        case 3uLL:
          goto LABEL_21;
        case 4uLL:
          goto LABEL_20;
        case 5uLL:
          goto LABEL_19;
        case 6uLL:
          goto LABEL_18;
        case 7uLL:
          goto LABEL_17;
        default:
          do
          {
            char v15 = *result++;
            *a2++ = v15;
LABEL_17:
            char v16 = *result++;
            *a2++ = v16;
LABEL_18:
            char v17 = *result++;
            *a2++ = v17;
LABEL_19:
            char v18 = *result++;
            *a2++ = v18;
LABEL_20:
            char v19 = *result++;
            *a2++ = v19;
LABEL_21:
            char v20 = *result++;
            *a2++ = v20;
LABEL_22:
            char v21 = *result++;
            *a2++ = v21;
LABEL_23:
            char v22 = *result++;
            *a2++ = v22;
            --v3;
          }
          while (v3);
          break;
      }
    }
  }
  else
  {
    unint64_t v4 = -(int)result & 7;
    switch((int)v4)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        char v5 = *result++;
        *a2++ = v5;
LABEL_6:
        char v6 = *result++;
        *a2++ = v6;
LABEL_7:
        char v7 = *result++;
        *a2++ = v7;
LABEL_8:
        char v8 = *result++;
        *a2++ = v8;
LABEL_9:
        char v9 = *result++;
        *a2++ = v9;
LABEL_10:
        char v10 = *result++;
        *a2++ = v10;
LABEL_11:
        char v11 = *result++;
        *a2++ = v11;
        break;
      default:
        break;
    }
    BOOL v12 = a3 >= v4;
    unint64_t v13 = a3 - v4;
    if (!v12) {
      unint64_t v13 = 0;
    }
    if (v13 >= 8)
    {
      unint64_t v14 = ((v13 >> 3) + 7) >> 3;
      switch((v13 >> 3) & 7)
      {
        case 1uLL:
          goto LABEL_32;
        case 2uLL:
          goto LABEL_31;
        case 3uLL:
          goto LABEL_30;
        case 4uLL:
          goto LABEL_29;
        case 5uLL:
          goto LABEL_28;
        case 6uLL:
          goto LABEL_27;
        case 7uLL:
          goto LABEL_26;
        default:
          do
          {
            uint64_t v23 = *(void *)result;
            result += 8;
            *(void *)a2 = v23;
            a2 += 8;
LABEL_26:
            uint64_t v24 = *(void *)result;
            result += 8;
            *(void *)a2 = v24;
            a2 += 8;
LABEL_27:
            uint64_t v25 = *(void *)result;
            result += 8;
            *(void *)a2 = v25;
            a2 += 8;
LABEL_28:
            uint64_t v26 = *(void *)result;
            result += 8;
            *(void *)a2 = v26;
            a2 += 8;
LABEL_29:
            uint64_t v27 = *(void *)result;
            result += 8;
            *(void *)a2 = v27;
            a2 += 8;
LABEL_30:
            uint64_t v28 = *(void *)result;
            result += 8;
            *(void *)a2 = v28;
            a2 += 8;
LABEL_31:
            uint64_t v29 = *(void *)result;
            result += 8;
            *(void *)a2 = v29;
            a2 += 8;
LABEL_32:
            uint64_t v30 = *(void *)result;
            result += 8;
            *(void *)a2 = v30;
            a2 += 8;
            --v14;
          }
          while (v14);
          break;
      }
    }
    switch(v13 & 7)
    {
      case 1uLL:
        goto LABEL_40;
      case 2uLL:
        goto LABEL_39;
      case 3uLL:
        goto LABEL_38;
      case 4uLL:
        goto LABEL_37;
      case 5uLL:
        goto LABEL_36;
      case 6uLL:
        goto LABEL_35;
      case 7uLL:
        char v31 = *result++;
        *a2++ = v31;
LABEL_35:
        char v32 = *result++;
        *a2++ = v32;
LABEL_36:
        char v33 = *result++;
        *a2++ = v33;
LABEL_37:
        char v34 = *result++;
        *a2++ = v34;
LABEL_38:
        char v35 = *result++;
        *a2++ = v35;
LABEL_39:
        char v36 = *result++;
        *a2++ = v36;
LABEL_40:
        *a2 = *result;
        break;
      default:
        return result;
    }
  }
  return result;
}

unsigned char *sub_1001F5CE8(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      *uint64_t result = a2;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t X509PolicySetFlagsForCommonNames(uint64_t a1)
{
  v4[0] = 0xAAAAAAAAAAAAAAAALL;
  v4[1] = 0xAAAAAAAAAAAAAAAALL;
  uint64_t result = X509CertificateSubjectNameGetCommonName((unint64_t *)(a1 + 104), v4);
  if (!result)
  {
    uint64_t result = compare_octet_string((uint64_t)&iPhoneCAName, (uint64_t)v4);
    if (result)
    {
      uint64_t result = compare_octet_string((uint64_t)&CodeSigningCAName, (uint64_t)v4);
      if (result)
      {
        uint64_t result = compare_octet_string_partial((uint64_t)&MFi4AccessoryCAName, (uint64_t)v4);
        if (result)
        {
          uint64_t result = compare_octet_string_partial((uint64_t)&MFi4AttestationCAName, (uint64_t)v4);
          if (result)
          {
            uint64_t result = compare_octet_string_partial((uint64_t)&MFi4ProvisioningCAName, (uint64_t)v4);
            if (result) {
              return result;
            }
            uint64_t v3 = 0x1000000000;
          }
          else
          {
            uint64_t v3 = 0x800000000;
          }
        }
        else
        {
          uint64_t v3 = 0x400000000;
        }
      }
      else
      {
        uint64_t v3 = 8;
      }
    }
    else
    {
      uint64_t v3 = 3840;
    }
    *(void *)(a1 + 240) |= v3;
  }
  return result;
}

double X509PolicySetFlagsForMFI(uint64_t a1)
{
  v6[0] = 0xAAAAAAAAAAAAAAAALL;
  v6[1] = 0xAAAAAAAAAAAAAAAALL;
  if (!X509CertificateSubjectNameGetCommonName((unint64_t *)(a1 + 104), v6))
  {
    if (compare_octet_string_partial((uint64_t)&MFICommonNamePrefix, (uint64_t)v6)) {
      goto LABEL_3;
    }
    time_t v5 = 0;
    if (!X509CertificateGetNotBefore(a1, &v5))
    {
      memset(&v4, 0, sizeof(v4));
      strptime("2006-05-31", "%F", &v4);
      time_t v3 = timegm(&v4);
      double result = difftime(v3, v5);
      if (result < 0.0)
      {
        *(void *)(a1 + 240) |= 0x8000000uLL;
LABEL_3:
        if (!compare_octet_string_partial((uint64_t)&MFi4ProvisioningHostNamePrefix, (uint64_t)v6)) {
          *(void *)(a1 + 240) |= 0x1000000000uLL;
        }
      }
    }
  }
  return result;
}

uint64_t X509PolicySetFlagsForRoots(uint64_t result, uint64_t a2)
{
  if (!result) {
    return result;
  }
  uint64_t v3 = result;
  if (*(unsigned char *)(result + 16))
  {
    double result = compare_octet_string(a2 + 88, (uint64_t)&AppleRootCASPKI);
    if (!result
      || (double result = compare_octet_string(a2 + 88, (uint64_t)&AppleRootG2SPKI), !result)
      || (double result = compare_octet_string(a2 + 88, (uint64_t)&AppleRootG3SPKI), !result))
    {
      uint64_t v5 = *(void *)(a2 + 240) | 0x58E30653FFF8;
      goto LABEL_11;
    }
  }
  uint64_t v4 = *(void *)(v3 + 8);
  if ((v4 & 0x1000000) != 0)
  {
    double result = compare_octet_string(a2 + 88, (uint64_t)&UcrtRootSpki);
    if (!result)
    {
      uint64_t v5 = *(void *)(a2 + 240) | 0x1000000;
      goto LABEL_11;
    }
LABEL_13:
    if (*(unsigned char *)(v3 + 17)) {
      double result = X509PolicySetFlagsForTestAnchor((void *)v3, a2);
    }
    goto LABEL_15;
  }
  if ((v4 & 0x1C00000000) == 0) {
    goto LABEL_15;
  }
  double result = compare_octet_string(a2 + 88, (uint64_t)&MFi4RootSpki);
  if (result) {
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)(a2 + 240) | 0x1C00000000;
LABEL_11:
  *(void *)(a2 + 240) = v5;
LABEL_15:
  if (*(unsigned char *)(v3 + 16))
  {
    if (*(unsigned char *)(v3 + 17))
    {
      double result = compare_octet_string(a2 + 88, (uint64_t)&TestAppleRootCASPKI);
      if (!result
        || (double result = compare_octet_string(a2 + 88, (uint64_t)&TestAppleRootG2SPKI), !result)
        || (double result = compare_octet_string(a2 + 88, (uint64_t)&TestAppleRootG3SPKI), !result))
      {
        *(void *)(a2 + 240) |= 0x58E30653FFF8uLL;
      }
    }
    if (*(unsigned char *)(v3 + 16) && *(unsigned char *)(v3 + 17))
    {
      double result = compare_octet_string(a2 + 88, (uint64_t)&TestAppleRootECCSPKI);
      if (!result) {
        *(void *)(a2 + 240) |= 0x6400000uLL;
      }
    }
  }
  return result;
}

uint64_t X509PolicySetFlagsForTestAnchor(void *a1, uint64_t a2)
{
  v6[0] = 0;
  v6[1] = 0;
  v5[0] = 0;
  v5[1] = 0;
  uint64_t result = X509CertificateParseSPKI((unint64_t *)(a2 + 88), v6, 0, v5);
  if (!result)
  {
    uint64_t result = compare_octet_string(a1[4], (uint64_t)v6);
    if (!result)
    {
      uint64_t result = compare_octet_string(a1[3], (uint64_t)v5);
      if (!result) {
        *(void *)(a2 + 240) |= a1[1];
      }
    }
  }
  return result;
}

uint64_t X509PolicyCheckForBlockedKeys(uint64_t a1)
{
  uint64_t result = compare_octet_string(a1 + 88, (uint64_t)&BlockedYonkersSPKI);
  if (!result) {
    *(void *)(a1 + 240) &= 0xFFFFFFFFFFF3FFFFLL;
  }
  return result;
}

int *find_digest(uint64_t a1)
{
  unint64_t v2 = 0;
  while (1)
  {
    uint64_t result = (int *)compare_octet_string_raw((uint64_t)&digests[v2 / 4 + 2], *(const void **)a1, *(void *)(a1 + 8));
    if (!result) {
      break;
    }
    v2 += 32;
    if (v2 == 160) {
      return 0;
    }
  }
  if (v2 <= ~(unint64_t)digests) {
    return &digests[v2 / 4];
  }
  __break(0x5513u);
  return result;
}

int *find_digest_by_type(int *result)
{
  unint64_t v1 = 0;
  while (digests[v1 / 4] != result)
  {
    v1 += 32;
    if (v1 == 160) {
      return 0;
    }
  }
  if (v1 <= ~(unint64_t)digests) {
    return &digests[v1 / 4];
  }
  __break(0x5513u);
  return result;
}

uint64_t find_digestOID_for_signingOID(uint64_t a1, void *a2)
{
  if (!compare_octet_string_raw(a1, &sha1WithRSA_oid, 9uLL)
    || !compare_octet_string_raw(a1, &sha1WithECDSA_oid, 7uLL))
  {
    unint64_t v6 = &CTOidSha1;
    uint64_t v4 = 5;
    goto LABEL_11;
  }
  uint64_t v4 = 9;
  if (!compare_octet_string_raw(a1, &sha256WithRSA_oid, 9uLL))
  {
    unint64_t v6 = &CTOidSha256;
    goto LABEL_11;
  }
  if (!compare_octet_string_raw(a1, &sha256WithECDSA_oid, 8uLL))
  {
    unint64_t v6 = &CTOidSha256;
LABEL_18:
    uint64_t v4 = 9;
    goto LABEL_11;
  }
  uint64_t v4 = 9;
  if (!compare_octet_string_raw(a1, &sha384WithRSA_oid, 9uLL))
  {
    unint64_t v6 = &CTOidSha384;
    goto LABEL_11;
  }
  if (!compare_octet_string_raw(a1, &sha384WithECDSA_oid, 8uLL))
  {
    unint64_t v6 = &CTOidSha384;
    goto LABEL_18;
  }
  uint64_t v4 = 9;
  if (compare_octet_string_raw(a1, &sha512WithRSA_oid, 9uLL))
  {
    if (compare_octet_string_raw(a1, &sha512WithECDSA_oid, 8uLL)) {
      return 0;
    }
    unint64_t v6 = &CTOidSha512;
    goto LABEL_18;
  }
  unint64_t v6 = &CTOidSha512;
LABEL_11:
  *a2 = v6;
  a2[1] = v4;
  return 1;
}

unint64_t validateSignatureRSA(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  unint64_t result = 0;
  char v23 = 0;
  if (a1)
  {
    if (a2)
    {
      unint64_t result = 0;
      if (a3)
      {
        if (a4)
        {
          if (a5)
          {
            unint64_t result = compare_octet_string((uint64_t)&rsaEncryption, (uint64_t)(a5 + 7));
            if (!result
              || (unint64_t result = validateOIDs((uint64_t)&rsaAlgs, (uint64_t)(a5 + 3), (uint64_t)(a5 + 7)), result))
            {
              unint64_t v21 = 0xAAAAAAAAAAAAAAAALL;
              unint64_t v22 = 0xAAAAAAAAAAAAAAAALL;
              unint64_t v10 = a5[9];
              uint64_t v9 = a5[10];
              if (__CFADD__(v10, v9)) {
                goto LABEL_31;
              }
              if (v10 > v10 + v9) {
                goto LABEL_32;
              }
              unint64_t v21 = a5[9];
              unint64_t v22 = v10 + v9;
              if (!v9 || (unint64_t result = ccder_blob_check_null(), result))
              {
                if (!__CFADD__(a1, a2))
                {
                  if (a1 + a2 >= a1)
                  {
                    unint64_t result = ccder_decode_rsa_pub_n();
                    if (!result) {
                      return result;
                    }
                    unint64_t v11 = result;
                    if (result >> 58)
                    {
LABEL_33:
                      __break(0x550Cu);
                      return result;
                    }
                    unint64_t v12 = result << 6;
                    if (result << 6 < 0x400) {
                      return 0;
                    }
                    unint64_t v25 = 0xAAAAAAAAAAAAAAAALL;
                    __int16 v26 = -21846;
                    char v24 = 6;
                    if (&vars0 != (uint64_t *)82)
                    {
                      unint64_t v13 = a5[4];
                      LOBYTE(v25) = v13;
                      if ((unint64_t)&v24 <= 0xFFFFFFFFFFFFFFFDLL)
                      {
                        if (v13 <= 9)
                        {
                          uint64_t v14 = __memcpy_chk();
                          if (v12 > 0x1068) {
                            return 0;
                          }
                          unint64_t result = __chkstk_darwin(v14);
                          char v16 = (unint64_t *)((char *)&v20 - v15);
                          unint64_t v17 = 0;
                          *(void *)&long long v18 = 0xAAAAAAAAAAAAAAAALL;
                          *((void *)&v18 + 1) = 0xAAAAAAAAAAAAAAAALL;
                          do
                          {
                            char v19 = &v16[v17 / 8];
                            *(_OWORD *)char v19 = v18;
                            *((_OWORD *)v19 + 1) = v18;
                            v17 += 32;
                          }
                          while (v15 != v17);
                          if (v15 >= 1)
                          {
                            *char v16 = v11;
                            if (ccrsa_import_pub()) {
                              return 0;
                            }
                            if (!ccrsa_verify_pkcs1v15_allowshortsigs()) {
                              return v23 != 0;
                            }
                            unint64_t result = 0;
                            char v23 = 0;
                            return result;
                          }
                        }
                        goto LABEL_32;
                      }
                    }
                    goto LABEL_31;
                  }
LABEL_32:
                  __break(0x5519u);
                  goto LABEL_33;
                }
LABEL_31:
                __break(0x5513u);
                goto LABEL_32;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL validateOIDs(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = 0;
  BOOL v7 = 1;
  do
  {
    if (!compare_octet_string(a1, a2) && !compare_octet_string(a1 + 16, a3)) {
      break;
    }
    BOOL v7 = v6 < 3;
    a1 += 32;
    ++v6;
  }
  while (v6 != 4);
  return v7;
}

_UNKNOWN **oidForPubKeyLength()
{
  uint64_t v0 = ccec_x963_import_pub_size();
  int is_supported = ccec_keysize_is_supported();
  unint64_t v2 = &CTOidSECP256r1;
  uint64_t v3 = &CTOidSECP521r1;
  uint64_t v4 = &CTOidSECP384r1;
  if (v0 != 384) {
    uint64_t v4 = 0;
  }
  if (v0 != 521) {
    uint64_t v3 = v4;
  }
  if (v0 != 256) {
    unint64_t v2 = v3;
  }
  if (is_supported) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t validateSignatureEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = 0;
  HIBYTE(v17) = 0;
  if (a1)
  {
    if (a2)
    {
      uint64_t result = 0;
      if (a3)
      {
        if (a4)
        {
          if (a5)
          {
            if (!compare_octet_string((uint64_t)&ecPublicKey, a5 + 56)
              || (uint64_t result = validateOIDs((uint64_t)&ecAlgs, a5 + 24, a5 + 56), result))
            {
              uint64_t result = ccec_cp_for_oid((int **)(a5 + 72));
              if (result)
              {
                uint64_t v8 = *(void *)result;
                if (*(void *)result >> 61 || !is_mul_ok(8 * v8, 3uLL))
                {
                  __break(0x550Cu);
                }
                else
                {
                  uint64_t v9 = 24 * v8;
                  BOOL v10 = __CFADD__(v9, 16);
                  unint64_t v11 = v9 + 16;
                  if (!v10 && v11 < 0xFFFFFFFFFFFFFFF0)
                  {
                    uint64_t result = __chkstk_darwin(result);
                    uint64_t v14 = (uint64_t *)((char *)&v17 - v12);
                    unint64_t v15 = 0;
                    do
                    {
                      char v16 = &v14[v15 / 8];
                      *char v16 = 0xAAAAAAAAAAAAAAAALL;
                      v16[1] = 0xAAAAAAAAAAAAAAAALL;
                      v15 += 16;
                    }
                    while (v12 != v15);
                    if (v13 >= 0x10)
                    {
                      *uint64_t v14 = result;
                      if (v12 >= 1)
                      {
                        if (!ccec_import_pub())
                        {
                          uint64_t result = ccec_x963_import_pub_size();
                          if (result == 256 && *(void *)(a5 + 96) == 64)
                          {
                            if (*(void *)(a5 + 88) < 0xFFFFFFFFFFFFFFE0)
                            {
                              if (!ccec_verify_composite()) {
                                return HIBYTE(v17) != 0;
                              }
                              goto LABEL_24;
                            }
LABEL_31:
                            __break(0x5513u);
                            return result;
                          }
                          if (ccec_verify()) {
LABEL_24:
                          }
                            HIBYTE(v17) = 0;
                        }
                        return HIBYTE(v17) != 0;
                      }
LABEL_30:
                      __break(0x5519u);
                      goto LABEL_31;
                    }
LABEL_29:
                    __break(1u);
                    goto LABEL_30;
                  }
                }
                __break(0x5500u);
                goto LABEL_29;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t ccec_cp_for_oid(int **a1)
{
  if (!a1) {
    return 0;
  }
  unint64_t v1 = a1[1];
  if (v1 != (int *)7)
  {
    if (v1 == (int *)10 && *(void *)*a1 == 0x33DCE48862A0806 && *((_WORD *)*a1 + 4) == 1793) {
      return ccec_cp_256();
    }
    return 0;
  }
  uint64_t v4 = *a1;
  if (**a1 == -2127887098 && *(int *)((char *)*a1 + 3) == 570426497) {
    return ccec_cp_384();
  }
  int v6 = *v4;
  int v7 = *(int *)((char *)v4 + 3);
  if (v6 != -2127887098 || v7 != 587203713) {
    return 0;
  }
  return _ccec_cp_521();
}

uint64_t compressECPublicKey(uint64_t a1, int **a2, uint64_t a3, uint64_t a4)
{
  int v6 = (void *)ccec_cp_for_oid(a2);
  if (!v6) {
    return 655366;
  }
  int v7 = v6;
  uint64_t v8 = *v6;
  if (*v6 >> 61 || !is_mul_ok(8 * v8, 3uLL))
  {
    __break(0x550Cu);
    goto LABEL_19;
  }
  uint64_t v9 = 24 * v8;
  BOOL v10 = __CFADD__(v9, 16);
  unint64_t v11 = v9 + 16;
  if (v10 || v11 >= 0xFFFFFFFFFFFFFFF0) {
LABEL_19:
  }
    __break(0x5500u);
  uint64_t result = __chkstk_darwin(v6);
  unint64_t v15 = (uint64_t *)((char *)&v18 - v13);
  unint64_t v16 = 0;
  do
  {
    uint64_t v17 = &v15[v16 / 8];
    void *v17 = 0xAAAAAAAAAAAAAAAALL;
    v17[1] = 0xAAAAAAAAAAAAAAAALL;
    v16 += 16;
  }
  while (v13 != v16);
  if (v14 < 0x10) {
    goto LABEL_21;
  }
  *unint64_t v15 = v7;
  if (v13 < 1)
  {
LABEL_20:
    __break(0x5519u);
LABEL_21:
    __break(1u);
    return result;
  }
  uint64_t result = ccec_import_pub();
  if (!result)
  {
    uint64_t result = ccec_compressed_x962_export_pub_size();
    if (result == a4)
    {
      if (!a3 || a4) {
        return ccec_compressed_x962_export_pub();
      }
      goto LABEL_20;
    }
    return 393220;
  }
  return result;
}

unint64_t decompressECPublicKey(uint64_t a1, int **a2, uint64_t a3, uint64_t a4)
{
  int v6 = (uint64_t *)ccec_cp_for_oid(a2);
  if (!v6) {
    return 655366;
  }
  uint64_t v7 = *v6;
  if ((unint64_t)*v6 >> 61 || !is_mul_ok(8 * v7, 3uLL)) {
LABEL_22:
  }
    __break(0x550Cu);
  uint64_t v8 = 24 * v7;
  BOOL v9 = __CFADD__(v8, 16);
  unint64_t v10 = v8 + 16;
  if (v9 || v10 >= 0xFFFFFFFFFFFFFFF0)
  {
LABEL_21:
    __break(0x5500u);
    goto LABEL_22;
  }
  unint64_t result = __chkstk_darwin(v6);
  unint64_t v14 = (unint64_t *)((char *)&v18 - v12);
  unint64_t v15 = 0;
  do
  {
    unint64_t v16 = &v14[v15 / 8];
    *unint64_t v16 = 0xAAAAAAAAAAAAAAAALL;
    v16[1] = 0xAAAAAAAAAAAAAAAALL;
    v15 += 16;
  }
  while (v12 != v15);
  if (v13 < 0x10) {
    goto LABEL_24;
  }
  *unint64_t v14 = result;
  if (v12 >= 1)
  {
    uint64_t v17 = ccec_compressed_x962_import_pub();
    if (!v17)
    {
      unint64_t result = cczp_bitlen();
      if (result < 0xFFFFFFFFFFFFFFF9)
      {
        if (!a3 || a4)
        {
          if ((((result + 7) >> 2) | 1) == a4) {
            uint64_t v17 = 0;
          }
          else {
            uint64_t v17 = 393220;
          }
          ccec_export_pub();
          return v17;
        }
        goto LABEL_23;
      }
      goto LABEL_21;
    }
    return v17;
  }
LABEL_23:
  __break(0x5519u);
LABEL_24:
  __break(1u);
  return result;
}

unint64_t CTCopyDeviceIdentifiers(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = 327696;
  if (!result || !a2) {
    return v3;
  }
  uint64_t v11 = 0;
  unint64_t v12 = 0;
  unint64_t v10 = 0;
  if (__CFADD__(result, a2))
  {
    __break(0x5513u);
  }
  else if (result + a2 >= result)
  {
    v9[0] = result;
    v9[1] = result + a2;
    int v5 = CTConvertDashTerminatedHexstringTo64BitInteger((uint64_t)v9, &v12);
    uint64_t v6 = 327697;
    if (!v5 && !HIDWORD(v12))
    {
      if (CTConvertDashTerminatedHexstringTo64BitInteger((uint64_t)v9, &v11))
      {
        return 327698;
      }
      else
      {
        int v7 = CTConvertDashTerminatedHexstringTo64BitInteger((uint64_t)v9, &v10);
        uint64_t v6 = 327699;
        if (!v7)
        {
          char v8 = v10;
          if (v10 <= 0xFF)
          {
            uint64_t v6 = 0;
            if (a3)
            {
              *(_DWORD *)a3 = v12;
              *(void *)(a3 + 8) = v11;
              *(unsigned char *)(a3 + 16) = (v8 & 8) != 0;
              *(unsigned char *)(a3 + 17) = (v8 & 4) != 0;
              *(unsigned char *)(a3 + 18) = v8 & 3;
              *(void *)(a3 + 24) = 0;
              *(void *)(a3 + 32) = 0;
            }
          }
        }
      }
    }
    return v6;
  }
  __break(0x5519u);
  return result;
}

uint64_t CTConvertDashTerminatedHexstringTo64BitInteger(uint64_t result, void *a2)
{
  unint64_t v2 = *(unsigned __int8 **)result;
  unint64_t v3 = *(void *)(result + 8);
  if (*(void *)result > v3) {
    goto LABEL_51;
  }
  uint64_t v4 = (void *)result;
  int v5 = *(unsigned __int8 **)result;
  if (*(void *)result < v3)
  {
    unint64_t v6 = v3 - (void)v2;
    int v5 = *(unsigned __int8 **)result;
    while (*v5 != 45)
    {
      int v7 = v5 + 1;
      if ((unint64_t)(v5 + 1) > v3 || v5 > v7) {
        goto LABEL_51;
      }
      *(void *)unint64_t result = v7;
      ++v5;
      if (!--v6)
      {
        int v5 = (unsigned __int8 *)v3;
        break;
      }
    }
  }
  if ((unint64_t)v5 > v3 || v2 > v5) {
    goto LABEL_51;
  }
  unint64_t result = 327708;
  if (v5 == (unsigned __int8 *)v3) {
    return result;
  }
  char v8 = (_BYTE)v5 - (_BYTE)v2;
  if (v5 - v2 > 16) {
    return result;
  }
  if (v5 == (unsigned __int8 *)-1) {
    goto LABEL_52;
  }
  BOOL v9 = v5 + 1;
  if ((unint64_t)(v5 + 1) > v3 || v5 > v9)
  {
LABEL_51:
    __break(0x5519u);
LABEL_52:
    __break(0x5513u);
LABEL_53:
    __break(0x5500u);
    return result;
  }
  uint64_t v10 = 0;
  *uint64_t v4 = v9;
  if (v2 >= v5 || (signed int v11 = v8 + 1 + (((v8 + 1) & 0x8000u) >> 15), v11 << 23 >> 24 < 1))
  {
LABEL_47:
    unint64_t result = 0;
    if (a2) {
      *a2 = v10;
    }
  }
  else
  {
    char v12 = 0;
    uint64_t v10 = 0;
    uint64_t v13 = v11 >> 1;
    char v14 = 8 * v13 - 8;
    while (1)
    {
      if (v8 & 1) == 0 || (v12)
      {
        unint64_t v16 = *v2;
        if (v16 > ~(unint64_t)asciiNibbleToByte) {
          goto LABEL_52;
        }
        uint64_t v17 = &asciiNibbleToByte[v16];
        BOOL v18 = v17 < (unsigned __int8 *)&CTOidAppleImg4Manifest && v17 >= asciiNibbleToByte;
        if (!v18) {
          goto LABEL_51;
        }
        if (v2 == (unsigned __int8 *)-1) {
          goto LABEL_52;
        }
        if (v2 + 1 > v5 || v2 > v2 + 1) {
          goto LABEL_51;
        }
        unsigned int v15 = *v17;
        ++v2;
      }
      else
      {
        unsigned int v15 = 0;
      }
      if (v2 >= v5) {
        return 327703;
      }
      unint64_t v19 = *v2;
      if (v19 > ~(unint64_t)asciiNibbleToByte) {
        goto LABEL_52;
      }
      uint64_t v20 = &asciiNibbleToByte[v19];
      if (&asciiNibbleToByte[v19] >= (unsigned __int8 *)&CTOidAppleImg4Manifest || v20 < asciiNibbleToByte) {
        goto LABEL_51;
      }
      unint64_t v22 = v2 + 1;
      if (v2 + 1 > v5 || v2 > v22) {
        goto LABEL_51;
      }
      if (v15 > 0xF) {
        return 327703;
      }
      unsigned int v23 = *v20;
      if (v23 > 0xF) {
        return 327703;
      }
      unint64_t v24 = (unint64_t)(v23 | (16 * v15)) << (v14 & 0xF8);
      BOOL v18 = __CFADD__(v10, v24);
      v10 += v24;
      if (v18) {
        goto LABEL_53;
      }
      if (v22 < v5)
      {
        v14 -= 8;
        char v12 = 1;
        unint64_t v2 = v22;
        if (v13-- > 1) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
  return result;
}

uint64_t CTEvaluateBAASystem(unint64_t a1, uint64_t a2, void *a3, void *a4)
{
  return CTEvaluateCertsForPolicy(a1, a2, 0, 1, a3, a4, 0, 0, 0, 0, &X509PolicyBAASystem);
}

unint64_t CTEvaluateBAASystemWithId(unint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  unint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v7 = 0;
  unint64_t result = CTEvaluateCertsForPolicy(a1, a2, 0, 1, a3, a4, 0, 0, &v7, &v8, &X509PolicyBAASystem);
  if (!result) {
    return CTFillBAAIdentity(v7, v8, v9, a5);
  }
  return result;
}

unint64_t CTFillBAAIdentity(int a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a1 & 0x800000) != 0 && a4)
  {
    unint64_t result = CTCopyDeviceIdentifiers(a2, a3, a4);
    if (result) {
      return result;
    }
  }
  else if (!a4)
  {
    return 0;
  }
  unint64_t result = 0;
  if (a1 < 0 && a3)
  {
    if (a2)
    {
      *(void *)(a4 + 32) = 0;
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      unint64_t result = 0;
      *(void *)(a4 + 24) = a2;
      *(void *)(a4 + 32) = a3;
      return result;
    }
    return 0;
  }
  return result;
}

unint64_t CTEvaluateBAASystemTestRoot(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  unint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v9 = 0;
  unint64_t result = CTEvaluateCertsForPolicy(a1, a2, 1, 1, a5, a6, a3, a4, &v9, &v10, &X509PolicyBAASystem);
  if (!result) {
    return CTFillBAAIdentity(v9, v10, v11, a7);
  }
  return result;
}

unint64_t CTEvaluateBAAUser(unint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  unint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v7 = 0;
  unint64_t result = CTEvaluateCertsForPolicy(a1, a2, 0, 1, a3, a4, 0, 0, &v7, &v8, &X509PolicyBAAUser);
  if (!result) {
    return CTFillBAAIdentity(v7, v8, v9, a5);
  }
  return result;
}

unint64_t CTEvaluateBAAUserTestRoot(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  unint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v9 = 0;
  unint64_t result = CTEvaluateCertsForPolicy(a1, a2, 1, 1, a5, a6, a3, a4, &v9, &v10, &X509PolicyBAAUser);
  if (!result) {
    return CTFillBAAIdentity(v9, v10, v11, a7);
  }
  return result;
}

unint64_t CTEvaluateBAASepApp(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  unint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v9 = 0;
  unint64_t result = CTEvaluateCertsForPolicy(a1, a2, 1, 1, a5, a6, a3, a4, &v9, &v10, &X509PolicyBAASepApp);
  if (!result) {
    return CTFillBAAIdentity(v9, v10, v11, a7);
  }
  return result;
}

uint64_t CTEvaluateBAAAccessory(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8)
{
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t result = CTEvaluateCertsForPolicy(a1, a2, 0, 1, a5, a6, a3, a4, 0, &v12, &X509PolicyMFi4Attestation);
  if (!result && a7)
  {
    if (a8)
    {
      uint64_t v11 = v13;
      *a7 = v12;
      *a8 = v11;
    }
  }
  return result;
}

uint64_t CTEvaluateBAA(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, void *a8, void *a9, uint64_t a10)
{
  switch(a1)
  {
    case 1:
      uint64_t result = CTEvaluateBAASystemTestRoot(a2, a3, a4, a5, a6, a7, a10);
      break;
    case 2:
      uint64_t result = CTEvaluateBAAUserTestRoot(a2, a3, a4, a5, a6, a7, a10);
      break;
    case 3:
      uint64_t result = CTEvaluateBAAAccessory(a2, a3, a4, a5, a6, a7, a8, a9);
      break;
    case 4:
      uint64_t result = CTEvaluateBAASepApp(a2, a3, a4, a5, a6, a7, a10);
      break;
    default:
      uint64_t result = 327712;
      break;
  }
  return result;
}

uint64_t CTGetBAARootType(unint64_t a1, uint64_t a2)
{
  memset(v4, 0, sizeof(v4));
  if (__CFADD__(a1, a2))
  {
    __break(0x5513u);
LABEL_14:
    __break(0x5519u);
  }
  if (a1 + a2 < a1) {
    goto LABEL_14;
  }
  v3[0] = a1;
  v3[1] = a1 + a2;
  if (X509CertificateParse((unint64_t *)v4, v3)) {
    return 0;
  }
  if (!compare_octet_string((uint64_t)&v4[5] + 8, (uint64_t)&BASystemRootSPKI)) {
    return 1;
  }
  if (!compare_octet_string((uint64_t)&v4[5] + 8, (uint64_t)&BAUserRootSPKI)) {
    return 2;
  }
  if (compare_octet_string((uint64_t)&v4[5] + 8, (uint64_t)&MFi4RootSpki)) {
    return 4 * (compare_octet_string((uint64_t)&v4[5] + 8, (uint64_t)&BASepAppRootSPKI) == 0);
  }
  return 3;
}

uint64_t CTGetBAASubCAType(unint64_t a1, uint64_t a2)
{
  memset(v4, 0, sizeof(v4));
  if (__CFADD__(a1, a2))
  {
    __break(0x5513u);
LABEL_14:
    __break(0x5519u);
  }
  if (a1 + a2 < a1) {
    goto LABEL_14;
  }
  v3[0] = a1;
  v3[1] = a1 + a2;
  if (X509CertificateParse((unint64_t *)v4, v3)) {
    return 0;
  }
  if (!compare_octet_string((uint64_t)&v4[10] + 8, (uint64_t)&BASystemRootSKID)) {
    return 1;
  }
  if (!compare_octet_string((uint64_t)&v4[10] + 8, (uint64_t)&BAUserRootSKID)) {
    return 2;
  }
  if (compare_octet_string((uint64_t)&v4[10] + 8, (uint64_t)&MFi4RootSKID)) {
    return 4 * (compare_octet_string((uint64_t)&v4[10] + 8, (uint64_t)&BASepAppRootSKID) == 0);
  }
  return 3;
}

uint64_t CTEvaluateDAK(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  unint64_t v7 = a1 + a2;
  if (a1 + a2 < a1) {
    goto LABEL_31;
  }
  uint64_t result = CTEvaluateBAAUserTestRoot(a1, a2, a3, a4, a5, a6, a7);
  if (result) {
    return result;
  }
  *(void *)&long long v12 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v12 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v27[17] = v12;
  v27[18] = v12;
  v27[15] = v12;
  v27[16] = v12;
  v27[13] = v12;
  v27[14] = v12;
  v27[11] = v12;
  v27[12] = v12;
  v27[9] = v12;
  v27[10] = v12;
  v27[7] = v12;
  v27[8] = v12;
  v27[5] = v12;
  v27[6] = v12;
  v27[3] = v12;
  v27[4] = v12;
  v27[1] = v12;
  v27[2] = v12;
  v27[0] = v12;
  v18[0] = 0xAAAAAAAAAAAAAAAALL;
  v18[1] = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v17 = 0;
  if (__CFADD__(a1, a2)) {
    goto LABEL_32;
  }
  v16[0] = a1;
  v16[1] = v7;
  uint64_t result = (uint64_t)X509ChainParseCertificateSet(v16, (unint64_t)v27, 1, v18, &v17);
  if (!result)
  {
    if (!v18[0]) {
      return 327691;
    }
    unint64_t v25 = 0;
    unint64_t v26 = 0;
    uint64_t result = CTParseExtensionValue(*(void *)v18[0], *(void *)(v18[0] + 8), &CTOidAppleFDRIdentity, 9uLL, &v25, &v26);
    if (!result)
    {
      unint64_t v23 = 0xAAAAAAAAAAAAAAAALL;
      unint64_t v24 = 0xAAAAAAAAAAAAAAAALL;
      if (!__CFADD__(v25, v26))
      {
        if (v25 > v25 + v26) {
          goto LABEL_31;
        }
        unint64_t v23 = v25;
        unint64_t v24 = v25 + v26;
        unint64_t v22 = v26;
        uint64_t result = ccder_blob_decode_tl();
        if (!result) {
          return 720929;
        }
        if (v24 < v23) {
          goto LABEL_31;
        }
        unint64_t v13 = v22;
        if (v22 > v24 - v23) {
          goto LABEL_31;
        }
        unint64_t v25 = v23;
        unint64_t v26 = v22;
        if (!__CFADD__(v23, v22))
        {
          char v14 = (unsigned char *)v23;
          if (v23 < v23 + v22)
          {
            do
            {
              if ((unint64_t)v14 < v23) {
                goto LABEL_31;
              }
              if (*v14 == 45) {
                goto LABEL_19;
              }
              ++v14;
              --v13;
            }
            while (v13);
            char v14 = (unsigned char *)(v23 + v22);
          }
LABEL_19:
          if (v14 != (unsigned char *)-1)
          {
            if ((unint64_t)(v14 + 1) >= v23 + v22) {
              return 327711;
            }
            if (v23 <= (unint64_t)(v14 + 1))
            {
              v21[0] = v14 + 1;
              v21[1] = v23 + v22;
              uint64_t v19 = 0;
              unint64_t v20 = 0;
              int v15 = CTConvertDashTerminatedHexstringTo64BitInteger((uint64_t)v21, &v20);
              uint64_t result = 327697;
              if (!v15 && !HIDWORD(v20))
              {
                if (CTConvertDashTerminatedHexstringTo64BitInteger((uint64_t)v21, &v19))
                {
                  return 327698;
                }
                else
                {
                  uint64_t result = 0;
                  if (a7)
                  {
                    *(_DWORD *)a7 = v20;
                    *(void *)(a7 + 8) = v19;
                  }
                }
              }
              return result;
            }
LABEL_31:
            __break(0x5519u);
          }
        }
      }
LABEL_32:
      __break(0x5513u);
    }
  }
  return result;
}

uint64_t CMSParseContentInfoSignedDataWithOptions(unsigned __int8 *a1, uint64_t a2, unint64_t *a3, char a4)
{
  uint64_t v28 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
  uint64_t v29 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
  if (__CFADD__(a1, a2)) {
    goto LABEL_114;
  }
  if (&a1[a2] < a1) {
    goto LABEL_112;
  }
  int v4 = 65537;
  uint64_t v28 = a1;
  uint64_t v29 = &a1[a2];
  __int16 v27 = 0;
  size_t v26 = 0xAAAAAAAAAAAAAAAALL;
  int v7 = ccder_blob_decode_ber_tl(&v28, 0x2000000000000010, (unsigned char *)&v27 + 1, &v26);
  uint64_t result = 65537;
  if (v7)
  {
    unint64_t v24 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
    unint64_t v25 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
    if (__CFADD__(v28, v26)) {
      goto LABEL_114;
    }
    if (v28 > &v28[v26] || &v28[v26] > v29) {
      goto LABEL_112;
    }
    unint64_t v24 = v28;
    unint64_t v25 = &v28[v26];
    if (ccder_blob_decode_tl())
    {
      if (v25 < v24 || v26 > v25 - v24) {
        goto LABEL_112;
      }
      if (compare_octet_string_raw((uint64_t)&pkcs7_signedData_oid, v24, v26)) {
        return 65539;
      }
      if (__CFADD__(v24, v26)) {
        goto LABEL_114;
      }
      if (v24 > &v24[v26] || &v24[v26] > v25) {
        goto LABEL_112;
      }
      v24 += v26;
      if (!ccder_blob_decode_ber_tl(&v24, 0xA000000000000000, &v27, &v26)) {
        return 65540;
      }
      unint64_t v22 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
      unint64_t v23 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
      if (__CFADD__(v24, v26)) {
        goto LABEL_114;
      }
      if (v24 > &v24[v26] || &v24[v26] > v25) {
        goto LABEL_112;
      }
      unint64_t v22 = v24;
      unint64_t v23 = &v24[v26];
      __int16 v31 = 0;
      memset(v30, 170, sizeof(v30));
      if ((ccder_blob_decode_ber_tl(&v22, 0x2000000000000010, (unsigned char *)&v31 + 1, v30) & 1) == 0) {
        return 131073;
      }
      if (__CFADD__(v22, v30[0])) {
        goto LABEL_114;
      }
      uint64_t v9 = 131080;
      if (&v22[v30[0]] != v23) {
        return 131082;
      }
      unint64_t v10 = a3 + 11;
      if (!ccder_blob_decode_uint64()) {
        return 131074;
      }
      uint64_t result = 131092;
      if (*v10 <= 4uLL && ((1 << *v10) & 0x1A) != 0)
      {
        if (!ccder_blob_eat_ber_inner(&v22, 0x2000000000000011, 0, 125)) {
          return 131075;
        }
        unsigned __int8 v35 = 0;
        size_t v34 = 0;
        if ((ccder_blob_decode_ber_tl(&v22, 0x2000000000000010, &v35, &v34) & 1) == 0) {
          return 131076;
        }
        char v32 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
        char v33 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
        if (__CFADD__(v22, v34)) {
          goto LABEL_114;
        }
        if (v22 > &v22[v34] || &v22[v34] > v23) {
          goto LABEL_112;
        }
        char v32 = v22;
        char v33 = &v22[v34];
        if (!ccder_blob_decode_tl()) {
          return 131077;
        }
        if (v33 < v32 || v34 > v33 - v32) {
          goto LABEL_112;
        }
        if (compare_octet_string_raw((uint64_t)&pkcs7_data_oid, v32, v34)) {
          return 131078;
        }
        if (__CFADD__(v32, v34)) {
          goto LABEL_114;
        }
        uint64_t v11 = &v32[v34];
        if (v32 > &v32[v34] || v11 > v33) {
          goto LABEL_112;
        }
        v32 += v34;
        int v12 = v35;
        if (v11 != v33 || v35)
        {
          unsigned __int8 v40 = 0;
          uint64_t v38 = v33;
          unint64_t v39 = 0;
          uint64_t v37 = v11;
          if (ccder_blob_decode_ber_tl(&v37, 0xA000000000000000, &v40, &v39))
          {
            if (!v12)
            {
              if (__CFADD__(v37, v39)) {
                goto LABEL_114;
              }
              if (&v37[v39] != v33) {
                return v9;
              }
            }
            if (v37 > v38) {
              goto LABEL_112;
            }
            char v32 = v37;
            char v33 = v38;
            unsigned __int8 v36 = 0;
            int v16 = v40;
            if (v40 && !ccder_blob_decode_ber_tl(&v32, 0x2000000000000004, &v36, &v39)) {
              return 131079;
            }
            unint64_t v41 = 0;
            if (!ccder_blob_decode_tl()) {
              return 131090;
            }
            uint64_t v17 = v32;
            BOOL v18 = v33;
            if (v33 < v32) {
              goto LABEL_112;
            }
            unint64_t v19 = v41;
            if (v41 > v33 - v32) {
              goto LABEL_112;
            }
            a3[9] = (unint64_t)v32;
            a3[10] = v19;
            if (__CFADD__(v17, v19))
            {
LABEL_114:
              __break(0x5513u);
              return 0;
            }
            unint64_t v20 = &v17[v19];
            if (v20 > v18 || v17 > v20) {
              goto LABEL_112;
            }
            char v32 = v20;
            if ((ccder_blob_decode_eoc((unint64_t *)&v32, v36) & 1) == 0) {
              return 131089;
            }
          }
          else
          {
            if (!v12) {
              return v9;
            }
            int v16 = v40;
          }
          if ((ccder_blob_decode_eoc((unint64_t *)&v32, v16 != 0) & 1) == 0) {
            return 131088;
          }
          uint64_t v11 = v32;
        }
        if (v11 > v23 || v22 > v11) {
          goto LABEL_112;
        }
        unint64_t v22 = v11;
        if ((ccder_blob_decode_eoc((unint64_t *)&v22, v12 != 0) & 1) == 0) {
          return 131081;
        }
        uint64_t v37 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
        uint64_t v38 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
        if (v22 > v23) {
          goto LABEL_112;
        }
        uint64_t v37 = v22;
        uint64_t v38 = v23;
        if ((ccder_blob_decode_ber_tl(&v37, 0xA000000000000000, &v31, v30) & 1) == 0)
        {
          unint64_t v13 = v22;
          int v15 = v23;
          goto LABEL_86;
        }
        char v32 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
        char v33 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
        if (!__CFADD__(v37, v30[0]))
        {
          if (v37 > &v37[v30[0]] || &v37[v30[0]] > v38) {
            goto LABEL_112;
          }
          char v32 = v37;
          char v33 = &v37[v30[0]];
          if (!CMSParseImplicitCertificateSet(&v32, a3[1], *a3, a3 + 3, a3 + 2)) {
            return 131085;
          }
          if (!ccder_blob_decode_eoc((unint64_t *)&v32, v31)) {
            return 131086;
          }
          unint64_t v13 = v32;
          if (v32 - v37 >= 0 ? v32 >= v37 : v32 < v37)
          {
            if (v37 > v32) {
              goto LABEL_112;
            }
            int v15 = v38;
            if (v32 > v38) {
              goto LABEL_112;
            }
            unint64_t v22 = v32;
            unint64_t v23 = v38;
LABEL_86:
            if (v13 <= v15)
            {
              uint64_t v37 = v13;
              uint64_t v38 = v15;
              if (ccder_blob_eat_ber_inner(&v37, 0xA000000000000001, 0, 125))
              {
                if (v37 > v38) {
                  goto LABEL_112;
                }
                unint64_t v22 = v37;
                unint64_t v23 = v38;
              }
              if (!ccder_blob_eat_ber_inner(&v22, 0x2000000000000011, (unsigned __int8 **)&v30[1], 125)) {
                return 131083;
              }
              if (v30[2] >= v30[1])
              {
                unint64_t v21 = &v22[-v30[1]];
                if ((unint64_t)&v22[-v30[1]] <= v30[2] - v30[1])
                {
                  a3[5] = v30[1];
                  a3[6] = (unint64_t)v21;
                  if ((ccder_blob_decode_eoc((unint64_t *)&v22, HIBYTE(v31)) & 1) == 0) {
                    return 131084;
                  }
                  if (!ccder_blob_decode_eoc((unint64_t *)&v22, v27)) {
                    return 65541;
                  }
                  if (v22 <= v25 && v24 <= v22)
                  {
                    unint64_t v24 = v22;
                    if (ccder_blob_decode_eoc((unint64_t *)&v24, HIBYTE(v27)))
                    {
                      if ((a4 & 1) == 0 && v24 != v29) {
                        return 65543;
                      }
                      return 0;
                    }
                    return (v4 + 5);
                  }
                }
              }
            }
LABEL_112:
            __break(0x5519u);
            return (v4 + 5);
          }
        }
        goto LABEL_114;
      }
    }
    else
    {
      return 65538;
    }
  }
  return result;
}

uint64_t ccder_blob_decode_ber_tl(unsigned __int8 **a1, uint64_t a2, unsigned char *a3, unint64_t *a4)
{
  int v8 = ccder_blob_decode_tag();
  uint64_t result = 0;
  if (v8)
  {
    if (a2 == 0xAAAAAAAAAAAAAAAALL) {
      return ccder_blob_decode_ber_len(a1, a3, a4);
    }
  }
  return result;
}

uint64_t ccder_blob_decode_eoc(unint64_t *a1, int a2)
{
  if (!a2) {
    return 1;
  }
  uint64_t result = ccder_blob_decode_tl();
  if (!result) {
    return result;
  }
  unint64_t v4 = *a1;
  if (*a1 >= 0x5555555555555556)
  {
    __break(0x5513u);
LABEL_12:
    __break(0x5519u);
    return result;
  }
  unint64_t v5 = v4 - 0x5555555555555556;
  if (v4 > v4 - 0x5555555555555556 || v5 > a1[1]) {
    goto LABEL_12;
  }
  *a1 = v5;
  return 1;
}

uint64_t CMSParseContentInfoSignedData(unsigned __int8 *a1, uint64_t a2, unint64_t *a3)
{
  return CMSParseContentInfoSignedDataWithOptions(a1, a2, a3, 0);
}

uint64_t CMSParseSignerInfos(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, long long *))
{
  char v84 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
  uint64_t v85 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
  unint64_t v4 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  if (__CFADD__(v4, v3)) {
    goto LABEL_93;
  }
  if (v4 > v4 + v3) {
    goto LABEL_92;
  }
  char v84 = *(unsigned __int8 **)(a1 + 40);
  uint64_t v85 = (unsigned __int8 *)(v4 + v3);
  unint64_t v72 = 0xAAAAAAAAAAAAAAAALL;
  if (v4 >= v4 + v3)
  {
    unsigned int v48 = 0;
    uint64_t result = 0;
    if (v3) {
      return (v48 << 8) | 0x30008;
    }
    return result;
  }
  unsigned int v6 = 0;
  unsigned __int8 v60 = 0;
  int v7 = 256;
  while (1)
  {
    unsigned __int8 v71 = 0;
    long long v82 = 0u;
    long long v83 = 0u;
    long long v73 = 0u;
    long long v74 = 0u;
    long long v75 = 0u;
    long long v76 = 0u;
    long long v77 = 0u;
    long long v78 = 0u;
    long long v79 = 0u;
    long long v80 = 0u;
    long long v81 = 0u;
    DWORD2(v83) = 327681;
    LOBYTE(v82) = v6 + 1;
    if ((ccder_blob_decode_ber_tl(&v84, 0x2000000000000010, &v71, &v72) & 1) == 0)
    {
      int v49 = 196609;
      return v7 | v49;
    }
    char v69 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
    char v70 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
    if (__CFADD__(v84, v72)) {
      goto LABEL_93;
    }
    if (v84 > &v84[v72] || &v84[v72] > v85) {
      goto LABEL_92;
    }
    char v69 = v84;
    char v70 = &v84[v72];
    if ((ccder_blob_decode_uint64() & 1) == 0)
    {
      int v49 = 196610;
      return v7 | v49;
    }
    uint64_t v9 = v69;
    int v8 = v70;
    uint64_t v67 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
    unint64_t v68 = 0xAAAAAAAAAAAAAAAALL;
    if (v69 > v70) {
      goto LABEL_92;
    }
    uint64_t v67 = v69;
    unint64_t v68 = (unint64_t)v70;
    uint64_t v65 = v69;
    uint64_t v66 = v70;
    if (!ccder_blob_decode_tl()) {
      break;
    }
    unint64_t v10 = v69;
LABEL_19:
    if (__CFADD__(v72, v10 - v9)) {
      goto LABEL_94;
    }
    if (v72 + v10 - v9 > v8 - v9) {
      goto LABEL_92;
    }
    *((void *)&v73 + 1) = v9;
    *(void *)&long long v74 = v72 + v10 - v9;
    if (__CFADD__(v10, v72)) {
      goto LABEL_93;
    }
    if (v10 > &v10[v72] || &v10[v72] > v70) {
      goto LABEL_92;
    }
    char v69 = &v10[v72];
    if (!ccder_blob_decode_AlgorithmIdentifierNULL((unint64_t *)&v69, (unint64_t *)&v74 + 1))
    {
      int v49 = 196612;
      return v7 | v49;
    }
    int v63 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
    unsigned int v64 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
    if (v69 > v70) {
      goto LABEL_92;
    }
    int v63 = v69;
    unsigned int v64 = v70;
    if (ccder_blob_decode_tl())
    {
      if (v64 < v63 || v72 > v64 - v63) {
        goto LABEL_92;
      }
      *((void *)&v75 + 1) = v63;
      *(void *)&long long v76 = v72;
      if (__CFADD__(v63, v72)) {
        goto LABEL_93;
      }
      if (v63 > &v63[v72] || &v63[v72] > v64) {
        goto LABEL_92;
      }
      char v69 = &v63[v72];
      char v70 = v64;
    }
    else
    {
      *((void *)&v75 + 1) = 0;
      *(void *)&long long v76 = 0;
    }
    if ((ccder_blob_decode_AlgorithmIdentifierNULL((unint64_t *)&v69, (unint64_t *)&v76 + 1) & 1) == 0)
    {
      int v49 = 196613;
      return v7 | v49;
    }
    if ((ccder_blob_decode_tl() & 1) == 0)
    {
      int v49 = 196614;
      return v7 | v49;
    }
    if (v70 < v69 || v72 > v70 - v69) {
      goto LABEL_92;
    }
    *((void *)&v78 + 1) = v69;
    *(void *)&long long v79 = v72;
    if (__CFADD__(v69, v72)) {
      goto LABEL_93;
    }
    int v12 = &v69[v72];
    if (v69 > &v69[v72] || v12 > v70) {
      goto LABEL_92;
    }
    v69 += v72;
    int v63 = v12;
    unsigned int v64 = v70;
    if (ccder_blob_eat_ber_inner(&v63, 0xA000000000000001, 0, 125))
    {
      if (v63 > v64) {
        goto LABEL_92;
      }
      char v69 = v63;
      char v70 = v64;
    }
    if ((ccder_blob_decode_eoc((unint64_t *)&v69, v71) & 1) == 0)
    {
      int v49 = 196615;
      return v7 | v49;
    }
    digest = find_digest((uint64_t)&v74 + 8);
    if (digest)
    {
      char v14 = digest;
      unsigned int v15 = *(_DWORD *)(a1 + 96);
      if (!v15 || *digest <= v15)
      {
        uint64_t result = a3(a2, a1, &v73);
        if (result != 327710)
        {
          if (result) {
            return result;
          }
          unint64_t v17 = *(void *)(a1 + 64);
          if (v17 <= v60)
          {
            if (v17)
            {
              int v29 = v60 - 1;
              unint64_t v30 = *(void *)(a1 + 56);
              uint64_t v31 = 176 * v29;
              if (__CFADD__(v30, v31)) {
                goto LABEL_93;
              }
              unint64_t v32 = v30 + 176 * v29;
              if (v32 >= v30 + 176 * v17 || v32 < v30) {
                goto LABEL_92;
              }
              char v33 = find_digest(v30 + 176 * v29 + 24);
              if (v33)
              {
                if (*v14 > *v33)
                {
                  unsigned int v34 = *(_DWORD *)(a1 + 96);
                  if (!v34 || *v14 <= v34)
                  {
                    unint64_t v35 = *(void *)(a1 + 56);
                    if (__CFADD__(v35, v31)) {
                      goto LABEL_93;
                    }
                    unsigned __int8 v36 = (_OWORD *)(v35 + 176 * v29);
                    unint64_t v37 = v35 + 176 * *(void *)(a1 + 64);
                    BOOL v38 = v37 >= (unint64_t)v36;
                    unint64_t v39 = v37 - (void)v36;
                    if (!v38 || v35 > (unint64_t)v36 || v39 < 0xB0) {
                      goto LABEL_92;
                    }
                    long long v40 = v73;
                    long long v41 = v75;
                    v36[1] = v74;
                    v36[2] = v41;
                    *unsigned __int8 v36 = v40;
                    long long v42 = v76;
                    long long v43 = v77;
                    long long v44 = v79;
                    v36[5] = v78;
                    v36[6] = v44;
                    v36[3] = v42;
                    v36[4] = v43;
                    long long v45 = v80;
                    long long v46 = v81;
                    long long v47 = v83;
                    v36[9] = v82;
                    v36[10] = v47;
                    v36[7] = v45;
                    v36[8] = v46;
                  }
                }
              }
            }
          }
          else
          {
            unsigned int v18 = *(_DWORD *)(a1 + 96);
            if (!v18 || *v14 <= v18)
            {
              uint64_t v19 = *(void *)(a1 + 56);
              if (__CFADD__(v19, 176 * (char)v60)) {
                goto LABEL_93;
              }
              unint64_t v20 = (_OWORD *)(v19 + 176 * v60);
              if (176 * v17 - 176 * v60 < 0xB0) {
                goto LABEL_92;
              }
              long long v21 = v73;
              long long v22 = v75;
              v20[1] = v74;
              v20[2] = v22;
              *unint64_t v20 = v21;
              long long v23 = v76;
              long long v24 = v77;
              long long v25 = v79;
              v20[5] = v78;
              v20[6] = v25;
              v20[3] = v23;
              v20[4] = v24;
              long long v26 = v80;
              long long v27 = v81;
              long long v28 = v83;
              v20[9] = v82;
              v20[10] = v28;
              v20[7] = v26;
              v20[8] = v27;
              if (v60 == 0xFF)
              {
                __break(0x5507u);
                return result;
              }
              ++v60;
            }
          }
        }
      }
    }
    if (v69 > v85 || v84 > v69) {
      goto LABEL_92;
    }
    char v84 = v69;
    unsigned int v48 = v6 + 1;
    if (v6 <= 6)
    {
      v7 += 256;
      ++v6;
      if (v69 < v85) {
        continue;
      }
    }
    if (v69 == v85)
    {
      if (v60) {
        return 0;
      }
      uint64_t v50 = *(void *)(a1 + 64);
      if (!v50) {
        return 0;
      }
      if ((unint64_t)(176 * v50) >= 0xB0)
      {
        uint64_t result = 0;
        int v51 = *(_OWORD **)(a1 + 56);
        long long v52 = v73;
        long long v53 = v75;
        v51[1] = v74;
        v51[2] = v53;
        *int v51 = v52;
        long long v54 = v76;
        long long v55 = v77;
        long long v56 = v79;
        v51[5] = v78;
        v51[6] = v56;
        v51[3] = v54;
        v51[4] = v55;
        long long v57 = v80;
        long long v58 = v81;
        long long v59 = v83;
        v51[9] = v82;
        v51[10] = v59;
        v51[7] = v57;
        v51[8] = v58;
        return result;
      }
LABEL_92:
      __break(0x5519u);
LABEL_93:
      __break(0x5513u);
LABEL_94:
      __break(0x5500u);
    }
    return (v48 << 8) | 0x30008;
  }
  if (ccder_blob_decode_tl())
  {
    unint64_t v10 = v67;
    uint64_t v11 = (unsigned __int8 *)v68;
LABEL_17:
    if (v10 > v11) {
      goto LABEL_92;
    }
    char v69 = v10;
    char v70 = v11;
    goto LABEL_19;
  }
  if (ccder_blob_decode_tl())
  {
    unint64_t v10 = v65;
    uint64_t v11 = v66;
    goto LABEL_17;
  }
  int v49 = 196611;
  return v7 | v49;
}

uint64_t CMSBuildPath(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v20 = 0xAAAAAAAAAAAAAAAALL;
  unint64_t v21 = 0xAAAAAAAAAAAAAAAALL;
  unint64_t v3 = *(void *)(a3 + 8);
  uint64_t v4 = *(void *)(a3 + 16);
  if (__CFADD__(v3, v4)) {
LABEL_49:
  }
    __break(0x5513u);
  unint64_t v5 = v3 + v4;
  if (v3 > v5) {
    goto LABEL_48;
  }
  unint64_t v20 = *(void *)(a3 + 8);
  unint64_t v21 = v5;
  unint64_t v19 = 0xAAAAAAAAAAAAAAAALL;
  if (*(void *)a3 != 3)
  {
    if (*(void *)a3 != 1) {
      return 524289;
    }
    uint64_t v8 = 524293;
    if (!ccder_blob_decode_tl()) {
      return 524290;
    }
    if (!ccder_blob_decode_tl()) {
      return 524291;
    }
    if (v21 >= v20 && v19 <= v21 - v20)
    {
      unint64_t v15 = v20;
      unint64_t v16 = v19;
      if (__CFADD__(v20, v19)) {
        goto LABEL_49;
      }
      if (v20 <= v20 + v19 && v20 + v19 <= v21)
      {
        v20 += v19;
        if (!ccder_blob_decode_tl()) {
          return 524292;
        }
        if (v21 >= v20 && v19 <= v21 - v20)
        {
          unint64_t v17 = v20;
          unint64_t v18 = v19;
          if (__CFADD__(v20, v19)) {
            goto LABEL_49;
          }
          if (v20 <= v20 + v19 && v20 + v19 <= v21)
          {
            v20 += v19;
            uint64_t v9 = *(void **)(a2 + 24);
            if (!v9) {
              return v8;
            }
            while (compare_octet_string((uint64_t)&v15, (uint64_t)(v9 + 15))
                 || compare_octet_string((uint64_t)&v17, (uint64_t)(v9 + 17)))
            {
              uint64_t v9 = (void *)v9[34];
              if (!v9) {
                return v8;
              }
            }
            goto LABEL_36;
          }
        }
      }
    }
    goto LABEL_48;
  }
  if (*(void *)(a2 + 88) == 1) {
    return 524298;
  }
  unint64_t v15 = v3;
  unint64_t v16 = v5;
  if (ccder_blob_decode_tl())
  {
    unint64_t v11 = v20;
    unint64_t v10 = v21;
    goto LABEL_29;
  }
  uint64_t v8 = 524294;
  if (!ccder_blob_decode_tl() || !ccder_blob_decode_tl()) {
    return v8;
  }
  unint64_t v11 = v15;
  unint64_t v10 = v16;
  if (v15 > v16)
  {
LABEL_48:
    __break(0x5519u);
    goto LABEL_49;
  }
  unint64_t v20 = v15;
  unint64_t v21 = v16;
LABEL_29:
  if (v10 < v11 || v19 > v10 - v11) {
    goto LABEL_48;
  }
  unint64_t v17 = v11;
  unint64_t v18 = v19;
  if (__CFADD__(v11, v19)) {
    goto LABEL_49;
  }
  if (v11 > v11 + v19 || v11 + v19 > v10) {
    goto LABEL_48;
  }
  unint64_t v20 = v11 + v19;
  uint64_t CertificateUsingKeyIdentifier = X509ChainGetCertificateUsingKeyIdentifier((uint64_t *)(a2 + 24), (uint64_t)&v17);
  if (!CertificateUsingKeyIdentifier) {
    return 524295;
  }
  uint64_t v9 = (void *)CertificateUsingKeyIdentifier;
LABEL_36:
  if (v20 != v21) {
    return 524543;
  }
  uint64_t v13 = X509ChainBuildPath(v9, (uint64_t *)(a2 + 24), (void *)(a3 + 152));
  uint64_t v8 = v13;
  if (*(_DWORD *)(a3 + 168) == 327681) {
    *(_DWORD *)(a3 + 168) = v13;
  }
  return v8;
}

uint64_t validateSignerInfo(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a3 + 24;
  digest = find_digest(a3 + 24);
  if (!digest) {
    return 327682;
  }
  uint64_t v8 = (unint64_t *)(*((uint64_t (**)(void))digest + 3))();
  uint64_t v9 = v8;
  memset(v86, 0, sizeof(v86));
  unint64_t v10 = (_OWORD *)a2[13];
  unint64_t v11 = a2[14];
  if (v10) {
    BOOL v12 = v11 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  if (v12)
  {
    if (a2[9] && a2[10])
    {
      unint64_t v10 = v86;
      uint64_t v13 = ccdigest();
      unint64_t v11 = *v9;
      if (*v9 >= 0x41) {
        goto LABEL_180;
      }
      goto LABEL_16;
    }
    if (!v10) {
      goto LABEL_144;
    }
  }
  if (*v8 != v11)
  {
LABEL_144:
    *(_DWORD *)(a3 + 168) = 327710;
    return 327710;
  }
  if (v11 > 0x40) {
    goto LABEL_180;
  }
  uint64_t v13 = __memcpy_chk();
LABEL_16:
  *(void *)(a3 + 128) = v10;
  *(void *)(a3 + 136) = v11;
  unint64_t v15 = (void *)(a3 + 128);
  uint64_t v16 = *(void *)(a3 + 48);
  if (!v16) {
    goto LABEL_159;
  }
  uint64_t v71 = a1;
  long long v79 = (char *)0xAAAAAAAAAAAAAAAALL;
  unint64_t v80 = 0xAAAAAAAAAAAAAAAALL;
  unint64_t v17 = *(void *)(a3 + 40);
  if (__CFADD__(v17, v16)) {
    goto LABEL_181;
  }
  unint64_t v18 = v17 + v16;
  if (v17 > v18)
  {
LABEL_180:
    __break(0x5519u);
    goto LABEL_181;
  }
  long long v79 = *(char **)(a3 + 40);
  unint64_t v80 = v18;
  unint64_t v78 = 0xAAAAAAAAAAAAAAAALL;
  if (v17 < v18)
  {
    int v19 = 0;
    uint64_t v74 = 0x2000000000000010;
    unsigned int v70 = 262146;
    unsigned int v73 = 262147;
    unsigned int v72 = 262148;
    do
    {
      if (!ccder_blob_decode_tl())
      {
        uint64_t result = 262145;
        goto LABEL_176;
      }
      if (__CFADD__(v79, v78)) {
        goto LABEL_181;
      }
      unint64_t v20 = &v79[v78];
      long long v77 = (char *)0xAAAAAAAAAAAAAAAALL;
      long long v76 = (char *)0xAAAAAAAAAAAAAAAALL;
      if (v79 > &v79[v78] || (unint64_t)v20 > v80) {
        goto LABEL_180;
      }
      long long v76 = v79;
      long long v77 = &v79[v78];
      if (!ccder_blob_decode_tl())
      {
        uint64_t result = v70;
        goto LABEL_176;
      }
      long long v22 = v76;
      if (__CFADD__(v76, v78)) {
        goto LABEL_181;
      }
      if (v76 > &v76[v78] || &v76[v78] > v77) {
        goto LABEL_180;
      }
      v76 += v78;
      if (v78 != 9) {
        goto LABEL_147;
      }
      if (*(void *)v22 == 0x9010DF78648862ALL && v22[8] == 3)
      {
        if (v19) {
          goto LABEL_149;
        }
        *(void *)char v84 = 0xAAAAAAAAAAAAAAAALL;
        int v33 = ccder_blob_decode_tl();
        uint64_t result = v73;
        if (v33)
        {
          if (CMSAttributeParseContentType(&v76)) {
            uint64_t result = 0;
          }
          else {
            uint64_t result = v72;
          }
        }
        v19 |= 1u;
        if (result) {
          goto LABEL_176;
        }
      }
      else if (*(void *)v22 == 0x9010DF78648862ALL && v22[8] == 4)
      {
        if ((v19 & 2) != 0) {
          goto LABEL_149;
        }
        *(void *)char v84 = 0xAAAAAAAAAAAAAAAALL;
        int v36 = ccder_blob_decode_tl();
        uint64_t result = v73;
        if (v36)
        {
          if (CMSAttributeParseMessageDigest((uint64_t)&v76, v34, v35, a3)) {
            uint64_t result = 0;
          }
          else {
            uint64_t result = v72;
          }
        }
        v19 |= 2u;
        if (result) {
          goto LABEL_176;
        }
      }
      else if (*(void *)v22 == 0x96463F78648862ALL && v22[8] == 2)
      {
        if ((v19 & 0x10) != 0) {
          goto LABEL_149;
        }
        unint64_t v83 = 0xAAAAAAAAAAAAAAAALL;
        int v37 = ccder_blob_decode_tl();
        uint64_t result = v73;
        if (v37)
        {
          BOOL v38 = v76;
          unint64_t v39 = v77;
          if (v76 >= v77)
          {
LABEL_111:
            if (v38 == v39) {
              uint64_t result = 0;
            }
            else {
              uint64_t result = 262155;
            }
          }
          else
          {
            while (1)
            {
              if (!ccder_blob_decode_tl())
              {
                uint64_t result = 262157;
                goto LABEL_134;
              }
              memset(v84, 170, 16);
              if (__CFADD__(v76, v83)) {
                goto LABEL_181;
              }
              if (v76 > &v76[v83] || &v76[v83] > v77) {
                goto LABEL_180;
              }
              *(void *)char v84 = v76;
              *(void *)&v84[8] = &v76[v83];
              if ((ccder_blob_decode_tl() & 1) == 0)
              {
                uint64_t result = 262151;
                goto LABEL_134;
              }
              long long v81 = (unsigned char *)0xAAAAAAAAAAAAAAAALL;
              long long v82 = (unsigned char *)0xAAAAAAAAAAAAAAAALL;
              if (*(void *)&v84[8] < *(void *)v84 || v83 > *(void *)&v84[8] - *(void *)v84) {
                goto LABEL_180;
              }
              long long v81 = *(unsigned char **)v84;
              long long v82 = (unsigned char *)v83;
              if (__CFADD__(*(void *)v84, v83)) {
                goto LABEL_181;
              }
              if (*(void *)v84 > *(void *)v84 + v83 || *(void *)v84 + v83 > *(void *)&v84[8]) {
                goto LABEL_180;
              }
              *(void *)v84 += v83;
              if (!ccder_blob_decode_tl())
              {
                uint64_t result = 262152;
                goto LABEL_134;
              }
              uint64_t v41 = *(void *)v84;
              if (__CFADD__(*(void *)v84, v83)) {
                goto LABEL_181;
              }
              unint64_t v42 = *(void *)v84 + v83;
              if (*(void *)v84 > *(void *)v84 + v83) {
                goto LABEL_180;
              }
              uint64_t v43 = *(void *)&v84[8];
              if (v42 > *(void *)&v84[8]) {
                goto LABEL_180;
              }
              *(void *)v84 += v83;
              if (v42 != *(void *)&v84[8]) {
                break;
              }
              long long v44 = find_digest((uint64_t)&v81);
              if (v44)
              {
                unsigned int v45 = *v44;
                if (*v44 > *(_DWORD *)(a3 + 104))
                {
                  unsigned int v46 = *(_DWORD *)(v71 + 8);
                  if (!v46 || v45 <= v46)
                  {
                    *(_DWORD *)(a3 + 104) = v45;
                    unint64_t v47 = v83;
                    if (v83 > v43 - v41) {
                      goto LABEL_180;
                    }
                    *(void *)(a3 + 112) = v41;
                    *(void *)(a3 + 120) = v47;
                  }
                }
              }
              BOOL v38 = *(char **)v84;
              unint64_t v39 = v77;
              if (*(void *)v84 > (unint64_t)v77 || (unint64_t)v76 > *(void *)v84) {
                goto LABEL_180;
              }
              long long v76 = *(char **)v84;
              if (*(void *)v84 >= (unint64_t)v77) {
                goto LABEL_111;
              }
            }
            uint64_t result = 262153;
          }
        }
LABEL_134:
        v19 |= 0x10u;
        if (result) {
          goto LABEL_176;
        }
      }
      else if (*(void *)v22 == 0x9010DF78648862ALL && v22[8] == 5)
      {
        if ((v19 & 4) != 0) {
          goto LABEL_149;
        }
        *(void *)char v84 = 0xAAAAAAAAAAAAAAAALL;
        int v48 = ccder_blob_decode_tl();
        uint64_t result = v73;
        if (v48)
        {
          if (CMSAttributeParseSigningTime((unint64_t *)&v76)) {
            uint64_t result = 0;
          }
          else {
            uint64_t result = v72;
          }
        }
        v19 |= 4u;
        if (result) {
          goto LABEL_176;
        }
      }
      else if (*(void *)v22 == 0x96463F78648862ALL && v22[8] == 1)
      {
        if ((v19 & 8) != 0) {
          goto LABEL_149;
        }
        *(void *)char v84 = 0xAAAAAAAAAAAAAAAALL;
        int v51 = ccder_blob_decode_tl();
        uint64_t result = v73;
        if (v51)
        {
          if (CMSAttributeParseAppleHashAgility((unint64_t *)&v76, v49, v50, a3)) {
            uint64_t result = 0;
          }
          else {
            uint64_t result = v72;
          }
        }
        v19 |= 8u;
        if (result) {
          goto LABEL_176;
        }
      }
      else if (*(void *)v22 == 0x9010DF78648862ALL && v22[8] == 52)
      {
        if ((v19 & 0x20) != 0)
        {
LABEL_149:
          uint64_t result = 262149;
          goto LABEL_176;
        }
        v19 |= 0x20u;
      }
      else
      {
        uint64_t v29 = *(void *)v22;
        int v30 = v22[8];
        if (v29 != 0x9010DF78648862ALL || v30 != 15)
        {
LABEL_147:
          uint64_t result = 262150;
          goto LABEL_176;
        }
        if ((v19 & 0x40) != 0) {
          goto LABEL_149;
        }
        *(void *)char v84 = 0xAAAAAAAAAAAAAAAALL;
        int v32 = ccder_blob_decode_tl();
        uint64_t result = v73;
        if (v32)
        {
          if (CMSAttributeParseSMIMECapabilities(&v76)) {
            uint64_t result = 0;
          }
          else {
            uint64_t result = v72;
          }
        }
        v19 |= 0x40u;
        if (result) {
          goto LABEL_176;
        }
      }
      if ((unint64_t)v20 > v80 || v79 > v20) {
        goto LABEL_180;
      }
      long long v79 = v20;
    }
    while ((unint64_t)v20 < v80);
    if ((~v19 & 3) == 0)
    {
      uint64_t v53 = ccder_sizeof_tag();
      uint64_t v54 = ccder_sizeof_len();
      BOOL v55 = __CFADD__(v53, v54);
      unint64_t v56 = v53 + v54;
      if (v55) {
        goto LABEL_182;
      }
      if (v56 > 0x14)
      {
        uint64_t result = 327689;
        goto LABEL_176;
      }
      memset(v84, 170, sizeof(v84));
      long long v81 = (unsigned char *)0xAAAAAAAAAAAAAAAALL;
      long long v82 = (unsigned char *)0xAAAAAAAAAAAAAAAALL;
      if (!__CFADD__(v84, v56))
      {
        if (&v84[v56] <= (unsigned char *)&v85 && v84 <= &v84[v56])
        {
          long long v81 = v84;
          long long v82 = &v84[v56];
          uint64_t v57 = ccder_blob_encode_tl();
          if (!v57)
          {
            uint64_t result = 327688;
            goto LABEL_176;
          }
          unint64_t v58 = v9[1];
          BOOL v55 = __CFADD__(v58, 8);
          unint64_t v59 = v58 + 8;
          if (!v55)
          {
            unint64_t v60 = v9[2];
            BOOL v55 = __CFADD__(v59, v60);
            unint64_t v61 = v59 + v60;
            if (!v55)
            {
              BOOL v55 = __CFADD__(v61, 4);
              unint64_t v62 = v61 + 4;
              if (!v55 && v62 < 0xFFFFFFFFFFFFFFF8)
              {
                __chkstk_darwin(v57);
                unsigned int v64 = (char *)&v69 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
                memset(v64, 170, ((v65 - 9) & 0xFFFFFFFFFFFFFFF8) + 8);
                ccdigest_init();
                ccdigest_update();
                ccdigest_update();
                uint64_t v13 = ((uint64_t (*)(unint64_t *, char *, _OWORD *))v9[7])(v9, v64, v86);
LABEL_159:
                uint64_t result = CMSBuildPath(v13, (uint64_t)a2, a3);
                switch((int)result)
                {
                  case 524293:
                  case 524295:
                    *(_DWORD *)(a3 + 168) = result;
                    return 0;
                  case 524294:
                    goto LABEL_176;
                  case 524296:
                    if (*(_DWORD *)(a3 + 168) != 458753) {
                      goto LABEL_167;
                    }
                    int v66 = 524296;
LABEL_166:
                    *(_DWORD *)(a3 + 168) = v66;
LABEL_167:
                    unint64_t v67 = *v9;
                    if (*v9 > 0x40) {
                      goto LABEL_180;
                    }
                    v75[0] = v86;
                    v75[1] = v67;
                    uint64_t result = X509CertificateCheckSignatureDigest(29, *(void *)(a3 + 152), v75, v6);
                    if (!result || result == 655648 || result == 655632)
                    {
                      int v68 = *(_DWORD *)(a3 + 168);
                      if (!v68 || v68 == 458753 || v68 == 327681) {
                        *(_DWORD *)(a3 + 168) = result;
                      }
                      uint64_t result = 0;
                    }
                    break;
                  case 524297:
                    int v66 = 524297;
                    goto LABEL_166;
                  default:
                    if (result) {
                      goto LABEL_176;
                    }
                    goto LABEL_167;
                }
                goto LABEL_176;
              }
            }
          }
LABEL_182:
          __break(0x5500u);
          JUMPOUT(0x1001F9594);
        }
        goto LABEL_180;
      }
LABEL_181:
      __break(0x5513u);
    }
  }
  uint64_t result = 262156;
LABEL_176:
  if ((_OWORD *)*v15 == v86)
  {
    *unint64_t v15 = 0;
    *(void *)(a3 + 136) = 0;
  }
  return result;
}

uint64_t validateSignerInfoAndChain(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = validateSignerInfo((uint64_t)a1, a2, a3);
  if (!v5)
  {
    int v7 = X509ChainCheckPath(29, (uint64_t *)(a3 + 152), *a1);
    if (v7)
    {
      if (!*(_DWORD *)(a3 + 168)) {
        *(_DWORD *)(a3 + 168) = v7;
      }
    }
  }
  return v5;
}

uint64_t CMSVerifySignedDataWithLeaf(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  return CMSVerify(a1, a2, a3, a4, a5, a6, a7, &v8, &v9);
}

uint64_t CMSVerify(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, void *a8, void *a9)
{
  uint64_t v29 = 0;
  v30[0] = 0;
  memset(v28, 0, sizeof(v28));
  uint64_t v26 = 0;
  uint64_t v25 = 0;
  long long v23 = 0u;
  long long v24 = (char *)&v23 + 8;
  v30[1] = 0;
  memset(__b, 170, sizeof(__b));
  v22[0] = 4;
  v22[1] = (unint64_t)__b;
  long long v20 = 0u;
  long long v21 = 0u;
  memset(v19, 0, sizeof(v19));
  long long v27 = v19;
  *(void *)&v28[0] = 1;
  DWORD2(v21) = 327681;
  if (a2 < 0) {
    goto LABEL_19;
  }
  uint64_t result = CMSParseContentInfoSignedDataWithOptions(a1, a2, v22, 0);
  if (result) {
    return result;
  }
  if (!a4) {
    goto LABEL_7;
  }
  uint64_t result = 131091;
  if (*(_OWORD *)((char *)v28 + 8) != 0) {
    return result;
  }
  if (a4 < 0) {
LABEL_19:
  }
    __break(0x5519u);
  *((void *)&v28[0] + 1) = a3;
  *(void *)&v28[1] = a4;
LABEL_7:
  v30[0] = a5;
  DWORD2(v21) = 458753;
  uint64_t result = CMSParseSignerInfos((uint64_t)v22, (uint64_t)v30, (uint64_t (*)(uint64_t, uint64_t, long long *))validateSignerInfoAndChain);
  if (!result)
  {
    uint64_t result = DWORD2(v21);
    if (!DWORD2(v21))
    {
      if (a6 && a7) {
        uint64_t result = X509CertificateParseKey(*((uint64_t *)&v20 + 1), a6, a7);
      }
      if (!a4)
      {
        if (a8)
        {
          if (a9)
          {
            uint64_t v18 = *(void *)&v28[1];
            if (*(void *)&v28[1])
            {
              if (*((void *)&v28[0] + 1))
              {
                *a8 = *((void *)&v28[0] + 1);
                *a9 = v18;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t CMSVerifySignedData(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v9 = 0;
  uint64_t v8 = 0;
  return CMSVerify(a1, a2, a3, a4, a5, &v6, &v7, &v8, &v9);
}

uint64_t CMSVerifyAndReturnSignedData(unsigned __int8 *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  return CMSVerify(a1, a2, 0, 0, a5, &v6, &v7, a3, a4);
}

uint64_t ccder_blob_decode_ber_len(unsigned __int8 **a1, unsigned char *a2, unint64_t *a3)
{
  *a2 = 0;
  unint64_t v3 = *a1;
  if (!*a1) {
    return 0;
  }
  unint64_t v4 = (unint64_t)a1[1];
  if ((unint64_t)v3 >= v4) {
    return 0;
  }
  if (v3 == (unsigned __int8 *)-1)
  {
LABEL_42:
    __break(0x5513u);
    JUMPOUT(0x1001F9AD0);
  }
  uint64_t v5 = v3 + 1;
  if (v3 >= v3 + 1 || (unint64_t)v5 > v4)
  {
LABEL_41:
    __break(0x5519u);
    goto LABEL_42;
  }
  *a1 = v5;
  unint64_t v7 = *v3;
  if ((char)*v3 < 0)
  {
    switch(*v3)
    {
      case 0x80u:
        unint64_t v7 = v4 - (void)v5;
        *a2 = 1;
        break;
      case 0x81u:
        if ((uint64_t)(v4 - (void)v5) < 1) {
          return 0;
        }
        if (v3 == (unsigned __int8 *)-2) {
          goto LABEL_42;
        }
        uint64_t v9 = v3 + 2;
        if (v5 > v9 || (unint64_t)v9 > v4) {
          goto LABEL_41;
        }
        *a1 = v9;
        unint64_t v7 = *v5;
        uint64_t v5 = v9;
        break;
      case 0x82u:
        if ((uint64_t)(v4 - (void)v5) < 2) {
          return 0;
        }
        if ((unint64_t)v5 >= v4) {
          goto LABEL_41;
        }
        if (v3 == (unsigned __int8 *)-2) {
          goto LABEL_42;
        }
        if (v3 + 2 < v5 || (unint64_t)(v3 + 2) >= v4) {
          goto LABEL_41;
        }
        if ((unint64_t)v5 > 0xFFFFFFFFFFFFFFFDLL) {
          goto LABEL_42;
        }
        unint64_t v10 = v3 + 3;
        if (v5 > v3 + 3 || (unint64_t)v10 > v4) {
          goto LABEL_41;
        }
        unint64_t v11 = (unint64_t)v3[1] << 8;
        uint64_t v12 = v3[2];
        goto LABEL_40;
      case 0x83u:
        if ((uint64_t)(v4 - (void)v5) < 3) {
          return 0;
        }
        if ((unint64_t)v5 >= v4) {
          goto LABEL_41;
        }
        if (v3 == (unsigned __int8 *)-2) {
          goto LABEL_42;
        }
        if (v3 + 2 < v5 || (unint64_t)(v3 + 2) >= v4) {
          goto LABEL_41;
        }
        if ((unint64_t)v5 > 0xFFFFFFFFFFFFFFFDLL) {
          goto LABEL_42;
        }
        if (v3 + 3 < v5 || (unint64_t)(v3 + 3) >= v4) {
          goto LABEL_41;
        }
        if ((unint64_t)v5 > 0xFFFFFFFFFFFFFFFCLL) {
          goto LABEL_42;
        }
        unint64_t v10 = v3 + 4;
        if (v5 > v3 + 4 || (unint64_t)v10 > v4) {
          goto LABEL_41;
        }
        unint64_t v11 = ((unint64_t)v3[1] << 16) | ((unint64_t)v3[2] << 8);
        uint64_t v12 = v3[3];
LABEL_40:
        unint64_t v7 = v11 | v12;
        *a1 = v10;
        uint64_t v5 = v10;
        break;
      default:
        return 0;
    }
  }
  if (v4 - (unint64_t)v5 < v7) {
    return 0;
  }
  *a3 = v7;
  return 1;
}

uint64_t CMSParseImplicitCertificateSet(unsigned __int8 **a1, unint64_t a2, unint64_t a3, unint64_t *a4, unint64_t *a5)
{
  unint64_t v31 = 0xAAAAAAAAAAAAAAAALL;
  unint64_t v32 = 0xAAAAAAAAAAAAAAAALL;
  *a4 = 0;
  a4[1] = 0;
  int v30 = (unsigned __int8 *)0xAAAAAAAAAAAAAAAALL;
  uint64_t v5 = *a1;
  unint64_t v6 = (unint64_t)a1[1];
  if ((unint64_t)*a1 > v6)
  {
LABEL_43:
    __break(0x5519u);
LABEL_44:
    __break(0x5513u);
  }
  int v30 = *a1;
  unint64_t v31 = v6;
  BOOL v7 = (unint64_t)v5 >= v6 || a3 == 0;
  if (v7)
  {
    unint64_t v12 = 0;
LABEL_8:
    if (a5) {
      *a5 = v12;
    }
    return 1;
  }
  else
  {
    unint64_t v12 = 0;
    unint64_t v13 = 304 * a3;
    unint64_t v14 = a2 + 304 * a3;
    unint64_t v25 = ~a2;
    long long v27 = (unint64_t **)(a4 + 1);
    long long v23 = (unint64_t *)(a2 + 272);
    unint64_t v15 = a2;
    while (1)
    {
      char v29 = 0;
      if (!ccder_blob_decode_tag()) {
        return 0;
      }
      if (!v32) {
        goto LABEL_8;
      }
      if (!ccder_blob_decode_ber_len(&v30, &v29, &v28) || v29 || v32 != 0x2000000000000010) {
        return 0;
      }
      if ((unsigned __int128)((uint64_t)v12 * (__int128)304) >> 64 != (uint64_t)(304 * v12) >> 63 || 304 * v12 > v25) {
        goto LABEL_44;
      }
      if (v15 > v14) {
        goto LABEL_43;
      }
      if (v15 < a2) {
        goto LABEL_43;
      }
      BOOL v16 = v13 >= 0x130;
      v13 -= 304;
      if (!v16) {
        goto LABEL_43;
      }
      *(_OWORD *)(v15 + 272) = 0u;
      *(_OWORD *)(v15 + 288) = 0u;
      *(_OWORD *)(v15 + 240) = 0u;
      *(_OWORD *)(v15 + 256) = 0u;
      *(_OWORD *)(v15 + 208) = 0u;
      *(_OWORD *)(v15 + 224) = 0u;
      *(_OWORD *)(v15 + 176) = 0u;
      *(_OWORD *)(v15 + 192) = 0u;
      *(_OWORD *)(v15 + 144) = 0u;
      *(_OWORD *)(v15 + 160) = 0u;
      *(_OWORD *)(v15 + 112) = 0u;
      *(_OWORD *)(v15 + 128) = 0u;
      *(_OWORD *)(v15 + 80) = 0u;
      *(_OWORD *)(v15 + 96) = 0u;
      *(_OWORD *)(v15 + 48) = 0u;
      *(_OWORD *)(v15 + 64) = 0u;
      *(_OWORD *)(v15 + 16) = 0u;
      *(_OWORD *)(v15 + 32) = 0u;
      *(_OWORD *)unint64_t v15 = 0u;
      if (v12)
      {
        if (v15 + 304 > v14) {
          goto LABEL_43;
        }
        *(void *)(v15 + 272) = 0;
        unint64_t v17 = *v27;
        *(void *)(v15 + 280) = *v27;
        if (v15)
        {
          if (v15 >= v14) {
            goto LABEL_43;
          }
        }
        unint64_t *v17 = v15;
        *long long v27 = (unint64_t *)(v15 + 272);
      }
      else
      {
        if (v15 + 304 > v14) {
          goto LABEL_43;
        }
        unint64_t v18 = *a4;
        *long long v23 = *a4;
        int v19 = (unint64_t **)(v18 + 280);
        BOOL v7 = v18 == 0;
        long long v20 = v27;
        if (!v7) {
          long long v20 = v19;
        }
        *long long v20 = v23;
        if (v15)
        {
          if (v15 >= v14) {
            goto LABEL_43;
          }
        }
        *a4 = v15;
        *(void *)(a2 + 280) = a4;
      }
      if (X509CertificateParseImplicit(v15, (unint64_t *)&v30, 0, 0)) {
        return 0;
      }
      if (v6 < (unint64_t)v5) {
        goto LABEL_43;
      }
      long long v21 = v30;
      long long v22 = (unsigned __int8 *)(v30 - v5);
      if (v30 - v5 > v6 - (unint64_t)v5) {
        goto LABEL_43;
      }
      if (v15 + 304 > v14) {
        goto LABEL_43;
      }
      *(void *)unint64_t v15 = v5;
      *(void *)(v15 + 8) = v22;
      unint64_t v6 = v31;
      if ((unint64_t)v21 > v31) {
        goto LABEL_43;
      }
      *a1 = v21;
      a1[1] = (unsigned __int8 *)v6;
      ++v12;
      if ((unint64_t)v21 < v6)
      {
        v15 += 304;
        uint64_t v5 = v21;
        if (v12 < a3) {
          continue;
        }
      }
      goto LABEL_8;
    }
  }
}

uint64_t ccder_blob_eat_ber_inner(unsigned __int8 **a1, uint64_t a2, unsigned __int8 **a3, int a4)
{
  char v15 = 0;
  unint64_t v14 = 0xAAAAAAAAAAAAAAAALL;
  int v8 = ccder_blob_decode_tag();
  uint64_t result = 0;
  if (v8 && v14 == a2)
  {
    unint64_t v13 = 0xAAAAAAAAAAAAAAAALL;
    uint64_t result = ccder_blob_decode_ber_len(a1, &v15, &v13);
    if ((result & 1) == 0) {
      return 0;
    }
    if (a3)
    {
      unint64_t v10 = a1[1];
      if (*a1 > v10) {
        goto LABEL_18;
      }
      *a3 = *a1;
      a3[1] = v10;
    }
    if (v15)
    {
      if (a4 >= 1)
      {
        uint64_t result = ccder_blob_eat_ber_inner(a1, 0, 0, (char)(a4 - 1));
        if (!result) {
          return result;
        }
        return (ccder_blob_decode_eoc((unint64_t *)a1, 1) & 1) != 0;
      }
      return 0;
    }
    unint64_t v11 = *a1;
    if (__CFADD__(*a1, v13))
    {
LABEL_19:
      __break(0x5513u);
      return result;
    }
    unint64_t v12 = &v11[v13];
    if (v11 <= &v11[v13] && v12 <= a1[1])
    {
      *a1 = v12;
      return 1;
    }
LABEL_18:
    __break(0x5519u);
    goto LABEL_19;
  }
  return result;
}

uint64_t CMSAttributeParseContentType(char **a1)
{
  uint64_t result = ccder_blob_decode_tl();
  if (result)
  {
    unint64_t v3 = *a1;
    if ((unint64_t)*a1 >= 0x5555555555555556)
    {
      __break(0x5513u);
    }
    else
    {
      if (v3 - 0x5555555555555556 != a1[1]) {
        return 0;
      }
      if (v3 <= v3 - 0x5555555555555556) {
        return compare_octet_string_raw((uint64_t)&pkcs7_data_oid, v3, 0xAAAAAAAAAAAAAAAALL) == 0;
      }
    }
    __break(0x5519u);
  }
  return result;
}

uint64_t CMSAttributeParseMessageDigest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = ccder_blob_decode_tl();
  if (result)
  {
    if (*(void *)a1 >= 0x5555555555555556uLL)
    {
      __break(0x5513u);
    }
    else if (*(void *)a1 - 0x5555555555555556 == *(void *)(a1 + 8))
    {
      uint64_t result = (uint64_t)find_digest(a4 + 24);
      if (result)
      {
        if (*(void *)(a4 + 136) != 0xAAAAAAAAAAAAAAAALL
          || *(void *)(*(uint64_t (**)(void))(result + 24))() != 0xAAAAAAAAAAAAAAAALL
          || memcmp(*(const void **)(a4 + 128), *(const void **)a1, 0xAAAAAAAAAAAAAAAALL))
        {
          *(_DWORD *)(a4 + 168) = 458754;
        }
        return 1;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t CMSAttributeParseSigningTime(unint64_t *a1)
{
  if (*a1 > a1[1]) {
    goto LABEL_10;
  }
  unint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  uint64_t result = ccder_blob_decode_tl();
  if (result)
  {
    unint64_t v3 = *a1;
    goto LABEL_7;
  }
  uint64_t result = ccder_blob_decode_tl();
  if (!result) {
    return result;
  }
  unint64_t v3 = v4;
  if (v4 > v5) {
LABEL_10:
  }
    __break(0x5519u);
  *a1 = v4;
  a1[1] = v5;
LABEL_7:
  if (v3 < 0x5555555555555556) {
    return v3 - 0x5555555555555556 == a1[1];
  }
  __break(0x5513u);
  return result;
}

uint64_t CMSAttributeParseAppleHashAgility(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = ccder_blob_decode_tl();
  if (result)
  {
    unint64_t v7 = *a1;
    if (*a1 >= 0x5555555555555556)
    {
      __break(0x5513u);
    }
    else
    {
      if (v7 - 0x5555555555555556 != a1[1]) {
        return 0;
      }
      if (*(_DWORD *)(a4 + 104)) {
        return 1;
      }
      if (v7 <= v7 - 0x5555555555555556)
      {
        *(void *)(a4 + 112) = v7;
        *(void *)(a4 + 120) = 0xAAAAAAAAAAAAAAAALL;
        return 1;
      }
    }
    __break(0x5519u);
  }
  return result;
}

uint64_t CMSAttributeParseSMIMECapabilities(void *a1)
{
  uint64_t result = ccder_blob_decode_tl();
  if (result)
  {
    if (*a1 >= 0x5555555555555556uLL) {
      __break(0x5513u);
    }
    else {
      return *a1 - 0x5555555555555556 == a1[1];
    }
  }
  return result;
}

uint64_t compare_octet_string(uint64_t a1, uint64_t a2)
{
  size_t v2 = *(void *)(a1 + 8);
  size_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return memcmp(*(const void **)a1, *(const void **)a2, v2);
  }
  if (v2 > v3) {
    return 0xFFFFFFFFLL;
  }
  return 1;
}

uint64_t compare_octet_string_raw(uint64_t a1, const void *a2, size_t a3)
{
  size_t v3 = *(void *)(a1 + 8);
  if (v3 == a3) {
    return memcmp(*(const void **)a1, a2, a3);
  }
  if (v3 > a3) {
    return 0xFFFFFFFFLL;
  }
  return 1;
}

uint64_t compare_octet_string_partial(uint64_t a1, uint64_t a2)
{
  size_t v2 = *(void *)(a1 + 8);
  if (v2 <= *(void *)(a2 + 8)) {
    return memcmp(*(const void **)a2, *(const void **)a1, v2);
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t ccder_blob_decode_AlgorithmIdentifierNULL(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = ccder_blob_decode_tl();
  if (result)
  {
    if (*a1 > a1[1]) {
      goto LABEL_20;
    }
    unint64_t v5 = *a1;
    unint64_t v6 = *a1;
    uint64_t result = ccder_blob_decode_tl();
    if (!result) {
      return result;
    }
    if (a2)
    {
      if (v6 < v5) {
        goto LABEL_20;
      }
      *a2 = v5;
      a2[1] = 0;
    }
    if (v5 == v6)
    {
      if (v5 <= a1[1] && *a1 <= v5)
      {
        *a1 = v5;
        return 1;
      }
    }
    else if (v5 <= v6)
    {
      uint64_t result = ccder_blob_decode_tl();
      if (!result) {
        return result;
      }
      if (v5 != v6) {
        return 0;
      }
      if (v5 <= a1[1] && *a1 <= v5)
      {
        *a1 = v5;
        return 1;
      }
    }
LABEL_20:
    __break(0x5519u);
  }
  return result;
}

uint64_t ccder_blob_decode_Time(void *a1)
{
  if (*a1 > a1[1]) {
    goto LABEL_6;
  }
  if (ccder_blob_decode_tl()) {
    return 0;
  }
  if (*a1 > a1[1]) {
LABEL_6:
  }
    __break(0x5519u);
  ccder_blob_decode_tl();
  return 0;
}

uint64_t ccder_blob_decode_GeneralName(unint64_t *a1, int *a2, unint64_t *a3)
{
  uint64_t result = 0;
  if (a2 && a3)
  {
    *a3 = 0;
    a3[1] = 0;
    if (*a1 > a1[1]) {
      goto LABEL_42;
    }
    unint64_t v10 = *a1;
    if (ccder_blob_decode_tl())
    {
      *a2 = 0;
LABEL_6:
      unint64_t v7 = v10;
LABEL_16:
      if (v7 <= a1[1] && *a1 <= v7)
      {
        *a1 = v7;
        return 1;
      }
LABEL_42:
      __break(0x5519u);
    }
    if (*a1 > a1[1]) {
      goto LABEL_42;
    }
    unint64_t v11 = *a1;
    unint64_t v16 = a1[1];
    if (ccder_blob_decode_tl())
    {
      unint64_t v7 = v11;
      if (v16 < v11) {
        goto LABEL_42;
      }
      *a3 = v11;
      a3[1] = 0;
      int v8 = 1;
LABEL_15:
      *a2 = v8;
      goto LABEL_16;
    }
    if (*a1 > a1[1]) {
      goto LABEL_42;
    }
    unint64_t v12 = *a1;
    unint64_t v17 = a1[1];
    if (ccder_blob_decode_tl())
    {
      unint64_t v7 = v12;
      if (v17 < v12) {
        goto LABEL_42;
      }
      *a3 = v12;
      a3[1] = 0;
      int v8 = 2;
      goto LABEL_15;
    }
    if (*a1 > a1[1]) {
      goto LABEL_42;
    }
    unint64_t v10 = *a1;
    if (ccder_blob_decode_tl())
    {
      int v9 = 3;
LABEL_23:
      *a2 = v9;
      goto LABEL_6;
    }
    if (*a1 > a1[1]) {
      goto LABEL_42;
    }
    unint64_t v13 = *a1;
    unint64_t v18 = a1[1];
    if (ccder_blob_decode_tl())
    {
      unint64_t v7 = v13;
      if (v18 < v13) {
        goto LABEL_42;
      }
      *a3 = v13;
      a3[1] = 0;
      int v8 = 4;
      goto LABEL_15;
    }
    if (*a1 > a1[1]) {
      goto LABEL_42;
    }
    unint64_t v10 = *a1;
    if (ccder_blob_decode_tl())
    {
      int v9 = 5;
      goto LABEL_23;
    }
    if (*a1 > a1[1]) {
      goto LABEL_42;
    }
    unint64_t v14 = *a1;
    unint64_t v19 = a1[1];
    if (ccder_blob_decode_tl())
    {
      unint64_t v7 = v14;
      if (v19 < v14) {
        goto LABEL_42;
      }
      *a3 = v14;
      a3[1] = 0;
      int v8 = 6;
      goto LABEL_15;
    }
    if (*a1 > a1[1]) {
      goto LABEL_42;
    }
    unint64_t v15 = *a1;
    unint64_t v20 = a1[1];
    if (ccder_blob_decode_tl())
    {
      unint64_t v7 = v15;
      if (v20 < v15) {
        goto LABEL_42;
      }
      *a3 = v15;
      a3[1] = 0;
      int v8 = 7;
      goto LABEL_15;
    }
    if (*a1 > a1[1]) {
      goto LABEL_42;
    }
    unint64_t v10 = *a1;
    uint64_t result = ccder_blob_decode_tl();
    if (result)
    {
      int v9 = 8;
      goto LABEL_23;
    }
  }
  return result;
}

uint64_t ccder_blob_check_null()
{
  return ccder_blob_decode_tl();
}

uint64_t CTParseCertificateSet(unint64_t a1, unint64_t a2, _OWORD *a3, uint64_t a4, void *a5)
{
  uint64_t v6 = 0;
  if (a1 < a2 && a4)
  {
    uint64_t v8 = 0;
    uint64_t v9 = a4 - 1;
    unint64_t v10 = a3;
    unint64_t v11 = (unint64_t)&a3[a4];
    while (1)
    {
      *(void *)&long long v12 = 0xAAAAAAAAAAAAAAAALL;
      *((void *)&v12 + 1) = 0xAAAAAAAAAAAAAAAALL;
      v17[17] = v12;
      v17[18] = v12;
      v17[15] = v12;
      v17[16] = v12;
      v17[13] = v12;
      v17[14] = v12;
      v17[11] = v12;
      v17[12] = v12;
      v17[9] = v12;
      v17[10] = v12;
      v17[7] = v12;
      v17[8] = v12;
      v17[5] = v12;
      v17[6] = v12;
      v17[3] = v12;
      v17[4] = v12;
      v17[1] = v12;
      v17[2] = v12;
      v17[0] = v12;
      unint64_t v15 = a1;
      unint64_t v16 = a2;
      uint64_t result = X509CertificateParse((unint64_t *)v17, &v15);
      if (result) {
        break;
      }
      a1 = v15;
      a2 = v16;
      if (v15 > v16 || (unint64_t)v10 >= v11 || v10 < a3) {
        __break(0x5519u);
      }
      *unint64_t v10 = v17[0];
      uint64_t v6 = v8 + 1;
      if (a1 < a2)
      {
        ++v10;
        if (v9 != v8++) {
          continue;
        }
      }
      goto LABEL_11;
    }
  }
  else
  {
LABEL_11:
    uint64_t result = 0;
    if (a5) {
      *a5 = v6;
    }
  }
  return result;
}

uint64_t CTParseExtensionValue(unint64_t a1, uint64_t a2, const void *a3, size_t a4, void *a5, void *a6)
{
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  memset(v11, 0, sizeof(v11));
  if (__CFADD__(a1, a2))
  {
    __break(0x5513u);
LABEL_11:
    __break(0x5519u);
  }
  if (a1 + a2 < a1) {
    goto LABEL_11;
  }
  v10[0] = a1;
  v10[1] = a1 + a2;
  uint64_t result = X509CertificateParseWithExtension((unint64_t *)v11, v10, a3, a4);
  if (!result)
  {
    uint64_t result = 720914;
    if (*((void *)&v12 + 1))
    {
      uint64_t v9 = v13;
      if ((void)v13)
      {
        uint64_t result = 0;
        if (a5)
        {
          if (a6)
          {
            uint64_t result = 0;
            *a5 = *((void *)&v12 + 1);
            *a6 = v9;
          }
        }
      }
    }
  }
  return result;
}

uint64_t CTParseKey(unint64_t a1, uint64_t a2, void *a3, void *a4)
{
  memset(v8, 0, sizeof(v8));
  if (__CFADD__(a1, a2))
  {
    __break(0x5513u);
LABEL_7:
    __break(0x5519u);
  }
  if (a1 + a2 < a1) {
    goto LABEL_7;
  }
  v7[0] = a1;
  v7[1] = a1 + a2;
  uint64_t result = X509CertificateParse((unint64_t *)v8, v7);
  if (!result) {
    return X509CertificateParseKey((uint64_t)v8, a3, a4);
  }
  return result;
}

uint64_t CTEvaluateSavageCertsWithUID(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, void *a6, unsigned char *a7, uint64_t a8, BOOL *a9)
{
  return CTEvaluateCertifiedChip(a1, a2, a3, a4, a5, a6, a7, a8, 0, 0, a9, (uint64_t)&X509PolicySavage, 2);
}

uint64_t CTEvaluateCertifiedChip(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, void *a6, unsigned char *a7, uint64_t a8, const void *a9, size_t a10, BOOL *a11, uint64_t a12, uint64_t a13)
{
  uint64_t result = (uint64_t)memset(__b, 170, sizeof(__b));
  memset(v33, 170, sizeof(v33));
  unint64_t v31 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v32 = 0;
  unint64_t v30 = 0xAAAAAAAAAAAAAAAALL;
  if (__CFADD__(a1, a2)) {
    goto LABEL_34;
  }
  if (a1 + a2 < a1) {
    goto LABEL_35;
  }
  unint64_t v30 = a1;
  unint64_t v31 = a1 + a2;
  uint64_t result = (uint64_t)X509ChainParseCertificateSet(&v30, (unint64_t)__b, 4, &v33[2], &v32);
  if (result) {
    return result;
  }
  uint64_t result = 327690;
  if (v30 != v31) {
    return result;
  }
  if (v32 != 2) {
    return 327692;
  }
  X509ChainResetChain(v33, &v33[2]);
  __b[74] = v33[0];
  long long v22 = v33[0] ? (uint64_t *)(v33[0] + 296) : &v33[1];
  *long long v22 = (uint64_t)&__b[74];
  if ((void *)((char *)&__b[38] + 1) != 0 && (unint64_t)__b >= 0xFFFFFFFFFFFFFECFLL) {
LABEL_34:
  }
    __break(0x5513u);
  v33[0] = (uint64_t)&__b[38];
  __b[75] = v33;
  __b[36] = 0;
  __b[37] = v33[1];
  *(void *)v33[1] = __b;
  v33[1] = (uint64_t)&__b[36];
  uint64_t result = X509ChainCheckPathWithOptions(12, v33, a12, 0);
  if (result) {
    return result;
  }
  uint64_t v23 = **(void **)(v33[1] + 8);
  uint64_t v28 = 0xAAAAAAAAAAAAAAAALL;
  unint64_t v29 = 0xAAAAAAAAAAAAAAAALL;
  if ((a4 & 0x8000000000000000) != 0) {
    goto LABEL_35;
  }
  uint64_t v28 = a3;
  unint64_t v29 = a4;
  long long v24 = oidForPubKeyLength();
  uint64_t result = X509CertificateCheckSignatureWithPublicKey(&v28, (uint64_t)&ecPublicKey, (uint64_t)v24, v23 + 16, v23 + 40);
  if (result) {
    return result;
  }
  if (a9 && a10)
  {
    if ((a10 & 0x8000000000000000) != 0) {
      goto LABEL_35;
    }
    if (compare_octet_string_raw(v23 + 248, a9, a10)) {
      return 590085;
    }
  }
  unint64_t v25 = v33[0];
  LODWORD(result) = X509CertificateParseKey(v33[0], a5, a6);
  int v26 = result;
  if (result) {
    uint64_t result = result;
  }
  else {
    uint64_t result = 327691;
  }
  if (!v25 || v26) {
    return result;
  }
  if (a11) {
    *a11 = (*(void *)(v25 + 240) & a13) != 0;
  }
  if (!a7 || !a8) {
    return 0;
  }
  v27[0] = 0;
  v27[1] = 0;
  if (v25 >= v25 + 304) {
    goto LABEL_35;
  }
  uint64_t result = X509CertificateSubjectNameGetCommonName((unint64_t *)(v25 + 104), v27);
  if (result) {
    return result;
  }
  if (a8 < 0)
  {
LABEL_35:
    __break(0x5519u);
    return result;
  }
  uint64_t result = CTCopyUID((uint64_t)v27, a7, a8);
  if (!result) {
    return 0;
  }
  return result;
}

uint64_t CTEvaluateSavageCerts(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, void *a6, BOOL *a7)
{
  return CTEvaluateCertifiedChip(a1, a2, a3, a4, a5, a6, 0, 0, 0, 0, a7, (uint64_t)&X509PolicySavage, 2);
}

uint64_t CTEvaluateYonkersCerts(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, void *a6, unsigned char *a7, uint64_t a8, BOOL *a9)
{
  return CTEvaluateCertifiedChip(a1, a2, a3, a4, a5, a6, a7, a8, 0, 0, a9, (uint64_t)&X509PolicyYonkers, 0x80000);
}

uint64_t CTEvaluateSensorCerts(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, const void *a5, size_t a6, void *a7, void *a8, unsigned char *a9, uint64_t a10, BOOL *a11)
{
  return CTEvaluateCertifiedChip(a1, a2, a3, a4, a7, a8, a9, a10, a5, a6, a11, (uint64_t)&X509PolicySensor, 0x10000000000);
}

uint64_t CTEvaluateCertsForPolicy(unint64_t a1, uint64_t a2, char a3, int a4, void *a5, void *a6, uint64_t a7, uint64_t a8, void *a9, void *a10, long long *a11)
{
  memset(v38, 170, sizeof(v38));
  bzero(v39, 0x4C0uLL);
  if (__CFADD__(a1, a2))
  {
    __break(0x5513u);
LABEL_42:
    __break(0x5519u);
  }
  if (a1 + a2 < a1) {
    goto LABEL_42;
  }
  uint64_t v36 = a1 + a2;
  unint64_t v37 = 0xAAAAAAAAAAAAAAAALL;
  unint64_t v35 = a1;
  uint64_t result = (uint64_t)X509ChainParseCertificateSet(&v35, (unint64_t)v39, 4, &v38[2], &v37);
  if (result) {
    return result;
  }
  if (v35 != v36) {
    return 327690;
  }
  if ((a4 & 1) == 0 && !v40)
  {
    X509ChainResetChain(v38, &v38[2]);
    uint64_t v20 = v38[0];
    long long v21 = (uint64_t *)(v38[0] + 296);
    if (!v38[0]) {
      long long v21 = &v38[1];
    }
    *long long v21 = (uint64_t)v41;
    v38[0] = (uint64_t)v39;
    v41[0] = v20;
    v41[1] = v38;
LABEL_20:
    v34[0] = a7;
    v34[1] = a8;
    if (a7) {
      BOOL v23 = a8 == 0;
    }
    else {
      BOOL v23 = 1;
    }
    *(void *)&long long v24 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v24 + 1) = 0xAAAAAAAAAAAAAAAALL;
    *(_OWORD *)uint64_t v32 = v24;
    *(_OWORD *)&v32[16] = v24;
    long long v31 = *a11;
    v32[0] = *((unsigned char *)a11 + 16);
    if (v23) {
      char v25 = a3;
    }
    else {
      char v25 = 1;
    }
    v32[1] = v25;
    *(_WORD *)&v32[2] = *((_WORD *)a11 + 9);
    if (v23)
    {
      *(_OWORD *)&v32[8] = *(long long *)((char *)a11 + 24);
      long long v27 = (_UNKNOWN **)*((void *)a11 + 5);
    }
    else
    {
      uint64_t v26 = *((void *)a11 + 4);
      *(void *)&v32[8] = v34;
      *(void *)&v32[16] = v26;
      long long v27 = oidForPubKeyLength();
    }
    uint64_t v28 = *((void *)a11 + 6);
    *(void *)&v32[24] = v27;
    uint64_t v33 = v28;
    uint64_t result = X509ChainCheckPathWithOptions(12, v38, (uint64_t)&v31, 0);
    if (!result)
    {
      unint64_t v29 = (void *)v38[0];
      if (!a5 || !a6 || !v38[0] || (uint64_t result = X509CertificateParseKey(v38[0], a5, a6), !result))
      {
        if (a10 && v29)
        {
          uint64_t v30 = v29[32];
          *a10 = v29[31];
          a10[1] = v30;
        }
        uint64_t result = 0;
        if (a9)
        {
          if (v29)
          {
            uint64_t result = 0;
            *a9 = v29[30];
          }
        }
      }
    }
    return result;
  }
  if (v39[265])
  {
    if (v38[2])
    {
      long long v22 = (unsigned char *)v38[2];
      while (v22[265])
      {
        long long v22 = (unsigned char *)*((void *)v22 + 34);
        if (!v22)
        {
          long long v22 = (unsigned char *)v38[2];
          break;
        }
      }
    }
    else
    {
      long long v22 = 0;
    }
  }
  else
  {
    long long v22 = v39;
  }
  uint64_t result = X509ChainBuildPathPartial(v22, &v38[2], v38, a4 ^ 1u);
  if (!result) {
    goto LABEL_20;
  }
  return result;
}

uint64_t CTEvaluateSatori(unint64_t a1, uint64_t a2, char a3, void *a4, void *a5)
{
  return CTEvaluateCertsForPolicy(a1, a2, a3, 1, a4, a5, 0, 0, 0, 0, &X509PolicySatori);
}

uint64_t CTEvaluateAcrt(unint64_t a1, uint64_t a2, void *a3, void *a4)
{
  return CTEvaluateCertsForPolicy(a1, a2, 0, 0, a3, a4, 0, 0, 0, 0, &X509PolicyACRT);
}

uint64_t CTEvaluateUcrt(unint64_t a1, uint64_t a2, void *a3, void *a4)
{
  return CTEvaluateCertsForPolicy(a1, a2, 0, 1, a3, a4, 0, 0, 0, 0, &X509PolicyUcrt);
}

uint64_t CTEvaluateUcrtTestRoot(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  return CTEvaluateCertsForPolicy(a1, a2, 1, 1, a5, a6, a3, a4, 0, 0, &X509PolicyUcrt);
}

uint64_t CTEvaluatePragueSignatureCMS(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, void *a7)
{
  unint64_t v9 = 0xAAAAAAAA0000AA01;
  long long v8 = xmmword_10024C7F0;
  BYTE1(v9) = a5;
  long long v10 = 0u;
  long long v11 = 0u;
  return CMSVerifySignedDataWithLeaf(a1, a2, a3, a4, (uint64_t)&v8, a6, a7);
}

uint64_t CTEvaluateKDLSignatureCMS(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, void *a7)
{
  unint64_t v9 = 0xAAAAAAAA0000AA01;
  long long v8 = xmmword_10024C800;
  BYTE1(v9) = a5;
  long long v10 = 0u;
  long long v11 = 0u;
  return CMSVerifySignedDataWithLeaf(a1, a2, a3, a4, (uint64_t)&v8, a6, a7);
}

uint64_t CTVerifyAppleMarkerExtension(void *a1, uint64_t a2)
{
  uint64_t result = 327700;
  unint64_t v4 = a1[31];
  unint64_t v5 = a1[32];
  if (v4) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6) {
    return 327707;
  }
  uint64_t v7 = a1[30];
  if ((v7 & 0x100000000) == 0)
  {
    if ((v7 & 0x200000000) == 0) {
      return result;
    }
    if (!__CFADD__(v4, v5))
    {
      unint64_t v11 = v4 + v5;
      if (v4 + v5 != -1)
      {
        if (v5 > 0x13) {
          return 327704;
        }
        unint64_t v16 = (unsigned __int8 *)(v11 - 1);
        if (v11 - 1 >= v4)
        {
          uint64_t v10 = 0;
          uint64_t v17 = 0;
          while ((unint64_t)v16 < v11)
          {
            int v18 = *v16;
            if ((v18 - 58) < 0xFFFFFFF6) {
              return 327705;
            }
            if (v17 == 20) {
              break;
            }
            if ((v17 & 0x1FFFFFFFFFFFFFFFLL) == 0x14) {
              goto LABEL_39;
            }
            unint64_t v19 = (v18 - 48);
            unint64_t v20 = powersOfTen[v17];
            if (!is_mul_ok(v19, v20)) {
              goto LABEL_40;
            }
            unint64_t v21 = v19 * v20;
            BOOL v15 = __CFADD__(v10, v21);
            v10 += v21;
            if (v15) {
              goto LABEL_38;
            }
            ++v17;
            if ((unint64_t)--v16 < v4) {
              goto LABEL_23;
            }
          }
LABEL_37:
          __break(0x5519u);
LABEL_38:
          __break(0x5500u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(0x550Cu);
          goto LABEL_41;
        }
        goto LABEL_13;
      }
    }
LABEL_41:
    __break(0x5513u);
    return result;
  }
  if (__CFADD__(v4, v5)) {
    goto LABEL_41;
  }
  unint64_t v8 = v4 + v5;
  if (v4 + v5 == -1) {
    goto LABEL_41;
  }
  unint64_t v9 = (unsigned char *)(v8 - 1);
  if (v8 - 1 >= v4)
  {
    char v12 = 0;
    unint64_t v13 = 0;
    uint64_t v10 = 0;
    while ((unint64_t)v9 < v8)
    {
      unint64_t v14 = (unint64_t)(*v9 & 0x7F) << v12;
      BOOL v15 = __CFADD__(v10, v14);
      v10 += v14;
      if (v15) {
        goto LABEL_38;
      }
      if (v13 <= 7)
      {
        ++v13;
        --v9;
        v12 += 7;
        if ((unint64_t)v9 >= v4) {
          continue;
        }
      }
      goto LABEL_23;
    }
    goto LABEL_37;
  }
LABEL_13:
  uint64_t v10 = 0;
LABEL_23:
  if (v10 == a2) {
    return 0;
  }
  else {
    return 589829;
  }
}

uint64_t CTVerifyHostname(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = 327702;
  if (*(void *)(a1 + 232) && *(void *)(a1 + 224))
  {
    v7[1] = a3;
    unint64_t v8 = 0xAAAAAAAAAAAAAA00;
    v7[0] = a2;
    unsigned int v4 = X509CertificateParseGeneralNamesContent(a1, (uint64_t (*)(void, int *, uint64_t))CTCompareGeneralNameToHostname, (uint64_t)v7);
    if ((_BYTE)v8) {
      unsigned int v5 = 0;
    }
    else {
      unsigned int v5 = 327706;
    }
    if (v4) {
      return v4;
    }
    else {
      return v5;
    }
  }
  return v3;
}

uint64_t CTCompareGeneralNameToHostname(uint64_t result, void *a2, unint64_t a3)
{
  if (result != 2) {
    return 1;
  }
  unsigned int v4 = *(char **)a3;
  size_t v5 = *(void *)(a3 + 8);
  size_t v6 = ~*(void *)a3;
  if (v5 > v6) {
    goto LABEL_50;
  }
  uint64_t v7 = &v4[v5];
  if (&v4[v5] == (char *)-1) {
    goto LABEL_50;
  }
  unint64_t v8 = v7 - 1;
  if (v7) {
    BOOL v9 = v8 >= v4;
  }
  else {
    BOOL v9 = 0;
  }
  if (!v9 || a3 + 24 < a3) {
    goto LABEL_49;
  }
  int v11 = *v8;
  uint64_t result = compare_octet_string((uint64_t)a2, a3);
  if (!result) {
    goto LABEL_48;
  }
  if (v11 != 46) {
    goto LABEL_15;
  }
  size_t v12 = v5 - 1;
  if (v5)
  {
    if (v12 <= v5)
    {
      uint64_t result = compare_octet_string_raw((uint64_t)a2, v4, v12);
      if (result)
      {
LABEL_15:
        unint64_t v13 = a2[1];
        if (v13 < 3) {
          return 1;
        }
        unint64_t v14 = (unsigned char *)*a2;
        if (*(unsigned char *)*a2 != 42) {
          return 1;
        }
        if (v14 != (unsigned char *)-1)
        {
          BOOL v15 = v14 + 1;
          if (v14[1] == 46)
          {
            uint64_t v16 = -2;
            if ((unint64_t)v14 < 0xFFFFFFFFFFFFFFFELL) {
              uint64_t v16 = (uint64_t)v14;
            }
            uint64_t v17 = -v16;
            uint64_t v18 = 2;
            uint64_t result = 1;
            while (v17 != v18)
            {
              if (&v14[v18] < v14) {
                goto LABEL_49;
              }
              if (v14[v18] == 46)
              {
                if (v13 == v18) {
                  return 1;
                }
                size_t v19 = 0;
                if (v5)
                {
                  while (1)
                  {
                    unint64_t v20 = &v4[v19];
                    if (&v4[v19] >= v7 || v20 < v4) {
                      goto LABEL_49;
                    }
                    if (*v20 == 46) {
                      break;
                    }
                    if (v5 == ++v19)
                    {
                      size_t v19 = v5;
                      break;
                    }
                  }
                }
                size_t v22 = v13 - 1;
                BOOL v9 = v5 >= v19;
                size_t v23 = v5 - v19;
                if (!v9) {
                  goto LABEL_51;
                }
                if (v22 == v23)
                {
                  if (v19 > v6) {
                    goto LABEL_50;
                  }
                  uint64_t result = memcmp(v15, &v4[v19], v13 - 1);
                  if (!result) {
                    goto LABEL_48;
                  }
                }
                if (v11 != 46) {
                  return 1;
                }
                if (!v23) {
                  goto LABEL_51;
                }
                if (v22 != v23 - 1) {
                  return 1;
                }
                if (v19 <= v6)
                {
                  if (!memcmp(v15, &v4[v19], v22)) {
                    goto LABEL_48;
                  }
                  return 1;
                }
                goto LABEL_50;
              }
              if (v13 == ++v18) {
                return result;
              }
            }
            goto LABEL_50;
          }
          return 1;
        }
LABEL_50:
        __break(0x5513u);
        goto LABEL_51;
      }
LABEL_48:
      uint64_t result = 0;
      *(unsigned char *)(a3 + 16) = 1;
      return result;
    }
LABEL_49:
    __break(0x5519u);
    goto LABEL_50;
  }
LABEL_51:
  __break(0x5515u);
  return result;
}

uint64_t CTEvaluateAppleSSLWithOptionalTemporalCheck(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  unint64_t v20 = 0xAAAAAAAA00AAAA01;
  unint64_t v21 = &null_octet;
  long long v19 = xmmword_10024C810;
  BYTE1(v20) = a6;
  BYTE2(v20) = a7;
  size_t v22 = &null_octet;
  size_t v23 = &null_octet;
  long long v24 = &CTOctetServerAuthEKU;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t result = CTEvaluateCertsForPolicy(a1, a2, a6, 1, &v17, &v18, 0, 0, 0, 0, &v19);
  if (!result)
  {
    *(void *)&long long v13 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v13 + 1) = 0xAAAAAAAAAAAAAAAALL;
    v16[17] = v13;
    v16[18] = v13;
    v16[15] = v13;
    v16[16] = v13;
    v16[13] = v13;
    v16[14] = v13;
    v16[11] = v13;
    v16[12] = v13;
    v16[9] = v13;
    v16[10] = v13;
    v16[7] = v13;
    v16[8] = v13;
    v16[6] = v13;
    v16[4] = v13;
    v16[5] = v13;
    unint64_t v16[2] = v13;
    v16[3] = v13;
    v16[0] = v13;
    v16[1] = v13;
    memset(v15, 170, sizeof(v15));
    if (__CFADD__(a1, a2))
    {
      __break(0x5513u);
    }
    else
    {
      v14[0] = a1;
      v14[1] = a1 + a2;
      uint64_t result = (uint64_t)X509ChainParseCertificateSet(v14, (unint64_t)v16, 1, &v15[1], v15);
      if (!result)
      {
        uint64_t result = CTVerifyAppleMarkerExtension(v16, a5);
        if (!result) {
          return CTVerifyHostname((uint64_t)v16, a3, a4);
        }
      }
    }
  }
  return result;
}

uint64_t CTEvaluateAppleSSL(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return CTEvaluateAppleSSLWithOptionalTemporalCheck(a1, a2, a3, a4, a5, a6, 1);
}

uint64_t CTGetSEKType(unint64_t a1, uint64_t a2)
{
  memset(v4, 0, sizeof(v4));
  if (__CFADD__(a1, a2))
  {
    __break(0x5513u);
LABEL_10:
    __break(0x5519u);
  }
  if (a1 + a2 < a1) {
    goto LABEL_10;
  }
  v3[0] = a1;
  v3[1] = a1 + a2;
  if (X509CertificateParse((unint64_t *)v4, v3)) {
    return 0;
  }
  if (compare_octet_string((uint64_t)&v4[10] + 8, (uint64_t)&SEKTestRootSKID)) {
    return compare_octet_string((uint64_t)&v4[10] + 8, (uint64_t)&SEKProdRootSKID) == 0;
  }
  return 2;
}

uint64_t CTEvaluateSEK(char a1, unint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t result = 327712;
  if ((a1 & 3) != 0)
  {
    if ((a1 & 1) == 0
      || (uint64_t result = CTEvaluateCertsForPolicy(a2, a3, 0, 1, a4, a5, 0, 0, 0, 0, &X509PolicySEK), result))
    {
      if ((a1 & 2) != 0) {
        return CTEvaluateCertsForPolicy(a2, a3, 0, 1, a4, a5, (uint64_t)&_sek_test_root_public_key, 97, 0, 0, &X509PolicySEK);
      }
    }
  }
  return result;
}

uint64_t CTCopyUID(uint64_t result, unsigned char *a2, uint64_t a3)
{
  unint64_t v5 = *(void *)result;
  uint64_t v4 = *(void *)(result + 8);
  if (__CFADD__(*(void *)result, v4)) {
    goto LABEL_31;
  }
  unint64_t v6 = v5 + v4;
  uint64_t v7 = *(unsigned __int8 **)result;
  if (v5 < v6)
  {
    while ((unint64_t)v7 >= v5)
    {
      int v3 = *v7;
      if (v3 != 45 && (unint64_t)++v7 < v6) {
        continue;
      }
      goto LABEL_6;
    }
    goto LABEL_34;
  }
LABEL_6:
  if (v7 == (unsigned __int8 *)-1) {
    goto LABEL_31;
  }
  unint64_t v8 = v7 + 1;
  int v3 = 327693;
  uint64_t result = 327693;
  if ((unint64_t)(v7 + 1) >= v6) {
    return result;
  }
  if (a3 < 0 || v5 > (unint64_t)v8)
  {
LABEL_34:
    __break(0x5519u);
    return result;
  }
  if (__CFADD__(v8, v6 - (void)v8)) {
    goto LABEL_31;
  }
  if (v6 - (void)v8 != 2 * a3) {
    return (v3 + 1);
  }
  if (__CFADD__(a2, a3) || v7 == (unsigned __int8 *)-2)
  {
LABEL_31:
    __break(0x5513u);
    return (v3 + 1);
  }
  BOOL v9 = v7 + 2;
  uint64_t v10 = a2;
  while (1)
  {
    uint64_t result = 0;
    if ((unint64_t)v9 >= v6 || v10 >= &a2[a3]) {
      return result;
    }
    int v11 = v9 - 1;
    if ((unint64_t)(v9 - 1) >= v6 || v11 < v8) {
      goto LABEL_34;
    }
    size_t v12 = &asciiNibbleToByte[*v11];
    uint64_t result = (uint64_t)&CTOidAppleImg4Manifest;
    if (v12 >= (unsigned __int8 *)&CTOidAppleImg4Manifest || v12 < asciiNibbleToByte) {
      goto LABEL_34;
    }
    if (v11 < v7) {
      goto LABEL_34;
    }
    unint64_t v14 = &asciiNibbleToByte[*v9];
    uint64_t result = (uint64_t)&CTOidAppleImg4Manifest;
    if (v14 >= (unsigned __int8 *)&CTOidAppleImg4Manifest || v14 < asciiNibbleToByte) {
      goto LABEL_34;
    }
    unsigned int v15 = *v12;
    uint64_t result = 327695;
    if (v15 > 0xF) {
      return result;
    }
    unsigned int v16 = *v14;
    if (v16 > 0xF) {
      return result;
    }
    if (v10 < a2) {
      goto LABEL_34;
    }
    *v10++ = v16 | (16 * v15);
    v9 += 2;
    if (!v9) {
      goto LABEL_31;
    }
  }
}

uint64_t X509CertificateParseImplicit(uint64_t a1, unint64_t *a2, const void *a3, size_t a4)
{
  unint64_t v68 = 0;
  uint64_t v69 = 0;
  unint64_t v66 = 0xAAAAAAAAAAAAAAAALL;
  unint64_t v67 = 0xAAAAAAAAAAAAAAAALL;
  unint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  if (*a2 > v5) {
    goto LABEL_186;
  }
  uint64_t v10 = 720915;
  unint64_t v66 = *a2;
  unint64_t v67 = v5;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  uint64_t result = ccder_blob_decode_tl();
  if (!result) {
    return v10;
  }
  uint64_t v12 = v69;
  unint64_t v13 = v66;
  unint64_t v14 = v69 + v66 - v4;
  if (__CFADD__(v69, v66 - v4)) {
    goto LABEL_188;
  }
  if (v14 > v5 - v4) {
    goto LABEL_186;
  }
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v14;
  unint64_t v64 = 0xAAAAAAAAAAAAAAAALL;
  unint64_t v65 = 0xAAAAAAAAAAAAAAAALL;
  if (__CFADD__(v13, v12)) {
    goto LABEL_187;
  }
  unint64_t v15 = v13 + v12;
  if (v13 > v15 || v15 > v67) {
    goto LABEL_186;
  }
  unint64_t v64 = v13;
  unint64_t v65 = v15;
  unint64_t v62 = v13;
  unint64_t v63 = v15;
  if (ccder_blob_decode_tl())
  {
    if (__CFADD__(v62, v68)) {
      goto LABEL_187;
    }
    uint64_t v16 = 720916;
    if (ccder_blob_decode_uint64() && v62 == v62 + v68)
    {
      if (v62 + v68 > v63) {
        goto LABEL_186;
      }
      unint64_t v64 = v62 + v68;
      unint64_t v65 = v63;
      goto LABEL_14;
    }
    return v16;
  }
LABEL_14:
  if (!ccder_blob_decode_tl()) {
    return 720917;
  }
  unint64_t v18 = v64;
  unint64_t v17 = v65;
  if (v65 < v64) {
    goto LABEL_186;
  }
  unint64_t v19 = v68;
  if (v68 > v65 - v64) {
    goto LABEL_186;
  }
  *(void *)(a1 + 136) = v64;
  *(void *)(a1 + 144) = v19;
  if (__CFADD__(v18, v19)) {
    goto LABEL_187;
  }
  unint64_t v20 = v18 + v19;
  if (v18 > v20 || v20 > v17) {
    goto LABEL_186;
  }
  unint64_t v64 = v20;
  if (!ccder_blob_decode_AlgorithmIdentifierNULL(&v64, (unint64_t *)(a1 + 152))) {
    return 720918;
  }
  if (!ccder_blob_decode_tl()) {
    return 720919;
  }
  unint64_t v22 = v64;
  unint64_t v21 = v65;
  if (v65 < v64) {
    goto LABEL_186;
  }
  unint64_t v23 = v68;
  if (v68 > v65 - v64) {
    goto LABEL_186;
  }
  *(void *)(a1 + 120) = v64;
  *(void *)(a1 + 128) = v23;
  if (__CFADD__(v22, v23)) {
    goto LABEL_187;
  }
  unint64_t v24 = v22 + v23;
  if (v22 > v24 || v24 > v21) {
    goto LABEL_186;
  }
  unint64_t v64 = v24;
  if (!ccder_blob_decode_tl()) {
    return 720920;
  }
  unint64_t v26 = v64;
  unint64_t v25 = v65;
  if (v65 < v64) {
    goto LABEL_186;
  }
  unint64_t v27 = v68;
  if (v68 > v65 - v64) {
    goto LABEL_186;
  }
  *(void *)(a1 + 72) = v64;
  *(void *)(a1 + 80) = v27;
  if (__CFADD__(v26, v27)) {
    goto LABEL_187;
  }
  unint64_t v28 = v26 + v27;
  if (v26 > v28 || v28 > v25) {
    goto LABEL_186;
  }
  unint64_t v64 = v28;
  if (!ccder_blob_decode_tl()) {
    return 720921;
  }
  unint64_t v29 = v64;
  unint64_t v30 = v65;
  if (v65 < v64) {
    goto LABEL_186;
  }
  unint64_t v31 = v68;
  if (v68 > v65 - v64) {
    goto LABEL_186;
  }
  *(void *)(a1 + 104) = v64;
  *(void *)(a1 + 112) = v31;
  if (__CFADD__(v29, v31)) {
    goto LABEL_187;
  }
  unint64_t v32 = v29 + v31;
  if (v29 > v29 + v31 || v32 > v30) {
    goto LABEL_186;
  }
  unint64_t v64 = v29 + v31;
  uint64_t result = ccder_blob_decode_tl();
  if (!result) {
    return 720922;
  }
  unint64_t v33 = v64;
  unint64_t v34 = v68;
  unint64_t v35 = v64 - v32 + v68;
  if (!__CFADD__(v64 - v32, v68))
  {
    if (v35 > v30 - v32) {
      goto LABEL_186;
    }
    *(void *)(a1 + 88) = v32;
    *(void *)(a1 + 96) = v35;
    if (__CFADD__(v33, v34)) {
      goto LABEL_187;
    }
    unint64_t v36 = v33 + v34;
    if (v33 > v36 || v36 > v65) {
      goto LABEL_186;
    }
    unint64_t v63 = v65;
    unint64_t v64 = v36;
    unint64_t v62 = v36;
    if (ccder_blob_decode_tl()) {
      return 720923;
    }
    if (v64 > v65) {
      goto LABEL_186;
    }
    unint64_t v62 = v64;
    unint64_t v63 = v65;
    if (ccder_blob_decode_tl()) {
      return 720924;
    }
    if (v64 > v65) {
      goto LABEL_186;
    }
    unint64_t v62 = v64;
    unint64_t v63 = v65;
    if (ccder_blob_decode_tl())
    {
      unint64_t v60 = 0xAAAAAAAAAAAAAAAALL;
      unint64_t v61 = 0xAAAAAAAAAAAAAAAALL;
      if (__CFADD__(v62, v68)) {
        goto LABEL_187;
      }
      if (v62 > v62 + v68 || v62 + v68 > v63) {
        goto LABEL_186;
      }
      unint64_t v60 = v62;
      unint64_t v61 = v62 + v68;
      if (!ccder_blob_decode_tl() || !v68) {
        return 720925;
      }
      unint64_t v37 = v60;
      if (__CFADD__(v60, v68)) {
LABEL_187:
      }
        __break(0x5513u);
      unint64_t v38 = v60 + v68;
      if (v60 > v60 + v68 || v38 > v61) {
        goto LABEL_186;
      }
      unint64_t v61 = v60 + v68;
      *(unsigned char *)(a1 + 266) = 0;
      memset(&v70[2], 0, 128);
      if (a3) {
        BOOL v39 = a4 == 0;
      }
      else {
        BOOL v39 = 1;
      }
      int v40 = !v39;
      memset(v70, 0, 32);
      if (v37 < v38)
      {
        unsigned __int8 v53 = 0;
        int v41 = 0;
        do
        {
          unint64_t v58 = 0xAAAAAAAAAAAAAAAALL;
          unint64_t v59 = 0xAAAAAAAAAAAAAAAALL;
          char v57 = 0;
          uint64_t v56 = 0;
          if ((ccder_blob_decode_tl() & 1) == 0) {
            return 720926;
          }
          unint64_t v54 = 0xAAAAAAAAAAAAAAAALL;
          unint64_t v55 = 0xAAAAAAAAAAAAAAAALL;
          if (__CFADD__(v60, v56)) {
            goto LABEL_187;
          }
          if (v60 > v60 + v56 || v60 + v56 > v61) {
            goto LABEL_186;
          }
          unint64_t v54 = v60;
          unint64_t v55 = v60 + v56;
          if (!ccder_blob_decode_tl()) {
            return 720927;
          }
          if (v55 < v54 || v68 > v55 - v54) {
            goto LABEL_186;
          }
          unint64_t v58 = v54;
          unint64_t v59 = v68;
          if (__CFADD__(v54, v68)) {
            goto LABEL_187;
          }
          if (v54 > v54 + v68 || v54 + v68 > v55) {
            goto LABEL_186;
          }
          v54 += v68;
          if (!der_get_BOOLean(&v54, 1, &v57)) {
            return 720928;
          }
          if (!ccder_blob_decode_tl()) {
            return 720929;
          }
          if (__CFADD__(v54, v68)) {
            goto LABEL_187;
          }
          if (v55 != v54 + v68) {
            return 720929;
          }
          if (v40 && !compare_octet_string_raw((uint64_t)&v58, a3, a4))
          {
            if (v55 < v54) {
              goto LABEL_186;
            }
            unint64_t v43 = v68;
            if (v68 > v55 - v54) {
              goto LABEL_186;
            }
            *(void *)(a1 + 248) = v54;
            *(void *)(a1 + 256) = v43;
          }
          if (v59 == 3)
          {
            if (*(_WORD *)v58 == 7509 && *(unsigned char *)(v58 + 2) == 15)
            {
              uint64_t v16 = 720930;
              if ((v41 & 1) != 0 || (X509ExtensionParseKeyUsage() & 1) == 0) {
                return v16;
              }
              v41 |= 1u;
              goto LABEL_155;
            }
            if (*(_WORD *)v58 == 7509 && *(unsigned char *)(v58 + 2) == 19)
            {
              uint64_t v16 = 720931;
              if ((v41 & 2) != 0
                || (X509ExtensionParseBasicConstraints(&v54, (void *)(a1 + 200), (unsigned char *)(a1 + 265)) & 1) == 0)
              {
                return v16;
              }
              v41 |= 2u;
              goto LABEL_155;
            }
            if (*(_WORD *)v58 == 7509 && *(unsigned char *)(v58 + 2) == 35)
            {
              uint64_t v16 = 720932;
              if ((v41 & 4) != 0
                || (X509ExtensionParseAuthorityKeyIdentifier(&v54, (unint64_t *)(a1 + 168), (void *)(a1 + 176)) & 1) == 0)
              {
                return v16;
              }
              v41 |= 4u;
              goto LABEL_155;
            }
            if (*(_WORD *)v58 == 7509 && *(unsigned char *)(v58 + 2) == 14)
            {
              uint64_t v16 = 720933;
              if ((v41 & 8) != 0
                || (X509ExtensionParseSubjectKeyIdentifier(&v54, (unint64_t *)(a1 + 184), (void *)(a1 + 192)) & 1) == 0)
              {
                return v16;
              }
              v41 |= 8u;
              goto LABEL_155;
            }
            if (*(_WORD *)v58 == 7509 && *(unsigned char *)(v58 + 2) == 37)
            {
              uint64_t v16 = 720934;
              if ((v41 & 0x10) != 0
                || (X509ExtensionParseExtendedKeyUsage(&v54, (unint64_t *)(a1 + 208), (void *)(a1 + 216)) & 1) == 0)
              {
                return v16;
              }
              v41 |= 0x10u;
              goto LABEL_155;
            }
            if (*(_WORD *)v58 == 7509 && *(unsigned char *)(v58 + 2) == 17)
            {
              uint64_t v16 = 720935;
              if ((v41 & 0x20) != 0
                || (X509ExtensionParseSubjectAltName(&v54, (unint64_t *)(a1 + 224), (void *)(a1 + 232)) & 1) == 0)
              {
                return v16;
              }
              v41 |= 0x20u;
              goto LABEL_155;
            }
          }
          else if (v59 >= 8 && *(_DWORD *)v58 == -2042067414 && *(_DWORD *)(v58 + 3) == 1684273030)
          {
            uint64_t v16 = 720936;
            if (!X509CertificateVerifyOnlyOneAppleExtension((uint64_t)&v58, (uint64_t)v70, v53)) {
              return v16;
            }
            uint64_t result = X509ExtensionParseAppleExtension((uint64_t)&v54, v58, v59, (uint64_t *)(a1 + 240), (unint64_t *)(a1 + 248), v40);
            if (!result) {
              return v16;
            }
            if (v53 == 0xFF) {
              goto LABEL_189;
            }
            ++v53;
            goto LABEL_155;
          }
          if (__CFADD__(v54, v68)) {
            goto LABEL_187;
          }
          if (v54 > v54 + v68 || v54 + v68 > v55) {
            goto LABEL_186;
          }
          v54 += v68;
          if (v57) {
            *(unsigned char *)(a1 + 266) = 1;
          }
LABEL_155:
          if (v54 != v55) {
            return 720926;
          }
          if (__CFADD__(v60, v56)) {
            goto LABEL_187;
          }
          unint64_t v37 = v60 + v56;
          if (v60 > v60 + v56) {
            goto LABEL_186;
          }
          unint64_t v38 = v61;
          if (v37 > v61) {
            goto LABEL_186;
          }
          v60 += v56;
        }
        while (v37 < v61);
      }
      if (v37 != v38) {
        return 720925;
      }
      if (v37 > v65 || v64 > v37) {
        goto LABEL_186;
      }
      unint64_t v64 = v37;
    }
    if (*(void *)(a1 + 32) < 3uLL)
    {
      uint64_t v16 = 720915;
      if (v64 != v65) {
        return v16;
      }
LABEL_170:
      if (__CFADD__(v66, v69)) {
        goto LABEL_187;
      }
      if (v66 > v66 + v69 || v66 + v69 > v67) {
        goto LABEL_186;
      }
      v66 += v69;
      if (!ccder_blob_decode_AlgorithmIdentifierNULL(&v66, (unint64_t *)(a1 + 40))) {
        return 720937;
      }
      *(void *)&v70[0] = 0xAAAAAAAAAAAAAAAALL;
      *((void *)&v70[0] + 1) = 0xAAAAAAAAAAAAAAAALL;
      unint64_t v60 = 0;
      uint64_t result = ccder_blob_decode_bitstring();
      if (!result) {
        return 720938;
      }
      if (v60 < 0xFFFFFFFFFFFFFFF9)
      {
        if (*((void *)&v70[0] + 1) >= *(void *)&v70[0])
        {
          unint64_t v51 = (v60 + 7) >> 3;
          if (v51 <= *((void *)&v70[0] + 1) - *(void *)&v70[0])
          {
            *(void *)(a1 + 56) = *(void *)&v70[0];
            *(void *)(a1 + 64) = v51;
            unint64_t v52 = v67;
            if (v66 <= v67)
            {
              uint64_t v16 = 0;
              *a2 = v66;
              a2[1] = v52;
              return v16;
            }
          }
        }
        goto LABEL_186;
      }
      goto LABEL_188;
    }
    if (v65 <= a2[1] && *a2 <= v65)
    {
      *a2 = v65;
      goto LABEL_170;
    }
LABEL_186:
    __break(0x5519u);
    goto LABEL_187;
  }
LABEL_188:
  __break(0x5500u);
LABEL_189:
  __break(0x5507u);
  return result;
}

uint64_t der_get_BOOLean(void *a1, int a2, unsigned char *a3)
{
  if (*a1 > a1[1]) {
    __break(0x5519u);
  }
  if ((ccder_blob_decode_tl() & 1) != 0 || !a2) {
    return 0;
  }
  if (a3) {
    *a3 = 0;
  }
  return 1;
}

uint64_t X509ExtensionParseKeyUsage()
{
  uint64_t result = ccder_blob_decode_bitstring();
  if (result) {
    return 0;
  }
  return result;
}

uint64_t X509ExtensionParseBasicConstraints(void *a1, void *a2, unsigned char *a3)
{
  uint64_t result = ccder_blob_decode_tl();
  if (result)
  {
    uint64_t result = der_get_BOOLean(a1, 1, a3);
    if (result)
    {
      if (ccder_blob_decode_uint64())
      {
        if (!*a3) {
          return 0;
        }
        *a2 = 0xAAAAAAAAAAAAAAAALL;
        *a2 = 0xAAAAAAAAAAAAAAABLL;
      }
      return 1;
    }
  }
  return result;
}

uint64_t X509ExtensionParseAuthorityKeyIdentifier(unint64_t *a1, unint64_t *a2, void *a3)
{
  uint64_t result = ccder_blob_decode_tl();
  if (result)
  {
    unint64_t v7 = *a1;
    if (*a1 >= 0x5555555555555556) {
      goto LABEL_15;
    }
    if (v7 - 0x5555555555555556 != a1[1]) {
      return 0;
    }
    if (v7 > v7 - 0x5555555555555556) {
      goto LABEL_16;
    }
    unint64_t v10 = *a1;
    unint64_t v11 = v7 - 0x5555555555555556;
    uint64_t result = ccder_blob_decode_tl();
    if (result)
    {
      if (v11 < v10 || v11 - v10 < 0xAAAAAAAAAAAAAAAALL) {
        goto LABEL_16;
      }
      *a2 = v10;
      *a3 = 0xAAAAAAAAAAAAAAAALL;
    }
    unint64_t v8 = *a1;
    if (*a1 >= 0x5555555555555556)
    {
LABEL_15:
      __break(0x5513u);
    }
    else
    {
      unint64_t v9 = v8 - 0x5555555555555556;
      if (v8 <= v8 - 0x5555555555555556 && v9 <= a1[1])
      {
        *a1 = v9;
        return 1;
      }
    }
LABEL_16:
    __break(0x5519u);
  }
  return result;
}

uint64_t X509ExtensionParseSubjectKeyIdentifier(unint64_t *a1, unint64_t *a2, void *a3)
{
  uint64_t result = ccder_blob_decode_tl();
  if (result)
  {
    unint64_t v7 = a1[1];
    BOOL v8 = v7 >= *a1;
    unint64_t v9 = v7 - *a1;
    if (!v8 || v9 < 0xAAAAAAAAAAAAAAAALL) {
      goto LABEL_13;
    }
    *a2 = *a1;
    *a3 = 0xAAAAAAAAAAAAAAAALL;
    unint64_t v11 = *a1;
    if (*a1 >= 0x5555555555555556)
    {
      __break(0x5513u);
      return result;
    }
    unint64_t v12 = v11 - 0x5555555555555556;
    if (v11 > v11 - 0x5555555555555556 || v12 > a1[1]) {
LABEL_13:
    }
      __break(0x5519u);
    *a1 = v12;
  }
  return result;
}

uint64_t X509ExtensionParseExtendedKeyUsage(unint64_t *a1, unint64_t *a2, void *a3)
{
  int v6 = ccder_blob_decode_tl();
  uint64_t result = 0;
  if (v6)
  {
    if (*a1 > a1[1]) {
      goto LABEL_11;
    }
    unint64_t v10 = *a1;
    unint64_t v11 = a1[1];
    uint64_t result = ccder_blob_decode_tl();
    if (!result) {
      return result;
    }
    if (v11 < v10 || v11 - v10 < 0xAAAAAAAAAAAAAAAALL) {
      goto LABEL_11;
    }
    *a2 = v10;
    *a3 = 0xAAAAAAAAAAAAAAAALL;
    unint64_t v8 = *a1;
    if (*a1 >= 0x5555555555555556)
    {
      __break(0x5513u);
      return result;
    }
    unint64_t v9 = v8 - 0x5555555555555556;
    if (v8 > v8 - 0x5555555555555556 || v9 > a1[1]) {
LABEL_11:
    }
      __break(0x5519u);
    *a1 = v9;
  }
  return result;
}

uint64_t X509ExtensionParseSubjectAltName(unint64_t *a1, unint64_t *a2, void *a3)
{
  uint64_t result = ccder_blob_decode_tl();
  if (result == 1)
  {
    unint64_t v7 = a1[1];
    BOOL v8 = v7 >= *a1;
    unint64_t v9 = v7 - *a1;
    if (!v8 || v9 < 0xAAAAAAAAAAAAAAAALL) {
      goto LABEL_13;
    }
    *a2 = *a1;
    *a3 = 0xAAAAAAAAAAAAAAAALL;
    unint64_t v11 = *a1;
    if (*a1 >= 0x5555555555555556)
    {
      __break(0x5513u);
      return result;
    }
    unint64_t v12 = v11 - 0x5555555555555556;
    if (v11 > v11 - 0x5555555555555556 || v12 > a1[1]) {
LABEL_13:
    }
      __break(0x5519u);
    *a1 = v12;
  }
  return result;
}

uint64_t X509CertificateVerifyOnlyOneAppleExtension(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (a3 > 9) {
    return 0;
  }
  unint64_t v5 = (void *)result;
  unsigned __int8 v6 = 0;
  unint64_t v7 = ~a2;
  while (v7 >= 16 * (char)v6)
  {
    uint64_t result = compare_octet_string((uint64_t)v5, a2 + 16 * v6);
    if (!result) {
      return result;
    }
    if (a3 <= v6++)
    {
      uint64_t v9 = v5[1];
      unint64_t v10 = (void *)(a2 + 16 * a3);
      *unint64_t v10 = *v5;
      v10[1] = v9;
      return 1;
    }
  }
  __break(0x5513u);
  return result;
}

uint64_t X509ExtensionParseAppleExtension(uint64_t result, unint64_t a2, unint64_t a3, uint64_t *a4, unint64_t *a5, int a6)
{
  if (a6) {
    a5 = 0;
  }
  if (a3 == 11)
  {
    if (*(void *)a2 == 0x66463F78648862ALL && *(void *)(a2 + 3) == 0x10901066463F786)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x400000000000;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(void *)(a2 + 3) == 0x10301066463F786)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x200;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(void *)(a2 + 3) == 0x10601066463F786)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x800;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(void *)(a2 + 3) == 0x11801066463F786)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x2000;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(void *)(a2 + 3) == 0x12401066463F786)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x100000000000;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(void *)(a2 + 3) == 0x11901066463F786)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x4000;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(void *)(a2 + 3) == 0x21901066463F786)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x8000;
      goto LABEL_275;
    }
LABEL_159:
    int v44 = 0;
LABEL_160:
    if (*(void *)a2 == 0x66463F78648862ALL && *(unsigned char *)(a2 + 8) == 27)
    {
      return X509ExtensionParseServerAuthMarker(result, a2, a3, a4, a5);
    }
    if (v44)
    {
      if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 832)
      {
        uint64_t result = ccder_blob_check_null();
        if (!result) {
          return result;
        }
        uint64_t v24 = *a4 | 0x400000;
        goto LABEL_275;
      }
      if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 3586)
      {
        uint64_t result = ccder_blob_check_null();
        if (!result) {
          return result;
        }
        uint64_t v54 = *a4;
        uint64_t v55 = 37748736;
        goto LABEL_205;
      }
      if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 4354)
      {
        uint64_t result = ccder_blob_check_null();
        if (!result) {
          return result;
        }
        uint64_t v54 = *a4;
        uint64_t v55 = 0x8004000000;
        goto LABEL_205;
      }
      if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 327)
      {
        return (uint64_t)X509ExtensionParseMFI4Properties((unint64_t *)result, a4, a5);
      }
      if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 3841)
      {
        unint64_t v52 = *(void *)result;
        unint64_t v51 = *(void *)(result + 8);
        if (a5)
        {
          if (v52 > v51) {
            goto LABEL_281;
          }
          *a5 = v52;
          a5[1] = v51 - v52;
        }
        *a4 |= 0x80000000uLL;
LABEL_243:
        if (v52 <= v51)
        {
          *(void *)uint64_t result = v51;
          return 1;
        }
LABEL_281:
        __break(0x5519u);
        return result;
      }
    }
LABEL_242:
    unint64_t v52 = *(void *)result;
    unint64_t v51 = *(void *)(result + 8);
    goto LABEL_243;
  }
  if (a3 == 10)
  {
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 5122)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x100000;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 258)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v54 = *a4;
      uint64_t v55 = 0x58600003F0D0;
LABEL_205:
      uint64_t v24 = v54 | v55;
LABEL_275:
      *a4 = v24;
      return 1;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 1538) {
      goto LABEL_209;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 4610)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0xF00;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 3073)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x10;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 1793)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x20000;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 3329)
    {
LABEL_209:
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x20;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 2305)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x40;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 513)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x80;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 1025)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x10000;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 769)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x100;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 1537)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x400;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 6145)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x1000;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 9217)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x80000000000;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 8193)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x2000000000;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 8705)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x4000000000;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 315)
    {
      return X509ExtensionParseMFISWAuth((unint64_t *)result, a4, a5);
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 3074)
    {
      uint64_t result = ccder_blob_check_null();
      if (!result) {
        return result;
      }
      uint64_t v24 = *a4 | 0x300000000;
      goto LABEL_275;
    }
    if (*(void *)a2 == 0x66463F78648862ALL && *(_WORD *)(a2 + 8) == 304)
    {
      return X509ExtensionParseGenericSSLMarker();
    }
    int v44 = 1;
    goto LABEL_160;
  }
  if (a3 != 9)
  {
    if (a3 < 0xA) {
      goto LABEL_242;
    }
    goto LABEL_159;
  }
  if (*(void *)a2 == 0xB6463F78648862ALL && *(unsigned char *)(a2 + 8) == 1)
  {
    return X509ExtensionParseComponentAuth((unint64_t *)result, a4, a5);
  }
  if (*(void *)a2 == 0x66463F78648862ALL && *(unsigned char *)(a2 + 8) == 49)
  {
    char v56 = 0;
    uint64_t result = der_get_BOOLean((void *)result, 0, &v56);
    if (result)
    {
      uint64_t v53 = 0x10000080002;
      if (!v56) {
        uint64_t v53 = 0x20000040001;
      }
      *a4 |= v53;
    }
    return result;
  }
  if (*(void *)a2 == 0x66463F78648862ALL && *(unsigned char *)(a2 + 8) == 44)
  {
    return X509ExtensionParseCertifiedChipIntermediate((unint64_t *)result, a4, a5);
  }
  if (*(void *)a2 == 0x66463F78648862ALL && *(unsigned char *)(a2 + 8) == 36)
  {
    return X509ExtensionParseMFIAuthv3Leaf((unint64_t *)result);
  }
  if (*(void *)a2 == 0x66463F78648862ALL && *(unsigned char *)(a2 + 8) == 22)
  {
    uint64_t result = ccder_blob_check_null();
    if (!result) {
      return result;
    }
    uint64_t v54 = *a4;
    uint64_t v55 = 1048584;
    goto LABEL_205;
  }
  if (*(void *)a2 == 0xC6463F78648862ALL && *(unsigned char *)(a2 + 8) == 19)
  {
    uint64_t result = ccder_blob_check_null();
    if (!result) {
      return result;
    }
    uint64_t v24 = *a4 | 0x8000000000;
    goto LABEL_275;
  }
  if (*(void *)a2 == 0xA6463F78648862ALL && *(unsigned char *)(a2 + 8) == 1)
  {
    *a4 |= 0x1000000uLL;
    goto LABEL_242;
  }
  if (*(void *)a2 == 0x66463F78648862ALL && *(unsigned char *)(a2 + 8) == 29)
  {
    uint64_t result = ccder_blob_check_null();
    if (!result) {
      return result;
    }
    uint64_t v24 = *a4 | 0x2000000;
    goto LABEL_275;
  }
  if (*(void *)a2 == 0xC6463F78648862ALL && *(unsigned char *)(a2 + 8) == 14)
  {
    uint64_t result = ccder_blob_check_null();
    if (!result) {
      return result;
    }
    uint64_t v24 = *a4 | 0x4000000;
    goto LABEL_275;
  }
  if (*(void *)a2 != 0x86463F78648862ALL || *(unsigned char *)(a2 + 8) != 3) {
    goto LABEL_242;
  }

  return X509ExtensionParseDeviceAttestationIdentity((unint64_t *)result, a4, a5);
}

uint64_t X509CertificateParseWithExtension(unint64_t *a1, unint64_t *a2, const void *a3, size_t a4)
{
  uint64_t v8 = 720939;
  unint64_t v9 = *a2;
  unint64_t v10 = a2[1];
  if (!ccder_blob_decode_tl()) {
    return v8;
  }
  unint64_t v11 = *a2;
  uint64_t result = X509CertificateParseImplicit((uint64_t)a1, a2, a3, a4);
  uint64_t v8 = result;
  if (result) {
    return v8;
  }
  if (v11 >= 0x5555555555555556)
  {
    __break(0x5513u);
LABEL_11:
    __break(0x5500u);
    goto LABEL_12;
  }
  uint64_t v8 = 720939;
  if (*a2 != v11 - 0x5555555555555556) {
    return v8;
  }
  unint64_t v13 = v11 - v9 - 0x5555555555555556;
  if (v11 - v9 >= 0x5555555555555556) {
    goto LABEL_11;
  }
  if (v10 >= v9 && v13 <= v10 - v9)
  {
    *a1 = v9;
    a1[1] = v13;
    X509PolicyCheckForBlockedKeys((uint64_t)a1);
    return 0;
  }
LABEL_12:
  __break(0x5519u);
  return result;
}

uint64_t X509CertificateParse(unint64_t *a1, unint64_t *a2)
{
  return X509CertificateParseWithExtension(a1, a2, 0, 0);
}

uint64_t X509CertificateParseSPKI(unint64_t *a1, unint64_t *a2, unint64_t *a3, void *a4)
{
  unint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  if (__CFADD__(*a1, v5)) {
    goto LABEL_31;
  }
  unint64_t v6 = v4 + v5;
  if (v4 > v6) {
    goto LABEL_30;
  }
  uint64_t v10 = 655361;
  unint64_t v14 = *a1;
  unint64_t v15 = v6;
  if (!ccder_blob_decode_tl()) {
    return v10;
  }
  if (!ccder_blob_decode_tl()) {
    return 655363;
  }
  if (v14 >= 0x5555555555555556) {
LABEL_31:
  }
    __break(0x5513u);
  if (v14 > v14 - 0x5555555555555556 || v14 - 0x5555555555555556 > v15) {
    goto LABEL_30;
  }
  unint64_t v13 = v14 - 0x5555555555555556;
  if (!ccder_blob_decode_tl()) {
    return 655362;
  }
  if (a2)
  {
    if (v13 >= v14)
    {
      *a2 = v14;
      a2[1] = 0xAAAAAAAAAAAAAAAALL;
      goto LABEL_12;
    }
LABEL_30:
    __break(0x5519u);
    goto LABEL_31;
  }
LABEL_12:
  unint64_t v11 = v14 - 0x5555555555555556;
  if (v14 > v14 - 0x5555555555555556 || v11 > v13) {
    goto LABEL_30;
  }
  if (v11 == v13)
  {
    if (a3)
    {
      *a3 = 0;
      a3[1] = 0;
    }
  }
  else if (a3)
  {
    *a3 = v11;
    a3[1] = v13 - v11;
  }
  if (v13 > v15 || v14 > v13) {
    goto LABEL_30;
  }
  if (!ccder_blob_decode_bitstring()) {
    return 655364;
  }
  *a4 = 0;
  a4[1] = 0;
  if (v13 == v15) {
    return 0;
  }
  else {
    return 655365;
  }
}

uint64_t X509CertificateParseKey(uint64_t a1, void *a2, void *a3)
{
  uint64_t result = 327691;
  if (a1)
  {
    if (*(void *)(a1 + 96))
    {
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t result = X509CertificateParseSPKI((unint64_t *)(a1 + 88), 0, 0, &v8);
      if (!result)
      {
        if (a2)
        {
          if (a3)
          {
            uint64_t v7 = v9;
            *a2 = v8;
            *a3 = v7;
          }
        }
      }
    }
  }
  return result;
}

uint64_t X509CertificateCheckSignatureDigest(char a1, uint64_t a2, void *a3, uint64_t a4)
{
  long long v16 = 0uLL;
  long long v15 = 0uLL;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v7 = X509CertificateParseSPKI((unint64_t *)(a2 + 88), (unint64_t *)&v16, (unint64_t *)&v15, &v13);
  if (v7) {
    return v7;
  }
  uint64_t v7 = 655632;
  int v9 = compare_octet_string((uint64_t)&v16, (uint64_t)&rsaEncryption);
  uint64_t v10 = (unsigned int (*)(uint64_t))validateSignatureRSA;
  if (v9)
  {
    int v11 = compare_octet_string((uint64_t)&v16, (uint64_t)&ecPublicKey);
    uint64_t v10 = (unsigned int (*)(uint64_t))validateSignatureEC;
    if (v11) {
      return 655617;
    }
  }
  unint64_t v12 = v10;
  if (((a1 & 1) == 0 || compare_octet_string_raw(a4, &CTOidSha1, 5uLL))
    && ((a1 & 4) == 0 || compare_octet_string_raw(a4, &CTOidSha256, 9uLL))
    && ((a1 & 8) == 0 || compare_octet_string_raw(a4, &CTOidSha384, 9uLL))
    && ((a1 & 0x10) == 0 || compare_octet_string_raw(a4, &CTOidSha512, 9uLL)))
  {
    return v7;
  }
  uint64_t result = v13;
  if ((v14 || !v13) && (a3[1] || !*a3))
  {
    if (v12(v13)) {
      return 0;
    }
    else {
      return 655648;
    }
  }
  __break(0x5519u);
  return result;
}

uint64_t X509CertificateCheckSignature(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&long long v6 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  unint64_t v10[2] = v6;
  v10[3] = v6;
  v10[0] = v6;
  v10[1] = v6;
  v9[0] = v10;
  v9[1] = 64;
  v8[0] = 0;
  v8[1] = 0;
  uint64_t result = X509MatchSignatureAlgorithm(a3, a4, (uint64_t)v9, v8);
  if (!result) {
    return X509CertificateCheckSignatureDigest(a1, a2, v9, (uint64_t)v8);
  }
  return result;
}

uint64_t X509MatchSignatureAlgorithm(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t result = compare_octet_string_raw(a2, &sha1WithRSA_oid, 9uLL);
  if (!result) {
    goto LABEL_8;
  }
  uint64_t result = compare_octet_string_raw(a2, &sha256WithRSA_oid, 9uLL);
  if (!result)
  {
LABEL_10:
    *a4 = &CTOidSha256;
    a4[1] = 9;
    if (*(void *)(a3 + 8) < 0x20uLL) {
      goto LABEL_15;
    }
    *(void *)(a3 + 8) = 32;
    ccsha256_di();
    goto LABEL_14;
  }
  uint64_t result = compare_octet_string_raw(a2, &sha384WithRSA_oid, 9uLL);
  if (!result) {
    goto LABEL_12;
  }
  uint64_t result = compare_octet_string_raw(a2, &sha1WithECDSA_oid, 7uLL);
  if (!result)
  {
LABEL_8:
    *a4 = &CTOidSha1;
    a4[1] = 5;
    if (*(void *)(a3 + 8) < 0x14uLL) {
      goto LABEL_15;
    }
    *(void *)(a3 + 8) = 20;
    ccsha1_di();
LABEL_14:
    ccdigest();
    return 0;
  }
  uint64_t result = compare_octet_string_raw(a2, &sha256WithECDSA_oid, 8uLL);
  if (!result) {
    goto LABEL_10;
  }
  uint64_t result = compare_octet_string_raw(a2, &sha384WithECDSA_oid, 8uLL);
  if (result) {
    return 656640;
  }
LABEL_12:
  *a4 = &CTOidSha384;
  a4[1] = 9;
  if (*(void *)(a3 + 8) >= 0x30uLL)
  {
    *(void *)(a3 + 8) = 48;
    ccsha384_di();
    goto LABEL_14;
  }
LABEL_15:
  __break(0x5519u);
  return result;
}

uint64_t X509CertificateCheckSignatureWithPublicKey(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)&long long v7 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v7 + 1) = 0xAAAAAAAAAAAAAAAALL;
  unint64_t v16[2] = v7;
  v16[3] = v7;
  v16[0] = v7;
  v16[1] = v7;
  uint64_t v14 = v16;
  uint64_t v15 = 64;
  long long v13 = 0uLL;
  uint64_t matched = X509MatchSignatureAlgorithm(a4, a5, (uint64_t)&v14, &v13);
  if (matched) {
    return matched;
  }
  uint64_t matched = 655617;
  int v9 = compare_octet_string(a2, (uint64_t)&rsaEncryption);
  uint64_t v10 = (unsigned int (*)(uint64_t))validateSignatureRSA;
  if (v9)
  {
    int v11 = compare_octet_string(a2, (uint64_t)&ecPublicKey);
    uint64_t v10 = (unsigned int (*)(uint64_t))validateSignatureEC;
    if (v11) {
      return matched;
    }
  }
  uint64_t result = *a1;
  if ((a1[1] || !result) && (!v14 || v15))
  {
    if (v10(result)) {
      return 0;
    }
    else {
      return 655648;
    }
  }
  __break(0x5519u);
  return result;
}

uint64_t X509CertificateParseGeneralNamesContent(uint64_t a1, uint64_t (*a2)(void, int *, uint64_t), uint64_t a3)
{
  unint64_t v3 = *(void *)(a1 + 224);
  uint64_t v4 = *(void *)(a1 + 232);
  if (__CFADD__(v3, v4))
  {
    __break(0x5513u);
LABEL_11:
    __break(0x5519u);
  }
  unint64_t v5 = v3 + v4;
  if (v3 > v5) {
    goto LABEL_11;
  }
  unint64_t v10 = *(void *)(a1 + 224);
  unint64_t v11 = v5;
  while (1)
  {
    if (v10 >= v11) {
      return 0;
    }
    memset(v9, 170, sizeof(v9));
    if ((ccder_blob_decode_GeneralName(&v10, v9, (unint64_t *)&v9[1]) & 1) == 0) {
      break;
    }
    if ((a2(v9[0], &v9[1], a3) & 1) == 0) {
      return 0;
    }
  }
  return 720912;
}

uint64_t X509CertificateSubjectNameGetCommonName(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  unint64_t v20 = v3;
  if (__CFADD__(*a1, v3)) {
    goto LABEL_59;
  }
  unint64_t v4 = v2 + v3;
  if (v2 > v4)
  {
LABEL_58:
    __break(0x5519u);
    goto LABEL_59;
  }
  uint64_t v6 = 720901;
  unint64_t v18 = *a1;
  unint64_t v19 = v4;
  *a2 = 0;
  a2[1] = 0;
  if (v2 < v4)
  {
    while (1)
    {
      if (!ccder_blob_decode_tl() || !v20) {
        return 720898;
      }
      unint64_t v2 = v18;
      if (__CFADD__(v18, v20)) {
        break;
      }
      unint64_t v7 = v18 + v20;
      if (v18 > v18 + v20 || v7 > v19) {
        goto LABEL_58;
      }
      unint64_t v16 = v18;
      unint64_t v17 = v18 + v20;
      while (v2 < v7)
      {
        if (!ccder_blob_decode_tl()) {
          return 720899;
        }
        if (__CFADD__(v16, v20)) {
          goto LABEL_59;
        }
        if (v16 > v16 + v20 || v16 + v20 > v17) {
          goto LABEL_58;
        }
        unint64_t v15 = v16 + v20;
        if (!ccder_blob_decode_tl()) {
          return 720900;
        }
        unint64_t v2 = v16 + v20;
        if (v16 > v15) {
          goto LABEL_58;
        }
        if (__CFADD__(v16, v20)) {
          goto LABEL_59;
        }
        if (v16 > v16 + v20) {
          goto LABEL_58;
        }
        unint64_t v14 = v16 + v20;
        if (v20 == 3 && *(_WORD *)v16 == 1109 && *(unsigned char *)(v16 + 2) == 3)
        {
          unint64_t v12 = v16 + v20;
          unint64_t v13 = v16 + v20;
          if ((ccder_blob_decode_tl() & 1) == 0)
          {
            if (v14 > v15) {
              goto LABEL_58;
            }
            unint64_t v12 = v16 + v20;
            unint64_t v13 = v16 + v20;
            if ((ccder_blob_decode_tl() & 1) == 0)
            {
              if (v14 > v15) {
                goto LABEL_58;
              }
              unint64_t v12 = v16 + v20;
              unint64_t v13 = v16 + v20;
              if (!ccder_blob_decode_tl()) {
                return v6;
              }
            }
          }
          if (__CFADD__(v12, v20)) {
            goto LABEL_59;
          }
          unint64_t v2 = v12 + v20;
          if (v15 != v12 + v20) {
            return 720902;
          }
          if (v13 < v12 || v20 > v13 - v12) {
            goto LABEL_58;
          }
          *a2 = v12;
          a2[1] = v20;
        }
        unint64_t v7 = v18 + v20;
        if (v2 > v17 || v16 > v2) {
          goto LABEL_58;
        }
        unint64_t v16 = v2;
      }
      if (v2 != v7) {
        return 720903;
      }
      unint64_t v4 = v19;
      if (v2 > v19 || v18 > v2) {
        goto LABEL_58;
      }
      unint64_t v18 = v2;
      if (v2 >= v19) {
        goto LABEL_46;
      }
    }
LABEL_59:
    __break(0x5513u);
  }
LABEL_46:
  if (v2 != v4) {
    return 720904;
  }
  if (a2[1] && *a2) {
    return 0;
  }
  *a2 = 0;
  a2[1] = 0;
  return 720905;
}

BOOL X509CertificateValidAtTime(uint64_t a1, time_t a2)
{
  BOOL result = 0;
  time_t v5 = 0;
  time_t v6 = 0;
  if (a1 && a2 != -1) {
    return !X509CertificateGetNotBefore(a1, &v6)
  }
        && !X509CertificateGetNotAfter(a1, &v5)
        && difftime(a2, v6) >= 0.0
        && difftime(a2, v5) <= 0.0;
  return result;
}

uint64_t X509CertificateGetNotBefore(uint64_t a1, time_t *a2)
{
  v4[0] = (const char *)0xAAAAAAAAAAAAAAAALL;
  v4[1] = (const char *)0xAAAAAAAAAAAAAAAALL;
  uint64_t result = X509CertificateParseValidity(a1);
  if (!result) {
    return X509TimeConvert(v4, a2);
  }
  return result;
}

uint64_t X509CertificateGetNotAfter(uint64_t a1, time_t *a2)
{
  v4[0] = (const char *)0xAAAAAAAAAAAAAAAALL;
  v4[1] = (const char *)0xAAAAAAAAAAAAAAAALL;
  uint64_t result = X509CertificateParseValidity(a1);
  if (!result) {
    return X509TimeConvert(v4, a2);
  }
  return result;
}

BOOL X509CertificateIsValid(uint64_t a1)
{
  time_t v2 = time(0);

  return X509CertificateValidAtTime(a1, v2);
}

uint64_t X509CertificateParseValidity(uint64_t result)
{
  uint64_t v1 = 720906;
  if (!result) {
    return v1;
  }
  unint64_t v2 = *(void *)(result + 72);
  uint64_t v3 = *(void *)(result + 80);
  if (!v2 || v3 == 0) {
    return v1;
  }
  if (__CFADD__(v2, v3))
  {
    __break(0x5513u);
  }
  else
  {
    unint64_t v5 = v2 + v3;
    if (v2 <= v5)
    {
      v6[0] = *(void *)(result + 72);
      v6[1] = v5;
      if (!ccder_blob_decode_Time(v6)) {
        return 720907;
      }
      if (ccder_blob_decode_Time(v6)) {
        return 0;
      }
      return 720908;
    }
  }
  __break(0x5519u);
  return result;
}

uint64_t X509TimeConvert(const char **a1, time_t *a2)
{
  uint64_t v2 = 720909;
  if (!a1) {
    return v2;
  }
  unint64_t v4 = a1[1];
  if (((unint64_t)v4 | 2) != 0xF) {
    return v2;
  }
  v11.tm_zone = (char *)0xAAAAAAAAAAAAAAAALL;
  *(void *)&long long v6 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)&v11.tm_mon = v6;
  *(_OWORD *)&v11.tm_isdst = v6;
  *(_OWORD *)&v11.tm_sec = v6;
  unint64_t v7 = *a1;
  if (v4 == (const char *)13)
  {
    uint64_t result = (uint64_t)strptime(v7, "%y%m%d%H%M%SZ", &v11);
    if (result && v11.tm_year >= 150) {
      v11.tm_year -= 100;
    }
  }
  else
  {
    uint64_t result = (uint64_t)strptime(v7, "%Y%m%d%H%M%SZ", &v11);
  }
  int v9 = a1[1];
  if (!__CFADD__(*a1, v9))
  {
    if ((const char *)result != &v9[(void)*a1]) {
      return 720910;
    }
    time_t v10 = timegm(&v11);
    if (v10 == -1) {
      return 720911;
    }
    uint64_t v2 = 0;
    if (a2) {
      *a2 = v10;
    }
    return v2;
  }
  __break(0x5513u);
  return result;
}

BOOL X509ExtensionParseComponentAuth(unint64_t *a1, void *a2, unint64_t *a3)
{
  unint64_t v3 = a1[1];
  if (*a1 > v3) {
    goto LABEL_19;
  }
  unint64_t v12 = *a1;
  unint64_t v13 = a1[1];
  unint64_t v11 = v3 - *a1;
  if (ccder_blob_decode_tl()) {
    goto LABEL_5;
  }
  if (*a1 > a1[1]) {
    goto LABEL_19;
  }
  unint64_t v12 = *a1;
  unint64_t v13 = a1[1];
  if (ccder_blob_decode_tl())
  {
LABEL_5:
    unint64_t v8 = v12;
    unint64_t v7 = v13;
    if (v12 > v13) {
      goto LABEL_19;
    }
    *a1 = v12;
    a1[1] = v13;
    unint64_t v9 = v11;
  }
  else
  {
    unint64_t v8 = *a1;
    unint64_t v7 = a1[1];
    unint64_t v9 = v7 - *a1;
  }
  if (__CFADD__(v8, v9)) {
    goto LABEL_20;
  }
  if (v7 == v8 + v9)
  {
    if (!v9) {
      goto LABEL_16;
    }
    if (!a3)
    {
LABEL_15:
      *a2 |= 0x40000000uLL;
LABEL_16:
      if (v8 <= v7)
      {
        *a1 = v7;
        return v7 == v8 + v9;
      }
      goto LABEL_19;
    }
    if (v8 <= v7 && v9 <= v7 - v8)
    {
      *a3 = v8;
      a3[1] = v9;
      goto LABEL_15;
    }
LABEL_19:
    __break(0x5519u);
LABEL_20:
    __break(0x5513u);
  }
  return v7 == v8 + v9;
}

uint64_t X509ExtensionParseCertifiedChipIntermediate(unint64_t *a1, void *a2, unint64_t *a3)
{
  uint64_t result = ccder_blob_decode_tl();
  if (result)
  {
    unint64_t v7 = *a1;
    if (*a1 >= 0x5555555555555556)
    {
      __break(0x5513u);
      goto LABEL_12;
    }
    unint64_t v8 = v7 - 0x5555555555555556;
    if (a1[1] != v7 - 0x5555555555555556) {
      return 0;
    }
    *a2 |= 0x30000000000uLL;
    if (a3)
    {
      if (v7 > v8) {
        goto LABEL_12;
      }
      *a3 = v7;
      a3[1] = 0xAAAAAAAAAAAAAAAALL;
    }
    if (v7 <= v8)
    {
      *a1 = v8;
      return 1;
    }
LABEL_12:
    __break(0x5519u);
  }
  return result;
}

uint64_t X509ExtensionParseMFIAuthv3Leaf(unint64_t *a1)
{
  uint64_t result = ccder_blob_decode_tl();
  if (result)
  {
    unint64_t v3 = *a1;
    if (*a1 >= 0x5555555555555556)
    {
      __break(0x5513u);
    }
    else
    {
      unint64_t v4 = a1[1];
      if (v4 != v3 - 0x5555555555555556) {
        return 0;
      }
      if (v3 <= v4)
      {
        *a1 = v4;
        return 1;
      }
    }
    __break(0x5519u);
  }
  return result;
}

uint64_t X509ExtensionParseMFISWAuth(unint64_t *a1, void *a2, unint64_t *a3)
{
  uint64_t result = ccder_blob_decode_tl();
  if (result)
  {
    unint64_t v7 = *a1;
    if (*a1 >= 0x5555555555555556)
    {
      __break(0x5513u);
    }
    else
    {
      unint64_t v8 = a1[1];
      if (v8 != v7 - 0x5555555555555556) {
        return 0;
      }
      if (a3)
      {
        if (v8 < v7 || v8 - v7 < 0xAAAAAAAAAAAAAAAALL) {
          goto LABEL_13;
        }
        *a3 = v7;
        a3[1] = 0xAAAAAAAAAAAAAAAALL;
      }
      *a2 |= 0x30000000uLL;
      if (v7 <= v8)
      {
        *a1 = v8;
        return 1;
      }
    }
LABEL_13:
    __break(0x5519u);
  }
  return result;
}

uint64_t X509ExtensionParseGenericSSLMarker()
{
  return 0;
}

uint64_t X509ExtensionParseServerAuthMarker(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, unint64_t *a5)
{
  uint64_t result = ccder_blob_check_null();
  if (result)
  {
    if (a2 > 0xFFFFFFFFFFFFFFF6) {
      goto LABEL_26;
    }
    if (__CFADD__(a2, a3)) {
      goto LABEL_26;
    }
    unint64_t v10 = a2 + a3;
    if (a2 + a3 == -1) {
      goto LABEL_26;
    }
    unint64_t v11 = a2 + 9;
    unint64_t v12 = (char *)(a2 + 9);
    while (1)
    {
      BOOL v13 = (unint64_t)v12 < v10 && (unint64_t)v12 >= a2;
      BOOL v14 = v13;
      if ((unint64_t)v12 >= v10 - 1) {
        break;
      }
      if (!v14) {
        goto LABEL_25;
      }
      int v15 = *v12++;
      if ((v15 & 0x80000000) == 0) {
        return 0;
      }
    }
    if (!v14)
    {
LABEL_25:
      __break(0x5519u);
LABEL_26:
      __break(0x5513u);
      return result;
    }
    if ((*v12 & 0x80000000) == 0)
    {
      if (!a5)
      {
LABEL_22:
        *a4 |= (unint64_t)&_mh_execute_header;
        return 1;
      }
      if (v11 >= a2 && v11 <= v10)
      {
        *a5 = v11;
        a5[1] = a3 - 9;
        goto LABEL_22;
      }
      goto LABEL_25;
    }
    return 0;
  }
  return result;
}

uint64_t X509ExtensionParseDeviceAttestationIdentity(unint64_t *a1, void *a2, unint64_t *a3)
{
  uint64_t result = ccder_blob_decode_tl();
  if (result)
  {
    unint64_t v7 = *a1;
    if (*a1 >= 0x5555555555555556) {
      goto LABEL_17;
    }
    if (a1[1] != v7 - 0x5555555555555556) {
      return 0;
    }
    if (v7 > v7 - 0x5555555555555556) {
      goto LABEL_18;
    }
    unint64_t v10 = *a1;
    unint64_t v11 = v7 - 0x5555555555555556;
    uint64_t result = ccder_blob_decode_tl();
    if (result)
    {
      uint64_t result = ccder_blob_decode_tl();
      if (result)
      {
        if (a3)
        {
          if (v11 < v10 || v11 - v10 < 0xAAAAAAAAAAAAAAAALL) {
            goto LABEL_18;
          }
          *a3 = v10;
          a3[1] = 0xAAAAAAAAAAAAAAAALL;
        }
        *a2 |= 0x240000800000uLL;
        unint64_t v8 = *a1;
        if (*a1 < 0x5555555555555556)
        {
          unint64_t v9 = v8 - 0x5555555555555556;
          if (v8 <= v8 - 0x5555555555555556 && v9 <= a1[1])
          {
            *a1 = v9;
            return 1;
          }
LABEL_18:
          __break(0x5519u);
          return result;
        }
LABEL_17:
        __break(0x5513u);
        goto LABEL_18;
      }
    }
  }
  return result;
}

unint64_t *X509ExtensionParseMFI4Properties(unint64_t *result, void *a2, unint64_t *a3)
{
  unint64_t v4 = *result;
  unint64_t v3 = result[1];
  unint64_t v5 = v3 - *result;
  if (v5 != 32) {
    return (unint64_t *)(v5 == 32);
  }
  if (a3)
  {
    if (v4 > v3)
    {
LABEL_12:
      __break(0x5519u);
      goto LABEL_13;
    }
    *a3 = v4;
    a3[1] = 32;
  }
  *a2 |= 0xC00000000uLL;
  if (v4 < 0xFFFFFFFFFFFFFFE0)
  {
    unint64_t v6 = v4 + 32;
    if (v4 + 32 <= v3 && v4 <= v6)
    {
      *uint64_t result = v6;
      return (unint64_t *)(v5 == 32);
    }
    goto LABEL_12;
  }
LABEL_13:
  __break(0x5513u);
  return result;
}

unint64_t *X509ChainParseCertificateSet(unint64_t *result, unint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v5 = 0;
  *a4 = 0;
  a4[1] = 0;
  BOOL v6 = *result >= result[1] || a3 == 0;
  if (v6)
  {
LABEL_6:
    if (a5)
    {
      uint64_t result = 0;
      *a5 = v5;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    unint64_t v9 = result;
    uint64_t v10 = 0;
    unint64_t v11 = a2 + 304 * a3;
    unint64_t v12 = ~a2;
    BOOL v13 = a4 + 1;
    BOOL v14 = (void *)(a2 + 272);
    uint64_t v15 = a3 - 1;
    unint64_t v21 = a2 + 272;
    while ((unsigned __int128)(v10 * (__int128)304) >> 64 == (304 * v10) >> 63 && 304 * v10 <= v12)
    {
      unint64_t v16 = v14 - 34;
      if (v14 != (void *)272 && ((unint64_t)v16 >= v11 || (unint64_t)v16 < a2))
      {
LABEL_30:
        __break(0x5519u);
        break;
      }
      uint64_t result = (unint64_t *)X509CertificateParse(v14 - 34, v9);
      if (result) {
        return result;
      }
      if (v10)
      {
        if ((unint64_t)v16 < a2) {
          goto LABEL_30;
        }
        if ((unint64_t)(v14 + 4) > v11) {
          goto LABEL_30;
        }
        unint64_t v17 = (void *)*v13;
        *BOOL v14 = 0;
        v14[1] = v17;
        if (v14 != (void *)272 && (unint64_t)v16 >= v11) {
          goto LABEL_30;
        }
        void *v17 = v16;
        *BOOL v13 = (unint64_t)v14;
      }
      else
      {
        uint64_t v18 = *a4;
        *(void *)(a2 + 272) = *a4;
        if (v18) {
          unint64_t v19 = (unint64_t *)(v18 + 280);
        }
        else {
          unint64_t v19 = v13;
        }
        *unint64_t v19 = v21;
        *a4 = v16;
        *(void *)(a2 + 280) = a4;
      }
      uint64_t v5 = v10 + 1;
      if (*v9 < v9[1])
      {
        v14 += 38;
        BOOL v6 = v15 == v10++;
        if (!v6) {
          continue;
        }
      }
      goto LABEL_6;
    }
    __break(0x5513u);
  }
  return result;
}

uint64_t X509ChainGetCertificateUsingKeyIdentifier(uint64_t *a1, uint64_t a2)
{
  for (uint64_t i = *a1; i; uint64_t i = *(void *)(i + 272))
  {
    if (*(void *)(i + 192) && !compare_octet_string(a2, i + 184)) {
      break;
    }
  }
  return i;
}

void *X509ChainResetChain(void *result, void *a2)
{
  *uint64_t result = 0;
  result[1] = result;
  uint64_t v2 = (void *)*a2;
  if (*a2)
  {
    do
    {
      v2[36] = 0;
      v2[37] = 0;
      uint64_t v2 = (void *)v2[34];
    }
    while (v2);
  }
  return result;
}

uint64_t X509ChainBuildPathPartial(void *a1, uint64_t *a2, void *a3, int a4)
{
  if (!a1) {
    return 327691;
  }
  unint64_t v7 = a1;
  *a3 = a1;
  a3[1] = a1 + 36;
  a1[36] = 0;
  a1[37] = a3;
  uint64_t v8 = (uint64_t)(a1 + 15);
  uint64_t result = compare_octet_string((uint64_t)(a1 + 15), (uint64_t)(a1 + 13));
  if (result)
  {
    while (1)
    {
      uint64_t v10 = (uint64_t)(v7 + 21);
      if (!v7[22]
        || (uint64_t CertificateUsingKeyIdentifier = X509ChainGetCertificateUsingKeyIdentifier(a2, (uint64_t)(v7 + 21))) == 0
        || (unint64_t v7 = (void *)CertificateUsingKeyIdentifier,
            compare_octet_string(CertificateUsingKeyIdentifier + 104, v8)))
      {
        unint64_t v7 = (void *)*a2;
        if (!*a2)
        {
LABEL_16:
          if (X509ChainGetAppleRootUsingKeyIdentifier(v10, 1)) {
            return 0;
          }
          uint64_t BAARootUsingKeyIdentifier = X509ChainGetBAARootUsingKeyIdentifier(v10);
          if (a4) {
            unsigned int v16 = 0;
          }
          else {
            unsigned int v16 = 524296;
          }
          if (BAARootUsingKeyIdentifier) {
            return 0;
          }
          else {
            return v16;
          }
        }
        while (compare_octet_string(v8, (uint64_t)(v7 + 13)))
        {
          unint64_t v7 = (void *)v7[34];
          if (!v7) {
            goto LABEL_16;
          }
        }
      }
      unint64_t v12 = (void *)*a3;
      if (*a3) {
        break;
      }
LABEL_13:
      BOOL v13 = (void *)a3[1];
      v7[36] = 0;
      v7[37] = v13;
      *BOOL v13 = v7;
      a3[1] = v7 + 36;
      uint64_t v8 = (uint64_t)(v7 + 15);
      int v14 = compare_octet_string((uint64_t)(v7 + 15), (uint64_t)(v7 + 13));
      uint64_t result = 0;
      if (!v14) {
        return result;
      }
    }
    while (v12 != v7)
    {
      unint64_t v12 = (void *)v12[36];
      if (!v12) {
        goto LABEL_13;
      }
    }
    return 524297;
  }
  return result;
}

uint64_t X509ChainGetAppleRootUsingKeyIdentifier(uint64_t result, int a2)
{
  uint64_t v2 = &numAppleRoots;
  if (!a2) {
    uint64_t v2 = &numAppleProdRoots;
  }
  uint64_t v3 = *v2;
  if (*v2)
  {
    uint64_t v4 = result;
    for (uint64_t i = (uint64_t *)&AppleRoots; i < (uint64_t *)&UcrtRootPublicKey && i >= (uint64_t *)&AppleRoots; ++i)
    {
      uint64_t v7 = *i;
      uint64_t result = compare_octet_string(v4, *i + 184);
      if (!result) {
        return v7;
      }
      if (!--v3) {
        return 0;
      }
    }
    __break(0x5519u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t X509ChainGetBAARootUsingKeyIdentifier(uint64_t result)
{
  uint64_t v1 = numBAARoots;
  if (numBAARoots)
  {
    uint64_t v2 = result;
    for (uint64_t i = (uint64_t *)&BAARoots; i < (uint64_t *)&SEKTestRootPublicKey && i >= (uint64_t *)&BAARoots; ++i)
    {
      uint64_t v5 = *i;
      uint64_t result = compare_octet_string(v2, *i + 184);
      if (!result) {
        return v5;
      }
      if (!--v1) {
        return 0;
      }
    }
    __break(0x5519u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t X509ChainBuildPath(void *a1, uint64_t *a2, void *a3)
{
  return X509ChainBuildPathPartial(a1, a2, a3, 0);
}

uint64_t X509ChainCheckPathWithOptions(char a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  BOOL v6 = a2;
  uint64_t v8 = *a2;
  if (a3)
  {
    uint64_t v9 = *(void *)(a3 + 48);
    if (v9)
    {
      if (*(void *)(v9 + 8))
      {
        if (compare_octet_string(v9, v8 + 208)) {
          return 327701;
        }
        uint64_t v8 = *v6;
      }
    }
  }
  if (v8)
  {
    unint64_t v31 = v6;
    unint64_t v32 = a4;
    unint64_t v11 = 0;
    int v12 = 0;
    char v33 = 0;
    uint64_t v13 = -1;
    while (1)
    {
      unint64_t v14 = *(void *)(v8 + 288);
      unint64_t v15 = v14 + 304;
      if (v14)
      {
LABEL_10:
        char v16 = 0;
        goto LABEL_11;
      }
      if (!compare_octet_string(v8 + 120, v8 + 104))
      {
        char v16 = 0;
        unint64_t v15 = v8 + 304;
        unint64_t v14 = v8;
        goto LABEL_11;
      }
      if (!a3) {
        return v12 | 0x9000Du;
      }
      if (*(unsigned char *)(a3 + 16))
      {
        uint64_t AppleRootUsingKeyIdentifier = X509ChainGetAppleRootUsingKeyIdentifier(v8 + 168, *(unsigned __int8 *)(a3 + 17));
      }
      else
      {
        if (!*(void *)(a3 + 24)) {
          goto LABEL_58;
        }
        uint64_t AppleRootUsingKeyIdentifier = X509ChainGetBAARootUsingKeyIdentifier(v8 + 168);
      }
      unint64_t v14 = AppleRootUsingKeyIdentifier;
      v33 |= AppleRootUsingKeyIdentifier != 0;
      unint64_t v15 = AppleRootUsingKeyIdentifier + 304;
      if (AppleRootUsingKeyIdentifier) {
        goto LABEL_10;
      }
LABEL_58:
      if (!*(unsigned char *)(a3 + 19)) {
        return v12 | 0x9000Du;
      }
      unint64_t v14 = 0;
      char v16 = 1;
LABEL_11:
      if (v11 && *(void *)(v8 + 32) >= 2uLL)
      {
        if (!*(unsigned char *)(v8 + 265))
        {
          int v30 = 589825;
          return v12 | v30;
        }
        if ((*(unsigned char *)(v8 + 264) & 4) == 0)
        {
          int v30 = 589826;
          return v12 | v30;
        }
      }
      unint64_t v17 = *(void *)(v8 + 200);
      if (v17) {
        BOOL v18 = v17 >= v11;
      }
      else {
        BOOL v18 = 1;
      }
      if (!v18)
      {
        int v30 = 589827;
        return v12 | v30;
      }
      if (*(unsigned char *)(v8 + 266))
      {
        int v30 = 589831;
        return v12 | v30;
      }
      if (compare_octet_string(v8 + 40, v8 + 152))
      {
        int v30 = 589828;
        return v12 | v30;
      }
      if ((v16 & 1) == 0 && *(void *)(v8 + 168) && *(void *)(v8 + 176))
      {
        if (v14 >= v15) {
          goto LABEL_100;
        }
        if (compare_octet_string(v8 + 168, v14 + 184)) {
          return v12 | 0x9000Au;
        }
      }
      if (a3 && v11 && (*(void *)(v8 + 240) & *(void *)(a3 + 8)) == 0) {
        X509PolicySetFlagsForCommonNames(v8);
      }
      if (v14 == v8 && !*(void *)(v8 + 240))
      {
        X509PolicySetFlagsForRoots(a3, v8);
        if (a3)
        {
LABEL_34:
          if (*(unsigned char *)(a3 + 18) && !X509CertificateIsValid(v8)) {
            return v12 | 0x90009u;
          }
          uint64_t v19 = *(void *)(a3 + 8);
          if (!v11 && (*(void *)(v8 + 240) & v19) == 0)
          {
            X509PolicySetFlagsForMFI(v8);
            uint64_t v19 = *(void *)(a3 + 8);
          }
          v13 &= *(void *)(v8 + 240);
          if (v19 && (v19 & v13) == 0)
          {
            int v30 = 589829;
            return v12 | v30;
          }
          goto LABEL_49;
        }
      }
      else if (a3)
      {
        goto LABEL_34;
      }
      v13 &= *(void *)(v8 + 240);
LABEL_49:
      a1 |= v14 == v8;
      if ((v16 & 1) == 0)
      {
        if (v14 >= v15) {
          goto LABEL_100;
        }
        uint64_t result = X509CertificateCheckSignature(a1, v14, v8 + 16, v8 + 40);
        if (result) {
          return result;
        }
      }
      unint64_t v21 = v11 + 1;
      if (v11 == -1) {
        goto LABEL_99;
      }
      uint64_t v8 = *(void *)(v8 + 288);
      v12 += 256;
      ++v11;
      if (!v8)
      {
        BOOL v6 = v31;
        a4 = v32;
        LOBYTE(v8) = v33;
        if (a3) {
          goto LABEL_61;
        }
        goto LABEL_87;
      }
    }
  }
  unint64_t v21 = 0;
  uint64_t v13 = -1;
  if (!a3) {
    goto LABEL_87;
  }
LABEL_61:
  if (*(void *)a3)
  {
    unint64_t v22 = v21;
    if (v8)
    {
      unint64_t v22 = v21 + 1;
      if (v21 == -1)
      {
LABEL_99:
        __break(0x5500u);
LABEL_100:
        __break(0x5519u);
      }
    }
    if (*(void *)a3 != v22) {
      return (v22 << 8) | 0x90006u;
    }
  }
  uint64_t v23 = *(void *)(a3 + 24);
  if (!v23 || !*(void *)(v23 + 8))
  {
    if (!*(unsigned char *)(a3 + 16)) {
      goto LABEL_87;
    }
    int v24 = v21 << 8;
    uint64_t v25 = **(void **)(v6[1] + 8);
LABEL_75:
    uint64_t v27 = 184;
    if (v8) {
      uint64_t v27 = 168;
    }
    uint64_t v28 = X509ChainGetAppleRootUsingKeyIdentifier(v25 + v27, *(unsigned __int8 *)(a3 + 17));
    if (!v28) {
      return v24 | 0x9000Bu;
    }
    uint64_t v29 = v28;
    if ((v8 & 1) == 0 && !compare_octet_string(v25 + 88, v28 + 88)
      || !X509CertificateCheckSignature(29, v29, v25 + 16, v25 + 40))
    {
      goto LABEL_87;
    }
    int v26 = 589836;
    return v24 | v26;
  }
  int v24 = v21 << 8;
  uint64_t v25 = **(void **)(v6[1] + 8);
  if (*(unsigned char *)(a3 + 16)) {
    goto LABEL_75;
  }
  memset(v35, 170, sizeof(v35));
  v34[0] = 0xAAAAAAAAAAAAAAAALL;
  v34[1] = 0xAAAAAAAAAAAAAAAALL;
  if (X509CertificateParseSPKI((unint64_t *)(v25 + 88), &v35[2], v34, v35))
  {
LABEL_72:
    int v26 = 589832;
    return v24 | v26;
  }
  if (compare_octet_string((uint64_t)&v35[2], *(void *)(a3 + 32))
    || compare_octet_string((uint64_t)v35, *(void *)(a3 + 24)))
  {
    if (X509CertificateCheckSignatureWithPublicKey(*(uint64_t **)(a3 + 24), *(void *)(a3 + 32), *(void *)(a3 + 40), v25 + 16, v25 + 40))goto LABEL_72; {
  }
    }
  else if (!compare_octet_string(*(void *)(a3 + 32), (uint64_t)&ecPublicKey))
  {
    compare_octet_string((uint64_t)v34, *(void *)(a3 + 40));
  }
LABEL_87:
  uint64_t result = 0;
  if (a4) {
    *a4 = v13;
  }
  return result;
}

uint64_t X509ChainCheckPath(char a1, uint64_t *a2, uint64_t a3)
{
  return X509ChainCheckPathWithOptions(a1, a2, a3, 0);
}

void __scheduleXPCActivity_block_invoke_cold_1(uint64_t a1, NSObject *a2)
{
  uint64_t v2 = *(void *)(a1 + 48);
  int v3 = 136315138;
  uint64_t v4 = v2;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Failed to defer activity: %s", (uint8_t *)&v3, 0xCu);
}

void libInFieldCollectionLibrary_cold_1(void *a1)
{
  uint64_t v2 = +[NSAssertionHandler currentHandler];
  int v3 = +[NSString stringWithUTF8String:"void *libInFieldCollectionLibrary(void)"];
  [(NSAssertionHandler *)v2 handleFailureInFunction:v3, @"MACollectionInterface.m", 42, @"%s", *a1 file lineNumber description];

  __break(1u);
}

void __getSUManagerClientClass_block_invoke_cold_1(void *a1)
{
  uint64_t v2 = +[NSAssertionHandler currentHandler];
  int v3 = +[NSString stringWithUTF8String:"void *SoftwareUpdateServicesLibrary(void)"];
  [(NSAssertionHandler *)v2 handleFailureInFunction:v3, @"support.m", 24, @"%s", *a1 file lineNumber description];

  __break(1u);
}

void __getSUManagerClientClass_block_invoke_cold_2()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"Class getSUManagerClientClass(void)_block_invoke"];
  [(NSAssertionHandler *)v0 handleFailureInFunction:v1, @"support.m", 26, @"Unable to find class %s", "SUManagerClient" file lineNumber description];

  __break(1u);
}

void dealwith_activation_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Unexpected activation record verification failure: %{public}@", v2, v3, v4, v5, v6);
}

void __issueClientCertificateWithReferenceKey_block_invoke_4_cold_1()
{
  OUTLINED_FUNCTION_2(__stack_chk_guard);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to disable cellular OTA assertion: %@", v2, v3, v4, v5, v6);
}

void __issueClientCertificateWithReferenceKey_block_invoke_4_cold_2()
{
  OUTLINED_FUNCTION_2(__stack_chk_guard);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to disable cellular bootstrap assertion: %@", v2, v3, v4, v5, v6);
}

void __issueClientCertificateWithReferenceKey_block_invoke_4_cold_3()
{
  OUTLINED_FUNCTION_2(__stack_chk_guard);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to enable cellular OTA assertion: %@", v2, v3, v4, v5, v6);
}

void __issueClientCertificateWithReferenceKey_block_invoke_4_cold_4()
{
  OUTLINED_FUNCTION_2(__stack_chk_guard);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to enable cellular bootstrap assertion: %@", v2, v3, v4, v5, v6);
}

void handle_deactivate_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to commit UIK: %@", v2, v3, v4, v5, v6);
}

void handle_deactivate_cold_2()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to bump UIK: %@", v2, v3, v4, v5, v6);
}

void __ucrt_oob_activity_handler_block_invoke_3_cold_1()
{
  OUTLINED_FUNCTION_3();
  __int16 v3 = 1024;
  int v4 = v0;
  _os_log_fault_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_FAULT, "Failed to query UCRT healing support (%@). Rescheduling UCRT OOB for %d seconds.", v2, 0x12u);
}

void __ucrt_oob_activity_handler_block_invoke_3_cold_2()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to delete legacy UIK: %@", v2, v3, v4, v5, v6);
}

void perform_sydro_data_migration_tasks_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to store SDCRT: %@", v2, v3, v4, v5, v6);
}

void perform_sydro_data_migration_tasks_cold_2()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to store DCRT: %@", v2, v3, v4, v5, v6);
}

void perform_sydro_data_migration_tasks_cold_3()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to migrate factory MFi certificates: %@", v2, v3, v4, v5, v6);
}

void __register_xpc_activities_block_invoke_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to defer activity: %@", v2, v3, v4, v5, v6);
}

void __register_xpc_activities_block_invoke_753_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to defer activity: %@", v2, v3, v4, v5, v6);
}

void __register_xpc_activities_block_invoke_754_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to defer activity: %@", v2, v3, v4, v5, v6);
}

void __register_xpc_activities_block_invoke_755_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to defer activity: %@", v2, v3, v4, v5, v6);
}

void __register_xpc_activities_block_invoke_756_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to defer activity: %@", v2, v3, v4, v5, v6);
}

void __register_xpc_activities_block_invoke_757_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to defer activity: %@", v2, v3, v4, v5, v6);
}

void __register_xpc_activities_block_invoke_758_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to defer activity: %@", v2, v3, v4, v5, v6);
}

void __register_xpc_activities_block_invoke_759_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to defer activity: %@", v2, v3, v4, v5, v6);
}

void __register_xpc_activities_block_invoke_760_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to defer activity: %@", v2, v3, v4, v5, v6);
}

void __register_xpc_activities_block_invoke_761_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to defer activity: %@", v2, v3, v4, v5, v6);
}

void __getMSDKManagedDeviceClass_block_invoke_cold_1(void *a1)
{
  uint64_t v2 = +[NSAssertionHandler currentHandler];
  uint64_t v3 = +[NSString stringWithUTF8String:"void *MobileStoreDemoKitLibrary(void)"];
  [(NSAssertionHandler *)v2 handleFailureInFunction:v3, @"activation_support.m", 27, @"%s", *a1 file lineNumber description];

  __break(1u);
}

void __getMSDKManagedDeviceClass_block_invoke_cold_2()
{
  int v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"Class getMSDKManagedDeviceClass(void)_block_invoke"];
  [(NSAssertionHandler *)v0 handleFailureInFunction:v1, @"activation_support.m", 28, @"Unable to find class %s", "MSDKManagedDevice" file lineNumber description];

  __break(1u);
}

void copySplunkDeviceIdentifiers_cold_1()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0_0((void *)&_mh_execute_header, v0, v1, "Failed to allocate splunk queue.", v2, v3, v4, v5, v6);
}

void __writeSplunkLog_block_invoke_cold_1()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0_0((void *)&_mh_execute_header, v0, v1, "Invalid input.", v2, v3, v4, v5, v6);
}

void __writeSplunkLog_block_invoke_cold_2()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0_0((void *)&_mh_execute_header, v0, v1, "Failed to copy splunk path.", v2, v3, v4, v5, v6);
}

void __writeSplunkLog_block_invoke_cold_3()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0_0((void *)&_mh_execute_header, v0, v1, "Failed to create dictionary.", v2, v3, v4, v5, v6);
}

void __writeSplunkLog_block_invoke_cold_4()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to query splunk device identifiers: %@", v2, v3, v4, v5, v6);
}

void __writeSplunkLog_block_invoke_cold_5()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to serialize dictionary: %@", v2, v3, v4, v5, v6);
}

void __writeSplunkLog_block_invoke_cold_6(void *a1, NSObject *a2)
{
  [a1 length];
  OUTLINED_FUNCTION_3();
  __int16 v4 = 1024;
  int v5 = 0x100000;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Splunk log is too big (%ld > %d).", v3, 0x12u);
}

void __writeSplunkLog_block_invoke_cold_7()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_0_0((void *)&_mh_execute_header, v0, v1, "Failed to create new array.", v2, v3, v4, v5, v6);
}

void __writeSplunkLog_block_invoke_cold_8()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to serialize array: %@", v2, v3, v4, v5, v6);
}

void __writeSplunkLog_block_invoke_cold_9()
{
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_4((void *)&_mh_execute_header, v0, v1, "Failed to write %@: %@");
}

void __writeSplunkLog_block_invoke_cold_10(uint8_t *a1, void *a2, void *a3, NSObject *a4)
{
  id v7 = [a2 lastObject];
  *(_DWORD *)a1 = 138412290;
  *a3 = v7;
  _os_log_fault_impl((void *)&_mh_execute_header, a4, OS_LOG_TYPE_FAULT, "Too many splunk log files, removing %@.", a1, 0xCu);
}

void __writeSplunkLog_block_invoke_cold_11()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to query FindMy state: %@", v2, v3, v4, v5, v6);
}

void __writeSplunkLog_block_invoke_cold_12()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to query primary iCloud account security state: %@", v2, v3, v4, v5, v6);
}

void __writeSplunkLog_block_invoke_cold_13()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to query primary iCloud account state: %@", v2, v3, v4, v5, v6);
}

void __writeSplunkLog_block_invoke_cold_14()
{
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_4((void *)&_mh_execute_header, v0, v1, "Could not create %@: %@");
}

void __writeSplunkLog_block_invoke_45_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void __splunk_activity_handler_block_invoke_2_57_cold_1(uint64_t a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)uint64_t v3 = 138412546;
  *(void *)&v3[4] = *(void *)(a1 + 32);
  *(_WORD *)&uint8_t v3[12] = 2112;
  *(void *)&v3[14] = *(void *)(*(void *)(*(void *)a2 + 8) + 40);
  OUTLINED_FUNCTION_4((void *)&_mh_execute_header, a2, a3, "Failed to perform splunk logging (will not retry post => %@): %@", *(void *)v3, *(void *)&v3[8], *(void *)&v3[16]);
}

void __splunk_daily_stats_activity_handler_block_invoke_cold_1()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0((void *)&_mh_execute_header, v0, v1, "Failed to query daily splunk info: %@", v2, v3, v4, v5, v6);
}

void __getLAContextClass_block_invoke_cold_1(void *a1)
{
  uint64_t v2 = +[NSAssertionHandler currentHandler];
  uint64_t v3 = +[NSString stringWithUTF8String:"void *LocalAuthenticationLibrary(void)"];
  [(NSAssertionHandler *)v2 handleFailureInFunction:v3, @"identity_support.m", 21, @"%s", *a1 file lineNumber description];

  __break(1u);
}

void __getLAContextClass_block_invoke_cold_2()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"Class getLAContextClass(void)_block_invoke"];
  [(NSAssertionHandler *)v0 handleFailureInFunction:v1, @"identity_support.m", 22, @"Unable to find class %s", "LAContext" file lineNumber description];

  __break(1u);
}

void getAKAuthenticationPasswordKey_cold_1()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"NSString *getAKAuthenticationPasswordKey(void)"];
  [(NSAssertionHandler *)v0 handleFailureInFunction:v1, @"authkit.m", 24, @"%s", dlerror() file lineNumber description];

  __break(1u);
}

void getAKAuthenticationUsernameKey_cold_1()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"NSString *getAKAuthenticationUsernameKey(void)"];
  [(NSAssertionHandler *)v0 handleFailureInFunction:v1, @"authkit.m", 25, @"%s", dlerror() file lineNumber description];

  __break(1u);
}

void AuthKitLibrary_cold_1(void *a1)
{
  uint64_t v2 = +[NSAssertionHandler currentHandler];
  uint64_t v3 = +[NSString stringWithUTF8String:"void *AuthKitLibrary(void)"];
  [(NSAssertionHandler *)v2 handleFailureInFunction:v3, @"authkit.m", 21, @"%s", *a1 file lineNumber description];

  __break(1u);
}

void libavp_send_host_message_cold_1()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"CFDataRef gAppleVirtualPlatformSendSubsystemMessageToHost(AppleVirtualPlatformMessageSubsystem, CFDataRef, CFErrorRef *)"];
  [(NSAssertionHandler *)v0 handleFailureInFunction:v1, @"vm_libavp.m", 34, @"%s", dlerror() file lineNumber description];

  __break(1u);
}

void libavp_copy_strong_identity_data_cold_1()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"CFStringRef getkAppleVirtualPlatformGuestStrongIdentityOptionSynchronous(void)"];
  [(NSAssertionHandler *)v0 handleFailureInFunction:v1, @"vm_libavp.m", 38, @"%s", dlerror() file lineNumber description];

  __break(1u);
}

void libavp_copy_strong_identity_data_cold_2()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"CFStringRef getkAppleVirtualPlatformGuestStrongIdentityOptionCachedOnly(void)"];
  [(NSAssertionHandler *)v0 handleFailureInFunction:v1, @"vm_libavp.m", 41, @"%s", dlerror() file lineNumber description];

  __break(1u);
}

void libavp_copy_strong_identity_data_cold_3()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"CFDataRef gAppleVirtualPlatformGuestCopyStrongIdentityData(CFDictionaryRef, CFErrorRef *)"];
  [(NSAssertionHandler *)v0 handleFailureInFunction:v1, @"vm_libavp.m", 32, @"%s", dlerror() file lineNumber description];

  __break(1u);
}

void libavp_copy_strong_identity_data_cold_4()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"CFStringRef getkAppleVirtualPlatformGuestStrongIdentityOptionSynchronousTimeoutNsec(void)"];
  [(NSAssertionHandler *)v0 handleFailureInFunction:v1, @"vm_libavp.m", 44, @"%s", dlerror() file lineNumber description];

  __break(1u);
}

void libavp_guest_has_host_key_cold_1()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"_Bool gAppleVirtualPlatformGuestHasHostKey(void)"];
  [(NSAssertionHandler *)v0 handleFailureInFunction:v1, @"vm_libavp.m", 36, @"%s", dlerror() file lineNumber description];

  __break(1u);
}

void AppleVirtualPlatformLibrary_cold_1(void *a1)
{
  uint64_t v2 = +[NSAssertionHandler currentHandler];
  uint64_t v3 = +[NSString stringWithUTF8String:"void *AppleVirtualPlatformLibrary(void)"];
  [(NSAssertionHandler *)v2 handleFailureInFunction:v3, @"vm_libavp.m", 26, @"%s", *a1 file lineNumber description];

  __break(1u);
}

void isSupportedDeviceIdentityClient_cold_1(void *a1)
{
  id v1 = [a1 localizedDescription];
  int v2 = 138412290;
  id v3 = v1;
  _os_log_fault_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT, "%@", (uint8_t *)&v2, 0xCu);
}

void main_cold_1()
{
  id v1 = createAndLogError((uint64_t)"main", 331, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create serial queue.");
  OUTLINED_FUNCTION_0_1();
  id v2 = [v0 description];
  [v2 UTF8String];
  _os_crash();

  __break(1u);
}

void main_cold_2()
{
  id v1 = createAndLogError((uint64_t)"main", 338, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to create data ark.");
  OUTLINED_FUNCTION_0_1();
  id v2 = [v0 description];
  [v2 UTF8String];
  _os_crash();

  __break(1u);
}

void main_cold_3()
{
  id v1 = createAndLogError((uint64_t)"main", 386, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to initialize XPC server.");
  OUTLINED_FUNCTION_0_1();
  id v2 = [v0 description];
  [v2 UTF8String];
  _os_crash();

  __break(1u);
}

void main_cold_4()
{
  id v1 = createAndLogError((uint64_t)"main", 398, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to initialize lockdown server.");
  OUTLINED_FUNCTION_0_1();
  id v2 = [v0 description];
  [v2 UTF8String];
  _os_crash();

  __break(1u);
}

void main_cold_5(id a1)
{
  id v2 = createAndLogError((uint64_t)"main", 355, @"com.apple.MobileActivation.ErrorDomain", -1, a1, @"Migration failed.");
  OUTLINED_FUNCTION_0_1();
  id v3 = [v1 description];
  [v3 UTF8String];
  _os_crash();

  __break(1u);
}

void main_cold_6(id a1)
{
  id v2 = createAndLogError((uint64_t)"main", 344, @"com.apple.MobileActivation.ErrorDomain", -1, a1, @"Failed to perform boot initialization tasks.");
  OUTLINED_FUNCTION_0_1();
  id v3 = [v1 description];
  [v3 UTF8String];
  _os_crash();

  __break(1u);
}

void main_cold_7()
{
  uint64_t v0 = *__error();
  id v1 = __error();
  id v2 = strerror(*v1);
  id v3 = createAndLogError((uint64_t)"main", 306, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to retrieve password database info for user: %d (%s)", v0, v2);
  OUTLINED_FUNCTION_0_1();
  id v4 = [@"com.apple.MobileActivation.ErrorDomain" description];
  [v4 UTF8String];
  _os_crash();

  __break(1u);
}

void main_cold_8(id a1)
{
  id v2 = createAndLogError((uint64_t)"main", 296, @"com.apple.MobileActivation.ErrorDomain", -1, a1, @"Failed to set backup exclusion on container path.");
  OUTLINED_FUNCTION_0_1();
  id v3 = [v1 description];
  [v3 UTF8String];
  _os_crash();

  __break(1u);
}

void main_cold_9(id a1)
{
  id v2 = createAndLogError((uint64_t)"main", 290, @"com.apple.MobileActivation.ErrorDomain", -1, a1, @"Failed to get backup exclusion on container path.");
  OUTLINED_FUNCTION_0_1();
  id v3 = [v1 description];
  [v3 UTF8String];
  _os_crash();

  __break(1u);
}

void main_cold_10()
{
  id v0 = [(NSError *)createAndLogError((uint64_t)"main", 281, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to copy container path(s).") description];
  [v0 UTF8String];
  _os_crash();

  __break(1u);
}

void main_cold_11()
{
  uint64_t v0 = *__error();
  id v1 = __error();
  id v2 = strerror(*v1);
  id v3 = [(NSError *)createAndLogError((uint64_t)"main", 269, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Failed to set temporary directory subpath: %d (%s)", v0, v2) description];
  [v3 UTF8String];
  _os_crash();

  __break(1u);
}

void main_cold_12()
{
  uint64_t v0 = *__error();
  id v1 = __error();
  id v2 = strerror(*v1);
  id v3 = [(NSError *)createAndLogError((uint64_t)"main", 263, @"com.apple.MobileActivation.ErrorDomain", -1, 0, @"Error setting low space io policy: %d (%s)", v0, v2) description];
  [v3 UTF8String];
  _os_crash();

  __break(1u);
}

void __main_block_invoke_2_cold_1(id a1)
{
  id v2 = createAndLogError((uint64_t)"main_block_invoke_2", 377, @"com.apple.MobileActivation.ErrorDomain", -1, a1, @"Migration failed.");
  OUTLINED_FUNCTION_0_1();
  id v3 = [v1 description];
  [v3 UTF8String];
  _os_crash();

  __break(1u);
}

void __perform_boot_initialization_tasks_block_invoke_cold_1(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Failed to query monotonic clock: %@", (uint8_t *)&v2, 0xCu);
}

uint64_t CCDigest()
{
  return _CCDigest();
}

CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length)
{
  return _CFDataCreate(allocator, bytes, length);
}

void CFDataGetBytes(CFDataRef theData, CFRange range, UInt8 *buffer)
{
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return _CFDataGetLength(theData);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return _CFDictionaryGetValue(theDict, key);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return _CFPreferencesAppSynchronize(applicationID);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return _CFRetain(cf);
}

void CFRunLoopRun(void)
{
}

uint64_t DMGetUserDataDisposition()
{
  return _DMGetUserDataDisposition();
}

uint64_t DMPerformMigrationReturningAfterPlugin()
{
  return _DMPerformMigrationReturningAfterPlugin();
}

uint64_t DiagnosticLogSubmissionEnabled()
{
  return _DiagnosticLogSubmissionEnabled();
}

kern_return_t IOConnectCallMethod(mach_port_t connection, uint32_t selector, const uint64_t *input, uint32_t inputCnt, const void *inputStruct, size_t inputStructCnt, uint64_t *output, uint32_t *outputCnt, void *outputStruct, size_t *outputStructCnt)
{
  return _IOConnectCallMethod(connection, selector, input, inputCnt, inputStruct, inputStructCnt, output, outputCnt, outputStruct, outputStructCnt);
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return _IOObjectRelease(object);
}

uint64_t IOPSSetBatteryDateOfFirstUse()
{
  return _IOPSSetBatteryDateOfFirstUse();
}

CFTypeRef IORegistryEntryCreateCFProperty(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options)
{
  return _IORegistryEntryCreateCFProperty(entry, key, allocator, options);
}

io_registry_entry_t IORegistryEntryFromPath(mach_port_t mainPort, const io_string_t path)
{
  return _IORegistryEntryFromPath(mainPort, path);
}

kern_return_t IOServiceClose(io_connect_t connect)
{
  return _IOServiceClose(connect);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return _IOServiceGetMatchingService(mainPort, matching);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return _IOServiceMatching(name);
}

kern_return_t IOServiceOpen(io_service_t service, task_port_t owningTask, uint32_t type, io_connect_t *connect)
{
  return _IOServiceOpen(service, owningTask, type, connect);
}

uint64_t MAEPerformCollectionWithCompletion()
{
  return _MAEPerformCollectionWithCompletion();
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MOLogClose()
{
  return _MOLogClose();
}

uint64_t MOLogEnableDiskLogging()
{
  return _MOLogEnableDiskLogging();
}

uint64_t MOLogGetLogLevel()
{
  return _MOLogGetLogLevel();
}

uint64_t MOLogOpen()
{
  return _MOLogOpen();
}

uint64_t MOLogWrite()
{
  return _MOLogWrite();
}

uint64_t RPCopyProxyDictionaryWithOptions()
{
  return _RPCopyProxyDictionaryWithOptions();
}

uint64_t RPSetLogLevel()
{
  return _RPSetLogLevel();
}

uint64_t SecAccessControlCreate()
{
  return _SecAccessControlCreate();
}

SecAccessControlRef SecAccessControlCreateWithFlags(CFAllocatorRef allocator, CFTypeRef protection, SecAccessControlCreateFlags flags, CFErrorRef *error)
{
  return _SecAccessControlCreateWithFlags(allocator, protection, flags, error);
}

uint64_t SecAccessControlSetProtection()
{
  return _SecAccessControlSetProtection();
}

OSStatus SecCertificateCopyCommonName(SecCertificateRef certificate, CFStringRef *commonName)
{
  return _SecCertificateCopyCommonName(certificate, commonName);
}

CFDataRef SecCertificateCopyData(SecCertificateRef certificate)
{
  return _SecCertificateCopyData(certificate);
}

uint64_t SecCertificateCopyExtensionValue()
{
  return _SecCertificateCopyExtensionValue();
}

SecKeyRef SecCertificateCopyKey(SecCertificateRef certificate)
{
  return _SecCertificateCopyKey(certificate);
}

uint64_t SecCertificateCopyProperties()
{
  return _SecCertificateCopyProperties();
}

SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef allocator, CFDataRef data)
{
  return _SecCertificateCreateWithData(allocator, data);
}

uint64_t SecCertificateIsValid()
{
  return _SecCertificateIsValid();
}

uint64_t SecCertificateNotValidAfter()
{
  return _SecCertificateNotValidAfter();
}

uint64_t SecCertificateNotValidBefore()
{
  return _SecCertificateNotValidBefore();
}

uint64_t SecGenerateCertificateRequestWithParameters()
{
  return _SecGenerateCertificateRequestWithParameters();
}

OSStatus SecIdentityCopyCertificate(SecIdentityRef identityRef, SecCertificateRef *certificateRef)
{
  return _SecIdentityCopyCertificate(identityRef, certificateRef);
}

OSStatus SecIdentityCopyPrivateKey(SecIdentityRef identityRef, SecKeyRef *privateKeyRef)
{
  return _SecIdentityCopyPrivateKey(identityRef, privateKeyRef);
}

uint64_t SecIdentityCreate()
{
  return _SecIdentityCreate();
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return _SecItemAdd(attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return _SecItemCopyMatching(query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return _SecItemDelete(query);
}

OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
{
  return _SecItemUpdate(query, attributesToUpdate);
}

CFDictionaryRef SecKeyCopyAttributes(SecKeyRef key)
{
  return _SecKeyCopyAttributes(key);
}

CFDataRef SecKeyCopyExternalRepresentation(SecKeyRef key, CFErrorRef *error)
{
  return _SecKeyCopyExternalRepresentation(key, error);
}

SecKeyRef SecKeyCopyPublicKey(SecKeyRef key)
{
  return _SecKeyCopyPublicKey(key);
}

uint64_t SecKeyCopySystemKey()
{
  return _SecKeyCopySystemKey();
}

uint64_t SecKeyCreateAttestation()
{
  return _SecKeyCreateAttestation();
}

uint64_t SecKeyCreateDuplicate()
{
  return _SecKeyCreateDuplicate();
}

uint64_t SecKeyCreateRSAPublicKey()
{
  return _SecKeyCreateRSAPublicKey();
}

SecKeyRef SecKeyCreateRandomKey(CFDictionaryRef parameters, CFErrorRef *error)
{
  return _SecKeyCreateRandomKey(parameters, error);
}

CFDataRef SecKeyCreateSignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef dataToSign, CFErrorRef *error)
{
  return _SecKeyCreateSignature(key, algorithm, dataToSign, error);
}

SecKeyRef SecKeyCreateWithData(CFDataRef keyData, CFDictionaryRef attributes, CFErrorRef *error)
{
  return _SecKeyCreateWithData(keyData, attributes, error);
}

size_t SecKeyGetBlockSize(SecKeyRef key)
{
  return _SecKeyGetBlockSize(key);
}

OSStatus SecKeyRawSign(SecKeyRef key, SecPadding padding, const uint8_t *dataToSign, size_t dataToSignLen, uint8_t *sig, size_t *sigLen)
{
  return _SecKeyRawSign(key, padding, dataToSign, dataToSignLen, sig, sigLen);
}

OSStatus SecKeyRawVerify(SecKeyRef key, SecPadding padding, const uint8_t *signedData, size_t signedDataLen, const uint8_t *sig, size_t sigLen)
{
  return _SecKeyRawVerify(key, padding, signedData, signedDataLen, sig, sigLen);
}

uint64_t SecKeySetParameter()
{
  return _SecKeySetParameter();
}

uint64_t SecPolicyCreateAppleFDRProvisioning()
{
  return _SecPolicyCreateAppleFDRProvisioning();
}

SecPolicyRef SecPolicyCreateBasicX509(void)
{
  return _SecPolicyCreateBasicX509();
}

uint64_t SecPolicyCreateFactoryDeviceCertificate()
{
  return _SecPolicyCreateFactoryDeviceCertificate();
}

uint64_t SecPolicyCreateiPhoneActivation()
{
  return _SecPolicyCreateiPhoneActivation();
}

uint64_t SecPolicyCreateiPhoneDeviceCertificate()
{
  return _SecPolicyCreateiPhoneDeviceCertificate();
}

uint64_t SecTrustCopyFailureDescription()
{
  return _SecTrustCopyFailureDescription();
}

SecKeyRef SecTrustCopyPublicKey(SecTrustRef trust)
{
  return _SecTrustCopyPublicKey(trust);
}

OSStatus SecTrustCreateWithCertificates(CFTypeRef certificates, CFTypeRef policies, SecTrustRef *trust)
{
  return _SecTrustCreateWithCertificates(certificates, policies, trust);
}

OSStatus SecTrustEvaluate(SecTrustRef trust, SecTrustResultType *result)
{
  return _SecTrustEvaluate(trust, result);
}

OSStatus SecTrustSetAnchorCertificates(SecTrustRef trust, CFArrayRef anchorCertificates)
{
  return _SecTrustSetAnchorCertificates(trust, anchorCertificates);
}

uint64_t TMGetKernelMonotonicClock()
{
  return _TMGetKernelMonotonicClock();
}

uint64_t TMGetRTCResetCount()
{
  return _TMGetRTCResetCount();
}

uint64_t TMIsAutomaticTimeEnabled()
{
  return _TMIsAutomaticTimeEnabled();
}

void _Block_object_assign(void *a1, const void *a2, const int a3)
{
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

uint64_t _CFXPCCreateCFObjectFromXPCObject()
{
  return __CFXPCCreateCFObjectFromXPCObject();
}

uint64_t _CFXPCCreateXPCObjectFromCFObject()
{
  return __CFXPCCreateXPCObjectFromCFObject();
}

uint64_t _CTServerConnectionCopyPostponementStatus()
{
  return __CTServerConnectionCopyPostponementStatus();
}

uint64_t _CTServerConnectionCreate()
{
  return __CTServerConnectionCreate();
}

uint64_t _CTServerConnectionOTAActivationAssertionCreate()
{
  return __CTServerConnectionOTAActivationAssertionCreate();
}

uint64_t _CTServerConnectionSetPostponementTicket()
{
  return __CTServerConnectionSetPostponementTicket();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

int *__error(void)
{
  return ___error();
}

uint64_t __memcpy_chk()
{
  return ___memcpy_chk();
}

uint64_t __strlcpy_chk()
{
  return ___strlcpy_chk();
}

uint64_t _os_crash()
{
  return __os_crash();
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _set_user_dir_suffix()
{
  return __set_user_dir_suffix();
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

void bzero(void *a1, size_t a2)
{
}

void *__cdecl calloc(size_t __count, size_t __size)
{
  return _calloc(__count, __size);
}

uint64_t cc_clear()
{
  return _cc_clear();
}

uint64_t ccder_blob_decode_bitstring()
{
  return _ccder_blob_decode_bitstring();
}

uint64_t ccder_blob_decode_len()
{
  return _ccder_blob_decode_len();
}

uint64_t ccder_blob_decode_range()
{
  return _ccder_blob_decode_range();
}

uint64_t ccder_blob_decode_sequence_tl()
{
  return _ccder_blob_decode_sequence_tl();
}

uint64_t ccder_blob_decode_tag()
{
  return _ccder_blob_decode_tag();
}

uint64_t ccder_blob_decode_tl()
{
  return _ccder_blob_decode_tl();
}

uint64_t ccder_blob_decode_uint64()
{
  return _ccder_blob_decode_uint64();
}

uint64_t ccder_blob_encode_body()
{
  return _ccder_blob_encode_body();
}

uint64_t ccder_blob_encode_tl()
{
  return _ccder_blob_encode_tl();
}

uint64_t ccder_decode_rsa_pub_n()
{
  return _ccder_decode_rsa_pub_n();
}

uint64_t ccder_sizeof()
{
  return _ccder_sizeof();
}

uint64_t ccder_sizeof_len()
{
  return _ccder_sizeof_len();
}

uint64_t ccder_sizeof_tag()
{
  return _ccder_sizeof_tag();
}

uint64_t ccdigest()
{
  return _ccdigest();
}

uint64_t ccdigest_init()
{
  return _ccdigest_init();
}

uint64_t ccdigest_update()
{
  return _ccdigest_update();
}

uint64_t ccec_compact_import_pub()
{
  return _ccec_compact_import_pub();
}

uint64_t ccec_compressed_x962_export_pub()
{
  return _ccec_compressed_x962_export_pub();
}

uint64_t ccec_compressed_x962_export_pub_size()
{
  return _ccec_compressed_x962_export_pub_size();
}

uint64_t ccec_compressed_x962_import_pub()
{
  return _ccec_compressed_x962_import_pub();
}

uint64_t ccec_cp_256()
{
  return _ccec_cp_256();
}

uint64_t ccec_cp_384()
{
  return _ccec_cp_384();
}

uint64_t ccec_export_pub()
{
  return _ccec_export_pub();
}

uint64_t ccec_import_pub()
{
  return _ccec_import_pub();
}

uint64_t ccec_keysize_is_supported()
{
  return _ccec_keysize_is_supported();
}

uint64_t ccec_verify()
{
  return _ccec_verify();
}

uint64_t ccec_verify_composite()
{
  return _ccec_verify_composite();
}

uint64_t ccec_x963_import_pub_size()
{
  return _ccec_x963_import_pub_size();
}

uint64_t ccrsa_import_pub()
{
  return _ccrsa_import_pub();
}

uint64_t ccrsa_verify_pkcs1v15_allowshortsigs()
{
  return _ccrsa_verify_pkcs1v15_allowshortsigs();
}

uint64_t ccsha1_di()
{
  return _ccsha1_di();
}

uint64_t ccsha256_di()
{
  return _ccsha256_di();
}

uint64_t ccsha384_di()
{
  return _ccsha384_di();
}

uint64_t cczp_bitlen()
{
  return _cczp_bitlen();
}

int chmod(const char *a1, mode_t a2)
{
  return _chmod(a1, a2);
}

__uint64_t clock_gettime_nsec_np(clockid_t __clock_id)
{
  return _clock_gettime_nsec_np(__clock_id);
}

int close(int a1)
{
  return _close(a1);
}

uint64_t container_system_group_path_for_identifier()
{
  return _container_system_group_path_for_identifier();
}

uint64_t container_system_path_for_identifier()
{
  return _container_system_path_for_identifier();
}

double difftime(time_t a1, time_t a2)
{
  return _difftime(a1, a2);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_barrier_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_barrier_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_block_t dispatch_block_create_with_qos_class(dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block)
{
  return _dispatch_block_create_with_qos_class(flags, qos_class, relative_priority, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_release(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

char *dlerror(void)
{
  return _dlerror();
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

long double exp2(long double __x)
{
  return _exp2(__x);
}

int fprintf(FILE *a1, const char *a2, ...)
{
  return _fprintf(a1, a2);
}

void free(void *a1)
{
}

char *__cdecl getenv(const char *a1)
{
  return _getenv(a1);
}

pid_t getpid(void)
{
  return _getpid();
}

int getpwuid_r(uid_t a1, passwd *a2, char *a3, size_t a4, passwd **a5)
{
  return _getpwuid_r(a1, a2, a3, a4, a5);
}

uid_t getuid(void)
{
  return _getuid();
}

uint64_t lockdown_checkin_xpc()
{
  return _lockdown_checkin_xpc();
}

uint64_t lockdown_disconnect()
{
  return _lockdown_disconnect();
}

uint64_t lockdown_receive_message()
{
  return _lockdown_receive_message();
}

uint64_t lockdown_send_message()
{
  return _lockdown_send_message();
}

mach_msg_return_t mach_msg(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify)
{
  return _mach_msg(msg, option, send_size, rcv_size, rcv_name, timeout, notify);
}

void mach_msg_destroy(mach_msg_header_t *a1)
{
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_calloc(count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_malloc(size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return _memset(__b, __c, __len);
}

errno_t memset_s(void *__s, rsize_t __smax, int __c, rsize_t __n)
{
  return _memset_s(__s, __smax, __c, __n);
}

void mig_dealloc_reply_port(mach_port_t reply_port)
{
}

mach_port_t mig_get_reply_port(void)
{
  return _mig_get_reply_port();
}

void mig_put_reply_port(mach_port_t reply_port)
{
}

time_t mktime(tm *a1)
{
  return _mktime(a1);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

void objc_enumerationMutation(id obj)
{
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

int objc_sync_enter(id obj)
{
  return _objc_sync_enter(obj);
}

int objc_sync_exit(id obj)
{
  return _objc_sync_exit(obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

int open_dprotected_np(const char *a1, int a2, int a3, int a4, ...)
{
  return _open_dprotected_np(a1, a2, a3, a4);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return _os_signpost_enabled(log);
}

os_signpost_id_t os_signpost_id_make_with_pointer(os_log_t log, const void *ptr)
{
  return _os_signpost_id_make_with_pointer(log, ptr);
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

uint64_t os_variant_allows_internal_security_policies()
{
  return _os_variant_allows_internal_security_policies();
}

uint64_t os_variant_has_internal_diagnostics()
{
  return _os_variant_has_internal_diagnostics();
}

uint64_t os_variant_is_darwinos()
{
  return _os_variant_is_darwinos();
}

int proc_pidpath(int pid, void *buffer, uint32_t buffersize)
{
  return _proc_pidpath(pid, buffer, buffersize);
}

void qsort(void *__base, size_t __nel, size_t __width, int (__cdecl *__compar)(const void *, const void *))
{
}

uint64_t reboot3()
{
  return _reboot3();
}

uint64_t remote_device_copy_property()
{
  return _remote_device_copy_property();
}

uint64_t remote_device_copy_service()
{
  return _remote_device_copy_service();
}

uint64_t remote_device_copy_unique_of_type()
{
  return _remote_device_copy_unique_of_type();
}

uint64_t remote_device_get_state()
{
  return _remote_device_get_state();
}

uint64_t remote_device_set_connected_callback()
{
  return _remote_device_set_connected_callback();
}

int setiopolicy_np(int a1, int a2, int a3)
{
  return _setiopolicy_np(a1, a2, a3);
}

void (__cdecl *__cdecl signal(int a1, void (__cdecl *a2)(int)))(int)
{
  return _signal(a1, a2);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return _snprintf(__str, __size, __format);
}

char *__cdecl strcpy(char *__dst, const char *__src)
{
  return _strcpy(__dst, __src);
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

char *__cdecl strnstr(const char *__big, const char *__little, size_t __len)
{
  return _strnstr(__big, __little, __len);
}

char *__cdecl strptime(const char *a1, const char *a2, tm *a3)
{
  return _strptime(a1, a2, a3);
}

char *__cdecl strptime_l(const char *a1, const char *a2, tm *a3, locale_t a4)
{
  return _strptime_l(a1, a2, a3, a4);
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return _sysctlbyname(a1, a2, a3, a4, a5);
}

void syslog(int a1, const char *a2, ...)
{
}

time_t time(time_t *a1)
{
  return _time(a1);
}

time_t timegm(tm *const a1)
{
  return _timegm(a1);
}

BOOLean_t voucher_mach_msg_set(mach_msg_header_t *msg)
{
  return _voucher_mach_msg_set(msg);
}

ssize_t write(int __fd, const void *__buf, size_t __nbyte)
{
  return _write(__fd, __buf, __nbyte);
}

xpc_object_t xpc_activity_copy_criteria(xpc_activity_t activity)
{
  return _xpc_activity_copy_criteria(activity);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return _xpc_activity_get_state(activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return _xpc_activity_set_state(activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return _xpc_activity_should_defer(activity);
}

void xpc_activity_unregister(const char *identifier)
{
}

char *__cdecl xpc_copy_description(xpc_object_t object)
{
  return _xpc_copy_description(object);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return _xpc_dictionary_create(keys, values, count);
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return _xpc_dictionary_create_reply(original);
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_BOOL(xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_value(xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return _xpc_get_type(object);
}

uint64_t xpc_remote_connection_activate()
{
  return _xpc_remote_connection_activate();
}

uint64_t xpc_remote_connection_create_remote_service_listener()
{
  return _xpc_remote_connection_create_remote_service_listener();
}

uint64_t xpc_remote_connection_create_with_remote_service()
{
  return _xpc_remote_connection_create_with_remote_service();
}

uint64_t xpc_remote_connection_send_message()
{
  return _xpc_remote_connection_send_message();
}

uint64_t xpc_remote_connection_send_message_with_reply_sync()
{
  return _xpc_remote_connection_send_message_with_reply_sync();
}

uint64_t xpc_remote_connection_set_event_handler()
{
  return _xpc_remote_connection_set_event_handler();
}

uint64_t xpc_remote_connection_set_target_queue()
{
  return _xpc_remote_connection_set_target_queue();
}

uint64_t xpc_uint64_get_value(xpc_object_t xuint)
{
  return _xpc_uint64_get_value(xuint);
}

uint64_t xpc_user_sessions_enabled()
{
  return _xpc_user_sessions_enabled();
}

id objc_msgSend_HTTPBody(void *a1, const char *a2, ...)
{
  return [a1 HTTPBody];
}

id objc_msgSend_HTTPMethod(void *a1, const char *a2, ...)
{
  return [a1 HTTPMethod];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return [a1 URL];
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return [a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return [a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return [a1 UUIDString];
}

id objc_msgSend_activationNonce(void *a1, const char *a2, ...)
{
  return [a1 activationNonce];
}

id objc_msgSend_activationSessionClientName(void *a1, const char *a2, ...)
{
  return [a1 activationSessionClientName];
}

id objc_msgSend_allHTTPHeaderFields(void *a1, const char *a2, ...)
{
  return [a1 allHTTPHeaderFields];
}

id objc_msgSend_allHeaderFields(void *a1, const char *a2, ...)
{
  return [a1 allHeaderFields];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return [a1 allKeys];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return [a1 allObjects];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return [a1 allValues];
}

id objc_msgSend_allowInvalidCert(void *a1, const char *a2, ...)
{
  return [a1 allowInvalidCert];
}

id objc_msgSend_alphanumericCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 alphanumericCharacterSet];
}

id objc_msgSend_authenticationMethod(void *a1, const char *a2, ...)
{
  return [a1 authenticationMethod];
}

id objc_msgSend_available(void *a1, const char *a2, ...)
{
  return [a1 available];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return [a1 BOOLValue];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return [a1 bytes];
}

id objc_msgSend_callingProcessName(void *a1, const char *a2, ...)
{
  return [a1 callingProcessName];
}

id objc_msgSend_clearOwnershipWarning(void *a1, const char *a2, ...)
{
  return [a1 clearOwnershipWarning];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return [a1 code];
}

id objc_msgSend_collectionLibraryLoaded(void *a1, const char *a2, ...)
{
  return [a1 collectionLibraryLoaded];
}

id objc_msgSend_connectionAvailability(void *a1, const char *a2, ...)
{
  return [a1 connectionAvailability];
}

id objc_msgSend_connectionAvailabilityTwo(void *a1, const char *a2, ...)
{
  return [a1 connectionAvailabilityTwo];
}

id objc_msgSend_connectionProxyDictionary(void *a1, const char *a2, ...)
{
  return [a1 connectionProxyDictionary];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return [a1 copy];
}

id objc_msgSend_copyBootArgs(void *a1, const char *a2, ...)
{
  return [a1 copyBootArgs];
}

id objc_msgSend_copyBootSessionUUID(void *a1, const char *a2, ...)
{
  return [a1 copyBootSessionUUID];
}

id objc_msgSend_copyIngestURL(void *a1, const char *a2, ...)
{
  return [a1 copyIngestURL];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return [a1 count];
}

id objc_msgSend_creationQueue(void *a1, const char *a2, ...)
{
  return [a1 creationQueue];
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return [a1 currentCalendar];
}

id objc_msgSend_currentConnection(void *a1, const char *a2, ...)
{
  return [a1 currentConnection];
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return [a1 currentHandler];
}

id objc_msgSend_currentSessionDuration(void *a1, const char *a2, ...)
{
  return [a1 currentSessionDuration];
}

id objc_msgSend_dark(void *a1, const char *a2, ...)
{
  return [a1 dark];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return [a1 data];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return [a1 date];
}

id objc_msgSend_day(void *a1, const char *a2, ...)
{
  return [a1 day];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return [a1 defaultManager];
}

id objc_msgSend_defaultSessionConfiguration(void *a1, const char *a2, ...)
{
  return [a1 defaultSessionConfiguration];
}

id objc_msgSend_deleteExpiredLogFiles(void *a1, const char *a2, ...)
{
  return [a1 deleteExpiredLogFiles];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return [a1 description];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return [a1 domain];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return [a1 doubleValue];
}

id objc_msgSend_dualSIMCapable(void *a1, const char *a2, ...)
{
  return [a1 dualSIMCapable];
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return [a1 fileSystemRepresentation];
}

id objc_msgSend_fmipAccount(void *a1, const char *a2, ...)
{
  return [a1 fmipAccount];
}

id objc_msgSend_getSharedInstance(void *a1, const char *a2, ...)
{
  return [a1 getSharedInstance];
}

id objc_msgSend_hexString(void *a1, const char *a2, ...)
{
  return [a1 hexString];
}

id objc_msgSend_hostKey(void *a1, const char *a2, ...)
{
  return [a1 hostKey];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return [a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return [a1 integerValue];
}

id objc_msgSend_intermediateCertificate(void *a1, const char *a2, ...)
{
  return [a1 intermediateCertificate];
}

id objc_msgSend_invalidateAndCancel(void *a1, const char *a2, ...)
{
  return [a1 invalidateAndCancel];
}

id objc_msgSend_isPresent(void *a1, const char *a2, ...)
{
  return [a1 isPresent];
}

id objc_msgSend_lastConnectionAvailabilityError(void *a1, const char *a2, ...)
{
  return [a1 lastConnectionAvailabilityError];
}

id objc_msgSend_lastConnectionAvailabilityTwoError(void *a1, const char *a2, ...)
{
  return [a1 lastConnectionAvailabilityTwoError];
}

id objc_msgSend_lastNetworkError(void *a1, const char *a2, ...)
{
  return [a1 lastNetworkError];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return [a1 lastObject];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return [a1 lastPathComponent];
}

id objc_msgSend_lastPhoneNumberError(void *a1, const char *a2, ...)
{
  return [a1 lastPhoneNumberError];
}

id objc_msgSend_lastPhoneNumberTwoError(void *a1, const char *a2, ...)
{
  return [a1 lastPhoneNumberTwoError];
}

id objc_msgSend_lastSimStatusError(void *a1, const char *a2, ...)
{
  return [a1 lastSimStatusError];
}

id objc_msgSend_lastSimStatusTwoError(void *a1, const char *a2, ...)
{
  return [a1 lastSimStatusTwoError];
}

id objc_msgSend_leafCertificate(void *a1, const char *a2, ...)
{
  return [a1 leafCertificate];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return [a1 length];
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return [a1 localizedDescription];
}

id objc_msgSend_logHandle(void *a1, const char *a2, ...)
{
  return [a1 logHandle];
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return [a1 longLongValue];
}

id objc_msgSend_maskedAppleID(void *a1, const char *a2, ...)
{
  return [a1 maskedAppleID];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return [a1 mutableCopy];
}

id objc_msgSend_networkPathEvaluator(void *a1, const char *a2, ...)
{
  return [a1 networkPathEvaluator];
}

id objc_msgSend_networkReachable(void *a1, const char *a2, ...)
{
  return [a1 networkReachable];
}

id objc_msgSend_number(void *a1, const char *a2, ...)
{
  return [a1 number];
}

id objc_msgSend_otaActivationAssertion(void *a1, const char *a2, ...)
{
  return [a1 otaActivationAssertion];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return [a1 path];
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return [a1 pathExtension];
}

id objc_msgSend_phoneNumber(void *a1, const char *a2, ...)
{
  return [a1 phoneNumber];
}

id objc_msgSend_phoneNumberTwo(void *a1, const char *a2, ...)
{
  return [a1 phoneNumberTwo];
}

id objc_msgSend_previousFailureCount(void *a1, const char *a2, ...)
{
  return [a1 previousFailureCount];
}

id objc_msgSend_primaryAuthKitAccount(void *a1, const char *a2, ...)
{
  return [a1 primaryAuthKitAccount];
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return [a1 processIdentifier];
}

id objc_msgSend_protectionSpace(void *a1, const char *a2, ...)
{
  return [a1 protectionSpace];
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return [a1 queue];
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return [a1 removeLastObject];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return [a1 resume];
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return [a1 reverseObjectEnumerator];
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return [a1 scheme];
}

id objc_msgSend_serverTrust(void *a1, const char *a2, ...)
{
  return [a1 serverTrust];
}

id objc_msgSend_session(void *a1, const char *a2, ...)
{
  return [a1 session];
}

id objc_msgSend_sessionHelloMessage(void *a1, const char *a2, ...)
{
  return [a1 sessionHelloMessage];
}

id objc_msgSend_sessionQueue(void *a1, const char *a2, ...)
{
  return [a1 sessionQueue];
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return [a1 sharedConnection];
}

id objc_msgSend_sharedDataAccessor(void *a1, const char *a2, ...)
{
  return [a1 sharedDataAccessor];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return [a1 sharedInstance];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return [a1 sharedManager];
}

id objc_msgSend_signingKey(void *a1, const char *a2, ...)
{
  return [a1 signingKey];
}

id objc_msgSend_simStatus(void *a1, const char *a2, ...)
{
  return [a1 simStatus];
}

id objc_msgSend_simStatusTwo(void *a1, const char *a2, ...)
{
  return [a1 simStatusTwo];
}

id objc_msgSend_slotID(void *a1, const char *a2, ...)
{
  return [a1 slotID];
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return [a1 status];
}

id objc_msgSend_statusCode(void *a1, const char *a2, ...)
{
  return [a1 statusCode];
}

id objc_msgSend_store(void *a1, const char *a2, ...)
{
  return [a1 store];
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return [a1 stringValue];
}

id objc_msgSend_telephonyClient(void *a1, const char *a2, ...)
{
  return [a1 telephonyClient];
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return [a1 timeIntervalSince1970];
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return [a1 timeIntervalSinceReferenceDate];
}

id objc_msgSend_timeoutInterval(void *a1, const char *a2, ...)
{
  return [a1 timeoutInterval];
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedIntValue];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedIntegerValue];
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedLongLongValue];
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return [a1 uppercaseString];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return [a1 userInfo];
}

id objc_msgSend_uuid(void *a1, const char *a2, ...)
{
  return [a1 uuid];
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return [a1 whitespaceCharacterSet];
}

id objc_msgSend_xpcQueue(void *a1, const char *a2, ...)
{
  return [a1 xpcQueue];
}