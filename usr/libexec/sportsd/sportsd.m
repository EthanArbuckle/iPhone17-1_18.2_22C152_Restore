int main(int argc, const char **argv, const char **envp)
{
  id v3;

  if (qword_1000FBD68 != -1) {
    swift_once();
  }
  sub_100031CAC();
  if (qword_1000FBD60 != -1) {
    swift_once();
  }
  v3 = [self mainRunLoop];
  [v3 run];

  exit(1);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for AMSError(uint64_t a1)
{
}

uint64_t sub_100003A08(uint64_t a1, id *a2)
{
  return sub_1000046C4(a1, a2);
}

uint64_t sub_100003A20(uint64_t a1, id *a2)
{
  return sub_100004644(a1, a2) & 1;
}

id sub_100003A3C()
{
  return *v0;
}

uint64_t sub_100003A44@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_100003A4C()
{
  return sub_100004894(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

NSString sub_100003A7C@<X0>(void *a1@<X8>)
{
  NSString result = sub_10000473C();
  *a1 = result;
  return result;
}

uint64_t sub_100003AA4()
{
  return sub_100004894(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100003AD4()
{
  return sub_10000457C();
}

Swift::Int sub_100003AF0()
{
  return sub_1000045D0();
}

uint64_t sub_100003AFC()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100003B0C(uint64_t a1)
{
  uint64_t v2 = sub_100004130(&qword_1000FBED8, type metadata accessor for AMSError);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_100003B78()
{
  sub_100004130(&qword_1000FBED8, type metadata accessor for AMSError);

  return _BridgedStoredNSError.errorUserInfo.getter();
}

uint64_t sub_100003BE4(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100004130(&qword_1000FBED8, type metadata accessor for AMSError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_100003C74()
{
  return sub_100004774(*v0);
}

uint64_t sub_100003C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100004130(&qword_1000FBED8, type metadata accessor for AMSError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_100003CF8()
{
  return Hasher._finalize()();
}

void sub_100003D58(uint64_t a1@<X8>)
{
  sub_100003D8C();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3 & 1;
}

uint64_t sub_100003D94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_100003DC4()
{
  return sub_1000044E8() & 1;
}

uint64_t sub_100003DEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100003E18(uint64_t a1)
{
  uint64_t v2 = sub_100004130(&qword_1000FBF98, type metadata accessor for AMSBagKey);
  uint64_t v3 = sub_100004130((unint64_t *)&unk_1000FBFA0, type metadata accessor for AMSBagKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100003ED4(uint64_t a1)
{
  uint64_t v2 = sub_100004130(&qword_1000FBEA0, type metadata accessor for AMSError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100003F40(uint64_t a1)
{
  uint64_t v2 = sub_100004130(&qword_1000FBEA0, type metadata accessor for AMSError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_100003FB0(uint64_t a1)
{
  uint64_t v2 = sub_100004130(&qword_1000FBED8, type metadata accessor for AMSError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10000401C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100004130(&qword_1000FBED8, type metadata accessor for AMSError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_1000040A0()
{
  return sub_100004130(&qword_1000FBE90, type metadata accessor for AMSError);
}

uint64_t sub_1000040E8()
{
  return sub_100004130(&qword_1000FBE98, type metadata accessor for AMSError);
}

uint64_t sub_100004130(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100004178()
{
  return sub_100004130(&qword_1000FBEA0, type metadata accessor for AMSError);
}

uint64_t sub_1000041C0()
{
  return sub_100004130(&qword_1000FBEA8, type metadata accessor for AMSError);
}

uint64_t sub_100004208()
{
  return sub_100004130(&qword_1000FBEB0, type metadata accessor for AMSError);
}

uint64_t sub_100004250()
{
  return sub_100004130(&qword_1000FBEB8, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_1000042AC()
{
  return sub_100004130(&qword_1000FBEC0, type metadata accessor for Code);
}

unint64_t sub_1000042F8()
{
  unint64_t result = qword_1000FBEC8;
  if (!qword_1000FBEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FBEC8);
  }
  return result;
}

uint64_t sub_100004344()
{
  return sub_100004130(&qword_1000FBED0, type metadata accessor for Code);
}

uint64_t sub_10000438C()
{
  return sub_100004130(&qword_1000FBED8, type metadata accessor for AMSError);
}

BOOL sub_1000043D4(uint64_t *a1, uint64_t *a2)
{
  return sub_100004570(*a1, *a2);
}

uint64_t sub_1000043E0@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_10000442C(uint64_t a1)
{
  uint64_t v2 = sub_100004130((unint64_t *)&qword_1000FBF68, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_100004130(&qword_1000FBF70, type metadata accessor for FileAttributeKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000044E8()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_100004570(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_10000457C()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000045D0()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100004644(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1000046C4(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

NSString sub_10000473C()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100004774(void *a1)
{
  id v1 = a1;
  uint64_t v2 = NSObject.hashValue.getter();

  return v2;
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

uint64_t sub_1000047BC()
{
  return sub_100004130(&qword_1000FBF50, type metadata accessor for FileAttributeKey);
}

uint64_t sub_100004804()
{
  return sub_100004130(&qword_1000FBF58, type metadata accessor for FileAttributeKey);
}

uint64_t sub_10000484C()
{
  return sub_100004130(&qword_1000FBF60, type metadata accessor for FileAttributeKey);
}

uint64_t sub_100004894(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

void type metadata accessor for AMSBagKey(uint64_t a1)
{
}

void sub_1000048E8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_100004930()
{
  return sub_100004130(&qword_1000FBF80, type metadata accessor for AMSBagKey);
}

uint64_t sub_100004978()
{
  return sub_100004130(&qword_1000FBF88, type metadata accessor for AMSBagKey);
}

uint64_t sub_1000049C0()
{
  return sub_100004130(&qword_1000FBF90, type metadata accessor for AMSBagKey);
}

uint64_t sub_100004A1C()
{
  id v0 = [self mainBundle];
  uint64_t v1 = sub_100007BA4(v0);
  if (!v1)
  {
    long long v4 = 0u;
    long long v5 = 0u;
    goto LABEL_6;
  }
  sub_100090720(v1, &v4);
  swift_bridgeObjectRelease();
  if (!*((void *)&v5 + 1))
  {
LABEL_6:
    sub_1000095CC((uint64_t)&v4, (uint64_t *)&unk_1000FC300);
    return 3157555;
  }
  if (swift_dynamicCast()) {
    return v3;
  }
  return 3157555;
}

void sub_100004AF4()
{
  sub_1000098B8();
  uint64_t v1 = v0;
  char v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = sub_100005E5C(&qword_1000FC158);
  __chkstk_darwin(v10 - 8);
  sub_10000987C();
  uint64_t v11 = type metadata accessor for JSONDecoder.DateDecodingStrategy();
  sub_100009830();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1000098F8();
  v17 = (void *)(v16 - v15);
  *(unsigned char *)(v9 + 48) = v3;
  sub_100008B98(v1, v9 + 56);
  sub_100008BFC(v7, (uint64_t)&v35, &qword_1000FC160);
  if (v36)
  {
    sub_100008CAC(&v35, (uint64_t)&v38);
    sub_100008CAC(&v38, v9);
  }
  else
  {
    sub_1000095CC((uint64_t)&v35, &qword_1000FC160);
    NSString v18 = String._bridgeToObjectiveC()();
    char v19 = MGGetBoolAnswer();

    uint64_t v34 = v7;
    if (v19)
    {
      type metadata accessor for BagProvider();
      type metadata accessor for ContainerConstants();
      static ContainerConstants.tempoUrlUserDefaultKey.getter();
      sub_10002B0A4();
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v33 = v21 != 0;
    }
    else
    {
      char v33 = 0;
    }
    id v22 = [self defaultSessionConfiguration];
    id v23 = [objc_allocWithZone((Class)AMSURLSession) initWithConfiguration:v22];

    if (qword_1000FBE38 != -1) {
      swift_once();
    }
    uint64_t v24 = qword_10010A5E8;
    uint64_t v36 = type metadata accessor for SportsPerformanceMeasurement();
    v37 = &off_1000F5568;
    *(void *)&long long v35 = v24;
    swift_retain();
    unint64_t v25 = sub_1000522C4();
    uint64_t v27 = v26;
    v39 = &type metadata for ApiAgent;
    v40 = &off_1000F15B0;
    *(void *)&long long v38 = swift_allocObject();
    sub_100027480(v23, (uint64_t)&v35, v33, v25, v27, (void *)(v38 + 16));

    swift_bridgeObjectRelease();
    sub_100006178((uint64_t)&v35);
    sub_100008CAC(&v38, v9);
    uint64_t v7 = v34;
  }
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  uint64_t v28 = JSONDecoder.init()();
  void *v17 = sub_100038748;
  v17[1] = 0;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v17, enum case for JSONDecoder.DateDecodingStrategy.custom(_:), v11);
  dispatch thunk of JSONDecoder.dateDecodingStrategy.setter();
  uint64_t v29 = v5;
  if (!v5)
  {
    swift_retain();
    uint64_t v29 = v28;
  }
  *(void *)(v9 + 40) = v29;
  swift_retain();
  swift_retain();
  static SportsJSONContext.Property<A>.initFailureObserver.getter();
  uint64_t v30 = type metadata accessor for DefaultSportsJSONInitFailureObserver();
  swift_allocObject();
  uint64_t v31 = DefaultSportsJSONInitFailureObserver.init()();
  v39 = (ValueMetadata *)v30;
  v40 = (_UNKNOWN **)&protocol witness table for DefaultSportsJSONInitFailureObserver;
  *(void *)&long long v38 = v31;
  v32 = (void (*)(long long *, void))dispatch thunk of JSONDecoder.userInfo.modify();
  sub_100005E5C(&qword_1000FC168);
  Dictionary<>.subscript.setter();
  v32(&v35, 0);
  swift_release();
  swift_release();
  swift_release();
  sub_100006178(v1);
  sub_1000095CC(v7, &qword_1000FC160);
  sub_1000098A0();
}

void sub_100004EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  sub_1000098B8();
  char v44 = v24;
  char v45 = v23;
  uint64_t v40 = v25;
  uint64_t v41 = v26;
  uint64_t v42 = v27;
  uint64_t v43 = v28;
  uint64_t v39 = v29;
  uint64_t v38 = v30;
  uint64_t v46 = sub_100005E5C(&qword_1000FC170);
  sub_100009830();
  uint64_t v32 = v31;
  __chkstk_darwin(v33);
  sub_100009864();
  sub_100005E5C(&qword_1000FC178);
  sub_100009830();
  __chkstk_darwin(v34);
  sub_10000987C();
  v47[0] = *(void *)(*sub_100005EA0((void *)(v21 + 56), *(void *)(v21 + 80)) + 24);
  v47[12] = *(void *)(*sub_100005EA0((void *)(v21 + 56), *(void *)(v21 + 80)) + 48);
  swift_retain();
  swift_retain();
  sub_100005E5C(&qword_1000FC080);
  sub_100005E5C(&qword_1000FC180);
  sub_10000953C(&qword_1000FC090, &qword_1000FC080);
  sub_10000953C(&qword_1000FC188, &qword_1000FC180);
  Publishers.Zip.init(_:_:)();
  sub_1000060E8(v21, (uint64_t)v47);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v40;
  *(void *)(v35 + 24) = v41;
  *(void *)(v35 + 32) = v38;
  *(void *)(v35 + 40) = v39;
  *(void *)(v35 + 48) = v42;
  *(void *)(v35 + 56) = v43;
  *(unsigned char *)(v35 + 64) = v44;
  *(unsigned char *)(v35 + 65) = v45;
  memcpy((void *)(v35 + 72), v47, 0x60uLL);
  *(void *)(v35 + 168) = a21;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_100009248;
  *(void *)(v36 + 24) = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Subscribers.Demand.unlimited.getter();
  sub_100005E5C(&qword_1000FC190);
  sub_10000953C(&qword_1000FC198, &qword_1000FC170);
  sub_10000953C(&qword_1000FC1A0, &qword_1000FC190);
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v22, v46);
  sub_10000953C(&qword_1000FC1A8, &qword_1000FC178);
  Publisher.eraseToAnyPublisher()();
  sub_100009894();
  v37();
  sub_1000098A0();
}

uint64_t sub_100005264(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, unsigned __int8 a10, unsigned __int8 a11, void *a12, uint64_t a13)
{
  v98._countAndFlagsBits = a2;
  v98._object = a3;
  uint64_t v100 = a1;
  uint64_t v18 = sub_100005E5C(&qword_1000FC1B8);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for URL();
  __chkstk_darwin(v22);
  __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v85 - v27;
  uint64_t v29 = HIBYTE(a5) & 0xF;
  unint64_t v99 = a5;
  if ((a5 & 0x2000000000000000) == 0) {
    uint64_t v29 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v29)
  {
    uint64_t v35 = 0xD000000000000012;
    uint64_t v36 = 0x80000001000D0CC0;
LABEL_19:
    uint64_t v102 = (uint64_t)sub_10002EEB8(1u, v35, v36);
    sub_100005E5C(&qword_1000FC1D0);
    sub_100005E5C((uint64_t *)&unk_1000FDA30);
    Fail.init(error:)();
    sub_10000953C(&qword_1000FC1D8, &qword_1000FC1B8);
    uint64_t v49 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    return v49;
  }
  uint64_t v30 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v30 = a6 & 0xFFFFFFFFFFFFLL;
  }
  if (!v30)
  {
    uint64_t v36 = 0x80000001000D0CA0;
    uint64_t v35 = 0xD000000000000014;
    goto LABEL_19;
  }
  uint64_t v31 = a6;
  uint64_t v92 = v26;
  v93 = v25;
  uint64_t v97 = v24;
  if (!a9) {
    goto LABEL_13;
  }
  uint64_t v32 = HIBYTE(a9) & 0xF;
  if ((a9 & 0x2000000000000000) == 0) {
    uint64_t v32 = a8 & 0xFFFFFFFFFFFFLL;
  }
  if (v32)
  {
    uint64_t v102 = a8;
    unint64_t v103 = a9;
    swift_bridgeObjectRetain();
    v33._countAndFlagsBits = 58;
    v33._object = (void *)0xE100000000000000;
    String.append(_:)(v33);
    v34._countAndFlagsBits = a6;
    v34._object = (void *)a7;
    String.append(_:)(v34);
    uint64_t v31 = v102;
    a7 = v103;
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRetain();
  }
  unint64_t v94 = a7;
  if (qword_1000FBDC8 != -1) {
    swift_once();
  }
  unsigned __int8 v37 = a10;
  uint64_t v38 = type metadata accessor for Logger();
  uint64_t v39 = sub_10000929C(v38, (uint64_t)qword_10010A520);
  uint64_t v40 = v97;
  v90 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 16);
  uint64_t v91 = v97 + 16;
  v90(v28, v100, v22);
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.debug.getter();
  BOOL v43 = os_log_type_enabled(v41, v42);
  uint64_t v95 = v22;
  uint64_t v96 = a4;
  if (v43)
  {
    uint64_t v44 = swift_slowAlloc();
    uint64_t v88 = v39;
    char v45 = (uint8_t *)v44;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v89 = v31;
    uint64_t v102 = v46;
    LODWORD(v87) = a10;
    *(_DWORD *)char v45 = 136315138;
    sub_100009480(&qword_1000FC1C8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v101 = sub_100017098(v47, v48, &v102);
    unsigned __int8 v37 = v87;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v22);
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Tempo /register base url: %s", v45, 0xCu);
    swift_arrayDestroy();
    uint64_t v31 = v89;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v22);
  }

  uint64_t v50 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v51 = v50;
  if (v37)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v102 = v51;
    sub_1000C0CAC();
    uint64_t v88 = v102;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v88 = v50;
  }
  uint64_t v89 = a13;
  v87 = a12;
  int v86 = a11;
  v104 = &type metadata for TVAppFeatureFlags;
  unint64_t v105 = sub_1000092D4();
  char v52 = isFeatureEnabled(_:)();
  sub_100006178((uint64_t)&v102);
  if (v52)
  {
    uint64_t v102 = 791901743;
    unint64_t v103 = 0xE400000000000000;
    String.append(_:)(v98);
    v53._object = (void *)0xE900000000000072;
    v53._countAndFlagsBits = 0x657473696765722FLL;
    String.append(_:)(v53);
    uint64_t v54 = v102;
    v55 = (void *)v103;
  }
  else
  {
    v55 = (void *)0xEC00000072657473;
    uint64_t v54 = 0x696765722F33762FLL;
  }
  swift_bridgeObjectRetain_n();
  v56 = Logger.logObject.getter();
  os_log_type_t v57 = static os_log_type_t.debug.getter();
  BOOL v58 = os_log_type_enabled(v56, v57);
  v98._countAndFlagsBits = v54;
  v98._object = v55;
  if (v58)
  {
    v59 = (uint8_t *)swift_slowAlloc();
    uint64_t v102 = swift_slowAlloc();
    *(_DWORD *)v59 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v101 = sub_100017098(v54, (unint64_t)v55, &v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v56, v57, "Tempo /register path: %s", v59, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v60 = v95;
  v61 = v93;
  v90(v93, v100, v95);
  v90 = (void (*)(char *, uint64_t, uint64_t))sub_100004A1C();
  uint64_t v85 = v62;
  sub_100080A48(v86);
  uint64_t v100 = v63;
  uint64_t v91 = v64;
  sub_100005E5C(&qword_1000FC1C0);
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_1000CABA0;
  unint64_t v66 = v94;
  *(void *)(v65 + 32) = v31;
  *(void *)(v65 + 40) = v66;
  unint64_t v67 = v99;
  swift_bridgeObjectRetain();
  uint64_t v68 = sub_1000804E0();
  uint64_t v69 = v97;
  uint64_t v70 = v60;
  unint64_t v71 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
  uint64_t v72 = v71 + v92;
  unint64_t v73 = (v71 + v92) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v74 = swift_allocObject();
  unint64_t v75 = v73 + v74;
  object = v98._object;
  *(void *)(v74 + 16) = v98._countAndFlagsBits;
  *(void *)(v74 + 24) = object;
  (*(void (**)(unint64_t, char *, uint64_t))(v69 + 32))(v74 + v71, v61, v70);
  *(unsigned char *)(v74 + v72) = 1;
  uint64_t v77 = v85;
  *(void *)(v75 + 8) = v90;
  *(void *)(v75 + 16) = v77;
  *(void *)(v75 + 24) = 0x302E302E31;
  *(void *)(v75 + 32) = 0xE500000000000000;
  *(void *)(v75 + 40) = v96;
  *(void *)(v75 + 48) = v67;
  *(void *)(v75 + 56) = 0x544E455645;
  *(void *)(v75 + 64) = 0xE500000000000000;
  uint64_t v78 = v91;
  *(void *)(v75 + 72) = v100;
  *(void *)(v75 + 80) = v78;
  uint64_t v79 = v88;
  *(void *)(v75 + 88) = v65;
  *(void *)(v75 + 96) = v79;
  *(unsigned char *)(v75 + 104) = 1;
  *(void *)(v75 + 112) = v68;
  v80 = v87;
  v81 = sub_100005EA0(v87, v87[3]);
  uint64_t v82 = v80[5];
  uint64_t v83 = v89;
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_100007C98((uint64_t)sub_100009418, v74, v83, 0, v82, (uint64_t)v81);
  swift_bridgeObjectRelease();
  swift_release();
  return v49;
}

uint64_t sub_100005B4C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void, void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_100005E5C(&qword_1000FC1B0);
  uint64_t result = a2(a1, *(void *)(a1 + *(int *)(v6 + 48)), *(void *)(a1 + *(int *)(v6 + 48) + 8));
  *a3 = result;
  return result;
}

void sub_100005BA8()
{
  sub_1000098B8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_100005E5C(&qword_1000FC070);
  sub_100009830();
  __chkstk_darwin(v8);
  sub_100009864();
  sub_100005E5C(&qword_1000FC078);
  sub_100009830();
  __chkstk_darwin(v9);
  sub_10000987C();
  uint64_t v14 = *(void *)(*sub_100005EA0((void *)(v1 + 56), *(void *)(v1 + 80)) + 24);
  sub_1000060E8(v1, (uint64_t)v13);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v7;
  v10[3] = v5;
  memcpy(v10 + 4, v13, 0x60uLL);
  v10[16] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Subscribers.Demand.unlimited.getter();
  sub_100005E5C(&qword_1000FC080);
  sub_100005E5C(&qword_1000FC088);
  sub_10000953C(&qword_1000FC090, &qword_1000FC080);
  sub_10000953C(&qword_1000FC098, &qword_1000FC088);
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  swift_release();
  swift_release();
  sub_10000953C(&qword_1000FC0A0, &qword_1000FC070);
  Publisher.map<A>(_:)();
  sub_100009894();
  v11();
  sub_10000953C(&qword_1000FC0A8, &qword_1000FC078);
  sub_100009938();
  sub_100009894();
  v12();
  sub_1000098A0();
}

uint64_t sub_100005E5C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *sub_100005EA0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100005EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __n128 v12 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, a1, v9, v12);
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  uint64_t v30 = 0x65726E752F33762FLL;
  unint64_t v31 = 0xEF2F726574736967;
  v14._countAndFlagsBits = a2;
  v14._object = a3;
  String.append(_:)(v14);
  uint64_t v15 = v30;
  unint64_t v16 = v31;
  uint64_t v17 = sub_1000804E0();
  unint64_t v18 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v19 = v18 + v11;
  unint64_t v20 = (v18 + v11) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v15;
  *(void *)(v21 + 24) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v21 + v18, v13, v9);
  *(unsigned char *)(v21 + v19) = 1;
  *(void *)(v20 + v21 + 8) = v17;
  uint64_t v22 = sub_100005EA0(v27, v27[3]);
  uint64_t v23 = v28;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_100007FE8((uint64_t)sub_100007FA0, v21, v23, 0, (uint64_t)v22);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  *uint64_t v29 = v24;
  return result;
}

uint64_t sub_1000060E8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100006120()
{
  swift_bridgeObjectRelease();
  sub_100006178(v0 + 32);
  swift_release();
  sub_100006178(v0 + 88);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 136, 7);
}

uint64_t sub_100006178(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1000061C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100005EE4(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), (void *)(v2 + 32), *(void *)(v2 + 128), a2);
}

uint64_t sub_1000061D8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

int *sub_100006220@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t result = (int *)sub_100005E5C(&qword_1000FC0B0);
  if (*(void *)(a1 + result[8]) && (self, (uint64_t result = (int *)swift_dynamicCastObjCClass()) != 0))
  {
    uint64_t result = (int *)[result statusCode];
    BOOL v5 = (unint64_t)(result - 50) < 0x64;
  }
  else
  {
    BOOL v5 = 1;
  }
  *a2 = v5;
  return result;
}

void sub_10000629C()
{
  sub_1000098B8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  sub_100005E5C(&qword_1000FC070);
  sub_100009830();
  __chkstk_darwin(v12);
  sub_100009864();
  sub_100005E5C(&qword_1000FC0F0);
  sub_100009830();
  __chkstk_darwin(v13);
  sub_10000987C();
  uint64_t v18 = *(void *)(*sub_100005EA0((void *)(v1 + 56), *(void *)(v1 + 80)) + 24);
  sub_1000060E8(v1, (uint64_t)v17);
  Swift::String v14 = (void *)swift_allocObject();
  v14[2] = v11;
  v14[3] = v9;
  v14[4] = v7;
  v14[5] = v5;
  memcpy(v14 + 6, v17, 0x60uLL);
  v14[18] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Subscribers.Demand.unlimited.getter();
  sub_100005E5C(&qword_1000FC080);
  sub_100005E5C(&qword_1000FC088);
  sub_10000953C(&qword_1000FC090, &qword_1000FC080);
  sub_10000953C(&qword_1000FC098, &qword_1000FC088);
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  swift_release();
  swift_release();
  sub_100005E5C(&qword_1000FC0F8);
  sub_10000953C(&qword_1000FC0A0, &qword_1000FC070);
  Publisher.map<A>(_:)();
  sub_100009894();
  v15();
  sub_10000953C(&qword_1000FC100, &qword_1000FC0F0);
  sub_100009938();
  sub_100009894();
  v16();
  sub_1000098A0();
}

uint64_t sub_100006570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v32 = a6;
  uint64_t v33 = a7;
  Swift::String v34 = a8;
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __n128 v16 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v17, a1, v13, v16);
  uint64_t v35 = 0;
  unint64_t v36 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  uint64_t v35 = 0x65726E752F33762FLL;
  unint64_t v36 = 0xEF2F726574736967;
  v18._countAndFlagsBits = a2;
  v18._object = a3;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 47;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  v20._countAndFlagsBits = a4;
  v20._object = a5;
  String.append(_:)(v20);
  uint64_t v21 = v35;
  unint64_t v22 = v36;
  uint64_t v23 = sub_1000804E0();
  unint64_t v24 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v25 = v24 + v15;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v21;
  *(void *)(v26 + 24) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v26 + v24, v17, v13);
  *(unsigned char *)(v26 + v25) = 1;
  *(void *)((v25 & 0xFFFFFFFFFFFFFFF8) + v26 + 8) = v23;
  uint64_t v27 = sub_100005EA0(v32, v32[3]);
  uint64_t v28 = v33;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_100007FE8((uint64_t)sub_10000855C, v26, v28, 0, (uint64_t)v27);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  *Swift::String v34 = v29;
  return result;
}

id sub_100006794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for URLRequest();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100005E5C(&qword_1000FDA00);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100005E5C(&qword_1000FC0B0);
  Swift::String v19 = *(void **)(a1 + *(int *)(v11 + 32));
  if (v19 && (self, (uint64_t v12 = (void *)swift_dynamicCastObjCClass()) != 0))
  {
    uint64_t v13 = (char *)[v12 statusCode];
    sub_100008BFC(a1, (uint64_t)v10, &qword_1000FDA00);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + *(int *)(v11 + 28), v4);
    uint64_t v14 = (int *)sub_100005E5C(&qword_1000FC0F8);
    *(unsigned char *)(a2 + v14[10]) = (unint64_t)(v13 - 200) < 0x64;
    sub_100008430((uint64_t)v10, a2);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2 + v14[7], v7, v4);
  }
  else
  {
    sub_100008BFC(a1, a2, &qword_1000FDA00);
    uint64_t v15 = a1 + *(int *)(v11 + 28);
    uint64_t v14 = (int *)sub_100005E5C(&qword_1000FC0F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2 + v14[7], v15, v4);
    *(unsigned char *)(a2 + v14[10]) = 1;
  }
  __n128 v16 = v19;
  *(void *)(a2 + v14[8]) = v19;
  *(_OWORD *)(a2 + v14[9]) = xmmword_1000CABB0;

  return v16;
}

void sub_1000069F4()
{
  sub_1000098B8();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v13 = sub_100005E5C(&qword_1000FC110);
  sub_100009830();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_100009908();
  uint64_t v15 = *(void *)(*sub_100005EA0((void *)(v2 + 56), *(void *)(v2 + 80)) + 24);
  sub_1000060E8(v2, (uint64_t)v14);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v8;
  v12[3] = v6;
  v12[4] = v4;
  memcpy(v12 + 5, v14, 0x60uLL);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  static Subscribers.Demand.unlimited.getter();
  sub_100005E5C(&qword_1000FC080);
  sub_100005E5C(&qword_1000FC118);
  sub_10000953C(&qword_1000FC090, &qword_1000FC080);
  sub_10000953C(&qword_1000FC120, &qword_1000FC118);
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  swift_release();
  swift_release();
  sub_10000953C(&qword_1000FC128, &qword_1000FC110);
  Publisher.eraseToAnyPublisher()();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v13);
  sub_1000098A0();
}

uint64_t sub_100006BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v31 = a5;
  uint64_t v32 = a4;
  uint64_t v33 = a6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __n128 v12 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, a1, v9, v12);
  uint64_t v14 = (void *)0xE000000000000000;
  unint64_t v34 = 0;
  unint64_t v35 = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  unint64_t v34 = 0xD000000000000018;
  unint64_t v35 = 0x80000001000D0C60;
  if (a3) {
    uint64_t v14 = a3;
  }
  else {
    a2 = 0;
  }
  swift_bridgeObjectRetain();
  v15._countAndFlagsBits = a2;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  unint64_t v16 = v34;
  unint64_t v17 = v35;
  uint64_t v30 = sub_1000804E0();
  unint64_t v18 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v19 = (v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v20 + v18, v13, v9);
  uint64_t v21 = (unint64_t *)(v20 + v19);
  *uint64_t v21 = v16;
  v21[1] = v17;
  unint64_t v22 = v20 + ((v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v22 = 0;
  *(unsigned char *)(v22 + 8) = 0;
  uint64_t v23 = v31;
  *(void *)(v20 + ((v19 + 39) & 0xFFFFFFFFFFFFFFF8)) = v30;
  unint64_t v24 = v23;
  uint64_t v25 = sub_100005EA0(v23, v23[3]);
  uint64_t v26 = v24[5];
  uint64_t v27 = v32;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_100008830((uint64_t)sub_1000087A0, v20, v27, 0, v26, (uint64_t)v25);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  *uint64_t v33 = v28;
  return result;
}

uint64_t sub_100006E3C(uint64_t a1)
{
  unint64_t v2 = sub_10000961C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100006E78(uint64_t a1)
{
  unint64_t v2 = sub_10000961C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100006EB4()
{
  return 1;
}

uint64_t sub_100006ED4()
{
  return 1;
}

uint64_t sub_100006EDC()
{
  return 0;
}

uint64_t sub_100006EE8()
{
  return 0;
}

uint64_t sub_100006EF4(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = sub_100005E5C(a2);
  sub_100009830();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1000098F8();
  uint64_t v11 = v10 - v9;
  sub_100005EA0(a1, a1[3]);
  a3();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
}

uint64_t sub_100006FE4(void *a1)
{
  return sub_100006EF4(a1, &qword_1000FC208, (void (*)(void))sub_10000961C);
}

uint64_t sub_100007020@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100006EB4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10000704C()
{
  return sub_100006EDC();
}

uint64_t sub_100007068@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100006ED4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100007094(uint64_t a1)
{
  unint64_t v2 = sub_100009668();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000070D0(uint64_t a1)
{
  unint64_t v2 = sub_100009668();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10000710C(void *a1)
{
  return sub_100006EF4(a1, &qword_1000FC218, (void (*)(void))sub_100009668);
}

id sub_100007148(uint64_t a1, char *a2, uint64_t a3, int a4, const void *a5, uint64_t a6)
{
  uint64_t v40 = a6;
  int v43 = a4;
  uint64_t v44 = a3;
  uint64_t v45 = a1;
  uint64_t v47 = a2;
  uint64_t v7 = type metadata accessor for URLError.Code();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for URLError();
  uint64_t v42 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v16 = (char *)&v39 - v15;
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(__dst, a5, sizeof(__dst));
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v13, v44, v17);
  sub_1000082C0((uint64_t)v13, 0, 1, v17);
  URL.init(string:relativeTo:)();
  sub_1000095CC((uint64_t)v13, (uint64_t *)&unk_1000FDA80);
  if (sub_1000082E8((uint64_t)v16, 1, v17) == 1)
  {
    sub_1000095CC((uint64_t)v16, (uint64_t *)&unk_1000FDA80);
    static URLError.Code.badURL.getter();
    id v21 = (id)sub_100028954((uint64_t)_swiftEmptyArrayStorage);
    sub_100009480((unint64_t *)&qword_1000FC0E0, (void (*)(uint64_t))&type metadata accessor for URLError);
    _BridgedStoredNSError.init(_:userInfo:)();
    URLError._nsError.getter();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v8);
    swift_willThrow();
  }
  else
  {
    uint64_t v22 = v40;
    uint64_t v23 = v41;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    id v24 = objc_allocWithZone((Class)AMSURLRequest);
    URL._bridgeToObjectiveC()(v25);
    uint64_t v27 = v26;
    id v28 = [v24 initWithURL:v26];

    [v28 setTimeoutInterval:10.0];
    uint64_t v29 = v18;
    uint64_t v47 = v20;
    id v30 = v28;
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v30 setHTTPMethod:v31];

    type metadata accessor for JSONEncoder();
    swift_allocObject();
    id v21 = v30;
    JSONEncoder.init()();
    sub_100009580();
    uint64_t v32 = dispatch thunk of JSONEncoder.encode<A>(_:)();
    if (v23)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v47, v17);

      swift_release();
    }
    else
    {
      uint64_t v35 = v32;
      unint64_t v36 = v33;
      swift_release();
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_10000835C(v35, v36);
      [v21 setHTTPBody:isa];

      __chkstk_darwin(v38);
      *(&v39 - 2) = (uint64_t)v21;
      sub_100027658(v22, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100009814);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v47, v17);
    }
  }
  return v21;
}

void (**sub_100007694(char *a1, void (**a2)(char *, void, uint64_t), uint64_t a3, int a4, uint64_t a5, void (*a6)(void), uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t)))(char *, void, uint64_t)
{
  uint64_t v49 = a6;
  uint64_t v50 = a8;
  uint64_t v53 = a7;
  uint64_t v54 = a1;
  v48[0] = a5;
  int v52 = a4;
  v55 = a2;
  uint64_t v9 = type metadata accessor for URLError.Code();
  __chkstk_darwin(v9 - 8);
  sub_100009864();
  type metadata accessor for URLError();
  sub_100009830();
  uint64_t v51 = v10;
  __chkstk_darwin(v11);
  sub_100009908();
  uint64_t v12 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v48 - v16;
  uint64_t v18 = type metadata accessor for URL();
  sub_100009830();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_1000098F8();
  id v24 = (char *)(v23 - v22);
  v20[2](v14, a3, v18);
  sub_1000082C0((uint64_t)v14, 0, 1, v18);
  URL.init(string:relativeTo:)();
  sub_1000095CC((uint64_t)v14, (uint64_t *)&unk_1000FDA80);
  if (sub_1000082E8((uint64_t)v17, 1, v18) == 1)
  {
    sub_1000095CC((uint64_t)v17, (uint64_t *)&unk_1000FDA80);
    static URLError.Code.badURL.getter();
    sub_100028954((uint64_t)_swiftEmptyArrayStorage);
    sub_100009480((unint64_t *)&qword_1000FC0E0, (void (*)(uint64_t))&type metadata accessor for URLError);
    _BridgedStoredNSError.init(_:userInfo:)();
    URLError._nsError.getter();
    sub_100009894();
    v25();
    swift_willThrow();
  }
  else
  {
    uint64_t v26 = v48[1];
    uint64_t v27 = v49;
    uint64_t v28 = v48[0];
    uint64_t v29 = v50;
    v55 = v20;
    ((void (**)(char *, char *, uint64_t))v20)[4](v24, v17, v18);
    id v30 = objc_allocWithZone((Class)AMSURLRequest);
    uint64_t v54 = v24;
    URL._bridgeToObjectiveC()(v31);
    unint64_t v33 = v32;
    id v34 = [v30 initWithURL:v32];

    [v34 setTimeoutInterval:10.0];
    id v35 = v34;
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v35 setHTTPMethod:v36];

    type metadata accessor for JSONEncoder();
    swift_allocObject();
    uint64_t v20 = (void (**)(char *, void, uint64_t))v35;
    JSONEncoder.init()();
    v27();
    uint64_t v37 = dispatch thunk of JSONEncoder.encode<A>(_:)();
    if (v26)
    {
      uint64_t v39 = sub_1000098D0();
      v40(v39);

      swift_release();
    }
    else
    {
      uint64_t v42 = v37;
      unint64_t v43 = v38;
      swift_release();
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_10000835C(v42, v43);
      [v20 setHTTPBody:isa];

      __chkstk_darwin(v45);
      v48[-2] = v20;
      sub_100027658(v28, v29);
      uint64_t v46 = sub_1000098D0();
      v47(v46);
    }
  }
  return v20;
}

uint64_t sub_100007B2C(char *a1, uint64_t (*a2)(uint64_t, uint64_t, char *, void, char *))
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *((void *)a1 + 1);
  uint64_t v6 = (int *)sub_100005E5C(&qword_1000FC0D8);
  return a2(v4, v5, &a1[v6[12]], *(void *)&a1[v6[16]], &a1[v6[20]]);
}

uint64_t sub_100007BA4(void *a1)
{
  id v2 = [a1 infoDictionary];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

id sub_100007C1C(uint64_t a1, char *a2, uint64_t a3, int a4, void *__src, uint64_t a6)
{
  memcpy(__dst, __src, 0x61uLL);
  return sub_100007148(a1, a2, a3, a4, __dst, a6);
}

uint64_t sub_100007C98(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = sub_100005E5C(&qword_1000FC1E0);
  uint64_t v12 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[3] = &type metadata for AMSApiRequest;
  v28[4] = &off_1000F0670;
  uint64_t v15 = (void *)swift_allocObject();
  v28[0] = v15;
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a4;
  id v16 = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100074D20();
  uint64_t v27 = v17;
  sub_100008218(a6, (uint64_t)__src);
  sub_100008B98((uint64_t)v28, (uint64_t)v25);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a5;
  memcpy((void *)(v18 + 24), __src, 0x60uLL);
  sub_100008CAC(v25, v18 + 120);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_10000952C;
  *(void *)(v19 + 24) = v18;
  swift_retain();
  static Subscribers.Demand.unlimited.getter();
  sub_100005E5C(&qword_1000FC0C0);
  sub_100005E5C(&qword_1000FC1D0);
  sub_100005E5C(&qword_1000FC1E8);
  sub_10000953C(&qword_1000FC0C8, &qword_1000FC0C0);
  sub_10000953C(&qword_1000FC1F0, &qword_1000FC1E8);
  Publisher.flatMap<A, B>(maxPublishers:_:)();
  swift_release();
  swift_release();
  sub_10000953C(&qword_1000FC1F8, &qword_1000FC1E0);
  uint64_t v20 = v24;
  uint64_t v21 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  sub_100006178((uint64_t)v28);
  return v21;
}

void (**sub_100007FA0())(char *, void, uint64_t)
{
  return sub_1000085A4((void (*)(void))sub_100008310, (uint64_t)&_s7sportsd13TempoApiAgentV9EmptyBodyVN_0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000083B4);
}

uint64_t sub_100007FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_100005E5C(&qword_1000FC0B8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &__src[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100074D20();
  uint64_t v17 = v10;
  sub_100008218(a5, (uint64_t)__src);
  uint64_t v11 = swift_allocObject();
  memcpy((void *)(v11 + 16), __src, 0x60uLL);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100008278;
  *(void *)(v12 + 24) = v11;
  sub_100005E5C(&qword_1000FC0C0);
  sub_100005E5C(&qword_1000FC0B0);
  sub_10000953C(&qword_1000FC0C8, &qword_1000FC0C0);
  Publisher.map<A>(_:)();
  swift_release();
  swift_release();
  sub_10000953C(&qword_1000FC0D0, &qword_1000FC0B8);
  uint64_t v13 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  return v13;
}

uint64_t sub_100008218(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100008278@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_10004F2A4(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_100008280()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000082B8(char *a1)
{
  return sub_100007B2C(a1, *(uint64_t (**)(uint64_t, uint64_t, char *, void, char *))(v1 + 16));
}

uint64_t sub_1000082C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1000082E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

unint64_t sub_100008310()
{
  unint64_t result = qword_1000FC0E8;
  if (!qword_1000FC0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FC0E8);
  }
  return result;
}

uint64_t sub_10000835C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1000083B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100027B44(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1000083BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100006178(v0 + 48);
  swift_release();
  sub_100006178(v0 + 104);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_10000841C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100006570(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), (void *)(v2 + 48), *(void *)(v2 + 144), a2);
}

uint64_t sub_100008430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005E5C(&qword_1000FDA00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000849C()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_100009830();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = ((v7 + *(void *)(v5 + 64)) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v9, v8);
}

void (**sub_10000855C())(char *, void, uint64_t)
{
  return sub_1000085A4((void (*)(void))sub_100008628, (uint64_t)&type metadata for TempoApiAgent.EmptyBody, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100009814);
}

void (**sub_1000085A4(void (*a1)(void), uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t)))(char *, void, uint64_t)
{
  uint64_t v7 = type metadata accessor for URL();
  sub_10000984C(v7);
  uint64_t v8 = (char *)sub_100009920();
  return sub_100007694(v8, v11, v12, *(unsigned __int8 *)(v3 + v10), *(void *)(v9 + 8), a1, a2, a3);
}

unint64_t sub_100008628()
{
  unint64_t result = qword_1000FC108;
  if (!qword_1000FC108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FC108);
  }
  return result;
}

uint64_t sub_100008674()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100006178(v0 + 40);
  swift_release();
  sub_100006178(v0 + 96);

  return _swift_deallocObject(v0, 136, 7);
}

uint64_t sub_1000086CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100006BFC(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), (void *)(v2 + 40), a2);
}

uint64_t sub_1000086DC()
{
  type metadata accessor for URL();
  sub_1000098E8();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v2 | 7;
  unint64_t v4 = (((*(void *)(v1 + 64) + ((v2 + 16) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  sub_100009894();
  v5();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4 + 8, v3);
}

id sub_1000087A0()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_10000984C(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100027B48(v0 + v6, *(void *)(v0 + v7), *(void *)(v0 + v7 + 8), *(void *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + ((v7 + 39) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100008830(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = sub_100005E5C(&qword_1000FC130);
  uint64_t v12 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[3] = &type metadata for AMSApiRequest;
  v28[4] = &off_1000F0670;
  uint64_t v15 = (void *)swift_allocObject();
  v28[0] = v15;
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a4;
  id v16 = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100074D20();
  uint64_t v27 = v17;
  sub_100008218(a6, (uint64_t)__src);
  sub_100008B98((uint64_t)v28, (uint64_t)v25);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a5;
  memcpy((void *)(v18 + 24), __src, 0x60uLL);
  sub_100008CAC(v25, v18 + 120);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100008B80;
  *(void *)(v19 + 24) = v18;
  swift_retain();
  static Subscribers.Demand.unlimited.getter();
  sub_100005E5C(&qword_1000FC0C0);
  sub_100005E5C(&qword_1000FC138);
  sub_100005E5C(&qword_1000FC140);
  sub_10000953C(&qword_1000FC0C8, &qword_1000FC0C0);
  sub_10000953C(&qword_1000FC148, &qword_1000FC140);
  Publisher.flatMap<A, B>(maxPublishers:_:)();
  swift_release();
  swift_release();
  sub_10000953C(&qword_1000FC150, &qword_1000FC130);
  uint64_t v20 = v24;
  uint64_t v21 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  sub_100006178((uint64_t)v28);
  return v21;
}

uint64_t sub_100008B34()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100008B80()
{
}

uint64_t sub_100008B90(uint64_t a1)
{
  return sub_10006EC2C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100008B98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100008BFC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100005E5C(a3);
  sub_1000098E8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100008C5C()
{
  sub_100006178(v0 + 24);
  swift_unknownObjectRelease();
  sub_100006178(v0 + 72);

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100008CAC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

ValueMetadata *type metadata accessor for TempoApiAgent.EmptyBody()
{
  return &type metadata for TempoApiAgent.EmptyBody;
}

ValueMetadata *_s7sportsd13TempoApiAgentV9EmptyBodyVMa_0()
{
  return &_s7sportsd13TempoApiAgentV9EmptyBodyVN_0;
}

uint64_t initializeBufferWithCopyOfBuffer for TempoApiAgent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for TempoApiAgent(uint64_t a1)
{
  sub_100006178(a1);
  swift_release();

  return sub_100006178(a1 + 56);
}

uint64_t initializeWithCopy for TempoApiAgent(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = a2 + 56;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v8(a1 + 56, v5, v7);
  return a1;
}

uint64_t assignWithCopy for TempoApiAgent(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  sub_100008E94((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  return a1;
}

uint64_t *sub_100008E94(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

void *initializeWithTake for TempoApiAgent(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x60uLL);
}

uint64_t assignWithTake for TempoApiAgent(uint64_t a1, uint64_t a2)
{
  sub_100006178(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  sub_100006178(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for TempoApiAgent(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TempoApiAgent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TempoApiAgent()
{
  return &type metadata for TempoApiAgent;
}

uint64_t sub_1000091E0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100006178(v0 + 72);
  swift_release();
  sub_100006178(v0 + 128);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 176, 7);
}

uint64_t sub_100009248(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100005264(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(unsigned char *)(v3 + 64), *(unsigned char *)(v3 + 65), (void *)(v3 + 72), *(void *)(v3 + 168));
}

uint64_t sub_100009294@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100005B4C(a1, *(uint64_t (**)(uint64_t, void, void))(v2 + 16), a2);
}

uint64_t sub_10000929C(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t sub_1000092D4()
{
  unint64_t result = qword_1000FC360[0];
  if (!qword_1000FC360[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000FC360);
  }
  return result;
}

uint64_t sub_100009320()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_100009830();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = ((v7 + *(void *)(v5 + 64)) & 0xFFFFFFFFFFFFFFF8) + 120;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v9, v8);
}

id sub_100009418()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_10000984C(v1);
  uint64_t v2 = sub_100009920();
  return sub_100007C1C(v2, v5, v6, *(unsigned __int8 *)(v0 + v4), (void *)(v3 + 8), *(void *)(v3 + 112));
}

uint64_t sub_100009480(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000094CC()
{
  swift_release();

  sub_100006178(v0 + 32);
  swift_unknownObjectRelease();
  sub_100006178(v0 + 80);
  sub_100006178(v0 + 120);

  return _swift_deallocObject(v0, 160, 7);
}

void sub_10000952C()
{
}

uint64_t sub_10000953C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000061D8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100009580()
{
  unint64_t result = qword_1000FC200;
  if (!qword_1000FC200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FC200);
  }
  return result;
}

uint64_t sub_1000095CC(uint64_t a1, uint64_t *a2)
{
  sub_100005E5C(a2);
  sub_1000098E8();
  sub_100009894();
  v3();
  return a1;
}

unint64_t sub_10000961C()
{
  unint64_t result = qword_1000FC210;
  if (!qword_1000FC210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FC210);
  }
  return result;
}

unint64_t sub_100009668()
{
  unint64_t result = qword_1000FC220;
  if (!qword_1000FC220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FC220);
  }
  return result;
}

ValueMetadata *type metadata accessor for TempoApiAgent.EmptyBody.CodingKeys()
{
  return &type metadata for TempoApiAgent.EmptyBody.CodingKeys;
}

ValueMetadata *_s7sportsd13TempoApiAgentV9EmptyBodyV10CodingKeysOMa_0()
{
  return &_s7sportsd13TempoApiAgentV9EmptyBodyV10CodingKeysON_0;
}

unint64_t sub_1000096D8()
{
  unint64_t result = qword_1000FC228;
  if (!qword_1000FC228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FC228);
  }
  return result;
}

unint64_t sub_100009728()
{
  unint64_t result = qword_1000FC230;
  if (!qword_1000FC230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FC230);
  }
  return result;
}

unint64_t sub_100009778()
{
  unint64_t result = qword_1000FC238;
  if (!qword_1000FC238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FC238);
  }
  return result;
}

unint64_t sub_1000097C8()
{
  unint64_t result = qword_1000FC240;
  if (!qword_1000FC240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FC240);
  }
  return result;
}

uint64_t sub_10000984C(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_1000098D0()
{
  return *(void *)(v0 - 88);
}

uint64_t sub_100009920()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_100009938()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_100009958(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for URL();
  __chkstk_darwin(v5 - 8);
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [a2 valueForEntitlement:v6];

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10000A064();
  }
  sub_100009F4C((uint64_t)v38, (uint64_t)v39);
  if (v40)
  {
    if (sub_10000A07C())
    {
      uint64_t v36 = v46;
      uint64_t v8 = v47;
      unint64_t v9 = (uint64_t *)&v48;
LABEL_17:
      *(v9 - 32) = v8;
      goto LABEL_19;
    }
  }
  else
  {
    sub_100009FB4((uint64_t)v39);
  }
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [a2 valueForEntitlement:v10];

  if (v11)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10000A064();
  }
  sub_100009F4C((uint64_t)v38, (uint64_t)v39);
  if (v40)
  {
    int v12 = sub_10000A07C();
    uint64_t v8 = v46;
    uint64_t v13 = v47;
    if (!v12) {
      uint64_t v13 = 0;
    }
    uint64_t v37 = v13;
    if (!v12) {
      uint64_t v8 = 0;
    }
    unint64_t v9 = &v47;
    goto LABEL_17;
  }
  sub_100009FB4((uint64_t)v39);
  uint64_t v37 = 0;
  uint64_t v36 = 0;
LABEL_19:
  uint64_t v14 = *(void *)(v3 + OBJC_IVAR____TtC7sportsd25SportsKitRequestXPCServer_entitlement);
  uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC7sportsd25SportsKitRequestXPCServer_entitlement + 8);
  sub_100008B98(v3 + OBJC_IVAR____TtC7sportsd25SportsKitRequestXPCServer_apsListening, (uint64_t)v39);
  uint64_t v16 = qword_1000FBD68;
  swift_bridgeObjectRetain();
  id v17 = a2;
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_10010A4A0;
  uint64_t v19 = self;
  swift_retain();
  id v20 = [v19 defaultManager];
  NSFileManager.currentContainerURL.getter();

  type metadata accessor for PlaysStore();
  swift_allocObject();
  uint64_t v21 = PlaysStore.init(storeUrl:)();
  sub_100008B98(v3 + OBJC_IVAR____TtC7sportsd25SportsKitRequestXPCServer_metadataProvider, (uint64_t)&v43);
  sub_100008B98(v3 + OBJC_IVAR____TtC7sportsd25SportsKitRequestXPCServer_tempoApiProvider, (uint64_t)&v44);
  sub_100008B98(v3 + OBJC_IVAR____TtC7sportsd25SportsKitRequestXPCServer_supressionManager, (uint64_t)v45);
  uint64_t v41 = v18;
  uint64_t v42 = v21;
  uint64_t v22 = (objc_class *)type metadata accessor for ActivityAuthorization();
  id v23 = [objc_allocWithZone(v22) init];
  unint64_t v24 = sub_1000522C4();
  uint64_t v26 = v25;
  v38[4] = &off_1000F15C8;
  v38[3] = v22;
  v38[0] = v23;
  type metadata accessor for ActivityCapUtility();
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = sub_10000A014((uint64_t)v38, (uint64_t)v22);
  __chkstk_darwin(v28);
  id v30 = (uint64_t *)((char *)&v36 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v31 + 16))(v30);
  uint64_t v32 = *v30;
  v27[5] = v22;
  v27[6] = &off_1000F15C8;
  v27[2] = v32;
  v27[7] = v24;
  v27[8] = v26;
  sub_100006178((uint64_t)v38);
  v45[5] = v27;
  id v33 = objc_allocWithZone((Class)type metadata accessor for SportsKitRequestXPCSession());
  id v34 = sub_1000873DC(v14, v15, v17, (uint64_t)v39, v36, v37);
  sub_1000AE898();

  return 1;
}

void sub_100009E30()
{
}

id sub_100009E70()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t type metadata accessor for SportsKitRequestXPCServer()
{
  return self;
}

uint64_t sub_100009F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005E5C((uint64_t *)&unk_1000FC300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100009FB4(uint64_t a1)
{
  uint64_t v2 = sub_100005E5C((uint64_t *)&unk_1000FC300);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000A014(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

double sub_10000A064()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 320) = 0u;
  *(_OWORD *)(v0 - 336) = 0u;
  return result;
}

uint64_t sub_10000A07C()
{
  return swift_dynamicCast();
}

uint64_t sub_10000A09C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for URL();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC7sportsd30DirectActivityRequestXPCServer_entitlement);
  uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC7sportsd30DirectActivityRequestXPCServer_entitlement + 8);
  sub_100008B98(v3 + OBJC_IVAR____TtC7sportsd30DirectActivityRequestXPCServer_apsListening, (uint64_t)v34);
  uint64_t v8 = qword_1000FBD68;
  swift_bridgeObjectRetain();
  id v9 = a2;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_10010A4A0;
  id v11 = self;
  swift_retain();
  id v12 = [v11 defaultManager];
  NSFileManager.currentContainerURL.getter();

  type metadata accessor for PlaysStore();
  swift_allocObject();
  uint64_t v13 = PlaysStore.init(storeUrl:)();
  sub_100008B98(v3 + OBJC_IVAR____TtC7sportsd30DirectActivityRequestXPCServer_metadataProvider, (uint64_t)&v37);
  sub_100008B98(v3 + OBJC_IVAR____TtC7sportsd30DirectActivityRequestXPCServer_tempoApiProvider, (uint64_t)&v38);
  sub_100008B98(v3 + OBJC_IVAR____TtC7sportsd30DirectActivityRequestXPCServer_supressionManager, (uint64_t)v39);
  uint64_t v35 = v10;
  uint64_t v36 = v13;
  uint64_t v14 = (objc_class *)type metadata accessor for ActivityAuthorization();
  id v15 = [objc_allocWithZone(v14) init];
  unint64_t v16 = sub_1000522C4();
  uint64_t v18 = v17;
  id v33 = &off_1000F15C8;
  uint64_t v32 = (ValueMetadata *)v14;
  v31[0] = v15;
  type metadata accessor for ActivityCapUtility();
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = sub_10000A014((uint64_t)v31, (uint64_t)v14);
  __chkstk_darwin(v20);
  uint64_t v22 = (void *)((char *)&v31[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v23 + 16))(v22);
  uint64_t v24 = *v22;
  *(void *)(v19 + 40) = v14;
  *(void *)(v19 + 48) = &off_1000F15C8;
  *(void *)(v19 + 16) = v24;
  *(void *)(v19 + 56) = v16;
  *(void *)(v19 + 64) = v18;
  sub_100006178((uint64_t)v31);
  v39[5] = v19;
  uint64_t v32 = &type metadata for TVAppFeatureFlags;
  id v33 = (_UNKNOWN **)sub_1000092D4();
  LOBYTE(v19) = isFeatureEnabled(_:)();
  sub_100006178((uint64_t)v31);
  type metadata accessor for SportsManager();
  uint64_t v25 = static SportsManager.shared.getter();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v25;
  id v27 = objc_allocWithZone((Class)type metadata accessor for DirectActivityRequestXPCSession());
  id v28 = sub_100064848(v6, v7, v9, (uint64_t)v34, v19 & 1, (uint64_t)sub_1000647B0, 0, (uint64_t)sub_10000A5A0, v26);
  sub_1000AE898();

  return 1;
}

void sub_10000A484()
{
}

uint64_t type metadata accessor for DirectActivityRequestXPCServer()
{
  return self;
}

uint64_t sub_10000A568()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10000A5A0()
{
  return sub_100064824();
}

uint64_t sub_10000A5AC()
{
  return swift_initClassMetadata2();
}

BOOL sub_10000A600(char a1, char a2)
{
  return a1 == a2;
}

void sub_10000A610(uint64_t a1, unsigned __int8 a2)
{
}

uint64_t sub_10000A638(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7365536F706D6574 && a2 == 0xEE0064496E6F6973;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6556616D65686373 && a2 == 0xED00006E6F697372;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 1701869940 && a2 == 0xE400000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x6E756F4365747962 && a2 == 0xE900000000000074;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x496C656E6E616863 && a2 == 0xE900000000000044)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v12) {
                return 6;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_10000A94C()
{
  return 7;
}

Swift::Int sub_10000A954(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

uint64_t sub_10000A99C(char a1)
{
  uint64_t result = 0x746E65746E6F63;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7365536F706D6574;
      break;
    case 2:
      uint64_t result = 0x6556616D65686373;
      break;
    case 3:
      uint64_t result = 1701869940;
      break;
    case 4:
      uint64_t result = 0x6D617473656D6974;
      break;
    case 5:
      uint64_t result = 0x6E756F4365747962;
      break;
    case 6:
      uint64_t result = 0x496C656E6E616863;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_10000AAA8(char *a1, char *a2)
{
  return sub_10000A600(*a1, *a2);
}

Swift::Int sub_10000AABC()
{
  return sub_10000A954(*v0);
}

void sub_10000AAC8(uint64_t a1)
{
  sub_10000A610(a1, *v1);
}

Swift::Int sub_10000AAD4()
{
  Hasher.init(_seed:)();
  sub_10000A610((uint64_t)v2, *v0);
  return Hasher._finalize()();
}

uint64_t sub_10000AB1C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v49 = a4;
  uint64_t v58 = type metadata accessor for Date();
  sub_10000C568();
  uint64_t v54 = v7;
  __chkstk_darwin(v8);
  sub_10000C58C();
  uint64_t v51 = v9;
  sub_10000C568();
  uint64_t v57 = v10;
  __chkstk_darwin(v11);
  sub_10000C58C();
  uint64_t v52 = v12;
  type metadata accessor for CloudChannelMessageProcessor.CloudChannelMessageContentWrapper.CodingKeys();
  swift_getWitnessTable();
  uint64_t v56 = type metadata accessor for KeyedDecodingContainer();
  sub_10000C568();
  uint64_t v50 = v13;
  __chkstk_darwin(v14);
  unint64_t v16 = (char *)&v47 - v15;
  uint64_t v53 = a3;
  type metadata accessor for CloudChannelMessageProcessor.CloudChannelMessageContentWrapper();
  sub_10000C568();
  uint64_t v48 = v17;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (uint64_t *)((char *)&v47 + *(int *)(v19 + 52) - v20);
  *uint64_t v21 = 0;
  *((unsigned char *)v21 + 8) = 1;
  uint64_t v62 = (int *)v19;
  uint64_t v22 = (char *)&v47 - v20;
  uint64_t v23 = (uint64_t *)((char *)&v47 + *(int *)(v19 + 56) - v20);
  *uint64_t v23 = 0;
  v23[1] = 0;
  v59 = a1;
  uint64_t v60 = v23;
  sub_100005EA0(a1, a1[3]);
  v55 = v16;
  uint64_t v24 = v61;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v24)
  {
    sub_100006178((uint64_t)v59);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v61 = v21;
    uint64_t v25 = v51;
    char v69 = 0;
    uint64_t v26 = v52;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    id v27 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v22, v26, a2);
    char v68 = 1;
    uint64_t v28 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v29 = v62;
    id v30 = (uint64_t *)&v22[v62[9]];
    *id v30 = v28;
    v30[1] = v31;
    char v67 = 2;
    uint64_t v32 = KeyedDecodingContainer.decode(_:forKey:)();
    id v33 = v60;
    id v34 = (uint64_t *)&v22[v29[10]];
    *id v34 = v32;
    v34[1] = v35;
    char v66 = 3;
    *(void *)&v22[v29[11]] = KeyedDecodingContainer.decode(_:forKey:)();
    char v65 = 4;
    sub_10000C320();
    uint64_t v36 = v25;
    uint64_t v37 = v58;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(&v27[v29[12]], v36, v37);
    char v64 = 5;
    uint64_t v38 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v39 = v61;
    uint64_t *v61 = v38;
    *((unsigned char *)v39 + 8) = v40 & 1;
    char v63 = 6;
    uint64_t v41 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v43 = v42;
    sub_10000C580();
    v44();
    swift_bridgeObjectRelease();
    *id v33 = v41;
    v33[1] = v43;
    uint64_t v45 = v48;
    (*(void (**)(uint64_t, char *, int *))(v48 + 16))(v49, v27, v29);
    sub_100006178((uint64_t)v59);
    return (*(uint64_t (**)(char *, int *))(v45 + 8))(v27, v29);
  }
}

uint64_t sub_10000B0D0()
{
  return sub_10000A99C(*v0);
}

uint64_t sub_10000B0DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10000A638(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10000B10C()
{
  return sub_100006EDC();
}

uint64_t sub_10000B130@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10000A94C();
  *a1 = result;
  return result;
}

uint64_t sub_10000B160(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_10000B1B4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_10000B208@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10000AB1C(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_10000B228(void **a1, uint64_t a2)
{
  uint64_t v3 = sub_10001B7DC(*a1);
  if (v4)
  {
    if (*(void *)(a2 + 16))
    {
      sub_1000511F4(v3, v4, a2);
      char v6 = v5;
    }
    else
    {
      char v6 = 1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_10000B28C(void **a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v5 = sub_10001B7E8(*a1);
    if (v6)
    {
      if (v5 == a2 && v6 == a3) {
        char v8 = 1;
      }
      else {
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      char v8 = 0;
    }
  }
  else
  {
    char v8 = 1;
  }
  return v8 & 1;
}

uint64_t sub_10000B318()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10000B340()
{
  sub_10000B318();

  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for CloudChannelMessageProcessor()
{
  return sub_10000B38C();
}

uint64_t sub_10000B38C()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10000B3BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

uint64_t sub_10000B3C4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10000B4BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v9 + 64);
  unint64_t v13 = ((v12
        + ((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + v10
          + 8) & ~(unint64_t)v10)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unsigned int v14 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  int v15 = (*(_DWORD *)(v6 + 80) | v10) & 0x100000;
  if (v14 > 7 || v15 != 0 || v13 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v19 = v8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v20 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v20 = *v21;
    v20[1] = v21[1];
    uint64_t v22 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v22 = *v23;
    v22[1] = v23[1];
    uint64_t v24 = (void *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v25 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v24 = *v25;
    uint64_t v26 = ((unint64_t)v24 + v11 + 8) & ~v11;
    uint64_t v27 = ((unint64_t)v25 + v11 + 8) & ~v11;
    uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28(v26, v27, v19);
    unint64_t v29 = (v26 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (v27 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v31 = *(void *)v30;
    *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
    *(void *)unint64_t v29 = v31;
    uint64_t v32 = (void *)((v26 + v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    id v33 = (void *)((v27 + v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v32 = *v33;
    v32[1] = v33[1];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10000B728(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))((((((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ *(unsigned __int8 *)(*(void *)(v5 - 8) + 80)+ 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80), v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10000B810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  uint64_t v16 = v14 + 16;
  uint64_t v17 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = ((unint64_t)v11 + v17 + 8) & ~v17;
  uint64_t v19 = ((unint64_t)v12 + v17 + 8) & ~v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v18, v19, v13);
  uint64_t v20 = *(void *)(v16 + 48);
  uint64_t v21 = v20 + v18;
  uint64_t v22 = v20 + v19;
  unint64_t v23 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v25 = *(unsigned char *)(v24 + 8);
  *(void *)unint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = v25;
  uint64_t v26 = (void *)((v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v27 = (void *)((v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10000B994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = ((unint64_t)v11 + v16 + 8) & ~v16;
  uint64_t v18 = ((unint64_t)v12 + v16 + 8) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(v17, v18, v13);
  uint64_t v19 = *(void *)(v15 + 40);
  uint64_t v20 = v19 + v17;
  uint64_t v21 = v19 + v18;
  unint64_t v22 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v24 = *(unsigned char *)(v23 + 8);
  *(void *)unint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = v24;
  char v25 = (void *)((v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (void *)((v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  *char v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10000BB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  uint64_t v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = ((unint64_t)v11 + v16 + 8) & ~v16;
  uint64_t v18 = ((unint64_t)v12 + v16 + 8) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v17, v18, v13);
  uint64_t v19 = *(void *)(v15 + 32);
  uint64_t v20 = v19 + v17;
  uint64_t v21 = v19 + v18;
  unint64_t v22 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v24 = *(unsigned char *)(v23 + 8);
  *(void *)unint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = v24;
  *(_OWORD *)((v20 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10000BC54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v14 + 40;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = ((unint64_t)v11 + v16 + 8) & ~v16;
  uint64_t v18 = ((unint64_t)v12 + v16 + 8) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 40))(v17, v18, v13);
  uint64_t v19 = *(void *)(v15 + 24);
  uint64_t v20 = v19 + v17;
  uint64_t v21 = v19 + v18;
  unint64_t v22 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v24 = *(unsigned char *)(v23 + 8);
  *(void *)unint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = v24;
  char v25 = (void *)((v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (void *)((v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  *char v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10000BDD0(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v7 <= v10) {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v11 = v7;
  }
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v13 = *(void *)(v6 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v15 = v8;
  uint64_t v16 = v14 + 8;
  if (v12 < a2)
  {
    unint64_t v17 = ((*(void *)(*(void *)(v8 - 8) + 64)
          + ((v16 + ((((((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v14)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    uint64_t v18 = v17 & 0xFFFFFFF8;
    if ((v17 & 0xFFFFFFF8) != 0) {
      unsigned int v19 = 2;
    }
    else {
      unsigned int v19 = a2 - v12 + 1;
    }
    if (v19 >= 0x10000) {
      LODWORD(v20) = 4;
    }
    else {
      LODWORD(v20) = 2;
    }
    if (v19 < 0x100) {
      LODWORD(v20) = 1;
    }
    if (v19 >= 2) {
      uint64_t v20 = v20;
    }
    else {
      uint64_t v20 = 0;
    }
    switch(v20)
    {
      case 1:
        int v21 = *((unsigned __int8 *)a1 + v17);
        if (!v21) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v21 = *(unsigned __int16 *)((char *)a1 + v17);
        if (v21) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10000C014);
      case 4:
        int v21 = *(int *)((char *)a1 + v17);
        if (!v21) {
          break;
        }
LABEL_25:
        int v23 = v21 - 1;
        if (v18)
        {
          int v23 = 0;
          int v24 = *a1;
        }
        else
        {
          int v24 = 0;
        }
        return v12 + (v24 | v23) + 1;
      default:
        break;
    }
  }
  if (v7 == v12)
  {
    unint64_t v25 = (unint64_t)a1;
    uint64_t v10 = v7;
    uint64_t v15 = v5;
LABEL_35:
    return sub_1000082E8(v25, v10, v15);
  }
  unint64_t v26 = ((unint64_t)a1 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  if ((v11 & 0x80000000) != 0)
  {
    unint64_t v25 = (v16 + ((((v26 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v14;
    goto LABEL_35;
  }
  unint64_t v27 = *(void *)(v26 + 8);
  if (v27 >= 0xFFFFFFFF) {
    LODWORD(v27) = -1;
  }
  return (v27 + 1);
}

void sub_10000C028(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v9 <= v12) {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v13 = v9;
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = *(void *)(v8 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  size_t v17 = ((*(void *)(*(void *)(v10 - 8) + 64)
        + ((v16 + 8 + ((((((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v14 >= a3)
  {
    int v20 = 0;
  }
  else
  {
    if (((*(_DWORD *)(*(void *)(v10 - 8) + 64)
         + ((v16 + 8 + ((((((v15 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)) & ~v16)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v18 = a3 - v14 + 1;
    else {
      unsigned int v18 = 2;
    }
    if (v18 >= 0x10000) {
      int v19 = 4;
    }
    else {
      int v19 = 2;
    }
    if (v18 < 0x100) {
      int v19 = 1;
    }
    if (v18 >= 2) {
      int v20 = v19;
    }
    else {
      int v20 = 0;
    }
  }
  if (a2 > v14)
  {
    if (((*(_DWORD *)(*(void *)(v10 - 8) + 64)
         + ((v16 + 8 + ((((((v15 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)) & ~v16)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      int v21 = a2 - v14;
    else {
      int v21 = 1;
    }
    if (((*(_DWORD *)(*(void *)(v10 - 8) + 64)
         + ((v16 + 8 + ((((((v15 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)) & ~v16)
         + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v22 = ~v14 + a2;
      bzero(a1, v17);
      *a1 = v22;
    }
    switch(v20)
    {
      case 1:
        *((unsigned char *)a1 + v17) = v21;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v17) = v21;
        return;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)((char *)a1 + v17) = v21;
        return;
      default:
        return;
    }
  }
  switch(v20)
  {
    case 1:
      *((unsigned char *)a1 + v17) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)((char *)a1 + v17) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x10000C2C8);
    case 4:
      *(_DWORD *)((char *)a1 + v17) = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (!a2) {
        return;
      }
LABEL_35:
      if (v9 == v14)
      {
        unint64_t v23 = (unint64_t)a1;
        uint64_t v24 = a2;
        uint64_t v12 = v9;
        uint64_t v10 = v7;
      }
      else
      {
        unint64_t v25 = (void *)(((unint64_t)a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
        if ((v13 & 0x80000000) == 0)
        {
          if ((a2 & 0x80000000) != 0)
          {
            *unint64_t v25 = a2 ^ 0x80000000;
            v25[1] = 0;
          }
          else
          {
            v25[1] = (a2 - 1);
          }
          return;
        }
        unint64_t v23 = (v16 + 8 + (((((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16;
        uint64_t v24 = a2;
      }
      sub_1000082C0(v23, v24, v12, v10);
      return;
  }
}

uint64_t type metadata accessor for CloudChannelMessageProcessor.CloudChannelMessageContentWrapper()
{
  return sub_10000B38C();
}

uint64_t type metadata accessor for CloudChannelMessageProcessor.CloudChannelMessageContentWrapper.CodingKeys()
{
  return sub_10000B38C();
}

unint64_t sub_10000C320()
{
  unint64_t result = qword_1000FC470[0];
  if (!qword_1000FC470[0])
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000FC470);
  }
  return result;
}

uint64_t sub_10000C370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

unsigned char *initializeBufferWithCopyOfBuffer for SportsEnvironment(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for LiveActivityAutostartContent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_10000C410(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10000C4DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t sub_10000C504(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10000C50C(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

uint64_t sub_10000C514()
{
  return swift_getWitnessTable();
}

uint64_t sub_10000C530()
{
  return swift_getWitnessTable();
}

uint64_t sub_10000C54C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10000C5A0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000EF088, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_10000C5F4(char a1)
{
  if (a1) {
    return 7759204;
  }
  else {
    return 1685025392;
  }
}

uint64_t sub_10000C61C(char *a1, char *a2)
{
  return sub_10006A4F8(*a1, *a2);
}

Swift::Int sub_10000C628()
{
  return sub_10006AAEC();
}

uint64_t sub_10000C630()
{
  return sub_10006B044();
}

Swift::Int sub_10000C638()
{
  return sub_10006B4FC();
}

uint64_t sub_10000C640@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10000C5A0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10000C670@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10000C5F4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10000C69C()
{
  v6[0] = sub_100005E5C(&qword_1000FC598);
  uint64_t v0 = *(void *)(v6[0] - 8);
  __chkstk_darwin(v6[0]);
  Swift::String v2 = (char *)v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000FBD58 != -1) {
    swift_once();
  }
  v6[1] = *(void *)(qword_10010A490 + 24);
  swift_retain();
  static Subscribers.Demand.unlimited.getter();
  sub_100005E5C(&qword_1000FC080);
  sub_100005E5C(&qword_1000FC5A0);
  sub_10000953C(&qword_1000FC090, &qword_1000FC080);
  sub_10000953C(&qword_1000FC5A8, &qword_1000FC5A0);
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  swift_release();
  sub_10000953C(&qword_1000FC5B0, &qword_1000FC598);
  uint64_t v3 = v6[0];
  uint64_t v4 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v3);
  return v4;
}

uint64_t sub_10000C8B0@<X0>(uint64_t *a1@<X8>)
{
  int v20 = a1;
  uint64_t v1 = sub_100005E5C(&qword_1000FC5B8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100005E5C(&qword_1000FC5C0);
  uint64_t v18 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005E5C(&qword_1000FC1C0);
  uint64_t result = swift_initStackObject();
  uint64_t v7 = result;
  unint64_t v8 = 0;
  *(_OWORD *)(result + 16) = xmmword_1000CB040;
  *(void *)(result + 40) = 0xE400000000000000;
  uint64_t v9 = (uint64_t *)(result + 40);
  *(void *)(result + 32) = 1936553065;
  *(void *)(result + 48) = 0x6567617473;
  *(void *)(result + 56) = 0xE500000000000000;
  *(void *)(result + 64) = 7630441;
  *(void *)(result + 72) = 0xE300000000000000;
  *(void *)(result + 80) = 24945;
  *(void *)(result + 88) = 0xE200000000000000;
  *(void *)(result + 96) = 7759204;
  *(void *)(result + 104) = 0xE300000000000000;
  *(void *)(result + 112) = 6516592;
  *(void *)(result + 120) = 0xE300000000000000;
  *(void *)(result + 128) = 1953719668;
  *(void *)(result + 136) = 0xE400000000000000;
  while (v8 < *(void *)(v7 + 16))
  {
    uint64_t v11 = *(v9 - 1);
    uint64_t v10 = *v9;
    swift_bridgeObjectRetain();
    uint64_t v23 = URL.absoluteString.getter();
    uint64_t v24 = v12;
    uint64_t v21 = v11;
    uint64_t v22 = v10;
    uint64_t v13 = type metadata accessor for Locale();
    sub_1000082C0((uint64_t)v3, 1, 1, v13);
    sub_10000CC08();
    StringProtocol.range<A>(of:options:range:locale:)();
    char v15 = v14;
    sub_10000CC54((uint64_t)v3);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      swift_setDeallocating();
      sub_10009C1AC();
      LOBYTE(v23) = 1;
      goto LABEL_7;
    }
    ++v8;
    v9 += 2;
    if (v8 == 7)
    {
      swift_setDeallocating();
      sub_10009C1AC();
      LOBYTE(v23) = 0;
LABEL_7:
      Just.init(_:)();
      sub_10000953C(&qword_1000FC5C8, &qword_1000FC5C0);
      uint64_t v16 = v19;
      uint64_t v17 = Publisher.eraseToAnyPublisher()();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v5, v16);
      *int v20 = v17;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10000CBD4()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for SportsEnvironmentPublisher()
{
  return self;
}

unint64_t sub_10000CC08()
{
  unint64_t result = qword_1000FC7B0;
  if (!qword_1000FC7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FC7B0);
  }
  return result;
}

uint64_t sub_10000CC54(uint64_t a1)
{
  uint64_t v2 = sub_100005E5C(&qword_1000FC5B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsEnvironment(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SportsEnvironment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10000CE08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_10000CE30(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SportsEnvironment()
{
  return &type metadata for SportsEnvironment;
}

unint64_t sub_10000CE50()
{
  unint64_t result = qword_1000FC5D0;
  if (!qword_1000FC5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FC5D0);
  }
  return result;
}

uint64_t sub_10000CE9C()
{
  type metadata accessor for CloudChannelTaskActor();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  qword_10010A3F0 = v0;
  return result;
}

uint64_t *sub_10000CED8()
{
  if (qword_1000FBD10 != -1) {
    swift_once();
  }
  return &qword_10010A3F0;
}

uint64_t sub_10000CF24()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for CloudChannelTaskActor()
{
  return self;
}

uint64_t sub_10000CF78()
{
  return v0;
}

uint64_t sub_10000CF84()
{
  return sub_10000CF78();
}

uint64_t sub_10000CFA0()
{
  sub_10000CED8();

  return swift_retain();
}

uint64_t sub_10000CFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for CloudChannelTaskActor();

  return static GlobalActor.sharedUnownedExecutor.getter(v3, a2);
}

void sub_10000D008()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v4 = v3;
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000929C(v5, (uint64_t)qword_10010A520);
    sub_10001CA80();
    swift_bridgeObjectRetain_n();
    unsigned int v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v6, v7))
    {
      unint64_t v8 = (uint8_t *)sub_10001C638();
      swift_slowAlloc();
      *(_DWORD *)unint64_t v8 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_10001C840();
      sub_100017098(v9, v10, v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Current environment: %s", v8, 0xCu);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();
    }
    else
    {

      sub_10001C678();
    }
    sub_10001C1C0(0, (unint64_t *)&qword_1000FC998);
    sub_10001CA80();
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
    id v13 = objc_allocWithZone((Class)APSConnection);
    uint64_t v14 = sub_10001C840();
    id v17 = sub_10001563C(v14, v15, 0xD000000000000015, v16, v12);
    uint64_t v18 = OBJC_IVAR____TtC7sportsd11ApsListener_apsConnection;
    uint64_t v19 = *(void **)&v1[OBJC_IVAR____TtC7sportsd11ApsListener_apsConnection];
    *(void *)&v1[OBJC_IVAR____TtC7sportsd11ApsListener_apsConnection] = v17;

    int v20 = *(void **)&v1[v18];
    if (v20)
    {
      sub_10001B860((uint64_t)&off_1000EF0D8, v20, (SEL *)&selRef__setEnabledTopics_);
      uint64_t v21 = *(void **)&v1[v18];
      if (v21)
      {
        sub_10001B860((uint64_t)&off_1000EF108, v21, (SEL *)&selRef__setOpportunisticTopics_);
        uint64_t v22 = *(void **)&v1[v18];
        if (v22) {
          [v22 setDelegate:v1];
        }
      }
    }
    uint64_t v23 = (uint64_t *)&v1[OBJC_IVAR____TtC7sportsd11ApsListener_currentAPSConnectionEnvironment];
    *uint64_t v23 = v2;
    v23[1] = v4;
    swift_bridgeObjectRelease();
    uint64_t v24 = *(void **)&v1[v18];
    if (v24)
    {
      unint64_t v25 = *(os_unfair_lock_s **)&v1[OBJC_IVAR____TtC7sportsd11ApsListener_connection];
      uint64_t v26 = (uint64_t)&v25[4];
      unint64_t v27 = v25 + 7;
      uint64_t v28 = v24;
      os_unfair_lock_lock(v27);
      sub_10000D308(v26, v28);
      os_unfair_lock_unlock(v27);

      uint64_t v1 = v28;
    }
  }
}

void sub_10000D308(uint64_t a1, void *a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a1 + 8) != 1)
    {
      *(void *)a1 = a2;
      *(unsigned char *)(a1 + 8) = 1;
      id v2 = a2;
    }
  }
  else
  {
    uint64_t v3 = *(uint64_t **)a1;
    *(void *)a1 = a2;
    *(unsigned char *)(a1 + 8) = 1;
    uint64_t v4 = v3[2];
    if (v4)
    {
      uint64_t v5 = v3 + 4;
      id v6 = a2;
      sub_1000153E4(v3, 0);
      do
      {
        uint64_t v7 = *v5++;
        **(void **)(*(void *)(v7 + 64) + 40) = v6;
        id v8 = v6;
        swift_continuation_resume();
        --v4;
      }
      while (v4);
      sub_100015410(v3, 0);
    }
    else
    {
      id v9 = a2;
    }
    sub_100015410(v3, 0);
  }
}

void sub_10000D3E4()
{
  id v2 = v0;
  uint64_t v3 = type metadata accessor for CloudChannelPreferences.AuditStrategy();
  sub_100009830();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10001C7A0();
  static CloudChannelPreferences.subscriptionAuditStrategy.getter();
  if ((*(unsigned int (**)(double *, uint64_t))(v5 + 88))(v1, v3) == enum case for CloudChannelPreferences.AuditStrategy.nextPush(_:))
  {
    (*(void (**)(double *, uint64_t))(v5 + 96))(v1, v3);
    double v7 = *v1;
    uint64_t v8 = OBJC_IVAR____TtC7sportsd11ApsListener_cloudChannelAuditDebouncer;
    id v9 = *(void **)&v2[OBJC_IVAR____TtC7sportsd11ApsListener_cloudChannelAuditDebouncer];
    if (v9) {
      [v9 invalidate];
    }
    sub_10001C1C0(0, &qword_1000FC958);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v2;
    uint64_t v11 = v2;
    id v12 = sub_10000FE3C(0, (uint64_t)sub_10001C074, v10, v7);
    id v13 = *(void **)&v2[v8];
    *(void *)&v2[v8] = v12;

    id v14 = [self mainRunLoop];
    uint64_t v15 = *(void *)&v2[v8];
    if (v15)
    {
      uint64_t v16 = v14;
      [v14 addTimer:v15 forMode:NSRunLoopCommonModes];
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    (*(void (**)(double *, uint64_t))(v5 + 8))(v1, v3);
  }
}

uint64_t sub_10000D59C()
{
  sub_10001CAE8();
  return _swift_task_switch(v0, v1, v2);
}

uint64_t sub_10000D5BC()
{
  sub_10001C234();
  type metadata accessor for CloudChannelSubscriptionManager();
  *(void *)(v0 + 16) = static CloudChannelSubscriptionManager.shared.getter();
  sub_10001BD28(&qword_1000FC780, 255, (void (*)(uint64_t))&type metadata accessor for CloudChannelSubscriptionManager);
  dispatch thunk of Actor.unownedExecutor.getter();
  sub_10001C5C4();
  sub_10001C4D8();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10000D678()
{
  sub_10001C28C();
  dispatch thunk of CloudChannelSubscriptionManager.clearChannelMap()();
  *(void *)(v0 + 24) = 0;
  swift_release();
  sub_10001C298();
  return v1();
}

uint64_t sub_10000D724()
{
  sub_10001C234();
  swift_release();
  sub_10001C2E0();
  return v0();
}

uint64_t sub_10000D780(uint64_t a1, unint64_t a2)
{
  sub_10000D828(a1, a2);
  sub_100005E5C(&qword_1000FC7D0);
  sub_10000953C((unint64_t *)&qword_1000FC7D8, &qword_1000FC7D0);
  uint64_t v2 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v2;
}

void *sub_10000D828(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = _swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_46;
      }
      uint64_t v5 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v5) {
        return v3;
      }
      uint64_t v31 = BYTE6(a2);
      unint64_t v30 = HIDWORD(a1);
      uint64_t v47 = _swiftEmptyArrayStorage;
      uint64_t v8 = v5 & ~(v5 >> 63);
      sub_100017DA8();
      uint64_t v9 = a1;
      uint64_t v3 = _swiftEmptyArrayStorage;
      char v32 = a2;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v10 = (int)a1;
        }
        else {
          uint64_t v10 = *(void *)(a1 + 16);
        }
        if (v5 < 0)
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
        }
      }
      else
      {
        if (v5 < 0) {
          goto LABEL_48;
        }
        uint64_t v10 = 0;
      }
      unint64_t v28 = a2 >> 16;
      unint64_t v29 = a2 >> 8;
      unint64_t v26 = HIDWORD(a2);
      unint64_t v27 = a2 >> 24;
      unint64_t v25 = a2 >> 40;
      int v34 = v2;
      do
      {
        if (!v8)
        {
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v10 < (int)a1 || v10 >= a1 >> 32) {
              goto LABEL_39;
            }
            uint64_t v12 = __DataStorage._bytes.getter();
            if (!v12) {
              goto LABEL_49;
            }
            uint64_t v13 = v12;
            uint64_t v14 = __DataStorage._offset.getter();
            uint64_t v15 = v10 - v14;
            if (__OFSUB__(v10, v14)) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v10 < *(void *)(v9 + 16)) {
              goto LABEL_41;
            }
            if (v10 >= *(void *)(v9 + 24)) {
              goto LABEL_43;
            }
            uint64_t v17 = __DataStorage._bytes.getter();
            if (!v17) {
              goto LABEL_50;
            }
            uint64_t v13 = v17;
            uint64_t v18 = __DataStorage._offset.getter();
            uint64_t v15 = v10 - v18;
            if (__OFSUB__(v10, v18)) {
              goto LABEL_44;
            }
          }
          char v16 = *(unsigned char *)(v13 + v15);
          uint64_t v9 = a1;
        }
        else
        {
          if (v10 >= v31) {
            goto LABEL_40;
          }
          char v35 = v9;
          __int16 v36 = *(_WORD *)((char *)&a1 + 1);
          char v37 = BYTE3(a1);
          char v38 = v30;
          __int16 v39 = *(_WORD *)((char *)&a1 + 5);
          char v40 = HIBYTE(a1);
          char v41 = v32;
          char v42 = v29;
          char v43 = v28;
          char v44 = v27;
          char v45 = v26;
          char v46 = v25;
          char v16 = *(&v35 + v10);
        }
        sub_100005E5C(&qword_1000FC8A8);
        uint64_t v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = xmmword_1000CABA0;
        *(void *)(v19 + 56) = &type metadata for UInt8;
        *(void *)(v19 + 64) = &protocol witness table for UInt8;
        *(unsigned char *)(v19 + 32) = v16;
        uint64_t v20 = String.init(format:_:)();
        uint64_t v22 = v21;
        uint64_t v47 = v3;
        unint64_t v2 = v3[2];
        if (v2 >= v3[3] >> 1)
        {
          sub_100017DA8();
          uint64_t v9 = a1;
          uint64_t v3 = v47;
        }
        v3[2] = v2 + 1;
        uint64_t v23 = &v3[2 * v2];
        v23[4] = v20;
        v23[5] = v22;
        ++v10;
        --v8;
        --v5;
        LODWORD(v2) = v34;
      }
      while (v5);
      return v3;
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      uint64_t v5 = v6 - v7;
      if (!__OFSUB__(v6, v7)) {
        goto LABEL_6;
      }
      goto LABEL_47;
    case 3uLL:
      return v3;
    default:
      uint64_t v5 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_10000DBE0()
{
  uint64_t v2 = sub_100005E5C(&qword_1000FC8D8);
  sub_100009830();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10001C7A0();
  uint64_t v6 = sub_100005E5C(&qword_1000FC8E0);
  sub_100009830();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_1000098F8();
  uint64_t v12 = v11 - v10;
  if (*(void *)(v0 + OBJC_IVAR____TtC7sportsd11ApsListener_pushToken + 8))
  {
    swift_bridgeObjectRetain();
    Just.init(_:)();
    sub_10000953C(&qword_1000FC900, &qword_1000FC8E0);
    uint64_t v13 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
  }
  else
  {
    sub_100005E5C(&qword_1000FC8E8);
    sub_10000953C(&qword_1000FC8F0, &qword_1000FC8E8);
    Publisher.first()();
    sub_10000953C(&qword_1000FC8F8, &qword_1000FC8D8);
    uint64_t v13 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  }
  return v13;
}

uint64_t sub_10000DDEC()
{
  sub_10001C234();
  *(void *)(v1 + 88) = v0;
  if (qword_1000FBD10 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10010A3F0;
  return _swift_task_switch(sub_10000DE80, v2, 0);
}

uint64_t sub_10000DE80()
{
  sub_10001C234();
  uint64_t v0 = qword_10010A3F0;
  sub_10001BD28(&qword_1000FC750, v1, (void (*)(uint64_t))type metadata accessor for CloudChannelTaskActor);
  if (v0)
  {
    swift_getObjectType();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v3;
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v4 = 0;
  }
  return _swift_task_switch(sub_10000DF40, v2, v4);
}

uint64_t sub_10000DF40()
{
  sub_10001C690();
  uint64_t v1 = v0[11];
  v0[2] = v0;
  v0[7] = v0 + 10;
  v0[3] = sub_10000E050;
  uint64_t v2 = swift_continuation_init();
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC7sportsd11ApsListener_connection);
  *(void *)(swift_task_alloc() + 16) = v2;
  os_unfair_lock_lock(v3 + 7);
  sub_10001BB78((uint64_t)&v3[4]);
  os_unfair_lock_unlock(v3 + 7);
  swift_task_dealloc();
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10000E050()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 8);
  return v3(v2);
}

void sub_10000E118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a1 + 8) == 1)
    {
      **(void **)(*(void *)(a2 + 64) + 40) = v4;
      uint64_t v5 = v4;
      swift_continuation_resume();
      return;
    }
    sub_100005E5C(&qword_1000FC7E8);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1000CABA0;
    *(void *)(v7 + 32) = a2;
    *(void *)a1 = v7;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100015C14();
      uint64_t v4 = v8;
    }
    unint64_t v6 = v4[2];
    if (v6 >= v4[3] >> 1)
    {
      sub_100015C14();
      uint64_t v4 = v9;
    }
    v4[2] = v6 + 1;
    v4[v6 + 4] = a2;
    *(void *)a1 = v4;
  }
  *(unsigned char *)(a1 + 8) = 0;
}

void sub_10000E244()
{
}

uint64_t type metadata accessor for ApsListener()
{
  return self;
}

void sub_10000E36C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = sub_10000D780(a2, a3);
  unint64_t v6 = (uint64_t *)&v3[OBJC_IVAR____TtC7sportsd11ApsListener_pushToken];
  *unint64_t v6 = v5;
  v6[1] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_10001C840();
  v18[0] = sub_10000D780(v8, v9);
  v18[1] = v10;
  PassthroughSubject.send(_:)();
  swift_bridgeObjectRelease();
  if (qword_1000FBDC0 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = (uint8_t *)sub_10000929C(v11, (uint64_t)qword_10010A508);
  id v13 = v4;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    sub_10001C638();
    v18[0] = sub_10001C55C();
    *(_DWORD *)uint64_t v12 = 136380675;
    if (v6[1])
    {
      uint64_t v16 = *v6;
      unint64_t v17 = v6[1];
    }
    else
    {
      uint64_t v16 = 0;
      unint64_t v17 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    sub_100017098(v16, v17, v18);
    sub_10001CA6C();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Did receive push token %{private}s", v12, 0xCu);
    swift_arrayDestroy();
    sub_10001C2C8();
    sub_10001C2C8();
  }
  else
  {
  }
}

void sub_10000E5EC()
{
  sub_1000098B8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_100005E5C(&qword_1000FC938);
  uint64_t v5 = sub_10001C9AC(v4);
  __chkstk_darwin(v5);
  sub_1000098F8();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_100005E5C(&qword_1000FC940);
  uint64_t v10 = sub_10001C9AC(v9);
  __chkstk_darwin(v10);
  sub_1000098F8();
  uint64_t v13 = v12 - v11;
  sub_10001BE20(v3, (SEL *)&selRef_channelID);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  if (v15)
  {
    if (qword_1000FBD70 != -1) {
      swift_once();
    }
    v42[0] = (uint64_t)v3;
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    sub_10000D3E4();
    goto LABEL_22;
  }
  uint64_t v40 = sub_10001BE20(v3, (SEL *)&selRef_topic);
  if (v16)
  {
    unint64_t v17 = v16;
    if (qword_1000FBDC0 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    uint64_t v19 = (uint8_t *)sub_10000929C(v18, (uint64_t)qword_10010A508);
    swift_bridgeObjectRetain_n();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v39 = v1;
      uint64_t v22 = (uint8_t *)sub_10001C638();
      v42[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_100017098(v40, v17, v42);
      sub_10001C944(v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Did receive push notification for topic %s", v22, 0xCu);
      swift_arrayDestroy();
      sub_10001C2C8();
      uint64_t v1 = v39;
      sub_10001C2C8();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (v40 == 0xD000000000000011 && v17 == 0x80000001000D0580 || (sub_10001C8F8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = type metadata accessor for TaskPriority();
      sub_1000082C0(v13, 1, 1, v29);
      uint64_t v30 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v31 = (void *)swift_allocObject();
      v31[2] = 0;
      void v31[3] = 0;
      v31[4] = v30;
      v31[5] = v3;
      id v32 = v3;
      sub_100051F94(v13, (uint64_t)&unk_1000FC950, (uint64_t)v31);
      swift_release();
LABEL_22:
      sub_1000098A0();
      return;
    }
    if ((v40 != 0xD000000000000020 || v17 != 0x80000001000D05A0) && (sub_10001C8F8() & 1) == 0)
    {
      swift_bridgeObjectRetain();
      __int16 v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v36, v37))
      {
        sub_10001C638();
        v42[0] = sub_10001C55C();
        *(_DWORD *)uint64_t v19 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_100017098(v40, v17, v42);
        sub_10001C944(v38);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Topic not supported: %s", v19, 0xCu);
        swift_arrayDestroy();
        sub_10001C2C8();
        sub_10001C2C8();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
    sub_100008B98(v1 + OBJC_IVAR____TtC7sportsd11ApsListener_messageProcessing, (uint64_t)v42);
    sub_100005EA0(v42, v42[3]);
    uint64_t v33 = sub_10001B7F4(v3);
    if (v33)
    {
      uint64_t v34 = v33;
      uint64_t v35 = type metadata accessor for Date();
      sub_1000082C0(v8, 1, 1, v35);
      sub_1000C5F18(v34, 1, v8, (uint64_t)nullsub_1, 0);
      swift_bridgeObjectRelease();
      sub_10001C16C(v8, &qword_1000FC938);
      sub_100006178((uint64_t)v42);
      goto LABEL_22;
    }
    __break(1u);
  }
  else
  {
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_10000929C(v24, (uint64_t)qword_10010A520);
    char v41 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v41, v25))
    {
      unint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v25, "This message has no topic", v26, 2u);
      sub_10001C2C8();
    }
    sub_1000098A0();
  }
}

uint64_t sub_10000EC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  sub_100005E5C(&qword_1000FC938);
  v5[12] = swift_task_alloc();
  return _swift_task_switch(sub_10000ECAC, 0, 0);
}

uint64_t sub_10000ECAC()
{
  sub_10001C234();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 104) = Strong;
  if (Strong)
  {
    if (qword_1000FBDF8 != -1) {
      swift_once();
    }
    uint64_t v2 = qword_10010A5B0;
    *(void *)(v0 + 112) = qword_10010A5B0;
    return _swift_task_switch(sub_10000EDA0, v2, 0);
  }
  else
  {
    swift_task_dealloc();
    sub_10001C2E0();
    return v3();
  }
}

uint64_t sub_10000EDA0()
{
  sub_10001C234();
  *(unsigned char *)(v0 + 120) = sub_100085FCC() & 1;
  sub_10001CAE8();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10000EE08()
{
  sub_10001C690();
  int v1 = *(unsigned __int8 *)(v0 + 120);
  char v2 = sub_10000EFB8();
  if (v1 == 1)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(v0 + 104);
      uint64_t v4 = OBJC_IVAR____TtC7sportsd11ApsListener_apsConnection;
      uint64_t v5 = *(void **)(v3 + OBJC_IVAR____TtC7sportsd11ApsListener_apsConnection);
      if (v5)
      {
        sub_10001B860((uint64_t)&off_1000EF138, v5, (SEL *)&selRef__setEnabledTopics_);
        uint64_t v6 = *(void **)(v3 + v4);
        if (v6)
        {
          uint64_t v7 = &off_1000EF168;
LABEL_10:
          sub_10001B860((uint64_t)v7, v6, (SEL *)&selRef__setOpportunisticTopics_);
        }
      }
    }
  }
  else if ((v2 & 1) == 0)
  {
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v9 = OBJC_IVAR____TtC7sportsd11ApsListener_apsConnection;
    uint64_t v10 = *(void **)(v8 + OBJC_IVAR____TtC7sportsd11ApsListener_apsConnection);
    if (v10)
    {
      sub_10001B860((uint64_t)_swiftEmptyArrayStorage, v10, (SEL *)&selRef__setEnabledTopics_);
      uint64_t v6 = *(void **)(v8 + v9);
      if (v6)
      {
        uint64_t v7 = &off_1000EF198;
        goto LABEL_10;
      }
    }
  }
  sub_100008B98(*(void *)(v0 + 104) + OBJC_IVAR____TtC7sportsd11ApsListener_messageProcessing, v0 + 16);
  sub_100005EA0((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v11 = (void *)sub_10001CA80();
  uint64_t result = sub_10001B7F4(v11);
  if (result)
  {
    uint64_t v13 = result;
    uint64_t v14 = *(void *)(v0 + 96);
    uint64_t v15 = *(void **)(v0 + 104);
    uint64_t v16 = type metadata accessor for Date();
    sub_1000082C0(v14, 1, 1, v16);
    sub_1000C5F18(v13, 0, v14, (uint64_t)nullsub_1, 0);
    swift_bridgeObjectRelease();

    sub_10001C16C(v14, &qword_1000FC938);
    sub_100006178(v0 + 16);
    swift_task_dealloc();
    sub_10001C2E0();
    sub_10001C898();
    __asm { BRAA            X1, X16 }
  }
  __break(1u);
  return result;
}

uint64_t sub_10000EFB8()
{
  int v1 = *(void **)(v0 + OBJC_IVAR____TtC7sportsd11ApsListener_apsConnection);
  if (!v1) {
    return 0;
  }
  uint64_t result = sub_10001B8D4(v1);
  if (result)
  {
    uint64_t v3 = *(void *)(result + 16);
    swift_bridgeObjectRelease();
    return v3 == 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10000F080(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100005E5C(&qword_1000FC940);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  sub_1000082C0((uint64_t)v5, 1, 1, v6);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = a2;
  int v8 = sub_1000082E8((uint64_t)v5, 1, v6);
  id v9 = a2;
  if (v8 == 1)
  {
    sub_10001C16C((uint64_t)v5, &qword_1000FC940);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  if (v11 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v10;
    v14[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_10000F25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_10000F27C, 0, 0);
}

uint64_t sub_10000F27C()
{
  sub_10001C234();
  *(void *)(v0 + 24) = type metadata accessor for CloudChannelSubscriptionManager();
  *(void *)(v0 + 32) = static CloudChannelSubscriptionManager.shared.getter();
  sub_10001BD28(&qword_1000FC780, 255, (void (*)(uint64_t))&type metadata accessor for CloudChannelSubscriptionManager);
  dispatch thunk of Actor.unownedExecutor.getter();
  sub_10001C5C4();
  sub_10001C4D8();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10000F33C()
{
  sub_10001C28C();
  *(void *)(v0 + 40) = dispatch thunk of CloudChannelSubscriptionManager.audit(clearExpiredEntries:)();
  *(void *)(v0 + 48) = 0;
  swift_release();
  sub_10001CAE8();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10000F3CC()
{
  sub_10001C28C();
  static CloudChannelSubscriptionManager.topic.getter();
  *(void *)(v0 + 56) = v1;
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_10001C964(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_10000F474;
  sub_10001CA8C(*(void *)(v0 + 40));
  return sub_10000F648();
}

uint64_t sub_10000F474()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v3 = v2;
  sub_10001C240();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_10001C240();
  *uint64_t v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_10001CAE8();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001C298();
    return v10();
  }
}

uint64_t sub_10000F584()
{
  sub_10001C234();
  swift_release();
  sub_10001C2E0();
  return v0();
}

uint64_t sub_10000F5E0()
{
  sub_10001C234();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001C2E0();
  return v0();
}

uint64_t sub_10000F648()
{
  sub_10001C28C();
  uint64_t v4 = sub_10001C85C(v1, v2, v3);
  v0[8] = v4;
  sub_10000984C(v4);
  v0[9] = v5;
  v0[10] = swift_task_alloc();
  if (qword_1000FBD10 != -1) {
    swift_once();
  }
  v0[11] = qword_10010A3F0;
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_10001C958(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_10000F744;
  sub_10001C428();
  return sub_100011CCC();
}

uint64_t sub_10000F744()
{
  sub_10001C28C();
  sub_10001C208();
  uint64_t v3 = v2;
  sub_10001C240();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 104) = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_10001C438();
    return v6();
  }
  else
  {
    sub_10001C62C();
    return _swift_task_switch(v8, v9, v10);
  }
}

uint64_t sub_10000F85C()
{
  uint64_t v77 = v1;
  uint64_t v4 = *(void *)(v1 + 104);
  if (!v4)
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
    goto LABEL_22;
  }
  sub_10001CA20();
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v0 = _CocoaArrayWrapper.endIndex.getter();
    if (v0) {
      goto LABEL_4;
    }
  }
  else
  {
    sub_10001CA08();
    if (v0)
    {
LABEL_4:
      if (v0 < 1)
      {
        __break(1u);
        goto LABEL_51;
      }
      unint64_t v6 = *(void *)(v1 + 104) & 0xC000000000000001;
      uint64_t v7 = _swiftEmptyArrayStorage;
      do
      {
        if (v6) {
          uint64_t v8 = (void *)sub_10001C9F0();
        }
        else {
          uint64_t v8 = sub_10001C9D8();
        }
        sub_10001BE20(v8, (SEL *)&selRef_channelID);
        sub_10001C880();
        if (v3)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10001C2EC();
            uint64_t v7 = v12;
          }
          unint64_t v9 = v7[2];
          if (v9 >= v7[3] >> 1)
          {
            sub_10001C448();
            uint64_t v7 = v13;
          }
          v7[2] = v9 + 1;
          uint64_t v10 = &v7[2 * v9];
          v10[4] = v2;
          v10[5] = v3;
        }
        sub_10001C80C();
      }
      while (!v11);
      goto LABEL_21;
    }
  }
  uint64_t v7 = _swiftEmptyArrayStorage;
LABEL_21:
  swift_bridgeObjectRelease_n();
LABEL_22:
  sub_10001C9B8();
  uint64_t v14 = sub_100018648((uint64_t)v7, v4);
  swift_bridgeObjectRelease();
  unint64_t v15 = (unint64_t)sub_100013EB0(v14);
  *(void *)(v2 + 88) = v15;
  swift_release();
  if (v15 >> 62)
  {
    sub_10001C4E4();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v17 = v75;
  if (!v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_10001C47C();
    __asm { BRAA            X1, X16 }
  }
  if (qword_1000FBDE8 != -1) {
    swift_once();
  }
  uint64_t v18 = *(void *)(v75 + 72);
  sub_10000929C(*(void *)(v75 + 64), (uint64_t)qword_10010A580);
  uint64_t v19 = sub_10001C5D0();
  v20(v19);
  swift_bridgeObjectRetain_n();
  os_log_type_t v21 = Logger.logObject.getter();
  uint64_t v22 = (_DWORD *)static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, (os_log_type_t)v22))
  {
    HIDWORD(v70) = v22;
    sub_10001C638();
    uint64_t v23 = sub_10001C55C();
    uint64_t v68 = v23;
    uint64_t v76 = v23;
    uint64_t v72 = (uint64_t)v22;
    *uint64_t v22 = 136315138;
    if (v15 >> 62)
    {
      sub_10001C4E4();
      uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v23 = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v31)
    {
      sub_10001C77C();
      if ((v31 & 0x8000000000000000) == 0)
      {
        while (1)
        {
          id v36 = (v15 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
              : *(id *)(v15 + 32);
          os_log_type_t v37 = v36;
          sub_10001BE20(v36, (SEL *)&selRef_channelID);
          if (!v38) {
            goto LABEL_52;
          }

          sub_10001C970();
          if (v39) {
            sub_10001C740();
          }
          sub_10001C764();
          if (v11) {
            goto LABEL_45;
          }
        }
      }
LABEL_51:
      __break(1u);
LABEL_52:
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
LABEL_45:
    sub_10001C388(v23, v24, v25, v26, v27, v28, v29, v30, v62, v65, v68, v70, v72, (uint64_t)v21, v2, v75);
    sub_100005E5C(&qword_1000FC7D0);
    sub_10000953C((unint64_t *)&qword_1000FC7D8, &qword_1000FC7D0);
    uint64_t v40 = (void *)sub_10001CAB4();
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    uint64_t v43 = sub_100017098((uint64_t)v40, v42, &v76);
    sub_10001C71C(v43);
    swift_bridgeObjectRelease();
    sub_10001C678();
    sub_10001C924((void *)&_mh_execute_header, v44, BYTE4(v71), "unsubscribing from channels [%s]", v45, v46, v47, v48, v63, v66, v69, v71, v73, log);
    sub_10001CA2C();
    sub_10001C2C8();
    sub_10001C2C8();

    uint64_t v57 = sub_10001C910(v49, v50, v51, v52, v53, v54, v55, v56, v64, v67);
    v58(v57);
    uint64_t v17 = v18;
  }
  else
  {
    sub_10001C678();

    uint64_t v34 = sub_10001C704();
    v35(v34);
  }
  v59 = (void *)swift_task_alloc();
  *(void *)(v17 + 128) = v59;
  void *v59 = v17;
  v59[1] = sub_10000FCE0;
  sub_10001C47C();
  return sub_10000DDEC();
}

uint64_t sub_10000FCE0()
{
  sub_10001C234();
  sub_10001C208();
  sub_10001C240();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  sub_10001C240();
  *uint64_t v4 = v3;
  *(void *)(v6 + 136) = v5;
  swift_task_dealloc();
  sub_10001C510();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10000FDC4()
{
  sub_10001C234();
  uint64_t v1 = (void *)v0[17];
  sub_10001B938(v0[15], v0[5], v0[6], v1, (SEL *)&selRef_unsubscribeFromChannels_forTopic_);

  swift_task_dealloc();
  sub_10001C298();
  return v2();
}

id sub_10000FE3C(char a1, uint64_t a2, uint64_t a3, double a4)
{
  v9[4] = a2;
  v9[5] = a3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10000FF0C;
  v9[3] = &unk_1000F03B8;
  uint64_t v6 = _Block_copy(v9);
  id v7 = [(id)swift_getObjCClassFromMetadata() timerWithTimeInterval:a1 & 1 repeats:v6 block:a4];
  _Block_release(v6);
  swift_release();
  return v7;
}

void sub_10000FF0C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_10000FF74()
{
  sub_10001C690();
  uint64_t v2 = v1;
  if (qword_1000FBD10 != -1) {
    swift_once();
  }
  sub_1000155E0(v2, v0 + 16);
  if (*(unsigned char *)(v0 + 48))
  {
    if (*(unsigned char *)(v0 + 48) == 1)
    {
      uint64_t v3 = swift_task_alloc();
      id v4 = (void *)sub_10001C964(v3);
      *id v4 = v5;
      v4[1] = sub_100010214;
      sub_10001C830();
      sub_10001C898();
      return sub_10001126C();
    }
    else
    {
      uint64_t v10 = (void *)swift_task_alloc();
      *(void *)(v0 + 72) = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_1000102D8;
      sub_10001C830();
      sub_10001C898();
      return sub_10001179C();
    }
  }
  else
  {
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100010150;
    sub_10001C898();
    return sub_10001039C();
  }
}

uint64_t sub_100010150()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v1 = *v0;
  sub_10001C240();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_10001C2E0();
  return v3();
}

uint64_t sub_100010214()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v1 = *v0;
  sub_10001C240();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_10001C2E0();
  return v3();
}

uint64_t sub_1000102D8()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v1 = *v0;
  sub_10001C240();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_10001C2E0();
  return v3();
}

uint64_t sub_10001039C()
{
  sub_10001C234();
  v1[6] = v2;
  v1[7] = v0;
  if (qword_1000FBD10 != -1) {
    swift_once();
  }
  v1[8] = qword_10010A3F0;
  uint64_t v3 = (void *)swift_task_alloc();
  v1[9] = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10001046C;
  return sub_1000128F0();
}

uint64_t sub_10001046C()
{
  sub_10001C28C();
  sub_10001C208();
  uint64_t v3 = v2;
  sub_10001C240();
  *id v4 = v3;
  uint64_t v5 = *v1;
  sub_10001C240();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_10001C438();
    return v7();
  }
  else
  {
    sub_10001C62C();
    return _swift_task_switch(v9, v10, v11);
  }
}

uint64_t sub_100010578()
{
  sub_10001C234();
  *(void *)(v0 + 88) = type metadata accessor for CloudChannelSubscriptionManager();
  *(void *)(v0 + 96) = static CloudChannelSubscriptionManager.shared.getter();
  sub_10001BD28(&qword_1000FC780, 255, (void (*)(uint64_t))&type metadata accessor for CloudChannelSubscriptionManager);
  dispatch thunk of Actor.unownedExecutor.getter();
  sub_10001C5C4();
  sub_10001C4D8();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_100010638()
{
  sub_10001C28C();
  uint64_t v1 = v0[10];
  uint64_t v2 = dispatch thunk of CloudChannelSubscriptionManager.signal(demand:)();
  v0[13] = v1;
  v0[14] = v2;
  v0[15] = v3;
  if (v1)
  {
    uint64_t v4 = v0[8];
    uint64_t v5 = sub_100011100;
  }
  else
  {
    uint64_t v6 = v0[8];
    swift_release();
    uint64_t v5 = sub_1000106DC;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_1000106DC()
{
  sub_10001C28C();
  static CloudChannelSubscriptionManager.topic.getter();
  *(void *)(v0 + 128) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100010784;
  sub_10001C428();
  return sub_100011CCC();
}

uint64_t sub_100010784()
{
  sub_10001C690();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10001C240();
  *uint64_t v5 = v4;
  *uint64_t v5 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001C898();
    __asm { BRAA            X1, X16 }
  }
  swift_bridgeObjectRelease();
  *(void *)(v4 + 144) = v3;
  sub_10001C510();
  sub_10001C898();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_1000108F8()
{
  if (v0[18]) {
    unint64_t v3 = v0[18];
  }
  else {
    unint64_t v3 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v4 = result;
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  if (v4)
  {
    if (v4 < 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = _swiftEmptyArrayStorage;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v3 + 32);
      }
      sub_10001BE20(v7, (SEL *)&selRef_channelID);
      sub_10001C880();
      if (v2)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10001574C();
          uint64_t v6 = v11;
        }
        unint64_t v8 = v6[2];
        if (v8 >= v6[3] >> 1)
        {
          sub_10001574C();
          uint64_t v6 = v12;
        }
        void v6[2] = v8 + 1;
        uint64_t v9 = &v6[2 * v8];
        v9[4] = v1;
        v9[5] = v2;
      }
      sub_10001C80C();
    }
    while (!v10);
  }
  else
  {
    uint64_t v6 = _swiftEmptyArrayStorage;
  }
  uint64_t v14 = v0[14];
  uint64_t v13 = v0[15];
  swift_bridgeObjectRelease_n();
  uint64_t v15 = sub_1000140A0((uint64_t)v6);
  v0[19] = sub_100014460(v14, v15);
  swift_bridgeObjectRetain();
  uint64_t v16 = swift_bridgeObjectRetain();
  v0[20] = sub_1000137E8(v16, v13);
  static CloudChannelSubscriptionManager.topic.getter();
  v0[21] = v17;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[22] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_100010B44;
  return sub_10000F648();
}

uint64_t sub_100010B44()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v3 = v2;
  sub_10001C240();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_10001C240();
  *uint64_t v6 = v5;
  *(void *)(v3 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 64);
    unint64_t v8 = sub_10001115C;
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 64);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v8 = sub_100010C44;
    uint64_t v7 = v9;
  }
  return _swift_task_switch(v8, v7, 0);
}

uint64_t sub_100010C44()
{
  sub_10001C28C();
  static CloudChannelSubscriptionManager.topic.getter();
  v0[24] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[25] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100010CF0;
  sub_10001CA8C(v0[14]);
  return sub_1000144C4();
}

uint64_t sub_100010CF0()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v3 = v2;
  sub_10001C240();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_10001C240();
  *uint64_t v6 = v5;
  *(void *)(v3 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 64);
    unint64_t v8 = sub_1000111E8;
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 64);
    swift_bridgeObjectRelease();
    unint64_t v8 = sub_100010DE8;
    uint64_t v7 = v9;
  }
  return _swift_task_switch(v8, v7, 0);
}

uint64_t sub_100010DE8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, os_log_t log, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28)
{
  sub_10001C6E8();
  a27 = v29;
  a28 = v30;
  a26 = v28;
  if (qword_1000FBDE8 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  sub_10000929C(v31, (uint64_t)qword_10010A580);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  id v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.debug.getter();
  int v34 = v33;
  BOOL v35 = os_log_type_enabled(v32, v33);
  uint64_t v36 = v28[19];
  uint64_t v38 = v28[14];
  uint64_t v37 = v28[15];
  if (v35)
  {
    os_log_t log = v32;
    a11 = v28 + 3;
    a12 = v28 + 5;
    uint64_t v39 = swift_slowAlloc();
    a14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136315394;
    HIDWORD(a13) = v34;
    v28[2] = v38;
    a16 = v36;
    a17 = a14;
    a10 = sub_100005E5C(&qword_1000FC7A0);
    sub_10000953C(&qword_1000FC7A8, &qword_1000FC7A0);
    sub_10000CC08();
    uint64_t v40 = Sequence<>.joined(separator:)();
    v28[3] = sub_100017098(v40, v41, &a17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v42 = swift_bridgeObjectRetain();
    v28[4] = sub_1000137E8(v42, v37);
    uint64_t v43 = Sequence<>.joined(separator:)();
    unint64_t v45 = v44;
    swift_bridgeObjectRelease();
    v28[5] = sub_100017098(v43, v45, &a17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    id v32 = log;
    _os_log_impl((void *)&_mh_execute_header, log, (os_log_type_t)v34, "active channels: [%s], expired channels: [%s]", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    sub_10001C2C8();
    sub_10001C2C8();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_10001C678();
  }

  sub_10001C298();
  sub_10001C4BC();
  return v47(v46, v47, v48, v49, v50, v51, v52, v53, a9, a10, a11, a12, a13, a14, log, a16, a17, a18, a19, a20);
}

uint64_t sub_100011100()
{
  sub_10001C234();
  swift_release();
  sub_10001C2E0();
  return v0();
}

uint64_t sub_10001115C()
{
  sub_10001C28C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001C2E0();
  return v0();
}

uint64_t sub_1000111E8()
{
  sub_10001C28C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001C2E0();
  return v0();
}

uint64_t sub_10001126C()
{
  sub_10001C28C();
  sub_10001C7DC(v1, v2, v3, v4);
  if (qword_1000FBD10 != -1) {
    swift_once();
  }
  *(void *)(v0 + 56) = qword_10010A3F0;
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)sub_10001C964(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_100011338;
  sub_10001C428();
  return sub_100011CCC();
}

uint64_t sub_100011338()
{
  sub_10001C28C();
  sub_10001C208();
  uint64_t v3 = v2;
  sub_10001C240();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 72) = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_10001C438();
    return v6();
  }
  else
  {
    sub_10001C62C();
    return _swift_task_switch(v8, v9, v10);
  }
}

uint64_t sub_100011448()
{
  if (v1[9])
  {
    sub_10001CA20();
    if (v5)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v0 = result;
    }
    else
    {
      uint64_t result = sub_10001CA08();
    }
    if (v0)
    {
      if (v0 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v2 = 0;
      unint64_t v7 = (unint64_t)v1[9] & 0xC000000000000001;
      uint64_t v8 = _swiftEmptyArrayStorage;
      uint64_t v1 = &selRef_channelID;
      do
      {
        if (v7) {
          uint64_t v9 = (void *)sub_10001C9F0();
        }
        else {
          uint64_t v9 = sub_10001C9D8();
        }
        sub_10001BE20(v9, (SEL *)&selRef_channelID);
        sub_10001C880();
        if (v4)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10001C2EC();
            uint64_t v8 = v13;
          }
          unint64_t v10 = v8[2];
          if (v10 >= v8[3] >> 1)
          {
            sub_10001C448();
            uint64_t v8 = v14;
          }
          v8[2] = v10 + 1;
          uint64_t v11 = &v8[2 * v10];
          v11[4] = v3;
          v11[5] = v4;
        }
        sub_10001C80C();
      }
      while (!v12);
    }
    else
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
    }
    sub_10001C7B8();
    swift_bridgeObjectRetain();
    sub_100014CB8((uint64_t)v8, v2, v0);
    uint64_t v16 = *(void *)(v15 + 16);
    swift_bridgeObjectRelease();
    if (v16)
    {
      sub_10001C298();
      sub_10001C460();
      __asm { BRAA            X1, X16 }
    }
  }
  uint64_t v19 = (uint64_t)v1[2];
  uint64_t v20 = (uint64_t)v1[3];
  objc_allocWithZone((Class)PKPublicChannel);
  swift_bridgeObjectRetain();
  v1[11] = (char *)sub_1000156E8(v19, v20);
  uint64_t v21 = swift_task_alloc();
  uint64_t v22 = (void *)sub_10001C958(v21);
  *uint64_t v22 = v23;
  v22[1] = sub_100011658;
  sub_10001C460();
  return sub_10000DDEC();
}

uint64_t sub_100011658()
{
  sub_10001C234();
  sub_10001C208();
  sub_10001C240();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  sub_10001C240();
  *uint64_t v4 = v3;
  *(void *)(v6 + 104) = v5;
  swift_task_dealloc();
  sub_10001C510();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10001173C()
{
  sub_10001C234();
  uint64_t v2 = sub_10001C8AC();
  sub_10001B9E8(v2, v3, v4, v5);

  sub_10001C298();
  return v6();
}

uint64_t sub_10001179C()
{
  sub_10001C28C();
  sub_10001C7DC(v1, v2, v3, v4);
  if (qword_1000FBD10 != -1) {
    swift_once();
  }
  *(void *)(v0 + 56) = qword_10010A3F0;
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)sub_10001C964(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_100011868;
  sub_10001C428();
  return sub_100011CCC();
}

uint64_t sub_100011868()
{
  sub_10001C28C();
  sub_10001C208();
  uint64_t v3 = v2;
  sub_10001C240();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 72) = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_10001C438();
    return v6();
  }
  else
  {
    sub_10001C62C();
    return _swift_task_switch(v8, v9, v10);
  }
}

uint64_t sub_100011978()
{
  if (!v1[9]) {
    goto LABEL_24;
  }
  sub_10001CA20();
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v0 = result;
  }
  else
  {
    uint64_t result = sub_10001CA08();
  }
  if (v0)
  {
    if (v0 < 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v2 = 0;
    unint64_t v7 = (unint64_t)v1[9] & 0xC000000000000001;
    uint64_t v8 = _swiftEmptyArrayStorage;
    uint64_t v1 = &selRef_channelID;
    do
    {
      if (v7) {
        uint64_t v9 = (void *)sub_10001C9F0();
      }
      else {
        uint64_t v9 = sub_10001C9D8();
      }
      sub_10001BE20(v9, (SEL *)&selRef_channelID);
      sub_10001C880();
      if (v4)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10001C2EC();
          uint64_t v8 = v13;
        }
        unint64_t v10 = v8[2];
        if (v10 >= v8[3] >> 1)
        {
          sub_10001C448();
          uint64_t v8 = v14;
        }
        v8[2] = v10 + 1;
        uint64_t v11 = &v8[2 * v10];
        v11[4] = v3;
        v11[5] = v4;
      }
      sub_10001C80C();
    }
    while (!v12);
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  sub_10001C7B8();
  swift_bridgeObjectRetain();
  sub_100014CB8((uint64_t)v8, v2, v0);
  uint64_t v16 = *(void *)(v15 + 16);
  swift_bridgeObjectRelease();
  if (!v16)
  {
LABEL_24:
    sub_10001C298();
    sub_10001C460();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v17 = (uint64_t)v1[2];
  uint64_t v18 = (uint64_t)v1[3];
  objc_allocWithZone((Class)PKPublicChannel);
  swift_bridgeObjectRetain();
  v1[11] = (char *)sub_1000156E8(v17, v18);
  uint64_t v19 = swift_task_alloc();
  uint64_t v20 = (void *)sub_10001C958(v19);
  *uint64_t v20 = v21;
  v20[1] = sub_100011B88;
  sub_10001C460();
  return sub_10000DDEC();
}

uint64_t sub_100011B88()
{
  sub_10001C234();
  sub_10001C208();
  sub_10001C240();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  sub_10001C240();
  *uint64_t v4 = v3;
  *(void *)(v6 + 104) = v5;
  swift_task_dealloc();
  sub_10001C510();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_100011C6C()
{
  sub_10001C234();
  uint64_t v2 = sub_10001C8AC();
  sub_10001BA50(v2, v3, v4, v5);

  sub_10001C298();
  return v6();
}

uint64_t sub_100011CCC()
{
  sub_10001C234();
  v1[4] = v2;
  v1[5] = v0;
  v1[3] = v3;
  if (qword_1000FBD10 != -1) {
    swift_once();
  }
  v1[6] = qword_10010A3F0;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[7] = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100011D98;
  return sub_10000DDEC();
}

uint64_t sub_100011D98()
{
  sub_10001C234();
  sub_10001C208();
  sub_10001C240();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  sub_10001C240();
  *uint64_t v4 = v3;
  *(void *)(v6 + 64) = v5;
  swift_task_dealloc();
  sub_10001C510();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_100011E7C()
{
  sub_10001C690();
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = qword_10010A3F0;
  uint64_t v5 = sub_10001BD28(&qword_1000FC750, v4, (void (*)(uint64_t))type metadata accessor for CloudChannelTaskActor);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 72) = v6;
  long long v7 = *(_OWORD *)(v0 + 32);
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = v2;
  *(_OWORD *)(v6 + 32) = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v8;
  uint64_t v9 = sub_100005E5C(&qword_1000FC7F8);
  *uint64_t v8 = v0;
  v8[1] = sub_100011FD0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, v3, v5, 0xD00000000000001BLL, 0x80000001000D11F0, sub_10001BB9C, v6, v9);
}

uint64_t sub_100011FD0()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v3 = v2;
  sub_10001C240();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_10001C240();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 48);
    uint64_t v8 = sub_10001212C;
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 48);
    swift_task_dealloc();
    uint64_t v8 = sub_1000120C8;
    uint64_t v7 = v9;
  }
  return _swift_task_switch(v8, v7, 0);
}

uint64_t sub_1000120C8()
{
  sub_10001C234();

  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10001212C()
{
  sub_10001C234();

  swift_task_dealloc();
  sub_10001C2E0();
  return v1();
}

void sub_100012190(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100005E5C(&qword_1000FC800);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_10001BC88;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001284C;
  aBlock[3] = &unk_1000F0340;
  uint64_t v14 = _Block_copy(aBlock);
  swift_release();
  sub_10001BAB8(a3, a4, (uint64_t)v14, a2);
  _Block_release(v14);
}

uint64_t sub_100012374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100005E5C(&qword_1000FC808);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CloudChannelError();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char **)((char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    uint64_t v32 = a3 + 16;
    swift_errorRetain();
    if (qword_1000FBDE8 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10000929C(v15, (uint64_t)qword_10010A580);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v30 = v12;
      uint64_t v19 = (uint8_t *)v18;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v29 = v10;
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v31 = a4;
      swift_getErrorValue();
      uint64_t v20 = Error.localizedDescription.getter();
      uint64_t v33 = sub_100017098(v20, v21, &v34);
      uint64_t v10 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to fetch registered channels - error: %s", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v12 = v30;
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v34 = 0;
    unint64_t v35 = 0xE000000000000000;
    _StringGuts.grow(_:)(47);
    swift_bridgeObjectRelease();
    uint64_t v34 = 0xD00000000000002DLL;
    unint64_t v35 = 0x80000001000D1230;
    swift_getErrorValue();
    v23._countAndFlagsBits = Error.localizedDescription.getter();
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    unint64_t v24 = v35;
    *uint64_t v14 = v34;
    v14[1] = v24;
    (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for CloudChannelError.failedToFetchRegisteredChannels(_:), v11);
    swift_beginAccess();
    uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v26 = Strong;
      if (*(void *)&Strong[OBJC_IVAR____TtC7sportsd11ApsListener_scoreboardProcessor])
      {
        swift_retain();

        (*(void (**)(char *, void *, uint64_t))(v12 + 16))(v10, v14, v11);
        sub_1000082C0((uint64_t)v10, 0, 1, v11);
        sub_100046758((uint64_t)v10);
        swift_release();
        sub_10001C16C((uint64_t)v10, &qword_1000FC808);
      }
      else
      {
      }
    }
    sub_10001BD28((unint64_t *)&unk_1000FC810, 255, (void (*)(uint64_t))&type metadata accessor for CloudChannelError);
    uint64_t v27 = swift_allocError();
    (*(void (**)(uint64_t, void *, uint64_t))(v12 + 16))(v28, v14, v11);
    uint64_t v33 = v27;
    sub_100005E5C(&qword_1000FC800);
    CheckedContinuation.resume(throwing:)();
    swift_errorRelease();
    return (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    uint64_t v34 = a1;
    swift_bridgeObjectRetain();
    sub_100005E5C(&qword_1000FC800);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_10001284C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_10001C1C0(0, &qword_1000FC7E0);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000128F0()
{
  sub_10001C234();
  v1[4] = v2;
  v1[5] = v0;
  uint64_t v3 = sub_100005E5C(&qword_1000FC808);
  sub_10001C9AC(v3);
  v1[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CloudChannelSubscription.Demand();
  v1[7] = v4;
  sub_10000984C(v4);
  v1[8] = v5;
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  if (qword_1000FBD10 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_10010A3F0;
  v1[11] = qword_10010A3F0;
  return _swift_task_switch(sub_1000129FC, v6, 0);
}

uint64_t sub_1000129FC()
{
  sub_10001C234();
  if (qword_1000FBD80 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10010A4B8;
  *(void *)(v0 + 96) = qword_10010A4B8;
  return _swift_task_switch(sub_100012A90, v1, 0);
}

uint64_t sub_100012A90()
{
  sub_10001C234();
  *(void *)(v0 + 104) = *(void *)(*(void *)(v0 + 96) + 112);
  swift_retain();
  sub_10001C510();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_100012AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, void (*a14)(uint64_t), uint64_t *a15)
{
  sub_10001C6E8();
  if (v17[13])
  {
    uint64_t v19 = (void *)swift_task_alloc();
    v17[14] = v19;
    sub_100005E5C(&qword_1000FC820);
    sub_100005E5C((uint64_t *)&unk_1000FDA30);
    *uint64_t v19 = v17;
    v19[1] = sub_100012D78;
    sub_10001C4BC();
    return Task.value.getter(v20, v21, v22, v23, v24);
  }
  else
  {
    v17[16] = 0;
    uint64_t v26 = *(void *)(v17[4] + 16);
    if (v26)
    {
      sub_10001C350();
      int v51 = enum case for CloudChannelSubscription.Demand.leagues(_:);
      sub_10001C8D8();
      uint64_t v27 = (uint64_t *)&_swiftEmptySetSingleton;
      do
      {
        uint64_t v28 = sub_10001C498();
        a14(v28);
        uint64_t v29 = sub_10001C5A8();
        a14(v29);
        uint64_t v30 = sub_10001C58C();
        int v32 = v31(v30);
        if (v32 == v51)
        {
          uint64_t v33 = sub_10001C51C();
          v34(v33);
          uint64_t v35 = *v27;
          swift_bridgeObjectRetain();
          uint64_t v27 = (uint64_t *)sub_1000137E8(v35, v16);
        }
        else if (v32 == a11)
        {
          uint64_t v36 = swift_bridgeObjectRetain();
          sub_10001C69C(v36, v37, v38, v39, v40, v41, v42);
          swift_bridgeObjectRelease();
          uint64_t v27 = a15;
        }
        else
        {
          sub_10001CA4C();
          uint64_t v43 = sub_10001CAF4();
          v18(v43);
          uint64_t v27 = (uint64_t *)v16;
        }
        uint64_t v44 = sub_10001C6C0();
        v45(v44);
        swift_bridgeObjectRelease();
        v15 += a13;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v27 = (uint64_t *)&_swiftEmptySetSingleton;
    }
    v17[17] = v27;
    v17[18] = type metadata accessor for CloudChannelSubscriptionManager();
    v17[19] = static CloudChannelSubscriptionManager.shared.getter();
    v17[20] = sub_10001BD28(&qword_1000FC780, 255, (void (*)(uint64_t))&type metadata accessor for CloudChannelSubscriptionManager);
    dispatch thunk of Actor.unownedExecutor.getter();
    sub_10001C5C4();
    sub_10001C4D8();
    sub_10001C4BC();
    return _swift_task_switch(v46, v47, v48);
  }
}

uint64_t sub_100012D78()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v3 = v2;
  sub_10001C240();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_10001C240();
  *uint64_t v6 = v5;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 88);
    uint64_t v8 = sub_100013490;
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 88);
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_100012E70;
    uint64_t v7 = v9;
  }
  return _swift_task_switch(v8, v7, 0);
}

uint64_t sub_100012E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, void (*a14)(uint64_t), uint64_t *a15)
{
  sub_10001C6E8();
  swift_release();
  v17[16] = v17[15];
  uint64_t v19 = *(void *)(v17[4] + 16);
  if (v19)
  {
    sub_10001C350();
    int v44 = enum case for CloudChannelSubscription.Demand.leagues(_:);
    sub_10001C8D8();
    uint64_t v20 = (uint64_t *)&_swiftEmptySetSingleton;
    do
    {
      uint64_t v21 = sub_10001C498();
      a14(v21);
      uint64_t v22 = sub_10001C5A8();
      a14(v22);
      uint64_t v23 = sub_10001C58C();
      int v25 = v24(v23);
      if (v25 == v44)
      {
        uint64_t v26 = sub_10001C51C();
        v27(v26);
        uint64_t v28 = *v20;
        swift_bridgeObjectRetain();
        uint64_t v20 = (uint64_t *)sub_1000137E8(v28, v16);
      }
      else if (v25 == a11)
      {
        uint64_t v29 = swift_bridgeObjectRetain();
        sub_10001C69C(v29, v30, v31, v32, v33, v34, v35);
        swift_bridgeObjectRelease();
        uint64_t v20 = a15;
      }
      else
      {
        sub_10001CA4C();
        uint64_t v36 = sub_10001CAF4();
        v18(v36);
        uint64_t v20 = (uint64_t *)v16;
      }
      uint64_t v37 = sub_10001C6C0();
      v38(v37);
      swift_bridgeObjectRelease();
      v15 += a13;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = (uint64_t *)&_swiftEmptySetSingleton;
  }
  v17[17] = v20;
  v17[18] = type metadata accessor for CloudChannelSubscriptionManager();
  v17[19] = static CloudChannelSubscriptionManager.shared.getter();
  v17[20] = sub_10001BD28(&qword_1000FC780, 255, (void (*)(uint64_t))&type metadata accessor for CloudChannelSubscriptionManager);
  dispatch thunk of Actor.unownedExecutor.getter();
  sub_10001C5C4();
  sub_10001C4D8();
  sub_10001C4BC();
  return _swift_task_switch(v39, v40, v41);
}

uint64_t sub_100013048()
{
  sub_10001C28C();
  uint64_t v1 = v0[16];
  v0[21] = dispatch thunk of CloudChannelSubscriptionManager.readChannelMap()();
  v0[22] = v1;
  if (v1)
  {
    uint64_t v2 = v0[11];
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_100013510;
    uint64_t v4 = v2;
  }
  else
  {
    uint64_t v5 = v0[11];
    swift_release();
    uint64_t v3 = sub_1000130F8;
    uint64_t v4 = v5;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_1000130F8()
{
  sub_10001C28C();
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[17];
  swift_bridgeObjectRetain();
  char v3 = sub_10001396C(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[23] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100013210;
    return sub_1000392CC();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001C298();
    return v6();
  }
}

uint64_t sub_100013210()
{
  sub_10001C28C();
  sub_10001C240();
  *char v3 = v2;
  uint64_t v4 = *v1;
  sub_10001C240();
  *uint64_t v5 = v4;
  *(void *)(v7 + 192) = v6;
  *(void *)(v7 + 200) = v0;
  swift_task_dealloc();
  sub_10001C62C();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_100013334()
{
  sub_10001C28C();
  *(void *)(v0 + 208) = static CloudChannelSubscriptionManager.shared.getter();
  sub_10001CA80();
  dispatch thunk of Actor.unownedExecutor.getter();
  sub_10001C5C4();
  sub_10001C4D8();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_1000133B8()
{
  sub_10001C28C();
  uint64_t v1 = v0[25];
  dispatch thunk of CloudChannelSubscriptionManager.updateChannelMap(_:)();
  v0[27] = v1;
  if (v1)
  {
    uint64_t v2 = v0[11];
    return _swift_task_switch(sub_1000136E8, v2, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001C298();
    return v3();
  }
}

uint64_t sub_100013490()
{
  sub_10001C28C();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C2E0();
  return v0();
}

uint64_t sub_100013510()
{
  if (*(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC7sportsd11ApsListener_scoreboardProcessor))
  {
    sub_10001C53C();
    swift_errorRetain();
    sub_100005E5C((uint64_t *)&unk_1000FDA30);
    type metadata accessor for CloudChannelError();
    int v2 = sub_10001C328();
    sub_10001C3E0(v2);
    swift_release();
    sub_10001C16C(v1, &qword_1000FC808);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C84C();
  return v3();
}

uint64_t sub_1000135FC()
{
  if (*(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC7sportsd11ApsListener_scoreboardProcessor))
  {
    sub_10001C53C();
    swift_errorRetain();
    sub_100005E5C((uint64_t *)&unk_1000FDA30);
    type metadata accessor for CloudChannelError();
    int v2 = sub_10001C328();
    sub_10001C3E0(v2);
    swift_release();
    sub_10001C16C(v1, &qword_1000FC808);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C84C();
  return v3();
}

uint64_t sub_1000136E8()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC7sportsd11ApsListener_scoreboardProcessor))
  {
    sub_10001C53C();
    swift_errorRetain();
    sub_100005E5C((uint64_t *)&unk_1000FDA30);
    type metadata accessor for CloudChannelError();
    int v2 = sub_10001C328();
    sub_10001C3E0(v2);
    swift_release();
    sub_10001C16C(v1, &qword_1000FC808);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C84C();
  return v3();
}

uint64_t sub_1000137E8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v9 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v3 << 6))
  {
    uint64_t v14 = (Swift::Int *)(*(void *)(v2 + 48) + 16 * i);
    Swift::Int v15 = *v14;
    Swift::Int v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_100019324(&v17, v15, v16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10001396C(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v47 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v46 = (char *)v36 - v7;
  uint64_t v8 = sub_100005E5C(&qword_1000FC828);
  __chkstk_darwin(v8 - 8);
  uint64_t v48 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CloudChannelSubscription.CacheValue();
  __chkstk_darwin(v10);
  int v44 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v37 = v11;
  uint64_t v38 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  v36[1] = v11 + 16;
  uint64_t v42 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  int64_t v39 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v40 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v49 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  uint64_t v41 = v10;
  uint64_t v19 = v44;
  uint64_t v20 = v47;
  while (1)
  {
    if (v16)
    {
      unint64_t v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      uint64_t v23 = (uint64_t)v48;
      goto LABEL_21;
    }
    int64_t v24 = v18 + 1;
    uint64_t v23 = (uint64_t)v48;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v24 >= v39) {
      goto LABEL_32;
    }
    unint64_t v25 = *(void *)(v38 + 8 * v24);
    ++v18;
    if (!v25)
    {
      int64_t v18 = v24 + 1;
      if (v24 + 1 >= v39) {
        goto LABEL_32;
      }
      unint64_t v25 = *(void *)(v38 + 8 * v18);
      if (!v25)
      {
        int64_t v18 = v24 + 2;
        if (v24 + 2 >= v39) {
          goto LABEL_32;
        }
        unint64_t v25 = *(void *)(v38 + 8 * v18);
        if (!v25)
        {
          int64_t v18 = v24 + 3;
          if (v24 + 3 >= v39) {
            goto LABEL_32;
          }
          unint64_t v25 = *(void *)(v38 + 8 * v18);
          if (!v25)
          {
            int64_t v26 = v24 + 4;
            if (v26 >= v39)
            {
LABEL_32:
              swift_bridgeObjectRelease();
              swift_release();
              return 0;
            }
            unint64_t v25 = *(void *)(v38 + 8 * v26);
            int64_t v18 = v26;
            if (!v25) {
              break;
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v16 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_21:
    uint64_t v27 = *(void *)(*(void *)(v49 + 48) + 16 * v22 + 8);
    if (!*(void *)(a2 + 16))
    {
      sub_1000082C0(v23, 1, 1, v10);
      swift_bridgeObjectRetain();
LABEL_29:
      sub_10001C16C(v23, &qword_1000FC828);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return 1;
    }
    swift_bridgeObjectRetain_n();
    unint64_t v28 = sub_1000175F0();
    if (v29)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v37 + 16))(v23, *(void *)(a2 + 56) + *(void *)(v37 + 72) * v28, v10);
      uint64_t v30 = 0;
    }
    else
    {
      uint64_t v30 = 1;
    }
    sub_1000082C0(v23, v30, 1, v10);
    swift_bridgeObjectRelease();
    if (sub_1000082E8(v23, 1, v10) == 1) {
      goto LABEL_29;
    }
    (*v43)(v19, v23, v10);
    uint64_t v31 = v46;
    CloudChannelSubscription.CacheValue.expiration.getter();
    static Date.now.getter();
    sub_10001BD28((unint64_t *)&qword_1000FC830, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v32 = v45;
    int v51 = dispatch thunk of static Comparable.< infix(_:_:)();
    uint64_t v33 = a2;
    uint64_t v50 = v27;
    uint64_t v34 = *v42;
    (*v42)(v20, v32);
    uint64_t v35 = v31;
    uint64_t v10 = v41;
    v34(v35, v32);
    a2 = v33;
    (*v40)(v19, v10);
    uint64_t result = swift_bridgeObjectRelease();
    if (v51)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return 1;
    }
  }
  while (1)
  {
    int64_t v18 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v18 >= v39) {
      goto LABEL_32;
    }
    unint64_t v25 = *(void *)(v38 + 8 * v18);
    ++v26;
    if (v25) {
      goto LABEL_20;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

void *sub_100013EB0(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_22:
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    objc_allocWithZone((Class)PKPublicChannel);
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000156E8(v15, v16);
    if (result)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = (void *)specialized Array._endMutation()();
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v11 >= v6) {
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v11);
  ++v8;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 1;
  if (v11 + 1 >= v6) {
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 2;
  if (v11 + 2 >= v6) {
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 3;
  if (v11 + 3 >= v6) {
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12)
  {
LABEL_21:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_26:
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_26;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1000140A0(uint64_t a1)
{
  uint64_t v2 = Set.init(minimumCapacity:)();
  uint64_t v10 = v2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_100019324(&v9, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    uint64_t v7 = v2;
    swift_bridgeObjectRelease();
  }
  return v7;
}

void sub_100014154()
{
  sub_1000098B8();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Sport();
  sub_100009830();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v18 - v9;
  sub_10001BD28(&qword_1000FC880, 255, (void (*)(uint64_t))&type metadata accessor for Sport);
  v18[1] = Set.init(minimumCapacity:)();
  uint64_t v11 = *(void *)(v1 + 16);
  if (v11)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v12 = v4 + 16;
    int64_t v13 = v14;
    unint64_t v15 = (*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64);
    v18[0] = v1;
    uint64_t v16 = v1 + v15;
    uint64_t v17 = *(void *)(v12 + 56);
    do
    {
      v13(v7, v16, v2);
      sub_1000194BC((uint64_t)v10, v7);
      (*(void (**)(char *, uint64_t))(v12 - 8))(v10, v2);
      v16 += v17;
      --v11;
    }
    while (v11);
  }
  swift_bridgeObjectRelease();
  sub_1000098A0();
}

uint64_t sub_1000142E0(uint64_t a1)
{
  uint64_t v18 = Set.init(minimumCapacity:)();
  uint64_t result = sub_10008DAAC(a1, v19);
  uint64_t v3 = v19[0];
  uint64_t v4 = v19[1];
  int64_t v5 = v19[3];
  unint64_t v6 = v20;
  int64_t v7 = (unint64_t)(v19[2] + 64) >> 6;
  if (!v20) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v9 = v8 | (v5 << 6);
  while (1)
  {
    uint64_t v14 = (Swift::Int *)(*(void *)(v3 + 48) + 16 * v9);
    Swift::Int v15 = *v14;
    Swift::Int v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_100019324(&v17, v15, v16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v10 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_21;
    }
    unint64_t v11 = *(void *)(v4 + 8 * v10);
    int64_t v12 = v5 + 1;
    if (!v11)
    {
      int64_t v12 = v5 + 2;
      if (v5 + 2 >= v7) {
        goto LABEL_21;
      }
      unint64_t v11 = *(void *)(v4 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v5 + 3;
        if (v5 + 3 >= v7) {
          goto LABEL_21;
        }
        unint64_t v11 = *(void *)(v4 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v5 + 4;
          if (v5 + 4 >= v7) {
            goto LABEL_21;
          }
          unint64_t v11 = *(void *)(v4 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v5 + 5;
            if (v5 + 5 >= v7) {
              goto LABEL_21;
            }
            unint64_t v11 = *(void *)(v4 + 8 * v12);
            if (!v11)
            {
              int64_t v13 = v5 + 6;
              while (v13 < v7)
              {
                unint64_t v11 = *(void *)(v4 + 8 * v13++);
                if (v11)
                {
                  int64_t v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              return v18;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v5 = v12;
  }
  __break(1u);
  return result;
}

unint64_t *sub_100014460(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) <= *(void *)(a2 + 16) >> 3)
  {
    sub_1000197E8(a1);
    return (unint64_t *)a2;
  }
  else
  {
    return sub_100019C30(a1, a2);
  }
}

uint64_t sub_1000144C4()
{
  sub_10001C28C();
  uint64_t v4 = sub_10001C85C(v1, v2, v3);
  v0[8] = v4;
  sub_10000984C(v4);
  v0[9] = v5;
  v0[10] = swift_task_alloc();
  if (qword_1000FBD10 != -1) {
    swift_once();
  }
  v0[11] = qword_10010A3F0;
  uint64_t v6 = swift_task_alloc();
  int64_t v7 = (void *)sub_10001C958(v6);
  *int64_t v7 = v8;
  v7[1] = sub_1000145C0;
  sub_10001C428();
  return sub_100011CCC();
}

uint64_t sub_1000145C0()
{
  sub_10001C28C();
  sub_10001C208();
  uint64_t v3 = v2;
  sub_10001C240();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 104) = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_10001C438();
    return v6();
  }
  else
  {
    sub_10001C62C();
    return _swift_task_switch(v8, v9, v10);
  }
}

uint64_t sub_1000146D8()
{
  uint64_t v77 = v1;
  if (!*(void *)(v1 + 104)) {
    goto LABEL_21;
  }
  sub_10001CA20();
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v0 = _CocoaArrayWrapper.endIndex.getter();
    if (v0) {
      goto LABEL_4;
    }
  }
  else
  {
    sub_10001CA08();
    if (v0)
    {
LABEL_4:
      if (v0 < 1)
      {
        __break(1u);
        goto LABEL_50;
      }
      unint64_t v5 = *(void *)(v1 + 104) & 0xC000000000000001;
      uint64_t v6 = _swiftEmptyArrayStorage;
      do
      {
        if (v5) {
          int64_t v7 = (void *)sub_10001C9F0();
        }
        else {
          int64_t v7 = sub_10001C9D8();
        }
        sub_10001BE20(v7, (SEL *)&selRef_channelID);
        sub_10001C880();
        if (v3)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10001C2EC();
            uint64_t v6 = v11;
          }
          unint64_t v8 = v6[2];
          if (v8 >= v6[3] >> 1)
          {
            sub_10001C448();
            uint64_t v6 = v12;
          }
          void v6[2] = v8 + 1;
          uint64_t v9 = &v6[2 * v8];
          v9[4] = v2;
          v9[5] = v3;
        }
        sub_10001C80C();
      }
      while (!v10);
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_21:
  sub_10001C9B8();
  sub_100019994();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  unint64_t v15 = (unint64_t)sub_100013EB0(v14);
  *(void *)(v2 + 88) = v15;
  swift_release();
  if (v15 >> 62)
  {
    sub_10001C4E4();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v17 = v75;
  if (!v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_10001C47C();
    __asm { BRAA            X1, X16 }
  }
  if (qword_1000FBDE8 != -1) {
    swift_once();
  }
  uint64_t v18 = *(void *)(v75 + 72);
  sub_10000929C(*(void *)(v75 + 64), (uint64_t)qword_10010A580);
  uint64_t v19 = sub_10001C5D0();
  v20(v19);
  swift_bridgeObjectRetain_n();
  unint64_t v21 = Logger.logObject.getter();
  unint64_t v22 = (_DWORD *)static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, (os_log_type_t)v22))
  {
    HIDWORD(v70) = v22;
    sub_10001C638();
    uint64_t v23 = sub_10001C55C();
    uint64_t v68 = v23;
    uint64_t v76 = v23;
    uint64_t v72 = (uint64_t)v22;
    *unint64_t v22 = 136315138;
    if (v15 >> 62)
    {
      sub_10001C4E4();
      uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v23 = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v31)
    {
      sub_10001C77C();
      if ((v31 & 0x8000000000000000) == 0)
      {
        while (1)
        {
          id v36 = (v15 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
              : *(id *)(v15 + 32);
          uint64_t v37 = v36;
          sub_10001BE20(v36, (SEL *)&selRef_channelID);
          if (!v38) {
            goto LABEL_51;
          }

          sub_10001C970();
          if (v39) {
            sub_10001C740();
          }
          sub_10001C764();
          if (v10) {
            goto LABEL_44;
          }
        }
      }
LABEL_50:
      __break(1u);
LABEL_51:
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
LABEL_44:
    sub_10001C388(v23, v24, v25, v26, v27, v28, v29, v30, v62, v65, v68, v70, v72, (uint64_t)v21, v2, v75);
    sub_100005E5C(&qword_1000FC7D0);
    sub_10000953C((unint64_t *)&qword_1000FC7D8, &qword_1000FC7D0);
    uint64_t v40 = (void *)sub_10001CAB4();
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    uint64_t v43 = sub_100017098((uint64_t)v40, v42, &v76);
    sub_10001C71C(v43);
    swift_bridgeObjectRelease();
    sub_10001C678();
    sub_10001C924((void *)&_mh_execute_header, v44, BYTE4(v71), "subscribing to channels [%s]", v45, v46, v47, v48, v63, v66, v69, v71, v73, log);
    sub_10001CA2C();
    sub_10001C2C8();
    sub_10001C2C8();

    uint64_t v57 = sub_10001C910(v49, v50, v51, v52, v53, v54, v55, v56, v64, v67);
    v58(v57);
    uint64_t v17 = v18;
  }
  else
  {
    sub_10001C678();

    uint64_t v34 = sub_10001C704();
    v35(v34);
  }
  v59 = (void *)swift_task_alloc();
  *(void *)(v17 + 128) = v59;
  void *v59 = v17;
  v59[1] = sub_100014B5C;
  sub_10001C47C();
  return sub_10000DDEC();
}

uint64_t sub_100014B5C()
{
  sub_10001C234();
  sub_10001C208();
  sub_10001C240();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  sub_10001C240();
  *uint64_t v4 = v3;
  *(void *)(v6 + 136) = v5;
  swift_task_dealloc();
  sub_10001C510();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_100014C40()
{
  sub_10001C234();
  uint64_t v1 = (void *)v0[17];
  sub_10001B938(v0[15], v0[5], v0[6], v1, (SEL *)&selRef_subscribeToChannels_forTopic_);

  swift_task_dealloc();
  sub_10001C298();
  return v2();
}

void sub_100014CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = 0;
  uint64_t v6 = a1 + 40;
  uint64_t v7 = -*(void *)(a1 + 16);
  uint64_t v15 = a1 + 40;
LABEL_2:
  uint64_t v8 = v5 + 1;
  uint64_t v9 = (uint64_t *)(v6 + 16 * v5);
  while (1)
  {
    if (v7 + v8 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v5 = v8;
    if ((unint64_t)(v8 - 1) >= *(void *)(a1 + 16)) {
      break;
    }
    uint64_t v10 = *(v9 - 1);
    uint64_t v11 = *v9;
    if (v10 == a2 && v11 == a3)
    {
      uint64_t v10 = a2;
      uint64_t v11 = a3;
LABEL_12:
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100017DA8();
      }
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      if (v13 >= _swiftEmptyArrayStorage[3] >> 1) {
        sub_100017DA8();
      }
      _swiftEmptyArrayStorage[2] = v13 + 1;
      uint64_t v14 = &_swiftEmptyArrayStorage[2 * v13];
      void v14[4] = v10;
      v14[5] = v11;
      uint64_t v6 = v15;
      goto LABEL_2;
    }
    ++v8;
    v9 += 2;
    if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
      goto LABEL_12;
    }
  }
  __break(1u);
}

void sub_100014E24()
{
  sub_1000098B8();
  uint64_t v1 = v0;
  unint64_t v3 = v2;
  uint64_t v4 = sub_100005E5C(&qword_1000FC808);
  uint64_t v5 = sub_10001C9AC(v4);
  __chkstk_darwin(v5);
  sub_1000098F8();
  uint64_t v35 = (void *)(v7 - v6);
  if (v3)
  {
    if (v3 >> 62) {
      goto LABEL_32;
    }
    uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v36 = OBJC_IVAR____TtC7sportsd11ApsListener_scoreboardProcessor;
      uint64_t v9 = 4;
      unsigned int v34 = enum case for CloudChannelError.failedToSubscribe(_:);
      uint64_t v37 = v8;
      while (1)
      {
        id v10 = (v3 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v3 + 8 * v9);
        uint64_t v11 = v10;
        if (__OFADD__(v9 - 4, 1)) {
          break;
        }
        uint64_t v12 = sub_10001BE20(v10, (SEL *)&selRef_channelID);
        if (v13) {
          uint64_t v14 = v12;
        }
        else {
          uint64_t v14 = 0;
        }
        uint64_t v41 = v14;
        if (v13) {
          uint64_t v15 = v13;
        }
        else {
          uint64_t v15 = (void *)0xE000000000000000;
        }
        uint64_t v16 = sub_10001BE20(v11, (SEL *)&selRef_pushTopic);
        if (v17) {
          uint64_t v18 = v16;
        }
        else {
          uint64_t v18 = 0;
        }
        uint64_t v39 = v18;
        if (v17) {
          uint64_t v19 = v17;
        }
        else {
          uint64_t v19 = (void *)0xE000000000000000;
        }
        unsigned int v40 = [v11 failureReason];
        if (qword_1000FBDE8 != -1) {
          swift_once();
        }
        uint64_t v20 = type metadata accessor for Logger();
        sub_10000929C(v20, (uint64_t)qword_10010A580);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        unint64_t v21 = Logger.logObject.getter();
        os_log_type_t v22 = static os_log_type_t.error.getter();
        uint64_t v38 = v9 - 3;
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = swift_slowAlloc();
          uint64_t v42 = swift_slowAlloc();
          *(_DWORD *)uint64_t v23 = 136315650;
          swift_bridgeObjectRetain();
          *(void *)(v23 + 4) = sub_100017098(v39, (unint64_t)v19, &v42);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v23 + 12) = 2080;
          swift_bridgeObjectRetain();
          *(void *)(v23 + 14) = sub_100017098(v41, (unint64_t)v15, &v42);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v23 + 22) = 1024;
          *(_DWORD *)(v23 + 24) = v40;
          _os_log_impl((void *)&_mh_execute_header, v21, v22, "Failed to subscribe to channel [%s:%s] with failure reason: %d", (uint8_t *)v23, 0x1Cu);
          swift_arrayDestroy();
          sub_10001C2C8();
          sub_10001C2C8();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        if (*(void *)(v1 + v36))
        {
          uint64_t v42 = 0;
          unint64_t v43 = 0xE000000000000000;
          swift_retain();
          _StringGuts.grow(_:)(62);
          v24._countAndFlagsBits = 0xD000000000000020;
          v24._object = (void *)0x80000001000D12C0;
          String.append(_:)(v24);
          v25._countAndFlagsBits = v39;
          v25._object = v19;
          String.append(_:)(v25);
          swift_bridgeObjectRelease();
          v26._countAndFlagsBits = 58;
          v26._object = (void *)0xE100000000000000;
          String.append(_:)(v26);
          v27._countAndFlagsBits = v41;
          v27._object = v15;
          String.append(_:)(v27);
          swift_bridgeObjectRelease();
          v28._countAndFlagsBits = 0xD000000000000017;
          v28._object = (void *)0x80000001000D12F0;
          String.append(_:)(v28);
          v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v29);
          swift_bridgeObjectRelease();
          unint64_t v30 = v43;
          *uint64_t v35 = v42;
          v35[1] = v30;
          uint64_t v31 = type metadata accessor for CloudChannelError();
          sub_1000098E8();
          (*(void (**)(void *, void, uint64_t))(v32 + 104))(v35, v34, v31);
          sub_1000082C0((uint64_t)v35, 0, 1, v31);
          sub_100046758((uint64_t)v35);

          swift_release();
          sub_10001C16C((uint64_t)v35, &qword_1000FC808);
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        ++v9;
        if (v38 == v37)
        {
          swift_bridgeObjectRelease();
          sub_1000098A0();
          return;
        }
      }
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain();
    }
    sub_1000098A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ApsListener.ConnectionState(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1000153E4(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1000153E4(id result, char a2)
{
  if (a2 == 1) {
    return result;
  }
  if (!a2) {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void destroy for ApsListener.ConnectionState(uint64_t a1)
{
}

void sub_100015410(void *a1, char a2)
{
  if (a2 == 1)
  {
  }
  else if (!a2)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t assignWithCopy for ApsListener.ConnectionState(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1000153E4(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_100015410(v5, v6);
  return a1;
}

uint64_t initializeWithTake for ApsListener.ConnectionState(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for ApsListener.ConnectionState(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_100015410(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ApsListener.ConnectionState(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ApsListener.ConnectionState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100015558(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_100015570(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ApsListener.ConnectionState()
{
  return &type metadata for ApsListener.ConnectionState;
}

uint64_t sub_100015598(uint64_t a1, uint64_t a2)
{
  return sub_10001BD28(&qword_1000FC750, a2, (void (*)(uint64_t))type metadata accessor for CloudChannelTaskActor);
}

uint64_t sub_1000155E0(uint64_t a1, uint64_t a2)
{
  return a2;
}

id sub_10001563C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (!a2)
  {
    NSString v8 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v9 = 0;
    goto LABEL_6;
  }
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_6:
  id v10 = [v5 initWithEnvironmentName:v8 namedDelegatePort:v9 queue:a5];

  return v10;
}

id sub_1000156E8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }
  id v4 = [v2 initWithChannelID:v3];

  return v4;
}

void sub_10001574C()
{
  sub_10001C7F4();
  if (v2)
  {
    sub_10001C2B8();
    if (v3 != v4)
    {
      sub_10001C37C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_10001C2A8();
    }
  }
  sub_10001C3D0();
  if (v1)
  {
    sub_100005E5C(&qword_1000FC1C0);
    char v5 = (const void *)sub_10001C818();
    size_t v6 = j__malloc_size(v5);
    sub_10001C500(v6 - 32);
  }
  if (v0)
  {
    uint64_t v7 = (char *)sub_10001C800();
    sub_1000163C0(v7, v8, v9);
    sub_10001C614();
  }
  else
  {
    uint64_t v10 = sub_10001C418();
    sub_100015DB0(v10, v11, v12, v13);
  }
}

void sub_1000157F8()
{
  sub_10001C7F4();
  if (v3)
  {
    sub_10001C2B8();
    if (v4 != v5)
    {
      sub_10001C37C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_10001C2A8();
    }
  }
  sub_10001C3D0();
  if (v2)
  {
    sub_100005E5C(&qword_1000FC7C0);
    size_t v6 = (void *)swift_allocObject();
    size_t v7 = j__malloc_size(v6);
    void v6[2] = v1;
    v6[3] = 2 * v7 - 64;
  }
  if (v0)
  {
    uint64_t v8 = (char *)sub_10001C800();
    sub_1000164F0(v8, v9, v10);
    sub_10001C614();
  }
  else
  {
    uint64_t v11 = sub_10001C418();
    sub_100015EA8(v11, v12, v13, v14);
  }
}

void sub_1000158A8()
{
  sub_10001C7F4();
  if (v2)
  {
    sub_10001C2B8();
    if (v3 != v4)
    {
      sub_10001C37C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_10001C2A8();
    }
  }
  sub_10001C3D0();
  if (v1)
  {
    sub_100005E5C(&qword_1000FC8B8);
    char v5 = (const void *)sub_10001C818();
    size_t v6 = j__malloc_size(v5);
    sub_10001C500(v6 - 32);
  }
  if (v0)
  {
    size_t v7 = (char *)sub_10001C800();
    sub_1000166A4(v7, v8, v9);
    sub_10001C614();
  }
  else
  {
    uint64_t v10 = sub_10001C418();
    sub_100015F98(v10, v11, v12, v13);
  }
}

uint64_t sub_100015954(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1000159E4(a1, a2, a3, a4, &qword_1000FC9A0, (uint64_t (*)(void))&type metadata accessor for SportingEventRunningClockFeature, (uint64_t (*)(void))&type metadata accessor for SportingEventRunningClockFeature, (void (*)(void))&type metadata accessor for SportingEventRunningClockFeature);
}

uint64_t sub_10001599C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1000159E4(a1, a2, a3, a4, &qword_1000FC8C8, (uint64_t (*)(void))&type metadata accessor for SportingEventSubscription.Competitor, (uint64_t (*)(void))&type metadata accessor for SportingEventSubscription.Competitor, (void (*)(void))&type metadata accessor for SportingEventSubscription.Competitor);
}

uint64_t sub_1000159E4(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void), void (*a8)(void))
{
  if (a3)
  {
    sub_10001C2B8();
    if (v15 != v16)
    {
      sub_10001C37C();
      if (v15)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_10001C2A8();
    }
  }
  else
  {
    uint64_t v14 = a2;
  }
  uint64_t v17 = *(void *)(a4 + 16);
  if (v14 <= v17) {
    uint64_t v18 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v18 = v14;
  }
  if (!v18)
  {
    os_log_type_t v22 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_100005E5C(a5);
  uint64_t v19 = a6(0);
  sub_10000984C(v19);
  uint64_t v21 = *(void *)(v20 + 72);
  os_log_type_t v22 = (void *)sub_10001C5EC();
  size_t v23 = j__malloc_size(v22);
  if (!v21 || (v23 - v8 == 0x8000000000000000 ? (BOOL v24 = v21 == -1) : (BOOL v24 = 0), v24))
  {
LABEL_23:
    sub_10001C220();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v22[2] = v17;
  v22[3] = 2 * ((uint64_t)(v23 - v8) / v21);
LABEL_18:
  uint64_t v25 = *(void *)(a6(0) - 8);
  unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v27 = (unint64_t)v22 + v26;
  if (a1)
  {
    sub_100016700(a4 + v26, v17, v27, a8);
    sub_10001C614();
  }
  else
  {
    sub_10001628C(0, v17, v27, a4, a7);
  }
  return (uint64_t)v22;
}

uint64_t sub_100015BC0(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1000159E4(a1, a2, a3, a4, &qword_1000FC910, (uint64_t (*)(void))&type metadata accessor for IngestionError, (uint64_t (*)(void))&type metadata accessor for IngestionError, (void (*)(void))&type metadata accessor for IngestionError);
}

void sub_100015C08()
{
}

void sub_100015C14()
{
  sub_10001C7F4();
  if (v2)
  {
    sub_10001C2B8();
    if (v3 != v4)
    {
      sub_10001C37C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_10001C2A8();
    }
  }
  sub_10001C3D0();
  if (v1)
  {
    sub_100005E5C(v5);
    size_t v6 = (const void *)sub_10001C818();
    size_t v7 = j__malloc_size(v6);
    sub_10001C500(v7 - 32);
  }
  if (v0)
  {
    uint64_t v8 = (char *)sub_10001C800();
    sub_100016580(v8, v9, v10);
    sub_10001C614();
  }
  else
  {
    uint64_t v11 = sub_10001C418();
    sub_1000160B0(v11, v12, v13, v14);
  }
}

void sub_100015CBC()
{
  sub_10001C7F4();
  if (v2)
  {
    sub_10001C2B8();
    if (v3 != v4)
    {
      sub_10001C37C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_10001C2A8();
    }
  }
  sub_10001C3D0();
  if (v1)
  {
    sub_100005E5C(&qword_1000FC860);
    char v5 = (const void *)sub_10001C818();
    size_t v6 = j__malloc_size(v5);
    sub_10001C500(v6 - 32);
  }
  if (v0)
  {
    size_t v7 = (char *)sub_10001C800();
    sub_100016580(v7, v8, v9);
    sub_10001C614();
  }
  else
  {
    uint64_t v10 = sub_10001C418();
    sub_100016174(v10, v11, v12, v13);
  }
}

uint64_t sub_100015D68(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1000159E4(a1, a2, a3, a4, &qword_1000FC838, (uint64_t (*)(void))&type metadata accessor for CloudChannelSubscription.Demand, (uint64_t (*)(void))&type metadata accessor for CloudChannelSubscription.Demand, (void (*)(void))&type metadata accessor for CloudChannelSubscription.Demand);
}

uint64_t sub_100015DB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100015EA8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100015F98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_100005E5C(&qword_1000FC8C0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1000160B0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    sub_10001C220();
    sub_10001C3C0();
    goto LABEL_11;
  }
  unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
  unint64_t v6 = &__dst[8 * v4];
  if (v5 >= v6 || &v5[8 * v4] <= __dst)
  {
    memcpy(__dst, v5, 8 * v4);
    swift_bridgeObjectRelease();
    return v6;
  }
  sub_10001C220();
  sub_10001C3B0();
LABEL_11:
  uint64_t result = (char *)sub_10001C310();
  __break(1u);
  return result;
}

uint64_t sub_100016174(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_100005E5C(&qword_1000FC868);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10001628C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_10001C220();
    sub_10001C3C0();
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(a5(0) - 8);
  uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v11 = *(void *)(v9 + 72);
  unint64_t v12 = v10 + v11 * a1;
  unint64_t v13 = a3 + v11 * v5;
  if (v12 >= v13 || v12 + v11 * v5 <= a3)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v13;
  }
  sub_10001C220();
  sub_10001C3B0();
LABEL_11:
  uint64_t result = sub_10001C310();
  __break(1u);
  return result;
}

char *sub_1000163C0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_100016454(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_1000164F0(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *sub_100016580(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_10001C220();
    uint64_t result = (char *)sub_10001C268();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_10001C24C(a3, result);
  }
  return result;
}

char *sub_1000165DC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_10001C220();
    uint64_t result = (char *)sub_10001C268();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)sub_10001C24C(a3, result);
  }
  return result;
}

char *sub_100016640(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_10001C220();
    uint64_t result = (char *)sub_10001C268();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)sub_10001C24C(a3, result);
  }
  return result;
}

char *sub_1000166A4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_10001C220();
    uint64_t result = (char *)sub_10001C268();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)sub_10001C24C(a3, result);
  }
  return result;
}

void sub_100016700(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (a2 < 0)
  {
    sub_10001C220();
    uint64_t v9 = sub_10001C268();
    __break(1u);
_swift_arrayInitWithTakeBackToFront:
    _swift_arrayInitWithTakeBackToFront(v9);
    return;
  }
  if (a3 < a1 || (a4(0), sub_1000098E8(), a1 + *(void *)(v8 + 72) * a2 <= a3))
  {
    a4(0);
    uint64_t v10 = sub_10001CAA0();
    _swift_arrayInitWithTakeFrontToBack(v10);
  }
  else if (a3 != a1)
  {
    uint64_t v9 = sub_10001CAA0();
    goto _swift_arrayInitWithTakeBackToFront;
  }
}

uint64_t sub_1000167FC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1000168DC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 24 * a2 > a1 ? (BOOL v3 = a1 + 24 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    sub_100005E5C(&qword_1000FC988);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1000169E0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 24 * a2 > a1 ? (BOOL v3 = a1 + 24 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    sub_100005E5C(&qword_1000FC8A0);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_100016AE4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 8 * a2 > a1 ? (BOOL v3 = a1 + 8 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    sub_100005E5C(&qword_1000FC878);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_100016BE4(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10001C220();
    sub_10001C3C0();
LABEL_11:
    uint64_t result = sub_10001C310();
    __break(1u);
    return result;
  }
  sub_10001C6D8();
  if (v4 + 8 * v3 > v2 && v2 + 8 * v3 > v4)
  {
    sub_10001C220();
    sub_10001C3B0();
    goto LABEL_11;
  }
  type metadata accessor for SportingEventCompetitorContainer();
  sub_10001C578();

  return swift_arrayInitWithCopy();
}

uint64_t sub_100016C9C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10001C220();
    sub_10001C3C0();
LABEL_11:
    uint64_t result = sub_10001C310();
    __break(1u);
    return result;
  }
  sub_10001C6D8();
  if (v4 + 40 * v3 > v2 && v2 + 40 * v3 > v4)
  {
    sub_10001C220();
    sub_10001C3B0();
    goto LABEL_11;
  }
  sub_100005E5C(v5);
  sub_10001C578();

  return swift_arrayInitWithCopy();
}

uint64_t sub_100016D58(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 32 * a2 > a1 ? (BOOL v3 = a1 + 32 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    sub_100005E5C(&qword_1000FC928);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_100016E58(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10001C220();
    sub_10001C3C0();
LABEL_11:
    uint64_t result = sub_10001C310();
    __break(1u);
    return result;
  }
  sub_10001C6D8();
  v5(0);
  sub_1000098E8();
  uint64_t v7 = *(void *)(v6 + 72) * v2;
  unint64_t v8 = v3 + v7;
  unint64_t v9 = v4 + v7;
  if (v8 > v4 && v9 > v3)
  {
    sub_10001C220();
    sub_10001C3B0();
    goto LABEL_11;
  }
  sub_10001C578();

  return swift_arrayInitWithCopy();
}

void *sub_100016F28(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0 || (&__dst[16 * a2] > __src ? (BOOL v3 = &__src[16 * a2] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, 16 * a2);
  }
  return result;
}

uint64_t sub_100017004(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10001702C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_100017098(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_10001CA6C();
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_100017098(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  sub_10001CAE8();
  uint64_t v9 = sub_100017168(v6, v7, v8, 1, a1, a2);
  uint64_t v10 = v15[0];
  if (v9)
  {
    uint64_t v11 = v9;
    ObjectType = (void *)swift_getObjectType();
    v15[0] = v11;
    uint64_t v12 = *a3;
    if (*a3)
    {
      sub_10001BB1C((uint64_t)v15, *a3);
      *a3 = v12 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v15[0] = a1;
    v15[1] = a2;
    uint64_t v13 = *a3;
    if (*a3)
    {
      sub_10001BB1C((uint64_t)v15, *a3);
      *a3 = v13 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100006178((uint64_t)v15);
  return v10;
}

uint64_t sub_100017168(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1000172C0((char *)__src, HIBYTE(a6) & 0xF, __dst);
      UnsafeMutableRawBufferPointer.subscript.setter();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = (uint64_t)sub_100017398(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = _StringObject.sharedUTF8.getter();
    if (!v8)
    {
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_1000172C0(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

void *sub_100017398(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_10002AE38(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100017430(0, v2[2] + 1, 1, (uint64_t)v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100017430((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  }
  v2[2] = v4 + 1;
  *((unsigned char *)v2 + v4 + 32) = 0;
  return v2;
}

char *sub_100017430(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100005E5C(&qword_1000FC7C0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1000164F0(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100017508(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_100017508(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

unsigned char **sub_1000175E0(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

unint64_t sub_1000175F0()
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Hasher._finalize()();
  uint64_t v0 = sub_10001C840();

  return sub_1000178C8(v0, v1, v2);
}

unint64_t sub_100017664(char a1)
{
  Hasher.init(_seed:)();
  sub_1000990CC(a1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_1000179AC(a1, v2);
}

unint64_t sub_1000176EC(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_100017B24(a1, v4);
}

void sub_100017730()
{
}

void sub_1000177FC()
{
}

unint64_t sub_1000178C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1000179AC(char a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    unint64_t v7 = sub_1000990CC(*(unsigned char *)(*(void *)(v2 + 48) + v5));
    uint64_t v9 = v8;
    if (v7 == sub_1000990CC(a1) && v9 == v10)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      uint64_t v13 = ~v4;
      unint64_t v5 = (v5 + 1) & v13;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          unint64_t v14 = sub_1000990CC(*(unsigned char *)(*(void *)(v2 + 48) + v5));
          uint64_t v16 = v15;
          if (v14 == sub_1000990CC(a1) && v16 == v17) {
            break;
          }
          char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v13;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_100017B24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10001BD70(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_10001BDCC((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

void sub_100017BEC()
{
  sub_1000098B8();
  unint64_t v26 = v1;
  uint64_t v27 = v2;
  uint64_t v25 = v3;
  uint64_t v5 = v4;
  v23[1] = v6;
  uint64_t v8 = v7(0);
  sub_100009830();
  uint64_t v10 = v9;
  __n128 v12 = __chkstk_darwin(v11);
  unint64_t v14 = (char *)v23 - v13;
  uint64_t v24 = v0;
  uint64_t v15 = -1 << *(unsigned char *)(v0 + 32);
  unint64_t v16 = v5 & ~v15;
  v23[0] = v0 + 64;
  if ((*(void *)(v0 + 64 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16);
    uint64_t v19 = v10 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v14, *(void *)(v24 + 48) + v21 * v16, v8, v12);
      sub_10001BD28(v25, 255, v26);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v14, v8);
      if (v22) {
        break;
      }
      unint64_t v16 = (v16 + 1) & v17;
    }
    while (((*(void *)(v23[0] + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
  }
  sub_1000098A0();
}

void sub_100017D58()
{
  sub_1000181F4();
  void *v0 = v1;
}

void sub_100017DA8()
{
  sub_100018578();
  void *v0 = v1;
}

void sub_100017DF8()
{
  sub_100018064();
  void *v0 = v1;
}

void sub_100017E5C()
{
  sub_100018064();
  void *v0 = v1;
}

void sub_100017EC0()
{
  sub_1000181F4();
  void *v0 = v1;
}

char *sub_100017F10(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000182D4(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void sub_100017F30(char a1, uint64_t a2, char a3)
{
  sub_1000183B8(a1, a2, a3, *v3, &qword_1000FC970);
  *uint64_t v3 = v4;
}

void sub_100017F60(char a1, uint64_t a2, char a3)
{
  sub_1000183B8(a1, a2, a3, *v3, &qword_1000FC8A8);
  *uint64_t v3 = v4;
}

char *sub_100017F90(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_100018494(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void sub_100017FB0()
{
  sub_100018064();
  void *v0 = v1;
}

void sub_100018014()
{
  sub_100018578();
  void *v0 = v1;
}

void sub_100018064()
{
  sub_1000098B8();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  char v10 = v9;
  if (v11)
  {
    sub_10001C2B8();
    if (v13 != v14)
    {
      sub_10001C37C();
      if (v13)
      {
LABEL_24:
        __break(1u);
        return;
      }
      sub_10001C2A8();
    }
  }
  else
  {
    uint64_t v12 = v1;
  }
  uint64_t v15 = *(void *)(v8 + 16);
  if (v12 <= v15) {
    uint64_t v16 = *(void *)(v8 + 16);
  }
  else {
    uint64_t v16 = v12;
  }
  if (!v16)
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_100005E5C(v2);
  uint64_t v17 = v6(0);
  sub_10000984C(v17);
  uint64_t v19 = *(void *)(v18 + 72);
  uint64_t v20 = (void *)sub_10001C5EC();
  size_t v21 = j__malloc_size(v20);
  if (!v19)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v21 - v0 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_23;
  }
  v20[2] = v15;
  v20[3] = 2 * ((uint64_t)(v21 - v0) / v19);
LABEL_18:
  uint64_t v23 = *(void *)(v6(0) - 8);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v25 = v8 + v24;
  if (v10)
  {
    sub_100016700(v25, v15, (unint64_t)v20 + v24, v4);
    *(void *)(v8 + 16) = 0;
  }
  else
  {
    sub_100016E58(v25, v15);
  }
  swift_release();
  sub_1000098A0();
}

void sub_1000181C0()
{
}

void sub_1000181F4()
{
  sub_10001C998();
  if (v6)
  {
    sub_10001C2B8();
    if (v8 != v9)
    {
      sub_10001C37C();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_10001C2A8();
    }
  }
  else
  {
    uint64_t v7 = v4;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  if (v7 <= v10) {
    uint64_t v11 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v11 = v7;
  }
  if (v11)
  {
    sub_100005E5C(v5);
    uint64_t v12 = (void *)swift_allocObject();
    size_t v13 = j__malloc_size(v12);
    v12[2] = v10;
    v12[3] = 2 * ((uint64_t)(v13 - 32) / 24);
  }
  else
  {
    uint64_t v12 = &_swiftEmptyArrayStorage;
  }
  char v14 = v12 + 4;
  uint64_t v15 = v0 + 32;
  if (v3)
  {
    v2(v15, v10, v14);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15, v10, v14);
  }
  swift_release();
}

char *sub_1000182D4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100005E5C(&qword_1000FC870);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  size_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_100016580(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100016AE4((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_1000183B8(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  if (a3)
  {
    sub_10001C2B8();
    if (v8 != v9)
    {
      sub_10001C37C();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_10001C2A8();
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v10 = *(void *)(a4 + 16);
  if (v7 <= v10) {
    uint64_t v11 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v11 = v7;
  }
  if (v11)
  {
    sub_100005E5C(a5);
    uint64_t v12 = (char *)swift_allocObject();
    size_t v13 = j__malloc_size(v12);
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 40);
  }
  else
  {
    uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  }
  char v14 = (char *)(a4 + 32);
  if (a1)
  {
    sub_100016640(v14, v10, v12 + 32);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100016C9C((uint64_t)v14, v10);
  }
  swift_release();
}

char *sub_100018494(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100005E5C(&qword_1000FC920);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 32);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  size_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1000166A4(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100016D58((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_100018578()
{
  sub_10001C998();
  if (v6)
  {
    sub_10001C2B8();
    if (v8 != v9)
    {
      sub_10001C37C();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_10001C2A8();
    }
  }
  else
  {
    uint64_t v7 = v4;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  if (v7 <= v10) {
    uint64_t v11 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v11 = v7;
  }
  if (v11)
  {
    sub_100005E5C(v5);
    uint64_t v12 = (void *)sub_10001C818();
    size_t v13 = j__malloc_size(v12);
    v12[2] = v10;
    v12[3] = 2 * ((uint64_t)(v13 - 32) / 16);
  }
  else
  {
    uint64_t v12 = _swiftEmptyArrayStorage;
  }
  char v14 = v12 + 4;
  uint64_t v15 = v0 + 32;
  if (v3)
  {
    v2(v15, v10, v14);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15, v10, v14);
  }
  swift_release();
}

uint64_t sub_100018648(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    char v6 = (unint64_t *)((char *)&v10 - ((8 * v5 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1000A1BD4(0, v5, v6);
    uint64_t v7 = sub_100018EA8(v6, v5, v3, a2);
    swift_release();
  }
  else
  {
    char v8 = (unint64_t *)swift_slowAlloc();
    sub_1000A1BD4(0, v5, v8);
    uint64_t v7 = sub_100018EA8(v8, v5, v3, a2);
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

uint64_t sub_1000187DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100005E5C(&qword_1000FC7F0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      Swift::String v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *Swift::String v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_1000A1BD4(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                *unint64_t v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_100018AB8()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for Sport();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100005E5C(&qword_1000FC890);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v38 = (void *)(v4 + 56);
    uint64_t v39 = v2;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v36 = v0;
    int64_t v37 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      unint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      sub_10001BD28(&qword_1000FC880, 255, (void (*)(uint64_t))&type metadata accessor for Sport);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v37) {
        goto LABEL_32;
      }
      unint64_t v19 = v38[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v37) {
          goto LABEL_32;
        }
        unint64_t v19 = v38[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v37) {
            goto LABEL_32;
          }
          unint64_t v19 = v38[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v37)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v36;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_1000A1BD4(0, (unint64_t)(v34 + 63) >> 6, v38);
              }
              else {
                *uint64_t v38 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v38[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v37) {
                  goto LABEL_32;
                }
                unint64_t v19 = v38[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_100018EA8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  uint64_t v31 = *(void *)(a3 + 16);
  if (!v31)
  {
    uint64_t v26 = 0;
    goto LABEL_27;
  }
  uint64_t v32 = a4 + 56;
  uint64_t v30 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  for (uint64_t i = 0; i != v31; ++i)
  {
    uint64_t v7 = (uint64_t *)(v30 + 16 * i);
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Swift::Int v10 = Hasher._finalize()();
    uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v12 = v10 & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = 1 << v12;
    if (((1 << v12) & *(void *)(v32 + 8 * (v12 >> 6))) == 0) {
      goto LABEL_22;
    }
    uint64_t v15 = *(void *)(a4 + 48);
    unint64_t v16 = (void *)(v15 + 16 * v12);
    BOOL v17 = *v16 == v9 && v16[1] == v8;
    if (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v21 = ~v11;
      for (unint64_t j = v12 + 1; ; unint64_t j = v23 + 1)
      {
        unint64_t v23 = j & v21;
        if (((*(void *)(v32 + (((j & v21) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v21)) & 1) == 0) {
          break;
        }
        uint64_t v24 = (void *)(v15 + 16 * v23);
        BOOL v25 = *v24 == v9 && v24[1] == v8;
        if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v13 = v23 >> 6;
          uint64_t v14 = 1 << v23;
          goto LABEL_10;
        }
      }
LABEL_22:
      swift_bridgeObjectRelease();
      continue;
    }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_10:
    unint64_t v19 = a1[v13];
    a1[v13] = v14 | v19;
    if ((v14 & v19) == 0 && __OFADD__(v28++, 1))
    {
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a2;
  uint64_t v26 = v28;
LABEL_27:
  swift_retain();
  return sub_1000190B8(a1, v5, v26, a4);
}

uint64_t sub_1000190B8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_33:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_100005E5C(&qword_1000FC7F0);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_22;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_37;
    }
    if (v14 >= v30) {
      goto LABEL_33;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_33;
      }
      unint64_t v15 = a1[v10];
      if (!v15) {
        break;
      }
    }
LABEL_21:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_22:
    BOOL v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*((void *)v8 + 6) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_36;
    }
    if (!v5) {
      goto LABEL_33;
    }
  }
  uint64_t v16 = v14 + 2;
  if (v16 >= v30) {
    goto LABEL_33;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_33;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_100019324(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  sub_10001C8C4();
  if (v11)
  {
    uint64_t v12 = *(void *)(v7 + 48);
    unint64_t v13 = (void *)(v12 + 16 * v10);
    BOOL v14 = *v13 == a2 && v13[1] == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v15 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v18 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v18;
      sub_10001C8C4();
      if ((v19 & 1) == 0) {
        break;
      }
      uint64_t v20 = (void *)(v12 + 16 * v10);
      BOOL v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_10001A0A8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1000194BC(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Sport();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_10001BD28(&qword_1000FC880, 255, (void (*)(uint64_t))&type metadata accessor for Sport);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    Swift::Int v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    BOOL v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    BOOL v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_10001BD28(&qword_1000FC888, 255, (void (*)(uint64_t))&type metadata accessor for Sport);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      unint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      BOOL v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    BOOL v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10001A244((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1000197E8(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    BOOL v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_10001AF74(v15, v16);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v6 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 < v7)
  {
    unint64_t v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_21;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_21;
  }
LABEL_24:

  return swift_release();
}

void sub_100019994()
{
  sub_1000098B8();
  uint64_t v2 = v1;
  if (!*(void *)(v1 + 16))
  {
    swift_release();
    goto LABEL_28;
  }
  v23[11] = v0;
  uint64_t v3 = *(void *)(v0 + 16);
  if (!v3) {
    goto LABEL_28;
  }
  v23[0] = v0 + 32;
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  while (1)
  {
    uint64_t v5 = (uint64_t *)(v23[0] + 16 * v4);
    uint64_t v7 = *v5;
    uint64_t v6 = v5[1];
    ++v4;
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Swift::Int v8 = Hasher._finalize()();
    uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v10 = v8 & ~v9;
    sub_10001CAD4();
    if (v11) {
      break;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    if (v4 == v3)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
  }
  uint64_t v12 = *(void *)(v2 + 48);
  int64_t v13 = (void *)(v12 + 16 * v10);
  BOOL v14 = *v13 == v7 && v13[1] == v6;
  if (!v14 && (sub_10001C8F8() & 1) == 0)
  {
    uint64_t v15 = ~v9;
    while (1)
    {
      uint64_t v10 = (v10 + 1) & v15;
      sub_10001CAD4();
      if ((v16 & 1) == 0) {
        goto LABEL_18;
      }
      BOOL v17 = (void *)(v12 + 16 * v10);
      BOOL v18 = *v17 == v7 && v17[1] == v6;
      if (v18 || (sub_10001C8F8() & 1) != 0)
      {
        uint64_t v24 = v4;
        uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
  }
  uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
  uint64_t v24 = v4;
LABEL_22:
  char v20 = *(unsigned char *)(v2 + 32);
  size_t v21 = 8 * ((unint64_t)((1 << v20) + 63) >> 6);
  if ((v20 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)v23 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v21);
    sub_10001C650();
    swift_release();
    if (v2 == -56)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    swift_willThrow();
    swift_errorRelease();
    __break(1u);
LABEL_31:
    swift_errorRelease();
    sub_10001C2C8();
    __break(1u);
  }
  else
  {
    unint64_t v22 = (void *)swift_slowAlloc();
    memcpy(v22, (const void *)(v2 + 56), v21);
    sub_10001C650();
    swift_release();
    if (v2 != -56) {
      goto LABEL_31;
    }
    swift_bridgeObjectRelease();
    sub_10001C2C8();
LABEL_28:
    sub_1000098A0();
  }
}

unint64_t *sub_100019C30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v11 = v10 | (v9 << 6);
    while (1)
    {
      char v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int v19 = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_37:
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_50;
      }
      if (v12 >= v36) {
        goto LABEL_48;
      }
      unint64_t v13 = *(void *)(v37 + 8 * v12);
      int64_t v14 = v9 + 1;
      if (!v13)
      {
        int64_t v14 = v9 + 2;
        if (v9 + 2 >= v36) {
          goto LABEL_48;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v9 + 3;
          if (v9 + 3 >= v36) {
            goto LABEL_48;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 4;
            if (v9 + 4 >= v36) {
              goto LABEL_48;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v15 = v9 + 5;
              if (v9 + 5 >= v36)
              {
LABEL_48:
                sub_10001BB94();
                return (unint64_t *)v2;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v15);
              if (!v13)
              {
                while (1)
                {
                  int64_t v14 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    break;
                  }
                  if (v14 >= v36) {
                    goto LABEL_48;
                  }
                  unint64_t v13 = *(void *)(v37 + 8 * v14);
                  ++v15;
                  if (v13) {
                    goto LABEL_22;
                  }
                }
LABEL_50:
                __break(1u);
              }
              int64_t v14 = v9 + 5;
            }
          }
        }
      }
LABEL_22:
      unint64_t v7 = (v13 - 1) & v13;
      unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
      int64_t v9 = v14;
    }
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_37;
        }
        BOOL v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_10001B32C((unint64_t *)((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0)), v30, v2, v21, &v38);
      swift_release();
      sub_10001BB94();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_10001B32C((unint64_t *)v33, v30, v2, v21, &v38);
      swift_release();
      sub_10001BB94();
      swift_slowDealloc();
    }
    return v32;
  }
  else
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

Swift::Int sub_10001A0A8(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1000187DC();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_10001A4EC();
      goto LABEL_22;
    }
    sub_10001A93C();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    int64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *unint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_10001A244(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = type metadata accessor for Sport();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  char v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_100018AB8();
  }
  else
  {
    if (v12 > v11)
    {
      sub_10001A68C();
      goto LABEL_12;
    }
    sub_10001ABC4();
  }
  uint64_t v13 = *v3;
  sub_10001BD28(&qword_1000FC880, 255, (void (*)(uint64_t))&type metadata accessor for Sport);
  uint64_t v14 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_10001BD28(&qword_1000FC888, 255, (void (*)(uint64_t))&type metadata accessor for Sport);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *sub_10001A4EC()
{
  uint64_t v1 = v0;
  sub_100005E5C(&qword_1000FC7F0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    char v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *char v22 = *v20;
    v22[1] = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v14) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_23:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v14) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10001A68C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Sport();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005E5C(&qword_1000FC890);
  uint64_t v6 = *v0;
  uint64_t v7 = static _SetStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  uint64_t v24 = v1;
  uint64_t v25 = (const void *)(v6 + 56);
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, v25, 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = *(void *)(v6 + 56);
  uint64_t v15 = -1;
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  unint64_t v16 = v15 & v14;
  int64_t v26 = (unint64_t)(v13 + 63) >> 6;
  if ((v15 & v14) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v17 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v17 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v12 << 6))
  {
    unint64_t v22 = *(void *)(v3 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v22, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v22, v5, v2);
    if (v16) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v19 >= v26) {
      goto LABEL_28;
    }
    unint64_t v20 = *((void *)v25 + v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v26) {
        goto LABEL_28;
      }
      unint64_t v20 = *((void *)v25 + v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v26) {
          goto LABEL_28;
        }
        unint64_t v20 = *((void *)v25 + v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v16 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v26)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_30;
  }
  unint64_t v20 = *((void *)v25 + v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v26) {
      goto LABEL_28;
    }
    unint64_t v20 = *((void *)v25 + v12);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_10001A93C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100005E5C(&qword_1000FC7F0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = v2 + 56;
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v29 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain_n();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_27;
          }
        }
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_27:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *uint64_t v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_33;
      }
      if (v14 >= v29) {
        goto LABEL_29;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v14);
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v29) {
          goto LABEL_29;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15)
        {
          int64_t v16 = v14 + 2;
          if (v16 >= v29)
          {
LABEL_29:
            uint64_t result = swift_release_n();
            uint64_t v1 = v0;
            goto LABEL_31;
          }
          unint64_t v15 = *(void *)(v6 + 8 * v16);
          int64_t v11 = v16;
          if (!v15) {
            break;
          }
        }
      }
LABEL_17:
      unint64_t v8 = (v15 - 1) & v15;
    }
    while (1)
    {
      int64_t v11 = v16 + 1;
      if (__OFADD__(v16, 1)) {
        break;
      }
      if (v11 >= v29) {
        goto LABEL_29;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      ++v16;
      if (v15) {
        goto LABEL_17;
      }
    }
LABEL_34:
    __break(1u);
  }
  else
  {
    uint64_t result = swift_release();
LABEL_31:
    uint64_t *v1 = v4;
  }
  return result;
}

uint64_t sub_10001ABC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Sport();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100005E5C(&qword_1000FC890);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_10001BD28(&qword_1000FC880, 255, (void (*)(uint64_t))&type metadata accessor for Sport);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10001AF74(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      int64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10001A4EC();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_10001B620(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t *sub_10001B104(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  unint64_t v30 = result;
  uint64_t v31 = v6 - 1;
  uint64_t v8 = *a5;
  unint64_t v7 = a5[1];
  unint64_t v9 = *(void *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return (unint64_t *)sub_1000190B8(v30, a2, v31, a3);
  }
  uint64_t v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9) {
      goto LABEL_30;
    }
    uint64_t v11 = v8 + 16 * v7;
    uint64_t v13 = *(void *)(v11 + 32);
    uint64_t v12 = *(void *)(v11 + 40);
    a5[1] = v7 + 1;
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Swift::Int v14 = Hasher._finalize()();
    uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    uint64_t v18 = 1 << v16;
    if (((1 << v16) & *(void *)(v32 + 8 * (v16 >> 6))) == 0) {
      goto LABEL_25;
    }
    uint64_t v19 = *(void *)(a3 + 48);
    unint64_t v20 = (void *)(v19 + 16 * v16);
    BOOL v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v24 = ~v15;
      for (unint64_t i = v16 + 1; ; unint64_t i = v26 + 1)
      {
        unint64_t v26 = i & v24;
        if (((*(void *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        unint64_t v27 = (void *)(v19 + 16 * v26);
        BOOL v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
          unint64_t v17 = v26 >> 6;
          uint64_t v18 = 1 << v26;
          goto LABEL_13;
        }
      }
LABEL_25:
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_13:
    unint64_t v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      uint64_t v23 = v31 - 1;
      if (__OFSUB__(v31, 1)) {
        goto LABEL_31;
      }
      --v31;
      if (!v23) {
        return (unint64_t *)&_swiftEmptySetSingleton;
      }
    }
LABEL_26:
    uint64_t v8 = *a5;
    unint64_t v7 = a5[1];
    unint64_t v9 = *(void *)(*a5 + 16);
    if (v7 == v9) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

unint64_t *sub_10001B32C(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_15;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_48;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_46;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_46;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_46;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_14;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_46;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_46;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v36 = v9 + 6;
                while (v36 < v14)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_14;
                  }
                }
                int64_t v15 = v14 - 1;
LABEL_46:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return (unint64_t *)sub_1000190B8(v39, a2, v38, a3);
              }
              goto LABEL_14;
            }
          }
          int64_t v13 = v18;
        }
LABEL_14:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_15:
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v22 = Hasher._finalize()();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_32;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        BOOL v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_22;
          }
        }
LABEL_32:
        uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      }
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_22:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_48:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

unint64_t sub_10001B620(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        Swift::Int v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= v11)
          {
LABEL_15:
            uint64_t v14 = *(void *)(v3 + 48);
            int64_t v15 = (_OWORD *)(v14 + 16 * v2);
            uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
            BOOL v17 = v2 != v6 || v15 >= v16 + 1;
            int64_t v2 = v6;
            if (v17)
            {
              *int64_t v15 = *v16;
              int64_t v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= v11)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_10001B7DC(void *a1)
{
  return sub_10001BE20(a1, (SEL *)&selRef_channelID);
}

uint64_t sub_10001B7E8(void *a1)
{
  return sub_10001BE20(a1, (SEL *)&selRef_topic);
}

uint64_t sub_10001B7F4(void *a1)
{
  id v1 = [a1 userInfo];
  if (!v1) {
    return 0;
  }
  int64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_10001B860(uint64_t a1, void *a2, SEL *a3)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 *a3:isa];
}

uint64_t sub_10001B8D4(void *a1)
{
  id v2 = [a1 enabledTopics];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_10001B938(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  sub_10001C1C0(0, &qword_1000FC7E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_10001C840();
  NSString v8 = String._bridgeToObjectiveC()();
  [a4 *a5:isa:v8];
}

void sub_10001B9E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  [a4 subscribeToChannel:a1 forTopic:v6];
}

void sub_10001BA50(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  [a4 unsubscribeFromChannel:a1 forTopic:v6];
}

void sub_10001BAB8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  [a4 getRegisteredChannelsForTopic:v6 withCompletion:a3];
}

uint64_t sub_10001BB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_10001BB78(uint64_t a1)
{
  sub_10000E118(a1, *(void *)(v1 + 16));
}

uint64_t sub_10001BB94()
{
  return swift_release();
}

void sub_10001BB9C(uint64_t a1)
{
  sub_100012190(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10001BBA8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10001BBE0()
{
  uint64_t v1 = sub_100005E5C(&qword_1000FC800);
  sub_100009830();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v9);
}

uint64_t sub_10001BC88(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_100005E5C(&qword_1000FC800) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100012374(a1, a2, v6, v7);
}

uint64_t sub_10001BD10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001BD20()
{
  return swift_release();
}

uint64_t sub_10001BD28(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001BD70(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10001BDCC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10001BE20(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t sub_10001BE80()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10001BEC8()
{
  sub_10001C690();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10001BF78;
  sub_10001C830();
  sub_10001C898();
  return sub_10000EC18(v2, v3, v4, v5, v6);
}

uint64_t sub_10001BF78()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v1 = *v0;
  sub_10001C240();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_10001C2E0();
  return v3();
}

uint64_t sub_10001C03C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10001C074(uint64_t a1)
{
  return sub_10000F080(a1, *(void **)(v1 + 16));
}

uint64_t sub_10001C07C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10001C0BC()
{
  sub_10001C28C();
  uint64_t v3 = v2;
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_10001BF78;
  return sub_10000F25C(v3, v4, v5, v6);
}

uint64_t sub_10001C16C(uint64_t a1, uint64_t *a2)
{
  sub_100005E5C(a2);
  sub_1000098E8();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10001C1C0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void *sub_10001C24C@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t sub_10001C268()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_10001C298()
{
  return v0 + 8;
}

uint64_t sub_10001C2C8()
{
  return swift_slowDealloc();
}

uint64_t sub_10001C2E0()
{
  return v0 + 8;
}

void sub_10001C2EC()
{
  sub_10001574C();
}

uint64_t sub_10001C310()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_10001C328()
{
  return swift_dynamicCast();
}

void sub_10001C388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(void *)(a16 + 16) = v16;
}

uint64_t sub_10001C3E0(int a1)
{
  sub_1000082C0(v1, a1 ^ 1u, 1, v2);
  return sub_100046758(v1);
}

uint64_t sub_10001C418()
{
  return 0;
}

uint64_t sub_10001C428()
{
  return v0;
}

uint64_t sub_10001C438()
{
  return v0 + 8;
}

void sub_10001C448()
{
  sub_10001574C();
}

uint64_t sub_10001C498()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_10001C4E4()
{
  return swift_bridgeObjectRetain();
}

void sub_10001C500(uint64_t a1@<X8>)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_10001C51C()
{
  return *(void *)(v0 + 72);
}

uint64_t sub_10001C53C()
{
  *(void *)(v1 + 16) = v0;
  return swift_retain();
}

uint64_t sub_10001C55C()
{
  return swift_slowAlloc();
}

uint64_t sub_10001C578()
{
  return v0;
}

uint64_t sub_10001C58C()
{
  return v0;
}

uint64_t sub_10001C5A8()
{
  return v0;
}

uint64_t sub_10001C5D0()
{
  return v0;
}

uint64_t sub_10001C5EC()
{
  return swift_allocObject();
}

uint64_t sub_10001C614()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10001C638()
{
  return swift_slowAlloc();
}

unint64_t *sub_10001C650()
{
  return sub_10001B104(v3, v2, v0, v1, (void *)(v4 - 104));
}

uint64_t sub_10001C678()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_10001C69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  return sub_100019324((Swift::Int *)va, 5000257, 0xE300000000000000);
}

uint64_t sub_10001C6C0()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_10001C704()
{
  return v0;
}

uint64_t sub_10001C71C(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

void sub_10001C740()
{
  sub_100017DA8();
}

void sub_10001C764()
{
  *(void *)(v4 + 16) = v0;
  uint64_t v5 = v4 + 16 * v1;
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v2;
}

void sub_10001C77C()
{
  sub_100017DA8();
}

uint64_t sub_10001C7B8()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_10001C7DC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = result;
  return result;
}

uint64_t sub_10001C800()
{
  return v0 + 32;
}

uint64_t sub_10001C818()
{
  return swift_allocObject();
}

uint64_t sub_10001C840()
{
  return v0;
}

uint64_t sub_10001C84C()
{
  return v0 + 8;
}

uint64_t sub_10001C85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  return type metadata accessor for Logger();
}

void sub_10001C880()
{
}

uint64_t sub_10001C8AC()
{
  return *(void *)(v0 + 88);
}

uint64_t sub_10001C8D8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001C8F8()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10001C910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

void sub_10001C924(void *a1, int a2, os_log_type_t a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, os_log_t log)
{
  _os_log_impl(a1, log, a3, a4, v14, 0xCu);
}

uint64_t sub_10001C944(uint64_t a1)
{
  *(void *)(v1 - 88) = a1;
  return v1 - 88;
}

uint64_t sub_10001C958(uint64_t result)
{
  *(void *)(v1 + 96) = result;
  return result;
}

uint64_t sub_10001C964(uint64_t result)
{
  *(void *)(v1 + 64) = result;
  return result;
}

uint64_t sub_10001C984()
{
  return 0;
}

uint64_t sub_10001C9AC(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_10001C9B8()
{
  return swift_bridgeObjectRetain();
}

id sub_10001C9D8()
{
  uint64_t v3 = *(void **)(v0 + 8 * v1 + 32);
  return v3;
}

uint64_t sub_10001C9F0()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_10001CA08()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001CA2C()
{
  return swift_arrayDestroy();
}

uint64_t sub_10001CA4C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001CA80()
{
  return v0;
}

uint64_t sub_10001CA8C@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_10001CAA0()
{
  return v0;
}

uint64_t sub_10001CAB4()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_10001CAF4()
{
  return v0;
}

uint64_t sub_10001CB08()
{
  uint64_t v0 = sub_100005E5C(&qword_1000FCA48);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[1] = sub_10001CCA4();
  sub_100005E5C(&qword_1000FCA50);
  sub_100005E5C(&qword_1000FCA58);
  sub_10000953C(&qword_1000FCA60, &qword_1000FCA50);
  Publisher.tryMap<A>(_:)();
  swift_release();
  sub_10000953C(&qword_1000FCA68, &qword_1000FCA48);
  uint64_t v4 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_10001CCA4()
{
  uint64_t v0 = sub_100005E5C(&qword_1000FCA70);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100005E5C(&qword_1000FCA78);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [self ams_sharedAccountStore];
  id v9 = [v8 ams_activeiTunesAccount];

  if (v9)
  {
    uint64_t v14 = (uint64_t)v9;
    id v10 = v9;
    sub_100005E5C(&qword_1000FCA58);
    Just.init(_:)();
    sub_100005E5C((uint64_t *)&unk_1000FDA30);
    Just.setFailureType<A>(to:)();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_10000953C(qword_1000FCA90, &qword_1000FCA78);
    uint64_t v11 = Publisher.eraseToAnyPublisher()();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    sub_100005E5C(&qword_1000FCA80);
    swift_allocObject();
    uint64_t v14 = Future.init(_:)();
    sub_10000953C(&qword_1000FCA88, &qword_1000FCA80);
    uint64_t v11 = Publisher.eraseToAnyPublisher()();
    swift_release();
  }
  return v11;
}

id sub_10001CF68@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = *a1;
  return v2;
}

void sub_10001CF98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = self;
  swift_retain();
  id v6 = [v5 ams_sharedAccountStore];
  id v7 = [v6 ams_fetchLocaliTunesAccount];

  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_10001D24C;
  *(void *)(v8 + 24) = v4;
  v10[4] = sub_10001D28C;
  v10[5] = v8;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_10001D164;
  v10[3] = &unk_1000F0468;
  id v9 = _Block_copy(v10);
  swift_release();
  [v7 addFinishBlock:v9];
  _Block_release(v9);
}

uint64_t sub_10001D0EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (!a2) {
    return a3();
  }
  swift_errorRetain();
  ((void (*)(uint64_t, uint64_t))a3)(a2, 1);

  return swift_errorRelease();
}

void sub_10001D164(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t type metadata accessor for AccountManager()
{
  return self;
}

uint64_t sub_10001D214()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10001D24C(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_10001D28C(uint64_t a1, uint64_t a2)
{
  return sub_10001D0EC(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_10001D294(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001D2A4()
{
  return swift_release();
}

uint64_t sub_10001D2B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

void sub_10001D2B8()
{
  sub_100027074(319, (unint64_t *)&qword_1000FCB18, (void (*)(uint64_t))type metadata accessor for ApiRequestMetrics);
  if (v0 <= 0x3F)
  {
    type metadata accessor for URLRequest();
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_10001D3F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v105 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v105 - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  uint64_t v102 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v102 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v6 <= v9) {
    unsigned int v10 = v9;
  }
  else {
    unsigned int v10 = v6;
  }
  if (v10 <= 0x7FFFFFFE) {
    int v11 = 2147483646;
  }
  else {
    int v11 = v10;
  }
  int v103 = v11;
  unsigned int v106 = v5;
  uint64_t v98 = *(void *)(v4 + 64);
  if (v5) {
    uint64_t v12 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v12 = *(void *)(v4 + 64) + 1;
  }
  uint64_t v101 = v4;
  int v13 = *(_DWORD *)(v4 + 80);
  uint64_t v14 = v13;
  uint64_t v94 = *(void *)(v102 - 8);
  int v15 = *(_DWORD *)(v7 + 80);
  size_t v16 = *(void *)(v94 + 64);
  if (!v8) {
    ++v16;
  }
  size_t v107 = v16;
  uint64_t v17 = type metadata accessor for URLRequest();
  int v18 = *(_DWORD *)(*(void *)(v17 - 8) + 80);
  uint64_t v19 = *(void *)(*(void *)(v17 - 8) + 64);
  uint64_t v20 = *(void *)(a3 + 16);
  uint64_t v21 = v18;
  uint64_t v22 = *(void *)(v20 - 8);
  int v23 = *(_DWORD *)(v22 + 80);
  unint64_t v24 = v15 | (unint64_t)v13 | v18 | v23;
  if (v24 > 7
    || ((v15 | v13 | v18 | v23) & 0x100000) != 0
    || (uint64_t v25 = v12 + v13,
        uint64_t v100 = v13 + 24,
        uint64_t v99 = v12 + v15,
        unint64_t __n = ((((((((((v12
                      + 23
                      + ((v25
                        + ((v25
                          + ((v107
                            + v13
                            + ((v99
                              + ((v100
                                + ((((v25
                                    + ((v25
                                      + ((v13
                                        + 8
                                        + ((((v12 + 7 + (v25 & ~(unint64_t)v13)) & 0xFFFFFFFFFFFFFFF8)
                                          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v13)) & ~(unint64_t)v13)) & ~(unint64_t)v13)
                                  + v12) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v13)) & ~(unint64_t)v15)) & ~(unint64_t)v13)) & ~(unint64_t)v13)) & ~(unint64_t)v13)) & 0xFFFFFFFFFFFFFFF8)
                    + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 16,
        size_t v97 = v107 + v13,
        ((v23
        + 16
        + ((((v19 + 7 + ((__n + v18) & ~(unint64_t)v18)) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v23)
      + *(void *)(v22 + 64) > 0x18))
  {
    uint64_t v34 = *a2;
    *a1 = *a2;
    unint64_t v30 = (uint64_t *)(v34 + ((v24 & 0xF8 ^ 0x1F8) & (v24 + 16)));
    swift_retain();
    return v30;
  }
  unint64_t v26 = ~(unint64_t)v13;
  unint64_t v95 = ~(unint64_t)v15;
  unint64_t v27 = ~(unint64_t)v18;
  int v28 = v103;
  uint64_t v104 = v12 + 7;
  uint64_t v92 = v20;
  uint64_t v93 = v14 + 8;
  uint64_t v90 = v17;
  uint64_t v91 = *(void *)(v20 - 8);
  uint64_t v88 = v23;
  uint64_t v89 = *(void *)(v17 - 8);
  uint64_t v86 = v19 + 7;
  uint64_t v87 = v23 + 16;
  uint64_t v85 = v12 + 23;
  if (v6 != v28)
  {
    unint64_t v30 = a1;
    BOOL v29 = a2;
    unint64_t v35 = (((v25
           + ((v25
             + ((v14
               + 8
               + ((((v12 + 7 + (((unint64_t)a2 + v25) & v26)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v26)) & v26)) & v26)
         + v12) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v32 = v105;
    if (v10 > 0x7FFFFFFE)
    {
      size_t v31 = v12;
      if (v8 >= 2)
      {
        unsigned int v37 = sub_1000082E8((v99 + ((v100 + v35) & v26)) & v95, v8, v102);
        BOOL v29 = a2;
        if (v37 > 1) {
          goto LABEL_34;
        }
      }
    }
    else
    {
      unint64_t v36 = *(void *)(v35 + 16);
      if (v36 >= 0xFFFFFFFF) {
        LODWORD(v36) = -1;
      }
      size_t v31 = v12;
      if ((v36 + 1) >= 2) {
        goto LABEL_34;
      }
    }
LABEL_32:
    uint64_t v38 = v29;
    if (sub_1000082E8((uint64_t)v29, 1, v32))
    {
      memcpy(v30, v38, v31);
      uint64_t v39 = v101;
    }
    else
    {
      uint64_t v39 = v101;
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v101 + 16))(v30, v38, v32);
      sub_1000082C0((uint64_t)v30, 0, 1, v32);
    }
    if (sub_1000082E8(((unint64_t)v38 + v25) & v26, 1, v32))
    {
      memcpy((void *)(((unint64_t)v30 + v25) & v26), (const void *)(((unint64_t)v38 + v25) & v26), v31);
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v39 + 16))(((unint64_t)v30 + v25) & v26, ((unint64_t)v38 + v25) & v26, v32);
      sub_1000082C0(((unint64_t)v30 + v25) & v26, 0, 1, v32);
    }
    int64_t v41 = (void *)((v104 + (((unint64_t)v30 + v25) & v26)) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v42 = (void *)((v104 + (((unint64_t)v38 + v25) & v26)) & 0xFFFFFFFFFFFFFFF8);
    *int64_t v41 = *v42;
    unint64_t v43 = (void *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
    int v44 = (void *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v43 = *v44;
    int v45 = (void *)(((unint64_t)v43 + v93) & v26);
    int v46 = (const void *)(((unint64_t)v44 + v93) & v26);
    if (sub_1000082E8((uint64_t)v46, 1, v32))
    {
      memcpy(v45, v46, v31);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v45, v46, v32);
      sub_1000082C0((uint64_t)v45, 0, 1, v32);
    }
    int v47 = (void *)(((unint64_t)v45 + v25) & v26);
    int v48 = (const void *)(((unint64_t)v46 + v25) & v26);
    if (sub_1000082E8((uint64_t)v48, 1, v32))
    {
      memcpy(v47, v48, v31);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v47, v48, v32);
      sub_1000082C0((uint64_t)v47, 0, 1, v32);
    }
    uint64_t v49 = (void *)(((unint64_t)v47 + v25) & v26);
    uint64_t v50 = (const void *)(((unint64_t)v48 + v25) & v26);
    if (sub_1000082E8((uint64_t)v50, 1, v32))
    {
      memcpy(v49, v50, v31);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v49, v50, v32);
      sub_1000082C0((uint64_t)v49, 0, 1, v32);
    }
    *((unsigned char *)v49 + v31) = *((unsigned char *)v50 + v31);
    unint64_t v51 = ((unint64_t)v49 + v31) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v52 = ((unint64_t)v50 + v31) & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v51 + 8) = *(void *)(v52 + 8);
    *(void *)(v51 + 16) = *(void *)(v52 + 16);
    uint64_t v53 = (void *)((v100 + v51) & v26);
    uint64_t v54 = (const void *)((v100 + v52) & v26);
    swift_bridgeObjectRetain();
    if (sub_1000082E8((uint64_t)v54, 1, v32))
    {
      memcpy(v53, v54, v31);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v53, v54, v32);
      sub_1000082C0((uint64_t)v53, 0, 1, v32);
    }
    uint64_t v55 = (void *)(((unint64_t)v53 + v99) & v95);
    uint64_t v56 = (const void *)(((unint64_t)v54 + v99) & v95);
    if (sub_1000082E8((uint64_t)v56, 1, v102))
    {
      memcpy(v55, v56, v107);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v94 + 16))(v55, v56, v102);
      sub_1000082C0((uint64_t)v55, 0, 1, v102);
    }
    uint64_t v57 = (void *)(((unint64_t)v55 + v97) & v26);
    uint64_t v58 = (const void *)(((unint64_t)v56 + v97) & v26);
    if (sub_1000082E8((uint64_t)v58, 1, v32))
    {
      memcpy(v57, v58, v31);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v57, v58, v32);
      sub_1000082C0((uint64_t)v57, 0, 1, v32);
    }
    v59 = (void *)(((unint64_t)v57 + v25) & v26);
    uint64_t v60 = (const void *)(((unint64_t)v58 + v25) & v26);
    if (sub_1000082E8((uint64_t)v60, 1, v32))
    {
      memcpy(v59, v60, v31);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v59, v60, v32);
      sub_1000082C0((uint64_t)v59, 0, 1, v32);
    }
    v61 = (void *)(((unint64_t)v59 + v25) & v26);
    uint64_t v62 = (const void *)(((unint64_t)v60 + v25) & v26);
    if (sub_1000082E8((uint64_t)v62, 1, v32))
    {
      memcpy(v61, v62, v31);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v61, v62, v32);
      sub_1000082C0((uint64_t)v61, 0, 1, v32);
    }
    unint64_t v63 = ((unint64_t)v61 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v64 = ((unint64_t)v62 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v65 = *(void *)v64;
    *(unsigned char *)(v63 + 8) = *(unsigned char *)(v64 + 8);
    *(void *)unint64_t v63 = v65;
    uint64_t v66 = (void *)(((unint64_t)v61 + v31 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v67 = (void *)(((unint64_t)v62 + v31 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v66 = *v67;
    v66[1] = v67[1];
    uint64_t v68 = (void *)(((unint64_t)v66 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v69 = (void *)(((unint64_t)v67 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v68 = *v69;
    v68[1] = v69[1];
    uint64_t v70 = (void *)(((unint64_t)v68 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v71 = (void *)(((unint64_t)v69 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v70 = *v71;
    v70[1] = v71[1];
    uint64_t v72 = (void *)(((unint64_t)v70 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v73 = (void *)(((unint64_t)v71 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v72 = *v73;
    v72[1] = v73[1];
    uint64_t v74 = (void *)(((unint64_t)v72 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v75 = (void *)(((unint64_t)v73 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v74 = *v75;
    v74[1] = v75[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v27 = ~v21;
    unint64_t v40 = __n;
    if (v106) {
      unint64_t v40 = ((((((((((v85
    }
                    + ((v25
                      + ((v25
                        + ((v97
                          + ((v99
                            + ((v100
                              + ((((v25
                                  + ((v25
                                    + ((v93
                                      + ((((v104 + ((v98 + v14) & v26)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v26)) & v26)) & v26)
                                + v31) & 0xFFFFFFFFFFFFFFF8)) & v26)) & v95)) & v26)) & v26)) & v26)) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 16;
    goto LABEL_65;
  }
  unint64_t v30 = a1;
  BOOL v29 = a2;
  size_t v31 = v12;
  uint64_t v32 = v105;
  if (v106 < 2) {
    goto LABEL_32;
  }
  unsigned int v33 = sub_1000082E8((uint64_t)a2, v106, v105);
  BOOL v29 = a2;
  if (v33 < 2) {
    goto LABEL_32;
  }
LABEL_34:
  unint64_t v40 = __n;
  memcpy(v30, v29, __n);
LABEL_65:
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v89 + 16))(((unint64_t)v30 + v21 + v40) & v27, ((unint64_t)a2 + v21 + v40) & v27, v90);
  uint64_t v76 = (void *)((v86 + (((unint64_t)v30 + v21 + v40) & v27)) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v77 = (void **)((v86 + (((unint64_t)a2 + v21 + v40) & v27)) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v78 = *v77;
  *uint64_t v76 = *v77;
  unint64_t v79 = ((unint64_t)v76 + 15) & 0xFFFFFFFFFFFFFFF8;
  v80 = (uint64_t *)(((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v81 = v80[1];
  id v82 = v78;
  if ((v81 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v79 = *(_OWORD *)v80;
  }
  else
  {
    uint64_t v83 = *v80;
    sub_10001DF8C(*v80, v81);
    *(void *)unint64_t v79 = v83;
    *(void *)(v79 + 8) = v81;
  }
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v91 + 16))((v87 + v79) & ~v88, ((unint64_t)v80 + v87) & ~v88, v92);
  return v30;
}

uint64_t sub_10001DF8C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_10001DFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned int *)(v4 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  unsigned int v53 = *(_DWORD *)(v9 + 84);
  unsigned int v11 = v53 - 1;
  if (!v53) {
    unsigned int v11 = 0;
  }
  if (v7 > v11) {
    unsigned int v11 = v7;
  }
  if (v11 <= 0x7FFFFFFE) {
    int v12 = 2147483646;
  }
  else {
    int v12 = v11;
  }
  uint64_t v13 = *(void *)(v4 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = ~v14;
  uint64_t v51 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v50 = ~v51;
  uint64_t v49 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v52 = a1;
  uint64_t v47 = v8;
  if (v7 == v12)
  {
    if (v6 >= 2 && sub_1000082E8(a1, v6, v3) >= 2)
    {
      uint64_t v16 = v13 + v14;
      uint64_t v17 = v13 + 7;
      uint64_t v18 = v14 + 8;
      uint64_t v19 = v13;
      goto LABEL_51;
    }
    goto LABEL_25;
  }
  if (v6) {
    uint64_t v19 = v13;
  }
  else {
    uint64_t v19 = v13 + 1;
  }
  uint64_t v16 = v19 + v14;
  uint64_t v17 = v19 + 7;
  unint64_t v20 = (((v19 + 7 + ((v19 + v14 + a1) & v15)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = v14 + 8;
  unint64_t v21 = (((v19 + v14 + ((v19 + v14 + ((v14 + 8 + v20) & v15)) & v15)) & v15) + v19) & 0xFFFFFFFFFFFFFFF8;
  if (v11 > 0x7FFFFFFE)
  {
    if (v53 >= 2)
    {
      unsigned int v23 = sub_1000082E8((v19 + v51 + ((v14 + v21 + 24) & v15)) & v50, v53, v8);
      uint64_t v17 = v19 + 7;
      if (v23 > 1) {
        goto LABEL_51;
      }
    }
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v21 + 16);
  if (v22 >= 0xFFFFFFFF) {
    LODWORD(v22) = -1;
  }
  if ((v22 + 1) < 2)
  {
LABEL_25:
    if (!sub_1000082E8(v52, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v52, v3);
    }
    if (v6) {
      uint64_t v19 = v13;
    }
    else {
      uint64_t v19 = v13 + 1;
    }
    uint64_t v24 = (v19 + v52 + v14) & v15;
    if (!sub_1000082E8(v24, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v24, v3);
    }
    uint64_t v18 = v14 + 8;
    unint64_t v25 = (v14 + 8 + ((((v19 + 7 + v24) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v15;
    if (!sub_1000082E8(v25, 1, v3)) {
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v25, v3);
    }
    uint64_t v16 = v19 + v14;
    uint64_t v26 = (v19 + v14 + v25) & v15;
    if (!sub_1000082E8(v26, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v26, v3);
    }
    uint64_t v27 = (v16 + v26) & v15;
    if (!sub_1000082E8(v27, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v27, v3);
    }
    swift_bridgeObjectRelease();
    unint64_t v28 = (v14 + ((v27 + v19) & 0xFFFFFFFFFFFFFFF8) + 24) & v15;
    if (!sub_1000082E8(v28, 1, v3)) {
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v28, v3);
    }
    uint64_t v29 = (v19 + v51 + v28) & v50;
    if (!sub_1000082E8(v29, 1, v47)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v29, v47);
    }
    uint64_t v30 = v49 + v14;
    if (!v53) {
      ++v30;
    }
    uint64_t v31 = (v30 + v29) & v15;
    if (!sub_1000082E8(v31, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v31, v3);
    }
    uint64_t v32 = (v16 + v31) & v15;
    if (!sub_1000082E8(v32, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v32, v3);
    }
    uint64_t v33 = (v16 + v32) & v15;
    if (!sub_1000082E8(v33, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v33, v3);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v19 + 7;
  }
LABEL_51:
  uint64_t v34 = v49 + v14;
  if (!v53) {
    ++v34;
  }
  unint64_t v35 = (((((((((v19
               + ((v16
                 + ((v16
                   + ((v34
                     + ((v19
                       + v51
                       + ((v14
                         + ((((v16
                             + ((v16
                               + ((v18 + ((((v17 + (v16 & v15)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v15)) & v15)) & v15)
                           + v19) & 0xFFFFFFFFFFFFFFF8)
                         + 24) & v15)) & v50)) & v15)) & v15)) & v15)
               + 23) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = type metadata accessor for URLRequest();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = v37 + 8;
  unint64_t v39 = (v52 + *(unsigned __int8 *)(v37 + 80) + v35 + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  (*(void (**)(unint64_t, uint64_t))(v37 + 8))(v39, v36);
  unint64_t v40 = (id *)((*(void *)(v38 + 56) + v39 + 7) & 0xFFFFFFFFFFFFFFF8);

  int64_t v41 = (uint64_t *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v42 = v41[1];
  if ((v42 & 0x3000000000000000) == 0) {
    sub_10000835C(*v41, v42);
  }
  uint64_t v43 = *(void *)(*(void *)(a2 + 16) - 8);
  int v44 = *(uint64_t (**)(unint64_t))(v43 + 8);
  unint64_t v45 = ((unint64_t)v41 + *(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);

  return v44(v45);
}

void *sub_10001E66C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  unsigned int v8 = *(_DWORD *)(v6 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v11;
  unsigned int v104 = *(_DWORD *)(v11 + 84);
  unsigned int v13 = v104 - 1;
  if (!v104) {
    unsigned int v13 = 0;
  }
  if (v9 > v13) {
    unsigned int v13 = v9;
  }
  if (v13 <= 0x7FFFFFFE) {
    int v14 = 2147483646;
  }
  else {
    int v14 = v13;
  }
  uint64_t v15 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = ~v15;
  uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v109 = ~v17;
  size_t v108 = *(void *)(*(void *)(v10 - 8) + 64);
  uint64_t v102 = a2;
  unsigned int v107 = v8;
  size_t v106 = *(void *)(v6 + 64);
  uint64_t v98 = v10;
  if (v9 != v14)
  {
    if (v8) {
      size_t v21 = *(void *)(v6 + 64);
    }
    else {
      size_t v21 = *(void *)(v6 + 64) + 1;
    }
    size_t v22 = v21 + v15;
    size_t v23 = v21 + 7;
    uint64_t v24 = v15 + 8;
    unint64_t v25 = (((v21
           + v15
           + ((v21
             + v15
             + ((v15
               + 8
               + ((((v21 + 7 + (((unint64_t)a2 + v21 + v15) & v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v16)) & v16)
         + v21) & 0xFFFFFFFFFFFFFFF8;
    if (v13 > 0x7FFFFFFE)
    {
      if (v104 >= 2)
      {
        uint64_t v100 = *(void *)(v10 - 8);
        uint64_t v27 = *(unsigned __int8 *)(v11 + 80);
        unsigned int v28 = sub_1000082E8((v21 + v17 + ((v15 + v25 + 24) & v16)) & v109, v104, v10);
        uint64_t v17 = v27;
        uint64_t v24 = v15 + 8;
        uint64_t v12 = v100;
        size_t v23 = v21 + 7;
        if (v28 > 1) {
          goto LABEL_30;
        }
      }
    }
    else
    {
      unint64_t v26 = *(void *)(v25 + 16);
      if (v26 >= 0xFFFFFFFF) {
        LODWORD(v26) = -1;
      }
      if ((v26 + 1) >= 2) {
        goto LABEL_30;
      }
    }
LABEL_25:
    uint64_t v29 = v12;
    uint64_t v95 = v17;
    if (sub_1000082E8((uint64_t)a2, 1, v5))
    {
      if (v107) {
        size_t v21 = v106;
      }
      else {
        size_t v21 = v106 + 1;
      }
      memcpy(a1, a2, v21);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
      sub_1000082C0((uint64_t)a1, 0, 1, v5);
      if (v107) {
        size_t v21 = v106;
      }
      else {
        size_t v21 = v106 + 1;
      }
    }
    uint64_t v94 = a1;
    unint64_t v35 = (void *)(((unint64_t)a1 + v15 + v21) & v16);
    uint64_t v36 = (const void *)(((unint64_t)a2 + v15 + v21) & v16);
    if (sub_1000082E8((uint64_t)v36, 1, v5))
    {
      memcpy(v35, v36, v21);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v35, v36, v5);
      sub_1000082C0((uint64_t)v35, 0, 1, v5);
    }
    size_t v101 = v21 + 7;
    uint64_t v37 = (void *)(((unint64_t)v36 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v38 = (void *)(((unint64_t)v35 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v38 = *v37;
    unint64_t v39 = (void *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v40 = (void *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v39 = *v40;
    int64_t v41 = (void *)(((unint64_t)v39 + v15 + 8) & v16);
    uint64_t v99 = v15 + 8;
    unint64_t v42 = (const void *)(((unint64_t)v40 + v15 + 8) & v16);
    if (sub_1000082E8((uint64_t)v42, 1, v5))
    {
      memcpy(v41, v42, v21);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v41, v42, v5);
      sub_1000082C0((uint64_t)v41, 0, 1, v5);
    }
    size_t v34 = v21 + v15;
    uint64_t v43 = (void *)(((unint64_t)v41 + v21 + v15) & v16);
    int v44 = (const void *)(((unint64_t)v42 + v21 + v15) & v16);
    if (sub_1000082E8((uint64_t)v44, 1, v5))
    {
      memcpy(v43, v44, v21);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v43, v44, v5);
      sub_1000082C0((uint64_t)v43, 0, 1, v5);
    }
    unint64_t v45 = (void *)(((unint64_t)v43 + v34) & v16);
    int v46 = (const void *)(((unint64_t)v44 + v34) & v16);
    if (sub_1000082E8((uint64_t)v46, 1, v5))
    {
      memcpy(v45, v46, v21);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v45, v46, v5);
      sub_1000082C0((uint64_t)v45, 0, 1, v5);
    }
    *((unsigned char *)v45 + v21) = *((unsigned char *)v46 + v21);
    unint64_t v47 = ((unint64_t)v45 + v21) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v48 = ((unint64_t)v46 + v21) & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v47 + 8) = *(void *)(v48 + 8);
    *(void *)(v47 + 16) = *(void *)(v48 + 16);
    uint64_t v49 = (void *)((v15 + 24 + v47) & v16);
    uint64_t v50 = (const void *)((v15 + 24 + v48) & v16);
    swift_bridgeObjectRetain();
    if (sub_1000082E8((uint64_t)v50, 1, v5))
    {
      memcpy(v49, v50, v21);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v49, v50, v5);
      sub_1000082C0((uint64_t)v49, 0, 1, v5);
    }
    uint64_t v51 = (void *)(((unint64_t)v49 + v21 + v95) & v109);
    size_t v96 = v21 + v95;
    uint64_t v52 = (const void *)(((unint64_t)v50 + v96) & v109);
    uint64_t v97 = v7;
    if (sub_1000082E8((uint64_t)v52, 1, v98))
    {
      BOOL v53 = v104 == 0;
      BOOL v105 = v104 == 0;
      if (v53) {
        size_t v54 = v108 + 1;
      }
      else {
        size_t v54 = v108;
      }
      memcpy(v51, v52, v54);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v29 + 16))(v51, v52, v98);
      sub_1000082C0((uint64_t)v51, 0, 1, v98);
      BOOL v53 = v104 == 0;
      BOOL v105 = v104 == 0;
      if (v53) {
        size_t v54 = v108 + 1;
      }
      else {
        size_t v54 = v108;
      }
    }
    uint64_t v31 = v15 + 24;
    size_t v55 = v54 + v15;
    uint64_t v56 = (void *)(((unint64_t)v51 + v54 + v15) & v16);
    uint64_t v57 = (const void *)(((unint64_t)v52 + v55) & v16);
    if (sub_1000082E8((uint64_t)v57, 1, v5))
    {
      memcpy(v56, v57, v21);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v97 + 16))(v56, v57, v5);
      sub_1000082C0((uint64_t)v56, 0, 1, v5);
    }
    a1 = v94;
    uint64_t v58 = (void *)(((unint64_t)v56 + v34) & v16);
    v59 = (const void *)(((unint64_t)v57 + v34) & v16);
    if (sub_1000082E8((uint64_t)v59, 1, v5))
    {
      memcpy(v58, v59, v21);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v97 + 16))(v58, v59, v5);
      sub_1000082C0((uint64_t)v58, 0, 1, v5);
    }
    uint64_t v60 = (void *)(((unint64_t)v58 + v34) & v16);
    v61 = (const void *)(((unint64_t)v59 + v34) & v16);
    if (sub_1000082E8((uint64_t)v61, 1, v5))
    {
      memcpy(v60, v61, v21);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v97 + 16))(v60, v61, v5);
      sub_1000082C0((uint64_t)v60, 0, 1, v5);
    }
    unint64_t v62 = ((unint64_t)v60 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v63 = ((unint64_t)v61 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v64 = *(void *)v63;
    *(unsigned char *)(v62 + 8) = *(unsigned char *)(v63 + 8);
    *(void *)unint64_t v62 = v64;
    uint64_t v65 = (void *)(((unint64_t)v60 + v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v66 = (void *)(((unint64_t)v61 + v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v65 = *v66;
    v65[1] = v66[1];
    uint64_t v67 = (void *)(((unint64_t)v65 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v68 = (void *)(((unint64_t)v66 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v67 = *v68;
    v67[1] = v68[1];
    uint64_t v69 = (void *)(((unint64_t)v67 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v70 = (void *)(((unint64_t)v68 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v69 = *v70;
    v69[1] = v70[1];
    uint64_t v71 = (void *)(((unint64_t)v69 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v72 = (void *)(((unint64_t)v70 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v71 = *v72;
    v71[1] = v72[1];
    uint64_t v73 = (void *)(((unint64_t)v71 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v74 = (void *)(((unint64_t)v72 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v73 = *v74;
    v73[1] = v74[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    BOOL v30 = v105;
    if (v107) {
      size_t v22 = v106 + v15;
    }
    else {
      size_t v22 = v21 + v15;
    }
    size_t v32 = v96;
    goto LABEL_72;
  }
  if (v8 < 2) {
    goto LABEL_25;
  }
  uint64_t v18 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = *(void *)(v10 - 8);
  unsigned int v20 = sub_1000082E8((uint64_t)a2, v8, v5);
  uint64_t v12 = v19;
  uint64_t v17 = v18;
  if (v20 < 2) {
    goto LABEL_25;
  }
  size_t v21 = v106;
  size_t v22 = v106 + v15;
  size_t v23 = v106 + 7;
  uint64_t v24 = v15 + 8;
LABEL_30:
  BOOL v30 = v104 == 0;
  uint64_t v99 = v24;
  size_t v101 = v23;
  uint64_t v31 = v15 + 24;
  size_t v32 = v21 + v17;
  size_t v33 = v108 + v15;
  if (!v104) {
    ++v33;
  }
  memcpy(a1, a2, ((((((((((v21+ ((v22+ ((v22+ ((v33+ ((v21+ v17+ ((v15+ 24+ ((((v22+ ((v22+ ((v24 + ((((v23 + (v22 & v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v16)) & v16)+ v21) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v109)) & v16)) & v16)) & v16)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)
  + 16);
  size_t v34 = v22;
LABEL_72:
  unint64_t v75 = (((((((((v21
               + ((v34
                 + ((v34
                   + ((v108
                     + v15
                     + v30
                     + ((v32
                       + ((v31
                         + ((((v34
                             + ((v34
                               + ((v99 + ((((v101 + (v22 & v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v16)) & v16)
                           + v21) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v109)) & v16)) & v16)) & v16)
               + 23) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v76 = type metadata accessor for URLRequest();
  uint64_t v77 = *(void *)(v76 - 8);
  uint64_t v78 = v77 + 16;
  uint64_t v79 = *(unsigned __int8 *)(v77 + 80);
  uint64_t v80 = v75 + v79 + 16;
  unint64_t v81 = ((unint64_t)a1 + v80) & ~v79;
  uint64_t v82 = ((unint64_t)v102 + v80) & ~v79;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v77 + 16))(v81, v82, v76);
  uint64_t v83 = *(void *)(v78 + 48) + 7;
  v84 = (void *)((v83 + v81) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v85 = (void **)((v83 + v82) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v86 = *v85;
  void *v84 = *v85;
  unint64_t v87 = ((unint64_t)v84 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v88 = (uint64_t *)(((unint64_t)v85 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v89 = v88[1];
  id v90 = v86;
  if ((v89 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v87 = *(_OWORD *)v88;
  }
  else
  {
    uint64_t v91 = *v88;
    sub_10001DF8C(*v88, v89);
    *(void *)unint64_t v87 = v91;
    *(void *)(v87 + 8) = v89;
  }
  uint64_t v92 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v92 + 16))((v87 + *(unsigned __int8 *)(v92 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80), ((unint64_t)v88 + *(unsigned __int8 *)(v92 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
  return a1;
}

void *sub_10001F170(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  unsigned int v12 = v11 - 1;
  if (!v11) {
    unsigned int v12 = 0;
  }
  if (v7 <= v12) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = v7;
  }
  if (v13 <= 0x7FFFFFFE) {
    int v14 = 2147483646;
  }
  else {
    int v14 = v13;
  }
  uint64_t v213 = v5;
  uint64_t v15 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = ~v15;
  uint64_t v199 = *(void *)(v8 - 8);
  uint64_t v207 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v212 = ~v207;
  size_t v209 = *(void *)(v199 + 64);
  size_t v204 = *(void *)(v5 + 64);
  if (v7 != v14)
  {
    int v205 = v6;
    if (v6) {
      size_t v24 = *(void *)(v5 + 64);
    }
    else {
      size_t v24 = *(void *)(v5 + 64) + 1;
    }
    size_t v25 = v24 + v15;
    size_t v26 = v24 + 7;
    uint64_t v27 = v15 + 8;
    unint64_t v28 = (((v24
           + v15
           + ((v24
             + v15
             + ((v15
               + 8
               + ((((v24 + 7 + (((unint64_t)a1 + v24 + v15) & v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v16)) & v16)
         + v24) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v18 = a1;
    if (v13 > 0x7FFFFFFE)
    {
      uint64_t v6 = *(unsigned int *)(v10 + 84);
      uint64_t v20 = v8;
      if (v11 >= 2)
      {
        uint64_t v30 = (v24 + v207 + ((v15 + v28 + 24) & v16)) & v212;
        v195 = v18;
        uint64_t v31 = v15;
        uint64_t v32 = *(unsigned int *)(v10 + 84);
        uint64_t v33 = v27;
        unsigned int v34 = sub_1000082E8(v30, v11, v9);
        uint64_t v27 = v33;
        uint64_t v6 = v32;
        uint64_t v15 = v31;
        uint64_t v18 = v195;
        size_t v26 = v24 + 7;
        uint64_t v20 = v9;
        if (v34 >= 2) {
          goto LABEL_33;
        }
      }
    }
    else
    {
      unint64_t v29 = *(void *)(v28 + 16);
      if (v29 >= 0xFFFFFFFF) {
        LODWORD(v29) = -1;
      }
      uint64_t v20 = v8;
      uint64_t v6 = *(unsigned int *)(v10 + 84);
      if ((v29 + 1) >= 2)
      {
LABEL_33:
        unint64_t v37 = (((v25
               + ((v25
                 + ((v27 + ((((v26 + ((v24 + a2 + v15) & v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v16)) & v16)
             + v24) & 0xFFFFFFFFFFFFFFF8;
        if (v13 > 0x7FFFFFFE)
        {
          uint64_t v19 = (const void *)a2;
          if (v6 >= 2)
          {
            uint64_t v56 = (v24 + v207 + ((v15 + v37 + 24) & v16)) & v212;
            uint64_t v57 = v6;
            uint64_t v58 = v20;
            size_t v59 = v26;
            v196 = v18;
            uint64_t v60 = v15;
            int v61 = v6;
            uint64_t v6 = v27;
            unsigned int v62 = sub_1000082E8(v56, v57, v58);
            uint64_t v27 = v6;
            LODWORD(v6) = v61;
            uint64_t v15 = v60;
            uint64_t v18 = v196;
            size_t v26 = v59;
            uint64_t v20 = v9;
            if (v62 > 1) {
              goto LABEL_84;
            }
          }
        }
        else
        {
          unint64_t v38 = *(void *)(v37 + 16);
          if (v38 >= 0xFFFFFFFF) {
            LODWORD(v38) = -1;
          }
          uint64_t v19 = (const void *)a2;
          if ((v38 + 1) >= 2) {
            goto LABEL_84;
          }
        }
        goto LABEL_79;
      }
    }
    unint64_t v35 = (((v25
           + ((v25
             + ((v27 + ((((v26 + ((v24 + a2 + v15) & v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v16)) & v16)
         + v24) & 0xFFFFFFFFFFFFFFF8;
    if (v13 > 0x7FFFFFFE)
    {
      uint64_t v19 = (const void *)a2;
      LODWORD(v21) = v205;
      if (v6 >= 2
        && sub_1000082E8((v24 + v207 + ((v15 + v35 + 24) & v16)) & v212, v6, v20) > 1)
      {
        goto LABEL_49;
      }
    }
    else
    {
      unint64_t v36 = *(void *)(v35 + 16);
      if (v36 >= 0xFFFFFFFF) {
        LODWORD(v36) = -1;
      }
      uint64_t v19 = (const void *)a2;
      LODWORD(v21) = v205;
      if ((v36 + 1) >= 2) {
        goto LABEL_49;
      }
    }
LABEL_40:
    int v39 = sub_1000082E8((uint64_t)v18, 1, v4);
    int v40 = sub_1000082E8((uint64_t)v19, 1, v4);
    if (v39)
    {
      if (!v40)
      {
        (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v18, v19, v4);
        sub_1000082C0((uint64_t)v18, 0, 1, v4);
LABEL_88:
        size_t v24 = v204;
        goto LABEL_89;
      }
    }
    else
    {
      if (!v40)
      {
        (*(void (**)(void *, const void *, uint64_t))(v213 + 24))(v18, v19, v4);
        goto LABEL_88;
      }
      (*(void (**)(void *, uint64_t))(v213 + 8))(v18, v4);
    }
    size_t v24 = v204;
    if (v21) {
      size_t v41 = v204;
    }
    else {
      size_t v41 = v204 + 1;
    }
    memcpy(v18, v19, v41);
LABEL_89:
    if (!v21) {
      ++v24;
    }
    v197 = v18;
    uint64_t v68 = (void *)(((unint64_t)v18 + v15 + v24) & v16);
    uint64_t v69 = (const void *)(((unint64_t)v19 + v15 + v24) & v16);
    int v70 = sub_1000082E8((uint64_t)v68, 1, v4);
    int v71 = sub_1000082E8((uint64_t)v69, 1, v4);
    if (v70)
    {
      if (!v71)
      {
        (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v68, v69, v4);
        sub_1000082C0((uint64_t)v68, 0, 1, v4);
        goto LABEL_97;
      }
    }
    else
    {
      if (!v71)
      {
        (*(void (**)(void *, const void *, uint64_t))(v213 + 24))(v68, v69, v4);
LABEL_97:
        size_t v202 = v24 + 7;
        uint64_t v72 = (void *)(((unint64_t)v69 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v73 = (void *)(((unint64_t)v68 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v73 = *v72;
        uint64_t v74 = (void *)(((unint64_t)v73 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v75 = (void *)(((unint64_t)v72 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v74 = *v75;
        uint64_t v76 = (void *)(((unint64_t)v74 + v15 + 8) & v16);
        uint64_t v201 = v15 + 8;
        uint64_t v77 = (const void *)(((unint64_t)v75 + v15 + 8) & v16);
        int v78 = sub_1000082E8((uint64_t)v76, 1, v4);
        int v79 = sub_1000082E8((uint64_t)v77, 1, v4);
        if (v78)
        {
          if (!v79)
          {
            (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v76, v77, v4);
            sub_1000082C0((uint64_t)v76, 0, 1, v4);
            goto LABEL_103;
          }
        }
        else
        {
          if (!v79)
          {
            (*(void (**)(void *, const void *, uint64_t))(v213 + 24))(v76, v77, v4);
LABEL_103:
            size_t v25 = v24 + v15;
            uint64_t v80 = (void *)(((unint64_t)v76 + v24 + v15) & v16);
            unint64_t v81 = (const void *)(((unint64_t)v77 + v24 + v15) & v16);
            int v82 = sub_1000082E8((uint64_t)v80, 1, v4);
            int v83 = sub_1000082E8((uint64_t)v81, 1, v4);
            if (v82)
            {
              if (!v83)
              {
                (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v80, v81, v4);
                sub_1000082C0((uint64_t)v80, 0, 1, v4);
                goto LABEL_109;
              }
            }
            else
            {
              if (!v83)
              {
                (*(void (**)(void *, const void *, uint64_t))(v213 + 24))(v80, v81, v4);
LABEL_109:
                v84 = (unsigned char *)(((unint64_t)v80 + v25) & v16);
                uint64_t v85 = (unsigned char *)(((unint64_t)v81 + v25) & v16);
                int v86 = sub_1000082E8((uint64_t)v84, 1, v4);
                int v87 = sub_1000082E8((uint64_t)v85, 1, v4);
                if (v86)
                {
                  if (!v87)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v213 + 16))(v84, v85, v4);
                    sub_1000082C0((uint64_t)v84, 0, 1, v4);
                    goto LABEL_115;
                  }
                }
                else
                {
                  if (!v87)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v213 + 24))(v84, v85, v4);
LABEL_115:
                    unint64_t v88 = (unint64_t)&v85[v24];
                    v84[v24] = v85[v24];
                    unint64_t v89 = (unint64_t)&v84[v24] & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v90 = v88 & 0xFFFFFFFFFFFFFFF8;
                    *(void *)(v89 + 8) = *(void *)((v88 & 0xFFFFFFFFFFFFFFF8) + 8);
                    *(void *)(v89 + 16) = *(void *)((v88 & 0xFFFFFFFFFFFFFFF8) + 16);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    uint64_t v91 = (void *)((v15 + 24 + v89) & v16);
                    uint64_t v206 = v15 + 24;
                    uint64_t v92 = (const void *)((v15 + 24 + v90) & v16);
                    LODWORD(v90) = sub_1000082E8((uint64_t)v91, 1, v4);
                    int v93 = sub_1000082E8((uint64_t)v92, 1, v4);
                    if (v90)
                    {
                      if (!v93)
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v91, v92, v4);
                        sub_1000082C0((uint64_t)v91, 0, 1, v4);
                        goto LABEL_121;
                      }
                    }
                    else
                    {
                      if (!v93)
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v213 + 24))(v91, v92, v4);
LABEL_121:
                        uint64_t v94 = (void *)(((unint64_t)v91 + v24 + v207) & v212);
                        size_t v208 = v24 + v207;
                        uint64_t v95 = (const void *)(((unint64_t)v92 + v208) & v212);
                        int v96 = sub_1000082E8((uint64_t)v94, 1, v20);
                        int v97 = sub_1000082E8((uint64_t)v95, 1, v20);
                        if (v96)
                        {
                          if (!v97)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v199 + 16))(v94, v95, v20);
                            sub_1000082C0((uint64_t)v94, 0, 1, v20);
LABEL_136:
                            uint64_t v18 = v197;
                            int v99 = v6;
                            size_t v100 = v209;
                            goto LABEL_137;
                          }
                        }
                        else
                        {
                          if (!v97)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v199 + 24))(v94, v95, v20);
                            goto LABEL_136;
                          }
                          (*(void (**)(void *, uint64_t))(v199 + 8))(v94, v20);
                        }
                        BOOL v98 = v6 == 0;
                        int v99 = v6;
                        size_t v100 = v209;
                        if (v98) {
                          size_t v101 = v209 + 1;
                        }
                        else {
                          size_t v101 = v209;
                        }
                        memcpy(v94, v95, v101);
                        uint64_t v18 = v197;
LABEL_137:
                        BOOL v200 = v99 == 0;
                        if (v99) {
                          size_t v102 = v100;
                        }
                        else {
                          size_t v102 = v100 + 1;
                        }
                        uint64_t v103 = v102 + v15;
                        unsigned int v104 = (void *)(((unint64_t)v94 + v103) & v16);
                        BOOL v105 = (const void *)(((unint64_t)v95 + v103) & v16);
                        int v106 = sub_1000082E8((uint64_t)v104, 1, v4);
                        int v107 = sub_1000082E8((uint64_t)v105, 1, v4);
                        if (v106)
                        {
                          uint64_t v19 = (const void *)a2;
                          if (!v107)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v104, v105, v4);
                            sub_1000082C0((uint64_t)v104, 0, 1, v4);
                            goto LABEL_146;
                          }
                        }
                        else
                        {
                          uint64_t v19 = (const void *)a2;
                          if (!v107)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v213 + 24))(v104, v105, v4);
LABEL_146:
                            size_t v108 = (void *)(((unint64_t)v104 + v25) & v16);
                            uint64_t v109 = (const void *)(((unint64_t)v105 + v25) & v16);
                            int v110 = sub_1000082E8((uint64_t)v108, 1, v4);
                            int v111 = sub_1000082E8((uint64_t)v109, 1, v4);
                            if (v110)
                            {
                              if (!v111)
                              {
                                (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v108, v109, v4);
                                sub_1000082C0((uint64_t)v108, 0, 1, v4);
                                goto LABEL_152;
                              }
                            }
                            else
                            {
                              if (!v111)
                              {
                                (*(void (**)(void *, const void *, uint64_t))(v213 + 24))(v108, v109, v4);
LABEL_152:
                                v112 = (void *)(((unint64_t)v108 + v25) & v16);
                                v113 = (const void *)(((unint64_t)v109 + v25) & v16);
                                int v114 = sub_1000082E8((uint64_t)v112, 1, v4);
                                int v115 = sub_1000082E8((uint64_t)v113, 1, v4);
                                if (v114)
                                {
                                  if (!v115)
                                  {
                                    (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v112, v113, v4);
                                    sub_1000082C0((uint64_t)v112, 0, 1, v4);
LABEL_158:
                                    uint64_t v51 = a3;
                                    unint64_t v116 = ((unint64_t)v112 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
                                    unint64_t v117 = ((unint64_t)v113 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
                                    uint64_t v118 = *(void *)v117;
                                    *(unsigned char *)(v116 + 8) = *(unsigned char *)(v117 + 8);
                                    *(void *)unint64_t v116 = v118;
                                    v119 = (void *)(((unint64_t)v112 + v24 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    v120 = (void *)(((unint64_t)v113 + v24 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    void *v119 = *v120;
                                    v119[1] = v120[1];
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    v121 = (void *)(((unint64_t)v119 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    v122 = (void *)(((unint64_t)v120 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    void *v121 = *v122;
                                    v121[1] = v122[1];
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    v123 = (void *)(((unint64_t)v121 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    v124 = (void *)(((unint64_t)v122 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    void *v123 = *v124;
                                    v123[1] = v124[1];
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    v125 = (void *)(((unint64_t)v123 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    v126 = (void *)(((unint64_t)v124 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    void *v125 = *v126;
                                    v125[1] = v126[1];
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    v127 = (void *)(((unint64_t)v125 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    v128 = (void *)(((unint64_t)v126 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    void *v127 = *v128;
                                    v127[1] = v128[1];
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
LABEL_159:
                                    size_t v55 = v209;
                                    uint64_t v53 = v201;
                                    size_t v54 = v202;
LABEL_160:
                                    BOOL v67 = v200;
LABEL_161:
                                    size_t v129 = v25;
                                    goto LABEL_162;
                                  }
                                }
                                else
                                {
                                  if (!v115)
                                  {
                                    (*(void (**)(void *, const void *, uint64_t))(v213 + 24))(v112, v113, v4);
                                    goto LABEL_158;
                                  }
                                  (*(void (**)(void *, uint64_t))(v213 + 8))(v112, v4);
                                }
                                memcpy(v112, v113, v24);
                                goto LABEL_158;
                              }
                              (*(void (**)(void *, uint64_t))(v213 + 8))(v108, v4);
                            }
                            memcpy(v108, v109, v24);
                            goto LABEL_152;
                          }
                          (*(void (**)(void *, uint64_t))(v213 + 8))(v104, v4);
                        }
                        memcpy(v104, v105, v24);
                        goto LABEL_146;
                      }
                      (*(void (**)(void *, uint64_t))(v213 + 8))(v91, v4);
                    }
                    memcpy(v91, v92, v24);
                    goto LABEL_121;
                  }
                  (*(void (**)(unsigned char *, uint64_t))(v213 + 8))(v84, v4);
                }
                memcpy(v84, v85, v24);
                goto LABEL_115;
              }
              (*(void (**)(void *, uint64_t))(v213 + 8))(v80, v4);
            }
            memcpy(v80, v81, v24);
            goto LABEL_109;
          }
          (*(void (**)(void *, uint64_t))(v213 + 8))(v76, v4);
        }
        memcpy(v76, v77, v24);
        goto LABEL_103;
      }
      (*(void (**)(void *, uint64_t))(v213 + 8))(v68, v4);
    }
    memcpy(v68, v69, v24);
    goto LABEL_97;
  }
  BOOL v17 = v6 >= 2;
  uint64_t v18 = a1;
  uint64_t v19 = (const void *)a2;
  uint64_t v20 = v8;
  uint64_t v21 = v6;
  LODWORD(v6) = *(_DWORD *)(v10 + 84);
  if (!v17) {
    goto LABEL_40;
  }
  unsigned int v22 = sub_1000082E8((uint64_t)v18, v21, v4);
  unsigned int v23 = sub_1000082E8(a2, v21, v4);
  if (v22 < 2)
  {
    if (v23 < 2) {
      goto LABEL_40;
    }
LABEL_49:
    if (!sub_1000082E8((uint64_t)v18, 1, v4)) {
      (*(void (**)(void *, uint64_t))(v213 + 8))(v18, v4);
    }
    if (v21) {
      size_t v24 = v204;
    }
    else {
      size_t v24 = v204 + 1;
    }
    uint64_t v42 = ((unint64_t)v18 + v15 + v24) & v16;
    if (!sub_1000082E8(v42, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v213 + 8))(v42, v4);
    }
    unint64_t v43 = (v15 + 8 + ((((v24 + 7 + v42) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16;
    if (!sub_1000082E8(v43, 1, v4)) {
      (*(void (**)(unint64_t, uint64_t))(v213 + 8))(v43, v4);
    }
    size_t v25 = v24 + v15;
    uint64_t v44 = (v24 + v15 + v43) & v16;
    if (!sub_1000082E8(v44, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v213 + 8))(v44, v4);
    }
    uint64_t v45 = (v25 + v44) & v16;
    if (!sub_1000082E8(v45, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v213 + 8))(v45, v4);
    }
    swift_bridgeObjectRelease();
    uint64_t v206 = v15 + 24;
    unint64_t v46 = (v15 + 24 + ((v45 + v24) & 0xFFFFFFFFFFFFFFF8)) & v16;
    if (!sub_1000082E8(v46, 1, v4)) {
      (*(void (**)(unint64_t, uint64_t))(v213 + 8))(v46, v4);
    }
    size_t v208 = v24 + v207;
    uint64_t v47 = (v208 + v46) & v212;
    if (!sub_1000082E8(v47, 1, v20)) {
      (*(void (**)(uint64_t, uint64_t))(v199 + 8))(v47, v20);
    }
    BOOL v200 = v6 == 0;
    size_t v48 = v209;
    if (!v6) {
      size_t v48 = v209 + 1;
    }
    __srca = (void *)(v48 + v15);
    uint64_t v49 = (v48 + v15 + v47) & v16;
    if (!sub_1000082E8(v49, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v213 + 8))(v49, v4);
    }
    uint64_t v50 = (v25 + v49) & v16;
    uint64_t v51 = a3;
    if (!sub_1000082E8(v50, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v213 + 8))(v50, v4);
    }
    uint64_t v52 = (v25 + v50) & v16;
    if (!sub_1000082E8(v52, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v213 + 8))(v52, v4);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v53 = v15 + 8;
    memcpy(v18, v19, ((((((((((v24+ 23+ ((v25+ ((v25+ (((unint64_t)__srca+ ((v208+ ((v206+ ((((v25+ ((v25+ ((v15+ 8+ ((((v24 + 7 + (v25 & v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v16)) & v16)+ v24) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v212)) & v16)) & v16)) & v16)) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)
    + 16);
    size_t v54 = v24 + 7;
    size_t v55 = v209;
    goto LABEL_160;
  }
  int v205 = v21;
  if (v23 >= 2)
  {
    size_t v24 = v204;
    size_t v25 = v204 + v15;
    size_t v26 = v204 + 7;
    uint64_t v27 = v15 + 8;
LABEL_84:
    BOOL v64 = v6 == 0;
    uint64_t v206 = v15 + 24;
    size_t v55 = v209;
    size_t v208 = v24 + v207;
    size_t v65 = v209 + v15;
    if (!v6) {
      ++v65;
    }
    size_t v66 = v26;
    uint64_t v53 = v27;
    memcpy(v18, v19, ((((((((((v24+ ((v25+ ((v25+ ((v65+ ((v208+ ((v15+ 24+ ((((v25+ ((v25+ ((v27 + ((((v26 + (v25 & v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v16)) & v16)+ v24) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v212)) & v16)) & v16)) & v16)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    BOOL v67 = v64;
    size_t v54 = v66;
    uint64_t v51 = a3;
    goto LABEL_161;
  }
LABEL_79:
  if (sub_1000082E8((uint64_t)v19, 1, v4))
  {
    int v63 = v205;
    if (v205) {
      size_t v24 = v204;
    }
    else {
      size_t v24 = v204 + 1;
    }
    memcpy(v18, v19, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v18, v19, v4);
    sub_1000082C0((uint64_t)v18, 0, 1, v4);
    int v63 = v205;
    if (v205) {
      size_t v24 = v204;
    }
    else {
      size_t v24 = v204 + 1;
    }
  }
  v155 = v19;
  v198 = v18;
  v156 = (void *)(((unint64_t)v18 + v15 + v24) & v16);
  v157 = (const void *)(((unint64_t)v155 + v15 + v24) & v16);
  if (sub_1000082E8((uint64_t)v157, 1, v4))
  {
    memcpy(v156, v157, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v156, v157, v4);
    sub_1000082C0((uint64_t)v156, 0, 1, v4);
  }
  size_t v202 = v24 + 7;
  v158 = (void *)(((unint64_t)v157 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  v159 = (void *)(((unint64_t)v156 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  void *v159 = *v158;
  v160 = (void *)(((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8);
  v161 = (void *)(((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v160 = *v161;
  v162 = (void *)(((unint64_t)v160 + v15 + 8) & v16);
  uint64_t v201 = v15 + 8;
  v163 = (const void *)(((unint64_t)v161 + v15 + 8) & v16);
  if (sub_1000082E8((uint64_t)v163, 1, v4))
  {
    memcpy(v162, v163, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v162, v163, v4);
    sub_1000082C0((uint64_t)v162, 0, 1, v4);
  }
  size_t v25 = v24 + v15;
  v164 = (void *)(((unint64_t)v162 + v24 + v15) & v16);
  v165 = (const void *)(((unint64_t)v163 + v24 + v15) & v16);
  if (sub_1000082E8((uint64_t)v165, 1, v4))
  {
    memcpy(v164, v165, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v164, v165, v4);
    sub_1000082C0((uint64_t)v164, 0, 1, v4);
  }
  v166 = (void *)(((unint64_t)v164 + v25) & v16);
  v167 = (const void *)(((unint64_t)v165 + v25) & v16);
  if (sub_1000082E8((uint64_t)v167, 1, v4))
  {
    memcpy(v166, v167, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v166, v167, v4);
    sub_1000082C0((uint64_t)v166, 0, 1, v4);
  }
  *((unsigned char *)v166 + v24) = *((unsigned char *)v167 + v24);
  unint64_t v168 = ((unint64_t)v166 + v24) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v169 = ((unint64_t)v167 + v24) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v168 + 8) = *(void *)(v169 + 8);
  *(void *)(v168 + 16) = *(void *)(v169 + 16);
  v170 = (void *)((v15 + 24 + v168) & v16);
  uint64_t v206 = v15 + 24;
  v171 = (const void *)((v15 + 24 + v169) & v16);
  swift_bridgeObjectRetain();
  if (sub_1000082E8((uint64_t)v171, 1, v4))
  {
    memcpy(v170, v171, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v170, v171, v4);
    sub_1000082C0((uint64_t)v170, 0, 1, v4);
  }
  v172 = (void *)(((unint64_t)v170 + v24 + v207) & v212);
  size_t v208 = v24 + v207;
  v173 = (const void *)(((unint64_t)v171 + v208) & v212);
  if (sub_1000082E8((uint64_t)v173, 1, v20))
  {
    BOOL v200 = v6 == 0;
    if (v6) {
      size_t v174 = v209;
    }
    else {
      size_t v174 = v209 + 1;
    }
    memcpy(v172, v173, v174);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v199 + 16))(v172, v173, v20);
    sub_1000082C0((uint64_t)v172, 0, 1, v20);
    BOOL v200 = v6 == 0;
    if (v6) {
      size_t v174 = v209;
    }
    else {
      size_t v174 = v209 + 1;
    }
  }
  size_t v175 = v174 + v15;
  v176 = (void *)(((unint64_t)v172 + v174 + v15) & v16);
  v177 = (const void *)(((unint64_t)v173 + v175) & v16);
  if (sub_1000082E8((uint64_t)v177, 1, v4))
  {
    memcpy(v176, v177, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v176, v177, v4);
    sub_1000082C0((uint64_t)v176, 0, 1, v4);
  }
  uint64_t v18 = v198;
  v178 = (void *)(((unint64_t)v176 + v25) & v16);
  v179 = (const void *)(((unint64_t)v177 + v25) & v16);
  if (sub_1000082E8((uint64_t)v179, 1, v4))
  {
    memcpy(v178, v179, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v178, v179, v4);
    sub_1000082C0((uint64_t)v178, 0, 1, v4);
  }
  v180 = (void *)(((unint64_t)v178 + v25) & v16);
  v181 = (const void *)(((unint64_t)v179 + v25) & v16);
  if (sub_1000082E8((uint64_t)v181, 1, v4))
  {
    memcpy(v180, v181, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v213 + 16))(v180, v181, v4);
    sub_1000082C0((uint64_t)v180, 0, 1, v4);
  }
  unint64_t v182 = ((unint64_t)v180 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v183 = ((unint64_t)v181 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v184 = *(void *)v183;
  *(unsigned char *)(v182 + 8) = *(unsigned char *)(v183 + 8);
  *(void *)unint64_t v182 = v184;
  v185 = (void *)(((unint64_t)v180 + v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  v186 = (void *)(((unint64_t)v181 + v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v185 = *v186;
  v185[1] = v186[1];
  v187 = (void *)(((unint64_t)v185 + 23) & 0xFFFFFFFFFFFFFFF8);
  v188 = (void *)(((unint64_t)v186 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v187 = *v188;
  v187[1] = v188[1];
  v189 = (void *)(((unint64_t)v187 + 23) & 0xFFFFFFFFFFFFFFF8);
  v190 = (void *)(((unint64_t)v188 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v189 = *v190;
  v189[1] = v190[1];
  v191 = (void *)(((unint64_t)v189 + 23) & 0xFFFFFFFFFFFFFFF8);
  v192 = (void *)(((unint64_t)v190 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v191 = *v192;
  v191[1] = v192[1];
  v193 = (void *)(((unint64_t)v191 + 23) & 0xFFFFFFFFFFFFFFF8);
  v194 = (void *)(((unint64_t)v192 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v193 = *v194;
  v193[1] = v194[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v63)
  {
    uint64_t v51 = a3;
    uint64_t v19 = (const void *)a2;
    goto LABEL_159;
  }
  uint64_t v51 = a3;
  size_t v129 = v204 + v15;
  size_t v55 = v209;
  uint64_t v19 = (const void *)a2;
  uint64_t v53 = v15 + 8;
  size_t v54 = v24 + 7;
  BOOL v67 = v200;
LABEL_162:
  unint64_t v130 = (((((((((v24
                + ((v25
                  + ((v25
                    + ((v55
                      + v15
                      + v67
                      + ((v208
                        + ((v206
                          + ((((v25
                              + ((v25
                                + ((v53 + ((((v54 + (v129 & v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v16)) & v16)
                            + v24) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v212)) & v16)) & v16)) & v16)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v131 = type metadata accessor for URLRequest();
  uint64_t v132 = *(void *)(v131 - 8);
  uint64_t v133 = v132 + 24;
  uint64_t v134 = *(unsigned __int8 *)(v132 + 80);
  uint64_t v135 = v130 + v134 + 16;
  unint64_t v136 = ((unint64_t)v18 + v135) & ~v134;
  unint64_t v137 = ((unint64_t)v19 + v135) & ~v134;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v132 + 24))(v136, v137, v131);
  uint64_t v138 = *(void *)(v133 + 40) + 7;
  v139 = (void **)((v138 + v136) & 0xFFFFFFFFFFFFFFF8);
  v140 = (void **)((v138 + v137) & 0xFFFFFFFFFFFFFFF8);
  v141 = *v140;
  v142 = *v139;
  *v139 = *v140;
  id v143 = v141;

  v144 = (uint64_t *)(((unint64_t)v139 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v145 = ((unint64_t)v140 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v146 = v144[1];
  uint64_t v147 = *(void *)(v145 + 8);
  uint64_t v148 = v147 & 0x3000000000000000;
  if ((v146 & 0x3000000000000000) == 0)
  {
    if (!v148)
    {
      uint64_t v152 = *(void *)v145;
      sub_10001DF8C(*(void *)v145, *(void *)(v145 + 8));
      uint64_t v153 = *v144;
      unint64_t v154 = v144[1];
      uint64_t *v144 = v152;
      v144[1] = v147;
      sub_10000835C(v153, v154);
      goto LABEL_168;
    }
    sub_10000835C(*v144, v146);
    goto LABEL_167;
  }
  if (v148)
  {
LABEL_167:
    *(_OWORD *)v144 = *(_OWORD *)v145;
    goto LABEL_168;
  }
  uint64_t v149 = *(void *)v145;
  sub_10001DF8C(*(void *)v145, *(void *)(v145 + 8));
  uint64_t *v144 = v149;
  v144[1] = v147;
LABEL_168:
  uint64_t v150 = *(void *)(*(void *)(v51 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v150 + 24))(((unint64_t)v144 + *(unsigned __int8 *)(v150 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80), (v145 + *(unsigned __int8 *)(v150 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80));
  return v18;
}

void *sub_100020C04(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7) {
    unsigned int v8 = v7 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  unsigned int v12 = v11 - 1;
  if (!v11) {
    unsigned int v12 = 0;
  }
  if (v8 > v12) {
    unsigned int v12 = v8;
  }
  if (v12 <= 0x7FFFFFFE) {
    int v13 = 2147483646;
  }
  else {
    int v13 = v12;
  }
  uint64_t v103 = v6;
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = ~v14;
  uint64_t v93 = *(void *)(v9 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v102 = ~v16;
  size_t v101 = *(void *)(v93 + 64);
  uint64_t v97 = a2;
  unsigned int v100 = v7;
  size_t v99 = *(void *)(v6 + 64);
  if (v8 == v13)
  {
    BOOL v17 = (const void *)a2;
    if (v7 >= 2)
    {
      uint64_t v18 = *(unsigned __int8 *)(v10 + 80);
      unsigned int v19 = sub_1000082E8(a2, v7, v5);
      uint64_t v16 = v18;
      if (v19 >= 2)
      {
        size_t v20 = v99;
        size_t v21 = v99 + v14;
        size_t v22 = v99 + 7;
        uint64_t v23 = v14 + 8;
LABEL_30:
        BOOL v30 = v11 == 0;
        BOOL v31 = v11 == 0;
        uint64_t v32 = v14 + 24;
        size_t v33 = v20 + v16;
        size_t v34 = v101 + v14;
        if (v30) {
          ++v34;
        }
        unint64_t v35 = v17;
        size_t v36 = v22;
        uint64_t v37 = v23;
        memcpy(a1, v35, ((((((((((v20+ ((v21+ ((v21+ ((v34+ ((v20+ v16+ ((v14+ 24+ ((((v21+ ((v21+ ((v23 + ((((v22 + (v21 & v15)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v15)) & v15)) & v15)+ v20) & 0xFFFFFFFFFFFFFFF8)) & v15)) & v102)) & v15)) & v15)) & v15)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)
        + 16);
        uint64_t v38 = v37;
        size_t v39 = v36;
        size_t v40 = v21;
        goto LABEL_72;
      }
    }
  }
  else
  {
    if (v7) {
      size_t v20 = *(void *)(v6 + 64);
    }
    else {
      size_t v20 = *(void *)(v6 + 64) + 1;
    }
    size_t v21 = v20 + v14;
    size_t v22 = v20 + 7;
    uint64_t v23 = v14 + 8;
    unint64_t v24 = (((v20
           + v14
           + ((v20
             + v14
             + ((v14 + 8 + ((((v20 + 7 + ((v20 + v14 + a2) & v15)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v15)) & v15)) & v15)
         + v20) & 0xFFFFFFFFFFFFFFF8;
    BOOL v17 = (const void *)a2;
    if (v12 > 0x7FFFFFFE)
    {
      if (v11 >= 2)
      {
        uint64_t v26 = v9;
        uint64_t v96 = v9;
        uint64_t v27 = *(unsigned __int8 *)(v10 + 80);
        unsigned int v28 = sub_1000082E8((v20 + v16 + ((v14 + v24 + 24) & v15)) & v102, v11, v26);
        uint64_t v16 = v27;
        uint64_t v23 = v14 + 8;
        uint64_t v9 = v96;
        size_t v22 = v20 + 7;
        if (v28 > 1) {
          goto LABEL_30;
        }
      }
    }
    else
    {
      unint64_t v25 = *(void *)(v24 + 16);
      if (v25 >= 0xFFFFFFFF) {
        LODWORD(v25) = -1;
      }
      if ((v25 + 1) >= 2) {
        goto LABEL_30;
      }
    }
  }
  uint64_t v29 = v16;
  if (sub_1000082E8((uint64_t)v17, 1, v5))
  {
    if (v100) {
      size_t v20 = v99;
    }
    else {
      size_t v20 = v99 + 1;
    }
    memcpy(a1, v17, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v103 + 32))(a1, v17, v5);
    sub_1000082C0((uint64_t)a1, 0, 1, v5);
    if (v100) {
      size_t v20 = v99;
    }
    else {
      size_t v20 = v99 + 1;
    }
  }
  uint64_t v95 = a1;
  size_t v41 = (void *)(((unint64_t)a1 + v14 + v20) & v15);
  uint64_t v42 = (const void *)(((unint64_t)v17 + v14 + v20) & v15);
  if (sub_1000082E8((uint64_t)v42, 1, v5))
  {
    memcpy(v41, v42, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v103 + 32))(v41, v42, v5);
    sub_1000082C0((uint64_t)v41, 0, 1, v5);
  }
  unint64_t v43 = (void *)(((unint64_t)v42 + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v44 = (void *)(((unint64_t)v41 + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v44 = *v43;
  uint64_t v45 = (void *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v46 = (void *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v45 = *v46;
  uint64_t v47 = (void *)(((unint64_t)v45 + v14 + 8) & v15);
  size_t v48 = (const void *)(((unint64_t)v46 + v14 + 8) & v15);
  if (sub_1000082E8((uint64_t)v48, 1, v5))
  {
    memcpy(v47, v48, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v103 + 32))(v47, v48, v5);
    sub_1000082C0((uint64_t)v47, 0, 1, v5);
  }
  size_t v40 = v20 + v14;
  uint64_t v49 = (void *)(((unint64_t)v47 + v20 + v14) & v15);
  uint64_t v50 = (const void *)(((unint64_t)v48 + v20 + v14) & v15);
  if (sub_1000082E8((uint64_t)v50, 1, v5))
  {
    memcpy(v49, v50, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v103 + 32))(v49, v50, v5);
    sub_1000082C0((uint64_t)v49, 0, 1, v5);
  }
  uint64_t v51 = (void *)(((unint64_t)v49 + v40) & v15);
  uint64_t v52 = (const void *)(((unint64_t)v50 + v40) & v15);
  if (sub_1000082E8((uint64_t)v52, 1, v5))
  {
    memcpy(v51, v52, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v103 + 32))(v51, v52, v5);
    sub_1000082C0((uint64_t)v51, 0, 1, v5);
  }
  *((unsigned char *)v51 + v20) = *((unsigned char *)v52 + v20);
  unint64_t v53 = ((unint64_t)v51 + v20) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = ((unint64_t)v52 + v20) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v53 + 8) = *(_OWORD *)(v54 + 8);
  size_t v55 = (void *)((v14 + 24 + v53) & v15);
  uint64_t v56 = (const void *)((v14 + 24 + v54) & v15);
  if (sub_1000082E8((uint64_t)v56, 1, v5))
  {
    memcpy(v55, v56, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v103 + 32))(v55, v56, v5);
    sub_1000082C0((uint64_t)v55, 0, 1, v5);
  }
  size_t v33 = v20 + v29;
  uint64_t v57 = (void *)(((unint64_t)v55 + v33) & v102);
  uint64_t v58 = (const void *)(((unint64_t)v56 + v33) & v102);
  if (sub_1000082E8((uint64_t)v58, 1, v9))
  {
    BOOL v94 = v11 == 0;
    if (v11) {
      size_t v59 = v101;
    }
    else {
      size_t v59 = v101 + 1;
    }
    memcpy(v57, v58, v59);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v93 + 32))(v57, v58, v9);
    sub_1000082C0((uint64_t)v57, 0, 1, v9);
    BOOL v94 = v11 == 0;
    if (v11) {
      size_t v59 = v101;
    }
    else {
      size_t v59 = v101 + 1;
    }
  }
  size_t v60 = v59 + v14;
  int v61 = (void *)(((unint64_t)v57 + v59 + v14) & v15);
  unsigned int v62 = (const void *)(((unint64_t)v58 + v60) & v15);
  if (sub_1000082E8((uint64_t)v62, 1, v5))
  {
    memcpy(v61, v62, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v103 + 32))(v61, v62, v5);
    sub_1000082C0((uint64_t)v61, 0, 1, v5);
  }
  a1 = v95;
  int v63 = (void *)(((unint64_t)v61 + v40) & v15);
  BOOL v64 = (const void *)(((unint64_t)v62 + v40) & v15);
  if (sub_1000082E8((uint64_t)v64, 1, v5))
  {
    memcpy(v63, v64, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v103 + 32))(v63, v64, v5);
    sub_1000082C0((uint64_t)v63, 0, 1, v5);
  }
  size_t v65 = (void *)(((unint64_t)v63 + v40) & v15);
  size_t v66 = (const void *)(((unint64_t)v64 + v40) & v15);
  if (sub_1000082E8((uint64_t)v66, 1, v5))
  {
    memcpy(v65, v66, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v103 + 32))(v65, v66, v5);
    sub_1000082C0((uint64_t)v65, 0, 1, v5);
  }
  uint64_t v38 = v14 + 8;
  size_t v39 = v20 + 7;
  unint64_t v67 = ((unint64_t)v65 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v68 = ((unint64_t)v66 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = *(void *)v68;
  *(unsigned char *)(v67 + 8) = *(unsigned char *)(v68 + 8);
  *(void *)unint64_t v67 = v69;
  int v70 = (_OWORD *)(((unint64_t)v65 + v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v71 = (_OWORD *)(((unint64_t)v66 + v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  *int v70 = *v71;
  uint64_t v72 = (_OWORD *)(((unint64_t)v70 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v73 = (_OWORD *)(((unint64_t)v71 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v72 = *v73;
  uint64_t v74 = (_OWORD *)(((unint64_t)v72 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v75 = (_OWORD *)(((unint64_t)v73 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v74 = *v75;
  uint64_t v76 = (_OWORD *)(((unint64_t)v74 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v77 = (_OWORD *)(((unint64_t)v75 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v76 = *v77;
  *(_OWORD *)(((unint64_t)v76 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v77 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (v100) {
    size_t v21 = v99 + v14;
  }
  else {
    size_t v21 = v20 + v14;
  }
  uint64_t v32 = v14 + 24;
  BOOL v31 = v94;
LABEL_72:
  unint64_t v78 = (((((((((v20
               + ((v40
                 + ((v40
                   + ((v101
                     + v14
                     + v31
                     + ((v33
                       + ((v32
                         + ((((v40
                             + ((v40
                               + ((v38 + ((((v39 + (v21 & v15)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v15)) & v15)) & v15)
                           + v20) & 0xFFFFFFFFFFFFFFF8)) & v15)) & v102)) & v15)) & v15)) & v15)
               + 23) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v79 = type metadata accessor for URLRequest();
  uint64_t v80 = *(void *)(v79 - 8);
  uint64_t v81 = v80 + 32;
  uint64_t v82 = *(unsigned __int8 *)(v80 + 80);
  uint64_t v83 = v78 + v82 + 16;
  unint64_t v84 = ((unint64_t)a1 + v83) & ~v82;
  uint64_t v85 = (v83 + v97) & ~v82;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v80 + 32))(v84, v85, v79);
  uint64_t v86 = *(void *)(v81 + 32) + 7;
  int v87 = (void *)((v86 + v84) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v88 = (void *)((v86 + v85) & 0xFFFFFFFFFFFFFFF8);
  void *v87 = *v88;
  unint64_t v89 = (_OWORD *)(((unint64_t)v87 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v90 = (_OWORD *)(((unint64_t)v88 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v89 = *v90;
  uint64_t v91 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v91 + 32))(((unint64_t)v89 + *(unsigned __int8 *)(v91 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80), ((unint64_t)v90 + *(unsigned __int8 *)(v91 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80));
  return a1;
}

void *sub_100021644(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  unsigned int v12 = v11 - 1;
  if (!v11) {
    unsigned int v12 = 0;
  }
  if (v7 <= v12) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = v7;
  }
  if (v13 <= 0x7FFFFFFE) {
    int v14 = 2147483646;
  }
  else {
    int v14 = v13;
  }
  uint64_t v205 = v5;
  uint64_t v15 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = ~v15;
  uint64_t v191 = *(void *)(v8 - 8);
  uint64_t v199 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v204 = ~v199;
  size_t v201 = *(void *)(v191 + 64);
  size_t v196 = *(void *)(v5 + 64);
  if (v7 != v14)
  {
    int v197 = v6;
    if (v6) {
      size_t v24 = *(void *)(v5 + 64);
    }
    else {
      size_t v24 = *(void *)(v5 + 64) + 1;
    }
    size_t v25 = v24 + v15;
    size_t v26 = v24 + 7;
    uint64_t v27 = v15 + 8;
    unint64_t v28 = (((v24
           + v15
           + ((v24
             + v15
             + ((v15
               + 8
               + ((((v24 + 7 + (((unint64_t)a1 + v24 + v15) & v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v16)) & v16)
         + v24) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v18 = a1;
    if (v13 > 0x7FFFFFFE)
    {
      uint64_t v6 = *(unsigned int *)(v10 + 84);
      uint64_t v20 = v8;
      if (v11 >= 2)
      {
        uint64_t v30 = (v24 + v199 + ((v15 + v28 + 24) & v16)) & v204;
        v187 = v18;
        uint64_t v31 = v15;
        uint64_t v32 = *(unsigned int *)(v10 + 84);
        uint64_t v33 = v27;
        unsigned int v34 = sub_1000082E8(v30, v11, v9);
        uint64_t v27 = v33;
        uint64_t v6 = v32;
        uint64_t v15 = v31;
        uint64_t v18 = v187;
        size_t v26 = v24 + 7;
        uint64_t v20 = v9;
        if (v34 >= 2) {
          goto LABEL_33;
        }
      }
    }
    else
    {
      unint64_t v29 = *(void *)(v28 + 16);
      if (v29 >= 0xFFFFFFFF) {
        LODWORD(v29) = -1;
      }
      uint64_t v20 = v8;
      uint64_t v6 = *(unsigned int *)(v10 + 84);
      if ((v29 + 1) >= 2)
      {
LABEL_33:
        unint64_t v37 = (((v25
               + ((v25
                 + ((v27 + ((((v26 + ((v24 + a2 + v15) & v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v16)) & v16)
             + v24) & 0xFFFFFFFFFFFFFFF8;
        if (v13 > 0x7FFFFFFE)
        {
          unsigned int v19 = (const void *)a2;
          if (v6 >= 2)
          {
            uint64_t v56 = (v24 + v199 + ((v15 + v37 + 24) & v16)) & v204;
            uint64_t v57 = v6;
            uint64_t v58 = v20;
            size_t v59 = v26;
            v188 = v18;
            uint64_t v60 = v15;
            int v61 = v6;
            uint64_t v6 = v27;
            unsigned int v62 = sub_1000082E8(v56, v57, v58);
            uint64_t v27 = v6;
            LODWORD(v6) = v61;
            uint64_t v15 = v60;
            uint64_t v18 = v188;
            size_t v26 = v59;
            uint64_t v20 = v9;
            if (v62 > 1) {
              goto LABEL_84;
            }
          }
        }
        else
        {
          unint64_t v38 = *(void *)(v37 + 16);
          if (v38 >= 0xFFFFFFFF) {
            LODWORD(v38) = -1;
          }
          unsigned int v19 = (const void *)a2;
          if ((v38 + 1) >= 2) {
            goto LABEL_84;
          }
        }
        goto LABEL_79;
      }
    }
    unint64_t v35 = (((v25
           + ((v25
             + ((v27 + ((((v26 + ((v24 + a2 + v15) & v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v16)) & v16)
         + v24) & 0xFFFFFFFFFFFFFFF8;
    if (v13 > 0x7FFFFFFE)
    {
      unsigned int v19 = (const void *)a2;
      LODWORD(v21) = v197;
      if (v6 >= 2
        && sub_1000082E8((v24 + v199 + ((v15 + v35 + 24) & v16)) & v204, v6, v20) > 1)
      {
        goto LABEL_49;
      }
    }
    else
    {
      unint64_t v36 = *(void *)(v35 + 16);
      if (v36 >= 0xFFFFFFFF) {
        LODWORD(v36) = -1;
      }
      unsigned int v19 = (const void *)a2;
      LODWORD(v21) = v197;
      if ((v36 + 1) >= 2) {
        goto LABEL_49;
      }
    }
LABEL_40:
    int v39 = sub_1000082E8((uint64_t)v18, 1, v4);
    int v40 = sub_1000082E8((uint64_t)v19, 1, v4);
    if (v39)
    {
      if (!v40)
      {
        (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v18, v19, v4);
        sub_1000082C0((uint64_t)v18, 0, 1, v4);
LABEL_88:
        size_t v24 = v196;
        goto LABEL_89;
      }
    }
    else
    {
      if (!v40)
      {
        (*(void (**)(void *, const void *, uint64_t))(v205 + 40))(v18, v19, v4);
        goto LABEL_88;
      }
      (*(void (**)(void *, uint64_t))(v205 + 8))(v18, v4);
    }
    size_t v24 = v196;
    if (v21) {
      size_t v41 = v196;
    }
    else {
      size_t v41 = v196 + 1;
    }
    memcpy(v18, v19, v41);
LABEL_89:
    if (!v21) {
      ++v24;
    }
    v189 = v18;
    unint64_t v68 = (void *)(((unint64_t)v18 + v15 + v24) & v16);
    uint64_t v69 = (const void *)(((unint64_t)v19 + v15 + v24) & v16);
    int v70 = sub_1000082E8((uint64_t)v68, 1, v4);
    int v71 = sub_1000082E8((uint64_t)v69, 1, v4);
    if (v70)
    {
      if (!v71)
      {
        (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v68, v69, v4);
        sub_1000082C0((uint64_t)v68, 0, 1, v4);
        goto LABEL_97;
      }
    }
    else
    {
      if (!v71)
      {
        (*(void (**)(void *, const void *, uint64_t))(v205 + 40))(v68, v69, v4);
LABEL_97:
        size_t v194 = v24 + 7;
        uint64_t v72 = (void *)(((unint64_t)v69 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v73 = (void *)(((unint64_t)v68 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v73 = *v72;
        uint64_t v74 = (void *)(((unint64_t)v73 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v75 = (void *)(((unint64_t)v72 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v74 = *v75;
        uint64_t v76 = (void *)(((unint64_t)v74 + v15 + 8) & v16);
        uint64_t v193 = v15 + 8;
        uint64_t v77 = (const void *)(((unint64_t)v75 + v15 + 8) & v16);
        int v78 = sub_1000082E8((uint64_t)v76, 1, v4);
        int v79 = sub_1000082E8((uint64_t)v77, 1, v4);
        if (v78)
        {
          if (!v79)
          {
            (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v76, v77, v4);
            sub_1000082C0((uint64_t)v76, 0, 1, v4);
            goto LABEL_103;
          }
        }
        else
        {
          if (!v79)
          {
            (*(void (**)(void *, const void *, uint64_t))(v205 + 40))(v76, v77, v4);
LABEL_103:
            size_t v25 = v24 + v15;
            uint64_t v80 = (void *)(((unint64_t)v76 + v24 + v15) & v16);
            uint64_t v81 = (const void *)(((unint64_t)v77 + v24 + v15) & v16);
            int v82 = sub_1000082E8((uint64_t)v80, 1, v4);
            int v83 = sub_1000082E8((uint64_t)v81, 1, v4);
            if (v82)
            {
              if (!v83)
              {
                (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v80, v81, v4);
                sub_1000082C0((uint64_t)v80, 0, 1, v4);
                goto LABEL_109;
              }
            }
            else
            {
              if (!v83)
              {
                (*(void (**)(void *, const void *, uint64_t))(v205 + 40))(v80, v81, v4);
LABEL_109:
                unint64_t v84 = (unsigned char *)(((unint64_t)v80 + v25) & v16);
                uint64_t v85 = (unsigned char *)(((unint64_t)v81 + v25) & v16);
                int v86 = sub_1000082E8((uint64_t)v84, 1, v4);
                int v87 = sub_1000082E8((uint64_t)v85, 1, v4);
                if (v86)
                {
                  if (!v87)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v205 + 32))(v84, v85, v4);
                    sub_1000082C0((uint64_t)v84, 0, 1, v4);
                    goto LABEL_115;
                  }
                }
                else
                {
                  if (!v87)
                  {
                    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v205 + 40))(v84, v85, v4);
LABEL_115:
                    v84[v24] = v85[v24];
                    unint64_t v88 = (unint64_t)&v84[v24] & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v89 = (unint64_t)&v85[v24] & 0xFFFFFFFFFFFFFFF8;
                    *(void *)(v88 + 8) = *(void *)(v89 + 8);
                    *(void *)(v88 + 16) = *(void *)(v89 + 16);
                    swift_bridgeObjectRelease();
                    unint64_t v90 = (void *)((v15 + 24 + v88) & v16);
                    uint64_t v198 = v15 + 24;
                    uint64_t v91 = (const void *)((v15 + 24 + v89) & v16);
                    int v92 = sub_1000082E8((uint64_t)v90, 1, v4);
                    int v93 = sub_1000082E8((uint64_t)v91, 1, v4);
                    if (v92)
                    {
                      if (!v93)
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v90, v91, v4);
                        sub_1000082C0((uint64_t)v90, 0, 1, v4);
                        goto LABEL_121;
                      }
                    }
                    else
                    {
                      if (!v93)
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v205 + 40))(v90, v91, v4);
LABEL_121:
                        BOOL v94 = (void *)(((unint64_t)v90 + v24 + v199) & v204);
                        size_t v200 = v24 + v199;
                        uint64_t v95 = (const void *)(((unint64_t)v91 + v200) & v204);
                        int v96 = sub_1000082E8((uint64_t)v94, 1, v20);
                        int v97 = sub_1000082E8((uint64_t)v95, 1, v20);
                        if (v96)
                        {
                          if (!v97)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v191 + 32))(v94, v95, v20);
                            sub_1000082C0((uint64_t)v94, 0, 1, v20);
LABEL_136:
                            uint64_t v18 = v189;
                            int v99 = v6;
                            size_t v100 = v201;
                            goto LABEL_137;
                          }
                        }
                        else
                        {
                          if (!v97)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v191 + 40))(v94, v95, v20);
                            goto LABEL_136;
                          }
                          (*(void (**)(void *, uint64_t))(v191 + 8))(v94, v20);
                        }
                        BOOL v98 = v6 == 0;
                        int v99 = v6;
                        size_t v100 = v201;
                        if (v98) {
                          size_t v101 = v201 + 1;
                        }
                        else {
                          size_t v101 = v201;
                        }
                        memcpy(v94, v95, v101);
                        uint64_t v18 = v189;
LABEL_137:
                        BOOL v192 = v99 == 0;
                        if (v99) {
                          size_t v102 = v100;
                        }
                        else {
                          size_t v102 = v100 + 1;
                        }
                        uint64_t v103 = v102 + v15;
                        unsigned int v104 = (void *)(((unint64_t)v94 + v103) & v16);
                        BOOL v105 = (const void *)(((unint64_t)v95 + v103) & v16);
                        int v106 = sub_1000082E8((uint64_t)v104, 1, v4);
                        int v107 = sub_1000082E8((uint64_t)v105, 1, v4);
                        if (v106)
                        {
                          unsigned int v19 = (const void *)a2;
                          if (!v107)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v104, v105, v4);
                            sub_1000082C0((uint64_t)v104, 0, 1, v4);
                            goto LABEL_146;
                          }
                        }
                        else
                        {
                          unsigned int v19 = (const void *)a2;
                          if (!v107)
                          {
                            (*(void (**)(void *, const void *, uint64_t))(v205 + 40))(v104, v105, v4);
LABEL_146:
                            size_t v108 = (void *)(((unint64_t)v104 + v25) & v16);
                            uint64_t v109 = (const void *)(((unint64_t)v105 + v25) & v16);
                            int v110 = sub_1000082E8((uint64_t)v108, 1, v4);
                            int v111 = sub_1000082E8((uint64_t)v109, 1, v4);
                            if (v110)
                            {
                              if (!v111)
                              {
                                (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v108, v109, v4);
                                sub_1000082C0((uint64_t)v108, 0, 1, v4);
                                goto LABEL_152;
                              }
                            }
                            else
                            {
                              if (!v111)
                              {
                                (*(void (**)(void *, const void *, uint64_t))(v205 + 40))(v108, v109, v4);
LABEL_152:
                                v112 = (void *)(((unint64_t)v108 + v25) & v16);
                                v113 = (const void *)(((unint64_t)v109 + v25) & v16);
                                int v114 = sub_1000082E8((uint64_t)v112, 1, v4);
                                int v115 = sub_1000082E8((uint64_t)v113, 1, v4);
                                if (v114)
                                {
                                  if (!v115)
                                  {
                                    (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v112, v113, v4);
                                    sub_1000082C0((uint64_t)v112, 0, 1, v4);
LABEL_158:
                                    uint64_t v51 = a3;
                                    unint64_t v116 = ((unint64_t)v112 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
                                    unint64_t v117 = ((unint64_t)v113 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
                                    uint64_t v118 = *(void *)v117;
                                    *(unsigned char *)(v116 + 8) = *(unsigned char *)(v117 + 8);
                                    *(void *)unint64_t v116 = v118;
                                    v119 = (void *)(((unint64_t)v112 + v24 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    v120 = (void *)(((unint64_t)v113 + v24 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    void *v119 = *v120;
                                    v119[1] = v120[1];
                                    swift_bridgeObjectRelease();
                                    v121 = (void *)(((unint64_t)v119 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    v122 = (void *)(((unint64_t)v120 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    void *v121 = *v122;
                                    v121[1] = v122[1];
                                    swift_bridgeObjectRelease();
                                    v123 = (void *)(((unint64_t)v121 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    v124 = (void *)(((unint64_t)v122 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    void *v123 = *v124;
                                    v123[1] = v124[1];
                                    swift_bridgeObjectRelease();
                                    v125 = (void *)(((unint64_t)v123 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    v126 = (void *)(((unint64_t)v124 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    void *v125 = *v126;
                                    v125[1] = v126[1];
                                    swift_bridgeObjectRelease();
                                    v127 = (void *)(((unint64_t)v125 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    v128 = (void *)(((unint64_t)v126 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    void *v127 = *v128;
                                    v127[1] = v128[1];
                                    swift_bridgeObjectRelease();
LABEL_159:
                                    size_t v55 = v201;
                                    uint64_t v53 = v193;
                                    size_t v54 = v194;
LABEL_160:
                                    BOOL v67 = v192;
LABEL_161:
                                    size_t v129 = v25;
                                    goto LABEL_162;
                                  }
                                }
                                else
                                {
                                  if (!v115)
                                  {
                                    (*(void (**)(void *, const void *, uint64_t))(v205 + 40))(v112, v113, v4);
                                    goto LABEL_158;
                                  }
                                  (*(void (**)(void *, uint64_t))(v205 + 8))(v112, v4);
                                }
                                memcpy(v112, v113, v24);
                                goto LABEL_158;
                              }
                              (*(void (**)(void *, uint64_t))(v205 + 8))(v108, v4);
                            }
                            memcpy(v108, v109, v24);
                            goto LABEL_152;
                          }
                          (*(void (**)(void *, uint64_t))(v205 + 8))(v104, v4);
                        }
                        memcpy(v104, v105, v24);
                        goto LABEL_146;
                      }
                      (*(void (**)(void *, uint64_t))(v205 + 8))(v90, v4);
                    }
                    memcpy(v90, v91, v24);
                    goto LABEL_121;
                  }
                  (*(void (**)(unsigned char *, uint64_t))(v205 + 8))(v84, v4);
                }
                memcpy(v84, v85, v24);
                goto LABEL_115;
              }
              (*(void (**)(void *, uint64_t))(v205 + 8))(v80, v4);
            }
            memcpy(v80, v81, v24);
            goto LABEL_109;
          }
          (*(void (**)(void *, uint64_t))(v205 + 8))(v76, v4);
        }
        memcpy(v76, v77, v24);
        goto LABEL_103;
      }
      (*(void (**)(void *, uint64_t))(v205 + 8))(v68, v4);
    }
    memcpy(v68, v69, v24);
    goto LABEL_97;
  }
  BOOL v17 = v6 >= 2;
  uint64_t v18 = a1;
  unsigned int v19 = (const void *)a2;
  uint64_t v20 = v8;
  uint64_t v21 = v6;
  LODWORD(v6) = *(_DWORD *)(v10 + 84);
  if (!v17) {
    goto LABEL_40;
  }
  unsigned int v22 = sub_1000082E8((uint64_t)v18, v21, v4);
  unsigned int v23 = sub_1000082E8(a2, v21, v4);
  if (v22 < 2)
  {
    if (v23 < 2) {
      goto LABEL_40;
    }
LABEL_49:
    if (!sub_1000082E8((uint64_t)v18, 1, v4)) {
      (*(void (**)(void *, uint64_t))(v205 + 8))(v18, v4);
    }
    if (v21) {
      size_t v24 = v196;
    }
    else {
      size_t v24 = v196 + 1;
    }
    uint64_t v42 = ((unint64_t)v18 + v15 + v24) & v16;
    if (!sub_1000082E8(v42, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v42, v4);
    }
    unint64_t v43 = (v15 + 8 + ((((v24 + 7 + v42) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16;
    if (!sub_1000082E8(v43, 1, v4)) {
      (*(void (**)(unint64_t, uint64_t))(v205 + 8))(v43, v4);
    }
    size_t v25 = v24 + v15;
    uint64_t v44 = (v24 + v15 + v43) & v16;
    if (!sub_1000082E8(v44, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v44, v4);
    }
    uint64_t v45 = (v25 + v44) & v16;
    if (!sub_1000082E8(v45, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v45, v4);
    }
    swift_bridgeObjectRelease();
    uint64_t v198 = v15 + 24;
    unint64_t v46 = (v15 + 24 + ((v45 + v24) & 0xFFFFFFFFFFFFFFF8)) & v16;
    if (!sub_1000082E8(v46, 1, v4)) {
      (*(void (**)(unint64_t, uint64_t))(v205 + 8))(v46, v4);
    }
    size_t v200 = v24 + v199;
    uint64_t v47 = (v200 + v46) & v204;
    if (!sub_1000082E8(v47, 1, v20)) {
      (*(void (**)(uint64_t, uint64_t))(v191 + 8))(v47, v20);
    }
    BOOL v192 = v6 == 0;
    size_t v48 = v201;
    if (!v6) {
      size_t v48 = v201 + 1;
    }
    __srca = (void *)(v48 + v15);
    uint64_t v49 = (v48 + v15 + v47) & v16;
    if (!sub_1000082E8(v49, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v49, v4);
    }
    uint64_t v50 = (v25 + v49) & v16;
    uint64_t v51 = a3;
    if (!sub_1000082E8(v50, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v50, v4);
    }
    uint64_t v52 = (v25 + v50) & v16;
    if (!sub_1000082E8(v52, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v52, v4);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v53 = v15 + 8;
    memcpy(v18, v19, ((((((((((v24+ 23+ ((v25+ ((v25+ (((unint64_t)__srca+ ((v200+ ((v198+ ((((v25+ ((v25+ ((v15+ 8+ ((((v24 + 7 + (v25 & v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v16)) & v16)+ v24) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v204)) & v16)) & v16)) & v16)) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)
    + 16);
    size_t v54 = v24 + 7;
    size_t v55 = v201;
    goto LABEL_160;
  }
  int v197 = v21;
  if (v23 >= 2)
  {
    size_t v24 = v196;
    size_t v25 = v196 + v15;
    size_t v26 = v196 + 7;
    uint64_t v27 = v15 + 8;
LABEL_84:
    BOOL v64 = v6 == 0;
    uint64_t v198 = v15 + 24;
    size_t v55 = v201;
    size_t v200 = v24 + v199;
    size_t v65 = v201 + v15;
    if (!v6) {
      ++v65;
    }
    size_t v66 = v26;
    uint64_t v53 = v27;
    memcpy(v18, v19, ((((((((((v24+ ((v25+ ((v25+ ((v65+ ((v200+ ((v15+ 24+ ((((v25+ ((v25+ ((v27 + ((((v26 + (v25 & v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v16)) & v16)+ v24) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v204)) & v16)) & v16)) & v16)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    BOOL v67 = v64;
    size_t v54 = v66;
    uint64_t v51 = a3;
    goto LABEL_161;
  }
LABEL_79:
  if (sub_1000082E8((uint64_t)v19, 1, v4))
  {
    int v63 = v197;
    if (v197) {
      size_t v24 = v196;
    }
    else {
      size_t v24 = v196 + 1;
    }
    memcpy(v18, v19, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v18, v19, v4);
    sub_1000082C0((uint64_t)v18, 0, 1, v4);
    int v63 = v197;
    if (v197) {
      size_t v24 = v196;
    }
    else {
      size_t v24 = v196 + 1;
    }
  }
  uint64_t v149 = v19;
  v190 = v18;
  uint64_t v150 = (void *)(((unint64_t)v18 + v15 + v24) & v16);
  v151 = (const void *)(((unint64_t)v149 + v15 + v24) & v16);
  if (sub_1000082E8((uint64_t)v151, 1, v4))
  {
    memcpy(v150, v151, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v150, v151, v4);
    sub_1000082C0((uint64_t)v150, 0, 1, v4);
  }
  size_t v194 = v24 + 7;
  uint64_t v152 = (void *)(((unint64_t)v151 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v153 = (void *)(((unint64_t)v150 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v153 = *v152;
  unint64_t v154 = (void *)(((unint64_t)v153 + 15) & 0xFFFFFFFFFFFFFFF8);
  v155 = (void *)(((unint64_t)v152 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v154 = *v155;
  v156 = (void *)(((unint64_t)v154 + v15 + 8) & v16);
  uint64_t v193 = v15 + 8;
  v157 = (const void *)(((unint64_t)v155 + v15 + 8) & v16);
  if (sub_1000082E8((uint64_t)v157, 1, v4))
  {
    memcpy(v156, v157, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v156, v157, v4);
    sub_1000082C0((uint64_t)v156, 0, 1, v4);
  }
  size_t v25 = v24 + v15;
  v158 = (void *)(((unint64_t)v156 + v24 + v15) & v16);
  v159 = (const void *)(((unint64_t)v157 + v24 + v15) & v16);
  if (sub_1000082E8((uint64_t)v159, 1, v4))
  {
    memcpy(v158, v159, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v158, v159, v4);
    sub_1000082C0((uint64_t)v158, 0, 1, v4);
  }
  v160 = (void *)(((unint64_t)v158 + v25) & v16);
  v161 = (const void *)(((unint64_t)v159 + v25) & v16);
  if (sub_1000082E8((uint64_t)v161, 1, v4))
  {
    memcpy(v160, v161, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v160, v161, v4);
    sub_1000082C0((uint64_t)v160, 0, 1, v4);
  }
  *((unsigned char *)v160 + v24) = *((unsigned char *)v161 + v24);
  unint64_t v162 = ((unint64_t)v160 + v24) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v163 = ((unint64_t)v161 + v24) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v162 + 8) = *(_OWORD *)(v163 + 8);
  v164 = (void *)((v15 + 24 + v162) & v16);
  uint64_t v198 = v15 + 24;
  v165 = (const void *)((v15 + 24 + v163) & v16);
  if (sub_1000082E8((uint64_t)v165, 1, v4))
  {
    memcpy(v164, v165, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v164, v165, v4);
    sub_1000082C0((uint64_t)v164, 0, 1, v4);
  }
  v166 = (void *)(((unint64_t)v164 + v24 + v199) & v204);
  size_t v200 = v24 + v199;
  v167 = (const void *)(((unint64_t)v165 + v200) & v204);
  if (sub_1000082E8((uint64_t)v167, 1, v20))
  {
    BOOL v192 = v6 == 0;
    if (v6) {
      size_t v168 = v201;
    }
    else {
      size_t v168 = v201 + 1;
    }
    memcpy(v166, v167, v168);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v191 + 32))(v166, v167, v20);
    sub_1000082C0((uint64_t)v166, 0, 1, v20);
    BOOL v192 = v6 == 0;
    if (v6) {
      size_t v168 = v201;
    }
    else {
      size_t v168 = v201 + 1;
    }
  }
  size_t v169 = v168 + v15;
  v170 = (void *)(((unint64_t)v166 + v168 + v15) & v16);
  v171 = (const void *)(((unint64_t)v167 + v169) & v16);
  if (sub_1000082E8((uint64_t)v171, 1, v4))
  {
    memcpy(v170, v171, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v170, v171, v4);
    sub_1000082C0((uint64_t)v170, 0, 1, v4);
  }
  uint64_t v18 = v190;
  unsigned int v19 = (const void *)a2;
  v172 = (void *)(((unint64_t)v170 + v25) & v16);
  v173 = (const void *)(((unint64_t)v171 + v25) & v16);
  if (sub_1000082E8((uint64_t)v173, 1, v4))
  {
    memcpy(v172, v173, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v172, v173, v4);
    sub_1000082C0((uint64_t)v172, 0, 1, v4);
  }
  size_t v174 = (void *)(((unint64_t)v172 + v25) & v16);
  size_t v175 = (const void *)(((unint64_t)v173 + v25) & v16);
  if (sub_1000082E8((uint64_t)v175, 1, v4))
  {
    memcpy(v174, v175, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v205 + 32))(v174, v175, v4);
    sub_1000082C0((uint64_t)v174, 0, 1, v4);
  }
  unint64_t v176 = ((unint64_t)v174 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v177 = ((unint64_t)v175 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v178 = *(void *)v177;
  *(unsigned char *)(v176 + 8) = *(unsigned char *)(v177 + 8);
  *(void *)unint64_t v176 = v178;
  v179 = (_OWORD *)(((unint64_t)v174 + v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  v180 = (_OWORD *)(((unint64_t)v175 + v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v179 = *v180;
  v181 = (_OWORD *)(((unint64_t)v179 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v182 = (_OWORD *)(((unint64_t)v180 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v181 = *v182;
  unint64_t v183 = (_OWORD *)(((unint64_t)v181 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v184 = (_OWORD *)(((unint64_t)v182 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v183 = *v184;
  v185 = (_OWORD *)(((unint64_t)v183 + 23) & 0xFFFFFFFFFFFFFFF8);
  v186 = (_OWORD *)(((unint64_t)v184 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v185 = *v186;
  *(_OWORD *)(((unint64_t)v185 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v186 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (!v63)
  {
    uint64_t v51 = a3;
    goto LABEL_159;
  }
  uint64_t v51 = a3;
  size_t v129 = v196 + v15;
  size_t v55 = v201;
  uint64_t v53 = v15 + 8;
  size_t v54 = v24 + 7;
  BOOL v67 = v192;
LABEL_162:
  unint64_t v130 = (((((((((v24
                + ((v25
                  + ((v25
                    + ((v55
                      + v15
                      + v67
                      + ((v200
                        + ((v198
                          + ((((v25
                              + ((v25
                                + ((v53 + ((((v54 + (v129 & v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v16)) & v16)
                            + v24) & 0xFFFFFFFFFFFFFFF8)) & v16)) & v204)) & v16)) & v16)) & v16)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v131 = type metadata accessor for URLRequest();
  uint64_t v132 = *(void *)(v131 - 8);
  uint64_t v133 = v132 + 40;
  uint64_t v134 = *(unsigned __int8 *)(v132 + 80);
  uint64_t v135 = v130 + v134 + 16;
  unint64_t v136 = ((unint64_t)v18 + v135) & ~v134;
  unint64_t v137 = ((unint64_t)v19 + v135) & ~v134;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v132 + 40))(v136, v137, v131);
  uint64_t v138 = *(void *)(v133 + 24) + 7;
  v139 = (void **)((v138 + v136) & 0xFFFFFFFFFFFFFFF8);
  v140 = (void **)((v138 + v137) & 0xFFFFFFFFFFFFFFF8);
  v141 = *v139;
  *v139 = *v140;

  v142 = (uint64_t *)(((unint64_t)v139 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v143 = (uint64_t *)(((unint64_t)v140 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v144 = v142[1];
  if ((v144 & 0x3000000000000000) == 0)
  {
    uint64_t v145 = v143[1];
    if ((v145 & 0x3000000000000000) == 0)
    {
      uint64_t v148 = *v142;
      uint64_t *v142 = *v143;
      v142[1] = v145;
      sub_10000835C(v148, v144);
      goto LABEL_166;
    }
    sub_10000835C(*v142, v144);
  }
  *(_OWORD *)v142 = *(_OWORD *)v143;
LABEL_166:
  uint64_t v146 = *(void *)(*(void *)(v51 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v146 + 40))(((unint64_t)v142 + *(unsigned __int8 *)(v146 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80), ((unint64_t)v143 + *(unsigned __int8 *)(v146 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80));
  return v18;
}

uint64_t sub_100023004(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v49 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v49 - 8);
  unsigned int v4 = *(_DWORD *)(v3 + 84);
  if (v4) {
    unsigned int v5 = v4 - 1;
  }
  else {
    unsigned int v5 = 0;
  }
  uint64_t v48 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v48 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  unsigned int v8 = v7 - 1;
  if (!v7) {
    unsigned int v8 = 0;
  }
  unsigned int v52 = v5;
  if (v5 > v8) {
    unsigned int v8 = v5;
  }
  unsigned int v50 = v8;
  if (v8 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  unsigned int v51 = v8;
  unsigned int v9 = v8 - 1;
  uint64_t v10 = type metadata accessor for URLRequest();
  uint64_t result = a2;
  uint64_t v12 = *(void *)(v10 - 8);
  unsigned int v13 = *(_DWORD *)(v12 + 84);
  unsigned int v53 = v9;
  if (v13 <= v9) {
    unsigned int v14 = v9;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v12 + 84);
  }
  uint64_t v15 = *(void *)(a3 + 16);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int *)(v16 + 84);
  if (v14 <= v17) {
    unsigned int v18 = *(_DWORD *)(v16 + 84);
  }
  else {
    unsigned int v18 = v14;
  }
  if (v18 <= 0x7FFFFFFE) {
    unsigned int v19 = 2147483646;
  }
  else {
    unsigned int v19 = v18;
  }
  if (v4) {
    uint64_t v20 = *(void *)(v3 + 64);
  }
  else {
    uint64_t v20 = *(void *)(v3 + 64) + 1;
  }
  uint64_t v21 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v22 = *(unsigned __int8 *)(v6 + 80);
  if (v7) {
    uint64_t v23 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v23 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v24 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v25 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v26 = *(void *)(v16 + 64);
  if (!a2) {
    return result;
  }
  uint64_t v27 = v7;
  unint64_t v28 = ((((((((((v20
                + ((v20
                  + v21
                  + ((v20
                    + v21
                    + ((v23
                      + v21
                      + ((v20
                        + v22
                        + ((v21
                          + 24
                          + ((((v20
                              + v21
                              + ((v20
                                + v21
                                + ((v21
                                  + 8
                                  + ((((v20 + 7 + ((v20 + v21) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & ~v21)) & ~v21)
                            + v20) & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & ~v22)) & ~v21)) & ~v21)) & ~v21)
                + 23) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + v24
      + 16;
  uint64_t v29 = *(void *)(*(void *)(v10 - 8) + 64) + 7;
  uint64_t v30 = v25 + 16;
  uint64_t v31 = (uint64_t)a1;
  if (a2 > v19)
  {
    unint64_t v32 = (v30 + ((((v29 + (v28 & ~v24)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v25;
    uint64_t v33 = v32 + v26;
    char v34 = 8 * (v32 + v26);
    if ((v32 + v26) > 3) {
      goto LABEL_28;
    }
    unsigned int v36 = ((a2 - v19 + ~(-1 << v34)) >> v34) + 1;
    if (HIWORD(v36))
    {
      int v35 = *(_DWORD *)((char *)a1 + v33);
      if (v35) {
        goto LABEL_35;
      }
    }
    else
    {
      if (v36 <= 0xFF)
      {
        if (v36 < 2) {
          goto LABEL_45;
        }
LABEL_28:
        int v35 = *((unsigned __int8 *)a1 + v33);
        if (!*((unsigned char *)a1 + v33)) {
          goto LABEL_45;
        }
LABEL_35:
        int v37 = (v35 - 1) << v34;
        if (v33 > 3) {
          int v37 = 0;
        }
        if (v33)
        {
          if (v33 <= 3) {
            int v38 = v33;
          }
          else {
            int v38 = 4;
          }
          switch(v38)
          {
            case 2:
              int v39 = *a1;
              break;
            case 3:
              int v39 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v39 = *(_DWORD *)a1;
              break;
            default:
              int v39 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v39 = 0;
        }
        return v19 + (v39 | v37) + 1;
      }
      int v35 = *(unsigned __int16 *)((char *)a1 + v33);
      if (*(unsigned __int16 *)((char *)a1 + v33)) {
        goto LABEL_35;
      }
    }
  }
LABEL_45:
  if (v53 == v19)
  {
    if (v52 == v51)
    {
      uint64_t v40 = v4;
      if (v4 < 2) {
        return 0;
      }
      uint64_t v41 = v49;
    }
    else
    {
      unint64_t v43 = (((v20
             + v21
             + ((v20
               + v21
               + ((v21
                 + 8
                 + ((((v20 + 7 + (((unint64_t)a1 + v20 + v21) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & ~v21)) & ~v21)
           + v20) & 0xFFFFFFFFFFFFFFF8;
      if (v50 <= 0x7FFFFFFE)
      {
        unint64_t v44 = *(void *)(v43 + 16);
        if (v44 >= 0xFFFFFFFF) {
          LODWORD(v44) = -1;
        }
        if ((v44 + 1) >= 2)
        {
LABEL_66:
          uint64_t result = (v44 - 1);
          if (v44 > 1) {
            return result;
          }
        }
        return 0;
      }
      if (v27 < 2) {
        return 0;
      }
      uint64_t v31 = (v20 + v22 + ((v21 + 24 + v43) & ~v21)) & ~v22;
      uint64_t v40 = v27;
      uint64_t v41 = v48;
    }
    unsigned int v47 = sub_1000082E8(v31, v40, v41);
    if (v47 >= 2)
    {
      LODWORD(v44) = v47 - 1;
      goto LABEL_66;
    }
    return 0;
  }
  unint64_t v42 = ((unint64_t)a1 + v28) & ~v24;
  if (v13 == v19)
  {
    uint64_t v17 = *(unsigned int *)(v12 + 84);
    uint64_t v15 = v10;
LABEL_69:
    return sub_1000082E8(v42, v17, v15);
  }
  uint64_t v45 = (unint64_t *)((v29 + v42) & 0xFFFFFFFFFFFFFFF8);
  if (v18 > 0x7FFFFFFE)
  {
    unint64_t v42 = (v30 + (((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v25;
    goto LABEL_69;
  }
  unint64_t v46 = *v45;
  if (v46 >= 0xFFFFFFFF) {
    LODWORD(v46) = -1;
  }
  if ((v46 + 1) >= 2) {
    return v46;
  }
  else {
    return 0;
  }
}

void sub_100023558(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v50 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v50 - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  uint64_t v48 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v48 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v6 > v9) {
    unsigned int v9 = v6;
  }
  unsigned int v49 = v9;
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v9 = 2147483646;
  }
  unsigned int v52 = v9;
  unsigned int v10 = v9 - 1;
  int v59 = 0;
  uint64_t v51 = type metadata accessor for URLRequest();
  uint64_t v11 = *(void *)(v51 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  unsigned int v53 = v10;
  if (v12 <= v10) {
    unsigned int v13 = v10;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v55 = *(void *)(a4 + 16);
  uint64_t v14 = *(void *)(v55 - 8);
  uint64_t v15 = *(unsigned int *)(v14 + 84);
  if (v13 <= v15) {
    unsigned int v16 = *(_DWORD *)(v14 + 84);
  }
  else {
    unsigned int v16 = v13;
  }
  if (v16 <= 0x7FFFFFFE) {
    unsigned int v17 = 2147483646;
  }
  else {
    unsigned int v17 = v16;
  }
  uint64_t v18 = *(void *)(v4 + 64);
  if (!v5) {
    ++v18;
  }
  uint64_t v19 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v20 = v18 + v19;
  uint64_t v21 = *(unsigned __int8 *)(v7 + 80);
  if (v8) {
    uint64_t v22 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v22 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v23 = ((v20
        + ((v20
          + ((v22
            + v19
            + ((v18
              + v21
              + ((v19
                + 24
                + ((((v18
                    + v19
                    + ((v18
                      + v19
                      + ((v19
                        + 8
                        + ((((v18 + 7 + ((v18 + v19) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v19)) & ~v19)) & ~v19)
                  + v18) & 0xFFFFFFFFFFFFFFF8)) & ~v19)) & ~v21)) & ~v19)) & ~v19)) & ~v19)
      + v18;
  uint64_t v24 = *(unsigned __int8 *)(v11 + 80);
  unint64_t v25 = ((((((((((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + v24
      + 16;
  uint64_t v26 = *(void *)(*(void *)(v51 - 8) + 64) + 7;
  uint64_t v27 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v28 = v27 + 16;
  size_t v29 = ((v27 + 16 + ((((v26 + (v25 & ~v24)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v27)
      + *(void *)(*(void *)(v55 - 8) + 64);
  char v30 = 8 * v29;
  if (a3 > v17)
  {
    if (v29 <= 3)
    {
      unsigned int v32 = ((a3 - v17 + ~(-1 << v30)) >> v30) + 1;
      if (HIWORD(v32))
      {
        int v31 = 4;
      }
      else if (v32 >= 0x100)
      {
        int v31 = 2;
      }
      else
      {
        int v31 = v32 > 1;
      }
    }
    else
    {
      int v31 = 1;
    }
    int v59 = v31;
  }
  if (v17 < a2)
  {
    unsigned int v33 = ~v17 + a2;
    if (v29 < 4)
    {
      int v35 = (v33 >> v30) + 1;
      char v34 = a1;
      if (v29)
      {
        int v38 = v33 & ~(-1 << v30);
        bzero(a1, v29);
        if (v29 == 3)
        {
          *(_WORD *)a1 = v38;
          a1[2] = BYTE2(v38);
        }
        else
        {
          if (v29 != 2)
          {
            int v45 = v59;
            *a1 = v38;
            goto LABEL_61;
          }
          *(_WORD *)a1 = v38;
        }
      }
    }
    else
    {
      char v34 = a1;
      bzero(a1, v29);
      *(_DWORD *)a1 = v33;
      int v35 = 1;
    }
    int v45 = v59;
LABEL_61:
    switch(v45)
    {
      case 1:
        v34[v29] = v35;
        return;
      case 2:
        *(_WORD *)&v34[v29] = v35;
        return;
      case 3:
        goto LABEL_79;
      case 4:
        *(_DWORD *)&v34[v29] = v35;
        return;
      default:
        return;
    }
  }
  uint64_t v36 = ~v19;
  uint64_t v37 = ~v27;
  switch(v59)
  {
    case 1:
      a1[v29] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_45;
    case 2:
      *(_WORD *)&a1[v29] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_45;
    case 3:
LABEL_79:
      __break(1u);
      JUMPOUT(0x100023B90);
    case 4:
      *(_DWORD *)&a1[v29] = 0;
      goto LABEL_44;
    default:
LABEL_44:
      if (!a2) {
        return;
      }
LABEL_45:
      if (v53 == v17)
      {
        uint64_t v39 = a2 + 1;
        if (v39 > v52)
        {
          int v40 = (((((((((v23 + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8;
          if (v40 != -16)
          {
            bzero(a1, (v40 + 16));
            *(_DWORD *)a1 = a2 - v52;
          }
          return;
        }
        if (a2 == -1) {
          return;
        }
        if (v6 == v52)
        {
          uint64_t v42 = a2 + 2;
          uint64_t v41 = (uint64_t)a1;
          uint64_t v15 = v5;
          uint64_t v43 = v50;
          goto LABEL_68;
        }
        unint64_t v46 = (((v20
               + ((v20
                 + ((v19
                   + 8
                   + ((((v18 + 7 + ((unint64_t)&a1[v20] & v36)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v36)) & v36)) & v36)
             + v18) & 0xFFFFFFFFFFFFFFF8;
        if (v49 > 0x7FFFFFFE)
        {
          if (v8 < 2) {
            return;
          }
          uint64_t v41 = (v18 + v21 + ((v19 + 24 + v46) & v36)) & ~v21;
          uint64_t v42 = a2 + 2;
          uint64_t v15 = v8;
          uint64_t v43 = v48;
          goto LABEL_68;
        }
        unint64_t v44 = (void *)(v46 + 8);
        if (v39 <= 0x7FFFFFFE)
        {
          *(void *)(v46 + 16) = v39;
          return;
        }
        unsigned int v47 = a2 - 2147483646;
        *unint64_t v44 = 0;
        *(void *)(v46 + 16) = 0;
LABEL_78:
        *(_DWORD *)unint64_t v44 = v47;
        return;
      }
      uint64_t v41 = (unint64_t)&a1[v25] & ~v24;
      if (v12 != v17)
      {
        unint64_t v44 = (void *)((v26 + v41) & 0xFFFFFFFFFFFFFFF8);
        if (v16 > 0x7FFFFFFE)
        {
          uint64_t v41 = (v28 + (((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8)) & v37;
          uint64_t v42 = a2;
          uint64_t v43 = v55;
          goto LABEL_68;
        }
        if (a2 <= 0x7FFFFFFE)
        {
          *unint64_t v44 = a2;
          return;
        }
        unsigned int v47 = a2 - 0x7FFFFFFF;
        *unint64_t v44 = 0;
        goto LABEL_78;
      }
      uint64_t v42 = a2;
      uint64_t v15 = v12;
      uint64_t v43 = v51;
LABEL_68:
      sub_1000082C0(v41, v42, v15, v43);
      return;
  }
}

uint64_t type metadata accessor for ApiResponse()
{
  return sub_10000B38C();
}

uint64_t type metadata accessor for ApiRequestMetrics()
{
  uint64_t result = qword_1000FCB78;
  if (!qword_1000FCB78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_100023C18(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    if (sub_1000082E8((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_100005E5C(&qword_1000FC938);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      sub_1000082C0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    if (sub_1000082E8((uint64_t)a2 + v10, 1, v7))
    {
      uint64_t v13 = sub_100005E5C(&qword_1000FC938);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v11, v12, v7);
      sub_1000082C0((uint64_t)v11, 0, 1, v7);
    }
    uint64_t v14 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);
    uint64_t v15 = a3[8];
    unsigned int v16 = (char *)a1 + v15;
    unsigned int v17 = (char *)a2 + v15;
    if (sub_1000082E8((uint64_t)a2 + v15, 1, v7))
    {
      uint64_t v18 = sub_100005E5C(&qword_1000FC938);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v16, v17, v7);
      sub_1000082C0((uint64_t)v16, 0, 1, v7);
    }
    uint64_t v19 = a3[9];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (sub_1000082E8((uint64_t)a2 + v19, 1, v7))
    {
      uint64_t v22 = sub_100005E5C(&qword_1000FC938);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v20, v21, v7);
      sub_1000082C0((uint64_t)v20, 0, 1, v7);
    }
    uint64_t v23 = a3[10];
    uint64_t v24 = (char *)a1 + v23;
    unint64_t v25 = (char *)a2 + v23;
    if (sub_1000082E8((uint64_t)a2 + v23, 1, v7))
    {
      uint64_t v26 = sub_100005E5C(&qword_1000FC938);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v24, v25, v7);
      sub_1000082C0((uint64_t)v24, 0, 1, v7);
    }
    uint64_t v27 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    uint64_t v28 = (uint64_t *)((char *)a1 + v27);
    size_t v29 = (uint64_t *)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = a3[13];
    unsigned int v32 = (char *)a1 + v31;
    unsigned int v33 = (char *)a2 + v31;
    swift_bridgeObjectRetain();
    if (sub_1000082E8((uint64_t)v33, 1, v7))
    {
      uint64_t v34 = sub_100005E5C(&qword_1000FC938);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v32, v33, v7);
      sub_1000082C0((uint64_t)v32, 0, 1, v7);
    }
    uint64_t v35 = a3[14];
    uint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    uint64_t v38 = type metadata accessor for URL();
    if (sub_1000082E8((uint64_t)v37, 1, v38))
    {
      uint64_t v39 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
      memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      sub_1000082C0((uint64_t)v36, 0, 1, v38);
    }
    uint64_t v40 = a3[15];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    if (sub_1000082E8((uint64_t)a2 + v40, 1, v7))
    {
      uint64_t v43 = sub_100005E5C(&qword_1000FC938);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v41, v42, v7);
      sub_1000082C0((uint64_t)v41, 0, 1, v7);
    }
    uint64_t v44 = a3[16];
    int v45 = (char *)a1 + v44;
    unint64_t v46 = (char *)a2 + v44;
    if (sub_1000082E8((uint64_t)a2 + v44, 1, v7))
    {
      uint64_t v47 = sub_100005E5C(&qword_1000FC938);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v45, v46, v7);
      sub_1000082C0((uint64_t)v45, 0, 1, v7);
    }
    uint64_t v48 = a3[17];
    unsigned int v49 = (char *)a1 + v48;
    uint64_t v50 = (char *)a2 + v48;
    if (sub_1000082E8((uint64_t)a2 + v48, 1, v7))
    {
      uint64_t v51 = sub_100005E5C(&qword_1000FC938);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v49, v50, v7);
      sub_1000082C0((uint64_t)v49, 0, 1, v7);
    }
    uint64_t v52 = a3[18];
    uint64_t v53 = a3[19];
    size_t v54 = (char *)a1 + v52;
    uint64_t v55 = (char *)a2 + v52;
    *(void *)size_t v54 = *(void *)v55;
    v54[8] = v55[8];
    uint64_t v56 = (uint64_t *)((char *)a1 + v53);
    uint64_t v57 = (uint64_t *)((char *)a2 + v53);
    uint64_t v58 = v57[1];
    void *v56 = *v57;
    v56[1] = v58;
    uint64_t v59 = a3[20];
    uint64_t v60 = a3[21];
    int v61 = (uint64_t *)((char *)a1 + v59);
    unsigned int v62 = (uint64_t *)((char *)a2 + v59);
    uint64_t v63 = v62[1];
    void *v61 = *v62;
    v61[1] = v63;
    BOOL v64 = (uint64_t *)((char *)a1 + v60);
    size_t v65 = (uint64_t *)((char *)a2 + v60);
    uint64_t v66 = v65[1];
    *BOOL v64 = *v65;
    v64[1] = v66;
    uint64_t v67 = a3[22];
    uint64_t v68 = a3[23];
    uint64_t v69 = (uint64_t *)((char *)a1 + v67);
    int v70 = (uint64_t *)((char *)a2 + v67);
    uint64_t v71 = v70[1];
    *uint64_t v69 = *v70;
    v69[1] = v71;
    uint64_t v72 = (uint64_t *)((char *)a1 + v68);
    uint64_t v73 = (uint64_t *)((char *)a2 + v68);
    uint64_t v74 = v73[1];
    *uint64_t v72 = *v73;
    v72[1] = v74;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100024374(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  if (!sub_1000082E8(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + a2[5];
  if (!sub_1000082E8(v5, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v5, v4);
  }
  uint64_t v6 = a1 + a2[8];
  if (!sub_1000082E8(v6, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v6, v4);
  }
  uint64_t v7 = a1 + a2[9];
  if (!sub_1000082E8(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v7, v4);
  }
  uint64_t v8 = a1 + a2[10];
  if (!sub_1000082E8(v8, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v8, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[13];
  if (!sub_1000082E8(v9, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v9, v4);
  }
  uint64_t v10 = a1 + a2[14];
  uint64_t v11 = type metadata accessor for URL();
  if (!sub_1000082E8(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = a1 + a2[15];
  if (!sub_1000082E8(v12, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v12, v4);
  }
  uint64_t v13 = a1 + a2[16];
  if (!sub_1000082E8(v13, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v13, v4);
  }
  uint64_t v14 = a1 + a2[17];
  if (!sub_1000082E8(v14, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v14, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *sub_10002471C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  if (sub_1000082E8((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_100005E5C(&qword_1000FC938);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    sub_1000082C0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (sub_1000082E8((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_100005E5C(&qword_1000FC938);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v10, v6);
    sub_1000082C0((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  uint64_t v13 = a3[8];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if (sub_1000082E8((uint64_t)&a2[v13], 1, v6))
  {
    uint64_t v16 = sub_100005E5C(&qword_1000FC938);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v14, v15, v6);
    sub_1000082C0((uint64_t)v14, 0, 1, v6);
  }
  uint64_t v17 = a3[9];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  if (sub_1000082E8((uint64_t)&a2[v17], 1, v6))
  {
    uint64_t v20 = sub_100005E5C(&qword_1000FC938);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v18, v19, v6);
    sub_1000082C0((uint64_t)v18, 0, 1, v6);
  }
  uint64_t v21 = a3[10];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  if (sub_1000082E8((uint64_t)&a2[v21], 1, v6))
  {
    uint64_t v24 = sub_100005E5C(&qword_1000FC938);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v22, v23, v6);
    sub_1000082C0((uint64_t)v22, 0, 1, v6);
  }
  uint64_t v25 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = v28;
  uint64_t v29 = a3[13];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  swift_bridgeObjectRetain();
  if (sub_1000082E8((uint64_t)v31, 1, v6))
  {
    uint64_t v32 = sub_100005E5C(&qword_1000FC938);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v30, v31, v6);
    sub_1000082C0((uint64_t)v30, 0, 1, v6);
  }
  uint64_t v33 = a3[14];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v36 = type metadata accessor for URL();
  if (sub_1000082E8((uint64_t)v35, 1, v36))
  {
    uint64_t v37 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
    memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    sub_1000082C0((uint64_t)v34, 0, 1, v36);
  }
  uint64_t v38 = a3[15];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  if (sub_1000082E8((uint64_t)&a2[v38], 1, v6))
  {
    uint64_t v41 = sub_100005E5C(&qword_1000FC938);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v39, v40, v6);
    sub_1000082C0((uint64_t)v39, 0, 1, v6);
  }
  uint64_t v42 = a3[16];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  if (sub_1000082E8((uint64_t)&a2[v42], 1, v6))
  {
    uint64_t v45 = sub_100005E5C(&qword_1000FC938);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v43, v44, v6);
    sub_1000082C0((uint64_t)v43, 0, 1, v6);
  }
  uint64_t v46 = a3[17];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  if (sub_1000082E8((uint64_t)&a2[v46], 1, v6))
  {
    uint64_t v49 = sub_100005E5C(&qword_1000FC938);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v47, v48, v6);
    sub_1000082C0((uint64_t)v47, 0, 1, v6);
  }
  uint64_t v50 = a3[18];
  uint64_t v51 = a3[19];
  uint64_t v52 = &a1[v50];
  uint64_t v53 = &a2[v50];
  *(void *)uint64_t v52 = *(void *)v53;
  v52[8] = v53[8];
  size_t v54 = &a1[v51];
  uint64_t v55 = &a2[v51];
  uint64_t v56 = *((void *)v55 + 1);
  *(void *)size_t v54 = *(void *)v55;
  *((void *)v54 + 1) = v56;
  uint64_t v57 = a3[20];
  uint64_t v58 = a3[21];
  uint64_t v59 = &a1[v57];
  uint64_t v60 = &a2[v57];
  uint64_t v61 = *((void *)v60 + 1);
  *(void *)uint64_t v59 = *(void *)v60;
  *((void *)v59 + 1) = v61;
  unsigned int v62 = &a1[v58];
  uint64_t v63 = &a2[v58];
  uint64_t v64 = *((void *)v63 + 1);
  *(void *)unsigned int v62 = *(void *)v63;
  *((void *)v62 + 1) = v64;
  uint64_t v65 = a3[22];
  uint64_t v66 = a3[23];
  uint64_t v67 = &a1[v65];
  uint64_t v68 = &a2[v65];
  uint64_t v69 = *((void *)v68 + 1);
  *(void *)uint64_t v67 = *(void *)v68;
  *((void *)v67 + 1) = v69;
  int v70 = &a1[v66];
  uint64_t v71 = &a2[v66];
  uint64_t v72 = *((void *)v71 + 1);
  *(void *)int v70 = *(void *)v71;
  *((void *)v70 + 1) = v72;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_100024E28(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  int v7 = sub_1000082E8((uint64_t)a1, 1, v6);
  int v8 = sub_1000082E8((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      sub_1000082C0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_100005E5C(&qword_1000FC938);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = sub_1000082E8((uint64_t)&a1[v11], 1, v6);
  int v15 = sub_1000082E8((uint64_t)v13, 1, v6);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v12, v13, v6);
      sub_1000082C0((uint64_t)v12, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v16 = *(void *)(v6 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
LABEL_12:
    uint64_t v17 = sub_100005E5C(&qword_1000FC938);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
LABEL_13:
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = sub_1000082E8((uint64_t)&a1[v18], 1, v6);
  int v22 = sub_1000082E8((uint64_t)v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v19, v20, v6);
      sub_1000082C0((uint64_t)v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v23 = *(void *)(v6 - 8);
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v6);
LABEL_18:
    uint64_t v24 = sub_100005E5C(&qword_1000FC938);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v19, v20, v6);
LABEL_19:
  uint64_t v25 = a3[9];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  int v28 = sub_1000082E8((uint64_t)&a1[v25], 1, v6);
  int v29 = sub_1000082E8((uint64_t)v27, 1, v6);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v26, v27, v6);
      sub_1000082C0((uint64_t)v26, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v30 = *(void *)(v6 - 8);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v6);
LABEL_24:
    uint64_t v31 = sub_100005E5C(&qword_1000FC938);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v26, v27, v6);
LABEL_25:
  uint64_t v32 = a3[10];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  int v35 = sub_1000082E8((uint64_t)&a1[v32], 1, v6);
  int v36 = sub_1000082E8((uint64_t)v34, 1, v6);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v33, v34, v6);
      sub_1000082C0((uint64_t)v33, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  uint64_t v37 = *(void *)(v6 - 8);
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v33, v6);
LABEL_30:
    uint64_t v38 = sub_100005E5C(&qword_1000FC938);
    memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 24))(v33, v34, v6);
LABEL_31:
  a1[a3[11]] = a2[a3[11]];
  uint64_t v39 = a3[12];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  *(void *)uint64_t v40 = *(void *)v41;
  *((void *)v40 + 1) = *((void *)v41 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[13];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  int v45 = sub_1000082E8((uint64_t)&a1[v42], 1, v6);
  int v46 = sub_1000082E8((uint64_t)v44, 1, v6);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v43, v44, v6);
      sub_1000082C0((uint64_t)v43, 0, 1, v6);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  uint64_t v47 = *(void *)(v6 - 8);
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v6);
LABEL_36:
    uint64_t v48 = sub_100005E5C(&qword_1000FC938);
    memcpy(v43, v44, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 24))(v43, v44, v6);
LABEL_37:
  uint64_t v49 = a3[14];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  uint64_t v52 = type metadata accessor for URL();
  int v53 = sub_1000082E8((uint64_t)v50, 1, v52);
  int v54 = sub_1000082E8((uint64_t)v51, 1, v52);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      sub_1000082C0((uint64_t)v50, 0, 1, v52);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  uint64_t v55 = *(void *)(v52 - 8);
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v50, v52);
LABEL_42:
    uint64_t v56 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
    memcpy(v50, v51, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 24))(v50, v51, v52);
LABEL_43:
  uint64_t v57 = a3[15];
  uint64_t v58 = &a1[v57];
  uint64_t v59 = &a2[v57];
  int v60 = sub_1000082E8((uint64_t)&a1[v57], 1, v6);
  int v61 = sub_1000082E8((uint64_t)v59, 1, v6);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v58, v59, v6);
      sub_1000082C0((uint64_t)v58, 0, 1, v6);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  uint64_t v62 = *(void *)(v6 - 8);
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v58, v6);
LABEL_48:
    uint64_t v63 = sub_100005E5C(&qword_1000FC938);
    memcpy(v58, v59, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v62 + 24))(v58, v59, v6);
LABEL_49:
  uint64_t v64 = a3[16];
  uint64_t v65 = &a1[v64];
  uint64_t v66 = &a2[v64];
  int v67 = sub_1000082E8((uint64_t)&a1[v64], 1, v6);
  int v68 = sub_1000082E8((uint64_t)v66, 1, v6);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v65, v66, v6);
      sub_1000082C0((uint64_t)v65, 0, 1, v6);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  uint64_t v69 = *(void *)(v6 - 8);
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v69 + 8))(v65, v6);
LABEL_54:
    uint64_t v70 = sub_100005E5C(&qword_1000FC938);
    memcpy(v65, v66, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v69 + 24))(v65, v66, v6);
LABEL_55:
  uint64_t v71 = a3[17];
  uint64_t v72 = &a1[v71];
  uint64_t v73 = &a2[v71];
  int v74 = sub_1000082E8((uint64_t)&a1[v71], 1, v6);
  int v75 = sub_1000082E8((uint64_t)v73, 1, v6);
  if (!v74)
  {
    uint64_t v76 = *(void *)(v6 - 8);
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 24))(v72, v73, v6);
      goto LABEL_61;
    }
    (*(void (**)(char *, uint64_t))(v76 + 8))(v72, v6);
    goto LABEL_60;
  }
  if (v75)
  {
LABEL_60:
    uint64_t v77 = sub_100005E5C(&qword_1000FC938);
    memcpy(v72, v73, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v72, v73, v6);
  sub_1000082C0((uint64_t)v72, 0, 1, v6);
LABEL_61:
  uint64_t v78 = a3[18];
  int v79 = &a1[v78];
  uint64_t v80 = &a2[v78];
  uint64_t v81 = *(void *)v80;
  v79[8] = v80[8];
  *(void *)int v79 = v81;
  uint64_t v82 = a3[19];
  int v83 = &a1[v82];
  unint64_t v84 = &a2[v82];
  *(void *)int v83 = *(void *)v84;
  *((void *)v83 + 1) = *((void *)v84 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v85 = a3[20];
  int v86 = &a1[v85];
  int v87 = &a2[v85];
  *(void *)int v86 = *(void *)v87;
  *((void *)v86 + 1) = *((void *)v87 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v88 = a3[21];
  unint64_t v89 = &a1[v88];
  unint64_t v90 = &a2[v88];
  *(void *)unint64_t v89 = *(void *)v90;
  *((void *)v89 + 1) = *((void *)v90 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v91 = a3[22];
  int v92 = &a1[v91];
  int v93 = &a2[v91];
  *(void *)int v92 = *(void *)v93;
  *((void *)v92 + 1) = *((void *)v93 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v94 = a3[23];
  uint64_t v95 = &a1[v94];
  int v96 = &a2[v94];
  *(void *)uint64_t v95 = *(void *)v96;
  *((void *)v95 + 1) = *((void *)v96 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100025AB0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  if (sub_1000082E8((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_100005E5C(&qword_1000FC938);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    sub_1000082C0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (sub_1000082E8((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_100005E5C(&qword_1000FC938);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v9, v10, v6);
    sub_1000082C0((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  uint64_t v13 = a3[8];
  int v14 = &a1[v13];
  int v15 = &a2[v13];
  if (sub_1000082E8((uint64_t)&a2[v13], 1, v6))
  {
    uint64_t v16 = sub_100005E5C(&qword_1000FC938);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v14, v15, v6);
    sub_1000082C0((uint64_t)v14, 0, 1, v6);
  }
  uint64_t v17 = a3[9];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  if (sub_1000082E8((uint64_t)&a2[v17], 1, v6))
  {
    uint64_t v20 = sub_100005E5C(&qword_1000FC938);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v18, v19, v6);
    sub_1000082C0((uint64_t)v18, 0, 1, v6);
  }
  uint64_t v21 = a3[10];
  int v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  if (sub_1000082E8((uint64_t)&a2[v21], 1, v6))
  {
    uint64_t v24 = sub_100005E5C(&qword_1000FC938);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v22, v23, v6);
    sub_1000082C0((uint64_t)v22, 0, 1, v6);
  }
  uint64_t v25 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  *(_OWORD *)&a1[v25] = *(_OWORD *)&a2[v25];
  uint64_t v26 = a3[13];
  uint64_t v27 = &a1[v26];
  int v28 = &a2[v26];
  if (sub_1000082E8((uint64_t)&a2[v26], 1, v6))
  {
    uint64_t v29 = sub_100005E5C(&qword_1000FC938);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v27, v28, v6);
    sub_1000082C0((uint64_t)v27, 0, 1, v6);
  }
  uint64_t v30 = a3[14];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = type metadata accessor for URL();
  if (sub_1000082E8((uint64_t)v32, 1, v33))
  {
    uint64_t v34 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
    sub_1000082C0((uint64_t)v31, 0, 1, v33);
  }
  uint64_t v35 = a3[15];
  int v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  if (sub_1000082E8((uint64_t)&a2[v35], 1, v6))
  {
    uint64_t v38 = sub_100005E5C(&qword_1000FC938);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v36, v37, v6);
    sub_1000082C0((uint64_t)v36, 0, 1, v6);
  }
  uint64_t v39 = a3[16];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  if (sub_1000082E8((uint64_t)&a2[v39], 1, v6))
  {
    uint64_t v42 = sub_100005E5C(&qword_1000FC938);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v40, v41, v6);
    sub_1000082C0((uint64_t)v40, 0, 1, v6);
  }
  uint64_t v43 = a3[17];
  uint64_t v44 = &a1[v43];
  int v45 = &a2[v43];
  if (sub_1000082E8((uint64_t)&a2[v43], 1, v6))
  {
    uint64_t v46 = sub_100005E5C(&qword_1000FC938);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v44, v45, v6);
    sub_1000082C0((uint64_t)v44, 0, 1, v6);
  }
  uint64_t v47 = a3[18];
  uint64_t v48 = a3[19];
  uint64_t v49 = &a1[v47];
  uint64_t v50 = &a2[v47];
  *(void *)uint64_t v49 = *(void *)v50;
  v49[8] = v50[8];
  *(_OWORD *)&a1[v48] = *(_OWORD *)&a2[v48];
  uint64_t v51 = a3[21];
  *(_OWORD *)&a1[a3[20]] = *(_OWORD *)&a2[a3[20]];
  *(_OWORD *)&a1[v51] = *(_OWORD *)&a2[v51];
  uint64_t v52 = a3[23];
  *(_OWORD *)&a1[a3[22]] = *(_OWORD *)&a2[a3[22]];
  *(_OWORD *)&a1[v52] = *(_OWORD *)&a2[v52];
  return a1;
}

char *sub_100026164(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  int v7 = sub_1000082E8((uint64_t)a1, 1, v6);
  int v8 = sub_1000082E8((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      sub_1000082C0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_100005E5C(&qword_1000FC938);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = sub_1000082E8((uint64_t)&a1[v11], 1, v6);
  int v15 = sub_1000082E8((uint64_t)v13, 1, v6);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v12, v13, v6);
      sub_1000082C0((uint64_t)v12, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v16 = *(void *)(v6 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
LABEL_12:
    uint64_t v17 = sub_100005E5C(&qword_1000FC938);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
LABEL_13:
  uint64_t v18 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  int v22 = sub_1000082E8((uint64_t)&a1[v19], 1, v6);
  int v23 = sub_1000082E8((uint64_t)v21, 1, v6);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v20, v21, v6);
      sub_1000082C0((uint64_t)v20, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v24 = *(void *)(v6 - 8);
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v6);
LABEL_18:
    uint64_t v25 = sub_100005E5C(&qword_1000FC938);
    memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v20, v21, v6);
LABEL_19:
  uint64_t v26 = a3[9];
  uint64_t v27 = &a1[v26];
  int v28 = &a2[v26];
  int v29 = sub_1000082E8((uint64_t)&a1[v26], 1, v6);
  int v30 = sub_1000082E8((uint64_t)v28, 1, v6);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v27, v28, v6);
      sub_1000082C0((uint64_t)v27, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v31 = *(void *)(v6 - 8);
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v6);
LABEL_24:
    uint64_t v32 = sub_100005E5C(&qword_1000FC938);
    memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v27, v28, v6);
LABEL_25:
  uint64_t v33 = a3[10];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  int v36 = sub_1000082E8((uint64_t)&a1[v33], 1, v6);
  int v37 = sub_1000082E8((uint64_t)v35, 1, v6);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v34, v35, v6);
      sub_1000082C0((uint64_t)v34, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  uint64_t v38 = *(void *)(v6 - 8);
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v34, v6);
LABEL_30:
    uint64_t v39 = sub_100005E5C(&qword_1000FC938);
    memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v34, v35, v6);
LABEL_31:
  uint64_t v40 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  uint64_t v44 = *(void *)v42;
  uint64_t v43 = *((void *)v42 + 1);
  *(void *)uint64_t v41 = v44;
  *((void *)v41 + 1) = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[13];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  int v48 = sub_1000082E8((uint64_t)&a1[v45], 1, v6);
  int v49 = sub_1000082E8((uint64_t)v47, 1, v6);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v46, v47, v6);
      sub_1000082C0((uint64_t)v46, 0, 1, v6);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  uint64_t v50 = *(void *)(v6 - 8);
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v46, v6);
LABEL_36:
    uint64_t v51 = sub_100005E5C(&qword_1000FC938);
    memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v50 + 40))(v46, v47, v6);
LABEL_37:
  uint64_t v52 = a3[14];
  int v53 = &a1[v52];
  int v54 = &a2[v52];
  uint64_t v55 = type metadata accessor for URL();
  int v56 = sub_1000082E8((uint64_t)v53, 1, v55);
  int v57 = sub_1000082E8((uint64_t)v54, 1, v55);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
      sub_1000082C0((uint64_t)v53, 0, 1, v55);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  uint64_t v58 = *(void *)(v55 - 8);
  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v53, v55);
LABEL_42:
    uint64_t v59 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
    memcpy(v53, v54, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 40))(v53, v54, v55);
LABEL_43:
  uint64_t v60 = a3[15];
  int v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  int v63 = sub_1000082E8((uint64_t)&a1[v60], 1, v6);
  int v64 = sub_1000082E8((uint64_t)v62, 1, v6);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v61, v62, v6);
      sub_1000082C0((uint64_t)v61, 0, 1, v6);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  uint64_t v65 = *(void *)(v6 - 8);
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v61, v6);
LABEL_48:
    uint64_t v66 = sub_100005E5C(&qword_1000FC938);
    memcpy(v61, v62, *(void *)(*(void *)(v66 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v65 + 40))(v61, v62, v6);
LABEL_49:
  uint64_t v67 = a3[16];
  int v68 = &a1[v67];
  uint64_t v69 = &a2[v67];
  int v70 = sub_1000082E8((uint64_t)&a1[v67], 1, v6);
  int v71 = sub_1000082E8((uint64_t)v69, 1, v6);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v68, v69, v6);
      sub_1000082C0((uint64_t)v68, 0, 1, v6);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  uint64_t v72 = *(void *)(v6 - 8);
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v72 + 8))(v68, v6);
LABEL_54:
    uint64_t v73 = sub_100005E5C(&qword_1000FC938);
    memcpy(v68, v69, *(void *)(*(void *)(v73 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v72 + 40))(v68, v69, v6);
LABEL_55:
  uint64_t v74 = a3[17];
  int v75 = &a1[v74];
  uint64_t v76 = &a2[v74];
  int v77 = sub_1000082E8((uint64_t)&a1[v74], 1, v6);
  int v78 = sub_1000082E8((uint64_t)v76, 1, v6);
  if (!v77)
  {
    uint64_t v79 = *(void *)(v6 - 8);
    if (!v78)
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 40))(v75, v76, v6);
      goto LABEL_61;
    }
    (*(void (**)(char *, uint64_t))(v79 + 8))(v75, v6);
    goto LABEL_60;
  }
  if (v78)
  {
LABEL_60:
    uint64_t v80 = sub_100005E5C(&qword_1000FC938);
    memcpy(v75, v76, *(void *)(*(void *)(v80 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v75, v76, v6);
  sub_1000082C0((uint64_t)v75, 0, 1, v6);
LABEL_61:
  uint64_t v81 = a3[18];
  uint64_t v82 = a3[19];
  int v83 = &a1[v81];
  unint64_t v84 = &a2[v81];
  *(void *)int v83 = *(void *)v84;
  v83[8] = v84[8];
  uint64_t v85 = &a1[v82];
  int v86 = &a2[v82];
  uint64_t v88 = *(void *)v86;
  uint64_t v87 = *((void *)v86 + 1);
  *(void *)uint64_t v85 = v88;
  *((void *)v85 + 1) = v87;
  swift_bridgeObjectRelease();
  uint64_t v89 = a3[20];
  unint64_t v90 = &a1[v89];
  uint64_t v91 = &a2[v89];
  uint64_t v93 = *(void *)v91;
  uint64_t v92 = *((void *)v91 + 1);
  *(void *)unint64_t v90 = v93;
  *((void *)v90 + 1) = v92;
  swift_bridgeObjectRelease();
  uint64_t v94 = a3[21];
  uint64_t v95 = &a1[v94];
  int v96 = &a2[v94];
  uint64_t v98 = *(void *)v96;
  uint64_t v97 = *((void *)v96 + 1);
  *(void *)uint64_t v95 = v98;
  *((void *)v95 + 1) = v97;
  swift_bridgeObjectRelease();
  uint64_t v99 = a3[22];
  size_t v100 = &a1[v99];
  size_t v101 = &a2[v99];
  uint64_t v103 = *(void *)v101;
  uint64_t v102 = *((void *)v101 + 1);
  *(void *)size_t v100 = v103;
  *((void *)v100 + 1) = v102;
  swift_bridgeObjectRelease();
  uint64_t v104 = a3[23];
  BOOL v105 = &a1[v104];
  int v106 = &a2[v104];
  uint64_t v108 = *(void *)v106;
  uint64_t v107 = *((void *)v106 + 1);
  *(void *)BOOL v105 = v108;
  *((void *)v105 + 1) = v107;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100026D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100026D94);
}

uint64_t sub_100026D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100005E5C(&qword_1000FC938);
  sub_1000270C8();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_10:
    return sub_1000082E8(v9, a2, v8);
  }
  if (a2 != 2147483646)
  {
    uint64_t v8 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
    uint64_t v9 = a1 + *(int *)(a3 + 56);
    goto LABEL_10;
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 48) + 8);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  int v11 = v10 - 1;
  if (v11 < 0) {
    int v11 = -1;
  }
  return (v11 + 1);
}

uint64_t sub_100026E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100026E70);
}

void sub_100026E70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_100005E5C(&qword_1000FC938);
  sub_1000270C8();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(void *)(a1 + *(int *)(a4 + 48) + 8) = a2;
      return;
    }
    uint64_t v10 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
    uint64_t v11 = a1 + *(int *)(a4 + 56);
  }

  sub_1000082C0(v11, a2, a2, v10);
}

void sub_100026F28()
{
  sub_100027074(319, (unint64_t *)&qword_1000FCB88, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F)
  {
    sub_100027074(319, (unint64_t *)&unk_1000FCB90, (void (*)(uint64_t))&type metadata accessor for URL);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100027074(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1000270E0(uint64_t a1, void *a2)
{
  unint64_t v2 = 0xD000000000000013;
  if (a2)
  {
    _StringGuts.grow(_:)(40);
    swift_bridgeObjectRelease();
    v5._countAndFlagsBits = a1;
    v5._object = a2;
    String.append(_:)(v5);
    return 0xD000000000000026;
  }
  return v2;
}

uint64_t sub_10002718C(uint64_t a1, void *a2)
{
  sub_100005E5C(&qword_1000FCC08);
  uint64_t inited = swift_initStackObject();
  Swift::String v5 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_1000CB3B0;
  *(unsigned char *)(inited + 32) = 22;
  uint64_t v6 = 1;
  if (!a2) {
    uint64_t v6 = 2;
  }
  *(void *)(inited + 64) = &type metadata for Int;
  *(void *)(inited + 40) = v6;
  *(unsigned char *)(inited + 72) = 23;
  *(void *)(inited + 104) = &type metadata for String;
  *(void *)(inited + 80) = 0xD00000000000001BLL;
  *(void *)(inited + 88) = 0x80000001000D13B0;
  *(unsigned char *)(inited + 112) = 24;
  unint64_t v7 = sub_1000270E0(a1, a2);
  v5[18] = &type metadata for String;
  v5[15] = v7;
  v5[16] = v8;
  sub_100005E5C((uint64_t *)&unk_1000FC300);
  sub_100027288();
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_100027280()
{
  return sub_10002718C(*(void *)v0, *(void **)(v0 + 8));
}

unint64_t sub_100027288()
{
  unint64_t result = qword_1000FDA20;
  if (!qword_1000FDA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FDA20);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for LiveStatsError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for LiveStatsError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for LiveStatsError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for LiveStatsError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for LiveStatsError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveStatsError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LiveStatsError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_100027434(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_10002744C(void *result, int a2)
{
  if (a2 < 0)
  {
    *__n128 result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveStatsError()
{
  return &type metadata for LiveStatsError;
}

void sub_100027480(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  if (qword_1000FBD58 != -1) {
    swift_once();
  }
  id v12 = *(id *)(qword_10010A490 + 16);
  id v13 = [a1 configuration];
  sub_100028CE0(a4, a5, v13);

  id v14 = [a1 configuration];
  id v15 = [self currentProcess];

  id v16 = [objc_allocWithZone((Class)AMSURLRequestEncoder) initWithBag:v12];
  [v16 setUrlKnownToBeTrusted:a3 & 1];
  a6[4] = sub_10001C1C0(0, &qword_1000FCC30);
  a6[5] = &off_1000F0588;
  a6[1] = v16;
  sub_100008B98(a2, (uint64_t)(a6 + 7));
  id v17 = objc_allocWithZone((Class)type metadata accessor for AMSTaskDelegate());
  id v18 = a1;
  id v19 = v16;
  id v20 = [v17 init];

  *a6 = v18;
  a6[6] = v20;
}

uint64_t sub_100027658(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_10008DAAC(a1, v20);
  uint64_t v3 = v20[0];
  uint64_t v21 = v20[1];
  int64_t v4 = v20[3];
  unint64_t v5 = v20[4];
  int64_t v6 = (unint64_t)(v20[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v9 = v8 | (v4 << 6);
  while (1)
  {
    id v14 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    id v17 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v9);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v15, v16, v18, v19);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v10 >= v6) {
      return swift_release();
    }
    unint64_t v11 = *(void *)(v21 + 8 * v10);
    int64_t v12 = v4 + 1;
    if (!v11)
    {
      int64_t v12 = v4 + 2;
      if (v4 + 2 >= v6) {
        return swift_release();
      }
      unint64_t v11 = *(void *)(v21 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v4 + 3;
        if (v4 + 3 >= v6) {
          return swift_release();
        }
        unint64_t v11 = *(void *)(v21 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v4 + 4;
          if (v4 + 4 >= v6) {
            return swift_release();
          }
          unint64_t v11 = *(void *)(v21 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v4 + 5;
            if (v4 + 5 >= v6) {
              return swift_release();
            }
            unint64_t v11 = *(void *)(v21 + 8 * v12);
            if (!v11)
            {
              int64_t v13 = v4 + 6;
              while (v13 < v6)
              {
                unint64_t v11 = *(void *)(v21 + 8 * v13++);
                if (v11)
                {
                  int64_t v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v4 = v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_10002780C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for URLQueryItem();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  uint64_t v18 = v4;
  __chkstk_darwin(v3);
  int64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  unint64_t v8 = _swiftEmptyArrayStorage;
  if (!v7) {
    return (uint64_t)v8;
  }
  v14[1] = v1;
  uint64_t v21 = _swiftEmptyArrayStorage;
  sub_100017DF8();
  unint64_t v8 = v21;
  uint64_t result = sub_100028E74(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    unint64_t v11 = result;
    if (result < 1 << *(unsigned char *)(a1 + 32))
    {
      uint64_t v12 = a1 + 64;
      uint64_t v15 = a1 + 64;
      uint64_t v16 = v18 + 32;
      while ((*(void *)(v12 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
      {
        if (v10 != *(_DWORD *)(a1 + 36)) {
          goto LABEL_18;
        }
        uint64_t v19 = v7;
        uint64_t v20 = v10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        URLQueryItem.init(name:value:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v21 = v8;
        unint64_t v13 = v8[2];
        if (v13 >= v8[3] >> 1)
        {
          sub_100017DF8();
          unint64_t v8 = v21;
        }
        v8[2] = v13 + 1;
        uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v18 + 32))((unint64_t)v8+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v13, v6, v17);
        if ((uint64_t)v11 >= -(-1 << *(unsigned char *)(a1 + 32))) {
          goto LABEL_19;
        }
        uint64_t v12 = v15;
        if ((*(void *)(v15 + 8 * (v11 >> 6)) & (1 << v11)) == 0) {
          goto LABEL_20;
        }
        if (v20 != *(_DWORD *)(a1 + 36)) {
          goto LABEL_21;
        }
        uint64_t result = _HashTable.occupiedBucket(after:)();
        uint64_t v7 = v19 - 1;
        if (v19 == 1) {
          return (uint64_t)v8;
        }
        unint64_t v11 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          uint64_t v10 = *(unsigned int *)(a1 + 36);
          if (result < 1 << *(unsigned char *)(a1 + 32)) {
            continue;
          }
        }
        goto LABEL_22;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
  }
LABEL_22:
  __break(1u);
  return result;
}

id sub_100027AB4(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  URL._bridgeToObjectiveC()(v3);
  uint64_t v5 = v4;
  id v6 = [v2 initWithURL:v4];

  type metadata accessor for URL();
  sub_100029250();
  (*(void (**)(uint64_t))(v7 + 8))(a1);
  return v6;
}

id sub_100027B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v47 = a6;
  uint64_t v48 = a2;
  int v46 = a5;
  uint64_t v49 = a4;
  uint64_t v7 = type metadata accessor for URLError.Code();
  __chkstk_darwin(v7 - 8);
  sub_1000098F8();
  uint64_t v8 = type metadata accessor for URLError();
  sub_100009830();
  uint64_t v52 = v9;
  __chkstk_darwin(v10);
  sub_1000098F8();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for URLComponents();
  sub_100009830();
  uint64_t v50 = v15;
  __chkstk_darwin(v16);
  sub_100009864();
  uint64_t v17 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
  __chkstk_darwin(v17 - 8);
  sub_1000098F8();
  uint64_t v20 = v19 - v18;
  uint64_t v53 = type metadata accessor for URL();
  sub_100009830();
  uint64_t v45 = v21;
  __chkstk_darwin(v22);
  uint64_t v43 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v44 = (char *)&v42 - v25;
  uint64_t v26 = sub_100005E5C(&qword_1000FCC10);
  __chkstk_darwin(v26 - 8);
  sub_1000098F8();
  uint64_t v29 = v28 - v27;
  URL.absoluteString.getter();
  URLComponents.init(string:)();
  swift_bridgeObjectRelease();
  if (!sub_100029234())
  {
    swift_bridgeObjectRetain();
    URLComponents.path.setter();
  }
  if (!sub_100029234())
  {
    if (v49)
    {
      uint64_t v30 = swift_bridgeObjectRetain();
      uint64_t v31 = v51;
      sub_10002780C(v30);
      uint64_t v51 = v31;
      swift_bridgeObjectRelease();
    }
    URLComponents.queryItems.setter();
  }
  if (sub_100029234())
  {
    sub_1000082C0(v20, 1, 1, v53);
  }
  else
  {
    uint64_t v32 = v50;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v6, v29, v14);
    URLComponents.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v6, v14);
    uint64_t v33 = v53;
    if (sub_1000082E8(v20, 1, v53) != 1)
    {
      int v37 = v44;
      uint64_t v36 = v45;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v44, v20, v33);
      sub_10001C1C0(0, &qword_1000FCC18);
      uint64_t v38 = (uint64_t)v43;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v43, v37, v33);
      id v39 = sub_100027AB4(v38);
      [v39 setTimeoutInterval:10.0];
      id v34 = v39;
      NSString v40 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v34 setHTTPMethod:v40];

      __chkstk_darwin(v41);
      *(&v42 - 2) = (uint64_t)v34;
      sub_100027658(v47, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100029230);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v33);
      sub_100028AD0(v29, &qword_1000FCC10);
      return v34;
    }
  }
  sub_100028AD0(v20, (uint64_t *)&unk_1000FDA80);
  static URLError.Code.badURL.getter();
  id v34 = (id)sub_100028954((uint64_t)_swiftEmptyArrayStorage);
  sub_100028A80();
  _BridgedStoredNSError.init(_:userInfo:)();
  URLError._nsError.getter();
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v13, v8);
  swift_willThrow();
  sub_100028AD0(v29, &qword_1000FCC10);
  return v34;
}

id sub_100028084(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for URL();
  sub_100009830();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100009864();
  sub_10001C1C0(0, &qword_1000FCC18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, a1, v5);
  id v9 = sub_100027AB4(v2);
  [v9 setTimeoutInterval:10.0];
  id v10 = v9;
  NSString v11 = String._bridgeToObjectiveC()();
  [v10 setHTTPMethod:v11];

  sub_100027658(a2, sub_100029214);
  return v10;
}

void sub_1000281C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  NSString v8 = String._bridgeToObjectiveC()();
  sub_100028D38(a3, a4, (uint64_t)v8, a5);
}

uint64_t sub_100028230()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t sub_100028260()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100028268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_100008B98(a1, (uint64_t)aBlock);
  sub_100005E5C(&qword_1000FCC38);
  uint64_t v5 = swift_dynamicCast();
  if (v5)
  {
    uint64_t v6 = v24;
    [v2 setAccount:v24];

    swift_bridgeObjectRelease();
    uint64_t v5 = swift_release();
  }
  __chkstk_darwin(v5);
  uint64_t v7 = (void *)sub_100034AAC((void (*)(uint64_t *__return_ptr, uint64_t *))sub_100028F6C);
  NSString v8 = v7;
  if (v9)
  {
    sub_100028F8C(v7, 1);
    type metadata accessor for ApiAgentError();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    id v10 = [objc_allocWithZone((Class)AMSMutablePromise) init];
    uint64_t v11 = sub_100028D98(v8);
    if (v12 >> 60 == 15)
    {
      id v13 = [v2 requestByEncodingRequest:v8 parameters:0];
      [v10 finishWithPromise:v13];
    }
    else
    {
      uint64_t v14 = v11;
      unint64_t v15 = v12;
      type metadata accessor for MescalSignature();
      uint64_t v16 = (void *)sub_100098E40();
      uint64_t v17 = (void *)swift_allocObject();
      v17[2] = v8;
      v17[3] = v10;
      v17[4] = v3;
      aBlock[4] = sub_100028FE0;
      aBlock[5] = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10001D164;
      aBlock[3] = &unk_1000F05C0;
      uint64_t v18 = _Block_copy(aBlock);
      sub_100029004(v8, 0);
      id v19 = v10;
      id v20 = v3;
      swift_release();
      [v16 addFinishBlock:v18];
      _Block_release(v18);

      sub_100029010(v14, v15);
    }
    uint64_t v21 = *(int *)(sub_100005E5C(&qword_1000FDA50) + 48);
    static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100028F8C(v8, 0);
    *(void *)(a2 + v21) = v10;
  }
  sub_100005E5C(&qword_1000FCC40);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100028540@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_100005EA0(a1, v6);
  NSString v8 = (uint64_t (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  uint64_t v9 = v8();
  if (v3)
  {
    uint64_t result = swift_release();
    *a2 = v3;
  }
  else
  {
    uint64_t v11 = v9;
    uint64_t result = swift_release();
    *a3 = v11;
  }
  return result;
}

void sub_1000285E8(void *a1, uint64_t a2, id a3, void *a4, void *a5)
{
  [a3 mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10001C1C0(0, &qword_1000FCC48);
  if (swift_dynamicCast())
  {
    if (a1)
    {
      id v10 = a1;
      id v11 = [v10 base64EncodedStringWithOptions:0];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      NSString v15 = String._bridgeToObjectiveC()();
      sub_100028DFC(v12, v14, (uint64_t)v15, v25);

      id v16 = [a5 requestByEncodingRequest:v25 parameters:0];
      [a4 finishWithPromise:v16];

      goto LABEL_14;
    }
  }
  if (qword_1000FBDC8 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_10000929C(v17, (uint64_t)qword_10010A520);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    id v20 = (uint8_t *)swift_slowAlloc();
    v26[0] = swift_slowAlloc();
    *(_DWORD *)id v20 = 136315138;
    uint64_t v24 = a4;
    if (a2)
    {
      swift_getErrorValue();
      uint64_t v21 = Error.localizedDescription.getter();
      unint64_t v23 = v22;
    }
    else
    {
      unint64_t v23 = 0xE300000000000000;
      uint64_t v21 = 7104878;
    }
    sub_100017098(v21, v23, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Failed to sign request, error = %s", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  id v16 = [a5 requestByEncodingRequest:a3 parameters:0 v24];
  [a4 finishWithPromise:v16];
LABEL_14:
}

uint64_t sub_100028930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100028268(a1, a2);
}

unint64_t sub_100028954(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005E5C(&qword_1000FCC20);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100028EF4(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_100028B20(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    id v11 = (uint64_t *)(v3[6] + 16 * result);
    *id v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100028F5C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100028A80()
{
  unint64_t result = qword_1000FC0E0;
  if (!qword_1000FC0E0)
  {
    type metadata accessor for URLError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FC0E0);
  }
  return result;
}

uint64_t sub_100028AD0(uint64_t a1, uint64_t *a2)
{
  sub_100005E5C(a2);
  sub_100029250();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_100028B20(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_100028B98(a1, a2, v4);
}

unint64_t sub_100028B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

void sub_100028CE0(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a3 set_sourceApplicationBundleIdentifier:v4];
}

void sub_100028D38(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  [a4 setValue:v6 forHTTPHeaderField:a3];
}

uint64_t sub_100028D98(void *a1)
{
  id v1 = [a1 HTTPBody];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

void sub_100028DFC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a4 setValue:v6 forHTTPHeaderField:a3];
}

uint64_t sub_100028E74(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100028EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005E5C(&qword_1000FCC28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_100028F5C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100028F6C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100028540(*(void **)(v2 + 16), a1, a2);
}

void sub_100028F8C(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

uint64_t sub_100028F98()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_100028FE0(void *a1, uint64_t a2)
{
  sub_1000285E8(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_100028FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100028FFC()
{
  return swift_release();
}

id sub_100029004(void *a1, char a2)
{
  if (a2) {
    return (id)swift_errorRetain();
  }
  else {
    return a1;
  }
}

uint64_t sub_100029010(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10000835C(a1, a2);
  }
  return a1;
}

void destroy for AMSApiRequest(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for AMSApiRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for AMSApiRequest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v5 = (void *)a1[3];
  unsigned int v6 = (void *)a2[3];
  a1[3] = v6;
  id v7 = v6;

  return a1;
}

__n128 initializeWithTake for AMSApiRequest(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for AMSApiRequest(uint64_t a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

uint64_t getEnumTagSinglePayload for AMSApiRequest(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AMSApiRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AMSApiRequest()
{
  return &type metadata for AMSApiRequest;
}

void sub_100029214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000281C8(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_100029234()
{
  return sub_1000082E8(v1, 1, v0);
}

uint64_t destroy for SubscriptionOperationFactory(uint64_t a1)
{
  sub_100006178(a1);
  swift_release();
  swift_release();
  sub_100006178(a1 + 56);
  sub_100006178(a1 + 96);
  sub_100006178(a1 + 136);

  return swift_release();
}

uint64_t initializeWithCopy for SubscriptionOperationFactory(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  swift_retain();
  v8(a1 + 56, a2 + 56, v7);
  long long v9 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 96, a2 + 96);
  long long v10 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 160) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 136, a2 + 136);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for SubscriptionOperationFactory(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  sub_100008E94(a1 + 7, a2 + 7);
  sub_100008E94(a1 + 12, a2 + 12);
  sub_100008E94(a1 + 17, a2 + 17);
  a1[22] = a2[22];
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for SubscriptionOperationFactory(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB8uLL);
}

uint64_t assignWithTake for SubscriptionOperationFactory(uint64_t a1, uint64_t a2)
{
  sub_100006178(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  sub_100006178(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_100006178(a1 + 96);
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  sub_100006178(a1 + 136);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v7 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionOperationFactory(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 184))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionOperationFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 184) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 184) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionOperationFactory()
{
  return &type metadata for SubscriptionOperationFactory;
}

void sub_10002966C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,unsigned __int8 a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  sub_1000098B8();
  uint64_t v67 = v32;
  uint64_t v65 = v33;
  uint64_t v69 = v34;
  uint64_t v59 = v35;
  uint64_t v37 = v36;
  uint64_t v62 = v36;
  uint64_t v66 = v38;
  uint64_t v68 = v39;
  int v63 = v40;
  uint64_t v41 = type metadata accessor for UUID();
  sub_100009830();
  uint64_t v43 = v42;
  __chkstk_darwin(v44);
  sub_10000987C();
  uint64_t v45 = sub_100005E5C(&qword_1000FCC50);
  __chkstk_darwin(v45 - 8);
  sub_10002A6A4();
  sub_100008B98(v29, (uint64_t)v72);
  uint64_t v61 = *(void *)(v29 + 40);
  uint64_t v60 = *(void *)(v29 + 48);
  sub_100008B98(v29 + 96, (uint64_t)v71);
  sub_100008B98(v29 + 136, (uint64_t)v70);
  sub_10002A418(a27, v31, &qword_1000FCC50);
  sub_100005E5C(&qword_1000FC1C0);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1000CB470;
  *(void *)(v46 + 32) = v37;
  *(void *)(v46 + 40) = v59;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  UUID.init()();
  uint64_t v47 = UUID.uuidString.getter();
  uint64_t v49 = v48;
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v30, v41);
  *(void *)(v46 + 48) = v47;
  *(void *)(v46 + 56) = v49;
  sub_100005E5C(&qword_1000FC7D0);
  sub_100029B8C();
  uint64_t v58 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v51 = v50;
  swift_bridgeObjectRelease();
  if (a29) {
    uint64_t v52 = a28;
  }
  else {
    uint64_t v52 = 0x6C7070612E6D6F63;
  }
  if (a29) {
    uint64_t v53 = a29;
  }
  else {
    uint64_t v53 = 0xEC00000076742E65;
  }
  v63[3] = type metadata accessor for SubscriptionRegisterOperation(0);
  v63[4] = (uint64_t)&off_1000F1158;
  int v64 = sub_100029BE0(v63);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)&long long v57 = swift_bridgeObjectRetain();
  *((void *)&v57 + 1) = a21;
  *(void *)&long long v56 = v65;
  *((void *)&v56 + 1) = v67;
  *(void *)&long long v55 = a29;
  *((void *)&v55 + 1) = v69;
  *(void *)&long long v54 = v59;
  *((void *)&v54 + 1) = a28;
  sub_10003B068(v72, v61, v60, v71, v70, v68, v66, v62, (uint64_t)v64, v54, v55, v56, v57, a22, a23, a24, a25, a26, v31,
    v58,
    v51,
    v52,
    v53);
  sub_1000098A0();
}

uint64_t sub_100029A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6 = v5;
  sub_100008B98(v6, (uint64_t)v18);
  uint64_t v12 = *(void *)(v6 + 40);
  sub_100008B98(v6 + 96, (uint64_t)v17);
  sub_100008B98(v6 + 136, (uint64_t)v16);
  a5[3] = (uint64_t)&type metadata for SubscriptionUnregisterOperation;
  a5[4] = (uint64_t)&off_1000F0F80;
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = (void *)(v13 + 16);
  *a5 = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_100034B0C(v18, v12, v17, v16, a1, a2, a3, a4, v14);
}

uint64_t sub_100029B24()
{
  sub_100006178(v0 + 16);
  swift_release();
  sub_100006178(v0 + 64);
  sub_100006178(v0 + 104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 192, 7);
}

unint64_t sub_100029B8C()
{
  unint64_t result = qword_1000FC7D8;
  if (!qword_1000FC7D8)
  {
    sub_1000061D8(&qword_1000FC7D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FC7D8);
  }
  return result;
}

uint64_t *sub_100029BE0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void sub_100029C44()
{
  sub_1000098B8();
  uint64_t v3 = v2;
  char v5 = v4;
  uint64_t v7 = v6;
  uint64_t v19 = v8;
  long long v10 = v9;
  uint64_t refreshed = type metadata accessor for SportsManager.RefreshOptions();
  sub_100009830();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_10000987C();
  uint64_t v15 = *(void *)(v0 + 40);
  uint64_t v16 = *(void *)(v0 + 48);
  sub_100008B98(v0 + 96, (uint64_t)v20);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  char v17 = sub_100029D5C(v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v1, v3, refreshed);
  v10[3] = type metadata accessor for SubscriptionRefreshOperation();
  v10[4] = (uint64_t)&off_1000F5658;
  uint64_t v18 = sub_100029BE0(v10);
  sub_1000C1D70(v15, v16, v20, v19, v7, v17 & 1, v1, (uint64_t)v18);
  sub_1000098A0();
}

uint64_t sub_100029D5C(char a1)
{
  sub_10002A3E0(v1, (uint64_t)v5);
  if (a1)
  {
    if (sub_10007AD1C()) {
      char v3 = 1;
    }
    else {
      char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v3 = 1;
  }
  sub_10002A60C((uint64_t)v5);
  return v3 & 1;
}

void sub_100029DF0()
{
  sub_1000098B8();
  uint64_t v3 = v2;
  uint64_t v21 = v4;
  uint64_t v22 = v5;
  char v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = type metadata accessor for URL();
  sub_100009830();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_10002A6A4();
  uint64_t v18 = *(void *)(v0 + 40);
  sub_100008B98(v0 + 96, (uint64_t)v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v1, v9, v14);
  swift_retain();
  swift_bridgeObjectRetain();
  char v19 = sub_100029D5C(v7);
  v13[3] = type metadata accessor for SubscriptionFetchFullApsMessageOperation();
  v13[4] = (uint64_t)&off_1000F19F0;
  id v20 = sub_100029BE0(v13);
  swift_bridgeObjectRetain();
  sub_100061B10(v18, v23, v21, v11, v1, v19 & 1, v22, v3, v20);
  sub_1000098A0();
}

void sub_100029F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_1000098B8();
  uint64_t v46 = v27;
  uint64_t v47 = v26;
  uint64_t v29 = v28;
  uint64_t v48 = v30;
  uint64_t v32 = v31;
  uint64_t v44 = v33;
  uint64_t v45 = v34;
  int v36 = v35 & 1;
  uint64_t v37 = sub_100005E5C(&qword_1000FC938);
  __chkstk_darwin(v37 - 8);
  sub_10002A6A4();
  sub_10002A3E0(v24, (uint64_t)v51);
  sub_10002A168(v50);
  if (qword_1000FBD58 != -1) {
    swift_once();
  }
  uint64_t v38 = qword_10010A490;
  v50[8] = type metadata accessor for BagProvider();
  v50[9] = (uint64_t)&off_1000F07B8;
  v50[5] = v38;
  uint64_t v39 = type metadata accessor for AccountManager();
  uint64_t v40 = swift_allocObject();
  v50[13] = v39;
  v50[14] = (uint64_t)&off_1000F0408;
  v50[10] = v40;
  uint64_t v41 = *(void *)(v24 + 40);
  sub_100008B98(v24 + 56, (uint64_t)v49);
  if (v36) {
    LOBYTE(v43) = 0;
  }
  else {
    int v43 = _stringCompareWithSmolCheck(_:_:expecting:)() ^ 1;
  }
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  sub_10002A418(a24, v25, &qword_1000FC938);
  sub_10002A47C(v32);
  sub_10002A558(v47, v48, v29, v46);
  swift_bridgeObjectRetain();
  uint64_t v42 = swift_bridgeObjectRetain();
  sub_1000A2AD0(v51, v50, v41, v49, v43 & 1, (uint64_t)v32, v47, v48, v45, v29, v46, a21 & 1, v25, 0xD000000000000011, 0x80000001000D0580, a22, a23, v44, v42,
    v36);
  sub_1000098A0();
}

uint64_t sub_10002A168@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = sub_1000522C4();
  uint64_t v4 = v3;
  id v5 = [self defaultSessionConfiguration];
  id v6 = [objc_allocWithZone((Class)AMSURLSession) initWithConfiguration:v5];

  if (qword_1000FBE38 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_10010A5E8;
  v11[3] = type metadata accessor for SportsPerformanceMeasurement();
  v11[4] = &off_1000F5568;
  v11[0] = v7;
  a1[3] = (uint64_t)&type metadata for ApiAgent;
  a1[4] = (uint64_t)&off_1000F15B0;
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = (void *)(v8 + 16);
  *a1 = v8;
  swift_retain();
  sub_100027480(v6, (uint64_t)v11, 0, v2, v4, v9);
  swift_bridgeObjectRelease();

  return sub_100006178((uint64_t)v11);
}

uint64_t sub_10002A2B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(v3 + 40);
  uint64_t v8 = qword_1000FBDA0;
  swift_retain();
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_10010A4E0;
  uint64_t v17 = &off_1000F15E8;
  uint64_t v18 = &off_1000F15D8;
  uint64_t v16 = type metadata accessor for LiveActivityManager();
  *(void *)&long long v15 = v9;
  uint64_t v10 = *(void *)(v3 + 48);
  sub_100008B98(v3 + 96, (uint64_t)v14);
  a3[3] = (uint64_t)&type metadata for SubscriptionRefreshStaleActivitiesOperation;
  a3[4] = (uint64_t)&off_1000F47F8;
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = v11 + 16;
  *a3 = v11;
  swift_retain();
  swift_retain();
  return sub_10009C4F4(a1, a2, v7, &v15, v10, v14, v12, 300.0);
}

uint64_t sub_10002A3E0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10002A418(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100005E5C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *sub_10002A47C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10002A4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_10002A558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    sub_10002A5A8(a3, a4);
  }
}

uint64_t sub_10002A5A8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10002A5BC()
{
  sub_100006178(v0 + 24);
  swift_unknownObjectRelease();
  sub_100006178(v0 + 72);

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_10002A60C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10002A63C()
{
  swift_release();
  swift_release();
  sub_100006178(v0 + 40);
  swift_release();
  sub_100006178(v0 + 96);

  swift_release();

  return _swift_deallocObject(v0, 160, 7);
}

uint64_t sub_10002A6BC()
{
  uint64_t result = sub_10002A6E0();
  static Secrets.tempoAPIKey = result;
  qword_10010A400 = v1;
  return result;
}

uint64_t sub_10002A6E0()
{
  uint64_t v0 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v1 + 16) = 64;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  uint64_t v8 = v1;
  sub_10002ABA0(0xD000000000000016, 0x80000001000D1810, 0xD000000000000016, 0x80000001000D1810, (uint64_t)&v8);
  sub_10002AC7C((uint64_t)&off_1000EF000, v8);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  uint64_t v8 = v3;
  static String.Encoding.utf8.getter();
  sub_100005E5C(&qword_1000FCC58);
  sub_10002B000();
  uint64_t v4 = String.init<A>(bytes:encoding:)();
  uint64_t v6 = v5;
  uint64_t result = swift_bridgeObjectRelease();
  if (v6) {
    return v4;
  }
  __break(1u);
  return result;
}

uint64_t static Secrets.read(key:salt:)(uint64_t a1)
{
  swift_bridgeObjectRetain();
  uint64_t v2 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  uint64_t v3 = sub_10002B054(v2);
  sub_10002B07C(v3);
  swift_bridgeObjectRelease();
  sub_10002AC7C(a1, v7);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t *Secrets.tempoAPIKey.unsafeMutableAddressor()
{
  if (qword_1000FBD18 != -1) {
    swift_once();
  }
  return &static Secrets.tempoAPIKey;
}

uint64_t static Secrets.tempoAPIKey.getter()
{
  if (qword_1000FBD18 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = static Secrets.tempoAPIKey;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static Secrets.tempoAPIKey.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1000FBD18 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static Secrets.tempoAPIKey = a1;
  qword_10010A400 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Secrets.tempoAPIKey.modify())()
{
  if (qword_1000FBD18 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

unsigned __int8 *sub_10002AA88@<X0>(const void *a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, unsigned __int8 **a5@<X8>)
{
  if ((a3 & 0x1000000000000000) != 0)
  {
    unint64_t v8 = String.UTF8View._foreignCount()();
    if ((v8 & 0x8000000000000000) != 0) {
      goto LABEL_5;
    }
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
    {
LABEL_6:
      unint64_t v8 = HIBYTE(a3) & 0xF;
      goto LABEL_7;
    }
    unint64_t v8 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (HIDWORD(v8))
  {
LABEL_5:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    goto LABEL_6;
  }
LABEL_7:
  sub_10002ADD4(0);
  uint64_t result = CC_SHA512(a1, v8, (unsigned __int8 *)(*(void *)a4 + 32));
  *a5 = result;
  return result;
}

unsigned __int8 *sub_10002ABA0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      v11[0] = a1;
      v11[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v9 = v11;
    }
    else if ((a1 & 0x1000000000000000) != 0)
    {
      uint64_t v9 = (void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else
    {
      uint64_t v9 = (void *)_StringObject.sharedUTF8.getter();
    }
    sub_10002AA88(v9, a3, a4, a5, &v12);
    if (v5)
    {
      return (unsigned __int8 *)swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return v12;
    }
  }
}

void sub_10002AC7C(uint64_t a1, uint64_t a2)
{
  size_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v5 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v5 + 16) = v2;
    bzero((void *)(v5 + 32), v2);
    if (v2 > *(void *)(a2 + 16))
    {
      __break(1u);
    }
    else
    {
      for (uint64_t i = 0; i != v2; ++i)
        *(unsigned char *)(v5 + i + 32) = *(unsigned char *)(a2 + 32 + i) ^ *(unsigned char *)(a1 + 32 + i);
    }
  }
}

uint64_t static Secrets.generate(key:salt:)(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10002AE38(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v5 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  uint64_t v6 = sub_10002B054(v5);
  sub_10002B07C(v6);
  swift_bridgeObjectRelease();
  sub_10002AC7C((uint64_t)v4, v10);
  uint64_t v8 = v7;
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

void sub_10002ADD4(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (!swift_isUniquelyReferenced_nonNull_native() || a1 > *(void *)(v3 + 24) >> 1)
  {
    sub_1000157F8();
    uint64_t v3 = v4;
  }
  uint64_t *v1 = v3;
}

void *sub_10002AE38(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v2 = String.UTF8View._foreignCount()();
    if (v2) {
      goto LABEL_6;
    }
    return &_swiftEmptyArrayStorage;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    Swift::Int v2 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
LABEL_6:
  uint64_t v3 = sub_10002AF98(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = v3;
    uint64_t v5 = _StringGuts.copyUTF8(into:)();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return v4;
  }
  sub_10001C220();
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
LABEL_14:
  sub_10001C220();
  uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for Secrets()
{
  return &type metadata for Secrets;
}

void *sub_10002AF98(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100005E5C(&qword_1000FC7C0);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_10002B000()
{
  unint64_t result = qword_1000FCC60;
  if (!qword_1000FCC60)
  {
    sub_1000061D8(&qword_1000FCC58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FCC60);
  }
  return result;
}

uint64_t sub_10002B054(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  return swift_bridgeObjectRetain();
}

unsigned __int8 *sub_10002B07C(uint64_t a1, ...)
{
  va_start(va, a1);
  return sub_10002ABA0(v2, v1, v2, v1, (uint64_t)va);
}

uint64_t sub_10002B0A4()
{
  type metadata accessor for CharacterSet();
  sub_10002EDB0();
  uint64_t v2 = v1;
  __chkstk_darwin();
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ContainerConstants();
  static ContainerConstants.defaultSuiteName.getter();
  id v5 = objc_allocWithZone((Class)NSUserDefaults);
  id v6 = sub_10002EE98();
  if (!v6) {
    return 0;
  }
  id v7 = v6;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 stringForKey:v8];

  if (!v9)
  {

    return 0;
  }
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  v18[0] = v10;
  v18[1] = v12;
  static CharacterSet.whitespacesAndNewlines.getter();
  sub_10000CC08();
  uint64_t v13 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v0);
  swift_bridgeObjectRelease();

  uint64_t v16 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0) {
    uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
  }
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v13;
}

uint64_t sub_10002B244()
{
  type metadata accessor for ContainerConstants();
  static ContainerConstants.tempoUrlUserDefaultKey.getter();
  NSString v0 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  qword_10010A408 = (uint64_t)v0;
  unk_10010A410 = 0xD00000000000001FLL;
  qword_10010A418 = 0x80000001000D1A30;
  return result;
}

NSString sub_10002B2AC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10010A420 = (uint64_t)result;
  unk_10010A428 = 0xD000000000000020;
  qword_10010A430 = 0x80000001000D19D0;
  return result;
}

uint64_t sub_10002B2FC()
{
  NSString v0 = String._bridgeToObjectiveC()();
  sub_100005E5C(&qword_1000FCDC0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1000CABA0;
  *(void *)(v1 + 56) = &type metadata for String;
  *(void *)(v1 + 32) = 0x427363697274656DLL;
  *(void *)(v1 + 40) = 0xEB00000000657361;
  uint64_t v2 = Dictionary.init(dictionaryLiteral:)();
  *(void *)(v1 + 88) = sub_100005E5C(&qword_1000FC820);
  *(void *)(v1 + 64) = v2;
  sub_10001C1C0(0, &qword_1000FCDA8);
  uint64_t result = NSDictionary.init(dictionaryLiteral:)();
  qword_10010A438 = (uint64_t)v0;
  qword_10010A440 = result;
  return result;
}

NSString sub_10002B3F4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10010A448 = (uint64_t)result;
  unk_10010A450 = 0x53552D6E65;
  qword_10010A458 = 0xE500000000000000;
  return result;
}

NSString sub_10002B448()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10010A460 = (uint64_t)result;
  *(void *)algn_10010A468 = 5;
  return result;
}

NSString sub_10002B488()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10010A470 = (uint64_t)result;
  *(void *)algn_10010A478 = 10;
  return result;
}

NSString sub_10002B4C8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10010A480 = (uint64_t)result;
  *(void *)algn_10010A488 = 172800;
  return result;
}

void *sub_10002B50C()
{
  type metadata accessor for BagProvider();
  swift_allocObject();
  NSString result = sub_10002B5DC();
  qword_10010A490 = (uint64_t)result;
  return result;
}

id sub_10002B548()
{
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [(id)swift_getObjCClassFromMetadata() bagForProfile:v0 profileVersion:v1];

  return v2;
}

void *sub_10002B5DC()
{
  NSString v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100005E5C(&qword_1000FCD40);
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  __chkstk_darwin(v3);
  long long v56 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100005E5C(&qword_1000FCD48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  NSString v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C1C0(0, (unint64_t *)&qword_1000FCD50);
  id v9 = sub_10002B548();
  v0[2] = v9;
  if (qword_1000FBD20 != -1)
  {
    swift_once();
    id v9 = (id)v0[2];
  }
  uint64_t v10 = (void *)qword_10010A408;
  uint64_t v11 = unk_10010A410;
  uint64_t v12 = qword_10010A418;
  id v13 = v9;
  uint64_t v14 = sub_10002BD64(v10, v11, v12, (uint64_t)v13);

  uint64_t v60 = v14;
  uint64_t v15 = sub_100005E5C(&qword_1000FC180);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v59 = v2;
  uint64_t v17 = v16;
  v55[1] = sub_10000953C(&qword_1000FC188, &qword_1000FC180);
  v55[2] = v15;
  v55[0] = v17;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000953C(&qword_1000FCD58, &qword_1000FCD48);
  uint64_t v18 = Publisher.eraseToAnyPublisher()();
  char v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v1[3] = v18;
  if (qword_1000FBD28 != -1) {
    swift_once();
  }
  id v20 = (void *)qword_10010A420;
  uint64_t v21 = unk_10010A428;
  uint64_t v22 = qword_10010A430;
  id v23 = (id)v1[2];
  uint64_t v24 = sub_10002BD64(v20, v21, v22, (uint64_t)v23);

  uint64_t v60 = v24;
  Publisher.map<A>(_:)();
  swift_release();
  uint64_t v25 = Publisher.eraseToAnyPublisher()();
  v19(v8, v5);
  v1[4] = v25;
  if (qword_1000FBD30 != -1) {
    swift_once();
  }
  uint64_t v26 = (void *)qword_10010A438;
  uint64_t v27 = (void *)qword_10010A440;
  id v28 = (id)v1[2];
  uint64_t v29 = sub_10002C48C(v26, v27, v28);

  uint64_t v60 = v29;
  sub_100005E5C(&qword_1000FCD60);
  sub_10000953C(&qword_1000FCD68, &qword_1000FCD60);
  uint64_t v30 = v56;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000953C(&qword_1000FCD70, &qword_1000FCD40);
  uint64_t v31 = v58;
  uint64_t v32 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v30, v31);
  v1[5] = v32;
  if (qword_1000FBD38 != -1) {
    swift_once();
  }
  uint64_t v33 = (void *)qword_10010A448;
  uint64_t v34 = unk_10010A450;
  uint64_t v35 = qword_10010A458;
  id v36 = (id)v1[2];
  uint64_t v37 = sub_10002BD64(v33, v34, v35, (uint64_t)v36);

  uint64_t v60 = v37;
  uint64_t v38 = Publisher.eraseToAnyPublisher()();
  swift_release();
  v1[6] = v38;
  if (qword_1000FBD40 != -1) {
    swift_once();
  }
  uint64_t v39 = (void *)qword_10010A460;
  uint64_t v40 = *(void *)algn_10010A468;
  id v41 = (id)v1[2];
  uint64_t v42 = sub_10002CA28(v39, v40, v41);

  uint64_t v60 = v42;
  sub_100005E5C(&qword_1000FCD78);
  sub_10000953C((unint64_t *)&qword_1000FCD80, &qword_1000FCD78);
  uint64_t v43 = Publisher.eraseToAnyPublisher()();
  swift_release();
  v1[7] = v43;
  if (qword_1000FBD48 != -1) {
    swift_once();
  }
  uint64_t v44 = (void *)qword_10010A470;
  uint64_t v45 = *(void *)algn_10010A478;
  id v46 = (id)v1[2];
  uint64_t v47 = sub_10002CA28(v44, v45, v46);

  uint64_t v60 = v47;
  uint64_t v48 = Publisher.eraseToAnyPublisher()();
  swift_release();
  v1[8] = v48;
  if (qword_1000FBD50 != -1) {
    swift_once();
  }
  uint64_t v49 = (void *)qword_10010A480;
  uint64_t v50 = *(void *)algn_10010A488;
  id v51 = (id)v1[2];
  uint64_t v52 = sub_10002CA28(v49, v50, v51);

  uint64_t v60 = v52;
  uint64_t v53 = Publisher.eraseToAnyPublisher()();
  swift_release();
  v1[9] = v53;
  return v1;
}

uint64_t sub_10002BD64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a2;
  uint64_t v39 = a4;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = ((uint64_t (*)(void))__chkstk_darwin)();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v38 - v10;
  uint64_t v12 = sub_100005E5C(&qword_1000FC8E0);
  uint64_t v41 = *(void *)(v12 - 8);
  uint64_t v42 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v40 = sub_10002B0A4();
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000929C(v17, (uint64_t)qword_10010A520);
    id v18 = a1;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v19 = v18;
    id v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      v44[0] = v39;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v43 = sub_100017098(v23, v24, v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v25 = v40;
      uint64_t v43 = sub_100017098(v40, v16, v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "BagProvider: Successfully resolved preferred AMSBag(%s) value: %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      uint64_t v25 = v40;
    }
    v44[0] = v25;
    v44[1] = v16;
    Just.init(_:)();
    sub_10000953C(&qword_1000FC900, &qword_1000FC8E0);
    uint64_t v36 = v42;
    uint64_t v35 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v36);
  }
  else
  {
    Date.init()();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11, v6);
    unint64_t v26 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v27 = (char *)swift_allocObject();
    uint64_t v28 = v6;
    uint64_t v29 = a3;
    uint64_t v30 = v38;
    uint64_t v31 = (void *)v39;
    *((void *)v27 + 2) = v39;
    *((void *)v27 + 3) = a1;
    *((void *)v27 + 4) = v30;
    *((void *)v27 + 5) = v29;
    uint64_t v32 = v28;
    (*(void (**)(char *, char *))(v7 + 32))(&v27[v26], (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    sub_100005E5C(&qword_1000FCDC8);
    swift_allocObject();
    id v33 = a1;
    id v34 = v31;
    swift_bridgeObjectRetain();
    v44[0] = Future.init(_:)();
    sub_10000953C(&qword_1000FCDD0, &qword_1000FCDC8);
    uint64_t v35 = Publisher.eraseToAnyPublisher()();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v32);
  }
  return v35;
}

uint64_t sub_10002C290@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C2E0(&qword_1000FBD20, a1);
}

uint64_t sub_10002C2B8@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C2E0(&qword_1000FBD28, a1);
}

uint64_t sub_10002C2E0@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v12 - v8;
  URL.init(string:)();
  uint64_t v10 = type metadata accessor for URL();
  if (sub_1000082E8((uint64_t)v9, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a2, v9, v10);
  }
  if (*a1 != -1) {
    swift_once();
  }
  URL.init(string:)();
  uint64_t result = sub_1000082E8((uint64_t)v7, 1, v10);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a2, v7, v10);
    return sub_100028AD0((uint64_t)v9, (uint64_t *)&unk_1000FDA80);
  }
  return result;
}

uint64_t sub_10002C48C(void *a1, void *a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v20 - v11;
  Date.init()();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = a3;
  *((void *)v14 + 3) = a1;
  *((void *)v14 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v14[v13], v10, v6);
  sub_100005E5C(&qword_1000FCDB0);
  swift_allocObject();
  id v15 = a3;
  id v16 = a1;
  id v17 = a2;
  v20[1] = Future.init(_:)();
  sub_10000953C(&qword_1000FCDB8, &qword_1000FCDB0);
  uint64_t v18 = Publisher.eraseToAnyPublisher()();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  return v18;
}

void sub_10002C69C(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (qword_1000FBD30 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_10010A440;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 objectForKey:v5];

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  sub_100009F4C((uint64_t)&v19, (uint64_t)&v21);
  if (!*((void *)&v22 + 1)) {
    goto LABEL_16;
  }
  sub_10001C1C0(0, &qword_1000FCDA8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    uint64_t v11 = 0;
    unint64_t v10 = 0xE000000000000000;
    goto LABEL_18;
  }
  uint64_t v7 = *(void **)&v18[0];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [*(id *)&v18[0] objectForKey:v8];

  if (v9)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  sub_100009F4C((uint64_t)&v19, (uint64_t)&v21);
  if (!*((void *)&v22 + 1))
  {

LABEL_16:
    sub_100028AD0((uint64_t)&v21, (uint64_t *)&unk_1000FC300);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_17;
  }
  unint64_t v10 = *((void *)&v18[0] + 1);
  uint64_t v11 = *(void *)&v18[0];
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v3 objectForKey:v12];

  if (v13)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_100009F4C((uint64_t)v18, (uint64_t)&v19);
  if (!*((void *)&v20 + 1))
  {

    sub_100028AD0((uint64_t)&v19, (uint64_t *)&unk_1000FC300);
LABEL_27:
    long long v21 = 0u;
    long long v22 = 0u;
LABEL_28:
    sub_100028AD0((uint64_t)&v21, (uint64_t *)&unk_1000FC300);
    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_27;
  }
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v17 objectForKey:v14];

  if (v15)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {

    long long v19 = 0u;
    long long v20 = 0u;
  }
  sub_100009F4C((uint64_t)&v19, (uint64_t)&v21);
  if (!*((void *)&v22 + 1)) {
    goto LABEL_28;
  }
  if (swift_dynamicCast())
  {
    unint64_t v16 = *((void *)&v19 + 1);
    uint64_t v11 = v19;
    swift_bridgeObjectRelease();
    unint64_t v10 = v16;
  }
LABEL_18:
  *a2 = v11;
  a2[1] = v10;
}

uint64_t sub_10002CA28(void *a1, uint64_t a2, void *a3)
{
  uint64_t v32 = a2;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  id v9 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = sub_100005E5C(&qword_1000FCD88);
  uint64_t v34 = *(void *)(v12 - 8);
  uint64_t v35 = v12;
  __chkstk_darwin(v12);
  NSString v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v33 = sub_10002CED0();
  char v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    Date.init()();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    unint64_t v25 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v26 = (char *)swift_allocObject();
    *((void *)v26 + 2) = a3;
    *((void *)v26 + 3) = a1;
    *((void *)v26 + 4) = v32;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v26[v25], v9, v5);
    sub_100005E5C(&qword_1000FCD90);
    swift_allocObject();
    id v27 = a1;
    id v28 = a3;
    uint64_t v37 = Future.init(_:)();
    sub_10000953C(&qword_1000FCD98, &qword_1000FCD90);
    uint64_t v29 = Publisher.eraseToAnyPublisher()();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  else
  {
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000929C(v17, (uint64_t)qword_10010A520);
    id v18 = a1;
    long long v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315394;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v36 = sub_100017098(v22, v23, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2048;
      uint64_t v24 = v33;
      uint64_t v36 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "BagProvider: Successfully resolved preferred AMSBag(%s) value: %ld", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v24 = v33;
    }
    uint64_t v37 = v24;
    Just.init(_:)();
    sub_10000953C(&qword_1000FCDA0, &qword_1000FCD88);
    uint64_t v30 = v35;
    uint64_t v29 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v30);
  }
  return v29;
}

uint64_t sub_10002CED0()
{
  type metadata accessor for ContainerConstants();
  static ContainerConstants.defaultSuiteName.getter();
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  id v1 = sub_10002EE98();
  if (!v1)
  {
    long long v7 = 0u;
    long long v8 = 0u;
LABEL_11:
    sub_100028AD0((uint64_t)&v7, (uint64_t *)&unk_1000FC300);
    return 0;
  }
  uint64_t v2 = v1;
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 objectForKey:v3];

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100009F4C((uint64_t)v6, (uint64_t)&v7);
  if (!*((void *)&v8 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    return *(void *)&v6[0];
  }
  else {
    return 0;
  }
}

void sub_10002D004(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin();
  char v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  swift_retain();
  id v17 = [a3 stringForKey:a4];
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a7, v12);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v19 = (v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v20 + v18, v15, v12);
  uint64_t v21 = (void *)(v20 + v19);
  uint64_t v22 = v27;
  uint64_t v23 = v28;
  *uint64_t v21 = a4;
  v21[1] = v22;
  v21[2] = v23;
  uint64_t v24 = (uint64_t (**)(uint64_t, uint64_t, char))(v20 + ((v19 + 31) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v24 = sub_10002EC14;
  v24[1] = (uint64_t (*)(uint64_t, uint64_t, char))v16;
  aBlock[4] = sub_10002ED0C;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D760;
  aBlock[3] = &unk_1000F09A8;
  unint64_t v25 = _Block_copy(aBlock);
  id v26 = a4;
  swift_bridgeObjectRetain();
  swift_release();
  [v17 valueWithCompletion:v25];
  _Block_release(v25);
}

uint64_t sub_10002D254(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9)
{
  uint64_t v46 = a9;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  unint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v19 = a1;
    Date.init()();
    Date.timeIntervalSince(_:)();
    uint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10000929C(v22, (uint64_t)qword_10010A520);
    id v23 = v19;
    id v24 = a5;
    swift_bridgeObjectRetain_n();
    id v25 = v23;
    id v26 = v24;
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v48 = v44;
      *(_DWORD *)uint64_t v29 = 136315650;
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v45 = a8;
      uint64_t v47 = sub_100017098(v30, v31, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2048;
      uint64_t v47 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v29 + 22) = 2080;
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v47 = sub_100017098(v32, v33, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      a8 = v45;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "BagProvider: Successfully resolved AMSBag(%s) value in %f seconds. Value: %s", (uint8_t *)v29, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    a8(v41);

    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_10000929C(v34, (uint64_t)qword_10010A520);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136315138;
      if (a3)
      {
        swift_getErrorValue();
        uint64_t v38 = Error.localizedDescription.getter();
        unint64_t v40 = v39;
      }
      else
      {
        uint64_t v38 = 0;
        unint64_t v40 = 0xE000000000000000;
      }
      uint64_t v47 = sub_100017098(v38, v40, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "BagProvider: Unable to load bag. Using hardcoded default value. Error: %s", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    return ((uint64_t (*)(uint64_t, uint64_t, void))a8)(a6, a7, 0);
  }
}

void sub_10002D764(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v26 = a5;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  swift_retain();
  id v16 = [a3 integerForKey:a4];
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a6, v11);
  unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v18 = (v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v19 + v17, v14, v11);
  uint64_t v20 = (void *)(v19 + v18);
  uint64_t v21 = v26;
  *uint64_t v20 = a4;
  v20[1] = v21;
  uint64_t v22 = (uint64_t (**)(uint64_t, char))(v19 + ((v18 + 23) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v22 = sub_10002E7C4;
  v22[1] = (uint64_t (*)(uint64_t, char))v15;
  aBlock[4] = sub_10002E850;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D760;
  aBlock[3] = &unk_1000F0868;
  id v23 = _Block_copy(aBlock);
  id v24 = a4;
  swift_release();
  [v16 valueWithCompletion:v23];
  _Block_release(v23);
}

void sub_10002D9A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void (*a7)(id, void))
{
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v16 = a1;
    Date.init()();
    Date.timeIntervalSince(_:)();
    uint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10000929C(v19, (uint64_t)qword_10010A520);
    id v20 = v16;
    id v21 = a5;
    id v22 = v20;
    id v23 = v21;
    id v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v40 = v38;
      *(_DWORD *)uint64_t v26 = 136315650;
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v39 = sub_100017098(v27, v28, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2048;
      uint64_t v39 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v26 + 22) = 2048;
      id v29 = [v22 integerValue];

      uint64_t v39 = (uint64_t)v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v24, v25, "BagProvider: Successfully resolved AMSBag(%s) value in %f seconds. Value: %ld", (uint8_t *)v26, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    a7([v22 integerValue], 0);
  }
  else
  {
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_10000929C(v30, (uint64_t)qword_10010A520);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      unint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)unint64_t v33 = 136315138;
      if (a3)
      {
        swift_getErrorValue();
        uint64_t v34 = Error.localizedDescription.getter();
        unint64_t v36 = v35;
      }
      else
      {
        uint64_t v34 = 0;
        unint64_t v36 = 0xE000000000000000;
      }
      uint64_t v39 = sub_100017098(v34, v36, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "BagProvider: Unable to load bag. Using hardcoded default value. Error: %s", v33, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    a7(a6, 0);
  }
}

void sub_10002DE78(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v27 = a5;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  swift_retain();
  id v16 = [a3 dictionaryForKey:a4];
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a6, v11);
  unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v18 = (v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v19 + v17, v14, v11);
  id v20 = (void *)(v19 + v18);
  id v21 = v27;
  *id v20 = a4;
  v20[1] = v21;
  id v22 = (uint64_t (**)(uint64_t, char))(v19 + ((v18 + 23) & 0xFFFFFFFFFFFFFFF8));
  *id v22 = sub_10002E7C4;
  v22[1] = (uint64_t (*)(uint64_t, char))v15;
  aBlock[4] = sub_10002EA6C;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002D760;
  aBlock[3] = &unk_1000F0908;
  id v23 = _Block_copy(aBlock);
  id v24 = a4;
  id v25 = v21;
  swift_release();
  [v16 valueWithCompletion:v23];
  _Block_release(v23);
}

void sub_10002E0C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void (*a7)(void *, void), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v47 = a8;
    uint64_t v48 = a7;
    id v18 = a1;
    Date.init()();
    Date.timeIntervalSince(_:)();
    uint64_t v20 = v19;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_10000929C(v21, (uint64_t)qword_10010A520);
    id v22 = v18;
    id v23 = a5;
    id v24 = a6;
    id v25 = v22;
    id v26 = v23;
    id v27 = v24;
    unint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v50 = v46;
      *(_DWORD *)uint64_t v30 = 136315650;
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v49 = sub_100017098(v31, v32, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2048;
      uint64_t v49 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v30 + 22) = 2080;
      id v33 = [v25 description];
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v36 = v35;

      uint64_t v49 = sub_100017098(v34, v36, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "BagProvider: Successfully resolved AMSBag(%s) value in %f seconds. Value: %s", (uint8_t *)v30, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v44 = v25;
    v48(a1, 0);
  }
  else
  {
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_10000929C(v37, (uint64_t)qword_10010A520);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315138;
      if (a3)
      {
        swift_getErrorValue();
        uint64_t v41 = Error.localizedDescription.getter();
        unint64_t v43 = v42;
      }
      else
      {
        uint64_t v41 = 0;
        unint64_t v43 = 0xE000000000000000;
      }
      uint64_t v49 = sub_100017098(v41, v43, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "BagProvider: Unable to load bag. Using hardcoded default value. Error: %s", v40, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    a7(a6, 0);
  }
}

void sub_10002E5E4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  long long v7 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v9 = a2;
  id v8 = a4;
  v7(a2, a3, a4);
  swift_release();
}

uint64_t sub_10002E678()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_10002E6D0()
{
  sub_10002E678();

  return _swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for BagProvider()
{
  return self;
}

uint64_t sub_10002E728()
{
  type metadata accessor for Date();
  sub_10002EDB0();
  sub_10002EE28();

  uint64_t v1 = sub_10002EDFC();
  v2(v1);
  uint64_t v3 = sub_10002EE44();

  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_10002E7AC(uint64_t a1, uint64_t a2)
{
  return sub_10002E924(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_10002D764);
}

uint64_t sub_10002E7C8()
{
  type metadata accessor for Date();
  sub_100029250();
  uint64_t v2 = sub_10002EDD0();
  v3(v2);

  swift_release();
  uint64_t v4 = sub_10002EE54();

  return _swift_deallocObject(v4, v5, v6);
}

uint64_t sub_10002E850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002EA84(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10002D9A8);
}

uint64_t sub_10002E868(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002E878()
{
  return swift_release();
}

uint64_t sub_10002E880()
{
  type metadata accessor for Date();
  sub_10002EDB0();
  sub_10002EE28();

  uint64_t v1 = sub_10002EDFC();
  v2(v1);
  uint64_t v3 = sub_10002EE44();

  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_10002E90C(uint64_t a1, uint64_t a2)
{
  return sub_10002E924(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_10002DE78);
}

uint64_t sub_10002E924(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))
{
  uint64_t v6 = type metadata accessor for Date();
  sub_10002EE14(v6);
  uint64_t v8 = v3[2];
  uint64_t v9 = v3[3];
  uint64_t v10 = v3[4];
  uint64_t v11 = (char *)v3 + ((*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return a3(a1, a2, v8, v9, v10, v11);
}

uint64_t sub_10002E9A0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10002E9D8()
{
  type metadata accessor for Date();
  sub_100029250();
  uint64_t v2 = sub_10002EDD0();
  v3(v2);
  uint64_t v4 = (id *)(v0 + v1);

  swift_release();
  uint64_t v5 = sub_10002EE54();

  return _swift_deallocObject(v5, v6, v7);
}

uint64_t sub_10002EA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002EA84(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10002E0C0);
}

uint64_t sub_10002EA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = sub_10002EE78();
  sub_10000984C(v7);
  sub_10002EE64();

  return a4(v6, v5, v4);
}

uint64_t sub_10002EB20()
{
  type metadata accessor for Date();
  sub_10002EDB0();
  sub_10002EE28();

  swift_bridgeObjectRelease();
  uint64_t v1 = sub_10002EDFC();
  v2(v1);
  uint64_t v3 = sub_10002EE44();

  return _swift_deallocObject(v3, v4, v5);
}

void sub_10002EBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Date();
  sub_10002EE14(v5);
  uint64_t v7 = (void *)v2[2];
  uint64_t v8 = (void *)v2[3];
  uint64_t v9 = v2[4];
  uint64_t v10 = v2[5];
  uint64_t v11 = (uint64_t)v2 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  sub_10002D004(a1, a2, v7, v8, v9, v10, v11);
}

uint64_t sub_10002EC14(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *(uint64_t (**)(void *))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  char v7 = a3 & 1;
  return v4(v6);
}

uint64_t sub_10002EC54()
{
  type metadata accessor for Date();
  sub_100029250();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = sub_10002EE54();

  return _swift_deallocObject(v4, v5, v6);
}

uint64_t sub_10002ED0C()
{
  uint64_t v4 = sub_10002EE78();
  sub_10000984C(v4);
  sub_10002EE64();
  return sub_10002D254(v3, v2, v0, v7, v8, v9, *(void *)(v5 + 16), *(void (**)(void))(v1 + v6), *(void *)(v1 + v6 + 8));
}

uint64_t sub_10002EDD0()
{
  return v1 + v0;
}

uint64_t sub_10002EDFC()
{
  return v0 + v1;
}

uint64_t sub_10002EE14(uint64_t a1)
{
  return a1 - 8;
}

void sub_10002EE28()
{
  uint64_t v2 = *(void **)(v0 + 16);
}

uint64_t sub_10002EE44()
{
  return v0;
}

uint64_t sub_10002EE54()
{
  return v0;
}

uint64_t sub_10002EE78()
{
  return type metadata accessor for Date();
}

id sub_10002EE98()
{
  return sub_10005F5B8(v0, v1);
}

id sub_10002EEB8(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  sub_100005E5C(&qword_1000FCDD8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CABA0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v7;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = a2;
  *(void *)(inited + 56) = a3;
  swift_bridgeObjectRetain();
  uint64_t v8 = Dictionary.init(dictionaryLiteral:)();
  id v9 = objc_allocWithZone((Class)NSError);
  return sub_10002EFA4(0xD000000000000017, 0x80000001000D1A50, v5, v8);
}

id sub_10002EFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v8.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v8.super.Class isa = 0;
  }
  id v9 = [v4 initWithDomain:v7 code:a3 userInfo:v8.super.isa];

  return v9;
}

void sub_10002F054(_xpc_activity_s *a1, uint64_t a2, void (*a3)(uint64_t (*)(char a1), uint64_t))
{
  xpc_activity_state_t state = xpc_activity_get_state(a1);
  if (state == 2)
  {
    BOOL v13 = xpc_activity_set_state(a1, 4);
    if (v13)
    {
      uint64_t v3 = swift_allocObject();
      *(void *)(v3 + 16) = a1;
      long long v14 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(v3 + 24) = *(_OWORD *)a2;
      *(_OWORD *)(v3 + 40) = v14;
      *(void *)(v3 + 56) = *(void *)(a2 + 32);
      sub_10002F674(a2);
      swift_unknownObjectRetain();
      a3(sub_10002F668, v3);
      swift_release();
    }
    if (qword_1000FBDB8 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10000929C(v15, (uint64_t)qword_10010A4F0);
    sub_10002F6BC();
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315394;
      swift_bridgeObjectRetain();
      sub_100017098(v3, v4, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10002F5FC(a2);
      sub_10002F5FC(a2);
      sub_10002F5FC(a2);
      *(_WORD *)(v17 + 12) = 2080;
      if (v13) {
        uint64_t v18 = 0x49554E49544E4F43;
      }
      else {
        uint64_t v18 = 0xD000000000000012;
      }
      if (v13) {
        unint64_t v19 = 0xEA0000000000474ELL;
      }
      else {
        unint64_t v19 = 0x80000001000D1A70;
      }
      sub_100017098(v18, v19, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v16, "Activity '%s' completed with state %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();
      goto LABEL_21;
    }
    goto LABEL_27;
  }
  if (state)
  {
LABEL_22:
    sub_10002F6A0();
    return;
  }
  xpc_object_t v9 = xpc_activity_copy_criteria(a1);
  if (v9 && xpc_dictionary_get_BOOL(v9, XPC_ACTIVITY_REPEATING))
  {
    if (qword_1000FBDB8 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000929C(v10, (uint64_t)qword_10010A4F0);
    sub_10002F6BC();
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      swift_bridgeObjectRetain();
      sub_100017098(v3, v4, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_10002F5FC(a2);
      sub_10002F5FC(a2);
      sub_10002F5FC(a2);
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "Activity '%s' has been registered, continuing.", v12, 0xCu);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();
      swift_unknownObjectRelease();
LABEL_21:

      goto LABEL_22;
    }
    swift_unknownObjectRelease();
LABEL_27:
    sub_10002F5FC(a2);
    sub_10002F5FC(a2);
    sub_10002F6A0();

    return;
  }
  xpc_object_t v20 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_BOOL(v20, XPC_ACTIVITY_REPEATING, *(unsigned char *)(a2 + 16));
  xpc_dictionary_set_int64(v20, XPC_ACTIVITY_DELAY, *(void *)(a2 + 24));
  xpc_dictionary_set_int64(v20, XPC_ACTIVITY_GRACE_PERIOD, *(void *)(a2 + 32));
  xpc_dictionary_set_string(v20, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
  xpc_dictionary_set_BOOL(v20, XPC_ACTIVITY_ALLOW_BATTERY, 1);
  xpc_activity_set_criteria(a1, v20);
  swift_unknownObjectRelease();
  sub_10002F6A0();
  swift_unknownObjectRelease();
}

uint64_t sub_10002F558(char a1, xpc_activity_t activity)
{
  if (a1)
  {
    uint64_t result = xpc_activity_set_state(activity, 5);
    if (result)
    {
      uint64_t result = (uint64_t)xpc_activity_copy_criteria(activity);
      if (result)
      {
        xpc_activity_set_criteria(activity, (xpc_object_t)result);
        return swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    uint64_t v4 = String.utf8CString.getter();
    xpc_activity_unregister((const char *)(v4 + 32));
    return swift_release();
  }
  return result;
}

uint64_t sub_10002F5FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10002F628()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10002F668(char a1)
{
  return sub_10002F558(a1, *(xpc_activity_t *)(v1 + 16));
}

uint64_t sub_10002F674(uint64_t a1)
{
  return a1;
}

uint64_t sub_10002F6BC()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_10002F6DC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_10002F73C(uint64_t a1)
{
  *(void *)(v1 + 200) = &_swiftEmptyArrayStorage;
  sub_10002A3E0(a1, v1 + 16);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0xD000000000000026;
  *(void *)(v4 + 24) = 0x80000001000D1AE0;
  *(unsigned char *)(v4 + 32) = 1;
  *(int64x2_t *)(v4 + 40) = vdupq_n_s64(0x12CuLL);
  *(void *)(v4 + 56) = sub_10002FD90;
  *(void *)(v4 + 64) = v3;
  v7[4] = sub_10002FDD8;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10002F6DC;
  v7[3] = &unk_1000F0A48;
  uint64_t v5 = _Block_copy(v7);
  swift_retain_n();
  swift_release();
  xpc_activity_register("com.apple.sportsd.liveactivity-refresh", XPC_ACTIVITY_CHECK_IN, v5);
  _Block_release(v5);
  swift_release();
  sub_10002A60C(a1);
  swift_release();
  return v1;
}

uint64_t sub_10002F8C8(uint64_t (*a1)(void), uint64_t a2)
{
  if (!swift_weakLoadStrong()) {
    return a1();
  }
  sub_10002F948((uint64_t)a1, a2);
  return swift_release();
}

uint64_t sub_10002F948(uint64_t a1, uint64_t a2)
{
  sub_10002A2B0((uint64_t)j___s10Foundation4DateVACycfC, 0, v8);
  uint64_t v4 = v9;
  uint64_t v5 = v10;
  sub_100005EA0(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  swift_retain();
  sub_100005E5C(&qword_1000FCEE8);
  sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
  Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  sub_100006178((uint64_t)v8);
  swift_beginAccess();
  sub_100005E5C(&qword_1000FCEF8);
  sub_10000953C(&qword_1000FCF00, &qword_1000FCEF8);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10002FB08(void *a1, uint64_t (*a2)(uint64_t))
{
  if (*a1)
  {
    swift_errorRetain();
    if (qword_1000FBDB8 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000929C(v3, (uint64_t)qword_10010A4F0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      NSString v7 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 138412290;
      swift_errorRetain();
      uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *NSString v7 = v9;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "LiveActivityRefreshXPCServer: Error refreshing activities: %@", v6, 0xCu);
      sub_100005E5C((uint64_t *)&unk_1000FDA60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  return a2(1);
}

uint64_t sub_10002FCF4()
{
  sub_10002A60C(v0 + 16);
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 208, 7);
}

uint64_t type metadata accessor for LiveActivityRefreshXPCServer()
{
  return self;
}

uint64_t sub_10002FD58()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10002FD90(uint64_t (*a1)(void), uint64_t a2)
{
  return sub_10002F8C8(a1, a2);
}

uint64_t sub_10002FD98()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_10002FDD8(_xpc_activity_s *a1)
{
  sub_10002F054(a1, v1 + 16, *(void (**)(uint64_t (*)(char), uint64_t))(v1 + 56));
}

uint64_t sub_10002FDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002FDF4()
{
  return swift_release();
}

uint64_t sub_10002FDFC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10002FE34(void *a1)
{
  return sub_10002FB08(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

void *sub_10002FE3C()
{
  type metadata accessor for ServicesRepository();
  swift_allocObject();
  uint64_t result = sub_10002FE78();
  qword_10010A498 = (uint64_t)result;
  return result;
}

void *sub_10002FE78()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  __chkstk_darwin(v2 - 8);
  v0[36] = &_swiftEmptySetSingleton;
  type metadata accessor for ApsMessageProcessor();
  uint64_t v3 = sub_1000C5BB8();
  uint64_t v4 = (uint64_t *)swift_retain();
  os_log_type_t v5 = sub_100031364(v4);
  uint64_t v6 = type metadata accessor for ApsListener();
  v1[26] = v5;
  uint64_t v7 = (uint64_t)(v1 + 26);
  v1[29] = v6;
  v1[30] = &off_1000F02D0;
  memset(v65, 0, 40);
  if (sub_100034710()) {
    _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  uint64_t v62 = v3;
  swift_bridgeObjectRelease();
  if (qword_1000FBD58 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_10010A490;
  uint64_t v67 = (ValueMetadata *)type metadata accessor for BagProvider();
  uint64_t v68 = &off_1000F07B8;
  uint64_t v61 = v67;
  *(void *)&long long v66 = v8;
  swift_retain();
  sub_100004AF4();
  if (qword_1000FBE08 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_10010A5C0;
  uint64_t v10 = qword_10010A490;
  sub_100008B98((uint64_t)(v1 + 26), (uint64_t)&v66);
  uint64_t v11 = sub_10000A014((uint64_t)&v66, (uint64_t)v67);
  __chkstk_darwin(v11);
  BOOL v13 = (uint64_t *)((char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  sub_1000060E8((uint64_t)v69, (uint64_t)v65);
  uint64_t v15 = *v13;
  uint64_t v63 = v10;
  swift_retain();
  uint64_t v64 = v9;
  swift_retain();
  uint64_t v16 = sub_100031574(0xD000000000000022, 0x80000001000D1C50, v15, v10, v65, v9, (uint64_t (*)(void))type metadata accessor for SportsKitRequestXPCServer, (uint64_t (*)(uint64_t, uint64_t, void, void, uint64_t, void, id))sub_10003103C);
  sub_100006178((uint64_t)&v66);
  v1[2] = v16;
  unint64_t v59 = sub_100031484();
  id v17 = sub_1000308A0();
  v1[35] = v17;
  [v17 setDelegate:v16];
  [v17 resume];
  id v18 = [self defaultManager];
  NSFileManager.currentContainerURL.getter();

  type metadata accessor for PlaysStore();
  swift_allocObject();
  uint64_t v19 = PlaysStore.init(storeUrl:)();
  uint64_t v60 = v1;
  uint64_t v20 = v19;
  uint64_t v21 = type metadata accessor for PersistentStore();
  uint64_t v57 = PersistentStore.__allocating_init()();
  sub_100030BD8(v65);
  uint64_t v22 = sub_10000A014((uint64_t)v65, v65[3]);
  __chkstk_darwin(v22);
  id v24 = (long long *)((char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(long long *))(v25 + 16))(v24);
  uint64_t v58 = v7;
  uint64_t v67 = &type metadata for ImageDownloader;
  uint64_t v68 = &off_1000F35A8;
  long long v66 = *v24;
  type metadata accessor for LogoRepository();
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = sub_10000A014((uint64_t)&v66, (uint64_t)&type metadata for ImageDownloader);
  __chkstk_darwin(v27);
  os_log_type_t v29 = (_OWORD *)((char *)&v57 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_OWORD *))(v30 + 16))(v29);
  *(void *)(v26 + 40) = &type metadata for ImageDownloader;
  *(void *)(v26 + 48) = &off_1000F35A8;
  *(_OWORD *)(v26 + 16) = *v29;
  sub_100006178((uint64_t)&v66);
  sub_100006178((uint64_t)v65);
  type metadata accessor for DataRepository();
  uint64_t v31 = (void *)swift_allocObject();
  v31[5] = v21;
  v31[6] = &protocol witness table for PersistentStore;
  v31[2] = v57;
  v31[7] = &_swiftEmptySetSingleton;
  v31[8] = v26;
  sub_100008B98(v7, (uint64_t)v65);
  v65[10] = (uint64_t)v61;
  v65[7] = v63;
  v65[11] = (uint64_t)&off_1000F07B8;
  v65[15] = (uint64_t)&type metadata for TempoApiAgent;
  v65[16] = (uint64_t)&off_1000EFBF8;
  v65[12] = swift_allocObject();
  sub_1000060E8((uint64_t)v69, v65[12] + 16);
  v65[20] = type metadata accessor for WatchlistSuppressNotificationsXPCConnectionManager();
  v65[21] = (uint64_t)&off_1000F4218;
  v65[17] = v64;
  v65[5] = (uint64_t)v31;
  v65[6] = v20;
  unint64_t v32 = (objc_class *)type metadata accessor for ActivityAuthorization();
  id v33 = objc_allocWithZone(v32);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v61 = (ValueMetadata *)v20;
  uint64_t v34 = v60;
  swift_retain();
  id v35 = [v33 init];
  unint64_t v36 = sub_1000522C4();
  uint64_t v38 = v37;
  uint64_t v67 = (ValueMetadata *)v32;
  uint64_t v68 = &off_1000F15C8;
  *(void *)&long long v66 = v35;
  type metadata accessor for ActivityCapUtility();
  os_log_type_t v39 = (void *)swift_allocObject();
  uint64_t v40 = sub_10000A014((uint64_t)&v66, (uint64_t)v32);
  __chkstk_darwin(v40);
  unint64_t v42 = (uint64_t *)((char *)&v57 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v43 + 16))(v42);
  uint64_t v44 = *v42;
  v39[5] = v32;
  v39[6] = &off_1000F15C8;
  v39[2] = v44;
  void v39[7] = v36;
  v39[8] = v38;
  sub_100006178((uint64_t)&v66);
  v65[22] = (uint64_t)v39;
  memcpy(v34 + 3, v65, 0xB8uLL);
  sub_10002A3E0((uint64_t)(v34 + 3), (uint64_t)v65);
  uint64_t v45 = v62;
  swift_beginAccess();
  sub_10003150C((uint64_t)v65, (uint64_t)(v45 + 17));
  swift_endAccess();
  sub_100008B98(v58, (uint64_t)&v66);
  uint64_t v46 = sub_10000A014((uint64_t)&v66, (uint64_t)v67);
  __chkstk_darwin(v46);
  uint64_t v48 = (uint64_t *)((char *)&v57 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v49 + 16))(v48);
  sub_1000060E8((uint64_t)v69, (uint64_t)v65);
  uint64_t v50 = *v48;
  uint64_t v51 = v63;
  swift_retain();
  uint64_t v52 = v64;
  swift_retain();
  uint64_t v53 = sub_100031574(0xD00000000000002ALL, 0x80000001000D1CA0, v50, v51, v65, v52, (uint64_t (*)(void))type metadata accessor for DirectActivityRequestXPCServer, (uint64_t (*)(uint64_t, uint64_t, void, void, uint64_t, void, id))sub_1000311D0);
  sub_100006178((uint64_t)&v66);
  v34[32] = v53;
  id v54 = sub_1000308A0();
  v34[33] = v54;
  [v54 setDelegate:v53];
  [v54 resume];
  type metadata accessor for UnsubscribeRetryXPCServer();
  if (qword_1000FBD68 != -1) {
    swift_once();
  }
  v34[31] = sub_100032B10(qword_10010A4A0 + 16, (void *)v34[2], (uint64_t)(v34 + 3));
  sub_10002A3E0((uint64_t)(v34 + 3), (uint64_t)v65);
  type metadata accessor for LiveActivityRefreshXPCServer();
  swift_allocObject();
  uint64_t v55 = sub_10002F73C((uint64_t)v65);
  swift_release();
  swift_release();
  swift_release();
  sub_100031858((uint64_t)v69);
  v34[34] = v55;
  return v34;
}

id sub_1000308A0()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithMachServiceName:v1];

  return v2;
}

uint64_t sub_100030914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_100029A38(a1, a2, a3, a4, v12);
  uint64_t v8 = v13;
  uint64_t v9 = v14;
  sub_100005EA0(v12, v13);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a5;
  *(void *)(v10 + 24) = a6;
  swift_retain();
  sub_100005E5C(&qword_1000FCEE8);
  sub_1000318EC((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
  Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  sub_100006178((uint64_t)v12);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_100030A68(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  if (!*a1) {
    return a2(0);
  }
  swift_errorRetain();
  a2(v3);

  return swift_errorRelease();
}

id *sub_100030AE0()
{
  sub_10002A60C((uint64_t)(v0 + 3));
  sub_100006178((uint64_t)(v0 + 26));
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100030B40()
{
  sub_100030AE0();

  return _swift_deallocClassInstance(v0, 296, 7);
}

uint64_t type metadata accessor for ServicesRepository()
{
  return self;
}

uint64_t sub_100030B98()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100030BD0(uint64_t *a1)
{
  return sub_100030A68(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

void sub_100030BD8(void *a1@<X8>)
{
  id v2 = [self sharedSession];
  unint64_t v3 = sub_1000522C4();
  uint64_t v5 = v4;
  id v6 = [self defaultManager];
  id v7 = v2;
  id v8 = [v7 configuration];
  sub_100030CAC(v3, v5, v8);

  a1[3] = &type metadata for ImageDownloader;
  a1[4] = &off_1000F35A8;
  *a1 = v7;
  a1[1] = v6;
}

void sub_100030CAC(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 set_sourceApplicationBundleIdentifier:v4];
}

char *sub_100030D10(uint64_t a1, char *a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_100005E5C(&qword_1000FC940);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[3] = type metadata accessor for ApsMessageProcessor();
  v21[4] = &off_1000F5A28;
  v21[0] = a1;
  *(void *)&a2[OBJC_IVAR____TtC7sportsd11ApsListener_apsConnection] = 0;
  id v8 = &a2[OBJC_IVAR____TtC7sportsd11ApsListener_currentAPSConnectionEnvironment];
  *(void *)id v8 = 0;
  *((void *)v8 + 1) = 0xE000000000000000;
  *(void *)&a2[OBJC_IVAR____TtC7sportsd11ApsListener_cancellables] = &_swiftEmptySetSingleton;
  uint64_t v9 = OBJC_IVAR____TtC7sportsd11ApsListener_tokenPublisher;
  sub_100005E5C(&qword_1000FC8E8);
  swift_allocObject();
  uint64_t v10 = a2;
  *(void *)&a2[v9] = PassthroughSubject.init()();
  uint64_t v11 = &v10[OBJC_IVAR____TtC7sportsd11ApsListener_pushToken];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  *(void *)&v10[OBJC_IVAR____TtC7sportsd11ApsListener_scoreboardProcessor] = 0;
  *(void *)&v10[OBJC_IVAR____TtC7sportsd11ApsListener_cloudChannelAuditDebouncer] = 0;
  uint64_t v12 = OBJC_IVAR____TtC7sportsd11ApsListener_connection;
  sub_100005E5C(&qword_1000FCFF8);
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 28) = 0;
  *(void *)(v13 + 16) = 0;
  *(unsigned char *)(v13 + 24) = 2;
  *(void *)&v10[v12] = v13;
  sub_100008B98((uint64_t)v21, (uint64_t)&v10[OBJC_IVAR____TtC7sportsd11ApsListener_messageProcessing]);

  v20.receiver = v10;
  v20.super_class = ObjectType;
  id v14 = [super init];
  type metadata accessor for ScoreboardSubscriptionMessageProcessor();
  swift_allocObject();
  uint64_t v15 = (char *)v14;
  *(void *)&v15[OBJC_IVAR____TtC7sportsd11ApsListener_scoreboardProcessor] = sub_1000453DC();
  swift_release();
  type metadata accessor for SportsEnvironmentPublisher();
  swift_initStaticObject();
  uint64_t v19 = sub_10000C69C();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100005E5C(&qword_1000FC5A0);
  sub_1000318EC(&qword_1000FC5A8, &qword_1000FC5A0);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  sub_10000D3E4();
  uint64_t v16 = type metadata accessor for TaskPriority();
  sub_1000082C0((uint64_t)v7, 1, 1, v16);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  sub_100038C24((uint64_t)v7, (uint64_t)&unk_1000FD000, v17);
  swift_release();

  sub_100006178((uint64_t)v21);
  return v15;
}

id sub_10003103C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5, uint64_t a6, char *a7)
{
  ObjectType = (objc_class *)swift_getObjectType();
  v22[3] = type metadata accessor for ApsListener();
  v22[4] = &off_1000F02D0;
  v22[0] = a3;
  v21[3] = type metadata accessor for BagProvider();
  v21[4] = &off_1000F07B8;
  v21[0] = a4;
  v20[3] = &type metadata for TempoApiAgent;
  v20[4] = &off_1000EFBF8;
  v20[0] = swift_allocObject();
  memcpy((void *)(v20[0] + 16), a5, 0x60uLL);
  v19[3] = type metadata accessor for WatchlistSuppressNotificationsXPCConnectionManager();
  void v19[4] = &off_1000F4218;
  v19[0] = a6;
  uint64_t v15 = &a7[OBJC_IVAR____TtC7sportsd25SportsKitRequestXPCServer_entitlement];
  *(void *)uint64_t v15 = a1;
  *((void *)v15 + 1) = a2;
  sub_100008B98((uint64_t)v22, (uint64_t)&a7[OBJC_IVAR____TtC7sportsd25SportsKitRequestXPCServer_apsListening]);
  sub_100008B98((uint64_t)v21, (uint64_t)&a7[OBJC_IVAR____TtC7sportsd25SportsKitRequestXPCServer_metadataProvider]);
  sub_100008B98((uint64_t)v20, (uint64_t)&a7[OBJC_IVAR____TtC7sportsd25SportsKitRequestXPCServer_tempoApiProvider]);
  sub_100008B98((uint64_t)v19, (uint64_t)&a7[OBJC_IVAR____TtC7sportsd25SportsKitRequestXPCServer_supressionManager]);
  v18.receiver = a7;
  v18.super_class = ObjectType;
  id v16 = [super init];
  sub_100006178((uint64_t)v19);
  sub_100006178((uint64_t)v20);
  sub_100006178((uint64_t)v21);
  sub_100006178((uint64_t)v22);
  return v16;
}

id sub_1000311D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5, uint64_t a6, char *a7)
{
  ObjectType = (objc_class *)swift_getObjectType();
  v22[3] = type metadata accessor for ApsListener();
  v22[4] = &off_1000F02D0;
  v22[0] = a3;
  v21[3] = type metadata accessor for BagProvider();
  v21[4] = &off_1000F07B8;
  v21[0] = a4;
  v20[3] = &type metadata for TempoApiAgent;
  v20[4] = &off_1000EFBF8;
  v20[0] = swift_allocObject();
  memcpy((void *)(v20[0] + 16), a5, 0x60uLL);
  v19[3] = type metadata accessor for WatchlistSuppressNotificationsXPCConnectionManager();
  void v19[4] = &off_1000F4218;
  v19[0] = a6;
  uint64_t v15 = &a7[OBJC_IVAR____TtC7sportsd30DirectActivityRequestXPCServer_entitlement];
  *(void *)uint64_t v15 = a1;
  *((void *)v15 + 1) = a2;
  sub_100008B98((uint64_t)v22, (uint64_t)&a7[OBJC_IVAR____TtC7sportsd30DirectActivityRequestXPCServer_apsListening]);
  sub_100008B98((uint64_t)v21, (uint64_t)&a7[OBJC_IVAR____TtC7sportsd30DirectActivityRequestXPCServer_metadataProvider]);
  sub_100008B98((uint64_t)v20, (uint64_t)&a7[OBJC_IVAR____TtC7sportsd30DirectActivityRequestXPCServer_tempoApiProvider]);
  sub_100008B98((uint64_t)v19, (uint64_t)&a7[OBJC_IVAR____TtC7sportsd30DirectActivityRequestXPCServer_supressionManager]);
  v18.receiver = a7;
  v18.super_class = ObjectType;
  id v16 = [super init];
  sub_100006178((uint64_t)v19);
  sub_100006178((uint64_t)v20);
  sub_100006178((uint64_t)v21);
  sub_100006178((uint64_t)v22);
  return v16;
}

char *sub_100031364(uint64_t *a1)
{
  uint64_t v10 = *a1;
  uint64_t v11 = &off_1000F5A28;
  v9[0] = a1;
  uint64_t v1 = (char *)objc_allocWithZone((Class)type metadata accessor for ApsListener());
  uint64_t v2 = sub_10000A014((uint64_t)v9, v10);
  __chkstk_darwin(v2);
  NSString v4 = (void *)((char *)&v9[-1] - v3);
  (*(void (**)(char *))(v5 + 16))((char *)&v9[-1] - v3);
  uint64_t v6 = sub_100030D10(*v4, v1);
  sub_100006178((uint64_t)v9);
  return v6;
}

unint64_t sub_100031484()
{
  unint64_t result = qword_1000FCFE8;
  if (!qword_1000FCFE8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000FCFE8);
  }
  return result;
}

uint64_t sub_1000314C4()
{
  sub_100006178(v0 + 16);
  swift_release();
  sub_100006178(v0 + 72);

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_10003150C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005E5C(&qword_1000FCFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100031574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5, uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, void, void, uint64_t, void, id))
{
  uint64_t v47 = type metadata accessor for ApsListener();
  uint64_t v48 = &off_1000F02D0;
  v46[0] = a3;
  uint64_t v44 = type metadata accessor for BagProvider();
  uint64_t v45 = &off_1000F07B8;
  v43[0] = a4;
  v42[3] = &type metadata for TempoApiAgent;
  v42[4] = &off_1000EFBF8;
  v42[0] = swift_allocObject();
  memcpy((void *)(v42[0] + 16), a5, 0x60uLL);
  uint64_t v40 = type metadata accessor for WatchlistSuppressNotificationsXPCConnectionManager();
  uint64_t v41 = &off_1000F4218;
  v39[0] = a6;
  id v16 = objc_allocWithZone((Class)a7(0));
  sub_10000A014((uint64_t)v46, v47);
  sub_10000C568();
  __chkstk_darwin(v17);
  sub_1000098F8();
  objc_super v20 = (void *)(v19 - v18);
  (*(void (**)(uint64_t))(v21 + 16))(v19 - v18);
  sub_10000A014((uint64_t)v43, v44);
  sub_10000C568();
  __chkstk_darwin(v22);
  sub_1000098F8();
  uint64_t v25 = (void *)(v24 - v23);
  sub_100031B14();
  v26();
  sub_10000A014((uint64_t)v42, (uint64_t)&type metadata for TempoApiAgent);
  sub_10000C568();
  __chkstk_darwin(v27);
  sub_1000098F8();
  uint64_t v30 = v29 - v28;
  sub_100031B14();
  v31();
  sub_10000A014((uint64_t)v39, v40);
  sub_10000C568();
  __chkstk_darwin(v32);
  sub_1000098F8();
  id v35 = (void *)(v34 - v33);
  sub_100031B14();
  v36();
  uint64_t v37 = a8(a1, a2, *v20, *v25, v30, *v35, v16);
  sub_100006178((uint64_t)v39);
  sub_100006178((uint64_t)v42);
  sub_100006178((uint64_t)v43);
  sub_100006178((uint64_t)v46);
  return v37;
}

uint64_t sub_100031858(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000318AC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000318E4()
{
}

uint64_t sub_1000318EC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000061D8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003193C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100031974()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100031A20;
  return sub_10000D59C();
}

uint64_t sub_100031A20()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void *sub_100031B24()
{
  uint64_t v1 = type metadata accessor for PersistentStore();
  uint64_t v2 = PersistentStore.__allocating_init()();
  sub_100030BD8(v16);
  sub_10000A014((uint64_t)v16, v16[3]);
  sub_10000C568();
  __chkstk_darwin(v3);
  uint64_t v5 = sub_100032AB0(v4, v13);
  v6(v5);
  id v14 = &type metadata for ImageDownloader;
  uint64_t v15 = &off_1000F35A8;
  long long v13 = *v0;
  type metadata accessor for LogoRepository();
  uint64_t v7 = swift_allocObject();
  sub_10000A014((uint64_t)&v13, (uint64_t)&type metadata for ImageDownloader);
  sub_10000C568();
  __chkstk_darwin(v8);
  uint64_t v10 = sub_100032AB0(v9, v13);
  v11(v10);
  *(void *)(v7 + 40) = &type metadata for ImageDownloader;
  *(void *)(v7 + 48) = &off_1000F35A8;
  *(_OWORD *)(v7 + 16) = *v0;
  sub_100006178((uint64_t)&v13);
  sub_100006178((uint64_t)v16);
  type metadata accessor for DataRepository();
  uint64_t result = (void *)swift_allocObject();
  result[5] = v1;
  result[6] = &protocol witness table for PersistentStore;
  result[2] = v2;
  result[7] = &_swiftEmptySetSingleton;
  result[8] = v7;
  qword_10010A4A0 = (uint64_t)result;
  return result;
}

uint64_t sub_100031CAC()
{
  sub_100005EA0((void *)(v0 + 16), *(void *)(v0 + 40));
  dispatch thunk of PersistentStorable.initializeStoreIfNeeded()();
  uint64_t v1 = swift_allocObject();
  swift_weakInit();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0xD00000000000001FLL;
  *(void *)(v2 + 24) = 0x80000001000D1D40;
  *(unsigned char *)(v2 + 32) = 0;
  *(int64x2_t *)(v2 + 40) = vdupq_n_s64(0x12CuLL);
  *(void *)(v2 + 56) = sub_1000329B0;
  *(void *)(v2 + 64) = v1;
  v5[4] = sub_10002FDD8;
  v5[5] = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_10002F6DC;
  v5[3] = &unk_1000F0B88;
  uint64_t v3 = _Block_copy(v5);
  swift_retain_n();
  swift_release();
  xpc_activity_register("com.apple.sportsd.event-cleanup", XPC_ACTIVITY_CHECK_IN, v3);
  _Block_release(v3);
  return swift_release_n();
}

uint64_t sub_100031E28(uint64_t (*a1)(void), uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return a1();
  }
  uint64_t v5 = Strong;
  if (qword_1000FBD58 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)swift_allocObject();
  void v6[2] = v5;
  v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100005E5C(&qword_1000FCD78);
  sub_100032A5C();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_100031F98(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return a3(1);
}

uint64_t sub_1000321C8()
{
  sub_100005EA0((void *)(v0 + 16), *(void *)(v0 + 40));
  return dispatch thunk of PersistentStorable.writeAPSMessage(_:canonicalId:isConventionalOrUnified:)();
}

uint64_t sub_100032460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1000324A0(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of PersistentStorable.writeRegistrationResponse(_:canonicalId:isConventionalOrUnified:));
}

uint64_t sub_100032480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1000324A0(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of PersistentStorable.writeCurrentEventStateResponse(_:canonicalId:isConventionalOrUnified:));
}

uint64_t sub_1000324A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = v6[5];
  uint64_t v14 = v6[6];
  sub_100005EA0(v6 + 2, v13);
  return a6(a1, a2, a3, a4, a5, v13, v14);
}

uint64_t sub_100032754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SportsLogoSize();
  sub_10000C568();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100005EA0((void *)(v4 + 16), *(void *)(v4 + 40));
  uint64_t v8 = *(void (**)(uint64_t))(v6 + 104);
  uint64_t v9 = sub_100032AFC();
  v8(v9);
  sub_100032AD0();
  uint64_t v10 = dispatch thunk of PersistentStorable.pathForLogo(_:size:fileExtension:)();
  uint64_t v22 = v11;
  uint64_t v23 = v10;
  uint64_t v12 = *(void (**)(uint64_t))(v6 + 8);
  uint64_t v13 = sub_100032AE8();
  v12(v13);
  sub_100005EA0((void *)(v4 + 16), *(void *)(v4 + 40));
  uint64_t v14 = sub_100032AFC();
  v8(v14);
  sub_100032AD0();
  uint64_t v15 = dispatch thunk of PersistentStorable.pathForLogo(_:size:fileExtension:)();
  uint64_t v17 = v16;
  uint64_t v18 = sub_100032AE8();
  v12(v18);
  uint64_t v19 = sub_1000B7D2C(a1, a2, a3, a4, v23, v22, v15, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1000328F0()
{
  sub_100006178(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_100032920()
{
  sub_1000328F0();

  return _swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for DataRepository()
{
  return self;
}

uint64_t sub_100032978()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000329B0(uint64_t (*a1)(void), uint64_t a2)
{
  return sub_100031E28(a1, a2);
}

uint64_t sub_1000329B8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1000329F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032A08()
{
  return swift_release();
}

uint64_t sub_100032A10()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100032A50(uint64_t a1)
{
  return sub_100031F98(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

unint64_t sub_100032A5C()
{
  unint64_t result = qword_1000FCD80;
  if (!qword_1000FCD80)
  {
    sub_1000061D8(&qword_1000FCD78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FCD80);
  }
  return result;
}

char *sub_100032AB0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100032AE8()
{
  return v0;
}

uint64_t sub_100032AFC()
{
  return v0;
}

uint64_t sub_100032B10(uint64_t a1, void *a2, uint64_t a3)
{
  sub_100008B98(a1, (uint64_t)v9);
  sub_10002A3E0(a3, (uint64_t)v8);
  uint64_t v5 = swift_allocObject();
  sub_100032B88(v9, (uint64_t)a2, v8);
  id v6 = a2;
  sub_100032BE0();
  return v5;
}

void *sub_100032B88(long long *a1, uint64_t a2, const void *a3)
{
  v3[31] = &_swiftEmptySetSingleton;
  sub_100008CAC(a1, (uint64_t)(v3 + 2));
  v3[7] = a2;
  memcpy(v3 + 8, a3, 0xB8uLL);
  return v3;
}

void sub_100032BE0()
{
  unint64_t v1 = v0;
  if (qword_1000FBDD8 != -1) {
    goto LABEL_37;
  }
  while (1)
  {
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000929C(v2, (uint64_t)qword_10010A550);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)sub_1000346F8();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Checking to see if we need to retry unsubscribe for subscriptions...", v5, 2u);
      sub_10001C2C8();
    }

    sub_100005EA0((void *)(v1 + 16), *(void *)(v1 + 40));
    uint64_t v6 = dispatch thunk of PersistentStorable.allEventSubscriptionsToConsumers(isConventionalOrUnified:)();
    swift_bridgeObjectRetain_n();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v7, v8))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_24;
    }
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v10 = *(void *)(v6 + 16);
    if (!v10) {
      break;
    }
    uint64_t v37 = v9;
    unint64_t v42 = &_swiftEmptyArrayStorage;
    sub_100017D58();
    uint64_t v11 = sub_100028E70(v6);
    if ((v11 & 0x8000000000000000) == 0)
    {
      unint64_t v13 = v11;
      if (v11 < 1 << *(unsigned char *)(v6 + 32))
      {
        uint64_t v14 = v6 + 64;
        uint64_t v38 = v6 + 64;
        while ((*(void *)(v14 + 8 * (v13 >> 6)) & (1 << v13)) != 0)
        {
          if (v12 != *(_DWORD *)(v6 + 36)) {
            goto LABEL_32;
          }
          uint64_t v39 = v10;
          int v40 = v12;
          uint64_t v15 = *(void *)(v6 + 56);
          uint64_t v16 = (os_log_t *)(*(void *)(v6 + 48) + 16 * v13);
          uint64_t v17 = v6;
          os_log_t v18 = v16[1];
          uint64_t v19 = *(void *)(v15 + 8 * v13);
          osos_log_t log = *v16;
          unint64_t v42 = &_swiftEmptyArrayStorage;
          unint64_t v1 = *((void *)&_swiftEmptyArrayStorage + 2);
          unint64_t v20 = *((void *)&_swiftEmptyArrayStorage + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v1 >= v20 >> 1) {
            sub_100017D58();
          }
          *((void *)&_swiftEmptyArrayStorage + 2) = v1 + 1;
          uint64_t v21 = (void *)((char *)&_swiftEmptyArrayStorage + 24 * v1);
          v21[4] = oslog;
          void v21[5] = v18;
          v21[6] = v19;
          if ((uint64_t)v13 >= -(-1 << *(unsigned char *)(v17 + 32))) {
            goto LABEL_33;
          }
          uint64_t v14 = v38;
          if ((*(void *)(v38 + 8 * (v13 >> 6)) & (1 << v13)) == 0) {
            goto LABEL_34;
          }
          uint64_t v6 = v17;
          if (v40 != *(_DWORD *)(v17 + 36)) {
            goto LABEL_35;
          }
          uint64_t v22 = _HashTable.occupiedBucket(after:)();
          uint64_t v10 = v39 - 1;
          if (v39 == 1)
          {
            uint64_t v23 = v17;
            uint64_t v9 = v37;
            goto LABEL_23;
          }
          unint64_t v13 = v22;
          if ((v22 & 0x8000000000000000) == 0)
          {
            int v12 = *(_DWORD *)(v17 + 36);
            if (v22 < 1 << *(unsigned char *)(v17 + 32)) {
              continue;
            }
          }
          goto LABEL_36;
        }
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
      }
    }
LABEL_36:
    __break(1u);
LABEL_37:
    swift_once();
  }
  uint64_t v23 = v6;
LABEL_23:
  sub_100005E5C(&qword_1000FC988);
  uint64_t v24 = Array.description.getter();
  unint64_t v26 = v25;
  swift_bridgeObjectRelease();
  unint64_t v42 = (void *)sub_100017098(v24, v26, aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  uint64_t v6 = v23;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v7, v8, "Checking to see if we need to retry unsubscribe for subscriptions %s ...", v9, 0xCu);
  swift_arrayDestroy();
  sub_10001C2C8();
  sub_10001C2C8();

LABEL_24:
  uint64_t v27 = sub_1000342A0(v6);
  swift_bridgeObjectRelease();
  unint64_t v28 = v27[2];
  swift_release();
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.debug.getter();
  BOOL v31 = os_log_type_enabled(v29, v30);
  if (v28)
  {
    if (v31)
    {
      uint64_t v32 = (uint8_t *)sub_1000346F8();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Subscriptions found with empty consumers. Starting XPC task to retry unsubscribe", v32, 2u);
      sub_10001C2C8();
    }

    uint64_t v33 = swift_allocObject();
    swift_weakInit();
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = 0xD00000000000002ALL;
    *(void *)(v34 + 24) = 0x80000001000D1DB0;
    *(unsigned char *)(v34 + 32) = 1;
    *(_DWORD *)(v34 + 33) = v42;
    *(_DWORD *)(v34 + 36) = *(_DWORD *)((char *)&v42 + 3);
    *(_OWORD *)(v34 + 40) = xmmword_1000CB640;
    *(void *)(v34 + 56) = sub_100034240;
    *(void *)(v34 + 64) = v33;
    aBlock[4] = (uint64_t)sub_10002FDD8;
    aBlock[5] = v34;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10002F6DC;
    aBlock[3] = (uint64_t)&unk_1000F0C28;
    id v35 = _Block_copy(aBlock);
    swift_retain_n();
    swift_release();
    xpc_activity_register("com.apple.sportsd.subscription-unsubscribe", XPC_ACTIVITY_CHECK_IN, v35);
    _Block_release(v35);
    swift_release_n();
  }
  else
  {
    if (v31)
    {
      unint64_t v36 = (uint8_t *)sub_1000346F8();
      *(_WORD *)unint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "No subscriptions with empty consumers found.", v36, 2u);
      sub_10001C2C8();
    }
  }
}

uint64_t sub_100033284(void (*a1)(uint64_t), uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      sub_100008B98(Strong + 16, (uint64_t)v8);
      swift_release();
    }
    else
    {
      uint64_t v9 = 0;
      memset(v8, 0, sizeof(v8));
    }
    swift_weakInit();
    sub_100034530((uint64_t)v8, (uint64_t)v6);
    swift_release();
    sub_100034598((uint64_t)v8);
    sub_100033BC0(a1, a2, (uint64_t)v7, (uint64_t)v6);
    sub_100034598((uint64_t)v6);
    return swift_weakDestroy();
  }
  return result;
}

uint64_t sub_100033374(uint64_t a1, unint64_t a2)
{
  if (qword_1000FBDD8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000929C(v4, (uint64_t)qword_10010A550);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    v14[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_100017098(a1, a2, v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "UnsubscribeRetryXPCServer: Unsubscribing from event '%s' since it has no consumers.", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100029A38(0, 0xE000000000000000, a1, a2, v14);
  uint64_t v8 = v15;
  uint64_t v9 = v16;
  sub_100005EA0(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  int v12 = (void *)swift_allocObject();
  v12[2] = v11;
  uint64_t v12[3] = a1;
  v12[4] = a2;
  swift_bridgeObjectRetain_n();
  sub_100005E5C(&qword_1000FCEE8);
  sub_100034684();
  Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  swift_release();
  sub_100006178((uint64_t)v14);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

void sub_10003368C(void *a1, uint64_t a2, unint64_t a3)
{
  if (*a1)
  {
    swift_errorRetain();
    if (qword_1000FBDD8 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000929C(v5, (uint64_t)qword_10010A550);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315394;
      swift_bridgeObjectRetain();
      sub_100017098(a2, a3, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v7 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v8 = Error.localizedDescription.getter();
      sub_100017098(v8, v9, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Error unsubscribing from %s with no consumers: %s\"", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_100033904()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100008B98(result + 16, (uint64_t)v1);
    swift_release();
    sub_100005EA0(v1, v1[3]);
    dispatch thunk of PersistentStorable.deleteSportingEventSubscription(canonicalId:isConventionalOrUnified:)();
    return sub_100006178((uint64_t)v1);
  }
  return result;
}

uint64_t sub_100033BC0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  if (qword_1000FBDD8 != -1) {
    goto LABEL_41;
  }
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000929C(v7, (uint64_t)qword_10010A550);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Unsubscribe retry XPC task is starting", v10, 2u);
    swift_slowDealloc();
  }

  sub_100034530(a4, (uint64_t)&v34);
  if (!v36)
  {
    sub_100034598((uint64_t)&v34);
    int v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Unsubscribe retry XPC task ran and will continue to run", v14, 2u);
      swift_slowDealloc();
    }

    a1(1);
    return swift_release();
  }
  sub_100008CAC(&v34, (uint64_t)v33);
  sub_100005EA0(v33, v33[3]);
  uint64_t v11 = dispatch thunk of PersistentStorable.allEventSubscriptionsToConsumers(isConventionalOrUnified:)();
  uint64_t v15 = sub_1000342A0(v11);
  swift_bridgeObjectRelease();
  if (v15[2])
  {
    uint64_t v32 = a1;
    swift_weakInit();
    sub_10008DAAC((uint64_t)v15, &v34);
    a1 = (void (*)(uint64_t))*((void *)&v34 + 1);
    uint64_t v16 = v34;
    uint64_t v17 = v35;
    int64_t v18 = v36;
    a4 = v37;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    int64_t v19 = (unint64_t)(v17 + 64) >> 6;
    while (1)
    {
      if (a4)
      {
        unint64_t v20 = __clz(__rbit64(a4));
        a4 &= a4 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
          __break(1u);
LABEL_41:
          swift_once();
          goto LABEL_3;
        }
        if (v22 >= v19) {
          goto LABEL_34;
        }
        unint64_t v23 = *((void *)a1 + v22);
        int64_t v24 = v18 + 1;
        if (!v23)
        {
          int64_t v24 = v18 + 2;
          if (v18 + 2 >= v19) {
            goto LABEL_34;
          }
          unint64_t v23 = *((void *)a1 + v24);
          if (!v23)
          {
            int64_t v24 = v18 + 3;
            if (v18 + 3 >= v19) {
              goto LABEL_34;
            }
            unint64_t v23 = *((void *)a1 + v24);
            if (!v23)
            {
              int64_t v24 = v18 + 4;
              if (v18 + 4 >= v19) {
                goto LABEL_34;
              }
              unint64_t v23 = *((void *)a1 + v24);
              if (!v23)
              {
                int64_t v24 = v18 + 5;
                if (v18 + 5 >= v19) {
                  goto LABEL_34;
                }
                unint64_t v23 = *((void *)a1 + v24);
                if (!v23)
                {
                  int64_t v24 = v18 + 6;
                  if (v18 + 6 >= v19) {
                    goto LABEL_34;
                  }
                  unint64_t v23 = *((void *)a1 + v24);
                  if (!v23)
                  {
                    int64_t v25 = v18 + 7;
                    while (v25 < v19)
                    {
                      unint64_t v23 = *((void *)a1 + v25++);
                      if (v23)
                      {
                        int64_t v24 = v25 - 1;
                        goto LABEL_31;
                      }
                    }
LABEL_34:
                    swift_release();
                    swift_release();
                    swift_weakDestroy();
                    a1 = v32;
                    goto LABEL_36;
                  }
                }
              }
            }
          }
        }
LABEL_31:
        a4 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
        int64_t v18 = v24;
      }
      unint64_t v26 = (uint64_t *)(*(void *)(v16 + 48) + 16 * v21);
      uint64_t v27 = *v26;
      unint64_t v28 = v26[1];
      if (swift_weakLoadStrong())
      {
        sub_100033374(v27, v28);
        swift_release();
      }
    }
  }
  swift_release();
LABEL_36:
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v29, v30))
  {
    BOOL v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Unsubscribe retry XPC task ran and will continue to run", v31, 2u);
    swift_slowDealloc();
  }

  a1(1);
  swift_release();
  return sub_100006178((uint64_t)v33);
}

uint64_t sub_100034178()
{
  sub_100006178(v0 + 16);

  sub_10002A60C(v0 + 64);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000341B0()
{
  sub_100034178();

  return _swift_deallocClassInstance(v0, 256, 7);
}

uint64_t type metadata accessor for UnsubscribeRetryXPCServer()
{
  return self;
}

uint64_t sub_100034208()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100034240(void (*a1)(uint64_t), uint64_t a2)
{
  return sub_100033284(a1, a2);
}

uint64_t sub_100034248()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100034288(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100034298()
{
  return swift_release();
}

unint64_t *sub_1000342A0(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = (unint64_t *)isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    sub_1000A1BD4(0, v4, (uint64_t *)((char *)&v8 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0)));
    uint64_t v5 = sub_1000346D8();
    if (v1) {
      swift_willThrow();
    }
    else {
      return v5;
    }
  }
  else
  {
    os_log_type_t v6 = (void *)swift_slowAlloc();
    sub_1000A1BD4(0, v4, v6);
    uint64_t v2 = sub_1000346D8();
    swift_slowDealloc();
  }
  return v2;
}

unint64_t *sub_1000343E4(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_20;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10) {
      return (unint64_t *)sub_1000A2098(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        return (unint64_t *)sub_1000A2098(result, a2, v4, a3);
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          return (unint64_t *)sub_1000A2098(result, a2, v4, a3);
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_20:
    if (!*(void *)(*(void *)(*(void *)(a3 + 56) + 8 * v12) + 16))
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1000A2098(result, a2, v4, a3);
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    return (unint64_t *)sub_1000A2098(result, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_1000A2098(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100034530(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005E5C(&qword_1000FD1F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100034598(uint64_t a1)
{
  uint64_t v2 = sub_100005E5C(&qword_1000FD1F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000345F8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100034630(void *a1)
{
  sub_10003368C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100034638()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100034678()
{
  return sub_100033904();
}

unint64_t sub_100034684()
{
  unint64_t result = qword_1000FCEF0;
  if (!qword_1000FCEF0)
  {
    sub_1000061D8(&qword_1000FCEE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FCEF0);
  }
  return result;
}

unint64_t *sub_1000346D8()
{
  return sub_1000343E4(v2, v1, v0);
}

uint64_t sub_1000346F8()
{
  return swift_slowAlloc();
}

uint64_t sub_100034710()
{
  type metadata accessor for ContainerConstants();
  uint64_t v0 = static ContainerConstants.defaultSuiteName.getter();
  uint64_t v2 = v1;
  id v3 = objc_allocWithZone((Class)NSUserDefaults);
  id v4 = sub_10005F5B8(v0, v2);
  if (!v4) {
    goto LABEL_17;
  }
  int64_t v5 = v4;
  id v6 = [v4 dictionaryRepresentation];
  uint64_t v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v7 + 16))
  {

    swift_bridgeObjectRelease();
LABEL_17:
    char v21 = 0;
    return v21 & 1;
  }
  sub_1000175F0();
  char v9 = v8;
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {

    goto LABEL_17;
  }
  NSString v10 = String._bridgeToObjectiveC()();
  unsigned int v11 = [v5 BOOLForKey:v10];

  BOOL v12 = v11 == 0;
  if (v11) {
    uint64_t v13 = 0x6E456C616373656DLL;
  }
  else {
    uint64_t v13 = 0x69446C616373656DLL;
  }
  if (v12) {
    unint64_t v14 = (void *)0xEE0064656C626173;
  }
  else {
    unint64_t v14 = (void *)0xED000064656C6261;
  }
  if (qword_1000FBDC0 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000929C(v15, (uint64_t)qword_10010A508);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    int64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)int64_t v18 = 136315138;
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      unint64_t v19 = 0xE400000000000000;
      uint64_t v20 = 1819047278;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = v13;
      unint64_t v19 = (unint64_t)v14;
    }
    sub_100017098(v20, v19, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "authentication defaults value: %s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v25._countAndFlagsBits = v13;
  v25._object = v14;
  char v23 = sub_100034A58(v25);

  char v21 = (v23 == 2) | v23;
  return v21 & 1;
}

uint64_t sub_100034A58(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000EEFB0, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_100034AAC(void (*a1)(uint64_t *__return_ptr, uint64_t *))
{
  a1(&v3, &v2);
  return v3;
}

uint64_t sub_100034B0C@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v16 = type metadata accessor for Date();
  sub_10000C568();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_1000098F8();
  uint64_t v22 = v21 - v20;
  sub_100008CAC(a1, (uint64_t)a9);
  a9[5] = a2;
  sub_100008CAC(a3, (uint64_t)(a9 + 6));
  sub_100008CAC(a4, (uint64_t)(a9 + 11));
  a9[16] = a5;
  a9[17] = a6;
  a9[18] = a7;
  a9[19] = a8;
  Date.init()();
  uint64_t v23 = sub_1000A268C();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v22, v16);
  a9[20] = v23;
  uint64_t v24 = (objc_class *)type metadata accessor for ActivityAuthorization();
  id v25 = [objc_allocWithZone(v24) init];
  unint64_t v26 = sub_1000522C4();
  uint64_t v28 = v27;
  void v39[3] = v24;
  v39[4] = &off_1000F15C8;
  v39[0] = v25;
  type metadata accessor for ActivityCapUtility();
  uint64_t v29 = (void *)swift_allocObject();
  sub_10000A014((uint64_t)v39, (uint64_t)v24);
  sub_10000C568();
  __chkstk_darwin(v30);
  sub_1000098F8();
  uint64_t v33 = (uint64_t *)(v32 - v31);
  (*(void (**)(uint64_t))(v34 + 16))(v32 - v31);
  uint64_t v35 = *v33;
  v29[5] = v24;
  v29[6] = &off_1000F15C8;
  v29[2] = v35;
  v29[7] = v26;
  v29[8] = v28;
  uint64_t result = sub_100006178((uint64_t)v39);
  a9[21] = v29;
  return result;
}

uint64_t sub_100034CF8()
{
  uint64_t v1 = (void *)v0;
  sub_100005E5C(&qword_1000FD208);
  sub_10000C568();
  uint64_t v38 = v3;
  uint64_t v39 = v2;
  __chkstk_darwin(v2);
  sub_10000C58C();
  uint64_t v37 = v4;
  sub_100005E5C(&qword_1000FD210);
  sub_10000C568();
  uint64_t v42 = v6;
  uint64_t v43 = v5;
  __chkstk_darwin(v5);
  sub_10000C58C();
  uint64_t v40 = v7;
  uint64_t v8 = sub_100005E5C(&qword_1000FD218);
  sub_10000C568();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_10000C58C();
  uint64_t v41 = v12;
  if (qword_1000FBDC8 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000929C(v13, (uint64_t)qword_10010A520);
  sub_100037CEC(v0, (uint64_t)v47);
  unint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  uint64_t v44 = v10;
  if (!os_log_type_enabled(v14, v15))
  {
    sub_100037D24((uint64_t)v47);
    goto LABEL_16;
  }
  uint64_t v16 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)uint64_t v16 = 67109120;
  if (v47[16] == 0xD000000000000011 && v47[17] == 0x80000001000D0580)
  {
    sub_100037CEC((uint64_t)v47, (uint64_t)v46);
  }
  else
  {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100037CEC((uint64_t)v47, (uint64_t)v46);
    if ((v17 & 1) == 0)
    {
      sub_100037D24((uint64_t)v46);
      goto LABEL_14;
    }
  }
  if (sub_10007AD1C())
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    sub_100037D24((uint64_t)v46);
    if (v18) {
      goto LABEL_12;
    }
LABEL_14:
    int v19 = 0;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  sub_100037D24((uint64_t)v46);
LABEL_12:
  int v19 = 1;
LABEL_15:
  sub_100037D24((uint64_t)v47);
  LODWORD(v47[0]) = v19;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  _os_log_impl((void *)&_mh_execute_header, v14, v15, "Tempo start /unregister for isLowCapLiveActivity=%{BOOL}d", v16, 8u);
  sub_10001C2C8();
LABEL_16:

  uint64_t v20 = v1[5];
  sub_100035508();
  sub_100005EA0((void *)(v20 + 16), *(void *)(v20 + 40));
  uint64_t v21 = dispatch thunk of PersistentStorable.retrieveEventSubscription(canonicalId:isConventionalOrUnified:)();
  if (v21)
  {
    uint64_t v22 = (void *)v21;
    if (sub_100035508())
    {
      uint64_t v23 = (void *)SportingEventSubscription.byChangingConsumers(_:)();
    }
    else
    {
      SportingEventSubscription.consumers.getter();
      sub_100005E5C(&qword_1000FC1C0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1000CABA0;
      uint64_t v32 = v1[17];
      *(void *)(inited + 32) = v1[16];
      *(void *)(inited + 40) = v32;
      swift_bridgeObjectRetain();
      sub_100019994();
      swift_setDeallocating();
      sub_10009C1AC();
      uint64_t v23 = (void *)SportingEventSubscription.byChangingConsumers(_:)();
      swift_release();
    }
    uint64_t v33 = sub_1000358AC(v22, v23);
  }
  else
  {
    uint64_t v36 = v8;
    sub_100037CEC((uint64_t)v1, (uint64_t)v47);
    sub_100037CEC((uint64_t)v1, (uint64_t)v46);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315394;
      uint64_t v28 = v47[18];
      unint64_t v27 = v47[19];
      swift_bridgeObjectRetain();
      sub_100017098(v28, v27, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100037D24((uint64_t)v47);
      *(_WORD *)(v26 + 12) = 2080;
      uint64_t v29 = v46[16];
      unint64_t v30 = v46[17];
      swift_bridgeObjectRetain();
      sub_100017098(v29, v30, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100037D24((uint64_t)v46);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Tempo /unregister canonicalId=%s, remove consumer=%s, though there are no subscription exists", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();
    }
    else
    {
      sub_100037D24((uint64_t)v47);
      sub_100037D24((uint64_t)v46);
    }

    sub_100005EA0(v1, v1[3]);
    v46[0] = sub_10000DBE0();
    sub_100037CEC((uint64_t)v1, (uint64_t)v47);
    uint64_t v34 = swift_allocObject();
    memcpy((void *)(v34 + 16), v47, 0xB0uLL);
    static Subscribers.Demand.unlimited.getter();
    sub_100005E5C(&qword_1000FC180);
    sub_100005E5C(&qword_1000FD220);
    sub_10000953C(&qword_1000FC188, &qword_1000FC180);
    sub_10000953C(&qword_1000FD228, &qword_1000FD220);
    Publisher<>.flatMap<A>(maxPublishers:_:)();
    swift_release();
    swift_release();
    sub_10000953C(&qword_1000FD230, &qword_1000FD208);
    Publisher.map<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    sub_100005E5C(&qword_1000FCEE8);
    sub_10000953C(&qword_1000FD238, &qword_1000FD210);
    sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
    Publisher.catch<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v43);
    sub_10000953C(&qword_1000FD240, &qword_1000FD218);
    uint64_t v33 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v41, v36);
  }
  return v33;
}

uint64_t sub_100035508()
{
  if (*(void *)(v0 + 128) == 0xD000000000000011 && *(void *)(v0 + 136) == 0x80000001000D0580)
  {
    sub_100037CEC(v0, (uint64_t)v4);
  }
  else
  {
    char v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100037CEC(v0, (uint64_t)v4);
    char v2 = 0;
    if ((v1 & 1) == 0) {
      goto LABEL_9;
    }
  }
  if (sub_10007AD1C()) {
    char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  else {
    char v2 = 1;
  }
  swift_bridgeObjectRelease();
LABEL_9:
  sub_100037D24((uint64_t)v4);
  return v2 & 1;
}

uint64_t sub_1000355F4@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  sub_100005EA0((void *)(a1 + 48), *(void *)(a1 + 72));
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = 47;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  v4._object = (void *)0x80000001000D0630;
  v4._countAndFlagsBits = 0xD000000000000021;
  String.append(_:)(v4);
  sub_1000356D0();
  sub_10000629C();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v6;
  return result;
}

uint64_t sub_1000356D0()
{
  char v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005E5C(&qword_1000FCC08);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CB6A0;
  *(unsigned char *)(inited + 32) = 2;
  uint64_t v8 = v1[18];
  uint64_t v7 = v1[19];
  *(void *)(inited + 64) = &type metadata for String;
  *(void *)(inited + 40) = v8;
  *(void *)(inited + 48) = v7;
  *(unsigned char *)(inited + 72) = 7;
  swift_bridgeObjectRetain();
  Date.init()();
  uint64_t v9 = sub_1000A268C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)(inited + 104) = &type metadata for UInt64;
  *(void *)(inited + 80) = v9;
  *(unsigned char *)(inited + 112) = 8;
  uint64_t v10 = v1[20];
  *(void *)(inited + 144) = &type metadata for UInt64;
  *(void *)(inited + 120) = v10;
  *(unsigned char *)(inited + 152) = 43;
  char v11 = sub_100035508();
  *(void *)(inited + 184) = &type metadata for Bool;
  *(unsigned char *)(inited + 160) = (v11 & 1) == 0;
  *(unsigned char *)(inited + 192) = 44;
  *(void *)(inited + 224) = &type metadata for EventType.EventName;
  *(unsigned char *)(inited + 200) = 1;
  sub_100005E5C((uint64_t *)&unk_1000FC300);
  sub_100027288();
  uint64_t v12 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v13 = sub_100037660(v12);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1000358AC(void *a1, void *a2)
{
  int v106 = a1;
  uint64_t v3 = sub_100005E5C(&qword_1000FD248);
  int v111 = *(uint64_t (***)(char *, char *))(v3 - 8);
  v112 = (char *)v3;
  __chkstk_darwin(v3);
  uint64_t v109 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100005E5C(&qword_1000FD250);
  uint64_t v114 = *(void *)(v5 - 8);
  uint64_t v115 = v5;
  __chkstk_darwin(v5);
  int v110 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v113 = (char *)&v91 - v8;
  uint64_t v9 = sub_100005E5C(&qword_1000FD258);
  uint64_t v93 = *(void *)(v9 - 8);
  uint64_t v94 = v9;
  __chkstk_darwin(v9);
  uint64_t v92 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100005E5C(&qword_1000FD260);
  uint64_t v96 = *(void *)(v11 - 8);
  uint64_t v97 = v11;
  __chkstk_darwin(v11);
  uint64_t v95 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100005E5C(&qword_1000FD268);
  uint64_t v100 = *(void *)(v13 - 8);
  uint64_t v101 = v13;
  __chkstk_darwin(v13);
  uint64_t v98 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100005E5C(&qword_1000FD270);
  uint64_t v102 = *(void *)(v15 - 8);
  uint64_t v103 = v15;
  __chkstk_darwin(v15);
  uint64_t v99 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100005E5C(&qword_1000FD278);
  uint64_t v104 = *(void *)(v17 - 8);
  uint64_t v105 = v17;
  __chkstk_darwin(v17);
  int v19 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100005E5C(&qword_1000FD280);
  uint64_t v107 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100005E5C(&qword_1000FD288);
  uint64_t v108 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  os_log_type_t v25 = (uint64_t (**)(char *, char *))((char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = sub_100005E5C(&qword_1000FD290);
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v116 = a2;
  uint64_t v30 = *(void *)(SportingEventSubscription.consumers.getter() + 16);
  swift_bridgeObjectRelease();
  if (v30)
  {
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    sub_10000929C(v31, (uint64_t)qword_10010A520);
    uint64_t v32 = v117;
    sub_100037CEC(v117, (uint64_t)v123);
    sub_100037CEC(v32, (uint64_t)v120);
    id v33 = v116;
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      id v116 = (id)swift_slowAlloc();
      uint64_t v119 = (uint64_t)v116;
      *(_DWORD *)uint64_t v36 = 136315650;
      uint64_t v37 = v123[18];
      unint64_t v38 = v123[19];
      swift_bridgeObjectRetain();
      uint64_t v118 = sub_100017098(v37, v38, &v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100037D24((uint64_t)v123);
      *(_WORD *)(v36 + 12) = 2080;
      uint64_t v39 = v121;
      unint64_t v40 = v122;
      swift_bridgeObjectRetain();
      uint64_t v118 = sub_100017098(v39, v40, &v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100037D24((uint64_t)v120);
      *(_WORD *)(v36 + 22) = 2080;
      SportingEventSubscription.consumers.getter();
      uint64_t v41 = Set.description.getter();
      unint64_t v43 = v42;
      swift_bridgeObjectRelease();
      uint64_t v118 = sub_100017098(v41, v43, &v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Tempo skip /unregister canonicalId=%s, remove consumer=%s, active consumers=%s", (uint8_t *)v36, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100037D24((uint64_t)v123);
      sub_100037D24((uint64_t)v120);
    }
    LOBYTE(v123[0]) = 1;
    uint64_t v53 = v109;
    Just.init(_:)();
    sub_100005E5C((uint64_t *)&unk_1000FDA30);
    id v54 = v110;
    uint64_t v55 = v112;
    Just.setFailureType<A>(to:)();
    uint64_t v56 = v111[1](v53, v55);
    __chkstk_darwin(v56);
    uint64_t v57 = v113;
    uint64_t v58 = v115;
    Result.Publisher.tryMap<A>(_:)();
    unint64_t v59 = *(void (**)(char *, uint64_t))(v114 + 8);
    v59(v54, v58);
    sub_10000953C(&qword_1000FD298, &qword_1000FD250);
    uint64_t v60 = Publisher.eraseToAnyPublisher()();
    v59(v57, v58);
  }
  else
  {
    uint64_t v91 = v19;
    uint64_t v109 = v22;
    int v110 = (char *)v20;
    v113 = (char *)v23;
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    int v111 = v25;
    v112 = v29;
    uint64_t v114 = v27;
    uint64_t v115 = v26;
    uint64_t v44 = type metadata accessor for Logger();
    sub_10000929C(v44, (uint64_t)qword_10010A520);
    uint64_t v45 = v117;
    sub_100037CEC(v117, (uint64_t)v123);
    sub_100037CEC(v45, (uint64_t)v120);
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v119 = swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 136315394;
      uint64_t v49 = v123[18];
      unint64_t v50 = v123[19];
      swift_bridgeObjectRetain();
      uint64_t v118 = sub_100017098(v49, v50, &v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100037D24((uint64_t)v123);
      *(_WORD *)(v48 + 12) = 2080;
      uint64_t v52 = v121;
      unint64_t v51 = v122;
      swift_bridgeObjectRetain();
      uint64_t v118 = sub_100017098(v52, v51, &v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100037D24((uint64_t)v120);
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Tempo start /unregister canonicalId=%s, remove consumer=%s, no consumers left", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100037D24((uint64_t)v123);
      sub_100037D24((uint64_t)v120);
    }

    uint64_t v62 = v94;
    uint64_t v61 = v95;
    uint64_t v63 = v92;
    __chkstk_darwin(v64);
    uint64_t v65 = v117;
    uint64_t v66 = sub_100034AAC((void (*)(uint64_t *__return_ptr, uint64_t *))sub_100037D7C);
    char v68 = v67 & 1;
    v123[0] = v66;
    LOBYTE(v123[1]) = v67 & 1;
    sub_100005E5C(&qword_1000FD2A0);
    Result.publisher.getter();
    sub_100037D9C(v66, v68);
    sub_100037CEC(v65, (uint64_t)v123);
    uint64_t v69 = swift_allocObject();
    memcpy((void *)(v69 + 16), v123, 0xB0uLL);
    static Subscribers.Demand.unlimited.getter();
    sub_100005E5C(&qword_1000FD2A8);
    sub_10000953C(&qword_1000FD2B0, &qword_1000FD258);
    sub_10000953C(&qword_1000FD2B8, &qword_1000FD2A8);
    Publisher.flatMap<A, B>(maxPublishers:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v63, v62);
    sub_100037CEC(v65, (uint64_t)v123);
    uint64_t v70 = swift_allocObject();
    memcpy((void *)(v70 + 16), v123, 0xB0uLL);
    static Subscribers.Demand.unlimited.getter();
    sub_100005E5C(&qword_1000FC180);
    sub_10000953C(&qword_1000FD2C0, &qword_1000FD260);
    id v116 = &protocol conformance descriptor for AnyPublisher<A, B>;
    sub_10000953C(&qword_1000FC188, &qword_1000FC180);
    int v71 = v98;
    uint64_t v72 = v97;
    Publisher.flatMap<A>(maxPublishers:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v61, v72);
    sub_100037CEC(v65, (uint64_t)v123);
    uint64_t v73 = swift_allocObject();
    memcpy((void *)(v73 + 16), v123, 0xB0uLL);
    uint64_t v74 = v106;
    *(void *)(v73 + 192) = v106;
    id v75 = v74;
    static Subscribers.Demand.unlimited.getter();
    sub_100005E5C(&qword_1000FC0F8);
    sub_100005E5C(&qword_1000FD220);
    sub_10000953C(&qword_1000FD2C8, &qword_1000FD268);
    sub_10000953C(&qword_1000FD228, &qword_1000FD220);
    uint64_t v76 = v99;
    uint64_t v77 = v101;
    Publisher.flatMap<A, B>(maxPublishers:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v71, v77);
    sub_10000953C(&qword_1000FD2D0, &qword_1000FD270);
    int v78 = v91;
    uint64_t v79 = v103;
    Publisher.map<A>(_:)();
    (*(void (**)(char *, uint64_t))(v102 + 8))(v76, v79);
    sub_100005E5C(&qword_1000FCEE8);
    sub_10000953C(&qword_1000FD2D8, &qword_1000FD278);
    sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
    uint64_t v80 = v109;
    uint64_t v81 = v105;
    Publisher.catch<A>(_:)();
    (*(void (**)(char *, uint64_t))(v104 + 8))(v78, v81);
    uint64_t v82 = v117;
    sub_100037CEC(v117, (uint64_t)v123);
    uint64_t v83 = swift_allocObject();
    memcpy((void *)(v83 + 16), v123, 0xB0uLL);
    sub_10000953C(&qword_1000FD2E0, &qword_1000FD280);
    unint64_t v84 = v110;
    uint64_t v85 = (char *)v111;
    Publisher.tryMap<A>(_:)();
    swift_release();
    (*(void (**)(char *, char *))(v107 + 8))(v80, v84);
    sub_100037CEC(v82, (uint64_t)v123);
    uint64_t v86 = swift_allocObject();
    memcpy((void *)(v86 + 16), v123, 0xB0uLL);
    sub_10000953C(&qword_1000FD2E8, &qword_1000FD288);
    uint64_t v87 = v113;
    uint64_t v88 = v112;
    Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)();
    swift_release();
    (*(void (**)(char *, char *))(v108 + 8))(v85, v87);
    sub_10000953C(&qword_1000FD2F0, &qword_1000FD290);
    uint64_t v89 = v115;
    uint64_t v60 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v114 + 8))(v88, v89);
  }
  return v60;
}

uint64_t sub_100036A24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100037CEC(a1, (uint64_t)v5);
  uint64_t v3 = swift_allocObject();
  memcpy((void *)(v3 + 16), v5, 0xB0uLL);
  sub_100005E5C(&qword_1000FD310);
  swift_allocObject();
  uint64_t result = Future.init(_:)();
  *a2 = result;
  return result;
}

uint64_t sub_100036ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100005E5C(&qword_1000FC940);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &__src[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  uint64_t v10 = type metadata accessor for TaskPriority();
  sub_1000082C0((uint64_t)v8, 1, 1, v10);
  sub_100037CEC(a3, (uint64_t)__src);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = 0;
  v11[3] = 0;
  memcpy(v11 + 4, __src, 0xB0uLL);
  v11[26] = sub_100037FE4;
  v11[27] = v9;
  swift_retain();
  sub_100051F94((uint64_t)v8, (uint64_t)&unk_1000FD328, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_100036BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  void v6[2] = a4;
  return _swift_task_switch(sub_100036C18, 0, 0);
}

uint64_t sub_100036C18()
{
  char v1 = (void **)v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = (void *)v0[2];
  uint64_t v4 = sub_100005EA0(v3 + 11, v3[14]);
  uint64_t v5 = v3[18];
  uint64_t v6 = v3[19];
  uint64_t v7 = *v4;
  swift_retain();
  sub_10008EF3C(v5, v6, v7, v1, v2);
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100036CBC(uint64_t a1, uint64_t (*a2)(uint64_t, void))
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_1000FBDB8 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000929C(v3, (uint64_t)qword_10010A4F0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      swift_getErrorValue();
      uint64_t v7 = Error.localizedDescription.getter();
      sub_100017098(v7, v8, &v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error connecting to watchlistd for suppression. %s", v6, 0xCu);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  return a2(1, 0);
}

uint64_t sub_100036EB0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 40);
  sub_100035508();
  sub_100005EA0((void *)(v5 + 16), *(void *)(v5 + 40));
  uint64_t result = dispatch thunk of PersistentStorable.writeEventSubscription(_:isConventionalOrUnified:)();
  if (v3) {
    *a3 = v3;
  }
  return result;
}

uint64_t sub_100036F38(uint64_t a1, uint64_t a2)
{
  sub_100037CEC(a2, (uint64_t)v4);
  uint64_t v2 = swift_allocObject();
  memcpy((void *)(v2 + 16), v4, 0xB0uLL);
  sub_100005E5C(&qword_1000FD310);
  sub_10000953C(&qword_1000FD318, &qword_1000FD310);
  return Deferred.init(createPublisher:)();
}

uint64_t sub_100036FFC@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  sub_100005EA0(a1, a1[3]);
  uint64_t result = sub_10000DBE0();
  *a2 = result;
  return result;
}

uint64_t sub_100037034@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  sub_100005EA0((void *)(a1 + 48), *(void *)(a1 + 72));
  SportingEventSubscription.registrationId.getter();
  sub_1000356D0();
  sub_10000629C();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

void sub_1000370D8(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1000370E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100005E5C(&qword_1000FD2F8);
  sub_10000C568();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1000098F8();
  uint64_t v8 = v7 - v6;
  swift_errorRetain();
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  Fail.init(error:)();
  sub_10000953C(&qword_1000FD300, &qword_1000FD2F8);
  uint64_t v9 = Publisher.eraseToAnyPublisher()();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  *a1 = v9;
  return result;
}

void sub_100037200(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 40);
  sub_100035508();
  sub_100005EA0((void *)(v3 + 16), *(void *)(v3 + 40));
  uint64_t v4 = dispatch thunk of PersistentStorable.retrieveEventSubscription(canonicalId:isConventionalOrUnified:)();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = *(void *)(SportingEventSubscription.consumers.getter() + 16);
    swift_bridgeObjectRelease();
    if (v6)
    {
    }
    else
    {
      sub_100005EA0((void *)(v3 + 16), *(void *)(v3 + 40));
      sub_100035508();
      dispatch thunk of PersistentStorable.deleteSportingEventSubscription(canonicalId:isConventionalOrUnified:)();

      if (v2) {
        return;
      }
    }
  }
  *a2 = 1;
}

void sub_100037314(uint64_t a1, uint64_t a2)
{
  if (qword_1000FBDC8 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000929C(v3, (uint64_t)qword_10010A520);
  sub_100037CEC(a2, (uint64_t)v17);
  sub_100037CEC(a2, (uint64_t)v14);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    uint64_t v7 = v18;
    unint64_t v8 = v19;
    swift_bridgeObjectRetain();
    v12[0] = sub_100017098(v7, v8, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100037D24((uint64_t)v17);
    *(_WORD *)(v6 + 12) = 1024;
    if (v15 == 0xD000000000000011 && v16 == 0x80000001000D0580)
    {
      sub_100037CEC((uint64_t)v14, (uint64_t)v12);
    }
    else
    {
      char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100037CEC((uint64_t)v14, (uint64_t)v12);
      if ((v9 & 1) == 0)
      {
        sub_100037D24((uint64_t)v12);
        goto LABEL_14;
      }
    }
    if ((sub_10007AD1C() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_100037D24((uint64_t)v12);
LABEL_12:
      int v11 = 1;
LABEL_15:
      sub_100037D24((uint64_t)v14);
      LODWORD(v12[0]) = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Tempo /unregister success for %s, isLowCapLiveActivity=%{BOOL}d", (uint8_t *)v6, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_16;
    }
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    sub_100037D24((uint64_t)v12);
    if (v10) {
      goto LABEL_12;
    }
LABEL_14:
    int v11 = 0;
    goto LABEL_15;
  }
  sub_100037D24((uint64_t)v14);
  sub_100037D24((uint64_t)v17);
LABEL_16:
}

uint64_t sub_1000375D0@<X0>(char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  char v5 = *a1;
  uint64_t v6 = *(void *)(a2 + 40);
  sub_100035508();
  sub_100005EA0((void *)(v6 + 16), *(void *)(v6 + 40));
  uint64_t result = dispatch thunk of PersistentStorable.writeEventSubscription(_:isConventionalOrUnified:)();
  if (!v3) {
    *a3 = v5;
  }
  return result;
}

uint64_t sub_100037660(uint64_t a1)
{
  uint64_t v36 = &_swiftEmptyDictionarySingleton;
  sub_10008DAAC(a1, v37);
  uint64_t v1 = v37[0];
  uint64_t v25 = v37[1];
  int64_t v2 = v37[3];
  unint64_t v3 = v37[4];
  int64_t v38 = (unint64_t)(v37[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v5 = __clz(__rbit64(v3));
  v3 &= v3 - 1;
  unint64_t v6 = v5 | (v2 << 6);
  while (1)
  {
    char v11 = *(unsigned char *)(*(void *)(v1 + 48) + v6);
    sub_100037E68(*(void *)(v1 + 56) + 32 * v6, (uint64_t)v34 + 8);
    LOBYTE(v34[0]) = v11;
    v32[0] = v34[0];
    v32[1] = v34[1];
    uint64_t v33 = v35;
    sub_100037E68((uint64_t)v32 + 8, (uint64_t)&v26);
    if (!v27)
    {
      sub_100037ED0((uint64_t)v32, &qword_1000FD308);
      uint64_t v20 = &v26;
      goto LABEL_33;
    }
    sub_100028F5C(&v26, v31);
    char v12 = v32[0];
    char v29 = v32[0];
    sub_100009F4C((uint64_t)v32 + 8, (uint64_t)v30);
    sub_100028F5C(v31, v28);
    uint64_t v13 = v36;
    unint64_t v14 = v36[2];
    if (v36[3] <= v14)
    {
      sub_1000C0A44(v14 + 1, 1);
      uint64_t v13 = v36;
    }
    Hasher.init(_seed:)();
    sub_1000990CC(v12);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v15 = v13 + 8;
    uint64_t v16 = -1 << *((unsigned char *)v13 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~v13[(v17 >> 6) + 8]) == 0) {
      break;
    }
    unint64_t v19 = __clz(__rbit64((-1 << v17) & ~v13[(v17 >> 6) + 8])) | v17 & 0x7FFFFFFFFFFFFFC0;
LABEL_32:
    *(void *)((char *)v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(unsigned char *)(v13[6] + v19) = v12;
    sub_100028F5C(v28, (_OWORD *)(v13[7] + 32 * v19));
    ++v13[2];
    uint64_t v20 = (long long *)v30;
LABEL_33:
    uint64_t result = sub_100037ED0((uint64_t)v20, (uint64_t *)&unk_1000FC300);
    if (v3) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v7 = v2 + 1;
    if (__OFADD__(v2, 1)) {
      goto LABEL_37;
    }
    if (v7 >= v38) {
      goto LABEL_35;
    }
    unint64_t v8 = *(void *)(v25 + 8 * v7);
    int64_t v9 = v2 + 1;
    if (!v8)
    {
      int64_t v9 = v2 + 2;
      if (v2 + 2 >= v38) {
        goto LABEL_35;
      }
      unint64_t v8 = *(void *)(v25 + 8 * v9);
      if (!v8)
      {
        int64_t v9 = v2 + 3;
        if (v2 + 3 >= v38) {
          goto LABEL_35;
        }
        unint64_t v8 = *(void *)(v25 + 8 * v9);
        if (!v8)
        {
          int64_t v9 = v2 + 4;
          if (v2 + 4 >= v38) {
            goto LABEL_35;
          }
          unint64_t v8 = *(void *)(v25 + 8 * v9);
          if (!v8)
          {
            int64_t v9 = v2 + 5;
            if (v2 + 5 >= v38) {
              goto LABEL_35;
            }
            unint64_t v8 = *(void *)(v25 + 8 * v9);
            if (!v8)
            {
              int64_t v10 = v2 + 6;
              while (v10 < v38)
              {
                unint64_t v8 = *(void *)(v25 + 8 * v10++);
                if (v8)
                {
                  int64_t v9 = v10 - 1;
                  goto LABEL_18;
                }
              }
LABEL_35:
              sub_10001BB94();
              return (uint64_t)v36;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v3 = (v8 - 1) & v8;
    unint64_t v6 = __clz(__rbit64(v8)) + (v9 << 6);
    int64_t v2 = v9;
  }
  char v21 = 0;
  unint64_t v22 = (unint64_t)(63 - v16) >> 6;
  while (++v18 != v22 || (v21 & 1) == 0)
  {
    BOOL v23 = v18 == v22;
    if (v18 == v22) {
      unint64_t v18 = 0;
    }
    v21 |= v23;
    uint64_t v24 = v15[v18];
    if (v24 != -1)
    {
      unint64_t v19 = __clz(__rbit64(~v24)) + (v18 << 6);
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000379DC()
{
  uint64_t v10 = sub_100005E5C(&qword_1000FD1F8);
  sub_10000C568();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1000098F8();
  uint64_t v6 = v5 - v4;
  sub_100005EA0(v0, v0[3]);
  uint64_t v12 = sub_10000DBE0();
  sub_100037C68((uint64_t)v0, (uint64_t)__src);
  uint64_t v7 = swift_allocObject();
  memcpy((void *)(v7 + 16), __src, 0x50uLL);
  static Subscribers.Demand.unlimited.getter();
  sub_100005E5C(&qword_1000FC180);
  sub_100005E5C(&qword_1000FCEE8);
  sub_10000953C(&qword_1000FC188, &qword_1000FC180);
  sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  swift_release();
  swift_release();
  sub_10000953C(&qword_1000FD200, &qword_1000FD1F8);
  uint64_t v8 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v10);
  return v8;
}

uint64_t sub_100037BD4@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  sub_100005EA0((void *)(a1 + 40), *(void *)(a1 + 64));
  sub_100027288();
  Dictionary.init(dictionaryLiteral:)();
  sub_100005BA8();
  uint64_t v4 = v3;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_100037C68(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100037CA0()
{
  sub_100006178(v0 + 16);
  sub_100006178(v0 + 56);

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100037CE0@<X0>(void *a1@<X8>)
{
  return sub_100037BD4(v1 + 16, a1);
}

uint64_t sub_100037CEC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100037D24(uint64_t a1)
{
  return a1;
}

uint64_t sub_100037D58@<X0>(void *a1@<X8>)
{
  return sub_1000355F4(v1 + 16, a1);
}

uint64_t sub_100037D60@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1000375D0(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100037D7C(void *a1)
{
  return sub_100036EB0(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100037D9C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100037DAC(uint64_t a1)
{
  return sub_100036F38(a1, v1 + 16);
}

uint64_t sub_100037DB8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100036FFC((void *)(v1 + 16), a1);
}

uint64_t sub_100037DC0()
{
  sub_100006178(v0 + 16);
  swift_release();
  sub_100006178(v0 + 64);
  sub_100006178(v0 + 104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 200, 7);
}

uint64_t sub_100037E30@<X0>(void *a1@<X8>)
{
  return sub_100037034(v1 + 16, a1);
}

void sub_100037E40(unsigned char *a1@<X8>)
{
  sub_100037200(v1 + 16, a1);
}

void sub_100037E60(uint64_t a1)
{
  sub_100037314(a1, v1 + 16);
}

uint64_t sub_100037E68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005E5C((uint64_t *)&unk_1000FC300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100037ED0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100005E5C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100037F30@<X0>(uint64_t *a1@<X8>)
{
  return sub_100036A24(v1 + 16, a1);
}

uint64_t sub_100037F3C()
{
  sub_100006178(v0 + 16);
  swift_release();
  sub_100006178(v0 + 64);
  sub_100006178(v0 + 104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 192, 7);
}

uint64_t sub_100037FA4(uint64_t a1, uint64_t a2)
{
  return sub_100036ABC(a1, a2, v2 + 16);
}

uint64_t sub_100037FAC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100037FE4(uint64_t a1, char a2)
{
  return sub_1000B97BC(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_100037FF0()
{
  swift_unknownObjectRelease();
  sub_100006178(v0 + 32);
  swift_release();
  sub_100006178(v0 + 80);
  sub_100006178(v0 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 224, 7);
}

uint64_t sub_100038068(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v8 = v1[26];
  uint64_t v7 = v1[27];
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *int64_t v9 = v2;
  v9[1] = sub_100031A20;
  return sub_100036BF4(a1, v4, v5, v6, v8, v7);
}

uint64_t destroy for SubscriptionUnregisterAllOperation(uint64_t a1)
{
  sub_100006178(a1);

  return sub_100006178(a1 + 40);
}

uint64_t initializeWithCopy for SubscriptionUnregisterAllOperation(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for SubscriptionUnregisterAllOperation(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

void *initializeWithTake for SubscriptionUnregisterAllOperation(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t assignWithTake for SubscriptionUnregisterAllOperation(uint64_t a1, uint64_t a2)
{
  sub_100006178(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_100006178(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionUnregisterAllOperation(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionUnregisterAllOperation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionUnregisterAllOperation()
{
  return &type metadata for SubscriptionUnregisterAllOperation;
}

uint64_t destroy for SubscriptionUnregisterOperation(uint64_t a1)
{
  sub_100006178(a1);
  swift_release();
  sub_100006178(a1 + 48);
  sub_100006178(a1 + 88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for SubscriptionUnregisterOperation(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(a1 + 48, a2 + 48, v6);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 88, a2 + 88);
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  uint64_t v10 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v10;
  uint64_t v11 = *(void *)(a2 + 160);
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = v11;
  *(void *)(a1 + 168) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for SubscriptionUnregisterOperation(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  sub_100008E94(a1 + 6, a2 + 6);
  sub_100008E94(a1 + 11, a2 + 11);
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for SubscriptionUnregisterOperation(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

uint64_t assignWithTake for SubscriptionUnregisterOperation(uint64_t a1, uint64_t a2)
{
  sub_100006178(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_release();
  sub_100006178(a1 + 48);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  sub_100006178(a1 + 88);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionUnregisterOperation(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 176))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionUnregisterOperation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionUnregisterOperation()
{
  return &type metadata for SubscriptionUnregisterOperation;
}

uint64_t sub_100038748(void *a1)
{
  sub_100005EA0(a1, a1[3]);
  sub_1000387FC();
  uint64_t result = dispatch thunk of Decoder.singleValueContainer()();
  if (!v1)
  {
    sub_100005EA0(v3, v3[3]);
    sub_1000387FC();
    dispatch thunk of SingleValueDecodingContainer.decode(_:)();
    Date.init(timeIntervalSince1970:)();
    return sub_100006178((uint64_t)v3);
  }
  return result;
}

uint64_t sub_1000387FC()
{
  return v0;
}

uint64_t sub_100038810()
{
  sub_100005E5C(&qword_1000FD330);
  swift_allocObject();
  uint64_t result = PassthroughSubject.init()();
  qword_10010A4A8 = result;
  return result;
}

uint64_t sub_100038854()
{
  if (qword_1000FBD70 != -1) {
    swift_once();
  }
  sub_100005E5C(&qword_1000FD330);
  sub_10000953C(&qword_1000FD338, &qword_1000FD330);
  Publisher.share()();
  sub_100005E5C(&qword_1000FD340);
  sub_10000953C(&qword_1000FD348, &qword_1000FD340);
  uint64_t v0 = Publisher.eraseToAnyPublisher()();
  uint64_t result = swift_release();
  qword_10010A4B0 = v0;
  return result;
}

uint64_t sub_100038968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 1 < 2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  if (!a5)
  {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for CloudChannelOperation(uint64_t a1)
{
  return sub_1000389E0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_1000389E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 1 < 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (!a5)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for CloudChannelOperation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_100038968(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for CloudChannelOperation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_100038968(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1000389E0(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for CloudChannelOperation(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CloudChannelOperation(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1000389E0(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CloudChannelOperation(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudChannelOperation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100038C04(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_100038C0C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CloudChannelOperation()
{
  return &type metadata for CloudChannelOperation;
}

uint64_t sub_100038C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  if (sub_1000082E8(a1, 1, v5) == 1)
  {
    sub_100037ED0(a1, &qword_1000FC940);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_100038D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  if (sub_1000082E8(a1, 1, v5) == 1)
  {
    sub_100037ED0(a1, &qword_1000FC940);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  sub_100005E5C(&qword_1000FC820);
  return swift_task_create();
}

uint64_t sub_100038EB8(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000EF1D8, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_100038F10(char a1)
{
  if (a1) {
    return 0x736C656E6E616863;
  }
  else {
    return 0x6F724665726F7473;
  }
}

uint64_t sub_100038F4C(void *a1)
{
  sub_100005E5C(&qword_1000FD468);
  sub_100009830();
  __chkstk_darwin(v3);
  uint64_t v4 = a1[4];
  sub_100005EA0(a1, a1[3]);
  sub_10003A9E8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_100006178((uint64_t)a1);
  }
  else
  {
    uint64_t v4 = KeyedDecodingContainer.decode(_:forKey:)();
    sub_100005E5C(&qword_1000FC820);
    sub_10003AA34();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v6 = sub_10003ACA8();
    v7(v6);
    swift_bridgeObjectRetain();
    sub_100006178((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_100039128(char *a1, char *a2)
{
  return sub_10006A284(*a1, *a2);
}

Swift::Int sub_100039134()
{
  return sub_10006AAF8();
}

uint64_t sub_10003913C()
{
  return sub_10006AE98();
}

Swift::Int sub_100039144()
{
  return sub_10006B668();
}

uint64_t sub_10003914C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100038EB8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10003917C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100038F10(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000391A8()
{
  return sub_100038F10(*v0);
}

uint64_t sub_1000391B0@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100038F0C(a1);
  *a2 = result;
  return result;
}

void sub_1000391D8(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1000391E4(uint64_t a1)
{
  unint64_t v2 = sub_10003A9E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100039220(uint64_t a1)
{
  unint64_t v2 = sub_10003A9E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10003925C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100038F4C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_10003928C()
{
  type metadata accessor for CloudChannelFetchTask();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  *(void *)(v0 + 112) = 0;
  qword_10010A4B8 = v0;
  return result;
}

uint64_t sub_1000392CC()
{
  sub_10001C234();
  void v1[4] = v0;
  sub_100005E5C(&qword_1000FC940);
  v1[5] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for Date();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_1000393B8, v0, 0);
}

uint64_t sub_1000393B8()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[4];
  Date.init()();
  uint64_t v5 = sub_1000A268C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v6 = *(void *)(v4 + 112);
  v0[9] = v6;
  if (v6)
  {
    swift_retain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[10] = v7;
    uint64_t v8 = sub_100005E5C(&qword_1000FC820);
    uint64_t v9 = sub_100005E5C((uint64_t *)&unk_1000FDA30);
    *uint64_t v7 = v0;
    v7[1] = sub_100039608;
    uint64_t v10 = &protocol self-conformance witness table for Error;
    uint64_t v11 = (uint64_t)(v0 + 3);
    uint64_t v12 = v6;
  }
  else
  {
    uint64_t v14 = v0[4];
    uint64_t v13 = v0[5];
    uint64_t v15 = type metadata accessor for TaskPriority();
    sub_1000082C0(v13, 1, 1, v15);
    unint64_t v16 = sub_10003A5E4();
    unint64_t v17 = (void *)swift_allocObject();
    long long v17[2] = v14;
    v17[3] = v16;
    v17[4] = v14;
    v17[5] = v5;
    swift_retain_n();
    *(void *)(v4 + 112) = sub_100038D6C(v13, (uint64_t)&unk_1000FD440, (uint64_t)v17);
    uint64_t v11 = swift_release();
    uint64_t v19 = *(void *)(v4 + 112);
    v0[12] = v19;
    if (!v19)
    {
      __break(1u);
      return Task.value.getter(v11, v12, v18, v9, v10);
    }
    swift_retain();
    uint64_t v20 = (void *)swift_task_alloc();
    v0[13] = v20;
    uint64_t v8 = sub_100005E5C(&qword_1000FC820);
    uint64_t v9 = sub_100005E5C((uint64_t *)&unk_1000FDA30);
    *uint64_t v20 = v0;
    v20[1] = sub_100039770;
    uint64_t v10 = &protocol self-conformance witness table for Error;
    uint64_t v11 = (uint64_t)(v0 + 2);
    uint64_t v12 = v19;
  }
  uint64_t v18 = v8;
  return Task.value.getter(v11, v12, v18, v9, v10);
}

uint64_t sub_100039608()
{
  sub_10001C28C();
  sub_10003AC90();
  sub_10001C240();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v1 + 32);
  if (v0) {
    uint64_t v6 = sub_1000398FC;
  }
  else {
    uint64_t v6 = sub_100039708;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100039708()
{
  sub_10001C234();
  swift_release();
  sub_10003ACDC();
  swift_task_dealloc();
  uint64_t v0 = sub_10003ACC0();
  return v1(v0);
}

uint64_t sub_100039770()
{
  sub_10001C28C();
  sub_10003AC90();
  sub_10001C240();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v5 = *(void *)(v1 + 32);
  if (v0) {
    uint64_t v6 = sub_100039964;
  }
  else {
    uint64_t v6 = sub_10003988C;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10003988C()
{
  sub_10001C234();
  *(void *)(*(void *)(v0 + 32) + 112) = 0;
  swift_release();
  sub_10003ACDC();
  swift_task_dealloc();
  uint64_t v1 = sub_10003ACC0();
  return v2(v1);
}

uint64_t sub_1000398FC()
{
  sub_10001C234();
  swift_release();
  sub_10003ACDC();
  swift_task_dealloc();
  sub_10001C2E0();
  return v0();
}

uint64_t sub_100039964()
{
  sub_10001C234();
  *(void *)(*(void *)(v0 + 32) + 112) = 0;
  swift_release();
  sub_10003ACDC();
  swift_task_dealloc();
  sub_10001C2E0();
  return v1();
}

uint64_t sub_1000399D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[27] = a4;
  v5[28] = a5;
  v5[26] = a1;
  sub_100005E5C(&qword_1000FD448);
  v5[29] = swift_task_alloc();
  uint64_t v7 = sub_100005E5C(&qword_1000FD450);
  v5[30] = v7;
  v5[31] = *(void *)(v7 - 8);
  v5[32] = swift_task_alloc();
  uint64_t v8 = sub_100005E5C(&qword_1000FD458);
  v5[33] = v8;
  v5[34] = *(void *)(v8 - 8);
  v5[35] = swift_task_alloc();
  return _swift_task_switch(sub_100039B30, a4, 0);
}

uint64_t sub_100039B30()
{
  if (qword_1000FBDE8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[36] = sub_10000929C(v1, (uint64_t)qword_10010A580);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "fetching available cloud channels", v4, 2u);
    sub_10001C2C8();
  }

  uint64_t v5 = Dictionary.init(dictionaryLiteral:)();
  v0[37] = v5;
  v0[24] = v5;
  if (qword_1000FBD58 != -1) {
    swift_once();
  }
  uint64_t v7 = v0[31];
  uint64_t v6 = v0[32];
  uint64_t v8 = v0[30];
  uint64_t v9 = v0[28];
  type metadata accessor for BagProvider();
  swift_retain();
  sub_100004AF4();
  sub_10003A428(v9);
  sub_1000069F4();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  sub_100031858((uint64_t)(v0 + 2));
  v0[22] = v11;
  sub_100005E5C(&qword_1000FC118);
  sub_10000953C(&qword_1000FC120, &qword_1000FC118);
  Publisher.values.getter();
  swift_release();
  AsyncThrowingPublisher.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v0[38] = sub_10003A5E4();
  uint64_t v12 = sub_10000953C(&qword_1000FD460, &qword_1000FD458);
  uint64_t v13 = (void *)swift_task_alloc();
  v0[39] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_100039E44;
  uint64_t v14 = v0[33];
  uint64_t v15 = v0[29];
  return dispatch thunk of AsyncIteratorProtocol.next()(v15, v14, v12);
}

uint64_t sub_100039E44()
{
  sub_10001C28C();
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  sub_10001C240();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 320) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v2 + 216);
  if (v0)
  {
    if (v5)
    {
      swift_getObjectType();
      uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v8 = v7;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v8 = 0;
    }
    uint64_t v9 = sub_10003A18C;
    uint64_t v10 = v6;
  }
  else
  {
    uint64_t v9 = sub_100039FA8;
    uint64_t v10 = v5;
    uint64_t v8 = 0;
  }
  return _swift_task_switch(v9, v10, v8);
}

uint64_t sub_100039FA8()
{
  uint64_t v1 = v0[29];
  (*(void (**)(void, void))(v0[34] + 8))(v0[35], v0[33]);
  uint64_t v2 = sub_100005E5C(&qword_1000FC138);
  int v3 = sub_1000082E8(v1, 1, v2);
  uint64_t v4 = v0[37];
  if (v3 != 1)
  {
    uint64_t v5 = v0[29];
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v5 + *(int *)(v2 + 40) + 16);
    swift_bridgeObjectRetain();
    sub_100037ED0(v5, &qword_1000FC138);
    v0[24] = v4;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 134217984;
    v0[25] = *(void *)(v4 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "fetched %ld available cloud channels", v8, 0xCu);
    sub_10001C2C8();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v9 = (void *)v0[26];
  swift_beginAccess();
  *uint64_t v9 = v0[24];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C2E0();
  return v10();
}

uint64_t sub_10003A18C()
{
  sub_10001C28C();
  uint64_t v1 = v0[27];
  v0[20] = v0[40];
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  swift_willThrowTypedImpl();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10003A22C, v1, 0);
}

uint64_t sub_10003A22C()
{
  uint64_t v9 = v0;
  (*(void (**)(void, void))(v0[34] + 8))(v0[35], v0[33]);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getErrorValue();
    uint64_t v4 = Error.localizedDescription.getter();
    v0[23] = sub_100017098(v4, v5, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "failed to fetch cloud channels. error=%s", v3, 0xCu);
    swift_arrayDestroy();
    sub_10001C2C8();
    sub_10001C2C8();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C2E0();
  return v6();
}

uint64_t sub_10003A428(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  sub_100009830();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  os_log_type_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005E5C(&qword_1000FD428);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CB3B0;
  *(unsigned char *)(inited + 32) = 7;
  Date.init()();
  uint64_t v9 = sub_1000A268C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  *(void *)(inited + 64) = &type metadata for UInt64;
  *(void *)(inited + 40) = v9;
  *(unsigned char *)(inited + 72) = 8;
  *(void *)(inited + 104) = &type metadata for UInt64;
  *(void *)(inited + 80) = a1;
  *(unsigned char *)(inited + 112) = 44;
  *(void *)(inited + 144) = &type metadata for EventType.EventName;
  *(unsigned char *)(inited + 120) = 3;
  sub_100027288();
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_10003A564()
{
  swift_release();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for CloudChannelFetchTask()
{
  return self;
}

void sub_10003A5C0()
{
}

void sub_10003A5C8()
{
}

unint64_t sub_10003A5E4()
{
  unint64_t result = qword_1000FD438;
  if (!qword_1000FD438)
  {
    type metadata accessor for CloudChannelFetchTask();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FD438);
  }
  return result;
}

uint64_t sub_10003A630()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10003A670(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10003A730;
  return sub_1000399D4(a1, v4, v5, v7, v6);
}

uint64_t sub_10003A730()
{
  sub_10001C234();
  uint64_t v1 = *v0;
  sub_10001C240();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_10001C2E0();
  return v3();
}

uint64_t sub_10003A81C()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_10003A858(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10003A898(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 sub_10003A900(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_10003A914(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10003A95C(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10003A99C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for CloudChannelFetchResponse()
{
}

unint64_t sub_10003A9E8()
{
  unint64_t result = qword_1000FD470;
  if (!qword_1000FD470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FD470);
  }
  return result;
}

unint64_t sub_10003AA34()
{
  unint64_t result = qword_1000FD478;
  if (!qword_1000FD478)
  {
    sub_1000061D8(&qword_1000FC820);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FD478);
  }
  return result;
}

unsigned char *sub_10003AAA0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003AB6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for CloudChannelFetchResponse.CodingKeys()
{
}

unint64_t sub_10003ABA4()
{
  unint64_t result = qword_1000FD480;
  if (!qword_1000FD480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FD480);
  }
  return result;
}

unint64_t sub_10003ABF4()
{
  unint64_t result = qword_1000FD488;
  if (!qword_1000FD488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FD488);
  }
  return result;
}

unint64_t sub_10003AC44()
{
  unint64_t result = qword_1000FD490;
  if (!qword_1000FD490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FD490);
  }
  return result;
}

uint64_t sub_10003ACA8()
{
  return v0;
}

uint64_t sub_10003ACC0()
{
  return v0;
}

uint64_t sub_10003ACDC()
{
  return swift_task_dealloc();
}

void sub_10003ACF4(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100005E5C(&qword_1000FD6A0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)type metadata accessor for SportingEventSubscription.Competitor();
  uint64_t v29 = *(v9 - 1);
  __chkstk_darwin(v9);
  uint64_t v33 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v28 = (char *)&v25 - v12;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v13; uint64_t v13 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v32 = a1 & 0xC000000000000001;
    uint64_t v30 = v29 + 32;
    uint64_t v34 = _swiftEmptyArrayStorage;
    uint64_t v14 = 4;
    unint64_t v26 = a2;
    unint64_t v27 = a1;
    uint64_t v31 = v13;
    uint64_t v15 = (void (**)(char *, char *, uint64_t))(v29 + 32);
    while (1)
    {
      uint64_t v16 = (uint64_t)v9;
      uint64_t v17 = v32 ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v14);
      uint64_t v9 = v17;
      uint64_t v18 = v14 - 3;
      if (__OFADD__(v14 - 4, 1)) {
        break;
      }
      id v35 = v17;
      sub_100041C30((uint64_t *)&v35, a2, (uint64_t)v8);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }

      uint64_t v9 = (void *)v16;
      if (sub_1000082E8((uint64_t)v8, 1, v16) == 1)
      {
        sub_1000437A4((uint64_t)v8, &qword_1000FD6A0);
      }
      else
      {
        uint64_t v19 = *v15;
        uint64_t v20 = v28;
        (*v15)(v28, v8, v16);
        v19(v33, v20, v16);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          char v21 = v34;
        }
        else {
          char v21 = (void *)sub_10001599C(0, v34[2] + 1, 1, (uint64_t)v34);
        }
        unint64_t v23 = v21[2];
        unint64_t v22 = v21[3];
        if (v23 >= v22 >> 1) {
          char v21 = (void *)sub_10001599C(v22 > 1, v23 + 1, 1, (uint64_t)v21);
        }
        v21[2] = v23 + 1;
        unint64_t v24 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
        uint64_t v34 = v21;
        uint64_t v9 = (void *)v16;
        v19((char *)v21 + v24 + *(void *)(v29 + 72) * v23, v33, v16);
        a2 = v26;
        a1 = v27;
      }
      ++v14;
      if (v18 == v31) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_10003B068@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, long long a12, long long a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, unsigned __int8 a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v55 = a7;
  uint64_t v56 = a8;
  uint64_t v54 = a6;
  uint64_t v60 = a22;
  uint64_t v61 = a23;
  uint64_t v58 = a20;
  uint64_t v59 = a21;
  uint64_t v57 = a19;
  int v53 = a18;
  unint64_t v51 = a5;
  uint64_t v52 = a17;
  uint64_t v50 = a16;
  long long v48 = a12;
  long long v49 = a13;
  long long v46 = a10;
  long long v47 = a11;
  uint64_t v28 = type metadata accessor for Date();
  sub_100009830();
  uint64_t v30 = v29;
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v46 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008CAC(a1, a9);
  *(void *)(a9 + 40) = a2;
  *(void *)(a9 + 48) = a3;
  sub_100008CAC(a4, a9 + 56);
  sub_100008CAC(v51, a9 + 96);
  uint64_t v34 = v55;
  *(void *)(a9 + 136) = v54;
  *(void *)(a9 + 144) = v34;
  *(void *)(a9 + 152) = v56;
  long long v35 = v47;
  *(_OWORD *)(a9 + 160) = v46;
  *(_OWORD *)(a9 + 176) = v35;
  long long v36 = v49;
  *(_OWORD *)(a9 + 192) = v48;
  *(_OWORD *)(a9 + 208) = v36;
  *(void *)(a9 + 224) = a14;
  *(unsigned char *)(a9 + 232) = a15;
  uint64_t v37 = v52;
  *(void *)(a9 + 240) = v50;
  *(void *)(a9 + 248) = v37;
  *(unsigned char *)(a9 + 256) = v53;
  int64_t v38 = (int *)type metadata accessor for SubscriptionRegisterOperation(0);
  sub_1000437F8(v57, a9 + v38[18], &qword_1000FCC50);
  uint64_t v39 = v38[19];
  Date.init()();
  uint64_t v40 = sub_1000A268C();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v33, v28);
  *(void *)(a9 + v39) = v40;
  unint64_t v42 = (void *)(a9 + v38[20]);
  uint64_t v43 = v59;
  *unint64_t v42 = v58;
  v42[1] = v43;
  uint64_t v44 = (void *)(a9 + v38[21]);
  uint64_t v45 = v61;
  *uint64_t v44 = v60;
  v44[1] = v45;
  return result;
}

uint64_t type metadata accessor for SubscriptionRegisterOperation(uint64_t a1)
{
  return sub_10003B620(a1, (uint64_t *)&unk_1000FD4F8);
}

uint64_t sub_10003B280(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v26 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a2[6];
    *(void *)(v4 + 40) = a2[5];
    *(void *)(v4 + 48) = v8;
    long long v9 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(v4 + 80) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    swift_retain();
    v11(v4 + 56, a2 + 7, v10);
    long long v12 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(v4 + 120) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(v4 + 96, (uint64_t)(a2 + 12));
    uint64_t v13 = a2[18];
    *(void *)(v4 + 136) = a2[17];
    *(void *)(v4 + 144) = v13;
    uint64_t v14 = a2[20];
    *(void *)(v4 + 152) = a2[19];
    *(void *)(v4 + 160) = v14;
    uint64_t v15 = a2[22];
    *(void *)(v4 + 168) = a2[21];
    *(void *)(v4 + 176) = v15;
    uint64_t v16 = a2[24];
    *(void *)(v4 + 184) = a2[23];
    *(void *)(v4 + 192) = v16;
    uint64_t v17 = a2[26];
    *(void *)(v4 + 200) = a2[25];
    *(void *)(v4 + 208) = v17;
    uint64_t v18 = a2[28];
    *(void *)(v4 + 216) = a2[27];
    *(void *)(v4 + 224) = v18;
    *(unsigned char *)(v4 + 232) = *((unsigned char *)a2 + 232);
    uint64_t v19 = a2[30];
    uint64_t v20 = a2[31];
    *(unsigned char *)(v4 + 256) = *((unsigned char *)a2 + 256);
    uint64_t v21 = a3[18];
    __dst = (void *)(v4 + v21);
    uint64_t v40 = a3;
    int64_t v38 = (char *)a2 + v21;
    *(void *)(v4 + 240) = v19;
    *(void *)(v4 + 248) = v20;
    uint64_t v22 = type metadata accessor for SubscriptionRegisterOperation.PreferredData(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_1000082E8((uint64_t)v38, 1, v22))
    {
      uint64_t v24 = sub_100005E5C(&qword_1000FCC50);
      memcpy(__dst, v38, *(void *)(*(void *)(v24 - 8) + 64));
      uint64_t v25 = v40;
    }
    else
    {
      uint64_t v27 = type metadata accessor for SportingEventSubscription.Metadata();
      if (sub_1000082E8((uint64_t)v38, 1, v27))
      {
        uint64_t v28 = sub_100005E5C(&qword_1000FD498);
        memcpy(__dst, v38, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(__dst, v38, v27);
        sub_1000082C0((uint64_t)__dst, 0, 1, v27);
      }
      uint64_t v25 = v40;
      sub_1000082C0((uint64_t)__dst, 0, 1, v23);
    }
    uint64_t v29 = v25[20];
    *(void *)(v4 + v25[19]) = *(uint64_t *)((char *)a2 + v25[19]);
    uint64_t v30 = (void *)(v4 + v29);
    uint64_t v31 = (uint64_t *)((char *)a2 + v29);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = v25[21];
    uint64_t v34 = (void *)(v4 + v33);
    long long v35 = (uint64_t *)((char *)a2 + v33);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t type metadata accessor for SubscriptionRegisterOperation.PreferredData(uint64_t a1)
{
  return sub_10003B620(a1, (uint64_t *)&unk_1000FD5D0);
}

uint64_t sub_10003B620(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10003B654(uint64_t a1, uint64_t a2)
{
  sub_100006178(a1);
  swift_release();
  swift_release();
  sub_100006178(a1 + 56);
  sub_100006178(a1 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 72);
  uint64_t v5 = type metadata accessor for SubscriptionRegisterOperation.PreferredData(0);
  if (!sub_1000082E8(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for SportingEventSubscription.Metadata();
    if (!sub_1000082E8(v4, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    }
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10003B77C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  (**(void (***)(void))(v5 - 8))();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v7;
  uint64_t v8 = v7;
  long long v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  swift_retain();
  v9(a1 + 56, a2 + 56, v8);
  long long v10 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 96, a2 + 96);
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v12;
  uint64_t v13 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v13;
  uint64_t v14 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v14;
  uint64_t v15 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v15;
  uint64_t v16 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v16;
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v17 = *(void *)(a2 + 240);
  uint64_t v18 = *(void *)(a2 + 248);
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  uint64_t v19 = a3[18];
  uint64_t v33 = (const void *)(a2 + v19);
  __dst = (void *)(a1 + v19);
  *(void *)(a1 + 240) = v17;
  *(void *)(a1 + 248) = v18;
  uint64_t v20 = type metadata accessor for SubscriptionRegisterOperation.PreferredData(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_1000082E8((uint64_t)v33, 1, v20))
  {
    uint64_t v21 = sub_100005E5C(&qword_1000FCC50);
    memcpy(__dst, v33, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = type metadata accessor for SportingEventSubscription.Metadata();
    if (sub_1000082E8((uint64_t)v33, 1, v22))
    {
      uint64_t v23 = sub_100005E5C(&qword_1000FD498);
      memcpy(__dst, v33, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 16))(__dst, v33, v22);
      sub_1000082C0((uint64_t)__dst, 0, 1, v22);
    }
    sub_1000082C0((uint64_t)__dst, 0, 1, v20);
  }
  uint64_t v24 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = a3[21];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10003BA9C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_100008E94((uint64_t *)a1, (uint64_t *)a2);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  sub_100008E94((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  sub_100008E94((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  uint64_t v6 = a3[18];
  long long v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for SubscriptionRegisterOperation.PreferredData(0);
  int v10 = sub_1000082E8((uint64_t)v7, 1, v9);
  int v11 = sub_1000082E8((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      uint64_t v12 = type metadata accessor for SportingEventSubscription.Metadata();
      if (sub_1000082E8((uint64_t)v8, 1, v12))
      {
        uint64_t v13 = sub_100005E5C(&qword_1000FD498);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
        sub_1000082C0((uint64_t)v7, 0, 1, v12);
      }
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  if (v11)
  {
    sub_100042F34((uint64_t)v7, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation.PreferredData);
LABEL_7:
    uint64_t v14 = &qword_1000FCC50;
    goto LABEL_8;
  }
  uint64_t v9 = type metadata accessor for SportingEventSubscription.Metadata();
  int v16 = sub_1000082E8((uint64_t)v7, 1, v9);
  int v17 = sub_1000082E8((uint64_t)v8, 1, v9);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
LABEL_13:
      sub_1000082C0((uint64_t)v7, 0, 1, v9);
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v25 = *(void *)(v9 - 8);
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 24))(v7, v8, v9);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v7, v9);
  }
  uint64_t v14 = &qword_1000FD498;
LABEL_8:
  uint64_t v15 = sub_100005E5C(v14);
  memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_14:
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  uint64_t v18 = a3[20];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[21];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10003BEA4(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v7 = *(_OWORD *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v7;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  long long v9 = *(_OWORD *)(a2 + 240);
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  uint64_t v10 = a3[18];
  int v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  *(_OWORD *)(a1 + 240) = v9;
  uint64_t v13 = type metadata accessor for SubscriptionRegisterOperation.PreferredData(0);
  if (sub_1000082E8((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = sub_100005E5C(&qword_1000FCC50);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = type metadata accessor for SportingEventSubscription.Metadata();
    if (sub_1000082E8((uint64_t)v12, 1, v15))
    {
      uint64_t v16 = sub_100005E5C(&qword_1000FD498);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v11, v12, v15);
      sub_1000082C0((uint64_t)v11, 0, 1, v15);
    }
    sub_1000082C0((uint64_t)v11, 0, 1, v13);
  }
  uint64_t v17 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  return a1;
}

uint64_t sub_10003C098(uint64_t a1, uint64_t a2, int *a3)
{
  sub_100006178(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  sub_100006178(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_100006178(a1 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v14 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v14;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  uint64_t v15 = a3[18];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = type metadata accessor for SubscriptionRegisterOperation.PreferredData(0);
  int v19 = sub_1000082E8((uint64_t)v16, 1, v18);
  int v20 = sub_1000082E8((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      uint64_t v21 = type metadata accessor for SportingEventSubscription.Metadata();
      if (sub_1000082E8((uint64_t)v17, 1, v21))
      {
        uint64_t v22 = sub_100005E5C(&qword_1000FD498);
        memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v16, v17, v21);
        sub_1000082C0((uint64_t)v16, 0, 1, v21);
      }
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  if (v20)
  {
    sub_100042F34((uint64_t)v16, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation.PreferredData);
LABEL_7:
    uint64_t v23 = &qword_1000FCC50;
    goto LABEL_8;
  }
  uint64_t v18 = type metadata accessor for SportingEventSubscription.Metadata();
  int v25 = sub_1000082E8((uint64_t)v16, 1, v18);
  int v26 = sub_1000082E8((uint64_t)v17, 1, v18);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
LABEL_13:
      sub_1000082C0((uint64_t)v16, 0, 1, v18);
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v38 = *(void *)(v18 - 8);
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(v38 + 40))(v16, v17, v18);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v38 + 8))(v16, v18);
  }
  uint64_t v23 = &qword_1000FD498;
LABEL_8:
  uint64_t v24 = sub_100005E5C(v23);
  memcpy(v16, v17, *(void *)(*(void *)(v24 - 8) + 64));
LABEL_14:
  uint64_t v27 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[21];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (uint64_t *)(a2 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  *uint64_t v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10003C424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003C438);
}

uint64_t sub_10003C438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100005E5C(&qword_1000FCC50);
    uint64_t v9 = a1 + *(int *)(a3 + 72);
    return sub_1000082E8(v9, a2, v8);
  }
}

uint64_t sub_10003C4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003C4D8);
}

uint64_t sub_10003C4D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100005E5C(&qword_1000FCC50);
    uint64_t v8 = v5 + *(int *)(a4 + 72);
    return sub_1000082C0(v8, a2, a2, v7);
  }
  return result;
}

void sub_10003C55C()
{
  sub_10003CD80(319, (unint64_t *)&unk_1000FD508, (void (*)(uint64_t))type metadata accessor for SubscriptionRegisterOperation.PreferredData);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_10003C664(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_100005E5C(&qword_1000FD498) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = type metadata accessor for SportingEventSubscription.Metadata();
    if (sub_1000082E8((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      sub_1000082C0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10003C76C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SportingEventSubscription.Metadata();
  uint64_t result = sub_1000082E8(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_10003C7F4(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for SportingEventSubscription.Metadata();
  if (sub_1000082E8((uint64_t)a2, 1, v4))
  {
    uint64_t v5 = sub_100005E5C(&qword_1000FD498);
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    sub_1000082C0((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *sub_10003C8BC(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for SportingEventSubscription.Metadata();
  int v5 = sub_1000082E8((uint64_t)a1, 1, v4);
  int v6 = sub_1000082E8((uint64_t)a2, 1, v4);
  if (!v5)
  {
    uint64_t v7 = *(void *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v8 = sub_100005E5C(&qword_1000FD498);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  sub_1000082C0((uint64_t)a1, 0, 1, v4);
  return a1;
}

void *sub_10003CA04(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for SportingEventSubscription.Metadata();
  if (sub_1000082E8((uint64_t)a2, 1, v4))
  {
    uint64_t v5 = sub_100005E5C(&qword_1000FD498);
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    sub_1000082C0((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *sub_10003CACC(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for SportingEventSubscription.Metadata();
  int v5 = sub_1000082E8((uint64_t)a1, 1, v4);
  int v6 = sub_1000082E8((uint64_t)a2, 1, v4);
  if (!v5)
  {
    uint64_t v7 = *(void *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v8 = sub_100005E5C(&qword_1000FD498);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  sub_1000082C0((uint64_t)a1, 0, 1, v4);
  return a1;
}

uint64_t sub_10003CC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003CC28);
}

uint64_t sub_10003CC28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005E5C(&qword_1000FD498);

  return sub_1000082E8(a1, a2, v4);
}

uint64_t sub_10003CC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003CC88);
}

uint64_t sub_10003CC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005E5C(&qword_1000FD498);

  return sub_1000082C0(a1, a2, a2, v4);
}

void sub_10003CCD8()
{
  sub_10003CD80(319, (unint64_t *)&unk_1000FD5E0, (void (*)(uint64_t))&type metadata accessor for SportingEventSubscription.Metadata);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10003CD80(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10003CDD4(uint64_t a1)
{
  uint64_t v37 = &_swiftEmptyDictionarySingleton;
  sub_10008DAAC(a1, v38);
  uint64_t v1 = v38[0];
  int64_t v2 = v38[3];
  unint64_t v3 = v38[4];
  uint64_t v25 = v38[1];
  int64_t v26 = (unint64_t)(v38[2] + 64) >> 6;
  uint64_t v39 = (uint64_t)v35 + 8;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v5 = __clz(__rbit64(v3));
  v3 &= v3 - 1;
  unint64_t v6 = v5 | (v2 << 6);
  while (1)
  {
    char v11 = *(unsigned char *)(*(void *)(v1 + 48) + v6);
    sub_100043750(*(void *)(v1 + 56) + 32 * v6, v39, (uint64_t *)&unk_1000FC300);
    LOBYTE(v35[0]) = v11;
    v33[0] = v35[0];
    v33[1] = v35[1];
    uint64_t v34 = v36;
    sub_100043750((uint64_t)v33 + 8, (uint64_t)&v27, (uint64_t *)&unk_1000FC300);
    if (!v28)
    {
      sub_1000437A4((uint64_t)v33, &qword_1000FD308);
      int v20 = &v27;
      goto LABEL_33;
    }
    sub_100028F5C(&v27, v32);
    char v12 = v33[0];
    char v30 = v33[0];
    sub_1000437F8((uint64_t)v33 + 8, (uint64_t)v31, (uint64_t *)&unk_1000FC300);
    sub_100028F5C(v32, v29);
    uint64_t v13 = v37;
    unint64_t v14 = v37[2];
    if (v37[3] <= v14)
    {
      sub_1000C0A44(v14 + 1, 1);
      uint64_t v13 = v37;
    }
    Hasher.init(_seed:)();
    sub_1000990CC(v12);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v15 = v13 + 8;
    uint64_t v16 = -1 << *((unsigned char *)v13 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~v13[(v17 >> 6) + 8]) == 0) {
      break;
    }
    unint64_t v19 = __clz(__rbit64((-1 << v17) & ~v13[(v17 >> 6) + 8])) | v17 & 0x7FFFFFFFFFFFFFC0;
LABEL_32:
    *(void *)((char *)v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(unsigned char *)(v13[6] + v19) = v12;
    sub_100028F5C(v29, (_OWORD *)(v13[7] + 32 * v19));
    ++v13[2];
    int v20 = (long long *)v31;
LABEL_33:
    uint64_t result = sub_1000437A4((uint64_t)v20, (uint64_t *)&unk_1000FC300);
    if (v3) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v7 = v2 + 1;
    if (__OFADD__(v2, 1)) {
      goto LABEL_37;
    }
    if (v7 >= v26) {
      goto LABEL_35;
    }
    unint64_t v8 = *(void *)(v25 + 8 * v7);
    int64_t v9 = v2 + 1;
    if (!v8)
    {
      int64_t v9 = v2 + 2;
      if (v2 + 2 >= v26) {
        goto LABEL_35;
      }
      unint64_t v8 = *(void *)(v25 + 8 * v9);
      if (!v8)
      {
        int64_t v9 = v2 + 3;
        if (v2 + 3 >= v26) {
          goto LABEL_35;
        }
        unint64_t v8 = *(void *)(v25 + 8 * v9);
        if (!v8)
        {
          int64_t v9 = v2 + 4;
          if (v2 + 4 >= v26) {
            goto LABEL_35;
          }
          unint64_t v8 = *(void *)(v25 + 8 * v9);
          if (!v8)
          {
            int64_t v9 = v2 + 5;
            if (v2 + 5 >= v26) {
              goto LABEL_35;
            }
            unint64_t v8 = *(void *)(v25 + 8 * v9);
            if (!v8)
            {
              int64_t v10 = v2 + 6;
              while (v10 < v26)
              {
                unint64_t v8 = *(void *)(v25 + 8 * v10++);
                if (v8)
                {
                  int64_t v9 = v10 - 1;
                  goto LABEL_18;
                }
              }
LABEL_35:
              sub_10001BB94();
              return (uint64_t)v37;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v3 = (v8 - 1) & v8;
    unint64_t v6 = __clz(__rbit64(v8)) + (v9 << 6);
    int64_t v2 = v9;
  }
  char v21 = 0;
  unint64_t v22 = (unint64_t)(63 - v16) >> 6;
  while (++v18 != v22 || (v21 & 1) == 0)
  {
    BOOL v23 = v18 == v22;
    if (v18 == v22) {
      unint64_t v18 = 0;
    }
    v21 |= v23;
    uint64_t v24 = v15[v18];
    if (v24 != -1)
    {
      unint64_t v19 = __clz(__rbit64(~v24)) + (v18 << 6);
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10003D15C()
{
  uint64_t v1 = type metadata accessor for SubscriptionRegisterOperation(0);
  uint64_t v2 = sub_10000984C(v1);
  uint64_t v72 = v3;
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v2);
  uint64_t v74 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005E5C(&qword_1000FD610);
  sub_100009830();
  uint64_t v57 = v7;
  uint64_t v58 = v6;
  __chkstk_darwin(v6);
  sub_10000C58C();
  uint64_t v56 = v8;
  sub_100005E5C(&qword_1000FD618);
  sub_100009830();
  uint64_t v60 = v10;
  uint64_t v61 = v9;
  __chkstk_darwin(v9);
  sub_10000C58C();
  uint64_t v59 = v11;
  sub_100005E5C(&qword_1000FD620);
  sub_100009830();
  uint64_t v63 = v13;
  uint64_t v64 = v12;
  __chkstk_darwin(v12);
  sub_10000C58C();
  uint64_t v62 = v14;
  sub_100005E5C(&qword_1000FD628);
  sub_100009830();
  uint64_t v67 = v16;
  uint64_t v68 = v15;
  __chkstk_darwin(v15);
  sub_10000C58C();
  uint64_t v65 = v17;
  uint64_t v18 = sub_100005E5C(&qword_1000FD630);
  sub_100009830();
  uint64_t v69 = v19;
  __chkstk_darwin(v20);
  sub_10000C58C();
  uint64_t v66 = v21;
  unint64_t v22 = v0;
  sub_100005EA0((void *)(v0[5] + 16), *(void *)(v0[5] + 40));
  BOOL v23 = (void *)dispatch thunk of PersistentStorable.retrieveEventSubscription(canonicalId:isConventionalOrUnified:)();
  uint64_t v24 = v23;
  if (!v23) {
    goto LABEL_5;
  }
  id v25 = v23;
  uint64_t v26 = *(void *)(SportingEventSubscription.consumers.getter() + 16);
  swift_bridgeObjectRelease();
  if (!v26)
  {

LABEL_5:
    uint64_t v28 = v22[3];
    id v75 = v22;
    sub_100005EA0(v22, v28);
    uint64_t v76 = sub_10000DBE0();
    uint64_t v73 = type metadata accessor for SubscriptionRegisterOperation;
    uint64_t v29 = v74;
    sub_100042F8C((uint64_t)v22, v74, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
    uint64_t v30 = *(unsigned __int8 *)(v72 + 80);
    uint64_t v70 = ((v30 + 16) & ~v30) + v5;
    uint64_t v71 = (v30 + 16) & ~v30;
    uint64_t v31 = v71;
    uint64_t v72 = v30 | 7;
    uint64_t v32 = swift_allocObject();
    unint64_t v51 = type metadata accessor for SubscriptionRegisterOperation;
    sub_10004323C(v29, v32 + v31, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
    static Subscribers.Demand.unlimited.getter();
    sub_100005E5C(&qword_1000FC180);
    uint64_t v54 = v18;
    id v55 = v24;
    sub_100005E5C(&qword_1000FC190);
    sub_10000953C(&qword_1000FC188, &qword_1000FC180);
    int v53 = &protocol conformance descriptor for AnyPublisher<A, B>;
    sub_10000953C(&qword_1000FC1A0, &qword_1000FC190);
    Publisher<>.flatMap<A>(maxPublishers:_:)();
    swift_release();
    swift_release();
    sub_100042F8C((uint64_t)v75, v29, (void (*)(void))v73);
    uint64_t v33 = swift_allocObject() + v71;
    uint64_t v34 = v29;
    uint64_t v35 = v51;
    sub_10004323C(v34, v33, (void (*)(void))v51);
    static Subscribers.Demand.unlimited.getter();
    sub_100005E5C(&qword_1000FD638);
    sub_100005E5C(&qword_1000FD640);
    uint64_t v52 = &protocol conformance descriptor for Publishers.FlatMap<A, B>;
    sub_10000953C(&qword_1000FD648, &qword_1000FD610);
    sub_10000953C(&qword_1000FD650, &qword_1000FD640);
    Publisher.flatMap<A, B>(maxPublishers:_:)();
    swift_release();
    sub_100009894();
    v36();
    uint64_t v37 = v74;
    uint64_t v38 = v73;
    sub_100042F8C((uint64_t)v75, v74, (void (*)(void))v73);
    uint64_t v39 = swift_allocObject();
    uint64_t v40 = v71;
    sub_10004323C(v37, v39 + v71, (void (*)(void))v35);
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = sub_100042DE0;
    *(void *)(v41 + 24) = v39;
    sub_10000953C(&qword_1000FD658, &qword_1000FD618);
    Publisher.tryFilter(_:)();
    swift_release();
    sub_100009894();
    v42();
    sub_100042F8C((uint64_t)v75, v37, (void (*)(void))v38);
    uint64_t v43 = swift_allocObject();
    sub_10004323C(v37, v43 + v40, (void (*)(void))v35);
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = sub_100042EB4;
    *(void *)(v44 + 24) = v43;
    sub_10000953C(&qword_1000FD660, &qword_1000FD620);
    Publisher.map<A>(_:)();
    swift_release();
    sub_100009894();
    v45();
    sub_100005E5C(&qword_1000FCEE8);
    sub_10000953C(&qword_1000FD668, &qword_1000FD628);
    sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
    uint64_t v46 = v66;
    Publisher.catch<A>(_:)();
    sub_100009894();
    v47();
    sub_10000953C(&qword_1000FD670, &qword_1000FD630);
    uint64_t v48 = v54;
    uint64_t v27 = Publisher.eraseToAnyPublisher()();

    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v46, v48);
    return v27;
  }
  uint64_t v27 = sub_10003D960();

  return v27;
}

uint64_t sub_10003D960()
{
  uint64_t v1 = sub_100005E5C(&qword_1000FD2F8);
  uint64_t v36 = *(void *)(v1 - 8);
  uint64_t v37 = v1;
  __chkstk_darwin(v1);
  uint64_t v2 = sub_100005E5C(&qword_1000FD248);
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  __chkstk_darwin(v2);
  uint64_t v30 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100005E5C(&qword_1000FD250);
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  __chkstk_darwin(v4);
  uint64_t v31 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100005E5C(&qword_1000FCC50);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100005E5C(&qword_1000FD498);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SportingEventSubscription.Metadata();
  uint64_t v29 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[2] = SportingEventSubscription.consumers.getter();
  Swift::Int v15 = v0[17];
  Swift::Int v16 = v0[18];
  swift_bridgeObjectRetain();
  sub_100019324(v38, v15, v16);
  swift_bridgeObjectRelease();
  if (v0[24] && v0[26])
  {
    _OWORD v28[2] = v0[23];
    uint64_t v17 = v0[25];
    uint64_t v18 = type metadata accessor for SubscriptionRegisterOperation(0);
    sub_100043750((uint64_t)v0 + *(int *)(v18 + 72), (uint64_t)v8, &qword_1000FCC50);
    uint64_t v19 = type metadata accessor for SubscriptionRegisterOperation.PreferredData(0);
    if (sub_1000082E8((uint64_t)v8, 1, v19) == 1)
    {
      sub_1000437A4((uint64_t)v8, &qword_1000FCC50);
      sub_1000082C0((uint64_t)v11, 1, 1, v12);
    }
    else
    {
      sub_100043750((uint64_t)v8, (uint64_t)v11, &qword_1000FD498);
      sub_100042F34((uint64_t)v8, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation.PreferredData);
      if (sub_1000082E8((uint64_t)v11, 1, v12) != 1)
      {
        v28[1] = v17;
        uint64_t v27 = v29;
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v14, v11, v12);
        uint64_t v20 = (void *)SportingEventSubscription.byChanging(leagueId:sportId:metadata:consumers:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v12);
        goto LABEL_8;
      }
    }
    sub_1000437A4((uint64_t)v11, &qword_1000FD498);
  }
  uint64_t v20 = (void *)SportingEventSubscription.byChangingConsumers(_:)();
  swift_bridgeObjectRelease();
LABEL_8:
  sub_100005EA0((void *)(v0[5] + 16), *(void *)(v0[5] + 40));
  dispatch thunk of PersistentStorable.writeEventSubscription(_:isConventionalOrUnified:)();
  LOBYTE(v38[0]) = 1;
  uint64_t v21 = v30;
  Just.init(_:)();
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  unint64_t v22 = v31;
  uint64_t v23 = v33;
  Just.setFailureType<A>(to:)();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v23);
  sub_10000953C(&qword_1000FD298, &qword_1000FD250);
  uint64_t v24 = v35;
  uint64_t v25 = Publisher.eraseToAnyPublisher()();

  (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v24);
  return v25;
}

uint64_t sub_10003DF70@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for SubscriptionRegisterOperation(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v48 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v48 - v13);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v48 - v16;
  uint64_t v18 = *a1;
  unint64_t v19 = a1[1];
  if (qword_1000FBDC8 != -1) {
    swift_once();
  }
  uint64_t v54 = v18;
  uint64_t v20 = type metadata accessor for Logger();
  sub_10000929C(v20, (uint64_t)qword_10010A520);
  sub_100042F8C(a2, (uint64_t)v17, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
  sub_100042F8C(a2, (uint64_t)v14, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
  sub_100042F8C(a2, (uint64_t)v11, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
  sub_100042F8C(a2, (uint64_t)v8, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
  swift_bridgeObjectRetain_n();
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  int v23 = v22;
  BOOL v24 = os_log_type_enabled(v21, v22);
  unint64_t v53 = v19;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    v56[0] = v51;
    *(_DWORD *)uint64_t v25 = 136316162;
    uint64_t v52 = a3;
    HIDWORD(v50) = v23;
    os_log_t v49 = v21;
    uint64_t v26 = *((void *)v17 + 19);
    unint64_t v27 = *((void *)v17 + 20);
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_100017098(v26, v27, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100042F34((uint64_t)v17, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
    *(_WORD *)(v25 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_100017098(v54, v19, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 22) = 2080;
    uint64_t v28 = (uint64_t *)(*sub_100005EA0(v14, v14[3]) + OBJC_IVAR____TtC7sportsd11ApsListener_currentAPSConnectionEnvironment);
    uint64_t v30 = *v28;
    unint64_t v29 = v28[1];
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_100017098(v30, v29, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100042F34((uint64_t)v14, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
    *(_WORD *)(v25 + 32) = 2080;
    uint64_t v31 = *((void *)v11 + 17);
    unint64_t v32 = *((void *)v11 + 18);
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_100017098(v31, v32, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100042F34((uint64_t)v11, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
    *(_WORD *)(v25 + 42) = 2080;
    sub_100080A48(v8[256]);
    uint64_t v55 = sub_100017098(v33, v34, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    a3 = v52;
    sub_100042F34((uint64_t)v8, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
    os_log_t v35 = v49;
    _os_log_impl((void *)&_mh_execute_header, v49, BYTE4(v50), "Tempo /register with id=%s, push_token=%s, aps_env=%s consumer_id=%s, applicationType=%s", (uint8_t *)v25, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100042F34((uint64_t)v17, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
    swift_bridgeObjectRelease_n();
    sub_100042F34((uint64_t)v14, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
    sub_100042F34((uint64_t)v11, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
    sub_100042F34((uint64_t)v8, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
  }
  sub_100005EA0((void *)(a2 + 56), *(void *)(a2 + 80));
  uint64_t v36 = *(void *)(a2 + 152);
  uint64_t v37 = *(void *)(a2 + 160);
  uint64_t v38 = *(void *)(a2 + 184);
  uint64_t v39 = *(void *)(a2 + 192);
  uint64_t v40 = *(unsigned __int8 *)(a2 + 232);
  uint64_t v41 = *(unsigned __int8 *)(a2 + 256);
  uint64_t v42 = sub_10003E478();
  uint64_t v43 = sub_10003CDD4(v42);
  swift_bridgeObjectRelease();
  sub_100004EF4(v36, v37, v38, v39, v54, v53, v41, v40, v43, v47, v48, (uint64_t)v49, v50, v51, (uint64_t)v52, v53, v54, v55, v56[0],
    v56[1],
    v56[2]);
  uint64_t v45 = v44;
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v45;
  return result;
}

uint64_t sub_10003E478()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005E5C(&qword_1000FCC08);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CB980;
  *(unsigned char *)(inited + 32) = 2;
  uint64_t v7 = *(void *)(v1 + 152);
  uint64_t v8 = *(void *)(v1 + 160);
  *(void *)(inited + 64) = &type metadata for String;
  *(void *)(inited + 40) = v7;
  *(void *)(inited + 48) = v8;
  *(unsigned char *)(inited + 72) = 20;
  uint64_t v9 = (int *)type metadata accessor for SubscriptionRegisterOperation(0);
  uint64_t v10 = (uint64_t *)(v1 + v9[20]);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  *(void *)(inited + 104) = &type metadata for String;
  *(void *)(inited + 80) = v11;
  *(void *)(inited + 88) = v12;
  *(unsigned char *)(inited + 112) = 21;
  sub_100080A48(*(unsigned char *)(v1 + 256));
  *(void *)(inited + 144) = &type metadata for String;
  *(void *)(inited + 120) = v13;
  *(void *)(inited + 128) = v14;
  *(unsigned char *)(inited + 152) = 7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Date.init()();
  uint64_t v15 = sub_1000A268C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)(inited + 184) = &type metadata for UInt64;
  *(void *)(inited + 160) = v15;
  *(unsigned char *)(inited + 192) = 8;
  uint64_t v16 = *(void *)(v1 + v9[19]);
  *(void *)(inited + 224) = &type metadata for UInt64;
  *(void *)(inited + 200) = v16;
  *(unsigned char *)(inited + 232) = 43;
  unsigned int v17 = *(unsigned __int8 *)(v1 + 256);
  *(void *)(inited + 264) = &type metadata for Bool;
  *(unsigned char *)(inited + 240) = (v17 < 6) & (0x27u >> v17);
  *(unsigned char *)(inited + 272) = 44;
  *(void *)(inited + 304) = &type metadata for EventType.EventName;
  *(unsigned char *)(inited + 280) = 0;
  *(unsigned char *)(inited + 312) = 1;
  uint64_t v18 = (uint64_t *)(v1 + v9[21]);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *(void *)(inited + 344) = &type metadata for String;
  *(void *)(inited + 320) = v20;
  *(void *)(inited + 328) = v19;
  swift_bridgeObjectRetain();
  sub_100005E5C((uint64_t *)&unk_1000FC300);
  sub_100027288();
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_10003E6B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v74 = a2;
  uint64_t v77 = a3;
  uint64_t v76 = sub_100005E5C(&qword_1000FD638);
  __chkstk_darwin(v76);
  uint64_t v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100005E5C(&qword_1000FD6D8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100005E5C(&qword_1000FD6E0);
  uint64_t v75 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100005E5C(&qword_1000FC1D0);
  uint64_t v65 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v66 = v14;
  uint64_t v69 = (uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_100005E5C(&qword_1000FD6E8);
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v62 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100005E5C(&qword_1000FD6F0);
  uint64_t v70 = *(void *)(v16 - 8);
  uint64_t v71 = v16;
  __chkstk_darwin(v16);
  uint64_t v67 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100005E5C(&qword_1000FD6F8);
  uint64_t v72 = *(void *)(v18 - 8);
  uint64_t v73 = v18;
  __chkstk_darwin(v18);
  uint64_t v68 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78[3] = &type metadata for TVAppFeatureFlags;
  v78[4] = sub_1000092D4();
  char v20 = isFeatureEnabled(_:)();
  sub_100006178((uint64_t)v78);
  uint64_t v21 = a1;
  if ((v20 & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v22 = a1 + *(int *)(v13 + 40);
  uint64_t v23 = *(void *)(v22 + 48);
  if (!v23) {
    goto LABEL_6;
  }
  uint64_t v24 = v6;
  uint64_t v25 = v10;
  uint64_t v26 = v7;
  uint64_t v27 = *(void *)(v74 + 152);
  uint64_t v28 = *(void *)(v74 + 160);
  uint64_t v61 = v22;
  uint64_t v29 = v21;
  swift_bridgeObjectRetain();
  uint64_t v60 = v27;
  uint64_t v30 = v27;
  uint64_t v7 = v26;
  uint64_t v10 = v25;
  uint64_t v6 = v24;
  uint64_t v31 = sub_1000907F0(v30, v28, v23);
  swift_bridgeObjectRelease();
  uint64_t v21 = v29;
  uint64_t v32 = v61;
  if (v31)
  {
    unint64_t v33 = dispatch thunk of SportingEvent.competitors.getter();

    uint64_t v35 = *(void *)(v32 + 24);
    if (v35)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_100090838(v60, v28, v35);
      uint64_t v38 = v37;
      uint64_t v34 = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v36 = 0;
      uint64_t v38 = 0;
    }
    __chkstk_darwin(v34);
    uint64_t v43 = v74;
    *(&v60 - 2) = v44;
    *(&v60 - 1) = v43;
    uint64_t v45 = sub_1000AF99C((void (*)(uint64_t *__return_ptr, id *))sub_100043294, (uint64_t)(&v60 - 4), v33);
    uint64_t v46 = swift_bridgeObjectRelease();
    uint64_t v47 = *(void *)(v43 + 40);
    __chkstk_darwin(v46);
    *(&v60 - 2) = (uint64_t)sub_1000432B0;
    *(&v60 - 1) = v47;
    swift_retain();
    uint64_t v48 = sub_1000A2738((uint64_t)v45, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000432B4);
    swift_bridgeObjectRelease();
    swift_release();
    v78[0] = v48;
    sub_100005E5C(&qword_1000FD708);
    sub_100005E5C(&qword_1000FD710);
    sub_10000953C(&qword_1000FD718, &qword_1000FD708);
    sub_10000953C(&qword_1000FD720, &qword_1000FD710);
    os_log_t v49 = v62;
    Publishers.MergeMany.init<A>(_:)();
    sub_10000953C(&qword_1000FD728, &qword_1000FD6E8);
    uint64_t v50 = v67;
    uint64_t v51 = v64;
    Publisher.collect()();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v49, v51);
    uint64_t v52 = v69;
    sub_100043750(v29, v69, &qword_1000FC1D0);
    unint64_t v53 = (*(unsigned __int8 *)(v65 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    unint64_t v54 = (v66 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v55 = swift_allocObject();
    sub_1000437F8(v52, v55 + v53, &qword_1000FC1D0);
    uint64_t v56 = (uint64_t *)(v55 + v54);
    uint64_t *v56 = v36;
    v56[1] = v38;
    sub_10000953C(&qword_1000FD730, &qword_1000FD6F0);
    uint64_t v57 = v68;
    uint64_t v58 = v71;
    Publisher.map<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v50, v58);
    sub_10000953C(&qword_1000FD738, &qword_1000FD6F8);
    uint64_t v59 = v73;
    uint64_t v41 = Publisher.eraseToAnyPublisher()();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v57, v59);
  }
  else
  {
LABEL_6:
    uint64_t v39 = *(int *)(v76 + 48);
    uint64_t v40 = *(int *)(v76 + 64);
    sub_100043750(v21, (uint64_t)v5, &qword_1000FC1D0);
    *(void *)&v5[v39] = _swiftEmptyArrayStorage;
    *(_OWORD *)&v5[v40] = xmmword_1000CB990;
    Just.init(_:)();
    sub_100005E5C((uint64_t *)&unk_1000FDA30);
    Just.setFailureType<A>(to:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_10000953C(&qword_1000FD700, &qword_1000FD6E0);
    uint64_t v41 = Publisher.eraseToAnyPublisher()();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v12, v10);
  }
  *uint64_t v77 = v41;
  return result;
}

void sub_10003EF50(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v56 = type metadata accessor for TemplateImageUrl.ImageFormat();
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2 || !*(void *)(a2 + 16)) {
    goto LABEL_16;
  }
  uint64_t v53 = v13;
  uint64_t v54 = v3;
  uint64_t v16 = *a1;
  swift_bridgeObjectRetain();
  unint64_t v17 = sub_1000175F0();
  if ((v18 & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v19 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v17);
  uint64_t v20 = v19[1];
  uint64_t v52 = *v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = (void *)SportingEventCompetitorContainer.competitor.getter();
  unint64_t v22 = dispatch thunk of SportingEventCompetitor.images.getter();

  if (!v22)
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return;
  }
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    if (v23) {
      goto LABEL_7;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v23) {
    goto LABEL_23;
  }
LABEL_7:
  unint64_t v49 = v22 & 0xC000000000000001;
  uint64_t v50 = v23;
  v47[1] = v16;
  unint64_t v51 = v22;
  if ((v22 & 0xC000000000000001) != 0) {
    goto LABEL_41;
  }
  for (id i = *(id *)(v22 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    uint64_t v25 = i;
    BOOL v27 = SportingEventImage.type.getter() == 1869049676 && v26 == 0xE400000000000000;
    uint64_t v48 = v15;
    if (v27) {
      break;
    }
    uint64_t v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_18;
    }

    if (v50 == 1) {
      goto LABEL_23;
    }
    v47[0] = v12;
    uint64_t v42 = 5;
    while (1)
    {
      id v43 = v49 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v51 + 8 * v42);
      uint64_t v25 = v43;
      uint64_t v12 = v42 - 3;
      if (__OFADD__(v42 - 4, 1)) {
        break;
      }
      if (SportingEventImage.type.getter() == 1869049676 && v44 == 0xE400000000000000)
      {
        uint64_t v12 = v47[0];
        goto LABEL_17;
      }
      uint64_t v15 = v20;
      char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v46)
      {
        uint64_t v12 = v47[0];
        goto LABEL_18;
      }

      ++v42;
      uint64_t v20 = v15;
      if (v12 == v50) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_41:
    ;
  }
LABEL_17:
  swift_bridgeObjectRelease();
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  SportingEventImage.token.getter();

  uint64_t v54 = static TemplateImageUrl.templateThumbUrl(host:token:)();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v48;
  if (!v29) {
    goto LABEL_16;
  }
  uint64_t v31 = v55;
  uint64_t v32 = v56;
  (*(void (**)(char *, void, uint64_t))(v55 + 104))(v8, enum case for TemplateImageUrl.ImageFormat.png(_:), v56);
  static TemplateImageUrl.imageUrl(templateUrl:width:height:format:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v32);
  if (sub_1000082E8((uint64_t)v11, 1, v12) == 1)
  {
    sub_1000437A4((uint64_t)v11, (uint64_t *)&unk_1000FDA80);
    goto LABEL_16;
  }
  uint64_t v33 = v53;
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v30, v11, v12);
  uint64_t v34 = (void *)SportingEventCompetitorContainer.competitor.getter();
  uint64_t v35 = SportingEventCompetitor.canonicalId.getter();
  uint64_t v36 = v12;
  uint64_t v38 = v37;

  uint64_t v39 = URL.absoluteString.getter();
  uint64_t v41 = v40;
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v30, v36);
  *(void *)a3 = v35;
  *(void *)(a3 + 8) = v38;
  *(void *)(a3 + 16) = v39;
  *(void *)(a3 + 24) = v41;
}

uint64_t sub_10003F4C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *a1;
  uint64_t v10 = sub_100005E5C(&qword_1000FD638);
  uint64_t v11 = *(int *)(v10 + 48);
  uint64_t v12 = (void *)(a5 + *(int *)(v10 + 64));
  sub_100043750(a2, a5, &qword_1000FC1D0);
  *(void *)(a5 + v11) = v9;
  *uint64_t v12 = a3;
  v12[1] = a4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_10003F558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for SubscriptionRegisterOperation(0);
  uint64_t v38 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v38 + 64);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = sub_100005E5C(&qword_1000FC940);
  __chkstk_darwin(v12 - 8);
  uint64_t v37 = (uint64_t)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = _s20RegistrationResponseVMa();
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100005E5C(&qword_1000FC1D0);
  sub_100042F8C(a1 + *(int *)(v17 + 40), (uint64_t)v16, (void (*)(void))_s20RegistrationResponseVMa);
  uint64_t v18 = *((void *)v16 + 6);
  uint64_t v39 = v11;
  uint64_t v40 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v18)
  {
    uint64_t v20 = *(void *)(a5 + 152);
    uint64_t v19 = *(void *)(a5 + 160);
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1000907F0(v20, v19, v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = 0;
  }
  if (a4) {
    uint64_t v22 = a3;
  }
  else {
    uint64_t v22 = 0;
  }
  if (a4) {
    uint64_t v23 = a4;
  }
  else {
    uint64_t v23 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = (void *)sub_10003F908(a1, a2, v22, v23);
  swift_bridgeObjectRelease();
  if (v21)
  {
    type metadata accessor for ApsMessageProcessingOperation();
    id v25 = v21;
    id v26 = v24;
    sub_1000AFB74(v25, v24);
  }
  sub_100040EA4(*(void *)(a1 + *(int *)(v17 + 36)), *(void *)(a1 + *(int *)(v17 + 36) + 8));
  uint64_t v27 = v41;
  sub_100041168((uint64_t)v24, v21);
  if (v27)
  {
    sub_100042F34((uint64_t)v16, (void (*)(void))_s20RegistrationResponseVMa);
  }
  else
  {
    uint64_t v28 = SportingEventSubscription.consumers.getter();
    sub_1000511F4(0xD000000000000011, 0x80000001000D0580, v28);
    char v30 = v29;
    swift_bridgeObjectRelease();
    if (v30)
    {
      uint64_t v31 = type metadata accessor for TaskPriority();
      uint64_t v32 = v37;
      sub_1000082C0(v37, 1, 1, v31);
      uint64_t v33 = v40;
      sub_100042F8C(a5, v40, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
      unint64_t v34 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = 0;
      *(void *)(v35 + 24) = 0;
      sub_10004323C(v33, v35 + v34, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
      sub_100051F94(v32, (uint64_t)&unk_1000FD680, v35);
      swift_release();
    }

    sub_100042F34((uint64_t)v16, (void (*)(void))_s20RegistrationResponseVMa);
  }
  return 1;
}

uint64_t sub_10003F908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v152 = a4;
  uint64_t v151 = a3;
  uint64_t v149 = a2;
  uint64_t v174 = a1;
  uint64_t v6 = sub_100005E5C(&qword_1000FD688);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v144 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = type metadata accessor for SportingEventRunningClockFeature();
  uint64_t v178 = *(char **)(v180 - 8);
  __chkstk_darwin(v180);
  v179 = (char *)v144 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v177 = (char *)v144 - v11;
  uint64_t v170 = type metadata accessor for SubscriptionRegisterOperation(0);
  __chkstk_darwin(v170);
  v160 = (char *)v144 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
  __chkstk_darwin(v13 - 8);
  uint64_t v173 = (uint64_t)v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v172 = (uint64_t)v144 - v16;
  __chkstk_darwin(v17);
  uint64_t v171 = (uint64_t)v144 - v18;
  uint64_t v156 = type metadata accessor for Sport();
  uint64_t v155 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  unint64_t v154 = (char *)v144 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100005E5C(&qword_1000FD690);
  __chkstk_darwin(v20 - 8);
  uint64_t v163 = (uint64_t)v144 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v148 = (uint64_t)v144 - v23;
  uint64_t v24 = sub_100005E5C(&qword_1000FD698);
  __chkstk_darwin(v24 - 8);
  uint64_t v146 = (char *)v144 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = type metadata accessor for Date();
  uint64_t v153 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  v158 = (char *)v144 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v147 = (char *)v144 - v28;
  __chkstk_darwin(v29);
  v159 = (char *)v144 - v30;
  uint64_t v31 = sub_100005E5C(&qword_1000FCC50);
  __chkstk_darwin(v31 - 8);
  uint64_t v33 = (char *)v144 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100005E5C(&qword_1000FD498);
  __chkstk_darwin(v34 - 8);
  uint64_t v162 = (uint64_t)v144 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v150 = (char *)v144 - v37;
  __chkstk_darwin(v38);
  uint64_t v165 = (uint64_t)v144 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)v144 - v41;
  __chkstk_darwin(v43);
  uint64_t v176 = (uint64_t)v144 - v44;
  uint64_t v166 = _s20RegistrationResponseVMa();
  __chkstk_darwin(v166);
  char v46 = (char *)v144 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = *((void *)v4 + 19);
  uint64_t v48 = *((void *)v4 + 20);
  sub_100005EA0((void *)(*((void *)v4 + 5) + 16), *(void *)(*((void *)v4 + 5) + 40));
  uint64_t v49 = (uint64_t)v46;
  uint64_t v50 = (void *)dispatch thunk of PersistentStorable.retrieveEventSubscription(canonicalId:isConventionalOrUnified:)();
  uint64_t v51 = sub_100005E5C(&qword_1000FC1D0);
  sub_100042F8C(v174 + *(int *)(v51 + 40), v49, (void (*)(void))_s20RegistrationResponseVMa);
  uint64_t v52 = *(void *)(v49 + 48);
  if (v52)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v167 = (char *)sub_1000907F0(v47, v48, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v167 = 0;
  }
  uint64_t v175 = v49;
  if (v50)
  {
    id v53 = v50;
    uint64_t v54 = (char *)SportingEventSubscription.consumers.getter();
  }
  else
  {
    uint64_t v54 = (char *)&_swiftEmptySetSingleton;
  }
  unint64_t v182 = v54;
  Swift::Int v55 = *((void *)v5 + 17);
  Swift::Int v56 = *((void *)v5 + 18);
  swift_bridgeObjectRetain();
  sub_100019324(v181, v55, v56);
  swift_bridgeObjectRelease();
  uint64_t v57 = v175;
  uint64_t v58 = *(void *)(v175 + 32);
  if (!v58
    || (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        uint64_t v59 = (void *)sub_100090890(v47, v48, v58),
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        !v59))
  {
    swift_bridgeObjectRelease();
    uint64_t v59 = _swiftEmptyArrayStorage;
  }
  size_t v169 = v59;
  uint64_t v164 = *((void *)v5 + 23);
  uint64_t v174 = *((void *)v5 + 24);
  uint64_t v60 = *((void *)v5 + 26);
  uint64_t v168 = *((void *)v5 + 25);
  sub_100043750((uint64_t)&v5[*(int *)(v170 + 72)], (uint64_t)v33, &qword_1000FCC50);
  uint64_t v61 = type metadata accessor for SubscriptionRegisterOperation.PreferredData(0);
  if (sub_1000082E8((uint64_t)v33, 1, v61) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000437A4((uint64_t)v33, &qword_1000FCC50);
    uint64_t v62 = type metadata accessor for SportingEventSubscription.Metadata();
    sub_1000082C0((uint64_t)v42, 1, 1, v62);
  }
  else
  {
    sub_100043750((uint64_t)v33, (uint64_t)v42, &qword_1000FD498);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100042F34((uint64_t)v33, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation.PreferredData);
    uint64_t v63 = type metadata accessor for SportingEventSubscription.Metadata();
    if (sub_1000082E8((uint64_t)v42, 1, v63) != 1)
    {
      uint64_t v66 = v176;
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v176, v42, v63);
      sub_1000082C0(v66, 0, 1, v63);
      goto LABEL_18;
    }
  }
  if (v50)
  {
    id v64 = v50;
    SportingEventSubscription.metadata.getter();
  }
  else
  {
    uint64_t v65 = type metadata accessor for SportingEventSubscription.Metadata();
    sub_1000082C0(v176, 1, 1, v65);
  }
  sub_1000437A4((uint64_t)v42, &qword_1000FD498);
LABEL_18:
  v181[3] = (Swift::Int)&type metadata for TVAppFeatureFlags;
  v181[4] = sub_1000092D4();
  char v67 = isFeatureEnabled(_:)();
  sub_100006178((uint64_t)v181);
  id v161 = v50;
  if ((v67 & 1) == 0) {
    goto LABEL_51;
  }
  uint64_t v68 = v165;
  sub_100043750(v176, v165, &qword_1000FD498);
  uint64_t v69 = type metadata accessor for SportingEventSubscription.Metadata();
  int v70 = sub_1000082E8(v68, 1, v69);
  sub_1000437A4(v68, &qword_1000FD498);
  if (v70 != 1 || !v167) {
    goto LABEL_51;
  }
  uint64_t v145 = v69;
  uint64_t v71 = v167;
  unint64_t v72 = dispatch thunk of SportingEvent.competitors.getter();

  unint64_t v73 = v149;
  swift_bridgeObjectRetain();
  sub_10003ACF4(v72, v73);
  v144[1] = v74;
  swift_bridgeObjectRelease();
  uint64_t v75 = v159;
  Date.init()();
  uint64_t v76 = v71;
  uint64_t v77 = (void *)dispatch thunk of SportingEvent.schedule.getter();

  uint64_t v78 = v157;
  uint64_t v79 = v153;
  if (v77)
  {
    uint64_t v80 = (void *)SportingEventSchedule.duration.getter();

    SportingEventDuration.start.getter();
    uint64_t v75 = v159;
    uint64_t v81 = v147;
    Date.init(timeIntervalSince1970:)();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v75, v78);
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v75, v81, v78);
  }
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v158, v75, v78);
  uint64_t v82 = v148;
  sub_100043750(v57 + *(int *)(v166 + 44), v148, &qword_1000FD690);
  uint64_t v83 = type metadata accessor for SportingEventViewContext();
  if (sub_1000082E8(v82, 1, v83) == 1)
  {
    unint64_t v84 = &qword_1000FD690;
    uint64_t v85 = v82;
LABEL_27:
    sub_1000437A4(v85, v84);
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v149 = 0;
    uint64_t v148 = 0xE000000000000000;
    goto LABEL_29;
  }
  uint64_t v86 = (uint64_t)v146;
  SportingEventViewContext.titles.getter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v83 - 8) + 8))(v82, v83);
  uint64_t v87 = type metadata accessor for SportingEventViewContext.LocalizedTitles();
  if (sub_1000082E8(v86, 1, v87) == 1)
  {
    unint64_t v84 = &qword_1000FD698;
    uint64_t v85 = v86;
    goto LABEL_27;
  }
  uint64_t v93 = v86;
  uint64_t v149 = SportingEventViewContext.LocalizedTitles.preGame.getter();
  uint64_t v95 = v94;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v87 - 8) + 8))(v93, v87);
  uint64_t v148 = v95;
  if (!v95) {
    goto LABEL_28;
  }
LABEL_29:
  uint64_t v88 = v76;
  unint64_t v89 = dispatch thunk of SportingEvent.localizedShortName.getter();

  if (!v89)
  {
LABEL_39:
    uint64_t v147 = 0;
    uint64_t v146 = (char *)0xE000000000000000;
    goto LABEL_40;
  }
  if (v89 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v96 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v96) {
      goto LABEL_32;
    }
    goto LABEL_38;
  }
  if (!*(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_38:
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
LABEL_32:
  sub_100097604(0, (v89 & 0xC000000000000001) == 0, v89);
  if ((v89 & 0xC000000000000001) != 0) {
    id v90 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v90 = *(id *)(v89 + 32);
  }
  uint64_t v91 = v90;
  swift_bridgeObjectRelease();
  uint64_t v147 = (char *)SportingEventLocalizedDisplayName.text.getter();
  uint64_t v146 = v92;

LABEL_40:
  uint64_t v97 = v88;
  uint64_t v98 = (void *)dispatch thunk of SportingEvent.league.getter();

  if (v98)
  {
    unint64_t v99 = SportingEventLeague.localizedDisplayName.getter();

    if (v99 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v102 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v102) {
        goto LABEL_43;
      }
    }
    else if (*(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_43:
      uint64_t v165 = v60;
      sub_100097604(0, (v99 & 0xC000000000000001) == 0, v99);
      if ((v99 & 0xC000000000000001) != 0) {
        id v100 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v100 = *(id *)(v99 + 32);
      }
      uint64_t v101 = v100;
      swift_bridgeObjectRelease();
      SportingEventLocalizedDisplayName.text.getter();

      uint64_t v60 = v165;
      goto LABEL_48;
    }
    swift_bridgeObjectRelease();
  }
LABEL_48:
  swift_bridgeObjectRetain();
  uint64_t v103 = (uint64_t)v150;
  SportingEventSubscription.Metadata.init(eventStartDate:competitors:preGameTitle:shortTitle:eventURL:localizedLeagueName:)();
  uint64_t v104 = v176;
  sub_1000437A4(v176, &qword_1000FD498);
  sub_1000082C0(v103, 0, 1, v145);
  sub_1000437F8(v103, v104, &qword_1000FD498);
  uint64_t v105 = v97;
  int v106 = (void *)dispatch thunk of SportingEvent.league.getter();

  if (v106)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v164 = SportingEventLeague.canonicalId.getter();
    uint64_t v174 = v107;
    uint64_t v108 = (void *)SportingEventLeague.sport.getter();
    uint64_t v168 = SportingEventSport.canonicalId.getter();
    uint64_t v60 = v109;

    (*(void (**)(char *, uint64_t))(v153 + 8))(v159, v157);
    v159 = v182;
    swift_bridgeObjectRetain();
LABEL_52:
    swift_bridgeObjectRetain();
    int v110 = v154;
    uint64_t v165 = v60;
    Sport.init(rawValue:)();
    v158 = (char *)Sport.rawValue.getter();
    uint64_t v157 = v111;
    (*(void (**)(char *, uint64_t))(v155 + 8))(v110, v156);
    goto LABEL_54;
  }
  (*(void (**)(char *, uint64_t))(v153 + 8))(v159, v157);
LABEL_51:
  v159 = (char *)swift_bridgeObjectRetain();
  if (v60) {
    goto LABEL_52;
  }
  v158 = 0;
  uint64_t v165 = 0;
  uint64_t v157 = 0xE000000000000000;
LABEL_54:
  uint64_t v112 = *((void *)v5 + 31);
  uint64_t v156 = *((void *)v5 + 30);
  uint64_t v113 = *(void *)v57;
  uint64_t v115 = *((void *)v5 + 19);
  uint64_t v114 = *((void *)v5 + 20);
  uint64_t v155 = v112;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100090838(v115, v114, v113);
  uint64_t v117 = v116;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v117)
  {
    URL.init(string:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v118 = type metadata accessor for URL();
    sub_1000082C0(v171, 1, 1, v118);
  }
  uint64_t v119 = *(void *)(v57 + 8);
  if (v119
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_100090838(v115, v114, v119),
        uint64_t v121 = v120,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        v121))
  {
    swift_bridgeObjectRetain();
    URL.init(string:)();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v122 = type metadata accessor for URL();
    sub_1000082C0(v172, 1, 1, v122);
  }
  uint64_t v123 = *(void *)(v57 + 16);
  if (v123
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_100090838(v115, v114, v123),
        uint64_t v125 = v124,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        v125))
  {
    swift_bridgeObjectRetain();
    URL.init(string:)();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v126 = type metadata accessor for URL();
    sub_1000082C0(v173, 1, 1, v126);
  }
  uint64_t v127 = (uint64_t)v160;
  v128 = v169;
  sub_100042F8C((uint64_t)v5, (uint64_t)v160, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
  id v129 = v167;
  if (v167)
  {
    v160 = v167;
  }
  else
  {
    type metadata accessor for SportingEventFactory();
    unint64_t v130 = (char *)static SportingEventFactory.unknown(canonicalId:)();
    v128 = v169;
    v160 = v130;
    id v129 = 0;
  }
  v167 = (char *)v129;
  sub_100042F34(v127, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
  unint64_t v154 = *(char **)(v57 + 56);
  LODWORD(v153) = *(unsigned __int8 *)(v57 + 64);
  uint64_t v152 = *(void *)(v57 + 72);
  LODWORD(v151) = *(unsigned __int8 *)(v57 + 80);
  uint64_t v131 = v128[2];
  if (v131)
  {
    uint64_t v150 = v5;
    uint64_t v132 = (void (**)(char *, char *, uint64_t))(v178 + 32);
    swift_bridgeObjectRetain();
    uint64_t v133 = v128 + 7;
    uint64_t v134 = (char *)_swiftEmptyArrayStorage;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      SportingEventRunningClockFeature.init(feature:value:)();
      uint64_t v135 = v180;
      if (sub_1000082E8((uint64_t)v8, 1, v180) == 1)
      {
        sub_1000437A4((uint64_t)v8, &qword_1000FD688);
      }
      else
      {
        unint64_t v136 = *v132;
        unint64_t v137 = v177;
        (*v132)(v177, v8, v135);
        v136(v179, v137, v135);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v134 = (char *)sub_100015954(0, *((void *)v134 + 2) + 1, 1, (uint64_t)v134);
        }
        unint64_t v139 = *((void *)v134 + 2);
        unint64_t v138 = *((void *)v134 + 3);
        if (v139 >= v138 >> 1) {
          uint64_t v134 = (char *)sub_100015954(v138 > 1, v139 + 1, 1, (uint64_t)v134);
        }
        *((void *)v134 + 2) = v139 + 1;
        v136(&v134[((v178[80] + 32) & ~(unint64_t)v178[80])+ *((void *)v178 + 9) * v139], v179, v135);
      }
      v133 += 4;
      --v131;
    }
    while (v131);
    swift_bridgeObjectRelease();
    v140 = v150;
    uint64_t v57 = v175;
  }
  else
  {
    v140 = v5;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v141 = *(void *)(v57 + 88);
  v179 = *(char **)(v57 + 96);
  uint64_t v180 = v141;
  sub_100043750(v176, v162, &qword_1000FD498);
  sub_100043750(v57 + *(int *)(v166 + 44), v163, &qword_1000FD690);
  swift_bridgeObjectRetain();
  sub_100080B14();
  sub_100080A48(v140[256]);
  uint64_t v178 = (char *)objc_allocWithZone((Class)type metadata accessor for SportingEventSubscription());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v142 = SportingEventSubscription.init(consumers:sportId:sport:leagueId:leagueAbbreviation:eventStateURL:fullPayloadBaseURL:imageServiceBaseURL:sportingEventDetails:heartbeatTTLSeconds:heartbeatSessionsTTLSeconds:liveActivityTTLSeconds:clockFeatures:registrationId:metadata:view:shouldDisplayPlayByPlay:qosRegistrationId:applicationType:clientApp:)();

  sub_1000437A4(v176, &qword_1000FD498);
  sub_100042F34(v175, (void (*)(void))_s20RegistrationResponseVMa);
  return v142;
}

void sub_100040EA4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for SubscriptionRegisterOperation(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 60 != 15)
  {
    void v15[3] = (uint64_t)&type metadata for TVAppFeatureFlags;
    v15[4] = sub_1000092D4();
    sub_10001DF8C(a1, a2);
    char v8 = isFeatureEnabled(_:)();
    sub_100006178((uint64_t)v15);
    if (v8)
    {
      sub_100032460(a1, a2, *(void *)(v2 + 152), *(void *)(v2 + 160), (*(unsigned __int8 *)(v2 + 256) < 6u) & (0x27u >> *(unsigned char *)(v2 + 256)));
      sub_100029010(a1, a2);
      return;
    }
    sub_100029010(a1, a2);
  }
  if (qword_1000FBDC8 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000929C(v9, (uint64_t)qword_10010A520);
  sub_100042F8C(v2, (uint64_t)v7, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v13 = *((void *)v7 + 19);
    unint64_t v14 = *((void *)v7 + 20);
    swift_bridgeObjectRetain();
    v15[5] = sub_100017098(v13, v14, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100042F34((uint64_t)v7, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Unexpected empty response from Tempo registration for canonicalId: %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100042F34((uint64_t)v7, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
  }
}

void sub_100041168(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v24 = &type metadata for TVAppFeatureFlags;
  unint64_t v7 = sub_1000092D4();
  unint64_t v25 = v7;
  char v8 = isFeatureEnabled(_:)();
  sub_100006178((uint64_t)v23);
  if ((v8 & 1) == 0)
  {
    dispatch thunk of PlaysStore.removePlays(forCanonicalId:)();
    if (v3)
    {
      swift_errorRelease();
      uint64_t v4 = 0;
    }
  }
  sub_100005EA0((void *)(*(void *)(v5 + 40) + 16), *(void *)(*(void *)(v5 + 40) + 40));
  dispatch thunk of PersistentStorable.writeEventSubscription(_:isConventionalOrUnified:)();
  if (!v4)
  {
    uint64_t v24 = &type metadata for TVAppFeatureFlags;
    unint64_t v25 = v7;
    char v9 = isFeatureEnabled(_:)();
    sub_100006178((uint64_t)v23);
    if ((v9 & 1) == 0)
    {
      if (a2)
      {
        uint64_t v10 = qword_1000FBDC8;
        id v11 = a2;
        if (v10 != -1) {
          swift_once();
        }
        uint64_t v12 = type metadata accessor for Logger();
        sub_10000929C(v12, (uint64_t)qword_10010A520);
        uint64_t v13 = v11;
        unint64_t v14 = Logger.logObject.getter();
        os_log_type_t v15 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v14, v15))
        {
          uint64_t v16 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v16 = 134217984;
          unint64_t v17 = dispatch thunk of SportingEvent.plays.getter();
          if (v17 >> 62) {
            uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
          }
          else {
            uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }

          swift_bridgeObjectRelease();
          v23[0] = v18;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          _os_log_impl((void *)&_mh_execute_header, v14, v15, "Tempo /register - found initial data, plays=%ld", v16, 0xCu);
          swift_slowDealloc();
        }
        else
        {

          unint64_t v14 = v13;
        }

        dispatch thunk of SportingEvent.plays.getter();
        dispatch thunk of PlaysStore.write(plays:forCanonicalId:)();

        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1000FBDC8 != -1) {
          swift_once();
        }
        uint64_t v19 = type metadata accessor for Logger();
        sub_10000929C(v19, (uint64_t)qword_10010A520);
        uint64_t v20 = Logger.logObject.getter();
        os_log_type_t v21 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v20, v21))
        {
          uint64_t v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v22 = 0;
          _os_log_impl((void *)&_mh_execute_header, v20, v21, "Tempo /register - initial data not found", v22, 2u);
          swift_slowDealloc();
        }
      }
    }
  }
}

uint64_t sub_1000414B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_1000414D0, 0, 0);
}

uint64_t sub_1000414D0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_100005EA0(v1 + 12, v1[15]);
  sub_10008E500(v1[19], v1[20]);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_100041548(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_1000FBDB8 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000929C(v1, (uint64_t)qword_10010A4F0);
    swift_errorRetain();
    swift_errorRetain();
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 136315138;
      swift_getErrorValue();
      uint64_t v4 = Error.localizedDescription.getter();
      sub_100017098(v4, v5, &v7);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Error connecting to watchlistd for suppression. %s", v3, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_100041754(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void))
{
  uint64_t v4 = sub_100005E5C(&qword_1000FD638);
  return a2(a1, *(void *)(a1 + *(int *)(v4 + 48)), *(void *)(a1 + *(int *)(v4 + 64)), *(void *)(a1 + *(int *)(v4 + 64) + 8)) & 1;
}

uint64_t sub_1000417BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = type metadata accessor for SubscriptionRegisterOperation(0);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v11 = (char *)&v21 - v10;
  if (qword_1000FBDC8 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000929C(v12, (uint64_t)qword_10010A520);
  sub_100042F8C(a5, (uint64_t)v11, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
  sub_100042F8C(a5, (uint64_t)v8, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = *((void *)v11 + 19);
    unint64_t v17 = *((void *)v11 + 20);
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_100017098(v16, v17, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100042F34((uint64_t)v11, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
    *(_WORD *)(v15 + 12) = 2080;
    sub_100080A48(v8[256]);
    uint64_t v21 = sub_100017098(v18, v19, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100042F34((uint64_t)v8, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Tempo /register success for %s - %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100042F34((uint64_t)v11, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
    sub_100042F34((uint64_t)v8, (void (*)(void))type metadata accessor for SubscriptionRegisterOperation);
  }

  return 1;
}

uint64_t sub_100041A80@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void, void, void)@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_100005E5C(&qword_1000FD638);
  uint64_t result = a2(a1, *(void *)(a1 + *(int *)(v6 + 48)), *(void *)(a1 + *(int *)(v6 + 64)), *(void *)(a1 + *(int *)(v6 + 64) + 8));
  *a3 = result & 1;
  return result;
}

uint64_t sub_100041AE8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100005E5C(&qword_1000FD2F8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = *a1;
  swift_errorRetain();
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  Fail.init(error:)();
  sub_10000953C(&qword_1000FD300, &qword_1000FD2F8);
  uint64_t v8 = Publisher.eraseToAnyPublisher()();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  return result;
}

uint64_t sub_100041C30@<X0>(uint64_t *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v140 = a2;
  uint64_t v6 = (char *)type metadata accessor for SportingEventCompetitorQualifier();
  uint64_t v131 = *((void *)v6 - 1);
  __chkstk_darwin(v6);
  uint64_t v125 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_100005E5C(&qword_1000FD6A8);
  __chkstk_darwin(v134);
  uint64_t v9 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100005E5C(&qword_1000FD6B0);
  __chkstk_darwin(v10 - 8);
  uint64_t v128 = (uint64_t)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v138 = (uint64_t)&v118 - v13;
  __chkstk_darwin(v14);
  unint64_t v137 = (char *)&v118 - v15;
  uint64_t v16 = sub_100005E5C(&qword_1000FD6B8);
  __chkstk_darwin(v16 - 8);
  id v143 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = type metadata accessor for SportingEventSubscription.Competitor.LogoFilePaths();
  uint64_t v133 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v127 = (char *)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v126 = (char *)&v118 - v20;
  uint64_t v139 = type metadata accessor for LogoDownloadResult();
  uint64_t v129 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v150 = (uint64_t *)((char *)&v118 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = sub_100005E5C(&qword_1000FD6C0);
  __chkstk_darwin(v22 - 8);
  uint64_t v135 = (uint64_t)&v118 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v132 = (uint64_t)&v118 - v25;
  __chkstk_darwin(v26);
  unint64_t v130 = (char *)&v118 - v27;
  __chkstk_darwin(v28);
  uint64_t v141 = (uint64_t)&v118 - v29;
  uint64_t v30 = type metadata accessor for SportingEventMetadataType();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v157 = (char *)&v118 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v152 = (char *)&v118 - v34;
  uint64_t v35 = *a1;
  uint64_t v36 = (void *)SportingEventCompetitorContainer.competitor.getter();
  uint64_t v136 = dispatch thunk of SportingEventCompetitor.abbreviation.getter();
  unint64_t v38 = v37;

  if (!v38) {
    goto LABEL_24;
  }
  unint64_t v151 = v38;
  uint64_t v149 = v35;
  uint64_t v39 = (void *)SportingEventCompetitorContainer.competitor.getter();
  unint64_t v40 = dispatch thunk of SportingEventCompetitor.localizedDisplayName.getter();

  if (!v40)
  {
    swift_bridgeObjectRelease();
LABEL_24:
    uint64_t v52 = 1;
    goto LABEL_66;
  }
  uint64_t v41 = v3;
  if (v40 >> 62)
  {
LABEL_60:
    swift_bridgeObjectRetain();
    uint64_t v115 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v115) {
      goto LABEL_61;
    }
  }
  else if (!*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_61;
  }
  sub_100097604(0, (v40 & 0xC000000000000001) == 0, v40);
  if ((v40 & 0xC000000000000001) != 0) {
    id v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v42 = *(id *)(v40 + 32);
  }
  uint64_t v43 = v42;
  swift_bridgeObjectRelease();
  uint64_t v121 = SportingEventLocalizedDisplayName.text.getter();
  uint64_t v45 = v44;

  char v46 = (void *)SportingEventCompetitorContainer.competitor.getter();
  unint64_t v47 = dispatch thunk of SportingEventCompetitor.metadata.getter();

  if (!v47)
  {
LABEL_61:
    swift_bridgeObjectRelease();
LABEL_62:
    swift_bridgeObjectRelease();
    uint64_t v52 = 1;
    goto LABEL_66;
  }
  uint64_t v122 = v45;
  uint64_t v123 = v41;
  uint64_t v124 = a3;
  unint64_t v40 = v151;
  if (!(v47 >> 62))
  {
    uint64_t v41 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v41) {
      goto LABEL_10;
    }
LABEL_65:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v52 = 1;
    a3 = v124;
    goto LABEL_66;
  }
  swift_bridgeObjectRetain();
  uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
  if (!v41) {
    goto LABEL_65;
  }
LABEL_10:
  uint64_t v120 = v9;
  uint64_t v119 = v6;
  unint64_t v148 = v47 & 0xC000000000000001;
  LODWORD(v145) = enum case for SportingEventMetadataType.backgroundColor(_:);
  unint64_t v144 = (void (**)(char *, void, uint64_t))(v31 + 104);
  uint64_t v146 = (void (**)(char *, uint64_t))(v31 + 8);
  unint64_t v147 = v47;
  a3 = 4;
  uint64_t v6 = v157;
  while (1)
  {
    if (v148) {
      uint64_t v48 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v48 = (char *)*(id *)(v47 + 8 * a3);
    }
    uint64_t v9 = v152;
    uint64_t v49 = a3 - 3;
    if (__OFADD__(a3 - 4, 1))
    {
      __break(1u);
      goto LABEL_60;
    }
    uint64_t v31 = v41;
    uint64_t v157 = v48;
    SportingEventMetadata.metadataType.getter();
    (*v144)(v6, v145, v30);
    sub_1000431F4(&qword_1000FD6C8, (void (*)(uint64_t))&type metadata accessor for SportingEventMetadataType);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    BOOL v50 = v155 == v153 && v156 == v154;
    if (v50) {
      break;
    }
    unint64_t v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = *v146;
    (*v146)(v6, v30);
    v51(v9, v30);
    if (v40) {
      goto LABEL_27;
    }

    ++a3;
    BOOL v50 = v49 == v41;
    unint64_t v47 = v147;
    if (v50) {
      goto LABEL_65;
    }
  }
  swift_bridgeObjectRelease_n();
  id v53 = *v146;
  (*v146)(v6, v30);
  v53(v9, v30);
LABEL_27:
  swift_bridgeObjectRelease_n();
  id v54 = v157;
  uint64_t v55 = SportingEventMetadata.value.getter();
  uint64_t v57 = v56;

  uint64_t v58 = (char *)dispatch thunk of SportingEventCompetitorContainer.ordinal.getter();
  a3 = v124;
  if (v59)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_62;
  }
  uint64_t v157 = v58;
  unint64_t v147 = v55;
  uint64_t v60 = *(void *)(v140 + 16);
  uint64_t v152 = v57;
  if (v60)
  {
    uint64_t v61 = v140 + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80));
    uint64_t v62 = *(void *)(v129 + 72);
    swift_bridgeObjectRetain();
    uint64_t v63 = v139;
    id v64 = v150;
    while (1)
    {
      sub_100042F8C(v61, (uint64_t)v64, (void (*)(void))type metadata accessor for LogoDownloadResult);
      uint64_t v66 = *v64;
      uint64_t v65 = v64[1];
      char v67 = (void *)SportingEventCompetitorContainer.competitor.getter();
      uint64_t v68 = SportingEventCompetitor.canonicalId.getter();
      uint64_t v70 = v69;

      if (v66 == v68 && v65 == v70) {
        break;
      }
      char v72 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v72) {
        goto LABEL_40;
      }
      id v64 = v150;
      sub_100042F34((uint64_t)v150, (void (*)(void))type metadata accessor for LogoDownloadResult);
      v61 += v62;
      if (!--v60)
      {
        swift_bridgeObjectRelease();
        uint64_t v73 = 1;
        uint64_t v74 = (uint64_t)v120;
        uint64_t v75 = v141;
        uint64_t v76 = (uint64_t)v130;
        goto LABEL_41;
      }
    }
    swift_bridgeObjectRelease();
LABEL_40:
    uint64_t v74 = (uint64_t)v120;
    uint64_t v76 = (uint64_t)v130;
    uint64_t v78 = (uint64_t)v150;
    swift_bridgeObjectRelease();
    uint64_t v75 = v141;
    sub_10004323C(v78, v141, (void (*)(void))type metadata accessor for LogoDownloadResult);
    uint64_t v73 = 0;
LABEL_41:
    uint64_t v77 = v131;
  }
  else
  {
    uint64_t v73 = 1;
    uint64_t v74 = (uint64_t)v120;
    uint64_t v77 = v131;
    uint64_t v75 = v141;
    uint64_t v63 = v139;
    uint64_t v76 = (uint64_t)v130;
  }
  sub_1000082C0(v75, v73, 1, v63);
  uint64_t v79 = (void *)SportingEventCompetitorContainer.competitor.getter();
  unint64_t v148 = SportingEventCompetitor.canonicalId.getter();
  uint64_t v150 = (uint64_t *)v80;

  sub_100043750(v75, v76, &qword_1000FD6C0);
  if (sub_1000082E8(v76, 1, v63) == 1)
  {
    sub_1000437A4(v76, &qword_1000FD6C0);
    uint64_t v145 = 0;
    uint64_t v146 = (void (**)(char *, uint64_t))0xE000000000000000;
  }
  else
  {
    uint64_t v81 = *(void (***)(char *, uint64_t))(v76 + 24);
    uint64_t v145 = *(void *)(v76 + 16);
    uint64_t v146 = v81;
    swift_bridgeObjectRetain();
    sub_100042F34(v76, (void (*)(void))type metadata accessor for LogoDownloadResult);
  }
  uint64_t v82 = v132;
  sub_100043750(v75, v132, &qword_1000FD6C0);
  if (sub_1000082E8(v82, 1, v63) == 1)
  {
    sub_1000437A4(v82, &qword_1000FD6C0);
    unint64_t v144 = 0;
    unint64_t v140 = 0xE000000000000000;
  }
  else
  {
    uint64_t v83 = v82 + *(int *)(v63 + 24);
    uint64_t v84 = v133;
    uint64_t v85 = v74;
    uint64_t v86 = v77;
    uint64_t v87 = v82;
    uint64_t v88 = v126;
    (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v126, v83, v142);
    uint64_t v89 = v87;
    uint64_t v77 = v86;
    uint64_t v74 = v85;
    sub_100042F34(v89, (void (*)(void))type metadata accessor for LogoDownloadResult);
    unint64_t v144 = (void (**)(char *, void, uint64_t))SportingEventSubscription.Competitor.LogoFilePaths.defaultSize.getter();
    unint64_t v140 = v90;
    uint64_t v91 = v84;
    uint64_t v63 = v139;
    (*(void (**)(char *, uint64_t))(v91 + 8))(v88, v142);
  }
  uint64_t v92 = v138;
  uint64_t v93 = v75;
  uint64_t v94 = v135;
  sub_100043750(v93, v135, &qword_1000FD6C0);
  int v95 = sub_1000082E8(v94, 1, v63);
  uint64_t v96 = (uint64_t)v143;
  if (v95 == 1)
  {
    sub_1000437A4(v94, &qword_1000FD6C0);
    SportingEventSubscription.Competitor.LogoFilePaths.init(smallSize:defaultSize:)();
    uint64_t v97 = v134;
    uint64_t v98 = v142;
  }
  else
  {
    uint64_t v99 = v94 + *(int *)(v63 + 24);
    uint64_t v100 = v94;
    uint64_t v101 = v133;
    uint64_t v102 = v127;
    uint64_t v98 = v142;
    (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v127, v99, v142);
    sub_100042F34(v100, (void (*)(void))type metadata accessor for LogoDownloadResult);
    (*(void (**)(uint64_t, char *, uint64_t))(v101 + 32))(v96, v102, v98);
    uint64_t v97 = v134;
  }
  sub_1000082C0(v96, 0, 1, v98);
  uint64_t v103 = (void *)SportingEventCompetitorContainer.competitor.getter();
  uint64_t v104 = (uint64_t)v137;
  dispatch thunk of SportingEventCompetitor.qualifier.getter();

  uint64_t v105 = (uint64_t)v119;
  (*(void (**)(uint64_t, void, char *))(v77 + 104))(v92, enum case for SportingEventCompetitorQualifier.home(_:), v119);
  sub_1000082C0(v92, 0, 1, v105);
  uint64_t v106 = v74 + *(int *)(v97 + 48);
  uint64_t v107 = &qword_1000FD6B0;
  sub_100043750(v104, v74, &qword_1000FD6B0);
  sub_100043750(v92, v106, &qword_1000FD6B0);
  if (sub_1000082E8(v74, 1, v105) == 1)
  {
    sub_1000437A4(v92, &qword_1000FD6B0);
    sub_1000437A4(v104, &qword_1000FD6B0);
    if (sub_1000082E8(v106, 1, v105) != 1) {
      uint64_t v107 = &qword_1000FD6A8;
    }
  }
  else
  {
    uint64_t v108 = v128;
    sub_100043750(v74, v128, &qword_1000FD6B0);
    if (sub_1000082E8(v106, 1, v105) == 1)
    {
      sub_1000437A4(v138, &qword_1000FD6B0);
      sub_1000437A4(v104, &qword_1000FD6B0);
      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v108, v105);
      uint64_t v107 = &qword_1000FD6A8;
    }
    else
    {
      uint64_t v109 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 32);
      uint64_t v110 = v77;
      uint64_t v111 = v125;
      v109(v125, v106, v105);
      sub_1000431F4(&qword_1000FD6D0, (void (*)(uint64_t))&type metadata accessor for SportingEventCompetitorQualifier);
      uint64_t v112 = v108;
      dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v113 = *(void (**)(char *, uint64_t))(v110 + 8);
      v113(v111, v105);
      uint64_t v107 = &qword_1000FD6B0;
      sub_1000437A4(v138, &qword_1000FD6B0);
      sub_1000437A4(v104, &qword_1000FD6B0);
      uint64_t v114 = v112;
      uint64_t v74 = (uint64_t)v120;
      v113((char *)v114, v105);
    }
  }
  sub_1000437A4(v74, v107);
  a3 = v124;
  SportingEventSubscription.Competitor.init(canonicalId:abbreviation:name:teamLogoUrl:localLogoUrl:logoFilePaths:teamColorHex:isHome:ordinal:)();
  sub_1000437A4(v141, &qword_1000FD6C0);
  uint64_t v52 = 0;
LABEL_66:
  uint64_t v116 = type metadata accessor for SportingEventSubscription.Competitor();
  return sub_1000082C0(a3, v52, 1, v116);
}

uint64_t sub_100042BFC()
{
  uint64_t v0 = type metadata accessor for SubscriptionRegisterOperation(0);
  sub_10002EE14(v0);
  uint64_t v1 = (uint64_t *)sub_1000438D4();

  return sub_10003DF70(v1, v2, v3);
}

uint64_t sub_100042C50()
{
  type metadata accessor for SubscriptionRegisterOperation(0);
  sub_100043850();
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v7 = *(void *)(v6 + 64);
  sub_100006178(v0 + v5);
  swift_release();
  swift_release();
  sub_100006178(v0 + v5 + 56);
  sub_100006178(v0 + v5 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!sub_1000438EC())
  {
    uint64_t v8 = type metadata accessor for SportingEventSubscription.Metadata();
    if (!sub_100043950(v8))
    {
      sub_100043890();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v2);
    }
  }
  sub_1000438BC();
  sub_1000438BC();

  return _swift_deallocObject(v0, v5 + v7, v4 | 7);
}

uint64_t sub_100042D8C()
{
  uint64_t v0 = type metadata accessor for SubscriptionRegisterOperation(0);
  sub_10002EE14(v0);
  uint64_t v1 = sub_1000438D4();

  return sub_10003E6B8(v1, v2, v3);
}

uint64_t sub_100042DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for SubscriptionRegisterOperation(0);
  sub_10002EE14(v9);
  return sub_10003F558(a1, a2, a3, a4, v4 + ((*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & 1;
}

uint64_t sub_100042E58()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100042E90(uint64_t a1)
{
  return sub_100041754(a1, *(uint64_t (**)(uint64_t, void, void, void))(v1 + 16)) & 1;
}

uint64_t sub_100042EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for SubscriptionRegisterOperation(0);
  sub_10002EE14(v9);
  uint64_t v11 = v4 + ((*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));

  return sub_1000417BC(a1, a2, a3, a4, v11);
}

uint64_t sub_100042F2C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100041A80(a1, *(uint64_t (**)(uint64_t, void, void, void))(v2 + 16), a2);
}

uint64_t sub_100042F34(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1000438A0();
  sub_100009894();
  v3();
  return a1;
}

uint64_t sub_100042F8C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1000438A0();
  uint64_t v4 = sub_100043928();
  v5(v4);
  return a2;
}

uint64_t sub_100042FE4()
{
  type metadata accessor for SubscriptionRegisterOperation(0);
  sub_100043850();
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v7 = *(void *)(v6 + 64);
  swift_unknownObjectRelease();
  sub_100006178(v0 + v5);
  swift_release();
  swift_release();
  sub_100006178(v0 + v5 + 56);
  sub_100006178(v0 + v5 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!sub_1000438EC())
  {
    uint64_t v8 = type metadata accessor for SportingEventSubscription.Metadata();
    if (!sub_100043950(v8))
    {
      sub_100043890();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v2);
    }
  }
  sub_1000438BC();
  sub_1000438BC();

  return _swift_deallocObject(v0, v5 + v7, v4 | 7);
}

uint64_t sub_100043128(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for SubscriptionRegisterOperation(0);
  sub_10002EE14(v4);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100031A20;
  return sub_1000414B0(a1, v6, v7, v8);
}

uint64_t sub_1000431F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004323C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1000438A0();
  uint64_t v4 = sub_10004393C();
  v5(v4);
  return a2;
}

void sub_100043294(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10003EF50(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1000432B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000A2D0C(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_1000432BC()
{
  sub_100005E5C(&qword_1000FC1D0);
  sub_100043850();
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = (int *)type metadata accessor for ApiRequestMetrics();
  if (!sub_1000082E8(v1 + v4, 1, (uint64_t)v8))
  {
    uint64_t v9 = type metadata accessor for Date();
    if (!sub_1000082E8(v1 + v4, 1, v9))
    {
      sub_100043890();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1 + v4, v9);
    }
    if (!sub_100043870(v8[5]))
    {
      sub_100043890();
      uint64_t v11 = sub_1000438AC();
      v12(v11);
    }
    if (!sub_100043870(v8[8]))
    {
      sub_100043890();
      uint64_t v13 = sub_1000438AC();
      v14(v13);
    }
    if (!sub_100043870(v8[9]))
    {
      sub_100043890();
      uint64_t v15 = sub_1000438AC();
      v16(v15);
    }
    if (!sub_100043870(v8[10]))
    {
      sub_100043890();
      uint64_t v17 = sub_1000438AC();
      v18(v17);
    }
    sub_1000438BC();
    if (!sub_100043870(v8[13]))
    {
      sub_100043890();
      uint64_t v19 = sub_1000438AC();
      v20(v19);
    }
    uint64_t v21 = v7 + v8[14];
    uint64_t v22 = type metadata accessor for URL();
    if (!sub_1000082E8(v21, 1, v22))
    {
      sub_1000438A0();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    }
    if (!sub_100043870(v8[15]))
    {
      sub_100043890();
      uint64_t v24 = sub_1000438AC();
      v25(v24);
    }
    if (!sub_100043870(v8[16]))
    {
      sub_100043890();
      uint64_t v26 = sub_1000438AC();
      v27(v26);
    }
    if (!sub_100043870(v8[17]))
    {
      sub_100043890();
      uint64_t v28 = sub_1000438AC();
      v29(v28);
    }
    sub_1000438BC();
    sub_1000438BC();
    sub_1000438BC();
    sub_1000438BC();
    sub_1000438BC();
  }
  type metadata accessor for URLRequest();
  sub_1000438A0();
  sub_100009894();
  v30();

  uint64_t v31 = (uint64_t *)(v7 + v0[9]);
  unint64_t v32 = v31[1];
  if (v32 >> 60 != 15) {
    sub_10000835C(*v31, v32);
  }
  uint64_t v33 = v7 + v0[10];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = v33 + *(int *)(_s20RegistrationResponseVMa() + 44);
  uint64_t v35 = type metadata accessor for SportingEventViewContext();
  if (!sub_1000082E8(v34, 1, v35))
  {
    sub_1000438A0();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v1, ((v6 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v3 | 7);
}

uint64_t sub_1000436C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100005E5C(&qword_1000FC1D0);
  sub_10000984C(v5);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(v2 + v11);
  uint64_t v13 = *(void *)(v2 + v11 + 8);

  return sub_10003F4C0(a1, v2 + v10, v12, v13, a2);
}

uint64_t sub_100043750(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100005E5C(a3);
  sub_1000438A0();
  uint64_t v4 = sub_100043928();
  v5(v4);
  return a2;
}

uint64_t sub_1000437A4(uint64_t a1, uint64_t *a2)
{
  sub_100005E5C(a2);
  sub_1000438A0();
  sub_100009894();
  v3();
  return a1;
}

uint64_t sub_1000437F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100005E5C(a3);
  sub_1000438A0();
  uint64_t v4 = sub_10004393C();
  v5(v4);
  return a2;
}

uint64_t sub_100043870@<X0>(uint64_t a1@<X8>)
{
  return sub_1000082E8(v1 + a1, 1, v2);
}

uint64_t sub_1000438AC()
{
  return v0;
}

uint64_t sub_1000438BC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000438D4()
{
  return v0;
}

uint64_t sub_1000438EC()
{
  uint64_t v2 = v1 + *(int *)(v0 + 72);
  uint64_t v3 = type metadata accessor for SubscriptionRegisterOperation.PreferredData(0);
  return sub_1000082E8(v2, 1, v3);
}

uint64_t sub_100043928()
{
  return v0;
}

uint64_t sub_10004393C()
{
  return v0;
}

uint64_t sub_100043950(uint64_t a1)
{
  return sub_1000082E8(v1, 1, a1);
}

uint64_t sub_100043970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100005E5C(&qword_1000FD870);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v19 - v13;
  *(void *)(v4 + 24) = &_swiftEmptySetSingleton;
  if (qword_1000FBD78 != -1) {
    swift_once();
  }
  v19[1] = qword_10010A4B0;
  *(void *)(swift_allocObject() + 16) = a1;
  swift_retain();
  sub_100005E5C(&qword_1000FD848);
  sub_10000953C(&qword_1000FD850, &qword_1000FD848);
  Publisher.filter(_:)();
  swift_release();
  swift_release();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  Publishers.Filter.filter(_:)();
  swift_release();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  sub_10000953C(&qword_1000FD878, &qword_1000FD870);
  uint64_t v17 = Publisher.eraseToAnyPublisher()();
  v16(v14, v8);
  *(void *)(v4 + 16) = v17;
  return v4;
}

uint64_t sub_100043BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100005E5C(&qword_1000FC940);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  sub_1000082C0((uint64_t)v7, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = 0;
  void v9[3] = 0;
  v9[4] = v2;
  v9[5] = a1;
  void v9[6] = a2;
  swift_retain();
  swift_retain();
  sub_1000452CC((uint64_t)v7, (uint64_t)&unk_1000FD828, (uint64_t)v9);
  swift_release();
  return sub_100037ED0((uint64_t)v7, &qword_1000FC940);
}

uint64_t sub_100043D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[24] = a5;
  v6[25] = a6;
  v6[23] = a4;
  uint64_t v7 = type metadata accessor for Logger();
  v6[26] = v7;
  v6[27] = *(void *)(v7 - 8);
  v6[28] = swift_task_alloc();
  v6[29] = sub_100005E5C(&qword_1000FD7F0);
  v6[30] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for JSONDecoder.DateDecodingStrategy();
  v6[31] = v8;
  v6[32] = *(void *)(v8 - 8);
  v6[33] = swift_task_alloc();
  sub_100005E5C(&qword_1000FC158);
  v6[34] = swift_task_alloc();
  uint64_t v9 = sub_100005E5C(&qword_1000FD838);
  v6[35] = v9;
  v6[36] = *(void *)(v9 - 8);
  v6[37] = swift_task_alloc();
  uint64_t v10 = sub_100005E5C(&qword_1000FD840);
  v6[38] = v10;
  v6[39] = *(void *)(v10 - 8);
  unsigned char v6[40] = swift_task_alloc();
  return _swift_task_switch(sub_100043F70, 0, 0);
}

uint64_t sub_100043F70()
{
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 280);
  *(void *)(v0 + 128) = *(void *)(*(void *)(v0 + 184) + 16);
  sub_100005E5C(&qword_1000FD848);
  sub_10000953C(&qword_1000FD850, &qword_1000FD848);
  Publisher<>.values.getter();
  AsyncPublisher.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_DWORD *)(v0 + 392) = enum case for JSONDecoder.DateDecodingStrategy.millisecondsSince1970(_:);
  sub_10000953C(&qword_1000FD858, &qword_1000FD840);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100044114;
  uint64_t v5 = sub_100046EE4();
  return dispatch thunk of AsyncIteratorProtocol.next()(v5, v6, v7);
}

uint64_t sub_100044114()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v2 = *v1;
  sub_100046EF8();
  *uint64_t v3 = v2;
  *(void *)(v4 + 336) = v0;
  swift_task_dealloc();
  sub_10001CAE8();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_100044220()
{
  sub_10001C234();
  *(void *)(v0 + 344) = *(void *)(v0 + 168);
  sub_10001CAE8();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_1000442AC()
{
  uint64_t v89 = v0;
  uint64_t v1 = *(void **)(v0 + 344);
  if (!v1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 312) + 8))(*(void *)(v0 + 320), *(void *)(v0 + 304));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001C2E0();
    sub_100046F08();
    __asm { BRAA            X1, X16 }
  }
  *(void *)(v0 + 352) = os_transaction_create();
  id v2 = [v1 channelID];
  uint64_t v3 = (void *)&loc_1000CA000;
  if (v2)
  {
    uint64_t v4 = v2;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    id v8 = [v1 userInfo];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v76 = v5;
      uint64_t v87 = v7;
      static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v10 = self;
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 112) = 0;
      id v12 = [v10 dataWithJSONObject:isa options:0 error:v0 + 112];

      id v13 = *(id *)(v0 + 112);
      if (v12)
      {
        uint64_t v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v16 = v15;

        *(void *)(v0 + 360) = v14;
        *(void *)(v0 + 368) = v16;
        if (qword_1000FBDE8 != -1) {
          swift_once();
        }
        uint64_t v17 = (uint64_t *)(v0 + 152);
        sub_10000929C(*(void *)(v0 + 208), (uint64_t)qword_10010A580);
        uint64_t v18 = v16 >> 62;
        sub_100046F80();
        sub_100046F80();
        uint64_t v19 = Logger.logObject.getter();
        os_log_type_t v20 = static os_log_type_t.debug.getter();
        uint64_t v74 = BYTE6(v16);
        unint64_t v75 = v16 >> 62;
        unint64_t v84 = v16;
        if (!os_log_type_enabled(v19, v20))
        {
          sub_100046F24();
          sub_100046F24();
LABEL_39:

          uint64_t v83 = *(void *)(v0 + 336);
          unsigned int v79 = *(_DWORD *)(v0 + 392);
          uint64_t v52 = *(void *)(v0 + 264);
          uint64_t v53 = *(void *)(v0 + 256);
          uint64_t v78 = *(void *)(v0 + 248);
          type metadata accessor for JSONDecoder();
          swift_allocObject();
          *(void *)(v0 + 376) = JSONDecoder.init()();
          static SportsJSONContext.Property<A>.initFailureObserver.getter();
          uint64_t v54 = type metadata accessor for DefaultSportsJSONInitFailureObserver();
          swift_allocObject();
          uint64_t v55 = DefaultSportsJSONInitFailureObserver.init()();
          *(void *)(v0 + 40) = v54;
          *(void *)(v0 + 48) = &protocol witness table for DefaultSportsJSONInitFailureObserver;
          *(void *)(v0 + 16) = v55;
          Swift::Int v56 = (void (*)(uint64_t, void))dispatch thunk of JSONDecoder.userInfo.modify();
          sub_100005E5C(&qword_1000FC168);
          Dictionary<>.subscript.setter();
          v56(v0 + 56, 0);
          (*(void (**)(uint64_t, void, uint64_t))(v53 + 104))(v52, v79, v78);
          dispatch thunk of JSONDecoder.dateDecodingStrategy.setter();
          sub_10000953C(&qword_1000FD860, &qword_1000FD7F0);
          dispatch thunk of JSONDecoder.decode<A>(_:from:)();
          if (!v83)
          {
            uint64_t v62 = 0;
            switch((int)v75)
            {
              case 1:
                LODWORD(v62) = HIDWORD(v14) - v14;
                if (__OFSUB__(HIDWORD(v14), v14)) {
                  goto LABEL_53;
                }
                uint64_t v62 = (int)v62;
LABEL_48:
                uint64_t v67 = *(void *)(v0 + 232);
                uint64_t v66 = *(void *)(v0 + 240);
                uint64_t v68 = v66 + *(int *)(v67 + 52);
                *(void *)uint64_t v68 = v62;
                *(unsigned char *)(v68 + 8) = 0;
                uint64_t v69 = (uint64_t *)(v66 + *(int *)(v67 + 56));
                swift_bridgeObjectRelease();
                *uint64_t v69 = v76;
                v69[1] = v87;
                uint64_t v70 = (void *)swift_task_alloc();
                *(void *)(v0 + 384) = v70;
                *uint64_t v70 = v0;
                v70[1] = sub_100045098;
                sub_100046F08();
                __asm { BRAA            X1, X16 }
                return result;
              case 2:
                uint64_t v64 = *(void *)(v14 + 16);
                uint64_t v63 = *(void *)(v14 + 24);
                BOOL v65 = __OFSUB__(v63, v64);
                uint64_t v62 = v63 - v64;
                if (!v65) {
                  goto LABEL_48;
                }
                goto LABEL_54;
              case 3:
                goto LABEL_48;
              default:
                uint64_t v62 = v74;
                goto LABEL_48;
            }
          }
          swift_release();
          swift_bridgeObjectRelease();
          swift_errorRetain();
          swift_errorRetain();
          uint64_t v57 = Logger.logObject.getter();
          os_log_type_t v58 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v57, v58))
          {
            char v59 = (uint8_t *)sub_10001C638();
            v88[0] = sub_100046F5C();
            *(_DWORD *)char v59 = 136315138;
            swift_getErrorValue();
            uint64_t v60 = Error.localizedDescription.getter();
            *(void *)(v0 + 144) = sub_100017098(v60, v61, v88);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v57, v58, "CloudChannelMessageProcessor - Encountered error while decoding expected type, error=%s", v59, 0xCu);
            swift_arrayDestroy();
            sub_10001C2C8();
            sub_10001C2C8();

            swift_errorRelease();
            sub_10000835C(v14, v84);
          }
          else
          {

            sub_10000835C(v14, v84);
            swift_errorRelease();
            swift_errorRelease();
            swift_errorRelease();
          }
          goto LABEL_21;
        }
        os_log_type_t v80 = v20;
        uint64_t v81 = v19;
        uint64_t v21 = (void *)(v0 + 396);
        uint64_t v22 = (uint8_t *)sub_10001C638();
        uint64_t *v17 = sub_100046F5C();
        *(_DWORD *)uint64_t v22 = 136315138;
        uint64_t v77 = v22;
        switch((int)v18)
        {
          case 1:
            if (v14 >> 32 < (int)v14)
            {
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
            }
            else
            {
              uint64_t v18 = (int)v14;
              sub_100046F80();
              uint64_t v21 = (void *)__DataStorage._bytes.getter();
              if (!v21) {
                goto LABEL_29;
              }
              uint64_t v47 = __DataStorage._offset.getter();
              if (!__OFSUB__((int)v14, v47))
              {
                uint64_t v21 = (void *)((char *)v21 + (int)v14 - v47);
LABEL_29:
                __DataStorage._length.getter();
                static String._fromUTF8Repairing(_:)();
                sub_100046F74();
LABEL_37:
                sub_100046F24();
LABEL_38:
                *(void *)(v0 + 160) = sub_100017098(v18, (unint64_t)v21, v17);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                sub_100046F24();
                sub_100046F24();
                uint64_t v19 = v81;
                _os_log_impl((void *)&_mh_execute_header, v81, v80, "CloudChannelMessageProcessor - bodyData: %s", v77, 0xCu);
                swift_arrayDestroy();
                sub_10001C2C8();
                sub_10001C2C8();
                goto LABEL_39;
              }
            }
            __break(1u);
LABEL_56:
            __break(1u);
            return result;
          case 2:
            uint64_t v48 = *(void *)(v14 + 16);
            uint64_t v18 = *(void *)(v14 + 24);
            sub_100046F80();
            swift_retain();
            swift_retain();
            uint64_t v21 = (void *)__DataStorage._bytes.getter();
            if (!v21) {
              goto LABEL_33;
            }
            uint64_t v49 = __DataStorage._offset.getter();
            if (__OFSUB__(v48, v49)) {
              goto LABEL_56;
            }
            uint64_t v21 = (void *)((char *)v21 + v48 - v49);
LABEL_33:
            if (__OFSUB__(v18, v48)) {
              goto LABEL_52;
            }
            __DataStorage._length.getter();
            static String._fromUTF8Repairing(_:)();
            sub_100046F74();
            swift_release();
            swift_release();
            goto LABEL_37;
          case 3:
            uint64_t v50 = swift_task_alloc();
            *(void *)(v50 + 16) = sub_1000509B8;
            *(void *)(v50 + 24) = 0;
            uint64_t v51 = swift_task_alloc();
            *(void *)(v51 + 16) = sub_1000509B8;
            *(void *)(v51 + 24) = 0;
            *uint64_t v21 = 0;
            *(void *)(v0 + 402) = 0;
            static String._fromUTF8Repairing(_:)();
            sub_100046F74();
            sub_10000835C(v14, v16);
            uint64_t v17 = (uint64_t *)(v0 + 152);
            swift_task_dealloc();
            goto LABEL_36;
          default:
            uint64_t v18 = v16 >> 40;
            uint64_t v23 = swift_task_alloc();
            uint64_t v21 = sub_1000509B8;
            *(void *)(v23 + 16) = sub_1000509B8;
            *(void *)(v23 + 24) = 0;
            uint64_t v24 = swift_task_alloc();
            *(void *)(v24 + 16) = sub_1000509B8;
            *(void *)(v24 + 24) = 0;
            *(void *)(v0 + 410) = v14;
            uint64_t v17 = (uint64_t *)(v0 + 152);
            *(_WORD *)(v0 + 418) = v16;
            *(unsigned char *)(v0 + 420) = BYTE2(v16);
            *(unsigned char *)(v0 + 421) = BYTE3(v16);
            *(unsigned char *)(v0 + 422) = BYTE4(v16);
            *(unsigned char *)(v0 + 423) = BYTE5(v16);
            static String._fromUTF8Repairing(_:)();
            sub_100046F74();
            sub_10000835C(v14, v16);
            swift_task_dealloc();
LABEL_36:
            swift_task_dealloc();
            goto LABEL_38;
        }
      }
      uint64_t v27 = v13;
      swift_bridgeObjectRelease();
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
      uint64_t v3 = &loc_1000CA000;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  if (qword_1000FBDE8 != -1) {
    swift_once();
  }
  uint64_t v29 = *(void *)(v0 + 216);
  uint64_t v28 = *(void *)(v0 + 224);
  uint64_t v30 = *(void *)(v0 + 208);
  uint64_t v31 = sub_10000929C(v30, (uint64_t)qword_10010A580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v31, v30);
  id v32 = v1;
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = sub_10001C638();
    *(void *)(v0 + 120) = sub_100046F5C();
    *(_DWORD *)uint64_t v35 = v3[371];
    if (!sub_10001B7F4(v32))
    {

      __break(1u);
      JUMPOUT(0x100044FCCLL);
    }
    uint64_t v82 = *(void *)(v0 + 216);
    uint64_t v85 = *(void *)(v0 + 208);
    uint64_t v86 = *(void *)(v0 + 224);
    uint64_t v36 = Dictionary.description.getter();
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    *(void *)(v35 + 4) = sub_100017098(v36, v38, (uint64_t *)(v0 + 120));
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v33, v34, "CloudChannelMessageProcessor - Failed to decode payload body %s", (uint8_t *)v35, 0xCu);
    swift_arrayDestroy();
    sub_10001C2C8();
    sub_10001C2C8();

    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v86, v85);
  }
  else
  {
    uint64_t v40 = *(void *)(v0 + 216);
    uint64_t v39 = *(void *)(v0 + 224);
    uint64_t v41 = *(void *)(v0 + 208);

    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
  }
LABEL_21:
  swift_unknownObjectRelease();
  sub_10000953C(&qword_1000FD858, &qword_1000FD840);
  id v42 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v42;
  *id v42 = v0;
  v42[1] = sub_100044114;
  sub_100046EE4();
  sub_100046F08();
  return dispatch thunk of AsyncIteratorProtocol.next()(v43, v44, v45);
}

uint64_t sub_100044FEC()
{
  sub_10001C234();
  *(void *)(v0 + 136) = *(void *)(v0 + 336);
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_100045098()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v1 = *v0;
  sub_100046EF8();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_10001CAE8();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10004518C()
{
  unint64_t v1 = *(void *)(v0 + 368);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 240);

  sub_10000835C(v2, v1);
  swift_release();
  sub_100037ED0(v3, &qword_1000FD7F0);
  swift_unknownObjectRelease();
  sub_10000953C(&qword_1000FD858, &qword_1000FD840);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100044114;
  uint64_t v5 = sub_100046EE4();
  return dispatch thunk of AsyncIteratorProtocol.next()(v5, v6, v7);
}

uint64_t sub_1000452CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100046924(a1, 0, 0, 0, 1, 0, 0);
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1000453DC()
{
  sub_100046ED0();
  uint64_t v2 = v1;
  sub_100005E5C(&qword_1000FD808);
  swift_allocObject();
  sub_10001CAE8();
  *(void *)(v0 + 16) = sub_100043970(v3, v4, v5);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v2;
  swift_retain();
  sub_100043BFC((uint64_t)&unk_1000FD818, v6);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100045494(uint64_t a1, uint64_t a2)
{
  v2[8] = a1;
  v2[9] = a2;
  sub_100005E5C(&qword_1000FC808);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  sub_100005E5C(&qword_1000FD7E8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Date();
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_1000455D4, 0, 0);
}

uint64_t sub_1000455D4()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = (void *)v0[8];
  Date.init()();
  v0[17] = sub_1000A268C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[18] = *v4;
  type metadata accessor for ScoreboardSubscriptionManager();
  v0[19] = static ScoreboardSubscriptionManager.shared.getter();
  sub_100046DFC();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000456AC, v6, v5);
}

uint64_t sub_1000456AC()
{
  dispatch thunk of ScoreboardSubscriptionManager.insert(_:)();
  *(void *)(v0 + 160) = 0;
  swift_release();
  sub_10001CAE8();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10004573C()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[11];
  sub_10002A418(v0[8], v2, &qword_1000FD7F0);
  uint64_t v4 = sub_100005E5C(&qword_1000FD7F0);
  sub_1000082C0(v2, 0, 1, v4);
  uint64_t v5 = type metadata accessor for CloudChannelError();
  sub_100046F3C(v5);
  sub_100045B2C(v1, v2, v3);
  sub_100037ED0(v3, &qword_1000FC808);
  sub_100037ED0(v2, &qword_1000FD7E8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C2E0();
  return v6();
}

uint64_t sub_10004584C()
{
  uint64_t v17 = v0;
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[10];
  swift_release();
  uint64_t v5 = sub_100005E5C(&qword_1000FD7F0);
  sub_100046F3C(v5);
  v0[5] = v1;
  swift_errorRetain();
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  uint64_t v6 = type metadata accessor for CloudChannelError();
  int v7 = swift_dynamicCast();
  sub_1000082C0(v4, v7 ^ 1u, 1, v6);
  sub_100045B2C(v2, v3, v4);
  sub_100037ED0(v3, &qword_1000FD7E8);
  sub_100037ED0(v4, &qword_1000FC808);
  if (qword_1000FBDF0 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000929C(v8, (uint64_t)qword_10010A598);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)sub_10001C638();
    uint64_t v16 = sub_100046F5C();
    *(_DWORD *)uint64_t v11 = 136315138;
    swift_getErrorValue();
    uint64_t v12 = Error.localizedDescription.getter();
    v0[7] = sub_100017098(v12, v13, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "ScoreboardSubscriptionMessageProcessor - Failed to process scoreboard subscription - %s", v11, 0xCu);
    swift_arrayDestroy();
    sub_10001C2C8();
    sub_10001C2C8();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C2E0();
  return v14();
}

void sub_100045B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v127 = a3;
  uint64_t v133 = a1;
  uint64_t v4 = sub_100005E5C(&qword_1000FC808);
  __chkstk_darwin(v4 - 8);
  uint64_t v132 = (uint64_t)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v129 = *(void *)(v6 - 8);
  uint64_t v130 = v6;
  __chkstk_darwin(v6);
  uint64_t v118 = (uint64_t)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v128 = (uint64_t)&v117 - v9;
  uint64_t v10 = sub_100005E5C(&qword_1000FD7E8);
  __chkstk_darwin(v10 - 8);
  uint64_t v131 = (uint64_t)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v126 = (uint64_t)&v117 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v117 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v117 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v117 - v21;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v117 - v24;
  __chkstk_darwin(v26);
  uint64_t v28 = (unint64_t *)((char *)&v117 - v27);
  sub_10002A418(a2, (uint64_t)&v117 - v27, &qword_1000FD7E8);
  uint64_t v29 = (int *)sub_100005E5C(&qword_1000FD7F0);
  if (sub_1000082E8((uint64_t)v28, 1, (uint64_t)v29) == 1)
  {
    sub_100037ED0((uint64_t)v28, &qword_1000FD7E8);
LABEL_47:
    unint64_t v119 = 0;
    id v62 = 0;
    goto LABEL_52;
  }
  unint64_t v30 = *v28;
  swift_bridgeObjectRetain();
  sub_100037ED0((uint64_t)v28, &qword_1000FD7F0);
  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v63 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v63) {
      goto LABEL_5;
    }
LABEL_46:
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_46;
  }
LABEL_5:
  sub_100097604(0, 1, v30);
  id v31 = *(id *)(v30 + 32);
  swift_bridgeObjectRelease();
  id v134 = v31;
  id v32 = v31;
  uint64_t v33 = (void *)dispatch thunk of SportingEvent.coverage.getter();

  if (v33)
  {
    os_log_type_t v34 = (void *)dispatch thunk of SportingEventCoverage.ingestion.getter();

    if (v34)
    {
      uint64_t v35 = dispatch thunk of SportingEventCoverageIngestion.last.getter();
      char v37 = v36;

      if ((v37 & 1) == 0)
      {
        unint64_t v119 = sub_1000A26EC(*(double *)&v35);
LABEL_51:
        id v62 = v134;
        goto LABEL_52;
      }
    }
  }
  uint64_t v38 = dispatch thunk of SportingEvent.coverage.getter();
  if (!v38
    || (uint64_t v39 = (void *)v38,
        uint64_t v40 = (void *)dispatch thunk of SportingEventCoverage.ingestion.getter(),
        v39,
        !v40)
    || (unint64_t v41 = dispatch thunk of SportingEventCoverageIngestion.lastUpdates.getter(), v40, !v41))
  {
LABEL_50:
    unint64_t v119 = 0;
    goto LABEL_51;
  }
  if (v41 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
    if (v42) {
      goto LABEL_14;
    }
    goto LABEL_49;
  }
  uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v42)
  {
LABEL_49:
    swift_bridgeObjectRelease_n();
    goto LABEL_50;
  }
LABEL_14:
  sub_100097604(0, (v41 & 0xC000000000000001) == 0, v41);
  unint64_t v125 = v41 & 0xC000000000000001;
  if ((v41 & 0xC000000000000001) != 0) {
    id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v43 = *(id *)(v41 + 32);
  }
  uint64_t v44 = v43;
  uint64_t v123 = v19;
  uint64_t v124 = v42 - 1;
  if (v42 != 1)
  {
    if (v42 < 2)
    {
      __break(1u);
      return;
    }
    BOOL v45 = v125 == 0;
    sub_100097604(1, v45, v41);
    sub_100097604(v124, v45, v41);
    uint64_t v46 = 0;
    unint64_t v47 = v41;
    do
    {
      if (v125) {
        id v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v48 = *(id *)(v41 + 8 * v46 + 40);
      }
      id v49 = v48;
      double v50 = COERCE_DOUBLE(dispatch thunk of SportingEventCoverageLastUpdate.timestamp.getter());
      if (v51) {
        double v52 = 0.0;
      }
      else {
        double v52 = v50;
      }
      double v53 = COERCE_DOUBLE(dispatch thunk of SportingEventCoverageLastUpdate.timestamp.getter());
      if (v52 < 0.0) {
        uint64_t v55 = v44;
      }
      else {
        uint64_t v55 = v49;
      }
      if (v52 < 0.0) {
        Swift::Int v56 = v49;
      }
      else {
        Swift::Int v56 = v44;
      }
      if (v52 >= v53) {
        uint64_t v57 = v49;
      }
      else {
        uint64_t v57 = v44;
      }
      if (v52 >= v53) {
        os_log_type_t v58 = v44;
      }
      else {
        os_log_type_t v58 = v49;
      }
      if (v54)
      {
        uint64_t v44 = v56;
      }
      else
      {
        uint64_t v55 = v57;
        uint64_t v44 = v58;
      }

      ++v46;
      unint64_t v41 = v47;
    }
    while (v124 != v46);
  }
  swift_bridgeObjectRelease_n();
  uint64_t v59 = dispatch thunk of SportingEventCoverageLastUpdate.timestamp.getter();
  char v61 = v60;

  if (v61) {
    unint64_t v119 = 0;
  }
  else {
    unint64_t v119 = sub_1000A26EC(*(double *)&v59);
  }
  id v62 = v134;
  uint64_t v19 = v123;
LABEL_52:
  if (qword_1000FBE38 != -1) {
    swift_once();
  }
  unint64_t v125 = qword_10010A5E8;
  id v134 = v62;
  if (v62)
  {
    id v64 = v62;
    uint64_t v120 = SportingEvent.canonicalId.getter();
    uint64_t v121 = v65;
  }
  else
  {
    uint64_t v120 = 0;
    uint64_t v121 = 0;
  }
  sub_100005E5C(&qword_1000FD7F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CB470;
  sub_10002A418(a2, (uint64_t)v25, &qword_1000FD7E8);
  if (sub_1000082E8((uint64_t)v25, 1, (uint64_t)v29) == 1)
  {
    sub_100037ED0((uint64_t)v25, &qword_1000FD7E8);
    uint64_t v67 = 0;
    uint64_t v68 = 0;
  }
  else
  {
    uint64_t v67 = *((void *)v25 + 1);
    uint64_t v68 = *((void *)v25 + 2);
    swift_bridgeObjectRetain();
    sub_100037ED0((uint64_t)v25, &qword_1000FD7F0);
  }
  *(void *)(inited + 32) = v67;
  *(void *)(inited + 40) = v68;
  uint64_t v69 = &qword_1000FD7E8;
  sub_10002A418(a2, (uint64_t)v22, &qword_1000FD7E8);
  if (sub_1000082E8((uint64_t)v22, 1, (uint64_t)v29) == 1)
  {
    uint64_t v70 = 0;
    uint64_t v71 = 0;
  }
  else
  {
    uint64_t v72 = &v22[v29[14]];
    uint64_t v70 = *(void *)v72;
    uint64_t v71 = *((void *)v72 + 1);
    swift_bridgeObjectRetain();
    uint64_t v69 = &qword_1000FD7F0;
  }
  sub_100037ED0((uint64_t)v22, v69);
  *(void *)(inited + 48) = v70;
  *(void *)(inited + 56) = v71;
  uint64_t v73 = *(void *)(inited + 40);
  if (v73)
  {
    uint64_t v74 = *(void *)(inited + 32);
    swift_bridgeObjectRetain();
    sub_10001574C();
    uint64_t v76 = v75;
    unint64_t v77 = v75[2];
    if (v77 >= v75[3] >> 1)
    {
      sub_10001574C();
      uint64_t v76 = v109;
    }
    v76[2] = v77 + 1;
    uint64_t v78 = &v76[2 * v77];
    v78[4] = v74;
    v78[5] = v73;
    uint64_t v70 = *(void *)(inited + 48);
    uint64_t v71 = *(void *)(inited + 56);
    if (!v71) {
      goto LABEL_74;
    }
    goto LABEL_69;
  }
  uint64_t v76 = _swiftEmptyArrayStorage;
  if (v71)
  {
LABEL_69:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10001574C();
      uint64_t v76 = v110;
    }
    unint64_t v79 = v76[2];
    if (v79 >= v76[3] >> 1)
    {
      sub_10001574C();
      uint64_t v76 = v111;
    }
    v76[2] = v79 + 1;
    os_log_type_t v80 = &v76[2 * v79];
    v80[4] = v70;
    v80[5] = v71;
  }
LABEL_74:
  swift_bridgeObjectRelease();
  *(void *)&long long v135 = v76;
  sub_100005E5C(&qword_1000FC7D0);
  sub_10000953C((unint64_t *)&qword_1000FC7D8, &qword_1000FC7D0);
  uint64_t v123 = (char *)BidirectionalCollection<>.joined(separator:)();
  uint64_t v124 = v81;
  swift_bridgeObjectRelease();
  uint64_t v82 = v128;
  Date.init()();
  uint64_t v122 = sub_1000A268C();
  uint64_t v83 = v129;
  unint64_t v84 = *(void (**)(uint64_t, uint64_t))(v129 + 8);
  uint64_t v85 = v82;
  uint64_t v86 = v130;
  v84(v85, v130);
  sub_10002A418(a2, (uint64_t)v19, &qword_1000FD7E8);
  int v87 = sub_1000082E8((uint64_t)v19, 1, (uint64_t)v29);
  if (v87 == 1)
  {
    sub_100037ED0((uint64_t)v19, &qword_1000FD7E8);
    uint64_t v129 = 0;
  }
  else
  {
    uint64_t v88 = *(void (**)(uint64_t, char *, uint64_t))(v83 + 16);
    uint64_t v89 = v118;
    v88(v118, &v19[v29[12]], v86);
    sub_100037ED0((uint64_t)v19, &qword_1000FD7F0);
    uint64_t v129 = sub_1000A268C();
    v84(v89, v86);
  }
  uint64_t v90 = v126;
  sub_10002A418(a2, (uint64_t)v16, &qword_1000FD7E8);
  if (sub_1000082E8((uint64_t)v16, 1, (uint64_t)v29) == 1)
  {
    sub_100037ED0((uint64_t)v16, &qword_1000FD7E8);
    uint64_t v91 = 0;
    uint64_t v92 = 0;
  }
  else
  {
    uint64_t v91 = *((void *)v16 + 3);
    uint64_t v92 = *((void *)v16 + 4);
    swift_bridgeObjectRetain();
    sub_100037ED0((uint64_t)v16, &qword_1000FD7F0);
  }
  uint64_t v93 = &qword_1000FD7E8;
  sub_10002A418(a2, v90, &qword_1000FD7E8);
  int v94 = sub_1000082E8(v90, 1, (uint64_t)v29);
  if (v94 == 1)
  {
    uint64_t v95 = 0;
  }
  else
  {
    uint64_t v95 = *(void *)(v90 + 40);
    uint64_t v93 = &qword_1000FD7F0;
  }
  sub_100037ED0(v90, v93);
  uint64_t v96 = &qword_1000FD7E8;
  uint64_t v97 = v131;
  sub_10002A418(a2, v131, &qword_1000FD7E8);
  char v98 = 1;
  if (sub_1000082E8(v97, 1, (uint64_t)v29) == 1)
  {
    uint64_t v99 = 0;
  }
  else
  {
    uint64_t v100 = v97 + v29[13];
    uint64_t v99 = *(void *)v100;
    char v98 = *(unsigned char *)(v100 + 8);
    uint64_t v96 = &qword_1000FD7F0;
  }
  uint64_t v101 = v127;
  sub_100037ED0(v97, v96);
  uint64_t v102 = v132;
  sub_10002A418(v101, v132, &qword_1000FC808);
  uint64_t v103 = type metadata accessor for CloudChannelError();
  if (sub_1000082E8(v102, 1, v103) == 1)
  {
    sub_100037ED0(v102, &qword_1000FC808);
    long long v135 = 0u;
    long long v136 = 0u;
    unint64_t v137 = 0;
  }
  else
  {
    *((void *)&v136 + 1) = v103;
    unint64_t v137 = &off_1000F54B0;
    uint64_t v104 = sub_100029BE0((uint64_t *)&v135);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v103 - 8) + 32))(v104, v102, v103);
  }
  LOBYTE(v116) = 0;
  LOBYTE(v115) = v98;
  LOBYTE(v113) = 1;
  LOBYTE(v114) = v94 == 1;
  LOBYTE(v112) = v87 == 1;
  sub_1000BAAEC(v120, v121, (uint64_t)v123, v124, v133, 0, v122, 0, v129, v112, v91, v92, v113, v95, v114, v99, v115, v119, v116,
    0,
    0,
    0,
    0,
    (uint64_t)&v135,
    v117,
    v118,
    v119,
    v120,
    v121,
    v122,
    (char)v123,
    v124,
    v125,
    v126,
    v127,
    v128);
  uint64_t v106 = v105;
  __int16 v108 = v107;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100037ED0((uint64_t)&v135, &qword_1000FD800);
  sub_1000BB028(v106, v108 & 0x101);
  swift_bridgeObjectRelease();
}

uint64_t sub_100046758(uint64_t a1)
{
  sub_100046ED0();
  uint64_t v2 = sub_100005E5C(&qword_1000FD7E8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  uint64_t v9 = sub_1000A268C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = sub_100005E5C(&qword_1000FD7F0);
  sub_1000082C0((uint64_t)v4, 1, 1, v10);
  sub_100045B2C(v9, (uint64_t)v4, a1);
  return sub_100037ED0((uint64_t)v4, &qword_1000FD7E8);
}

uint64_t sub_1000468C8()
{
  swift_release();

  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for ScoreboardSubscriptionMessageProcessor()
{
  return self;
}

uint64_t sub_100046924(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7)
{
  uint64_t v14 = sub_100005E5C(&qword_1000FC940);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002A418(a1, (uint64_t)v16, &qword_1000FC940);
  uint64_t v17 = type metadata accessor for TaskPriority();
  if (sub_1000082E8((uint64_t)v16, 1, v17) == 1)
  {
    sub_100037ED0((uint64_t)v16, &qword_1000FC940);
    uint64_t result = 0;
    if ((a2 & 1) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    unsigned __int8 v19 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    uint64_t result = v19;
    if ((a2 & 1) == 0)
    {
LABEL_3:
      if (a3) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  result |= 0x100uLL;
  if (a3)
  {
LABEL_4:
    result |= 0x400uLL;
    if ((a4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  if ((a4 & 1) == 0)
  {
LABEL_5:
    if ((a5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_15:
  result |= 0x800uLL;
  if (a5) {
LABEL_6:
  }
    result |= 0x1000uLL;
LABEL_7:
  if (a6) {
    result |= 0x2000uLL;
  }
  if (a7) {
    return result | 0x4000;
  }
  return result;
}

uint64_t sub_100046A94()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100046AA4()
{
  sub_10001C234();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100046ECC;
  return sub_100045494(v3, v4);
}

uint64_t sub_100046B3C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100046B84(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100046C4C;
  return sub_100043D00(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100046C4C()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v1 = *v0;
  sub_100046EF8();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_10001C2E0();
  return v3();
}

uint64_t sub_100046D0C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100046D44()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100046C4C;
  uint64_t v2 = (uint64_t (__cdecl *)())((char *)&dword_1000FDD70 + dword_1000FDD70);
  return v2();
}

unint64_t sub_100046DFC()
{
  unint64_t result = qword_1000FD868;
  if (!qword_1000FD868)
  {
    type metadata accessor for ScoreboardSubscriptionManager();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FD868);
  }
  return result;
}

uint64_t sub_100046E4C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100046E84(void **a1)
{
  return sub_10000B228(a1, *(void *)(v1 + 16));
}

uint64_t sub_100046E8C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100046EC4(void **a1)
{
  return sub_10000B28C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100046EE4()
{
  return v0 + 168;
}

uint64_t sub_100046F24()
{
  return sub_10000835C(v0, v1);
}

uint64_t sub_100046F3C(uint64_t a1)
{
  return sub_1000082C0(v1, 1, 1, a1);
}

uint64_t sub_100046F5C()
{
  return swift_slowAlloc();
}

uint64_t sub_100046F80()
{
  return sub_10001DF8C(v0, v1);
}

void *sub_100046F98(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = type metadata accessor for SportingEventSubscription.Competitor();
  uint64_t v5 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v27 = v2;
    uint64_t v25 = a2;
    os_log_type_t v34 = _swiftEmptyArrayStorage;
    sub_100017E5C();
    uint64_t v9 = (uint64_t)v34;
    v22[1] = v5 + 32;
    uint64_t v23 = v5;
    uint64_t v10 = a1 + 48;
    while (1)
    {
      uint64_t v26 = (void *)v9;
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = *(void *)v10;
      uint64_t v9 = (uint64_t)v7;
      uint64_t v13 = *(void *)(v10 + 24);
      uint64_t v14 = *(void *)(v10 + 32);
      uint64_t v15 = *(void *)(v10 + 40);
      char v16 = *(unsigned char *)(v10 + 48);
      v28[0] = *(void *)(v10 - 16);
      v28[1] = v11;
      _OWORD v28[2] = v12;
      long long v29 = *(_OWORD *)(v10 + 8);
      uint64_t v30 = v13;
      uint64_t v31 = v14;
      uint64_t v32 = v15;
      char v33 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100047998(v14, v15);
      uint64_t v17 = (char *)v9;
      uint64_t v18 = v27;
      sub_100047594(v28, v25, v9);
      uint64_t v27 = v18;
      if (v18) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000479A8(v14, v15);
      uint64_t v9 = (uint64_t)v26;
      os_log_type_t v34 = v26;
      unint64_t v19 = v26[2];
      if (v19 >= v26[3] >> 1)
      {
        sub_100017E5C();
        uint64_t v9 = (uint64_t)v34;
      }
      v10 += 72;
      *(void *)(v9 + 16) = v19 + 1;
      unint64_t v20 = v9
          + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))
          + *(void *)(v23 + 72) * v19;
      uint64_t v7 = v17;
      (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v20, v17, v24);
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        return (void *)v9;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000479A8(v14, v15);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return (void *)v9;
}

uint64_t sub_100047228@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v22 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v22 - v13;
  memcpy(v27, a1, sizeof(v27));
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_bridgeObjectRetain();
  char v16 = sub_100046F98(v15, a2);
  uint64_t v17 = v14;
  uint64_t v18 = v16;
  swift_bridgeObjectRelease();
  Date.init()();
  sub_100047530((uint64_t)&v27[8], (uint64_t)v28, &qword_1000FD880);
  sub_100047530((uint64_t)v28, (uint64_t)&v29, &qword_1000FD880);
  if ((v31 & 1) == 0)
  {
    uint64_t v32 = v29;
    char v33 = v30;
    sub_100047530((uint64_t)&v32, (uint64_t)v34, &qword_1000FD888);
    sub_100047530((uint64_t)v34, (uint64_t)&v35, &qword_1000FD888);
    if ((v36 & 1) == 0)
    {
      Date.init(timeIntervalSince1970:)();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v17, v11, v5);
    }
  }
  unint64_t v19 = a1[32];
  uint64_t v25 = v18;
  if (v19 > 1) {
    v22[0] = a1[31];
  }
  else {
    v22[0] = v27[19];
  }
  swift_bridgeObjectRetain();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v17, v5);
  uint64_t v20 = v27[4];
  if (!v27[5]) {
    uint64_t v20 = 0;
  }
  v22[1] = v20;
  uint64_t v23 = v17;
  uint64_t v24 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SportingEventSubscription.Metadata.init(eventStartDate:competitors:preGameTitle:shortTitle:eventURL:localizedLeagueName:)();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v23, v24);
}

uint64_t sub_100047530(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100005E5C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100047594@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v45 = a3;
  uint64_t v38 = type metadata accessor for LogoDownloadResult();
  uint64_t v5 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v7 = (uint64_t *)((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v37 = (uint64_t)&v36 - v9;
  uint64_t v10 = sub_100005E5C(&qword_1000FD6B8);
  __chkstk_darwin(v10 - 8);
  uint64_t v44 = (uint64_t)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v36 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v18 = *a1;
  uint64_t v19 = a1[1];
  uint64_t v20 = a1[2];
  uint64_t v39 = a1[3];
  uint64_t v40 = v20;
  uint64_t v21 = a1[5];
  uint64_t v41 = a1[4];
  uint64_t v42 = v21;
  uint64_t v46 = a1[6];
  uint64_t v47 = a1[7];
  int v43 = *((unsigned __int8 *)a1 + 64);
  uint64_t v22 = *(void *)(a2 + 16);
  if (v22)
  {
    uint64_t v23 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v24 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1000479CC(v23, (uint64_t)v7);
      BOOL v25 = *v7 == v18 && v7[1] == v19;
      if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      sub_100047A30((uint64_t)v7);
      v23 += v24;
      if (!--v22)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v29 = (uint64_t)v7;
    uint64_t v30 = v37;
    sub_100047B54(v29, v37);
    uint64_t v31 = v30 + *(int *)(v38 + 24);
    uint64_t v32 = type metadata accessor for SportingEventSubscription.Competitor.LogoFilePaths();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v17, v31, v32);
    sub_100047A30(v30);
    uint64_t v27 = (uint64_t)v17;
    uint64_t v28 = 0;
    uint64_t v26 = v32;
  }
  else
  {
LABEL_10:
    uint64_t v26 = type metadata accessor for SportingEventSubscription.Competitor.LogoFilePaths();
    uint64_t v27 = (uint64_t)v17;
    uint64_t v28 = 1;
  }
  sub_1000082C0(v27, v28, 1, v26);
  if ((unint64_t)(v47 - 1) >= 2)
  {
    sub_10002A5A8(v46, v47);
  }
  else
  {
    uint64_t v46 = 0;
    uint64_t v47 = 0;
  }
  sub_100047A8C((uint64_t)v17, (uint64_t)v14);
  uint64_t v33 = type metadata accessor for SportingEventSubscription.Competitor.LogoFilePaths();
  int v34 = sub_1000082E8((uint64_t)v14, 1, v33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v34 == 1)
  {
    sub_100047AF4((uint64_t)v14);
  }
  else
  {
    SportingEventSubscription.Competitor.LogoFilePaths.defaultSize.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8))(v14, v33);
  }
  sub_100047A8C((uint64_t)v17, v44);
  swift_bridgeObjectRetain();
  SportingEventSubscription.Competitor.init(canonicalId:abbreviation:name:teamLogoUrl:localLogoUrl:logoFilePaths:teamColorHex:isHome:ordinal:)();
  return sub_100047AF4((uint64_t)v17);
}

uint64_t sub_100047998(uint64_t a1, uint64_t a2)
{
  if (a2 != 2) {
    return sub_10002A5A8(a1, a2);
  }
  return a1;
}

uint64_t sub_1000479A8(uint64_t a1, uint64_t a2)
{
  if (a2 != 2) {
    return sub_1000479B8(a1, a2);
  }
  return a1;
}

uint64_t sub_1000479B8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000479CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogoDownloadResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100047A30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LogoDownloadResult();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100047A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005E5C(&qword_1000FD6B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100047AF4(uint64_t a1)
{
  uint64_t v2 = sub_100005E5C(&qword_1000FD6B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100047B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogoDownloadResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100047BB8(unint64_t a1, void *a2, void *a3)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      SportingEvent.canonicalId.getter();
      dispatch thunk of PlaysStore.append(play:forCanonicalId:)();
      if (v3)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }

      swift_bridgeObjectRelease();
      ++v6;
      if (v9 == v5) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_10:

  swift_bridgeObjectRelease();
}

uint64_t sub_100047D2C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_cancellable) = a1;
  return swift_release();
}

uint64_t sub_100047D44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_messageVersion);
  *uint64_t v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

void sub_100047D60()
{
  uint64_t v1 = v0;
  sub_100005E5C(&qword_1000FD938);
  swift_allocObject();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_10004C410(v2);
  sub_10004D57C();
  unint64_t v6 = *(void *)(v5 + *(void *)(v4 + 184));
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      sub_100097604(0, (v6 & 0xC000000000000001) == 0, v6);
      if ((v6 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v6 + 32);
      }
      uint64_t v9 = v8;
      swift_bridgeObjectRelease();
      if (qword_1000FBDC0 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_10000929C(v10, (uint64_t)qword_10010A508);
      swift_retain_n();
      id v11 = v9;
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        v60[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 136316418;
        uint64_t v15 = SportingEvent.canonicalId.getter();
        sub_10004D5C8(v15, v16, v17, v18, v19);
        sub_10004D52C();

        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2080;
        uint64_t v20 = SportingEvent.version.getter();
        sub_10004D5C8(v20, v21, v22, v23, v24);
        sub_10004D52C();

        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 22) = 2048;
        Date.timeIntervalSince1970.getter();
        uint64_t v62 = v25;
        sub_10004D52C();
        sub_10004D4BC();
        *(_WORD *)(v14 + 32) = 2048;
        uint64_t v26 = *(void *)(v3[2] + 16);
        swift_release();
        uint64_t v62 = v26;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        *(_WORD *)(v14 + 42) = 2080;
        uint64_t v27 = v3[2];
        uint64_t v29 = *(void *)(v27 + 40);
        unint64_t v28 = *(void *)(v27 + 48);
        swift_bridgeObjectRetain();
        uint64_t v62 = sub_100017098(v29, v28, v60);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_10004D4BC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 52) = 2048;
        uint64_t v30 = v3[2] + qword_10010A5D8;
        double v31 = *(double *)v30;
        if (*(unsigned char *)(v30 + 8)) {
          double v31 = -1.0;
        }
        uint64_t v62 = *(void *)&v31;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_10004D4BC();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "=== Begin apns log for %s, version %s, message timestamp %f, type %ld, tempoSessionId %s, liveActivityTtl %f ===", (uint8_t *)v14, 0x3Eu);
        swift_arrayDestroy();
        sub_10001C2C8();
        sub_10001C2C8();
      }
      else
      {

        swift_release_n();
      }
      uint64_t v32 = SportingEvent.version.getter();
      sub_100047D44(v32, v33);
      uint64_t v34 = *(void *)(v1 + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_dataRepository);
      SportingEvent.canonicalId.getter();
      sub_100005EA0((void *)(v34 + 16), *(void *)(v34 + 40));
      uint64_t v35 = (void *)dispatch thunk of PersistentStorable.retrieveEventSubscription(canonicalId:isConventionalOrUnified:)();
      swift_bridgeObjectRelease();
      if (v35)
      {
        uint64_t v36 = dispatch thunk of SportingEvent.versionNumber.getter();
        uint64_t v37 = (void *)SportingEventSubscription.sportingEventDetails.getter();
        uint64_t v38 = dispatch thunk of SportingEvent.versionNumber.getter();

        if (v36 >= v38)
        {
          SportingEvent.canonicalId.getter();
          sub_10004A644();
          swift_bridgeObjectRelease();
        }
        sub_100008BFC(v1 + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_activityUpdateable, (uint64_t)v60, &qword_1000FD930);
        if (v61)
        {
          sub_100005EA0(v60, v61);
          SportingEventSubscription.canonicalId.getter();
          uint64_t v39 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v40 = (void *)swift_allocObject();
          v40[2] = v39;
          v40[3] = v3;
          v40[4] = v35;
          v40[5] = v11;
          swift_retain();
          id v41 = v11;
          swift_retain();
          id v42 = v35;
          sub_10005E0A8();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();

          sub_100006178((uint64_t)v60);
        }
        else
        {
          swift_release();

          sub_1000095CC((uint64_t)v60, &qword_1000FD930);
        }
      }
      else
      {
        id v43 = v11;
        swift_retain_n();
        id v44 = v43;
        uint64_t v45 = Logger.logObject.getter();
        os_log_type_t v46 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v45, v46))
        {
          uint64_t v47 = swift_slowAlloc();
          v60[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v47 = 136315650;
          uint64_t v48 = SportingEvent.canonicalId.getter();
          uint64_t v62 = sub_10004D5C8(v48, v49, v50, v51, v52);
          sub_10004D548();

          swift_bridgeObjectRelease();
          *(_WORD *)(v47 + 12) = 2080;
          uint64_t v53 = SportingEvent.version.getter();
          uint64_t v62 = sub_10004D5C8(v53, v54, v55, v56, v57);
          sub_10004D548();

          swift_bridgeObjectRelease();
          *(_WORD *)(v47 + 22) = 2048;
          Date.timeIntervalSince1970.getter();
          uint64_t v62 = v58;
          sub_10004D548();
          sub_10004D4BC();
          _os_log_impl((void *)&_mh_execute_header, v45, v46, "Failed to process push notification for %s with version %s and message timestamp %f - no subscription exists", (uint8_t *)v47, 0x20u);
          swift_arrayDestroy();
          sub_10001C2C8();
          sub_10001C2C8();
        }
        else
        {

          sub_10004D4BC();
        }
        sub_100048968();
        swift_release();
      }
      sub_10004D4D4();
      return;
    }
  }
  swift_bridgeObjectRelease();
  sub_100048968();
  sub_10004D4D4();
  swift_release();
}

void sub_100048684(char a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    int v11 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_isLowCapLiveActivity);
    sub_100048A4C(a3, a4, a5, *(void *)(*(void *)(a3 + 16) + qword_10010A5D8), *(unsigned char *)(*(void *)(a3 + 16) + qword_10010A5D8 + 8), v11, a1 & 1);
    if ((v11 & 1) == 0)
    {
      uint64_t v14[3] = &type metadata for TVAppFeatureFlags;
      void v14[4] = sub_1000092D4();
      char v12 = isFeatureEnabled(_:)();
      sub_100006178((uint64_t)v14);
      if ((v12 & 1) == 0)
      {
        unint64_t v13 = dispatch thunk of SportingEvent.plays.getter();
        sub_100047BB8(v13, v10, a5);
        swift_bridgeObjectRelease();
      }
    }
    sub_100048968();
  }
}

uint64_t sub_100048968()
{
  if (qword_1000FBDC0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000929C(v0, (uint64_t)qword_10010A508);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "=== End apns log ===", v3, 2u);
    sub_10001C2C8();
  }

  return sub_10006B95C();
}

void sub_100048A4C(uint64_t a1, void *a2, void *a3, uint64_t a4, char a5, int a6, int a7)
{
  uint64_t v173 = a4;
  uint64_t v180 = a1;
  int v166 = a7;
  int v167 = a6;
  unint64_t v182 = a3;
  int v172 = a5 & 1;
  uint64_t v9 = sub_100005E5C(&qword_1000FC938);
  uint64_t v10 = sub_10001C9AC(v9);
  __chkstk_darwin(v10);
  char v12 = (char *)&v148 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v161 = (char *)&v148 - v14;
  uint64_t v168 = type metadata accessor for Date();
  sub_100009830();
  uint64_t v170 = v15;
  __chkstk_darwin(v16);
  sub_10004D594();
  uint64_t v169 = v17;
  __chkstk_darwin(v18);
  uint64_t v150 = (char *)&v148 - v19;
  uint64_t v153 = type metadata accessor for SportsScheduledActivities();
  sub_100009830();
  uint64_t v152 = v20;
  __chkstk_darwin(v21);
  sub_10000C58C();
  uint64_t v165 = v22;
  uint64_t v23 = sub_100005E5C(&qword_1000FC940);
  uint64_t v24 = sub_10001C9AC(v23);
  __chkstk_darwin(v24);
  sub_10004D484();
  uint64_t v151 = type metadata accessor for Sport();
  sub_100009830();
  uint64_t v163 = v25;
  __chkstk_darwin(v26);
  sub_10000C58C();
  uint64_t v162 = v27;
  uint64_t v28 = sub_100005E5C(&qword_1000FD690);
  uint64_t v29 = sub_10001C9AC(v28);
  __chkstk_darwin(v29);
  sub_10000C58C();
  os_log_t v171 = v30;
  type metadata accessor for SportingEventProgressStatus();
  sub_100009830();
  uint64_t v175 = v31;
  uint64_t v176 = v32;
  __chkstk_darwin(v31);
  sub_10004D594();
  uint64_t v34 = v33;
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v148 - v36;
  uint64_t v38 = type metadata accessor for SportingEventPlayLevel();
  sub_100009830();
  uint64_t v40 = v39;
  __chkstk_darwin(v41);
  sub_1000098F8();
  uint64_t v44 = v43 - v42;
  uint64_t v45 = SportingEventSubscription.mostRecentPlay.getter();
  os_log_type_t v46 = *(void (**)(void))(v40 + 104);
  unsigned int v156 = enum case for SportingEventPlayLevel.alerts(_:);
  uint64_t v157 = v40 + 104;
  uint64_t v155 = (void (*)(uint64_t, void, uint64_t))v46;
  v46(v44);
  uint64_t v178 = sub_100090930(v44, v45);
  swift_bridgeObjectRelease();
  uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  uint64_t v158 = v44;
  uint64_t v160 = v38;
  uint64_t v48 = v38;
  unint64_t v49 = a2;
  uint64_t v159 = v40 + 8;
  uint64_t v154 = v47;
  v47(v44, v48);
  uint64_t v50 = (void *)SportingEventSubscription.sportingEventDetails.getter();
  unint64_t v51 = dispatch thunk of SportingEvent.alertUpdates.getter();

  uint64_t v164 = v7;
  uint64_t v149 = v12;
  if (!v51) {
    goto LABEL_9;
  }
  if (v51 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v53) {
      goto LABEL_4;
    }
    goto LABEL_8;
  }
  if (!*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_9:
    unint64_t v177 = 0;
    goto LABEL_10;
  }
LABEL_4:
  sub_100097604(0, (v51 & 0xC000000000000001) == 0, v51);
  if ((v51 & 0xC000000000000001) != 0) {
    id v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v52 = *(id *)(v51 + 32);
  }
  unint64_t v177 = v52;
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v54 = SportingEventSubscription.sportingEventDetails.getter();
  SportingEvent.progressStatus.getter();

  uint64_t v55 = v176;
  v181 = (void (*)(uint64_t, void, uint64_t))v176[13];
  v181(v34, enum case for SportingEventProgressStatus.final(_:), v175);
  LOBYTE(v54) = sub_10006A990((uint64_t)v37, v34);
  uint64_t v56 = (void (*)(void))v55[1];
  sub_10004D434();
  v56();
  sub_10004D434();
  v56();
  if (v54)
  {
    type metadata accessor for SportingEventFactory();
    sub_10004D444();
    v57();
    uint64_t v58 = (void *)static SportingEventFactory.eventWithProgressStatus(event:progressStatus:)();
    sub_10004D434();
    v56();
    uint64_t v59 = v179;
    SportingEventSubscription.update(sportingEventDetails:updatedAt:)();

    sub_10004D57C();
    sub_100008BFC(v61 + *(void *)(v60 + 176), (uint64_t)v171, &qword_1000FD690);
    SportingEventSubscription.view.setter();
    uint64_t v62 = v49;
    goto LABEL_27;
  }
  uint64_t v176 = v49;
  uint64_t v63 = (void *)SportingEventSubscription.sportingEventDetails.getter();
  SportingEvent.progressStatus.getter();

  sub_10004D444();
  v64();
  char v65 = sub_10006A990((uint64_t)v37, v34);
  sub_10004D434();
  v56();
  sub_10004D434();
  v56();
  uint64_t v66 = v182;
  if ((v65 & 1) == 0) {
    goto LABEL_18;
  }
  SportingEvent.progressStatus.getter();
  sub_10004D444();
  v67();
  char v68 = sub_10006A990((uint64_t)v37, v34);
  sub_10004D434();
  v56();
  sub_10004D434();
  v56();
  if (v68)
  {
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v69 = type metadata accessor for Logger();
    sub_10000929C(v69, (uint64_t)qword_10010A568);
    id v70 = v66;
    uint64_t v71 = Logger.logObject.getter();
    os_log_type_t v72 = static os_log_type_t.error.getter();
    BOOL v73 = os_log_type_enabled(v71, v72);
    uint64_t v59 = v179;
    uint64_t v62 = v176;
    if (v73)
    {
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      uint64_t v184 = (void (*)(void, void, void))swift_slowAlloc();
      *(_DWORD *)uint64_t v74 = 136315138;
      v181 = (void (*)(uint64_t, void, uint64_t))(v74 + 4);
      uint64_t v75 = SportingEvent.canonicalId.getter();
      uint64_t v183 = sub_100017098(v75, v76, (uint64_t *)&v184);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v71, v72, "Skipped pregame update for inProgress event. canonical id: %s", v74, 0xCu);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();

      goto LABEL_27;
    }
  }
  else
  {
LABEL_18:
    uint64_t v77 = dispatch thunk of SportingEvent.versionNumber.getter();
    uint64_t v62 = v176;
    uint64_t v78 = (void *)SportingEventSubscription.sportingEventDetails.getter();
    uint64_t v79 = dispatch thunk of SportingEvent.versionNumber.getter();

    if (v77 >= v79)
    {
      uint64_t v59 = v179;
      SportingEventSubscription.update(sportingEventDetails:updatedAt:)();
      sub_10004D57C();
      sub_100008BFC(v95 + *(void *)(v94 + 176), (uint64_t)v171, &qword_1000FD690);
      SportingEventSubscription.view.setter();
      goto LABEL_27;
    }
    uint64_t v59 = v179;
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v80 = type metadata accessor for Logger();
    sub_10000929C(v80, (uint64_t)qword_10010A568);
    id v81 = v66;
    id v82 = v62;
    id v83 = v81;
    id v70 = v82;
    unint64_t v84 = Logger.logObject.getter();
    os_log_type_t v85 = static os_log_type_t.error.getter();
    int v86 = v85;
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v87 = swift_slowAlloc();
      v181 = (void (*)(uint64_t, void, uint64_t))swift_slowAlloc();
      uint64_t v184 = v181;
      *(_DWORD *)uint64_t v87 = 136315650;
      LODWORD(v175) = v86;
      uint64_t v88 = SportingEvent.canonicalId.getter();
      uint64_t v183 = sub_100017098(v88, v89, (uint64_t *)&v184);
      os_log_t v171 = v84;
      sub_10004D4A0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v87 + 12) = 2048;
      uint64_t v90 = dispatch thunk of SportingEvent.versionNumber.getter();

      uint64_t v183 = v90;
      sub_10004D4A0();

      *(_WORD *)(v87 + 22) = 2048;
      uint64_t v91 = (void *)SportingEventSubscription.sportingEventDetails.getter();
      uint64_t v92 = dispatch thunk of SportingEvent.versionNumber.getter();

      uint64_t v183 = v92;
      sub_10004D4A0();

      os_log_t v93 = v171;
      _os_log_impl((void *)&_mh_execute_header, v171, (os_log_type_t)v175, "Skipped stale activity update for canonical id: %s. (%ld < %ld)", (uint8_t *)v87, 0x20u);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();

      goto LABEL_27;
    }
  }
LABEL_27:
  uint64_t v96 = v174;
  SportingEventSubscription.liveActivityTTLSeconds.setter();
  uint64_t v97 = *(void *)&v59[OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_dataRepository];
  sub_100005EA0((void *)(v97 + 16), *(void *)(v97 + 40));
  dispatch thunk of PersistentStorable.writeEventSubscription(_:isConventionalOrUnified:)();
  if (v96)
  {
  }
  else
  {
    uint64_t v98 = SportingEventSubscription.consumers.getter();
    sub_1000511F4(0xD000000000000011, 0x80000001000D0580, v98);
    int v100 = v99;
    swift_bridgeObjectRelease();
    LODWORD(v101) = v100 | v167;
    if ((v100 | v167))
    {
      if (v166)
      {
        uint64_t v102 = SportingEventSubscription.mostRecentPlay.getter();
        uint64_t v103 = v158;
        uint64_t v104 = v160;
        v155(v158, v156, v160);
        v181 = (void (*)(uint64_t, void, uint64_t))sub_100090930(v103, v102);
        swift_bridgeObjectRelease();
        v154(v103, v104);
        uint64_t v105 = (void *)SportingEventSubscription.sportingEventDetails.getter();
        unint64_t v106 = dispatch thunk of SportingEvent.alertUpdates.getter();

        if (v106)
        {
          uint64_t v107 = v168;
          if (v106 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v108 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v108 = *(void *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          uint64_t v109 = v62;
          if (v108)
          {
            sub_100097604(0, (v106 & 0xC000000000000001) == 0, v106);
            if ((v106 & 0xC000000000000001) != 0) {
              id v110 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v110 = *(id *)(v106 + 32);
            }
            uint64_t v111 = v110;
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v111 = 0;
          }
        }
        else
        {
          uint64_t v109 = v62;
          uint64_t v111 = 0;
          uint64_t v107 = v168;
        }
        if (qword_1000FBD98 != -1) {
          swift_once();
        }
        SportingEventSubscription.sport.getter();
        Sport.init(rawValue:)();
        sub_100051308();
        char v133 = v132;
        sub_100009894();
        v134();
        if (v133) {
          char v135 = sub_10004B7A8(v178, v181);
        }
        else {
          char v135 = sub_10004B8DC(v177, v111);
        }
        char v136 = v135;
        uint64_t v137 = type metadata accessor for TaskPriority();
        uint64_t v138 = v164;
        sub_1000082C0(v164, 1, 1, v137);
        uint64_t v139 = swift_allocObject();
        *(void *)(v139 + 16) = 0;
        *(void *)(v139 + 24) = 0;
        *(void *)(v139 + 32) = v59;
        *(void *)(v139 + 40) = v109;
        *(unsigned char *)(v139 + 48) = v136 & 1;
        *(void *)(v139 + 56) = v180;
        id v140 = v109;
        uint64_t v141 = v59;
        swift_retain();
        sub_100051F94(v138, (uint64_t)&unk_1000FD9B0, v139);
        swift_release();

        uint64_t v62 = v109;
      }
      else
      {
        sub_100005EA0((void *)(v97 + 16), *(void *)(v97 + 40));
        dispatch thunk of PersistentStorable.scheduledLiveActivities.getter();
        uint64_t v176 = v62;
        uint64_t v112 = (void (*)(uint64_t, void, uint64_t))SportingEventSubscription.canonicalId.getter();
        uint64_t v114 = v113;
        uint64_t v115 = SportsScheduledActivities.scheduledActivities.getter();
        swift_bridgeObjectRetain();
        uint64_t v116 = v161;
        sub_100090978((uint64_t)v112, v114, v115);
        swift_bridgeObjectRelease();
        uint64_t v117 = (uint64_t)v116;
        swift_bridgeObjectRelease();
        uint64_t v118 = (uint64_t)v116;
        uint64_t v119 = v168;
        if (sub_1000082E8(v118, 1, v168) == 1)
        {
          sub_100009894();
          v120();
          swift_bridgeObjectRelease();
          sub_1000095CC(v117, &qword_1000FC938);
          uint64_t v62 = v176;
          uint64_t v107 = v119;
        }
        else
        {
          v181 = v112;
          LODWORD(v175) = v101;
          uint64_t v121 = v170;
          uint64_t v101 = v150;
          (*(void (**)(char *, uint64_t, uint64_t))(v170 + 32))(v150, v117, v119);
          uint64_t v122 = v169;
          static Date.now.getter();
          sub_10004D138();
          char v123 = dispatch thunk of static Comparable.< infix(_:_:)();
          uint64_t v124 = v122;
          unint64_t v125 = *(void (**)(uint64_t, uint64_t))(v121 + 8);
          v125(v124, v119);
          if (v123)
          {
            swift_bridgeObjectRelease();
            v125((uint64_t)v101, v119);
            sub_100009894();
            v126();
            uint64_t v62 = v176;
            uint64_t v107 = v119;
            LOBYTE(v101) = v175;
          }
          else
          {
            uint64_t v174 = v125;
            sub_100005EA0((void *)(v97 + 16), *(void *)(v97 + 40));
            uint64_t v127 = (uint64_t)v149;
            sub_1000082C0((uint64_t)v149, 1, 1, v119);
            dispatch thunk of PersistentStorable.scheduleLiveActivity(_:forId:)();
            uint64_t v128 = v153;
            uint64_t v129 = v152;
            uint64_t v130 = v150;
            LOBYTE(v101) = v175;
            sub_1000095CC(v127, &qword_1000FC938);
            sub_10004AFF4((uint64_t)v181, v114);
            swift_bridgeObjectRelease();
            uint64_t v131 = v130;
            uint64_t v107 = v168;
            v174((uint64_t)v131, v168);
            (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v165, v128);
            uint64_t v62 = v176;
          }
        }
      }
    }
    else
    {
      uint64_t v107 = v168;
    }
    uint64_t v142 = v180;
    sub_10004A6D4(v180, v62, v101 & 1);
    uint64_t v143 = SportingEventSubscription.canonicalId.getter();
    unint64_t v144 = v62;
    sub_10004BBCC(v143, v145, v142, 0);
    swift_bridgeObjectRelease();
    uint64_t v146 = v169;
    Date.init()();
    sub_10004B958(v182, v144, v147, v101 & 1);

    (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v146, v107);
  }
}

uint64_t sub_100049A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  *(void *)(v7 + 120) = a5;
  *(void *)(v7 + 128) = a7;
  *(unsigned char *)(v7 + 160) = a6;
  *(void *)(v7 + 112) = a4;
  return _swift_task_switch(sub_100049AC0, 0, 0);
}

uint64_t sub_100049AC0()
{
  sub_10004D588();
  uint64_t v1 = 1751607656;
  char v2 = sub_10007AD1C();
  if ((v2 & 1) == 0) {
    _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  char v3 = v2 & 1;
  type metadata accessor for ContainerConstants();
  uint64_t v4 = static ContainerConstants.defaultSuiteName.getter();
  uint64_t v6 = v5;
  id v7 = objc_allocWithZone((Class)NSUserDefaults);
  id v8 = sub_10005F5B8(v4, v6);
  if (!v8) {
    id v8 = [self standardUserDefaults];
  }
  uint64_t v9 = v8;
  v0[17] = v8;
  NSString v10 = sub_10004D5A8();
  id v11 = [v9 stringForKey:v10];

  if (v11)
  {
    uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v13 = (void *)0xE400000000000000;
  }
  v25._countAndFlagsBits = v1;
  v25._object = v13;
  char v14 = sub_100052458(v25);
  if ((sub_10006A31C(v3, (v14 == 2) | (v14 & 1)) & 1) == 0)
  {
    if (qword_1000FBD60 != -1) {
      swift_once();
    }
    sub_100005EA0((void *)(qword_10010A498 + 208), *(void *)(qword_10010A498 + 232));
    v0[10] = sub_10000DBE0();
    uint64_t v15 = swift_allocObject();
    *(unsigned char *)(v15 + 16) = v3;
    *(void *)(v15 + 24) = v9;
    id v16 = v9;
    sub_100005E5C(&qword_1000FC180);
    sub_10000953C(&qword_1000FC188, &qword_1000FC180);
    uint64_t v17 = Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    sub_100047D2C(v17);
  }
  sub_100008BFC(v0[14] + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_activityUpdateable, (uint64_t)(v0 + 2), &qword_1000FD930);
  uint64_t v18 = v0[5];
  if (v18)
  {
    sub_100005EA0(v0 + 2, v18);
    uint64_t v19 = (void *)swift_task_alloc();
    v0[18] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_100049E64;
    return sub_10005EFDC();
  }
  else
  {
    sub_1000095CC((uint64_t)(v0 + 2), &qword_1000FD930);
    uint64_t v21 = (void (**)(void))(v0[14]
                                       + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_activityUpdateCompletion);
    uint64_t v22 = (void *)v0[17];
    if (*v21) {
      (*v21)(0);
    }

    sub_10001C2E0();
    return v23();
  }
}

uint64_t sub_100049E64()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v2 = *v1;
  sub_100046EF8();
  *char v3 = v2;
  *(void *)(v4 + 152) = v0;
  swift_task_dealloc();
  sub_10001CAE8();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_100049F44()
{
  sub_10001C234();
  sub_100006178(v0 + 16);
  uint64_t v1 = (void (**)(void))(*(void *)(v0 + 112)
                                    + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_activityUpdateCompletion);
  uint64_t v2 = *(void **)(v0 + 136);
  if (*v1) {
    (*v1)(0);
  }

  sub_10001C2E0();
  return v3();
}

uint64_t sub_100049FCC()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void *)(v0 + 112);

  sub_100006178(v0 + 16);
  uint64_t v2 = *(void (**)(void))(v1 + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_activityUpdateCompletion);
  if (v2)
  {
    sub_10004D2D4();
    swift_allocError();
    *char v3 = xmmword_1000CBAA0;
    v2();
    swift_errorRelease();
  }
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v6 = SportingEventSubscription.canonicalId.getter();
  uint64_t v8 = v7;
  swift_errorRetain();
  sub_10004BBCC(v6, v8, v5, v4);
  swift_errorRelease();
  swift_bridgeObjectRelease();
  if (qword_1000FBDE0 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void **)(v0 + 120);
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000929C(v10, (uint64_t)qword_10010A568);
  swift_errorRetain();
  id v11 = v9;
  swift_errorRetain();
  id v12 = v11;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  id v16 = *(void **)(v0 + 120);
  if (v15)
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    os_log_type_t type = v14;
    uint64_t v18 = (void *)SportingEventSubscription.sportingEventDetails.getter();
    uint64_t v19 = SportingEvent.canonicalId.getter();
    unint64_t v21 = v20;

    *(void *)(v0 + 88) = sub_100017098(v19, v21, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v17 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v22 = Error.localizedDescription.getter();
    *(void *)(v0 + 104) = sub_100017098(v22, v23, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, type, "Failed to update activity for canonical id: %s - %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    sub_10001C2C8();
    sub_10001C2C8();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  sub_10001C2E0();
  return v24();
}

uint64_t sub_10004A31C(uint64_t *a1, char a2, void *a3)
{
  char v5 = a2 & 1;
  uint64_t v6 = sub_100005E5C(&qword_1000FC940);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v11 = type metadata accessor for TaskPriority();
  sub_1000082C0((uint64_t)v8, 1, 1, v11);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  *(unsigned char *)(v12 + 32) = v5;
  *(void *)(v12 + 40) = v10;
  *(void *)(v12 + 48) = v9;
  *(void *)(v12 + 56) = a3;
  swift_bridgeObjectRetain();
  id v13 = a3;
  sub_100051F94((uint64_t)v8, (uint64_t)&unk_1000FD9C8, v12);
  return swift_release();
}

uint64_t sub_10004A418(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 24) = a6;
  *(void *)(v7 + 32) = a7;
  *(void *)(v7 + 16) = a5;
  *(unsigned char *)(v7 + 48) = a4;
  return _swift_task_switch(sub_10004A440, 0, 0);
}

uint64_t sub_10004A440()
{
  sub_10001C234();
  if (qword_1000FBDA0 != -1) {
    swift_once();
  }
  *(void *)(v0 + 40) = qword_10010A4E0;
  if (qword_1000FBD90 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10010A4D0;
  return _swift_task_switch(sub_10004A50C, v1, 0);
}

uint64_t sub_10004A50C()
{
  sub_10001C234();
  sub_1000524AC(*(unsigned char *)(v0 + 48) & 1);
  sub_10001CAE8();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10004A578()
{
  uint64_t v1 = *(void **)(v0 + 32);
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v3 = sub_10004D5A8();
  [v1 setObject:v2 forKey:v3];

  sub_10001C2E0();
  return v4();
}

uint64_t sub_10004A644()
{
  NSString v3 = &type metadata for TVAppFeatureFlags;
  unint64_t v4 = sub_1000092D4();
  char v0 = isFeatureEnabled(_:)();
  uint64_t result = sub_100006178((uint64_t)v2);
  if (v0) {
    return sub_1000321C8();
  }
  return result;
}

void sub_10004A6D4(uint64_t a1, void *a2, int a3)
{
  int v46 = a3;
  uint64_t v6 = sub_100005E5C(&qword_1000FC940);
  uint64_t v7 = sub_10001C9AC(v6);
  __chkstk_darwin(v7);
  sub_10000C58C();
  uint64_t v9 = v8;
  uint64_t v10 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
  uint64_t v11 = sub_10001C9AC(v10);
  __chkstk_darwin(v11);
  sub_10004D484();
  uint64_t v12 = type metadata accessor for URL();
  sub_100009830();
  uint64_t v14 = v13;
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v17);
  uint64_t v18 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  unint64_t v21 = (char *)&v39 - v20;
  uint64_t v22 = (uint64_t *)(*(void *)(a1 + 16) + qword_10010A5E0);
  uint64_t v23 = v22[1];
  if (v23)
  {
    uint64_t v44 = *v22;
    swift_bridgeObjectRetain();
    uint64_t v45 = a2;
    SportingEventSubscription.fullPayloadBaseURL.getter();
    if (sub_1000082E8(v3, 1, v12) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v24 = (uint64_t *)&unk_1000FDA80;
      Swift::String v25 = (void *)v3;
    }
    else
    {
      uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 32);
      v43(v21, v3, v12);
      sub_100008BFC((uint64_t)v47 + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_subscriptionOperationFactory, (uint64_t)v48, &qword_1000FCFF0);
      if (v48[3])
      {
        memcpy(v49, v48, 0xB8uLL);
        uint64_t v26 = type metadata accessor for TaskPriority();
        uint64_t v42 = v9;
        sub_1000082C0(v9, 1, 1, v26);
        sub_10002A3E0((uint64_t)v49, (uint64_t)v48);
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, v21, v12);
        unint64_t v39 = (*(unsigned __int8 *)(v14 + 80) + 224) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
        uint64_t v27 = v39 + v16;
        unint64_t v28 = v27 & 0xFFFFFFFFFFFFFFF8;
        unint64_t v40 = ((v27 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v41 = v27;
        uint64_t v29 = (char *)swift_allocObject();
        uint64_t v30 = &v29[v28];
        *((void *)v29 + 2) = 0;
        *((void *)v29 + 3) = 0;
        memcpy(v29 + 32, v48, 0xB8uLL);
        uint64_t v31 = v45;
        *((void *)v29 + 27) = v45;
        v43(&v29[v39], (uint64_t)v18, v12);
        v29[v41] = v46 & 1;
        *((void *)v30 + 1) = v44;
        *((void *)v30 + 2) = v23;
        uint64_t v32 = v47;
        *(void *)&v29[v40] = v47;
        id v33 = v31;
        id v34 = v32;
        sub_100051FC0(v42, (uint64_t)&unk_1000FD990, (uint64_t)v29);
        swift_release();
        sub_10002A60C((uint64_t)v49);
        uint64_t v35 = sub_10004D564();
        v36(v35);
        return;
      }
      uint64_t v37 = sub_10004D564();
      v38(v37);
      swift_bridgeObjectRelease();
      uint64_t v24 = &qword_1000FCFF0;
      Swift::String v25 = v48;
    }
    sub_1000095CC((uint64_t)v25, v24);
  }
}

uint64_t sub_10004AA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 56) = v10;
  *(void *)(v8 + 64) = v11;
  *(void *)(v8 + 40) = a6;
  *(void *)(v8 + 48) = a8;
  *(unsigned char *)(v8 + 88) = a7;
  *(void *)(v8 + 24) = a4;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 16) = a1;
  return _swift_task_switch(sub_10004AA50, 0, 0);
}

uint64_t sub_10004AA50()
{
  char v1 = *(unsigned char *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  long long v5 = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(_OWORD *)(v4 + 56) = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10004AB60;
  sub_10001CAE8();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_10004AB60()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v1 = *v0;
  sub_100046EF8();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C2E0();
  return v3();
}

uint64_t sub_10004AC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v25 = a8;
  v21[1] = a6;
  v21[2] = a7;
  uint64_t v22 = a1;
  uint64_t v8 = sub_100005E5C(&qword_1000FD980);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = sub_100005E5C(&qword_1000FD998);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v23 = v11;
  uint64_t v24 = v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  SportingEventSubscription.canonicalId.getter();
  sub_100029DF0();
  swift_bridgeObjectRelease();
  uint64_t v15 = v29;
  uint64_t v16 = v30;
  sub_100005EA0(v28, v29);
  uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  char v26 = 0;
  sub_100005E5C(&qword_1000FCEE8);
  sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
  Publisher.replaceError(with:)();
  swift_release();
  sub_100006178((uint64_t)v28);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v8);
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v18 + v17, (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  sub_10000953C(&qword_1000FD9A0, &qword_1000FD998);
  uint64_t v19 = v23;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v19);
  swift_beginAccess();
  sub_100005E5C(&qword_1000FCEF8);
  sub_10000953C(&qword_1000FCF00, &qword_1000FCEF8);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10004AFAC()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10004AFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100005E5C(&qword_1000FC940);
  uint64_t v6 = sub_10001C9AC(v5);
  __chkstk_darwin(v6);
  sub_1000098F8();
  uint64_t v9 = v8 - v7;
  sub_100008BFC((uint64_t)v2 + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_subscriptionOperationFactory, (uint64_t)v14, &qword_1000FCFF0);
  if (!v14[3]) {
    return sub_1000095CC((uint64_t)v14, &qword_1000FCFF0);
  }
  memcpy(v15, v14, 0xB8uLL);
  uint64_t v10 = type metadata accessor for TaskPriority();
  sub_1000082C0(v9, 1, 1, v10);
  sub_10002A3E0((uint64_t)v15, (uint64_t)v14);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = 0;
  v11[3] = 0;
  memcpy(v11 + 4, v14, 0xB8uLL);
  v11[27] = a1;
  v11[28] = a2;
  v11[29] = v2;
  swift_bridgeObjectRetain();
  id v12 = v2;
  sub_100051FC0(v9, (uint64_t)&unk_1000FD978, (uint64_t)v11);
  swift_release();
  return sub_10002A60C((uint64_t)v15);
}

uint64_t sub_10004B14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  void v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return _swift_task_switch(sub_10004B174, 0, 0);
}

uint64_t sub_10004B174()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  long long v4 = *(_OWORD *)(v0 + 40);
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  *(_OWORD *)(v3 + 32) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10004B270;
  sub_10001CAE8();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_10004B270()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v1 = *v0;
  sub_100046EF8();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C2E0();
  return v3();
}

uint64_t sub_10004B34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v30 = a1;
  uint64_t v31 = a5;
  uint64_t v28 = a3;
  uint64_t v29 = a2;
  uint64_t v6 = sub_100005E5C(&qword_1000FD980);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = sub_100005E5C(&qword_1000FC938);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ActivityOperation = type metadata accessor for SubscriptionCreateActivityOperation(0);
  __chkstk_darwin(ActivityOperation - 8);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t v38 = 1;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  uint64_t v43 = 0;
  unint64_t v15 = sub_1000522C4();
  uint64_t v17 = v16;
  uint64_t v18 = type metadata accessor for Date();
  sub_1000082C0((uint64_t)v11, 1, 1, v18);
  uint64_t v26 = v15;
  LOBYTE(v25) = 1;
  uint64_t v19 = v28;
  sub_100029F10(v28, a4, 1, (uint64_t)&v35, 0, 1, 0, 0, v25, v26, v17, (uint64_t)v11, v27, v28, v29, v30, v31, v32, v33,
    v34,
    v35,
    v36,
    v37,
    v38);
  swift_bridgeObjectRelease();
  sub_1000095CC((uint64_t)v11, &qword_1000FC938);
  sub_1000A2D3C(0);
  uint64_t v21 = v20;
  sub_10004CC9C((uint64_t)v14);
  uint64_t v32 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v6);
  unint64_t v22 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v19;
  *(void *)(v23 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v23 + v22, (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_bridgeObjectRetain();
  sub_100005E5C(&qword_1000FCEE8);
  sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
  Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_100005E5C(&qword_1000FCEF8);
  sub_10000953C(&qword_1000FCF00, &qword_1000FCEF8);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10004B6D0(void *a1, uint64_t a2, uint64_t a3)
{
  if (*a1)
  {
    if (qword_1000FBD60 != -1) {
      swift_once();
    }
    sub_100030914(0xD000000000000011, 0x80000001000D0580, a2, a3, (uint64_t)nullsub_1, 0);
  }
  sub_100005E5C(&qword_1000FD980);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10004B7A8(void *a1, void *a2)
{
  if (!a2) {
    return 0;
  }
  if (!a1) {
    return 1;
  }
  id v3 = a2;
  id v4 = a1;
  uint64_t v24 = dispatch thunk of SportingEventPlay.stamp.getter();
  char v6 = v5;
  uint64_t v7 = dispatch thunk of SportingEventPlay.stamp.getter();
  char v9 = v8;
  uint64_t v10 = dispatch thunk of SportingEventPlay.id.getter();
  if (v11) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = 48;
  }
  if (v11) {
    unint64_t v13 = v11;
  }
  else {
    unint64_t v13 = 0xE100000000000000;
  }
  uint64_t v14 = dispatch thunk of SportingEventPlay.id.getter();
  if (v15) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = 48;
  }
  if (v15) {
    unint64_t v17 = v15;
  }
  else {
    unint64_t v17 = 0xE100000000000000;
  }
  if (v12 == v16 && v13 == v17)
  {
    swift_bridgeObjectRelease_n();

    return 0;
  }
  if (v9) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = v7;
  }
  uint64_t v20 = v24;
  if (v6) {
    uint64_t v20 = 0;
  }
  BOOL v21 = v19 < v20;
  char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v22) {
    return 0;
  }
  return v21;
}

BOOL sub_10004B8DC(void *a1, void *a2)
{
  if (!a2) {
    return 0;
  }
  if (!a1) {
    return 1;
  }
  id v3 = a2;
  id v4 = a1;
  uint64_t v5 = SportingEventAlertUpdate.version.getter();
  uint64_t v6 = SportingEventAlertUpdate.version.getter();

  return v6 < v5;
}

uint64_t sub_10004B958(void *a1, void *a2, uint64_t a3, char a4)
{
  swift_getObjectType();
  type metadata accessor for SportsSubscriptionState();
  uint64_t result = static SportsSubscriptionState.activeSubscriptionEventId.getter();
  if (v8)
  {
    uint64_t v9 = v8;
    if (result == SportingEvent.canonicalId.getter() && v9 == v10)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v12 & 1) == 0) {
        return result;
      }
    }
    if (a4) {
      uint64_t v13 = 0x4E4F4953534553;
    }
    else {
      uint64_t v13 = 0x505041205654;
    }
    if (a4) {
      unint64_t v14 = 0xE700000000000000;
    }
    else {
      unint64_t v14 = 0xE600000000000000;
    }
    if (qword_1000FBDC0 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10000929C(v15, (uint64_t)qword_10010A508);
    swift_bridgeObjectRetain();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315138;
      swift_bridgeObjectRetain();
      sub_100017098(v13, v14, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "EVENT TYPE: %s", v18, 0xCu);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return sub_1000AFB74(a1, a2);
  }
  return result;
}

uint64_t sub_10004BBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = type metadata accessor for SportingEventProgressStatus();
  sub_100009830();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_1000098F8();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for Date();
  sub_100009830();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_1000098F8();
  uint64_t v21 = v20 - v19;
  sub_100008B98(v5 + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_performance, (uint64_t)v65);
  uint64_t v59 = sub_100005EA0(v65, v65[3]);
  if (a3)
  {
    uint64_t v22 = *(void *)(a3 + 16);
    uint64_t v23 = *(void *)(v22 + 48);
    uint64_t v58 = *(void *)(v22 + 40);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v58 = 0;
    uint64_t v23 = 0;
  }
  uint64_t v57 = *(void *)(v5 + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_notificationReceiptTime);
  Date.init()();
  uint64_t v56 = sub_1000A268C();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v21, v15);
  if (!a3)
  {
    uint64_t v38 = 0;
    uint64_t v26 = 0;
    uint64_t v39 = 0;
    uint64_t v35 = 0;
    uint64_t v37 = 0;
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    char v40 = *(unsigned char *)(v5 + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_isLowCapLiveActivity);
    if (!a4) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  uint64_t v53 = sub_1000A268C();
  uint64_t v24 = *(void **)(a3 + 16);
  uint64_t v25 = *(void *)(a3 + 24);
  HIDWORD(v51) = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_isLowCapLiveActivity);
  uint64_t v26 = v24[4];
  uint64_t v52 = v24[3];
  uint64_t v54 = v24[2];
  sub_10004D57C();
  unint64_t v29 = *(void *)(v28 + *(void *)(v27 + 184));
  swift_bridgeObjectRetain();
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v55 = v25;
  if (v30)
  {
    BOOL v31 = __OFSUB__(v30, 1);
    uint64_t v32 = v30 - 1;
    if (v31)
    {
      __break(1u);
    }
    else
    {
      sub_100097604(v32, (v29 & 0xC000000000000001) == 0, v29);
      if ((v29 & 0xC000000000000001) == 0)
      {
        id v33 = *(id *)(v29 + 8 * v32 + 32);
LABEL_11:
        uint64_t v34 = v33;
        swift_bridgeObjectRelease();
        SportingEvent.progressStatus.getter();

        uint64_t v35 = SportingEventProgressStatus.rawValue.getter();
        uint64_t v37 = v36;
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v8);
        goto LABEL_15;
      }
    }
    id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  uint64_t v35 = 0;
  uint64_t v37 = 0;
LABEL_15:
  uint64_t v38 = v53;
  uint64_t v39 = v52;
  char v40 = BYTE4(v51);
  if (!a4)
  {
LABEL_17:
    uint64_t v64 = 0;
    memset(v63, 0, sizeof(v63));
    goto LABEL_18;
  }
LABEL_16:
  uint64_t v62 = a4;
  swift_errorRetain();
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  sub_100005E5C(&qword_1000FD968);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_17;
  }
LABEL_18:
  LOBYTE(v50) = 1;
  LOBYTE(v47) = v40 ^ 1;
  LOBYTE(v49) = a3 == 0;
  LOBYTE(v48) = a3 == 0;
  LOBYTE(v46) = a3 == 0;
  sub_1000BAAEC(a1, a2, v58, v23, v57, 0, v56, 0, v38, v46, v39, v26, v47, v54, v48, v55, v49, 0, v50,
    v35,
    v37,
    0,
    0,
    (uint64_t)v63,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    (uint64_t)v59,
    a1,
    a2,
    v62);
  uint64_t v42 = v41;
  __int16 v44 = v43;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000095CC((uint64_t)v63, &qword_1000FD800);
  sub_1000BB028(v42, v44 & 0x101);
  swift_bridgeObjectRelease();
  return sub_100006178((uint64_t)v65);
}

void sub_10004BFD4()
{
}

uint64_t sub_10004C014()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1000095CC(v0 + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_activityUpdateable, &qword_1000FD930);
  sub_1000095CC(v0 + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_subscriptionOperationFactory, &qword_1000FCFF0);
  sub_100006178(v0 + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_performance);
  swift_release();
  sub_10004C400(*(void *)(v0 + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_activityUpdateCompletion));
  sub_1000095CC(v0 + OBJC_IVAR____TtC7sportsd29ApsMessageProcessingOperation_processDate, &qword_1000FC938);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_10004C114()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ApsMessageProcessingOperation();
  return [super dealloc];
}

uint64_t sub_10004C258()
{
  return type metadata accessor for ApsMessageProcessingOperation();
}

uint64_t type metadata accessor for ApsMessageProcessingOperation()
{
  uint64_t result = qword_1000FD920;
  if (!qword_1000FD920) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10004C2A8()
{
  sub_10004C3A8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10004C3A8()
{
  if (!qword_1000FCB88)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000FCB88);
    }
  }
}

uint64_t sub_10004C400(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void *sub_10004C410(uint64_t a1)
{
  id v3 = v1;
  uint64_t v5 = *v1;
  uint64_t v6 = type metadata accessor for JSONDecoder.DateDecodingStrategy();
  uint64_t v30 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100005E5C(&qword_1000FC158);
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.Encoding();
  uint64_t v31 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = 7565409;
  unint64_t v33 = 0xE300000000000000;
  AnyHashable.init<A>(_:)();
  sub_1000908D4((uint64_t)&v34, a1, &v37);
  swift_bridgeObjectRelease();
  sub_10001BDCC((uint64_t)&v34);
  if (!v38)
  {
    sub_1000095CC((uint64_t)&v37, (uint64_t *)&unk_1000FC300);
    goto LABEL_10;
  }
  uint64_t v39 = v5;
  sub_100005E5C(&qword_1000FD950);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    sub_100005E5C(&qword_1000FD940);
    sub_10000953C(&qword_1000FD948, &qword_1000FD940);
    swift_allocError();
    unint64_t v20 = 0xD000000000000014;
    uint64_t v21 = "Key is missing - aps";
LABEL_13:
    *uint64_t v19 = v20;
    v19[1] = (unint64_t)(v21 - 32) | 0x8000000000000000;
    swift_willThrow();
    goto LABEL_14;
  }
  uint64_t v29 = v2;
  sub_100090720(v32, &v34);
  swift_bridgeObjectRelease();
  if (!v35)
  {
    sub_1000095CC((uint64_t)&v34, (uint64_t *)&unk_1000FC300);
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    sub_100005E5C(&qword_1000FD940);
    sub_10000953C(&qword_1000FD948, &qword_1000FD940);
    swift_allocError();
    unint64_t v20 = 0xD000000000000016;
    uint64_t v21 = "Key is missing - alert";
    goto LABEL_13;
  }
  sub_100090720(v37, &v34);
  swift_bridgeObjectRelease();
  if (!v35)
  {
    sub_1000095CC((uint64_t)&v34, (uint64_t *)&unk_1000FC300);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    sub_100005E5C(&qword_1000FD940);
    sub_10000953C(&qword_1000FD948, &qword_1000FD940);
    swift_allocError();
    unint64_t v17 = 0xD000000000000015;
    uint64_t v18 = "Key is missing - body";
    goto LABEL_18;
  }
  static String.Encoding.utf8.getter();
  uint64_t v13 = String.data(using:allowLossyConversion:)();
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v10);
  if (v15 >> 60 == 15)
  {
    sub_100005E5C(&qword_1000FD940);
    sub_10000953C(&qword_1000FD948, &qword_1000FD940);
    swift_allocError();
    unint64_t v17 = 0xD000000000000016;
    uint64_t v18 = "Unexpected data format";
LABEL_18:
    *uint64_t v16 = v17;
    v16[1] = (unint64_t)(v18 - 32) | 0x8000000000000000;
    swift_willThrow();
    goto LABEL_14;
  }
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  static SportsJSONContext.Property<A>.initFailureObserver.getter();
  uint64_t v23 = type metadata accessor for DefaultSportsJSONInitFailureObserver();
  swift_allocObject();
  uint64_t v24 = DefaultSportsJSONInitFailureObserver.init()();
  uint64_t v35 = v23;
  uint64_t v36 = &protocol witness table for DefaultSportsJSONInitFailureObserver;
  *(void *)&long long v34 = v24;
  uint64_t v25 = (void (*)(long long *, void))dispatch thunk of JSONDecoder.userInfo.modify();
  sub_100005E5C(&qword_1000FC168);
  Dictionary<>.subscript.setter();
  v25(&v37, 0);
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v8, enum case for JSONDecoder.DateDecodingStrategy.secondsSince1970(_:), v6);
  dispatch thunk of JSONDecoder.dateDecodingStrategy.setter();
  sub_100005E5C(&qword_1000FD958);
  sub_10000953C(&qword_1000FD960, &qword_1000FD958);
  uint64_t v26 = v29;
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  if (!v26)
  {
    v3[2] = v34;
    uint64_t v27 = v13;
    uint64_t v28 = Data.count.getter();
    swift_release();
    sub_100029010(v27, v15);
    v3[3] = v28;
    return v3;
  }
  swift_release();
  sub_100029010(v13, v15);
LABEL_14:
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t sub_10004CAE0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004CB18()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10004CB68(char a1)
{
  sub_100048684(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_10004CB74()
{
  swift_unknownObjectRelease();
  sub_100006178(v0 + 32);
  swift_release();
  swift_release();
  sub_10004D4F0();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 240, 7);
}

uint64_t sub_10004CBD8()
{
  sub_10004D588();
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_10004D458(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_100046ECC;
  uint64_t v6 = sub_10004D468();
  return sub_10004B14C(v6, v7, v8, v9, v10, v1, v2);
}

uint64_t sub_10004CC90(uint64_t a1)
{
  return sub_10004B34C(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10004CC9C(uint64_t a1)
{
  uint64_t ActivityOperation = type metadata accessor for SubscriptionCreateActivityOperation(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(ActivityOperation - 8) + 8))(a1, ActivityOperation);
  return a1;
}

uint64_t sub_10004CCF8()
{
  uint64_t v1 = sub_100005E5C(&qword_1000FD980);
  sub_100009830();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v9);
}

uint64_t sub_10004CDA0(void *a1)
{
  uint64_t v3 = sub_100005E5C(&qword_1000FD980);
  sub_10002EE14(v3);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);

  return sub_10004B6D0(a1, v4, v5);
}

uint64_t sub_10004CDF8()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_100009830();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 224) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = (((v7 + *(void *)(v5 + 64)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  sub_100006178(v0 + 32);
  swift_release();
  swift_release();
  sub_10004D4F0();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v9 + 8, v8);
}

uint64_t sub_10004CEEC(uint64_t a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 224) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[27];
  uint64_t v8 = (uint64_t)v1 + v3;
  char v9 = *((unsigned char *)v1 + v4);
  uint64_t v10 = *(void *)((char *)v1 + (v4 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = (void *)sub_10004D458(v11);
  *uint64_t v12 = v13;
  v12[1] = sub_100046C4C;
  return sub_10004AA18(a1, v5, v6, (uint64_t)(v1 + 4), v7, v8, v9, v10);
}

uint64_t sub_10004D044(uint64_t a1)
{
  return sub_10004AC3C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_10004D05C()
{
  sub_100005E5C(&qword_1000FD980);
  sub_1000098E8();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = ((v2 + 16) & ~v2) + *(void *)(v1 + 56);
  uint64_t v4 = v2 | 7;
  sub_100009894();
  v5();

  return _swift_deallocObject(v0, v3, v4);
}

uint64_t sub_10004D0E4()
{
  uint64_t v0 = sub_100005E5C(&qword_1000FD980);
  sub_10002EE14(v0);

  return sub_10004AFAC();
}

unint64_t sub_10004D138()
{
  unint64_t result = qword_1000FC830;
  if (!qword_1000FC830)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FC830);
  }
  return result;
}

uint64_t sub_10004D188()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10004D1D8()
{
  sub_10004D588();
  char v1 = *(unsigned char *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_10004D458(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_100046ECC;
  uint64_t v6 = sub_10004D468();
  return sub_100049A98(v6, v7, v8, v9, v10, v1, v2);
}

uint64_t sub_10004D290()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004D2C8(uint64_t *a1)
{
  return sub_10004A31C(a1, *(unsigned char *)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_10004D2D4()
{
  unint64_t result = qword_1000FD9B8;
  if (!qword_1000FD9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000FD9B8);
  }
  return result;
}

uint64_t sub_10004D320()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10004D368()
{
  sub_10004D588();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  char v5 = *(unsigned char *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 56);
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)sub_10004D458(v9);
  *uint64_t v10 = v11;
  v10[1] = sub_100046ECC;
  return sub_10004A418(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_10004D458(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_10004D468()
{
  return v0;
}

uint64_t sub_10004D484()
{
  return 0;
}

uint64_t sub_10004D4A0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10004D4BC()
{
  return swift_release_n();
}

uint64_t sub_10004D4F0()
{
  sub_100006178(v0 + 88);
  sub_100006178(v0 + 128);
  sub_100006178(v0 + 168);
  return swift_release();
}

uint64_t sub_10004D52C()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10004D548()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10004D564()
{
  return v0;
}

NSString sub_10004D5A8()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10004D5C8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return sub_100017098(a1, a2, (uint64_t *)va);
}

uint64_t sub_10004D5E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
  __chkstk_darwin(v4 - 8);
  sub_1000098F8();
  uint64_t v161 = v6 - v5;
  uint64_t v162 = type metadata accessor for URLRequest();
  sub_100009830();
  uint64_t v137 = v7;
  __chkstk_darwin(v8);
  char v136 = (char *)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100051124();
  __chkstk_darwin(v10);
  sub_100051130();
  uint64_t v130 = v11;
  sub_100051124();
  __chkstk_darwin(v12);
  uint64_t v13 = sub_100005E5C(&qword_1000FC938);
  __chkstk_darwin(v13 - 8);
  unint64_t v15 = (char *)&v124 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  sub_100051130();
  uint64_t v160 = v17;
  sub_100051124();
  __chkstk_darwin(v18);
  sub_100051130();
  uint64_t v159 = v19;
  sub_100051124();
  __chkstk_darwin(v20);
  sub_100051130();
  uint64_t v158 = v21;
  sub_100051124();
  __chkstk_darwin(v22);
  sub_100051130();
  uint64_t v157 = v23;
  sub_100051124();
  __chkstk_darwin(v24);
  sub_100051130();
  uint64_t v156 = v25;
  sub_100051124();
  __chkstk_darwin(v26);
  sub_100051130();
  uint64_t v155 = v27;
  sub_100051124();
  __chkstk_darwin(v28);
  sub_100051130();
  uint64_t v154 = v29;
  sub_100051124();
  __chkstk_darwin(v30);
  uint64_t v153 = (uint64_t)&v124 - v31;
  uint64_t v32 = (int *)type metadata accessor for ApiRequestMetrics();
  sub_1000098E8();
  __chkstk_darwin(v33);
  sub_1000098F8();
  uint64_t v36 = v35 - v34;
  type metadata accessor for Date();
  sub_10005110C(a2, 1);
  uint64_t v37 = a2 + v32[5];
  sub_10005110C(v37, 1);
  uint64_t v151 = a2 + v32[8];
  sub_10005110C(v151, 1);
  uint64_t v150 = a2 + v32[9];
  sub_10005110C(v150, 1);
  uint64_t v149 = a2 + v32[10];
  sub_10005110C(v149, 1);
  sub_100051154(v32[12]);
  uint64_t v147 = v38;
  uint64_t v148 = a2 + v32[13];
  sub_10005110C(v148, 1);
  uint64_t v39 = a2 + v32[14];
  uint64_t v40 = type metadata accessor for URL();
  uint64_t v146 = v39;
  sub_1000082C0(v39, 1, 1, v40);
  uint64_t v41 = a2 + v32[15];
  sub_10005110C(v41, 1);
  uint64_t v144 = a2 + v32[16];
  sub_10005110C(v144, 1);
  uint64_t v143 = a2 + v32[17];
  sub_10005110C(v143, 1);
  uint64_t v42 = a2 + v32[18];
  *(void *)uint64_t v42 = 0;
  *(unsigned char *)(v42 + 8) = 1;
  sub_100051154(v32[19]);
  uint64_t v138 = v43;
  sub_100051154(v32[20]);
  uint64_t v139 = v44;
  sub_100051154(v32[21]);
  uint64_t v140 = v45;
  sub_100051154(v32[22]);
  uint64_t v141 = v46;
  sub_100051154(v32[23]);
  uint64_t v142 = v47;
  id v48 = [a1 response];
  if (v48)
  {
    uint64_t v49 = v48;
    self;
    id v163 = (id)swift_dynamicCastObjCClass();
    if (v163) {
      goto LABEL_5;
    }
  }
  id v163 = 0;
LABEL_5:
  id v50 = [a1 connectEndDate];
  uint64_t v164 = v15;
  uint64_t v152 = v37;
  if (v50)
  {
    uint64_t v51 = v50;
    uint64_t v52 = v153;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v53 = v52;
    uint64_t v54 = 0;
    uint64_t v55 = v158;
  }
  else
  {
    uint64_t v54 = 1;
    uint64_t v55 = v158;
    uint64_t v53 = v153;
  }
  uint64_t v56 = 1;
  sub_10005110C(v53, v54);
  id v57 = [a1 connectStartDate];
  if (v57)
  {
    uint64_t v58 = v57;
    uint64_t v59 = v154;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v60 = v59;
    uint64_t v56 = 0;
  }
  else
  {
    uint64_t v60 = v154;
  }
  uint64_t v61 = 1;
  sub_10005110C(v60, v56);
  id v126 = [a1 countOfRequestBodyBytesSent];
  id v134 = [a1 countOfResponseBodyBytesReceived];
  id v62 = [a1 domainLookupEndDate];
  if (v62)
  {
    uint64_t v63 = v62;
    uint64_t v64 = v155;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v65 = v64;
    uint64_t v61 = 0;
  }
  else
  {
    uint64_t v65 = v155;
  }
  uint64_t v66 = 1;
  sub_10005110C(v65, v61);
  id v67 = [a1 domainLookupStartDate];
  if (v67)
  {
    char v68 = v67;
    uint64_t v69 = v156;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v70 = v69;
    uint64_t v66 = 0;
  }
  else
  {
    uint64_t v70 = v156;
  }
  uint64_t v71 = 1;
  sub_10005110C(v70, v66);
  id v72 = [a1 fetchStartDate];
  if (v72)
  {
    BOOL v73 = v72;
    uint64_t v74 = v157;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v75 = v74;
    uint64_t v71 = 0;
  }
  else
  {
    uint64_t v75 = v157;
  }
  uint64_t v76 = 1;
  sub_10005110C(v75, v71);
  unsigned int v133 = [a1 isReusedConnection];
  uint64_t v132 = sub_10001BE20(a1, (SEL *)&selRef_networkProtocolName);
  uint64_t v131 = v77;
  id v78 = [a1 requestStartDate];
  uint64_t v145 = v41;
  if (v78)
  {
    uint64_t v79 = v78;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v76 = 0;
  }
  uint64_t v80 = 1;
  sub_10005110C(v55, v76);
  id v81 = [a1 request];
  static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();

  URLRequest.url.getter();
  id v82 = *(void (**)(void))(v137 + 8);
  sub_10000C580();
  v82();
  id v83 = [a1 responseEndDate];
  uint64_t v127 = v82;
  if (v83)
  {
    unint64_t v84 = v83;
    uint64_t v85 = v159;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v86 = v85;
    uint64_t v80 = 0;
  }
  else
  {
    uint64_t v86 = v159;
  }
  uint64_t v87 = 1;
  sub_10005110C(v86, v80);
  id v88 = [a1 responseStartDate];
  if (v88)
  {
    unint64_t v89 = v88;
    uint64_t v90 = v160;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v87 = 0;
  }
  else
  {
    uint64_t v90 = v160;
  }
  uint64_t v91 = 1;
  sub_10005110C(v90, v87);
  id v92 = [a1 secureConnectionStartDate];
  if (v92)
  {
    os_log_t v93 = v92;
    uint64_t v94 = (uint64_t)v164;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v91 = 0;
  }
  else
  {
    uint64_t v94 = (uint64_t)v164;
  }
  sub_10005110C(v94, v91);
  id v95 = v163;
  uint64_t v135 = a2;
  if (v163) {
    id v125 = [v163 statusCode];
  }
  else {
    id v125 = 0;
  }
  id v96 = [a1 request];
  static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v137 = URLRequest.httpMethod.getter();
  uint64_t v130 = v97;
  uint64_t v98 = v127;
  sub_10000C580();
  v98();
  uint64_t v129 = sub_10001BE20(a1, (SEL *)&selRef_remoteAddress);
  uint64_t v128 = v99;
  id v100 = [a1 request];
  static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v101 = URLRequest.allHTTPHeaderFields.getter();
  sub_10000C580();
  v98();
  if (v101)
  {
    uint64_t v162 = sub_100090838(0x6567412D72657355, 0xEA0000000000746ELL, v101);
    char v136 = v102;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v162 = 0;
    char v136 = 0;
  }
  uint64_t v103 = (uint64_t)v164;
  if (v95)
  {
    id v104 = v95;
    NSString v105 = String._bridgeToObjectiveC()();
    id v106 = [v104 valueForHTTPHeaderField:v105];

    if (v106)
    {
      id v95 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v108 = v107;
    }
    else
    {
      id v95 = 0;
      uint64_t v108 = 0;
    }
    id v111 = v104;
    NSString v112 = String._bridgeToObjectiveC()();
    id v113 = sub_1000511D4((uint64_t)v112);

    if (v113)
    {
      uint64_t v109 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v110 = v114;
    }
    else
    {
      NSString v115 = String._bridgeToObjectiveC()();
      id v116 = sub_1000511D4((uint64_t)v115);

      if (v116)
      {
        uint64_t v109 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v110 = v117;
      }
      else
      {

        uint64_t v109 = 0;
        uint64_t v110 = 0;
      }
    }
    uint64_t v103 = (uint64_t)v164;
  }
  else
  {

    uint64_t v109 = 0;
    uint64_t v110 = 0;
    uint64_t v108 = 0;
  }
  id v118 = v126;
  BOOL v119 = v163 == 0;
  sub_100050D20(v153, v36, &qword_1000FC938);
  sub_100050D20(v154, v36 + v32[5], &qword_1000FC938);
  *(void *)(v36 + v32[6]) = v118;
  *(void *)(v36 + v32[7]) = v134;
  sub_100050D20(v155, v36 + v32[8], &qword_1000FC938);
  sub_100050D20(v156, v36 + v32[9], &qword_1000FC938);
  sub_100050D20(v157, v36 + v32[10], &qword_1000FC938);
  *(unsigned char *)(v36 + v32[11]) = v133;
  sub_10005119C((void *)(v36 + v32[12]));
  sub_100050D20(v158, v36 + v32[13], &qword_1000FC938);
  sub_100050D20(v161, v36 + v32[14], (uint64_t *)&unk_1000FDA80);
  sub_100050D20(v159, v36 + v32[15], &qword_1000FC938);
  sub_100050D20(v160, v36 + v32[16], &qword_1000FC938);
  sub_100050D20(v103, v36 + v32[17], &qword_1000FC938);
  uint64_t v120 = v36 + v32[18];
  *(void *)uint64_t v120 = v125;
  *(unsigned char *)(v120 + 8) = v119;
  sub_10005119C((void *)(v36 + v32[19]));
  sub_10005119C((void *)(v36 + v32[20]));
  sub_10005119C((void *)(v36 + v32[21]));
  uint64_t v121 = (void *)(v36 + v32[22]);
  void *v121 = v95;
  v121[1] = v108;
  uint64_t v122 = (uint64_t *)(v36 + v32[23]);
  uint64_t *v122 = v109;
  v122[1] = v110;
  sub_10001C16C(v135, &qword_1000FC938);
  sub_10001C16C(v152, &qword_1000FC938);
  sub_10001C16C(v151, &qword_1000FC938);
  sub_10001C16C(v150, &qword_1000FC938);
  sub_10001C16C(v149, &qword_1000FC938);
  swift_bridgeObjectRelease();
  sub_10001C16C(v148, &qword_1000FC938);
  sub_10001C16C(v146, (uint64_t *)&unk_1000FDA80);
  sub_10001C16C(v145, &qword_1000FC938);
  sub_10001C16C(v144, &qword_1000FC938);
  sub_10001C16C(v143, &qword_1000FC938);
  sub_100051184();
  sub_100051184();
  sub_100051184();
  sub_100051184();
  sub_100051184();
  return sub_100050CD8();
}

uint64_t sub_10004E290(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = sub_100005E5C(&qword_1000FDA00);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ApiRequestMetrics();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v12 = __chkstk_darwin(v11).n128_u64[0];
  uint64_t v14 = (char *)&v29 - v13;
  id v15 = [a3 transactionMetrics:v12];
  sub_100050C50();
  unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v16 >> 62))
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    sub_1000082C0((uint64_t)v7, 1, 1, v8);
    return sub_10001C16C((uint64_t)v7, &qword_1000FDA00);
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_11;
  }
LABEL_3:
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    sub_100097604(v19, (v16 & 0xC000000000000001) == 0, v16);
    if ((v16 & 0xC000000000000001) == 0)
    {
      id v20 = *(id *)(v16 + 8 * v19 + 32);
      goto LABEL_6;
    }
  }
  id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_6:
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  id v22 = v21;
  sub_10004D5E0(v22, (uint64_t)v7);
  sub_1000082C0((uint64_t)v7, 0, 1, v8);

  if (sub_1000082E8((uint64_t)v7, 1, v8) == 1) {
    return sub_10001C16C((uint64_t)v7, &qword_1000FDA00);
  }
  sub_100050CD8();
  id v23 = [a2 response];
  if (v23)
  {
    uint64_t v24 = v23;
    sub_100050C90();
    uint64_t v25 = (objc_class *)sub_100005E5C(&qword_1000FDA78);
    id v26 = objc_allocWithZone(v25);
    sub_100050C90();
    v29.receiver = v26;
    v29.super_class = v25;
    id v27 = [super init];
    sub_1000509F0((uint64_t)v10, (void (*)(void))type metadata accessor for ApiRequestMetrics);
    sub_10004E5CC(v27);
  }
  return sub_1000509F0((uint64_t)v14, (void (*)(void))type metadata accessor for ApiRequestMetrics);
}

void sub_10004E5CC(void *a1)
{
  swift_beginAccess();
  objc_setAssociatedObject(v1, &unk_1000FD9D0, a1, (void *)1);
  swift_endAccess();
}

id sub_10004E6D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AMSTaskDelegate();
  return [super init];
}

id sub_10004E72C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AMSTaskDelegate();
  return [super dealloc];
}

uint64_t type metadata accessor for AMSTaskDelegate()
{
  return self;
}

uint64_t sub_10004E788()
{
  swift_beginAccess();
  id v1 = objc_getAssociatedObject(v0, &unk_1000FD9D0);
  swift_endAccess();
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_100050D20((uint64_t)v4, (uint64_t)v5, (uint64_t *)&unk_1000FC300);
  if (v6)
  {
    sub_100005E5C(&qword_1000FDA78);
    if (swift_dynamicCast()) {
      return v3;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_10001C16C((uint64_t)v5, (uint64_t *)&unk_1000FC300);
    return 0;
  }
}

void sub_10004E878(void *a1)
{
  if (a1)
  {
    self;
    uint64_t v2 = swift_dynamicCastObjCClass();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      uint64_t v4 = qword_1000FBDC8;
      id v5 = a1;
      if (v4 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_10000929C(v6, (uint64_t)qword_10010A520);
      id v15 = v5;
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        uint64_t v16 = swift_slowAlloc();
        *(_DWORD *)uint64_t v9 = 136315138;
        NSString v10 = String._bridgeToObjectiveC()();
        id v11 = [v3 valueForHTTPHeaderField:v10];

        if (v11)
        {
          uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v14 = v13;
        }
        else
        {
          unint64_t v14 = 0xE400000000000000;
          uint64_t v12 = 1701736270;
        }
        sub_100017098(v12, v14, &v16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "X-Apple-Jingle-Correlation-Key is %s", v9, 0xCu);
        swift_arrayDestroy();
        sub_10001C2C8();
        sub_10001C2C8();
      }
      else
      {
      }
    }
  }
}

uint64_t sub_10004EAD8@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, void *a5@<X6>, uint64_t *a6@<X8>)
{
  uint64_t v11 = sub_100005E5C(&qword_1000FDA00);
  __chkstk_darwin(v11 - 8);
  sub_1000098F8();
  uint64_t v14 = v13 - v12;
  type metadata accessor for ApiAgentError();
  sub_1000098E8();
  __chkstk_darwin(v15);
  sub_100009864();
  if (qword_1000FBDC8 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_10000929C(v16, (uint64_t)qword_10010A520);
  swift_errorRetain();
  sub_1000511BC();
  swift_errorRetain();
  sub_1000511BC();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v17, v18))
  {
    swift_errorRelease();
    swift_errorRelease();
    sub_10005113C();
    sub_10005113C();

    goto LABEL_16;
  }
  os_log_type_t v41 = v18;
  uint64_t v42 = a3;
  uint64_t v40 = a6;
  uint64_t v19 = swift_slowAlloc();
  uint64_t v45 = swift_slowAlloc();
  *(_DWORD *)uint64_t v19 = 136315394;
  swift_getErrorValue();
  uint64_t v20 = Error.localizedDescription.getter();
  uint64_t v22 = sub_100017098(v20, v21, &v45);
  sub_100051160(v22);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  *(_WORD *)(v19 + 12) = 2080;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1)
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
      }
      sub_1000511BC();
      if (__DataStorage._bytes.getter() && __OFSUB__((int)a1, __DataStorage._offset.getter())) {
        goto LABEL_22;
      }
      __DataStorage._length.getter();
LABEL_14:
      uint64_t v26 = static String._fromUTF8Repairing(_:)();
      unint64_t v28 = v25;
      sub_10005113C();
LABEL_15:
      uint64_t v29 = sub_100017098(v26, v28, &v45);
      sub_100051160(v29);
      swift_bridgeObjectRelease();
      sub_10005113C();
      sub_10005113C();
      _os_log_impl((void *)&_mh_execute_header, v17, v41, "ApiAgent: error parsing data: Map error: %s\nData: %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();

      a3 = v42;
LABEL_16:
      uint64_t v30 = (uint64_t)&v6[*(int *)(sub_100005E5C(&qword_1000FDA08) + 48)];
      *uint64_t v6 = 1;
      sub_100050D70(a3, v30, &qword_1000FDA00);
      swift_storeEnumTagMultiPayload();
      uint64_t v31 = a3;
      uint64_t v32 = a5[3];
      uint64_t v33 = a5[4];
      sub_100005EA0(a5, v32);
      uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 16))(v32, v33);
      sub_100050D70(v31, v14, &qword_1000FDA00);
      uint64_t v35 = type metadata accessor for ApiRequestMetrics();
      if (sub_1000082E8(v14, 1, v35) == 1)
      {
        sub_10001C16C(v14, &qword_1000FDA00);
        uint64_t v36 = 0;
      }
      else
      {
        sub_1000BBB94();
        uint64_t v36 = v37;
        sub_1000509F0(v14, (void (*)(void))type metadata accessor for ApiRequestMetrics);
      }
      sub_100050C08((unint64_t *)&qword_1000FDA10, (void (*)(uint64_t))type metadata accessor for ApiAgentError);
      uint64_t v38 = swift_allocError();
      sub_100050C90();
      sub_10004F138(a4, v34, v36, v38);
      swift_errorRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a6 = swift_allocError();
      return sub_100050CD8();
    case 2uLL:
      uint64_t v23 = *(void *)(a1 + 16);
      uint64_t v24 = *(void *)(a1 + 24);
      sub_1000511BC();
      swift_retain();
      swift_retain();
      if (__DataStorage._bytes.getter() && __OFSUB__(v23, __DataStorage._offset.getter())) {
        goto LABEL_23;
      }
      if (__OFSUB__(v24, v23)) {
        goto LABEL_21;
      }
      __DataStorage._length.getter();
      a6 = v40;
      uint64_t v26 = static String._fromUTF8Repairing(_:)();
      unint64_t v28 = v27;
      swift_release();
      swift_release();
      sub_10005113C();
      goto LABEL_15;
    default:
      goto LABEL_14;
  }
}

uint64_t sub_10004F138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100008B98(v4 + 56, (uint64_t)v15);
  sub_100005EA0(v15, v15[3]);
  if (a3)
  {
    if (a4) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  sub_100005E5C((uint64_t *)&unk_1000FC300);
  sub_100027288();
  Dictionary.init(dictionaryLiteral:)();
  if (!a4) {
    goto LABEL_6;
  }
LABEL_3:
  swift_bridgeObjectRetain();
  swift_errorRetain();
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  sub_100005E5C(&qword_1000FD968);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
  }
LABEL_7:
  sub_1000BC820();
  uint64_t v8 = v7;
  __int16 v10 = v9;
  swift_bridgeObjectRelease();
  sub_10001C16C((uint64_t)&v12, &qword_1000FD800);
  sub_1000BB028(v8, v10 & 0x101);
  swift_bridgeObjectRelease();
  return sub_100006178((uint64_t)v15);
}

uint64_t sub_10004F2A4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_10004E878(a4);
  sub_100050D70(a5, a6, &qword_1000FDA00);
  long long v12 = (int *)sub_100005E5C(&qword_1000FC0B0);
  uint64_t v13 = a6 + v12[7];
  type metadata accessor for URLRequest();
  sub_1000098E8();
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, a3);
  uint64_t v15 = (uint64_t *)(a6 + v12[10]);
  *uint64_t v15 = a1;
  v15[1] = a2;
  *(void *)(a6 + v12[8]) = a4;
  *(_OWORD *)(a6 + v12[9]) = xmmword_1000CABB0;
  id v16 = a4;

  return sub_10001DF8C(a1, a2);
}

uint64_t sub_10004F398(void (*a1)(uint64_t *), void (*a2)(uint64_t *), id *a3, uint64_t a4)
{
  id v67 = a2;
  uint64_t v66 = a1;
  uint64_t v60 = sub_100005E5C((uint64_t *)&unk_1000FDA40);
  sub_1000098E8();
  __chkstk_darwin(v7);
  sub_100009864();
  uint64_t v59 = type metadata accessor for ApiAgentError();
  sub_1000098E8();
  __chkstk_darwin(v8);
  sub_1000098F8();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for URLRequest();
  sub_100009830();
  uint64_t v58 = v13;
  __chkstk_darwin(v14);
  uint64_t v63 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v61 = (char *)&v54 - v17;
  uint64_t v62 = v18;
  __chkstk_darwin(v19);
  unint64_t v21 = (char *)&v54 - v20;
  sub_100005E5C(&qword_1000FCC40);
  sub_1000098E8();
  __chkstk_darwin(v22);
  sub_1000098F8();
  unint64_t v25 = (char *)(v24 - v23);
  uint64_t v26 = (uint64_t)a3[4];
  unint64_t v27 = a3[5];
  uint64_t v64 = a3;
  sub_100005EA0(a3 + 1, v26);
  unint64_t v28 = (void (*)(uint64_t, uint64_t, void *))v27[1];
  uint64_t v65 = a4;
  v28(a4, v26, v27);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100050CD8();
    sub_100050C08((unint64_t *)&qword_1000FDA10, (void (*)(uint64_t))type metadata accessor for ApiAgentError);
    uint64_t v29 = swift_allocError();
    sub_100050C90();
    *uint64_t v4 = v29;
    swift_storeEnumTagMultiPayload();
    v66(v4);
    sub_10001C16C((uint64_t)v4, (uint64_t *)&unk_1000FDA40);
    return sub_1000509F0(v11, (void (*)(void))type metadata accessor for ApiAgentError);
  }
  else
  {
    uint64_t v55 = *(void **)&v25[*(int *)(sub_100005E5C(&qword_1000FDA50) + 48)];
    uint64_t v31 = v58;
    uint64_t v32 = *(void (**)(unint64_t, char *, uint64_t))(v58 + 32);
    uint64_t v57 = v58 + 32;
    uint64_t v56 = v32;
    v32((unint64_t)v21, v25, v12);
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_10000929C(v33, (uint64_t)qword_10010A520);
    uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
    uint64_t v35 = v61;
    uint64_t v59 = (uint64_t)v21;
    uint64_t v54 = v34;
    v34(v61, (uint64_t)v21, v12);
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v60 = v12;
      uint64_t v39 = (uint8_t *)v38;
      __src[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 136315138;
      sub_100050C08(&qword_1000FDA58, (void (*)(uint64_t))&type metadata accessor for URLRequest);
      uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
      aBlock[0] = sub_100017098(v40, v41, __src);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v61 = *(char **)(v31 + 8);
      ((void (*)(char *, uint64_t))v61)(v35, v60);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Request: %s", v39, 0xCu);
      swift_arrayDestroy();
      sub_10001C2C8();
      uint64_t v12 = v60;
      sub_10001C2C8();
    }
    else
    {
      uint64_t v61 = *(char **)(v31 + 8);
      ((void (*)(char *, uint64_t))v61)(v35, v12);
    }

    uint64_t v42 = (uint64_t)v64;
    uint64_t v43 = v55;
    id v44 = [*v64 dataTaskPromiseWithRequestPromise:v55];
    sub_100008218(v42, (uint64_t)__src);
    uint64_t v45 = v63;
    uint64_t v46 = v59;
    v54(v63, v59, v12);
    sub_100008B98(v65, (uint64_t)v69);
    uint64_t v47 = v12;
    unint64_t v48 = (*(unsigned __int8 *)(v31 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    unint64_t v49 = (v62 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v50 = swift_allocObject();
    memcpy((void *)(v50 + 16), __src, 0x60uLL);
    v56(v50 + v48, v45, v47);
    sub_100008CAC(v69, v50 + v49);
    uint64_t v51 = (void (**)(uint64_t *))(v50 + ((v49 + 47) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v52 = v67;
    *uint64_t v51 = v66;
    v51[1] = v52;
    aBlock[4] = sub_100050B30;
    aBlock[5] = v50;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001D164;
    aBlock[3] = &unk_1000F1500;
    uint64_t v53 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v44 addFinishBlock:v53];
    _Block_release(v53);

    return ((uint64_t (*)(uint64_t, uint64_t))v61)(v46, v47);
  }
}

uint64_t sub_10004FAE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t *), uint64_t a7)
{
  uint64_t v97 = a7;
  uint64_t v98 = a6;
  uint64_t v95 = a4;
  uint64_t v92 = a3;
  uint64_t v90 = type metadata accessor for ApiAgentError();
  __chkstk_darwin(v90);
  uint64_t v91 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100005E5C((uint64_t *)&unk_1000FDA40);
  __chkstk_darwin(v96);
  uint64_t v12 = (uint64_t *)((char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v99 = type metadata accessor for ApiRequestMetrics();
  __chkstk_darwin(v99);
  uint64_t v13 = sub_100005E5C(&qword_1000FDA00);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v87 - v17;
  *(void *)&double v20 = __chkstk_darwin(v19).n128_u64[0];
  uint64_t v22 = (char *)&v87 - v21;
  id v23 = [a1 response:v20];
  os_log_t v93 = a5;
  id v94 = v23;
  if (v23)
  {
    id v24 = v23;
    unint64_t v25 = (void *)sub_10004E788();

    if (v25)
    {
      sub_100050C90();

      sub_100050CD8();
      uint64_t v26 = 0;
      goto LABEL_13;
    }
  }
  if (a1)
  {
    id v27 = [a1 taskMetrics];
    if (v27)
    {
      unint64_t v28 = v27;
      id v29 = [v27 transactionMetrics];

      sub_100050C50();
      unint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v30 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v31)
        {
LABEL_8:
          BOOL v32 = __OFSUB__(v31, 1);
          uint64_t v33 = v31 - 1;
          if (v32)
          {
            __break(1u);
          }
          else
          {
            sub_100097604(v33, (v30 & 0xC000000000000001) == 0, v30);
            if ((v30 & 0xC000000000000001) == 0)
            {
              id v34 = *(id *)(v30 + 8 * v33 + 32);
LABEL_11:
              uint64_t v35 = v34;
              swift_bridgeObjectRelease();
              id v36 = v35;
              sub_10004D5E0(v36, (uint64_t)v22);
              uint64_t v37 = v99;
              sub_1000082C0((uint64_t)v22, 0, 1, v99);

LABEL_14:
              id v38 = [a1 data];
              uint64_t v39 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v41 = v40;

              uint64_t v42 = v93[3];
              uint64_t v43 = v93[4];
              sub_100005EA0(v93, v42);
              (*(void (**)(uint64_t, uint64_t))(v43 + 16))(v42, v43);
              sub_100050D70((uint64_t)v22, (uint64_t)v18, &qword_1000FDA00);
              if (sub_1000082E8((uint64_t)v18, 1, v37) == 1)
              {
                sub_10001C16C((uint64_t)v18, &qword_1000FDA00);
                uint64_t v44 = 0;
              }
              else
              {
                sub_1000BBB94();
                uint64_t v44 = v45;
                sub_1000509F0((uint64_t)v18, (void (*)(void))type metadata accessor for ApiRequestMetrics);
              }
              uint64_t v46 = v12;
              sub_100008B98(v92 + 56, (uint64_t)v104);
              sub_100005EA0(v104, v105);
              unint64_t v89 = v22;
              if (!v44)
              {
                sub_100005E5C((uint64_t *)&unk_1000FC300);
                sub_100027288();
                Dictionary.init(dictionaryLiteral:)();
              }
              uint64_t v103 = 0;
              long long v101 = 0u;
              long long v102 = 0u;
              swift_bridgeObjectRetain();
              uint64_t v55 = v95;
              sub_1000BC820();
              uint64_t v57 = v56;
              __int16 v59 = v58;
              swift_bridgeObjectRelease();
              sub_10001C16C((uint64_t)&v101, &qword_1000FD800);
              sub_1000BB028(v57, v59 & 0x101);
              swift_bridgeObjectRelease();
              sub_100006178((uint64_t)v104);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v60 = (int *)sub_100005E5C(&qword_1000FC0D8);
              uint64_t v61 = (char *)v46 + v60[12];
              uint64_t v62 = v60[16];
              uint64_t v63 = (uint64_t)v46 + v60[20];
              *uint64_t v46 = v39;
              v46[1] = v41;
              uint64_t v64 = type metadata accessor for URLRequest();
              (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 16))(v61, v55, v64);
              id v65 = v94;
              *(uint64_t *)((char *)v46 + v62) = (uint64_t)v94;
              uint64_t v22 = v89;
              sub_100050D70((uint64_t)v89, v63, &qword_1000FDA00);
              swift_storeEnumTagMultiPayload();
              id v66 = v65;
              sub_10001DF8C(v39, v41);
              v98(v46);
              sub_10000835C(v39, v41);

              sub_10001C16C((uint64_t)v46, (uint64_t *)&unk_1000FDA40);
              return sub_10001C16C((uint64_t)v22, &qword_1000FDA00);
            }
          }
          id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v31) {
          goto LABEL_8;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v37 = v99;
      sub_1000082C0((uint64_t)v22, 1, 1, v99);
      goto LABEL_14;
    }
  }
  uint64_t v26 = 1;
LABEL_13:
  uint64_t v37 = v99;
  sub_1000082C0((uint64_t)v22, v26, 1, v99);
  if (a1) {
    goto LABEL_14;
  }
  if (!a2)
  {
    uint64_t v67 = sub_100005E5C(&qword_1000FDA08);
    uint64_t v68 = (uint64_t)&v91[*(int *)(v67 + 48)];
    *uint64_t v91 = 0;
    sub_100050D70((uint64_t)v22, v68, &qword_1000FDA00);
    swift_storeEnumTagMultiPayload();
    uint64_t v69 = v99;
    uint64_t v47 = v12;
LABEL_30:
    sub_100005E5C((uint64_t *)&unk_1000FC300);
    sub_100027288();
    uint64_t v73 = Dictionary.init(dictionaryLiteral:)();
    goto LABEL_31;
  }
  swift_errorRetain();
  uint64_t v47 = v12;
  if (qword_1000FBDC8 != -1) {
    swift_once();
  }
  uint64_t v48 = type metadata accessor for Logger();
  sub_10000929C(v48, (uint64_t)qword_10010A520);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.error.getter();
  os_log_t v88 = v49;
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v51 = 138412290;
    swift_errorRetain();
    uint64_t v53 = _swift_stdlib_bridgeErrorToNSError();
    v104[0] = v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v52 = v53;
    swift_errorRelease();
    swift_errorRelease();
    os_log_t v54 = v88;
    _os_log_impl((void *)&_mh_execute_header, v88, v50, "ApiAgent Error: %@", v51, 0xCu);
    sub_100005E5C((uint64_t *)&unk_1000FDA60);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v69 = v99;
  uint64_t v70 = sub_100005E5C(&qword_1000FDA08);
  uint64_t v71 = (uint64_t)&v91[*(int *)(v70 + 48)];
  *uint64_t v91 = 0;
  sub_100050D70((uint64_t)v22, v71, &qword_1000FDA00);
  swift_storeEnumTagMultiPayload();
  v104[0] = a2;
  swift_errorRetain();
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  type metadata accessor for AMSError(0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_30;
  }
  id v72 = (void *)v101;
  uint64_t v73 = sub_1000BC67C();

LABEL_31:
  uint64_t v74 = v93[3];
  uint64_t v75 = v93[4];
  sub_100005EA0(v93, v74);
  (*(void (**)(uint64_t, uint64_t))(v75 + 16))(v74, v75);
  sub_100050D70((uint64_t)v22, (uint64_t)v15, &qword_1000FDA00);
  if (sub_1000082E8((uint64_t)v15, 1, v69) == 1)
  {
    sub_10001C16C((uint64_t)v15, &qword_1000FDA00);
    sub_100005E5C((uint64_t *)&unk_1000FC300);
    sub_100027288();
    uint64_t v76 = Dictionary.init(dictionaryLiteral:)();
  }
  else
  {
    sub_1000BBB94();
    uint64_t v76 = v77;
    sub_1000509F0((uint64_t)v15, (void (*)(void))type metadata accessor for ApiRequestMetrics);
  }
  uint64_t v78 = v92;
  sub_1000506E0(v76, v73);
  sub_100050C08((unint64_t *)&qword_1000FDA10, (void (*)(uint64_t))type metadata accessor for ApiAgentError);
  uint64_t v79 = swift_allocError();
  sub_100050C90();
  sub_100008B98(v78 + 56, (uint64_t)v104);
  sub_100005EA0(v104, v105);
  uint64_t v100 = v79;
  swift_errorRetain();
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  sub_100005E5C(&qword_1000FD968);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v103 = 0;
    long long v101 = 0u;
    long long v102 = 0u;
  }
  sub_1000BC820();
  uint64_t v81 = v80;
  __int16 v83 = v82;
  sub_10001C16C((uint64_t)&v101, &qword_1000FD800);
  sub_1000BB028(v81, v83 & 0x101);
  swift_bridgeObjectRelease();
  sub_100006178((uint64_t)v104);
  swift_errorRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v84 = swift_allocError();
  uint64_t v85 = (uint64_t)v91;
  sub_100050C90();
  *uint64_t v47 = v84;
  swift_storeEnumTagMultiPayload();
  v98(v47);

  sub_10001C16C((uint64_t)v47, (uint64_t *)&unk_1000FDA40);
  sub_1000509F0(v85, (void (*)(void))type metadata accessor for ApiAgentError);
  return sub_10001C16C((uint64_t)v22, &qword_1000FDA00);
}

uint64_t sub_1000506E0(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_100050778(a1, (uint64_t)sub_1000C023C, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_10005076C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_errorRetain();
}

uint64_t sub_100050778(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  sub_1000C15EC(&v28);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000C17CC((uint64_t)v25);
  if (v27 == 1)
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    sub_10001BB94();
    return swift_release();
  }
  while (1)
  {
    char v7 = v25[0];
    sub_100050D20((uint64_t)&v26, (uint64_t)v24, (uint64_t *)&unk_1000FC300);
    uint64_t v8 = *a5;
    unint64_t v10 = sub_100017664(v7);
    uint64_t v11 = *(void *)(v8 + 16);
    BOOL v12 = (v9 & 1) == 0;
    uint64_t v13 = v11 + v12;
    if (__OFADD__(v11, v12)) {
      break;
    }
    char v14 = v9;
    if (*(void *)(v8 + 24) >= v13)
    {
      if (a4)
      {
        if (v9) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_100005E5C(&qword_1000FDA90);
        _NativeDictionary.copy()();
        if (v14) {
          goto LABEL_9;
        }
      }
    }
    else
    {
      sub_1000C07CC(v13, a4 & 1);
      unint64_t v15 = sub_100017664(v7);
      if ((v14 & 1) != (v16 & 1)) {
        goto LABEL_17;
      }
      unint64_t v10 = v15;
      if (v14)
      {
LABEL_9:
        sub_100050D70(*(void *)(*a5 + 56) + 32 * v10, (uint64_t)v22, (uint64_t *)&unk_1000FC300);
        sub_100050D70((uint64_t)v22, (uint64_t)v23, (uint64_t *)&unk_1000FC300);
        sub_10001C16C((uint64_t)v22, (uint64_t *)&unk_1000FC300);
        sub_10001C16C((uint64_t)v24, (uint64_t *)&unk_1000FC300);
        sub_100050DC0((uint64_t)v23, *(void *)(*a5 + 56) + 32 * v10);
        goto LABEL_13;
      }
    }
    uint64_t v17 = (void *)*a5;
    *(void *)(*a5 + 8 * (v10 >> 6) + 64) |= 1 << v10;
    *(unsigned char *)(v17[6] + v10) = v7;
    sub_100050D20((uint64_t)v24, v17[7] + 32 * v10, (uint64_t *)&unk_1000FC300);
    uint64_t v18 = v17[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_16;
    }
    long long v17[2] = v20;
LABEL_13:
    sub_1000C17CC((uint64_t)v25);
    a4 = 1;
    if (v27 == 1) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1000509B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._fromUTF8Repairing(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000509F0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1000098E8();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100050A48()
{
  type metadata accessor for URLRequest();
  sub_100009830();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = (*(void *)(v4 + 64) + ((v5 + 112) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8;

  sub_100006178(v0 + 24);
  swift_unknownObjectRelease();
  sub_100006178(v0 + 72);
  sub_10000C580();
  v8();
  sub_100006178(v0 + v7);
  swift_release();

  return _swift_deallocObject(v0, ((v7 + 47) & 0xFFFFFFFFFFFFFFF8) + 16, v6);
}

uint64_t sub_100050B30(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URLRequest() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v2 + v6;
  uint64_t v9 = v2 + ((v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = *(void (**)(uint64_t *))v9;
  uint64_t v11 = *(void *)(v9 + 8);

  return sub_10004FAE8(a1, a2, v2 + 16, v8, (void *)(v2 + v7), v10, v11);
}

uint64_t sub_100050BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100050C00()
{
  return swift_release();
}

uint64_t sub_100050C08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100050C50()
{
  unint64_t result = qword_1000FDA70;
  if (!qword_1000FDA70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000FDA70);
  }
  return result;
}

uint64_t sub_100050C90()
{
  uint64_t v1 = sub_1000511A8();
  v2(v1);
  sub_1000098E8();
  uint64_t v3 = sub_100043928();
  v4(v3);
  return v0;
}

uint64_t sub_100050CD8()
{
  uint64_t v1 = sub_1000511A8();
  v2(v1);
  sub_1000098E8();
  uint64_t v3 = sub_10004393C();
  v4(v3);
  return v0;
}

uint64_t sub_100050D20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100005E5C(a3);
  sub_1000098E8();
  uint64_t v4 = sub_10004393C();
  v5(v4);
  return a2;
}

uint64_t sub_100050D70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100005E5C(a3);
  sub_1000098E8();
  uint64_t v4 = sub_100043928();
  v5(v4);
  return a2;
}

uint64_t sub_100050DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005E5C((uint64_t *)&unk_1000FC300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t destroy for ApiAgent(id *a1)
{
  sub_100006178((uint64_t)(a1 + 1));
  swift_unknownObjectRelease();

  return sub_100006178((uint64_t)(a1 + 7));
}

uint64_t initializeWithCopy for ApiAgent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = a1 + 8;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  id v10 = v4;
  v9(v5, v6, v8);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v11 = a2 + 56;
  long long v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v12;
  uint64_t v13 = v12;
  char v14 = **(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8);
  swift_unknownObjectRetain();
  v14(a1 + 56, v11, v13);
  return a1;
}

uint64_t assignWithCopy for ApiAgent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  sub_100008E94((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  sub_100008E94((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  return a1;
}

uint64_t assignWithTake for ApiAgent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  sub_100006178(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_unknownObjectRelease();
  sub_100006178(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for ApiAgent(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ApiAgent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ApiAgent()
{
  return &type metadata for ApiAgent;
}

uint64_t sub_10005110C(uint64_t a1, uint64_t a2)
{
  return sub_1000082C0(a1, a2, 1, v2);
}

uint64_t sub_10005113C()
{
  return sub_10000835C(v0, v1);
}

void sub_100051154(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + a1);
  *uint64_t v2 = 0;
  v2[1] = 0;
}

uint64_t sub_100051160(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100051184()
{
  return swift_bridgeObjectRelease();
}

void sub_10005119C(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 - 256);
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1000511A8()
{
  return 0;
}

uint64_t sub_1000511BC()
{
  return sub_10001DF8C(v0, v1);
}

id sub_1000511D4(uint64_t a1)
{
  uint64_t v4 = *(const char **)(v2 + 3824);
  return [v1 v4:a1];
}

void sub_1000511F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    Swift::Int v8 = v6 & ~v7;
    sub_10001C8C4();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        sub_10001C8C4();
        if (v15)
        {
          do
          {
            char v16 = (void *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            sub_10001C8C4();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

void sub_100051308()
{
  sub_1000098B8();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for Sport();
  sub_10000C568();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10000987C();
  if (*(void *)(v2 + 16))
  {
    sub_100060508(&qword_1000FC880, 255, (void (*)(uint64_t))&type metadata accessor for Sport);
    uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v9 = v7 & ~v8;
    uint64_t v10 = v2 + 56;
    if ((*(void *)(v2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      uint64_t v16 = ~v8;
      uint64_t v17 = v2;
      uint64_t v11 = v5 + 16;
      long long v12 = *(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = *(void *)(v11 + 56);
      do
      {
        v12(v0, *(void *)(v17 + 48) + v13 * v9, v3);
        sub_100060508(&qword_1000FC888, 255, (void (*)(uint64_t))&type metadata accessor for Sport);
        sub_100061A58();
        char v14 = dispatch thunk of static Equatable.== infix(_:_:)();
        sub_100061A40();
        v15();
        if (v14) {
          break;
        }
        unint64_t v9 = (v9 + 1) & v16;
      }
      while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
  }
  sub_1000098A0();
}

uint64_t sub_1000514D8(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && (Hasher.init(_seed:)(),
        sub_10006AF64(),
        Swift::Int v4 = Hasher._finalize()(),
        uint64_t v5 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v6 = v4 & ~v5,
        ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0))
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = a1;
    while (1)
    {
      unint64_t v9 = 0x80000001000D04C0;
      unint64_t v10 = 0xD000000000000010;
      switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
      {
        case 1:
          unint64_t v9 = 0x80000001000D04E0;
          break;
        case 2:
          unint64_t v10 = 0xD000000000000011;
          unint64_t v9 = 0x80000001000D0500;
          break;
        case 3:
          sub_100061934();
          break;
        default:
          break;
      }
      unint64_t v11 = 0x80000001000D04C0;
      unint64_t v12 = 0xD000000000000010;
      switch(v8)
      {
        case 1:
          unint64_t v11 = 0x80000001000D04E0;
          break;
        case 2:
          unint64_t v12 = 0xD000000000000011;
          unint64_t v11 = 0x80000001000D0500;
          break;
        case 3:
          unint64_t v12 = 0x6C7070612E6D6F63;
          unint64_t v11 = 0xEC00000076742E65;
          break;
        default:
          break;
      }
      if (v10 == v12 && v9 == v11) {
        break;
      }
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        unint64_t v6 = (v6 + 1) & v7;
        if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
          continue;
        }
      }
      return v14 & 1;
    }
    swift_bridgeObjectRelease_n();
    char v14 = 1;
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_100051708(uint64_t a1)
{
  uint64_t v29 = type metadata accessor for SportsActivityAttributes();
  uint64_t v3 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v28 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = _swiftEmptyArrayStorage;
  if (!v5) {
    return (uint64_t)v6;
  }
  uint64_t v24 = v1;
  id v36 = _swiftEmptyArrayStorage;
  sub_100017F90(0, v5, 0);
  unint64_t v6 = v36;
  uint64_t result = sub_100028E74(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    unint64_t v9 = result;
    if (result < 1 << *(unsigned char *)(a1 + 32))
    {
      uint64_t v10 = a1 + 64;
      unint64_t v11 = (void (**)(char *, uint64_t))(v3 + 8);
      uint64_t v26 = a1;
      uint64_t v27 = v3 + 8;
      uint64_t v25 = a1 + 64;
      unint64_t v12 = v28;
      uint64_t v13 = v11;
      while ((*(void *)(v10 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
      {
        if (v8 != *(_DWORD *)(a1 + 36)) {
          goto LABEL_18;
        }
        uint64_t v31 = v8;
        unint64_t v32 = v9 >> 6;
        int64_t v30 = v5;
        swift_retain();
        Activity.attributes.getter();
        uint64_t v14 = SportsActivityAttributes.canonicalId.getter();
        uint64_t v34 = v15;
        uint64_t v35 = v14;
        uint64_t v16 = *v13;
        uint64_t v17 = v29;
        (*v13)(v12, v29);
        Activity.attributes.getter();
        uint64_t v33 = SportsActivityAttributes.bundleId.getter();
        uint64_t v19 = v18;
        v16(v12, v17);
        uint64_t result = swift_release();
        id v36 = v6;
        unint64_t v21 = v6[2];
        unint64_t v20 = v6[3];
        if (v21 >= v20 >> 1)
        {
          uint64_t result = (uint64_t)sub_100017F90((char *)(v20 > 1), v21 + 1, 1);
          unint64_t v6 = v36;
        }
        void v6[2] = v21 + 1;
        uint64_t v22 = &v6[4 * v21];
        uint64_t v23 = v34;
        v22[4] = v35;
        void v22[5] = v23;
        v22[6] = v33;
        v22[7] = v19;
        a1 = v26;
        if ((uint64_t)v9 >= -(-1 << *(unsigned char *)(v26 + 32))) {
          goto LABEL_19;
        }
        uint64_t v10 = v25;
        if ((*(void *)(v25 + 8 * v32) & (1 << v9)) == 0) {
          goto LABEL_20;
        }
        if (v31 != *(_DWORD *)(v26 + 36)) {
          goto LABEL_21;
        }
        uint64_t result = _HashTable.occupiedBucket(after:)();
        int64_t v5 = v30 - 1;
        if (v30 == 1) {
          return (uint64_t)v6;
        }
        unint64_t v9 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          uint64_t v8 = *(unsigned int *)(a1 + 36);
          if (result < 1 << *(unsigned char *)(a1 + 32)) {
            continue;
          }
        }
        goto LABEL_22;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1000519E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = a2 - result;
  if (__OFSUB__(a2, result)) {
    goto LABEL_18;
  }
  uint64_t v7 = v5;
  if (v6)
  {
    uint64_t v11 = result;
    uint64_t v18 = _swiftEmptyArrayStorage;
    unint64_t v12 = &v18;
    uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
    if (v6 < 0)
    {
LABEL_19:
      __break(1u);
      return result;
    }
    int v13 = a5 & 1;
    uint64_t v14 = v11;
    while (a2 != v14)
    {
      uint64_t v16 = v14;
      sub_10005E458((uint64_t)&v16, a3, a4, v13, &v17);
      if (v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        return (uint64_t)v12;
      }
      uint64_t v7 = 0;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      unint64_t v12 = &v18;
      uint64_t result = specialized ContiguousArray._endMutation()();
      if (a2 < v11) {
        goto LABEL_16;
      }
      if (v14 >= a2) {
        goto LABEL_17;
      }
      if (a2 == ++v14)
      {
        unint64_t v12 = v18;
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  unint64_t v12 = _swiftEmptyArrayStorage;
LABEL_12:
  swift_bridgeObjectRelease();
  return (uint64_t)v12;
}

uint64_t sub_100051B58(uint64_t a1)
{
  uint64_t v42 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  unint64_t v41 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for SportsActivityAttributes();
  uint64_t v5 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v39 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v38 = (char *)v30 - v8;
  uint64_t v9 = type metadata accessor for SportsActivityManagedContext();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  int v13 = _swiftEmptyArrayStorage;
  if (!v12) {
    return (uint64_t)v13;
  }
  v30[1] = v1;
  unint64_t v49 = _swiftEmptyArrayStorage;
  sub_100017FB0();
  int v13 = v49;
  uint64_t result = sub_100028E74(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    unint64_t v16 = result;
    if (result < 1 << *(unsigned char *)(a1 + 32))
    {
      uint64_t v17 = a1 + 64;
      uint64_t v33 = (void (**)(char *, char *, uint64_t))(v3 + 32);
      uint64_t v34 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v35 = (uint64_t *)v11;
      uint64_t v31 = a1 + 64;
      uint64_t v32 = a1;
      uint64_t v18 = v41;
      while ((*(void *)(v17 + 8 * (v16 >> 6)) & (1 << v16)) != 0)
      {
        if (v15 != *(_DWORD *)(a1 + 36)) {
          goto LABEL_18;
        }
        uint64_t v45 = 1 << v16;
        unint64_t v46 = v16 >> 6;
        uint64_t v43 = v12;
        uint64_t v44 = v15;
        swift_retain();
        uint64_t v19 = v38;
        uint64_t v48 = v13;
        Activity.attributes.getter();
        uint64_t v20 = SportsActivityAttributes.canonicalId.getter();
        uint64_t v47 = v21;
        uint64_t v22 = *v34;
        uint64_t v23 = v19;
        uint64_t v24 = v40;
        (*v34)(v23, v40);
        uint64_t v25 = v39;
        Activity.attributes.getter();
        SportsActivityAttributes.createdDate.getter();
        int v13 = v48;
        uint64_t v26 = v24;
        uint64_t v27 = v35;
        v22(v25, v26);
        uint64_t v28 = v47;
        *uint64_t v27 = v20;
        v27[1] = v28;
        (*v33)((char *)v27 + *(int *)(v37 + 20), v18, v42);
        swift_release();
        unint64_t v49 = v13;
        unint64_t v29 = v13[2];
        if (v29 >= v13[3] >> 1)
        {
          sub_100017FB0();
          int v13 = v49;
        }
        v13[2] = v29 + 1;
        uint64_t result = sub_100060F24((uint64_t)v27, (uint64_t)v13+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v29);
        a1 = v32;
        if ((uint64_t)v16 >= -(-1 << *(unsigned char *)(v32 + 32))) {
          goto LABEL_19;
        }
        uint64_t v17 = v31;
        if ((*(void *)(v31 + 8 * v46) & v45) == 0) {
          goto LABEL_20;
        }
        if (v44 != *(_DWORD *)(v32 + 36)) {
          goto LABEL_21;
        }
        uint64_t result = _HashTable.occupiedBucket(after:)();
        uint64_t v12 = v43 - 1;
        if (v43 == 1) {
          return (uint64_t)v13;
        }
        unint64_t v16 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          uint64_t v15 = *(unsigned int *)(a1 + 36);
          if (result < 1 << *(unsigned char *)(a1 + 32)) {
            continue;
          }
        }
        goto LABEL_22;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_100051F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100051FE8(a1, a2, a3);
}

uint64_t sub_100051FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100051FE8(a1, a2, a3);
}

uint64_t sub_100051FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  if (sub_1000082E8(a1, 1, v6) == 1)
  {
    sub_1000095CC(a1, &qword_1000FC940);
  }
  else
  {
    TaskPriority.rawValue.getter();
    sub_100009894();
    v7();
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_10005214C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  if (sub_1000082E8(a1, 1, v6) == 1)
  {
    sub_1000095CC(a1, &qword_1000FC940);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  sub_100005E5C(&qword_1000FDE30);
  return swift_task_create();
}

unint64_t sub_1000522C4()
{
  sub_100061934();
  sub_100061AC8();
  uint64_t v11 = &type metadata for TVAppFeatureFlags;
  unint64_t v12 = sub_1000092D4();
  char v1 = isFeatureEnabled(_:)();
  sub_100006178((uint64_t)v10);
  if (v1)
  {
    unint64_t v0 = 0xD000000000000010;
    type metadata accessor for ContainerConstants();
    static ContainerConstants.defaultSuiteName.getter();
    id v2 = objc_allocWithZone((Class)NSUserDefaults);
    uint64_t v3 = sub_100061A64();
    id v5 = sub_10005F5B8(v3, v4);
    if (v5)
    {
      uint64_t v6 = v5;
      static ContainerConstants.liveActivitiesTargetAppKey.getter();
      NSString v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v8 = [v6 stringForKey:v7];

      if (v8)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        v13._countAndFlagsBits = sub_100061874();
        switch(sub_100052DB4(v13))
        {
          case 2u:
            unint64_t v0 = 0xD000000000000011;
            break;
          case 3u:
            sub_100061AC8();
            sub_100061934();
            break;
          default:
            break;
        }
      }
    }
  }
  return v0;
}

uint64_t sub_100052458(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000EF2A8, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000524AC(char a1)
{
  type metadata accessor for Date();
  sub_10000C568();
  __chkstk_darwin(v3);
  sub_100009864();
  sub_100005E5C(&qword_1000FDEC0);
  sub_10000C568();
  __chkstk_darwin(v4);
  sub_10000C58C();
  sub_100005E5C(&qword_1000FDEC8);
  sub_10000C568();
  __chkstk_darwin(v5);
  sub_10000C58C();
  sub_100005E5C(&qword_1000FDED0);
  sub_10000C568();
  __chkstk_darwin(v6);
  sub_10000C58C();
  sub_100005E5C(&qword_1000FDED8);
  sub_10000C568();
  __chkstk_darwin(v7);
  sub_10000C58C();
  uint64_t v40 = v1;
  sub_100061880();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_100051708(v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  uint64_t v39 = v9;
  if (v10)
  {
    char v38 = a1;
    uint64_t v48 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v12 = v9 + 56;
    while (1)
    {
      Swift::String v13 = *(uint64_t **)(v12 - 24);
      uint64_t v14 = *(void *)(v12 - 16);
      uint64_t v15 = qword_1000FBD60;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15 != -1) {
        swift_once();
      }
      sub_10002A3E0(qword_10010A498 + 24, (uint64_t)v42);
      sub_100008B98((uint64_t)v42, (uint64_t)v45);
      uint64_t v16 = v42[5];
      sub_100008B98((uint64_t)&v43, (uint64_t)&v46);
      sub_100008B98((uint64_t)&v44, (uint64_t)v47);
      v45[5] = v16;
      v47[5] = 0xD000000000000011;
      v47[6] = 0x80000001000D0580;
      v47[7] = v13;
      v47[8] = v14;
      swift_bridgeObjectRetain();
      swift_retain();
      Date.init()();
      uint64_t result = Date.timeIntervalSince1970.getter();
      double v19 = v18 * 1000.0;
      if ((~*(void *)&v19 & 0x7FF0000000000000) == 0) {
        break;
      }
      if (v19 <= -1.0) {
        goto LABEL_12;
      }
      if (v19 >= 1.84467441e19) {
        goto LABEL_13;
      }
      unint64_t v20 = (unint64_t)v19;
      sub_100009894();
      v21();
      v47[9] = v20;
      uint64_t v22 = (objc_class *)type metadata accessor for ActivityAuthorization();
      id v23 = [objc_allocWithZone(v22) init];
      unint64_t v24 = sub_1000522C4();
      v41[0] = v23;
      unint64_t v25 = v24;
      uint64_t v27 = v26;
      v41[3] = v22;
      v41[4] = &off_1000F15C8;
      type metadata accessor for ActivityCapUtility();
      uint64_t v28 = (void *)sub_100061A1C();
      sub_10000A014((uint64_t)v41, (uint64_t)v22);
      sub_10000C568();
      __chkstk_darwin(v29);
      sub_10000987C();
      (*(void (**)(uint64_t *))(v30 + 16))(v13);
      uint64_t v31 = *v13;
      v28[5] = v22;
      void v28[6] = &off_1000F15C8;
      _OWORD v28[2] = v31;
      v28[7] = v25;
      v28[8] = v27;
      sub_100006178((uint64_t)v41);
      v47[10] = v28;
      sub_10002A60C((uint64_t)v42);
      sub_100034CF8();
      sub_100037D24((uint64_t)v45);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v12 += 32;
      if (!--v10)
      {
        uint64_t v11 = v48;
        a1 = v38;
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
LABEL_10:
    v42[0] = v11;
    sub_100005E5C(&qword_1000FCEE8);
    sub_100005E5C(&qword_1000FDEE0);
    sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
    sub_10000953C(&qword_1000FDEE8, &qword_1000FDEE0);
    Publishers.MergeMany.init<A>(_:)();
    sub_10000953C(&qword_1000FDEF0, &qword_1000FDEC0);
    Publisher.collect()();
    sub_100009894();
    v32();
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v39;
    *(unsigned char *)(v33 + 24) = a1 & 1;
    static Subscribers.Demand.unlimited.getter();
    sub_10000953C(&qword_1000FDEF8, &qword_1000FDEC8);
    Publisher.flatMap<A, B>(maxPublishers:_:)();
    swift_release();
    sub_100009894();
    v34();
    sub_10000953C(&qword_1000FDF00, &qword_1000FDED0);
    Publisher.collect()();
    sub_100009894();
    v35();
    uint64_t v36 = swift_allocObject();
    *(unsigned char *)(v36 + 16) = a1 & 1;
    *(void *)(v36 + 24) = v40;
    sub_10000953C(&qword_1000FDF08, &qword_1000FDED8);
    swift_retain();
    Publisher.sink(receiveCompletion:receiveValue:)();
    swift_release();
    sub_100009894();
    v37();
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t *sub_100052C84()
{
  if (qword_1000FBD90 != -1) {
    swift_once();
  }
  return &qword_10010A4D0;
}

uint64_t sub_100052CD0(char a1)
{
  if (a1) {
    return 1751607656;
  }
  else {
    return 7827308;
  }
}

unsigned char *sub_100052CF8()
{
  uint64_t result = sub_10005FF7C((uint64_t)&off_1000EF2F8);
  qword_10010A4C8 = (uint64_t)result;
  return result;
}

unint64_t sub_100052D20(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x6C7070612E6D6F63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100052DB4(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000EEE90, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_100052E00(unsigned __int8 *a1, char *a2)
{
  return sub_10006A3A0(*a1, *a2);
}

Swift::Int sub_100052E0C()
{
  return sub_10006AB04();
}

uint64_t sub_100052E14()
{
  return sub_10006AF64();
}

Swift::Int sub_100052E1C()
{
  return sub_10006B580();
}

unint64_t sub_100052E24@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100052DB4(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_100052E54@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100052D20(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100052E80(char *a1, char *a2)
{
  return sub_10006A31C(*a1, *a2);
}

Swift::Int sub_100052E8C()
{
  return sub_10006AB44();
}

uint64_t sub_100052E94()
{
  return sub_10006AF08();
}

Swift::Int sub_100052E9C()
{
  return sub_10006B600();
}

uint64_t sub_100052EA4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100052458(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100052ED4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100052CD0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t ActivityState.description.getter()
{
  uint64_t v0 = type metadata accessor for ActivityState();
  sub_10000C568();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1000098F8();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_100061A64();
  v8(v7);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v6, v0);
  if (v9 == enum case for ActivityState.active(_:)) {
    return 0x657669746341;
  }
  if (v9 == enum case for ActivityState.ended(_:) || v9 == enum case for ActivityState.dismissed(_:)) {
    return 0x6465646E45;
  }
  if (v9 == enum case for ActivityState.stale(_:)) {
    return 0x656C617453;
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  return 0x6E776F6E6B6E55;
}

uint64_t sub_100053068(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = (void *)a1;
  *(void *)(v1 + 16) = &_swiftEmptyDictionarySingleton;
  *(void *)(v1 + 64) = &_swiftEmptySetSingleton;
  sub_100008B98(a1, v1 + 24);
  sub_1000535B4();
  sub_100005EA0(v3, v3[3]);
  dispatch thunk of PersistentStorable.replaceActivities(activeIds:dismissedIds:)();
  if (qword_1000FBDE0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000929C(v4, (uint64_t)qword_10010A568);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    v17[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v8 = Array.description.getter();
    uint64_t v16 = v3;
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    sub_100017098(v8, v10, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v11 = Array.description.getter();
    uint64_t v12 = v2;
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    sub_100017098(v11, v14, v17);
    uint64_t v3 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v2 = v12;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "ActivityStore: initialized with active activities:%s, dismissed activities:%s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_100053A54();
  sub_100006178((uint64_t)v3);
  return v2;
}

unint64_t sub_1000535B4()
{
  uint64_t v41 = type metadata accessor for ActivityState();
  uint64_t v0 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v40 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for SportsActivityAttributes();
  uint64_t v2 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005E5C(&qword_1000FDDB0);
  unint64_t result = static Activity.activities.getter();
  unint64_t v6 = result;
  if (result >> 62)
  {
    unint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v7 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    return (unint64_t)&_swiftEmptyArrayStorage;
  }
  uint64_t v7 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v7) {
    goto LABEL_35;
  }
LABEL_3:
  if (v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v36 = (void (**)(char *, uint64_t))(v2 + 8);
    unint64_t v37 = v6 & 0xC000000000000001;
    unint64_t v9 = (uint64_t (**)(char *, uint64_t))(v0 + 88);
    int v35 = enum case for ActivityState.active(_:);
    int v32 = enum case for ActivityState.dismissed(_:);
    int v33 = enum case for ActivityState.ended(_:);
    int v31 = enum case for ActivityState.stale(_:);
    uint64_t v30 = (void (**)(char *, uint64_t))(v0 + 8);
    unint64_t v10 = &_swiftEmptyArrayStorage;
    uint64_t v34 = &_swiftEmptyArrayStorage;
    unint64_t v38 = v6;
    while (1)
    {
      if (v37) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      Activity.attributes.getter();
      uint64_t v11 = SportsActivityAttributes.canonicalId.getter();
      uint64_t v13 = v12;
      (*v36)(v4, v39);
      unint64_t v14 = v40;
      dispatch thunk of Activity.activityState.getter();
      int v15 = (*v9)(v14, v41);
      if (v15 != v35)
      {
        if (v15 == v33 || v15 == v32)
        {
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            double v19 = v34;
          }
          else
          {
            sub_10001574C();
            double v19 = v27;
          }
          unint64_t v20 = v19[2];
          if (v20 >= v19[3] >> 1)
          {
            sub_10001574C();
            double v19 = v28;
          }
          void v19[2] = v20 + 1;
          uint64_t v34 = v19;
          uint64_t v17 = (char *)&v19[2 * v20];
          goto LABEL_24;
        }
        if (v15 != v31)
        {
          swift_bridgeObjectRelease();
          if (qword_1000FBDE0 != -1) {
            swift_once();
          }
          uint64_t v21 = type metadata accessor for Logger();
          sub_10000929C(v21, (uint64_t)qword_10010A568);
          uint64_t v22 = Logger.logObject.getter();
          os_log_type_t v23 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v22, v23))
          {
            unint64_t v24 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v24 = 0;
            _os_log_impl((void *)&_mh_execute_header, v22, v23, "Unused case, this could cause serious regressions!", v24, 2u);
            swift_slowDealloc();
          }

          swift_release();
          (*v30)(v40, v41);
          goto LABEL_25;
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001574C();
        unint64_t v10 = v25;
      }
      unint64_t v16 = v10[2];
      if (v16 >= v10[3] >> 1)
      {
        sub_10001574C();
        unint64_t v10 = v26;
      }
      void v10[2] = v16 + 1;
      uint64_t v17 = (char *)&v10[2 * v16];
LABEL_24:
      *((void *)v17 + 4) = v11;
      *((void *)v17 + 5) = v13;
      swift_release();
LABEL_25:
      if (v7 == ++v8)
      {
        swift_bridgeObjectRelease();
        return (unint64_t)v10;
      }
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100053A54()
{
  uint64_t v0 = sub_100005E5C(&qword_1000FC940);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ActivityState();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005E5C(&qword_1000FDDB0);
  unint64_t result = static Activity.activities.getter();
  unint64_t v8 = result;
  if (!(result >> 62))
  {
    uint64_t v9 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9) {
      goto LABEL_3;
    }
LABEL_22:
    return swift_bridgeObjectRelease();
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v9 = result;
  if (!result) {
    goto LABEL_22;
  }
LABEL_3:
  if (v9 >= 1)
  {
    uint64_t v27 = v2;
    uint64_t v10 = 0;
    unint64_t v11 = v8 & 0xC000000000000001;
    uint64_t v12 = (uint64_t (**)(char *, uint64_t))(v4 + 88);
    int v32 = enum case for ActivityState.active(_:);
    unint64_t v25 = (void (**)(char *, uint64_t))(v4 + 8);
    v24[1] = (char *)&type metadata for () + 8;
    unint64_t v29 = v8;
    uint64_t v30 = v3;
    uint64_t v28 = v9;
    uint64_t v26 = (uint64_t (**)(char *, uint64_t))(v4 + 88);
    do
    {
      if (v11)
      {
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v13 = *(void *)(v8 + 8 * v10 + 32);
        swift_retain();
      }
      dispatch thunk of Activity.activityState.getter();
      int v14 = (*v12)(v6, v3);
      if (v14 == v32)
      {
        unint64_t v15 = v11;
        uint64_t v16 = type metadata accessor for TaskPriority();
        uint64_t v17 = (uint64_t)v27;
        sub_1000082C0((uint64_t)v27, 1, 1, v16);
        double v18 = (void *)swift_allocObject();
        _OWORD v18[2] = 0;
        v18[3] = 0;
        v18[4] = v13;
        v18[5] = v31;
        int v19 = sub_1000082E8(v17, 1, v16);
        swift_retain();
        swift_retain();
        if (v19 == 1)
        {
          sub_1000095CC(v17, &qword_1000FC940);
        }
        else
        {
          TaskPriority.rawValue.getter();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v17, v16);
        }
        unint64_t v11 = v15;
        if (v18[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v20 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v22 = v21;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v20 = 0;
          uint64_t v22 = 0;
        }
        uint64_t v12 = v26;
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = &unk_1000FDE90;
        *(void *)(v23 + 24) = v18;
        if (v22 | v20)
        {
          uint64_t v33 = 0;
          uint64_t v34 = 0;
          uint64_t v35 = v20;
          uint64_t v36 = v22;
        }
        uint64_t v9 = v28;
        swift_task_create();
        swift_release();
        swift_release();
        unint64_t v8 = v29;
        uint64_t v3 = v30;
      }
      else
      {
        swift_release();
        (*v25)(v6, v3);
      }
      ++v10;
    }
    while (v9 != v10);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100053E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v6 = type metadata accessor for ActivityState();
  v5[5] = v6;
  void v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  sub_100005E5C(&qword_1000FDE60);
  v5[8] = swift_task_alloc();
  uint64_t v7 = sub_100005E5C(&qword_1000FDE68);
  v5[9] = v7;
  v5[10] = *(void *)(v7 - 8);
  v5[11] = swift_task_alloc();
  uint64_t v8 = sub_100005E5C(&qword_1000FDE70);
  v5[12] = v8;
  v5[13] = *(void *)(v8 - 8);
  v5[14] = swift_task_alloc();
  return _swift_task_switch(sub_100054014, 0, 0);
}

uint64_t sub_100054014()
{
  sub_10006179C();
  sub_10001C690();
  sub_100061944();
  Activity.ActivityStateUpdates.makeAsyncIterator()();
  uint64_t v1 = sub_100061690();
  v2(v1);
  int v3 = enum case for ActivityState.ended(_:);
  v0[34] = enum case for ActivityState.active(_:);
  v0[35] = v3;
  int v4 = enum case for ActivityState.stale(_:);
  v0[36] = enum case for ActivityState.dismissed(_:);
  v0[37] = v4;
  sub_10000953C(&qword_1000FDE78, &qword_1000FDE70);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)sub_1000617E8(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_100054124;
  sub_10006165C();
  sub_10001C898();
  return dispatch thunk of AsyncIteratorProtocol.next()(v8, v9, v10);
}

uint64_t sub_100054124()
{
  sub_10001C234();
  sub_10001C208();
  sub_10001C240();
  *int v3 = v2;
  uint64_t v4 = *v1;
  sub_100046EF8();
  *uint64_t v5 = v4;
  *(void *)(v6 + 128) = v0;
  swift_task_dealloc();
  sub_10001CAE8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_100054200()
{
  sub_10006179C();
  sub_10001C690();
  sub_1000619DC(*(void *)(v0 + 64));
  if (v18)
  {
    uint64_t v1 = sub_1000617D4();
    v2(v1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001C2E0();
    sub_10001C898();
    return v4(v3, v4, v5, v6, v7, v8, v9, v10);
  }
  else
  {
    int v12 = *(_DWORD *)(v0 + 136);
    uint64_t v13 = sub_100061748();
    v14(v13);
    uint64_t v15 = sub_10006191C();
    int v17 = v16(v15);
    if (v17 == v12) {
      goto LABEL_15;
    }
    BOOL v18 = v17 == *(_DWORD *)(v0 + 140) || v17 == *(_DWORD *)(v0 + 144);
    if (v18)
    {
      if (qword_1000FBD90 == -1) {
        goto LABEL_16;
      }
      goto LABEL_26;
    }
    if (v17 == *(_DWORD *)(v0 + 148))
    {
LABEL_15:
      if (qword_1000FBD90 == -1)
      {
LABEL_16:
        sub_10001C898();
        return _swift_task_switch(v19, v20, v21);
      }
LABEL_26:
      swift_once();
      goto LABEL_16;
    }
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_10000929C(v23, (uint64_t)qword_10010A568);
    unint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      sub_1000619FC((void *)&_mh_execute_header, v26, v27, "Unused case, this could cause serious regressions!");
      sub_10001C2C8();
    }

    uint64_t v28 = sub_1000618DC();
    v29(v28);
    sub_10000953C(&qword_1000FDE78, &qword_1000FDE70);
    uint64_t v30 = swift_task_alloc();
    uint64_t v31 = (void *)sub_1000617E8(v30);
    *uint64_t v31 = v32;
    v31[1] = sub_100054124;
    sub_10006165C();
    sub_10001C898();
    return dispatch thunk of AsyncIteratorProtocol.next()(v33, v34, v35);
  }
}

uint64_t sub_1000544D0()
{
  sub_10001C234();
  *(void *)(v0 + 16) = *(void *)(v0 + 128);
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  sub_100061804();
  return swift_willThrowTypedImpl();
}

uint64_t sub_100054540()
{
  sub_10001C234();
  sub_1000546B8();
  sub_10000953C(&qword_1000FDE78, &qword_1000FDE70);
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1000617E8(v0);
  void *v1 = v2;
  v1[1] = sub_100054124;
  uint64_t v3 = sub_10006165C();
  return dispatch thunk of AsyncIteratorProtocol.next()(v3, v4, v5);
}

uint64_t sub_1000545FC()
{
  sub_10001C234();
  sub_100054E50(*(void *)(v0 + 24));
  sub_10000953C(&qword_1000FDE78, &qword_1000FDE70);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1000617E8(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_100054124;
  uint64_t v4 = sub_10006165C();
  return dispatch thunk of AsyncIteratorProtocol.next()(v4, v5, v6);
}

void sub_1000546B8()
{
  uint64_t v1 = type metadata accessor for ActivityState();
  uint64_t v31 = *(void *)(v1 - 8);
  uint64_t v32 = v1;
  __chkstk_darwin(v1);
  uint64_t v30 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SportsActivityAttributes();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Activity.attributes.getter();
  uint64_t v7 = SportsActivityAttributes.canonicalId.getter();
  unint64_t v9 = v8;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v10 = swift_retain();
  sub_1000C0094(v10, v7, v9);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (qword_1000FBDE0 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = sub_10000929C(v11, (uint64_t)qword_10010A568);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v33 = v12;
    uint64_t v29 = v16;
    v35[0] = v16;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v17 = Activity.id.getter();
    uint64_t v34 = sub_100017098(v17, v18, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_100017098(v7, v9, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "ActivityStore: writing activity '%s' for '%s' to persistence", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  sub_100005EA0((void *)(v0 + 24), *(void *)(v0 + 48));
  dispatch thunk of PersistentStorable.writeActivity(activityId:)();
  swift_bridgeObjectRelease();
  swift_retain_n();
  swift_retain_n();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    v35[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v22 = v30;
    dispatch thunk of Activity.activityState.getter();
    uint64_t v23 = ActivityState.description.getter();
    unint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v32);
    uint64_t v34 = sub_100017098(v23, v25, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_100005E5C(&qword_1000FDDB0);
    uint64_t v26 = Dictionary.description.getter();
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_100017098(v26, v28, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "ActivityStore: write complete with state %s. Active activities: %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
}

uint64_t sub_100054E50(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ActivityState();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  __chkstk_darwin(v4);
  uint64_t v40 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SportsActivityAttributes();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Activity.attributes.getter();
  uint64_t v10 = SportsActivityAttributes.canonicalId.getter();
  unint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  sub_1000BFD00();
  swift_endAccess();
  swift_release();
  if (qword_1000FBDE0 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = sub_10000929C(v13, (uint64_t)qword_10010A568);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v44 = v14;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v45 = v10;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v43 = v2;
    v50[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v20 = Activity.id.getter();
    v53[0] = sub_100017098(v20, v21, v50);
    uint64_t v10 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    v53[0] = sub_100017098(v10, v12, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "ActivityStore: removing activity '%s' for '%s' from persistence", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    uint64_t v2 = v43;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }

  sub_100005EA0((void *)(v2 + 24), *(void *)(v2 + 48));
  dispatch thunk of PersistentStorable.removeActivity(activityId:)();
  unint64_t v46 = v12;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    v50[0] = v44;
    *(_DWORD *)uint64_t v25 = 136315650;
    LODWORD(v43) = v24;
    uint64_t v26 = Activity.id.getter();
    v53[0] = sub_100017098(v26, v27, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v25 + 12) = 2080;
    swift_bridgeObjectRetain();
    v53[0] = sub_100017098(v10, v46, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 22) = 2080;
    unint64_t v28 = v40;
    dispatch thunk of Activity.activityState.getter();
    uint64_t v29 = ActivityState.description.getter();
    uint64_t v30 = a1;
    uint64_t v31 = v2;
    unint64_t v33 = v32;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v42);
    v53[0] = sub_100017098(v29, v33, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v2 = v31;
    a1 = v30;
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v43, "ActivityStore: unregistering activity '%s' with canonicalId '%s' at state %s", (uint8_t *)v25, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    unint64_t v12 = v46;
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }

  if (qword_1000FBD60 != -1) {
    swift_once();
  }
  sub_10002A3E0(qword_10010A498 + 24, (uint64_t)v50);
  sub_100008B98((uint64_t)v50, (uint64_t)v49);
  uint64_t v34 = v50[5];
  sub_100008B98((uint64_t)&v51, (uint64_t)v48);
  sub_100008B98((uint64_t)&v52, (uint64_t)v47);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v35 = v45;
  sub_100034B0C(v49, v34, v48, v47, 0xD000000000000011, 0x80000001000D0580, v45, v12, v53);
  sub_10002A60C((uint64_t)v50);
  v50[0] = sub_100034CF8();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v35;
  *(void *)(v36 + 24) = v12;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a1;
  *(void *)(v37 + 24) = v2;
  swift_retain();
  swift_retain();
  sub_100005E5C(&qword_1000FCEE8);
  sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
  Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  swift_release();
  sub_100037D24((uint64_t)v53);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

void sub_1000557C4(void *a1, uint64_t a2, unint64_t a3)
{
  if (*a1)
  {
    swift_errorRetain();
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000929C(v5, (uint64_t)qword_10010A520);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315394;
      swift_bridgeObjectRetain();
      sub_100017098(a2, a3, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v7 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v8 = Error.localizedDescription.getter();
      sub_100017098(v8, v9, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Tempo /unregister failed for id=%s with error=%s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void sub_100055A3C()
{
  uint64_t v0 = type metadata accessor for ActivityState();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000FBDE0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000929C(v4, (uint64_t)qword_10010A568);
  swift_retain_n();
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  int v7 = v6;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v20 = v17;
    *(_DWORD *)uint64_t v8 = 136315394;
    int v16 = v7;
    dispatch thunk of Activity.activityState.getter();
    uint64_t v9 = ActivityState.description.getter();
    unint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    uint64_t v19 = sub_100017098(v9, v11, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_100005E5C(&qword_1000FDDB0);
    uint64_t v12 = Dictionary.description.getter();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_100017098(v12, v14, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, (os_log_type_t)v16, "ActivityStore: unregister complete with state %s. Active activities: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
}

uint64_t sub_100055D54()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v2 = sub_1000175F0();
  if (v3)
  {
    uint64_t v4 = *(void *)(*(void *)(v1 + 56) + 8 * v2);
    swift_retain();
  }
  else
  {
    uint64_t v4 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100055DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 72) = a4;
  *(void *)(v6 + 80) = v5;
  *(unsigned char *)(v6 + 184) = a5;
  *(void *)(v6 + 56) = a2;
  *(void *)(v6 + 64) = a3;
  *(void *)(v6 + 48) = a1;
  uint64_t v7 = type metadata accessor for Date();
  *(void *)(v6 + 88) = v7;
  *(void *)(v6 + 96) = *(void *)(v7 - 8);
  *(void *)(v6 + 104) = swift_task_alloc();
  *(void *)(v6 + 112) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ActivityUIDismissalPolicy();
  *(void *)(v6 + 120) = v8;
  *(void *)(v6 + 128) = *(void *)(v8 - 8);
  *(void *)(v6 + 136) = swift_task_alloc();
  sub_100005E5C(&qword_1000FDE80);
  *(void *)(v6 + 144) = swift_task_alloc();
  if (qword_1000FBD90 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_10010A4D0;
  *(void *)(v6 + 152) = qword_10010A4D0;
  return _swift_task_switch(sub_100055F9C, v9, 0);
}

uint64_t sub_100055F9C()
{
  sub_1000619D0();
  uint64_t v1 = sub_100055D54();
  *(void *)(v0 + 160) = v1;
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 144);
    if (*(unsigned char *)(v0 + 184))
    {
      uint64_t v18 = sub_100005E5C(&qword_1000FDDA0);
      sub_1000098E8();
      sub_100061A88();
      v19();
      uint64_t v20 = sub_10006190C();
      sub_1000082C0(v20, v21, v22, v18);
      static ActivityUIDismissalPolicy.immediate.getter();
      unint64_t v14 = (void *)sub_100061AF0();
      *(void *)(v0 + 176) = v14;
      *unint64_t v14 = v0;
      uint64_t v15 = sub_10005661C;
    }
    else
    {
      uint64_t v3 = *(void *)(v0 + 112);
      uint64_t v4 = *(void *)(v0 + 88);
      uint64_t v5 = *(void *)(v0 + 96);
      uint64_t v6 = *(void *)(v0 + 64);
      uint64_t v7 = sub_100005E5C(&qword_1000FDDA0);
      sub_1000098E8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v2, v6, v7);
      uint64_t v9 = sub_10006190C();
      sub_1000082C0(v9, v10, v11, v7);
      static Date.now.getter();
      static Date.+ infix(_:_:)();
      uint64_t v12 = *(void (**)(uint64_t))(v5 + 8);
      uint64_t v13 = sub_100061844();
      v12(v13);
      static ActivityUIDismissalPolicy.after(_:)();
      ((void (*)(uint64_t, uint64_t))v12)(v3, v4);
      unint64_t v14 = (void *)sub_100061AF0();
      *(void *)(v0 + 168) = v14;
      *unint64_t v14 = v0;
      uint64_t v15 = sub_100056208;
    }
    v14[1] = v15;
    uint64_t v16 = sub_100061A94(*(void *)(v0 + 144));
    uint64_t v17 = v24;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = sub_1000616FC();
  }
  return v17(v16);
}

uint64_t sub_100056208()
{
  sub_10006179C();
  sub_10001C690();
  sub_10001C208();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *v0;
  sub_100046EF8();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = sub_100061690();
  v6(v5);
  sub_1000095CC(v2, &qword_1000FDE80);
  sub_10001C898();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_100056358()
{
  uint64_t v16 = v0;
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v1._countAndFlagsBits = sub_100061AB4();
  String.append(_:)(v1);
  Double.write<A>(to:)();
  v2._countAndFlagsBits = 115;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  uint64_t v4 = v0[2];
  unint64_t v3 = v0[3];
  if (qword_1000FBDE0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000929C(v5, (uint64_t)qword_10010A568);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = sub_100061A70();
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_100061874();
    v0[4] = sub_100017098(v9, v10, v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[5] = sub_100017098(v4, v3, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "LiveActivityManager.destroyActivity: activity for '%s' destroyed %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    sub_10001C2C8();
    sub_10001C2C8();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v12 = sub_1000616FC();
  return v13(v12);
}

uint64_t sub_10005661C()
{
  sub_10006179C();
  sub_10001C690();
  sub_10001C208();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *v0;
  sub_100046EF8();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = sub_100061690();
  v6(v5);
  sub_1000095CC(v2, &qword_1000FDE80);
  sub_10001C898();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10005676C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22)
{
  sub_100061968();
  a21 = v23;
  a22 = v24;
  sub_1000619D0();
  a20 = v22;
  if (qword_1000FBDE0 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_10000929C(v25, (uint64_t)qword_10010A568);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  BOOL v28 = os_log_type_enabled(v26, v27);
  unint64_t v29 = v22[7];
  if (v28)
  {
    a9 = v22 + 4;
    a10 = v22[20];
    uint64_t v30 = v22[6];
    uint64_t v31 = swift_slowAlloc();
    a11 = sub_100061A70();
    *(_DWORD *)uint64_t v31 = 136315394;
    swift_bridgeObjectRetain();
    v22[4] = sub_100017098(v30, v29, &a11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 12) = 2080;
    swift_bridgeObjectRetain();
    void v22[5] = sub_100017098(0x74616964656D6D69, 0xEB00000000796C65, &a11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "LiveActivityManager.destroyActivity: activity for '%s' destroyed %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    sub_10001C2C8();
    sub_10001C2C8();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000616FC();
  sub_10001C460();
  return v34(v32, v33, v34, v35, v36, v37, v38, v39, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1000569EC()
{
  swift_bridgeObjectRelease();
  sub_100006178(v0 + 24);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100056A1C()
{
  uint64_t v0 = sub_1000569EC();

  return _swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for ActivityStore()
{
  return self;
}

uint64_t sub_100056A70()
{
  type metadata accessor for LiveActivityActor();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  qword_10010A4D0 = v0;
  return result;
}

uint64_t type metadata accessor for LiveActivityActor()
{
  return self;
}

uint64_t sub_100056AD0()
{
  sub_100052C84();

  return swift_retain();
}

uint64_t sub_100056B00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for LiveActivityActor();

  return static GlobalActor.sharedUnownedExecutor.getter(v3, a2);
}

void sub_100056B38()
{
  sub_100005E5C(&qword_1000FDDA8);
  type metadata accessor for Sport();
  sub_10000C568();
  uint64_t v1 = v0;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000CB6A0;
  uint64_t v2 = *(void (**)(void))(v1 + 104);
  sub_100061714();
  v2();
  sub_100061714();
  v2();
  sub_100061714();
  v2();
  sub_100061714();
  v2();
  sub_100061714();
  v2();
  sub_100014154();
  qword_10010A4D8 = v3;
}

void sub_100056C64()
{
  type metadata accessor for LiveActivityManager();
  uint64_t v0 = swift_allocObject();
  sub_100056F20();
  qword_10010A4E0 = v0;
}

uint64_t sub_100056CB8(uint64_t a1, uint64_t a2)
{
  if ((sub_100056E48(a1, a2) & 1) == 0) {
    return 0;
  }
  sub_100061A34();
  return dispatch thunk of ActivityAuthorization.areActivitiesEnabled(forBundleId:)() & 1;
}

uint64_t sub_100056D04()
{
  uint64_t v0 = type metadata accessor for ActivityAuthorizationInfo.ActivityAuthorizationStatus();
  sub_10000C568();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  ActivityAuthorizationInfo.activityAuthorizationStatus(for:)();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, enum case for ActivityAuthorizationInfo.ActivityAuthorizationStatus.alwaysAllow(_:), v0);
  char v7 = static ActivityAuthorizationInfo.ActivityAuthorizationStatus.== infix(_:_:)();
  uint64_t v8 = *(void (**)(void))(v2 + 8);
  sub_100061A40();
  v8();
  uint64_t v9 = sub_100061A58();
  ((void (*)(uint64_t))v8)(v9);
  return v7 & 1;
}

id sub_100056E48(uint64_t a1, uint64_t a2)
{
  objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  id v4 = sub_10005F61C(a1, a2, 1);
  uint64_t v6 = v4;
  if (!v4) {
    return 0;
  }
  id v5 = [v4 supportsLiveActivities];

  return v5;
}

uint64_t sub_100056EE4()
{
  uint64_t v1 = *(void *)(v0 + 104);
  sub_100061880();
  return *(void *)(*(void *)(v1 + 16) + 16);
}

void sub_100056F20()
{
  sub_1000098B8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_100005E5C(&qword_1000FC940);
  uint64_t v5 = sub_10001C9AC(v4);
  __chkstk_darwin(v5);
  sub_1000098F8();
  uint64_t v8 = v7 - v6;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = &_swiftEmptySetSingleton;
  *(unsigned char *)(v0 + 72) = 0;
  uint64_t v9 = (objc_class *)type metadata accessor for ActivityAuthorization();
  *(void *)(v0 + 80) = [objc_allocWithZone(v9) init];
  type metadata accessor for ActivityAuthorizationInfo();
  swift_allocObject();
  *(void *)(v0 + 88) = ActivityAuthorizationInfo.init()();
  id v10 = [objc_allocWithZone(v9) init];
  unint64_t v11 = sub_1000522C4();
  uint64_t v13 = v12;
  uint64_t v35 = (uint64_t)v9;
  uint64_t v36 = &off_1000F15C8;
  v34[0] = v10;
  type metadata accessor for ActivityCapUtility();
  unint64_t v14 = (void *)sub_100061A1C();
  sub_10000A014((uint64_t)v34, (uint64_t)v9);
  sub_10000C568();
  __chkstk_darwin(v15);
  sub_1000098F8();
  uint64_t v18 = (uint64_t *)(v17 - v16);
  (*(void (**)(uint64_t))(v19 + 16))(v17 - v16);
  uint64_t v20 = *v18;
  v14[5] = v9;
  void v14[6] = &off_1000F15C8;
  long long v14[2] = v20;
  v14[7] = v11;
  v14[8] = v13;
  sub_100006178((uint64_t)v34);
  *(void *)(v1 + 96) = v14;
  sub_100008BFC(v3, (uint64_t)&v31, &qword_1000FD1F0);
  if (v32)
  {
    sub_100008CAC(&v31, (uint64_t)v34);
  }
  else
  {
    uint64_t v21 = type metadata accessor for PersistentStore();
    uint64_t v22 = PersistentStore.__allocating_init()();
    uint64_t v35 = v21;
    uint64_t v36 = (_UNKNOWN **)&protocol witness table for PersistentStore;
    v34[0] = v22;
    sub_1000095CC((uint64_t)&v31, &qword_1000FD1F0);
  }
  sub_100008B98((uint64_t)v34, v1 + 16);
  sub_100008B98((uint64_t)v34, (uint64_t)&v31);
  type metadata accessor for ActivityStore();
  sub_100061A1C();
  *(void *)(v1 + 104) = sub_100053068((uint64_t)&v31);
  if (qword_1000FBDE0 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_10000929C(v23, (uint64_t)qword_10010A568);
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)sub_10001C638();
    *(void *)&long long v31 = sub_100046F5C();
    *(_DWORD *)uint64_t v26 = 136315138;
    unint64_t v27 = sub_1000522C4();
    sub_100017098(v27, v28, (uint64_t *)&v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Current target app is: %s", v26, 0xCu);
    swift_arrayDestroy();
    sub_10001C2C8();
    sub_10001C2C8();
  }

  uint64_t v29 = type metadata accessor for TaskPriority();
  sub_1000082C0(v8, 1, 1, v29);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = 0;
  *(void *)(v30 + 24) = 0;
  *(void *)(v30 + 32) = v1;
  swift_retain();
  sub_100051FE8(v8, (uint64_t)&unk_1000FDD38, v30);
  swift_release();
  uint64_t v32 = &type metadata for TVAppFeatureFlags;
  unint64_t v33 = sub_1000092D4();
  LOBYTE(v30) = isFeatureEnabled(_:)();
  sub_100006178((uint64_t)&v31);
  if (v30) {
    sub_1000574C4();
  }
  sub_1000095CC(v3, &qword_1000FD1F0);
  sub_100006178((uint64_t)v34);
  sub_1000098A0();
}

uint64_t sub_100057334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100057354, 0, 0);
}

uint64_t sub_100057354()
{
  sub_10001C234();
  sub_1000573AC();
  sub_10001C2E0();
  return v0();
}

uint64_t sub_1000573AC()
{
  return swift_release();
}

uint64_t sub_1000574C4()
{
  uint64_t v1 = sub_100005E5C(&qword_1000FC940);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  sub_1000082C0((uint64_t)v3, 1, 1, v4);
  uint64_t v5 = qword_1000FBD90;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_10010A4D0;
  uint64_t v8 = sub_100060508(&qword_1000FDD28, v6, (void (*)(uint64_t))type metadata accessor for LiveActivityActor);
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = v7;
  void v9[3] = v8;
  v9[4] = v0;
  swift_retain();
  *(void *)(v0 + 56) = sub_100051FE8((uint64_t)v3, (uint64_t)&unk_1000FDD48, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_100057650()
{
  if (*(void *)(v0 + 56))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  sub_100006178(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1000576E0()
{
  sub_100057650();

  return _swift_deallocClassInstance(v0, 112, 7);
}

uint64_t type metadata accessor for LiveActivityManager()
{
  return self;
}

uint64_t sub_100057738(uint64_t a1, uint64_t a2)
{
  return sub_100060508(&qword_1000FDD28, a2, (void (*)(uint64_t))type metadata accessor for LiveActivityActor);
}

uint64_t sub_100057780(char *a1)
{
  uint64_t v2 = sub_100005E5C(&qword_1000FC940);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v5 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = type metadata accessor for TaskPriority();
    sub_1000082C0((uint64_t)v4, 1, 1, v8);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = 0;
    *(void *)(v9 + 24) = 0;
    *(void *)(v9 + 32) = v7;
    *(unsigned char *)(v9 + 40) = v5;
    sub_100051FE8((uint64_t)v4, (uint64_t)&unk_1000FDDE0, v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000578B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 24) = a5;
  *(void *)(v5 + 16) = a4;
  return _swift_task_switch(sub_1000578D4, 0, 0);
}

uint64_t sub_1000578D4()
{
  sub_10001C234();
  if (qword_1000FBD90 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10010A4D0;
  return _swift_task_switch(sub_100057964, v0, 0);
}

uint64_t sub_100057964()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 72) = *(unsigned char *)(v0 + 24);
  return sub_1000616E8();
}

uint64_t sub_100057974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  uint64_t v5 = type metadata accessor for ActivityAuthorizationInfo.ActivityAuthorizationStatus();
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  sub_100005E5C(&qword_1000FDD50);
  v4[7] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates();
  v4[8] = v6;
  v4[9] = *(void *)(v6 - 8);
  v4[10] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.Iterator();
  v4[11] = v7;
  v4[12] = *(void *)(v7 - 8);
  v4[13] = swift_task_alloc();
  if (qword_1000FBD90 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_10010A4D0;
  v4[14] = qword_10010A4D0;
  return _swift_task_switch(sub_100057B54, v8, 0);
}

uint64_t sub_100057B54()
{
  sub_10006179C();
  sub_10001C690();
  ActivityAuthorizationInfo.activityAuthorizationStatusUpdates.getter();
  ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.makeAsyncIterator()();
  uint64_t v1 = sub_100061690();
  v2(v1);
  v0[15] = qword_10010A4D0;
  v0[16] = sub_100060508(&qword_1000FDD28, v3, (void (*)(uint64_t))type metadata accessor for LiveActivityActor);
  sub_100060508(&qword_1000FDD58, 255, (void (*)(uint64_t))&type metadata accessor for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.Iterator);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[17] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100057C9C;
  sub_100061984();
  sub_10001C898();
  return dispatch thunk of AsyncIteratorProtocol.next()(v5, v6, v7);
}

uint64_t sub_100057C9C()
{
  sub_10001C28C();
  sub_10001C208();
  uint64_t v3 = v2;
  sub_10001C240();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_100046EF8();
  *uint64_t v6 = v5;
  v3[18] = v0;
  swift_task_dealloc();
  if (v0)
  {
    if (v3[15])
    {
      swift_getObjectType();
      uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v9 = v8;
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v9 = 0;
    }
    uint64_t v11 = sub_100057FD0;
    uint64_t v10 = v7;
  }
  else
  {
    uint64_t v10 = v3[14];
    uint64_t v11 = sub_100057DC0;
    uint64_t v9 = 0;
  }
  return _swift_task_switch(v11, v10, v9);
}

uint64_t sub_100057DC0()
{
  uint64_t v1 = (uint64_t *)v0[7];
  uint64_t v2 = sub_100005E5C(&qword_1000FDD60);
  sub_1000619DC((uint64_t)v1);
  if (v3)
  {
    uint64_t v4 = sub_1000617D4();
    v5(v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001C2E0();
    return v6();
  }
  else
  {
    uint64_t v8 = (char *)v0[6];
    uint64_t v9 = *v1;
    uint64_t v10 = (char *)v1[1];
    (*(void (**)(char *, char *, void))(v0[5] + 32))(v8, (char *)v1 + *(int *)(v2 + 48), v0[4]);
    sub_100058040(v8, v9, v10);
    swift_bridgeObjectRelease();
    sub_100061874();
    sub_1000617F8();
    v11();
    v0[15] = qword_10010A4D0;
    v0[16] = sub_100060508(&qword_1000FDD28, v12, (void (*)(uint64_t))type metadata accessor for LiveActivityActor);
    sub_100060508(&qword_1000FDD58, 255, (void (*)(uint64_t))&type metadata accessor for ActivityAuthorizationInfo.ActivityAuthorizationStatusUpdates.Iterator);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[17] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_100057C9C;
    uint64_t v14 = sub_100061984();
    return dispatch thunk of AsyncIteratorProtocol.next()(v14, v15, v16);
  }
}

uint64_t sub_100057FD0()
{
  sub_10001C234();
  *(void *)(v0 + 16) = *(void *)(v0 + 144);
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  sub_100061804();
  return swift_willThrowTypedImpl();
}

void sub_100058040(char *a1, uint64_t a2, char *a3)
{
  uint64_t v52 = a2;
  uint64_t v5 = sub_100005E5C(&qword_1000FC940);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ActivityAuthorizationInfo.ActivityAuthorizationStatus();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v48 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v48 - v16;
  if (qword_1000FBDE0 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_10000929C(v18, (uint64_t)qword_10010A568);
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v55(v17, a1, v8);
  swift_bridgeObjectRetain_n();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  int v54 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    os_log_t v49 = v19;
    uint64_t v22 = v21;
    uint64_t v50 = swift_slowAlloc();
    v62[0] = v50;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v53 = a1;
    v55(v14, v17, v8);
    uint64_t v23 = String.init<A>(describing:)();
    uint64_t v57 = sub_100017098(v23, v24, v62);
    uint64_t v51 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v48 = *(void (**)(char *, uint64_t))(v9 + 8);
    v48(v17, v8);
    *(_WORD *)(v22 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_100017098(v52, (unint64_t)a3, v62);
    uint64_t v11 = v51;
    a1 = v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    os_log_t v25 = v49;
    _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v54, "Received activity authorization status update %s for bundle %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    uint64_t v26 = v48;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v26 = *(void (**)(char *, uint64_t))(v9 + 8);
    v26(v17, v8);

    swift_bridgeObjectRelease_n();
  }
  v55(v11, a1, v8);
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v27 == enum case for ActivityAuthorizationInfo.ActivityAuthorizationStatus.noAuthorization(_:)) {
    goto LABEL_36;
  }
  if (v27 != enum case for ActivityAuthorizationInfo.ActivityAuthorizationStatus.allow(_:)
    && v27 != enum case for ActivityAuthorizationInfo.ActivityAuthorizationStatus.alwaysAllow(_:))
  {
    v26(v11, v8);
LABEL_36:
    v63._countAndFlagsBits = v52;
    v63._object = a3;
    sub_1000587D4(v56, v63);
    return;
  }
  if (sub_10007AD1C()) {
    char v29 = 1;
  }
  else {
    char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v30 = swift_bridgeObjectRetain();
  unint64_t v31 = sub_100058BB8(v30, v52, (uint64_t)a3);
  unint64_t v32 = v31;
  if (!(v31 >> 62))
  {
    uint64_t v33 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v33) {
      goto LABEL_17;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
  if (!v33) {
    goto LABEL_35;
  }
LABEL_17:
  uint64_t v51 = a3;
  if (v33 >= 1)
  {
    uint64_t v34 = 0;
    uint64_t v55 = (void (*)(char *, char *, uint64_t))(v32 & 0xC000000000000001);
    int v54 = v29 & 1;
    uint64_t v53 = (char *)&type metadata for () + 8;
    unint64_t v35 = v32;
    do
    {
      if (v55)
      {
        uint64_t v36 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v36 = *(void *)(v32 + 8 * v34 + 32);
        swift_retain();
      }
      uint64_t v37 = v56;
      uint64_t v38 = type metadata accessor for TaskPriority();
      sub_1000082C0((uint64_t)v7, 1, 1, v38);
      uint64_t v39 = qword_1000FBD90;
      swift_retain();
      swift_retain();
      if (v39 != -1) {
        swift_once();
      }
      uint64_t v41 = qword_10010A4D0;
      uint64_t v42 = sub_100060508(&qword_1000FDD28, v40, (void (*)(uint64_t))type metadata accessor for LiveActivityActor);
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = v41;
      *(void *)(v43 + 24) = v42;
      *(void *)(v43 + 32) = v37;
      *(void *)(v43 + 40) = v36;
      *(unsigned char *)(v43 + 48) = v54;
      LODWORD(v42) = sub_1000082E8((uint64_t)v7, 1, v38);
      swift_retain();
      if (v42 == 1)
      {
        sub_1000095CC((uint64_t)v7, &qword_1000FC940);
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8))(v7, v38);
      }
      if (*(void *)(v43 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v44 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v46 = v45;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v44 = 0;
        uint64_t v46 = 0;
      }
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = &unk_1000FDD78;
      *(void *)(v47 + 24) = v43;
      if (v46 | v44)
      {
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        uint64_t v60 = v44;
        uint64_t v61 = v46;
      }
      ++v34;
      swift_task_create();
      swift_release();
      swift_release();
      unint64_t v32 = v35;
    }
    while (v33 != v34);
    swift_bridgeObjectRelease();
    a3 = v51;
    goto LABEL_36;
  }
  __break(1u);
}

void sub_1000587D4(int a1, Swift::String a2)
{
  object = a2._object;
  uint64_t countAndFlagsBits = a2._countAndFlagsBits;
  ActivityAuthorizationInfo.unsubscribeToActivityAuthorizationStatusUpdates(for:)(a2);
  if (v4)
  {
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000929C(v5, (uint64_t)qword_10010A568);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      v15[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315394;
      swift_bridgeObjectRetain();
      sub_100017098(countAndFlagsBits, (unint64_t)object, v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v7 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v8 = Error.localizedDescription.getter();
      sub_100017098(v8, v9, v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Failed to unsubscribe from activity authorization status updates for %s - %s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000929C(v10, (uint64_t)qword_10010A568);
    swift_bridgeObjectRetain_n();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      v15[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      swift_bridgeObjectRetain();
      sub_100017098(countAndFlagsBits, (unint64_t)object, v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Unsubscribed to activity authorization status updates for bundle %s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_100058BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = type metadata accessor for SportsActivityAttributes();
  uint64_t v6 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v28 = _swiftEmptyArrayStorage;
  uint64_t result = sub_10008DAAC(a1, v27);
  uint64_t v26 = v27[0];
  int64_t v10 = v27[3];
  uint64_t v11 = v27[4];
  uint64_t v23 = v27[1];
  int64_t v24 = (unint64_t)(v27[2] + 64) >> 6;
  while (v11)
  {
    v11 &= v11 - 1;
LABEL_20:
    swift_retain();
    Activity.attributes.getter();
    uint64_t v16 = SportsActivityAttributes.bundleId.getter();
    uint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v25);
    if (v16 == a2 && v18 == a3)
    {
      swift_bridgeObjectRelease();
LABEL_27:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = specialized ContiguousArray._endMutation()();
    }
    else
    {
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_27;
      }
      uint64_t result = swift_release();
    }
  }
  int64_t v12 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v12 >= v24) {
      goto LABEL_28;
    }
    uint64_t v13 = *(void *)(v23 + 8 * v12);
    int64_t v14 = v10 + 1;
    if (!v13)
    {
      int64_t v14 = v10 + 2;
      if (v10 + 2 >= v24) {
        goto LABEL_28;
      }
      uint64_t v13 = *(void *)(v23 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v10 + 3;
        if (v10 + 3 >= v24) {
          goto LABEL_28;
        }
        uint64_t v13 = *(void *)(v23 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v10 + 4;
          if (v10 + 4 >= v24) {
            goto LABEL_28;
          }
          uint64_t v13 = *(void *)(v23 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v10 + 5;
            if (v10 + 5 >= v24) {
              goto LABEL_28;
            }
            uint64_t v13 = *(void *)(v23 + 8 * v14);
            if (!v13)
            {
              int64_t v15 = v10 + 6;
              while (v15 < v24)
              {
                uint64_t v13 = *(void *)(v23 + 8 * v15++);
                if (v13)
                {
                  int64_t v14 = v15 - 1;
                  goto LABEL_19;
                }
              }
LABEL_28:
              swift_release();
              uint64_t v21 = v28;
              swift_bridgeObjectRelease();
              return (uint64_t)v21;
            }
          }
        }
      }
    }
LABEL_19:
    uint64_t v11 = (v13 - 1) & v13;
    int64_t v10 = v14;
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_100058E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 88) = a6;
  *(void *)(v6 + 24) = a4;
  *(void *)(v6 + 32) = a5;
  uint64_t v7 = type metadata accessor for SportsActivityAttributes();
  *(void *)(v6 + 40) = v7;
  *(void *)(v6 + 48) = *(void *)(v7 - 8);
  *(void *)(v6 + 56) = swift_task_alloc();
  if (qword_1000FBD90 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_10010A4D0;
  *(void *)(v6 + 64) = qword_10010A4D0;
  return _swift_task_switch(sub_100058F84, v8, 0);
}

uint64_t sub_100058F84()
{
  uint64_t v21 = v0;
  sub_100005EA0((void *)(v0[3] + 16), *(void *)(v0[3] + 40));
  Activity.attributes.getter();
  SportsActivityAttributes.canonicalId.getter();
  uint64_t v1 = sub_100061874();
  char v3 = v2;
  ((void (*)(uint64_t))v2)(v1);
  uint64_t v4 = dispatch thunk of PersistentStorable.retrieveEventSubscription(canonicalId:isConventionalOrUnified:)();
  v0[9] = v4;
  swift_bridgeObjectRelease();
  if (!v4)
  {
    uint64_t v19 = v3;
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000929C(v8, (uint64_t)qword_10010A568);
    swift_retain_n();
    unint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = v0[7];
      uint64_t v18 = v0[5];
      int64_t v12 = (uint8_t *)sub_10001C638();
      uint64_t v20 = sub_100046F5C();
      *(_DWORD *)int64_t v12 = 136315138;
      Activity.attributes.getter();
      uint64_t v13 = SportsActivityAttributes.canonicalId.getter();
      unint64_t v15 = v14;
      v19(v11, v18);
      v0[2] = sub_100017098(v13, v15, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Could not find a subscription for paused activity with id %s", v12, 0xCu);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();
    }
    else
    {
      swift_release_n();
    }
    swift_task_dealloc();
    sub_10001C2E0();
    sub_10001C4BC();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v5 = (void *)swift_task_alloc();
  v0[10] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1000592A4;
  sub_10006190C();
  sub_10001C4BC();
  return sub_10005940C();
}

uint64_t sub_1000592A4()
{
  sub_10001C28C();
  sub_1000616B0();
  uint64_t v3 = *v2;
  sub_100046EF8();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v0 + 64);
  if (v1)
  {
    swift_errorRelease();
    uint64_t v6 = sub_100061654;
  }
  else
  {
    uint64_t v6 = sub_1000593AC;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1000593AC()
{
  sub_10001C234();

  swift_task_dealloc();
  sub_10001C2E0();
  return v1();
}

uint64_t sub_10005940C()
{
  sub_10001C234();
  *(unsigned char *)(v1 + 230) = v2;
  *(unsigned char *)(v1 + 229) = v3;
  *(unsigned char *)(v1 + 228) = v4;
  *(void *)(v1 + 80) = v5;
  *(void *)(v1 + 88) = v0;
  uint64_t v6 = type metadata accessor for SportingEventProgressStatus();
  *(void *)(v1 + 96) = v6;
  sub_10000984C(v6);
  *(void *)(v1 + 104) = v7;
  *(void *)(v1 + 112) = sub_1000618BC();
  uint64_t v8 = type metadata accessor for Date();
  *(void *)(v1 + 120) = v8;
  sub_10000984C(v8);
  *(void *)(v1 + 128) = v9;
  *(void *)(v1 + 136) = swift_task_alloc();
  *(void *)(v1 + 144) = swift_task_alloc();
  sub_10001CAE8();
  return _swift_task_switch(v10, v11, v12);
}

uint64_t sub_1000594EC()
{
  sub_10001C234();
  if (qword_1000FBD90 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10010A4D0;
  return _swift_task_switch(sub_10005957C, v0, 0);
}

uint64_t sub_10005957C()
{
  *(void *)(v0 + 152) = *(void *)(*(void *)(v0 + 88) + 104);
  return sub_1000616A8((uint64_t)sub_1000595A0, 0);
}

uint64_t sub_1000595A0()
{
  sub_10001C234();
  *(void *)(v0 + 160) = SportingEventSubscription.canonicalId.getter();
  *(void *)(v0 + 168) = v1;
  uint64_t v2 = qword_10010A4D0;
  return _swift_task_switch(sub_10005960C, v2, 0);
}

uint64_t sub_10005960C()
{
  sub_10001C234();
  *(void *)(v0 + 176) = sub_100055D54();
  swift_bridgeObjectRelease();
  sub_10001CAE8();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_100059680()
{
  uint64_t v61 = v0;
  if (!*(void *)(v0 + 176))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001C298();
    sub_100061724();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v1 = (void **)(v0 + 80);
  double v2 = COERCE_DOUBLE(SportingEventSubscription.liveActivityTTLSeconds.getter());
  char v3 = *(unsigned char *)(v0 + 228);
  if (v4)
  {
    if (*(unsigned char *)(v0 + 228))
    {
      BOOL v5 = 0;
      goto LABEL_13;
    }
LABEL_12:
    BOOL v5 = 0;
    goto LABEL_13;
  }
  BOOL v5 = v2 > -1.0;
  if (v2 > -1.0) {
    char v3 = 1;
  }
  if ((v3 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_13:
  uint64_t v8 = *(void *)(v0 + 128);
  static Date.now.getter();
  SportingEventSubscription.updatedAt.getter();
  Date.timeIntervalSince(_:)();
  double v10 = v9;
  uint64_t v11 = *(void (**)(void))(v8 + 8);
  sub_1000617F8();
  v11();
  sub_1000617F8();
  v11();
  if (v5 || v10 > 14400.0)
  {
    v60[0] = 0;
    v60[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(37);
    *(void *)(v0 + 32) = 0;
    *(void *)(v0 + 40) = 0xE000000000000000;
    v22._uint64_t countAndFlagsBits = 0x73736572676F7270;
    v22._object = (void *)0xEF20737574617453;
    String.append(_:)(v22);
    uint64_t v23 = (void *)SportingEventSubscription.sportingEventDetails.getter();
    SportingEvent.progressStatus.getter();

    uint64_t v24 = SportingEventProgressStatus.rawValue.getter();
    uint64_t v26 = v25;
    uint64_t v27 = sub_100061A4C();
    v28(v27);
    v29._uint64_t countAndFlagsBits = v24;
    v29._object = v26;
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    v30._object = (void *)0x80000001000D2340;
    v30._uint64_t countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v30);
    Double.write<A>(to:)();
    uint64_t v31 = *(void *)(v0 + 32);
    unint64_t v32 = *(void *)(v0 + 40);
    if (v10 <= 14400.0)
    {
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0xE000000000000000;
      v44._uint64_t countAndFlagsBits = sub_100061AB4();
      String.append(_:)(v44);
      Double.write<A>(to:)();
      v45._uint64_t countAndFlagsBits = 115;
      v45._object = (void *)0xE100000000000000;
      String.append(_:)(v45);
      uint64_t v34 = *(void *)(v0 + 16);
      unint64_t v33 = *(void *)(v0 + 24);
    }
    else
    {
      unint64_t v33 = 0xEB00000000796C65;
      uint64_t v34 = 0x74616964656D6D69;
    }
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v46 = *v1;
    uint64_t v47 = type metadata accessor for Logger();
    sub_10000929C(v47, (uint64_t)qword_10010A568);
    id v48 = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    os_log_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.debug.getter();
    BOOL v51 = os_log_type_enabled(v49, v50);
    uint64_t v52 = *v1;
    if (v51)
    {
      uint64_t v59 = v31;
      uint64_t v53 = sub_100046F5C();
      v60[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 136315650;
      uint64_t v54 = SportingEventSubscription.canonicalId.getter();
      *(void *)(v0 + 56) = sub_100017098(v54, v55, v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v53 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 64) = sub_100017098(v34, v33, v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v53 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 72) = sub_100017098(v59, v32, v60);
      sub_100061A34();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Destroying activity for '%s' %s: %s", (uint8_t *)v53, 0x20u);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    SportingEventSubscription.canonicalId.getter();
    *(void *)(v0 + 184) = v56;
    uint64_t v57 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v57;
    *uint64_t v57 = v0;
    v57[1] = sub_100059DD8;
    sub_100061724();
    return sub_10005D4CC();
  }
  else
  {
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v12 = *v1;
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000929C(v13, (uint64_t)qword_10010A568);
    id v14 = v12;
    unint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.debug.getter();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = *v1;
    if (v17)
    {
      uint64_t v19 = swift_slowAlloc();
      v60[0] = sub_100046F5C();
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v20 = SportingEventSubscription.canonicalId.getter();
      *(void *)(v0 + 48) = sub_100017098(v20, v21, v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v19 + 12) = 1024;
      *(_DWORD *)(v0 + 224) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Updating activity '%s', isStale: %{BOOL}d", (uint8_t *)v19, 0x12u);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();
    }
    else
    {
    }
    unint64_t v35 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v35;
    *unint64_t v35 = v0;
    v35[1] = sub_100059F30;
    sub_100061724();
    return sub_10005C1A0(v36, v37, v38, v39, v40, v41);
  }
}

uint64_t sub_100059DD8()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v3 = v2;
  sub_10001C240();
  *char v4 = v3;
  uint64_t v5 = *v1;
  sub_100046EF8();
  *uint64_t v6 = v5;
  *(void *)(v3 + 200) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  sub_10001CAE8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_100059EBC()
{
  sub_10001C234();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C298();
  return v0();
}

uint64_t sub_100059F30()
{
  sub_10001C234();
  sub_10001C208();
  sub_10001C240();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_100046EF8();
  *uint64_t v5 = v4;
  *(void *)(v6 + 216) = v0;
  swift_task_dealloc();
  sub_10001CAE8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10005A00C()
{
  sub_10001C28C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C2E0();
  return v0();
}

uint64_t sub_10005A098()
{
  sub_10001C28C();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C2E0();
  return v0();
}

void sub_10005A11C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v56 = (void *)a6;
  uint64_t v10 = sub_100005E5C(&qword_1000FC940);
  uint64_t v11 = sub_10001C9AC(v10);
  __chkstk_darwin(v11);
  sub_10000C58C();
  uint64_t v46 = v12;
  sub_100005E5C(&qword_1000FDDA0);
  sub_10000C568();
  __chkstk_darwin(v13);
  sub_10000C58C();
  uint64_t v47 = v14;
  type metadata accessor for URL();
  sub_10000C568();
  __chkstk_darwin(v15);
  sub_10000C58C();
  uint64_t v16 = type metadata accessor for SportsActivityAttributes();
  sub_10000C568();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_10000C58C();
  uint64_t v21 = v20;
  if (sub_10005A688())
  {
    sub_10004D2D4();
    swift_allocError();
    long long v23 = xmmword_1000CBBC0;
LABEL_9:
    *Swift::String v22 = v23;
    swift_willThrow();
    return;
  }
  uint64_t v44 = v18;
  uint64_t v45 = v16;
  if ((sub_10007AD1C() & 1) == 0) {
    _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  sub_100005EA0((void *)(v8 + 16), *(void *)(v8 + 40));
  uint64_t v24 = dispatch thunk of PersistentStorable.retrieveEventSubscription(canonicalId:isConventionalOrUnified:)();
  if (!v24)
  {
    sub_10004D2D4();
    swift_allocError();
    long long v23 = xmmword_1000CBBB0;
    goto LABEL_9;
  }
  uint64_t v25 = (void *)v24;
  if (a4) {
    int v43 = sub_100056D04() ^ 1;
  }
  else {
    int v43 = 0;
  }
  sub_10005A6C4(a7, a8, v21);
  if (v50)
  {
  }
  else
  {
    sub_10005A90C();
    swift_bridgeObjectRelease();
    sub_100005EA0((void *)(v8 + 16), *(void *)(v8 + 40));
    dispatch thunk of PersistentStorable.subscriptionsStoreURL(isConventionalOrUnified:)();
    uint64_t v26 = (void *)sub_100061A58();
    sub_10005AD00(v26, v27, v28, v29, v30);
    uint64_t v31 = v56;
    sub_10005B1C8(v21, a5, (uint64_t)v56, v47);
    if (a4)
    {
      uint64_t v32 = type metadata accessor for TaskPriority();
      sub_1000082C0(v46, 1, 1, v32);
      uint64_t v33 = qword_1000FBD90;
      swift_retain();
      id v35 = v25;
      if (v33 != -1) {
        swift_once();
      }
      uint64_t v36 = qword_10010A4D0;
      uint64_t v37 = sub_100060508(&qword_1000FDD28, v34, (void (*)(uint64_t))type metadata accessor for LiveActivityActor);
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v36;
      *(void *)(v38 + 24) = v37;
      *(void *)(v38 + 32) = v9;
      *(void *)(v38 + 40) = v35;
      *(unsigned char *)(v38 + 48) = v43 & 1;
      swift_retain();
      sub_10005214C(v46, (uint64_t)&unk_1000FDE18, v38);
      swift_release();
      uint64_t v31 = v56;
    }
    uint64_t v54 = &type metadata for TVAppFeatureFlags;
    unint64_t v55 = sub_1000092D4();
    int v39 = isFeatureEnabled(_:)();
    sub_100006178((uint64_t)v53);
    if (v39 & v43)
    {
      v40._uint64_t countAndFlagsBits = a5;
      v40._object = v31;
      ActivityAuthorizationInfo.subscribeToActivityAuthorizationStatusUpdates(for:)(v40);
    }

    sub_100009894();
    v41();
    sub_100009894();
    v42();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v21, v45);
  }
}

BOOL sub_10005A688()
{
  uint64_t v0 = sub_100055D54();
  if (v0) {
    swift_release();
  }
  return v0 != 0;
}

void sub_10005A6C4(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v20 = a3;
  uint64_t v3 = type metadata accessor for SportsActivityAttributes();
  uint64_t v18 = *(void *)(v3 - 8);
  uint64_t v19 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = type metadata accessor for Sport();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000FBD98 != -1) {
    swift_once();
  }
  SportingEventSubscription.sport.getter();
  Sport.init(rawValue:)();
  sub_100051308();
  char v14 = v13;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v14)
  {
    uint64_t v15 = v23;
    sub_100090E74();
    if (v15) {
      return;
    }
  }
  else
  {
    uint64_t v16 = v23;
    sub_10009136C();
    uint64_t v8 = v5;
    if (v16) {
      return;
    }
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v20, v8, v19);
}

void sub_10005A90C()
{
  sub_100005E5C(&qword_1000FDDA0);
  sub_10000C568();
  __chkstk_darwin(v1);
  sub_1000098F8();
  uint64_t v27 = type metadata accessor for SportsActivityAttributes();
  sub_10000C568();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10000987C();
  if (qword_1000FBDE0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000929C(v5, (uint64_t)qword_10010A568);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)sub_10001C638();
    int v28 = (void *)sub_100046F5C();
    *(_DWORD *)uint64_t v8 = 136315138;
    sub_100005E5C(&qword_1000FDDB0);
    static Activity.activities.getter();
    uint64_t v9 = Array.description.getter();
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    sub_100017098(v9, v11, (uint64_t *)&v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "ActivityKit activities: %s", v8, 0xCu);
    swift_arrayDestroy();
    sub_10001C2C8();
    sub_10001C2C8();
  }

  sub_100005E5C(&qword_1000FDDB0);
  unint64_t v12 = static Activity.activities.getter();
  unint64_t v13 = v12;
  if (!(v12 >> 62))
  {
    uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14) {
      goto LABEL_7;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
  if (!v14) {
    goto LABEL_17;
  }
LABEL_7:
  int v28 = _swiftEmptyArrayStorage;
  sub_100017EC0();
  if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t v15 = 0;
    unint64_t v25 = v13 & 0xC000000000000001;
    uint64_t v26 = v14;
    do
    {
      if (v25) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      Activity.attributes.getter();
      uint64_t v16 = SportsActivityAttributes.canonicalId.getter();
      uint64_t v18 = v17;
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v27);
      dispatch thunk of Activity.content.getter();
      ActivityContent.relevanceScore.getter();
      uint64_t v20 = v19;
      sub_100061A34();
      sub_1000617F8();
      v21();
      swift_release();
      uint64_t v22 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100017EC0();
        uint64_t v22 = v28;
      }
      unint64_t v23 = v22[2];
      if (v23 >= v22[3] >> 1)
      {
        sub_100017EC0();
        uint64_t v22 = v28;
      }
      ++v15;
      void v22[2] = v23 + 1;
      uint64_t v24 = &v22[3 * v23];
      v24[4] = v16;
      v24[5] = v18;
      v24[6] = v20;
    }
    while (v26 != v15);
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t sub_10005AD00@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v38 = a2;
  int v37 = a4;
  int v34 = a3;
  uint64_t v36 = a5;
  uint64_t v6 = sub_100005E5C(&qword_1000FDD98);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100005E5C(&qword_1000FDDA0);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  __chkstk_darwin(v9);
  uint64_t v35 = (uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100005E5C(&qword_1000FD498);
  __chkstk_darwin(v11 - 8);
  unint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SportingEventSubscription.Metadata();
  uint64_t v33 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Sport();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000FBD98 != -1) {
    swift_once();
  }
  SportingEventSubscription.sport.getter();
  Sport.init(rawValue:)();
  sub_100051308();
  char v22 = v21;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if ((v22 & 1) == 0) {
    return sub_100092C10(a1, v38, 0, v37 & 1, v36);
  }
  SportingEventSubscription.metadata.getter();
  if (sub_1000082E8((uint64_t)v13, 1, v14) == 1)
  {
    sub_1000095CC((uint64_t)v13, &qword_1000FD498);
    sub_10004D2D4();
    swift_allocError();
    *unint64_t v23 = xmmword_1000CBBD0;
    return swift_willThrow();
  }
  else
  {
    uint64_t v25 = v33;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v16, v13, v14);
    v40[3] = v14;
    v40[4] = (uint64_t)&off_1000F4518;
    uint64_t v26 = sub_100029BE0(v40);
    (*(void (**)(uint64_t *, char *, uint64_t))(v25 + 16))(v26, v16, v14);
    uint64_t v27 = enum case for SportingEventPlayLevel.session(_:);
    uint64_t v28 = type metadata accessor for SportingEventPlayLevel();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v8, v27, v28);
    sub_1000082C0((uint64_t)v8, 0, 1, v28);
    uint64_t v29 = v35;
    uint64_t v30 = v39;
    sub_100091760(a1, v38, v40, (uint64_t)v8, 0, v34 & 1, v37 & 1, v35);
    sub_1000095CC((uint64_t)v8, &qword_1000FDD98);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v14);
    if (v30)
    {
      return sub_100006178((uint64_t)v40);
    }
    else
    {
      sub_100006178((uint64_t)v40);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v36, v29, v32);
    }
  }
}

uint64_t sub_10005B1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v57 = a4;
  uint64_t v56 = a1;
  uint64_t v53 = type metadata accessor for ActivityAuthorizationError();
  uint64_t v48 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v47 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  os_log_t v49 = (char *)&v47 - v8;
  __chkstk_darwin(v9);
  uint64_t v52 = (char *)&v47 - v10;
  uint64_t v11 = sub_100005E5C(&qword_1000FC940);
  __chkstk_darwin(v11 - 8);
  uint64_t v50 = (uint64_t)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for ActivityPresentationOptions();
  uint64_t v13 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100005E5C(&qword_1000FDDB0);
  sub_100005E5C(&qword_1000FDE38);
  uint64_t v16 = type metadata accessor for ActivityContentSource.Request();
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1000CABA0;
  unint64_t v20 = v19 + v18;
  char v21 = (void *)(v20 + *(int *)(sub_100005E5C(&qword_1000FDE40) + 48));
  static PushActivityContentSource.externalRequest.getter();
  *char v21 = a2;
  v21[1] = a3;
  (*(void (**)(unint64_t, void, uint64_t))(v17 + 104))(v20, enum case for ActivityContentSource.Request.push(_:), v16);
  swift_bridgeObjectRetain();
  static ActivityPresentationOptions.ActivityPresentationDestination.allCases.getter();
  ActivityPresentationOptions.init(destinations:)();
  uint64_t v22 = v58;
  uint64_t v23 = static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:)();
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v55);
    swift_bridgeObjectRelease();
    uint64_t v59 = v22;
    swift_errorRetain();
    sub_100005E5C((uint64_t *)&unk_1000FDA30);
    uint64_t v24 = v52;
    uint64_t v25 = v53;
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      uint64_t v26 = v48;
      uint64_t v27 = v49;
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v49, v24, v25);
      uint64_t v28 = v47;
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v47, v27, v25);
      int v29 = (*(uint64_t (**)(char *, uint64_t))(v26 + 88))(v28, v25);
      if (v29 == enum case for ActivityAuthorizationError.globalMaximumExceeded(_:))
      {
        sub_10006087C();
        swift_allocError();
        *uint64_t v30 = xmmword_1000CBBF0;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v25);
      }
      else
      {
        int v42 = v29;
        int v43 = enum case for ActivityAuthorizationError.targetMaximumExceeded(_:);
        sub_10006087C();
        swift_allocError();
        uint64_t v45 = (void (**)(char *, uint64_t))(v26 + 8);
        if (v42 == v43)
        {
          *(_OWORD *)uint64_t v44 = xmmword_1000CBBE0;
          swift_willThrow();
          (*v45)(v27, v25);
        }
        else
        {
          *(void *)uint64_t v44 = 0;
          *(void *)(v44 + 8) = 0;
          swift_willThrow();
          uint64_t v46 = *v45;
          (*v45)(v27, v25);
          v46(v28, v25);
        }
      }
      return swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      sub_10006087C();
      swift_allocError();
      *char v41 = 0;
      v41[1] = 0;
      swift_willThrow();
      return swift_errorRelease();
    }
  }
  else
  {
    uint64_t v31 = v23;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v55);
    swift_bridgeObjectRelease();
    uint64_t v32 = v51;
    swift_retain();
    sub_1000546B8();
    uint64_t v33 = type metadata accessor for TaskPriority();
    uint64_t v34 = v50;
    sub_1000082C0(v50, 1, 1, v33);
    uint64_t v35 = qword_1000FBD90;
    swift_retain();
    if (v35 != -1) {
      swift_once();
    }
    uint64_t v37 = qword_10010A4D0;
    uint64_t v38 = sub_100060508(&qword_1000FDD28, v36, (void (*)(uint64_t))type metadata accessor for LiveActivityActor);
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = v37;
    void v39[3] = v38;
    v39[4] = v31;
    void v39[5] = v32;
    swift_retain();
    sub_100051FE8(v34, (uint64_t)&unk_1000FDE58, (uint64_t)v39);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_10005B830(uint64_t a1)
{
  v1[2] = a1;
  if (qword_1000FBD90 != -1) {
    swift_once();
  }
  v1[3] = qword_10010A4D0;
  uint64_t v2 = (void *)swift_task_alloc();
  void v1[4] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10005B920;
  return sub_10005940C();
}

uint64_t sub_10005B920()
{
  sub_10001C28C();
  sub_1000616B0();
  sub_10001C240();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 40) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v0 + 24);
  if (v1)
  {
    swift_errorRelease();
    uint64_t v6 = sub_100061658;
  }
  else
  {
    uint64_t v6 = sub_10005BA2C;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10005BA2C()
{
  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 40) != 0;
  return sub_1000616E8();
}

uint64_t sub_10005BA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v6 = type metadata accessor for ActivityState();
  v5[5] = v6;
  void v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  sub_100005E5C(&qword_1000FDE60);
  v5[8] = swift_task_alloc();
  uint64_t v7 = sub_100005E5C(&qword_1000FDE68);
  v5[9] = v7;
  v5[10] = *(void *)(v7 - 8);
  v5[11] = swift_task_alloc();
  uint64_t v8 = sub_100005E5C(&qword_1000FDE70);
  v5[12] = v8;
  v5[13] = *(void *)(v8 - 8);
  v5[14] = swift_task_alloc();
  if (qword_1000FBD90 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_10010A4D0;
  v5[15] = qword_10010A4D0;
  return _swift_task_switch(sub_10005BC2C, v9, 0);
}

uint64_t sub_10005BC2C()
{
  sub_10006179C();
  sub_10001C690();
  sub_100061944();
  Activity.ActivityStateUpdates.makeAsyncIterator()();
  uint64_t v1 = sub_100061690();
  v2(v1);
  int v3 = enum case for ActivityState.ended(_:);
  *(_DWORD *)(v0 + 160) = enum case for ActivityState.active(_:);
  *(_DWORD *)(v0 + 164) = v3;
  int v4 = enum case for ActivityState.stale(_:);
  *(_DWORD *)(v0 + 168) = enum case for ActivityState.dismissed(_:);
  *(_DWORD *)(v0 + 172) = v4;
  *(void *)(v0 + 128) = qword_10010A4D0;
  *(void *)(v0 + 136) = sub_100060508(&qword_1000FDD28, v5, (void (*)(uint64_t))type metadata accessor for LiveActivityActor);
  sub_10000953C(&qword_1000FDE78, &qword_1000FDE70);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10005BD88;
  sub_10006165C();
  sub_10001C898();
  return dispatch thunk of AsyncIteratorProtocol.next()(v7, v8, v9);
}

uint64_t sub_10005BD88()
{
  sub_10001C28C();
  sub_10001C208();
  int v3 = v2;
  sub_10001C240();
  *int v4 = v3;
  uint64_t v5 = *v1;
  sub_100046EF8();
  *uint64_t v6 = v5;
  v3[19] = v0;
  swift_task_dealloc();
  if (v0)
  {
    if (v3[16])
    {
      swift_getObjectType();
      uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v9 = v8;
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v9 = 0;
    }
    uint64_t v11 = sub_10005C130;
    uint64_t v10 = v7;
  }
  else
  {
    uint64_t v10 = v3[15];
    uint64_t v11 = sub_10005BEAC;
    uint64_t v9 = 0;
  }
  return _swift_task_switch(v11, v10, v9);
}

uint64_t sub_10005BEAC()
{
  sub_10006179C();
  sub_10001C690();
  sub_1000619DC(*(void *)(v0 + 64));
  if (!v18)
  {
    int v12 = *(_DWORD *)(v0 + 160);
    uint64_t v13 = sub_100061748();
    v14(v13);
    uint64_t v15 = sub_10006191C();
    int v17 = v16(v15);
    if (v17 != v12)
    {
      BOOL v18 = v17 == *(_DWORD *)(v0 + 164) || v17 == *(_DWORD *)(v0 + 168);
      if (v18)
      {
        sub_100054E50(*(void *)(v0 + 24));
LABEL_15:
        *(void *)(v0 + 128) = qword_10010A4D0;
        *(void *)(v0 + 136) = sub_100060508(&qword_1000FDD28, v19, (void (*)(uint64_t))type metadata accessor for LiveActivityActor);
        sub_10000953C(&qword_1000FDE78, &qword_1000FDE70);
        unint64_t v20 = (void *)swift_task_alloc();
        *(void *)(v0 + 144) = v20;
        *unint64_t v20 = v0;
        v20[1] = sub_10005BD88;
        sub_10006165C();
        sub_10001C898();
        return dispatch thunk of AsyncIteratorProtocol.next()(v21, v22, v23);
      }
      if (v17 != *(_DWORD *)(v0 + 172))
      {
        if (qword_1000FBDE0 != -1) {
          swift_once();
        }
        uint64_t v25 = type metadata accessor for Logger();
        sub_10000929C(v25, (uint64_t)qword_10010A568);
        uint64_t v26 = Logger.logObject.getter();
        os_log_type_t v27 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v26, v27))
        {
          *(_WORD *)swift_slowAlloc() = 0;
          sub_1000619FC((void *)&_mh_execute_header, v28, v29, "Unused case, this could cause serious regressions!");
          sub_10001C2C8();
        }

        uint64_t v30 = sub_1000618DC();
        v31(v30);
        goto LABEL_15;
      }
    }
    sub_1000546B8();
    goto LABEL_15;
  }
  uint64_t v1 = sub_1000617D4();
  v2(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C2E0();
  sub_10001C898();
  return v4(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10005C130()
{
  sub_10001C234();
  *(void *)(v0 + 16) = *(void *)(v0 + 152);
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  sub_100061804();
  return swift_willThrowTypedImpl();
}

uint64_t sub_10005C1A0(uint64_t a1, uint64_t a2, char a3, char a4, char a5, char a6)
{
  *(void *)(v7 + 352) = a2;
  *(void *)(v7 + 360) = v6;
  *(unsigned char *)(v7 + 591) = a6;
  *(unsigned char *)(v7 + 590) = a5;
  *(unsigned char *)(v7 + 589) = a4;
  *(unsigned char *)(v7 + 588) = a3;
  *(void *)(v7 + 344) = a1;
  uint64_t v8 = type metadata accessor for SportsActivityAttributes();
  *(void *)(v7 + 368) = v8;
  *(void *)(v7 + 376) = *(void *)(v8 - 8);
  *(void *)(v7 + 384) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  *(void *)(v7 + 392) = v9;
  *(void *)(v7 + 400) = *(void *)(v9 - 8);
  *(void *)(v7 + 408) = swift_task_alloc();
  sub_100005E5C(&qword_1000FDDB8);
  *(void *)(v7 + 416) = swift_task_alloc();
  *(void *)(v7 + 424) = swift_task_alloc();
  *(void *)(v7 + 432) = swift_task_alloc();
  *(void *)(v7 + 440) = swift_task_alloc();
  sub_100005E5C(&qword_1000FDD98);
  *(void *)(v7 + 448) = swift_task_alloc();
  uint64_t v10 = sub_100005E5C(&qword_1000FDDA0);
  *(void *)(v7 + 456) = v10;
  *(void *)(v7 + 464) = *(void *)(v10 - 8);
  *(void *)(v7 + 472) = swift_task_alloc();
  *(void *)(v7 + 480) = swift_task_alloc();
  *(void *)(v7 + 488) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for URL();
  *(void *)(v7 + 496) = v11;
  *(void *)(v7 + 504) = *(void *)(v11 - 8);
  *(void *)(v7 + 512) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Sport();
  *(void *)(v7 + 520) = v12;
  *(void *)(v7 + 528) = *(void *)(v12 - 8);
  *(void *)(v7 + 536) = swift_task_alloc();
  if (qword_1000FBD90 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_10010A4D0;
  *(void *)(v7 + 544) = qword_10010A4D0;
  return _swift_task_switch(sub_10005C4C4, v13, 0);
}

uint64_t sub_10005C4C4()
{
  uint64_t v75 = v0;
  uint64_t v1 = (unsigned __int8 *)(v0 + 588);
  char v2 = *(unsigned char *)(v0 + 591);
  *(void *)(v0 + 40) = &type metadata for TVAppFeatureFlags;
  *(void *)(v0 + 48) = sub_1000092D4();
  char v3 = isFeatureEnabled(_:)();
  sub_100006178(v0 + 16);
  if (v3 & 1) != 0 && (v2)
  {
    sub_1000617B0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001C298();
    return v4();
  }
  else
  {
    char v5 = *(unsigned char *)(v0 + 589);
    SportingEventSubscription.canonicalId.getter();
    sub_10005A90C();
    sub_100061A88();
    sub_1000AEB50(v6, v7, v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((sub_10007AD1C() & 1) == 0) {
      sub_10006176C();
    }
    swift_bridgeObjectRelease();
    if (qword_1000FBD98 != -1) {
      swift_once();
    }
    uint64_t v9 = *(void *)(v0 + 360);
    SportingEventSubscription.sport.getter();
    Sport.init(rawValue:)();
    sub_100051308();
    char v11 = v10;
    uint64_t v12 = sub_100061A4C();
    v13(v12);
    sub_100005EA0((void *)(v9 + 16), *(void *)(v9 + 40));
    sub_100061A88();
    dispatch thunk of PersistentStorable.subscriptionsStoreURL(isConventionalOrUnified:)();
    char v71 = v11;
    if (v11)
    {
      uint64_t v14 = *(void *)(v0 + 360);
      *(void *)(v0 + 120) = *(void *)(v0 + 368);
      *(void *)(v0 + 128) = &off_1000F4540;
      sub_100029BE0((uint64_t *)(v0 + 96));
      Activity.attributes.getter();
      if (*(unsigned char *)(v14 + 72) == 1)
      {
        static SportsActivityAttributes.filteredPlayLevel.getter();
        uint64_t v15 = 0;
      }
      else
      {
        uint64_t v15 = 1;
      }
      uint64_t v16 = *(void *)(v0 + 512);
      uint64_t v17 = *(void *)(v0 + 480);
      uint64_t v18 = *(void *)(v0 + 448);
      int v19 = *(unsigned __int8 *)(v0 + 591);
      int v20 = *(unsigned __int8 *)(v0 + 590);
      int v21 = *v1;
      uint64_t v22 = *(void **)(v0 + 352);
      uint64_t v23 = type metadata accessor for SportingEventPlayLevel();
      sub_1000082C0(v18, v15, 1, v23);
      sub_100091760(v22, v16, (void *)(v0 + 96), v18, v21, v20, v19, v17);
      uint64_t v25 = *(void *)(v0 + 480);
      uint64_t v26 = *(void *)(v0 + 488);
      uint64_t v27 = *(void *)(v0 + 456);
      uint64_t v28 = *(void *)(v0 + 464);
      sub_1000095CC(*(void *)(v0 + 448), &qword_1000FDD98);
      sub_100006178(v0 + 96);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v26, v25, v27);
      uint64_t v1 = (unsigned __int8 *)(v0 + 588);
    }
    else
    {
      sub_100092C10(*(void **)(v0 + 352), *(void *)(v0 + 512), *v1, *(unsigned __int8 *)(v0 + 591), *(void *)(v0 + 488));
    }
    uint64_t v29 = *(void *)(v0 + 440);
    int v30 = *v1;
    uint64_t v31 = type metadata accessor for AlertConfiguration();
    sub_1000082C0(v29, 1, 1, v31);
    uint64_t v32 = &selRef_setRemoteObjectInterface_;
    if (v30 == 1)
    {
      if (v71)
      {
        *(void *)(v0 + 80) = *(void *)(v0 + 368);
        *(void *)(v0 + 88) = &off_1000F4540;
        sub_100029BE0((uint64_t *)(v0 + 56));
        Activity.attributes.getter();
        sub_100061A58();
        sub_100093244();
        sub_100006178(v0 + 56);
        uint64_t v33 = (uint64_t *)(v0 + 432);
      }
      else
      {
        sub_100093964();
        uint64_t v33 = (uint64_t *)(v0 + 424);
      }
      sub_1000602C8(*v33, *(void *)(v0 + 440));
      if (qword_1000FBDE0 != -1) {
        swift_once();
      }
      uint64_t v34 = type metadata accessor for Logger();
      sub_10000929C(v34, (uint64_t)qword_10010A568);
      uint64_t v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v35, v36))
      {
        os_log_type_t v72 = v36;
        uint64_t v70 = v1;
        uint64_t v37 = *(void *)(v0 + 440);
        uint64_t v38 = swift_slowAlloc();
        v74[0] = sub_100061A70();
        *(_DWORD *)uint64_t v38 = 136315394;
        swift_beginAccess();
        if (sub_1000082E8(v37, 1, v31))
        {
          swift_endAccess();
          uint64_t v32 = 0;
          unint64_t v39 = 0xE000000000000000;
        }
        else
        {
          unint64_t v40 = *(void *)(v0 + 408);
          AlertConfiguration.title.getter();
          swift_endAccess();
          unint64_t v39 = v40;
          LocalizedStringResource.key.getter();
          uint64_t v41 = sub_100061858();
          v42(v41);
        }
        uint64_t v43 = *(void *)(v0 + 440);
        *(void *)(v0 + 312) = sub_100017098((uint64_t)v32, v39, v74);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 12) = 2080;
        uint64_t v44 = v0 + 184;
        swift_beginAccess();
        if (sub_1000082E8(v43, 1, v31))
        {
          swift_endAccess();
          uint64_t v44 = 0;
          unint64_t v45 = 0xE000000000000000;
        }
        else
        {
          unint64_t v46 = *(void *)(v0 + 408);
          AlertConfiguration.body.getter();
          swift_endAccess();
          unint64_t v45 = v46;
          LocalizedStringResource.key.getter();
          uint64_t v47 = sub_100061858();
          v48(v47);
        }
        *(void *)(v0 + 328) = sub_100017098(v44, v45, v74);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v35, v72, "Alert Title: %s, Body: %s", (uint8_t *)v38, 0x16u);
        swift_arrayDestroy();
        sub_10001C2C8();
        sub_10001C2C8();

        uint64_t v1 = v70;
      }
      else
      {
      }
    }
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Logger();
    *(void *)(v0 + 552) = sub_10000929C(v49, (uint64_t)qword_10010A568);
    swift_retain_n();
    uint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v53 = *(void *)(v0 + 376);
      uint64_t v52 = *(void *)(v0 + 384);
      uint64_t v68 = *(void *)(v0 + 368);
      int v67 = *v1;
      uint64_t v54 = swift_slowAlloc();
      v74[0] = sub_100061A70();
      *(_DWORD *)uint64_t v54 = 136315906;
      os_log_type_t type = v51;
      uint64_t v55 = Activity.id.getter();
      *(void *)(v0 + 336) = sub_100017098(v55, v56, v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v54 + 12) = 1024;
      *(_DWORD *)(v0 + 584) = v67;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v54 + 18) = 2080;
      Activity.attributes.getter();
      uint64_t v57 = SportsActivityAttributes.canonicalId.getter();
      unint64_t v59 = v58;
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v68);
      *(void *)(v0 + 304) = sub_100017098(v57, v59, v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v54 + 28) = 2048;
      sub_100061880();
      ActivityContent.relevanceScore.getter();
      *(void *)(v0 + 280) = v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v50, type, "Updating activity '%s': alert: %{BOOL}d; canonicalId: %s; relevanceScore: %f",
        (uint8_t *)v54,
        0x26u);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();
    }
    else
    {
      swift_release_n();
    }

    uint64_t v61 = *(void *)(v0 + 440);
    uint64_t v62 = *(void *)(v0 + 416);
    sub_100061880();
    uint64_t v63 = sub_100061A34();
    v64(v63);
    sub_100061880();
    sub_100008BFC(v61, v62, &qword_1000FDDB8);
    uint64_t v73 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of Activity.update(_:alertConfiguration:)
                                          + async function pointer to dispatch thunk of Activity.update(_:alertConfiguration:));
    id v65 = (void *)swift_task_alloc();
    *(void *)(v0 + 560) = v65;
    *id v65 = v0;
    v65[1] = sub_10005D0E8;
    uint64_t v66 = sub_100061A94(*(void *)(v0 + 472));
    return v73(v66);
  }
}

uint64_t sub_10005D0E8()
{
  sub_10001C690();
  sub_10001C208();
  uint64_t v2 = v1;
  sub_10001C240();
  *char v3 = v2;
  uint64_t v5 = v4[68];
  uint64_t v6 = v4[58];
  uint64_t v7 = v4[52];
  uint64_t v8 = *v0;
  sub_100046EF8();
  *uint64_t v9 = v8;
  swift_task_dealloc();
  sub_1000095CC(v7, &qword_1000FDDB8);
  *(void *)(v2 + 568) = *(void *)(v6 + 8);
  *(void *)(v2 + 576) = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  sub_100061874();
  sub_100061A40();
  v10();
  return _swift_task_switch(sub_10005D254, v5, 0);
}

void sub_10005D254()
{
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v18 = (void (*)(uint64_t, uint64_t))v0[71];
    uint64_t v3 = v0[63];
    uint64_t v13 = v0[62];
    uint64_t v16 = v0[57];
    uint64_t v17 = v0[61];
    uint64_t v14 = v0[64];
    uint64_t v15 = v0[55];
    int v4 = (uint8_t *)sub_10001C638();
    uint64_t v19 = sub_100046F5C();
    *(_DWORD *)int v4 = 136315138;
    uint64_t v5 = Activity.id.getter();
    v0[36] = sub_100017098(v5, v6, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Updates complete for activity '%s'", v4, 0xCu);
    swift_arrayDestroy();
    sub_10001C2C8();
    sub_10001C2C8();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v14, v13);
    sub_1000095CC(v15, &qword_1000FDDB8);
    v18(v17, v16);
  }
  else
  {
    uint64_t v7 = (void (*)(uint64_t))v0[71];
    uint64_t v8 = v0[55];

    swift_release_n();
    sub_100061A64();
    sub_1000617F8();
    v9();
    sub_1000095CC(v8, &qword_1000FDDB8);
    uint64_t v10 = sub_100061A4C();
    v7(v10);
  }
  sub_1000617B0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C298();
  sub_10001C4BC();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_10005D4CC()
{
  sub_10001C234();
  *(unsigned char *)(v1 + 219) = v2;
  *(void *)(v1 + 80) = v3;
  *(void *)(v1 + 88) = v0;
  *(unsigned char *)(v1 + 218) = v4;
  *(unsigned char *)(v1 + 217) = v5;
  *(unsigned char *)(v1 + 216) = v6;
  *(void *)(v1 + 64) = v7;
  *(void *)(v1 + 72) = v8;
  uint64_t v9 = sub_100005E5C(&qword_1000FDD98);
  sub_10001C9AC(v9);
  *(void *)(v1 + 96) = sub_1000618BC();
  uint64_t v10 = sub_100005E5C(&qword_1000FDDA0);
  *(void *)(v1 + 104) = v10;
  sub_10000984C(v10);
  *(void *)(v1 + 112) = v11;
  *(void *)(v1 + 120) = swift_task_alloc();
  *(void *)(v1 + 128) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for URL();
  *(void *)(v1 + 136) = v12;
  sub_10000984C(v12);
  *(void *)(v1 + 144) = v13;
  *(void *)(v1 + 152) = sub_1000618BC();
  uint64_t v14 = type metadata accessor for Sport();
  *(void *)(v1 + 160) = v14;
  sub_10000984C(v14);
  *(void *)(v1 + 168) = v15;
  *(void *)(v1 + 176) = sub_1000618BC();
  sub_10001CAE8();
  return _swift_task_switch(v16, v17, v18);
}

uint64_t sub_10005D60C()
{
  sub_10001C28C();
  if (*(unsigned char *)(v0 + 218))
  {
    sub_1000616C8();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001C298();
    return v1();
  }
  else
  {
    if (qword_1000FBD90 != -1) {
      swift_once();
    }
    uint64_t v3 = qword_10010A4D0;
    return _swift_task_switch(sub_10005D700, v3, 0);
  }
}

uint64_t sub_10005D700()
{
  *(void *)(v0 + 184) = *(void *)(*(void *)(v0 + 88) + 104);
  return sub_1000616A8((uint64_t)sub_10005D724, 0);
}

uint64_t sub_10005D724()
{
  return sub_1000616A8((uint64_t)sub_10005D740, qword_10010A4D0);
}

uint64_t sub_10005D740()
{
  sub_10001C234();
  *(void *)(v0 + 192) = sub_100055D54();
  sub_10001CAE8();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10005D7A8()
{
  sub_10001C28C();
  if (*(void *)(v0 + 192))
  {
    if (sub_10007AD1C()) {
      char v1 = 1;
    }
    else {
      char v1 = sub_10006176C();
    }
    *(unsigned char *)(v0 + 220) = v1 & 1;
    swift_bridgeObjectRelease();
    sub_10001CAE8();
    return _swift_task_switch(v4, v5, v6);
  }
  else
  {
    sub_1000616C8();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001C298();
    return v2();
  }
}

uint64_t sub_10005D894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_100061968();
  a21 = v23;
  a22 = v24;
  sub_1000619D0();
  a20 = v22;
  sub_100005EA0((void *)(*(void *)(v22 + 88) + 16), *(void *)(*(void *)(v22 + 88) + 40));
  uint64_t v25 = dispatch thunk of PersistentStorable.retrieveEventSubscription(canonicalId:isConventionalOrUnified:)();
  *(void *)(v22 + 200) = v25;
  if (v25)
  {
    sub_10005A90C();
    swift_bridgeObjectRelease();
    if (qword_1000FBD98 != -1) {
      swift_once();
    }
    uint64_t v27 = *(void *)(v22 + 168);
    uint64_t v26 = *(void *)(v22 + 176);
    uint64_t v28 = *(void *)(v22 + 160);
    SportingEventSubscription.sport.getter();
    Sport.init(rawValue:)();
    sub_100051308();
    *(unsigned char *)(v22 + 221) = v29 & 1;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    sub_10001CAE8();
    sub_10001C460();
    return _swift_task_switch(v30, v31, v32);
  }
  else
  {
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_10000929C(v34, (uint64_t)qword_10010A568);
    swift_bridgeObjectRetain_n();
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    BOOL v37 = os_log_type_enabled(v35, v36);
    unint64_t v38 = *(void *)(v22 + 72);
    if (v37)
    {
      a9 = *(void *)(v22 + 64);
      a10 = *(void *)(v22 + 192);
      unint64_t v39 = (uint8_t *)sub_10001C638();
      a11 = sub_100046F5C();
      *(_DWORD *)unint64_t v39 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v22 + 56) = sub_100017098(a9, v38, &a11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Could not find a subscription when destroying live activity: %s", v39, 0xCu);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_release();
    }
    sub_1000616C8();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001C298();
    sub_10001C460();
    return v41(v40, v41, v42, v43, v44, v45, v46, v47, a9, a10, a11, a12, a13, a14);
  }
}

uint64_t sub_10005DB88()
{
  int v1 = *(unsigned __int8 *)(v0 + 221);
  sub_100005EA0((void *)(*(void *)(v0 + 88) + 16), *(void *)(*(void *)(v0 + 88) + 40));
  dispatch thunk of PersistentStorable.subscriptionsStoreURL(isConventionalOrUnified:)();
  if (v1 == 1)
  {
    uint64_t v2 = *(void *)(v0 + 96);
    int v3 = *(unsigned __int8 *)(v0 + 217);
    int v4 = *(unsigned __int8 *)(v0 + 216);
    *(void *)(v0 + 40) = type metadata accessor for SportsActivityAttributes();
    *(void *)(v0 + 48) = &off_1000F4540;
    sub_100029BE0((uint64_t *)(v0 + 16));
    Activity.attributes.getter();
    uint64_t v5 = enum case for SportingEventPlayLevel.session(_:);
    uint64_t v6 = type metadata accessor for SportingEventPlayLevel();
    sub_1000098E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v2, v5, v6);
    sub_1000082C0(v2, 0, 1, v6);
    uint64_t v8 = (void *)sub_100061874();
    sub_100091760(v8, v9, (void *)(v0 + 16), v2, v4, v3, 0, v10);
    sub_1000095CC(*(void *)(v0 + 96), &qword_1000FDD98);
    sub_100006178(v0 + 16);
    sub_100061A88();
    v11();
  }
  else
  {
    sub_100092C10(*(void **)(v0 + 200), *(void *)(v0 + 152), *(unsigned __int8 *)(v0 + 216), 0, *(void *)(v0 + 128));
  }
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10005DE74;
  uint64_t v13 = sub_100061A94(*(void *)(v0 + 64));
  return sub_100055DFC(v13, v14, v15, v16, v17);
}

uint64_t sub_10005DE74()
{
  sub_10001C234();
  sub_10001C208();
  sub_10001C240();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(unsigned char *)(v1 + 222) = v3;
  swift_task_dealloc();
  sub_10001CAE8();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_10005DF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_100061968();
  sub_1000619D0();
  uint64_t v15 = *(void **)(v14 + 200);
  if (*(unsigned char *)(v14 + 222) == 1)
  {

    swift_release();
    uint64_t v16 = sub_100061844();
    v17(v16);
    sub_1000617F8();
    v18();
    sub_1000616C8();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001C298();
  }
  else
  {
    sub_10004D2D4();
    a10 = swift_allocError();
    *uint64_t v19 = xmmword_1000CBC00;
    swift_willThrow();

    swift_release();
    uint64_t v20 = sub_100061844();
    v21(v20);
    sub_1000617F8();
    v22();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001C2E0();
  }
  sub_10001C460();
  return v24(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12, a13, a14);
}

void sub_10005E0A8()
{
  sub_1000098B8();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = sub_100005E5C(&qword_1000FC940);
  uint64_t v11 = sub_10001C9AC(v10);
  __chkstk_darwin(v11);
  sub_100009864();
  uint64_t v12 = type metadata accessor for TaskPriority();
  sub_1000082C0(v1, 1, 1, v12);
  uint64_t v13 = qword_1000FBD90;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_10010A4D0;
  uint64_t v16 = sub_100060508(&qword_1000FDD28, v14, (void (*)(uint64_t))type metadata accessor for LiveActivityActor);
  char v17 = (void *)sub_100061A1C();
  uint64_t v17[2] = v15;
  v17[3] = v16;
  v17[4] = v5;
  v17[5] = v3;
  v17[6] = v0;
  v17[7] = v9;
  v17[8] = v7;
  swift_retain();
  sub_100051FE8(v1, (uint64_t)&unk_1000FDEA8, (uint64_t)v17);
  swift_release();
  sub_1000098A0();
}

uint64_t sub_10005E234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  uint64_t v8[3] = a5;
  v8[4] = a6;
  _OWORD v8[2] = a4;
  if (qword_1000FBD90 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_10010A4D0;
  return _swift_task_switch(sub_10005E2D4, v9, 0);
}

uint64_t sub_10005E2D4()
{
  sub_10001C28C();
  uint64_t v1 = *(void (**)(BOOL))(v0 + 16);
  BOOL v2 = sub_10005A688();
  v1(v2);
  sub_10001C2E0();
  return v3();
}

uint64_t sub_10005E34C(uint64_t *a1, uint64_t a2, char a3)
{
  char v4 = a3 & 1;
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(*a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000519E0(0, v6, v5, a2, v4);
  sub_100005E5C(&qword_1000FCEE8);
  sub_100005E5C(&qword_1000FDEE0);
  sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
  sub_10000953C(&qword_1000FDEE8, &qword_1000FDEE0);
  return Publishers.MergeMany.init<A>(_:)();
}

uint64_t sub_10005E458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v46 = a5;
  HIDWORD(v43) = a4;
  uint64_t v45 = a3;
  uint64_t v7 = sub_100005E5C(&qword_1000FD248);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100005E5C(&qword_1000FD250);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100005E5C(&qword_1000FD2F8);
  uint64_t v41 = *(void *)(v15 - 8);
  uint64_t v42 = v15;
  __chkstk_darwin(v15);
  uint64_t v40 = (uint64_t)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100005E5C(&qword_1000FC938);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ActivityOperation = type metadata accessor for SubscriptionCreateActivityOperation(0);
  __chkstk_darwin(ActivityOperation);
  uint64_t v44 = (uint64_t)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = *(void *)a1;
  if ((*(void *)a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v23 >= *(void *)(a2 + 16))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    swift_once();
    goto LABEL_6;
  }
  if (*(unsigned char *)(a2 + v23 + 32) != 1 || (int64_t)v23 >= *(void *)(v45 + 16))
  {
    LOBYTE(v48) = 0;
    Just.init(_:)();
    sub_100005E5C((uint64_t *)&unk_1000FDA30);
    Just.setFailureType<A>(to:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_10000953C(&qword_1000FD298, &qword_1000FD250);
    uint64_t v32 = Publisher.eraseToAnyPublisher()();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_13;
  }
  uint64_t v7 = v21;
  a1 = BYTE4(v43) & 1;
  uint64_t v24 = (void *)(v45 + 32 * v23);
  a2 = v24[4];
  uint64_t v14 = (char *)v24[5];
  uint64_t v11 = v24[6];
  uint64_t v12 = v24[7];
  uint64_t v25 = qword_1000FBD60;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25 != -1) {
    goto LABEL_16;
  }
LABEL_6:
  uint64_t v48 = 0;
  uint64_t v49 = 0;
  uint64_t v50 = 0;
  uint64_t v51 = 1;
  uint64_t v26 = type metadata accessor for Date();
  long long v52 = 0u;
  long long v53 = 0u;
  long long v54 = 0u;
  long long v55 = 0u;
  uint64_t v56 = 0;
  sub_1000082C0((uint64_t)v19, 1, 1, v26);
  uint64_t v39 = v11;
  LOBYTE(v38) = 0;
  uint64_t v27 = v44;
  sub_100029F10(a2, (uint64_t)v14, a1, (uint64_t)&v48, 0, 1, 0, 0, v38, v39, v12, (uint64_t)v19, v40, v41, v42, v43, v44, v45, (uint64_t)v46,
    v47,
    v48,
    v49,
    v50,
    v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000095CC((uint64_t)v19, &qword_1000FC938);
  if (qword_1000FBDA0 != -1) {
    swift_once();
  }
  uint64_t v28 = (uint64_t *)(v27 + *(int *)(v7 + 56));
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  if (sub_100056CB8(*v28, v29))
  {
    sub_1000A3E24();
    uint64_t v32 = v31;
  }
  else
  {
    sub_10004D2D4();
    uint64_t v34 = swift_allocError();
    *uint64_t v35 = v30;
    v35[1] = v29;
    uint64_t v57 = v34;
    swift_bridgeObjectRetain();
    sub_100005E5C((uint64_t *)&unk_1000FDA30);
    uint64_t v36 = v40;
    Fail.init(error:)();
    sub_10000953C(&qword_1000FD300, &qword_1000FD2F8);
    uint64_t v37 = v42;
    uint64_t v32 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v36, v37);
  }
  uint64_t result = sub_10004CC9C(v27);
LABEL_13:
  *uint64_t v46 = v32;
  return result;
}

void sub_10005E9CC(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 16);
  if (!v4) {
    goto LABEL_8;
  }
  if (*(unsigned char *)(v3 + 32) != 1)
  {
LABEL_17:
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000929C(v13, (uint64_t)qword_10010A568);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v14, v15))
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      return;
    }
    os_log_type_t v28 = v15;
    osloga = v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    if (a2) {
      uint64_t v17 = 1751607656;
    }
    else {
      uint64_t v17 = 7827308;
    }
    if (a2) {
      unint64_t v18 = 0xE400000000000000;
    }
    else {
      unint64_t v18 = 0xE300000000000000;
    }
    v33[0] = sub_100017098(v17, v18, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v29 = (uint8_t *)v16;
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v34 = _swiftEmptyArrayStorage;
    sub_100017DA8();
    unint64_t v19 = 0;
    a2 = 0;
    uint64_t v20 = _swiftEmptyArrayStorage;
    while (v4 != v19)
    {
      unint64_t v32 = v19;
      sub_10005EEB8(&v32, v3, v33);
      uint64_t v22 = v33[0];
      uint64_t v21 = v33[1];
      uint64_t v34 = v20;
      unint64_t v23 = v20[2];
      if (v23 >= v20[3] >> 1)
      {
        sub_100017DA8();
        uint64_t v20 = v34;
      }
      ++v19;
      void v20[2] = v23 + 1;
      uint64_t v24 = &v20[2 * v23];
      v24[4] = v22;
      v24[5] = v21;
      if (v4 == v19)
      {
        uint64_t v25 = Array.description.getter();
        unint64_t v27 = v26;
        swift_release();
        v33[0] = sub_100017098(v25, v27, &v35);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, osloga, v28, "    Error switching to %s \n\n    %s", v29, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return;
      }
    }
    __break(1u);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
LABEL_8:
    if (qword_1000FBDE0 == -1) {
      goto LABEL_9;
    }
    goto LABEL_38;
  }
  uint64_t v5 = 33;
  while (1)
  {
    uint64_t v6 = v5 - 31;
    if (__OFADD__(v5 - 32, 1)) {
      break;
    }
    if (*(unsigned char *)(v3 + v5) != 1) {
      goto LABEL_17;
    }
    ++v5;
    if (v6 == v4) {
      goto LABEL_8;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  swift_once();
LABEL_9:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000929C(v7, (uint64_t)qword_10010A568);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(oslog, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    v33[0] = v10;
    if (a2) {
      uint64_t v11 = 1751607656;
    }
    else {
      uint64_t v11 = 7827308;
    }
    if (a2) {
      unint64_t v12 = 0xE400000000000000;
    }
    else {
      unint64_t v12 = 0xE300000000000000;
    }
    uint64_t v35 = sub_100017098(v11, v12, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Successfully switched to %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_10005EEB8(unint64_t *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  unint64_t v5 = *a1;
  swift_beginAccess();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_100097720(v6);
  swift_bridgeObjectRelease();
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 >= v7[2])
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  os_log_type_t v8 = &v7[2 * v5];
  uint64_t v10 = v8[4];
  uint64_t v9 = v8[5];
  swift_bridgeObjectRetain();
  swift_release();
  v11._uint64_t countAndFlagsBits = 8250;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  if (v5 >= *(void *)(a2 + 16))
  {
LABEL_10:
    __break(1u);
    return;
  }
  if (*(unsigned char *)(a2 + v5 + 32)) {
    uint64_t v12 = 0x53534543435553;
  }
  else {
    uint64_t v12 = 0x4552554C494146;
  }
  unint64_t v13 = 0xE700000000000000;
  String.append(_:)(*(Swift::String *)&v12);
  swift_bridgeObjectRelease();
  *a3 = v10;
  a3[1] = v9;
}

uint64_t sub_10005EFDC()
{
  sub_10001C234();
  *(unsigned char *)(v1 + 129) = v2;
  *(unsigned char *)(v1 + 128) = v3;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v0;
  uint64_t v5 = type metadata accessor for SportsActivityContentState();
  *(void *)(v1 + 32) = v5;
  sub_10000984C(v5);
  *(void *)(v1 + 40) = v6;
  *(void *)(v1 + 48) = sub_1000618BC();
  uint64_t v7 = sub_100005E5C(&qword_1000FDDA0);
  *(void *)(v1 + 56) = v7;
  sub_10000984C(v7);
  *(void *)(v1 + 64) = v8;
  *(void *)(v1 + 72) = sub_1000618BC();
  sub_10001CAE8();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_10005F0A4()
{
  sub_10001C234();
  if (qword_1000FBD90 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10010A4D0;
  return _swift_task_switch(sub_10005F134, v0, 0);
}

uint64_t sub_10005F134()
{
  *(void *)(v0 + 80) = *(void *)(*(void *)(v0 + 24) + 104);
  return sub_1000616A8((uint64_t)sub_10005F158, 0);
}

uint64_t sub_10005F158()
{
  sub_10001C234();
  *(void *)(v0 + 88) = SportingEventSubscription.canonicalId.getter();
  *(void *)(v0 + 96) = v1;
  uint64_t v2 = qword_10010A4D0;
  return _swift_task_switch(sub_10005F1C4, v2, 0);
}

uint64_t sub_10005F1C4()
{
  sub_10001C234();
  *(void *)(v0 + 104) = sub_100055D54();
  swift_bridgeObjectRelease();
  sub_10001CAE8();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10005F238()
{
  if (v0[13])
  {
    dispatch thunk of Activity.content.getter();
    ActivityContent.state.getter();
    sub_100061A40();
    v1();
    SportsActivityContentState.isWaitingForUserConsent.getter();
    uint64_t v2 = sub_100061A4C();
    v3(v2);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[14] = (uint64_t)v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10005F398;
    sub_100061A94(v0[2]);
    return sub_10005940C();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10001C298();
    return v6();
  }
}

uint64_t sub_10005F398()
{
  sub_10001C234();
  sub_10001C208();
  sub_10001C240();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_100046EF8();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  sub_10001CAE8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10005F474()
{
  sub_10001C234();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C298();
  return v0();
}

uint64_t sub_10005F4E0()
{
  sub_10001C234();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001C2E0();
  return v0();
}

uint64_t sub_10005F554()
{
  sub_100061880();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_100051B58(v0);
  swift_bridgeObjectRelease();
  return v1;
}

id sub_10005F5B8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }
  id v4 = [v2 initWithSuiteName:v3];

  return v4;
}

id sub_10005F61C(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_10005F6FC()
{
  sub_10001C28C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004D458(v0);
  void *v1 = v2;
  v1[1] = sub_100046ECC;
  uint64_t v3 = sub_1000619AC();
  return sub_100057334(v3, v4, v5, v6);
}

uint64_t sub_10005F794(void (*a1)(uint64_t *__return_ptr))
{
  a1(&v2);
  Array.description.getter();
  swift_bridgeObjectRelease();
  return sub_100061A64();
}

uint64_t sub_10005F7F8()
{
  sub_10001C28C();
  uint64_t v1 = v0;
  id v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_10004D458(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_10005F8C8;
  return v7(v1);
}

uint64_t sub_10005F8C8()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v1 = *v0;
  sub_100046EF8();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_10001C298();
  return v3();
}

uint64_t sub_10005F98C()
{
  sub_10001C28C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004D458(v0);
  void *v1 = v2;
  v1[1] = sub_100046ECC;
  uint64_t v3 = sub_1000619AC();
  return sub_100057974(v3, v4, v5, v6);
}

uint64_t sub_10005FA24()
{
  return sub_1000609E0(49);
}

uint64_t sub_10005FA2C()
{
  sub_10001C690();
  sub_100061AA0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004D458(v0);
  void *v1 = v2;
  v1[1] = sub_100046ECC;
  uint64_t v3 = sub_100061824();
  return sub_100058E88(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_10005FAC4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptySetSingleton;
    goto LABEL_25;
  }
  sub_100005E5C(&qword_1000FC7F0);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v3 = (unsigned char *)result;
  uint64_t v24 = *(void *)(a1 + 16);
  if (!v24)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 56;
  while (v4 < *(void *)(a1 + 16))
  {
    uint64_t v6 = (uint64_t *)(a1 + 32 + 16 * v4);
    uint64_t v8 = *v6;
    uint64_t v7 = v6[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v9 = -1 << v3[32];
    unint64_t v10 = result & ~v9;
    unint64_t v11 = v10 >> 6;
    uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
    uint64_t v13 = 1 << v10;
    if (((1 << v10) & v12) != 0)
    {
      uint64_t v14 = *((void *)v3 + 6);
      os_log_type_t v15 = (void *)(v14 + 16 * v10);
      BOOL v16 = *v15 == v8 && v15[1] == v7;
      if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
      {
LABEL_11:
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      uint64_t v17 = ~v9;
      while (1)
      {
        unint64_t v10 = (v10 + 1) & v17;
        unint64_t v11 = v10 >> 6;
        uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
        uint64_t v13 = 1 << v10;
        if ((v12 & (1 << v10)) == 0) {
          break;
        }
        unint64_t v18 = (void *)(v14 + 16 * v10);
        if (*v18 != v8 || v18[1] != v7)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_11;
      }
    }
    *(void *)(v5 + 8 * v11) = v13 | v12;
    uint64_t v20 = (void *)(*((void *)v3 + 6) + 16 * v10);
    *uint64_t v20 = v8;
    v20[1] = v7;
    uint64_t v21 = *((void *)v3 + 2);
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_27;
    }
    *((void *)v3 + 2) = v23;
LABEL_22:
    if (++v4 == v24) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_10005FC94()
{
  sub_1000098B8();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MetricsFieldExclusionRequest();
  sub_10000C568();
  uint64_t v32 = v3;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v36 = (char *)&v27 - v8;
  if (*(void *)(v1 + 16)
    && (sub_100005E5C(&qword_1000FDDF8),
        uint64_t v9 = static _SetStorage.allocate(capacity:)(),
        uint64_t v10 = v9,
        (uint64_t v31 = *(void *)(v1 + 16)) != 0))
  {
    unint64_t v11 = 0;
    uint64_t v30 = v1 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
    uint64_t v34 = v32 + 16;
    uint64_t v35 = v9 + 56;
    uint64_t v12 = (void (**)(char *, uint64_t))(v32 + 8);
    uint64_t v28 = v1;
    uint64_t v29 = (void (**)(uint64_t, char *, uint64_t))(v32 + 32);
    while (v11 < *(void *)(v1 + 16))
    {
      uint64_t v13 = *(void *)(v32 + 72);
      uint64_t v14 = *(void (**)(void))(v32 + 16);
      sub_100061ADC();
      v14();
      sub_100060508(&qword_1000FDE00, 255, (void (*)(uint64_t))&type metadata accessor for MetricsFieldExclusionRequest);
      uint64_t v15 = dispatch thunk of Hashable._rawHashValue(seed:)() & ~(-1 << *(unsigned char *)(v10 + 32));
      sub_1000618F4();
      if ((v18 & v17) != 0)
      {
        unint64_t v33 = v11;
        uint64_t v20 = ~v19;
        while (1)
        {
          sub_100061ADC();
          v14();
          sub_100060508(&qword_1000FDE08, 255, (void (*)(uint64_t))&type metadata accessor for MetricsFieldExclusionRequest);
          char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
          BOOL v22 = *v12;
          (*v12)(v6, v2);
          if (v21) {
            break;
          }
          uint64_t v15 = (v15 + 1) & v20;
          sub_1000618F4();
          if ((v17 & v18) == 0)
          {
            uint64_t v1 = v28;
            unint64_t v11 = v33;
            goto LABEL_10;
          }
        }
        v22(v36, v2);
        uint64_t v1 = v28;
        unint64_t v11 = v33;
      }
      else
      {
LABEL_10:
        uint64_t v23 = v36;
        *(void *)(v35 + 8 * v16) = v18 | v17;
        (*v29)(*(void *)(v10 + 48) + v15 * v13, v23, v2);
        uint64_t v24 = *(void *)(v10 + 16);
        BOOL v25 = __OFADD__(v24, 1);
        uint64_t v26 = v24 + 1;
        if (v25) {
          goto LABEL_16;
        }
        *(void *)(v10 + 16) = v26;
      }
      if (++v11 == v31) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    sub_1000098A0();
  }
}

unsigned char *sub_10005FF7C(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_100005E5C(&qword_1000FDDE8);
    uint64_t v2 = static _SetStorage.allocate(capacity:)();
    uint64_t v3 = (unsigned char *)v2;
    uint64_t v27 = *(void *)(v1 + 16);
    if (v27)
    {
      unint64_t v4 = 0;
      uint64_t v5 = v2 + 56;
      uint64_t v25 = v1;
      uint64_t v26 = v1 + 32;
      do
      {
        if (v4 >= *(void *)(v1 + 16))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          JUMPOUT(0x100060298);
        }
        int v6 = *(unsigned __int8 *)(v26 + v4++);
        Hasher.init(_seed:)();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v7 = Hasher._finalize()();
        uint64_t v8 = ~(-1 << v3[32]);
        unint64_t v9 = v7 & v8;
        unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
        uint64_t v11 = *(void *)(v5 + 8 * v10);
        uint64_t v12 = 1 << (v7 & v8);
        if ((v12 & v11) != 0)
        {
          while (1)
          {
            unint64_t v13 = 0x80000001000D04C0;
            unint64_t v14 = 0xD000000000000010;
            switch(*(unsigned char *)(*((void *)v3 + 6) + v9))
            {
              case 1:
                uint64_t v15 = "com.apple.sports";
                goto LABEL_9;
              case 2:
                unint64_t v14 = 0xD000000000000011;
                uint64_t v15 = "com.apple.Dazzle";
LABEL_9:
                unint64_t v13 = (unint64_t)v15 | 0x8000000000000000;
                break;
              case 3:
                unint64_t v14 = 0x6C7070612E6D6F63;
                unint64_t v13 = 0xEC00000076742E65;
                break;
              default:
                break;
            }
            unint64_t v16 = 0x80000001000D04C0;
            unint64_t v17 = 0xD000000000000010;
            switch(v6)
            {
              case 1:
                uint64_t v18 = "com.apple.sports";
                goto LABEL_14;
              case 2:
                unint64_t v17 = 0xD000000000000011;
                uint64_t v18 = "com.apple.Dazzle";
LABEL_14:
                unint64_t v16 = (unint64_t)v18 | 0x8000000000000000;
                break;
              case 3:
                unint64_t v17 = 0x6C7070612E6D6F63;
                unint64_t v16 = 0xEC00000076742E65;
                break;
              default:
                break;
            }
            if (v14 == v17 && v13 == v16) {
              break;
            }
            char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v20) {
              goto LABEL_25;
            }
            unint64_t v9 = (v9 + 1) & v8;
            unint64_t v10 = v9 >> 6;
            uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
            uint64_t v12 = 1 << v9;
            if ((v11 & (1 << v9)) == 0) {
              goto LABEL_22;
            }
          }
          swift_bridgeObjectRelease_n();
        }
        else
        {
LABEL_22:
          *(void *)(v5 + 8 * v10) = v12 | v11;
          *(unsigned char *)(*((void *)v3 + 6) + v9) = v6;
          uint64_t v21 = *((void *)v3 + 2);
          BOOL v22 = __OFADD__(v21, 1);
          uint64_t v23 = v21 + 1;
          if (v22) {
            goto LABEL_30;
          }
          *((void *)v3 + 2) = v23;
        }
LABEL_25:
        uint64_t v1 = v25;
      }
      while (v4 != v27);
    }
  }
  else
  {
    uint64_t v3 = &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1000602C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005E5C(&qword_1000FDDB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100060330()
{
  sub_10001C28C();
  sub_1000619C4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004D458(v0);
  void *v1 = v2;
  v1[1] = sub_100046ECC;
  uint64_t v3 = sub_100061674();
  return v4(v3);
}

uint64_t sub_1000603C4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000603FC(char *a1)
{
  return sub_100057780(a1);
}

uint64_t sub_100060404()
{
  return sub_10006040C(41);
}

uint64_t sub_10006040C(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100060458()
{
  sub_10006179C();
  sub_10001C690();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004D458(v0);
  void *v1 = v2;
  v1[1] = sub_100046ECC;
  sub_10001C898();
  return sub_1000578B0(v3, v4, v5, v6, v7);
}

uint64_t sub_100060508(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100060550()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100060598()
{
  sub_10001C690();
  sub_100061AA0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004D458(v0);
  void *v1 = v2;
  v1[1] = sub_100046ECC;
  uint64_t v3 = sub_100061824();
  return sub_10005B830(v3);
}

uint64_t sub_100060630(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100060710;
  return v5(v2 + 32);
}

uint64_t sub_100060710()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v2 = v1;
  sub_10001C240();
  *uint64_t v3 = v2;
  uint64_t v5 = *(unsigned char **)(v4 + 16);
  uint64_t v6 = *v0;
  sub_100046EF8();
  *char v7 = v6;
  swift_task_dealloc();
  *uint64_t v5 = *(unsigned char *)(v2 + 32);
  sub_10001C298();
  return v8();
}

uint64_t sub_1000607E8()
{
  sub_10001C28C();
  sub_1000619C4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004D458(v0);
  void *v1 = v2;
  v1[1] = sub_100046ECC;
  uint64_t v3 = sub_100061674();
  return v4(v3);
}

unint64_t sub_10006087C()
{
  unint64_t result = qword_1000FDE48;
  if (!qword_1000FDE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000FDE48);
  }
  return result;
}

uint64_t sub_1000608CC()
{
  sub_10006179C();
  sub_10001C690();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004D458(v0);
  void *v1 = v2;
  v1[1] = sub_100046ECC;
  sub_1000618A0();
  sub_10001C898();
  return sub_10005BA44(v3, v4, v5, v6, v7);
}

uint64_t sub_100060964()
{
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_10006199C();

  return _swift_deallocObject(v0, v1, v2);
}

void sub_100060994(void *a1)
{
  sub_1000557C4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10006099C()
{
  swift_release();
  swift_release();
  uint64_t v0 = sub_10006199C();

  return _swift_deallocObject(v0, v1, v2);
}

void sub_1000609D4()
{
}

uint64_t sub_1000609E0(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100060A34()
{
  sub_10006179C();
  sub_10001C690();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004D458(v0);
  void *v1 = v2;
  v1[1] = sub_100046C4C;
  sub_1000618A0();
  sub_10001C898();
  return sub_100053E64(v3, v4, v5, v6, v7);
}

uint64_t sub_100060ACC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100060B1C(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)sub_10004D458(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_100046ECC;
  return sub_10005E234(a1, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_100060BF0()
{
  sub_10001C28C();
  sub_1000619C4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10004D458(v0);
  void *v1 = v2;
  v1[1] = sub_100046C4C;
  uint64_t v3 = sub_100061674();
  return v4(v3);
}

uint64_t sub_100060C84()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100060CBC(uint64_t *a1)
{
  return sub_10005E34C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_100060CC8()
{
  swift_release();
  uint64_t v0 = sub_10006199C();

  return _swift_deallocObject(v0, v1, v2);
}

void sub_100060CF8(uint64_t *a1)
{
  sub_10005E9CC(a1, *(unsigned char *)(v1 + 16));
}

uint64_t _s20RegistrationResponseV5LinksV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_100060D8C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100060E58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for LiveActivityTarget()
{
}

unint64_t sub_100060E90()
{
  unint64_t result = qword_1000FDF10;
  if (!qword_1000FDF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FDF10);
  }
  return result;
}

uint64_t type metadata accessor for SportsActivityManagedContext()
{
  uint64_t result = qword_1000FDF70;
  if (!qword_1000FDF70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100060F24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsActivityManagedContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100060F88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    BOOL v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_100061070(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1000610E8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  BOOL v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_100061180(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  BOOL v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_10006121C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100061298(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100061324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100061338);
}

uint64_t sub_100061338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return sub_1000082E8(v9, a2, v8);
  }
}

uint64_t sub_1000613C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000613D4);
}

uint64_t sub_1000613D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return sub_1000082C0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_100061454()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *sub_1000614EC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000615B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for LiveActivityUpdateLimit()
{
}

unint64_t sub_1000615F0()
{
  unint64_t result = qword_1000FDFA8;
  if (!qword_1000FDFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FDFA8);
  }
  return result;
}

uint64_t sub_10006165C()
{
  return *(void *)(v0 + 64);
}

uint64_t sub_100061674()
{
  return v0;
}

uint64_t sub_100061690()
{
  return v0;
}

uint64_t sub_1000616A8(uint64_t a1, uint64_t a2)
{
  return _swift_task_switch(a1, a2, 0);
}

uint64_t sub_1000616C8()
{
  return swift_task_dealloc();
}

uint64_t sub_1000616E8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_1000616FC()
{
  return *(void *)(v0 + 160) != 0;
}

uint64_t sub_100061748()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_10006176C()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1000617B0()
{
  return *(void *)(v0 + 536);
}

uint64_t sub_1000617D4()
{
  return v0;
}

uint64_t sub_1000617E8(uint64_t result)
{
  *(void *)(v1 + 120) = result;
  return result;
}

uint64_t sub_100061804()
{
  return swift_dynamicCast();
}

uint64_t sub_100061824()
{
  return v0;
}

uint64_t sub_100061844()
{
  return v0;
}

uint64_t sub_100061858()
{
  return v0;
}

uint64_t sub_100061874()
{
  return v0;
}

uint64_t sub_100061880()
{
  return swift_beginAccess();
}

uint64_t sub_100061898()
{
  return sub_10006040C(40);
}

uint64_t sub_1000618A0()
{
  return v0;
}

uint64_t sub_1000618BC()
{
  return swift_task_alloc();
}

uint64_t sub_1000618D4()
{
  return sub_1000609E0(48);
}

uint64_t sub_1000618DC()
{
  return v0;
}

uint64_t sub_10006190C()
{
  return v0;
}

uint64_t sub_10006191C()
{
  return v0;
}

uint64_t sub_100061944()
{
  return dispatch thunk of Activity.activityStateUpdates.getter();
}

uint64_t sub_100061984()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_10006199C()
{
  return v0;
}

uint64_t sub_1000619AC()
{
  return v0;
}

uint64_t sub_1000619DC(uint64_t a1)
{
  return sub_1000082E8(a1, 1, v1);
}

void sub_1000619FC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

uint64_t sub_100061A1C()
{
  return swift_allocObject();
}

uint64_t sub_100061A34()
{
  return v0;
}

uint64_t sub_100061A4C()
{
  return v0;
}

uint64_t sub_100061A58()
{
  return v0;
}

uint64_t sub_100061A64()
{
  return v0;
}

uint64_t sub_100061A70()
{
  return swift_slowAlloc();
}

uint64_t sub_100061A94@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_100061AB4()
{
  return 0x207265746661;
}

uint64_t sub_100061AF0()
{
  return swift_task_alloc();
}

uint64_t sub_100061B10@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v30 = a7;
  uint64_t v31 = a8;
  uint64_t v16 = type metadata accessor for Date();
  sub_100009830();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a9 = a1;
  sub_100008CAC(a2, (uint64_t)(a9 + 1));
  a9[6] = a3;
  a9[7] = a4;
  FullApsMessageOperation = (int *)type metadata accessor for SubscriptionFetchFullApsMessageOperation();
  uint64_t v23 = (char *)a9 + FullApsMessageOperation[7];
  uint64_t v24 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v23, a5, v24);
  *((unsigned char *)a9 + FullApsMessageOperation[8]) = a6;
  uint64_t v25 = (void *)((char *)a9 + FullApsMessageOperation[9]);
  uint64_t v26 = v31;
  *uint64_t v25 = v30;
  v25[1] = v26;
  uint64_t v27 = FullApsMessageOperation[10];
  Date.init()();
  uint64_t v28 = sub_1000A268C();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v21, v16);
  *(void *)((char *)a9 + v27) = v28;
  return result;
}

uint64_t type metadata accessor for SubscriptionFetchFullApsMessageOperation()
{
  uint64_t result = qword_1000FE008;
  if (!qword_1000FE008) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100061CBC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    v11(a1 + 8, v8, v10);
    uint64_t v12 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v12;
    uint64_t v13 = a3[7];
    uint64_t v14 = a1 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    uint64_t v16 = type metadata accessor for URL();
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
    uint64_t v18 = a3[9];
    *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    *(void *)(a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100061E2C(uint64_t a1, uint64_t a2)
{
  swift_release();
  sub_100006178(a1 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100061ECC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  long long v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  uint64_t v16 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100061FF4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  sub_100008E94(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  long long v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v10 = a3[9];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t sub_100062100(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1000621CC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  sub_100006178(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1000622C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000622D4);
}

uint64_t sub_1000622D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 28);
    return sub_1000082E8(v9, a2, v8);
  }
}

uint64_t sub_10006235C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100062370);
}

void *sub_100062370(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 28);
    return (void *)sub_1000082C0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1000623F0()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000624B8(uint64_t a1)
{
  uint64_t v36 = &_swiftEmptyDictionarySingleton;
  sub_10008DAAC(a1, v37);
  uint64_t v1 = v37[0];
  uint64_t v25 = v37[1];
  int64_t v2 = v37[3];
  unint64_t v3 = v37[4];
  int64_t v38 = (unint64_t)(v37[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v5 = __clz(__rbit64(v3));
  v3 &= v3 - 1;
  unint64_t v6 = v5 | (v2 << 6);
  while (1)
  {
    char v11 = *(unsigned char *)(*(void *)(v1 + 48) + v6);
    sub_100037E68(*(void *)(v1 + 56) + 32 * v6, (uint64_t)v34 + 8);
    LOBYTE(v34[0]) = v11;
    v32[0] = v34[0];
    v32[1] = v34[1];
    uint64_t v33 = v35;
    sub_100037E68((uint64_t)v32 + 8, (uint64_t)&v26);
    if (!v27)
    {
      sub_100064764((uint64_t)v32, &qword_1000FD308);
      uint64_t v20 = &v26;
      goto LABEL_33;
    }
    sub_100028F5C(&v26, v31);
    char v12 = v32[0];
    char v29 = v32[0];
    sub_100009F4C((uint64_t)v32 + 8, (uint64_t)v30);
    sub_100028F5C(v31, v28);
    uint64_t v13 = v36;
    unint64_t v14 = v36[2];
    if (v36[3] <= v14)
    {
      sub_1000C0A44(v14 + 1, 1);
      uint64_t v13 = v36;
    }
    Hasher.init(_seed:)();
    sub_1000990CC(v12);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v15 = v13 + 8;
    uint64_t v16 = -1 << *((unsigned char *)v13 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~v13[(v17 >> 6) + 8]) == 0) {
      break;
    }
    unint64_t v19 = __clz(__rbit64((-1 << v17) & ~v13[(v17 >> 6) + 8])) | v17 & 0x7FFFFFFFFFFFFFC0;
LABEL_32:
    *(void *)((char *)v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(unsigned char *)(v13[6] + v19) = v12;
    sub_100028F5C(v28, (_OWORD *)(v13[7] + 32 * v19));
    ++v13[2];
    uint64_t v20 = (long long *)v30;
LABEL_33:
    uint64_t result = sub_100064764((uint64_t)v20, (uint64_t *)&unk_1000FC300);
    if (v3) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v7 = v2 + 1;
    if (__OFADD__(v2, 1)) {
      goto LABEL_37;
    }
    if (v7 >= v38) {
      goto LABEL_35;
    }
    unint64_t v8 = *(void *)(v25 + 8 * v7);
    int64_t v9 = v2 + 1;
    if (!v8)
    {
      int64_t v9 = v2 + 2;
      if (v2 + 2 >= v38) {
        goto LABEL_35;
      }
      unint64_t v8 = *(void *)(v25 + 8 * v9);
      if (!v8)
      {
        int64_t v9 = v2 + 3;
        if (v2 + 3 >= v38) {
          goto LABEL_35;
        }
        unint64_t v8 = *(void *)(v25 + 8 * v9);
        if (!v8)
        {
          int64_t v9 = v2 + 4;
          if (v2 + 4 >= v38) {
            goto LABEL_35;
          }
          unint64_t v8 = *(void *)(v25 + 8 * v9);
          if (!v8)
          {
            int64_t v9 = v2 + 5;
            if (v2 + 5 >= v38) {
              goto LABEL_35;
            }
            unint64_t v8 = *(void *)(v25 + 8 * v9);
            if (!v8)
            {
              int64_t v10 = v2 + 6;
              while (v10 < v38)
              {
                unint64_t v8 = *(void *)(v25 + 8 * v10++);
                if (v8)
                {
                  int64_t v9 = v10 - 1;
                  goto LABEL_18;
                }
              }
LABEL_35:
              sub_10001BB94();
              return (uint64_t)v36;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v3 = (v8 - 1) & v8;
    unint64_t v6 = __clz(__rbit64(v8)) + (v9 << 6);
    int64_t v2 = v9;
  }
  char v21 = 0;
  unint64_t v22 = (unint64_t)(63 - v16) >> 6;
  while (++v18 != v22 || (v21 & 1) == 0)
  {
    BOOL v23 = v18 == v22;
    if (v18 == v22) {
      unint64_t v18 = 0;
    }
    v21 |= v23;
    uint64_t v24 = v15[v18];
    if (v24 != -1)
    {
      unint64_t v19 = __clz(__rbit64(~v24)) + (v18 << 6);
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100062830()
{
  uint64_t FullApsMessageOperation = type metadata accessor for SubscriptionFetchFullApsMessageOperation();
  uint64_t v41 = *(void *)(FullApsMessageOperation - 8);
  uint64_t v40 = *(void *)(v41 + 64);
  __chkstk_darwin(FullApsMessageOperation);
  uint64_t v38 = (uint64_t)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  sub_100009830();
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v8);
  int64_t v9 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v12 = (char *)&v36 - v11;
  uint64_t v43 = sub_100005E5C(&qword_1000FE058);
  sub_100009830();
  uint64_t v45 = v13;
  __chkstk_darwin(v14);
  sub_10000C58C();
  uint64_t v39 = v15;
  uint64_t v44 = sub_100005E5C(&qword_1000FE060);
  sub_100009830();
  uint64_t v46 = v16;
  __chkstk_darwin(v17);
  sub_10000C58C();
  uint64_t v42 = v18;
  unint64_t v19 = sub_100005EA0((void *)(v0 + 8), *(void *)(v0 + 32));
  uint64_t v37 = v0;
  URL.appendingPathComponent(_:)();
  uint64_t v20 = sub_100062D0C();
  uint64_t v36 = sub_100005EA0(v19, v19[3]);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v12, v3);
  uint64_t v21 = sub_1000804E0();
  unint64_t v22 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v23 = (v7 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v24 + v22, v9, v3);
  *(void *)(v24 + v23) = v21;
  uint64_t v25 = v19[5];
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_100064084((uint64_t)sub_100063FF4, v24, v20, 0, v25, (uint64_t)v36);
  swift_bridgeObjectRelease_n();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v3);
  uint64_t v47 = v26;
  uint64_t v27 = v37;
  uint64_t v28 = v38;
  sub_100064388(v37, v38);
  unint64_t v29 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v30 = swift_allocObject();
  sub_1000643F0(v28, v30 + v29);
  sub_100005E5C(&qword_1000FE068);
  sub_10000953C(&qword_1000FE070, &qword_1000FE068);
  Publisher.catch<A>(_:)();
  swift_release();
  swift_release();
  sub_100064388(v27, v28);
  uint64_t v31 = swift_allocObject();
  sub_1000643F0(v28, v31 + v29);
  sub_10000953C(&qword_1000FE078, &qword_1000FE058);
  Publisher.tryMap<A>(_:)();
  swift_release();
  sub_100009894();
  v32();
  sub_10000953C(&qword_1000FE080, &qword_1000FE060);
  uint64_t v33 = Publisher.eraseToAnyPublisher()();
  sub_100009894();
  v34();
  return v33;
}

uint64_t sub_100062D0C()
{
  uint64_t v1 = v0;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t FullApsMessageOperation = type metadata accessor for SubscriptionFetchFullApsMessageOperation();
  uint64_t v9 = *(int *)(FullApsMessageOperation + 32);
  sub_100005EA0((void *)(v5 + 16), *(void *)(v5 + 40));
  uint64_t v10 = (void *)dispatch thunk of PersistentStorable.retrieveEventSubscription(canonicalId:isConventionalOrUnified:)();
  sub_100005E5C(&qword_1000FCC08);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000CB6A0;
  *(unsigned char *)(inited + 32) = 2;
  *(void *)(inited + 64) = &type metadata for String;
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 48) = v7;
  *(unsigned char *)(inited + 72) = 7;
  swift_bridgeObjectRetain();
  Date.init()();
  uint64_t v12 = sub_1000A268C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v17);
  *(void *)(inited + 104) = &type metadata for UInt64;
  *(void *)(inited + 80) = v12;
  *(unsigned char *)(inited + 112) = 8;
  uint64_t v13 = *(void *)((char *)v1 + *(int *)(FullApsMessageOperation + 40));
  *(void *)(inited + 144) = &type metadata for UInt64;
  *(void *)(inited + 120) = v13;
  LOBYTE(v13) = *((unsigned char *)v1 + v9);
  *(unsigned char *)(inited + 152) = 43;
  *(void *)(inited + 184) = &type metadata for Bool;
  *(unsigned char *)(inited + 160) = v13;
  *(unsigned char *)(inited + 192) = 44;
  *(void *)(inited + 224) = &type metadata for EventType.EventName;
  *(unsigned char *)(inited + 200) = 4;
  sub_100005E5C((uint64_t *)&unk_1000FC300);
  sub_100027288();
  uint64_t v14 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v15 = sub_1000624B8(v14);
  swift_bridgeObjectRelease();

  return v15;
}

uint64_t sub_100062F48@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_100005E5C(&qword_1000FE090);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t FullApsMessageOperation = type metadata accessor for SubscriptionFetchFullApsMessageOperation();
  __chkstk_darwin(FullApsMessageOperation - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  if (qword_1000FBDC0 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000929C(v14, (uint64_t)qword_10010A508);
  sub_100064388(a2, (uint64_t)v12);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v27 = v13;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v29 = v7;
    uint64_t v31 = v18;
    uint64_t v28 = v9;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v26 = v17 + 4;
    uint64_t v19 = v6;
    uint64_t v20 = a3;
    uint64_t v21 = *((void *)v12 + 6);
    unint64_t v22 = *((void *)v12 + 7);
    swift_bridgeObjectRetain();
    uint64_t v23 = v21;
    a3 = v20;
    uint64_t v6 = v19;
    uint64_t v13 = v27;
    uint64_t v30 = sub_100017098(v23, v22, &v31);
    uint64_t v9 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100064618((uint64_t)v12);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Failed to parse full APS message for canonical id: %s.", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v7 = v29;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100064618((uint64_t)v12);
  }

  uint64_t v31 = v13;
  swift_errorRetain();
  sub_100005E5C(&qword_1000FE088);
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  Fail.init(error:)();
  sub_10000953C(&qword_1000FE098, &qword_1000FE090);
  uint64_t v24 = Publisher.eraseToAnyPublisher()();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a3 = v24;
  return result;
}

void sub_10006328C(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100005E5C(&qword_1000FC938);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t FullApsMessageOperation = type metadata accessor for SubscriptionFetchFullApsMessageOperation();
  __chkstk_darwin(FullApsMessageOperation);
  uint64_t v72 = (uint64_t)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v69 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v69 - v17;
  uint64_t v19 = *(void *)(a1 + *(int *)(sub_100005E5C(&qword_1000FE088) + 40));
  unint64_t v20 = *(void *)(v19 + *(void *)(*(void *)v19 + 184));
  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_3;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    if (qword_1000FBDC0 != -1) {
      swift_once();
    }
    uint64_t v63 = type metadata accessor for Logger();
    sub_10000929C(v63, (uint64_t)qword_10010A508);
    sub_100064388((uint64_t)a2, (uint64_t)v18);
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = (uint8_t *)swift_slowAlloc();
      uint64_t v75 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 136315138;
      uint64_t v67 = *((void *)v18 + 6);
      unint64_t v68 = *((void *)v18 + 7);
      swift_bridgeObjectRetain();
      uint64_t v77 = sub_100017098(v67, v68, (uint64_t *)&v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100064618((uint64_t)v18);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Missing event with canonical id %s in full APS message.", v66, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100064618((uint64_t)v18);
    }

    sub_10002EEB8(5u, 0xD000000000000014, 0x80000001000D23B0);
    swift_willThrow();
    return;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_23;
  }
LABEL_3:
  uint64_t v70 = a3;
  sub_100097604(0, (v20 & 0xC000000000000001) == 0, v20);
  uint64_t v71 = v4;
  if ((v20 & 0xC000000000000001) != 0) {
    id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v22 = *(id *)(v20 + 32);
  }
  uint64_t v73 = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *a2;
  uint64_t v74 = a2;
  sub_100005EA0((void *)(v23 + 16), *(void *)(v23 + 40));
  uint64_t v24 = (void *)dispatch thunk of PersistentStorable.retrieveEventSubscription(canonicalId:isConventionalOrUnified:)();
  if (v24)
  {
    uint64_t v25 = v24;
    id v26 = v24;
    uint64_t v27 = v73;
    sub_100063B8C(v19, v73, v25);

    uint64_t v28 = (void *)SportingEvent.partialSportingEvent.getter();
    uint64_t v29 = dispatch thunk of SportingEvent.versionNumber.getter();

    uint64_t v30 = (void *)SportingEventSubscription.sportingEventDetails.getter();
    uint64_t v31 = dispatch thunk of SportingEvent.versionNumber.getter();

    if (v29 >= v31)
    {
      long long v55 = (void *)SportingEvent.partialSportingEvent.getter();
      uint64_t v56 = type metadata accessor for Date();
      sub_1000082C0((uint64_t)v10, 1, 1, v56);
      SportingEventSubscription.update(sportingEventDetails:updatedAt:)();

      sub_100064764((uint64_t)v10, &qword_1000FC938);
      sub_100005EA0((void *)(*v74 + 16), *(void *)(*v74 + 40));
      uint64_t v57 = v71;
      dispatch thunk of PersistentStorable.writeEventSubscription(_:isConventionalOrUnified:)();
      if (v57)
      {

        return;
      }
    }
    else
    {
      uint64_t v32 = (uint64_t)v74;
      if (qword_1000FBDC0 != -1) {
        swift_once();
      }
      uint64_t v33 = type metadata accessor for Logger();
      sub_10000929C(v33, (uint64_t)qword_10010A508);
      uint64_t v34 = v72;
      sub_100064388(v32, v72);
      id v35 = v26;
      id v36 = v27;
      id v37 = v35;
      id v38 = v36;
      uint64_t v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = swift_slowAlloc();
        uint64_t v74 = (void *)swift_slowAlloc();
        uint64_t v75 = v74;
        *(_DWORD *)uint64_t v41 = 136315650;
        uint64_t v43 = *(void *)(v34 + 48);
        unint64_t v42 = *(void *)(v34 + 56);
        swift_bridgeObjectRetain();
        uint64_t v77 = sub_100017098(v43, v42, (uint64_t *)&v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100064618(v34);
        *(_WORD *)(v41 + 12) = 2048;
        uint64_t v44 = (void *)SportingEvent.partialSportingEvent.getter();
        uint64_t v45 = dispatch thunk of SportingEvent.versionNumber.getter();

        uint64_t v77 = v45;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        *(_WORD *)(v41 + 22) = 2048;
        uint64_t v46 = (void *)SportingEventSubscription.sportingEventDetails.getter();
        uint64_t v47 = dispatch thunk of SportingEvent.versionNumber.getter();

        uint64_t v77 = v47;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Skipped stale subscription when fetching full APS message for canonical id: %s. (%ld < %ld)", (uint8_t *)v41, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_100064618(v34);
      }
    }
    *uint64_t v70 = 1;
  }
  else
  {
    if (qword_1000FBDC0 != -1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    sub_10000929C(v48, (uint64_t)qword_10010A508);
    uint64_t v49 = (uint64_t)v74;
    sub_100064388((uint64_t)v74, (uint64_t)v15);
    uint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v50, v51))
    {
      long long v52 = (uint8_t *)swift_slowAlloc();
      uint64_t v75 = (void *)swift_slowAlloc();
      *(_DWORD *)long long v52 = 136315138;
      uint64_t v53 = *((void *)v15 + 6);
      unint64_t v54 = *((void *)v15 + 7);
      swift_bridgeObjectRetain();
      uint64_t v77 = sub_100017098(v53, v54, (uint64_t *)&v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100064618((uint64_t)v15);
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Missing subscription when fetching full APS message for canonical id: %s.", v52, 0xCu);
      swift_arrayDestroy();
      uint64_t v49 = (uint64_t)v74;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100064618((uint64_t)v15);
    }

    unint64_t v58 = v73;
    uint64_t v75 = 0;
    uint64_t v76 = 0xE000000000000000;
    _StringGuts.grow(_:)(72);
    v59._uint64_t countAndFlagsBits = 0xD000000000000046;
    v59._object = (void *)0x80000001000D2360;
    String.append(_:)(v59);
    uint64_t v61 = *(void *)(v49 + 48);
    uint64_t v60 = *(void **)(v49 + 56);
    swift_bridgeObjectRetain();
    v62._uint64_t countAndFlagsBits = v61;
    v62._object = v60;
    String.append(_:)(v62);
    swift_bridgeObjectRelease();
    sub_10002EEB8(3u, (uint64_t)v75, v76);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
}

void sub_100063B8C(uint64_t a1, void *a2, void *a3)
{
  if (qword_1000FBDC0 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000929C(v6, (uint64_t)qword_10010A508);
  swift_retain_n();
  id v7 = a2;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136316418;
    uint64_t v11 = SportingEvent.canonicalId.getter();
    sub_100017098(v11, v12, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v13 = SportingEvent.version.getter();
    sub_100017098(v13, v14, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2048;
    Date.timeIntervalSince1970.getter();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    *(_WORD *)(v10 + 32) = 2048;
    swift_release();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v10 + 42) = 2080;
    uint64_t v15 = *(void *)(a1 + 40);
    unint64_t v16 = *(void *)(a1 + 48);
    swift_bridgeObjectRetain();
    sub_100017098(v15, v16, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 52) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "=== Fetched full APS message for %s, version %s, message timestamp %f, type %ld, tempoSessionId %s, liveActivityTtl %f ===", (uint8_t *)v10, 0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  type metadata accessor for ApsMessageProcessingOperation();
  sub_1000AFB74(v7, a3);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "=== End full APS message ===", v19, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_100063F60()
{
  type metadata accessor for URL();
  sub_100029250();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = v2 | 7;
  unint64_t v4 = ((*(void *)(v1 + 56) + ((v2 + 16) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  sub_100009894();
  v5();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v3);
}

id sub_100063FF4()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100028084(v0 + v2, *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100064084(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = sub_100005E5C(&qword_1000FE0A0);
  uint64_t v12 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  unint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v28[3] = &type metadata for AMSApiRequest;
  v28[4] = &off_1000F0670;
  uint64_t v15 = (void *)swift_allocObject();
  v28[0] = v15;
  uint64_t v15[2] = a1;
  void v15[3] = a2;
  v15[4] = a3;
  void v15[5] = a4;
  id v16 = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100074D20();
  uint64_t v27 = v17;
  sub_100008218(a6, (uint64_t)__src);
  sub_100008B98((uint64_t)v28, (uint64_t)v25);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a5;
  memcpy((void *)(v18 + 24), __src, 0x60uLL);
  sub_100008CAC(v25, v18 + 120);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_10006471C;
  *(void *)(v19 + 24) = v18;
  swift_retain();
  static Subscribers.Demand.unlimited.getter();
  sub_100005E5C(&qword_1000FC0C0);
  sub_100005E5C(&qword_1000FE088);
  sub_100005E5C(&qword_1000FE0A8);
  sub_10000953C(&qword_1000FC0C8, &qword_1000FC0C0);
  sub_10000953C(&qword_1000FE0B0, &qword_1000FE0A8);
  Publisher.flatMap<A, B>(maxPublishers:_:)();
  swift_release();
  swift_release();
  sub_10000953C(&qword_1000FE0B8, &qword_1000FE0A0);
  uint64_t v20 = v24;
  uint64_t v21 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  sub_100006178((uint64_t)v28);
  return v21;
}

uint64_t sub_100064388(uint64_t a1, uint64_t a2)
{
  uint64_t FullApsMessageOperation = type metadata accessor for SubscriptionFetchFullApsMessageOperation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(FullApsMessageOperation - 8) + 16))(a2, a1, FullApsMessageOperation);
  return a2;
}

uint64_t sub_1000643F0(uint64_t a1, uint64_t a2)
{
  uint64_t FullApsMessageOperation = type metadata accessor for SubscriptionFetchFullApsMessageOperation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(FullApsMessageOperation - 8) + 32))(a2, a1, FullApsMessageOperation);
  return a2;
}

uint64_t sub_100064454@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t FullApsMessageOperation = type metadata accessor for SubscriptionFetchFullApsMessageOperation();
  sub_10002EE14(FullApsMessageOperation);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_100062F48(a1, v7, a2);
}

uint64_t sub_1000644B8()
{
  uint64_t v1 = *(void *)(type metadata accessor for SubscriptionFetchFullApsMessageOperation() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  sub_100006178(v6 + 8);
  swift_bridgeObjectRelease();
  type metadata accessor for URL();
  sub_100029250();
  sub_100009894();
  v7();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

void sub_1000645BC(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t FullApsMessageOperation = type metadata accessor for SubscriptionFetchFullApsMessageOperation();
  sub_10002EE14(FullApsMessageOperation);
  sub_10006328C(a1, (void *)(v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))), a2);
}

uint64_t sub_100064618(uint64_t a1)
{
  uint64_t FullApsMessageOperation = type metadata accessor for SubscriptionFetchFullApsMessageOperation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(FullApsMessageOperation - 8) + 8))(a1, FullApsMessageOperation);
  return a1;
}

uint64_t sub_100064674()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000646BC()
{
  swift_release();

  sub_100006178(v0 + 32);
  swift_unknownObjectRelease();
  sub_100006178(v0 + 80);
  sub_100006178(v0 + 120);

  return _swift_deallocObject(v0, 160, 7);
}

void sub_10006471C()
{
}

uint64_t sub_10006472C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100064764(uint64_t a1, uint64_t *a2)
{
  sub_100005E5C(a2);
  sub_100029250();
  sub_100009894();
  v3();
  return a1;
}

uint64_t sub_1000647B0(uint64_t a1, uint64_t a2)
{
  if (qword_1000FBDA0 != -1) {
    swift_once();
  }
  return sub_100056CB8(a1, a2) & 1;
}

uint64_t sub_100064824()
{
  return dispatch thunk of SportsManager.autostartLiveActivityStatus(forId:)();
}

id sub_100064848(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + OBJC_IVAR____TtC7sportsd31DirectActivityRequestXPCSession_cancellables) = &_swiftEmptySetSingleton;
  sub_10002A3E0(a4, v9 + OBJC_IVAR____TtC7sportsd31DirectActivityRequestXPCSession_subscriptionOperation);
  *(unsigned char *)(v9 + OBJC_IVAR____TtC7sportsd31DirectActivityRequestXPCSession_isLiveActivitiesSportEnabled) = a5;
  uint64_t v18 = (void *)(v9 + OBJC_IVAR____TtC7sportsd31DirectActivityRequestXPCSession_areLiveActivitiesEnabledForBundleId);
  *uint64_t v18 = a6;
  v18[1] = a7;
  uint64_t v19 = (void *)(v9 + OBJC_IVAR____TtC7sportsd31DirectActivityRequestXPCSession_autostartStatus);
  *uint64_t v19 = a8;
  v19[1] = a9;
  swift_retain();
  swift_retain();
  id v20 = a3;
  id v21 = sub_1000AE848(a1, a2, (uint64_t)v20);
  [v20 setExportedObject:v21];
  id v22 = [self interfaceWithProtocol:&OBJC_PROTOCOL____TtP7sportsd38DirectSessionRequestXPCDaemon_Protocol_];
  [v20 setExportedInterface:v22];

  swift_release();
  swift_release();

  sub_10002A60C(a4);
  return v21;
}

uint64_t sub_1000649AC()
{
  sub_10002A60C(v0 + OBJC_IVAR____TtC7sportsd31DirectActivityRequestXPCSession_subscriptionOperation);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

id sub_100064A14()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_1000FBDB8 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000929C(v3, (uint64_t)qword_10010A4F0);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Connection closed.", v6, 2u);
    sub_10001C2C8();
  }

  v8.receiver = v1;
  v8.super_class = ObjectType;
  return [super dealloc];
}

uint64_t sub_100064BB4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a4;
  sub_100064C48(a1, a2, 0, (void (*)(void))sub_100069F0C, v7);

  return swift_release();
}

uint64_t sub_100064C48(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v11 = sub_100005E5C(&qword_1000FC938);
  __chkstk_darwin(v11 - 8);
  sub_100069F80();
  uint64_t ActivityOperation = type metadata accessor for SubscriptionCreateActivityOperation(0);
  __chkstk_darwin(ActivityOperation - 8);
  sub_1000098F8();
  uint64_t v15 = v14 - v13;
  unint64_t v16 = sub_1000522C4();
  unint64_t v18 = v17;
  if (((*(uint64_t (**)(void))(v5
                             + OBJC_IVAR____TtC7sportsd31DirectActivityRequestXPCSession_areLiveActivitiesEnabledForBundleId))() & 1) != 0)
  {
    if ((sub_100065330(a3) & 1) == 0)
    {
      uint64_t v43 = v5 + OBJC_IVAR____TtC7sportsd31DirectActivityRequestXPCSession_subscriptionOperation;
      sub_100065488(a3, (uint64_t)v53);
      uint64_t v27 = sub_100065700(a3);
      uint64_t v44 = a2;
      uint64_t v46 = (uint64_t)a4;
      uint64_t v28 = v16;
      uint64_t v30 = v29;
      uint64_t v32 = v31;
      uint64_t v42 = v33;
      uint64_t v34 = type metadata accessor for Date();
      sub_1000082C0(v6, 1, 1, v34);
      LOBYTE(v41) = 1;
      uint64_t v35 = a2;
      uint64_t v36 = v42;
      sub_100029F10(a1, v35, 1, (uint64_t)v53, v27, v30, v32, v42, v41, v28, v18, v6, v42, v43, v44, v46, a5, v50, v51,
        v52,
        v53[0],
        v53[1],
        v53[2],
        v53[3]);
      sub_1000684C8(v27, v30, v32, v36);
      sub_100068518(v53);
      swift_bridgeObjectRelease();
      sub_100037ED0(v6, &qword_1000FC938);
      sub_1000A2D3C(0);
      sub_10004CC9C(v15);
      id v37 = (void *)swift_allocObject();
      v37[2] = v47;
      v37[3] = v49;
      v37[4] = a1;
      v37[5] = v45;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_100005E5C(&qword_1000FCEE8);
      sub_100034684();
      Publisher.sink(receiveCompletion:receiveValue:)();
      swift_release();
      swift_release();
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10000929C(v19, (uint64_t)qword_10010A568);
    swift_bridgeObjectRetain_n();
    id v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      v53[0] = swift_slowAlloc();
      *(_DWORD *)id v22 = 136315138;
      swift_bridgeObjectRetain();
      sub_100017098(a1, a2, v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Skipping activity for event %s since it is suppressed from autostart", v22, 0xCu);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_10004D2D4();
    swift_allocError();
    *os_log_type_t v40 = xmmword_1000CC020;
    a4();
  }
  else
  {
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_10000929C(v23, (uint64_t)qword_10010A568);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      v53[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      sub_100017098(a1, a2, v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_100017098(v16, v18, v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Skipping activity for event %s because live activities are not enabled for %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_10004D2D4();
    swift_allocError();
    unint64_t *v39 = v16;
    v39[1] = v18;
    a4();
  }
  return swift_errorRelease();
}

uint64_t sub_100065330(uint64_t a1)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7sportsd31DirectActivityRequestXPCSession_isLiveActivitiesSportEnabled) != 1) {
    goto LABEL_8;
  }
  uint64_t v3 = sub_100065D24(a1);
  uint64_t v4 = (*(uint64_t (**)(void, void))(v1
                                                 + OBJC_IVAR____TtC7sportsd31DirectActivityRequestXPCSession_autostartStatus))(0, 0);
  uint64_t v5 = sub_1000142E0(v4);
  char v6 = sub_100065ED0(v5, (uint64_t)v3);
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    char v8 = 1;
    return v8 & 1;
  }
  sub_100065488(a1, (uint64_t)v10);
  sub_100047530((uint64_t)v10, (uint64_t)__src, &qword_1000FE120);
  if (__src[3] == 1
    || (memcpy(__dst, __src, sizeof(__dst)),
        sub_100047530((uint64_t)&__dst[72], (uint64_t)v13, &qword_1000FE128),
        sub_10002F674((uint64_t)v13),
        sub_100068518(v10),
        sub_100047530((uint64_t)v13, (uint64_t)&v14, &qword_1000FE128),
        !v15))
  {
    swift_bridgeObjectRelease();
LABEL_8:
    char v8 = 0;
    return v8 & 1;
  }
  sub_1000511F4(v14, v15, v5);
  char v8 = v7;
  swift_bridgeObjectRelease();
  sub_10002F5FC((uint64_t)v13);
  return v8 & 1;
}

uint64_t sub_100065488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!a1)
  {
    long long v29 = 0u;
    long long v30 = 0u;
    goto LABEL_6;
  }
  *(void *)&long long v31 = 0xD000000000000015;
  *((void *)&v31 + 1) = 0x80000001000D24A0;
  AnyHashable.init<A>(_:)();
  sub_1000908D4((uint64_t)&v21, a1, &v29);
  sub_10001BDCC((uint64_t)&v21);
  if (!*((void *)&v30 + 1))
  {
LABEL_6:
    uint64_t result = sub_100037ED0((uint64_t)&v29, (uint64_t *)&unk_1000FC300);
LABEL_8:
    id v13 = 0;
    uint64_t v14 = 0;
    uint64_t v20 = 0;
    long long v15 = xmmword_1000CBBB0;
    long long v16 = 0uLL;
    long long v17 = 0uLL;
    long long v18 = 0uLL;
    long long v19 = 0uLL;
    goto LABEL_9;
  }
  sub_100028F5C(&v29, &v31);
  uint64_t v4 = self;
  sub_100005EA0(&v31, v32);
  uint64_t v5 = _bridgeAnythingToObjectiveC<A>(_:)();
  id v21 = 0;
  id v6 = [v4 dataWithJSONObject:v5 options:0 error:&v21];
  swift_unknownObjectRelease();
  id v7 = v21;
  if (!v6)
  {
    uint64_t v11 = v7;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    uint64_t result = sub_100006178((uint64_t)&v31);
    goto LABEL_8;
  }
  uint64_t v8 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v10 = v9;

  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_1000686A0();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  swift_release();
  sub_10000835C(v8, v10);
  uint64_t result = sub_100006178((uint64_t)&v31);
  id v13 = v21;
  uint64_t v14 = v22;
  long long v15 = v23;
  long long v16 = v24;
  long long v17 = v25;
  long long v18 = v26;
  long long v19 = v27;
  uint64_t v20 = v28;
LABEL_9:
  *(void *)a2 = v13;
  *(void *)(a2 + 8) = v14;
  *(_OWORD *)(a2 + 16) = v15;
  *(_OWORD *)(a2 + 32) = v16;
  *(_OWORD *)(a2 + 48) = v17;
  *(_OWORD *)(a2 + 64) = v18;
  *(_OWORD *)(a2 + 80) = v19;
  *(void *)(a2 + 96) = v20;
  return result;
}

uint64_t sub_100065700(uint64_t a1)
{
  if (!a1)
  {
    long long v13 = 0u;
    long long v14 = 0u;
    goto LABEL_6;
  }
  AnyHashable.init<A>(_:)();
  sub_1000908D4((uint64_t)&v11, a1, &v13);
  sub_10001BDCC((uint64_t)&v11);
  if (!*((void *)&v14 + 1))
  {
LABEL_6:
    sub_100037ED0((uint64_t)&v13, (uint64_t *)&unk_1000FC300);
    return 0;
  }
  sub_100028F5C(&v13, &v11);
  uint64_t v2 = self;
  sub_100005EA0(&v11, v12);
  uint64_t v3 = _bridgeAnythingToObjectiveC<A>(_:)();
  *(void *)&long long v13 = 0;
  id v4 = [v2 dataWithJSONObject:v3 options:0 error:&v13];
  swift_unknownObjectRelease();
  id v5 = (id)v13;
  if (v4)
  {
    uint64_t v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v8 = v7;

    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    sub_100068654();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    swift_release();
    sub_10000835C(v6, v8);
    sub_100006178((uint64_t)&v11);
    return v13;
  }
  unint64_t v9 = v5;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  swift_errorRelease();
  sub_100006178((uint64_t)&v11);
  return 0;
}

uint64_t sub_10006592C(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6 = *a1;
  if (!*a1) {
    return a2(0);
  }
  uint64_t v18 = *a1;
  swift_errorRetain();
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  if (swift_dynamicCast())
  {
    if (v17 == 2)
    {
      swift_errorRelease();
      return a2(0);
    }
    sub_100068640(v16, v17);
  }
  swift_errorRelease();
  swift_errorRetain();
  if (qword_1000FBDE0 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000929C(v10, (uint64_t)qword_10010A568);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  long long v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_100017098(a4, a5, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v14 = Error.localizedDescription.getter();
    uint64_t v18 = sub_100017098(v14, v15, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to create activity for canonical ID: %s - %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_errorRetain();
  a2(v6);
  swift_errorRelease();
  return swift_errorRelease();
}

uint64_t type metadata accessor for DirectActivityRequestXPCSession()
{
  return self;
}

void *sub_100065D24(uint64_t a1)
{
  sub_100065488(a1, (uint64_t)v23);
  sub_100047530((uint64_t)v23, (uint64_t)__src, &qword_1000FE120);
  if (__src[3] == 1) {
    return &_swiftEmptySetSingleton;
  }
  memcpy(__dst, __src, sizeof(__dst));
  sub_100047530((uint64_t)&__dst[48], (uint64_t)v26, &qword_1000FE130);
  sub_1000686EC((uint64_t)v26);
  sub_100068518(v23);
  sub_100047530((uint64_t)v26, (uint64_t)&v27, &qword_1000FE130);
  uint64_t v1 = v27;
  if (!v27) {
    return &_swiftEmptySetSingleton;
  }
  uint64_t v2 = *(void *)(v27 + 16);
  if (v2)
  {
    sub_1000686EC((uint64_t)v26);
    uint64_t v3 = (long long *)(v1 + 48);
    id v4 = _swiftEmptyArrayStorage;
    do
    {
      char v5 = *((unsigned char *)v3 + 48);
      uint64_t v6 = *((void *)v3 - 1);
      long long v7 = *v3;
      long long v8 = v3[1];
      long long v9 = v3[2];
      v18[0] = *((void *)v3 - 2);
      v18[1] = v6;
      long long v19 = v7;
      long long v20 = v8;
      long long v21 = v9;
      char v22 = v5;
      sub_100068718((uint64_t)v18, (uint64_t)v17);
      uint64_t v10 = v17[0];
      uint64_t v11 = v17[1];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10001574C();
        id v4 = v14;
      }
      unint64_t v12 = v4[2];
      if (v12 >= v4[3] >> 1)
      {
        sub_10001574C();
        id v4 = v15;
      }
      uint64_t v3 = (long long *)((char *)v3 + 72);
      _OWORD v4[2] = v12 + 1;
      uint64_t v13 = &v4[2 * v12];
      v13[4] = v10;
      v13[5] = v11;
      --v2;
    }
    while (v2);
    sub_100068774((uint64_t)v26);
  }
  else
  {
    id v4 = _swiftEmptyArrayStorage;
  }
  sub_100068774((uint64_t)v26);
  return (void *)sub_1000140A0((uint64_t)v4);
}

uint64_t sub_100065ED0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 1;
  }
  if (v2 >= v3) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = a2;
  }
  if (v2 >= v3) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = a1;
  }
  uint64_t v32 = v4;
  uint64_t v33 = v4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v4 + 56);
  int64_t v31 = (unint64_t)(63 - v6) >> 6;
  uint64_t v9 = v5 + 56;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    int64_t v12 = v11;
    if (!v8) {
      break;
    }
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v14 = v13 | (v11 << 6);
LABEL_29:
    if (*(void *)(v5 + 16))
    {
      uint64_t v18 = (uint64_t *)(*(void *)(v32 + 48) + 16 * v14);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int v21 = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v23 = v21 & ~v22;
      if ((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
      {
        uint64_t v24 = *(void *)(v5 + 48);
        long long v25 = (void *)(v24 + 16 * v23);
        BOOL v26 = *v25 == v20 && v25[1] == v19;
        if (v26 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
LABEL_46:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v30 = 0;
LABEL_47:
          sub_10001BB94();
          return v30;
        }
        uint64_t v27 = ~v22;
        while (1)
        {
          unint64_t v23 = (v23 + 1) & v27;
          if (((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
            break;
          }
          uint64_t v28 = (void *)(v24 + 16 * v23);
          BOOL v29 = *v28 == v20 && v28[1] == v19;
          if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            goto LABEL_46;
          }
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v15 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  if (v15 >= v31) {
    goto LABEL_49;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v15);
  ++v11;
  if (v16) {
    goto LABEL_28;
  }
  int64_t v11 = v12 + 2;
  if (v12 + 2 >= v31) {
    goto LABEL_49;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v11);
  if (v16) {
    goto LABEL_28;
  }
  int64_t v11 = v12 + 3;
  if (v12 + 3 >= v31) {
    goto LABEL_49;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v11);
  if (v16)
  {
LABEL_28:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    goto LABEL_29;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v31)
  {
LABEL_49:
    swift_bridgeObjectRelease();
    uint64_t v30 = 1;
    goto LABEL_47;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v12 + 4;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_49;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_28;
    }
  }
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_1000661B0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000661E8(uint64_t a1)
{
  return sub_1000873D8(a1, *(void *)(v1 + 16));
}

void sub_1000661F0()
{
}

uint64_t sub_100066218(uint64_t a1, uint64_t a2)
{
  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

Swift::Int sub_100066290()
{
  return Hasher._finalize()();
}

uint64_t sub_1000662D4()
{
  return 7107189;
}

uint64_t sub_1000662E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6163696E6F6E6163 && a2 == 0xEB0000000064496CLL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6169766572626261 && a2 == 0xEC0000006E6F6974;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6F676F4C6D616574 && a2 == 0xE800000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 1701670760 && a2 == 0xE400000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_100066538()
{
  return 5;
}

uint64_t sub_100066540(char a1)
{
  uint64_t result = 0x6163696E6F6E6163;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6169766572626261;
      break;
    case 2:
      uint64_t result = 0x6F676F4C6D616574;
      break;
    case 3:
      uint64_t result = 0x756F72676B636162;
      break;
    case 4:
      uint64_t result = 1701670760;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100066604(void *a1)
{
  uint64_t v3 = v1;
  sub_100005E5C(&qword_1000FE1D0);
  sub_100009830();
  __chkstk_darwin(v5);
  sub_100005EA0(a1, a1[3]);
  sub_10006944C();
  sub_10006A068();
  v9[0] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    sub_100069FFC(1);
    sub_100047530(v3 + 32, (uint64_t)v10, &qword_1000FE1D8);
    sub_100047530((uint64_t)v10, (uint64_t)v9, &qword_1000FE1D8);
    sub_1000694E4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_100069FFC(3);
    v9[0] = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  uint64_t v6 = sub_100069FE4();
  return v7(v6);
}

void sub_1000667A4()
{
  sub_100069FCC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_100005E5C(&qword_1000FE1B8);
  sub_100009830();
  __chkstk_darwin(v5);
  sub_100069F80();
  sub_100005EA0(v2, v2[3]);
  sub_10006944C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    sub_100006178((uint64_t)v2);
  }
  else
  {
    sub_10006A034();
    uint64_t v6 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v8 = v7;
    uint64_t v18 = v6;
    LOBYTE(v20) = 1;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10006A048();
    uint64_t v19 = v10;
    uint64_t v17 = v9;
    sub_100069498();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10002A5A8(v20, v21);
    uint64_t v16 = sub_10006A048();
    uint64_t v12 = v11;
    swift_bridgeObjectRetain();
    sub_10006A034();
    char v13 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v14 = sub_100069F50();
    v15(v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10002A5A8(v20, v21);
    sub_1000479B8(v20, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100006178((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000479B8(v20, v21);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v18;
    *(void *)(v4 + 8) = v8;
    *(void *)(v4 + 16) = v17;
    *(void *)(v4 + 24) = v19;
    *(void *)(v4 + 32) = v20;
    *(void *)(v4 + 40) = v21;
    *(void *)(v4 + 48) = v16;
    *(void *)(v4 + 56) = v12;
    *(unsigned char *)(v4 + 64) = v13;
  }
  sub_100069FB4();
}

uint64_t sub_100066B10(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001000D24E0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x54656D6147657270 && a2 == 0xEC000000656C7469;
    if (v5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v6 = a1 == 0x74695474726F6873 && a2 == 0xEA0000000000656CLL;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v7 = a1 == 0x74697465706D6F63 && a2 == 0xEB0000000073726FLL;
        if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v8 = a1 == 0x644974726F7073 && a2 == 0xE700000000000000;
          if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v9 = a1 == 0x644965756761656CLL && a2 == 0xE800000000000000;
            if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x64496E6F69746361 && a2 == 0xE800000000000000)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v11) {
                return 6;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100066E20(char a1)
{
  uint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x54656D6147657270;
      break;
    case 2:
      uint64_t v3 = 0x5474726F6873;
      goto LABEL_5;
    case 3:
      uint64_t v3 = 0x7465706D6F63;
LABEL_5:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7469000000000000;
      break;
    case 4:
      uint64_t result = 0x644974726F7073;
      break;
    case 5:
      uint64_t result = 0x644965756761656CLL;
      break;
    case 6:
      uint64_t result = 0x64496E6F69746361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100066F1C(void *a1)
{
  uint64_t v3 = v1;
  sub_100005E5C(&qword_1000FE1A0);
  sub_100009830();
  __chkstk_darwin(v5);
  sub_100005EA0(a1, a1[3]);
  sub_100069260();
  sub_10006A068();
  v9[0] = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v2)
  {
    sub_100069F2C(1);
    sub_100069F2C(2);
    sub_100047530(v3 + 48, (uint64_t)v10, &qword_1000FE130);
    sub_100047530((uint64_t)v10, (uint64_t)v9, &qword_1000FE130);
    sub_100005E5C(&qword_1000FE160);
    sub_100069390(&qword_1000FE1A8, (void (*)(void))sub_100069400);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_100069F2C(4);
    sub_100069F2C(5);
    sub_100069F2C(6);
  }
  uint64_t v6 = sub_100069FE4();
  return v7(v6);
}

void sub_100067110()
{
  sub_100069FCC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_100005E5C(&qword_1000FE150);
  sub_100009830();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1000098F8();
  uint64_t v11 = v10 - v9;
  sub_100005EA0(v2, v2[3]);
  sub_100069260();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    sub_100006178((uint64_t)v2);
  }
  else
  {
    uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    char v32 = v13;
    uint64_t v14 = sub_100069F98();
    uint64_t v16 = v15;
    uint64_t v31 = v14;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_100069F98();
    uint64_t v30 = v12;
    uint64_t v18 = v17;
    sub_100005E5C(&qword_1000FE160);
    sub_100069390(&qword_1000FE168, (void (*)(void))sub_1000692AC);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v34 = v18;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_100069F98();
    uint64_t v33 = v19;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_100069F98();
    uint64_t v22 = v21;
    uint64_t v27 = v20;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_100069F98();
    uint64_t v25 = v24;
    uint64_t v26 = v23;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
    swift_bridgeObjectRetain();
    sub_100006178((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v30;
    *(unsigned char *)(v4 + 8) = v32 & 1;
    *(void *)(v4 + 16) = v31;
    *(void *)(v4 + 24) = v16;
    *(void *)(v4 + 32) = v29;
    *(void *)(v4 + 40) = v34;
    *(void *)(v4 + 48) = v35;
    *(void *)(v4 + 56) = v28;
    *(void *)(v4 + 64) = v33;
    *(void *)(v4 + 72) = v27;
    *(void *)(v4 + 80) = v22;
    *(void *)(v4 + 88) = v26;
    *(void *)(v4 + 96) = v25;
  }
  sub_100069FB4();
}

BOOL sub_10006757C(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000EF320, v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

void sub_1000675C8()
{
  sub_100069FCC();
  Swift::String v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = sub_100005E5C(v5);
  sub_100009830();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_100069F80();
  sub_100005EA0(v4, v4[3]);
  v2();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v6);
  sub_100069FB4();
}

void sub_1000676C8()
{
  sub_100069FCC();
  Swift::String v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = sub_100005E5C(v5);
  sub_100009830();
  uint64_t v12 = v7;
  __chkstk_darwin(v8);
  sub_1000098F8();
  uint64_t v11 = v10 - v9;
  sub_100005EA0(v4, v4[3]);
  v2();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v0)
  {
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v6);
  }
  sub_100006178((uint64_t)v4);
  sub_100069FB4();
}

BOOL sub_1000677F4(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_100067804(uint64_t a1, char a2)
{
}

uint64_t sub_10006782C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64496E6F69746361 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001000D24C0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10006791C()
{
  return 2;
}

Swift::Int sub_100067924(char a1)
{
  return Hasher._finalize()();
}

uint64_t sub_10006796C(char a1)
{
  if (a1) {
    return 0xD000000000000015;
  }
  else {
    return 0x64496E6F69746361;
  }
}

void sub_1000679A8()
{
  sub_100069FCC();
  uint64_t v11 = v1;
  uint64_t v12 = v2;
  uint64_t v4 = v3;
  uint64_t v5 = sub_100005E5C(&qword_1000FE178);
  sub_100009830();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005EA0(v4, v4[3]);
  sub_1000691C8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v13) = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v0)
  {
    uint64_t v13 = v11;
    uint64_t v14 = v12;
    sub_1000692F8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  sub_100069FB4();
}

uint64_t sub_100067B00(void *a1)
{
  sub_100005E5C(&qword_1000FE138);
  sub_100009830();
  __chkstk_darwin(v3);
  sub_1000098F8();
  uint64_t v4 = a1[4];
  sub_100005EA0(a1, a1[3]);
  sub_1000691C8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_100006178((uint64_t)a1);
  }
  else
  {
    LOBYTE(v8) = 0;
    uint64_t v4 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    sub_100069214();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v6 = sub_10006A020();
    v7(v6);
    sub_10002A5A8(v8, v9);
    sub_100006178((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_1000479B8(v8, v9);
  }
  return v4;
}

Swift::Int sub_100067CD0()
{
  return Hasher._finalize()();
}

uint64_t sub_100067D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100066218(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100067D40(uint64_t a1)
{
  unint64_t v2 = sub_100069530();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100067D7C(uint64_t a1)
{
  unint64_t v2 = sub_100069530();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100067DB8(void *a1@<X8>)
{
}

void sub_100067DF4()
{
}

uint64_t sub_100067E38()
{
  return sub_100066540(*v0);
}

uint64_t sub_100067E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000662E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100067E68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100066538();
  *a1 = result;
  return result;
}

uint64_t sub_100067E90(uint64_t a1)
{
  unint64_t v2 = sub_10006944C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100067ECC(uint64_t a1)
{
  unint64_t v2 = sub_10006944C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100067F08(void *a1@<X8>)
{
  sub_1000667A4();
  if (!v1) {
    memcpy(a1, __src, 0x41uLL);
  }
}

uint64_t sub_100067F54(void *a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_100066604(a1);
}

BOOL sub_100067FA8(char *a1, char *a2)
{
  return sub_10000A600(*a1, *a2);
}

Swift::Int sub_100067FB4()
{
  return sub_10000A954(*v0);
}

void sub_100067FD0(uint64_t a1)
{
  sub_10000A610(a1, *v1);
}

Swift::Int sub_100067FD8()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_10006801C()
{
  return sub_100066E20(*v0);
}

uint64_t sub_100068024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100066B10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10006804C()
{
  return sub_100006EDC();
}

uint64_t sub_10006806C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10000A94C();
  *a1 = result;
  return result;
}

uint64_t sub_100068094(uint64_t a1)
{
  unint64_t v2 = sub_100069260();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000680D0(uint64_t a1)
{
  unint64_t v2 = sub_100069260();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10006810C(void *a1@<X8>)
{
  sub_100067110();
  if (!v1) {
    memcpy(a1, __src, 0x68uLL);
  }
}

uint64_t sub_100068158(void *a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_100066F1C(a1);
}

BOOL sub_1000681BC@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_10006757C(*a1);
  *a2 = result;
  return result;
}

void sub_1000681F4(void *a1@<X8>)
{
  *a1 = 0x6173726576696E55;
  a1[1] = 0xE90000000000006CLL;
}

uint64_t sub_100068214()
{
  return 0x6173726576696E55;
}

uint64_t sub_100068230@<X0>(Swift::String a1@<X1:X0>, BOOL *a2@<X8>)
{
  uint64_t result = sub_1000675C4(a1);
  *a2 = result != 0;
  return result;
}

uint64_t sub_100068260(uint64_t a1)
{
  unint64_t v2 = sub_100069344();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10006829C(uint64_t a1)
{
  unint64_t v2 = sub_100069344();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1000682D8(void *a1@<X8>)
{
}

void sub_100068314(void *a1@<X8>)
{
  sub_1000676C8();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
  }
}

void sub_10006834C()
{
}

BOOL sub_10006838C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000677F4(*a1, *a2);
}

Swift::Int sub_100068398()
{
  return sub_100067924(*v0);
}

void sub_1000683A0(uint64_t a1)
{
  sub_100067804(a1, *v1);
}

uint64_t sub_1000683A8()
{
  return sub_10006796C(*v0);
}

uint64_t sub_1000683B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10006782C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000683D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10006791C();
  *a1 = result;
  return result;
}

uint64_t sub_100068400(uint64_t a1)
{
  unint64_t v2 = sub_1000691C8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10006843C(uint64_t a1)
{
  unint64_t v2 = sub_1000691C8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100068478@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100067B00(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

void sub_1000684A8()
{
}

void sub_1000684C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_1000479B8(a3, a4);
  }
}

uint64_t *sub_100068518(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10006856C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000685F4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100068634(uint64_t *a1)
{
  return sub_10006592C(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100068640(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xA) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_100068654()
{
  unint64_t result = qword_1000FE110;
  if (!qword_1000FE110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE110);
  }
  return result;
}

unint64_t sub_1000686A0()
{
  unint64_t result = qword_1000FE118;
  if (!qword_1000FE118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE118);
  }
  return result;
}

uint64_t sub_1000686EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100068718(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100068774(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000687A0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 24);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000687F0(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2 + 2;
  uint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    *(_OWORD *)(a1 + 16) = *v4;
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)v4;
    *(void *)(a1 + 24) = v5;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *sub_100068858(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  if (a1[3] != 1)
  {
    if (v4 != 1)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_10002F5FC((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100068920(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2 + 2;
  if (a1[3] != 1)
  {
    uint64_t v6 = a2[3];
    if (v6 != 1)
    {
      a1[2] = *v5;
      a1[3] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_10002F5FC((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
  return a1;
}

uint64_t sub_1000689A0(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000689F4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for LiveActivityAutostartAction()
{
}

void type metadata accessor for LiveActivityAutostartAction.DeepLinks()
{
}

uint64_t sub_100068A6C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100068AC8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100068B68(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = a2[7];
  *(void *)(a1 + 64) = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = a2[9];
  *(void *)(a1 + 80) = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = a2[11];
  *(void *)(a1 + 96) = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_100068C60(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t sub_100068C68(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100068D00(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 104))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100068D54(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 104) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

void type metadata accessor for LiveActivityAutostartContent()
{
}

uint64_t sub_100068DCC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40) != 1) {
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100068E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = (_OWORD *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    *(_OWORD *)(a1 + 32) = *v6;
  }
  else
  {
    *(void *)(a1 + 32) = *(void *)v6;
    *(void *)(a1 + 40) = v7;
    swift_bridgeObjectRetain();
  }
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100068EB8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) != 1)
  {
    if (v4 != 1)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_10002F5FC(a1 + 32);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_8;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
LABEL_8:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

void *sub_100068FC8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x41uLL);
}

uint64_t sub_100068FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)(a2 + 32);
  if (*(void *)(a1 + 40) != 1)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    if (v7 != 1)
    {
      *(void *)(a1 + 32) = *v6;
      *(void *)(a1 + 40) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_10002F5FC(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
LABEL_6:
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t sub_100069078(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 65))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000690B8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for LiveActivityAutostartContent.Competitor()
{
}

uint64_t sub_100069118(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10006916C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for LiveActivityAutostartContent.Competitor.TemplateImage()
{
}

unint64_t sub_1000691C8()
{
  unint64_t result = qword_1000FE140;
  if (!qword_1000FE140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE140);
  }
  return result;
}

unint64_t sub_100069214()
{
  unint64_t result = qword_1000FE148;
  if (!qword_1000FE148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE148);
  }
  return result;
}

unint64_t sub_100069260()
{
  unint64_t result = qword_1000FE158;
  if (!qword_1000FE158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE158);
  }
  return result;
}

unint64_t sub_1000692AC()
{
  unint64_t result = qword_1000FE170;
  if (!qword_1000FE170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE170);
  }
  return result;
}

unint64_t sub_1000692F8()
{
  unint64_t result = qword_1000FE180;
  if (!qword_1000FE180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE180);
  }
  return result;
}

unint64_t sub_100069344()
{
  unint64_t result = qword_1000FE190;
  if (!qword_1000FE190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE190);
  }
  return result;
}

uint64_t sub_100069390(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000061D8(&qword_1000FE160);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100069400()
{
  unint64_t result = qword_1000FE1B0;
  if (!qword_1000FE1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE1B0);
  }
  return result;
}

unint64_t sub_10006944C()
{
  unint64_t result = qword_1000FE1C0;
  if (!qword_1000FE1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE1C0);
  }
  return result;
}

unint64_t sub_100069498()
{
  unint64_t result = qword_1000FE1C8;
  if (!qword_1000FE1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE1C8);
  }
  return result;
}

unint64_t sub_1000694E4()
{
  unint64_t result = qword_1000FE1E0;
  if (!qword_1000FE1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE1E0);
  }
  return result;
}

unint64_t sub_100069530()
{
  unint64_t result = qword_1000FE1F0;
  if (!qword_1000FE1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE1F0);
  }
  return result;
}

uint64_t sub_100069588()
{
  return 0;
}

ValueMetadata *type metadata accessor for LiveActivityAutostartContent.Competitor.TemplateImage.CodingKeys()
{
  return &type metadata for LiveActivityAutostartContent.Competitor.TemplateImage.CodingKeys;
}

uint64_t getEnumTagSinglePayload for LiveActivityAutostartContent.Competitor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for LiveActivityAutostartContent.Competitor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000696F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityAutostartContent.Competitor.CodingKeys()
{
  return &type metadata for LiveActivityAutostartContent.Competitor.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TVAppFeatureFlags(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s7sportsd28LiveActivityAutostartContentV10CompetitorV13TemplateImageV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100069818);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for LiveActivityAutostartAction.DeepLinks.CodingKeys()
{
}

unsigned char *storeEnumTagSinglePayload for LiveActivityAutostartContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100069918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityAutostartContent.CodingKeys()
{
  return &type metadata for LiveActivityAutostartContent.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LiveActivityAutostartAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100069A1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityAutostartAction.CodingKeys()
{
  return &type metadata for LiveActivityAutostartAction.CodingKeys;
}

unint64_t sub_100069A58()
{
  unint64_t result = qword_1000FE200;
  if (!qword_1000FE200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE200);
  }
  return result;
}

unint64_t sub_100069AA8()
{
  unint64_t result = qword_1000FE208;
  if (!qword_1000FE208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE208);
  }
  return result;
}

unint64_t sub_100069AF8()
{
  unint64_t result = qword_1000FE210;
  if (!qword_1000FE210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE210);
  }
  return result;
}

unint64_t sub_100069B48()
{
  unint64_t result = qword_1000FE218;
  if (!qword_1000FE218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE218);
  }
  return result;
}

unint64_t sub_100069B98()
{
  unint64_t result = qword_1000FE220;
  if (!qword_1000FE220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE220);
  }
  return result;
}

unint64_t sub_100069BE8()
{
  unint64_t result = qword_1000FE228;
  if (!qword_1000FE228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE228);
  }
  return result;
}

unint64_t sub_100069C38()
{
  unint64_t result = qword_1000FE230;
  if (!qword_1000FE230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE230);
  }
  return result;
}

unint64_t sub_100069C88()
{
  unint64_t result = qword_1000FE238;
  if (!qword_1000FE238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE238);
  }
  return result;
}

unint64_t sub_100069CD8()
{
  unint64_t result = qword_1000FE240;
  if (!qword_1000FE240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE240);
  }
  return result;
}

unint64_t sub_100069D28()
{
  unint64_t result = qword_1000FE248;
  if (!qword_1000FE248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE248);
  }
  return result;
}

unint64_t sub_100069D78()
{
  unint64_t result = qword_1000FE250;
  if (!qword_1000FE250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE250);
  }
  return result;
}

unint64_t sub_100069DC8()
{
  unint64_t result = qword_1000FE258;
  if (!qword_1000FE258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE258);
  }
  return result;
}

unint64_t sub_100069E18()
{
  unint64_t result = qword_1000FE260;
  if (!qword_1000FE260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE260);
  }
  return result;
}

unint64_t sub_100069E68()
{
  unint64_t result = qword_1000FE268;
  if (!qword_1000FE268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE268);
  }
  return result;
}

unint64_t sub_100069EB8()
{
  unint64_t result = qword_1000FE270;
  if (!qword_1000FE270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE270);
  }
  return result;
}

uint64_t sub_100069F2C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 80) = a1;
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_100069F50()
{
  return v0;
}

uint64_t sub_100069F68()
{
  return v0;
}

uint64_t sub_100069F98()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_100069FE4()
{
  return v0;
}

uint64_t sub_100069FFC@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_10006A020()
{
  return v0;
}

uint64_t sub_10006A034()
{
  return v0 - 96;
}

uint64_t sub_10006A048()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10006A068()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_10006A088(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC0000006E6F6974;
  uint64_t v3 = 0x6172747369676572;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6172747369676572;
  unint64_t v6 = 0xEC0000006E6F6974;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7473696765726E75;
      uint64_t v7 = 0x6E6F69746172;
      goto LABEL_6;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x6C6C416863746566;
      break;
    case 3:
      uint64_t v5 = 0x61684364756F6C63;
      unint64_t v6 = 0xEC0000006C656E6ELL;
      break;
    case 4:
      uint64_t v5 = 0x4D7370416C6C7566;
      uint64_t v7 = 0x656761737365;
LABEL_6:
      unint64_t v6 = v7 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      uint64_t v3 = 0x7473696765726E75;
      uint64_t v8 = 0x6E6F69746172;
      goto LABEL_12;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6C6C416863746566;
      break;
    case 3:
      uint64_t v3 = 0x61684364756F6C63;
      unint64_t v2 = 0xEC0000006C656E6ELL;
      break;
    case 4:
      uint64_t v3 = 0x4D7370416C6C7566;
      uint64_t v8 = 0x656761737365;
LABEL_12:
      unint64_t v2 = v8 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v10 = 1;
  }
  else {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_10006A284(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x736C656E6E616863;
  }
  else {
    uint64_t v4 = 0x6F724665726F7473;
  }
  if (v3) {
    unint64_t v5 = 0xEA0000000000746ELL;
  }
  else {
    unint64_t v5 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x736C656E6E616863;
  }
  else {
    uint64_t v6 = 0x6F724665726F7473;
  }
  if (a2) {
    unint64_t v7 = 0xE800000000000000;
  }
  else {
    unint64_t v7 = 0xEA0000000000746ELL;
  }
  if (v4 == v6 && v5 == v7) {
    sub_10006C31C();
  }
  else {
    char v2 = sub_10006C2D4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10006A31C(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 1751607656;
  }
  else {
    uint64_t v4 = 7827308;
  }
  if (v3) {
    unint64_t v5 = 0xE300000000000000;
  }
  else {
    unint64_t v5 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v6 = 1751607656;
  }
  else {
    uint64_t v6 = 7827308;
  }
  if (a2) {
    unint64_t v7 = 0xE400000000000000;
  }
  else {
    unint64_t v7 = 0xE300000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_10006C31C();
  }
  else {
    char v2 = sub_10006C2D4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10006A3A0(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xD000000000000010;
  unint64_t v4 = 0x80000001000D04C0;
  uint64_t v5 = a1;
  unint64_t v6 = 0xD000000000000010;
  switch(v5)
  {
    case 1:
      unint64_t v7 = "com.apple.sports";
      goto LABEL_4;
    case 2:
      unint64_t v6 = 0xD000000000000011;
      unint64_t v7 = "com.apple.Dazzle";
LABEL_4:
      unint64_t v4 = (unint64_t)v7 | 0x8000000000000000;
      break;
    case 3:
      unint64_t v6 = 0x6C7070612E6D6F63;
      unint64_t v4 = 0xEC00000076742E65;
      break;
    default:
      break;
  }
  unint64_t v8 = 0x80000001000D04C0;
  switch(a2)
  {
    case 1:
      uint64_t v9 = "com.apple.sports";
      goto LABEL_9;
    case 2:
      unint64_t v3 = 0xD000000000000011;
      uint64_t v9 = "com.apple.Dazzle";
LABEL_9:
      unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
      break;
    case 3:
      unint64_t v3 = 0x6C7070612E6D6F63;
      unint64_t v8 = 0xEC00000076742E65;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v8) {
    sub_10006C31C();
  }
  else {
    char v2 = sub_10006C2D4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10006A4F8(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 7759204;
  }
  else {
    uint64_t v4 = 1685025392;
  }
  if (v3) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xE300000000000000;
  }
  if (a2) {
    uint64_t v6 = 7759204;
  }
  else {
    uint64_t v6 = 1685025392;
  }
  if (a2) {
    unint64_t v7 = 0xE300000000000000;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_10006C31C();
  }
  else {
    char v2 = sub_10006C2D4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10006A57C(uint64_t a1, uint64_t a2)
{
  return sub_10006A88C(a1, a2, (uint64_t (*)(void))sub_1000990CC);
}

uint64_t sub_10006A594(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xD000000000000012;
  unint64_t v4 = (unint64_t)"executing";
  unint64_t v5 = 0x80000001000D0610;
  uint64_t v6 = a1;
  unint64_t v7 = "STADIUM_PBP_SESSIONS_LOW";
  unint64_t v8 = 0xD000000000000012;
  uint64_t v9 = "STADIUM_PBP_SESSIONS_HIGH";
  char v10 = "STADIUM_PRODUCT_PAGE_SESSIONS_ALL";
  switch(v6)
  {
    case 1:
      unint64_t v8 = 0xD000000000000021;
      uint64_t v11 = "STADIUM_LIVE_STATS";
      goto LABEL_6;
    case 2:
      unint64_t v8 = 0x5F4D554944415453;
      unint64_t v5 = 0xEB00000000504250;
      break;
    case 3:
      unint64_t v8 = 0xD000000000000019;
      uint64_t v11 = "PAGE_SESSIONS_ALL";
      goto LABEL_6;
    case 4:
      unint64_t v8 = 0xD000000000000018;
      uint64_t v11 = "STADIUM_PBP_SESSIONS_HIGH";
LABEL_6:
      unint64_t v5 = (unint64_t)v11 | 0x8000000000000000;
      break;
    case 5:
      sub_10006C3C4();
      break;
    default:
      break;
  }
  unint64_t v12 = v4 | 0x8000000000000000;
  switch(a2)
  {
    case 1:
      v3 += 15;
      uint64_t v13 = v10 - 32;
      goto LABEL_13;
    case 2:
      unint64_t v3 = 0x5F4D554944415453;
      unint64_t v12 = 0xEB00000000504250;
      break;
    case 3:
      v3 += 7;
      uint64_t v13 = v9 - 32;
      goto LABEL_13;
    case 4:
      v3 += 6;
      uint64_t v13 = v7 - 32;
LABEL_13:
      unint64_t v12 = (unint64_t)v13 | 0x8000000000000000;
      break;
    case 5:
      unint64_t v3 = 0x4B434F4C435F5654;
      unint64_t v12 = 0xEE0045524F43535FLL;
      break;
    default:
      break;
  }
  if (v8 == v3 && v5 == v12) {
    sub_10006C31C();
  }
  else {
    char v2 = sub_10006C2D4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10006A760(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6C616974696E69;
  int v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0x6E69747563657865;
    }
    else {
      uint64_t v4 = 0x64656873696E6966;
    }
    if (v3 == 1) {
      unint64_t v5 = 0xE900000000000067;
    }
    else {
      unint64_t v5 = 0xE800000000000000;
    }
  }
  else
  {
    unint64_t v5 = 0xE700000000000000;
    uint64_t v4 = 0x6C616974696E69;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v2 = 0x6E69747563657865;
    }
    else {
      uint64_t v2 = 0x64656873696E6966;
    }
    if (a2 == 1) {
      unint64_t v6 = 0xE900000000000067;
    }
    else {
      unint64_t v6 = 0xE800000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v4 == v2 && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_10006A874(uint64_t a1, uint64_t a2)
{
  return sub_10006A88C(a1, a2, (uint64_t (*)(void))sub_1000818A8);
}

uint64_t sub_10006A88C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3();
  uint64_t v7 = v6;
  if (v5 == ((uint64_t (*)(uint64_t))a3)(a2) && v7 == v8) {
    sub_10006C31C();
  }
  else {
    LOBYTE(v5) = sub_10006C2D4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_10006A910(char a1, char a2)
{
  return qword_1000CC878[a1] == qword_1000CC878[a2];
}

uint64_t sub_10006A934(int a1, char a2)
{
  return (a1 ^ ((a2 & 1) == 0)) & 1;
}

uint64_t sub_10006A948(uint64_t a1, uint64_t a2)
{
  return sub_10006A9D8(a1, a2, (void (*)(void))&type metadata accessor for Sport, &qword_1000FE2D0, (void (*)(uint64_t))&type metadata accessor for Sport);
}

uint64_t sub_10006A990(uint64_t a1, uint64_t a2)
{
  return sub_10006A9D8(a1, a2, (void (*)(void))&type metadata accessor for SportingEventProgressStatus, &qword_1000FE2C8, (void (*)(uint64_t))&type metadata accessor for SportingEventProgressStatus);
}

uint64_t sub_10006A9D8(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  a3(0);
  sub_10006C28C(a4, a5);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v11 == v9 && v12 == v10) {
    sub_10006C31C();
  }
  else {
    LOBYTE(a4) = sub_10006C2D4();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a4 & 1;
}

uint64_t sub_10006AAA4(uint64_t a1, uint64_t a2)
{
  return sub_10006A9D8(a1, a2, (void (*)(void))&type metadata accessor for SportingEventCompetitorWinOutcome, &qword_1000FE2C0, (void (*)(uint64_t))&type metadata accessor for SportingEventCompetitorWinOutcome);
}

Swift::Int sub_10006AAEC()
{
  return sub_10006B4FC();
}

Swift::Int sub_10006AAF8()
{
  return sub_10006B668();
}

Swift::Int sub_10006AB04()
{
  return Hasher._finalize()();
}

Swift::Int sub_10006AB44()
{
  return sub_10006B600();
}

Swift::Int sub_10006AB50()
{
  return sub_10006AB90();
}

Swift::Int sub_10006AB6C()
{
  return sub_10006B428();
}

Swift::Int sub_10006AB78()
{
  return sub_10006AB90();
}

Swift::Int sub_10006AB90()
{
  return Hasher._finalize()();
}

Swift::Int sub_10006ABD8()
{
  return sub_10006ACC8(0xFFFFFFFFFFFFFB50);
}

Swift::Int sub_10006ABE0(char a1)
{
  sub_10006C350();
  if (a1) {
    Swift::UInt v2 = 404;
  }
  else {
    Swift::UInt v2 = 3328;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_10006AC30(char a1)
{
  return Hasher._finalize()();
}

Swift::Int sub_10006AC7C(uint64_t a1)
{
  return sub_10006AD20(a1, (void (*)(uint64_t))sub_100080A48);
}

Swift::Int sub_10006AC94(uint64_t a1)
{
  return sub_10006AD20(a1, (void (*)(uint64_t))sub_1000818A8);
}

Swift::Int sub_10006ACAC(uint64_t a1)
{
  return sub_10006AD20(a1, (void (*)(uint64_t))sub_1000990CC);
}

Swift::Int sub_10006ACC8(Swift::UInt a1)
{
  return Hasher._finalize()();
}

Swift::Int sub_10006AD08(uint64_t a1)
{
  return sub_10006AD20(a1, (void (*)(uint64_t))sub_1000BCF80);
}

Swift::Int sub_10006AD20(uint64_t a1, void (*a2)(uint64_t))
{
  return Hasher._finalize()();
}

uint64_t sub_10006AD70()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10006AE7C()
{
  return String.hash(into:)();
}

uint64_t sub_10006AE98()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10006AF08()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10006AF64()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10006B02C()
{
  return String.hash(into:)();
}

uint64_t sub_10006B044()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10006B0A0(uint64_t a1, uint64_t a2)
{
  return sub_10006B25C(a1, a2, (void (*)(uint64_t))sub_1000990CC);
}

uint64_t sub_10006B0B8(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 5:
      sub_10006C3C4();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10006B1B4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10006B244(uint64_t a1, uint64_t a2)
{
  return sub_10006B25C(a1, a2, (void (*)(uint64_t))sub_1000818A8);
}

uint64_t sub_10006B25C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  a3(a2);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

void sub_10006B2B4()
{
}

void sub_10006B2DC()
{
}

void sub_10006B304(uint64_t a1, char a2)
{
}

void sub_10006B338(uint64_t a1, char a2)
{
  if (a2) {
    Swift::UInt v2 = 404;
  }
  else {
    Swift::UInt v2 = 3328;
  }
  Hasher._combine(_:)(v2);
}

Swift::Int sub_10006B36C()
{
  sub_10006C388();
  if (v0) {
    Swift::UInt v1 = 404;
  }
  else {
    Swift::UInt v1 = 3328;
  }
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_10006B3B4(uint64_t a1, char a2)
{
  return Hasher._finalize()();
}

Swift::Int sub_10006B404(uint64_t a1)
{
  return sub_10006B5BC(a1, 0xFFFFFFFFFFFFFB50);
}

Swift::Int sub_10006B410(uint64_t a1, uint64_t a2)
{
  return sub_10006B764(a1, a2, (void (*)(uint64_t))sub_1000818A8);
}

Swift::Int sub_10006B428()
{
  return Hasher._finalize()();
}

Swift::Int sub_10006B4CC(uint64_t a1, uint64_t a2)
{
  return sub_10006B764(a1, a2, (void (*)(uint64_t))sub_100080A48);
}

Swift::Int sub_10006B4E4(uint64_t a1, uint64_t a2)
{
  return sub_10006B764(a1, a2, (void (*)(uint64_t))sub_1000990CC);
}

Swift::Int sub_10006B4FC()
{
  return Hasher._finalize()();
}

Swift::Int sub_10006B568()
{
  return sub_10006B700();
}

Swift::Int sub_10006B580()
{
  return Hasher._finalize()();
}

Swift::Int sub_10006B5BC(uint64_t a1, Swift::UInt a2)
{
  return Hasher._finalize()();
}

Swift::Int sub_10006B600()
{
  return Hasher._finalize()();
}

Swift::Int sub_10006B668()
{
  return Hasher._finalize()();
}

Swift::Int sub_10006B6E4()
{
  return sub_10006B700();
}

Swift::Int sub_10006B700()
{
  return Hasher._finalize()();
}

Swift::Int sub_10006B74C(uint64_t a1, uint64_t a2)
{
  return sub_10006B764(a1, a2, (void (*)(uint64_t))sub_1000BCF80);
}

Swift::Int sub_10006B764(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  return Hasher._finalize()();
}

void sub_10006B7B8(uint64_t a1, void *a2, SEL *a3)
{
  uint64_t v5 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  uint64_t v8 = v7 & *(void *)(a1 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  for (v8 &= v8 - 1; ; uint64_t v8 = (v12 - 1) & v12)
  {
    swift_bridgeObjectRetain();
    NSString v14 = String._bridgeToObjectiveC()();
    [a2 *a3:v14];
    swift_bridgeObjectRelease();

    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v9) {
      goto LABEL_23;
    }
    uint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v10;
    if (!v12)
    {
      int64_t v10 = v11 + 1;
      if (v11 + 1 >= v9) {
        goto LABEL_23;
      }
      uint64_t v12 = *(void *)(v5 + 8 * v10);
      if (!v12)
      {
        int64_t v10 = v11 + 2;
        if (v11 + 2 >= v9) {
          goto LABEL_23;
        }
        uint64_t v12 = *(void *)(v5 + 8 * v10);
        if (!v12)
        {
          int64_t v10 = v11 + 3;
          if (v11 + 3 >= v9) {
            goto LABEL_23;
          }
          uint64_t v12 = *(void *)(v5 + 8 * v10);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_20:
    ;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v9)
  {
LABEL_23:

    swift_release();
    return;
  }
  uint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v10 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v10 >= v9) {
      goto LABEL_23;
    }
    uint64_t v12 = *(void *)(v5 + 8 * v10);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_10006B95C()
{
  int v0 = sub_10006B9F4();
  if (!v0)
  {
    sub_10006C328();
    goto LABEL_6;
  }
  if (v0 != 1)
  {
    sub_10006C33C();
LABEL_6:
    char v1 = sub_10006C2F0();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v1 & 1) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
LABEL_7:

  return sub_10006BA60(2);
}

uint64_t sub_10006B9F4()
{
  char v1 = (os_unfair_lock_s *)(v0 + OBJC_IVAR____TtC7sportsd14AsyncOperation_lock);
  swift_beginAccess();
  os_unfair_lock_lock(v1);
  uint64_t v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7sportsd14AsyncOperation__state);
  os_unfair_lock_unlock(v1);
  swift_endAccess();
  return v2;
}

uint64_t sub_10006BA60(char a1)
{
  if (qword_1000FBDA8 != -1) {
    swift_once();
  }
  int v3 = v1;
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_10006B7B8(v4, v3, (SEL *)&selRef_willChangeValueForKey_);
  swift_bridgeObjectRelease();
  uint64_t v5 = (os_unfair_lock_s *)&v3[OBJC_IVAR____TtC7sportsd14AsyncOperation_lock];
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  v3[OBJC_IVAR____TtC7sportsd14AsyncOperation__state] = a1;
  os_unfair_lock_unlock(v5);
  swift_endAccess();
  uint64_t v6 = v3;
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_10006B7B8(v7, v6, (SEL *)&selRef_didChangeValueForKey_);
  return swift_bridgeObjectRelease();
}

unint64_t sub_10006BB6C(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000EF358, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t sub_10006BBB8(char a1)
{
  if (!a1) {
    return sub_10006C328();
  }
  if (a1 == 1) {
    return 0x6E69747563657865;
  }
  return 0x64656873696E6966;
}

uint64_t sub_10006BC10(unsigned __int8 *a1, char *a2)
{
  return sub_10006A760(*a1, *a2);
}

Swift::Int sub_10006BC1C()
{
  return sub_10006AB6C();
}

uint64_t sub_10006BC24()
{
  return sub_10006B1B4();
}

Swift::Int sub_10006BC2C()
{
  return sub_10006B428();
}

unint64_t sub_10006BC34@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10006BB6C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10006BC64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10006BBB8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id sub_10006BC90()
{
  *(_DWORD *)&v0[OBJC_IVAR____TtC7sportsd14AsyncOperation_lock] = 0;
  v0[OBJC_IVAR____TtC7sportsd14AsyncOperation__state] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AsyncOperation();
  return [super init];
}

uint64_t sub_10006BD00()
{
  uint64_t result = sub_10005FAC4((uint64_t)&off_1000EF258);
  qword_1000FE278 = result;
  return result;
}

uint64_t sub_10006BD64()
{
  int v0 = sub_10006B9F4();
  if (!v0)
  {
    sub_10006C328();
LABEL_6:
    char v1 = sub_10006C2F0();
    goto LABEL_7;
  }
  if (v0 != 1)
  {
    sub_10006C33C();
    goto LABEL_6;
  }
  char v1 = 1;
LABEL_7:
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_10006BE04()
{
  if ([v0 isCancelled])
  {
    int v1 = sub_10006B9F4();
    if (v1)
    {
      if (v1 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_10006C33C();
    }
    else
    {
      sub_10006C328();
    }
    char v2 = sub_10006C2F0();
    swift_bridgeObjectRelease();
    if ((v2 & 1) == 0)
    {
      char v3 = 1;
      return v3 & 1;
    }
  }
LABEL_8:
  if (sub_10006B9F4() > 1u) {
    char v3 = 1;
  }
  else {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_10006BF18()
{
  uint64_t result = (uint64_t)[v0 isCancelled];
  if ((result & 1) == 0)
  {
    sub_10006BA60(1);
    char v2 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xA8);
    return v2();
  }
  return result;
}

void sub_10006BFD8()
{
}

id sub_10006C054()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AsyncOperation();
  return [super dealloc];
}

uint64_t type metadata accessor for AsyncOperation()
{
  return self;
}

uint64_t getEnumTagSinglePayload for AsyncOperation.ExecutionState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AsyncOperation.ExecutionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006C204);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AsyncOperation.ExecutionState()
{
  return &type metadata for AsyncOperation.ExecutionState;
}

unint64_t sub_10006C240()
{
  unint64_t result = qword_1000FE2B8;
  if (!qword_1000FE2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE2B8);
  }
  return result;
}

uint64_t sub_10006C28C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10006C2D4()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10006C2F0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10006C328()
{
  return 0x6C616974696E69;
}

uint64_t sub_10006C33C()
{
  return 0x64656873696E6966;
}

uint64_t sub_10006C350()
{
  return Hasher.init(_seed:)();
}

Swift::Int sub_10006C368(uint64_t a1)
{
  return sub_10006B5BC(a1, 0);
}

Swift::Int sub_10006C370(uint64_t a1)
{
  return sub_10006B5BC(a1, 0xFFFFFFFFFFFFFC18);
}

Swift::Int sub_10006C378()
{
  return sub_10006ACC8(0);
}

Swift::Int sub_10006C380()
{
  return sub_10006ACC8(0xFFFFFFFFFFFFFC18);
}

uint64_t sub_10006C388()
{
  return Hasher.init(_seed:)();
}

uint64_t sub_10006C3A0()
{
  return String.hash(into:)();
}

void sub_10006C3D8()
{
  sub_1000098B8();
  uint64_t v57 = v2;
  uint64_t v4 = v3;
  uint64_t v52 = sub_10007A680(v5, v6, v7, v3, v8);
  sub_100009830();
  uint64_t v59 = v9;
  sub_10007AB9C();
  __chkstk_darwin(v10);
  sub_10007A914((uint64_t)&v49);
  uint64_t v11 = sub_100005E5C(&qword_1000FDA00);
  uint64_t v12 = sub_10000984C(v11);
  uint64_t v51 = v13;
  __chkstk_darwin(v12);
  sub_10007A7A0(v14, v15, v16, v17, v18, v19, v20, v21, v49);
  sub_100005E5C(&qword_1000FE468);
  sub_100009830();
  __chkstk_darwin(v22);
  sub_10007A8FC();
  uint64_t v53 = sub_100005E5C(&qword_1000FE638);
  sub_100009830();
  uint64_t v54 = v23;
  __chkstk_darwin(v24);
  sub_100009908();
  uint64_t v50 = v0;
  uint64_t v55 = sub_100005E5C(&qword_1000FE640);
  sub_100009830();
  uint64_t v56 = v25;
  __chkstk_darwin(v26);
  sub_10007A63C(v27, v49);
  sub_10007AC74();
  sub_100005E5C(&qword_1000FE648);
  uint64_t v60 = v1;
  uint64_t v28 = (void *)type metadata accessor for JSONDecoder();
  uint64_t v29 = sub_10000953C(&qword_1000FE480, &qword_1000FE468);
  sub_100077A04();
  sub_100077AA8(&qword_1000FE490, (void (*)(uint64_t))&type metadata accessor for JSONDecoder);
  Publisher.decode<A, B>(type:decoder:)();
  uint64_t v30 = sub_10007A978();
  v31(v30);
  sub_100008218(v4, (uint64_t)&v60);
  sub_10007AC20();
  uint64_t v32 = sub_10007A7E4();
  v33(v32);
  sub_10007A55C();
  uint64_t v34 = swift_allocObject();
  sub_10007A958(v34);
  uint64_t v35 = sub_10007AB5C();
  sub_10007A0EC(v35, v36, &qword_1000FDA00);
  uint64_t v37 = sub_10007A92C();
  v38(v37);
  sub_10007A898();
  id v39 = v28;
  uint64_t v40 = sub_100005E5C(&qword_1000FE660);
  sub_10000953C(&qword_1000FE668, &qword_1000FE638);
  sub_10007A868();
  swift_release();
  sub_100009894();
  v41();
  sub_100075724(v58, v0);
  sub_10007AB74();
  sub_10007A778();
  v42();
  sub_10007AB14();
  sub_10007A5E4();
  uint64_t v43 = sub_10007ABF4();
  uint64_t v44 = sub_10007AAF8(v43);
  sub_10007A0EC(v44, v45, &qword_1000FDA00);
  sub_10007A9DC((void *)(v40 + v29));
  sub_10007A7C8();
  v46();
  sub_10007AA18();
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  sub_10000953C(&qword_1000FE670, &qword_1000FE640);
  sub_10007A828();
  swift_release();
  uint64_t v47 = sub_10007A6C0();
  v48(v47);
  sub_1000098A0();
}

void sub_10006C7DC()
{
  sub_1000098B8();
  uint64_t v61 = v1;
  uint64_t v3 = v2;
  uint64_t v55 = sub_10007A680(v4, v5, v6, v2, v7);
  sub_100009830();
  uint64_t v65 = v8;
  sub_10007AB9C();
  __chkstk_darwin(v9);
  sub_10007A914((uint64_t)v52);
  uint64_t v10 = sub_100005E5C(&qword_1000FDA00);
  uint64_t v11 = sub_10000984C(v10);
  uint64_t v54 = v12;
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v11);
  sub_10007A7A0(v15, v16, v17, v18, v19, v20, v21, v22, v52[0]);
  sub_100005E5C(&qword_1000FE468);
  sub_100009830();
  uint64_t v24 = v23;
  __chkstk_darwin(v25);
  sub_10007A8FC();
  uint64_t v56 = sub_100005E5C(&qword_1000FE690);
  sub_100009830();
  uint64_t v57 = v26;
  __chkstk_darwin(v27);
  sub_10007AACC(v28, v52[0]);
  uint64_t v59 = sub_100005E5C(&qword_1000FE698);
  sub_100009830();
  uint64_t v60 = v29;
  __chkstk_darwin(v30);
  sub_10007A63C(v31, v52[0]);
  sub_10007AC74();
  uint64_t v32 = sub_100005E5C(&qword_1000FD958);
  uint64_t v66 = v0;
  uint64_t v33 = type metadata accessor for JSONDecoder();
  sub_10000953C(&qword_1000FE480, &qword_1000FE468);
  sub_10000953C(&qword_1000FD960, &qword_1000FD958);
  sub_100077AA8(&qword_1000FE490, (void (*)(uint64_t))&type metadata accessor for JSONDecoder);
  Publisher.decode<A, B>(type:decoder:)();
  uint64_t v34 = sub_10007A978();
  v35(v34);
  sub_100008218(v3, (uint64_t)&v66);
  uint64_t v36 = v53;
  sub_100075724(v63, v53);
  uint64_t v37 = v65;
  uint64_t v38 = *(void *)(v65 + 16);
  v52[1] = v65 + 16;
  uint64_t v39 = sub_10007AC0C(v38);
  v40(v39, v64, v55);
  sub_10007A55C();
  uint64_t v41 = swift_allocObject();
  sub_10007A958(v41);
  uint64_t v42 = v58;
  *(void *)(v24 + 112) = v58;
  sub_10007A0EC(v36, v24 + v32, &qword_1000FDA00);
  uint64_t v43 = sub_10007AA9C();
  v44(v43);
  sub_10007A898();
  id v45 = v42;
  sub_100005E5C(&qword_1000FE088);
  sub_10000953C(&qword_1000FE6A0, &qword_1000FE690);
  sub_10007A868();
  swift_release();
  sub_100009894();
  v46();
  sub_100075724(v63, v36);
  sub_10007AB74();
  sub_10007A778();
  v47();
  sub_10007AB14();
  sub_10007A5E4();
  uint64_t v48 = sub_10007ABF4();
  *(void *)(v48 + 16) = v62;
  *(void *)(v48 + 24) = v14;
  sub_10007A0EC(v36, v48 + v37, &qword_1000FDA00);
  sub_10007A9DC((void *)(v48 + v33));
  sub_10007A7C8();
  v49();
  sub_10007AA18();
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  sub_10000953C(&qword_1000FE6A8, &qword_1000FE698);
  sub_10007A828();
  swift_release();
  uint64_t v50 = sub_10007A6C0();
  v51(v50);
  sub_1000098A0();
}

void sub_10006CC6C()
{
  sub_1000098B8();
  v49[17] = v1;
  uint64_t v3 = v2;
  v49[10] = sub_10007A680(v4, v5, v6, v2, v7);
  sub_100009830();
  v49[23] = v8;
  sub_10007AB9C();
  __chkstk_darwin(v9);
  sub_10007A914((uint64_t)v49);
  uint64_t v10 = sub_100005E5C(&qword_1000FDA00);
  uint64_t v11 = sub_10000984C(v10);
  v49[8] = v12;
  __chkstk_darwin(v11);
  sub_10007A7A0(v13, v14, v15, v16, v17, v18, v19, v20, v49[0]);
  sub_100005E5C(&qword_1000FE468);
  sub_100009830();
  __chkstk_darwin(v21);
  sub_10007A8FC();
  v49[12] = sub_100005E5C(&qword_1000FE5F8);
  sub_100009830();
  v49[13] = v22;
  __chkstk_darwin(v23);
  sub_10007AACC(v24, v49[0]);
  v49[15] = sub_100005E5C(&qword_1000FE600);
  sub_100009830();
  v49[16] = v25;
  __chkstk_darwin(v26);
  sub_10007A63C(v27, v49[0]);
  sub_10007AC74();
  uint64_t v28 = (void *)_s20RegistrationResponseVMa();
  uint64_t v50 = v0;
  type metadata accessor for JSONDecoder();
  uint64_t v29 = sub_10000953C(&qword_1000FE480, &qword_1000FE468);
  sub_100077AA8(&qword_1000FE608, (void (*)(uint64_t))_s20RegistrationResponseVMa);
  sub_100077AA8(&qword_1000FE490, (void (*)(uint64_t))&type metadata accessor for JSONDecoder);
  Publisher.decode<A, B>(type:decoder:)();
  uint64_t v30 = sub_10007A978();
  v31(v30);
  sub_100008218(v3, (uint64_t)&v50);
  sub_10007AC20();
  uint64_t v32 = sub_10007A7E4();
  v33(v32);
  sub_10007A55C();
  uint64_t v34 = swift_allocObject();
  sub_10007A958(v34);
  uint64_t v35 = sub_10007AB5C();
  sub_10007A0EC(v35, v36, &qword_1000FDA00);
  uint64_t v37 = sub_10007A92C();
  v38(v37);
  sub_10007A898();
  id v39 = v28;
  uint64_t v40 = sub_100005E5C(&qword_1000FC1D0);
  sub_10000953C(&qword_1000FE610, &qword_1000FE5F8);
  sub_10007A868();
  swift_release();
  sub_100009894();
  v41();
  sub_100075724(v49[21], v3);
  sub_10007AB74();
  sub_10007A778();
  v42();
  sub_10007AB14();
  sub_10007A5E4();
  uint64_t v43 = sub_10007ABF4();
  uint64_t v44 = sub_10007AAF8(v43);
  sub_10007A0EC(v44, v45, &qword_1000FDA00);
  sub_10007A9DC((void *)(v40 + v29));
  sub_10007A7C8();
  v46();
  sub_10007AA18();
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  sub_10000953C(&qword_1000FE618, &qword_1000FE600);
  sub_10007A828();
  swift_release();
  uint64_t v47 = sub_10007A6C0();
  v48(v47);
  sub_1000098A0();
}

void sub_10006D094()
{
  sub_1000098B8();
  uint64_t v75 = v2;
  uint64_t v4 = v3;
  uint64_t v67 = v3;
  uint64_t v6 = v5;
  uint64_t v82 = v7;
  uint64_t v72 = v8;
  uint64_t v10 = v9;
  uint64_t v63 = v9;
  unint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v76 = v15;
  uint64_t v79 = type metadata accessor for URLRequest();
  sub_100009830();
  uint64_t v83 = v16;
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v19);
  sub_10007A914((uint64_t)v62);
  uint64_t v20 = sub_100005E5C(&qword_1000FDA00);
  uint64_t v21 = sub_10000984C(v20);
  uint64_t v69 = v22;
  uint64_t v80 = *(void *)(v23 + 64);
  __chkstk_darwin(v21);
  uint64_t v68 = (uint64_t)v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100005E5C(&qword_1000FE468);
  sub_100009830();
  uint64_t v27 = v26;
  __chkstk_darwin(v28);
  sub_10007A8FC();
  uint64_t v70 = sub_100005E5C(&qword_1000FE5D0);
  sub_100009830();
  uint64_t v71 = v29;
  __chkstk_darwin(v30);
  sub_100069F80();
  uint64_t v66 = v1;
  uint64_t v73 = sub_100005E5C(&qword_1000FE5D8);
  sub_100009830();
  uint64_t v74 = v31;
  __chkstk_darwin(v32);
  sub_10000C58C();
  uint64_t v81 = v33;
  uint64_t v77 = v14;
  v85[0] = v14;
  v85[1] = v12;
  unint64_t v78 = v12;
  sub_10001DF8C(v14, v12);
  sub_10007AC74();
  v85[0] = v6;
  type metadata accessor for JSONDecoder();
  sub_10000953C(&qword_1000FE480, &qword_1000FE468);
  sub_1000764F0();
  sub_100077AA8(&qword_1000FE490, (void (*)(uint64_t))&type metadata accessor for JSONDecoder);
  Publisher.decode<A, B>(type:decoder:)();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v0, v25);
  sub_100008218(v4, (uint64_t)v85);
  uint64_t v34 = v68;
  sub_100075724(v82, v68);
  uint64_t v35 = v83;
  uint64_t v36 = *(void *)(v83 + 16);
  v62[1] = v83 + 16;
  uint64_t v37 = sub_10007AC0C(v36);
  v38(v37, v10, v79);
  uint64_t v39 = *(unsigned __int8 *)(v69 + 80);
  uint64_t v40 = (v39 + 120) & ~v39;
  uint64_t v41 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v69 = v39 | v41 | 7;
  uint64_t v65 = v18 + 7;
  unint64_t v42 = (v18 + 7 + ((v80 + v41 + v40) & ~v41)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v43 = swift_allocObject();
  sub_10007A958(v43);
  uint64_t v44 = v72;
  *(void *)(v18 + 112) = v72;
  sub_10007A0EC(v34, v18 + v40, &qword_1000FDA00);
  uint64_t v45 = sub_10007AA9C();
  v46(v45);
  uint64_t v47 = (uint64_t *)(v18 + v42);
  uint64_t v48 = v77;
  unint64_t v49 = v78;
  *uint64_t v47 = v77;
  v47[1] = v49;
  sub_10001DF8C(v48, v49);
  id v50 = v44;
  sub_100005E5C(&qword_1000FC138);
  sub_10000953C(&qword_1000FE5E8, &qword_1000FE5D0);
  Publisher.map<A>(_:)();
  swift_release();
  uint64_t v51 = sub_10007A6C0();
  v52(v51);
  sub_100075724(v82, v34);
  sub_100008218(v67, (uint64_t)v85);
  v64(v27 + 8, v63, v79);
  sub_100008B98(v75, (uint64_t)v84);
  uint64_t v53 = (v39 + 32) & ~v39;
  unint64_t v54 = (v80 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = (v65 + ((v41 + v54 + 96) & ~v41)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v56 = sub_10007ABF4();
  uint64_t v57 = v77;
  unint64_t v58 = v78;
  *(void *)(v56 + 16) = v77;
  *(void *)(v56 + 24) = v58;
  sub_10007A0EC(v34, v56 + v53, &qword_1000FDA00);
  sub_10007A9DC((void *)(v56 + v54));
  sub_10007A7C8();
  v59();
  sub_100008CAC(v84, v56 + v55);
  sub_10001DF8C(v57, v58);
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  sub_10000953C(&qword_1000FE5F0, &qword_1000FE5D8);
  Publisher.mapError<A>(_:)();
  swift_release();
  uint64_t v60 = sub_10007A6C0();
  v61(v60);
  sub_1000098A0();
}

uint64_t sub_10006D6B0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v68 = a8;
  uint64_t v59 = a7;
  uint64_t v75 = a5;
  uint64_t v65 = a4;
  uint64_t v55 = a3;
  uint64_t v69 = a9;
  uint64_t v72 = type metadata accessor for URLRequest();
  uint64_t v76 = *(void **)(v72 - 8);
  uint64_t v14 = v76[8];
  __chkstk_darwin(v72);
  uint64_t v62 = (char *)v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100005E5C(&qword_1000FDA00);
  uint64_t v61 = *(void *)(v15 - 8);
  uint64_t v73 = *(void *)(v61 + 64);
  __chkstk_darwin(v15 - 8);
  uint64_t v60 = (uint64_t)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100005E5C(&qword_1000FE468);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100005E5C(&qword_1000FE470);
  uint64_t v64 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  unint64_t v58 = (char *)v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100005E5C(&qword_1000FE478);
  uint64_t v67 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v74 = (char *)v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = a1;
  __src[0] = a1;
  __src[1] = a2;
  unint64_t v71 = a2;
  sub_10001DF8C(a1, a2);
  Just.init(_:)();
  __src[0] = a6;
  type metadata accessor for JSONDecoder();
  sub_10000953C(&qword_1000FE480, &qword_1000FE468);
  sub_1000756D8();
  sub_100077AA8(&qword_1000FE490, (void (*)(uint64_t))&type metadata accessor for JSONDecoder);
  Publisher.decode<A, B>(type:decoder:)();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  sub_100008218(a7, (uint64_t)__src);
  uint64_t v23 = v60;
  sub_100075724(v75, v60);
  uint64_t v24 = v76;
  uint64_t v25 = (void (*)(char *, uint64_t, uint64_t))v76[2];
  v54[1] = v76 + 2;
  uint64_t v56 = v25;
  uint64_t v26 = v62;
  uint64_t v27 = v72;
  v25(v62, a3, v72);
  uint64_t v28 = *(unsigned __int8 *)(v61 + 80);
  uint64_t v29 = (v28 + 120) & ~v28;
  uint64_t v30 = *((unsigned __int8 *)v24 + 80);
  uint64_t v31 = (v73 + v30 + v29) & ~v30;
  uint64_t v61 = v28 | v30 | 7;
  uint64_t v57 = v14 + 7;
  unint64_t v32 = (v14 + 7 + v31) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = swift_allocObject();
  memcpy((void *)(v33 + 16), __src, 0x60uLL);
  uint64_t v34 = v65;
  *(void *)(v33 + 112) = v65;
  sub_10007A0EC(v23, v33 + v29, &qword_1000FDA00);
  uint64_t v35 = (void (*)(uint64_t, char *, uint64_t))v76[4];
  v76 += 4;
  v54[0] = v35;
  v35(v33 + v31, v26, v27);
  uint64_t v36 = (uint64_t *)(v33 + v32);
  uint64_t v37 = v70;
  unint64_t v38 = v71;
  *uint64_t v36 = v70;
  v36[1] = v38;
  sub_10001DF8C(v37, v38);
  id v39 = v34;
  sub_100005E5C(&qword_1000FE410);
  sub_10000953C(&qword_1000FE498, &qword_1000FE470);
  uint64_t v40 = v63;
  uint64_t v41 = v58;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v41, v40);
  sub_100075724(v75, v23);
  sub_100008218(v59, (uint64_t)__src);
  unint64_t v42 = v26;
  uint64_t v43 = v72;
  v56(v26, v55, v72);
  sub_100008B98(v68, (uint64_t)v77);
  uint64_t v44 = (v28 + 32) & ~v28;
  unint64_t v45 = (v73 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v46 = (v30 + v45 + 96) & ~v30;
  unint64_t v47 = (v57 + v46) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = v70;
  unint64_t v50 = v71;
  *(void *)(v48 + 16) = v70;
  *(void *)(v48 + 24) = v50;
  sub_10007A0EC(v23, v48 + v44, &qword_1000FDA00);
  memcpy((void *)(v48 + v45), __src, 0x60uLL);
  ((void (*)(uint64_t, char *, uint64_t))v54[0])(v48 + v46, v42, v43);
  sub_100008CAC(v77, v48 + v47);
  sub_10001DF8C(v49, v50);
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  sub_10000953C(&qword_1000FE4A0, &qword_1000FE478);
  uint64_t v51 = v66;
  uint64_t v52 = v74;
  Publisher.mapError<A>(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v52, v51);
}

uint64_t sub_10006DE64@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v68 = a8;
  uint64_t v59 = a7;
  uint64_t v75 = a5;
  uint64_t v65 = a4;
  uint64_t v55 = a3;
  uint64_t v69 = a9;
  uint64_t v72 = type metadata accessor for URLRequest();
  uint64_t v76 = *(void **)(v72 - 8);
  uint64_t v14 = v76[8];
  __chkstk_darwin(v72);
  uint64_t v62 = (char *)v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100005E5C(&qword_1000FDA00);
  uint64_t v61 = *(void *)(v15 - 8);
  uint64_t v73 = *(void *)(v61 + 64);
  __chkstk_darwin(v15 - 8);
  uint64_t v60 = (uint64_t)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100005E5C(&qword_1000FE468);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100005E5C(&qword_1000FE590);
  uint64_t v64 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  unint64_t v58 = (char *)v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100005E5C(&qword_1000FE598);
  uint64_t v67 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v74 = (char *)v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = a1;
  __src[0] = a1;
  __src[1] = a2;
  unint64_t v71 = a2;
  sub_10001DF8C(a1, a2);
  Just.init(_:)();
  __src[0] = a6;
  type metadata accessor for JSONDecoder();
  sub_10000953C(&qword_1000FE480, &qword_1000FE468);
  sub_100075DBC();
  sub_100077AA8(&qword_1000FE490, (void (*)(uint64_t))&type metadata accessor for JSONDecoder);
  Publisher.decode<A, B>(type:decoder:)();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  sub_100008218(a7, (uint64_t)__src);
  uint64_t v23 = v60;
  sub_100075724(v75, v60);
  uint64_t v24 = v76;
  uint64_t v25 = (void (*)(char *, uint64_t, uint64_t))v76[2];
  v54[1] = v76 + 2;
  uint64_t v56 = v25;
  uint64_t v26 = v62;
  uint64_t v27 = v72;
  v25(v62, a3, v72);
  uint64_t v28 = *(unsigned __int8 *)(v61 + 80);
  uint64_t v29 = (v28 + 120) & ~v28;
  uint64_t v30 = *((unsigned __int8 *)v24 + 80);
  uint64_t v31 = (v73 + v30 + v29) & ~v30;
  uint64_t v61 = v28 | v30 | 7;
  uint64_t v57 = v14 + 7;
  unint64_t v32 = (v14 + 7 + v31) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = swift_allocObject();
  memcpy((void *)(v33 + 16), __src, 0x60uLL);
  uint64_t v34 = v65;
  *(void *)(v33 + 112) = v65;
  sub_10007A0EC(v23, v33 + v29, &qword_1000FDA00);
  uint64_t v35 = (void (*)(uint64_t, char *, uint64_t))v76[4];
  v76 += 4;
  v54[0] = v35;
  v35(v33 + v31, v26, v27);
  uint64_t v36 = (uint64_t *)(v33 + v32);
  uint64_t v37 = v70;
  unint64_t v38 = v71;
  *uint64_t v36 = v70;
  v36[1] = v38;
  sub_10001DF8C(v37, v38);
  id v39 = v34;
  sub_100005E5C(&qword_1000FE508);
  sub_10000953C(&qword_1000FE5A8, &qword_1000FE590);
  uint64_t v40 = v63;
  uint64_t v41 = v58;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v41, v40);
  sub_100075724(v75, v23);
  sub_100008218(v59, (uint64_t)__src);
  unint64_t v42 = v26;
  uint64_t v43 = v72;
  v56(v26, v55, v72);
  sub_100008B98(v68, (uint64_t)v77);
  uint64_t v44 = (v28 + 32) & ~v28;
  unint64_t v45 = (v73 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v46 = (v30 + v45 + 96) & ~v30;
  unint64_t v47 = (v57 + v46) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = v70;
  unint64_t v50 = v71;
  *(void *)(v48 + 16) = v70;
  *(void *)(v48 + 24) = v50;
  sub_10007A0EC(v23, v48 + v44, &qword_1000FDA00);
  memcpy((void *)(v48 + v45), __src, 0x60uLL);
  ((void (*)(uint64_t, char *, uint64_t))v54[0])(v48 + v46, v42, v43);
  sub_100008CAC(v77, v48 + v47);
  sub_10001DF8C(v49, v50);
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  sub_10000953C(&qword_1000FE5B0, &qword_1000FE598);
  uint64_t v51 = v66;
  uint64_t v52 = v74;
  Publisher.mapError<A>(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v52, v51);
}

uint64_t sub_10006E618@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unint64_t a6@<X6>, uint64_t a7@<X8>)
{
  sub_10004E878(a2);
  sub_100075724(a3, a7);
  uint64_t v14 = (int *)sub_100005E5C(&qword_1000FE660);
  uint64_t v15 = a7 + v14[7];
  uint64_t v16 = type metadata accessor for URLRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, a4, v16);
  *(void *)(a7 + v14[10]) = a1;
  *(void *)(a7 + v14[8]) = a2;
  uint64_t v17 = (uint64_t *)(a7 + v14[9]);
  uint64_t *v17 = a5;
  v17[1] = a6;
  id v18 = a2;
  swift_bridgeObjectRetain();

  return sub_10001DF8C(a5, a6);
}

uint64_t sub_10006E714@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unint64_t a6@<X6>, uint64_t a7@<X8>)
{
  sub_10004E878(a2);
  sub_100075724(a3, a7);
  uint64_t v14 = (int *)sub_100005E5C(&qword_1000FE088);
  uint64_t v15 = a7 + v14[7];
  uint64_t v16 = type metadata accessor for URLRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, a4, v16);
  *(void *)(a7 + v14[10]) = a1;
  *(void *)(a7 + v14[8]) = a2;
  uint64_t v17 = (uint64_t *)(a7 + v14[9]);
  uint64_t *v17 = a5;
  v17[1] = a6;
  id v18 = a2;
  swift_retain();

  return sub_10001DF8C(a5, a6);
}

uint64_t sub_10006E810@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unint64_t a6@<X6>, uint64_t a7@<X8>)
{
  sub_10004E878(a2);
  sub_100075724(a3, a7);
  uint64_t v14 = (int *)sub_100005E5C(&qword_1000FC1D0);
  uint64_t v15 = a7 + v14[7];
  uint64_t v16 = type metadata accessor for URLRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, a4, v16);
  sub_100077908(a1, a7 + v14[10]);
  *(void *)(a7 + v14[8]) = a2;
  uint64_t v17 = (uint64_t *)(a7 + v14[9]);
  uint64_t *v17 = a5;
  v17[1] = a6;
  id v18 = a2;

  return sub_10001DF8C(a5, a6);
}

uint64_t sub_10006E90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, unint64_t a9)
{
  sub_10004E878(a4);
  sub_100075724(a5, a8);
  uint64_t v17 = (int *)sub_100005E5C(&qword_1000FC138);
  uint64_t v18 = a8 + v17[7];
  uint64_t v19 = type metadata accessor for URLRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, a6, v19);
  uint64_t v20 = (void *)(a8 + v17[10]);
  *uint64_t v20 = a1;
  v20[1] = a2;
  void v20[2] = a3;
  *(void *)(a8 + v17[8]) = a4;
  uint64_t v21 = (uint64_t *)(a8 + v17[9]);
  *uint64_t v21 = a7;
  v21[1] = a9;
  id v22 = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_10001DF8C(a7, a9);
}

uint64_t sub_10006EA28@<X0>(void *a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unint64_t a6@<X6>, uint64_t a7@<X8>)
{
  sub_10004E878(a2);
  sub_100075724(a3, a7);
  uint64_t v14 = (int *)sub_100005E5C(&qword_1000FE410);
  uint64_t v15 = a7 + v14[7];
  uint64_t v16 = type metadata accessor for URLRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, a4, v16);
  memcpy((void *)(a7 + v14[10]), a1, 0x108uLL);
  *(void *)(a7 + v14[8]) = a2;
  uint64_t v17 = (uint64_t *)(a7 + v14[9]);
  uint64_t *v17 = a5;
  v17[1] = a6;
  sub_1000782EC(a1);
  id v18 = a2;

  return sub_10001DF8C(a5, a6);
}

uint64_t sub_10006EB30@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unint64_t a6@<X6>, uint64_t a7@<X8>)
{
  sub_10004E878(a2);
  sub_100075724(a3, a7);
  uint64_t v14 = (int *)sub_100005E5C(&qword_1000FE508);
  uint64_t v15 = a7 + v14[7];
  uint64_t v16 = type metadata accessor for URLRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, a4, v16);
  *(void *)(a7 + v14[10]) = a1;
  *(void *)(a7 + v14[8]) = a2;
  uint64_t v17 = (uint64_t *)(a7 + v14[9]);
  uint64_t *v17 = a5;
  v17[1] = a6;
  id v18 = a2;
  swift_bridgeObjectRetain();

  return sub_10001DF8C(a5, a6);
}

void sub_10006EC30()
{
  sub_1000098B8();
  uint64_t v13 = v1;
  uint64_t v12 = v2;
  sub_100005E5C(&qword_1000FE3D8);
  sub_1000438A0();
  __chkstk_darwin(v3);
  sub_10007A8E4();
  sub_100005E5C(&qword_1000FE3E0);
  sub_100009830();
  __chkstk_darwin(v4);
  sub_100005E5C(&qword_1000FE3E8);
  sub_100009830();
  __chkstk_darwin(v5);
  sub_10000C58C();
  sub_100005E5C(&qword_1000FE3F0);
  sub_100009830();
  __chkstk_darwin(v6);
  sub_100009864();
  *(void *)uint64_t v14 = *(void *)(*sub_100005EA0((void *)(v0 + 40), *(void *)(v0 + 64)) + 32);
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  sub_100005E5C(&qword_1000FC080);
  sub_10000953C(&qword_1000FC090, &qword_1000FC080);
  Publisher<>.setFailureType<A>(to:)();
  if (qword_1000FBDB0 != -1) {
    swift_once();
  }
  *(void *)uint64_t v14 = sub_1000728D0();
  sub_100005EA0((void *)(v0 + 80), *(void *)(v0 + 104));
  uint64_t v15 = sub_10001CB08();
  sub_100005E5C(&qword_1000FE3F8);
  sub_100005E5C(&qword_1000FCA50);
  sub_10000953C(&qword_1000FE400, &qword_1000FE3D8);
  sub_10000953C(&qword_1000FE408, &qword_1000FE3F8);
  sub_10000953C(&qword_1000FCA60, &qword_1000FCA50);
  Publishers.Zip3.init(_:_:_:)();
  sub_100073A10((_OWORD *)v0, v14);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v12;
  v7[3] = v13;
  memcpy(v7 + 4, v14, 0x78uLL);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_100073A80;
  *(void *)(v8 + 24) = v7;
  swift_bridgeObjectRetain();
  static Subscribers.Demand.unlimited.getter();
  sub_100005E5C(&qword_1000FE410);
  sub_100005E5C(&qword_1000FE418);
  sub_10000953C(&qword_1000FE420, &qword_1000FE3E0);
  sub_10000953C(&qword_1000FE428, &qword_1000FE418);
  Publisher.flatMap<A, B>(maxPublishers:_:)();
  swift_release();
  sub_100009894();
  v9();
  swift_getKeyPath();
  sub_10000953C(&qword_1000FE430, &qword_1000FE3E8);
  Publisher.map<A>(_:)();
  swift_release();
  sub_100009894();
  v10();
  sub_10000953C(&qword_1000FE438, &qword_1000FE3F0);
  Publisher.eraseToAnyPublisher()();
  sub_100009894();
  v11();
  sub_1000098A0();
}

uint64_t sub_10006F16C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v34 = a2;
  uint64_t v35 = a6;
  uint64_t v33 = a3;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __n128 v13 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, a1, v10, v13);
  unint64_t v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  _StringGuts.grow(_:)(48);
  swift_bridgeObjectRelease();
  unint64_t v36 = 0xD000000000000018;
  unint64_t v37 = 0x80000001000D2680;
  v15._uint64_t countAndFlagsBits = a4;
  v15._object = a5;
  String.append(_:)(v15);
  v16._object = (void *)0x80000001000D26A0;
  v16._uint64_t countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v16);
  unint64_t v17 = v37;
  unint64_t v30 = v36;
  uint64_t v31 = sub_10008064C();
  sub_100027288();
  id v32 = a3;
  uint64_t v18 = Dictionary.init(dictionaryLiteral:)();
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v20 = (v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v21 + v19, v14, v10);
  id v22 = (unint64_t *)(v21 + v20);
  *id v22 = v30;
  v22[1] = v17;
  unint64_t v23 = v21 + ((v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = v35;
  *(void *)unint64_t v23 = v34;
  *(unsigned char *)(v23 + 8) = 0;
  *(void *)(v21 + ((v20 + 39) & 0xFFFFFFFFFFFFFFF8)) = v31;
  uint64_t v25 = sub_100005EA0(v24, v24[3]);
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  id v26 = v32;
  swift_bridgeObjectRetain();
  uint64_t v27 = JSONDecoder.init()();
  uint64_t v28 = sub_100075324((uint64_t)sub_100073A98, v21, v18, v33, v27, (uint64_t)v25);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v28;
}

uint64_t sub_10006F424@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void, void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_100005E5C(&qword_1000FE440);
  uint64_t result = a2(a1, *(void *)(a1 + *(int *)(v6 + 48)), *(void *)(a1 + *(int *)(v6 + 64)));
  *a3 = result;
  return result;
}

uint64_t sub_10006F484()
{
  return 1635017060;
}

uint64_t sub_10006F494@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v11 = a2;
  uint64_t v4 = sub_100005E5C(&qword_1000FE620);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100005EA0(a1, a1[3]);
  sub_10007796C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    uint64_t v8 = v11;
    sub_1000779B8();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    memcpy(v8, v10, 0x108uLL);
  }
  return sub_100006178((uint64_t)a1);
}

uint64_t sub_10006F610(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6F63536B636F6C63 && a2 == 0xEA00000000006572;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x616C507472616D73 && a2 == 0xED00006F666E4979)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_10006F790()
{
  return 3;
}

uint64_t sub_10006F798(char a1)
{
  if (!a1) {
    return 0x746E65746E6F63;
  }
  if (a1 == 1) {
    return 0x6F63536B636F6C63;
  }
  return 0x616C507472616D73;
}

void sub_10006F800()
{
  sub_100069FCC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_100005E5C(&qword_1000FE730);
  sub_100009830();
  __chkstk_darwin(v5);
  sub_10007A8E4();
  sub_10007A8C4();
  sub_100078154();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    sub_100006178(v2);
  }
  else
  {
    sub_1000781A0();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    memcpy(v24, v25, sizeof(v24));
    memcpy(v26, v25, sizeof(v26));
    LOBYTE(v20[0]) = 1;
    sub_100077FA0((uint64_t)v24);
    sub_1000781EC();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v6 = v21[9];
    uint64_t v11 = v21[8];
    uint64_t v18 = v21[0];
    uint64_t v19 = v21[1];
    uint64_t v15 = v21[3];
    uint64_t v16 = v21[2];
    uint64_t v13 = v21[5];
    uint64_t v14 = v21[4];
    uint64_t v12 = v21[6];
    uint64_t v17 = v21[7];
    sub_100075844(v21[0], v21[1], v21[2]);
    sub_1000782A0();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v7 = sub_100069F68();
    v8(v7);
    uint64_t v9 = v22;
    uint64_t v10 = v23;
    memcpy(v20, v24, 0xA8uLL);
    v20[21] = v18;
    v20[22] = v19;
    v20[23] = v16;
    v20[24] = v15;
    v20[25] = v14;
    v20[26] = v13;
    v20[27] = v12;
    v20[28] = v17;
    v20[29] = v11;
    v20[30] = v6;
    v20[31] = v22;
    v20[32] = v23;
    sub_1000782EC(v20);
    sub_100078238(v18, v19, v16);
    sub_100078054((uint64_t)v24);
    sub_100006178(v2);
    memcpy(v21, v26, 0xA8uLL);
    v21[21] = v18;
    v21[22] = v19;
    v21[23] = v16;
    v21[24] = v15;
    v21[25] = v14;
    v21[26] = v13;
    v21[27] = v12;
    v21[28] = v17;
    v21[29] = v11;
    v21[30] = v6;
    v21[31] = v9;
    v21[32] = v10;
    sub_100078414(v21);
    memcpy(v4, v20, 0x108uLL);
  }
  sub_100069FB4();
}

uint64_t sub_10006FBE4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x74756F68636E7570 && a2 == 0xEB000000006C7255)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_10006FC84()
{
  return 0x74756F68636E7570;
}

uint64_t sub_10006FCA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x69746E756F437369 && a2 == 0xEE006E776F44676ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x746E657645736168 && a2 == 0xED00006465646E45;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7954646F69726570 && a2 == 0xEA00000000006570;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6F69726550627573 && a2 == 0xED00006570795464;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6156646F69726570 && a2 == 0xEB0000000065756CLL;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x7365726F6373 && a2 == 0xE600000000000000;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x6D69546B636F6C63 && a2 == 0xE900000000000065)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v12) {
                return 6;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100070008(char a1)
{
  uint64_t result = 0x69746E756F437369;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x746E657645736168;
      break;
    case 2:
      uint64_t result = 0x7954646F69726570;
      break;
    case 3:
      uint64_t result = 0x6F69726550627573;
      break;
    case 4:
      uint64_t result = 0x6156646F69726570;
      break;
    case 5:
      uint64_t result = 0x7365726F6373;
      break;
    case 6:
      uint64_t result = 0x6D69546B636F6C63;
      break;
    default:
      return result;
  }
  return result;
}

void sub_100070120()
{
  sub_100069FCC();
  BOOL v2 = v1;
  uint64_t v4 = v3;
  sub_100005E5C(&qword_1000FE6D0);
  sub_100009830();
  __chkstk_darwin(v5);
  sub_100069F80();
  sub_100005EA0(v2, v2[3]);
  sub_100077DFC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    sub_100006178((uint64_t)v2);
  }
  else
  {
    char v6 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    char v7 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v22 = sub_10007AB40();
    char v23 = v7;
    uint64_t v9 = v8;
    swift_bridgeObjectRetain();
    uint64_t v24 = v9;
    uint64_t v21 = sub_10007AB40();
    uint64_t v11 = v10;
    swift_bridgeObjectRetain();
    uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    char v19 = v13;
    uint64_t v20 = v12;
    sub_100005E5C(&qword_1000FE6E0);
    sub_10007A034(&qword_1000FE6E8, &qword_1000FE6E0);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_10007AB40();
    uint64_t v16 = v15;
    uint64_t v18 = v14;
    sub_10007A858();
    v17();
    swift_bridgeObjectRetain();
    sub_100006178((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(unsigned char *)uint64_t v4 = v6;
    *(unsigned char *)(v4 + 1) = v23;
    *(void *)(v4 + 8) = v22;
    *(void *)(v4 + 16) = v24;
    *(void *)(v4 + 24) = v21;
    *(void *)(v4 + 32) = v11;
    *(void *)(v4 + 40) = v20;
    *(unsigned char *)(v4 + 48) = v19 & 1;
    *(void *)(v4 + 56) = v25;
    *(void *)(v4 + 64) = v18;
    *(void *)(v4 + 72) = v16;
  }
  sub_100069FB4();
}

void sub_1000704E0()
{
  sub_100069FCC();
  BOOL v2 = v1;
  uint64_t v4 = v3;
  sub_100005E5C(v5);
  sub_100009830();
  __chkstk_darwin(v6);
  sub_100009864();
  sub_100005EA0(v4, v4[3]);
  v2();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v0)
  {
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    sub_100009894();
    v7();
  }
  sub_100006178((uint64_t)v4);
  sub_100069FB4();
}

uint64_t sub_100070600(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6F676F4C6D616574 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_100070688()
{
  return 0x6F676F4C6D616574;
}

void sub_1000706A0()
{
  sub_10007A9C8();
  sub_10007AAEC();
  sub_100005E5C(&qword_1000FE840);
  sub_100009830();
  __chkstk_darwin(v2);
  sub_10007A73C();
  sub_1000796C8();
  sub_10007A6F8();
  if (!v1)
  {
    sub_100079714();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v3 = sub_10007A6DC();
    v4(v3);
  }
  sub_100006178(v0);
  sub_10007A9B4();
}

uint64_t sub_1000707A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6169766572626261 && a2 == 0xEC0000006E6F6974;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x736567616D69 && a2 == 0xE600000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x656D6F487369 && a2 == 0xE600000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_1000709D0(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6169766572626261;
      break;
    case 2:
      uint64_t result = 0x756F72676B636162;
      break;
    case 3:
      uint64_t result = 0x736567616D69;
      break;
    case 4:
      uint64_t result = 0x656D6F487369;
      break;
    default:
      return result;
  }
  return result;
}

void sub_100070A80()
{
  sub_100069FCC();
  BOOL v2 = v1;
  uint64_t v4 = v3;
  sub_100005E5C(&qword_1000FE828);
  sub_100009830();
  __chkstk_darwin(v5);
  sub_10007A8E4();
  sub_100005EA0(v2, v2[3]);
  sub_100079630();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    sub_100006178((uint64_t)v2);
  }
  else
  {
    sub_10007AA4C();
    uint64_t v6 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v8 = v7;
    uint64_t v18 = v6;
    swift_bridgeObjectRetain();
    sub_10007AA4C();
    uint64_t v9 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v19 = v10;
    uint64_t v17 = v9;
    LOBYTE(v20) = 2;
    swift_bridgeObjectRetain();
    uint64_t v16 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v12 = v11;
    sub_10007967C();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_100047998(v20, v21);
    sub_10007AA4C();
    char v13 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v14 = sub_10007A760();
    v15(v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100047998(v20, v21);
    sub_1000479A8(v20, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100006178((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000479A8(v20, v21);
    *(void *)uint64_t v4 = v18;
    *(void *)(v4 + 8) = v8;
    *(void *)(v4 + 16) = v17;
    *(void *)(v4 + 24) = v19;
    *(void *)(v4 + 32) = v16;
    *(void *)(v4 + 40) = v12;
    *(void *)(v4 + 48) = v20;
    *(void *)(v4 + 56) = v21;
    *(unsigned char *)(v4 + 64) = v13;
  }
  sub_100069FB4();
}

uint64_t sub_100070E0C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001000D24E0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_100070E94()
{
  return 0xD000000000000014;
}

void sub_100070EB0()
{
  sub_10007A9C8();
  sub_10007AAEC();
  sub_100005E5C(&qword_1000FE720);
  sub_100009830();
  __chkstk_darwin(v2);
  sub_10007A73C();
  sub_100078108();
  sub_10007A6F8();
  if (!v1)
  {
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    sub_1000617F8();
    v3();
  }
  sub_100006178(v0);
  sub_10007A9B4();
}

uint64_t sub_100070FC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x54656D6147657270 && a2 == 0xEC000000656C7469;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x74695474726F6873 && a2 == 0xEA0000000000656CLL;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6D6954746E657665 && a2 == 0xE900000000000065;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x6D614E65756E6576 && a2 == 0xE900000000000065;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x64644165756E6576 && a2 == 0xE900000000000072;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x644965756761656CLL && a2 == 0xE800000000000000;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  BOOL v13 = a1 == 0x644974726F7073 && a2 == 0xE700000000000000;
                  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x74697465706D6F63 && a2 == 0xEB0000000073726FLL;
                    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else if (a1 == 7107189 && a2 == 0xE300000000000000)
                    {
                      swift_bridgeObjectRelease();
                      return 10;
                    }
                    else
                    {
                      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      if (v16) {
                        return 10;
                      }
                      else {
                        return 11;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100071434()
{
  return 11;
}

uint64_t sub_10007143C(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x54656D6147657270;
      break;
    case 3:
      uint64_t v3 = 0x5474726F6873;
      goto LABEL_11;
    case 4:
      uint64_t result = 0x6D6954746E657665;
      break;
    case 5:
      uint64_t result = 0x6D614E65756E6576;
      break;
    case 6:
      uint64_t result = 0x64644165756E6576;
      break;
    case 7:
      uint64_t result = 0x644965756761656CLL;
      break;
    case 8:
      uint64_t result = 0x644974726F7073;
      break;
    case 9:
      uint64_t v3 = 0x7465706D6F63;
LABEL_11:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7469000000000000;
      break;
    case 10:
      uint64_t result = 7107189;
      break;
    default:
      return result;
  }
  return result;
}

void sub_100071594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11)
{
  sub_100069FCC();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  sub_100005E5C(&qword_1000FE6F0);
  sub_100009830();
  __chkstk_darwin(v16);
  sub_100009864();
  uint64_t v57 = v13;
  sub_10007A8C4();
  sub_100077E48();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v11)
  {
    sub_100006178(v13);
  }
  else
  {
    uint64_t v48 = v15;
    uint64_t v17 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v19 = v18;
    swift_bridgeObjectRetain();
    uint64_t v55 = v19;
    uint64_t v47 = sub_10007A71C();
    uint64_t v21 = v20;
    swift_bridgeObjectRetain();
    uint64_t v54 = v21;
    uint64_t v46 = sub_10007A71C();
    LOBYTE(v59) = 3;
    uint64_t v23 = v22;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_10007A71C();
    uint64_t v53 = v23;
    uint64_t v26 = v25;
    uint64_t v45 = v24;
    sub_100077E94();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v52 = v26;
    uint64_t v44 = v59;
    char v43 = v60;
    char v83 = BYTE1(v60);
    char v41 = BYTE1(v60);
    uint64_t v42 = sub_10007A71C();
    uint64_t v28 = v27;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_10007A71C();
    uint64_t v51 = v29;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_10007A71C();
    uint64_t v50 = v31;
    uint64_t v39 = v30;
    LOBYTE(v59) = 8;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_10007A71C();
    uint64_t v33 = v32;
    sub_100005E5C(&qword_1000FE708);
    LOBYTE(v58[0]) = 9;
    sub_100077EE0();
    uint64_t v56 = v33;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v49 = v59;
    swift_bridgeObjectRetain();
    uint64_t v34 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v36 = v35;
    sub_10007A858();
    v37();
    v58[0] = v17;
    v58[1] = v55;
    v58[2] = v47;
    v58[3] = v54;
    v58[4] = v46;
    v58[5] = v53;
    v58[6] = v45;
    v58[7] = v52;
    v58[8] = v44;
    LOBYTE(v58[9]) = v43;
    BYTE1(v58[9]) = v41;
    v58[10] = v42;
    v58[11] = v28;
    v58[12] = v40;
    v58[13] = v51;
    v58[14] = v39;
    v58[15] = v50;
    v58[16] = v38;
    v58[17] = v56;
    v58[18] = v49;
    v58[19] = v34;
    v58[20] = v36;
    sub_100077FA0((uint64_t)v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100006178(v57);
    uint64_t v59 = v17;
    uint64_t v60 = v55;
    uint64_t v61 = v47;
    uint64_t v62 = v54;
    uint64_t v63 = v46;
    uint64_t v64 = v53;
    uint64_t v65 = v45;
    uint64_t v66 = v52;
    uint64_t v67 = v44;
    char v68 = v43;
    char v69 = v83;
    int v70 = a10;
    __int16 v71 = a11;
    uint64_t v72 = v42;
    uint64_t v73 = v28;
    uint64_t v74 = v40;
    uint64_t v75 = v51;
    uint64_t v76 = v39;
    uint64_t v77 = v50;
    uint64_t v78 = v38;
    uint64_t v79 = v56;
    uint64_t v80 = v49;
    uint64_t v81 = v34;
    uint64_t v82 = v36;
    sub_100078054((uint64_t)&v59);
    memcpy(v48, v58, 0xA8uLL);
  }
  sub_100069FB4();
}

Swift::Int sub_100071D8C()
{
  return sub_100066290();
}

uint64_t sub_100071DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100074570(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100071DD8(uint64_t a1)
{
  unint64_t v2 = sub_10007796C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100071E14(uint64_t a1)
{
  unint64_t v2 = sub_10007796C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_100071E50@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_10006F494(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x108uLL);
  }
  return result;
}

uint64_t sub_100071EA4()
{
  return sub_10006F798(*v0);
}

uint64_t sub_100071EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10006F610(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100071ED4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10006F790();
  *a1 = result;
  return result;
}

uint64_t sub_100071EFC(uint64_t a1)
{
  unint64_t v2 = sub_100078154();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100071F38(uint64_t a1)
{
  unint64_t v2 = sub_100078154();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100071F74(void *a1@<X8>)
{
  sub_10006F800();
  if (!v1) {
    memcpy(a1, __src, 0x108uLL);
  }
}

uint64_t sub_100071FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10006FBE4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100071FF8(uint64_t a1)
{
  unint64_t v2 = sub_100077DB0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100072034(uint64_t a1)
{
  unint64_t v2 = sub_100077DB0();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100072070(void *a1@<X8>)
{
}

uint64_t sub_1000720AC()
{
  return sub_100070008(*v0);
}

uint64_t sub_1000720B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10006FCA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000720DC(uint64_t a1)
{
  unint64_t v2 = sub_100077DFC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100072118(uint64_t a1)
{
  unint64_t v2 = sub_100077DFC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100072154(void *a1@<X8>)
{
  sub_100070120();
  if (!v1) {
    memcpy(a1, v3, 0x50uLL);
  }
}

uint64_t sub_1000721A0(uint64_t a1)
{
  unint64_t v2 = sub_100079760();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000721DC(uint64_t a1)
{
  unint64_t v2 = sub_100079760();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100072218(void *a1@<X8>)
{
}

void sub_100072254(void *a1@<X8>)
{
  sub_1000704E0();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
  }
}

uint64_t sub_100072290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100070600(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1000722BC(uint64_t a1)
{
  unint64_t v2 = sub_1000796C8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000722F8(uint64_t a1)
{
  unint64_t v2 = sub_1000796C8();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100072334(void *a1@<X8>)
{
  sub_1000706A0();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
  }
}

uint64_t sub_100072360()
{
  return sub_1000709D0(*v0);
}

uint64_t sub_100072368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000707A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100072390(uint64_t a1)
{
  unint64_t v2 = sub_100079630();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000723CC(uint64_t a1)
{
  unint64_t v2 = sub_100079630();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100072408(void *a1@<X8>)
{
  sub_100070A80();
  if (!v1) {
    memcpy(a1, __src, 0x41uLL);
  }
}

uint64_t sub_100072458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100070E0C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100072484(uint64_t a1)
{
  unint64_t v2 = sub_100078108();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000724C0(uint64_t a1)
{
  unint64_t v2 = sub_100078108();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1000724FC(uint64_t a1@<X8>)
{
  sub_100070EB0();
  if (!v1)
  {
    *(void *)a1 = v3;
    *(unsigned char *)(a1 + 8) = v4 & 1;
  }
}

uint64_t sub_100072530()
{
  return sub_10007143C(*v0);
}

uint64_t sub_100072538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100070FC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100072560@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100071434();
  *a1 = result;
  return result;
}

uint64_t sub_100072588(uint64_t a1)
{
  unint64_t v2 = sub_100077E48();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000725C4(uint64_t a1)
{
  unint64_t v2 = sub_100077E48();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100072600(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  sub_100071594(a1, a2, a3, a4, a5, a6, a7, a8, v11, __src[0], __src[1]);
  if (!v9) {
    memcpy(a9, __src, 0xA8uLL);
  }
}

uint64_t sub_10007264C()
{
  sub_10007278C(v9);
  if (qword_1000FBD58 != -1) {
    swift_once();
  }
  uint64_t v0 = (uint64_t *)qword_10010A490;
  uint64_t v1 = sub_10000A014((uint64_t)v9, v9[3]);
  __n128 v2 = __chkstk_darwin(v1);
  char v4 = (char *)&v9[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v5 + 16))(v4, v2);
  swift_retain_n();
  BOOL v6 = sub_10007508C(v4, v0);
  swift_release();
  uint64_t result = sub_100006178((uint64_t)v9);
  qword_10010A4E8 = (uint64_t)v6;
  return result;
}

uint64_t sub_10007278C@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = sub_1000522C4();
  uint64_t v4 = v3;
  id v5 = [self defaultSessionConfiguration];
  id v6 = [objc_allocWithZone((Class)AMSURLSession) initWithConfiguration:v5];

  if (qword_1000FBE38 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_10010A5E8;
  v11[3] = type metadata accessor for SportsPerformanceMeasurement();
  v11[4] = &off_1000F5568;
  v11[0] = v7;
  a1[3] = (uint64_t)&type metadata for ApiAgent;
  a1[4] = (uint64_t)&off_1000F15B0;
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = (void *)(v8 + 16);
  *a1 = v8;
  swift_retain();
  sub_100027480(v6, (uint64_t)v11, 0, v2, v4, v9);
  swift_bridgeObjectRelease();

  return sub_100006178((uint64_t)v11);
}

uint64_t sub_1000728D0()
{
  uint64_t v3 = sub_100005E5C(&qword_1000FE528);
  sub_100009830();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10000987C();
  uint64_t v7 = sub_100005E5C(&qword_1000FE5B8);
  sub_100009830();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100009908();
  if (*(void *)(v0 + 96))
  {
    swift_bridgeObjectRetain();
    sub_100005E5C(&qword_1000FC820);
    Just.init(_:)();
    sub_100005E5C((uint64_t *)&unk_1000FDA30);
    Just.setFailureType<A>(to:)();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v3);
    sub_10000953C(&qword_1000FE5C8, &qword_1000FE5B8);
    uint64_t v11 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v7);
  }
  else
  {
    sub_100072AB4();
    sub_100005E5C(&qword_1000FE4C8);
    sub_10000953C(&qword_1000FE5C0, &qword_1000FE4C8);
    return Publisher.eraseToAnyPublisher()();
  }
  return v11;
}

void sub_100072AB4()
{
  sub_1000098B8();
  uint64_t v1 = sub_100005E5C(&qword_1000FE4D0);
  __chkstk_darwin(v1 - 8);
  sub_10000C58C();
  uint64_t v16 = v2;
  sub_100005E5C(&qword_1000FE4D8);
  sub_1000438A0();
  __chkstk_darwin(v3);
  sub_100009908();
  sub_100005E5C(&qword_1000FE3D8);
  sub_1000438A0();
  __chkstk_darwin(v4);
  sub_10007A8E4();
  sub_100005E5C(&qword_1000FE4E0);
  sub_100009830();
  __chkstk_darwin(v5);
  sub_10000987C();
  sub_100005E5C(&qword_1000FE4E8);
  sub_100009830();
  __chkstk_darwin(v6);
  sub_10000C58C();
  sub_100005E5C(&qword_1000FE4F0);
  sub_100009830();
  __chkstk_darwin(v7);
  sub_10000C58C();
  sub_100005E5C(&qword_1000FE4F8);
  sub_100009830();
  __chkstk_darwin(v8);
  sub_10000C58C();
  sub_100005EA0((void *)(v0 + 56), *(void *)(v0 + 80));
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  sub_100005E5C(&qword_1000FC080);
  sub_10000953C(&qword_1000FC090, &qword_1000FC080);
  Publisher<>.setFailureType<A>(to:)();
  sub_100005EA0((void *)(v0 + 56), *(void *)(v0 + 80));
  sub_100005E5C(&qword_1000FC180);
  sub_10000953C(&qword_1000FC188, &qword_1000FC180);
  Publisher<>.setFailureType<A>(to:)();
  sub_10000953C(&qword_1000FE400, &qword_1000FE3D8);
  sub_10000953C(&qword_1000FE500, &qword_1000FE4D8);
  Publishers.Zip.init(_:_:)();
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100075980;
  *(void *)(v10 + 24) = v9;
  static Subscribers.Demand.unlimited.getter();
  sub_100005E5C(&qword_1000FE508);
  sub_100005E5C(&qword_1000FE510);
  sub_10000953C(&qword_1000FE518, &qword_1000FE4E0);
  sub_10000953C(&qword_1000FE520, &qword_1000FE510);
  Publisher.flatMap<A, B>(maxPublishers:_:)();
  swift_release();
  sub_100009894();
  v11();
  static Subscribers.Demand.unlimited.getter();
  sub_100005E5C(&qword_1000FE528);
  sub_10000953C(&qword_1000FE530, &qword_1000FE4E8);
  sub_10000953C(&qword_1000FE538, &qword_1000FE528);
  Publisher.flatMap<A>(maxPublishers:_:)();
  sub_100009894();
  v12();
  sub_100075988();
  uint64_t v17 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  sub_1000082C0(v16, 1, 1, v13);
  sub_10000953C(&qword_1000FE540, &qword_1000FE4F0);
  sub_100077AA8(&qword_1000FE548, (void (*)(uint64_t))sub_100075988);
  Publisher.receive<A>(on:options:)();
  sub_1000437A4(v16, &qword_1000FE4D0);

  sub_100009894();
  v14();
  swift_allocObject();
  swift_weakInit();
  sub_10000953C(&qword_1000FE550, &qword_1000FE4F8);
  Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  sub_100009894();
  v15();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  sub_1000098A0();
}

uint64_t sub_1000731C8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  uint64_t v52 = a1;
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  __chkstk_darwin(v3);
  uint64_t v53 = v4;
  uint64_t v54 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100005E5C(&qword_1000FE558);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100005E5C(&qword_1000FE560);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = Strong;
    sub_100005E5C(&qword_1000FC8B8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000CC890;
    *(void *)(inited + 32) = 0x72656C6C6163;
    *(void *)(inited + 40) = 0xE600000000000000;
    *(void *)(inited + 48) = 0x6B2D7374726F7073;
    *(void *)(inited + 56) = 0xEA00000000007469;
    *(void *)(inited + 64) = 25193;
    *(void *)(inited + 72) = 0xE200000000000000;
    *(void *)(inited + 80) = 1702195828;
    *(void *)(inited + 88) = 0xE400000000000000;
    *(void *)(inited + 96) = 7169648;
    *(void *)(inited + 104) = 0xE300000000000000;
    NSString v19 = String._bridgeToObjectiveC()();
    uint64_t v20 = (void *)MGGetStringAnswer();

    if (v20)
    {
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v23 = v22;
    }
    else
    {
      unint64_t v23 = 0xE700000000000000;
      uint64_t v21 = 0x6E776F6E6B6E75;
    }
    *(void *)(inited + 112) = v21;
    *(void *)(inited + 120) = v23;
    *(void *)(inited + 128) = 0x6E6F69676572;
    *(void *)(inited + 136) = 0xE600000000000000;
    static Locale.current.getter();
    Locale.region.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v26 = type metadata accessor for Locale.Region();
    int v27 = sub_1000082E8((uint64_t)v11, 1, v26);
    uint64_t v49 = v17;
    if (v27 == 1)
    {
      sub_1000437A4((uint64_t)v11, &qword_1000FE558);
      uint64_t v28 = 0;
      unint64_t v29 = 0xE000000000000000;
    }
    else
    {
      uint64_t v28 = Locale.Region.identifier.getter();
      unint64_t v29 = v30;
      (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v11, v26);
    }
    uint64_t v31 = v52;
    uint64_t v32 = v53;
    uint64_t v34 = v50;
    uint64_t v33 = v51;
    *(void *)(inited + 144) = v28;
    *(void *)(inited + 152) = v29;
    *(void *)(inited + 160) = 6841971;
    *(void *)(inited + 168) = 0xE300000000000000;
    *(void *)(inited + 176) = v34;
    *(void *)(inited + 184) = v33;
    *(void *)(inited + 192) = 118;
    *(void *)(inited + 200) = 0xE100000000000000;
    uint64_t v57 = 74;
    swift_bridgeObjectRetain();
    *(void *)(inited + 208) = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(inited + 216) = v35;
    uint64_t v53 = Dictionary.init(dictionaryLiteral:)();
    unint64_t v37 = v54;
    uint64_t v36 = v55;
    uint64_t v38 = v56;
    (*(void (**)(char *, void *, uint64_t))(v55 + 16))(v54, v31, v56);
    uint64_t v52 = sub_10008064C();
    sub_100027288();
    uint64_t v39 = Dictionary.init(dictionaryLiteral:)();
    unint64_t v40 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    unint64_t v41 = (v32 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v42 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v42 + v40, v37, v38);
    char v43 = (void *)(v42 + v41);
    *char v43 = 0xD000000000000016;
    v43[1] = 0x80000001000D26C0;
    unint64_t v44 = v42 + ((v41 + 23) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v44 = v53;
    *(unsigned char *)(v44 + 8) = 0;
    *(void *)(v42 + ((v41 + 39) & 0xFFFFFFFFFFFFFFF8)) = v52;
    uint64_t v45 = sub_100005EA0((void *)(v49 + 16), *(void *)(v49 + 40));
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    uint64_t v46 = JSONDecoder.init()();
    uint64_t v25 = sub_100075AA4((uint64_t)sub_100073A98, v42, v39, 0, v46, (uint64_t)v45);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    id v24 = objc_allocWithZone((Class)NSError);
    uint64_t v57 = (uint64_t)sub_10002EFA4(0xD000000000000011, 0x80000001000D0580, 0, 0);
    sub_100005E5C(&qword_1000FE508);
    sub_100005E5C((uint64_t *)&unk_1000FDA30);
    Fail.init(error:)();
    sub_10000953C(&qword_1000FE568, &qword_1000FE560);
    uint64_t v25 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return v25;
}

uint64_t sub_100073858(uint64_t a1)
{
  if (!*(void *)(a1 + *(int *)(sub_100005E5C(&qword_1000FE508) + 40))) {
    Dictionary.init(dictionaryLiteral:)();
  }
  swift_bridgeObjectRetain();
  sub_100005E5C(&qword_1000FC820);
  return Just.init(_:)();
}

uint64_t sub_1000738F0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(void *)(result + 96) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    PassthroughSubject.send(_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_100073978()
{
  sub_100006178(v0 + 16);
  sub_100006178(v0 + 56);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000739B8()
{
  sub_100073978();

  return _swift_deallocClassInstance(v0, 120, 7);
}

uint64_t type metadata accessor for UTSHeadersApiAgent()
{
  return self;
}

_OWORD *sub_100073A10(_OWORD *a1, _OWORD *a2)
{
  return a2;
}

uint64_t sub_100073A48()
{
  swift_bridgeObjectRelease();
  sub_100006178(v0 + 32);
  uint64_t v1 = sub_10007ACF0();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_100073A80(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10006F16C(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24), (void *)(v3 + 32));
}

uint64_t sub_100073A8C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006F424(a1, *(uint64_t (**)(uint64_t, void, void))(v2 + 16), a2);
}

id sub_100073A98()
{
  return sub_1000087A0();
}

void sub_100073AB0()
{
  sub_10007A9C8();
  sub_10007AAEC();
  sub_100005E5C(&qword_1000FE908);
  sub_100009830();
  __chkstk_darwin(v2);
  sub_10007A73C();
  sub_100079FE8();
  sub_10007A6F8();
  if (v1)
  {
    sub_100006178(v0);
  }
  else
  {
    sub_100005E5C(&qword_1000FC820);
    sub_10007A034((unint64_t *)&qword_1000FD478, &qword_1000FC820);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v3 = sub_10007A6DC();
    v4(v3);
    sub_10007ACD8();
  }
  sub_10007AABC();
  sub_10007A9B4();
}

void sub_100073BC4()
{
  sub_10007A9C8();
  uint64_t v1 = v0;
  sub_100005E5C(&qword_1000FE918);
  sub_100009830();
  __chkstk_darwin(v2);
  sub_10000987C();
  sub_10007A8C4();
  sub_10007A0A0();
  sub_10007AA60();
  if (v1) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = Dictionary.init(dictionaryLiteral:)();
  }
  swift_bridgeObjectRetain();
  sub_1000A3474(v3);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  sub_100073CE0(v5);
  sub_1000617F8();
  v6();
  swift_bridgeObjectRelease();
  sub_10007ACCC();
  sub_10007A9B4();
}

uint64_t sub_100073CE0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v16 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v17 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  if (!v5) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v26 = (v5 - 1) & v5;
  unint64_t v8 = __clz(__rbit64(v5)) | (v7 << 6);
LABEL_5:
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = (void *)(*(void *)(a1 + 48) + 16 * v8);
  uint64_t v11 = v10[1];
  *(void *)&long long v22 = *v10;
  *((void *)&v22 + 1) = v11;
  sub_10001BB1C(v9 + 32 * v8, (uint64_t)v23);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_10007A0EC((uint64_t)&v22, (uint64_t)v24, &qword_1000FE928);
    if (!v24[1]) {
      return swift_release();
    }
    int64_t v19 = v7;
    uint64_t v14 = v24[0];
    sub_100028F5C(&v25, &v22);
    sub_10001BB1C((uint64_t)&v22, (uint64_t)v21);
    if (swift_dynamicCast())
    {
      uint64_t v20 = v14;
      sub_100005E5C(&qword_1000FE918);
      KeyedEncodingContainer.encode(_:forKey:)();
      if (v2)
      {
        swift_bridgeObjectRelease();
        sub_100006178((uint64_t)&v22);
        swift_bridgeObjectRelease();
LABEL_40:
        swift_release();
        return sub_100006178((uint64_t)v21);
      }
      sub_100006178((uint64_t)&v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v7 = v19;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_100005E5C(&qword_1000FD950);
      int64_t v7 = v19;
      if (!swift_dynamicCast())
      {
        sub_100006178((uint64_t)&v22);
        goto LABEL_23;
      }
      sub_100073CE0(v20);
      if (v2)
      {
        swift_bridgeObjectRelease();
        sub_100006178((uint64_t)&v22);
        goto LABEL_40;
      }
      sub_100006178((uint64_t)&v22);
      swift_bridgeObjectRelease();
    }
LABEL_23:
    uint64_t result = sub_100006178((uint64_t)v21);
    unint64_t v5 = v26;
    if (v26) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v12 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v12 < v17)
    {
      unint64_t v13 = *(void *)(v16 + 8 * v12);
      if (v13) {
        goto LABEL_9;
      }
      v7 += 2;
      if (v12 + 1 >= v17)
      {
        int64_t v7 = v12;
        goto LABEL_14;
      }
      unint64_t v13 = *(void *)(v16 + 8 * v7);
      if (v13)
      {
        ++v12;
LABEL_9:
        uint64_t v26 = (v13 - 1) & v13;
        unint64_t v8 = __clz(__rbit64(v13)) + (v12 << 6);
        int64_t v7 = v12;
        goto LABEL_5;
      }
      if (v12 + 2 < v17) {
        break;
      }
    }
LABEL_14:
    uint64_t v26 = 0;
    memset(v23, 0, sizeof(v23));
    long long v22 = 0u;
  }
  unint64_t v13 = *(void *)(v16 + 8 * (v12 + 2));
  if (v13)
  {
    v12 += 2;
    goto LABEL_9;
  }
  int64_t v15 = v12 + 3;
  if (v12 + 3 >= v17)
  {
    int64_t v7 = v12 + 2;
    goto LABEL_14;
  }
  unint64_t v13 = *(void *)(v16 + 8 * v15);
  if (v13)
  {
    v12 += 3;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v12 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v12 >= v17)
    {
      int64_t v7 = v17 - 1;
      goto LABEL_14;
    }
    unint64_t v13 = *(void *)(v16 + 8 * v12);
    ++v15;
    if (v13) {
      goto LABEL_9;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

BOOL sub_10007406C(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000EF3C0, v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

uint64_t sub_1000740B8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001000D2700)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_100074140()
{
  return 0xD000000000000011;
}

void sub_10007415C()
{
  sub_10007A9C8();
  sub_10007AB30();
  sub_100005E5C(&qword_1000FE8E0);
  sub_100009830();
  __chkstk_darwin(v0);
  sub_10007A8C4();
  sub_100079CAC();
  sub_10007AA60();
  sub_100079D44();
  sub_10007AA7C();
  sub_1000617F8();
  v1();
  sub_10007ACCC();
  sub_10007A9B4();
}

void sub_100074238()
{
  sub_10007A9C8();
  sub_10007AAEC();
  sub_100005E5C(&qword_1000FE8C8);
  sub_100009830();
  __chkstk_darwin(v2);
  sub_10007A73C();
  sub_100079CAC();
  sub_10007A6F8();
  if (v1)
  {
    sub_100006178(v0);
  }
  else
  {
    sub_100079CF8();
    sub_10007A990();
    uint64_t v3 = sub_10007A6DC();
    v4(v3);
    sub_10007ACD8();
  }
  sub_10007AABC();
  sub_10007A9B4();
}

uint64_t sub_100074314(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001000D26E0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_10007439C()
{
  return 0xD000000000000010;
}

void sub_1000743B8()
{
  sub_10007A9C8();
  sub_10007AB30();
  sub_100005E5C(&qword_1000FE818);
  sub_100009830();
  __chkstk_darwin(v0);
  sub_10007A8C4();
  sub_10007954C();
  sub_10007AA60();
  sub_1000795E4();
  sub_10007AA7C();
  sub_1000617F8();
  v1();
  sub_10007ACCC();
  sub_10007A9B4();
}

void sub_100074494()
{
  sub_10007A9C8();
  sub_10007AAEC();
  sub_100005E5C(&qword_1000FE800);
  sub_100009830();
  __chkstk_darwin(v2);
  sub_10007A73C();
  sub_10007954C();
  sub_10007A6F8();
  if (v1)
  {
    sub_100006178(v0);
  }
  else
  {
    sub_100079598();
    sub_10007A990();
    uint64_t v3 = sub_10007A6DC();
    v4(v3);
    sub_10007ACD8();
  }
  sub_10007AABC();
  sub_10007A9B4();
}

uint64_t sub_100074570(uint64_t a1, uint64_t a2)
{
  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1000745E8()
{
  sub_10007A9C8();
  sub_10007AB30();
  sub_100005E5C(&qword_1000FE6B0);
  sub_100009830();
  __chkstk_darwin(v0);
  sub_10007A8C4();
  sub_100077B10();
  sub_10007AA60();
  sub_100077D64();
  sub_10007AA7C();
  sub_1000617F8();
  v1();
  sub_10007ACCC();
  sub_10007A9B4();
}

void sub_1000746C4()
{
  sub_10007A9C8();
  sub_10007AAEC();
  sub_100005E5C(&qword_1000FE678);
  sub_100009830();
  __chkstk_darwin(v2);
  sub_10007A73C();
  sub_100077B10();
  sub_10007A6F8();
  if (v1)
  {
    sub_100006178(v0);
  }
  else
  {
    sub_100077B5C();
    sub_10007A990();
    uint64_t v3 = sub_10007A6DC();
    v4(v3);
    sub_10007ACD8();
  }
  sub_10007AABC();
  sub_10007A9B4();
}

BOOL sub_1000747AC@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_10007406C(*a1);
  *a2 = result;
  return result;
}

void sub_1000747E4(void *a1@<X8>)
{
  *a1 = 0x746C7561666544;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_100074800()
{
  return 0x746C7561666544;
}

uint64_t sub_100074818@<X0>(Swift::String a1@<X1:X0>, BOOL *a2@<X8>)
{
  uint64_t result = sub_1000740B4(a1);
  *a2 = result != 0;
  return result;
}

uint64_t sub_100074848(uint64_t a1)
{
  unint64_t v2 = sub_100079FE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100074884(uint64_t a1)
{
  unint64_t v2 = sub_100079FE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1000748C0(void *a1@<X8>)
{
  sub_100073AB0();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1000748EC()
{
}

uint64_t sub_10007490C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000740B8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100074938(uint64_t a1)
{
  unint64_t v2 = sub_100079CAC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100074974(uint64_t a1)
{
  unint64_t v2 = sub_100079CAC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1000749B0(void *a1@<X8>)
{
  sub_100074238();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1000749DC()
{
}

uint64_t sub_1000749FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100074314(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100074A28(uint64_t a1)
{
  unint64_t v2 = sub_10007954C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100074A64(uint64_t a1)
{
  unint64_t v2 = sub_10007954C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100074AA0(void *a1@<X8>)
{
  sub_100074494();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_100074ACC()
{
}

uint64_t sub_100074AE8(uint64_t a1)
{
  unint64_t v2 = sub_100077B10();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100074B24(uint64_t a1)
{
  unint64_t v2 = sub_100077B10();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100074B60(void *a1@<X8>)
{
  sub_1000746C4();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_100074B8C()
{
}

uint64_t sub_100074BB4()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_100074C00()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void sub_100074C30(uint64_t a1@<X8>)
{
  sub_100074BA8();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
}

uint64_t sub_100074C64()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_100074C70@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_100074BB4();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_100074CA0(uint64_t a1)
{
  unint64_t v2 = sub_10007A0A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100074CDC(uint64_t a1)
{
  unint64_t v2 = sub_10007A0A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100074D18@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unint64_t a6@<X6>, uint64_t a7@<X8>)
{
  return sub_10006E618(*a1, a2, a3, a4, a5, a6, a7);
}

void sub_100074D20()
{
  sub_1000098B8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = sub_100005E5C(&qword_1000FE4A8);
  sub_100009830();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_100009908();
  v20[3] = &type metadata for AMSApiRequest;
  v20[4] = &off_1000F0670;
  int64_t v15 = (void *)swift_allocObject();
  v20[0] = v15;
  uint64_t v15[2] = v10;
  void v15[3] = v8;
  v15[4] = v6;
  void v15[5] = v4;
  sub_100008218(v2, (uint64_t)v19);
  sub_100008B98((uint64_t)v20, (uint64_t)v18);
  uint64_t v16 = swift_allocObject();
  memcpy((void *)(v16 + 16), v19, 0x60uLL);
  sub_100008CAC(v18, v16 + 112);
  sub_100005E5C(&qword_1000FE4B0);
  swift_allocObject();
  id v17 = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  v19[0] = Future.init(_:)();
  sub_100005E5C((uint64_t *)&unk_1000FDA30);
  sub_10000953C(&qword_1000FE4B8, &qword_1000FE4B0);
  Publisher.mapError<A>(_:)();
  swift_release();
  sub_10000953C(&qword_1000FE4C0, &qword_1000FE4A8);
  Publisher.eraseToAnyPublisher()();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0, v11);
  sub_100006178((uint64_t)v20);
  sub_1000098A0();
}

uint64_t sub_100074F60@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unint64_t a6@<X6>, uint64_t a7@<X8>)
{
  return sub_10006E714(*a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100074F68@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unint64_t a6@<X6>, uint64_t a7@<X8>)
{
  return sub_10006E90C(*a1, a1[1], a1[2], a2, a3, a4, a5, a7, a6);
}

void *sub_100074FB0(const void *a1, uint64_t a2, void *a3)
{
  uint64_t v11 = &type metadata for ApiAgent;
  uint64_t v12 = &off_1000F15B0;
  *(void *)&long long v10 = swift_allocObject();
  memcpy((void *)(v10 + 16), a1, 0x60uLL);
  uint64_t v8 = type metadata accessor for BagProvider();
  uint64_t v9 = &off_1000F07B8;
  *(void *)&long long v7 = a2;
  a3[12] = 0;
  sub_100005E5C(&qword_1000FE4C8);
  swift_allocObject();
  a3[13] = PassthroughSubject.init()();
  a3[14] = &_swiftEmptySetSingleton;
  sub_100008CAC(&v10, (uint64_t)(a3 + 2));
  sub_100008CAC(&v7, (uint64_t)(a3 + 7));
  return a3;
}

void *sub_10007508C(const void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  v19[3] = &type metadata for ApiAgent;
  void v19[4] = &off_1000F15B0;
  v19[0] = swift_allocObject();
  memcpy((void *)(v19[0] + 16), a1, 0x60uLL);
  v18[3] = v4;
  v18[4] = &off_1000F07B8;
  v18[0] = a2;
  type metadata accessor for UTSHeadersApiAgent();
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = sub_10000A014((uint64_t)v19, (uint64_t)&type metadata for ApiAgent);
  __n128 v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v10 + 16))(v9, v7);
  uint64_t v11 = sub_10000A014((uint64_t)v18, v4);
  __n128 v12 = __chkstk_darwin(v11);
  uint64_t v14 = (void *)((char *)v18 - v13);
  (*(void (**)(char *, __n128))(v15 + 16))((char *)v18 - v13, v12);
  uint64_t v16 = sub_100074FB0(v9, *v14, v5);
  sub_100006178((uint64_t)v18);
  sub_100006178((uint64_t)v19);
  return v16;
}

uint64_t sub_100075298@<X0>(void *__src@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unint64_t a6@<X6>, uint64_t a7@<X8>)
{
  memcpy(__dst, __src, sizeof(__dst));
  return sub_10006EA28(__dst, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100075324(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = sub_100005E5C(&qword_1000FE448);
  uint64_t v12 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v28[3] = &type metadata for AMSApiRequest;
  v28[4] = &off_1000F0670;
  uint64_t v15 = (void *)swift_allocObject();
  v28[0] = v15;
  uint64_t v15[2] = a1;
  void v15[3] = a2;
  v15[4] = a3;
  void v15[5] = a4;
  id v16 = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100074D20();
  uint64_t v27 = v17;
  sub_100008218(a6, (uint64_t)__src);
  sub_100008B98((uint64_t)v28, (uint64_t)v25);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a5;
  memcpy((void *)(v18 + 24), __src, 0x60uLL);
  sub_100008CAC(v25, v18 + 120);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100075674;
  *(void *)(v19 + 24) = v18;
  swift_retain();
  static Subscribers.Demand.unlimited.getter();
  sub_100005E5C(&qword_1000FC0C0);
  sub_100005E5C(&qword_1000FE410);
  sub_100005E5C(&qword_1000FE450);
  sub_10000953C(&qword_1000FC0C8, &qword_1000FC0C0);
  sub_10000953C(&qword_1000FE458, &qword_1000FE450);
  Publisher.flatMap<A, B>(maxPublishers:_:)();
  swift_release();
  swift_release();
  sub_10000953C(&qword_1000FE460, &qword_1000FE448);
  uint64_t v20 = v24;
  uint64_t v21 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  sub_100006178((uint64_t)v28);
  return v21;
}

uint64_t sub_100075628()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100075674@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_10006D6B0(a1, a2, a3, a4, a5, *(void *)(v6 + 16), v6 + 24, v6 + 120, a6);
}

uint64_t sub_100075684()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000756BC(char *a1)
{
  return sub_100007B2C(a1, *(uint64_t (**)(uint64_t, uint64_t, char *, void, char *))(v1 + 16));
}

unint64_t sub_1000756D8()
{
  unint64_t result = qword_1000FE488;
  if (!qword_1000FE488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE488);
  }
  return result;
}

uint64_t sub_100075724(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005E5C(&qword_1000FDA00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100075790()
{
  sub_10007AB90();
  uint64_t v0 = sub_100005E5C(&qword_1000FDA00);
  sub_10000984C(v0);
  uint64_t v1 = type metadata accessor for URLRequest();
  sub_10000984C(v1);
  uint64_t v2 = (void *)sub_10007A5B4();

  return sub_100075298(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_100075844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000758AC()
{
  sub_100006178(v0 + 24);
  swift_unknownObjectRelease();
  uint64_t v1 = sub_10007ACF0();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000758EC(void (*a1)(uint64_t *), void (*a2)(uint64_t *))
{
  return sub_10004F398(a1, a2, (id *)(v2 + 16), v2 + 112);
}

uint64_t sub_1000758F8()
{
  sub_100006178(v0 + 24);
  swift_unknownObjectRelease();
  sub_100006178(v0 + 72);

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100075948()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100075980(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000731C8(a1, a2, a3);
}

unint64_t sub_100075988()
{
  unint64_t result = qword_1000FC998;
  if (!qword_1000FC998)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000FC998);
  }
  return result;
}

uint64_t sub_1000759C8(uint64_t *a1)
{
  return sub_1000738F0(a1);
}

uint64_t sub_1000759D4()
{
  type metadata accessor for URL();
  sub_1000438A0();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v2 | 7;
  unint64_t v4 = (((*(void *)(v1 + 64) + ((v2 + 16) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  sub_100009894();
  v5();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4 + 8, v3);
}

uint64_t sub_100075A9C@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, unint64_t a6@<X6>, uint64_t a7@<X8>)
{
  return sub_10006EB30(*a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100075AA4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = sub_100005E5C(&qword_1000FE570);
  uint64_t v12 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v28[3] = &type metadata for AMSApiRequest;
  v28[4] = &off_1000F0670;
  uint64_t v15 = (void *)swift_allocObject();
  v28[0] = v15;
  uint64_t v15[2] = a1;
  void v15[3] = a2;
  v15[4] = a3;
  void v15[5] = a4;
  id v16 = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100074D20();
  uint64_t v27 = v17;
  sub_100008218(a6, (uint64_t)__src);
  sub_100008B98((uint64_t)v28, (uint64_t)v25);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a5;
  memcpy((void *)(v18 + 24), __src, 0x60uLL);
  sub_100008CAC(v25, v18 + 120);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100075DAC;
  *(void *)(v19 + 24) = v18;
  swift_retain();
  static Subscribers.Demand.unlimited.getter();
  sub_100005E5C(&qword_1000FC0C0);
  sub_100005E5C(&qword_1000FE508);
  sub_100005E5C(&qword_1000FE578);
  sub_10000953C(&qword_1000FC0C8, &qword_1000FC0C0);
  sub_10000953C(&qword_1000FE580, &qword_1000FE578);
  Publisher.flatMap<A, B>(maxPublishers:_:)();
  swift_release();
  swift_release();
  sub_10000953C(&qword_1000FE588, &qword_1000FE570);
  uint64_t v20 = v24;
  uint64_t v21 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  sub_100006178((uint64_t)v28);
  return v21;
}

uint64_t sub_100075DAC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_10006DE64(a1, a2, a3, a4, a5, *(void *)(v6 + 16), v6 + 24, v6 + 120, a6);
}

unint64_t sub_100075DBC()
{
  unint64_t result = qword_1000FE5A0;
  if (!qword_1000FE5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE5A0);
  }
  return result;
}

uint64_t sub_100075E0C()
{
  uint64_t v2 = sub_100005E5C(&qword_1000FDA00);
  sub_10000984C(v2);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 120) & ~v4;
  uint64_t v7 = *(void *)(v6 + 64);
  type metadata accessor for URLRequest();
  sub_100009830();
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v10 + 64);

  sub_100006178(v0 + 24);
  swift_unknownObjectRelease();
  sub_100006178(v0 + 72);

  uint64_t v12 = type metadata accessor for ApiRequestMetrics();
  if (!sub_10007ABD4(v12))
  {
    uint64_t v13 = type metadata accessor for Date();
    if (!sub_10007ACAC(v13))
    {
      sub_100043890();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0 + v5, v7);
    }
    if (!sub_100043870(v1[5]))
    {
      sub_100043890();
      uint64_t v15 = sub_1000438AC();
      v16(v15);
    }
    if (!sub_100043870(v1[8]))
    {
      sub_100043890();
      uint64_t v17 = sub_1000438AC();
      v18(v17);
    }
    if (!sub_100043870(v1[9]))
    {
      sub_100043890();
      uint64_t v19 = sub_1000438AC();
      v20(v19);
    }
    if (!sub_100043870(v1[10]))
    {
      sub_100043890();
      uint64_t v21 = sub_1000438AC();
      v22(v21);
    }
    sub_1000438BC();
    if (!sub_100043870(v1[13]))
    {
      sub_100043890();
      uint64_t v23 = sub_1000438AC();
      v24(v23);
    }
    uint64_t v25 = v0 + v5 + v1[14];
    uint64_t v26 = type metadata accessor for URL();
    if (!sub_10007AC40(v26))
    {
      sub_1000438A0();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v11);
    }
    if (!sub_100043870(v1[15]))
    {
      sub_100043890();
      uint64_t v28 = sub_1000438AC();
      v29(v28);
    }
    if (!sub_100043870(v1[16]))
    {
      sub_100043890();
      uint64_t v30 = sub_1000438AC();
      v31(v30);
    }
    if (!sub_100043870(v1[17]))
    {
      sub_100043890();
      uint64_t v32 = sub_1000438AC();
      v33(v32);
    }
    sub_1000438BC();
    sub_1000438BC();
    sub_1000438BC();
    sub_1000438BC();
    sub_1000438BC();
  }
  unint64_t v34 = (v11 + ((v5 + v7 + v9) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1000617F8();
  v35();
  sub_10000835C(*(void *)(v0 + v34), *(void *)(v0 + v34 + 8));

  return _swift_deallocObject(v0, v34 + 16, v4 | v9 | 7);
}

uint64_t sub_100076168(uint64_t a1)
{
  return sub_100077BC4(a1, (uint64_t (*)(uint64_t))sub_100075A9C);
}

uint64_t sub_100076184()
{
  uint64_t v2 = sub_100005E5C(&qword_1000FDA00);
  sub_10000984C(v2);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = type metadata accessor for URLRequest();
  sub_100009830();
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = *(void *)(v12 + 64);
  sub_10000835C(*(void *)(v0 + 16), *(void *)(v0 + 24));
  uint64_t v14 = type metadata accessor for ApiRequestMetrics();
  if (!sub_10007ABD4(v14))
  {
    uint64_t v42 = v13;
    uint64_t v15 = type metadata accessor for Date();
    if (!sub_10007ACAC(v15))
    {
      sub_100043890();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v0 + v5, v7);
    }
    if (!sub_100043870(v1[5]))
    {
      sub_100043890();
      uint64_t v17 = sub_1000438AC();
      v18(v17);
    }
    if (!sub_100043870(v1[8]))
    {
      sub_100043890();
      uint64_t v19 = sub_1000438AC();
      v20(v19);
    }
    if (!sub_100043870(v1[9]))
    {
      sub_100043890();
      uint64_t v21 = sub_1000438AC();
      v22(v21);
    }
    if (!sub_100043870(v1[10]))
    {
      sub_100043890();
      uint64_t v23 = sub_1000438AC();
      v24(v23);
    }
    sub_1000438BC();
    if (!sub_100043870(v1[13]))
    {
      sub_100043890();
      uint64_t v25 = sub_1000438AC();
      v26(v25);
    }
    uint64_t v27 = v0 + v5 + v1[14];
    uint64_t v28 = type metadata accessor for URL();
    if (!sub_10007AC40(v28))
    {
      sub_1000438A0();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v8);
    }
    if (!sub_100043870(v1[15]))
    {
      sub_100043890();
      uint64_t v30 = sub_1000438AC();
      v31(v30);
    }
    if (!sub_100043870(v1[16]))
    {
      sub_100043890();
      uint64_t v32 = sub_1000438AC();
      v33(v32);
    }
    if (!sub_100043870(v1[17]))
    {
      sub_100043890();
      uint64_t v34 = sub_1000438AC();
      v35(v34);
    }
    sub_1000438BC();
    sub_1000438BC();
    sub_1000438BC();
    sub_1000438BC();
    sub_1000438BC();
    uint64_t v13 = v42;
  }
  unint64_t v36 = (v7 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v37 = (v36 + v11 + 96) & ~v11;
  unint64_t v38 = (v13 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = v4 | v11 | 7;
  uint64_t v40 = v0 + v36;

  sub_100006178(v40 + 8);
  swift_unknownObjectRelease();
  sub_100006178(v40 + 56);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v37, v8);
  sub_100006178(v0 + v38);

  return _swift_deallocObject(v0, v38 + 40, v39);
}

unint64_t sub_1000764F0()
{
  unint64_t result = qword_1000FE5E0;
  if (!qword_1000FE5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE5E0);
  }
  return result;
}

uint64_t sub_100076540()
{
  sub_10007AB90();
  uint64_t v0 = sub_100005E5C(&qword_1000FDA00);
  sub_10000984C(v0);
  uint64_t v1 = type metadata accessor for URLRequest();
  sub_10000984C(v1);
  uint64_t v2 = (uint64_t *)sub_10007A5B4();

  return sub_100074F68(v2, v3, v4, v5, v6, v7, v8);
}

void *sub_1000765F0(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void type metadata accessor for BaseMetadataObject()
{
}

uint64_t sub_10007661C(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for UTSApiAgent.UTSResponse(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x108uLL);
}

ValueMetadata *type metadata accessor for UTSApiAgent.UTSResponse()
{
  return &type metadata for UTSApiAgent.UTSResponse;
}

void type metadata accessor for UTSApiAgent.SmartPlayInfo()
{
}

uint64_t sub_100076680()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000766CC(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10007674C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100076814(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100076894(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000768E8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

void type metadata accessor for UTSApiAgent.ClockScore()
{
}

uint64_t sub_10007695C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000769D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  uint64_t v12 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100076AC8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_100076C40(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA8uLL);
}

uint64_t sub_100076C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100076D20(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 168))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100076D60(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for UTSApiAgent.Content()
{
}

uint64_t sub_100076DD4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100076DF4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

void type metadata accessor for UTSApiAgent.Content.EventTime()
{
}

uint64_t sub_100076E2C(uint64_t a1)
{
  return sub_100006178(a1 + 80);
}

_OWORD *sub_100076E60(_OWORD *a1, _OWORD *a2)
{
  long long v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  long long v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  return a1;
}

uint64_t *sub_100076F5C(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

void *initializeWithTake for SubscriptionRefreshActivityOperation(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t sub_100076FA8(uint64_t a1, uint64_t a2)
{
  sub_100006178(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_100006178(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_100006178(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionRefreshActivityOperation(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionRefreshActivityOperation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for UTSApiAgent()
{
}

uint64_t _s7sportsd11UTSApiAgentV11UTSResponseVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 184) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)(a1 + 256);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s7sportsd11UTSApiAgentV11UTSResponseVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  uint64_t v19 = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19 == 1)
  {
    memcpy((void *)(a1 + 168), (const void *)(a2 + 168), 0x50uLL);
  }
  else
  {
    *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = v19;
    uint64_t v14 = *(void *)(a2 + 200);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = v14;
    sub_10007ABAC();
    uint64_t v15 = *(void *)(a2 + 232);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = v15;
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v16 = (_OWORD *)(a2 + 248);
  uint64_t v17 = *(void *)(a2 + 256);
  if (v17 == 1)
  {
    *(_OWORD *)(a1 + 248) = *v16;
  }
  else
  {
    *(void *)(a1 + 248) = *(void *)v16;
    *(void *)(a1 + 256) = v17;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s7sportsd11UTSApiAgentV11UTSResponseVwca_0(void *a1, uint64_t a2)
{
  *(void *)(v2 + 8) = sub_10007AC60(a1, (void *)a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = *(void *)(a2 + 16);
  *(void *)(v2 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = *(void *)(a2 + 32);
  *(void *)(v2 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = *(void *)(a2 + 48);
  *(void *)(v2 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 64);
  *(_WORD *)(v2 + 72) = *(_WORD *)(a2 + 72);
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 80) = *(void *)(a2 + 80);
  *(void *)(v2 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 96) = *(void *)(a2 + 96);
  *(void *)(v2 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 112) = *(void *)(a2 + 112);
  *(void *)(v2 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 128) = *(void *)(a2 + 128);
  *(void *)(v2 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 152) = *(void *)(a2 + 152);
  *(void *)(v2 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 184);
  if (*(void *)(v2 + 184) == 1)
  {
    if (v5 != 1)
    {
      sub_10007A9F4();
      *(void *)(v2 + 192) = *(void *)(a2 + 192);
      *(void *)(v2 + 200) = *(void *)(a2 + 200);
      sub_10007ABC0();
      *(void *)(v2 + 224) = *(void *)(a2 + 224);
      *(void *)(v2 + 232) = *(void *)(a2 + 232);
      *(void *)(v2 + 240) = *(void *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 == 1)
  {
    sub_10007661C(v2 + 168);
LABEL_6:
    memcpy((void *)(v2 + 168), (const void *)(a2 + 168), 0x50uLL);
    goto LABEL_8;
  }
  sub_10007A9F4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 192) = *(void *)(a2 + 192);
  *(void *)(v2 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10007ABC0();
  *(void *)(v2 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 232) = *(void *)(a2 + 232);
  *(void *)(v2 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v6 = *(void *)(a2 + 256);
  if (*(void *)(v2 + 256) != 1)
  {
    if (v6 != 1)
    {
      sub_10007AC8C();
      swift_bridgeObjectRelease();
      return v2;
    }
    sub_10002F5FC(v2 + 248);
    goto LABEL_13;
  }
  if (v6 == 1)
  {
LABEL_13:
    *(_OWORD *)(v2 + 248) = *(_OWORD *)(a2 + 248);
    return v2;
  }
  sub_10007AC8C();
  return v2;
}

uint64_t _s7sportsd11UTSApiAgentV11UTSResponseVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v12;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 184) == 1) {
    goto LABEL_4;
  }
  uint64_t v13 = *(void *)(a2 + 184);
  if (v13 == 1)
  {
    sub_10007661C(a1 + 168);
LABEL_4:
    memcpy((void *)(a1 + 168), (const void *)(a2 + 168), 0x50uLL);
    goto LABEL_6;
  }
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v14;
  swift_bridgeObjectRelease();
  sub_10007ABAC();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v15;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v16 = (void *)(a2 + 248);
  if (*(void *)(a1 + 256) != 1)
  {
    uint64_t v17 = *(void *)(a2 + 256);
    if (v17 != 1)
    {
      *(void *)(a1 + 248) = *v16;
      *(void *)(a1 + 256) = v17;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_10002F5FC(a1 + 248);
  }
  *(_OWORD *)(a1 + 248) = *(_OWORD *)v16;
  return a1;
}

uint64_t _s7sportsd11UTSApiAgentV11UTSResponseVwet_0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 264))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000777C8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 248) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 264) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 264) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for UTSApiAgent.SportingEventData()
{
}

uint64_t sub_100077858()
{
  sub_10007AB90();
  uint64_t v0 = sub_100005E5C(&qword_1000FDA00);
  sub_10000984C(v0);
  uint64_t v1 = type metadata accessor for URLRequest();
  sub_10000984C(v1);
  uint64_t v2 = sub_10007A5B4();

  return sub_10006E810(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_100077908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s20RegistrationResponseVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10007796C()
{
  unint64_t result = qword_1000FE628;
  if (!qword_1000FE628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE628);
  }
  return result;
}

unint64_t sub_1000779B8()
{
  unint64_t result = qword_1000FE630;
  if (!qword_1000FE630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE630);
  }
  return result;
}

unint64_t sub_100077A04()
{
  unint64_t result = qword_1000FE650;
  if (!qword_1000FE650)
  {
    sub_1000061D8(&qword_1000FE648);
    sub_100077AA8(&qword_1000FE658, (void (*)(uint64_t))&type metadata accessor for SportingEvent);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE650);
  }
  return result;
}

uint64_t sub_100077AA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100077AF4(uint64_t a1)
{
  return sub_100077BC4(a1, (uint64_t (*)(uint64_t))sub_100074D18);
}

unint64_t sub_100077B10()
{
  unint64_t result = qword_1000FE680;
  if (!qword_1000FE680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE680);
  }
  return result;
}

unint64_t sub_100077B5C()
{
  unint64_t result = qword_1000FE688;
  if (!qword_1000FE688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE688);
  }
  return result;
}

uint64_t sub_100077BAC(uint64_t a1)
{
  return sub_100077BC4(a1, (uint64_t (*)(uint64_t))sub_100074F60);
}

uint64_t sub_100077BC4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  sub_10007AB90();
  uint64_t v2 = sub_100005E5C(&qword_1000FDA00);
  sub_10000984C(v2);
  uint64_t v3 = type metadata accessor for URLRequest();
  sub_10000984C(v3);
  uint64_t v4 = sub_10007A5B4();

  return a2(v4);
}

uint64_t sub_100077C88()
{
  sub_10007AB90();
  uint64_t v2 = sub_100005E5C(&qword_1000FDA00);
  sub_10000984C(v2);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (*(void *)(v5 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = type metadata accessor for URLRequest();
  sub_10000984C(v7);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  unint64_t v12 = (v6 + *(unsigned __int8 *)(v9 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = *(void *)(v0 + 16);
  unint64_t v14 = *(void *)(v0 + 24);
  uint64_t v15 = (void *)(v0 + ((*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10004EAD8(v13, v14, v0 + v4, v0 + v12, v15, v1);
}

unint64_t sub_100077D64()
{
  unint64_t result = qword_1000FE6B8;
  if (!qword_1000FE6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE6B8);
  }
  return result;
}

unint64_t sub_100077DB0()
{
  unint64_t result = qword_1000FE6C8;
  if (!qword_1000FE6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE6C8);
  }
  return result;
}

unint64_t sub_100077DFC()
{
  unint64_t result = qword_1000FE6D8;
  if (!qword_1000FE6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE6D8);
  }
  return result;
}

unint64_t sub_100077E48()
{
  unint64_t result = qword_1000FE6F8;
  if (!qword_1000FE6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE6F8);
  }
  return result;
}

unint64_t sub_100077E94()
{
  unint64_t result = qword_1000FE700;
  if (!qword_1000FE700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE700);
  }
  return result;
}

unint64_t sub_100077EE0()
{
  unint64_t result = qword_1000FE710;
  if (!qword_1000FE710)
  {
    sub_1000061D8(&qword_1000FE708);
    sub_100077F54();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE710);
  }
  return result;
}

unint64_t sub_100077F54()
{
  unint64_t result = qword_1000FE718;
  if (!qword_1000FE718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE718);
  }
  return result;
}

uint64_t sub_100077FA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100078054(uint64_t a1)
{
  return a1;
}

unint64_t sub_100078108()
{
  unint64_t result = qword_1000FE728;
  if (!qword_1000FE728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE728);
  }
  return result;
}

unint64_t sub_100078154()
{
  unint64_t result = qword_1000FE738;
  if (!qword_1000FE738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE738);
  }
  return result;
}

unint64_t sub_1000781A0()
{
  unint64_t result = qword_1000FE740;
  if (!qword_1000FE740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE740);
  }
  return result;
}

unint64_t sub_1000781EC()
{
  unint64_t result = qword_1000FE748;
  if (!qword_1000FE748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE748);
  }
  return result;
}

uint64_t sub_100078238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1000782A0()
{
  unint64_t result = qword_1000FE750;
  if (!qword_1000FE750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE750);
  }
  return result;
}

void *sub_1000782EC(void *a1)
{
  uint64_t v4 = a1[22];
  uint64_t v5 = a1[21];
  uint64_t v3 = a1[23];
  uint64_t v7 = a1[31];
  uint64_t v6 = a1[32];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100075844(v5, v4, v3);
  sub_10002A5A8(v7, v6);
  return a1;
}

void *sub_100078414(void *a1)
{
  uint64_t v4 = a1[22];
  uint64_t v5 = a1[21];
  uint64_t v3 = a1[23];
  uint64_t v7 = a1[31];
  uint64_t v6 = a1[32];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100078238(v5, v4, v3);
  sub_1000479B8(v7, v6);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for UTSApiAgent.SportingEventData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100078604);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTSApiAgent.SportingEventData.CodingKeys()
{
  return &type metadata for UTSApiAgent.SportingEventData.CodingKeys;
}

ValueMetadata *type metadata accessor for UTSApiAgent.Content.EventTime.CodingKeys()
{
  return &type metadata for UTSApiAgent.Content.EventTime.CodingKeys;
}

uint64_t getEnumTagSinglePayload for UTSApiAgent.Content.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 10) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v5 = v6 - 11;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for UTSApiAgent.Content.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000787A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTSApiAgent.Content.CodingKeys()
{
  return &type metadata for UTSApiAgent.Content.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for UTSApiAgent.ClockScore.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000788A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTSApiAgent.ClockScore.CodingKeys()
{
  return &type metadata for UTSApiAgent.ClockScore.CodingKeys;
}

ValueMetadata *type metadata accessor for UTSApiAgent.SmartPlayInfo.CodingKeys()
{
  return &type metadata for UTSApiAgent.SmartPlayInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for BaseMetadataObject.CodingKeys()
{
  return &type metadata for BaseMetadataObject.CodingKeys;
}

ValueMetadata *type metadata accessor for UTSApiAgent.UTSResponse.CodingKeys()
{
  return &type metadata for UTSApiAgent.UTSResponse.CodingKeys;
}

void type metadata accessor for BaseMetadataObject.DataObject()
{
}

uint64_t sub_10007891C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 56);
  if ((unint64_t)(result - 1) >= 2)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100078980(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  BOOL v7 = (_OWORD *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 == 1 || v8 == 2)
  {
    *(_OWORD *)(a1 + 48) = *v7;
  }
  else
  {
    *(void *)(a1 + 48) = *(void *)v7;
    *(void *)(a1 + 56) = v8;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t sub_100078A2C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a2 + 56);
  if (v4 == 2)
  {
    if (v5 != 1 && v5 != 2) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  if (v5 == 2)
  {
    sub_100078B6C(a1 + 48);
    goto LABEL_12;
  }
  if (v4 != 1)
  {
    if (v5 != 1)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    sub_10002F5FC(a1 + 48);
    goto LABEL_12;
  }
  if (v5 == 1)
  {
LABEL_12:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    goto LABEL_13;
  }
LABEL_9:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
LABEL_13:
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t sub_100078B6C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100078B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  BOOL v7 = (void *)(a2 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  if (v8 != 2)
  {
    uint64_t v9 = *(void *)(a2 + 56);
    if (v9 == 2)
    {
      sub_100078B6C(a1 + 48);
    }
    else if (v8 != 1)
    {
      if (v9 != 1)
      {
        *(void *)(a1 + 48) = *v7;
        *(void *)(a1 + 56) = v9;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_10002F5FC(a1 + 48);
    }
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v7;
LABEL_8:
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

void type metadata accessor for UTSApiAgent.Content.Competitor()
{
}

uint64_t sub_100078C70(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 8);
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100078C84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *sub_100078CCC(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  if (a1[1] != 1)
  {
    if (v4 != 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_10002F5FC((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100078D64(void *a1, void *a2)
{
  if (a1[1] != 1)
  {
    uint64_t v4 = a2[1];
    if (v4 != 1)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_10002F5FC((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t sub_100078DC4(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483645;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v4 = v3 - 1;
      if (v4 < 0) {
        int v4 = -1;
      }
      BOOL v5 = __OFSUB__(v4, 1);
      int v2 = v4 - 1;
      if (v2 < 0 != v5) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100078E20(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = a2 - 2147483646;
    *(void *)(result + 8) = 0;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for UTSApiAgent.Content.Images()
{
}

uint64_t sub_100078E78(void *a1, void *a2)
{
  *(void *)(v2 + 8) = sub_10007AC60(a1, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v2;
}

void type metadata accessor for UTSApiAgent.Content.TemplateImage()
{
}

unint64_t sub_100078EC0()
{
  unint64_t result = qword_1000FE758;
  if (!qword_1000FE758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE758);
  }
  return result;
}

unint64_t sub_100078F10()
{
  unint64_t result = qword_1000FE760;
  if (!qword_1000FE760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE760);
  }
  return result;
}

unint64_t sub_100078F60()
{
  unint64_t result = qword_1000FE768;
  if (!qword_1000FE768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE768);
  }
  return result;
}

unint64_t sub_100078FB0()
{
  unint64_t result = qword_1000FE770;
  if (!qword_1000FE770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE770);
  }
  return result;
}

unint64_t sub_100079000()
{
  unint64_t result = qword_1000FE778;
  if (!qword_1000FE778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE778);
  }
  return result;
}

unint64_t sub_100079050()
{
  unint64_t result = qword_1000FE780;
  if (!qword_1000FE780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE780);
  }
  return result;
}

unint64_t sub_1000790A0()
{
  unint64_t result = qword_1000FE788;
  if (!qword_1000FE788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE788);
  }
  return result;
}

unint64_t sub_1000790F0()
{
  unint64_t result = qword_1000FE790;
  if (!qword_1000FE790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE790);
  }
  return result;
}

unint64_t sub_100079140()
{
  unint64_t result = qword_1000FE798;
  if (!qword_1000FE798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE798);
  }
  return result;
}

unint64_t sub_100079190()
{
  unint64_t result = qword_1000FE7A0;
  if (!qword_1000FE7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE7A0);
  }
  return result;
}

unint64_t sub_1000791E0()
{
  unint64_t result = qword_1000FE7A8;
  if (!qword_1000FE7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE7A8);
  }
  return result;
}

unint64_t sub_100079230()
{
  unint64_t result = qword_1000FE7B0;
  if (!qword_1000FE7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE7B0);
  }
  return result;
}

unint64_t sub_100079280()
{
  unint64_t result = qword_1000FE7B8;
  if (!qword_1000FE7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE7B8);
  }
  return result;
}

unint64_t sub_1000792D0()
{
  unint64_t result = qword_1000FE7C0;
  if (!qword_1000FE7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE7C0);
  }
  return result;
}

unint64_t sub_100079320()
{
  unint64_t result = qword_1000FE7C8;
  if (!qword_1000FE7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE7C8);
  }
  return result;
}

unint64_t sub_100079370()
{
  unint64_t result = qword_1000FE7D0;
  if (!qword_1000FE7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE7D0);
  }
  return result;
}

unint64_t sub_1000793C0()
{
  unint64_t result = qword_1000FE7D8;
  if (!qword_1000FE7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE7D8);
  }
  return result;
}

unint64_t sub_100079410()
{
  unint64_t result = qword_1000FE7E0;
  if (!qword_1000FE7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE7E0);
  }
  return result;
}

unint64_t sub_100079460()
{
  unint64_t result = qword_1000FE7E8;
  if (!qword_1000FE7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE7E8);
  }
  return result;
}

unint64_t sub_1000794B0()
{
  unint64_t result = qword_1000FE7F0;
  if (!qword_1000FE7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE7F0);
  }
  return result;
}

unint64_t sub_100079500()
{
  unint64_t result = qword_1000FE7F8;
  if (!qword_1000FE7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE7F8);
  }
  return result;
}

unint64_t sub_10007954C()
{
  unint64_t result = qword_1000FE808;
  if (!qword_1000FE808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE808);
  }
  return result;
}

unint64_t sub_100079598()
{
  unint64_t result = qword_1000FE810;
  if (!qword_1000FE810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE810);
  }
  return result;
}

unint64_t sub_1000795E4()
{
  unint64_t result = qword_1000FE820;
  if (!qword_1000FE820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE820);
  }
  return result;
}

unint64_t sub_100079630()
{
  unint64_t result = qword_1000FE830;
  if (!qword_1000FE830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE830);
  }
  return result;
}

unint64_t sub_10007967C()
{
  unint64_t result = qword_1000FE838;
  if (!qword_1000FE838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE838);
  }
  return result;
}

unint64_t sub_1000796C8()
{
  unint64_t result = qword_1000FE848;
  if (!qword_1000FE848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE848);
  }
  return result;
}

unint64_t sub_100079714()
{
  unint64_t result = qword_1000FE850;
  if (!qword_1000FE850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE850);
  }
  return result;
}

unint64_t sub_100079760()
{
  unint64_t result = qword_1000FE860;
  if (!qword_1000FE860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE860);
  }
  return result;
}

ValueMetadata *type metadata accessor for UTSApiAgent.Content.TemplateImage.CodingKeys()
{
  return &type metadata for UTSApiAgent.Content.TemplateImage.CodingKeys;
}

ValueMetadata *type metadata accessor for UTSApiAgent.Content.Images.CodingKeys()
{
  return &type metadata for UTSApiAgent.Content.Images.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for UTSApiAgent.Content.Competitor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100079898);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UTSApiAgent.Content.Competitor.CodingKeys()
{
  return &type metadata for UTSApiAgent.Content.Competitor.CodingKeys;
}

ValueMetadata *type metadata accessor for BaseMetadataObject.DataObject.CodingKeys()
{
  return &type metadata for BaseMetadataObject.DataObject.CodingKeys;
}

void type metadata accessor for BaseMetadataObject.DataObject.ApplicationProps()
{
}

unint64_t sub_1000798F0()
{
  unint64_t result = qword_1000FE868;
  if (!qword_1000FE868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE868);
  }
  return result;
}

unint64_t sub_100079940()
{
  unint64_t result = qword_1000FE870;
  if (!qword_1000FE870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE870);
  }
  return result;
}

unint64_t sub_100079990()
{
  unint64_t result = qword_1000FE878;
  if (!qword_1000FE878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE878);
  }
  return result;
}

unint64_t sub_1000799E0()
{
  unint64_t result = qword_1000FE880;
  if (!qword_1000FE880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE880);
  }
  return result;
}

unint64_t sub_100079A30()
{
  unint64_t result = qword_1000FE888;
  if (!qword_1000FE888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE888);
  }
  return result;
}

unint64_t sub_100079A80()
{
  unint64_t result = qword_1000FE890;
  if (!qword_1000FE890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE890);
  }
  return result;
}

unint64_t sub_100079AD0()
{
  unint64_t result = qword_1000FE898;
  if (!qword_1000FE898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE898);
  }
  return result;
}

unint64_t sub_100079B20()
{
  unint64_t result = qword_1000FE8A0;
  if (!qword_1000FE8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE8A0);
  }
  return result;
}

unint64_t sub_100079B70()
{
  unint64_t result = qword_1000FE8A8;
  if (!qword_1000FE8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE8A8);
  }
  return result;
}

unint64_t sub_100079BC0()
{
  unint64_t result = qword_1000FE8B0;
  if (!qword_1000FE8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE8B0);
  }
  return result;
}

unint64_t sub_100079C10()
{
  unint64_t result = qword_1000FE8B8;
  if (!qword_1000FE8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE8B8);
  }
  return result;
}

unint64_t sub_100079C60()
{
  unint64_t result = qword_1000FE8C0;
  if (!qword_1000FE8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE8C0);
  }
  return result;
}

unint64_t sub_100079CAC()
{
  unint64_t result = qword_1000FE8D0;
  if (!qword_1000FE8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE8D0);
  }
  return result;
}

unint64_t sub_100079CF8()
{
  unint64_t result = qword_1000FE8D8;
  if (!qword_1000FE8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE8D8);
  }
  return result;
}

unint64_t sub_100079D44()
{
  unint64_t result = qword_1000FE8E8;
  if (!qword_1000FE8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE8E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for BaseMetadataObject.DataObject.ApplicationProps.CodingKeys()
{
  return &type metadata for BaseMetadataObject.DataObject.ApplicationProps.CodingKeys;
}

void *sub_100079DA0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100079DD0()
{
  return swift_bridgeObjectRelease();
}

void *sub_100079DD8(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_100079E14(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100079E48(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100079E9C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void type metadata accessor for BaseMetadataObject.DataObject.ApplicationProps.RequiredParams()
{
}

unint64_t sub_100079EFC()
{
  unint64_t result = qword_1000FE8F0;
  if (!qword_1000FE8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE8F0);
  }
  return result;
}

unint64_t sub_100079F4C()
{
  unint64_t result = qword_1000FE8F8;
  if (!qword_1000FE8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE8F8);
  }
  return result;
}

unint64_t sub_100079F9C()
{
  unint64_t result = qword_1000FE900;
  if (!qword_1000FE900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE900);
  }
  return result;
}

unint64_t sub_100079FE8()
{
  unint64_t result = qword_1000FE910;
  if (!qword_1000FE910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE910);
  }
  return result;
}

uint64_t sub_10007A034(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000061D8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10007A0A0()
{
  unint64_t result = qword_1000FE920;
  if (!qword_1000FE920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE920);
  }
  return result;
}

uint64_t sub_10007A0EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100005E5C(a3);
  sub_1000438A0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10007A14C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10007A18C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 sub_10007A1EC(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_10007A200(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t sub_10007A248(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10007A288(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for JSONCodingKeys()
{
}

unsigned char *_s7sportsd11UTSApiAgentV7ContentV9EventTimeV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10007A374);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for BaseMetadataObject.DataObject.ApplicationProps.RequiredParams.CodingKeys()
{
}

unint64_t sub_10007A3AC()
{
  unint64_t result = qword_1000FE930;
  if (!qword_1000FE930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE930);
  }
  return result;
}

unint64_t sub_10007A3FC()
{
  unint64_t result = qword_1000FE938;
  if (!qword_1000FE938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE938);
  }
  return result;
}

unint64_t sub_10007A44C()
{
  unint64_t result = qword_1000FE940;
  if (!qword_1000FE940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE940);
  }
  return result;
}

unint64_t sub_10007A49C()
{
  unint64_t result = qword_1000FE948;
  if (!qword_1000FE948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE948);
  }
  return result;
}

unint64_t sub_10007A4EC()
{
  unint64_t result = qword_1000FE950;
  if (!qword_1000FE950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FE950);
  }
  return result;
}

void sub_10007A55C()
{
  *(void *)(v1 - 352) = *(unsigned __int8 *)(*(void *)(v1 - 352) + 80) | (unint64_t)*(unsigned __int8 *)(v0 + 80) | 7;
  *(void *)(v1 - 328) += 7;
}

uint64_t sub_10007A5B4()
{
  return v0;
}

uint64_t sub_10007A624()
{
  return v0;
}

uint64_t sub_10007A63C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v4 - 256) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 - 264) = v3;
  *(void *)(v4 - 184) = v3;
  *(void *)(v4 - 176) = v2;
  *(void *)(v4 - 368) = v2;
  return sub_10001DF8C(v3, v2);
}

uint64_t sub_10007A680@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  *(void *)(v5 - 376) = a4;
  *(void *)(v5 - 248) = a3;
  *(void *)(v5 - 304) = a2;
  *(void *)(v5 - 240) = a1;
  *(void *)(v5 - 272) = a5;
  return type metadata accessor for URLRequest();
}

uint64_t sub_10007A6C0()
{
  return v0;
}

uint64_t sub_10007A6DC()
{
  return v0;
}

uint64_t sub_10007A6F8()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_10007A71C()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

void *sub_10007A73C()
{
  return sub_100005EA0(v0, v0[3]);
}

uint64_t sub_10007A760()
{
  return v0;
}

void sub_10007A7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 392) = v9;
  *(void *)(v10 - 360) = (char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10007A7E4()
{
  uint64_t v1 = *(void *)(v0 - 232);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 - 408) = v1 + 16;
  *(void *)(v0 - 400) = v2;
  return *(void *)(v0 - 344);
}

uint64_t sub_10007A828()
{
  return Publisher.mapError<A>(_:)();
}

uint64_t sub_10007A868()
{
  return Publisher.map<A>(_:)();
}

uint64_t sub_10007A898()
{
  uint64_t v4 = (uint64_t *)(v0 + v1);
  uint64_t v5 = *(void *)(v2 - 264);
  unint64_t v6 = *(void *)(v2 - 368);
  *uint64_t v4 = v5;
  v4[1] = v6;
  return sub_10001DF8C(v5, v6);
}

void *sub_10007A8C4()
{
  return sub_100005EA0(v0, v1);
}

void sub_10007A914(uint64_t a1@<X8>)
{
  *(void *)(v2 - 344) = a1 - (v1 & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10007A92C()
{
  uint64_t result = v1 + v0;
  uint64_t v4 = *(void *)(v2 - 232);
  uint64_t v5 = *(void *)(v4 + 32);
  *(void *)(v2 - 232) = v4 + 32;
  *(void *)(v2 - 416) = v5;
  return result;
}

void *sub_10007A958(uint64_t a1)
{
  uint64_t v3 = (void *)(a1 + 16);
  return memcpy(v3, (const void *)(v1 - 184), 0x60uLL);
}

uint64_t sub_10007A978()
{
  return v0;
}

uint64_t sub_10007A990()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

void *sub_10007A9DC(void *a1)
{
  return memcpy(a1, (const void *)(v1 - 184), 0x60uLL);
}

uint64_t sub_10007A9F4()
{
  *(unsigned char *)(v0 + 168) = *(unsigned char *)(v1 + 168);
  *(unsigned char *)(v0 + 169) = *(unsigned char *)(v1 + 169);
  *(void *)(v0 + 176) = *(void *)(v1 + 176);
  uint64_t result = *(void *)(v1 + 184);
  *(void *)(v0 + 184) = result;
  return result;
}

uint64_t sub_10007AA18()
{
  sub_100008CAC((long long *)(v4 - 224), v0 + v1);
  return sub_10001DF8C(v2, v3);
}

uint64_t sub_10007AA4C()
{
  return v0 - 96;
}

uint64_t sub_10007AA60()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_10007AA7C()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10007AA9C()
{
  uint64_t result = v1 + v0;
  uint64_t v4 = *(void *)(v2 - 232);
  uint64_t v5 = *(void *)(v4 + 32);
  *(void *)(v2 - 232) = v4 + 32;
  *(void *)(v2 - 416) = v5;
  return result;
}

uint64_t sub_10007AABC()
{
  return v0;
}

void sub_10007AACC(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 384) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10007AAF8(uint64_t a1)
{
  *(void *)(a1 + 16) = *(void *)(v3 - 264);
  *(void *)(a1 + 24) = v2;
  return v1;
}

uint64_t sub_10007AB14()
{
  uint64_t v2 = *(void *)(v0 - 280);
  return sub_100008B98(v2, v0 - 224);
}

uint64_t sub_10007AB40()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10007AB5C()
{
  *(void *)(v1 + 112) = *(void *)(v2 - 304);
  return v0;
}

uint64_t sub_10007AB74()
{
  uint64_t v2 = *(void *)(v0 - 376);
  return sub_100008218(v2, v0 - 184);
}

void sub_10007AB9C()
{
  *(void *)(v1 - 328) = v0;
}

void sub_10007ABAC()
{
  *(void *)(v0 + 208) = *(void *)(v1 + 208);
  *(unsigned char *)(v0 + 216) = *(unsigned char *)(v1 + 216);
}

void sub_10007ABC0()
{
  uint64_t v2 = *(void *)(v1 + 208);
  *(unsigned char *)(v0 + 216) = *(unsigned char *)(v1 + 216);
  *(void *)(v0 + 208) = v2;
}

uint64_t sub_10007ABD4(uint64_t a1)
{
  return sub_1000082E8(v1, 1, a1);
}

uint64_t sub_10007ABF4()
{
  return swift_allocObject();
}

uint64_t sub_10007AC0C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return *(void *)(v2 - 344);
}

uint64_t sub_10007AC20()
{
  uint64_t v2 = *(void *)(v0 - 248);
  uint64_t v3 = *(void *)(v0 - 360);
  return sub_100075724(v2, v3);
}

uint64_t sub_10007AC40(uint64_t a1)
{
  return sub_1000082E8(v1, 1, a1);
}

uint64_t sub_10007AC60(void *a1, void *a2)
{
  *a1 = *a2;
  return a2[1];
}

uint64_t sub_10007AC74()
{
  return Just.init(_:)();
}

uint64_t sub_10007AC8C()
{
  *(void *)(v0 + 248) = *(void *)(v1 + 248);
  *(void *)(v0 + 256) = *(void *)(v1 + 256);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10007ACAC(uint64_t a1)
{
  return sub_1000082E8(v1, 1, a1);
}

uint64_t sub_10007ACD8()
{
  return sub_100006178(v0);
}

uint64_t sub_10007ACF0()
{
  sub_100006178(v0 + 72);
  sub_100006178(v0 + 112);
  return v0;
}

uint64_t sub_10007AD1C()
{
  sub_100005EA0((void *)(v0 + 16), *(void *)(v0 + 40));
  return dispatch thunk of ActivityAuthorization.areFrequentPushesEnabled(for:)() & 1;
}

uint64_t sub_10007AD58()
{
  sub_100006178(v0 + 16);
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for ActivityCapUtility()
{
  return self;
}

uint64_t sub_10007ADBC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(void), uint64_t))
{
  String.utf8CString.getter();
  uint64_t v4 = os_transaction_create();
  swift_release();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  swift_unknownObjectRetain_n();
  a3(nullsub_1, v5);
  swift_unknownObjectRelease_n();

  return swift_release();
}

uint64_t sub_10007AE6C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007AEA4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v10 = type metadata accessor for URL();
  sub_100009830();
  uint64_t v12 = v11;
  uint64_t v14 = *(void *)(v13 + 64);
  __n128 v16 = __chkstk_darwin(v15);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))((char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10, v16);
  unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a4;
  *(void *)(v18 + 24) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v18 + v17, (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  uint64_t v19 = (void *)(v18 + ((v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v19 = a2;
  v19[1] = a3;
  sub_100005E5C(&qword_1000FEA70);
  swift_allocObject();
  id v20 = a4;
  id v21 = a5;
  swift_bridgeObjectRetain();
  v24[1] = Future.init(_:)();
  sub_10007B458();
  uint64_t v22 = Publisher.eraseToAnyPublisher()();
  swift_release();
  return v22;
}

void sub_10007B040(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v29 = a6;
  uint64_t v30 = a4;
  uint64_t v28 = a1;
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URLRequest();
  uint64_t v16 = *(void *)(v15 - 8);
  __n128 v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v14, a5, v11, v17);
  URLRequest.init(url:cachePolicy:timeoutInterval:)();
  Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  id v21 = (void *)swift_allocObject();
  v21[2] = v28;
  void v21[3] = a2;
  uint64_t v22 = v30;
  v21[4] = v29;
  void v21[5] = a7;
  v21[6] = a3;
  v21[7] = v22;
  aBlock[4] = sub_10007BB64;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007BB94;
  aBlock[3] = &unk_1000F3500;
  uint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  id v24 = a3;
  id v25 = v22;
  swift_release();
  id v26 = [v24 downloadTaskWithRequest:isa completionHandler:v23];
  _Block_release(v23);

  [v26 resume];
}

uint64_t sub_10007B2D8()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_100009830();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = (*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v9 + 16, v8);
}

void sub_10007B3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + 16);
  uint64_t v8 = *(void **)(v2 + 24);
  uint64_t v9 = v2 + v6;
  uint64_t v10 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  sub_10007B040(a1, a2, v7, v8, v9, v11, v12);
}

unint64_t sub_10007B458()
{
  unint64_t result = qword_1000FEA78;
  if (!qword_1000FEA78)
  {
    sub_1000061D8(&qword_1000FEA70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEA78);
  }
  return result;
}

uint64_t sub_10007B4AC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v59 = a5;
  uint64_t v60 = a4;
  uint64_t v58 = sub_100005E5C(&qword_1000FEA80);
  __chkstk_darwin(v58);
  uint64_t v12 = (uint64_t *)((char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v57 - v21;
  if (a3)
  {
    swift_errorRetain();
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_10000929C(v23, (uint64_t)qword_10010A520);
    swift_errorRetain();
    swift_errorRetain();
    id v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      id v26 = (uint8_t *)swift_slowAlloc();
      id v62 = (id)swift_slowAlloc();
      *(_DWORD *)id v26 = 136315138;
      swift_getErrorValue();
      uint64_t v27 = Error.localizedDescription.getter();
      uint64_t v61 = sub_100017098(v27, v28, (uint64_t *)&v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Could not download image. %s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    *uint64_t v12 = a3;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    v60(v12);
    swift_errorRelease();
    return sub_100037ED0((uint64_t)v12, &qword_1000FEA80);
  }
  sub_10007BCD0(a1, (uint64_t)v15);
  if (sub_1000082E8((uint64_t)v15, 1, v16) == 1)
  {
    sub_100037ED0((uint64_t)v15, (uint64_t *)&unk_1000FDA80);
    id v29 = objc_allocWithZone((Class)NSError);
    *uint64_t v12 = sub_10002EFA4(0xD00000000000001FLL, 0x80000001000D2780, 512, 0);
    swift_storeEnumTagMultiPayload();
    v60(v12);
    return sub_100037ED0((uint64_t)v12, &qword_1000FEA80);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v15, v16);
  URL.init(fileURLWithPath:)();
  NSString v31 = String._bridgeToObjectiveC()();
  unsigned __int8 v32 = [a9 fileExistsAtPath:v31];

  if (v32)
  {
    URL._bridgeToObjectiveC()(v33);
    uint64_t v35 = v34;
    id v62 = 0;
    unsigned int v36 = [a9 removeItemAtURL:v34 error:&v62];

    id v37 = v62;
    if (!v36) {
      goto LABEL_14;
    }
    id v38 = v62;
    URL._bridgeToObjectiveC()(v39);
    unint64_t v41 = v40;
    URL._bridgeToObjectiveC()(v42);
    unint64_t v44 = v43;
    id v62 = 0;
    unsigned int v45 = [a9 moveItemAtURL:v41 toURL:v43 error:&v62];

    id v37 = v62;
    if (!v45) {
      goto LABEL_14;
    }
  }
  else
  {
    URL._bridgeToObjectiveC()(v33);
    uint64_t v50 = v49;
    URL._bridgeToObjectiveC()(v51);
    uint64_t v53 = v52;
    id v62 = 0;
    unsigned __int8 v54 = [a9 moveItemAtURL:v50 toURL:v52 error:&v62];

    id v37 = v62;
    if ((v54 & 1) == 0)
    {
LABEL_14:
      id v46 = v37;
      uint64_t v47 = _convertNSErrorToError(_:)();

      swift_willThrow();
      uint64_t v48 = *(void (**)(char *, uint64_t))(v17 + 8);
      v48(v19, v16);
      *uint64_t v12 = v47;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      v60(v12);
      swift_errorRelease();
      sub_100037ED0((uint64_t)v12, &qword_1000FEA80);
      return ((uint64_t (*)(char *, uint64_t))v48)(v22, v16);
    }
  }
  id v55 = v37;
  (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v12, v19, v16);
  swift_storeEnumTagMultiPayload();
  v60(v12);
  sub_100037ED0((uint64_t)v12, &qword_1000FEA80);
  uint64_t v56 = *(void (**)(char *, uint64_t))(v17 + 8);
  v56(v19, v16);
  return ((uint64_t (*)(char *, uint64_t))v56)(v22, v16);
}

uint64_t sub_10007BB14()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10007BB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007B4AC(a1, a2, a3, *(void (**)(void *))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void **)(v3 + 56));
}

uint64_t sub_10007BB94(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, void *, void *))(a1 + 32);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = type metadata accessor for URL();
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v12 = type metadata accessor for URL();
    uint64_t v13 = 1;
  }
  sub_1000082C0((uint64_t)v10, v13, 1, v12);
  swift_retain();
  id v14 = a3;
  id v15 = a4;
  v11(v10, a3, a4);

  swift_release();
  return sub_100037ED0((uint64_t)v10, (uint64_t *)&unk_1000FDA80);
}

uint64_t sub_10007BCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007BCC8()
{
  return swift_release();
}

uint64_t sub_10007BCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *initializeBufferWithCopyOfBuffer for ImageDownloader(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for ImageDownloader(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for ImageDownloader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for ImageDownloader(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ImageDownloader(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageDownloader(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageDownloader()
{
  return &type metadata for ImageDownloader;
}

unint64_t sub_10007BED0()
{
  type metadata accessor for ApiAgentError();
  sub_1000098E8();
  __chkstk_darwin(v1);
  sub_10008048C(v2, v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t result = 0xD00000000000001CLL;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v5 = sub_100005E5C(&qword_1000FDA08);
      sub_10007CF40(v0 + *(int *)(v5 + 48));
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 2:
      return result;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      unint64_t result = 0xD000000000000019;
      break;
  }
  return result;
}

unint64_t sub_10007BFF4()
{
  return sub_1000804B8(28);
}

unint64_t sub_10007C00C()
{
  return sub_1000804B8(25);
}

unint64_t sub_10007C024()
{
  return sub_1000804B8(25);
}

unint64_t sub_10007C03C()
{
  return sub_1000804B8(27);
}

unint64_t sub_10007C054()
{
  return sub_1000804B8(29);
}

uint64_t sub_10007C06C()
{
  type metadata accessor for ApiAgentError();
  sub_1000098E8();
  __chkstk_darwin(v1);
  sub_10008048C(v2, v7);
  uint64_t v3 = -1200;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v4 = (char)*v0;
      uint64_t v5 = sub_100005E5C(&qword_1000FDA08);
      uint64_t v3 = qword_1000CE1F0[v4];
      sub_10007CF40((uint64_t)&v0[*(int *)(v5 + 48)]);
      break;
    case 2u:
      return v3;
    case 3u:
    case 4u:
      uint64_t v3 = -1000;
      break;
    default:
      if (*v0) {
        uint64_t v3 = 404;
      }
      else {
        uint64_t v3 = 3328;
      }
      break;
  }
  return v3;
}

uint64_t sub_10007C15C(char a1)
{
  if (a1) {
    return 404;
  }
  else {
    return 3328;
  }
}

uint64_t sub_10007C170(char a1)
{
  return qword_1000CE1F0[a1];
}

uint64_t sub_10007C184()
{
  uint64_t v1 = v0;
  type metadata accessor for ApiAgentError();
  sub_1000098E8();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007CEDC(v1, (uint64_t)v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v10 = *v4;
      uint64_t v11 = (uint64_t)&v4[*(int *)(sub_100005E5C(&qword_1000FDA08) + 48)];
      sub_100005E5C(&qword_1000FCDD8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1000CABA0;
      *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 40) = v13;
      char v25 = v10;
      sub_10007CD24();
      uint64_t v14 = Error.localizedDescription.getter();
      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 48) = v14;
      *(void *)(inited + 56) = v15;
      uint64_t v16 = Dictionary.init(dictionaryLiteral:)();
      sub_10007CF40(v11);
      return v16;
    case 2u:
      sub_100005E5C(&qword_1000FCDD8);
      uint64_t v17 = swift_initStackObject();
      *(_OWORD *)(v17 + 16) = xmmword_1000CABA0;
      *(void *)(v17 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v17 + 40) = v18;
      sub_10007CE14();
      goto LABEL_7;
    case 3u:
      sub_100005E5C(&qword_1000FCDD8);
      uint64_t v17 = swift_initStackObject();
      *(_OWORD *)(v17 + 16) = xmmword_1000CABA0;
      *(void *)(v17 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v17 + 40) = v19;
      sub_10007CD74();
      goto LABEL_7;
    case 4u:
      sub_100005E5C(&qword_1000FCDD8);
      uint64_t v17 = swift_initStackObject();
      *(_OWORD *)(v17 + 16) = xmmword_1000CABA0;
      *(void *)(v17 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v17 + 40) = v20;
      sub_10007CCD4();
LABEL_7:
      uint64_t v21 = Error.localizedDescription.getter();
      *(void *)(v17 + 72) = &type metadata for String;
      *(void *)(v17 + 48) = v21;
      *(void *)(v17 + 56) = v22;
      break;
    default:
      char v5 = *v4;
      sub_100005E5C(&qword_1000FCDD8);
      uint64_t v6 = swift_initStackObject();
      *(_OWORD *)(v6 + 16) = xmmword_1000CABA0;
      *(void *)(v6 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v6 + 40) = v7;
      char v25 = v5;
      sub_10007CDC4();
      uint64_t v8 = Error.localizedDescription.getter();
      *(void *)(v6 + 72) = &type metadata for String;
      *(void *)(v6 + 48) = v8;
      *(void *)(v6 + 56) = v9;
      break;
  }
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_10007C4AC(uint64_t a1)
{
  uint64_t v2 = sub_10007CFA0(&qword_1000FEAB0);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10007C504(uint64_t a1)
{
  uint64_t v2 = sub_10007CFA0(&qword_1000FEAB0);

  return Error<>._code.getter(a1, v2);
}

BOOL sub_10007C55C(uint64_t a1)
{
  return a1 != -1200;
}

BOOL sub_10007C574@<W0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_10007C55C(*a1);
  *a2 = result;
  return result;
}

void sub_10007C5A8(void *a1@<X8>)
{
  *a1 = -1200;
}

unint64_t sub_10007C5B4()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_10007C5D4()
{
  return -1200;
}

uint64_t sub_10007C5DC()
{
  return sub_10007CB48();
}

uint64_t sub_10007C5FC(uint64_t a1)
{
  unint64_t v2 = sub_10007CFE4();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10007C638(uint64_t a1, uint64_t a2)
{
  return sub_10007CC74(a1, a2, (void (*)(void))sub_10007CFE4, (void (*)(void))sub_10007D030);
}

uint64_t sub_10007C664(uint64_t a1)
{
  if (a1 == 404) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (a1 == 3328) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_10007C67C(unsigned __int8 *a1, char *a2)
{
  return sub_10006A934(*a1, *a2);
}

Swift::Int sub_10007C688()
{
  return sub_10006ABE0(*v0);
}

void sub_10007C690(uint64_t a1)
{
  sub_10006B338(a1, *v1);
}

Swift::Int sub_10007C698()
{
  return sub_10006B36C();
}

uint64_t sub_10007C6A0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10007C664(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10007C6CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007C15C(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_10007C6F8()
{
  sub_100005E5C(&qword_1000FCDD8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  sub_100080474(inited, (__n128)xmmword_1000CABA0);
  uint64_t v1 = String.init<A>(describing:)();
  inited[4].n128_u64[1] = (unint64_t)&type metadata for String;
  inited[3].n128_u64[0] = v1;
  inited[3].n128_u64[1] = v2;
  return Dictionary.init(dictionaryLiteral:)();
}

BOOL sub_10007C788(uint64_t a1)
{
  return a1 != -1000;
}

unint64_t sub_10007C794()
{
  return 0xD000000000000019;
}

uint64_t sub_10007C7B4()
{
  return sub_10007C15C(*v0);
}

uint64_t sub_10007C7BC()
{
  return sub_10007C6F8();
}

uint64_t sub_10007C7C4(uint64_t a1)
{
  unint64_t v2 = sub_10007D07C();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10007C800(uint64_t a1, uint64_t a2)
{
  return sub_10007CAEC(a1, a2, (void (*)(void))sub_10007D07C, (void (*)(void))sub_10007D0C8);
}

BOOL sub_10007C838@<W0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_10007C788(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10007C870(uint64_t a1)
{
  if (a1 == -1011) {
    int v1 = 2;
  }
  else {
    int v1 = 3;
  }
  if (a1 == -1016) {
    unsigned int v2 = 1;
  }
  else {
    unsigned int v2 = v1;
  }
  if (a1 == -2000) {
    return 0;
  }
  else {
    return v2;
  }
}

unint64_t sub_10007C898()
{
  return 0xD000000000000019;
}

uint64_t sub_10007C8B8()
{
  return -1000;
}

uint64_t sub_10007C8C0()
{
  return sub_10007CB48();
}

uint64_t sub_10007C8E0(uint64_t a1)
{
  unint64_t v2 = sub_10007D114();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10007C91C(uint64_t a1, uint64_t a2)
{
  return sub_10007CC74(a1, a2, (void (*)(void))sub_10007D114, (void (*)(void))sub_10007D160);
}

BOOL sub_10007C948(char *a1, char *a2)
{
  return sub_10006A910(*a1, *a2);
}

Swift::Int sub_10007C954()
{
  return sub_10006AC30(*v0);
}

void sub_10007C95C(uint64_t a1)
{
  sub_10006B304(a1, *v1);
}

Swift::Int sub_10007C964(uint64_t a1)
{
  return sub_10006B3B4(a1, *v1);
}

uint64_t sub_10007C96C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10007C870(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10007C998@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007C170(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_10007C9C4()
{
  sub_100005E5C(&qword_1000FCDD8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  sub_100080474(inited, (__n128)xmmword_1000CABA0);
  uint64_t v1 = String.init<A>(describing:)();
  inited[4].n128_u64[1] = (unint64_t)&type metadata for String;
  inited[3].n128_u64[0] = v1;
  inited[3].n128_u64[1] = v2;
  return Dictionary.init(dictionaryLiteral:)();
}

unint64_t sub_10007CA54()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_10007CA74()
{
  return sub_10007C170(*v0);
}

uint64_t sub_10007CA7C()
{
  return sub_10007C9C4();
}

uint64_t sub_10007CA84(uint64_t a1)
{
  unint64_t v2 = sub_10007D1AC();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10007CAC0(uint64_t a1, uint64_t a2)
{
  return sub_10007CAEC(a1, a2, (void (*)(void))sub_10007D1AC, (void (*)(void))sub_10007D1F8);
}

uint64_t sub_10007CAEC(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(void))
{
  a3();
  a4();
  sub_1000042F8();
  uint64_t v5 = sub_1000804CC();

  return Error<>._code.getter(v5);
}

uint64_t sub_10007CB48()
{
  sub_100005E5C(&qword_1000FCDD8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  sub_100080474(inited, (__n128)xmmword_1000CABA0);
  uint64_t v1 = String.init<A>(describing:)();
  inited[4].n128_u64[1] = (unint64_t)&type metadata for String;
  inited[3].n128_u64[0] = v1;
  inited[3].n128_u64[1] = v2;
  return Dictionary.init(dictionaryLiteral:)();
}

unint64_t sub_10007CBCC()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_10007CBEC()
{
  return sub_10007CB48();
}

uint64_t sub_10007CC0C(uint64_t a1)
{
  unint64_t v2 = sub_10007D244();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10007CC48(uint64_t a1, uint64_t a2)
{
  return sub_10007CC74(a1, a2, (void (*)(void))sub_10007D244, (void (*)(void))sub_10007D290);
}

uint64_t sub_10007CC74(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(void))
{
  a3();
  a4();
  sub_1000042F8();
  uint64_t v5 = sub_1000804CC();

  return Error<>._code.getter(v5);
}

unint64_t sub_10007CCD4()
{
  unint64_t result = qword_1000FEA88;
  if (!qword_1000FEA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEA88);
  }
  return result;
}

unint64_t sub_10007CD24()
{
  unint64_t result = qword_1000FEA90;
  if (!qword_1000FEA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEA90);
  }
  return result;
}

unint64_t sub_10007CD74()
{
  unint64_t result = qword_1000FEA98;
  if (!qword_1000FEA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEA98);
  }
  return result;
}

unint64_t sub_10007CDC4()
{
  unint64_t result = qword_1000FEAA0;
  if (!qword_1000FEAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEAA0);
  }
  return result;
}

unint64_t sub_10007CE14()
{
  unint64_t result = qword_1000FEAA8;
  if (!qword_1000FEAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEAA8);
  }
  return result;
}

uint64_t sub_10007CE60()
{
  return sub_10007CFA0((unint64_t *)&qword_1000FDA10);
}

uint64_t type metadata accessor for ApiAgentError()
{
  uint64_t result = qword_1000FEB78;
  if (!qword_1000FEB78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10007CEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ApiAgentError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007CF40(uint64_t a1)
{
  uint64_t v2 = sub_100005E5C(&qword_1000FDA00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007CFA0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ApiAgentError();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10007CFE4()
{
  unint64_t result = qword_1000FEAB8;
  if (!qword_1000FEAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEAB8);
  }
  return result;
}

unint64_t sub_10007D030()
{
  unint64_t result = qword_1000FEAC0;
  if (!qword_1000FEAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEAC0);
  }
  return result;
}

unint64_t sub_10007D07C()
{
  unint64_t result = qword_1000FEAC8;
  if (!qword_1000FEAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEAC8);
  }
  return result;
}

unint64_t sub_10007D0C8()
{
  unint64_t result = qword_1000FEAD0;
  if (!qword_1000FEAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEAD0);
  }
  return result;
}

unint64_t sub_10007D114()
{
  unint64_t result = qword_1000FEAD8;
  if (!qword_1000FEAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEAD8);
  }
  return result;
}

unint64_t sub_10007D160()
{
  unint64_t result = qword_1000FEAE0;
  if (!qword_1000FEAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEAE0);
  }
  return result;
}

unint64_t sub_10007D1AC()
{
  unint64_t result = qword_1000FEAE8;
  if (!qword_1000FEAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEAE8);
  }
  return result;
}

unint64_t sub_10007D1F8()
{
  unint64_t result = qword_1000FEAF0;
  if (!qword_1000FEAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEAF0);
  }
  return result;
}

unint64_t sub_10007D244()
{
  unint64_t result = qword_1000FEAF8;
  if (!qword_1000FEAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEAF8);
  }
  return result;
}

unint64_t sub_10007D290()
{
  unint64_t result = qword_1000FEB00;
  if (!qword_1000FEB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEB00);
  }
  return result;
}

void type metadata accessor for ApiAgentError.SignatureError()
{
}

unsigned char *sub_10007D2EC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007D3B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for ApiAgentError.AMSBagError()
{
}

void type metadata accessor for ApiAgentError.AMSURLError()
{
}

unsigned char *sub_10007D3F8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007D4C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for ApiAgentError.DataTaskError()
{
}

unsigned char *sub_10007D4F8(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10007D594);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for ApiAgentError.GenericURLError()
{
}

uint64_t *sub_10007D5C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v7 = *(int *)(sub_100005E5C(&qword_1000FDA08) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      char v10 = (int *)type metadata accessor for ApiRequestMetrics();
      if (sub_1000082E8((uint64_t)v9, 1, (uint64_t)v10))
      {
        uint64_t v11 = sub_100005E5C(&qword_1000FDA00);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v13 = type metadata accessor for Date();
        if (sub_1000082E8((uint64_t)v9, 1, v13))
        {
          uint64_t v14 = sub_100005E5C(&qword_1000FC938);
          memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v9, v13);
          sub_1000082C0((uint64_t)v8, 0, 1, v13);
        }
        uint64_t v15 = v10[5];
        uint64_t v16 = &v8[v15];
        uint64_t v17 = &v9[v15];
        if (sub_1000082E8((uint64_t)&v9[v15], 1, v13))
        {
          uint64_t v18 = sub_100005E5C(&qword_1000FC938);
          memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v16, v17, v13);
          sub_1000082C0((uint64_t)v16, 0, 1, v13);
        }
        *(void *)&v8[v10[6]] = *(void *)&v9[v10[6]];
        *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
        uint64_t v19 = v10[8];
        uint64_t v20 = &v8[v19];
        uint64_t v21 = &v9[v19];
        if (sub_1000082E8((uint64_t)&v9[v19], 1, v13))
        {
          uint64_t v22 = sub_100005E5C(&qword_1000FC938);
          memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v20, v21, v13);
          sub_1000082C0((uint64_t)v20, 0, 1, v13);
        }
        uint64_t v23 = v10[9];
        uint64_t v24 = &v8[v23];
        char v25 = &v9[v23];
        if (sub_1000082E8((uint64_t)&v9[v23], 1, v13))
        {
          uint64_t v26 = sub_100005E5C(&qword_1000FC938);
          memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v24, v25, v13);
          sub_1000082C0((uint64_t)v24, 0, 1, v13);
        }
        uint64_t v27 = v10[10];
        unint64_t v28 = &v8[v27];
        id v29 = &v9[v27];
        if (sub_1000082E8((uint64_t)&v9[v27], 1, v13))
        {
          uint64_t v30 = sub_100005E5C(&qword_1000FC938);
          memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v28, v29, v13);
          sub_1000082C0((uint64_t)v28, 0, 1, v13);
        }
        v8[v10[11]] = v9[v10[11]];
        uint64_t v31 = v10[12];
        unsigned __int8 v32 = &v8[v31];
        uint64_t v33 = &v9[v31];
        uint64_t v34 = *((void *)v33 + 1);
        *(void *)unsigned __int8 v32 = *(void *)v33;
        *((void *)v32 + 1) = v34;
        uint64_t v35 = v10[13];
        unsigned int v36 = &v8[v35];
        id v37 = &v9[v35];
        swift_bridgeObjectRetain();
        if (sub_1000082E8((uint64_t)v37, 1, v13))
        {
          uint64_t v38 = sub_100005E5C(&qword_1000FC938);
          memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v36, v37, v13);
          sub_1000082C0((uint64_t)v36, 0, 1, v13);
        }
        uint64_t v39 = v10[14];
        uint64_t v40 = &v8[v39];
        unint64_t v41 = &v9[v39];
        uint64_t v42 = type metadata accessor for URL();
        if (sub_1000082E8((uint64_t)v41, 1, v42))
        {
          uint64_t v43 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
          memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
          sub_1000082C0((uint64_t)v40, 0, 1, v42);
        }
        uint64_t v44 = v10[15];
        unsigned int v45 = &v8[v44];
        id v46 = &v9[v44];
        if (sub_1000082E8((uint64_t)&v9[v44], 1, v13))
        {
          uint64_t v47 = sub_100005E5C(&qword_1000FC938);
          memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v45, v46, v13);
          sub_1000082C0((uint64_t)v45, 0, 1, v13);
        }
        uint64_t v48 = v10[16];
        uint64_t v49 = &v8[v48];
        uint64_t v50 = &v9[v48];
        if (sub_1000082E8((uint64_t)&v9[v48], 1, v13))
        {
          uint64_t v51 = sub_100005E5C(&qword_1000FC938);
          memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v49, v50, v13);
          sub_1000082C0((uint64_t)v49, 0, 1, v13);
        }
        uint64_t v52 = v10[17];
        uint64_t v53 = &v8[v52];
        unsigned __int8 v54 = &v9[v52];
        if (sub_1000082E8((uint64_t)&v9[v52], 1, v13))
        {
          uint64_t v55 = sub_100005E5C(&qword_1000FC938);
          memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v53, v54, v13);
          sub_1000082C0((uint64_t)v53, 0, 1, v13);
        }
        uint64_t v56 = v10[18];
        uint64_t v57 = &v8[v56];
        uint64_t v58 = &v9[v56];
        *(void *)uint64_t v57 = *(void *)v58;
        v57[8] = v58[8];
        uint64_t v59 = v10[19];
        uint64_t v60 = &v8[v59];
        uint64_t v61 = &v9[v59];
        uint64_t v62 = *((void *)v61 + 1);
        *(void *)uint64_t v60 = *(void *)v61;
        *((void *)v60 + 1) = v62;
        uint64_t v63 = v10[20];
        uint64_t v64 = &v8[v63];
        uint64_t v65 = &v9[v63];
        uint64_t v66 = *((void *)v65 + 1);
        *(void *)uint64_t v64 = *(void *)v65;
        *((void *)v64 + 1) = v66;
        uint64_t v67 = v10[21];
        char v68 = &v8[v67];
        char v69 = &v9[v67];
        uint64_t v70 = *((void *)v69 + 1);
        *(void *)char v68 = *(void *)v69;
        *((void *)v68 + 1) = v70;
        uint64_t v71 = v10[22];
        uint64_t v72 = &v8[v71];
        uint64_t v73 = &v9[v71];
        uint64_t v74 = *((void *)v73 + 1);
        *(void *)uint64_t v72 = *(void *)v73;
        *((void *)v72 + 1) = v74;
        uint64_t v75 = v10[23];
        uint64_t v76 = &v8[v75];
        uint64_t v77 = &v9[v75];
        uint64_t v78 = *((void *)v77 + 1);
        *(void *)uint64_t v76 = *(void *)v77;
        *((void *)v76 + 1) = v78;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1000082C0((uint64_t)v8, 0, 1, (uint64_t)v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_10007DE00(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = a1 + *(int *)(sub_100005E5C(&qword_1000FDA08) + 48);
    unsigned int v4 = (int *)type metadata accessor for ApiRequestMetrics();
    uint64_t result = sub_1000082E8(v3, 1, (uint64_t)v4);
    if (!result)
    {
      uint64_t v5 = type metadata accessor for Date();
      if (!sub_1000082E8(v3, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
      }
      uint64_t v6 = v3 + v4[5];
      if (!sub_1000082E8(v6, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v6, v5);
      }
      uint64_t v7 = v3 + v4[8];
      if (!sub_1000082E8(v7, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v7, v5);
      }
      uint64_t v8 = v3 + v4[9];
      if (!sub_1000082E8(v8, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v8, v5);
      }
      uint64_t v9 = v3 + v4[10];
      if (!sub_1000082E8(v9, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v9, v5);
      }
      swift_bridgeObjectRelease();
      uint64_t v10 = v3 + v4[13];
      if (!sub_1000082E8(v10, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v10, v5);
      }
      uint64_t v11 = v3 + v4[14];
      uint64_t v12 = type metadata accessor for URL();
      if (!sub_1000082E8(v11, 1, v12)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      }
      uint64_t v13 = v3 + v4[15];
      if (!sub_1000082E8(v13, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v13, v5);
      }
      uint64_t v14 = v3 + v4[16];
      if (!sub_1000082E8(v14, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v14, v5);
      }
      uint64_t v15 = v3 + v4[17];
      if (!sub_1000082E8(v15, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v15, v5);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

unsigned char *sub_10007E1F8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(sub_100005E5C(&qword_1000FDA08) + 48);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    uint64_t v9 = (int *)type metadata accessor for ApiRequestMetrics();
    if (sub_1000082E8((uint64_t)v8, 1, (uint64_t)v9))
    {
      uint64_t v10 = sub_100005E5C(&qword_1000FDA00);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for Date();
      if (sub_1000082E8((uint64_t)v8, 1, v11))
      {
        uint64_t v12 = sub_100005E5C(&qword_1000FC938);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
        sub_1000082C0((uint64_t)v7, 0, 1, v11);
      }
      uint64_t v13 = v9[5];
      uint64_t v14 = &v7[v13];
      uint64_t v15 = &v8[v13];
      if (sub_1000082E8((uint64_t)&v8[v13], 1, v11))
      {
        uint64_t v16 = sub_100005E5C(&qword_1000FC938);
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v14, v15, v11);
        sub_1000082C0((uint64_t)v14, 0, 1, v11);
      }
      *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
      *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
      uint64_t v17 = v9[8];
      uint64_t v18 = &v7[v17];
      uint64_t v19 = &v8[v17];
      if (sub_1000082E8((uint64_t)&v8[v17], 1, v11))
      {
        uint64_t v20 = sub_100005E5C(&qword_1000FC938);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v18, v19, v11);
        sub_1000082C0((uint64_t)v18, 0, 1, v11);
      }
      uint64_t v21 = v9[9];
      uint64_t v22 = &v7[v21];
      uint64_t v23 = &v8[v21];
      if (sub_1000082E8((uint64_t)&v8[v21], 1, v11))
      {
        uint64_t v24 = sub_100005E5C(&qword_1000FC938);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v22, v23, v11);
        sub_1000082C0((uint64_t)v22, 0, 1, v11);
      }
      uint64_t v25 = v9[10];
      uint64_t v26 = &v7[v25];
      uint64_t v27 = &v8[v25];
      if (sub_1000082E8((uint64_t)&v8[v25], 1, v11))
      {
        uint64_t v28 = sub_100005E5C(&qword_1000FC938);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v26, v27, v11);
        sub_1000082C0((uint64_t)v26, 0, 1, v11);
      }
      v7[v9[11]] = v8[v9[11]];
      uint64_t v29 = v9[12];
      uint64_t v30 = &v7[v29];
      uint64_t v31 = &v8[v29];
      uint64_t v32 = *((void *)v31 + 1);
      *(void *)uint64_t v30 = *(void *)v31;
      *((void *)v30 + 1) = v32;
      uint64_t v33 = v9[13];
      uint64_t v34 = &v7[v33];
      uint64_t v35 = &v8[v33];
      swift_bridgeObjectRetain();
      if (sub_1000082E8((uint64_t)v35, 1, v11))
      {
        uint64_t v36 = sub_100005E5C(&qword_1000FC938);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v34, v35, v11);
        sub_1000082C0((uint64_t)v34, 0, 1, v11);
      }
      uint64_t v37 = v9[14];
      uint64_t v38 = &v7[v37];
      uint64_t v39 = &v8[v37];
      uint64_t v40 = type metadata accessor for URL();
      if (sub_1000082E8((uint64_t)v39, 1, v40))
      {
        uint64_t v41 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
        sub_1000082C0((uint64_t)v38, 0, 1, v40);
      }
      uint64_t v42 = v9[15];
      uint64_t v43 = &v7[v42];
      uint64_t v44 = &v8[v42];
      if (sub_1000082E8((uint64_t)&v8[v42], 1, v11))
      {
        uint64_t v45 = sub_100005E5C(&qword_1000FC938);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v43, v44, v11);
        sub_1000082C0((uint64_t)v43, 0, 1, v11);
      }
      uint64_t v46 = v9[16];
      uint64_t v47 = &v7[v46];
      uint64_t v48 = &v8[v46];
      if (sub_1000082E8((uint64_t)&v8[v46], 1, v11))
      {
        uint64_t v49 = sub_100005E5C(&qword_1000FC938);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v47, v48, v11);
        sub_1000082C0((uint64_t)v47, 0, 1, v11);
      }
      uint64_t v50 = v9[17];
      uint64_t v51 = &v7[v50];
      uint64_t v52 = &v8[v50];
      if (sub_1000082E8((uint64_t)&v8[v50], 1, v11))
      {
        uint64_t v53 = sub_100005E5C(&qword_1000FC938);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v51, v52, v11);
        sub_1000082C0((uint64_t)v51, 0, 1, v11);
      }
      uint64_t v54 = v9[18];
      uint64_t v55 = &v7[v54];
      uint64_t v56 = &v8[v54];
      *(void *)uint64_t v55 = *(void *)v56;
      v55[8] = v56[8];
      uint64_t v57 = v9[19];
      uint64_t v58 = &v7[v57];
      uint64_t v59 = &v8[v57];
      uint64_t v60 = *((void *)v59 + 1);
      *(void *)uint64_t v58 = *(void *)v59;
      *((void *)v58 + 1) = v60;
      uint64_t v61 = v9[20];
      uint64_t v62 = &v7[v61];
      uint64_t v63 = &v8[v61];
      uint64_t v64 = *((void *)v63 + 1);
      *(void *)uint64_t v62 = *(void *)v63;
      *((void *)v62 + 1) = v64;
      uint64_t v65 = v9[21];
      uint64_t v66 = &v7[v65];
      uint64_t v67 = &v8[v65];
      uint64_t v68 = *((void *)v67 + 1);
      *(void *)uint64_t v66 = *(void *)v67;
      *((void *)v66 + 1) = v68;
      uint64_t v69 = v9[22];
      uint64_t v70 = &v7[v69];
      uint64_t v71 = &v8[v69];
      uint64_t v72 = *((void *)v71 + 1);
      *(void *)uint64_t v70 = *(void *)v71;
      *((void *)v70 + 1) = v72;
      uint64_t v73 = v9[23];
      uint64_t v74 = &v7[v73];
      uint64_t v75 = &v8[v73];
      uint64_t v76 = *((void *)v75 + 1);
      *(void *)uint64_t v74 = *(void *)v75;
      *((void *)v74 + 1) = v76;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1000082C0((uint64_t)v7, 0, 1, (uint64_t)v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_10007E9EC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10007F220((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(sub_100005E5C(&qword_1000FDA08) + 48);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = (int *)type metadata accessor for ApiRequestMetrics();
      if (sub_1000082E8((uint64_t)v8, 1, (uint64_t)v9))
      {
        uint64_t v10 = sub_100005E5C(&qword_1000FDA00);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        uint64_t v11 = type metadata accessor for Date();
        if (sub_1000082E8((uint64_t)v8, 1, v11))
        {
          uint64_t v12 = sub_100005E5C(&qword_1000FC938);
          memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
          sub_1000082C0((uint64_t)v7, 0, 1, v11);
        }
        uint64_t v13 = v9[5];
        uint64_t v14 = &v7[v13];
        uint64_t v15 = &v8[v13];
        if (sub_1000082E8((uint64_t)&v8[v13], 1, v11))
        {
          uint64_t v16 = sub_100005E5C(&qword_1000FC938);
          memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v14, v15, v11);
          sub_1000082C0((uint64_t)v14, 0, 1, v11);
        }
        *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
        *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
        uint64_t v17 = v9[8];
        uint64_t v18 = &v7[v17];
        uint64_t v19 = &v8[v17];
        if (sub_1000082E8((uint64_t)&v8[v17], 1, v11))
        {
          uint64_t v20 = sub_100005E5C(&qword_1000FC938);
          memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v18, v19, v11);
          sub_1000082C0((uint64_t)v18, 0, 1, v11);
        }
        uint64_t v21 = v9[9];
        uint64_t v22 = &v7[v21];
        uint64_t v23 = &v8[v21];
        if (sub_1000082E8((uint64_t)&v8[v21], 1, v11))
        {
          uint64_t v24 = sub_100005E5C(&qword_1000FC938);
          memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v22, v23, v11);
          sub_1000082C0((uint64_t)v22, 0, 1, v11);
        }
        uint64_t v25 = v9[10];
        uint64_t v26 = &v7[v25];
        uint64_t v27 = &v8[v25];
        if (sub_1000082E8((uint64_t)&v8[v25], 1, v11))
        {
          uint64_t v28 = sub_100005E5C(&qword_1000FC938);
          memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v26, v27, v11);
          sub_1000082C0((uint64_t)v26, 0, 1, v11);
        }
        v7[v9[11]] = v8[v9[11]];
        uint64_t v29 = v9[12];
        uint64_t v30 = &v7[v29];
        uint64_t v31 = &v8[v29];
        *(void *)uint64_t v30 = *(void *)v31;
        *((void *)v30 + 1) = *((void *)v31 + 1);
        uint64_t v32 = v9[13];
        uint64_t v33 = &v7[v32];
        uint64_t v34 = &v8[v32];
        swift_bridgeObjectRetain();
        if (sub_1000082E8((uint64_t)v34, 1, v11))
        {
          uint64_t v35 = sub_100005E5C(&qword_1000FC938);
          memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v33, v34, v11);
          sub_1000082C0((uint64_t)v33, 0, 1, v11);
        }
        uint64_t v36 = v9[14];
        uint64_t v37 = &v7[v36];
        uint64_t v38 = &v8[v36];
        uint64_t v39 = type metadata accessor for URL();
        if (sub_1000082E8((uint64_t)v38, 1, v39))
        {
          uint64_t v40 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
          memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
          sub_1000082C0((uint64_t)v37, 0, 1, v39);
        }
        uint64_t v41 = v9[15];
        uint64_t v42 = &v7[v41];
        uint64_t v43 = &v8[v41];
        if (sub_1000082E8((uint64_t)&v8[v41], 1, v11))
        {
          uint64_t v44 = sub_100005E5C(&qword_1000FC938);
          memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v42, v43, v11);
          sub_1000082C0((uint64_t)v42, 0, 1, v11);
        }
        uint64_t v45 = v9[16];
        uint64_t v46 = &v7[v45];
        uint64_t v47 = &v8[v45];
        if (sub_1000082E8((uint64_t)&v8[v45], 1, v11))
        {
          uint64_t v48 = sub_100005E5C(&qword_1000FC938);
          memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v46, v47, v11);
          sub_1000082C0((uint64_t)v46, 0, 1, v11);
        }
        uint64_t v49 = v9[17];
        uint64_t v50 = &v7[v49];
        uint64_t v51 = &v8[v49];
        if (sub_1000082E8((uint64_t)&v8[v49], 1, v11))
        {
          uint64_t v52 = sub_100005E5C(&qword_1000FC938);
          memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v50, v51, v11);
          sub_1000082C0((uint64_t)v50, 0, 1, v11);
        }
        uint64_t v53 = v9[18];
        uint64_t v54 = &v7[v53];
        uint64_t v55 = &v8[v53];
        uint64_t v56 = *(void *)v55;
        v54[8] = v55[8];
        *(void *)uint64_t v54 = v56;
        uint64_t v57 = v9[19];
        uint64_t v58 = &v7[v57];
        uint64_t v59 = &v8[v57];
        *(void *)uint64_t v58 = *(void *)v59;
        *((void *)v58 + 1) = *((void *)v59 + 1);
        uint64_t v60 = v9[20];
        uint64_t v61 = &v7[v60];
        uint64_t v62 = &v8[v60];
        *(void *)uint64_t v61 = *(void *)v62;
        *((void *)v61 + 1) = *((void *)v62 + 1);
        uint64_t v63 = v9[21];
        uint64_t v64 = &v7[v63];
        uint64_t v65 = &v8[v63];
        *(void *)uint64_t v64 = *(void *)v65;
        *((void *)v64 + 1) = *((void *)v65 + 1);
        uint64_t v66 = v9[22];
        uint64_t v67 = &v7[v66];
        uint64_t v68 = &v8[v66];
        *(void *)uint64_t v67 = *(void *)v68;
        *((void *)v67 + 1) = *((void *)v68 + 1);
        uint64_t v69 = v9[23];
        uint64_t v70 = &v7[v69];
        uint64_t v71 = &v8[v69];
        *(void *)uint64_t v70 = *(void *)v71;
        *((void *)v70 + 1) = *((void *)v71 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1000082C0((uint64_t)v7, 0, 1, (uint64_t)v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10007F220(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ApiAgentError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *sub_10007F27C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(sub_100005E5C(&qword_1000FDA08) + 48);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    uint64_t v9 = (int *)type metadata accessor for ApiRequestMetrics();
    if (sub_1000082E8((uint64_t)v8, 1, (uint64_t)v9))
    {
      uint64_t v10 = sub_100005E5C(&qword_1000FDA00);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for Date();
      if (sub_1000082E8((uint64_t)v8, 1, v11))
      {
        uint64_t v12 = sub_100005E5C(&qword_1000FC938);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
        sub_1000082C0((uint64_t)v7, 0, 1, v11);
      }
      uint64_t v13 = v9[5];
      uint64_t v14 = &v7[v13];
      uint64_t v15 = &v8[v13];
      if (sub_1000082E8((uint64_t)&v8[v13], 1, v11))
      {
        uint64_t v16 = sub_100005E5C(&qword_1000FC938);
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v14, v15, v11);
        sub_1000082C0((uint64_t)v14, 0, 1, v11);
      }
      *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
      *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
      uint64_t v17 = v9[8];
      uint64_t v18 = &v7[v17];
      uint64_t v19 = &v8[v17];
      if (sub_1000082E8((uint64_t)&v8[v17], 1, v11))
      {
        uint64_t v20 = sub_100005E5C(&qword_1000FC938);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v18, v19, v11);
        sub_1000082C0((uint64_t)v18, 0, 1, v11);
      }
      uint64_t v21 = v9[9];
      uint64_t v22 = &v7[v21];
      uint64_t v23 = &v8[v21];
      if (sub_1000082E8((uint64_t)&v8[v21], 1, v11))
      {
        uint64_t v24 = sub_100005E5C(&qword_1000FC938);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v22, v23, v11);
        sub_1000082C0((uint64_t)v22, 0, 1, v11);
      }
      uint64_t v25 = v9[10];
      uint64_t v26 = &v7[v25];
      uint64_t v27 = &v8[v25];
      if (sub_1000082E8((uint64_t)&v8[v25], 1, v11))
      {
        uint64_t v28 = sub_100005E5C(&qword_1000FC938);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v26, v27, v11);
        sub_1000082C0((uint64_t)v26, 0, 1, v11);
      }
      v7[v9[11]] = v8[v9[11]];
      *(_OWORD *)&v7[v9[12]] = *(_OWORD *)&v8[v9[12]];
      uint64_t v29 = v9[13];
      uint64_t v30 = &v7[v29];
      uint64_t v31 = &v8[v29];
      if (sub_1000082E8((uint64_t)&v8[v29], 1, v11))
      {
        uint64_t v32 = sub_100005E5C(&qword_1000FC938);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v30, v31, v11);
        sub_1000082C0((uint64_t)v30, 0, 1, v11);
      }
      uint64_t v33 = v9[14];
      uint64_t v34 = &v7[v33];
      uint64_t v35 = &v8[v33];
      uint64_t v36 = type metadata accessor for URL();
      if (sub_1000082E8((uint64_t)v35, 1, v36))
      {
        uint64_t v37 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
        sub_1000082C0((uint64_t)v34, 0, 1, v36);
      }
      uint64_t v38 = v9[15];
      uint64_t v39 = &v7[v38];
      uint64_t v40 = &v8[v38];
      if (sub_1000082E8((uint64_t)&v8[v38], 1, v11))
      {
        uint64_t v41 = sub_100005E5C(&qword_1000FC938);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v39, v40, v11);
        sub_1000082C0((uint64_t)v39, 0, 1, v11);
      }
      uint64_t v42 = v9[16];
      uint64_t v43 = &v7[v42];
      uint64_t v44 = &v8[v42];
      if (sub_1000082E8((uint64_t)&v8[v42], 1, v11))
      {
        uint64_t v45 = sub_100005E5C(&qword_1000FC938);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v43, v44, v11);
        sub_1000082C0((uint64_t)v43, 0, 1, v11);
      }
      uint64_t v46 = v9[17];
      uint64_t v47 = &v7[v46];
      uint64_t v48 = &v8[v46];
      if (sub_1000082E8((uint64_t)&v8[v46], 1, v11))
      {
        uint64_t v49 = sub_100005E5C(&qword_1000FC938);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v47, v48, v11);
        sub_1000082C0((uint64_t)v47, 0, 1, v11);
      }
      uint64_t v50 = v9[18];
      uint64_t v51 = &v7[v50];
      uint64_t v52 = &v8[v50];
      *(void *)uint64_t v51 = *(void *)v52;
      v51[8] = v52[8];
      *(_OWORD *)&v7[v9[19]] = *(_OWORD *)&v8[v9[19]];
      *(_OWORD *)&v7[v9[20]] = *(_OWORD *)&v8[v9[20]];
      *(_OWORD *)&v7[v9[21]] = *(_OWORD *)&v8[v9[21]];
      *(_OWORD *)&v7[v9[22]] = *(_OWORD *)&v8[v9[22]];
      *(_OWORD *)&v7[v9[23]] = *(_OWORD *)&v8[v9[23]];
      sub_1000082C0((uint64_t)v7, 0, 1, (uint64_t)v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_10007FA18(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10007F220((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(sub_100005E5C(&qword_1000FDA08) + 48);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = (int *)type metadata accessor for ApiRequestMetrics();
      if (sub_1000082E8((uint64_t)v8, 1, (uint64_t)v9))
      {
        uint64_t v10 = sub_100005E5C(&qword_1000FDA00);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        uint64_t v11 = type metadata accessor for Date();
        if (sub_1000082E8((uint64_t)v8, 1, v11))
        {
          uint64_t v12 = sub_100005E5C(&qword_1000FC938);
          memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
          sub_1000082C0((uint64_t)v7, 0, 1, v11);
        }
        uint64_t v13 = v9[5];
        uint64_t v14 = &v7[v13];
        uint64_t v15 = &v8[v13];
        if (sub_1000082E8((uint64_t)&v8[v13], 1, v11))
        {
          uint64_t v16 = sub_100005E5C(&qword_1000FC938);
          memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v14, v15, v11);
          sub_1000082C0((uint64_t)v14, 0, 1, v11);
        }
        *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
        *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
        uint64_t v17 = v9[8];
        uint64_t v18 = &v7[v17];
        uint64_t v19 = &v8[v17];
        if (sub_1000082E8((uint64_t)&v8[v17], 1, v11))
        {
          uint64_t v20 = sub_100005E5C(&qword_1000FC938);
          memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v18, v19, v11);
          sub_1000082C0((uint64_t)v18, 0, 1, v11);
        }
        uint64_t v21 = v9[9];
        uint64_t v22 = &v7[v21];
        uint64_t v23 = &v8[v21];
        if (sub_1000082E8((uint64_t)&v8[v21], 1, v11))
        {
          uint64_t v24 = sub_100005E5C(&qword_1000FC938);
          memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v22, v23, v11);
          sub_1000082C0((uint64_t)v22, 0, 1, v11);
        }
        uint64_t v25 = v9[10];
        uint64_t v26 = &v7[v25];
        uint64_t v27 = &v8[v25];
        if (sub_1000082E8((uint64_t)&v8[v25], 1, v11))
        {
          uint64_t v28 = sub_100005E5C(&qword_1000FC938);
          memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v26, v27, v11);
          sub_1000082C0((uint64_t)v26, 0, 1, v11);
        }
        v7[v9[11]] = v8[v9[11]];
        *(_OWORD *)&v7[v9[12]] = *(_OWORD *)&v8[v9[12]];
        uint64_t v29 = v9[13];
        uint64_t v30 = &v7[v29];
        uint64_t v31 = &v8[v29];
        if (sub_1000082E8((uint64_t)&v8[v29], 1, v11))
        {
          uint64_t v32 = sub_100005E5C(&qword_1000FC938);
          memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v30, v31, v11);
          sub_1000082C0((uint64_t)v30, 0, 1, v11);
        }
        uint64_t v33 = v9[14];
        uint64_t v34 = &v7[v33];
        uint64_t v35 = &v8[v33];
        uint64_t v36 = type metadata accessor for URL();
        if (sub_1000082E8((uint64_t)v35, 1, v36))
        {
          uint64_t v37 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
          memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
          sub_1000082C0((uint64_t)v34, 0, 1, v36);
        }
        uint64_t v38 = v9[15];
        uint64_t v39 = &v7[v38];
        uint64_t v40 = &v8[v38];
        if (sub_1000082E8((uint64_t)&v8[v38], 1, v11))
        {
          uint64_t v41 = sub_100005E5C(&qword_1000FC938);
          memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v39, v40, v11);
          sub_1000082C0((uint64_t)v39, 0, 1, v11);
        }
        uint64_t v42 = v9[16];
        uint64_t v43 = &v7[v42];
        uint64_t v44 = &v8[v42];
        if (sub_1000082E8((uint64_t)&v8[v42], 1, v11))
        {
          uint64_t v45 = sub_100005E5C(&qword_1000FC938);
          memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v43, v44, v11);
          sub_1000082C0((uint64_t)v43, 0, 1, v11);
        }
        uint64_t v46 = v9[17];
        uint64_t v47 = &v7[v46];
        uint64_t v48 = &v8[v46];
        if (sub_1000082E8((uint64_t)&v8[v46], 1, v11))
        {
          uint64_t v49 = sub_100005E5C(&qword_1000FC938);
          memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v47, v48, v11);
          sub_1000082C0((uint64_t)v47, 0, 1, v11);
        }
        uint64_t v50 = v9[18];
        uint64_t v51 = &v7[v50];
        uint64_t v52 = &v8[v50];
        *(void *)uint64_t v51 = *(void *)v52;
        v51[8] = v52[8];
        *(_OWORD *)&v7[v9[19]] = *(_OWORD *)&v8[v9[19]];
        *(_OWORD *)&v7[v9[20]] = *(_OWORD *)&v8[v9[20]];
        *(_OWORD *)&v7[v9[21]] = *(_OWORD *)&v8[v9[21]];
        *(_OWORD *)&v7[v9[22]] = *(_OWORD *)&v8[v9[22]];
        *(_OWORD *)&v7[v9[23]] = *(_OWORD *)&v8[v9[23]];
        sub_1000082C0((uint64_t)v7, 0, 1, (uint64_t)v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000801D0()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_1000801E0()
{
  void v1[4] = &unk_1000CDEA0;
  sub_100080288();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v1[5] = v1;
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_100080288()
{
  if (!qword_1000FCB18)
  {
    type metadata accessor for ApiRequestMetrics();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000FCB18);
    }
  }
}

unint64_t sub_1000802E4()
{
  unint64_t result = qword_1000FEBB0;
  if (!qword_1000FEBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEBB0);
  }
  return result;
}

unint64_t sub_100080334()
{
  unint64_t result = qword_1000FEBB8;
  if (!qword_1000FEBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEBB8);
  }
  return result;
}

unint64_t sub_100080384()
{
  unint64_t result = qword_1000FEBC0;
  if (!qword_1000FEBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEBC0);
  }
  return result;
}

unint64_t sub_1000803D4()
{
  unint64_t result = qword_1000FEBC8;
  if (!qword_1000FEBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEBC8);
  }
  return result;
}

unint64_t sub_100080424()
{
  unint64_t result = qword_1000FEBD0;
  if (!qword_1000FEBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEBD0);
  }
  return result;
}

__n128 *sub_100080474(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 1868983913;
  result[2].n128_u64[1] = 0xE400000000000000;
  return result;
}

uint64_t sub_10008048C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return sub_10007CEDC(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0));
}

unint64_t sub_1000804B8(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

void sub_1000804C0(void *a1@<X8>)
{
  *a1 = -1000;
}

uint64_t sub_1000804CC()
{
  return v0;
}

uint64_t sub_1000804E0()
{
  v7[0] = 0x2079654B697041;
  v7[1] = 0xE700000000000000;
  if (qword_1000FBD18 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = static Secrets.tempoAPIKey;
  uint64_t v0 = (void *)qword_10010A400;
  swift_bridgeObjectRetain();
  v2._uint64_t countAndFlagsBits = v1;
  v2._object = v0;
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  swift_isUniquelyReferenced_nonNull_native();
  sub_1000C0CAC();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_10008064C();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7[0] = &_swiftEmptyDictionarySingleton;
  sub_1000807D8((uint64_t)v3, (uint64_t)sub_100080A04, 0, isUniquelyReferenced_nonNull_native, v7);
  uint64_t v5 = v7[0];
  swift_bridgeObjectRelease();
  return v5;
}

void *sub_10008064C()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = &_swiftEmptyDictionarySingleton;
  sub_1000C0CAC();
  unsigned int v4 = v8;
  swift_bridgeObjectRelease();
  static Locale.autoupdatingCurrent.getter();
  Locale.identifier.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = v4;
  sub_1000C0CAC();
  uint64_t v5 = v8;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1000807D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  sub_1000C15EC(&v38);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_1000C162C();
  if (v8)
  {
    uint64_t v11 = v7;
    uint64_t v12 = v8;
    uint64_t v13 = v9;
    uint64_t v14 = v10;
    while (1)
    {
      uint64_t v15 = (void *)*a5;
      unint64_t v17 = sub_1000175F0();
      uint64_t v18 = v15[2];
      BOOL v19 = (v16 & 1) == 0;
      uint64_t v20 = v18 + v19;
      if (__OFADD__(v18, v19)) {
        break;
      }
      char v21 = v16;
      if (v15[3] >= v20)
      {
        if ((a4 & 1) == 0)
        {
          sub_100005E5C(&qword_1000FEBD8);
          _NativeDictionary.copy()();
        }
      }
      else
      {
        sub_1000C0534(v20, a4 & 1);
        unint64_t v22 = sub_1000175F0();
        if ((v21 & 1) != (v23 & 1)) {
          goto LABEL_17;
        }
        unint64_t v17 = v22;
      }
      uint64_t v24 = (void *)*a5;
      if (v21)
      {
        uint64_t v25 = (uint64_t *)(v24[7] + 16 * v17);
        uint64_t v27 = *v25;
        uint64_t v26 = v25[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v28 = (void *)(v24[7] + 16 * v17);
        swift_bridgeObjectRelease();
        *uint64_t v28 = v27;
        v28[1] = v26;
      }
      else
      {
        v24[(v17 >> 6) + 8] |= 1 << v17;
        uint64_t v29 = (uint64_t *)(v24[6] + 16 * v17);
        *uint64_t v29 = v11;
        v29[1] = v12;
        uint64_t v30 = (void *)(v24[7] + 16 * v17);
        *uint64_t v30 = v13;
        v30[1] = v14;
        uint64_t v31 = v24[2];
        BOOL v32 = __OFADD__(v31, 1);
        uint64_t v33 = v31 + 1;
        if (v32) {
          goto LABEL_16;
        }
        void v24[2] = v33;
      }
      uint64_t v11 = sub_1000C162C();
      uint64_t v12 = v34;
      uint64_t v13 = v35;
      uint64_t v14 = v36;
      a4 = 1;
      if (!v34) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    sub_10001BB94();
    return swift_release();
  }
  return result;
}

uint64_t sub_100080A04@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000C01B4(v7, *a1, a1[1], a1[2], a1[3]);
  uint64_t v4 = v7[0];
  uint64_t v5 = v7[1];
  *a2 = result;
  a2[1] = v6;
  a2[2] = v4;
  a2[3] = v5;
  return result;
}

void sub_100080A48(char a1)
{
  switch(a1)
  {
    case 1:
    case 3:
    case 4:
      sub_100085C5C();
      break;
    default:
      return;
  }
}

uint64_t sub_100080B14()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (!v1 || !*(void *)(v1 + 16)) {
    return 2;
  }
  swift_bridgeObjectRetain();
  unint64_t v2 = sub_1000175F0();
  if ((v3 & 1) == 0
    || (uint64_t v4 = *(void *)(*(void *)(v1 + 56) + 8 * v2),
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        (uint64_t v5 = *(void *)(v4 + 16)) == 0))
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  swift_bridgeObjectRetain();
  for (id i = (uint64_t *)(v4 + 56); ; i += 4)
  {
    uint64_t v8 = *(i - 1);
    uint64_t v7 = *i;
    BOOL v9 = *(i - 3) == 0x495349565F504250 && *(i - 2) == 0xEB00000000454C42;
    if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      break;
    }
    if (!--v5)
    {
      uint64_t v10 = 2;
      swift_bridgeObjectRelease_n();
      return v10;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = 2;
  swift_bridgeObjectRelease_n();
  if (v7)
  {
    if (v8 == 1702195828 && v7 == 0xE400000000000000) {
      char v12 = 1;
    }
    else {
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    return v12 & 1;
  }
  return v10;
}

unint64_t sub_100080CA0(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000EF3F8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

uint64_t sub_100080CEC(unsigned __int8 *a1, char *a2)
{
  return sub_10006A594(*a1, *a2);
}

Swift::Int sub_100080CF8()
{
  return sub_10006AC7C(*v0);
}

uint64_t sub_100080D00(uint64_t a1)
{
  return sub_10006B0B8(a1, *v1);
}

Swift::Int sub_100080D08(uint64_t a1)
{
  return sub_10006B4CC(a1, *v1);
}

unint64_t sub_100080D10@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100080CA0(*a1);
  *a2 = result;
  return result;
}

void sub_100080D40(void *a1@<X8>)
{
  sub_100080A48(*v1);
  *a1 = v3;
  a1[1] = v4;
}

uint64_t sub_100080D6C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001000D2880
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001000D28A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001000D28C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C70656544707061 && a2 == 0xEE004C52556B6E69)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100080F34()
{
  return 4;
}

unint64_t sub_100080F3C(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x4C70656544707061;
      break;
    default:
      return result;
  }
  return result;
}

void sub_100080FD8()
{
  sub_100069FCC();
  v11[1] = v2;
  void v11[2] = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_100005E5C(&qword_1000FEE00);
  sub_100009830();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005EA0(v4, v4[3]);
  sub_1000854B0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v12 = 0;
  sub_100005E5C(&qword_1000FC820);
  sub_1000849B0((uint64_t)&unk_1000FED30);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v0)
  {
    sub_100085AD0(1);
    sub_100085AD0(2);
    sub_100085AD0(3);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  sub_100069FB4();
}

void sub_100081174()
{
  sub_100069FCC();
  uint64_t v2 = v1;
  sub_100005E5C(&qword_1000FEDD0);
  sub_100009830();
  __chkstk_darwin(v3);
  sub_100085CC0();
  sub_100005EA0(v2, v2[3]);
  sub_1000854B0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    sub_100006178((uint64_t)v2);
  }
  else
  {
    sub_100005E5C(&qword_1000FC820);
    sub_1000849B0((uint64_t)&qword_1000FD478);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    swift_bridgeObjectRetain();
    sub_100085BD8();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    swift_bridgeObjectRetain();
    sub_100085BD8();
    uint64_t v4 = sub_100085B44();
    v5(v4);
    swift_bridgeObjectRetain();
    sub_100006178((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_100069FB4();
}

uint64_t sub_100081458(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65727574616566 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100081540(char a1)
{
  if (a1) {
    return 0x65756C6176;
  }
  else {
    return 0x65727574616566;
  }
}

void sub_100081574()
{
  sub_100069FCC();
  BOOL v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = sub_100005E5C(v5);
  sub_100009830();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_1000098F8();
  uint64_t v12 = v11 - v10;
  sub_100005EA0(v4, v4[3]);
  v2();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v0) {
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
  sub_100069FB4();
}

void sub_1000816A8()
{
  sub_100069FCC();
  BOOL v2 = v1;
  uint64_t v4 = v3;
  sub_100005E5C(v5);
  sub_100009830();
  __chkstk_darwin(v6);
  sub_100085CC0();
  sub_100005EA0(v4, v4[3]);
  v2();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    sub_100006178((uint64_t)v4);
  }
  else
  {
    KeyedDecodingContainer.decode(_:forKey:)();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v7 = sub_100085CA8();
    v8(v7);
    swift_bridgeObjectRetain();
    sub_100006178((uint64_t)v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_100069FB4();
}

unint64_t sub_100081858(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000EF4A8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 8) {
    return 8;
  }
  else {
    return v3;
  }
}

void sub_1000818A8(char a1)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
      sub_100085C5C();
      break;
    case 4:
      sub_100085C48();
      break;
    case 5:
      sub_100085C34();
      break;
    case 6:
      sub_100085BB4();
      break;
    default:
      return;
  }
}

void sub_100081970(char a1)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
      sub_100085C5C();
      break;
    case 4:
      sub_100085C48();
      break;
    case 5:
      sub_100085C34();
      break;
    case 6:
      sub_100085BB4();
      break;
    default:
      return;
  }
}

uint64_t sub_100081A38(void *a1)
{
  sub_100005E5C(&qword_1000FED48);
  sub_100009830();
  __chkstk_darwin(v3);
  sub_100005EA0(a1, a1[3]);
  sub_1000844FC();
  sub_10006A068();
  sub_100084A10();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    sub_100085C84(1);
    sub_100085C84(2);
    sub_100005E5C(&qword_1000FECB0);
    sub_100084A5C();
    sub_100085B88();
    sub_100005E5C(&qword_1000FECD8);
    sub_100084B5C();
    sub_100085B88();
    sub_100005E5C(&qword_1000FED00);
    sub_100084CC4();
    sub_100085B88();
    KeyedEncodingContainer.encode(_:forKey:)();
    _s20RegistrationResponseVMa();
    type metadata accessor for SportingEventViewContext();
    sub_100084D70((uint64_t)&unk_1000FED98);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  uint64_t v4 = sub_100069FE4();
  return v5(v4);
}

void sub_100081CB8()
{
  sub_100069FCC();
  Swift::String v2 = v1;
  uint64_t v17 = v3;
  uint64_t v4 = sub_100005E5C(&qword_1000FD690);
  __chkstk_darwin(v4 - 8);
  sub_1000098F8();
  uint64_t v7 = v6 - v5;
  sub_100005E5C(&qword_1000FEC98);
  sub_100009830();
  __chkstk_darwin(v8);
  sub_1000098F8();
  uint64_t v9 = _s20RegistrationResponseVMa();
  __chkstk_darwin(v9);
  sub_1000098F8();
  uint64_t v18 = v11 - v10;
  sub_100005EA0(v2, v2[3]);
  sub_1000844FC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    sub_100006178((uint64_t)v2);
  }
  else
  {
    sub_100084548();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(void *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 8) = v20;
    *(void *)(v18 + 24) = v21;
    *(void *)(v18 + 56) = sub_100085CD8(1);
    *(unsigned char *)(v18 + 64) = v12 & 1;
    *(void *)(v18 + 72) = sub_100085CD8(2);
    *(unsigned char *)(v18 + 80) = v13 & 1;
    sub_100005E5C(&qword_1000FECB0);
    sub_100084594();
    sub_100085B5C();
    *(void *)(v18 + 32) = v19;
    sub_100005E5C(&qword_1000FECD8);
    sub_100084694();
    sub_100085B5C();
    *(void *)(v18 + 40) = v19;
    sub_100005E5C(&qword_1000FED00);
    sub_100084794();
    sub_100085B5C();
    *(void *)(v18 + 48) = v19;
    *(void *)(v18 + 88) = KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)(v18 + 96) = v14;
    type metadata accessor for SportingEventViewContext();
    sub_100084D70((uint64_t)&unk_1000FED10);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v15 = sub_100085AB8();
    v16(v15);
    sub_100084840(v7, v18 + *(int *)(v9 + 44));
    sub_100077908(v18, v17);
    sub_100006178((uint64_t)v2);
    sub_1000848A8(v18);
  }
  sub_100069FB4();
}

uint64_t sub_100082154(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6556746E65696C63 && a2 == 0xED00006E6F697372;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6556616D65686373 && a2 == 0xED00006E6F697372;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6E656B6F74 && a2 == 0xE500000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 1701869940 && a2 == 0xE400000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x746163696C707061 && a2 == 0xEB000000006E6F69;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x6163696E6F6E6163 && a2 == 0xEC0000007364496CLL;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0x656469727265766FLL && a2 == 0xE800000000000000)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v13) {
                  return 7;
                }
                else {
                  return 8;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1000824E8()
{
  return 8;
}

uint64_t sub_1000824F0(char a1)
{
  uint64_t result = 0x6556746E65696C63;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6556616D65686373;
      break;
    case 2:
      uint64_t result = 0x6E656B6F74;
      break;
    case 3:
      uint64_t result = 1701869940;
      break;
    case 4:
      uint64_t result = 0x746163696C707061;
      break;
    case 5:
      uint64_t result = 0x6163696E6F6E6163;
      break;
    case 6:
      uint64_t result = 0x6574656D61726170;
      break;
    case 7:
      uint64_t result = 0x656469727265766FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100082604(void *a1)
{
  sub_100005E5C(&qword_1000FED18);
  sub_100009830();
  __chkstk_darwin(v3);
  sub_100005EA0(a1, a1[3]);
  sub_100084904();
  sub_10006A068();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    sub_100085B20(1);
    sub_100085B20(2);
    sub_100085B20(3);
    sub_100085B20(4);
    sub_100005E5C(&qword_1000FC7D0);
    sub_100084950((uint64_t)&unk_1000FED28);
    sub_100085C08();
    sub_100005E5C(&qword_1000FC820);
    sub_1000849B0((uint64_t)&unk_1000FED30);
    sub_100085C08();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  uint64_t v4 = sub_100069FE4();
  return v5(v4);
}

void sub_100082814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100069FCC();
  char v12 = v11;
  uint64_t v14 = v13;
  sub_100005E5C(&qword_1000FED38);
  sub_100009830();
  __chkstk_darwin(v15);
  sub_1000098F8();
  uint64_t v16 = v12[3];
  sub_100005EA0(v12, v16);
  sub_100084904();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v10)
  {
    sub_100006178((uint64_t)v12);
  }
  else
  {
    uint64_t v17 = sub_100085B00();
    sub_100085C68(1);
    uint64_t v27 = sub_100085B00();
    sub_100085C68(2);
    uint64_t v26 = sub_100085B00();
    sub_100085C68(3);
    uint64_t v25 = sub_100085B00();
    LOBYTE(a10) = 4;
    uint64_t v29 = v18;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_100085B00();
    uint64_t v28 = v20;
    uint64_t v24 = v19;
    sub_100005E5C(&qword_1000FC7D0);
    sub_100084950((uint64_t)&unk_1000FED40);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100005E5C(&qword_1000FC820);
    sub_1000849B0((uint64_t)&qword_1000FD478);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    swift_bridgeObjectRetain();
    char v21 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v22 = sub_100085AA0();
    v23(v22);
    sub_100006178((uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v14 = v17;
    *(void *)(v14 + 8) = v16;
    *(void *)(v14 + 16) = v27;
    *(void *)(v14 + 24) = v16;
    *(void *)(v14 + 32) = v26;
    *(void *)(v14 + 40) = v16;
    *(void *)(v14 + 48) = v25;
    *(void *)(v14 + 56) = v29;
    *(void *)(v14 + 64) = v24;
    *(void *)(v14 + 72) = v28;
    *(void *)(v14 + 80) = a10;
    *(void *)(v14 + 88) = a10;
    *(unsigned char *)(v14 + 96) = v21 & 1;
  }
  sub_100069FB4();
}

unint64_t sub_100082D8C()
{
  return sub_100080F3C(*v0);
}

uint64_t sub_100082D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100080D6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100082DBC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100080F34();
  *a1 = result;
  return result;
}

uint64_t sub_100082DE4(uint64_t a1)
{
  unint64_t v2 = sub_1000854B0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100082E20(uint64_t a1)
{
  unint64_t v2 = sub_1000854B0();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100082E5C(void *a1@<X8>)
{
  sub_100081174();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v6;
  }
}

void sub_100082E8C()
{
}

uint64_t sub_100082EAC(uint64_t a1)
{
  unint64_t v2 = sub_1000854FC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100082EE8(uint64_t a1)
{
  unint64_t v2 = sub_1000854FC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100082F24(void *a1@<X8>)
{
}

void sub_100082F60()
{
}

Swift::Int sub_100082FA4()
{
  return sub_100067924(*v0);
}

uint64_t sub_100082FC0()
{
  return sub_100081540(*v0);
}

uint64_t sub_100082FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100081458(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100082FF0(uint64_t a1)
{
  unint64_t v2 = sub_100085548();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10008302C(uint64_t a1)
{
  unint64_t v2 = sub_100085548();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100083068(void *a1@<X8>)
{
}

void sub_1000830A4(void *a1@<X8>)
{
  sub_1000816A8();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v6;
  }
}

void sub_1000830E0()
{
}

uint64_t sub_100083124(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10006A874(*a1, *a2);
}

Swift::Int sub_100083130()
{
  return sub_10006AC94(*v0);
}

uint64_t sub_100083138(uint64_t a1)
{
  return sub_10006B244(a1, *v1);
}

Swift::Int sub_100083140(uint64_t a1)
{
  return sub_10006B410(a1, *v1);
}

unint64_t sub_100083148@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100081858(*a1);
  *a2 = result;
  return result;
}

void sub_100083178(void *a1@<X8>)
{
  sub_1000818A8(*v1);
  *a1 = v3;
  a1[1] = v4;
}

void sub_1000831A4()
{
  sub_100081970(*v0);
}

uint64_t sub_1000831AC@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000818A4(a1);
  *a2 = result;
  return result;
}

void sub_1000831D4(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1000831E0(uint64_t a1)
{
  unint64_t v2 = sub_1000844FC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10008321C(uint64_t a1)
{
  unint64_t v2 = sub_1000844FC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100083258()
{
}

uint64_t sub_100083270(void *a1)
{
  return sub_100081A38(a1);
}

uint64_t sub_100083288()
{
  return sub_1000824F0(*v0);
}

uint64_t sub_100083290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100082154(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000832B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000824E8();
  *a1 = result;
  return result;
}

uint64_t sub_1000832E0(uint64_t a1)
{
  unint64_t v2 = sub_100084904();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10008331C(uint64_t a1)
{
  unint64_t v2 = sub_100084904();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100083358(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  sub_100082814(a1, a2, a3, a4, a5, a6, a7, a8, v11, __src[0]);
  if (!v9) {
    memcpy(a9, __src, 0x61uLL);
  }
}

uint64_t sub_1000833A4(void *a1)
{
  return sub_100082604(a1);
}

uint64_t sub_1000833BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100083420(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000834C8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

void *sub_1000835D0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x61uLL);
}

uint64_t sub_1000835D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

uint64_t sub_100083678(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 97))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000836B8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 97) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void _s23RegistrationRequestBodyVMa()
{
}

uint64_t sub_100083720(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v8;
    *(void *)(a1 + 56) = a2[7];
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v9 = a2[9];
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    *(void *)(a1 + 72) = v9;
    uint64_t v10 = a2[12];
    uint64_t v11 = *(int *)(a3 + 44);
    uint64_t v15 = (char *)a2 + v11;
    __dst = (void *)(a1 + v11);
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v10;
    uint64_t v12 = type metadata accessor for SportingEventViewContext();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_1000082E8((uint64_t)v15, 1, v12))
    {
      uint64_t v13 = sub_100005E5C(&qword_1000FD690);
      memcpy(__dst, v15, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(__dst, v15, v12);
      sub_1000082C0((uint64_t)__dst, 0, 1, v12);
    }
  }
  return v5;
}

uint64_t sub_1000838F0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = type metadata accessor for SportingEventViewContext();
  uint64_t result = sub_1000082E8(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_1000839C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 96);
  uint64_t v9 = *(int *)(a3 + 44);
  uint64_t v13 = (const void *)(a2 + v9);
  __dst = (void *)(a1 + v9);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  uint64_t v10 = type metadata accessor for SportingEventViewContext();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_1000082E8((uint64_t)v13, 1, v10))
  {
    uint64_t v11 = sub_100005E5C(&qword_1000FD690);
    memcpy(__dst, v13, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(__dst, v13, v10);
    sub_1000082C0((uint64_t)__dst, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_100083B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 44);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for SportingEventViewContext();
  int v12 = sub_1000082E8((uint64_t)v9, 1, v11);
  int v13 = sub_1000082E8((uint64_t)v10, 1, v11);
  if (!v12)
  {
    uint64_t v14 = *(void *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 24))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v15 = sub_100005E5C(&qword_1000FD690);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  sub_1000082C0((uint64_t)v9, 0, 1, v11);
  return a1;
}

uint64_t sub_100083D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v9 = type metadata accessor for SportingEventViewContext();
  if (sub_1000082E8((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_100005E5C(&qword_1000FD690);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    sub_1000082C0((uint64_t)v7, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_100083E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for SportingEventViewContext();
  int v11 = sub_1000082E8((uint64_t)v8, 1, v10);
  int v12 = sub_1000082E8((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_100005E5C(&qword_1000FD690);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  sub_1000082C0((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t sub_100084090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000840A4);
}

uint64_t sub_1000840A4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100005E5C(&qword_1000FD690);
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 44);
    return sub_1000082E8(v9, a2, v8);
  }
}

uint64_t sub_100084130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100084144);
}

void *sub_100084144(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100005E5C(&qword_1000FD690);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 44);
    return (void *)sub_1000082C0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t _s20RegistrationResponseVMa()
{
  uint64_t result = qword_1000FEC38;
  if (!qword_1000FEC38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100084210()
{
  sub_1000842CC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000842CC()
{
  if (!qword_1000FEC48)
  {
    type metadata accessor for SportingEventViewContext();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000FEC48);
    }
  }
}

uint64_t sub_100084324(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_1000843AC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100084478);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void type metadata accessor for ApplicationType()
{
}

unint64_t sub_1000844B0()
{
  unint64_t result = qword_1000FEC90;
  if (!qword_1000FEC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEC90);
  }
  return result;
}

unint64_t sub_1000844FC()
{
  unint64_t result = qword_1000FECA0;
  if (!qword_1000FECA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FECA0);
  }
  return result;
}

unint64_t sub_100084548()
{
  unint64_t result = qword_1000FECA8;
  if (!qword_1000FECA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FECA8);
  }
  return result;
}

unint64_t sub_100084594()
{
  unint64_t result = qword_1000FECB8;
  if (!qword_1000FECB8)
  {
    sub_1000061D8(&qword_1000FECB0);
    sub_100084C10((uint64_t)&unk_1000FECC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FECB8);
  }
  return result;
}

unint64_t sub_100084648()
{
  unint64_t result = qword_1000FECD0;
  if (!qword_1000FECD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FECD0);
  }
  return result;
}

unint64_t sub_100084694()
{
  unint64_t result = qword_1000FECE0;
  if (!qword_1000FECE0)
  {
    sub_1000061D8(&qword_1000FECD8);
    sub_100084C10((uint64_t)&unk_1000FECE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FECE0);
  }
  return result;
}

unint64_t sub_100084748()
{
  unint64_t result = qword_1000FECF8;
  if (!qword_1000FECF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FECF8);
  }
  return result;
}

unint64_t sub_100084794()
{
  unint64_t result = qword_1000FED08;
  if (!qword_1000FED08)
  {
    sub_1000061D8(&qword_1000FED00);
    sub_100084D70((uint64_t)&unk_1000FE658);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FED08);
  }
  return result;
}

uint64_t sub_100084840(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005E5C(&qword_1000FD690);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000848A8(uint64_t a1)
{
  uint64_t v2 = _s20RegistrationResponseVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100084904()
{
  unint64_t result = qword_1000FED20;
  if (!qword_1000FED20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FED20);
  }
  return result;
}

unint64_t sub_100084950(uint64_t a1)
{
  unint64_t result = sub_100085CF8(a1);
  if (!result)
  {
    sub_1000061D8(&qword_1000FC7D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1000849B0(uint64_t a1)
{
  unint64_t result = sub_100085CF8(a1);
  if (!result)
  {
    sub_1000061D8(&qword_1000FC820);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_100084A10()
{
  unint64_t result = qword_1000FED50;
  if (!qword_1000FED50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FED50);
  }
  return result;
}

unint64_t sub_100084A5C()
{
  unint64_t result = qword_1000FED58;
  if (!qword_1000FED58)
  {
    sub_1000061D8(&qword_1000FECB0);
    sub_100084C10((uint64_t)&unk_1000FED60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FED58);
  }
  return result;
}

unint64_t sub_100084B10()
{
  unint64_t result = qword_1000FED68;
  if (!qword_1000FED68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FED68);
  }
  return result;
}

unint64_t sub_100084B5C()
{
  unint64_t result = qword_1000FED70;
  if (!qword_1000FED70)
  {
    sub_1000061D8(&qword_1000FECD8);
    sub_100084C10((uint64_t)&unk_1000FED78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FED70);
  }
  return result;
}

unint64_t sub_100084C10(uint64_t a1)
{
  unint64_t result = sub_100085CF8(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_1000061D8(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_100084C78()
{
  unint64_t result = qword_1000FED80;
  if (!qword_1000FED80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FED80);
  }
  return result;
}

unint64_t sub_100084CC4()
{
  unint64_t result = qword_1000FED88;
  if (!qword_1000FED88)
  {
    sub_1000061D8(&qword_1000FED00);
    sub_100084D70((uint64_t)&unk_1000FED90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FED88);
  }
  return result;
}

unint64_t sub_100084D70(uint64_t a1)
{
  unint64_t result = sub_100085CF8(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

ValueMetadata *_s23RegistrationRequestBodyV10CodingKeysOMa()
{
  return &_s23RegistrationRequestBodyV10CodingKeysON;
}

uint64_t _s23RegistrationRequestBodyV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s23RegistrationRequestBodyV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100084F20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void _s20RegistrationResponseV10CodingKeysOMa()
{
}

void _s20RegistrationResponseV16DeliveryFeaturesVMa()
{
}

uint64_t sub_100084F78()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_100084FB4(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100084FF4(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_100085064(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000850AC(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000850EC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void _s20RegistrationResponseV19RunningClockFeatureVMa()
{
}

uint64_t sub_100085138()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_100085184(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1000851DC(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_10008526C(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

void _s20RegistrationResponseV5LinksVMa()
{
}

unint64_t sub_1000852D4()
{
  unint64_t result = qword_1000FEDA0;
  if (!qword_1000FEDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEDA0);
  }
  return result;
}

unint64_t sub_100085324()
{
  unint64_t result = qword_1000FEDA8;
  if (!qword_1000FEDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEDA8);
  }
  return result;
}

unint64_t sub_100085374()
{
  unint64_t result = qword_1000FEDB0;
  if (!qword_1000FEDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEDB0);
  }
  return result;
}

unint64_t sub_1000853C4()
{
  unint64_t result = qword_1000FEDB8;
  if (!qword_1000FEDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEDB8);
  }
  return result;
}

unint64_t sub_100085414()
{
  unint64_t result = qword_1000FEDC0;
  if (!qword_1000FEDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEDC0);
  }
  return result;
}

unint64_t sub_100085464()
{
  unint64_t result = qword_1000FEDC8;
  if (!qword_1000FEDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEDC8);
  }
  return result;
}

unint64_t sub_1000854B0()
{
  unint64_t result = qword_1000FEDD8;
  if (!qword_1000FEDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEDD8);
  }
  return result;
}

unint64_t sub_1000854FC()
{
  unint64_t result = qword_1000FEDE8;
  if (!qword_1000FEDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEDE8);
  }
  return result;
}

unint64_t sub_100085548()
{
  unint64_t result = qword_1000FEDF8;
  if (!qword_1000FEDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEDF8);
  }
  return result;
}

ValueMetadata *_s20RegistrationResponseV16DeliveryFeaturesV10CodingKeysOMa()
{
  return &_s20RegistrationResponseV16DeliveryFeaturesV10CodingKeysON;
}

unsigned char *_s20RegistrationResponseV16DeliveryFeaturesV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100085678);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s20RegistrationResponseV19RunningClockFeatureV10CodingKeysOMa()
{
  return &_s20RegistrationResponseV19RunningClockFeatureV10CodingKeysON;
}

unsigned char *_s20RegistrationResponseV5LinksV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10008577CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s20RegistrationResponseV5LinksV10CodingKeysOMa()
{
  return &_s20RegistrationResponseV5LinksV10CodingKeysON;
}

unint64_t sub_1000857B8()
{
  unint64_t result = qword_1000FEE18;
  if (!qword_1000FEE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEE18);
  }
  return result;
}

unint64_t sub_100085808()
{
  unint64_t result = qword_1000FEE20;
  if (!qword_1000FEE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEE20);
  }
  return result;
}

unint64_t sub_100085858()
{
  unint64_t result = qword_1000FEE28;
  if (!qword_1000FEE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEE28);
  }
  return result;
}

unint64_t sub_1000858A8()
{
  unint64_t result = qword_1000FEE30;
  if (!qword_1000FEE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEE30);
  }
  return result;
}

unint64_t sub_1000858F8()
{
  unint64_t result = qword_1000FEE38;
  if (!qword_1000FEE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEE38);
  }
  return result;
}

unint64_t sub_100085948()
{
  unint64_t result = qword_1000FEE40;
  if (!qword_1000FEE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEE40);
  }
  return result;
}

unint64_t sub_100085998()
{
  unint64_t result = qword_1000FEE48;
  if (!qword_1000FEE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEE48);
  }
  return result;
}

unint64_t sub_1000859E8()
{
  unint64_t result = qword_1000FEE50;
  if (!qword_1000FEE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEE50);
  }
  return result;
}

unint64_t sub_100085A38()
{
  unint64_t result = qword_1000FEE58;
  if (!qword_1000FEE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEE58);
  }
  return result;
}

uint64_t sub_100085AA0()
{
  return v0;
}

uint64_t sub_100085AB8()
{
  return v0;
}

uint64_t sub_100085AD0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 81) = a1;
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_100085B00()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_100085B20@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_100085B44()
{
  return v0;
}

uint64_t sub_100085B5C()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_100085B88()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_100085BB4()
{
  return 0x6172747369676572;
}

uint64_t sub_100085BD8()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_100085C08()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_100085C34()
{
  return 0x73746E657665;
}

unint64_t sub_100085C48()
{
  return 0xD000000000000010;
}

uint64_t sub_100085C68@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100085C84@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_100085CA8()
{
  return v0;
}

uint64_t sub_100085CD8@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 112) = a1;
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_100085CF8(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_100085D04(uint64_t a1)
{
  return sub_100085E70(a1, qword_10010A4F0);
}

uint64_t *sub_100085D1C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100085D80(uint64_t a1)
{
  return sub_100085E70(a1, qword_10010A508);
}

uint64_t sub_100085D9C(uint64_t a1)
{
  return sub_100085EE8(a1, qword_10010A520);
}

uint64_t sub_100085DBC(uint64_t a1)
{
  return sub_100085EE8(a1, qword_10010A538);
}

uint64_t sub_100085DDC(uint64_t a1)
{
  return sub_100085EF0(a1, qword_10010A550);
}

uint64_t sub_100085E00(uint64_t a1)
{
  return sub_100085E70(a1, qword_10010A568);
}

uint64_t sub_100085E20(uint64_t a1)
{
  return sub_100085E70(a1, qword_10010A580);
}

uint64_t sub_100085E4C(uint64_t a1)
{
  return sub_100085EF0(a1, qword_10010A598);
}

uint64_t sub_100085E70(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  sub_100085D1C(v3, a2);
  sub_10000929C(v3, (uint64_t)a2);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100085EE8(uint64_t a1, uint64_t *a2)
{
  return sub_100085E70(a1, a2);
}

uint64_t sub_100085EF0(uint64_t a1, uint64_t *a2)
{
  return sub_100085E70(a1, a2);
}

uint64_t *sub_100085EF8()
{
  if (qword_1000FBDF8 != -1) {
    swift_once();
  }
  return &qword_10010A5B0;
}

void sub_100085F44()
{
  type metadata accessor for PersistentStore();
  uint64_t v0 = PersistentStore.__allocating_init()();
  id v1 = [objc_allocWithZone((Class)type metadata accessor for ActivityAuthorization()) init];
  swift_retain();
  id v2 = v1;
  uint64_t v3 = sub_100086618(v0, (uint64_t)v2);
  swift_release();

  qword_10010A5B0 = v3;
}

uint64_t sub_100085FCC()
{
  uint64_t v2 = v0;
  if (sub_10007AD1C())
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v3 & 1) == 0) {
      return result;
    }
  }
  sub_100005EA0((void *)(v2 + 112), *(void *)(v2 + 136));
  v36[1] = 0;
  uint64_t v5 = dispatch thunk of PersistentStorable.allEventSubscriptionsToConsumers(isConventionalOrUnified:)();
  sub_10008DAAC(v5, v45);
  uint64_t v39 = v45[0];
  int64_t v40 = v45[3];
  unint64_t v6 = v45[4];
  uint64_t v37 = v45[1];
  int64_t v38 = (unint64_t)(v45[2] + 64) >> 6;
  void v36[2] = v5;
  swift_bridgeObjectRetain();
  unint64_t v44 = 0x80000001000D0580;
LABEL_6:
  if (v6)
  {
    uint64_t v43 = (v6 - 1) & v6;
    unint64_t v7 = __clz(__rbit64(v6)) | (v40 << 6);
    goto LABEL_25;
  }
  int64_t v8 = v40 + 1;
  if (__OFADD__(v40, 1)) {
    goto LABEL_93;
  }
  if (v8 >= v38) {
    goto LABEL_87;
  }
  unint64_t v9 = *(void *)(v37 + 8 * v8);
  if (v9)
  {
LABEL_24:
    uint64_t v43 = (v9 - 1) & v9;
    unint64_t v7 = __clz(__rbit64(v9)) + (v8 << 6);
    int64_t v40 = v8;
LABEL_25:
    uint64_t v14 = *(void *)(*(void *)(v39 + 56) + 8 * v7);
    char v15 = *(unsigned char *)(v14 + 32);
    unsigned int v16 = v15 & 0x3F;
    unint64_t v42 = (unint64_t)((1 << v15) + 63) >> 6;
    size_t v17 = 8 * v42;
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v16 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
    {
      uint64_t v41 = v36;
      __chkstk_darwin(isStackAllocationSafe);
      bzero((char *)v36 - ((v17 + 15) & 0x3FFFFFFFFFFFFFF0), v17);
      uint64_t v19 = 0;
      uint64_t v20 = v14 + 56;
      sub_100086960();
      int64_t v22 = v21 >> 6;
      while (1)
      {
        if (v1)
        {
          sub_1000869A8();
        }
        else
        {
          BOOL v11 = __OFADD__(v19++, 1);
          if (v11)
          {
            __break(1u);
            goto LABEL_89;
          }
          if (v19 >= v22) {
            goto LABEL_52;
          }
          if (!*(void *)(v20 + 8 * v19))
          {
            uint64_t v23 = v19 + 1;
            if (v19 + 1 >= v22) {
              goto LABEL_52;
            }
            if (!*(void *)(v20 + 8 * v23))
            {
              uint64_t v23 = v19 + 2;
              if (v19 + 2 >= v22) {
                goto LABEL_52;
              }
              if (!*(void *)(v20 + 8 * v23))
              {
                uint64_t v23 = v19 + 3;
                if (v19 + 3 >= v22)
                {
LABEL_52:
                  uint64_t v26 = sub_100086A24();
                  goto LABEL_79;
                }
                if (!*(void *)(v20 + 8 * v23))
                {
                  while (1)
                  {
                    uint64_t v19 = v23 + 1;
                    if (__OFADD__(v23, 1)) {
                      break;
                    }
                    if (v19 >= v22) {
                      goto LABEL_52;
                    }
                    ++v23;
                    if (*(void *)(v20 + 8 * v19)) {
                      goto LABEL_40;
                    }
                  }
LABEL_90:
                  __break(1u);
LABEL_91:
                  __break(1u);
LABEL_92:
                  __break(1u);
LABEL_93:
                  __break(1u);
LABEL_94:
                  __break(1u);
                }
              }
            }
            uint64_t v19 = v23;
          }
LABEL_40:
          sub_1000869C0();
        }
        sub_1000869F8();
        if ((!v25 || v24 != 0x80000001000D0580) && (sub_1000869D8() & 1) == 0)
        {
          sub_100086984();
          if (v11) {
            goto LABEL_92;
          }
        }
      }
    }
    uint64_t v27 = (void *)swift_slowAlloc();
    bzero(v27, v17);
    uint64_t v28 = 0;
    uint64_t v29 = v14 + 56;
    sub_100086960();
    int64_t v31 = v30 >> 6;
    while (1)
    {
      if (v1)
      {
        sub_1000869A8();
      }
      else
      {
        BOOL v11 = __OFADD__(v28++, 1);
        if (v11)
        {
LABEL_89:
          __break(1u);
          goto LABEL_90;
        }
        if (v28 >= v31) {
          goto LABEL_78;
        }
        if (!*(void *)(v29 + 8 * v28))
        {
          uint64_t v32 = v28 + 1;
          if (v28 + 1 >= v31) {
            goto LABEL_78;
          }
          if (!*(void *)(v29 + 8 * v32))
          {
            uint64_t v32 = v28 + 2;
            if (v28 + 2 >= v31) {
              goto LABEL_78;
            }
            if (!*(void *)(v29 + 8 * v32))
            {
              uint64_t v32 = v28 + 3;
              if (v28 + 3 >= v31) {
                goto LABEL_78;
              }
              if (!*(void *)(v29 + 8 * v32))
              {
                while (1)
                {
                  uint64_t v28 = v32 + 1;
                  if (__OFADD__(v32, 1)) {
                    goto LABEL_91;
                  }
                  if (v28 >= v31) {
                    break;
                  }
                  ++v32;
                  if (*(void *)(v29 + 8 * v28)) {
                    goto LABEL_66;
                  }
                }
LABEL_78:
                uint64_t v26 = sub_100086A24();
                swift_slowDealloc();
LABEL_79:
                unint64_t v6 = v43;
                uint64_t v34 = *(void *)(v26 + 16);
                swift_release();
                if (v34)
                {
                  swift_bridgeObjectRelease();
                  swift_release();
                  return 1;
                }
                goto LABEL_6;
              }
            }
          }
          uint64_t v28 = v32;
        }
LABEL_66:
        sub_1000869C0();
      }
      sub_1000869F8();
      if ((!v25 || v33 != v44) && (sub_1000869D8() & 1) == 0)
      {
        sub_100086984();
        if (v11) {
          goto LABEL_94;
        }
      }
    }
  }
  sub_100086A18();
  if (v10 == v11) {
    goto LABEL_87;
  }
  sub_100086A0C();
  if (v9) {
    goto LABEL_23;
  }
  sub_100086A18();
  if (v10 == v11) {
    goto LABEL_87;
  }
  sub_100086A0C();
  if (v9) {
    goto LABEL_23;
  }
  sub_100086A18();
  if (v10 == v11) {
    goto LABEL_87;
  }
  sub_100086A0C();
  if (v9) {
    goto LABEL_23;
  }
  sub_100086A18();
  if (v10 == v11) {
    goto LABEL_87;
  }
  sub_100086A0C();
  if (v9)
  {
LABEL_23:
    int64_t v8 = v12;
    goto LABEL_24;
  }
  int64_t v8 = v13 + 5;
  if (v8 >= v38) {
    goto LABEL_87;
  }
  unint64_t v9 = *(void *)(v37 + 8 * v8);
  if (v9) {
    goto LABEL_24;
  }
  int64_t v35 = v40 + 7;
  while (v35 < v38)
  {
    unint64_t v9 = *(void *)(v37 + 8 * v35++);
    if (v9)
    {
      int64_t v8 = v35 - 1;
      goto LABEL_24;
    }
  }
LABEL_87:
  swift_bridgeObjectRelease();
  swift_release();
  return 0;
}

uint64_t sub_1000864E0()
{
  sub_100006178(v0 + 112);
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_100086510()
{
  sub_1000864E0();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for SubscriptionInspectionUtility()
{
  return self;
}

unint64_t sub_100086564()
{
  unint64_t result = qword_1000FEF18;
  if (!qword_1000FEF18)
  {
    type metadata accessor for SubscriptionInspectionUtility();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FEF18);
  }
  return result;
}

uint64_t sub_1000865B0()
{
  sub_100085EF8();

  return swift_retain();
}

uint64_t sub_1000865E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SubscriptionInspectionUtility();

  return static GlobalActor.sharedUnownedExecutor.getter(v3, a2);
}

uint64_t sub_100086618(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = type metadata accessor for ActivityAuthorization();
  char v15 = &off_1000F15C8;
  v13[0] = a2;
  type metadata accessor for SubscriptionInspectionUtility();
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = sub_10000A014((uint64_t)v13, v14);
  __n128 v6 = __chkstk_darwin(v5);
  int64_t v8 = (void *)((char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
  uint64_t v10 = sub_100086730(a1, *v8, v4);
  sub_100006178((uint64_t)v13);
  return v10;
}

uint64_t sub_100086730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v28[3] = type metadata accessor for PersistentStore();
  v28[4] = &protocol witness table for PersistentStore;
  v28[0] = a1;
  uint64_t v6 = type metadata accessor for ActivityAuthorization();
  v27[3] = v6;
  v27[4] = &off_1000F15C8;
  v27[0] = a2;
  swift_defaultActor_initialize();
  sub_100008B98((uint64_t)v28, a3 + 112);
  sub_100008B98((uint64_t)v27, (uint64_t)v25);
  unint64_t v7 = sub_1000522C4();
  uint64_t v9 = v8;
  uint64_t v10 = sub_10000A014((uint64_t)v25, v26);
  __n128 v11 = __chkstk_darwin(v10);
  uint64_t v13 = (void *)((char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
  uint64_t v15 = *v13;
  v24[3] = v6;
  v24[4] = &off_1000F15C8;
  v24[0] = v15;
  type metadata accessor for ActivityCapUtility();
  unsigned int v16 = (void *)swift_allocObject();
  uint64_t v17 = sub_10000A014((uint64_t)v24, v6);
  __n128 v18 = __chkstk_darwin(v17);
  uint64_t v20 = (void *)((char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
  uint64_t v22 = *v20;
  void v16[5] = v6;
  v16[6] = &off_1000F15C8;
  long long v16[2] = v22;
  v16[7] = v7;
  v16[8] = v9;
  sub_100006178((uint64_t)v24);
  sub_100006178((uint64_t)v25);
  sub_100006178((uint64_t)v27);
  sub_100006178((uint64_t)v28);
  *(void *)(a3 + 152) = v16;
  return a3;
}

void sub_100086984()
{
  *(void *)(v0 + ((v1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v1;
}

uint64_t sub_1000869D8()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1000869F8()
{
  return *(void *)(*(void *)(v0 + 48) + 16 * v1);
}

uint64_t sub_100086A24()
{
  uint64_t v5 = *(void *)(v3 - 160);
  return sub_1000190B8(v1, v5, v2, v0);
}

void sub_100086A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!v4)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  sub_100017DA8();
  if (a2 >= a1 && (v4 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a1;
    unint64_t v7 = (uint64_t *)(a3 + 16 * a1 + 40);
    while (a2 != v6)
    {
      if (a1 < 0) {
        goto LABEL_18;
      }
      if (v6 >= *(void *)(a3 + 16)) {
        goto LABEL_19;
      }
      uint64_t v16 = *(v7 - 1);
      uint64_t v17 = *v7;
      swift_bridgeObjectRetain();
      v8._uint64_t countAndFlagsBits = 8250;
      v8._object = (void *)0xE200000000000000;
      String.append(_:)(v8);
      if (v6 >= *(void *)(a4 + 16)) {
        goto LABEL_20;
      }
      if (*(unsigned char *)(a4 + 32 + v6)) {
        uint64_t v9 = 0x53534543435553;
      }
      else {
        uint64_t v9 = 0x4552554C494146;
      }
      unint64_t v10 = 0xE700000000000000;
      String.append(_:)(*(Swift::String *)&v9);
      swift_bridgeObjectRelease();
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      if (v11 >= _swiftEmptyArrayStorage[3] >> 1) {
        sub_100017DA8();
      }
      _swiftEmptyArrayStorage[2] = v11 + 1;
      uint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v16;
      v12[5] = v17;
      ++v6;
      v7 += 2;
      if (a2 == v6) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
}

uint64_t sub_100086C20(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a4;
  uint64_t v42 = a3;
  uint64_t v41 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    v34[1] = v4;
    uint64_t v50 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    v34[0] = a2;
    uint64_t v39 = (uint64_t)a2 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_subscriptionOperation + 96;
    uint64_t v40 = (uint64_t)a2 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_subscriptionOperation;
    uint64_t v38 = (uint64_t)a2 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_subscriptionOperation + 136;
    uint64_t v37 = &v48;
    uint64_t v36 = v49;
    int64_t v35 = (void (**)(char *, uint64_t))(v7 + 8);
    unint64_t v11 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v13 = *(v11 - 1);
      uint64_t v12 = *v11;
      uint64_t v14 = v40;
      sub_10008DED8(v40, (uint64_t)v46);
      uint64_t v15 = *(void *)(v14 + 40);
      sub_10008DED8(v39, (uint64_t)v37);
      sub_10008DED8(v38, (uint64_t)v36);
      uint64_t v47 = v15;
      v49[5] = v42;
      v49[6] = v43;
      v49[7] = v13;
      v49[8] = v12;
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      Date.init()();
      uint64_t result = Date.timeIntervalSince1970.getter();
      double v18 = v17 * 1000.0;
      if ((~*(void *)&v18 & 0x7FF0000000000000) == 0) {
        break;
      }
      if (v18 <= -1.0) {
        goto LABEL_11;
      }
      if (v18 >= 1.84467441e19) {
        goto LABEL_12;
      }
      v11 += 2;
      unint64_t v19 = (unint64_t)v18;
      (*v35)(v9, v41);
      v49[9] = v19;
      uint64_t v20 = (objc_class *)type metadata accessor for ActivityAuthorization();
      id v21 = [objc_allocWithZone(v20) init];
      unint64_t v22 = sub_1000522C4();
      uint64_t v44 = v10;
      uint64_t v24 = v23;
      v45[4] = &off_1000F15C8;
      v45[3] = v20;
      v45[0] = v21;
      type metadata accessor for ActivityCapUtility();
      char v25 = (void *)swift_allocObject();
      uint64_t v26 = sub_10000A014((uint64_t)v45, (uint64_t)v20);
      __n128 v27 = __chkstk_darwin(v26);
      uint64_t v29 = (uint64_t *)((char *)v34 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v30 + 16))(v29, v27);
      uint64_t v31 = *v29;
      v25[5] = v20;
      v25[6] = &off_1000F15C8;
      v25[7] = v22;
      long long v25[2] = v31;
      char v25[8] = v24;
      uint64_t v32 = v44;
      sub_100006178((uint64_t)v45);
      v49[10] = v25;
      sub_100034CF8();
      sub_100037D24((uint64_t)v46);
      swift_bridgeObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      uint64_t v10 = v32 - 1;
      if (!v10)
      {
        uint64_t v33 = v50;

        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {

    uint64_t v33 = _swiftEmptyArrayStorage;
LABEL_9:
    swift_bridgeObjectRelease();
    return (uint64_t)v33;
  }
  return result;
}

void *sub_10008704C(uint64_t a1)
{
  uint64_t v2 = sub_100005E5C(&qword_1000FEFE0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CloudChannelSubscription.Demand();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v30 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v26 = (char *)&v24 - v9;
  sub_10008E058(a1, v31);
  uint64_t v10 = v31[1];
  int64_t v11 = v31[3];
  uint64_t v12 = v31[4];
  int64_t v13 = (unint64_t)(v31[2] + 64) >> 6;
  uint64_t v27 = v6;
  uint64_t v29 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t result = (void *)swift_bridgeObjectRetain();
  uint64_t v32 = _swiftEmptyArrayStorage;
  uint64_t v25 = v10;
  while (1)
  {
    if (v12)
    {
      v12 &= v12 - 1;
      goto LABEL_20;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v15 >= v13) {
      goto LABEL_27;
    }
    uint64_t v16 = *(void *)(v10 + 8 * v15);
    int64_t v17 = v11 + 1;
    if (!v16)
    {
      int64_t v17 = v11 + 2;
      if (v11 + 2 >= v13) {
        goto LABEL_27;
      }
      uint64_t v16 = *(void *)(v10 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v11 + 3;
        if (v11 + 3 >= v13) {
          goto LABEL_27;
        }
        uint64_t v16 = *(void *)(v10 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v11 + 4;
          if (v11 + 4 >= v13) {
            goto LABEL_27;
          }
          uint64_t v16 = *(void *)(v10 + 8 * v17);
          if (!v16)
          {
            int64_t v17 = v11 + 5;
            if (v11 + 5 >= v13) {
              goto LABEL_27;
            }
            uint64_t v16 = *(void *)(v10 + 8 * v17);
            if (!v16)
            {
              int64_t v18 = v11 + 6;
              while (v18 < v13)
              {
                uint64_t v16 = *(void *)(v10 + 8 * v18++);
                if (v16)
                {
                  int64_t v17 = v18 - 1;
                  goto LABEL_19;
                }
              }
LABEL_27:
              swift_release();
              return v32;
            }
          }
        }
      }
    }
LABEL_19:
    uint64_t v12 = (v16 - 1) & v16;
    int64_t v11 = v17;
LABEL_20:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    CloudChannelSubscription.Demand.init(key:value:)();
    if (sub_1000082E8((uint64_t)v4, 1, v5) == 1)
    {
      uint64_t result = (void *)sub_10008DFA8((uint64_t)v4, &qword_1000FEFE0);
    }
    else
    {
      unint64_t v19 = *v29;
      uint64_t v20 = v26;
      (*v29)(v26, v4, v5);
      uint64_t v28 = v19;
      v19(v30, v20, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v32 = (void *)sub_100015D68(0, v32[2] + 1, 1, (uint64_t)v32);
      }
      unint64_t v22 = v32[2];
      unint64_t v21 = v32[3];
      uint64_t v10 = v25;
      if (v22 >= v21 >> 1) {
        uint64_t v32 = (void *)sub_100015D68(v21 > 1, v22 + 1, 1, (uint64_t)v32);
      }
      uint64_t v23 = v32;
      _OWORD v32[2] = v22 + 1;
      uint64_t result = (void *)((uint64_t (*)(char *, char *, uint64_t))v28)((char *)v23+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v22, v30, v5);
    }
  }
  __break(1u);
  return result;
}

id sub_1000873DC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)&v6[OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_cancellables] = &_swiftEmptySetSingleton;
  uint64_t v7 = &v6[OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_bundleId];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  uint64_t v8 = OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_activityCapUtility;
  uint64_t v9 = (objc_class *)type metadata accessor for ActivityAuthorization();
  id v10 = objc_allocWithZone(v9);
  int64_t v11 = v6;
  id v12 = [v10 init];
  unint64_t v13 = sub_1000522C4();
  uint64_t v15 = v14;
  v33[3] = v9;
  void v33[4] = &off_1000F15C8;
  v33[0] = v12;
  type metadata accessor for ActivityCapUtility();
  uint64_t v16 = (void *)swift_allocObject();
  sub_10000A014((uint64_t)v33, (uint64_t)v9);
  sub_10000C568();
  __chkstk_darwin(v17);
  sub_1000098F8();
  uint64_t v20 = (uint64_t *)(v19 - v18);
  (*(void (**)(uint64_t))(v21 + 16))(v19 - v18);
  uint64_t v22 = *v20;
  void v16[5] = v9;
  v16[6] = &off_1000F15C8;
  long long v16[2] = v22;
  v16[7] = v13;
  v16[8] = v15;
  sub_100006178((uint64_t)v33);
  *(void *)&v6[v8] = v16;
  *(void *)uint64_t v7 = a5;
  *((void *)v7 + 1) = a6;
  swift_bridgeObjectRelease();
  sub_10002A3E0(a4, (uint64_t)&v11[OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_subscriptionOperation]);

  id v23 = a3;
  id v24 = sub_1000AE848(a1, a2, (uint64_t)v23);
  [v23 setExportedObject:v24];
  id v25 = [self interfaceWithProtocol:&OBJC_PROTOCOL____TtP7sportsd25SportsdXPCDaemon_Protocol_];
  [v23 setExportedInterface:v25];

  sub_10002A60C(a4);
  return v24;
}

uint64_t sub_100087604()
{
  sub_10002A60C(v0 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_subscriptionOperation);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void sub_100087700(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v115 = a5;
  uint64_t v119 = a1;
  uint64_t v120 = a3;
  unint64_t v118 = a2;
  uint64_t v10 = sub_100005E5C(&qword_1000FCC50);
  __chkstk_darwin(v10 - 8);
  uint64_t v116 = (uint64_t)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SportingEventSubscriptionRequest.ContextKey();
  uint64_t v113 = *(void *)(v12 - 8);
  uint64_t v114 = v12;
  __chkstk_darwin(v12);
  uint64_t v112 = (uint64_t)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v111 = (uint64_t)&v104 - v15;
  __chkstk_darwin(v16);
  uint64_t v110 = (uint64_t)&v104 - v17;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v104 - v19;
  uint64_t v21 = type metadata accessor for SportingEventSubscriptionRequest.SubscriptionType();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  id v24 = (char *)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v104 - v26;
  uint64_t v28 = sub_100005E5C(&qword_1000FF010);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v104 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v104 - v32;
  uint64_t v121 = swift_allocObject();
  uint64_t v122 = a7;
  *(void *)(v121 + 16) = a7;
  uint64_t v117 = a6;
  unint64_t v34 = *(void *)(a6 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_bundleId + 8);
  if (!v34) {
    goto LABEL_7;
  }
  uint64_t v35 = *(void *)(a6 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_bundleId);
  uint64_t v36 = HIBYTE(v34) & 0xF;
  if ((v34 & 0x2000000000000000) == 0) {
    uint64_t v36 = v35 & 0xFFFFFFFFFFFFLL;
  }
  if (v36)
  {
    _Block_copy(v122);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    SportingEventSubscriptionRequest.SubscriptionType.init(rawValue:)();
    sub_10008DF48((uint64_t)v33, (uint64_t)v30, &qword_1000FF010);
    if (sub_1000082E8((uint64_t)v30, 1, v21) == 1)
    {
      sub_10008DFA8((uint64_t)v33, &qword_1000FF010);
LABEL_15:
      swift_bridgeObjectRelease();
      if (qword_1000FBDC8 != -1) {
        swift_once();
      }
      uint64_t v45 = type metadata accessor for Logger();
      sub_10000929C(v45, (uint64_t)qword_10010A520);
      swift_bridgeObjectRetain_n();
      uint64_t v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        v123[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v48 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v126 = sub_100017098(v120, a4, v123);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "Tempo /register invalid subscriptionType: %s", v48, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_10002EEB8(1u, 0xD000000000000019, 0x80000001000D29A0);
      uint64_t v49 = (void *)_convertErrorToNSError(_:)();
      uint64_t v50 = (void (**)(const void *, void *))v122;
LABEL_21:
      v50[2](v50, v49);

      swift_errorRelease();
      swift_release();
      uint64_t v43 = v50;
      goto LABEL_13;
    }
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v27, v30, v21);
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v24, v27, v21);
    int v44 = sub_100088478((uint64_t)v24);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
    sub_10008DFA8((uint64_t)v33, &qword_1000FF010);
    if (v44 == 6) {
      goto LABEL_15;
    }
    uint64_t v120 = v35;
    unint64_t v51 = v118;
    unint64_t v52 = HIBYTE(v118) & 0xF;
    if ((v118 & 0x2000000000000000) == 0) {
      unint64_t v52 = v119 & 0xFFFFFFFFFFFFLL;
    }
    if (!v52)
    {
      swift_bridgeObjectRelease();
      if (qword_1000FBDC8 != -1) {
        swift_once();
      }
      uint64_t v57 = type metadata accessor for Logger();
      sub_10000929C(v57, (uint64_t)qword_10010A520);
      uint64_t v58 = Logger.logObject.getter();
      os_log_type_t v59 = static os_log_type_t.error.getter();
      BOOL v60 = os_log_type_enabled(v58, v59);
      uint64_t v50 = (void (**)(const void *, void *))v122;
      if (v60)
      {
        uint64_t v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v61 = 0;
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "Tempo /register missing event canonical id", v61, 2u);
        swift_slowDealloc();
      }

      sub_10002EEB8(1u, 0xD00000000000001ALL, 0x80000001000D29C0);
      uint64_t v49 = (void *)_convertErrorToNSError(_:)();
      goto LABEL_21;
    }
    if (qword_1000FBDB8 != -1) {
      swift_once();
    }
    HIDWORD(v109) = v44;
    uint64_t v53 = type metadata accessor for Logger();
    sub_10000929C(v53, (uint64_t)qword_10010A4F0);
    swift_bridgeObjectRetain_n();
    uint64_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      v123[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v126 = sub_100017098(v119, v51, v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "SportsKitRequestXPCSession: Registering for event '%s'", v56, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v108 = v117 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_subscriptionOperation;
    uint64_t v62 = v113;
    uint64_t v63 = v114;
    uint64_t v64 = *(void (**)(char *, void, uint64_t))(v113 + 104);
    v64(v20, enum case for SportingEventSubscriptionRequest.ContextKey.leagueId(_:), v114);
    uint64_t v65 = (void (*)(uint64_t, void, uint64_t))v64;
    uint64_t v105 = (void (*)(uint64_t, void, uint64_t))v64;
    uint64_t v66 = SportingEventSubscriptionRequest.ContextKey.rawValue.getter();
    uint64_t v68 = v67;
    uint64_t v69 = *(void (**)(char *, uint64_t))(v62 + 8);
    v69(v20, v63);
    uint64_t v70 = v115;
    uint64_t v113 = sub_100090838(v66, v68, v115);
    uint64_t v107 = v71;
    swift_bridgeObjectRelease();
    uint64_t v72 = v110;
    v65(v110, enum case for SportingEventSubscriptionRequest.ContextKey.sportId(_:), v63);
    uint64_t v73 = SportingEventSubscriptionRequest.ContextKey.rawValue.getter();
    uint64_t v75 = v74;
    v69((char *)v72, v63);
    uint64_t v110 = sub_100090838(v73, v75, v70);
    uint64_t v106 = v76;
    swift_bridgeObjectRelease();
    uint64_t v77 = v111;
    uint64_t v78 = v105;
    v105(v111, enum case for SportingEventSubscriptionRequest.ContextKey.source(_:), v63);
    uint64_t v79 = SportingEventSubscriptionRequest.ContextKey.rawValue.getter();
    uint64_t v81 = v80;
    v69((char *)v77, v63);
    uint64_t v111 = sub_100090838(v79, v81, v70);
    uint64_t v83 = v82;
    swift_bridgeObjectRelease();
    uint64_t v84 = v112;
    v78(v112, enum case for SportingEventSubscriptionRequest.ContextKey.leagueAbbreviation(_:), v63);
    uint64_t v85 = SportingEventSubscriptionRequest.ContextKey.rawValue.getter();
    uint64_t v87 = v86;
    v69((char *)v84, v63);
    uint64_t v88 = sub_100090838(v85, v87, v70);
    uint64_t v90 = v89;
    swift_bridgeObjectRelease();
    uint64_t v91 = type metadata accessor for SubscriptionRegisterOperation.PreferredData(0);
    uint64_t v92 = v116;
    sub_1000082C0(v116, 1, 1, v91);
    LOBYTE(v102) = BYTE4(v109);
    LOBYTE(v101) = 0;
    uint64_t v100 = v83;
    uint64_t v93 = v119;
    unint64_t v94 = v118;
    sub_10002966C(v120, v34, v119, v118, v113, v107, v110, v106, v111, v100, v101, v88, v90, v102, v92, 0, 0, v103, v104,
      (uint64_t)v105,
      v106,
      v107,
      v108,
      v109,
      v110,
      v111,
      v112,
      v113,
      v114);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10008DFA8(v92, &qword_1000FCC50);
    uint64_t v95 = v124;
    uint64_t v96 = v125;
    sub_100005EA0(v123, v124);
    uint64_t v126 = (*(uint64_t (**)(uint64_t, uint64_t))(v96 + 8))(v95, v96);
    uint64_t v97 = (void *)swift_allocObject();
    v97[2] = v93;
    v97[3] = v94;
    uint64_t v98 = v121;
    v97[4] = sub_10008E094;
    v97[5] = v98;
    uint64_t v99 = (void *)swift_allocObject();
    v99[2] = v93;
    v99[3] = v94;
    v99[4] = sub_10008E094;
    v99[5] = v98;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    sub_100005E5C(&qword_1000FCEE8);
    sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
    Publisher.sink(receiveCompletion:receiveValue:)();
    swift_release();
    swift_release();
    swift_release();
    sub_100006178((uint64_t)v123);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v43 = (void (**)(const void *, void *))v122;
  }
  else
  {
LABEL_7:
    uint64_t v37 = (void (**)(const void *, void *))v122;
    _Block_copy(v122);
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    sub_10000929C(v38, (uint64_t)qword_10010A520);
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Tempo /register missing process bundle id", v41, 2u);
      swift_slowDealloc();
    }

    sub_10002EEB8(1u, 0xD000000000000019, 0x80000001000D2950);
    uint64_t v42 = (void *)_convertErrorToNSError(_:)();
    v37[2](v37, v42);

    swift_errorRelease();
    swift_release();
    uint64_t v43 = v37;
  }
LABEL_13:
  _Block_release(v43);
}

uint64_t sub_100088478(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SportingEventSubscriptionRequest.SubscriptionType();
  uint64_t v3 = *(void *)(v2 - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(a1, v2);
  if (v4 == enum case for SportingEventSubscriptionRequest.SubscriptionType.liveStatistics(_:)) {
    return 0;
  }
  if (v4 == enum case for SportingEventSubscriptionRequest.SubscriptionType.playByPlay(_:)) {
    return 1;
  }
  if (v4 == enum case for SportingEventSubscriptionRequest.SubscriptionType.tvClockScore(_:)) {
    return 5;
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return 6;
}

uint64_t *sub_100088578(uint64_t *result, uint64_t a2, unint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4 = *result;
  if (*result)
  {
    swift_errorRetain();
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000929C(v8, (uint64_t)qword_10010A520);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315394;
      swift_bridgeObjectRetain();
      sub_100017098(a2, a3, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v11 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v12 = Error.localizedDescription.getter();
      sub_100017098(v12, v13, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Tempo /register failed for id=%s with error=%s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a4(v4);
    swift_errorRelease();
    return (uint64_t *)swift_errorRelease();
  }
  return result;
}

uint64_t sub_1000887E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4(0);
}

void sub_100088948(uint64_t a1, unint64_t a2, uint64_t a3, void (**a4)(void, void))
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a4;
  unint64_t v9 = *(void *)(a3 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_bundleId + 8);
  if (!v9) {
    goto LABEL_9;
  }
  uint64_t v10 = *(void *)(a3 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_bundleId);
  uint64_t v11 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    _Block_copy(a4);
    uint64_t v12 = qword_1000FBDB8;
    swift_bridgeObjectRetain();
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000929C(v13, (uint64_t)qword_10010A4F0);
    swift_bridgeObjectRetain_n();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v25 = v8;
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      v26[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      swift_bridgeObjectRetain();
      sub_100017098(a1, a2, v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "SportsKitRequestXPCSession: Unregistering for event '%s'", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v8 = v25;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_100029A38(v10, v9, a1, a2, v26);
    swift_bridgeObjectRelease();
    uint64_t v22 = v27;
    uint64_t v23 = v28;
    sub_100005EA0(v26, v27);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
    id v24 = (void *)swift_allocObject();
    void v24[2] = a1;
    v24[3] = a2;
    v24[4] = sub_10008E094;
    void v24[5] = v8;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100005E5C(&qword_1000FCEE8);
    sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
    Publisher.sink(receiveCompletion:receiveValue:)();
    swift_release();
    swift_release();
    sub_100006178((uint64_t)v26);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    swift_release();
    _Block_release(a4);
  }
  else
  {
LABEL_9:
    _Block_copy(a4);
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000929C(v17, (uint64_t)qword_10010A520);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Tempo /unregister missing process bundle id", v20, 2u);
      swift_slowDealloc();
    }

    sub_10002EEB8(1u, 0xD000000000000019, 0x80000001000D2950);
    uint64_t v21 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void *))a4)[2](a4, v21);

    swift_errorRelease();
    swift_release();
    _Block_release(a4);
  }
}

uint64_t sub_100088E34(uint64_t *a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5 = *a1;
  if (!*a1) {
    return a4(0);
  }
  swift_errorRetain();
  if (qword_1000FBDC8 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000929C(v8, (uint64_t)qword_10010A520);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  unint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    swift_bridgeObjectRetain();
    sub_100017098(a2, a3, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v12 = Error.localizedDescription.getter();
    sub_100017098(v12, v13, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Tempo /unregister failed for id=%s - %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_errorRetain();
  a4(v5);
  swift_errorRelease();
  return swift_errorRelease();
}

void sub_100089144(uint64_t a1, char *a2, void (**a3)(void, void))
{
  uint64_t v6 = sub_100005E5C(&qword_1000FDEC0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100005E5C(&qword_1000FDEC8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  uint64_t v50 = a2;
  uint64_t v15 = (uint64_t *)&a2[OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_bundleId];
  unint64_t v16 = *(void *)&a2[OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_bundleId + 8];
  if (!v16) {
    goto LABEL_9;
  }
  uint64_t v17 = *v15;
  uint64_t v18 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0) {
    uint64_t v18 = v17 & 0xFFFFFFFFFFFFLL;
  }
  if (v18)
  {
    uint64_t v45 = v17;
    uint64_t v49 = v13;
    _Block_copy(a3);
    uint64_t v19 = qword_1000FBDB8;
    swift_bridgeObjectRetain();
    if (v19 != -1) {
      swift_once();
    }
    uint64_t v46 = v9;
    uint64_t v47 = v7;
    uint64_t v48 = v6;
    uint64_t v20 = type metadata accessor for Logger();
    sub_10000929C(v20, (uint64_t)qword_10010A4F0);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.debug.getter();
    int v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      int v44 = v23;
      id v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      v52[0] = v43;
      *(_DWORD *)id v24 = 136315138;
      uint64_t v41 = v24 + 4;
      uint64_t v42 = v24;
      swift_bridgeObjectRetain();
      uint64_t v25 = v10;
      uint64_t v26 = v14;
      uint64_t v27 = Array.description.getter();
      unint64_t v29 = v28;
      swift_bridgeObjectRelease();
      uint64_t v30 = v27;
      uint64_t v14 = v26;
      uint64_t v10 = v25;
      uint64_t v51 = sub_100017098(v30, v29, v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v44, "SportsKitRequestXPCSession: Unregistering for events %s", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain();
    uint64_t v50 = v50;
    uint64_t v36 = sub_100086C20(a1, v50, v45, v16);
    swift_bridgeObjectRelease();
    v52[0] = v36;
    sub_100005E5C(&qword_1000FCEE8);
    sub_100005E5C(&qword_1000FDEE0);
    sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
    sub_10000953C(&qword_1000FDEE8, &qword_1000FDEE0);
    uint64_t v37 = v46;
    Publishers.MergeMany.init<A>(_:)();
    sub_10000953C(&qword_1000FDEF0, &qword_1000FDEC0);
    uint64_t v38 = v48;
    uint64_t v39 = v49;
    Publisher.collect()();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v38);
    os_log_type_t v40 = (void *)swift_allocObject();
    v40[2] = sub_10008E094;
    v40[3] = v14;
    v40[4] = a1;
    sub_10000953C(&qword_1000FDEF8, &qword_1000FDEC8);
    swift_bridgeObjectRetain();
    swift_retain();
    Publisher.sink(receiveCompletion:receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v39, v10);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    swift_release();
    _Block_release(a3);
  }
  else
  {
LABEL_9:
    _Block_copy(a3);
    if (qword_1000FBDC8 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    sub_10000929C(v31, (uint64_t)qword_10010A520);
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      unint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Tempo /unregister missing process bundle id", v34, 2u);
      swift_slowDealloc();
    }

    sub_10002EEB8(1u, 0xD000000000000019, 0x80000001000D2950);
    uint64_t v35 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void *))a3)[2](a3, v35);

    swift_errorRelease();
    swift_release();
    _Block_release(a3);
  }
}

uint64_t sub_100089830(uint64_t result, uint64_t (*a2)(id), uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)result;
  uint64_t v6 = *(void *)(*(void *)result + 16);
  if (!v6) {
    return a2(0);
  }
  if (*(unsigned char *)(v5 + 32) != 1)
  {
LABEL_9:
    _StringGuts.grow(_:)(46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100086A44(0, v6, a4, v5);
    uint64_t v10 = Array.description.getter();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v13._uint64_t countAndFlagsBits = v10;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    id v14 = sub_10002EEB8(2u, 0xD00000000000002CLL, 0x80000001000D2970);
    swift_bridgeObjectRelease();
    a2(v14);
    return swift_errorRelease();
  }
  if (v6 == 1) {
    return a2(0);
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v9 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    if (*(unsigned char *)(v5 + i) != 1) {
      goto LABEL_9;
    }
    if (v9 == v6) {
      return a2(0);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100089A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1000FBDB8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000929C(v6, (uint64_t)qword_10010A4F0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "SportsKitRequestXPCSession: Unsubscribing from all events", v9, 2u);
    sub_10001C2C8();
  }

  uint64_t v10 = v3 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_subscriptionOperation;
  sub_10008DED8(v3 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_subscriptionOperation, (uint64_t)v13);
  sub_10008DED8(v10 + 96, (uint64_t)&v14);
  sub_1000379DC();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  swift_retain();
  sub_100005E5C(&qword_1000FCEE8);
  sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
  Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  sub_10008DE38((uint64_t)v13);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_100089C3C(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  if (!*a1) {
    return a2(0);
  }
  swift_errorRetain();
  if (qword_1000FBDC8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000929C(v4, (uint64_t)qword_10010A520);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = Error.localizedDescription.getter();
    sub_100017098(v8, v9, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Tempo /unregister all failed - %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_errorRetain();
  a2(v3);
  swift_errorRelease();
  return swift_errorRelease();
}

uint64_t sub_100089EE4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t refreshed = type metadata accessor for SportsManager.RefreshOptions();
  sub_10000C568();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1000098F8();
  uint64_t v13 = v12 - v11;
  if (qword_1000FBDB8 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000929C(v14, (uint64_t)qword_10010A4F0);
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v24))
  {
    uint64_t v23 = v13;
    uint64_t v16 = swift_slowAlloc();
    v27[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    swift_bridgeObjectRetain();
    sub_100017098(a1, a2, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v17 = String.init<A>(reflecting:)();
    sub_100017098(v17, v18, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v24, "SportsKitRequestXPCSession: Refreshing event '%s' with options %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    sub_10001C2C8();
    uint64_t v13 = v23;
    sub_10001C2C8();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  SportsManager.RefreshOptions.init(rawValue:)();
  sub_100029C44();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, refreshed);
  uint64_t v19 = v28;
  uint64_t v20 = v29;
  sub_100005EA0(v27, v28);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a4;
  *(void *)(v21 + 24) = a5;
  swift_retain();
  sub_100005E5C(&qword_1000FCEE8);
  sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
  Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  sub_100006178((uint64_t)v27);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

void sub_10008A300()
{
  if (qword_1000FBE38 != -1) {
    swift_once();
  }
  sub_1000BCBA8();
}

void sub_10008A394(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (**a6)(void, void))
{
  uint64_t v68 = a4;
  uint64_t ActivityOperation = type metadata accessor for SubscriptionCreateActivityOperation(0);
  __chkstk_darwin(ActivityOperation - 8);
  uint64_t v66 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100005E5C(&qword_1000FC938);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v59 - v20;
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = a6;
  uint64_t v67 = a5;
  os_log_type_t v22 = (uint64_t *)(a5 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_bundleId);
  unint64_t v23 = *(void *)(a5 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_bundleId + 8);
  if (!v23) {
    goto LABEL_15;
  }
  uint64_t v24 = *v22;
  uint64_t v25 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0) {
    uint64_t v25 = v24 & 0xFFFFFFFFFFFFLL;
  }
  if (v25)
  {
    uint64_t v64 = a1;
    uint64_t v26 = v24;
    swift_bridgeObjectRetain_n();
    _Block_copy(a6);
    unint64_t v65 = v26;
    v78._uint64_t countAndFlagsBits = v26;
    v78._object = (void *)v23;
    unsigned __int8 v27 = sub_100052DB4(v78);
    if (v27 == 4) {
      goto LABEL_9;
    }
    unsigned __int8 v28 = v27;
    if (qword_1000FBD88 != -1) {
      swift_once();
    }
    if ((sub_1000514D8(v28, qword_10010A4C8) & 1) == 0)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      unint64_t v65 = sub_1000522C4();
      unint64_t v23 = v29;
    }
    sub_10008DF48(v68, (uint64_t)v14, &qword_1000FC938);
    if (sub_1000082E8((uint64_t)v14, 1, v15) == 1)
    {
      sub_10008DFA8((uint64_t)v14, &qword_1000FC938);
      if (qword_1000FBDB8 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      sub_10000929C(v30, (uint64_t)qword_10010A4F0);
      swift_bridgeObjectRetain_n();
      uint64_t v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v31, v32))
      {
        os_log_type_t v33 = (uint8_t *)swift_slowAlloc();
        v70[0] = swift_slowAlloc();
        *(_DWORD *)os_log_type_t v33 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v71 = sub_100017098(v64, a2, v70);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "SportsKitRequestXPCSession: Creating activity for event %s", v33, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
      if (qword_1000FBDB8 != -1) {
        swift_once();
      }
      uint64_t v40 = type metadata accessor for Logger();
      sub_10000929C(v40, (uint64_t)qword_10010A4F0);
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
      swift_bridgeObjectRetain_n();
      uint64_t v41 = Logger.logObject.getter();
      os_log_type_t v42 = static os_log_type_t.debug.getter();
      int v43 = v42;
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v44 = swift_slowAlloc();
        HIDWORD(v62) = v43;
        uint64_t v45 = v44;
        uint64_t v63 = swift_slowAlloc();
        v70[0] = v63;
        *(_DWORD *)uint64_t v45 = 136315394;
        os_log_t v61 = v41;
        swift_bridgeObjectRetain();
        uint64_t v71 = sub_100017098(v64, a2, v70);
        BOOL v60 = (void (*)(char *, uint64_t))v72;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v45 + 12) = 2080;
        uint64_t v59 = v45 + 14;
        sub_10008DDE8(&qword_1000FF008, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v71 = sub_100017098(v46, v47, v70);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        BOOL v60 = *(void (**)(char *, uint64_t))(v16 + 8);
        v60(v18, v15);
        os_log_t v48 = v61;
        _os_log_impl((void *)&_mh_execute_header, v61, BYTE4(v62), "SportsKitRequestXPCSession: Scheduling activity for event %s, scheduled date: %s", (uint8_t *)v45, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v60(v21, v15);
      }
      else
      {

        uint64_t v49 = *(void (**)(char *, uint64_t))(v16 + 8);
        v49(v18, v15);
        swift_bridgeObjectRelease_n();
        v49(v21, v15);
      }
    }
    uint64_t v50 = v67;
    if (sub_10007AD1C()) {
      char v51 = 1;
    }
    else {
      char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    sub_10002A3E0(v50 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_subscriptionOperation, (uint64_t)v70);
    uint64_t v71 = 0;
    v72[0] = 0;
    v72[1] = 0;
    v72[2] = 1;
    long long v73 = 0u;
    long long v74 = 0u;
    long long v75 = 0u;
    long long v76 = 0u;
    uint64_t v77 = 0;
    LOBYTE(v58) = 0;
    uint64_t v52 = v66;
    uint64_t v53 = v64;
    sub_100029F10(v64, a2, v51 & 1, (uint64_t)&v71, 0, 1, 0, 0, v58, v65, v23, v68, v59, (uint64_t)v60, (uint64_t)v61, v62, v63, v64, v65,
      v66,
      v67,
      v68,
      v69,
      v70[0]);
    swift_bridgeObjectRelease();
    sub_10002A60C((uint64_t)v70);
    sub_1000A2D3C(0);
    uint64_t v55 = v54;
    sub_10004CC9C(v52);
    v70[0] = v55;
    uint64_t v56 = (void *)swift_allocObject();
    v56[2] = v53;
    uint64_t v56[3] = a2;
    uint64_t v57 = v69;
    v56[4] = sub_10008E094;
    v56[5] = v57;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100005E5C(&qword_1000FCEE8);
    sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
    Publisher.sink(receiveCompletion:receiveValue:)();
    swift_release();
    swift_release();
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
  }
  else
  {
LABEL_15:
    _Block_copy(a6);
    if (qword_1000FBDB8 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_10000929C(v34, (uint64_t)qword_10010A4F0);
    swift_bridgeObjectRetain_n();
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = a1;
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      v70[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_100017098(v37, a2, v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "SportsKitRequestXPCSession: Creating activity for event %s, missing process bundle id", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_10002EEB8(1u, 0xD000000000000019, 0x80000001000D2950);
    uint64_t v39 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void *))a6)[2](a6, v39);

    swift_errorRelease();
  }
  swift_release();
  _Block_release(a6);
}

void sub_10008AE0C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = sub_100005E5C(&qword_1000FC938);
  __chkstk_darwin(v10 - 8);
  sub_1000098F8();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for Date();
  sub_1000082C0(v13, 1, 1, v14);
  _Block_copy(a5);
  sub_10008A394(a1, a2, a3, v13, a4, (void (**)(void, void))a5);
  sub_10008DFA8(v13, &qword_1000FC938);
  _Block_release(a5);
}

uint64_t sub_10008B0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_100005E5C(&qword_1000FC940);
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_10008E1C4();
  sub_10008E244(v12);
  uint64_t v13 = qword_1000FBD90;
  swift_bridgeObjectRetain();
  id v14 = v5;
  swift_retain();
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_10010A4D0;
  uint64_t v16 = sub_10008DDE8(&qword_1000FDD28, (void (*)(uint64_t))type metadata accessor for LiveActivityActor);
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = v15;
  v17[3] = v16;
  v17[4] = a1;
  v17[5] = a2;
  v17[6] = v14;
  v17[7] = a4;
  v17[8] = a5;
  swift_retain();
  sub_100051F94(v6, (uint64_t)&unk_1000FF000, (uint64_t)v17);
  return swift_release();
}

void sub_10008B270(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_10008B2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[33] = a7;
  v8[34] = a8;
  v8[31] = a5;
  v8[32] = a6;
  v8[30] = a4;
  if (qword_1000FBD90 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_10010A4D0;
  return _swift_task_switch(sub_10008B374, v9, 0);
}

uint64_t sub_10008B374()
{
  uint64_t v16 = v0;
  if (qword_1000FBDB8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000929C(v1, (uint64_t)qword_10010A4F0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[31];
  if (v4)
  {
    uint64_t v6 = v0[30];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_100017098(v6, v5, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "SportsKitRequestXPCSession: Destroying activity for event %s", v7, 0xCu);
    swift_arrayDestroy();
    sub_10001C2C8();
    sub_10001C2C8();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = v0[33];
  uint64_t v8 = v0[34];
  uint64_t v10 = v0[31];
  uint64_t v11 = v0[30];
  sub_10002A3E0(v0[32] + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_subscriptionOperation, (uint64_t)(v0 + 2));
  v0[25] = 0xD000000000000011;
  v0[26] = 0x80000001000D0580;
  v0[27] = v11;
  v0[28] = v10;
  swift_bridgeObjectRetain();
  v0[29] = sub_1000B97FC();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v11;
  uint64_t v12[3] = v10;
  v12[4] = v9;
  v12[5] = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100005E5C(&qword_1000FCEE8);
  sub_10000953C((unint64_t *)&qword_1000FCEF0, &qword_1000FCEE8);
  Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  sub_10008DD60((uint64_t)(v0 + 2));
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  sub_10001C2E0();
  return v13();
}

uint64_t sub_10008B69C(uint64_t *a1, uint64_t a2, unint64_t a3, void (*a4)(void), uint64_t a5, const char *a6, const char *a7)
{
  uint64_t v10 = *a1;
  if (*a1)
  {
    swift_errorRetain();
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000929C(v12, (uint64_t)qword_10010A568);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v24 = a4;
      uint64_t v15 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315394;
      swift_bridgeObjectRetain();
      sub_100017098(a2, a3, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v16 = Error.localizedDescription.getter();
      sub_100017098(v16, v17, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, a6, (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      sub_10001C2C8();
      a4 = v24;
      sub_10001C2C8();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_errorRetain();
    a4(v10);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10000929C(v19, (uint64_t)qword_10010A568);
    swift_bridgeObjectRetain_n();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v22 = 136315138;
      swift_bridgeObjectRetain();
      sub_100017098(a2, a3, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, a7, v22, 0xCu);
      swift_arrayDestroy();
      sub_10001C2C8();
      sub_10001C2C8();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return ((uint64_t (*)(void))a4)(0);
  }
}

uint64_t sub_10008BB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10008BB4C(a1, a2, a3, a4, a5);
}

uint64_t sub_10008BB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_100005E5C(&qword_1000FC940);
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10008E1C4();
  sub_10008E244(v11);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  uint64_t v12[3] = 0;
  v12[4] = a1;
  v12[5] = a2;
  v12[6] = a4;
  v12[7] = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100051F94(v5, (uint64_t)&unk_1000FEFF0, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_10008BC54(void *a1, int a2, int a3, uint64_t a4, void *aBlock, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = _Block_copy(aBlock);
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v12;
  id v17 = a1;
  a8(v13, v15, a4, a7, v16);

  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_10008BD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  void v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  return _swift_task_switch(sub_10008BD40, 0, 0);
}

uint64_t sub_10008BD40()
{
  uint64_t v11 = v0;
  if (qword_1000FBDB8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000929C(v1, (uint64_t)qword_10010A4F0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[4];
  if (v4)
  {
    uint64_t v6 = v0[3];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_100017098(v6, v5, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "SportsKitRequestXPCSession: Checking activity for event %s", v7, 0xCu);
    swift_arrayDestroy();
    sub_10001C2C8();
    sub_10001C2C8();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (qword_1000FBDA0 != -1) {
    swift_once();
  }
  v0[7] = qword_10010A4E0;
  if (qword_1000FBD90 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_10010A4D0;
  return _swift_task_switch(sub_10008BF98, v8, 0);
}

uint64_t sub_10008BF98()
{
  sub_10001C234();
  *(unsigned char *)(v0 + 64) = sub_10005A688();
  sub_10001CAE8();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10008C004()
{
  sub_10001C234();
  (*(void (**)(void))(v0 + 40))(*(unsigned __int8 *)(v0 + 64));
  sub_10001C2E0();
  return v1();
}

void sub_10008C11C(uint64_t a1, void (**a2)(void, void))
{
  if (qword_1000FBDA0 != -1) {
    swift_once();
  }
  unint64_t v3 = sub_1000522C4();
  char v5 = sub_100056CB8(v3, v4);
  swift_bridgeObjectRelease();
  a2[2](a2, v5 & 1);

  _Block_release(a2);
}

uint64_t sub_10008C220(uint64_t a1)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = v1;
  return sub_10008E12C((uint64_t)sub_10008C238);
}

uint64_t sub_10008C238()
{
  sub_10006179C();
  sub_10001C690();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = sub_10008704C(*(void *)(v0 + 96));
  *(void *)(v0 + 112) = v2;
  *(void *)(v0 + 56) = v2;
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 64) = 0;
  *(unsigned char *)(v0 + 88) = 0;
  sub_10008E0EC((void *)(v1 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_subscriptionOperation));
  sub_1000438A0();
  sub_10008E1B0();
  v3();
  sub_10008E224();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10008C328;
  sub_10001C898();
  return sub_10000FF74();
}

uint64_t sub_10008C328()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v3 = v2;
  sub_10008E1EC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_100046EF8();
  *uint64_t v6 = v5;
  *(void *)(v3 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    sub_10001CAE8();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100006178(v3 + 16);
    uint64_t v10 = *(uint64_t (**)(void))(v5 + 8);
    return v10();
  }
}

uint64_t sub_10008C440()
{
  sub_10001C234();
  sub_100006178(v0 + 16);
  sub_10001C2E0();
  return v1();
}

uint64_t sub_10008C524(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  sub_100005E5C(&qword_1000FC7A0);
  uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  void v3[4] = v5;
  a3;
  uint64_t v6 = (void *)swift_task_alloc();
  v3[5] = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_10008C610;
  return sub_10008C220(v5);
}

uint64_t sub_10008C610()
{
  sub_10001C690();
  sub_10008E138();
  uint64_t v4 = v3;
  sub_100046EF8();
  *uint64_t v5 = v4;
  uint64_t v6 = *(void **)(v1 + 16);
  uint64_t v7 = *v2;
  *uint64_t v5 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v8 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    uint64_t v9 = sub_10008E210();
    v10(v9);
  }
  else
  {
    uint64_t v11 = sub_10008E1FC();
    v12(v11);
  }
  _Block_release(*(const void **)(v4 + 24));
  uint64_t v13 = *(uint64_t (**)(void))(v7 + 8);
  return v13();
}

uint64_t sub_10008C764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005E5C(&qword_1000FC940);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  sub_1000082C0((uint64_t)v6, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = 0;
  uint64_t v8[3] = 0;
  v8[4] = a1;
  v8[5] = a2;
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = 0;
  void v9[3] = 0;
  v9[4] = &unk_1000FEF80;
  uint64_t v9[5] = v8;
  sub_10008D4D0((uint64_t)v6, (uint64_t)&unk_1000FEF90, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_10008C868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[15] = a4;
  v5[16] = v4;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  return sub_10008E12C((uint64_t)sub_10008C888);
}

uint64_t sub_10008C888()
{
  sub_10006179C();
  sub_10001C690();
  sub_10008E170();
  *(unsigned char *)(v0 + 88) = 1;
  sub_10008E0EC((void *)(v1 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_subscriptionOperation));
  sub_1000438A0();
  sub_10008E1B0();
  v2();
  sub_10008E224();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10008C95C;
  sub_10001C898();
  return sub_10000FF74();
}

uint64_t sub_10008C95C()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v3 = v2;
  sub_10008E1EC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_100046EF8();
  *uint64_t v6 = v5;
  *(void *)(v3 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_10001CAE8();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    sub_100006178(v3 + 16);
    sub_10001C2E0();
    return v10();
  }
}

uint64_t sub_10008CA78(int a1, int a2, void *aBlock, void *a4)
{
  _OWORD v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  v4[4] = v7;
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;
  v4[5] = v10;
  a4;
  uint64_t v12 = (void *)swift_task_alloc();
  v4[6] = v12;
  *uint64_t v12 = v4;
  v12[1] = sub_10008E0C8;
  return sub_10008C868(v6, v8, v9, v11);
}

uint64_t sub_10008CB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[15] = a4;
  v5[16] = v4;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  return sub_10008E12C((uint64_t)sub_10008CB94);
}

uint64_t sub_10008CB94()
{
  sub_10006179C();
  sub_10001C690();
  sub_10008E170();
  *(unsigned char *)(v0 + 88) = 2;
  sub_10008E0EC((void *)(v1 + OBJC_IVAR____TtC7sportsd26SportsKitRequestXPCSession_subscriptionOperation));
  sub_1000438A0();
  sub_10008E1B0();
  v2();
  sub_10008E224();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10008CC68;
  sub_10001C898();
  return sub_10000FF74();
}

uint64_t sub_10008CC68()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v3 = v2;
  sub_10008E1EC();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_100046EF8();
  *uint64_t v6 = v5;
  *(void *)(v3 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_10001CAE8();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    sub_100006178(v3 + 16);
    sub_10001C2E0();
    return v10();
  }
}

uint64_t sub_10008CD64()
{
  sub_10001C234();
  sub_100006178(v0 + 16);
  sub_10001C2E0();
  return v1();
}

uint64_t sub_10008CDE0(void *a1, int a2, void *a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = _Block_copy(aBlock);
  sub_10008E160();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a3;
  uint64_t v12[3] = a4;
  v12[4] = v11;
  v12[5] = a1;
  id v13 = a3;
  id v14 = a4;
  id v15 = a1;

  return sub_10008C764(a7, (uint64_t)v12);
}

uint64_t type metadata accessor for SportsKitRequestXPCSession()
{
  return self;
}

uint64_t sub_10008CE88(int a1, int a2, void *aBlock, void *a4)
{
  _OWORD v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  v4[4] = v7;
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;
  v4[5] = v10;
  a4;
  uint64_t v12 = (void *)swift_task_alloc();
  v4[6] = v12;
  *uint64_t v12 = v4;
  v12[1] = sub_10008CF84;
  return sub_10008CB74(v6, v8, v9, v11);
}

uint64_t sub_10008CF84()
{
  sub_10008E138();
  uint64_t v4 = v3;
  sub_100046EF8();
  *uint64_t v5 = v4;
  uint64_t v6 = *(void **)(v1 + 16);
  uint64_t v7 = *v2;
  *uint64_t v5 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v8 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    uint64_t v9 = sub_10008E210();
    v10(v9);
  }
  else
  {
    uint64_t v11 = sub_10008E1FC();
    v12(v11);
  }
  _Block_release(*(const void **)(v4 + 24));
  id v13 = *(uint64_t (**)(void))(v7 + 8);
  return v13();
}

uint64_t sub_10008D104()
{
  sub_10006179C();
  sub_10001C690();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10008E154(v0);
  void *v1 = v2;
  v1[1] = sub_100046C4C;
  sub_10008E0CC();
  sub_10001C898();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10008D19C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_100046ECC;
  return v6();
}

uint64_t sub_10008D26C()
{
  sub_10006179C();
  sub_10001C690();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10008E154(v0);
  void *v1 = v2;
  v1[1] = sub_100046ECC;
  sub_10008E0CC();
  sub_10001C898();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10008D304(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_100046ECC;
  return v7();
}

uint64_t sub_10008D3D4()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v0 = sub_10008E160();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10008D40C()
{
  sub_10001C690();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = (int *)v0[4];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_10008E154(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_100046ECC;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1000FEF88 + dword_1000FEF88);
  return v9(v2, v3, v4, v5);
}

uint64_t sub_10008D4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  if (sub_1000082E8(a1, 1, v6) == 1)
  {
    sub_10008DFA8(a1, &qword_1000FC940);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_10008D640(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10008D71C;
  return v6(a1);
}

uint64_t sub_10008D71C()
{
  sub_10001C234();
  sub_10001C208();
  uint64_t v1 = *v0;
  sub_100046EF8();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_10008D7E4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008D81C(uint64_t a1)
{
  uint64_t v3 = *(int **)(v1 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10008E154(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_100046C4C;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000FEF98 + dword_1000FEF98);
  return v7(a1, v3);
}

uint64_t sub_10008D8D4()
{
  _Block_release(*(const void **)(v0 + 32));
  uint64_t v1 = sub_10008E160();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10008D91C()
{
  sub_10006179C();
  sub_10001C690();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_10008E154(v0);
  void *v1 = v2;
  v1[1] = sub_100046ECC;
  sub_10008E0CC();
  sub_10001C898();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10008D9B4()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10008D9FC()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (void *)v0[3];
  uint64_t v3 = (void *)v0[4];
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_10008E154(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_100046ECC;
  uint64_t v7 = (uint64_t (*)(int, void *, void *))((char *)&dword_1000FEFC8 + dword_1000FEFC8);
  return v7(v1, v2, v3);
}

uint64_t sub_10008DAB0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10008DAE8(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_10008DB00()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10008DB48()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_10008E154(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_100046ECC;
  uint64_t v5 = sub_10008E190();
  return sub_10008BD1C(v5, v6, v7, v8, v9, v10, v1);
}

void sub_10008DC00(uint64_t a1)
{
  sub_10008B270(a1, *(void *)(v1 + 16));
}

uint64_t sub_10008DC1C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10008DC6C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_10008E154(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_100046ECC;
  uint64_t v6 = sub_10008E190();
  return sub_10008B2D4(v6, v7, v8, v9, v10, v11, v1, v2);
}

uint64_t sub_10008DD30(uint64_t *a1)
{
  return sub_10008B69C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32), *(void *)(v1 + 40), "Failed to destroy activity for canonicalId: %s - %s", "Activity destroyed for canonical ID: %s");
}

uint64_t sub_10008DD60(uint64_t a1)
{
  return a1;
}

uint64_t sub_10008DDB8(uint64_t *a1)
{
  return sub_10008B69C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32), *(void *)(v1 + 40), "Failed to create activity for canonical ID: %s - %s", "Activity created/scheduled for canonical ID: %s");
}

uint64_t sub_10008DDE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008DE30(uint64_t *a1)
{
  return sub_100089C3C(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_10008DE38(uint64_t a1)
{
  return a1;
}

uint64_t sub_10008DE8C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10008DECC(uint64_t a1)
{
  return sub_100089830(a1, *(uint64_t (**)(id))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10008DED8(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  sub_1000438A0();
  (*v3)(a2);
  return a2;
}

uint64_t sub_10008DF3C(uint64_t *a1)
{
  return sub_100088E34(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_10008DF48(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100005E5C(a3);
  sub_1000438A0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10008DFA8(uint64_t a1, uint64_t *a2)
{
  sub_100005E5C(a2);
  sub_1000438A0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t *sub_10008E004(uint64_t *a1)
{
  return sub_100088578(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32));
}

uint64_t sub_10008E014()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v0 = sub_10008E160();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10008E04C(uint64_t a1)
{
  return sub_1000887E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(void))(v1 + 32));
}

uint64_t sub_10008E058@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_10008E0CC()
{
  return v0;
}

uint64_t *sub_10008E0EC(void *a1)
{
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  sub_100005EA0(a1, v4);
  *(void *)(v2 + 40) = v4;
  *(void *)(v2 + 48) = *(void *)(v3 + 8);
  return sub_100029BE0(v1);
}

uint64_t sub_10008E12C(uint64_t a1)
{
  return _swift_task_switch(a1, 0, 0);
}

uint64_t sub_10008E154(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_10008E160()
{
  return v0;
}

__n128 sub_10008E170()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 112);
  __n128 result = *(__n128 *)(v0 + 96);
  *(__n128 *)(v0 + 56) = result;
  *(void *)(v0 + 72) = v2;
  *(void *)(v0 + 80) = v1;
  return result;
}

uint64_t sub_10008E190()
{
  return v0;
}

uint64_t sub_10008E1C4()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_10008E1FC()
{
  return v0;
}

uint64_t sub_10008E210()
{
  return v0;
}

void *sub_10008E224()
{
  return sub_100005EA0(v0, *(void *)(v1 + 40));
}

uint64_t sub_10008E244(uint64_t a1)
{
  return sub_1000082C0(v1, 1, 1, a1);
}

uint64_t sub_10008E264()
{
  type metadata accessor for WatchlistSuppressionActor();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  qword_10010A5B8 = v0;
  return result;
}

uint64_t *sub_10008E2A0()
{
  if (qword_1000FBE00 != -1) {
    swift_once();
  }
  return &qword_10010A5B8;
}

uint64_t type metadata accessor for WatchlistSuppressionActor()
{
  return self;
}

uint64_t sub_10008E310()
{
  sub_10008E2A0();

  return swift_retain();
}

uint64_t sub_10008E340(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for WatchlistSuppressionActor();

  return static GlobalActor.sharedUnownedExecutor.getter(v3, a2);
}

unint64_t sub_10008E378()
{
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  sub_10009011C();
  v0._uint64_t countAndFlagsBits = Error.localizedDescription.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  return 0xD000000000000013;
}

unint64_t sub_10008E40C()
{
  return sub_10008E378();
}

unint64_t sub_10008E420(char a1)
{
  if (a1) {
    return 0xD000000000000017;
  }
  else {
    return 0xD000000000000020;
  }
}

unint64_t sub_10008E45C()
{
  return sub_10008E420(*v0);
}

void *sub_10008E464()
{
  type metadata accessor for WatchlistSuppressNotificationsXPCConnectionManager();
  swift_allocObject();
  uint64_t result = sub_10008E4A0();
  qword_10010A5C0 = (uint64_t)result;
  return result;
}

void *sub_10008E4A0()
{
  v0[2] = 0;
  type metadata accessor for PersistentStore();
  v0[3] = PersistentStore.__allocating_init()();
  swift_retain();
  uint64_t v1 = dispatch thunk of PersistentStore.retrieveSuppressionTally()();
  swift_release();
  v0[4] = v1;
  return v0;
}

void sub_10008E500(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008FB80();
  if (!v4) {
    goto LABEL_4;
  }
  uint64_t v5 = v4;
  uint64_t v19 = sub_10008E768;
  uint64_t v20 = 0;
  uint64_t v15 = _NSConcreteStackBlock;
  uint64_t v16 = 1107296256;
  id v17 = sub_10008E934;
  unint64_t v18 = &unk_1000F4490;
  uint64_t v6 = _Block_copy(&v15);
  swift_release();
  id v7 = [v5 remoteObjectProxyWithErrorHandler:v6];
  _Block_release(v6);

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100005E5C(&qword_1000FF1E0);
  if (swift_dynamicCast())
  {
    uint64_t v8 = v15;
    NSString v9 = String._bridgeToObjectiveC()();
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = sub_100041548;
    void v11[3] = 0;
    v11[4] = v10;
    void v11[5] = a1;
    v11[6] = a2;
    uint64_t v19 = sub_100090664;
    uint64_t v20 = v11;
    uint64_t v15 = _NSConcreteStackBlock;
    uint64_t v16 = 1107296256;
    id v17 = sub_10008EED0;
    unint64_t v18 = &unk_1000F44E0;
    uint64_t v12 = _Block_copy(&v15);
    swift_bridgeObjectRetain();
    swift_release();
    [v8 suppressNotificationsFor:v9 completion:v12];
    _Block_release(v12);
    swift_unknownObjectRelease();
  }
  else
  {
LABEL_4:
    sub_10009016C();
    uint64_t v13 = sub_100090708();
    *uint64_t v14 = 0;
    sub_100041548(v13);
    swift_errorRelease();
  }
}

void sub_10008E768(uint64_t a1)
{
  if (qword_1000FBDB8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000929C(v2, (uint64_t)qword_10010A4F0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_getErrorValue();
    uint64_t v6 = Error.localizedDescription.getter();
    sub_100017098(v6, v7, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Watchlist XPC Error: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_100041548(a1);
}

void sub_10008E934(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_10008E99C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v61 = a6;
  uint64_t v10 = type metadata accessor for Date();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100005E5C(&qword_1000FF1D8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v18 = (char *)&v52 - v17;
  __chkstk_darwin(v19);
  os_log_type_t v21 = (char *)&v52 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v52 - v23;
  uint64_t v25 = type metadata accessor for DatedSubscribers();
  __chkstk_darwin(v25);
  __n128 v31 = __chkstk_darwin(v26);
  if (a1) {
    return ((uint64_t (*)(uint64_t, __n128))a2)(a1, v31);
  }
  uint64_t v55 = v18;
  uint64_t v56 = v12;
  uint64_t v53 = v30;
  uint64_t v54 = v15;
  uint64_t v59 = a5;
  uint64_t v60 = v29;
  uint64_t v33 = v27;
  uint64_t v57 = (char *)&v52 - v28;
  uint64_t v58 = a3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v34 = result;
    uint64_t v35 = (uint64_t *)(result + 32);
    swift_beginAccess();
    uint64_t v36 = *(void *)(v34 + 32);
    uint64_t v37 = *(void *)(v36 + 16);
    uint64_t v52 = a2;
    if (v37)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v38 = sub_1000175F0();
      if (v39)
      {
        uint64_t v40 = v33;
        (*(void (**)(char *, unint64_t, uint64_t))(v60 + 16))(v24, *(void *)(v36 + 56) + *(void *)(v60 + 72) * v38, v33);
        uint64_t v41 = (uint64_t)v24;
        uint64_t v42 = 0;
      }
      else
      {
        uint64_t v41 = (uint64_t)v24;
        uint64_t v42 = 1;
        uint64_t v40 = v33;
      }
      sub_1000082C0(v41, v42, 1, v33);
    }
    else
    {
      uint64_t v40 = v33;
      sub_1000082C0((uint64_t)v24, 1, 1, v33);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    int v43 = v57;
    uint64_t v44 = (uint64_t)v55;
    sub_100090674((uint64_t)v24, (uint64_t)v21);
    if (sub_1000082E8((uint64_t)v21, 1, v40) == 1)
    {
      Date.init()();
      DatedSubscribers.init(subscriberCount:lastSubscription:)();
      sub_1000902E0((uint64_t)v21);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v43, v21, v40);
    }
    uint64_t v45 = v61;
    uint64_t v46 = v59;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    static DatedSubscribers.+ infix(_:_:)();
    sub_1000082C0(v44, 0, 1, v40);
    swift_beginAccess();
    sub_1000BA9AC(v44, v46, v45);
    swift_endAccess();
    if (sub_10008FAE4())
    {
      v52();
      swift_release();
      swift_errorRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v43, v40);
    }
    else
    {
      uint64_t v47 = *v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v48 = (uint64_t)v54;
      sub_1000907D8(v46, v45, v47);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (sub_1000082E8(v48, 1, v40) == 1)
      {
        (*(void (**)(char *, uint64_t))(v60 + 8))(v43, v40);
        swift_release();
        return sub_1000902E0(v48);
      }
      else
      {
        uint64_t v49 = v60;
        uint64_t v50 = v53;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v53, v48, v40);
        if (DatedSubscribers.subscriberCount.getter() >= 2) {
          ((void (*)(void))v52)(0);
        }
        swift_release();
        char v51 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
        v51(v50, v40);
        return ((uint64_t (*)(char *, uint64_t))v51)(v43, v40);
      }
    }
  }
  return result;
}

void sub_10008EED0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_10008EF3C(uint64_t a1, uint64_t a2, uint64_t a3, void **a4, uint64_t a5)
{
  uint64_t v10 = sub_100005E5C(&qword_1000FF1D8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DatedSubscribers();
  sub_100009830();
  uint64_t v57 = v14;
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v17);
  uint64_t v56 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v48 - v19;
  uint64_t v21 = swift_allocObject();
  uint64_t v58 = a4;
  uint64_t v59 = v21;
  *(void *)(v21 + 16) = a4;
  *(void *)(v21 + 24) = a5;
  swift_beginAccess();
  uint64_t v22 = *(void *)(a3 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000907D8(a1, a2, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (sub_1000082E8((uint64_t)v12, 1, v13) != 1)
  {
    uint64_t v52 = v16;
    uint64_t v53 = a2;
    uint64_t v54 = a5;
    uint64_t v25 = v57;
    uint64_t v26 = *(void (**)(void))(v57 + 32);
    uint64_t v55 = v20;
    v26();
    uint64_t v27 = sub_10008FB80();
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v51 = v13;
      uint64_t v29 = swift_allocObject();
      uint64_t v30 = v59;
      *(void *)(v29 + 16) = sub_1000902D8;
      *(void *)(v29 + 24) = v30;
      uint64_t v64 = sub_100090340;
      unint64_t v65 = (void *)v29;
      aBlock = _NSConcreteStackBlock;
      uint64_t v61 = 1107296256;
      uint64_t v62 = sub_10008E934;
      uint64_t v63 = &unk_1000F42F8;
      __n128 v31 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      id v32 = [v28 remoteObjectProxyWithErrorHandler:v31];
      _Block_release(v31);

      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_100005E5C(&qword_1000FF1E0);
      if (swift_dynamicCast())
      {
        uint64_t v58 = aBlock;
        uint64_t v49 = a1;
        uint64_t v33 = v53;
        NSString v50 = String._bridgeToObjectiveC()();
        uint64_t v34 = swift_allocObject();
        swift_weakInit();
        uint64_t v35 = v57;
        uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
        uint64_t v48 = v26;
        uint64_t v37 = v56;
        uint64_t v38 = v51;
        v36(v56, v55, v51);
        unint64_t v39 = (*(unsigned __int8 *)(v35 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
        unint64_t v40 = (v52 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v41 = (void *)swift_allocObject();
        v41[2] = sub_1000902D8;
        v41[3] = v30;
        v41[4] = v34;
        ((void (*)(char *, char *, uint64_t))v48)((char *)v41 + v39, v37, v38);
        uint64_t v42 = (void *)((char *)v41 + v40);
        *uint64_t v42 = v49;
        v42[1] = v33;
        uint64_t v64 = sub_100090414;
        unint64_t v65 = v41;
        aBlock = _NSConcreteStackBlock;
        uint64_t v61 = 1107296256;
        uint64_t v62 = sub_10008EED0;
        uint64_t v63 = &unk_1000F4348;
        int v43 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_release();
        uint64_t v44 = v50;
        [v58 enableNotificationsFor:v50 completion:v43];
        _Block_release(v43);
        swift_unknownObjectRelease();

        (*(void (**)(char *, uint64_t))(v35 + 8))(v55, v38);
        goto LABEL_8;
      }
      uint64_t v25 = v57;
      uint64_t v13 = v51;
    }
    sub_10009016C();
    uint64_t v45 = sub_100090708();
    *uint64_t v46 = 0;
    sub_100036CBC(v45, (uint64_t (*)(uint64_t, void))v58);
    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v55, v13);
    goto LABEL_8;
  }
  sub_1000902E0((uint64_t)v12);
  sub_10009016C();
  uint64_t v23 = sub_100090708();
  *uint64_t v24 = 0;
  sub_100036CBC(v23, (uint64_t (*)(uint64_t, void))v58);
  swift_errorRelease();
LABEL_8:
  swift_release();
  return swift_release();
}

uint64_t sub_10008F4D0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  if (qword_1000FBDB8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000929C(v4, (uint64_t)qword_10010A4F0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)unint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = Error.localizedDescription.getter();
    sub_100017098(v8, v9, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Watchlist XPC Error: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return a2(a1);
}

uint64_t sub_10008F6B4(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = sub_100005E5C(&qword_1000FF1D8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v36 - v16;
  uint64_t v18 = type metadata accessor for DatedSubscribers();
  __chkstk_darwin(v18);
  __n128 v23 = __chkstk_darwin(v19);
  uint64_t v25 = (char *)v36 - v24;
  if (a1) {
    return ((uint64_t (*)(uint64_t, __n128))a2)(a1, v23);
  }
  uint64_t v38 = v21;
  uint64_t v39 = v20;
  v36[0] = v22;
  v36[1] = a3;
  uint64_t v37 = a7;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v27 = result;
    if (DatedSubscribers.subscriberCount.getter() >= 1)
    {
      static DatedSubscribers.- infix(_:_:)();
      uint64_t v28 = v38;
      uint64_t v29 = v39;
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v17, v25, v39);
      sub_1000082C0((uint64_t)v17, 0, 1, v29);
      swift_beginAccess();
      uint64_t v30 = v37;
      swift_bridgeObjectRetain();
      sub_1000BA9AC((uint64_t)v17, a6, v30);
      swift_endAccess();
      if (DatedSubscribers.subscriberCount.getter() >= 1)
      {
        if (sub_10008FAE4())
        {
          a2();
          swift_release();
          swift_errorRelease();
        }
        else
        {
          a2();
          swift_release();
        }
        return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v25, v39);
      }
      (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v29);
    }
    swift_beginAccess();
    uint64_t v31 = *(void *)(v27 + 32);
    uint64_t v32 = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000907D8(a6, v32, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v33 = v39;
    if (sub_1000082E8((uint64_t)v14, 1, v39) == 1)
    {
      sub_1000902E0((uint64_t)v14);
LABEL_14:
      ((void (*)(void))a2)(0);
      return swift_release();
    }
    uint64_t v34 = v38;
    uint64_t v35 = v36[0];
    (*(void (**)(void, char *, uint64_t))(v38 + 32))(v36[0], v14, v33);
    if (DatedSubscribers.subscriberCount.getter())
    {
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v33);
      goto LABEL_14;
    }
    swift_beginAccess();
    sub_1000BFE10((uint64_t)v17);
    sub_1000902E0((uint64_t)v17);
    swift_endAccess();
    if (sub_10008FAE4())
    {
      a2();
      swift_release();
      swift_errorRelease();
    }
    else
    {
      a2();
      swift_release();
    }
    return (*(uint64_t (**)(void, uint64_t))(v38 + 8))(v36[0], v39);
  }
  return result;
}

uint64_t sub_10008FAE4()
{
  return 0;
}

void *sub_10008FB80()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 16);
  if (!v2)
  {
    sub_100090208();
    id v3 = sub_10008FDCC(0xD000000000000018, 0x80000001000D2AF0, 4096);
    uint64_t v4 = *(void **)(v1 + 16);
    *(void *)(v1 + 16) = v3;

    uint64_t v5 = *(void **)(v1 + 16);
    if (!v5) {
      goto LABEL_6;
    }
    os_log_type_t v6 = self;
    id v7 = v5;
    id v8 = [v6 interfaceWithProtocol:&OBJC_PROTOCOL____TtP7sportsd51WatchlistSuppressNotificationsXPCConnectionProtocol_];
    [v7 setRemoteObjectInterface:v8];

    unint64_t v9 = *(void **)(v1 + 16);
    if (!v9) {
      goto LABEL_6;
    }
    __n128 v23 = sub_10008FE48;
    uint64_t v24 = 0;
    uint64_t v19 = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    uint64_t v21 = sub_10008FF30;
    uint64_t v22 = &unk_1000F4230;
    uint64_t v10 = _Block_copy(&v19);
    id v11 = v9;
    [v11 setInterruptionHandler:v10];
    _Block_release(v10);

    uint64_t v12 = *(void **)(v1 + 16);
    if (v12)
    {
      uint64_t v13 = swift_allocObject();
      swift_weakInit();
      __n128 v23 = sub_100090298;
      uint64_t v24 = v13;
      uint64_t v19 = _NSConcreteStackBlock;
      uint64_t v20 = 1107296256;
      uint64_t v21 = sub_10008FF30;
      uint64_t v22 = &unk_1000F4280;
      uint64_t v14 = _Block_copy(&v19);
      id v15 = v12;
      swift_release();
      [v15 setInvalidationHandler:v14];
      _Block_release(v14);

      uint64_t v16 = *(void **)(v1 + 16);
    }
    else
    {
LABEL_6:
      uint64_t v16 = 0;
    }
    [v16 resume];
    uint64_t v2 = *(void **)(v1 + 16);
  }
  id v17 = v2;
  return v2;
}

id sub_10008FDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithMachServiceName:v5 options:a3];

  return v6;
}

void sub_10008FE48()
{
  if (qword_1000FBDB8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000929C(v0, (uint64_t)qword_10010A4F0);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Watchlist suppression connection interrupted. This should be recoverable.", v2, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_10008FF30(uint64_t a1)
{
  os_log_type_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_10008FF74()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    if (qword_1000FBDB8 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000929C(v2, (uint64_t)qword_10010A4F0);
    id v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v3, v4))
    {
      NSString v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Watchlist suppression connection invalidated.", v5, 2u);
      swift_slowDealloc();
    }

    id v6 = *(void **)(v1 + 16);
    *(void *)(v1 + 16) = 0;
    swift_release();
  }
}

uint64_t sub_100090090()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000900C0()
{
  sub_100090090();

  return _swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for WatchlistSuppressNotificationsXPCConnectionManager()
{
  return self;
}

unint64_t sub_10009011C()
{
  unint64_t result = qword_1000FF1B8;
  if (!qword_1000FF1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FF1B8);
  }
  return result;
}

unint64_t sub_10009016C()
{
  unint64_t result = qword_1000FF1C0;
  if (!qword_1000FF1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FF1C0);
  }
  return result;
}

unint64_t sub_1000901BC()
{
  unint64_t result = qword_1000FF1C8;
  if (!qword_1000FF1C8)
  {
    type metadata accessor for WatchlistSuppressionActor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FF1C8);
  }
  return result;
}

unint64_t sub_100090208()
{
  unint64_t result = qword_1000FF1D0;
  if (!qword_1000FF1D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000FF1D0);
  }
  return result;
}

uint64_t sub_100090248(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100090258()
{
  return swift_release();
}

uint64_t sub_100090260()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100090298()
{
}

uint64_t sub_1000902A0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000902D8(uint64_t a1)
{
  return sub_100036CBC(a1, *(uint64_t (**)(uint64_t, void))(v1 + 16));
}

uint64_t sub_1000902E0(uint64_t a1)
{
  uint64_t v2 = sub_100005E5C(&qword_1000FF1D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100090340(uint64_t a1)
{
  return sub_10008F4D0(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_100090348()
{
  uint64_t v1 = type metadata accessor for DatedSubscribers();
  sub_100009830();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 40) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = ((*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v9, v8);
}

uint64_t sub_100090414(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for DatedSubscribers() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (void (*)(void))v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + v4;
  unint64_t v9 = (void *)((char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];

  return sub_10008F6B4(a1, v5, v6, v7, v8, v10, v11);
}

void type metadata accessor for WatchlistSuppressNotificationXPCConnectionManagerError()
{
}

unsigned char *sub_1000904CC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100090598);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for WatchlistSuppressionError()
{
}

unint64_t sub_1000905D0()
{
  unint64_t result = qword_1000FF1E8;
  if (!qword_1000FF1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FF1E8);
  }
  return result;
}

uint64_t sub_10009061C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100090664(uint64_t a1)
{
  return sub_10008E99C(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_100090674(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005E5C(&qword_1000FF1D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100090708()
{
  return swift_allocError();
}

double sub_100090720@<D0>(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v3 = sub_1000175F0(), (v4 & 1) != 0))
  {
    uint64_t v5 = sub_100098DBC(v3);
    sub_10001BB1C(v5, v6);
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

unint64_t sub_10009077C@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (*(void *)(a2 + 16))
  {
    double result = sub_100017664(result);
    if (v5) {
      return sub_100098A88(*(void *)(a2 + 56) + 32 * result, (uint64_t)a3, (uint64_t *)&unk_1000FC300);
    }
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  a3[3] = 1;
  return result;
}

uint64_t sub_1000907D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100090990(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for DatedSubscribers);
}

void *sub_1000907F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_1000175F0();
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(void **)(*(void *)(a3 + 56) + 8 * v4);
  id v7 = v6;
  return v6;
}

uint64_t sub_100090838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_1000175F0();
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(void *)(*(void *)(a3 + 56) + 16 * v4);
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t sub_100090890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_1000175F0(), (v3 & 1) != 0)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

double sub_1000908D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v4 = sub_1000176EC(a1), (v5 & 1) != 0))
  {
    uint64_t v6 = sub_100098DBC(v4);
    sub_10001BB1C(v6, v7);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void *sub_100090930(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_100017730();
  if ((v4 & 1) == 0) {
    return 0;
  }
  char v5 = *(void **)(*(void *)(a2 + 56) + 8 * v3);
  id v6 = v5;
  return v5;
}

uint64_t sub_100090978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100090990(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_100090990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (*(void *)(a3 + 16) && (sub_1000175F0(), (v5 & 1) != 0))
  {
    uint64_t v6 = a4(0);
    sub_1000098E8();
    sub_100098E0C();
    v7();
    sub_100098E00();
    uint64_t v11 = v6;
  }
  else
  {
    a4(0);
    uint64_t v8 = sub_100098DAC();
  }

  return sub_1000082C0(v8, v9, v10, v11);
}

uint64_t sub_100090A50(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_1000177FC(), (v4 & 1) != 0)) {
    return *(void *)(*(void *)(a2 + 56) + 8 * v3);
  }
  else {
    return 0;
  }
}

double sub_100090A98@<D0>(char a1@<W0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v4 = sub_100017664(a1), (v5 & 1) != 0))
  {
    uint64_t v6 = sub_100098DBC(v4);
    sub_10001BB1C(v6, v7);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void *sub_100090AF4(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8);
  uint64_t v31 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v7 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v29 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v12 - 8);
  uint64_t v28 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v25 = v2;
    uint64_t v32 = _swiftEmptyArrayStorage;
    sub_100017DA8();
    id v15 = v32;
    unsigned int v27 = enum case for LocalizedStringResource.BundleDescription.atURL(_:);
    uint64_t v26 = (void (**)(char *, void, uint64_t))(v7 + 104);
    uint64_t v16 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      String.LocalizationValue.init(_:)();
      id v17 = a2;
      id v18 = [a2 URL];
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      (*v26)(v9, v27, v30);
      static Locale.current.getter();
      LocalizedStringResource.init(_:table:locale:bundle:comment:)();
      uint64_t v19 = String.init(localized:)();
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      uint64_t v32 = v15;
      unint64_t v22 = v15[2];
      if (v22 >= v15[3] >> 1)
      {
        sub_100017DA8();
        id v15 = v32;
      }
      v16 += 16;
      uint64_t v15[2] = v22 + 1;
      __n128 v23 = &v15[2 * v22];
      v23[4] = v19;
      v23[5] = v21;
      --v14;
      a2 = v17;
    }
    while (v14);
  }
  else
  {

    return _swiftEmptyArrayStorage;
  }
  return v15;
}

uint64_t sub_100090E14(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v5 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v3 = v6;
    BOOL v6 = v6 || v5 == v2;
    if (v6) {
      return v3;
    }
  }
  __break(1u);
  return result;
}

void sub_100090E74()
{
  sub_100069FCC();
  uint64_t v79 = v1;
  uint64_t v80 = v0;
  uint64_t v73 = v3;
  uint64_t v74 = v2;
  long long v75 = v4;
  uint64_t v76 = v5;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = sub_10001C9AC(v6);
  __chkstk_darwin(v7);
  sub_10000C58C();
  uint64_t v72 = v8;
  sub_100098C44();
  uint64_t v9 = type metadata accessor for SportsActivityAttributes.EventInfo();
  uint64_t v10 = sub_10001C9AC(v9);
  __chkstk_darwin(v10);
  sub_10000C58C();
  uint64_t v78 = v11;
  uint64_t v12 = sub_100005E5C(&qword_1000FD498);
  uint64_t v13 = sub_10001C9AC(v12);
  __chkstk_darwin(v13);
  sub_10004D594();
  uint64_t v71 = v14;
  sub_100051124();
  __chkstk_darwin(v15);
  id v17 = (char *)v62 - v16;
  uint64_t v84 = type metadata accessor for SportingEventSubscription.Metadata();
  sub_100009830();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_10000C58C();
  uint64_t v82 = v21;
  sub_100098C44();
  uint64_t v22 = type metadata accessor for Sport();
  sub_100009830();
  uint64_t v24 = v23;
  __chkstk_darwin(v25);
  sub_10004D594();
  uint64_t v77 = v26;
  sub_100051124();
  __chkstk_darwin(v27);
  sub_100051130();
  uint64_t v83 = v28;
  sub_100051124();
  __chkstk_darwin(v29);
  uint64_t v30 = (void *)SportingEventSubscription.sportingEventDetails.getter();
  uint64_t v31 = (void *)SportingEvent.clock.getter();

  uint64_t v32 = (void *)SportingEventCurrentClock.current.getter();
  char v33 = dispatch thunk of SportingEventClock.isCountingDown.getter();

  uint64_t v81 = v24;
  if (v33 == 2)
  {
    SportingEventSubscription.sport.getter();
    Sport.init(rawValue:)();
    int v70 = Sport.isClockCountingDown.getter();
    sub_100098CB4();
    v34();
  }
  else
  {
    int v70 = v33 & 1;
  }
  uint64_t v35 = v22;
  SportingEventSubscription.metadata.getter();
  if (sub_1000082E8((uint64_t)v17, 1, v84) == 1)
  {
    sub_1000095CC((uint64_t)v17, &qword_1000FD498);
    sub_10009458C();
    swift_allocError();
    *uint64_t v36 = 0;
    swift_willThrow();
  }
  else
  {
    uint64_t v37 = v82;
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v82, v17, v84);
    SportingEventSubscription.sport.getter();
    Sport.init(rawValue:)();
    uint64_t v38 = v80;
    uint64_t v39 = sub_100094D14();
    if (v38)
    {
      sub_100009894();
      v40();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v37, v84);
    }
    else
    {
      uint64_t v80 = v39;
      uint64_t v41 = SportingEventSubscription.canonicalId.getter();
      uint64_t v68 = v42;
      uint64_t v69 = v41;
      uint64_t v43 = v81;
      sub_100098C84();
      v44();
      uint64_t v45 = SportingEventSubscription.leagueId.getter();
      uint64_t v66 = v46;
      uint64_t v67 = v45;
      uint64_t v47 = SportingEventSubscription.Metadata.localizedLeagueName.getter();
      uint64_t v64 = v48;
      uint64_t v65 = v47;
      sub_100095034();
      uint64_t v49 = SportingEventSubscription.canonicalId.getter();
      uint64_t v51 = v50;
      uint64_t v52 = v71;
      sub_100098C84();
      v53();
      sub_100098E00();
      sub_1000082C0(v54, v55, v56, v84);
      uint64_t v57 = sub_10009B160(v79, v75, v49, v51, v52);
      uint64_t v63 = v35;
      unint64_t v59 = v58;
      swift_bridgeObjectRelease();
      sub_1000095CC(v52, &qword_1000FD498);
      if (v59) {
        uint64_t v60 = v57;
      }
      else {
        uint64_t v60 = 0;
      }
      uint64_t v71 = v60;
      unint64_t v61 = 0xE000000000000000;
      if (v59) {
        unint64_t v61 = v59;
      }
      v62[1] = v61;
      v62[0] = SportingEventSubscription.Metadata.preGameTitle.getter();
      SportingEventSubscription.Metadata.shortTitle.getter();
      static Date.now.getter();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      SportsActivityAttributes.init(canonicalId:sport:leagueId:leagueName:contenders:eventInfo:clockIsCountingDown:eventURL:preGameTitle:shortTitle:createdDate:bundleId:languageTag:)();
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v83, v63);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v37, v84);
    }
  }
  sub_100069FB4();
}

void sub_10009136C()
{
  sub_100069FCC();
  uint64_t v41 = v2;
  uint64_t v42 = v1;
  uint64_t v43 = v4;
  uint64_t v44 = v3;
  uint64_t v45 = v5;
  uint64_t v39 = type metadata accessor for Date();
  sub_1000098E8();
  __chkstk_darwin(v6);
  unint64_t v40 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100005E5C(&qword_1000FD498);
  uint64_t v9 = sub_10001C9AC(v8);
  __chkstk_darwin(v9);
  sub_100009908();
  uint64_t v10 = sub_100005E5C(&qword_1000FC938);
  uint64_t v11 = sub_10001C9AC(v10);
  __chkstk_darwin(v11);
  sub_1000098F8();
  uint64_t v12 = type metadata accessor for SportsActivityAttributes.EventInfo();
  uint64_t v13 = sub_10001C9AC(v12);
  __chkstk_darwin(v13);
  sub_1000098F8();
  uint64_t v14 = type metadata accessor for Sport();
  sub_100009830();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_1000098F8();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = (void *)SportingEventSubscription.sportingEventDetails.getter();
  unint64_t v22 = dispatch thunk of SportingEvent.competitors.getter();

  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v23)
  {
    uint64_t v24 = SportingEventSubscription.canonicalId.getter();
    v38[1] = v25;
    v38[2] = v24;
    (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v20, enum case for Sport.unknown(_:), v14);
    SportingEventSubscription.leagueId.getter();
    v38[0] = v26;
    uint64_t v27 = sub_100098DAC();
    sub_1000082C0(v27, v28, v29, v39);
    SportsActivityAttributes.EventInfo.init(startDate:)();
    uint64_t v30 = SportingEventSubscription.canonicalId.getter();
    uint64_t v32 = v31;
    SportingEventSubscription.metadata.getter();
    sub_10009B160(v44, v43, v30, v32, v0);
    swift_bridgeObjectRelease();
    sub_1000095CC(v0, &qword_1000FD498);
    static Date.now.getter();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    SportsActivityAttributes.init(canonicalId:sport:leagueId:leagueName:contenders:eventInfo:clockIsCountingDown:eventURL:preGameTitle:shortTitle:createdDate:bundleId:languageTag:)();
  }
  else
  {
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_10000929C(v33, (uint64_t)qword_10010A568);
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Competitors cannot be empty", v36, 2u);
      swift_slowDealloc();
    }

    sub_10009458C();
    swift_allocError();
    *uint64_t v37 = 0;
    swift_willThrow();
  }
  sub_100069FB4();
}

uint64_t sub_100091760@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X8>)
{
  int v217 = a7;
  LODWORD(v229) = a6;
  int v209 = a5;
  uint64_t v222 = a4;
  v226 = a3;
  uint64_t v210 = a2;
  uint64_t v212 = a8;
  uint64_t v11 = sub_100005E5C(&qword_1000FC938);
  uint64_t v12 = sub_10001C9AC(v11);
  __chkstk_darwin(v12);
  sub_10000C58C();
  uint64_t v211 = v13;
  sub_100098C44();
  uint64_t v207 = type metadata accessor for URL();
  sub_100009830();
  uint64_t v206 = v14;
  __chkstk_darwin(v15);
  sub_10000C58C();
  uint64_t v205 = v16;
  sub_100098C44();
  uint64_t v214 = type metadata accessor for Date();
  sub_100009830();
  uint64_t v202 = v17;
  __chkstk_darwin(v18);
  sub_10004D594();
  sub_100098C34();
  __chkstk_darwin(v19);
  sub_100098D3C();
  uint64_t v199 = v20;
  sub_100098C44();
  uint64_t v201 = type metadata accessor for SportsActivityContentState.EventInfoState();
  sub_100009830();
  uint64_t v200 = v21;
  __chkstk_darwin(v22);
  sub_10000C58C();
  uint64_t v203 = v23;
  uint64_t v24 = sub_100005E5C(&qword_1000FF1F8);
  uint64_t v25 = sub_10001C9AC(v24);
  __chkstk_darwin(v25);
  sub_10000C58C();
  uint64_t v220 = v26;
  uint64_t v27 = sub_100005E5C(&qword_1000FF200);
  uint64_t v28 = sub_10001C9AC(v27);
  __chkstk_darwin(v28);
  sub_10000C58C();
  uint64_t v219 = v29;
  sub_100098C44();
  uint64_t v204 = type metadata accessor for SportsActivityContentState();
  sub_100009830();
  uint64_t v208 = v30;
  __chkstk_darwin(v31);
  sub_10004D594();
  sub_100098C34();
  __chkstk_darwin(v32);
  sub_100098D3C();
  uint64_t v221 = v33;
  uint64_t v196 = type metadata accessor for SportingEventProgressStatus();
  sub_100009830();
  v195 = v34;
  __chkstk_darwin(v35);
  sub_10000C58C();
  uint64_t v194 = v36;
  sub_100098C44();
  type metadata accessor for SportsActivityPlay();
  sub_100009830();
  uint64_t v223 = v38;
  uint64_t v224 = v37;
  __chkstk_darwin(v37);
  sub_10004D594();
  sub_100098C34();
  __chkstk_darwin(v39);
  sub_100051130();
  sub_100098C34();
  __chkstk_darwin(v40);
  sub_100098D3C();
  uint64_t v225 = v41;
  uint64_t v228 = sub_100005E5C(&qword_1000FF208);
  sub_1000098E8();
  __chkstk_darwin(v42);
  sub_10004D594();
  sub_100098C34();
  __chkstk_darwin(v43);
  sub_100051130();
  sub_100098C34();
  __chkstk_darwin(v44);
  sub_100051130();
  sub_100098C34();
  __chkstk_darwin(v45);
  sub_100051130();
  sub_100098C34();
  __chkstk_darwin(v46);
  sub_100051130();
  sub_100098C34();
  __chkstk_darwin(v47);
  sub_100051130();
  sub_100098C34();
  __chkstk_darwin(v48);
  sub_100051130();
  sub_100098C34();
  __chkstk_darwin(v49);
  uint64_t v51 = (char *)v170 - v50;
  __chkstk_darwin(v52);
  uint64_t v54 = (void (*)(void))((char *)v170 - v53);
  __chkstk_darwin(v55);
  sub_100098DD8();
  uint64_t v56 = type metadata accessor for SportsActivityClock();
  sub_100009830();
  uint64_t v227 = v57;
  __chkstk_darwin(v58);
  sub_100098D54();
  uint64_t v61 = v59 - v60;
  __chkstk_darwin(v62);
  uint64_t v64 = (char *)v170 - v63;
  __chkstk_darwin(v65);
  uint64_t v67 = (char *)v170 - v66;
  type metadata accessor for Sport();
  sub_100009830();
  uint64_t v231 = v69;
  uint64_t v232 = v68;
  __chkstk_darwin(v68);
  sub_100069F80();
  SportingEventSubscription.sport.getter();
  Sport.init(rawValue:)();
  uint64_t v70 = (uint64_t)v230;
  sub_100094708(v9, (uint64_t)a1, (char)v229, (uint64_t)v67);
  if (v70)
  {
    sub_100098D48();
    return v73(v9);
  }
  else
  {
    v229 = v54;
    uint64_t v188 = v61;
    v189 = v64;
    v230 = v51;
    v190 = v67;
    uint64_t v191 = v56;
    uint64_t v71 = v8 + *(int *)(v228 + 48);
    uint64_t v72 = v226;
    sub_10009A624(v8, v71, (uint64_t)a1, v226);
    sub_10009499C(v72, v222, v225);
    uint64_t v222 = v8;
    uint64_t v187 = v71;
    uint64_t v181 = v9;
    uint64_t v75 = sub_100098D64();
    uint64_t v186 = v75;
    *(unsigned char *)(v75 + 16) = 0;
    uint64_t v178 = v75 + 16;
    uint64_t v76 = sub_100098D64();
    id v184 = a1;
    char v77 = SportingEventSubscription.shouldDisplayPlayByPlay.getter();
    uint64_t v185 = v76;
    *(unsigned char *)(v76 + 16) = v77 & 1;
    unint64_t v182 = (unsigned char *)(v76 + 16);
    uint64_t v78 = sub_100098D64();
    *(unsigned char *)(v78 + 16) = 1;
    uint64_t v177 = v78 + 16;
    v235[3] = (uint64_t)&type metadata for TVAppFeatureFlags;
    v235[4] = sub_1000092D4();
    char v79 = isFeatureEnabled(_:)();
    sub_100006178((uint64_t)v235);
    uint64_t v179 = v78;
    if (v79 & 1) != 0 && (v217)
    {
      sub_100098D18();
      int v176 = 0;
      uint64_t v81 = v223;
      uint64_t v80 = v224;
      uint64_t v82 = v227;
      uint64_t v83 = v215;
      uint64_t v84 = v191;
      uint64_t v85 = v197;
      uint64_t v86 = v229;
    }
    else
    {
      uint64_t v87 = (void *)SportingEventSubscription.sportingEventDetails.getter();
      uint64_t v88 = v194;
      SportingEvent.progressStatus.getter();

      int v89 = v195[11](v88, v196);
      uint64_t v81 = v223;
      uint64_t v80 = v224;
      uint64_t v83 = v215;
      uint64_t v85 = v197;
      uint64_t v86 = v229;
      if (v89 == enum case for SportingEventProgressStatus.preGame(_:))
      {
        sub_100098D18();
        int v176 = 0;
        uint64_t v82 = v227;
      }
      else
      {
        BOOL v90 = v89 == enum case for SportingEventProgressStatus.inProgress(_:)
           || v89 == enum case for SportingEventProgressStatus.statusBreak(_:);
        uint64_t v82 = v227;
        if (!v90)
        {
          *unint64_t v182 = 0;
          v195[1](v194, v196);
        }
        int v176 = 1;
      }
      uint64_t v84 = v191;
    }
    uint64_t v91 = v189;
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v180 = 0;
    uint64_t v92 = type metadata accessor for Logger();
    uint64_t v173 = sub_10000929C(v92, (uint64_t)qword_10010A568);
    uint64_t v93 = *(void (**)(void, void, void))(v82 + 16);
    uint64_t v194 = v82 + 16;
    uint64_t v183 = v93;
    v93(v91, v190, v84);
    unint64_t v94 = *(uint64_t (***)(void, uint64_t))(v81 + 16);
    uint64_t v196 = v81 + 16;
    v195 = v94;
    ((void (*)(uint64_t, uint64_t, uint64_t))v94)(v83, v225, v80);
    uint64_t v95 = v228;
    uint64_t v96 = type metadata accessor for SportsActivityContender();
    uint64_t v197 = *(void *)(v96 - 8);
    uint64_t v97 = (uint64_t)v86;
    uint64_t v98 = v197 + 16;
    uint64_t v99 = *(void (**)(void))(v197 + 16);
    sub_100098D9C();
    v99();
    uint64_t v100 = v187;
    sub_100098D9C();
    v99();
    sub_100098A88(v97, (uint64_t)v230, &qword_1000FF208);
    sub_100098998(v97, v216, &qword_1000FF208);
    uint64_t v101 = v85 + *(int *)(v95 + 48);
    uint64_t v102 = v98;
    sub_100098D9C();
    v99();
    v229 = v99;
    ((void (*)(uint64_t, uint64_t, uint64_t))v99)(v101, v100, v96);
    sub_100098A88(v85, v218, &qword_1000FF208);
    uint64_t v103 = v213;
    sub_100098998(v85, v213, &qword_1000FF208);
    id v104 = v184;
    uint64_t v105 = Logger.logObject.getter();
    os_log_type_t v106 = static os_log_type_t.debug.getter();
    int v107 = v106;
    BOOL v108 = os_log_type_enabled(v105, v106);
    id v184 = v104;
    uint64_t v175 = v96;
    uint64_t v174 = v102;
    if (v108)
    {
      uint64_t v109 = swift_slowAlloc();
      os_log_t v172 = v105;
      uint64_t v110 = v109;
      uint64_t v173 = swift_slowAlloc();
      v235[0] = v173;
      *(_DWORD *)uint64_t v110 = 136316162;
      int v171 = v107;
      uint64_t v111 = SportingEventSubscription.canonicalId.getter();
      uint64_t v233 = sub_100017098(v111, v112, v235);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v110 + 12) = 2080;
      sub_100098C84();
      v113();
      uint64_t v114 = String.init<A>(reflecting:)();
      uint64_t v233 = sub_100017098(v114, v115, v235);
      v170[2] = &v234;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100098D90();
      v116();
      *(_WORD *)(v110 + 22) = 2080;
      sub_100098C84();
      v117();
      uint64_t v118 = String.init<A>(describing:)();
      uint64_t v233 = sub_100017098(v118, v119, v235);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v215 = *(void *)(v223 + 8);
      sub_100098D90();
      v120();
      *(_WORD *)(v110 + 32) = 2080;
      v189 = (char *)(v110 + 34);
      uint64_t v121 = v229;
      uint64_t v122 = *(int *)(v228 + 48);
      uint64_t v100 = v193;
      uint64_t v123 = v193 + v122;
      uint64_t v124 = (uint64_t)v230;
      uint64_t v125 = &v230[v122];
      ((void (*)(uint64_t, char *, uint64_t))v229)(v193, v230, v96);
      ((void (*)(uint64_t, char *, uint64_t))v121)(v123, v125, v96);
      SportsActivityContender.scoreEntries.getter();
      BOOL v192 = *(void (**)(void))(v197 + 8);
      uint64_t v126 = v192;
      sub_100098CB4();
      v126();
      sub_100098CB4();
      v126();
      uint64_t v188 = type metadata accessor for SportingEventCompetitorScoreStatisticType.StatisticName();
      v170[1] = sub_1000989F4(&qword_1000FC850, (void (*)(uint64_t))&type metadata accessor for SportingEventCompetitorScoreStatisticType.StatisticName);
      Dictionary.description.getter();
      swift_bridgeObjectRelease();
      uint64_t v127 = sub_100098DCC();
      uint64_t v233 = sub_100017098(v127, v128, v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000095CC(v216, &qword_1000FF208);
      sub_1000095CC(v124, &qword_1000FF208);
      *(_WORD *)(v110 + 42) = 2080;
      v230 = (char *)(v110 + 44);
      uint64_t v130 = v218;
      sub_100098E18();
      v131();
      sub_100098E18();
      v132();
      SportsActivityContender.scoreEntries.getter();
      unsigned int v133 = v192;
      sub_100098CB4();
      v133();
      sub_100098CB4();
      v133();
      uint64_t v134 = Dictionary.description.getter();
      unint64_t v136 = v135;
      swift_bridgeObjectRelease();
      uint64_t v233 = sub_100017098(v134, v136, v235);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000095CC(v213, &qword_1000FF208);
      sub_1000095CC(v130, &qword_1000FF208);
      os_log_t v137 = v172;
      _os_log_impl((void *)&_mh_execute_header, v172, (os_log_type_t)v171, "Creating activity content for event '%s':\n    clock: %s,\n    play: %s,\n    scoreA: %s,\n    scoreB: %s", (uint8_t *)v110, 0x34u);
      swift_arrayDestroy();
      uint64_t v138 = v191;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v139 = v191;
      sub_100098D90();
      v140();
      uint64_t v215 = *(void *)(v223 + 8);
      sub_100098D90();
      v141();
      sub_1000095CC(v216, &qword_1000FF208);
      sub_1000095CC((uint64_t)v230, &qword_1000FF208);
      sub_1000095CC(v103, &qword_1000FF208);
      sub_1000095CC(v218, &qword_1000FF208);

      uint64_t v138 = v139;
    }
    sub_100098C90();
    sub_100098C84();
    v142();
    sub_100098E00();
    sub_1000082C0(v143, v144, v145, v138);
    uint64_t v146 = v224;
    sub_100098C84();
    v147();
    sub_100098E00();
    sub_1000082C0(v148, v149, v150, v146);
    uint64_t v151 = v226[3];
    uint64_t v152 = v226[4];
    sub_100005EA0(v226, v151);
    (*(void (**)(uint64_t, uint64_t))(v152 + 24))(v151, v152);
    static Date.now.getter();
    char v153 = static Date.> infix(_:_:)();
    uint64_t v154 = (unsigned __int8 *)(v202 + 8);
    uint64_t v155 = *(void (**)(void))(v202 + 8);
    sub_100098CB4();
    v155();
    sub_100098DCC();
    sub_100098CB4();
    v155();
    uint64_t v156 = (unsigned int *)&enum case for SportsActivityContentState.EventInfoState.preGame(_:);
    if ((v153 & 1) == 0) {
      uint64_t v156 = (unsigned int *)&enum case for SportsActivityContentState.EventInfoState.startingSoon(_:);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v200 + 104))(v96, *v156, v201);
    sub_100098CC0();
    LODWORD(v230) = *v154;
    sub_100098CC0();
    LODWORD(v218) = *v154;
    uint64_t v157 = v229;
    v226 = (void *)(v100 + *(int *)(v228 + 48));
    uint64_t v158 = v175;
    ((void (*)(uint64_t, uint64_t, uint64_t))v229)(v100, v222, v175);
    sub_100098D80();
    v157();
    uint64_t v159 = v198;
    sub_100098D80();
    v157();
    sub_100098DCC();
    sub_100098D80();
    v157();
    sub_100098CC0();
    sub_100098E0C();
    v160();
    SportsActivityContentState.init(clock:play:eventInfoState:isClockVisible:isEventInfoVisible:isScoreVisible:contenderA:contenderB:shouldDisplayPlayByPlay:shouldShowWatchAlertUI:subscriptionContainerURL:isWaitingForUserConsent:)();
    uint64_t v161 = *(void (**)(uint64_t, uint64_t))(v197 + 8);
    v161(v159, v158);
    v161((uint64_t)v226, v158);
    uint64_t v162 = v208;
    uint64_t v163 = v204;
    sub_100098C84();
    v164();
    uint64_t v165 = SportingEventSubscription.heartbeatSessionsTTLSeconds.getter();
    if (v166) {
      sub_1000082C0(v211, 1, 1, v214);
    }
    else {
      sub_1000945D8(v211, *(double *)&v165);
    }
    sub_1000989F4(&qword_1000FF210, (void (*)(uint64_t))&type metadata accessor for SportsActivityContentState);
    sub_1000989F4(&qword_1000FF218, (void (*)(uint64_t))&type metadata accessor for SportsActivityContentState);
    sub_1000989F4(&qword_1000FF220, (void (*)(uint64_t))&type metadata accessor for SportsActivityContentState);
    ActivityContent.init(state:staleDate:relevanceScore:)();
    (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v221, v163);
    sub_100098D90();
    v167();
    sub_1000095CC(v222, &qword_1000FF208);
    sub_100098CFC();
    sub_100009894();
    v168();
    sub_100098D48();
    sub_100009894();
    v169();
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_100092C10@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v55 = a4;
  int v56 = a3;
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v61 = a5;
  uint64_t v8 = sub_100005E5C(&qword_1000FC938);
  uint64_t v9 = sub_10001C9AC(v8);
  __chkstk_darwin(v9);
  uint64_t v60 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100098C44();
  type metadata accessor for URL();
  sub_100009830();
  v52[2] = v12;
  uint64_t v52[3] = v11;
  __chkstk_darwin(v11);
  sub_10000C58C();
  v52[1] = v13;
  sub_100098C44();
  uint64_t v14 = type metadata accessor for SportsActivityContender();
  uint64_t v15 = sub_10001C9AC(v14);
  __chkstk_darwin(v15);
  sub_10004D594();
  v52[0] = v16;
  sub_100051124();
  __chkstk_darwin(v17);
  sub_100098DD8();
  uint64_t v18 = type metadata accessor for SportsActivityContentState.EventInfoState();
  sub_100009830();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_100069F80();
  uint64_t v22 = sub_100005E5C(&qword_1000FF1F8);
  uint64_t v23 = sub_10001C9AC(v22);
  __chkstk_darwin(v23);
  sub_10001C7A0();
  uint64_t v24 = sub_100005E5C(&qword_1000FF200);
  uint64_t v25 = sub_10001C9AC(v24);
  __chkstk_darwin(v25);
  sub_100098CE0();
  type metadata accessor for SportsActivityContentState();
  sub_100009830();
  uint64_t v58 = v27;
  uint64_t v59 = v26;
  __chkstk_darwin(v26);
  sub_10004D594();
  uint64_t v57 = v28;
  sub_100051124();
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)v52 - v30;
  uint64_t v32 = type metadata accessor for SportsActivityClock();
  sub_1000082C0(v6, 1, 1, v32);
  uint64_t v33 = type metadata accessor for SportsActivityPlay();
  sub_1000082C0(v5, 1, 1, v33);
  (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v7, enum case for SportsActivityContentState.EventInfoState.preGame(_:), v18);
  type metadata accessor for SportingEventCompetitorScoreStatisticType.StatisticName();
  sub_1000989F4(&qword_1000FC850, (void (*)(uint64_t))&type metadata accessor for SportingEventCompetitorScoreStatisticType.StatisticName);
  Dictionary.init(dictionaryLiteral:)();
  SportsActivityContender.init(canonicalId:scoreEntries:isWinnerIndicatorVisible:)();
  uint64_t v34 = v31;
  uint64_t v35 = v53;
  Dictionary.init(dictionaryLiteral:)();
  SportsActivityContender.init(canonicalId:scoreEntries:isWinnerIndicatorVisible:)();
  SportingEventSubscription.shouldDisplayPlayByPlay.getter();
  sub_100098E0C();
  v36();
  SportsActivityContentState.init(clock:play:eventInfoState:isClockVisible:isEventInfoVisible:isScoreVisible:contenderA:contenderB:shouldDisplayPlayByPlay:shouldShowWatchAlertUI:subscriptionContainerURL:isWaitingForUserConsent:)();
  if (qword_1000FBDE0 != -1) {
    swift_once();
  }
  uint64_t v37 = type metadata accessor for Logger();
  sub_10000929C(v37, (uint64_t)qword_10010A568);
  id v38 = v35;
  uint64_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 136315138;
    uint64_t v42 = SportingEventSubscription.canonicalId.getter();
    uint64_t v62 = sub_100017098(v42, v43, &v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Creating dummy activity content for event '%s'", v41, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v45 = v59;
  uint64_t v44 = (uint64_t)v60;
  uint64_t v46 = v58;
  sub_100098C84();
  v47();
  uint64_t v48 = SportingEventSubscription.heartbeatSessionsTTLSeconds.getter();
  if (v49)
  {
    uint64_t v50 = type metadata accessor for Date();
    sub_1000082C0(v44, 1, 1, v50);
  }
  else
  {
    sub_1000945D8(v44, *(double *)&v48);
  }
  sub_1000989F4(&qword_1000FF210, (void (*)(uint64_t))&type metadata accessor for SportsActivityContentState);
  sub_1000989F4(&qword_1000FF218, (void (*)(uint64_t))&type metadata accessor for SportsActivityContentState);
  sub_1000989F4(&qword_1000FF220, (void (*)(uint64_t))&type metadata accessor for SportsActivityContentState);
  ActivityContent.init(state:staleDate:relevanceScore:)();
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v34, v45);
}

void sub_100093244()
{
  sub_100069FCC();
  uint64_t v72 = v3;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for AlertConfiguration.AlertSound();
  uint64_t v7 = sub_10001C9AC(v6);
  __chkstk_darwin(v7);
  sub_10000C58C();
  sub_100098C44();
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = sub_10001C9AC(v8);
  __chkstk_darwin(v9);
  sub_10004D594();
  sub_100051124();
  __chkstk_darwin(v10);
  sub_100098D3C();
  sub_100098C44();
  type metadata accessor for SportingEventCompetitorScoreStatisticType.StatisticName();
  sub_100009830();
  uint64_t v69 = v12;
  uint64_t v70 = v11;
  __chkstk_darwin(v11);
  sub_10004D594();
  uint64_t v68 = v13;
  sub_100051124();
  __chkstk_darwin(v14);
  sub_100098D3C();
  uint64_t v67 = v15;
  sub_100098C44();
  uint64_t v16 = type metadata accessor for SportingEventPlayLevel();
  sub_100009830();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_100098CE0();
  type metadata accessor for Sport();
  sub_100009830();
  __chkstk_darwin(v20);
  sub_10000C58C();
  uint64_t v71 = v21;
  uint64_t v22 = type metadata accessor for SportingEventProgressStatus();
  sub_100009830();
  uint64_t v24 = v23;
  __chkstk_darwin(v25);
  sub_100009908();
  if ((SportingEventSubscription.shouldDisplayPlayByPlay.getter() & 1) == 0)
  {
    uint64_t v34 = type metadata accessor for AlertConfiguration();
    sub_1000082C0(v5, 1, 1, v34);
    goto LABEL_20;
  }
  uint64_t v26 = (void *)SportingEventSubscription.sportingEventDetails.getter();
  SportingEvent.progressStatus.getter();

  if ((*(unsigned int (**)(uint64_t, uint64_t))(v24 + 88))(v1, v22) != enum case for SportingEventProgressStatus.preGame(_:))
  {
    uint64_t v65 = v24;
    uint64_t v66 = v22;
    SportingEventSubscription.sport.getter();
    Sport.init(rawValue:)();
    uint64_t v35 = SportingEventSubscription.mostRecentPlay.getter();
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v2, enum case for SportingEventPlayLevel.alerts(_:), v16);
    uint64_t v36 = sub_100090930(v2, v35);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v2, v16);
    if (v36)
    {
      uint64_t v64 = v36;
      uint64_t v37 = v72[3];
      uint64_t v38 = v72[4];
      sub_100005EA0(v72, v37);
      uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 32))(v37, v38);
      uint64_t v40 = *(void *)(v39 + 16);
      if (v40)
      {
        uint64_t v63 = v5;
        sub_100017DA8();
        uint64_t v41 = v39 + 32;
        do
        {
          sub_100008B98(v41, (uint64_t)v74);
          uint64_t v42 = v75;
          uint64_t v43 = v76;
          sub_100005EA0(v74, v75);
          uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v42, v43);
          uint64_t v46 = v45;
          sub_100006178((uint64_t)v74);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_100017DA8();
          }
          unint64_t v47 = _swiftEmptyArrayStorage[2];
          if (v47 >= _swiftEmptyArrayStorage[3] >> 1) {
            sub_100017DA8();
          }
          _swiftEmptyArrayStorage[2] = v47 + 1;
          uint64_t v48 = &_swiftEmptyArrayStorage[2 * v47];
          v48[4] = v44;
          v48[5] = v46;
          v41 += 40;
          --v40;
        }
        while (v40);
        swift_bridgeObjectRelease();
        uint64_t v30 = v63;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v30 = v5;
      }
      uint64_t v51 = sub_10009A108((uint64_t)v64, v71, (uint64_t)_swiftEmptyArrayStorage);
      if (!v0)
      {
        uint64_t v54 = v51;
        uint64_t v55 = v52;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        Sport.scoreStatisticName.getter();
        sub_100090A50(v67, v54);
        swift_bridgeObjectRelease();
        uint64_t v73 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
        v73(v67, v70);
        swift_bridgeObjectRelease();
        Sport.scoreStatisticName.getter();
        sub_100090A50(v68, v55);
        swift_bridgeObjectRelease();
        v73(v68, v70);
        v74[0] = dispatch thunk of CustomStringConvertible.description.getter();
        v74[1] = v56;
        v57._uint64_t countAndFlagsBits = 45;
        v57._object = (void *)0xE100000000000000;
        String.append(_:)(v57);
        v58._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v58);
        swift_bridgeObjectRelease();
        v59._uint64_t countAndFlagsBits = 32;
        v59._object = (void *)0xE100000000000000;
        String.append(_:)(v59);
        v60._uint64_t countAndFlagsBits = SportingEventPlay.playDescription.getter();
        String.append(_:)(v60);

        swift_bridgeObjectRelease();
        sub_100098D48();
        sub_100009894();
        v61();
        sub_100009894();
        v62();
        uint64_t v27 = v72;
        goto LABEL_4;
      }
      sub_100098D48();
      sub_100009894();
      v53();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10009458C();
      swift_allocError();
      *char v49 = 3;
      swift_willThrow();
      sub_100098D48();
      sub_100009894();
      v50();
    }
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v1, v66);
    goto LABEL_20;
  }
  uint64_t v27 = v72;
  sub_100005EA0(v72, v72[3]);
  uint64_t v28 = sub_100098E2C();
  v29(v28);
  uint64_t v30 = v5;
LABEL_4:
  sub_100005EA0(v27, v27[3]);
  uint64_t v31 = sub_100098E2C();
  v32(v31);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  static AlertConfiguration.AlertSound.default.getter();
  AlertConfiguration.init(title:body:sound:)();
  uint64_t v33 = type metadata accessor for AlertConfiguration();
  sub_1000082C0(v30, 0, 1, v33);
LABEL_20:
  sub_100069FB4();
}

void sub_100093964()
{
  sub_100069FCC();
  uint64_t v83 = v2;
  uint64_t v84 = v0;
  uint64_t v82 = v3;
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = sub_10001C9AC(v4);
  __chkstk_darwin(v5);
  uint64_t v81 = (void (**)(uint64_t))((char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100098C44();
  uint64_t v80 = (void *)type metadata accessor for LocalizedStringResource.BundleDescription();
  sub_100009830();
  uint64_t v78 = v7;
  __chkstk_darwin(v8);
  sub_10000C58C();
  uint64_t v79 = v9;
  sub_100098C44();
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  uint64_t v11 = sub_10001C9AC(v10);
  __chkstk_darwin(v11);
  sub_100009908();
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = sub_10001C9AC(v12);
  __chkstk_darwin(v13);
  sub_100098D54();
  uint64_t v16 = v14 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v69 - v18;
  uint64_t v20 = type metadata accessor for AlertConfiguration.AlertSound();
  sub_100009830();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  sub_100098D54();
  uint64_t v26 = v24 - v25;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v69 - v28;
  unint64_t v30 = sub_1000522C4();
  uint64_t v32 = v31;
  objc_allocWithZone((Class)LSApplicationRecord);
  uint64_t v33 = v84;
  id v34 = sub_10005F61C(v30, v32, 1);
  if (v33)
  {
    swift_errorRelease();
LABEL_3:
    type metadata accessor for AlertConfiguration();
    uint64_t v35 = sub_100098DAC();
    sub_1000082C0(v35, v36, v37, v38);
LABEL_4:
    sub_100069FB4();
    return;
  }
  uint64_t v73 = v1;
  uint64_t v74 = v26;
  uint64_t v76 = v20;
  char v77 = v29;
  uint64_t v75 = v16;
  if (!v34) {
    goto LABEL_3;
  }
  uint64_t v39 = v34;
  uint64_t v84 = 0;
  uint64_t v40 = (void *)SportingEventSubscription.sportingEventDetails.getter();
  unint64_t v41 = dispatch thunk of SportingEvent.alertUpdates.getter();

  if (!v41)
  {

    goto LABEL_3;
  }
  if (v41 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v42)
  {

    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  if ((v41 & 0xC000000000000001) != 0)
  {
    id v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v43 = v80;
    goto LABEL_13;
  }
  uint64_t v43 = v80;
  if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v44 = *(id *)(v41 + 32);
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v45 = SportingEventAlertUpdate.alert.getter();

    uint64_t v46 = (void *)v45;
    unint64_t v47 = (void *)SportingEventAlert.title.getter();
    uint64_t v48 = SportingEventAlertText.arguments.getter();

    if (v48)
    {
      id v49 = v39;
      uint64_t v50 = v84;
      uint64_t v81 = sub_100090AF4(v48, v49);
      uint64_t v84 = v50;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v81 = _swiftEmptyArrayStorage;
    }
    uint64_t v82 = v22;
    uint64_t v51 = (void *)SportingEventAlert.body.getter();
    uint64_t v52 = SportingEventAlertText.arguments.getter();

    if (v52)
    {
      id v53 = v39;
      uint64_t v54 = v84;
      uint64_t v80 = sub_100090AF4(v52, v53);
      uint64_t v84 = v54;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v80 = _swiftEmptyArrayStorage;
    }
    uint64_t v73 = v19;
    SportingEventAlert.sound.getter();
    if (v55)
    {
      static AlertConfiguration.AlertSound.named(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      static AlertConfiguration.AlertSound.default.getter();
    }
    uint64_t v56 = (void *)SportingEventAlert.title.getter();
    SportingEventAlertText.key.getter();
    id v72 = v46;

    String.LocalizationValue.init(_:)();
    id v70 = v39;
    id v57 = [v39 URL];
    uint64_t v58 = v79;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    unsigned int v85 = enum case for LocalizedStringResource.BundleDescription.atURL(_:);
    uint64_t v69 = *(void (**)(uint64_t))(v78 + 104);
    v69(v58);
    static Locale.current.getter();
    sub_100098C50();
    uint64_t v78 = String.init(localized:)();
    uint64_t v71 = v59;
    Swift::String v60 = (void *)SportingEventAlert.body.getter();
    SportingEventAlertText.key.getter();

    String.LocalizationValue.init(_:)();
    id v61 = v70;
    id v62 = [v70 URL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    ((void (*)(uint64_t, void, void *))v69)(v58, v85, v43);
    static Locale.current.getter();
    sub_100098C50();
    String.init(localized:)();
    sub_10009423C((uint64_t)v81);
    swift_bridgeObjectRelease();
    String.init(format:arguments:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100098DCC();
    LocalizedStringResource.init(stringLiteral:)();
    sub_10009423C((uint64_t)v80);
    swift_bridgeObjectRelease();
    String.init(format:arguments:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LocalizedStringResource.init(stringLiteral:)();
    uint64_t v63 = v82;
    uint64_t v64 = v76;
    uint64_t v65 = v77;
    sub_100098C84();
    v66();
    uint64_t v67 = v83;
    AlertConfiguration.init(title:body:sound:)();

    (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v64);
    uint64_t v68 = type metadata accessor for AlertConfiguration();
    sub_1000082C0(v67, 0, 1, v68);
    goto LABEL_4;
  }
  __break(1u);
}

Swift::Int sub_100093FDC()
{
  return sub_10000A954(*v0);
}

unint64_t sub_100093FE4(char a1)
{
  unint64_t result = 0xD00000000000001DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000024;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100094090()
{
  return sub_100093FE4(*v0);
}

void *sub_10009409C(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v23 = a3;
  uint64_t v4 = a2(0);
  sub_100009830();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    uint64_t v27 = _swiftEmptyArrayStorage;
    sub_100017F30(0, v10, 0);
    uint64_t v11 = v27;
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v12 = v6 + 16;
    uint64_t v13 = v14;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v22 = *(void *)(v12 + 56);
    do
    {
      v13(v9, v15, v4);
      uint64_t v27 = v11;
      unint64_t v17 = v11[2];
      unint64_t v16 = v11[3];
      if (v17 >= v16 >> 1) {
        sub_100017F30(v16 > 1, v17 + 1, 1);
      }
      uint64_t v25 = v4;
      uint64_t v26 = v23;
      uint64_t v18 = sub_100029BE0((uint64_t *)&v24);
      v13((char *)v18, (uint64_t)v9, v4);
      uint64_t v19 = v27;
      v27[2] = v17 + 1;
      sub_100008CAC(&v24, (uint64_t)&v19[5 * v17 + 4]);
      sub_100098CB4();
      v20();
      uint64_t v11 = v27;
      v15 += v22;
      --v10;
    }
    while (v10);
  }
  return v11;
}

void *sub_10009423C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    sub_100017F60(0, v1, 0);
    uint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      uint64_t v13 = v2;
      unint64_t v7 = v2[2];
      unint64_t v8 = v2[3];
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1)
      {
        sub_100017F60(v8 > 1, v7 + 1, 1);
        uint64_t v2 = v13;
      }
      v4 += 2;
      uint64_t v11 = &type metadata for String;
      unint64_t v12 = sub_100098A3C();
      *(void *)&long long v10 = v6;
      *((void *)&v10 + 1) = v5;
      v2[2] = v7 + 1;
      sub_100008CAC(&v10, (uint64_t)&v2[5 * v7 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_100094344()
{
  return sub_1000944DC((uint64_t (*)(void))&SportingEventSubscription.Metadata.competitors.getter, (uint64_t (*)(void))&type metadata accessor for SportingEventSubscription.Competitor, (uint64_t)&off_1000F4508);
}

uint64_t sub_10009438C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100005E5C(&qword_1000FC938);
  uint64_t v4 = sub_10001C9AC(v3);
  __chkstk_darwin(v4);
  sub_10001C7A0();
  uint64_t v5 = type metadata accessor for SportsActivityAttributes.EventInfo();
  sub_100009830();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1000098F8();
  uint64_t v11 = v10 - v9;
  SportsActivityAttributes.eventInfo.getter();
  SportsActivityAttributes.EventInfo.startDate.getter();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  uint64_t v12 = type metadata accessor for Date();
  if (sub_1000082E8(v1, 1, v12) != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a1, v1, v12);
  }
  Date.init()();
  return sub_1000095CC(v1, &qword_1000FC938);
}

void *sub_1000944DC(uint64_t (*a1)(void), uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v5 = a1();
  uint64_t v6 = sub_10009409C(v5, a2, a3);
  swift_bridgeObjectRelease();
  return v6;
}

void *sub_10009453C()
{
  return sub_1000944DC((uint64_t (*)(void))&SportsActivityAttributes.contenders.getter, (uint64_t (*)(void))&type metadata accessor for SportsActivityAttributes.Contender, (uint64_t)&off_1000F4568);
}

unint64_t sub_10009458C()
{
  unint64_t result = qword_1000FF1F0;
  if (!qword_1000FF1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FF1F0);
  }
  return result;
}

uint64_t sub_1000945D8@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 <= 0.0)
  {
    return sub_1000082C0(a1, 1, 1, v4);
  }
  else
  {
    Date.init()();
    Date.addingTimeInterval(_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return sub_1000082C0(a1, 0, 1, v4);
  }
}

char *sub_100094708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for RunningClockComponentsFormatter.DataSource();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for Sport();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, a1, v9, v11);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v13, v9);
  if (v14 == enum case for Sport.baseball(_:)) {
    return (char *)sub_100096984(a4);
  }
  if (v14 == enum case for Sport.basketball(_:)
    || v14 == enum case for Sport.football(_:)
    || v14 == enum case for Sport.hockey(_:))
  {
    SportingEventSubscription.createRunningClockDataSource(preferStaticClock:)();
    SportsActivityGenericClock.init(runningClockDataSource:)();
    uint64_t v18 = enum case for SportsActivityClock.generic(_:);
    uint64_t v19 = type metadata accessor for SportsActivityClock();
    return (char *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(a4, v18, v19);
  }
  else if (v14 == enum case for Sport.soccer(_:))
  {
    return sub_100095FF0(a2, a3 & 1, a4);
  }
  else
  {
    uint64_t v20 = enum case for SportsActivityClock.unknown(_:);
    uint64_t v21 = type metadata accessor for SportsActivityClock();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(a4, v20, v21);
    return (char *)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
}

void sub_10009499C(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v20 = a1;
  uint64_t v4 = type metadata accessor for SportingEventPlayLevel();
  uint64_t v19 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SportingEventProgressStatus();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (SportingEventSubscription.shouldDisplayPlayByPlay.getter())
  {
    uint64_t v18 = a3;
    __n128 v11 = (void *)SportingEventSubscription.sportingEventDetails.getter();
    SportingEvent.progressStatus.getter();

    int v12 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
    if (v12 == enum case for SportingEventProgressStatus.inProgress(_:))
    {
      sub_100096DFC(v20, v21, v18);
    }
    else if (v12 == enum case for SportingEventProgressStatus.final(_:))
    {
      uint64_t v13 = SportingEventSubscription.mostRecentPlay.getter();
      uint64_t v14 = v19;
      (*(void (**)(char *, void, uint64_t))(v19 + 104))(v6, enum case for SportingEventPlayLevel.all(_:), v4);
      uint64_t v15 = sub_100090930((uint64_t)v6, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v4);
      if (v15)
      {
        id v16 = v15;
        SportingEventPlay.playDescription.getter();
      }
      SportsActivityPlay.init(isLeftBarVisible:isRightBarVisible:isPlay:text:)();
    }
    else
    {
      static SportsActivityPlay.empty.getter();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  else
  {
    static SportsActivityPlay.empty.getter();
  }
}

uint64_t sub_100094C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  *(unsigned char *)(a1 + 16) = 1;
  swift_beginAccess();
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v8 = &type metadata for TVAppFeatureFlags;
  unint64_t v9 = sub_1000092D4();
  LOBYTE(a2) = isFeatureEnabled(_:)();
  uint64_t result = sub_100006178((uint64_t)v7);
  if (a2)
  {
    uint64_t result = swift_beginAccess();
    *(unsigned char *)(a3 + 16) = 0;
  }
  return result;
}

uint64_t sub_100094D14()
{
  uint64_t v2 = type metadata accessor for SportingEventSubscription.Competitor();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = *(void *)(SportingEventSubscription.Metadata.competitors.getter() + 16);
  swift_bridgeObjectRelease();
  if (v9 != 2)
  {
    sub_10009458C();
    swift_allocError();
    *uint64_t v19 = 1;
    swift_willThrow();
    return v1;
  }
  uint64_t result = SportingEventSubscription.Metadata.competitors.getter();
  if (*(void *)(result + 16))
  {
    uint64_t v25 = v0;
    __n128 v11 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v11(v8, result + v12, v2);
    swift_bridgeObjectRelease();
    uint64_t result = SportingEventSubscription.Metadata.competitors.getter();
    if (*(void *)(result + 16) >= 2uLL)
    {
      v11(v5, result + v12 + *(void *)(v3 + 72), v2);
      swift_bridgeObjectRelease();
      sub_100005E5C(&qword_1000FF278);
      uint64_t v13 = type metadata accessor for SportsActivityAttributes.Contender();
      long long v24 = v5;
      uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 72);
      unint64_t v15 = (*(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1000CB470;
      uint64_t v16 = v1 + v15;
      uint64_t v17 = v25;
      sub_100095244(v16);
      if (v17)
      {
        *(void *)(v1 + 16) = 0;
        swift_release();
        uint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
        v18(v24, v2);
        v18(v8, v2);
      }
      else
      {
        uint64_t v20 = v16 + v14;
        uint64_t v21 = v24;
        sub_100095244(v20);
        uint64_t v22 = *(void (**)(char *, uint64_t))(v3 + 8);
        v22(v21, v2);
        v22(v8, v2);
      }
      return v1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100095034()
{
  uint64_t v0 = sub_100005E5C(&qword_1000FC938);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100005E5C(&qword_1000FD498);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SportingEventSubscription.Metadata();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  SportingEventSubscription.metadata.getter();
  if (sub_1000082E8((uint64_t)v5, 1, v6) == 1)
  {
    sub_1000095CC((uint64_t)v5, &qword_1000FD498);
    uint64_t v10 = type metadata accessor for Date();
    sub_1000082C0((uint64_t)v2, 1, 1, v10);
    return SportsActivityAttributes.EventInfo.init(startDate:)();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    SportingEventSubscription.Metadata.eventStartDate.getter();
    uint64_t v12 = type metadata accessor for Date();
    sub_1000082C0((uint64_t)v2, 0, 1, v12);
    SportsActivityAttributes.EventInfo.init(startDate:)();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_100095244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = type metadata accessor for SportsActivityAttributes.Contender.LogoFilePaths();
  __chkstk_darwin(v1 - 8);
  uint64_t v26 = (uint64_t)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v25 - v11;
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)v25 - v14;
  SportingEventSubscription.Competitor.localLogoUrl.getter();
  if (v16)
  {
    URL.init(string:)();
    swift_bridgeObjectRelease();
    if (sub_1000082E8((uint64_t)v5, 1, v6) == 1)
    {
      sub_1000095CC((uint64_t)v5, (uint64_t *)&unk_1000FDA80);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v5, v6);
      URL.lastPathComponent.getter();
      id v17 = [self defaultManager];
      NSFileManager.currentContainerURL.getter();

      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
      v18(v9, v6);
      URL.path.getter();
      v18(v12, v6);
      v18(v15, v6);
    }
  }
  uint64_t v19 = SportingEventSubscription.Competitor.canonicalId.getter();
  v25[4] = v20;
  v25[5] = v19;
  uint64_t v21 = SportingEventSubscription.Competitor.teamColorHex.getter();
  long long v25[2] = v22;
  v25[3] = v21;
  SportingEventSubscription.Competitor.abbreviation.getter();
  v25[1] = v23;
  SportingEventSubscription.Competitor.name.getter();
  sub_100095598(v26);
  SportingEventSubscription.Competitor.isHome.getter();
  SportingEventSubscription.Competitor.ordinal.getter();
  return SportsActivityAttributes.Contender.init(canonicalId:colorHex:abbreviation:name:localLogoURL:logoFilePaths:isHome:ordinal:)();
}

uint64_t sub_100095598@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  char v77 = *(uint8_t **)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v76 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v69 - v5;
  uint64_t v7 = sub_100005E5C((uint64_t *)&unk_1000FDA80);
  __chkstk_darwin(v7 - 8);
  uint64_t v78 = (void (**)(char *, char *, uint64_t))((char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v69 - v10;
  uint64_t v12 = sub_100005E5C(&qword_1000FD6B8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SportingEventSubscription.Competitor.LogoFilePaths();
  uint64_t v16 = *(void (***)(char *, char *, uint64_t))(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v80 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v79 = (char *)&v69 - v19;
  __chkstk_darwin(v20);
  uint64_t v73 = (char *)&v69 - v21;
  __chkstk_darwin(v22);
  long long v24 = (char *)&v69 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v69 - v26;
  SportingEventSubscription.Competitor.logoFilePaths.getter();
  if (sub_1000082E8((uint64_t)v14, 1, v15) == 1)
  {
    sub_1000095CC((uint64_t)v14, &qword_1000FD6B8);
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_10000929C(v28, (uint64_t)qword_10010A568);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Failed to normalize logos, missing LogoFilePaths.", v31, 2u);
      swift_slowDealloc();
    }

    return SportsActivityAttributes.Contender.LogoFilePaths.init(smallSize:defaultSize:)();
  }
  v16[4](v27, v14, v15);
  SportingEventSubscription.Competitor.LogoFilePaths.smallSize.getter();
  uint64_t v33 = &selRef_setRemoteObjectInterface_;
  uint64_t v71 = v2;
  uint64_t v72 = a1;
  uint64_t v75 = v27;
  if (v34)
  {
    URL.init(string:)();
    swift_bridgeObjectRelease();
    if (sub_1000082E8((uint64_t)v11, 1, v2) != 1)
    {
      URL.lastPathComponent.getter();
      uint64_t v42 = v16;
      uint64_t v43 = (void (*)(char *, uint64_t))*((void *)v77 + 1);
      v43(v11, v2);
      id v44 = [self defaultManager];
      uint64_t v45 = v76;
      NSFileManager.currentContainerURL.getter();

      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      v43(v45, v2);
      uint64_t v74 = URL.path.getter();
      uint64_t v70 = v46;
      v43(v6, v2);
      uint64_t v16 = v42;
      goto LABEL_20;
    }
    sub_1000095CC((uint64_t)v11, (uint64_t *)&unk_1000FDA80);
    uint64_t v33 = &selRef_setRemoteObjectInterface_;
  }
  if (v33[444] != (char *)-1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for Logger();
  sub_10000929C(v35, (uint64_t)qword_10010A568);
  v16[2](v24, v27, v15);
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v74 = swift_slowAlloc();
    uint64_t v82 = v74;
    *(_DWORD *)uint64_t v38 = 136315138;
    uint64_t v39 = SportingEventSubscription.Competitor.LogoFilePaths.smallSize.getter();
    if (v40)
    {
      unint64_t v41 = v40;
    }
    else
    {
      uint64_t v39 = 7104878;
      unint64_t v41 = 0xE300000000000000;
    }
    uint64_t v81 = sub_100017098(v39, v41, &v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v16[1])(v24, v15);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Failed to normalize logo path for small size at %s", v38, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    ((void (*)(char *, uint64_t))v16[1])(v24, v15);
  }

  uint64_t v74 = 0;
  uint64_t v70 = 0;
LABEL_20:
  uint64_t v47 = (uint64_t)v78;
  uint64_t v48 = v75;
  SportingEventSubscription.Competitor.LogoFilePaths.defaultSize.getter();
  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v49 = v71;
  if (sub_1000082E8(v47, 1, v71) == 1)
  {
    sub_1000095CC(v47, (uint64_t *)&unk_1000FDA80);
    if (qword_1000FBDE0 != -1) {
      swift_once();
    }
    uint64_t v50 = type metadata accessor for Logger();
    sub_10000929C(v50, (uint64_t)qword_10010A568);
    uint64_t v51 = v16[2];
    uint64_t v52 = v73;
    v51(v73, v48, v15);
    id v53 = Logger.logObject.getter();
    uint64_t v54 = v48;
    os_log_type_t v55 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v53, v55))
    {
      ((void (*)(char *, uint64_t))v16[1])(v52, v15);

      uint64_t v60 = 0;
      uint64_t v65 = v79;
      uint64_t v59 = v54;
      goto LABEL_28;
    }
    uint64_t v56 = (uint8_t *)swift_slowAlloc();
    uint64_t v82 = swift_slowAlloc();
    uint64_t v78 = v16;
    *(_DWORD *)uint64_t v56 = 136315138;
    char v77 = v56 + 4;
    uint64_t v57 = SportingEventSubscription.Competitor.LogoFilePaths.defaultSize.getter();
    uint64_t v81 = sub_100017098(v57, v58, &v82);
    uint64_t v16 = v78;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v16[1])(v52, v15);
    _os_log_impl((void *)&_mh_execute_header, v53, v55, "Failed to normalize logo path for default size at %s", v56, 0xCu);
    swift_arrayDestroy();
    uint64_t v59 = v75;
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v60 = 0;
  }
  else
  {
    URL.lastPathComponent.getter();
    id v61 = (void (*)(uint64_t, uint64_t))*((void *)v77 + 1);
    v61(v47, v49);
    id v62 = [self defaultManager];
    uint64_t v63 = v76;
    NSFileManager.currentContainerURL.getter();

    URL.appendingPathComponent(_:)();
    uint64_t v59 = v75;
    swift_bridgeObjectRelease();
    v61((uint64_t)v63, v49);
    URL.path.getter();
    uint64_t v60 = v64;
    v61((uint64_t)v6, v49);
    uint64_t v51 = v16[2];
  }
  uint64_t v65 = v79;
LABEL_28:
  v51(v65, v59, v15);
  if (v70)
  {
    uint64_t v66 = v59;
  }
  else
  {
    uint64_t v74 = SportingEventSubscription.Competitor.LogoFilePaths.smallSize.getter();
    uint64_t v66 = v59;
    if (!v67) {
      uint64_t v74 = 0;
    }
    uint64_t v65 = v79;
  }
  uint64_t v68 = v16[1];
  ((void (*)(char *, uint64_t))v68)(v65, v15);
  v51(v80, v66, v15);
  if (!v60) {
    SportingEventSubscription.Competitor.LogoFilePaths.defaultSize.getter();
  }
  ((void (*)(char *, uint64_t))v68)(v80, v15);
  SportsActivityAttributes.Contender.LogoFilePaths.init(smallSize:defaultSize:)();
  return ((uint64_t (*)(char *, uint64_t))v68)(v66, v15);
}

char *sub_100095FF0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  LODWORD(v100) = a2;
  uint64_t v97 = a3;
  uint64_t v4 = type metadata accessor for SportingEventClockPeriodType();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v93 = v4;
  uint64_t v94 = v5;
  __chkstk_darwin(v4);
  uint64_t v87 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_100005E5C(&qword_1000FF248);
  __chkstk_darwin(v91);
  uint64_t v92 = (uint64_t)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100005E5C(&qword_1000FF250);
  __chkstk_darwin(v8 - 8);
  uint64_t v90 = (uint64_t)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v98 = (uint64_t *)((char *)&v84 - v11);
  __chkstk_darwin(v12);
  uint64_t v99 = (uint64_t)&v84 - v13;
  uint64_t v14 = type metadata accessor for SportingEventProgressStatus();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v84 - v19;
  uint64_t v21 = sub_100005E5C(&qword_1000FF258);
  __chkstk_darwin(v21 - 8);
  uint64_t v101 = (uint64_t)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v84 - v24;
  uint64_t v26 = type metadata accessor for RunningClockComponentsFormatter.DataSource();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v96 = (char *)&v84 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v84 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v84 - v33;
  uint64_t v89 = a1;
  SportingEventSubscription.createRunningClockDataSource(preferStaticClock:)();
  uint64_t v35 = type metadata accessor for PenaltyShootoutsViewModel();
  uint64_t v100 = v25;
  uint64_t v88 = v35;
  sub_1000082C0((uint64_t)v25, 1, 1, v35);
  RunningClockComponentsFormatter.DataSource.progressStatus.getter();
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for SportingEventProgressStatus.inProgress(_:), v14);
  LOBYTE(a1) = sub_10006A990((uint64_t)v20, (uint64_t)v17);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v15 + 8);
  v36(v17, v14);
  v36(v20, v14);
  uint64_t v37 = v26;
  uint64_t v38 = v27;
  unint64_t v41 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  uint64_t v39 = v27 + 16;
  unint64_t v40 = v41;
  uint64_t v95 = v34;
  v41(v31, v34, v37);
  if ((a1 & 1) == 0)
  {
    uint64_t v49 = v31;
    uint64_t v48 = *(uint64_t **)(v38 + 8);
    ((void (*)(char *, uint64_t))v48)(v49, v37);
LABEL_26:
    uint64_t v79 = v95;
    v40(v96, v95, v37);
    uint64_t v80 = (uint64_t)v100;
    sub_100098A88((uint64_t)v100, v101, &qword_1000FF258);
    uint64_t v81 = v97;
    SportsActivitySoccerClock.init(runningClockDataSource:penaltyShootoutsViewModel:)();
    sub_1000095CC(v80, &qword_1000FF258);
    ((void (*)(char *, uint64_t))v48)(v79, v37);
    uint64_t v82 = enum case for SportsActivityClock.soccer(_:);
    uint64_t v83 = type metadata accessor for SportsActivityClock();
    return (char *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 104))(v81, v82, v83);
  }
  uint64_t v86 = v38;
  uint64_t v42 = v99;
  RunningClockComponentsFormatter.DataSource.periodType.getter();
  uint64_t v43 = v93;
  uint64_t v44 = (uint64_t)v98;
  (*(void (**)(uint64_t *, void, uint64_t))(v94 + 104))(v98, enum case for SportingEventClockPeriodType.shootouts(_:), v93);
  sub_1000082C0(v44, 0, 1, v43);
  uint64_t v45 = v92;
  uint64_t v46 = v92 + *(int *)(v91 + 48);
  sub_100098A88(v42, v92, &qword_1000FF250);
  sub_100098A88(v44, v46, &qword_1000FF250);
  if (sub_1000082E8(v45, 1, v43) == 1)
  {
    sub_1000095CC((uint64_t)v98, &qword_1000FF250);
    sub_1000095CC(v99, &qword_1000FF250);
    uint64_t v47 = v31;
    uint64_t v48 = *(uint64_t **)(v86 + 8);
    ((void (*)(char *, uint64_t))v48)(v47, v37);
    if (sub_1000082E8(v46, 1, v43) == 1)
    {
      sub_1000095CC(v45, &qword_1000FF250);
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  unsigned int v85 = v40;
  uint64_t v50 = v90;
  sub_100098A88(v45, v90, &qword_1000FF250);
  int v51 = sub_1000082E8(v46, 1, v43);
  uint64_t v52 = v94;
  id v53 = (void (**)(uint64_t, uint64_t))(v94 + 8);
  uint64_t v54 = v86;
  if (v51 == 1)
  {
    sub_1000095CC((uint64_t)v98, &qword_1000FF250);
    sub_1000095CC(v99, &qword_1000FF250);
    os_log_type_t v55 = v31;
    uint64_t v48 = *(uint64_t **)(v54 + 8);
    ((void (*)(char *, uint64_t))v48)(v55, v37);
    (*v53)(v50, v43);
    unint64_t v40 = v85;
LABEL_8:
    sub_1000095CC(v45, &qword_1000FF248);
    goto LABEL_26;
  }
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 32);
  uint64_t v91 = v94 + 8;
  uint64_t v57 = v87;
  v56(v87, v46, v43);
  sub_1000989F4(&qword_1000FF260, (void (*)(uint64_t))&type metadata accessor for SportingEventClockPeriodType);
  LODWORD(v94) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v58 = v52 + 32;
  uint64_t v59 = v45;
  uint64_t v60 = v39;
  uint64_t v61 = v54;
  uint64_t v62 = v37;
  uint64_t v63 = *(void (**)(char *, uint64_t))(v58 - 24);
  v63(v57, v43);
  sub_1000095CC((uint64_t)v98, &qword_1000FF250);
  sub_1000095CC(v99, &qword_1000FF250);
  uint64_t v64 = v31;
  uint64_t v48 = *(uint64_t **)(v61 + 8);
  ((void (*)(char *, uint64_t))v48)(v64, v62);
  v63((char *)v50, v43);
  uint64_t v37 = v62;
  uint64_t v39 = v60;
  sub_1000095CC(v59, &qword_1000FF250);
  unint64_t v40 = v85;
  if ((v94 & 1) == 0) {
    goto LABEL_26;
  }
LABEL_10:
  uint64_t v84 = v39;
  uint64_t v65 = (void *)SportingEventSubscription.sportingEventDetails.getter();
  unint64_t v66 = dispatch thunk of SportingEvent.competitors.getter();

  if (v66 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v67 = *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unsigned int v85 = v40;
  if (!v67)
  {
    swift_bridgeObjectRelease();
LABEL_25:
    uint64_t v77 = v101;
    PenaltyShootoutsViewModel.init(contextualShootouts:)();
    uint64_t v78 = (uint64_t)v100;
    sub_1000095CC((uint64_t)v100, &qword_1000FF258);
    sub_1000082C0(v77, 0, 1, v88);
    sub_100098998(v77, v78, &qword_1000FF258);
    unint64_t v40 = v85;
    goto LABEL_26;
  }
  uint64_t v98 = v48;
  uint64_t v99 = v37;
  uint64_t v102 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100017F10(0, v67 & ~(v67 >> 63), 0);
  if ((v67 & 0x8000000000000000) == 0)
  {
    uint64_t v69 = 0;
    uint64_t v70 = v102;
    do
    {
      if ((v66 & 0xC000000000000001) != 0) {
        id v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v71 = *(id *)(v66 + 8 * v69 + 32);
      }
      uint64_t v72 = v71;
      uint64_t v73 = (void *)SportingEventCompetitorContainer.competitor.getter();
      uint64_t v74 = (void *)SportingEventCompetitor.contextualShootouts()();

      if (!v74) {
        uint64_t v74 = _swiftEmptyArrayStorage;
      }
      uint64_t v102 = v70;
      unint64_t v76 = v70[2];
      unint64_t v75 = v70[3];
      if (v76 >= v75 >> 1)
      {
        sub_100017F10((char *)(v75 > 1), v76 + 1, 1);
        uint64_t v70 = v102;
      }
      ++v69;
      long long v70[2] = v76 + 1;
      v70[v76 + 4] = v74;
    }
    while (v67 != v69);
    swift_bridgeObjectRelease();
    uint64_t v48 = v98;
    uint64_t v37 = v99;
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t sub_100096984@<X0>(uint64_t a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v1 = type metadata accessor for RunningClockComponentsFormatter.DataSource();
  __chkstk_darwin(v1 - 8);
  uint64_t v34 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SportsActivityBaseballClock();
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  __chkstk_darwin(v3);
  uint64_t v33 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SportingEventProgressStatus();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = type metadata accessor for BaseballClockFormatter.FormattedComponents();
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v32 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BaseballClockFormatter();
  static BaseballClockFormatter.formattedComponents(subscription:)();
  sub_100005E5C(&qword_1000FF268);
  uint64_t v15 = swift_allocObject();
  long long v30 = xmmword_1000CB3B0;
  *(_OWORD *)(v15 + 16) = xmmword_1000CB3B0;
  uint64_t v16 = BaseballClockFormatter.FormattedComponents.activeBases.getter();
  char v17 = sub_100090E14(1, v16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 32) = v17 & 1;
  uint64_t v18 = BaseballClockFormatter.FormattedComponents.activeBases.getter();
  char v19 = sub_100090E14(2, v18);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 33) = v19 & 1;
  uint64_t v20 = BaseballClockFormatter.FormattedComponents.activeBases.getter();
  char v21 = sub_100090E14(3, v20);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 34) = v21 & 1;
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v30;
  *(unsigned char *)(v22 + 32) = BaseballClockFormatter.FormattedComponents.outs.getter() > 0;
  *(unsigned char *)(v22 + 33) = BaseballClockFormatter.FormattedComponents.outs.getter() > 1;
  *(unsigned char *)(v22 + 34) = BaseballClockFormatter.FormattedComponents.outs.getter() > 2;
  uint64_t v23 = (void *)SportingEventSubscription.sportingEventDetails.getter();
  SportingEvent.progressStatus.getter();

  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for SportingEventProgressStatus.inProgress(_:), v5);
  sub_10006A990((uint64_t)v11, (uint64_t)v8);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
  v24(v8, v5);
  v24(v11, v5);
  BaseballClockFormatter.FormattedComponents.pitchCount.getter();
  SportingEventSubscription.createRunningClockDataSource(preferStaticClock:)();
  uint64_t v25 = v33;
  SportsActivityBaseballClock.init(basesActiveStates:outsActiveStates:ballsAndStrikes:isActiveBaseVisible:runningClockDataSource:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v32);
  uint64_t v26 = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v37, v25, v36);
  uint64_t v27 = enum case for SportsActivityClock.baseball(_:);
  uint64_t v28 = type metadata accessor for SportsActivityClock();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v26, v27, v28);
}

void sub_100096DFC(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v39[1] = a3;
  uint64_t v5 = sub_100005E5C(&qword_1000FDD98);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SportingEventPlayLevel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v39 - v13;
  sub_100098A88(a2, (uint64_t)v7, &qword_1000FDD98);
  if (sub_1000082E8((uint64_t)v7, 1, v8) == 1)
  {
    sub_1000095CC((uint64_t)v7, &qword_1000FDD98);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    uint64_t v15 = SportingEventSubscription.mostRecentPlay.getter();
    uint64_t v16 = sub_100090930((uint64_t)v14, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    if (v16) {
      goto LABEL_5;
    }
  }
  uint64_t v17 = SportingEventSubscription.mostRecentPlay.getter();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for SportingEventPlayLevel.all(_:), v8);
  uint64_t v16 = sub_100090930((uint64_t)v11, v17);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (!v16)
  {
    static SportsActivityPlay.empty.getter();
    return;
  }
LABEL_5:
  id v18 = v16;
  unint64_t v19 = dispatch thunk of SportingEventPlay.competitors.getter();
  if (v19 >> 62) {
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v20 != 2)
  {
    char v36 = 2;
LABEL_24:
    sub_10009458C();
    swift_allocError();
    *uint64_t v37 = v36;
    swift_willThrow();

    return;
  }
  uint64_t v21 = a1[3];
  uint64_t v22 = a1[4];
  sub_100005EA0(a1, v21);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 32);
  uint64_t v24 = *(void *)(v23(v21, v22) + 16);
  swift_bridgeObjectRelease();
  if (v24 != 2)
  {
    char v36 = 1;
    goto LABEL_24;
  }
  uint64_t v25 = v23(v21, v22);
  if (!*(void *)(v25 + 16))
  {
    __break(1u);
    goto LABEL_28;
  }
  sub_100008B98(v25 + 32, (uint64_t)v40);
  swift_bridgeObjectRelease();
  uint64_t v26 = dispatch thunk of SportingEventPlay.competitors.getter();
  __chkstk_darwin(v26);
  v39[-2] = v40;
  if (v27 < 0 || (v26 & 0x4000000000000000) != 0)
  {
    unint64_t v38 = swift_bridgeObjectRetain();
    uint64_t v28 = (uint64_t)sub_10009762C(v38);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v29 = v39[2];
  uint64_t v41 = v28;
  sub_1000977F8((uint64_t (*)(void **, void **))sub_1000975E4);
  if (v29) {
    goto LABEL_32;
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = v41;
  if ((v41 & 0xC000000000000001) != 0)
  {
LABEL_28:
    uint64_t v33 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_18;
  }
  uint64_t v31 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v31)
  {
    __break(1u);
    goto LABEL_31;
  }
  id v32 = *(id *)(v41 + 32);
  if (v31 == 1)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_release();
    __break(1u);
    return;
  }
  uint64_t v33 = v32;
  id v34 = *(id *)(v30 + 40);
LABEL_18:
  uint64_t v35 = v34;
  swift_release();
  if ((dispatch thunk of SportingEventCompetitorContainer.isActive.getter() & 1) == 0) {
    dispatch thunk of SportingEventCompetitorContainer.isActive.getter();
  }
  SportingEventPlay.playDescription.getter();
  SportsActivityPlay.init(isLeftBarVisible:isRightBarVisible:isPlay:text:)();

  sub_100006178((uint64_t)v40);
}

uint64_t sub_1000972D8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)SportingEventCompetitorContainer.competitor.getter();
  uint64_t v5 = SportingEventCompetitor.canonicalId.getter();
  uint64_t v7 = v6;

  uint64_t v8 = a3[3];
  uint64_t v9 = a3[4];
  sub_100005EA0(a3, v8);
  if (v5 == (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9) && v7 == v10)
  {
    swift_bridgeObjectRelease_n();
    sub_100008B98((uint64_t)a3, (uint64_t)v24);
  }
  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100008B98((uint64_t)a3, (uint64_t)v24);
    char v13 = 0;
    if ((v12 & 1) == 0) {
      goto LABEL_14;
    }
  }
  uint64_t v14 = (void *)SportingEventCompetitorContainer.competitor.getter();
  uint64_t v15 = SportingEventCompetitor.canonicalId.getter();
  uint64_t v17 = v16;

  uint64_t v18 = v25;
  uint64_t v19 = v26;
  sub_100005EA0(v24, v25);
  if (v15 == (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19) && v17 == v20)
  {
    swift_bridgeObjectRelease_n();
    char v13 = 0;
  }
  else
  {
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v13 = v22 ^ 1;
  }
LABEL_14:
  sub_100006178((uint64_t)v24);
  return v13 & 1;
}

void *sub_100097488(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (a1)
  {
    sub_100005E5C(&qword_1000FC8A0);
    uint64_t result = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
    result[2] = a1;
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10009752C(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (a1)
  {
    type metadata accessor for SportingEventCompetitorContainer();
    uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) = a1;
  }
  else
  {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_1000975D4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000975E4(uint64_t a1, uint64_t a2)
{
  return sub_1000972D8(a1, a2, *(void **)(v2 + 16)) & 1;
}

unint64_t sub_100097608(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

void *sub_10009762C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_8;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_100005E5C(&qword_1000FF228);
      uint64_t v3 = (void *)swift_allocObject();
      size_t v4 = j__malloc_size(v3);
      v3[2] = v2;
      v3[3] = (2 * ((uint64_t)(v4 - 32) / 8)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_100098454((uint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v5;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

void *sub_100097720(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100005E5C(&qword_1000FC1C0);
  uint64_t v3 = (void *)swift_allocObject();
  j__malloc_size(v3);
  sub_100098DEC();
  v3[2] = v1;
  v3[3] = v4;
  uint64_t v5 = sub_100098770((uint64_t)&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_10001BB94();
  if (v5 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

uint64_t sub_1000977F8(uint64_t (*a1)(void **, void **))
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    *uint64_t v2 = sub_100098984(v4);
  }
  sub_100097890(a1);
  return specialized ContiguousArray._endMutation()();
}

void sub_100097890(uint64_t (*a1)(void **, void **))
{
  Swift::Int v4 = v1[1];
  Swift::Int v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_135;
    }
    if (v4) {
      sub_100097F90(0, v4, 1, a1);
    }
    return;
  }
  Swift::Int v6 = v5;
  uint64_t v7 = sub_10009752C(v4 / 2);
  uint64_t v99 = v4;
  uint64_t v100 = v8;
  uint64_t v105 = v7;
  uint64_t v93 = v1;
  if (v4 <= 0)
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
    unint64_t v30 = _swiftEmptyArrayStorage[2];
LABEL_94:
    if (v30 >= 2)
    {
      uint64_t v85 = *v93;
      do
      {
        unint64_t v86 = v30 - 2;
        if (v30 < 2) {
          goto LABEL_129;
        }
        if (!v85) {
          goto LABEL_143;
        }
        uint64_t v87 = *(void *)&v11[16 * v86 + 32];
        uint64_t v88 = *(void *)&v11[16 * v30 + 24];
        sub_100098098((char *)(v85 + 8 * v87), (char *)(v85 + 8 * *(void *)&v11[16 * v30 + 16]), v85 + 8 * v88, v100, a1);
        if (v2) {
          goto LABEL_106;
        }
        if (v88 < v87) {
          goto LABEL_130;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_100098440((uint64_t)v11);
        }
        if (v86 >= *((void *)v11 + 2)) {
          goto LABEL_131;
        }
        uint64_t v89 = &v11[16 * v86 + 32];
        *(void *)uint64_t v89 = v87;
        *((void *)v89 + 1) = v88;
        unint64_t v90 = *((void *)v11 + 2);
        if (v30 > v90) {
          goto LABEL_132;
        }
        memmove(&v11[16 * v30 + 16], &v11[16 * v30 + 32], 16 * (v90 - v30));
        *((void *)v11 + 2) = v90 - 1;
        unint64_t v30 = v90 - 1;
      }
      while (v90 > 2);
    }
    swift_bridgeObjectRelease();
    if (v99 >= -1)
    {
LABEL_113:
      *(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
LABEL_109:
    swift_bridgeObjectRelease();

LABEL_111:
LABEL_112:
    if (v99 < -1) {
      goto LABEL_136;
    }
    goto LABEL_113;
  }
  Swift::Int v94 = v6;
  uint64_t v9 = 0;
  uint64_t v10 = *v1;
  uint64_t v92 = *v1 - 8;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  uint64_t v101 = *v1;
  while (1)
  {
    Swift::Int v12 = v9 + 1;
    if (v9 + 1 >= v4) {
      goto LABEL_21;
    }
    id v104 = *(id *)(v10 + 8 * v12);
    uint64_t v103 = *(void **)(v10 + 8 * v9);
    char v13 = v103;
    id v14 = v104;
    uint64_t v3 = v13;
    int v15 = a1(&v104, &v103);
    if (v2)
    {
      swift_bridgeObjectRelease();

      goto LABEL_111;
    }
    int v16 = v15;

    Swift::Int v12 = v9 + 2;
    Swift::Int v95 = v9;
    Swift::Int v4 = v99;
    uint64_t v10 = v101;
    if (v9 + 2 >= v99) {
      goto LABEL_10;
    }
    do
    {
      uint64_t v17 = v10 + 8 * v9;
      uint64_t v18 = *(void **)(v17 + 8);
      id v104 = *(id *)(v17 + 16);
      uint64_t v103 = v18;
      id v19 = v104;
      uint64_t v3 = v18;
      int v20 = a1(&v104, &v103);

      Swift::Int v4 = v99;
      if ((v16 ^ v20))
      {
        Swift::Int v12 = v9 + 2;
        uint64_t v10 = v101;
        if (v16) {
          goto LABEL_11;
        }
LABEL_20:
        uint64_t v9 = v95;
        goto LABEL_21;
      }
      uint64_t v21 = v9 + 3;
      ++v9;
      uint64_t v10 = v101;
    }
    while (v21 < v99);
    Swift::Int v12 = v99;
LABEL_10:
    if ((v16 & 1) == 0) {
      goto LABEL_20;
    }
LABEL_11:
    uint64_t v9 = v95;
    if (v12 < v95) {
      goto LABEL_140;
    }
    if (v95 < v12)
    {
      char v22 = (uint64_t *)(v92 + 8 * v12);
      Swift::Int v23 = v12;
      Swift::Int v24 = v95;
      uint64_t v25 = (uint64_t *)(v10 + 8 * v95);
      do
      {
        if (v24 != --v23)
        {
          if (!v10) {
            goto LABEL_144;
          }
          uint64_t v26 = *v25;
          *uint64_t v25 = *v22;
          *char v22 = v26;
        }
        ++v24;
        --v22;
        ++v25;
      }
      while (v24 < v23);
    }
LABEL_21:
    if (v12 < v4)
    {
      if (__OFSUB__(v12, v9)) {
        goto LABEL_137;
      }
      if (v12 - v9 < v94) {
        break;
      }
    }
LABEL_30:
    if (v12 < v9) {
      goto LABEL_134;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_100098354(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v29 = *((void *)v11 + 2);
    unint64_t v28 = *((void *)v11 + 3);
    unint64_t v30 = v29 + 1;
    uint64_t v10 = v101;
    uint64_t v97 = v12;
    if (v29 >= v28 >> 1)
    {
      uint64_t v84 = sub_100098354((char *)(v28 > 1), v29 + 1, 1, v11);
      uint64_t v10 = v101;
      uint64_t v11 = v84;
    }
    *((void *)v11 + 2) = v30;
    uint64_t v31 = v11 + 32;
    id v32 = &v11[16 * v29 + 32];
    *(void *)id v32 = v9;
    *((void *)v32 + 1) = v97;
    if (v29)
    {
      while (1)
      {
        unint64_t v33 = v30 - 1;
        if (v30 >= 4)
        {
          unint64_t v38 = &v31[16 * v30];
          uint64_t v39 = *((void *)v38 - 8);
          uint64_t v40 = *((void *)v38 - 7);
          BOOL v44 = __OFSUB__(v40, v39);
          uint64_t v41 = v40 - v39;
          if (v44) {
            goto LABEL_119;
          }
          uint64_t v43 = *((void *)v38 - 6);
          uint64_t v42 = *((void *)v38 - 5);
          BOOL v44 = __OFSUB__(v42, v43);
          uint64_t v36 = v42 - v43;
          char v37 = v44;
          if (v44) {
            goto LABEL_120;
          }
          unint64_t v45 = v30 - 2;
          uint64_t v46 = &v31[16 * v30 - 32];
          uint64_t v48 = *(void *)v46;
          uint64_t v47 = *((void *)v46 + 1);
          BOOL v44 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          if (v44) {
            goto LABEL_121;
          }
          BOOL v44 = __OFADD__(v36, v49);
          uint64_t v50 = v36 + v49;
          if (v44) {
            goto LABEL_123;
          }
          if (v50 >= v41)
          {
            uint64_t v68 = &v31[16 * v33];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v44 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v44) {
              goto LABEL_133;
            }
            BOOL v61 = v36 < v71;
            goto LABEL_67;
          }
        }
        else
        {
          if (v30 != 3)
          {
            uint64_t v62 = *((void *)v11 + 4);
            uint64_t v63 = *((void *)v11 + 5);
            BOOL v44 = __OFSUB__(v63, v62);
            uint64_t v55 = v63 - v62;
            char v56 = v44;
            goto LABEL_61;
          }
          uint64_t v35 = *((void *)v11 + 4);
          uint64_t v34 = *((void *)v11 + 5);
          BOOL v44 = __OFSUB__(v34, v35);
          uint64_t v36 = v34 - v35;
          char v37 = v44;
        }
        if (v37) {
          goto LABEL_122;
        }
        unint64_t v45 = v30 - 2;
        int v51 = &v31[16 * v30 - 32];
        uint64_t v53 = *(void *)v51;
        uint64_t v52 = *((void *)v51 + 1);
        BOOL v54 = __OFSUB__(v52, v53);
        uint64_t v55 = v52 - v53;
        char v56 = v54;
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v57 = &v31[16 * v33];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v44 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v44) {
          goto LABEL_126;
        }
        if (__OFADD__(v55, v60)) {
          goto LABEL_128;
        }
        if (v55 + v60 >= v36)
        {
          BOOL v61 = v36 < v60;
LABEL_67:
          if (v61) {
            unint64_t v33 = v45;
          }
          goto LABEL_69;
        }
LABEL_61:
        if (v56) {
          goto LABEL_125;
        }
        uint64_t v64 = &v31[16 * v33];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v44 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v44) {
          goto LABEL_127;
        }
        if (v67 < v55) {
          goto LABEL_78;
        }
LABEL_69:
        unint64_t v72 = v33 - 1;
        if (v33 - 1 >= v30)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10) {
          goto LABEL_141;
        }
        uint64_t v73 = &v31[16 * v72];
        uint64_t v74 = *(void *)v73;
        uint64_t v3 = &v31[16 * v33];
        uint64_t v75 = *((void *)v3 + 1);
        sub_100098098((char *)(v10 + 8 * *(void *)v73), (char *)(v10 + 8 * *(void *)v3), v10 + 8 * v75, v100, a1);
        if (v2)
        {
LABEL_106:
          swift_bridgeObjectRelease();
          goto LABEL_112;
        }
        if (v75 < v74) {
          goto LABEL_116;
        }
        if (v33 > *((void *)v11 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v73 = v74;
        *(void *)&v31[16 * v72 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v33 >= v76) {
          goto LABEL_118;
        }
        unint64_t v30 = v76 - 1;
        memmove(&v31[16 * v33], v3 + 16, 16 * (v76 - 1 - v33));
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v101;
        if (v76 <= 2) {
          goto LABEL_78;
        }
      }
    }
    unint64_t v30 = 1;
LABEL_78:
    uint64_t v9 = v97;
    Swift::Int v4 = v99;
    if (v97 >= v99) {
      goto LABEL_94;
    }
  }
  if (__OFADD__(v9, v94)) {
    goto LABEL_138;
  }
  if (v9 + v94 >= v4) {
    Swift::Int v27 = v4;
  }
  else {
    Swift::Int v27 = v9 + v94;
  }
  if (v27 >= v9)
  {
    if (v12 != v27)
    {
      uint64_t v77 = (void **)(v92 + 8 * v12);
      uint64_t v96 = v9;
      Swift::Int v91 = v27;
      do
      {
        uint64_t v78 = *(void **)(v10 + 8 * v12);
        uint64_t v98 = v77;
        while (1)
        {
          Swift::Int v79 = v12;
          id v104 = v78;
          uint64_t v103 = *v77;
          uint64_t v80 = v103;
          unint64_t v30 = v78;
          uint64_t v3 = v80;
          char v81 = a1(&v104, &v103);
          if (v2) {
            goto LABEL_109;
          }
          char v82 = v81;

          if ((v82 & 1) == 0) {
            break;
          }
          uint64_t v10 = v101;
          if (!v101) {
            goto LABEL_142;
          }
          uint64_t v83 = *v77;
          uint64_t v78 = v77[1];
          *uint64_t v77 = v78;
          v77[1] = v83;
          --v77;
          ++v9;
          Swift::Int v12 = v79;
          if (v79 == v9) {
            goto LABEL_88;
          }
        }
        uint64_t v10 = v101;
        Swift::Int v12 = v79;
LABEL_88:
        ++v12;
        uint64_t v9 = v96;
        uint64_t v77 = v98 + 1;
      }
      while (v12 != v91);
      Swift::Int v12 = v91;
    }
    goto LABEL_30;
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
}

void sub_100097F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void **, void **))
{
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    uint64_t v7 = a1;
    uint64_t v8 = *v4;
    uint64_t v9 = (void **)(*v4 + 8 * a3 - 8);
LABEL_4:
    uint64_t v10 = *(void **)(v8 + 8 * v6);
    uint64_t v18 = v9;
    while (1)
    {
      uint64_t v21 = v10;
      int v20 = *v9;
      uint64_t v11 = v20;
      id v12 = v10;
      id v13 = v11;
      char v14 = a4(&v21, &v20);

      if (v5) {
        break;
      }
      if (v14)
      {
        if (!v8)
        {
          __break(1u);
          return;
        }
        int v15 = *v9;
        uint64_t v10 = v9[1];
        *uint64_t v9 = v10;
        v9[1] = v15;
        --v9;
        if (v6 != ++v7) {
          continue;
        }
      }
      ++v6;
      uint64_t v9 = v18 + 1;
      uint64_t v7 = a1;
      if (v6 != a2) {
        goto LABEL_4;
      }
      return;
    }
  }
}

uint64_t sub_100098098(char *a1, char *a2, unint64_t a3, char *a4, uint64_t (*a5)(id *, void **))
{
  uint64_t v5 = a4;
  unint64_t v6 = a3;
  uint64_t v7 = a2;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 8;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  uint64_t v48 = a1;
  if (v9 >= v11)
  {
    sub_100016580(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    id v13 = &v5[8 * v11];
    if (v48 >= v7 || v10 < 8) {
      goto LABEL_13;
    }
    unint64_t v33 = (char *)(v6 - 8);
    BOOL v44 = v5;
    while (1)
    {
      unint64_t v45 = (unint64_t)v13;
      uint64_t v34 = v13 - 8;
      id v50 = (id)*((void *)v13 - 1);
      uint64_t v35 = v7;
      char v37 = v7 - 8;
      uint64_t v49 = (void *)*((void *)v7 - 1);
      uint64_t v36 = v49;
      id v38 = v50;
      id v39 = v36;
      char v40 = a5(&v50, &v49);
      if (v47) {
        break;
      }
      char v41 = v40;
      uint64_t v42 = v33 + 8;

      if (v41)
      {
        BOOL v43 = v42 != v35 || v33 >= v35;
        uint64_t v7 = v37;
        id v13 = (char *)v45;
      }
      else
      {
        BOOL v43 = v42 != (char *)v45 || (unint64_t)v33 >= v45;
        char v37 = v34;
        id v13 = v34;
        uint64_t v7 = v35;
      }
      if (v43) {
        *(void *)unint64_t v33 = *(void *)v37;
      }
      uint64_t v5 = v44;
      if (v7 > v48)
      {
        v33 -= 8;
        if (v13 > v44) {
          continue;
        }
      }
      goto LABEL_13;
    }

    sub_100016580(v44, (uint64_t)(v45 - (void)v44) / 8, v7);
  }
  else
  {
    sub_100016580(a1, (a2 - a1) / 8, a4);
    id v13 = &v5[8 * v9];
    if ((unint64_t)v7 < v6 && v8 >= 8)
    {
      uint64_t v20 = v47;
      while (1)
      {
        unint64_t v21 = v6;
        char v22 = v7;
        id v50 = *(id *)v7;
        uint64_t v23 = v20;
        uint64_t v49 = *(void **)v5;
        Swift::Int v24 = v49;
        id v25 = v50;
        id v26 = v24;
        char v27 = a5(&v50, &v49);
        uint64_t v20 = v23;
        if (v23)
        {

          uint64_t v16 = (v13 - v5) / 8;
          uint64_t v17 = v5;
          uint64_t v18 = v48;
          goto LABEL_14;
        }
        char v28 = v27;

        if ((v28 & 1) == 0) {
          break;
        }
        unint64_t v29 = v22;
        uint64_t v7 = v22 + 8;
        unint64_t v30 = v48;
        if (v48 != v22) {
          goto LABEL_21;
        }
LABEL_22:
        id v32 = v30 + 8;
        if (v5 >= v13)
        {
          uint64_t v7 = v32;
          goto LABEL_13;
        }
        uint64_t v48 = v32;
        unint64_t v6 = v21;
        if ((unint64_t)v7 >= v21)
        {
          uint64_t v7 = v32;
          goto LABEL_13;
        }
      }
      unint64_t v29 = v5;
      unint64_t v30 = v48;
      BOOL v31 = v48 == v5;
      v5 += 8;
      uint64_t v7 = v22;
      if (v31) {
        goto LABEL_22;
      }
LABEL_21:
      *(void *)unint64_t v30 = *(void *)v29;
      goto LABEL_22;
    }
    uint64_t v7 = a1;
LABEL_13:
    uint64_t v16 = (v13 - v5) / 8;
    uint64_t v17 = v5;
    uint64_t v18 = v7;
LABEL_14:
    sub_100016580(v17, v16, v18);
  }
  return 1;
}

char *sub_100098354(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100005E5C(&qword_1000FF240);
    uint64_t v10 = (char *)swift_allocObject();
    j__malloc_size(v10);
    sub_100098DEC();
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = v11;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  id v12 = v10 + 32;
  id v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_100098440(uint64_t a1)
{
  return sub_100098354(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100098454(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_100098694();
          swift_bridgeObjectRetain();
          for (unint64_t i = 0; i != v7; ++i)
          {
            sub_100005E5C(&qword_1000FF230);
            uint64_t v10 = sub_1000985E4(v13, i, a3);
            id v12 = *v11;
            ((void (*)(void *, void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_100016BE4((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

void (*sub_1000985E4(void *a1, unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_1000986E8(v6, a2, a3);
  return sub_10009864C;
}

void sub_10009864C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

unint64_t sub_100098694()
{
  unint64_t result = qword_1000FF238;
  if (!qword_1000FF238)
  {
    sub_1000061D8(&qword_1000FF230);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FF238);
  }
  return result;
}

void (*sub_1000986E8(void *a1, unint64_t a2, uint64_t a3))(id *a1)
{
  unint64_t v6 = a3 & 0xC000000000000001;
  sub_100097608(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6) {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v7 = *(id *)(a3 + 8 * a2 + 32);
  }
  *a1 = v7;
  return sub_100098768;
}

void sub_100098768(id *a1)
{
}

uint64_t sub_100098770(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    unint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_100098970()
{
}

uint64_t sub_100098984(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100098998(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100005E5C(a3);
  sub_1000098E8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1000989F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100098A3C()
{
  unint64_t result = qword_1000FF270;
  if (!qword_1000FF270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FF270);
  }
  return result;
}

uint64_t sub_100098A88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100005E5C(a3);
  sub_1000098E8();
  sub_100098E0C();
  v4();
  return a2;
}

unsigned char *storeEnumTagSinglePayload for ActivityDataProviderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100098BACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityDataProviderError()
{
  return &type metadata for ActivityDataProviderError;
}

unint64_t sub_100098BE8()
{
  unint64_t result = qword_1000FF280;
  if (!qword_1000FF280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000FF280);
  }
  return result;
}

void sub_100098C34()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_100098C44()
{
  return 0;
}

uint64_t sub_100098C50()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_100098CC0()
{
  return swift_beginAccess();
}

uint64_t sub_100098CE0()
{
  return 0;
}

uint64_t sub_100098CFC()
{
  return *(void *)(v0 - 544);
}

uint64_t sub_100098D18()
{
  uint64_t v3 = *(void *)(v1 - 576);
  uint64_t v4 = *(void *)(v1 - 584);
  return sub_100094C58(v3, v0, v4);
}

uint64_t sub_100098D64()
{
  return swift_allocObject();
}

uint64_t sub_100098DAC()
{
  return v0;
}