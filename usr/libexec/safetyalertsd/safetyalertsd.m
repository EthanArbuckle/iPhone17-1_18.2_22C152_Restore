void sub_100002CDC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  void v8[4];
  id v9;
  uint64_t v10;
  uint8_t buf[4];
  int v12;
  __int16 v13;
  const char *v14;

  v3 = a2;
  v4 = v3;
  if (v3)
  {
    v5 = *(void *)(a1 + 32);
    v6 = *(NSObject **)(v5 + 8);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1000030DC;
    v8[3] = &unk_1000F6B88;
    v10 = v5;
    v9 = v3;
    dispatch_async(v6, v8);
  }
  else
  {
    v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 68289026;
      v12 = 0;
      v13 = 2082;
      v14 = "";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Wifi,setupMonitoringEvent,event nil\"}", buf, 0x12u);
    }
  }
}

void sub_100002E14(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4 = v3;
  if (v3)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    v6 = *(NSObject **)(v5 + 40);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100002F4C;
    v8[3] = &unk_1000F6B88;
    uint64_t v10 = v5;
    id v9 = v3;
    dispatch_async(v6, v8);
  }
  else
  {
    v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 68289026;
      int v12 = 0;
      __int16 v13 = 2082;
      v14 = "";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,setupMonitoringEvent,event nil\"}", buf, 0x12u);
    }
  }
}

void sub_100002F4C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if ([*(id *)(a1 + 32) type] == (id)7)
  {
    v4 = [*(id *)(a1 + 32) info];
    uint64_t v5 = [v4 objectForKeyedSubscript:CWFEventLinkQualityMetricKey];

    unsigned int v6 = [v5 CCA];
    if (!*(unsigned char *)(v2 + 92)) {
      *(unsigned char *)(v2 + 92) = 1;
    }
    *(_DWORD *)(v2 + 88) = v6;
    [v5 rxRate];
    if (v7 != 0.0)
    {
      [v5 rxRate];
      if (!*(unsigned char *)(v2 + 100)) {
        *(unsigned char *)(v2 + 100) = 1;
      }
      *(_DWORD *)(v2 + 96) = (int)v8;
    }
  }
  else
  {
    id v9 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v10[0] = 68289026;
      v10[1] = 0;
      __int16 v11 = 2082;
      int v12 = "";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,setupMonitoringEvent,unexpected type\"}", (uint8_t *)v10, 0x12u);
    }
  }
}

void sub_1000030B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000030DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if ([*(id *)(a1 + 32) type] == (id)7)
  {
    v4 = [*(id *)(a1 + 32) info];
    uint64_t v5 = [v4 objectForKeyedSubscript:CWFEventLinkQualityMetricKey];

    *(_DWORD *)(v2 + 56) = [v5 CCA];
    [v5 rxRate];
    if (v6 != 0.0)
    {
      [v5 rxRate];
      int v8 = (int)v7;
      *(_DWORD *)(v2 + 60) = (int)v7;
      id v9 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        int v12 = 68289283;
        int v13 = 0;
        __int16 v14 = 2082;
        v15 = "";
        __int16 v16 = 1025;
        int v17 = v8;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Wifi,cb\", \"wifiRxPhyRate\":%{private}d}", (uint8_t *)&v12, 0x18u);
      }
      uint64_t v10 = *(void *)(v2 + 48);
      int v12 = v8;
      if (!v10) {
        sub_100005520();
      }
      (*(void (**)(uint64_t, int *))(*(void *)v10 + 48))(v10, &v12);
      *((double *)sub_100003318() + 7) = (double)v8;
    }
  }
  else
  {
    __int16 v11 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 68289026;
      int v13 = 0;
      __int16 v14 = 2082;
      v15 = "";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Wifi,setupMonitoringEvent,unexpected type\"}", (uint8_t *)&v12, 0x12u);
    }
  }
}

void sub_1000032E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100003304(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 8) + 144)) {
    sub_100082F30();
  }
}

long long *sub_100003318()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)qword_100106B00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(qword_100106B00))
  {
    xmmword_100106B10 = (__int128)vdupq_n_s64(0xC08F400000000000);
    xmmword_100106B20 = xmmword_100106B10;
    unk_100106B30 = xmmword_1000B6060;
    dword_100106B40 = 5;
    unk_100106B48 = 0u;
    unk_100106B58 = 0u;
    unk_100106B68 = 0u;
    unk_100106B78 = 0u;
    qword_100106B88 = 0x200000000;
    unk_100106B90 = 0xBFF0000000000000;
    word_100106B98 = 0;
    dword_100106B9C = 0;
    byte_100106BA0 = 0;
    dword_100106BA4 = 0;
    __cxa_atexit((void (*)(void *))sub_1000639A4, &xmmword_100106B10, (void *)&_mh_execute_header);
    __cxa_guard_release(qword_100106B00);
  }
  return &xmmword_100106B10;
}

void *sub_1000033E0(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  sub_100005488((uint64_t)v8, a3);
  *a1 = off_1000F4CC0;
  sub_100005404(v8);
  *a1 = off_1000F4BC0;
  id v6 = v5;
  a1[1] = v6;
  sub_100005488((uint64_t)(a1 + 2), a3);
  a1[6] = 0;
  a1[7] = 0;
  a1[8] = 0;

  return a1;
}

void sub_1000034BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000034E4(uint64_t a1, void **a2)
{
  v4 = (void *)*((unsigned __int8 *)a2 + 23);
  char v5 = (char)v4;
  if ((char)v4 < 0) {
    v4 = a2[1];
  }
  if (v4)
  {
    if (sub_100004E34(*(void *)(a1 + 48), *(void *)(a1 + 56), (unsigned __int8 **)a2) != *(void *)(a1 + 56))
    {
      id v6 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        if (*((char *)a2 + 23) >= 0) {
          double v7 = a2;
        }
        else {
          double v7 = *a2;
        }
        *(void *)buf = 68289283;
        *(_WORD *)&buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2081;
        *(void *)&buf[20] = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pullServiceProd,#warning,notPulling,noInstruction\", \"hash\":%{private, location:escape_only}s}", buf, 0x1Cu);
      }
      if (*((char *)a2 + 23) < 0)
      {
        sub_100004CB8(&__dst, *a2, (unint64_t)a2[1]);
      }
      else
      {
        long long __dst = *(_OWORD *)a2;
        v54 = a2[2];
      }
      sub_100003E2C(a1, 202, &__dst, 0.0);
      if (SHIBYTE(v54) < 0)
      {
        uint64_t v10 = (void *)__dst;
LABEL_109:
        operator delete(v10);
        return;
      }
      return;
    }
    id v9 = sub_10003E368();
    if (*((char *)v9 + 215) < 0)
    {
      sub_100004CB8(&__p, (void *)v9[24], v9[25]);
    }
    else
    {
      long long __p = *((_OWORD *)v9 + 12);
      uint64_t v52 = v9[26];
    }
    std::string::size_type v11 = HIBYTE(v52);
    LOBYTE(v12) = HIBYTE(v52);
    std::string::size_type v13 = *((void *)&__p + 1);
    if (v52 >= 0) {
      uint64_t v14 = HIBYTE(v52);
    }
    else {
      uint64_t v14 = *((void *)&__p + 1);
    }
    if (!v14)
    {
      v15 = sub_10006B474();
      if (v15[47] < 0)
      {
        sub_100004CB8(buf, *((void **)v15 + 3), *((void *)v15 + 4));
      }
      else
      {
        *(_OWORD *)buf = *(_OWORD *)(v15 + 24);
        *(void *)&buf[16] = *((void *)v15 + 5);
      }
      if (SHIBYTE(v52) < 0) {
        operator delete((void *)__p);
      }
      uint64_t v52 = *(void *)&buf[16];
      long long __p = *(_OWORD *)buf;
      std::string::size_type v11 = HIBYTE(*(void *)&buf[16]);
      std::string::size_type v13 = *(void *)&buf[8];
      uint64_t v12 = HIBYTE(*(void *)&buf[16]);
    }
    if ((v12 & 0x80u) == 0) {
      std::string::size_type v16 = v11;
    }
    else {
      std::string::size_type v16 = v13;
    }
    if (!v16)
    {
      int v17 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(void *)buf = 68289026;
        *(_WORD *)&buf[8] = 2082;
        *(void *)&buf[10] = "";
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pullServiceProd,#warning,pullServerUnknown\"}", buf, 0x12u);
      }
      if (*((char *)a2 + 23) < 0)
      {
        sub_100004CB8(&v49, *a2, (unint64_t)a2[1]);
      }
      else
      {
        long long v49 = *(_OWORD *)a2;
        v50 = a2[2];
      }
      sub_100003E2C(a1, -4, &v49, -1.0);
      if ((SHIBYTE(v50) & 0x80000000) == 0) {
        goto LABEL_107;
      }
      v36 = (void *)v49;
      goto LABEL_106;
    }
    if (*((char *)a2 + 23) < 0)
    {
      sub_100004CB8(buf, *a2, (unint64_t)a2[1]);
      std::string::size_type v11 = HIBYTE(v52);
      std::string::size_type v13 = *((void *)&__p + 1);
      LOBYTE(v12) = HIBYTE(v52);
    }
    else
    {
      *(_OWORD *)buf = *(_OWORD *)a2;
      *(void *)&buf[16] = a2[2];
    }
    if ((v12 & 0x80u) == 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if ((v12 & 0x80u) == 0) {
      std::string::size_type v19 = v11;
    }
    else {
      std::string::size_type v19 = v13;
    }
    v20 = std::string::insert((std::string *)buf, 0, p_p, v19);
    long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    int64_t v48 = v20->__r_.__value_.__r.__words[2];
    long long v47 = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    v22 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      if (*((char *)a2 + 23) >= 0) {
        v23 = a2;
      }
      else {
        v23 = *a2;
      }
      v24 = &v47;
      if (v48 < 0) {
        v24 = (long long *)v47;
      }
      *(void *)buf = 68289539;
      *(_WORD *)&buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2081;
      *(void *)&buf[20] = v23;
      __int16 v58 = 2081;
      v59 = v24;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#dbg,#pullServiceProd,request\", \"hash\":%{private, location:escape_only}s, \"url\":%{private, location:escape_only}s}", buf, 0x26u);
    }
    if (v48 >= 0) {
      v25 = &v47;
    }
    else {
      v25 = (long long *)v47;
    }
    v26 = +[NSString stringWithUTF8String:v25];
    v27 = +[NSURL URLWithString:v26];

    if (!v27)
    {
      v32 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        if (*((char *)a2 + 23) >= 0) {
          v33 = a2;
        }
        else {
          v33 = *a2;
        }
        *(void *)buf = 68289283;
        *(_WORD *)&buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2081;
        *(void *)&buf[20] = v33;
        _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pullServiceProd,#warning,requestNotTriggered,urlUnavailable\", \"hash\":%{private, location:escape_only}s}", buf, 0x1Cu);
      }
      if (*((char *)a2 + 23) < 0)
      {
        sub_100004CB8(v45, *a2, (unint64_t)a2[1]);
      }
      else
      {
        *(_OWORD *)v45 = *(_OWORD *)a2;
        v46 = a2[2];
      }
      sub_100003E2C(a1, -4, (long long *)v45, -1.0);
      if (SHIBYTE(v46) < 0) {
        operator delete(v45[0]);
      }
      goto LABEL_104;
    }
    id v28 = [objc_alloc((Class)NSMutableURLRequest) initWithURL:v27];
    v29 = v28;
    if (v28)
    {
      [v28 setHTTPMethod:@"GET"];
      [v29 setAllowsCellularAccess:1];
      double Current = CFAbsoluteTimeGetCurrent();
      if (Current < 0.0) {
        double v31 = -1.0;
      }
      else {
        double v31 = Current;
      }
      if (*((char *)a2 + 23) < 0)
      {
        sub_100004CB8(buf, *a2, (unint64_t)a2[1]);
      }
      else
      {
        *(_OWORD *)buf = *(_OWORD *)a2;
        *(void *)&buf[16] = a2[2];
      }
      v37 = +[NSURLSession sharedSession];
      v40[0] = _NSConcreteStackBlock;
      v40[1] = 3321888768;
      v40[2] = sub_100004010;
      v40[3] = &unk_1000F4C00;
      v40[4] = a1;
      *(double *)&v40[5] = v31;
      if ((buf[23] & 0x80000000) != 0)
      {
        sub_100004CB8(&v41, *(void **)buf, *(unint64_t *)&buf[8]);
      }
      else
      {
        long long v41 = *(_OWORD *)buf;
        uint64_t v42 = *(void *)&buf[16];
      }
      v38 = [v37 dataTaskWithRequest:v29 completionHandler:v40];

      [v38 setTaskDescription:@"SafetyAlertsPull"];
      [v38 resume];

      if (SHIBYTE(v42) < 0) {
        operator delete((void *)v41);
      }
      if ((buf[23] & 0x80000000) == 0) {
        goto LABEL_103;
      }
      v39 = *(void **)buf;
    }
    else
    {
      v34 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        if (*((char *)a2 + 23) >= 0) {
          v35 = a2;
        }
        else {
          v35 = *a2;
        }
        *(void *)buf = 68289283;
        *(_WORD *)&buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2081;
        *(void *)&buf[20] = v35;
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pullServiceProd,#warning,requestNotTriggered,urlNotAllocated\", \"hash\":%{private, location:escape_only}s}", buf, 0x1Cu);
      }
      if (*((char *)a2 + 23) < 0)
      {
        sub_100004CB8(v43, *a2, (unint64_t)a2[1]);
      }
      else
      {
        *(_OWORD *)v43 = *(_OWORD *)a2;
        v44 = a2[2];
      }
      sub_100003E2C(a1, -4, (long long *)v43, -1.0);
      if ((SHIBYTE(v44) & 0x80000000) == 0) {
        goto LABEL_103;
      }
      v39 = v43[0];
    }
    operator delete(v39);
LABEL_103:

LABEL_104:
    if ((SHIBYTE(v48) & 0x80000000) == 0)
    {
LABEL_107:
      if ((SHIBYTE(v52) & 0x80000000) == 0) {
        return;
      }
      uint64_t v10 = (void *)__p;
      goto LABEL_109;
    }
    v36 = (void *)v47;
LABEL_106:
    operator delete(v36);
    goto LABEL_107;
  }
  int v8 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(void *)buf = 68289026;
    *(_WORD *)&buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pullServiceProd,#warning,requestNotTriggered,hashIsEmpty\"}", buf, 0x12u);
    char v5 = *((unsigned char *)a2 + 23);
  }
  if (v5 < 0)
  {
    sub_100004CB8(&v55, *a2, (unint64_t)a2[1]);
  }
  else
  {
    long long v55 = *(_OWORD *)a2;
    v56 = a2[2];
  }
  sub_100003E2C(a1, -4, &v55, -1.0);
  if (SHIBYTE(v56) < 0)
  {
    uint64_t v10 = (void *)v55;
    goto LABEL_109;
  }
}

void sub_100003CE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  if (a41 < 0) {
    operator delete(__p);
  }
  if (a55 < 0) {
    operator delete(a50);
  }
  _Unwind_Resume(a1);
}

void sub_100003E2C(uint64_t a1, uint64_t a2, long long *a3, double a4)
{
  char v7 = *((unsigned char *)a3 + 23);
  if (v7 < 0)
  {
    if (*((void *)a3 + 1)) {
      goto LABEL_3;
    }
  }
  else if (*((unsigned char *)a3 + 23))
  {
LABEL_3:
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3321888768;
    v14[2] = sub_100004A74;
    v14[3] = &unk_1000F4C30;
    v14[4] = a1;
    if (v7 < 0)
    {
      sub_100004CB8(&__p, *(void **)a3, *((void *)a3 + 1));
    }
    else
    {
      long long __p = *a3;
      uint64_t v16 = *((void *)a3 + 2);
    }
    double v17 = a4;
    uint64_t v18 = a2;
    id v9 = objc_retainBlock(v14);
    uint64_t v10 = *(NSObject **)(a1 + 8);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100004C14;
    block[3] = &unk_1000F4C68;
    id v13 = v9;
    std::string::size_type v11 = v9;
    dispatch_async(v10, block);

    if (SHIBYTE(v16) < 0) {
      operator delete((void *)__p);
    }
    return;
  }
  int v8 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289026;
    __int16 v20 = 2082;
    long long v21 = "";
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pullServiceProd,#warning,callbackWithFailure,hashEmpty\"}", (uint8_t *)&buf, 0x12u);
  }
}

void sub_100004010(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(void **)(a1 + 32);
  double Current = CFAbsoluteTimeGetCurrent();
  if (Current < 0.0) {
    double Current = -1.0;
  }
  double v12 = *(double *)(a1 + 40);
  BOOL v13 = Current < 0.0 || v12 < 0.0;
  double v14 = Current - v12;
  if (v13) {
    double v15 = -1.0;
  }
  else {
    double v15 = v14;
  }
  uint64_t v16 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    double v17 = (void *)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      double v17 = (void *)*v17;
    }
    uint64_t buf = 68289795;
    __int16 v57 = 2082;
    __int16 v58 = "";
    __int16 v59 = 2113;
    uint64_t v60 = (uint64_t)v9;
    __int16 v61 = 2081;
    v62 = v17;
    __int16 v63 = 2113;
    id v64 = v8;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#dbg,#pullServiceProd,responseReceived\", \"error\":%{private, location:escape_only}@, \"hash\":%{private, location:escape_only}s, \"response\":%{private, location:escape_only}@}", (uint8_t *)&buf, 0x30u);
  }
  if (v9)
  {
    uint64_t v18 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t buf = 68289283;
      __int16 v57 = 2082;
      __int16 v58 = "";
      __int16 v59 = 2113;
      uint64_t v60 = (uint64_t)v9;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pullServiceProd,#warning,response,requestFailed\", \"error\":%{private, location:escape_only}@}", (uint8_t *)&buf, 0x1Cu);
    }
    if (*(char *)(a1 + 71) < 0)
    {
      sub_100004CB8(&__dst, *(void **)(a1 + 48), *(void *)(a1 + 56));
    }
    else
    {
      long long __dst = *(_OWORD *)(a1 + 48);
      uint64_t v55 = *(void *)(a1 + 64);
    }
    sub_100003E2C((uint64_t)v10, -3, &__dst, v15);
    if (SHIBYTE(v55) < 0)
    {
      id v28 = (void *)__dst;
LABEL_51:
      operator delete(v28);
      goto LABEL_79;
    }
    goto LABEL_79;
  }
  if (objc_opt_respondsToSelector())
  {
    id v19 = [v8 statusCode];
    __int16 v20 = SALogObjectGeneral;
    BOOL v21 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    if (v19 != (id)200)
    {
      if (v21)
      {
        uint64_t buf = 68289283;
        __int16 v57 = 2082;
        __int16 v58 = "";
        __int16 v59 = 2049;
        uint64_t v60 = (uint64_t)v19;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pullServiceProd,#warning,responseError\", \"responseCode\":%{private}ld}", (uint8_t *)&buf, 0x1Cu);
      }
      if (*(char *)(a1 + 71) < 0)
      {
        sub_100004CB8(__p, *(void **)(a1 + 48), *(void *)(a1 + 56));
      }
      else
      {
        *(_OWORD *)long long __p = *(_OWORD *)(a1 + 48);
        uint64_t v51 = *(void *)(a1 + 64);
      }
      sub_100003E2C((uint64_t)v10, (uint64_t)v19, (long long *)__p, v15);
      if (SHIBYTE(v51) < 0)
      {
        id v28 = __p[0];
        goto LABEL_51;
      }
      goto LABEL_79;
    }
    if (v21)
    {
      uint64_t buf = 68289283;
      __int16 v57 = 2082;
      __int16 v58 = "";
      __int16 v59 = 2049;
      uint64_t v60 = 200;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pullServiceProd,responseSuccess\", \"responseCode\":%{private}ld}", (uint8_t *)&buf, 0x1Cu);
    }
    v22 = +[NSJSONSerialization JSONObjectWithData:v7 options:0 error:0];
    v23 = v22;
    if (!v22)
    {
      double v31 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        v32 = (void *)(a1 + 48);
        if (*(char *)(a1 + 71) < 0) {
          v32 = (void *)*v32;
        }
        uint64_t buf = 68289539;
        __int16 v57 = 2082;
        __int16 v58 = "";
        __int16 v59 = 2049;
        uint64_t v60 = -5;
        __int16 v61 = 2081;
        v62 = v32;
        _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pullServiceProd,#warning,responseError,nilResponse\", \"responseCode\":%{private}ld, \"hash\":%{private, location:escape_only}s}", (uint8_t *)&buf, 0x26u);
      }
      if (*(char *)(a1 + 71) < 0)
      {
        sub_100004CB8(v48, *(void **)(a1 + 48), *(void *)(a1 + 56));
      }
      else
      {
        *(_OWORD *)int64_t v48 = *(_OWORD *)(a1 + 48);
        uint64_t v49 = *(void *)(a1 + 64);
      }
      sub_100003E2C((uint64_t)v10, -5, (long long *)v48, v15);
      if (SHIBYTE(v49) < 0) {
        operator delete(v48[0]);
      }
      goto LABEL_78;
    }
    v25 = [v22 objectForKey:@"message"];
    if (v25
      && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
      && [v25 hasPrefix:@"No alert with ID"])
    {
      v26 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        v27 = (void *)(a1 + 48);
        if (*(char *)(a1 + 71) < 0) {
          v27 = (void *)*v27;
        }
        uint64_t buf = 68289539;
        __int16 v57 = 2082;
        __int16 v58 = "";
        __int16 v59 = 2049;
        uint64_t v60 = -5;
        __int16 v61 = 2081;
        v62 = v27;
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pullServiceProd,#warning,responseError,hashNotFound\", \"responseCode\":%{private}ld, \"hash\":%{private, location:escape_only}s}", (uint8_t *)&buf, 0x26u);
      }
      if (*(char *)(a1 + 71) < 0)
      {
        sub_100004CB8(v46, *(void **)(a1 + 48), *(void *)(a1 + 56));
      }
      else
      {
        *(_OWORD *)v46 = *(_OWORD *)(a1 + 48);
        uint64_t v47 = *(void *)(a1 + 64);
      }
      sub_100003E2C((uint64_t)v10, -5, (long long *)v46, v15);
      if ((SHIBYTE(v47) & 0x80000000) == 0) {
        goto LABEL_77;
      }
      v38 = v46[0];
    }
    else
    {
      if (SACoreTelephonyProd::isAdditionalDetailsPresent((SACoreTelephonyProd *)v23, v24))
      {
        v30 = v10[1];
        v39[0] = _NSConcreteStackBlock;
        v39[1] = 3221225472;
        v39[2] = sub_1000048A4;
        v39[3] = &unk_1000F4BE0;
        long long v41 = v10;
        double v42 = v15;
        uint64_t v43 = 200;
        id v40 = v23;
        dispatch_async(v30, v39);

LABEL_77:
LABEL_78:

        goto LABEL_79;
      }
      v33 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        v34 = (void *)(a1 + 48);
        if (*(char *)(a1 + 71) < 0) {
          v34 = (void *)*v34;
        }
        uint64_t buf = 68289539;
        __int16 v57 = 2082;
        __int16 v58 = "";
        __int16 v59 = 2049;
        uint64_t v60 = 200;
        __int16 v61 = 2081;
        v62 = v34;
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pullServiceProd,#warning,responseError,noAddlDetails\", \"responseCode\":%{private}ld, \"hash\":%{private, location:escape_only}s}", (uint8_t *)&buf, 0x26u);
      }
      v35 = v10 + 6;
      unint64_t v36 = v10[7];
      if (v36 >= v10[8])
      {
        uint64_t v37 = sub_100004F4C(v35, (long long *)(a1 + 48));
      }
      else
      {
        sub_100004EEC(v35, (long long *)(a1 + 48));
        uint64_t v37 = v36 + 24;
      }
      v10[7] = v37;
      if (*(char *)(a1 + 71) < 0)
      {
        sub_100004CB8(&v44, *(void **)(a1 + 48), *(void *)(a1 + 56));
      }
      else
      {
        long long v44 = *(_OWORD *)(a1 + 48);
        uint64_t v45 = *(void *)(a1 + 64);
      }
      sub_100003E2C((uint64_t)v10, 202, &v44, v15);
      if ((SHIBYTE(v45) & 0x80000000) == 0) {
        goto LABEL_77;
      }
      v38 = (void *)v44;
    }
    operator delete(v38);
    goto LABEL_77;
  }
  v29 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289026;
    __int16 v57 = 2082;
    __int16 v58 = "";
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pullServiceProd,#warning,responseError,kResponseCodeMissing\"}", (uint8_t *)&buf, 0x12u);
  }
  if (*(char *)(a1 + 71) < 0)
  {
    sub_100004CB8(&v52, *(void **)(a1 + 48), *(void *)(a1 + 56));
  }
  else
  {
    long long v52 = *(_OWORD *)(a1 + 48);
    uint64_t v53 = *(void *)(a1 + 64);
  }
  sub_100003E2C((uint64_t)v10, -2, &v52, v15);
  if (SHIBYTE(v53) < 0)
  {
    id v28 = (void *)v52;
    goto LABEL_51;
  }
LABEL_79:
}

void sub_1000047D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  if (a29 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1000048A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  double v4 = *(double *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  id v6 = *(id *)(a1 + 32);
  sub_10000499C(v2 + 16, v5, v6, v4);
}

void sub_100004970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_100004984(uint64_t a1)
{
}

void sub_10000499C(uint64_t a1, uint64_t a2, void *a3, double a4)
{
  double v8 = a4;
  uint64_t v7 = a2;
  id v6 = a3;
  uint64_t v5 = *(void *)(a1 + 24);
  if (!v5) {
    sub_100005520();
  }
  (*(void (**)(uint64_t, double *, uint64_t *, id *))(*(void *)v5 + 48))(v5, &v8, &v7, &v6);
}

void sub_100004A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void *sub_100004A30(uint64_t a1, uint64_t a2)
{
  result = (void *)(a1 + 48);
  if (*(char *)(a2 + 71) < 0) {
    return sub_100004CB8(result, *(void **)(a2 + 48), *(void *)(a2 + 56));
  }
  long long v3 = *(_OWORD *)(a2 + 48);
  result[2] = *(void *)(a2 + 64);
  *(_OWORD *)result = v3;
  return result;
}

void sub_100004A60(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
}

void sub_100004A74(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = objc_alloc((Class)NSMutableDictionary);
  double v4 = (void *)(a1 + 40);
  if (*(char *)(a1 + 63) < 0) {
    double v4 = (void *)*v4;
  }
  uint64_t v5 = +[NSString stringWithUTF8String:v4];
  id v6 = [v3 initWithObjectsAndKeys:v5, @"SafetyAlertMissingForHash", 0];

  if (v6)
  {
    sub_10000499C(v2 + 16, *(void *)(a1 + 72), v6, *(double *)(a1 + 64));
  }
  else
  {
    uint64_t v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v9 = 0;
      __int16 v10 = 2082;
      std::string::size_type v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pullServiceProd,#warning,callbackWithFailure,cantCreateDictionary\"}", buf, 0x12u);
    }
  }
}

void sub_100004BAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_100004BD0(uint64_t a1, uint64_t a2)
{
  result = (void *)(a1 + 40);
  if (*(char *)(a2 + 63) < 0) {
    return sub_100004CB8(result, *(void **)(a2 + 40), *(void *)(a2 + 48));
  }
  long long v3 = *(_OWORD *)(a2 + 40);
  result[2] = *(void *)(a2 + 56);
  *(_OWORD *)result = v3;
  return result;
}

void sub_100004C00(uint64_t a1)
{
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
}

void sub_100004C14(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100004C64(uint64_t a1)
{
  sub_1000052F8(a1);

  operator delete();
}

void sub_100004CA4(void *a1)
{
}

void *sub_100004CB8(unsigned char *__dst, void *__src, unint64_t a3)
{
  uint64_t v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8) {
      sub_100004D58();
    }
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17) {
      uint64_t v6 = a3 | 7;
    }
    uint64_t v7 = v6 + 1;
    double v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    *uint64_t v5 = v8;
    uint64_t v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }

  return memmove(v5, __src, a3 + 1);
}

void sub_100004D58()
{
}

void sub_100004D70(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_100004DCC(exception, a1);
}

void sub_100004DB8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_100004DCC(std::logic_error *a1, const char *a2)
{
  result = std::logic_error::logic_error(a1, a2);
  return result;
}

void sub_100004E00()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

uint64_t sub_100004E34(uint64_t a1, uint64_t a2, unsigned __int8 **a3)
{
  uint64_t v3 = a1;
  if (a1 != a2)
  {
    char v5 = *((unsigned char *)a3 + 23);
    if (v5 >= 0) {
      uint64_t v6 = (unsigned __int8 *)*((unsigned __int8 *)a3 + 23);
    }
    else {
      uint64_t v6 = a3[1];
    }
    if (v5 >= 0) {
      uint64_t v7 = (unsigned __int8 *)a3;
    }
    else {
      uint64_t v7 = *a3;
    }
    do
    {
      uint64_t v8 = *(unsigned __int8 *)(v3 + 23);
      if ((v8 & 0x80u) == 0) {
        int v9 = (unsigned __int8 *)*(unsigned __int8 *)(v3 + 23);
      }
      else {
        int v9 = *(unsigned __int8 **)(v3 + 8);
      }
      if (v9 == v6)
      {
        if ((v8 & 0x80) != 0)
        {
          if (!memcmp(*(const void **)v3, v7, *(void *)(v3 + 8))) {
            return v3;
          }
        }
        else
        {
          if (!*(unsigned char *)(v3 + 23)) {
            return v3;
          }
          uint64_t v10 = 0;
          while (*(unsigned __int8 *)(v3 + v10) == v7[v10])
          {
            if (v8 == ++v10) {
              return v3;
            }
          }
        }
      }
      v3 += 24;
    }
    while (v3 != a2);
    return a2;
  }
  return v3;
}

void *sub_100004EEC(void *result, long long *a2)
{
  uint64_t v2 = result;
  uint64_t v3 = result[1];
  if (*((char *)a2 + 23) < 0)
  {
    result = sub_100004CB8((unsigned char *)result[1], *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *(void *)(v3 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v3 = v4;
  }
  v2[1] = v3 + 24;
  return result;
}

void sub_100004F44(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_100004F4C(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_1000050E8();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v18 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_100005100(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  std::string::size_type v11 = &v10[24 * v4];
  v15[0] = v10;
  v15[1] = v11;
  uint64_t v16 = v11;
  double v17 = &v10[24 * v9];
  if (*((char *)a2 + 23) < 0)
  {
    sub_100004CB8(v11, *(void **)a2, *((void *)a2 + 1));
    std::string::size_type v11 = v16;
  }
  else
  {
    long long v12 = *a2;
    *((void *)v11 + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string::size_type v11 = v12;
  }
  uint64_t v16 = v11 + 24;
  sub_100005070(a1, v15);
  uint64_t v13 = a1[1];
  sub_100005268((uint64_t)v15);
  return v13;
}

void sub_10000505C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100005268((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100005070(uint64_t *a1, void *a2)
{
  uint64_t result = sub_100005148((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void sub_1000050E8()
{
}

void *sub_100005100(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_100004E00();
  }
  return operator new(24 * a2);
}

uint64_t sub_100005148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 8) = 0;
      *(void *)(a3 - 24) = 0;
      v7 -= 24;
      a3 -= 24;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v9;
  }
  char v13 = 1;
  sub_1000051E8((uint64_t)v12);
  return a6;
}

uint64_t sub_1000051E8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100005220(a1);
  }
  return a1;
}

void sub_100005220(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    v1 += 24;
  }
}

uint64_t sub_100005268(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1000052A0(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      uint64_t v5 = v2 - 3;
      *(void *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        uint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

uint64_t sub_1000052F8(uint64_t a1)
{
  *(void *)a1 = off_1000F4BC0;
  uint64_t v3 = (void **)(a1 + 48);
  sub_100005360(&v3);
  sub_100005404((void *)(a1 + 16));

  return a1;
}

void sub_100005360(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_1000053B4((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_1000053B4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

void *sub_100005404(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_100005488(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100005520()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = &off_1000F4D00;
}

void sub_100005570(std::exception *a1)
{
  std::exception::~exception(a1);

  operator delete();
}

uint64_t sub_1000055A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(void *)a1 = off_1000F4D28;
  id v4 = v3;
  *(void *)(a1 + 8) = v4;
  sub_10000F758(a1 + 24);
  sub_10000F758(a1 + 216);
  sub_10000F758(a1 + 408);
  sub_10000F818(a1 + 600);
  sub_10000F758(a1 + 792);
  sub_10000F818(a1 + 984);
  sub_10000F818(a1 + 1176);
  sub_10000F818(a1 + 1368);
  sub_10000F818(a1 + 1560);
  *(unsigned char *)(a1 + 1752) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v8 = 0;
    __int16 v9 = 2082;
    long long v10 = "";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,initialized\"}", buf, 0x12u);
  }

  return a1;
}

void sub_100005724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
}

void sub_1000057A4()
{
}

void sub_1000057AC()
{
}

void sub_1000057B4()
{
}

void sub_1000057BC()
{
}

uint64_t sub_1000057C4(uint64_t a1)
{
  if (*(char *)(a1 + 183) < 0) {
    operator delete(*(void **)(a1 + 160));
  }
  sub_10000DA94((void *)(a1 + 104));
  sub_10000DB18((void *)(a1 + 72));
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  id v3 = (void **)(a1 + 24);
  sub_10000DB9C(&v3);
  return a1;
}

uint64_t sub_100005830(uint64_t a1)
{
  if (*(char *)(a1 + 183) < 0) {
    operator delete(*(void **)(a1 + 160));
  }
  sub_10000DC40((void *)(a1 + 104));
  sub_10000DCC4((void *)(a1 + 72));
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  id v3 = (void **)(a1 + 24);
  sub_10000DB9C(&v3);
  return a1;
}

void sub_10000589C(uint64_t a1, uint64_t a2, double a3)
{
  if (a3 < 0.0 || !*(void *)(a2 + 24))
  {
    uint64_t v5 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    uint64_t v6 = "{\"msg%{public}.0s\":\"#saBiomeProd,#warning,fetch,invalidArgs,skipping\"}";
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 16) == 1)
  {
    uint64_t v5 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    uint64_t v6 = "{\"msg%{public}.0s\":\"#saBiomeProd,#warning,fetch,alreadyInProgress,skipping\"}";
LABEL_8:
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, v6, (uint8_t *)&buf, 0x12u);
    return;
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
  *(_DWORD *)(a1 + 16) = 1;
  int v8 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    buf.__r_.__value_.__r.__words[0] = 68289282;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    WORD1(buf.__r_.__value_.__r.__words[2]) = 1026;
    HIDWORD(buf.__r_.__value_.__r.__words[2]) = (int)a3;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,fetch\", \"lookbackSeconds\":%{public}d}", (uint8_t *)&buf, 0x18u);
  }
  double Current = CFAbsoluteTimeGetCurrent();
  sub_10000DD48(&buf, "wifiAssoc");
  std::string::operator=((std::string *)(a1 + 184), &buf);
  double v10 = Current - a3;
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  v35[0] = _NSConcreteStackBlock;
  v35[1] = 3321888768;
  v35[2] = sub_100006714;
  v35[3] = &unk_1000F4DF0;
  v35[4] = a1;
  *(double *)&v35[5] = v10;
  sub_10000F63C((uint64_t)v36, a2);
  v38 = 0;
  v37[0] = off_1000F4E78;
  v37[1] = objc_retainBlock(v35);
  v38 = v37;
  sub_10000628C(a1, 1, (uint64_t)v37, v10);
  sub_10000F6D4(v37);
  sub_10000DD48(&buf, "wifiQuality");
  std::string::operator=((std::string *)(a1 + 760), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3321888768;
  v31[2] = sub_100006FBC;
  v31[3] = &unk_1000F4DF0;
  v31[4] = a1;
  *(double *)&v31[5] = v10;
  sub_10000F63C((uint64_t)v32, a2);
  v34 = 0;
  v33[0] = off_1000F4E78;
  v33[1] = objc_retainBlock(v31);
  v34 = v33;
  sub_100006B34(a1, 1, (uint64_t)v33, v10);
  sub_10000F6D4(v33);
  sub_10000DD48(&buf, "wow");
  std::string::operator=((std::string *)(a1 + 568), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3321888768;
  v27[2] = sub_100007690;
  v27[3] = &unk_1000F4DF0;
  v27[4] = a1;
  *(double *)&v27[5] = v10;
  sub_10000F63C((uint64_t)v28, a2);
  v30 = 0;
  v29[0] = off_1000F4E78;
  v29[1] = objc_retainBlock(v27);
  v30 = v29;
  sub_100007208(a1, 1, (uint64_t)v29, v10);
  sub_10000F6D4(v29);
  sub_10000DD48(&buf, "cellAvailability");
  std::string::operator=((std::string *)(a1 + 376), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3321888768;
  v23[2] = sub_100007AA8;
  v23[3] = &unk_1000F4DF0;
  v23[4] = a1;
  *(double *)&v23[5] = v10;
  sub_10000F63C((uint64_t)v24, a2);
  v26 = 0;
  v25[0] = off_1000F4E78;
  v25[1] = objc_retainBlock(v23);
  v26 = v25;
  sub_1000078DC(a1, 1, (uint64_t)v25, v10);
  sub_10000F6D4(v25);
  sub_10000DD48(&buf, "cellQuality");
  std::string::operator=((std::string *)(a1 + 1144), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  sub_10000DD48(&buf, "cellRat");
  std::string::operator=((std::string *)(a1 + 1336), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  sub_10000DD48(&buf, "cellRrc");
  std::string::operator=((std::string *)(a1 + 1528), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3321888768;
  v19[2] = sub_100007EC0;
  v19[3] = &unk_1000F4DF0;
  v19[4] = a1;
  *(double *)&v19[5] = v10;
  sub_10000F63C((uint64_t)v20, a2);
  v22 = 0;
  v21[0] = off_1000F4E78;
  v21[1] = objc_retainBlock(v19);
  v22 = v21;
  sub_100007CF4(a1, 1, (uint64_t)v21, v10);
  sub_10000F6D4(v21);
  sub_10000DD48(&buf, "cellDataSwitch");
  std::string::operator=((std::string *)(a1 + 952), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3321888768;
  void v15[2] = sub_10000859C;
  v15[3] = &unk_1000F4DF0;
  v15[4] = a1;
  *(double *)&v15[5] = v10;
  sub_10000F63C((uint64_t)v16, a2);
  uint64_t v18 = 0;
  v17[0] = off_1000F4E78;
  v17[1] = objc_retainBlock(v15);
  uint64_t v18 = v17;
  sub_100008114(a1, 1, (uint64_t)v17, v10);
  sub_10000F6D4(v17);
  sub_10000DD48(&buf, "apsdConnectivityStatus");
  std::string::operator=((std::string *)(a1 + 1720), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3321888768;
  v11[2] = sub_100008C70;
  v11[3] = &unk_1000F4DF0;
  v11[4] = a1;
  *(double *)&v11[5] = v10;
  sub_10000F63C((uint64_t)v12, a2);
  long long v14 = 0;
  v13[0] = off_1000F4E78;
  v13[1] = objc_retainBlock(v11);
  long long v14 = v13;
  sub_1000087E8(a1, 1, (uint64_t)v13, v10);
  sub_10000F6D4(v13);
  sub_10000F6D4(v12);
  sub_10000F6D4(v16);
  sub_10000F6D4(v20);
  sub_10000F6D4(v24);
  sub_10000F6D4(v28);
  sub_10000F6D4(v32);
  sub_10000F6D4(v36);
}

void sub_1000060F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_10000F6D4(va);
  sub_10000F6D4(v17);
  sub_10000F6D4(v16);
  sub_10000F6D4(v15);
  sub_10000F6D4(v14);
  sub_10000F6D4(v13);
  sub_10000F6D4(v12);
  sub_10000F6D4(v11);
  _Unwind_Resume(a1);
}

void sub_10000628C(uint64_t a1, int a2, uint64_t a3, double a4)
{
  int v8 = BiomeLibrary();
  __int16 v9 = [v8 Device];
  double v10 = [v9 Wireless];
  std::string::size_type v11 = [v10 WiFi];
  sub_10000F63C((uint64_t)v25, a3);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_10000998C;
  v22[3] = &unk_1000F4E20;
  v24 = 0;
  v22[4] = a1;
  v23[0] = off_1000F51C8;
  v23[1] = objc_retainBlock(v22);
  v24 = v23;
  id v12 = v11;
  if (a2 == 1)
  {
    id v16 = objc_alloc((Class)BMPublisherOptions);
    long long v14 = +[NSDate dateWithTimeIntervalSinceReferenceDate:a4];
    id v15 = [v16 initWithStartDate:0 endDate:v14 maxEvents:0 lastN:1 reversed:0];
  }
  else
  {
    if (a2) {
      goto LABEL_8;
    }
    id v13 = objc_alloc((Class)BMPublisherOptions);
    long long v14 = +[NSDate dateWithTimeIntervalSinceReferenceDate:a4];
    id v15 = [v13 initWithStartDate:v14 endDate:0 maxEvents:0 lastN:0 reversed:0];
  }
  double v17 = v15;

  if (v17)
  {
    uint64_t v18 = [v12 publisherWithOptions:v17];
    if (v18)
    {
      *(void *)std::string buf = _NSConcreteStackBlock;
      *(void *)&long long v29 = 3321888768;
      *((void *)&v29 + 1) = sub_100011E0C;
      v30 = &unk_1000F5028;
      uint64_t v31 = a1;
      sub_10000F63C((uint64_t)v32, (uint64_t)v25);
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3321888768;
      v26[2] = sub_100012010;
      v26[3] = &unk_1000F5188;
      v26[4] = a1;
      sub_1000122BC((uint64_t)v27, (uint64_t)v23);
      id v19 = [v18 sinkWithCompletion:buf receiveInput:v26];
      sub_10001248C(v27);
      sub_10000F6D4(v32);
    }
    else
    {
      BOOL v21 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::string buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        LOWORD(v29) = 2082;
        *(void *)((char *)&v29 + 2) = "";
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saBiomeProd,invokeBiomeFailed,noPublisher\"}", buf, 0x12u);
      }
    }

    goto LABEL_13;
  }
LABEL_8:
  __int16 v20 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::string buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v29) = 2082;
    *(void *)((char *)&v29 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saBiomeProd,invokeBiomeFailed,noOptions\"}", buf, 0x12u);
  }
LABEL_13:

  sub_10001248C(v23);
  sub_10000F6D4(v25);
}

void sub_100006664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  uint64_t v20 = va_arg(va1, void);
  uint64_t v21 = va_arg(va1, void);
  id v15 = v11;
  sub_10001248C(v15);
  sub_10000F6D4(v14);

  sub_10001248C((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);

  _Unwind_Resume(a1);
}

void *sub_100006714(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  double v2 = *(double *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768;
  v4[2] = sub_100006858;
  v4[3] = &unk_1000F4DC0;
  v4[4] = v1;
  sub_10000F63C((uint64_t)v5, a1 + 48);
  uint64_t v7 = 0;
  v6[0] = off_1000F4E78;
  v6[1] = objc_retainBlock(v4);
  uint64_t v7 = v6;
  sub_10000628C(v1, 0, (uint64_t)v6, v2);
  sub_10000F6D4(v6);
  return sub_10000F6D4(v5);
}

void sub_100006834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_10000F6D4((uint64_t *)va);
  sub_10000F6D4(v10);
  _Unwind_Resume(a1);
}

void *sub_100006858(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 68289026;
    int v7 = 0;
    __int16 v8 = 2082;
    __int16 v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,fetch,wifiAssocComplete\"}", buf, 0x12u);
  }
  *(unsigned char *)(v2 + 24) = 1;
  sub_10000F63C((uint64_t)v5, a1 + 40);
  sub_100006960(v2, (uint64_t)v5);
  return sub_10000F6D4(v5);
}

void sub_100006944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100006960(uint64_t result, uint64_t a2)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v2 = (unsigned char *)result;
    if (*(unsigned char *)(result + 600))
    {
      if (*(unsigned char *)(result + 408)
        && *(unsigned char *)(result + 216)
        && *(unsigned char *)(result + 984)
        && *(unsigned char *)(result + 1176)
        && *(unsigned char *)(result + 1368)
        && *(unsigned char *)(result + 792)
        && *(unsigned char *)(result + 1560))
      {
        *(_DWORD *)(result + 16) = 2;
        if (*(unsigned char *)(result + 1752))
        {
          id v4 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            int v6 = 68289026;
            int v7 = 0;
            __int16 v8 = 2082;
            __int16 v9 = "";
            _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,#warning,fetchCompleteButResetTriggered\"}", (uint8_t *)&v6, 0x12u);
          }
          v2[1752] = 0;
          (*(void (**)(unsigned char *))(*(void *)v2 + 32))(v2);
        }
        uint64_t v5 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          int v6 = 68289026;
          int v7 = 0;
          __int16 v8 = 2082;
          __int16 v9 = "";
          _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,fetchComplete\"}", (uint8_t *)&v6, 0x12u);
        }
        return sub_1000092B0(a2);
      }
    }
  }
  return result;
}

uint64_t sub_100006B0C(uint64_t a1, uint64_t a2)
{
  return sub_10000F63C(a1 + 40, a2 + 40);
}

void *sub_100006B18(uint64_t a1)
{
  return sub_10000F6D4((void *)(a1 + 40));
}

uint64_t sub_100006B20(uint64_t a1, uint64_t a2)
{
  return sub_10000F63C(a1 + 48, a2 + 48);
}

void *sub_100006B2C(uint64_t a1)
{
  return sub_10000F6D4((void *)(a1 + 48));
}

void sub_100006B34(uint64_t a1, int a2, uint64_t a3, double a4)
{
  __int16 v8 = BiomeLibrary();
  __int16 v9 = [v8 Device];
  double v10 = [v9 Wireless];
  std::string::size_type v11 = [v10 WiFiAvailabilityStatus];
  sub_10000F63C((uint64_t)v25, a3);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_100009C18;
  v22[3] = &unk_1000F4E20;
  v24 = 0;
  v22[4] = a1;
  v23[0] = off_1000F53C0;
  v23[1] = objc_retainBlock(v22);
  v24 = v23;
  id v12 = v11;
  if (a2 == 1)
  {
    id v16 = objc_alloc((Class)BMPublisherOptions);
    long long v14 = +[NSDate dateWithTimeIntervalSinceReferenceDate:a4];
    id v15 = [v16 initWithStartDate:0 endDate:v14 maxEvents:0 lastN:1 reversed:0];
  }
  else
  {
    if (a2) {
      goto LABEL_8;
    }
    id v13 = objc_alloc((Class)BMPublisherOptions);
    long long v14 = +[NSDate dateWithTimeIntervalSinceReferenceDate:a4];
    id v15 = [v13 initWithStartDate:v14 endDate:0 maxEvents:0 lastN:0 reversed:0];
  }
  uint64_t v17 = v15;

  if (v17)
  {
    uint64_t v18 = [v12 publisherWithOptions:v17];
    if (v18)
    {
      *(void *)std::string buf = _NSConcreteStackBlock;
      *(void *)&long long v29 = 3321888768;
      *((void *)&v29 + 1) = sub_100013D44;
      v30 = &unk_1000F5028;
      uint64_t v31 = a1;
      sub_10000F63C((uint64_t)v32, (uint64_t)v25);
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3321888768;
      v26[2] = sub_100013F48;
      v26[3] = &unk_1000F5380;
      v26[4] = a1;
      sub_1000141F4((uint64_t)v27, (uint64_t)v23);
      id v19 = [v18 sinkWithCompletion:buf receiveInput:v26];
      sub_1000143C4(v27);
      sub_10000F6D4(v32);
    }
    else
    {
      uint64_t v21 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::string buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        LOWORD(v29) = 2082;
        *(void *)((char *)&v29 + 2) = "";
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saBiomeProd,invokeBiomeFailed,noPublisher\"}", buf, 0x12u);
      }
    }

    goto LABEL_13;
  }
LABEL_8:
  uint64_t v20 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::string buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v29) = 2082;
    *(void *)((char *)&v29 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saBiomeProd,invokeBiomeFailed,noOptions\"}", buf, 0x12u);
  }
LABEL_13:

  sub_1000143C4(v23);
  sub_10000F6D4(v25);
}

void sub_100006F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  uint64_t v20 = va_arg(va1, void);
  uint64_t v21 = va_arg(va1, void);
  id v15 = v11;
  sub_1000143C4(v15);
  sub_10000F6D4(v14);

  sub_1000143C4((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);

  _Unwind_Resume(a1);
}

void *sub_100006FBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  double v2 = *(double *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768;
  v4[2] = sub_100007100;
  v4[3] = &unk_1000F4DC0;
  v4[4] = v1;
  sub_10000F63C((uint64_t)v5, a1 + 48);
  int v7 = 0;
  v6[0] = off_1000F4E78;
  v6[1] = objc_retainBlock(v4);
  int v7 = v6;
  sub_100006B34(v1, 0, (uint64_t)v6, v2);
  sub_10000F6D4(v6);
  return sub_10000F6D4(v5);
}

void sub_1000070DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_10000F6D4((uint64_t *)va);
  sub_10000F6D4(v10);
  _Unwind_Resume(a1);
}

void *sub_100007100(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 68289026;
    int v7 = 0;
    __int16 v8 = 2082;
    __int16 v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,fetch,wifiQualityComplete\"}", buf, 0x12u);
  }
  *(unsigned char *)(v2 + 600) = 1;
  sub_10000F63C((uint64_t)v5, a1 + 40);
  sub_100006960(v2, (uint64_t)v5);
  return sub_10000F6D4(v5);
}

void sub_1000071EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100007208(uint64_t a1, int a2, uint64_t a3, double a4)
{
  __int16 v8 = BiomeLibrary();
  __int16 v9 = [v8 Device];
  double v10 = [v9 Wireless];
  std::string::size_type v11 = [v10 WakeOnWiFiStatus];
  sub_10000F63C((uint64_t)v25, a3);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_100009578;
  v22[3] = &unk_1000F4E20;
  v24 = 0;
  v22[4] = a1;
  v23[0] = off_1000F50D0;
  v23[1] = objc_retainBlock(v22);
  v24 = v23;
  id v12 = v11;
  if (a2 == 1)
  {
    id v16 = objc_alloc((Class)BMPublisherOptions);
    long long v14 = +[NSDate dateWithTimeIntervalSinceReferenceDate:a4];
    id v15 = [v16 initWithStartDate:0 endDate:v14 maxEvents:0 lastN:1 reversed:0];
  }
  else
  {
    if (a2) {
      goto LABEL_8;
    }
    id v13 = objc_alloc((Class)BMPublisherOptions);
    long long v14 = +[NSDate dateWithTimeIntervalSinceReferenceDate:a4];
    id v15 = [v13 initWithStartDate:v14 endDate:0 maxEvents:0 lastN:0 reversed:0];
  }
  uint64_t v17 = v15;

  if (v17)
  {
    uint64_t v18 = [v12 publisherWithOptions:v17];
    if (v18)
    {
      *(void *)std::string buf = _NSConcreteStackBlock;
      *(void *)&long long v29 = 3321888768;
      *((void *)&v29 + 1) = sub_1000116F4;
      v30 = &unk_1000F5028;
      uint64_t v31 = a1;
      sub_10000F63C((uint64_t)v32, (uint64_t)v25);
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3321888768;
      v26[2] = sub_10001190C;
      v26[3] = &unk_1000F5090;
      v26[4] = a1;
      sub_100011BB8((uint64_t)v27, (uint64_t)v23);
      id v19 = [v18 sinkWithCompletion:buf receiveInput:v26];
      sub_100011D88(v27);
      sub_10000F6D4(v32);
    }
    else
    {
      uint64_t v21 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::string buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        LOWORD(v29) = 2082;
        *(void *)((char *)&v29 + 2) = "";
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saBiomeProd,invokeBiomeFailed,noPublisher\"}", buf, 0x12u);
      }
    }

    goto LABEL_13;
  }
LABEL_8:
  uint64_t v20 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::string buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v29) = 2082;
    *(void *)((char *)&v29 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saBiomeProd,invokeBiomeFailed,noOptions\"}", buf, 0x12u);
  }
LABEL_13:

  sub_100011D88(v23);
  sub_10000F6D4(v25);
}

void sub_1000075E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  uint64_t v20 = va_arg(va1, void);
  uint64_t v21 = va_arg(va1, void);
  id v15 = v11;
  sub_100011D88(v15);
  sub_10000F6D4(v14);

  sub_100011D88((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);

  _Unwind_Resume(a1);
}

void *sub_100007690(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  double v2 = *(double *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768;
  v4[2] = sub_1000077D4;
  v4[3] = &unk_1000F4DC0;
  v4[4] = v1;
  sub_10000F63C((uint64_t)v5, a1 + 48);
  int v7 = 0;
  v6[0] = off_1000F4E78;
  v6[1] = objc_retainBlock(v4);
  int v7 = v6;
  sub_100007208(v1, 0, (uint64_t)v6, v2);
  sub_10000F6D4(v6);
  return sub_10000F6D4(v5);
}

void sub_1000077B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_10000F6D4((uint64_t *)va);
  sub_10000F6D4(v10);
  _Unwind_Resume(a1);
}

void *sub_1000077D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 68289026;
    int v7 = 0;
    __int16 v8 = 2082;
    __int16 v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,fetch,wowComplete\"}", buf, 0x12u);
  }
  *(unsigned char *)(v2 + 408) = 1;
  sub_10000F63C((uint64_t)v5, a1 + 40);
  sub_100006960(v2, (uint64_t)v5);
  return sub_10000F6D4(v5);
}

void sub_1000078C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1000078DC(uint64_t a1, int a2, uint64_t a3, double a4)
{
  __int16 v8 = BiomeLibrary();
  __int16 v9 = [v8 Device];
  double v10 = [v9 Wireless];
  std::string::size_type v11 = [v10 CellularQualityStatus];
  sub_10000F63C((uint64_t)v15, a3);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10000A3C0;
  void v12[3] = &unk_1000F4E20;
  long long v14 = 0;
  void v12[4] = a1;
  v13[0] = off_1000F54B8;
  v13[1] = objc_retainBlock(v12);
  long long v14 = v13;
  sub_10000A064(a1, a2, v11, (uint64_t)v15, (uint64_t)v13, a4);
  sub_100014AC8(v13);
  sub_10000F6D4(v15);
}

void sub_100007A54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  sub_100014AC8((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);

  _Unwind_Resume(a1);
}

void *sub_100007AA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  double v2 = *(double *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768;
  v4[2] = sub_100007BEC;
  v4[3] = &unk_1000F4DC0;
  v4[4] = v1;
  sub_10000F63C((uint64_t)v5, a1 + 48);
  int v7 = 0;
  v6[0] = off_1000F4E78;
  v6[1] = objc_retainBlock(v4);
  int v7 = v6;
  sub_1000078DC(v1, 0, (uint64_t)v6, v2);
  sub_10000F6D4(v6);
  return sub_10000F6D4(v5);
}

void sub_100007BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_10000F6D4((uint64_t *)va);
  sub_10000F6D4(v10);
  _Unwind_Resume(a1);
}

void *sub_100007BEC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 68289026;
    int v7 = 0;
    __int16 v8 = 2082;
    __int16 v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,fetch,CellularAvailabilityComplete\"}", buf, 0x12u);
  }
  *(unsigned char *)(v2 + 216) = 1;
  sub_10000F63C((uint64_t)v5, a1 + 40);
  sub_100006960(v2, (uint64_t)v5);
  return sub_10000F6D4(v5);
}

void sub_100007CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100007CF4(uint64_t a1, int a2, uint64_t a3, double a4)
{
  __int16 v8 = BiomeLibrary();
  __int16 v9 = [v8 Device];
  double v10 = [v9 Wireless];
  uint64_t v11 = [v10 CellularQualityStatus];
  sub_10000F63C((uint64_t)v15, a3);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10000A5F0;
  void v12[3] = &unk_1000F4E20;
  uint64_t v14 = 0;
  void v12[4] = a1;
  v13[0] = off_1000F54B8;
  v13[1] = objc_retainBlock(v12);
  uint64_t v14 = v13;
  sub_10000A064(a1, a2, v11, (uint64_t)v15, (uint64_t)v13, a4);
  sub_100014AC8(v13);
  sub_10000F6D4(v15);
}

void sub_100007E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  sub_100014AC8((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);

  _Unwind_Resume(a1);
}

void *sub_100007EC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  double v2 = *(double *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768;
  v4[2] = sub_100008004;
  v4[3] = &unk_1000F4DC0;
  v4[4] = v1;
  sub_10000F63C((uint64_t)v5, a1 + 48);
  int v7 = 0;
  v6[0] = off_1000F4E78;
  v6[1] = objc_retainBlock(v4);
  int v7 = v6;
  sub_100007CF4(v1, 0, (uint64_t)v6, v2);
  sub_10000F6D4(v6);
  return sub_10000F6D4(v5);
}

void sub_100007FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_10000F6D4((uint64_t *)va);
  sub_10000F6D4(v10);
  _Unwind_Resume(a1);
}

void *sub_100008004(uint64_t a1)
{
  double v2 = *(unsigned char **)(a1 + 32);
  id v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 68289026;
    int v7 = 0;
    __int16 v8 = 2082;
    __int16 v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,fetch,CellularQualityComplete\"}", buf, 0x12u);
  }
  v2[1368] = 1;
  v2[1176] = 1;
  v2[984] = 1;
  sub_10000F63C((uint64_t)v5, a1 + 40);
  sub_100006960((uint64_t)v2, (uint64_t)v5);
  return sub_10000F6D4(v5);
}

void sub_1000080F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100008114(uint64_t a1, int a2, uint64_t a3, double a4)
{
  __int16 v8 = BiomeLibrary();
  __int16 v9 = [v8 Device];
  double v10 = [v9 Wireless];
  uint64_t v11 = [v10 CellularDataEnabled];
  sub_10000F63C((uint64_t)v25, a3);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_10000AE10;
  v22[3] = &unk_1000F4E20;
  v24 = 0;
  v22[4] = a1;
  v23[0] = off_1000F56A8;
  v23[1] = objc_retainBlock(v22);
  v24 = v23;
  id v12 = v11;
  if (a2 == 1)
  {
    id v16 = objc_alloc((Class)BMPublisherOptions);
    uint64_t v14 = +[NSDate dateWithTimeIntervalSinceReferenceDate:a4];
    id v15 = [v16 initWithStartDate:0 endDate:v14 maxEvents:0 lastN:1 reversed:0];
  }
  else
  {
    if (a2) {
      goto LABEL_8;
    }
    id v13 = objc_alloc((Class)BMPublisherOptions);
    uint64_t v14 = +[NSDate dateWithTimeIntervalSinceReferenceDate:a4];
    id v15 = [v13 initWithStartDate:v14 endDate:0 maxEvents:0 lastN:0 reversed:0];
  }
  uint64_t v17 = v15;

  if (v17)
  {
    uint64_t v18 = [v12 publisherWithOptions:v17];
    if (v18)
    {
      *(void *)std::string buf = _NSConcreteStackBlock;
      *(void *)&long long v29 = 3321888768;
      *((void *)&v29 + 1) = sub_100015250;
      v30 = &unk_1000F5028;
      uint64_t v31 = a1;
      sub_10000F63C((uint64_t)v32, (uint64_t)v25);
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3321888768;
      v26[2] = sub_100015454;
      v26[3] = &unk_1000F5668;
      v26[4] = a1;
      sub_100015700((uint64_t)v27, (uint64_t)v23);
      id v19 = [v18 sinkWithCompletion:buf receiveInput:v26];
      sub_1000158D0(v27);
      sub_10000F6D4(v32);
    }
    else
    {
      uint64_t v21 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::string buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        LOWORD(v29) = 2082;
        *(void *)((char *)&v29 + 2) = "";
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saBiomeProd,invokeBiomeFailed,noPublisher\"}", buf, 0x12u);
      }
    }

    goto LABEL_13;
  }
LABEL_8:
  uint64_t v20 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::string buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v29) = 2082;
    *(void *)((char *)&v29 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saBiomeProd,invokeBiomeFailed,noOptions\"}", buf, 0x12u);
  }
LABEL_13:

  sub_1000158D0(v23);
  sub_10000F6D4(v25);
}

void sub_1000084EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  uint64_t v20 = va_arg(va1, void);
  uint64_t v21 = va_arg(va1, void);
  id v15 = v11;
  sub_1000158D0(v15);
  sub_10000F6D4(v14);

  sub_1000158D0((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);

  _Unwind_Resume(a1);
}

void *sub_10000859C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  double v2 = *(double *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768;
  v4[2] = sub_1000086E0;
  v4[3] = &unk_1000F4DC0;
  v4[4] = v1;
  sub_10000F63C((uint64_t)v5, a1 + 48);
  int v7 = 0;
  v6[0] = off_1000F4E78;
  v6[1] = objc_retainBlock(v4);
  int v7 = v6;
  sub_100008114(v1, 0, (uint64_t)v6, v2);
  sub_10000F6D4(v6);
  return sub_10000F6D4(v5);
}

void sub_1000086BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_10000F6D4((uint64_t *)va);
  sub_10000F6D4(v10);
  _Unwind_Resume(a1);
}

void *sub_1000086E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 68289026;
    int v7 = 0;
    __int16 v8 = 2082;
    __int16 v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,fetch,CellularDataComplete\"}", buf, 0x12u);
  }
  *(unsigned char *)(v2 + 792) = 1;
  sub_10000F63C((uint64_t)v5, a1 + 40);
  sub_100006960(v2, (uint64_t)v5);
  return sub_10000F6D4(v5);
}

void sub_1000087CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1000087E8(uint64_t a1, int a2, uint64_t a3, double a4)
{
  __int16 v8 = BiomeLibrary();
  __int16 v9 = [v8 Device];
  double v10 = [v9 Wireless];
  uint64_t v11 = [v10 APSDInterfaceStatus];
  sub_10000F63C((uint64_t)v25, a3);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_10000AA74;
  v22[3] = &unk_1000F4E20;
  v24 = 0;
  v22[4] = a1;
  v23[0] = off_1000F55B0;
  v23[1] = objc_retainBlock(v22);
  v24 = v23;
  id v12 = v11;
  if (a2 == 1)
  {
    id v16 = objc_alloc((Class)BMPublisherOptions);
    uint64_t v14 = +[NSDate dateWithTimeIntervalSinceReferenceDate:a4];
    id v15 = [v16 initWithStartDate:0 endDate:v14 maxEvents:0 lastN:1 reversed:0];
  }
  else
  {
    if (a2) {
      goto LABEL_8;
    }
    id v13 = objc_alloc((Class)BMPublisherOptions);
    uint64_t v14 = +[NSDate dateWithTimeIntervalSinceReferenceDate:a4];
    id v15 = [v13 initWithStartDate:v14 endDate:0 maxEvents:0 lastN:0 reversed:0];
  }
  uint64_t v17 = v15;

  if (v17)
  {
    uint64_t v18 = [v12 publisherWithOptions:v17];
    if (v18)
    {
      *(void *)std::string buf = _NSConcreteStackBlock;
      *(void *)&long long v29 = 3321888768;
      *((void *)&v29 + 1) = sub_100014B4C;
      v30 = &unk_1000F5028;
      uint64_t v31 = a1;
      sub_10000F63C((uint64_t)v32, (uint64_t)v25);
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3321888768;
      v26[2] = sub_100014D50;
      v26[3] = &unk_1000F5570;
      v26[4] = a1;
      sub_100014FFC((uint64_t)v27, (uint64_t)v23);
      id v19 = [v18 sinkWithCompletion:buf receiveInput:v26];
      sub_1000151CC(v27);
      sub_10000F6D4(v32);
    }
    else
    {
      uint64_t v21 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::string buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        LOWORD(v29) = 2082;
        *(void *)((char *)&v29 + 2) = "";
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saBiomeProd,invokeBiomeFailed,noPublisher\"}", buf, 0x12u);
      }
    }

    goto LABEL_13;
  }
LABEL_8:
  uint64_t v20 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::string buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v29) = 2082;
    *(void *)((char *)&v29 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saBiomeProd,invokeBiomeFailed,noOptions\"}", buf, 0x12u);
  }
LABEL_13:

  sub_1000151CC(v23);
  sub_10000F6D4(v25);
}

void sub_100008BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  uint64_t v20 = va_arg(va1, void);
  uint64_t v21 = va_arg(va1, void);
  id v15 = v11;
  sub_1000151CC(v15);
  sub_10000F6D4(v14);

  sub_1000151CC((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);

  _Unwind_Resume(a1);
}

void *sub_100008C70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  double v2 = *(double *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768;
  v4[2] = sub_100008DB4;
  v4[3] = &unk_1000F4DC0;
  v4[4] = v1;
  sub_10000F63C((uint64_t)v5, a1 + 48);
  int v7 = 0;
  v6[0] = off_1000F4E78;
  v6[1] = objc_retainBlock(v4);
  int v7 = v6;
  sub_1000087E8(v1, 0, (uint64_t)v6, v2);
  sub_10000F6D4(v6);
  return sub_10000F6D4(v5);
}

void sub_100008D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_10000F6D4((uint64_t *)va);
  sub_10000F6D4(v10);
  _Unwind_Resume(a1);
}

void *sub_100008DB4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 68289026;
    int v7 = 0;
    __int16 v8 = 2082;
    __int16 v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,fetch,apsdConnectivity\"}", buf, 0x12u);
  }
  *(unsigned char *)(v2 + 1560) = 1;
  sub_10000F63C((uint64_t)v5, a1 + 40);
  sub_100006960(v2, (uint64_t)v5);
  return sub_10000F6D4(v5);
}

void sub_100008EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100008EBC(uint64_t a1, uint64_t a2, double a3)
{
  double Current = CFAbsoluteTimeGetCurrent();
  *(unsigned char *)(a1 + 1560) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 1568) = _Q0;
  *(unsigned char *)(a1 + 1712) = 0;
  sub_10000DBF0((uint64_t *)(a1 + 1584));
  sub_10000DD48(&__p, "apsdConnectivityStatus");
  std::string::operator=((std::string *)(a1 + 1720), &__p);
  double v12 = Current - a3;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3321888768;
  void v15[2] = sub_100009070;
  v15[3] = &unk_1000F4DF0;
  void v15[4] = a1;
  *(double *)&v15[5] = v12;
  sub_10000F63C((uint64_t)v16, a2);
  uint64_t v18 = 0;
  v17[0] = off_1000F4E78;
  v17[1] = objc_retainBlock(v15);
  uint64_t v18 = v17;
  sub_1000087E8(a1, 1, (uint64_t)v17, v12);
  sub_10000F6D4(v17);
  return sub_10000F6D4(v16);
}

void sub_100009034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  sub_10000F6D4((void *)(v15 - 88));
  sub_10000F6D4(v14);
  _Unwind_Resume(a1);
}

void *sub_100009070(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  double v2 = *(double *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768;
  v4[2] = sub_1000091B4;
  v4[3] = &unk_1000F4DC0;
  v4[4] = v1;
  sub_10000F63C((uint64_t)v5, a1 + 48);
  int v7 = 0;
  v6[0] = off_1000F4E78;
  v6[1] = objc_retainBlock(v4);
  int v7 = v6;
  sub_1000087E8(v1, 0, (uint64_t)v6, v2);
  sub_10000F6D4(v6);
  return sub_10000F6D4(v5);
}

void sub_100009190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_10000F6D4((uint64_t *)va);
  sub_10000F6D4(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_1000091B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 68289026;
    v6[1] = 0;
    __int16 v7 = 2082;
    __int16 v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,fetch,apsdConnectivity\"}", (uint8_t *)v6, 0x12u);
  }
  *(unsigned char *)(v2 + 1560) = 1;
  uint64_t v4 = *(void *)(a1 + 64);
  if (!v4) {
    sub_100005520();
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 48))(v4);
}

uint64_t sub_1000092B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (!v1) {
    sub_100005520();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void sub_100009300(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 1752))
  {
    uint64_t v1 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 68289026;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,#warning,resetAlreadyTriggered\"}", buf, 0x12u);
    }
  }
  else
  {
    int v3 = *(_DWORD *)(a1 + 16);
    uint64_t v4 = SALogObjectGeneral;
    BOOL v5 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    if (v3 == 1)
    {
      if (v5)
      {
        *(_DWORD *)std::string buf = 68289026;
        int v13 = 0;
        __int16 v14 = 2082;
        uint64_t v15 = "";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,#warning,resetWhileFetching\"}", buf, 0x12u);
      }
      *(unsigned char *)(a1 + 1752) = 1;
    }
    else
    {
      if (v5)
      {
        *(_DWORD *)std::string buf = 68289026;
        int v13 = 0;
        __int16 v14 = 2082;
        uint64_t v15 = "";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,reset\"}", buf, 0x12u);
      }
      *(unsigned char *)(a1 + 24) = 0;
      __asm { FMOV            V0.2D, #-1.0 }
      long long v11 = _Q0;
      *(_OWORD *)(a1 + 32) = _Q0;
      *(unsigned char *)(a1 + 176) = 0;
      sub_10000DBF0((uint64_t *)(a1 + 48));
      *(unsigned char *)(a1 + 600) = 0;
      *(_OWORD *)(a1 + 608) = v11;
      *(unsigned char *)(a1 + 752) = 0;
      sub_10000DBF0((uint64_t *)(a1 + 624));
      *(unsigned char *)(a1 + 408) = 0;
      *(_OWORD *)(a1 + 416) = v11;
      *(unsigned char *)(a1 + 560) = 0;
      sub_10000DBF0((uint64_t *)(a1 + 432));
      *(unsigned char *)(a1 + 216) = 0;
      *(_OWORD *)(a1 + 224) = v11;
      *(unsigned char *)(a1 + 368) = 0;
      sub_10000DBF0((uint64_t *)(a1 + 240));
      *(unsigned char *)(a1 + 984) = 0;
      *(_OWORD *)(a1 + 992) = v11;
      *(unsigned char *)(a1 + 1136) = 0;
      sub_10000DBF0((uint64_t *)(a1 + 1008));
      *(unsigned char *)(a1 + 1176) = 0;
      *(_OWORD *)(a1 + 1184) = v11;
      *(unsigned char *)(a1 + 1328) = 0;
      sub_10000DBF0((uint64_t *)(a1 + 1200));
      *(unsigned char *)(a1 + 1368) = 0;
      *(_OWORD *)(a1 + 1376) = v11;
      *(unsigned char *)(a1 + 1520) = 0;
      sub_10000DBF0((uint64_t *)(a1 + 1392));
      *(unsigned char *)(a1 + 792) = 0;
      *(_OWORD *)(a1 + 800) = v11;
      *(unsigned char *)(a1 + 944) = 0;
      sub_10000DBF0((uint64_t *)(a1 + 816));
      *(unsigned char *)(a1 + 1560) = 0;
      *(_OWORD *)(a1 + 1568) = v11;
      *(unsigned char *)(a1 + 1712) = 0;
      sub_10000DBF0((uint64_t *)(a1 + 1584));
      *(_DWORD *)(a1 + 16) = 0;
      *(unsigned char *)(a1 + 1752) = 0;
    }
  }
}

void sub_100009578(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  BOOL v5 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    [v3 timestamp];
    uint64_t v7 = v6;
    __int16 v8 = [v3 eventBody];
    *(_DWORD *)std::string buf = 68289539;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v16 = 2082;
    *(void *)std::string __p = "";
    *(_WORD *)&__p[8] = 2049;
    *(void *)&__p[10] = v7;
    *(_WORD *)&__p[18] = 1025;
    *(_DWORD *)&__p[20] = [v8 starting];
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,WakeOnWifiStatus\", \"timestamp\":\"%{private}0.1f\", \"isStarting\":%{private}hhd}", buf, 0x22u);
  }
  [v3 timestamp];
  uint64_t v10 = v9;
  long long v11 = [v3 eventBody];
  unsigned __int8 v12 = [v11 starting];
  sub_10000DD48(v13, "{}");
  *(void *)std::string buf = v10;
  LOBYTE(v16) = v12;
  if (SHIBYTE(v14) < 0)
  {
    sub_100004CB8(&__p[6], v13[0], (unint64_t)v13[1]);
  }
  else
  {
    *(_OWORD *)&__p[6] = *(_OWORD *)v13;
    *(void *)&__p[22] = v14;
  }
  sub_1000097A0(v4 + 408, (double *)buf);
  if ((__p[29] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[6]);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(v13[0]);
  }
}

void sub_10000972C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void *sub_1000097A0(uint64_t a1, double *a2)
{
  v21[0] = off_1000F4F08;
  v21[1] = a1;
  void v21[3] = v21;
  v20[0] = off_1000F4F88;
  v20[1] = a1;
  v20[3] = v20;
  sub_100010BB4((uint64_t)v22, (uint64_t)v21, (uint64_t)v20);
  sub_10000F6D4(v20);
  sub_10000F6D4(v21);
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v5 = (void *)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      BOOL v5 = (void *)*v5;
    }
    uint64_t v6 = (void *)(a1 + 160);
    if (*(char *)(a1 + 183) < 0) {
      uint64_t v6 = (void *)*v6;
    }
    v13[0] = 68289539;
    v13[1] = 0;
    __int16 v14 = 2082;
    uint64_t v15 = "";
    __int16 v16 = 2081;
    uint64_t v17 = v5;
    __int16 v18 = 2081;
    uint64_t v19 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,update\", \"filePath\":%{private, location:escape_only}s, \"debugName\":%{private, location:escape_only}s}", (uint8_t *)v13, 0x26u);
  }
  sub_10000FA5C(a1, a2);
  if ((*(char *)(a1 + 71) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(a1 + 71)) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (*(void *)(a1 + 56)) {
LABEL_11:
  }
    sub_10000FCDC((char *)a1);
LABEL_12:
  if (!*(unsigned char *)(a1 + 1) && !*(unsigned char *)(a1 + 185))
  {
    *(unsigned char *)a1 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(a1 + 8) = _Q0;
    *(unsigned char *)(a1 + 152) = 0;
    sub_10000DBF0((uint64_t *)(a1 + 24));
  }
  return sub_1000115F0(v22);
}

void sub_100009960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  sub_10000F6D4((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_10000998C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  BOOL v5 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    [v3 timestamp];
    uint64_t v7 = v6;
    __int16 v8 = [v3 eventBody];
    id v9 = [v8 SSID];
    id v10 = [v9 UTF8String];
    uint64_t v11 = [v3 eventBody];
    *(_DWORD *)std::string buf = 68289795;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v19 = 2082;
    *(void *)std::string __p = "";
    *(_WORD *)&__p[8] = 2049;
    *(void *)&__p[10] = v7;
    *(_WORD *)&__p[18] = 2081;
    *(void *)&__p[20] = v10;
    *(_WORD *)&__p[28] = 1026;
    unsigned int v21 = [v11 starting];
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,WifiAssociatedStatus\", \"timestamp\":\"%{private}0.1f\", \"SSID\":%{private, location:escape_only}s, \"isStarting\":%{public}hhd}", buf, 0x2Cu);
  }
  [v3 timestamp];
  uint64_t v13 = v12;
  __int16 v14 = [v3 eventBody];
  unsigned __int8 v15 = [v14 starting];
  sub_10000DD48(v16, "{}");
  *(void *)std::string buf = v13;
  LOBYTE(v19) = v15;
  if (SHIBYTE(v17) < 0)
  {
    sub_100004CB8(&__p[6], v16[0], (unint64_t)v16[1]);
  }
  else
  {
    *(_OWORD *)&__p[6] = *(_OWORD *)v16;
    *(void *)&__p[22] = v17;
  }
  sub_1000097A0(v4 + 24, (double *)buf);
  if ((__p[29] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[6]);
  }
  if (SHIBYTE(v17) < 0) {
    operator delete(v16[0]);
  }
}

void sub_100009B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100009C18(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  BOOL v5 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    [v3 timestamp];
    uint64_t v7 = v6;
    __int16 v8 = [v3 eventBody];
    unsigned int v9 = [v8 starting];
    id v10 = [v3 eventBody];
    *(_DWORD *)std::string buf = 68289795;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)__int16 v18 = 2082;
    *(void *)&v18[2] = "";
    *(_WORD *)&v18[10] = 2049;
    *(void *)&v18[12] = v7;
    *(_WORD *)&v18[20] = 1025;
    *(_DWORD *)&v18[22] = v9;
    *(_WORD *)&v18[26] = 1025;
    *(_DWORD *)&v18[28] = [v10 quality];
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,WifiQualityStatus\", \"timestamp\":\"%{private}0.1f\", \"isStarting\":%{private}hhd, \"wifiQuality\":%{private}d}", buf, 0x28u);
  }
  [v3 timestamp];
  uint64_t v12 = v11;
  uint64_t v13 = [v3 eventBody];
  unsigned int v14 = [v13 quality];
  sub_10000DD48(__p, "{}");
  *(void *)std::string buf = v12;
  *(_DWORD *)__int16 v18 = v14;
  if (SHIBYTE(v16) < 0)
  {
    sub_100004CB8(&v18[8], __p[0], (unint64_t)__p[1]);
  }
  else
  {
    *(_OWORD *)&v18[8] = *(_OWORD *)__p;
    *(void *)&v18[24] = v16;
  }
  sub_100009E78(v4 + 600, (double *)buf);
  if ((v18[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v18[8]);
  }
  if (SHIBYTE(v16) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100009DF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void *sub_100009E78(uint64_t a1, double *a2)
{
  v21[0] = off_1000F5258;
  v21[1] = a1;
  void v21[3] = v21;
  v20[0] = off_1000F52D8;
  v20[1] = a1;
  v20[3] = v20;
  sub_100010BB4((uint64_t)v22, (uint64_t)v21, (uint64_t)v20);
  sub_10000F6D4(v20);
  sub_10000F6D4(v21);
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v5 = (void *)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      BOOL v5 = (void *)*v5;
    }
    uint64_t v6 = (void *)(a1 + 160);
    if (*(char *)(a1 + 183) < 0) {
      uint64_t v6 = (void *)*v6;
    }
    v13[0] = 68289539;
    v13[1] = 0;
    __int16 v14 = 2082;
    unsigned __int8 v15 = "";
    __int16 v16 = 2081;
    uint64_t v17 = v5;
    __int16 v18 = 2081;
    __int16 v19 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,update\", \"filePath\":%{private, location:escape_only}s, \"debugName\":%{private, location:escape_only}s}", (uint8_t *)v13, 0x26u);
  }
  sub_100012510(a1, a2);
  if ((*(char *)(a1 + 71) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(a1 + 71)) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (*(void *)(a1 + 56)) {
LABEL_11:
  }
    sub_100012790((char *)a1);
LABEL_12:
  if (!*(unsigned char *)(a1 + 1) && !*(unsigned char *)(a1 + 185))
  {
    *(unsigned char *)a1 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(a1 + 8) = _Q0;
    *(unsigned char *)(a1 + 152) = 0;
    sub_10000DBF0((uint64_t *)(a1 + 24));
  }
  return sub_1000115F0(v22);
}

void sub_10000A038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  sub_10000F6D4((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_10000A064(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, double a6)
{
  id v11 = a3;
  if (a2 == 1)
  {
    id v15 = objc_alloc((Class)BMPublisherOptions);
    uint64_t v13 = +[NSDate dateWithTimeIntervalSinceReferenceDate:a6];
    id v14 = [v15 initWithStartDate:0 endDate:v13 maxEvents:0 lastN:1 reversed:0];
  }
  else
  {
    if (a2) {
      goto LABEL_8;
    }
    id v12 = objc_alloc((Class)BMPublisherOptions);
    uint64_t v13 = +[NSDate dateWithTimeIntervalSinceReferenceDate:a6];
    id v14 = [v12 initWithStartDate:v13 endDate:0 maxEvents:0 lastN:0 reversed:0];
  }
  __int16 v16 = v14;

  if (v16)
  {
    uint64_t v17 = [v11 publisherWithOptions:v16];
    if (v17)
    {
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3321888768;
      v23[2] = sub_100014448;
      void v23[3] = &unk_1000F5028;
      v23[4] = a1;
      sub_10000F63C((uint64_t)v24, a4);
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3321888768;
      v21[2] = sub_10001464C;
      void v21[3] = &unk_1000F5478;
      void v21[4] = a1;
      sub_1000148F8((uint64_t)v22, a5);
      id v18 = [v17 sinkWithCompletion:v23 receiveInput:v21];
      sub_100014AC8(v22);
      sub_10000F6D4(v24);
    }
    else
    {
      uint64_t v20 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
      {
        uint64_t buf = 68289026;
        __int16 v26 = 2082;
        v27 = "";
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saBiomeProd,invokeBiomeFailed,noPublisher\"}", (uint8_t *)&buf, 0x12u);
      }
    }

    goto LABEL_13;
  }
LABEL_8:
  __int16 v19 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
  {
    uint64_t buf = 68289026;
    __int16 v26 = 2082;
    v27 = "";
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saBiomeProd,invokeBiomeFailed,noOptions\"}", (uint8_t *)&buf, 0x12u);
  }
LABEL_13:
}

void sub_10000A35C(_Unwind_Exception *a1)
{
  sub_100014AC8(v3);
  sub_10000F6D4(v5);

  _Unwind_Resume(a1);
}

void sub_10000A3C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  BOOL v5 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    [v3 timestamp];
    uint64_t v7 = v6;
    __int16 v8 = [v3 eventBody];
    *(_DWORD *)uint64_t buf = 68289539;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v16 = 2082;
    *(void *)std::string __p = "";
    *(_WORD *)&__p[8] = 2049;
    *(void *)&__p[10] = v7;
    *(_WORD *)&__p[18] = 1026;
    *(_DWORD *)&__p[20] = [v8 deviceRegistrationState];
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,CellularAvailabilityStatus\", \"timestamp\":\"%{private}0.1f\", \"deviceRegistrationStatus\":%{public}d}", buf, 0x22u);
  }
  [v3 timestamp];
  uint64_t v10 = v9;
  id v11 = [v3 eventBody];
  unsigned int v12 = [v11 deviceRegistrationState];
  sub_10000DD48(v13, "{}");
  *(void *)uint64_t buf = v10;
  LOBYTE(v16) = v12 == 1;
  if (SHIBYTE(v14) < 0)
  {
    sub_100004CB8(&__p[6], v13[0], (unint64_t)v13[1]);
  }
  else
  {
    *(_OWORD *)&__p[6] = *(_OWORD *)v13;
    *(void *)&__p[22] = v14;
  }
  sub_1000097A0(v4 + 216, (double *)buf);
  if ((__p[29] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[6]);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(v13[0]);
  }
}

void sub_10000A57C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_10000A5F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  BOOL v5 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    [v3 timestamp];
    uint64_t v7 = v6;
    __int16 v8 = [v3 eventBody];
    unsigned int v9 = [v8 deviceRegistrationState];
    uint64_t v10 = [v3 eventBody];
    unsigned int v11 = [v10 quality];
    unsigned int v12 = [v3 eventBody];
    unsigned int v13 = [v12 rat];
    uint64_t v14 = [v3 eventBody];
    *(_DWORD *)uint64_t buf = 68290307;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)v30 = 2082;
    *(void *)&v30[2] = "";
    *(_WORD *)&v30[10] = 2049;
    *(void *)&v30[12] = v7;
    *(_WORD *)&v30[20] = 1026;
    *(_DWORD *)&v30[22] = v9;
    *(_WORD *)&v30[26] = 1026;
    *(_DWORD *)&v30[28] = v11;
    __int16 v31 = 1026;
    unsigned int v32 = v13;
    __int16 v33 = 1026;
    unsigned int v34 = [v14 rrcStatus];
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,CellularQualityStatus\", \"timestamp\":\"%{private}0.1f\", \"deviceRegistrationStatus\":%{public}d, \"quality\":%{public}d, \"RAT\":%{public}d, \"RRC\":%{public}d}", buf, 0x34u);
  }
  [v3 timestamp];
  uint64_t v16 = v15;
  uint64_t v17 = [v3 eventBody];
  unsigned int v18 = [v17 quality];
  sub_10000DD48(__p, "{}");
  *(void *)uint64_t buf = v16;
  *(_DWORD *)v30 = v18;
  if (SHIBYTE(v28) < 0)
  {
    sub_100004CB8(&v30[8], __p[0], (unint64_t)__p[1]);
  }
  else
  {
    *(_OWORD *)&v30[8] = *(_OWORD *)__p;
    *(void *)&v30[24] = v28;
  }
  sub_100009E78(v4 + 984, (double *)buf);
  if ((v30[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v30[8]);
  }
  if (SHIBYTE(v28) < 0) {
    operator delete(__p[0]);
  }

  [v3 timestamp];
  uint64_t v20 = v19;
  unsigned int v21 = [v3 eventBody];
  unsigned int v22 = [v21 rat];
  sub_10000DD48(__p, "{}");
  *(void *)uint64_t buf = v20;
  *(_DWORD *)v30 = v22;
  if (SHIBYTE(v28) < 0)
  {
    sub_100004CB8(&v30[8], __p[0], (unint64_t)__p[1]);
  }
  else
  {
    *(_OWORD *)&v30[8] = *(_OWORD *)__p;
    *(void *)&v30[24] = v28;
  }
  sub_100009E78(v4 + 1176, (double *)buf);
  if ((v30[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v30[8]);
  }
  if (SHIBYTE(v28) < 0) {
    operator delete(__p[0]);
  }

  [v3 timestamp];
  uint64_t v24 = v23;
  v25 = [v3 eventBody];
  unsigned int v26 = [v25 rrcStatus];
  sub_10000DD48(__p, "{}");
  *(void *)uint64_t buf = v24;
  *(_DWORD *)v30 = v26;
  if (SHIBYTE(v28) < 0)
  {
    sub_100004CB8(&v30[8], __p[0], (unint64_t)__p[1]);
  }
  else
  {
    *(_OWORD *)&v30[8] = *(_OWORD *)__p;
    *(void *)&v30[24] = v28;
  }
  sub_100009E78(v4 + 1368, (double *)buf);
  if ((v30[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v30[8]);
  }
  if (SHIBYTE(v28) < 0) {
    operator delete(__p[0]);
  }
}

void sub_10000A958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_10000AA74(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  BOOL v5 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    [v3 timestamp];
    uint64_t v7 = v6;
    __int16 v8 = [v3 eventBody];
    unsigned int v9 = [v8 starting];
    uint64_t v10 = [v3 eventBody];
    unsigned int v11 = [v10 isAPSDOverCell];
    unsigned int v12 = [v3 eventBody];
    *(_DWORD *)uint64_t buf = 68290051;
    *(_WORD *)long long v29 = 2082;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(void *)&v29[2] = "";
    *(_WORD *)&v29[10] = 2049;
    *(void *)&v29[12] = v7;
    *(_WORD *)&v29[20] = 1025;
    *(_DWORD *)&v29[22] = v9;
    *(_WORD *)&v29[26] = 1025;
    *(_DWORD *)&v29[28] = v11;
    __int16 v30 = 1025;
    unsigned int v31 = [v12 isAPSDOverWiFi];
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,apsdConnectivityStatus\", \"timestamp\":\"%{private}0.1f\", \"starting\":%{private}d, \"isAPSDOverCell\":%{private}d, \"isAPSDOverWiFi\":%{private}d}", buf, 0x2Eu);
  }
  unsigned int v13 = [v3 eventBody];
  if ([v13 isAPSDOverCell])
  {
    uint64_t v14 = [v3 eventBody];
    unsigned __int8 v15 = [v14 isAPSDOverWiFi];

    if (v15)
    {
      int v16 = 1;
      goto LABEL_16;
    }
  }
  else
  {
  }
  uint64_t v17 = [v3 eventBody];
  if ([v17 isAPSDOverCell])
  {

    goto LABEL_10;
  }
  unsigned int v18 = [v3 eventBody];
  unsigned __int8 v19 = [v18 isAPSDOverWiFi];

  if (v19)
  {
LABEL_10:
    uint64_t v20 = [v3 eventBody];
    unsigned __int8 v21 = [v20 isAPSDOverCell];

    if (v21)
    {
      int v16 = 3;
    }
    else
    {
      unsigned int v22 = [v3 eventBody];
      unsigned int v23 = [v22 isAPSDOverWiFi];

      if (v23) {
        int v16 = 2;
      }
      else {
        int v16 = 0;
      }
    }
    goto LABEL_16;
  }
  int v16 = 4;
LABEL_16:
  [v3 timestamp];
  uint64_t v25 = v24;
  sub_10000DD48(__p, "{}");
  *(void *)uint64_t buf = v25;
  *(_DWORD *)long long v29 = v16;
  if (SHIBYTE(v27) < 0)
  {
    sub_100004CB8(&v29[8], __p[0], (unint64_t)__p[1]);
  }
  else
  {
    *(_OWORD *)&v29[8] = *(_OWORD *)__p;
    *(void *)&v29[24] = v27;
  }
  sub_100009E78(v4 + 1560, (double *)buf);
  if ((v29[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v29[8]);
  }
  if (SHIBYTE(v27) < 0) {
    operator delete(__p[0]);
  }
}

void sub_10000AD48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  _Unwind_Resume(a1);
}

void sub_10000AE10(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  BOOL v5 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    [v3 timestamp];
    uint64_t v7 = v6;
    __int16 v8 = [v3 eventBody];
    *(_DWORD *)uint64_t buf = 68289539;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v16 = 2082;
    *(void *)std::string __p = "";
    *(_WORD *)&__p[8] = 2049;
    *(void *)&__p[10] = v7;
    *(_WORD *)&__p[18] = 1026;
    *(_DWORD *)&__p[20] = [v8 starting];
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,CellularDataStatus\", \"timestamp\":\"%{private}0.1f\", \"isStarting\":%{public}hhd}", buf, 0x22u);
  }
  [v3 timestamp];
  uint64_t v10 = v9;
  unsigned int v11 = [v3 eventBody];
  unsigned __int8 v12 = [v11 starting];
  sub_10000DD48(v13, "{}");
  *(void *)uint64_t buf = v10;
  LOBYTE(v16) = v12;
  if (SHIBYTE(v14) < 0)
  {
    sub_100004CB8(&__p[6], v13[0], (unint64_t)v13[1]);
  }
  else
  {
    *(_OWORD *)&__p[6] = *(_OWORD *)v13;
    *(void *)&__p[22] = v14;
  }
  sub_1000097A0(v4 + 792, (double *)buf);
  if ((__p[29] & 0x80000000) != 0) {
    operator delete(*(void **)&__p[6]);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(v13[0]);
  }
}

void sub_10000AFC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_10000B038(uint64_t a1, double a2)
{
  LOWORD(result) = sub_10000B064(a1 + 24, a2);
  if ((result & 0xFF00) != 0) {
    return result;
  }
  else {
    return 3;
  }
}

uint64_t sub_10000B064(uint64_t a1, double a2)
{
  v26[0] = off_1000F5738;
  v26[1] = a1;
  v26[3] = v26;
  v25[0] = off_1000F57B8;
  v25[1] = a1;
  void v25[3] = v25;
  sub_100010BB4((uint64_t)v27, (uint64_t)v26, (uint64_t)v25);
  sub_10000F6D4(v25);
  sub_10000F6D4(v26);
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v5 = (void *)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      BOOL v5 = (void *)*v5;
    }
    uint64_t v6 = (void *)(a1 + 160);
    if (*(char *)(a1 + 183) < 0) {
      uint64_t v6 = (void *)*v6;
    }
    int v17 = 68289539;
    int v18 = 0;
    __int16 v19 = 2082;
    uint64_t v20 = "";
    __int16 v21 = 2081;
    unsigned int v22 = v5;
    __int16 v23 = 2081;
    uint64_t v24 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,findLatestValueBefore\", \"filePath\":%{private, location:escape_only}s, \"debugName\":%{private, location:escape_only}s}", (uint8_t *)&v17, 0x26u);
  }
  if (*(double *)(a1 + 8) <= a2)
  {
    uint64_t v12 = *(void *)(a1 + 24);
    uint64_t v13 = *(void *)(a1 + 32);
    if (v12 == v13 || !*(unsigned char *)a1)
    {
      uint64_t v7 = SALogObjectGeneral;
      int v8 = 0;
      int v9 = 0;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        unsigned __int8 v15 = (void *)(a1 + 160);
        if (*(char *)(a1 + 183) < 0) {
          unsigned __int8 v15 = (void *)*v15;
        }
        int v17 = 68289283;
        int v18 = 0;
        __int16 v19 = 2082;
        uint64_t v20 = "";
        __int16 v21 = 2081;
        unsigned int v22 = v15;
        unsigned int v11 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findLatestValueBefore,skipping,notReady\", \"history\":%{p"
              "rivate, location:escape_only}s}";
        goto LABEL_21;
      }
    }
    else
    {
      while (v13 != v12)
      {
        double v14 = *(double *)(v13 - 40);
        v13 -= 40;
        if (v14 <= a2)
        {
          int v8 = *(unsigned __int8 *)(v13 + 8);
          goto LABEL_23;
        }
      }
      int v8 = *(unsigned __int8 *)(v12 + 8);
LABEL_23:
      int v9 = 1;
    }
  }
  else
  {
    uint64_t v7 = SALogObjectGeneral;
    int v8 = 0;
    int v9 = 0;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = (void *)(a1 + 160);
      if (*(char *)(a1 + 183) < 0) {
        uint64_t v10 = (void *)*v10;
      }
      int v17 = 68289283;
      int v18 = 0;
      __int16 v19 = 2082;
      uint64_t v20 = "";
      __int16 v21 = 2081;
      unsigned int v22 = v10;
      unsigned int v11 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findLatestValueBefore,InvalidArgs\", \"history\":%{private, "
            "location:escape_only}s}";
LABEL_21:
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v17, 0x1Cu);
      int v8 = 0;
      int v9 = 0;
    }
  }
  sub_1000115F0(v27);
  return v8 | (v9 << 8);
}

void sub_10000B318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  sub_10000F6D4((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_10000B334(uint64_t a1, double a2)
{
  unsigned __int16 v4 = sub_10000B064(a1 + 216, a2);
  if (v4 < 0x100u) {
    return 3;
  }
  char v6 = v4;
  unsigned __int16 v7 = sub_10000B064(a1 + 792, a2);
  unsigned int v8 = v7;
  if (!v6) {
    unsigned int v8 = 0;
  }
  if (v7 >= 0x100u) {
    return v8;
  }
  else {
    return 3;
  }
}

uint64_t sub_10000B3A8(uint64_t a1, double a2, double a3)
{
  v6[0] = 0;
  v6[1] = 0;
  BOOL v5 = v6;
  sub_10000B41C(a1 + 24, (uint64_t)&v5, a2, a3);
  uint64_t v3 = sub_10005E598((uint64_t)&v5);
  sub_100015B14((uint64_t)&v5, v6[0]);
  return v3;
}

void sub_10000B404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

void *sub_10000B41C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  v23[0] = off_1000F5838;
  v23[1] = a1;
  void v23[3] = v23;
  v22[0] = off_1000F58B8;
  v22[1] = a1;
  v22[3] = v22;
  sub_100010BB4((uint64_t)v24, (uint64_t)v23, (uint64_t)v22);
  sub_10000F6D4(v22);
  sub_10000F6D4(v23);
  sub_100015B14(a2, *(void **)(a2 + 8));
  *(void *)a2 = a2 + 8;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 8) = 0;
  if (*(double *)(a1 + 8) <= a3)
  {
    if (*(void *)(a1 + 24) == *(void *)(a1 + 32) || !*(unsigned char *)a1)
    {
      unsigned int v8 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        double v14 = (void *)(a1 + 160);
        if (*(char *)(a1 + 183) < 0) {
          double v14 = (void *)*v14;
        }
        int v16 = 68289283;
        int v17 = 0;
        __int16 v18 = 2082;
        __int16 v19 = "";
        __int16 v20 = 2081;
        __int16 v21 = v14;
        uint64_t v10 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findAllValuesWithin,skipping,notReady\", \"history\":%{pri"
              "vate, location:escape_only}s}";
        goto LABEL_22;
      }
    }
    else
    {
      LOWORD(v16) = sub_10000B064(a1, a3);
      if ((unsigned __int16)v16 >= 0x100u) {
        sub_100015D28((uint64_t **)a2, (unsigned __int8 *)&v16, &v16);
      }
      uint64_t v12 = *(void *)(a1 + 24);
      uint64_t v11 = *(void *)(a1 + 32);
      while (v12 != v11)
      {
        if (*(double *)v12 >= a3 && *(double *)v12 <= a4) {
          sub_100015D28((uint64_t **)a2, (unsigned __int8 *)(v12 + 8), (unsigned char *)(v12 + 8));
        }
        v12 += 40;
      }
    }
  }
  else
  {
    unsigned int v8 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = (void *)(a1 + 160);
      if (*(char *)(a1 + 183) < 0) {
        uint64_t v9 = (void *)*v9;
      }
      int v16 = 68289283;
      int v17 = 0;
      __int16 v18 = 2082;
      __int16 v19 = "";
      __int16 v20 = 2081;
      __int16 v21 = v9;
      uint64_t v10 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findAllValuesWithin,outOfRangeArgs\", \"history\":%{private,"
            " location:escape_only}s}";
LABEL_22:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&v16, 0x1Cu);
    }
  }
  return sub_1000115F0(v24);
}

void sub_10000B688(_Unwind_Exception *a1)
{
  sub_1000115F0((void *)(v1 - 88));
  _Unwind_Resume(a1);
}

uint64_t sub_10000B6B8(uint64_t a1, double a2, double a3)
{
  v6[0] = 0;
  v6[1] = 0;
  BOOL v5 = v6;
  sub_10000B41C(a1 + 216, (uint64_t)&v5, a2, a3);
  uint64_t v3 = sub_10005E598((uint64_t)&v5);
  sub_100015B14((uint64_t)&v5, v6[0]);
  return v3;
}

void sub_10000B714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

void sub_10000B72C(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  unsigned int v8 = 0;
  uint64_t v9 = 0;
  unsigned __int16 v7 = &v8;
  sub_10000B41C(a1 + 216, (uint64_t)&v7, a3, a4);
  if (v9)
  {
    unsigned int v5 = sub_10005E598((uint64_t)&v7);
    if (v5 >= 4) {
      char v6 = "NotAvailable";
    }
    else {
      char v6 = off_1000F5D28[v5];
    }
    sub_10000DD48(a2, v6);
  }
  else
  {
    sub_10000DD48(a2, "NotAvailable");
  }
  sub_100015B14((uint64_t)&v7, v8);
}

void sub_10000B7C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

uint64_t sub_10000B7E4(uint64_t a1, double a2, double a3)
{
  v6[0] = 0;
  v6[1] = 0;
  unsigned int v5 = v6;
  sub_10000B41C(a1 + 792, (uint64_t)&v5, a2, a3);
  uint64_t v3 = sub_10005E598((uint64_t)&v5);
  sub_100015B14((uint64_t)&v5, v6[0]);
  return v3;
}

void sub_10000B840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

uint64_t sub_10000B858(uint64_t a1, double a2, double a3)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 72))(a1);
  if (result)
  {
    int v7 = result;
    uint64_t result = (*(uint64_t (**)(uint64_t, double, double))(*(void *)a1 + 64))(a1, a2, a3);
    if (result)
    {
      if (v7 == 2 && result == 2)
      {
        return 3;
      }
      else if (result == 1 && v7 == 1)
      {
        return 1;
      }
      else
      {
        return 2;
      }
    }
  }
  return result;
}

uint64_t sub_10000B90C(uint64_t a1, double a2, double a3)
{
  v6[0] = 0;
  v6[1] = 0;
  unsigned int v5 = v6;
  sub_10000B41C(a1 + 408, (uint64_t)&v5, a2, a3);
  uint64_t v3 = sub_10005E598((uint64_t)&v5);
  sub_100015B14((uint64_t)&v5, v6[0]);
  return v3;
}

void sub_10000B968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

uint64_t sub_10000B980(uint64_t a1, double a2, double a3)
{
  char v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289539;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)__int16 v30 = 2082;
    *(void *)&v30[2] = "";
    *(_WORD *)&v30[10] = 2049;
    *(double *)&v30[12] = a2;
    __int16 v31 = 2049;
    double v32 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saBiomeProd,wifiQualityWithinWindow\", \"start\":\"%{private}.2f\", \"end\":\"%{private}.2f\"}", buf, 0x26u);
  }
  *(void *)uint64_t buf = 0;
  *(void *)__int16 v30 = 0;
  *(void *)&v30[8] = 0;
  sub_10000BCF8(a1 + 600, (char **)buf, a2, a3);
  int v7 = *(double **)buf;
  uint64_t v8 = *(void *)v30;
  if (*(void *)buf != *(void *)v30)
  {
    unint64_t v9 = (uint64_t)(*(void *)v30 - *(void *)buf) >> 4;
    if (v9 == 2)
    {
      if (*(double *)(*(void *)buf + 8) == *(double *)(*(void *)buf + 24))
      {
        uint64_t v10 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
        {
          int v14 = *(_DWORD *)v7;
          int v23 = 68289283;
          int v24 = 0;
          __int16 v25 = 2082;
          unsigned int v26 = "";
          __int16 v27 = 1025;
          int v28 = v14;
          uint64_t v12 = "{\"msg%{public}.0s\":\"#saBiomeProd,wifiQualityWithinWindow,size two\", \"quality\":%{private}d}";
          goto LABEL_15;
        }
LABEL_16:
        uint64_t v8 = *(unsigned int *)v7;
LABEL_23:
        operator delete(v7);
        return v8;
      }
    }
    else if (v9 == 1)
    {
      uint64_t v10 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
      {
        int v11 = *(_DWORD *)v7;
        int v23 = 68289283;
        int v24 = 0;
        __int16 v25 = 2082;
        unsigned int v26 = "";
        __int16 v27 = 1025;
        int v28 = v11;
        uint64_t v12 = "{\"msg%{public}.0s\":\"#saBiomeProd,wifiQualityWithinWindow,size one\", \"quality\":%{private}d}";
LABEL_15:
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, v12, (uint8_t *)&v23, 0x18u);
        goto LABEL_16;
      }
      goto LABEL_16;
    }
    sub_10000DDFC(*(double **)buf, *(unint64_t *)v30, 126 - 2 * __clz(v9), 1);
    double v15 = 0.0;
    unint64_t v16 = v9 - 1;
    int v17 = v7;
    double v18 = v7[1];
    do
    {
      double v19 = v18;
      double v18 = v17[3];
      double v20 = v18 - v19;
      if (v20 != 0.0) {
        double v15 = v15 + (double)*(int *)v17 * v20;
      }
      v17 += 2;
      --v16;
    }
    while (v16);
    LODWORD(v8) = vcvtmd_s64_f64(v15 / (*(double *)(v8 - 8) - v7[1]));
    __int16 v21 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
    {
      int v23 = 68289283;
      int v24 = 0;
      __int16 v25 = 2082;
      unsigned int v26 = "";
      __int16 v27 = 1025;
      int v28 = v8;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saBiomeProd,wifiQualityWithinWindow\", \"quality\":%{private}d}", (uint8_t *)&v23, 0x18u);
    }
    goto LABEL_23;
  }
  uint64_t v13 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    int v23 = 68289283;
    int v24 = 0;
    __int16 v25 = 2082;
    unsigned int v26 = "";
    __int16 v27 = 1025;
    int v28 = -1;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saBiomeProd,wifiQualityWithinWindow,empty history\", \"quality\":%{private}d}", (uint8_t *)&v23, 0x18u);
  }
  uint64_t v8 = 0xFFFFFFFFLL;
  if (v7) {
    goto LABEL_23;
  }
  return v8;
}

void sub_10000BCE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10000BCF8(uint64_t a1, char **a2, double a3, double a4)
{
  v78[0] = off_1000F5938;
  v78[1] = a1;
  v78[3] = v78;
  v77[0] = off_1000F59B8;
  v77[1] = a1;
  v77[3] = v77;
  sub_100010BB4((uint64_t)v79, (uint64_t)v78, (uint64_t)v77);
  sub_10000F6D4(v77);
  sub_10000F6D4(v78);
  a2[1] = *a2;
  double v8 = *(double *)(a1 + 8);
  if (v8 > a3)
  {
    unint64_t v9 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = (void *)(a1 + 160);
      if (*(char *)(a1 + 183) < 0) {
        uint64_t v10 = (void *)*v10;
      }
      uint64_t buf = 68289283;
      __int16 v89 = 2082;
      v90 = "";
      __int16 v91 = 2081;
      v92 = v10;
      int v11 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findAllValTimestamp,outOfRangeArgs\", \"history\":%{private,"
            " location:escape_only}s}";
LABEL_21:
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&buf, 0x1Cu);
      return sub_1000115F0(v79);
    }
    return sub_1000115F0(v79);
  }
  if (*(void *)(a1 + 24) != *(void *)(a1 + 32) && *(unsigned char *)a1)
  {
    uint64_t v12 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = (void *)(a1 + 160);
      if (*(char *)(a1 + 183) < 0) {
        uint64_t v13 = (void *)*v13;
      }
      uint64_t v14 = *(void *)(a1 + 16);
      uint64_t buf = 68290051;
      __int16 v89 = 2082;
      v90 = "";
      __int16 v91 = 2081;
      v92 = v13;
      __int16 v93 = 2049;
      double v94 = a3;
      __int16 v95 = 2049;
      double v96 = v8;
      __int16 v97 = 2049;
      uint64_t v98 = v14;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,findLatestEventBeforeInternal\", \"debugName\":%{private, location:escape_only}s, \"time\":\"%{private}.2f\", \"fStartTimeSeconds\":\"%{private}.2f\", \"fEndTimeSeconds\":\"%{private}.2f\"}", (uint8_t *)&buf, 0x3Au);
    }
    v87[0] = off_1000F5A38;
    v87[1] = a1;
    v87[3] = v87;
    v86[0] = off_1000F5AB8;
    v86[1] = a1;
    v86[3] = v86;
    sub_100010BB4((uint64_t)&buf, (uint64_t)v87, (uint64_t)v86);
    sub_10000F6D4(v86);
    sub_10000F6D4(v87);
    if (*(double *)(a1 + 8) <= a3)
    {
      double v20 = *(uint64_t **)(a1 + 24);
      __int16 v21 = *(uint64_t **)(a1 + 32);
      if (v20 != v21 && *(unsigned char *)a1)
      {
        while (v21 != v20)
        {
          double v22 = *((double *)v21 - 5);
          v21 -= 5;
          if (v22 <= a3)
          {
            unsigned int v73 = *((_DWORD *)v21 + 2);
            double v72 = *(double *)v21;
            if ((*((char *)v21 + 39) & 0x80000000) == 0)
            {
              int v23 = (long long *)(v21 + 2);
LABEL_103:
              long long v71 = *v23;
              uint64_t v75 = *((void *)v23 + 2);
              long long __p = v71;
              goto LABEL_106;
            }
            sub_100004CB8(&__p, (void *)v21[2], v21[3]);
            goto LABEL_106;
          }
        }
        unsigned int v73 = *((_DWORD *)v20 + 2);
        double v72 = *(double *)v20;
        if ((*((char *)v20 + 39) & 0x80000000) == 0)
        {
          int v23 = (long long *)(v20 + 2);
          goto LABEL_103;
        }
        sub_100004CB8(&__p, (void *)v20[2], v20[3]);
LABEL_106:
        char v25 = 1;
        goto LABEL_35;
      }
      double v15 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        int v24 = (void *)(a1 + 160);
        if (*(char *)(a1 + 183) < 0) {
          int v24 = (void *)*v24;
        }
        *(_DWORD *)v80 = 68289283;
        int v81 = 0;
        __int16 v82 = 2082;
        v83 = "";
        __int16 v84 = 2081;
        v85 = v24;
        int v17 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findLatestEventBefore,skipping,notReady\", \"history\":%{p"
              "rivate, location:escape_only}s}";
        goto LABEL_33;
      }
    }
    else
    {
      double v15 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        unint64_t v16 = (void *)(a1 + 160);
        if (*(char *)(a1 + 183) < 0) {
          unint64_t v16 = (void *)*v16;
        }
        *(_DWORD *)v80 = 68289283;
        int v81 = 0;
        __int16 v82 = 2082;
        v83 = "";
        __int16 v84 = 2081;
        v85 = v16;
        int v17 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findLatestEventBefore,InvalidArgs\", \"history\":%{private"
              ", location:escape_only}s}";
LABEL_33:
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, v17, v80, 0x1Cu);
      }
    }
    char v25 = 0;
    LOBYTE(v72) = 0;
LABEL_35:
    char v76 = v25;
    sub_1000115F0(&buf);
    if (v76)
    {
      __int16 v27 = a2[1];
      unint64_t v26 = (unint64_t)a2[2];
      if ((unint64_t)v27 >= v26)
      {
        uint64_t v29 = (v27 - *a2) >> 4;
        unint64_t v30 = v29 + 1;
        if ((unint64_t)(v29 + 1) >> 60) {
          sub_1000050E8();
        }
        uint64_t v31 = v26 - (void)*a2;
        if (v31 >> 3 > v30) {
          unint64_t v30 = v31 >> 3;
        }
        if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v32 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v32 = v30;
        }
        if (v32) {
          unint64_t v32 = (unint64_t)sub_100016694(v32);
        }
        else {
          uint64_t v33 = 0;
        }
        unsigned int v34 = (void *)(v32 + 16 * v29);
        unint64_t v35 = v32 + 16 * v33;
        void *v34 = v73;
        *((double *)v34 + 1) = v72;
        int v28 = (char *)(v34 + 2);
        uint64_t v37 = *a2;
        unint64_t v36 = a2[1];
        if (v36 != *a2)
        {
          do
          {
            *((_OWORD *)v34 - 1) = *((_OWORD *)v36 - 1);
            v34 -= 2;
            v36 -= 16;
          }
          while (v36 != v37);
          unint64_t v36 = *a2;
        }
        *a2 = (char *)v34;
        a2[1] = v28;
        a2[2] = (char *)v35;
        if (v36) {
          operator delete(v36);
        }
      }
      else
      {
        *(void *)__int16 v27 = v73;
        *((double *)v27 + 1) = v72;
        int v28 = v27 + 16;
      }
      a2[1] = v28;
    }
    uint64_t v38 = *(void *)(a1 + 24);
    for (uint64_t i = *(void *)(a1 + 32); v38 != i; v38 += 40)
    {
      double v40 = *(double *)v38;
      if (*(double *)v38 >= a3 && v40 <= a4)
      {
        uint64_t v42 = *(unsigned int *)(v38 + 8);
        unint64_t v44 = (unint64_t)a2[1];
        unint64_t v43 = (unint64_t)a2[2];
        if (v44 >= v43)
        {
          uint64_t v46 = (uint64_t)(v44 - (void)*a2) >> 4;
          unint64_t v47 = v46 + 1;
          if ((unint64_t)(v46 + 1) >> 60) {
            sub_1000050E8();
          }
          uint64_t v48 = v43 - (void)*a2;
          if (v48 >> 3 > v47) {
            unint64_t v47 = v48 >> 3;
          }
          if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v49 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v49 = v47;
          }
          if (v49) {
            unint64_t v49 = (unint64_t)sub_100016694(v49);
          }
          else {
            uint64_t v50 = 0;
          }
          unint64_t v51 = v49 + 16 * v46;
          *(void *)unint64_t v51 = v42;
          *(double *)(v51 + 8) = v40;
          uint64_t v53 = *a2;
          long long v52 = a2[1];
          unint64_t v54 = v51;
          if (v52 != *a2)
          {
            do
            {
              *(_OWORD *)(v54 - 16) = *((_OWORD *)v52 - 1);
              v54 -= 16;
              v52 -= 16;
            }
            while (v52 != v53);
            long long v52 = *a2;
          }
          unint64_t v45 = v51 + 16;
          *a2 = (char *)v54;
          a2[1] = (char *)(v51 + 16);
          a2[2] = (char *)(v49 + 16 * v50);
          if (v52) {
            operator delete(v52);
          }
        }
        else
        {
          *(void *)unint64_t v44 = v42;
          *(double *)(v44 + 8) = v40;
          unint64_t v45 = v44 + 16;
        }
        a2[1] = (char *)v45;
      }
    }
    uint64_t v55 = *a2;
    v56 = a2[1];
    if (*a2 == v56)
    {
      uint64_t v60 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v61 = (void *)(a1 + 160);
        if (*(char *)(a1 + 183) < 0) {
          __int16 v61 = (void *)*v61;
        }
        uint64_t buf = 68289283;
        __int16 v89 = 2082;
        v90 = "";
        __int16 v91 = 2081;
        v92 = v61;
        _os_log_impl((void *)&_mh_execute_header, v60, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findAllValTimestamp,no val available\", \"history\":%{private, location:escape_only}s}", (uint8_t *)&buf, 0x1Cu);
      }
    }
    else
    {
      __int16 v57 = v56 - 16;
      unint64_t v58 = (unint64_t)a2[2];
      if ((unint64_t)v56 >= v58)
      {
        uint64_t v62 = (v56 - v55) >> 4;
        unint64_t v63 = v62 + 1;
        if ((unint64_t)(v62 + 1) >> 60) {
          sub_1000050E8();
        }
        uint64_t v64 = v58 - (void)v55;
        if (v64 >> 3 > v63) {
          unint64_t v63 = v64 >> 3;
        }
        if ((unint64_t)v64 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v65 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v65 = v63;
        }
        if (v65) {
          unint64_t v65 = (unint64_t)sub_100016694(v65);
        }
        else {
          uint64_t v66 = 0;
        }
        v67 = (_OWORD *)(v65 + 16 * v62);
        unint64_t v68 = v65 + 16 * v66;
        _OWORD *v67 = *(_OWORD *)v57;
        __int16 v59 = (double *)(v67 + 1);
        v70 = *a2;
        v69 = a2[1];
        if (v69 != *a2)
        {
          do
          {
            *--v67 = *((_OWORD *)v69 - 1);
            v69 -= 16;
          }
          while (v69 != v70);
          v69 = *a2;
        }
        *a2 = (char *)v67;
        a2[1] = (char *)v59;
        a2[2] = (char *)v68;
        if (v69) {
          operator delete(v69);
        }
      }
      else
      {
        *(_OWORD *)v56 = *(_OWORD *)v57;
        __int16 v59 = (double *)(v56 + 16);
      }
      a2[1] = (char *)v59;
      *((double *)*a2 + 1) = a3;
      *(v59 - 1) = a4;
    }
    if (v76 && SHIBYTE(v75) < 0) {
      operator delete((void *)__p);
    }
    return sub_1000115F0(v79);
  }
  unint64_t v9 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    double v18 = (void *)(a1 + 160);
    if (*(char *)(a1 + 183) < 0) {
      double v18 = (void *)*v18;
    }
    uint64_t buf = 68289283;
    __int16 v89 = 2082;
    v90 = "";
    __int16 v91 = 2081;
    v92 = v18;
    int v11 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findAllValTimestamp,skipping,notReady\", \"history\":%{private"
          ", location:escape_only}s}";
    goto LABEL_21;
  }
  return sub_1000115F0(v79);
}

void sub_10000C4DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  sub_1000115F0((void *)(v41 - 208));
  sub_1000115F0(&a29);
  _Unwind_Resume(a1);
}

uint64_t sub_10000C558(uint64_t a1, double a2, double a3)
{
  char v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 68289539;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)double v22 = 2082;
    *(void *)&v22[2] = "";
    *(_WORD *)&v22[10] = 2049;
    *(double *)&v22[12] = a2;
    __int16 v23 = 2049;
    double v24 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saBiomeProd,cellularQualityWithinWindow\", \"start\":\"%{private}.2f\", \"end\":\"%{private}.2f\"}", buf, 0x26u);
  }
  *(void *)uint64_t buf = 0;
  *(void *)double v22 = 0;
  *(void *)&v22[8] = 0;
  sub_10000BCF8(a1 + 984, (char **)buf, a2, a3);
  int v7 = *(void **)buf;
  if (*(void *)buf == *(void *)v22)
  {
    uint64_t v12 = SALogObjectGeneral;
    uint64_t v11 = 0xFFFFFFFFLL;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)double v15 = 68289283;
      int v16 = 0;
      __int16 v17 = 2082;
      double v18 = "";
      __int16 v19 = 1025;
      int v20 = -1;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saBiomeProd,cellularQualityWithinWindow,empty history\", \"quality\":%{private}d}", v15, 0x18u);
    }
  }
  else
  {
    unsigned int v14 = 0;
    char v8 = sub_10000C7E4((double **)buf, &v14);
    unint64_t v9 = SALogObjectGeneral;
    BOOL v10 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG);
    if (v8)
    {
      if (v10)
      {
        *(_DWORD *)double v15 = 68289283;
        int v16 = 0;
        __int16 v17 = 2082;
        double v18 = "";
        __int16 v19 = 1025;
        int v20 = v14;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saBiomeProd,cellularQualityWithinWindow\", \"quality\":%{private}d}", v15, 0x18u);
      }
      uint64_t v11 = v14;
    }
    else
    {
      if (v10)
      {
        *(_DWORD *)double v15 = 68289026;
        int v16 = 0;
        __int16 v17 = 2082;
        double v18 = "";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saBiomeProd,cellularQualityWithinWindow,invalid median conversion\"}", v15, 0x12u);
      }
      uint64_t v11 = 0xFFFFFFFFLL;
    }
  }
  if (v7) {
    operator delete(v7);
  }
  return v11;
}

void sub_10000C7C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  if (v15) {
    operator delete(v15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10000C7E4(double **a1, _DWORD *a2)
{
  unsigned __int16 v4 = *a1;
  unint64_t v5 = (unint64_t)a1[1];
  if (v4 == (double *)v5)
  {
    int v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v52 = 0;
      __int16 v53 = 2082;
      unint64_t v54 = "";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saBiomeProd,findWeightedMedianOfEvents,empty events\"}", buf, 0x12u);
    }
    return 0;
  }
  else
  {
    if (v5 - (void)v4 == 16)
    {
      int v6 = *(_DWORD *)v4;
LABEL_11:
      *a2 = v6;
      return 1;
    }
    sub_10000E96C(v4, v5, 126 - 2 * __clz((uint64_t)(v5 - (void)v4) >> 4), 1);
    BOOL v10 = *a1;
    unint64_t v9 = a1[1];
    int v11 = (int)(*(v9 - 1) - (*a1)[1]);
    if (!v11)
    {
      int v6 = *(_DWORD *)v10;
      goto LABEL_11;
    }
    if ((char *)v9 - (char *)v10 == 16)
    {
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v46 = 0;
      unint64_t v47 = 0;
      long long __p = 0;
    }
    else
    {
      unint64_t v44 = a2;
      uint64_t v12 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      uint64_t v13 = 0;
      int v16 = 0;
      unint64_t v17 = 0;
      unint64_t v18 = 0;
      double v19 = (double)v11;
      do
      {
        int v20 = &v10[2 * v18];
        unint64_t v21 = v18 + 1;
        if (v20[1] != v10[2 * v18 + 3])
        {
          if ((unint64_t)v14 >= v15)
          {
            uint64_t v22 = (v14 - v12) >> 2;
            unint64_t v23 = v22 + 1;
            if ((unint64_t)(v22 + 1) >> 62) {
              sub_1000050E8();
            }
            if ((uint64_t)(v15 - (void)v12) >> 1 > v23) {
              unint64_t v23 = (uint64_t)(v15 - (void)v12) >> 1;
            }
            if (v15 - (unint64_t)v12 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v24 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v24 = v23;
            }
            if (v24) {
              unint64_t v24 = (unint64_t)sub_10000F374(v24);
            }
            else {
              uint64_t v25 = 0;
            }
            unint64_t v26 = (char *)(v24 + 4 * v22);
            *(_DWORD *)unint64_t v26 = *(_DWORD *)v20;
            __int16 v27 = v26 + 4;
            while (v14 != v12)
            {
              int v28 = *((_DWORD *)v14 - 1);
              v14 -= 4;
              *((_DWORD *)v26 - 1) = v28;
              v26 -= 4;
            }
            unint64_t v15 = v24 + 4 * v25;
            if (v12)
            {
              unint64_t v29 = v24 + 4 * v25;
              operator delete(v12);
              unint64_t v15 = v29;
            }
            uint64_t v12 = v26;
            unsigned int v14 = v27;
          }
          else
          {
            *(_DWORD *)unsigned int v14 = *(_DWORD *)v20;
            v14 += 4;
          }
          float v30 = ((*a1)[2 * v21 + 1] - (*a1)[2 * v18 + 1]) / v19;
          if ((unint64_t)v16 >= v17)
          {
            uint64_t v32 = v16 - v13;
            unint64_t v33 = v32 + 1;
            if ((unint64_t)(v32 + 1) >> 62) {
              sub_1000050E8();
            }
            unint64_t v34 = v15;
            if ((uint64_t)(v17 - (void)v13) >> 1 > v33) {
              unint64_t v33 = (uint64_t)(v17 - (void)v13) >> 1;
            }
            if (v17 - (unint64_t)v13 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v35 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v35 = v33;
            }
            if (v35) {
              unint64_t v35 = (unint64_t)sub_10000F374(v35);
            }
            else {
              uint64_t v36 = 0;
            }
            uint64_t v37 = (float *)(v35 + 4 * v32);
            float *v37 = v30;
            uint64_t v31 = v37 + 1;
            while (v16 != v13)
            {
              int v38 = *((_DWORD *)v16-- - 1);
              *((_DWORD *)v37-- - 1) = v38;
            }
            unint64_t v17 = v35 + 4 * v36;
            if (v13) {
              operator delete(v13);
            }
            uint64_t v13 = v37;
            unint64_t v15 = v34;
          }
          else
          {
            *int v16 = v30;
            uint64_t v31 = v16 + 1;
          }
          BOOL v10 = *a1;
          unint64_t v9 = a1[1];
          int v16 = v31;
        }
        unint64_t v18 = v21;
      }
      while ((((char *)v9 - (char *)v10) >> 4) - 1 > v21);
      uint64_t v48 = 0;
      unint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v39 = v14 - v12;
      if (v14 != v12)
      {
        if (v39 < 0) {
          sub_1000050E8();
        }
        uint64_t v48 = sub_10000F374(v39 >> 2);
        uint64_t v50 = (char *)v48 + 4 * v40;
        memmove(v48, v12, v14 - v12);
        unint64_t v49 = (char *)v48 + 4 * (v39 >> 2);
      }
      long long __p = 0;
      uint64_t v46 = 0;
      unint64_t v47 = 0;
      uint64_t v41 = (char *)v16 - (char *)v13;
      if (v16 == v13)
      {
        a2 = v44;
      }
      else
      {
        a2 = v44;
        if (v41 < 0) {
          sub_1000050E8();
        }
        long long __p = sub_10000F374(v41 >> 2);
        unint64_t v47 = (char *)__p + 4 * v42;
        memmove(__p, v13, (char *)v16 - (char *)v13);
        uint64_t v46 = (char *)__p + 4 * (v41 >> 2);
      }
    }
    uint64_t v8 = SACommonUtils::weightedMedian((char **)&v48, (float **)&__p, a2);
    if (__p)
    {
      uint64_t v46 = (char *)__p;
      operator delete(__p);
    }
    if (v48)
    {
      unint64_t v49 = (char *)v48;
      operator delete(v48);
    }
    if (v13) {
      operator delete(v13);
    }
    if (v12) {
      operator delete(v12);
    }
  }
  return v8;
}

void sub_10000CC10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
  {
    operator delete(__p);
    if (!v16)
    {
LABEL_3:
      if (!v15) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if (!v16)
  {
    goto LABEL_3;
  }
  operator delete(v16);
  if (!v15) {
LABEL_5:
  }
    _Unwind_Resume(exception_object);
LABEL_4:
  operator delete(v15);
  goto LABEL_5;
}

void sub_10000CC84(uint64_t a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  double v19 = 0;
  int v20 = 0;
  uint64_t v21 = 0;
  sub_10000BCF8(a1 + 1176, (char **)&v19, a3, a4);
  unint64_t v5 = v19;
  if (v19 == v20)
  {
    int v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289283;
      int v23 = 0;
      __int16 v24 = 2082;
      uint64_t v25 = "";
      __int16 v26 = 2081;
      v27[0] = "Unknown";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saBiomeProd,cellularRatWithinWindow,empty history\", \"rat\":%{private, location:escape_only}s}", buf, 0x1Cu);
    }
    sub_10000DD48(a2, "Unknown");
  }
  else
  {
    int v18 = 0;
    if (sub_10000C7E4(&v19, &v18))
    {
      sub_10000DD48(a2, "Unknown");
      switch(v18)
      {
        case 1:
          if (*((char *)a2 + 23) < 0)
          {
            a2[1] = 3;
            unint64_t v9 = (uint64_t *)*a2;
          }
          else
          {
            *((unsigned char *)a2 + 23) = 3;
            unint64_t v9 = a2;
          }
          *((unsigned char *)v9 + 2) = 77;
          __int16 v13 = 21319;
          goto LABEL_32;
        case 2:
          if (*((char *)a2 + 23) < 0)
          {
            a2[1] = 6;
            BOOL v10 = (uint64_t *)*a2;
          }
          else
          {
            *((unsigned char *)a2 + 23) = 6;
            BOOL v10 = a2;
          }
          *((_WORD *)v10 + 2) = 30769;
          int v14 = 1095582787;
          goto LABEL_35;
        case 3:
          if (*((char *)a2 + 23) < 0)
          {
            a2[1] = 3;
            unint64_t v9 = (uint64_t *)*a2;
          }
          else
          {
            *((unsigned char *)a2 + 23) = 3;
            unint64_t v9 = a2;
          }
          *((unsigned char *)v9 + 2) = 69;
          __int16 v13 = 21580;
LABEL_32:
          *(_WORD *)unint64_t v9 = v13;
          uint64_t v12 = (char *)v9 + 3;
          break;
        case 4:
          if (*((char *)a2 + 23) < 0)
          {
            a2[1] = 6;
            BOOL v10 = (uint64_t *)*a2;
          }
          else
          {
            *((unsigned char *)a2 + 23) = 6;
            BOOL v10 = a2;
          }
          *((_WORD *)v10 + 2) = 16723;
          int v14 = 1311593038;
LABEL_35:
          *(_DWORD *)BOOL v10 = v14;
          uint64_t v12 = (char *)v10 + 6;
          break;
        case 5:
          if (*((char *)a2 + 23) < 0)
          {
            a2[1] = 5;
            int v11 = (uint64_t *)*a2;
          }
          else
          {
            *((unsigned char *)a2 + 23) = 5;
            int v11 = a2;
          }
          *((unsigned char *)v11 + 4) = 65;
          int v15 = 1395479118;
          goto LABEL_40;
        case 6:
          if (*((char *)a2 + 23) < 0)
          {
            a2[1] = 5;
            int v11 = (uint64_t *)*a2;
          }
          else
          {
            *((unsigned char *)a2 + 23) = 5;
            int v11 = a2;
          }
          *((unsigned char *)v11 + 4) = 114;
          int v15 = 1701344335;
LABEL_40:
          *(_DWORD *)int v11 = v15;
          uint64_t v12 = (char *)v11 + 5;
          break;
        default:
          if (*((char *)a2 + 23) < 0)
          {
            a2[1] = 7;
            int v6 = (_DWORD *)*a2;
          }
          else
          {
            *((unsigned char *)a2 + 23) = 7;
            int v6 = a2;
          }
          *(_DWORD *)((char *)v6 + 3) = 1853321070;
          _DWORD *v6 = 1852534357;
          uint64_t v12 = (char *)v6 + 7;
          break;
      }
      *uint64_t v12 = 0;
      int v16 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
      {
        if (*((char *)a2 + 23) >= 0) {
          unint64_t v17 = a2;
        }
        else {
          unint64_t v17 = (uint64_t *)*a2;
        }
        *(_DWORD *)uint64_t buf = 68289539;
        int v23 = 0;
        __int16 v24 = 2082;
        uint64_t v25 = "";
        __int16 v26 = 1025;
        LODWORD(v27[0]) = v18;
        WORD2(v27[0]) = 2081;
        *(void *)((char *)v27 + 6) = v17;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saBiomeProd,cellularRatWithinWindow\", \"rat\":%{private}d, \"ratStr\":%{private, location:escape_only}s}", buf, 0x22u);
      }
    }
    else
    {
      uint64_t v8 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        int v23 = 0;
        __int16 v24 = 2082;
        uint64_t v25 = "";
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saBiomeProd,cellularRatWithinWindow,invalid median conversion\"}", buf, 0x12u);
      }
      sub_10000DD48(a2, "Unknown");
    }
  }
  if (v5) {
    operator delete(v5);
  }
}

void sub_10000D084(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (v10) {
    operator delete(v10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000D0C4(uint64_t a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  sub_10000BCF8(a1 + 1368, (char **)&v21, a3, a4);
  unint64_t v5 = v21;
  if (v21 == v22)
  {
    uint64_t v10 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_12;
    }
    *(_DWORD *)uint64_t buf = 68289283;
    int v25 = 0;
    __int16 v26 = 2082;
    __int16 v27 = "";
    __int16 v28 = 2081;
    v29[0] = "Unknown";
    int v11 = "{\"msg%{public}.0s\":\"#saBiomeProd,cellularRrcWithinWindow,empty history\", \"rrc\":%{private, location:escape_only}s}";
    uint64_t v12 = v10;
    uint32_t v13 = 28;
    goto LABEL_11;
  }
  int v20 = 0;
  char v6 = sub_10000C7E4(&v21, &v20);
  int v7 = SALogObjectGeneral;
  BOOL v8 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG);
  if ((v6 & 1) == 0)
  {
    if (!v8) {
      goto LABEL_12;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v25 = 0;
    __int16 v26 = 2082;
    __int16 v27 = "";
    int v11 = "{\"msg%{public}.0s\":\"#saBiomeProd,cellularRrcWithinWindow,invalid median conversion\"}";
    uint64_t v12 = v7;
    uint32_t v13 = 18;
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, v11, buf, v13);
LABEL_12:
    int v9 = 0;
    if (!v5) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v8)
  {
    *(_DWORD *)uint64_t buf = 68289283;
    int v25 = 0;
    __int16 v26 = 2082;
    __int16 v27 = "";
    __int16 v28 = 1025;
    LODWORD(v29[0]) = v20;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saBiomeProd,cellularRrcWithinWindow\", \"rrc\":%{private}d}", buf, 0x18u);
  }
  int v9 = v20;
  if (v5) {
LABEL_13:
  }
    operator delete(v5);
LABEL_14:
  sub_10000DD48(a2, "Unknown");
  if (v9 == 2)
  {
    if (*((char *)a2 + 23) < 0)
    {
      a2[1] = 9;
      int v15 = (uint64_t *)*a2;
    }
    else
    {
      *((unsigned char *)a2 + 23) = 9;
      int v15 = a2;
    }
    *((unsigned char *)v15 + 8) = 100;
    uint64_t *v15 = *(void *)"Connected";
    unint64_t v17 = (char *)v15 + 9;
  }
  else if (v9 == 1)
  {
    if (*((char *)a2 + 23) < 0)
    {
      a2[1] = 4;
      int v16 = (_DWORD *)*a2;
    }
    else
    {
      *((unsigned char *)a2 + 23) = 4;
      int v16 = a2;
    }
    *int v16 = 1701602377;
    unint64_t v17 = v16 + 1;
  }
  else
  {
    if (*((char *)a2 + 23) < 0)
    {
      a2[1] = 7;
      int v14 = (_DWORD *)*a2;
    }
    else
    {
      *((unsigned char *)a2 + 23) = 7;
      int v14 = a2;
    }
    *(_DWORD *)((char *)v14 + 3) = 1853321070;
    _DWORD *v14 = 1852534357;
    unint64_t v17 = (char *)v14 + 7;
  }
  *unint64_t v17 = 0;
  int v18 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    if (*((char *)a2 + 23) >= 0) {
      double v19 = a2;
    }
    else {
      double v19 = (uint64_t *)*a2;
    }
    *(_DWORD *)uint64_t buf = 68289539;
    int v25 = 0;
    __int16 v26 = 2082;
    __int16 v27 = "";
    __int16 v28 = 1025;
    LODWORD(v29[0]) = v9;
    WORD2(v29[0]) = 2081;
    *(void *)((char *)v29 + 6) = v19;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saBiomeProd,cellularRrcWithinWindow\", \"rrc\":%{private}d, \"rrcStr\":%{private, location:escape_only}s}", buf, 0x22u);
  }
}

void sub_10000D404(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (v10) {
    operator delete(v10);
  }
  _Unwind_Resume(exception_object);
}

double sub_10000D428(uint64_t a1, double *a2)
{
  uint64_t v3 = a1 + 1368;
  double v4 = *a2;
  v26[0] = off_1000F5B38;
  v26[1] = a1 + 1368;
  v26[3] = v26;
  v25[0] = off_1000F5BB8;
  v25[1] = a1 + 1368;
  void v25[3] = v25;
  sub_100010BB4((uint64_t)&buf, (uint64_t)v26, (uint64_t)v25);
  sub_10000F6D4(v25);
  sub_10000F6D4(v26);
  if (*(void *)(a1 + 1392) == *(void *)(a1 + 1400))
  {
    uint64_t v6 = SALogObjectGeneral;
    double v7 = -1.0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_17;
    }
    int v19 = 68289026;
    int v20 = 0;
    __int16 v21 = 2082;
    uint64_t v22 = "";
    BOOL v8 = "{\"msg%{public}.0s\":\"#saEventHistory,findLastValueDuration,empty history\"}";
    goto LABEL_7;
  }
  unint64_t v5 = sub_10000D788(v3, v4);
  if (!HIDWORD(v5))
  {
    uint64_t v6 = SALogObjectGeneral;
    double v7 = -1.0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_17;
    }
    int v19 = 68289026;
    int v20 = 0;
    __int16 v21 = 2082;
    uint64_t v22 = "";
    BOOL v8 = "{\"msg%{public}.0s\":\"#saEventHistory,findLastValueDuration,no event before timestamp\"}";
LABEL_7:
    int v9 = v6;
    uint32_t v10 = 18;
LABEL_16:
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, v8, (uint8_t *)&v19, v10);
    goto LABEL_17;
  }
  uint64_t v11 = *(void *)(a1 + 1400);
  uint64_t v12 = *(void *)(a1 + 1392);
  double v7 = -1.0;
  if (v11 != v12)
  {
    uint64_t v13 = *(void *)(a1 + 1400);
    do
    {
      double v14 = *(double *)(v13 - 40);
      v13 -= 40;
      double v15 = v14;
      if (v14 <= v4)
      {
        if (*(_DWORD *)(v11 - 32) != v5) {
          break;
        }
        double v7 = v4 - v15;
      }
      uint64_t v11 = v13;
    }
    while (v13 != v12);
  }
  uint64_t v16 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    int v19 = 68289283;
    int v20 = 0;
    __int16 v21 = 2082;
    uint64_t v22 = "";
    __int16 v23 = 2049;
    double v24 = v7;
    BOOL v8 = "{\"msg%{public}.0s\":\"#saEventHistory,findLastValueDuration,\", \"lastValueDuration\":\"%{private}.2f\"}";
    int v9 = v16;
    uint32_t v10 = 28;
    goto LABEL_16;
  }
LABEL_17:
  sub_1000115F0(&buf);
  unint64_t v17 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    uint64_t buf = 68289283;
    __int16 v28 = 2082;
    unint64_t v29 = "";
    __int16 v30 = 2049;
    double v31 = v7;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saBiomeProd,timeSinceRrcChanged\", \"timeSinceRrcChanged\":\"%{private}.2f\"}", (uint8_t *)&buf, 0x1Cu);
  }
  return v7 * 1000.0;
}

void sub_10000D6FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_1000115F0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_10000D728@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>)
{
  unint64_t v4 = sub_10000D788(a1 + 1560, a3);
  if (HIDWORD(v4)) {
    unint64_t v5 = off_1000F5D48[(int)v4];
  }
  else {
    unint64_t v5 = "Unknown";
  }

  return sub_10000DD48(a2, v5);
}

unint64_t sub_10000D788(uint64_t a1, double a2)
{
  v27[0] = off_1000F5C38;
  v27[1] = a1;
  v27[3] = v27;
  v26[0] = off_1000F5CB8;
  v26[1] = a1;
  v26[3] = v26;
  sub_100010BB4((uint64_t)v28, (uint64_t)v27, (uint64_t)v26);
  sub_10000F6D4(v26);
  sub_10000F6D4(v27);
  unint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v5 = (void *)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      unint64_t v5 = (void *)*v5;
    }
    uint64_t v6 = (void *)(a1 + 160);
    if (*(char *)(a1 + 183) < 0) {
      uint64_t v6 = (void *)*v6;
    }
    int v18 = 68289539;
    int v19 = 0;
    __int16 v20 = 2082;
    __int16 v21 = "";
    __int16 v22 = 2081;
    __int16 v23 = v5;
    __int16 v24 = 2081;
    int v25 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,findLatestValueBefore\", \"filePath\":%{private, location:escape_only}s, \"debugName\":%{private, location:escape_only}s}", (uint8_t *)&v18, 0x26u);
  }
  if (*(double *)(a1 + 8) > a2)
  {
    double v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = (void *)(a1 + 160);
      if (*(char *)(a1 + 183) < 0) {
        BOOL v8 = (void *)*v8;
      }
      int v18 = 68289283;
      int v19 = 0;
      __int16 v20 = 2082;
      __int16 v21 = "";
      __int16 v22 = 2081;
      __int16 v23 = v8;
      int v9 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findLatestValueBefore,InvalidArgs\", \"history\":%{private, l"
           "ocation:escape_only}s}";
LABEL_21:
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v9, (uint8_t *)&v18, 0x1Cu);
      goto LABEL_22;
    }
    goto LABEL_22;
  }
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  if (v10 == v11 || !*(unsigned char *)a1)
  {
    double v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      double v14 = (void *)(a1 + 160);
      if (*(char *)(a1 + 183) < 0) {
        double v14 = (void *)*v14;
      }
      int v18 = 68289283;
      int v19 = 0;
      __int16 v20 = 2082;
      __int16 v21 = "";
      __int16 v22 = 2081;
      __int16 v23 = v14;
      int v9 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findLatestValueBefore,skipping,notReady\", \"history\":%{priv"
           "ate, location:escape_only}s}";
      goto LABEL_21;
    }
LABEL_22:
    double v15 = 0;
    LOBYTE(v13) = 0;
    unsigned int v16 = 0;
    goto LABEL_23;
  }
  while (v11 != v10)
  {
    double v12 = *(double *)(v11 - 40);
    v11 -= 40;
    if (v12 <= a2)
    {
      int v13 = *(_DWORD *)(v11 + 8);
      goto LABEL_25;
    }
  }
  int v13 = *(_DWORD *)(v10 + 8);
LABEL_25:
  unsigned int v16 = v13 & 0xFFFFFF00;
  double v15 = &_mh_execute_header;
LABEL_23:
  sub_1000115F0(v28);
  return (unint64_t)v15 | v16 | v13;
}

void sub_10000DA3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  sub_10000F6D4((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_10000DA5C(uint64_t a1)
{
  sub_10000F3AC(a1);

  operator delete();
}

void *sub_10000DA94(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10000DB18(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10000DB9C(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_10000DBF0((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_10000DBF0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 40)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

void *sub_10000DC40(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10000DCC4(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10000DD48(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_100004D58();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    uint64_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

double *sub_10000DDFC(double *result, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v9 = (unint64_t)result;
LABEL_2:
  unint64_t v10 = v9;
  while (1)
  {
    unint64_t v9 = v10;
    uint64_t v11 = a2 - v10;
    unint64_t v12 = (uint64_t)(a2 - v10) >> 4;
    if (v5 || !v4)
    {
      switch(v12)
      {
        case 0uLL:
        case 1uLL:
          return result;
        case 2uLL:
          double v45 = *(double *)(a2 - 8);
          double v46 = *(double *)(v10 + 8);
          if (v45 < v46)
          {
            int v47 = *(_DWORD *)v10;
            *(_DWORD *)unint64_t v10 = *(_DWORD *)(a2 - 16);
            *(_DWORD *)(a2 - 16) = v47;
            *(double *)(v10 + 8) = v45;
            *(double *)(a2 - 8) = v46;
          }
          break;
        case 3uLL:
          uint64_t result = sub_10000E5D0((double *)v10, (double *)(v10 + 16), (double *)(a2 - 16));
          break;
        case 4uLL:
          uint64_t result = sub_10000E8BC((double *)v10, (double *)(v10 + 16), (double *)(v10 + 32), a2 - 16);
          break;
        case 5uLL:
          uint64_t result = sub_10000E8BC((double *)v10, (double *)(v10 + 16), (double *)(v10 + 32), v10 + 48);
          double v48 = *(double *)(a2 - 8);
          double v49 = *(double *)(v10 + 56);
          if (v48 < v49)
          {
            int v50 = *(_DWORD *)(v10 + 48);
            *(_DWORD *)(v10 + 48) = *(_DWORD *)(a2 - 16);
            *(_DWORD *)(a2 - 16) = v50;
            *(double *)(v10 + 56) = v48;
            *(double *)(a2 - 8) = v49;
            double v51 = *(double *)(v10 + 56);
            double v52 = *(double *)(v10 + 40);
            if (v51 < v52)
            {
              int v53 = *(_DWORD *)(v10 + 32);
              int v54 = *(_DWORD *)(v10 + 48);
              *(_DWORD *)(v10 + 32) = v54;
              *(_DWORD *)(v10 + 48) = v53;
              *(double *)(v10 + 40) = v51;
              *(double *)(v10 + 56) = v52;
              double v55 = *(double *)(v10 + 24);
              if (v51 < v55)
              {
                int v56 = *(_DWORD *)(v10 + 16);
                *(_DWORD *)(v10 + 16) = v54;
                *(_DWORD *)(v10 + 32) = v56;
                *(double *)(v10 + 24) = v51;
                *(double *)(v10 + 40) = v55;
                double v57 = *(double *)(v10 + 8);
                if (v51 < v57)
                {
                  int v58 = *(_DWORD *)v10;
                  *(_DWORD *)unint64_t v10 = v54;
                  *(_DWORD *)(v10 + 16) = v58;
                  *(double *)(v10 + 8) = v51;
                  *(double *)(v10 + 24) = v57;
                }
              }
            }
          }
          break;
        default:
          JUMPOUT(0);
      }
      return result;
    }
    if (v11 <= 383) {
      break;
    }
    if (!a3)
    {
      if (v10 == a2) {
        return result;
      }
      int64_t v70 = (v12 - 2) >> 1;
      int64_t v71 = v70;
      do
      {
        int64_t v72 = v71;
        if (v70 >= v71)
        {
          uint64_t v73 = (2 * v71) | 1;
          unint64_t v74 = v10 + 16 * v73;
          if (2 * v72 + 2 < (uint64_t)v12 && *(double *)(v74 + 8) < *(double *)(v74 + 24))
          {
            v74 += 16;
            uint64_t v73 = 2 * v72 + 2;
          }
          double v75 = *(double *)(v74 + 8);
          double v76 = *(double *)(v10 + 16 * v72 + 8);
          if (v75 >= v76)
          {
            unint64_t v77 = v10 + 16 * v72;
            int v78 = *(_DWORD *)v77;
            do
            {
              unint64_t v79 = v77;
              unint64_t v77 = v74;
              *(_DWORD *)unint64_t v79 = *(_DWORD *)v74;
              *(double *)(v79 + 8) = v75;
              if (v70 < v73) {
                break;
              }
              uint64_t v80 = 2 * v73;
              uint64_t v73 = (2 * v73) | 1;
              unint64_t v74 = v10 + 16 * v73;
              uint64_t v81 = v80 + 2;
              if (v81 < (uint64_t)v12 && *(double *)(v74 + 8) < *(double *)(v74 + 24))
              {
                v74 += 16;
                uint64_t v73 = v81;
              }
              double v75 = *(double *)(v74 + 8);
            }
            while (v75 >= v76);
            *(_DWORD *)unint64_t v77 = v78;
            *(double *)(v77 + 8) = v76;
          }
        }
        int64_t v71 = v72 - 1;
      }
      while (v72);
      uint64_t v82 = (unint64_t)v11 >> 4;
      while (2)
      {
        uint64_t v83 = 0;
        int v84 = *(_DWORD *)v10;
        double v85 = *(double *)(v10 + 8);
        unint64_t v86 = v10;
        do
        {
          unint64_t v87 = v86;
          v86 += 16 * (v83 + 1);
          uint64_t v88 = 2 * v83;
          uint64_t v83 = (2 * v83) | 1;
          uint64_t v89 = v88 + 2;
          if (v89 < v82 && *(double *)(v86 + 8) < *(double *)(v86 + 24))
          {
            v86 += 16;
            uint64_t v83 = v89;
          }
          *(_DWORD *)unint64_t v87 = *(_DWORD *)v86;
          *(void *)(v87 + 8) = *(void *)(v86 + 8);
        }
        while (v83 <= (uint64_t)((unint64_t)(v82 - 2) >> 1));
        if (v86 == a2 - 16)
        {
          *(_DWORD *)unint64_t v86 = v84;
          goto LABEL_117;
        }
        *(_DWORD *)unint64_t v86 = *(_DWORD *)(a2 - 16);
        *(void *)(v86 + 8) = *(void *)(a2 - 8);
        *(_DWORD *)(a2 - 16) = v84;
        *(double *)(a2 - 8) = v85;
        uint64_t v90 = v86 - v10 + 16;
        if (v90 >= 17)
        {
          unint64_t v91 = (((unint64_t)v90 >> 4) - 2) >> 1;
          double v92 = *(double *)(v10 + 16 * v91 + 8);
          double v85 = *(double *)(v86 + 8);
          if (v92 < v85)
          {
            int v93 = *(_DWORD *)v86;
            do
            {
              unint64_t v94 = v86;
              unint64_t v86 = v10 + 16 * v91;
              *(_DWORD *)unint64_t v94 = *(_DWORD *)v86;
              *(double *)(v94 + 8) = v92;
              if (!v91) {
                break;
              }
              unint64_t v91 = (v91 - 1) >> 1;
              double v92 = *(double *)(v10 + 16 * v91 + 8);
            }
            while (v92 < v85);
            *(_DWORD *)unint64_t v86 = v93;
LABEL_117:
            *(double *)(v86 + 8) = v85;
          }
        }
        a2 -= 16;
        if (v82-- <= 2) {
          return result;
        }
        continue;
      }
    }
    unint64_t v13 = v12 >> 1;
    unint64_t v14 = v10 + 16 * (v12 >> 1);
    if ((unint64_t)v11 >= 0x801)
    {
      sub_10000E5D0((double *)v9, (double *)(v9 + 16 * (v12 >> 1)), (double *)(a2 - 16));
      sub_10000E5D0((double *)(v9 + 16), (double *)(v14 - 16), (double *)(a2 - 32));
      sub_10000E5D0((double *)(v9 + 32), (double *)(v9 + 16 + 16 * v13), (double *)(a2 - 48));
      uint64_t result = sub_10000E5D0((double *)(v14 - 16), (double *)v14, (double *)(v9 + 16 + 16 * v13));
      int v15 = *(_DWORD *)v9;
      *(_DWORD *)unint64_t v9 = *(_DWORD *)v14;
      *(_DWORD *)unint64_t v14 = v15;
      uint64_t v16 = *(void *)(v9 + 8);
      *(void *)(v9 + 8) = *(void *)(v14 + 8);
      *(void *)(v14 + 8) = v16;
    }
    else
    {
      uint64_t result = sub_10000E5D0((double *)(v9 + 16 * (v12 >> 1)), (double *)v9, (double *)(a2 - 16));
    }
    --a3;
    if (a4)
    {
      double v17 = *(double *)(v9 + 8);
LABEL_13:
      uint64_t v18 = 0;
      int v19 = *(_DWORD *)v9;
      do
      {
        double v20 = *(double *)(v9 + v18 + 24);
        v18 += 16;
      }
      while (v20 < v17);
      unint64_t v21 = v9 + v18;
      unint64_t v22 = a2;
      if (v18 == 16)
      {
        unint64_t v25 = a2;
        while (v21 < v25)
        {
          unint64_t v23 = v25 - 16;
          double v26 = *(double *)(v25 - 8);
          v25 -= 16;
          if (v26 < v17) {
            goto LABEL_23;
          }
        }
        unint64_t v23 = v25;
      }
      else
      {
        do
        {
          unint64_t v23 = v22 - 16;
          double v24 = *(double *)(v22 - 8);
          v22 -= 16;
        }
        while (v24 >= v17);
      }
LABEL_23:
      unint64_t v10 = v21;
      if (v21 < v23)
      {
        unint64_t v27 = v23;
        do
        {
          int v28 = *(_DWORD *)v10;
          *(_DWORD *)unint64_t v10 = *(_DWORD *)v27;
          *(_DWORD *)unint64_t v27 = v28;
          uint64_t v29 = *(void *)(v10 + 8);
          *(void *)(v10 + 8) = *(void *)(v27 + 8);
          *(void *)(v27 + 8) = v29;
          do
          {
            double v30 = *(double *)(v10 + 24);
            v10 += 16;
          }
          while (v30 < v17);
          do
          {
            double v31 = *(double *)(v27 - 8);
            v27 -= 16;
          }
          while (v31 >= v17);
        }
        while (v10 < v27);
      }
      if (v10 - 16 != v9)
      {
        *(_DWORD *)unint64_t v9 = *(_DWORD *)(v10 - 16);
        *(void *)(v9 + 8) = *(void *)(v10 - 8);
      }
      *(_DWORD *)(v10 - 16) = v19;
      *(double *)(v10 - 8) = v17;
      if (v21 < v23) {
        goto LABEL_34;
      }
      BOOL v32 = sub_10000E688(v9, v10 - 16);
      uint64_t result = (double *)sub_10000E688(v10, a2);
      if (result)
      {
        a2 = v10 - 16;
        if (v32) {
          return result;
        }
        goto LABEL_2;
      }
      if (!v32)
      {
LABEL_34:
        uint64_t result = (double *)sub_10000DDFC(v9, v10 - 16, a3, a4 & 1);
        a4 = 0;
      }
    }
    else
    {
      double v17 = *(double *)(v9 + 8);
      if (*(double *)(v9 - 8) < v17) {
        goto LABEL_13;
      }
      if (v17 >= *(double *)(a2 - 8))
      {
        unint64_t v35 = v9 + 16;
        do
        {
          unint64_t v10 = v35;
          if (v35 >= a2) {
            break;
          }
          double v36 = *(double *)(v35 + 8);
          v35 += 16;
        }
        while (v17 >= v36);
      }
      else
      {
        unint64_t v33 = v9;
        do
        {
          unint64_t v10 = v33 + 16;
          double v34 = *(double *)(v33 + 24);
          v33 += 16;
        }
        while (v17 >= v34);
      }
      unint64_t v37 = a2;
      if (v10 < a2)
      {
        unint64_t v38 = a2;
        do
        {
          unint64_t v37 = v38 - 16;
          double v39 = *(double *)(v38 - 8);
          v38 -= 16;
        }
        while (v17 < v39);
      }
      int v40 = *(_DWORD *)v9;
      while (v10 < v37)
      {
        int v41 = *(_DWORD *)v10;
        *(_DWORD *)unint64_t v10 = *(_DWORD *)v37;
        *(_DWORD *)unint64_t v37 = v41;
        uint64_t v42 = *(void *)(v10 + 8);
        *(void *)(v10 + 8) = *(void *)(v37 + 8);
        *(void *)(v37 + 8) = v42;
        do
        {
          double v43 = *(double *)(v10 + 24);
          v10 += 16;
        }
        while (v17 >= v43);
        do
        {
          double v44 = *(double *)(v37 - 8);
          v37 -= 16;
        }
        while (v17 < v44);
      }
      BOOL v4 = v10 - 16 >= v9;
      BOOL v5 = v10 - 16 == v9;
      if (v10 - 16 != v9)
      {
        *(_DWORD *)unint64_t v9 = *(_DWORD *)(v10 - 16);
        *(void *)(v9 + 8) = *(void *)(v10 - 8);
      }
      a4 = 0;
      *(_DWORD *)(v10 - 16) = v40;
      *(double *)(v10 - 8) = v17;
    }
  }
  __int16 v59 = (_DWORD *)(v10 + 16);
  BOOL v61 = v10 == a2 || v59 == (_DWORD *)a2;
  if (a4)
  {
    if (!v61)
    {
      uint64_t v62 = 0;
      unint64_t v63 = (_DWORD *)v10;
      do
      {
        double v64 = *((double *)v63 + 3);
        double v65 = *((double *)v63 + 1);
        unint64_t v63 = v59;
        if (v64 < v65)
        {
          int v66 = *v59;
          uint64_t v67 = v62;
          while (1)
          {
            uint64_t v68 = v10 + v67;
            *(_DWORD *)(v68 + 16) = *(_DWORD *)(v10 + v67);
            *(void *)(v68 + 24) = *(void *)(v10 + v67 + 8);
            if (!v67) {
              break;
            }
            v67 -= 16;
            if (v64 >= *(double *)(v68 - 8))
            {
              uint64_t v69 = v10 + v67 + 16;
              goto LABEL_85;
            }
          }
          uint64_t v69 = v10;
LABEL_85:
          *(_DWORD *)uint64_t v69 = v66;
          *(double *)(v69 + 8) = v64;
        }
        __int16 v59 = v63 + 4;
        v62 += 16;
      }
      while (v63 + 4 != (_DWORD *)a2);
    }
  }
  else if (!v61)
  {
    double v96 = (double *)(v10 + 24);
    do
    {
      double v97 = *(double *)(v9 + 24);
      double v98 = *(double *)(v9 + 8);
      unint64_t v9 = (unint64_t)v59;
      if (v97 < v98)
      {
        int v99 = *v59;
        v100 = v96;
        do
        {
          v101 = v100;
          *((_DWORD *)v100 - 2) = *((_DWORD *)v100 - 6);
          uint64_t v102 = *((void *)v100 - 2);
          v100 -= 2;
          *(void *)v101 = v102;
        }
        while (v97 < *(v101 - 4));
        *((_DWORD *)v100 - 2) = v99;
        double *v100 = v97;
      }
      __int16 v59 = (_DWORD *)(v9 + 16);
      v96 += 2;
    }
    while (v9 + 16 != a2);
  }
  return result;
}

double *sub_10000E5D0(double *result, double *a2, double *a3)
{
  double v3 = a2[1];
  double v4 = result[1];
  double v5 = a3[1];
  if (v3 >= v4)
  {
    if (v5 < v3)
    {
      int v7 = *(_DWORD *)a2;
      *(_DWORD *)a2 = *(_DWORD *)a3;
      *(_DWORD *)a3 = v7;
      a2[1] = v5;
      a3[1] = v3;
      double v8 = a2[1];
      double v9 = result[1];
      if (v8 < v9)
      {
        int v10 = *(_DWORD *)result;
        *(_DWORD *)uint64_t result = *(_DWORD *)a2;
        *(_DWORD *)a2 = v10;
        result[1] = v8;
        a2[1] = v9;
      }
    }
  }
  else
  {
    int v6 = *(_DWORD *)result;
    if (v5 >= v3)
    {
      *(_DWORD *)uint64_t result = *(_DWORD *)a2;
      *(_DWORD *)a2 = v6;
      result[1] = v3;
      a2[1] = v4;
      double v11 = a3[1];
      if (v11 >= v4) {
        return result;
      }
      *(_DWORD *)a2 = *(_DWORD *)a3;
      *(_DWORD *)a3 = v6;
      a2[1] = v11;
    }
    else
    {
      *(_DWORD *)uint64_t result = *(_DWORD *)a3;
      *(_DWORD *)a3 = v6;
      result[1] = v5;
    }
    a3[1] = v4;
  }
  return result;
}

BOOL sub_10000E688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (a2 - a1) >> 4;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      double v6 = *(double *)(a2 - 8);
      double v7 = *(double *)(a1 + 8);
      if (v6 < v7)
      {
        int v8 = *(_DWORD *)a1;
        *(_DWORD *)a1 = *(_DWORD *)(a2 - 16);
        *(_DWORD *)(a2 - 16) = v8;
        *(double *)(a1 + 8) = v6;
        *(double *)(a2 - 8) = v7;
      }
      return result;
    case 3:
      sub_10000E5D0((double *)a1, (double *)(a1 + 16), (double *)(a2 - 16));
      return 1;
    case 4:
      sub_10000E8BC((double *)a1, (double *)(a1 + 16), (double *)(a1 + 32), a2 - 16);
      return 1;
    case 5:
      sub_10000E8BC((double *)a1, (double *)(a1 + 16), (double *)(a1 + 32), a1 + 48);
      double v18 = *(double *)(a2 - 8);
      double v19 = *(double *)(a1 + 56);
      if (v18 < v19)
      {
        int v20 = *(_DWORD *)(a1 + 48);
        *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 - 16);
        *(_DWORD *)(a2 - 16) = v20;
        *(double *)(a1 + 56) = v18;
        *(double *)(a2 - 8) = v19;
        double v21 = *(double *)(a1 + 56);
        double v22 = *(double *)(a1 + 40);
        if (v21 < v22)
        {
          int v23 = *(_DWORD *)(a1 + 32);
          int v24 = *(_DWORD *)(a1 + 48);
          *(_DWORD *)(a1 + 32) = v24;
          *(_DWORD *)(a1 + 48) = v23;
          *(double *)(a1 + 40) = v21;
          *(double *)(a1 + 56) = v22;
          double v25 = *(double *)(a1 + 24);
          if (v21 < v25)
          {
            int v26 = *(_DWORD *)(a1 + 16);
            *(_DWORD *)(a1 + 16) = v24;
            *(_DWORD *)(a1 + 32) = v26;
            *(double *)(a1 + 24) = v21;
            *(double *)(a1 + 40) = v25;
            double v27 = *(double *)(a1 + 8);
            if (v21 < v27)
            {
              int v28 = *(_DWORD *)a1;
              *(_DWORD *)a1 = v24;
              *(_DWORD *)(a1 + 16) = v28;
              *(double *)(a1 + 8) = v21;
              *(double *)(a1 + 24) = v27;
            }
          }
        }
      }
      return 1;
    default:
      uint64_t v9 = a1 + 32;
      sub_10000E5D0((double *)a1, (double *)(a1 + 16), (double *)(a1 + 32));
      uint64_t v10 = a1 + 48;
      if (a1 + 48 == a2) {
        return 1;
      }
      uint64_t v11 = 0;
      int v12 = 0;
      break;
  }
  while (1)
  {
    double v13 = *(double *)(v10 + 8);
    if (v13 < *(double *)(v9 + 8))
    {
      int v14 = *(_DWORD *)v10;
      uint64_t v15 = v11;
      while (1)
      {
        uint64_t v16 = a1 + v15;
        *(_DWORD *)(v16 + 48) = *(_DWORD *)(a1 + v15 + 32);
        *(void *)(v16 + 56) = *(void *)(a1 + v15 + 40);
        if (v15 == -32) {
          break;
        }
        v15 -= 16;
        if (v13 >= *(double *)(v16 + 24))
        {
          uint64_t v17 = a1 + v15 + 48;
          goto LABEL_13;
        }
      }
      uint64_t v17 = a1;
LABEL_13:
      *(_DWORD *)uint64_t v17 = v14;
      *(double *)(v17 + 8) = v13;
      if (++v12 == 8) {
        return v10 + 16 == a2;
      }
    }
    uint64_t v9 = v10;
    v11 += 16;
    v10 += 16;
    if (v10 == a2) {
      return 1;
    }
  }
}

double *sub_10000E8BC(double *a1, double *a2, double *a3, uint64_t a4)
{
  BOOL result = sub_10000E5D0(a1, a2, a3);
  double v9 = *(double *)(a4 + 8);
  double v10 = a3[1];
  if (v9 < v10)
  {
    int v11 = *(_DWORD *)a3;
    *(_DWORD *)a3 = *(_DWORD *)a4;
    *(_DWORD *)a4 = v11;
    a3[1] = v9;
    *(double *)(a4 + 8) = v10;
    double v12 = a3[1];
    double v13 = a2[1];
    if (v12 < v13)
    {
      int v14 = *(_DWORD *)a2;
      *(_DWORD *)a2 = *(_DWORD *)a3;
      *(_DWORD *)a3 = v14;
      a2[1] = v12;
      a3[1] = v13;
      double v15 = a2[1];
      double v16 = a1[1];
      if (v15 < v16)
      {
        int v17 = *(_DWORD *)a1;
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_DWORD *)a2 = v17;
        a1[1] = v15;
        a2[1] = v16;
      }
    }
  }
  return result;
}

double *sub_10000E96C(double *result, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v9 = (unint64_t)result;
LABEL_2:
  unint64_t v10 = v9;
  while (1)
  {
    unint64_t v9 = v10;
    uint64_t v11 = a2 - v10;
    unint64_t v12 = (uint64_t)(a2 - v10) >> 4;
    if (v5 || !v4)
    {
      switch(v12)
      {
        case 0uLL:
        case 1uLL:
          return result;
        case 2uLL:
          double v45 = *(double *)(a2 - 8);
          double v46 = *(double *)(v10 + 8);
          if (v45 < v46)
          {
            int v47 = *(_DWORD *)v10;
            *(_DWORD *)unint64_t v10 = *(_DWORD *)(a2 - 16);
            *(_DWORD *)(a2 - 16) = v47;
            *(double *)(v10 + 8) = v45;
            *(double *)(a2 - 8) = v46;
          }
          break;
        case 3uLL:
          BOOL result = sub_10000E5D0((double *)v10, (double *)(v10 + 16), (double *)(a2 - 16));
          break;
        case 4uLL:
          BOOL result = sub_10000E8BC((double *)v10, (double *)(v10 + 16), (double *)(v10 + 32), a2 - 16);
          break;
        case 5uLL:
          BOOL result = sub_10000E8BC((double *)v10, (double *)(v10 + 16), (double *)(v10 + 32), v10 + 48);
          double v48 = *(double *)(a2 - 8);
          double v49 = *(double *)(v10 + 56);
          if (v48 < v49)
          {
            int v50 = *(_DWORD *)(v10 + 48);
            *(_DWORD *)(v10 + 48) = *(_DWORD *)(a2 - 16);
            *(_DWORD *)(a2 - 16) = v50;
            *(double *)(v10 + 56) = v48;
            *(double *)(a2 - 8) = v49;
            double v51 = *(double *)(v10 + 56);
            double v52 = *(double *)(v10 + 40);
            if (v51 < v52)
            {
              int v53 = *(_DWORD *)(v10 + 32);
              int v54 = *(_DWORD *)(v10 + 48);
              *(_DWORD *)(v10 + 32) = v54;
              *(_DWORD *)(v10 + 48) = v53;
              *(double *)(v10 + 40) = v51;
              *(double *)(v10 + 56) = v52;
              double v55 = *(double *)(v10 + 24);
              if (v51 < v55)
              {
                int v56 = *(_DWORD *)(v10 + 16);
                *(_DWORD *)(v10 + 16) = v54;
                *(_DWORD *)(v10 + 32) = v56;
                *(double *)(v10 + 24) = v51;
                *(double *)(v10 + 40) = v55;
                double v57 = *(double *)(v10 + 8);
                if (v51 < v57)
                {
                  int v58 = *(_DWORD *)v10;
                  *(_DWORD *)unint64_t v10 = v54;
                  *(_DWORD *)(v10 + 16) = v58;
                  *(double *)(v10 + 8) = v51;
                  *(double *)(v10 + 24) = v57;
                }
              }
            }
          }
          break;
        default:
          JUMPOUT(0);
      }
      return result;
    }
    if (v11 <= 383) {
      break;
    }
    if (!a3)
    {
      if (v10 == a2) {
        return result;
      }
      int64_t v70 = (v12 - 2) >> 1;
      int64_t v71 = v70;
      do
      {
        int64_t v72 = v71;
        if (v70 >= v71)
        {
          uint64_t v73 = (2 * v71) | 1;
          unint64_t v74 = v10 + 16 * v73;
          if (2 * v72 + 2 < (uint64_t)v12 && *(double *)(v74 + 8) < *(double *)(v74 + 24))
          {
            v74 += 16;
            uint64_t v73 = 2 * v72 + 2;
          }
          double v75 = *(double *)(v74 + 8);
          double v76 = *(double *)(v10 + 16 * v72 + 8);
          if (v75 >= v76)
          {
            unint64_t v77 = v10 + 16 * v72;
            int v78 = *(_DWORD *)v77;
            do
            {
              unint64_t v79 = v77;
              unint64_t v77 = v74;
              *(_DWORD *)unint64_t v79 = *(_DWORD *)v74;
              *(double *)(v79 + 8) = v75;
              if (v70 < v73) {
                break;
              }
              uint64_t v80 = 2 * v73;
              uint64_t v73 = (2 * v73) | 1;
              unint64_t v74 = v10 + 16 * v73;
              uint64_t v81 = v80 + 2;
              if (v81 < (uint64_t)v12 && *(double *)(v74 + 8) < *(double *)(v74 + 24))
              {
                v74 += 16;
                uint64_t v73 = v81;
              }
              double v75 = *(double *)(v74 + 8);
            }
            while (v75 >= v76);
            *(_DWORD *)unint64_t v77 = v78;
            *(double *)(v77 + 8) = v76;
          }
        }
        int64_t v71 = v72 - 1;
      }
      while (v72);
      uint64_t v82 = (unint64_t)v11 >> 4;
      while (2)
      {
        uint64_t v83 = 0;
        int v84 = *(_DWORD *)v10;
        double v85 = *(double *)(v10 + 8);
        unint64_t v86 = v10;
        do
        {
          unint64_t v87 = v86;
          v86 += 16 * (v83 + 1);
          uint64_t v88 = 2 * v83;
          uint64_t v83 = (2 * v83) | 1;
          uint64_t v89 = v88 + 2;
          if (v89 < v82 && *(double *)(v86 + 8) < *(double *)(v86 + 24))
          {
            v86 += 16;
            uint64_t v83 = v89;
          }
          *(_DWORD *)unint64_t v87 = *(_DWORD *)v86;
          *(void *)(v87 + 8) = *(void *)(v86 + 8);
        }
        while (v83 <= (uint64_t)((unint64_t)(v82 - 2) >> 1));
        if (v86 == a2 - 16)
        {
          *(_DWORD *)unint64_t v86 = v84;
          goto LABEL_117;
        }
        *(_DWORD *)unint64_t v86 = *(_DWORD *)(a2 - 16);
        *(void *)(v86 + 8) = *(void *)(a2 - 8);
        *(_DWORD *)(a2 - 16) = v84;
        *(double *)(a2 - 8) = v85;
        uint64_t v90 = v86 - v10 + 16;
        if (v90 >= 17)
        {
          unint64_t v91 = (((unint64_t)v90 >> 4) - 2) >> 1;
          double v92 = *(double *)(v10 + 16 * v91 + 8);
          double v85 = *(double *)(v86 + 8);
          if (v92 < v85)
          {
            int v93 = *(_DWORD *)v86;
            do
            {
              unint64_t v94 = v86;
              unint64_t v86 = v10 + 16 * v91;
              *(_DWORD *)unint64_t v94 = *(_DWORD *)v86;
              *(double *)(v94 + 8) = v92;
              if (!v91) {
                break;
              }
              unint64_t v91 = (v91 - 1) >> 1;
              double v92 = *(double *)(v10 + 16 * v91 + 8);
            }
            while (v92 < v85);
            *(_DWORD *)unint64_t v86 = v93;
LABEL_117:
            *(double *)(v86 + 8) = v85;
          }
        }
        a2 -= 16;
        if (v82-- <= 2) {
          return result;
        }
        continue;
      }
    }
    unint64_t v13 = v12 >> 1;
    unint64_t v14 = v10 + 16 * (v12 >> 1);
    if ((unint64_t)v11 >= 0x801)
    {
      sub_10000E5D0((double *)v9, (double *)(v9 + 16 * (v12 >> 1)), (double *)(a2 - 16));
      sub_10000E5D0((double *)(v9 + 16), (double *)(v14 - 16), (double *)(a2 - 32));
      sub_10000E5D0((double *)(v9 + 32), (double *)(v9 + 16 + 16 * v13), (double *)(a2 - 48));
      BOOL result = sub_10000E5D0((double *)(v14 - 16), (double *)v14, (double *)(v9 + 16 + 16 * v13));
      int v15 = *(_DWORD *)v9;
      *(_DWORD *)unint64_t v9 = *(_DWORD *)v14;
      *(_DWORD *)unint64_t v14 = v15;
      uint64_t v16 = *(void *)(v9 + 8);
      *(void *)(v9 + 8) = *(void *)(v14 + 8);
      *(void *)(v14 + 8) = v16;
    }
    else
    {
      BOOL result = sub_10000E5D0((double *)(v9 + 16 * (v12 >> 1)), (double *)v9, (double *)(a2 - 16));
    }
    --a3;
    if (a4)
    {
      double v17 = *(double *)(v9 + 8);
LABEL_13:
      uint64_t v18 = 0;
      int v19 = *(_DWORD *)v9;
      do
      {
        double v20 = *(double *)(v9 + v18 + 24);
        v18 += 16;
      }
      while (v20 < v17);
      unint64_t v21 = v9 + v18;
      unint64_t v22 = a2;
      if (v18 == 16)
      {
        unint64_t v25 = a2;
        while (v21 < v25)
        {
          unint64_t v23 = v25 - 16;
          double v26 = *(double *)(v25 - 8);
          v25 -= 16;
          if (v26 < v17) {
            goto LABEL_23;
          }
        }
        unint64_t v23 = v25;
      }
      else
      {
        do
        {
          unint64_t v23 = v22 - 16;
          double v24 = *(double *)(v22 - 8);
          v22 -= 16;
        }
        while (v24 >= v17);
      }
LABEL_23:
      unint64_t v10 = v21;
      if (v21 < v23)
      {
        unint64_t v27 = v23;
        do
        {
          int v28 = *(_DWORD *)v10;
          *(_DWORD *)unint64_t v10 = *(_DWORD *)v27;
          *(_DWORD *)unint64_t v27 = v28;
          uint64_t v29 = *(void *)(v10 + 8);
          *(void *)(v10 + 8) = *(void *)(v27 + 8);
          *(void *)(v27 + 8) = v29;
          do
          {
            double v30 = *(double *)(v10 + 24);
            v10 += 16;
          }
          while (v30 < v17);
          do
          {
            double v31 = *(double *)(v27 - 8);
            v27 -= 16;
          }
          while (v31 >= v17);
        }
        while (v10 < v27);
      }
      if (v10 - 16 != v9)
      {
        *(_DWORD *)unint64_t v9 = *(_DWORD *)(v10 - 16);
        *(void *)(v9 + 8) = *(void *)(v10 - 8);
      }
      *(_DWORD *)(v10 - 16) = v19;
      *(double *)(v10 - 8) = v17;
      if (v21 < v23) {
        goto LABEL_34;
      }
      BOOL v32 = sub_10000F140(v9, v10 - 16);
      BOOL result = (double *)sub_10000F140(v10, a2);
      if (result)
      {
        a2 = v10 - 16;
        if (v32) {
          return result;
        }
        goto LABEL_2;
      }
      if (!v32)
      {
LABEL_34:
        BOOL result = (double *)sub_10000E96C(v9, v10 - 16, a3, a4 & 1);
        a4 = 0;
      }
    }
    else
    {
      double v17 = *(double *)(v9 + 8);
      if (*(double *)(v9 - 8) < v17) {
        goto LABEL_13;
      }
      if (v17 >= *(double *)(a2 - 8))
      {
        unint64_t v35 = v9 + 16;
        do
        {
          unint64_t v10 = v35;
          if (v35 >= a2) {
            break;
          }
          double v36 = *(double *)(v35 + 8);
          v35 += 16;
        }
        while (v17 >= v36);
      }
      else
      {
        unint64_t v33 = v9;
        do
        {
          unint64_t v10 = v33 + 16;
          double v34 = *(double *)(v33 + 24);
          v33 += 16;
        }
        while (v17 >= v34);
      }
      unint64_t v37 = a2;
      if (v10 < a2)
      {
        unint64_t v38 = a2;
        do
        {
          unint64_t v37 = v38 - 16;
          double v39 = *(double *)(v38 - 8);
          v38 -= 16;
        }
        while (v17 < v39);
      }
      int v40 = *(_DWORD *)v9;
      while (v10 < v37)
      {
        int v41 = *(_DWORD *)v10;
        *(_DWORD *)unint64_t v10 = *(_DWORD *)v37;
        *(_DWORD *)unint64_t v37 = v41;
        uint64_t v42 = *(void *)(v10 + 8);
        *(void *)(v10 + 8) = *(void *)(v37 + 8);
        *(void *)(v37 + 8) = v42;
        do
        {
          double v43 = *(double *)(v10 + 24);
          v10 += 16;
        }
        while (v17 >= v43);
        do
        {
          double v44 = *(double *)(v37 - 8);
          v37 -= 16;
        }
        while (v17 < v44);
      }
      BOOL v4 = v10 - 16 >= v9;
      BOOL v5 = v10 - 16 == v9;
      if (v10 - 16 != v9)
      {
        *(_DWORD *)unint64_t v9 = *(_DWORD *)(v10 - 16);
        *(void *)(v9 + 8) = *(void *)(v10 - 8);
      }
      a4 = 0;
      *(_DWORD *)(v10 - 16) = v40;
      *(double *)(v10 - 8) = v17;
    }
  }
  __int16 v59 = (_DWORD *)(v10 + 16);
  BOOL v61 = v10 == a2 || v59 == (_DWORD *)a2;
  if (a4)
  {
    if (!v61)
    {
      uint64_t v62 = 0;
      unint64_t v63 = (_DWORD *)v10;
      do
      {
        double v64 = *((double *)v63 + 3);
        double v65 = *((double *)v63 + 1);
        unint64_t v63 = v59;
        if (v64 < v65)
        {
          int v66 = *v59;
          uint64_t v67 = v62;
          while (1)
          {
            uint64_t v68 = v10 + v67;
            *(_DWORD *)(v68 + 16) = *(_DWORD *)(v10 + v67);
            *(void *)(v68 + 24) = *(void *)(v10 + v67 + 8);
            if (!v67) {
              break;
            }
            v67 -= 16;
            if (v64 >= *(double *)(v68 - 8))
            {
              uint64_t v69 = v10 + v67 + 16;
              goto LABEL_85;
            }
          }
          uint64_t v69 = v10;
LABEL_85:
          *(_DWORD *)uint64_t v69 = v66;
          *(double *)(v69 + 8) = v64;
        }
        __int16 v59 = v63 + 4;
        v62 += 16;
      }
      while (v63 + 4 != (_DWORD *)a2);
    }
  }
  else if (!v61)
  {
    double v96 = (double *)(v10 + 24);
    do
    {
      double v97 = *(double *)(v9 + 24);
      double v98 = *(double *)(v9 + 8);
      unint64_t v9 = (unint64_t)v59;
      if (v97 < v98)
      {
        int v99 = *v59;
        v100 = v96;
        do
        {
          v101 = v100;
          *((_DWORD *)v100 - 2) = *((_DWORD *)v100 - 6);
          uint64_t v102 = *((void *)v100 - 2);
          v100 -= 2;
          *(void *)v101 = v102;
        }
        while (v97 < *(v101 - 4));
        *((_DWORD *)v100 - 2) = v99;
        double *v100 = v97;
      }
      __int16 v59 = (_DWORD *)(v9 + 16);
      v96 += 2;
    }
    while (v9 + 16 != a2);
  }
  return result;
}

BOOL sub_10000F140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (a2 - a1) >> 4;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      double v6 = *(double *)(a2 - 8);
      double v7 = *(double *)(a1 + 8);
      if (v6 < v7)
      {
        int v8 = *(_DWORD *)a1;
        *(_DWORD *)a1 = *(_DWORD *)(a2 - 16);
        *(_DWORD *)(a2 - 16) = v8;
        *(double *)(a1 + 8) = v6;
        *(double *)(a2 - 8) = v7;
      }
      return result;
    case 3:
      sub_10000E5D0((double *)a1, (double *)(a1 + 16), (double *)(a2 - 16));
      return 1;
    case 4:
      sub_10000E8BC((double *)a1, (double *)(a1 + 16), (double *)(a1 + 32), a2 - 16);
      return 1;
    case 5:
      sub_10000E8BC((double *)a1, (double *)(a1 + 16), (double *)(a1 + 32), a1 + 48);
      double v18 = *(double *)(a2 - 8);
      double v19 = *(double *)(a1 + 56);
      if (v18 < v19)
      {
        int v20 = *(_DWORD *)(a1 + 48);
        *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 - 16);
        *(_DWORD *)(a2 - 16) = v20;
        *(double *)(a1 + 56) = v18;
        *(double *)(a2 - 8) = v19;
        double v21 = *(double *)(a1 + 56);
        double v22 = *(double *)(a1 + 40);
        if (v21 < v22)
        {
          int v23 = *(_DWORD *)(a1 + 32);
          int v24 = *(_DWORD *)(a1 + 48);
          *(_DWORD *)(a1 + 32) = v24;
          *(_DWORD *)(a1 + 48) = v23;
          *(double *)(a1 + 40) = v21;
          *(double *)(a1 + 56) = v22;
          double v25 = *(double *)(a1 + 24);
          if (v21 < v25)
          {
            int v26 = *(_DWORD *)(a1 + 16);
            *(_DWORD *)(a1 + 16) = v24;
            *(_DWORD *)(a1 + 32) = v26;
            *(double *)(a1 + 24) = v21;
            *(double *)(a1 + 40) = v25;
            double v27 = *(double *)(a1 + 8);
            if (v21 < v27)
            {
              int v28 = *(_DWORD *)a1;
              *(_DWORD *)a1 = v24;
              *(_DWORD *)(a1 + 16) = v28;
              *(double *)(a1 + 8) = v21;
              *(double *)(a1 + 24) = v27;
            }
          }
        }
      }
      return 1;
    default:
      uint64_t v9 = a1 + 32;
      sub_10000E5D0((double *)a1, (double *)(a1 + 16), (double *)(a1 + 32));
      uint64_t v10 = a1 + 48;
      if (a1 + 48 == a2) {
        return 1;
      }
      uint64_t v11 = 0;
      int v12 = 0;
      break;
  }
  while (1)
  {
    double v13 = *(double *)(v10 + 8);
    if (v13 < *(double *)(v9 + 8))
    {
      int v14 = *(_DWORD *)v10;
      uint64_t v15 = v11;
      while (1)
      {
        uint64_t v16 = a1 + v15;
        *(_DWORD *)(v16 + 48) = *(_DWORD *)(a1 + v15 + 32);
        *(void *)(v16 + 56) = *(void *)(a1 + v15 + 40);
        if (v15 == -32) {
          break;
        }
        v15 -= 16;
        if (v13 >= *(double *)(v16 + 24))
        {
          uint64_t v17 = a1 + v15 + 48;
          goto LABEL_13;
        }
      }
      uint64_t v17 = a1;
LABEL_13:
      *(_DWORD *)uint64_t v17 = v14;
      *(double *)(v17 + 8) = v13;
      if (++v12 == 8) {
        return v10 + 16 == a2;
      }
    }
    uint64_t v9 = v10;
    v11 += 16;
    v10 += 16;
    if (v10 == a2) {
      return 1;
    }
  }
}

void *sub_10000F374(unint64_t a1)
{
  if (a1 >> 62) {
    sub_100004E00();
  }
  return operator new(4 * a1);
}

uint64_t sub_10000F3AC(uint64_t a1)
{
  *(void *)a1 = off_1000F4D28;
  if (*(char *)(a1 + 1743) < 0) {
    operator delete(*(void **)(a1 + 1720));
  }
  sub_10000DA94((void *)(a1 + 1664));
  sub_10000DB18((void *)(a1 + 1632));
  if (*(char *)(a1 + 1631) < 0) {
    operator delete(*(void **)(a1 + 1608));
  }
  double v3 = (void **)(a1 + 1584);
  sub_10000DB9C(&v3);
  if (*(char *)(a1 + 1551) < 0) {
    operator delete(*(void **)(a1 + 1528));
  }
  sub_10000DA94((void *)(a1 + 1472));
  sub_10000DB18((void *)(a1 + 1440));
  if (*(char *)(a1 + 1439) < 0) {
    operator delete(*(void **)(a1 + 1416));
  }
  double v3 = (void **)(a1 + 1392);
  sub_10000DB9C(&v3);
  if (*(char *)(a1 + 1359) < 0) {
    operator delete(*(void **)(a1 + 1336));
  }
  sub_10000DA94((void *)(a1 + 1280));
  sub_10000DB18((void *)(a1 + 1248));
  if (*(char *)(a1 + 1247) < 0) {
    operator delete(*(void **)(a1 + 1224));
  }
  double v3 = (void **)(a1 + 1200);
  sub_10000DB9C(&v3);
  if (*(char *)(a1 + 1167) < 0) {
    operator delete(*(void **)(a1 + 1144));
  }
  sub_10000DA94((void *)(a1 + 1088));
  sub_10000DB18((void *)(a1 + 1056));
  if (*(char *)(a1 + 1055) < 0) {
    operator delete(*(void **)(a1 + 1032));
  }
  double v3 = (void **)(a1 + 1008);
  sub_10000DB9C(&v3);
  if (*(char *)(a1 + 975) < 0) {
    operator delete(*(void **)(a1 + 952));
  }
  sub_10000DC40((void *)(a1 + 896));
  sub_10000DCC4((void *)(a1 + 864));
  if (*(char *)(a1 + 863) < 0) {
    operator delete(*(void **)(a1 + 840));
  }
  double v3 = (void **)(a1 + 816);
  sub_10000DB9C(&v3);
  if (*(char *)(a1 + 783) < 0) {
    operator delete(*(void **)(a1 + 760));
  }
  sub_10000DA94((void *)(a1 + 704));
  sub_10000DB18((void *)(a1 + 672));
  if (*(char *)(a1 + 671) < 0) {
    operator delete(*(void **)(a1 + 648));
  }
  double v3 = (void **)(a1 + 624);
  sub_10000DB9C(&v3);
  if (*(char *)(a1 + 591) < 0) {
    operator delete(*(void **)(a1 + 568));
  }
  sub_10000DC40((void *)(a1 + 512));
  sub_10000DCC4((void *)(a1 + 480));
  if (*(char *)(a1 + 479) < 0) {
    operator delete(*(void **)(a1 + 456));
  }
  double v3 = (void **)(a1 + 432);
  sub_10000DB9C(&v3);
  if (*(char *)(a1 + 399) < 0) {
    operator delete(*(void **)(a1 + 376));
  }
  sub_10000DC40((void *)(a1 + 320));
  sub_10000DCC4((void *)(a1 + 288));
  if (*(char *)(a1 + 287) < 0) {
    operator delete(*(void **)(a1 + 264));
  }
  double v3 = (void **)(a1 + 240);
  sub_10000DB9C(&v3);
  if (*(char *)(a1 + 207) < 0) {
    operator delete(*(void **)(a1 + 184));
  }
  sub_10000DC40((void *)(a1 + 128));
  sub_10000DCC4((void *)(a1 + 96));
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  double v3 = (void **)(a1 + 48);
  sub_10000DB9C(&v3);

  return a1;
}

uint64_t sub_10000F63C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_10000F6D4(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_10000F758(uint64_t a1)
{
  *(_WORD *)a1 = 256;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 8) = _Q0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 128) = 0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 136) = xmmword_1000B10B0;
  *(unsigned char *)(a1 + 152) = 0;
  sub_10000DD48((void *)(a1 + 160), "Unknown");
  *(_WORD *)(a1 + 184) = 0;
  return a1;
}

void sub_10000F7DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10000DC40((void *)(v2 + 104));
  sub_10000DCC4((void *)(v2 + 72));
  if (*(char *)(v2 + 71) < 0) {
    operator delete(*(void **)(v2 + 48));
  }
  sub_10000DB9C((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10000F818(uint64_t a1)
{
  *(_WORD *)a1 = 256;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 8) = _Q0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 128) = 0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 136) = xmmword_1000B10B0;
  *(unsigned char *)(a1 + 152) = 0;
  sub_10000DD48((void *)(a1 + 160), "Unknown");
  *(_WORD *)(a1 + 184) = 0;
  return a1;
}

void sub_10000F89C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10000DA94((void *)(v2 + 104));
  sub_10000DB18((void *)(v2 + 72));
  if (*(char *)(v2 + 71) < 0) {
    operator delete(*(void **)(v2 + 48));
  }
  sub_10000DB9C((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10000F8D8(uint64_t a1)
{
  return a1;
}

void sub_10000F904(uint64_t a1)
{
  operator delete();
}

uint64_t sub_10000F950()
{
  return 0;
}

id sub_10000F958(uint64_t a1, void *a2)
{
  *a2 = off_1000F4E78;
  id result = objc_retainBlock(*(id *)(a1 + 8));
  a2[1] = result;
  return result;
}

uint64_t sub_10000F9A0(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  return _objc_release_x1();
}

uint64_t sub_10000F9B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 8) + 16))();
}

uint64_t sub_10000F9C0(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F4EE8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10000FA00()
{
  return &off_1000F4EE8;
}

BOOL sub_10000FA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return 1;
  }
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3)) {
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

void sub_10000FA5C(uint64_t a1, double *a2)
{
  if (*a2 >= 0.0)
  {
    uint64_t v7 = *(void *)(a1 + 24);
    double v6 = *(uint64_t **)(a1 + 32);
    if (0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v6 - v7) >> 3) >= *(void *)(a1 + 136))
    {
      int v8 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v9 = (void *)(a1 + 160);
        if (*(char *)(a1 + 183) < 0) {
          uint64_t v9 = (void *)*v9;
        }
        int v20 = 68289283;
        int v21 = 0;
        __int16 v22 = 2082;
        int v23 = "";
        __int16 v24 = 2081;
        double v25 = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,maxHistoryLenReached\", \"history\":%{private, location:escape_only}s}", (uint8_t *)&v20, 0x1Cu);
        uint64_t v7 = *(void *)(a1 + 24);
        double v6 = *(uint64_t **)(a1 + 32);
      }
      sub_100010E5C((uint64_t)&v20, (uint64_t *)(v7 + 40), v6, v7);
      double v6 = v10;
      for (uint64_t i = *(uint64_t **)(a1 + 32); i != v6; i -= 5)
      {
        if (*((char *)i - 1) < 0) {
          operator delete((void *)*(i - 3));
        }
      }
      *(void *)(a1 + 32) = v6;
      *(unsigned char *)(a1 + 152) = 1;
      uint64_t v7 = *(void *)(a1 + 24);
    }
    if (v6 != (uint64_t *)v7)
    {
      unint64_t v12 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v6 - v7) >> 3);
      do
      {
        unint64_t v13 = v12 >> 1;
        int v14 = &v6[-5 * (v12 >> 1)];
        double v16 = *((double *)v14 - 5);
        uint64_t v15 = v14 - 5;
        v12 += ~(v12 >> 1);
        if (*a2 >= v16) {
          unint64_t v12 = v13;
        }
        else {
          double v6 = v15;
        }
      }
      while (v12);
    }
    sub_100010CCC((uint64_t *)(a1 + 24), (uint64_t)v6, (unint64_t)a2);
    double v17 = *(double *)(a1 + 8);
    double v18 = *a2;
    if (v17 < 0.0 || v17 > v18) {
      *(double *)(a1 + 8) = v18;
    }
    if (*(double *)(a1 + 16) < v18) {
      *(double *)(a1 + 16) = v18;
    }
  }
  else
  {
    uint64_t v3 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = (void *)(a1 + 160);
      if (*(char *)(a1 + 183) < 0) {
        uint64_t v4 = (void *)*v4;
      }
      int v20 = 68289283;
      int v21 = 0;
      __int16 v22 = 2082;
      int v23 = "";
      __int16 v24 = 2081;
      double v25 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,updateWithInvalidArgs\", \"history\":%{private, location:escape_only}s}", (uint8_t *)&v20, 0x1Cu);
    }
  }
}

void sub_10000FCDC(char *a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = a1 + 48;
    if (a1[71] < 0) {
      uint64_t v3 = (void *)*v3;
    }
    uint64_t v4 = a1 + 160;
    if (a1[183] < 0) {
      uint64_t v4 = (void *)*v4;
    }
    *(_DWORD *)uint64_t buf = 68289539;
    int v14 = 0;
    __int16 v15 = 2082;
    double v16 = "";
    __int16 v17 = 2081;
    double v18 = v3;
    __int16 v19 = 2081;
    int v20 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,save\", \"filePath\":%{private, location:escape_only}s, \"debugName\":%{private, location:escape_only}s}", buf, 0x26u);
  }
  if (a1[184])
  {
    BOOL v5 = a1 + 48;
    if (a1[71] < 0) {
      BOOL v5 = *(char **)v5;
    }
    sub_10000DD48(&__p, "0002");
    sub_1000859E8((uint64_t)buf, v5, (uint64_t)&__p);
    if (SBYTE3(v12) < 0) {
      operator delete(__p);
    }
    if (v21) {
      operator new[]();
    }
    int v8 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = a1 + 160;
      if (a1[183] < 0) {
        uint64_t v9 = (void *)*v9;
      }
      long long __p = (void *)68289283;
      v11[0] = 2082;
      *(void *)&v11[1] = "";
      v11[5] = 2081;
      unint64_t v12 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,cannotOpenFileToSave\", \"history\":%{private, location:escape_only}s}", (uint8_t *)&__p, 0x1Cu);
    }
    sub_100085D74((uint64_t)buf);
  }
  else
  {
    double v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = a1 + 160;
      if (a1[183] < 0) {
        uint64_t v7 = (void *)*v7;
      }
      *(_DWORD *)uint64_t buf = 68289283;
      int v14 = 0;
      __int16 v15 = 2082;
      double v16 = "";
      __int16 v17 = 2081;
      double v18 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,deferSavingTillFirstUnlock\", \"history\":%{private, location:escape_only}s}", buf, 0x1Cu);
    }
    a1[185] = 1;
  }
}

void sub_100010064(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,char a25)
{
}

void sub_1000100EC()
{
}

void *sub_100010100(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F4F08;
  result[1] = v3;
  return result;
}

uint64_t sub_100010148(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F4F08;
  a2[1] = v2;
  return result;
}

void sub_100010174(uint64_t a1)
{
}

uint64_t sub_10001017C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000101BC()
{
}

void sub_1000101C8(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)a1;
  if (!*(unsigned char *)(*(void *)a1 + 1))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      BOOL v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100010298((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

void sub_100010298(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = (const std::__fs::filesystem::path **)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      uint64_t v3 = (const std::__fs::filesystem::path **)*v3;
    }
    __int16 v4 = (void *)(a1 + 160);
    if (*(char *)(a1 + 183) < 0) {
      __int16 v4 = (void *)*v4;
    }
    *(_DWORD *)uint64_t buf = 68289539;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v13 = 2082;
    int v14 = "";
    __int16 v15 = 2081;
    double v16 = v3;
    __int16 v17 = 2081;
    double v18 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,load\", \"filePath\":%{private, location:escape_only}s, \"debugName\":%{private, location:escape_only}s}", buf, 0x26u);
  }
  if (!*(unsigned char *)(a1 + 184))
  {
    double v6 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    uint64_t v7 = (const std::__fs::filesystem::path **)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      uint64_t v7 = (const std::__fs::filesystem::path **)*v7;
    }
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v13 = 2082;
    int v14 = "";
    __int16 v15 = 2081;
    double v16 = v7;
    int v8 = "{\"msg%{public}.0s\":\"#saEventHistory,load,#warning,deferLoadingTillFirstUnlock\", \"filePath\":%{private, loc"
         "ation:escape_only}s}";
    goto LABEL_27;
  }
  BOOL v5 = (const std::__fs::filesystem::path **)(a1 + 48);
  if (*(char *)(a1 + 71) < 0)
  {
    if (!*(void *)(a1 + 56)) {
      return;
    }
  }
  else if (!*(unsigned char *)(a1 + 71))
  {
    return;
  }
  sub_10000DD48(buf, "0002");
  char v9 = sub_1000853F0();
  char v10 = v9;
  if (SBYTE3(v16) < 0)
  {
    operator delete(*(void **)buf);
    if (v10) {
LABEL_18:
    }
      operator new[]();
  }
  else if (v9)
  {
    goto LABEL_18;
  }
  uint64_t v11 = (const std::__fs::filesystem::path *)(a1 + 48);
  if (*(char *)(a1 + 71) < 0) {
    uint64_t v11 = *v5;
  }
  if (sub_100084D60(v11))
  {
    double v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      if (*(char *)(a1 + 71) < 0) {
        BOOL v5 = (const std::__fs::filesystem::path **)*v5;
      }
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v13 = 2082;
      int v14 = "";
      __int16 v15 = 2081;
      double v16 = v5;
      int v8 = "{\"msg%{public}.0s\":\"#saEventHistory,load,#warning,unabletToRemoveFile\", \"filePath\":%{private, location:escape_only}s}";
LABEL_27:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v8, buf, 0x1Cu);
    }
  }
}

void sub_10001088C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  sub_10008536C((uint64_t)&a32);
  operator delete[]();
}

uint64_t sub_1000109A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (!v1) {
    sub_100005520();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void sub_1000109F8()
{
}

void *sub_100010A0C(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F4F88;
  result[1] = v3;
  return result;
}

uint64_t sub_100010A54(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F4F88;
  a2[1] = v2;
  return result;
}

double sub_100010A80(uint64_t a1)
{
  *(void *)&double result = sub_100010AD4((uint64_t *)(a1 + 8)).n128_u64[0];
  return result;
}

uint64_t sub_100010A88(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100010AC8()
{
}

__n128 sub_100010AD4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (!*(unsigned char *)(*a1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 68289026;
      v9[1] = 0;
      __int16 v10 = 2082;
      uint64_t v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v9, 0x12u);
    }
    *(unsigned char *)uint64_t v1 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(v1 + 8) = _Q0;
    *(unsigned char *)(v1 + 152) = 0;
    sub_10000DBF0((uint64_t *)(v1 + 24));
  }
  return result;
}

uint64_t sub_100010BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10000F63C(a1, a3);
  BOOL v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v8[0] = 68289026;
    v8[1] = 0;
    __int16 v9 = 2082;
    __int16 v10 = "";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init\"}", (uint8_t *)v8, 0x12u);
  }
  uint64_t v6 = *(void *)(a2 + 24);
  if (!v6) {
    sub_100005520();
  }
  (*(void (**)(uint64_t))(*(void *)v6 + 48))(v6);
  return a1;
}

void sub_100010CB8(_Unwind_Exception *a1)
{
  sub_10000F6D4(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_100010CCC(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a2;
  uint64_t v7 = *a1;
  unint64_t v6 = a1[1];
  unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - *a1) >> 3);
  unint64_t v11 = a1[2];
  uint64_t v9 = (uint64_t)(a1 + 2);
  unint64_t v10 = v11;
  if (v6 >= v11)
  {
    unint64_t v13 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v6 - v7) >> 3) + 1;
    if (v13 > 0x666666666666666) {
      sub_1000050E8();
    }
    unint64_t v14 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v10 - v7) >> 3);
    if (2 * v14 > v13) {
      unint64_t v13 = 2 * v14;
    }
    if (v14 >= 0x333333333333333) {
      unint64_t v15 = 0x666666666666666;
    }
    else {
      unint64_t v15 = v13;
    }
    uint64_t v22 = v9;
    if (v15) {
      double v16 = (char *)sub_1000112D4(v9, v15);
    }
    else {
      double v16 = 0;
    }
    double v18 = v16;
    __int16 v19 = &v16[40 * v8];
    int v20 = v19;
    uint64_t v21 = &v16[40 * v15];
    sub_100010FE8(&v18, (uint64_t *)a3);
    unint64_t v4 = sub_10001117C((uint64_t)a1, &v18, (uint64_t *)v4);
    sub_100011560((uint64_t)&v18);
  }
  else if (a2 == v6)
  {
    sub_100010EEC((uint64_t)a1, (uint64_t *)a3);
  }
  else
  {
    sub_100010F60((uint64_t)a1, a2, v6, a2 + 40);
    if (v4 <= a3) {
      a3 += 40 * (a1[1] > a3);
    }
    uint64_t v12 = *(void *)a3;
    *(unsigned char *)(v4 + 8) = *(unsigned char *)(a3 + 8);
    *(void *)unint64_t v4 = v12;
    std::string::operator=((std::string *)(v7 + 40 * v8 + 16), (const std::string *)(a3 + 16));
  }
  return v4;
}

void sub_100010E48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100011560((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_100010E5C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  BOOL v5 = a2;
  if (a2 != a3)
  {
    do
    {
      uint64_t v7 = *v5;
      *(unsigned char *)(a4 + 8) = *((unsigned char *)v5 + 8);
      *(void *)a4 = v7;
      unint64_t v8 = (void **)(a4 + 16);
      if (*(char *)(a4 + 39) < 0) {
        operator delete(*v8);
      }
      long long v9 = *((_OWORD *)v5 + 1);
      *(void *)(a4 + 32) = v5[4];
      *(_OWORD *)unint64_t v8 = v9;
      *((unsigned char *)v5 + 39) = 0;
      *((unsigned char *)v5 + 16) = 0;
      a4 += 40;
      v5 += 5;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

unsigned char *sub_100010EEC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *a2;
  *(unsigned char *)(v3 + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t v3 = v4;
  __n128 result = (unsigned char *)(v3 + 16);
  if (*((char *)a2 + 39) < 0)
  {
    __n128 result = sub_100004CB8(result, (void *)a2[2], a2[3]);
  }
  else
  {
    long long v6 = *((_OWORD *)a2 + 1);
    *(void *)(v3 + 32) = a2[4];
    *(_OWORD *)__n128 result = v6;
  }
  *(void *)(a1 + 8) = v3 + 40;
  return result;
}

void sub_100010F58(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_100010F60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  uint64_t v8 = v6;
  if (v7 < a3)
  {
    unint64_t v9 = v7;
    uint64_t v8 = *(void *)(a1 + 8);
    do
    {
      uint64_t v10 = *(void *)v9;
      *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
      *(void *)uint64_t v8 = v10;
      long long v11 = *(_OWORD *)(v9 + 16);
      *(void *)(v8 + 32) = *(void *)(v9 + 32);
      *(_OWORD *)(v8 + 16) = v11;
      *(void *)(v9 + 24) = 0;
      *(void *)(v9 + 32) = 0;
      *(void *)(v9 + 16) = 0;
      v8 += 40;
      v9 += 40;
    }
    while (v9 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return sub_100011230((uint64_t)&v13, a2, v7, v6);
}

unsigned char *sub_100010FE8(void *a1, uint64_t *a2)
{
  uint64_t v4 = a1[2];
  if (v4 == a1[3])
  {
    BOOL v5 = (uint64_t *)a1[1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == *a1) {
        unint64_t v10 = 1;
      }
      else {
        unint64_t v10 = 0x999999999999999ALL * ((v4 - *a1) >> 3);
      }
      unint64_t v11 = v10 >> 2;
      uint64_t v12 = a1[4];
      uint64_t v30 = a1[4];
      char v13 = (char *)sub_1000112D4(v12, v10);
      unint64_t v15 = &v13[40 * v11];
      unint64_t v16 = a1[1];
      unint64_t v17 = a1[2] - v16;
      if (v17)
      {
        double v18 = &v15[v17];
        __int16 v19 = &v13[40 * v11];
        do
        {
          uint64_t v20 = *(void *)v16;
          v19[8] = *(unsigned char *)(v16 + 8);
          *(void *)__int16 v19 = v20;
          long long v21 = *(_OWORD *)(v16 + 16);
          *((void *)v19 + 4) = *(void *)(v16 + 32);
          *((_OWORD *)v19 + 1) = v21;
          *(void *)(v16 + 24) = 0;
          *(void *)(v16 + 32) = 0;
          *(void *)(v16 + 16) = 0;
          v19 += 40;
          v16 += 40;
        }
        while (v19 != v18);
        int64x2_t v22 = *(int64x2_t *)(a1 + 1);
      }
      else
      {
        int64x2_t v22 = vdupq_n_s64(v16);
        double v18 = &v13[40 * v11];
      }
      uint64_t v27 = *a1;
      *a1 = v13;
      a1[1] = v15;
      int64x2_t v28 = v22;
      uint64_t v23 = a1[3];
      a1[2] = v18;
      a1[3] = &v13[40 * v14];
      uint64_t v29 = v23;
      sub_100011560((uint64_t)&v27);
      uint64_t v4 = a1[2];
    }
    else
    {
      int64_t v6 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v5 - *a1) >> 3);
      if (v6 >= -1) {
        uint64_t v7 = v6 + 1;
      }
      else {
        uint64_t v7 = v6 + 2;
      }
      uint64_t v8 = -5 * (v7 >> 1);
      sub_100010E5C((uint64_t)&v27, v5, (uint64_t *)v4, (uint64_t)&v5[-5 * (v7 >> 1)]);
      uint64_t v4 = v9;
      a1[1] += 8 * v8;
      a1[2] = v9;
    }
  }
  uint64_t v24 = *a2;
  *(unsigned char *)(v4 + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t v4 = v24;
  __n128 result = (unsigned char *)(v4 + 16);
  if (*((char *)a2 + 39) < 0)
  {
    __n128 result = sub_100004CB8(result, (void *)a2[2], a2[3]);
  }
  else
  {
    long long v26 = *((_OWORD *)a2 + 1);
    *(void *)(v4 + 32) = a2[4];
    *(_OWORD *)__n128 result = v26;
  }
  a1[2] += 40;
  return result;
}

uint64_t sub_10001117C(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a1 + 16;
  sub_10001131C(a1 + 16, (uint64_t)a3, (uint64_t)a3, *(void *)a1, *(void *)a1, v6, v6);
  a2[1] = v8;
  a2[2] = sub_1000113C8(v7, a3, *(uint64_t **)(a1 + 8), a2[2]);
  uint64_t v9 = *(void *)a1;
  *(void *)a1 = a2[1];
  a2[1] = v9;
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = a2[2];
  a2[2] = v10;
  uint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_100011230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = a3 + v7;
      uint64_t v9 = a4 + v7;
      uint64_t v10 = *(void *)(a3 + v7 - 40);
      *(unsigned char *)(v9 - 32) = *(unsigned char *)(a3 + v7 - 32);
      *(void *)(v9 - 40) = v10;
      uint64_t v11 = a4 + v7 - 24;
      if (*(char *)(a4 + v7 - 1) < 0) {
        operator delete(*(void **)v11);
      }
      v7 -= 40;
      long long v12 = *(_OWORD *)(v8 - 24);
      *(void *)(v11 + 16) = *(void *)(v8 - 8);
      *(_OWORD *)uint64_t v11 = v12;
      *(unsigned char *)(v8 - 1) = 0;
      *(unsigned char *)(v8 - 24) = 0;
    }
    while (a3 + v7 != a2);
  }
  return a3;
}

void *sub_1000112D4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667) {
    sub_100004E00();
  }
  return operator new(40 * a2);
}

uint64_t sub_10001131C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    do
    {
      uint64_t v8 = *(void *)(a3 - 40);
      a3 -= 40;
      *(unsigned char *)(v7 - 32) = *(unsigned char *)(a3 + 8);
      *(void *)(v7 - 40) = v8;
      long long v9 = *(_OWORD *)(a3 + 16);
      *(void *)(v7 - 8) = *(void *)(a3 + 32);
      *(_OWORD *)(v7 - 24) = v9;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      *(void *)(a3 + 32) = 0;
      uint64_t v7 = *((void *)&v15 + 1) - 40;
      *((void *)&v15 + 1) -= 40;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  sub_100011460((uint64_t)v12);
  return v10;
}

uint64_t sub_1000113C8(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v10 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  _DWORD v8[2] = &v11;
  if (a2 != a3)
  {
    do
    {
      uint64_t v5 = *a2;
      *(unsigned char *)(v4 + 8) = *((unsigned char *)a2 + 8);
      *(void *)uint64_t v4 = v5;
      long long v6 = *((_OWORD *)a2 + 1);
      *(void *)(v4 + 32) = a2[4];
      *(_OWORD *)(v4 + 16) = v6;
      a2[3] = 0;
      a2[4] = 0;
      a2[2] = 0;
      v4 += 40;
      a2 += 5;
    }
    while (a2 != a3);
    uint64_t v11 = v4;
  }
  char v9 = 1;
  sub_1000114E0((uint64_t)v8);
  return v4;
}

uint64_t sub_100011460(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100011498(a1);
  }
  return a1;
}

void sub_100011498(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 39) < 0) {
      operator delete(*(void **)(v1 + 16));
    }
    v1 += 40;
  }
}

uint64_t sub_1000114E0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100011518(a1);
  }
  return a1;
}

void sub_100011518(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 1) < 0) {
      operator delete(*(void **)(v1 - 24));
    }
    v1 -= 40;
  }
}

uint64_t sub_100011560(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100011598(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      uint64_t v5 = v2 - 40;
      *(void *)(a1 + 16) = v2 - 40;
      if (*(char *)(v2 - 1) < 0)
      {
        operator delete(*(void **)(v2 - 24));
        uint64_t v5 = *(void *)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

void *sub_1000115F0(void *a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289026;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,released\"}", (uint8_t *)v5, 0x12u);
  }
  uint64_t v3 = a1[3];
  if (!v3) {
    sub_100005520();
  }
  (*(void (**)(uint64_t))(*(void *)v3 + 48))(v3);
  sub_10000F6D4(a1);
  return a1;
}

void sub_1000116E8(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100004CA4(a1);
}

void *sub_1000116F4(uint64_t a1)
{
  uint64_t v1 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_1000117B8;
  block[3] = &unk_1000F4FF8;
  sub_10000F63C((uint64_t)v4, a1 + 40);
  dispatch_async(v1, block);
  return sub_10000F6D4(v4);
}

void sub_1000117B8(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  _DWORD v3[2] = sub_1000118A8;
  v3[3] = &unk_1000F4FF8;
  sub_10000F63C((uint64_t)v4, a1 + 32);
  sub_1000118A8((uint64_t)v3);
  sub_10000F6D4(v4);
}

void sub_10001188C(_Unwind_Exception *a1)
{
  sub_10000F6D4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000118A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 56);
  if (!v1) {
    sub_100005520();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

uint64_t sub_1000118F8(uint64_t a1, uint64_t a2)
{
  return sub_10000F63C(a1 + 32, a2 + 32);
}

void *sub_100011904(uint64_t a1)
{
  return sub_10000F6D4((void *)(a1 + 32));
}

void *sub_10001190C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3321888768;
  v7[2] = sub_100011A10;
  v7[3] = &unk_1000F5060;
  sub_100011BB8((uint64_t)v9, a1 + 40);
  id v8 = v3;
  id v5 = v3;
  dispatch_async(v4, v7);

  return sub_100011D88(v9);
}

void sub_1000119F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100011A10(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  _DWORD v3[2] = sub_100011B1C;
  v3[3] = &unk_1000F5060;
  sub_100011BB8((uint64_t)v5, a1 + 40);
  id v4 = *(id *)(a1 + 32);
  sub_100011B1C((uint64_t)v3);

  sub_100011D88(v5);
}

void sub_100011AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  sub_100011D88(v13);
  _Unwind_Resume(a1);
}

void sub_100011B1C(uint64_t a1)
{
  id v3 = *(id *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 64);
  if (!v2) {
    sub_100005520();
  }
  (*(void (**)(uint64_t, id *))(*(void *)v2 + 48))(v2, &v3);
}

void sub_100011B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100011BA4(uint64_t a1, uint64_t a2)
{
  return sub_100011BB8(a1 + 40, a2 + 40);
}

void *sub_100011BB0(uint64_t a1)
{
  return sub_100011D88((void *)(a1 + 40));
}

uint64_t sub_100011BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_100011C50(uint64_t a1)
{
  return a1;
}

void sub_100011C7C(uint64_t a1)
{
  operator delete();
}

uint64_t sub_100011CC8()
{
  return 0;
}

id sub_100011CD0(uint64_t a1, void *a2)
{
  *a2 = off_1000F50D0;
  id result = objc_retainBlock(*(id *)(a1 + 8));
  a2[1] = result;
  return result;
}

uint64_t sub_100011D18(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  return _objc_release_x1();
}

uint64_t sub_100011D28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 8) + 16))();
}

uint64_t sub_100011D3C(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F5140)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100011D7C()
{
  return &off_1000F5140;
}

void *sub_100011D88(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_100011E0C(uint64_t a1)
{
  uint64_t v1 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_100011ED0;
  block[3] = &unk_1000F4FF8;
  sub_10000F63C((uint64_t)v4, a1 + 40);
  dispatch_async(v1, block);
  return sub_10000F6D4(v4);
}

void sub_100011ED0(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  _DWORD v3[2] = sub_100011FC0;
  v3[3] = &unk_1000F4FF8;
  sub_10000F63C((uint64_t)v4, a1 + 32);
  sub_100011FC0((uint64_t)v3);
  sub_10000F6D4(v4);
}

void sub_100011FA4(_Unwind_Exception *a1)
{
  sub_10000F6D4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100011FC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 56);
  if (!v1) {
    sub_100005520();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void *sub_100012010(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3321888768;
  v7[2] = sub_100012114;
  v7[3] = &unk_1000F5158;
  sub_1000122BC((uint64_t)v9, a1 + 40);
  id v8 = v3;
  id v5 = v3;
  dispatch_async(v4, v7);

  return sub_10001248C(v9);
}

void sub_1000120FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100012114(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  _DWORD v3[2] = sub_100012220;
  v3[3] = &unk_1000F5158;
  sub_1000122BC((uint64_t)v5, a1 + 40);
  id v4 = *(id *)(a1 + 32);
  sub_100012220((uint64_t)v3);

  sub_10001248C(v5);
}

void sub_1000121FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  sub_10001248C(v13);
  _Unwind_Resume(a1);
}

void sub_100012220(uint64_t a1)
{
  id v3 = *(id *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 64);
  if (!v2) {
    sub_100005520();
  }
  (*(void (**)(uint64_t, id *))(*(void *)v2 + 48))(v2, &v3);
}

void sub_100012294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1000122A8(uint64_t a1, uint64_t a2)
{
  return sub_1000122BC(a1 + 40, a2 + 40);
}

void *sub_1000122B4(uint64_t a1)
{
  return sub_10001248C((void *)(a1 + 40));
}

uint64_t sub_1000122BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_100012354(uint64_t a1)
{
  return a1;
}

void sub_100012380(uint64_t a1)
{
  operator delete();
}

uint64_t sub_1000123CC()
{
  return 0;
}

id sub_1000123D4(uint64_t a1, void *a2)
{
  *a2 = off_1000F51C8;
  id result = objc_retainBlock(*(id *)(a1 + 8));
  a2[1] = result;
  return result;
}

uint64_t sub_10001241C(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  return _objc_release_x1();
}

uint64_t sub_10001242C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 8) + 16))();
}

uint64_t sub_100012440(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F5238)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100012480()
{
  return &off_1000F5238;
}

void *sub_10001248C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100012510(uint64_t a1, double *a2)
{
  if (*a2 >= 0.0)
  {
    uint64_t v7 = *(void *)(a1 + 24);
    __int16 v6 = *(uint64_t **)(a1 + 32);
    if (0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v6 - v7) >> 3) >= *(void *)(a1 + 136))
    {
      id v8 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        char v9 = (void *)(a1 + 160);
        if (*(char *)(a1 + 183) < 0) {
          char v9 = (void *)*v9;
        }
        int v20 = 68289283;
        int v21 = 0;
        __int16 v22 = 2082;
        uint64_t v23 = "";
        __int16 v24 = 2081;
        double v25 = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,maxHistoryLenReached\", \"history\":%{private, location:escape_only}s}", (uint8_t *)&v20, 0x1Cu);
        uint64_t v7 = *(void *)(a1 + 24);
        __int16 v6 = *(uint64_t **)(a1 + 32);
      }
      sub_100013718((uint64_t)&v20, (uint64_t *)(v7 + 40), v6, v7);
      __int16 v6 = v10;
      for (uint64_t i = *(uint64_t **)(a1 + 32); i != v6; i -= 5)
      {
        if (*((char *)i - 1) < 0) {
          operator delete((void *)*(i - 3));
        }
      }
      *(void *)(a1 + 32) = v6;
      *(unsigned char *)(a1 + 152) = 1;
      uint64_t v7 = *(void *)(a1 + 24);
    }
    if (v6 != (uint64_t *)v7)
    {
      unint64_t v12 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v6 - v7) >> 3);
      do
      {
        unint64_t v13 = v12 >> 1;
        long long v14 = &v6[-5 * (v12 >> 1)];
        double v16 = *((double *)v14 - 5);
        long long v15 = v14 - 5;
        v12 += ~(v12 >> 1);
        if (*a2 >= v16) {
          unint64_t v12 = v13;
        }
        else {
          __int16 v6 = v15;
        }
      }
      while (v12);
    }
    sub_100013588((uint64_t *)(a1 + 24), (uint64_t)v6, (unint64_t)a2);
    double v17 = *(double *)(a1 + 8);
    double v18 = *a2;
    if (v17 < 0.0 || v17 > v18) {
      *(double *)(a1 + 8) = v18;
    }
    if (*(double *)(a1 + 16) < v18) {
      *(double *)(a1 + 16) = v18;
    }
  }
  else
  {
    uint64_t v3 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      id v4 = (void *)(a1 + 160);
      if (*(char *)(a1 + 183) < 0) {
        id v4 = (void *)*v4;
      }
      int v20 = 68289283;
      int v21 = 0;
      __int16 v22 = 2082;
      uint64_t v23 = "";
      __int16 v24 = 2081;
      double v25 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,updateWithInvalidArgs\", \"history\":%{private, location:escape_only}s}", (uint8_t *)&v20, 0x1Cu);
    }
  }
}

void sub_100012790(char *a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = a1 + 48;
    if (a1[71] < 0) {
      uint64_t v3 = (void *)*v3;
    }
    id v4 = a1 + 160;
    if (a1[183] < 0) {
      id v4 = (void *)*v4;
    }
    *(_DWORD *)uint64_t buf = 68289539;
    int v14 = 0;
    __int16 v15 = 2082;
    double v16 = "";
    __int16 v17 = 2081;
    double v18 = v3;
    __int16 v19 = 2081;
    int v20 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,save\", \"filePath\":%{private, location:escape_only}s, \"debugName\":%{private, location:escape_only}s}", buf, 0x26u);
  }
  if (a1[184])
  {
    id v5 = a1 + 48;
    if (a1[71] < 0) {
      id v5 = *(char **)v5;
    }
    sub_10000DD48(&__p, "0002");
    sub_1000859E8((uint64_t)buf, v5, (uint64_t)&__p);
    if (SBYTE3(v12) < 0) {
      operator delete(__p);
    }
    if (v21) {
      operator new[]();
    }
    id v8 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      char v9 = a1 + 160;
      if (a1[183] < 0) {
        char v9 = (void *)*v9;
      }
      long long __p = (void *)68289283;
      v11[0] = 2082;
      *(void *)&v11[1] = "";
      v11[5] = 2081;
      unint64_t v12 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,cannotOpenFileToSave\", \"history\":%{private, location:escape_only}s}", (uint8_t *)&__p, 0x1Cu);
    }
    sub_100085D74((uint64_t)buf);
  }
  else
  {
    __int16 v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = a1 + 160;
      if (a1[183] < 0) {
        uint64_t v7 = (void *)*v7;
      }
      *(_DWORD *)uint64_t buf = 68289283;
      int v14 = 0;
      __int16 v15 = 2082;
      double v16 = "";
      __int16 v17 = 2081;
      double v18 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,deferSavingTillFirstUnlock\", \"history\":%{private, location:escape_only}s}", buf, 0x1Cu);
    }
    a1[185] = 1;
  }
}

void sub_100012B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,char a25)
{
}

void sub_100012BA0()
{
}

void *sub_100012BB4(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F5258;
  result[1] = v3;
  return result;
}

uint64_t sub_100012BFC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F5258;
  a2[1] = v2;
  return result;
}

void sub_100012C28(uint64_t a1)
{
}

uint64_t sub_100012C30(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100012C70()
{
}

void sub_100012C7C(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)a1;
  if (!*(unsigned char *)(*(void *)a1 + 1))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      id v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100012D4C((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

void sub_100012D4C(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = (const std::__fs::filesystem::path **)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      uint64_t v3 = (const std::__fs::filesystem::path **)*v3;
    }
    __int16 v4 = (void *)(a1 + 160);
    if (*(char *)(a1 + 183) < 0) {
      __int16 v4 = (void *)*v4;
    }
    *(_DWORD *)uint64_t buf = 68289539;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v13 = 2082;
    int v14 = "";
    __int16 v15 = 2081;
    double v16 = v3;
    __int16 v17 = 2081;
    double v18 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,load\", \"filePath\":%{private, location:escape_only}s, \"debugName\":%{private, location:escape_only}s}", buf, 0x26u);
  }
  if (!*(unsigned char *)(a1 + 184))
  {
    __int16 v6 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    uint64_t v7 = (const std::__fs::filesystem::path **)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      uint64_t v7 = (const std::__fs::filesystem::path **)*v7;
    }
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v13 = 2082;
    int v14 = "";
    __int16 v15 = 2081;
    double v16 = v7;
    id v8 = "{\"msg%{public}.0s\":\"#saEventHistory,load,#warning,deferLoadingTillFirstUnlock\", \"filePath\":%{private, loc"
         "ation:escape_only}s}";
    goto LABEL_27;
  }
  id v5 = (const std::__fs::filesystem::path **)(a1 + 48);
  if (*(char *)(a1 + 71) < 0)
  {
    if (!*(void *)(a1 + 56)) {
      return;
    }
  }
  else if (!*(unsigned char *)(a1 + 71))
  {
    return;
  }
  sub_10000DD48(buf, "0002");
  char v9 = sub_1000853F0();
  char v10 = v9;
  if (SBYTE3(v16) < 0)
  {
    operator delete(*(void **)buf);
    if (v10) {
LABEL_18:
    }
      operator new[]();
  }
  else if (v9)
  {
    goto LABEL_18;
  }
  uint64_t v11 = (const std::__fs::filesystem::path *)(a1 + 48);
  if (*(char *)(a1 + 71) < 0) {
    uint64_t v11 = *v5;
  }
  if (sub_100084D60(v11))
  {
    __int16 v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      if (*(char *)(a1 + 71) < 0) {
        id v5 = (const std::__fs::filesystem::path **)*v5;
      }
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v13 = 2082;
      int v14 = "";
      __int16 v15 = 2081;
      double v16 = v5;
      id v8 = "{\"msg%{public}.0s\":\"#saEventHistory,load,#warning,unabletToRemoveFile\", \"filePath\":%{private, location:escape_only}s}";
LABEL_27:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v8, buf, 0x1Cu);
    }
  }
}

void sub_100013340(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  sub_10008536C((uint64_t)&a32);
  operator delete[]();
}

uint64_t sub_100013458(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (!v1) {
    sub_100005520();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void sub_1000134AC()
{
}

void *sub_1000134C0(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F52D8;
  result[1] = v3;
  return result;
}

uint64_t sub_100013508(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F52D8;
  a2[1] = v2;
  return result;
}

double sub_100013534(uint64_t a1)
{
  *(void *)&double result = sub_100010AD4((uint64_t *)(a1 + 8)).n128_u64[0];
  return result;
}

uint64_t sub_10001353C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10001357C()
{
}

unint64_t sub_100013588(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a2;
  uint64_t v7 = *a1;
  unint64_t v6 = a1[1];
  unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - *a1) >> 3);
  unint64_t v11 = a1[2];
  uint64_t v9 = (uint64_t)(a1 + 2);
  unint64_t v10 = v11;
  if (v6 >= v11)
  {
    unint64_t v13 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v6 - v7) >> 3) + 1;
    if (v13 > 0x666666666666666) {
      sub_1000050E8();
    }
    unint64_t v14 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v10 - v7) >> 3);
    if (2 * v14 > v13) {
      unint64_t v13 = 2 * v14;
    }
    if (v14 >= 0x333333333333333) {
      unint64_t v15 = 0x666666666666666;
    }
    else {
      unint64_t v15 = v13;
    }
    uint64_t v22 = v9;
    if (v15) {
      double v16 = (char *)sub_1000112D4(v9, v15);
    }
    else {
      double v16 = 0;
    }
    double v18 = v16;
    __int16 v19 = &v16[40 * v8];
    int v20 = v19;
    uint64_t v21 = &v16[40 * v15];
    sub_1000138A4(&v18, (uint64_t *)a3);
    unint64_t v4 = sub_100013A38((uint64_t)a1, &v18, (uint64_t *)v4);
    sub_100011560((uint64_t)&v18);
  }
  else if (a2 == v6)
  {
    sub_1000137A8((uint64_t)a1, (uint64_t *)a3);
  }
  else
  {
    sub_10001381C((uint64_t)a1, a2, v6, a2 + 40);
    if (v4 <= a3) {
      a3 += 40 * (a1[1] > a3);
    }
    uint64_t v12 = *(void *)a3;
    *(_DWORD *)(v4 + 8) = *(_DWORD *)(a3 + 8);
    *(void *)unint64_t v4 = v12;
    std::string::operator=((std::string *)(v7 + 40 * v8 + 16), (const std::string *)(a3 + 16));
  }
  return v4;
}

void sub_100013704(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100011560((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_100013718(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  id v5 = a2;
  if (a2 != a3)
  {
    do
    {
      uint64_t v7 = *v5;
      *(_DWORD *)(a4 + 8) = *((_DWORD *)v5 + 2);
      *(void *)a4 = v7;
      unint64_t v8 = (void **)(a4 + 16);
      if (*(char *)(a4 + 39) < 0) {
        operator delete(*v8);
      }
      long long v9 = *((_OWORD *)v5 + 1);
      *(void *)(a4 + 32) = v5[4];
      *(_OWORD *)unint64_t v8 = v9;
      *((unsigned char *)v5 + 39) = 0;
      *((unsigned char *)v5 + 16) = 0;
      a4 += 40;
      v5 += 5;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

unsigned char *sub_1000137A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *a2;
  *(_DWORD *)(v3 + 8) = *((_DWORD *)a2 + 2);
  *(void *)uint64_t v3 = v4;
  double result = (unsigned char *)(v3 + 16);
  if (*((char *)a2 + 39) < 0)
  {
    double result = sub_100004CB8(result, (void *)a2[2], a2[3]);
  }
  else
  {
    long long v6 = *((_OWORD *)a2 + 1);
    *(void *)(v3 + 32) = a2[4];
    *(_OWORD *)double result = v6;
  }
  *(void *)(a1 + 8) = v3 + 40;
  return result;
}

void sub_100013814(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_10001381C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  uint64_t v8 = v6;
  if (v7 < a3)
  {
    unint64_t v9 = v7;
    uint64_t v8 = *(void *)(a1 + 8);
    do
    {
      uint64_t v10 = *(void *)v9;
      *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
      *(void *)uint64_t v8 = v10;
      long long v11 = *(_OWORD *)(v9 + 16);
      *(void *)(v8 + 32) = *(void *)(v9 + 32);
      *(_OWORD *)(v8 + 16) = v11;
      *(void *)(v9 + 24) = 0;
      *(void *)(v9 + 32) = 0;
      *(void *)(v9 + 16) = 0;
      v8 += 40;
      v9 += 40;
    }
    while (v9 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return sub_100013AEC((uint64_t)&v13, a2, v7, v6);
}

unsigned char *sub_1000138A4(void *a1, uint64_t *a2)
{
  uint64_t v4 = a1[2];
  if (v4 == a1[3])
  {
    id v5 = (uint64_t *)a1[1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == *a1) {
        unint64_t v10 = 1;
      }
      else {
        unint64_t v10 = 0x999999999999999ALL * ((v4 - *a1) >> 3);
      }
      unint64_t v11 = v10 >> 2;
      uint64_t v12 = a1[4];
      uint64_t v30 = a1[4];
      char v13 = (char *)sub_1000112D4(v12, v10);
      unint64_t v15 = &v13[40 * v11];
      unint64_t v16 = a1[1];
      unint64_t v17 = a1[2] - v16;
      if (v17)
      {
        double v18 = &v15[v17];
        __int16 v19 = &v13[40 * v11];
        do
        {
          uint64_t v20 = *(void *)v16;
          *((_DWORD *)v19 + 2) = *(_DWORD *)(v16 + 8);
          *(void *)__int16 v19 = v20;
          long long v21 = *(_OWORD *)(v16 + 16);
          *((void *)v19 + 4) = *(void *)(v16 + 32);
          *((_OWORD *)v19 + 1) = v21;
          *(void *)(v16 + 24) = 0;
          *(void *)(v16 + 32) = 0;
          *(void *)(v16 + 16) = 0;
          v19 += 40;
          v16 += 40;
        }
        while (v19 != v18);
        int64x2_t v22 = *(int64x2_t *)(a1 + 1);
      }
      else
      {
        int64x2_t v22 = vdupq_n_s64(v16);
        double v18 = &v13[40 * v11];
      }
      uint64_t v27 = *a1;
      *a1 = v13;
      a1[1] = v15;
      int64x2_t v28 = v22;
      uint64_t v23 = a1[3];
      a1[2] = v18;
      a1[3] = &v13[40 * v14];
      uint64_t v29 = v23;
      sub_100011560((uint64_t)&v27);
      uint64_t v4 = a1[2];
    }
    else
    {
      int64_t v6 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v5 - *a1) >> 3);
      if (v6 >= -1) {
        uint64_t v7 = v6 + 1;
      }
      else {
        uint64_t v7 = v6 + 2;
      }
      uint64_t v8 = -5 * (v7 >> 1);
      sub_100013718((uint64_t)&v27, v5, (uint64_t *)v4, (uint64_t)&v5[-5 * (v7 >> 1)]);
      uint64_t v4 = v9;
      a1[1] += 8 * v8;
      a1[2] = v9;
    }
  }
  uint64_t v24 = *a2;
  *(_DWORD *)(v4 + 8) = *((_DWORD *)a2 + 2);
  *(void *)uint64_t v4 = v24;
  double result = (unsigned char *)(v4 + 16);
  if (*((char *)a2 + 39) < 0)
  {
    double result = sub_100004CB8(result, (void *)a2[2], a2[3]);
  }
  else
  {
    long long v26 = *((_OWORD *)a2 + 1);
    *(void *)(v4 + 32) = a2[4];
    *(_OWORD *)double result = v26;
  }
  a1[2] += 40;
  return result;
}

uint64_t sub_100013A38(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a1 + 16;
  sub_100013B90(a1 + 16, (uint64_t)a3, (uint64_t)a3, *(void *)a1, *(void *)a1, v6, v6);
  a2[1] = v8;
  a2[2] = sub_100013C3C(v7, a3, *(uint64_t **)(a1 + 8), a2[2]);
  uint64_t v9 = *(void *)a1;
  *(void *)a1 = a2[1];
  a2[1] = v9;
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = a2[2];
  a2[2] = v10;
  uint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_100013AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = a3 + v7;
      uint64_t v9 = a4 + v7;
      uint64_t v10 = *(void *)(a3 + v7 - 40);
      *(_DWORD *)(v9 - 32) = *(_DWORD *)(a3 + v7 - 32);
      *(void *)(v9 - 40) = v10;
      uint64_t v11 = a4 + v7 - 24;
      if (*(char *)(a4 + v7 - 1) < 0) {
        operator delete(*(void **)v11);
      }
      v7 -= 40;
      long long v12 = *(_OWORD *)(v8 - 24);
      *(void *)(v11 + 16) = *(void *)(v8 - 8);
      *(_OWORD *)uint64_t v11 = v12;
      *(unsigned char *)(v8 - 1) = 0;
      *(unsigned char *)(v8 - 24) = 0;
    }
    while (a3 + v7 != a2);
  }
  return a3;
}

uint64_t sub_100013B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    do
    {
      uint64_t v8 = *(void *)(a3 - 40);
      a3 -= 40;
      *(_DWORD *)(v7 - 32) = *(_DWORD *)(a3 + 8);
      *(void *)(v7 - 40) = v8;
      long long v9 = *(_OWORD *)(a3 + 16);
      *(void *)(v7 - 8) = *(void *)(a3 + 32);
      *(_OWORD *)(v7 - 24) = v9;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      *(void *)(a3 + 32) = 0;
      uint64_t v7 = *((void *)&v15 + 1) - 40;
      *((void *)&v15 + 1) -= 40;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  sub_100013CD4((uint64_t)v12);
  return v10;
}

uint64_t sub_100013C3C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v10 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  _DWORD v8[2] = &v11;
  if (a2 != a3)
  {
    do
    {
      uint64_t v5 = *a2;
      *(_DWORD *)(v4 + 8) = *((_DWORD *)a2 + 2);
      *(void *)uint64_t v4 = v5;
      long long v6 = *((_OWORD *)a2 + 1);
      *(void *)(v4 + 32) = a2[4];
      *(_OWORD *)(v4 + 16) = v6;
      a2[3] = 0;
      a2[4] = 0;
      a2[2] = 0;
      v4 += 40;
      a2 += 5;
    }
    while (a2 != a3);
    uint64_t v11 = v4;
  }
  char v9 = 1;
  sub_100013D0C((uint64_t)v8);
  return v4;
}

uint64_t sub_100013CD4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100011498(a1);
  }
  return a1;
}

uint64_t sub_100013D0C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100011518(a1);
  }
  return a1;
}

void *sub_100013D44(uint64_t a1)
{
  uint64_t v1 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_100013E08;
  block[3] = &unk_1000F4FF8;
  sub_10000F63C((uint64_t)v4, a1 + 40);
  dispatch_async(v1, block);
  return sub_10000F6D4(v4);
}

void sub_100013E08(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  _DWORD v3[2] = sub_100013EF8;
  v3[3] = &unk_1000F4FF8;
  sub_10000F63C((uint64_t)v4, a1 + 32);
  sub_100013EF8((uint64_t)v3);
  sub_10000F6D4(v4);
}

void sub_100013EDC(_Unwind_Exception *a1)
{
  sub_10000F6D4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100013EF8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 56);
  if (!v1) {
    sub_100005520();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void *sub_100013F48(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3321888768;
  v7[2] = sub_10001404C;
  v7[3] = &unk_1000F5350;
  sub_1000141F4((uint64_t)v9, a1 + 40);
  id v8 = v3;
  id v5 = v3;
  dispatch_async(v4, v7);

  return sub_1000143C4(v9);
}

void sub_100014034(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001404C(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  _DWORD v3[2] = sub_100014158;
  v3[3] = &unk_1000F5350;
  sub_1000141F4((uint64_t)v5, a1 + 40);
  id v4 = *(id *)(a1 + 32);
  sub_100014158((uint64_t)v3);

  sub_1000143C4(v5);
}

void sub_100014134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  sub_1000143C4(v13);
  _Unwind_Resume(a1);
}

void sub_100014158(uint64_t a1)
{
  id v3 = *(id *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 64);
  if (!v2) {
    sub_100005520();
  }
  (*(void (**)(uint64_t, id *))(*(void *)v2 + 48))(v2, &v3);
}

void sub_1000141CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1000141E0(uint64_t a1, uint64_t a2)
{
  return sub_1000141F4(a1 + 40, a2 + 40);
}

void *sub_1000141EC(uint64_t a1)
{
  return sub_1000143C4((void *)(a1 + 40));
}

uint64_t sub_1000141F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_10001428C(uint64_t a1)
{
  return a1;
}

void sub_1000142B8(uint64_t a1)
{
  operator delete();
}

uint64_t sub_100014304()
{
  return 0;
}

id sub_10001430C(uint64_t a1, void *a2)
{
  *a2 = off_1000F53C0;
  id result = objc_retainBlock(*(id *)(a1 + 8));
  a2[1] = result;
  return result;
}

uint64_t sub_100014354(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  return _objc_release_x1();
}

uint64_t sub_100014364(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 8) + 16))();
}

uint64_t sub_100014378(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F5430)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1000143B8()
{
  return &off_1000F5430;
}

void *sub_1000143C4(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_100014448(uint64_t a1)
{
  uint64_t v1 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_10001450C;
  block[3] = &unk_1000F4FF8;
  sub_10000F63C((uint64_t)v4, a1 + 40);
  dispatch_async(v1, block);
  return sub_10000F6D4(v4);
}

void sub_10001450C(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  _DWORD v3[2] = sub_1000145FC;
  v3[3] = &unk_1000F4FF8;
  sub_10000F63C((uint64_t)v4, a1 + 32);
  sub_1000145FC((uint64_t)v3);
  sub_10000F6D4(v4);
}

void sub_1000145E0(_Unwind_Exception *a1)
{
  sub_10000F6D4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000145FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 56);
  if (!v1) {
    sub_100005520();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void *sub_10001464C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3321888768;
  v7[2] = sub_100014750;
  v7[3] = &unk_1000F5448;
  sub_1000148F8((uint64_t)v9, a1 + 40);
  id v8 = v3;
  id v5 = v3;
  dispatch_async(v4, v7);

  return sub_100014AC8(v9);
}

void sub_100014738(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100014750(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  _DWORD v3[2] = sub_10001485C;
  v3[3] = &unk_1000F5448;
  sub_1000148F8((uint64_t)v5, a1 + 40);
  id v4 = *(id *)(a1 + 32);
  sub_10001485C((uint64_t)v3);

  sub_100014AC8(v5);
}

void sub_100014838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  sub_100014AC8(v13);
  _Unwind_Resume(a1);
}

void sub_10001485C(uint64_t a1)
{
  id v3 = *(id *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 64);
  if (!v2) {
    sub_100005520();
  }
  (*(void (**)(uint64_t, id *))(*(void *)v2 + 48))(v2, &v3);
}

void sub_1000148D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1000148E4(uint64_t a1, uint64_t a2)
{
  return sub_1000148F8(a1 + 40, a2 + 40);
}

void *sub_1000148F0(uint64_t a1)
{
  return sub_100014AC8((void *)(a1 + 40));
}

uint64_t sub_1000148F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_100014990(uint64_t a1)
{
  return a1;
}

void sub_1000149BC(uint64_t a1)
{
  operator delete();
}

uint64_t sub_100014A08()
{
  return 0;
}

id sub_100014A10(uint64_t a1, void *a2)
{
  *a2 = off_1000F54B8;
  id result = objc_retainBlock(*(id *)(a1 + 8));
  a2[1] = result;
  return result;
}

uint64_t sub_100014A58(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  return _objc_release_x1();
}

uint64_t sub_100014A68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 8) + 16))();
}

uint64_t sub_100014A7C(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F5528)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100014ABC()
{
  return &off_1000F5528;
}

void *sub_100014AC8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_100014B4C(uint64_t a1)
{
  uint64_t v1 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_100014C10;
  block[3] = &unk_1000F4FF8;
  sub_10000F63C((uint64_t)v4, a1 + 40);
  dispatch_async(v1, block);
  return sub_10000F6D4(v4);
}

void sub_100014C10(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  _DWORD v3[2] = sub_100014D00;
  v3[3] = &unk_1000F4FF8;
  sub_10000F63C((uint64_t)v4, a1 + 32);
  sub_100014D00((uint64_t)v3);
  sub_10000F6D4(v4);
}

void sub_100014CE4(_Unwind_Exception *a1)
{
  sub_10000F6D4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100014D00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 56);
  if (!v1) {
    sub_100005520();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void *sub_100014D50(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3321888768;
  v7[2] = sub_100014E54;
  v7[3] = &unk_1000F5540;
  sub_100014FFC((uint64_t)v9, a1 + 40);
  id v8 = v3;
  id v5 = v3;
  dispatch_async(v4, v7);

  return sub_1000151CC(v9);
}

void sub_100014E3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100014E54(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  _DWORD v3[2] = sub_100014F60;
  v3[3] = &unk_1000F5540;
  sub_100014FFC((uint64_t)v5, a1 + 40);
  id v4 = *(id *)(a1 + 32);
  sub_100014F60((uint64_t)v3);

  sub_1000151CC(v5);
}

void sub_100014F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  sub_1000151CC(v13);
  _Unwind_Resume(a1);
}

void sub_100014F60(uint64_t a1)
{
  id v3 = *(id *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 64);
  if (!v2) {
    sub_100005520();
  }
  (*(void (**)(uint64_t, id *))(*(void *)v2 + 48))(v2, &v3);
}

void sub_100014FD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100014FE8(uint64_t a1, uint64_t a2)
{
  return sub_100014FFC(a1 + 40, a2 + 40);
}

void *sub_100014FF4(uint64_t a1)
{
  return sub_1000151CC((void *)(a1 + 40));
}

uint64_t sub_100014FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_100015094(uint64_t a1)
{
  return a1;
}

void sub_1000150C0(uint64_t a1)
{
  operator delete();
}

uint64_t sub_10001510C()
{
  return 0;
}

id sub_100015114(uint64_t a1, void *a2)
{
  *a2 = off_1000F55B0;
  id result = objc_retainBlock(*(id *)(a1 + 8));
  a2[1] = result;
  return result;
}

uint64_t sub_10001515C(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  return _objc_release_x1();
}

uint64_t sub_10001516C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 8) + 16))();
}

uint64_t sub_100015180(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F5620)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1000151C0()
{
  return &off_1000F5620;
}

void *sub_1000151CC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_100015250(uint64_t a1)
{
  uint64_t v1 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_100015314;
  block[3] = &unk_1000F4FF8;
  sub_10000F63C((uint64_t)v4, a1 + 40);
  dispatch_async(v1, block);
  return sub_10000F6D4(v4);
}

void sub_100015314(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  _DWORD v3[2] = sub_100015404;
  v3[3] = &unk_1000F4FF8;
  sub_10000F63C((uint64_t)v4, a1 + 32);
  sub_100015404((uint64_t)v3);
  sub_10000F6D4(v4);
}

void sub_1000153E8(_Unwind_Exception *a1)
{
  sub_10000F6D4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100015404(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 56);
  if (!v1) {
    sub_100005520();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void *sub_100015454(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3321888768;
  v7[2] = sub_100015558;
  v7[3] = &unk_1000F5638;
  sub_100015700((uint64_t)v9, a1 + 40);
  id v8 = v3;
  id v5 = v3;
  dispatch_async(v4, v7);

  return sub_1000158D0(v9);
}

void sub_100015540(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100015558(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  _DWORD v3[2] = sub_100015664;
  v3[3] = &unk_1000F5638;
  sub_100015700((uint64_t)v5, a1 + 40);
  id v4 = *(id *)(a1 + 32);
  sub_100015664((uint64_t)v3);

  sub_1000158D0(v5);
}

void sub_100015640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  sub_1000158D0(v13);
  _Unwind_Resume(a1);
}

void sub_100015664(uint64_t a1)
{
  id v3 = *(id *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 64);
  if (!v2) {
    sub_100005520();
  }
  (*(void (**)(uint64_t, id *))(*(void *)v2 + 48))(v2, &v3);
}

void sub_1000156D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1000156EC(uint64_t a1, uint64_t a2)
{
  return sub_100015700(a1 + 40, a2 + 40);
}

void *sub_1000156F8(uint64_t a1)
{
  return sub_1000158D0((void *)(a1 + 40));
}

uint64_t sub_100015700(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_100015798(uint64_t a1)
{
  return a1;
}

void sub_1000157C4(uint64_t a1)
{
  operator delete();
}

uint64_t sub_100015810()
{
  return 0;
}

id sub_100015818(uint64_t a1, void *a2)
{
  *a2 = off_1000F56A8;
  id result = objc_retainBlock(*(id *)(a1 + 8));
  a2[1] = result;
  return result;
}

uint64_t sub_100015860(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  return _objc_release_x1();
}

uint64_t sub_100015870(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 8) + 16))();
}

uint64_t sub_100015884(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F5718)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1000158C4()
{
  return &off_1000F5718;
}

void *sub_1000158D0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100015958()
{
}

void *sub_10001596C(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F5738;
  result[1] = v3;
  return result;
}

uint64_t sub_1000159B4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F5738;
  a2[1] = v2;
  return result;
}

void sub_1000159E0(uint64_t a1)
{
}

uint64_t sub_1000159E8(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100015A28()
{
}

void sub_100015A38()
{
}

void *sub_100015A4C(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F57B8;
  result[1] = v3;
  return result;
}

uint64_t sub_100015A94(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F57B8;
  a2[1] = v2;
  return result;
}

double sub_100015AC0(uint64_t a1)
{
  *(void *)&double result = sub_100010AD4((uint64_t *)(a1 + 8)).n128_u64[0];
  return result;
}

uint64_t sub_100015AC8(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100015B08()
{
}

void sub_100015B14(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100015B14(a1, *a2);
    sub_100015B14(a1, a2[1]);
    operator delete(a2);
  }
}

void sub_100015B6C()
{
}

void *sub_100015B80(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F5838;
  result[1] = v3;
  return result;
}

uint64_t sub_100015BC8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F5838;
  a2[1] = v2;
  return result;
}

void sub_100015BF4(uint64_t a1)
{
}

uint64_t sub_100015BFC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100015C3C()
{
}

void sub_100015C4C()
{
}

void *sub_100015C60(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F58B8;
  result[1] = v3;
  return result;
}

uint64_t sub_100015CA8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F58B8;
  a2[1] = v2;
  return result;
}

double sub_100015CD4(uint64_t a1)
{
  *(void *)&double result = sub_100010AD4((uint64_t *)(a1 + 8)).n128_u64[0];
  return result;
}

uint64_t sub_100015CDC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100015D1C()
{
}

uint64_t **sub_100015D28(uint64_t **a1, unsigned __int8 *a2, unsigned char *a3)
{
  long long v6 = a1 + 1;
  id v5 = a1[1];
  if (v5)
  {
    unsigned int v7 = *a2;
    while (1)
    {
      while (1)
      {
        id v8 = (uint64_t **)v5;
        unsigned int v9 = *((unsigned __int8 *)v5 + 25);
        if (v7 >= v9) {
          break;
        }
        id v5 = *v8;
        long long v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      id v5 = v8[1];
      if (!v5)
      {
        long long v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    id v8 = a1 + 1;
LABEL_10:
    uint64_t v10 = (uint64_t *)operator new(0x20uLL);
    *((unsigned char *)v10 + 25) = *a3;
    sub_100015DE4(a1, (uint64_t)v8, v6, v10);
    return (uint64_t **)v10;
  }
  return v8;
}

uint64_t *sub_100015DE4(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  id v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  double result = sub_100015E3C(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t *sub_100015E3C(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      uint64_t v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      uint64_t v3 = (uint64_t *)v2[2];
      id v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), id v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            unsigned int v9 = (uint64_t **)a2[2];
          }
          else
          {
            unsigned int v9 = (uint64_t **)v2[1];
            uint64_t v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              _DWORD v10[2] = (uint64_t)v2;
              uint64_t v3 = (uint64_t *)v2[2];
            }
            _DWORD v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *unsigned int v9 = v2;
            v2[2] = (uint64_t)v9;
            uint64_t v3 = v9[2];
            uint64_t v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          *uint64_t v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), id v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          *uint64_t v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            uint64_t v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          uint64_t v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        uint64_t v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        *uint64_t v2 = (uint64_t)v3;
LABEL_27:
        _DWORD v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      *id v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void sub_100015FD8()
{
}

void *sub_100015FEC(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F5938;
  result[1] = v3;
  return result;
}

uint64_t sub_100016034(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F5938;
  a2[1] = v2;
  return result;
}

void sub_100016060(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  if (!v1[1])
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      id v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100012D4C((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

uint64_t sub_100016130(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100016170()
{
}

void sub_100016180()
{
}

void *sub_100016194(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F59B8;
  result[1] = v3;
  return result;
}

uint64_t sub_1000161DC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F59B8;
  a2[1] = v2;
  return result;
}

__n128 sub_100016208(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!*(unsigned char *)(v1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 68289026;
      v9[1] = 0;
      __int16 v10 = 2082;
      uint64_t v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v9, 0x12u);
    }
    *(unsigned char *)uint64_t v1 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(v1 + 8) = _Q0;
    *(unsigned char *)(v1 + 152) = 0;
    sub_10000DBF0((uint64_t *)(v1 + 24));
  }
  return result;
}

uint64_t sub_1000162E8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100016328()
{
}

void sub_100016338()
{
}

void *sub_10001634C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F5A38;
  result[1] = v3;
  return result;
}

uint64_t sub_100016394(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F5A38;
  a2[1] = v2;
  return result;
}

void sub_1000163C0(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  if (!v1[1])
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      id v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100012D4C((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

uint64_t sub_100016490(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_1000164D0()
{
}

void sub_1000164E0()
{
}

void *sub_1000164F4(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F5AB8;
  result[1] = v3;
  return result;
}

uint64_t sub_10001653C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F5AB8;
  a2[1] = v2;
  return result;
}

__n128 sub_100016568(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!*(unsigned char *)(v1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 68289026;
      v9[1] = 0;
      __int16 v10 = 2082;
      uint64_t v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v9, 0x12u);
    }
    *(unsigned char *)uint64_t v1 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(v1 + 8) = _Q0;
    *(unsigned char *)(v1 + 152) = 0;
    sub_10000DBF0((uint64_t *)(v1 + 24));
  }
  return result;
}

uint64_t sub_100016648(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100016688()
{
}

void *sub_100016694(unint64_t a1)
{
  if (a1 >> 60) {
    sub_100004E00();
  }
  return operator new(16 * a1);
}

void sub_1000166D0()
{
}

void *sub_1000166E4(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F5B38;
  result[1] = v3;
  return result;
}

uint64_t sub_10001672C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F5B38;
  a2[1] = v2;
  return result;
}

void sub_100016758(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  if (!v1[1])
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      id v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100012D4C((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

uint64_t sub_100016828(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100016868()
{
}

void sub_100016878()
{
}

void *sub_10001688C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F5BB8;
  result[1] = v3;
  return result;
}

uint64_t sub_1000168D4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F5BB8;
  a2[1] = v2;
  return result;
}

__n128 sub_100016900(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!*(unsigned char *)(v1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 68289026;
      v9[1] = 0;
      __int16 v10 = 2082;
      uint64_t v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v9, 0x12u);
    }
    *(unsigned char *)uint64_t v1 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(v1 + 8) = _Q0;
    *(unsigned char *)(v1 + 152) = 0;
    sub_10000DBF0((uint64_t *)(v1 + 24));
  }
  return result;
}

uint64_t sub_1000169E0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100016A20()
{
}

void sub_100016A30()
{
}

void *sub_100016A44(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F5C38;
  result[1] = v3;
  return result;
}

uint64_t sub_100016A8C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F5C38;
  a2[1] = v2;
  return result;
}

void sub_100016AB8(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  if (!v1[1])
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      id v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100012D4C((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

uint64_t sub_100016B88(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100016BC8()
{
}

void sub_100016BD8()
{
}

void *sub_100016BEC(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F5CB8;
  result[1] = v3;
  return result;
}

uint64_t sub_100016C34(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F5CB8;
  a2[1] = v2;
  return result;
}

__n128 sub_100016C60(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!*(unsigned char *)(v1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 68289026;
      v9[1] = 0;
      __int16 v10 = 2082;
      uint64_t v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v9, 0x12u);
    }
    *(unsigned char *)uint64_t v1 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(v1 + 8) = _Q0;
    *(unsigned char *)(v1 + 152) = 0;
    sub_10000DBF0((uint64_t *)(v1 + 24));
  }
  return result;
}

uint64_t sub_100016D40(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100016D80()
{
}

uint64_t sub_100016D8C()
{
  v4[0] = 0;
  *(_OWORD *)&void v4[4] = xmmword_1000B2340;
  *(_OWORD *)&v4[20] = xmmword_1000B2350;
  *(void *)&v4[36] = &_mh_execute_header;
  memset(&v4[44], 0, 24);
  int v5 = 0;
  v0 = sub_10006B474();
  long long v1 = *((_OWORD *)v0 + 26);
  *(_OWORD *)__int16 v4 = *((_OWORD *)v0 + 25);
  *(_OWORD *)&v4[16] = v1;
  *(_OWORD *)&v4[32] = *((_OWORD *)v0 + 27);
  if (v0 + 400 == v4) {
    return *(unsigned int *)&v4[4];
  }
  sub_1000174C8(&v4[48], *((uint64_t **)v0 + 56), *((uint64_t **)v0 + 57), (uint64_t)(*((void *)v0 + 57) - *((void *)v0 + 56)) >> 3);
  uint64_t v2 = *(unsigned int *)&v4[4];
  if (*(void *)&v4[48])
  {
    *(void *)&v4[56] = *(void *)&v4[48];
    operator delete(*(void **)&v4[48]);
  }
  return v2;
}

void sub_100016E44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100016E60()
{
  v5[0] = 0;
  *(_OWORD *)&void v5[4] = xmmword_1000B2340;
  *(_OWORD *)&v5[20] = xmmword_1000B2350;
  *(void *)&v5[36] = &_mh_execute_header;
  memset(&v5[44], 0, 24);
  int v6 = 0;
  v0 = sub_10006B474();
  long long v1 = *((_OWORD *)v0 + 26);
  *(_OWORD *)int v5 = *((_OWORD *)v0 + 25);
  *(_OWORD *)&v5[16] = v1;
  *(_OWORD *)&v5[32] = *((_OWORD *)v0 + 27);
  if (v0 + 400 != v5) {
    sub_1000174C8(&v5[48], *((uint64_t **)v0 + 56), *((uint64_t **)v0 + 57), (uint64_t)(*((void *)v0 + 57) - *((void *)v0 + 56)) >> 3);
  }
  if (((1 << v5[28]) & 0x1004010840100401) != 0) {
    unsigned int v2 = *(_DWORD *)&v5[28];
  }
  else {
    unsigned int v2 = 30;
  }
  if (*(_DWORD *)&v5[28] <= 0x3Cu) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 30;
  }
  if (*(void *)&v5[48])
  {
    *(void *)&v5[56] = *(void *)&v5[48];
    operator delete(*(void **)&v5[48]);
  }
  return v3;
}

void sub_100016F3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100016F58()
{
  v5[0] = 0;
  *(_OWORD *)&void v5[4] = xmmword_1000B2340;
  *(_OWORD *)&v5[20] = xmmword_1000B2350;
  *(void *)&v5[36] = &_mh_execute_header;
  memset(&v5[44], 0, 24);
  int v6 = 0;
  v0 = sub_10006B474();
  long long v1 = *((_OWORD *)v0 + 26);
  *(_OWORD *)int v5 = *((_OWORD *)v0 + 25);
  *(_OWORD *)&v5[16] = v1;
  *(_OWORD *)&v5[32] = *((_OWORD *)v0 + 27);
  if (v0 + 400 != v5) {
    sub_1000174C8(&v5[48], *((uint64_t **)v0 + 56), *((uint64_t **)v0 + 57), (uint64_t)(*((void *)v0 + 57) - *((void *)v0 + 56)) >> 3);
  }
  if (((1 << v5[32]) & 0x1004010840100401) != 0) {
    unsigned int v2 = *(_DWORD *)&v5[32];
  }
  else {
    unsigned int v2 = 20;
  }
  if (*(_DWORD *)&v5[32] <= 0x3Cu) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 20;
  }
  if (*(void *)&v5[48])
  {
    *(void *)&v5[56] = *(void *)&v5[48];
    operator delete(*(void **)&v5[48]);
  }
  return v3;
}

void sub_100017034(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100017050()
{
  v6[0] = 0;
  *(_OWORD *)&v6[4] = xmmword_1000B2340;
  *(_OWORD *)&v6[20] = xmmword_1000B2350;
  *(void *)&v6[36] = &_mh_execute_header;
  memset(&v6[44], 0, 24);
  int v7 = 0;
  v0 = sub_10006B474();
  long long v1 = *((_OWORD *)v0 + 26);
  *(_OWORD *)int v6 = *((_OWORD *)v0 + 25);
  *(_OWORD *)&v6[16] = v1;
  *(_OWORD *)&v6[32] = *((_OWORD *)v0 + 27);
  if (v0 + 400 != v6) {
    sub_1000174C8(&v6[48], *((uint64_t **)v0 + 56), *((uint64_t **)v0 + 57), (uint64_t)(*((void *)v0 + 57) - *((void *)v0 + 56)) >> 3);
  }
  unsigned int v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289283;
    __int16 v9 = 2082;
    __int16 v10 = "";
    __int16 v11 = 1025;
    int v12 = *(_DWORD *)&v6[36];
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleUtility,getCBAdvertiseRate\", \"bleCBAdvertiseRate\":%{private}d}", (uint8_t *)&buf, 0x18u);
  }
  if (((1 << v6[36]) & 0x1004250040108401) != 0) {
    unsigned int v3 = *(_DWORD *)&v6[36];
  }
  else {
    unsigned int v3 = 60;
  }
  if (*(_DWORD *)&v6[36] <= 0x3Cu) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 60;
  }
  if (*(void *)&v6[48])
  {
    *(void *)&v6[56] = *(void *)&v6[48];
    operator delete(*(void **)&v6[48]);
  }
  return v4;
}

void sub_1000171CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1000171E8()
{
  v5[0] = 0;
  *(_OWORD *)&void v5[4] = xmmword_1000B2340;
  *(_OWORD *)&v5[20] = xmmword_1000B2350;
  *(void *)&v5[36] = &_mh_execute_header;
  memset(&v5[44], 0, 24);
  int v6 = 0;
  v0 = sub_10006B474();
  long long v1 = *((_OWORD *)v0 + 26);
  *(_OWORD *)int v5 = *((_OWORD *)v0 + 25);
  *(_OWORD *)&v5[16] = v1;
  *(_OWORD *)&v5[32] = *((_OWORD *)v0 + 27);
  if (v0 + 400 != v5) {
    sub_1000174C8(&v5[48], *((uint64_t **)v0 + 56), *((uint64_t **)v0 + 57), (uint64_t)(*((void *)v0 + 57) - *((void *)v0 + 56)) >> 3);
  }
  unsigned int v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289283;
    __int16 v8 = 2082;
    __int16 v9 = "";
    __int16 v10 = 1025;
    int v11 = *(_DWORD *)&v5[40];
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleUtility,getBleAlertVersion\", \"bleDataVersion\":%{private}d}", (uint8_t *)&buf, 0x18u);
  }
  int v3 = *(_DWORD *)&v5[40];
  if (*(void *)&v5[48])
  {
    *(void *)&v5[56] = *(void *)&v5[48];
    operator delete(*(void **)&v5[48]);
  }
  return v3 == 1;
}

void sub_10001733C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100017358()
{
  v5[0] = 0;
  *(_OWORD *)&void v5[4] = xmmword_1000B2340;
  *(_OWORD *)&v5[20] = xmmword_1000B2350;
  *(void *)&v5[36] = &_mh_execute_header;
  memset(&v5[44], 0, 24);
  int v6 = 0;
  v0 = sub_10006B474();
  long long v1 = *((_OWORD *)v0 + 26);
  *(_OWORD *)int v5 = *((_OWORD *)v0 + 25);
  *(_OWORD *)&v5[16] = v1;
  *(_OWORD *)&v5[32] = *((_OWORD *)v0 + 27);
  if (v0 + 400 != v5) {
    sub_1000174C8(&v5[48], *((uint64_t **)v0 + 56), *((uint64_t **)v0 + 57), (uint64_t)(*((void *)v0 + 57) - *((void *)v0 + 56)) >> 3);
  }
  unsigned int v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289283;
    __int16 v8 = 2082;
    __int16 v9 = "";
    __int16 v10 = 1025;
    int v11 = *(_DWORD *)&v5[44];
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleUtility,getBleAdvertisementTimePrecision\", \"bleAdvertisementTimePrecisionInMSec\":%{private}d}", (uint8_t *)&buf, 0x18u);
  }
  unsigned int v3 = *(_DWORD *)&v5[44];
  if (*(void *)&v5[48])
  {
    *(void *)&v5[56] = *(void *)&v5[48];
    operator delete(*(void **)&v5[48]);
  }
  if (v3 <= 1) {
    return 1;
  }
  else {
    return v3;
  }
}

void sub_1000174AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1000174C8(void *a1, uint64_t *a2, uint64_t *a3, unint64_t a4)
{
  int v6 = a2;
  uint64_t v8 = a1[2];
  __n128 result = (char *)*a1;
  if (a4 <= (v8 - (uint64_t)result) >> 3)
  {
    double v18 = (char *)a1[1];
    uint64_t v13 = a1 + 1;
    int v12 = v18;
    unint64_t v19 = (v18 - result) >> 3;
    if (v19 >= a4)
    {
      long long v26 = result;
      if (a2 != a3)
      {
        uint64_t v27 = result;
        do
        {
          uint64_t v28 = *v6++;
          *(void *)uint64_t v27 = v28;
          v27 += 8;
          v26 += 8;
        }
        while (v6 != a3);
      }
      unint64_t v17 = (char *)(v26 - result);
      int v12 = result;
    }
    else
    {
      uint64_t v20 = &a2[v19];
      if (v12 != result)
      {
        uint64_t v21 = 8 * v19;
        do
        {
          uint64_t v22 = *v6++;
          *(void *)__n128 result = v22;
          result += 8;
          v21 -= 8;
        }
        while (v21);
      }
      uint64_t v23 = v12;
      if (v20 != a3)
      {
        uint64_t v24 = v12;
        do
        {
          uint64_t v25 = *v20++;
          *(void *)uint64_t v24 = v25;
          v24 += 8;
          v23 += 8;
        }
        while (v20 != a3);
      }
      unint64_t v17 = (char *)(v23 - v12);
    }
  }
  else
  {
    if (result)
    {
      a1[1] = result;
      operator delete(result);
      uint64_t v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (a4 >> 61) {
      sub_1000050E8();
    }
    uint64_t v10 = v8 >> 2;
    if (v8 >> 2 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    __n128 result = sub_10001761C(a1, v11);
    long long v14 = (char *)a1[1];
    uint64_t v13 = a1 + 1;
    int v12 = v14;
    long long v15 = v14;
    if (v6 != a3)
    {
      long long v15 = v12;
      do
      {
        uint64_t v16 = *v6++;
        *(void *)long long v15 = v16;
        v15 += 8;
      }
      while (v6 != a3);
    }
    unint64_t v17 = (char *)(v15 - v12);
  }
  *uint64_t v13 = &v17[(void)v12];
  return result;
}

char *sub_10001761C(void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_1000050E8();
  }
  __n128 result = (char *)sub_100017660((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void *sub_100017660(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_100004E00();
  }
  return operator new(8 * a2);
}

long long *sub_100017698()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_100106810, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_100106810))
  {
    unk_100106828 = 0u;
    xmmword_100106818 = 0u;
    dword_100106838 = 1065353216;
    __cxa_atexit((void (*)(void *))sub_100017720, &xmmword_100106818, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_100106810);
  }
  return &xmmword_100106818;
}

uint64_t sub_100017720(uint64_t a1)
{
  unsigned int v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      unsigned int v3 = (void *)*v2;
      sub_10001802C(v2 + 3);
      operator delete(v2);
      unsigned int v2 = v3;
    }
    while (v3);
  }
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void sub_100017780(void *a1, void *a2)
{
  id v3 = a2;
  int int64 = xpc_dictionary_get_int64(v3, "TestMessageType");
  int v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289282;
    __int16 v11 = 2082;
    int v12 = "";
    __int16 v13 = 1026;
    int v14 = int64;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saTestRouter,processInputs\", \"message\":%{public}d}", (uint8_t *)&buf, 0x18u);
  }
  int v6 = sub_100017EE0(a1, int64);
  if (v6)
  {
    int v7 = v6;
    uint64_t v8 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t buf = 68289282;
      __int16 v11 = 2082;
      int v12 = "";
      __int16 v13 = 1026;
      int v14 = int64;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saTestRouter,processInputs\", \"message\":%{public}d}", (uint8_t *)&buf, 0x18u);
    }
    sub_100017F94((uint64_t)&buf, (uint64_t)(v7 + 3));
    id v9 = v3;
    if (!v15) {
      sub_100005520();
    }
    (*(void (**)(uint64_t, id *))(*(void *)v15 + 48))(v15, &v9);

    sub_10001802C(&buf);
  }
}

void sub_100017948(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_10001797C(uint64_t a1, int a2, uint64_t a3)
{
  int v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289282;
    int v42 = 0;
    *(_WORD *)double v43 = 2082;
    *(void *)&v43[2] = "";
    __int16 v44 = 1026;
    int v45 = a2;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saTestRouter,registerForInput\", \"message\":%{public}d}", buf, 0x18u);
  }
  __n128 result = sub_100017EE0((void *)a1, a2);
  if (result) {
    return result;
  }
  *(_DWORD *)uint64_t buf = a2;
  sub_100017F94((uint64_t)v43, a3);
  int v8 = *(_DWORD *)buf;
  unint64_t v9 = *(int *)buf;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      a3 = *(int *)buf;
      if (v10 <= *(int *)buf) {
        a3 = *(int *)buf % v10;
      }
    }
    else
    {
      a3 = (v10 - 1) & *(int *)buf;
    }
    int v12 = *(uint64_t ***)(*(void *)a1 + 8 * a3);
    if (v12)
    {
      for (uint64_t i = *v12; i; uint64_t i = (uint64_t *)*i)
      {
        unint64_t v14 = i[1];
        if (v14 == *(int *)buf)
        {
          if (*((_DWORD *)i + 4) == *(_DWORD *)buf) {
            return sub_10001802C(v43);
          }
        }
        else
        {
          if (v11.u32[0] > 1uLL)
          {
            if (v14 >= v10) {
              v14 %= v10;
            }
          }
          else
          {
            v14 &= v10 - 1;
          }
          if (v14 != a3) {
            break;
          }
        }
      }
    }
  }
  uint64_t v15 = operator new(0x38uLL);
  uint64_t v16 = (void *)(a1 + 16);
  v39[0] = v15;
  v39[1] = a1 + 16;
  void *v15 = 0;
  v15[1] = v9;
  *((_DWORD *)v15 + 4) = v8;
  if (v46)
  {
    if (v46 == v43)
    {
      void v15[6] = v15 + 3;
      (*(void (**)(unsigned char *))(*(void *)v43 + 24))(v43);
      goto LABEL_27;
    }
    unint64_t v17 = &v46;
    void v15[6] = v46;
  }
  else
  {
    unint64_t v17 = v15 + 6;
  }
  *unint64_t v17 = 0;
LABEL_27:
  char v40 = 1;
  float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v19 = *(float *)(a1 + 32);
  if (!v10 || (float)(v19 * (float)v10) < v18)
  {
    BOOL v20 = 1;
    if (v10 >= 3) {
      BOOL v20 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v21 = v20 | (2 * v10);
    unint64_t v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22) {
      int8x8_t prime = (int8x8_t)v22;
    }
    else {
      int8x8_t prime = (int8x8_t)v21;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
    }
    unint64_t v10 = *(void *)(a1 + 8);
    if (*(void *)&prime > v10) {
      goto LABEL_39;
    }
    if (*(void *)&prime < v10)
    {
      unint64_t v30 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v10 < 3 || (uint8x8_t v31 = (uint8x8_t)vcnt_s8((int8x8_t)v10), v31.i16[0] = vaddlv_u8(v31), v31.u32[0] > 1uLL))
      {
        unint64_t v30 = std::__next_prime(v30);
      }
      else
      {
        uint64_t v32 = 1 << -(char)__clz(v30 - 1);
        if (v30 >= 2) {
          unint64_t v30 = v32;
        }
      }
      if (*(void *)&prime <= v30) {
        int8x8_t prime = (int8x8_t)v30;
      }
      if (*(void *)&prime >= v10)
      {
        unint64_t v10 = *(void *)(a1 + 8);
      }
      else
      {
        if (prime)
        {
LABEL_39:
          if (*(void *)&prime >> 61) {
            sub_100004E00();
          }
          uint64_t v24 = operator new(8 * *(void *)&prime);
          uint64_t v25 = *(void **)a1;
          *(void *)a1 = v24;
          if (v25) {
            operator delete(v25);
          }
          uint64_t v26 = 0;
          *(int8x8_t *)(a1 + 8) = prime;
          do
            *(void *)(*(void *)a1 + 8 * v26++) = 0;
          while (*(void *)&prime != v26);
          uint64_t v27 = (void *)*v16;
          if (*v16)
          {
            unint64_t v28 = v27[1];
            uint8x8_t v29 = (uint8x8_t)vcnt_s8(prime);
            v29.i16[0] = vaddlv_u8(v29);
            if (v29.u32[0] > 1uLL)
            {
              if (v28 >= *(void *)&prime) {
                v28 %= *(void *)&prime;
              }
            }
            else
            {
              v28 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)a1 + 8 * v28) = v16;
            unint64_t v33 = (void *)*v27;
            if (*v27)
            {
              do
              {
                unint64_t v34 = v33[1];
                if (v29.u32[0] > 1uLL)
                {
                  if (v34 >= *(void *)&prime) {
                    v34 %= *(void *)&prime;
                  }
                }
                else
                {
                  v34 &= *(void *)&prime - 1;
                }
                if (v34 != v28)
                {
                  if (!*(void *)(*(void *)a1 + 8 * v34))
                  {
                    *(void *)(*(void *)a1 + 8 * v34) = v27;
                    goto LABEL_64;
                  }
                  void *v27 = *v33;
                  void *v33 = **(void **)(*(void *)a1 + 8 * v34);
                  **(void **)(*(void *)a1 + 8 * v34) = v33;
                  unint64_t v33 = v27;
                }
                unint64_t v34 = v28;
LABEL_64:
                uint64_t v27 = v33;
                unint64_t v33 = (void *)*v33;
                unint64_t v28 = v34;
              }
              while (v33);
            }
          }
          unint64_t v10 = (unint64_t)prime;
          goto LABEL_68;
        }
        unint64_t v38 = *(void **)a1;
        *(void *)a1 = 0;
        if (v38) {
          operator delete(v38);
        }
        unint64_t v10 = 0;
        *(void *)(a1 + 8) = 0;
      }
    }
LABEL_68:
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v10 <= v9) {
        a3 = v9 % v10;
      }
      else {
        a3 = v9;
      }
    }
    else
    {
      a3 = (v10 - 1) & v9;
    }
  }
  unint64_t v35 = *(void **)(*(void *)a1 + 8 * a3);
  uint64_t v36 = v39[0];
  if (v35)
  {
    *(void *)v39[0] = *v35;
  }
  else
  {
    *(void *)v39[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v36;
    *(void *)(*(void *)a1 + 8 * a3) = v16;
    if (!*(void *)v36) {
      goto LABEL_82;
    }
    unint64_t v37 = *(void *)(*(void *)v36 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v37 >= v10) {
        v37 %= v10;
      }
    }
    else
    {
      v37 &= v10 - 1;
    }
    unint64_t v35 = (void *)(*(void *)a1 + 8 * v37);
  }
  void *v35 = v36;
LABEL_82:
  v39[0] = 0;
  ++*(void *)(a1 + 24);
  sub_1000180B0((uint64_t)v39);
  return sub_10001802C(v43);
}

void sub_100017EA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2) {
    sub_100004CA4(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_100017EE0(void *a1, int a2)
{
  unint64_t v2 = a1[1];
  if (!v2) {
    return 0;
  }
  uint8x8_t v3 = (uint8x8_t)vcnt_s8((int8x8_t)v2);
  v3.i16[0] = vaddlv_u8(v3);
  if (v3.u32[0] > 1uLL)
  {
    unint64_t v4 = a2;
    if (v2 <= a2) {
      unint64_t v4 = a2 % v2;
    }
  }
  else
  {
    unint64_t v4 = (v2 - 1) & a2;
  }
  int v5 = *(uint64_t ***)(*a1 + 8 * v4);
  if (!v5) {
    return 0;
  }
  for (__n128 result = *v5; result; __n128 result = (uint64_t *)*result)
  {
    unint64_t v7 = result[1];
    if (v7 == a2)
    {
      if (*((_DWORD *)result + 4) == a2) {
        return result;
      }
    }
    else
    {
      if (v3.u32[0] > 1uLL)
      {
        if (v7 >= v2) {
          v7 %= v2;
        }
      }
      else
      {
        v7 &= v2 - 1;
      }
      if (v7 != v4) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100017F94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_10001802C(void *a1)
{
  unint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1000180B0(uint64_t a1)
{
  long long v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_10001802C(v1 + 3);
    }
    operator delete(v1);
  }
}

void sub_100018108(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    uint64_t v2 = a1;
    do
    {
      sub_10001D54C((uint64_t)&v23, v2);
      uint64_t v20 = v2;
      uint64_t v3 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        unint64_t v4 = &v24;
        if (v25 < 0) {
          unint64_t v4 = v24;
        }
        int v5 = &v26;
        if (v27 < 0) {
          int v5 = v26;
        }
        int v6 = (const char *)v30;
        if (!v30) {
          int v6 = "";
        }
        unint64_t v7 = &v30;
        if (v31 < 0) {
          unint64_t v7 = (void **)v6;
        }
        *(_DWORD *)uint64_t buf = 68293379;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v50 = 2082;
        double v51 = "";
        __int16 v52 = 1025;
        *(_DWORD *)int v53 = v23;
        *(_WORD *)&v53[4] = 2081;
        *(void *)&v53[6] = v4;
        __int16 v54 = 2081;
        double v55 = v5;
        __int16 v56 = 2049;
        uint64_t v57 = v32;
        __int16 v58 = 2049;
        uint64_t v59 = v33;
        __int16 v60 = 2049;
        uint64_t v61 = v34;
        __int16 v62 = 2049;
        uint64_t v63 = v35;
        __int16 v64 = 2049;
        uint64_t v65 = v36;
        __int16 v66 = 2049;
        uint64_t v67 = v37;
        __int16 v68 = 2049;
        uint64_t v69 = v38;
        __int16 v70 = 2049;
        uint64_t v71 = v39;
        __int16 v72 = 2049;
        uint64_t v73 = v40;
        __int16 v74 = 2049;
        uint64_t v75 = v41;
        __int16 v76 = 1025;
        int v77 = v42;
        __int16 v78 = 2049;
        uint64_t v79 = (v44 - (unsigned char *)v43) >> 2;
        __int16 v80 = 2049;
        unint64_t v81 = 0xAAAAAAAAAAAAAAABLL * (((char *)v48 - v47) >> 3);
        __int16 v82 = 2081;
        uint64_t v83 = v7;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,printLBChannelInformation\", \"GridOrTileId\":%{private}d, \"region\":%{private, location:escape_only}s, \"country\":%{private, location:escape_only}s, \"swStartingLat\":\"%{private}0.3f\", \"swStartingLon\":\"%{private}0.3f\", \"gridLatOffset\":\"%{private}0.3f\", \"gridLonOffset\":\"%{private}0.3f\", \"swLat\":\"%{private}0.3f\", \"swLon\":\"%{private}0.3f\", \"neLat\":\"%{private}0.3f\", \"neLon\":\"%{private}0.3f\", \"refreshRate\":\"%{private}0.3f\", \"gridSizeInDegree\":\"%{private}0.3f\", \"gridZoomLevel\":%{private}d, \"NumberOfUnSupportedGrids\":%{private}lu, \"NumberOfNonDitheringChannels\":%{private}lu, \"livabilityChannelPrefix\":%{private, location:escape_only}s}", buf, 0xB4u);
      }
      unint64_t v9 = (long long *)v46[0];
      int v8 = (long long *)v46[1];
      while (v9 != v8)
      {
        if (*((char *)v9 + 23) < 0)
        {
          sub_100004CB8(__p, *(void **)v9, *((void *)v9 + 1));
        }
        else
        {
          long long v10 = *v9;
          uint64_t v22 = *((void *)v9 + 2);
          *(_OWORD *)long long __p = v10;
        }
        uint8x8_t v11 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          if (v22 >= 0) {
            int v12 = __p;
          }
          else {
            int v12 = (void **)__p[0];
          }
          *(_DWORD *)uint64_t buf = 68289283;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v50 = 2082;
          double v51 = "";
          __int16 v52 = 2081;
          *(void *)int v53 = v12;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,printLBChannelInformation\", \"dithChanName\":%{private, location:escape_only}s}", buf, 0x1Cu);
        }
        if (SHIBYTE(v22) < 0) {
          operator delete(__p[0]);
        }
        unint64_t v9 = (long long *)((char *)v9 + 24);
      }
      __int16 v13 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289282;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v50 = 2082;
        double v51 = "";
        __int16 v52 = 2050;
        *(void *)int v53 = v45;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,printLBChannelInformation\", \"ParticipationPercentageOfDitheringChannels\":\"%{public}0.3f\"}", buf, 0x1Cu);
        __int16 v13 = SALogObjectGeneral;
      }
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289283;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v50 = 2082;
        double v51 = "";
        __int16 v52 = 2049;
        *(void *)int v53 = 0xAAAAAAAAAAAAAAABLL * (((char *)v48 - v47) >> 3);
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,printLBChannelInformation\", \"NumberOfNonDitheringChannels\":%{private}lu}", buf, 0x1Cu);
      }
      uint64_t v15 = (long long *)v47;
      unint64_t v14 = v48;
      while (v15 != v14)
      {
        if (*((char *)v15 + 23) < 0)
        {
          sub_100004CB8(__p, *(void **)v15, *((void *)v15 + 1));
        }
        else
        {
          long long v16 = *v15;
          uint64_t v22 = *((void *)v15 + 2);
          *(_OWORD *)long long __p = v16;
        }
        unint64_t v17 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          if (v22 >= 0) {
            float v18 = __p;
          }
          else {
            float v18 = (void **)__p[0];
          }
          *(_DWORD *)uint64_t buf = 68289283;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v50 = 2082;
          double v51 = "";
          __int16 v52 = 2081;
          *(void *)int v53 = v18;
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,printLBChannelInformation\", \"nonDithChanName\":%{private, location:escape_only}s}", buf, 0x1Cu);
        }
        if (SHIBYTE(v22) < 0) {
          operator delete(__p[0]);
        }
        uint64_t v15 = (long long *)((char *)v15 + 24);
      }
      *(void *)uint64_t buf = &v47;
      sub_100005360((void ***)buf);
      *(void *)uint64_t buf = v46;
      sub_100005360((void ***)buf);
      if (v43)
      {
        __int16 v44 = v43;
        operator delete(v43);
      }
      if (v31 < 0) {
        operator delete(v30);
      }
      if (v29 < 0) {
        operator delete(v28);
      }
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v25 < 0) {
        operator delete(v24);
      }
      uint64_t v2 = v20 + 280;
    }
    while (v20 + 280 != a2);
  }
}

void sub_100018604(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_100018624(uint64_t a1, void *a2, int64x2_t *a3, std::string *a4)
{
  id v252 = a2;
  *(_DWORD *)v270 = 0;
  long long __p = 0;
  v275 = 0;
  memset(&v270[8], 0, 112);
  memset(v271, 0, sizeof(v271));
  long long v272 = 0u;
  unsigned int v273 = 0;
  uint64_t v276 = 0;
  uint64_t v277 = 0x4059000000000000;
  v278 = 0;
  v279 = 0;
  unint64_t v280 = 0;
  uint64_t v281 = 0x4059000000000000;
  v284[0] = 0;
  v282 = 0;
  v283 = 0;
  int v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,readRegionConfigFromDefaults\"}", buf, 0x12u);
  }
  int v6 = sub_10003E368();
  long long __dst = a4;
  if ((sub_10003E0D0((uint64_t)v6, @"Region", (uint64_t)&v270[8]) & 1) == 0)
  {
    uint64_t v24 = SALogObjectGeneral;
    char v23 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_54;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read region\"}";
LABEL_53:
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, v25, buf, 0x12u);
    char v23 = 0;
    goto LABEL_54;
  }
  unint64_t v7 = sub_10003E368();
  if ((sub_10003E0D0((uint64_t)v7, @"Country", (uint64_t)&v270[32]) & 1) == 0)
  {
    uint64_t v24 = SALogObjectGeneral;
    char v23 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_54;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read Country\"}";
    goto LABEL_53;
  }
  int v8 = sub_10003E368();
  if ((sub_10003E0D0((uint64_t)v8, @"LivabilityChannelPrefix", (uint64_t)&v270[80]) & 1) == 0)
  {
    uint64_t v24 = SALogObjectGeneral;
    char v23 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_54;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read LivabilityPrefix\"}";
    goto LABEL_53;
  }
  unint64_t v9 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v9, @"swStartingLat", &v270[104]) & 1) == 0)
  {
    uint64_t v24 = SALogObjectGeneral;
    char v23 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_54;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read swStartingLat\"}";
    goto LABEL_53;
  }
  long long v10 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v10, @"swStartingLon", &v270[112]) & 1) == 0)
  {
    uint64_t v24 = SALogObjectGeneral;
    char v23 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_54;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read swStartingLon\"}";
    goto LABEL_53;
  }
  uint8x8_t v11 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v11, @"gridLatOffset", v271) & 1) == 0)
  {
    uint64_t v24 = SALogObjectGeneral;
    char v23 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_54;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read reggridLatOffsetion\"}";
    goto LABEL_53;
  }
  int v12 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v12, @"gridLonOffset", (void *)v271 + 1) & 1) == 0)
  {
    uint64_t v24 = SALogObjectGeneral;
    char v23 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_54;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read gridLonOffset\"}";
    goto LABEL_53;
  }
  __int16 v13 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v13, @"swLat", &v271[1]) & 1) == 0)
  {
    uint64_t v24 = SALogObjectGeneral;
    char v23 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_54;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read swLat\"}";
    goto LABEL_53;
  }
  unint64_t v14 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v14, @"swLon", (void *)&v271[1] + 1) & 1) == 0)
  {
    uint64_t v24 = SALogObjectGeneral;
    char v23 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_54;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read swLon\"}";
    goto LABEL_53;
  }
  uint64_t v15 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v15, @"neLat", &v271[2]) & 1) == 0)
  {
    uint64_t v24 = SALogObjectGeneral;
    char v23 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_54;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read neLat\"}";
    goto LABEL_53;
  }
  long long v16 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v16, @"neLon", (void *)&v271[2] + 1) & 1) == 0)
  {
    uint64_t v24 = SALogObjectGeneral;
    char v23 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_54;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read neLon\"}";
    goto LABEL_53;
  }
  unint64_t v17 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v17, @"gridSizeInDegree", (void *)&v272 + 1) & 1) == 0)
  {
    uint64_t v24 = SALogObjectGeneral;
    char v23 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_54;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read gridSizeInDegree\"}";
    goto LABEL_53;
  }
  float v18 = sub_10003E368();
  if ((sub_10003DFC4((uint64_t)v18, @"gridZoomLevel", &v273) & 1) == 0)
  {
    uint64_t v24 = SALogObjectGeneral;
    char v23 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_54;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read gridZoomLevel\"}";
    goto LABEL_53;
  }
  float v19 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v19, @"refreshRate", &v272) & 1) == 0)
  {
    uint64_t v24 = SALogObjectGeneral;
    char v23 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_54;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read refreshRate\"}";
    goto LABEL_53;
  }
  uint64_t v20 = sub_10003E368();
  if ((sub_10003E0D0((uint64_t)v20, @"ChannelTopic", (uint64_t)&v270[56]) & 1) == 0)
  {
    uint64_t v24 = SALogObjectGeneral;
    char v23 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_54;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read ChannelTopic\"}";
    goto LABEL_53;
  }
  unint64_t v21 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v21, @"ParticipationPercentage", &v281) & 1) == 0)
  {
    uint64_t v24 = SALogObjectGeneral;
    char v23 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_54;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read ParticipationPercentage\"}";
    goto LABEL_53;
  }
  memset(buf, 0, 24);
  uint64_t v22 = sub_10003E368();
  char v23 = sub_10003E0D0((uint64_t)v22, @"ChannelName", (uint64_t)buf);
  if (v23)
  {
    sub_10001D258((uint64_t *)&v282, (long long *)buf);
    sub_10001D298(a3, (uint64_t)v270);
    sub_100018108(a3->i64[0], a3->i64[1]);
  }
  else
  {
    v250 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)v269 = 68289026;
      *(_DWORD *)&v269[4] = 0;
      *(_WORD *)&v269[8] = 2082;
      *(void *)&v269[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v250, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read ChannelName\"}", v269, 0x12u);
    }
  }
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
LABEL_54:
  *(void *)uint64_t buf = &v282;
  sub_100005360((void ***)buf);
  *(void *)uint64_t buf = &v278;
  sub_100005360((void ***)buf);
  if (__p)
  {
    v275 = __p;
    operator delete(__p);
  }
  if ((v270[103] & 0x80000000) != 0) {
    operator delete(*(void **)&v270[80]);
  }
  if ((v270[79] & 0x80000000) != 0) {
    operator delete(*(void **)&v270[56]);
  }
  if ((v270[55] & 0x80000000) != 0) {
    operator delete(*(void **)&v270[32]);
  }
  if ((v270[31] & 0x80000000) == 0)
  {
    if (v23) {
      goto LABEL_64;
    }
LABEL_82:
    __int16 v44 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_111;
    }
    *(_DWORD *)v270 = 68289026;
    *(_DWORD *)&v270[4] = 0;
    *(_WORD *)&v270[8] = 2082;
    *(void *)&v270[10] = "";
    uint64_t v45 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,regionConfig from defaults failed\"}";
    goto LABEL_110;
  }
  operator delete(*(void **)&v270[8]);
  if ((v23 & 1) == 0) {
    goto LABEL_82;
  }
LABEL_64:
  uint64_t v26 = sub_10003E368();
  if ((sub_10003E0D0((uint64_t)v26, @"English", (uint64_t)__dst) & 1) == 0)
  {
    uint64_t v46 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_108;
    }
    *(_DWORD *)v270 = 68289026;
    *(_DWORD *)&v270[4] = 0;
    *(_WORD *)&v270[8] = 2082;
    *(void *)&v270[10] = "";
    int v47 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read English\"}";
LABEL_106:
    double v48 = v46;
LABEL_107:
    _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, v47, v270, 0x12u);
    goto LABEL_108;
  }
  char v27 = sub_10003E368();
  if ((sub_10003E0D0((uint64_t)v27, @"Spanish", (uint64_t)&__dst[1]) & 1) == 0)
  {
    uint64_t v46 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_108;
    }
    *(_DWORD *)v270 = 68289026;
    *(_DWORD *)&v270[4] = 0;
    *(_WORD *)&v270[8] = 2082;
    *(void *)&v270[10] = "";
    int v47 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read Spanish\"}";
    goto LABEL_106;
  }
  unint64_t v28 = sub_10003E368();
  if ((sub_10003E0D0((uint64_t)v28, @"SourceString", (uint64_t)&__dst[2]) & 1) == 0)
  {
    uint64_t v46 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_108;
    }
    *(_DWORD *)v270 = 68289026;
    *(_DWORD *)&v270[4] = 0;
    *(_WORD *)&v270[8] = 2082;
    *(void *)&v270[10] = "";
    int v47 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read SourceString\"}";
    goto LABEL_106;
  }
  char v29 = sub_10003E368();
  if ((sub_10003E0D0((uint64_t)v29, @"PerformanceTestSourceString", (uint64_t)&__dst[3]) & 1) == 0)
  {
    uint64_t v46 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_108;
    }
    *(_DWORD *)v270 = 68289026;
    *(_DWORD *)&v270[4] = 0;
    *(_WORD *)&v270[8] = 2082;
    *(void *)&v270[10] = "";
    int v47 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read PerformanceTestSourceString\"}";
    goto LABEL_106;
  }
  unint64_t v30 = sub_10003E368();
  if ((sub_10003E0D0((uint64_t)v30, @"FollowUpSourceString", (uint64_t)&__dst[4]) & 1) == 0)
  {
    uint64_t v46 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_108;
    }
    *(_DWORD *)v270 = 68289026;
    *(_DWORD *)&v270[4] = 0;
    *(_WORD *)&v270[8] = 2082;
    *(void *)&v270[10] = "";
    int v47 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read FollowUpSourceString\"}";
    goto LABEL_106;
  }
  char v31 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v31, @"ThresholdMMI", __dst[7].__r_.__value_.__r.__words) & 1) == 0)
  {
    uint64_t v46 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_108;
    }
    *(_DWORD *)v270 = 68289026;
    *(_DWORD *)&v270[4] = 0;
    *(_WORD *)&v270[8] = 2082;
    *(void *)&v270[10] = "";
    int v47 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read ThresholdMMI\"}";
    goto LABEL_106;
  }
  uint64_t v32 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v32, @"ThresholdTimeBetweenAlertsSec", &__dst[8].__r_.__value_.__l.__size_) & 1) == 0)
  {
    uint64_t v46 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_108;
    }
    *(_DWORD *)v270 = 68289026;
    *(_DWORD *)&v270[4] = 0;
    *(_WORD *)&v270[8] = 2082;
    *(void *)&v270[10] = "";
    int v47 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read ThresholdTimeBetweenAlertsSec\"}";
    goto LABEL_106;
  }
  uint64_t v33 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v33, @"ThresholdMagnitude", &__dst[7].__r_.__value_.__l.__size_) & 1) == 0)
  {
    uint64_t v46 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_108;
    }
    *(_DWORD *)v270 = 68289026;
    *(_DWORD *)&v270[4] = 0;
    *(_WORD *)&v270[8] = 2082;
    *(void *)&v270[10] = "";
    int v47 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read ThresholdMagnitude\"}";
    goto LABEL_106;
  }
  uint64_t v34 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v34, @"FollowUpMessageValidTime", __dst[9].__r_.__value_.__r.__words) & 1) == 0)
  {
    uint64_t v46 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_108;
    }
    *(_DWORD *)v270 = 68289026;
    *(_DWORD *)&v270[4] = 0;
    *(_WORD *)&v270[8] = 2082;
    *(void *)&v270[10] = "";
    int v47 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read FollowUpMessageValidTime\"}";
    goto LABEL_106;
  }
  uint64_t v35 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v35, @"PhoneChannelSubHysteresisSeconds", __dst[8].__r_.__value_.__r.__words) & 1) == 0)
  {
    uint64_t v46 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_108;
    }
    *(_DWORD *)v270 = 68289026;
    *(_DWORD *)&v270[4] = 0;
    *(_WORD *)&v270[8] = 2082;
    *(void *)&v270[10] = "";
    int v47 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read PhoneChannelSubHysteresisSeconds\"}";
    goto LABEL_106;
  }
  uint64_t v36 = sub_10003E368();
  if ((sub_10003E214((uint64_t)v36, @"WatchChannelSubHysteresisSeconds", &__dst[7].__r_.__value_.__r.__words[2]) & 1) == 0)
  {
    uint64_t v46 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)v270 = 68289026;
      *(_DWORD *)&v270[4] = 0;
      *(_WORD *)&v270[8] = 2082;
      *(void *)&v270[10] = "";
      int v47 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read WatchChannelSubHysteresisSeconds\"}";
      goto LABEL_106;
    }
LABEL_108:
    __int16 v44 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_111;
    }
    *(_DWORD *)v270 = 68289026;
    *(_DWORD *)&v270[4] = 0;
    *(_WORD *)&v270[8] = 2082;
    *(void *)&v270[10] = "";
    uint64_t v45 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,alertConfig from defaults failed\"}";
LABEL_110:
    _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, v45, v270, 0x12u);
LABEL_111:
    unsigned int v268 = 0;
    id v253 = v252;
    if (v253)
    {
      double v49 = sub_10006B474();
      id v267 = 0;
      sub_10006D054((uint64_t)v49, v253, @"SafetyAlertCoverageDetails_v1", &v268, &v267);
      id v255 = v267;
      __int16 v50 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)v270 = 68289282;
        *(_DWORD *)&v270[4] = 0;
        *(_WORD *)&v270[8] = 2082;
        *(void *)&v270[10] = "";
        *(_WORD *)&v270[18] = 2050;
        *(void *)&v270[20] = v268;
        _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,regionSize,size\", \"regionSize\":%{public}lu}", v270, 0x1Cu);
      }
      if (v268)
      {
        uint64_t v52 = 0;
        *(void *)&long long v51 = 68289026;
        long long v251 = v51;
        do
        {
          *(_DWORD *)v270 = 0;
          v275 = 0;
          uint64_t v276 = 0;
          long long __p = 0;
          memset(&v270[8], 0, 112);
          memset(v271, 0, sizeof(v271));
          long long v272 = 0u;
          unsigned int v273 = 0;
          v279 = 0;
          unint64_t v280 = 0;
          v278 = 0;
          uint64_t v277 = 0x4059000000000000;
          uint64_t v281 = 0x4059000000000000;
          v283 = 0;
          v284[0] = 0;
          v282 = 0;
          uint64_t v257 = v52;
          int v53 = [v255 objectAtIndex:v251];
          if (v53 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
          {
            if ((v270[31] & 0x80000000) != 0) {
              operator delete(*(void **)&v270[8]);
            }
            memset(&v270[8], 0, 24);
            __int16 v54 = [v53 objectForKey:@"Region"];
            v258 = v53;
            if (v54)
            {
              objc_opt_class();
              if (objc_opt_isKindOfClass())
              {
                sub_10001D4D0(v54, buf);
                if ((v270[31] & 0x80000000) != 0) {
                  operator delete(*(void **)&v270[8]);
                }
                *(_OWORD *)&v270[8] = *(_OWORD *)buf;
                *(void *)&v270[24] = *(void *)&buf[16];
              }
            }

            if ((v270[55] & 0x80000000) != 0) {
              operator delete(*(void **)&v270[32]);
            }
            memset(&v270[32], 0, 24);
            double v55 = [v53 objectForKey:@"CountryOfRelevance"];
            if (v55)
            {
              objc_opt_class();
              if (objc_opt_isKindOfClass())
              {
                sub_10001D4D0(v55, buf);
                if ((v270[55] & 0x80000000) != 0) {
                  operator delete(*(void **)&v270[32]);
                }
                *(_OWORD *)&v270[32] = *(_OWORD *)buf;
                *(void *)&v270[48] = *(void *)&buf[16];
              }
            }

            __int16 v56 = sub_10006B474();
            sub_10006CDFC((uint64_t)v56, v53, @"StartingSWLat", &v270[104]);
            uint64_t v57 = sub_10006B474();
            sub_10006CDFC((uint64_t)v57, v53, @"StartingSWLon", &v270[112]);
            *(void *)&v271[0] = 0;
            __int16 v58 = sub_10006B474();
            sub_10006CDFC((uint64_t)v58, v53, @"gridLatOffset", v271);
            *((void *)&v271[0] + 1) = 0;
            uint64_t v59 = sub_10006B474();
            sub_10006CDFC((uint64_t)v59, v53, @"gridLonOffset", (void *)v271 + 1);
            __int16 v60 = sub_10006B474();
            sub_10006CDFC((uint64_t)v60, v53, @"SWLat", &v271[1]);
            uint64_t v61 = sub_10006B474();
            sub_10006CDFC((uint64_t)v61, v53, @"SWLon", (void *)&v271[1] + 1);
            __int16 v62 = sub_10006B474();
            sub_10006CDFC((uint64_t)v62, v53, @"NELat", &v271[2]);
            uint64_t v63 = sub_10006B474();
            sub_10006CDFC((uint64_t)v63, v53, @"NELon", (void *)&v271[2] + 1);
            __int16 v64 = sub_10006B474();
            sub_10006CDFC((uint64_t)v64, v53, @"GridSizeInDegree", (void *)&v272 + 1);
            unsigned int v273 = -1;
            uint64_t v65 = [v53 objectForKey:@"GridZoom"];
            if (v65)
            {
              objc_opt_class();
              if (objc_opt_isKindOfClass()) {
                unsigned int v273 = [v65 intValue];
              }
            }

            __int16 v66 = sub_10006B474();
            sub_10006CDFC((uint64_t)v66, v53, @"RefreshRate", &v272);
            if ((v270[79] & 0x80000000) != 0) {
              operator delete(*(void **)&v270[56]);
            }
            memset(&v270[56], 0, 24);
            uint64_t v67 = [v53 objectForKey:@"ChannelTopic"];
            if (v67)
            {
              objc_opt_class();
              if (objc_opt_isKindOfClass())
              {
                sub_10001D4D0(v67, buf);
                if ((v270[79] & 0x80000000) != 0) {
                  operator delete(*(void **)&v270[56]);
                }
                *(_OWORD *)&v270[56] = *(_OWORD *)buf;
                *(void *)&v270[72] = *(void *)&buf[16];
              }
            }

            if ((v270[103] & 0x80000000) != 0) {
              operator delete(*(void **)&v270[80]);
            }
            memset(&v270[80], 0, 24);
            __int16 v68 = [v53 objectForKey:@"LivabilityChannelPrefix"];
            if (v68)
            {
              objc_opt_class();
              if (objc_opt_isKindOfClass())
              {
                sub_10001D4D0(v68, buf);
                if ((v270[103] & 0x80000000) != 0) {
                  operator delete(*(void **)&v270[80]);
                }
                *(_OWORD *)&v270[80] = *(_OWORD *)buf;
                *(void *)&v270[96] = *(void *)&buf[16];
              }
            }

            unsigned int v266 = 0;
            uint64_t v69 = sub_10006B474();
            sub_10006D2CC((uint64_t)v69, v53, @"ListOfUnsupportedGrids", &v266, (uint64_t)&__p);
            unsigned int v265 = 0;
            __int16 v70 = sub_10006B474();
            id v264 = 0;
            sub_10006D054((uint64_t)v70, v53, @"SafetyAlertSupportedChannelsForRegion", &v265, &v264);
            id v259 = v264;
            unsigned int v71 = v265;
            __int16 v72 = SALogObjectGeneral;
            BOOL v73 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
            if (v71)
            {
              if (!v73)
              {
                memset(v269, 0, 24);
                int v53 = v258;
LABEL_160:
                uint64_t v76 = 0;
                while (2)
                {
                  int v77 = [v259 objectAtIndex:v76];
                  __int16 v78 = [v77 objectForKey:@"ChannelType"];
                  if (v78 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
                    unsigned int v79 = [v78 intValue];
                  }
                  else {
                    unsigned int v79 = -1;
                  }

                  uint64_t v263 = 0;
                  __int16 v80 = sub_10006B474();
                  sub_10006CDFC((uint64_t)v80, v77, @"ParticipationPercentage", &v263);
                  unsigned int v262 = 0;
                  if (v79 == 1)
                  {
                    long long v260 = 0uLL;
                    uint64_t v261 = 0;
                    int v84 = sub_10003E368();
                    if (sub_10003E0D0((uint64_t)v84, @"ChannelNamePrefix", (uint64_t)&v260))
                    {
                      double v85 = v279;
                      if ((unint64_t)v279 >= v280)
                      {
                        unint64_t v91 = (unsigned char *)sub_100004F4C((uint64_t *)&v278, &v260);
                      }
                      else
                      {
                        if (SHIBYTE(v261) < 0)
                        {
                          sub_100004CB8(v279, (void *)v260, *((unint64_t *)&v260 + 1));
                        }
                        else
                        {
                          long long v86 = v260;
                          *((void *)v279 + 2) = v261;
                          _OWORD *v85 = v86;
                        }
                        unint64_t v91 = (char *)v85 + 24;
                      }
                      v279 = v91;
                    }
                    else
                    {
                      uint64_t v90 = sub_10006B474();
                      sub_10006D724((uint64_t)v90, v77, @"ChannelName", &v262, (uint64_t *)&v278);
                      unint64_t v91 = v279;
                    }
                    uint64_t v277 = v263;
                    double v96 = SALogObjectGeneral;
                    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                    {
                      *(_DWORD *)uint64_t buf = 68289283;
                      *(_DWORD *)&uint8_t buf[4] = 0;
                      *(_WORD *)&uint8_t buf[8] = 2082;
                      *(void *)&buf[10] = "";
                      *(_WORD *)&buf[18] = 2049;
                      *(void *)&buf[20] = 0xAAAAAAAAAAAAAAABLL * ((v91 - v278) >> 3);
                      _os_log_impl((void *)&_mh_execute_header, v96, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,Dithering\", \"channelNameSize\":%{private}llu}", buf, 0x1Cu);
                      unint64_t v91 = v279;
                    }
                    uint64_t v97 = (uint64_t)v278;
                    if (v278 != v91)
                    {
                      double v98 = SALogObjectGeneral;
                      do
                      {
                        if (os_log_type_enabled(v98, OS_LOG_TYPE_DEFAULT))
                        {
                          uint64_t v99 = v97;
                          if (*(char *)(v97 + 23) < 0) {
                            uint64_t v99 = *(void *)v97;
                          }
                          *(void *)uint64_t buf = 68289283;
                          *(_WORD *)&uint8_t buf[8] = 2082;
                          *(void *)&buf[10] = "";
                          *(_WORD *)&buf[18] = 2081;
                          *(void *)&buf[20] = v99;
                          _os_log_impl((void *)&_mh_execute_header, v98, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,nonDithering\", \"channelName\":%{private, location:escape_only}s}", buf, 0x1Cu);
                          double v98 = SALogObjectGeneral;
                        }
                        v97 += 24;
                      }
                      while ((unsigned char *)v97 != v91);
                    }
LABEL_205:
                    if (SHIBYTE(v261) < 0) {
                      operator delete((void *)v260);
                    }
                    int v53 = v258;
                  }
                  else
                  {
                    if (!v79)
                    {
                      uint64_t v281 = v263;
                      long long v260 = 0uLL;
                      uint64_t v261 = 0;
                      unint64_t v81 = sub_10003E368();
                      if (sub_10003E0D0((uint64_t)v81, @"ChannelNamePrefix", (uint64_t)&v260))
                      {
                        __int16 v82 = v283;
                        if ((unint64_t)v283 >= v284[0])
                        {
                          uint64_t v89 = (unsigned char *)sub_100004F4C((uint64_t *)&v282, &v260);
                        }
                        else
                        {
                          if (SHIBYTE(v261) < 0)
                          {
                            sub_100004CB8(v283, (void *)v260, *((unint64_t *)&v260 + 1));
                          }
                          else
                          {
                            long long v83 = v260;
                            *((void *)v283 + 2) = v261;
                            *__int16 v82 = v83;
                          }
                          uint64_t v89 = (char *)v82 + 24;
                        }
                        v283 = v89;
                      }
                      else
                      {
                        uint64_t v88 = sub_10006B474();
                        sub_10006D724((uint64_t)v88, v77, @"ChannelName", &v262, (uint64_t *)&v282);
                        uint64_t v89 = v283;
                      }
                      double v92 = SALogObjectGeneral;
                      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                      {
                        *(_DWORD *)uint64_t buf = 68289283;
                        *(_DWORD *)&uint8_t buf[4] = 0;
                        *(_WORD *)&uint8_t buf[8] = 2082;
                        *(void *)&buf[10] = "";
                        *(_WORD *)&buf[18] = 2049;
                        *(void *)&buf[20] = 0xAAAAAAAAAAAAAAABLL * ((v89 - v282) >> 3);
                        _os_log_impl((void *)&_mh_execute_header, v92, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,nonDithering\", \"channelNameSize\":%{private}llu}", buf, 0x1Cu);
                        uint64_t v89 = v283;
                      }
                      uint64_t v93 = (uint64_t)v282;
                      if (v282 != v89)
                      {
                        unint64_t v94 = SALogObjectGeneral;
                        do
                        {
                          if (os_log_type_enabled(v94, OS_LOG_TYPE_DEFAULT))
                          {
                            uint64_t v95 = v93;
                            if (*(char *)(v93 + 23) < 0) {
                              uint64_t v95 = *(void *)v93;
                            }
                            *(void *)uint64_t buf = 68289283;
                            *(_WORD *)&uint8_t buf[8] = 2082;
                            *(void *)&buf[10] = "";
                            *(_WORD *)&buf[18] = 2081;
                            *(void *)&buf[20] = v95;
                            _os_log_impl((void *)&_mh_execute_header, v94, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,nonDithering\", \"channelName\":%{private, location:escape_only}s}", buf, 0x1Cu);
                            unint64_t v94 = SALogObjectGeneral;
                          }
                          v93 += 24;
                        }
                        while ((unsigned char *)v93 != v89);
                      }
                      goto LABEL_205;
                    }
                    unint64_t v87 = sub_10006B474();
                    sub_10006D724((uint64_t)v87, v77, @"ChannelName", &v262, (uint64_t *)v269);
                  }

                  if (++v76 >= (unint64_t)v265) {
                    goto LABEL_209;
                  }
                  continue;
                }
              }
              *(void *)uint64_t buf = 68289283;
              *(_WORD *)&uint8_t buf[8] = 2082;
              *(void *)&buf[10] = "";
              *(_WORD *)&buf[18] = 1025;
              *(_DWORD *)&buf[20] = v71;
              _os_log_impl((void *)&_mh_execute_header, v72, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,SafetyAlertSupportedChannelsForRegion\", \"channelArrayCount\":%{private}d}", buf, 0x18u);
              memset(v269, 0, 24);
              int v53 = v258;
              if (v265) {
                goto LABEL_160;
              }
LABEL_209:
              sub_10001D298(a3, (uint64_t)v270);
              *(void *)uint64_t buf = v269;
              sub_100005360((void ***)buf);
              int v75 = 0;
            }
            else
            {
              if (v73)
              {
                *(void *)uint64_t buf = v251;
                *(_WORD *)&uint8_t buf[8] = 2082;
                *(void *)&buf[10] = "";
                _os_log_impl((void *)&_mh_execute_header, v72, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,nosafetyAlertSupportedChannelsForRegions\"}", buf, 0x12u);
              }
              int v75 = 1;
              int v53 = v258;
            }
          }
          else
          {
            __int16 v74 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              *(void *)uint64_t buf = 68289282;
              *(_WORD *)&uint8_t buf[8] = 2082;
              *(void *)&buf[10] = "";
              *(_WORD *)&buf[18] = 2050;
              *(void *)&buf[20] = v257;
              _os_log_impl((void *)&_mh_execute_header, v74, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,regionIsNotDictionary\", \"index\":%{public}lu}", buf, 0x1Cu);
            }
            int v75 = 8;
          }

          *(void *)uint64_t buf = &v282;
          sub_100005360((void ***)buf);
          *(void *)uint64_t buf = &v278;
          sub_100005360((void ***)buf);
          if (__p)
          {
            v275 = __p;
            operator delete(__p);
          }
          if ((v270[103] & 0x80000000) != 0) {
            operator delete(*(void **)&v270[80]);
          }
          if ((v270[79] & 0x80000000) != 0) {
            operator delete(*(void **)&v270[56]);
          }
          if ((v270[55] & 0x80000000) != 0) {
            operator delete(*(void **)&v270[32]);
          }
          if ((v270[31] & 0x80000000) != 0) {
            operator delete(*(void **)&v270[8]);
          }
          if ((v75 | 8) != 8)
          {
            v132 = v255;
            goto LABEL_285;
          }
          uint64_t v52 = v257 + 1;
        }
        while (v257 + 1 < (unint64_t)v268);
      }
      sub_100018108(a3->i64[0], a3->i64[1]);

      id v100 = v253;
      v101 = [v100 objectForKey:@"SAEWConfig"];
      uint64_t v102 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)v270 = 68289026;
        *(_DWORD *)&v270[4] = 0;
        *(_WORD *)&v270[8] = 2082;
        *(void *)&v270[10] = "";
        _os_log_impl((void *)&_mh_execute_header, v102, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,Alert alertConf\"}", v270, 0x12u);
      }
      if (v101)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          if (SHIBYTE(__dst->__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst->__r_.__value_.__l.__data_);
          }
          __dst->__r_.__value_.__r.__words[0] = 0;
          __dst->__r_.__value_.__l.__size_ = 0;
          __dst->__r_.__value_.__r.__words[2] = 0;
          v103 = [v101 objectForKey:@"English"];
          if (v103)
          {
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              sub_10001D4D0(v103, v270);
              if (SHIBYTE(__dst->__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__dst->__r_.__value_.__l.__data_);
              }
              *(_OWORD *)&__dst->__r_.__value_.__l.__data_ = *(_OWORD *)v270;
              __dst->__r_.__value_.__r.__words[2] = *(void *)&v270[16];
            }
          }

          p_data = (void **)&__dst[1].__r_.__value_.__l.__data_;
          if (SHIBYTE(__dst[1].__r_.__value_.__r.__words[2]) < 0) {
            operator delete(*p_data);
          }
          *p_data = 0;
          __dst[1].__r_.__value_.__l.__size_ = 0;
          __dst[1].__r_.__value_.__r.__words[2] = 0;
          v105 = [v101 objectForKey:@"Spanish"];
          if (v105)
          {
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              sub_10001D4D0(v105, v270);
              if (SHIBYTE(__dst[1].__r_.__value_.__r.__words[2]) < 0) {
                operator delete(*p_data);
              }
              *(_OWORD *)p_data = *(_OWORD *)v270;
              __dst[1].__r_.__value_.__r.__words[2] = *(void *)&v270[16];
            }
          }

          v106 = (void **)&__dst[2].__r_.__value_.__l.__data_;
          if (SHIBYTE(__dst[2].__r_.__value_.__r.__words[2]) < 0) {
            operator delete(*v106);
          }
          *v106 = 0;
          __dst[2].__r_.__value_.__l.__size_ = 0;
          __dst[2].__r_.__value_.__r.__words[2] = 0;
          v107 = [v101 objectForKey:@"SourceString"];
          if (v107)
          {
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              sub_10001D4D0(v107, v270);
              if (SHIBYTE(__dst[2].__r_.__value_.__r.__words[2]) < 0) {
                operator delete(*v106);
              }
              *(_OWORD *)v106 = *(_OWORD *)v270;
              __dst[2].__r_.__value_.__r.__words[2] = *(void *)&v270[16];
            }
          }

          *(_DWORD *)uint64_t buf = 0;
          v108 = sub_10006B474();
          sub_10006D724((uint64_t)v108, v101, @"ProductionKey", (unsigned int *)buf, (uint64_t *)&__dst[5]);
          *(_DWORD *)v269 = 0;
          v109 = sub_10006B474();
          sub_10006D724((uint64_t)v109, v101, @"USGSType", (unsigned int *)v269, (uint64_t *)&__dst[6]);
          v110 = (void **)&__dst[3].__r_.__value_.__l.__data_;
          if (SHIBYTE(__dst[3].__r_.__value_.__r.__words[2]) < 0) {
            operator delete(*v110);
          }
          *v110 = 0;
          __dst[3].__r_.__value_.__l.__size_ = 0;
          __dst[3].__r_.__value_.__r.__words[2] = 0;
          v111 = [v101 objectForKey:@"PerformanceTestSourceString"];
          if (v111)
          {
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              sub_10001D4D0(v111, v270);
              if (SHIBYTE(__dst[3].__r_.__value_.__r.__words[2]) < 0) {
                operator delete(*v110);
              }
              *(_OWORD *)v110 = *(_OWORD *)v270;
              __dst[3].__r_.__value_.__r.__words[2] = *(void *)&v270[16];
            }
          }

          v112 = (void **)&__dst[4].__r_.__value_.__l.__data_;
          if (SHIBYTE(__dst[4].__r_.__value_.__r.__words[2]) < 0) {
            operator delete(*v112);
          }
          *v112 = 0;
          __dst[4].__r_.__value_.__l.__size_ = 0;
          __dst[4].__r_.__value_.__r.__words[2] = 0;
          v113 = [v101 objectForKey:@"FollowUpSourceString"];
          if (v113)
          {
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              sub_10001D4D0(v113, v270);
              if (SHIBYTE(__dst[4].__r_.__value_.__r.__words[2]) < 0) {
                operator delete(*v112);
              }
              *(_OWORD *)v112 = *(_OWORD *)v270;
              __dst[4].__r_.__value_.__r.__words[2] = *(void *)&v270[16];
            }
          }

          v114 = sub_10006B474();
          sub_10006CDFC((uint64_t)v114, v101, @"ThresholdMMI", __dst[7].__r_.__value_.__r.__words);
          v115 = sub_10006B474();
          p_std::string::size_type size = &__dst[8].__r_.__value_.__l.__size_;
          sub_10006CDFC((uint64_t)v115, v101, @"ThresholdTimeBetweenAlertsSec", &__dst[8].__r_.__value_.__l.__size_);
          if (*(double *)&__dst[8].__r_.__value_.__l.__size_ < 900.0) {
            std::string::size_type *p_size = 0x408C200000000000;
          }
          v117 = sub_10006B474();
          sub_10006CDFC((uint64_t)v117, v101, @"ThresholdMagnitude", &__dst[7].__r_.__value_.__l.__size_);
          v118 = sub_10006B474();
          sub_10006CDFC((uint64_t)v118, v101, @"FollowUpMessageValidTime", __dst[9].__r_.__value_.__r.__words);
          v119 = sub_10003E368();
          v120 = (std::string::__raw *)&__dst[8];
          if ((sub_10003E214((uint64_t)v119, @"PhoneChannelSubHysteresisSeconds", __dst[8].__r_.__value_.__r.__words) & 1) == 0)
          {
            v121 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)v270 = 68289026;
              *(_DWORD *)&v270[4] = 0;
              *(_WORD *)&v270[8] = 2082;
              *(void *)&v270[10] = "";
              _os_log_impl((void *)&_mh_execute_header, v121, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,PhoneChannelSubHysteresisSeconds\"}", v270, 0x12u);
            }
            v122 = sub_10006B474();
            sub_10006CDFC((uint64_t)v122, v101, @"PhoneChannelSubHysteresisSeconds", v120);
          }
          v123 = sub_10003E368();
          v124 = &__dst[7].__r_.__value_.__r.__words[2];
          if ((sub_10003E214((uint64_t)v123, @"WatchChannelSubHysteresis", &__dst[7].__r_.__value_.__r.__words[2]) & 1) == 0)
          {
            v125 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)v270 = 68289026;
              *(_DWORD *)&v270[4] = 0;
              *(_WORD *)&v270[8] = 2082;
              *(void *)&v270[10] = "";
              _os_log_impl((void *)&_mh_execute_header, v125, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,WatchChannelSubHysteresisSeconds\"}", v270, 0x12u);
            }
            v126 = sub_10006B474();
            sub_10006CDFC((uint64_t)v126, v101, @"WatchChannelSubHysteresisSeconds", v124);
          }
          v127 = sub_10006B474();
          sub_10006CDFC((uint64_t)v127, v101, @"IgnoreAlertSec", &__dst[8].__r_.__value_.__r.__words[2]);
          v128 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            v129 = " ";
            if (SHIBYTE(__dst->__r_.__value_.__r.__words[2]) < 0)
            {
              if (__dst->__r_.__value_.__l.__size_) {
                v130 = (const char *)__dst->__r_.__value_.__r.__words[0];
              }
              else {
                v130 = " ";
              }
            }
            else if (*((unsigned char *)&__dst->__r_.__value_.__s + 23))
            {
              v130 = (const char *)__dst;
            }
            else
            {
              v130 = " ";
            }
            int v219 = SHIBYTE(__dst[1].__r_.__value_.__r.__words[2]);
            if (v219 < 0)
            {
              if (__dst[1].__r_.__value_.__l.__size_) {
                data = __dst[1].__r_.__value_.__l.__data_;
              }
              else {
                data = " ";
              }
            }
            else
            {
              BOOL v42 = v219 == 0;
              data = (const char *)&__dst[1];
              if (v42) {
                data = " ";
              }
            }
            if (SHIBYTE(__dst[2].__r_.__value_.__r.__words[2]) < 0)
            {
              if (__dst[2].__r_.__value_.__l.__size_) {
                v129 = __dst[2].__r_.__value_.__l.__data_;
              }
            }
            else if (*((unsigned char *)&__dst[2].__r_.__value_.__s + 23))
            {
              v129 = (const char *)&__dst[2];
            }
            if (SHIBYTE(__dst[3].__r_.__value_.__r.__words[2]) < 0)
            {
              if (__dst[3].__r_.__value_.__l.__size_) {
                v221 = __dst[3].__r_.__value_.__l.__data_;
              }
              else {
                v221 = "";
              }
            }
            else if (*((unsigned char *)&__dst[3].__r_.__value_.__s + 23))
            {
              v221 = (const char *)&__dst[3];
            }
            else
            {
              v221 = "";
            }
            if (SHIBYTE(__dst[4].__r_.__value_.__r.__words[2]) < 0)
            {
              if (__dst[4].__r_.__value_.__l.__size_) {
                v222 = __dst[4].__r_.__value_.__l.__data_;
              }
              else {
                v222 = "";
              }
            }
            else if (*((unsigned char *)&__dst[4].__r_.__value_.__s + 23))
            {
              v222 = (const char *)&__dst[4];
            }
            else
            {
              v222 = "";
            }
            std::string::pointer v223 = __dst[7].__r_.__value_.__l.__data_;
            std::string::size_type size = __dst[7].__r_.__value_.__l.__size_;
            std::string::pointer v225 = __dst[9].__r_.__value_.__l.__data_;
            std::string::size_type v226 = *v124;
            std::string::size_type v227 = v120->__words[0];
            std::string::size_type v228 = __dst[8].__r_.__value_.__r.__words[2];
            std::string::size_type v229 = *p_size;
            *(_DWORD *)v270 = 68292611;
            *(_DWORD *)&v270[4] = 0;
            *(_WORD *)&v270[8] = 2082;
            *(void *)&v270[10] = "";
            *(_WORD *)&v270[18] = 2081;
            *(void *)&v270[20] = v130;
            *(_WORD *)&v270[28] = 2081;
            *(void *)&v270[30] = data;
            *(_WORD *)&v270[38] = 2081;
            *(void *)&v270[40] = v129;
            *(_WORD *)&v270[48] = 2049;
            *(void *)&v270[50] = *(unsigned int *)buf;
            *(_WORD *)&v270[58] = 2049;
            *(void *)&v270[60] = *(unsigned int *)v269;
            *(_WORD *)&v270[68] = 2081;
            *(void *)&v270[70] = v221;
            *(_WORD *)&v270[78] = 2081;
            *(void *)&v270[80] = v222;
            *(_WORD *)&v270[88] = 2049;
            *(void *)&v270[90] = v223;
            *(_WORD *)&v270[98] = 2049;
            *(void *)&v270[100] = size;
            *(_WORD *)&v270[108] = 2049;
            *(void *)&v270[110] = v225;
            *(_WORD *)&v270[118] = 2049;
            *(void *)&v271[0] = v226;
            WORD4(v271[0]) = 2049;
            *(void *)((char *)v271 + 10) = v227;
            WORD1(v271[1]) = 2049;
            *(void *)((char *)&v271[1] + 4) = v228;
            WORD6(v271[1]) = 2049;
            *(void *)((char *)&v271[1] + 14) = v229;
            _os_log_impl((void *)&_mh_execute_header, v128, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,readIgneousAlertConfigData\", \"English\":%{private, location:escape_only}s, \"Spanish\":%{private, location:escape_only}s, \"sourceString\":%{private, location:escape_only}s, \"ProductionKeyLen\":%{private}llu, \"typeCount\":%{private}llu, \"performanceTestSourceString\":%{private, location:escape_only}s, \"followUpSourceString\":%{private, location:escape_only}s, \"MMI\":\"%{private}0.3f\", \"Magnitude\":\"%{private}0.3f\", \"FollowUpMessageValidTime\":\"%{private}0.3f\", \"watchHysteresis\":\"%{private}0.3f\", \"PhoneHysteresis\":\"%{private}0.3f\", \"IgnoreDuration\":\"%{private}0.3f\", \"TimeBetweenAlerts\":\"%{private}0.3f\"}", v270, 0x9Eu);
          }
          std::string::pointer v230 = __dst[5].__r_.__value_.__l.__data_;
          std::string::size_type v231 = __dst[5].__r_.__value_.__l.__size_;
          if (v230 != (std::string::pointer)v231)
          {
            v232 = SALogObjectGeneral;
            do
            {
              if (os_log_type_enabled(v232, OS_LOG_TYPE_DEFAULT))
              {
                std::string::pointer v233 = v230;
                if (v230[23] < 0) {
                  std::string::pointer v233 = *(std::string::pointer *)v230;
                }
                *(_DWORD *)v270 = 68289283;
                *(_DWORD *)&v270[4] = 0;
                *(_WORD *)&v270[8] = 2082;
                *(void *)&v270[10] = "";
                *(_WORD *)&v270[18] = 2081;
                *(void *)&v270[20] = v233;
                _os_log_impl((void *)&_mh_execute_header, v232, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,readIgneousAlertConfigData\", \"ProductionKey\":%{private, location:escape_only}s}", v270, 0x1Cu);
                v232 = SALogObjectGeneral;
              }
              v230 += 24;
            }
            while (v230 != (std::string::pointer)v231);
          }
          std::string::pointer v234 = __dst[6].__r_.__value_.__l.__data_;
          std::string::size_type v235 = __dst[6].__r_.__value_.__l.__size_;
          if (v234 != (std::string::pointer)v235)
          {
            v236 = SALogObjectGeneral;
            do
            {
              if (os_log_type_enabled(v236, OS_LOG_TYPE_DEFAULT))
              {
                std::string::pointer v237 = v234;
                if (v234[23] < 0) {
                  std::string::pointer v237 = *(std::string::pointer *)v234;
                }
                *(_DWORD *)v270 = 68289283;
                *(_DWORD *)&v270[4] = 0;
                *(_WORD *)&v270[8] = 2082;
                *(void *)&v270[10] = "";
                *(_WORD *)&v270[18] = 2081;
                *(void *)&v270[20] = v237;
                _os_log_impl((void *)&_mh_execute_header, v236, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,readIgneousAlertConfigData\", \"type\":%{private, location:escape_only}s}", v270, 0x1Cu);
                v236 = SALogObjectGeneral;
              }
              v234 += 24;
            }
            while (v234 != (std::string::pointer)v235);
          }

          uint64_t v238 = SALogObjectGeneral;
          if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_422;
          }
          *(_DWORD *)v270 = 68289026;
          *(_DWORD *)&v270[4] = 0;
          *(_WORD *)&v270[8] = 2082;
          *(void *)&v270[10] = "";
          v217 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,read asset from file\"}";
          v218 = v238;
          goto LABEL_421;
        }
      }
      v133 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)v270 = 68289026;
        *(_DWORD *)&v270[4] = 0;
        *(_WORD *)&v270[8] = 2082;
        *(void *)&v270[10] = "";
        _os_log_impl((void *)&_mh_execute_header, v133, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,Alert dictionary Invalid\"}", v270, 0x12u);
      }

      v134 = SALogObjectGeneral;
      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
LABEL_288:

        *(_DWORD *)v270 = 0;
        long long __p = 0;
        v275 = 0;
        memset(&v270[8], 0, 112);
        memset(v271, 0, sizeof(v271));
        long long v272 = 0u;
        unsigned int v273 = 0;
        uint64_t v276 = 0;
        uint64_t v277 = 0x4059000000000000;
        v278 = 0;
        v279 = 0;
        unint64_t v280 = 0;
        uint64_t v281 = 0x4059000000000000;
        v284[0] = 0;
        v282 = 0;
        v283 = 0;
        v136 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)
          && (*(void *)uint64_t buf = 68289026,
              *(_WORD *)&uint8_t buf[8] = 2082,
              *(void *)&buf[10] = "",
              _os_log_impl((void *)&_mh_execute_header, v136, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,setDefaultConfigurationValueIfMAFails\"}", buf, 0x12u), (v270[31] & 0x80000000) != 0))
        {
          *(void *)&v270[16] = 3;
          v137 = *(_DWORD **)&v270[8];
        }
        else
        {
          v137 = &v270[8];
          v270[31] = 3;
        }
        _DWORD *v137 = 4281173;
        sub_10001DCF8((std::string *)&v270[56], "com.apple.aps.mantis.safetyalert", 0x20uLL);
        if ((v270[55] & 0x80000000) != 0)
        {
          *(void *)&v270[40] = 3;
          v138 = *(_DWORD **)&v270[32];
        }
        else
        {
          v138 = &v270[32];
          v270[55] = 3;
        }
        _DWORD *v138 = 4281173;
        if ((v270[103] & 0x80000000) != 0)
        {
          *(void *)&v270[88] = 7;
          v139 = *(char **)&v270[80];
        }
        else
        {
          v139 = &v270[80];
          v270[103] = 7;
        }
        strcpy(v139, "LivEwus");
        v271[0] = 0uLL;
        *(_OWORD *)&v270[104] = xmmword_1000B2390;
        v271[1] = xmmword_1000B23A0;
        v271[2] = xmmword_1000B23B0;
        long long v272 = xmmword_1000B23C0;
        sub_10000DD48(v269, "ewus");
        v140 = v283;
        if ((unint64_t)v283 >= v284[0])
        {
          unint64_t v142 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)v283 - v282) >> 3);
          unint64_t v143 = v142 + 1;
          if (v142 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_1000050E8();
          }
          if (0x5555555555555556 * ((uint64_t)(v284[0] - (void)v282) >> 3) > v143) {
            unint64_t v143 = 0x5555555555555556 * ((uint64_t)(v284[0] - (void)v282) >> 3);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v284[0] - (void)v282) >> 3) >= 0x555555555555555) {
            unint64_t v144 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v144 = v143;
          }
          v286 = v284;
          if (v144) {
            v145 = (char *)sub_100005100((uint64_t)v284, v144);
          }
          else {
            v145 = 0;
          }
          v146 = &v145[24 * v142];
          *(void *)uint64_t buf = v145;
          *(void *)&uint8_t buf[8] = v146;
          *(void *)&buf[24] = &v145[24 * v144];
          long long v147 = *(_OWORD *)v269;
          *((void *)v146 + 2) = *(void *)&v269[16];
          *(_OWORD *)v146 = v147;
          memset(v269, 0, 24);
          *(void *)&buf[16] = v146 + 24;
          sub_100005070((uint64_t *)&v282, buf);
          v148 = v283;
          sub_100005268((uint64_t)buf);
          v283 = v148;
          if ((char)v269[23] < 0) {
            operator delete(*(void **)v269);
          }
        }
        else
        {
          long long v141 = *(_OWORD *)v269;
          *((void *)v283 + 2) = *(void *)&v269[16];
          _OWORD *v140 = v141;
          v283 = (char *)v140 + 24;
        }
        uint64_t v281 = 0x4059000000000000;
        sub_10001D298(a3, (uint64_t)v270);
        sub_100018108(a3->i64[0], a3->i64[1]);
        *(void *)uint64_t buf = &v282;
        sub_100005360((void ***)buf);
        *(void *)uint64_t buf = &v278;
        sub_100005360((void ***)buf);
        if (__p)
        {
          v275 = __p;
          operator delete(__p);
        }
        if ((v270[103] & 0x80000000) != 0) {
          operator delete(*(void **)&v270[80]);
        }
        if ((v270[79] & 0x80000000) != 0) {
          operator delete(*(void **)&v270[56]);
        }
        if ((v270[55] & 0x80000000) != 0) {
          operator delete(*(void **)&v270[32]);
        }
        if ((v270[31] & 0x80000000) != 0) {
          operator delete(*(void **)&v270[8]);
        }
        sub_10001DCF8(__dst, "Earthquake Detected! Drop, Cover, Hold On. Protect Yourself. -USGS ShakeAlert", 0x4DuLL);
        sub_10001DCF8(__dst + 1, "Terremoto detectado! Agachese, cubrase, sujetese. Protejase. -USGS ShakeAlert", 0x4DuLL);
        if (SHIBYTE(__dst[2].__r_.__value_.__r.__words[2]) < 0)
        {
          __dst[2].__r_.__value_.__l.__size_ = 4;
          v149 = __dst[2].__r_.__value_.__l.__data_;
        }
        else
        {
          *((unsigned char *)&__dst[2].__r_.__value_.__s + 23) = 4;
          v149 = (char *)&__dst[2];
        }
        strcpy(v149, "USGS");
        if (SHIBYTE(__dst[4].__r_.__value_.__r.__words[2]) < 0)
        {
          __dst[4].__r_.__value_.__l.__size_ = 12;
          v150 = __dst[4].__r_.__value_.__l.__data_;
        }
        else
        {
          *((unsigned char *)&__dst[4].__r_.__value_.__s + 23) = 12;
          v150 = (char *)&__dst[4];
        }
        strcpy(v150, "USGSFollowUp");
        if (SHIBYTE(__dst[3].__r_.__value_.__r.__words[2]) < 0)
        {
          __dst[3].__r_.__value_.__l.__size_ = 8;
          v151 = __dst[3].__r_.__value_.__l.__data_;
        }
        else
        {
          *((unsigned char *)&__dst[3].__r_.__value_.__s + 23) = 8;
          v151 = (char *)&__dst[3];
        }
        strcpy(v151, "USGSTest");
        sub_10000DD48(buf, "new");
        v152 = (uint64_t *)&__dst[6];
        uint64_t v154 = (uint64_t)&__dst[6].__r_.__value_.__r.__words[2];
        std::string::size_type v153 = __dst[6].__r_.__value_.__r.__words[2];
        std::string::size_type v155 = __dst[6].__r_.__value_.__l.__size_;
        if (v155 >= v153)
        {
          unint64_t v157 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v155 - *v152) >> 3);
          unint64_t v158 = v157 + 1;
          if (v157 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_1000050E8();
          }
          unint64_t v159 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v153 - *v152) >> 3);
          if (2 * v159 > v158) {
            unint64_t v158 = 2 * v159;
          }
          if (v159 >= 0x555555555555555) {
            unint64_t v160 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v160 = v158;
          }
          *(void *)&v270[32] = (char *)__dst + 160;
          if (v160) {
            v161 = (char *)sub_100005100((uint64_t)&__dst[6].__r_.__value_.__r.__words[2], v160);
          }
          else {
            v161 = 0;
          }
          v162 = &v161[24 * v157];
          *(void *)v270 = v161;
          *(void *)&v270[8] = v162;
          *(void *)&v270[24] = &v161[24 * v160];
          long long v163 = *(_OWORD *)buf;
          *((void *)v162 + 2) = *(void *)&buf[16];
          *(_OWORD *)v162 = v163;
          memset(buf, 0, 24);
          *(void *)&v270[16] = v162 + 24;
          sub_100005070(v152, v270);
          std::string::size_type v164 = __dst[6].__r_.__value_.__l.__size_;
          sub_100005268((uint64_t)v270);
          int v165 = buf[23];
          __dst[6].__r_.__value_.__l.__size_ = v164;
          if (v165 < 0) {
            operator delete(*(void **)buf);
          }
        }
        else
        {
          long long v156 = *(_OWORD *)buf;
          *(void *)(v155 + 16) = *(void *)&buf[16];
          *(_OWORD *)std::string::size_type v155 = v156;
          __dst[6].__r_.__value_.__l.__size_ = v155 + 24;
        }
        sub_10000DD48(buf, "update");
        std::string::size_type v167 = __dst[6].__r_.__value_.__l.__size_;
        std::string::size_type v166 = __dst[6].__r_.__value_.__r.__words[2];
        if (v167 >= v166)
        {
          unint64_t v169 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v167 - *v152) >> 3);
          unint64_t v170 = v169 + 1;
          if (v169 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_1000050E8();
          }
          unint64_t v171 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v166 - *v152) >> 3);
          if (2 * v171 > v170) {
            unint64_t v170 = 2 * v171;
          }
          if (v171 >= 0x555555555555555) {
            unint64_t v172 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v172 = v170;
          }
          *(void *)&v270[32] = (char *)__dst + 160;
          if (v172) {
            v173 = (char *)sub_100005100(v154, v172);
          }
          else {
            v173 = 0;
          }
          v174 = &v173[24 * v169];
          *(void *)v270 = v173;
          *(void *)&v270[8] = v174;
          *(void *)&v270[24] = &v173[24 * v172];
          long long v175 = *(_OWORD *)buf;
          *((void *)v174 + 2) = *(void *)&buf[16];
          *(_OWORD *)v174 = v175;
          memset(buf, 0, 24);
          *(void *)&v270[16] = v174 + 24;
          sub_100005070(v152, v270);
          std::string::size_type v176 = __dst[6].__r_.__value_.__l.__size_;
          sub_100005268((uint64_t)v270);
          int v177 = buf[23];
          __dst[6].__r_.__value_.__l.__size_ = v176;
          if (v177 < 0) {
            operator delete(*(void **)buf);
          }
        }
        else
        {
          long long v168 = *(_OWORD *)buf;
          *(void *)(v167 + 16) = *(void *)&buf[16];
          *(_OWORD *)std::string::size_type v167 = v168;
          __dst[6].__r_.__value_.__l.__size_ = v167 + 24;
        }
        sub_10000DD48(buf, "follow_up");
        std::string::size_type v179 = __dst[6].__r_.__value_.__l.__size_;
        std::string::size_type v178 = __dst[6].__r_.__value_.__r.__words[2];
        if (v179 >= v178)
        {
          unint64_t v182 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v179 - *v152) >> 3);
          unint64_t v183 = v182 + 1;
          if (v182 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_1000050E8();
          }
          unint64_t v184 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v178 - *v152) >> 3);
          if (2 * v184 > v183) {
            unint64_t v183 = 2 * v184;
          }
          if (v184 >= 0x555555555555555) {
            unint64_t v185 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v185 = v183;
          }
          *(void *)&v270[32] = (char *)__dst + 160;
          if (v185) {
            v186 = (char *)sub_100005100(v154, v185);
          }
          else {
            v186 = 0;
          }
          v187 = &v186[24 * v182];
          *(void *)v270 = v186;
          *(void *)&v270[8] = v187;
          *(void *)&v270[24] = &v186[24 * v185];
          long long v188 = *(_OWORD *)buf;
          *((void *)v187 + 2) = *(void *)&buf[16];
          *(_OWORD *)v187 = v188;
          memset(buf, 0, 24);
          *(void *)&v270[16] = v187 + 24;
          sub_100005070(v152, v270);
          std::string::size_type v189 = __dst[6].__r_.__value_.__l.__size_;
          sub_100005268((uint64_t)v270);
          int v190 = buf[23];
          __dst[6].__r_.__value_.__l.__size_ = v189;
          v181 = __dst;
          if (v190 < 0) {
            operator delete(*(void **)buf);
          }
        }
        else
        {
          long long v180 = *(_OWORD *)buf;
          *(void *)(v179 + 16) = *(void *)&buf[16];
          *(_OWORD *)std::string::size_type v179 = v180;
          __dst[6].__r_.__value_.__l.__size_ = v179 + 24;
          v181 = __dst;
        }
        *(_OWORD *)&v181[8].__r_.__value_.__r.__words[2] = xmmword_1000B23D0;
        *(int64x2_t *)&v181[7].__r_.__value_.__r.__words[2] = vdupq_n_s64(0x40AC200000000000uLL);
        sub_10000DD48(buf, "C03869AF-71E2-47B7-88A6-4285CA380272");
        uint64_t v191 = (uint64_t)&v181[5].__r_.__value_.__r.__words[2];
        std::string::size_type v192 = v181[5].__r_.__value_.__r.__words[2];
        std::string::size_type v193 = v181[5].__r_.__value_.__l.__size_;
        v194 = v181;
        if (v193 >= v192)
        {
          v196 = (uint64_t *)&v181[5];
          std::string::pointer v197 = v194[5].__r_.__value_.__l.__data_;
          unint64_t v198 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v193 - (void)v197) >> 3);
          unint64_t v199 = v198 + 1;
          if (v198 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_1000050E8();
          }
          unint64_t v200 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v192 - (void)v197) >> 3);
          if (2 * v200 > v199) {
            unint64_t v199 = 2 * v200;
          }
          if (v200 >= 0x555555555555555) {
            unint64_t v201 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v201 = v199;
          }
          *(void *)&v270[32] = v191;
          if (v201) {
            v202 = (char *)sub_100005100(v191, v201);
          }
          else {
            v202 = 0;
          }
          v203 = &v202[24 * v198];
          *(void *)v270 = v202;
          *(void *)&v270[8] = v203;
          *(void *)&v270[24] = &v202[24 * v201];
          long long v204 = *(_OWORD *)buf;
          *((void *)v203 + 2) = *(void *)&buf[16];
          *(_OWORD *)v203 = v204;
          memset(buf, 0, 24);
          *(void *)&v270[16] = v203 + 24;
          sub_100005070(v196, v270);
          v194 = __dst;
          std::string::size_type v205 = __dst[5].__r_.__value_.__l.__size_;
          sub_100005268((uint64_t)v270);
          int v206 = buf[23];
          __dst[5].__r_.__value_.__l.__size_ = v205;
          if (v206 < 0) {
            operator delete(*(void **)buf);
          }
        }
        else
        {
          long long v195 = *(_OWORD *)buf;
          *(void *)(v193 + 16) = *(void *)&buf[16];
          *(_OWORD *)std::string::size_type v193 = v195;
          v181[5].__r_.__value_.__l.__size_ = v193 + 24;
        }
        *(_OWORD *)&v194[7].__r_.__value_.__l.__data_ = xmmword_1000B23E0;
        v194[8].__r_.__value_.__l.__size_ = 0x404E000000000000;
        v207 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          if (SHIBYTE(v194->__r_.__value_.__r.__words[2]) < 0)
          {
            if (v194->__r_.__value_.__l.__size_) {
              v208 = (const char *)v194->__r_.__value_.__r.__words[0];
            }
            else {
              v208 = " ";
            }
          }
          else if (*((unsigned char *)&v194->__r_.__value_.__s + 23))
          {
            v208 = (const char *)v194;
          }
          else
          {
            v208 = " ";
          }
          if (SHIBYTE(v194[1].__r_.__value_.__r.__words[2]) < 0)
          {
            if (v194[1].__r_.__value_.__l.__size_) {
              v209 = v194[1].__r_.__value_.__l.__data_;
            }
            else {
              v209 = " ";
            }
          }
          else if (*((unsigned char *)&v194[1].__r_.__value_.__s + 23))
          {
            v209 = (const char *)&__dst[1];
          }
          else
          {
            v209 = " ";
          }
          if (SHIBYTE(v194[2].__r_.__value_.__r.__words[2]) < 0)
          {
            if (v194[2].__r_.__value_.__l.__size_) {
              v210 = v194[2].__r_.__value_.__l.__data_;
            }
            else {
              v210 = " ";
            }
          }
          else if (*((unsigned char *)&v194[2].__r_.__value_.__s + 23))
          {
            v210 = (const char *)&__dst[2];
          }
          else
          {
            v210 = " ";
          }
          if (SHIBYTE(v194[3].__r_.__value_.__r.__words[2]) < 0)
          {
            if (v194[3].__r_.__value_.__l.__size_) {
              v211 = v194[3].__r_.__value_.__l.__data_;
            }
            else {
              v211 = " ";
            }
          }
          else if (*((unsigned char *)&v194[3].__r_.__value_.__s + 23))
          {
            v211 = (const char *)&__dst[3];
          }
          else
          {
            v211 = " ";
          }
          if (SHIBYTE(v194[4].__r_.__value_.__r.__words[2]) < 0)
          {
            if (v194[4].__r_.__value_.__l.__size_) {
              v212 = v194[4].__r_.__value_.__l.__data_;
            }
            else {
              v212 = " ";
            }
          }
          else if (*((unsigned char *)&v194[4].__r_.__value_.__s + 23))
          {
            v212 = (const char *)&__dst[4];
          }
          else
          {
            v212 = " ";
          }
          std::string::size_type v213 = v194[7].__r_.__value_.__r.__words[2];
          std::string::pointer v214 = v194[8].__r_.__value_.__l.__data_;
          std::string::size_type v216 = v194[8].__r_.__value_.__r.__words[2];
          std::string::pointer v215 = v194[9].__r_.__value_.__l.__data_;
          *(_DWORD *)v270 = 68292099;
          *(_DWORD *)&v270[4] = 0;
          *(_WORD *)&v270[8] = 2082;
          *(void *)&v270[10] = "";
          *(_WORD *)&v270[18] = 2081;
          *(void *)&v270[20] = v208;
          *(_WORD *)&v270[28] = 2081;
          *(void *)&v270[30] = v209;
          *(_WORD *)&v270[38] = 2081;
          *(void *)&v270[40] = v210;
          *(_WORD *)&v270[48] = 2081;
          *(void *)&v270[50] = v211;
          *(_WORD *)&v270[58] = 2081;
          *(void *)&v270[60] = v212;
          *(_WORD *)&v270[68] = 2049;
          *(void *)&v270[70] = 0x4012000000000000;
          *(_WORD *)&v270[78] = 2049;
          *(void *)&v270[80] = 0x4014000000000000;
          *(_WORD *)&v270[88] = 2049;
          *(void *)&v270[90] = v215;
          *(_WORD *)&v270[98] = 2049;
          *(void *)&v270[100] = v213;
          *(_WORD *)&v270[108] = 2049;
          *(void *)&v270[110] = v214;
          *(_WORD *)&v270[118] = 2049;
          *(void *)&v271[0] = v216;
          WORD4(v271[0]) = 2049;
          *(void *)((char *)v271 + 10) = 0x404E000000000000;
          _os_log_impl((void *)&_mh_execute_header, v207, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,readAlertConfigFromFailSafe\", \"English\":%{private, location:escape_only}s, \"Spanish\":%{private, location:escape_only}s, \"sourceString\":%{private, location:escape_only}s, \"performanceTestSourceString\":%{private, location:escape_only}s, \"FollowUpSourceString\":%{private, location:escape_only}s, \"MMI\":\"%{private}0.3f\", \"Magnitude\":\"%{private}0.3f\", \"FollowUpMessageValidTime\":\"%{private}0.3f\", \"watchHysteresis\":\"%{private}0.3f\", \"PhoneHysteresis\":\"%{private}0.3f\", \"IgnoreDuration\":\"%{private}0.3f\", \"TimeBetweenAlerts\":\"%{private}0.3f\"}", v270, 0x8Au);
          v207 = SALogObjectGeneral;
        }
        if (!os_log_type_enabled(v207, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_422;
        }
        *(_DWORD *)v270 = 68289026;
        *(_DWORD *)&v270[4] = 0;
        *(_WORD *)&v270[8] = 2082;
        *(void *)&v270[10] = "";
        v217 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,read asset from failSafe\"}";
        v218 = v207;
LABEL_421:
        _os_log_impl((void *)&_mh_execute_header, v218, OS_LOG_TYPE_DEFAULT, v217, v270, 0x12u);
        goto LABEL_422;
      }
      *(_DWORD *)v270 = 68289026;
      *(_DWORD *)&v270[4] = 0;
      *(_WORD *)&v270[8] = 2082;
      *(void *)&v270[10] = "";
      v135 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,alertConfig from file failed\"}";
    }
    else
    {
      v131 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)v270 = 68289026;
        *(_DWORD *)&v270[4] = 0;
        *(_WORD *)&v270[8] = 2082;
        *(void *)&v270[10] = "";
        _os_log_impl((void *)&_mh_execute_header, v131, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,readRegionConfigFromFile,Dictionary is nil\"}", v270, 0x12u);
      }
      v132 = 0;
LABEL_285:

      v134 = SALogObjectGeneral;
      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_288;
      }
      *(_DWORD *)v270 = 68289026;
      *(_DWORD *)&v270[4] = 0;
      *(_WORD *)&v270[8] = 2082;
      *(void *)&v270[10] = "";
      v135 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,regionConfig from file failed\"}";
    }
    _os_log_impl((void *)&_mh_execute_header, v134, OS_LOG_TYPE_DEFAULT, v135, v270, 0x12u);
    goto LABEL_288;
  }
  uint64_t v37 = sub_10003E368();
  char v38 = sub_10003E214((uint64_t)v37, @"IgnoreAlertSec", &__dst[8].__r_.__value_.__r.__words[2]);
  uint64_t v39 = SALogObjectGeneral;
  BOOL v40 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if ((v38 & 1) == 0)
  {
    if (!v40) {
      goto LABEL_108;
    }
    *(_DWORD *)v270 = 68289026;
    *(_DWORD *)&v270[4] = 0;
    *(_WORD *)&v270[8] = 2082;
    *(void *)&v270[10] = "";
    int v47 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read IgnoreAlertSec\"}";
    double v48 = v39;
    goto LABEL_107;
  }
  if (v40)
  {
    int v41 = SHIBYTE(__dst->__r_.__value_.__r.__words[2]);
    if (v41 < 0)
    {
      if (__dst->__r_.__value_.__l.__size_) {
        double v43 = (const char *)__dst->__r_.__value_.__r.__words[0];
      }
      else {
        double v43 = " ";
      }
    }
    else
    {
      BOOL v42 = v41 == 0;
      double v43 = (const char *)__dst;
      if (v42) {
        double v43 = " ";
      }
    }
    if (SHIBYTE(__dst[1].__r_.__value_.__r.__words[2]) < 0)
    {
      if (__dst[1].__r_.__value_.__l.__size_) {
        v239 = __dst[1].__r_.__value_.__l.__data_;
      }
      else {
        v239 = " ";
      }
    }
    else if (*((unsigned char *)&__dst[1].__r_.__value_.__s + 23))
    {
      v239 = (const char *)&__dst[1];
    }
    else
    {
      v239 = " ";
    }
    if (SHIBYTE(__dst[2].__r_.__value_.__r.__words[2]) < 0)
    {
      if (__dst[2].__r_.__value_.__l.__size_) {
        v240 = __dst[2].__r_.__value_.__l.__data_;
      }
      else {
        v240 = " ";
      }
    }
    else if (*((unsigned char *)&__dst[2].__r_.__value_.__s + 23))
    {
      v240 = (const char *)&__dst[2];
    }
    else
    {
      v240 = " ";
    }
    if (SHIBYTE(__dst[3].__r_.__value_.__r.__words[2]) < 0)
    {
      if (__dst[3].__r_.__value_.__l.__size_) {
        v241 = __dst[3].__r_.__value_.__l.__data_;
      }
      else {
        v241 = " ";
      }
    }
    else if (*((unsigned char *)&__dst[3].__r_.__value_.__s + 23))
    {
      v241 = (const char *)&__dst[3];
    }
    else
    {
      v241 = " ";
    }
    if (SHIBYTE(__dst[4].__r_.__value_.__r.__words[2]) < 0)
    {
      if (__dst[4].__r_.__value_.__l.__size_) {
        v242 = __dst[4].__r_.__value_.__l.__data_;
      }
      else {
        v242 = " ";
      }
    }
    else if (*((unsigned char *)&__dst[4].__r_.__value_.__s + 23))
    {
      v242 = (const char *)&__dst[4];
    }
    else
    {
      v242 = " ";
    }
    std::string::pointer v243 = __dst[7].__r_.__value_.__l.__data_;
    std::string::size_type v244 = __dst[7].__r_.__value_.__l.__size_;
    std::string::pointer v245 = __dst[9].__r_.__value_.__l.__data_;
    std::string::size_type v246 = __dst[7].__r_.__value_.__r.__words[2];
    std::string::pointer v247 = __dst[8].__r_.__value_.__l.__data_;
    std::string::size_type v248 = __dst[8].__r_.__value_.__r.__words[2];
    std::string::size_type v249 = __dst[8].__r_.__value_.__l.__size_;
    *(_DWORD *)v270 = 68292099;
    *(_DWORD *)&v270[4] = 0;
    *(_WORD *)&v270[8] = 2082;
    *(void *)&v270[10] = "";
    *(_WORD *)&v270[18] = 2081;
    *(void *)&v270[20] = v43;
    *(_WORD *)&v270[28] = 2081;
    *(void *)&v270[30] = v239;
    *(_WORD *)&v270[38] = 2081;
    *(void *)&v270[40] = v240;
    *(_WORD *)&v270[48] = 2081;
    *(void *)&v270[50] = v241;
    *(_WORD *)&v270[58] = 2081;
    *(void *)&v270[60] = v242;
    *(_WORD *)&v270[68] = 2049;
    *(void *)&v270[70] = v243;
    *(_WORD *)&v270[78] = 2049;
    *(void *)&v270[80] = v244;
    *(_WORD *)&v270[88] = 2049;
    *(void *)&v270[90] = v245;
    *(_WORD *)&v270[98] = 2049;
    *(void *)&v270[100] = v246;
    *(_WORD *)&v270[108] = 2049;
    *(void *)&v270[110] = v247;
    *(_WORD *)&v270[118] = 2049;
    *(void *)&v271[0] = v248;
    WORD4(v271[0]) = 2049;
    *(void *)((char *)v271 + 10) = v249;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,readAlertConfigFromDefaults\", \"English\":%{private, location:escape_only}s, \"Spanish\":%{private, location:escape_only}s, \"sourceString\":%{private, location:escape_only}s, \"performanceTestSourceString\":%{private, location:escape_only}s, \"FollowUpSourceString\":%{private, location:escape_only}s, \"MMI\":\"%{private}0.3f\", \"Magnitude\":\"%{private}0.3f\", \"FollowUpMessageValidTime\":\"%{private}0.3f\", \"watchHysteresis\":\"%{private}0.3f\", \"PhoneHysteresis\":\"%{private}0.3f\", \"IgnoreDuration\":\"%{private}0.3f\", \"TimeBetweenAlerts\":\"%{private}0.3f\"}", v270, 0x8Au);
    uint64_t v39 = SALogObjectGeneral;
  }
  if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)v270 = 68289026;
    *(_DWORD *)&v270[4] = 0;
    *(_WORD *)&v270[8] = 2082;
    *(void *)&v270[10] = "";
    v217 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,read asset from defaults\"}";
    v218 = v39;
    goto LABEL_421;
  }
LABEL_422:
}

void sub_10001BBC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  if (*(char *)(v55 - 121) < 0) {
    operator delete(*(void **)(v55 - 144));
  }
  sub_10001DAB4((uint64_t)&a55);

  _Unwind_Resume(a1);
}

void sub_10001BE2C(uint64_t a1, void *a2, BOOL *a3)
{
  id v108 = a2;
  unint64_t v4 = sub_10003E368();
  if ((sub_10003DD80((uint64_t)v4, @"isBLERelaySupported_v2", a3) & 1) == 0)
  {
    char v31 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_45;
    }
    uint64_t buf = 68289026;
    __int16 v113 = 2082;
    v114 = "";
    uint64_t v32 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read isBLERelaySupported\"}";
    goto LABEL_44;
  }
  int v5 = sub_10003E368();
  if ((sub_10003DFC4((uint64_t)v5, @"advertiseDurationSeconds", (_DWORD *)a3 + 1) & 1) == 0)
  {
    char v31 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_45;
    }
    uint64_t buf = 68289026;
    __int16 v113 = 2082;
    v114 = "";
    uint64_t v32 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read advertiseDurationSeconds\"}";
    goto LABEL_44;
  }
  int v6 = sub_10003E368();
  if ((sub_10003DFC4((uint64_t)v6, @"advertiseEvaluationIntervalSeconds", (_DWORD *)a3 + 2) & 1) == 0)
  {
    char v31 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_45;
    }
    uint64_t buf = 68289026;
    __int16 v113 = 2082;
    v114 = "";
    uint64_t v32 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read advertiseEvaluationIntervalSeconds\"}";
    goto LABEL_44;
  }
  unint64_t v7 = sub_10003E368();
  if ((sub_10003DFC4((uint64_t)v7, @"discoveryEvaluationIntervalSeconds", (_DWORD *)a3 + 3) & 1) == 0)
  {
    char v31 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_45;
    }
    uint64_t buf = 68289026;
    __int16 v113 = 2082;
    v114 = "";
    uint64_t v32 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read discoveryEvaluationIntervalSeconds\"}";
    goto LABEL_44;
  }
  int v8 = sub_10003E368();
  if ((sub_10003DFC4((uint64_t)v8, @"minBatteryLevelForBLEActivity", (_DWORD *)a3 + 5) & 1) == 0)
  {
    char v31 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_45;
    }
    uint64_t buf = 68289026;
    __int16 v113 = 2082;
    v114 = "";
    uint64_t v32 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read minBatteryLevelForBLEActivity\"}";
    goto LABEL_44;
  }
  unint64_t v9 = sub_10003E368();
  if ((sub_10003DFC4((uint64_t)v9, @"minDeviceDensityCount", (_DWORD *)a3 + 4) & 1) == 0)
  {
    char v31 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_45;
    }
    uint64_t buf = 68289026;
    __int16 v113 = 2082;
    v114 = "";
    uint64_t v32 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read minDeviceDensityCount\"}";
    goto LABEL_44;
  }
  long long v10 = sub_10003E368();
  if ((sub_10003DFC4((uint64_t)v10, @"minTimeBetweenPeopleDensityQuery", (_DWORD *)a3 + 6) & 1) == 0)
  {
    char v31 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_45;
    }
    uint64_t buf = 68289026;
    __int16 v113 = 2082;
    v114 = "";
    uint64_t v32 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read minTimeBetweenPeopleDensityQuery\"}";
    goto LABEL_44;
  }
  uint8x8_t v11 = sub_10003E368();
  if ((sub_10003DFC4((uint64_t)v11, @"bleCBAdvertiseRate", (_DWORD *)a3 + 9) & 1) == 0)
  {
    char v31 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_45;
    }
    uint64_t buf = 68289026;
    __int16 v113 = 2082;
    v114 = "";
    uint64_t v32 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read bleCBAdvertiseRate\"}";
    goto LABEL_44;
  }
  int v12 = sub_10003E368();
  if ((sub_10003DFC4((uint64_t)v12, @"bleCBScanRate", (_DWORD *)a3 + 7) & 1) == 0)
  {
    char v31 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_45;
    }
    uint64_t buf = 68289026;
    __int16 v113 = 2082;
    v114 = "";
    uint64_t v32 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read bleCBScanRate\"}";
    goto LABEL_44;
  }
  __int16 v13 = sub_10003E368();
  if ((sub_10003DFC4((uint64_t)v13, @"bleCBScanRateScreenOff", (_DWORD *)a3 + 8) & 1) == 0)
  {
    char v31 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_45;
    }
    uint64_t buf = 68289026;
    __int16 v113 = 2082;
    v114 = "";
    uint64_t v32 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read bleCBScanRateScreenOff\"}";
    goto LABEL_44;
  }
  unint64_t v14 = sub_10003E368();
  if ((sub_10003DFC4((uint64_t)v14, @"bleDataVersion", (_DWORD *)a3 + 10) & 1) == 0)
  {
    char v31 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_45;
    }
    uint64_t buf = 68289026;
    __int16 v113 = 2082;
    v114 = "";
    uint64_t v32 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read bleDataVersion\"}";
    goto LABEL_44;
  }
  uint64_t v15 = sub_10003E368();
  if ((sub_10003DFC4((uint64_t)v15, @"bleAdvertisementTimePrecisionInMSec", (_DWORD *)a3 + 11) & 1) == 0)
  {
    char v31 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_45;
    }
    uint64_t buf = 68289026;
    __int16 v113 = 2082;
    v114 = "";
    uint64_t v32 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read bleAdvertisementTimePrecisionInMSec\"}";
    goto LABEL_44;
  }
  LODWORD(v110) = 0;
  long long v16 = sub_10003E368();
  if (sub_10003DFC4((uint64_t)v16, @"percentageOfBLEParticipation", &v110))
  {
    *(float *)&uint64_t buf = (float)*((unsigned int *)a3 + 4);
    *((float *)&buf + 1) = (float)v110;
    sub_10001D3F0((void **)a3 + 6, &buf);
    unint64_t v17 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v18 = *a3;
      int v20 = *((_DWORD *)a3 + 1);
      int v19 = *((_DWORD *)a3 + 2);
      int v21 = *((_DWORD *)a3 + 3);
      int v22 = *((_DWORD *)a3 + 4);
      int v24 = *((_DWORD *)a3 + 5);
      int v23 = *((_DWORD *)a3 + 6);
      int v25 = *((_DWORD *)a3 + 7);
      int v26 = *((_DWORD *)a3 + 8);
      int v27 = *((_DWORD *)a3 + 9);
      int v28 = *((_DWORD *)a3 + 10);
      int v29 = *((_DWORD *)a3 + 11);
      uint64_t buf = 68292355;
      __int16 v113 = 2082;
      v114 = "";
      __int16 v115 = 1025;
      *(_DWORD *)v116 = v18;
      *(_WORD *)&v116[4] = 1025;
      *(_DWORD *)&v116[6] = v19;
      LOWORD(v117) = 1025;
      *(_DWORD *)((char *)&v117 + 2) = v21;
      HIWORD(v117) = 1025;
      int v118 = v20;
      __int16 v119 = 1025;
      int v120 = v22;
      __int16 v121 = 1025;
      int v122 = v23;
      __int16 v123 = 1025;
      int v124 = (int)v110;
      __int16 v125 = 1025;
      int v126 = v24;
      __int16 v127 = 1025;
      int v128 = v27;
      __int16 v129 = 1025;
      int v130 = v25;
      __int16 v131 = 1025;
      int v132 = v26;
      __int16 v133 = 1025;
      int v134 = v28;
      __int16 v135 = 1025;
      int v136 = v29;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,readBleConfigFromDefaults\", \"isBLERelaySupported\":%{private}hhd, \"advertiseEvaluationIntervalSeconds\":%{private}d, \"discoveryEvaluationIntervalSeconds\":%{private}d, \"advertiseDurationSeconds\":%{private}d, \"minDeviceDensityCount\":%{private}d, \"minTimeBetweenPeopleDensityQuery\":%{private}d, \"percent\":%{private}d, \"minBatteryLevelForBLEActivity\":%{private}d, \"bleCBAdvertiseRate\":%{private}d, \"bleCBScanRate\":%{private}d, \"bleCBScanRateScreenOff\":%{private}d, \"bleDataVersion\":%{private}d, \"bleAdvertisementTimePrecisionInMSec\":%{private}d}", (uint8_t *)&buf, 0x60u);
      unint64_t v17 = SALogObjectGeneral;
    }
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t buf = 68289026;
      __int16 v113 = 2082;
      v114 = "";
      unint64_t v30 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,bleConfig defaults read\"}";
LABEL_139:
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, v30, (uint8_t *)&buf, 0x12u);
      goto LABEL_140;
    }
    goto LABEL_140;
  }
  char v31 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289026;
    __int16 v113 = 2082;
    v114 = "";
    uint64_t v32 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,can't read percentageOfBLEParticipation\"}";
LABEL_44:
    _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, v32, (uint8_t *)&buf, 0x12u);
  }
LABEL_45:
  id v33 = v108;
  if (!v33)
  {
    uint64_t v35 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t buf = 68289026;
      __int16 v113 = 2082;
      v114 = "";
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,readBleConfigFromFile dictionary Invalid\"}", (uint8_t *)&buf, 0x12u);
    }
LABEL_135:
    unint64_t v17 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v94 = *a3;
      int v96 = *((_DWORD *)a3 + 1);
      int v95 = *((_DWORD *)a3 + 2);
      int v97 = *((_DWORD *)a3 + 3);
      int v98 = *((_DWORD *)a3 + 4);
      int v99 = *((_DWORD *)a3 + 5);
      int v100 = *((_DWORD *)a3 + 6);
      int v101 = *((_DWORD *)a3 + 7);
      int v102 = *((_DWORD *)a3 + 8);
      int v104 = *((_DWORD *)a3 + 9);
      int v103 = *((_DWORD *)a3 + 10);
      int v105 = *((_DWORD *)a3 + 11);
      uint64_t buf = 68292099;
      __int16 v113 = 2082;
      v114 = "";
      __int16 v115 = 1025;
      *(_DWORD *)v116 = v94;
      *(_WORD *)&v116[4] = 1025;
      *(_DWORD *)&v116[6] = v95;
      LOWORD(v117) = 1025;
      *(_DWORD *)((char *)&v117 + 2) = v97;
      HIWORD(v117) = 1025;
      int v118 = v96;
      __int16 v119 = 1025;
      int v120 = v99;
      __int16 v121 = 1025;
      int v122 = v98;
      __int16 v123 = 1025;
      int v124 = v100;
      __int16 v125 = 1025;
      int v126 = v101;
      __int16 v127 = 1025;
      int v128 = v102;
      __int16 v129 = 1025;
      int v130 = v104;
      __int16 v131 = 1025;
      int v132 = v103;
      __int16 v133 = 1025;
      int v134 = v105;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,readBleConfigFromFailSafe\", \"isBLERelaySupported\":%{private}hhd, \"advertiseEvaluationIntervalSeconds\":%{private}d, \"discoveryEvaluationIntervalSeconds\":%{private}d, \"advertiseDurationSeconds\":%{private}d, \"minBatteryLevelForBLEActivity\":%{private}d, \"minDeviceDensityCount\":%{private}d, \"minTimeBetweenPeopleDensityQuery\":%{private}d, \"bleCBScanRate\":%{private}d, \"CBScanRateBackground\":%{private}d, \"bleCBAdvertiseRate\":%{private}d, \"bleDataVersion\":%{private}d, \"bleAdvertisementTimePrecisionInMSec\":%{private}d}", (uint8_t *)&buf, 0x5Au);
      unint64_t v17 = SALogObjectGeneral;
    }
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t buf = 68289026;
      __int16 v113 = 2082;
      v114 = "";
      unint64_t v30 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,bleConfig fail safe read\"}";
      goto LABEL_139;
    }
    goto LABEL_140;
  }
  v107 = v33;
  uint64_t v34 = [v33 objectForKey:@"SAEWBLEConfig_v2"];
  if (v34 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    id v109 = v34;
  }
  else {
    id v109 = 0;
  }

  uint64_t v36 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289026;
    __int16 v113 = 2082;
    v114 = "";
    _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,SAEWBLEConfig\"}", (uint8_t *)&buf, 0x12u);
  }
  if (!v109 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {
    uint64_t v93 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t buf = 68289026;
      __int16 v113 = 2082;
      v114 = "";
      _os_log_impl((void *)&_mh_execute_header, v93, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,bleConf dictionary Invalid\"}", (uint8_t *)&buf, 0x12u);
    }

    goto LABEL_135;
  }
  *a3 = 0;
  uint64_t v37 = [v109 objectForKey:@"isBLERelaySupported_v2"];
  if (v37)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *a3 = [v37 intValue] != 0;
    }
  }

  *((_DWORD *)a3 + 1) = 0;
  char v38 = [v109 objectForKey:@"advertiseDurationSeconds"];
  if (v38)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *((_DWORD *)a3 + 1) = [v38 intValue];
    }
  }

  *((_DWORD *)a3 + 2) = 0;
  uint64_t v39 = [v109 objectForKey:@"advertiseEvaluationIntervalSeconds"];
  if (v39)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *((_DWORD *)a3 + 2) = [v39 intValue];
    }
  }

  *((_DWORD *)a3 + 3) = 0;
  BOOL v40 = [v109 objectForKey:@"discoveryEvaluationIntervalSeconds"];
  if (v40)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *((_DWORD *)a3 + 3) = [v40 intValue];
    }
  }

  *((_DWORD *)a3 + 5) = 0;
  int v41 = [v109 objectForKey:@"minBatteryLevelForBLEActivity"];
  if (v41)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *((_DWORD *)a3 + 5) = [v41 intValue];
    }
  }

  *((_DWORD *)a3 + 4) = 0;
  BOOL v42 = [v109 objectForKey:@"minDeviceDensityCount"];
  if (v42)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *((_DWORD *)a3 + 4) = [v42 intValue];
    }
  }

  *((_DWORD *)a3 + 6) = 0;
  double v43 = [v109 objectForKey:@"minTimeBetweenPeopleDensityQuery"];
  if (v43)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *((_DWORD *)a3 + 6) = [v43 intValue];
    }
  }

  *((_DWORD *)a3 + 7) = 0;
  __int16 v44 = [v109 objectForKey:@"bleCBScanRate"];
  if (v44)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *((_DWORD *)a3 + 7) = [v44 intValue];
    }
  }

  *((_DWORD *)a3 + 8) = 0;
  uint64_t v45 = [v109 objectForKey:@"bleCBScanRateScreenOff"];
  if (v45)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *((_DWORD *)a3 + 8) = [v45 intValue];
    }
  }

  *((_DWORD *)a3 + 9) = 0;
  uint64_t v46 = [v109 objectForKey:@"bleCBAdvertiseRate"];
  if (v46)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *((_DWORD *)a3 + 9) = [v46 intValue];
    }
  }

  *((_DWORD *)a3 + 10) = 1;
  int v47 = [v109 objectForKey:@"bleDataVersion"];
  if (v47)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *((_DWORD *)a3 + 10) = [v47 intValue];
    }
  }

  *((_DWORD *)a3 + 11) = 0;
  double v48 = [v109 objectForKey:@"bleAdvertisementTimePrecisionInMSec"];
  if (v48)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *((_DWORD *)a3 + 11) = [v48 intValue];
    }
  }

  unsigned int v111 = 0;
  double v49 = sub_10006B474();
  id v110 = 0;
  sub_10006D054((uint64_t)v49, v109, @"bleFanout", &v111, &v110);
  id v50 = v110;
  if (v111)
  {
    unint64_t v51 = 0;
    uint64_t v52 = (void **)(a3 + 48);
    uint64_t v106 = (uint64_t)(a3 + 64);
    do
    {
      int v53 = [v50 objectAtIndex:v51, v106];
      if (v53 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        __int16 v54 = [v53 objectForKey:@"fanoutMinDensity"];
        double v55 = -1.0;
        if (v54)
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            [v54 doubleValue];
            double v55 = v56;
          }
        }

        uint64_t v57 = [v53 objectForKey:@"fanoutPercent"];
        double v58 = -1.0;
        if (v57)
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            [v57 doubleValue];
            double v58 = v59;
          }
        }

        float v60 = v55;
        float v61 = v58;
        uint64_t v63 = (float *)*((void *)a3 + 7);
        unint64_t v62 = *((void *)a3 + 8);
        if ((unint64_t)v63 >= v62)
        {
          __int16 v66 = (float *)*v52;
          uint64_t v67 = ((char *)v63 - (unsigned char *)*v52) >> 3;
          unint64_t v68 = v67 + 1;
          if ((unint64_t)(v67 + 1) >> 61) {
            sub_1000050E8();
          }
          uint64_t v69 = v62 - (void)v66;
          if (v69 >> 2 > v68) {
            unint64_t v68 = v69 >> 2;
          }
          if ((unint64_t)v69 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v70 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v70 = v68;
          }
          if (v70)
          {
            unsigned int v71 = (char *)sub_100017660(v106, v70);
            __int16 v66 = (float *)*((void *)a3 + 6);
            uint64_t v63 = (float *)*((void *)a3 + 7);
          }
          else
          {
            unsigned int v71 = 0;
          }
          __int16 v72 = (float *)&v71[8 * v67];
          *__int16 v72 = v60;
          v72[1] = v61;
          BOOL v73 = v72;
          if (v63 != v66)
          {
            do
            {
              uint64_t v74 = *((void *)v63 - 1);
              v63 -= 2;
              *((void *)v73 - 1) = v74;
              v73 -= 2;
            }
            while (v63 != v66);
            __int16 v66 = (float *)*v52;
          }
          __int16 v64 = v72 + 2;
          *((void *)a3 + 6) = v73;
          *((void *)a3 + 7) = v72 + 2;
          *((void *)a3 + 8) = &v71[8 * v70];
          if (v66) {
            operator delete(v66);
          }
        }
        else
        {
          *uint64_t v63 = v60;
          v63[1] = v61;
          __int16 v64 = v63 + 2;
        }
        *((void *)a3 + 7) = v64;
      }
      else
      {
        uint64_t v65 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t buf = 68289026;
          __int16 v113 = 2082;
          v114 = "";
          _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,bleConf dictionary Invalid\"}", (uint8_t *)&buf, 0x12u);
        }
      }

      ++v51;
    }
    while (v51 < v111);
  }
  int v75 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v76 = *a3;
    int v78 = *((_DWORD *)a3 + 1);
    int v77 = *((_DWORD *)a3 + 2);
    int v79 = *((_DWORD *)a3 + 3);
    int v80 = *((_DWORD *)a3 + 4);
    int v81 = *((_DWORD *)a3 + 5);
    int v82 = *((_DWORD *)a3 + 6);
    int v83 = *((_DWORD *)a3 + 7);
    int v84 = *((_DWORD *)a3 + 8);
    int v86 = *((_DWORD *)a3 + 9);
    int v85 = *((_DWORD *)a3 + 10);
    int v87 = *((_DWORD *)a3 + 11);
    uint64_t buf = 68292099;
    __int16 v113 = 2082;
    v114 = "";
    __int16 v115 = 1025;
    *(_DWORD *)v116 = v76;
    *(_WORD *)&v116[4] = 1025;
    *(_DWORD *)&v116[6] = v77;
    LOWORD(v117) = 1025;
    *(_DWORD *)((char *)&v117 + 2) = v79;
    HIWORD(v117) = 1025;
    int v118 = v78;
    __int16 v119 = 1025;
    int v120 = v81;
    __int16 v121 = 1025;
    int v122 = v80;
    __int16 v123 = 1025;
    int v124 = v82;
    __int16 v125 = 1025;
    int v126 = v83;
    __int16 v127 = 1025;
    int v128 = v84;
    __int16 v129 = 1025;
    int v130 = v86;
    __int16 v131 = 1025;
    int v132 = v85;
    __int16 v133 = 1025;
    int v134 = v87;
    _os_log_impl((void *)&_mh_execute_header, v75, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,readBleConfigFromFile\", \"isBLERelaySupported\":%{private}hhd, \"advertiseEvaluationIntervalSeconds\":%{private}d, \"discoveryEvaluationIntervalSeconds\":%{private}d, \"advertiseDurationSeconds\":%{private}d, \"minBatteryLevelForBLEActivity\":%{private}d, \"minDeviceDensityCount\":%{private}d, \"minTimeBetweenPeopleDensityQuery\":%{private}d, \"bleCBScanRate\":%{private}d, \"bleCBScanRateScreenOff\":%{private}d, \"bleCBAdvertiseRate\":%{private}d, \"bleDataVersion\":%{private}d, \"bleAdvertisementTimePrecisionInMSec\":%{private}d}", (uint8_t *)&buf, 0x5Au);
  }
  uint64_t v88 = (float *)*((void *)a3 + 6);
  uint64_t v89 = (float *)*((void *)a3 + 7);
  if (v88 != v89)
  {
    uint64_t v90 = SALogObjectGeneral;
    do
    {
      if (os_log_type_enabled(v90, OS_LOG_TYPE_DEFAULT))
      {
        double v91 = *v88;
        double v92 = v88[1];
        uint64_t buf = 68289539;
        __int16 v113 = 2082;
        v114 = "";
        __int16 v115 = 2049;
        *(double *)v116 = v91;
        *(_WORD *)&v116[8] = 2049;
        double v117 = v92;
        _os_log_impl((void *)&_mh_execute_header, v90, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SALBAssetConfig,readBleConfigFromFile\", \"first\":\"%{private}3f\", \"second\":\"%{private}3f\"}", (uint8_t *)&buf, 0x26u);
        uint64_t v90 = SALogObjectGeneral;
      }
      v88 += 2;
    }
    while (v88 != v89);
  }

  unint64_t v17 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289026;
    __int16 v113 = 2082;
    v114 = "";
    unint64_t v30 = "{\"msg%{public}.0s\":\"#SALBAssetConfig,bleConfig MA file read\"}";
    goto LABEL_139;
  }
LABEL_140:
}

void sub_10001D00C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10001D258(uint64_t *a1, long long *a2)
{
  unint64_t v3 = a1[1];
  if (v3 >= a1[2])
  {
    uint64_t result = sub_100004F4C(a1, a2);
  }
  else
  {
    sub_100004EEC(a1, a2);
    uint64_t result = v3 + 24;
  }
  a1[1] = result;
  return result;
}

void sub_10001D298(int64x2_t *a1, uint64_t a2)
{
  unint64_t v6 = a1[1].u64[0];
  uint64_t i64 = (uint64_t)a1[1].i64;
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(i64 - 8);
  if (v7 >= v6)
  {
    unint64_t v9 = 0xAF8AF8AF8AF8AF8BLL * ((uint64_t)(v7 - a1->i64[0]) >> 3);
    if (v9 + 1 > 0xEA0EA0EA0EA0EALL) {
      sub_1000050E8();
    }
    unint64_t v10 = 0xAF8AF8AF8AF8AF8BLL * ((uint64_t)(v5 - a1->i64[0]) >> 3);
    uint64_t v11 = 2 * v10;
    if (2 * v10 <= v9 + 1) {
      uint64_t v11 = v9 + 1;
    }
    if (v10 >= 0x75075075075075) {
      unint64_t v12 = 0xEA0EA0EA0EA0EALL;
    }
    else {
      unint64_t v12 = v11;
    }
    uint64_t v23 = i64;
    if (v12) {
      __int16 v13 = (char *)sub_10001DC5C(i64, v12);
    }
    else {
      __int16 v13 = 0;
    }
    unint64_t v14 = &v13[280 * v12];
    sub_10001DB50((uint64_t)&v13[280 * v9], a2);
    unint64_t v8 = v15 + 280;
    uint64_t v17 = a1->i64[0];
    unint64_t v16 = a1->u64[1];
    if (v16 == a1->i64[0])
    {
      int64x2_t v18 = vdupq_n_s64(v16);
    }
    else
    {
      do
      {
        v16 -= 280;
        sub_10001DB50(v15 - 280, v16);
      }
      while (v16 != v17);
      int64x2_t v18 = *a1;
    }
    a1->i64[0] = v15;
    a1->i64[1] = v8;
    int64x2_t v21 = v18;
    uint64_t v19 = a1[1].i64[0];
    a1[1].i64[0] = (uint64_t)v14;
    uint64_t v22 = v19;
    uint64_t v20 = v18.i64[0];
    sub_10001DCA8((uint64_t)&v20);
  }
  else
  {
    sub_10001DB50(*(void *)(i64 - 8), a2);
    unint64_t v8 = v7 + 280;
  }
  a1->i64[1] = v8;
}

void sub_10001D3F0(void **a1, void *a2)
{
  unint64_t v6 = (unint64_t)a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void **)(v4 - 8);
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v9 = ((char *)v7 - (unsigned char *)*a1) >> 3;
    if ((unint64_t)(v9 + 1) >> 61) {
      sub_1000050E8();
    }
    uint64_t v10 = v5 - (void)*a1;
    uint64_t v11 = v10 >> 2;
    if (v10 >> 2 <= (unint64_t)(v9 + 1)) {
      uint64_t v11 = v9 + 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    if (v12) {
      __int16 v13 = (char *)sub_100017660(v4, v12);
    }
    else {
      __int16 v13 = 0;
    }
    unint64_t v14 = &v13[8 * v9];
    uint64_t v15 = &v13[8 * v12];
    *(void *)unint64_t v14 = *a2;
    unint64_t v8 = v14 + 8;
    uint64_t v17 = (char *)*a1;
    unint64_t v16 = (char *)a1[1];
    if (v16 != *a1)
    {
      do
      {
        uint64_t v18 = *((void *)v16 - 1);
        v16 -= 8;
        *((void *)v14 - 1) = v18;
        v14 -= 8;
      }
      while (v16 != v17);
      unint64_t v16 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v8;
    a1[2] = v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    void *v7 = *a2;
    unint64_t v8 = v7 + 1;
  }
  a1[1] = v8;
}

void sub_10001D4D0(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = a1;
  id v4 = v3;
  if (v3)
  {
    sub_10000DD48(a2, (char *)[v3 UTF8String]);
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
}

void sub_10001D53C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10001D54C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_100004CB8((unsigned char *)(a1 + 8), *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
  }
  if (*(char *)(a2 + 55) < 0)
  {
    sub_100004CB8((unsigned char *)(a1 + 32), *(void **)(a2 + 32), *(void *)(a2 + 40));
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v5;
  }
  if (*(char *)(a2 + 79) < 0)
  {
    sub_100004CB8((unsigned char *)(a1 + 56), *(void **)(a2 + 56), *(void *)(a2 + 64));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = v6;
  }
  if (*(char *)(a2 + 103) < 0)
  {
    sub_100004CB8((unsigned char *)(a1 + 80), *(void **)(a2 + 80), *(void *)(a2 + 88));
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = v7;
  }
  long long v8 = *(_OWORD *)(a2 + 136);
  long long v9 = *(_OWORD *)(a2 + 152);
  long long v10 = *(_OWORD *)(a2 + 168);
  int v11 = *(_DWORD *)(a2 + 184);
  long long v12 = *(_OWORD *)(a2 + 104);
  long long v13 = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 192) = 0;
  *(_OWORD *)(a1 + 120) = v13;
  *(_OWORD *)(a1 + 104) = v12;
  *(_DWORD *)(a1 + 184) = v11;
  *(_OWORD *)(a1 + 168) = v10;
  *(_OWORD *)(a1 + 152) = v9;
  *(_OWORD *)(a1 + 136) = v8;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  sub_10001D7A0((void *)(a1 + 192), *(const void **)(a2 + 192), *(void *)(a2 + 200), (uint64_t)(*(void *)(a2 + 200) - *(void *)(a2 + 192)) >> 2);
  uint64_t v14 = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 216) = v14;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  sub_10001D898((char *)(a1 + 224), *(long long **)(a2 + 224), *(long long **)(a2 + 232), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 3));
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 256) = 0;
  sub_10001D898((char *)(a1 + 256), *(long long **)(a2 + 256), *(long long **)(a2 + 264), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 264) - *(void *)(a2 + 256)) >> 3));
  return a1;
}

void sub_10001D710(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (v11[79] < 0) {
    operator delete(*v13);
  }
  if (v11[55] < 0) {
    operator delete(*v12);
  }
  if (v11[31] < 0) {
    operator delete(*v10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10001D7A0(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    uint64_t result = sub_10001D81C(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_10001D800(_Unwind_Exception *exception_object)
{
  id v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_10001D81C(void *a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_1000050E8();
  }
  uint64_t result = (char *)sub_10001D860((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void *sub_10001D860(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_100004E00();
  }
  return operator new(4 * a2);
}

char *sub_10001D898(char *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    sub_10001D920(result, a4);
    uint64_t result = sub_10001D974((uint64_t)(v6 + 16), a2, a3, *((char **)v6 + 1));
    *((void *)v6 + 1) = result;
  }
  return result;
}

void sub_10001D900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_100005360(&a9);
  _Unwind_Resume(a1);
}

char *sub_10001D920(void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_1000050E8();
  }
  uint64_t result = (char *)sub_100005100((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

char *sub_10001D974(uint64_t a1, long long *a2, long long *a3, char *__dst)
{
  uint64_t v4 = __dst;
  int v11 = __dst;
  long long v12 = __dst;
  v9[0] = a1;
  v9[1] = &v11;
  _DWORD v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    long long v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_100004CB8(v4, *(void **)v6, *((void *)v6 + 1));
        uint64_t v4 = v12;
      }
      else
      {
        long long v7 = *v6;
        *((void *)v4 + 2) = *((void *)v6 + 2);
        *(_OWORD *)uint64_t v4 = v7;
      }
      long long v6 = (long long *)((char *)v6 + 24);
      v4 += 24;
      long long v12 = v4;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  sub_10001DA34((uint64_t)v9);
  return v4;
}

void sub_10001DA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10001DA34(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_10001DA6C(a1);
  }
  return a1;
}

void sub_10001DA6C(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 1) < 0) {
      operator delete(*(void **)(v1 - 24));
    }
    v1 -= 24;
  }
}

uint64_t sub_10001DAB4(uint64_t a1)
{
  uint64_t v4 = (void **)(a1 + 256);
  sub_100005360(&v4);
  uint64_t v4 = (void **)(a1 + 224);
  sub_100005360(&v4);
  uint64_t v2 = *(void **)(a1 + 192);
  if (v2)
  {
    *(void *)(a1 + 200) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

__n128 sub_10001DB50(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v2;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 8) = 0;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v3;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 32) = 0;
  long long v4 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v4;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 56) = 0;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = v5;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = 0;
  int v6 = *(_DWORD *)(a2 + 184);
  long long v7 = *(_OWORD *)(a2 + 168);
  long long v8 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v8;
  *(_OWORD *)(a1 + 168) = v7;
  *(_DWORD *)(a1 + 184) = v6;
  long long v9 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v9;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 192) = 0;
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a2 + 200) = 0;
  *(void *)(a2 + 208) = 0;
  *(void *)(a2 + 192) = 0;
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 224) = 0;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a2 + 232) = 0;
  *(void *)(a2 + 240) = 0;
  *(void *)(a2 + 224) = 0;
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 256) = 0;
  __n128 result = *(__n128 *)(a2 + 256);
  *(__n128 *)(a1 + 256) = result;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a2 + 256) = 0;
  *(void *)(a2 + 264) = 0;
  *(void *)(a2 + 272) = 0;
  return result;
}

void *sub_10001DC5C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xEA0EA0EA0EA0EBLL) {
    sub_100004E00();
  }
  return operator new(280 * a2);
}

uint64_t sub_10001DCA8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 280;
    sub_10001DAB4(i - 280);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

std::string *sub_10001DCF8(std::string *__dst, const std::string::value_type *__src, size_t __len)
{
  LODWORD(v6) = SHIBYTE(__dst->__r_.__value_.__r.__words[2]);
  if ((v6 & 0x80000000) != 0)
  {
    unint64_t v10 = __dst->__r_.__value_.__r.__words[2];
    std::string::size_type v9 = (v10 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if (v9 < __len)
    {
      std::string::size_type size = __dst->__r_.__value_.__l.__size_;
      goto LABEL_6;
    }
    unint64_t v6 = HIBYTE(v10);
    long long v7 = (std::string *)__dst->__r_.__value_.__r.__words[0];
  }
  else
  {
    long long v7 = __dst;
    if (__len > 0x16)
    {
      std::string::size_type size = HIBYTE(__dst->__r_.__value_.__r.__words[2]);
      std::string::size_type v9 = 22;
LABEL_6:
      std::string::__grow_by_and_replace(__dst, v9, __len - v9, size, 0, size, __len, __src);
      return __dst;
    }
  }
  if (__len)
  {
    memmove(v7, __src, __len);
    LOBYTE(v6) = *((unsigned char *)&__dst->__r_.__value_.__s + 23);
  }
  if ((v6 & 0x80) != 0) {
    __dst->__r_.__value_.__l.__size_ = __len;
  }
  else {
    *((unsigned char *)&__dst->__r_.__value_.__s + 23) = __len & 0x7F;
  }
  v7->__r_.__value_.__s.__data_[__len] = 0;
  return __dst;
}

void sub_10001DDB8(void *a1)
{
  if (*((unsigned char *)sub_10003E368() + 245)) {
    operator new();
  }
  operator new();
}

void sub_10001DE64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10001DE84()
{
}

uint64_t sub_10001DE98()
{
  return 0;
}

uint64_t sub_10001DEA0()
{
  return 0;
}

CFDataRef sub_10001DEB0(std::string *__str)
{
  std::string::size_type size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) != 0) {
    std::string::size_type size = __str->__r_.__value_.__l.__size_;
  }
  if (!size) {
    return 0;
  }
  unint64_t v3 = 0;
  long long v4 = 0;
  long long v5 = 0;
  for (std::string::size_type i = 0; i < v16; i += 2)
  {
    std::string::basic_string(&__p, __str, i, 2uLL, (std::allocator<char> *)&v20);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    char v8 = strtol((const char *)p_p, 0, 16);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v5 >= v4)
    {
      uint64_t v9 = (uint64_t)&v5[-v3 + 1];
      if (v9 < 0) {
        sub_1000050E8();
      }
      if (2 * (uint64_t)&v4[-v3] > (unint64_t)v9) {
        uint64_t v9 = 2 * (void)&v4[-v3];
      }
      if ((unint64_t)&v4[-v3] >= 0x3FFFFFFFFFFFFFFFLL) {
        size_t v10 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        size_t v10 = v9;
      }
      if (v10) {
        int v11 = (char *)operator new(v10);
      }
      else {
        int v11 = 0;
      }
      long long v12 = &v5[(void)v11 - v3];
      *long long v12 = v8;
      long long v13 = v12 + 1;
      if (v5 != (char *)v3)
      {
        uint64_t v14 = &v5[~v3];
        do
        {
          char v15 = *--v5;
          (v14--)[(void)v11] = v15;
        }
        while (v5 != (char *)v3);
        long long v12 = v11;
      }
      long long v4 = &v11[v10];
      if (v3) {
        operator delete((void *)v3);
      }
      unint64_t v3 = (unint64_t)v12;
      long long v5 = v13;
    }
    else
    {
      *v5++ = v8;
    }
    std::string::size_type v16 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
    if ((v16 & 0x80u) != 0) {
      std::string::size_type v16 = __str->__r_.__value_.__l.__size_;
    }
  }
  CFDataRef v17 = CFDataCreate(kCFAllocatorDefault, (const UInt8 *)v3, (CFIndex)&v5[-v3]);
  if (v3) {
    operator delete((void *)v3);
  }
  return v17;
}

void sub_10001E064(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10001E088(void *a1)
{
  long long v2 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = a1[1];
    uint64_t v3 = a1[2];
    uint64_t v5 = a1[3];
    int v6 = *(unsigned __int8 *)a1;
    v7[0] = 68290307;
    v7[1] = 0;
    __int16 v8 = 2082;
    uint64_t v9 = "";
    __int16 v10 = 2113;
    uint64_t v11 = v4;
    __int16 v12 = 2049;
    uint64_t v13 = v3;
    __int16 v14 = 2049;
    uint64_t v15 = v5;
    __int16 v16 = 1025;
    int v17 = v6;
    __int16 v18 = 1025;
    int v19 = sub_10001E38C((uint64_t)a1);
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pk,log\", \"key\":%{private, location:escape_only}@, \"effective\":\"%{private}.1f\", \"expires\":\"%{private}.1f\", \"parseSuccessful\":%{private}hhd, \"isValid\":%{private}hhd}", (uint8_t *)v7, 0x3Cu);
  }
}

void sub_10001E1A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10001E1B8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 16) = _Q0;
  uint64_t v9 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v11[0] = 68289026;
    v11[1] = 0;
    __int16 v12 = 2082;
    uint64_t v13 = "";
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pk,copy constructor\"}", (uint8_t *)v11, 0x12u);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = CFDataCreateCopy(kCFAllocatorDefault, *(CFDataRef *)(a2 + 8));
  return a1;
}

uint64_t sub_10001E2B8(uint64_t a1)
{
  long long v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289026;
    v5[1] = 0;
    __int16 v6 = 2082;
    long long v7 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pk,released\"}", (uint8_t *)v5, 0x12u);
  }
  uint64_t v3 = *(const void **)(a1 + 8);
  if (v3) {
    CFRelease(v3);
  }
  return a1;
}

void sub_10001E380(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100004CA4(a1);
}

uint64_t sub_10001E38C(uint64_t a1)
{
  if (!*(unsigned char *)a1)
  {
    uint64_t v11 = SALogObjectGeneral;
    BOOL v12 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (!v12) {
      return result;
    }
    int v13 = 68289026;
    int v14 = 0;
    __int16 v15 = 2082;
    __int16 v16 = "";
    __int16 v8 = "{\"msg%{public}.0s\":\"#pk,isValid,parse not successfull\"}";
    uint64_t v9 = v11;
    uint32_t v10 = 18;
    goto LABEL_8;
  }
  double Current = CFAbsoluteTimeGetCurrent();
  double v3 = *(double *)(a1 + 16);
  if (Current < v3 || Current > *(double *)(a1 + 24))
  {
    uint64_t v4 = SALogObjectGeneral;
    BOOL v5 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (!v5) {
      return result;
    }
    uint64_t v7 = *(void *)(a1 + 24);
    int v13 = 68289795;
    int v14 = 0;
    __int16 v15 = 2082;
    __int16 v16 = "";
    __int16 v17 = 2049;
    double v18 = v3;
    __int16 v19 = 2049;
    uint64_t v20 = v7;
    __int16 v21 = 2049;
    double v22 = Current;
    __int16 v8 = "{\"msg%{public}.0s\":\"#pk,isValid,out of range\", \"effective\":\"%{private}0.1f\", \"expires\":\"%{private}0."
         "1f\", \"now\":\"%{private}0.1f\"}";
    uint64_t v9 = v4;
    uint32_t v10 = 48;
LABEL_8:
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v8, (uint8_t *)&v13, v10);
    return 0;
  }
  return 1;
}

void sub_10001E514(unsigned __int8 *a1)
{
  long long v2 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    double v3 = a1 + 24;
    if ((char)a1[47] < 0) {
      double v3 = (void *)*v3;
    }
    int v5 = *((_DWORD *)a1 + 18);
    int v4 = *((_DWORD *)a1 + 19);
    uint64_t v7 = *((void *)a1 + 6);
    uint64_t v6 = *((void *)a1 + 7);
    uint64_t v9 = *((void *)a1 + 1);
    uint64_t v8 = *((void *)a1 + 2);
    int v10 = *a1;
    v11[0] = 68291075;
    v11[1] = 0;
    __int16 v12 = 2082;
    int v13 = "";
    __int16 v14 = 2081;
    __int16 v15 = v3;
    __int16 v16 = 1025;
    int v17 = v5;
    __int16 v18 = 1025;
    int v19 = v4;
    __int16 v20 = 1025;
    int v21 = (unint64_t)(v6 - v7) >> 5;
    __int16 v22 = 2049;
    uint64_t v23 = v9;
    __int16 v24 = 2049;
    uint64_t v25 = v8;
    __int16 v26 = 1025;
    int v27 = v10;
    __int16 v28 = 1025;
    int v29 = sub_10001E688((uint64_t)a1);
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#cob,log\", \"uid\":%{private, location:escape_only}s, \"contentVersion\":%{private}d, \"compatibilityVersion\":%{private}d, \"numKeys\":%{private}d, \"effective\":\"%{private}.1f\", \"expires\":\"%{private}.1f\", \"parseSuccessful\":%{private}hhd, \"isValid\":%{private}hhd}", (uint8_t *)v11, 0x4Eu);
  }
}

void sub_10001E670(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10001E688(uint64_t a1)
{
  if (!*(unsigned char *)a1)
  {
    uint64_t v11 = SALogObjectGeneral;
    BOOL v12 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (!v12) {
      return result;
    }
    int v14 = 68289026;
    int v15 = 0;
    __int16 v16 = 2082;
    int v17 = "";
    uint64_t v8 = "{\"msg%{public}.0s\":\"#cob,isValid,parse failed\"}";
    goto LABEL_8;
  }
  double Current = CFAbsoluteTimeGetCurrent();
  double v3 = *(double *)(a1 + 8);
  if (Current < v3 || Current > *(double *)(a1 + 16))
  {
    uint64_t v4 = SALogObjectGeneral;
    BOOL v5 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (!v5) {
      return result;
    }
    uint64_t v7 = *(void *)(a1 + 16);
    int v14 = 68289795;
    int v15 = 0;
    __int16 v16 = 2082;
    int v17 = "";
    __int16 v18 = 2049;
    double v19 = v3;
    __int16 v20 = 2049;
    uint64_t v21 = v7;
    __int16 v22 = 2049;
    double v23 = Current;
    uint64_t v8 = "{\"msg%{public}.0s\":\"#cob,isValid,out of range\", \"effective\":\"%{private}0.1f\", \"expires\":\"%{private}0"
         ".1f\", \"now\":\"%{private}0.1f\"}";
    uint64_t v9 = v4;
    uint32_t v10 = 48;
    goto LABEL_9;
  }
  if (*(void *)(a1 + 48) != *(void *)(a1 + 56)) {
    return 1;
  }
  uint64_t v11 = SALogObjectGeneral;
  BOOL v13 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  uint64_t result = 0;
  if (v13)
  {
    int v14 = 68289026;
    int v15 = 0;
    __int16 v16 = 2082;
    int v17 = "";
    uint64_t v8 = "{\"msg%{public}.0s\":\"#cob,isValid,empty public keys\"}";
LABEL_8:
    uint64_t v9 = v11;
    uint32_t v10 = 18;
LABEL_9:
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v8, (uint8_t *)&v14, v10);
    return 0;
  }
  return result;
}

uint64_t *sub_10001E878()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_100106840, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_100106840))
  {
    sub_10001E9E8();
  }
  return &qword_100106848;
}

void sub_10001E8F0(_Unwind_Exception *a1)
{
}

uint64_t sub_10001E908(uint64_t a1)
{
  long long v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289026;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,released\"}", (uint8_t *)v5, 0x12u);
  }
  sub_100021F60((id **)(a1 + 16), 0);
  uint64_t v3 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v3) {
    sub_100021EF4(v3);
  }

  return a1;
}

void sub_10001E9E8()
{
  qword_100106850 = 0;
  qword_100106858 = 0;
  qword_100106848 = 0;
  v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v1[0] = 68289026;
    v1[1] = 0;
    __int16 v2 = 2082;
    uint64_t v3 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,initialized\"}", (uint8_t *)v1, 0x12u);
  }
  operator new();
}

void sub_10001EB68(_Unwind_Exception *a1)
{
  sub_100021F60(&qword_100106858, 0);
  uint64_t v2 = qword_100106850;
  qword_100106850 = 0;
  if (v2) {
    sub_100021EF4(v2);
  }

  _Unwind_Resume(a1);
}

void sub_10001EBB0(SAPlatformInfo *a1)
{
  if (sub_1000838E4(a1))
  {
    sub_10001F164((uint64_t)&__p);
    int v1 = v28;
    int v2 = (char)v28;
    if ((v28 & 0x80u) == 0) {
      uint64_t v3 = v28;
    }
    else {
      uint64_t v3 = v27;
    }
    uint64_t v4 = SALogObjectGeneral;
    BOOL v5 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    if (v3)
    {
      if (v5)
      {
        p_p = __p;
        if (v2 >= 0) {
          p_p = &__p;
        }
        *(_DWORD *)uint64_t buf = 68289283;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v30 = 2082;
        char v31 = "";
        __int16 v32 = 2081;
        id v33 = p_p;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,loadCodebook\", \"filePath\":%{private, location:escape_only}s}", buf, 0x1Cu);
        int v1 = v28;
      }
      if ((v1 & 0x80) != 0)
      {
        if (v27)
        {
          uint64_t v7 = __p;
LABEL_19:
          BOOL v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v7, +[NSString defaultCStringEncoding]);
          if (!v12)
          {
            __int16 v20 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v21 = &__p;
              if ((v28 & 0x80u) != 0) {
                uint64_t v21 = __p;
              }
              *(_DWORD *)uint64_t buf = 68289283;
              *(_DWORD *)&uint8_t buf[4] = 0;
              __int16 v30 = 2082;
              char v31 = "";
              __int16 v32 = 2081;
              id v33 = v21;
              _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,loadCodebook,path not derived\", \"filePath\":%{private, location:escape_only}s}", buf, 0x1Cu);
            }
            goto LABEL_40;
          }
          BOOL v13 = +[NSData dataWithContentsOfFile:v12];
          if (!v13)
          {
            __int16 v22 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              double v23 = &__p;
              if ((v28 & 0x80u) != 0) {
                double v23 = __p;
              }
              *(_DWORD *)uint64_t buf = 68289283;
              *(_DWORD *)&uint8_t buf[4] = 0;
              __int16 v30 = 2082;
              char v31 = "";
              __int16 v32 = 2081;
              id v33 = v23;
              _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,loadCodebook,read failed\", \"filePath\":%{private, location:escape_only}s}", buf, 0x1Cu);
            }
            goto LABEL_39;
          }
          v25[0] = 0;
          int v14 = +[NSJSONSerialization JSONObjectWithData:v13 options:0 error:v25];
          id v15 = v25[0];
          v25[1] = v14;
          if (v15)
          {
            __int16 v16 = SALogObjectGeneral;
            if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
LABEL_25:

LABEL_39:
LABEL_40:

LABEL_41:
              if ((char)v28 < 0) {
                operator delete(__p);
              }
              return;
            }
            *(_DWORD *)uint64_t buf = 68289283;
            *(_DWORD *)&uint8_t buf[4] = 0;
            __int16 v30 = 2082;
            char v31 = "";
            __int16 v32 = 2113;
            id v33 = v15;
            int v17 = "{\"msg%{public}.0s\":\"#aa,loadCodebook,error converting to dict\", \"error\":%{private, location:escape_only}@}";
          }
          else
          {
            if (v14) {
              sub_10001F364();
            }
            __int16 v16 = SALogObjectGeneral;
            if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
              goto LABEL_25;
            }
            __int16 v24 = &__p;
            if ((v28 & 0x80u) != 0) {
              __int16 v24 = __p;
            }
            *(_DWORD *)uint64_t buf = 68289283;
            *(_DWORD *)&uint8_t buf[4] = 0;
            __int16 v30 = 2082;
            char v31 = "";
            __int16 v32 = 2081;
            id v33 = v24;
            int v17 = "{\"msg%{public}.0s\":\"#aa,loadCodebook,codebook dict empty\", \"filePath\":%{private, location:escape_only}s}";
          }
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, v17, buf, 0x1Cu);
          goto LABEL_25;
        }
      }
      else if (v1)
      {
        uint64_t v7 = &__p;
        goto LABEL_19;
      }
      uint64_t v18 = SALogObjectGeneral;
      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_41;
      }
      double v19 = &__p;
      if ((v1 & 0x80u) != 0) {
        double v19 = __p;
      }
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v30 = 2082;
      char v31 = "";
      __int16 v32 = 2081;
      id v33 = v19;
      uint64_t v9 = "{\"msg%{public}.0s\":\"#aa,loadCodebook,invalid path\", \"filePath\":%{private, location:escape_only}s}";
      uint32_t v10 = v18;
      uint32_t v11 = 28;
    }
    else
    {
      if (!v5) {
        goto LABEL_41;
      }
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v30 = 2082;
      char v31 = "";
      uint64_t v9 = "{\"msg%{public}.0s\":\"#aa,loadCodebook,empty file path\"}";
      uint32_t v10 = v4;
      uint32_t v11 = 18;
    }
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, v9, buf, v11);
    goto LABEL_41;
  }
  uint64_t v8 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v30 = 2082;
    char v31 = "";
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,loadCodebook,not supported\"}", buf, 0x12u);
  }
}

void sub_10001F118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10001F164(uint64_t a1)
{
  int v2 = sub_10006B474();
  if (v2[119] < 0)
  {
    sub_100004CB8(__p, *((void **)v2 + 12), *((void *)v2 + 13));
  }
  else
  {
    *(_OWORD *)std::string __p = *((_OWORD *)v2 + 6);
    uint64_t v12 = *((void *)v2 + 14);
  }
  sub_10000DD48((void *)a1, "");
  uint64_t v3 = (void *)HIBYTE(v12);
  if (v12 < 0) {
    uint64_t v3 = __p[1];
  }
  if (v3)
  {
    sub_10000DD48(&v13, "/var/mobile/Library/com.apple.safetyalerts/");
    if (v12 >= 0) {
      uint64_t v4 = __p;
    }
    else {
      uint64_t v4 = (void **)__p[0];
    }
    if (v12 >= 0) {
      std::string::size_type v5 = HIBYTE(v12);
    }
    else {
      std::string::size_type v5 = (std::string::size_type)__p[1];
    }
    __int16 v6 = std::string::append(&v13, (const std::string::value_type *)v4, v5);
    std::string::size_type v7 = v6->__r_.__value_.__r.__words[0];
    v14[0] = v6->__r_.__value_.__l.__size_;
    *(void *)((char *)v14 + 7) = *(std::string::size_type *)((char *)&v6->__r_.__value_.__r.__words[1] + 7);
    char v8 = HIBYTE(v6->__r_.__value_.__r.__words[2]);
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    uint64_t v9 = v14[0];
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 15) = *(void *)((char *)v14 + 7);
    *(unsigned char *)(a1 + 23) = v8;
    if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v13.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint32_t v10 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v13.__r_.__value_.__r.__words[0] = 68289026;
      LOWORD(v13.__r_.__value_.__r.__words[1]) = 2082;
      *(std::string::size_type *)((char *)&v13.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,downloadCodebook,empty codebook file name\"}", (uint8_t *)&v13, 0x12u);
    }
  }
  if (SHIBYTE(v12) < 0) {
    operator delete(__p[0]);
  }
}

void sub_10001F310(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
}

void sub_10001F364()
{
}

void sub_1000200A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,void **a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void **a29,uint64_t a30,void **a31)
{
  a31 = a24;
  sub_100021DEC(&a31);
  if (*(char *)(v31 + 47) < 0) {
    operator delete(*a29);
  }

  operator delete();
}

uint64_t sub_1000202A8(SAPlatformInfo *a1, uint64_t a2, uint64_t a3)
{
  if (sub_1000838E4(a1))
  {
    uint64_t v6 = *(unsigned __int8 *)(a2 + 23);
    if ((v6 & 0x80u) != 0) {
      uint64_t v6 = *(void *)(a2 + 8);
    }
    if (v6)
    {
      if (*(char *)(a3 + 23) < 0)
      {
        unint64_t v11 = *(void *)(a3 + 8);
        if (v11)
        {
          sub_100004CB8(bytes, *(void **)a3, v11);
LABEL_12:
          if (SHIBYTE(v46) < 0)
          {
            CFIndex v12 = (CFIndex)bytes[1];
            if (bytes[1])
            {
              std::string v13 = bytes[0];
LABEL_22:
              CFDataRef v15 = CFDataCreate(kCFAllocatorDefault, v13, v12);
              if (v15)
              {
                CFDataRef v16 = v15;
                if (CC_SHA224([(__CFData *)v16 bytes], (CC_LONG)[(__CFData *)v16 length], (unsigned __int8 *)&buf))
                {
                  CFDataRef v17 = CFDataCreate(kCFAllocatorDefault, (const UInt8 *)&buf, 28);
                  if (v17)
                  {
LABEL_37:

LABEL_38:
                    if (SHIBYTE(v46) < 0) {
                      operator delete(bytes[0]);
                    }
                    CFDataRef v22 = sub_10001DEB0((std::string *)a2);
                    CFDataRef v23 = v22;
                    if (v17 && v22)
                    {
                      uint64_t v24 = *((void *)a1 + 1);
                      if (v24)
                      {
                        uint64_t v25 = *(void *)(v24 + 48);
                        uint64_t v26 = *(void *)(v24 + 56);
                        if (v25 != v26)
                        {
                          CFStringRef v27 = kSecAttrKeyType;
                          do
                          {
                            sub_10001E1B8((uint64_t)v48, v25);
                            if ((sub_10001E38C((uint64_t)v48) & 1) == 0) {
                              goto LABEL_67;
                            }
                            CFDataRef v28 = (const __CFData *)v50[0];
                            int v29 = SALogObjectGeneral;
                            BOOL v30 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
                            if (v28)
                            {
                              if (v30)
                              {
                                uint64_t buf = 68289795;
                                __int16 v54 = 2082;
                                double v55 = "";
                                __int16 v56 = 2113;
                                CFDataRef v57 = v23;
                                __int16 v58 = 2113;
                                CFDataRef v59 = v17;
                                __int16 v60 = 2113;
                                CFDataRef v61 = v28;
                                _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,isSignatureValidInternal\", \"signature\":%{private, location:escape_only}@, \"dataHash\":%{private, location:escape_only}@, \"publicKeyData\":%{private, location:escape_only}@}", (uint8_t *)&buf, 0x30u);
                              }
                              v51[0] = v27;
                              v51[1] = kSecAttrKeyClass;
                              v52[0] = kSecAttrKeyTypeEC;
                              v52[1] = kSecAttrKeyClassPublic;
                              v51[2] = kSecAttrKeySizeInBits;
                              v52[2] = &off_1000FFFF0;
                              uint64_t v31 = +[NSDictionary dictionaryWithObjects:v52 forKeys:v51 count:3];
                              if (v31)
                              {
                                CFErrorRef error = 0;
                                __int16 v32 = SecKeyCreateWithData(v28, (CFDictionaryRef)v31, &error);
                                CFErrorRef v33 = v32;
                                CFErrorRef v34 = error;
                                if (!error)
                                {
                                  if (!v32)
                                  {
                                    uint64_t v42 = SALogObjectGeneral;
                                    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                                      goto LABEL_67;
                                    }
                                    uint64_t buf = 68289026;
                                    __int16 v54 = 2082;
                                    double v55 = "";
                                    uint64_t v36 = v42;
                                    uint64_t v37 = "{\"msg%{public}.0s\":\"#aa,isSignatureValidInternal,publicKeyRef nil\"}";
                                    goto LABEL_58;
                                  }
                                  int v39 = SecKeyVerifySignature(v32, kSecKeyAlgorithmECDSASignatureDigestRFC4754, v17, v23, &error);
                                  CFRelease(v33);
                                  CFErrorRef v33 = error;
                                  BOOL v40 = SALogObjectGeneral;
                                  BOOL v41 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
                                  if (!v33)
                                  {
                                    if (v41)
                                    {
                                      uint64_t buf = 68289283;
                                      __int16 v54 = 2082;
                                      double v55 = "";
                                      __int16 v56 = 1025;
                                      LODWORD(v57) = v39 != 0;
                                      _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,isSignatureValidInternal\", \"isValid\":%{private}hhd}", (uint8_t *)&buf, 0x18u);
                                    }
                                    CFStringRef v27 = kSecAttrKeyType;
                                    if (v39)
                                    {
                                      CFRelease(v17);
                                      CFRelease(v23);
                                      sub_10001E2B8((uint64_t)v48);
                                      return 1;
                                    }
                                    goto LABEL_67;
                                  }
                                  if (!v41)
                                  {
                                    CFStringRef v27 = kSecAttrKeyType;
LABEL_66:
                                    CFRelease(v33);
                                    goto LABEL_67;
                                  }
                                  uint64_t buf = 68289283;
                                  __int16 v54 = 2082;
                                  double v55 = "";
                                  __int16 v56 = 2113;
                                  CFDataRef v57 = v33;
                                  _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,isSignatureValidInternal,error in verify signature\", \"error\":%{private, location:escape_only}@}", (uint8_t *)&buf, 0x1Cu);
                                  CFErrorRef v33 = error;
                                  CFStringRef v27 = kSecAttrKeyType;
                                  goto LABEL_65;
                                }
                                uint64_t v35 = SALogObjectGeneral;
                                if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                                {
                                  uint64_t buf = 68289283;
                                  __int16 v54 = 2082;
                                  double v55 = "";
                                  __int16 v56 = 2113;
                                  CFDataRef v57 = v34;
                                  _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,isSignatureValidInternal,error in create publicKeyRef\", \"error\":%{private, location:escape_only}@}", (uint8_t *)&buf, 0x1Cu);
                                  CFErrorRef v34 = error;
                                  CFStringRef v27 = kSecAttrKeyType;
                                  if (!error)
                                  {
LABEL_65:
                                    if (v33) {
                                      goto LABEL_66;
                                    }
                                    goto LABEL_67;
                                  }
                                }
                                else
                                {
                                  CFStringRef v27 = kSecAttrKeyType;
                                }
                                CFRelease(v34);
                                goto LABEL_65;
                              }
                              uint64_t v38 = SALogObjectGeneral;
                              if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                              {
                                uint64_t buf = 68289026;
                                __int16 v54 = 2082;
                                double v55 = "";
                                uint64_t v36 = v38;
                                uint64_t v37 = "{\"msg%{public}.0s\":\"#aa,isSignatureValidInternal,attributes nil\"}";
                                goto LABEL_58;
                              }
                            }
                            else if (v30)
                            {
                              uint64_t buf = 68289026;
                              __int16 v54 = 2082;
                              double v55 = "";
                              uint64_t v36 = v29;
                              uint64_t v37 = "{\"msg%{public}.0s\":\"#aa,isSignatureValidInternal,nil input\"}";
LABEL_58:
                              _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, v37, (uint8_t *)&buf, 0x12u);
                            }
LABEL_67:
                            sub_10001E2B8((uint64_t)v48);
                            v25 += 32;
                          }
                          while (v25 != v26);
                        }
                      }
                      else
                      {
                        __int16 v44 = SALogObjectGeneral;
                        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                        {
                          uint64_t buf = 68289026;
                          __int16 v54 = 2082;
                          double v55 = "";
                          _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,isSignatureValidUsingCodebook,fCodebook nil\"}", (uint8_t *)&buf, 0x12u);
                        }
                      }
                      CFRelease(v17);
                      CFRelease(v23);
                    }
                    else
                    {
                      double v43 = SALogObjectGeneral;
                      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                      {
                        uint64_t buf = 68289026;
                        __int16 v54 = 2082;
                        double v55 = "";
                        _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,isSignatureValidUsingCodebook,cfData input nil\"}", (uint8_t *)&buf, 0x12u);
                      }
                      if (v17) {
                        CFRelease(v17);
                      }
                      if (v23) {
                        CFRelease(v23);
                      }
                    }
                    return 0;
                  }
                  uint64_t v18 = SALogObjectGeneral;
                  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_DWORD *)double v48 = 68289026;
                    int v49 = 0;
                    LOWORD(v50[0]) = 2082;
                    *(void *)((char *)v50 + 2) = "";
                    double v19 = "{\"msg%{public}.0s\":\"#aa,isSignatureValidInternal,dataHash nil\"}";
LABEL_35:
                    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v19, v48, 0x12u);
                  }
                }
                else
                {
                  uint64_t v18 = SALogObjectGeneral;
                  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_DWORD *)double v48 = 68289026;
                    int v49 = 0;
                    LOWORD(v50[0]) = 2082;
                    *(void *)((char *)v50 + 2) = "";
                    double v19 = "{\"msg%{public}.0s\":\"#aa,generateHashOfData,failed to generate SHA224\"}";
                    goto LABEL_35;
                  }
                }
                CFDataRef v17 = 0;
                goto LABEL_37;
              }
              __int16 v20 = SALogObjectGeneral;
              if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t buf = 68289026;
                __int16 v54 = 2082;
                double v55 = "";
                uint64_t v21 = "{\"msg%{public}.0s\":\"#aa,generateHashOfData,dataRef nil\"}";
                goto LABEL_31;
              }
              goto LABEL_32;
            }
          }
          else
          {
            CFIndex v12 = HIBYTE(v46);
            if (HIBYTE(v46))
            {
              std::string v13 = (const UInt8 *)bytes;
              goto LABEL_22;
            }
          }
          __int16 v20 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t buf = 68289026;
            __int16 v54 = 2082;
            double v55 = "";
            uint64_t v21 = "{\"msg%{public}.0s\":\"#aa,generateHashOfData,empty input\"}";
LABEL_31:
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, v21, (uint8_t *)&buf, 0x12u);
          }
LABEL_32:
          CFDataRef v17 = 0;
          goto LABEL_38;
        }
      }
      else if (*(unsigned char *)(a3 + 23))
      {
        *(_OWORD *)bytes = *(_OWORD *)a3;
        uint64_t v46 = *(void *)(a3 + 16);
        goto LABEL_12;
      }
    }
    std::string::size_type v7 = SALogObjectGeneral;
    BOOL v14 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (!v14) {
      return result;
    }
    uint64_t buf = 68289026;
    __int16 v54 = 2082;
    double v55 = "";
    uint32_t v10 = "{\"msg%{public}.0s\":\"#aa,isSignatureValidUsingCodebook,input empty\"}";
  }
  else
  {
    std::string::size_type v7 = SALogObjectGeneral;
    BOOL v8 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (!v8) {
      return result;
    }
    uint64_t buf = 68289026;
    __int16 v54 = 2082;
    double v55 = "";
    uint32_t v10 = "{\"msg%{public}.0s\":\"#aa,isSignatureValidUsingCodebook,not supported\"}";
  }
  _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&buf, 0x12u);
  return 0;
}

void sub_100020BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,char a28)
{
}

void sub_100020C14(uint64_t a1, void *a2)
{
  uint64_t v4 = a2;
  if ((sub_1000838E4(v4) & 1) == 0)
  {
    uint64_t v10 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_25;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v16 = 0;
    __int16 v17 = 2082;
    uint64_t v18 = "";
    unint64_t v11 = "{\"msg%{public}.0s\":\"#aa,setupXpcActivity,not supported\"}";
    goto LABEL_18;
  }
  objc_storeStrong((id *)a1, a2);
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    operator new();
  }
  if (!*(unsigned char *)(v5 + 32))
  {
    uint64_t v10 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_25;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v16 = 0;
    __int16 v17 = 2082;
    uint64_t v18 = "";
    unint64_t v11 = "{\"msg%{public}.0s\":\"#aa,setupXpcActivity,init failed\"}";
LABEL_18:
    CFIndex v12 = v10;
    os_log_type_t v13 = OS_LOG_TYPE_DEFAULT;
LABEL_19:
    _os_log_impl((void *)&_mh_execute_header, v12, v13, v11, buf, 0x12u);
    goto LABEL_25;
  }
  double v6 = *((double *)sub_10003E368() + 42);
  if (v6 <= 0.0) {
    double v6 = (double)*((int *)sub_10006B474() + 5);
  }
  std::string::size_type v7 = SALogObjectGeneral;
  if (v6 <= 0.0)
  {
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      goto LABEL_25;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v16 = 0;
    __int16 v17 = 2082;
    uint64_t v18 = "";
    unint64_t v11 = "{\"msg%{public}.0s\":\"#aa,setupXpcActivity,invalid download period\"}";
    CFIndex v12 = v7;
    os_log_type_t v13 = OS_LOG_TYPE_ERROR;
    goto LABEL_19;
  }
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289283;
    int v16 = 0;
    __int16 v17 = 2082;
    uint64_t v18 = "";
    __int16 v19 = 2049;
    double v20 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,setupXpcActivity\", \"downloadPeriodSeconds\":\"%{private}0.1f\"}", buf, 0x1Cu);
  }
  xpc_object_t v8 = xpc_dictionary_create(0, 0, 0);
  uint64_t v9 = SALogObjectGeneral;
  if (v8)
  {
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289283;
      int v16 = 0;
      __int16 v17 = 2082;
      uint64_t v18 = "";
      __int16 v19 = 2049;
      double v20 = v6;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,setupXpcActivity\", \"downloadPeriodSeconds\":\"%{private}0.1f\"}", buf, 0x1Cu);
    }
    xpc_dictionary_set_BOOL(v8, XPC_ACTIVITY_ALLOW_BATTERY, 1);
    xpc_dictionary_set_BOOL(v8, XPC_ACTIVITY_REPEATING, 1);
    xpc_dictionary_set_BOOL(v8, XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY, 1);
    xpc_dictionary_set_int64(v8, XPC_ACTIVITY_DELAY, 0);
    xpc_dictionary_set_int64(v8, XPC_ACTIVITY_GRACE_PERIOD, 30);
    xpc_dictionary_set_int64(v8, XPC_ACTIVITY_INTERVAL, (uint64_t)v6);
    xpc_dictionary_set_int64(v8, XPC_ACTIVITY_RANDOM_INITIAL_DELAY, 0);
    xpc_dictionary_set_string(v8, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_MAINTENANCE);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472;
    handler[2] = sub_1000210DC;
    handler[3] = &unk_1000F5DD8;
    handler[4] = a1;
    xpc_activity_register((const char *)[@"com.apple.safetyalerts.aa" UTF8String], v8, handler);
  }
  else if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v16 = 0;
    __int16 v17 = 2082;
    uint64_t v18 = "";
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#aa,setupXpcActivity,cannot create xpcDictionary\"}", buf, 0x12u);
  }

LABEL_25:
}

void sub_10002108C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000210DC(uint64_t a1, void *a2)
{
  int v2 = *(NSObject ***)(a1 + 32);
  uint64_t v3 = a2;
  uint64_t v4 = v3;
  if (!v3)
  {
    uint64_t v12 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      goto LABEL_20;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v19) = 2082;
    *(void *)((char *)&v19 + 2) = "";
    xpc_object_t v8 = "{\"msg%{public}.0s\":\"#aa,processXpcActivity,activity is nil\"}";
    goto LABEL_17;
  }
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  double v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v19) = 2082;
    *(void *)((char *)&v19 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,processXpcActivity\"}", buf, 0x12u);
  }
  if (state == 2)
  {
    os_log_type_t v13 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      LOWORD(v19) = 2082;
      *(void *)((char *)&v19 + 2) = "";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,processXpcActivity,run\"}", buf, 0x12u);
    }
    BOOL v14 = *v2;
    *(void *)uint64_t buf = _NSConcreteStackBlock;
    *(void *)&long long v19 = 3221225472;
    *((void *)&v19 + 1) = sub_1000213FC;
    double v20 = &unk_1000F5EA8;
    uint64_t v21 = v2;
    dispatch_async(v14, buf);
    if (xpc_activity_set_state(v4, 5)) {
      goto LABEL_20;
    }
    uint64_t v12 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      goto LABEL_20;
    }
    v15[0] = 68289026;
    v15[1] = 0;
    __int16 v16 = 2082;
    __int16 v17 = "";
    xpc_object_t v8 = "{\"msg%{public}.0s\":\"#aa,processXpcActivity,failed to set state\"}";
    uint64_t v9 = (uint8_t *)v15;
LABEL_18:
    uint64_t v10 = v12;
    os_log_type_t v11 = OS_LOG_TYPE_ERROR;
    goto LABEL_19;
  }
  if (state)
  {
    uint64_t v12 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      goto LABEL_20;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v19) = 2082;
    *(void *)((char *)&v19 + 2) = "";
    xpc_object_t v8 = "{\"msg%{public}.0s\":\"#aa,processXpcActivity,unexpected xpcActivity\"}";
LABEL_17:
    uint64_t v9 = buf;
    goto LABEL_18;
  }
  uint64_t v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v19) = 2082;
    *(void *)((char *)&v19 + 2) = "";
    xpc_object_t v8 = "{\"msg%{public}.0s\":\"#aa,processXpcActivity,checkin\"}";
    uint64_t v9 = buf;
    uint64_t v10 = v7;
    os_log_type_t v11 = OS_LOG_TYPE_DEFAULT;
LABEL_19:
    _os_log_impl((void *)&_mh_execute_header, v10, v11, v8, v9, 0x12u);
  }
LABEL_20:
}

void sub_1000213E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000213FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_10002148C(v1);
}

void sub_100021484(uint64_t a1)
{
}

void sub_10002148C(uint64_t a1)
{
  int v2 = SALogObjectGeneral;
  BOOL v3 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,onXpcActivityTriggered\"}", buf, 0x12u);
  }
  if ((sub_1000838E4((SAPlatformInfo *)v3) & 1) == 0)
  {
    double v6 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    uint64_t v7 = "{\"msg%{public}.0s\":\"#aa,downloadCodebook,not supported\"}";
LABEL_12:
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v7, buf, 0x12u);
    return;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || !*(unsigned char *)(v4 + 32))
  {
    double v6 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    uint64_t v7 = "{\"msg%{public}.0s\":\"#aa,downloadCodebook,downloader not ready\"}";
    goto LABEL_12;
  }
  uint64_t v5 = sub_10006B474();
  if (v5[119] < 0)
  {
    sub_100004CB8(__dst, *((void **)v5 + 12), *((void *)v5 + 13));
  }
  else
  {
    *(_OWORD *)long long __dst = *((_OWORD *)v5 + 6);
    uint64_t v39 = *((void *)v5 + 14);
  }
  xpc_object_t v8 = (void *)HIBYTE(v39);
  if (v39 < 0) {
    xpc_object_t v8 = __dst[1];
  }
  if (v8)
  {
    uint64_t v9 = sub_10006B474();
    if (v9[119] < 0)
    {
      sub_100004CB8(buf, *((void **)v9 + 12), *((void *)v9 + 13));
    }
    else
    {
      *(_OWORD *)uint64_t buf = *((_OWORD *)v9 + 6);
      *(void *)&buf[16] = *((void *)v9 + 14);
    }
    sub_10000DD48(&__p, "");
    uint64_t v11 = buf[23];
    if (buf[23] < 0) {
      uint64_t v11 = *(void *)&buf[8];
    }
    if (v11)
    {
      uint64_t v12 = sub_10003E368();
      if (*((char *)v12 + 215) < 0) {
        sub_100004CB8(&v41, (void *)v12[24], v12[25]);
      }
      else {
        std::string v41 = *(std::string *)((unsigned char *)v12 + 8);
      }
      std::string::size_type v14 = HIBYTE(v41.__r_.__value_.__r.__words[2]);
      char v15 = HIBYTE(v41.__r_.__value_.__r.__words[2]);
      std::string::size_type size = v41.__r_.__value_.__l.__size_;
      if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v17 = HIBYTE(v41.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v17 = v41.__r_.__value_.__l.__size_;
      }
      if (!v17)
      {
        uint64_t v18 = sub_10006B474();
        if (v18[47] < 0) {
          sub_100004CB8(&v44, *((void **)v18 + 3), *((void *)v18 + 4));
        }
        else {
          std::string v44 = *(std::string *)(v18 + 1);
        }
        if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v41.__r_.__value_.__l.__data_);
        }
        std::string v41 = v44;
        std::string::size_type v14 = HIBYTE(v44.__r_.__value_.__r.__words[2]);
        std::string::size_type size = v44.__r_.__value_.__l.__size_;
        char v15 = HIBYTE(v44.__r_.__value_.__r.__words[2]);
      }
      if (v15 < 0) {
        std::string::size_type v14 = size;
      }
      if (v14)
      {
        SACommonUtils::getHashForString(buf, (uint64_t *)&v44);
        if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          long long v19 = &v41;
        }
        else {
          long long v19 = (std::string *)v41.__r_.__value_.__r.__words[0];
        }
        if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v20 = HIBYTE(v41.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v20 = v41.__r_.__value_.__l.__size_;
        }
        uint64_t v21 = std::string::insert(&v44, 0, (const std::string::value_type *)v19, v20);
        CFDataRef v22 = (void *)v21->__r_.__value_.__r.__words[0];
        v43[0] = v21->__r_.__value_.__l.__size_;
        *(void *)((char *)v43 + 7) = *(std::string::size_type *)((char *)&v21->__r_.__value_.__r.__words[1] + 7);
        unsigned __int8 v23 = HIBYTE(v21->__r_.__value_.__r.__words[2]);
        v21->__r_.__value_.__l.__size_ = 0;
        v21->__r_.__value_.__r.__words[2] = 0;
        v21->__r_.__value_.__r.__words[0] = 0;
        if ((char)v37 < 0) {
          operator delete(__p);
        }
        std::string __p = v22;
        *(void *)uint64_t v36 = v43[0];
        *(void *)&v36[7] = *(void *)((char *)v43 + 7);
        unsigned __int8 v37 = v23;
        if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v44.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        uint64_t v24 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          v44.__r_.__value_.__r.__words[0] = 68289026;
          LOWORD(v44.__r_.__value_.__r.__words[1]) = 2082;
          *(std::string::size_type *)((char *)&v44.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
          _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,downloadCodebook,pull cname unavailable\"}", (uint8_t *)&v44, 0x12u);
        }
      }
      if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v41.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      os_log_type_t v13 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        v41.__r_.__value_.__r.__words[0] = 68289026;
        LOWORD(v41.__r_.__value_.__r.__words[1]) = 2082;
        *(std::string::size_type *)((char *)&v41.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,downloadCodebook,empty codebook file name\"}", (uint8_t *)&v41, 0x12u);
      }
    }
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    sub_10001F164((uint64_t)&v44);
    uint64_t v25 = v37;
    int v26 = (char)v37;
    if ((v37 & 0x80u) != 0) {
      uint64_t v25 = *(void *)v36;
    }
    if (!v25) {
      goto LABEL_72;
    }
    std::string::size_type v27 = HIBYTE(v44.__r_.__value_.__r.__words[2]);
    int v28 = SHIBYTE(v44.__r_.__value_.__r.__words[2]);
    if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v27 = v44.__r_.__value_.__l.__size_;
    }
    if (v27)
    {
      int v29 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        p_p = __p;
        if (v26 >= 0) {
          p_p = &__p;
        }
        uint64_t v31 = (std::string *)v44.__r_.__value_.__r.__words[0];
        if (v28 >= 0) {
          uint64_t v31 = &v44;
        }
        *(_DWORD *)uint64_t buf = 68289539;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2081;
        *(void *)&buf[20] = p_p;
        *(_WORD *)&unsigned char buf[28] = 2081;
        *(void *)&buf[30] = v31;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,downloadCodebook,downloading public keys codebook\", \"srcUrl\":%{private, location:escape_only}s, \"dstPath\":%{private, location:escape_only}s}", buf, 0x26u);
      }
      uint64_t v32 = *(void *)(a1 + 16);
      double v33 = *((double *)sub_10003E368() + 41);
      *(void *)uint64_t buf = _NSConcreteStackBlock;
      *(void *)&uint8_t buf[8] = 3221225472;
      *(void *)&buf[16] = sub_100021BF8;
      *(void *)&buf[24] = &unk_1000F5DF8;
      *(void *)&unsigned char buf[32] = a1;
      uint64_t v42 = 0;
      v41.__r_.__value_.__r.__words[0] = (std::string::size_type)off_1000F5E28;
      v41.__r_.__value_.__l.__size_ = (std::string::size_type)objc_retainBlock(buf);
      uint64_t v42 = &v41;
      sub_100064BA8(v32, (uint64_t *)&__p, (uint64_t)&v44, 4, (uint64_t)&v41, v33);
      sub_100021E70(&v41);
    }
    else
    {
LABEL_72:
      CFErrorRef v34 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,downloadCodebook,empty codebook file or url path\"}", buf, 0x12u);
      }
    }
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v44.__r_.__value_.__l.__data_);
    }
    if ((char)v37 < 0) {
      operator delete(__p);
    }
  }
  else
  {
    uint64_t v10 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,downloadCodebook,empty codebook file name\"}", buf, 0x12u);
    }
  }
  if (SHIBYTE(v39) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_100021B34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a37 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

void sub_100021BF8(uint64_t a1, int a2)
{
  char v2 = a2;
  BOOL v3 = *(SAPlatformInfo **)(a1 + 32);
  CFStringRef v13 = @"status";
  uint64_t v4 = +[NSNumber numberWithInt:a2 ^ 1u];
  std::string::size_type v14 = v4;
  uint64_t v5 = +[NSDictionary dictionaryWithObjects:&v14 forKeys:&v13 count:1];

  double v6 = sub_10004EDD0();
  sub_10004FEA8((uint64_t)v6, 2, v5);
  uint64_t v7 = SALogObjectGeneral;
  BOOL v8 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v8)
    {
      int v9 = 68289026;
      int v10 = 0;
      __int16 v11 = 2082;
      uint64_t v12 = "";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,downloadCodebook,codebook downloaded\"}", (uint8_t *)&v9, 0x12u);
    }
    sub_10001EBB0(v3);
  }
  else if (v8)
  {
    int v9 = 68289026;
    int v10 = 0;
    __int16 v11 = 2082;
    uint64_t v12 = "";
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#aa,downloadCodebook,failed to download\"}", (uint8_t *)&v9, 0x12u);
  }
}

void sub_100021D78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100021D9C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 32;
    sub_10001E2B8(i - 32);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100021DEC(void ***a1)
{
  uint64_t v1 = *a1;
  char v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = sub_10001E2B8(v4 - 32);
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_100021E70(void *a1)
{
  char v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100021EF4(uint64_t a1)
{
  char v2 = (void **)(a1 + 48);
  sub_100021DEC(&v2);
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }

  operator delete();
}

id *sub_100021F60(id **a1, id *a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100064B64(result);
    operator delete();
  }
  return result;
}

uint64_t sub_100021FB0(uint64_t a1)
{
  return a1;
}

void sub_100021FDC(uint64_t a1)
{
  operator delete();
}

uint64_t sub_100022028()
{
  return 0;
}

id sub_100022030(uint64_t a1, void *a2)
{
  *a2 = off_1000F5E28;
  id result = objc_retainBlock(*(id *)(a1 + 8));
  a2[1] = result;
  return result;
}

uint64_t sub_100022078(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  return _objc_release_x1();
}

uint64_t sub_100022088(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 8) + 16))();
}

uint64_t sub_10002209C(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F5E98)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1000220DC()
{
  return &off_1000F5E98;
}

void sub_1000220E8(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(void *)a1 = 0x4024000000000000;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(unsigned char *)(a1 + 40) = 0;
  id v4 = v3;
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = SALogObjectGeneral;
  double v6 = v4;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v9 = 2082;
    int v10 = "";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#fum,initialized\"}", buf, 0x12u);
    double v6 = *(void **)(a1 + 48);
  }
  sub_10000DD48(&__p, "com.apple.safetyalerts.pendingFollowUpMetrics");
  SATimer::create(v6);
}

void sub_100022250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  uint64_t v19 = *(void *)(v16 + 32);
  *(void *)(v16 + 32) = 0;
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
  }
  sub_1000237FC((void ***)&a16);

  _Unwind_Resume(a1);
}

uint64_t sub_1000222C4(uint64_t a1)
{
  char v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = 68289026;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#fum,destructor\"}", (uint8_t *)&v5, 0x12u);
  }

  uint64_t v3 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v5 = a1 + 8;
  sub_1000237FC((void ***)&v5);
  return a1;
}

void sub_1000223CC(uint64_t a1, uint64_t a2)
{
  id v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    std::string::size_type v5 = a2 + 8;
    if (*(char *)(a2 + 31) < 0) {
      std::string::size_type v5 = *(void *)(a2 + 8);
    }
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v45.__r_.__value_.__l.__data_) = 2082;
    *(std::string::size_type *)((char *)v45.__r_.__value_.__r.__words + 2) = (std::string::size_type)"";
    WORD1(v45.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&v45.__r_.__value_.__r.__words[1] + 4) = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#fum,onFollowUpAlertReceived\", \"alertID\":%{private, location:escape_only}s}", buf, 0x1Cu);
  }
  time_t v6 = time(0);
  memset(&v45, 0, sizeof(v45));
  BYTE8(v47) = 0;
  char v48 = 0;
  std::string::operator=(&v45, (const std::string *)(a2 + 8));
  double v7 = (double)(uint64_t)((double)(uint64_t)(double)v6 + -978307200.0);
  double v8 = v7 - *(double *)(a2 + 216);
  *(double *)uint64_t buf = v7;
  *((double *)&v46 + 1) = v8;
  *(void *)&long long v47 = 0xBFF0000000000000;
  if (*(unsigned char *)(a1 + 40))
  {
    double v39 = -1.0;
    memset(&v38, 0, sizeof(v38));
    if (*(char *)(a2 + 31) < 0)
    {
      sub_100004CB8(__p, *(void **)(a2 + 8), *(void *)(a2 + 16));
    }
    else
    {
      *(_OWORD *)std::string __p = *(_OWORD *)(a2 + 8);
      uint64_t v37 = *(void *)(a2 + 24);
    }
    int v13 = sub_10002289C(a1, (char *)__p, &v39, &v38);
    LOBYTE(v46) = v13;
    if (SHIBYTE(v37) < 0)
    {
      operator delete(__p[0]);
      int v13 = v46;
    }
    if (v13)
    {
      *((double *)&v47 + 1) = v7 - v39;
      char v48 = 1;
    }
    BOOL v40 = _NSConcreteStackBlock;
    v41.i64[0] = 3221225472;
    v41.i64[1] = (uint64_t)sub_100022CBC;
    uint64_t v42 = (void **)&unk_1000F5EC8;
    double v43 = buf;
    AnalyticsSendEventLazy();
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v38.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + 24);
    unint64_t v10 = *(void *)(a1 + 16);
    if (v10 >= v9)
    {
      unint64_t v14 = *(void *)(a1 + 8);
      unint64_t v15 = 0x8E38E38E38E38E39 * ((uint64_t)(v10 - v14) >> 3);
      unint64_t v16 = v15 + 1;
      if (v15 + 1 > 0x38E38E38E38E38ELL) {
        sub_1000050E8();
      }
      unint64_t v17 = 0x8E38E38E38E38E39 * ((uint64_t)(v9 - v14) >> 3);
      if (2 * v17 > v16) {
        unint64_t v16 = 2 * v17;
      }
      if (v17 >= 0x1C71C71C71C71C7) {
        unint64_t v18 = 0x38E38E38E38E38ELL;
      }
      else {
        unint64_t v18 = v16;
      }
      double v43 = (uint8_t *)(a1 + 24);
      if (v18)
      {
        if (v18 > 0x38E38E38E38E38ELL) {
          sub_100004E00();
        }
        uint64_t v19 = (void **)operator new(72 * v18);
      }
      else
      {
        uint64_t v19 = 0;
      }
      unsigned __int8 v23 = &v19[(uint64_t)(v10 - v14) >> 3];
      BOOL v40 = v19;
      v41.i64[0] = (uint64_t)v23;
      v41.i64[1] = (uint64_t)v23;
      uint64_t v42 = &v19[9 * v18];
      *(double *)unsigned __int8 v23 = v7;
      uint64_t v24 = v23 + 1;
      if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
      {
        sub_100004CB8(v24, v45.__r_.__value_.__l.__data_, v45.__r_.__value_.__l.__size_);
        unint64_t v14 = *(void *)(a1 + 8);
        unint64_t v10 = *(void *)(a1 + 16);
        uint64_t v25 = (void **)v41.i64[1];
        unsigned __int8 v23 = (void **)v41.i64[0];
      }
      else
      {
        *(_OWORD *)uint64_t v24 = *(_OWORD *)&v45.__r_.__value_.__l.__data_;
        void v23[3] = (void *)v45.__r_.__value_.__r.__words[2];
        uint64_t v25 = &v19[(uint64_t)(v10 - v14) >> 3];
      }
      int v26 = &v19[9 * v15];
      long long v27 = v47;
      *((_OWORD *)v26 + 2) = v46;
      *((_OWORD *)v26 + 3) = v27;
      *((unsigned char *)v26 + 64) = v48;
      if (v10 == v14)
      {
        int64x2_t v34 = vdupq_n_s64(v14);
      }
      else
      {
        unint64_t v28 = 0;
        do
        {
          int v29 = (char *)&v23[v28 / 8];
          unint64_t v30 = v10 + v28;
          *((void *)v29 - 9) = *(void *)(v10 + v28 - 72);
          long long v31 = *(_OWORD *)(v10 + v28 - 64);
          *((void *)v29 - 6) = *(void *)(v10 + v28 - 48);
          *((_OWORD *)v29 - 4) = v31;
          *(void *)(v30 - 56) = 0;
          *(void *)(v30 - 48) = 0;
          *(void *)(v30 - 64) = 0;
          long long v32 = *(_OWORD *)(v10 + v28 - 40);
          long long v33 = *(_OWORD *)(v10 + v28 - 24);
          *(v29 - 8) = *(unsigned char *)(v10 + v28 - 8);
          *(_OWORD *)(v29 - 24) = v33;
          *(_OWORD *)(v29 - 40) = v32;
          v28 -= 72;
        }
        while (v10 + v28 != v14);
        int64x2_t v34 = *(int64x2_t *)(a1 + 8);
        unsigned __int8 v23 = (void **)((char *)v23 + v28);
      }
      CFDataRef v22 = (char *)(v25 + 9);
      *(void *)(a1 + 8) = v23;
      *(void *)(a1 + 16) = v25 + 9;
      int64x2_t v41 = v34;
      uint64_t v35 = *(void ***)(a1 + 24);
      *(void *)(a1 + 24) = v42;
      uint64_t v42 = v35;
      BOOL v40 = (void **)v34.i64[0];
      sub_1000238A0((uint64_t)&v40);
    }
    else
    {
      *(double *)unint64_t v10 = v7;
      __int16 v11 = (unsigned char *)(v10 + 8);
      if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
      {
        sub_100004CB8(v11, v45.__r_.__value_.__l.__data_, v45.__r_.__value_.__l.__size_);
      }
      else
      {
        long long v12 = *(_OWORD *)&v45.__r_.__value_.__l.__data_;
        *(void *)(v10 + 24) = *((void *)&v45.__r_.__value_.__l + 2);
        *(_OWORD *)__int16 v11 = v12;
      }
      long long v20 = v46;
      long long v21 = v47;
      *(unsigned char *)(v10 + 64) = v48;
      *(_OWORD *)(v10 + 32) = v20;
      *(_OWORD *)(v10 + 48) = v21;
      CFDataRef v22 = (char *)(v10 + 72);
      *(void *)(a1 + 16) = v10 + 72;
    }
    *(void *)(a1 + 16) = v22;
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
}

void sub_10002282C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a33 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10002289C(uint64_t a1, char *a2, void *a3, std::string *a4)
{
  double v8 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v28 = 0;
    __int16 v29 = 2082;
    unint64_t v30 = "";
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#fum,isIgneousReceived\"}", buf, 0x12u);
  }
  if (*(unsigned char *)(a1 + 40))
  {
    sub_10002547C((uint64_t)buf);
    sub_10000DD48(&__str, "igneous_received");
    std::string::operator=(&v36, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    buf[1] = 0;
    v35[4] = 2000;
    sub_10000DD48(&__str, "/var/mobile/Library/com.apple.safetyalerts/");
    sub_10000DD48(__p, "igneous_received.elog");
    if ((v24 & 0x80u) == 0) {
      unint64_t v9 = __p;
    }
    else {
      unint64_t v9 = (void **)__p[0];
    }
    if ((v24 & 0x80u) == 0) {
      std::string::size_type v10 = v24;
    }
    else {
      std::string::size_type v10 = (std::string::size_type)__p[1];
    }
    __int16 v11 = std::string::append(&__str, (const std::string::value_type *)v9, v10);
    long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    int64_t v22 = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)long long v21 = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    if ((char)v24 < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    if (v22 >= 0) {
      int v13 = (char *)v21;
    }
    else {
      int v13 = (char *)v21[0];
    }
    v26[0] = off_1000F5FF8;
    v26[3] = v26;
    v25[0] = off_1000F5FF8;
    void v25[3] = v25;
    char v14 = sub_100022E74((uint64_t)buf, v13, 0x1388uLL, (uint64_t)v26, (uint64_t)v25);
    sub_10002553C(v25);
    sub_10002553C(v26);
    if (SHIBYTE(v22) < 0)
    {
      operator delete(v21[0]);
      if (v14)
      {
LABEL_27:
        sub_100022FE0(buf);
        SACommonUtils::getHashForString(a2, (uint64_t *)v19);
        uint64_t v16 = sub_10002313C((uint64_t)buf, (unsigned __int8 **)v19, a3, a4);
        if (v20 < 0) {
          operator delete(v19[0]);
        }
        if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v36.__r_.__value_.__l.__data_);
        }
        sub_10002553C(v35);
        sub_10002553C(v34);
        if (v33 < 0) {
          operator delete(v32);
        }
        __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v31;
        sub_100023904((void ***)&__str);
        return v16;
      }
    }
    else if (v14)
    {
      goto LABEL_27;
    }
    unint64_t v17 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      __str.__r_.__value_.__r.__words[0] = 68289026;
      LOWORD(__str.__r_.__value_.__r.__words[1]) = 2082;
      *(std::string::size_type *)((char *)&__str.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,#warning,persistentStorageConfigFailed\"}", (uint8_t *)&__str, 0x12u);
    }
    goto LABEL_27;
  }
  unint64_t v15 = SALogObjectGeneral;
  uint64_t v16 = 0;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v28 = 0;
    __int16 v29 = 2082;
    unint64_t v30 = "";
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#fum,isIgneousReceived,not first unlocked\"}", buf, 0x12u);
    return 0;
  }
  return v16;
}

void sub_100022C2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_100023384((uint64_t)&a36);
  _Unwind_Resume(a1);
}

id sub_100022CBC(uint64_t a1)
{
  char v2 = objc_opt_new();
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = (void *)(v3 + 8);
  if (*(char *)(v3 + 31) < 0) {
    id v4 = (void *)*v4;
  }
  std::string::size_type v5 = +[NSString stringWithUTF8String:v4];
  [v2 setObject:v5 forKeyedSubscript:@"alertID"];

  time_t v6 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 32)];
  [v2 setObject:v6 forKeyedSubscript:@"wasActualAlertReceived"];

  double v7 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 40)];
  [v2 setObject:v7 forKeyedSubscript:@"latencyRelativeToOrigin"];

  double v8 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 40)];
  [v2 setObject:v8 forKeyedSubscript:@"latencyRelativeToOriginator"];

  unint64_t v9 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 48)];
  [v2 setObject:v9 forKeyedSubscript:@"latencyRelativeToServer"];

  uint64_t v10 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v10 + 64))
  {
    __int16 v11 = +[NSNumber numberWithDouble:*(double *)(v10 + 56)];
    [v2 setObject:v11 forKeyedSubscript:@"latencyRelativeToActualAlertReceived"];
  }

  return v2;
}

void sub_100022E44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100022E74(uint64_t a1, char *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2 && *(void *)(a4 + 24) && a3 <= 0x10000 && *(void *)(a5 + 24))
  {
    sub_10000DD48(v14, a2);
    unint64_t v9 = (void **)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      operator delete(*v9);
    }
    *(_OWORD *)unint64_t v9 = *(_OWORD *)v14;
    *(void *)(a1 + 64) = *(void *)&v14[16];
    sub_1000255C0((void *)(a1 + 72), a4);
    sub_1000255C0((void *)(a1 + 104), a5);
    *(void *)(a1 + 144) = a3;
    return 1;
  }
  else
  {
    __int16 v11 = SALogObjectGeneral;
    BOOL v12 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (v12)
    {
      int v13 = (void *)(a1 + 160);
      if (*(char *)(a1 + 183) < 0) {
        int v13 = (void *)*v13;
      }
      *(void *)char v14 = 68289283;
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = "";
      *(_WORD *)&v14[18] = 2081;
      *(void *)&v14[20] = v13;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,invalidArgs\", \"history\":%{private, location:escape_only}s}", v14, 0x1Cu);
      return 0;
    }
  }
  return result;
}

void sub_100022FE0(unsigned char *a1)
{
  char v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = a1 + 160;
    if ((char)a1[183] < 0) {
      uint64_t v3 = (void *)*v3;
    }
    int v5 = 68289283;
    int v6 = 0;
    __int16 v7 = 2082;
    double v8 = "";
    __int16 v9 = 2081;
    uint64_t v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,onFirstUnlock\", \"history\":%{private, location:escape_only}s}", (uint8_t *)&v5, 0x1Cu);
  }
  if (a1[184])
  {
    id v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 68289026;
      int v6 = 0;
      __int16 v7 = 2082;
      double v8 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,onFirstUnlock,skip\"}", (uint8_t *)&v5, 0x12u);
    }
  }
  else
  {
    a1[184] = 1;
    if (a1[1]) {
      sub_100023BD4((uint64_t)a1);
    }
  }
}

uint64_t sub_10002313C(uint64_t a1, unsigned __int8 **a2, void *a3, std::string *a4)
{
  double v8 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v9 = (void *)(a1 + 160);
    if (*(char *)(a1 + 183) < 0) {
      __int16 v9 = (void *)*v9;
    }
    uint64_t buf = 68289283;
    __int16 v23 = 2082;
    unsigned __int8 v24 = "";
    __int16 v25 = 2081;
    int v26 = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,isFoundInternal\", \"debugName\":%{private, location:escape_only}s}", (uint8_t *)&buf, 0x1Cu);
  }
  v21[0] = off_1000F5EF8;
  v21[1] = a1;
  void v21[3] = v21;
  v20[0] = off_1000F5F78;
  v20[1] = a1;
  v20[3] = v20;
  sub_100010BB4((uint64_t)&buf, (uint64_t)v21, (uint64_t)v20);
  sub_10000F6D4(v20);
  sub_10000F6D4(v21);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  if (v11 != v10)
  {
    int v12 = *((char *)a2 + 23);
    if (v12 >= 0) {
      int v13 = (unsigned __int8 *)*((unsigned __int8 *)a2 + 23);
    }
    else {
      int v13 = a2[1];
    }
    do
    {
      uint64_t v14 = *(unsigned __int8 *)(v11 + 31);
      if ((v14 & 0x80u) == 0) {
        unint64_t v15 = (unsigned __int8 *)*(unsigned __int8 *)(v11 + 31);
      }
      else {
        unint64_t v15 = *(unsigned __int8 **)(v11 + 16);
      }
      if (v15 == v13)
      {
        if (v12 >= 0) {
          uint64_t v16 = (unsigned __int8 *)a2;
        }
        else {
          uint64_t v16 = *a2;
        }
        if ((v14 & 0x80) != 0)
        {
          if (!memcmp(*(const void **)(v11 + 8), v16, *(void *)(v11 + 16)))
          {
LABEL_25:
            *a3 = *(void *)v11;
            std::string::operator=(a4, (const std::string *)(v11 + 32));
            uint64_t v18 = 1;
            goto LABEL_26;
          }
        }
        else
        {
          if (!*(unsigned char *)(v11 + 31)) {
            goto LABEL_25;
          }
          uint64_t v17 = 0;
          while (*(unsigned __int8 *)(v11 + v17 + 8) == v16[v17])
          {
            if (v14 == ++v17) {
              goto LABEL_25;
            }
          }
        }
      }
      v11 += 56;
    }
    while (v11 != v10);
  }
  uint64_t v18 = 0;
LABEL_26:
  sub_1000115F0(&buf);
  return v18;
}

void sub_100023358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_1000115F0((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100023384(uint64_t a1)
{
  if (*(char *)(a1 + 183) < 0) {
    operator delete(*(void **)(a1 + 160));
  }
  sub_10002553C((void *)(a1 + 104));
  sub_10002553C((void *)(a1 + 72));
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  uint64_t v3 = (void **)(a1 + 24);
  sub_100023904(&v3);
  return a1;
}

void *sub_1000233F0(uint64_t a1)
{
  char v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289026;
    __int16 v10 = 2082;
    uint64_t v11 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#fum,onFirstUnlock\"}", (uint8_t *)&buf, 0x12u);
  }
  *(unsigned char *)(a1 + 40) = 1;
  uint64_t v3 = *(void *)(a1 + 32);
  double v4 = *(double *)a1;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_100023598;
  void v6[3] = &unk_1000F5EA8;
  v6[4] = a1;
  double v8 = 0;
  v7[0] = off_1000F4E78;
  v7[1] = objc_retainBlock(v6);
  double v8 = v7;
  (*(void (**)(uint64_t, void *, double))(*(void *)v3 + 16))(v3, v7, v4);
  return sub_10000F6D4(v7);
}

void sub_10002357C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_10000F6D4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100023598(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  char v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v14) = 2082;
    *(void *)((char *)&v14 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#fum,processPendingMetrics\"}", buf, 0x12u);
  }
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  if (v3 != v4)
  {
    while (1)
    {
      double v12 = -1.0;
      memset(&__p, 0, sizeof(__p));
      if (*(char *)(v3 + 31) < 0)
      {
        sub_100004CB8(v9, *(void **)(v3 + 8), *(void *)(v3 + 16));
      }
      else
      {
        long long v5 = *(_OWORD *)(v3 + 8);
        uint64_t v10 = *(void *)(v3 + 24);
        *(_OWORD *)__int16 v9 = v5;
      }
      int v6 = sub_10002289C(v1, (char *)v9, &v12, &__p);
      *(unsigned char *)(v3 + 32) = v6;
      if (SHIBYTE(v10) < 0) {
        break;
      }
      if (v6) {
        goto LABEL_9;
      }
LABEL_10:
      *(void *)uint64_t buf = _NSConcreteStackBlock;
      *(void *)&long long v14 = 3221225472;
      *((void *)&v14 + 1) = sub_100022CBC;
      unint64_t v15 = &unk_1000F5EC8;
      uint64_t v16 = v3;
      AnalyticsSendEventLazy();
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      v3 += 72;
      if (v3 == v4) {
        goto LABEL_16;
      }
    }
    operator delete(v9[0]);
    if (!*(unsigned char *)(v3 + 32)) {
      goto LABEL_10;
    }
LABEL_9:
    *(double *)(v3 + 56) = *(double *)v3 - v12;
    *(unsigned char *)(v3 + 64) = 1;
    goto LABEL_10;
  }
LABEL_16:
  sub_100023850((uint64_t *)(v1 + 8));
  __int16 v7 = *(uint64_t (**)(void))(**(void **)(v1 + 32) + 40);

  return v7();
}

void sub_1000237C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000237FC(void ***a1)
{
  char v2 = *a1;
  if (*v2)
  {
    sub_100023850((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_100023850(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 72)
  {
    if (*(char *)(i - 41) < 0) {
      operator delete(*(void **)(i - 64));
    }
  }
  a1[1] = v2;
}

uint64_t sub_1000238A0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      uint64_t v4 = v2 - 72;
      *(void *)(a1 + 16) = v2 - 72;
      if (*(char *)(v2 - 41) < 0)
      {
        operator delete(*(void **)(v2 - 64));
        uint64_t v4 = *(void *)(a1 + 16);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100023904(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    long long v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 56;
        sub_100023988(v4);
      }
      while ((void *)v4 != v2);
      long long v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_100023988(uint64_t a1)
{
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  if (*(char *)(a1 + 31) < 0)
  {
    uint64_t v2 = *(void **)(a1 + 8);
    operator delete(v2);
  }
}

uint64_t sub_1000239E0(uint64_t a1)
{
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_100023A28()
{
}

void *sub_100023A3C(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F5EF8;
  result[1] = v3;
  return result;
}

uint64_t sub_100023A84(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F5EF8;
  a2[1] = v2;
  return result;
}

void sub_100023AB0(uint64_t a1)
{
}

uint64_t sub_100023AB8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100023AF8()
{
}

void sub_100023B04(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)a1;
  if (!*(unsigned char *)(*(void *)a1 + 1))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      long long v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100023BD4((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

void sub_100023BD4(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = (const std::__fs::filesystem::path **)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      uint64_t v3 = (const std::__fs::filesystem::path **)*v3;
    }
    __int16 v4 = (void *)(a1 + 160);
    if (*(char *)(a1 + 183) < 0) {
      __int16 v4 = (void *)*v4;
    }
    *(_DWORD *)uint64_t buf = 68289539;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v13 = 2082;
    long long v14 = "";
    __int16 v15 = 2081;
    uint64_t v16 = v3;
    __int16 v17 = 2081;
    uint64_t v18 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,load\", \"filePath\":%{private, location:escape_only}s, \"debugName\":%{private, location:escape_only}s}", buf, 0x26u);
  }
  if (!*(unsigned char *)(a1 + 184))
  {
    int v6 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    __int16 v7 = (const std::__fs::filesystem::path **)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      __int16 v7 = (const std::__fs::filesystem::path **)*v7;
    }
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v13 = 2082;
    long long v14 = "";
    __int16 v15 = 2081;
    uint64_t v16 = v7;
    double v8 = "{\"msg%{public}.0s\":\"#saEventHistory,load,#warning,deferLoadingTillFirstUnlock\", \"filePath\":%{private, loc"
         "ation:escape_only}s}";
    goto LABEL_27;
  }
  long long v5 = (const std::__fs::filesystem::path **)(a1 + 48);
  if (*(char *)(a1 + 71) < 0)
  {
    if (!*(void *)(a1 + 56)) {
      return;
    }
  }
  else if (!*(unsigned char *)(a1 + 71))
  {
    return;
  }
  sub_10000DD48(buf, "0002");
  char v9 = sub_1000853F0();
  char v10 = v9;
  if (SBYTE3(v16) < 0)
  {
    operator delete(*(void **)buf);
    if (v10) {
LABEL_18:
    }
      operator new[]();
  }
  else if (v9)
  {
    goto LABEL_18;
  }
  uint64_t v11 = (const std::__fs::filesystem::path *)(a1 + 48);
  if (*(char *)(a1 + 71) < 0) {
    uint64_t v11 = *v5;
  }
  if (sub_100084D60(v11))
  {
    int v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      if (*(char *)(a1 + 71) < 0) {
        long long v5 = (const std::__fs::filesystem::path **)*v5;
      }
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v13 = 2082;
      long long v14 = "";
      __int16 v15 = 2081;
      uint64_t v16 = v5;
      double v8 = "{\"msg%{public}.0s\":\"#saEventHistory,load,#warning,unabletToRemoveFile\", \"filePath\":%{private, location:escape_only}s}";
LABEL_27:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v8, buf, 0x1Cu);
    }
  }
}

void sub_1000241E4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a37 < 0) {
    operator delete(__p);
  }
  if (a43 < 0) {
    operator delete(a38);
  }
  sub_10008536C((uint64_t)&a44);
  operator delete[]();
}

uint64_t sub_100024330(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (!v1) {
    sub_100005520();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void sub_100024380(uint64_t a1, double *a2)
{
  if (*a2 >= 0.0)
  {
    uint64_t v7 = *(void *)(a1 + 24);
    uint64_t v6 = *(void *)(a1 + 32);
    if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((v6 - v7) >> 3)) >= *(void *)(a1 + 136))
    {
      double v8 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        char v9 = (void *)(a1 + 160);
        if (*(char *)(a1 + 183) < 0) {
          char v9 = (void *)*v9;
        }
        int v20 = 68289283;
        int v21 = 0;
        __int16 v22 = 2082;
        __int16 v23 = "";
        __int16 v24 = 2081;
        __int16 v25 = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,maxHistoryLenReached\", \"history\":%{private, location:escape_only}s}", (uint8_t *)&v20, 0x1Cu);
        uint64_t v7 = *(void *)(a1 + 24);
        uint64_t v6 = *(void *)(a1 + 32);
      }
      sub_100024BDC((uint64_t)&v20, v7 + 56, v6, v7);
      uint64_t v6 = v10;
      for (uint64_t i = *(void *)(a1 + 32); i != v6; sub_100023988(i))
        i -= 56;
      *(void *)(a1 + 32) = v6;
      *(unsigned char *)(a1 + 152) = 1;
      uint64_t v7 = *(void *)(a1 + 24);
    }
    if (v6 != v7)
    {
      unint64_t v12 = 0x6DB6DB6DB6DB6DB7 * ((v6 - v7) >> 3);
      do
      {
        unint64_t v13 = v12 >> 1;
        unint64_t v14 = v6 - 56 * (v12 >> 1);
        double v16 = *(double *)(v14 - 56);
        uint64_t v15 = v14 - 56;
        v12 += ~(v12 >> 1);
        if (*a2 >= v16) {
          unint64_t v12 = v13;
        }
        else {
          uint64_t v6 = v15;
        }
      }
      while (v12);
    }
    sub_100024A14((uint64_t *)(a1 + 24), v6, (unint64_t)a2);
    double v17 = *(double *)(a1 + 8);
    double v18 = *a2;
    if (v17 < 0.0 || v17 > v18) {
      *(double *)(a1 + 8) = v18;
    }
    if (*(double *)(a1 + 16) < v18) {
      *(double *)(a1 + 16) = v18;
    }
  }
  else
  {
    uint64_t v3 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v4 = (void *)(a1 + 160);
      if (*(char *)(a1 + 183) < 0) {
        __int16 v4 = (void *)*v4;
      }
      int v20 = 68289283;
      int v21 = 0;
      __int16 v22 = 2082;
      __int16 v23 = "";
      __int16 v24 = 2081;
      __int16 v25 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,updateWithInvalidArgs\", \"history\":%{private, location:escape_only}s}", (uint8_t *)&v20, 0x1Cu);
    }
  }
}

void sub_100024608(char *a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = a1 + 48;
    if (a1[71] < 0) {
      uint64_t v3 = (void *)*v3;
    }
    __int16 v4 = a1 + 160;
    if (a1[183] < 0) {
      __int16 v4 = (void *)*v4;
    }
    *(_DWORD *)uint64_t buf = 68289539;
    int v14 = 0;
    __int16 v15 = 2082;
    double v16 = "";
    __int16 v17 = 2081;
    double v18 = v3;
    __int16 v19 = 2081;
    int v20 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,save\", \"filePath\":%{private, location:escape_only}s, \"debugName\":%{private, location:escape_only}s}", buf, 0x26u);
  }
  if (a1[184])
  {
    long long v5 = a1 + 48;
    if (a1[71] < 0) {
      long long v5 = *(char **)v5;
    }
    sub_10000DD48(&__p, "0002");
    sub_1000859E8((uint64_t)buf, v5, (uint64_t)&__p);
    if (SBYTE3(v12) < 0) {
      operator delete(__p);
    }
    if (v21) {
      operator new[]();
    }
    double v8 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      char v9 = a1 + 160;
      if (a1[183] < 0) {
        char v9 = (void *)*v9;
      }
      std::string __p = (void *)68289283;
      v11[0] = 2082;
      *(void *)&v11[1] = "";
      v11[5] = 2081;
      unint64_t v12 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,cannotOpenFileToSave\", \"history\":%{private, location:escape_only}s}", (uint8_t *)&__p, 0x1Cu);
    }
    sub_100085D74((uint64_t)buf);
  }
  else
  {
    uint64_t v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = a1 + 160;
      if (a1[183] < 0) {
        uint64_t v7 = (void *)*v7;
      }
      *(_DWORD *)uint64_t buf = 68289283;
      int v14 = 0;
      __int16 v15 = 2082;
      double v16 = "";
      __int16 v17 = 2081;
      double v18 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,deferSavingTillFirstUnlock\", \"history\":%{private, location:escape_only}s}", buf, 0x1Cu);
    }
    a1[185] = 1;
  }
}

void sub_100024990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,char a25)
{
}

void *sub_100024A14(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  __int16 v4 = (void *)a2;
  uint64_t v7 = *a1;
  unint64_t v6 = a1[1];
  uint64_t v8 = 0x6DB6DB6DB6DB6DB7 * ((a2 - *a1) >> 3);
  unint64_t v11 = a1[2];
  uint64_t v9 = (uint64_t)(a1 + 2);
  unint64_t v10 = v11;
  if (v6 >= v11)
  {
    unint64_t v13 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v6 - v7) >> 3) + 1;
    if (v13 > 0x492492492492492) {
      sub_1000050E8();
    }
    unint64_t v14 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v10 - v7) >> 3);
    if (2 * v14 > v13) {
      unint64_t v13 = 2 * v14;
    }
    if (v14 >= 0x249249249249249) {
      unint64_t v15 = 0x492492492492492;
    }
    else {
      unint64_t v15 = v13;
    }
    uint64_t v22 = v9;
    if (v15) {
      double v16 = (char *)sub_100025130(v9, v15);
    }
    else {
      double v16 = 0;
    }
    double v18 = v16;
    __int16 v19 = &v16[56 * v8];
    int v20 = v19;
    uint64_t v21 = &v16[56 * v15];
    sub_100024D28(&v18, a3);
    __int16 v4 = (void *)sub_100024EAC(a1, &v18, (uint64_t)v4);
    sub_10002517C((uint64_t)&v18);
  }
  else if (a2 == v6)
  {
    sub_100024FA8(a2, a3);
    a1[1] = (uint64_t)(v4 + 7);
  }
  else
  {
    sub_100024C90((uint64_t)a1, a2, v6, a2 + 56);
    if ((unint64_t)v4 <= a3) {
      a3 += 56 * (a1[1] > a3);
    }
    void *v4 = *(void *)a3;
    uint64_t v12 = v7 + 56 * v8;
    std::string::operator=((std::string *)(v12 + 8), (const std::string *)(a3 + 8));
    std::string::operator=((std::string *)(v12 + 32), (const std::string *)(a3 + 32));
  }
  return v4;
}

void sub_100024BBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v11 + 8) = v10;
  _Unwind_Resume(exception_object);
}

uint64_t sub_100024BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      *(void *)a4 = *(void *)v5;
      uint64_t v7 = (void **)(a4 + 8);
      if (*(char *)(a4 + 31) < 0) {
        operator delete(*v7);
      }
      long long v8 = *(_OWORD *)(v5 + 8);
      *(void *)(a4 + 24) = *(void *)(v5 + 24);
      *(_OWORD *)uint64_t v7 = v8;
      *(unsigned char *)(v5 + 31) = 0;
      *(unsigned char *)(v5 + 8) = 0;
      uint64_t v9 = (void **)(a4 + 32);
      if (*(char *)(a4 + 55) < 0) {
        operator delete(*v9);
      }
      long long v10 = *(_OWORD *)(v5 + 32);
      *(void *)(a4 + 48) = *(void *)(v5 + 48);
      *(_OWORD *)uint64_t v9 = v10;
      *(unsigned char *)(v5 + 55) = 0;
      *(unsigned char *)(v5 + 32) = 0;
      a4 += 56;
      v5 += 56;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

uint64_t sub_100024C90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  uint64_t v8 = v6;
  if (v7 < a3)
  {
    unint64_t v9 = v7;
    uint64_t v8 = *(void *)(a1 + 8);
    do
    {
      *(void *)uint64_t v8 = *(void *)v9;
      long long v10 = *(_OWORD *)(v9 + 8);
      *(void *)(v8 + 24) = *(void *)(v9 + 24);
      *(_OWORD *)(v8 + 8) = v10;
      *(void *)(v9 + 16) = 0;
      *(void *)(v9 + 24) = 0;
      *(void *)(v9 + 8) = 0;
      long long v11 = *(_OWORD *)(v9 + 32);
      *(void *)(v8 + 48) = *(void *)(v9 + 48);
      *(_OWORD *)(v8 + 32) = v11;
      *(void *)(v9 + 40) = 0;
      *(void *)(v9 + 48) = 0;
      *(void *)(v9 + 32) = 0;
      v8 += 56;
      v9 += 56;
    }
    while (v9 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return sub_100025058((uint64_t)&v13, a2, v7, v6);
}

uint64_t sub_100024D28(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  if (v4 == a1[3])
  {
    unint64_t v5 = a1[1];
    if (v5 <= *a1)
    {
      if (v4 == *a1) {
        unint64_t v10 = 1;
      }
      else {
        unint64_t v10 = 0xDB6DB6DB6DB6DB6ELL * ((v4 - *a1) >> 3);
      }
      unint64_t v11 = v10 >> 2;
      uint64_t v12 = a1[4];
      uint64_t v28 = a1[4];
      char v13 = (char *)sub_100025130(v12, v10);
      unint64_t v15 = &v13[56 * v11];
      unint64_t v16 = a1[1];
      unint64_t v17 = a1[2] - v16;
      if (v17)
      {
        double v18 = &v15[v17];
        __int16 v19 = &v13[56 * v11];
        do
        {
          *(void *)__int16 v19 = *(void *)v16;
          long long v20 = *(_OWORD *)(v16 + 8);
          *((void *)v19 + 3) = *(void *)(v16 + 24);
          *(_OWORD *)(v19 + 8) = v20;
          *(void *)(v16 + 16) = 0;
          *(void *)(v16 + 24) = 0;
          *(void *)(v16 + 8) = 0;
          long long v21 = *(_OWORD *)(v16 + 32);
          *((void *)v19 + 6) = *(void *)(v16 + 48);
          *((_OWORD *)v19 + 2) = v21;
          *(void *)(v16 + 40) = 0;
          *(void *)(v16 + 48) = 0;
          *(void *)(v16 + 32) = 0;
          v19 += 56;
          v16 += 56;
        }
        while (v19 != v18);
        int64x2_t v22 = *(int64x2_t *)(a1 + 1);
      }
      else
      {
        int64x2_t v22 = vdupq_n_s64(v16);
        double v18 = &v13[56 * v11];
      }
      uint64_t v25 = *a1;
      *a1 = v13;
      a1[1] = v15;
      int64x2_t v26 = v22;
      uint64_t v23 = a1[3];
      a1[2] = v18;
      a1[3] = &v13[56 * v14];
      uint64_t v27 = v23;
      sub_10002517C((uint64_t)&v25);
      uint64_t v4 = a1[2];
    }
    else
    {
      uint64_t v6 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v5 - *a1) >> 3);
      if (v6 >= -1) {
        uint64_t v7 = v6 + 1;
      }
      else {
        uint64_t v7 = v6 + 2;
      }
      uint64_t v8 = -56 * (v7 >> 1);
      sub_100024BDC((uint64_t)&v25, v5, v4, v5 - 56 * (v7 >> 1));
      uint64_t v4 = v9;
      a1[1] += v8;
      a1[2] = v9;
    }
  }
  uint64_t result = sub_100024FA8(v4, a2);
  a1[2] += 56;
  return result;
}

uint64_t sub_100024EAC(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t result = a2[1];
  uint64_t v5 = *a1;
  uint64_t v6 = result;
  if (*a1 != a3)
  {
    uint64_t v7 = a3;
    uint64_t v6 = a2[1];
    do
    {
      uint64_t v8 = *(void *)(v7 - 56);
      v7 -= 56;
      *(void *)(v6 - 56) = v8;
      v6 -= 56;
      long long v9 = *(_OWORD *)(v7 + 8);
      *(void *)(v6 + 24) = *(void *)(v7 + 24);
      *(_OWORD *)(v6 + 8) = v9;
      *(void *)(v7 + 16) = 0;
      *(void *)(v7 + 24) = 0;
      *(void *)(v7 + 8) = 0;
      long long v10 = *(_OWORD *)(v7 + 32);
      *(void *)(v6 + 48) = *(void *)(v7 + 48);
      *(_OWORD *)(v6 + 32) = v10;
      *(void *)(v7 + 40) = 0;
      *(void *)(v7 + 48) = 0;
      *(void *)(v7 + 32) = 0;
    }
    while (v7 != v5);
  }
  a2[1] = v6;
  uint64_t v11 = a1[1];
  uint64_t v12 = a2[2];
  if (v11 != a3)
  {
    do
    {
      *(void *)uint64_t v12 = *(void *)a3;
      long long v13 = *(_OWORD *)(a3 + 8);
      *(void *)(v12 + 24) = *(void *)(a3 + 24);
      *(_OWORD *)(v12 + 8) = v13;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      *(void *)(a3 + 8) = 0;
      long long v14 = *(_OWORD *)(a3 + 32);
      *(void *)(v12 + 48) = *(void *)(a3 + 48);
      *(_OWORD *)(v12 + 32) = v14;
      *(void *)(a3 + 40) = 0;
      *(void *)(a3 + 48) = 0;
      *(void *)(a3 + 32) = 0;
      v12 += 56;
      a3 += 56;
    }
    while (a3 != v11);
    uint64_t v6 = a2[1];
  }
  a2[2] = v12;
  uint64_t v15 = *a1;
  *a1 = v6;
  a2[1] = v15;
  uint64_t v16 = a1[1];
  a1[1] = a2[2];
  a2[2] = v16;
  uint64_t v17 = a1[2];
  a1[2] = a2[3];
  a2[3] = v17;
  *a2 = a2[1];
  return result;
}

uint64_t sub_100024FA8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_100004CB8((unsigned char *)(a1 + 8), *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
  }
  uint64_t v5 = (unsigned char *)(a1 + 32);
  if (*(char *)(a2 + 55) < 0)
  {
    sub_100004CB8(v5, *(void **)(a2 + 32), *(void *)(a2 + 40));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)uint64_t v5 = v6;
  }
  return a1;
}

void sub_10002503C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100025058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = a3 + v7;
      uint64_t v9 = a4 + v7;
      *(void *)(a4 + v7 - 56) = *(void *)(a3 + v7 - 56);
      long long v10 = (void **)(a4 + v7 - 48);
      if (*(char *)(a4 + v7 - 25) < 0) {
        operator delete(*v10);
      }
      long long v11 = *(_OWORD *)(v8 - 48);
      *(void *)(a4 + v7 - 32) = *(void *)(v8 - 32);
      *(_OWORD *)long long v10 = v11;
      *(unsigned char *)(v8 - 25) = 0;
      *(unsigned char *)(v8 - 48) = 0;
      uint64_t v12 = (void **)(v9 - 24);
      if (*(char *)(v9 - 1) < 0) {
        operator delete(*v12);
      }
      uint64_t v13 = a3 + v7;
      long long v14 = *(_OWORD *)(a3 + v7 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 + v7 - 8);
      *(_OWORD *)uint64_t v12 = v14;
      *(unsigned char *)(v13 - 1) = 0;
      *(unsigned char *)(v13 - 24) = 0;
      v7 -= 56;
    }
    while (a3 + v7 != a2);
  }
  return a3;
}

void *sub_100025130(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x492492492492493) {
    sub_100004E00();
  }
  return operator new(56 * a2);
}

uint64_t sub_10002517C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 56;
    sub_100023988(i - 56);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1000251CC(uint64_t a1, long long *a2, long long *a3, double a4)
{
  *(double *)a1 = a4;
  if (*((char *)a2 + 23) < 0)
  {
    sub_100004CB8((unsigned char *)(a1 + 8), *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v6 = *a2;
    *(void *)(a1 + 24) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v6;
  }
  uint64_t v7 = (unsigned char *)(a1 + 32);
  if (*((char *)a3 + 23) < 0)
  {
    sub_100004CB8(v7, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v8 = *a3;
    *(void *)(a1 + 48) = *((void *)a3 + 2);
    *(_OWORD *)uint64_t v7 = v8;
  }
  return a1;
}

void sub_100025258(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_100025278()
{
}

void *sub_10002528C(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F5F78;
  result[1] = v3;
  return result;
}

uint64_t sub_1000252D4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F5F78;
  a2[1] = v2;
  return result;
}

void sub_100025300(uint64_t a1)
{
}

uint64_t sub_100025308(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100025348()
{
}

void sub_100025354(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (!*(unsigned char *)(*a1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      uint64_t v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100025424(v1);
  }
}

void sub_100025424(uint64_t a1)
{
  *(unsigned char *)a1 = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 8) = _Q0;
  *(unsigned char *)(a1 + 152) = 0;
  uint64_t v8 = *(void *)(a1 + 24);
  for (uint64_t i = *(void *)(a1 + 32); i != v8; sub_100023988(i))
    i -= 56;
  *(void *)(a1 + 32) = v8;
}

uint64_t sub_10002547C(uint64_t a1)
{
  *(_WORD *)a1 = 256;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 8) = _Q0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 128) = 0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 136) = xmmword_1000B10B0;
  *(unsigned char *)(a1 + 152) = 0;
  sub_10000DD48((void *)(a1 + 160), "Unknown");
  *(_WORD *)(a1 + 184) = 0;
  return a1;
}

void sub_100025500(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10002553C((void *)(v2 + 104));
  sub_10002553C((void *)(v2 + 72));
  if (*(char *)(v2 + 71) < 0) {
    operator delete(*(void **)(v2 + 48));
  }
  sub_100023904((void ***)va);
  _Unwind_Resume(a1);
}

void *sub_10002553C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1000255C0(void *a1, uint64_t a2)
{
  sub_100025634((uint64_t)v4, a2);
  sub_1000256CC(v4, a1);
  sub_10002553C(v4);
  return a1;
}

uint64_t sub_100025634(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1000256CC(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    __int16 v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_10002592C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100004CA4(a1);
}

void sub_10002593C()
{
}

void *sub_100025950()
{
  uint64_t result = operator new(0x10uLL);
  void *result = off_1000F5FF8;
  return result;
}

void sub_100025988(uint64_t a1, void *a2)
{
  *a2 = off_1000F5FF8;
}

uint64_t sub_1000259B0(int a1, uint64_t a2, std::string *this)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_100004CB8(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  std::string::operator=(this, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return 1;
}

void sub_100025A24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100025A40(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100025A80()
{
}

void sub_100025A8C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v9 = a2;
  *a1 = v9;
  sub_100027E74((uint64_t)(a1 + 1), a3);
  sub_10000F63C((uint64_t)(a1 + 5), a6);
  v11[0] = off_1000F60C8;
  v11[1] = a1;
  v11[3] = v11;
  v10[0] = off_1000F6148;
  v10[1] = &stru_1000F6098;
  v10[3] = v10;
  SACloudChannel::create(v9);
}

void sub_100025EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t *a10, void *a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  sub_10000F6D4((void *)(v45 - 176));
  std::__shared_weak_count::~__shared_weak_count(v44);
  operator delete(v47);
  sub_10000F6D4(&a22);
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_1000293A8(a9);
  sub_10003F654(v43);
  sub_100027D8C(v42, *(char **)(v38 + 112));
  if (*(char *)(v38 + 103) < 0) {
    operator delete(*v41);
  }
  uint64_t v48 = *a10;
  *a10 = 0;
  if (v48) {
    (*(void (**)(uint64_t))(*(void *)v48 + 8))(v48);
  }
  sub_10000F6D4(a11);
  sub_10002809C(v40);

  _Unwind_Resume(a1);
}

void sub_100026074(NSObject **a1)
{
  dispatch_time_t v2 = dispatch_time(0xFFFFFFFFFFFFFFFELL, 30000000000);
  uint64_t v3 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100026FD4;
  block[3] = &unk_1000F5EA8;
  void block[4] = a1;
  dispatch_after(v2, v3, block);
}

uint64_t sub_100026104(uint64_t a1)
{
  sub_100028C64((void *)(a1 + 552));
  sub_100027D8C(a1 + 528, *(char **)(a1 + 536));
  sub_10000F6D4((void *)(a1 + 480));

  dispatch_time_t v2 = *(std::__shared_weak_count **)(a1 + 464);
  if (v2) {
    sub_100028F6C(v2);
  }
  sub_1000293A8((void *)(a1 + 424));
  sub_10003F654(a1 + 128);
  sub_100027D8C(a1 + 104, *(char **)(a1 + 112));
  if (*(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  uint64_t v3 = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  sub_10000F6D4((void *)(a1 + 40));
  sub_10002809C((void *)(a1 + 8));

  return a1;
}

void sub_1000261CC(uint64_t a1, int a2)
{
  __int16 v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289282;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    __int16 v8 = 1026;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,onParticipationChange\", \"isParticipating\":%{public}hhd}", (uint8_t *)v5, 0x18u);
  }
  sub_10003F6E8(a1 + 128, a2);
}

void sub_1000262A8(uint64_t a1, CLLocationDegrees a2, CLLocationDegrees a3, double a4, double a5)
{
  long long v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v11[0] = 68289795;
    v11[1] = 0;
    __int16 v12 = 2082;
    uint64_t v13 = "";
    __int16 v14 = 2049;
    CLLocationDegrees v15 = a2;
    __int16 v16 = 2049;
    CLLocationDegrees v17 = a3;
    __int16 v18 = 2049;
    double v19 = a5;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,onLocationChanged\", \"lat\":\"%{private}0.6f\", \"lon\":\"%{private}0.6f\", \"unc\":\"%{private}0.2f\"}", (uint8_t *)v11, 0x30u);
  }
  sub_100040938(a1 + 128, a2, a3, a4, a5);
}

void sub_1000263D4(uint64_t a1, int a2)
{
  __int16 v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289282;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    __int16 v8 = 1026;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,onLocationAuthorized\", \"isAuthorized\":%{public}d}", (uint8_t *)v5, 0x18u);
  }
  sub_1000412C0(a1 + 128, a2);
}

void sub_1000264B4(uint64_t a1, int a2)
{
  __int16 v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289282;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    __int16 v8 = 1026;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,onInexpensiveNetworkConnected\", \"isConnected\":%{public}hhd}", (uint8_t *)v5, 0x18u);
  }
  sub_1000413D0(a1 + 128, a2);
}

long long *sub_100026590(uint64_t a1, int a2)
{
  __int16 v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 68289282;
    v6[1] = 0;
    __int16 v7 = 2082;
    __int16 v8 = "";
    __int16 v9 = 1026;
    int v10 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,onCellNetworkConnected\", \"isConnected\":%{public}hhd}", (uint8_t *)v6, 0x18u);
  }
  return sub_100041494(a1 + 128, a2);
}

uint64_t sub_10002666C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int16 v8 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = *(unsigned int *)(a1 + 16);
    uint64_t v10 = *(unsigned int *)(a2 + 16);
    *(_DWORD *)uint64_t buf = 68289538;
    int v39 = 0;
    __int16 v40 = 2082;
    int64x2_t v41 = "";
    __int16 v42 = 2050;
    uint64_t v43 = v9;
    __int16 v44 = 2050;
    uint64_t v45 = v10;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,isChannelListSame\", \"channelSet1.size()\":%{public}lu, \"channelSet2.size()\":%{public}lu}", buf, 0x26u);
  }
  uint64_t v11 = *(void *)a1;
  __int16 v12 = *(void ***)a2;
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    if (v11 == a1 + 8) {
      return 1;
    }
    uint64_t v13 = *(void ***)a2;
    __int16 v14 = *(void **)a1;
    while (1)
    {
      uint64_t v15 = *((unsigned __int8 *)v14 + 55);
      if ((v15 & 0x80u) == 0) {
        __int16 v16 = (void *)*((unsigned __int8 *)v14 + 55);
      }
      else {
        __int16 v16 = (void *)v14[5];
      }
      CLLocationDegrees v17 = (void *)*((unsigned __int8 *)v13 + 55);
      int v18 = (char)v17;
      if ((char)v17 < 0) {
        CLLocationDegrees v17 = v13[5];
      }
      if (v16 != v17) {
        break;
      }
      double v19 = (const void **)(v14 + 4);
      if (v18 >= 0) {
        long long v20 = (unsigned __int8 *)(v13 + 4);
      }
      else {
        long long v20 = (unsigned __int8 *)v13[4];
      }
      if ((v15 & 0x80) != 0)
      {
        if (memcmp(*v19, v20, v14[5])) {
          break;
        }
      }
      else if (*((unsigned char *)v14 + 55))
      {
        while (*(unsigned __int8 *)v19 == *v20)
        {
          double v19 = (const void **)((char *)v19 + 1);
          ++v20;
          if (!--v15) {
            goto LABEL_21;
          }
        }
        break;
      }
LABEL_21:
      if (*((_DWORD *)v14 + 14) != *((_DWORD *)v13 + 14)) {
        break;
      }
      long long v21 = (void *)v14[1];
      int64x2_t v22 = v14;
      if (v21)
      {
        do
        {
          __int16 v14 = v21;
          long long v21 = (void *)*v21;
        }
        while (v21);
      }
      else
      {
        do
        {
          __int16 v14 = (void *)v22[2];
          BOOL v23 = *v14 == (void)v22;
          int64x2_t v22 = v14;
        }
        while (!v23);
      }
      __int16 v24 = (void **)v13[1];
      if (v24)
      {
        do
        {
          uint64_t v25 = v24;
          __int16 v24 = (void **)*v24;
        }
        while (v24);
      }
      else
      {
        do
        {
          uint64_t v25 = (void **)v13[2];
          BOOL v23 = *v25 == v13;
          uint64_t v13 = v25;
        }
        while (!v23);
      }
      uint64_t v13 = v25;
      if (v14 == (void *)(a1 + 8)) {
        return 1;
      }
    }
  }
  uint64_t v36 = a1 + 8;
  uint64_t v37 = v11;
  int64x2_t v34 = (void **)(a2 + 8);
  uint64_t v35 = v12;
  *(void *)&long long v33 = a4;
  *((void *)&v33 + 1) = a4 + 8;
  sub_1000274E0((uint64_t)buf, &v37, &v36, &v35, &v34, &v33);
  uint64_t v27 = *(void *)a2;
  uint64_t v28 = *(void ***)a1;
  uint64_t v36 = a2 + 8;
  uint64_t v37 = v27;
  int64x2_t v34 = (void **)(a1 + 8);
  uint64_t v35 = v28;
  *(void *)&long long v33 = a3;
  *((void *)&v33 + 1) = a3 + 8;
  sub_1000274E0((uint64_t)buf, &v37, &v36, &v35, &v34, &v33);
  __int16 v29 = SALogObjectGeneral;
  BOOL v30 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  uint64_t result = 0;
  if (v30)
  {
    uint64_t v31 = *(unsigned int *)(a3 + 16);
    uint64_t v32 = *(unsigned int *)(a4 + 16);
    *(_DWORD *)uint64_t buf = 68289538;
    int v39 = 0;
    __int16 v40 = 2082;
    int64x2_t v41 = "";
    __int16 v42 = 2050;
    uint64_t v43 = v31;
    __int16 v44 = 2050;
    uint64_t v45 = v32;
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,isChannelListSame\", \"addList\":%{public}llu, \"removeList\":%{public}llu}", buf, 0x26u);
    return 0;
  }
  return result;
}

void sub_100026994(uint64_t a1, void *a2)
{
  __int16 v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,removeChannel\"}", buf, 0x12u);
  }
  __int16 v7 = (void *)*a2;
  uint64_t v5 = a2 + 1;
  __int16 v6 = v7;
  if (v7 != v5)
  {
    do
    {
      if (*((char *)v6 + 55) < 0)
      {
        sub_100004CB8(__p, (void *)v6[4], v6[5]);
      }
      else
      {
        *(_OWORD *)std::string __p = *((_OWORD *)v6 + 2);
        uint64_t v16 = v6[6];
      }
      int v8 = *((_DWORD *)v6 + 14);
      int v17 = v8;
      uint64_t v9 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v10 = __p;
        if (v16 < 0) {
          uint64_t v10 = (void **)__p[0];
        }
        *(_DWORD *)uint64_t buf = 68289539;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2081;
        *(void *)&buf[20] = v10;
        __int16 v19 = 1025;
        int v20 = v8;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,removeChannel\", \"channelId\":%{private, location:escape_only}s, \"channelType\":%{private}d}", buf, 0x22u);
        int v8 = v17;
      }
      if (SHIBYTE(v16) < 0)
      {
        sub_100004CB8(buf, __p[0], (unint64_t)__p[1]);
        int v11 = v17;
      }
      else
      {
        *(_OWORD *)uint64_t buf = *(_OWORD *)__p;
        *(void *)&buf[16] = v16;
        int v11 = v8;
      }
      *(_DWORD *)&buf[24] = v11;
      if ((v8 & 0xFFFFFFFD) == 0) {
        (*(void (**)(void, unsigned char *))(**(void **)(a1 + 72) + 16))(*(void *)(a1 + 72), buf);
      }
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      if (SHIBYTE(v16) < 0) {
        operator delete(__p[0]);
      }
      __int16 v12 = (void *)v6[1];
      if (v12)
      {
        do
        {
          uint64_t v13 = v12;
          __int16 v12 = (void *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          uint64_t v13 = (void *)v6[2];
          BOOL v14 = *v13 == (void)v6;
          __int16 v6 = v13;
        }
        while (!v14);
      }
      __int16 v6 = v13;
    }
    while (v13 != v5);
  }
}

void sub_100026C0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a16 < 0) {
    operator delete(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_100026C48(uint64_t a1, void *a2)
{
  __int16 v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,addChannel\"}", buf, 0x12u);
  }
  __int16 v7 = (void *)*a2;
  uint64_t v5 = a2 + 1;
  __int16 v6 = v7;
  if (v7 != v5)
  {
    do
    {
      if (*((char *)v6 + 55) < 0)
      {
        sub_100004CB8(__p, (void *)v6[4], v6[5]);
      }
      else
      {
        *(_OWORD *)std::string __p = *((_OWORD *)v6 + 2);
        uint64_t v16 = v6[6];
      }
      int v8 = *((_DWORD *)v6 + 14);
      int v17 = v8;
      uint64_t v9 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v10 = __p;
        if (v16 < 0) {
          uint64_t v10 = (void **)__p[0];
        }
        *(_DWORD *)uint64_t buf = 68289539;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2081;
        *(void *)&buf[20] = v10;
        __int16 v19 = 1025;
        int v20 = v8;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,addChannel\", \"channelId\":%{private, location:escape_only}s, \"channelType\":%{private}d}", buf, 0x22u);
        int v8 = v17;
      }
      if (SHIBYTE(v16) < 0)
      {
        sub_100004CB8(buf, __p[0], (unint64_t)__p[1]);
        int v11 = v17;
      }
      else
      {
        *(_OWORD *)uint64_t buf = *(_OWORD *)__p;
        *(void *)&buf[16] = v16;
        int v11 = v8;
      }
      *(_DWORD *)&buf[24] = v11;
      if ((v8 & 0xFFFFFFFD) == 0) {
        (*(void (**)(void, unsigned char *))(**(void **)(a1 + 72) + 24))(*(void *)(a1 + 72), buf);
      }
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      if (SHIBYTE(v16) < 0) {
        operator delete(__p[0]);
      }
      __int16 v12 = (void *)v6[1];
      if (v12)
      {
        do
        {
          uint64_t v13 = v12;
          __int16 v12 = (void *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          uint64_t v13 = (void *)v6[2];
          BOOL v14 = *v13 == (void)v6;
          __int16 v6 = v13;
        }
        while (!v14);
      }
      __int16 v6 = v13;
    }
    while (v13 != v5);
  }
}

void sub_100026EC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a16 < 0) {
    operator delete(a11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100026EFC(uint64_t a1, int a2, int a3)
{
  int v5 = a2;
  int v4 = a3;
  if (!a1) {
    sub_100005520();
  }
  return (*(uint64_t (**)(uint64_t, int *, int *))(*(void *)a1 + 48))(a1, &v5, &v4);
}

uint64_t sub_100026F54(uint64_t a1)
{
  sub_100027CA8(v7, a1 + 208);
  int v2 = v8;
  sub_100027CA8(v5, a1 + 256);
  uint64_t v3 = (v6 + v2);
  sub_100027D8C((uint64_t)v5, (char *)v5[1]);
  sub_100027D8C((uint64_t)v7, (char *)v7[1]);
  return v3;
}

void sub_100026FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
}

void sub_100026FD4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_10002705C;
  v3[3] = &unk_1000F5EA8;
  void v3[4] = v1;
  sub_10002705C((uint64_t)v3);
}

uint64_t sub_10002705C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = (void *)(v1 + 80);
    if (*(char *)(v1 + 103) < 0) {
      uint64_t v3 = (void *)*v3;
    }
    v5[0] = 68289283;
    v5[1] = 0;
    __int16 v6 = 2082;
    __int16 v7 = "";
    __int16 v8 = 2081;
    uint64_t v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,states\", \"fLocalAreaChannel\":%{private, location:escape_only}s}", (uint8_t *)v5, 0x1Cu);
  }
  sub_10004163C(v1 + 128);
  (*(void (**)(void))(**(void **)(v1 + 72) + 56))(*(void *)(v1 + 72));
  return sub_100026074(v1);
}

void sub_100027168(uint64_t a1, uint64_t *a2)
{
  int v4 = (std::__shared_weak_count *)a2[1];
  uint64_t v15 = *a2;
  uint64_t v16 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1000272B8(&v15);
  if (v16) {
    sub_100028F6C(v16);
  }
  uint64_t v5 = *(void *)(a1 + 72);
  if (v5)
  {
    __int16 v6 = (std::__shared_weak_count *)a2[1];
    uint64_t v13 = *a2;
    BOOL v14 = v6;
    if (v6) {
      atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    (*(void (**)(uint64_t, uint64_t *))(*(void *)v5 + 88))(v5, &v13);
    if (v14) {
      sub_100028F6C(v14);
    }
  }
  uint64_t v7 = a1 + 128;
  __int16 v8 = (std::__shared_weak_count *)a2[1];
  v12[0] = *a2;
  v12[1] = (uint64_t)v8;
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1000424E8(v7, v12);
  if (v8) {
    sub_100028F6C(v8);
  }
  uint64_t v9 = (std::__shared_weak_count *)a2[1];
  uint64_t v10 = *a2;
  int v11 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1000272B8(&v10);
  if (v11) {
    sub_100028F6C(v11);
  }
}

void sub_100027270(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_100028F6C(a14);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000272B8(void *a1)
{
  int v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = (void *)*a1;
    if (*(char *)(*a1 + 23) < 0) {
      uint64_t v3 = (void *)*v3;
    }
    uint64_t v4 = a1[1];
    if (v4) {
      uint64_t v4 = *(void *)(v4 + 8) + 1;
    }
    v5[0] = 68289539;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    __int16 v8 = 2081;
    uint64_t v9 = v3;
    __int16 v10 = 2050;
    uint64_t v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#sharedobj,status\", \"id\":%{private, location:escape_only}s, \"users\":%{public}lld}", (uint8_t *)v5, 0x26u);
  }
}

void sub_1000273A8(uint64_t a1, int a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289282;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    __int16 v8 = 1026;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,onEnhancedDeliveryEnabled,\", \"isEnabled,\":%{public}hhd}", (uint8_t *)v5, 0x18u);
  }
  sub_100042550(a1 + 128, a2);
}

uint64_t sub_100027484(uint64_t a1, int a2, int a3)
{
  int v6 = a2;
  int v5 = a3;
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3) {
    sub_100005520();
  }
  return (*(uint64_t (**)(uint64_t, int *, int *))(*(void *)v3 + 48))(v3, &v6, &v5);
}

uint64_t sub_1000274E0(uint64_t result, uint64_t *a2, void *a3, void ***a4, void ***a5, long long *a6)
{
  uint64_t v7 = result;
  __int16 v8 = (void *)*a2;
  int v9 = (void *)*a3;
  if (*a2 == *a3)
  {
LABEL_48:
    long long v34 = *a6;
    int v9 = v8;
    goto LABEL_49;
  }
  for (uint64_t i = *a4; *a4 != *a5; uint64_t i = *a4)
  {
    if (((char v15 = sub_10002779C(v8 + 4, i + 4)) != 0
       || ((int v16 = *((_DWORD *)v8 + 14), v17 = *((_DWORD *)i + 14), v16 < v17) ? (v15 = -1) : (v15 = 1), v16 != v17))
      && v15 < 0)
    {
      uint64_t result = sub_100027730((uint64_t)a6, *a2 + 32);
      __int16 v29 = (void *)*a2;
      BOOL v30 = *(void **)(*a2 + 8);
      if (v30)
      {
        do
        {
          uint64_t v31 = v30;
          BOOL v30 = (void *)*v30;
        }
        while (v30);
      }
      else
      {
        do
        {
          uint64_t v31 = (void *)v29[2];
          BOOL v25 = *v31 == (void)v29;
          __int16 v29 = v31;
        }
        while (!v25);
      }
      *a2 = (uint64_t)v31;
    }
    else
    {
      if (((v18 = *a4, uint64_t v19 = *a2, result = sub_10002779C(*a4 + 4, (void **)(*a2 + 32)), (_BYTE)result)
         || ((v20 = *((_DWORD *)v18 + 14), int v21 = *(_DWORD *)(v19 + 56), v20 < v21)
           ? (uint64_t result = 0xFFFFFFFFLL)
           : (uint64_t result = 1),
             v20 != v21))
        && (result & 0x80) != 0)
      {
        uint64_t v32 = *a4;
        long long v33 = (void **)(*a4)[1];
        if (v33)
        {
          do
          {
            uint64_t v28 = v33;
            long long v33 = (void **)*v33;
          }
          while (v33);
        }
        else
        {
          do
          {
            uint64_t v28 = (void **)v32[2];
            BOOL v25 = *v28 == v32;
            uint64_t v32 = v28;
          }
          while (!v25);
        }
      }
      else
      {
        int64x2_t v22 = (void *)*a2;
        BOOL v23 = *(void **)(*a2 + 8);
        if (v23)
        {
          do
          {
            __int16 v24 = v23;
            BOOL v23 = (void *)*v23;
          }
          while (v23);
        }
        else
        {
          do
          {
            __int16 v24 = (void *)v22[2];
            BOOL v25 = *v24 == (void)v22;
            int64x2_t v22 = v24;
          }
          while (!v25);
        }
        *a2 = (uint64_t)v24;
        int64x2_t v26 = *a4;
        uint64_t v27 = (void **)(*a4)[1];
        if (v27)
        {
          do
          {
            uint64_t v28 = v27;
            uint64_t v27 = (void **)*v27;
          }
          while (v27);
        }
        else
        {
          do
          {
            uint64_t v28 = (void **)v26[2];
            BOOL v25 = *v28 == v26;
            int64x2_t v26 = v28;
          }
          while (!v25);
        }
      }
      *a4 = v28;
    }
    __int16 v8 = (void *)*a2;
    int v9 = (void *)*a3;
    if (*a2 == *a3) {
      goto LABEL_48;
    }
  }
  long long v34 = *a6;
  long long v37 = *a6;
  if (v8 != v9)
  {
    do
    {
      uint64_t result = sub_100027730((uint64_t)&v37, (uint64_t)(v8 + 4));
      uint64_t v35 = (void *)v8[1];
      if (v35)
      {
        do
        {
          uint64_t v36 = v35;
          uint64_t v35 = (void *)*v35;
        }
        while (v35);
      }
      else
      {
        do
        {
          uint64_t v36 = (void *)v8[2];
          BOOL v25 = *v36 == (void)v8;
          __int16 v8 = v36;
        }
        while (!v25);
      }
      __int16 v8 = v36;
    }
    while (v36 != v9);
    long long v34 = v37;
  }
LABEL_49:
  *(void *)uint64_t v7 = v9;
  *(_OWORD *)(v7 + 8) = v34;
  return result;
}

uint64_t sub_100027730(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100027834(*(uint64_t ***)a1, *(uint64_t **)(a1 + 8), a2, a2);
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = (uint64_t *)v3[1];
  if (v4)
  {
    do
    {
      int v5 = v4;
      uint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  else
  {
    do
    {
      int v5 = (uint64_t *)v3[2];
      BOOL v6 = *v5 == (void)v3;
      uint64_t v3 = v5;
    }
    while (!v6);
  }
  *(void *)(a1 + 8) = v5;
  return a1;
}

uint64_t sub_10002779C(void *a1, void **a2)
{
  size_t v2 = *((unsigned __int8 *)a1 + 23);
  size_t v3 = a1[1];
  if ((v2 & 0x80u) != 0)
  {
    a1 = (void *)*a1;
    size_t v2 = v3;
  }
  int v4 = *((char *)a2 + 23);
  if (v4 >= 0) {
    int v5 = a2;
  }
  else {
    int v5 = *a2;
  }
  if (v4 >= 0) {
    size_t v6 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v6 = (size_t)a2[1];
  }
  return sub_1000277D4(a1, v2, v5, v6);
}

uint64_t sub_1000277D4(const void *a1, size_t a2, void *__s2, size_t a4)
{
  if (a4 >= a2) {
    size_t v7 = a2;
  }
  else {
    size_t v7 = a4;
  }
  int v8 = memcmp(a1, __s2, v7);
  if (v8)
  {
    if ((v8 & 0x80000000) == 0) {
      return 1;
    }
  }
  else
  {
    if (a2 == a4) {
      return 0;
    }
    if (a2 >= a4) {
      return 1;
    }
  }
  return 255;
}

uint64_t *sub_100027834(uint64_t **a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  size_t v6 = (uint64_t **)sub_1000278B8(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_100027AD0((uint64_t)a1, a4, (uint64_t)&v8);
    sub_100015DE4(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t *sub_1000278B8(void *a1, uint64_t *a2, void ***a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9 = (void **)(a1 + 1);
  if (a1 + 1 == a2
    || ((char v11 = sub_10002779C((void *)a5, (void **)a2 + 4)) != 0
     || ((int v12 = *(_DWORD *)(a5 + 24), v13 = *((_DWORD *)a2 + 14), v12 < v13) ? (v11 = -1) : (v11 = 1), v12 != v13))
    && v11 < 0)
  {
    if ((uint64_t *)*a1 == a2)
    {
      int v18 = a2;
    }
    else
    {
      int v17 = (uint64_t *)*a2;
      if (*a2)
      {
        do
        {
          int v18 = v17;
          int v17 = (uint64_t *)v17[1];
        }
        while (v17);
      }
      else
      {
        int64x2_t v22 = a2;
        do
        {
          int v18 = (uint64_t *)v22[2];
          BOOL v23 = *v18 == (void)v22;
          int64x2_t v22 = v18;
        }
        while (v23);
      }
      char v24 = sub_10002779C(v18 + 4, (void **)a5);
      if (!v24)
      {
        int v25 = *((_DWORD *)v18 + 14);
        int v26 = *(_DWORD *)(a5 + 24);
        char v24 = v25 < v26 ? -1 : 1;
        if (v25 == v26) {
          goto LABEL_32;
        }
      }
      if ((v24 & 0x80) == 0) {
        goto LABEL_32;
      }
    }
    if (*a2)
    {
      *a3 = (void **)v18;
      return v18 + 1;
    }
    else
    {
      *a3 = (void **)a2;
      return a2;
    }
  }
  char v14 = sub_10002779C(a2 + 4, (void **)a5);
  if (!v14
    && ((v15 = *((_DWORD *)a2 + 14), v16 = *(_DWORD *)(a5 + 24), v15 < v16) ? (char v14 = -1) : (char v14 = 1), v15 == v16)
    || (v14 & 0x80) == 0)
  {
    *a3 = (void **)a2;
    *a4 = (uint64_t)a2;
    return a4;
  }
  a4 = a2 + 1;
  uint64_t v19 = a2[1];
  if (v19)
  {
    int v20 = (void **)a2[1];
    do
    {
      int v21 = v20;
      int v20 = (void **)*v20;
    }
    while (v20);
  }
  else
  {
    uint64_t v28 = (void **)a2;
    do
    {
      int v21 = (void **)v28[2];
      BOOL v23 = *v21 == v28;
      uint64_t v28 = v21;
    }
    while (!v23);
  }
  if (v21 == v9)
  {
LABEL_49:
    if (v19)
    {
      *a3 = v21;
      return (uint64_t *)v21;
    }
    else
    {
      *a3 = (void **)a2;
    }
    return a4;
  }
  char v29 = sub_10002779C((void *)a5, v21 + 4);
  if (v29
    || ((v30 = *(_DWORD *)(a5 + 24), int v31 = *((_DWORD *)v21 + 14), v30 < v31) ? (v29 = -1) : (v29 = 1), v30 != v31))
  {
    if (v29 < 0)
    {
      uint64_t v19 = *a4;
      goto LABEL_49;
    }
  }
LABEL_32:

  return sub_100027B78((uint64_t)a1, a3, a5);
}

unsigned char *sub_100027AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  size_t v6 = (char *)operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 32;
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t result = sub_100004CB8(result, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)a2;
    *((void *)v6 + 6) = *(void *)(a2 + 16);
  }
  *((_DWORD *)v6 + 14) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_100027B5C(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_100027C48(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t *sub_100027B78(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t *)(a1 + 8);
  int v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        size_t v7 = v4;
        int v8 = v4 + 4;
        char v9 = sub_10002779C((void *)a3, (void **)v4 + 4);
        if (!v9)
        {
          int v10 = *(_DWORD *)(a3 + 24);
          int v11 = *((_DWORD *)v7 + 14);
          char v9 = v10 < v11 ? -1 : 1;
          if (v10 == v11) {
            break;
          }
        }
        if ((v9 & 0x80) == 0) {
          break;
        }
        int v4 = (uint64_t *)*v7;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_19;
        }
      }
      char v12 = sub_10002779C(v8, (void **)a3);
      if (!v12)
      {
        int v13 = *((_DWORD *)v7 + 14);
        int v14 = *(_DWORD *)(a3 + 24);
        char v12 = v13 < v14 ? -1 : 1;
        if (v13 == v14) {
          break;
        }
      }
      if ((v12 & 0x80) == 0) {
        break;
      }
      uint64_t v5 = v7 + 1;
      int v4 = (uint64_t *)v7[1];
    }
    while (v4);
  }
  else
  {
    size_t v7 = (uint64_t *)(a1 + 8);
  }
LABEL_19:
  *a2 = v7;
  return v5;
}

void sub_100027C48(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 55) < 0) {
      operator delete(__p[4]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

uint64_t *sub_100027CA8(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_100027D00(a1, *(void **)a2, (void *)(a2 + 8));
  return a1;
}

void sub_100027CE8(_Unwind_Exception *a1)
{
  sub_100027D8C(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_100027D00(uint64_t *result, void *a2, void *a3)
{
  if (a2 != a3)
  {
    int v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    size_t v6 = result + 1;
    do
    {
      uint64_t result = sub_100027834(v5, v6, (uint64_t)(v4 + 4), (uint64_t)(v4 + 4));
      size_t v7 = (void *)v4[1];
      if (v7)
      {
        do
        {
          int v8 = v7;
          size_t v7 = (void *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          int v8 = (void *)v4[2];
          BOOL v9 = *v8 == (void)v4;
          int v4 = v8;
        }
        while (!v9);
      }
      int v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

void sub_100027D8C(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_100027D8C(a1, *(void *)a2);
    sub_100027D8C(a1, *((void *)a2 + 1));
    if (a2[55] < 0) {
      operator delete(*((void **)a2 + 4));
    }
    operator delete(a2);
  }
}

void *sub_100027DF0(void *a1)
{
  size_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_100027E74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100027F10()
{
}

void *sub_100027F24(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F60C8;
  result[1] = v3;
  return result;
}

uint64_t sub_100027F6C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F60C8;
  a2[1] = v2;
  return result;
}

void sub_100027F98(uint64_t a1, void **a2, void **a3)
{
}

uint64_t sub_100027FAC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100027FEC()
{
}

void sub_100027FF8(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v6 = a3;
  uint64_t v5 = *(void *)(a1 + 24);
  if (!v5) {
    sub_100005520();
  }
  (*(void (**)(uint64_t, id *, id *))(*(void *)v5 + 48))(v5, &v7, &v6);
}

void sub_100028080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void *sub_10002809C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_100028120(uint64_t a1)
{
  return a1;
}

void sub_10002814C(uint64_t a1)
{
  operator delete();
}

uint64_t sub_100028198()
{
  return 0;
}

id sub_1000281A0(uint64_t a1, void *a2)
{
  *a2 = off_1000F6148;
  id result = objc_retainBlock(*(id *)(a1 + 8));
  a2[1] = result;
  return result;
}

uint64_t sub_1000281E8(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  return _objc_release_x1();
}

uint64_t sub_1000281F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 8) + 16))();
}

uint64_t sub_10002820C(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F61A8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10002824C()
{
  return &off_1000F61A8;
}

void sub_10002825C()
{
}

void *sub_100028270(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F61C8;
  result[1] = v3;
  return result;
}

uint64_t sub_1000282B8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F61C8;
  a2[1] = v2;
  return result;
}

void sub_1000282E4(uint64_t a1, void **a2, unsigned __int8 *a3)
{
  int v4 = *a3;
  uint64_t v5 = *(void *)(a1 + 8);
  id v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289026;
    *(_WORD *)int v25 = 2082;
    *(void *)&id v25[2] = "";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,onChannelChanged\"}", (uint8_t *)&buf, 0x12u);
  }
  if (a2[2])
  {
    int64x2_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v20 = 0;
    int v21 = &v22;
    int v18 = &v19;
    uint64_t v19 = 0;
    if (sub_10002666C(v5 + 104, (uint64_t)a2, (uint64_t)&v21, (uint64_t)&v18))
    {
      int v7 = sub_100026F54(v5);
      sub_100027CA8(&buf, v5 + 232);
      int v8 = *(_DWORD *)&v25[8];
      sub_100027D8C((uint64_t)&buf, *(char **)v25);
      sub_100026EFC(*(void *)(v5 + 448), v7, v8);
      BOOL v9 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t buf = 68289026;
        *(_WORD *)int v25 = 2082;
        *(void *)&id v25[2] = "";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,onChannelChanged,SameAsBefore,DoNothing\"}", (uint8_t *)&buf, 0x12u);
      }
    }
    else
    {
      int v13 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        int v14 = *(unsigned __int8 *)(v5 + 520);
        uint64_t buf = 68289538;
        *(_WORD *)int v25 = 2082;
        *(void *)&id v25[2] = "";
        *(_WORD *)&v25[10] = 1026;
        int v26 = v14;
        __int16 v27 = 1026;
        int v28 = v4;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,onChannelChanged\", \"fIsFirstRunAfterBoot\":%{public}hhd, \"forceOrDeferChannelUpdate\":%{public}hhd}", (uint8_t *)&buf, 0x1Eu);
      }
      if (v4 || *(unsigned char *)(v5 + 520))
      {
        *(unsigned char *)(v5 + 520) = 0;
        sub_1000718B0(v5 + 472);
        int v15 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t buf = 68289026;
          *(_WORD *)int v25 = 2082;
          *(void *)&id v25[2] = "";
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,onChannelChanged,ReplaceActiveChannel\"}", (uint8_t *)&buf, 0x12u);
        }
        sub_100027D8C(v5 + 104, *(char **)(v5 + 112));
        *(void *)(v5 + 104) = v5 + 112;
        *(void *)(v5 + 112) = 0;
        *(void *)(v5 + 120) = 0;
        if ((void **)(v5 + 104) != a2) {
          sub_10002942C((uint64_t **)(v5 + 104), *a2, a2 + 1);
        }
        if (v20) {
          sub_100026994(v5, &v18);
        }
        if (v23) {
          sub_100026C48(v5, &v21);
        }
        int v16 = sub_100026F54(v5);
        sub_100027CA8(&buf, v5 + 232);
        int v17 = *(_DWORD *)&v25[8];
        sub_100027D8C((uint64_t)&buf, *(char **)v25);
        sub_100026EFC(*(void *)(v5 + 448), v16, v17);
      }
      else
      {
        if ((void **)(v5 + 528) != a2) {
          sub_10002942C((uint64_t **)(v5 + 528), *a2, a2 + 1);
        }
        sub_100071270(v5 + 472);
      }
    }
    sub_100027D8C((uint64_t)&v18, v19);
    sub_100027D8C((uint64_t)&v21, v22);
  }
  else
  {
    int v10 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t buf = 68289026;
      *(_WORD *)int v25 = 2082;
      *(void *)&id v25[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,onChannelChanged,ChannelIsEmpty,ClearAll\"}", (uint8_t *)&buf, 0x12u);
      int v10 = SALogObjectGeneral;
    }
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t buf = 68289026;
      *(_WORD *)int v25 = 2082;
      *(void *)&id v25[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,clearAllChannels\"}", (uint8_t *)&buf, 0x12u);
    }
    sub_100026994(v5, (void *)(v5 + 104));
    sub_100027D8C(v5 + 104, *(char **)(v5 + 112));
    *(void *)(v5 + 104) = v5 + 112;
    *(void *)(v5 + 120) = 0;
    *(void *)(v5 + 112) = 0;
    int v11 = sub_100026F54(v5);
    sub_100027CA8(&buf, v5 + 232);
    int v12 = *(_DWORD *)&v25[8];
    sub_100027D8C((uint64_t)&buf, *(char **)v25);
    sub_100026EFC(*(void *)(v5 + 448), v11, v12);
  }
}

void sub_100028760(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13)
{
}

uint64_t sub_10002878C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000287CC()
{
}

void *sub_1000287D8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100028860()
{
}

void *sub_100028874(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F6258;
  result[1] = v3;
  return result;
}

uint64_t sub_1000288BC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F6258;
  a2[1] = v2;
  return result;
}

uint64_t sub_1000288E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = 68289026;
    LOWORD(v8[0]) = 2082;
    *(void *)((char *)v8 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,onInitComplete\"}", (uint8_t *)&v7, 0x12u);
  }
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v7 = (uint64_t)off_1000F64A8;
  v8[0] = v1;
  _DWORD v8[2] = &v7;
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v3 + 72))(v3, &v7);
  sub_10000F6D4(&v7);
  uint64_t v4 = *(void *)(v1 + 64);
  if (!v4) {
    sub_100005520();
  }
  uint64_t v5 = *(uint64_t (**)(void))(*(void *)v4 + 48);

  return v5();
}

void sub_100028A34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100028A48(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100028A88()
{
}

void sub_100028A98()
{
}

void *sub_100028AAC(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F62D8;
  result[1] = v3;
  return result;
}

uint64_t sub_100028AF4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F62D8;
  a2[1] = v2;
  return result;
}

void sub_100028B20(uint64_t a1, int *a2, int *a3)
{
  int v3 = *a2;
  int v4 = *a3;
  uint64_t v5 = *(void *)(a1 + 8);
  id v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 68289538;
    v7[1] = 0;
    __int16 v8 = 2082;
    BOOL v9 = "";
    __int16 v10 = 1026;
    int v11 = v3;
    __int16 v12 = 1026;
    int v13 = v4;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,onBLERelayStateUpdateCB,\", \"isIgenousCapable,\":%{public}d, \"isIgenousEnabled,\":%{public}d}", (uint8_t *)v7, 0x1Eu);
  }
  if (*(void *)(v5 + 576)) {
    sub_100027484(v5 + 552, v3, v4);
  }
}

uint64_t sub_100028C18(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100028C58()
{
}

void *sub_100028C64(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100028CE8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1000F6358;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100028D08(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1000F6358;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_100028D5C(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 24);
  int v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = v2;
    if (*(char *)(a1 + 47) < 0) {
      int v4 = *v2;
    }
    v6[0] = 68289283;
    v6[1] = 0;
    __int16 v7 = 2082;
    __int16 v8 = "";
    __int16 v9 = 2081;
    __int16 v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#sharedobj,release\", \"id\":%{private, location:escape_only}s}", (uint8_t *)v6, 0x1Cu);
  }
  uint64_t v5 = *(void *)(a1 + 72);
  if (!v5) {
    sub_100005520();
  }
  (*(void (**)(uint64_t))(*(void *)v5 + 48))(v5);

  sub_10000F6D4((void *)(a1 + 48));
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*v2);
  }
}

void sub_100028E94(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100004CA4(a1);
}

void sub_100028EA8()
{
}

void *sub_100028EBC()
{
  id result = operator new(0x10uLL);
  void *result = off_1000F63A8;
  return result;
}

void sub_100028EF4(uint64_t a1, void *a2)
{
  *a2 = off_1000F63A8;
}

uint64_t sub_100028F20(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100028F60()
{
}

void sub_100028F6C(std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

void sub_100028FE4()
{
}

void *sub_100028FF8(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F6428;
  result[1] = v3;
  return result;
}

uint64_t sub_100029040(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F6428;
  a2[1] = v2;
  return result;
}

void sub_10002906C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289026;
    LOWORD(v13[0]) = 2082;
    *(char **)((char *)v13 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,onChannelSelectXPCActivityShceduled\"}", (uint8_t *)&buf, 0x12u);
  }
  sub_1000718B0(v1 + 472);
  __int16 v10 = 0;
  uint64_t v11 = 0;
  uint64_t v8 = 0;
  __int16 v9 = &v10;
  id v6 = &v7;
  __int16 v7 = 0;
  if (sub_10002666C(v1 + 104, v1 + 528, (uint64_t)&v9, (uint64_t)&v6))
  {
    uint64_t v3 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t buf = 68289026;
      LOWORD(v13[0]) = 2082;
      *(char **)((char *)v13 + 2) = "";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chmgr,onChannelChanged,SameAsBefore,DoNothing\"}", (uint8_t *)&buf, 0x12u);
    }
  }
  else
  {
    sub_100027D8C(v1 + 104, *(char **)(v1 + 112));
    *(void *)(v1 + 104) = v1 + 112;
    *(void *)(v1 + 112) = 0;
    *(void *)(v1 + 120) = 0;
    sub_10002942C((uint64_t **)(v1 + 104), *(void **)(v1 + 528), (void *)(v1 + 536));
    sub_100027D8C(v1 + 528, *(char **)(v1 + 536));
    *(void *)(v1 + 528) = v1 + 536;
    *(_OWORD *)(v1 + 536) = 0u;
    if (v8) {
      sub_100026994(v1, &v6);
    }
    if (v11) {
      sub_100026C48(v1, &v9);
    }
    int v4 = sub_100026F54(v1);
    sub_100027CA8(&buf, v1 + 232);
    int v5 = (int)v13[1];
    sub_100027D8C((uint64_t)&buf, v13[0]);
    sub_100026EFC(*(void *)(v1 + 448), v4, v5);
  }
  sub_100027D8C((uint64_t)&v6, v7);
  sub_100027D8C((uint64_t)&v9, v10);
}

void sub_100029298(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13)
{
}

uint64_t sub_1000292C4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100029304()
{
}

uint64_t sub_100029310(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1000293A8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t **sub_10002942C(uint64_t **result, void *a2, void *a3)
{
  int v5 = result;
  if (result[2])
  {
    id v6 = *result;
    __int16 v7 = result[1];
    void *result = (uint64_t *)(result + 1);
    _DWORD v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1]) {
      uint64_t v8 = (uint64_t *)v6[1];
    }
    else {
      uint64_t v8 = v6;
    }
    int v15 = result;
    int v16 = v8;
    int v17 = v8;
    if (v8)
    {
      int v16 = sub_100029650((uint64_t)v8);
      if (a2 != a3)
      {
        __int16 v9 = a2;
        do
        {
          std::string::operator=((std::string *)(v8 + 4), (const std::string *)(v9 + 4));
          *((_DWORD *)v8 + 14) = *((_DWORD *)v9 + 14);
          __int16 v10 = sub_1000295B8((uint64_t)v5, &v18, (uint64_t)(v17 + 4));
          sub_100015DE4(v5, (uint64_t)v18, (uint64_t **)v10, v17);
          int v17 = v16;
          if (v16) {
            int v16 = sub_100029650((uint64_t)v16);
          }
          uint64_t v11 = (void *)v9[1];
          if (v11)
          {
            do
            {
              a2 = v11;
              uint64_t v11 = (void *)*v11;
            }
            while (v11);
          }
          else
          {
            do
            {
              a2 = (void *)v9[2];
              BOOL v12 = *a2 == (void)v9;
              __int16 v9 = a2;
            }
            while (!v12);
          }
          uint64_t v8 = v17;
          if (v17) {
            BOOL v12 = a2 == a3;
          }
          else {
            BOOL v12 = 1;
          }
          __int16 v9 = a2;
        }
        while (!v12);
      }
    }
    id result = (uint64_t **)sub_1000296A4((uint64_t)&v15);
  }
  if (a2 != a3)
  {
    do
    {
      id result = (uint64_t **)sub_1000296FC(v5, (uint64_t)(a2 + 4));
      int v13 = (void *)a2[1];
      if (v13)
      {
        do
        {
          int v14 = v13;
          int v13 = (void *)*v13;
        }
        while (v13);
      }
      else
      {
        do
        {
          int v14 = (void *)a2[2];
          BOOL v12 = *v14 == (void)a2;
          a2 = v14;
        }
        while (!v12);
      }
      a2 = v14;
    }
    while (v14 != a3);
  }
  return result;
}

void sub_1000295A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void **sub_1000295B8(uint64_t a1, void ***a2, uint64_t a3)
{
  int v5 = (void **)(a1 + 8);
  int v4 = *(void ***)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        int v5 = v4;
        char v7 = sub_10002779C((void *)a3, v4 + 4);
        if (!v7)
        {
          int v8 = *(_DWORD *)(a3 + 24);
          int v9 = *((_DWORD *)v5 + 14);
          char v7 = v8 < v9 ? -1 : 1;
          if (v8 == v9) {
            break;
          }
        }
        if ((v7 & 0x80) == 0) {
          break;
        }
        int v4 = (void **)*v5;
        id result = v5;
        if (!*v5) {
          goto LABEL_13;
        }
      }
      int v4 = (void **)v5[1];
    }
    while (v4);
    id result = v5 + 1;
  }
  else
  {
    id result = (void **)(a1 + 8);
  }
LABEL_13:
  *a2 = v5;
  return result;
}

void *sub_100029650(uint64_t a1)
{
  id result = *(void **)(a1 + 16);
  if (result)
  {
    uint64_t v3 = (void *)*result;
    if (*result == a1)
    {
      void *result = 0;
      while (1)
      {
        int v4 = (void *)result[1];
        if (!v4) {
          break;
        }
        do
        {
          id result = v4;
          int v4 = (void *)*v4;
        }
        while (v4);
      }
    }
    else
    {
      for (result[1] = 0; v3; uint64_t v3 = (void *)result[1])
      {
        do
        {
          id result = v3;
          uint64_t v3 = (void *)*v3;
        }
        while (v3);
      }
    }
  }
  return result;
}

uint64_t sub_1000296A4(uint64_t a1)
{
  sub_100027D8C(*(void *)a1, *(char **)(a1 + 16));
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        uint64_t v3 = *(void *)(v3 + 16);
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    sub_100027D8C(*(void *)a1, (char *)v2);
  }
  return a1;
}

uint64_t *sub_1000296FC(uint64_t **a1, uint64_t a2)
{
  sub_100027AD0((uint64_t)a1, a2, (uint64_t)&v6);
  uint64_t v3 = sub_1000295B8((uint64_t)a1, &v5, (uint64_t)(v6 + 4));
  sub_100015DE4(a1, (uint64_t)v5, (uint64_t **)v3, v6);
  return v6;
}

void sub_100029754(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11)
{
  if (__p) {
    sub_100027C48((uint64_t)&a11, __p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10002977C()
{
}

void *sub_100029790(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F64A8;
  result[1] = v3;
  return result;
}

uint64_t sub_1000297D8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F64A8;
  a2[1] = v2;
  return result;
}

void sub_100029804(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(v1 + 464);
  *(void *)(v1 + 456) = 0;
  *(void *)(v1 + 464) = 0;
  if (v2) {
    sub_100028F6C(v2);
  }
}

uint64_t sub_10002981C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10002985C()
{
}

BOOL sub_100029868(void ****a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = mach_continuous_time();
    double v5 = sub_100087FDC(v4);
    sub_100029D50((uint64_t)a1, v5);
    id v6 = v3;
    uint64_t v7 = mach_continuous_time();
    double v8 = sub_100087FDC(v7);
    sub_100029D50((uint64_t)a1, v8);
    __int16 v10 = *a1;
    int v9 = a1[1];
    id v11 = v6;
    if (v10 != v9)
    {
      while (!sub_100062A50(*v10, v11))
      {
        if (++v10 == v9)
        {
          __int16 v10 = v9;
          break;
        }
      }
    }

    BOOL v12 = a1[1];
    int v13 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v22 = 2082;
      uint64_t v23 = "";
      __int16 v24 = 1026;
      LODWORD(v25) = v10 != v12;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#currentAlerts,isSAFound\", \"result\":%{public}hhd}", buf, 0x18u);
    }

    if (v10 == v12) {
      operator new();
    }
    int v14 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      SACommonUtils::getAnyCmam((SACommonUtils *)v11, __p);
      if (v20 >= 0) {
        int v15 = __p;
      }
      else {
        int v15 = (void **)__p[0];
      }
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v22 = 2082;
      uint64_t v23 = "";
      __int16 v24 = 2081;
      int v25 = v15;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#currentAlerts,addFailed\", \"cmam\":%{private, location:escape_only}s}", buf, 0x1Cu);
      if (v20 < 0) {
        operator delete(__p[0]);
      }
    }

    BOOL v17 = v10 == v12;
  }
  else
  {
    int v16 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v22 = 2082;
      uint64_t v23 = "";
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#currentAlerts,addFailed,emptyDictionary\"}", buf, 0x12u);
    }
    BOOL v17 = 0;
  }

  return v17;
}

void sub_100029CCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100029D50(uint64_t result, double a2)
{
  uint64_t v2 = result;
  id v3 = *(SACommonUtils ****)result;
  uint64_t v4 = *(SACommonUtils ****)(result + 8);
  double v8 = a2;
  if (v3 != v4)
  {
    while (1)
    {
      id result = sub_10002A114(&v8, v3);
      if (result) {
        break;
      }
      if (++v3 == v4)
      {
        id v3 = v4;
        goto LABEL_5;
      }
    }
    if (v3 != v4)
    {
      for (uint64_t i = v3 + 1; i != v4; ++i)
      {
        id result = sub_10002A114(&v8, i);
        if ((result & 1) == 0)
        {
          uint64_t v7 = *i;
          *uint64_t i = 0;
          id result = sub_10002A0C4((uint64_t *)v3++, (uint64_t)v7);
        }
      }
    }
  }
LABEL_5:
  double v5 = *(uint64_t **)(v2 + 8);
  if (v3 != (SACommonUtils ***)v5)
  {
    while (v5 != (uint64_t *)v3)
      id result = sub_10002A0C4(--v5, 0);
    *(void *)(v2 + 8) = v3;
  }
  return result;
}

BOOL sub_100029E58(void ****a1, uint64_t a2)
{
  int v4 = *(char *)(a2 + 23);
  if (v4 >= 0) {
    uint64_t v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v5 = *(void *)(a2 + 8);
  }
  id v6 = SALogObjectGeneral;
  BOOL result = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    if (result)
    {
      double v8 = *(void **)a2;
      if (v4 >= 0) {
        double v8 = (void *)a2;
      }
      *(_DWORD *)uint64_t buf = 68289283;
      int v19 = 0;
      __int16 v20 = 2082;
      int v21 = "";
      __int16 v22 = 2081;
      uint64_t v23 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#dbg,#currentAlerts,isHashFoundRequested\", \"hash\":%{private, location:escape_only}s}", buf, 0x1Cu);
    }
    uint64_t v9 = mach_continuous_time();
    double v10 = sub_100087FDC(v9);
    sub_100029D50((uint64_t)a1, v10);
    id v11 = *a1;
    BOOL v12 = a1[1];
    if (*(char *)(a2 + 23) < 0)
    {
      sub_100004CB8(__p, *(void **)a2, *(void *)(a2 + 8));
    }
    else
    {
      *(_OWORD *)std::string __p = *(_OWORD *)a2;
      uint64_t v17 = *(void *)(a2 + 16);
    }
    if (v11 != v12)
    {
      while ((SACommonUtils::isHashMatch((uint64_t)__p, **v11) & 1) == 0)
      {
        if (++v11 == v12)
        {
          id v11 = v12;
          break;
        }
      }
    }
    if (SHIBYTE(v17) < 0) {
      operator delete(__p[0]);
    }
    int v13 = SALogObjectGeneral;
    BOOL v14 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    int v15 = a1[1];
    if (v14)
    {
      *(_DWORD *)uint64_t buf = 68289282;
      int v19 = 0;
      __int16 v20 = 2082;
      int v21 = "";
      __int16 v22 = 1026;
      LODWORD(v23) = v11 != v15;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#currentAlerts,isHashFound\", \"result\":%{public}hhd}", buf, 0x18u);
      int v15 = a1[1];
    }
    return v11 != v15;
  }
  else if (result)
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v19 = 0;
    __int16 v20 = 2082;
    int v21 = "";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#currentAlerts,#warning,isHashFoundFailed,emptyHash\"}", buf, 0x12u);
    return 0;
  }
  return result;
}

void sub_10002A0A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

uint64_t sub_10002A0C4(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100062A0C(result);
    operator delete();
  }
  return result;
}

BOOL sub_10002A114(double *a1, SACommonUtils ***a2)
{
  int v4 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    SACommonUtils::getAnyCmam(**a2, __p);
    if (v8 >= 0) {
      uint64_t v5 = __p;
    }
    else {
      uint64_t v5 = (void **)__p[0];
    }
    *(_DWORD *)uint64_t buf = 68289283;
    int v10 = 0;
    __int16 v11 = 2082;
    BOOL v12 = "";
    __int16 v13 = 2081;
    BOOL v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#currentAlerts,purge\", \"cmam\":%{private, location:escape_only}s}", buf, 0x1Cu);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
  }

  return *a1 - *((double *)*a2 + 1) > 600.0;
}

void sub_10002A240(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10002A258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10002547C(a1) + 192;
  sub_10002547C(v5);
  sub_10002547C(a1 + 384);
  *(unsigned char *)(a1 + 576) = 0;
  sub_1000327F0(a1 + 584, a3);
  id v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,SAIgneousAlertParser\"}", (uint8_t *)&buf, 0x12u);
  }
  sub_10000DD48(&buf, "igneous_received");
  std::string::operator=((std::string *)(a1 + 160), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  *(unsigned char *)(a1 + 1) = 0;
  *(void *)(a1 + 136) = 2000;
  sub_10002A7E8(&buf, "igneous_received.elog");
  if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_std::string buf = &buf;
  }
  else {
    p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
  }
  v22[0] = off_1000F6558;
  v22[3] = v22;
  v21[0] = off_1000F6558;
  void v21[3] = v21;
  char v8 = sub_100022E74(a1, (char *)p_buf, 0x1388uLL, (uint64_t)v22, (uint64_t)v21);
  sub_10002553C(v21);
  sub_10002553C(v22);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(buf.__r_.__value_.__l.__data_);
    if (v8) {
      goto LABEL_14;
    }
  }
  else if (v8)
  {
    goto LABEL_14;
  }
  uint64_t v9 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,#warning,persistentStorageConfigFailed\"}", (uint8_t *)&buf, 0x12u);
  }
LABEL_14:
  sub_10000DD48(&buf, "igneous_received_followup");
  std::string::operator=((std::string *)(a1 + 352), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  *(unsigned char *)(a1 + 193) = 0;
  *(void *)(a1 + 328) = 2000;
  sub_10002A7E8(&buf, "igneous_received_folloup.elog");
  if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v10 = &buf;
  }
  else {
    int v10 = (std::string *)buf.__r_.__value_.__r.__words[0];
  }
  v20[0] = off_1000F6558;
  v20[3] = v20;
  v19[0] = off_1000F6558;
  v19[3] = v19;
  char v11 = sub_100022E74(v5, (char *)v10, 0x1388uLL, (uint64_t)v20, (uint64_t)v19);
  sub_10002553C(v19);
  sub_10002553C(v20);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(buf.__r_.__value_.__l.__data_);
    if (v11) {
      goto LABEL_25;
    }
  }
  else if (v11)
  {
    goto LABEL_25;
  }
  BOOL v12 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,#warning,persistentStorageConfigFailed\"}", (uint8_t *)&buf, 0x12u);
  }
LABEL_25:
  sub_10000DD48(&buf, "ble_received");
  std::string::operator=((std::string *)(a1 + 544), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  *(unsigned char *)(a1 + 385) = 0;
  *(void *)(a1 + 520) = 2000;
  sub_10002A7E8(&buf, "igneous_ble_received.elog");
  if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    __int16 v13 = &buf;
  }
  else {
    __int16 v13 = (std::string *)buf.__r_.__value_.__r.__words[0];
  }
  v18[0] = off_1000F6558;
  v18[3] = v18;
  v17[0] = off_1000F6558;
  void v17[3] = v17;
  char v14 = sub_100022E74(a1 + 384, (char *)v13, 0x1388uLL, (uint64_t)v18, (uint64_t)v17);
  sub_10002553C(v17);
  sub_10002553C(v18);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(buf.__r_.__value_.__l.__data_);
    if (v14) {
      return a1;
    }
  }
  else if (v14)
  {
    return a1;
  }
  int v15 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,#warning,persistentStorageConfigFailed\"}", (uint8_t *)&buf, 0x12u);
  }
  return a1;
}

void sub_10002A730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  sub_10002553C(&a9);
  sub_10002553C(&a13);
  if (*(char *)(v17 - 73) < 0) {
    operator delete(*(void **)(v17 - 96));
  }
  sub_100032888(v16);
  sub_100023384(v15);
  sub_100023384(v14);
  sub_100023384(v13);
  _Unwind_Resume(a1);
}

void sub_10002A7D0()
{
}

void sub_10002A7D8()
{
}

void sub_10002A7E0()
{
}

void sub_10002A7E8(std::string *a1, char *a2)
{
  sub_10000DD48(&v9, "/var/mobile/Library/com.apple.safetyalerts/");
  sub_10000DD48(__p, a2);
  if ((v8 & 0x80u) == 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  if ((v8 & 0x80u) == 0) {
    std::string::size_type v5 = v8;
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  id v6 = std::string::append(&v9, (const std::string::value_type *)v4, v5);
  *a1 = *v6;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if ((char)v8 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
}

void sub_10002A894(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10002A8C8(uint64_t a1)
{
  sub_100032888((void *)(a1 + 584));
  if (*(char *)(a1 + 567) < 0) {
    operator delete(*(void **)(a1 + 544));
  }
  sub_10002553C((void *)(a1 + 488));
  sub_10002553C((void *)(a1 + 456));
  if (*(char *)(a1 + 455) < 0) {
    operator delete(*(void **)(a1 + 432));
  }
  id v3 = (void **)(a1 + 408);
  sub_100023904(&v3);
  if (*(char *)(a1 + 375) < 0) {
    operator delete(*(void **)(a1 + 352));
  }
  sub_10002553C((void *)(a1 + 296));
  sub_10002553C((void *)(a1 + 264));
  if (*(char *)(a1 + 263) < 0) {
    operator delete(*(void **)(a1 + 240));
  }
  id v3 = (void **)(a1 + 216);
  sub_100023904(&v3);
  if (*(char *)(a1 + 183) < 0) {
    operator delete(*(void **)(a1 + 160));
  }
  sub_10002553C((void *)(a1 + 104));
  sub_10002553C((void *)(a1 + 72));
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  id v3 = (void **)(a1 + 24);
  sub_100023904(&v3);
  return a1;
}

uint64_t sub_10002A9BC(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = v2;
  if (v2)
  {
    int v4 = [v2 objectForKey:@"alert"];
    if (v4 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
      id v5 = v4;
    }
    else {
      id v5 = 0;
    }

    id v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2113;
      *(void *)&buf[20] = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#iap,isSaewAlert,IgneousInformation\", \"jsondict\":%{private, location:escape_only}@}", buf, 0x1Cu);
    }
    if (v5)
    {
      uint64_t v7 = [v5 objectForKey:@"source"];
      if (v7)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          long long v80 = 0u;
          memset(v79, 0, sizeof(v79));
          long long v77 = 0u;
          long long v78 = 0u;
          long long v76 = 0u;
          long long v75 = 0u;
          memset(buf, 0, sizeof(buf));
          __asm { FMOV            V0.2D, #10.0 }
          long long v82 = _Q0;
          __asm { FMOV            V0.2D, #-1.0 }
          long long v83 = _Q0;
          long long v84 = _Q0;
          uint64_t v81 = 0;
          unint64_t v85 = 0xBFF0000000000000;
          uint64_t v13 = sub_10006B474();
          sub_10002B120((uint64_t)v13, (std::string *)buf);
          uint64_t v14 = (id)SALogObjectGeneral;
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          {
            sub_10000DD48(__p, (char *)[v7 UTF8String]);
            uint64_t v15 = v63 >= 0 ? __p : (void **)__p[0];
            if (SBYTE7(v77) < 0)
            {
              int v16 = (const char *)v76;
              _ZF = *((void *)&v76 + 1) == 0;
            }
            else
            {
              int v16 = (const char *)&v76;
              _ZF = SBYTE7(v77) == 0;
            }
            uint64_t v23 = _ZF ? "" : (char *)v16;
            if (SHIBYTE(v78) < 0)
            {
              __int16 v24 = (const char *)*((void *)&v77 + 1);
              BOOL v25 = (void)v78 == 0;
            }
            else
            {
              __int16 v24 = (char *)&v77 + 8;
              BOOL v25 = SHIBYTE(v78) == 0;
            }
            int v26 = v25 ? "" : (char *)v24;
            if (SHIBYTE(v79[2]) < 0)
            {
              __int16 v27 = (void **)v79[0];
              BOOL v28 = v79[1] == 0;
            }
            else
            {
              __int16 v27 = v79;
              BOOL v28 = SHIBYTE(v79[2]) == 0;
            }
            char v29 = v28 ? "" : (char *)v27;
            *(_DWORD *)__int16 v64 = 68290051;
            *(_DWORD *)&v64[4] = 0;
            *(_WORD *)uint64_t v65 = 2082;
            *(void *)&v65[2] = "";
            __int16 v66 = 2081;
            uint64_t v67 = v15;
            __int16 v68 = 2081;
            uint64_t v69 = v23;
            __int16 v70 = 2081;
            unsigned int v71 = v26;
            __int16 v72 = 2081;
            BOOL v73 = v29;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,isSaewAlert\", \"source\":%{private, location:escape_only}s, \"MASource\":%{private, location:escape_only}s, \"MATestSource\":%{private, location:escape_only}s, \"MAFollowUpSource\":%{private, location:escape_only}s}", v64, 0x3Au);
            if (v63 < 0) {
              operator delete(__p[0]);
            }
          }

          uint64_t v30 = BYTE7(v77);
          if (SBYTE7(v77) < 0) {
            uint64_t v30 = *((void *)&v76 + 1);
          }
          if (!v30) {
            goto LABEL_71;
          }
          sub_10000DD48(v64, (char *)[v7 UTF8String]);
          int v31 = SBYTE3(v67);
          uint64_t v32 = *(uint8_t **)v64;
          if (SBYTE3(v67) >= 0) {
            size_t v33 = BYTE3(v67);
          }
          else {
            size_t v33 = *(void *)v65;
          }
          if (SBYTE3(v67) >= 0) {
            long long v34 = v64;
          }
          else {
            long long v34 = *(uint8_t **)v64;
          }
          if ((SBYTE7(v77) & 0x80u) == 0) {
            size_t v35 = BYTE7(v77);
          }
          else {
            size_t v35 = *((void *)&v76 + 1);
          }
          if ((SBYTE7(v77) & 0x80u) == 0) {
            uint64_t v36 = &v76;
          }
          else {
            uint64_t v36 = (long long *)v76;
          }
          if (v35 >= v33) {
            size_t v37 = v33;
          }
          else {
            size_t v37 = v35;
          }
          BOOL v38 = memcmp(v34, v36, v37) == 0;
          BOOL v39 = v35 == v33 && v38;
          if (v31 < 0) {
            operator delete(v32);
          }
          if (v39)
          {
            uint64_t v19 = 1;
          }
          else
          {
LABEL_71:
            uint64_t v40 = HIBYTE(v78);
            if (v78 < 0) {
              uint64_t v40 = v78;
            }
            if (!v40) {
              goto LABEL_96;
            }
            sub_10000DD48(v64, (char *)[v7 UTF8String]);
            int v41 = SBYTE3(v67);
            __int16 v42 = *(uint8_t **)v64;
            if (SBYTE3(v67) >= 0) {
              size_t v43 = BYTE3(v67);
            }
            else {
              size_t v43 = *(void *)v65;
            }
            if (SBYTE3(v67) >= 0) {
              __int16 v44 = v64;
            }
            else {
              __int16 v44 = *(uint8_t **)v64;
            }
            if (v78 >= 0) {
              size_t v45 = HIBYTE(v78);
            }
            else {
              size_t v45 = v78;
            }
            if (v78 >= 0) {
              long long v46 = (char *)&v77 + 8;
            }
            else {
              long long v46 = (char *)*((void *)&v77 + 1);
            }
            if (v45 >= v43) {
              size_t v47 = v43;
            }
            else {
              size_t v47 = v45;
            }
            BOOL v48 = memcmp(v44, v46, v47) == 0;
            BOOL v49 = v45 == v43 && v48;
            if (v41 < 0) {
              operator delete(v42);
            }
            if (v49)
            {
              uint64_t v19 = 2;
            }
            else
            {
LABEL_96:
              id v50 = (void *)HIBYTE(v79[2]);
              if (SHIBYTE(v79[2]) < 0) {
                id v50 = v79[1];
              }
              if (!v50) {
                goto LABEL_121;
              }
              sub_10000DD48(v64, (char *)[v7 UTF8String]);
              int v51 = SBYTE3(v67);
              uint64_t v52 = *(uint8_t **)v64;
              if (SBYTE3(v67) >= 0) {
                size_t v53 = BYTE3(v67);
              }
              else {
                size_t v53 = *(void *)v65;
              }
              if (SBYTE3(v67) >= 0) {
                __int16 v54 = v64;
              }
              else {
                __int16 v54 = *(uint8_t **)v64;
              }
              if (SHIBYTE(v79[2]) >= 0) {
                double v55 = (void *)HIBYTE(v79[2]);
              }
              else {
                double v55 = v79[1];
              }
              if (SHIBYTE(v79[2]) >= 0) {
                __int16 v56 = v79;
              }
              else {
                __int16 v56 = (void **)v79[0];
              }
              if ((unint64_t)v55 >= v53) {
                size_t v57 = v53;
              }
              else {
                size_t v57 = (size_t)v55;
              }
              BOOL v58 = memcmp(v54, v56, v57) == 0;
              BOOL v59 = v55 == (void *)v53 && v58;
              if (v51 < 0) {
                operator delete(v52);
              }
              if (!v59)
              {
LABEL_121:
                sub_10000DD48(v64, (char *)[v7 UTF8String]);
                __int16 v60 = (SACommonUtils *)std::string::compare((const std::string *)v64, (const std::string::value_type *)[@"USGSLivability" UTF8String]);
                if (v60)
                {
                  if (SBYTE3(v67) < 0) {
                    operator delete(*(void **)v64);
                  }
                }
                else
                {
                  char isLivabiltyEnabled = SACommonUtils::isLivabiltyEnabled(v60);
                  if (SBYTE3(v67) < 0) {
                    operator delete(*(void **)v64);
                  }
                  if (isLivabiltyEnabled)
                  {
                    uint64_t v19 = 4;
                    goto LABEL_129;
                  }
                }
                uint64_t v19 = 5;
                goto LABEL_129;
              }
              uint64_t v19 = 3;
            }
          }
LABEL_129:
          *(void *)__int16 v64 = &v80;
          sub_100005360((void ***)v64);
          *(void *)__int16 v64 = &v79[3];
          sub_100005360((void ***)v64);
          if (SHIBYTE(v79[2]) < 0) {
            operator delete(v79[0]);
          }
          if (SHIBYTE(v78) < 0) {
            operator delete(*((void **)&v77 + 1));
          }
          if (SBYTE7(v77) < 0) {
            operator delete((void *)v76);
          }
          if (SHIBYTE(v75) < 0) {
            operator delete(*(void **)&buf[24]);
          }
          if ((buf[23] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }

          goto LABEL_26;
        }
      }

      __int16 v20 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        int v21 = "{\"msg%{public}.0s\":\"#iap,source nil\"}";
LABEL_24:
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, v21, buf, 0x12u);
      }
    }
    else
    {
      __int16 v20 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        int v21 = "{\"msg%{public}.0s\":\"#iap,isSaewAlert,jsondict nil\"}";
        goto LABEL_24;
      }
    }
    uint64_t v19 = 5;
LABEL_26:

    goto LABEL_27;
  }
  int v18 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,isSaewAlert,null alert\"}", buf, 0x12u);
  }
  uint64_t v19 = 5;
LABEL_27:

  return v19;
}

void sub_10002B09C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_100032B20((uint64_t)&a24);

  _Unwind_Resume(a1);
}

__n128 sub_10002B120(uint64_t a1, std::string *this)
{
  uint64_t v4 = a1 + 176;
  std::string::operator=(this, (const std::string *)(a1 + 176));
  std::string::operator=(this + 1, (const std::string *)(a1 + 200));
  std::string::operator=(this + 2, (const std::string *)(a1 + 224));
  std::string::operator=(this + 3, (const std::string *)(a1 + 248));
  std::string::operator=(this + 4, (const std::string *)(a1 + 272));
  if ((std::string *)v4 != this)
  {
    sub_10003290C((uint64_t)&this[5], *(std::string **)(a1 + 296), *(long long **)(a1 + 304), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 304) - *(void *)(a1 + 296)) >> 3));
    sub_10003290C((uint64_t)&this[6], *(std::string **)(a1 + 320), *(long long **)(a1 + 328), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 328) - *(void *)(a1 + 320)) >> 3));
  }
  __n128 result = *(__n128 *)(v4 + 168);
  long long v6 = *(_OWORD *)(v4 + 184);
  long long v7 = *(_OWORD *)(v4 + 200);
  this[9].__r_.__value_.__r.__words[0] = *(void *)(a1 + 392);
  *(_OWORD *)&this[8].__r_.__value_.__r.__words[1] = v7;
  *(_OWORD *)&this[7].__r_.__value_.__r.__words[2] = v6;
  *(__n128 *)&this[7].__r_.__value_.__l.__data_ = result;
  return result;
}

void sub_10002B1EC(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = SALogObjectGeneral;
  BOOL v5 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    *(_DWORD *)std::string buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 2113;
    *(void *)&buf[20] = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,extractBLEData\", \"d\":%{private, location:escape_only}@}", buf, 0x1Cu);
  }
  if ((sub_1000838E4((SAPlatformInfo *)v5) & 1) == 0)
  {
    __int16 v22 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_48;
    }
    *(_DWORD *)std::string buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    uint64_t v23 = "{\"msg%{public}.0s\":\"#iap,extractBLEData,BLE is not supported\"}";
LABEL_38:
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, v23, buf, 0x12u);
    goto LABEL_48;
  }
  long long v6 = [v3 objectForKey:@"relayPduV1"];
  if (!v6 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {

    __int16 v22 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_48;
    }
    *(_DWORD *)std::string buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    uint64_t v23 = "{\"msg%{public}.0s\":\"#iap,extractBLEData,relayPDU nil\"}";
    goto LABEL_38;
  }
  long long v7 = [v6 objectForKey:@"signature"];
  if (v7 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    id v8 = v7;
    sub_10000DD48(buf, (char *)[v8 UTF8String]);
    std::string v9 = (void **)(a2 + 128);
    if (*(char *)(a2 + 151) < 0) {
      operator delete(*v9);
    }
    *(_OWORD *)std::string v9 = *(_OWORD *)buf;
    *(void *)(a2 + 144) = *(void *)&buf[16];
    int v10 = [v6 objectForKey:@"uid"];
    if (v10 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      id v11 = v10;
      sub_10000DD48(buf, (char *)[v11 UTF8String]);
      BOOL v12 = (void **)(a2 + 176);
      if (*(char *)(a2 + 199) < 0) {
        operator delete(*v12);
      }
      *(_OWORD *)BOOL v12 = *(_OWORD *)buf;
      *(void *)(a2 + 192) = *(void *)&buf[16];
      uint64_t v13 = [v6 objectForKey:@"data"];
      if (v13 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        id v14 = v13;
        id v27 = v11;
        sub_10000DD48(buf, (char *)[v14 UTF8String]);
        uint64_t v15 = (void **)(a2 + 152);
        if (*(char *)(a2 + 175) < 0) {
          operator delete(*v15);
        }
        *(_OWORD *)uint64_t v15 = *(_OWORD *)buf;
        *(void *)(a2 + 168) = *(void *)&buf[16];
        int v16 = sub_10001E878();
        int v17 = sub_1000202A8((SAPlatformInfo *)v16, a2 + 128, a2 + 152);
        int v18 = SALogObjectGeneral;
        if (v17)
        {
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)std::string buf = 68289026;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,extractBLEData,authenticated\"}", buf, 0x12u);
            int v18 = SALogObjectGeneral;
          }
          *(unsigned char *)(a2 + 200) = 1;
        }
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
        {
          if (*(char *)(a2 + 199) >= 0) {
            uint64_t v19 = a2 + 176;
          }
          else {
            uint64_t v19 = *(void *)(a2 + 176);
          }
          if (*(char *)(a2 + 175) >= 0) {
            uint64_t v20 = a2 + 152;
          }
          else {
            uint64_t v20 = *(void *)(a2 + 152);
          }
          if (*(char *)(a2 + 151) >= 0) {
            uint64_t v21 = a2 + 128;
          }
          else {
            uint64_t v21 = *(void *)(a2 + 128);
          }
          *(_DWORD *)std::string buf = 68289795;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&buf[18] = 2081;
          *(void *)&buf[20] = v19;
          __int16 v29 = 2081;
          uint64_t v30 = v20;
          __int16 v31 = 2081;
          uint64_t v32 = v21;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#iap,extractBLEData\", \"bleAlertUID\":%{private, location:escape_only}s, \"bleAlertData\":%{private, location:escape_only}s, \"alertSignature\":%{private, location:escape_only}s}", buf, 0x30u);
        }

        id v11 = v27;
      }
      else
      {

        int v26 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,extractBLEData,bleAlertData nil\"}", buf, 0x12u);
        }
      }
    }
    else
    {

      BOOL v25 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,extractBLEData,bleAlertUid nil\"}", buf, 0x12u);
      }
    }
  }
  else
  {

    __int16 v24 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,extractBLEData,alertSignature nil\"}", buf, 0x12u);
    }
  }

LABEL_48:
}

void sub_10002B790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10002B83C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  long long v6 = v5;
  if (!v5)
  {
    uint64_t v13 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,parseIgneousAlert,null alert\"}", buf, 0x12u);
    }
    sub_10000DD48(buf, "");
    sub_10000DD48(__p, "");
    sub_10002CE14(a1, 7, buf, (uint64_t)__p, 0.0, 0.0);
    if (v115 < 0) {
      operator delete(__p[0]);
    }
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    goto LABEL_19;
  }
  long long v7 = [v5 objectForKey:@"alert"];
  if (v7)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v8 = [v7 objectForKey:@"source"];
      if (!v8 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
      {

        id v14 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,parseIgneousAlert,source nil\"}", buf, 0x12u);
        }
        sub_10000DD48(buf, "");
        sub_10000DD48(__p, "");
        sub_10002CE14(a1, 1, buf, (uint64_t)__p, 0.0, 0.0);
        if (v115 < 0) {
          operator delete(__p[0]);
        }
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
        uint64_t v12 = 0;
        goto LABEL_126;
      }
      std::string v9 = [v7 objectForKey:@"uid"];
      if (!v9 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
      {

        uint64_t v15 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,parseIgneousAlert,uid nil\"}", buf, 0x12u);
        }
        sub_10000DD48(buf, "");
        sub_10000DD48(__p, "");
        sub_10002CE14(a1, 2, buf, (uint64_t)__p, 0.0, 0.0);
        if (v115 < 0) {
          operator delete(__p[0]);
        }
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
        uint64_t v12 = 0;
        goto LABEL_125;
      }
      unsigned int v111 = (char *)v9;
      int v10 = [v7 objectForKey:@"ingress_to_server_timestamp"];
      if (v10 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        id v110 = v10;
      }
      else {
        id v110 = 0;
      }

      int v16 = [v7 objectForKey:@"egress_from_source_timestamp"];
      if (v16 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        id v109 = v16;
      }
      else {
        id v109 = 0;
      }

      int v17 = [v7 objectForKey:@"event_origin_timestamp"];
      if (v17 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        id v108 = v17;
      }
      else {
        id v108 = 0;
      }

      int v18 = [v7 objectForKey:@"effective"];
      if (v18 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        id v107 = v18;
      }
      else {
        id v107 = 0;
      }

      uint64_t v19 = [v7 objectForKey:@"expires"];
      if (v19 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        id v106 = v19;
      }
      else {
        id v106 = 0;
      }

      uint64_t v20 = [v7 objectForKey:@"event_update_number"];
      if (v20 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        id v104 = v20;
      }
      else {
        id v104 = 0;
      }

      uint64_t v21 = [v7 objectForKey:@"depth"];
      if (v21 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        id v102 = v21;
      }
      else {
        id v102 = 0;
      }

      __int16 v22 = [v7 objectForKey:@"epi_latitude"];
      if (v22 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        id v103 = v22;
      }
      else {
        id v103 = 0;
      }

      uint64_t v23 = [v7 objectForKey:@"epi_longitude"];
      if (v23 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        id v105 = v23;
      }
      else {
        id v105 = 0;
      }

      __int16 v24 = [v7 objectForKey:@"magnitude"];
      if (v24 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        id v112 = v24;
      }
      else {
        id v112 = 0;
      }

      BOOL v25 = [v7 objectForKey:@"mmi_grid"];
      if (v25 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        __int16 v113 = (char *)[v25 count];
        if (v113)
        {
          int v26 = 0;
          uint64_t v27 = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          do
          {
            uint64_t v30 = [v25 objectAtIndex:v26];
            if (v30 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
            {
              __int16 v31 = [v30 objectAtIndex:0];
              if (v31 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
              {
                id v100 = v31;
                uint64_t v32 = [v30 objectAtIndex:1];
                if (v32 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
                {
                  id v98 = v32;
                  int v99 = [v30 objectAtIndex:2];
                  if (v99 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
                  {
                    id v97 = v99;
                    [v97 doubleValue];
                    uint64_t v29 = v33;
                    [v100 doubleValue];
                    uint64_t v28 = v34;
                    [v98 doubleValue];
                    uint64_t v27 = v35;
                    log = (id)SALogObjectGeneral;
                    if (os_log_type_enabled(log, OS_LOG_TYPE_DEBUG))
                    {
                      [v100 doubleValue];
                      size_t v37 = v36;
                      [v98 doubleValue];
                      BOOL v39 = v38;
                      [v97 doubleValue];
                      *(_DWORD *)std::string buf = 68290051;
                      *(_DWORD *)&uint8_t buf[4] = 0;
                      *(_WORD *)&uint8_t buf[8] = 2082;
                      *(void *)&buf[10] = "";
                      *(_WORD *)&buf[18] = 2113;
                      *(void *)&buf[20] = v30;
                      __int16 v117 = 2049;
                      int v118 = v37;
                      __int16 v119 = 2049;
                      int v120 = v39;
                      __int16 v121 = 2049;
                      int v122 = v40;
                      _os_log_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#iap,parseIgneousAlert,MMI\", \"objAtIndex\":%{private, location:escape_only}@, \"lat\":\"%{private}0.3f\", \"lon\":\"%{private}0.3f\", \"mmi\":\"%{private}0.3f\"}", buf, 0x3Au);
                    }
                  }
                  else
                  {
                    __int16 v44 = SALogObjectGeneral;
                    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                    {
                      *(_DWORD *)std::string buf = 68289026;
                      *(_DWORD *)&uint8_t buf[4] = 0;
                      *(_WORD *)&uint8_t buf[8] = 2082;
                      *(void *)&buf[10] = "";
                      _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,parseIgneousAlert,not NSNumber for mmi\"}", buf, 0x12u);
                    }
                  }
                }
                else
                {
                  size_t v43 = SALogObjectGeneral;
                  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_DWORD *)std::string buf = 68289026;
                    *(_DWORD *)&uint8_t buf[4] = 0;
                    *(_WORD *)&uint8_t buf[8] = 2082;
                    *(void *)&buf[10] = "";
                    _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,parseIgneousAlert,not NSNumber for lon\"}", buf, 0x12u);
                  }
                }
              }
              else
              {
                __int16 v42 = SALogObjectGeneral;
                if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)std::string buf = 68289026;
                  *(_DWORD *)&uint8_t buf[4] = 0;
                  *(_WORD *)&uint8_t buf[8] = 2082;
                  *(void *)&buf[10] = "";
                  _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,parseIgneousAlert,not NSNumber for lat\"}", buf, 0x12u);
                }
              }
            }
            else
            {
              int v41 = SALogObjectGeneral;
              if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)std::string buf = 68289282;
                *(_DWORD *)&uint8_t buf[4] = 0;
                *(_WORD *)&uint8_t buf[8] = 2082;
                *(void *)&buf[10] = "";
                *(_WORD *)&buf[18] = 2050;
                *(void *)&buf[20] = v26;
                _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,parseIgneousAlert,not NSArray\", \"i\":%{public}lu}", buf, 0x1Cu);
              }
            }

            ++v26;
          }
          while (v113 != v26);
        }
        else
        {
          uint64_t v29 = 0;
          uint64_t v28 = 0;
          uint64_t v27 = 0;
        }
        long long v46 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 68292099;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&buf[18] = 2113;
          *(void *)&buf[20] = v8;
          __int16 v117 = 2113;
          int v118 = v111;
          __int16 v119 = 2113;
          int v120 = v110;
          __int16 v121 = 2113;
          int v122 = v109;
          __int16 v123 = 2113;
          int v124 = v108;
          __int16 v125 = 2113;
          double v126 = *(double *)&v107;
          __int16 v127 = 2113;
          double v128 = *(double *)&v106;
          __int16 v129 = 2113;
          id v130 = v104;
          __int16 v131 = 2113;
          double v132 = *(double *)&v103;
          __int16 v133 = 2113;
          double v134 = *(double *)&v105;
          __int16 v135 = 2113;
          id v136 = v112;
          __int16 v137 = 2113;
          double v138 = *(double *)&v102;
          _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#iap,parseIgneousAlert\", \"source\":%{private, location:escape_only}@, \"uid\":%{private, location:escape_only}@, \"ingress_to_server_ts\":%{private, location:escape_only}@, \"egress_from_source_ts\":%{private, location:escape_only}@, \"event_origin_ts\":%{private, location:escape_only}@, \"effective\":%{private, location:escape_only}@, \"expires\":%{private, location:escape_only}@, \"event_update_number\":%{private, location:escape_only}@, \"epi_latitude\":%{private, location:escape_only}@, \"epi_longitude\":%{private, location:escape_only}@, \"magnitude\":%{private, location:escape_only}@, \"depth\":%{private, location:escape_only}@}", buf, 0x8Au);
        }
        sub_10000DD48(buf, (char *)[v111 UTF8String]);
        size_t v47 = (void **)(a3 + 8);
        if (*(char *)(a3 + 31) < 0) {
          operator delete(*v47);
        }
        *(_OWORD *)size_t v47 = *(_OWORD *)buf;
        *(void *)(a3 + 24) = *(void *)&buf[16];
        sub_10000DD48(buf, (char *)[v8 UTF8String]);
        BOOL v48 = (void **)(a3 + 32);
        if (*(char *)(a3 + 55) < 0) {
          operator delete(*v48);
        }
        *(_OWORD *)BOOL v48 = *(_OWORD *)buf;
        *(void *)(a3 + 48) = *(void *)&buf[16];
        *(_DWORD *)(a3 + 204) = 1;
        [v110 doubleValue];
        *(double *)(a3 + 208) = v49 + -978307200.0;
        [v109 doubleValue];
        *(double *)(a3 + 216) = v50 + -978307200.0;
        [v106 doubleValue];
        *(double *)(a3 + 240) = v51 + -978307200.0;
        [v108 doubleValue];
        *(double *)(a3 + 224) = v52 + -978307200.0;
        [v107 doubleValue];
        *(double *)(a3 + 232) = v53 + -978307200.0;
        [v103 doubleValue];
        *(void *)(a3 + 264) = v54;
        [v105 doubleValue];
        *(void *)(a3 + 272) = v55;
        [v112 doubleValue];
        double v57 = fabs(v56);
        uint64_t v58 = 0;
        if (v57 >= 2.22044605e-16) {
          [v112 doubleValue];
        }
        *(void *)(a3 + 280) = v58;
        [v104 doubleValue];
        *(void *)(a3 + 256) = v59;
        [v102 doubleValue];
        *(void *)(a3 + 248) = v60;
        *(void *)(a3 + 296) = v28;
        *(void *)(a3 + 304) = v27;
        *(void *)(a3 + 288) = v29;
        sub_10002B1EC(v6, a3);
        double v61 = *(double *)(a3 + 208);
        if (fabs(v61) >= 2.22044605e-16
          && (double v62 = *(double *)(a3 + 216), fabs(v62) >= 2.22044605e-16)
          && (double v63 = *(double *)(a3 + 240), fabs(v63) >= 2.22044605e-16)
          && (double v64 = *(double *)(a3 + 232), fabs(v64) >= 2.22044605e-16)
          && fabs(*(double *)(a3 + 224)) >= 2.22044605e-16)
        {
          int v101 = *(void **)(a3 + 224);
          double v68 = *(double *)(a3 + 264);
          double v67 = *(double *)(a3 + 272);
          BOOL v69 = v67 == 0.0 && v68 == 0.0;
          __int16 v70 = SALogObjectGeneral;
          BOOL v71 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
          if (v67 <= 180.0 && v67 >= -180.0 && v68 <= 90.0 && v68 >= -90.0 && !v69)
          {
            if (v71)
            {
              int v72 = *(char *)(a3 + 55);
              if (v72 < 0)
              {
                BOOL v73 = "";
                if (*(void *)(a3 + 40)) {
                  BOOL v73 = *(const char **)(a3 + 32);
                }
              }
              else
              {
                BOOL v78 = v72 == 0;
                BOOL v73 = "";
                if (!v78) {
                  BOOL v73 = (const char *)(a3 + 32);
                }
              }
              int v74 = *(char *)(a3 + 31);
              if (v74 < 0)
              {
                long long v75 = "";
                if (*(void *)(a3 + 16)) {
                  long long v75 = *(const char **)(a3 + 8);
                }
              }
              else
              {
                BOOL v78 = v74 == 0;
                long long v75 = "";
                if (!v78) {
                  long long v75 = (const char *)(a3 + 8);
                }
              }
              int v76 = *(char *)(a3 + 151);
              if (v76 < 0)
              {
                long long v77 = *(const char **)(a3 + 128);
                BOOL v78 = *(void *)(a3 + 136) == 0;
              }
              else
              {
                long long v77 = (const char *)(a3 + 128);
                BOOL v78 = v76 == 0;
              }
              int v79 = "";
              if (!v78) {
                int v79 = v77;
              }
              int v80 = *(char *)(a3 + 175);
              if (v80 < 0)
              {
                uint64_t v81 = *(const char **)(a3 + 152);
                BOOL v82 = *(void *)(a3 + 160) == 0;
              }
              else
              {
                uint64_t v81 = (const char *)(a3 + 152);
                BOOL v82 = v80 == 0;
              }
              long long v83 = "";
              if (!v82) {
                long long v83 = v81;
              }
              int v84 = *(char *)(a3 + 199);
              if (v84 < 0)
              {
                unint64_t v85 = *(const char **)(a3 + 176);
                BOOL v86 = *(void *)(a3 + 184) == 0;
              }
              else
              {
                unint64_t v85 = (const char *)(a3 + 176);
                BOOL v86 = v84 == 0;
              }
              int v87 = "";
              if (!v86) {
                int v87 = v85;
              }
              uint64_t v89 = *(void *)(a3 + 248);
              uint64_t v88 = *(void **)(a3 + 256);
              uint64_t v90 = *(void *)(a3 + 296);
              uint64_t v91 = *(void *)(a3 + 304);
              uint64_t v93 = *(void *)(a3 + 280);
              uint64_t v92 = *(void *)(a3 + 288);
              *(_DWORD *)std::string buf = 68293891;
              *(_DWORD *)&uint8_t buf[4] = 0;
              *(_WORD *)&uint8_t buf[8] = 2082;
              *(void *)&buf[10] = "";
              *(_WORD *)&buf[18] = 2081;
              *(void *)&buf[20] = v73;
              __int16 v117 = 2081;
              int v118 = v75;
              __int16 v119 = 2081;
              int v120 = v79;
              __int16 v121 = 2081;
              int v122 = v83;
              __int16 v123 = 2081;
              int v124 = v87;
              __int16 v125 = 2049;
              double v126 = v61;
              __int16 v127 = 2049;
              double v128 = v62;
              __int16 v129 = 2049;
              id v130 = v101;
              __int16 v131 = 2049;
              double v132 = v64;
              __int16 v133 = 2049;
              double v134 = v63;
              __int16 v135 = 2049;
              id v136 = v88;
              __int16 v137 = 2049;
              double v138 = v68;
              __int16 v139 = 2049;
              double v140 = v67;
              __int16 v141 = 2049;
              uint64_t v142 = v93;
              __int16 v143 = 2049;
              uint64_t v144 = v89;
              __int16 v145 = 2049;
              v146 = v113;
              __int16 v147 = 2049;
              uint64_t v148 = v90;
              __int16 v149 = 2049;
              uint64_t v150 = v91;
              __int16 v151 = 2049;
              uint64_t v152 = v92;
              _os_log_impl((void *)&_mh_execute_header, v70, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,parseIgneousAlert\", \"source\":%{private, location:escape_only}s, \"uid\":%{private, location:escape_only}s, \"alertSignature\":%{private, location:escape_only}s, \"bleAlertData\":%{private, location:escape_only}s, \"bleAlertUID\":%{private, location:escape_only}s, \"ingress_to_server_ts\":\"%{private}0.3f\", \"egress_from_source_ts\":\"%{private}0.3f\", \"event_origin_ts\":\"%{private}0.3f\", \"effective\":\"%{private}0.3f\", \"expires\":\"%{private}0.3f\", \"event_update_number\":\"%{private}0.3f\", \"epi_latitude\":\"%{private}0.3f\", \"epi_longitude\":\"%{private}0.3f\", \"magnitude\":\"%{private}0.3f\", \"depth\":\"%{private}0.3f\", \"mmiSize\":%{private}llu, \"mmiLat\":\"%{private}0.3f\", \"mmiLon\":\"%{private}0.3f\", \"mmiLevel\":\"%{private}0.3f\"}", buf, 0xD0u);
              __int16 v70 = SALogObjectGeneral;
            }
            if (os_log_type_enabled(v70, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v94 = *(unsigned __int8 *)(a3 + 151);
              if ((v94 & 0x80u) != 0) {
                uint64_t v94 = *(void *)(a3 + 136);
              }
              int v95 = (const char *)*(unsigned __int8 *)(a3 + 175);
              if ((char)v95 < 0) {
                int v95 = *(const char **)(a3 + 160);
              }
              *(_DWORD *)std::string buf = 68289539;
              *(_DWORD *)&uint8_t buf[4] = 0;
              *(_WORD *)&uint8_t buf[8] = 2082;
              *(void *)&buf[10] = "";
              *(_WORD *)&buf[18] = 2049;
              *(void *)&buf[20] = v94;
              __int16 v117 = 2049;
              int v118 = v95;
              _os_log_impl((void *)&_mh_execute_header, v70, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,parseIgneousAlert\", \"alertSignatureLen\":%{private}llu, \"bleAlertDataLen\":%{private}llu}", buf, 0x26u);
            }

            uint64_t v12 = 1;
            goto LABEL_124;
          }
          if (v71)
          {
            *(_DWORD *)std::string buf = 68289026;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            _os_log_impl((void *)&_mh_execute_header, v70, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,sendIgneousAlert,location invalid\"}", buf, 0x12u);
          }
        }
        else
        {
          uint64_t v65 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)std::string buf = 68289026;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,sendIgneousAlert,time invalid\"}", buf, 0x12u);
          }
        }
      }
      else
      {

        size_t v45 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,parseIgneousAlert,null mmiGrid\"}", buf, 0x12u);
        }
        sub_10000DD48(buf, "");
        sub_10000DD48(__p, "");
        sub_10002CE14(a1, 4, buf, (uint64_t)__p, 0.0, 0.0);
        if (v115 < 0) {
          operator delete(__p[0]);
        }
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }
      uint64_t v12 = 0;
LABEL_124:

LABEL_125:
LABEL_126:

      goto LABEL_127;
    }
  }

  id v11 = SALogObjectGeneral;
  uint64_t v12 = 0;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,parseIgneousAlert,jsondict nil\"}", buf, 0x12u);
LABEL_19:
    uint64_t v12 = 0;
  }
LABEL_127:

  return v12;
}

void sub_10002CB0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29,void *a30,void *a31,void *a32,uint64_t a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  _Unwind_Resume(a1);
}

void sub_10002CE14(uint64_t a1, int a2, char *a3, uint64_t a4, double a5, double a6)
{
  int v12 = *((unsigned __int8 *)sub_10003E368() + 304);
  uint64_t v13 = SALogObjectGeneral;
  BOOL v14 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v12)
  {
    if (v14)
    {
      *(_DWORD *)std::string buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,isIgneousTestEnabled\"}", buf, 0x12u);
    }
    double v15 = CFAbsoluteTimeGetCurrent() - a5;
    double v16 = CFAbsoluteTimeGetCurrent() - a6;
    int v17 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      if (a3[23] < 0)
      {
        if (*((void *)a3 + 1)) {
          int v18 = *(const char **)a3;
        }
        else {
          int v18 = "";
        }
      }
      else if (a3[23])
      {
        int v18 = a3;
      }
      else
      {
        int v18 = "";
      }
      uint64_t v19 = *(const char **)a4;
      if (!*(void *)a4) {
        uint64_t v19 = "";
      }
      if (*(char *)(a4 + 23) >= 0) {
        uint64_t v20 = (const char *)a4;
      }
      else {
        uint64_t v20 = v19;
      }
      *(_DWORD *)std::string buf = 68290307;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = v18;
      *(_WORD *)&unsigned char buf[28] = 1026;
      *(_DWORD *)&buf[30] = a2;
      *(_WORD *)&buf[34] = 2050;
      *(double *)&buf[36] = v15;
      *(_WORD *)&buf[44] = 2050;
      *(double *)&buf[46] = v16;
      *(_WORD *)&buf[54] = 2081;
      *(void *)&buf[56] = v20;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,sendIgneousTestNotification\", \"channelName\":%{public, location:escape_only}s, \"errorCode\":%{public}d, \"oriLatencyDiff\":\"%{public}0.3f\", \"ingressLatencyDiff\":\"%{public}0.3f\", \"uid\":%{private, location:escape_only}s}", buf, 0x40u);
    }
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification(DarwinNotifyCenter, @"kSAIgneousAlertReceived", 0, 0, 1u);
    uint64_t v27 = 0;
    memset(buf, 0, sizeof(buf));
    if (a3[23] < 0)
    {
      if (!*((void *)a3 + 1))
      {
LABEL_28:
        uint64_t v22 = *(unsigned __int8 *)(a4 + 23);
        if ((v22 & 0x80u) != 0) {
          uint64_t v22 = *(void *)(a4 + 8);
        }
        if (v22) {
          std::string::operator=((std::string *)&buf[24], (const std::string *)a4);
        }
        int v31 = a2;
        double v28 = v15;
        double v29 = v16;
        CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
        uint64_t v23 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(void *)BOOL v25 = 68289026;
          *(_WORD *)&v25[8] = 2082;
          *(void *)&v25[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,onIgneousTestStatusUpdate\"}", v25, 0x12u);
        }
        uint64_t v24 = *(void *)(a1 + 608);
        if (v24) {
          (*(void (**)(uint64_t, unsigned char *))(*(void *)v24 + 48))(v24, buf);
        }
        if (SHIBYTE(v27) < 0) {
          operator delete(*(void **)&buf[48]);
        }
        if ((buf[47] & 0x80000000) != 0) {
          operator delete(*(void **)&buf[24]);
        }
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
        return;
      }
      a3 = *(char **)a3;
    }
    else if (!a3[23])
    {
      goto LABEL_28;
    }
    sub_10000DD48(v25, a3);
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    *(_OWORD *)std::string buf = *(_OWORD *)v25;
    *(void *)&buf[16] = *(void *)&v25[16];
    goto LABEL_28;
  }
  if (v14)
  {
    *(_DWORD *)std::string buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,not in Igneous test\"}", buf, 0x12u);
  }
}

void sub_10002D1B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_10003162C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10002D1D8(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (*(unsigned char *)(a1 + 576))
  {
    long long v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,#warning,doesIgneousAlertPassPrecheck,device is in companion mode reject alert\"}", buf, 0x12u);
    }
    sub_10000DD48(buf, "");
    sub_10000DD48(&__p, "");
    sub_10002CE14(a1, 6, buf, (uint64_t)&__p, 0.0, 0.0);
    if (SBYTE3(v51) < 0) {
      operator delete(__p);
    }
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    goto LABEL_14;
  }
  if (sub_10002B83C(a1, v5, a3))
  {
    long long v91 = 0u;
    long long v89 = 0u;
    memset(v90, 0, sizeof(v90));
    long long v87 = 0u;
    long long v88 = 0u;
    long long v85 = 0u;
    long long v86 = 0u;
    memset(buf, 0, sizeof(buf));
    __asm { FMOV            V0.2D, #10.0 }
    long long v93 = _Q0;
    __asm { FMOV            V0.2D, #-1.0 }
    long long v94 = _Q0;
    long long v95 = _Q0;
    uint64_t v92 = 0;
    unint64_t v96 = 0xBFF0000000000000;
    int v12 = sub_10006B474();
    sub_10002B120((uint64_t)v12, (std::string *)buf);
    uint64_t v13 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v14 = *(char *)(a3 + 55);
      if (v14 < 0)
      {
        double v15 = *(const char **)(a3 + 32);
        _ZF = *(void *)(a3 + 40) == 0;
      }
      else
      {
        double v15 = (const char *)(a3 + 32);
        _ZF = v14 == 0;
      }
      if (_ZF) {
        uint64_t v20 = "";
      }
      else {
        uint64_t v20 = v15;
      }
      int v21 = *(char *)(a3 + 31);
      if (v21 < 0)
      {
        uint64_t v22 = *(const char **)(a3 + 8);
        BOOL v23 = *(void *)(a3 + 16) == 0;
      }
      else
      {
        uint64_t v22 = (const char *)(a3 + 8);
        BOOL v23 = v21 == 0;
      }
      if (v23) {
        uint64_t v24 = "";
      }
      else {
        uint64_t v24 = v22;
      }
      uint64_t v25 = *(void *)(a3 + 208);
      uint64_t v26 = *(void *)(a3 + 216);
      uint64_t v27 = *(void *)(a3 + 224);
      uint64_t v28 = *(void *)(a3 + 232);
      uint64_t v29 = *(void *)(a3 + 256);
      uint64_t v30 = *(void *)(a3 + 264);
      uint64_t v31 = *(void *)(a3 + 272);
      uint64_t v32 = *(void *)(a3 + 280);
      uint64_t v33 = *(void *)(a3 + 240);
      uint64_t v34 = *(void *)(a3 + 248);
      uint64_t v36 = *(void *)(a3 + 296);
      uint64_t v35 = *(void *)(a3 + 304);
      uint64_t v37 = *(void *)(a3 + 288);
      std::string __p = (void *)68293379;
      __int16 v48 = 2082;
      double v49 = "";
      __int16 v50 = 2081;
      double v51 = v20;
      __int16 v52 = 2081;
      double v53 = v24;
      __int16 v54 = 2049;
      uint64_t v55 = v25;
      __int16 v56 = 2049;
      uint64_t v57 = v26;
      __int16 v58 = 2049;
      uint64_t v59 = v27;
      __int16 v60 = 2049;
      uint64_t v61 = v28;
      __int16 v62 = 2049;
      uint64_t v63 = v33;
      __int16 v64 = 2049;
      uint64_t v65 = v29;
      __int16 v66 = 2049;
      uint64_t v67 = v30;
      __int16 v68 = 2049;
      uint64_t v69 = v31;
      __int16 v70 = 2049;
      uint64_t v71 = v32;
      __int16 v72 = 2049;
      uint64_t v73 = v34;
      __int16 v74 = 2049;
      uint64_t v75 = v36;
      __int16 v76 = 2049;
      uint64_t v77 = v35;
      __int16 v78 = 2049;
      uint64_t v79 = v37;
      __int16 v80 = 2049;
      uint64_t v81 = *((void *)&v93 + 1);
      __int16 v82 = 2049;
      unint64_t v83 = v96;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesIgneousAlertPassPrecheck\", \"source\":%{private, location:escape_only}s, \"uid\":%{private, location:escape_only}s, \"ingress_to_server_ts\":\"%{private}0.3f\", \"egress_from_source_ts\":\"%{private}0.3f\", \"event_origin_ts\":\"%{private}0.3f\", \"effective\":\"%{private}0.3f\", \"expires\":\"%{private}0.3f\", \"event_update_number\":\"%{private}0.3f\", \"epi_latitude\":\"%{private}0.3f\", \"epi_longitude\":\"%{private}0.3f\", \"magnitude\":\"%{private}0.3f\", \"depth\":\"%{private}0.3f\", \"mmiLat\":\"%{private}0.3f\", \"mmiLon\":\"%{private}0.3f\", \"mmiLevel\":\"%{private}0.3f\", \"Magnitude\":\"%{private}0.3f\", \"FollowUpMessageValidTime\":\"%{private}0.3f\"}", (uint8_t *)&__p, 0xBCu);
    }
    if (*(char *)(a3 + 31) < 0)
    {
      sub_100004CB8(__dst, *(void **)(a3 + 8), *(void *)(a3 + 16));
    }
    else
    {
      *(_OWORD *)long long __dst = *(_OWORD *)(a3 + 8);
      uint64_t v46 = *(void *)(a3 + 24);
    }
    int v38 = sub_10002D914(a1, __dst, (uint64_t)buf, 1);
    int v39 = v38;
    if (SHIBYTE(v46) < 0)
    {
      operator delete(__dst[0]);
      if (v39) {
        goto LABEL_32;
      }
    }
    else if (v38)
    {
LABEL_32:
      uint64_t v40 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        std::string __p = (void *)68289026;
        __int16 v48 = 2082;
        double v49 = "";
        _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesIgneousAlertPassPrecheck,alert already processed\"}", (uint8_t *)&__p, 0x12u);
      }
      sub_10000DD48(&__p, "");
      sub_10000DD48(v43, "");
      sub_10002CE14(a1, 3, (char *)&__p, (uint64_t)v43, 0.0, 0.0);
      goto LABEL_44;
    }
    if (*(double *)(a3 + 280) >= *((double *)&v93 + 1))
    {
      if (*(double *)(a3 + 288) >= *(double *)&v93)
      {
        uint64_t v18 = 1;
LABEL_49:
        std::string __p = &v91;
        sub_100005360((void ***)&__p);
        std::string __p = &v90[8];
        sub_100005360((void ***)&__p);
        if ((v90[7] & 0x80000000) != 0) {
          operator delete((void *)v89);
        }
        if (SHIBYTE(v88) < 0) {
          operator delete(*((void **)&v87 + 1));
        }
        if (SBYTE7(v87) < 0) {
          operator delete((void *)v86);
        }
        if (SHIBYTE(v85) < 0) {
          operator delete(*(void **)&buf[24]);
        }
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
        goto LABEL_15;
      }
      __int16 v42 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        std::string __p = (void *)68289026;
        __int16 v48 = 2082;
        double v49 = "";
        _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesIgneousAlertPassPrecheck,alertMMI received below threshold level\"}", (uint8_t *)&__p, 0x12u);
      }
      sub_10000DD48(&__p, "");
      sub_10000DD48(v43, "");
      sub_10002CE14(a1, 4, (char *)&__p, (uint64_t)v43, 0.0, 0.0);
    }
    else
    {
      int v41 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        std::string __p = (void *)68289026;
        __int16 v48 = 2082;
        double v49 = "";
        _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesIgneousAlertPassPrecheck,alert received below threshold level\"}", (uint8_t *)&__p, 0x12u);
      }
      sub_10000DD48(&__p, "");
      sub_10000DD48(v43, "");
      sub_10002CE14(a1, 5, (char *)&__p, (uint64_t)v43, 0.0, 0.0);
    }
LABEL_44:
    if (v44 < 0) {
      operator delete(v43[0]);
    }
    if (SBYTE3(v51) < 0) {
      operator delete(__p);
    }
    uint64_t v18 = 0;
    goto LABEL_49;
  }
  int v17 = SALogObjectGeneral;
  uint64_t v18 = 0;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,#warning,doesIgneousAlertPassPrecheck,alert parsing error\"}", buf, 0x12u);
LABEL_14:
    uint64_t v18 = 0;
  }
LABEL_15:

  return v18;
}

void sub_10002D858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  sub_100032B20((uint64_t)&a50);

  _Unwind_Resume(a1);
}

uint64_t sub_10002D914(uint64_t a1, void **a2, uint64_t a3, int a4)
{
  uint64_t v19 = 0;
  double v8 = (double)(uint64_t)(double)time(0) + -978307200.0;
  memset(&v18, 0, sizeof(v18));
  if (a4) {
    sub_100032DB4(a1, 1, v8 - *(double *)(a3 + 200));
  }
  std::string v9 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = a2;
    if (*((char *)a2 + 23) < 0) {
      int v10 = *a2;
    }
    uint64_t v11 = *(void *)(a3 + 200);
    uint64_t v12 = *(void *)(a3 + 216);
    *(_DWORD *)std::string buf = 68290307;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v21 = 2082;
    uint64_t v22 = "";
    __int16 v23 = 2081;
    uint64_t v24 = v10;
    __int16 v25 = 2050;
    uint64_t v26 = 0;
    __int16 v27 = 2050;
    double v28 = v8;
    __int16 v29 = 2050;
    uint64_t v30 = v11;
    __int16 v31 = 2050;
    uint64_t v32 = v12;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,evtTracker,\", \"uid\":%{private, location:escape_only}s, \"lastIgneousReceivedTs\":\"%{public}0.3f\", \"curTime\":\"%{public}0.3f\", \"ThresholdTimeBetweenAlerts\":\"%{public}0.3f\", \"FollowUpMessageValidTime\":\"%{public}0.3f\"}", buf, 0x44u);
  }
  if (*((char *)a2 + 23) < 0)
  {
    sub_100004CB8(__p, *a2, (unint64_t)a2[1]);
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a2;
    int v17 = a2[2];
  }
  SACommonUtils::getHashForString((char *)__p, (uint64_t *)buf);
  uint64_t v13 = sub_10002313C(a1, (unsigned __int8 **)buf, &v19, &v18);
  if (SBYTE3(v24) < 0) {
    operator delete(*(void **)buf);
  }
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    if (!v13) {
      goto LABEL_18;
    }
  }
  else if (!v13)
  {
    goto LABEL_18;
  }
  int v14 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 68289282;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v21 = 2082;
    uint64_t v22 = "";
    __int16 v23 = 2050;
    uint64_t v24 = v19;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,evtTracker,igneousReceived\", \"lastIgneousReceivedTs\":\"%{public}0.3f\"}", buf, 0x1Cu);
  }
LABEL_18:
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  return v13;
}

void sub_10002DB70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10002DBBC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (*(unsigned char *)(a1 + 576))
  {
    long long v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,#warning,doesIgneousLivabilityAlertPassPrecheck,device is in companion mode reject alert\"}", buf, 0x12u);
    }
    sub_10000DD48(buf, "");
    sub_10000DD48(&__p, "");
    sub_10002CE14(a1, 6, buf, (uint64_t)&__p, 0.0, 0.0);
    if (SBYTE3(v51) < 0) {
      operator delete(__p);
    }
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    goto LABEL_14;
  }
  if (sub_10002B83C(a1, v5, a3))
  {
    long long v91 = 0u;
    long long v89 = 0u;
    memset(v90, 0, sizeof(v90));
    long long v87 = 0u;
    long long v88 = 0u;
    long long v85 = 0u;
    long long v86 = 0u;
    memset(buf, 0, sizeof(buf));
    __asm { FMOV            V0.2D, #10.0 }
    long long v93 = _Q0;
    __asm { FMOV            V0.2D, #-1.0 }
    long long v94 = _Q0;
    long long v95 = _Q0;
    uint64_t v92 = 0;
    unint64_t v96 = 0xBFF0000000000000;
    uint64_t v12 = sub_10006B474();
    sub_10002B120((uint64_t)v12, (std::string *)buf);
    uint64_t v13 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v14 = *(char *)(a3 + 55);
      if (v14 < 0)
      {
        double v15 = *(const char **)(a3 + 32);
        _ZF = *(void *)(a3 + 40) == 0;
      }
      else
      {
        double v15 = (const char *)(a3 + 32);
        _ZF = v14 == 0;
      }
      if (_ZF) {
        uint64_t v20 = "";
      }
      else {
        uint64_t v20 = v15;
      }
      int v21 = *(char *)(a3 + 31);
      if (v21 < 0)
      {
        uint64_t v22 = *(const char **)(a3 + 8);
        BOOL v23 = *(void *)(a3 + 16) == 0;
      }
      else
      {
        uint64_t v22 = (const char *)(a3 + 8);
        BOOL v23 = v21 == 0;
      }
      if (v23) {
        uint64_t v24 = "";
      }
      else {
        uint64_t v24 = v22;
      }
      uint64_t v25 = *(void *)(a3 + 208);
      uint64_t v26 = *(void *)(a3 + 216);
      uint64_t v27 = *(void *)(a3 + 224);
      uint64_t v28 = *(void *)(a3 + 232);
      uint64_t v29 = *(void *)(a3 + 256);
      uint64_t v30 = *(void *)(a3 + 264);
      uint64_t v31 = *(void *)(a3 + 272);
      uint64_t v32 = *(void *)(a3 + 280);
      uint64_t v33 = *(void *)(a3 + 240);
      uint64_t v34 = *(void *)(a3 + 248);
      uint64_t v36 = *(void *)(a3 + 296);
      uint64_t v35 = *(void *)(a3 + 304);
      uint64_t v37 = *(void *)(a3 + 288);
      std::string __p = (void *)68293379;
      __int16 v48 = 2082;
      double v49 = "";
      __int16 v50 = 2081;
      double v51 = v20;
      __int16 v52 = 2081;
      double v53 = v24;
      __int16 v54 = 2049;
      uint64_t v55 = v25;
      __int16 v56 = 2049;
      uint64_t v57 = v26;
      __int16 v58 = 2049;
      uint64_t v59 = v27;
      __int16 v60 = 2049;
      uint64_t v61 = v28;
      __int16 v62 = 2049;
      uint64_t v63 = v33;
      __int16 v64 = 2049;
      uint64_t v65 = v29;
      __int16 v66 = 2049;
      uint64_t v67 = v30;
      __int16 v68 = 2049;
      uint64_t v69 = v31;
      __int16 v70 = 2049;
      uint64_t v71 = v32;
      __int16 v72 = 2049;
      uint64_t v73 = v34;
      __int16 v74 = 2049;
      uint64_t v75 = v36;
      __int16 v76 = 2049;
      uint64_t v77 = v35;
      __int16 v78 = 2049;
      uint64_t v79 = v37;
      __int16 v80 = 2049;
      uint64_t v81 = *((void *)&v93 + 1);
      __int16 v82 = 2049;
      unint64_t v83 = v96;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesIgneousLivabilityAlertPassPrecheck\", \"source\":%{private, location:escape_only}s, \"uid\":%{private, location:escape_only}s, \"ingress_to_server_ts\":\"%{private}0.3f\", \"egress_from_source_ts\":\"%{private}0.3f\", \"event_origin_ts\":\"%{private}0.3f\", \"effective\":\"%{private}0.3f\", \"expires\":\"%{private}0.3f\", \"event_update_number\":\"%{private}0.3f\", \"epi_latitude\":\"%{private}0.3f\", \"epi_longitude\":\"%{private}0.3f\", \"magnitude\":\"%{private}0.3f\", \"depth\":\"%{private}0.3f\", \"mmiLat\":\"%{private}0.3f\", \"mmiLon\":\"%{private}0.3f\", \"mmiLevel\":\"%{private}0.3f\", \"Magnitude\":\"%{private}0.3f\", \"FollowUpMessageValidTime\":\"%{private}0.3f\"}", (uint8_t *)&__p, 0xBCu);
    }
    if (*(char *)(a3 + 31) < 0)
    {
      sub_100004CB8(__dst, *(void **)(a3 + 8), *(void *)(a3 + 16));
    }
    else
    {
      *(_OWORD *)long long __dst = *(_OWORD *)(a3 + 8);
      uint64_t v46 = *(void *)(a3 + 24);
    }
    int v38 = sub_10002D914(a1, __dst, (uint64_t)buf, 1);
    int v39 = v38;
    if (SHIBYTE(v46) < 0)
    {
      operator delete(__dst[0]);
      if (v39) {
        goto LABEL_32;
      }
    }
    else if (v38)
    {
LABEL_32:
      uint64_t v40 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        std::string __p = (void *)68289026;
        __int16 v48 = 2082;
        double v49 = "";
        _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesIgneousLivabilityAlertPassPrecheck,alert already processed\"}", (uint8_t *)&__p, 0x12u);
      }
      sub_10000DD48(&__p, "");
      sub_10000DD48(v43, "");
      sub_10002CE14(a1, 3, (char *)&__p, (uint64_t)v43, 0.0, 0.0);
      goto LABEL_44;
    }
    if (*(double *)(a3 + 280) >= *((double *)&v93 + 1))
    {
      if (*(double *)(a3 + 288) >= *(double *)&v93)
      {
        uint64_t v18 = 1;
LABEL_49:
        std::string __p = &v91;
        sub_100005360((void ***)&__p);
        std::string __p = &v90[8];
        sub_100005360((void ***)&__p);
        if ((v90[7] & 0x80000000) != 0) {
          operator delete((void *)v89);
        }
        if (SHIBYTE(v88) < 0) {
          operator delete(*((void **)&v87 + 1));
        }
        if (SBYTE7(v87) < 0) {
          operator delete((void *)v86);
        }
        if (SHIBYTE(v85) < 0) {
          operator delete(*(void **)&buf[24]);
        }
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
        goto LABEL_15;
      }
      __int16 v42 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        std::string __p = (void *)68289026;
        __int16 v48 = 2082;
        double v49 = "";
        _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesIgneousLivabilityAlertPassPrecheck,alertMMI received below threshold level\"}", (uint8_t *)&__p, 0x12u);
      }
      sub_10000DD48(&__p, "");
      sub_10000DD48(v43, "");
      sub_10002CE14(a1, 4, (char *)&__p, (uint64_t)v43, 0.0, 0.0);
    }
    else
    {
      int v41 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        std::string __p = (void *)68289026;
        __int16 v48 = 2082;
        double v49 = "";
        _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesIgneousLivabilityAlertPassPrecheck,alert received below threshold level\"}", (uint8_t *)&__p, 0x12u);
      }
      sub_10000DD48(&__p, "");
      sub_10000DD48(v43, "");
      sub_10002CE14(a1, 5, (char *)&__p, (uint64_t)v43, 0.0, 0.0);
    }
LABEL_44:
    if (v44 < 0) {
      operator delete(v43[0]);
    }
    if (SBYTE3(v51) < 0) {
      operator delete(__p);
    }
    uint64_t v18 = 0;
    goto LABEL_49;
  }
  int v17 = SALogObjectGeneral;
  uint64_t v18 = 0;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,#warning,doesIgneousLivabilityAlertPassPrecheck,alert parsing error\"}", buf, 0x12u);
LABEL_14:
    uint64_t v18 = 0;
  }
LABEL_15:

  return v18;
}

void sub_10002E23C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  sub_100032B20((uint64_t)&a50);

  _Unwind_Resume(a1);
}

BOOL sub_10002E2F8(uint64_t a1, uint64_t a2)
{
  long long v27 = 0u;
  memset(v26, 0, sizeof(v26));
  long long v24 = 0u;
  *(_OWORD *)uint64_t v25 = 0u;
  *(_OWORD *)uint64_t v22 = 0u;
  *(_OWORD *)BOOL v23 = 0u;
  long long v21 = 0u;
  memset(v20, 0, sizeof(v20));
  __asm { FMOV            V0.2D, #10.0 }
  long long v29 = _Q0;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v30 = _Q0;
  long long v31 = _Q0;
  uint64_t v28 = 0;
  unint64_t v32 = 0xBFF0000000000000;
  int v10 = sub_10006B474();
  sub_10002B120((uint64_t)v10, (std::string *)v20);
  double Current = CFAbsoluteTimeGetCurrent();
  uint64_t v12 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v13 = *(void *)(a2 + 216);
    *(void *)std::string buf = 68289538;
    __int16 v34 = 2082;
    uint64_t v35 = "";
    __int16 v36 = 2050;
    double v37 = Current;
    __int16 v38 = 2050;
    uint64_t v39 = v13;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,isStaleAlert\", \"nowSeconds\":\"%{public}0.3f\", \"egressTime\":\"%{public}0.3f\"}", buf, 0x26u);
  }
  double v14 = vabdd_f64(Current, *(double *)(a2 + 216));
  double v15 = *((double *)&v31 + 1);
  if (v14 > *((double *)&v31 + 1))
  {
    double v16 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(void *)std::string buf = 68289026;
      __int16 v34 = 2082;
      uint64_t v35 = "";
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,isStaleAlert,stale alert received\"}", buf, 0x12u);
    }
    sub_10000DD48(buf, "");
    sub_10000DD48(__p, "");
    sub_10002CE14(a1, 8, (char *)buf, (uint64_t)__p, 0.0, 0.0);
    if (v19 < 0) {
      operator delete(__p[0]);
    }
    if (SBYTE3(v37) < 0) {
      operator delete(*(void **)buf);
    }
  }
  *(void *)std::string buf = &v27;
  sub_100005360((void ***)buf);
  *(void *)std::string buf = &v26[8];
  sub_100005360((void ***)buf);
  if ((v26[7] & 0x80000000) != 0) {
    operator delete(v25[0]);
  }
  if (SHIBYTE(v24) < 0) {
    operator delete(v23[1]);
  }
  if (SHIBYTE(v23[0]) < 0) {
    operator delete(v22[0]);
  }
  if (SHIBYTE(v21) < 0) {
    operator delete(*(void **)&v20[24]);
  }
  if ((v20[23] & 0x80000000) != 0) {
    operator delete(*(void **)v20);
  }
  return v14 > v15;
}

void sub_10002E580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v16 - 105) < 0) {
    operator delete(*(void **)(v16 - 128));
  }
  sub_100032B20((uint64_t)&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_10002E5CC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  long long v6 = v5;
  if (*(unsigned char *)(a1 + 576))
  {
    long long v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,#warning,device is in companion mode reject alert\"}", buf, 0x12u);
    }
    sub_10000DD48(buf, "");
    sub_10000DD48(__p, "");
    sub_10002CE14(a1, 10, buf, (uint64_t)__p, 0.0, 0.0);
LABEL_5:
    if (v61 < 0) {
      operator delete(__p[0]);
    }
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    goto LABEL_17;
  }
  if (!v5)
  {
    double v14 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,readIgneousPerformanceTestAlert,null alert\"}", buf, 0x12u);
    }
    sub_10000DD48(buf, "");
    sub_10000DD48(__p, "");
    sub_10002CE14(a1, 7, buf, (uint64_t)__p, 0.0, 0.0);
    goto LABEL_5;
  }
  double v8 = [v5 objectForKey:@"alert"];
  if (v8)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      std::string v9 = [v8 objectForKey:@"source"];
      if (v9 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        id v10 = v9;
      }
      else {
        id v10 = 0;
      }

      double v15 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::string buf = 68289283;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2113;
        *(void *)&buf[20] = v10;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#iap,readIgneousPerformanceTestAlert\", \"testSource\":%{private, location:escape_only}@}", buf, 0x1Cu);
      }
      if (v10)
      {
        uint64_t v16 = [v8 objectForKey:@"uid"];
        if (v16)
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            int v17 = [v8 objectForKey:@"ingress_to_server_timestamp"];
            if (v17 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
              id v59 = v17;
            }
            else {
              id v59 = 0;
            }

            uint64_t v20 = [v8 objectForKey:@"egress_from_source_timestamp"];
            if (v20 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
              id v58 = v20;
            }
            else {
              id v58 = 0;
            }

            long long v21 = [v8 objectForKey:@"event_origin_timestamp"];
            if (v21 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
              id v57 = v21;
            }
            else {
              id v57 = 0;
            }

            uint64_t v22 = [v8 objectForKey:@"effective"];
            if (v22 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
              id v55 = v22;
            }
            else {
              id v55 = 0;
            }

            BOOL v23 = [v8 objectForKey:@"expires"];
            if (v23 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
              id v56 = v23;
            }
            else {
              id v56 = 0;
            }

            long long v24 = [v8 objectForKey:@"epi_latitude"];
            if (v24 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
              id v54 = v24;
            }
            else {
              id v54 = 0;
            }

            uint64_t v25 = [v8 objectForKey:@"epi_longitude"];
            if (v25 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
              id v26 = v25;
            }
            else {
              id v26 = 0;
            }

            sub_10002B1EC(v6, a3);
            long long v27 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)std::string buf = 68291331;
              *(_DWORD *)&uint8_t buf[4] = 0;
              *(_WORD *)&uint8_t buf[8] = 2082;
              *(void *)&buf[10] = "";
              *(_WORD *)&buf[18] = 2113;
              *(void *)&buf[20] = v10;
              __int16 v63 = 2113;
              __int16 v64 = v16;
              __int16 v65 = 2113;
              double v66 = *(double *)&v59;
              __int16 v67 = 2113;
              double v68 = *(double *)&v58;
              __int16 v69 = 2113;
              double v70 = *(double *)&v57;
              __int16 v71 = 2113;
              double v72 = *(double *)&v55;
              __int16 v73 = 2113;
              double v74 = *(double *)&v56;
              __int16 v75 = 2113;
              id v76 = v54;
              __int16 v77 = 2113;
              double v78 = *(double *)&v26;
              _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#iap,readIgneousPerformanceTestAlert\", \"source\":%{private, location:escape_only}@, \"uid\":%{private, location:escape_only}@, \"ingress_to_server_ts\":%{private, location:escape_only}@, \"egress_from_source_ts\":%{private, location:escape_only}@, \"event_origin_ts\":%{private, location:escape_only}@, \"effective\":%{private, location:escape_only}@, \"expires\":%{private, location:escape_only}@, \"epi_latitude\":%{private, location:escape_only}@, \"epi_longitude\":%{private, location:escape_only}@}", buf, 0x6Cu);
            }
            *(_DWORD *)(a3 + 204) = 2;
            uint64_t v28 = v16;
            sub_10000DD48(buf, (char *)[v28 UTF8String]);
            long long v29 = (void **)(a3 + 8);
            if (*(char *)(a3 + 31) < 0) {
              operator delete(*v29);
            }
            *(_OWORD *)long long v29 = *(_OWORD *)buf;
            *(void *)(a3 + 24) = *(void *)&buf[16];
            sub_10000DD48(buf, (char *)[v10 UTF8String]);
            long long v30 = (void **)(a3 + 32);
            if (*(char *)(a3 + 55) < 0) {
              operator delete(*v30);
            }
            *(_OWORD *)long long v30 = *(_OWORD *)buf;
            *(void *)(a3 + 48) = *(void *)&buf[16];
            [v59 doubleValue];
            *(double *)(a3 + 208) = v31 + -978307200.0;
            [v58 doubleValue];
            *(double *)(a3 + 216) = v32 + -978307200.0;
            [v56 doubleValue];
            *(double *)(a3 + 240) = v33 + -978307200.0;
            [v57 doubleValue];
            *(double *)(a3 + 224) = v34 + -978307200.0;
            [v55 doubleValue];
            *(double *)(a3 + 232) = v35 + -978307200.0;
            [v54 doubleValue];
            *(void *)(a3 + 264) = v36;
            [v26 doubleValue];
            double v38 = v37;
            *(double *)(a3 + 272) = v37;
            double v39 = *(double *)(a3 + 208);
            if (fabs(v39) >= 2.22044605e-16
              && (double v40 = *(double *)(a3 + 216), fabs(v40) >= 2.22044605e-16)
              && (double v41 = *(double *)(a3 + 240), fabs(v41) >= 2.22044605e-16)
              && (double v42 = *(double *)(a3 + 232), fabs(v42) >= 2.22044605e-16)
              && (double v43 = *(double *)(a3 + 224), fabs(v43) >= 2.22044605e-16))
            {
              double v47 = *(double *)(a3 + 264);
              BOOL v48 = v47 == 0.0 && v37 == 0.0;
              double v49 = SALogObjectGeneral;
              BOOL v50 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
              if (v38 <= 180.0 && v38 >= -180.0 && v47 <= 90.0 && v47 >= -90.0 && !v48)
              {
                if (v50)
                {
                  double v51 = *(const char **)(a3 + 32);
                  if (!v51) {
                    double v51 = "";
                  }
                  if (*(char *)(a3 + 55) >= 0) {
                    double v51 = (const char *)(a3 + 32);
                  }
                  __int16 v52 = *(const char **)(a3 + 8);
                  if (!v52) {
                    __int16 v52 = "";
                  }
                  double v53 = *(void **)(a3 + 256);
                  if (*(char *)(a3 + 31) >= 0) {
                    __int16 v52 = (const char *)(a3 + 8);
                  }
                  *(_DWORD *)std::string buf = 68291587;
                  *(_DWORD *)&uint8_t buf[4] = 0;
                  *(_WORD *)&uint8_t buf[8] = 2082;
                  *(void *)&buf[10] = "";
                  *(_WORD *)&buf[18] = 2081;
                  *(void *)&buf[20] = v51;
                  __int16 v63 = 2081;
                  __int16 v64 = v52;
                  __int16 v65 = 2049;
                  double v66 = v39;
                  __int16 v67 = 2049;
                  double v68 = v40;
                  __int16 v69 = 2049;
                  double v70 = v43;
                  __int16 v71 = 2049;
                  double v72 = v42;
                  __int16 v73 = 2049;
                  double v74 = v41;
                  __int16 v75 = 2049;
                  id v76 = v53;
                  __int16 v77 = 2049;
                  double v78 = v47;
                  __int16 v79 = 2049;
                  double v80 = v38;
                  _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,readIgneousPerformanceTestAlert\", \"source\":%{private, location:escape_only}s, \"uid\":%{private, location:escape_only}s, \"ingress_to_server_ts\":\"%{private}0.3f\", \"egress_from_source_ts\":\"%{private}0.3f\", \"event_origin_ts\":\"%{private}0.3f\", \"effective\":\"%{private}0.3f\", \"expires\":\"%{private}0.3f\", \"event_update_number\":\"%{private}0.3f\", \"epi_latitude\":\"%{private}0.3f\", \"epi_longitude\":\"%{private}0.3f\"}", buf, 0x76u);
                }
                uint64_t v12 = 1;
                goto LABEL_83;
              }
              if (!v50) {
                goto LABEL_82;
              }
              *(_DWORD *)std::string buf = 68289026;
              *(_DWORD *)&uint8_t buf[4] = 0;
              *(_WORD *)&uint8_t buf[8] = 2082;
              *(void *)&buf[10] = "";
              size_t v45 = "{\"msg%{public}.0s\":\"#iap,readIgneousPerformanceTestAlert,location invalid\"}";
              uint64_t v46 = v49;
            }
            else
            {
              uint64_t v44 = SALogObjectGeneral;
              uint64_t v12 = 0;
              if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
              {
LABEL_83:

LABEL_42:
                goto LABEL_18;
              }
              *(_DWORD *)std::string buf = 68289026;
              *(_DWORD *)&uint8_t buf[4] = 0;
              *(_WORD *)&uint8_t buf[8] = 2082;
              *(void *)&buf[10] = "";
              size_t v45 = "{\"msg%{public}.0s\":\"#iap,readIgneousPerformanceTestAlert,time invalid\"}";
              uint64_t v46 = v44;
            }
            _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, v45, buf, 0x12u);
LABEL_82:
            uint64_t v12 = 0;
            goto LABEL_83;
          }
        }

        uint64_t v18 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,readIgneousPerformanceTestAlert,uid nil\"}", buf, 0x12u);
        }
        sub_10000DD48(buf, "");
        sub_10000DD48(__p, "");
        sub_10002CE14(a1, 2, buf, (uint64_t)__p, 0.0, 0.0);
      }
      else
      {
        char v19 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,readIgneousPerformanceTestAlert,testSource nil\"}", buf, 0x12u);
        }
        sub_10000DD48(buf, "");
        sub_10000DD48(__p, "");
        sub_10002CE14(a1, 1, buf, (uint64_t)__p, 0.0, 0.0);
      }
      if (v61 < 0) {
        operator delete(__p[0]);
      }
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      uint64_t v12 = 0;
      goto LABEL_42;
    }
  }

  uint64_t v11 = SALogObjectGeneral;
  uint64_t v12 = 0;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,readIgneousPerformanceTestAlert,jsondict nil\"}", buf, 0x12u);
LABEL_17:
    uint64_t v12 = 0;
  }
LABEL_18:

  return v12;
}

void sub_10002F140(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10002F320(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  long long v6 = v5;
  if (*(unsigned char *)(a1 + 576))
  {
    long long v7 = SALogObjectGeneral;
    uint64_t v8 = 0;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int16 v129 = 68289026;
      *(_DWORD *)&v129[4] = 0;
      *(_WORD *)&v129[8] = 2082;
      *(void *)&v129[10] = "";
      std::string v9 = "{\"msg%{public}.0s\":\"#iap,#warning,doesIgneousFollowUpAlertPassPrecheck,device is in companion mode reject alert\"}";
LABEL_51:
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v9, v129, 0x12u);
      uint64_t v8 = 0;
      goto LABEL_52;
    }
    goto LABEL_52;
  }
  if (!v5)
  {
    long long v7 = SALogObjectGeneral;
    uint64_t v8 = 0;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int16 v129 = 68289026;
      *(_DWORD *)&v129[4] = 0;
      *(_WORD *)&v129[8] = 2082;
      *(void *)&v129[10] = "";
      std::string v9 = "{\"msg%{public}.0s\":\"#iap,doesIgneousFollowUpAlertPassPrecheck,null alert\"}";
      goto LABEL_51;
    }
    goto LABEL_52;
  }
  id v10 = [v5 objectForKey:@"alert"];
  if (v10)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v11 = v10;

      uint64_t v12 = [v11 objectForKey:@"source"];
      if (!v12 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
      {

        double v38 = SALogObjectGeneral;
        uint64_t v8 = 0;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int16 v129 = 68289026;
          *(_DWORD *)&v129[4] = 0;
          *(_WORD *)&v129[8] = 2082;
          *(void *)&v129[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesIgneousFollowUpAlertPassPrecheck,testSource nil\"}", v129, 0x12u);
          uint64_t v8 = 0;
        }
        goto LABEL_83;
      }
      id v13 = v12;

      double v14 = [v11 objectForKey:@"uid"];
      if (!v14 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
      {

        double v39 = SALogObjectGeneral;
        uint64_t v8 = 0;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int16 v129 = 68289026;
          *(_DWORD *)&v129[4] = 0;
          *(_WORD *)&v129[8] = 2082;
          *(void *)&v129[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesIgneousFollowUpAlertPassPrecheck,uid nil\"}", v129, 0x12u);
          uint64_t v8 = 0;
        }
        goto LABEL_82;
      }
      id v15 = v14;

      id v100 = v13;
      uint64_t v16 = [v11 objectForKey:@"type"];
      if (!v16 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
      {

        double v40 = SALogObjectGeneral;
        uint64_t v8 = 0;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int16 v129 = 68289026;
          *(_DWORD *)&v129[4] = 0;
          *(_WORD *)&v129[8] = 2082;
          *(void *)&v129[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesIgneousFollowUpAlertPassPrecheck,ref type nil\"}", v129, 0x12u);
          uint64_t v8 = 0;
        }
        goto LABEL_81;
      }
      id v17 = v16;

      id v98 = v17;
      id v99 = v15;
      sub_10000DD48(v104, (char *)[v98 UTF8String]);
      long long v136 = 0u;
      *(_OWORD *)double v134 = 0u;
      memset(v135, 0, sizeof(v135));
      *(_OWORD *)double v132 = 0u;
      long long v133 = 0u;
      long long v130 = 0u;
      *(_OWORD *)__int16 v131 = 0u;
      memset(v129, 0, sizeof(v129));
      __asm { FMOV            V0.2D, #10.0 }
      long long v138 = _Q0;
      __asm { FMOV            V0.2D, #-1.0 }
      long long v139 = _Q0;
      long long v140 = _Q0;
      uint64_t v137 = 0;
      unint64_t v141 = 0xBFF0000000000000;
      BOOL v23 = sub_10006B474();
      sub_10002B120((uint64_t)v23, (std::string *)v129);
      uint64_t v25 = (uint64_t *)*((void *)&v136 + 1);
      long long v24 = (uint64_t *)v136;
      if ((void)v136 == *((void *)&v136 + 1))
      {
LABEL_65:
        double v43 = SALogObjectGeneral;
        uint64_t v8 = 0;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          uint64_t v44 = "{\"msg%{public}.0s\":\"#iap,doesIgneousFollowUpAlertPassPrecheck,type not found in alert\"}";
          goto LABEL_67;
        }
LABEL_68:
        *(void *)std::string buf = &v136;
        sub_100005360((void ***)buf);
        *(void *)std::string buf = (char *)v135 + 8;
        sub_100005360((void ***)buf);
        if (SBYTE7(v135[0]) < 0) {
          operator delete(v134[0]);
        }
        if (SHIBYTE(v133) < 0) {
          operator delete(v132[1]);
        }
        if (SHIBYTE(v132[0]) < 0) {
          operator delete(v131[0]);
        }
        if (SHIBYTE(v130) < 0) {
          operator delete(*(void **)&v129[24]);
        }
        if ((v129[23] & 0x80000000) != 0) {
          operator delete(*(void **)v129);
        }
        if ((char)v105 < 0) {
          operator delete(v104[0]);
        }

        id v15 = v99;
LABEL_81:

        id v13 = v100;
LABEL_82:

LABEL_83:
        goto LABEL_52;
      }
      char v96 = 0;
      do
      {
        while (1)
        {
          id v26 = (id)SALogObjectGeneral;
          if (os_log_type_enabled(v26, OS_LOG_TYPE_DEBUG))
          {
            long long v27 = v24;
            if (*((char *)v24 + 23) < 0) {
              long long v27 = (uint64_t *)*v24;
            }
            if ((v105 & 0x80u) == 0) {
              uint64_t v28 = v104;
            }
            else {
              uint64_t v28 = (void **)v104[0];
            }
            *(_DWORD *)std::string buf = 68289539;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            *(_WORD *)&buf[18] = 2081;
            *(void *)&buf[20] = v27;
            __int16 v107 = 2081;
            id v108 = v28;
            _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#iap,doesIgneousFollowUpAlertPassPrecheck,type\", \"pKey\":%{private, location:escape_only}s, \"AlertKey\":%{private, location:escape_only}s}", buf, 0x26u);
          }

          int v29 = *((char *)v24 + 23);
          long long v30 = (v105 & 0x80u) == 0 ? (void *)v105 : v104[1];
          double v31 = (v105 & 0x80u) == 0 ? v104 : (void **)v104[0];
          double v32 = v29 >= 0 ? (void *)*((unsigned __int8 *)v24 + 23) : (void *)v24[1];
          double v33 = v29 >= 0 ? v24 : (uint64_t *)*v24;
          size_t v34 = (size_t)(v32 >= v30 ? v30 : v32);
          if (memcmp(v31, v33, v34) || v32 != v30) {
            break;
          }
          uint64_t v36 = (id)SALogObjectGeneral;
          if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)std::string buf = 68289026;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesIgneousFollowUpAlertPassPrecheck,Alert for production environment\"}", buf, 0x12u);
          }

          v24 += 3;
          char v96 = 1;
          if (v24 == v25) {
            goto LABEL_60;
          }
        }
        v24 += 3;
      }
      while (v24 != v25);
      if ((v96 & 1) == 0) {
        goto LABEL_65;
      }
LABEL_60:
      id v41 = v99;
      sub_10000DD48(__p, (char *)[v41 UTF8String]);
      int v42 = sub_1000305EC(a1, __p, (uint64_t)v129);
      if (v103 < 0) {
        operator delete(__p[0]);
      }
      if (v42)
      {
        double v43 = SALogObjectGeneral;
        uint64_t v8 = 0;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          uint64_t v44 = "{\"msg%{public}.0s\":\"#iap,doesIgneousFollowUpAlertPassPrecheck,followUp alert already processed\"}";
LABEL_67:
          _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, v44, buf, 0x12u);
          uint64_t v8 = 0;
          goto LABEL_68;
        }
        goto LABEL_68;
      }
      size_t v45 = [v11 objectForKey:@"English"];
      if (!v45 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
      {

        double v43 = SALogObjectGeneral;
        uint64_t v8 = 0;
        if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_68;
        }
        *(_DWORD *)std::string buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        uint64_t v44 = "{\"msg%{public}.0s\":\"#iap,doesIgneousFollowUpAlertPassPrecheck,englishText nil\"}";
        goto LABEL_67;
      }
      id v46 = v45;

      double v47 = [v11 objectForKey:@"Spanish"];
      if (v47 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        long long v88 = v47;
      }
      else
      {

        BOOL v48 = (id)SALogObjectGeneral;
        if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesIgneousFollowUpAlertPassPrecheck,spanishText nil\"}", buf, 0x12u);
        }

        long long v88 = (char *)v46;
      }
      double v49 = [v11 objectForKey:@"ingress_to_server_timestamp"];
      if (v49 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        double v101 = COERCE_DOUBLE(v49);
      }
      else {
        double v101 = 0.0;
      }

      BOOL v50 = [v11 objectForKey:@"egress_from_source_timestamp"];
      if (v50 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        double v97 = COERCE_DOUBLE(v50);
      }
      else {
        double v97 = 0.0;
      }

      double v51 = [v11 objectForKey:@"event_origin_timestamp"];
      if (v51 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        double v95 = COERCE_DOUBLE(v51);
      }
      else {
        double v95 = 0.0;
      }

      __int16 v52 = [v11 objectForKey:@"effective"];
      if (v52 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        double v92 = COERCE_DOUBLE(v52);
      }
      else {
        double v92 = 0.0;
      }

      double v53 = [v11 objectForKey:@"expires"];
      if (v53 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        double v94 = COERCE_DOUBLE(v53);
      }
      else {
        double v94 = 0.0;
      }

      id v54 = [v11 objectForKey:@"epi_latitude"];
      if (v54 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        id v91 = v54;
      }
      else {
        id v91 = 0;
      }

      id v55 = [v11 objectForKey:@"epi_longitude"];
      if (v55 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
        double v93 = COERCE_DOUBLE(v55);
      }
      else {
        double v93 = 0.0;
      }

      id v56 = (id)SALogObjectGeneral;
      if (os_log_type_enabled(v56, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::string buf = 68291843;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2113;
        *(void *)&buf[20] = v100;
        __int16 v107 = 2113;
        id v108 = (void **)v41;
        __int16 v109 = 2113;
        id v110 = (const char *)v46;
        __int16 v111 = 2113;
        id v112 = v88;
        __int16 v113 = 2113;
        double v114 = v101;
        __int16 v115 = 2113;
        double v116 = v97;
        __int16 v117 = 2113;
        double v118 = v95;
        __int16 v119 = 2113;
        double v120 = v92;
        __int16 v121 = 2113;
        double v122 = v94;
        __int16 v123 = 2113;
        id v124 = v91;
        __int16 v125 = 2113;
        double v126 = v93;
        _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#iap,doesIgneousFollowUpAlertPassPrecheck\", \"source\":%{private, location:escape_only}@, \"uid\":%{private, location:escape_only}@, \"englishText\":%{private, location:escape_only}@, \"spanishText\":%{private, location:escape_only}@, \"ingress_to_server_ts\":%{private, location:escape_only}@, \"egress_from_source_ts\":%{private, location:escape_only}@, \"event_origin_ts\":%{private, location:escape_only}@, \"effective\":%{private, location:escape_only}@, \"expires\":%{private, location:escape_only}@, \"epi_latitude\":%{private, location:escape_only}@, \"epi_longitude\":%{private, location:escape_only}@}", buf, 0x80u);
      }

      *(_DWORD *)(a3 + 204) = 3;
      sub_10000DD48(buf, (char *)[v41 UTF8String]);
      id v57 = (void **)(a3 + 8);
      if (*(char *)(a3 + 31) < 0) {
        operator delete(*v57);
      }
      *(_OWORD *)id v57 = *(_OWORD *)buf;
      *(void *)(a3 + 24) = *(void *)&buf[16];
      sub_10000DD48(buf, (char *)[v100 UTF8String]);
      id v58 = (void **)(a3 + 32);
      if (*(char *)(a3 + 55) < 0) {
        operator delete(*v58);
      }
      *(_OWORD *)id v58 = *(_OWORD *)buf;
      *(void *)(a3 + 48) = *(void *)&buf[16];
      id v90 = v46;
      sub_10000DD48(buf, (char *)[v90 UTF8String]);
      id v59 = (void **)(a3 + 80);
      if (*(char *)(a3 + 103) < 0) {
        operator delete(*v59);
      }
      *(_OWORD *)id v59 = *(_OWORD *)buf;
      *(void *)(a3 + 96) = *(void *)&buf[16];
      __int16 v60 = v88;
      sub_10000DD48(buf, (char *)[v60 UTF8String]);
      char v61 = (void **)(a3 + 104);
      if (*(char *)(a3 + 127) < 0) {
        operator delete(*v61);
      }
      *(_OWORD *)char v61 = *(_OWORD *)buf;
      *(void *)(a3 + 120) = *(void *)&buf[16];
      [*(id *)&v101 doubleValue];
      *(double *)(a3 + 208) = v62 + -978307200.0;
      [*(id *)&v97 doubleValue];
      *(double *)(a3 + 216) = v63 + -978307200.0;
      [*(id *)&v94 doubleValue];
      *(double *)(a3 + 240) = v64 + -978307200.0;
      [*(id *)&v95 doubleValue];
      *(double *)(a3 + 224) = v65 + -978307200.0;
      [*(id *)&v92 doubleValue];
      *(double *)(a3 + 232) = v66 + -978307200.0;
      [v91 doubleValue];
      *(void *)(a3 + 264) = v67;
      [*(id *)&v93 doubleValue];
      double v89 = v68;
      *(double *)(a3 + 272) = v68;
      double v69 = *(double *)(a3 + 208);
      if (fabs(v69) >= 2.22044605e-16
        && (double v70 = *(double *)(a3 + 216), fabs(v70) >= 2.22044605e-16)
        && (double v71 = *(double *)(a3 + 240), fabs(v71) >= 2.22044605e-16)
        && (double v72 = *(double *)(a3 + 232), fabs(v72) >= 2.22044605e-16)
        && (double v73 = *(double *)(a3 + 224), fabs(v73) >= 2.22044605e-16))
      {
        double v77 = *(double *)(a3 + 264);
        BOOL v78 = v77 == 0.0 && v68 == 0.0;
        log = SALogObjectGeneral;
        BOOL v79 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
        if (v89 <= 180.0 && v89 >= -180.0 && v77 <= 90.0 && v77 >= -90.0 && !v78)
        {
          if (v79)
          {
            double v80 = *(const char **)(a3 + 32);
            if (!v80) {
              double v80 = "";
            }
            if (*(char *)(a3 + 55) >= 0) {
              uint64_t v81 = (const char *)(a3 + 32);
            }
            else {
              uint64_t v81 = v80;
            }
            __int16 v82 = *(const char **)(a3 + 8);
            if (!v82) {
              __int16 v82 = "";
            }
            if (*(char *)(a3 + 31) >= 0) {
              unint64_t v83 = (const char *)(a3 + 8);
            }
            else {
              unint64_t v83 = v82;
            }
            int v84 = " ";
            if (*(char *)(a3 + 103) < 0)
            {
              if (*(void *)(a3 + 88)) {
                long long v85 = *(const char **)(a3 + 80);
              }
              else {
                long long v85 = " ";
              }
            }
            else if (*(unsigned char *)(a3 + 103))
            {
              long long v85 = (const char *)(a3 + 80);
            }
            else
            {
              long long v85 = " ";
            }
            if (*(char *)(a3 + 127) < 0)
            {
              if (*(void *)(a3 + 112)) {
                int v84 = *(const char **)(a3 + 104);
              }
            }
            else if (*(unsigned char *)(a3 + 127))
            {
              int v84 = (const char *)(a3 + 104);
            }
            long long v86 = *(void **)(a3 + 256);
            *(_DWORD *)std::string buf = 68292099;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            *(_WORD *)&buf[18] = 2081;
            *(void *)&buf[20] = v81;
            __int16 v107 = 2081;
            id v108 = (void **)v83;
            __int16 v109 = 2081;
            id v110 = v85;
            __int16 v111 = 2081;
            id v112 = v84;
            __int16 v113 = 2049;
            double v114 = v69;
            __int16 v115 = 2049;
            double v116 = v70;
            __int16 v117 = 2049;
            double v118 = v73;
            __int16 v119 = 2049;
            double v120 = v72;
            __int16 v121 = 2049;
            double v122 = v71;
            __int16 v123 = 2049;
            id v124 = v86;
            __int16 v125 = 2049;
            double v126 = v77;
            __int16 v127 = 2049;
            double v128 = v89;
            _os_log_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesIgneousFollowUpAlertPassPrecheck\", \"source\":%{private, location:escape_only}s, \"uid\":%{private, location:escape_only}s, \"alertEnglish\":%{private, location:escape_only}s, \"alertSpanish\":%{private, location:escape_only}s, \"ingress_to_server_ts\":\"%{private}0.3f\", \"egress_from_source_ts\":\"%{private}0.3f\", \"event_origin_ts\":\"%{private}0.3f\", \"effective\":\"%{private}0.3f\", \"expires\":\"%{private}0.3f\", \"event_update_number\":\"%{private}0.3f\", \"epi_latitude\":\"%{private}0.3f\", \"epi_longitude\":\"%{private}0.3f\"}", buf, 0x8Au);
          }
          uint64_t v8 = 1;
          goto LABEL_141;
        }
        if (!v79) {
          goto LABEL_140;
        }
        *(_DWORD *)std::string buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        __int16 v75 = "{\"msg%{public}.0s\":\"#iap,doesIgneousFollowUpAlertPassPrecheck,location invalid\"}";
        id v76 = log;
      }
      else
      {
        uint64_t v74 = SALogObjectGeneral;
        uint64_t v8 = 0;
        if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
LABEL_141:

          goto LABEL_68;
        }
        *(_DWORD *)std::string buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        __int16 v75 = "{\"msg%{public}.0s\":\"#iap,doesIgneousFollowUpAlertPassPrecheck,time invalid\"}";
        id v76 = v74;
      }
      _os_log_impl((void *)&_mh_execute_header, v76, OS_LOG_TYPE_DEFAULT, v75, buf, 0x12u);
LABEL_140:
      uint64_t v8 = 0;
      goto LABEL_141;
    }
  }

  long long v7 = SALogObjectGeneral;
  uint64_t v8 = 0;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int16 v129 = 68289026;
    *(_DWORD *)&v129[4] = 0;
    *(_WORD *)&v129[8] = 2082;
    *(void *)&v129[10] = "";
    std::string v9 = "{\"msg%{public}.0s\":\"#iap,doesIgneousFollowUpAlertPassPrecheck,jsondict nil\"}";
    goto LABEL_51;
  }
LABEL_52:

  return v8;
}

void sub_1000303E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, void *a12, void *a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, void *a19, void *a20,void *a21,void *a22,void *a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  sub_100032B20((uint64_t)&a55);
  if (a36 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1000305EC(uint64_t a1, void **a2, uint64_t a3)
{
  double v6 = (double)(uint64_t)(double)time(0) + -978307200.0;
  uint64_t v18 = 0;
  memset(&v17, 0, sizeof(v17));
  uint64_t v7 = a1 + 192;
  sub_100032DB4(v7, 1, v6 - *(double *)(a3 + 216));
  uint64_t v8 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    std::string v9 = a2;
    if (*((char *)a2 + 23) < 0) {
      std::string v9 = *a2;
    }
    uint64_t v10 = *(void *)(a3 + 200);
    uint64_t v11 = *(void *)(a3 + 216);
    *(_DWORD *)std::string buf = 68290307;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v20 = 2082;
    long long v21 = "";
    __int16 v22 = 2081;
    BOOL v23 = v9;
    __int16 v24 = 2050;
    uint64_t v25 = 0;
    __int16 v26 = 2050;
    double v27 = v6;
    __int16 v28 = 2050;
    uint64_t v29 = v10;
    __int16 v30 = 2050;
    uint64_t v31 = v11;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,evtTracker,\", \"uid\":%{private, location:escape_only}s, \"lastIgneousReceivedTs\":\"%{public}0.3f\", \"curTime\":\"%{public}0.3f\", \"ThresholdTimeBetweenAlerts\":\"%{public}0.3f\", \"FollowUpMessageValidTime\":\"%{public}0.3f\"}", buf, 0x44u);
  }
  if (*((char *)a2 + 23) < 0)
  {
    sub_100004CB8(__p, *a2, (unint64_t)a2[1]);
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a2;
    uint64_t v16 = a2[2];
  }
  SACommonUtils::getHashForString((char *)__p, (uint64_t *)buf);
  uint64_t v12 = sub_10002313C(v7, (unsigned __int8 **)buf, &v18, &v17);
  if (SBYTE3(v23) < 0) {
    operator delete(*(void **)buf);
  }
  if (SHIBYTE(v16) < 0)
  {
    operator delete(__p[0]);
    if (!v12) {
      goto LABEL_16;
    }
  }
  else if (!v12)
  {
    goto LABEL_16;
  }
  id v13 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 68289282;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v20 = 2082;
    long long v21 = "";
    __int16 v22 = 2050;
    BOOL v23 = v18;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,evtTracker,igneousFollowUpReceived\", \"lastIgneousReceivedTs\":\"%{public}0.3f\"}", buf, 0x1Cu);
  }
LABEL_16:
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  return v12;
}

void sub_100030844(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100030890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = SALogObjectGeneral;
  BOOL v5 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    uint64_t v6 = a2 + 8;
    if (*(char *)(a2 + 31) < 0) {
      uint64_t v6 = *(void *)(a2 + 8);
    }
    *(_DWORD *)std::string buf = 68289283;
    int v33 = 0;
    LOWORD(v34[0]) = 2082;
    *(void *)((char *)v34 + 2) = "";
    HIWORD(v34[2]) = 2081;
    *(void *)&v34[3] = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updateIgneousReceived\", \"igneousUID\":%{private, location:escape_only}s}", buf, 0x1Cu);
  }
  buf[0] = 0;
  memset(v34, 0, sizeof(v34));
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  char v45 = 0;
  int v46 = 1;
  long long v47 = 0u;
  long long v48 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  char v54 = -1;
  uint64_t v55 = 0;
  __int16 v56 = -1022;
  int v57 = 0;
  uint64_t v58 = 0;
  int v7 = sub_1000838E4((SAPlatformInfo *)v5);
  if (*(unsigned char *)(a2 + 200)) {
    int v8 = v7;
  }
  else {
    int v8 = 0;
  }
  if (v8 != 1) {
    goto LABEL_19;
  }
  if ((*(char *)(a2 + 199) & 0x80000000) == 0)
  {
    if (*(unsigned char *)(a2 + 199))
    {
      CFStringRef v30 = @"BleUIDKeyString";
      uint64_t v9 = a2 + 176;
      goto LABEL_14;
    }
LABEL_19:
    uint64_t v11 = 0;
    goto LABEL_20;
  }
  if (!*(void *)(a2 + 184)) {
    goto LABEL_19;
  }
  CFStringRef v30 = @"BleUIDKeyString";
  uint64_t v9 = *(void *)(a2 + 176);
LABEL_14:
  uint64_t v10 = +[NSString stringWithUTF8String:v9];
  uint64_t v31 = v10;
  uint64_t v11 = +[NSDictionary dictionaryWithObjects:&v31 forKeys:&v30 count:1];

  uint64_t v12 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    if (*(char *)(a2 + 199) >= 0) {
      id v13 = (void **)(a2 + 176);
    }
    else {
      id v13 = *(void ***)(a2 + 176);
    }
    *(void *)&double v23 = 68289539;
    *(_WORD *)__int16 v24 = 2082;
    *(void *)&v24[2] = "";
    __int16 v25 = 2081;
    __int16 v26 = v13;
    __int16 v27 = 2113;
    __p[0] = v11;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updateIgneousReceived\", \"bleAlertUID\":%{private, location:escape_only}s, \"bleUID\":%{private, location:escape_only}@}", (uint8_t *)&v23, 0x26u);
  }
LABEL_20:
  double Current = CFAbsoluteTimeGetCurrent();
  SACommonUtils::convertDictionaryToString(v11, (uint64_t)v21);
  id v15 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v16 = v21;
    if (v22 < 0) {
      uint64_t v16 = (void **)v21[0];
    }
    *(void *)&double v23 = 68289283;
    *(_WORD *)__int16 v24 = 2082;
    *(void *)&v24[2] = "";
    __int16 v25 = 2081;
    __int16 v26 = v16;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updateIgneousReceived\", \"metaValueStr.c_str()\":%{private, location:escape_only}s}", (uint8_t *)&v23, 0x1Cu);
  }
  SACommonUtils::getHashForString((char *)(a2 + 8), (uint64_t *)v19);
  sub_1000251CC((uint64_t)&v23, (long long *)v19, (long long *)v21, Current);
  sub_100030CFC(a1, &v23);
  if (v29 < 0) {
    operator delete(*(void **)((char *)__p + 2));
  }
  if (SBYTE1(__p[0]) < 0) {
    operator delete(*(void **)v24);
  }
  if (v20 < 0) {
    operator delete(v19[0]);
  }
  std::string v17 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(void *)&double v23 = 68289026;
    *(_WORD *)__int16 v24 = 2082;
    *(void *)&v24[2] = "";
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updateIgneousReceived done\"}", (uint8_t *)&v23, 0x12u);
  }
  if (v22 < 0) {
    operator delete(v21[0]);
  }

  return sub_100032BBC((uint64_t)buf);
}

void sub_100030C84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  sub_100032BBC((uint64_t)&a31);
  _Unwind_Resume(a1);
}

void *sub_100030CFC(uint64_t a1, double *a2)
{
  v16[0] = off_1000F66D8;
  v16[1] = a1;
  v16[3] = v16;
  v15[0] = off_1000F6758;
  v15[1] = a1;
  v15[3] = v15;
  sub_100010BB4((uint64_t)v17, (uint64_t)v16, (uint64_t)v15);
  sub_10000F6D4(v15);
  sub_10000F6D4(v16);
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v5 = (void *)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      BOOL v5 = (void *)*v5;
    }
    uint64_t v6 = (void *)(a1 + 160);
    if (*(char *)(a1 + 183) < 0) {
      uint64_t v6 = (void *)*v6;
    }
    v8[0] = 68289539;
    v8[1] = 0;
    __int16 v9 = 2082;
    uint64_t v10 = "";
    __int16 v11 = 2081;
    uint64_t v12 = v5;
    __int16 v13 = 2081;
    double v14 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,update\", \"filePath\":%{private, location:escape_only}s, \"debugName\":%{private, location:escape_only}s}", (uint8_t *)v8, 0x26u);
  }
  sub_100024380(a1, a2);
  if ((*(char *)(a1 + 71) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(a1 + 71)) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (*(void *)(a1 + 56)) {
LABEL_11:
  }
    sub_100024608((char *)a1);
LABEL_12:
  if (!*(unsigned char *)(a1 + 1) && !*(unsigned char *)(a1 + 185)) {
    sub_100025424(a1);
  }
  return sub_1000115F0(v17);
}

void sub_100030EAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  sub_10000F6D4((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_100030ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = a2 + 8;
    if (*(char *)(a2 + 31) < 0) {
      uint64_t v5 = *(void *)(a2 + 8);
    }
    *(void *)&double buf = 68289283;
    *(_WORD *)uint64_t v12 = 2082;
    *(void *)&uint64_t v12[2] = "";
    __int16 v13 = 2081;
    uint64_t v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updateIgneousFollowUpReceived\", \"igneousUID\":%{private, location:escape_only}s}", (uint8_t *)&buf, 0x1Cu);
  }
  double Current = CFAbsoluteTimeGetCurrent();
  sub_10000DD48(v9, "");
  SACommonUtils::getHashForString((char *)(a2 + 8), (uint64_t *)v7);
  sub_1000251CC((uint64_t)&buf, (long long *)v7, (long long *)v9, Current);
  sub_100030CFC(a1 + 192, &buf);
  if (v17 < 0) {
    operator delete(__p);
  }
  if (v15 < 0) {
    operator delete(*(void **)v12);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v10 < 0) {
    operator delete(v9[0]);
  }
}

void sub_100031048(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100031094(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = (id)SALogObjectGeneral;
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    int v5 = *((unsigned __int8 *)SAPlatformInfo::instance((SAPlatformInfo *)v4) + 9);
    *(_DWORD *)double buf = 68289282;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 1026;
    *(_DWORD *)&buf[20] = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesAlertPassesProductionCheck\", \"InternalInstall\":%{public}hhd}", buf, 0x18u);
  }

  if (*((unsigned char *)SAPlatformInfo::instance(v6) + 9))
  {
    uint64_t v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)double buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesAlertPassesProductionCheck,not in prod\"}", buf, 0x12u);
    }
    uint64_t v8 = 1;
  }
  else
  {
    char v10 = [v2 objectForKey:@"alert"];
    if (v10 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      uint64_t v11 = [v10 objectForKey:@"productionId"];
      if (v11 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        id v12 = v11;
        sub_10000DD48(v34, (char *)[v12 UTF8String]);
        long long v50 = 0u;
        long long v51 = 0u;
        long long __p = 0u;
        long long v49 = 0u;
        long long v46 = 0u;
        long long v47 = 0u;
        long long v44 = 0u;
        *(_OWORD *)char v45 = 0u;
        memset(buf, 0, sizeof(buf));
        __asm { FMOV            V0.2D, #10.0 }
        long long v53 = _Q0;
        __asm { FMOV            V0.2D, #-1.0 }
        long long v54 = _Q0;
        long long v55 = _Q0;
        uint64_t v52 = 0;
        unint64_t v56 = 0xBFF0000000000000;
        uint64_t v18 = sub_10006B474();
        sub_10002B120((uint64_t)v18, (std::string *)buf);
        char v20 = (uint64_t *)*((void *)&v49 + 1);
        char v19 = (uint64_t *)v50;
        if (*((void *)&v49 + 1) == (void)v50)
        {
          uint64_t v8 = 0;
        }
        else
        {
          id v33 = v12;
          long long v21 = SALogObjectGeneral;
          while (1)
          {
            if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
            {
              char v22 = v20;
              if (*((char *)v20 + 23) < 0) {
                char v22 = (uint64_t *)*v20;
              }
              if ((v35 & 0x80u) == 0) {
                double v23 = v34;
              }
              else {
                double v23 = (void **)v34[0];
              }
              *(_DWORD *)long long v36 = 68289539;
              *(_DWORD *)&void v36[4] = 0;
              __int16 v37 = 2082;
              long long v38 = "";
              __int16 v39 = 2081;
              long long v40 = v22;
              __int16 v41 = 2081;
              long long v42 = v23;
              _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#iap,Alert for production environment\", \"pKey\":%{private, location:escape_only}s, \"AlertKey\":%{private, location:escape_only}s}", v36, 0x26u);
              long long v21 = SALogObjectGeneral;
            }
            int v24 = *((char *)v20 + 23);
            __int16 v25 = (v35 & 0x80u) == 0 ? (void *)v35 : v34[1];
            __int16 v26 = (v35 & 0x80u) == 0 ? v34 : (void **)v34[0];
            __int16 v27 = v24 >= 0 ? (void *)*((unsigned __int8 *)v20 + 23) : (void *)v20[1];
            __int16 v28 = v24 >= 0 ? v20 : (uint64_t *)*v20;
            size_t v29 = (size_t)(v27 >= v25 ? v25 : v27);
            if (!memcmp(v26, v28, v29) && v27 == v25) {
              break;
            }
            v20 += 3;
            if (v20 == v19)
            {
              uint64_t v8 = 0;
              goto LABEL_50;
            }
          }
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)long long v36 = 68289026;
            *(_DWORD *)&void v36[4] = 0;
            __int16 v37 = 2082;
            long long v38 = "";
            _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,Alert for production environment\"}", v36, 0x12u);
          }
          uint64_t v8 = 1;
LABEL_50:
          id v12 = v33;
        }
        *(void *)long long v36 = &v51;
        sub_100005360((void ***)v36);
        *(void *)long long v36 = (char *)&v49 + 8;
        sub_100005360((void ***)v36);
        if (SBYTE7(v49) < 0) {
          operator delete((void *)__p);
        }
        if (SHIBYTE(v47) < 0) {
          operator delete(*((void **)&v46 + 1));
        }
        if (SBYTE7(v46) < 0) {
          operator delete(v45[0]);
        }
        if (SHIBYTE(v44) < 0) {
          operator delete(*(void **)&buf[24]);
        }
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
        if ((char)v35 < 0) {
          operator delete(v34[0]);
        }
      }
      else
      {

        double v32 = SALogObjectGeneral;
        uint64_t v8 = 0;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)double buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,ref prodId nil\"}", buf, 0x12u);
          uint64_t v8 = 0;
        }
      }
    }
    else
    {

      uint64_t v31 = SALogObjectGeneral;
      uint64_t v8 = 0;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)double buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,doesAlertPassesProductionCheck,invalid dictionary\"}", buf, 0x12u);
        uint64_t v8 = 0;
      }
    }
  }

  return v8;
}

void sub_1000315B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_100032B20((uint64_t)&a26);
  if (a19 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_10003162C(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100031680(uint64_t a1, int a2)
{
  BOOL v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289282;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    __int16 v8 = 1026;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,onCompanionNearby\", \"Companion\":%{public}d}", (uint8_t *)v5, 0x18u);
  }
  *(unsigned char *)(a1 + 576) = a2;
}

void sub_100031754(unsigned char *a1)
{
  id v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 68289026;
    int v6 = 0;
    __int16 v7 = 2082;
    __int16 v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,onFirstUnlock\"}", (uint8_t *)&v5, 0x12u);
  }
  sub_100022FE0(a1);
  sub_100022FE0(a1 + 192);
  if (sub_1000838E4(v3))
  {
    BOOL v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 68289026;
      int v6 = 0;
      __int16 v7 = 2082;
      __int16 v8 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,onFirstUnlock,isBLERelaySupported\"}", (uint8_t *)&v5, 0x12u);
    }
    sub_100022FE0(a1 + 384);
  }
}

void sub_100031890(SAPlatformInfo *a1, void **a2)
{
  if (sub_1000838E4(a1))
  {
    BOOL v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      if (*((char *)a2 + 23) >= 0) {
        int v5 = a2;
      }
      else {
        int v5 = *a2;
      }
      *(void *)&double buf = 68289283;
      *(_WORD *)id v12 = 2082;
      *(void *)&uint64_t v12[2] = "";
      __int16 v13 = 2081;
      uint64_t v14 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,SAIgneousAlertParser\", \"bleUID\":%{private, location:escape_only}s}", (uint8_t *)&buf, 0x1Cu);
    }
    double Current = CFAbsoluteTimeGetCurrent();
    if (*((char *)a2 + 23) < 0)
    {
      sub_100004CB8(__dst, *a2, (unint64_t)a2[1]);
    }
    else
    {
      *(_OWORD *)long long __dst = *(_OWORD *)a2;
      char v10 = a2[2];
    }
    sub_10000DD48(v7, "{}");
    sub_1000251CC((uint64_t)&buf, (long long *)__dst, (long long *)v7, Current);
    sub_100030CFC((uint64_t)a1 + 384, &buf);
    if (v17 < 0) {
      operator delete(__p);
    }
    if (v15 < 0) {
      operator delete(*(void **)v12);
    }
    if (v8 < 0) {
      operator delete(v7[0]);
    }
    if (SHIBYTE(v10) < 0) {
      operator delete(__dst[0]);
    }
  }
}

void sub_100031A20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100031A6C(uint64_t a1, void **a2, uint64_t a3, int a4)
{
  if (!sub_1000838E4((SAPlatformInfo *)a1)) {
    return 0;
  }
  uint64_t v90 = 0;
  double v8 = (double)(uint64_t)(double)time(0) + -978307200.0;
  memset(&__p, 0, sizeof(__p));
  if (a4) {
    sub_100032DB4(a1 + 384, 1, v8 - *(double *)(a3 + 200));
  }
  int v9 = SALogObjectGeneral;
  BOOL v10 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v10)
  {
    if (*((char *)a2 + 23) >= 0) {
      uint64_t v11 = a2;
    }
    else {
      uint64_t v11 = *a2;
    }
    uint64_t v12 = *(void *)(a3 + 200);
    uint64_t v13 = *(void *)(a3 + 216);
    *(_DWORD *)double buf = 68290307;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 2081;
    *(void *)&buf[20] = v11;
    __int16 v95 = 2050;
    uint64_t v96 = 0;
    __int16 v97 = 2050;
    double v98 = v8;
    __int16 v99 = 2050;
    uint64_t v100 = v12;
    __int16 v101 = 2050;
    uint64_t v102 = v13;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,isDuplicateBleAlertReceived\", \"uid\":%{private, location:escape_only}s, \"lastBleReceivedTs\":\"%{public}0.3f\", \"curTime\":\"%{public}0.3f\", \"ThresholdTimeBetweenAlerts\":\"%{public}0.3f\", \"FollowUpMessageValidTime\":\"%{public}0.3f\"}", buf, 0x44u);
  }
  if (sub_1000838E4((SAPlatformInfo *)v10))
  {
    if (*((char *)a2 + 23) < 0)
    {
      sub_100004CB8(buf, *a2, (unint64_t)a2[1]);
    }
    else
    {
      *(_OWORD *)double buf = *(_OWORD *)a2;
      *(void *)&buf[16] = a2[2];
    }
    int v15 = sub_10002313C(a1 + 384, (unsigned __int8 **)buf, &v90, &__p);
    char v16 = v15;
    if ((buf[23] & 0x80000000) != 0)
    {
      operator delete(*(void **)buf);
      if (v16)
      {
LABEL_16:
        uint64_t v17 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)double buf = 68289282;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&buf[18] = 2050;
          *(void *)&buf[20] = v90;
          uint64_t v18 = "{\"msg%{public}.0s\":\"#iap,bleReceived\", \"lastBleReceivedTs\":\"%{public}0.3f\"}";
          char v19 = v17;
          uint32_t v20 = 28;
LABEL_18:
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, v18, buf, v20);
        }
        goto LABEL_19;
      }
    }
    else if (v15)
    {
      goto LABEL_16;
    }
  }
  long long v21 = (void *)*((unsigned __int8 *)a2 + 23);
  if ((char)v21 < 0) {
    long long v21 = a2[1];
  }
  if (!v21)
  {
    double v32 = SALogObjectGeneral;
    uint64_t v14 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_150;
    }
    *(_DWORD *)double buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,isIgneousAlertReceivedForBle,bleUid Invalid\"}", buf, 0x12u);
LABEL_149:
    uint64_t v14 = 0;
    goto LABEL_150;
  }
  double v22 = *(double *)(a3 + 200);
  unint64_t v91 = 0;
  unint64_t v92 = 0;
  unint64_t v93 = 0;
  v111[0] = off_1000F67D8;
  v111[1] = a1;
  v111[3] = v111;
  v110[0] = off_1000F6858;
  v110[1] = a1;
  v110[3] = v110;
  sub_100010BB4((uint64_t)v112, (uint64_t)v111, (uint64_t)v110);
  double v23 = v8 - v22;
  sub_10000F6D4(v110);
  sub_10000F6D4(v111);
  unint64_t v25 = v91;
  for (uint64_t i = v92; i != v25; sub_100023988(i))
    i -= 56;
  unint64_t v92 = v25;
  double v26 = *(double *)(a1 + 8);
  if (v26 > v23)
  {
    __int16 v27 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_107;
    }
    uint64_t v30 = *(void *)(a1 + 160);
    uint64_t v29 = a1 + 160;
    uint64_t v28 = v30;
    if (*(char *)(v29 + 23) >= 0) {
      uint64_t v28 = v29;
    }
    *(_DWORD *)double buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 2081;
    *(void *)&buf[20] = v28;
    uint64_t v31 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findAllEventsWithin,outOfRangeArgs\", \"history\":%{private, l"
          "ocation:escape_only}s}";
LABEL_43:
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, v31, buf, 0x1Cu);
    goto LABEL_107;
  }
  if (*(void *)(a1 + 24) == *(void *)(a1 + 32) || *(unsigned char *)a1 == 0)
  {
    __int16 v27 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_107;
    }
    uint64_t v36 = *(void *)(a1 + 160);
    uint64_t v35 = a1 + 160;
    uint64_t v34 = v36;
    if (*(char *)(v35 + 23) >= 0) {
      uint64_t v34 = v35;
    }
    *(_DWORD *)double buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 2081;
    *(void *)&buf[20] = v34;
    uint64_t v31 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findAllEventsWithin,skipping,notReady\", \"history\":%{private"
          ", location:escape_only}s}";
    goto LABEL_43;
  }
  __int16 v37 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v39 = *(void *)(a1 + 160);
    if (*(char *)(a1 + 183) >= 0) {
      uint64_t v39 = a1 + 160;
    }
    uint64_t v40 = *(void *)(a1 + 16);
    *(_DWORD *)char v103 = 68290051;
    *(_WORD *)&v103[8] = 2082;
    *(_DWORD *)&v103[4] = 0;
    *(void *)&v103[10] = "";
    *(_WORD *)&v103[18] = 2081;
    *(void *)&v103[20] = v39;
    __int16 v104 = 2049;
    double v105 = v23;
    __int16 v106 = 2049;
    double v107 = v26;
    __int16 v108 = 2049;
    uint64_t v109 = v40;
    _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,findLatestEventBeforeInternal\", \"debugName\":%{private, location:escape_only}s, \"time\":\"%{private}.2f\", \"fStartTimeSeconds\":\"%{private}.2f\", \"fEndTimeSeconds\":\"%{private}.2f\"}", v103, 0x3Au);
  }
  *(void *)double v126 = off_1000F68D8;
  *(void *)__int16 v127 = a1;
  *(void *)&v129[4] = v126;
  __int16 v123 = off_1000F6958;
  uint64_t v124 = a1;
  __int16 v125 = &v123;
  sub_100010BB4((uint64_t)v103, (uint64_t)v126, (uint64_t)&v123);
  sub_10000F6D4(&v123);
  sub_10000F6D4(v126);
  if (*(double *)(a1 + 8) > v23)
  {
    __int16 v41 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v42 = a1 + 160;
      if (*(char *)(a1 + 183) < 0) {
        uint64_t v42 = *(void *)(a1 + 160);
      }
      *(_DWORD *)__int16 v119 = 68289283;
      *(_DWORD *)&v119[4] = 0;
      *(_WORD *)double v120 = 2082;
      *(void *)&v120[2] = "";
      __int16 v121 = 2081;
      *(void *)double v122 = v42;
      long long v43 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findLatestEventBefore,InvalidArgs\", \"history\":%{private, "
            "location:escape_only}s}";
LABEL_62:
      _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, v43, v119, 0x1Cu);
      goto LABEL_63;
    }
    goto LABEL_63;
  }
  uint64_t v44 = *(void *)(a1 + 24);
  uint64_t v45 = *(void *)(a1 + 32);
  if (v44 == v45 || !*(unsigned char *)a1)
  {
    __int16 v41 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v47 = a1 + 160;
      if (*(char *)(a1 + 183) < 0) {
        uint64_t v47 = *(void *)(a1 + 160);
      }
      *(_DWORD *)__int16 v119 = 68289283;
      *(_DWORD *)&v119[4] = 0;
      *(_WORD *)double v120 = 2082;
      *(void *)&v120[2] = "";
      __int16 v121 = 2081;
      *(void *)double v122 = v47;
      long long v43 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findLatestEventBefore,skipping,notReady\", \"history\":%{pri"
            "vate, location:escape_only}s}";
      goto LABEL_62;
    }
LABEL_63:
    buf[0] = 0;
    BYTE6(v100) = 0;
    goto LABEL_64;
  }
  while (v45 != v44)
  {
    double v46 = *(double *)(v45 - 56);
    v45 -= 56;
    if (v46 <= v23)
    {
      sub_100034008((uint64_t)buf, v45);
      goto LABEL_64;
    }
  }
  sub_100034008((uint64_t)buf, v44);
LABEL_64:
  sub_1000115F0(v103);
  if (BYTE6(v100))
  {
    unint64_t v48 = v92;
    if (v92 >= v93)
    {
      uint64_t v49 = sub_1000340C0((uint64_t *)&v91, (uint64_t)buf);
    }
    else
    {
      sub_100024FA8(v92, (uint64_t)buf);
      uint64_t v49 = v48 + 56;
    }
    unint64_t v92 = v49;
  }
  long long v50 = *(double **)(a1 + 24);
  long long v51 = *(double **)(a1 + 32);
  while (v50 != v51)
  {
    if (*v50 >= v23 && *v50 <= v8)
    {
      unint64_t v53 = v92;
      if (v92 >= v93)
      {
        uint64_t v54 = sub_1000340C0((uint64_t *)&v91, (uint64_t)v50);
      }
      else
      {
        sub_100024FA8(v92, (uint64_t)v50);
        uint64_t v54 = v53 + 56;
      }
      unint64_t v92 = v54;
    }
    v50 += 7;
  }
  long long v55 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v56 = *(void *)(a1 + 160);
    if (*(char *)(a1 + 183) >= 0) {
      uint64_t v56 = a1 + 160;
    }
    uint64_t v58 = *(void *)(a1 + 8);
    uint64_t v57 = *(void *)(a1 + 16);
    *(_DWORD *)double v126 = 68290051;
    *(_WORD *)__int16 v127 = 2082;
    *(_DWORD *)&v126[4] = 0;
    *(void *)&v127[2] = "";
    __int16 v128 = 2081;
    *(void *)__int16 v129 = v56;
    *(_WORD *)&v129[8] = 2049;
    *(double *)&v129[10] = v8;
    __int16 v130 = 2049;
    uint64_t v131 = v58;
    __int16 v132 = 2049;
    uint64_t v133 = v57;
    _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,findFirstEventAfterInternal\", \"debugName\":%{private, location:escape_only}s, \"time\":\"%{private}.2f\", \"fStartTimeSeconds\":\"%{private}.2f\", \"fEndTimeSeconds\":\"%{private}.2f\"}", v126, 0x3Au);
  }
  __int16 v123 = off_1000F69D8;
  uint64_t v124 = a1;
  __int16 v125 = &v123;
  *(void *)__int16 v119 = off_1000F6A58;
  *(void *)double v120 = a1;
  *(void *)&v122[4] = v119;
  sub_100010BB4((uint64_t)v126, (uint64_t)&v123, (uint64_t)v119);
  sub_10000F6D4(v119);
  sub_10000F6D4(&v123);
  if (*(double *)(a1 + 16) >= v8)
  {
    uint64_t v64 = *(void *)(a1 + 24);
    double v65 = *(double **)(a1 + 32);
    if ((double *)v64 != v65 && *(unsigned char *)a1)
    {
      double v66 = *(double **)(a1 + 24);
      while (*v66 < v8)
      {
        v66 += 7;
        if (v66 == v65)
        {
          sub_100034008((uint64_t)v103, v64);
          goto LABEL_101;
        }
      }
      sub_100034008((uint64_t)v103, (uint64_t)v66);
      goto LABEL_101;
    }
    id v59 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v69 = *(void *)(a1 + 160);
      uint64_t v68 = a1 + 160;
      uint64_t v67 = v69;
      if (*(char *)(v68 + 23) >= 0) {
        uint64_t v67 = v68;
      }
      *(_DWORD *)__int16 v113 = 68289283;
      int v114 = 0;
      __int16 v115 = 2082;
      double v116 = "";
      __int16 v117 = 2081;
      uint64_t v118 = v67;
      double v63 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findFirstEventAfter,skipping,notReady\", \"history\":%{priva"
            "te, location:escape_only}s}";
      goto LABEL_99;
    }
  }
  else
  {
    id v59 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v62 = *(void *)(a1 + 160);
      uint64_t v61 = a1 + 160;
      uint64_t v60 = v62;
      if (*(char *)(v61 + 23) >= 0) {
        uint64_t v60 = v61;
      }
      *(_DWORD *)__int16 v113 = 68289283;
      int v114 = 0;
      __int16 v115 = 2082;
      double v116 = "";
      __int16 v117 = 2081;
      uint64_t v118 = v60;
      double v63 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findFirstEventAfter,InvalidArgs\", \"history\":%{private, lo"
            "cation:escape_only}s}";
LABEL_99:
      _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_DEFAULT, v63, v113, 0x1Cu);
    }
  }
  v103[0] = 0;
  BYTE6(v109) = 0;
LABEL_101:
  sub_1000115F0(v126);
  if (BYTE6(v109))
  {
    unint64_t v70 = v92;
    if (v92 >= v93)
    {
      uint64_t v71 = sub_1000340C0((uint64_t *)&v91, (uint64_t)v103);
    }
    else
    {
      sub_100024FA8(v92, (uint64_t)v103);
      uint64_t v71 = v70 + 56;
    }
    unint64_t v92 = v71;
  }
  sub_100034530((uint64_t)v103);
  sub_100034530((uint64_t)buf);
LABEL_107:
  sub_1000115F0(v112);
  unint64_t v72 = v92;
  if (v91 == v92)
  {
LABEL_148:
    *(void *)double buf = &v91;
    sub_100023904((void ***)buf);
    goto LABEL_149;
  }
  unint64_t v73 = v91 + 56;
  do
  {
    uint64_t v74 = SACommonUtils::convertStringToDictionary((uint64_t *)(v73 - 24));
    if (!v74 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
    {
      long long v87 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)double buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        _os_log_impl((void *)&_mh_execute_header, v87, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#iap,isIgneousAlertReceivedForBle,dictionary Invalid\"}", buf, 0x12u);
      }

      goto LABEL_148;
    }
    memset(buf, 0, 24);
    __int16 v75 = [v74 objectForKey:@"BleUIDKeyString"];
    if (v75)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        sub_10001D4D0(v75, v103);
        *(_OWORD *)double buf = *(_OWORD *)v103;
        *(void *)&buf[16] = *(void *)&v103[16];
      }
    }

    if (*(char *)(v73 - 1) < 0) {
      uint64_t v76 = *(void *)(v73 - 16);
    }
    else {
      uint64_t v76 = *(unsigned __int8 *)(v73 - 1);
    }
    char v77 = buf[23];
    if (!v76) {
      goto LABEL_136;
    }
    if ((buf[23] & 0x80) != 0)
    {
      unint64_t v79 = *(void *)&buf[8];
      if (!*(void *)&buf[8]) {
        goto LABEL_136;
      }
      BOOL v78 = *(unsigned char **)buf;
    }
    else
    {
      if (!buf[23]) {
        goto LABEL_136;
      }
      BOOL v78 = buf;
      unint64_t v79 = buf[23];
    }
    int v80 = *((char *)a2 + 23);
    uint64_t v81 = v80 >= 0 ? (void *)*((unsigned __int8 *)a2 + 23) : a2[1];
    __int16 v82 = v80 >= 0 ? a2 : (void **)*a2;
    size_t v83 = (unint64_t)v81 >= v79 ? v79 : (size_t)v81;
    if (memcmp(v78, v82, v83) || v81 != (void *)v79)
    {
LABEL_136:
      int v84 = 0;
      if ((v77 & 0x80) == 0) {
        goto LABEL_138;
      }
      goto LABEL_137;
    }
    int v84 = 1;
    if ((v77 & 0x80) == 0) {
      goto LABEL_138;
    }
LABEL_137:
    operator delete(*(void **)buf);
LABEL_138:

    if (v73 == v72) {
      char v85 = 1;
    }
    else {
      char v85 = v84;
    }
    v73 += 56;
  }
  while ((v85 & 1) == 0);
  *(void *)double buf = &v91;
  sub_100023904((void ***)buf);
  if (!v84) {
    goto LABEL_149;
  }
  uint64_t v86 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)double buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    uint64_t v18 = "{\"msg%{public}.0s\":\"#iap,isDuplicateBleAlertReceived\"}";
    char v19 = v86;
    uint32_t v20 = 18;
    goto LABEL_18;
  }
LABEL_19:
  uint64_t v14 = 1;
LABEL_150:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v14;
}

void sub_1000326BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  sub_1000115F0((void *)(v57 - 208));
  sub_100034530((uint64_t)&a20);
  sub_1000115F0(&a49);
  a20 = &a17;
  sub_100023904((void ***)&a20);
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1000327F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_100032888(void *a1)
{
  id v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10003290C(uint64_t a1, std::string *__str, long long *a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  int v9 = *(std::string **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a4)
  {
    sub_100032A84((uint64_t *)a1);
    if (a4 > 0xAAAAAAAAAAAAAAALL) {
      sub_1000050E8();
    }
    unint64_t v10 = 0x5555555555555556 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v10;
    }
    sub_10001D920((void *)a1, v11);
    uint64_t v12 = sub_10001D974(v8, (long long *)__str, a3, *(char **)(a1 + 8));
    goto LABEL_11;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3) < a4)
  {
    uint64_t v13 = (std::string *)((char *)__str + 8 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3));
    sub_100032AC0(__str, v13, v9);
    uint64_t v12 = sub_10001D974(v8, (long long *)v13, a3, *(char **)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = v12;
    return;
  }
  sub_100032AC0(__str, (std::string *)a3, v9);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16 != v14)
  {
    do
    {
      if (*(char *)(v16 - 1) < 0) {
        operator delete(*(void **)(v16 - 24));
      }
      v16 -= 24;
    }
    while (v16 != v15);
  }
  *(void *)(a1 + 8) = v15;
}

void sub_100032A74(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_100032A7C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_100032A84(uint64_t *a1)
{
  if (*a1)
  {
    sub_1000053B4(a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

std::string *sub_100032AC0(std::string *__str, std::string *a2, std::string *this)
{
  BOOL v4 = __str;
  if (__str != a2)
  {
    do
      std::string::operator=(this++, v4++);
    while (v4 != a2);
    return a2;
  }
  return (std::string *)v4;
}

uint64_t sub_100032B20(uint64_t a1)
{
  uint64_t v3 = (void **)(a1 + 144);
  sub_100005360(&v3);
  uint64_t v3 = (void **)(a1 + 120);
  sub_100005360(&v3);
  if (*(char *)(a1 + 119) < 0) {
    operator delete(*(void **)(a1 + 96));
  }
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_100032BBC(uint64_t a1)
{
  if (*(char *)(a1 + 199) < 0) {
    operator delete(*(void **)(a1 + 176));
  }
  if (*(char *)(a1 + 175) < 0) {
    operator delete(*(void **)(a1 + 152));
  }
  if (*(char *)(a1 + 151) < 0) {
    operator delete(*(void **)(a1 + 128));
  }
  if (*(char *)(a1 + 127) < 0) {
    operator delete(*(void **)(a1 + 104));
  }
  if (*(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_100032C64()
{
}

void *sub_100032C78()
{
  __n128 result = operator new(0x10uLL);
  void *result = off_1000F6558;
  return result;
}

void sub_100032CB0(uint64_t a1, void *a2)
{
  *a2 = off_1000F6558;
}

uint64_t sub_100032CD8(int a1, uint64_t a2, std::string *this)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_100004CB8(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  std::string::operator=(this, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return 1;
}

void sub_100032D4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100032D68(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100032DA8()
{
}

void *sub_100032DB4(uint64_t a1, char a2, double a3)
{
  v26[0] = off_1000F65D8;
  v26[1] = a1;
  v26[3] = v26;
  v25[0] = off_1000F6658;
  v25[1] = a1;
  void v25[3] = v25;
  sub_100010BB4((uint64_t)v27, (uint64_t)v26, (uint64_t)v25);
  sub_10000F6D4(v25);
  sub_10000F6D4(v26);
  char v24 = 0;
  v22[0] = 0;
  v22[1] = 0;
  uint64_t v23 = 0;
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  *(void *)&v20[0] = a1;
  v20[1] = a3;
  *(void *)&v20[2] = &v24;
  *(void *)&v20[3] = v22;
  *(void *)&void v20[4] = &v21;
  unint64_t v21 = 0xBFF0000000000000;
  uint64_t v8 = sub_1000330D0(v6, v7, v20);
  sub_100033050(a1 + 24, v8, *(void *)(a1 + 32));
  if ((a2 & 1) == 0 && *(void *)(a1 + 24) == *(void *)(a1 + 32))
  {
    double v9 = *(double *)&v21;
    if (SHIBYTE(v23) < 0)
    {
      sub_100004CB8(__dst, v22[0], (unint64_t)v22[1]);
    }
    else
    {
      *(_OWORD *)long long __dst = *(_OWORD *)v22;
      uint64_t v14 = v23;
    }
    sub_10000DD48(v11, "{}");
    sub_1000251CC((uint64_t)v15, (long long *)__dst, (long long *)v11, v9);
    sub_1000331C8((uint64_t *)(a1 + 24), (uint64_t)v15);
    if (v19 < 0) {
      operator delete(__p);
    }
    if (v17 < 0) {
      operator delete(v16);
    }
    if (v12 < 0) {
      operator delete(v11[0]);
    }
    if (SHIBYTE(v14) < 0) {
      operator delete(__dst[0]);
    }
  }
  if (v24)
  {
    if (*(char *)(a1 + 71) < 0)
    {
      if (!*(void *)(a1 + 56)) {
        goto LABEL_20;
      }
    }
    else if (!*(unsigned char *)(a1 + 71))
    {
      goto LABEL_20;
    }
    sub_100024608((char *)a1);
  }
LABEL_20:
  if (SHIBYTE(v23) < 0) {
    operator delete(v22[0]);
  }
  return sub_1000115F0(v27);
}

void sub_100032FC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  if (a41 < 0) {
    operator delete(__p);
  }
  sub_1000115F0((void *)(v41 - 88));
  _Unwind_Resume(a1);
}

uint64_t sub_100033050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 != a3)
  {
    sub_100024BDC((uint64_t)&v9, a3, *(void *)(a1 + 8), a2);
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)(a1 + 8);
    if (v7 != v5)
    {
      do
      {
        v7 -= 56;
        sub_100023988(v7);
      }
      while (v7 != v6);
    }
    *(void *)(a1 + 8) = v6;
  }
  return a2;
}

uint64_t sub_1000330D0(uint64_t a1, uint64_t a2, double *a3)
{
  if (a1 == a2) {
    return a2;
  }
  uint64_t v5 = a1;
  while (!sub_10003351C(a3, (double *)v5))
  {
    v5 += 56;
    if (v5 == a2) {
      return a2;
    }
  }
  if (v5 != a2)
  {
    for (uint64_t i = v5 + 56; i != a2; i += 56)
    {
      if (!sub_10003351C(a3, (double *)i))
      {
        *(void *)uint64_t v5 = *(void *)i;
        uint64_t v8 = (void **)(v5 + 8);
        if (*(char *)(v5 + 31) < 0) {
          operator delete(*v8);
        }
        long long v9 = *(_OWORD *)(i + 8);
        *(void *)(v5 + 24) = *(void *)(i + 24);
        *(_OWORD *)uint64_t v8 = v9;
        *(unsigned char *)(i + 31) = 0;
        *(unsigned char *)(i + 8) = 0;
        unint64_t v10 = (void **)(v5 + 32);
        if (*(char *)(v5 + 55) < 0) {
          operator delete(*v10);
        }
        long long v11 = *(_OWORD *)(i + 32);
        *(void *)(v5 + 48) = *(void *)(i + 48);
        *(_OWORD *)unint64_t v10 = v11;
        *(unsigned char *)(i + 55) = 0;
        *(unsigned char *)(i + 32) = 0;
        v5 += 56;
      }
    }
  }
  return v5;
}

uint64_t sub_1000331C8(uint64_t *a1, uint64_t a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(result - 8);
  if (v7 >= v6)
  {
    uint64_t v11 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v7 - *a1) >> 3);
    unint64_t v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) > 0x492492492492492) {
      sub_1000050E8();
    }
    unint64_t v13 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v5 - *a1) >> 3);
    if (2 * v13 > v12) {
      unint64_t v12 = 2 * v13;
    }
    if (v13 >= 0x249249249249249) {
      unint64_t v14 = 0x492492492492492;
    }
    else {
      unint64_t v14 = v12;
    }
    void v19[4] = result;
    if (v14) {
      uint64_t v15 = (char *)sub_100025130(result, v14);
    }
    else {
      uint64_t v15 = 0;
    }
    uint64_t v16 = &v15[56 * v11];
    v19[0] = v15;
    v19[1] = v16;
    v19[3] = &v15[56 * v14];
    *(void *)uint64_t v16 = *(void *)a2;
    long long v17 = *(_OWORD *)(a2 + 8);
    *((void *)v16 + 3) = *(void *)(a2 + 24);
    *(_OWORD *)(v16 + 8) = v17;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 8) = 0;
    long long v18 = *(_OWORD *)(a2 + 32);
    *((void *)v16 + 6) = *(void *)(a2 + 48);
    *((_OWORD *)v16 + 2) = v18;
    *(void *)(a2 + 40) = 0;
    *(void *)(a2 + 48) = 0;
    *(void *)(a2 + 32) = 0;
    v19[2] = v16 + 56;
    sub_100033720(a1, v19);
    uint64_t v10 = a1[1];
    uint64_t result = sub_10002517C((uint64_t)v19);
  }
  else
  {
    *(void *)unint64_t v7 = *(void *)a2;
    long long v8 = *(_OWORD *)(a2 + 8);
    *(void *)(v7 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(v7 + 8) = v8;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 8) = 0;
    long long v9 = *(_OWORD *)(a2 + 32);
    *(void *)(v7 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(v7 + 32) = v9;
    *(void *)(a2 + 40) = 0;
    *(void *)(a2 + 48) = 0;
    *(void *)(a2 + 32) = 0;
    uint64_t v10 = v7 + 56;
    a1[1] = v7 + 56;
  }
  a1[1] = v10;
  return result;
}

void sub_100033348(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10002517C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100033360()
{
}

void *sub_100033374(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F65D8;
  result[1] = v3;
  return result;
}

uint64_t sub_1000333BC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F65D8;
  a2[1] = v2;
  return result;
}

void sub_1000333E8(uint64_t a1)
{
}

uint64_t sub_1000333F0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100033430()
{
}

void sub_100033440()
{
}

void *sub_100033454(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F6658;
  result[1] = v3;
  return result;
}

uint64_t sub_10003349C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F6658;
  a2[1] = v2;
  return result;
}

void sub_1000334C8(uint64_t a1)
{
}

uint64_t sub_1000334D0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100033510()
{
}

BOOL sub_10003351C(double *a1, double *a2)
{
  double v3 = *a1;
  std::string __p = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v4 = *(void *)(*(void *)&v3 + 96);
  if (!v4) {
    sub_100005520();
  }
  unint64_t v6 = (const std::string *)(a2 + 1);
  (*(void (**)(uint64_t, double *, void **))(*(void *)v4 + 48))(v4, a2 + 1, &__p);
  double v7 = *a2;
  double v8 = a1[1];
  if (*a2 < v8) {
    **((unsigned char **)a1 + 2) = 1;
  }
  long long v9 = (double *)*((void *)a1 + 4);
  if (*v9 < v7)
  {
    *long long v9 = v7;
    std::string::operator=(*((std::string **)a1 + 3), v6);
  }
  uint64_t v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v11 = (void *)(*(void *)&v3 + 160);
    if (*(char *)(*(void *)&v3 + 183) < 0) {
      uint64_t v11 = (void *)*v11;
    }
    uint64_t v12 = *((void *)a1 + 1);
    double v13 = *a2;
    if (SHIBYTE(v18) < 0)
    {
      if (v17) {
        p_p = (const char *)__p;
      }
      else {
        p_p = "";
      }
    }
    else
    {
      p_p = (const char *)&__p;
      if (!HIBYTE(v18)) {
        p_p = "";
      }
    }
    *(_DWORD *)double buf = 68290307;
    int v20 = 0;
    __int16 v21 = 2082;
    double v22 = "";
    __int16 v23 = 2081;
    char v24 = v11;
    __int16 v25 = 2049;
    uint64_t v26 = v12;
    __int16 v27 = 2049;
    double v28 = v13;
    __int16 v29 = 2081;
    uint64_t v30 = p_p;
    __int16 v31 = 1025;
    BOOL v32 = v7 < v8;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saEventHistory,cleanup\", \"history\":%{private, location:escape_only}s, \"before\":\"%{private}0.1f\", \"ts\":\"%{private}0.1f\", \"value\":%{private, location:escape_only}s, \"remove\":%{private}hhd}", buf, 0x40u);
  }
  if (SHIBYTE(v18) < 0) {
    operator delete(__p);
  }
  return v7 < v8;
}

void sub_100033700(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_100033720(uint64_t *result, void *a2)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  uint64_t v4 = a2[1];
  while (v2 != v3)
  {
    uint64_t v5 = *(void *)(v2 - 56);
    v2 -= 56;
    *(void *)(v4 - 56) = v5;
    v4 -= 56;
    long long v6 = *(_OWORD *)(v2 + 8);
    *(void *)(v4 + 24) = *(void *)(v2 + 24);
    *(_OWORD *)(v4 + 8) = v6;
    *(void *)(v2 + 16) = 0;
    *(void *)(v2 + 24) = 0;
    *(void *)(v2 + 8) = 0;
    long long v7 = *(_OWORD *)(v2 + 32);
    *(void *)(v4 + 48) = *(void *)(v2 + 48);
    *(_OWORD *)(v4 + 32) = v7;
    *(void *)(v2 + 40) = 0;
    *(void *)(v2 + 48) = 0;
    *(void *)(v2 + 32) = 0;
  }
  a2[1] = v4;
  uint64_t v8 = *result;
  void *result = v4;
  a2[1] = v8;
  uint64_t v9 = result[1];
  result[1] = a2[2];
  a2[2] = v9;
  uint64_t v10 = result[2];
  result[2] = a2[3];
  a2[3] = v10;
  *a2 = a2[1];
  return result;
}

void sub_1000337AC()
{
}

void *sub_1000337C0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F66D8;
  result[1] = v3;
  return result;
}

uint64_t sub_100033808(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F66D8;
  a2[1] = v2;
  return result;
}

void sub_100033834(uint64_t a1)
{
}

uint64_t sub_10003383C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10003387C()
{
}

void sub_10003388C()
{
}

void *sub_1000338A0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F6758;
  result[1] = v3;
  return result;
}

uint64_t sub_1000338E8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F6758;
  a2[1] = v2;
  return result;
}

void sub_100033914(uint64_t a1)
{
}

uint64_t sub_10003391C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10003395C()
{
}

void sub_10003396C()
{
}

void *sub_100033980(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F67D8;
  result[1] = v3;
  return result;
}

uint64_t sub_1000339C8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F67D8;
  a2[1] = v2;
  return result;
}

void sub_1000339F4(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  if (!v1[1])
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      uint64_t v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100023BD4((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

uint64_t sub_100033AC4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100033B04()
{
}

void sub_100033B14()
{
}

void *sub_100033B28(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F6858;
  result[1] = v3;
  return result;
}

uint64_t sub_100033B70(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F6858;
  a2[1] = v2;
  return result;
}

void sub_100033B9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!*(unsigned char *)(v1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      uint64_t v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100025424(v1);
  }
}

uint64_t sub_100033C6C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100033CAC()
{
}

void sub_100033CBC()
{
}

void *sub_100033CD0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F68D8;
  result[1] = v3;
  return result;
}

uint64_t sub_100033D18(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F68D8;
  a2[1] = v2;
  return result;
}

void sub_100033D44(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  if (!v1[1])
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      uint64_t v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100023BD4((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

uint64_t sub_100033E14(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100033E54()
{
}

void sub_100033E64()
{
}

void *sub_100033E78(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F6958;
  result[1] = v3;
  return result;
}

uint64_t sub_100033EC0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F6958;
  a2[1] = v2;
  return result;
}

void sub_100033EEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!*(unsigned char *)(v1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      uint64_t v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100025424(v1);
  }
}

uint64_t sub_100033FBC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100033FFC()
{
}

uint64_t sub_100034008(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_100004CB8((unsigned char *)(a1 + 8), *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
  }
  uint64_t v5 = (unsigned char *)(a1 + 32);
  if (*(char *)(a2 + 55) < 0)
  {
    sub_100004CB8(v5, *(void **)(a2 + 32), *(void *)(a2 + 40));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)uint64_t v5 = v6;
  }
  *(unsigned char *)(a1 + 56) = 1;
  return a1;
}

void sub_1000340A4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000340C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) > 0x492492492492492) {
    sub_1000050E8();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0x6DB6DB6DB6DB6DB7 * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x249249249249249) {
    unint64_t v9 = 0x492492492492492;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_100025130(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  double v13 = v10;
  unint64_t v14 = &v10[56 * v4];
  uint64_t v16 = &v10[56 * v9];
  sub_100024FA8((uint64_t)v14, a2);
  uint64_t v15 = v14 + 56;
  sub_100033720(a1, &v13);
  uint64_t v11 = a1[1];
  sub_10002517C((uint64_t)&v13);
  return v11;
}

void sub_1000341CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10002517C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1000341E4()
{
}

void *sub_1000341F8(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F69D8;
  result[1] = v3;
  return result;
}

uint64_t sub_100034240(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F69D8;
  a2[1] = v2;
  return result;
}

void sub_10003426C(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  if (!v1[1])
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      unint64_t v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100023BD4((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

uint64_t sub_10003433C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10003437C()
{
}

void sub_10003438C()
{
}

void *sub_1000343A0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F6A58;
  result[1] = v3;
  return result;
}

uint64_t sub_1000343E8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F6A58;
  a2[1] = v2;
  return result;
}

void sub_100034414(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!*(unsigned char *)(v1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      unint64_t v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100025424(v1);
  }
}

uint64_t sub_1000344E4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100034524()
{
}

uint64_t sub_100034530(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
    if (*(char *)(a1 + 55) < 0) {
      operator delete(*(void **)(a1 + 32));
    }
    if (*(char *)(a1 + 31) < 0) {
      operator delete(*(void **)(a1 + 8));
    }
  }
  return a1;
}

uint64_t sub_10003457C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  sub_100035A58((uint64_t)v16, a3);
  *(void *)a1 = off_1000F6B60;
  sub_100035A58(a1 + 8, (uint64_t)v16);
  sub_100035AF0(v16);
  *(void *)a1 = off_1000F6AD8;
  *(unsigned char *)(a1 + 52) = 0;
  *(void *)(a1 + 56) = 0;
  id v6 = v5;
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)double buf = 68289026;
    int v13 = 0;
    __int16 v14 = 2082;
    uint64_t v15 = "";
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SABatteryServiceProd,init\"}", buf, 0x12u);
  }
  xpc_object_t v8 = xpc_dictionary_create(0, 0, 0);
  if (v8)
  {
    unint64_t v9 = sub_10003E368();
    xpc_dictionary_set_int64(v8, XPC_ACTIVITY_INTERVAL, (uint64_t)*((double *)v9 + 28));
    xpc_dictionary_set_string(v8, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_MAINTENANCE);
    xpc_dictionary_set_BOOL(v8, XPC_ACTIVITY_ALLOW_BATTERY, 0);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3321888768;
    handler[2] = sub_1000347F0;
    handler[3] = &unk_1000F6AF8;
    handler[4] = a1;
    xpc_activity_register((const char *)[@"com.apple.safetyalerts.bc.xpcactivity" UTF8String], v8, handler);
  }

  return a1;
}

void sub_1000347A0(_Unwind_Exception *a1)
{
  *(void *)uint64_t v1 = v4;
  sub_100035AF0(v3);

  _Unwind_Resume(a1);
}

void sub_1000347F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(NSObject **)(v4 + 64);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  _DWORD v7[2] = sub_100035790;
  void v7[3] = &unk_1000F6B88;
  id v8 = v3;
  uint64_t v9 = v4;
  id v6 = v3;
  dispatch_async(v5, v7);
}

uint64_t sub_10003488C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 32) = *(void *)(a2 + 32);
  return result;
}

void sub_10003489C(IONotificationPortRef *a1)
{
  uint64_t v2 = (id *)SAPlatformInfo::instance((SAPlatformInfo *)a1);
  char v3 = sub_100035700(v2);
  uint64_t v4 = SALogObjectGeneral;
  BOOL v5 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      *(_DWORD *)double buf = 68289026;
      int v15 = 0;
      __int16 v16 = 2082;
      uint64_t v17 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SABatteryServiceProd,registering for battery status changed\"}", buf, 0x12u);
    }
    io_iterator_t notification = 0;
    id v6 = IONotificationPortCreate(kIOMainPortDefault);
    a1[5] = v6;
    if (v6)
    {
      RunLoopSource = IONotificationPortGetRunLoopSource(v6);
      if (RunLoopSource)
      {
        id v8 = RunLoopSource;
        RunLoop = (__CFRunLoop *)SACommonUtils::SACommonGetRunLoop(RunLoopSource);
        CFRunLoopAddSource(RunLoop, v8, kCFRunLoopDefaultMode);
        uint64_t v10 = a1[5];
        CFDictionaryRef v11 = IOServiceMatching("IOPMPowerSource");
        if (!IOServiceAddMatchingNotification(v10, "IOServiceFirstMatch", v11, (IOServiceMatchingCallback)sub_100035470, a1, &notification))
        {
          uint64_t v12 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)double buf = 68289026;
            int v15 = 0;
            __int16 v16 = 2082;
            uint64_t v17 = "";
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SABatteryServiceProd,read battery status\"}", buf, 0x12u);
          }
          sub_1000355BC((uint64_t)a1, notification);
        }
        IOObjectRelease(notification);
      }
      else
      {
        IONotificationPortDestroy(a1[5]);
        a1[5] = 0;
      }
    }
  }
  else if (v5)
  {
    *(_DWORD *)double buf = 68289026;
    int v15 = 0;
    __int16 v16 = 2082;
    uint64_t v17 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SABatteryServiceProd,no battery\"}", buf, 0x12u);
  }
}

uint64_t sub_100034ABC(uint64_t a1)
{
  *(void *)a1 = off_1000F6B60;
  sub_100035AF0((void *)(a1 + 8));
  return a1;
}

void sub_100034B0C(uint64_t a1)
{
  *(void *)a1 = off_1000F6B60;
  sub_100035AF0((void *)(a1 + 8));

  operator delete();
}

void sub_100034B7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = (std::__shared_weak_count *)a2[1];
  uint64_t v3 = *a2;
  uint64_t v4 = v2;
  if (v2) {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1000272B8(&v3);
  if (v4) {
    sub_100028F6C(v4);
  }
}

void sub_100034BCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_100028F6C(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_100034BE4(uint64_t a1, io_registry_entry_t entry)
{
  CFProperty = (void *)IORegistryEntryCreateCFProperty(entry, @"CurrentCapacity", kCFAllocatorDefault, 0);
  BOOL v5 = (void *)IORegistryEntryCreateCFProperty(entry, @"MaxCapacity", kCFAllocatorDefault, 0);
  id v6 = v5;
  if (CFProperty) {
    BOOL v7 = v5 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
    unsigned int v9 = [v5 intValue];
    int v10 = [CFProperty intValue];
    int v11 = v10;
    if (v9) {
      int v12 = v9;
    }
    else {
      int v12 = 100;
    }
    double v13 = fmin((float)v10 * 100.0 / (float)v12, 100.0);
    if (v13 >= 0.0) {
      double v14 = v13;
    }
    else {
      double v14 = 0.0;
    }
    int v15 = (void *)IORegistryEntryCreateCFProperty(entry, @"ExternalConnected", kCFAllocatorDefault, 0);
    __int16 v16 = v15;
    if (!v15)
    {
      double v22 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)double buf = 68289026;
        int v37 = 0;
        __int16 v38 = 2082;
        uint64_t v39 = "";
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SABatteryServiceProd,connected nil\"}", buf, 0x12u);
      }
      goto LABEL_51;
    }
    unsigned int v17 = [v15 BOOLValue];
    CFTypeRef v18 = IORegistryEntryCreateCFProperty(entry, @"AdapterDetails", kCFAllocatorDefault, 0);
    char v19 = SALogObjectGeneral;
    id v33 = (void *)v18;
    if (!v18)
    {
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)double buf = 68289026;
        int v37 = 0;
        __int16 v38 = 2082;
        uint64_t v39 = "";
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SABatteryServiceProd,adapterDetails nil\"}", buf, 0x12u);
      }
      goto LABEL_50;
    }
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)double buf = 68289283;
      int v37 = 0;
      __int16 v38 = 2082;
      uint64_t v39 = "";
      __int16 v40 = 2113;
      *(void *)uint64_t v41 = v33;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#SABatteryServiceProd,adapterDetails\", \"adapterDetails\":%{private, location:escape_only}@}", buf, 0x1Cu);
    }
    int v20 = [v33 objectForKeyedSubscript:@"Description"];
    BOOL v32 = v20;
    if (v20)
    {
      if ([v20 hasPrefix:@"batt"])
      {
        int v21 = 1;
      }
      else if ([v32 hasPrefix:@"usb"])
      {
        int v21 = 2;
      }
      else if ([v32 hasPrefix:@"external"])
      {
        int v21 = 3;
      }
      else if ([v32 hasSuffix:@"arcas"])
      {
        int v21 = 4;
      }
      else
      {
        int v21 = 0;
      }
      int v30 = v21;
    }
    else
    {
      int v30 = 0;
    }
    __int16 v31 = [v33 objectForKeyedSubscript:@"FamilyCode"];
    if (v31) {
      unsigned int v29 = 0;
    }
    else {
      unsigned int v29 = [0 intValue];
    }
    __int16 v23 = (void *)IORegistryEntryCreateCFProperty(entry, @"FullyCharged", kCFAllocatorDefault, 0);
    char v24 = v23;
    if (v23)
    {
      unsigned int v25 = [v23 BOOLValue];
    }
    else
    {
      uint64_t v26 = SALogObjectGeneral;
      unsigned int v25 = 0;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)double buf = 68289026;
        int v37 = 0;
        __int16 v38 = 2082;
        uint64_t v39 = "";
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SABatteryServiceProd,cannot find charged status\n\"}", buf, 0x12u);
        unsigned int v25 = 0;
      }
    }
    if (*(unsigned __int8 *)(a1 + 52) == v17)
    {
      __int16 v27 = SALogObjectGeneral;
      if (vabdd_f64(*(double *)(a1 + 56), v14) <= 10.0)
      {
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)double buf = 68290562;
          int v37 = 0;
          __int16 v38 = 2082;
          uint64_t v39 = "";
          __int16 v40 = 1026;
          *(_DWORD *)uint64_t v41 = (int)v14;
          *(_WORD *)&v41[4] = 1026;
          *(_DWORD *)&v41[6] = v25;
          __int16 v42 = 1026;
          unsigned int v43 = v17;
          __int16 v44 = 1026;
          int v45 = 0;
          __int16 v46 = 1026;
          int v47 = v11;
          __int16 v48 = 1026;
          int v49 = v12;
          _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#SABatteryServiceProd,batteryInfo\", \"level\":%{public}d, \"fullyCharged\":%{public}hhd, \"connected\":%{public}hhd, \"wasConnected\":%{public}hhd, \"currentCapacity\":%{public}d, \"maximumCapacity\":%{public}d}", buf, 0x36u);
        }
LABEL_49:

LABEL_50:
LABEL_51:

        goto LABEL_52;
      }
    }
    else
    {
      __int16 v27 = SALogObjectGeneral;
    }
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)double buf = 68290562;
      int v37 = 0;
      __int16 v38 = 2082;
      uint64_t v39 = "";
      __int16 v40 = 1026;
      *(_DWORD *)uint64_t v41 = (int)v14;
      *(_WORD *)&v41[4] = 1026;
      *(_DWORD *)&v41[6] = v25;
      __int16 v42 = 1026;
      unsigned int v43 = v17;
      __int16 v44 = 1026;
      int v45 = 0;
      __int16 v46 = 1026;
      int v47 = v11;
      __int16 v48 = 1026;
      int v49 = v12;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SABatteryServiceProd,batteryInfo\", \"level\":%{public}d, \"fullyCharged\":%{public}hhd, \"connected\":%{public}hhd, \"wasConnected\":%{public}hhd, \"currentCapacity\":%{public}d, \"maximumCapacity\":%{public}d}", buf, 0x36u);
    }
    *(unsigned char *)(a1 + 52) = v17;
    *(double *)(a1 + 56) = v14;
    double v28 = sub_100003318();
    *(_WORD *)((char *)v28 + 145) = v34;
    *((unsigned char *)v28 + 147) = v35;
    *((_DWORD *)v28 + 31) = v17 ^ 1;
    *((double *)v28 + 16) = v14;
    *((unsigned char *)v28 + 136) = v25;
    *((unsigned char *)v28 + 137) = v17;
    *((_DWORD *)v28 + 35) = v30;
    *((unsigned char *)v28 + 144) = 0;
    *((_DWORD *)v28 + 37) = v29;
    sub_1000352CC(a1 + 8, v17 ^ 1);
    goto LABEL_49;
  }
  id v8 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)double buf = 68289026;
    int v37 = 0;
    __int16 v38 = 2082;
    uint64_t v39 = "";
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#warning,#SABatteryServiceProd,cannot find current or maximum capacity\"}", buf, 0x12u);
  }
LABEL_52:
}

void sub_10003524C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1000352CC(uint64_t a1, int a2)
{
  int v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_100005520();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v2 + 48))(v2, &v4);
}

void sub_100035320(uint64_t a1, io_registry_entry_t a2, int a3)
{
  id v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    int v8 = 68289026;
    int v9 = 0;
    __int16 v10 = 2082;
    int v11 = "";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#SABatteryServiceProd,onSABatteryStateChange\"}", (uint8_t *)&v8, 0x12u);
  }
  if (a1)
  {
    if (a3 == -536723200) {
      sub_100034BE4(a1, a2);
    }
  }
  else
  {
    BOOL v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 68289026;
      int v9 = 0;
      __int16 v10 = 2082;
      int v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SABatteryServiceProd,pthis is null\"}", (uint8_t *)&v8, 0x12u);
    }
  }
}

void sub_100035470(uint64_t a1, io_iterator_t a2)
{
  BOOL v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 68289026;
    int v8 = 0;
    __int16 v9 = 2082;
    __int16 v10 = "";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SABatteryServiceProd,onMatchedBatteryStatusCb\"}", (uint8_t *)&v7, 0x12u);
  }
  if (a1)
  {
    sub_1000355BC(a1, a2);
  }
  else
  {
    id v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 68289026;
      int v8 = 0;
      __int16 v9 = 2082;
      __int16 v10 = "";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SABatteryServiceProd,pthis is null\"}", (uint8_t *)&v7, 0x12u);
    }
  }
}

uint64_t sub_1000355BC(uint64_t a1, io_iterator_t a2)
{
  int v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 68289026;
    v7[1] = 0;
    __int16 v8 = 2082;
    __int16 v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SABatteryServiceProd,onMatchedBatteryStatus\"}", (uint8_t *)v7, 0x12u);
  }
  IONotificationPortSetDispatchQueue(*(IONotificationPortRef *)(a1 + 40), *(dispatch_queue_t *)(a1 + 64));
  uint64_t result = IOIteratorNext(a2);
  if (result)
  {
    io_registry_entry_t v6 = result;
    do
    {
      if (!IOServiceAddInterestNotification(*(IONotificationPortRef *)(a1 + 40), v6, "IOGeneralInterest", (IOServiceInterestCallback)sub_100035320, (void *)a1, (io_object_t *)(a1 + 48)))sub_100034BE4(a1, v6); {
      IOObjectRelease(v6);
      }
      uint64_t result = IOIteratorNext(a2);
      io_registry_entry_t v6 = result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_100035700(id *a1)
{
  if (([*a1 isEqualToString:@"iPad"] & 1) != 0
    || ([*a1 isEqualToString:@"Watch"] & 1) != 0
    || ([*a1 isEqualToString:@"iPhone"] & 1) != 0)
  {
    return 1;
  }
  id v3 = *a1;

  return (uint64_t)[v3 isEqualToString:@"Mac"];
}

void sub_100035790(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10003584C;
  v4[3] = &unk_1000F6B88;
  uint64_t v6 = v2;
  id v5 = *(id *)(a1 + 32);
  sub_10003584C((uint64_t)v4);
}

void sub_100035838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_10003584C(uint64_t a1)
{
  uint64_t v1 = (_xpc_activity_s *)*(id *)(a1 + 32);
  uint64_t v2 = v1;
  if (v1)
  {
    xpc_activity_state_t state = xpc_activity_get_state(v1);
    int v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 68289026;
      int v8 = 0;
      __int16 v9 = 2082;
      __int16 v10 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SABatteryServiceProd,process_xpcActivity\"}", (uint8_t *)&v7, 0x12u);
    }
    if (state)
    {
      if (state == 2)
      {
        if (!xpc_activity_set_state(v2, 5))
        {
          id v5 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            int v7 = 68289026;
            int v8 = 0;
            __int16 v9 = 2082;
            __int16 v10 = "";
            uint64_t v6 = "{\"msg%{public}.0s\":\"#SABatteryServiceProd,failedToSetState\"}";
LABEL_13:
            _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, v6, (uint8_t *)&v7, 0x12u);
          }
        }
      }
      else
      {
        id v5 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          int v7 = 68289026;
          int v8 = 0;
          __int16 v9 = 2082;
          __int16 v10 = "";
          uint64_t v6 = "{\"msg%{public}.0s\":\"#SABatteryServiceProd,unexpectedXpcActivity\"}";
          goto LABEL_13;
        }
      }
    }
  }
  else
  {
    id v5 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 68289026;
      int v8 = 0;
      __int16 v9 = 2082;
      __int16 v10 = "";
      uint64_t v6 = "{\"msg%{public}.0s\":\"#SABatteryServiceProd,activity is nil\"}";
      goto LABEL_13;
    }
  }
}

void sub_100035A40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100035A58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_100035AF0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_100035B80()
{
  return 0;
}

uint64_t sub_100035B88()
{
  return 0;
}

uint64_t sub_100035B90()
{
  return 0;
}

uint64_t sub_100035B98()
{
  return 0;
}

uint64_t sub_100035BA0()
{
  return 0;
}

uint64_t sub_100035BA8()
{
  return 0;
}

uint64_t sub_100035BB0()
{
  return 0;
}

void *sub_100035BB8@<X0>(void *a1@<X8>)
{
  return sub_10000DD48(a1, "NotAvailable");
}

uint64_t sub_100035BC8()
{
  return 0xFFFFFFFFLL;
}

void *sub_100035BD0@<X0>(void *a1@<X8>)
{
  return sub_10000DD48(a1, "Unknown");
}

uint64_t sub_100035BE0()
{
  return 0xFFFFFFFFLL;
}

void *sub_100035BE8@<X0>(void *a1@<X8>)
{
  return sub_10000DD48(a1, "Unknown");
}

double sub_100035BF8()
{
  return -1.0;
}

void *sub_100035C00@<X0>(void *a1@<X8>)
{
  return sub_10000DD48(a1, "Unknown");
}

uint64_t sub_100035C10(uint64_t a1)
{
  return a1;
}

void sub_100035C3C(uint64_t a1)
{
  operator delete();
}

void sub_100035C88(void *a1, void *a2, uint64_t *a3)
{
  id v5 = a1;
  id v6 = a2;
  memset(&__p, 0, sizeof(__p));
  if (SACommonUtils::getStringFromDictionary(v5, (uint64_t)v6, &__p))
  {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if (size)
    {
      unint64_t v8 = a3[1];
      if (v8 >= a3[2])
      {
        uint64_t v10 = sub_100004F4C(a3, (long long *)&__p);
      }
      else
      {
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        {
          sub_100004CB8((unsigned char *)a3[1], __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
        }
        else
        {
          long long v9 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *(void *)(v8 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
          *(_OWORD *)unint64_t v8 = v9;
        }
        uint64_t v10 = v8 + 24;
        a3[1] = v8 + 24;
      }
      a3[1] = v10;
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_100035D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  *(void *)(v17 + 8) = v18;
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_100035D9C(void *a1)
{
  uint64_t result = a1[26];
  if (!result)
  {
    uint64_t v3 = a1[20];
    if (a1[21] == v3)
    {
      uint64_t v8 = a1[23];
      if (a1[24] == v8) {
        return a1[26];
      }
      unint64_t v9 = sub_100036240((uint64_t)&v11, v8);
      a1[26] = v9;
      id v5 = SALogObjectGeneral;
      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
        return a1[26];
      }
      uint64_t v10 = (uint64_t *)a1[23];
      if (*((char *)v10 + 23) < 0) {
        uint64_t v10 = (uint64_t *)*v10;
      }
      int v11 = 68289539;
      int v12 = 0;
      __int16 v13 = 2082;
      double v14 = "";
      __int16 v15 = 2049;
      unint64_t v16 = v9;
      __int16 v17 = 2081;
      uint64_t v18 = v10;
      int v7 = "{\"msg%{public}.0s\":\"#saanalytics,hashID created using wea\", \"alertTextID\":%{private}ld, \"alertText\":%"
           "{private, location:escape_only}s}";
    }
    else
    {
      unint64_t v4 = sub_100036240((uint64_t)&v11, v3);
      a1[26] = v4;
      id v5 = SALogObjectGeneral;
      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
        return a1[26];
      }
      id v6 = (uint64_t *)a1[20];
      if (*((char *)v6 + 23) < 0) {
        id v6 = (uint64_t *)*v6;
      }
      int v11 = 68289539;
      int v12 = 0;
      __int16 v13 = 2082;
      double v14 = "";
      __int16 v15 = 2049;
      unint64_t v16 = v4;
      __int16 v17 = 2081;
      uint64_t v18 = v6;
      int v7 = "{\"msg%{public}.0s\":\"#saanalytics,hashID created using sa\", \"alertTextID\":%{private}ld, \"alertText\":%{"
           "private, location:escape_only}s}";
    }
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, v7, (uint8_t *)&v11, 0x26u);
    return a1[26];
  }
  return result;
}

void sub_100035F44(uint64_t a1)
{
  double v2 = *(double *)(a1 + 40);
  double v3 = *(double *)(a1 + 56);
  if (v2 > 0.0 && v3 >= 0.0) {
    *(double *)(a1 + 32) = vabdd_f64(v3, v2) * 1000.0;
  }
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  if (v3 >= 0.0)
  {
    double v4 = *(double *)(a1 + 112);
    if (v4 >= 0.0)
    {
      *(double *)(a1 + 96) = (v3 - v4) * 1000.0;
      *(unsigned char *)(a1 + 24) = v4 < v3;
    }
    double v5 = *(double *)(a1 + 312);
    if (v5 >= 0.0) {
      *(double *)(a1 + 336) = (v3 - v5) * 1000.0;
    }
  }
  id v6 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v7 = *(double *)(a1 + 56) >= 0.0;
    BOOL v8 = *(double *)(a1 + 112) >= 0.0;
    uint64_t v10 = *(void *)(a1 + 32);
    uint64_t v9 = *(void *)(a1 + 40);
    uint64_t v11 = *(void *)(a1 + 96);
    v12[0] = 68290563;
    v12[1] = 0;
    __int16 v13 = 2082;
    double v14 = "";
    __int16 v15 = 2050;
    uint64_t v16 = v9;
    __int16 v17 = 1026;
    BOOL v18 = v7;
    __int16 v19 = 1026;
    BOOL v20 = v8;
    __int16 v21 = 2050;
    uint64_t v22 = v10;
    __int16 v23 = 2050;
    uint64_t v24 = v11;
    __int16 v25 = 2049;
    uint64_t v26 = sub_100035D9C((void *)a1);
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,computeWEAAndSALatency\", \"originationTime\":\"%{public}0.2f\", \"weaReceptionTimeIsGood\":%{public}d, \"saReceptionTimeIsGood\":%{public}d, \"weaReceptionLatency\":\"%{public}0.2f\", \"delayBetweenWEAAndSA\":\"%{public}0.2f\", \"alertTextID\":%{private}ld}", (uint8_t *)v12, 0x46u);
  }
}

uint64_t sub_100036108(uint64_t a1)
{
  *(void *)(a1 + 16) = v3;
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  std::ios::~ios();
  return a1;
}

unint64_t sub_100036240(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v3 = v2;
  }
  return sub_10003D1A0((uint64_t)&v5, (uint64_t *)a2, v3);
}

void sub_100036280(uint64_t a1, void *a2)
{
  *(void *)a1 = a2;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0xFFFFFFFF00000000;
  *(void *)(a1 + 64) = "kAny";
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(void *)(a1 + 120) = 0;
  *(_DWORD *)(a1 + 128) = 1065353216;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 160) = _Q0;
  *(_DWORD *)(a1 + 176) = 0;
  *(unsigned char *)(a1 + 184) = 0;
  uint64_t v8 = mach_continuous_time();
  *(double *)(a1 + 160) = sub_100087FDC(v8);
  *(void *)(a1 + 168) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 176) = -1;
  uint64_t v9 = SALogObjectGeneral;
  BOOL v10 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v10)
  {
    *(_DWORD *)double buf = 68289026;
    int v14 = 0;
    __int16 v15 = 2082;
    uint64_t v16 = "";
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,constructor call,object created\"}", buf, 0x12u);
  }
  uint64_t v11 = SASettings::instance((SASettings *)v10);
  v12[0] = off_1000F6CA8;
  void v12[3] = v12;
  (*(void (**)(uint64_t, void *))(*(void *)v11 + 16))(v11, v12);
  sub_10000F6D4(v12);
  operator new();
}

void sub_100036528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_10003CB54(v9, 0);
  sub_10003D694(v8, 0);
  sub_10003CC84(v7, 0);
  sub_10003D60C(v5 + 96);
  sub_10003CEB8((void ***)va);
  if (*(char *)(v5 + 31) < 0) {
    operator delete(*v10);
  }

  _Unwind_Resume(a1);
}

void sub_1000365E0(uint64_t a1)
{
  unint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)double buf = 68289026;
    int v26 = 0;
    __int16 v27 = 2082;
    double v28 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,initRollingMetric\"}", buf, 0x12u);
  }
  unint64_t v3 = sub_10006B474();
  sub_10006CBB8((uint64_t)v3, &v21);
  double v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)double buf = 68289282;
    int v26 = 0;
    __int16 v27 = 2082;
    double v28 = "";
    __int16 v29 = 1026;
    int v30 = LOBYTE(v21);
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,initRollingMetric\", \"rmSupported\":%{public}d}", buf, 0x18u);
  }
  int v5 = LOBYTE(v21);
  if (LOBYTE(v21) && (double v6 = v22, v22 > 0.0) && (v7 = v23, v23 >= 0.0) && (v11 = v24, v24 >= 0.0) && v22 > v23 + v24)
  {
    int v12 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_33;
    }
    *(_DWORD *)double buf = 68290050;
    __int16 v27 = 2082;
    int v26 = 0;
    double v28 = "";
    __int16 v29 = 1026;
    int v30 = v5;
    __int16 v31 = 2050;
    unint64_t v32 = (unint64_t)v6;
    __int16 v33 = 1026;
    int v34 = (int)v11;
    __int16 v35 = 1026;
    int v36 = (int)v7;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,initRollingMetric\", \"rmSupported\":%{public}d, \"rollingPeriodSeconds\":%{public}lu, \"randomDelaySeconds\":%{public}d, \"fixedDelay\":%{public}d}", buf, 0x2Eu);
    if (LOBYTE(v21))
    {
LABEL_33:
      if (!*(void *)(a1 + 136)) {
        operator new();
      }
    }
    uint64_t v13 = *(void *)(a1 + 136);
    if (v13)
    {
      sub_10005CA18(v13, (uint64_t)&v21);
      uint64_t v14 = *(void *)(a1 + 136);
      int v15 = *(unsigned __int8 *)(a1 + 50);
      *(unsigned char *)(v14 + 2040) = v15;
      if (v15)
      {
        sub_1000562A0((unsigned char *)(v14 + 112));
        uint64_t v14 = *(void *)(a1 + 136);
      }
      sub_10005448C(v14 + 112, *(unsigned __int8 *)(a1 + 184));
      uint64_t v16 = *(void **)(a1 + 136);
      int v17 = *(_DWORD *)(a1 + 52);
      int v18 = *(_DWORD *)(a1 + 56);
      uint64_t v19 = v16[5];
      if (v19)
      {
        *(_DWORD *)(v19 + 444) = v17;
        *(_DWORD *)(v19 + 448) = v18;
      }
      if (v16[6])
      {
        sub_100061AFC(v16[6], v17, v18);
        uint64_t v16 = *(void **)(a1 + 136);
      }
      sub_10005C8B0(v16, *(unsigned __int8 *)(a1 + 40));
      if (*(unsigned char *)(a1 + 45) && *(unsigned char *)(a1 + 48))
      {
        sub_100053F44(*(void *)(a1 + 136) + 112, *(unsigned __int8 *)(a1 + 43));
        sub_10005484C(*(void *)(a1 + 136) + 112, *(_DWORD *)(a1 + 32) > 0);
        sub_10005C9AC(*(void *)(a1 + 136), *(_DWORD *)(a1 + 36) > 0);
        sub_10005CB18(*(void *)(a1 + 136), *(unsigned __int8 *)(a1 + 49));
      }
    }
    else
    {
      BOOL v20 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)double buf = 68289026;
        int v26 = 0;
        __int16 v27 = 2082;
        double v28 = "";
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saanalytics,initRollingMetric,failed\"}", buf, 0x12u);
      }
    }
  }
  else
  {
    uint64_t v9 = *(void *)(a1 + 136);
    uint64_t v8 = (uint64_t *)(a1 + 136);
    if (v9)
    {
      BOOL v10 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)double buf = 68289026;
        int v26 = 0;
        __int16 v27 = 2082;
        double v28 = "";
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,initRollingMetric,MA disabled RM\"}", buf, 0x12u);
      }
      sub_10003CC84(v8, 0);
    }
  }
}

void sub_1000369D8()
{
}

uint64_t sub_100036A04(uint64_t a1)
{
  unint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = 68289026;
    __int16 v7 = 2082;
    uint64_t v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,destructor call,object destroyed\"}", (uint8_t *)&v6, 0x12u);
  }
  unint64_t v3 = *(uint64_t **)(a1 + 72);
  double v4 = *(uint64_t **)(a1 + 80);
  while (v3 != v4)
  {
    sub_100036B50(a1, v3, 1);
    v3 += 55;
  }
  sub_10003CB54((uint64_t *)(a1 + 152), 0);
  sub_10003D694((uint64_t *)(a1 + 144), 0);
  sub_10003CC84((uint64_t *)(a1 + 136), 0);
  sub_10003D60C(a1 + 96);
  uint64_t v6 = a1 + 72;
  sub_10003CEB8((void ***)&v6);
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }

  return a1;
}

void sub_100036B44(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100004CA4(a1);
}

void sub_100036B50(uint64_t a1, uint64_t *a2, int a3)
{
  if (!a2)
  {
    uint64_t v11 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      return;
    }
    *(_DWORD *)double buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v100 = 2082;
    __int16 v101 = "";
    int v12 = "{\"msg%{public}.0s\":\"#saanalytics,submitOnAlert,alertMetric is nullptr\"}";
    uint64_t v13 = v11;
    os_log_type_t v14 = OS_LOG_TYPE_ERROR;
    uint32_t v15 = 18;
    goto LABEL_10;
  }
  uint64_t v6 = (void *)sub_100035D9C(a2);
  if (a3)
  {
    int v7 = *((unsigned __int8 *)a2 + 25);
    int v8 = *((unsigned __int8 *)a2 + 26);
    goto LABEL_4;
  }
  int v16 = *((unsigned __int8 *)a2 + 26);
  if (*((unsigned char *)a2 + 26) && *((unsigned char *)a2 + 25) && *((unsigned char *)a2 + 27))
  {
    int v8 = 1;
    int v7 = 1;
LABEL_4:
    memset(v108, 0, 15);
    if (*((unsigned char *)a2 + 376))
    {
      if (v7)
      {
        if (v8)
        {
          qmemcpy(v108, "WEA", 3);
          char v9 = 11;
          uint64_t v10 = 0x5F73756F656E0000;
        }
        else
        {
          char v9 = 7;
          uint64_t v10 = 0x73756F656E0000;
        }
        uint64_t v24 = 26441;
        goto LABEL_36;
      }
    }
    else if (v7)
    {
      if (v8) {
        uint64_t v10 = 0x4145575F0000;
      }
      else {
        uint64_t v10 = 0;
      }
      if (v8) {
        char v9 = 6;
      }
      else {
        char v9 = 2;
      }
      uint64_t v24 = 16723;
      goto LABEL_36;
    }
    if (v8)
    {
      char v9 = 8;
      uint64_t v10 = 0x796C6E6F5F410000;
      uint64_t v24 = 17751;
    }
    else
    {
      char v9 = 7;
      uint64_t v10 = 0x64696C61760000;
      uint64_t v24 = 28233;
    }
LABEL_36:
    v96[0] = 0;
    v96[1] = 0;
    uint64_t v97 = 0;
    sub_1000496F0(a2 + 37, (uint64_t *)v96);
    uint64_t v27 = mach_continuous_time();
    sub_100087FDC(v27);
    if (SHIBYTE(v97) < 0)
    {
      sub_100004CB8(&v91, v96[0], (unint64_t)v96[1]);
    }
    else
    {
      long long v91 = *(_OWORD *)v96;
      uint64_t v92 = v97;
    }
    unint64_t v93 = (void *)(v24 | v10);
    *(void *)double v94 = v108[0];
    *(void *)&v94[7] = *(void *)((char *)v108 + 7);
    char v95 = v9;
    AnalyticsSendEventLazy();
    double v28 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v29 = *((unsigned __int8 *)a2 + 26);
      int v30 = *((unsigned __int8 *)a2 + 25);
      int v31 = 1483715975 * ((*(void *)(a1 + 80) - *(void *)(a1 + 72)) >> 3);
      uint64_t v32 = *(void *)(a1 + 120);
      *(_DWORD *)double buf = 68290563;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v100 = 2082;
      __int16 v101 = "";
      __int16 v102 = 1026;
      int v103 = a3;
      __int16 v104 = 1026;
      *(_DWORD *)double v105 = v29;
      *(_WORD *)&v105[4] = 1026;
      *(_DWORD *)&v105[6] = v30;
      *(_WORD *)&v105[10] = 1026;
      *(_DWORD *)&v105[12] = v31;
      *(_WORD *)&v105[16] = 1026;
      *(_DWORD *)&v105[18] = v32;
      __int16 v106 = 2049;
      double v107 = v6;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,metric submitted\", \"forceSubmission\":%{public}d, \"isWEAReceived\":%{public}d, \"isSAReceived\":%{public}d, \"alertMetricVectorSize\":%{public}d, \"submissionTimerMapSize\":%{public}d, \"alertTextID\":%{private}ld}", buf, 0x3Au);
    }
    unint64_t v33 = sub_100035D9C(a2);
    __p[0] = (void *)v33;
    int v34 = (uint64_t *)(a1 + 96);
    if (!sub_10003D85C((void *)(a1 + 96), v33)) {
      goto LABEL_94;
    }
    uint64_t v35 = *(void *)(a1 + 120);
    int v36 = sub_10003D90C((uint64_t *)(a1 + 96), v33, __p);
    (*(void (**)(void))(*(void *)v36[3] + 40))(v36[3]);
    int v37 = sub_10003D90C((uint64_t *)(a1 + 96), v33, __p);
    uint64_t v38 = v37[3];
    void v37[3] = 0;
    if (v38) {
      (*(void (**)(uint64_t))(*(void *)v38 + 8))(v38);
    }
    int8x8_t v39 = *(int8x8_t *)(a1 + 104);
    if (!*(void *)&v39) {
      goto LABEL_92;
    }
    uint8x8_t v40 = (uint8x8_t)vcnt_s8(v39);
    v40.i16[0] = vaddlv_u8(v40);
    if (v40.u32[0] > 1uLL)
    {
      unint64_t v41 = v33;
      if (*(void *)&v39 <= v33) {
        unint64_t v41 = v33 % *(void *)&v39;
      }
    }
    else
    {
      unint64_t v41 = (*(void *)&v39 - 1) & v33;
    }
    uint64_t v42 = *v34;
    unsigned int v43 = *(void ***)(*v34 + 8 * v41);
    if (!v43) {
      goto LABEL_92;
    }
    __int16 v44 = *v43;
    if (!*v43) {
      goto LABEL_92;
    }
    uint64_t v45 = *(void *)&v39 - 1;
    while (1)
    {
      unint64_t v46 = v44[1];
      if (v46 == v33)
      {
        if (v44[2] == v33)
        {
          int v47 = (void *)*v44;
          if (v40.u32[0] > 1uLL)
          {
            unint64_t v48 = v33;
            if (v33 >= *(void *)&v39) {
              unint64_t v48 = v33 % *(void *)&v39;
            }
          }
          else
          {
            unint64_t v48 = v45 & v33;
          }
          long long v50 = *(void **)(v42 + 8 * v48);
          do
          {
            long long v51 = v50;
            long long v50 = (void *)*v50;
          }
          while (v50 != v44);
          if (v51 == (void *)(a1 + 112)) {
            goto LABEL_81;
          }
          unint64_t v52 = v51[1];
          if (v40.u32[0] > 1uLL)
          {
            if (v52 >= *(void *)&v39) {
              v52 %= *(void *)&v39;
            }
          }
          else
          {
            v52 &= v45;
          }
          if (v52 == v48)
          {
LABEL_83:
            if (v47)
            {
              unint64_t v53 = v47[1];
              goto LABEL_85;
            }
          }
          else
          {
LABEL_81:
            if (!v47) {
              goto LABEL_82;
            }
            unint64_t v53 = v47[1];
            if (v40.u32[0] > 1uLL)
            {
              unint64_t v54 = v47[1];
              if (v53 >= *(void *)&v39) {
                unint64_t v54 = v53 % *(void *)&v39;
              }
            }
            else
            {
              unint64_t v54 = v53 & v45;
            }
            if (v54 != v48)
            {
LABEL_82:
              *(void *)(v42 + 8 * v48) = 0;
              int v47 = (void *)*v44;
              goto LABEL_83;
            }
LABEL_85:
            if (v40.u32[0] > 1uLL)
            {
              if (v53 >= *(void *)&v39) {
                v53 %= *(void *)&v39;
              }
            }
            else
            {
              v53 &= v45;
            }
            if (v53 != v48)
            {
              *(void *)(*v34 + 8 * v53) = v51;
              int v47 = (void *)*v44;
            }
          }
          *long long v51 = v47;
          void *v44 = 0;
          --*(void *)(a1 + 120);
          sub_10003DD00(1, v44);
LABEL_92:
          long long v55 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v56 = *(void *)(a1 + 120);
            *(_DWORD *)double buf = 68289795;
            *(_DWORD *)&uint8_t buf[4] = 0;
            __int16 v100 = 2082;
            __int16 v101 = "";
            __int16 v102 = 1026;
            int v103 = v35;
            __int16 v104 = 1026;
            *(_DWORD *)double v105 = v56;
            *(_WORD *)&v105[4] = 2049;
            *(void *)&v105[6] = v33;
            _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,alert submission timer erased\", \"submissionTimerMapSizeBefore\":%{public}d, \"submissionTimerMapSizeAfter\":%{public}d, \"alertTextID\":%{private}ld}", buf, 0x28u);
          }
LABEL_94:
          uint64_t v57 = *(void *)(a1 + 72);
          uint64_t i = *(void *)(a1 + 80);
          if (i != v57)
          {
            int v59 = 1483715975 * ((unint64_t)(i - v57) >> 3);
            for (uint64_t i = *(void *)(a1 + 72); i != *(void *)(a1 + 80); i += 440)
            {
              if (sub_100035D9C((void *)i) == v33)
              {
                uint64_t v60 = *(unsigned __int8 *)(i + 23);
                if ((v60 & 0x80u) == 0) {
                  uint64_t v61 = *(unsigned __int8 *)(i + 23);
                }
                else {
                  uint64_t v61 = *(void *)(i + 8);
                }
                uint64_t v62 = *((unsigned __int8 *)a2 + 23);
                int v63 = (char)v62;
                if ((v62 & 0x80u) != 0) {
                  uint64_t v62 = a2[1];
                }
                if (v61 == v62)
                {
                  if (v63 >= 0) {
                    uint64_t v64 = (unsigned __int8 *)a2;
                  }
                  else {
                    uint64_t v64 = (unsigned __int8 *)*a2;
                  }
                  if ((v60 & 0x80) != 0)
                  {
                    if (!memcmp(*(const void **)i, v64, *(void *)(i + 8)))
                    {
LABEL_116:
                      uint64_t v71 = i + 440;
                      uint64_t v72 = *(void *)(a1 + 80);
                      if (i + 440 != v72)
                      {
                        do
                        {
                          if (*(char *)(i + 23) < 0) {
                            operator delete(*(void **)i);
                          }
                          *(_OWORD *)uint64_t i = *(_OWORD *)(i + 440);
                          long long v73 = *(_OWORD *)(i + 544);
                          *(_OWORD *)(i + 88) = *(_OWORD *)(i + 528);
                          *(_OWORD *)(i + 104) = v73;
                          long long v74 = *(_OWORD *)(i + 576);
                          *(_OWORD *)(i + 120) = *(_OWORD *)(i + 560);
                          *(_OWORD *)(i + 136) = v74;
                          long long v75 = *(_OWORD *)(i + 480);
                          *(_OWORD *)(i + 24) = *(_OWORD *)(i + 464);
                          *(_OWORD *)(i + 40) = v75;
                          long long v76 = *(_OWORD *)(i + 512);
                          *(_OWORD *)(i + 56) = *(_OWORD *)(i + 496);
                          *(void *)(i + 16) = *(void *)(i + 456);
                          *(unsigned char *)(i + 463) = 0;
                          *(unsigned char *)(i + 440) = 0;
                          *(_OWORD *)(i + 72) = v76;
                          uint64_t v77 = *(void *)(i + 592);
                          *(void *)(i + 592) = 0;
                          uint64_t v78 = *(void *)(i + 152);
                          *(void *)(i + 152) = v77;
                          if (v78) {
                            (*(void (**)(uint64_t, unsigned __int8 *))(*(void *)v78 + 8))(v78, v64);
                          }
                          sub_100032A84((uint64_t *)(i + 160));
                          *(_OWORD *)(i + 160) = *(_OWORD *)(i + 600);
                          *(void *)(i + 176) = *(void *)(i + 616);
                          *(void *)(i + 616) = 0;
                          *(_OWORD *)(i + 600) = 0u;
                          sub_100032A84((uint64_t *)(i + 184));
                          *(_OWORD *)(i + 184) = *(_OWORD *)(i + 624);
                          *(void *)(i + 200) = *(void *)(i + 640);
                          *(void *)(i + 640) = 0;
                          *(_OWORD *)(i + 624) = 0u;
                          long long v79 = *(_OWORD *)(i + 824);
                          *(_OWORD *)(i + 368) = *(_OWORD *)(i + 808);
                          *(_OWORD *)(i + 384) = v79;
                          *(_OWORD *)(i + 400) = *(_OWORD *)(i + 840);
                          long long v80 = *(_OWORD *)(i + 760);
                          *(_OWORD *)(i + 304) = *(_OWORD *)(i + 744);
                          *(_OWORD *)(i + 320) = v80;
                          long long v81 = *(_OWORD *)(i + 792);
                          *(_OWORD *)(i + 336) = *(_OWORD *)(i + 776);
                          *(_OWORD *)(i + 352) = v81;
                          long long v82 = *(_OWORD *)(i + 696);
                          *(_OWORD *)(i + 240) = *(_OWORD *)(i + 680);
                          *(_OWORD *)(i + 256) = v82;
                          long long v83 = *(_OWORD *)(i + 728);
                          *(_OWORD *)(i + 272) = *(_OWORD *)(i + 712);
                          *(_OWORD *)(i + 288) = v83;
                          long long v84 = *(_OWORD *)(i + 664);
                          *(_OWORD *)(i + 208) = *(_OWORD *)(i + 648);
                          *(_OWORD *)(i + 224) = v84;
                          char v85 = (void **)(i + 416);
                          if (*(char *)(i + 439) < 0) {
                            operator delete(*v85);
                          }
                          *(void *)(i + 432) = *(void *)(i + 872);
                          *(_OWORD *)char v85 = *(_OWORD *)(i + 856);
                          *(unsigned char *)(i + 879) = 0;
                          *(unsigned char *)(i + 856) = 0;
                          uint64_t v86 = i + 440;
                          uint64_t v87 = i + 880;
                          i += 440;
                        }
                        while (v87 != v72);
                        uint64_t v71 = *(void *)(a1 + 80);
                        uint64_t i = v86;
                      }
                      while (v71 != i)
                      {
                        v71 -= 440;
                        sub_10003CF3C(v71);
                      }
                      *(void *)(a1 + 80) = i;
                      uint64_t v88 = SALogObjectGeneral;
                      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                      {
                        int v89 = 1483715975 * ((unint64_t)(i - *(void *)(a1 + 72)) >> 3);
                        uint64_t v90 = *(void *)(a1 + 120);
                        *(_DWORD *)double buf = 68290051;
                        __int16 v100 = 2082;
                        *(_DWORD *)&uint8_t buf[4] = 0;
                        __int16 v101 = "";
                        __int16 v102 = 1026;
                        int v103 = v59;
                        __int16 v104 = 1026;
                        *(_DWORD *)double v105 = v89;
                        *(_WORD *)&v105[4] = 2049;
                        *(void **)&v105[6] = __p[0];
                        *(_WORD *)&v105[14] = 1026;
                        *(_DWORD *)&v105[16] = v90;
                        uint64_t v68 = "{\"msg%{public}.0s\":\"#saanalytics,metric erased\", \"alertMetricVectorSizeBefore\":%{pub"
                              "lic}d, \"alertMetricVectorSizeAfter\":%{public}d, \"alertTextID\":%{private}ld, \"alertSub"
                              "missionTimerMapSize\":%{public}d}";
                        uint64_t v69 = v88;
                        uint32_t v70 = 46;
LABEL_129:
                        _os_log_impl((void *)&_mh_execute_header, v69, OS_LOG_TYPE_DEFAULT, v68, buf, v70);
                      }
                      goto LABEL_130;
                    }
                  }
                  else
                  {
                    if (!*(unsigned char *)(i + 23)) {
                      goto LABEL_116;
                    }
                    uint64_t v65 = 0;
                    while (*(unsigned __int8 *)(i + v65) == v64[v65])
                    {
                      if (v60 == ++v65) {
                        goto LABEL_116;
                      }
                    }
                  }
                }
              }
            }
          }
          uint64_t v66 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            int v67 = 1483715975 * ((unint64_t)(i - *(void *)(a1 + 72)) >> 3);
            *(_DWORD *)double buf = 68289539;
            *(_DWORD *)&uint8_t buf[4] = 0;
            __int16 v100 = 2082;
            __int16 v101 = "";
            __int16 v102 = 1026;
            int v103 = v67;
            __int16 v104 = 2049;
            *(void *)double v105 = v33;
            uint64_t v68 = "{\"msg%{public}.0s\":\"#saanalytics,unable to erase metric\", \"alertMetricVectorSize\":%{public}d, \""
                  "alertTextID\":%{private}lu}";
            uint64_t v69 = v66;
            uint32_t v70 = 34;
            goto LABEL_129;
          }
LABEL_130:
          if (v95 < 0) {
            operator delete(v93);
          }
          if (SHIBYTE(v92) < 0) {
            operator delete((void *)v91);
          }
          if (SHIBYTE(v97) < 0) {
            operator delete(v96[0]);
          }
          return;
        }
      }
      else
      {
        if (v40.u32[0] > 1uLL)
        {
          if (v46 >= *(void *)&v39) {
            v46 %= *(void *)&v39;
          }
        }
        else
        {
          v46 &= v45;
        }
        if (v46 != v41) {
          goto LABEL_92;
        }
      }
      __int16 v44 = (void *)*v44;
      if (!v44) {
        goto LABEL_92;
      }
    }
  }
  int v17 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v18 = *((unsigned __int8 *)a2 + 25);
    *(_DWORD *)double buf = 68290051;
    __int16 v100 = 2082;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v101 = "";
    __int16 v102 = 1026;
    int v103 = 0;
    __int16 v104 = 1026;
    *(_DWORD *)double v105 = v16;
    *(_WORD *)&v105[4] = 1026;
    *(_DWORD *)&v105[6] = v18;
    *(_WORD *)&v105[10] = 2049;
    *(void *)&v105[12] = v6;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,submitOnAlert\", \"forceSubmission\":%{public}d, \"isWEAReceived\":%{public}d, \"isSAReceived\":%{public}d, \"alertTextID\":%{private}ld}", buf, 0x2Eu);
  }
  void __p[3] = v6;
  if (sub_10003D85C((void *)(a1 + 96), (unint64_t)v6))
  {
    uint64_t v19 = (void *)SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v20 = *((unsigned __int8 *)a2 + 26);
      int v21 = *((unsigned __int8 *)a2 + 25);
      double v22 = v19;
      uint64_t v23 = sub_100035D9C(a2);
      *(_DWORD *)double buf = 68289795;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v100 = 2082;
      __int16 v101 = "";
      __int16 v102 = 1026;
      int v103 = v20;
      __int16 v104 = 1026;
      *(_DWORD *)double v105 = v21;
      *(_WORD *)&v105[4] = 2049;
      *(void *)&v105[6] = v23;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,submission timer already created\", \"isWEAReceived\":%{public}d, \"isSAReceived\":%{public}d, \"alertTextID\":%{private}ld}", buf, 0x28u);
    }
    return;
  }
  if ((*((_DWORD *)sub_10006B474() + 30) & 0x80000000) == 0
    || (int v25 = (int)*((double *)sub_10003E368() + 5), (v25 & 0x80000000) == 0))
  {
    int v26 = *(void **)a1;
    sub_10000DD48(__p, "AlertMetricSubmission");
    SATimer::create(v26);
  }
  uint64_t v49 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)double buf = 68289282;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v100 = 2082;
    __int16 v101 = "";
    __int16 v102 = 1026;
    int v103 = v25;
    int v12 = "{\"msg%{public}.0s\":\"#saanalytics,#warning,invalidDuration\", \"durationSeconds\":%{public}d}";
    uint64_t v13 = v49;
    os_log_type_t v14 = OS_LOG_TYPE_DEFAULT;
    uint32_t v15 = 24;
LABEL_10:
    _os_log_impl((void *)&_mh_execute_header, v13, v14, v12, buf, v15);
  }
}

void sub_1000378F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43)
{
  sub_10000F6D4((void *)(v43 - 120));
  _Unwind_Resume(a1);
}

uint64_t sub_1000379A0(void *a1, char **a2)
{
  double v4 = (uint64_t *)a1[9];
  int v5 = (uint64_t *)a1[10];
LABEL_2:
  if (v4 == v5)
  {
    uint64_t v84 = 0;
    *(_OWORD *)long long v83 = 0u;
    long long v75 = 0uLL;
    *(_OWORD *)&unsigned char __p[30] = 0u;
    memset(__p, 0, 32);
    __asm { FMOV            V1.2D, #-1.0 }
    *(_OWORD *)&__p[4] = _Q1;
    *(_OWORD *)&__p[6] = _Q1;
    *(_OWORD *)&__p[8] = 0xBFF0000000000000;
    *(_OWORD *)&__p[10] = _Q1;
    *(_OWORD *)&__p[12] = _Q1;
    *(_OWORD *)&__p[14] = _Q1;
    *(_OWORD *)&__p[16] = 0u;
    LOBYTE(__p[17]) = 0;
    __p[18] = (void *)0xBFF0000000000000;
    long long v73 = _Q1;
    *(void *)&long long v74 = 0;
    memset(&__p[19], 0, 64);
    *(_OWORD *)&__p[27] = _Q1;
    *(_OWORD *)&__p[29] = _Q1;
    *((void *)&v74 + 1) = 0xBFF0000000000000;
    *(void *)&long long v76 = -1;
    *((void *)&v76 + 1) = 0xBFF0000000000000;
    long long v77 = 0xBFF0000000000000;
    long long v78 = 0xBFF0000000000000;
    long long v79 = 0xBFF0000000000000;
    long long v80 = 0xBFF0000000000000;
    long long v81 = _Q1;
    long long v82 = _Q1;
    sub_10000DD48(v83, "Unknown");
    unint64_t v18 = a1[10];
    unint64_t v17 = a1[11];
    if (v18 >= v17)
    {
      uint64_t v42 = a1[9];
      unint64_t v43 = 0x6FB586FB586FB587 * ((uint64_t)(v18 - v42) >> 3) + 1;
      if (v43 > 0x94F2094F2094F2) {
        sub_1000050E8();
      }
      unint64_t v44 = 0x6FB586FB586FB587 * ((uint64_t)(v17 - v42) >> 3);
      if (2 * v44 > v43) {
        unint64_t v43 = 2 * v44;
      }
      if (v44 >= 0x4A7904A7904A79) {
        unint64_t v45 = 0x94F2094F2094F2;
      }
      else {
        unint64_t v45 = v43;
      }
      if (v45)
      {
        if (v45 > 0x94F2094F2094F2) {
          sub_100004E00();
        }
        unint64_t v46 = (char *)operator new(440 * v45);
      }
      else
      {
        unint64_t v46 = 0;
      }
      int v47 = &v46[8 * ((uint64_t)(v18 - v42) >> 3)];
      *((void **)v47 + 2) = __p[2];
      *(_OWORD *)int v47 = *(_OWORD *)__p;
      unint64_t v48 = &v46[440 * v45];
      __p[0] = 0;
      __p[1] = 0;
      *(_OWORD *)(v47 + 88) = *(_OWORD *)&__p[11];
      *(_OWORD *)(v47 + 104) = *(_OWORD *)&__p[13];
      *(_OWORD *)(v47 + 120) = *(_OWORD *)&__p[15];
      *(_OWORD *)(v47 + 136) = *(_OWORD *)&__p[17];
      *(_OWORD *)(v47 + 24) = *(_OWORD *)&__p[3];
      *(_OWORD *)(v47 + 40) = *(_OWORD *)&__p[5];
      *(_OWORD *)(v47 + 56) = *(_OWORD *)&__p[7];
      *(_OWORD *)(v47 + 72) = *(_OWORD *)&__p[9];
      *((void *)v47 + 21) = 0;
      *((void *)v47 + 22) = 0;
      long long v49 = *(_OWORD *)&__p[19];
      __p[2] = 0;
      __p[19] = 0;
      __p[20] = 0;
      *(_OWORD *)(v47 + 152) = v49;
      *(_OWORD *)(v47 + 168) = *(_OWORD *)&__p[21];
      __p[21] = 0;
      __p[22] = 0;
      *(_OWORD *)(v47 + 184) = *(_OWORD *)&__p[23];
      *((void **)v47 + 25) = __p[25];
      memset(&__p[23], 0, 24);
      long long v50 = *(_OWORD *)&__p[26];
      long long v51 = *(_OWORD *)&__p[28];
      long long v52 = v73;
      *((_OWORD *)v47 + 15) = *(_OWORD *)&__p[30];
      *((_OWORD *)v47 + 16) = v52;
      *((_OWORD *)v47 + 13) = v50;
      *((_OWORD *)v47 + 14) = v51;
      long long v53 = v74;
      long long v54 = v75;
      long long v55 = v77;
      *((_OWORD *)v47 + 19) = v76;
      *((_OWORD *)v47 + 20) = v55;
      *((_OWORD *)v47 + 17) = v53;
      *((_OWORD *)v47 + 18) = v54;
      long long v56 = v78;
      long long v57 = v79;
      long long v58 = v81;
      long long v59 = v82;
      *((_OWORD *)v47 + 23) = v80;
      *((_OWORD *)v47 + 24) = v58;
      *((_OWORD *)v47 + 21) = v56;
      *((_OWORD *)v47 + 22) = v57;
      long long v60 = *(_OWORD *)v83;
      *((_OWORD *)v47 + 25) = v59;
      *((_OWORD *)v47 + 26) = v60;
      *((void *)v47 + 54) = v84;
      v83[1] = 0;
      uint64_t v84 = 0;
      int v37 = v47 + 440;
      v83[0] = 0;
      if (v18 == v42)
      {
        a1[9] = v47;
        a1[10] = v37;
        a1[11] = v48;
      }
      else
      {
        do
        {
          v18 -= 440;
          sub_10003D0AC((uint64_t)(v47 - 440), (long long *)v18);
        }
        while (v18 != v42);
        unint64_t v18 = a1[9];
        uint64_t v61 = a1[10];
        a1[9] = v47;
        a1[10] = v37;
        a1[11] = v48;
        while (v61 != v18)
        {
          v61 -= 440;
          sub_10003CF3C(v61);
        }
      }
      if (v18) {
        operator delete((void *)v18);
      }
    }
    else
    {
      long long v19 = *(_OWORD *)__p;
      *(void **)(v18 + 16) = __p[2];
      *(_OWORD *)unint64_t v18 = v19;
      __p[0] = 0;
      __p[1] = 0;
      long long v20 = *(_OWORD *)&__p[5];
      long long v21 = *(_OWORD *)&__p[7];
      long long v22 = *(_OWORD *)&__p[9];
      *(_OWORD *)(v18 + 24) = *(_OWORD *)&__p[3];
      *(_OWORD *)(v18 + 72) = v22;
      *(_OWORD *)(v18 + 56) = v21;
      *(_OWORD *)(v18 + 40) = v20;
      long long v23 = *(_OWORD *)&__p[13];
      long long v24 = *(_OWORD *)&__p[15];
      long long v25 = *(_OWORD *)&__p[17];
      *(_OWORD *)(v18 + 88) = *(_OWORD *)&__p[11];
      *(_OWORD *)(v18 + 136) = v25;
      *(_OWORD *)(v18 + 120) = v24;
      *(_OWORD *)(v18 + 104) = v23;
      *(void *)(v18 + 160) = 0;
      *(void *)(v18 + 168) = 0;
      *(void *)(v18 + 176) = 0;
      *(void *)(v18 + 184) = 0;
      long long v26 = *(_OWORD *)&__p[19];
      __p[2] = 0;
      __p[19] = 0;
      *(_OWORD *)(v18 + 152) = v26;
      *(void **)(v18 + 168) = __p[21];
      *(void **)(v18 + 176) = __p[22];
      *(_OWORD *)&__p[20] = 0uLL;
      *(void *)(v18 + 192) = 0;
      *(void *)(v18 + 200) = 0;
      *(_OWORD *)(v18 + 184) = *(_OWORD *)&__p[23];
      *(void **)(v18 + 200) = __p[25];
      memset(&__p[22], 0, 32);
      *(_OWORD *)(v18 + 208) = *(_OWORD *)&__p[26];
      long long v27 = *(_OWORD *)&__p[28];
      long long v28 = *(_OWORD *)&__p[30];
      long long v29 = v74;
      *(_OWORD *)(v18 + 256) = v73;
      *(_OWORD *)(v18 + 272) = v29;
      *(_OWORD *)(v18 + 224) = v27;
      *(_OWORD *)(v18 + 240) = v28;
      long long v30 = v75;
      long long v31 = v76;
      long long v32 = v78;
      *(_OWORD *)(v18 + 320) = v77;
      *(_OWORD *)(v18 + 336) = v32;
      *(_OWORD *)(v18 + 288) = v30;
      *(_OWORD *)(v18 + 304) = v31;
      long long v33 = v79;
      long long v34 = v80;
      long long v35 = v82;
      *(_OWORD *)(v18 + 384) = v81;
      *(_OWORD *)(v18 + 400) = v35;
      *(_OWORD *)(v18 + 352) = v33;
      *(_OWORD *)(v18 + 368) = v34;
      long long v36 = *(_OWORD *)v83;
      *(void *)(v18 + 432) = v84;
      *(_OWORD *)(v18 + 416) = v36;
      v83[1] = 0;
      uint64_t v84 = 0;
      v83[0] = 0;
      int v37 = (char *)(v18 + 440);
    }
    a1[10] = v37;
    if (SHIBYTE(v84) < 0) {
      operator delete(v83[0]);
    }
    uint64_t v71 = &__p[23];
    sub_100005360(&v71);
    uint64_t v71 = &__p[20];
    sub_100005360(&v71);
    uint64_t v62 = __p[19];
    __p[19] = 0;
    if (v62) {
      (*(void (**)(void *))(*(void *)v62 + 8))(v62);
    }
    if (SHIBYTE(__p[2]) < 0) {
      operator delete(__p[0]);
    }
    int v63 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v64 = 1483715975 * ((a1[10] - a1[9]) >> 3);
      int v65 = -1431655765 * ((unint64_t)(a2[1] - *a2) >> 3);
      __p[0] = (void *)68289538;
      LOWORD(__p[1]) = 2082;
      *(void **)((char *)&__p[1] + 2) = "";
      WORD1(__p[2]) = 1026;
      HIDWORD(__p[2]) = v64;
      LOWORD(__p[3]) = 1026;
      *(_DWORD *)((char *)&__p[3] + 2) = v65;
      _os_log_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,getAlertMetricObject,created new\", \"alertMetricVectorSize\":%{public}d, \"alertTextVectorSize\":%{public}d}", (uint8_t *)__p, 0x1Eu);
    }
    return a1[10] - 440;
  }
  else
  {
    uint64_t v6 = *a2;
    int v7 = a2[1];
    while (1)
    {
      if (v6 == v7)
      {
        v4 += 55;
        goto LABEL_2;
      }
      if (v6[23] < 0)
      {
        sub_100004CB8(__dst, *(void **)v6, *((void *)v6 + 1));
      }
      else
      {
        long long v8 = *(_OWORD *)v6;
        uint32_t v70 = (void *)*((void *)v6 + 2);
        *(_OWORD *)long long __dst = v8;
      }
      if (SHIBYTE(v70) < 0)
      {
        sub_100004CB8(__p, __dst[0], (unint64_t)__dst[1]);
      }
      else
      {
        *(_OWORD *)std::string __p = *(_OWORD *)__dst;
        __p[2] = v70;
      }
      int v9 = sub_10003CFD4(v4[20], v4[21], (uint64_t)__p);
      if (SHIBYTE(__p[2]) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v70) < 0) {
        operator delete(__dst[0]);
      }
      if (v9)
      {
        uint64_t v38 = SALogObjectGeneral;
        if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
          return (uint64_t)v4;
        }
        int v39 = 1483715975 * ((a1[10] - a1[9]) >> 3);
        if (v6[23] < 0) {
          uint64_t v6 = *(char **)v6;
        }
        __p[0] = (void *)68289539;
        LOWORD(__p[1]) = 2082;
        *(void **)((char *)&__p[1] + 2) = "";
        WORD1(__p[2]) = 1026;
        HIDWORD(__p[2]) = v39;
        LOWORD(__p[3]) = 2081;
        *(void **)((char *)&__p[3] + 2) = v6;
        uint8x8_t v40 = "{\"msg%{public}.0s\":\"#saanalytics,getAlertMetricObject,found existing sa alert\", \"alertMetricVectorSiz"
              "e\":%{public}d, \"alertText\":%{private, location:escape_only}s}";
        goto LABEL_39;
      }
      if (v6[23] < 0)
      {
        sub_100004CB8(v67, *(void **)v6, *((void *)v6 + 1));
      }
      else
      {
        long long v10 = *(_OWORD *)v6;
        uint64_t v68 = (void *)*((void *)v6 + 2);
        *(_OWORD *)int v67 = v10;
      }
      if (SHIBYTE(v68) < 0)
      {
        sub_100004CB8(__p, v67[0], (unint64_t)v67[1]);
      }
      else
      {
        *(_OWORD *)std::string __p = *(_OWORD *)v67;
        __p[2] = v68;
      }
      int v11 = sub_10003CFD4(v4[23], v4[24], (uint64_t)__p);
      if (SHIBYTE(__p[2]) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v68) < 0) {
        operator delete(v67[0]);
      }
      if (v11) {
        break;
      }
      v6 += 24;
    }
    uint64_t v38 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return (uint64_t)v4;
    }
    int v41 = 1483715975 * ((a1[10] - a1[9]) >> 3);
    if (v6[23] < 0) {
      uint64_t v6 = *(char **)v6;
    }
    __p[0] = (void *)68289539;
    LOWORD(__p[1]) = 2082;
    *(void **)((char *)&__p[1] + 2) = "";
    WORD1(__p[2]) = 1026;
    HIDWORD(__p[2]) = v41;
    LOWORD(__p[3]) = 2081;
    *(void **)((char *)&__p[3] + 2) = v6;
    uint8x8_t v40 = "{\"msg%{public}.0s\":\"#saanalytics,getAlertMetricObject,found existing wea alert\", \"alertMetricVectorSize\""
          ":%{public}d, \"alertText\":%{private, location:escape_only}s}";
LABEL_39:
    _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, v40, (uint8_t *)__p, 0x22u);
  }
  return (uint64_t)v4;
}

void sub_100038140(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t *a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  a22 = &a49;
  sub_100005360((void ***)&a22);
  a22 = &a46;
  sub_100005360((void ***)&a22);
  uint64_t v50 = a45;
  a45 = 0;
  if (v50) {
    (*(void (**)(uint64_t))(*(void *)v50 + 8))(v50);
  }
  if (a28 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1000381F0(uint64_t a1)
{
  if (*(char *)(a1 + 439) < 0) {
    operator delete(*(void **)(a1 + 416));
  }
  double v4 = (void **)(a1 + 184);
  sub_100005360(&v4);
  double v4 = (void **)(a1 + 160);
  sub_100005360(&v4);
  uint64_t v2 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_10003828C(uint64_t a1, void **a2)
{
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  if (v3 == v4)
  {
LABEL_52:
    long long v21 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      if (*((char *)a2 + 23) >= 0) {
        long long v22 = a2;
      }
      else {
        long long v22 = *a2;
      }
      *(_DWORD *)double buf = 68289283;
      int v36 = 0;
      __int16 v37 = 2082;
      uint64_t v38 = "";
      __int16 v39 = 2081;
      *(void *)uint8x8_t v40 = v22;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,getAlertMetricObjectFromHash,notFound\", \"hash\":%{private, location:escape_only}s}", buf, 0x1Cu);
    }
    return 0;
  }
  while (2)
  {
    if (*((char *)a2 + 23) < 0)
    {
      sub_100004CB8(__dst, *a2, (unint64_t)a2[1]);
    }
    else
    {
      *(_OWORD *)long long __dst = *(_OWORD *)a2;
      long long v29 = a2[2];
    }
    if (SHIBYTE(v29) < 0)
    {
      sub_100004CB8(__p, __dst[0], (unint64_t)__dst[1]);
    }
    else
    {
      *(_OWORD *)std::string __p = *(_OWORD *)__dst;
      long long v31 = v29;
    }
    uint64_t v6 = *(char **)(v3 + 184);
    int v5 = *(char **)(v3 + 192);
    while (v6 != v5)
    {
      SACommonUtils::getHashForString(v6, (uint64_t *)&__s1);
      int v7 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        long long v8 = v6;
        if (v6[23] < 0) {
          long long v8 = *(char **)v6;
        }
        p_s1 = &__s1;
        if ((v34 & 0x80u) != 0) {
          p_s1 = __s1;
        }
        if (SHIBYTE(v31) >= 0) {
          long long v10 = __p;
        }
        else {
          long long v10 = (void **)__p[0];
        }
        *(_DWORD *)double buf = 68289795;
        int v36 = 0;
        __int16 v37 = 2082;
        uint64_t v38 = "";
        __int16 v39 = 2081;
        *(void *)uint8x8_t v40 = v8;
        *(_WORD *)&v40[8] = 2081;
        *(void *)&v40[10] = p_s1;
        __int16 v41 = 2081;
        uint64_t v42 = v10;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,matchingHash\", \"text\":%{private, location:escape_only}s, \"result\":%{private, location:escape_only}s, \"alertHash\":%{private, location:escape_only}s}", buf, 0x30u);
      }
      uint64_t v11 = v34;
      unsigned __int8 v12 = v34;
      if ((v34 & 0x80u) == 0) {
        size_t v13 = v34;
      }
      else {
        size_t v13 = __n;
      }
      os_log_type_t v14 = (void *)HIBYTE(v31);
      if (SHIBYTE(v31) < 0) {
        os_log_type_t v14 = __p[1];
      }
      if ((void *)v13 == v14)
      {
        if (SHIBYTE(v31) >= 0) {
          uint32_t v15 = __p;
        }
        else {
          uint32_t v15 = (void **)__p[0];
        }
        if ((char)v34 < 0)
        {
          unint64_t v17 = __s1;
          if (!memcmp(__s1, v15, __n))
          {
LABEL_39:
            unint64_t v18 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)double buf = 68289026;
              int v36 = 0;
              __int16 v37 = 2082;
              uint64_t v38 = "";
              _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,matchSuccess\"}", buf, 0x12u);
              unsigned __int8 v12 = v34;
            }
            if ((v12 & 0x80) != 0) {
              operator delete(__s1);
            }
            int v19 = 1;
            goto LABEL_46;
          }
          goto LABEL_37;
        }
        if (!v34) {
          goto LABEL_39;
        }
        int v16 = &__s1;
        while (*(unsigned __int8 *)v16 == *(unsigned __int8 *)v15)
        {
          int v16 = (void **)((char *)v16 + 1);
          uint32_t v15 = (void **)((char *)v15 + 1);
          if (!--v11) {
            goto LABEL_39;
          }
        }
      }
      if (((char)v34 & 0x80000000) == 0) {
        goto LABEL_38;
      }
      unint64_t v17 = __s1;
LABEL_37:
      operator delete(v17);
LABEL_38:
      v6 += 24;
    }
    long long v20 = SALogObjectGeneral;
    int v19 = 0;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)double buf = 68289026;
      int v36 = 0;
      __int16 v37 = 2082;
      uint64_t v38 = "";
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,matchFailed\"}", buf, 0x12u);
      int v19 = 0;
    }
LABEL_46:
    if (SHIBYTE(v31) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v29) < 0) {
      operator delete(__dst[0]);
    }
    if (!v19)
    {
      v3 += 440;
      if (v3 == v4) {
        goto LABEL_52;
      }
      continue;
    }
    break;
  }
  long long v24 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v25 = 1483715975 * ((*(void *)(a1 + 80) - *(void *)(a1 + 72)) >> 3);
    if (*((char *)a2 + 23) >= 0) {
      long long v26 = a2;
    }
    else {
      long long v26 = *a2;
    }
    *(_DWORD *)double buf = 68289539;
    int v36 = 0;
    __int16 v37 = 2082;
    uint64_t v38 = "";
    __int16 v39 = 1026;
    *(_DWORD *)uint8x8_t v40 = v25;
    *(_WORD *)&v40[4] = 2081;
    *(void *)&void v40[6] = v26;
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,getAlertMetricObjectFromHash,found existing wea alert\", \"alertMetricVectorSize\":%{public}d, \"hash\":%{private, location:escape_only}s}", buf, 0x22u);
  }
  return v3;
}

void sub_100038700(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10003873C(uint64_t a1, void *a2, char a3, long long *a4, long long *a5, double a6, double a7)
{
  int v114 = 0;
  uint64_t v116 = 0;
  id v11 = a2;
  __int16 v115 = 0;
  id v110 = v11;
  if (v11)
  {
    unsigned __int8 v12 = [v11 objectForKey:@"info"];
    if (v12 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      uint64_t v107 = a1;
      *(_OWORD *)std::string __p = 0u;
      long long v118 = 0u;
      long long v119 = 0u;
      long long v120 = 0u;
      id v13 = v12;
      os_log_type_t v14 = (char *)[v13 countByEnumeratingWithState:__p objects:v130 count:16];
      if (v14)
      {
        uint64_t v15 = *(void *)v118;
        do
        {
          for (uint64_t i = 0; i != v14; ++i)
          {
            if (*(void *)v118 != v15) {
              objc_enumerationMutation(v13);
            }
            unint64_t v17 = (void *)*((void *)__p[1] + i);
            if (v17)
            {
              objc_opt_class();
              if (objc_opt_isKindOfClass())
              {
                sub_100035C88(v17, @"CMAMtext", (uint64_t *)&v114);
                sub_100035C88(v17, @"CMAMlongtext", (uint64_t *)&v114);
                sub_100035C88(v17, @"cmamtext", (uint64_t *)&v114);
                sub_100035C88(v17, @"cmamlongtext", (uint64_t *)&v114);
              }
            }
          }
          os_log_type_t v14 = (char *)[v13 countByEnumeratingWithState:__p objects:v130 count:16];
        }
        while (v14);
      }

      a1 = v107;
      unint64_t v18 = (id)SALogObjectGeneral;
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v19 = [v13 count];
        *(_DWORD *)double buf = 68289538;
        *(_DWORD *)&uint8_t buf[4] = 0;
        LOWORD(v127) = 2082;
        *(void *)((char *)&v127 + 2) = "";
        WORD5(v127) = 1026;
        HIDWORD(v127) = v19;
        __int16 v128 = 1026;
        int v129 = -1431655765 * ((unint64_t)(v115 - (char *)v114) >> 3);
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,getAlertTextVector\", \"infoCount\":%{public}d, \"alertTextCounts\":%{public}d}", buf, 0x1Eu);
      }

      long long v20 = v110;
    }
    else
    {

      long long v20 = v110;
    }
    memset(&v113, 0, sizeof(v113));
    if (SACommonUtils::getStringFromDictionary(v20, @"uid", &v113))
    {
      if (*(void *)(a1 + 136))
      {
        v124[0] = kIncomingMessageInterfaceKey;
        long long v21 = +[NSNumber numberWithInteger:*((void *)a5 + 8)];
        v125[0] = v21;
        v124[1] = kIsReceivedViaPushKey;
        long long v22 = +[NSNumber numberWithBool:*((_DWORD *)a5 + 14) == 2];
        v125[1] = v22;
        long long v23 = +[NSDictionary dictionaryWithObjects:v125 forKeys:v124 count:2];

        sub_100054FFC(*(void *)(a1 + 136) + 112, (void **)&v113.__r_.__value_.__l.__data_, v23);
      }
      goto LABEL_24;
    }
  }
  else
  {
    memset(&v113, 0, sizeof(v113));
  }
  long long v24 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
  {
    v130[0].__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(v130[0].__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&v130[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saanalytics,onsaalertreceived,missingUid\"}", (uint8_t *)v130, 0x12u);
  }
LABEL_24:
  long long v134 = 0u;
  long long v135 = 0u;
  *(_OWORD *)__int16 v132 = 0u;
  memset(v133, 0, sizeof(v133));
  *(_OWORD *)uint64_t v131 = 0u;
  memset(v130, 0, sizeof(v130));
  __asm { FMOV            V0.2D, #10.0 }
  long long v137 = _Q0;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v138 = _Q0;
  long long v139 = _Q0;
  uint64_t v136 = 0;
  unint64_t v140 = 0xBFF0000000000000;
  long long v31 = sub_10006B474();
  sub_10002B120((uint64_t)v31, v130);
  SACommonUtils::getHashForString((char *)&v130[1], (uint64_t *)__p);
  SACommonUtils::getHashForString((char *)v130, (uint64_t *)buf);
  long long v33 = (char *)v114;
  long long v32 = v115;
  if (v114 == (std::string *)v115)
  {
    int v46 = 0;
    goto LABEL_62;
  }
  while (1)
  {
    SACommonUtils::getHashForString(v33, (uint64_t *)&__s1);
    uint64_t v34 = v123;
    int v35 = v123;
    size_t v36 = __n;
    if ((v123 & 0x80u) == 0) {
      size_t v37 = v123;
    }
    else {
      size_t v37 = __n;
    }
    uint64_t v38 = HIBYTE(v127);
    if (v127 < 0) {
      uint64_t v38 = v127;
    }
    if (v37 == v38)
    {
      if (v127 >= 0) {
        __int16 v39 = buf;
      }
      else {
        __int16 v39 = *(uint8_t **)buf;
      }
      if ((v123 & 0x80) != 0)
      {
        uint64_t v42 = __s1;
        if (!memcmp(__s1, v39, __n)) {
          goto LABEL_60;
        }
      }
      else
      {
        if (!v123) {
          goto LABEL_61;
        }
        p_s1 = &__s1;
        uint64_t v41 = v123;
        while (*(unsigned __int8 *)p_s1 == *v39)
        {
          p_s1 = (void **)((char *)p_s1 + 1);
          ++v39;
          if (!--v41) {
            goto LABEL_61;
          }
        }
      }
    }
    unint64_t v43 = (void *)BYTE7(v118);
    if (SBYTE7(v118) < 0) {
      unint64_t v43 = __p[1];
    }
    if ((void *)v37 == v43) {
      break;
    }
LABEL_53:
    if ((v35 & 0x80) != 0)
    {
      uint64_t v42 = __s1;
LABEL_56:
      operator delete(v42);
    }
    v33 += 24;
    if (v33 == v32)
    {
      int v46 = 0;
      goto LABEL_62;
    }
  }
  if ((SBYTE7(v118) & 0x80u) == 0) {
    unint64_t v44 = __p;
  }
  else {
    unint64_t v44 = (void **)__p[0];
  }
  if ((v35 & 0x80) == 0)
  {
    if (!v35) {
      goto LABEL_61;
    }
    unint64_t v45 = &__s1;
    while (*(unsigned __int8 *)v45 == *(unsigned __int8 *)v44)
    {
      unint64_t v45 = (void **)((char *)v45 + 1);
      unint64_t v44 = (void **)((char *)v44 + 1);
      if (!--v34) {
        goto LABEL_61;
      }
    }
    goto LABEL_53;
  }
  uint64_t v42 = __s1;
  if (memcmp(__s1, v44, v36)) {
    goto LABEL_56;
  }
LABEL_60:
  operator delete(v42);
LABEL_61:
  int v46 = 1;
LABEL_62:
  if (SHIBYTE(v127) < 0) {
    operator delete(*(void **)buf);
  }
  if (SBYTE7(v118) < 0) {
    operator delete(__p[0]);
  }
  __p[0] = &v135;
  sub_100005360((void ***)__p);
  __p[0] = &v133[5];
  sub_100005360((void ***)__p);
  if (SHIBYTE(v133[4]) < 0) {
    operator delete(v133[2]);
  }
  if (SHIBYTE(v133[1]) < 0) {
    operator delete(v132[1]);
  }
  if (SHIBYTE(v132[0]) < 0) {
    operator delete(v131[0]);
  }
  if (SHIBYTE(v130[1].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v130[1].__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v130[0].__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v130[0].__r_.__value_.__l.__data_);
    if (!v46) {
      goto LABEL_79;
    }
LABEL_76:
    uint64_t v47 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_95;
    }
    v130[0].__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(v130[0].__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&v130[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    unint64_t v48 = "{\"msg%{public}.0s\":\"#saanalytics,skipping sa alert for eq\"}";
    long long v49 = v47;
    os_log_type_t v50 = OS_LOG_TYPE_DEFAULT;
LABEL_94:
    _os_log_impl((void *)&_mh_execute_header, v49, v50, v48, (uint8_t *)v130, 0x12u);
    goto LABEL_95;
  }
  if (v46) {
    goto LABEL_76;
  }
LABEL_79:
  long long v51 = *a4;
  *((_DWORD *)a5 + 10) = *((_DWORD *)a4 + 4);
  *(long long *)((char *)a5 + 24) = v51;
  if (v114 == (std::string *)v115)
  {
    uint64_t v62 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      goto LABEL_95;
    }
    v130[0].__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(v130[0].__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&v130[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    unint64_t v48 = "{\"msg%{public}.0s\":\"#saanalytics,onsaalertreceived,alert does not have any message,ignoring\"}";
LABEL_93:
    long long v49 = v62;
    os_log_type_t v50 = OS_LOG_TYPE_ERROR;
    goto LABEL_94;
  }
  uint64_t v52 = sub_1000379A0((void *)a1, (char **)&v114);
  uint64_t v53 = v52;
  if (!v52)
  {
    uint64_t v62 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      goto LABEL_95;
    }
    v130[0].__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(v130[0].__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&v130[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    unint64_t v48 = "{\"msg%{public}.0s\":\"#saanalytics,onsaalertreceived,alert metric object could not be created\"}";
    goto LABEL_93;
  }
  if (*(double *)(v52 + 368) < 0.0)
  {
    uint64_t v54 = mach_continuous_time();
    double v55 = sub_100087FDC(v54);
    double v56 = -1.0;
    if (v55 >= 0.0)
    {
      double v57 = *(double *)(a1 + 160);
      if (v57 >= 0.0) {
        double v56 = v55 - v57;
      }
    }
    *(double *)(v53 + 368) = v56;
  }
  if (*(unsigned char *)(v53 + 25))
  {
    long long v58 = (void *)SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v59 = 1483715975 * ((*(void *)(a1 + 80) - *(void *)(a1 + 72)) >> 3);
      long long v60 = v58;
      uint64_t v61 = sub_100035D9C((void *)v53);
      v130[0].__r_.__value_.__r.__words[0] = 68289539;
      LOWORD(v130[0].__r_.__value_.__r.__words[1]) = 2082;
      *(std::string::size_type *)((char *)&v130[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
      WORD1(v130[0].__r_.__value_.__r.__words[2]) = 1026;
      HIDWORD(v130[0].__r_.__value_.__r.__words[2]) = v59;
      LOWORD(v130[1].__r_.__value_.__l.__data_) = 2049;
      *(std::string::size_type *)((char *)v130[1].__r_.__value_.__r.__words + 2) = v61;
      _os_log_impl((void *)&_mh_execute_header, v60, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onsaalertreceived,alert already received\", \"alertMetricVectorSize\":%{public}d, \"alertTextID\":%{private}ld}", (uint8_t *)v130, 0x22u);
    }
    goto LABEL_95;
  }
  long long v111 = *a5;
  *(_OWORD *)id v112 = a5[1];
  *(_OWORD *)&v112[16] = a5[2];
  uint64_t v63 = *((void *)a5 + 6);
  int v64 = *((_DWORD *)a5 + 14);
  uint64_t v66 = *((void *)a5 + 8);
  uint64_t v65 = *((void *)a5 + 9);
  char v67 = *(unsigned char *)(a1 + 51);
  id v68 = v110;
  uint64_t v69 = v68;
  if (!v110)
  {
    uint64_t v87 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      goto LABEL_176;
    }
    v130[0].__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(v130[0].__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&v130[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    uint64_t v88 = "{\"msg%{public}.0s\":\"#saanalytics,alert received with nil payload\"}";
    int v89 = v87;
    uint32_t v90 = 18;
LABEL_152:
    _os_log_impl((void *)&_mh_execute_header, v89, OS_LOG_TYPE_ERROR, v88, (uint8_t *)v130, v90);
    goto LABEL_176;
  }
  std::string::size_type v70 = *(void *)a4;
  if (*(double *)a4 < 0.0)
  {
    uint64_t v91 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      goto LABEL_176;
    }
    std::string::size_type v92 = *((void *)a4 + 1);
    int v93 = *((_DWORD *)a4 + 4);
    v130[0].__r_.__value_.__r.__words[0] = 68289794;
    LOWORD(v130[0].__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&v130[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    WORD1(v130[0].__r_.__value_.__r.__words[2]) = 2050;
    *(std::string::size_type *)((char *)&v130[0].__r_.__value_.__r.__words[2] + 4) = v70;
    WORD2(v130[1].__r_.__value_.__r.__words[0]) = 2050;
    *(std::string::size_type *)((char *)v130[1].__r_.__value_.__r.__words + 6) = v92;
    HIWORD(v130[1].__r_.__value_.__r.__words[1]) = 1026;
    LODWORD(v130[1].__r_.__value_.__r.__words[2]) = v93;
    uint64_t v88 = "{\"msg%{public}.0s\":\"#saanalytics,saReception,invalid time\", \"crntTime\":\"%{public}0.1f\", \"timeUnc\":\""
          "%{public}0.1f\", \"reliability\":%{public}d}";
    int v89 = v91;
    uint32_t v90 = 44;
    goto LABEL_152;
  }
  SACommonUtils::getWEAHandling(v68, (std::string *)(v53 + 416));
  *(_DWORD *)(v53 + 288) = v64;
  *(_OWORD *)(v53 + 256) = *(_OWORD *)&v112[8];
  *(_DWORD *)(v53 + 272) = *(_DWORD *)&v112[24];
  *(_OWORD *)(v53 + 232) = v111;
  *(_DWORD *)(v53 + 248) = *(_DWORD *)v112;
  *(void *)(v53 + 296) = v66;
  if (v64 == 1)
  {
    *(void *)(v53 + 304) = v65;
    *(void *)(v53 + 280) = v63;
  }
  *(void *)(v53 + 80) = 0xBFF0000000000000;
  *(void *)(v53 + 40) = 0xBFF0000000000000;
  *(unsigned char *)(v53 + 361) = v67;
  if (!SACommonUtils::getStringFromDictionary(v69, @"uid", (std::string *)v53)) {
    goto LABEL_161;
  }
  *(void *)double buf = 0;
  long long v127 = 0uLL;
  *(std::string::size_type *)((char *)v130[0].__r_.__value_.__r.__words
                            + *(void *)(v130[0].__r_.__value_.__r.__words[0] - 24)) = v71;
  v130[0].__r_.__value_.__l.__size_ = 0;
  uint64_t v72 = (std::ios_base *)((char *)v130 + *(void *)(v130[0].__r_.__value_.__r.__words[0] - 24));
  std::ios_base::init(v72, &v130[1]);
  v72[1].__vftable = 0;
  v72[1].__fmtflags_ = -1;
  *(std::string::size_type *)((char *)&v130[0].__r_.__value_.__r.__words[2]
                            + *(void *)(v130[0].__r_.__value_.__r.__words[2] - 24)) = v73;
  *(std::string::size_type *)((char *)v130[0].__r_.__value_.__r.__words
  std::streambuf::basic_streambuf();
  memset(&v133[1], 0, 32);
  LODWORD(v133[5]) = 24;
  std::string::operator=((std::string *)&v133[1], (const std::string *)v53);
  v133[4] = 0;
  if (SHIBYTE(v133[3]) >= 0) {
    long long v74 = &v133[1];
  }
  else {
    long long v74 = (void **)v133[1];
  }
  if (SHIBYTE(v133[3]) >= 0) {
    unint64_t v75 = HIBYTE(v133[3]);
  }
  else {
    unint64_t v75 = (unint64_t)v133[2];
  }
  if (((uint64_t)v133[5] & 8) != 0)
  {
    v130[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v74;
    v131[0] = v74;
    v133[4] = (char *)v74 + v75;
    v131[1] = (char *)v74 + v75;
  }
  if (((uint64_t)v133[5] & 0x10) != 0)
  {
    v133[4] = (char *)v74 + v75;
    if (SHIBYTE(v133[3]) >= 0) {
      std::string::size_type v76 = 22;
    }
    else {
      std::string::size_type v76 = ((unint64_t)v133[3] & 0x7FFFFFFFFFFFFFFFLL) - 1;
    }
    std::string::resize((std::string *)&v133[1], v76, 0);
    long long v77 = (char *)HIBYTE(v133[3]);
    if (SHIBYTE(v133[3]) < 0) {
      long long v77 = (char *)v133[2];
    }
    v132[0] = v74;
    v132[1] = v74;
    v133[0] = &v77[(void)v74];
    if (((uint64_t)v133[5] & 3) != 0)
    {
      if (v75 >> 31)
      {
        uint64_t v78 = ((v75 - 0x80000000) * (unsigned __int128)0x200000005uLL) >> 64;
        unint64_t v79 = 0x7FFFFFFF * ((v78 + ((v75 - 0x80000000 - v78) >> 1)) >> 30);
        long long v74 = (void **)((char *)v74 + v79 + 0x7FFFFFFF);
        unint64_t v75 = v75 - v79 - 0x7FFFFFFF;
        v132[1] = v74;
      }
      if (v75) {
        v132[1] = (char *)v74 + v75;
      }
    }
  }
  __p[0] = 0;
  __p[1] = 0;
  *(void *)&long long v118 = 0;
  while (2)
  {
    std::istream::sentry::sentry();
    if (!(_BYTE)__s1) {
      goto LABEL_140;
    }
    if (SBYTE7(v118) < 0)
    {
      *(unsigned char *)__p[0] = 0;
      __p[1] = 0;
    }
    else
    {
      LOBYTE(__p[0]) = 0;
      BYTE7(v118) = 0;
    }
    uint64_t v80 = 0;
    while (2)
    {
      long long v81 = *(void **)((char *)&v130[1].__r_.__value_.__r.__words[2]
                       + *(void *)(v130[0].__r_.__value_.__r.__words[0] - 24));
      long long v82 = (unsigned char *)v81[3];
      if (v82 != (unsigned char *)v81[4])
      {
        v81[3] = v82 + 1;
        LOBYTE(v81) = *v82;
LABEL_131:
        if (v81 == 44)
        {
          int v83 = 0;
          goto LABEL_139;
        }
        std::string::push_back((std::string *)__p, (std::string::value_type)v81);
        --v80;
        if (SBYTE7(v118) < 0 && __p[1] == (void *)0x7FFFFFFFFFFFFFF7)
        {
          int v83 = 4;
          goto LABEL_139;
        }
        continue;
      }
      break;
    }
    LODWORD(v81) = (*(uint64_t (**)(void *))(*v81 + 80))(v81);
    if (v81 != -1) {
      goto LABEL_131;
    }
    if (v80) {
      int v83 = 2;
    }
    else {
      int v83 = 6;
    }
LABEL_139:
    std::ios_base::clear((std::ios_base *)((char *)v130 + *(void *)(v130[0].__r_.__value_.__r.__words[0] - 24)), *(_DWORD *)((char *)&v130[1].__r_.__value_.__r.__words[1] + *(void *)(v130[0].__r_.__value_.__r.__words[0] - 24)) | v83);
LABEL_140:
    if ((*((unsigned char *)&v130[1].__r_.__value_.__r.__words[1] + *(void *)(v130[0].__r_.__value_.__r.__words[0] - 24)) & 5) == 0)
    {
      uint64_t v84 = (_OWORD *)v127;
      if ((unint64_t)v127 >= *((void *)&v127 + 1))
      {
        uint64_t v86 = sub_100004F4C((uint64_t *)buf, (long long *)__p);
      }
      else
      {
        if (SBYTE7(v118) < 0)
        {
          sub_100004CB8((unsigned char *)v127, __p[0], (unint64_t)__p[1]);
        }
        else
        {
          long long v85 = *(_OWORD *)__p;
          *(void *)(v127 + 16) = v118;
          *uint64_t v84 = v85;
        }
        uint64_t v86 = (uint64_t)v84 + 24;
      }
      *(void *)&long long v127 = v86;
      continue;
    }
    break;
  }
  if (SBYTE7(v118) < 0) {
    operator delete(__p[0]);
  }
  *(std::string::size_type *)((char *)v130[0].__r_.__value_.__r.__words
  v130[0].__r_.__value_.__r.__words[2] = v94;
  if (SHIBYTE(v133[3]) < 0) {
    operator delete(v133[1]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  std::ios::~ios();
  double CFAbsoluteTimeFromTimeString = -1.0;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v127 - *(void *)buf) >> 3) >= 3) {
    double CFAbsoluteTimeFromTimeString = SACommonUtils::extractCFAbsoluteTimeFromTimeString((unsigned __int8 *)(*(void *)buf + 48));
  }
  v130[0].__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
  sub_100005360((void ***)v130);
  *(double *)(v53 + 40) = CFAbsoluteTimeFromTimeString;
  if (CFAbsoluteTimeFromTimeString >= 0.0) {
    *(double *)(v53 + 80) = vabdd_f64(*(double *)a4, CFAbsoluteTimeFromTimeString) * 1000.0;
  }
LABEL_161:
  *(void *)(v53 + 88) = 0xBFF0000000000000;
  if (a7 >= 0.0) {
    *(double *)(v53 + 88) = vabdd_f64(*(double *)a4, a7) * 1000.0;
  }
  *(void *)(v53 + 224) = 0xBFF0000000000000;
  __p[0] = 0;
  __p[1] = 0;
  *(void *)&long long v118 = 0;
  if (SACommonUtils::getStringFromDictionary(v69, @"ingress_timestamp", (std::string *)__p))
  {
    double v96 = SACommonUtils::extractCFAbsoluteTimeFromTimeString((unsigned __int8 *)__p);
    if (v96 >= 0.0) {
      *(double *)(v53 + 224) = vabdd_f64(*(double *)a4, v96) * 1000.0;
    }
  }
  if ((std::string **)(v53 + 160) != &v114) {
    sub_10003290C(v53 + 160, v114, (long long *)v115, 0xAAAAAAAAAAAAAAABLL * ((v115 - (char *)v114) >> 3));
  }
  *(unsigned char *)(v53 + 25) = 1;
  *(unsigned char *)(v53 + 136) = a3;
  *(double *)(v53 + 144) = a6;
  *(_OWORD *)(v53 + 112) = *(_OWORD *)(v53 + 232);
  *(_DWORD *)(v53 + 128) = *(_DWORD *)(v53 + 248);
  *(_OWORD *)(v53 + 312) = *(_OWORD *)(v53 + 256);
  *(_DWORD *)(v53 + 328) = *(_DWORD *)(v53 + 272);
  if (!*(unsigned char *)(v53 + 26)) {
    *(unsigned char *)(v53 + 24) = 1;
  }
  uint64_t v97 = sub_100035D9C((void *)v53);
  double v98 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    std::string::size_type v99 = v53;
    if (*(char *)(v53 + 23) < 0) {
      std::string::size_type v99 = *(void *)v53;
    }
    std::string::size_type v100 = *(void *)(v53 + 40);
    __int16 v101 = *(void **)(v53 + 112);
    int v102 = *(unsigned __int8 *)(v53 + 136);
    int v103 = *(unsigned __int8 *)(v53 + 24);
    __int16 v104 = *(void **)(v53 + 80);
    double v105 = *(void **)(v53 + 88);
    __int16 v106 = *(void **)(v53 + 144);
    v130[0].__r_.__value_.__r.__words[0] = 68291331;
    LOWORD(v130[0].__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&v130[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    WORD1(v130[0].__r_.__value_.__r.__words[2]) = 2081;
    *(std::string::size_type *)((char *)&v130[0].__r_.__value_.__r.__words[2] + 4) = v99;
    WORD2(v130[1].__r_.__value_.__r.__words[0]) = 2049;
    *(std::string::size_type *)((char *)v130[1].__r_.__value_.__r.__words + 6) = v97;
    HIWORD(v130[1].__r_.__value_.__r.__words[1]) = 2050;
    v130[1].__r_.__value_.__r.__words[2] = v100;
    LOWORD(v131[0]) = 2050;
    *(void **)((char *)v131 + 2) = v101;
    WORD1(v131[1]) = 1025;
    HIDWORD(v131[1]) = v102;
    LOWORD(v132[0]) = 1026;
    *(_DWORD *)((char *)v132 + 2) = v103;
    HIWORD(v132[0]) = 2050;
    v132[1] = v104;
    LOWORD(v133[0]) = 2050;
    *(void **)((char *)v133 + 2) = v105;
    WORD1(v133[1]) = 2049;
    *(void **)((char *)&v133[1] + 4) = v106;
    _os_log_impl((void *)&_mh_execute_header, v98, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,sa received\", \"id\":%{private, location:escape_only}s, \"alertTextID\":%{private}lu, \"alertOriginationTime\":\"%{public}0.1f\", \"saReceivedTime\":\"%{public}0.1f\", \"insidePolygon\":%{private}d, \"saReceivedBeforeWEA\":%{public}d, \"salatencyOriginatorMilliSec\":\"%{public}0.2f\", \"salatencyServerMilliSec\":\"%{public}0.2f\", \"distanceToPolygon\":\"%{private}0.2f\"}", (uint8_t *)v130, 0x64u);
  }
  sub_100035F44(v53);
  if (SBYTE7(v118) < 0) {
    operator delete(__p[0]);
  }
LABEL_176:

  sub_100036B50(a1, (uint64_t *)v53, 0);
LABEL_95:
  if (SHIBYTE(v113.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v113.__r_.__value_.__l.__data_);
  }
  v130[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v114;
  sub_100005360((void ***)v130);
}

void sub_100039AB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  if (a37 < 0) {
    operator delete(__p);
  }
  sub_100036108((uint64_t)&a55);
  std::string __p = &a51;
  sub_100005360((void ***)&__p);

  if (a28 < 0) {
    operator delete(a23);
  }
  a51 = &a29;
  sub_100005360((void ***)&a51);

  _Unwind_Resume(a1);
}

void sub_100039C98(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    std::string::size_type v7 = a2 + 8;
    if (*(char *)(a2 + 31) < 0) {
      std::string::size_type v7 = *(void *)(a2 + 8);
    }
    buf[0].__r_.__value_.__r.__words[0] = 68289283;
    LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    WORD1(buf[0].__r_.__value_.__r.__words[2]) = 2081;
    *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[2] + 4) = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onIgneousAlertReceived\", \"uid\":%{private, location:escape_only}s}", (uint8_t *)buf, 0x1Cu);
  }
  if (*(void *)(a1 + 136))
  {
    BOOL v8 = *(_DWORD *)(a2 + 204) == 2;
    v75[0] = kIncomingMessageInterfaceKey;
    int v9 = +[NSNumber numberWithInteger:*((void *)a3 + 8)];
    v75[1] = off_100106430;
    v76[0] = v9;
    long long v10 = +[NSNumber numberWithBool:v8];
    v76[1] = v10;
    id v11 = +[NSDictionary dictionaryWithObjects:v76 forKeys:v75 count:2];

    sub_1000551E8(*(void *)(a1 + 136) + 112, (void **)(a2 + 8), v11);
  }
  double Current = CFAbsoluteTimeGetCurrent();
  *((double *)a3 + 3) = Current;
  *((void *)a3 + 4) = 0xBFF0000000000000;
  *((_DWORD *)a3 + 10) = -1;
  long long v60 = 0;
  uint64_t v61 = 0;
  unint64_t v62 = 0;
  long long v69 = 0u;
  memset(v68, 0, sizeof(v68));
  long long v66 = 0u;
  *(_OWORD *)std::string __p = 0u;
  *(_OWORD *)int v64 = 0u;
  *(_OWORD *)uint64_t v65 = 0u;
  memset(buf, 0, sizeof(buf));
  __asm { FMOV            V0.2D, #10.0 }
  long long v71 = _Q0;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v72 = _Q0;
  long long v59 = _Q0;
  long long v73 = _Q0;
  uint64_t v70 = 0;
  unint64_t v74 = 0xBFF0000000000000;
  unsigned int v19 = sub_10006B474();
  sub_10002B120((uint64_t)v19, buf);
  unint64_t v20 = sub_100004F4C((uint64_t *)&v60, (long long *)buf);
  uint64_t v61 = (long long *)v20;
  if (v20 >= v62)
  {
    long long v22 = (long long *)sub_100004F4C((uint64_t *)&v60, (long long *)&buf[1]);
  }
  else
  {
    if (SHIBYTE(buf[1].__r_.__value_.__r.__words[2]) < 0)
    {
      sub_100004CB8((unsigned char *)v20, buf[1].__r_.__value_.__l.__data_, buf[1].__r_.__value_.__l.__size_);
    }
    else
    {
      long long v21 = *(_OWORD *)&buf[1].__r_.__value_.__l.__data_;
      *(void *)(v20 + 16) = *((void *)&buf[1].__r_.__value_.__l + 2);
      *(_OWORD *)unint64_t v20 = v21;
    }
    long long v22 = (long long *)(v20 + 24);
  }
  uint64_t v61 = v22;
  uint64_t v23 = sub_1000379A0((void *)a1, (char **)&v60);
  uint64_t v24 = v23;
  if (v23)
  {
    if (*(double *)(v23 + 368) < 0.0)
    {
      uint64_t v25 = mach_continuous_time();
      double v26 = sub_100087FDC(v25);
      double v27 = -1.0;
      if (v26 >= 0.0)
      {
        double v28 = *(double *)(a1 + 160);
        if (v28 >= 0.0) {
          double v27 = v26 - v28;
        }
      }
      *(double *)(v24 + 368) = v27;
    }
    if (*(unsigned char *)(v24 + 25))
    {
      long long v29 = (void *)SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        int v30 = 1483715975 * ((*(void *)(a1 + 80) - *(void *)(a1 + 72)) >> 3);
        long long v31 = v29;
        uint64_t v32 = sub_100035D9C((void *)v24);
        *(void *)long long v77 = 68289539;
        __int16 v78 = 2082;
        unint64_t v79 = "";
        __int16 v80 = 1026;
        *(_DWORD *)long long v81 = v30;
        *(_WORD *)&v81[4] = 2049;
        *(void *)&v81[6] = v32;
        _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onIgneousAlertReceived,alert already received\", \"alertMetricVectorSize\":%{public}d, \"alertTextID\":%{private}ld}", v77, 0x22u);
      }
    }
    else
    {
      if (Current < 0.0)
      {
        long long v58 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long v77 = 68289794;
          __int16 v78 = 2082;
          *(_DWORD *)&void v77[4] = 0;
          unint64_t v79 = "";
          __int16 v80 = 2050;
          *(double *)long long v81 = Current;
          *(_WORD *)&v81[8] = 2050;
          *(void *)&v81[10] = 0xBFF0000000000000;
          __int16 v82 = 1026;
          LODWORD(v83) = -1;
          _os_log_impl((void *)&_mh_execute_header, v58, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saanalytics,saReception,invalid time\", \"crntTime\":\"%{public}0.1f\", \"timeUnc\":\"%{public}0.1f\", \"reliability\":%{public}d}", v77, 0x2Cu);
        }
      }
      else
      {
        char v34 = *(unsigned char *)(a1 + 51);
        *(_DWORD *)(v24 + 288) = *((_DWORD *)a3 + 14);
        long long v35 = *(long long *)((char *)a3 + 24);
        *(_DWORD *)(v24 + 272) = *((_DWORD *)a3 + 10);
        *(_OWORD *)(v24 + 256) = v35;
        long long v36 = *a3;
        *(_DWORD *)(v24 + 248) = *((_DWORD *)a3 + 4);
        *(_OWORD *)(v24 + 232) = v36;
        *(void *)(v24 + 296) = *((void *)a3 + 8);
        *(void *)(v24 + 80) = 0xBFF0000000000000;
        *(_OWORD *)(v24 + 40) = v59;
        *(unsigned char *)(v24 + 361) = v34;
        std::string::operator=((std::string *)v24, (const std::string *)(a2 + 8));
        if ((std::string **)(v24 + 160) != &v60) {
          sub_10003290C(v24 + 160, v60, v61, 0xAAAAAAAAAAAAAAABLL * (((char *)v61 - (char *)v60) >> 3));
        }
        *(unsigned char *)(v24 + 25) = 1;
        *(unsigned char *)(v24 + 136) = 1;
        *(void *)(v24 + 144) = 0xBFF0000000000000;
        *(_OWORD *)(v24 + 112) = *(_OWORD *)(v24 + 232);
        *(_DWORD *)(v24 + 128) = *(_DWORD *)(v24 + 248);
        *(_OWORD *)(v24 + 312) = *(_OWORD *)(v24 + 256);
        *(_DWORD *)(v24 + 328) = *(_DWORD *)(v24 + 272);
        *(_OWORD *)(v24 + 400) = *(_OWORD *)(a2 + 280);
        *(unsigned char *)(v24 + 377) = *(_DWORD *)(a2 + 204) == 2;
        *(unsigned char *)(v24 + 376) = 1;
        if (*((_DWORD *)a3 + 14) == 1)
        {
          *(void *)(v24 + 304) = *((void *)a3 + 9);
          *(void *)(v24 + 280) = *((void *)a3 + 6);
        }
        double v37 = *(double *)(a2 + 216);
        *(double *)(v24 + 40) = v37;
        if (v37 >= 0.0) {
          *(double *)(v24 + 80) = vabdd_f64(Current, v37) * 1000.0;
        }
        double v38 = *(double *)(a2 + 224);
        *(double *)(v24 + 48) = v38;
        if (v38 >= 0.0) {
          *(double *)(v24 + 104) = vabdd_f64(Current, v38) * 1000.0;
        }
        *(void *)(v24 + 88) = 0xBFF0000000000000;
        *(void *)(v24 + 224) = 0xBFF0000000000000;
        double v39 = *(double *)(a2 + 208);
        if (v39 >= 0.0) {
          *(double *)(v24 + 224) = vabdd_f64(Current, v39) * 1000.0;
        }
        if (!*(unsigned char *)(v24 + 26)) {
          *(unsigned char *)(v24 + 24) = 1;
        }
        CLClientGetDistanceCoordinates();
        *(double *)(v24 + 384) = v40;
        double v41 = Current - *(double *)(a2 + 224);
        double v42 = v40 / 3600.0;
        *(unsigned char *)(v24 + 378) = v41 <= v42;
        *(double *)(v24 + 392) = v41 - v42;
        uint64_t v43 = sub_100035D9C((void *)v24);
        unint64_t v44 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v45 = v24;
          if (*(char *)(v24 + 23) < 0) {
            uint64_t v45 = *(void *)v24;
          }
          uint64_t v46 = *(void *)(v24 + 40);
          int v47 = *(unsigned __int8 *)(v24 + 136);
          int v48 = *(unsigned __int8 *)(v24 + 24);
          uint64_t v50 = *(void *)(v24 + 104);
          uint64_t v49 = *(void *)(v24 + 112);
          uint64_t v51 = *(void *)(v24 + 80);
          uint64_t v52 = *(void *)(v24 + 88);
          uint64_t v53 = *(void *)(v24 + 384);
          uint64_t v54 = *(void *)(v24 + 392);
          uint64_t v56 = *(void *)(v24 + 400);
          uint64_t v55 = *(void *)(v24 + 408);
          int v57 = *(unsigned __int8 *)(v24 + 377);
          *(void *)long long v77 = 68292611;
          __int16 v78 = 2082;
          unint64_t v79 = "";
          __int16 v80 = 2081;
          *(void *)long long v81 = v45;
          *(_WORD *)&v81[8] = 2049;
          *(void *)&v81[10] = v43;
          __int16 v82 = 2050;
          uint64_t v83 = v46;
          __int16 v84 = 2050;
          uint64_t v85 = v49;
          __int16 v86 = 1025;
          int v87 = v47;
          __int16 v88 = 1026;
          int v89 = v48;
          __int16 v90 = 2050;
          uint64_t v91 = v50;
          __int16 v92 = 2050;
          uint64_t v93 = v51;
          __int16 v94 = 2050;
          uint64_t v95 = v52;
          __int16 v96 = 2049;
          uint64_t v97 = v53;
          __int16 v98 = 2049;
          uint64_t v99 = v54;
          __int16 v100 = 2049;
          uint64_t v101 = v55;
          __int16 v102 = 2049;
          uint64_t v103 = v56;
          __int16 v104 = 1025;
          int v105 = v57;
          _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,igneous received\", \"id\":%{private, location:escape_only}s, \"alertTextID\":%{private}lu, \"alertOriginationTime\":\"%{public}0.1f\", \"saReceivedTime\":\"%{public}0.1f\", \"insidePolygon\":%{private}d, \"saReceivedBeforeWEA\":%{public}d, \"latencyToEqOriginMilliSec\":\"%{public}0.2f\", \"salatencyOriginatorMilliSec\":\"%{public}0.2f\", \"salatencyServerMilliSec\":\"%{public}0.2f\", \"distanceToEpicenter\":\"%{private}0.2f\", \"latencyRelativeToSWave\":\"%{private}0.2f\", \"MMI\":\"%{private}0.2f\", \"magnitude\":\"%{private}0.2f\", \"isTestAlert\":%{private}hhd}", v77, 0x92u);
        }
        sub_100035F44(v24);
      }
      sub_100036B50(a1, (uint64_t *)v24, 0);
    }
  }
  else
  {
    long long v33 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
    {
      *(void *)long long v77 = 68289026;
      __int16 v78 = 2082;
      unint64_t v79 = "";
      _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saanalytics,onIgneousAlertReceived,alert metric object could not be created\"}", v77, 0x12u);
    }
  }
  *(void *)long long v77 = &v69;
  sub_100005360((void ***)v77);
  *(void *)long long v77 = &v68[8];
  sub_100005360((void ***)v77);
  if ((v68[7] & 0x80000000) != 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v66) < 0) {
    operator delete(v65[1]);
  }
  if (SHIBYTE(v65[0]) < 0) {
    operator delete(v64[0]);
  }
  if (SHIBYTE(buf[1].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf[1].__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(buf[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf[0].__r_.__value_.__l.__data_);
  }
  buf[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v60;
  sub_100005360((void ***)buf);
}

void sub_10003A4A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, void **a15)
{
  a15 = (void **)&a12;
  sub_100005360(&a15);
  _Unwind_Resume(a1);
}

void sub_10003A510(uint64_t a1, void *a2)
{
  id v4 = a2;
  uint64_t v3 = *(void *)(a1 + 136);
  if (v3) {
    sub_100054C20(v3 + 112, v4);
  }
}

void sub_10003A568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10003A57C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 23);
  char v3 = v2;
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(a2 + 8);
  }
  if (v2)
  {
    uint64_t v6 = *(void *)(a1 + 136);
    if (v6)
    {
      sub_100054A68(v6 + 112, (char *)a2);
      char v3 = *(unsigned char *)(a2 + 23);
    }
    if (v3 < 0)
    {
      sub_100004CB8(__p, *(void **)a2, *(void *)(a2 + 8));
    }
    else
    {
      *(_OWORD *)std::string __p = *(_OWORD *)a2;
      uint64_t v37 = *(void *)(a2 + 16);
    }
    int v30 = 0;
    long long v31 = 0;
    v32[0] = 0;
    v32[1] = &v30;
    char v33 = 0;
    BOOL v8 = (char *)operator new(0x18uLL);
    int v9 = v8;
    int v30 = v8;
    long long v31 = v8;
    v32[0] = v8 + 24;
    char v34 = v8;
    long long v35 = v8;
    *(void *)double buf = v32;
    *(void *)double v39 = &v34;
    *(void *)&v39[8] = &v35;
    v39[16] = 0;
    if (SHIBYTE(v37) < 0)
    {
      sub_100004CB8(v8, __p[0], (unint64_t)__p[1]);
      int v9 = v35;
    }
    else
    {
      *(_OWORD *)BOOL v8 = *(_OWORD *)__p;
      *((void *)v8 + 2) = v37;
    }
    long long v10 = v9 + 24;
    long long v35 = v10;
    v39[16] = 1;
    sub_10001DA34((uint64_t)buf);
    long long v31 = v10;
    if (SHIBYTE(v37) < 0) {
      operator delete(__p[0]);
    }
    uint64_t v11 = sub_1000379A0((void *)a1, &v30);
    uint64_t v12 = v11;
    if (v11)
    {
      if (*(double *)(v11 + 368) < 0.0)
      {
        uint64_t v13 = mach_continuous_time();
        double v14 = sub_100087FDC(v13);
        double v15 = -1.0;
        if (v14 >= 0.0)
        {
          double v16 = *(double *)(a1 + 160);
          if (v16 >= 0.0) {
            double v15 = v14 - v16;
          }
        }
        *(double *)(v12 + 368) = v15;
      }
      if (!*(unsigned char *)(v12 + 26))
      {
        char v22 = *(unsigned char *)(a1 + 51);
        double Current = CFAbsoluteTimeGetCurrent();
        double v24 = Current;
        if (Current < 0.0)
        {
          double v27 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)double buf = 68289794;
            *(_WORD *)double v39 = 2082;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(void *)&void v39[2] = "";
            *(_WORD *)&v39[10] = 2050;
            *(double *)&v39[12] = v24;
            __int16 v40 = 2050;
            unint64_t v41 = 0xBFF0000000000000;
            __int16 v42 = 1026;
            int v43 = -1;
            _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saanalytics,weaReception,invalid time\", \"crntTime\":\"%{public}0.1f\", \"timeUnc\":\"%{public}0.1f\", \"reliability\":%{public}d}", buf, 0x2Cu);
          }
        }
        else
        {
          *(unsigned char *)(v12 + 360) = v22;
          *(unsigned char *)(v12 + 26) = 1;
          *(void *)(v12 + 32) = 0xBFF0000000000000;
          *(double *)(v12 + 56) = Current;
          *(void *)(v12 + 64) = 0xBFF0000000000000;
          *(_DWORD *)(v12 + 72) = -1;
          sub_1000053B4((uint64_t *)(v12 + 184));
          unint64_t v25 = *(void *)(v12 + 192);
          if (v25 >= *(void *)(v12 + 200))
          {
            uint64_t v26 = sub_100004F4C((uint64_t *)(v12 + 184), (long long *)a2);
          }
          else
          {
            sub_100004EEC((void *)(v12 + 184), (long long *)a2);
            uint64_t v26 = v25 + 24;
          }
          *(void *)(v12 + 192) = v26;
          uint64_t v28 = sub_100035D9C((void *)v12);
          long long v29 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)double buf = 68289539;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)double v39 = 2082;
            *(void *)&void v39[2] = "";
            *(_WORD *)&v39[10] = 2050;
            *(double *)&v39[12] = v24;
            __int16 v40 = 2049;
            unint64_t v41 = v28;
            _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,wea displayed\", \"weaDisplayedTime\":\"%{public}0.1f\", \"alertTextID\":%{private}ld}", buf, 0x26u);
          }
          sub_100035F44(v12);
        }
        sub_100036B50(a1, (uint64_t *)v12, 0);
        goto LABEL_38;
      }
      uint64_t v17 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)double buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)double v39 = 2082;
        *(void *)&void v39[2] = "";
        unint64_t v18 = "{\"msg%{public}.0s\":\"#saanalytics,onWeaDisplayed,alert already received\"}";
        unsigned int v19 = v17;
        os_log_type_t v20 = OS_LOG_TYPE_DEFAULT;
LABEL_27:
        _os_log_impl((void *)&_mh_execute_header, v19, v20, v18, buf, 0x12u);
      }
    }
    else
    {
      uint64_t v21 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)double buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)double v39 = 2082;
        *(void *)&void v39[2] = "";
        unint64_t v18 = "{\"msg%{public}.0s\":\"#saanalytics,onWeaDisplayed,alert metric object could not be created\"}";
        unsigned int v19 = v21;
        os_log_type_t v20 = OS_LOG_TYPE_ERROR;
        goto LABEL_27;
      }
    }
LABEL_38:
    *(void *)double buf = &v30;
    sub_100005360((void ***)buf);
    return;
  }
  std::string::size_type v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)double buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)double v39 = 2082;
    *(void *)&void v39[2] = "";
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saanalytics,onWeaDisplayed,alert does not have any message,ignoring\"}", buf, 0x12u);
  }
}

void sub_10003AA10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10003AA6C(uint64_t a1, void **a2)
{
  uint64_t v3 = sub_10003828C(a1, a2);
  id v4 = SALogObjectGeneral;
  if (v3)
  {
    uint64_t v5 = v3;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 68289026;
      int v9 = 0;
      __int16 v10 = 2082;
      uint64_t v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onUserTappedOnWEA called\"}", (uint8_t *)&v8, 0x12u);
    }
    *(unsigned char *)(v5 + 27) = 1;
    double Current = CFAbsoluteTimeGetCurrent();
    if (Current >= 0.0)
    {
      double v7 = *(double *)(v5 + 56);
      if (v7 >= 0.0) {
        *(double *)(v5 + 216) = (Current - v7) * 1000.0;
      }
    }
    sub_100036B50(a1, (uint64_t *)v5, 0);
  }
  else if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
  {
    int v8 = 68289026;
    int v9 = 0;
    __int16 v10 = 2082;
    uint64_t v11 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saanalytics,onUserTappedOnWEA,alert metric object could not be found\"}", (uint8_t *)&v8, 0x12u);
  }
}

void sub_10003ABD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003828C(a1, (void **)a2);
  uint64_t v5 = SALogObjectGeneral;
  if (v4)
  {
    uint64_t v6 = v4;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = 68289026;
      int v14 = 0;
      __int16 v15 = 2082;
      double v16 = "";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onPullTriggered called\"}", (uint8_t *)&v13, 0x12u);
    }
    *(unsigned char *)(v6 + 344) = 1;
    double Current = CFAbsoluteTimeGetCurrent();
    if (Current >= 0.0)
    {
      double v8 = *(double *)(v6 + 56);
      if (v8 >= 0.0)
      {
        double v9 = Current;
        double v10 = (Current - v8) * 1000.0;
        *(double *)(v6 + 352) = v10;
        uint64_t v11 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          if (*(char *)(a2 + 23) >= 0) {
            uint64_t v12 = (void *)a2;
          }
          else {
            uint64_t v12 = *(void **)a2;
          }
          int v13 = 68290051;
          int v14 = 0;
          __int16 v15 = 2082;
          double v16 = "";
          __int16 v17 = 2081;
          unint64_t v18 = v12;
          __int16 v19 = 2049;
          double v20 = v9;
          __int16 v21 = 2049;
          double v22 = v8;
          __int16 v23 = 2049;
          double v24 = v10;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onPullTriggered\", \"weaTextHash\":%{private, location:escape_only}s, \"currentTime\":\"%{private}0.1f\", \"fTimeUsedForWEAReceptionLatencyComputations\":\"%{private}0.1f\", \"fLatencyOnPullTrigger\":\"%{private}0.1f\"}", (uint8_t *)&v13, 0x3Au);
        }
      }
    }
    sub_100036B50(a1, (uint64_t *)v6, 0);
  }
  else if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
  {
    int v13 = 68289026;
    int v14 = 0;
    __int16 v15 = 2082;
    double v16 = "";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saanalytics,onPullTriggered,alert metric object could not be found\"}", (uint8_t *)&v13, 0x12u);
  }
}

void sub_10003ADF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10003828C(a1, (void **)a2);
  if (v6)
  {
    double v7 = (uint64_t *)v6;
    uint64_t v8 = *(void *)(a3 + 48);
    uint64_t v9 = *(void *)(a3 + 72);
    *(void *)(v6 + 304) = v9;
    *(void *)(v6 + 280) = v8;
    double v10 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      if (*(char *)(a2 + 23) >= 0) {
        uint64_t v11 = (void *)a2;
      }
      else {
        uint64_t v11 = *(void **)a2;
      }
      int v13 = 68289795;
      int v14 = 0;
      __int16 v15 = 2082;
      double v16 = "";
      __int16 v17 = 2081;
      unint64_t v18 = v11;
      __int16 v19 = 2050;
      uint64_t v20 = v9;
      __int16 v21 = 2050;
      uint64_t v22 = v8;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onPullFailed\", \"weaTextHash\":%{private, location:escape_only}s, \"responseCode\":%{public}ld, \"latency\":\"%{public}0.1f\"}", (uint8_t *)&v13, 0x30u);
    }
    sub_100036B50(a1, v7, 0);
  }
  else
  {
    uint64_t v12 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
    {
      int v13 = 68289026;
      int v14 = 0;
      __int16 v15 = 2082;
      double v16 = "";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saanalytics,onPullFailed,alert metric object could not be found\"}", (uint8_t *)&v13, 0x12u);
    }
  }
}

void sub_10003AFD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 68289026;
    int v5 = 0;
    __int16 v6 = 2082;
    double v7 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,timer invoked\"}", (uint8_t *)&v4, 0x12u);
  }
  if (*(void *)(v1 + 80) == *(void *)(v1 + 72))
  {
    uint64_t v3 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
    {
      int v4 = 68289026;
      int v5 = 0;
      __int16 v6 = 2082;
      double v7 = "";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#saanalytics,forceSubmitFirstAlert, alert metric vector does not have enough elements\"}", (uint8_t *)&v4, 0x12u);
    }
  }
  else
  {
    sub_100036B50(v1);
  }
}

id sub_10003B108(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v102[0] = @"alertID";
  uint64_t v3 = (void ***)(a1 + 40);
  __int16 v98 = +[NSNumber numberWithUnsignedLong:sub_100036240((uint64_t)&v101, *(void *)(a1 + 40))];
  v103[0] = v98;
  v102[1] = @"alertIDString";
  int v4 = *v3;
  int v5 = *((char *)*v3 + 23);
  if (v5 < 0) {
    __int16 v6 = v4[1];
  }
  else {
    __int16 v6 = (void *)*((unsigned __int8 *)*v3 + 23);
  }
  if (v6)
  {
    double v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = v4;
      if (v5 < 0) {
        uint64_t v8 = *v4;
      }
      *(void *)double buf = 68289283;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2081;
      *(void *)&buf[20] = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,getAlertID\", \"fAlertUID\":%{private, location:escape_only}s}", buf, 0x1Cu);
      LOBYTE(v5) = *((unsigned char *)v4 + 23);
    }
    if ((v5 & 0x80) != 0)
    {
      sub_100004CB8(__p, *v4, (unint64_t)v4[1]);
    }
    else
    {
      long long v9 = *(_OWORD *)v4;
      __int16 v100 = v4[2];
      *(_OWORD *)std::string __p = v9;
    }
    goto LABEL_32;
  }
  sub_10000DD48(__p, "");
  double v10 = (char *)v4[20];
  if (v4[21] == v10)
  {
    __int16 v15 = (char *)v4[23];
    if (v4[24] == v15)
    {
      uint64_t v43 = SALogObjectGeneral;
      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_32;
      }
      *(void *)double buf = 68289026;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      int v14 = "{\"msg%{public}.0s\":\"#saanalytics,#warning,getAlertID,wea and sa text vector empty\"}";
      unint64_t v18 = v43;
      uint32_t v19 = 18;
LABEL_31:
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v14, buf, v19);
      goto LABEL_32;
    }
    SACommonUtils::getHashForString(v15, (uint64_t *)buf);
    if (SHIBYTE(v100) < 0) {
      operator delete(__p[0]);
    }
    *(_OWORD *)std::string __p = *(_OWORD *)buf;
    __int16 v100 = *(void **)&buf[16];
    uint64_t v11 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      double v16 = (void **)__p[0];
      if (SHIBYTE(v100) >= 0) {
        double v16 = __p;
      }
      __int16 v17 = (void **)v4[23];
      if (*((char *)v17 + 23) < 0) {
        __int16 v17 = (void **)*v17;
      }
      *(void *)double buf = 68289539;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2081;
      *(void *)&buf[20] = v16;
      __int16 v105 = 2081;
      __int16 v106 = v17;
      int v14 = "{\"msg%{public}.0s\":\"#saanalytics,getAlertID,created using wea\", \"hash\":%{private, location:escape_only"
            "}s, \"alertText\":%{private, location:escape_only}s}";
      goto LABEL_30;
    }
  }
  else
  {
    SACommonUtils::getHashForString(v10, (uint64_t *)buf);
    if (SHIBYTE(v100) < 0) {
      operator delete(__p[0]);
    }
    *(_OWORD *)std::string __p = *(_OWORD *)buf;
    __int16 v100 = *(void **)&buf[16];
    uint64_t v11 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = (void **)__p[0];
      if (SHIBYTE(v100) >= 0) {
        uint64_t v12 = __p;
      }
      int v13 = (void **)v4[20];
      if (*((char *)v13 + 23) < 0) {
        int v13 = (void **)*v13;
      }
      *(void *)double buf = 68289539;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2081;
      *(void *)&buf[20] = v12;
      __int16 v105 = 2081;
      __int16 v106 = v13;
      int v14 = "{\"msg%{public}.0s\":\"#saanalytics,getAlertID,created using SA text\", \"hash\":%{private, location:escape_"
            "only}s, \"alertText\":%{private, location:escape_only}s}";
LABEL_30:
      unint64_t v18 = v11;
      uint32_t v19 = 38;
      goto LABEL_31;
    }
  }
LABEL_32:
  if (SHIBYTE(v100) >= 0) {
    uint64_t v20 = __p;
  }
  else {
    uint64_t v20 = (void **)__p[0];
  }
  __int16 v90 = +[NSString stringWithUTF8String:v20];
  v103[1] = v90;
  v102[2] = @"alertReceivedViaPush";
  int v89 = +[NSNumber numberWithBool:*(_DWORD *)(*(void *)(a1 + 40) + 288) == 2];
  v103[2] = v89;
  v102[3] = @"country";
  __int16 v21 = (void *)(v2 + 8);
  if (*(char *)(v2 + 31) < 0) {
    __int16 v21 = (void *)*v21;
  }
  __int16 v88 = +[NSString stringWithUTF8String:v21];
  v103[3] = v88;
  v102[4] = @"deviceTimeUncertaintyBucketed";
  int v87 = +[NSNumber numberWithInt:SATime::getTimeUncertaintyBucket((SATime *)(*(void *)(a1 + 40) + 112))];
  v103[4] = v87;
  v102[5] = @"deviceTimeUncertaintyBucketForWEALatency";
  __int16 v86 = +[NSNumber numberWithInt:SATime::getTimeUncertaintyBucket((SATime *)(*(void *)(a1 + 40) + 56))];
  v103[5] = v86;
  v102[6] = @"isDeviceTimeReliable";
  uint64_t v85 = +[NSNumber numberWithBool:*(_DWORD *)(*(void *)(a1 + 40) + 128) != 0];
  v103[6] = v85;
  v102[7] = @"isDeviceTimeReliableForWEALatency";
  __int16 v84 = +[NSNumber numberWithBool:*(_DWORD *)(*(void *)(a1 + 40) + 72) != 0];
  v103[7] = v84;
  v102[8] = @"isLocationAuthorized";
  uint64_t v83 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 43)];
  v103[8] = v83;
  v102[9] = @"isSafetyAlertReceivedFirst";
  __int16 v82 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 24)];
  v103[9] = v82;
  v102[10] = @"isSAReceived";
  long long v81 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 25)];
  v103[10] = v81;
  v102[11] = @"isUserInsideAlertPolygon";
  __int16 v80 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 136)];
  v103[11] = v80;
  v102[12] = @"isWEAReceived";
  unint64_t v79 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 26)];
  v103[12] = v79;
  v102[13] = @"userTappedOnWEA";
  __int16 v78 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 27)];
  v103[13] = v78;
  v102[14] = @"isWiFiReachable";
  long long v77 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 41)];
  v103[14] = v77;
  v102[15] = @"latencyBetweenWEAandSA";
  std::string::size_type v76 = +[NSNumber numberWithDouble:fabs(*(double *)(*(void *)(a1 + 40) + 96))];
  v103[15] = v76;
  v102[16] = @"latencyBetweenWEAandSARealValue";
  unint64_t v75 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 96)];
  v103[16] = v75;
  v102[17] = @"numberOfChanelsSubscribed";
  unint64_t v74 = +[NSNumber numberWithInt:*(unsigned int *)(v2 + 32)];
  v103[17] = v74;
  v102[18] = @"saLatencyRelativeToOriginatorTime";
  long long v73 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 80)];
  v103[18] = v73;
  v102[19] = @"saLatencyRelativeToServerTime";
  long long v72 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 88)];
  v103[19] = v72;
  v102[20] = @"userDistanceFromAlertPolygon";
  long long v71 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 144)];
  v103[20] = v71;
  v102[21] = @"weaLatencyRelativeToOriginatorTIme";
  uint64_t v70 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 32)];
  v103[21] = v70;
  v102[22] = @"isChannelMapAvailable";
  long long v69 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 46)];
  v103[22] = v69;
  v102[23] = @"isCompanionNearby";
  id v68 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 47)];
  v103[23] = v68;
  v102[24] = @"isCountryKnown";
  char v67 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 48)];
  v103[24] = v67;
  v102[25] = @"isLocationAvailable";
  long long v66 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 45)];
  v103[25] = v66;
  v102[26] = @"isSupportedByTelephony";
  uint64_t v65 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 44)];
  v103[26] = v65;
  v102[27] = @"latencyBetweenWeaAndUserTap";
  int v64 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 216)];
  v103[27] = v64;
  v102[28] = @"saLatencyRelativeToServerIngressTime";
  uint64_t v63 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 224)];
  unsigned char v103[28] = v63;
  v102[29] = @"latencyBetweenWEAandSAConsumedValue";
  unint64_t v62 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 336)];
  v103[29] = v62;
  v102[30] = @"isPullTriggered";
  uint64_t v61 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 344)];
  v103[30] = v61;
  v102[31] = @"latencyForPullRequest";
  long long v60 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 352)];
  v103[31] = v60;
  v102[32] = @"latencyForPullResponse";
  long long v59 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 280)];
  v103[32] = v59;
  v102[33] = @"pullResponseCodeStr";
  long long v58 = +[NSNumber numberWithLong:*(void *)(*(void *)(a1 + 40) + 304)];
  int v57 = [v58 stringValue];
  v103[33] = v57;
  v102[34] = @"isSupportedByCountry";
  uint64_t v56 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 49)];
  v103[34] = v56;
  v102[35] = @"isFirstUnlocked";
  uint64_t v55 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 50)];
  v103[35] = v55;
  v102[36] = @"isUnlockedOnWea";
  uint64_t v54 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 360)];
  v103[36] = v54;
  v102[37] = @"isUnlockedOnSa";
  uint64_t v53 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 361)];
  v103[37] = v53;
  v102[38] = @"maContentVersionStr";
  uint64_t v52 = +[NSNumber numberWithInt:*(unsigned int *)(v2 + 56)];
  uint64_t v51 = [v52 stringValue];
  v103[38] = v51;
  v102[39] = @"maCompatibilityVersionStr";
  uint64_t v50 = +[NSNumber numberWithInt:*(unsigned int *)(v2 + 52)];
  uint64_t v49 = [v50 stringValue];
  v103[39] = v49;
  v102[40] = @"secondsSinceDaemonStart";
  double v22 = *(double *)(*(void *)(a1 + 40) + 368);
  if (v22 < 0.0) {
    double v22 = *(double *)(a1 + 48);
  }
  int v48 = +[NSNumber numberWithDouble:v22];
  v103[40] = v48;
  v102[41] = @"isChannelSubscribed";
  uint64_t v91 = +[NSNumber numberWithBool:*(_DWORD *)(v2 + 32) > 0];
  v103[41] = v91;
  v102[42] = @"isIgneousChannelSubscribed";
  __int16 v92 = +[NSNumber numberWithBool:*(_DWORD *)(v2 + 36) > 0];
  v103[42] = v92;
  v102[43] = @"pushNwConfig";
  uint64_t v93 = +[NSString stringWithUTF8String:*(void *)(v2 + 64)];
  v103[43] = v93;
  v102[44] = @"isCellularDataReachable";
  __int16 v94 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 42)];
  v103[44] = v94;
  v102[45] = @"percentageOfTimeRrcConnected";
  __int16 v96 = +[NSNumber numberWithInt:*(unsigned int *)(v2 + 60)];
  v103[45] = v96;
  v102[46] = @"pushInterface";
  __int16 v23 = (void *)(a1 + 56);
  if (*(char *)(a1 + 79) < 0) {
    __int16 v23 = (void *)*v23;
  }
  uint64_t v97 = +[NSString stringWithUTF8String:v23];
  v103[46] = v97;
  v102[47] = @"isEmergencyAlertEnabled";
  uint64_t v24 = SASettings::instance(v97);
  uint64_t v95 = +[NSNumber numberWithBool:(*(uint64_t (**)(uint64_t))(*(void *)v24 + 48))(v24)];
  v103[47] = v95;
  v102[48] = @"isAmberAlertEnabled";
  uint64_t v25 = SASettings::instance(v95);
  int v47 = +[NSNumber numberWithBool:(*(uint64_t (**)(uint64_t))(*(void *)v25 + 56))(v25)];
  v103[48] = v47;
  v102[49] = @"isPublicSafetyAlertEnabled";
  uint64_t v26 = SASettings::instance(v47);
  uint64_t v46 = +[NSNumber numberWithBool:(*(uint64_t (**)(uint64_t))(*(void *)v26 + 64))(v26)];
  v103[49] = v46;
  v102[50] = @"isIphoneAnalyticsEnabled";
  uint64_t v27 = SASettings::instance(v46);
  uint64_t v45 = +[NSNumber numberWithBool:(*(uint64_t (**)(uint64_t))(*(void *)v27 + 32))(v27)];
  v103[50] = v45;
  v102[51] = @"isSignificantLocationEnabled";
  uint64_t v28 = SASettings::instance(v45);
  long long v29 = +[NSNumber numberWithBool:(*(uint64_t (**)(uint64_t))(*(void *)v28 + 40))(v28)];
  v103[51] = v29;
  v102[52] = @"metricType";
  int v30 = (void *)(a1 + 80);
  if (*(char *)(a1 + 103) < 0) {
    int v30 = (void *)*v30;
  }
  long long v31 = +[NSString stringWithUTF8String:v30];
  v103[52] = v31;
  v102[53] = @"distanceToEpicenter";
  uint64_t v32 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 384)];
  v103[53] = v32;
  v102[54] = @"latencyRelativeToSWave";
  char v33 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 392)];
  v103[54] = v33;
  v102[55] = @"latencyRelativeToEqOriginTime";
  char v34 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 104)];
  v103[55] = v34;
  v102[56] = @"magnitude";
  long long v35 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 400)];
  v103[56] = v35;
  v102[57] = @"MMI";
  long long v36 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 408)];
  v103[57] = v36;
  v102[58] = @"isTestAlert";
  uint64_t v37 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 377)];
  v103[58] = v37;
  v102[59] = @"wasAlertReceivedBeforeExpectedSWave";
  double v38 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 378)];
  v103[59] = v38;
  v102[60] = @"weaHandling";
  uint64_t v39 = *(void *)(a1 + 40);
  __int16 v40 = (void *)(v39 + 416);
  if (*(char *)(v39 + 439) < 0) {
    __int16 v40 = (void *)*v40;
  }
  unint64_t v41 = +[NSString stringWithUTF8String:v40];
  v103[60] = v41;
  id v44 = +[NSDictionary dictionaryWithObjects:v103 forKeys:v102 count:61];

  if (SHIBYTE(v100) < 0) {
    operator delete(__p[0]);
  }

  return v44;
}

void sub_10003C120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _Unwind_Exception *exception_objecta, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a70 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

unsigned char *sub_10003C520(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 79) < 0)
  {
    sub_100004CB8((unsigned char *)(a1 + 56), *(void **)(a2 + 56), *(void *)(a2 + 64));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = v4;
  }
  uint64_t result = (unsigned char *)(a1 + 80);
  if (*(char *)(a2 + 103) < 0) {
    return sub_100004CB8(result, *(void **)(a2 + 80), *(void *)(a2 + 88));
  }
  long long v6 = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)uint64_t result = v6;
  return result;
}

void sub_10003C5A8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 79) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10003C5C4(uint64_t a1)
{
  if (*(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  if (*(char *)(a1 + 79) < 0)
  {
    uint64_t v2 = *(void **)(a1 + 56);
    operator delete(v2);
  }
}

void sub_10003C61C(uint64_t a1, uint64_t *a2)
{
  long long v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 1483715975 * ((*(void *)(a1 + 80) - *(void *)(a1 + 72)) >> 3);
    *(_DWORD *)double buf = 68289282;
    int v12 = 0;
    __int16 v13 = 2082;
    int v14 = "";
    __int16 v15 = 1026;
    int v16 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,cleanup\", \"alertMetricVectorSize\":%{public}d}", buf, 0x18u);
  }
  long long v6 = (std::__shared_weak_count *)a2[1];
  uint64_t v9 = *a2;
  double v10 = v6;
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1000272B8(&v9);
  if (v10) {
    sub_100028F6C(v10);
  }
  double v7 = *(uint64_t **)(a1 + 72);
  uint64_t v8 = *(uint64_t **)(a1 + 80);
  while (v7 != v8)
  {
    sub_100036B50(a1, v7, 1);
    v7 += 55;
  }
}

void sub_10003C754(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_100028F6C(a10);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_10003C774(uint64_t a1)
{
  if (!*((unsigned char *)sub_10003E368() + 179))
  {
    uint64_t v4 = SALogObjectGeneral;
    BOOL v5 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    BOOL result = 0;
    if (!v5) {
      return result;
    }
    int v11 = 68289026;
    int v12 = 0;
    __int16 v13 = 2082;
    int v14 = "";
    long long v6 = "{\"msg%{public}.0s\":\"#saanalytics,#pfm,#warning,failed,pullDisabled\"}";
LABEL_10:
    uint64_t v8 = v4;
    os_log_type_t v9 = OS_LOG_TYPE_DEFAULT;
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v8, v9, v6, (uint8_t *)&v11, 0x12u);
    return 0;
  }
  if (!*(unsigned char *)(a1 + 49))
  {
    uint64_t v4 = SALogObjectGeneral;
    BOOL v7 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    BOOL result = 0;
    if (!v7) {
      return result;
    }
    int v11 = 68289026;
    int v12 = 0;
    __int16 v13 = 2082;
    int v14 = "";
    long long v6 = "{\"msg%{public}.0s\":\"#saanalytics,#pfm,failed,pullNotSupported\"}";
    goto LABEL_10;
  }
  uint32_t v2 = *((_DWORD *)sub_10003E368() + 45);
  if (v2 < 0x65) {
    return arc4random_uniform(0x64u) <= v2;
  }
  uint32_t v2 = *((_DWORD *)sub_10006B474() + 1);
  if (v2 < 0x65) {
    return arc4random_uniform(0x64u) <= v2;
  }
  uint64_t v10 = SALogObjectGeneral;
  BOOL result = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG);
  if (result)
  {
    int v11 = 68289026;
    int v12 = 0;
    __int16 v13 = 2082;
    int v14 = "";
    long long v6 = "{\"msg%{public}.0s\":\"#saanalytics,#pfm,failed,invalidPullPc\"}";
    uint64_t v8 = v10;
    os_log_type_t v9 = OS_LOG_TYPE_DEBUG;
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_10003C93C(uint64_t a1, int a2, int a3)
{
  long long v6 = SALogObjectGeneral;
  uint64_t v7 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v7)
  {
    int v16 = 68289539;
    int v17 = 0;
    __int16 v18 = 2082;
    uint32_t v19 = "";
    __int16 v20 = 1025;
    int v21 = a2;
    __int16 v22 = 1025;
    int v23 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onMaVersionChange\", \"compVersion\":%{private}d, \"contentVersion\":%{private}d}", (uint8_t *)&v16, 0x1Eu);
  }
  *(_DWORD *)(a1 + 52) = a2;
  *(_DWORD *)(a1 + 56) = a3;
  uint64_t v8 = *(void *)(a1 + 136);
  if (v8)
  {
    uint64_t v9 = *(void *)(v8 + 40);
    if (v9)
    {
      *(_DWORD *)(v9 + 444) = a2;
      *(_DWORD *)(v9 + 448) = a3;
    }
    uint64_t v7 = *(void *)(v8 + 48);
    if (v7) {
      sub_100061AFC(v7, a2, a3);
    }
  }
  uint64_t result = sub_1000838E4((SAPlatformInfo *)v7);
  uint64_t v13 = *(void *)(a1 + 152);
  int v12 = (uint64_t *)(a1 + 152);
  uint64_t v11 = v13;
  if (result)
  {
    if (!v11)
    {
      int v14 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        int v16 = 68289026;
        int v17 = 0;
        __int16 v18 = 2082;
        uint32_t v19 = "";
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onMaVersionChange,fOnBleReceivedMetrics init\"}", (uint8_t *)&v16, 0x12u);
      }
      operator new();
    }
  }
  else if (v11)
  {
    __int16 v15 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v16 = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      uint32_t v19 = "";
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onMaVersionChange,fOnBleReceivedMetrics reset\"}", (uint8_t *)&v16, 0x12u);
    }
    return sub_10003CB54(v12, 0);
  }
  return result;
}

uint64_t sub_10003CB54(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100043B80(result);
    operator delete();
  }
  return result;
}

void *sub_10003CBA0(uint64_t a1, int a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    v6[0] = 68289282;
    v6[1] = 0;
    __int16 v7 = 2082;
    uint64_t v8 = "";
    __int16 v9 = 1026;
    int v10 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saanalytics,onEnhancedDeliveryEnabled\", \"isEnhancedDeliveryEnabled\":%{public}hhd}", (uint8_t *)v6, 0x18u);
  }
  *(unsigned char *)(a1 + 40) = a2;
  uint64_t result = *(void **)(a1 + 136);
  if (result) {
    return (void *)sub_10005C8B0(result, a2);
  }
  return result;
}

uint64_t sub_10003CC84(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_10005B26C(result);
    operator delete();
  }
  return result;
}

void sub_10003CCD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289283;
    v5[1] = 0;
    __int16 v6 = 2082;
    __int16 v7 = "";
    __int16 v8 = 2113;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onAssetReceived\", \"rmSupported\":%{private, location:escape_only}@}", (uint8_t *)v5, 0x1Cu);
  }
  sub_1000365E0(a1);
}

void sub_10003CDB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003CDCC(uint64_t a1, int a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 68289283;
    v6[1] = 0;
    __int16 v7 = 2082;
    __int16 v8 = "";
    __int16 v9 = 1025;
    int v10 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onIgneousChannelUpdate\", \"numOfChannels\":%{private}d}", (uint8_t *)v6, 0x18u);
  }
  *(_DWORD *)(a1 + 36) = a2;
  uint64_t v5 = *(void *)(a1 + 136);
  if (v5) {
    sub_10005C9AC(v5, a2 > 0);
  }
}

void sub_10003CEB8(void ***a1)
{
  uint64_t v1 = *a1;
  uint32_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 440;
        sub_10003CF3C(v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_10003CF3C(uint64_t a1)
{
  if (*(char *)(a1 + 439) < 0) {
    operator delete(*(void **)(a1 + 416));
  }
  id v3 = (void **)(a1 + 184);
  sub_100005360(&v3);
  id v3 = (void **)(a1 + 160);
  sub_100005360(&v3);
  uint64_t v2 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

uint64_t sub_10003CFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 == a2) {
    return 0;
  }
  uint64_t v5 = a1;
  int v6 = *(char *)(a3 + 23);
  if (v6 >= 0) {
    uint64_t v7 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    uint64_t v7 = *(void *)(a3 + 8);
  }
  while (1)
  {
    uint64_t v8 = *(unsigned __int8 *)(v5 + 23);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      uint64_t v9 = *(void *)(v5 + 8);
    }
    if (v9 != v7) {
      goto LABEL_19;
    }
    int v10 = v6 >= 0 ? (unsigned __int8 *)a3 : *(unsigned __int8 **)a3;
    if ((v8 & 0x80) != 0) {
      break;
    }
    if (!*(unsigned char *)(v5 + 23)) {
      return 1;
    }
    uint64_t v11 = 0;
    while (*(unsigned __int8 *)(v5 + v11) == v10[v11])
    {
      if (v8 == ++v11) {
        return 1;
      }
    }
LABEL_19:
    v5 += 24;
    if (v5 == a2) {
      return 0;
    }
  }
  if (memcmp(*(const void **)v5, v10, *(void *)(v5 + 8))) {
    goto LABEL_19;
  }
  return 1;
}

__n128 sub_10003D0AC(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v2;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  long long v3 = *(long long *)((char *)a2 + 24);
  long long v4 = *(long long *)((char *)a2 + 40);
  long long v5 = *(long long *)((char *)a2 + 56);
  *(_OWORD *)(a1 + 72) = *(long long *)((char *)a2 + 72);
  *(_OWORD *)(a1 + 56) = v5;
  *(_OWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 24) = v3;
  long long v6 = *(long long *)((char *)a2 + 104);
  long long v7 = *(long long *)((char *)a2 + 120);
  long long v8 = *(long long *)((char *)a2 + 136);
  *(_OWORD *)(a1 + 88) = *(long long *)((char *)a2 + 88);
  *(_OWORD *)(a1 + 136) = v8;
  *(_OWORD *)(a1 + 120) = v7;
  *(_OWORD *)(a1 + 104) = v6;
  uint64_t v9 = *((void *)a2 + 19);
  *((void *)a2 + 19) = 0;
  *(void *)(a1 + 152) = v9;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(_OWORD *)(a1 + 160) = a2[10];
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  *((void *)a2 + 20) = 0;
  *((void *)a2 + 21) = 0;
  *((void *)a2 + 22) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(_OWORD *)(a1 + 184) = *(long long *)((char *)a2 + 184);
  *(void *)(a1 + 200) = *((void *)a2 + 25);
  *((void *)a2 + 24) = 0;
  *((void *)a2 + 25) = 0;
  *((void *)a2 + 23) = 0;
  long long v10 = a2[17];
  long long v12 = a2[14];
  long long v11 = a2[15];
  *(_OWORD *)(a1 + 256) = a2[16];
  *(_OWORD *)(a1 + 272) = v10;
  *(_OWORD *)(a1 + 224) = v12;
  *(_OWORD *)(a1 + 240) = v11;
  long long v13 = a2[21];
  long long v15 = a2[18];
  long long v14 = a2[19];
  *(_OWORD *)(a1 + 320) = a2[20];
  *(_OWORD *)(a1 + 336) = v13;
  *(_OWORD *)(a1 + 288) = v15;
  *(_OWORD *)(a1 + 304) = v14;
  long long v16 = a2[25];
  long long v18 = a2[22];
  long long v17 = a2[23];
  *(_OWORD *)(a1 + 384) = a2[24];
  *(_OWORD *)(a1 + 400) = v16;
  *(_OWORD *)(a1 + 352) = v18;
  *(_OWORD *)(a1 + 368) = v17;
  *(_OWORD *)(a1 + 208) = a2[13];
  __n128 result = (__n128)a2[26];
  *(void *)(a1 + 432) = *((void *)a2 + 54);
  *(__n128 *)(a1 + 416) = result;
  *((void *)a2 + 53) = 0;
  *((void *)a2 + 54) = 0;
  *((void *)a2 + 52) = 0;
  return result;
}

unint64_t sub_10003D1A0(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  if (a3 > 0x20)
  {
    if (a3 > 0x40)
    {
      uint64_t v4 = *(uint64_t *)((char *)a2 + a3 - 48);
      uint64_t v5 = *(uint64_t *)((char *)a2 + a3 - 40);
      uint64_t v6 = *(uint64_t *)((char *)a2 + a3 - 24);
      uint64_t v8 = *(uint64_t *)((char *)a2 + a3 - 64);
      uint64_t v7 = *(uint64_t *)((char *)a2 + a3 - 56);
      uint64_t v9 = *(uint64_t *)((char *)a2 + a3 - 16);
      uint64_t v10 = *(uint64_t *)((char *)a2 + a3 - 8);
      unint64_t v11 = v7 + v9;
      unint64_t v12 = 0x9DDFEA08EB382D69
          * (v6 ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))) >> 47) ^ (0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))));
      unint64_t v13 = 0x9DDFEA08EB382D69 * (v12 ^ (v12 >> 47));
      unint64_t v14 = v4 + v7 + v8 + a3;
      uint64_t v15 = v14 + v5;
      unint64_t v16 = __ROR8__(v14, 44) + v8 + a3 + __ROR8__(v8 + a3 + v5 - 0x622015F714C7D297 * (v12 ^ (v12 >> 47)), 21);
      uint64_t v17 = v7 + v9 + *(uint64_t *)((char *)a2 + a3 - 32) - 0x4B6D499041670D8DLL;
      uint64_t v18 = v6 + v9 + v17;
      uint64_t v19 = __ROR8__(v18, 44);
      uint64_t v20 = v18 + v10;
      uint64_t v21 = v19 + v17 + __ROR8__(v17 + v5 + v10, 21);
      uint64_t v23 = *a2;
      __int16 v22 = a2 + 4;
      unint64_t v24 = v23 - 0x4B6D499041670D8DLL * v5;
      uint64_t v25 = -(uint64_t)((a3 - 1) & 0xFFFFFFFFFFFFFFC0);
      do
      {
        uint64_t v26 = *(v22 - 3);
        uint64_t v27 = v24 + v15 + v11 + v26;
        uint64_t v28 = v22[2];
        uint64_t v29 = v22[3];
        uint64_t v30 = v22[1];
        unint64_t v11 = v30 + v15 - 0x4B6D499041670D8DLL * __ROR8__(v11 + v16 + v28, 42);
        uint64_t v31 = v13 + v20;
        uint64_t v32 = *(v22 - 2);
        uint64_t v33 = *(v22 - 1);
        uint64_t v34 = *(v22 - 4) - 0x4B6D499041670D8DLL * v16;
        uint64_t v35 = v34 + v20 + v33;
        uint64_t v36 = v34 + v26 + v32;
        uint64_t v15 = v36 + v33;
        uint64_t v37 = __ROR8__(v36, 44) + v34;
        unint64_t v38 = (0xB492B66FBE98F273 * __ROR8__(v27, 37)) ^ v21;
        unint64_t v24 = 0xB492B66FBE98F273 * __ROR8__(v31, 33);
        unint64_t v16 = v37 + __ROR8__(v35 + v38, 21);
        unint64_t v39 = v24 + v21 + *v22;
        uint64_t v20 = v30 + v28 + v39 + v29;
        uint64_t v21 = __ROR8__(v30 + v28 + v39, 44) + v39 + __ROR8__(v11 + v32 + v39 + v29, 21);
        v22 += 8;
        unint64_t v13 = v38;
        v25 += 64;
      }
      while (v25);
      unint64_t v40 = v24
          - 0x622015F714C7D297
          * ((0x9DDFEA08EB382D69
            * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) ^ ((0x9DDFEA08EB382D69 * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) >> 47));
      unint64_t v41 = 0x9DDFEA08EB382D69
          * (v40 ^ (v38
                  - 0x4B6D499041670D8DLL * (v11 ^ (v11 >> 47))
                  - 0x622015F714C7D297
                  * ((0x9DDFEA08EB382D69
                    * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) ^ ((0x9DDFEA08EB382D69 * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) >> 47))));
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) ^ ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) >> 47));
    }
    else
    {
      return sub_10003D54C(a2, a3);
    }
  }
  else if (a3 > 0x10)
  {
    return sub_10003D4A0(a2, a3);
  }
  else
  {
    return sub_10003D3A8(a2, a3);
  }
}

unint64_t sub_10003D3A8(_DWORD *a1, unint64_t a2)
{
  if (a2 < 9)
  {
    if (a2 < 4)
    {
      unint64_t result = 0x9AE16A3B2F90404FLL;
      if (a2)
      {
        unint64_t v8 = (0xC949D7C7509E6557 * (a2 + 4 * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                      * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
        return 0x9AE16A3B2F90404FLL * (v8 ^ (v8 >> 47));
      }
    }
    else
    {
      uint64_t v6 = *(unsigned int *)((char *)a1 + a2 - 4);
      unint64_t v7 = 0x9DDFEA08EB382D69 * (((8 * *a1) + a2) ^ v6);
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
    }
  }
  else
  {
    uint64_t v3 = *(void *)((char *)a1 + a2 - 8);
    uint64_t v4 = __ROR8__(v3 + a2, a2);
    return (0x9DDFEA08EB382D69
          * ((0x9DDFEA08EB382D69
            * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)))) ^ ((0x9DDFEA08EB382D69 * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)))) >> 47))) ^ v3;
  }
  return result;
}

unint64_t sub_10003D4A0(void *a1, uint64_t a2)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = 0xB492B66FBE98F273 * *a1;
  uint64_t v4 = __ROR8__(0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8), 30) + __ROR8__(v3 - v2, 43);
  unint64_t v5 = v3 + a2 + __ROR8__(v2 ^ 0xC949D7C7509E6557, 20) - 0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8);
  unint64_t v6 = 0x9DDFEA08EB382D69 * ((v4 - 0x3C5A37A36834CED9 * *(void *)((char *)a1 + a2 - 16)) ^ v5);
  return 0x9DDFEA08EB382D69
       * ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) ^ ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) >> 47));
}

unint64_t sub_10003D54C(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)((char *)a1 + a2 - 16);
  uint64_t v3 = *a1 - 0x3C5A37A36834CED9 * (v2 + a2);
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = __ROR8__(v3 + v4, 52);
  uint64_t v7 = v3 + a1[1];
  uint64_t v8 = __ROR8__(v7, 7);
  uint64_t v9 = v7 + v5;
  uint64_t v10 = *(void *)((char *)a1 + a2 - 32) + v5;
  uint64_t v11 = v8 + __ROR8__(*a1 - 0x3C5A37A36834CED9 * (v2 + a2), 37) + v6 + __ROR8__(v9, 31);
  uint64_t v12 = *(void *)((char *)a1 + a2 - 24) + v10 + v2;
  unint64_t v13 = 0xC3A5C85C97CB3127 * (v12 + *(void *)((char *)a1 + a2 - 8) + v4 + v11)
      - 0x651E95C4D06FBFB1
      * (v9
       + v4
       + __ROR8__(v10, 37)
       + __ROR8__(*(void *)((char *)a1 + a2 - 24) + v10, 7)
       + __ROR8__(*(void *)((char *)a1 + a2 - 8) + v4 + v10, 52)
       + __ROR8__(v12, 31));
  return 0x9AE16A3B2F90404FLL
       * ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) ^ ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) >> 47));
}

uint64_t sub_10003D60C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      uint64_t v4 = v2[3];
      v2[3] = 0;
      if (v4) {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      }
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = 0;
  if (v5) {
    operator delete(v5);
  }
  return a1;
}

uint64_t sub_10003D694(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1000222C4(result);
    operator delete();
  }
  return result;
}

void sub_10003D6E8()
{
}

void *sub_10003D6FC()
{
  uint64_t result = operator new(0x10uLL);
  void *result = off_1000F6CA8;
  return result;
}

void sub_10003D734(uint64_t a1, void *a2)
{
  *a2 = off_1000F6CA8;
}

void sub_10003D75C()
{
  v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v1[0] = 68289026;
    v1[1] = 0;
    __int16 v2 = 2082;
    uint64_t v3 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onSettingsChanged\"}", (uint8_t *)v1, 0x12u);
  }
}

uint64_t sub_10003D810(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10003D850()
{
}

void *sub_10003D85C(void *a1, unint64_t a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  uint8x8_t v3 = (uint8x8_t)vcnt_s8(v2);
  v3.i16[0] = vaddlv_u8(v3);
  if (v3.u32[0] > 1uLL)
  {
    unint64_t v4 = a2;
    if (*(void *)&v2 <= a2) {
      unint64_t v4 = a2 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v4 = (*(void *)&v2 - 1) & a2;
  }
  uint64_t v5 = *(void **)(*a1 + 8 * v4);
  if (!v5) {
    return 0;
  }
  uint64_t result = (void *)*v5;
  if (*v5)
  {
    do
    {
      unint64_t v7 = result[1];
      if (v7 == a2)
      {
        if (result[2] == a2) {
          return result;
        }
      }
      else
      {
        if (v3.u32[0] > 1uLL)
        {
          if (v7 >= *(void *)&v2) {
            v7 %= *(void *)&v2;
          }
        }
        else
        {
          v7 &= *(void *)&v2 - 1;
        }
        if (v7 != v4) {
          return 0;
        }
      }
      uint64_t result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void *sub_10003D90C(uint64_t *a1, unint64_t a2, void *a3)
{
  unint64_t v5 = a2;
  unint64_t v7 = a1[1];
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = a2;
      if (v7 <= a2) {
        unint64_t v3 = a2 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & a2;
    }
    uint64_t v9 = *(void ***)(*a1 + 8 * v3);
    if (v9)
    {
      for (uint64_t i = *v9; i; uint64_t i = (void *)*i)
      {
        unint64_t v11 = i[1];
        if (v11 == a2)
        {
          if (i[2] == a2) {
            return i;
          }
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t v12 = a1 + 2;
  uint64_t i = operator new(0x20uLL);
  *uint64_t i = 0;
  i[1] = v5;
  i[2] = *a3;
  i[3] = 0;
  float v13 = (float)(unint64_t)(a1[3] + 1);
  float v14 = *((float *)a1 + 8);
  if (v7 && (float)(v14 * (float)v7) >= v13)
  {
    unint64_t v5 = v3;
    goto LABEL_64;
  }
  BOOL v15 = 1;
  if (v7 >= 3) {
    BOOL v15 = (v7 & (v7 - 1)) != 0;
  }
  unint64_t v16 = v15 | (2 * v7);
  unint64_t v17 = vcvtps_u32_f32(v13 / v14);
  if (v16 <= v17) {
    int8x8_t prime = (int8x8_t)v17;
  }
  else {
    int8x8_t prime = (int8x8_t)v16;
  }
  if (*(void *)&prime == 1)
  {
    int8x8_t prime = (int8x8_t)2;
  }
  else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
  {
    int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
    unint64_t v7 = a1[1];
  }
  if (*(void *)&prime <= v7)
  {
    if (*(void *)&prime >= v7) {
      goto LABEL_60;
    }
    unint64_t v25 = vcvtps_u32_f32((float)(unint64_t)a1[3] / *((float *)a1 + 8));
    if (v7 < 3 || (uint8x8_t v26 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v26.i16[0] = vaddlv_u8(v26), v26.u32[0] > 1uLL))
    {
      unint64_t v25 = std::__next_prime(v25);
    }
    else
    {
      uint64_t v27 = 1 << -(char)__clz(v25 - 1);
      if (v25 >= 2) {
        unint64_t v25 = v27;
      }
    }
    if (*(void *)&prime <= v25) {
      int8x8_t prime = (int8x8_t)v25;
    }
    if (*(void *)&prime >= v7)
    {
      unint64_t v7 = a1[1];
      goto LABEL_60;
    }
    if (!*(void *)&prime)
    {
      uint64_t v34 = (void *)*a1;
      *a1 = 0;
      if (v34) {
        operator delete(v34);
      }
      unint64_t v7 = 0;
      a1[1] = 0;
      goto LABEL_60;
    }
  }
  if (*(void *)&prime >> 61) {
    sub_100004E00();
  }
  uint64_t v19 = operator new(8 * *(void *)&prime);
  uint64_t v20 = (void *)*a1;
  *a1 = (uint64_t)v19;
  if (v20) {
    operator delete(v20);
  }
  uint64_t v21 = 0;
  a1[1] = (uint64_t)prime;
  do
    *(void *)(*a1 + 8 * v21++) = 0;
  while (*(void *)&prime != v21);
  __int16 v22 = (void *)*v12;
  if (*v12)
  {
    unint64_t v23 = v22[1];
    uint8x8_t v24 = (uint8x8_t)vcnt_s8(prime);
    v24.i16[0] = vaddlv_u8(v24);
    if (v24.u32[0] > 1uLL)
    {
      if (v23 >= *(void *)&prime) {
        v23 %= *(void *)&prime;
      }
    }
    else
    {
      v23 &= *(void *)&prime - 1;
    }
    *(void *)(*a1 + 8 * v23) = v12;
    uint64_t v28 = (void *)*v22;
    if (*v22)
    {
      do
      {
        unint64_t v29 = v28[1];
        if (v24.u32[0] > 1uLL)
        {
          if (v29 >= *(void *)&prime) {
            v29 %= *(void *)&prime;
          }
        }
        else
        {
          v29 &= *(void *)&prime - 1;
        }
        if (v29 != v23)
        {
          if (!*(void *)(*a1 + 8 * v29))
          {
            *(void *)(*a1 + 8 * v29) = v22;
            goto LABEL_56;
          }
          void *v22 = *v28;
          *uint64_t v28 = **(void **)(*a1 + 8 * v29);
          **(void **)(*a1 + 8 * v29) = v28;
          uint64_t v28 = v22;
        }
        unint64_t v29 = v23;
LABEL_56:
        __int16 v22 = v28;
        uint64_t v28 = (void *)*v28;
        unint64_t v23 = v29;
      }
      while (v28);
    }
  }
  unint64_t v7 = (unint64_t)prime;
LABEL_60:
  if ((v7 & (v7 - 1)) != 0)
  {
    if (v7 <= v5) {
      v5 %= v7;
    }
  }
  else
  {
    v5 &= v7 - 1;
  }
LABEL_64:
  uint64_t v30 = *a1;
  uint64_t v31 = *(void **)(*a1 + 8 * v5);
  if (v31)
  {
    *uint64_t i = *v31;
LABEL_72:
    *uint64_t v31 = i;
    goto LABEL_73;
  }
  *uint64_t i = *v12;
  *uint64_t v12 = i;
  *(void *)(v30 + 8 * v5) = v12;
  if (*i)
  {
    unint64_t v32 = *(void *)(*i + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v32 >= v7) {
        v32 %= v7;
      }
    }
    else
    {
      v32 &= v7 - 1;
    }
    uint64_t v31 = (void *)(*a1 + 8 * v32);
    goto LABEL_72;
  }
LABEL_73:
  ++a1[3];
  return i;
}

void sub_10003DCE8(_Unwind_Exception *a1)
{
  sub_10003DD00(1, v1);
  _Unwind_Resume(a1);
}

void sub_10003DD00(char a1, void *__p)
{
  if (a1)
  {
    uint64_t v3 = __p[3];
    void __p[3] = 0;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

uint64_t sub_10003DD80(uint64_t a1, void *a2, unsigned char *a3)
{
  id v4 = a2;
  if (qword_100106860 != -1) {
    dispatch_once(&qword_100106860, &stru_1000F6D38);
  }
  unint64_t v5 = [(id)qword_100106868 objectForKey:v4];
  uint64_t v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = 68289282;
    int v12 = 0;
    __int16 v13 = 2082;
    float v14 = "";
    __int16 v15 = 2114;
    unint64_t v16 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#sapref,\", \"number\":%{public, location:escape_only}@}", (uint8_t *)&v11, 0x1Cu);
  }
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  if (isKindOfClass)
  {
    uint8x8_t v8 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v9 = [v5 BOOLValue];
      int v11 = 68289282;
      int v12 = 0;
      __int16 v13 = 2082;
      float v14 = "";
      __int16 v15 = 1026;
      LODWORD(v16) = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#sapref,\", \"val\":%{public}d}", (uint8_t *)&v11, 0x18u);
    }

    *a3 = [v5 BOOLValue];
  }

  return isKindOfClass & 1;
}

void sub_10003DF4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003DF7C(id a1)
{
  qword_100106868 = (uint64_t)[objc_alloc((Class)NSUserDefaults) initWithSuiteName:@"com.apple.safetyalerts"];

  _objc_release_x1();
}

uint64_t sub_10003DFC4(uint64_t a1, void *a2, _DWORD *a3)
{
  id v4 = a2;
  if (qword_100106880 != -1) {
    dispatch_once(&qword_100106880, &stru_1000F6D58);
  }
  unint64_t v5 = [(id)qword_100106888 objectForKey:v4];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  if (isKindOfClass) {
    *a3 = [v5 intValue];
  }

  return isKindOfClass & 1;
}

void sub_10003E06C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003E088(id a1)
{
  qword_100106888 = (uint64_t)[objc_alloc((Class)NSUserDefaults) initWithSuiteName:@"com.apple.safetyalerts"];

  _objc_release_x1();
}

uint64_t sub_10003E0D0(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = a2;
  if (qword_100106890 != -1) {
    dispatch_once(&qword_100106890, &stru_1000F6D78);
  }
  unint64_t v5 = [(id)qword_100106898 objectForKey:v4];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  if (isKindOfClass)
  {
    sub_10000DD48(&v8, (char *)[v5 UTF8String]);
    if (*(char *)(a3 + 23) < 0) {
      operator delete(*(void **)a3);
    }
    *(_OWORD *)a3 = v8;
    *(void *)(a3 + 16) = v9;
  }

  return isKindOfClass & 1;
}

void sub_10003E1AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003E1CC(id a1)
{
  qword_100106898 = (uint64_t)[objc_alloc((Class)NSUserDefaults) initWithSuiteName:@"com.apple.safetyalerts"];

  _objc_release_x1();
}

uint64_t sub_10003E214(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  if (qword_1001068A0 != -1) {
    dispatch_once(&qword_1001068A0, &stru_1000F6D98);
  }
  unint64_t v5 = [(id)qword_1001068A8 objectForKey:v4];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  if (isKindOfClass)
  {
    [v5 doubleValue];
    *a3 = v7;
  }

  return isKindOfClass & 1;
}

void sub_10003E2BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003E2D8(id a1)
{
  qword_1001068A8 = (uint64_t)[objc_alloc((Class)NSUserDefaults) initWithSuiteName:@"com.apple.safetyalerts"];

  _objc_release_x1();
}

void sub_10003E320(id a1)
{
  qword_1001068B8 = (uint64_t)[objc_alloc((Class)NSUserDefaults) initWithSuiteName:@"com.apple.safetyalerts"];

  _objc_release_x1();
}

uint64_t *sub_10003E368()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001068C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1001068C0))
  {
    sub_10003E454();
    __cxa_atexit((void (*)(void *))sub_10003E3F8, &qword_1001068C8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1001068C0);
  }
  return &qword_1001068C8;
}

void sub_10003E3E0(_Unwind_Exception *a1)
{
}

uint64_t sub_10003E3F8(uint64_t a1)
{
  if (*(char *)(a1 + 215) < 0) {
    operator delete(*(void **)(a1 + 192));
  }
  if (*(char *)(a1 + 135) < 0) {
    operator delete(*(void **)(a1 + 112));
  }
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }

  return a1;
}

double sub_10003E454()
{
  if (qword_1001068B0 != -1) {
    dispatch_once(&qword_1001068B0, &stru_1000F6DB8);
  }
  qword_1001068C8 = [(id)qword_1001068B8 dictionaryRepresentation];
  byte_1001068D0 = sub_10003EB70((void *)qword_1001068C8, @"CORE_LOCATION_TEST", 0);
  *(double *)&qword_1001068D8 = (double)(int)sub_10003EC20((void *)qword_1001068C8, @"LOCATION_RECHECK_FREQUENCY_SECONDS", (id)0xE10);
  byte_1001068E0 = sub_10003EB70((void *)qword_1001068C8, @"CORE_TELEPHONY_TEST", 0);
  byte_1001068E1 = sub_10003EB70((void *)qword_1001068C8, @"CLOUD_CHANNEL_TEST", 0);
  byte_1001068E2 = sub_10003EB70((void *)qword_1001068C8, @"CLOUD_CHANNEL_USING_SANDBOX", 0);
  byte_1001068E3 = sub_10003EB70((void *)qword_1001068C8, @"IS_TIMER_SIMULATED", 0);
  byte_1001068E4 = sub_10003EB70((void *)qword_1001068C8, @"IS_ANALYTICS_ENABLED", (id)1);
  *(double *)&qword_1001068E8 = (double)(int)sub_10003EC20((void *)qword_1001068C8, @"LOCAL_CHANNEL_TTL", 0);
  *(double *)&qword_1001068F0 = (double)(int)sub_10003EC20((void *)qword_1001068C8, @"CA_METRIC_SUBMISSION_WAIT_TIME_SEC", (id)0x4B0);
  byte_1001068F8 = sub_10003EB70((void *)qword_1001068C8, @"IS_ENABLED", (id)1);
  byte_1001068F9 = sub_10003EB70((void *)qword_1001068C8, @"IS_SPI_TEST", 0);
  byte_1001068FA = sub_10003EB70((void *)qword_1001068C8, @"IS_NW_REACHABILITY_TEST", 0);
  *(double *)&qword_100106900 = (double)(int)sub_10003EC20((void *)qword_1001068C8, @"NETWORK_CHANGE_HYSTERESIS_MS", (id)0x7D0);
  v0 = (char *)sub_10003ECD0((void *)qword_1001068C8, @"DEFAULT_CHANNEL", "SkFOMTdfYkRIbi1yT2NDTA==");
  sub_10000DD48(&qword_100106908, v0);
  byte_100106920 = sub_10003EB70((void *)qword_1001068C8, @"IS_MOBILE_ASSET_SUPPORTED", (id)1);
  *(double *)&qword_100106928 = (double)(int)sub_10003EC20((void *)qword_1001068C8, @"ASSET_DOWNLOAD_INTERVAL", (id)0x93A80);
  byte_100106930 = sub_10003EB70((void *)qword_1001068C8, @"IS_MOBILE_ASSET_TEST", 0);
  uint64_t v1 = (char *)sub_10003ECD0((void *)qword_1001068C8, @"MOBILE_ASSET_STARTUP_TEST_FILE", "");
  sub_10000DD48(&qword_100106938, v1);
  byte_100106950 = sub_10003EB70((void *)qword_1001068C8, @"IS_MAGNET_MODE_MONITOR_TEST_ENVIRONMENT", 0);
  *(double *)&qword_100106958 = (double)(int)sub_10003EC20((void *)qword_1001068C8, @"ENTER_MAGNET_MODE_HYSTERESIS_MS", (id)0x1D4C0);
  *(double *)&qword_100106960 = (double)(int)sub_10003EC20((void *)qword_1001068C8, @"EXIT_MAGNET_MODE_HYSTERESIS_MS", (id)0xEA60);
  *(double *)&qword_100106968 = (double)(int)sub_10003EC20((void *)qword_1001068C8, @"INIT_PENDING_TASK_CLEANUP_TIMER", (id)0x78);
  *(double *)&qword_100106970 = (double)(int)sub_10003EC20((void *)qword_1001068C8, @"ALERT_DELAY_TOLERANCE_SECONDS", (id)0x15180);
  byte_100106978 = sub_10003EB70((void *)qword_1001068C8, @"IS_ADDL_DETAILS_HI_ENABLED", (id)1);
  byte_100106979 = sub_10003EB70((void *)qword_1001068C8, @"PULL_SERVICE_TEST", 0);
  byte_10010697A = sub_10003EB70((void *)qword_1001068C8, @"IS_PULL_ON_DEMAND", (id)1);
  byte_10010697B = sub_10003EB70((void *)qword_1001068C8, @"IS_PULL_METRICS_ON_WEA_ENABLED", 0);
  dword_10010697C = sub_10003EC20((void *)qword_1001068C8, @"PULL_METRICS_CONFIG_PERCENTAGE_OVERRIDE", (id)0xFFFFFFFFLL);
  byte_100106980 = sub_10003EB70((void *)qword_1001068C8, @"IS_IGNORE_OLD_ALERTS", (id)1);
  int8x8_t v2 = (char *)sub_10003ECD0((void *)qword_1001068C8, @"PULL_SERVER", "");
  sub_10000DD48(&qword_100106988, v2);
  byte_1001069A0 = sub_10003EB70((void *)qword_1001068C8, @"BATTERY_SERVICE_TEST", 0);
  byte_1001069A1 = sub_10003EB70((void *)qword_1001068C8, @"WOW_ASSERTION_TEST", 0);
  byte_1001069A2 = sub_10003EB70((void *)qword_1001068C8, @"WOW_ASSERTION_ENABLED", (id)1);
  *(double *)&qword_1001069A8 = (double)(int)sub_10003EC20((void *)qword_1001068C8, @"WOW_ASSERTION_RECHECK_INTERVAL", (id)0x1C20);
  byte_1001069B0 = sub_10003EB70((void *)qword_1001068C8, @"LOCK_MONITOR_TEST", 0);
  dword_1001069B4 = sub_10003EC20((void *)qword_1001068C8, @"PUSH_METRICS_CONFIG_PERCENTAGE_OVERRIDE", (id)0xFFFFFFFFLL);
  byte_1001069B8 = sub_10003EB70((void *)qword_1001068C8, @"CORE_ROUTINE_TEST", 0);
  byte_1001069B9 = sub_10003EB70((void *)qword_1001068C8, @"BIOME_TEST", 0);
  byte_1001069BA = sub_10003EB70((void *)qword_1001068C8, @"CORE_MOTION_TEST", 0);
  byte_1001069BB = sub_10003EB70((void *)qword_1001068C8, @"CORE_WIFI_TEST", 0);
  byte_1001069BC = sub_10003EB70((void *)qword_1001068C8, @"CFNOTIFICATION_TEST", 0);
  byte_1001069BD = sub_10003EB70((void *)qword_1001068C8, @"BLE_TRANSPORT_TEST", 0);
  dword_1001069C0 = sub_10003EC20((void *)qword_1001068C8, @"ROLLING_METRICS_SUPPORTED", (id)0xFFFFFFFFLL);
  dword_1001069C4 = sub_10003EC20((void *)qword_1001068C8, @"ROLLING_METRICS_PERIOD_SECONDS", (id)0xFFFFFFFFLL);
  dword_1001069C8 = sub_10003EC20((void *)qword_1001068C8, @"ROLLING_METRICS_FIXED_DELAY_SECONDS", (id)0xFFFFFFFFLL);
  dword_1001069CC = sub_10003EC20((void *)qword_1001068C8, @"ROLLING_METRICS_RANDOM_DELAY_SECONDS", (id)0xFFFFFFFFLL);
  dword_1001069D0 = sub_10003EB70((void *)qword_1001068C8, @"ROLLING_METRICS_NON_XPC_TRIGGER", 0);
  *(double *)&qword_1001069D8 = (double)(int)sub_10003EC20((void *)qword_1001068C8, @"ROLLING_METRICS_ALERT_HISTORY_DURATION_SECONDS", (id)0x15180);
  *(double *)&qword_1001069E0 = (double)(int)sub_10003EC20((void *)qword_1001068C8, @"ROLLING_METRICS_STATE_HISTORY_DURATION_SECONDS", (id)0x54600);
  *(double *)&qword_1001069E8 = (double)(int)sub_10003EC20((void *)qword_1001068C8, @"MANIFEST_DOWNLOAD_TIMEOUT_SECONDS", (id)0x12C);
  byte_1001069F0 = sub_10003EB70((void *)qword_1001068C8, @"IS_SETTINGS_TEST", 0);
  byte_1001069F1 = sub_10003EB70((void *)qword_1001068C8, @"IS_SA_LIVABILTY_ENABLED", 0);
  dword_1001069F4 = sub_10003EC20((void *)qword_1001068C8, @"EFFICACY_METRIC_PARTICIPATION_PERCENTAGE", (id)0xFFFFFFFFLL);
  byte_1001069F8 = sub_10003EB70((void *)qword_1001068C8, @"IGNEOUS_TEST_ENABLED", 0);
  dword_1001069FC = sub_10003EC20((void *)qword_1001068C8, @"IGNEOUS_ADOPTION_METRICS_SUBMISSION_PERIOD", (id)0x15180);
  dword_100106A00 = sub_10003EC20((void *)qword_1001068C8, @"BLE_RELAY_SELECTION_METRICS_XPC_PERIOD", (id)0xE10);
  dword_100106A04 = sub_10003EC20((void *)qword_1001068C8, @"BLE_RELAY_SELECTION_METRICS_DAY_PERCENTAGE", (id)0x1D);
  dword_100106A08 = sub_10003EC20((void *)qword_1001068C8, @"BLE_RELAY_SELECTION_METRICS_NIGHT_PERCENTAGE", (id)0xE);
  byte_100106A0C = sub_10003EB70((void *)qword_1001068C8, @"UN_USER_NOTIFICATION_TEST_ENABLED", 0);
  *(double *)&qword_100106A10 = (double)(int)sub_10003EC20((void *)qword_1001068C8, @"CODEBOOK_DOWNLOAD_TIMEOUT_SECONDS", (id)0x12C);
  double result = (double)(int)sub_10003EC20((void *)qword_1001068C8, @"CODEBOOK_DOWNLOAD_PERIOD_SECONDS", (id)0xFFFFFFFFLL);
  *(double *)&qword_100106A18 = result;
  return result;
}

void sub_10003EAF8(_Unwind_Exception *a1)
{
  if (byte_10010691F < 0) {
    operator delete((void *)qword_100106908);
  }

  _Unwind_Resume(a1);
}

id sub_10003EB70(void *a1, void *a2, id a3)
{
  id v5 = a1;
  id v6 = a2;
  if (v5)
  {
    uint64_t v7 = [v5 objectForKey:v6];
    if (v7)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        a3 = [v7 BOOLValue];
      }
    }
  }
  return a3;
}

void sub_10003EC00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10003EC20(void *a1, void *a2, id a3)
{
  id v5 = a1;
  id v6 = a2;
  if (v5)
  {
    uint64_t v7 = [v5 objectForKey:v6];
    if (v7)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        a3 = [v7 intValue];
      }
    }
  }
  return a3;
}

void sub_10003ECB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10003ECD0(void *a1, void *a2, id a3)
{
  id v5 = a1;
  id v6 = a2;
  if (v5)
  {
    uint64_t v7 = [v5 objectForKey:v6];
    if (v7)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        a3 = [v7 UTF8String];
      }
    }
  }
  return a3;
}

void sub_10003ED64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10003ED84(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = a2;
  *(void *)a1 = v9;
  *(_WORD *)(a1 + 8) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 32) = 0xBFF0000000000000;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 80) = a1 + 88;
  *(void *)(a1 + 46) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 104) = a1 + 112;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 128) = a1 + 136;
  *(void *)(a1 + 144) = 0;
  uint64_t v10 = *(void *)(a3 + 24);
  if (v10)
  {
    if (v10 == a3)
    {
      *(void *)(a1 + 176) = a1 + 152;
      (*(void (**)(void, uint64_t))(**(void **)(a3 + 24) + 24))(*(void *)(a3 + 24), a1 + 152);
      goto LABEL_6;
    }
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 16))(v10);
  }
  *(void *)(a1 + 176) = v10;
LABEL_6:
  *(void *)(a1 + 184) = 0;
  sub_10000F63C(a1 + 192, a4);
  *(void *)(a1 + 232) = 0;
  *(unsigned char *)(a1 + 224) = 0;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  *(unsigned char *)(a1 + 257) = 0;
  sub_100029310(a1 + 264, a5);
  id v11 = [objc_alloc((Class)CLRegulatoryConfig) initWithQueue:*(void *)a1 defaultConfig:0];
  int v12 = *(void **)(a1 + 184);
  *(void *)(a1 + 184) = v11;

  sub_10003F054(a1, @"USA", @"allowed");
  sub_10003F054(a1, @"JPN", @"motionHarvestOnly");
  *(_WORD *)(a1 + 44) = 257;
  *(_WORD *)(a1 + 50) = 256;
  dispatch_time_t v13 = dispatch_time(0, 60000000000);
  float v14 = *(NSObject **)a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10003F354;
  block[3] = &unk_1000F5EA8;
  void block[4] = a1;
  dispatch_after(v13, v14, block);

  return a1;
}

void sub_10003EFC8(_Unwind_Exception *a1)
{
  sub_100027D8C(v6, *(char **)(v1 + 136));
  sub_100027D8C(v5, *(char **)(v1 + 112));
  sub_100027D8C(v4, *(char **)(v1 + 88));
  sub_100027D8C(v3, *(char **)(v1 + 64));

  _Unwind_Resume(a1);
}

void sub_10003F054(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (v5 && v6)
  {
    id v8 = objc_alloc_init((Class)NSMutableSet);
    id v9 = v8;
    if (v8)
    {
      [v8 addObject:v5];
      id v10 = [objc_alloc((Class)NSDictionary) initWithObjectsAndKeys:&__kCFBooleanTrue, v7, 0];
      if (v10)
      {
        id v11 = *(void **)(a1 + 184);
        id v18 = 0;
        unsigned int v12 = [v11 addConfigForIsoList:v9 config:v10 error:&v18];
        id v13 = v18;
        float v14 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)double buf = 68289794;
          int v20 = 0;
          __int16 v21 = 2082;
          __int16 v22 = "";
          __int16 v23 = 1026;
          unsigned int v24 = v12;
          __int16 v25 = 2114;
          id v26 = v5;
          __int16 v27 = 2114;
          uint64_t v28 = v7;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,addCountryConfig\", \"success\":%{public}hhd, \"country\":%{public, location:escape_only}@, \"config\":%{public, location:escape_only}@}", buf, 0x2Cu);
        }
      }
      else
      {
        unint64_t v17 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)double buf = 68289026;
          int v20 = 0;
          __int16 v21 = 2082;
          __int16 v22 = "";
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,addCountryConfig,d null\"}", buf, 0x12u);
        }
        id v13 = 0;
      }
    }
    else
    {
      unint64_t v16 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)double buf = 68289026;
        int v20 = 0;
        __int16 v21 = 2082;
        __int16 v22 = "";
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,addCountryConfig,isoList null\"}", buf, 0x12u);
      }
    }
  }
  else
  {
    __int16 v15 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)double buf = 68289026;
      int v20 = 0;
      __int16 v21 = 2082;
      __int16 v22 = "";
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,addCountryConfig,invalidArgs\"}", buf, 0x12u);
    }
  }
}

void sub_10003F31C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003F354(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_10003F3DC;
  v3[3] = &unk_1000F5EA8;
  void v3[4] = v1;
  sub_10003F3DC((uint64_t)v3);
}

void sub_10003F3DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v1 + 224))
  {
    int8x8_t v2 = (id)SALogObjectWarning;
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      if (*(unsigned char *)(v1 + 47))
      {
        if (*(unsigned char *)(v1 + 46)) {
          uint64_t v3 = "true";
        }
        else {
          uint64_t v3 = "false";
        }
      }
      else
      {
        uint64_t v3 = "notSet";
      }
      if (*(unsigned char *)(v1 + 41))
      {
        if (*(unsigned char *)(v1 + 40)) {
          uint64_t v4 = "true";
        }
        else {
          uint64_t v4 = "false";
        }
      }
      else
      {
        uint64_t v4 = "notSet";
      }
      if (*(unsigned char *)(v1 + 43))
      {
        if (*(unsigned char *)(v1 + 42)) {
          id v5 = "true";
        }
        else {
          id v5 = "false";
        }
      }
      else
      {
        id v5 = "notSet";
      }
      if (*(unsigned char *)(v1 + 9))
      {
        if (*(unsigned char *)(v1 + 8)) {
          id v6 = "true";
        }
        else {
          id v6 = "false";
        }
      }
      else
      {
        id v6 = "notSet";
      }
      uint64_t v7 = sub_10003E368();
      if (*(unsigned char *)(v1 + 45))
      {
        if (*(unsigned char *)(v1 + 44)) {
          id v8 = "true";
        }
        else {
          id v8 = "false";
        }
      }
      else
      {
        id v8 = "notSet";
      }
      if (*(unsigned char *)(v1 + 49))
      {
        if (*(unsigned char *)(v1 + 48)) {
          id v9 = "true";
        }
        else {
          id v9 = "false";
        }
      }
      else
      {
        id v9 = "notSet";
      }
      if (*(unsigned char *)(v1 + 51))
      {
        if (*(unsigned char *)(v1 + 50)) {
          id v10 = "true";
        }
        else {
          id v10 = "false";
        }
      }
      else
      {
        id v10 = "notSet";
      }
      int v11 = *((unsigned __int8 *)v7 + 88);
      if (*(unsigned char *)(v1 + 53))
      {
        if (*(unsigned char *)(v1 + 52)) {
          unsigned int v12 = "true";
        }
        else {
          unsigned int v12 = "false";
        }
      }
      else
      {
        unsigned int v12 = "notSet";
      }
      uint64_t v13 = *(void *)(v1 + 72);
      v14[0] = 68291843;
      v14[1] = 0;
      __int16 v15 = 2082;
      unint64_t v16 = "";
      __int16 v17 = 1026;
      int v18 = 60;
      __int16 v19 = 2082;
      int v20 = v3;
      __int16 v21 = 2082;
      __int16 v22 = v4;
      __int16 v23 = 2082;
      unsigned int v24 = v5;
      __int16 v25 = 2082;
      id v26 = v6;
      __int16 v27 = 1026;
      int v28 = v11;
      __int16 v29 = 2082;
      uint64_t v30 = v8;
      __int16 v31 = 2082;
      unint64_t v32 = v9;
      __int16 v33 = 2082;
      uint64_t v34 = v10;
      __int16 v35 = 2082;
      uint64_t v36 = v12;
      __int16 v37 = 2049;
      uint64_t v38 = v13;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#chsel,Safety Alerts init timedout\", \"timeout\":%{public}d, \"country\":%{public, location:escape_only}s, \"lsOn\":%{public, location:escape_only}s, \"telephony\":%{public, location:escape_only}s, \"locAvailable\":%{public, location:escape_only}s, \"isMobileAssetEnabled\":%{public}hhd, \"fIsAllowedByNetwork\":%{public, location:escape_only}s, \"channelMapAvailable\":%{public, location:escape_only}s, \"isCompanionNearby\":%{public, location:escape_only}s, \"isParticipating\":%{public, location:escape_only}s, \"channelListSize\":%{private}lu}", (uint8_t *)v14, 0x78u);
    }
  }
}

void sub_10003F63C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10003F654(uint64_t a1)
{
  sub_100028C64((void *)(a1 + 264));
  uint64_t v3 = (void **)(a1 + 232);
  sub_1000429C8(&v3);
  sub_10000F6D4((void *)(a1 + 192));

  sub_1000287D8((void *)(a1 + 152));
  sub_100027D8C(a1 + 128, *(char **)(a1 + 136));
  sub_100027D8C(a1 + 104, *(char **)(a1 + 112));
  sub_100027D8C(a1 + 80, *(char **)(a1 + 88));
  sub_100027D8C(a1 + 56, *(char **)(a1 + 64));

  return a1;
}

void sub_10003F6E8(uint64_t a1, int a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289282;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    __int16 v8 = 1026;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,onParticipationChange\", \"isParticipating\":%{public}hhd}", (uint8_t *)v5, 0x18u);
  }
  *(_WORD *)(a1 + 52) = a2 | 0x100;
  sub_10003F7CC(a1, 0);
}

void sub_10003F7CC(uint64_t a1, int a2)
{
  uint64_t v3 = (id)SALogObjectGeneral;
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (*(unsigned char *)(a1 + 47))
    {
      if (*(unsigned char *)(a1 + 46)) {
        id v5 = "true";
      }
      else {
        id v5 = "false";
      }
    }
    else
    {
      id v5 = "notSet";
    }
    __int16 v90 = v5;
    if (*(unsigned char *)(a1 + 41))
    {
      if (*(unsigned char *)(a1 + 40)) {
        __int16 v6 = "true";
      }
      else {
        __int16 v6 = "false";
      }
    }
    else
    {
      __int16 v6 = "notSet";
    }
    __int16 v88 = v6;
    if (*(unsigned char *)(a1 + 43))
    {
      if (*(unsigned char *)(a1 + 42)) {
        uint64_t v7 = "true";
      }
      else {
        uint64_t v7 = "false";
      }
    }
    else
    {
      uint64_t v7 = "notSet";
    }
    int v87 = v7;
    if (*(unsigned char *)(a1 + 9))
    {
      if (*(unsigned char *)(a1 + 8)) {
        __int16 v8 = "true";
      }
      else {
        __int16 v8 = "false";
      }
    }
    else
    {
      __int16 v8 = "notSet";
    }
    if (*(unsigned char *)(a1 + 45))
    {
      if (*(unsigned char *)(a1 + 44)) {
        int v9 = "true";
      }
      else {
        int v9 = "false";
      }
    }
    else
    {
      int v9 = "notSet";
    }
    if (*(unsigned char *)(a1 + 49))
    {
      if (*(unsigned char *)(a1 + 48)) {
        id v10 = "true";
      }
      else {
        id v10 = "false";
      }
    }
    else
    {
      id v10 = "notSet";
    }
    if (*(unsigned char *)(a1 + 51))
    {
      if (*(unsigned char *)(a1 + 50)) {
        int v11 = "true";
      }
      else {
        int v11 = "false";
      }
    }
    else
    {
      int v11 = "notSet";
    }
    uint64_t v13 = *(void *)(a1 + 232);
    uint64_t v12 = *(void *)(a1 + 240);
    if (*(unsigned char *)(a1 + 53))
    {
      if (*(unsigned char *)(a1 + 52)) {
        float v14 = "true";
      }
      else {
        float v14 = "false";
      }
    }
    else
    {
      float v14 = "notSet";
    }
    __int16 v15 = (SAPlatformInfo *)[*(id *)SAPlatformInfo::instance((SAPlatformInfo *)v4) isEqualToString:@"iPhone"];
    int v16 = (int)v15;
    unsigned int v17 = [*(id *)SAPlatformInfo::instance(v15) isEqualToString:@"Watch"];
    *(_DWORD *)double buf = 68292099;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 2082;
    *(void *)&buf[20] = v90;
    *(_WORD *)&unsigned char buf[28] = 2082;
    __int16 v102 = v88;
    *(_WORD *)uint64_t v103 = 2082;
    *(void *)&v103[2] = v87;
    __int16 v104 = 2082;
    __int16 v105 = v8;
    __int16 v106 = 2082;
    uint64_t v107 = v9;
    __int16 v108 = 2082;
    uint64_t v109 = v10;
    __int16 v110 = 2082;
    long long v111 = v11;
    __int16 v112 = 1025;
    int v113 = -858993459 * ((unint64_t)(v12 - v13) >> 3);
    __int16 v114 = 2082;
    __int16 v115 = v14;
    __int16 v116 = 1025;
    int v117 = v16;
    __int16 v118 = 1025;
    unsigned int v119 = v17;
    __int16 v120 = 1026;
    int v121 = a2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,runChannelUpdate,Voters\", \"country\":%{public, location:escape_only}s, \"lsOn\":%{public, location:escape_only}s, \"telephony\":%{public, location:escape_only}s, \"locAvailable\":%{public, location:escape_only}s, \"fIsAllowedByNetwork\":%{public, location:escape_only}s, \"channelMapAvailable\":%{public, location:escape_only}s, \"isCompanionNearby\":%{public, location:escape_only}s, \"channelMapsSize\":%{private}d, \"isParticipating\":%{public, location:escape_only}s, \"isPhone\":%{private}d, \"isWatch\":%{private}d, \"forceOrDeferChannelUpdate\":%{public}hhd}", buf, 0x7Au);
  }

  uint64_t v91 = (uint64_t *)(a1 + 56);
  sub_100027D8C(a1 + 56, *(char **)(a1 + 64));
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  BOOL v19 = *(unsigned char *)(a1 + 47)
     && *(unsigned char *)(a1 + 46)
     && *(unsigned char *)(a1 + 41)
     && *(unsigned char *)(a1 + 40)
     && *(unsigned char *)(a1 + 9)
     && *(unsigned char *)(a1 + 8) != 0;
  if (*(unsigned char *)(a1 + 43)) {
    BOOL v20 = *(unsigned char *)(a1 + 42) != 0;
  }
  else {
    BOOL v20 = 0;
  }
  if (*(unsigned char *)(a1 + 53)) {
    BOOL v21 = *(unsigned char *)(a1 + 52) != 0;
  }
  else {
    BOOL v21 = 0;
  }
  unsigned __int8 v22 = [*(id *)SAPlatformInfo::instance(v18) isEqualToString:@"iPhone"];
  __int16 v98 = 0;
  uint64_t v99 = 0;
  uint64_t v97 = &v98;
  if ((v22 & 1) == 0)
  {
    uint64_t v33 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_74;
    }
    *(_DWORD *)double buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    uint64_t v34 = "{\"msg%{public}.0s\":\"#chsel,updateSAChannels,SA not supported on watch\"}";
LABEL_72:
    __int16 v35 = v33;
    uint32_t v36 = 18;
LABEL_73:
    _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, v34, buf, v36);
    goto LABEL_74;
  }
  int v23 = v19 && v20 && v21;
  unsigned int v24 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)double buf = 68289282;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 1026;
    *(_DWORD *)&buf[20] = v23;
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,updateSAChannels,state\", \"isSaRegisterPreCheckPass\":%{public}hhd}", buf, 0x18u);
  }
  if ((v23 & 1) == 0)
  {
    uint64_t v33 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_74;
    }
    *(_DWORD *)double buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    uint64_t v34 = "{\"msg%{public}.0s\":\"#chsel,updateSAChannels,precondition failed\"}";
    goto LABEL_72;
  }
  if (*((unsigned char *)sub_10003E368() + 88))
  {
    CLLocationDegrees v25 = *(double *)(a1 + 16);
    CLLocationDegrees v26 = *(double *)(a1 + 24);
    double v27 = *(double *)(a1 + 32);
    uint64_t v28 = *(void *)(a1 + 232);
    uint64_t v29 = *(void *)(a1 + 240);
    memset(__dst, 0, 24);
    if (v28 != v29)
    {
      int v30 = 0;
      while (1)
      {
        __int16 v31 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)double buf = 68289282;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&buf[18] = 1026;
          *(_DWORD *)&buf[20] = v30;
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,getChannelFromMap\", \"index\":%{public}d}", buf, 0x18u);
        }
        __str.__r_.__value_.__r.__words[0] = 0xBFF0000000000000;
        if (SAGeometry::isCircleInGeometry(*(SAGeometry **)v28, v25, v26, v27, (SAGeometry *)&__str, v32)) {
          break;
        }
        ++v30;
        v28 += 40;
        if (v28 == v29) {
          goto LABEL_196;
        }
      }
      std::string::operator=((std::string *)__dst, (const std::string *)(v28 + 16));
      *(_DWORD *)&__dst[24] = 0;
      long long v81 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v82 = __dst;
        if (__dst[23] < 0) {
          __int16 v82 = *(unsigned char **)__dst;
        }
        *(_DWORD *)double buf = 68289539;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2081;
        *(void *)&buf[20] = v82;
        *(_WORD *)&unsigned char buf[28] = 2050;
        __int16 v102 = 0;
        _os_log_impl((void *)&_mh_execute_header, v81, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,getChannelFromMap\", \"channelId\":%{private, location:escape_only}s, \"channelType\":%{public}lu}", buf, 0x26u);
      }
      if ((__dst[23] & 0x80000000) != 0)
      {
        sub_100004CB8(buf, *(void **)__dst, *(unint64_t *)&__dst[8]);
      }
      else
      {
        *(_OWORD *)double buf = *(_OWORD *)__dst;
        *(void *)&buf[16] = *(void *)&__dst[16];
      }
      *(_DWORD *)&buf[24] = *(_DWORD *)&__dst[24];
      sub_100042D00((uint64_t **)&v97, (uint64_t)buf, (uint64_t)buf);
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      if ((__dst[23] & 0x80000000) != 0) {
        operator delete(*(void **)__dst);
      }
    }
LABEL_196:
    uint64_t v86 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)double buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2050;
      *(void *)&buf[20] = v99;
      uint64_t v34 = "{\"msg%{public}.0s\":\"#chsel,ch\", \"channelListSize\":%{public}lu}";
      __int16 v35 = v86;
      uint32_t v36 = 28;
      goto LABEL_73;
    }
  }
  else
  {
    long long v73 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)double buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v73, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,runChannelUpdate,assetNotEnabled,pickDefault\"}", buf, 0x12u);
    }
    unint64_t v74 = sub_10003E368();
    if (*((char *)v74 + 87) < 0)
    {
      sub_100004CB8(buf, (void *)v74[8], v74[9]);
    }
    else
    {
      *(_OWORD *)double buf = *((_OWORD *)v74 + 4);
      *(void *)&buf[16] = v74[10];
    }
    *(_DWORD *)&buf[24] = 0;
    if ((buf[23] & 0x80000000) != 0)
    {
      sub_100004CB8(__dst, *(void **)buf, *(unint64_t *)&buf[8]);
      int v83 = *(_DWORD *)&buf[24];
    }
    else
    {
      int v83 = 0;
      *(_OWORD *)long long __dst = *(_OWORD *)buf;
      *(void *)&__dst[16] = *(void *)&buf[16];
    }
    *(_DWORD *)&__dst[24] = v83;
    sub_100042D00((uint64_t **)&v97, (uint64_t)__dst, (uint64_t)__dst);
    if ((__dst[23] & 0x80000000) != 0) {
      operator delete(*(void **)__dst);
    }
    __int16 v84 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v85 = *(void *)(a1 + 72);
      *(void *)long long __dst = 68289282;
      *(_WORD *)&__dst[8] = 2082;
      *(void *)&__dst[10] = "";
      *(_WORD *)&__dst[18] = 2050;
      *(void *)&__dst[20] = v85;
      _os_log_impl((void *)&_mh_execute_header, v84, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,ch\", \"channelListSize,MA,\":%{public}lu}", __dst, 0x1Cu);
    }
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }
LABEL_74:
  sub_100027D00(v91, v97, &v98);
  __int16 v37 = (uint64_t **)(a1 + 80);
  if ((char ***)(a1 + 80) != &v97) {
    __int16 v37 = sub_10002942C(v37, v97, &v98);
  }
  BOOL v38 = !*(unsigned char *)(a1 + 47)
     || !*(unsigned char *)(a1 + 46)
     || !*(unsigned char *)(a1 + 41)
     || !*(unsigned char *)(a1 + 40)
     || !*(unsigned char *)(a1 + 9)
     || *(unsigned char *)(a1 + 8) == 0;
  if (*(unsigned char *)(a1 + 51)) {
    BOOL v39 = *(unsigned char *)(a1 + 50) != 0;
  }
  else {
    BOOL v39 = 0;
  }
  unint64_t v40 = (SAPlatformInfo *)[*(id *)SAPlatformInfo::instance((SAPlatformInfo *)v37) isEqualToString:@"iPhone"];
  int v41 = (int)v40;
  __int16 v42 = (SAPlatformInfo *)[*(id *)SAPlatformInfo::instance(v40) isEqualToString:@"Watch"];
  int v43 = v39 || v38;
  if ((v43 | v42 ^ 1))
  {
    int v44 = 0;
  }
  else
  {
    __int16 v42 = (SAPlatformInfo *)sub_100041564(a1);
    int v44 = (int)v42;
  }
  if ((v43 | v41 ^ 1))
  {
    unsigned int v45 = 0;
  }
  else
  {
    __int16 v42 = (SAPlatformInfo *)sub_100041564(a1);
    unsigned int v45 = v42;
  }
  uint64_t v46 = (SACommonUtils *)SAPlatformInfo::instance(v42);
  int isLivabiltyEnabled = 0;
  if (*((unsigned char *)v46 + 9) && v44 | v45) {
    int isLivabiltyEnabled = SACommonUtils::isLivabiltyEnabled(v46);
  }
  int v48 = sub_10006F004(a1 + 256, (double *)(a1 + 16));
  if (*(unsigned char *)(a1 + 224))
  {
    int v49 = v48;
    uint64_t v50 = +[SAEDFollowUpManager sharedInstance];
    [v50 setSAEWEnabledState:v49 & (v44 | v45)];
  }
  *((_WORD *)sub_100003318() + 54) = v45 | v44 | 0x100;
  uint64_t v51 = (void *)SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v52 = v51;
    int v53 = sub_100041564(a1);
    *(_DWORD *)double buf = 68290050;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 1026;
    *(_DWORD *)&buf[20] = v44;
    *(_WORD *)&buf[24] = 1026;
    *(_DWORD *)&buf[26] = v45;
    LOWORD(v102) = 1026;
    *(_DWORD *)((char *)&v102 + 2) = isLivabiltyEnabled;
    HIWORD(v102) = 1026;
    *(_DWORD *)uint64_t v103 = v53;
    _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,updateIgneousChannels,state\", \"registerIgneousOnWatch\":%{public}hhd, \"registerIgneousOnPhone\":%{public}hhd, \"registerLivability\":%{public}hhd, \"isSAEWEnabled\":%{public}hhd}", buf, 0x2Au);
  }
  uint64_t v95 = 0;
  uint64_t v96 = 0;
  __int16 v94 = &v95;
  if ((v45 | v44))
  {
    sub_10006E000(a1 + 256, (double *)(a1 + 16), (uint64_t **)&v94);
    if (isLivabiltyEnabled) {
      sub_10006E9E0(a1 + 256, (double *)(a1 + 16), (uint64_t **)&v94);
    }
  }
  else
  {
    uint64_t v54 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)double buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,updateIgneousChannels,one of preconditions failed for ingneous\"}", buf, 0x12u);
    }
  }
  sub_100027D00(v91, v94, &v95);
  uint64_t v55 = (uint64_t **)(a1 + 104);
  if ((char ***)(a1 + 104) != &v94) {
    uint64_t v55 = sub_10002942C(v55, v94, &v95);
  }
  if (*(void *)(a1 + 288))
  {
    uint64_t v56 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)double buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,fOnBLERelayUpdateCB\"}", buf, 0x12u);
    }
    int v57 = sub_100041564(a1);
    uint64_t v55 = (uint64_t **)sub_100027484(a1 + 264, v57, *(void *)(a1 + 120) != 0);
  }
  BOOL v58 = *(unsigned char *)(a1 + 47)
     && *(unsigned char *)(a1 + 46)
     && *(unsigned char *)(a1 + 41)
     && *(unsigned char *)(a1 + 40)
     && *(unsigned char *)(a1 + 9)
     && *(unsigned char *)(a1 + 8) != 0;
  if (*(unsigned char *)(a1 + 43)) {
    BOOL v59 = *(unsigned char *)(a1 + 42) != 0;
  }
  else {
    BOOL v59 = 0;
  }
  long long v60 = (SACommonUtils *)SAPlatformInfo::instance((SAPlatformInfo *)v55);
  int v61 = 0;
  if (v58 && v59 && *((unsigned char *)v60 + 9)) {
    int v61 = SACommonUtils::isLivabiltyEnabled(v60);
  }
  unint64_t v62 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)double buf = 68289282;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 1026;
    *(_DWORD *)&buf[20] = v61;
    _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,updateLivabilityChannels,state\", \"registerLivability\":%{public}hhd}", buf, 0x18u);
  }
  v93[0] = 0;
  v93[1] = 0;
  __int16 v92 = v93;
  if (v61)
  {
    uint64_t v63 = sub_10006B474();
    if (v63[71] < 0) {
      sub_100004CB8(&__str, *((void **)v63 + 6), *((void *)v63 + 7));
    }
    else {
      std::string __str = *(std::string *)(v63 + 2);
    }
    std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    int v66 = SHIBYTE(__str.__r_.__value_.__r.__words[2]);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __str.__r_.__value_.__l.__size_;
    }
    if (size)
    {
      char v67 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
        if (v66 >= 0) {
          p_str = &__str;
        }
        *(_DWORD *)double buf = 68289282;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2082;
        *(void *)&buf[20] = p_str;
        _os_log_impl((void *)&_mh_execute_header, v67, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel\", \"livabiltyChannel\":%{public, location:escape_only}s}", buf, 0x1Cu);
      }
      memset(buf, 0, 24);
      std::string::operator=((std::string *)buf, &__str);
      *(_DWORD *)&buf[24] = 0;
      if ((buf[23] & 0x80000000) != 0)
      {
        sub_100004CB8(__dst, *(void **)buf, *(unint64_t *)&buf[8]);
        int v69 = *(_DWORD *)&buf[24];
      }
      else
      {
        int v69 = 0;
        *(_OWORD *)long long __dst = *(_OWORD *)buf;
        *(void *)&__dst[16] = *(void *)&buf[16];
      }
      *(_DWORD *)&__dst[24] = v69;
      sub_100042D00((uint64_t **)&v92, (uint64_t)__dst, (uint64_t)__dst);
      if ((__dst[23] & 0x80000000) != 0) {
        operator delete(*(void **)__dst);
      }
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      LOBYTE(v66) = *((unsigned char *)&__str.__r_.__value_.__s + 23);
    }
    if ((v66 & 0x80) != 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    int v64 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)double buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,updateLivabilityChannels,precondition failed\"}", buf, 0x12u);
    }
  }
  sub_100027D00(v91, v92, v93);
  if ((char ***)(a1 + 128) != &v92) {
    sub_10002942C((uint64_t **)(a1 + 128), v92, v93);
  }
  uint64_t v70 = *(void *)(a1 + 176);
  if (v70)
  {
    buf[0] = a2;
    (*(void (**)(uint64_t, uint64_t *, unsigned char *))(*(void *)v70 + 48))(v70, v91, buf);
  }
  if (!*(unsigned char *)(a1 + 224))
  {
    if (*(unsigned char *)(a1 + 41))
    {
      if (*(unsigned char *)(a1 + 40))
      {
        BOOL v71 = *(unsigned char *)(a1 + 9) == 0;
        BOOL v72 = *(unsigned char *)(a1 + 47) == 0;
      }
      else
      {
        BOOL v71 = 0;
        BOOL v72 = 0;
      }
    }
    else
    {
      BOOL v71 = 1;
      BOOL v72 = 1;
    }
    unint64_t v75 = sub_10003E368();
    int v76 = *((unsigned __int8 *)v75 + 88);
    if (*((unsigned char *)v75 + 88)) {
      int v76 = *(unsigned char *)(a1 + 49) == 0;
    }
    if (*(unsigned char *)(a1 + 41))
    {
      BOOL v77 = !*(unsigned char *)(a1 + 43) || v71;
      if (((v76 | v72 | v77) & 1) == 0 && *(unsigned char *)(a1 + 45))
      {
        __int16 v78 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)double buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v78, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,initComplete\"}", buf, 0x12u);
        }
        *(unsigned char *)(a1 + 224) = 1;
        unint64_t v79 = +[SAEDFollowUpManager sharedInstance];
        [v79 setSAEWEnabledState:v96 != 0];

        uint64_t v80 = *(void *)(a1 + 216);
        if (v80) {
          (*(void (**)(uint64_t))(*(void *)v80 + 48))(v80);
        }
      }
    }
  }
  sub_100027D8C((uint64_t)&v92, v93[0]);
  sub_100027D8C((uint64_t)&v94, v95);
  sub_100027D8C((uint64_t)&v97, v98);
}

void sub_100040808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char a22,char *a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (*(char *)(v37 - 153) < 0) {
    operator delete(*(void **)(v37 - 176));
  }
  sub_100027D8C((uint64_t)&a22, a23);
  _Unwind_Resume(a1);
}

void sub_100040938(uint64_t a1, CLLocationDegrees a2, CLLocationDegrees a3, double a4, double a5)
{
  int v9 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)double buf = 68289795;
    int v19 = 0;
    __int16 v20 = 2082;
    BOOL v21 = "";
    __int16 v22 = 2049;
    CLLocationDegrees v23 = a2;
    __int16 v24 = 2049;
    CLLocationDegrees v25 = a3;
    __int16 v26 = 2049;
    double v27 = a5;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,onLocationChanged\", \"lat\":\"%{private}0.6f\", \"lon\":\"%{private}0.6f\", \"unc\":\"%{private}0.2f\"}", buf, 0x30u);
  }
  *(CLLocationCoordinate2D *)(a1 + 16) = CLLocationCoordinate2DMake(a2, a3);
  *(double *)(a1 + 32) = a5;
  *(_WORD *)(a1 + 8) = 257;
  id v10 = objc_alloc((Class)CLLocation);
  double v11 = *(double *)(a1 + 16);
  double v12 = *(double *)(a1 + 24);
  double v13 = *(double *)(a1 + 32);
  float v14 = +[NSDate date];
  id v15 = [v10 initWithCoordinate:v14 altitude:v11 horizontalAccuracy:v12 verticalAccuracy:0.0 timestamp:v13];

  int v16 = *(void **)(a1 + 184);
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100040B48;
  void v17[3] = &unk_1000F6DD8;
  void v17[4] = a1;
  [v16 fetchInfoForLocation:v15 withReply:v17];
  sub_10003F7CC(a1, 0);
}

void sub_100040B24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100040B48(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  double v11 = *(void **)(a1 + 32);
  if (v10)
  {
    double v12 = SALogObjectWarning;
    if (os_log_type_enabled((os_log_t)SALogObjectWarning, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)double buf = 68289795;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)uint64_t v28 = 2082;
      *(void *)&v28[2] = "";
      *(_WORD *)&v28[10] = 2113;
      *(void *)&v28[12] = v8;
      __int16 v29 = 2113;
      id v30 = v9;
      __int16 v31 = 2113;
      id v32 = v10;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,fetchInfoForLocationReply,onError\", \"config\":%{private, location:escape_only}@, \"info\":%{private, location:escape_only}@, \"error\":%{private, location:escape_only}@}", buf, 0x30u);
    }
    sub_100040F18((uint64_t)v11, 0);
    sub_10004101C(0);
    double v13 = sub_100003318();
    *(void *)double buf = 0;
    *(void *)uint64_t v28 = 0;
    *(void *)&v28[8] = 0;
    sub_1000411D4((uint64_t)v13, (const std::string *)buf);
    if ((v28[15] & 0x80000000) != 0)
    {
      float v14 = *(void **)buf;
LABEL_6:
      operator delete(v14);
    }
  }
  else
  {
    id v15 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)double buf = 68289539;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)uint64_t v28 = 2082;
      *(void *)&v28[2] = "";
      *(_WORD *)&v28[10] = 2113;
      *(void *)&v28[12] = v8;
      __int16 v29 = 2113;
      id v30 = v9;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,fetchInfoForLocationReply\", \"config\":%{private, location:escape_only}@, \"info\":%{private, location:escape_only}@}", buf, 0x26u);
    }
    if (v8)
    {
      BOOL v4 = [v8 objectForKey:@"allowed"];
      BOOL v16 = v4 != 0;
    }
    else
    {
      BOOL v16 = 0;
    }
    sub_100040F18((uint64_t)v11, v16);
    if (v8)
    {

      double v11 = [v8 objectForKey:@"motionHarvestOnly"];
      __int16 v17 = v11 != 0;
    }
    else
    {
      __int16 v17 = 0;
    }
    sub_10004101C(v17);
    if (v8) {

    }
    if (!v9)
    {
      __int16 v22 = sub_100003318();
      memset(&v26, 0, sizeof(v26));
      sub_1000411D4((uint64_t)v22, &v26);
      if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_30;
      }
      float v14 = (void *)v26.__r_.__value_.__r.__words[0];
      goto LABEL_6;
    }
    int v18 = [v9 objectForKey:@"kCLRegGeoRegionMatchedKey"];
    int v19 = v18;
    if (v18)
    {
      __int16 v20 = [v18 objectForKey:@"kCLRegNameKey"];
      BOOL v21 = sub_100003318();
      if (v20) {
        sub_10000DD48(&v24, (char *)[v20 UTF8String]);
      }
      else {
        memset(&v24, 0, sizeof(v24));
      }
      sub_1000411D4((uint64_t)v21, &v24);
      if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v24.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      CLLocationDegrees v23 = sub_100003318();
      memset(&__p, 0, sizeof(__p));
      sub_1000411D4((uint64_t)v23, &__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
  }
LABEL_30:
}

void sub_100040E5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a21 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100040F18(uint64_t a1, int a2)
{
  BOOL v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 68289282;
    v7[1] = 0;
    __int16 v8 = 2082;
    id v9 = "";
    __int16 v10 = 1026;
    int v11 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,onCountrySupportChanged\", \"isSupported\":%{public}hhd}", (uint8_t *)v7, 0x18u);
  }
  *(_WORD *)(a1 + 46) = a2 | 0x100;
  id v5 = sub_100003318();
  __int16 v6 = *(unsigned __int8 *)(a1 + 47);
  if (*(unsigned char *)(a1 + 47)) {
    __int16 v6 = *(unsigned char *)(a1 + 46) != 0;
  }
  *((_WORD *)v5 + 48) = v6 | 0x100;
  sub_10003F7CC(a1, 0);
}

void sub_10004101C(__int16 a1)
{
  int8x8_t v2 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = sub_10006B474()[480];
    int v9 = 68289282;
    int v10 = 0;
    __int16 v11 = 2082;
    double v12 = "";
    __int16 v13 = 1026;
    int v14 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,onMotionHarvestOnlySupportChanged\", \"asset config value\":%{public}hhd}", (uint8_t *)&v9, 0x18u);
  }

  BOOL v4 = sub_10006B474();
  if (v4[480])
  {
    if ([*(id *)SAPlatformInfo::instance((SAPlatformInfo *)v4) isEqualToString:@"iPhone"])*((_WORD *)sub_100003318() + 49) = a1 | 0x100; {
    id v5 = (id)SALogObjectGeneral;
    }
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v6 = sub_100003318();
      if (*((unsigned char *)v6 + 99)) {
        BOOL v7 = *((unsigned char *)v6 + 98) == 0;
      }
      else {
        BOOL v7 = 1;
      }
      int v8 = !v7;
      int v9 = 68289283;
      int v10 = 0;
      __int16 v11 = 2082;
      double v12 = "";
      __int16 v13 = 1025;
      int v14 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,onMotionHarvestOnlySupportChanged\", \"isSupported\":%{private}hhd}", (uint8_t *)&v9, 0x18u);
    }
  }
}

void sub_1000411B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

std::string *sub_1000411D4(uint64_t a1, const std::string *a2)
{
  BOOL v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = a2;
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
      id v5 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    }
    v7[0] = 68289283;
    v7[1] = 0;
    __int16 v8 = 2082;
    int v9 = "";
    __int16 v10 = 2081;
    __int16 v11 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ss,setCountryName\", \"countryName\":%{private, location:escape_only}s}", (uint8_t *)v7, 0x1Cu);
  }
  return std::string::operator=((std::string *)(a1 + 64), a2);
}

void sub_1000412C0(uint64_t a1, int a2)
{
  BOOL v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289282;
    v5[1] = 0;
    __int16 v6 = 2082;
    BOOL v7 = "";
    __int16 v8 = 1026;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,onLocationAuthorized\", \"isAuthorized\":%{public}hhd}", (uint8_t *)v5, 0x18u);
  }
  *(_WORD *)(a1 + 40) = a2 | 0x100;
  if ((a2 & 1) == 0)
  {
    *(_WORD *)(a1 + 8) = 256;
    *(CLLocationCoordinate2D *)(a1 + 16) = kCLLocationCoordinate2DInvalid;
    *(void *)(a1 + 32) = 0xBFF0000000000000;
    sub_10004101C(0);
  }
  sub_10003F7CC(a1, 1);
}

void sub_1000413D0(uint64_t a1, int a2)
{
  int v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289282;
    v4[1] = 0;
    __int16 v5 = 2082;
    __int16 v6 = "";
    __int16 v7 = 1026;
    int v8 = a2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,onInexpensiveNetworkConnected\", \"isConnected\":%{public}hhd}", (uint8_t *)v4, 0x18u);
  }
}

long long *sub_100041494(uint64_t a1, int a2)
{
  int v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289282;
    v5[1] = 0;
    __int16 v6 = 2082;
    __int16 v7 = "";
    __int16 v8 = 1026;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,onCellNetworkConnected\", \"isConnected\":%{public}hhd}", (uint8_t *)v5, 0x18u);
  }
  double result = sub_100003318();
  *((_WORD *)result + 55) = a2 | 0x100;
  return result;
}

uint64_t sub_100041564(uint64_t a1)
{
  int8x8_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(unsigned __int8 *)(a1 + 257);
    v5[0] = 68289538;
    v5[1] = 0;
    __int16 v6 = 2082;
    __int16 v7 = "";
    __int16 v8 = 1026;
    int v9 = v3;
    __int16 v10 = 1026;
    int v11 = 1;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,isFeatureEnabled,\", \"fIsEnhanceDeliverySwitchEnabled,\":%{public}hhd, \"ffEnabled,\":%{public}hhd}", (uint8_t *)v5, 0x1Eu);
  }
  return *(unsigned __int8 *)(a1 + 257);
}

void sub_10004163C(uint64_t a1)
{
  int8x8_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = "true";
    if (*(unsigned char *)(a1 + 47))
    {
      if (*(unsigned char *)(a1 + 46)) {
        BOOL v4 = "true";
      }
      else {
        BOOL v4 = "false";
      }
    }
    else
    {
      BOOL v4 = "notSet";
    }
    if (*(unsigned char *)(a1 + 41))
    {
      if (*(unsigned char *)(a1 + 40)) {
        __int16 v5 = "true";
      }
      else {
        __int16 v5 = "false";
      }
    }
    else
    {
      __int16 v5 = "notSet";
    }
    if (*(unsigned char *)(a1 + 43))
    {
      if (*(unsigned char *)(a1 + 42)) {
        __int16 v6 = "true";
      }
      else {
        __int16 v6 = "false";
      }
    }
    else
    {
      __int16 v6 = "notSet";
    }
    if (*(unsigned char *)(a1 + 9))
    {
      if (*(unsigned char *)(a1 + 8)) {
        __int16 v7 = "true";
      }
      else {
        __int16 v7 = "false";
      }
    }
    else
    {
      __int16 v7 = "notSet";
    }
    if (*(unsigned char *)(a1 + 45))
    {
      if (*(unsigned char *)(a1 + 44)) {
        __int16 v8 = "true";
      }
      else {
        __int16 v8 = "false";
      }
    }
    else
    {
      __int16 v8 = "notSet";
    }
    if (*(unsigned char *)(a1 + 49))
    {
      if (*(unsigned char *)(a1 + 48)) {
        int v9 = "true";
      }
      else {
        int v9 = "false";
      }
    }
    else
    {
      int v9 = "notSet";
    }
    if (*(unsigned char *)(a1 + 51))
    {
      if (*(unsigned char *)(a1 + 50)) {
        __int16 v10 = "true";
      }
      else {
        __int16 v10 = "false";
      }
    }
    else
    {
      __int16 v10 = "notSet";
    }
    if (*(unsigned char *)(a1 + 53))
    {
      if (!*(unsigned char *)(a1 + 52)) {
        int v3 = "false";
      }
    }
    else
    {
      int v3 = "notSet";
    }
    uint64_t v11 = *(void *)(a1 + 72);
    v12[0] = 68291331;
    v12[1] = 0;
    __int16 v13 = 2082;
    int v14 = "";
    __int16 v15 = 2082;
    BOOL v16 = v4;
    __int16 v17 = 2082;
    int v18 = v5;
    __int16 v19 = 2082;
    __int16 v20 = v6;
    __int16 v21 = 2082;
    __int16 v22 = v7;
    __int16 v23 = 2082;
    std::string v24 = v8;
    __int16 v25 = 2082;
    std::string v26 = v9;
    __int16 v27 = 2082;
    uint64_t v28 = v10;
    __int16 v29 = 2082;
    id v30 = v3;
    __int16 v31 = 2049;
    uint64_t v32 = v11;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,states\", \"country\":%{public, location:escape_only}s, \"lsOn\":%{public, location:escape_only}s, \"telephony\":%{public, location:escape_only}s, \"locAvailable\":%{public, location:escape_only}s, \"fIsAllowedByNetwork\":%{public, location:escape_only}s, \"channelMapAvailable\":%{public, location:escape_only}s, \"isCompanionNearby\":%{public, location:escape_only}s, \"isParticipating\":%{public, location:escape_only}s, \"channelListSize\":%{private}lu}", (uint8_t *)v12, 0x6Cu);
  }
}

void sub_100041854(uint64_t a1, void *a2)
{
  int v3 = a2;
  BOOL v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289283;
    __int16 v42 = 2082;
    int v43 = "";
    __int16 v44 = 2113;
    unsigned int v45 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,onAssetReceived\", \"asset\":%{private, location:escape_only}@}", (uint8_t *)&buf, 0x1Cu);
  }
  uint64_t v6 = *(void *)(a1 + 232);
  for (uint64_t i = *(void *)(a1 + 240); i != v6; sub_100042A4C(i))
    i -= 40;
  *(void *)(a1 + 240) = v6;
  *(_WORD *)(a1 + 48) = 256;
  __int16 v7 = sub_100003318();
  __int16 v8 = *(unsigned __int8 *)(a1 + 49);
  if (*(unsigned char *)(a1 + 49)) {
    __int16 v8 = *(unsigned char *)(a1 + 48) != 0;
  }
  *((_WORD *)v7 + 50) = v8 | 0x100;
  uint64_t v37 = [v3 objectForKey:@"features"];
  if (v37 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    id v38 = v37;
    int v9 = (char *)[v38 count];
    __int16 v10 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t buf = 68289282;
      __int16 v42 = 2082;
      int v43 = "";
      __int16 v44 = 2050;
      unsigned int v45 = v9;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,features,size\", \"size\":%{public}lu}", (uint8_t *)&buf, 0x1Cu);
    }
    if (v9)
    {
      for (j = 0; j != v9; ++j)
      {
        double v12 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t buf = 68289282;
          __int16 v42 = 2082;
          int v43 = "";
          __int16 v44 = 1026;
          LODWORD(v45) = j;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,loop\", \"index\":%{public}d}", (uint8_t *)&buf, 0x18u);
        }
        __int16 v13 = [v38 objectAtIndex:j, v33];
        if (v13 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
        {
          int v14 = v13;
          __int16 v15 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t buf = 68289282;
            __int16 v42 = 2082;
            int v43 = "";
            __int16 v44 = 2114;
            unsigned int v45 = v14;
            _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,feature\", \"feature\":%{public, location:escape_only}@}", (uint8_t *)&buf, 0x1Cu);
          }
          BOOL v16 = [v14 objectForKey:@"properties"];
          if (v16 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
          {
            __int16 v17 = v16;
            int v18 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t buf = 68289282;
              __int16 v42 = 2082;
              int v43 = "";
              __int16 v44 = 2114;
              unsigned int v45 = v17;
              _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,properties\", \"properties\":%{public, location:escape_only}@}", (uint8_t *)&buf, 0x1Cu);
            }
            uint32_t v36 = v17;
            __int16 v19 = [v17 objectForKey:@"ch_config"];
            if (v19 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
            {
              __int16 v35 = [v19 objectForKey:@"mp_channel"];
              if (v35 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
              {
                id v34 = v35;
                __int16 v20 = [v14 objectForKey:@"geometry"];
                uint64_t v33 = v3;
                if (v20 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
                {
                  sub_10000DD48(__p, (char *)[v34 UTF8String]);
                  sub_100042AA0(&buf, v20, (long long *)__p);
                  if (v40 < 0) {
                    operator delete(__p[0]);
                  }
                  sub_1000421A0((int64x2_t *)(a1 + 232), (uint64_t)&buf);
                  sub_10004233C((uint64_t)&buf);
                }
                else
                {
                  std::string v26 = SALogObjectGeneral;
                  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                  {
                    uint64_t buf = 68289026;
                    __int16 v42 = 2082;
                    int v43 = "";
                    _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,geometryFailed\"}", (uint8_t *)&buf, 0x12u);
                  }
                }

                __int16 v23 = v33;
              }
              else
              {
                __int16 v23 = v3;
                __int16 v25 = SALogObjectGeneral;
                if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t buf = 68289026;
                  __int16 v42 = 2082;
                  int v43 = "";
                  _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,channelIdObjectFailed\"}", (uint8_t *)&buf, 0x12u);
                }
              }
            }
            else
            {
              __int16 v23 = v3;
              std::string v24 = SALogObjectGeneral;
              if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t buf = 68289026;
                __int16 v42 = 2082;
                int v43 = "";
                _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,channelConfigIdObjectFailed\"}", (uint8_t *)&buf, 0x12u);
              }
            }

            int v3 = v23;
          }
          else
          {
            __int16 v22 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t buf = 68289026;
              __int16 v42 = 2082;
              int v43 = "";
              _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,propertiesIdObjectFailed\"}", (uint8_t *)&buf, 0x12u);
            }
          }
        }
        else
        {
          __int16 v21 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t buf = 68289282;
            __int16 v42 = 2082;
            int v43 = "";
            __int16 v44 = 2050;
            unsigned int v45 = j;
            _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,elementIsNotDictionary\", \"index\":%{public}lu}", (uint8_t *)&buf, 0x1Cu);
          }
        }
      }
      __int16 v27 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        int v28 = -858993459 * ((*(void *)(a1 + 240) - *(void *)(a1 + 232)) >> 3);
        uint64_t buf = 68289282;
        __int16 v42 = 2082;
        int v43 = "";
        __int16 v44 = 1026;
        LODWORD(v45) = v28;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,features\", \"size\":%{public}d}", (uint8_t *)&buf, 0x18u);
      }
      if (*(void *)(a1 + 240) != *(void *)(a1 + 232))
      {
        *(_WORD *)(a1 + 48) = 257;
        __int16 v29 = sub_100003318();
        __int16 v30 = *(unsigned __int8 *)(a1 + 49);
        if (*(unsigned char *)(a1 + 49)) {
          __int16 v30 = *(unsigned char *)(a1 + 48) != 0;
        }
        *((_WORD *)v29 + 50) = v30 | 0x100;
      }
      sub_10003F7CC(a1, 0);
    }
    else
    {
      uint64_t v32 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t buf = 68289026;
        __int16 v42 = 2082;
        int v43 = "";
        _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,noFeatureInAsset\"}", (uint8_t *)&buf, 0x12u);
      }
    }
  }
  else
  {
    __int16 v31 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t buf = 68289026;
      __int16 v42 = 2082;
      int v43 = "";
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,invalid_features\"}", (uint8_t *)&buf, 0x12u);
    }
  }
}

void sub_1000420C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, uint64_t a18, void *a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26)
{
  sub_10004233C((uint64_t)&a26);

  _Unwind_Resume(a1);
}

uint64_t sub_1000421A0(int64x2_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1].u64[0];
  unint64_t v5 = a1->u64[1];
  if (v5 >= v4)
  {
    unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v5 - a1->i64[0]) >> 3);
    if (v8 + 1 > 0x666666666666666) {
      sub_1000050E8();
    }
    unint64_t v9 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v4 - a1->i64[0]) >> 3);
    uint64_t v10 = 2 * v9;
    if (2 * v9 <= v8 + 1) {
      uint64_t v10 = v8 + 1;
    }
    if (v9 >= 0x333333333333333) {
      unint64_t v11 = 0x666666666666666;
    }
    else {
      unint64_t v11 = v10;
    }
    __int16 v23 = a1 + 1;
    if (v11)
    {
      if (v11 > 0x666666666666666) {
        sub_100004E00();
      }
      double v12 = (char *)operator new(40 * v11);
    }
    else
    {
      double v12 = 0;
    }
    __int16 v20 = v12;
    v21.i64[0] = (uint64_t)&v12[40 * v8];
    __int16 v22 = &v12[40 * v11];
    sub_100042C2C(v21.i64[0], a2);
    uint64_t v13 = v21.i64[0];
    uint64_t v7 = v21.i64[0] + 40;
    v21.i64[1] = v21.i64[0] + 40;
    uint64_t v15 = a1->i64[0];
    unint64_t v14 = a1->u64[1];
    if (v14 == a1->i64[0])
    {
      int64x2_t v18 = vdupq_n_s64(v14);
    }
    else
    {
      do
      {
        long long v16 = *(_OWORD *)(v14 - 40);
        v14 -= 40;
        *(_OWORD *)(v13 - 40) = v16;
        v13 -= 40;
        *(void *)unint64_t v14 = 0;
        *(void *)(v14 + 8) = 0;
        long long v17 = *(_OWORD *)(v14 + 16);
        *(void *)(v13 + 32) = *(void *)(v14 + 32);
        *(_OWORD *)(v13 + 16) = v17;
        *(void *)(v14 + 24) = 0;
        *(void *)(v14 + 32) = 0;
        *(void *)(v14 + 16) = 0;
      }
      while (v14 != v15);
      int64x2_t v18 = *a1;
      uint64_t v7 = v21.i64[1];
    }
    a1->i64[0] = v13;
    a1->i64[1] = v7;
    int64x2_t v21 = v18;
    __int16 v19 = (char *)a1[1].i64[0];
    a1[1].i64[0] = (uint64_t)v22;
    __int16 v22 = v19;
    __int16 v20 = (char *)v18.i64[0];
    uint64_t result = sub_100042CB0((uint64_t)&v20);
  }
  else
  {
    uint64_t result = (uint64_t)sub_100042C2C((void *)a1->i64[1], a2);
    uint64_t v7 = v5 + 40;
    a1->i64[1] = v5 + 40;
  }
  a1->i64[1] = v7;
  return result;
}

void sub_10004231C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100042CB0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10004233C(uint64_t a1)
{
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  int8x8_t v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2) {
    sub_100028F6C(v2);
  }
  return a1;
}

void sub_10004237C(uint64_t a1, int a2)
{
  unint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 68289282;
    v7[1] = 0;
    __int16 v8 = 2082;
    unint64_t v9 = "";
    __int16 v10 = 1026;
    int v11 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,onTelephonySupport\", \"isSupported\":%{public}hhd}", (uint8_t *)v7, 0x18u);
  }
  *(_WORD *)(a1 + 42) = a2 | 0x100;
  unint64_t v5 = sub_100003318();
  __int16 v6 = *(unsigned __int8 *)(a1 + 43);
  if (*(unsigned char *)(a1 + 43)) {
    __int16 v6 = *(unsigned char *)(a1 + 42) != 0;
  }
  *((_WORD *)v5 + 46) = v6 | 0x100;
  sub_10003F7CC(a1, 0);
}

void sub_100042480(SAPlatformInfo *a1, __int16 a2)
{
  if ([*(id *)SAPlatformInfo::instance(a1) isEqualToString:@"Watch"])
  {
    *((_WORD *)a1 + 25) = a2 | 0x100;
    sub_10003F7CC((uint64_t)a1, 0);
  }
}

void sub_1000424E8(uint64_t a1, uint64_t *a2)
{
  int8x8_t v2 = (std::__shared_weak_count *)a2[1];
  uint64_t v3 = *a2;
  unint64_t v4 = v2;
  if (v2) {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1000272B8(&v3);
  if (v4) {
    sub_100028F6C(v4);
  }
}

void sub_100042538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_100028F6C(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_100042550(uint64_t a1, int a2)
{
  unint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289282;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    __int16 v8 = 1026;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,onEnhancedDeliveryEnabled,\", \"isEnabled,\":%{public}hhd}", (uint8_t *)v5, 0x18u);
  }
  *(unsigned char *)(a1 + 257) = a2;
  *((_WORD *)sub_100003318() + 53) = *(unsigned __int8 *)(a1 + 257) | 0x100;
  sub_10003F7CC(a1, 1);
}

void sub_100042640(uint64_t a1, unsigned __int8 *a2)
{
  BOOL v4 = *(unsigned char *)(a1 + 47)
    && *(unsigned char *)(a1 + 46)
    && *(unsigned char *)(a1 + 41)
    && *(unsigned char *)(a1 + 40)
    && *(unsigned char *)(a1 + 9)
    && *(unsigned char *)(a1 + 8) != 0;
  if (*(unsigned char *)(a1 + 51)) {
    BOOL v5 = *(unsigned char *)(a1 + 50) != 0;
  }
  else {
    BOOL v5 = 0;
  }
  __int16 v6 = (SAPlatformInfo *)[*(id *)SAPlatformInfo::instance((SAPlatformInfo *)a1) isEqualToString:@"iPhone"];
  int v7 = (int)v6;
  unsigned int v8 = [*(id *)SAPlatformInfo::instance(v6) isEqualToString:@"Watch"];
  char v9 = 0;
  *a2 = sub_10006F004(a1 + 256, (double *)(a1 + 16));
  if (!v5 && v4 && v8) {
    char v9 = sub_100041564(a1);
  }
  char v10 = 0;
  if (!v5 && (v4 & v7) != 0) {
    char v10 = sub_100041564(a1);
  }
  unsigned __int8 v11 = *a2;
  if (*a2) {
    unsigned __int8 v11 = v10 | v9;
  }
  a2[4] = v11;
  a2[1] = v4;
  a2[3] = v5;
  a2[2] = sub_100041564(a1);
  double v12 = sub_100003318();
  if (*((unsigned char *)v12 + 113)) {
    BOOL v13 = *((unsigned char *)v12 + 112) == 0;
  }
  else {
    BOOL v13 = 1;
  }
  char v14 = !v13;
  a2[5] = v14;
  if ([*(id *)SAPlatformInfo::instance((SAPlatformInfo *)v12) isEqualToString:@"iPhone"])
  {
    uint64_t v15 = +[MCProfileConnection sharedConnection];
    unsigned int v16 = [v15 isSafetyDataSubmissionAllowed];
  }
  else
  {
    unsigned int v16 = 0;
  }
  long long v17 = sub_100003318();
  BOOL v18 = 0;
  if (!*((unsigned char *)v17 + 117) || !*((unsigned char *)v17 + 116))
  {
LABEL_33:
    if (v16) {
      goto LABEL_34;
    }
    goto LABEL_38;
  }
  __int16 v19 = sub_100003318();
  if (*((unsigned char *)v19 + 99))
  {
    BOOL v18 = *((unsigned char *)v19 + 98) != 0;
    goto LABEL_33;
  }
  BOOL v18 = 0;
  if (v16)
  {
LABEL_34:
    if (a2[5]) {
      __int16 v20 = 1;
    }
    else {
      __int16 v20 = v18;
    }
    goto LABEL_39;
  }
LABEL_38:
  __int16 v20 = 0;
LABEL_39:
  *((_WORD *)sub_100003318() + 59) = v20 | 0x100;
  int64x2_t v21 = sub_100003318();
  if (*((unsigned char *)v21 + 119)) {
    BOOL v22 = *((unsigned char *)v21 + 118) == 0;
  }
  else {
    BOOL v22 = 1;
  }
  char v23 = !v22;
  a2[6] = v23;
  std::string v24 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v40 = v4;
    int v25 = a2[4];
    int v26 = a2[1];
    int v27 = a2[3];
    int v28 = a2[2];
    int v38 = *a2;
    int v39 = a2[5];
    __int16 v29 = sub_100003318();
    int v30 = *((unsigned __int8 *)v29 + 117);
    int v31 = *((unsigned __int8 *)v29 + 116);
    uint64_t v32 = sub_100003318();
    if (v30) {
      BOOL v33 = v31 == 0;
    }
    else {
      BOOL v33 = 1;
    }
    int v34 = !v33;
    if (*((unsigned char *)v32 + 99)) {
      BOOL v35 = *((unsigned char *)v32 + 98) == 0;
    }
    else {
      BOOL v35 = 1;
    }
    int v36 = a2[6];
    int v37 = !v35;
    *(_DWORD *)uint64_t buf = 68292099;
    int v42 = 0;
    __int16 v43 = 2082;
    __int16 v44 = "";
    __int16 v45 = 1025;
    int v46 = v25;
    __int16 v47 = 1025;
    int v48 = v26;
    __int16 v49 = 1025;
    int v50 = v27;
    __int16 v51 = 1025;
    int v52 = v28;
    __int16 v53 = 1025;
    int v54 = v38;
    __int16 v55 = 1025;
    BOOL v56 = v40;
    __int16 v57 = 1025;
    int v58 = v39;
    __int16 v59 = 1025;
    int v60 = v34;
    __int16 v61 = 1025;
    int v62 = v37;
    __int16 v63 = 1025;
    BOOL v64 = v18;
    __int16 v65 = 1025;
    unsigned int v66 = v16;
    __int16 v67 = 1025;
    int v68 = v36;
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,getIgneousStateParameters,state\", \"isEnabled\":%{private}hhd, \"inSupportedCountry\":%{private}hhd, \"isInMagnetMode\":%{private}hhd, \"isUserOptedIn\":%{private}hhd, \"inCoverageRegion\":%{private}hhd, \"isInCountry\":%{private}hhd, \"emergencyAlert\":%{private}hhd, \"motionHarvestPref\":%{private}hhd, \"motionHarvestOnlyInCountry\":%{private}hhd, \"motionHarvestAvailable\":%{private}hhd, \"improveSafety\":%{private}hhd, \"isMotionHarvestAllowed\":%{private}hhd}", buf, 0x5Au);
  }
}

void sub_1000429AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000429C8(void ***a1)
{
  uint64_t v1 = *a1;
  int8x8_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    BOOL v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 40;
        sub_100042A4C(v4);
      }
      while ((void *)v4 != v2);
      BOOL v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_100042A4C(uint64_t a1)
{
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  int8x8_t v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    sub_100028F6C(v2);
  }
}

void *sub_100042AA0(void *a1, void *a2, long long *a3)
{
  BOOL v5 = a2;
  __int16 v6 = operator new(0x48uLL);
  v6[1] = 0;
  _DWORD v6[2] = 0;
  void *v6 = off_1000F6E08;
  SAGeometry::SAGeometry((SAGeometry *)(v6 + 3), v5);
  *a1 = v7;
  a1[1] = v6;
  unsigned int v8 = a1 + 2;
  if (*((char *)a3 + 23) < 0)
  {
    sub_100004CB8(v8, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v9 = *a3;
    a1[4] = *((void *)a3 + 2);
    *(_OWORD *)unsigned int v8 = v9;
  }

  return a1;
}

void sub_100042B3C(_Unwind_Exception *a1)
{
  uint64_t v4 = *(std::__shared_weak_count **)(v2 + 8);
  if (v4) {
    sub_100028F6C(v4);
  }

  _Unwind_Resume(a1);
}

void sub_100042B74(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1000F6E08;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100042B94(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1000F6E08;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_100042BE8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = 0;

  uint64_t v3 = *(void **)(a1 + 24);
}

void *sub_100042C2C(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v4 = a1 + 2;
  if (*(char *)(a2 + 39) < 0)
  {
    sub_100004CB8(v4, *(void **)(a2 + 16), *(void *)(a2 + 24));
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    a1[4] = *(void *)(a2 + 32);
    *(_OWORD *)uint64_t v4 = v5;
  }
  return a1;
}

void sub_100042C98(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3) {
    sub_100028F6C(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100042CB0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 40;
    sub_100042A4C(i - 40);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

_OWORD *sub_100042D00(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  long long v5 = sub_100027B78((uint64_t)a1, &v9, a2);
  __int16 v6 = (_OWORD *)*v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    __int16 v6 = operator new(0x40uLL);
    _DWORD v6[2] = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    *((_DWORD *)v6 + 14) = *(_DWORD *)(a3 + 24);
    sub_100015DE4(a1, v9, v7, (uint64_t *)v6);
  }
  return v6;
}

void sub_100042D9C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  *a1 = off_1000F6E58;
  a1[1] = a3;
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  sub_100005488((uint64_t)(a1 + 5), a4);
  a1[9] = 0;
  sub_100005488((uint64_t)v8, (uint64_t)(a1 + 5));
  sub_100059E38(v7);
}

void sub_100042EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10)
{
  sub_100005404(&a10);
  uint64_t v14 = *(void *)(v11 + 72);
  *(void *)(v11 + 72) = 0;
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
  }
  sub_100005404(v12);
  sub_100005360(&a9);

  _Unwind_Resume(a1);
}

void sub_100042F54(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = SALogObjectGeneral;
  if (v3)
  {
    long long v5 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      SACommonUtils::getAnyCmam(v3, __p);
      __int16 v6 = v18 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)uint64_t buf = 68289283;
      int v20 = 0;
      __int16 v21 = 2082;
      BOOL v22 = "";
      __int16 v23 = 2081;
      std::string v24 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pull,onAlertReceived,cleanupPullsInProgress\", \"cmam\":%{private, location:escape_only}s}", buf, 0x1Cu);
      if (v18 < 0) {
        operator delete(__p[0]);
      }
    }

    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v7 = *(void *)(a1 + 24);
    uint64_t v9 = v3;
    if (v8 == v7) {
      goto LABEL_34;
    }
    uint64_t v10 = v7;
    while (!SACommonUtils::isHashMatch(v8, v9))
    {
      v8 += 24;
      if (v8 == v7) {
        goto LABEL_35;
      }
    }
    uint64_t v11 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      if (*(char *)(v8 + 23) >= 0) {
        uint64_t v12 = v8;
      }
      else {
        uint64_t v12 = *(void *)v8;
      }
      *(_DWORD *)uint64_t buf = 68289283;
      int v20 = 0;
      __int16 v21 = 2082;
      BOOL v22 = "";
      __int16 v23 = 2081;
      std::string v24 = (void **)v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pull,onAlertReceived,clearingPullHash\", \"hash\":%{private, location:escape_only}s}", buf, 0x1Cu);
    }
    if (v8 == v7) {
      goto LABEL_35;
    }
    uint64_t v13 = v8 + 24;
    if (v8 + 24 == v7)
    {
LABEL_34:
      uint64_t v10 = v8;
    }
    else
    {
      uint64_t v10 = v8;
      do
      {
        if (SACommonUtils::isHashMatch(v13, v9))
        {
          uint64_t v14 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            if (*(char *)(v13 + 23) >= 0) {
              uint64_t v15 = v13;
            }
            else {
              uint64_t v15 = *(void *)v13;
            }
            *(_DWORD *)uint64_t buf = 68289283;
            int v20 = 0;
            __int16 v21 = 2082;
            BOOL v22 = "";
            __int16 v23 = 2081;
            std::string v24 = (void **)v15;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pull,onAlertReceived,clearingPullHash\", \"hash\":%{private, location:escape_only}s}", buf, 0x1Cu);
          }
        }
        else
        {
          if (*(char *)(v10 + 23) < 0) {
            operator delete(*(void **)v10);
          }
          long long v16 = *(_OWORD *)v13;
          *(void *)(v10 + 16) = *(void *)(v13 + 16);
          *(_OWORD *)uint64_t v10 = v16;
          v10 += 24;
          *(unsigned char *)(v13 + 23) = 0;
          *(unsigned char *)uint64_t v13 = 0;
        }
        v13 += 24;
      }
      while (v13 != v7);
    }
LABEL_35:

    sub_1000432C4(a1 + 16, v10, *(long long **)(a1 + 24));
    goto LABEL_36;
  }
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v20 = 0;
    __int16 v21 = 2082;
    BOOL v22 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pull,#warning,onAlertReceived,dictionaryIsNil\"}", buf, 0x12u);
  }
LABEL_36:
}

void sub_100043290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1000432C4(uint64_t a1, uint64_t a2, long long *a3)
{
  if ((long long *)a2 != a3)
  {
    sub_1000439C0((uint64_t)&v9, a3, *(long long **)(a1 + 8), a2);
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)(a1 + 8);
    if (v7 != v5)
    {
      do
      {
        if (*(char *)(v7 - 1) < 0) {
          operator delete(*(void **)(v7 - 24));
        }
        v7 -= 24;
      }
      while (v7 != v6);
    }
    *(void *)(a1 + 8) = v6;
  }
  return a2;
}

void sub_10004334C(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0)
  {
    unint64_t v6 = *(void *)(a2 + 8);
    if (!v6) {
      return;
    }
    uint64_t v2 = a1 + 16;
    uint64_t v3 = *(void *)(a1 + 16);
    uint64_t v4 = (long long **)(a1 + 24);
    uint64_t v5 = *(void *)(a1 + 24);
    sub_100004CB8(__p, *(void **)a2, v6);
  }
  else
  {
    if (!*(unsigned char *)(a2 + 23)) {
      return;
    }
    uint64_t v2 = a1 + 16;
    uint64_t v3 = *(void *)(a1 + 16);
    uint64_t v4 = (long long **)(a1 + 24);
    uint64_t v5 = *(void *)(a1 + 24);
    *(_OWORD *)std::string __p = *(_OWORD *)a2;
    uint64_t v26 = *(void *)(a2 + 16);
  }
  if (v3 == v5) {
    goto LABEL_58;
  }
  uint64_t v7 = v26 >= 0 ? (void *)HIBYTE(v26) : __p[1];
  uint64_t v8 = v26 >= 0 ? __p : (void **)__p[0];
  while (1)
  {
    int v9 = *(char *)(v3 + 23);
    uint64_t v10 = v9 >= 0 ? (void *)*(unsigned __int8 *)(v3 + 23) : *(void **)(v3 + 8);
    uint64_t v11 = v9 >= 0 ? (const void *)v3 : *(const void **)v3;
    size_t v12 = (size_t)(v7 >= v10 ? v10 : v7);
    if (!memcmp(v11, v8, v12) && v7 == v10) {
      break;
    }
    v3 += 24;
    if (v3 == v5) {
      goto LABEL_58;
    }
  }
  uint64_t v14 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289283;
    int v28 = 0;
    __int16 v29 = 2082;
    int v30 = "";
    __int16 v31 = 2081;
    uint64_t v32 = v11;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pull,onAlertPullFailed,clearingPullHash\", \"hash\":%{private, location:escape_only}s}", buf, 0x1Cu);
  }
  if (v3 == v5)
  {
LABEL_58:
    uint64_t v3 = v5;
  }
  else
  {
    for (uint64_t i = (const void **)(v3 + 24); i != (const void **)v5; i += 3)
    {
      int v16 = *((char *)i + 23);
      if (v16 >= 0) {
        size_t v17 = *((unsigned __int8 *)i + 23);
      }
      else {
        size_t v17 = (size_t)i[1];
      }
      if (v16 >= 0) {
        char v18 = i;
      }
      else {
        char v18 = *i;
      }
      if (v26 >= 0) {
        __int16 v19 = (void *)HIBYTE(v26);
      }
      else {
        __int16 v19 = __p[1];
      }
      if (v26 >= 0) {
        int v20 = __p;
      }
      else {
        int v20 = (void **)__p[0];
      }
      if ((unint64_t)v19 >= v17) {
        size_t v21 = v17;
      }
      else {
        size_t v21 = (size_t)v19;
      }
      if (!memcmp(v18, v20, v21) && v19 == (void *)v17)
      {
        std::string v24 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = 68289283;
          int v28 = 0;
          __int16 v29 = 2082;
          int v30 = "";
          __int16 v31 = 2081;
          uint64_t v32 = v18;
          _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pull,onAlertPullFailed,clearingPullHash\", \"hash\":%{private, location:escape_only}s}", buf, 0x1Cu);
        }
      }
      else
      {
        if (*(char *)(v3 + 23) < 0) {
          operator delete(*(void **)v3);
        }
        long long v23 = *(_OWORD *)i;
        *(void *)(v3 + 16) = i[2];
        *(_OWORD *)uint64_t v3 = v23;
        v3 += 24;
        *((unsigned char *)i + 23) = 0;
        *(unsigned char *)uint64_t i = 0;
      }
    }
  }
  sub_1000432C4(v2, v3, *v4);
  if (SHIBYTE(v26) < 0) {
    operator delete(__p[0]);
  }
}

void sub_10004361C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

BOOL sub_100043640(uint64_t a1, uint64_t a2)
{
  int v4 = *(char *)(a2 + 23);
  if (v4 >= 0) {
    uint64_t v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v5 = *(void *)(a2 + 8);
  }
  unint64_t v6 = SALogObjectGeneral;
  BOOL result = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (!v5)
  {
    if (!result) {
      return result;
    }
    int v21 = 68289026;
    int v22 = 0;
    __int16 v23 = 2082;
    std::string v24 = "";
    size_t v12 = "{\"msg%{public}.0s\":\"#pull,#warning,notPulling,hashIsEmpty\"}";
    uint64_t v13 = v6;
    uint32_t v14 = 18;
    goto LABEL_24;
  }
  if (result)
  {
    uint64_t v8 = *(unsigned __int8 **)a2;
    if (v4 >= 0) {
      uint64_t v8 = (unsigned __int8 *)a2;
    }
    int v21 = 68289283;
    int v22 = 0;
    __int16 v23 = 2082;
    std::string v24 = "";
    __int16 v25 = 2081;
    uint64_t v26 = v8;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#dbg,#pull\", \"hash\":%{private, location:escape_only}s}", (uint8_t *)&v21, 0x1Cu);
  }
  if (sub_100029E58(*(void *****)(a1 + 8), a2))
  {
    uint64_t v9 = SALogObjectGeneral;
    BOOL v10 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    BOOL result = 0;
    if (!v10) {
      return result;
    }
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v11 = (unsigned __int8 *)a2;
    }
    else {
      uint64_t v11 = *(unsigned __int8 **)a2;
    }
    int v21 = 68289283;
    int v22 = 0;
    __int16 v23 = 2082;
    std::string v24 = "";
    __int16 v25 = 2081;
    uint64_t v26 = v11;
    size_t v12 = "{\"msg%{public}.0s\":\"#pull,#warning,notPulling,saAlreadyFound\", \"hash\":%{private, location:escape_only}s}";
    uint64_t v13 = v9;
LABEL_23:
    uint32_t v14 = 28;
LABEL_24:
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, v12, (uint8_t *)&v21, v14);
    return 0;
  }
  unint64_t v15 = sub_100004E34(*(void *)(a1 + 16), *(void *)(a1 + 24), (unsigned __int8 **)a2);
  uint64_t v16 = *(void *)(a1 + 24);
  size_t v17 = SALogObjectGeneral;
  BOOL result = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v15 != v16)
  {
    if (!result) {
      return result;
    }
    if (*(char *)(a2 + 23) >= 0) {
      char v18 = (unsigned __int8 *)a2;
    }
    else {
      char v18 = *(unsigned __int8 **)a2;
    }
    int v21 = 68289283;
    int v22 = 0;
    __int16 v23 = 2082;
    std::string v24 = "";
    __int16 v25 = 2081;
    uint64_t v26 = v18;
    size_t v12 = "{\"msg%{public}.0s\":\"#pull,#warning,notPulling,alreadyInProgress\", \"hash\":%{private, location:escape_only}s}";
    uint64_t v13 = v17;
    goto LABEL_23;
  }
  if (result)
  {
    if (*(char *)(a2 + 23) >= 0) {
      __int16 v19 = (unsigned __int8 *)a2;
    }
    else {
      __int16 v19 = *(unsigned __int8 **)a2;
    }
    int v21 = 68289283;
    int v22 = 0;
    __int16 v23 = 2082;
    std::string v24 = "";
    __int16 v25 = 2081;
    uint64_t v26 = v19;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pull,pullTriggered\", \"hash\":%{private, location:escape_only}s}", (uint8_t *)&v21, 0x1Cu);
    unint64_t v15 = *(void *)(a1 + 24);
  }
  if (v15 >= *(void *)(a1 + 32))
  {
    uint64_t v20 = sub_100004F4C((uint64_t *)(a1 + 16), (long long *)a2);
  }
  else
  {
    sub_100004EEC((void *)(a1 + 16), (long long *)a2);
    uint64_t v20 = v15 + 24;
  }
  *(void *)(a1 + 24) = v20;
  (*(void (**)(void, uint64_t))(**(void **)(a1 + 72) + 16))(*(void *)(a1 + 72), a2);
  return 1;
}

void sub_100043988(uint64_t a1)
{
  sub_100043A34(a1);

  operator delete();
}

long long *sub_1000439C0(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if (*(char *)(a4 + 23) < 0) {
        operator delete(*(void **)a4);
      }
      long long v7 = *v5;
      *(void *)(a4 + 16) = *((void *)v5 + 2);
      *(_OWORD *)a4 = v7;
      a4 += 24;
      *((unsigned char *)v5 + 23) = 0;
      *(unsigned char *)uint64_t v5 = 0;
      uint64_t v5 = (long long *)((char *)v5 + 24);
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

uint64_t sub_100043A34(uint64_t a1)
{
  *(void *)a1 = off_1000F6E58;
  uint64_t v2 = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  sub_100005404((void *)(a1 + 40));
  int v4 = (void **)(a1 + 16);
  sub_100005360(&v4);
  return a1;
}

uint64_t sub_100043AC4(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    unint64_t v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#brm,initializing\"}", (uint8_t *)v4, 0x12u);
  }
  return a1;
}

uint64_t sub_100043B80(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    unint64_t v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#brm,destructor\"}", (uint8_t *)v4, 0x12u);
  }
  return a1;
}

void sub_100043C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int16 v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v15 = 68289026;
    __int16 v16 = 2082;
    *(void *)size_t v17 = "";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#brm,onBleAlertReceived\"}", (uint8_t *)&v15, 0x12u);
  }
  double Current = CFAbsoluteTimeGetCurrent();
  long long v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a2 + 344);
    uint64_t v15 = 68289538;
    __int16 v16 = 2082;
    *(void *)size_t v17 = "";
    *(_WORD *)&v17[8] = 2050;
    *(double *)char v18 = Current;
    *(_WORD *)&v18[8] = 2050;
    *(void *)&v18[10] = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#brm,onBleAlertReceived\", \"nowSeconds\":\"%{public}0.7f\", \"bleAdvertiseTime\":\"%{public}0.7f\"}", (uint8_t *)&v15, 0x26u);
  }
  LOBYTE(v26) = 0;
  char v27 = 0;
  LOBYTE(v28) = 0;
  char v29 = 0;
  char v30 = 0;
  char v31 = 0;
  *(_OWORD *)__int16 v19 = 0u;
  *(_OWORD *)uint64_t v20 = 0u;
  long long v21 = 0u;
  *(_OWORD *)int v22 = 0u;
  *(_OWORD *)__int16 v23 = 0u;
  long long v24 = 0u;
  memset(__p, 0, sizeof(__p));
  uint64_t v15 = *(void *)&Current;
  LOBYTE(v16) = *(unsigned char *)(a3 + 1);
  uint64_t v9 = sub_100003318();
  float v10 = *(float *)(a3 + 8);
  *(_DWORD *)&v17[2] = (int)*((double *)v9 + 16);
  *(_DWORD *)&v17[6] = (int)v10;
  *(_DWORD *)char v18 = *(_DWORD *)(a3 + 4);
  std::string::operator=((std::string *)&v20[1], (const std::string *)(a2 + 176));
  std::string::operator=((std::string *)v19, (const std::string *)(a2 + 8));
  if (SHIBYTE(v23[0]) < 0)
  {
    v22[1] = (void *)9;
    uint64_t v11 = (char *)v22[0];
  }
  else
  {
    uint64_t v11 = (char *)v22;
    HIBYTE(v23[0]) = 9;
  }
  strcpy(v11, "Recipient");
  if (SHIBYTE(v24) < 0)
  {
    *(void *)&long long v24 = 3;
    size_t v12 = (void **)v23[1];
  }
  else
  {
    size_t v12 = &v23[1];
    HIBYTE(v24) = 3;
  }
  *(_DWORD *)size_t v12 = 6646850;
  if ((__p[23] & 0x80000000) != 0)
  {
    *(void *)&__p[8] = 10;
    uint64_t v13 = *(char **)__p;
  }
  else
  {
    uint64_t v13 = __p;
    __p[23] = 10;
  }
  strcpy(v13, "Advertiser");
  int v26 = *(_DWORD *)(a2 + 336);
  char v27 = 1;
  int v28 = v26;
  char v29 = 1;
  double v14 = (Current - *(double *)(a2 + 344)) * 1000.0;
  *(double *)&void v18[4] = (Current - *(double *)(a2 + 216)) * 1000.0;
  *(double *)&v18[12] = v14;
  int v32 = sub_100043F88();
  sub_10004405C((uint64_t)&v15);
  if ((__p[23] & 0x80000000) != 0) {
    operator delete(*(void **)__p);
  }
  if (SHIBYTE(v24) < 0) {
    operator delete(v23[1]);
  }
  if (SHIBYTE(v23[0]) < 0) {
    operator delete(v22[0]);
  }
  if (SHIBYTE(v21) < 0) {
    operator delete(v20[1]);
  }
  if (SHIBYTE(v20[0]) < 0) {
    operator delete(v19[0]);
  }
}

void sub_100043F68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100043F88()
{
  v4[0] = 0;
  *(_OWORD *)&void v4[4] = xmmword_1000B2340;
  *(_OWORD *)&v4[20] = xmmword_1000B2350;
  *(void *)&v4[36] = &_mh_execute_header;
  memset(&v4[44], 0, 24);
  int v5 = 0;
  v0 = sub_10006B474();
  long long v1 = *((_OWORD *)v0 + 26);
  *(_OWORD *)int v4 = *((_OWORD *)v0 + 25);
  *(_OWORD *)&v4[16] = v1;
  *(_OWORD *)&v4[32] = *((_OWORD *)v0 + 27);
  if (v0 + 400 == v4) {
    return *(unsigned int *)&v4[4];
  }
  sub_1000174C8(&v4[48], *((uint64_t **)v0 + 56), *((uint64_t **)v0 + 57), (uint64_t)(*((void *)v0 + 57) - *((void *)v0 + 56)) >> 3);
  uint64_t v2 = *(unsigned int *)&v4[4];
  if (*(void *)&v4[48])
  {
    *(void *)&v4[56] = *(void *)&v4[48];
    operator delete(*(void **)&v4[48]);
  }
  return v2;
}

void sub_100044040(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10004405C(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v28 = 0;
    __int16 v29 = 2082;
    char v30 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#brm,submitMetrics\"}", buf, 0x12u);
  }
  AnalyticsSendEventLazy();
  uint64_t v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v5 = a1 + 40;
    uint64_t v4 = v6;
    int v7 = *(unsigned __int8 *)(v5 - 32);
    if (*(unsigned char *)(v5 + 121)) {
      unsigned __int8 v8 = *(unsigned char *)(v5 + 120);
    }
    else {
      unsigned __int8 v8 = 0;
    }
    int v9 = v8;
    int v11 = *(_DWORD *)(v5 - 28);
    int v10 = *(_DWORD *)(v5 - 24);
    int v12 = *(_DWORD *)(v5 - 20);
    int v13 = *(_DWORD *)(v5 + 160);
    if (*(unsigned char *)(v5 + 128)) {
      int v14 = *(_DWORD *)(v5 + 124);
    }
    else {
      int v14 = 0;
    }
    if (*(unsigned char *)(v5 + 136)) {
      int v15 = *(_DWORD *)(v5 + 132);
    }
    else {
      int v15 = 0;
    }
    if (*(unsigned char *)(v5 + 152)) {
      uint64_t v16 = *(void *)(v5 + 144);
    }
    else {
      uint64_t v16 = 0;
    }
    uint64_t v18 = *(void *)(v5 - 16);
    uint64_t v17 = *(void *)(v5 - 8);
    if (*(char *)(v5 + 23) >= 0) {
      uint64_t v4 = v5;
    }
    if (*(char *)(v5 + 47) >= 0) {
      uint64_t v19 = v5 + 24;
    }
    else {
      uint64_t v19 = *(void *)(v5 + 24);
    }
    if (*(char *)(v5 + 71) >= 0) {
      uint64_t v20 = v5 + 48;
    }
    else {
      uint64_t v20 = *(void *)(v5 + 48);
    }
    if (*(char *)(v5 + 95) >= 0) {
      uint64_t v21 = v5 + 72;
    }
    else {
      uint64_t v21 = *(void *)(v5 + 72);
    }
    int v22 = *(char *)(v5 + 119);
    uint64_t v25 = *(void *)(v5 + 96);
    uint64_t v24 = v5 + 96;
    uint64_t v23 = v25;
    if (v22 >= 0) {
      uint64_t v26 = v24;
    }
    else {
      uint64_t v26 = v23;
    }
    *(_DWORD *)uint64_t buf = 68293123;
    int v28 = 0;
    __int16 v29 = 2082;
    char v30 = "";
    __int16 v31 = 1025;
    int v32 = v7;
    __int16 v33 = 1025;
    int v34 = v9;
    __int16 v35 = 1025;
    int v36 = v11;
    __int16 v37 = 1025;
    int v38 = v10;
    __int16 v39 = 1025;
    int v40 = v12;
    __int16 v41 = 1025;
    int v42 = v13;
    __int16 v43 = 1025;
    int v44 = v14;
    __int16 v45 = 1025;
    int v46 = v15;
    __int16 v47 = 2049;
    uint64_t v48 = v16;
    __int16 v49 = 2049;
    uint64_t v50 = v17;
    __int16 v51 = 2049;
    uint64_t v52 = v18;
    __int16 v53 = 2081;
    uint64_t v54 = v4;
    __int16 v55 = 2081;
    uint64_t v56 = v19;
    __int16 v57 = 2081;
    uint64_t v58 = v20;
    __int16 v59 = 2081;
    uint64_t v60 = v21;
    __int16 v61 = 2081;
    uint64_t v62 = v26;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"brm,submitMetrics\", \"isBleAdvertiser\":%{private}hhd, \"wasSAReceived\":%{private}hhd, \"batteryChargeLevel\":%{private}d, \"bleRelayFanOutSetting\":%{private}d, \"meanNumNearbyDevices\":%{private}d, \"bleRelayAdvertiseDuration\":%{private}d, \"bleReceivedRSSI\":%{private}d, \"bleReceivedRSSIBucketed\":%{private}d, \"bleLatencyRelativeToSATime\":\"%{private}0.2f\", \"latencyRelativeToBleAdvertiseTime\":\"%{private}0.2f\", \"latencyRelativeToOriginatorTime\":\"%{private}0.2f\", \"alertUID\":%{private, location:escape_only}s, \"bleAlertUID\":%{private, location:escape_only}s, \"deviceRole\":%{private, location:escape_only}s, \"pushInterface\":%{private, location:escape_only}s, \"source\":%{private, location:escape_only}s}", buf, 0x92u);
  }
}

uint64_t sub_100044318(uint64_t a1)
{
  if (*(char *)(a1 + 159) < 0) {
    operator delete(*(void **)(a1 + 136));
  }
  if (*(char *)(a1 + 135) < 0) {
    operator delete(*(void **)(a1 + 112));
  }
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  return a1;
}

void sub_10004438C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v13[0] = 68289026;
    v13[1] = 0;
    __int16 v14 = 2082;
    *(void *)int v15 = "";
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#brm,onBleAlertSent\"}", (uint8_t *)v13, 0x12u);
  }
  double Current = CFAbsoluteTimeGetCurrent();
  char v25 = 0;
  char v26 = 0;
  char v27 = 0;
  char v28 = 0;
  char v29 = 0;
  char v30 = 0;
  *(_OWORD *)uint64_t v18 = 0u;
  *(_OWORD *)uint64_t v19 = 0u;
  long long v20 = 0u;
  *(_OWORD *)uint64_t v21 = 0u;
  *(_OWORD *)int v22 = 0u;
  long long v23 = 0u;
  memset(__p, 0, sizeof(__p));
  LOBYTE(v14) = *(unsigned char *)(a4 + 1);
  int v9 = sub_100003318();
  float v10 = *(float *)(a4 + 8);
  *(_DWORD *)&_DWORD v15[2] = (int)*((double *)v9 + 16);
  *(_DWORD *)&void v15[6] = (int)v10;
  int v16 = *(_DWORD *)(a4 + 4);
  std::string::operator=((std::string *)&v19[1], (const std::string *)(a2 + 176));
  std::string::operator=((std::string *)v18, (const std::string *)(a2 + 8));
  if (SHIBYTE(v22[0]) < 0)
  {
    v21[1] = (void *)10;
    int v11 = (char *)v21[0];
  }
  else
  {
    int v11 = (char *)v21;
    HIBYTE(v22[0]) = 10;
  }
  strcpy(v11, "Advertiser");
  if ((__p[23] & 0x80000000) != 0)
  {
    *(void *)&__p[8] = 4;
    int v12 = *(char **)__p;
  }
  else
  {
    int v12 = __p;
    __p[23] = 4;
  }
  strcpy(v12, "APNS");
  double v17 = (Current - *(double *)(a2 + 216)) * 1000.0;
  *(_WORD *)&__p[24] = 257;
  int v31 = sub_100043F88();
  sub_1000496F0((uint64_t *)(a3 + 64), (uint64_t *)&v22[1]);
  sub_10004405C((uint64_t)v13);
  if ((__p[23] & 0x80000000) != 0) {
    operator delete(*(void **)__p);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete(v22[1]);
  }
  if (SHIBYTE(v22[0]) < 0) {
    operator delete(v21[0]);
  }
  if (SHIBYTE(v20) < 0) {
    operator delete(v19[1]);
  }
  if (SHIBYTE(v19[0]) < 0) {
    operator delete(v18[0]);
  }
}

void sub_1000445FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

id sub_10004461C(uint64_t a1)
{
  uint64_t v2 = objc_opt_new();
  uint64_t v3 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 8)];
  [v2 setObject:v3 forKeyedSubscript:@"isBleAdvertiser"];

  uint64_t v4 = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 12)];
  [v2 setObject:v4 forKeyedSubscript:@"batteryChargeLevel"];

  uint64_t v5 = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 16)];
  [v2 setObject:v5 forKeyedSubscript:@"bleRelayFanOutSetting"];

  uint64_t v6 = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 20)];
  [v2 setObject:v6 forKeyedSubscript:@"meanNumNearbyDevices"];

  int v7 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 32)];
  [v2 setObject:v7 forKeyedSubscript:@"latencyRelativeToBleAdvertiseTime"];

  unsigned __int8 v8 = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 24)];
  [v2 setObject:v8 forKeyedSubscript:@"latencyRelativeToOriginatorTime"];

  uint64_t v9 = *(void *)(a1 + 32);
  float v10 = (void *)(v9 + 40);
  if (*(char *)(v9 + 63) < 0) {
    float v10 = (void *)*v10;
  }
  int v11 = +[NSString stringWithUTF8String:v10];
  [v2 setObject:v11 forKeyedSubscript:@"alertUID"];

  uint64_t v12 = *(void *)(a1 + 32);
  int v13 = (void *)(v12 + 64);
  if (*(char *)(v12 + 87) < 0) {
    int v13 = (void *)*v13;
  }
  __int16 v14 = +[NSString stringWithUTF8String:v13];
  [v2 setObject:v14 forKeyedSubscript:@"bleAlertUID"];

  uint64_t v15 = *(void *)(a1 + 32);
  int v16 = (void *)(v15 + 88);
  if (*(char *)(v15 + 111) < 0) {
    int v16 = (void *)*v16;
  }
  double v17 = +[NSString stringWithUTF8String:v16];
  [v2 setObject:v17 forKeyedSubscript:@"deviceRole"];

  uint64_t v18 = *(void *)(a1 + 32);
  uint64_t v19 = (void *)(v18 + 112);
  if (*(char *)(v18 + 135) < 0) {
    uint64_t v19 = (void *)*v19;
  }
  long long v20 = +[NSString stringWithUTF8String:v19];
  [v2 setObject:v20 forKeyedSubscript:@"pushInterface"];

  uint64_t v21 = *(void *)(a1 + 32);
  int v22 = (void *)(v21 + 136);
  if (*(char *)(v21 + 159) < 0) {
    int v22 = (void *)*v22;
  }
  long long v23 = +[NSString stringWithUTF8String:v22];
  [v2 setObject:v23 forKeyedSubscript:@"source"];

  uint64_t v24 = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 200)];
  [v2 setObject:v24 forKeyedSubscript:@"bleRelayAdvertiseDuration"];

  uint64_t v25 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v25 + 161))
  {
    char v26 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v25 + 160)];
    [v2 setObject:v26 forKeyedSubscript:@"wasSAReceived"];

    uint64_t v25 = *(void *)(a1 + 32);
  }
  if (*(unsigned char *)(v25 + 168))
  {
    char v27 = +[NSNumber numberWithInt:*(unsigned int *)(v25 + 164)];
    [v2 setObject:v27 forKeyedSubscript:@"bleReceivedRSSI"];

    uint64_t v25 = *(void *)(a1 + 32);
  }
  if (*(unsigned char *)(v25 + 176))
  {
    char v28 = +[NSNumber numberWithInt:*(unsigned int *)(v25 + 172)];
    [v2 setObject:v28 forKeyedSubscript:@"bleReceivedRSSIBucketed"];

    uint64_t v25 = *(void *)(a1 + 32);
  }
  if (*(unsigned char *)(v25 + 192))
  {
    char v29 = +[NSNumber numberWithDouble:*(double *)(v25 + 184)];
    [v2 setObject:v29 forKeyedSubscript:@"bleLatencyRelativeToSATime"];
  }

  return v2;
}

void sub_1000449D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100044A2C(uint64_t a1, void *a2, uint64_t a3, double a4)
{
  id v7 = a2;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)a1 = off_1000F6E88;
  *(void *)(a1 + 8) = v7;
  id v8 = v7;
  *(_OWORD *)(a1 + 64) = 0u;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a3;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(void *)(a1 + 128) = 0;
  sub_10000DD48((void *)(a1 + 136), "None");
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  sub_10000DD48((void *)(a1 + 208), "NotAvailable");
  sub_10000DD48((void *)(a1 + 232), "Unknown");
  sub_10000DD48((void *)(a1 + 256), "Unknown");
  sub_10000DD48((void *)(a1 + 280), "Unknown");
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 328) = -1;
  *(void *)(a1 + 357) = 0x1000000000000;
  *(unsigned char *)(a1 + 365) = 1;
  *(void *)(a1 + 366) = 0;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(void *)(a1 + 424) = 0xBFF0000000000000;
  *(void *)(a1 + 432) = 0;
  *(unsigned char *)(a1 + 440) = 0;
  *(void *)(a1 + 444) = 0;
  *(void *)(a1 + 456) = (unint64_t)a4;
  *(void *)(a1 + 464) = 0;
  *(void *)(a1 + 472) = 0;
  *(void *)(a1 + 480) = 0;
  operator new();
}

void sub_100044D24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, uint64_t a10)
{
  uint64_t v15 = *(void **)(v10 + 464);
  if (v15)
  {
    *(void *)(v10 + 472) = v15;
    operator delete(v15);
  }
  sub_10004CEB0(a10);
  if (*(char *)(v10 + 87) < 0) {
    operator delete(*v14);
  }
  int v16 = *(void ***)(v10 + 48);
  *(void *)(v10 + 48) = 0;
  if (v16) {
    sub_10004DB28(v16);
  }
  sub_100021F60(v12, 0);
  uint64_t v17 = *v13;
  *int v13 = 0;
  if (v17) {
    (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_100044E94(uint64_t a1)
{
  *(void *)a1 = off_1000F6E88;
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 68289026;
    v7[1] = 0;
    __int16 v8 = 2082;
    uint64_t v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,released\"}", (uint8_t *)v7, 0x12u);
  }
  uint64_t v3 = *(void **)(a1 + 464);
  if (v3)
  {
    *(void *)(a1 + 472) = v3;
    operator delete(v3);
  }
  sub_10004CEB0(a1 + 88);
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  uint64_t v4 = *(void ***)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  if (v4) {
    sub_10004DB28(v4);
  }
  sub_100021F60((id **)(a1 + 40), 0);
  uint64_t v5 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }

  return a1;
}

void sub_100044FF8(uint64_t a1)
{
  sub_100044E94(a1);

  operator delete();
}

void sub_100045030(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = (unint64_t)*(double *)(a2 + 8);
  *(void *)(a1 + 456) = v2;
  uint64_t v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    v4[0] = 68289282;
    v4[1] = 0;
    __int16 v5 = 2082;
    uint64_t v6 = "";
    __int16 v7 = 2050;
    unint64_t v8 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#eff,updateMaConfig\", \"fRollingPeriodSeconds\":%{public}llu}", (uint8_t *)v4, 0x1Cu);
  }
}

void sub_1000450FC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 24))
  {
    uint64_t v4 = sub_10003E368();
    if (*((char *)v4 + 215) < 0)
    {
      sub_100004CB8(buf, (void *)v4[24], v4[25]);
    }
    else
    {
      *(_OWORD *)uint64_t buf = *((_OWORD *)v4 + 12);
      *(void *)&buf[16] = v4[26];
    }
    uint64_t v6 = buf[23];
    LOBYTE(v7) = buf[23];
    uint64_t v8 = *(void *)&buf[8];
    if (buf[23] >= 0) {
      uint64_t v9 = buf[23];
    }
    else {
      uint64_t v9 = *(void *)&buf[8];
    }
    if (!v9)
    {
      uint64_t v10 = sub_10006B474();
      if (v10[47] < 0)
      {
        sub_100004CB8(__dst, *((void **)v10 + 3), *((void *)v10 + 4));
      }
      else
      {
        *(_OWORD *)long long __dst = *(_OWORD *)(v10 + 24);
        *(void *)&__dst[16] = *((void *)v10 + 5);
      }
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      *(void *)&buf[16] = *(void *)&__dst[16];
      *(_OWORD *)uint64_t buf = *(_OWORD *)__dst;
      uint64_t v6 = HIBYTE(*(void *)&__dst[16]);
      uint64_t v8 = *(void *)&__dst[8];
      uint64_t v7 = HIBYTE(*(void *)&__dst[16]);
    }
    if ((v7 & 0x80u) != 0) {
      uint64_t v6 = v8;
    }
    if (v6)
    {
      uint64_t v11 = *(void *)(a1 + 40);
      if (v11 && *(unsigned char *)(v11 + 32))
      {
        uint64_t v12 = sub_10006B474();
        if (v12[95] < 0)
        {
          sub_100004CB8(__dst, *((void **)v12 + 9), *((void *)v12 + 10));
        }
        else
        {
          *(_OWORD *)long long __dst = *(_OWORD *)(v12 + 72);
          *(void *)&__dst[16] = *((void *)v12 + 11);
        }
        uint64_t v18 = (void **)(a1 + 64);
        if (*(char *)(a1 + 87) < 0) {
          operator delete(*v18);
        }
        *(_OWORD *)uint64_t v18 = *(_OWORD *)__dst;
        *(void *)(a1 + 80) = *(void *)&__dst[16];
        if (*(char *)(a1 + 87) < 0)
        {
          if (*(void *)(a1 + 72)) {
            goto LABEL_39;
          }
        }
        else if (*(unsigned char *)(a1 + 87))
        {
LABEL_39:
          SACommonUtils::getHashForString((char *)(a1 + 64), (uint64_t *)&__p);
          if (buf[23] >= 0) {
            uint64_t v19 = buf;
          }
          else {
            uint64_t v19 = *(const std::string::value_type **)buf;
          }
          if (buf[23] >= 0) {
            std::string::size_type v20 = buf[23];
          }
          else {
            std::string::size_type v20 = *(void *)&buf[8];
          }
          uint64_t v21 = std::string::insert(&__p, 0, v19, v20);
          long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
          *(void *)&__dst[16] = *((void *)&v21->__r_.__value_.__l + 2);
          *(_OWORD *)long long __dst = v22;
          v21->__r_.__value_.__l.__size_ = 0;
          v21->__r_.__value_.__r.__words[2] = 0;
          v21->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          sub_10000DD48(&v38, "/var/mobile/Library/com.apple.safetyalerts/");
          int v23 = *(char *)(a1 + 87);
          if (v23 >= 0) {
            uint64_t v24 = (const std::string::value_type *)(a1 + 64);
          }
          else {
            uint64_t v24 = *(const std::string::value_type **)(a1 + 64);
          }
          if (v23 >= 0) {
            std::string::size_type v25 = *(unsigned __int8 *)(a1 + 87);
          }
          else {
            std::string::size_type v25 = *(void *)(a1 + 72);
          }
          char v26 = std::string::append(&v38, v24, v25);
          long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
          __p.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v27;
          v26->__r_.__value_.__l.__size_ = 0;
          v26->__r_.__value_.__r.__words[2] = 0;
          v26->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v38.__r_.__value_.__l.__data_);
          }
          char v28 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            v38.__r_.__value_.__r.__words[0] = 68289026;
            LOWORD(v38.__r_.__value_.__r.__words[1]) = 2082;
            *(std::string::size_type *)((char *)&v38.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
            _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,downloadManifest,downloadingManifest\"}", (uint8_t *)&v38, 0x12u);
          }
          uint64_t v29 = *(void *)(a1 + 40);
          double v30 = *((double *)sub_10003E368() + 36);
          v33[0] = _NSConcreteStackBlock;
          v33[1] = 3321888768;
          v33[2] = sub_100045BD0;
          void v33[3] = &unk_1000F6ED8;
          v33[4] = a1;
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            sub_100004CB8(&v34, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
          }
          else {
            std::string v34 = __p;
          }
          sub_10004DB88((uint64_t)v35, a2);
          __int16 v37 = 0;
          v36[0] = off_1000F5E28;
          v36[1] = objc_retainBlock(v33);
          __int16 v37 = v36;
          sub_100064BA8(v29, (uint64_t *)__dst, (uint64_t)&__p, 3, (uint64_t)v36, v30);
          sub_100021E70(v36);
          sub_100021E70(v35);
          if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v34.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          if ((__dst[23] & 0x80000000) != 0) {
            operator delete(*(void **)__dst);
          }
          goto LABEL_31;
        }
        int v31 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(void *)long long __dst = 68289026;
          *(_WORD *)&__dst[8] = 2082;
          *(void *)&__dst[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,#warning,downloadManifest,empty manifest file name\"}", __dst, 0x12u);
        }
        __int16 v14 = *(NSObject **)(a1 + 24);
        v39[0] = _NSConcreteStackBlock;
        v39[1] = 3321888768;
        void v39[2] = sub_100045AD4;
        v39[3] = &unk_1000F6EA8;
        uint64_t v15 = v40;
        sub_10004DB88((uint64_t)v40, a2);
        int v16 = v39;
      }
      else
      {
        int v13 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(void *)long long __dst = 68289026;
          *(_WORD *)&__dst[8] = 2082;
          *(void *)&__dst[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,#warning,downloadManifest,downloaderNotReady\"}", __dst, 0x12u);
        }
        __int16 v14 = *(NSObject **)(a1 + 24);
        v41[0] = _NSConcreteStackBlock;
        v41[1] = 3321888768;
        v41[2] = sub_1000459D8;
        v41[3] = &unk_1000F6EA8;
        uint64_t v15 = v42;
        sub_10004DB88((uint64_t)v42, a2);
        int v16 = v41;
      }
    }
    else
    {
      uint64_t v17 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(void *)long long __dst = 68289026;
        *(_WORD *)&__dst[8] = 2082;
        *(void *)&__dst[10] = "";
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,#warning,downloadManifest,pullCnameUnavailable\"}", __dst, 0x12u);
      }
      __int16 v14 = *(NSObject **)(a1 + 24);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768;
      block[2] = sub_100045874;
      block[3] = &unk_1000F6EA8;
      uint64_t v15 = v44;
      sub_10004DB88((uint64_t)v44, a2);
      int v16 = block;
    }
    dispatch_async(v14, v16);
    sub_100021E70(v15);
LABEL_31:
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    return;
  }
  __int16 v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,#warning,downloadManifest,invalidCallback\"}", buf, 0x12u);
  }
}

void sub_1000457BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  sub_100021E70(&a31);
  sub_100021E70(v40);
  if (a26 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  if (*(char *)(v41 - 105) < 0) {
    operator delete(*(void **)(v41 - 128));
  }
  if (*(char *)(v41 - 73) < 0) {
    operator delete(*(void **)(v41 - 96));
  }
  _Unwind_Resume(a1);
}

void sub_100045874(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  _DWORD v3[2] = sub_100045964;
  v3[3] = &unk_1000F6EA8;
  sub_10004DB88((uint64_t)v4, a1 + 32);
  sub_100045964((uint64_t)v3);
  sub_100021E70(v4);
}

void sub_100045948(_Unwind_Exception *a1)
{
  sub_100021E70(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100045964(uint64_t a1)
{
  return sub_100045970(a1 + 32, 0);
}

uint64_t sub_100045970(uint64_t a1, char a2)
{
  char v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_100005520();
  }
  return (*(uint64_t (**)(uint64_t, char *))(*(void *)v2 + 48))(v2, &v4);
}

uint64_t sub_1000459C4(uint64_t a1, uint64_t a2)
{
  return sub_10004DB88(a1 + 32, a2 + 32);
}

void *sub_1000459D0(uint64_t a1)
{
  return sub_100021E70((void *)(a1 + 32));
}

void sub_1000459D8(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  _DWORD v3[2] = sub_100045AC8;
  v3[3] = &unk_1000F6EA8;
  sub_10004DB88((uint64_t)v4, a1 + 32);
  sub_100045AC8((uint64_t)v3);
  sub_100021E70(v4);
}

void sub_100045AAC(_Unwind_Exception *a1)
{
  sub_100021E70(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100045AC8(uint64_t a1)
{
  return sub_100045970(a1 + 32, 0);
}

void sub_100045AD4(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  _DWORD v3[2] = sub_100045BC4;
  v3[3] = &unk_1000F6EA8;
  sub_10004DB88((uint64_t)v4, a1 + 32);
  sub_100045BC4((uint64_t)v3);
  sub_100021E70(v4);
}

void sub_100045BA8(_Unwind_Exception *a1)
{
  sub_100021E70(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100045BC4(uint64_t a1)
{
  return sub_100045970(a1 + 32, 0);
}

void sub_100045BD0(uint64_t a1, int a2)
{
  char v2 = a2;
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a1 + 32);
  CFStringRef v55 = @"status";
  __int16 v5 = +[NSNumber numberWithInt:a2 ^ 1u];
  uint64_t v56 = v5;
  uint64_t v6 = +[NSDictionary dictionaryWithObjects:&v56 forKeys:&v55 count:1];

  uint64_t v7 = sub_10004EDD0();
  sub_10004FEA8((uint64_t)v7, 1, v6);
  if ((v2 & 1) == 0)
  {
    uint64_t v11 = SALogObjectGeneral;
    goto LABEL_58;
  }
  uint64_t v8 = (uint64_t *)(v3 + 40);
  int v9 = *(char *)(v3 + 63);
  if (v9 < 0)
  {
    if (*(void *)(v3 + 48))
    {
      uint64_t v10 = *v8;
      goto LABEL_8;
    }
LABEL_12:
    __int16 v14 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = *v8;
      if (v9 >= 0) {
        uint64_t v15 = v3 + 40;
      }
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2081;
      *(void *)&buf[20] = v15;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,#warning,loadManifest,invalidPath\", \"manifest\":%{private, location:escape_only}s}", buf, 0x1Cu);
    }
    goto LABEL_34;
  }
  if (!*(unsigned char *)(v3 + 63)) {
    goto LABEL_12;
  }
  uint64_t v10 = v3 + 40;
LABEL_8:
  uint64_t v12 = +[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", v10, +[NSString defaultCStringEncoding]);
  if (v12)
  {
    int v13 = +[NSData dataWithContentsOfFile:v12];
    if (v13)
    {
      +[NSJSONSerialization JSONObjectWithData:v13 options:0 error:0];
      if (objc_claimAutoreleasedReturnValue()) {
        operator new();
      }
      uint64_t v20 = v3;
      uint64_t v21 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        if (*(char *)(v20 + 63) >= 0) {
          long long v22 = v8;
        }
        else {
          long long v22 = *(uint64_t **)(v20 + 40);
        }
        *(_DWORD *)uint64_t buf = 68289283;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2081;
        *(void *)&buf[20] = v22;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,loadManifest,parseFailed\", \"manifest\":%{private, location:escape_only}s}", buf, 0x1Cu);
      }

      uint64_t v3 = v20;
    }
    else
    {
      uint64_t v18 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        if (*(char *)(v3 + 63) >= 0) {
          uint64_t v19 = v3 + 40;
        }
        else {
          uint64_t v19 = *(void *)(v3 + 40);
        }
        *(_DWORD *)uint64_t buf = 68289283;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2081;
        *(void *)&buf[20] = v19;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,loadManifest,readFailed\", \"manifest\":%{private, location:escape_only}s}", buf, 0x1Cu);
      }
    }
  }
  else
  {
    int v16 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      if (*(char *)(v3 + 63) >= 0) {
        uint64_t v17 = v3 + 40;
      }
      else {
        uint64_t v17 = *(void *)(v3 + 40);
      }
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2081;
      *(void *)&buf[20] = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,#warning,loadManifest,pathNotDerived\", \"manifest\":%{private, location:escape_only}s}", buf, 0x1Cu);
    }
  }

LABEL_34:
  uint64_t v23 = *(void *)(v4 + 48);
  uint64_t v11 = SALogObjectGeneral;
  if (v23)
  {
    __int16 v53 = v6;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v24 = *(unsigned __int8 *)(v23 + 48);
      uint64_t v25 = *(void *)(v23 + 32);
      uint64_t v26 = *(void *)(v23 + 40);
      uint64_t v27 = (*(void *)(v23 + 8) - *(void *)v23) >> 3;
      *(_DWORD *)uint64_t buf = 68290051;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 1025;
      *(_DWORD *)&buf[20] = v24;
      *(_WORD *)&unsigned char buf[24] = 2049;
      *(void *)&buf[26] = v25;
      *(_WORD *)&buf[34] = 2049;
      *(void *)&buf[36] = v26;
      *(_WORD *)&buf[44] = 1025;
      *(_DWORD *)&buf[46] = v27;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#manifest\", \"isValid\":%{private}hhd, \"start\":\"%{private}0.1f\", \"end\":\"%{private}0.1f\", \"nEntries\":%{private}d}", buf, 0x32u);
      uint64_t v11 = SALogObjectGeneral;
    }
    char v28 = *(uint64_t **)v23;
    uint64_t v54 = *(uint64_t **)(v23 + 8);
    if (*(uint64_t **)v23 == v54)
    {
      uint64_t v6 = v53;
    }
    else
    {
      do
      {
        uint64_t v29 = *v28;
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          double v30 = (void *)(v29 + 48);
          if (*(char *)(v29 + 71) < 0) {
            double v30 = (void *)*v30;
          }
          uint64_t v31 = *(void *)(v29 + 8);
          uint64_t v32 = *(void *)(v29 + 32);
          uint64_t v33 = *(void *)(v29 + 40);
          int v34 = *(unsigned __int8 *)(v29 + 145);
          int v35 = *(unsigned __int8 *)(v29 + 144);
          int v36 = *(unsigned __int8 *)(v29 + 146);
          *(_DWORD *)uint64_t buf = 68290819;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&buf[18] = 2049;
          *(void *)&buf[20] = v31;
          *(_WORD *)&unsigned char buf[28] = 2049;
          *(void *)&unsigned char buf[30] = v32;
          *(_WORD *)&buf[38] = 2049;
          *(void *)&unsigned char buf[40] = v33;
          *(_WORD *)&buf[48] = 2081;
          uint64_t v58 = v30;
          __int16 v59 = 1025;
          int v60 = v34;
          __int16 v61 = 1025;
          int v62 = v35;
          __int16 v63 = 1025;
          int v64 = v36;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#manifestEntry\", \"serverTime\":\"%{private}0.1f\", \"effective\":\"%{private}0.1f\", \"expires\":\"%{private}0.1f\", \"uid\":%{private, location:escape_only}s, \"isSaSent\":%{private}hhd, \"isIgneousSent\":%{private}hhd, \"fIsValid\":%{private}hhd}", buf, 0x4Cu);
          uint64_t v11 = SALogObjectGeneral;
        }
        __int16 v37 = *(void **)(v29 + 120);
        std::string v38 = (void *)(v29 + 128);
        if (v37 != v38)
        {
          do
          {
            if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
            {
              __int16 v39 = v37 + 4;
              if (*((char *)v37 + 55) < 0) {
                __int16 v39 = (void *)*v39;
              }
              int v40 = v37 + 7;
              if (*((char *)v37 + 79) < 0) {
                int v40 = (void *)*v40;
              }
              *(_DWORD *)uint64_t buf = 68289539;
              *(_DWORD *)&uint8_t buf[4] = 0;
              *(_WORD *)&uint8_t buf[8] = 2082;
              *(void *)&buf[10] = "";
              *(_WORD *)&buf[18] = 2081;
              *(void *)&buf[20] = v39;
              *(_WORD *)&unsigned char buf[28] = 2081;
              *(void *)&unsigned char buf[30] = v40;
              _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#manifestEntry,weaList\", \"weaHashType\":%{private, location:escape_only}s, \"weaHash\":%{private, location:escape_only}s}", buf, 0x26u);
              uint64_t v11 = SALogObjectGeneral;
            }
            uint64_t v41 = (void *)v37[1];
            if (v41)
            {
              do
              {
                int v42 = v41;
                uint64_t v41 = (void *)*v41;
              }
              while (v41);
            }
            else
            {
              do
              {
                int v42 = (void *)v37[2];
                BOOL v43 = *v42 == (void)v37;
                __int16 v37 = v42;
              }
              while (!v43);
            }
            __int16 v37 = v42;
          }
          while (v42 != v38);
        }
        ++v28;
      }
      while (v28 != v54);
      uint64_t v6 = v53;
    }
  }
LABEL_58:
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,manifest downloaded\"}", buf, 0x12u);
    uint64_t v11 = SALogObjectGeneral;
  }
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,eraseManifests\"}", buf, 0x12u);
  }
  int v44 = (std::string *)sub_10000DD48(v65, "/var/mobile/Library/com.apple.safetyalerts/");
  __int16 v45 = std::string::append(v44, "efficacy_manifest.txt", 0x15uLL);
  *(std::string *)uint64_t buf = *v45;
  v45->__r_.__value_.__l.__size_ = 0;
  v45->__r_.__value_.__r.__words[2] = 0;
  v45->__r_.__value_.__r.__words[0] = 0;
  if (v68 < 0) {
    operator delete(*(void **)v65);
  }
  __int16 v47 = (const std::__fs::filesystem::path *)(v3 + 40);
  int v48 = buf[23];
  __int16 v49 = *(void **)buf;
  if (buf[23] >= 0) {
    uint64_t v50 = (const std::__fs::filesystem::path *)buf;
  }
  else {
    uint64_t v50 = *(const std::__fs::filesystem::path **)buf;
  }
  remove(v50, v46);
  if (*(char *)(v3 + 63) < 0)
  {
    if (!*(void *)(v3 + 48)) {
      goto LABEL_73;
    }
    __int16 v47 = (const std::__fs::filesystem::path *)v47->__pn_.__r_.__value_.__r.__words[0];
LABEL_72:
    remove(v47, v51);
    goto LABEL_75;
  }
  if (*(unsigned char *)(v3 + 63)) {
    goto LABEL_72;
  }
LABEL_73:
  uint64_t v52 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(void *)__int16 v65 = 68289026;
    __int16 v66 = 2082;
    __int16 v67 = "";
    _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,eraseManifests,empty file name\"}", v65, 0x12u);
  }
LABEL_75:
  if (v48 < 0) {
    operator delete(v49);
  }
  sub_100045970(v3 + 64, 0);
}

void sub_100046498()
{
}

uint64_t sub_100046518(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 63) < 0)
  {
    sub_100004CB8((unsigned char *)(a1 + 40), *(void **)(a2 + 40), *(void *)(a2 + 48));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = v4;
  }
  return sub_10004DB88(a1 + 64, a2 + 64);
}

void sub_100046580(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 63) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10004659C(uint64_t a1)
{
  sub_100021E70((void *)(a1 + 64));
  if (*(char *)(a1 + 63) < 0)
  {
    uint64_t v2 = *(void **)(a1 + 40);
    operator delete(v2);
  }
}

uint64_t sub_1000465EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 32) = _Q0;
  *(unsigned char *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_DWORD *)(a1 + 88) = 1065353216;
  id v31 = v3;
  uint64_t v29 = [v3 objectForKey:@"manifest"];
  if (v29 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    int v9 = [v29 objectForKey:@"start"];
    if (v9 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      char v28 = v9;
      [v9 doubleValue];
      *(double *)(a1 + 32) = v10 + -978307200.0;
      uint64_t v11 = CFCalendarCopyCurrent();
      CFCalendarDecomposeAbsoluteTime(v11, *(CFAbsoluteTime *)(a1 + 32), "M", a1 + 24);
      if (v11) {
        CFRelease(v11);
      }
      uint64_t v12 = [v29 objectForKey:@"end"];
      if (v12 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        uint64_t v27 = v12;
        [v12 doubleValue];
        *(double *)(a1 + 40) = v13 + -978307200.0;
        __int16 v14 = [v29 objectForKey:@"messages"];
        if (v14 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
        {
          long long v35 = 0u;
          long long v36 = 0u;
          long long v33 = 0u;
          long long v34 = 0u;
          id v15 = v14;
          id obj = v15;
          id v16 = [v15 countByEnumeratingWithState:&v33 objects:v37 count:16];
          if (v16)
          {
            uint64_t v32 = *(void *)v34;
            do
            {
              for (uint64_t i = 0; i != v16; uint64_t i = (char *)i + 1)
              {
                if (*(void *)v34 != v32) {
                  objc_enumerationMutation(obj);
                }
                uint64_t v18 = *(void **)(*((void *)&v33 + 1) + 8 * i);
                if (v18)
                {
                  objc_opt_class();
                  if (objc_opt_isKindOfClass())
                  {
                    v18;
                    operator new();
                  }
                }
                uint64_t v19 = SALogObjectGeneral;
                if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)uint64_t buf = 68289539;
                  *(_DWORD *)&uint8_t buf[4] = 0;
                  __int16 v39 = 2082;
                  int v40 = "";
                  __int16 v41 = 2081;
                  int v42 = "message";
                  __int16 v43 = 2113;
                  id v44 = v31;
                  _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,#warning,parseFailed\", \"field\":%{private, location:escape_only}s, \"manifestDictionary\":%{private, location:escape_only}@}", buf, 0x26u);
                }
              }
              id v15 = obj;
              id v16 = [obj countByEnumeratingWithState:&v33 objects:v37 count:16];
            }
            while (v16);
          }

          if (*(void *)a1 == *(void *)(a1 + 8))
          {
            uint64_t v26 = SALogObjectGeneral;
            uint64_t v20 = obj;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)uint64_t buf = 68289539;
              *(_DWORD *)&uint8_t buf[4] = 0;
              __int16 v39 = 2082;
              int v40 = "";
              __int16 v41 = 2081;
              int v42 = "msgsCount";
              __int16 v43 = 2113;
              id v44 = v31;
              _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,#warning,parseFailed\", \"field\":%{private, location:escape_only}s, \"manifestDictionary\":%{private, location:escape_only}@}", buf, 0x26u);
            }
          }
          else
          {
            *(unsigned char *)(a1 + 48) = 1;
            uint64_t v20 = obj;
            sub_100048524((void *)a1);
          }
        }
        else
        {

          int v24 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)uint64_t buf = 68289539;
            *(_DWORD *)&uint8_t buf[4] = 0;
            __int16 v39 = 2082;
            int v40 = "";
            __int16 v41 = 2081;
            int v42 = "msgs";
            __int16 v43 = 2113;
            id v44 = v31;
            _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,#warning,parseFailed\", \"field\":%{private, location:escape_only}s, \"manifestDictionary\":%{private, location:escape_only}@}", buf, 0x26u);
          }
          uint64_t v20 = 0;
        }
      }
      else
      {

        uint64_t v23 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = 68289539;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v39 = 2082;
          int v40 = "";
          __int16 v41 = 2081;
          int v42 = "end";
          __int16 v43 = 2113;
          id v44 = v31;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,#warning,parseFailed\", \"field\":%{private, location:escape_only}s, \"manifestDictionary\":%{private, location:escape_only}@}", buf, 0x26u);
        }
      }
    }
    else
    {

      long long v22 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289539;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v39 = 2082;
        int v40 = "";
        __int16 v41 = 2081;
        int v42 = "start";
        __int16 v43 = 2113;
        id v44 = v31;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,#warning,parseFailed\", \"field\":%{private, location:escape_only}s, \"manifestDictionary\":%{private, location:escape_only}@}", buf, 0x26u);
      }
    }
  }
  else
  {

    uint64_t v21 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v39 = 2082;
      int v40 = "";
      __int16 v41 = 2081;
      int v42 = "manifest";
      __int16 v43 = 2113;
      id v44 = v31;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,#warning,parseFailed\", \"field\":%{private, location:escape_only}s, \"manifestDictionary\":%{private, location:escape_only}@}", buf, 0x26u);
    }
  }

  return a1;
}

void sub_1000480E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,void *a27,void *a28,uint64_t a29,void *a30,void *a31,void *a32,void *a33,void *a34,uint64_t a35,void **a36)
{
  sub_10004D390(*(void **)(v38 + 128));
  if (*(char *)(v38 + 119) < 0) {
    operator delete(*v37);
  }
  if (*(char *)(v38 + 95) < 0) {
    operator delete(*a36);
  }
  if (*(char *)(v38 + 71) < 0) {
    operator delete(*v39);
  }
  sub_10004D99C((id **)v38, 0);

  operator delete();
}

void sub_100048524(void *a1)
{
  long long v1 = (uint64_t *)*a1;
  uint64_t v2 = (uint64_t *)a1[1];
  if ((uint64_t *)*a1 != v2)
  {
    id v3 = a1 + 7;
    do
    {
      long long v4 = (id)SALogObjectGeneral;
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v5 = *v1;
        if (*(char *)(*v1 + 71) < 0)
        {
          sub_100004CB8(__p, *(void **)(v5 + 48), *(void *)(v5 + 56));
        }
        else
        {
          *(_OWORD *)std::string __p = *(_OWORD *)(v5 + 48);
          uint64_t v13 = *(void *)(v5 + 64);
        }
        uint64_t v6 = v13 >= 0 ? __p : (void **)__p[0];
        *(_DWORD *)uint64_t buf = 68289283;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)id v16 = 2082;
        *(void *)&v16[2] = "";
        __int16 v17 = 2081;
        uint64_t v18 = v6;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,updateHashToCount\", \"uid\":%{private, location:escape_only}s}", buf, 0x1Cu);
        if (SHIBYTE(v13) < 0) {
          operator delete(__p[0]);
        }
      }

      sub_10004CFF8((uint64_t)buf, (void *)(*v1 + 120));
      uint64_t v7 = *(unsigned char **)buf;
      if (*(unsigned char **)buf != v16)
      {
        do
        {
          if ((char)v7[79] < 0)
          {
            sub_100004CB8(__p, *((void **)v7 + 7), *((void *)v7 + 8));
          }
          else
          {
            *(_OWORD *)std::string __p = *(_OWORD *)(v7 + 56);
            uint64_t v13 = *((void *)v7 + 9);
          }
          if (sub_10004DC20(v3, (unsigned __int8 *)__p))
          {
            __int16 v14 = __p;
            int v8 = *((_DWORD *)sub_10004DDC0(v3, (unsigned __int8 *)__p, (long long **)&v14) + 10);
            __int16 v14 = __p;
            *((_DWORD *)sub_10004DDC0(v3, (unsigned __int8 *)__p, (long long **)&v14) + 10) = v8 + 1;
          }
          else
          {
            __int16 v14 = __p;
            *((_DWORD *)sub_10004DDC0(v3, (unsigned __int8 *)__p, (long long **)&v14) + 10) = 1;
          }
          if (SHIBYTE(v13) < 0) {
            operator delete(__p[0]);
          }
          int v9 = (void *)*((void *)v7 + 1);
          if (v9)
          {
            do
            {
              double v10 = v9;
              int v9 = (void *)*v9;
            }
            while (v9);
          }
          else
          {
            do
            {
              double v10 = (unsigned char *)*((void *)v7 + 2);
              BOOL v11 = *(void *)v10 == (void)v7;
              uint64_t v7 = v10;
            }
            while (!v11);
          }
          uint64_t v7 = v10;
        }
        while (v10 != v16);
      }
      sub_10004D390(*(void **)v16);
      ++v1;
    }
    while (v1 != v2);
  }
}

void sub_100048788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1000487C8(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10004880C()
{
}

void sub_100048860()
{
}

void sub_100048884(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 24))
  {
    *(unsigned char *)(a1 + 16) = 1;
    if (*(void *)(a1 + 32))
    {
      time_t v4 = time(0);
      unint64_t v5 = *(void *)(a1 + 456);
      uint64_t v6 = *(void *)(a1 + 32);
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3321888768;
      _DWORD v8[2] = sub_100048A88;
      void v8[3] = &unk_1000F6EA8;
      sub_10004DB88((uint64_t)v9, a2);
      BOOL v11 = 0;
      v10[0] = off_1000F4E78;
      v10[1] = objc_retainBlock(v8);
      BOOL v11 = v10;
      (*(void (**)(uint64_t, void *, double))(*(void *)v6 + 16))(v6, v10, (double)((uint64_t)(double)v4 % v5 + v5));
      sub_10000F6D4(v10);
      sub_100021E70(v9);
    }
  }
  else
  {
    uint64_t v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t buf = 68289026;
      __int16 v13 = 2082;
      __int16 v14 = "";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,#warning,prepare,invalidCallback\"}", (uint8_t *)&buf, 0x12u);
    }
  }
}

void sub_100048A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_10000F6D4((uint64_t *)va);
  sub_100021E70(v9);
  _Unwind_Resume(a1);
}

uint64_t sub_100048A88(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    uint64_t v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,biomeDone\"}", (uint8_t *)v4, 0x12u);
  }
  return sub_100045970(a1 + 32, 1);
}

void sub_100048B4C(uint64_t a1, double a2, double a3)
{
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  uint64_t v7 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v8.n128_f64[0] = a2;
    v9.n128_f64[0] = a3;
    BOOL v10 = sub_100048FD8(*(void *)(a1 + 32), v8, v9);
    *(_DWORD *)uint64_t buf = 68290307;
    int v28 = 0;
    __int16 v29 = 2082;
    double v30 = "";
    __int16 v31 = 2049;
    CFAbsoluteTime v32 = Current;
    __int16 v33 = 2049;
    double v34 = a2;
    __int16 v35 = 2049;
    double v36 = a3;
    __int16 v37 = 1025;
    BOOL v38 = v10;
    __int16 v39 = 1025;
    BOOL v40 = sub_100049164(a1, a2, a3);
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,run\", \"now\":\"%{private}0.1f\", \"startTsSeconds\":\"%{private}0.1f\", \"endTsSeconds\":\"%{private}0.1f\", \"isWeaCapable\":%{private}hhd, \"isSaCapable\":%{private}hhd}", buf, 0x3Cu);
  }

  if (!*(void *)(a1 + 48))
  {
    uint64_t v12 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_34;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v28 = 0;
    __int16 v29 = 2082;
    double v30 = "";
    uint64_t v26 = "{\"msg%{public}.0s\":\"#eff,collectEfficacyMetric,empty manifest\"}";
LABEL_33:
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v26, buf, 0x12u);
    goto LABEL_34;
  }
  BOOL v11 = sub_100055EB4(*(void *)(a1 + 56), (double)*(unint64_t *)(a1 + 456));
  uint64_t v12 = SALogObjectGeneral;
  BOOL v13 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (!v11)
  {
    if (!v13) {
      goto LABEL_34;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v28 = 0;
    __int16 v29 = 2082;
    double v30 = "";
    uint64_t v26 = "{\"msg%{public}.0s\":\"#eff,collectEfficacyMetric,too soon to collect\"}";
    goto LABEL_33;
  }
  if (v13)
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v28 = 0;
    __int16 v29 = 2082;
    double v30 = "";
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,collectingEfficacyMetric\"}", buf, 0x12u);
  }
  __int16 v14 = *(id *****)(a1 + 48);
  id v15 = *v14;
  id v16 = v14[1];
  if (*v14 != v16)
  {
    do
    {
      __int16 v17 = *v15;
      if (*v15)
      {
        if (*((unsigned char *)v17 + 146))
        {
          double v18 = *((double *)v17 + 4);
          if (v18 <= a3)
          {
            if (v18 >= a2)
            {
              if (*((double *)v17 + 5) >= a2)
              {
                if (*((unsigned char *)v17 + 144)) {
                  sub_1000498A4(a1, v15, 1, a2);
                }
                else {
                  sub_1000498A4(a1, v15, 0, a2);
                }
                goto LABEL_24;
              }
              uint64_t v25 = SALogObjectGeneral;
              if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)uint64_t buf = 68289026;
                int v28 = 0;
                __int16 v29 = 2082;
                double v30 = "";
                uint64_t v20 = v25;
                uint64_t v21 = "{\"msg%{public}.0s\":\"#eff,collectingEfficacyMetric,skipOldMessage\"}";
                goto LABEL_23;
              }
            }
            else
            {
              uint64_t v24 = SALogObjectGeneral;
              if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)uint64_t buf = 68289026;
                int v28 = 0;
                __int16 v29 = 2082;
                double v30 = "";
                uint64_t v20 = v24;
                uint64_t v21 = "{\"msg%{public}.0s\":\"#eff,collectingEfficacyMetric,skipGeneratedBeforeRollingPeriod\"}";
                goto LABEL_23;
              }
            }
          }
          else
          {
            uint64_t v19 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)uint64_t buf = 68289026;
              int v28 = 0;
              __int16 v29 = 2082;
              double v30 = "";
              uint64_t v20 = v19;
              uint64_t v21 = "{\"msg%{public}.0s\":\"#eff,collectingEfficacyMetric,skipFutureMessage\"}";
LABEL_23:
              _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, v21, buf, 0x12u);
            }
          }
        }
        else
        {
          uint64_t v23 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)uint64_t buf = 68289026;
            int v28 = 0;
            __int16 v29 = 2082;
            double v30 = "";
            uint64_t v20 = v23;
            uint64_t v21 = "{\"msg%{public}.0s\":\"#eff,collectingEfficacyMetric,not valid\"}";
            goto LABEL_23;
          }
        }
      }
      else
      {
        uint64_t v22 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = 68289026;
          int v28 = 0;
          __int16 v29 = 2082;
          double v30 = "";
          uint64_t v20 = v22;
          uint64_t v21 = "{\"msg%{public}.0s\":\"#eff,collectingEfficacyMetric,skipNullEntry\"}";
          goto LABEL_23;
        }
      }
LABEL_24:
      ++v15;
    }
    while (v15 != v16);
  }
LABEL_34:
  *(unsigned char *)(a1 + 16) = 0;
}

void sub_100048FC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_100048FD8(uint64_t a1, __n128 a2, __n128 a3)
{
  unint64_t v3 = a3.n128_u64[0];
  unint64_t v4 = a2.n128_u64[0];
  if (a1) {
    int v5 = (*(uint64_t (**)(uint64_t, __n128, __n128))(*(void *)a1 + 64))(a1, a2, a3);
  }
  else {
    int v5 = 3;
  }
  uint64_t v6 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    sub_10000DD48(__p, off_1000F70B0[v5]);
    if (v10 >= 0) {
      uint64_t v7 = __p;
    }
    else {
      uint64_t v7 = (void **)__p[0];
    }
    *(_DWORD *)uint64_t buf = 68289795;
    int v12 = 0;
    __int16 v13 = 2082;
    __int16 v14 = "";
    __int16 v15 = 2049;
    unint64_t v16 = v4;
    __int16 v17 = 2049;
    unint64_t v18 = v3;
    __int16 v19 = 2081;
    uint64_t v20 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,isWeaCapable,biomeStatus\", \"startSeconds\":\"%{private}0.1f\", \"endSeconds\":\"%{private}0.1f\", \"result\":%{private, location:escape_only}s}", buf, 0x30u);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
  }

  return (v5 - 1) < 2;
}

void sub_10004914C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_100049164(uint64_t a1, double a2, double a3)
{
  int v6 = sub_1000553D4(*(void *)(a1 + 56), a2, a3);
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7)
  {
    int v8 = (*(uint64_t (**)(uint64_t, double, double))(*(void *)v7 + 80))(v7, a2, a3);
    int v9 = (*(uint64_t (**)(void, double, double))(**(void **)(a1 + 32) + 56))(*(void *)(a1 + 32), a2, a3);
  }
  else
  {
    int v8 = 3;
    int v9 = 3;
  }
  char v10 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v11 = v23;
    sub_10000DD48(v23, off_1000F70B0[v6]);
    if (v24 < 0) {
      BOOL v11 = (void **)v23[0];
    }
    sub_10000DD48(v21, off_1000F70B0[v8]);
    int v12 = v22;
    __int16 v13 = (void **)v21[0];
    sub_10000DD48(__p, off_1000F70B0[v9]);
    __int16 v14 = v21;
    if (v12 < 0) {
      __int16 v14 = v13;
    }
    if (v20 >= 0) {
      __int16 v15 = __p;
    }
    else {
      __int16 v15 = (void **)__p[0];
    }
    *(_DWORD *)uint64_t buf = 68290307;
    int v26 = 0;
    __int16 v27 = 2082;
    int v28 = "";
    __int16 v29 = 2049;
    double v30 = a2;
    __int16 v31 = 2049;
    double v32 = a3;
    __int16 v33 = 2081;
    double v34 = v11;
    __int16 v35 = 2081;
    double v36 = v14;
    __int16 v37 = 2081;
    BOOL v38 = v15;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,isSaCapable,biomeStatus\", \"startSeconds\":\"%{private}0.1f\", \"endSeconds\":\"%{private}0.1f\", \"subStatus\":%{private, location:escape_only}s, \"nwCellularStatus\":%{private, location:escape_only}s, \"nwWifiStatus\":%{private, location:escape_only}s}", buf, 0x44u);
    if (v20 < 0) {
      operator delete(__p[0]);
    }
    if (v22 < 0) {
      operator delete(v21[0]);
    }
    if (v24 < 0) {
      operator delete(v23[0]);
    }
  }

  BOOL v17 = v8 == 1 || v9 == 1;
  return v6 == 1 && v17;
}

void sub_1000493B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }

  _Unwind_Resume(a1);
}

char *sub_1000493FC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 5;
    v9[0] = 68289283;
    v9[1] = 0;
    __int16 v10 = 2082;
    BOOL v11 = "";
    __int16 v12 = 2049;
    uint64_t v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,OnHistoricalLocationReceivedCb\", \"HistoricalLocationCount\":%{private}lu}", (uint8_t *)v9, 0x1Cu);
  }
  uint64_t v6 = *(void *)(a2 + 8);
  BOOL result = (char *)(a1 + 464);
  if (*(void *)a2 != v6 && result != (char *)a2) {
    return sub_10004D4C4(result, *(char **)a2, v6, (v6 - *(void *)a2) >> 5);
  }
  return result;
}

uint64_t sub_1000494FC(double **a1, void *a2, double a3, double a4)
{
  int v8 = a2;
  uint64_t v18 = 0;
  int v9 = *a1;
  __int16 v10 = a1[1];
  if (*a1 != v10)
  {
    LOBYTE(isCircleInGeometryHelper) = 0;
    double v12 = 0.0;
    double v13 = 0.0;
    double v14 = 0.0;
    while (1)
    {
      double v15 = *v9;
      if ((isCircleInGeometryHelper & 1) != 0 || v15 >= a3)
      {
        if (v15 >= a3 && v15 <= a4)
        {
          if (v14 >= -90.0 && v14 <= 90.0 && v13 >= -180.0 && v13 <= 180.0 && v12 > 0.0)
          {
            if (SAGeometry::isCircleInGeometryHelper((SAGeometry *)&v18, v14, v13, v12, v8, v7))
            {
              uint64_t isCircleInGeometryHelper = 1;
              goto LABEL_28;
            }
            double v12 = -1.0;
            double v14 = 0.0;
            double v13 = 0.0;
          }
          uint64_t isCircleInGeometryHelper = 1;
          if (SAGeometry::isCircleInGeometryHelper((SAGeometry *)&v18, v9[1], v9[2], v9[3], v8, v7)) {
            goto LABEL_28;
          }
        }
        else
        {
          LOBYTE(isCircleInGeometryHelper) = 1;
        }
      }
      else
      {
        double v14 = v9[1];
        double v13 = v9[2];
        double v12 = v9[3];
      }
      v9 += 4;
      if (v9 == v10) {
        goto LABEL_22;
      }
    }
  }
  double v14 = 0.0;
  double v13 = 0.0;
  double v12 = 0.0;
LABEL_22:
  uint64_t isCircleInGeometryHelper = 0;
  if (v14 >= -90.0 && v14 <= 90.0)
  {
    uint64_t isCircleInGeometryHelper = 0;
    if (v13 >= -180.0 && v13 <= 180.0 && v12 > 0.0) {
      uint64_t isCircleInGeometryHelper = SAGeometry::isCircleInGeometryHelper((SAGeometry *)&v18, v14, v13, v12, v8, v7);
    }
  }
LABEL_28:

  return isCircleInGeometryHelper;
}

void sub_1000496DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000496F0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  if (!*a1)
  {
    if (*((char *)a2 + 23) < 0)
    {
      a2[1] = 4;
      a2 = (uint64_t *)*a2;
    }
    else
    {
      *((unsigned char *)a2 + 23) = 4;
    }
    int v4 = 1701736270;
    goto LABEL_18;
  }
  if (v2 == 2)
  {
    if (*((char *)a2 + 23) < 0)
    {
      a2[1] = 11;
      a2 = (uint64_t *)*a2;
    }
    else
    {
      *((unsigned char *)a2 + 23) = 11;
    }
    strcpy((char *)a2, "Inexpensive");
  }
  else
  {
    if (v2 == 1)
    {
      if (*((char *)a2 + 23) < 0)
      {
        a2[1] = 4;
        a2 = (uint64_t *)*a2;
      }
      else
      {
        *((unsigned char *)a2 + 23) = 4;
      }
      int v4 = 1312905047;
LABEL_18:
      *(_DWORD *)a2 = v4;
      *((unsigned char *)a2 + 4) = 0;
      return;
    }
    if (*((char *)a2 + 23) < 0)
    {
      a2[1] = 4;
      a2 = (uint64_t *)*a2;
    }
    else
    {
      *((unsigned char *)a2 + 23) = 4;
    }
    strcpy((char *)a2, "None");
    uint64_t v5 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *a1;
      v7[0] = 68289283;
      v7[1] = 0;
      __int16 v8 = 2082;
      int v9 = "";
      __int16 v10 = 1025;
      int v11 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"eff, invalid,\", \"incoming interface\":%{private}d}", (uint8_t *)v7, 0x18u);
    }
  }
}

void sub_1000498A4(uint64_t a1, id ***a2, int a3, double a4)
{
  uint64_t v6 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v8 = (*a2)[2];
    uint64_t v7 = (*a2)[3];
    int v9 = (*a2)[1];
    *(_DWORD *)uint64_t buf = 68290051;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 2049;
    *(void *)&buf[20] = v7;
    *(_WORD *)&unsigned char buf[28] = 2049;
    *(void *)&unsigned char buf[30] = v8;
    *(_WORD *)&buf[38] = 2049;
    *(void *)&unsigned char buf[40] = v9;
    __int16 v218 = 1025;
    LODWORD(v219) = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,collectEfficacyMetricForAlertType\", \"originator_timestamp\":\"%{private}.2f\", \"ingress_timestamp\":\"%{private}.2f\", \"server_timestamp\":\"%{private}.2f\", \"isIgneous\":%{private}d}", buf, 0x36u);
  }

  double v10 = *((double *)*a2 + 4);
  double v11 = *((double *)*a2 + 5);
  double v213 = *((double *)*a2 + 1);
  v12.n128_f64[0] = v10;
  v13.n128_f64[0] = v11;
  BOOL v194 = sub_100048FD8(*(void *)(a1 + 32), v12, v13);
  double v14 = v213 + 1800.0;
  double v15 = v213;
  if (a3)
  {
    int v16 = sub_100055564(*(void *)(a1 + 56), v213, v14);
    uint64_t v17 = *(void *)(a1 + 32);
    if (v17)
    {
      int v18 = (*(uint64_t (**)(uint64_t, double, double))(*(void *)v17 + 80))(v17, v213, v14);
      int v19 = (*(uint64_t (**)(void, double, double))(**(void **)(a1 + 32) + 56))(*(void *)(a1 + 32), v213, v14);
    }
    else
    {
      int v18 = 3;
      int v19 = 3;
    }
    char v20 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v21 = __p;
      sub_10000DD48(__p, off_1000F70B0[v16]);
      if (SBYTE7(v207) < 0) {
        uint64_t v21 = (void **)__p[0];
      }
      sub_10000DD48(&__str, off_1000F70B0[v18]);
      int v22 = SHIBYTE(__str.__r_.__value_.__r.__words[2]);
      std::string::size_type v23 = __str.__r_.__value_.__r.__words[0];
      sub_10000DD48(&v222, off_1000F70B0[v19]);
      p_str = &__str;
      if (v22 < 0) {
        p_str = (std::string *)v23;
      }
      if ((v222.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v25 = &v222;
      }
      else {
        uint64_t v25 = (std::string *)v222.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)uint64_t buf = 68290307;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2049;
      *(double *)&buf[20] = v15;
      *(_WORD *)&unsigned char buf[28] = 2049;
      *(double *)&unsigned char buf[30] = v14;
      *(_WORD *)&buf[38] = 2081;
      *(void *)&unsigned char buf[40] = v21;
      __int16 v218 = 2081;
      int v219 = p_str;
      __int16 v220 = 2081;
      v221 = v25;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,isIgneousCapable,biomeStatus\", \"startSeconds\":\"%{private}0.1f\", \"endSeconds\":\"%{private}0.1f\", \"subStatus\":%{private, location:escape_only}s, \"nwCellularStatus\":%{private, location:escape_only}s, \"nwWifiStatus\":%{private, location:escape_only}s}", buf, 0x44u);
      if (SHIBYTE(v222.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v222.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      if (SBYTE7(v207) < 0) {
        operator delete(__p[0]);
      }
    }

    if (v16 == 1)
    {
      _ZF = v18 == 1 || v19 == 1;
      int v27 = _ZF;
      BOOL v178 = v27;
    }
    else
    {
      BOOL v178 = 0;
    }
  }
  else
  {
    BOOL v178 = sub_100049164(a1, v213, v14);
  }
  int v28 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289538;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 1026;
    *(_DWORD *)&buf[20] = v194;
    *(_WORD *)&unsigned char buf[24] = 1026;
    *(_DWORD *)&buf[26] = v178;
    _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,collectEfficacyMetricForAlertType\", \"wasWeaCapable\":%{public}hhd, \"wasSaCapable\":%{public}hhd}", buf, 0x1Eu);
  }

  __int16 v29 = "WEA_AND_SA";
  if (!v194 || !v178) {
    __int16 v29 = "WEA";
  }
  if (!v194) {
    __int16 v29 = "SA";
  }
  __s = (char *)v29;
  if (!v194 && !v178)
  {
    __int16 v39 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    BOOL v40 = "{\"msg%{public}.0s\":\"#eff,collectEfficacyMetricForAlertType,not capable, skipping\"}";
LABEL_53:
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, v40, buf, 0x12u);
    return;
  }
  id v30 = ***a2;
  char v31 = sub_1000494FC((double **)(a1 + 464), v30, v10, v11);

  if ((v31 & 1) == 0)
  {
    __int16 v39 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    BOOL v40 = "{\"msg%{public}.0s\":\"#eff,collectEfficacyMetricForAlertType,not in polygon,skipping submission\"}";
    goto LABEL_53;
  }
  BOOL v185 = SACommonUtils::didRebootSince(v32, a4);
  double v33 = v213;
  sub_10000DD48(&v212, "NotAvailable");
  sub_10000DD48(&v211, "Unknown");
  sub_10000DD48(&v210, "Unknown");
  sub_10000DD48(&v209, "Unknown");
  uint64_t v34 = *(void *)(a1 + 32);
  if (v34)
  {
    BOOL v189 = (*(unsigned int (**)(uint64_t, double, double))(*(void *)v34 + 80))(v34, v10, v11) - 1 < 2;
    (*(void (**)(unsigned char *__return_ptr, double, double))(**(void **)(a1 + 32) + 96))(buf, v213, v14);
    if (SHIBYTE(v212.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v212.__r_.__value_.__l.__data_);
    }
    std::string v212 = *(std::string *)buf;
    (*(void (**)(void, double, double))(**(void **)(a1 + 32) + 104))(*(void *)(a1 + 32), v213, v213);
    int v188 = v35;
    (*(void (**)(void, double, double))(**(void **)(a1 + 32) + 104))(*(void *)(a1 + 32), v213, v213 + 10.0);
    int v187 = v36;
    BOOL v186 = (*(unsigned int (**)(void, double, double))(**(void **)(a1 + 32) + 88))(*(void *)(a1 + 32), v213, v33 + 300.0)- 1 < 2;
    (*(void (**)(unsigned char *__return_ptr, double, double))(**(void **)(a1 + 32) + 120))(buf, v213, v14);
    if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v211.__r_.__value_.__l.__data_);
    }
    std::string v211 = *(std::string *)buf;
    (*(void (**)(unsigned char *__return_ptr, double, double))(**(void **)(a1 + 32) + 128))(buf, v213, v213);
    if (SHIBYTE(v210.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v210.__r_.__value_.__l.__data_);
    }
    std::string v210 = *(std::string *)buf;
    (*(void (**)(void, double, double))(**(void **)(a1 + 32) + 112))(*(void *)(a1 + 32), v213, v213);
    int v191 = v37;
    int v190 = (*(uint64_t (**)(void, double, double))(**(void **)(a1 + 32) + 112))(*(void *)(a1 + 32), v213, v213 + 10.0);
    double v180 = (*(double (**)(void, double *))(**(void **)(a1 + 32) + 136))(*(void *)(a1 + 32), &v213);
    int v38 = (*(uint64_t (**)(void, double, double))(**(void **)(a1 + 32) + 56))(*(void *)(a1 + 32), v10, v11);
    (*(void (**)(unsigned char *__return_ptr, double))(**(void **)(a1 + 32) + 144))(buf, v213);
    BOOL v184 = v38 == 1;
    if (SHIBYTE(v209.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v209.__r_.__value_.__l.__data_);
    }
    std::string v209 = *(std::string *)buf;
  }
  else
  {
    BOOL v184 = 0;
    double v180 = -1.0;
    BOOL v189 = 0;
    int v190 = -1;
    int v188 = -1;
    BOOL v186 = 0;
    int v187 = -1;
    int v191 = -1;
  }
  uint64_t v41 = *(void *)(a1 + 56);
  if (a3)
  {
    int v176 = sub_100055564(v41, v213, v14);
    int v42 = *a2;
    __int16 v43 = (char *)(*a2 + 18);
  }
  else
  {
    int v176 = sub_1000553D4(v41, v213, v14);
    int v42 = *a2;
    __int16 v43 = (char *)*a2 + 145;
  }
  char v183 = *v43;
  *(_OWORD *)std::string __p = 0u;
  long long v207 = 0u;
  int v208 = 1065353216;
  sub_10004CFF8((uint64_t)&v205, v42 + 15);
  std::string::size_type v44 = v205.__r_.__value_.__r.__words[0];
  if ((std::string::size_type *)v205.__r_.__value_.__l.__data_ != &v205.__r_.__value_.__r.__words[1])
  {
    char v193 = 0;
    char v195 = 0;
    int v45 = 0;
    char v198 = 0;
    char v199 = 0;
    while (1)
    {
      std::string::pointer v214 = (long long *)0xBFF0000000000000;
      memset(&v204, 0, sizeof(v204));
      int v46 = (std::string::size_type *)(v44 + 56);
      int v47 = sub_100055D80(*(void *)(a1 + 56), v44 + 56, &v214, &v204);
      id v48 = objc_alloc((Class)NSDictionary);
      __int16 v49 = SACommonUtils::convertStringToDictionary((uint64_t *)&v204);
      int v196 = v45;
      id v50 = [v48 initWithDictionary:v49];

      __int16 v51 = (id)SALogObjectGeneral;
      if (os_log_type_enabled(v51, OS_LOG_TYPE_DEBUG))
      {
        std::string::size_type v52 = v44 + 56;
        if (*(char *)(v44 + 79) < 0) {
          std::string::size_type v52 = *v46;
        }
        *(_DWORD *)uint64_t buf = 68289795;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 1025;
        *(_DWORD *)&buf[20] = v47;
        *(_WORD *)&unsigned char buf[24] = 2081;
        *(void *)&buf[26] = v52;
        *(_WORD *)&buf[34] = 2049;
        *(void *)&buf[36] = v214;
        _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#eff,collectEfficacyMetricForAlertType,isWeaReceived\", \"isWeaReceived\":%{private}d, \"hash\":%{private, location:escape_only}s, \"timestamp\":\"%{private}.2f\"}", buf, 0x2Cu);
      }

      if (v50)
      {
        [v50 enumerateKeysAndObjectsUsingBlock:&stru_1000F6F08];
        __int16 v53 = [v50 objectForKey:@"Polygons"];
        BOOL v54 = v53 == 0;

        if (v54)
        {
          char v59 = 0;
        }
        else
        {
          CFStringRef v55 = objc_opt_new();
          uint64_t v56 = [v50 objectForKey:@"Polygons"];
          uint64_t v58 = SAGeometry::getPolygonFromCoordinates(v56, v57);
          [v55 addObject:v58];

          char v59 = sub_1000494FC((double **)(a1 + 464), v55, v10, v11);
          char v195 = 1;
        }
        int v60 = [v50 objectForKey:@"Circles"];
        BOOL v61 = v60 == 0;

        if (v61)
        {
          char isLocationInCircle = 0;
        }
        else
        {
          __int16 v63 = [v50 objectForKey:@"Circles"];
          int v64 = *(double **)(a1 + 464);
          __int16 v65 = *(double **)(a1 + 472);
          if (v64 != v65)
          {
            char isLocationInCircle = 0;
            double v67 = 0.0;
            double v68 = 0.0;
            double v69 = 0.0;
            while (1)
            {
              double v70 = *v64;
              if ((isLocationInCircle & 1) != 0 || v70 >= v10)
              {
                if (v70 >= v10 && v70 <= v11)
                {
                  if (v69 >= -90.0 && v69 <= 90.0 && v68 >= -180.0 && v68 <= 180.0 && v67 > 0.0)
                  {
                    if (SAGeometry::isLocationInCircle(v63, v69, v68, v67, v62))
                    {
                      char isLocationInCircle = 1;
                      goto LABEL_97;
                    }
                    double v67 = -1.0;
                    double v69 = 0.0;
                    double v68 = 0.0;
                  }
                  char isLocationInCircle = 1;
                  if (SAGeometry::isLocationInCircle(v63, v64[1], v64[2], v64[3], v62)) {
                    goto LABEL_97;
                  }
                }
                else
                {
                  char isLocationInCircle = 1;
                }
              }
              else
              {
                double v69 = v64[1];
                double v68 = v64[2];
                double v67 = v64[3];
              }
              v64 += 4;
              if (v64 == v65) {
                goto LABEL_91;
              }
            }
          }
          double v69 = 0.0;
          double v68 = 0.0;
          double v67 = 0.0;
LABEL_91:
          char isLocationInCircle = 0;
          if (v69 >= -90.0 && v69 <= 90.0)
          {
            char isLocationInCircle = 0;
            if (v68 >= -180.0 && v68 <= 180.0 && v67 > 0.0) {
              char isLocationInCircle = SAGeometry::isLocationInCircle(v63, v69, v68, v67, v62);
            }
          }
LABEL_97:

          char v195 = 1;
        }
        v193 |= v59 | isLocationInCircle;
      }
      memset(&v203, 0, sizeof(v203));
      uint64_t v72 = *(void *)(a1 + 56);
      if (*(char *)(v44 + 79) < 0)
      {
        sub_100004CB8(__dst, *(void **)(v44 + 56), *(void *)(v44 + 64));
      }
      else
      {
        *(_OWORD *)long long __dst = *(_OWORD *)v46;
        std::string::size_type v216 = *(id **)(v44 + 72);
      }
      __str.__r_.__value_.__r.__words[0] = (std::string::size_type)off_1000F6FA0;
      __str.__r_.__value_.__l.__size_ = v72 + 1152;
      std::string::pointer v225 = &__str;
      v222.__r_.__value_.__r.__words[0] = (std::string::size_type)off_1000F7020;
      v222.__r_.__value_.__l.__size_ = v72 + 1152;
      std::string::pointer v223 = &v222;
      sub_100010BB4((uint64_t)buf, (uint64_t)&__str, (uint64_t)&v222);
      sub_10000F6D4(&v222);
      sub_10000F6D4(&__str);
      uint64_t v73 = *(void *)(v72 + 1176);
      uint64_t v74 = *(void *)(v72 + 1184);
      double v75 = -1.0;
      if (v73 != v74) {
        break;
      }
LABEL_126:
      int v89 = 0;
LABEL_127:
      sub_1000115F0(buf);
      if (SHIBYTE(v216) < 0) {
        operator delete(__dst[0]);
      }
      int v83 = (id)SALogObjectGeneral;
      if (os_log_type_enabled(v83, OS_LOG_TYPE_DEBUG))
      {
        std::string::size_type v84 = v44 + 56;
        if (*(char *)(v44 + 79) < 0) {
          std::string::size_type v84 = *v46;
        }
        *(_DWORD *)uint64_t buf = 68289795;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 1025;
        *(_DWORD *)&buf[20] = v89;
        *(_WORD *)&unsigned char buf[24] = 2081;
        *(void *)&buf[26] = v84;
        *(_WORD *)&buf[34] = 2049;
        *(void *)&buf[36] = v214;
        _os_log_impl((void *)&_mh_execute_header, v83, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#eff,collectEfficacyMetricForAlertType,isWeaDisplayed\", \"isWeaDisplayed\":%{private}d, \"hash\":%{private, location:escape_only}s, \"timestamp\":\"%{private}.2f\"}", buf, 0x2Cu);
      }

      uint64_t v85 = v214;
      *(void *)uint64_t buf = v44 + 56;
      uint64_t v86 = sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)(v44 + 56), (long long **)buf);
      v86[40] = v89;
      v86[41] = v47;
      *(_DWORD *)(v86 + 42) = __str.__r_.__value_.__l.__data_;
      *((_WORD *)v86 + 23) = WORD2(__str.__r_.__value_.__r.__words[0]);
      *((void *)v86 + 6) = v85;
      *((double *)v86 + 7) = v75;
      if (SHIBYTE(v203.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v203.__r_.__value_.__l.__data_);
      }

      if (SHIBYTE(v204.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v204.__r_.__value_.__l.__data_);
      }
      int v87 = *(std::string **)(v44 + 8);
      if (v87)
      {
        do
        {
          __int16 v88 = v87;
          int v87 = (std::string *)v87->__r_.__value_.__r.__words[0];
        }
        while (v87);
      }
      else
      {
        do
        {
          __int16 v88 = *(std::string **)(v44 + 16);
          _ZF = v88->__r_.__value_.__r.__words[0] == v44;
          std::string::size_type v44 = (std::string::size_type)v88;
        }
        while (!_ZF);
      }
      v199 |= v47;
      int v45 = v47 | v196;
      v198 |= v89;
      std::string::size_type v44 = (std::string::size_type)v88;
      if (v88 == (std::string *)&v205.__r_.__value_.__r.__words[1]) {
        goto LABEL_146;
      }
    }
    if (SHIBYTE(v216) >= 0) {
      int v76 = (void *)HIBYTE(v216);
    }
    else {
      int v76 = __dst[1];
    }
    if (SHIBYTE(v216) >= 0) {
      BOOL v77 = __dst;
    }
    else {
      BOOL v77 = (void **)__dst[0];
    }
    while (1)
    {
      uint64_t v78 = *(unsigned __int8 *)(v73 + 31);
      if ((v78 & 0x80u) == 0) {
        unint64_t v79 = (void *)*(unsigned __int8 *)(v73 + 31);
      }
      else {
        unint64_t v79 = *(void **)(v73 + 16);
      }
      if (v79 != v76) {
        goto LABEL_125;
      }
      if ((v78 & 0x80) != 0)
      {
        if (memcmp(*(const void **)(v73 + 8), v77, *(void *)(v73 + 16))) {
          goto LABEL_125;
        }
      }
      else if (*(unsigned char *)(v73 + 31))
      {
        uint64_t v80 = 0;
        while (*(unsigned __int8 *)(v73 + v80 + 8) == *((unsigned __int8 *)v77 + v80))
        {
          if (v78 == ++v80) {
            goto LABEL_120;
          }
        }
        goto LABEL_125;
      }
LABEL_120:
      double v81 = *(double *)v73;
      if (*(double *)v73 >= v10 && v81 <= v11)
      {
        std::string::operator=(&v203, (const std::string *)(v73 + 32));
        int v89 = 1;
        double v75 = v81;
        goto LABEL_127;
      }
LABEL_125:
      v73 += 56;
      if (v73 == v74) {
        goto LABEL_126;
      }
    }
  }
  char v198 = 0;
  char v199 = 0;
  LOBYTE(v45) = 0;
  char v195 = 0;
  char v193 = 0;
LABEL_146:
  sub_10004D390((void *)v205.__r_.__value_.__l.__size_);
  __int16 v90 = (std::string *)*a2;
  char v197 = v45;
  if (*((char *)*a2 + 71) < 0) {
    sub_100004CB8(&__str, v90[2].__r_.__value_.__l.__data_, v90[2].__r_.__value_.__l.__size_);
  }
  else {
    std::string __str = v90[2];
  }
  uint64_t v201 = 0;
  unint64_t v202 = 0xBFF0000000000000;
  memset(&v222, 0, sizeof(v222));
  uint64_t v91 = *(void *)(a1 + 56);
  if (a3)
  {
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      sub_100004CB8(buf, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
    }
    else {
      *(std::string *)uint64_t buf = __str;
    }
    int v92 = sub_10002313C(v91 + 1728, (unsigned __int8 **)buf, &v202, &v222);
  }
  else
  {
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      sub_100004CB8(buf, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
    }
    else {
      *(std::string *)uint64_t buf = __str;
    }
    int v92 = sub_10002313C(v91 + 1536, (unsigned __int8 **)buf, &v202, &v222);
  }
  int v93 = v92;
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  id v94 = objc_alloc((Class)NSDictionary);
  uint64_t v95 = SACommonUtils::convertStringToDictionary((uint64_t *)&v222);
  id v96 = [v94 initWithDictionary:v95];

  uint64_t v97 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v97, OS_LOG_TYPE_DEBUG))
  {
    __int16 v98 = &__str;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      __int16 v98 = (std::string *)__str.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint64_t buf = 68289795;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 1025;
    *(_DWORD *)&buf[20] = v93;
    *(_WORD *)&unsigned char buf[24] = 2081;
    *(void *)&buf[26] = v98;
    *(_WORD *)&buf[34] = 2049;
    *(void *)&buf[36] = v202;
    _os_log_impl((void *)&_mh_execute_header, v97, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#eff,collectEfficacyMetricForAlertType,sa\", \"isSaReceived\":%{private}d, \"saUid\":%{private, location:escape_only}s, \"timestamp\":\"%{private}.2f\"}", buf, 0x2Cu);
  }

  if (!v96) {
    goto LABEL_171;
  }
  uint64_t v99 = [v96 objectForKey:kIncomingMessageInterfaceKey];
  BOOL v100 = v99 == 0;

  if (!v100)
  {
    [v96 enumerateKeysAndObjectsUsingBlock:&stru_1000F6F28];
    char v101 = [v96 objectForKey:kIncomingMessageInterfaceKey];
    uint64_t v201 = (int)[v101 intValue];
  }
  __int16 v102 = [v96 objectForKey:kIsReceivedViaPushKey];
  BOOL v103 = v102 == 0;

  if (v103)
  {
LABEL_171:
    char v177 = 0;
  }
  else
  {
    __int16 v104 = [v96 objectForKey:kIsReceivedViaPushKey];
    unsigned int v105 = [v104 BOOLValue];

    __int16 v106 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v106, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 1025;
      *(_DWORD *)&buf[20] = v105;
      _os_log_impl((void *)&_mh_execute_header, v106, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#eff,collectEfficacyMetricForAlertType,saMetaValue\", \"isReceivedViaPushKey\":%{private}hhd}", buf, 0x18u);
    }

    char v177 = v105;
  }
  uint64_t v107 = *a2;
  __int16 v108 = (const char *)[@"USGSTest" UTF8String];
  uint64_t v109 = v108;
  int v110 = *((char *)v107 + 95);
  if (v110 >= 0) {
    size_t v111 = *((unsigned __int8 *)v107 + 95);
  }
  else {
    size_t v111 = (size_t)v107[10];
  }
  if (v111 == strlen(v108))
  {
    __int16 v114 = v107[9];
    int v113 = v107 + 9;
    __int16 v112 = v114;
    if (v110 >= 0) {
      __int16 v115 = v113;
    }
    else {
      __int16 v115 = (id **)v112;
    }
    BOOL v182 = memcmp(v115, v109, v111) == 0;
  }
  else
  {
    BOOL v182 = 0;
  }
  unint64_t v116 = v202;
  *(void *)uint64_t buf = &__str;
  int v117 = sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)buf);
  v117[40] = v93;
  v117[41] = v93;
  *((void *)v117 + 6) = v116;
  *((void *)v117 + 7) = v116;
  sub_10004CFF8((uint64_t)__dst, *a2 + 15);
  char v175 = v93 | v199;
  __int16 v118 = (void **)__dst[0];
  if (__dst[0] != &__dst[1])
  {
    unsigned int v119 = "IGNEOUS_WEA";
    if (!a3) {
      unsigned int v119 = "WEA";
    }
    v181 = (char *)v119;
    __int16 v120 = (void **)(a1 + 304);
    do
    {
      int v121 = (id)SALogObjectGeneral;
      if (os_log_type_enabled(v121, OS_LOG_TYPE_DEFAULT))
      {
        double v122 = v118 + 7;
        if (*((char *)v118 + 79) < 0) {
          double v122 = (void *)*v122;
        }
        *(_DWORD *)uint64_t buf = 68289283;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&buf[18] = 2081;
        *(void *)&buf[20] = v122;
        _os_log_impl((void *)&_mh_execute_header, v121, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,collectEfficacyMetricForAlertType\", \"wea\":%{private, location:escape_only}s}", buf, 0x1Cu);
      }

      if (*((char *)v118 + 79) < 0)
      {
        sub_100004CB8(buf, v118[7], (unint64_t)v118[8]);
      }
      else
      {
        *(_OWORD *)uint64_t buf = *(_OWORD *)(v118 + 7);
        *(void *)&buf[16] = v118[9];
      }
      if (*((char *)v118 + 55) < 0) {
        sub_100004CB8(&v205, v118[4], (unint64_t)v118[5]);
      }
      else {
        std::string v205 = *(std::string *)(v118 + 4);
      }
      sub_10000DD48(&v204, "Unknown");
      double v123 = -1.0;
      if (*(void *)(a1 + 32))
      {
        v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
        if (sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203)[40])
        {
          uint64_t v124 = *(void *)(a1 + 32);
          std::string::pointer v214 = (long long *)buf;
          double v125 = *((double *)sub_10004E2E4((uint64_t *)__p, buf, &v214) + 7);
          std::string::pointer v214 = (long long *)buf;
          double v126 = sub_10004E2E4((uint64_t *)__p, buf, &v214);
          (*(void (**)(std::string *__return_ptr, uint64_t, double, double))(*(void *)v124 + 128))(&v203, v124, v125, *((double *)v126 + 7));
          if (SHIBYTE(v204.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v204.__r_.__value_.__l.__data_);
          }
          std::string v204 = v203;
          uint64_t v127 = *(void *)(a1 + 32);
          v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
          __int16 v128 = sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203);
          double v123 = (*(double (**)(uint64_t, char *))(*(void *)v127 + 136))(v127, v128 + 56);
        }
      }
      std::string::operator=((std::string *)(a1 + 88), &__str);
      sub_10004D3E4((std::string *)(a1 + 112), __s);
      if (*(char *)(a1 + 159) < 0)
      {
        *(void *)(a1 + 144) = 4;
        int v129 = *(char **)(a1 + 136);
      }
      else
      {
        *(unsigned char *)(a1 + 159) = 4;
        int v129 = (char *)(a1 + 136);
      }
      strcpy(v129, "None");
      sub_10004D3E4((std::string *)(a1 + 160), v181);
      std::string::operator=((std::string *)(a1 + 184), &v205);
      std::string::operator=((std::string *)(a1 + 208), &v212);
      std::string::operator=((std::string *)(a1 + 232), &v211);
      if (*(void *)(a1 + 32)
        && (v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf,
            sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203)[40]))
      {
        __int16 v130 = &v204;
      }
      else
      {
        __int16 v130 = &v210;
      }
      std::string::operator=((std::string *)(a1 + 256), v130);
      std::string::operator=((std::string *)(a1 + 280), &v209);
      uint64_t v131 = (std::string *)*a2;
      if (*((char *)*a2 + 119) < 0) {
        sub_100004CB8(&v203, v131[4].__r_.__value_.__l.__data_, v131[4].__r_.__value_.__l.__size_);
      }
      else {
        std::string v203 = v131[4];
      }
      if (*(char *)(a1 + 327) < 0) {
        operator delete(*v120);
      }
      *(_OWORD *)__int16 v120 = *(_OWORD *)&v203.__r_.__value_.__l.__data_;
      *(void *)(a1 + 320) = *((void *)&v203.__r_.__value_.__l + 2);
      *(_DWORD *)(a1 + 328) = v191;
      *(_DWORD *)(a1 + 332) = v190;
      *(_DWORD *)(a1 + 336) = *(_DWORD *)(a1 + 448);
      __int16 v132 = (uint64_t *)(*(void *)(a1 + 48) + 56);
      *(_DWORD *)(a1 + 340) = *(_DWORD *)(a1 + 444);
      if (sub_10004DC20(v132, (unsigned __int8 *)v118 + 56))
      {
        v203.__r_.__value_.__r.__words[0] = (std::string::size_type)(v118 + 7);
        int v133 = *((_DWORD *)sub_10004DDC0(v132, (unsigned __int8 *)v118 + 56, (long long **)&v203) + 10);
      }
      else
      {
        int v133 = 0;
      }
      *(_DWORD *)(a1 + 344) = v133;
      *(_DWORD *)(a1 + 348) = v188;
      *(_DWORD *)(a1 + 352) = v187;
      *(unsigned char *)(a1 + 356) = v186;
      *(unsigned char *)(a1 + 357) = v189;
      *(unsigned char *)(a1 + 358) = v176 == 1;
      v203.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
      char v134 = sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)&v203)[41];
      *(unsigned char *)(a1 + 359) = v134;
      *(unsigned char *)(a1 + 360) = v134;
      v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
      *(unsigned char *)(a1 + 361) = (sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203)[41] != 0) & (v195 ^ 1 | v193);
      v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
      *(unsigned char *)(a1 + 362) = sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203)[41];
      v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
      *(unsigned char *)(a1 + 363) = sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203)[40];
      v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
      *(unsigned char *)(a1 + 364) = (sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203)[41] != 0) & v195;
      *(unsigned char *)(a1 + 365) = v184;
      *(unsigned char *)(a1 + 366) = v175 & 1;
      *(unsigned char *)(a1 + 367) = v183;
      *(unsigned char *)(a1 + 368) = v185;
      *(unsigned char *)(a1 + 369) = *(unsigned char *)(a1 + 440);
      v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
      char v135 = sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203)[41];
      if (v135)
      {
        v203.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
        char v135 = sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)&v203)[41];
        if (v135)
        {
          v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
          double v136 = *((double *)sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203) + 6);
          v203.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
          char v135 = vabdd_f64(v136, *((double *)sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)&v203) + 6)) <= 300.0;
        }
      }
      *(unsigned char *)(a1 + 370) = v135;
      *(unsigned char *)(a1 + 371) = 0;
      *(unsigned char *)(a1 + 372) = v182;
      *(unsigned char *)(a1 + 373) = v177;
      v203.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
      long long v137 = sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)&v203);
      double v138 = -1.0;
      if (*((double *)v137 + 6) > 0.0)
      {
        v203.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
        double v138 = (*((double *)sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)&v203) + 6)
              - *((double *)*a2 + 3))
             * 1000.0;
      }
      *(double *)(a1 + 376) = v138;
      v203.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
      long long v139 = sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)&v203);
      double v140 = -1.0;
      if (*((double *)v139 + 6) > 0.0)
      {
        v203.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
        double v140 = (*((double *)sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)&v203) + 6)
              - *((double *)*a2 + 1))
             * 1000.0;
      }
      *(double *)(a1 + 384) = v140;
      v203.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
      unint64_t v141 = sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)&v203);
      double v142 = -1.0;
      if (*((double *)v141 + 6) > 0.0)
      {
        v203.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
        double v142 = (*((double *)sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)&v203) + 6)
              - *((double *)*a2 + 2))
             * 1000.0;
      }
      *(double *)(a1 + 392) = v142;
      v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
      __int16 v143 = sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203);
      double v144 = -1.0;
      if (*((double *)v143 + 6) > 0.0)
      {
        v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
        double v144 = (*((double *)sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203) + 6) - *((double *)*a2 + 3)) * 1000.0;
      }
      *(double *)(a1 + 400) = v144;
      v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
      double v145 = -1.0;
      if (*((double *)sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203) + 6) > 0.0)
      {
        v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
        if (*((double *)sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203) + 7) > 0.0)
        {
          v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
          double v146 = *((double *)sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203) + 7);
          v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
          double v145 = (v146 - *((double *)sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203) + 6)) * 1000.0;
        }
      }
      *(double *)(a1 + 408) = v145;
      v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
      double v147 = -1.0;
      if (sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203)[41])
      {
        v203.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
        if (sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)&v203)[41])
        {
          v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
          double v148 = *((double *)sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203) + 6);
          v203.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
          double v147 = (v148 - *((double *)sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)&v203) + 6))
               * 1000.0;
        }
      }
      *(double *)(a1 + 416) = v147;
      if (!*(void *)(a1 + 32)
        || (v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf,
            !sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203)[40]))
      {
        double v123 = v180;
      }
      *(double *)(a1 + 424) = v123;
      *(void *)(a1 + 432) = 0xBFF0000000000000;
      if (v194
        || (v203.__r_.__value_.__r.__words[0] = (std::string::size_type)buf,
            sub_10004E2E4((uint64_t *)__p, buf, (long long **)&v203)[40]))
      {
        sub_10004BF0C(a1);
      }
      if (SHIBYTE(v204.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v204.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v205.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v205.__r_.__value_.__l.__data_);
      }
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      __int16 v149 = (void **)v118[1];
      if (v149)
      {
        do
        {
          uint64_t v150 = v149;
          __int16 v149 = (void **)*v149;
        }
        while (v149);
      }
      else
      {
        do
        {
          uint64_t v150 = (void **)v118[2];
          _ZF = *v150 == v118;
          __int16 v118 = v150;
        }
        while (!_ZF);
      }
      __int16 v118 = v150;
    }
    while (v150 != &__dst[1]);
  }
  sub_10004D390((void *)__dst[1]);
  __int16 v151 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v151, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v152 = &__str;
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v152 = (std::string *)__str.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 2081;
    *(void *)&buf[20] = v152;
    _os_log_impl((void *)&_mh_execute_header, v151, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#eff,collectEfficacyMetricForAlertType\", \"sa\":%{private, location:escape_only}s}", buf, 0x1Cu);
  }

  sub_10000DD48(buf, "Unknown");
  double v153 = -1.0;
  if (*(void *)(a1 + 32))
  {
    __dst[0] = &__str;
    if (sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)__dst)[41])
    {
      uint64_t v154 = *(void *)(a1 + 32);
      v205.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
      double v155 = *((double *)sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)&v205) + 6);
      v205.__r_.__value_.__r.__words[0] = (std::string::size_type)&__str;
      long long v156 = sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)&v205);
      (*(void (**)(void **__return_ptr, uint64_t, double, double))(*(void *)v154 + 128))(__dst, v154, v155, *((double *)v156 + 6));
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      *(_OWORD *)uint64_t buf = *(_OWORD *)__dst;
      *(void *)&buf[16] = v216;
      uint64_t v157 = *(void *)(a1 + 32);
      __dst[0] = &__str;
      unint64_t v158 = sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)__dst);
      double v153 = (*(double (**)(uint64_t, char *))(*(void *)v157 + 136))(v157, v158 + 48);
    }
  }
  std::string::operator=((std::string *)(a1 + 88), &__str);
  sub_10004D3E4((std::string *)(a1 + 112), __s);
  sub_1000496F0(&v201, (uint64_t *)(a1 + 136));
  if (a3) {
    unint64_t v159 = "IGNEOUS";
  }
  else {
    unint64_t v159 = "SA";
  }
  sub_10004D3E4((std::string *)(a1 + 160), v159);
  if (*(char *)(a1 + 207) < 0)
  {
    *(void *)(a1 + 192) = 4;
    unint64_t v160 = *(char **)(a1 + 184);
  }
  else
  {
    unint64_t v160 = (char *)(a1 + 184);
    *(unsigned char *)(a1 + 207) = 4;
  }
  strcpy(v160, "None");
  std::string::operator=((std::string *)(a1 + 208), &v212);
  std::string::operator=((std::string *)(a1 + 232), &v211);
  if (*(void *)(a1 + 32)
    && (__dst[0] = &__str, sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)__dst)[41]))
  {
    v161 = (std::string *)buf;
  }
  else
  {
    v161 = &v210;
  }
  std::string::operator=((std::string *)(a1 + 256), v161);
  std::string::operator=((std::string *)(a1 + 280), &v209);
  v162 = *a2;
  if (*((char *)*a2 + 119) < 0)
  {
    sub_100004CB8(__dst, v162[12], (unint64_t)v162[13]);
  }
  else
  {
    *(_OWORD *)long long __dst = *((_OWORD *)v162 + 6);
    std::string::size_type v216 = v162[14];
  }
  long long v163 = (void **)(a1 + 304);
  if (*(char *)(a1 + 327) < 0) {
    operator delete(*v163);
  }
  *(_OWORD *)long long v163 = *(_OWORD *)__dst;
  *(void *)(a1 + 320) = v216;
  *(_DWORD *)(a1 + 328) = v191;
  *(_DWORD *)(a1 + 332) = v190;
  *(_DWORD *)(a1 + 336) = *(_DWORD *)(a1 + 448);
  *(_DWORD *)(a1 + 340) = *(_DWORD *)(a1 + 444);
  *(_DWORD *)(a1 + 344) = 1;
  *(_DWORD *)(a1 + 348) = v188;
  *(_DWORD *)(a1 + 352) = v187;
  *(unsigned char *)(a1 + 356) = v186;
  *(unsigned char *)(a1 + 357) = v189;
  *(unsigned char *)(a1 + 358) = v176 == 1;
  __dst[0] = &__str;
  char v164 = sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)__dst)[41];
  *(unsigned char *)(a1 + 359) = v164;
  *(unsigned char *)(a1 + 360) = v164;
  *(unsigned char *)(a1 + 361) = v198 & 1 & (v193 | ~v195);
  *(unsigned char *)(a1 + 362) = v197 & 1;
  *(unsigned char *)(a1 + 363) = v198 & 1;
  *(unsigned char *)(a1 + 364) = v195 & 1;
  *(unsigned char *)(a1 + 365) = v184;
  *(unsigned char *)(a1 + 366) = v175 & 1;
  *(unsigned char *)(a1 + 367) = v183;
  *(unsigned char *)(a1 + 368) = v185;
  *(unsigned char *)(a1 + 369) = *(unsigned char *)(a1 + 440);
  *(_WORD *)(a1 + 370) = 0;
  *(unsigned char *)(a1 + 372) = v182;
  *(unsigned char *)(a1 + 373) = v177;
  __dst[0] = &__str;
  int v165 = sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)__dst);
  double v166 = -1.0;
  if (*((double *)v165 + 6) > 0.0)
  {
    __dst[0] = &__str;
    double v166 = (*((double *)sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)__dst) + 6)
          - *((double *)*a2 + 3))
         * 1000.0;
  }
  *(double *)(a1 + 376) = v166;
  __dst[0] = &__str;
  std::string::size_type v167 = sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)__dst);
  double v168 = -1.0;
  if (*((double *)v167 + 6) > 0.0)
  {
    __dst[0] = &__str;
    double v168 = (*((double *)sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)__dst) + 6)
          - *((double *)*a2 + 1))
         * 1000.0;
  }
  *(double *)(a1 + 384) = v168;
  __dst[0] = &__str;
  unint64_t v169 = sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)__dst);
  double v170 = -1.0;
  if (*((double *)v169 + 6) > 0.0)
  {
    __dst[0] = &__str;
    double v170 = (*((double *)sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)__dst) + 6)
          - *((double *)*a2 + 2))
         * 1000.0;
  }
  *(double *)(a1 + 392) = v170;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 400) = _Q0;
  *(void *)(a1 + 416) = 0xBFF0000000000000;
  if (!*(void *)(a1 + 32)
    || (__dst[0] = &__str, !sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)__dst)[41]))
  {
    double v153 = v180;
  }
  *(double *)(a1 + 424) = v153;
  *(void *)(a1 + 432) = 0xBFF0000000000000;
  if (v178 || (__dst[0] = &__str, sub_10004E2E4((uint64_t *)__p, (unsigned __int8 *)&__str, (long long **)__dst)[41])) {
    sub_10004BF0C(a1);
  }
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }

  if (SHIBYTE(v222.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v222.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  sub_10004DAC0((uint64_t)__p);
  if (SHIBYTE(v209.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v209.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v210.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v210.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v211.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v211.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v212.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v212.__r_.__value_.__l.__data_);
  }
}

void sub_10004BA7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,void *a63)
{
  if (SLOBYTE(STACK[0x277]) < 0) {
    operator delete((void *)STACK[0x260]);
  }

  if (*(char *)(v74 - 217) < 0) {
    operator delete(*(void **)(v74 - 240));
  }
  if (*(char *)(v74 - 185) < 0) {
    operator delete(*(void **)(v74 - 208));
  }
  sub_10004DAC0((uint64_t)&a57);
  if (a68 < 0) {
    operator delete(a63);
  }
  if (a72 < 0) {
    operator delete(a70);
  }
  if (SLOBYTE(STACK[0x207]) < 0) {
    operator delete(a73);
  }
  if (SLOBYTE(STACK[0x227]) < 0) {
    operator delete((void *)STACK[0x210]);
  }
  _Unwind_Resume(a1);
}

void sub_10004BD34(id a1, id a2, id a3, BOOL *a4)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    v8[0] = 68289539;
    v8[1] = 0;
    __int16 v9 = 2082;
    double v10 = "";
    __int16 v11 = 2113;
    id v12 = v5;
    __int16 v13 = 2113;
    id v14 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#eff,collectEfficacyMetricForAlertType,weaReceivedMetaValue\", \"key\":%{private, location:escape_only}@, \"value\":%{private, location:escape_only}@}", (uint8_t *)v8, 0x26u);
  }
}

void sub_10004BE20(id a1, id a2, id a3, BOOL *a4)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    v8[0] = 68289539;
    v8[1] = 0;
    __int16 v9 = 2082;
    double v10 = "";
    __int16 v11 = 2113;
    id v12 = v5;
    __int16 v13 = 2113;
    id v14 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#eff,collectEfficacyMetricForAlertType,saMetaValue\", \"key\":%{private, location:escape_only}@, \"value\":%{private, location:escape_only}@}", (uint8_t *)v8, 0x26u);
  }
}

void sub_10004BF0C(uint64_t a1)
{
  int v44 = 0;
  uint64_t v2 = CFCalendarCopyCurrent();
  double Current = CFAbsoluteTimeGetCurrent();
  CFCalendarDecomposeAbsoluteTime(v2, Current, "H", &v44);
  uint64_t v4 = *(void *)(a1 + 56);
  *(void *)uint64_t buf = (uint64_t)Current;
  sub_1000543B0(v4, (uint64_t *)buf);
  if (v2) {
    CFRelease(v2);
  }
  AnalyticsSendEventLazy();
  id v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    id v6 = (void *)(a1 + 88);
    if (*(char *)(a1 + 111) < 0) {
      id v6 = (void *)*v6;
    }
    uint64_t v7 = (void *)(a1 + 112);
    if (*(char *)(a1 + 135) < 0) {
      uint64_t v7 = (void *)*v7;
    }
    __int16 v8 = (void *)(a1 + 136);
    if (*(char *)(a1 + 159) < 0) {
      __int16 v8 = (void *)*v8;
    }
    __int16 v9 = (void *)(a1 + 160);
    if (*(char *)(a1 + 183) < 0) {
      __int16 v9 = (void *)*v9;
    }
    double v10 = (void *)(a1 + 184);
    if (*(char *)(a1 + 207) < 0) {
      double v10 = (void *)*v10;
    }
    __int16 v11 = (void *)(a1 + 208);
    if (*(char *)(a1 + 231) < 0) {
      __int16 v11 = (void *)*v11;
    }
    int v47 = "";
    *(_DWORD *)__int16 v49 = v44;
    *(_WORD *)&v49[4] = 2081;
    *(void *)&v49[6] = v6;
    *(void *)&v49[16] = v7;
    *(void *)&v49[26] = v8;
    *(void *)&v49[36] = v9;
    *(void *)__int16 v51 = v10;
    __int16 v46 = 2082;
    *(_WORD *)&v49[14] = 2082;
    *(_WORD *)&v49[24] = 2082;
    *(_WORD *)&v49[34] = 2082;
    __int16 v50 = 2082;
    *(_WORD *)&v51[8] = 2082;
    int v12 = *(_DWORD *)(a1 + 340);
    std::string::size_type v52 = v11;
    int v13 = *(_DWORD *)(a1 + 336);
    *(_DWORD *)&v53[2] = v12;
    int v14 = *(_DWORD *)(a1 + 348);
    *(_DWORD *)&v54[2] = v13;
    int v15 = *(unsigned __int8 *)(a1 + 356);
    *(_DWORD *)&v55[2] = v14;
    int v16 = *(unsigned __int8 *)(a1 + 357);
    *(_DWORD *)((char *)&v56 + 2) = v15;
    int v17 = *(unsigned __int8 *)(a1 + 358);
    *(_DWORD *)__int16 v57 = v16;
    int v18 = *(unsigned __int8 *)(a1 + 359);
    *(_DWORD *)&v57[6] = v17;
    int v19 = *(unsigned __int8 *)(a1 + 360);
    int v59 = v18;
    int v20 = *(unsigned __int8 *)(a1 + 361);
    int v61 = v19;
    __int16 v60 = 1025;
    __int16 v62 = 1025;
    int v21 = *(unsigned __int8 *)(a1 + 362);
    int v63 = v20;
    int v22 = *(unsigned __int8 *)(a1 + 363);
    int v65 = v21;
    int v23 = *(unsigned __int8 *)(a1 + 364);
    int v67 = v22;
    int v24 = *(unsigned __int8 *)(a1 + 365);
    int v69 = v23;
    int v25 = *(unsigned __int8 *)(a1 + 366);
    int v71 = v24;
    int v26 = *(unsigned __int8 *)(a1 + 367);
    int v73 = v25;
    int v27 = *(unsigned __int8 *)(a1 + 368);
    int v75 = v26;
    __int16 v48 = 1026;
    *(_WORD *)__int16 v53 = 1026;
    *(_WORD *)BOOL v54 = 1026;
    *(_WORD *)CFStringRef v55 = 1026;
    LOWORD(v56) = 1026;
    HIWORD(v56) = 1026;
    *(_WORD *)&v57[4] = 1026;
    __int16 v58 = 1026;
    __int16 v64 = 1026;
    __int16 v66 = 1026;
    __int16 v68 = 1026;
    __int16 v70 = 1026;
    __int16 v72 = 1026;
    __int16 v74 = 1026;
    __int16 v76 = 1026;
    int v77 = v27;
    uint64_t v28 = *(void *)(a1 + 384);
    uint64_t v79 = *(void *)(a1 + 376);
    uint64_t v81 = v28;
    uint64_t v29 = *(void *)(a1 + 400);
    uint64_t v83 = *(void *)(a1 + 392);
    uint64_t v85 = v29;
    uint64_t v30 = *(void *)(a1 + 416);
    uint64_t v87 = *(void *)(a1 + 408);
    __int16 v78 = 2050;
    __int16 v80 = 2050;
    __int16 v82 = 2050;
    __int16 v84 = 2050;
    __int16 v86 = 2050;
    __int16 v88 = 2050;
    uint64_t v89 = v30;
    *(_DWORD *)uint64_t buf = 68296451;
    *(_DWORD *)&uint8_t buf[4] = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#eff,metric submitted\", \"hourOfMetricTrigger\":%{public}d, \"alertIDString\":%{private, location:escape_only}s, \"participationType\":%{public, location:escape_only}s, \"pushInterface\":%{public, location:escape_only}s, \"efficacyType\":%{public, location:escape_only}s, \"hashType\":%{public, location:escape_only}s, \"cellularConnectionStatus\":%{public, location:escape_only}s, \"maCompatibilityVersion\":%{public}d, \"maContentVersion\":%{public}d, \"wifiQuality\":%{public}d, \"WoW\":%{public}d, \"wasCellularInternetReachable\":%{public}d, \"wasChannelSubscribed\":%{public}d, \"wasSaReceived\":%{public}d, \"wasUserInSaPolygon\":%{private}d, \"wasUserInWeaPolygon\":%{private}d, \"wasWeaAlertReceived\":%{public}d, \"wasWeaDisplayed\":%{public}d, \"didWeaHavePolygon\":%{public}d, \"wasWifiInternetReachable\":%{public}d, \"wasAnyAlertReceived\":%{public}d, \"wasSaExpected\":%{public}d, \"wasRebootedDuringRollingPeriod\":%{public}d, \"saLatencyRelativeToOriginatorTime\":\"%{public}0.3f\", \"saLatencyRelativeToServerTime\":\"%{public}0.3f\", \"saLatencyFromServerIngressTime\":\"%{public}0.3f\", \"weaLatencyRelativeToOriginatorTime\":\"%{public}0.3f\", \"weaDisplayedLatencyRelativeToReceivedTime\":\"%{public}0.3f\", \"weaMinusSaTimestamp\":\"%{public}0.3f\"}", buf, 0xF0u);
    id v5 = SALogObjectGeneral;
  }
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    char v31 = (void *)(a1 + 232);
    if (*(char *)(a1 + 255) < 0) {
      char v31 = (void *)*v31;
    }
    double v32 = (void *)(a1 + 256);
    if (*(char *)(a1 + 279) < 0) {
      double v32 = (void *)*v32;
    }
    double v33 = (void *)(a1 + 280);
    if (*(char *)(a1 + 303) < 0) {
      double v33 = (void *)*v33;
    }
    uint64_t v34 = (void *)(a1 + 304);
    if (*(char *)(a1 + 327) < 0) {
      uint64_t v34 = (void *)*v34;
    }
    int v35 = *(_DWORD *)(a1 + 328);
    int v36 = *(unsigned __int8 *)(a1 + 369);
    int v37 = *(unsigned __int8 *)(a1 + 370);
    int v38 = *(unsigned __int8 *)(a1 + 371);
    int v39 = *(unsigned __int8 *)(a1 + 372);
    int v40 = *(unsigned __int8 *)(a1 + 373);
    int v41 = *(_DWORD *)(a1 + 344);
    uint64_t v42 = *(void *)(a1 + 424);
    uint64_t v43 = *(void *)(a1 + 432);
    *(_DWORD *)uint64_t buf = 68292355;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v46 = 2082;
    int v47 = "";
    __int16 v48 = 2082;
    *(void *)__int16 v49 = v31;
    *(_WORD *)&v49[8] = 2082;
    *(void *)&v49[10] = v32;
    *(_WORD *)&v49[18] = 2081;
    *(void *)&v49[20] = v33;
    *(_WORD *)&v49[28] = 2082;
    *(void *)&v49[30] = v34;
    *(_WORD *)&v49[38] = 1026;
    *(_DWORD *)&v49[40] = v35;
    __int16 v50 = 1026;
    *(_DWORD *)__int16 v51 = v36;
    *(_WORD *)&v51[4] = 1026;
    *(_DWORD *)&v51[6] = v37;
    LOWORD(v52) = 1026;
    *(_DWORD *)((char *)&v52 + 2) = v38;
    HIWORD(v52) = 1026;
    *(_DWORD *)__int16 v53 = v39;
    *(_WORD *)&v53[4] = 1026;
    *(_DWORD *)BOOL v54 = v40;
    *(_WORD *)&v54[4] = 1026;
    *(_DWORD *)CFStringRef v55 = v41;
    *(_WORD *)&v55[4] = 2050;
    uint64_t v56 = v42;
    *(_WORD *)__int16 v57 = 2050;
    *(void *)&v57[2] = v43;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#eff,metric submitted continue\", \"RAT\":%{public, location:escape_only}s, \"rrcConnectionStatus\":%{public, location:escape_only}s, \"APSDConnectivityStatus\":%{private, location:escape_only}s, \"weaHandling\":%{public, location:escape_only}s, \"cellularQuality\":%{public}d, \"wasEnhancedDeliveryEnabled\":%{public}d, \"isWeaMinusSALessThanThreshold\":%{public}d, \"isAuthenticated\":%{public}d, \"isTestAlert\":%{public}d, \"isReceivedViaPush\":%{public}d, \"numAlertsPerDay\":%{public}d, \"timeSinceRrcConnection\":\"%{public}.3f\", \"weaMinusSaNextMatch\":\"%{public}.3f\"}", buf, 0x78u);
  }
}

id sub_10004C368(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v58[0] = @"hourOfMetricTrigger";
  __int16 v57 = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 40)];
  v59[0] = v57;
  v58[1] = @"manifestVersionNumber";
  uint64_t v56 = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(v1 + 48) + 24)];
  v59[1] = v56;
  v58[2] = @"alertIDString";
  uint64_t v2 = (void *)(v1 + 88);
  if (*(char *)(v1 + 111) < 0) {
    uint64_t v2 = (void *)*v2;
  }
  CFStringRef v55 = +[NSString stringWithUTF8String:v2];
  v59[2] = v55;
  v58[3] = @"participationType";
  unint64_t v3 = (void *)(v1 + 112);
  if (*(char *)(v1 + 135) < 0) {
    unint64_t v3 = (void *)*v3;
  }
  BOOL v54 = +[NSString stringWithUTF8String:v3];
  v59[3] = v54;
  v58[4] = @"pushInterface";
  uint64_t v4 = (void *)(v1 + 136);
  if (*(char *)(v1 + 159) < 0) {
    uint64_t v4 = (void *)*v4;
  }
  __int16 v53 = +[NSString stringWithUTF8String:v4];
  v59[4] = v53;
  v58[5] = @"efficacyType";
  id v5 = (void *)(v1 + 160);
  if (*(char *)(v1 + 183) < 0) {
    id v5 = (void *)*v5;
  }
  std::string::size_type v52 = +[NSString stringWithUTF8String:v5];
  v59[5] = v52;
  v58[6] = @"hashType";
  id v6 = (void *)(v1 + 184);
  if (*(char *)(v1 + 207) < 0) {
    id v6 = (void *)*v6;
  }
  __int16 v51 = +[NSString stringWithUTF8String:v6];
  v59[6] = v51;
  v58[7] = @"cellularConnectionStatus";
  uint64_t v7 = (void *)(v1 + 208);
  if (*(char *)(v1 + 231) < 0) {
    uint64_t v7 = (void *)*v7;
  }
  __int16 v50 = +[NSString stringWithUTF8String:v7];
  v59[7] = v50;
  v58[8] = @"RAT";
  __int16 v8 = (void *)(v1 + 232);
  if (*(char *)(v1 + 255) < 0) {
    __int16 v8 = (void *)*v8;
  }
  __int16 v49 = +[NSString stringWithUTF8String:v8];
  v59[8] = v49;
  v58[9] = @"rrcConnectionStatus";
  __int16 v9 = (void *)(v1 + 256);
  if (*(char *)(v1 + 279) < 0) {
    __int16 v9 = (void *)*v9;
  }
  __int16 v48 = +[NSString stringWithUTF8String:v9];
  v59[9] = v48;
  v58[10] = @"APSDConnectivityStatus";
  double v10 = (void *)(v1 + 280);
  if (*(char *)(v1 + 303) < 0) {
    double v10 = (void *)*v10;
  }
  int v47 = +[NSString stringWithUTF8String:v10];
  v59[10] = v47;
  v58[11] = @"weaHandling";
  __int16 v11 = (void *)(v1 + 304);
  if (*(char *)(v1 + 327) < 0) {
    __int16 v11 = (void *)*v11;
  }
  __int16 v46 = +[NSString stringWithUTF8String:v11];
  v59[11] = v46;
  v58[12] = @"CellularQuality";
  int v45 = +[NSNumber numberWithInt:*(unsigned int *)(v1 + 328)];
  v59[12] = v45;
  v58[13] = @"cellularQualityAverage";
  int v44 = +[NSNumber numberWithInt:*(unsigned int *)(v1 + 332)];
  v59[13] = v44;
  v58[14] = @"maContentVersion";
  uint64_t v43 = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(v1 + 336)];
  v59[14] = v43;
  v58[15] = @"maCompatibilityVersion";
  uint64_t v42 = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(v1 + 340)];
  v59[15] = v42;
  v58[16] = @"numAlertsPerDay";
  int v41 = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(v1 + 344)];
  v59[16] = v41;
  v58[17] = @"WifiQuality";
  int v40 = +[NSNumber numberWithInt:*(unsigned int *)(v1 + 348)];
  v59[17] = v40;
  v58[18] = @"wifiQualityAverage";
  int v39 = +[NSNumber numberWithInt:*(unsigned int *)(v1 + 352)];
  v59[18] = v39;
  v58[19] = @"WoW";
  int v38 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 356)];
  v59[19] = v38;
  v58[20] = @"wasCellularInternetReachable";
  int v37 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 357)];
  v59[20] = v37;
  v58[21] = @"wasChannelSubscribed";
  int v36 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 358)];
  v59[21] = v36;
  v58[22] = @"wasSaReceived";
  int v35 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 359)];
  v59[22] = v35;
  v58[23] = @"wasUserInSaPolygon";
  uint64_t v34 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 360)];
  v59[23] = v34;
  v58[24] = @"wasUserInWeaPolygon";
  double v33 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 361)];
  v59[24] = v33;
  v58[25] = @"wasWeaAlertReceived";
  double v32 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 362)];
  v59[25] = v32;
  v58[26] = @"wasWeaDisplayed";
  char v31 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 363)];
  v59[26] = v31;
  v58[27] = @"didWeaHavePolygon";
  uint64_t v30 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 364)];
  v59[27] = v30;
  v58[28] = @"wasWifiInternetReachable";
  uint64_t v29 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 365)];
  v59[28] = v29;
  v58[29] = @"wasAnyAlertReceived";
  uint64_t v28 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 366)];
  v59[29] = v28;
  v58[30] = @"wasSaExpected";
  int v27 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 367)];
  v59[30] = v27;
  v58[31] = @"wasRebootedDuringRollingPeriod";
  int v26 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 368)];
  v59[31] = v26;
  v58[32] = @"wasEnhancedDeliveryEnabled";
  int v25 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 369)];
  v59[32] = v25;
  v58[33] = @"isWeaMinusSALessThanThreshold";
  int v24 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 370)];
  v59[33] = v24;
  v58[34] = @"isTestAlert";
  int v23 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 372)];
  v59[34] = v23;
  v58[35] = @"isReceivedViaPush";
  int v12 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 373)];
  v59[35] = v12;
  v58[36] = @"saLatencyRelativeToOriginatorTime";
  int v13 = +[NSNumber numberWithDouble:*(double *)(v1 + 376)];
  v59[36] = v13;
  v58[37] = @"saLatencyRelativeToServerTime";
  int v14 = +[NSNumber numberWithDouble:*(double *)(v1 + 384)];
  v59[37] = v14;
  v58[38] = @"saLatencyFromServerIngressTime";
  int v15 = +[NSNumber numberWithDouble:*(double *)(v1 + 392)];
  v59[38] = v15;
  v58[39] = @"weaLatencyRelativeToOriginatorTime";
  int v16 = +[NSNumber numberWithDouble:*(double *)(v1 + 400)];
  v59[39] = v16;
  v58[40] = @"weaDisplayedLatencyRelativeToReceivedTime";
  int v17 = +[NSNumber numberWithDouble:*(double *)(v1 + 408)];
  v59[40] = v17;
  v58[41] = @"weaMinusSaTimestamp";
  int v18 = +[NSNumber numberWithDouble:*(double *)(v1 + 416)];
  v59[41] = v18;
  v58[42] = @"timeSinceRrcConnection";
  int v19 = +[NSNumber numberWithDouble:*(double *)(v1 + 424)];
  v59[42] = v19;
  v58[43] = @"weaMinusSaNextMatch";
  int v20 = +[NSNumber numberWithDouble:*(double *)(v1 + 432)];
  v59[43] = v20;
  id v22 = +[NSDictionary dictionaryWithObjects:v59 forKeys:v58 count:44];

  return v22;
}

void sub_10004CC08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29,void *a30,void *a31,void *a32,void *a33,void *a34,void *a35,void *a36,void *a37,void *a38,void *a39,void *a40,void *a41,void *a42,void *a43,void *a44)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10004CEB0(uint64_t a1)
{
  if (*(char *)(a1 + 239) < 0) {
    operator delete(*(void **)(a1 + 216));
  }
  if (*(char *)(a1 + 215) < 0) {
    operator delete(*(void **)(a1 + 192));
  }
  if (*(char *)(a1 + 191) < 0) {
    operator delete(*(void **)(a1 + 168));
  }
  if (*(char *)(a1 + 167) < 0) {
    operator delete(*(void **)(a1 + 144));
  }
  if (*(char *)(a1 + 143) < 0) {
    operator delete(*(void **)(a1 + 120));
  }
  if (*(char *)(a1 + 119) < 0) {
    operator delete(*(void **)(a1 + 96));
  }
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10004CF74(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (uint64_t *)**a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)v1[1];
    id v5 = **a1;
    if (v4 != v2)
    {
      do
        sub_10004DA08(--v4);
      while (v4 != v2);
      id v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_10004CFF8(uint64_t a1, void *a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v3 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  uint64_t v4 = (void **)(a2 + 1);
  id v5 = (void **)*a2;
  if ((void *)*a2 != a2 + 1)
  {
    id v6 = 0;
    uint64_t v7 = (uint64_t *)(a1 + 8);
    while (v7 != v3)
    {
      __int16 v8 = v3;
      if (v6)
      {
        do
        {
          __int16 v9 = v6;
          id v6 = (uint64_t *)v6[1];
        }
        while (v6);
      }
      else
      {
        do
        {
          __int16 v9 = (uint64_t *)v8[2];
          BOOL v10 = *v9 == (void)v8;
          __int16 v8 = v9;
        }
        while (v10);
      }
      if ((sub_10002779C(v9 + 7, v5 + 7) & 0x80) != 0)
      {
        if (!*v3)
        {
LABEL_15:
          int v17 = v3;
          uint64_t v12 = (uint64_t)v3;
          __int16 v11 = (uint64_t **)v3;
          goto LABEL_16;
        }
        goto LABEL_11;
      }
      __int16 v11 = (uint64_t **)sub_10004D24C(a1, &v17, (uint64_t)(v5 + 4));
LABEL_12:
      if (*v11) {
        goto LABEL_17;
      }
      uint64_t v12 = (uint64_t)v17;
LABEL_16:
      sub_10004D17C((uint64_t)v16, a1, (uint64_t)(v5 + 4));
      sub_100015DE4((uint64_t **)a1, v12, v11, v16[0]);
      v16[0] = 0;
      sub_10004D2E0((uint64_t)v16);
LABEL_17:
      int v13 = (void **)v5[1];
      if (v13)
      {
        do
        {
          int v14 = v13;
          int v13 = (void **)*v13;
        }
        while (v13);
      }
      else
      {
        do
        {
          int v14 = (void **)v5[2];
          BOOL v10 = *v14 == v5;
          id v5 = v14;
        }
        while (!v10);
      }
      if (v14 == v4) {
        return a1;
      }
      uint64_t v7 = *(uint64_t **)a1;
      id v6 = *(uint64_t **)(a1 + 8);
      id v5 = v14;
    }
    __int16 v9 = v3;
    if (!v6) {
      goto LABEL_15;
    }
LABEL_11:
    int v17 = v9;
    __int16 v11 = (uint64_t **)(v9 + 1);
    goto LABEL_12;
  }
  return a1;
}

void sub_10004D168(_Unwind_Exception *a1)
{
  sub_10004D390(*v1);
  _Unwind_Resume(a1);
}

unsigned char *sub_10004D17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 8;
  id v6 = operator new(0x50uLL);
  uint64_t v7 = v6;
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = 0;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_100004CB8(v6 + 32, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *((_OWORD *)v6 + 2) = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
  }
  BOOL result = v7 + 56;
  if (*(char *)(a3 + 47) < 0)
  {
    BOOL result = sub_100004CB8(result, *(void **)(a3 + 24), *(void *)(a3 + 32));
  }
  else
  {
    *(_OWORD *)BOOL result = *(_OWORD *)(a3 + 24);
    *((void *)v7 + 9) = *(void *)(a3 + 40);
  }
  *(unsigned char *)(a1 + 16) = 1;
  return result;
}

void sub_10004D220(_Unwind_Exception *a1)
{
  if (*(char *)(v2 + 55) < 0) {
    operator delete(*v3);
  }
  sub_10004D2E0(v1);
  _Unwind_Resume(a1);
}

void *sub_10004D24C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    id v6 = (void **)(a3 + 24);
    do
    {
      while (1)
      {
        uint64_t v7 = v4;
        __int16 v8 = v4 + 7;
        if ((sub_10002779C(v6, (void **)v4 + 7) & 0x80) == 0) {
          break;
        }
        uint64_t v4 = (void *)*v7;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_10;
        }
      }
      if ((sub_10002779C(v8, v6) & 0x80) == 0) {
        break;
      }
      uint64_t v5 = v7 + 1;
      uint64_t v4 = (void *)v7[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v7 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v7;
  return v5;
}

void sub_10004D2E0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_10004D338((uint64_t)v1 + 32);
    }
    operator delete(v1);
  }
}

void sub_10004D338(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

void sub_10004D390(void *a1)
{
  if (a1)
  {
    sub_10004D390(*a1);
    sub_10004D390(a1[1]);
    sub_10004D338((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

std::string *sub_10004D3E4(std::string *a1, char *__s)
{
  size_t v4 = strlen(__s);

  return sub_10001DCF8(a1, __s, v4);
}

char *sub_10004D42C(char *__dst, long long *a2, long long *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_100004CB8(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  id v6 = __dst + 24;
  if (*((char *)a3 + 23) < 0)
  {
    sub_100004CB8(v6, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v7 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)id v6 = v7;
  }
  return __dst;
}

void sub_10004D4A8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

char *sub_10004D4C4(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  long long v7 = result;
  uint64_t v8 = *((void *)result + 2);
  __int16 v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 5)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      void *v7 = 0;
      v7[1] = 0;
      _DWORD v7[2] = 0;
    }
    if (a4 >> 59) {
      sub_1000050E8();
    }
    uint64_t v10 = v8 >> 4;
    if (v8 >> 4 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v11 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    BOOL result = sub_10004D5D0(v7, v11);
    int v13 = (char *)v7[1];
    uint64_t v12 = (void **)(v7 + 1);
    __int16 v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      int v18 = v9;
      int v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  uint64_t v12 = (void **)(result + 8);
  int v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 5;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  int v16 = &__src[32 * v15];
  if (v14 != v9)
  {
    BOOL result = (char *)memmove(*(void **)result, __src, v14 - v9);
    __int16 v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    int v18 = v9;
    int v19 = v16;
LABEL_18:
    BOOL result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *uint64_t v12 = &v9[v17];
  return result;
}

char *sub_10004D5D0(void *a1, unint64_t a2)
{
  if (a2 >> 59) {
    sub_1000050E8();
  }
  BOOL result = (char *)sub_10004D614((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[32 * v4];
  return result;
}

void *sub_10004D614(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59) {
    sub_100004E00();
  }
  return operator new(32 * a2);
}

void sub_10004D650()
{
}

void *sub_10004D664(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F6FA0;
  result[1] = v3;
  return result;
}

uint64_t sub_10004D6AC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F6FA0;
  a2[1] = v2;
  return result;
}

void sub_10004D6D8(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  if (!v1[1])
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      long long v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100023BD4((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

uint64_t sub_10004D7A8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10004D7E8()
{
}

void sub_10004D7F8()
{
}

void *sub_10004D80C(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F7020;
  result[1] = v3;
  return result;
}

uint64_t sub_10004D854(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F7020;
  a2[1] = v2;
  return result;
}

void sub_10004D880(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!*(unsigned char *)(v1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      long long v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100025424(v1);
  }
}

uint64_t sub_10004D950(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10004D990()
{
}

id **sub_10004D99C(id **result, id *a2)
{
  uint64_t v2 = *result;
  void *result = a2;
  if (v2)
  {
    id v3 = *v2;
    *uint64_t v2 = 0;

    operator delete();
  }
  return result;
}

uint64_t sub_10004DA08(uint64_t *a1)
{
  uint64_t result = *a1;
  *a1 = 0;
  if (result)
  {
    sub_10004DA58(result);
    operator delete();
  }
  return result;
}

uint64_t sub_10004DA58(uint64_t a1)
{
  if (*(char *)(a1 + 119) < 0) {
    operator delete(*(void **)(a1 + 96));
  }
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  sub_10004D99C((id **)a1, 0);
  return a1;
}

uint64_t sub_10004DAC0(uint64_t a1)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2)
  {
    do
    {
      id v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  __int16 v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void sub_10004DB28(void **a1)
{
  sub_10004DAC0((uint64_t)(a1 + 7));
  uint64_t v2 = a1;
  sub_10004CF74(&v2);

  operator delete();
}

uint64_t sub_10004DB88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

unsigned __int8 *sub_10004DC20(void *a1, unsigned __int8 *a2)
{
  unint64_t v4 = sub_100036240((uint64_t)(a1 + 3), (uint64_t)a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  uint64_t v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  for (uint64_t i = *v10; i; uint64_t i = *(unsigned __int8 **)i)
  {
    unint64_t v12 = *((void *)i + 1);
    if (v12 == v6)
    {
      if (sub_10004DD1C(i + 16, a2)) {
        return i;
      }
    }
    else
    {
      if (v8 > 1)
      {
        if (v12 >= *(void *)&v5) {
          v12 %= *(void *)&v5;
        }
      }
      else
      {
        v12 &= *(void *)&v5 - 1;
      }
      if (v12 != v9) {
        return 0;
      }
    }
  }
  return i;
}

BOOL sub_10004DD1C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) == 0;
  }
  if (!a1[23]) {
    return 1;
  }
  uint64_t v6 = v2 - 1;
  do
  {
    int v8 = *a1++;
    int v7 = v8;
    int v10 = *a2++;
    int v9 = v10;
    BOOL v12 = v6-- != 0;
    BOOL v13 = v7 == v9;
    BOOL v14 = v7 == v9;
  }
  while (v13 && v12);
  return v14;
}

char *sub_10004DDC0(uint64_t *a1, unsigned __int8 *a2, long long **a3)
{
  int v7 = a1 + 3;
  unint64_t v8 = sub_100036240((uint64_t)(a1 + 3), (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = a1[1];
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    BOOL v13 = *(void ***)(*a1 + 8 * v3);
    if (v13)
    {
      BOOL v14 = (char *)*v13;
      if (*v13)
      {
        do
        {
          unint64_t v15 = *((void *)v14 + 1);
          if (v15 == v9)
          {
            if (sub_10004DD1C((unsigned __int8 *)v14 + 16, a2)) {
              return v14;
            }
          }
          else
          {
            if (v12 > 1)
            {
              if (v15 >= v10) {
                v15 %= v10;
              }
            }
            else
            {
              v15 &= v10 - 1;
            }
            if (v15 != v3) {
              break;
            }
          }
          BOOL v14 = *(char **)v14;
        }
        while (v14);
      }
    }
  }
  int v16 = *a3;
  BOOL v14 = (char *)operator new(0x30uLL);
  *(void *)BOOL v14 = 0;
  *((void *)v14 + 1) = v9;
  size_t v17 = v14 + 16;
  if (*((char *)v16 + 23) < 0)
  {
    sub_100004CB8(v17, *(void **)v16, *((void *)v16 + 1));
  }
  else
  {
    long long v18 = *v16;
    *((void *)v14 + 4) = *((void *)v16 + 2);
    *(_OWORD *)size_t v17 = v18;
  }
  *((_DWORD *)v14 + 10) = 0;
  float v19 = (float)(unint64_t)(a1[3] + 1);
  float v20 = *((float *)a1 + 8);
  if (!v10 || (float)(v20 * (float)v10) < v19)
  {
    BOOL v21 = 1;
    if (v10 >= 3) {
      BOOL v21 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v22 = v21 | (2 * v10);
    unint64_t v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23) {
      int8x8_t prime = (int8x8_t)v23;
    }
    else {
      int8x8_t prime = (int8x8_t)v22;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
    }
    unint64_t v10 = a1[1];
    if (*(void *)&prime > v10) {
      goto LABEL_33;
    }
    if (*(void *)&prime < v10)
    {
      unint64_t v31 = vcvtps_u32_f32((float)(unint64_t)a1[3] / *((float *)a1 + 8));
      if (v10 < 3 || (uint8x8_t v32 = (uint8x8_t)vcnt_s8((int8x8_t)v10), v32.i16[0] = vaddlv_u8(v32), v32.u32[0] > 1uLL))
      {
        unint64_t v31 = std::__next_prime(v31);
      }
      else
      {
        uint64_t v33 = 1 << -(char)__clz(v31 - 1);
        if (v31 >= 2) {
          unint64_t v31 = v33;
        }
      }
      if (*(void *)&prime <= v31) {
        int8x8_t prime = (int8x8_t)v31;
      }
      if (*(void *)&prime >= v10)
      {
        unint64_t v10 = a1[1];
      }
      else
      {
        if (prime)
        {
LABEL_33:
          if (*(void *)&prime >> 61) {
            sub_100004E00();
          }
          int v25 = operator new(8 * *(void *)&prime);
          int v26 = (void *)*a1;
          *a1 = (uint64_t)v25;
          if (v26) {
            operator delete(v26);
          }
          uint64_t v27 = 0;
          a1[1] = (uint64_t)prime;
          do
            *(void *)(*a1 + 8 * v27++) = 0;
          while (*(void *)&prime != v27);
          uint64_t v28 = (void *)a1[2];
          if (v28)
          {
            unint64_t v29 = v28[1];
            uint8x8_t v30 = (uint8x8_t)vcnt_s8(prime);
            v30.i16[0] = vaddlv_u8(v30);
            if (v30.u32[0] > 1uLL)
            {
              if (v29 >= *(void *)&prime) {
                v29 %= *(void *)&prime;
              }
            }
            else
            {
              v29 &= *(void *)&prime - 1;
            }
            *(void *)(*a1 + 8 * v29) = a1 + 2;
            uint64_t v34 = (void *)*v28;
            if (*v28)
            {
              do
              {
                unint64_t v35 = v34[1];
                if (v30.u32[0] > 1uLL)
                {
                  if (v35 >= *(void *)&prime) {
                    v35 %= *(void *)&prime;
                  }
                }
                else
                {
                  v35 &= *(void *)&prime - 1;
                }
                if (v35 != v29)
                {
                  if (!*(void *)(*a1 + 8 * v35))
                  {
                    *(void *)(*a1 + 8 * v35) = v28;
                    goto LABEL_58;
                  }
                  *uint64_t v28 = *v34;
                  void *v34 = **(void **)(*a1 + 8 * v35);
                  **(void **)(*a1 + 8 * v35) = v34;
                  uint64_t v34 = v28;
                }
                unint64_t v35 = v29;
LABEL_58:
                uint64_t v28 = v34;
                uint64_t v34 = (void *)*v34;
                unint64_t v29 = v35;
              }
              while (v34);
            }
          }
          unint64_t v10 = (unint64_t)prime;
          goto LABEL_62;
        }
        int v40 = (void *)*a1;
        *a1 = 0;
        if (v40) {
          operator delete(v40);
        }
        unint64_t v10 = 0;
        a1[1] = 0;
      }
    }
LABEL_62:
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  uint64_t v36 = *a1;
  int v37 = *(void **)(*a1 + 8 * v3);
  if (v37)
  {
    *(void *)BOOL v14 = *v37;
LABEL_75:
    void *v37 = v14;
    goto LABEL_76;
  }
  *(void *)BOOL v14 = a1[2];
  a1[2] = (uint64_t)v14;
  *(void *)(v36 + 8 * v3) = a1 + 2;
  if (*(void *)v14)
  {
    unint64_t v38 = *(void *)(*(void *)v14 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v38 >= v10) {
        v38 %= v10;
      }
    }
    else
    {
      v38 &= v10 - 1;
    }
    int v37 = (void *)(*a1 + 8 * v38);
    goto LABEL_75;
  }
LABEL_76:
  ++*v7;
  return v14;
}

void sub_10004E1E0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_10004E208(char a1, void **__p)
{
  if (a1)
  {
    if (*((char *)__p + 39) < 0) {
      operator delete(__p[2]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void sub_10004E268(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  int v5 = (uint64_t **)sub_10004D24C((uint64_t)a1, &v8, a2);
  if (!*v5)
  {
    uint64_t v6 = v5;
    sub_10004D17C((uint64_t)v7, (uint64_t)a1, a3);
    sub_100015DE4(a1, v8, v6, v7[0]);
    v7[0] = 0;
    sub_10004D2E0((uint64_t)v7);
  }
}

char *sub_10004E2E4(uint64_t *a1, unsigned __int8 *a2, long long **a3)
{
  int v7 = a1 + 3;
  unint64_t v8 = sub_100036240((uint64_t)(a1 + 3), (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = a1[1];
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    BOOL v13 = *(void ***)(*a1 + 8 * v3);
    if (v13)
    {
      BOOL v14 = (char *)*v13;
      if (*v13)
      {
        do
        {
          unint64_t v15 = *((void *)v14 + 1);
          if (v15 == v9)
          {
            if (sub_10004DD1C((unsigned __int8 *)v14 + 16, a2)) {
              return v14;
            }
          }
          else
          {
            if (v12 > 1)
            {
              if (v15 >= v10) {
                v15 %= v10;
              }
            }
            else
            {
              v15 &= v10 - 1;
            }
            if (v15 != v3) {
              break;
            }
          }
          BOOL v14 = *(char **)v14;
        }
        while (v14);
      }
    }
  }
  int v16 = *a3;
  BOOL v14 = (char *)operator new(0x40uLL);
  *(void *)BOOL v14 = 0;
  *((void *)v14 + 1) = v9;
  size_t v17 = v14 + 16;
  if (*((char *)v16 + 23) < 0)
  {
    sub_100004CB8(v17, *(void **)v16, *((void *)v16 + 1));
  }
  else
  {
    long long v18 = *v16;
    *((void *)v14 + 4) = *((void *)v16 + 2);
    *(_OWORD *)size_t v17 = v18;
  }
  *((void *)v14 + 5) = 0;
  *((void *)v14 + 6) = 0;
  *((void *)v14 + 7) = 0;
  float v19 = (float)(unint64_t)(a1[3] + 1);
  float v20 = *((float *)a1 + 8);
  if (!v10 || (float)(v20 * (float)v10) < v19)
  {
    BOOL v21 = 1;
    if (v10 >= 3) {
      BOOL v21 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v22 = v21 | (2 * v10);
    unint64_t v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23) {
      int8x8_t prime = (int8x8_t)v23;
    }
    else {
      int8x8_t prime = (int8x8_t)v22;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
    }
    unint64_t v10 = a1[1];
    if (*(void *)&prime > v10) {
      goto LABEL_33;
    }
    if (*(void *)&prime < v10)
    {
      unint64_t v31 = vcvtps_u32_f32((float)(unint64_t)a1[3] / *((float *)a1 + 8));
      if (v10 < 3 || (uint8x8_t v32 = (uint8x8_t)vcnt_s8((int8x8_t)v10), v32.i16[0] = vaddlv_u8(v32), v32.u32[0] > 1uLL))
      {
        unint64_t v31 = std::__next_prime(v31);
      }
      else
      {
        uint64_t v33 = 1 << -(char)__clz(v31 - 1);
        if (v31 >= 2) {
          unint64_t v31 = v33;
        }
      }
      if (*(void *)&prime <= v31) {
        int8x8_t prime = (int8x8_t)v31;
      }
      if (*(void *)&prime >= v10)
      {
        unint64_t v10 = a1[1];
      }
      else
      {
        if (prime)
        {
LABEL_33:
          if (*(void *)&prime >> 61) {
            sub_100004E00();
          }
          int v25 = operator new(8 * *(void *)&prime);
          int v26 = (void *)*a1;
          *a1 = (uint64_t)v25;
          if (v26) {
            operator delete(v26);
          }
          uint64_t v27 = 0;
          a1[1] = (uint64_t)prime;
          do
            *(void *)(*a1 + 8 * v27++) = 0;
          while (*(void *)&prime != v27);
          uint64_t v28 = (void *)a1[2];
          if (v28)
          {
            unint64_t v29 = v28[1];
            uint8x8_t v30 = (uint8x8_t)vcnt_s8(prime);
            v30.i16[0] = vaddlv_u8(v30);
            if (v30.u32[0] > 1uLL)
            {
              if (v29 >= *(void *)&prime) {
                v29 %= *(void *)&prime;
              }
            }
            else
            {
              v29 &= *(void *)&prime - 1;
            }
            *(void *)(*a1 + 8 * v29) = a1 + 2;
            uint64_t v34 = (void *)*v28;
            if (*v28)
            {
              do
              {
                unint64_t v35 = v34[1];
                if (v30.u32[0] > 1uLL)
                {
                  if (v35 >= *(void *)&prime) {
                    v35 %= *(void *)&prime;
                  }
                }
                else
                {
                  v35 &= *(void *)&prime - 1;
                }
                if (v35 != v29)
                {
                  if (!*(void *)(*a1 + 8 * v35))
                  {
                    *(void *)(*a1 + 8 * v35) = v28;
                    goto LABEL_58;
                  }
                  *uint64_t v28 = *v34;
                  void *v34 = **(void **)(*a1 + 8 * v35);
                  **(void **)(*a1 + 8 * v35) = v34;
                  uint64_t v34 = v28;
                }
                unint64_t v35 = v29;
LABEL_58:
                uint64_t v28 = v34;
                uint64_t v34 = (void *)*v34;
                unint64_t v29 = v35;
              }
              while (v34);
            }
          }
          unint64_t v10 = (unint64_t)prime;
          goto LABEL_62;
        }
        int v40 = (void *)*a1;
        *a1 = 0;
        if (v40) {
          operator delete(v40);
        }
        unint64_t v10 = 0;
        a1[1] = 0;
      }
    }
LABEL_62:
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  uint64_t v36 = *a1;
  int v37 = *(void **)(*a1 + 8 * v3);
  if (v37)
  {
    *(void *)BOOL v14 = *v37;
LABEL_75:
    void *v37 = v14;
    goto LABEL_76;
  }
  *(void *)BOOL v14 = a1[2];
  a1[2] = (uint64_t)v14;
  *(void *)(v36 + 8 * v3) = a1 + 2;
  if (*(void *)v14)
  {
    unint64_t v38 = *(void *)(*(void *)v14 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v38 >= v10) {
        v38 %= v10;
      }
    }
    else
    {
      v38 &= v10 - 1;
    }
    int v37 = (void *)(*a1 + 8 * v38);
    goto LABEL_75;
  }
LABEL_76:
  ++*v7;
  return v14;
}

void sub_10004E708(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_10004E730(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  sub_100035A58((uint64_t)v16, a3);
  *a1 = off_1000F6B60;
  sub_100035A58((uint64_t)(a1 + 1), (uint64_t)v16);
  sub_100035AF0(v16);
  *a1 = off_1000F70E0;
  sub_100035A58((uint64_t)(a1 + 5), a3);
  uint64_t v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v13 = 0;
    __int16 v14 = 2082;
    unint64_t v15 = "";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SABatteryServiceTest,init\"}", buf, 0x12u);
  }
  id v7 = v5;
  unint64_t v8 = sub_100017698();
  id v9 = v7;
  v11[0] = off_1000F7128;
  v11[1] = a1;
  _DWORD v11[2] = v9;
  v11[3] = v11;
  sub_10001797C((uint64_t)v8, 4, (uint64_t)v11);
  sub_10001802C(v11);

  return a1;
}

void sub_10004E8DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10001802C(&a9);

  sub_100035AF0(v13);
  *id v9 = v12;
  sub_100035AF0(v11);

  _Unwind_Resume(a1);
}

void *sub_10004E938(void *a1)
{
  *a1 = off_1000F70E0;
  sub_100035AF0(a1 + 5);
  *a1 = off_1000F6B60;
  sub_100035AF0(a1 + 1);
  return a1;
}

void sub_10004E9A0(void *a1)
{
  *a1 = off_1000F70E0;
  sub_100035AF0(a1 + 5);
  *a1 = off_1000F6B60;
  sub_100035AF0(a1 + 1);

  operator delete();
}

uint64_t sub_10004EA30(uint64_t a1)
{
  return a1;
}

void sub_10004EA5C(uint64_t a1)
{
  operator delete();
}

void *sub_10004EAA8(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  *uint64_t v2 = off_1000F7128;
  v2[1] = v3;
  v2[2] = v4;
  return v2;
}

id sub_10004EB00(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  *a2 = off_1000F7128;
  a2[1] = v3;
  id result = v4;
  a2[2] = result;
  return result;
}

void sub_10004EB48(uint64_t a1)
{
}

void sub_10004EB50(id *a1)
{
  operator delete(a1);
}

void sub_10004EB8C(uint64_t a1, id *a2)
{
  id v3 = *a2;
  uint64_t v4 = *(void *)(a1 + 8);
  id v5 = *(NSObject **)(a1 + 16);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  _DWORD v7[2] = sub_10004EC74;
  void v7[3] = &unk_1000F6B88;
  id v8 = v3;
  uint64_t v9 = v4;
  id v6 = v3;
  dispatch_async(v5, v7);
}

uint64_t sub_10004EC28(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10004EC68()
{
}

void sub_10004EC74(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _DWORD v4[2] = sub_10004ED30;
  v4[3] = &unk_1000F6B88;
  uint64_t v6 = v2;
  id v5 = *(id *)(a1 + 32);
  sub_10004ED30((uint64_t)v4);
}

void sub_10004ED1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_10004ED30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = *(id *)(a1 + 32);
  if (xpc_dictionary_get_int64(v2, "TestMessageType") == 4)
  {
    int int64 = xpc_dictionary_get_int64(v2, "BatteryConnected");
    sub_1000352CC(v1 + 40, int64 == 0);
  }
}

void sub_10004EDBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_10004EDD0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_100106A20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_100106A20))
  {
    sub_10004EFBC();
    __cxa_atexit((void (*)(void *))sub_10004EE60, &unk_100106A28, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_100106A20);
  }
  return &unk_100106A28;
}

void sub_10004EE48(_Unwind_Exception *a1)
{
}

uint64_t sub_10004EE60(uint64_t a1)
{
  id v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v7) = 2082;
    *(void *)((char *)&v7 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#nam,release\"}", buf, 0x12u);
  }
  id v3 = *(NSObject **)(a1 + 192);
  *(void *)uint64_t buf = _NSConcreteStackBlock;
  *(void *)&long long v7 = 3221225472;
  *((void *)&v7 + 1) = sub_10004FE5C;
  id v8 = &unk_1000F5EA8;
  uint64_t v9 = a1;
  dispatch_async(v3, buf);

  if (*(char *)(a1 + 183) < 0) {
    operator delete(*(void **)(a1 + 160));
  }
  sub_10000DA94((void *)(a1 + 104));
  sub_10000DB18((void *)(a1 + 72));
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  id v5 = (void **)(a1 + 24);
  sub_10000DB9C(&v5);
  return a1;
}

void sub_10004EFBC()
{
  sub_10000F818((uint64_t)&unk_100106A28);
  qword_100106AE8 = 0;
  v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v6 = 0;
    __int16 v7 = 2082;
    id v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#nam,init\"}", buf, 0x12u);
  }
  uint64_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v2 = dispatch_queue_create("com.apple.safetyalerts.networkActivityMetrics", v1);
  id v3 = (void *)qword_100106AE8;
  qword_100106AE8 = (uint64_t)v2;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10004F10C;
  block[3] = &unk_1000F5EA8;
  void block[4] = &unk_100106A28;
  dispatch_async((dispatch_queue_t)qword_100106AE8, block);
}

void *sub_10004F10C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(v1 + 192));
  sub_10000DD48(__str, "network_activity");
  dispatch_queue_t v2 = (void *)(v1 + 160);
  std::string::operator=((std::string *)(v1 + 160), (const std::string *)__str);
  if ((__str[23] & 0x80000000) != 0) {
    operator delete(*(void **)__str);
  }
  *(unsigned char *)(v1 + 1) = 0;
  *(void *)(v1 + 136) = 2000;
  sub_10000DD48(__str, "/var/mobile/Library/com.apple.safetyalerts/");
  sub_10000DD48(__p, "network_activity.elog");
  if ((v25 & 0x80u) == 0) {
    id v3 = __p;
  }
  else {
    id v3 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v4 = v25;
  }
  else {
    std::string::size_type v4 = (std::string::size_type)__p[1];
  }
  id v5 = std::string::append((std::string *)__str, (const std::string::value_type *)v3, v4);
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  int64_t v21 = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)float v20 = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  if ((char)v25 < 0) {
    operator delete(__p[0]);
  }
  if ((__str[23] & 0x80000000) != 0) {
    operator delete(*(void **)__str);
  }
  if (v21 >= 0) {
    __int16 v7 = (char *)v20;
  }
  else {
    __int16 v7 = (char *)v20[0];
  }
  __p[0] = off_1000F7200;
  int v26 = __p;
  v22[0] = off_1000F7290;
  unint64_t v23 = v22;
  if (v7)
  {
    sub_10000DD48(__str, v7);
    id v8 = (void **)(v1 + 48);
    if (*(char *)(v1 + 71) < 0) {
      operator delete(*v8);
    }
    *(_OWORD *)id v8 = *(_OWORD *)__str;
    *(void *)(v1 + 64) = *(void *)&__str[16];
    uint64_t v9 = (uint64_t)v26;
    if (v26)
    {
      if (v26 == __p)
      {
        *(void *)&__str[24] = __str;
        (*((void (**)(void **, unsigned char *))__p[0] + 3))(__p, __str);
LABEL_28:
        uint64_t v11 = v1 + 72;
        if (__str != (unsigned char *)(v1 + 72))
        {
          uint64_t v12 = *(void *)&__str[24];
          uint64_t v13 = *(void *)(v1 + 96);
          if (*(unsigned char **)&__str[24] == __str)
          {
            if (v13 == v11)
            {
              (*(void (**)(unsigned char *, void *))(*(void *)__str + 24))(__str, v28);
              (*(void (**)(void))(**(void **)&__str[24] + 32))(*(void *)&__str[24]);
              *(void *)&__str[24] = 0;
              (*(void (**)(void, unsigned char *))(**(void **)(v1 + 96) + 24))(*(void *)(v1 + 96), __str);
              (*(void (**)(void))(**(void **)(v1 + 96) + 32))(*(void *)(v1 + 96));
              *(void *)(v1 + 96) = 0;
              *(void *)&__str[24] = __str;
              (*(void (**)(void *, uint64_t))(v28[0] + 24))(v28, v1 + 72);
              (*(void (**)(void *))(v28[0] + 32))(v28);
            }
            else
            {
              (*(void (**)(unsigned char *, uint64_t))(*(void *)__str + 24))(__str, v1 + 72);
              (*(void (**)(void))(**(void **)&__str[24] + 32))(*(void *)&__str[24]);
              *(void *)&__str[24] = *(void *)(v1 + 96);
            }
            *(void *)(v1 + 96) = v11;
          }
          else if (v13 == v11)
          {
            (*(void (**)(uint64_t, unsigned char *))(*(void *)v11 + 24))(v1 + 72, __str);
            (*(void (**)(void))(**(void **)(v1 + 96) + 32))(*(void *)(v1 + 96));
            *(void *)(v1 + 96) = *(void *)&__str[24];
            *(void *)&__str[24] = __str;
          }
          else
          {
            *(void *)&__str[24] = *(void *)(v1 + 96);
            *(void *)(v1 + 96) = v12;
          }
        }
        sub_10000DB18(__str);
        uint64_t v14 = (uint64_t)v23;
        if (v23)
        {
          if (v23 == v22)
          {
            *(void *)&__str[24] = __str;
            (*(void (**)(void *, unsigned char *))(v22[0] + 24))(v22, __str);
            goto LABEL_42;
          }
          uint64_t v14 = (*(uint64_t (**)(void))(*v23 + 16))();
        }
        *(void *)&__str[24] = v14;
LABEL_42:
        uint64_t v15 = v1 + 104;
        if (__str != (unsigned char *)(v1 + 104))
        {
          uint64_t v16 = *(void *)&__str[24];
          uint64_t v17 = *(void *)(v1 + 128);
          if (*(unsigned char **)&__str[24] == __str)
          {
            if (v17 == v15)
            {
              (*(void (**)(unsigned char *, void *))(*(void *)__str + 24))(__str, v28);
              (*(void (**)(void))(**(void **)&__str[24] + 32))(*(void *)&__str[24]);
              *(void *)&__str[24] = 0;
              (*(void (**)(void, unsigned char *))(**(void **)(v1 + 128) + 24))(*(void *)(v1 + 128), __str);
              (*(void (**)(void))(**(void **)(v1 + 128) + 32))(*(void *)(v1 + 128));
              *(void *)(v1 + 128) = 0;
              *(void *)&__str[24] = __str;
              (*(void (**)(void *, uint64_t))(v28[0] + 24))(v28, v1 + 104);
              (*(void (**)(void *))(v28[0] + 32))(v28);
            }
            else
            {
              (*(void (**)(unsigned char *, uint64_t))(*(void *)__str + 24))(__str, v1 + 104);
              (*(void (**)(void))(**(void **)&__str[24] + 32))(*(void *)&__str[24]);
              *(void *)&__str[24] = *(void *)(v1 + 128);
            }
            *(void *)(v1 + 128) = v15;
          }
          else if (v17 == v15)
          {
            (*(void (**)(uint64_t, unsigned char *))(*(void *)v15 + 24))(v1 + 104, __str);
            (*(void (**)(void))(**(void **)(v1 + 128) + 32))(*(void *)(v1 + 128));
            *(void *)(v1 + 128) = *(void *)&__str[24];
            *(void *)&__str[24] = __str;
          }
          else
          {
            *(void *)&__str[24] = *(void *)(v1 + 128);
            *(void *)(v1 + 128) = v16;
          }
        }
        sub_10000DA94(__str);
        *(void *)(v1 + 144) = 5000;
        goto LABEL_52;
      }
      uint64_t v9 = (*((uint64_t (**)(void))*v26 + 2))();
    }
    *(void *)&__str[24] = v9;
    goto LABEL_28;
  }
  unint64_t v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    if (*(char *)(v1 + 183) < 0) {
      dispatch_queue_t v2 = (void *)*v2;
    }
    *(void *)std::string __str = 68289283;
    *(_WORD *)&__str[8] = 2082;
    *(void *)&__str[10] = "";
    *(_WORD *)&__str[18] = 2081;
    *(void *)&__str[20] = v2;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,invalidArgs\", \"history\":%{private, location:escape_only}s}", __str, 0x1Cu);
  }
LABEL_52:
  sub_10000DA94(v22);
  sub_10000DB18(__p);
  if (SHIBYTE(v21) < 0)
  {
    operator delete(v20[0]);
    if (v7) {
      return sub_10004F988(v1);
    }
  }
  else if (v7)
  {
    return sub_10004F988(v1);
  }
  long long v18 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(void *)std::string __str = 68289026;
    *(_WORD *)&__str[8] = 2082;
    *(void *)&__str[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,#warning,persistentStorageConfigFailed\"}", __str, 0x12u);
  }
  return sub_10004F988(v1);
}

void sub_10004F910(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a2) {
    sub_100004CA4(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10004F988(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 192));
  double Current = CFAbsoluteTimeGetCurrent();
  id v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(void *)uint64_t buf = 68289539;
    *(_WORD *)int v45 = 2082;
    *(void *)&v45[2] = "";
    *(_WORD *)&v45[10] = 2049;
    *(double *)&v45[12] = Current;
    *(_WORD *)&v45[20] = 2049;
    *(double *)&v45[22] = Current + -604800.0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#nam,deleteOldActivitiesInternal\", \"now\":\"%{private}0.1f\", \"deleteBeforeTsSeconds\":\"%{private}0.1f\"}", buf, 0x26u);
  }
  v42[0] = off_1000F7320;
  v42[1] = a1;
  v42[3] = v42;
  v41[0] = off_1000F73A0;
  v41[1] = a1;
  v41[3] = v41;
  sub_100010BB4((uint64_t)v43, (uint64_t)v42, (uint64_t)v41);
  sub_10000F6D4(v41);
  sub_10000F6D4(v42);
  char v40 = 0;
  int v39 = 0;
  std::string::size_type v4 = (void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  *(void *)&v37[0] = a1;
  v37[1] = Current + -604800.0;
  *(void *)&v37[2] = &v40;
  *(void *)&void v37[3] = &v39;
  *(void *)&v37[4] = &v38;
  unint64_t v38 = 0xBFF0000000000000;
  if (v5 != v6)
  {
    while (!sub_100051490(v37, (double *)v5))
    {
      v5 += 40;
      if (v5 == v6)
      {
        uint64_t v5 = v6;
        goto LABEL_15;
      }
    }
    if (v5 != v6)
    {
      for (uint64_t i = v5 + 40; i != v6; i += 40)
      {
        if (!sub_100051490(v37, (double *)i))
        {
          double v8 = *(double *)i;
          *(_DWORD *)(v5 + 8) = *(_DWORD *)(i + 8);
          *(double *)uint64_t v5 = v8;
          uint64_t v9 = (void **)(v5 + 16);
          if (*(char *)(v5 + 39) < 0) {
            operator delete(*v9);
          }
          long long v10 = *(_OWORD *)(i + 16);
          *(void *)(v5 + 32) = *(void *)(i + 32);
          *(_OWORD *)uint64_t v9 = v10;
          *(unsigned char *)(i + 39) = 0;
          *(unsigned char *)(i + 16) = 0;
          v5 += 40;
        }
      }
    }
  }
LABEL_15:
  uint64_t v11 = *(uint64_t **)(a1 + 32);
  if ((uint64_t *)v5 != v11)
  {
    sub_100013718((uint64_t)buf, *(uint64_t **)(a1 + 32), v11, v5);
    uint64_t v5 = v12;
    for (uint64_t j = *(void *)(a1 + 32); j != v5; j -= 40)
    {
      if (*(char *)(j - 1) < 0) {
        operator delete(*(void **)(j - 24));
      }
    }
    *(void *)(a1 + 32) = v5;
  }
  if (*(void *)(a1 + 24) == v5)
  {
    unint64_t v14 = v38;
    int v15 = v39;
    sub_10000DD48(v31, "{}");
    unint64_t v33 = v14;
    int v34 = v15;
    if (SHIBYTE(v32) < 0)
    {
      sub_100004CB8(&__p, v31[0], (unint64_t)v31[1]);
    }
    else
    {
      long long __p = *(_OWORD *)v31;
      uint64_t v36 = v32;
    }
    unint64_t v16 = *(void *)(a1 + 40);
    unint64_t v17 = *(void *)(a1 + 32);
    if (v17 >= v16)
    {
      unint64_t v20 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v17 - *v4) >> 3);
      unint64_t v21 = v20 + 1;
      if (v20 + 1 > 0x666666666666666) {
        sub_1000050E8();
      }
      unint64_t v22 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v16 - *v4) >> 3);
      if (2 * v22 > v21) {
        unint64_t v21 = 2 * v22;
      }
      if (v22 >= 0x333333333333333) {
        unint64_t v23 = 0x666666666666666;
      }
      else {
        unint64_t v23 = v21;
      }
      *(void *)&v45[24] = a1 + 40;
      if (v23) {
        int v24 = (char *)sub_1000112D4(a1 + 40, v23);
      }
      else {
        int v24 = 0;
      }
      unsigned __int8 v25 = &v24[40 * v20];
      *(void *)uint64_t buf = v24;
      *(void *)int v45 = v25;
      *(void *)&v45[16] = &v24[40 * v23];
      unint64_t v26 = v33;
      *((_DWORD *)v25 + 2) = v34;
      *(void *)unsigned __int8 v25 = v26;
      long long v27 = __p;
      *((void *)v25 + 4) = v36;
      *((_OWORD *)v25 + 1) = v27;
      uint64_t v36 = 0;
      long long __p = 0uLL;
      *(void *)&v45[8] = v25 + 40;
      sub_100051690((uint64_t *)(a1 + 24), buf);
      uint64_t v28 = *(void *)(a1 + 32);
      sub_100011560((uint64_t)buf);
      int v29 = SHIBYTE(v36);
      *(void *)(a1 + 32) = v28;
      if (v29 < 0) {
        operator delete((void *)__p);
      }
    }
    else
    {
      unint64_t v18 = v33;
      *(_DWORD *)(v17 + 8) = v34;
      *(void *)unint64_t v17 = v18;
      long long v19 = __p;
      *(void *)(v17 + 32) = v36;
      *(_OWORD *)(v17 + 16) = v19;
      uint64_t v36 = 0;
      long long __p = 0uLL;
      *(void *)(a1 + 32) = v17 + 40;
    }
    if (SHIBYTE(v32) < 0) {
      operator delete(v31[0]);
    }
  }
  if (v40)
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
      if (!*(unsigned char *)(a1 + 71)) {
        return sub_1000115F0(v43);
      }
      goto LABEL_46;
    }
    if (*(void *)(a1 + 56)) {
LABEL_46:
    }
      sub_100012790((char *)a1);
  }
  return sub_1000115F0(v43);
}

void sub_10004FDE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1000115F0((void *)(v35 - 160));
  _Unwind_Resume(a1);
}

void sub_10004FE5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_10004F988(v1);
  *(unsigned char *)uint64_t v1 = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(v1 + 8) = _Q0;
  *(unsigned char *)(v1 + 152) = 0;

  sub_10000DBF0((uint64_t *)(v1 + 24));
}

void sub_10004FEA8(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = *(NSObject **)(a1 + 192);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10004FF50;
  block[3] = &unk_1000F71B0;
  int v11 = a2;
  id v9 = v5;
  uint64_t v10 = a1;
  id v7 = v5;
  dispatch_async(v6, block);
}

void sub_10004FF50(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 48);
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = (SACommonUtils *)*(id *)(a1 + 32);
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(v2 + 192));
  std::string::size_type v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289539;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)id v9 = 2082;
    *(void *)&_DWORD v9[2] = "";
    *(_WORD *)&v9[10] = 1025;
    *(_DWORD *)&v9[12] = v1;
    *(_WORD *)&v9[16] = 2113;
    *(void *)&v9[18] = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#nam,updateNetworkActivityInternal\", \"networkActivityType\":%{private}d, \"metaVal\":%{private, location:escape_only}@}", buf, 0x22u);
  }
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  SACommonUtils::convertDictionaryToString(v3, (uint64_t)__p);
  *(CFAbsoluteTime *)uint64_t buf = Current;
  *(_DWORD *)id v9 = v1;
  if (SHIBYTE(v7) < 0)
  {
    sub_100004CB8(&v9[8], __p[0], (unint64_t)__p[1]);
  }
  else
  {
    *(_OWORD *)&v9[8] = *(_OWORD *)__p;
    *(void *)&v9[24] = v7;
  }
  sub_100009E78(v2, (double *)buf);
  if ((v9[31] & 0x80000000) != 0) {
    operator delete(*(void **)&v9[8]);
  }
  if (SHIBYTE(v7) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1000500BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_10005010C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(v1 + 192));
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 68289026;
    int v6 = 0;
    __int16 v7 = 2082;
    double v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#nam,onFirstUnlockInternal\"}", (uint8_t *)&v5, 0x12u);
    uint64_t v2 = SALogObjectGeneral;
  }
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = (void *)(v1 + 160);
    if (*(char *)(v1 + 183) < 0) {
      id v3 = (void *)*v3;
    }
    int v5 = 68289283;
    int v6 = 0;
    __int16 v7 = 2082;
    double v8 = "";
    __int16 v9 = 2081;
    uint64_t v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,onFirstUnlock\", \"history\":%{private, location:escape_only}s}", (uint8_t *)&v5, 0x1Cu);
  }
  if (*(unsigned char *)(v1 + 184))
  {
    std::string::size_type v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 68289026;
      int v6 = 0;
      __int16 v7 = 2082;
      double v8 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,onFirstUnlock,skip\"}", (uint8_t *)&v5, 0x12u);
    }
  }
  else
  {
    *(unsigned char *)(v1 + 184) = 1;
    if (*(unsigned char *)(v1 + 1)) {
      sub_100012D4C(v1);
    }
  }
}

void sub_1000502CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(v1 + 192));
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 68289026;
    v6[1] = 0;
    __int16 v7 = 2082;
    double v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#nam,submitMetricsInternal\"}", (uint8_t *)v6, 0x12u);
  }
  double v3 = (double)(86400 * ((uint64_t)(double)time(0) / 86400)) + -978307200.0;
  double v4 = (double)((uint64_t)v3 - 86400);
  double v5 = (double)(uint64_t)v3;
  sub_100050430(v1, 0, v4, v5);
  sub_100050430(v1, 2, v4, v5);
  sub_100050430(v1, 1, v4, v5);
}

void sub_100050430(uint64_t a1, int a2, double a3, double a4)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 192));
  double v8 = (os_log_t *)&SALogObjectGeneral;
  __int16 v9 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289795;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)CFStringRef v55 = 2082;
    *(void *)&v55[2] = "";
    *(_WORD *)&v55[10] = 2049;
    *(double *)&v55[12] = a3;
    *(_WORD *)&v55[20] = 2049;
    *(double *)&v55[22] = a4;
    *(_WORD *)&v55[30] = 1025;
    int v56 = a2;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#nam,submitMetricInternal\", \"startTimeSeconds\":\"%{private}0.1f\", \"endTimeSeconds\":\"%{private}0.1f\", \"networkActivityType\":%{private}d}", buf, 0x2Cu);
  }
  __int16 v51 = 0;
  unint64_t v53 = 0;
  v68[0] = off_1000F7420;
  v68[1] = a1;
  v68[3] = v68;
  v67[0] = off_1000F74A0;
  v67[1] = a1;
  v67[3] = v67;
  sub_100010BB4((uint64_t)&v69, (uint64_t)v68, (uint64_t)v67);
  sub_10000F6D4(v67);
  sub_10000F6D4(v68);
  unint64_t v10 = 0;
  std::string::size_type v52 = 0;
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  if (v11 == v12 || !*(unsigned char *)a1)
  {
    uint64_t v26 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_33;
    }
    long long v27 = (void *)(a1 + 160);
    if (*(char *)(a1 + 183) < 0) {
      long long v27 = (void *)*v27;
    }
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)CFStringRef v55 = 2082;
    *(void *)&v55[2] = "";
    *(_WORD *)&v55[10] = 2081;
    *(void *)&v55[12] = v27;
    unint64_t v23 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findAllEventsStrictlyWithin,skipping,notReady\", \"history\":%"
          "{private, location:escape_only}s}";
    int v24 = v26;
    uint32_t v25 = 28;
    goto LABEL_32;
  }
  do
  {
    if (*(double *)v11 >= a3 && *(double *)v11 <= a4)
    {
      if (v10 >= v53)
      {
        unint64_t v14 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v10 - (void)v51) >> 3);
        unint64_t v15 = v14 + 1;
        if (v14 + 1 > 0x666666666666666) {
          sub_1000050E8();
        }
        if (0x999999999999999ALL * ((uint64_t)(v53 - (void)v51) >> 3) > v15) {
          unint64_t v15 = 0x999999999999999ALL * ((uint64_t)(v53 - (void)v51) >> 3);
        }
        if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v53 - (void)v51) >> 3) >= 0x333333333333333) {
          unint64_t v16 = 0x666666666666666;
        }
        else {
          unint64_t v16 = v15;
        }
        *(void *)&v55[24] = &v53;
        if (v16) {
          unint64_t v17 = (char *)sub_1000112D4((uint64_t)&v53, v16);
        }
        else {
          unint64_t v17 = 0;
        }
        unint64_t v18 = &v17[40 * v14];
        *(void *)uint64_t buf = v17;
        *(void *)CFStringRef v55 = v18;
        *(void *)&v55[8] = v18;
        *(void *)&v55[16] = &v17[40 * v16];
        uint64_t v19 = *(void *)v11;
        *((_DWORD *)v18 + 2) = *(_DWORD *)(v11 + 8);
        *(void *)unint64_t v18 = v19;
        unint64_t v20 = v18 + 16;
        if (*(char *)(v11 + 39) < 0)
        {
          sub_100004CB8(v20, *(void **)(v11 + 16), *(void *)(v11 + 24));
          unint64_t v18 = *(char **)&v55[8];
        }
        else
        {
          long long v21 = *(_OWORD *)(v11 + 16);
          *((void *)v18 + 4) = *(void *)(v11 + 32);
          *(_OWORD *)unint64_t v20 = v21;
        }
        *(void *)&v55[8] = v18 + 40;
        sub_100051690((uint64_t *)&v51, buf);
        unint64_t v10 = (unint64_t)v52;
        sub_100011560((uint64_t)buf);
      }
      else
      {
        sub_1000137A8((uint64_t)&v51, (uint64_t *)v11);
        v10 += 40;
      }
      std::string::size_type v52 = (long long *)v10;
    }
    v11 += 40;
  }
  while (v11 != v12);
  uint64_t v22 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)CFStringRef v55 = 2082;
    *(void *)&v55[2] = "";
    *(_WORD *)&v55[10] = 1025;
    *(_DWORD *)&v55[12] = -858993459 * ((v10 - (unint64_t)v51) >> 3);
    unint64_t v23 = "{\"msg%{public}.0s\":\"#saEventHistory,findAllEventsStrictlyWithin\", \"responseSize\":%{private}d}";
    int v24 = v22;
    uint32_t v25 = 24;
LABEL_32:
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, v23, buf, v25);
  }
LABEL_33:
  sub_1000115F0(&v69);
  uint64_t v28 = v52;
  if (v51 != v52)
  {
    int v49 = 0;
    uint64_t v50 = 0;
    int v29 = v51 + 1;
    while (1)
    {
      unint64_t v31 = v29 - 1;
      uint64_t v30 = *((void *)v29 - 2);
      *(_DWORD *)CFStringRef v55 = *((_DWORD *)v29 - 2);
      *(void *)uint64_t buf = v30;
      if (*((char *)v29 + 23) < 0)
      {
        sub_100004CB8(&v55[8], *(void **)v29, *((void *)v29 + 1));
      }
      else
      {
        long long v32 = *v29;
        *(void *)&v55[24] = *((void *)v29 + 2);
        *(_OWORD *)&v55[8] = v32;
      }
      if (*(_DWORD *)v55 != a2) {
        goto LABEL_54;
      }
      unint64_t v33 = SACommonUtils::convertStringToDictionary((uint64_t *)&v55[8]);
      int v34 = v33;
      if (!v33
        || ([v33 objectForKey:@"status"],
            uint64_t v35 = objc_claimAutoreleasedReturnValue(),
            BOOL v36 = v35 == 0,
            v35,
            v36))
      {
        int v39 = *v8;
        if (os_log_type_enabled(*v8, OS_LOG_TYPE_ERROR))
        {
          uint64_t v69 = 68289026;
          __int16 v70 = 2082;
          int v71 = "";
          _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#nam,submitMetricInternal,activity status does not exist\"}", (uint8_t *)&v69, 0x12u);
        }
        goto LABEL_53;
      }
      int v37 = [v34 objectForKey:@"status"];
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        break;
      }
      unsigned int v38 = [v37 intValue];
      if (!v38)
      {
        ++v49;
        goto LABEL_52;
      }
      if (v38 == 1)
      {
        LODWORD(v50) = v50 + 1;
        goto LABEL_52;
      }
      if (v38 != 2)
      {
        char v40 = v8;
        int v45 = *v8;
        if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v69 = 68289026;
          __int16 v70 = 2082;
          int v71 = "";
          uint64_t v42 = v45;
          os_log_type_t v43 = OS_LOG_TYPE_DEFAULT;
          int v44 = "{\"msg%{public}.0s\":\"#nam,submitMetricInternal,#warning,activity not supported\"}";
LABEL_50:
          _os_log_impl((void *)&_mh_execute_header, v42, v43, v44, (uint8_t *)&v69, 0x12u);
        }
        goto LABEL_51;
      }
      ++HIDWORD(v50);
LABEL_52:

LABEL_53:
LABEL_54:
      if ((v55[31] & 0x80000000) != 0) {
        operator delete(*(void **)&v55[8]);
      }
      int v29 = (long long *)((char *)v29 + 40);
      if ((long long *)((char *)v31 + 40) == v28) {
        goto LABEL_63;
      }
    }
    char v40 = v8;
    int v41 = *v8;
    if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
    {
      uint64_t v69 = 68289026;
      __int16 v70 = 2082;
      int v71 = "";
      uint64_t v42 = v41;
      os_log_type_t v43 = OS_LOG_TYPE_ERROR;
      int v44 = "{\"msg%{public}.0s\":\"#nam,submitMetricInternal,activity status is not a number\"}";
      goto LABEL_50;
    }
LABEL_51:
    double v8 = v40;
    goto LABEL_52;
  }
  uint64_t v50 = 0;
  int v49 = 0;
LABEL_63:
  unsigned int v46 = vcvtmd_s64_f64((double)v49 * 100.0 / (double)(v49 + (int)v50));
  unsigned int v47 = vcvtmd_s64_f64((double)(int)v50 * 100.0 / (double)(v49 + (int)v50));
  __int16 v48 = *v8;
  if (os_log_type_enabled(*v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68291075;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)CFStringRef v55 = 2082;
    *(void *)&v55[2] = "";
    *(_WORD *)&v55[10] = 2049;
    *(double *)&v55[12] = a3;
    *(_WORD *)&v55[20] = 2049;
    *(double *)&v55[22] = a4;
    *(_WORD *)&v55[30] = 1025;
    int v56 = a2;
    __int16 v57 = 1025;
    int v58 = v49 + v50 + HIDWORD(v50);
    __int16 v59 = 1025;
    int v60 = v49 + v50;
    __int16 v61 = 1025;
    unsigned int v62 = v46;
    __int16 v63 = 1025;
    unsigned int v64 = v47;
    __int16 v65 = 1025;
    int v66 = HIDWORD(v50);
    _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#nam,submitMetricInternal\", \"startTimeSeconds\":\"%{private}0.1f\", \"endTimeSeconds\":\"%{private}0.1f\", \"networkActivityType\":%{private}d, \"totalCount\":%{private}d, \"totalAttemptedActicityCount\":%{private}d, \"successRate\":%{private}d, \"failureRate\":%{private}d, \"droppedCount\":%{private}d}", buf, 0x4Au);
  }
  AnalyticsSendEventLazy();
  *(void *)uint64_t buf = &v51;
  sub_10000DB9C((void ***)buf);
}

void sub_100050BF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  *(void *)(v36 - 160) = &a20;
  sub_10000DB9C((void ***)(v36 - 160));
  _Unwind_Resume(a1);
}

id sub_100050C94(unsigned int *a1)
{
  v14[0] = @"networkActivityType";
  uint64_t v2 = +[NSNumber numberWithInt:a1[8]];
  v15[0] = v2;
  v14[1] = @"totalCount";
  double v3 = +[NSNumber numberWithInt:a1[9]];
  v15[1] = v3;
  _DWORD v14[2] = @"totalAttemptedActicityCount";
  double v4 = +[NSNumber numberWithInt:a1[10]];
  _DWORD v15[2] = v4;
  v14[3] = @"successRate";
  double v5 = +[NSNumber numberWithInt:a1[11]];
  v15[3] = v5;
  v14[4] = @"failureRate";
  int v6 = +[NSNumber numberWithInt:a1[12]];
  void v15[4] = v6;
  void v14[5] = @"activityDroppedCount";
  __int16 v7 = +[NSNumber numberWithInt:a1[13]];
  v15[5] = v7;
  v14[6] = @"isEnhancedDeliveryEnabled";
  double v8 = sub_100003318();
  if (*((unsigned char *)v8 + 109)) {
    BOOL v9 = *((unsigned char *)v8 + 108) == 0;
  }
  else {
    BOOL v9 = 1;
  }
  uint64_t v10 = !v9;
  uint64_t v11 = +[NSNumber numberWithBool:v10];
  void v15[6] = v11;
  uint64_t v12 = +[NSDictionary dictionaryWithObjects:v15 forKeys:v14 count:7];

  return v12;
}

void sub_100050E68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100050ECC()
{
}

void *sub_100050EE0()
{
  id result = operator new(0x10uLL);
  void *result = off_1000F7200;
  return result;
}

void sub_100050F18(uint64_t a1, void *a2)
{
  *a2 = off_1000F7200;
}

uint64_t sub_100050F40(uint64_t a1, int *a2, uint64_t a3)
{
  std::to_string(&v5, *a2);
  if (*(char *)(a3 + 23) < 0) {
    operator delete(*(void **)a3);
  }
  *(std::string *)a3 = v5;
  return 1;
}

uint64_t sub_100050F98(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100050FD8()
{
}

void sub_100050FE8()
{
}

void *sub_100050FFC()
{
  id result = operator new(0x10uLL);
  void *result = off_1000F7290;
  return result;
}

void sub_100051034(uint64_t a1, void *a2)
{
  *a2 = off_1000F7290;
}

uint64_t sub_10005105C(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_100004CB8(v6, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)int v6 = *(_OWORD *)a2;
    uint64_t v7 = *(void *)(a2 + 16);
  }
  if (SHIBYTE(v7) < 0)
  {
    double v4 = v6[0];
    *a3 = atoi(v6[0]);
    operator delete(v4);
  }
  else
  {
    *a3 = atoi((const char *)v6);
  }
  return 1;
}

uint64_t sub_1000510E4(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100051124()
{
}

void sub_100051134()
{
}

void *sub_100051148(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F7320;
  result[1] = v3;
  return result;
}

uint64_t sub_100051190(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F7320;
  a2[1] = v2;
  return result;
}

void sub_1000511BC(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  if (!v1[1])
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      std::string v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100012D4C((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

uint64_t sub_10005128C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_1000512CC()
{
}

void sub_1000512DC()
{
}

void *sub_1000512F0(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F73A0;
  result[1] = v3;
  return result;
}

uint64_t sub_100051338(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F73A0;
  a2[1] = v2;
  return result;
}

__n128 sub_100051364(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!*(unsigned char *)(v1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 68289026;
      v9[1] = 0;
      __int16 v10 = 2082;
      uint64_t v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v9, 0x12u);
    }
    *(unsigned char *)uint64_t v1 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(v1 + 8) = _Q0;
    *(unsigned char *)(v1 + 152) = 0;
    sub_10000DBF0((uint64_t *)(v1 + 24));
  }
  return result;
}

uint64_t sub_100051444(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100051484()
{
}

BOOL sub_100051490(double *a1, double *a2)
{
  double v3 = *a1;
  long long __p = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v4 = *(void *)(*(void *)&v3 + 96);
  if (!v4) {
    sub_100005520();
  }
  int v6 = a2 + 1;
  (*(void (**)(uint64_t, double *, void **))(*(void *)v4 + 48))(v4, a2 + 1, &__p);
  double v7 = *a2;
  double v8 = a1[1];
  if (*a2 < v8) {
    **((unsigned char **)a1 + 2) = 1;
  }
  BOOL v9 = (double *)*((void *)a1 + 4);
  if (*v9 < v7)
  {
    *BOOL v9 = v7;
    **((_DWORD **)a1 + 3) = *v6;
  }
  __int16 v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v11 = (void *)(*(void *)&v3 + 160);
    if (*(char *)(*(void *)&v3 + 183) < 0) {
      uint64_t v11 = (void *)*v11;
    }
    uint64_t v12 = *((void *)a1 + 1);
    double v13 = *a2;
    if (SHIBYTE(v18) < 0)
    {
      if (v17) {
        p_p = (const char *)__p;
      }
      else {
        p_p = "";
      }
    }
    else
    {
      p_p = (const char *)&__p;
      if (!HIBYTE(v18)) {
        p_p = "";
      }
    }
    *(_DWORD *)uint64_t buf = 68290307;
    int v20 = 0;
    __int16 v21 = 2082;
    uint64_t v22 = "";
    __int16 v23 = 2081;
    int v24 = v11;
    __int16 v25 = 2049;
    uint64_t v26 = v12;
    __int16 v27 = 2049;
    double v28 = v13;
    __int16 v29 = 2081;
    uint64_t v30 = p_p;
    __int16 v31 = 1025;
    BOOL v32 = v7 < v8;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saEventHistory,cleanup\", \"history\":%{private, location:escape_only}s, \"before\":\"%{private}0.1f\", \"ts\":\"%{private}0.1f\", \"value\":%{private, location:escape_only}s, \"remove\":%{private}hhd}", buf, 0x40u);
  }
  if (SHIBYTE(v18) < 0) {
    operator delete(__p);
  }
  return v7 < v8;
}

void sub_100051674(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100051690(uint64_t *a1, void *a2)
{
  uint64_t result = sub_100013B90((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void sub_10005170C()
{
}

void *sub_100051720(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F7420;
  result[1] = v3;
  return result;
}

uint64_t sub_100051768(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F7420;
  a2[1] = v2;
  return result;
}

void sub_100051794(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  if (!v1[1])
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      uint64_t v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100012D4C((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

uint64_t sub_100051864(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000518A4()
{
}

void sub_1000518B4()
{
}

void *sub_1000518C8(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F74A0;
  result[1] = v3;
  return result;
}

uint64_t sub_100051910(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F74A0;
  a2[1] = v2;
  return result;
}

__n128 sub_10005193C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!*(unsigned char *)(v1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 68289026;
      v9[1] = 0;
      __int16 v10 = 2082;
      uint64_t v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v9, 0x12u);
    }
    *(unsigned char *)uint64_t v1 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(v1 + 8) = _Q0;
    *(unsigned char *)(v1 + 152) = 0;
    sub_10000DBF0((uint64_t *)(v1 + 24));
  }
  return result;
}

uint64_t sub_100051A1C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100051A5C()
{
}

uint64_t sub_100051A68(uint64_t a1)
{
  uint64_t v43 = sub_10000F758(a1) + 192;
  sub_10000F758(v43);
  sub_10000F758(a1 + 384);
  sub_10000F758(a1 + 576);
  sub_1000565D0(a1 + 768);
  sub_1000565D0(a1 + 960);
  sub_10002547C(a1 + 1152);
  sub_10002547C(a1 + 1344);
  sub_10002547C(a1 + 1536);
  sub_10002547C(a1 + 1728);
  *(void *)(a1 + 1920) = 0;
  uint64_t v2 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,initialized\"}", (uint8_t *)&buf, 0x12u);
  }

  sub_10000F758((uint64_t)&buf);
  *(std::string *)a1 = buf;
  uint64_t v3 = (void **)(a1 + 24);
  if (*(void *)(a1 + 24))
  {
    sub_10000DBF0((uint64_t *)(a1 + 24));
    operator delete(*v3);
    *uint64_t v3 = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  *(_OWORD *)(a1 + 24) = v66;
  *(void *)(a1 + 40) = v67;
  uint64_t v67 = 0;
  long long v66 = 0uLL;
  __int16 v4 = (void **)(a1 + 48);
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*v4);
  }
  *(_OWORD *)__int16 v4 = __p;
  *(void *)(a1 + 64) = v69;
  HIBYTE(v69) = 0;
  LOBYTE(__p) = 0;
  uint64_t v6 = (uint64_t *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v7 = a1 + 72;
  *(void *)(a1 + 96) = 0;
  if (v5 == a1 + 72)
  {
    (*(void (**)(uint64_t))(*(void *)v7 + 32))(a1 + 72);
  }
  else if (v5)
  {
    (*(void (**)(uint64_t))(*(void *)v5 + 40))(v5);
  }
  if (!v71) {
    goto LABEL_14;
  }
  if (v71 != v70)
  {
    uint64_t *v6 = (uint64_t)v71;
    uint64_t v6 = (uint64_t *)&v71;
LABEL_14:
    uint64_t *v6 = 0;
    goto LABEL_16;
  }
  uint64_t *v6 = v7;
  (*(void (**)(void *, uint64_t))(v70[0] + 24))(v70, a1 + 72);
LABEL_16:
  BOOL v9 = (uint64_t *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 128);
  uint64_t v10 = a1 + 104;
  *(void *)(a1 + 128) = 0;
  if (v8 == a1 + 104)
  {
    (*(void (**)(uint64_t))(*(void *)v10 + 32))(a1 + 104);
  }
  else if (v8)
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 40))(v8);
  }
  if (!v73) {
    goto LABEL_23;
  }
  if (v73 != v72)
  {
    *BOOL v9 = (uint64_t)v73;
    BOOL v9 = (uint64_t *)&v73;
LABEL_23:
    *BOOL v9 = 0;
    goto LABEL_25;
  }
  *BOOL v9 = v10;
  (*(void (**)(void *, uint64_t))(v72[0] + 24))(v72, a1 + 104);
LABEL_25:
  *(_OWORD *)(a1 + 136) = v74;
  *(unsigned char *)(a1 + 152) = v75;
  uint64_t v11 = (void **)(a1 + 160);
  if (*(char *)(a1 + 183) < 0) {
    operator delete(*v11);
  }
  *(_OWORD *)uint64_t v11 = v76;
  *(void *)(a1 + 176) = v77;
  HIBYTE(v77) = 0;
  LOBYTE(v76) = 0;
  *(_WORD *)(a1 + 184) = v78;
  sub_10000DC40(v72);
  sub_10000DCC4(v70);
  if (SHIBYTE(v69) < 0) {
    operator delete((void *)__p);
  }
  int v44 = (void **)&v66;
  sub_10000DB9C(&v44);
  sub_10000DD48(&buf, "ls");
  std::string::operator=((std::string *)(a1 + 160), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  *(unsigned char *)(a1 + 1) = 0;
  *(void *)(a1 + 136) = 200;
  sub_1000533EC(&buf, "ls.elog");
  if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_std::string buf = &buf;
  }
  else {
    p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
  }
  v64[0] = off_1000F7540;
  v64[3] = v64;
  v63[0] = off_1000F75D0;
  v63[3] = v63;
  char v13 = sub_100052D58(a1, (char *)p_buf, v64, v63);
  sub_10000DC40(v63);
  sub_10000DCC4(v64);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(buf.__r_.__value_.__l.__data_);
    if (v13) {
      goto LABEL_41;
    }
  }
  else if (v13)
  {
    goto LABEL_41;
  }
  unint64_t v14 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,#warning,persistentStorageConfigFailed\"}", (uint8_t *)&buf, 0x12u);
  }

LABEL_41:
  sub_10000DD48(&buf, "pushp");
  std::string::operator=((std::string *)(a1 + 352), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  *(unsigned char *)(a1 + 193) = 0;
  *(void *)(a1 + 328) = 200;
  sub_1000533EC(&buf, "pushp.elog");
  if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unint64_t v15 = &buf;
  }
  else {
    unint64_t v15 = (std::string *)buf.__r_.__value_.__r.__words[0];
  }
  v62[0] = off_1000F7540;
  v62[3] = v62;
  v61[0] = off_1000F75D0;
  v61[3] = v61;
  char v16 = sub_100052D58(v43, (char *)v15, v62, v61);
  sub_10000DC40(v61);
  sub_10000DCC4(v62);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(buf.__r_.__value_.__l.__data_);
    if (v16) {
      goto LABEL_53;
    }
  }
  else if (v16)
  {
    goto LABEL_53;
  }
  uint64_t v17 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,#warning,persistentStorageConfigFailed\"}", (uint8_t *)&buf, 0x12u);
  }

LABEL_53:
  sub_10000DD48(&buf, "sub");
  std::string::operator=((std::string *)(a1 + 544), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  *(unsigned char *)(a1 + 385) = 0;
  *(void *)(a1 + 520) = 200;
  sub_1000533EC(&buf, "sub.elog");
  if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v18 = &buf;
  }
  else {
    uint64_t v18 = (std::string *)buf.__r_.__value_.__r.__words[0];
  }
  v60[0] = off_1000F7540;
  v60[3] = v60;
  v59[0] = off_1000F75D0;
  v59[3] = v59;
  char v19 = sub_100052D58(a1 + 384, (char *)v18, v60, v59);
  sub_10000DC40(v59);
  sub_10000DCC4(v60);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(buf.__r_.__value_.__l.__data_);
    if (v19) {
      goto LABEL_65;
    }
  }
  else if (v19)
  {
    goto LABEL_65;
  }
  int v20 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,#warning,persistentStorageConfigFailed\"}", (uint8_t *)&buf, 0x12u);
  }

LABEL_65:
  sub_10000DD48(&buf, "wea_received");
  std::string::operator=((std::string *)(a1 + 1504), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  *(unsigned char *)(a1 + 1345) = 0;
  *(void *)(a1 + 1480) = 2000;
  sub_1000533EC(&buf, "wea_received.elog");
  if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    __int16 v21 = &buf;
  }
  else {
    __int16 v21 = (std::string *)buf.__r_.__value_.__r.__words[0];
  }
  v58[0] = off_1000F7660;
  v58[3] = v58;
  v57[0] = off_1000F7660;
  v57[3] = v57;
  char v22 = sub_100022E74(a1 + 1344, (char *)v21, 0x1388uLL, (uint64_t)v58, (uint64_t)v57);
  sub_10002553C(v57);
  sub_10002553C(v58);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(buf.__r_.__value_.__l.__data_);
    if (v22) {
      goto LABEL_77;
    }
  }
  else if (v22)
  {
    goto LABEL_77;
  }
  __int16 v23 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
  {
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,#warning,persistentStorageConfigFailed\"}", (uint8_t *)&buf, 0x12u);
  }

LABEL_77:
  sub_10000DD48(&buf, "wea_displayed");
  std::string::operator=((std::string *)(a1 + 1312), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  *(unsigned char *)(a1 + 1153) = 0;
  *(void *)(a1 + 1288) = 2000;
  sub_1000533EC(&buf, "wea_displayed.elog");
  if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v24 = &buf;
  }
  else {
    int v24 = (std::string *)buf.__r_.__value_.__r.__words[0];
  }
  v56[0] = off_1000F7660;
  v56[3] = v56;
  v55[0] = off_1000F7660;
  v55[3] = v55;
  char v25 = sub_100022E74(a1 + 1152, (char *)v24, 0x1388uLL, (uint64_t)v56, (uint64_t)v55);
  sub_10002553C(v55);
  sub_10002553C(v56);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(buf.__r_.__value_.__l.__data_);
    if (v25) {
      goto LABEL_89;
    }
  }
  else if (v25)
  {
    goto LABEL_89;
  }
  uint64_t v26 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
  {
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,#warning,persistentStorageConfigFailed\"}", (uint8_t *)&buf, 0x12u);
  }

LABEL_89:
  sub_10000DD48(&buf, "sa");
  std::string::operator=((std::string *)(a1 + 1696), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  *(unsigned char *)(a1 + 1537) = 0;
  *(void *)(a1 + 1672) = 2000;
  sub_1000533EC(&buf, "sa.elog");
  if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    __int16 v27 = &buf;
  }
  else {
    __int16 v27 = (std::string *)buf.__r_.__value_.__r.__words[0];
  }
  v54[0] = off_1000F7660;
  v54[3] = v54;
  v53[0] = off_1000F7660;
  v53[3] = v53;
  char v28 = sub_100022E74(a1 + 1536, (char *)v27, 0x1388uLL, (uint64_t)v54, (uint64_t)v53);
  sub_10002553C(v53);
  sub_10002553C(v54);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(buf.__r_.__value_.__l.__data_);
    if (v28) {
      goto LABEL_101;
    }
  }
  else if (v28)
  {
    goto LABEL_101;
  }
  __int16 v29 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
  {
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,#warning,persistentStorageConfigFailed\"}", (uint8_t *)&buf, 0x12u);
  }

LABEL_101:
  sub_10000DD48(&buf, "ig");
  std::string::operator=((std::string *)(a1 + 1888), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  *(unsigned char *)(a1 + 1729) = 0;
  *(void *)(a1 + 1864) = 2000;
  sub_1000533EC(&buf, "ig.elog");
  if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v30 = &buf;
  }
  else {
    uint64_t v30 = (std::string *)buf.__r_.__value_.__r.__words[0];
  }
  v52[0] = off_1000F7660;
  void v52[3] = v52;
  v51[0] = off_1000F7660;
  void v51[3] = v51;
  char v31 = sub_100022E74(a1 + 1728, (char *)v30, 0x1388uLL, (uint64_t)v52, (uint64_t)v51);
  sub_10002553C(v51);
  sub_10002553C(v52);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(buf.__r_.__value_.__l.__data_);
    if (v31) {
      goto LABEL_113;
    }
  }
  else if (v31)
  {
    goto LABEL_113;
  }
  BOOL v32 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
  {
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,#warning,persistentStorageConfigFailed\"}", (uint8_t *)&buf, 0x12u);
  }

LABEL_113:
  sub_10000DD48(&buf, "ig_sub");
  std::string::operator=((std::string *)(a1 + 736), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  *(unsigned char *)(a1 + 577) = 0;
  *(void *)(a1 + 712) = 200;
  sub_1000533EC(&buf, "ig_sub.elog");
  if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unint64_t v33 = &buf;
  }
  else {
    unint64_t v33 = (std::string *)buf.__r_.__value_.__r.__words[0];
  }
  v50[0] = off_1000F7540;
  void v50[3] = v50;
  v49[0] = off_1000F75D0;
  v49[3] = v49;
  char v34 = sub_100052D58(a1 + 576, (char *)v33, v50, v49);
  sub_10000DC40(v49);
  sub_10000DCC4(v50);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(buf.__r_.__value_.__l.__data_);
    if (v34) {
      goto LABEL_125;
    }
  }
  else if (v34)
  {
    goto LABEL_125;
  }
  uint64_t v35 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
  {
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,#warning,persistentStorageConfigFailed\"}", (uint8_t *)&buf, 0x12u);
  }

LABEL_125:
  sub_10000DD48(&buf, "slc");
  std::string::operator=((std::string *)(a1 + 928), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  *(unsigned char *)(a1 + 769) = 0;
  *(void *)(a1 + 904) = 2000;
  sub_1000533EC(&buf, "slc.elog");
  if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v36 = &buf;
  }
  else {
    uint64_t v36 = (std::string *)buf.__r_.__value_.__r.__words[0];
  }
  v48[0] = off_1000F76E0;
  v48[3] = v48;
  v47[0] = off_1000F7770;
  v47[3] = v47;
  char v37 = sub_1000534CC(a1 + 768, (char *)v36, v48, v47);
  sub_100056714(v47);
  sub_100056690(v48);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(buf.__r_.__value_.__l.__data_);
    if (v37) {
      goto LABEL_137;
    }
  }
  else if (v37)
  {
    goto LABEL_137;
  }
  unsigned int v38 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
  {
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,#warning,persistentStorageConfigFailed\"}", (uint8_t *)&buf, 0x12u);
  }

LABEL_137:
  sub_10000DD48(&buf, "submission_timestamp");
  std::string::operator=((std::string *)(a1 + 1120), &buf);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
  *(unsigned char *)(a1 + 961) = 0;
  *(void *)(a1 + 1096) = 2000;
  sub_1000533EC(&buf, "submission_timestamp.elog");
  if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v39 = &buf;
  }
  else {
    int v39 = (std::string *)buf.__r_.__value_.__r.__words[0];
  }
  v46[0] = off_1000F76E0;
  v46[3] = v46;
  v45[0] = off_1000F7770;
  v45[3] = v45;
  char v40 = sub_1000534CC(a1 + 960, (char *)v39, v46, v45);
  sub_100056714(v45);
  sub_100056690(v46);
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(buf.__r_.__value_.__l.__data_);
    if (v40) {
      return a1;
    }
  }
  else if (v40)
  {
    return a1;
  }
  int v41 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
  {
    buf.__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf.__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,#warning,persistentStorageConfigFailed\"}", (uint8_t *)&buf, 0x12u);
  }

  return a1;
}

void sub_100052B38(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_100004CA4(a1);
  }
  _Unwind_Resume(a1);
}

void sub_100052D08()
{
}

void sub_100052D10()
{
}

void sub_100052D18()
{
}

void sub_100052D20()
{
}

void sub_100052D28()
{
}

void sub_100052D30()
{
}

void sub_100052D38()
{
}

void sub_100052D40()
{
}

void sub_100052D48()
{
}

void sub_100052D50()
{
}

uint64_t sub_100052D58(uint64_t a1, char *a2, void *a3, void *a4)
{
  if (a2 && a3[3] && a4[3])
  {
    sub_10000DD48(v20, a2);
    uint64_t v7 = (void **)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      operator delete(*v7);
    }
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v20;
    *(void *)(a1 + 64) = *(void *)&v20[16];
    uint64_t v8 = (void *)a3[3];
    if (v8)
    {
      if (v8 == a3)
      {
        *(void *)&v20[24] = v20;
        (*(void (**)(void *, unsigned char *))(*a3 + 24))(a3, v20);
      }
      else
      {
        *(void *)&v20[24] = (*(uint64_t (**)(void *))(*v8 + 16))(v8);
      }
    }
    else
    {
      *(void *)&v20[24] = 0;
    }
    uint64_t v13 = a1 + 72;
    if (v20 != (unsigned char *)(a1 + 72))
    {
      uint64_t v14 = *(void *)&v20[24];
      uint64_t v15 = *(void *)(a1 + 96);
      if (*(unsigned char **)&v20[24] == v20)
      {
        if (v15 == v13)
        {
          (*(void (**)(unsigned char *, void *))(*(void *)v20 + 24))(v20, v21);
          (*(void (**)(void))(**(void **)&v20[24] + 32))(*(void *)&v20[24]);
          *(void *)&v20[24] = 0;
          (*(void (**)(void, unsigned char *))(**(void **)(a1 + 96) + 24))(*(void *)(a1 + 96), v20);
          (*(void (**)(void))(**(void **)(a1 + 96) + 32))(*(void *)(a1 + 96));
          *(void *)(a1 + 96) = 0;
          *(void *)&v20[24] = v20;
          (*(void (**)(void *, uint64_t))(v21[0] + 24))(v21, a1 + 72);
          (*(void (**)(void *))(v21[0] + 32))(v21);
        }
        else
        {
          (*(void (**)(unsigned char *, uint64_t))(*(void *)v20 + 24))(v20, a1 + 72);
          (*(void (**)(void))(**(void **)&v20[24] + 32))(*(void *)&v20[24]);
          *(void *)&v20[24] = *(void *)(a1 + 96);
        }
        *(void *)(a1 + 96) = v13;
      }
      else if (v15 == v13)
      {
        (*(void (**)(uint64_t, unsigned char *))(*(void *)v13 + 24))(a1 + 72, v20);
        (*(void (**)(void))(**(void **)(a1 + 96) + 32))(*(void *)(a1 + 96));
        *(void *)(a1 + 96) = *(void *)&v20[24];
        *(void *)&v20[24] = v20;
      }
      else
      {
        *(void *)&v20[24] = *(void *)(a1 + 96);
        *(void *)(a1 + 96) = v14;
      }
    }
    sub_10000DCC4(v20);
    char v16 = (void *)a4[3];
    if (v16)
    {
      if (v16 == a4)
      {
        *(void *)&v20[24] = v20;
        (*(void (**)(void *, unsigned char *))(*a4 + 24))(a4, v20);
      }
      else
      {
        *(void *)&v20[24] = (*(uint64_t (**)(void *))(*v16 + 16))(v16);
      }
    }
    else
    {
      *(void *)&v20[24] = 0;
    }
    uint64_t v17 = a1 + 104;
    if (v20 != (unsigned char *)(a1 + 104))
    {
      uint64_t v18 = *(void *)&v20[24];
      uint64_t v19 = *(void *)(a1 + 128);
      if (*(unsigned char **)&v20[24] == v20)
      {
        if (v19 == v17)
        {
          (*(void (**)(unsigned char *, void *))(*(void *)v20 + 24))(v20, v21);
          (*(void (**)(void))(**(void **)&v20[24] + 32))(*(void *)&v20[24]);
          *(void *)&v20[24] = 0;
          (*(void (**)(void, unsigned char *))(**(void **)(a1 + 128) + 24))(*(void *)(a1 + 128), v20);
          (*(void (**)(void))(**(void **)(a1 + 128) + 32))(*(void *)(a1 + 128));
          *(void *)(a1 + 128) = 0;
          *(void *)&v20[24] = v20;
          (*(void (**)(void *, uint64_t))(v21[0] + 24))(v21, a1 + 104);
          (*(void (**)(void *))(v21[0] + 32))(v21);
        }
        else
        {
          (*(void (**)(unsigned char *, uint64_t))(*(void *)v20 + 24))(v20, a1 + 104);
          (*(void (**)(void))(**(void **)&v20[24] + 32))(*(void *)&v20[24]);
          *(void *)&v20[24] = *(void *)(a1 + 128);
        }
        *(void *)(a1 + 128) = v17;
      }
      else if (v19 == v17)
      {
        (*(void (**)(uint64_t, unsigned char *))(*(void *)v17 + 24))(a1 + 104, v20);
        (*(void (**)(void))(**(void **)(a1 + 128) + 32))(*(void *)(a1 + 128));
        *(void *)(a1 + 128) = *(void *)&v20[24];
        *(void *)&v20[24] = v20;
      }
      else
      {
        *(void *)&v20[24] = *(void *)(a1 + 128);
        *(void *)(a1 + 128) = v18;
      }
    }
    sub_10000DC40(v20);
    *(void *)(a1 + 144) = 64;
    return 1;
  }
  else
  {
    BOOL v9 = SALogObjectGeneral;
    BOOL v10 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (v10)
    {
      uint64_t v12 = (void *)(a1 + 160);
      if (*(char *)(a1 + 183) < 0) {
        uint64_t v12 = (void *)*v12;
      }
      *(void *)int v20 = 68289283;
      *(_WORD *)&v20[8] = 2082;
      *(void *)&v20[10] = "";
      *(_WORD *)&v20[18] = 2081;
      *(void *)&v20[20] = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,invalidArgs\", \"history\":%{private, location:escape_only}s}", v20, 0x1Cu);
      return 0;
    }
  }
  return result;
}

void sub_1000533D8(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_100004CA4(a1);
  }
  _Unwind_Resume(a1);
}

void sub_1000533EC(std::string *a1, char *a2)
{
  sub_10000DD48(&v9, "/var/mobile/Library/com.apple.safetyalerts/");
  sub_10000DD48(__p, a2);
  if ((v8 & 0x80u) == 0) {
    __int16 v4 = __p;
  }
  else {
    __int16 v4 = (void **)__p[0];
  }
  if ((v8 & 0x80u) == 0) {
    std::string::size_type v5 = v8;
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  uint64_t v6 = std::string::append(&v9, (const std::string::value_type *)v4, v5);
  *a1 = *v6;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if ((char)v8 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
}

void sub_100053498(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000534CC(uint64_t a1, char *a2, void *a3, void *a4)
{
  if (a2 && a3[3] && a4[3])
  {
    sub_10000DD48(v20, a2);
    uint64_t v7 = (void **)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      operator delete(*v7);
    }
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v20;
    *(void *)(a1 + 64) = *(void *)&v20[16];
    unsigned __int8 v8 = (void *)a3[3];
    if (v8)
    {
      if (v8 == a3)
      {
        *(void *)&v20[24] = v20;
        (*(void (**)(void *, unsigned char *))(*a3 + 24))(a3, v20);
      }
      else
      {
        *(void *)&v20[24] = (*(uint64_t (**)(void *))(*v8 + 16))(v8);
      }
    }
    else
    {
      *(void *)&v20[24] = 0;
    }
    uint64_t v13 = a1 + 72;
    if (v20 != (unsigned char *)(a1 + 72))
    {
      uint64_t v14 = *(void *)&v20[24];
      uint64_t v15 = *(void *)(a1 + 96);
      if (*(unsigned char **)&v20[24] == v20)
      {
        if (v15 == v13)
        {
          (*(void (**)(unsigned char *, void *))(*(void *)v20 + 24))(v20, v21);
          (*(void (**)(void))(**(void **)&v20[24] + 32))(*(void *)&v20[24]);
          *(void *)&v20[24] = 0;
          (*(void (**)(void, unsigned char *))(**(void **)(a1 + 96) + 24))(*(void *)(a1 + 96), v20);
          (*(void (**)(void))(**(void **)(a1 + 96) + 32))(*(void *)(a1 + 96));
          *(void *)(a1 + 96) = 0;
          *(void *)&v20[24] = v20;
          (*(void (**)(void *, uint64_t))(v21[0] + 24))(v21, a1 + 72);
          (*(void (**)(void *))(v21[0] + 32))(v21);
        }
        else
        {
          (*(void (**)(unsigned char *, uint64_t))(*(void *)v20 + 24))(v20, a1 + 72);
          (*(void (**)(void))(**(void **)&v20[24] + 32))(*(void *)&v20[24]);
          *(void *)&v20[24] = *(void *)(a1 + 96);
        }
        *(void *)(a1 + 96) = v13;
      }
      else if (v15 == v13)
      {
        (*(void (**)(uint64_t, unsigned char *))(*(void *)v13 + 24))(a1 + 72, v20);
        (*(void (**)(void))(**(void **)(a1 + 96) + 32))(*(void *)(a1 + 96));
        *(void *)(a1 + 96) = *(void *)&v20[24];
        *(void *)&v20[24] = v20;
      }
      else
      {
        *(void *)&v20[24] = *(void *)(a1 + 96);
        *(void *)(a1 + 96) = v14;
      }
    }
    sub_100056690(v20);
    char v16 = (void *)a4[3];
    if (v16)
    {
      if (v16 == a4)
      {
        *(void *)&v20[24] = v20;
        (*(void (**)(void *, unsigned char *))(*a4 + 24))(a4, v20);
      }
      else
      {
        *(void *)&v20[24] = (*(uint64_t (**)(void *))(*v16 + 16))(v16);
      }
    }
    else
    {
      *(void *)&v20[24] = 0;
    }
    uint64_t v17 = a1 + 104;
    if (v20 != (unsigned char *)(a1 + 104))
    {
      uint64_t v18 = *(void *)&v20[24];
      uint64_t v19 = *(void *)(a1 + 128);
      if (*(unsigned char **)&v20[24] == v20)
      {
        if (v19 == v17)
        {
          (*(void (**)(unsigned char *, void *))(*(void *)v20 + 24))(v20, v21);
          (*(void (**)(void))(**(void **)&v20[24] + 32))(*(void *)&v20[24]);
          *(void *)&v20[24] = 0;
          (*(void (**)(void, unsigned char *))(**(void **)(a1 + 128) + 24))(*(void *)(a1 + 128), v20);
          (*(void (**)(void))(**(void **)(a1 + 128) + 32))(*(void *)(a1 + 128));
          *(void *)(a1 + 128) = 0;
          *(void *)&v20[24] = v20;
          (*(void (**)(void *, uint64_t))(v21[0] + 24))(v21, a1 + 104);
          (*(void (**)(void *))(v21[0] + 32))(v21);
        }
        else
        {
          (*(void (**)(unsigned char *, uint64_t))(*(void *)v20 + 24))(v20, a1 + 104);
          (*(void (**)(void))(**(void **)&v20[24] + 32))(*(void *)&v20[24]);
          *(void *)&v20[24] = *(void *)(a1 + 128);
        }
        *(void *)(a1 + 128) = v17;
      }
      else if (v19 == v17)
      {
        (*(void (**)(uint64_t, unsigned char *))(*(void *)v17 + 24))(a1 + 104, v20);
        (*(void (**)(void))(**(void **)(a1 + 128) + 32))(*(void *)(a1 + 128));
        *(void *)(a1 + 128) = *(void *)&v20[24];
        *(void *)&v20[24] = v20;
      }
      else
      {
        *(void *)&v20[24] = *(void *)(a1 + 128);
        *(void *)(a1 + 128) = v18;
      }
    }
    sub_100056714(v20);
    *(void *)(a1 + 144) = 5000;
    return 1;
  }
  else
  {
    std::string v9 = SALogObjectGeneral;
    BOOL v10 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (v10)
    {
      uint64_t v12 = (void *)(a1 + 160);
      if (*(char *)(a1 + 183) < 0) {
        uint64_t v12 = (void *)*v12;
      }
      *(void *)int v20 = 68289283;
      *(_WORD *)&v20[8] = 2082;
      *(void *)&v20[10] = "";
      *(_WORD *)&v20[18] = 2081;
      *(void *)&v20[20] = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,invalidArgs\", \"history\":%{private, location:escape_only}s}", v20, 0x1Cu);
      return 0;
    }
  }
  return result;
}

void sub_100053B4C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_100004CA4(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100053B60(uint64_t a1)
{
  if (*(char *)(a1 + 183) < 0) {
    operator delete(*(void **)(a1 + 160));
  }
  sub_100056714((void *)(a1 + 104));
  sub_100056690((void *)(a1 + 72));
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  uint64_t v3 = (void **)(a1 + 24);
  sub_10000DB9C(&v3);
  return a1;
}

uint64_t sub_100053BCC(uint64_t a1)
{
  *(unsigned char *)a1 = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v9 = _Q0;
  *(_OWORD *)(a1 + 8) = _Q0;
  *(unsigned char *)(a1 + 152) = 0;
  uint64_t v7 = (void **)(a1 + 24);
  sub_10000DBF0((uint64_t *)(a1 + 24));
  *(unsigned char *)(a1 + 192) = 0;
  *(_OWORD *)(a1 + 200) = v9;
  *(unsigned char *)(a1 + 344) = 0;
  sub_10000DBF0((uint64_t *)(a1 + 216));
  *(unsigned char *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0xBFF0000000000000;
  *(void *)(a1 + 400) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 536) = 0;
  sub_10000DBF0((uint64_t *)(a1 + 408));
  sub_100025424(a1 + 1152);
  sub_100025424(a1 + 1344);
  sub_100025424(a1 + 1536);
  *(unsigned char *)(a1 + 960) = 0;
  *(void *)(a1 + 968) = 0xBFF0000000000000;
  *(void *)(a1 + 976) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 1112) = 0;
  sub_10000DBF0((uint64_t *)(a1 + 984));
  *(unsigned char *)(a1 + 768) = 0;
  *(void *)(a1 + 776) = 0xBFF0000000000000;
  *(void *)(a1 + 784) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 920) = 0;
  sub_10000DBF0((uint64_t *)(a1 + 792));
  sub_100025424(a1 + 1728);
  *(unsigned char *)(a1 + 576) = 0;
  *(void *)(a1 + 584) = 0xBFF0000000000000;
  *(void *)(a1 + 592) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 728) = 0;
  sub_10000DBF0((uint64_t *)(a1 + 600));
  if (*(char *)(a1 + 1911) < 0) {
    operator delete(*(void **)(a1 + 1888));
  }
  sub_10002553C((void *)(a1 + 1832));
  sub_10002553C((void *)(a1 + 1800));
  if (*(char *)(a1 + 1799) < 0) {
    operator delete(*(void **)(a1 + 1776));
  }
  BOOL v10 = (void **)(a1 + 1752);
  sub_100023904(&v10);
  if (*(char *)(a1 + 1719) < 0) {
    operator delete(*(void **)(a1 + 1696));
  }
  sub_10002553C((void *)(a1 + 1640));
  sub_10002553C((void *)(a1 + 1608));
  if (*(char *)(a1 + 1607) < 0) {
    operator delete(*(void **)(a1 + 1584));
  }
  BOOL v10 = (void **)(a1 + 1560);
  sub_100023904(&v10);
  if (*(char *)(a1 + 1527) < 0) {
    operator delete(*(void **)(a1 + 1504));
  }
  sub_10002553C((void *)(a1 + 1448));
  sub_10002553C((void *)(a1 + 1416));
  if (*(char *)(a1 + 1415) < 0) {
    operator delete(*(void **)(a1 + 1392));
  }
  BOOL v10 = (void **)(a1 + 1368);
  sub_100023904(&v10);
  if (*(char *)(a1 + 1335) < 0) {
    operator delete(*(void **)(a1 + 1312));
  }
  sub_10002553C((void *)(a1 + 1256));
  sub_10002553C((void *)(a1 + 1224));
  if (*(char *)(a1 + 1223) < 0) {
    operator delete(*(void **)(a1 + 1200));
  }
  BOOL v10 = (void **)(a1 + 1176);
  sub_100023904(&v10);
  if (*(char *)(a1 + 1143) < 0) {
    operator delete(*(void **)(a1 + 1120));
  }
  sub_100056714((void *)(a1 + 1064));
  sub_100056690((void *)(a1 + 1032));
  if (*(char *)(a1 + 1031) < 0) {
    operator delete(*(void **)(a1 + 1008));
  }
  BOOL v10 = (void **)(a1 + 984);
  sub_10000DB9C(&v10);
  if (*(char *)(a1 + 951) < 0) {
    operator delete(*(void **)(a1 + 928));
  }
  sub_100056714((void *)(a1 + 872));
  sub_100056690((void *)(a1 + 840));
  if (*(char *)(a1 + 839) < 0) {
    operator delete(*(void **)(a1 + 816));
  }
  BOOL v10 = (void **)(a1 + 792);
  sub_10000DB9C(&v10);
  if (*(char *)(a1 + 759) < 0) {
    operator delete(*(void **)(a1 + 736));
  }
  sub_10000DC40((void *)(a1 + 680));
  sub_10000DCC4((void *)(a1 + 648));
  if (*(char *)(a1 + 647) < 0) {
    operator delete(*(void **)(a1 + 624));
  }
  BOOL v10 = (void **)(a1 + 600);
  sub_10000DB9C(&v10);
  if (*(char *)(a1 + 567) < 0) {
    operator delete(*(void **)(a1 + 544));
  }
  sub_10000DC40((void *)(a1 + 488));
  sub_10000DCC4((void *)(a1 + 456));
  if (*(char *)(a1 + 455) < 0) {
    operator delete(*(void **)(a1 + 432));
  }
  BOOL v10 = (void **)(a1 + 408);
  sub_10000DB9C(&v10);
  if (*(char *)(a1 + 375) < 0) {
    operator delete(*(void **)(a1 + 352));
  }
  sub_10000DC40((void *)(a1 + 296));
  sub_10000DCC4((void *)(a1 + 264));
  if (*(char *)(a1 + 263) < 0) {
    operator delete(*(void **)(a1 + 240));
  }
  BOOL v10 = (void **)(a1 + 216);
  sub_10000DB9C(&v10);
  if (*(char *)(a1 + 183) < 0) {
    operator delete(*(void **)(a1 + 160));
  }
  sub_10000DC40((void *)(a1 + 104));
  sub_10000DCC4((void *)(a1 + 72));
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  BOOL v10 = v7;
  sub_10000DB9C(&v10);
  return a1;
}

void sub_100053F44(uint64_t a1, int a2)
{
  if (*(unsigned char *)(a1 + 1921) && *(unsigned __int8 *)(a1 + 1920) == a2)
  {
    __int16 v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v9 = 2082;
      *(void *)long long __p = "";
      *(_WORD *)&__p[8] = 1025;
      *(_DWORD *)&__p[10] = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updateLsStatusNoChange\", \"status\":%{private}hhd}", buf, 0x18u);
    }
  }
  else
  {
    *(_WORD *)(a1 + 1920) = a2 | 0x100;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    sub_10000DD48(v6, "{}");
    *(CFAbsoluteTime *)std::string buf = Current;
    LOBYTE(v9) = a2;
    if (SHIBYTE(v7) < 0)
    {
      sub_100004CB8(&__p[6], v6[0], (unint64_t)v6[1]);
    }
    else
    {
      *(_OWORD *)&__p[6] = *(_OWORD *)v6;
      uint64_t v11 = v7;
    }
    sub_1000097A0(a1, (double *)buf);
    if (SHIBYTE(v11) < 0) {
      operator delete(*(void **)&__p[6]);
    }
    if (SHIBYTE(v7) < 0) {
      operator delete(v6[0]);
    }
  }
}

void sub_1000540AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000540E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  double v4 = (double)*a2;
  sub_10000DD48(v5, "{}");
  v7[0] = v4;
  *(void *)&v7[1] = v3;
  if (SHIBYTE(v6) < 0)
  {
    sub_100004CB8(&__p, v5[0], (unint64_t)v5[1]);
  }
  else
  {
    long long __p = *(_OWORD *)v5;
    uint64_t v9 = v6;
  }
  sub_1000541C4(a1 + 768, v7);
  if (SHIBYTE(v9) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v6) < 0) {
    operator delete(v5[0]);
  }
}

void sub_100054190(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1000541C4(uint64_t a1, double *a2)
{
  v21[0] = off_1000F7800;
  v21[1] = a1;
  void v21[3] = v21;
  v20[0] = off_1000F7880;
  v20[1] = a1;
  v20[3] = v20;
  sub_100010BB4((uint64_t)v22, (uint64_t)v21, (uint64_t)v20);
  sub_10000F6D4(v20);
  sub_10000F6D4(v21);
  double v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    std::string::size_type v5 = (void *)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      std::string::size_type v5 = (void *)*v5;
    }
    uint64_t v6 = (void *)(a1 + 160);
    if (*(char *)(a1 + 183) < 0) {
      uint64_t v6 = (void *)*v6;
    }
    v13[0] = 68289539;
    v13[1] = 0;
    __int16 v14 = 2082;
    uint64_t v15 = "";
    __int16 v16 = 2081;
    uint64_t v17 = v5;
    __int16 v18 = 2081;
    uint64_t v19 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,update\", \"filePath\":%{private, location:escape_only}s, \"debugName\":%{private, location:escape_only}s}", (uint8_t *)v13, 0x26u);
  }
  sub_100056DCC(a1, a2);
  if ((*(char *)(a1 + 71) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(a1 + 71)) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (*(void *)(a1 + 56)) {
LABEL_11:
  }
    sub_100057460((char *)a1);
LABEL_12:
  if (!*(unsigned char *)(a1 + 1) && !*(unsigned char *)(a1 + 185))
  {
    *(unsigned char *)a1 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(a1 + 8) = _Q0;
    *(unsigned char *)(a1 + 152) = 0;
    sub_10000DBF0((uint64_t *)(a1 + 24));
  }
  return sub_1000115F0(v22);
}

void sub_100054384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  sub_10000F6D4((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_1000543B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  double v4 = (double)*a2;
  sub_10000DD48(v5, "{}");
  v7[0] = v4;
  *(void *)&v7[1] = v3;
  if (SHIBYTE(v6) < 0)
  {
    sub_100004CB8(&__p, v5[0], (unint64_t)v5[1]);
  }
  else
  {
    long long __p = *(_OWORD *)v5;
    uint64_t v9 = v6;
  }
  sub_1000541C4(a1 + 960, v7);
  if (SHIBYTE(v9) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v6) < 0) {
    operator delete(v5[0]);
  }
}

void sub_100054458(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10005448C(uint64_t a1, int a2)
{
  if (*(unsigned char *)(a1 + 1923) && *(unsigned __int8 *)(a1 + 1922) == a2)
  {
    double v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v9 = 2082;
      *(void *)long long __p = "";
      *(_WORD *)&__p[8] = 1025;
      *(_DWORD *)&__p[10] = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updatePushParticipationStatusNoChange\", \"status\":%{private}hhd}", buf, 0x18u);
    }
  }
  else
  {
    *(_WORD *)(a1 + 1922) = a2 | 0x100;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    sub_10000DD48(v6, "{}");
    *(CFAbsoluteTime *)std::string buf = Current;
    LOBYTE(v9) = a2;
    if (SHIBYTE(v7) < 0)
    {
      sub_100004CB8(&__p[6], v6[0], (unint64_t)v6[1]);
    }
    else
    {
      *(_OWORD *)&__p[6] = *(_OWORD *)v6;
      uint64_t v11 = v7;
    }
    sub_1000097A0(a1 + 192, (double *)buf);
    if (SHIBYTE(v11) < 0) {
      operator delete(*(void **)&__p[6]);
    }
    if (SHIBYTE(v7) < 0) {
      operator delete(v6[0]);
    }
  }
}

void sub_1000545F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100054630(uint64_t a1, int a2)
{
  if (*(unsigned char *)(a1 + 1927) && *(unsigned __int8 *)(a1 + 1926) == a2)
  {
    double v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v10 = 2082;
      *(void *)long long __p = "";
      *(_WORD *)&__p[8] = 1025;
      *(_DWORD *)&__p[10] = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updateIgneousSubscription,no change\", \"status\":%{private}hhd}", buf, 0x18u);
    }
  }
  else
  {
    *(_WORD *)(a1 + 1926) = a2 | 0x100;
    std::string::size_type v5 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v10 = 2082;
      *(void *)long long __p = "";
      *(_WORD *)&__p[8] = 1025;
      *(_DWORD *)&__p[10] = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updateIgneousSubscription\", \"status\":%{private}hhd}", buf, 0x18u);
    }
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    sub_10000DD48(v7, "{}");
    *(CFAbsoluteTime *)std::string buf = Current;
    LOBYTE(v10) = a2;
    if (SHIBYTE(v8) < 0)
    {
      sub_100004CB8(&__p[6], v7[0], (unint64_t)v7[1]);
    }
    else
    {
      *(_OWORD *)&__p[6] = *(_OWORD *)v7;
      uint64_t v12 = v8;
    }
    sub_1000097A0(a1 + 576, (double *)buf);
    if (SHIBYTE(v12) < 0) {
      operator delete(*(void **)&__p[6]);
    }
    if (SHIBYTE(v8) < 0) {
      operator delete(v7[0]);
    }
  }
}

void sub_100054810(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10005484C(uint64_t a1, int a2)
{
  if (*(unsigned char *)(a1 + 1925) && *(unsigned __int8 *)(a1 + 1924) == a2)
  {
    double v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v10 = 2082;
      *(void *)long long __p = "";
      *(_WORD *)&__p[8] = 1025;
      *(_DWORD *)&__p[10] = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updateSubscriptionStatusNoChange\", \"status\":%{private}hhd}", buf, 0x18u);
    }
  }
  else
  {
    *(_WORD *)(a1 + 1924) = a2 | 0x100;
    std::string::size_type v5 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v10 = 2082;
      *(void *)long long __p = "";
      *(_WORD *)&__p[8] = 1025;
      *(_DWORD *)&__p[10] = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updateSubscription\", \"status\":%{private}hhd}", buf, 0x18u);
    }
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    sub_10000DD48(v7, "{}");
    *(CFAbsoluteTime *)std::string buf = Current;
    LOBYTE(v10) = a2;
    if (SHIBYTE(v8) < 0)
    {
      sub_100004CB8(&__p[6], v7[0], (unint64_t)v7[1]);
    }
    else
    {
      *(_OWORD *)&__p[6] = *(_OWORD *)v7;
      uint64_t v12 = v8;
    }
    sub_1000097A0(a1 + 384, (double *)buf);
    if (SHIBYTE(v12) < 0) {
      operator delete(*(void **)&__p[6]);
    }
    if (SHIBYTE(v8) < 0) {
      operator delete(v7[0]);
    }
  }
}

void sub_100054A2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100054A68(uint64_t a1, char *a2)
{
  double v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    if (a2[23] >= 0) {
      std::string::size_type v5 = a2;
    }
    else {
      std::string::size_type v5 = *(char **)a2;
    }
    *(void *)&double buf = 68289283;
    *(_WORD *)uint64_t v12 = 2082;
    *(void *)&_DWORD v12[2] = "";
    __int16 v13 = 2081;
    __int16 v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updateWeaDisplayed\", \"weaText\":%{private, location:escape_only}s}", (uint8_t *)&buf, 0x1Cu);
  }
  double Current = CFAbsoluteTimeGetCurrent();
  SACommonUtils::getHashForString(a2, (uint64_t *)v9);
  sub_10000DD48(v7, "{}");
  sub_1000251CC((uint64_t)&buf, (long long *)v9, (long long *)v7, Current);
  sub_100030CFC(a1 + 1152, &buf);
  if (v17 < 0) {
    operator delete(__p);
  }
  if (v15 < 0) {
    operator delete(*(void **)v12);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v10 < 0) {
    operator delete(v9[0]);
  }
}

void sub_100054BD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(a1);
}

void sub_100054C20(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = v3;
  if (v3)
  {
    [v3 enumerateKeysAndObjectsUsingBlock:&stru_1000F7510];
    std::string::size_type v5 = [v4 objectForKey:@"Body"];
    uint64_t v6 = v5;
    if (v5)
    {
      sub_10000DD48(&__p, (char *)[v5 UTF8String]);
      SACommonUtils::getHashForString((char *)&__p, (uint64_t *)v14);
      if (v18 < 0) {
        operator delete(__p);
      }
      double Current = CFAbsoluteTimeGetCurrent();
      SACommonUtils::convertDictionaryToString((SACommonUtils *)v4, (uint64_t)v12);
      if (SHIBYTE(v15) < 0)
      {
        sub_100004CB8(v10, v14[0], (unint64_t)v14[1]);
      }
      else
      {
        *(_OWORD *)char v10 = *(_OWORD *)v14;
        uint64_t v11 = v15;
      }
      sub_1000251CC((uint64_t)&__p, (long long *)v10, (long long *)v12, Current);
      sub_100030CFC(a1 + 1344, (double *)&__p);
      if (v21 < 0) {
        operator delete(v20);
      }
      if (v19 < 0) {
        operator delete(*(void **)v17);
      }
      if (SHIBYTE(v11) < 0) {
        operator delete(v10[0]);
      }
      if (v13 < 0) {
        operator delete(v12[0]);
      }
      if (SHIBYTE(v15) < 0) {
        operator delete(v14[0]);
      }
    }
    else
    {
      __int16 v9 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        long long __p = (void *)68289026;
        *(_WORD *)char v17 = 2082;
        *(void *)&v17[2] = "";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updateWeaReceived,unable to read message id,ignoring.\"}", (uint8_t *)&__p, 0x12u);
      }
    }
  }
  else
  {
    char v8 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      long long __p = (void *)68289026;
      *(_WORD *)char v17 = 2082;
      *(void *)&v17[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updateWeaReceived,alert does not have any info,ignoring.\"}", (uint8_t *)&__p, 0x12u);
    }
  }
}

void sub_100054E78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }

  _Unwind_Resume(a1);
}

void sub_100054F10(id a1, id a2, id a3, BOOL *a4)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v8[0] = 68289539;
    v8[1] = 0;
    __int16 v9 = 2082;
    char v10 = "";
    __int16 v11 = 2113;
    id v12 = v5;
    __int16 v13 = 2113;
    id v14 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updateWeaReceived\", \"key\":%{private, location:escape_only}@, \"value\":%{private, location:escape_only}@}", (uint8_t *)v8, 0x26u);
  }
}

void sub_100054FFC(uint64_t a1, void **a2, void *a3)
{
  id v5 = a3;
  id v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    if (*((char *)a2 + 23) >= 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = *a2;
    }
    *(void *)&double buf = 68289283;
    *(_WORD *)id v14 = 2082;
    *(void *)&_DWORD v14[2] = "";
    __int16 v15 = 2081;
    __int16 v16 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updateSaReceived\", \"uid\":%{private, location:escape_only}s}", (uint8_t *)&buf, 0x1Cu);
  }
  double Current = CFAbsoluteTimeGetCurrent();
  SACommonUtils::convertDictionaryToString(v5, (uint64_t)v11);
  if (*((char *)a2 + 23) < 0)
  {
    sub_100004CB8(v9, *a2, (unint64_t)a2[1]);
  }
  else
  {
    *(_OWORD *)__int16 v9 = *(_OWORD *)a2;
    char v10 = a2[2];
  }
  sub_1000251CC((uint64_t)&buf, (long long *)v9, (long long *)v11, Current);
  sub_100030CFC(a1 + 1536, &buf);
  if (v19 < 0) {
    operator delete(__p);
  }
  if (v17 < 0) {
    operator delete(*(void **)v14);
  }
  if (SHIBYTE(v10) < 0) {
    operator delete(v9[0]);
  }
  if (v12 < 0) {
    operator delete(v11[0]);
  }
}

void sub_10005518C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  if (a20 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1000551E8(uint64_t a1, void **a2, void *a3)
{
  id v5 = a3;
  id v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    if (*((char *)a2 + 23) >= 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = *a2;
    }
    *(void *)&double buf = 68289283;
    *(_WORD *)id v14 = 2082;
    *(void *)&_DWORD v14[2] = "";
    __int16 v15 = 2081;
    __int16 v16 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,updateIgneousReceived\", \"uid\":%{private, location:escape_only}s}", (uint8_t *)&buf, 0x1Cu);
  }
  double Current = CFAbsoluteTimeGetCurrent();
  SACommonUtils::convertDictionaryToString(v5, (uint64_t)v11);
  if (*((char *)a2 + 23) < 0)
  {
    sub_100004CB8(v9, *a2, (unint64_t)a2[1]);
  }
  else
  {
    *(_OWORD *)__int16 v9 = *(_OWORD *)a2;
    char v10 = a2[2];
  }
  sub_1000251CC((uint64_t)&buf, (long long *)v9, (long long *)v11, Current);
  sub_100030CFC(a1 + 1728, &buf);
  if (v19 < 0) {
    operator delete(__p);
  }
  if (v17 < 0) {
    operator delete(*(void **)v14);
  }
  if (SHIBYTE(v10) < 0) {
    operator delete(v9[0]);
  }
  if (v12 < 0) {
    operator delete(v11[0]);
  }
}

void sub_100055378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  if (a20 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1000553D4(uint64_t a1, double a2, double a3)
{
  v12[0] = 0;
  v12[1] = 0;
  __int16 v11 = v12;
  sub_10000B41C(a1 + 384, (uint64_t)&v11, a2, a3);
  uint64_t v5 = sub_10005E598((uint64_t)&v11);
  id v6 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    sub_10000DD48(__p, off_1000F7CF0[(int)v5]);
    if (v10 >= 0) {
      uint64_t v7 = __p;
    }
    else {
      uint64_t v7 = (void **)__p[0];
    }
    *(_DWORD *)double buf = 68289795;
    int v14 = 0;
    __int16 v15 = 2082;
    __int16 v16 = "";
    __int16 v17 = 2049;
    double v18 = a2;
    __int16 v19 = 2049;
    double v20 = a3;
    __int16 v21 = 2081;
    char v22 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,wasSubscribedWithinWindow\", \"startTsSeconds\":\"%{private}0.1f\", \"endTsSeconds\":\"%{private}0.1f\", \"result\":%{private, location:escape_only}s}", buf, 0x30u);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
  }

  sub_100015B14((uint64_t)&v11, v12[0]);
  return v5;
}

void sub_100055538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, void *a13)
{
  sub_100015B14((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

uint64_t sub_100055564(uint64_t a1, double a2, double a3)
{
  v12[0] = 0;
  v12[1] = 0;
  __int16 v11 = v12;
  sub_10000B41C(a1 + 576, (uint64_t)&v11, a2, a3);
  uint64_t v5 = sub_10005E598((uint64_t)&v11);
  id v6 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    sub_10000DD48(__p, off_1000F7CF0[(int)v5]);
    if (v10 >= 0) {
      uint64_t v7 = __p;
    }
    else {
      uint64_t v7 = (void **)__p[0];
    }
    *(_DWORD *)double buf = 68289795;
    int v14 = 0;
    __int16 v15 = 2082;
    __int16 v16 = "";
    __int16 v17 = 2049;
    double v18 = a2;
    __int16 v19 = 2049;
    double v20 = a3;
    __int16 v21 = 2081;
    char v22 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,wasIgneousSubscribedWithinWindow\", \"startTsSeconds\":\"%{private}0.1f\", \"endTsSeconds\":\"%{private}0.1f\", \"result\":%{private, location:escape_only}s}", buf, 0x30u);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
  }

  sub_100015B14((uint64_t)&v11, v12[0]);
  return v5;
}

void sub_1000556C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, void *a13)
{
  sub_100015B14((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void *sub_1000556F4(uint64_t a1, double a2)
{
  double v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)double buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v18) = 2082;
    *(void *)((char *)&v18 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,deleteOldAlerts\"}", buf, 0x12u);
  }
  sub_100032DB4(a1 + 1152, 1, a2);
  sub_100032DB4(a1 + 1344, 1, a2);
  sub_100032DB4(a1 + 1536, 1, a2);
  sub_100032DB4(a1 + 1728, 1, a2);
  v22[0] = off_1000F7900;
  v22[1] = a1 + 960;
  void v22[3] = v22;
  v21[0] = off_1000F7980;
  v21[1] = a1 + 960;
  void v21[3] = v21;
  sub_100010BB4((uint64_t)v23, (uint64_t)v22, (uint64_t)v21);
  sub_10000F6D4(v21);
  sub_10000F6D4(v22);
  char v16 = 0;
  unint64_t v14 = 0xBFF0000000000000;
  uint64_t v15 = 0;
  uint64_t v5 = *(void *)(a1 + 984);
  uint64_t v6 = *(void *)(a1 + 992);
  *(void *)double buf = a1 + 960;
  *(double *)&long long v18 = a2;
  *((void *)&v18 + 1) = &v16;
  __int16 v19 = &v15;
  double v20 = &v14;
  if (v5 != v6)
  {
    while (!sub_100058790((double *)buf, (double *)v5))
    {
      v5 += 40;
      if (v5 == v6)
      {
        uint64_t v5 = v6;
        goto LABEL_15;
      }
    }
    if (v5 != v6)
    {
      for (uint64_t i = v5 + 40; i != v6; i += 40)
      {
        if (!sub_100058790((double *)buf, (double *)i))
        {
          *(_OWORD *)uint64_t v5 = *(_OWORD *)i;
          char v8 = (void **)(v5 + 16);
          if (*(char *)(v5 + 39) < 0) {
            operator delete(*v8);
          }
          long long v9 = *(_OWORD *)(i + 16);
          *(void *)(v5 + 32) = *(void *)(i + 32);
          *(_OWORD *)char v8 = v9;
          *(unsigned char *)(i + 39) = 0;
          *(unsigned char *)(i + 16) = 0;
          v5 += 40;
        }
      }
    }
  }
LABEL_15:
  uint64_t v10 = *(void *)(a1 + 992);
  if (v5 != v10)
  {
    uint64_t v11 = sub_100058304(v10, *(void *)(a1 + 992), v5);
    for (uint64_t j = *(void *)(a1 + 992); j != v11; j -= 40)
    {
      if (*(char *)(j - 1) < 0) {
        operator delete(*(void **)(j - 24));
      }
    }
    *(void *)(a1 + 992) = v11;
  }
  if (v16)
  {
    if ((*(char *)(a1 + 1031) & 0x80000000) == 0)
    {
      if (!*(unsigned char *)(a1 + 1031)) {
        return sub_1000115F0(v23);
      }
      goto LABEL_26;
    }
    if (*(void *)(a1 + 1016)) {
LABEL_26:
    }
      sub_100057460((char *)(a1 + 960));
  }
  return sub_1000115F0(v23);
}

void sub_1000559B8(_Unwind_Exception *a1)
{
  sub_1000115F0((void *)(v1 - 120));
  _Unwind_Resume(a1);
}

void *sub_1000559F4(uint64_t a1, double a2)
{
  double v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 68289026;
    v6[1] = 0;
    __int16 v7 = 2082;
    char v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,deleteOldStates\"}", (uint8_t *)v6, 0x12u);
  }
  sub_100058990(a1, a2);
  sub_100058990(a1 + 192, a2);
  sub_100058990(a1 + 384, a2);
  return sub_100058990(a1 + 576, a2);
}

void *sub_100055AE8(uint64_t a1, uint64_t a2, double a3, double a4)
{
  v22[0] = off_1000F7B00;
  v22[1] = a1;
  void v22[3] = v22;
  v21[0] = off_1000F7B80;
  v21[1] = a1;
  void v21[3] = v21;
  sub_100010BB4((uint64_t)v23, (uint64_t)v22, (uint64_t)v21);
  sub_10000F6D4(v21);
  sub_10000F6D4(v22);
  sub_100015B14(a2, *(void **)(a2 + 8));
  *(void *)a2 = a2 + 8;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 8) = 0;
  if (*(double *)(a1 + 8) <= a3)
  {
    if (*(void *)(a1 + 24) == *(void *)(a1 + 32) || !*(unsigned char *)a1)
    {
      char v8 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v15 = (void *)(a1 + 160);
        if (*(char *)(a1 + 183) < 0) {
          uint64_t v15 = (void *)*v15;
        }
        unint64_t v17 = 68289283;
        *(_WORD *)long long v18 = 2082;
        *(void *)&v18[2] = "";
        __int16 v19 = 2081;
        double v20 = v15;
        uint64_t v10 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findAllValuesWithin,skipping,notReady\", \"history\":%{pri"
              "vate, location:escape_only}s}";
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v17 = sub_100055FD0(a1, a3);
      *(void *)long long v18 = v11;
      if ((_BYTE)v11) {
        sub_1000596C4((uint64_t **)a2, (uint64_t *)&v17, (uint64_t *)&v17);
      }
      uint64_t v13 = *(void *)(a1 + 24);
      uint64_t v12 = *(void *)(a1 + 32);
      while (v13 != v12)
      {
        if (*(double *)v13 >= a3 && *(double *)v13 <= a4) {
          sub_1000596C4((uint64_t **)a2, (uint64_t *)(v13 + 8), (uint64_t *)(v13 + 8));
        }
        v13 += 40;
      }
    }
  }
  else
  {
    char v8 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      long long v9 = (void *)(a1 + 160);
      if (*(char *)(a1 + 183) < 0) {
        long long v9 = (void *)*v9;
      }
      unint64_t v17 = 68289283;
      *(_WORD *)long long v18 = 2082;
      *(void *)&v18[2] = "";
      __int16 v19 = 2081;
      double v20 = v9;
      uint64_t v10 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findAllValuesWithin,outOfRangeArgs\", \"history\":%{private,"
            " location:escape_only}s}";
LABEL_22:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&v17, 0x1Cu);
    }
  }
  return sub_1000115F0(v23);
}

void sub_100055D50(_Unwind_Exception *a1)
{
  sub_1000115F0((void *)(v1 - 88));
  _Unwind_Resume(a1);
}

uint64_t sub_100055D80(uint64_t a1, uint64_t a2, void *a3, std::string *a4)
{
  uint64_t v8 = a1 + 1344;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_100004CB8(__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)a2;
    uint64_t v17 = *(void *)(a2 + 16);
  }
  char v9 = sub_10002313C(v8, (unsigned __int8 **)__p, a3, a4);
  char v10 = v9;
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    if (v10) {
      return 1;
    }
  }
  else if (v9)
  {
    return 1;
  }
  uint64_t v12 = a1 + 1152;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_100004CB8(v14, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)unint64_t v14 = *(_OWORD *)a2;
    uint64_t v15 = *(void *)(a2 + 16);
  }
  uint64_t v11 = sub_10002313C(v12, (unsigned __int8 **)v14, a3, a4);
  if (SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return v11;
}

void sub_100055E80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100055EB4(uint64_t a1, double a2)
{
  double Current = CFAbsoluteTimeGetCurrent();
  int64_t v5 = sub_100055FD0(a1 + 960, Current);
  if (!v6) {
    return 1;
  }
  int64_t v7 = vcvtmd_s64_f64(Current / a2);
  int64_t v8 = vcvtmd_s64_f64((double)v5 / a2);
  char v9 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v11[0] = 68289539;
    v11[1] = 0;
    __int16 v12 = 2082;
    uint64_t v13 = "";
    __int16 v14 = 2049;
    int64_t v15 = v7;
    __int16 v16 = 2049;
    int64_t v17 = v8;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#evtTrk,isLastSubmissionOlderThanRollingPeriod\", \"currentRollingPeriod\":%{private}lld, \"prevRollingPeriod\":%{private}lld}", (uint8_t *)v11, 0x26u);
  }
  return v7 > v8;
}

unint64_t sub_100055FD0(uint64_t a1, double a2)
{
  v26[0] = off_1000F7C00;
  v26[1] = a1;
  v26[3] = v26;
  v25[0] = off_1000F7C80;
  v25[1] = a1;
  void v25[3] = v25;
  sub_100010BB4((uint64_t)v27, (uint64_t)v26, (uint64_t)v25);
  sub_10000F6D4(v25);
  sub_10000F6D4(v26);
  double v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int64_t v5 = (void *)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      int64_t v5 = (void *)*v5;
    }
    char v6 = (void *)(a1 + 160);
    if (*(char *)(a1 + 183) < 0) {
      char v6 = (void *)*v6;
    }
    int v17 = 68289539;
    int v18 = 0;
    __int16 v19 = 2082;
    double v20 = "";
    __int16 v21 = 2081;
    char v22 = v5;
    __int16 v23 = 2081;
    int v24 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,findLatestValueBefore\", \"filePath\":%{private, location:escape_only}s, \"debugName\":%{private, location:escape_only}s}", (uint8_t *)&v17, 0x26u);
  }
  if (*(double *)(a1 + 8) > a2)
  {
    int64_t v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int64_t v8 = (void *)(a1 + 160);
      if (*(char *)(a1 + 183) < 0) {
        int64_t v8 = (void *)*v8;
      }
      int v17 = 68289283;
      int v18 = 0;
      __int16 v19 = 2082;
      double v20 = "";
      __int16 v21 = 2081;
      char v22 = v8;
      char v9 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findLatestValueBefore,InvalidArgs\", \"history\":%{private, l"
           "ocation:escape_only}s}";
LABEL_21:
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v9, (uint8_t *)&v17, 0x1Cu);
      goto LABEL_22;
    }
    goto LABEL_22;
  }
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  if (v10 == v11 || !*(unsigned char *)a1)
  {
    int64_t v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v14 = (void *)(a1 + 160);
      if (*(char *)(a1 + 183) < 0) {
        __int16 v14 = (void *)*v14;
      }
      int v17 = 68289283;
      int v18 = 0;
      __int16 v19 = 2082;
      double v20 = "";
      __int16 v21 = 2081;
      char v22 = v14;
      char v9 = "{\"msg%{public}.0s\":\"#saEventHistory,#warning,findLatestValueBefore,skipping,notReady\", \"history\":%{priv"
           "ate, location:escape_only}s}";
      goto LABEL_21;
    }
LABEL_22:
    LOBYTE(v13) = 0;
    unint64_t v15 = 0;
    goto LABEL_23;
  }
  while (v11 != v10)
  {
    double v12 = *(double *)(v11 - 40);
    v11 -= 40;
    if (v12 <= a2)
    {
      uint64_t v13 = *(void *)(v11 + 8);
      goto LABEL_25;
    }
  }
  uint64_t v13 = *(void *)(v10 + 8);
LABEL_25:
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFF00;
LABEL_23:
  sub_1000115F0(v27);
  return v15 | v13;
}

void sub_100056284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  sub_10000F6D4((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_1000562A0(unsigned char *a1)
{
  sub_100056318(a1);
  sub_100056318(a1 + 192);
  sub_100056318(a1 + 384);
  sub_100022FE0(a1 + 1344);
  sub_100022FE0(a1 + 1152);
  sub_100022FE0(a1 + 1536);
  sub_100022FE0(a1 + 1728);
  sub_100056318(a1 + 576);
  sub_100056474(a1 + 768);

  sub_100056474(a1 + 960);
}

void sub_100056318(unsigned char *a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = a1 + 160;
    if ((char)a1[183] < 0) {
      id v3 = (void *)*v3;
    }
    int v5 = 68289283;
    int v6 = 0;
    __int16 v7 = 2082;
    int64_t v8 = "";
    __int16 v9 = 2081;
    uint64_t v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,onFirstUnlock\", \"history\":%{private, location:escape_only}s}", (uint8_t *)&v5, 0x1Cu);
  }
  if (a1[184])
  {
    double v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 68289026;
      int v6 = 0;
      __int16 v7 = 2082;
      int64_t v8 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,onFirstUnlock,skip\"}", (uint8_t *)&v5, 0x12u);
    }
  }
  else
  {
    a1[184] = 1;
    if (a1[1]) {
      sub_100010298((uint64_t)a1);
    }
  }
}

void sub_100056474(unsigned char *a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = a1 + 160;
    if ((char)a1[183] < 0) {
      id v3 = (void *)*v3;
    }
    int v5 = 68289283;
    int v6 = 0;
    __int16 v7 = 2082;
    int64_t v8 = "";
    __int16 v9 = 2081;
    uint64_t v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,onFirstUnlock\", \"history\":%{private, location:escape_only}s}", (uint8_t *)&v5, 0x1Cu);
  }
  if (a1[184])
  {
    double v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 68289026;
      int v6 = 0;
      __int16 v7 = 2082;
      int64_t v8 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,onFirstUnlock,skip\"}", (uint8_t *)&v5, 0x12u);
    }
  }
  else
  {
    a1[184] = 1;
    if (a1[1]) {
      sub_100057A14((uint64_t)a1);
    }
  }
}

uint64_t sub_1000565D0(uint64_t a1)
{
  *(_WORD *)a1 = 256;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 8) = _Q0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 128) = 0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 136) = xmmword_1000B10B0;
  *(unsigned char *)(a1 + 152) = 0;
  sub_10000DD48((void *)(a1 + 160), "Unknown");
  *(_WORD *)(a1 + 184) = 0;
  return a1;
}

void sub_100056654(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100056714((void *)(v2 + 104));
  sub_100056690((void *)(v2 + 72));
  if (*(char *)(v2 + 71) < 0) {
    operator delete(*(void **)(v2 + 48));
  }
  sub_10000DB9C((void ***)va);
  _Unwind_Resume(a1);
}

void *sub_100056690(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_100056714(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10005679C()
{
}

void *sub_1000567B0()
{
  uint64_t result = operator new(0x10uLL);
  void *result = off_1000F7540;
  return result;
}

void sub_1000567E8(uint64_t a1, void *a2)
{
  *a2 = off_1000F7540;
}

uint64_t sub_100056810(int a1, unsigned char *a2, std::string *a3)
{
  if (*a2) {
    id v3 = "1";
  }
  else {
    id v3 = "0";
  }
  sub_10004D3E4(a3, v3);
  return 1;
}

uint64_t sub_10005684C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10005688C()
{
}

void sub_10005689C()
{
}

void *sub_1000568B0()
{
  uint64_t result = operator new(0x10uLL);
  void *result = off_1000F75D0;
  return result;
}

void sub_1000568E8(uint64_t a1, void *a2)
{
  *a2 = off_1000F75D0;
}

uint64_t sub_100056910(uint64_t a1, uint64_t a2, BOOL *a3)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_100004CB8(__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)a2;
    uint64_t v10 = *(void *)(a2 + 16);
  }
  double v4 = (void *)HIBYTE(v10);
  int v5 = SHIBYTE(v10);
  if (v10 < 0) {
    double v4 = __p[1];
  }
  if (v4 == (void *)1)
  {
    int v6 = (void **)__p[0];
    if (v10 >= 0) {
      int v6 = __p;
    }
    BOOL v7 = *(unsigned char *)v6 != 48;
  }
  else
  {
    BOOL v7 = 1;
  }
  *a3 = v7;
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  return 1;
}

uint64_t sub_1000569BC(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_1000569FC()
{
}

void sub_100056A0C()
{
}

void *sub_100056A20()
{
  uint64_t result = operator new(0x10uLL);
  void *result = off_1000F7660;
  return result;
}

void sub_100056A58(uint64_t a1, void *a2)
{
  *a2 = off_1000F7660;
}

uint64_t sub_100056A80(int a1, uint64_t a2, std::string *this)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_100004CB8(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  std::string::operator=(this, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return 1;
}

void sub_100056AF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100056B10(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100056B50()
{
}

void sub_100056B60()
{
}

void *sub_100056B74()
{
  uint64_t result = operator new(0x10uLL);
  void *result = off_1000F76E0;
  return result;
}

void sub_100056BAC(uint64_t a1, void *a2)
{
  *a2 = off_1000F76E0;
}

uint64_t sub_100056BD4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  std::to_string(&v5, *a2);
  if (*(char *)(a3 + 23) < 0) {
    operator delete(*(void **)a3);
  }
  *(std::string *)a3 = v5;
  return 1;
}

uint64_t sub_100056C2C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100056C6C()
{
}

void sub_100056C7C()
{
}

void *sub_100056C90()
{
  uint64_t result = operator new(0x10uLL);
  void *result = off_1000F7770;
  return result;
}

void sub_100056CC8(uint64_t a1, void *a2)
{
  *a2 = off_1000F7770;
}

uint64_t sub_100056CF0(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_100004CB8(v6, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)int v6 = *(_OWORD *)a2;
    uint64_t v7 = *(void *)(a2 + 16);
  }
  if (SHIBYTE(v7) < 0)
  {
    double v4 = v6[0];
    *a3 = atoi(v6[0]);
    operator delete(v4);
  }
  else
  {
    *a3 = atoi((const char *)v6);
  }
  return 1;
}

uint64_t sub_100056D80(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100056DC0()
{
}

void sub_100056DCC(uint64_t a1, double *a2)
{
  if (*a2 >= 0.0)
  {
    std::string v5 = a2;
    uint64_t v6 = *(void *)(a1 + 24);
    uint64_t v7 = *(char **)(a1 + 32);
    if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)&v7[-v6] >> 3) >= *(void *)(a1 + 136))
    {
      int64_t v8 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v9 = (void *)(a1 + 160);
        if (*(char *)(a1 + 183) < 0) {
          __int16 v9 = (void *)*v9;
        }
        *(_DWORD *)double buf = 68289283;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)long long v74 = 2082;
        *(void *)&v74[2] = "";
        *(_WORD *)&v74[10] = 2081;
        *(void *)&v74[12] = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,maxHistoryLenReached\", \"history\":%{private, location:escape_only}s}", buf, 0x1Cu);
        uint64_t v6 = *(void *)(a1 + 24);
        uint64_t v7 = *(char **)(a1 + 32);
      }
      uint64_t v7 = (char *)sub_100058304(v6 + 40, (uint64_t)v7, v6);
      for (uint64_t i = *(void ***)(a1 + 32); i != (void **)v7; i -= 5)
      {
        if (*((char *)i - 1) < 0) {
          operator delete(*(i - 3));
        }
      }
      *(void *)(a1 + 32) = v7;
      *(unsigned char *)(a1 + 152) = 1;
      uint64_t v6 = *(void *)(a1 + 24);
    }
    if (v7 == (char *)v6)
    {
      double v12 = v7;
    }
    else
    {
      unint64_t v11 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)&v7[-v6] >> 3);
      double v12 = v7;
      do
      {
        unint64_t v13 = v11 >> 1;
        __int16 v14 = (double *)&v12[-40 * (v11 >> 1)];
        double v16 = *(v14 - 5);
        unint64_t v15 = (char *)(v14 - 5);
        v11 += ~(v11 >> 1);
        if (*v5 >= v16) {
          unint64_t v11 = v13;
        }
        else {
          double v12 = v15;
        }
      }
      while (v11);
    }
    uint64_t v17 = (uint64_t)&v12[-v6] / 40;
    unint64_t v18 = v6 + 40 * v17;
    unint64_t v19 = *(void *)(a1 + 40);
    if ((unint64_t)v7 >= v19)
    {
      unint64_t v32 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)&v7[-v6] >> 3) + 1;
      if (v32 > 0x666666666666666) {
        sub_1000050E8();
      }
      unint64_t v33 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v19 - v6) >> 3);
      if (2 * v33 > v32) {
        unint64_t v32 = 2 * v33;
      }
      if (v33 >= 0x333333333333333) {
        unint64_t v34 = 0x666666666666666;
      }
      else {
        unint64_t v34 = v32;
      }
      uint64_t v72 = a1 + 40;
      if (v34)
      {
        uint64_t v36 = (char *)sub_100058384(v34);
      }
      else
      {
        uint64_t v36 = 0;
        uint64_t v35 = 0;
      }
      int v39 = &v36[40 * v17];
      __int16 v68 = v36;
      uint64_t v69 = v39;
      __int16 v70 = v39;
      int v71 = &v36[40 * v35];
      if (v17 == v35)
      {
        if ((uint64_t)&v12[-v6] < 1)
        {
          if (v12 == (char *)v6) {
            unint64_t v42 = 1;
          }
          else {
            unint64_t v42 = 2 * v17;
          }
          uint64_t v75 = a1 + 40;
          uint64_t v43 = (char *)sub_100058384(v42);
          int v45 = v69;
          unsigned int v46 = v70;
          unsigned int v47 = v69;
          uint64_t v48 = (uint64_t)&v43[40 * (v42 >> 2)];
          if (v70 != v69)
          {
            uint64_t v48 = (uint64_t)&v43[40 * (v42 >> 2) + v70 - v69];
            int v49 = &v43[40 * (v42 >> 2)];
            uint64_t v50 = v69;
            do
            {
              *(_OWORD *)int v49 = *(_OWORD *)v50;
              long long v51 = *((_OWORD *)v50 + 1);
              *((void *)v49 + 4) = *((void *)v50 + 4);
              *((_OWORD *)v49 + 1) = v51;
              *((void *)v50 + 3) = 0;
              *((void *)v50 + 4) = 0;
              *((void *)v50 + 2) = 0;
              v49 += 40;
              v50 += 40;
            }
            while (v49 != (char *)v48);
            unsigned int v47 = v46;
          }
          std::string::size_type v52 = v68;
          unint64_t v53 = v71;
          __int16 v68 = v43;
          uint64_t v69 = &v43[40 * (v42 >> 2)];
          *(void *)double buf = v52;
          *(void *)long long v74 = v45;
          __int16 v70 = (char *)v48;
          int v71 = &v43[40 * v44];
          *(void *)&v74[8] = v47;
          *(void *)&v74[16] = v53;
          sub_1000583CC((uint64_t)buf);
          int v39 = v70;
        }
        else
        {
          uint64_t v40 = v17 + 2;
          if (v17 >= -1) {
            uint64_t v40 = v17 + 1;
          }
          uint64_t v41 = (uint64_t)&v39[-40 * (v40 >> 1)];
          int v39 = (char *)sub_100058304((uint64_t)v39, (uint64_t)v39, v41);
          uint64_t v69 = (char *)v41;
          __int16 v70 = v39;
        }
      }
      *(_OWORD *)int v39 = *(_OWORD *)v5;
      BOOL v54 = (double *)(v39 + 16);
      if (*((char *)v5 + 39) < 0)
      {
        sub_100004CB8(v54, *((void **)v5 + 2), *((void *)v5 + 3));
      }
      else
      {
        long long v55 = *((_OWORD *)v5 + 1);
        v54[2] = v5[4];
        *(_OWORD *)BOOL v54 = v55;
      }
      int v56 = v69;
      __int16 v57 = v70 + 40;
      v70 += 40;
      uint64_t v58 = *(void *)(a1 + 24);
      if (v58 != v18)
      {
        unint64_t v59 = v18;
        do
        {
          *(_OWORD *)(v56 - 40) = *(_OWORD *)(v59 - 40);
          long long v60 = *(_OWORD *)(v59 - 24);
          *((void *)v56 - 1) = *(void *)(v59 - 8);
          *(_OWORD *)(v56 - 24) = v60;
          v56 -= 40;
          *(void *)(v59 - 16) = 0;
          *(void *)(v59 - 8) = 0;
          *(void *)(v59 - 24) = 0;
          v59 -= 40;
        }
        while (v59 != v58);
        __int16 v57 = v70;
      }
      uint64_t v69 = v56;
      uint64_t v61 = *(void *)(a1 + 32);
      if (v61 != v18)
      {
        do
        {
          *(_OWORD *)__int16 v57 = *(_OWORD *)v18;
          long long v62 = *(_OWORD *)(v18 + 16);
          *((void *)v57 + 4) = *(void *)(v18 + 32);
          *((_OWORD *)v57 + 1) = v62;
          *(void *)(v18 + 24) = 0;
          *(void *)(v18 + 32) = 0;
          *(void *)(v18 + 16) = 0;
          v57 += 40;
          v18 += 40;
        }
        while (v18 != v61);
        int v56 = v69;
        unint64_t v18 = *(void *)(a1 + 32);
      }
      __int16 v63 = *(char **)(a1 + 24);
      *(void *)(a1 + 24) = v56;
      *(void *)(a1 + 32) = v57;
      unsigned int v64 = *(char **)(a1 + 40);
      *(void *)(a1 + 40) = v71;
      __int16 v70 = (char *)v18;
      int v71 = v64;
      __int16 v68 = v63;
      uint64_t v69 = v63;
      sub_1000583CC((uint64_t)&v68);
    }
    else if ((char *)v18 == v7)
    {
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v5;
      char v37 = (unsigned char *)(v6 + 40 * v17 + 16);
      if (*((char *)v5 + 39) < 0)
      {
        sub_100004CB8(v37, *((void **)v5 + 2), *((void *)v5 + 3));
      }
      else
      {
        long long v38 = *((_OWORD *)v5 + 1);
        *(double *)(v6 + 40 * v17 + 32) = v5[4];
        *(_OWORD *)char v37 = v38;
      }
      *(void *)(a1 + 32) = v7 + 40;
    }
    else
    {
      uint64_t v67 = v5;
      double v20 = (char *)(v18 + 40);
      __int16 v21 = v7 - 40;
      char v22 = v7;
      if ((unint64_t)v7 >= 0x28)
      {
        char v22 = v7;
        do
        {
          _OWORD *v22 = *(_OWORD *)v21;
          long long v23 = *((_OWORD *)v21 + 1);
          *((void *)v22 + 4) = *((void *)v21 + 4);
          v22[1] = v23;
          *((void *)v21 + 3) = 0;
          *((void *)v21 + 4) = 0;
          *((void *)v21 + 2) = 0;
          char v22 = (_OWORD *)((char *)v22 + 40);
          v21 += 40;
        }
        while (v21 < v7);
      }
      *(void *)(a1 + 32) = v22;
      if (v7 != v20)
      {
        uint64_t v24 = 0;
        unint64_t v25 = 0xCCCCCCCCCCCCCCCDLL * ((v7 - v20) >> 3);
        unint64_t v26 = v6 + 40 * v25 + 40 * v17;
        uint64_t v27 = -40 * v25;
        do
        {
          uint64_t v28 = v26 + v24;
          *(_OWORD *)&v7[v24 - 40] = *(_OWORD *)(v26 + v24 - 40);
          uint64_t v29 = (uint64_t)&v7[v24 - 24];
          if (v7[v24 - 1] < 0) {
            operator delete(*(void **)v29);
          }
          v24 -= 40;
          long long v30 = *(_OWORD *)(v28 - 24);
          *(void *)(v29 + 16) = *(void *)(v28 - 8);
          *(_OWORD *)uint64_t v29 = v30;
          *(unsigned char *)(v28 - 1) = 0;
          *(unsigned char *)(v28 - 24) = 0;
        }
        while (v27 != v24);
      }
      std::string v5 = v67;
      char v31 = v67;
      if (v18 <= (unint64_t)v67) {
        char v31 = &v67[5 * (*(void *)(a1 + 32) > (unint64_t)v67)];
      }
      *(_OWORD *)unint64_t v18 = *(_OWORD *)v31;
      std::string::operator=((std::string *)(v6 + 40 * v17 + 16), (const std::string *)(v31 + 2));
    }
    double v65 = *(double *)(a1 + 8);
    double v66 = *v5;
    if (v65 < 0.0 || v65 > v66) {
      *(double *)(a1 + 8) = v66;
    }
    if (*(double *)(a1 + 16) < v66) {
      *(double *)(a1 + 16) = v66;
    }
  }
  else
  {
    id v3 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      double v4 = (void *)(a1 + 160);
      if (*(char *)(a1 + 183) < 0) {
        double v4 = (void *)*v4;
      }
      *(_DWORD *)double buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)long long v74 = 2082;
      *(void *)&v74[2] = "";
      *(_WORD *)&v74[10] = 2081;
      *(void *)&v74[12] = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,updateWithInvalidArgs\", \"history\":%{private, location:escape_only}s}", buf, 0x1Cu);
    }
  }
}

void sub_100057438(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v10 + 32) = v11;
  _Unwind_Resume(exception_object);
}

void sub_100057460(char *a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = a1 + 48;
    if (a1[71] < 0) {
      id v3 = (void *)*v3;
    }
    double v4 = a1 + 160;
    if (a1[183] < 0) {
      double v4 = (void *)*v4;
    }
    *(_DWORD *)double buf = 68289539;
    int v14 = 0;
    __int16 v15 = 2082;
    double v16 = "";
    __int16 v17 = 2081;
    unint64_t v18 = v3;
    __int16 v19 = 2081;
    double v20 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,save\", \"filePath\":%{private, location:escape_only}s, \"debugName\":%{private, location:escape_only}s}", buf, 0x26u);
  }
  if (a1[184])
  {
    std::string v5 = a1 + 48;
    if (a1[71] < 0) {
      std::string v5 = *(char **)v5;
    }
    sub_10000DD48(&__p, "0002");
    sub_1000859E8((uint64_t)buf, v5, (uint64_t)&__p);
    if (SBYTE3(v12) < 0) {
      operator delete(__p);
    }
    if (v21) {
      operator new[]();
    }
    int64_t v8 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v9 = a1 + 160;
      if (a1[183] < 0) {
        __int16 v9 = (void *)*v9;
      }
      std::string __p = (void *)68289283;
      v11[0] = 2082;
      *(void *)&v11[1] = "";
      v11[5] = 2081;
      double v12 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,cannotOpenFileToSave\", \"history\":%{private, location:escape_only}s}", (uint8_t *)&__p, 0x1Cu);
    }
    sub_100085D74((uint64_t)buf);
  }
  else
  {
    uint64_t v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = a1 + 160;
      if (a1[183] < 0) {
        uint64_t v7 = (void *)*v7;
      }
      *(_DWORD *)double buf = 68289283;
      int v14 = 0;
      __int16 v15 = 2082;
      double v16 = "";
      __int16 v17 = 2081;
      unint64_t v18 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,#warning,deferSavingTillFirstUnlock\", \"history\":%{private, location:escape_only}s}", buf, 0x1Cu);
    }
    a1[185] = 1;
  }
}

void sub_1000577E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,char a25)
{
}

void sub_100057870()
{
}

void *sub_100057884(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F7800;
  result[1] = v3;
  return result;
}

uint64_t sub_1000578CC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F7800;
  a2[1] = v2;
  return result;
}

void sub_1000578F8(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  if (!v1[1])
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      std::string v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100057A14((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

uint64_t sub_1000579C8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100057A08()
{
}

void sub_100057A14(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = (const std::__fs::filesystem::path **)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      uint64_t v3 = (const std::__fs::filesystem::path **)*v3;
    }
    __int16 v4 = (void *)(a1 + 160);
    if (*(char *)(a1 + 183) < 0) {
      __int16 v4 = (void *)*v4;
    }
    *(_DWORD *)double buf = 68289539;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v13 = 2082;
    int v14 = "";
    __int16 v15 = 2081;
    double v16 = v3;
    __int16 v17 = 2081;
    unint64_t v18 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saEventHistory,load\", \"filePath\":%{private, location:escape_only}s, \"debugName\":%{private, location:escape_only}s}", buf, 0x26u);
  }
  if (!*(unsigned char *)(a1 + 184))
  {
    uint64_t v6 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    uint64_t v7 = (const std::__fs::filesystem::path **)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      uint64_t v7 = (const std::__fs::filesystem::path **)*v7;
    }
    *(_DWORD *)double buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v13 = 2082;
    int v14 = "";
    __int16 v15 = 2081;
    double v16 = v7;
    int64_t v8 = "{\"msg%{public}.0s\":\"#saEventHistory,load,#warning,deferLoadingTillFirstUnlock\", \"filePath\":%{private, loc"
         "ation:escape_only}s}";
    goto LABEL_27;
  }
  std::string v5 = (const std::__fs::filesystem::path **)(a1 + 48);
  if (*(char *)(a1 + 71) < 0)
  {
    if (!*(void *)(a1 + 56)) {
      return;
    }
  }
  else if (!*(unsigned char *)(a1 + 71))
  {
    return;
  }
  sub_10000DD48(buf, "0002");
  char v9 = sub_1000853F0();
  char v10 = v9;
  if (SBYTE3(v16) < 0)
  {
    operator delete(*(void **)buf);
    if (v10) {
LABEL_18:
    }
      operator new[]();
  }
  else if (v9)
  {
    goto LABEL_18;
  }
  uint64_t v11 = (const std::__fs::filesystem::path *)(a1 + 48);
  if (*(char *)(a1 + 71) < 0) {
    uint64_t v11 = *v5;
  }
  if (sub_100084D60(v11))
  {
    uint64_t v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      if (*(char *)(a1 + 71) < 0) {
        std::string v5 = (const std::__fs::filesystem::path **)*v5;
      }
      *(_DWORD *)double buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v13 = 2082;
      int v14 = "";
      __int16 v15 = 2081;
      double v16 = v5;
      int64_t v8 = "{\"msg%{public}.0s\":\"#saEventHistory,load,#warning,unabletToRemoveFile\", \"filePath\":%{private, location:escape_only}s}";
LABEL_27:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v8, buf, 0x1Cu);
    }
  }
}

void sub_100058030(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  sub_10008536C((uint64_t)&a35);
  operator delete[]();
}

void sub_100058150()
{
}

void *sub_100058164(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F7880;
  result[1] = v3;
  return result;
}

uint64_t sub_1000581AC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F7880;
  a2[1] = v2;
  return result;
}

__n128 sub_1000581D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!*(unsigned char *)(v1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 68289026;
      v9[1] = 0;
      __int16 v10 = 2082;
      uint64_t v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v9, 0x12u);
    }
    *(unsigned char *)uint64_t v1 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(v1 + 8) = _Q0;
    *(unsigned char *)(v1 + 152) = 0;
    sub_10000DBF0((uint64_t *)(v1 + 24));
  }
  return result;
}

uint64_t sub_1000582B8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000582F8()
{
}

uint64_t sub_100058304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a1;
    do
    {
      *(_OWORD *)a3 = *(_OWORD *)v5;
      uint64_t v6 = (void **)(a3 + 16);
      if (*(char *)(a3 + 39) < 0) {
        operator delete(*v6);
      }
      long long v7 = *(_OWORD *)(v5 + 16);
      *(void *)(a3 + 32) = *(void *)(v5 + 32);
      *(_OWORD *)uint64_t v6 = v7;
      *(unsigned char *)(v5 + 39) = 0;
      *(unsigned char *)(v5 + 16) = 0;
      a3 += 40;
      v5 += 40;
    }
    while (v5 != a2);
  }
  return a3;
}

void *sub_100058384(unint64_t a1)
{
  if (a1 >= 0x666666666666667) {
    sub_100004E00();
  }
  return operator new(40 * a1);
}

uint64_t sub_1000583CC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      uint64_t v4 = v2 - 40;
      *(void *)(a1 + 16) = v2 - 40;
      if (*(char *)(v2 - 1) < 0)
      {
        operator delete(*(void **)(v2 - 24));
        uint64_t v4 = *(void *)(a1 + 16);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100058434()
{
}

void *sub_100058448(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F7900;
  result[1] = v3;
  return result;
}

uint64_t sub_100058490(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F7900;
  a2[1] = v2;
  return result;
}

void sub_1000584BC(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  if (!v1[1])
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      uint64_t v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100057A14((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

uint64_t sub_10005858C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_1000585CC()
{
}

void sub_1000585DC()
{
}

void *sub_1000585F0(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F7980;
  result[1] = v3;
  return result;
}

uint64_t sub_100058638(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F7980;
  a2[1] = v2;
  return result;
}

__n128 sub_100058664(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!*(unsigned char *)(v1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 68289026;
      v9[1] = 0;
      __int16 v10 = 2082;
      uint64_t v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v9, 0x12u);
    }
    *(unsigned char *)uint64_t v1 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(v1 + 8) = _Q0;
    *(unsigned char *)(v1 + 152) = 0;
    sub_10000DBF0((uint64_t *)(v1 + 24));
  }
  return result;
}

uint64_t sub_100058744(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100058784()
{
}

BOOL sub_100058790(double *a1, double *a2)
{
  double v3 = *a1;
  std::string __p = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v4 = *(void *)(*(void *)&v3 + 96);
  if (!v4) {
    sub_100005520();
  }
  uint64_t v6 = a2 + 1;
  (*(void (**)(uint64_t, double *, void **))(*(void *)v4 + 48))(v4, a2 + 1, &__p);
  double v7 = *a2;
  double v8 = a1[1];
  if (*a2 < v8) {
    **((unsigned char **)a1 + 2) = 1;
  }
  char v9 = (double *)*((void *)a1 + 4);
  if (*v9 < v7)
  {
    *char v9 = v7;
    **((void **)a1 + 3) = *v6;
  }
  __int16 v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v11 = (void *)(*(void *)&v3 + 160);
    if (*(char *)(*(void *)&v3 + 183) < 0) {
      uint64_t v11 = (void *)*v11;
    }
    uint64_t v12 = *((void *)a1 + 1);
    double v13 = *a2;
    if (SHIBYTE(v18) < 0)
    {
      if (v17) {
        p_p = (const char *)__p;
      }
      else {
        p_p = "";
      }
    }
    else
    {
      p_p = (const char *)&__p;
      if (!HIBYTE(v18)) {
        p_p = "";
      }
    }
    *(_DWORD *)double buf = 68290307;
    int v20 = 0;
    __int16 v21 = 2082;
    char v22 = "";
    __int16 v23 = 2081;
    uint64_t v24 = v11;
    __int16 v25 = 2049;
    uint64_t v26 = v12;
    __int16 v27 = 2049;
    double v28 = v13;
    __int16 v29 = 2081;
    long long v30 = p_p;
    __int16 v31 = 1025;
    BOOL v32 = v7 < v8;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saEventHistory,cleanup\", \"history\":%{private, location:escape_only}s, \"before\":\"%{private}0.1f\", \"ts\":\"%{private}0.1f\", \"value\":%{private, location:escape_only}s, \"remove\":%{private}hhd}", buf, 0x40u);
  }
  if (SHIBYTE(v18) < 0) {
    operator delete(__p);
  }
  return v7 < v8;
}

void sub_100058974(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100058990(uint64_t a1, double a2)
{
  v48[0] = off_1000F7A00;
  v48[1] = a1;
  v48[3] = v48;
  v47[0] = off_1000F7A80;
  v47[1] = a1;
  v47[3] = v47;
  sub_100010BB4((uint64_t)v49, (uint64_t)v48, (uint64_t)v47);
  sub_10000F6D4(v47);
  sub_10000F6D4(v48);
  __int16 v43 = 0;
  uint64_t v4 = (void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  *(void *)&v41[0] = a1;
  v41[1] = a2;
  *(void *)&v41[2] = (char *)&v43 + 1;
  *(void *)&v41[3] = &v43;
  *(void *)&void v41[4] = &v42;
  unint64_t v42 = 0xBFF0000000000000;
  if (v5 != v6)
  {
    while (!sub_100059164(v41, (double *)v5))
    {
      v5 += 40;
      if (v5 == v6)
      {
        uint64_t v5 = v6;
        goto LABEL_13;
      }
    }
    if (v5 != v6)
    {
      for (uint64_t i = v5 + 40; i != v6; i += 40)
      {
        if (!sub_100059164(v41, (double *)i))
        {
          double v8 = *(double *)i;
          *(unsigned char *)(v5 + 8) = *(unsigned char *)(i + 8);
          *(double *)uint64_t v5 = v8;
          char v9 = (void **)(v5 + 16);
          if (*(char *)(v5 + 39) < 0) {
            operator delete(*v9);
          }
          long long v10 = *(_OWORD *)(i + 16);
          *(void *)(v5 + 32) = *(void *)(i + 32);
          *(_OWORD *)char v9 = v10;
          *(unsigned char *)(i + 39) = 0;
          *(unsigned char *)(i + 16) = 0;
          v5 += 40;
        }
      }
    }
  }
LABEL_13:
  uint64_t v11 = *(uint64_t **)(a1 + 32);
  if ((uint64_t *)v5 != v11)
  {
    sub_100010E5C((uint64_t)&v44, *(uint64_t **)(a1 + 32), v11, v5);
    uint64_t v5 = v12;
    for (uint64_t j = *(void *)(a1 + 32); j != v5; j -= 40)
    {
      if (*(char *)(j - 1) < 0) {
        operator delete(*(void **)(j - 24));
      }
    }
    *(void *)(a1 + 32) = v5;
  }
  if (*(void *)(a1 + 24) == v5)
  {
    unint64_t v14 = v42;
    char v15 = v43;
    sub_10000DD48(v35, "{}");
    unint64_t v37 = v14;
    char v38 = v15;
    if (SHIBYTE(v36) < 0)
    {
      sub_100004CB8(&__p, v35[0], (unint64_t)v35[1]);
    }
    else
    {
      long long __p = *(_OWORD *)v35;
      uint64_t v40 = v36;
    }
    unint64_t v16 = *(void *)(a1 + 40);
    unint64_t v17 = *(void *)(a1 + 32);
    if (v17 >= v16)
    {
      unint64_t v20 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v17 - *v4) >> 3);
      unint64_t v21 = v20 + 1;
      if (v20 + 1 > 0x666666666666666) {
        sub_1000050E8();
      }
      unint64_t v22 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v16 - *v4) >> 3);
      if (2 * v22 > v21) {
        unint64_t v21 = 2 * v22;
      }
      if (v22 >= 0x333333333333333) {
        unint64_t v23 = 0x666666666666666;
      }
      else {
        unint64_t v23 = v21;
      }
      uint64_t v46 = a1 + 40;
      if (v23) {
        uint64_t v24 = (char *)sub_1000112D4(a1 + 40, v23);
      }
      else {
        uint64_t v24 = 0;
      }
      uint64_t v25 = (uint64_t)&v24[40 * v20];
      uint64_t v44 = v24;
      *(void *)int v45 = v25;
      *(void *)&v45[16] = &v24[40 * v23];
      unint64_t v26 = v37;
      *(unsigned char *)(v25 + 8) = v38;
      *(void *)uint64_t v25 = v26;
      long long v27 = __p;
      *(void *)(v25 + 32) = v40;
      *(_OWORD *)(v25 + 16) = v27;
      uint64_t v40 = 0;
      long long __p = 0uLL;
      *(void *)&v45[8] = v25 + 40;
      sub_10001131C(a1 + 40, *(void *)(a1 + 32), *(void *)(a1 + 32), *(void *)(a1 + 24), *(void *)(a1 + 24), v25, v25);
      uint64_t v28 = *(void *)(a1 + 40);
      uint64_t v34 = *(void *)&v45[8];
      long long v29 = *(_OWORD *)&v45[8];
      long long v30 = *(_OWORD *)(a1 + 24);
      *(void *)(a1 + 24) = v31;
      *(_OWORD *)int v45 = v30;
      *(_OWORD *)(a1 + 32) = v29;
      *(void *)&v45[16] = v28;
      uint64_t v44 = (char *)v30;
      sub_100011560((uint64_t)&v44);
      int v32 = SHIBYTE(v40);
      *(void *)(a1 + 32) = v34;
      if (v32 < 0) {
        operator delete((void *)__p);
      }
    }
    else
    {
      unint64_t v18 = v37;
      *(unsigned char *)(v17 + 8) = v38;
      *(void *)unint64_t v17 = v18;
      long long v19 = __p;
      *(void *)(v17 + 32) = v40;
      *(_OWORD *)(v17 + 16) = v19;
      uint64_t v40 = 0;
      long long __p = 0uLL;
      *(void *)(a1 + 32) = v17 + 40;
    }
    if (SHIBYTE(v36) < 0) {
      operator delete(v35[0]);
    }
  }
  if (HIBYTE(v43))
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
      if (!*(unsigned char *)(a1 + 71)) {
        return sub_1000115F0(v49);
      }
      goto LABEL_44;
    }
    if (*(void *)(a1 + 56)) {
LABEL_44:
    }
      sub_10000FCDC((char *)a1);
  }
  return sub_1000115F0(v49);
}

void sub_100058D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_1000115F0((void *)(v38 - 120));
  _Unwind_Resume(a1);
}

void sub_100058E08()
{
}

void *sub_100058E1C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F7A00;
  result[1] = v3;
  return result;
}

uint64_t sub_100058E64(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F7A00;
  a2[1] = v2;
  return result;
}

void sub_100058E90(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  if (!v1[1])
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      uint64_t v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100010298((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

uint64_t sub_100058F60(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100058FA0()
{
}

void sub_100058FB0()
{
}

void *sub_100058FC4(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F7A80;
  result[1] = v3;
  return result;
}

uint64_t sub_10005900C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F7A80;
  a2[1] = v2;
  return result;
}

__n128 sub_100059038(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!*(unsigned char *)(v1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 68289026;
      v9[1] = 0;
      __int16 v10 = 2082;
      uint64_t v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v9, 0x12u);
    }
    *(unsigned char *)uint64_t v1 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(v1 + 8) = _Q0;
    *(unsigned char *)(v1 + 152) = 0;
    sub_10000DBF0((uint64_t *)(v1 + 24));
  }
  return result;
}

uint64_t sub_100059118(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100059158()
{
}

BOOL sub_100059164(double *a1, double *a2)
{
  double v3 = *a1;
  long long __p = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v4 = *(void *)(*(void *)&v3 + 96);
  if (!v4) {
    sub_100005520();
  }
  uint64_t v6 = a2 + 1;
  (*(void (**)(uint64_t, double *, void **))(*(void *)v4 + 48))(v4, a2 + 1, &__p);
  double v7 = *a2;
  double v8 = a1[1];
  if (*a2 < v8) {
    **((unsigned char **)a1 + 2) = 1;
  }
  char v9 = (double *)*((void *)a1 + 4);
  if (*v9 < v7)
  {
    *char v9 = v7;
    **((unsigned char **)a1 + 3) = *v6;
  }
  __int16 v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v11 = (void *)(*(void *)&v3 + 160);
    if (*(char *)(*(void *)&v3 + 183) < 0) {
      uint64_t v11 = (void *)*v11;
    }
    uint64_t v12 = *((void *)a1 + 1);
    double v13 = *a2;
    if (SHIBYTE(v18) < 0)
    {
      if (v17) {
        p_p = (const char *)__p;
      }
      else {
        p_p = "";
      }
    }
    else
    {
      p_p = (const char *)&__p;
      if (!HIBYTE(v18)) {
        p_p = "";
      }
    }
    *(_DWORD *)double buf = 68290307;
    int v20 = 0;
    __int16 v21 = 2082;
    unint64_t v22 = "";
    __int16 v23 = 2081;
    uint64_t v24 = v11;
    __int16 v25 = 2049;
    uint64_t v26 = v12;
    __int16 v27 = 2049;
    double v28 = v13;
    __int16 v29 = 2081;
    long long v30 = p_p;
    __int16 v31 = 1025;
    BOOL v32 = v7 < v8;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#saEventHistory,cleanup\", \"history\":%{private, location:escape_only}s, \"before\":\"%{private}0.1f\", \"ts\":\"%{private}0.1f\", \"value\":%{private, location:escape_only}s, \"remove\":%{private}hhd}", buf, 0x40u);
  }
  if (SHIBYTE(v18) < 0) {
    operator delete(__p);
  }
  return v7 < v8;
}

void sub_100059348(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100059368()
{
}

void *sub_10005937C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F7B00;
  result[1] = v3;
  return result;
}

uint64_t sub_1000593C4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F7B00;
  a2[1] = v2;
  return result;
}

void sub_1000593F0(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  if (!v1[1])
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      uint64_t v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100057A14((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

uint64_t sub_1000594C0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100059500()
{
}

void sub_100059510()
{
}

void *sub_100059524(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F7B80;
  result[1] = v3;
  return result;
}

uint64_t sub_10005956C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F7B80;
  a2[1] = v2;
  return result;
}

__n128 sub_100059598(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!*(unsigned char *)(v1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 68289026;
      v9[1] = 0;
      __int16 v10 = 2082;
      uint64_t v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v9, 0x12u);
    }
    *(unsigned char *)uint64_t v1 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(v1 + 8) = _Q0;
    *(unsigned char *)(v1 + 152) = 0;
    sub_10000DBF0((uint64_t *)(v1 + 24));
  }
  return result;
}

uint64_t sub_100059678(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000596B8()
{
}

uint64_t *sub_1000596C4(uint64_t **a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    uint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        double v8 = (uint64_t **)v5;
        uint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        uint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    double v8 = a1 + 1;
LABEL_10:
    __int16 v10 = (uint64_t *)operator new(0x28uLL);
    void v10[4] = *a3;
    sub_100015DE4(a1, (uint64_t)v8, v6, v10);
    return v10;
  }
  return (uint64_t *)v8;
}

void sub_100059784()
{
}

void *sub_100059798(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F7C00;
  result[1] = v3;
  return result;
}

uint64_t sub_1000597E0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F7C00;
  a2[1] = v2;
  return result;
}

void sub_10005980C(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  if (!v1[1])
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      uint64_t v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,init,load\"}", (uint8_t *)v3, 0x12u);
    }
    sub_100057A14((uint64_t)v1);
    unsigned char *v1 = 1;
  }
}

uint64_t sub_1000598DC(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10005991C()
{
}

void sub_10005992C()
{
}

void *sub_100059940(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F7C80;
  result[1] = v3;
  return result;
}

uint64_t sub_100059988(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F7C80;
  a2[1] = v2;
  return result;
}

__n128 sub_1000599B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!*(unsigned char *)(v1 + 1) && !*(unsigned char *)(v1 + 185))
  {
    uint64_t v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 68289026;
      v9[1] = 0;
      __int16 v10 = 2082;
      uint64_t v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#raii,destroy,clear\"}", (uint8_t *)v9, 0x12u);
    }
    *(unsigned char *)uint64_t v1 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(v1 + 8) = _Q0;
    *(unsigned char *)(v1 + 152) = 0;
    sub_10000DBF0((uint64_t *)(v1 + 24));
  }
  return result;
}

uint64_t sub_100059A94(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100059AD4()
{
}

uint64_t sub_100059AE0(uint64_t a1, void **a2, SAPlatformInfo **a3)
{
  uint64_t v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)double buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#alertdisplay,handleBleAlert\"}", buf, 0x12u);
  }
  if (*a3 && *a2)
  {
    long long v29 = 0u;
    *(_OWORD *)__int16 v27 = 0u;
    memset(v28, 0, sizeof(v28));
    *(_OWORD *)__int16 v25 = 0u;
    long long v26 = 0u;
    long long v23 = 0u;
    *(_OWORD *)uint64_t v24 = 0u;
    memset(buf, 0, sizeof(buf));
    __asm { FMOV            V0.2D, #10.0 }
    long long v31 = _Q0;
    __asm { FMOV            V0.2D, #-1.0 }
    long long v32 = _Q0;
    long long v33 = _Q0;
    uint64_t v30 = 0;
    unint64_t v34 = 0xBFF0000000000000;
    double v13 = sub_10006B474();
    sub_10002B120((uint64_t)v13, (std::string *)buf);
    if (sub_100031A6C((uint64_t)*a3, (void **)(a1 + 176), (uint64_t)buf, 0))
    {
      unint64_t v14 = SALogObjectGeneral;
      uint64_t v15 = 0;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(void *)int v20 = 68289026;
        *(_WORD *)&v20[8] = 2082;
        *(void *)&v20[10] = "";
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#alerthandler,handleBleAlert,duplicateAlert\"}", v20, 0x12u);
        uint64_t v15 = 0;
      }
    }
    else
    {
      sub_100031890(*a3, (void **)(a1 + 176));
      v20[0] = 0;
      *(_OWORD *)&void v20[4] = xmmword_1000B2340;
      *(_OWORD *)&v20[20] = xmmword_1000B2350;
      *(void *)&v20[36] = &_mh_execute_header;
      memset(&v20[44], 0, 24);
      int v21 = 0;
      uint64_t v17 = sub_10006B474();
      long long v18 = *((_OWORD *)v17 + 26);
      *(_OWORD *)int v20 = *((_OWORD *)v17 + 25);
      *(_OWORD *)&v20[16] = v18;
      *(_OWORD *)&unsigned char v20[32] = *((_OWORD *)v17 + 27);
      if (v17 + 400 != v20) {
        sub_1000174C8(&v20[48], *((uint64_t **)v17 + 56), *((uint64_t **)v17 + 57), (uint64_t)(*((void *)v17 + 57) - *((void *)v17 + 56)) >> 3);
      }
      uint64_t v15 = sub_10006F478(*a2, a1);
      if (*(void *)&v20[48])
      {
        *(void *)&v20[56] = *(void *)&v20[48];
        operator delete(*(void **)&v20[48]);
      }
    }
    *(void *)int v20 = &v29;
    sub_100005360((void ***)v20);
    *(void *)int v20 = (char *)v28 + 8;
    sub_100005360((void ***)v20);
    if (SBYTE7(v28[0]) < 0) {
      operator delete(v27[0]);
    }
    if (SHIBYTE(v26) < 0) {
      operator delete(v25[1]);
    }
    if (SHIBYTE(v25[0]) < 0) {
      operator delete(v24[0]);
    }
    if (SHIBYTE(v23) < 0) {
      operator delete(*(void **)&buf[24]);
    }
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }
  else
  {
    unint64_t v16 = SALogObjectGeneral;
    uint64_t v15 = 0;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)double buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#alertdisplay,handleBleAlert,invalid parser or displayAlert\"}", buf, 0x12u);
      return 0;
    }
  }
  return v15;
}

void sub_100059E0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  if (__p) {
    operator delete(__p);
  }
  sub_100032B20((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_100059E38(void *a1)
{
  id v1 = a1;
  int v2 = *((unsigned __int8 *)sub_10003E368() + 177);
  uint64_t v3 = SALogObjectGeneral;
  BOOL v4 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      int v5 = 68289026;
      int v6 = 0;
      __int16 v7 = 2082;
      double v8 = "";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pull,create,test\"}", (uint8_t *)&v5, 0x12u);
    }
    operator new();
  }
  if (v4)
  {
    int v5 = 68289026;
    int v6 = 0;
    __int16 v7 = 2082;
    double v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#pull,create,prod\"}", (uint8_t *)&v5, 0x12u);
  }
  operator new();
}

void sub_100059FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10005A064(void *a1)
{
  id v1 = a1;
  if (*((unsigned char *)sub_10003E368() + 243)) {
    operator new();
  }
  operator new();
}

void sub_10005A19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_10005A2D8((uint64_t *)va);
  operator delete();
}

uint64_t sub_10005A218(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10005A2B4()
{
}

void *sub_10005A2D8(void *a1)
{
  int v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_10005A35C(uint64_t a1)
{
  return a1;
}

void sub_10005A388(uint64_t a1)
{
  operator delete();
}

uint64_t sub_10005A3D8(uint64_t a1, void *a2, double a3, double a4, double a5)
{
  id v9 = a2;
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = (unint64_t)a3;
  *(_OWORD *)(a1 + 32) = 0u;
  *(double *)(a1 + 16) = a4;
  *(double *)(a1 + 24) = a5;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  *(_DWORD *)(a1 + 104) = 1065353216;
  sub_100051A68(a1 + 112);
  *(_WORD *)(a1 + 2040) = 0;
  if (a3 <= 0.0)
  {
    uint64_t v10 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)double buf = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      long long v19 = "";
      uint64_t v11 = "{\"msg%{public}.0s\":\"#rm,initFailed,invalidRollingPeriod\"}";
      goto LABEL_10;
    }
  }
  else if (a4 >= 0.0)
  {
    if (a5 >= 0.0)
    {
      unint64_t v14 = SALogObjectGeneral;
      BOOL v15 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
      if (a4 + a5 <= a3)
      {
        if (v15)
        {
          *(_DWORD *)double buf = 68289026;
          int v17 = 0;
          __int16 v18 = 2082;
          long long v19 = "";
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,initializing\"}", buf, 0x12u);
        }
        operator new();
      }
      if (v15)
      {
        *(_DWORD *)double buf = 68289026;
        int v17 = 0;
        __int16 v18 = 2082;
        long long v19 = "";
        uint64_t v11 = "{\"msg%{public}.0s\":\"#rm,initFailed,delayTooLong\"}";
        uint64_t v12 = v14;
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v10 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)double buf = 68289026;
        int v17 = 0;
        __int16 v18 = 2082;
        long long v19 = "";
        uint64_t v11 = "{\"msg%{public}.0s\":\"#rm,initFailed,invalidRandomDelay\"}";
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v10 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)double buf = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      long long v19 = "";
      uint64_t v11 = "{\"msg%{public}.0s\":\"#rm,initFailed,invalidFixedDelay\"}";
LABEL_10:
      uint64_t v12 = v10;
LABEL_11:
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v11, buf, 0x12u);
    }
  }

  return a1;
}

void sub_10005AA78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  sub_10005E048(*(void **)(v40 + 112));
  sub_10005AC3C(&a36);
  sub_100053BCC(v41);
  sub_10005CF40(a12);
  uint64_t v43 = *(void *)(v36 + 64);
  *(void *)(v36 + 64) = 0;
  if (v43) {
    (*(void (**)(uint64_t))(*(void *)v43 + 8))(v43);
  }
  sub_10005B500(a10, 0);
  sub_10005B4B0(v38, 0);
  uint64_t v44 = *(void *)(v36 + 40);
  *(void *)(v36 + 40) = 0;
  if (v44) {
    (*(void (**)(uint64_t))(*(void *)v44 + 8))(v44);
  }
  uint64_t v45 = *v39;
  uint64_t *v39 = 0;
  if (v45) {
    (*(void (**)(uint64_t))(*(void *)v45 + 8))(v45);
  }

  _Unwind_Resume(a1);
}

void *sub_10005AC3C(void *a1)
{
  sub_10005CEBC(a1 + 8);
  sub_10005CDB4(a1 + 4);

  return sub_10005CE38(a1);
}

void sub_10005AC80(uint64_t a1)
{
  int v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)double buf = 68289026;
    int v10 = 0;
    __int16 v11 = 2082;
    uint64_t v12 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,cleanup\"}", buf, 0x12u);
  }
  uint64_t v3 = (uint64_t)((double)((unint64_t)(uint64_t)(double)time(0) / *(void *)(a1 + 8) * *(void *)(a1 + 8))
               + -978307200.0);
  uint64_t v4 = v3 - (unint64_t)*((double *)sub_10003E368() + 34);
  uint64_t v5 = v3 - (unint64_t)*((double *)sub_10003E368() + 35);
  sub_1000556F4(a1 + 112, (double)v4);
  sub_1000559F4(a1 + 112, (double)v5);
  dispatch_time_t v6 = dispatch_time(0xFFFFFFFFFFFFFFFELL, 10800000000000);
  __int16 v7 = *(NSObject **)a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10005CA10;
  block[3] = &unk_1000F5EA8;
  void block[4] = a1;
  dispatch_after(v6, v7, block);
}

void sub_10005AE14(uint64_t a1)
{
  if (*((_DWORD *)sub_10003E368() + 66))
  {
    uint64_t v2 = (uint64_t)(double)time(0);
    double v3 = (double)(uint64_t)(*(void *)(a1 + 8) + (unint64_t)v2 / *(void *)(a1 + 8) * *(void *)(a1 + 8));
    uint64_t v4 = (uint64_t)(*(double *)(a1 + 16) + v3);
    uint64_t v5 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)double buf = 68290050;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)unint64_t v16 = 2082;
      *(void *)&v16[2] = "";
      *(_WORD *)&unsigned char v16[10] = 2050;
      *(double *)&v16[12] = (double)v2;
      *(_WORD *)&v16[20] = 2050;
      *(double *)&v16[22] = v3;
      *(_WORD *)&v16[30] = 2050;
      double v17 = (double)v4;
      __int16 v18 = 2050;
      double v19 = (double)(v4 - v2);
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,#test,nextFireDelay\", \"now\":\"%{public}0.1f\", \"endOfDay\":\"%{public}0.1f\", \"nextExpiry\":\"%{public}0.1f\", \"delay\":\"%{public}0.1f\"}", buf, 0x3Au);
    }
    dispatch_time_t v6 = dispatch_time(0xFFFFFFFFFFFFFFFELL, (uint64_t)((double)(v4 - v2) * 1000000000.0));
    __int16 v7 = *(NSObject **)a1;
    *(void *)double buf = _NSConcreteStackBlock;
    *(void *)unint64_t v16 = 3221225472;
    *(void *)&v16[8] = sub_10005B614;
    *(void *)&v16[16] = &unk_1000F5EA8;
    *(void *)&v16[24] = a1;
    dispatch_after(v6, v7, buf);
  }
  else
  {
    xpc_object_t v8 = xpc_dictionary_create(0, 0, 0);
    if (v8)
    {
      unint64_t v9 = (uint64_t)(double)time(0);
      unint64_t v10 = *(void *)(a1 + 8);
      uint64_t v11 = (uint64_t)(*(double *)(a1 + 16) + (double)(uint64_t)(v10 + v9 / v10 * v10));
      uint64_t v12 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)double buf = 68290050;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)unint64_t v16 = 2082;
        *(void *)&v16[2] = "";
        *(_WORD *)&unsigned char v16[10] = 2050;
        *(double *)&v16[12] = (double)(uint64_t)v9;
        *(_WORD *)&v16[20] = 2050;
        *(double *)&v16[22] = (double)(uint64_t)(v10 + v9 / v10 * v10);
        *(_WORD *)&v16[30] = 2050;
        double v17 = (double)v11;
        __int16 v18 = 2050;
        double v19 = (double)(uint64_t)(v11 - v9);
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,nextFireDelay\", \"now\":\"%{public}0.1f\", \"endOfDay\":\"%{public}0.1f\", \"nextExpiry\":\"%{public}0.1f\", \"delay\":\"%{public}0.1f\"}", buf, 0x3Au);
        unint64_t v10 = *(void *)(a1 + 8);
      }
      xpc_dictionary_set_int64(v8, XPC_ACTIVITY_INTERVAL, v10);
      xpc_dictionary_set_BOOL(v8, XPC_ACTIVITY_REPEATING, 1);
      xpc_dictionary_set_int64(v8, XPC_ACTIVITY_DELAY, (uint64_t)(double)(uint64_t)(v11 - v9));
      xpc_dictionary_set_int64(v8, XPC_ACTIVITY_RANDOM_INITIAL_DELAY, (uint64_t)*(double *)(a1 + 24));
      xpc_dictionary_set_int64(v8, XPC_ACTIVITY_GRACE_PERIOD, 30);
      xpc_dictionary_set_string(v8, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_MAINTENANCE);
      xpc_dictionary_set_BOOL(v8, XPC_ACTIVITY_ALLOW_BATTERY, 0);
      xpc_dictionary_set_BOOL(v8, XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY, 1);
      handler[0] = _NSConcreteStackBlock;
      handler[1] = 3221225472;
      handler[2] = sub_10005BDD0;
      handler[3] = &unk_1000F5DD8;
      handler[4] = a1;
      xpc_activity_register((const char *)[@"com.apple.safetyalerts.rm" UTF8String], v8, handler);
    }
    else
    {
      double v13 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)double buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)unint64_t v16 = 2082;
        *(void *)&v16[2] = "";
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,#warning,cantCreateXpcDictionary\"}", buf, 0x12u);
      }
    }
  }
}

void sub_10005B250(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10005B26C(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v10[0] = 68289026;
    v10[1] = 0;
    __int16 v11 = 2082;
    uint64_t v12 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,~SARollingMetrics\"}", (uint8_t *)v10, 0x12u);
  }
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3)
  {
    *(void *)(a1 + 40) = 0;
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4)
  {
    *(void *)(a1 + 32) = 0;
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5)
  {
    *(void *)(a1 + 64) = 0;
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  if (*(void *)(a1 + 48)) {
    sub_10005B4B0((uint64_t *)(a1 + 48), 0);
  }
  if (*(void *)(a1 + 56)) {
    sub_10005B500((uint64_t *)(a1 + 56), 0);
  }
  sub_100053BCC(a1 + 112);
  sub_10005CF40(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  sub_10005B500((uint64_t *)(a1 + 56), 0);
  sub_10005B4B0((uint64_t *)(a1 + 48), 0);
  uint64_t v7 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }

  return a1;
}

uint64_t sub_10005B4B0(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1000616E8(result);
    operator delete();
  }
  return result;
}

uint64_t sub_10005B500(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1000723DC(result);
    operator delete();
  }
  return result;
}

void sub_10005B550(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    uint64_t v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,onInitCompleted\"}", (uint8_t *)v4, 0x12u);
  }
  uint64_t v3 = *(void *)(a1 + 56);
  if (v3) {
    sub_1000725FC(v3);
  }
}

uint64_t sub_10005B614(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_10005B650(v1);

  return sub_10005AE14(v1);
}

void sub_10005B650(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(void *)double buf = 68289026;
    LOWORD(v39) = 2082;
    *(void *)((char *)&v39 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,onActivityTriggered\"}", buf, 0x12u);
  }
  if (!*(unsigned char *)(a1 + 2040))
  {
    __int16 v18 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(void *)double buf = 68289026;
    LOWORD(v39) = 2082;
    *(void *)((char *)&v39 + 2) = "";
    double v19 = "{\"msg%{public}.0s\":\"#rm,#warning,device not unlocked since boot\"}";
    goto LABEL_26;
  }
  uint64_t v3 = sub_10004EDD0();
  uint64_t v4 = *((void *)v3 + 24);
  *(void *)double buf = _NSConcreteStackBlock;
  *(void *)&long long v39 = 3221225472;
  *((void *)&v39 + 1) = sub_1000502CC;
  uint64_t v40 = &unk_1000F5EA8;
  v41[0] = v3;
  dispatch_async(v4, buf);
  if (!*(unsigned char *)(a1 + 2041))
  {
    __int16 v18 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(void *)double buf = 68289026;
    LOWORD(v39) = 2082;
    *(void *)((char *)&v39 + 2) = "";
    double v19 = "{\"msg%{public}.0s\":\"#rm,#warning,country not supported\"}";
    goto LABEL_26;
  }
  uint64_t v6 = SASettings::instance(v5);
  uint64_t v7 = (SASettings *)(*(uint64_t (**)(uint64_t))(*(void *)v6 + 32))(v6);
  if (!v7
    || (uint64_t v8 = SASettings::instance(v7),
        unint64_t v9 = (SASettings *)(*(uint64_t (**)(uint64_t))(*(void *)v8 + 40))(v8),
        (v9 & 1) == 0))
  {
    __int16 v18 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(void *)double buf = 68289026;
    LOWORD(v39) = 2082;
    *(void *)((char *)&v39 + 2) = "";
    double v19 = "{\"msg%{public}.0s\":\"#rm,#warning,phoneAnalytics Or SLC is restricted\"}";
    goto LABEL_26;
  }
  uint64_t v10 = SASettings::instance(v9);
  if (((*(uint64_t (**)(uint64_t))(*(void *)v10 + 48))(v10) & 1) == 0)
  {
    __int16 v18 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(void *)double buf = 68289026;
    LOWORD(v39) = 2082;
    *(void *)((char *)&v39 + 2) = "";
    double v19 = "{\"msg%{public}.0s\":\"#rm,#warning,emergencyAlert is disabled\"}";
LABEL_26:
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v19, buf, 0x12u);
    return;
  }
  if (!*(void *)(a1 + 40)) {
    goto LABEL_49;
  }
  uint64_t v11 = (uint64_t)(double)time(0);
  BOOL v12 = sub_1000553D4(a1 + 112, (double)(unint64_t)(v11 - *(void *)(a1 + 8)), (double)v11) - 1 < 2;
  int v13 = sub_100055564(a1 + 112, (double)(unint64_t)(v11 - *(void *)(a1 + 8)), (double)v11) - 1 < 2
     || v12;
  unint64_t v14 = sub_10003E368();
  int v15 = *((_DWORD *)v14 + 75);
  if (SACommonUtils::isLivabiltyEnabled((SACommonUtils *)v14)) {
    int v16 = 100;
  }
  else {
    int v16 = v15;
  }
  if (v16 < 0) {
    int v16 = *((_DWORD *)sub_10006B474() + 4);
  }
  if (v16 == 100)
  {
    double v17 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(void *)double buf = 68289026;
      LOWORD(v39) = 2082;
      *(void *)((char *)&v39 + 2) = "";
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,isParticipatingInEfficacyMetrics,true,allParticipating\"}", buf, 0x12u);
    }
    goto LABEL_48;
  }
  int v20 = sub_10003E368();
  int v21 = *((_DWORD *)v20 + 59);
  if (SACommonUtils::isLivabiltyEnabled((SACommonUtils *)v20)) {
    int v22 = 100;
  }
  else {
    int v22 = v21;
  }
  if (v22 < 0) {
    int v22 = *((_DWORD *)sub_10006B474() + 3);
  }
  uint32_t v23 = v16 - v22;
  if (v16 >= v22)
  {
    if (v13)
    {
      uint64_t v24 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v25 = 1;
        goto LABEL_45;
      }
LABEL_48:
      sub_10005C108(a1, 0);
      uint64_t v26 = *(void *)(a1 + 40);
      v32[0] = _NSConcreteStackBlock;
      v32[1] = 3221225472;
      void v32[2] = sub_10005C1D0;
      v32[3] = &unk_1000F5DF8;
      void v32[4] = a1;
      unint64_t v37 = 0;
      v36[0] = off_1000F5E28;
      v36[1] = objc_retainBlock(v32);
      unint64_t v37 = v36;
      sub_1000450FC(v26, (uint64_t)v36);
      sub_100021E70(v36);
      uint64_t v27 = *(void *)(a1 + 40);
      v31[0] = _NSConcreteStackBlock;
      v31[1] = 3221225472;
      v31[2] = sub_10005C5CC;
      v31[3] = &unk_1000F5DF8;
      v31[4] = a1;
      uint64_t v35 = 0;
      v34[0] = off_1000F5E28;
      v34[1] = objc_retainBlock(v31);
      uint64_t v35 = v34;
      (*(void (**)(uint64_t, void *))(*(void *)v27 + 16))(v27, v34);
      sub_100021E70(v34);
      goto LABEL_49;
    }
  }
  else
  {
    if (!v13)
    {
LABEL_42:
      BOOL v25 = 0;
      goto LABEL_44;
    }
    uint32_t v23 = vcvtmd_s64_f64((double)v16 * 100.0 / (double)v22);
  }
  if (v23 > 0x64) {
    goto LABEL_42;
  }
  BOOL v25 = arc4random_uniform(0x64u) <= v23;
LABEL_44:
  uint64_t v24 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
LABEL_45:
    *(void *)double buf = 68290051;
    LOWORD(v39) = 2082;
    *(void *)((char *)&v39 + 2) = "";
    WORD5(v39) = 1025;
    HIDWORD(v39) = v16;
    LOWORD(v40) = 1025;
    *(_DWORD *)((char *)&v40 + 2) = v22;
    HIWORD(v40) = 1025;
    LODWORD(v41[0]) = v13;
    WORD2(v41[0]) = 1025;
    *(_DWORD *)((char *)v41 + 6) = v25;
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,isParticipatingInEfficacyMetrics,\", \"efficacyMetricParticipationPercentage\":%{private}d, \"pushParticipationPercentage\":%{private}d, \"isSubscribed\":%{private}hhd, \"isParticipating\":%{private}hhd}", buf, 0x2Au);
    if (!v25) {
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v25) {
    goto LABEL_48;
  }
LABEL_49:
  if (*(void *)(a1 + 64))
  {
    sub_10005C108(a1, 1);
    uint64_t v28 = *(void *)(a1 + 64);
    v33[0] = off_1000F7FF8;
    void v33[3] = v33;
    (*(void (**)(uint64_t, void *))(*(void *)v28 + 16))(v28, v33);
    sub_100021E70(v33);
  }
  time_t v29 = time(0);
  uint64_t v30 = *(void *)(a1 + 32);
  if (v30) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v30 + 16))(v30, (uint64_t)((double)((unint64_t)(uint64_t)(double)v29 / *(void *)(a1 + 8) * *(void *)(a1 + 8))+ -978307200.0)- *(void *)(a1 + 8));
  }
}

void sub_10005BD9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  sub_100021E70(va);
  _Unwind_Resume(a1);
}

void sub_10005BDD0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(NSObject ***)(a1 + 32);
  uint64_t v3 = a2;
  uint64_t v4 = v3;
  if (!v3)
  {
    uint64_t v8 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_15;
    }
    *(_DWORD *)double buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v15) = 2082;
    *(void *)((char *)&v15 + 2) = "";
    unint64_t v9 = "{\"msg%{public}.0s\":\"#rm,#warning,process_xpcActivity,activity is nil\"}";
LABEL_13:
    uint64_t v10 = buf;
    goto LABEL_14;
  }
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  uint64_t v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)double buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v15) = 2082;
    *(void *)((char *)&v15 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,process_xpcActivity\"}", buf, 0x12u);
  }
  if (!state) {
    goto LABEL_15;
  }
  if (state != 2)
  {
    uint64_t v8 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_15;
    }
    *(_DWORD *)double buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v15) = 2082;
    *(void *)((char *)&v15 + 2) = "";
    unint64_t v9 = "{\"msg%{public}.0s\":\"#rm,#warning,process_xpcActivity,unexpectedXpcActivity\"}";
    goto LABEL_13;
  }
  uint64_t v7 = *v2;
  *(void *)double buf = _NSConcreteStackBlock;
  *(void *)&long long v15 = 3221225472;
  *((void *)&v15 + 1) = sub_10005C03C;
  int v16 = &unk_1000F5EA8;
  double v17 = v2;
  dispatch_async(v7, buf);
  if (!xpc_activity_set_state(v4, 5))
  {
    uint64_t v8 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v11[0] = 68289026;
      v11[1] = 0;
      __int16 v12 = 2082;
      int v13 = "";
      unint64_t v9 = "{\"msg%{public}.0s\":\"#rm,#warning,process_xpcActivity,failedToSetState\"}";
      uint64_t v10 = (uint8_t *)v11;
LABEL_14:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v9, v10, 0x12u);
    }
  }
LABEL_15:
}

void sub_10005C024(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10005C03C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_10005B650(v1);
  sub_10005AE14(v1);
}

uint64_t sub_10005C0CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_10005B650(v1);

  return sub_10005AE14(v1);
}

void sub_10005C108(uint64_t a1, int a2)
{
  if (a2 == 1)
  {
    __int16 v5 = (uint64_t *)(a1 + 72);
    int v8 = 1;
  }
  else
  {
    if (a2) {
      goto LABEL_6;
    }
    int v8 = 0;
    uint64_t v3 = sub_10005DBEC((uint64_t *)(a1 + 72), 0, &v8);
    sub_10005E15C(v3 + 3, 1, 1);
    int v8 = 0;
    uint64_t v4 = sub_10005DBEC((uint64_t *)(a1 + 72), 0, &v8);
    sub_10005E15C(v4 + 3, 0, 0);
    int v8 = 0;
    __int16 v5 = (uint64_t *)(a1 + 72);
    a2 = 0;
  }
  uint64_t v6 = sub_10005DBEC(v5, a2, &v8);
  sub_10005E15C(v6 + 3, 2, 2);
LABEL_6:
  uint64_t v7 = *(uint64_t **)(a1 + 88);

  sub_10005C6F8(v7);
}

void sub_10005C1D0(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v4 = SALogObjectGeneral;
  BOOL v5 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (a2)
  {
    if (v5)
    {
      int v6 = 68289026;
      int v7 = 0;
      __int16 v8 = 2082;
      unint64_t v9 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,#downloadManifestCompleted\"}", (uint8_t *)&v6, 0x12u);
    }
    sub_10005C2FC((uint64_t)v3, 1);
    sub_10005C42C(v3);
  }
  else if (v5)
  {
    int v6 = 68289026;
    int v7 = 0;
    __int16 v8 = 2082;
    unint64_t v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,#warning,downloadManifestFailed\"}", (uint8_t *)&v6, 0x12u);
  }
}

void sub_10005C2FC(uint64_t a1, int a2)
{
  uint64_t v2 = *(void **)(a1 + 88);
  if (v2)
  {
    do
    {
      int v6 = v2 + 4;
      BOOL v5 = (uint64_t *)v2[4];
      if (v5)
      {
        int v7 = v2 + 4;
        uint64_t v8 = v2[4];
        do
        {
          int v9 = *(_DWORD *)(v8 + 28);
          BOOL v10 = v9 < a2;
          if (v9 >= a2) {
            uint64_t v11 = (uint64_t *)v8;
          }
          else {
            uint64_t v11 = (uint64_t *)(v8 + 8);
          }
          if (!v10) {
            int v7 = (void *)v8;
          }
          uint64_t v8 = *v11;
        }
        while (*v11);
        if (v7 != v6 && *((_DWORD *)v7 + 7) <= a2)
        {
          __int16 v12 = v2 + 4;
          uint64_t v13 = v2[4];
          do
          {
            int v14 = *(_DWORD *)(v13 + 28);
            BOOL v15 = v14 < a2;
            if (v14 >= a2) {
              int v16 = (uint64_t *)v13;
            }
            else {
              int v16 = (uint64_t *)(v13 + 8);
            }
            if (!v15) {
              __int16 v12 = (void *)v13;
            }
            uint64_t v13 = *v16;
          }
          while (*v16);
          if (v12 != v6 && *((_DWORD *)v12 + 7) <= a2)
          {
            double v17 = (void *)v12[1];
            __int16 v18 = v12;
            if (v17)
            {
              do
              {
                double v19 = v17;
                double v17 = (void *)*v17;
              }
              while (v17);
            }
            else
            {
              do
              {
                double v19 = (void *)v18[2];
                BOOL v20 = *v19 == (void)v18;
                __int16 v18 = v19;
              }
              while (!v20);
            }
            if ((void *)v2[3] == v12) {
              v2[3] = v19;
            }
            --v2[5];
            sub_10005E214(v5, v12);
            operator delete(v12);
          }
        }
      }
      uint64_t v2 = (void *)*v2;
    }
    while (v2);
    int v21 = *(uint64_t **)(a1 + 88);
  }
  else
  {
    int v21 = 0;
  }

  sub_10005C6F8(v21);
}

void sub_10005C42C(void *a1)
{
  time_t v2 = time(0);
  unint64_t v3 = a1[1];
  uint64_t v4 = (uint64_t)((double)((uint64_t)(double)v2 / v3 * v3) + -978307200.0);
  uint64_t v5 = v4 - v3;
  LODWORD(v8) = 0;
  if (!sub_10005DBEC(a1 + 9, 0, &v8)[5])
  {
    int v6 = (unsigned char *)a1[5];
    if (v6)
    {
      if (v6[16])
      {
        (*(void (**)(unsigned char *, double, double))(*(void *)v6 + 24))(v6, (double)v5, (double)v4);
        sub_1000556F4((uint64_t)(a1 + 14), (double)v4);
      }
    }
  }
  LODWORD(v8) = 1;
  if (!sub_10005DBEC(a1 + 9, 1, &v8)[5])
  {
    uint64_t v7 = a1[8];
    if (v7)
    {
      if (*(unsigned char *)(v7 + 16))
      {
        v9[0] = 0;
        v9[1] = 0;
        uint64_t v8 = v9;
        sub_100055AE8((uint64_t)(a1 + 110), (uint64_t)&v8, (double)v5, (double)v4);
        SAGridMetrics::onSlcHistoryCb((void *)a1[8], &v8);
        (*(void (**)(void, double, double))(*(void *)a1[8] + 24))(a1[8], (double)v5, (double)v4);
        sub_100015B14((uint64_t)&v8, v9[0]);
      }
    }
  }
}

void sub_10005C5B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

void sub_10005C5CC(uint64_t a1, char a2)
{
  unint64_t v3 = *(void **)(a1 + 32);
  uint64_t v4 = SALogObjectGeneral;
  BOOL v5 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (a2)
  {
    if (v5)
    {
      int v6 = 68289026;
      int v7 = 0;
      __int16 v8 = 2082;
      int v9 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,biomeCompleted\"}", (uint8_t *)&v6, 0x12u);
    }
    sub_10005C2FC((uint64_t)v3, 0);
    sub_10005C42C(v3);
  }
  else if (v5)
  {
    int v6 = 68289026;
    int v7 = 0;
    __int16 v8 = 2082;
    int v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,biomeCompleteFailed\"}", (uint8_t *)&v6, 0x12u);
  }
}

void sub_10005C6F8(uint64_t *a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    do
    {
      time_t v2 = (uint64_t *)v1[3];
      if (v2 != v1 + 4)
      {
        unint64_t v3 = SALogObjectGeneral;
        do
        {
          if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
          {
            int v4 = *((_DWORD *)v1 + 4);
            int v5 = *((_DWORD *)v2 + 7);
            *(_DWORD *)double buf = 68289539;
            int v10 = 0;
            __int16 v11 = 2082;
            __int16 v12 = "";
            __int16 v13 = 1025;
            int v14 = v4;
            __int16 v15 = 1025;
            int v16 = v5;
            _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#rm,printWaitConditions\", \"metrics\":%{private}d, \"condition\":%{private}d}", buf, 0x1Eu);
            unint64_t v3 = SALogObjectGeneral;
          }
          int v6 = (uint64_t *)v2[1];
          if (v6)
          {
            do
            {
              int v7 = v6;
              int v6 = (uint64_t *)*v6;
            }
            while (v6);
          }
          else
          {
            do
            {
              int v7 = (uint64_t *)v2[2];
              BOOL v8 = *v7 == (void)v2;
              time_t v2 = v7;
            }
            while (!v8);
          }
          time_t v2 = v7;
        }
        while (v7 != v1 + 4);
      }
      uint64_t v1 = (uint64_t *)*v1;
    }
    while (v1);
  }
}

void sub_10005C854(uint64_t a1, int a2)
{
  uint64_t v4 = *(void *)(a1 + 48);
  if (v4) {
    sub_1000617AC(v4, a2);
  }
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5)
  {
    sub_100072DB8(v5, a2);
  }
}

uint64_t sub_10005C8B0(void *a1, int a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    v8[0] = 68289282;
    v8[1] = 0;
    __int16 v9 = 2082;
    int v10 = "";
    __int16 v11 = 1026;
    int v12 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#rm,onEnhancedDeliveryEnabled\", \"isEnhancedDeliveryEnabled\":%{public}hhd}", (uint8_t *)v8, 0x18u);
  }
  uint64_t v5 = a1[5];
  if (v5) {
    *(unsigned char *)(v5 + 440) = a2;
  }
  int v6 = (unsigned char *)a1[6];
  if (v6) {
    sub_100061880(v6, a2);
  }
  uint64_t result = a1[7];
  if (result) {
    return sub_100072BA0(result, a2);
  }
  return result;
}

void sub_10005C9AC(uint64_t a1, int a2)
{
  sub_100054630(a1 + 112, a2);
  uint64_t v4 = *(void *)(a1 + 48);
  if (v4) {
    sub_100061954(v4, a2);
  }
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5)
  {
    sub_100072EDC(v5, a2);
  }
}

uint64_t sub_10005CA10(uint64_t a1)
{
  return sub_10005AC80(*(void *)(a1 + 32));
}

void sub_10005CA18(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = (unint64_t)*(double *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_100045030(*(void *)(a1 + 40), a2);
  unint64_t v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
  {
    double v4 = *(double *)(a1 + 24);
    unint64_t v5 = (unint64_t)*(double *)(a1 + 16);
    uint64_t v6 = *(void *)(a1 + 8);
    v7[0] = 68289794;
    v7[1] = 0;
    __int16 v8 = 2082;
    __int16 v9 = "";
    __int16 v10 = 2050;
    uint64_t v11 = v6;
    __int16 v12 = 2050;
    unint64_t v13 = v5;
    __int16 v14 = 2050;
    unint64_t v15 = (unint64_t)v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#rm,updateMaConfig\", \"fRollingPeriodSeconds\":%{public}llu, \"fFixedDelaySeconds\":%{public}lu, \"fRandomDelaySeconds\":%{public}lu}", (uint8_t *)v7, 0x30u);
  }
}

void sub_10005CB18(uint64_t a1, int a2)
{
  double v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289282;
    v5[1] = 0;
    __int16 v6 = 2082;
    int v7 = "";
    __int16 v8 = 1026;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,onSupportedByCountry\", \"isSupported\":%{public}hhd}", (uint8_t *)v5, 0x18u);
  }
  *(unsigned char *)(a1 + 2041) = a2;
}

uint64_t sub_10005CBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_10005CC84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_10005CD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_10005CDB4(void *a1)
{
  time_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10005CE38(void *a1)
{
  time_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10005CEBC(void *a1)
{
  time_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_10005CF40(uint64_t a1)
{
  time_t v2 = *(void ***)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = *v2;
      sub_10005E048(v2[4]);
      operator delete(v2);
      time_t v2 = (void **)v3;
    }
    while (v3);
  }
  double v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void sub_10005CFA4()
{
}

void *sub_10005CFB8(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F7DF8;
  result[1] = v3;
  return result;
}

uint64_t sub_10005D000(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F7DF8;
  a2[1] = v2;
  return result;
}

void sub_10005D02C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  double v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = (uint64_t)(a2[1] - *a2) >> 5;
    v8[0] = 68289283;
    v8[1] = 0;
    __int16 v9 = 2082;
    __int16 v10 = "";
    __int16 v11 = 2049;
    uint64_t v12 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,OnHistoricalLocationReceivedCb\", \"HistoricalLocationCount\":%{private}lu}", (uint8_t *)v8, 0x1Cu);
  }
  sub_10005C2FC((uint64_t)v3, 2);
  uint64_t v6 = v3[5];
  if (v6) {
    sub_1000493FC(v6, (uint64_t)a2);
  }
  uint64_t v7 = v3[8];
  if (v7) {
    SAGridMetrics::onHistoricalLocationReceivedCb(v7, (uint64_t)a2);
  }
  sub_10005C42C(v3);
}

uint64_t sub_10005D140(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10005D180()
{
}

void *sub_10005D18C(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    double v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_10005D3EC(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100004CA4(a1);
}

void sub_10005D3FC()
{
}

void *sub_10005D410()
{
  uint64_t result = operator new(0x10uLL);
  void *result = off_1000F7E78;
  return result;
}

void sub_10005D448(uint64_t a1, void *a2)
{
  *a2 = off_1000F7E78;
}

uint64_t sub_10005D474(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10005D4B4()
{
}

void *sub_10005D4C0(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    double v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_10005D720(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100004CA4(a1);
}

void sub_10005D730()
{
}

void *sub_10005D744()
{
  uint64_t result = operator new(0x10uLL);
  void *result = off_1000F7EF8;
  return result;
}

void sub_10005D77C(uint64_t a1, void *a2)
{
  *a2 = off_1000F7EF8;
}

uint64_t sub_10005D7A8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10005D7E8()
{
}

void *sub_10005D7F4(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    double v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_10005DA54(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100004CA4(a1);
}

void sub_10005DA64()
{
}

void *sub_10005DA78(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F7F78;
  result[1] = v3;
  return result;
}

uint64_t sub_10005DAC0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F7F78;
  a2[1] = v2;
  return result;
}

void sub_10005DAEC()
{
  v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v1[0] = 68289026;
    v1[1] = 0;
    __int16 v2 = 2082;
    uint64_t v3 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#rm,onSettingsChanged\"}", (uint8_t *)v1, 0x12u);
  }
}

uint64_t sub_10005DBA0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10005DBE0()
{
}

void *sub_10005DBEC(uint64_t *a1, int a2, _DWORD *a3)
{
  unint64_t v6 = a2;
  unint64_t v7 = a1[1];
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = a2;
      if (v7 <= a2) {
        unint64_t v3 = a2 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & a2;
    }
    __int16 v9 = *(void ***)(*a1 + 8 * v3);
    if (v9)
    {
      __int16 v10 = *v9;
      if (*v9)
      {
        do
        {
          unint64_t v11 = v10[1];
          if (v11 == a2)
          {
            if (*((_DWORD *)v10 + 4) == a2) {
              return v10;
            }
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7) {
                v11 %= v7;
              }
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v3) {
              break;
            }
          }
          __int16 v10 = (void *)*v10;
        }
        while (v10);
      }
    }
  }
  uint64_t v12 = a1 + 2;
  __int16 v10 = operator new(0x30uLL);
  *__int16 v10 = 0;
  v10[1] = v6;
  *((_DWORD *)v10 + 4) = *a3;
  v10[5] = 0;
  void v10[4] = 0;
  void v10[3] = v10 + 4;
  float v13 = (float)(unint64_t)(a1[3] + 1);
  float v14 = *((float *)a1 + 8);
  if (!v7 || (float)(v14 * (float)v7) < v13)
  {
    BOOL v15 = 1;
    if (v7 >= 3) {
      BOOL v15 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v7);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      int8x8_t prime = (int8x8_t)v17;
    }
    else {
      int8x8_t prime = (int8x8_t)v16;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v7 = a1[1];
    }
    if (*(void *)&prime > v7) {
      goto LABEL_30;
    }
    if (*(void *)&prime < v7)
    {
      unint64_t v25 = vcvtps_u32_f32((float)(unint64_t)a1[3] / *((float *)a1 + 8));
      if (v7 < 3 || (uint8x8_t v26 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v26.i16[0] = vaddlv_u8(v26), v26.u32[0] > 1uLL))
      {
        unint64_t v25 = std::__next_prime(v25);
      }
      else
      {
        uint64_t v27 = 1 << -(char)__clz(v25 - 1);
        if (v25 >= 2) {
          unint64_t v25 = v27;
        }
      }
      if (*(void *)&prime <= v25) {
        int8x8_t prime = (int8x8_t)v25;
      }
      if (*(void *)&prime >= v7)
      {
        unint64_t v7 = a1[1];
      }
      else
      {
        if (prime)
        {
LABEL_30:
          if (*(void *)&prime >> 61) {
            sub_100004E00();
          }
          double v19 = operator new(8 * *(void *)&prime);
          BOOL v20 = (void *)*a1;
          *a1 = (uint64_t)v19;
          if (v20) {
            operator delete(v20);
          }
          uint64_t v21 = 0;
          a1[1] = (uint64_t)prime;
          do
            *(void *)(*a1 + 8 * v21++) = 0;
          while (*(void *)&prime != v21);
          int v22 = (void *)*v12;
          if (*v12)
          {
            unint64_t v23 = v22[1];
            uint8x8_t v24 = (uint8x8_t)vcnt_s8(prime);
            v24.i16[0] = vaddlv_u8(v24);
            if (v24.u32[0] > 1uLL)
            {
              if (v23 >= *(void *)&prime) {
                v23 %= *(void *)&prime;
              }
            }
            else
            {
              v23 &= *(void *)&prime - 1;
            }
            *(void *)(*a1 + 8 * v23) = v12;
            uint64_t v28 = (void *)*v22;
            if (*v22)
            {
              do
              {
                unint64_t v29 = v28[1];
                if (v24.u32[0] > 1uLL)
                {
                  if (v29 >= *(void *)&prime) {
                    v29 %= *(void *)&prime;
                  }
                }
                else
                {
                  v29 &= *(void *)&prime - 1;
                }
                if (v29 != v23)
                {
                  if (!*(void *)(*a1 + 8 * v29))
                  {
                    *(void *)(*a1 + 8 * v29) = v22;
                    goto LABEL_55;
                  }
                  void *v22 = *v28;
                  *uint64_t v28 = **(void **)(*a1 + 8 * v29);
                  **(void **)(*a1 + 8 * v29) = v28;
                  uint64_t v28 = v22;
                }
                unint64_t v29 = v23;
LABEL_55:
                int v22 = v28;
                uint64_t v28 = (void *)*v28;
                unint64_t v23 = v29;
              }
              while (v28);
            }
          }
          unint64_t v7 = (unint64_t)prime;
          goto LABEL_59;
        }
        unint64_t v34 = (void *)*a1;
        *a1 = 0;
        if (v34) {
          operator delete(v34);
        }
        unint64_t v7 = 0;
        a1[1] = 0;
      }
    }
LABEL_59:
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
      else {
        unint64_t v3 = v6;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
  }
  uint64_t v30 = *a1;
  long long v31 = *(void **)(*a1 + 8 * v3);
  if (v31)
  {
    *__int16 v10 = *v31;
LABEL_72:
    *long long v31 = v10;
    goto LABEL_73;
  }
  *__int16 v10 = *v12;
  *uint64_t v12 = v10;
  *(void *)(v30 + 8 * v3) = v12;
  if (*v10)
  {
    unint64_t v32 = *(void *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v32 >= v7) {
        v32 %= v7;
      }
    }
    else
    {
      v32 &= v7 - 1;
    }
    long long v31 = (void *)(*a1 + 8 * v32);
    goto LABEL_72;
  }
LABEL_73:
  ++a1[3];
  return v10;
}

void sub_10005DFD8(_Unwind_Exception *a1)
{
  sub_10005DFF0(1, v1);
  _Unwind_Resume(a1);
}

void sub_10005DFF0(char a1, void **a2)
{
  if (a1)
  {
    sub_10005E048(a2[4]);
  }
  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

void sub_10005E048(void *a1)
{
  if (a1)
  {
    sub_10005E048(*a1);
    sub_10005E048(a1[1]);
    operator delete(a1);
  }
}

void sub_10005E098()
{
}

void *sub_10005E0AC()
{
  uint64_t result = operator new(0x10uLL);
  void *result = off_1000F7FF8;
  return result;
}

void sub_10005E0E4(uint64_t a1, void *a2)
{
  *a2 = off_1000F7FF8;
}

uint64_t sub_10005E110(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10005E150()
{
}

uint64_t *sub_10005E15C(uint64_t *result, int a2, int a3)
{
  double v4 = result;
  unint64_t v6 = (uint64_t **)(result + 1);
  uint64_t v5 = result[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v7 = (void *)v5;
        int v8 = *(_DWORD *)(v5 + 28);
        if (v8 <= a2) {
          break;
        }
        uint64_t v5 = *v7;
        unint64_t v6 = (uint64_t **)v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (v8 >= a2) {
        break;
      }
      uint64_t v5 = v7[1];
      if (!v5)
      {
        unint64_t v6 = (uint64_t **)(v7 + 1);
        goto LABEL_9;
      }
    }
  }
  else
  {
    unint64_t v7 = result + 1;
LABEL_9:
    __int16 v9 = operator new(0x20uLL);
    v9[7] = a3;
    *(void *)__int16 v9 = 0;
    *((void *)v9 + 1) = 0;
    *((void *)v9 + 2) = v7;
    unsigned char *v6 = (uint64_t *)v9;
    uint64_t v10 = *(void *)*v4;
    if (v10)
    {
      uint64_t *v4 = v10;
      unint64_t v11 = *v6;
    }
    else
    {
      unint64_t v11 = (uint64_t *)v9;
    }
    uint64_t result = sub_100015E3C((uint64_t *)v4[1], v11);
    ++v4[2];
  }
  return result;
}

uint64_t *sub_10005E214(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  unint64_t v3 = a2;
  if (*a2)
  {
    double v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      unint64_t v3 = a2;
      goto LABEL_7;
    }
    do
    {
      unint64_t v3 = v4;
      double v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  uint64_t v2 = v3[1];
  if (v2)
  {
LABEL_7:
    int v5 = 0;
    *(void *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }
  int v5 = 1;
LABEL_8:
  unint64_t v6 = (uint64_t **)v3[2];
  unint64_t v7 = *v6;
  if (*v6 == v3)
  {
    unsigned char *v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      unint64_t v7 = 0;
      uint64_t result = (uint64_t *)v2;
    }
    else
    {
      unint64_t v7 = v6[1];
    }
  }
  else
  {
    v6[1] = (uint64_t *)v2;
  }
  int v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    uint64_t v9 = a2[2];
    _DWORD v3[2] = v9;
    *(void *)(v9 + 8 * (*(void *)a2[2] != (void)a2)) = v3;
    uint64_t v11 = *a2;
    uint64_t v10 = a2[1];
    *(void *)(v11 + 16) = v3;
    *unint64_t v3 = v11;
    v3[1] = v10;
    if (v10) {
      *(void *)(v10 + 16) = v3;
    }
    *((unsigned char *)v3 + 24) = *((unsigned char *)a2 + 24);
    if (result == a2) {
      uint64_t result = v3;
    }
  }
  if (!v8 || !result) {
    return result;
  }
  if (!v5)
  {
    *(unsigned char *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    uint64_t v12 = v7[2];
    if (*(uint64_t **)v12 != v7) {
      break;
    }
    if (!*((unsigned char *)v7 + 24))
    {
      *((unsigned char *)v7 + 24) = 1;
      *(unsigned char *)(v12 + 24) = 0;
      uint64_t v18 = v7[1];
      *(void *)uint64_t v12 = v18;
      if (v18) {
        *(void *)(v18 + 16) = v12;
      }
      _DWORD v7[2] = *(void *)(v12 + 16);
      *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v7;
      v7[1] = v12;
      *(void *)(v12 + 16) = v7;
      if (result == (uint64_t *)v12) {
        uint64_t result = v7;
      }
      unint64_t v7 = *(uint64_t **)v12;
    }
    double v19 = (void *)*v7;
    if (*v7 && !*((unsigned char *)v19 + 24)) {
      goto LABEL_68;
    }
    BOOL v20 = (uint64_t *)v7[1];
    if (v20 && !*((unsigned char *)v20 + 24))
    {
      if (v19 && !*((unsigned char *)v19 + 24))
      {
LABEL_68:
        BOOL v20 = v7;
      }
      else
      {
        *((unsigned char *)v20 + 24) = 1;
        *((unsigned char *)v7 + 24) = 0;
        uint64_t v26 = *v20;
        v7[1] = *v20;
        if (v26) {
          *(void *)(v26 + 16) = v7;
        }
        v20[2] = v7[2];
        *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v20;
        uint64_t *v20 = (uint64_t)v7;
        _DWORD v7[2] = (uint64_t)v20;
        double v19 = v7;
      }
      uint64_t v23 = v20[2];
      *((unsigned char *)v20 + 24) = *(unsigned char *)(v23 + 24);
      *(unsigned char *)(v23 + 24) = 1;
      *((unsigned char *)v19 + 24) = 1;
      uint8x8_t v24 = *(uint64_t **)v23;
      uint64_t v27 = *(void *)(*(void *)v23 + 8);
      *(void *)uint64_t v23 = v27;
      if (v27) {
        *(void *)(v27 + 16) = v23;
      }
      v24[2] = *(void *)(v23 + 16);
      *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
      v24[1] = v23;
      goto LABEL_72;
    }
    *((unsigned char *)v7 + 24) = 0;
    unint64_t v17 = (uint64_t *)v7[2];
    if (*((unsigned char *)v17 + 24)) {
      BOOL v21 = v17 == result;
    }
    else {
      BOOL v21 = 1;
    }
    if (v21) {
      goto LABEL_53;
    }
LABEL_49:
    unint64_t v7 = *(uint64_t **)(v17[2] + 8 * (*(void *)v17[2] == (void)v17));
  }
  if (!*((unsigned char *)v7 + 24))
  {
    *((unsigned char *)v7 + 24) = 1;
    *(unsigned char *)(v12 + 24) = 0;
    float v13 = *(uint64_t **)(v12 + 8);
    uint64_t v14 = *v13;
    *(void *)(v12 + 8) = *v13;
    if (v14) {
      *(void *)(v14 + 16) = v12;
    }
    _DWORD v13[2] = *(void *)(v12 + 16);
    *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v13;
    *float v13 = v12;
    *(void *)(v12 + 16) = v13;
    if (result == (uint64_t *)*v7) {
      uint64_t result = v7;
    }
    unint64_t v7 = *(uint64_t **)(*v7 + 8);
  }
  BOOL v15 = (void *)*v7;
  if (!*v7 || *((unsigned char *)v15 + 24))
  {
    unint64_t v16 = (uint64_t *)v7[1];
    if (v16 && !*((unsigned char *)v16 + 24)) {
      goto LABEL_59;
    }
    *((unsigned char *)v7 + 24) = 0;
    unint64_t v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      unint64_t v17 = result;
LABEL_53:
      *((unsigned char *)v17 + 24) = 1;
      return result;
    }
    if (!*((unsigned char *)v17 + 24)) {
      goto LABEL_53;
    }
    goto LABEL_49;
  }
  unint64_t v16 = (uint64_t *)v7[1];
  if (v16 && !*((unsigned char *)v16 + 24))
  {
LABEL_59:
    BOOL v15 = v7;
  }
  else
  {
    *((unsigned char *)v15 + 24) = 1;
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v22 = v15[1];
    uint64_t *v7 = v22;
    if (v22) {
      *(void *)(v22 + 16) = v7;
    }
    _DWORD v15[2] = v7[2];
    *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v15;
    v15[1] = v7;
    _DWORD v7[2] = (uint64_t)v15;
    unint64_t v16 = v7;
  }
  uint64_t v23 = v15[2];
  *((unsigned char *)v15 + 24) = *(unsigned char *)(v23 + 24);
  *(unsigned char *)(v23 + 24) = 1;
  *((unsigned char *)v16 + 24) = 1;
  uint8x8_t v24 = *(uint64_t **)(v23 + 8);
  uint64_t v25 = *v24;
  *(void *)(v23 + 8) = *v24;
  if (v25) {
    *(void *)(v25 + 16) = v23;
  }
  v24[2] = *(void *)(v23 + 16);
  *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
  uint64_t *v24 = v23;
LABEL_72:
  *(void *)(v23 + 16) = v24;
  return result;
}

uint64_t sub_10005E598(uint64_t a1)
{
  unint64_t v3 = *(void **)(a1 + 8);
  uint64_t v1 = (void *)(a1 + 8);
  uint64_t v2 = v3;
  if (!v3) {
    goto LABEL_12;
  }
  double v4 = v1;
  int v5 = v2;
  do
  {
    if (*((unsigned char *)v5 + 25)) {
      unint64_t v6 = v5;
    }
    else {
      unint64_t v6 = v5 + 1;
    }
    if (*((unsigned char *)v5 + 25)) {
      double v4 = v5;
    }
    int v5 = (void *)*v6;
  }
  while (*v6);
  do
  {
    unint64_t v7 = v2;
    uint64_t v2 = (void *)*v2;
  }
  while (v2);
  LODWORD(v2) = v4 != v1;
  if (v7 == v1 || *((unsigned char *)v7 + 25)) {
LABEL_12:
  }
    unint64_t v7 = v1;
  BOOL v8 = v7 != v1;
  if (v7 == v1) {
    int v9 = (int)v2;
  }
  else {
    int v9 = 1;
  }
  if ((v2 & v8) != 0) {
    LODWORD(v2) = 2;
  }
  if (v9) {
    return v2;
  }
  else {
    return 3;
  }
}

void sub_10005E614(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = a1;
  id v7 = v3;
  if (*((unsigned char *)sub_10003E368() + 324))
  {
    double v4 = operator new(0x28uLL);
    v4[1] = 0;
    _DWORD v4[2] = 0;
    void *v4 = off_1000F80A8;
    id v5 = v3;
    v4[3] = off_1000F7DA8;
    void v4[4] = v5;
    *a2 = v4 + 3;
    a2[1] = v4;
  }
  else
  {
    sub_10005E790(&v7, &v6);
    *(_OWORD *)a2 = v6;
    id v5 = v7;
  }
}

void sub_10005E6D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_10005E6F4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1000F80A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10005E714(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1000F80A8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10005E768(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void *sub_10005E790@<X0>(void **a1@<X1>, void *a2@<X8>)
{
  double v4 = operator new(0x30uLL);
  uint64_t result = sub_10005E7EC(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_10005E7D8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_10005E7EC(void *a1, void **a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_1000F80F8;
  sub_100063E14(a1 + 3, *a2);
  return a1;
}

void sub_10005E838(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_10005E84C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1000F80F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10005E86C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1000F80F8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10005E8C0(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void *sub_10005E8E8(void *a1, void *a2)
{
  id v3 = a2;
  *a1 = off_1000F8148;
  id v4 = v3;
  a1[2] = 0;
  a1[3] = 0;
  a1[1] = v4;
  id v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 68289026;
    v7[1] = 0;
    __int16 v8 = 2082;
    int v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleti,init\"}", (uint8_t *)v7, 0x12u);
  }

  return a1;
}

uint64_t sub_10005E9E4(uint64_t a1)
{
  *(void *)a1 = off_1000F8148;
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    long long v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleti,deinit\"}", (uint8_t *)v4, 0x12u);
  }

  return a1;
}

void sub_10005EAD8(uint64_t a1)
{
  sub_10005E9E4(a1);

  operator delete();
}

uint64_t sub_10005EB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289026;
    __int16 v13 = 2082;
    uint64_t v14 = "";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleti,startDiscovery\"}", (uint8_t *)&buf, 0x12u);
  }
  uint64_t result = *(void *)(a1 + 16);
  if (result
    || (id v8 = objc_alloc_init((Class)CBDiscovery),
        int v9 = *(void **)(a1 + 16),
        *(void *)(a1 + 16) = v8,
        v9,
        (uint64_t result = *(void *)(a1 + 16)) != 0))
  {
    [(id)result setDiscoveryFlags:*(void *)(a2 + 8)];
    [*(id *)(a1 + 16) setDispatchQueue:*(void *)a2];
    [*(id *)(a1 + 16) addDiscoveryType:*(unsigned int *)(a2 + 16)];
    [*(id *)(a1 + 16) setUseCase:*(unsigned int *)(a2 + 20)];
    [*(id *)(a1 + 16) setBleScanRateScreenOff:*(unsigned int *)(a2 + 24)];
    [*(id *)(a1 + 16) setBleScanRate:*(unsigned int *)(a2 + 28)];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3321888768;
    _DWORD v10[2] = sub_10005ECEC;
    void v10[3] = &unk_1000F81B0;
    void v10[4] = a1;
    sub_10005F824((uint64_t)v11, a3);
    [*(id *)(a1 + 16) setDeviceFoundHandler:v10];
    [*(id *)(a1 + 16) activateWithCompletion:&stru_1000F8200];
    sub_10005F7A0(v11);
    return 1;
  }
  return result;
}

void sub_10005ECCC(_Unwind_Exception *a1)
{
  sub_10005F7A0(v1);
  _Unwind_Resume(a1);
}

void sub_10005ECEC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  __int16 v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289283;
    int v13 = 0;
    __int16 v14 = 2082;
    BOOL v15 = "";
    __int16 v16 = 2113;
    id v17 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleti,startDiscovery\", \"inDevice\":%{private, location:escape_only}@}", buf, 0x1Cu);
  }
  long long v6 = *(NSObject **)(v4 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_10005EE74;
  block[3] = &unk_1000F8180;
  id v10 = v3;
  uint64_t v7 = a1 + 40;
  id v8 = v3;
  sub_10005F824((uint64_t)v11, v7);
  dispatch_async(v6, block);
  sub_10005F7A0(v11);
}

void sub_10005EE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_10005EE74(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  _DWORD v3[2] = sub_10005EF88;
  v3[3] = &unk_1000F8180;
  id v4 = *(id *)(a1 + 32);
  sub_10005F824((uint64_t)v5, a1 + 40);
  sub_10005EF88((uint64_t)v3);
  sub_10005F7A0(v5);
}

void sub_10005EF5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  sub_10005F7A0(v13);

  _Unwind_Resume(a1);
}

void sub_10005EF88(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  id v6 = v2;
  uint64_t v3 = *(void *)(a1 + 64);
  id v4 = SALogObjectGeneral;
  BOOL v5 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v8 = 0;
      __int16 v9 = 2082;
      id v10 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleti,startDiscovery,fOnBLEAlertCb\"}", buf, 0x12u);
      uint64_t v3 = *(void *)(a1 + 64);
      if (!v3) {
        sub_100005520();
      }
    }
    (*(void (**)(uint64_t, id *))(*(void *)v3 + 48))(v3, &v6);
    id v2 = v6;
  }
  else if (v5)
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v8 = 0;
    __int16 v9 = 2082;
    id v10 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleti,startDiscovery,fOnBLEAlertCb failed\"}", buf, 0x12u);
  }
}

void sub_10005F0F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10005F110(uint64_t a1, uint64_t a2)
{
  return sub_10005F824(a1 + 40, a2 + 40);
}

void *sub_10005F11C(uint64_t a1)
{
  return sub_10005F7A0((void *)(a1 + 40));
}

void sub_10005F124(id a1, NSError *a2)
{
  id v2 = a2;
  uint64_t v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 68289026;
    int v6 = 0;
    __int16 v7 = 2082;
    int v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleti,startDiscovery,activateWithCompletion\"}", (uint8_t *)&v5, 0x12u);
  }
  if (v2)
  {
    id v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 68289283;
      int v6 = 0;
      __int16 v7 = 2082;
      int v8 = "";
      __int16 v9 = 2113;
      id v10 = v2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleti,startDiscovery\", \"Error\":%{private, location:escape_only}@}", (uint8_t *)&v5, 0x1Cu);
    }
  }
}

void sub_10005F258(uint64_t a1)
{
  id v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289026;
    v5[1] = 0;
    __int16 v6 = 2082;
    __int16 v7 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleti,stopDiscovery\"}", (uint8_t *)v5, 0x12u);
  }
  uint64_t v3 = *(void **)(a1 + 16);
  if (v3)
  {
    [v3 invalidate];
    id v4 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = 0;
  }
}

uint64_t sub_10005F328(uint64_t a1, uint64_t a2)
{
  id v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v13 = 68289026;
    int v14 = 0;
    __int16 v15 = 2082;
    __int16 v16 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleti,startAdvertising\"}", (uint8_t *)&v13, 0x12u);
  }
  if (!*(void *)(a1 + 8))
  {
    __int16 v9 = SALogObjectGeneral;
    BOOL v10 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (!v10) {
      return result;
    }
    int v13 = 68289026;
    int v14 = 0;
    __int16 v15 = 2082;
    __int16 v16 = "";
    uint64_t v11 = "{\"msg%{public}.0s\":\"#bleti,startAdvertising,fDispatchQueue invalid\"}";
    goto LABEL_10;
  }
  id v5 = objc_alloc_init((Class)CBAdvertiser);
  __int16 v6 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v5;

  __int16 v7 = *(void **)(a1 + 24);
  if (v7)
  {
    [v7 setDispatchQueue:*(void *)(a1 + 8)];
    [*(id *)(a1 + 24) setAdvertiseRate:*(unsigned int *)(a2 + 8)];
    [*(id *)(a1 + 24) setUseCase:*(unsigned int *)(a2 + 12)];
    [*(id *)(a1 + 24) setSafetyAlertsAlertData:*(void *)(a2 + 16)];
    [*(id *)(a1 + 24) setSafetyAlertsSignature:*(void *)(a2 + 24)];
    [*(id *)(a1 + 24) setSafetyAlertsVersion:*(unsigned __int8 *)(a2 + 40)];
    [*(id *)(a1 + 24) setSafetyAlertsAlertID:*(void *)(a2 + 32)];
    [*(id *)(a1 + 24) activateWithCompletion:&stru_1000F8220];
    return 1;
  }
  __int16 v9 = SALogObjectGeneral;
  BOOL v12 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  uint64_t result = 0;
  if (v12)
  {
    int v13 = 68289026;
    int v14 = 0;
    __int16 v15 = 2082;
    __int16 v16 = "";
    uint64_t v11 = "{\"msg%{public}.0s\":\"#bleti,startAdvertising fAdvertiser invalid\"}";
LABEL_10:
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v13, 0x12u);
    return 0;
  }
  return result;
}

void sub_10005F538(id a1, NSError *a2)
{
  id v2 = a2;
  uint64_t v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 68289026;
    int v6 = 0;
    __int16 v7 = 2082;
    int v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleti,startAdvertisingCb\"}", (uint8_t *)&v5, 0x12u);
  }
  if (v2)
  {
    id v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 68289283;
      int v6 = 0;
      __int16 v7 = 2082;
      int v8 = "";
      __int16 v9 = 2113;
      BOOL v10 = v2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleti,startAdvertisingCb\", \"Error\":%{private, location:escape_only}@}", (uint8_t *)&v5, 0x1Cu);
    }
  }
}

void sub_10005F66C(uint64_t a1)
{
  id v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 68289026;
    int v7 = 0;
    __int16 v8 = 2082;
    __int16 v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleti,stopAdvertisingOverBLE\"}", (uint8_t *)&v6, 0x12u);
  }
  uint64_t v3 = *(void **)(a1 + 24);
  if (v3)
  {
    [v3 invalidate];
    id v4 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = 0;

    int v5 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = 68289026;
      int v7 = 0;
      __int16 v8 = 2082;
      __int16 v9 = "";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bleti,stopAdvertisingOverBLE,advertiser released\"}", (uint8_t *)&v6, 0x12u);
    }
  }
}

void *sub_10005F7A0(void *a1)
{
  id v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_10005F824(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

BOOL sub_10005F8BC(unsigned char *a1)
{
  bzero(v14, 0x400uLL);
  int v2 = *a1;
  if (!*a1) {
    return 1;
  }
  unint64_t v3 = 0;
  while (1)
  {
    v14[v3] = v2;
    if (v2 == 47)
    {
      if (stat(v14, &v7)) {
        break;
      }
    }
LABEL_8:
    BOOL result = 1;
    if (v3 <= 0x3FD)
    {
      int v2 = a1[++v3];
      if (v2) {
        continue;
      }
    }
    return result;
  }
  int v4 = mkdir(v14, 0x1FFu);
  int v5 = SALogObjectGeneral;
  BOOL result = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (!v4)
  {
    if (result)
    {
      *(_DWORD *)uint64_t buf = 68289282;
      int v9 = 0;
      __int16 v10 = 2082;
      uint64_t v11 = "";
      __int16 v12 = 2082;
      int v13 = v14;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"createDirectoriesToPath dir created\", \"path\":%{public, location:escape_only}s}", buf, 0x1Cu);
    }
    goto LABEL_8;
  }
  if (result)
  {
    *(_DWORD *)uint64_t buf = 68289282;
    int v9 = 0;
    __int16 v10 = 2082;
    uint64_t v11 = "";
    __int16 v12 = 2082;
    int v13 = v14;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Warning,createDirectoriesToPath dir created failed\", \"path\":%{public, location:escape_only}s}", buf, 0x1Cu);
    return 0;
  }
  return result;
}

BOOL sub_10005FA7C(const char *a1, uint64_t a2)
{
  if (!a1)
  {
    stat v7 = SALogObjectGeneral;
    BOOL result = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR);
    if (!result) {
      return result;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v15 = 0;
    __int16 v16 = 2082;
    id v17 = "";
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"setFileProtectionClass,sFilename==nullptr\"}", buf, 0x12u);
    return 0;
  }
  int v4 = open(a1, 2);
  if (v4 < 0)
  {
    int v9 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = *__error();
      *(_DWORD *)uint64_t buf = 68289283;
      int v15 = 0;
      __int16 v16 = 2082;
      id v17 = "";
      __int16 v18 = 1025;
      LODWORD(v19) = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"setFileProtectionClass,open,\", \"errno,\":%{private}d}", buf, 0x18u);
    }
LABEL_13:

    return 0;
  }
  int v5 = v4;
  int v6 = fcntl(v4, 63);
  if (v6 != a2)
  {
    int v11 = fcntl(v5, 64, a2);
    close(v5);
    if (!v11) {
      goto LABEL_15;
    }
    int v9 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = *__error();
      *(_DWORD *)uint64_t buf = 68290051;
      __int16 v16 = 2082;
      int v15 = 0;
      id v17 = "";
      __int16 v18 = 2081;
      double v19 = a1;
      __int16 v20 = 1025;
      int v21 = v6;
      __int16 v22 = 1025;
      int v23 = a2;
      __int16 v24 = 1025;
      int v25 = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Warning,setFileProtectionClass\", \"file,\":%{private, location:escape_only}s, \"oldPc,\":%{private}d, \"newPc,\":%{private}d, \"errno,\":%{private}d}", buf, 0x2Eu);
    }
    goto LABEL_13;
  }
  close(v5);
LABEL_15:
  int v13 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68290051;
    __int16 v16 = 2082;
    int v15 = 0;
    id v17 = "";
    __int16 v18 = 2081;
    double v19 = a1;
    __int16 v20 = 1025;
    int v21 = v6;
    __int16 v22 = 1025;
    int v23 = a2;
    __int16 v24 = 1025;
    int v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"setFileProtectionClass\", \"file,\":%{private, location:escape_only}s, \"oldPc,\":%{private}d, \"newPc,\":%{private}d, \"ret,\":%{private}d}", buf, 0x2Eu);
  }
  return 1;
}

void sub_10005FD58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10005FD74(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    if (a2) {
      operator new[]();
    }
    int v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 68289026;
      int v6 = 0;
      __int16 v7 = 2082;
      __int16 v8 = "";
      unint64_t v3 = "{\"msg%{public}.0s\":\"#ps,#warning,invalidToPath\"}";
      goto LABEL_8;
    }
  }
  else
  {
    int v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 68289026;
      int v6 = 0;
      __int16 v7 = 2082;
      __int16 v8 = "";
      unint64_t v3 = "{\"msg%{public}.0s\":\"#ps,#warning,invalidFromPath\"}";
LABEL_8:
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, v3, (uint8_t *)&v5, 0x12u);
    }
  }
  return 0;
}

void sub_1000601DC()
{
  sub_100060240(v0);
  operator delete[]();
}

FILE *sub_100060240(FILE *result)
{
  if (result)
  {
    uint64_t v1 = result;
    int v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 68289026;
      v3[1] = 0;
      __int16 v4 = 2082;
      int v5 = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ps,Closing fp\"}", (uint8_t *)v3, 0x12u);
    }
    return (FILE *)fclose(v1);
  }
  return result;
}

uint64_t *sub_100060304(uint64_t *a1)
{
  return a1;
}

uint64_t start()
{
  signal(14, (void (__cdecl *)(int))sub_1000606D8);
  signal(2, (void (__cdecl *)(int))sub_1000606D8);
  signal(3, (void (__cdecl *)(int))sub_1000606D8);
  signal(15, (void (__cdecl *)(int))sub_1000606D8);
  SALogInit();
  int v2 = (SAPlatformInfo *)[*(id *)SAPlatformInfo::instance(v1) isEqualToString:@"iPhone"];
  if ((v2 & 1) != 0
    || (unint64_t v3 = (id *)SAPlatformInfo::instance(v2), [*v3 isEqualToString:@"Watch"])
    && *((unsigned char *)v3 + 8))
  {
    __int16 v4 = SALogObjectGeneral;
    BOOL v5 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    if (v5)
    {
      int v13 = 68289283;
      int v14 = 0;
      __int16 v15 = 2082;
      __int16 v16 = "";
      __int16 v17 = 1025;
      int v18 = 1;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ff1\", \"enabled\":%{private}hhd}", (uint8_t *)&v13, 0x18u);
    }
    if (*((unsigned char *)SAPlatformInfo::instance((SAPlatformInfo *)v5) + 9))
    {
      int v6 = (id)SALogObjectGeneral;
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        int v7 = _os_feature_enabled_impl();
        int v13 = 68289283;
        int v14 = 0;
        __int16 v15 = 2082;
        __int16 v16 = "";
        __int16 v17 = 1025;
        int v18 = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ff2\", \"enabled\":%{private}hhd}", (uint8_t *)&v13, 0x18u);
      }
    }
    int v8 = *((unsigned __int8 *)sub_10003E368() + 48);
    int v9 = SALogObjectGeneral;
    BOOL v10 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    if (v8)
    {
      if (v10)
      {
        int v13 = 68289026;
        int v14 = 0;
        __int16 v15 = 2082;
        __int16 v16 = "";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"SafetyAlerts features enabled\"}", (uint8_t *)&v13, 0x12u);
      }
      sub_10006065C();
    }
    if (v10)
    {
      int v13 = 68289026;
      int v14 = 0;
      __int16 v15 = 2082;
      __int16 v16 = "";
      int v11 = "{\"msg%{public}.0s\":\"SafetyAlerts disabled\"}";
LABEL_15:
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v13, 0x12u);
    }
  }
  else
  {
    int v9 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = 68289026;
      int v14 = 0;
      __int16 v15 = 2082;
      __int16 v16 = "";
      int v11 = "{\"msg%{public}.0s\":\"SafetyAlerts not supported in this platform\"}";
      goto LABEL_15;
    }
  }
  return 0;
}

void sub_100060644(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006065C()
{
}

void sub_1000606A0()
{
}

uint64_t *sub_1000606C4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  *a1 = 0;
  return sub_100060D3C(&qword_100106AF0, v1);
}

void sub_1000606D8(int a1)
{
  sub_10000DD48(__p, "com.apple.safetyalerts.shutdown");
  v11[0] = off_1000F82B8;
  v11[3] = v11;
  int v2 = (char *)operator new(0x58uLL);
  *((void *)v2 + 1) = 0;
  *((void *)v2 + 2) = 0;
  *(void *)int v2 = off_1000F8268;
  sub_10000F63C((uint64_t)&v12, (uint64_t)v11);
  unint64_t v3 = v2 + 24;
  if (SHIBYTE(v10) < 0)
  {
    sub_100004CB8(v2 + 24, __p[0], (unint64_t)__p[1]);
  }
  else
  {
    *unint64_t v3 = *(_OWORD *)__p;
    *((void *)v2 + 5) = v10;
  }
  sub_10000F63C((uint64_t)(v2 + 48), (uint64_t)&v12);
  __int16 v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v5 = v2 + 24;
    if (v2[47] < 0) {
      BOOL v5 = *(char **)v3;
    }
    uint64_t buf = 68289283;
    __int16 v18 = 2082;
    double v19 = "";
    __int16 v20 = 2081;
    int v21 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#sharedobj,create\", \"id\":%{private, location:escape_only}s}", (uint8_t *)&buf, 0x1Cu);
  }
  sub_10000F6D4(&v12);
  sub_10000F6D4(v11);
  if (SHIBYTE(v10) < 0) {
    operator delete(__p[0]);
  }
  if ((a1 - 2) < 2 || a1 == 15)
  {
    alarm(0xAu);
    int v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = 68289282;
      __int16 v13 = 2082;
      int v14 = "";
      __int16 v15 = 1026;
      int v16 = a1;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"SafetyAlerts shutdown started\", \"signal\":%{public}d}", (uint8_t *)&v12, 0x18u);
    }
    int v7 = (NSObject **)qword_100106AF0;
    v8[0] = (uint64_t)(v2 + 24);
    v8[1] = (uint64_t)v2;
    atomic_fetch_add_explicit((atomic_ullong *volatile)v2 + 1, 1uLL, memory_order_relaxed);
    sub_10007B9CC(v7, v8);
    sub_100028F6C((std::__shared_weak_count *)v2);
  }
  else if (a1 == 14)
  {
    sub_1000609D4();
    _Exit(1);
  }
  sub_100028F6C((std::__shared_weak_count *)v2);
}

void sub_10006094C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_10000F6D4(&a22);
  std::__shared_weak_count::~__shared_weak_count(v22);
  operator delete(v24);
  sub_10000F6D4(&a18);
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void (__cdecl *sub_1000609D4())(int)
{
  signal(14, (void (__cdecl *)(int))1);
  signal(2, (void (__cdecl *)(int))1);
  signal(3, (void (__cdecl *)(int))1);

  return signal(15, (void (__cdecl *)(int))1);
}

void sub_100060A24(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1000F8268;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100060A44(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1000F8268;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_100060A98(uint64_t a1)
{
  int v2 = (void **)(a1 + 24);
  unint64_t v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v4 = v2;
    if (*(char *)(a1 + 47) < 0) {
      __int16 v4 = *v2;
    }
    v6[0] = 68289283;
    v6[1] = 0;
    __int16 v7 = 2082;
    int v8 = "";
    __int16 v9 = 2081;
    uint64_t v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#sharedobj,release\", \"id\":%{private, location:escape_only}s}", (uint8_t *)v6, 0x1Cu);
  }
  uint64_t v5 = *(void *)(a1 + 72);
  if (!v5) {
    sub_100005520();
  }
  (*(void (**)(uint64_t))(*(void *)v5 + 48))(v5);
  sub_10000F6D4((void *)(a1 + 48));
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*v2);
  }
}

void sub_100060BC4(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100004CA4(a1);
}

void sub_100060BD8()
{
}

void *sub_100060BEC()
{
  BOOL result = operator new(0x10uLL);
  void *result = off_1000F82B8;
  return result;
}

void sub_100060C24(uint64_t a1, void *a2)
{
  *a2 = off_1000F82B8;
}

void sub_100060C4C()
{
  sub_100060D3C(&qword_100106AF0, 0);
  v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v1[0] = 68289026;
    v1[1] = 0;
    __int16 v2 = 2082;
    unint64_t v3 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"SafetyAlerts shutdown complete\"}", (uint8_t *)v1, 0x12u);
  }
  sub_1000609D4();
  _Exit(0);
}

uint64_t sub_100060CF0(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F8318)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100060D30()
{
  return &off_1000F8318;
}

uint64_t *sub_100060D3C(uint64_t *result, uint64_t a2)
{
  uint64_t v2 = *result;
  void *result = a2;
  if (v2)
  {
    if (*(char *)(v2 + 423) < 0) {
      operator delete(*(void **)(v2 + 400));
    }
    if (*(char *)(v2 + 399) < 0) {
      operator delete(*(void **)(v2 + 376));
    }
    if (*(char *)(v2 + 375) < 0) {
      operator delete(*(void **)(v2 + 352));
    }
    uint64_t v3 = *(void *)(v2 + 336);
    *(void *)(v2 + 336) = 0;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    __int16 v22 = (void **)(v2 + 288);
    sub_100005360(&v22);
    __int16 v22 = (void **)(v2 + 264);
    sub_1000610FC(&v22);
    __int16 v22 = (void **)(v2 + 208);
    sub_100061184(&v22);
    __int16 v4 = *(std::__shared_weak_count **)(v2 + 200);
    if (v4) {
      sub_100028F6C(v4);
    }
    uint64_t v5 = *(std::__shared_weak_count **)(v2 + 184);
    if (v5) {
      sub_100028F6C(v5);
    }
    uint64_t v6 = *(void *)(v2 + 168);
    *(void *)(v2 + 168) = 0;
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *(void *)(v2 + 160);
    *(void *)(v2 + 160) = 0;
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *(void *)(v2 + 152);
    *(void *)(v2 + 152) = 0;
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    sub_10006120C((uint64_t *)(v2 + 144), 0);
    __int16 v9 = *(std::__shared_weak_count **)(v2 + 136);
    if (v9) {
      sub_100028F6C(v9);
    }
    uint64_t v10 = *(void *)(v2 + 120);
    *(void *)(v2 + 120) = 0;
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = *(void *)(v2 + 112);
    *(void *)(v2 + 112) = 0;
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = *(void *)(v2 + 104);
    *(void *)(v2 + 104) = 0;
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    uint64_t v13 = *(void *)(v2 + 96);
    *(void *)(v2 + 96) = 0;
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
    uint64_t v14 = *(void *)(v2 + 88);
    *(void *)(v2 + 88) = 0;
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
    uint64_t v15 = *(void *)(v2 + 80);
    *(void *)(v2 + 80) = 0;
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    }
    uint64_t v16 = *(void *)(v2 + 72);
    *(void *)(v2 + 72) = 0;
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    }
    uint64_t v17 = *(void *)(v2 + 64);
    *(void *)(v2 + 64) = 0;
    if (v17) {
      (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    }
    uint64_t v18 = *(void *)(v2 + 56);
    *(void *)(v2 + 56) = 0;
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    }
    double v19 = *(std::__shared_weak_count **)(v2 + 48);
    if (v19) {
      sub_100028F6C(v19);
    }
    uint64_t v20 = *(void *)(v2 + 32);
    *(void *)(v2 + 32) = 0;
    if (v20) {
      (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
    }
    int v21 = *(std::__shared_weak_count **)(v2 + 24);
    if (v21) {
      sub_100028F6C(v21);
    }
    sub_10006125C((uint64_t *)(v2 + 8), 0);

    operator delete();
  }
  return result;
}

void sub_1000610FC(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (id *)**a1;
  if (v2)
  {
    __int16 v4 = (id *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v6 = v4 - 11;

        __int16 v4 = v6;
      }
      while (v6 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_100061184(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (uint64_t *)**a1;
  if (v2)
  {
    __int16 v4 = (uint64_t *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
        sub_10002A0C4(--v4, 0);
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_10006120C(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100081D40(result);
    operator delete();
  }
  return result;
}

uint64_t sub_10006125C(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100026104(result);
    operator delete();
  }
  return result;
}

void sub_1000612AC()
{
  __cxa_atexit((void (*)(void *))sub_100060304, &qword_100106AF0, (void *)&_mh_execute_header);
}

uint64_t sub_100061308(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(_DWORD *)a1 = 0;
  id v4 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = 0;
  uint64_t v5 = SALogObjectGeneral;
  BOOL v6 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v6)
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)uint64_t v17 = 2082;
    *(void *)&v17[2] = "";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ar,init\"}", buf, 0x12u);
  }
  uint64_t v7 = SASettings::instance((SASettings *)v6);
  v15[0] = off_1000F8378;
  v15[3] = v15;
  (*(void (**)(uint64_t, void *))(*(void *)v7 + 16))(v7, v15);
  sub_10000F6D4(v15);
  int v8 = *((_DWORD *)sub_10003E368() + 77);
  *(double *)(a1 + 16) = (double)v8;
  if (v8 <= 0)
  {
    uint64_t v13 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)uint64_t v17 = 2082;
      *(void *)&v17[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#ar,setupXpcActivity,invalid submission period\"}", buf, 0x12u);
    }
  }
  else
  {
    xpc_object_t v9 = xpc_dictionary_create(0, 0, 0);
    uint64_t v10 = SALogObjectGeneral;
    if (v9)
    {
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *(void *)(a1 + 16);
        *(_DWORD *)uint64_t buf = 68289283;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)uint64_t v17 = 2082;
        *(void *)&v17[2] = "";
        *(_WORD *)&unsigned char v17[10] = 2049;
        *(void *)&v17[12] = v11;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ar,setupXpcActivity\", \"fSubmissionPeriod\":\"%{private}0.1f\"}", buf, 0x1Cu);
      }
      xpc_dictionary_set_int64(v9, XPC_ACTIVITY_INTERVAL, (uint64_t)*(double *)(a1 + 16));
      xpc_dictionary_set_BOOL(v9, XPC_ACTIVITY_REPEATING, 1);
      xpc_dictionary_set_int64(v9, XPC_ACTIVITY_DELAY, 0);
      xpc_dictionary_set_int64(v9, XPC_ACTIVITY_GRACE_PERIOD, 30);
      xpc_dictionary_set_string(v9, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_MAINTENANCE);
      xpc_dictionary_set_BOOL(v9, XPC_ACTIVITY_ALLOW_BATTERY, 1);
      xpc_dictionary_set_BOOL(v9, XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY, 0);
      uint64_t v12 = (const char *)[@"com.apple.safetyalerts.ar" UTF8String];
      *(void *)uint64_t buf = _NSConcreteStackBlock;
      *(void *)uint64_t v17 = 3221225472;
      *(void *)&v17[8] = sub_100061F28;
      *(void *)&v17[16] = &unk_1000F5DD8;
      uint64_t v18 = a1;
      xpc_activity_register(v12, v9, buf);
    }
    else if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)uint64_t v17 = 2082;
      *(void *)&v17[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#ar,setupXpcActivity,cant create xpcDictionary\"}", buf, 0x12u);
    }
  }
  return a1;
}

void sub_1000616AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10000F6D4(&a9);

  _Unwind_Resume(a1);
}

uint64_t sub_1000616E8(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    BOOL v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ar,released\"}", (uint8_t *)v4, 0x12u);
  }

  return a1;
}

void sub_1000617AC(uint64_t a1, int a2)
{
  id v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289283;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    __int16 v8 = 1025;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ar,onIsInCoveredAreaStateChange\", \"isInCoveredArea\":%{private}hhd}", (uint8_t *)v5, 0x18u);
  }
  *(unsigned char *)(a1 + 1) = a2;
}

void sub_100061880(unsigned char *a1, int a2)
{
  id v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289283;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    __int16 v8 = 1025;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ar,onEnhancedDeliveryStateChanged\", \"isEnhancedDeliveryEnabled\":%{private}hhd}", (uint8_t *)v5, 0x18u);
  }
  *a1 = a2;
}

void sub_100061954(uint64_t a1, int a2)
{
  id v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289283;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    __int16 v8 = 1025;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ar,onSubscriptionStateChange\", \"isSubscribed\":%{private}hhd}", (uint8_t *)v5, 0x18u);
  }
  *(unsigned char *)(a1 + 3) = a2;
}

void sub_100061A28(uint64_t a1, int a2)
{
  id v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289283;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    __int16 v8 = 1025;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ar,onCompanionNearby\", \"isNearby\":%{private}hhd}", (uint8_t *)v5, 0x18u);
  }
  *(unsigned char *)(a1 + 2) = a2;
}

void sub_100061AFC(uint64_t a1, int a2, int a3)
{
  __int16 v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 68289539;
    v7[1] = 0;
    __int16 v8 = 2082;
    int v9 = "";
    __int16 v10 = 1025;
    int v11 = a2;
    __int16 v12 = 1025;
    int v13 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ar,onMaVersionChange\", \"compVersion\":%{private}d, \"contentVersion\":%{private}d}", (uint8_t *)v7, 0x1Eu);
  }
  *(_DWORD *)(a1 + 24) = a3;
  *(_DWORD *)(a1 + 28) = a2;
}

void sub_100061BDC(unsigned __int8 *a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v25 = 0;
    __int16 v26 = 2082;
    uint64_t v27 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ar,onXpcActivityTriggered\"}", buf, 0x12u);
  }
  AnalyticsSendEventLazy();
  id v3 = (id)SALogObjectGeneral;
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    uint64_t v5 = SASettings::instance((SASettings *)v4);
    __int16 v6 = (SASettings *)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 56))(v5);
    int v7 = (int)v6;
    uint64_t v8 = SASettings::instance(v6);
    int v9 = (SASettings *)(*(uint64_t (**)(uint64_t))(*(void *)v8 + 48))(v8);
    int v10 = (int)v9;
    int v11 = *a1;
    int v12 = a1[2];
    uint64_t v13 = SASettings::instance(v9);
    uint64_t v14 = (SAPlatformInfo *)(*(uint64_t (**)(uint64_t))(*(void *)v13 + 64))(v13);
    int v15 = (int)v14;
    int v16 = a1[3];
    int v17 = *((unsigned __int8 *)SAPlatformInfo::instance(v14) + 11);
    int v18 = a1[1];
    int v19 = *((_DWORD *)a1 + 6);
    int v20 = *((_DWORD *)a1 + 7);
    *(_DWORD *)uint64_t buf = 68291587;
    __int16 v26 = 2082;
    int v25 = 0;
    uint64_t v27 = "";
    __int16 v28 = 1026;
    int v29 = v7;
    __int16 v30 = 1026;
    int v31 = v10;
    __int16 v32 = 1026;
    int v33 = v11;
    __int16 v34 = 1026;
    int v35 = v12;
    __int16 v36 = 1026;
    int v37 = v15;
    __int16 v38 = 1026;
    int v39 = v16;
    __int16 v40 = 1026;
    int v41 = v17;
    __int16 v42 = 1025;
    int v43 = v18;
    __int16 v44 = 1026;
    int v45 = v19;
    __int16 v46 = 1026;
    int v47 = v20;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ar,submitAdoptionRateMetrics\", \"isAmberAlertEnabled\":%{public}hhd, \"isEmergencyAlertEnabled\":%{public}hhd, \"isEnhancedDeliveryEnabled\":%{public}hhd, \"isMagnetMode\":%{public}hhd, \"isPublicSafetyEnabled\":%{public}hhd, \"isSubscribed\":%{public}hhd, \"isTinkerWatch\":%{public}hhd, \"userInCoveredRegion\":%{private}hhd, \"maContentVersion\":%{public}d, \"maCompatibilityVersion\":%{public}d}", buf, 0x4Eu);
  }

  AnalyticsSendEventLazy();
  int v21 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    int v22 = *(_DWORD *)(sub_10001E878()[1] + 76);
    int v23 = *(_DWORD *)(sub_10001E878()[1] + 72);
    *(_DWORD *)uint64_t buf = 68289539;
    int v25 = 0;
    __int16 v26 = 2082;
    uint64_t v27 = "";
    __int16 v28 = 1025;
    int v29 = v22;
    __int16 v30 = 1025;
    int v31 = v23;
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ar,submitCodebookAdoptionMetrics\", \"compatibilityVersion\":%{private}d, \"contentVersion\":%{private}d}", buf, 0x1Eu);
  }
}

void sub_100061F0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100061F28(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  BOOL v4 = v3;
  if (!v3)
  {
    uint64_t v8 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      goto LABEL_15;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v15) = 2082;
    *(void *)((char *)&v15 + 2) = "";
    int v9 = "{\"msg%{public}.0s\":\"#ar,processXpcActivity,activity is nil\"}";
LABEL_13:
    int v10 = buf;
    goto LABEL_14;
  }
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  __int16 v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v15) = 2082;
    *(void *)((char *)&v15 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ar,processXpcActivity\"}", buf, 0x12u);
  }
  if (!state) {
    goto LABEL_15;
  }
  if (state != 2)
  {
    uint64_t v8 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      goto LABEL_15;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v15) = 2082;
    *(void *)((char *)&v15 + 2) = "";
    int v9 = "{\"msg%{public}.0s\":\"#ar,processXpcActivity,unexpected xpcActivity\"}";
    goto LABEL_13;
  }
  int v7 = *(NSObject **)(v2 + 8);
  *(void *)uint64_t buf = _NSConcreteStackBlock;
  *(void *)&long long v15 = 3221225472;
  *((void *)&v15 + 1) = sub_100062194;
  int v16 = &unk_1000F5EA8;
  uint64_t v17 = v2;
  dispatch_async(v7, buf);
  if (!xpc_activity_set_state(v4, 5))
  {
    uint64_t v8 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
    {
      v11[0] = 68289026;
      v11[1] = 0;
      __int16 v12 = 2082;
      uint64_t v13 = "";
      int v9 = "{\"msg%{public}.0s\":\"#ar,processXpcActivity,failed to set state\"}";
      int v10 = (uint8_t *)v11;
LABEL_14:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, v9, v10, 0x12u);
    }
  }
LABEL_15:
}

void sub_10006217C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100062194(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 **)(a1 + 32);
  sub_100061BDC(v1);
}

void sub_10006221C(uint64_t a1)
{
}

id sub_100062224(SASettings *a1)
{
  uint64_t v1 = (unsigned __int8 *)*((void *)a1 + 4);
  v17[0] = @"isAmberAlertEnabled";
  uint64_t v2 = SASettings::instance(a1);
  int v16 = +[NSNumber numberWithBool:(*(uint64_t (**)(uint64_t))(*(void *)v2 + 56))(v2)];
  int v18 = v16;
  v17[1] = @"isEmergencyAlertEnabled";
  uint64_t v3 = SASettings::instance(v16);
  uint64_t v19 = +[NSNumber numberWithBool:(*(uint64_t (**)(uint64_t))(*(void *)v3 + 48))(v3)];
  v17[2] = @"isEnhancedDeliveryEnabled";
  BOOL v4 = +[NSNumber numberWithBool:*v1];
  int v20 = v4;
  void v17[3] = @"isMagnetMode";
  uint64_t v5 = +[NSNumber numberWithBool:v1[2]];
  int v21 = v5;
  void v17[4] = @"isPublicSafetyEnabled";
  uint64_t v6 = SASettings::instance(v5);
  int v7 = +[NSNumber numberWithBool:(*(uint64_t (**)(uint64_t))(*(void *)v6 + 64))(v6)];
  int v22 = v7;
  void v17[5] = @"isSubscribed";
  uint64_t v8 = +[NSNumber numberWithBool:v1[3]];
  int v23 = v8;
  v17[6] = @"isTinkerWatch";
  int v9 = +[NSNumber numberWithBool:*((unsigned __int8 *)SAPlatformInfo::instance(v8) + 11)];
  __int16 v24 = v9;
  v17[7] = @"maContentVersion";
  int v10 = +[NSNumber numberWithInt:*((unsigned int *)v1 + 6)];
  int v25 = v10;
  v17[8] = @"maCompatibilityVersion";
  int v11 = +[NSNumber numberWithInt:*((unsigned int *)v1 + 7)];
  __int16 v26 = v11;
  v17[9] = @"userInCoveredRegion";
  __int16 v12 = +[NSNumber numberWithBool:v1[1]];
  uint64_t v27 = v12;
  uint64_t v13 = (void *)v19;
  uint64_t v14 = +[NSDictionary dictionaryWithObjects:&v18 forKeys:v17 count:10];

  return v14;
}

void sub_1000624F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

NSDictionary *__cdecl sub_100062584(id a1)
{
  v5[0] = @"compatibilityVersion";
  uint64_t v1 = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(sub_10001E878()[1] + 76)];
  v5[1] = @"contentVersion";
  v6[0] = v1;
  uint64_t v2 = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(sub_10001E878()[1] + 72)];
  v6[1] = v2;
  uint64_t v3 = +[NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:2];

  return (NSDictionary *)v3;
}

void sub_100062678(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1000626A4()
{
}

void *sub_1000626B8()
{
  uint64_t result = operator new(0x10uLL);
  void *result = off_1000F8378;
  return result;
}

void sub_1000626F0(uint64_t a1, void *a2)
{
  *a2 = off_1000F8378;
}

void sub_100062718()
{
  v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v1[0] = 68289026;
    v1[1] = 0;
    __int16 v2 = 2082;
    uint64_t v3 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ar,onSettingsChanged\"}", (uint8_t *)v1, 0x12u);
  }
}

uint64_t sub_1000627CC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10006280C()
{
}

uint64_t sub_100062818(uint64_t a1, void *a2, double a3)
{
  id v5 = a2;
  *(void *)a1 = CFPropertyListCreateDeepCopy(kCFAllocatorDefault, v5, 1uLL);
  *(double *)(a1 + 8) = a3;
  int v6 = dword_100106DA8++;
  *(_DWORD *)(a1 + 16) = v6;
  sub_1000628C0(a1, (uint64_t)"#dbg,#pull,SAAlertObject()");

  return a1;
}

void sub_1000628A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000628C0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = *(_DWORD *)(a1 + 16);
    uint64_t v6 = *(void *)(a1 + 8);
    SACommonUtils::getAnyCmam(*(SACommonUtils **)a1, __p);
    if (v9 >= 0) {
      int v7 = __p;
    }
    else {
      int v7 = (void **)__p[0];
    }
    *(_DWORD *)uint64_t buf = 68290051;
    int v11 = 0;
    __int16 v12 = 2082;
    uint64_t v13 = "";
    __int16 v14 = 2082;
    uint64_t v15 = a2;
    __int16 v16 = 1026;
    int v17 = v5;
    __int16 v18 = 2050;
    uint64_t v19 = v6;
    __int16 v20 = 2081;
    int v21 = v7;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saAlertObject\", \"context\":%{public, location:escape_only}s, \"uid\":%{public}d, \"fTime\":\"%{public}0.1f\", \"cmam\":%{private, location:escape_only}s}", buf, 0x36u);
    if (v9 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_1000629F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100062A0C(uint64_t a1)
{
  *(void *)(a1 + 8) = 0xBFF0000000000000;

  return a1;
}

BOOL sub_100062A50(void **a1, void *a2)
{
  uint64_t v3 = a2;
  BOOL v4 = SALogObjectGeneral;
  if (v3)
  {
    int v5 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      SACommonUtils::getAnyCmam(v3, &__p);
      uint64_t v6 = (v28 & 0x80u) == 0 ? &__p : (void **)__p;
      *(_DWORD *)uint64_t buf = 68289283;
      int v30 = 0;
      __int16 v31 = 2082;
      __int16 v32 = "";
      __int16 v33 = 2081;
      __int16 v34 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#dbg,#saAlert,isSameSafetyAlert\", \"otherAlert\":%{private, location:escape_only}s}", buf, 0x1Cu);
      if ((char)v28 < 0) {
        operator delete(__p);
      }
    }

    sub_100062E34(&__p, v3);
    size_t v7 = v28;
    if ((v28 & 0x80u) != 0) {
      size_t v7 = v27;
    }
    if (!v7)
    {
      __int16 v14 = SALogObjectGeneral;
      BOOL v13 = 0;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        int v30 = 0;
        __int16 v31 = 2082;
        __int16 v32 = "";
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saAlert,isSameSafetyAlert,OtherAlertUidEmpty\"}", buf, 0x12u);
        BOOL v13 = 0;
      }
      goto LABEL_40;
    }
    sub_100062E34(&__s1, *a1);
    unsigned __int8 v8 = v25;
    if ((char)v25 < 0)
    {
      size_t v12 = v24;
      if (v24)
      {
        unsigned int v9 = v28;
        size_t v11 = v27;
        int v10 = __s1;
LABEL_20:
        if ((v9 & 0x80u) == 0) {
          size_t v15 = v9;
        }
        else {
          size_t v15 = v11;
        }
        if ((v9 & 0x80u) == 0) {
          p_p = &__p;
        }
        else {
          p_p = __p;
        }
        if (v15 >= v12) {
          size_t v17 = v12;
        }
        else {
          size_t v17 = v15;
        }
        BOOL v18 = memcmp(v10, p_p, v17) == 0;
        BOOL v13 = v15 == v12 && v18;
        uint64_t v19 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          p_s1 = &__s1;
          if ((v8 & 0x80u) != 0) {
            p_s1 = (void **)__s1;
          }
          *(_DWORD *)uint64_t buf = 68289795;
          int v30 = 0;
          __int16 v31 = 2082;
          __int16 v32 = "";
          __int16 v33 = 2081;
          __int16 v34 = p_s1;
          __int16 v35 = 2081;
          __int16 v36 = p_p;
          __int16 v37 = 1025;
          BOOL v38 = v13;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saAlert,isSameSafetyAlert\", \"self\":%{private, location:escape_only}s, \"otherAlert\":%{private, location:escape_only}s, \"compareResult\":%{private}hhd}", buf, 0x2Cu);
        }
LABEL_38:
        if ((char)v25 < 0) {
          operator delete(__s1);
        }
LABEL_40:
        if ((char)v28 < 0) {
          operator delete(__p);
        }
        goto LABEL_42;
      }
    }
    else if (v25)
    {
      unsigned int v9 = v28;
      int v10 = &__s1;
      size_t v11 = v27;
      size_t v12 = v25;
      goto LABEL_20;
    }
    int v21 = SALogObjectGeneral;
    BOOL v13 = 0;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v30 = 0;
      __int16 v31 = 2082;
      __int16 v32 = "";
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saAlert,isSameSafetyAlert,SelfAlertUidEmpty\"}", buf, 0x12u);
      BOOL v13 = 0;
    }
    goto LABEL_38;
  }
  BOOL v13 = 0;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v30 = 0;
    __int16 v31 = 2082;
    __int16 v32 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saAlert,#warning,isSameSafetyAlert,failed,otherAlertIsNil\"}", buf, 0x12u);
    BOOL v13 = 0;
  }
LABEL_42:

  return v13;
}

void sub_100062DF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  _Unwind_Resume(a1);
}

void sub_100062E34(void *a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3;
  if (v3)
  {
    int v5 = [v3 objectForKey:@"uid"];
    if (v5 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      id v6 = v5;
      sub_10000DD48(a1, (char *)[v6 UTF8String]);
    }
    else
    {
      size_t v7 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        v8[0] = 68289026;
        v8[1] = 0;
        __int16 v9 = 2082;
        int v10 = "";
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saAlert,isSameSafetyAlert,infoError,noMatch\"}", (uint8_t *)v8, 0x12u);
      }
      sub_10000DD48(a1, "");
    }
  }
  else
  {
    sub_10000DD48(a1, "");
  }
}

void sub_100062F88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_100062FBC(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  sub_10006386C((uint64_t)v21, a3);
  *a1 = off_1000F8470;
  sub_100063904(v21);
  *a1 = off_1000F83F8;
  id v6 = v5;
  a1[2] = 0;
  size_t v7 = (void **)(a1 + 2);
  a1[1] = v6;
  a1[3] = 0;
  a1[4] = 0;
  sub_10006386C((uint64_t)(a1 + 5), a3);
  unsigned __int8 v8 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v17 = 68289026;
    int v18 = 0;
    __int16 v19 = 2082;
    __int16 v20 = "";
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#motion,init\"}", (uint8_t *)&v17, 0x12u);
  }
  uint64_t v9 = objc_opt_new();
  int v10 = (void *)a1[3];
  a1[3] = v9;

  size_t v11 = (void *)a1[3];
  if (v11)
  {
    [v11 setUnderlyingQueue:a1[1]];
    id v12 = objc_alloc_init((Class)CMMotionActivityManager);
    BOOL v13 = *v7;
    NSObject *v7 = v12;

    if (*v7)
    {
      if (a1[3])
      {
        __int16 v14 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          int v17 = 68289026;
          int v18 = 0;
          __int16 v19 = 2082;
          __int16 v20 = "";
          size_t v15 = "{\"msg%{public}.0s\":\"#motion,Activity manager created\"}";
LABEL_10:
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, v15, (uint8_t *)&v17, 0x12u);
        }
      }
    }
  }
  else
  {
    __int16 v14 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v17 = 68289026;
      int v18 = 0;
      __int16 v19 = 2082;
      __int16 v20 = "";
      size_t v15 = "{\"msg%{public}.0s\":\"#motion,invalid motionOpQueue\"}";
      goto LABEL_10;
    }
  }

  return a1;
}

void sub_100063210(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100063260(uint64_t a1)
{
  *(void *)a1 = off_1000F83F8;
  __int16 v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 68289026;
    v7[1] = 0;
    __int16 v8 = 2082;
    uint64_t v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#motion,deinit\"}", (uint8_t *)v7, 0x12u);
  }
  id v3 = *(void **)(a1 + 16);
  if (v3)
  {
    [v3 stopActivityUpdates];
    BOOL v4 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = 0;
  }
  id v5 = *(void **)(a1 + 24);
  if (v5)
  {
    *(void *)(a1 + 24) = 0;
  }
  sub_100063904((void *)(a1 + 40));

  return a1;
}

void sub_100063388(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_100004CA4(a1);
  }
  _Unwind_Resume(a1);
}

void sub_100063398(uint64_t a1)
{
  sub_100063260(a1);

  operator delete();
}

uint64_t sub_1000633D0(uint64_t a1)
{
  __int16 v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v8 = 0;
    __int16 v9 = 2082;
    int v10 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#motion,startMonitoring\"}", buf, 0x12u);
  }
  id v3 = *(void **)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 24);
    if (v4)
    {
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      void v6[2] = sub_1000634EC;
      void v6[3] = &unk_1000F8418;
      v6[4] = a1;
      [v3 startActivityUpdatesToQueue:v4 withHandler:v6];
    }
  }
  return 1;
}

void sub_1000634EC(uint64_t a1, void *a2)
{
  id v4 = a2;
  uint64_t v5 = *(void *)(a1 + 32);
  id v16 = v4;
  size_t v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v18 = 0;
    __int16 v19 = 2082;
    __int16 v20 = "";
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#motion,cb\"}", buf, 0x12u);
  }
  if (v16)
  {
    int v8 = (id *)(v5 + 32);
    objc_storeStrong((id *)(v5 + 32), a2);
    if ([*(id *)(v5 + 32) stationary])
    {
      int v9 = 0;
    }
    else if ([*v8 walking])
    {
      int v9 = 1;
    }
    else if ([*v8 automotive])
    {
      int v9 = 3;
    }
    else if ([*v8 cycling])
    {
      int v9 = 4;
    }
    else
    {
      int v9 = 5;
    }
    int v10 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v11 = [*v8 stationary];
      unsigned int v12 = [*v8 walking];
      unsigned int v13 = [*v8 automotive];
      unsigned int v14 = [*v8 cycling];
      *(_DWORD *)uint64_t buf = 68290307;
      int v18 = 0;
      __int16 v19 = 2082;
      __int16 v20 = "";
      __int16 v21 = 1025;
      unsigned int v22 = v11;
      __int16 v23 = 1025;
      unsigned int v24 = v12;
      __int16 v25 = 1025;
      unsigned int v26 = v13;
      __int16 v27 = 1025;
      unsigned int v28 = v14;
      __int16 v29 = 1025;
      int v30 = v9;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#motion,cb\", \"isStationary\":%{private}hhd, \"walking\":%{private}hhd, \"automotive\":%{private}hhd, \"cycling\":%{private}hhd, \"fMotionState\":%{private}d}", buf, 0x30u);
    }

    uint64_t v15 = *(void *)(v5 + 64);
    *(_DWORD *)uint64_t buf = v9;
    if (!v15) {
      sub_100005520();
    }
    (*(void (**)(uint64_t, uint8_t *))(*(void *)v15 + 48))(v15, buf);
    *((_DWORD *)sub_100003318() + 12) = v9;
  }
}

void sub_100063768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1000637A0(uint64_t a1)
{
  __int16 v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    id v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#motion,stopMonitoring\"}", (uint8_t *)v4, 0x12u);
  }
  [*(id *)(a1 + 16) stopActivityUpdates];
  return 1;
}

uint64_t sub_10006386C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_100063904(void *a1)
{
  __int16 v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100063990()
{
}

uint64_t sub_1000639A4(uint64_t a1)
{
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  return a1;
}

void sub_100063AB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100063C58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100063C98(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v5 = [*(id *)(a1 + 32) content];
      id v6 = [v5 threadIdentifier];
      v7[0] = 68289539;
      v7[1] = 0;
      __int16 v8 = 2082;
      int v9 = "";
      __int16 v10 = 2113;
      unsigned int v11 = v6;
      __int16 v12 = 2113;
      id v13 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#notif,addNotificationRequest failed\", \"threadId\":%{private, location:escape_only}@, \"inUNError\":%{private, location:escape_only}@}", (uint8_t *)v7, 0x26u);
    }
  }
}

void sub_100063DA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_100063E14(void *a1, void *a2)
{
  id v3 = a2;
  *a1 = off_1000F8518;
  id v4 = (SAPlatformInfo *)v3;
  a1[1] = v4;
  a1[2] = 0;
  if (*((unsigned char *)SAPlatformInfo::instance(v4) + 9))
  {
    __int16 v5 = [[SAUnUserNotificationProxy alloc] initWithQueue:a1[1]];
    id v6 = (void *)a1[2];
    a1[2] = v5;
  }
  return a1;
}

void sub_100063E9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100063EBC(id *a1, uint64_t *a2, uint64_t a3)
{
  if (*((unsigned char *)SAPlatformInfo::instance((SAPlatformInfo *)a1) + 9))
  {
    if (*((char *)a2 + 23) < 0)
    {
      if (!a2[1]) {
        goto LABEL_11;
      }
      a2 = (uint64_t *)*a2;
    }
    else if (!*((unsigned char *)a2 + 23))
    {
LABEL_11:
      int v9 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        int v10 = 68289026;
        int v11 = 0;
        __int16 v12 = 2082;
        id v13 = "";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#notif,warning,emptyContent\"}", (uint8_t *)&v10, 0x12u);
      }
      return;
    }
    id v6 = +[NSString stringWithUTF8String:a2];
    size_t v7 = SALogObjectGeneral;
    BOOL v8 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v8)
      {
        int v10 = 68289283;
        int v11 = 0;
        __int16 v12 = 2082;
        id v13 = "";
        __int16 v14 = 2113;
        uint64_t v15 = v6;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#notif,\", \"str\":%{private, location:escape_only}@}", (uint8_t *)&v10, 0x1Cu);
      }
      [a1[2] postNotification:v6 withSilence:a3];
    }
    else if (v8)
    {
      int v10 = 68289026;
      int v11 = 0;
      __int16 v12 = 2082;
      id v13 = "";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#notif,warning,cantCreateDisplayStr\"}", (uint8_t *)&v10, 0x12u);
    }
  }
}

void sub_1000640A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1000640B8(uint64_t a1)
{
  return a1;
}

void sub_1000640EC(uint64_t a1)
{
  operator delete();
}

void *sub_100064140(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  sub_10005A218((uint64_t)v16, a3);
  *a1 = off_1000F7D78;
  sub_10005A2D8(v16);
  *a1 = off_1000F8558;
  id v6 = v5;
  a1[1] = v6;
  a1[2] = 0;
  sub_10005A218((uint64_t)(a1 + 3), a3);
  a1[7] = 0;
  size_t v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v12 = 68289026;
    int v13 = 0;
    __int16 v14 = 2082;
    uint64_t v15 = "";
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Wifi,init\"}", (uint8_t *)&v12, 0x12u);
  }
  id v8 = objc_alloc_init((Class)CWFInterface);
  int v9 = (void *)a1[2];
  a1[2] = v8;

  if (!a1[2])
  {
    int v10 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 68289026;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#wifi,init,unable to create cwInterface\"}", (uint8_t *)&v12, 0x12u);
    }
  }

  return a1;
}

void sub_100064308(_Unwind_Exception *a1)
{
  sub_10005A2D8(v3);

  _Unwind_Resume(a1);
}

uint64_t sub_100064348(uint64_t a1)
{
  *(void *)a1 = off_1000F8558;
  __int16 v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 68289026;
    v6[1] = 0;
    __int16 v7 = 2082;
    id v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Wifi,deinit\"}", (uint8_t *)v6, 0x12u);
  }
  id v3 = *(void **)(a1 + 16);
  if (v3)
  {
    [v3 invalidate];
    id v4 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = 0;
  }
  sub_10005A2D8((void *)(a1 + 24));

  return a1;
}

void sub_100064450(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_100004CA4(a1);
  }
  _Unwind_Resume(a1);
}

void sub_100064460(uint64_t a1)
{
  sub_100064348(a1);

  operator delete();
}

void sub_100064498(uint64_t a1)
{
  __int16 v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)int v13 = 2082;
    *(void *)&_DWORD v13[2] = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Wifi,startMonitoring\"}", buf, 0x12u);
  }
  id v3 = *(void **)(a1 + 16);
  if (v3)
  {
    [v3 activate];
    id v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)int v13 = 2082;
      *(void *)&_DWORD v13[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Wifi,setupMonitoringEvent\"}", buf, 0x12u);
    }
    id v5 = *(void **)(a1 + 16);
    if (v5)
    {
      *(void *)uint64_t buf = _NSConcreteStackBlock;
      *(void *)int v13 = 3221225472;
      *(void *)&v13[8] = sub_100002CDC;
      *(void *)&v13[16] = &unk_1000F8578;
      uint64_t v14 = a1;
      [v5 setEventHandler:buf];
    }
    else
    {
      __int16 v7 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)int v13 = 2082;
        *(void *)&_DWORD v13[2] = "";
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Wifi,setupMonitoringEvent,cwInterface nil\"}", buf, 0x12u);
      }
    }
    id v8 = *(void **)(a1 + 16);
    id v11 = 0;
    [v8 startMonitoringEventType:7 error:&v11];
    id v9 = v11;
    if (v9)
    {
      int v10 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289282;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)int v13 = 2082;
        *(void *)&_DWORD v13[2] = "";
        *(_WORD *)&v13[10] = 2114;
        *(void *)&v13[12] = v9;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Wifi,registerForLinkQualityNotifications\", \"error\":%{public, location:escape_only}@}", buf, 0x1Cu);
      }
    }
  }
  else
  {
    id v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)int v13 = 2082;
      *(void *)&_DWORD v13[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Wifi,startMonitoring,cwInterface is nil\"}", buf, 0x12u);
    }
  }
}

id sub_10006476C(uint64_t a1)
{
  __int16 v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    id v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Wifi,stopMonitoring\"}", (uint8_t *)v4, 0x12u);
  }
  id result = *(id *)(a1 + 16);
  if (result) {
    return [result stopMonitoringEventType:7];
  }
  return result;
}

uint64_t sub_100064834(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(void *)(a1 + 8) = 0;
  id v4 = (void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 0;
  id v5 = objc_alloc_init((Class)NSOperationQueue);
  id v6 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v5;

  __int16 v7 = *(void **)(a1 + 24);
  if (v7)
  {
    [v7 setName:@"com.apple.safetyalerts.doq"];
    [*(id *)(a1 + 24) setUnderlyingQueue:*(void *)a1];
    id v8 = +[NSURLSessionConfiguration defaultSessionConfiguration];
    if (!v8)
    {
      int v13 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
      {
        int v17 = 68289026;
        int v18 = 0;
        __int16 v19 = 2082;
        __int16 v20 = "";
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#safd,cannotInitConfig\"}", (uint8_t *)&v17, 0x12u);
      }
      goto LABEL_18;
    }
    if (qword_100106BA8 != -1) {
      dispatch_once(&qword_100106BA8, &stru_1000F8610);
    }
    id v9 = (id)qword_100106BB0;
    if (v9)
    {
      uint64_t v10 = +[NSURLSession sessionWithConfiguration:v8 delegate:v9 delegateQueue:*(void *)(a1 + 24)];
      id v11 = *v4;
      NSObject *v4 = (void *)v10;

      if (*v4)
      {
        *(unsigned char *)(a1 + 32) = 1;
LABEL_17:

LABEL_18:
        goto LABEL_19;
      }
      uint64_t v14 = SALogObjectGeneral;
      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
        goto LABEL_17;
      }
      int v17 = 68289026;
      int v18 = 0;
      __int16 v19 = 2082;
      __int16 v20 = "";
      uint64_t v15 = "{\"msg%{public}.0s\":\"#safd,cannotInitUrlSession\"}";
    }
    else
    {
      uint64_t v14 = SALogObjectGeneral;
      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
        goto LABEL_17;
      }
      int v17 = 68289026;
      int v18 = 0;
      __int16 v19 = 2082;
      __int16 v20 = "";
      uint64_t v15 = "{\"msg%{public}.0s\":\"#safd,cannotInitDelegate\"}";
    }
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, v15, (uint8_t *)&v17, 0x12u);
    goto LABEL_17;
  }
  int v12 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
  {
    int v17 = 68289026;
    int v18 = 0;
    __int16 v19 = 2082;
    __int16 v20 = "";
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#safd,cannotInitOperationQueue\"}", (uint8_t *)&v17, 0x12u);
  }
LABEL_19:

  return a1;
}

void sub_100064B18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id *sub_100064B64(id *a1)
{
  return a1;
}

BOOL sub_100064BA8(uint64_t a1, uint64_t *a2, uint64_t a3, int a4, uint64_t a5, double a6)
{
  if (!*(unsigned char *)(a1 + 32))
  {
    uint64_t v12 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      return 0;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v46 = 0;
    __int16 v47 = 2082;
    uint64_t v48 = "";
    id v9 = "{\"msg%{public}.0s\":\"#safd,notInitialized\"}";
    uint64_t v10 = v12;
    os_log_type_t v11 = OS_LOG_TYPE_ERROR;
LABEL_8:
    _os_log_impl((void *)&_mh_execute_header, v10, v11, v9, buf, 0x12u);
    return 0;
  }
  if (!*(unsigned char *)(a1 + 33))
  {
    uint64_t v15 = *((unsigned __int8 *)a2 + 23);
    int v16 = (char)v15;
    if ((v15 & 0x80u) != 0) {
      uint64_t v15 = a2[1];
    }
    if (!v15)
    {
      uint64_t v7 = SALogObjectGeneral;
      BOOL v8 = 0;
      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
        return v8;
      }
      *(_DWORD *)uint64_t buf = 68289026;
      int v46 = 0;
      __int16 v47 = 2082;
      uint64_t v48 = "";
      id v9 = "{\"msg%{public}.0s\":\"#safd,#warning,srcIsEmpty\"}";
      goto LABEL_5;
    }
    uint64_t v18 = *(unsigned __int8 *)(a3 + 23);
    if ((v18 & 0x80u) != 0) {
      uint64_t v18 = *(void *)(a3 + 8);
    }
    if (!v18)
    {
      uint64_t v7 = SALogObjectGeneral;
      BOOL v8 = 0;
      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
        return v8;
      }
      *(_DWORD *)uint64_t buf = 68289026;
      int v46 = 0;
      __int16 v47 = 2082;
      uint64_t v48 = "";
      id v9 = "{\"msg%{public}.0s\":\"#safd,#warning,dstIsEmpty\"}";
      goto LABEL_5;
    }
    if ((a4 - 1) >= 7)
    {
      uint64_t v7 = SALogObjectGeneral;
      BOOL v8 = 0;
      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
        return v8;
      }
      *(_DWORD *)uint64_t buf = 68289026;
      int v46 = 0;
      __int16 v47 = 2082;
      uint64_t v48 = "";
      id v9 = "{\"msg%{public}.0s\":\"#safd,#warning,invalidProtectionClass\"}";
      goto LABEL_5;
    }
    if (!*(void *)(a5 + 24))
    {
      uint64_t v7 = SALogObjectGeneral;
      BOOL v8 = 0;
      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
        return v8;
      }
      *(_DWORD *)uint64_t buf = 68289026;
      int v46 = 0;
      __int16 v47 = 2082;
      uint64_t v48 = "";
      id v9 = "{\"msg%{public}.0s\":\"#safd,#warning,invalidCallback\"}";
      goto LABEL_5;
    }
    if (v16 >= 0) {
      unsigned int v22 = a2;
    }
    else {
      unsigned int v22 = (uint64_t *)*a2;
    }
    __int16 v23 = +[NSString stringWithUTF8String:v22];
    unsigned int v24 = +[NSURL URLWithString:v23];

    if (!v24)
    {
      __int16 v27 = SALogObjectGeneral;
      BOOL v8 = 0;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        int v46 = 0;
        __int16 v47 = 2082;
        uint64_t v48 = "";
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#safd,#warning,cannotInitSrcUrl\"}", buf, 0x12u);
        BOOL v8 = 0;
      }
      goto LABEL_69;
    }
    __int16 v25 = +[NSMutableURLRequest requestWithURL:v24];
    unsigned int v26 = v25;
    if (!v25)
    {
      unsigned int v28 = SALogObjectGeneral;
      BOOL v8 = 0;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        int v46 = 0;
        __int16 v47 = 2082;
        uint64_t v48 = "";
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#safd,#warning,cannotInitNewRequest\"}", buf, 0x12u);
        BOOL v8 = 0;
      }
      goto LABEL_68;
    }
    if (a6 <= 0.0) {
      a6 = 300.0;
    }
    [v25 setTimeoutInterval:a6];
    if (*(char *)(a3 + 23) < 0)
    {
      sub_100004CB8(v43, *(void **)a3, *(void *)(a3 + 8));
    }
    else
    {
      *(_OWORD *)int v43 = *(_OWORD *)a3;
      uint64_t v44 = *(void *)(a3 + 16);
    }
    [v26 setAllowsCellularAccess:0 v43[0]];
    v57[0] = _NSConcreteStackBlock;
    v57[1] = 3321888768;
    v57[2] = sub_100065388;
    v57[3] = &unk_1000F85E0;
    void v57[4] = a1;
    if (SHIBYTE(v44) < 0)
    {
      sub_100004CB8(&__p, v43[0], (unint64_t)v43[1]);
    }
    else
    {
      long long __p = *(_OWORD *)v43;
      uint64_t v59 = v44;
    }
    int v61 = a4;
    sub_10004DB88((uint64_t)v60, a5);
    __int16 v29 = objc_retainBlock(v57);
    int v30 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      if (*((char *)a2 + 23) >= 0) {
        __int16 v31 = a2;
      }
      else {
        __int16 v31 = (uint64_t *)*a2;
      }
      if (*(char *)(a3 + 23) >= 0) {
        __int16 v32 = (void *)a3;
      }
      else {
        __int16 v32 = *(void **)a3;
      }
      *(_DWORD *)uint64_t buf = 68290051;
      int v46 = 0;
      __int16 v47 = 2082;
      uint64_t v48 = "";
      __int16 v49 = 2081;
      uint64_t v50 = v31;
      __int16 v51 = 2081;
      std::string::size_type v52 = v32;
      __int16 v53 = 1025;
      int v54 = a4;
      __int16 v55 = 2049;
      double v56 = a6;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#safd,requestedDownload\", \"src\":%{private, location:escape_only}s, \"dst\":%{private, location:escape_only}s, \"class\":%{private}d, \"timeout\":\"%{private}0.1f\"}", buf, 0x36u);
    }
    uint64_t v33 = [*(id *)(a1 + 8) downloadTaskWithRequest:v26 completionHandler:v29];
    __int16 v34 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = v33;

    __int16 v35 = *(void **)(a1 + 16);
    BOOL v8 = v35 != 0;
    if (v35)
    {
      *(unsigned char *)(a1 + 33) = 1;
      [v35 resume];
      uint64_t v36 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        int v46 = 0;
        __int16 v47 = 2082;
        uint64_t v48 = "";
        __int16 v37 = "{\"msg%{public}.0s\":\"#safd,initialized\"}";
        BOOL v38 = v36;
        uint32_t v39 = 18;
LABEL_63:
        _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, v37, buf, v39);
      }
    }
    else
    {
      uint64_t v40 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        if (*((char *)a2 + 23) >= 0) {
          int v41 = a2;
        }
        else {
          int v41 = (uint64_t *)*a2;
        }
        if (*(char *)(a3 + 23) >= 0) {
          __int16 v42 = (void *)a3;
        }
        else {
          __int16 v42 = *(void **)a3;
        }
        *(_DWORD *)uint64_t buf = 68290051;
        int v46 = 0;
        __int16 v47 = 2082;
        uint64_t v48 = "";
        __int16 v49 = 2081;
        uint64_t v50 = v41;
        __int16 v51 = 2081;
        std::string::size_type v52 = v42;
        __int16 v53 = 1025;
        int v54 = a4;
        __int16 v55 = 2049;
        double v56 = a6;
        __int16 v37 = "{\"msg%{public}.0s\":\"#safd,#warning,requestedDownloadFailed\", \"src\":%{private, location:escape_only}s"
              ", \"dst\":%{private, location:escape_only}s, \"class\":%{private}d, \"timeout\":\"%{private}0.1f\"}";
        BOOL v38 = v40;
        uint32_t v39 = 54;
        goto LABEL_63;
      }
    }

    sub_100021E70(v60);
    if (SHIBYTE(v59) < 0) {
      operator delete((void *)__p);
    }
    if (SHIBYTE(v44) < 0) {
      operator delete(v43[0]);
    }
LABEL_68:

LABEL_69:
    return v8;
  }
  uint64_t v7 = SALogObjectGeneral;
  BOOL v8 = 0;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v46 = 0;
    __int16 v47 = 2082;
    uint64_t v48 = "";
    id v9 = "{\"msg%{public}.0s\":\"#safd,#warning,concurrentDownloadsNotAllowed\"}";
LABEL_5:
    uint64_t v10 = v7;
    os_log_type_t v11 = OS_LOG_TYPE_DEFAULT;
    goto LABEL_8;
  }
  return v8;
}

void sub_10006530C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a14 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100065388(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(NSObject ***)(a1 + 32);
  id v11 = v7;
  id v12 = v8;
  id v13 = v9;
  if (v13)
  {
    uint64_t v14 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v32 = 0;
      __int16 v33 = 2082;
      __int16 v34 = "";
      __int16 v35 = 2113;
      *(void *)uint64_t v36 = v12;
      *(_WORD *)&uint8_t v36[8] = 2113;
      *(void *)&v36[10] = v13;
      uint64_t v15 = "{\"msg%{public}.0s\":\"#safd,downloadFailed\", \"response\":%{private, location:escape_only}@, \"error\":%{p"
            "rivate, location:escape_only}@}";
      int v16 = v14;
      uint32_t v17 = 38;
LABEL_19:
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, v15, buf, v17);
    }
LABEL_20:

LABEL_21:
    BOOL v25 = 0;
    goto LABEL_22;
  }
  if (!v12)
  {
    unsigned int v18 = -1;
    goto LABEL_16;
  }
  unsigned int v18 = [v12 statusCode];
  if (v18 != 200)
  {
LABEL_16:
    uint64_t v26 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      goto LABEL_20;
    }
    *(_DWORD *)uint64_t buf = 68289539;
    int v32 = 0;
    __int16 v33 = 2082;
    __int16 v34 = "";
    __int16 v35 = 1025;
    *(_DWORD *)uint64_t v36 = v18;
    *(_WORD *)&void v36[4] = 2113;
    *(void *)&v36[6] = v12;
    uint64_t v15 = "{\"msg%{public}.0s\":\"#safd,downloadFailedWithResponse\", \"resultCode\":%{private}d, \"response\":%{private,"
          " location:escape_only}@}";
    int v16 = v26;
LABEL_18:
    uint32_t v17 = 34;
    goto LABEL_19;
  }
  __int16 v19 = SALogObjectGeneral;
  if (!v11)
  {
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      goto LABEL_20;
    }
    *(_DWORD *)uint64_t buf = 68289539;
    int v32 = 0;
    __int16 v33 = 2082;
    __int16 v34 = "";
    __int16 v35 = 1025;
    *(_DWORD *)uint64_t v36 = 200;
    *(_WORD *)&void v36[4] = 2113;
    *(void *)&v36[6] = v12;
    uint64_t v15 = "{\"msg%{public}.0s\":\"#safd,tempFileInvalid\", \"resultCode\":%{private}d, \"response\":%{private, location:escape_only}@}";
    int v16 = v19;
    goto LABEL_18;
  }
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289539;
    int v32 = 0;
    __int16 v33 = 2082;
    __int16 v34 = "";
    __int16 v35 = 1025;
    *(_DWORD *)uint64_t v36 = 200;
    *(_WORD *)&void v36[4] = 2113;
    *(void *)&v36[6] = v12;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#safd,downloadSuccess\", \"resultCode\":%{private}d, \"response\":%{private, location:escape_only}@}", buf, 0x22u);
  }

  id v20 = [v11 path];
  id v21 = [v20 UTF8String];
  unsigned int v22 = (const char *)(a1 + 40);
  uint64_t v23 = a1 + 40;
  if (*(char *)(a1 + 63) < 0) {
    uint64_t v23 = *(void *)v22;
  }
  int v24 = sub_10005FD74((uint64_t)v21, v23);

  if (!v24) {
    goto LABEL_21;
  }
  if (*(char *)(a1 + 63) < 0) {
    unsigned int v22 = *(const char **)v22;
  }
  BOOL v25 = sub_10005FA7C(v22, *(unsigned int *)(a1 + 96));
LABEL_22:
  __int16 v27 = *v10;
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3321888768;
  _OWORD v28[2] = sub_100065764;
  void v28[3] = &unk_1000F85B0;
  void v28[4] = v10;
  sub_10004DB88((uint64_t)v29, a1 + 64);
  BOOL v30 = v25;
  dispatch_async(v27, v28);
  sub_100021E70(v29);
}

void sub_100065724(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100065764(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768;
  _DWORD v4[2] = sub_100065864;
  v4[3] = &unk_1000F85B0;
  void v4[4] = v2;
  sub_10004DB88((uint64_t)v5, a1 + 40);
  char v6 = *(unsigned char *)(a1 + 72);
  sub_100065864((uint64_t)v4);
  sub_100021E70(v5);
}

void sub_100065848(_Unwind_Exception *a1)
{
  sub_100021E70(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100065864(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 33) = 0;
  return sub_100045970(a1 + 40, *(unsigned char *)(a1 + 72));
}

uint64_t sub_10006587C(uint64_t a1, uint64_t a2)
{
  return sub_10004DB88(a1 + 40, a2 + 40);
}

void *sub_100065888(uint64_t a1)
{
  return sub_100021E70((void *)(a1 + 40));
}

uint64_t sub_100065890(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 63) < 0)
  {
    sub_100004CB8((unsigned char *)(a1 + 40), *(void **)(a2 + 40), *(void *)(a2 + 48));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = v4;
  }
  return sub_10004DB88(a1 + 64, a2 + 64);
}

void sub_1000658F8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 63) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100065914(uint64_t a1)
{
  sub_100021E70((void *)(a1 + 64));
  if (*(char *)(a1 + 63) < 0)
  {
    uint64_t v2 = *(void **)(a1 + 40);
    operator delete(v2);
  }
}

void sub_100065A80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100065AD8(id a1)
{
  qword_100106BB0 = objc_alloc_init(SAFileDownloaderDelegate);

  _objc_release_x1();
}

void *sub_100065B14(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  sub_100065E64((uint64_t)v15, a3);
  sub_10004DB88((uint64_t)v14, a4);
  *a1 = off_1000F86B8;
  sub_100021E70(v14);
  sub_100065DE0(v15);
  *a1 = off_1000F8640;
  id v8 = v7;
  a1[1] = v8;
  sub_100065E64((uint64_t)(a1 + 2), a3);
  sub_10004DB88((uint64_t)(a1 + 6), a4);
  id v9 = sub_100017698();
  v13[0] = off_1000F8708;
  v13[1] = a1;
  void v13[3] = v13;
  sub_10001797C((uint64_t)v9, 5, (uint64_t)v13);
  sub_10001802C(v13);
  uint64_t v10 = sub_100017698();
  v12[0] = off_1000F8708;
  v12[1] = a1;
  void v12[3] = v12;
  sub_10001797C((uint64_t)v10, 6, (uint64_t)v12);
  sub_10001802C(v12);

  return a1;
}

void sub_100065C94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10001802C(va);
  sub_100021E70(v5);
  sub_100065DE0(v4);

  _Unwind_Resume(a1);
}

uint64_t sub_100065D08(uint64_t a1, char a2, double a3, double a4, double a5, double a6, double a7)
{
  double v13 = a4;
  double v14 = a3;
  double v11 = a6;
  double v12 = a5;
  char v10 = a2;
  double v9 = a7;
  uint64_t v7 = *(void *)(a1 + 24);
  if (!v7) {
    sub_100005520();
  }
  return (*(uint64_t (**)(uint64_t, double *, double *, double *, double *, char *, double *))(*(void *)v7 + 48))(v7, &v14, &v13, &v12, &v11, &v10, &v9);
}

void sub_100065D80(uint64_t a1)
{
  sub_10006630C(a1);

  operator delete();
}

uint64_t sub_100065DB8()
{
  return 1;
}

uint64_t sub_100065DC0()
{
  return 1;
}

void *sub_100065DE0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_100065E64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100065F00()
{
}

void *sub_100065F14(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F8708;
  result[1] = v3;
  return result;
}

uint64_t sub_100065F5C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F8708;
  a2[1] = v2;
  return result;
}

void sub_100065F88(uint64_t a1, id *a2)
{
  id v3 = *a2;
  uint64_t v4 = *(void *)(a1 + 8);
  id v5 = *(NSObject **)(v4 + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  _DWORD v7[2] = sub_100066074;
  void v7[3] = &unk_1000F6B88;
  id v8 = v3;
  uint64_t v9 = v4;
  id v6 = v3;
  dispatch_async(v5, v7);
}

uint64_t sub_100066028(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100066068()
{
}

void sub_100066074(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = *(id *)(a1 + 32);
  id v3 = v2;
  if (!v2)
  {
    uint64_t v8 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_18;
    }
    int v14 = 68289026;
    int v15 = 0;
    __int16 v16 = 2082;
    uint32_t v17 = "";
    uint64_t v9 = "{\"msg%{public}.0s\":\"#lmTest,InvalidTestInputObject\"}";
    char v10 = v8;
    uint32_t v11 = 18;
    goto LABEL_17;
  }
  int int64 = xpc_dictionary_get_int64(v2, "TestMessageType");
  if (int64 == 5)
  {
    char v12 = xpc_dictionary_get_int64(v3, "LocationAuthorizationChanged") != 0;
    sub_100045970(v1 + 48, v12);
    goto LABEL_18;
  }
  if (int64 == 6)
  {
    double v5 = xpc_dictionary_get_double(v3, "LocationChangedLat");
    double v6 = xpc_dictionary_get_double(v3, "LocationChangedLon");
    double v7 = xpc_dictionary_get_double(v3, "LocationChangedHunc");
    if (v5 >= -90.0
      && v5 <= 90.0
      && v6 >= -180.0
      && v6 <= 180.0
      && (fabs(fabs(v5) + -0.0000001) > 0.0000001 || fabs(fabs(v6) + -0.0000001) > 0.0000001)
      && v7 > 0.0)
    {
      sub_100065D08(v1 + 16, 0, v5, v6, 0.0, v7, 0.0);
      goto LABEL_18;
    }
    uint64_t v13 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_18;
    }
    int v14 = 68289795;
    int v15 = 0;
    __int16 v16 = 2082;
    uint32_t v17 = "";
    __int16 v18 = 2049;
    double v19 = v5;
    __int16 v20 = 2049;
    double v21 = v6;
    __int16 v22 = 2049;
    double v23 = v7;
    uint64_t v9 = "{\"msg%{public}.0s\":\"#lmTest,InvalidTestInputs\", \"lat\":\"%{private}0.1f\", \"lon\":\"%{private}0.1f\", \"h"
         "unc\":\"%{private}0.1f\"}";
    char v10 = v13;
    uint32_t v11 = 48;
LABEL_17:
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, v9, (uint8_t *)&v14, v11);
  }
LABEL_18:
}

void sub_1000662F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10006630C(uint64_t a1)
{
  *(void *)a1 = off_1000F8640;
  sub_100021E70((void *)(a1 + 48));
  sub_100065DE0((void *)(a1 + 16));

  return a1;
}

void sub_100066360(void *a1)
{
  if (*((unsigned char *)sub_10003E368() + 241)) {
    operator new();
  }
  operator new();
}

void sub_10006641C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void *sub_100066458(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  sub_100005488((uint64_t)v7, a3);
  *a1 = off_1000F4CC0;
  sub_100005404(v7);
  *a1 = off_1000F8788;
  a1[1] = v5;
  return a1;
}

void sub_100066510(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10006652C(uint64_t a1)
{
  return a1;
}

void sub_100066558(uint64_t a1)
{
  operator delete();
}

void sub_1000665A4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  *(unsigned char *)a1 = 0;
  id v6 = v5;
  *(void *)(a1 + 8) = v6;
  sub_10006B054(a1 + 16, a3);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  sub_10001DDB8(v6);
}

void sub_100066654(_Unwind_Exception *a1)
{
  uint64_t v6 = *(void *)(v1 + 56);
  *(void *)(v1 + 56) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *v4;
  uint64_t *v4 = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  sub_10006B0EC(v3);

  _Unwind_Resume(a1);
}

uint64_t sub_1000666DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  sub_10006B0EC((void *)(a1 + 16));

  return a1;
}

void sub_100066770(uint64_t a1, uint64_t a2)
{
  sub_10006B054((uint64_t)buf, a2);
  uint64_t v3 = a1 + 16;
  if (buf != (uint8_t *)(a1 + 16))
  {
    uint64_t v4 = v14;
    uint64_t v5 = *(void *)(a1 + 40);
    if (v14 == buf)
    {
      if (v5 == v3)
      {
        (*(void (**)(uint8_t *, void *))(*(void *)buf + 24))(buf, v15);
        (*(void (**)(uint8_t *))(*(void *)v14 + 32))(v14);
        int v14 = 0;
        (*(void (**)(void, uint8_t *))(**(void **)(a1 + 40) + 24))(*(void *)(a1 + 40), buf);
        (*(void (**)(void))(**(void **)(a1 + 40) + 32))(*(void *)(a1 + 40));
        *(void *)(a1 + 40) = 0;
        int v14 = buf;
        (*(void (**)(void *, uint64_t))(v15[0] + 24))(v15, a1 + 16);
        (*(void (**)(void *))(v15[0] + 32))(v15);
      }
      else
      {
        (*(void (**)(uint8_t *, uint64_t))(*(void *)buf + 24))(buf, a1 + 16);
        (*(void (**)(uint8_t *))(*(void *)v14 + 32))(v14);
        int v14 = *(uint8_t **)(a1 + 40);
      }
      *(void *)(a1 + 40) = v3;
    }
    else if (v5 == v3)
    {
      (*(void (**)(uint64_t, uint8_t *))(*(void *)v3 + 24))(a1 + 16, buf);
      (*(void (**)(void))(**(void **)(a1 + 40) + 32))(*(void *)(a1 + 40));
      *(void *)(a1 + 40) = v14;
      int v14 = buf;
    }
    else
    {
      int v14 = *(uint8_t **)(a1 + 40);
      *(void *)(a1 + 40) = v4;
    }
  }
  sub_10006B0EC(buf);
  if (*(unsigned char *)a1)
  {
    uint64_t v6 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v13) = 2082;
    *(void *)((char *)&v13 + 2) = "";
    uint64_t v7 = "{\"msg%{public}.0s\":\"#bletransport,subscribeForBLEDiscovery\"}";
    goto LABEL_13;
  }
  if (*(void *)(a1 + 56))
  {
    *(void *)&long long v13 = 0x2000000;
    *(void *)uint64_t buf = *(id *)(a1 + 8);
    *((void *)&v13 + 1) = 0x10A0000001ALL;
    LODWORD(v14) = sub_100016F58();
    HIDWORD(v14) = sub_100016E60();
    uint64_t v8 = *(void *)(a1 + 56);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    _DWORD v9[2] = sub_100066C0C;
    void v9[3] = &unk_1000F87B8;
    uint32_t v11 = 0;
    void v9[4] = a1;
    v10[0] = off_1000F87E8;
    v10[1] = objc_retainBlock(v9);
    uint32_t v11 = v10;
    (*(void (**)(uint64_t, uint8_t *, void *))(*(void *)v8 + 24))(v8, buf, v10);
    sub_10005F7A0(v10);
    *(unsigned char *)a1 = 1;
  }
  else
  {
    uint64_t v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      LOWORD(v13) = 2082;
      *(void *)((char *)&v13 + 2) = "";
      uint64_t v7 = "{\"msg%{public}.0s\":\"#bletransport,subscribeForBLEDiscovery,invalid fBleTransportInterface\"}";
LABEL_13:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v7, buf, 0x12u);
    }
  }
}

void sub_100066BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id a19)
{
  _Unwind_Resume(a1);
}

void sub_100066C0C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v116 = a2;
  uint64_t v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v127 = 0;
    LOWORD(v128) = 2082;
    *(void *)((char *)&v128 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,onBleCoreAlertCb\"}", buf, 0x12u);
  }
  buf[0] = 0;
  long long v128 = 0u;
  long long v129 = 0u;
  long long v130 = 0u;
  long long v131 = 0u;
  long long v132 = 0u;
  long long v133 = 0u;
  long long v134 = 0u;
  long long v135 = 0u;
  long long v136 = 0u;
  long long v137 = 0u;
  long long v138 = 0u;
  long long v139 = 0u;
  char v140 = 0;
  int v141 = 1;
  long long v142 = 0u;
  long long v143 = 0u;
  long long v144 = 0u;
  long long v145 = 0u;
  long long v146 = 0u;
  long long v147 = 0u;
  long long v148 = 0u;
  char v149 = -1;
  uint64_t v150 = 0;
  __int16 v151 = -1022;
  unsigned int v152 = 0;
  uint64_t v153 = 0;
  uint64_t v125 = 0;
  memset(v124, 0, sizeof(v124));
  memset(v123, 0, 28);
  int v121 = 0;
  uint64_t v4 = [v116 safetyAlertsSignature];
  if ([v4 length])
  {
    uint64_t v5 = [v116 safetyAlertsAlertData];
    BOOL v6 = [v5 length] == 0;

    if (!v6)
    {
      uint64_t v7 = [v116 safetyAlertsAlertID];
      uint64_t v8 = [v116 safetyAlertsAlertID];
      int v9 = [v8 length];
      if (v9 >= 3) {
        int v10 = 3;
      }
      else {
        int v10 = v9;
      }
      [v7 getBytes:&v121 length:v10];

      uint32_t v11 = [v116 safetyAlertsSignature];
      char v12 = [v116 safetyAlertsSignature];
      [v11 getBytes:v124 length:[v12 length]];

      long long v13 = [v116 safetyAlertsAlertData];
      int v14 = [v116 safetyAlertsAlertData];
      [v13 getBytes:v123 length:[v14 length]];

      int v15 = [v116 safetyAlertsAlertData];
      id v16 = [v15 length];

      uint32_t v17 = (id)SALogObjectGeneral;
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v18 = [v116 safetyAlertsAlertData];
        id v19 = [v18 length];
        __int16 v20 = [v116 safetyAlertsSignature];
        double v21 = (void **)[v20 length];
        *(void *)uint64_t v154 = 68289539;
        *(_WORD *)&v154[8] = 2082;
        *(void *)&v154[10] = "";
        *(_WORD *)&v154[18] = 2049;
        *(void *)&v154[20] = v19;
        __int16 v155 = 2049;
        long long v156 = v21;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,onBleCoreAlertCb\", \"safetyAlertsAlertData.length\":%{private}llu, \"safetyAlertsSignature.length\":%{private}llu}", v154, 0x26u);
      }
      v119[0] = 0;
      v119[1] = 0;
      uint64_t v120 = 0;
      __p[0] = 0;
      __p[1] = 0;
      uint64_t v118 = 0;
      if (SACommonUtils::convertCharToHex((uint64_t)v124, 0x38u, (uint64_t)v119))
      {
        *(_OWORD *)&v154[12] = *(_OWORD *)((char *)v123 + 12);
        *(_OWORD *)uint64_t v154 = v123[0];
        v154[17] = 0;
        if (SACommonUtils::convertCharToHex((uint64_t)v154, 0x1Cu, (uint64_t)__p))
        {
          __int16 v22 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            double v23 = v119;
            if (v120 < 0) {
              double v23 = (void **)v119[0];
            }
            int v24 = __p;
            if (v118 < 0) {
              int v24 = (void **)__p[0];
            }
            *(void *)uint64_t v154 = 68289539;
            *(_WORD *)&v154[8] = 2082;
            *(void *)&v154[10] = "";
            *(_WORD *)&v154[18] = 2081;
            *(void *)&v154[20] = v23;
            __int16 v155 = 2081;
            long long v156 = v24;
            _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,onBleCoreAlertCb\", \"hexSignatureStringh\":%{private, location:escape_only}s, \"hexDataString\":%{private, location:escape_only}s}", v154, 0x26u);
          }
          BOOL v25 = sub_10001E878();
          if (sub_1000202A8((SAPlatformInfo *)v25, (uint64_t)v119, (uint64_t)__p))
          {
            uint64_t v26 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              *(void *)uint64_t v154 = 68289026;
              *(_WORD *)&v154[8] = 2082;
              *(void *)&v154[10] = "";
              _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,onBleCoreAlertCb,authenticated\"}", v154, 0x12u);
            }
            char v140 = 1;
          }
          char v27 = SACommonUtils::convertCharToHex((uint64_t)&v121, 3u, (uint64_t)&v138 + 8);
          uint64_t v28 = SALogObjectGeneral;
          if ((v27 & 1) == 0)
          {
            if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
              goto LABEL_55;
            }
            *(void *)uint64_t v154 = 68289026;
            *(_WORD *)&v154[8] = 2082;
            *(void *)&v154[10] = "";
            uint64_t v44 = "{\"msg%{public}.0s\":\"#bletransport,onBleCoreAlertCb,invalid UID\"}";
            int v45 = v28;
            goto LABEL_54;
          }
          __int16 v29 = (id)SALogObjectGeneral;
          if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v30 = [v116 safetyAlertsAlertID];
            __int16 v31 = (void *)v30;
            if (v139 >= 0) {
              int v32 = (void **)&v138 + 1;
            }
            else {
              int v32 = (void **)*((void *)&v138 + 1);
            }
            *(void *)uint64_t v154 = 68289795;
            *(_WORD *)&v154[8] = 2082;
            *(void *)&v154[10] = "";
            *(_WORD *)&v154[18] = 2113;
            *(void *)&v154[20] = v30;
            __int16 v155 = 2081;
            long long v156 = v32;
            __int16 v157 = 2081;
            unint64_t v158 = &v121;
            _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,onBleCoreAlertCb,UID\", \"data.inDevice.safetyAlertsAlertID\":%{private, location:escape_only}@, \"igneousAlertInformation.bleAlertUID\":%{private, location:escape_only}s, \"alertUID\":%{private, location:escape_only}s}", v154, 0x30u);
          }
          if (!v16)
          {
            int v46 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              *(void *)uint64_t v154 = 68289026;
              *(_WORD *)&v154[8] = 2082;
              *(void *)&v154[10] = "";
              _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid data\"}", v154, 0x12u);
            }
LABEL_158:
            int v43 = SALogObjectGeneral;
            if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
              goto LABEL_55;
            }
            *(void *)uint64_t v154 = 68289026;
            *(_WORD *)&v154[8] = 2082;
            *(void *)&v154[10] = "";
            uint64_t v44 = "{\"msg%{public}.0s\":\"#bletransport,onBleCoreAlertCb,PDU decode failed\"}";
            goto LABEL_53;
          }
          memset(v154, 0, 24);
          unint64_t v160 = 0;
          uint64_t v161 = 0;
          uint64_t v162 = 0;
          *(void *)__s = 0;
          int v34 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)&__s[4], v123, v16, 3u, 3uLL, __s, v33);
          int v35 = v34;
          if (v34)
          {
            *(_DWORD *)__s = v34;
            sub_10000DD48(v163, &__s[4]);
            if ((v154[23] & 0x80000000) != 0) {
              operator delete(*(void **)v154);
            }
            *(_OWORD *)uint64_t v154 = *(_OWORD *)v163;
            *(void *)&v154[16] = *(void *)&v163[16];
          }
          uint64_t v36 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(void *)long long v163 = 68289539;
            *(_WORD *)&v163[8] = 2082;
            *(void *)&v163[10] = "";
            *(_WORD *)&v163[18] = 1025;
            *(_DWORD *)&v163[20] = *(_DWORD *)__s;
            __int16 v164 = 2081;
            int v165 = v123;
            _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateRegionCode\", \"offset\":%{private}d, \"alertData\":%{private, location:escape_only}s}", v163, 0x22u);
          }
          if (v35)
          {
            int v38 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)&v154[24], (char *)v123 + *(unsigned int *)__s, v16, 2u, 2uLL, __s, v37);
            BOOL v39 = v38 != 0;
            if (v38) {
              *(_DWORD *)__s = v38;
            }
            int v40 = *(unsigned __int16 *)&v154[24];
            int v41 = SALogObjectGeneral;
            if (*(unsigned __int16 *)&v154[24] != 3 && *(unsigned __int16 *)&v154[24] >> 10 <= 0x3Eu)
            {
              if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
              {
                *(void *)long long v163 = 68289283;
                *(_WORD *)&v163[8] = 2082;
                *(void *)&v163[10] = "";
                *(_WORD *)&v163[18] = 1025;
                *(_DWORD *)&v163[20] = v40;
                _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateSender,invalid\", \"Sender\":%{private}d}", v163, 0x18u);
                BOOL v39 = 0;
                int v41 = SALogObjectGeneral;
              }
              else
              {
                BOOL v39 = 0;
              }
            }
            if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
            {
              *(void *)long long v163 = 68289283;
              *(_WORD *)&v163[8] = 2082;
              *(void *)&v163[10] = "";
              *(_WORD *)&v163[18] = 1025;
              *(_DWORD *)&v163[20] = *(_DWORD *)__s;
              _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateSender\", \"offset\":%{private}d}", v163, 0x18u);
            }
            if (v39)
            {
              int v50 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)&v154[26], (char *)v123 + *(unsigned int *)__s, v16, 1u, 1uLL, __s, v49);
              BOOL v51 = v50 != 0;
              if (v50) {
                *(_DWORD *)__s = v50;
              }
              int v52 = v154[26];
              __int16 v53 = SALogObjectGeneral;
              if (v154[26] != 18)
              {
                if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                {
                  *(void *)long long v163 = 68289283;
                  *(_WORD *)&v163[8] = 2082;
                  *(void *)&v163[10] = "";
                  *(_WORD *)&v163[18] = 1025;
                  *(_DWORD *)&v163[20] = v52;
                  _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateEventByte,invalid\", \"eventType\":%{private}d}", v163, 0x18u);
                  BOOL v51 = 0;
                  __int16 v53 = SALogObjectGeneral;
                }
                else
                {
                  BOOL v51 = 0;
                }
              }
              if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
              {
                *(void *)long long v163 = 68289283;
                *(_WORD *)&v163[8] = 2082;
                *(void *)&v163[10] = "";
                *(_WORD *)&v163[18] = 1025;
                *(_DWORD *)&v163[20] = *(_DWORD *)__s;
                _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateEventByte\", \"offset\":%{private}d}", v163, 0x18u);
              }
              if (v51)
              {
                __s[4] = 0;
                int v55 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)&__s[4], (char *)v123 + *(unsigned int *)__s, v16, 1u, 1uLL, __s, v54);
                BOOL v56 = v55 != 0;
                if (v55)
                {
                  *(_DWORD *)__s = v55;
                  v154[27] = __s[4] & 0xF;
                  int v57 = __s[4] >> 4;
                  LOBYTE(v155) = __s[4] >> 4;
                }
                else
                {
                  int v57 = v155;
                }
                uint64_t v58 = SALogObjectGeneral;
                if (v57 != 1)
                {
                  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                  {
                    *(void *)long long v163 = 68289539;
                    *(_WORD *)&v163[8] = 2082;
                    *(void *)&v163[10] = "";
                    *(_WORD *)&v163[18] = 1025;
                    *(_DWORD *)&v163[20] = v57;
                    __int16 v164 = 1025;
                    LODWORD(v165) = __s[4];
                    _os_log_impl((void *)&_mh_execute_header, v58, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateEventInfo,invalid\", \"eventInfoEventCategory\":%{private}d, \"unsignedByte\":%{private}d}", v163, 0x1Eu);
                    BOOL v56 = 0;
                    uint64_t v58 = SALogObjectGeneral;
                  }
                  else
                  {
                    BOOL v56 = 0;
                  }
                }
                if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT))
                {
                  *(void *)long long v163 = 68289283;
                  *(_WORD *)&v163[8] = 2082;
                  *(void *)&v163[10] = "";
                  *(_WORD *)&v163[18] = 1025;
                  *(_DWORD *)&v163[20] = *(_DWORD *)__s;
                  _os_log_impl((void *)&_mh_execute_header, v58, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateEventInfo\", \"offset\":%{private}d}", v163, 0x18u);
                }
                if (v56)
                {
                  __s[4] = 0;
                  int v60 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)&__s[4], (char *)v123 + *(unsigned int *)__s, v16, 1u, 1uLL, __s, v59);
                  BOOL v61 = v60 != 0;
                  if (v60)
                  {
                    *(_DWORD *)__s = v60;
                    int v62 = __s[4] & 0x1F;
                    HIBYTE(v155) = __s[4] & 0x1F;
                    LOBYTE(v156) = (__s[4] & 0x20) != 0;
                  }
                  else
                  {
                    int v62 = HIBYTE(v155);
                  }
                  __int16 v63 = SALogObjectGeneral;
                  if (v62 != 4)
                  {
                    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                    {
                      *(void *)long long v163 = 68289283;
                      *(_WORD *)&v163[8] = 2082;
                      *(void *)&v163[10] = "";
                      *(_WORD *)&v163[18] = 1025;
                      *(_DWORD *)&v163[20] = v62;
                      _os_log_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateAlertInfo,invalid\", \"alertInfoAlertType\":%{private}d}", v163, 0x18u);
                      BOOL v61 = 0;
                      __int16 v63 = SALogObjectGeneral;
                    }
                    else
                    {
                      BOOL v61 = 0;
                    }
                  }
                  if (os_log_type_enabled(v63, OS_LOG_TYPE_DEFAULT))
                  {
                    *(void *)long long v163 = 68289283;
                    *(_WORD *)&v163[8] = 2082;
                    *(void *)&v163[10] = "";
                    *(_WORD *)&v163[18] = 1025;
                    *(_DWORD *)&v163[20] = *(_DWORD *)__s;
                    _os_log_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateAlertInfo\", \"offset\":%{private}d}", v163, 0x18u);
                  }
                  if (v61)
                  {
                    if (sub_10006927C((uint64_t)v123, v16, (uint64_t)v154, (int *)__s, v64, v65, v66))
                    {
                      if (sub_100069488((uint64_t)v123, v16, (uint64_t)v154, (int *)__s, v67, v68, v69))
                      {
                        if (sub_100069594((uint64_t)v123, v16, (uint64_t)v154, (int *)__s, v70, v71, v72))
                        {
                          if (sub_100069740((uint64_t)v123, v16, (uint64_t)v154, (int *)__s, v73, v74, v75))
                          {
                            if (sub_100069958((uint64_t)v123, v16, (int *)__s, v76, v77, v78, v79))
                            {
                              if (sub_10006984C((uint64_t)v123, v16, (uint64_t)v154, (int *)__s, v80, v81, v82))
                              {
                                if (sub_100069A64((uint64_t)v123, v16, (uint64_t)v154, (int *)__s, v83, v84, v85))
                                {
                                  if (sub_100069B70((uint64_t)v123, v16, (uint64_t)v154, (int *)__s, v86, v87, v88))
                                  {
                                    if (sub_100069C7C((uint64_t)v123, v16, (uint64_t)v154, (int *)__s, v89, v90, v91))
                                    {
                                      if (sub_100069E24((uint64_t)v123, v16, (uint64_t)v154, (int *)__s, v92, v93, v94))
                                      {
                                        if (sub_100069FB4((uint64_t)v123, v16, (uint64_t)v154, (int *)__s, v95, v96, v97))
                                        {
                                          if (sub_10006A144((uint64_t)v123, v16, (uint64_t)v154, (int *)__s, v98, v99, v100))
                                          {
                                            if ((BYTE3(v156) & 1) == 0)
                                            {
LABEL_120:
                                              sub_10006A680((uint64_t *)v154, (uint64_t)buf);
                                              char v104 = 1;
                                              goto LABEL_149;
                                            }
                                            if (!sub_10006A250((uint64_t)v123, v16, (uint64_t)v154, (int *)__s, v101, v102, v103))
                                            {
                                              __int16 v47 = SALogObjectGeneral;
                                              if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))goto LABEL_148; {
                                              *(void *)long long v163 = 68289026;
                                              }
                                              *(_WORD *)&v163[8] = 2082;
                                              *(void *)&v163[10] = "";
                                              uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid Lang Code\"}";
                                              goto LABEL_147;
                                            }
                                            if (!sub_10006A35C((uint64_t)v123, v16, (uint64_t)v154, (int *)__s, v107, v108, v109))
                                            {
                                              __int16 v47 = SALogObjectGeneral;
                                              if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))goto LABEL_148; {
                                              *(void *)long long v163 = 68289026;
                                              }
                                              *(_WORD *)&v163[8] = 2082;
                                              *(void *)&v163[10] = "";
                                              uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invali"
                                                    "d CountryCode\"}";
                                              goto LABEL_147;
                                            }
                                            if (!sub_10006A468((uint64_t)v123, v16, (uint64_t)v154, (int *)__s, v110, v111, v112))
                                            {
                                              __int16 v47 = SALogObjectGeneral;
                                              if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))goto LABEL_148; {
                                              *(void *)long long v163 = 68289026;
                                              }
                                              *(_WORD *)&v163[8] = 2082;
                                              *(void *)&v163[10] = "";
                                              uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid MessageLen\"}";
                                              goto LABEL_147;
                                            }
                                            if (!v159
                                              || sub_10006A574((uint64_t)v123, v16, (uint64_t)v154, (int *)__s, v113, v114, v115))
                                            {
                                              goto LABEL_120;
                                            }
                                            __int16 v47 = SALogObjectGeneral;
                                            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                                            {
                                              *(void *)long long v163 = 68289026;
                                              *(_WORD *)&v163[8] = 2082;
                                              *(void *)&v163[10] = "";
                                              uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invali"
                                                    "d messageData\"}";
                                              goto LABEL_147;
                                            }
LABEL_148:
                                            sub_10006A680((uint64_t *)v154, (uint64_t)buf);
                                            char v104 = 0;
LABEL_149:
                                            if (SHIBYTE(v162) < 0) {
                                              operator delete(v160);
                                            }
                                            if ((v154[23] & 0x80000000) != 0) {
                                              operator delete(*(void **)v154);
                                            }
                                            if (v104)
                                            {
                                              unsigned int v152 = [v116 bleRSSI];
                                              uint64_t v105 = *(void *)(v2 + 40);
                                              int v43 = SALogObjectGeneral;
                                              BOOL v106 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
                                              if (v105)
                                              {
                                                if (v106)
                                                {
                                                  *(void *)uint64_t v154 = 68289026;
                                                  *(_WORD *)&v154[8] = 2082;
                                                  *(void *)&v154[10] = "";
                                                  _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,onBleCoreAlertCb,fOnBLEAlertCb\"}", v154, 0x12u);
                                                  uint64_t v105 = *(void *)(v2 + 40);
                                                  if (!v105) {
                                                    sub_100005520();
                                                  }
                                                }
                                                (*(void (**)(uint64_t, uint8_t *))(*(void *)v105 + 48))(v105, buf);
                                                goto LABEL_55;
                                              }
                                              if (!v106)
                                              {
LABEL_55:
                                                if (SHIBYTE(v118) < 0) {
                                                  operator delete(__p[0]);
                                                }
                                                if (SHIBYTE(v120) < 0) {
                                                  operator delete(v119[0]);
                                                }
                                                goto LABEL_59;
                                              }
                                              *(void *)uint64_t v154 = 68289026;
                                              *(_WORD *)&v154[8] = 2082;
                                              *(void *)&v154[10] = "";
                                              uint64_t v44 = "{\"msg%{public}.0s\":\"#bletransport,onBleCoreAlertCb,fOnBLEAlertCb failed\"}";
                                              goto LABEL_53;
                                            }
                                            goto LABEL_158;
                                          }
                                          __int16 v47 = SALogObjectGeneral;
                                          if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                                            goto LABEL_148;
                                          }
                                          *(void *)long long v163 = 68289026;
                                          *(_WORD *)&v163[8] = 2082;
                                          *(void *)&v163[10] = "";
                                          uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid Range\"}";
                                        }
                                        else
                                        {
                                          __int16 v47 = SALogObjectGeneral;
                                          if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                                            goto LABEL_148;
                                          }
                                          *(void *)long long v163 = 68289026;
                                          *(_WORD *)&v163[8] = 2082;
                                          *(void *)&v163[10] = "";
                                          uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid Lon\"}";
                                        }
                                      }
                                      else
                                      {
                                        __int16 v47 = SALogObjectGeneral;
                                        if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                                          goto LABEL_148;
                                        }
                                        *(void *)long long v163 = 68289026;
                                        *(_WORD *)&v163[8] = 2082;
                                        *(void *)&v163[10] = "";
                                        uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid Lat\"}";
                                      }
                                    }
                                    else
                                    {
                                      __int16 v47 = SALogObjectGeneral;
                                      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                                        goto LABEL_148;
                                      }
                                      *(void *)long long v163 = 68289026;
                                      *(_WORD *)&v163[8] = 2082;
                                      *(void *)&v163[10] = "";
                                      uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid GeoCode\"}";
                                    }
                                  }
                                  else
                                  {
                                    __int16 v47 = SALogObjectGeneral;
                                    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                                      goto LABEL_148;
                                    }
                                    *(void *)long long v163 = 68289026;
                                    *(_WORD *)&v163[8] = 2082;
                                    *(void *)&v163[10] = "";
                                    uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid MMI\"}";
                                  }
                                }
                                else
                                {
                                  __int16 v47 = SALogObjectGeneral;
                                  if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                                    goto LABEL_148;
                                  }
                                  *(void *)long long v163 = 68289026;
                                  *(_WORD *)&v163[8] = 2082;
                                  *(void *)&v163[10] = "";
                                  uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid magnitude\"}";
                                }
                              }
                              else
                              {
                                __int16 v47 = SALogObjectGeneral;
                                if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                                  goto LABEL_148;
                                }
                                *(void *)long long v163 = 68289026;
                                *(_WORD *)&v163[8] = 2082;
                                *(void *)&v163[10] = "";
                                uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid  advertiserTime\"}";
                              }
                            }
                            else
                            {
                              __int16 v47 = SALogObjectGeneral;
                              if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                                goto LABEL_148;
                              }
                              *(void *)long long v163 = 68289026;
                              *(_WORD *)&v163[8] = 2082;
                              *(void *)&v163[10] = "";
                              uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid res byte 1\"}";
                            }
                          }
                          else
                          {
                            __int16 v47 = SALogObjectGeneral;
                            if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                              goto LABEL_148;
                            }
                            *(void *)long long v163 = 68289026;
                            *(_WORD *)&v163[8] = 2082;
                            *(void *)&v163[10] = "";
                            uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid originTime\"}";
                          }
                        }
                        else
                        {
                          __int16 v47 = SALogObjectGeneral;
                          if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                            goto LABEL_148;
                          }
                          *(void *)long long v163 = 68289026;
                          *(_WORD *)&v163[8] = 2082;
                          *(void *)&v163[10] = "";
                          uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid ExpInfo\"}";
                        }
                      }
                      else
                      {
                        __int16 v47 = SALogObjectGeneral;
                        if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                          goto LABEL_148;
                        }
                        *(void *)long long v163 = 68289026;
                        *(_WORD *)&v163[8] = 2082;
                        *(void *)&v163[10] = "";
                        uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid sentTime\"}";
                      }
                    }
                    else
                    {
                      __int16 v47 = SALogObjectGeneral;
                      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                        goto LABEL_148;
                      }
                      *(void *)long long v163 = 68289026;
                      *(_WORD *)&v163[8] = 2082;
                      *(void *)&v163[10] = "";
                      uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid MsgInfo\"}";
                    }
                  }
                  else
                  {
                    __int16 v47 = SALogObjectGeneral;
                    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                      goto LABEL_148;
                    }
                    *(void *)long long v163 = 68289026;
                    *(_WORD *)&v163[8] = 2082;
                    *(void *)&v163[10] = "";
                    uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid AlertInfo\"}";
                  }
                }
                else
                {
                  __int16 v47 = SALogObjectGeneral;
                  if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                    goto LABEL_148;
                  }
                  *(void *)long long v163 = 68289026;
                  *(_WORD *)&v163[8] = 2082;
                  *(void *)&v163[10] = "";
                  uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid EventInfo\"}";
                }
              }
              else
              {
                __int16 v47 = SALogObjectGeneral;
                if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                  goto LABEL_148;
                }
                *(void *)long long v163 = 68289026;
                *(_WORD *)&v163[8] = 2082;
                *(void *)&v163[10] = "";
                uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid EventByte\"}";
              }
            }
            else
            {
              __int16 v47 = SALogObjectGeneral;
              if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                goto LABEL_148;
              }
              *(void *)long long v163 = 68289026;
              *(_WORD *)&v163[8] = 2082;
              *(void *)&v163[10] = "";
              uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid sender\"}";
            }
          }
          else
          {
            __int16 v47 = SALogObjectGeneral;
            if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
              goto LABEL_148;
            }
            *(void *)long long v163 = 68289026;
            *(_WORD *)&v163[8] = 2082;
            *(void *)&v163[10] = "";
            uint64_t v48 = "{\"msg%{public}.0s\":\"#bletransport,decodeEQAlertToBLEPacket,invalid region code\"}";
          }
LABEL_147:
          _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, v48, v163, 0x12u);
          goto LABEL_148;
        }
        int v43 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(void *)long long v163 = 68289026;
          *(_WORD *)&v163[8] = 2082;
          *(void *)&v163[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,preparePDUAndSignatureForValidation,invalid data\"}", v163, 0x12u);
          int v43 = SALogObjectGeneral;
        }
        if (!os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_55;
        }
      }
      else
      {
        int v43 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(void *)uint64_t v154 = 68289026;
          *(_WORD *)&v154[8] = 2082;
          *(void *)&v154[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,preparePDUAndSignatureForValidation,invalid signature\"}", v154, 0x12u);
          int v43 = SALogObjectGeneral;
        }
        if (!os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_55;
        }
      }
      *(void *)uint64_t v154 = 68289026;
      *(_WORD *)&v154[8] = 2082;
      *(void *)&v154[10] = "";
      uint64_t v44 = "{\"msg%{public}.0s\":\"#bletransport,onBleCoreAlertCb,invalid PDU or Sign\"}";
LABEL_53:
      int v45 = v43;
LABEL_54:
      _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, v44, v154, 0x12u);
      goto LABEL_55;
    }
  }
  else
  {
  }
  __int16 v42 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(void *)uint64_t v154 = 68289026;
    *(_WORD *)&v154[8] = 2082;
    *(void *)&v154[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,onBleCoreAlertCb,invalid data\"}", v154, 0x12u);
  }
LABEL_59:
  sub_100032BBC((uint64_t)buf);
}

void sub_100068320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  sub_100032BBC((uint64_t)&a37);

  _Unwind_Resume(a1);
}

uint64_t sub_100068428(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (!*(unsigned char *)a1 && os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 68289026;
    int v6 = 0;
    __int16 v7 = 2082;
    uint64_t v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,AlreadyUnsubscribedFromAlertOverBLE\"}", (uint8_t *)&v5, 0x12u);
    uint64_t v2 = SALogObjectGeneral;
  }
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 68289026;
    int v6 = 0;
    __int16 v7 = 2082;
    uint64_t v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,unsubscribeForBLEDiscovery\"}", (uint8_t *)&v5, 0x12u);
  }
  *(unsigned char *)a1 = 0;
  uint64_t v3 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = 0;
  if (v3 == a1 + 16)
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 16) + 32))(a1 + 16);
  }
  else if (v3)
  {
    (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
  }
  uint64_t result = *(void *)(a1 + 56);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
  }
  return result;
}

void sub_1000685E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,startAdvertisingIgneousAlert\"}", buf, 0x12u);
  }
  sub_1000690F8(a1);
  if (!*(void *)(a1 + 8))
  {
    char v12 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    long long v13 = "{\"msg%{public}.0s\":\"#bletransport,startAdvertisingIgneousAlert,fDispatchQueue invalid\"}";
    goto LABEL_19;
  }
  if (!*(void *)(a1 + 56))
  {
    char v12 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    long long v13 = "{\"msg%{public}.0s\":\"#bletransport,startAdvertisingIgneousAlert,invalid fBleTransportInterface\"}";
LABEL_19:
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v13, buf, 0x12u);
    return;
  }
  id location = 0;
  id v47 = 0;
  id v48 = 0;
  id v49 = 0;
  BOOL v50 = 1;
  *(void *)uint64_t buf = 0;
  *(void *)&uint8_t buf[8] = 0;
  *(void *)&buf[21] = 0;
  *(void *)&buf[16] = 0;
  int v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = a2 + 152;
    if (*(char *)(a2 + 175) < 0) {
      uint64_t v6 = *(void *)(a2 + 152);
    }
    *(_DWORD *)int v52 = 68289283;
    int v53 = 0;
    __int16 v54 = 2082;
    int v55 = "";
    __int16 v56 = 2081;
    uint64_t v57 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,getBleRelayData,\", \"alertData\":%{private, location:escape_only}s}", v52, 0x1Cu);
  }
  uint64_t v7 = *(unsigned __int8 *)(a2 + 175);
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *(void *)(a2 + 160);
  }
  if (!v7)
  {
    uint64_t v14 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_26;
    }
    *(_DWORD *)int v52 = 68289026;
    int v53 = 0;
    __int16 v54 = 2082;
    int v55 = "";
    int v15 = "{\"msg%{public}.0s\":\"#bletransport,getBleRelayData,invalid data\"}";
LABEL_24:
    id v16 = v14;
    uint32_t v17 = 18;
LABEL_25:
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, v15, v52, v17);
    goto LABEL_26;
  }
  unsigned int v51 = 0;
  if ((SACommonUtils::convertHexToChar(a2 + 152, (uint64_t)buf, 0x1Cu, &v51) & 1) == 0)
  {
    uint64_t v14 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_26;
    }
    *(_DWORD *)int v52 = 68289026;
    int v53 = 0;
    __int16 v54 = 2082;
    int v55 = "";
    int v15 = "{\"msg%{public}.0s\":\"#bletransport,getBleRelayData,can't read data\"}";
    goto LABEL_24;
  }
  unsigned int v8 = v51;
  if (v51 == 28)
  {
    double Current = CFAbsoluteTimeGetCurrent();
    double v10 = *(double *)(a2 + 216);
    buf[17] = (int)((Current - v10) * 1000.0 / (double)sub_100017358());
    uint32_t v11 = +[NSData dataWithBytes:buf length:28];
    goto LABEL_27;
  }
  uint64_t v27 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int v52 = 68289283;
    int v53 = 0;
    __int16 v54 = 2082;
    int v55 = "";
    __int16 v56 = 1025;
    LODWORD(v57) = v8;
    int v15 = "{\"msg%{public}.0s\":\"#bletransport,getBleRelayData,invalid data payload.\", \"encodedDataLen\":%{private}d}";
    id v16 = v27;
    uint32_t v17 = 24;
    goto LABEL_25;
  }
LABEL_26:
  uint32_t v11 = 0;
LABEL_27:
  id v18 = v47;
  id v47 = v11;

  unsigned int v51 = 0;
  uint64_t v60 = 0;
  long long v59 = 0u;
  memset(&buf[1], 0, 32);
  buf[0] = 48;
  id v19 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v20 = a2 + 128;
    if (*(char *)(a2 + 151) < 0) {
      uint64_t v20 = *(void *)(a2 + 128);
    }
    *(_DWORD *)int v52 = 68289283;
    int v53 = 0;
    __int16 v54 = 2082;
    int v55 = "";
    __int16 v56 = 2081;
    uint64_t v57 = v20;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,getSignature,\", \"Signature\":%{private, location:escape_only}s}", v52, 0x1Cu);
  }
  uint64_t v21 = *(unsigned __int8 *)(a2 + 151);
  if ((v21 & 0x80u) != 0) {
    uint64_t v21 = *(void *)(a2 + 136);
  }
  if (!v21)
  {
    double v23 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_48;
    }
    *(_DWORD *)int v52 = 68289026;
    int v53 = 0;
    __int16 v54 = 2082;
    int v55 = "";
    uint64_t v26 = "{\"msg%{public}.0s\":\"#bletransport,getSignature,invalid data\"}";
LABEL_47:
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, v26, v52, 0x12u);
    goto LABEL_48;
  }
  if ((SACommonUtils::convertHexToChar(a2 + 128, (uint64_t)buf, 0x38u, &v51) & 1) == 0)
  {
    double v23 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_48;
    }
    *(_DWORD *)int v52 = 68289026;
    int v53 = 0;
    __int16 v54 = 2082;
    int v55 = "";
    uint64_t v26 = "{\"msg%{public}.0s\":\"#bletransport,getSignature,can't read signature\"}";
    goto LABEL_47;
  }
  unsigned int v22 = v51;
  double v23 = SALogObjectGeneral;
  BOOL v24 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v22 != 56)
  {
    if (v24)
    {
      *(_DWORD *)int v52 = 68289026;
      int v53 = 0;
      __int16 v54 = 2082;
      int v55 = "";
      uint64_t v26 = "{\"msg%{public}.0s\":\"#bletransport,getSignature,invalid signature.\"}";
      goto LABEL_47;
    }
LABEL_48:
    BOOL v25 = 0;
    goto LABEL_49;
  }
  if (v24)
  {
    *(_DWORD *)int v52 = 68289283;
    int v53 = 0;
    __int16 v54 = 2082;
    int v55 = "";
    __int16 v56 = 1025;
    LODWORD(v57) = 56;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readIndexDataAndSignature,\", \"encodedDataLen\":%{private}d}", v52, 0x18u);
  }
  BOOL v25 = +[NSData dataWithBytes:buf length:56];
LABEL_49:
  id v28 = v48;
  id v48 = v25;

  unsigned int v51 = 48;
  __int16 v29 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v30 = a2 + 176;
    if (*(char *)(a2 + 199) < 0) {
      uint64_t v30 = *(void *)(a2 + 176);
    }
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 2081;
    *(void *)&buf[20] = v30;
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,getBleUID,\", \"bleAlertUID\":%{private, location:escape_only}s}", buf, 0x1Cu);
  }
  uint64_t v31 = *(unsigned __int8 *)(a2 + 199);
  if ((v31 & 0x80u) != 0) {
    uint64_t v31 = *(void *)(a2 + 184);
  }
  if (!v31)
  {
    uint64_t v36 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_67;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    __int16 v37 = "{\"msg%{public}.0s\":\"#bletransport,getBleUID,invalid data\"}";
LABEL_65:
    int v38 = v36;
    uint32_t v39 = 18;
LABEL_66:
    _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, v37, buf, v39);
    goto LABEL_67;
  }
  *(_DWORD *)int v52 = 0;
  if ((SACommonUtils::convertHexToChar(a2 + 176, (uint64_t)&v51, 3u, (unsigned int *)v52) & 1) == 0)
  {
    uint64_t v36 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_67;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    __int16 v37 = "{\"msg%{public}.0s\":\"#bletransport,getBleUID,can't read UID\"}";
    goto LABEL_65;
  }
  int v32 = *(_DWORD *)v52;
  __int16 v33 = SALogObjectGeneral;
  BOOL v34 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v32 == 3)
  {
    if (v34)
    {
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 1025;
      *(_DWORD *)&buf[20] = 3;
      _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,getBleUID,\", \"encodedDataLen\":%{private}d}", buf, 0x18u);
    }
    int v35 = +[NSData dataWithBytes:&v51 length:3];
    goto LABEL_68;
  }
  if (v34)
  {
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 1025;
    *(_DWORD *)&buf[20] = v32;
    __int16 v37 = "{\"msg%{public}.0s\":\"#bletransport,getBleUID,invalid UID.\", \"encodedDataLen\":%{private}d}";
    int v38 = v33;
    uint32_t v39 = 24;
    goto LABEL_66;
  }
LABEL_67:
  int v35 = 0;
LABEL_68:
  id v40 = v49;
  id v49 = v35;

  if (v47 && v48 && v49)
  {
    objc_storeStrong(&location, *(id *)(a1 + 8));
    int v45 = sub_100017050();
    int v46 = 266;
    BOOL v50 = sub_1000171E8();
    (*(void (**)(void, id *))(**(void **)(a1 + 56) + 16))(*(void *)(a1 + 56), &location);
    int v41 = *(void **)(a1 + 8);
    sub_10000DD48(&__p, "BLEActiveAdvertisingIntervalTimer");
    SATimer::create(v41);
  }
  __int16 v42 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,startAdvertisingIgneousAlert invalid BLE info\"}", buf, 0x12u);
  }
}

void sub_1000690AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, id a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
}

uint64_t sub_1000690F8(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289026;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,stopAdvertisingIgneousAlertOverBLE,advertiser release before\"}", (uint8_t *)v5, 0x12u);
  }
  uint64_t v3 = *(void *)(a1 + 56);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 40))(result);
    uint64_t result = *(void *)(a1 + 48);
    *(void *)(a1 + 48) = 0;
    if (result) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
    }
  }
  return result;
}

id *sub_100069238(id *a1)
{
  return a1;
}

BOOL sub_10006927C(uint64_t a1, void *a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, unsigned int *a7)
{
  unsigned __int8 v22 = 0;
  int v9 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)&v22, (void *)(a1 + *a4), a2, 1u, 1uLL, a4, a7);
  BOOL v10 = v9 != 0;
  if (v9)
  {
    *a4 = v9;
    unsigned int v11 = v22;
    int v12 = v22 & 3;
    *(unsigned char *)(a3 + 31) = v22 & 3;
    *(unsigned char *)(a3 + 32) = (v11 >> 3) & 0xF;
    *(unsigned char *)(a3 + 33) = v11 >> 7;
  }
  else
  {
    int v12 = *(unsigned __int8 *)(a3 + 31);
  }
  unsigned int v13 = *(unsigned __int16 *)(a3 + 24);
  BOOL v14 = !v12 && v13 > 0xFC00 || (v13 == 64512 || v13 == 3) && v12 == 1;
  int v17 = *(unsigned __int8 *)(a3 + 32);
  id v18 = SALogObjectGeneral;
  if (!v14 || v17 != 1)
  {
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v19 = *(unsigned __int8 *)(a3 + 33);
      *(_DWORD *)uint64_t buf = 68289795;
      int v24 = 0;
      __int16 v25 = 2082;
      uint64_t v26 = "";
      __int16 v27 = 1025;
      int v28 = v12;
      __int16 v29 = 1025;
      int v30 = v17;
      __int16 v31 = 1025;
      int v32 = v19;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateMsgInfo,invalid\", \"msgInfoMsgType\":%{private}d, \"msgInfoResponseType\":%{private}d, \"msgInfoLanguageFlag\":%{private}d}", buf, 0x24u);
      BOOL v10 = 0;
      id v18 = SALogObjectGeneral;
    }
    else
    {
      BOOL v10 = 0;
    }
  }
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    int v20 = *a4;
    *(_DWORD *)uint64_t buf = 68289283;
    int v24 = 0;
    __int16 v25 = 2082;
    uint64_t v26 = "";
    __int16 v27 = 1025;
    int v28 = v20;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateMsgInfo\", \"offset\":%{private}d}", buf, 0x18u);
  }
  return v10;
}

BOOL sub_100069488(uint64_t a1, void *a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, unsigned int *a7)
{
  int v8 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)(a3 + 36), (void *)(a1 + *a4), a2, 4u, 4uLL, a4, a7);
  int v9 = v8;
  if (v8) {
    *a4 = v8;
  }
  BOOL v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = *a4;
    v13[0] = 68289283;
    v13[1] = 0;
    __int16 v14 = 2082;
    int v15 = "";
    __int16 v16 = 1025;
    int v17 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readSentTime\", \"offset\":%{private}d}", (uint8_t *)v13, 0x18u);
  }
  return v9 != 0;
}

BOOL sub_100069594(uint64_t a1, void *a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, unsigned int *a7)
{
  unsigned __int8 v17 = 0;
  int v10 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)&v17, (void *)(a1 + *a4), a2, 1u, 1uLL, a4, a7);
  int v11 = v10;
  if (v10) {
    *a4 = v10;
  }
  int v12 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v13 = *(char *)(a1 + *a4);
    *(_DWORD *)uint64_t buf = 68289539;
    int v19 = 0;
    __int16 v20 = 2082;
    uint64_t v21 = "";
    __int16 v22 = 1025;
    int v23 = v13;
    __int16 v24 = 1025;
    int v25 = v17;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateExpInfo\", \"alertData[offset]\":%{private}d, \"unsignedByte\":%{private}d}", buf, 0x1Eu);
    int v12 = SALogObjectGeneral;
  }
  unsigned int v14 = v17;
  *(unsigned char *)(a3 + 40) = v17 & 3;
  *(unsigned char *)(a3 + 41) = v14 >> 2;
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    int v15 = *a4;
    *(_DWORD *)uint64_t buf = 68289283;
    int v19 = 0;
    __int16 v20 = 2082;
    uint64_t v21 = "";
    __int16 v22 = 1025;
    int v23 = v15;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateExpInfo\", \"offset\":%{private}d}", buf, 0x18u);
  }
  return v11 != 0;
}

BOOL sub_100069740(uint64_t a1, void *a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, unsigned int *a7)
{
  int v8 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)(a3 + 42), (void *)(a1 + *a4), a2, 2u, 2uLL, a4, a7);
  int v9 = v8;
  if (v8) {
    *a4 = v8;
  }
  int v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = *a4;
    v13[0] = 68289283;
    v13[1] = 0;
    __int16 v14 = 2082;
    int v15 = "";
    __int16 v16 = 1025;
    int v17 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readOriginTime\", \"offset\":%{private}d}", (uint8_t *)v13, 0x18u);
  }
  return v9 != 0;
}

BOOL sub_10006984C(uint64_t a1, void *a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, unsigned int *a7)
{
  int v8 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)(a3 + 96), (void *)(a1 + *a4), a2, 1u, 1uLL, a4, a7);
  int v9 = v8;
  if (v8) {
    *a4 = v8;
  }
  int v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = *a4;
    v13[0] = 68289283;
    v13[1] = 0;
    __int16 v14 = 2082;
    int v15 = "";
    __int16 v16 = 1025;
    int v17 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAdvertiserTime\", \"offset\":%{private}d}", (uint8_t *)v13, 0x18u);
  }
  return v9 != 0;
}

BOOL sub_100069958(uint64_t a1, void *a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int *a7)
{
  char v13 = 0;
  int v8 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)&v13, (void *)(a1 + *a3), a2, 1u, 1uLL, a3, a7);
  int v9 = v8;
  if (v8) {
    *a3 = v8;
  }
  int v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = *a3;
    *(_DWORD *)uint64_t buf = 68289283;
    int v15 = 0;
    __int16 v16 = 2082;
    int v17 = "";
    __int16 v18 = 1025;
    int v19 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateReserveByte\", \"offset\":%{private}d}", buf, 0x18u);
  }
  return v9 != 0;
}

BOOL sub_100069A64(uint64_t a1, void *a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, unsigned int *a7)
{
  int v8 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)(a3 + 46), (void *)(a1 + *a4), a2, 1u, 1uLL, a4, a7);
  int v9 = v8;
  if (v8) {
    *a4 = v8;
  }
  int v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = *a4;
    v13[0] = 68289283;
    v13[1] = 0;
    __int16 v14 = 2082;
    int v15 = "";
    __int16 v16 = 1025;
    int v17 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readMagnitude\", \"offset\":%{private}d}", (uint8_t *)v13, 0x18u);
  }
  return v9 != 0;
}

BOOL sub_100069B70(uint64_t a1, void *a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, unsigned int *a7)
{
  int v8 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)(a3 + 47), (void *)(a1 + *a4), a2, 1u, 1uLL, a4, a7);
  int v9 = v8;
  if (v8) {
    *a4 = v8;
  }
  int v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = *a4;
    v13[0] = 68289283;
    v13[1] = 0;
    __int16 v14 = 2082;
    int v15 = "";
    __int16 v16 = 1025;
    int v17 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readMMI\", \"offset\":%{private}d}", (uint8_t *)v13, 0x18u);
  }
  return v9 != 0;
}

BOOL sub_100069C7C(uint64_t a1, void *a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, unsigned int *a7)
{
  unsigned __int8 v18 = 0;
  unsigned int v10 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)&v18, (void *)(a1 + *a4), a2, 1u, 1uLL, a4, a7);
  unsigned int v11 = v10;
  if (v10)
  {
    *a4 = v10;
    int v12 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = *(char *)(a1 + v11);
      *(_DWORD *)uint64_t buf = 68289539;
      int v20 = 0;
      __int16 v21 = 2082;
      __int16 v22 = "";
      __int16 v23 = 1025;
      int v24 = v13;
      __int16 v25 = 1025;
      int v26 = v18;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateGeoCode\", \"alertData[offset]\":%{private}d, \"unsignedByte\":%{private}d}", buf, 0x1Eu);
    }
    unsigned int v14 = v18;
    *(unsigned char *)(a3 + 48) = v18 & 0xF;
    *(unsigned char *)(a3 + 49) = v14 >> 5;
  }
  int v15 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v16 = *a4;
    *(_DWORD *)uint64_t buf = 68289283;
    int v20 = 0;
    __int16 v21 = 2082;
    __int16 v22 = "";
    __int16 v23 = 1025;
    int v24 = v16;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateGeoCode\", \"offset\":%{private}d}", buf, 0x18u);
  }
  return v11 != 0;
}

BOOL sub_100069E24(uint64_t a1, void *a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, unsigned int *a7)
{
  int v16 = 0;
  int v9 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)&v16, (void *)(a1 + *a4), a2, 3u, 3uLL, a4, a7);
  int v10 = v9;
  if (v9)
  {
    *a4 = v9;
    int v11 = v16;
    *(_DWORD *)(a3 + 52) = v16;
    int v12 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v18 = 0;
      __int16 v19 = 2082;
      int v20 = "";
      __int16 v21 = 1025;
      int v22 = v11;
      __int16 v23 = 1025;
      int v24 = v11;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateLat\", \"epi_latitude\":%{private}d, \"intBytes\":%{private}d}", buf, 0x1Eu);
    }
  }
  int v13 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v14 = *a4;
    *(_DWORD *)uint64_t buf = 68289283;
    int v18 = 0;
    __int16 v19 = 2082;
    int v20 = "";
    __int16 v21 = 1025;
    int v22 = v14;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateLat\", \"offset\":%{private}d}", buf, 0x18u);
  }
  return v10 != 0;
}

BOOL sub_100069FB4(uint64_t a1, void *a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, unsigned int *a7)
{
  int v16 = 0;
  int v9 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)&v16, (void *)(a1 + *a4), a2, 3u, 3uLL, a4, a7);
  int v10 = v9;
  if (v9)
  {
    *a4 = v9;
    int v11 = v16;
    *(_DWORD *)(a3 + 56) = v16;
    int v12 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v18 = 0;
      __int16 v19 = 2082;
      int v20 = "";
      __int16 v21 = 1025;
      int v22 = v11;
      __int16 v23 = 1025;
      int v24 = v11;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateLon\", \"epi_longitude\":%{private}d, \"intBytes\":%{private}d}", buf, 0x1Eu);
    }
  }
  int v13 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v14 = *a4;
    *(_DWORD *)uint64_t buf = 68289283;
    int v18 = 0;
    __int16 v19 = 2082;
    int v20 = "";
    __int16 v21 = 1025;
    int v22 = v14;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateLon\", \"offset\":%{private}d}", buf, 0x18u);
  }
  return v10 != 0;
}

BOOL sub_10006A144(uint64_t a1, void *a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, unsigned int *a7)
{
  int v8 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)(a3 + 60), (void *)(a1 + *a4), a2, 1u, 1uLL, a4, a7);
  int v9 = v8;
  if (v8) {
    *a4 = v8;
  }
  int v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = *a4;
    v13[0] = 68289283;
    v13[1] = 0;
    __int16 v14 = 2082;
    int v15 = "";
    __int16 v16 = 1025;
    int v17 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateRange\", \"offset\":%{private}d}", (uint8_t *)v13, 0x18u);
  }
  return v9 != 0;
}

BOOL sub_10006A250(uint64_t a1, void *a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, unsigned int *a7)
{
  int v8 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)(a3 + 62), (void *)(a1 + *a4), a2, 2u, 2uLL, a4, a7);
  int v9 = v8;
  if (v8) {
    *a4 = v8;
  }
  int v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = *a4;
    v13[0] = 68289283;
    v13[1] = 0;
    __int16 v14 = 2082;
    int v15 = "";
    __int16 v16 = 1025;
    int v17 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateLanguageCode\", \"offset\":%{private}d}", (uint8_t *)v13, 0x18u);
  }
  return v9 != 0;
}

BOOL sub_10006A35C(uint64_t a1, void *a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, unsigned int *a7)
{
  int v8 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)(a3 + 64), (void *)(a1 + *a4), a2, 2u, 2uLL, a4, a7);
  int v9 = v8;
  if (v8) {
    *a4 = v8;
  }
  int v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = *a4;
    v13[0] = 68289283;
    v13[1] = 0;
    __int16 v14 = 2082;
    int v15 = "";
    __int16 v16 = 1025;
    int v17 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateCountryCode\", \"offset\":%{private}d}", (uint8_t *)v13, 0x18u);
  }
  return v9 != 0;
}

BOOL sub_10006A468(uint64_t a1, void *a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, unsigned int *a7)
{
  int v8 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)(a3 + 66), (void *)(a1 + *a4), a2, 1u, 1uLL, a4, a7);
  int v9 = v8;
  if (v8) {
    *a4 = v8;
  }
  int v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = *a4;
    v13[0] = 68289283;
    v13[1] = 0;
    __int16 v14 = 2082;
    int v15 = "";
    __int16 v16 = 1025;
    int v17 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateMessageLen\", \"offset\":%{private}d}", (uint8_t *)v13, 0x18u);
  }
  return v9 != 0;
}

BOOL sub_10006A574(uint64_t a1, void *a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, unsigned int *a7)
{
  int v8 = SACommonUtils::copyDataAndReturnNewLen((SACommonUtils *)(a3 + 72), (void *)(a1 + *a4), a2, *(unsigned __int16 *)(a3 + 66), *(unsigned __int16 *)(a3 + 66), a4, a7);
  int v9 = v8;
  if (v8) {
    *a4 = v8;
  }
  int v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = *a4;
    v13[0] = 68289283;
    v13[1] = 0;
    __int16 v14 = 2082;
    int v15 = "";
    __int16 v16 = 1025;
    int v17 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,readAndValidateMessageData\", \"offset\":%{private}d}", (uint8_t *)v13, 0x18u);
  }
  return v9 != 0;
}

void sub_10006A680(uint64_t *a1, uint64_t a2)
{
  int v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    if (*((char *)a1 + 23) >= 0) {
      __int16 v6 = a1;
    }
    else {
      __int16 v6 = (uint64_t *)*a1;
    }
    int v7 = *((unsigned __int16 *)a1 + 12);
    int v8 = *((unsigned __int8 *)a1 + 26);
    int v9 = *((unsigned __int8 *)a1 + 27);
    int v10 = *((unsigned __int8 *)a1 + 28);
    int v11 = *((unsigned __int8 *)a1 + 29);
    int v12 = *((unsigned __int8 *)a1 + 30);
    int v13 = *((unsigned __int8 *)a1 + 31);
    int v14 = *((unsigned __int8 *)a1 + 32);
    int v15 = *((unsigned __int8 *)a1 + 33);
    uint64_t v16 = *((unsigned int *)a1 + 9);
    int v17 = *((unsigned __int8 *)a1 + 40);
    int v18 = *((unsigned __int8 *)a1 + 41);
    int v19 = *((__int16 *)a1 + 21);
    int v20 = *((unsigned __int8 *)a1 + 96);
    int v21 = *((unsigned __int8 *)a1 + 46);
    int v22 = *((unsigned __int8 *)a1 + 47);
    int v23 = *((unsigned __int8 *)a1 + 48);
    int v24 = *((unsigned __int8 *)a1 + 49);
    int v25 = *((_DWORD *)a1 + 13);
    int v26 = *((_DWORD *)a1 + 14);
    int v27 = *((unsigned __int8 *)a1 + 60);
    *(_DWORD *)uint64_t buf = 68294659;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 2081;
    *(void *)&buf[20] = v6;
    __int16 v81 = 1025;
    *(_DWORD *)__int16 v82 = v7;
    *(_WORD *)&v82[4] = 1025;
    *(_DWORD *)&v82[6] = v8;
    LOWORD(v83) = 1025;
    *(_DWORD *)((char *)&v83 + 2) = v9;
    HIWORD(v83) = 1025;
    *(_DWORD *)uint64_t v84 = v10;
    *(_WORD *)&v84[4] = 1025;
    *(_DWORD *)&v84[6] = v11;
    __int16 v85 = 1025;
    *(_DWORD *)uint64_t v86 = v12;
    *(_WORD *)&void v86[4] = 1025;
    *(_DWORD *)&v86[6] = v13;
    LOWORD(v87) = 1025;
    *(_DWORD *)((char *)&v87 + 2) = v14;
    HIWORD(v87) = 1025;
    *(_DWORD *)__int16 v88 = v15;
    *(_WORD *)&v88[4] = 2049;
    *(void *)&v88[6] = v16;
    *(_WORD *)&v88[14] = 1025;
    *(_DWORD *)&v88[16] = v17;
    __int16 v89 = 1025;
    *(_DWORD *)uint64_t v90 = v18;
    *(_WORD *)&v90[4] = 1025;
    *(_DWORD *)&v90[6] = v19;
    LOWORD(v91) = 1025;
    *(_DWORD *)((char *)&v91 + 2) = v20;
    HIWORD(v91) = 1025;
    *(_DWORD *)uint64_t v92 = v21;
    *(_WORD *)&v92[4] = 1025;
    *(_DWORD *)&v92[6] = v22;
    __int16 v93 = 1025;
    *(_DWORD *)id v94 = v23;
    *(_WORD *)&v94[4] = 1025;
    *(_DWORD *)&v94[6] = v24;
    LOWORD(v95) = 1025;
    *(_DWORD *)((char *)&v95 + 2) = v25;
    HIWORD(v95) = 1025;
    *(_DWORD *)uint64_t v96 = v26;
    *(_WORD *)&v96[4] = 1025;
    *(_DWORD *)&v96[6] = v27;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,updateBleDataToAlertData\", \"regionCode\":%{private, location:escape_only}s, \"Sender\":%{private}d, \"eventType\":%{private}d, \"eventInfoPayloadLayout\":%{private}d, \"eventInfoEventCategory\":%{private}d, \"alertInfoAlertType\":%{private}d, \"alertInfoFloodFill\":%{private}d, \"msgInfoMsgType\":%{private}d, \"msgInfoResponseType\":%{private}d, \"msgInfoLanguageFlag\":%{private}d, \"sentTime\":%{private}llu, \"expirationLen\":%{private}d, \"expirationNum\":%{private}d, \"orginTimeOffsetFromSentTime\":%{private}d, \"bleAdvertiseTime\":%{private}d, \"Magnitude\":%{private}d, \"MMI\":%{private}d, \"GeoCodeType\":%{private}d, \"geoCodeScale\":%{private}d, \"epi_latitude\":%{private}d, \"epi_longitude\":%{private}d, \"effectiveDistance\":%{private}d}", buf, 0x9Eu);
  }
  sub_10000DD48(buf, "USGS_BLE");
  int v28 = (void **)(a2 + 32);
  if (*(char *)(a2 + 55) < 0) {
    operator delete(*v28);
  }
  *(_OWORD *)int v28 = *(_OWORD *)buf;
  *(void *)(a2 + 48) = *(void *)&buf[16];
  unint64_t v29 = 10.0;
  double v30 = (double)((*((unsigned char *)a1 + 46) & 0xF) + 10 * (*((unsigned __int8 *)a1 + 46) >> 4)) / 10.0;
  LODWORD(v29) = *((_DWORD *)a1 + 9);
  double v31 = (double)v29 + -978307200.0;
  *(double *)(a2 + 216) = v31;
  *(double *)(a2 + 280) = v30;
  *(double *)(a2 + 232) = v31;
  LOBYTE(v2) = *((unsigned char *)a1 + 96);
  unsigned int v32 = sub_100017358();
  double v33 = *(double *)(a2 + 216);
  *(double *)(a2 + 344) = v33 + (double)v2 * (double)v32 / 1000.0;
  unint64_t v34 = *((char *)a1 + 40);
  if (v34 <= 3) {
    *(double *)(a2 + 240) = v33 + (double)(dword_1000B6230[v34] * *((unsigned __int8 *)a1 + 41));
  }
  unsigned int v35 = *((unsigned __int16 *)a1 + 21);
  if ((v35 & 0x8000u) == 0) {
    int v36 = (v35 >> 2) & 0x1FFF;
  }
  else {
    int v36 = -((v35 >> 2) & 0x1FFF);
  }
  __int16 v37 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v39 = *(void *)(a2 + 224);
    *(_DWORD *)uint64_t buf = 68290051;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 2049;
    *(void *)&buf[20] = v39;
    __int16 v81 = 1025;
    *(_DWORD *)__int16 v82 = v36;
    *(_WORD *)&v82[4] = 1025;
    *(_DWORD *)&v82[6] = v35 & 3;
    LOWORD(v83) = 1025;
    *(_DWORD *)((char *)&v83 + 2) = v35 >> 15;
    _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,updateBleDataToAlertData\", \"OriginTime\":\"%{private}3f\", \"originTimeUnitCount\":%{private}d, \"originTimeUnit\":%{private}d, \"isNegative\":%{private}d}", buf, 0x2Eu);
  }
  switch(v35 & 3)
  {
    case 1u:
      LODWORD(v38) = *((_DWORD *)a1 + 9);
      double v41 = (double)v38 + -978307200.0;
      double v43 = (double)v36;
      goto LABEL_21;
    case 2u:
      LODWORD(v38) = *((_DWORD *)a1 + 9);
      double v41 = (double)v38 + -978307200.0;
      int v42 = 10 * v36;
      goto LABEL_19;
    case 3u:
      LODWORD(v38) = *((_DWORD *)a1 + 9);
      double v41 = (double)v38 + -978307200.0;
      int v42 = 60 * v36;
LABEL_19:
      double v43 = (double)v42;
LABEL_21:
      double v40 = v41 + v43;
      break;
    default:
      LODWORD(v38) = *((_DWORD *)a1 + 9);
      double v40 = (double)v38 + -978307200.0 + (double)v36 * 0.01;
      break;
  }
  *(double *)(a2 + 224) = v40;
  uint64_t v44 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 2049;
    *(double *)&buf[20] = v40;
    _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,updateBleDataToAlertData\", \"OriginTime\":\"%{private}3f\"}", buf, 0x1Cu);
  }
  *(unsigned char *)(a2 + 320) = *((unsigned char *)a1 + 26);
  if (*((char *)a1 + 23) >= 0) {
    int v45 = (char *)a1;
  }
  else {
    int v45 = (char *)*a1;
  }
  sub_10000DD48(buf, v45);
  int v46 = (void **)(a2 + 56);
  if (*(char *)(a2 + 79) < 0) {
    operator delete(*v46);
  }
  HIDWORD(v47) = *(_DWORD *)&buf[4];
  *(_OWORD *)int v46 = *(_OWORD *)buf;
  *(void *)(a2 + 72) = *(void *)&buf[16];
  LODWORD(v47) = *((_DWORD *)a1 + 9);
  double v48 = (double)v47 + -978307200.0;
  *(double *)(a2 + 208) = v48;
  uint64_t v49 = *(uint64_t *)((char *)a1 + 52);
  v50.i64[0] = v49;
  v50.i64[1] = HIDWORD(v49);
  float64x2_t v51 = vaddq_f64(vdivq_f64(vcvtq_f64_u64(v50), (float64x2_t)vdupq_n_s64(0x40E1940000000000uLL)), (float64x2_t)xmmword_1000B2390);
  *(float64x2_t *)(a2 + 264) = v51;
  *(_DWORD *)(a2 + 324) = *((unsigned __int8 *)a1 + 31);
  *(_DWORD *)(a2 + 328) = *((unsigned __int8 *)a1 + 29);
  *(_WORD *)(a2 + 332) = *((_WORD *)a1 + 12);
  double v52 = (double)((*((unsigned char *)a1 + 47) & 0xF) + 10 * (*((unsigned __int8 *)a1 + 47) >> 4)) / 10.0;
  *(double *)(a2 + 288) = v52;
  *(unsigned char *)a2 = 1;
  int v53 = *((unsigned __int8 *)a1 + 49);
  *(unsigned char *)(a2 + 335) = v53;
  *(unsigned char *)(a2 + 334) = *((unsigned char *)a1 + 48);
  float64x2_t v79 = v51;
  int v54 = *((unsigned __int8 *)a1 + 60);
  switch(v53)
  {
    case 0:
      goto LABEL_33;
    case 1:
      unsigned int v55 = 5 * v54;
      goto LABEL_40;
    case 2:
      v54 *= 5;
LABEL_33:
      unsigned int v55 = 2 * v54;
      goto LABEL_40;
    case 3:
      int v57 = 100;
      goto LABEL_39;
    case 4:
      int v57 = 200;
      goto LABEL_39;
    case 5:
      int v57 = 500;
      goto LABEL_39;
    case 6:
      int v57 = 1000;
      goto LABEL_39;
    case 7:
      int v57 = 2000;
LABEL_39:
      unsigned int v55 = v54 * v57;
LABEL_40:
      double v56 = (double)v55;
      break;
    default:
      double v56 = 0.0;
      break;
  }
  *(double *)(a2 + 312) = v56;
  uint64_t v58 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    if (*(char *)(a2 + 55) < 0)
    {
      if (*(void *)(a2 + 40)) {
        long long v59 = *(const char **)(a2 + 32);
      }
      else {
        long long v59 = "";
      }
    }
    else if (*(unsigned char *)(a2 + 55))
    {
      long long v59 = (const char *)(a2 + 32);
    }
    else
    {
      long long v59 = "";
    }
    int v60 = *(char *)(a2 + 31);
    if (v60 < 0)
    {
      BOOL v61 = *(const char **)(a2 + 8);
      BOOL v62 = *(void *)(a2 + 16) == 0;
    }
    else
    {
      BOOL v61 = (const char *)(a2 + 8);
      BOOL v62 = v60 == 0;
    }
    if (v62) {
      __int16 v63 = "";
    }
    else {
      __int16 v63 = v61;
    }
    int v64 = *(char *)(a2 + 199);
    if (v64 < 0)
    {
      uint64_t v65 = *(const char **)(a2 + 176);
      BOOL v66 = *(void *)(a2 + 184) == 0;
    }
    else
    {
      uint64_t v65 = (const char *)(a2 + 176);
      BOOL v66 = v64 == 0;
    }
    if (v66) {
      uint64_t v67 = "";
    }
    else {
      uint64_t v67 = v65;
    }
    if (*((char *)a1 + 23) < 0)
    {
      if (a1[1]) {
        uint64_t v68 = (const char *)*a1;
      }
      else {
        uint64_t v68 = "";
      }
    }
    else if (*((unsigned char *)a1 + 23))
    {
      uint64_t v68 = (const char *)a1;
    }
    else
    {
      uint64_t v68 = "";
    }
    uint64_t v69 = *(void *)(a2 + 216);
    uint64_t v70 = *(void *)(a2 + 224);
    uint64_t v71 = *(void *)(a2 + 232);
    uint64_t v72 = *(void *)(a2 + 240);
    uint64_t v73 = *(void *)(a2 + 280);
    uint64_t v75 = *(void *)(a2 + 248);
    uint64_t v74 = *(void *)(a2 + 256);
    uint64_t v76 = *(void *)(a2 + 296);
    uint64_t v77 = *(void *)(a2 + 304);
    uint64_t v78 = *(void *)(a2 + 344);
    *(_DWORD *)uint64_t buf = 68293891;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 2081;
    *(void *)&buf[20] = v59;
    __int16 v81 = 2081;
    *(void *)__int16 v82 = v63;
    *(_WORD *)&v82[8] = 2081;
    uint64_t v83 = v67;
    *(_WORD *)uint64_t v84 = 2081;
    *(void *)&v84[2] = v68;
    __int16 v85 = 2049;
    *(double *)uint64_t v86 = v48;
    *(_WORD *)&v86[8] = 2049;
    uint64_t v87 = v69;
    *(_WORD *)__int16 v88 = 2049;
    *(void *)&v88[2] = v70;
    *(_WORD *)&v88[10] = 2049;
    *(void *)&v88[12] = v71;
    __int16 v89 = 2049;
    *(void *)uint64_t v90 = v72;
    *(_WORD *)&v90[8] = 2049;
    uint64_t v91 = v74;
    *(_WORD *)uint64_t v92 = 2049;
    *(float64_t *)&v92[2] = v79.f64[0];
    __int16 v93 = 2049;
    *(float64_t *)id v94 = v79.f64[1];
    *(_WORD *)&v94[8] = 2049;
    uint64_t v95 = v73;
    *(_WORD *)uint64_t v96 = 2049;
    *(void *)&v96[2] = v75;
    __int16 v97 = 2049;
    uint64_t v98 = v76;
    __int16 v99 = 2049;
    uint64_t v100 = v77;
    __int16 v101 = 2049;
    double v102 = v52;
    __int16 v103 = 2049;
    uint64_t v104 = v78;
    __int16 v105 = 1025;
    int v106 = (int)v56;
    _os_log_impl((void *)&_mh_execute_header, v58, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,updateBleDataToAlertData\", \"source\":%{private, location:escape_only}s, \"uid\":%{private, location:escape_only}s, \"bleAlertUID\":%{private, location:escape_only}s, \"regionCode\":%{private, location:escape_only}s, \"ingress_to_server_ts\":\"%{private}0.3f\", \"egress_from_source_ts\":\"%{private}0.3f\", \"event_origin_ts\":\"%{private}0.3f\", \"effective\":\"%{private}0.3f\", \"expires\":\"%{private}0.3f\", \"event_update_number\":\"%{private}0.3f\", \"epi_latitude\":\"%{private}0.3f\", \"epi_longitude\":\"%{private}0.3f\", \"magnitude\":\"%{private}0.3f\", \"depth\":\"%{private}0.3f\", \"mmiLat\":\"%{private}0.3f\", \"mmiLon\":\"%{private}0.3f\", \"mmiLevel\":\"%{private}0.3f\", \"bleAdvertiseTime\":\"%{private}0.3f\", \"effectiveDistance\":%{private}d}", buf, 0xCCu);
  }
}

uint64_t sub_10006AE28(uint64_t a1)
{
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *sub_10006AE6C(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    __int16 v6 = result;
    sub_10006AEF4(result, a4);
    uint64_t result = (void *)sub_10006AF4C((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_10006AED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_10006AFD0(&a9);
  _Unwind_Resume(a1);
}

char *sub_10006AEF4(void *a1, unint64_t a2)
{
  if (a2 >= 0xEA0EA0EA0EA0EBLL) {
    sub_1000050E8();
  }
  uint64_t result = (char *)sub_10001DC5C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[280 * v4];
  return result;
}

uint64_t sub_10006AF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_10001D54C(a4 + v7, a2 + v7);
      v7 += 280;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_10006AFAC(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 280;
    do
    {
      sub_10001DAB4(v4 + v2);
      v2 -= 280;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_10006AFD0(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    int v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = sub_10001DAB4(v4 - 280);
      while ((void *)v4 != v2);
      int v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_10006B054(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_10006B0EC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_10006B170(uint64_t a1)
{
  return a1;
}

void sub_10006B19C(uint64_t a1)
{
  operator delete();
}

uint64_t sub_10006B1E8()
{
  return 0;
}

id sub_10006B1F0(uint64_t a1, void *a2)
{
  *a2 = off_1000F87E8;
  id result = objc_retainBlock(*(id *)(a1 + 8));
  a2[1] = result;
  return result;
}

uint64_t sub_10006B238(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  return _objc_release_x1();
}

uint64_t sub_10006B248(uint64_t a1, id *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  id v3 = *a2;
  uint64_t v4 = *(uint64_t (**)(uint64_t, id))(v2 + 16);

  return v4(v2, v3);
}

uint64_t sub_10006B290(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F8858)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10006B2D0()
{
  return &off_1000F8858;
}

void sub_10006B2E0()
{
}

void *sub_10006B2F4(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F8878;
  result[1] = v3;
  return result;
}

uint64_t sub_10006B33C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F8878;
  a2[1] = v2;
  return result;
}

uint64_t sub_10006B368(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    __int16 v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bletransport,BLEActiveAdvertisingIntervalTimerCb\"}", (uint8_t *)v4, 0x12u);
  }
  return sub_1000690F8(v1);
}

uint64_t sub_10006B428(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10006B468()
{
}

char *sub_10006B474()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_100106BB8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_100106BB8))
  {
    sub_10006DD7C();
    __cxa_atexit((void (*)(void *))sub_10006B504, &byte_100106BC0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_100106BB8);
  }
  return &byte_100106BC0;
}

void sub_10006B4EC(_Unwind_Exception *a1)
{
}

uint64_t sub_10006B504(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 472);
  *(void *)(a1 + 472) = 0;
  if (v2) {
    operator delete();
  }
  uint64_t v3 = *(void **)(a1 + 448);
  if (v3)
  {
    *(void *)(a1 + 456) = v3;
    operator delete(v3);
  }
  sub_100032B20(a1 + 176);
  __int16 v5 = (void **)(a1 + 152);
  sub_10006AFD0(&v5);
  if (*(char *)(a1 + 119) < 0) {
    operator delete(*(void **)(a1 + 96));
  }
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  return a1;
}

void sub_10006B5B4(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = (const char *)(a1 + 24);
    if (*(char *)(a1 + 47) < 0)
    {
      if (*(void *)(a1 + 32)) {
        uint64_t v3 = *(const char **)v3;
      }
      else {
        uint64_t v3 = "<empty>";
      }
    }
    else if (!*(unsigned char *)(a1 + 47))
    {
      uint64_t v3 = "<empty>";
    }
    uint64_t v4 = (void *)(a1 + 72);
    if (*(char *)(a1 + 95) < 0) {
      uint64_t v4 = (void *)*v4;
    }
    int v6 = *(_DWORD *)(a1 + 12);
    int v5 = *(_DWORD *)(a1 + 16);
    int v8 = *(_DWORD *)(a1 + 4);
    int v7 = *(_DWORD *)(a1 + 8);
    uint64_t v9 = (void *)(a1 + 96);
    if (*(char *)(a1 + 119) < 0) {
      uint64_t v9 = (void *)*v9;
    }
    v10[0] = 68290819;
    __int16 v11 = 2082;
    v10[1] = 0;
    int v12 = "";
    __int16 v13 = 1025;
    int v14 = v8;
    __int16 v15 = 1025;
    int v16 = v6;
    __int16 v17 = 1025;
    int v18 = v5;
    __int16 v19 = 1025;
    int v20 = v7;
    __int16 v21 = 2081;
    int v22 = v3;
    __int16 v23 = 2081;
    int v24 = v4;
    __int16 v25 = 2081;
    int v26 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#assetConfig,log\", \"pullpc\":%{private}d, \"appc\":%{private}d, \"efficacyParticipationPercentage\":%{private}d, \"wowControls\":%{private}d, \"pullCname\":%{private, location:escape_only}s, \"efficacyManifestFileName\":%{private, location:escape_only}s, \"codebookFileName\":%{private, location:escape_only}s}", (uint8_t *)v10, 0x48u);
  }
}

void sub_10006B70C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    buf[0].__r_.__value_.__r.__words[0] = 68289283;
    LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    WORD1(buf[0].__r_.__value_.__r.__words[2]) = 2113;
    *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[2] + 4) = (std::string::size_type)v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#dbg,#assetConfig,onAssetReceived\", \"asset\":%{private, location:escape_only}@}", (uint8_t *)buf, 0x1Cu);
  }
  id v5 = v3;
  int v6 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    buf[0].__r_.__value_.__r.__words[0] = 68289283;
    LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    WORD1(buf[0].__r_.__value_.__r.__words[2]) = 2113;
    *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[2] + 4) = (std::string::size_type)v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#dbg,#assetConfig,readAPNConfigAsset\", \"asset\":%{private, location:escape_only}@}", (uint8_t *)buf, 0x1Cu);
  }

  if (!v5)
  {
    __int16 v11 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_81;
    }
    buf[0].__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    int v12 = "{\"msg%{public}.0s\":\"#assetConfig,#warning,readAPNConfigAsset,nilAssetDictionary\"}";
    goto LABEL_15;
  }
  int v7 = [v5 objectForKey:@"config"];
  if (!v7 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {

    __int16 v11 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_81;
    }
    buf[0].__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    int v12 = "{\"msg%{public}.0s\":\"#assetConfig,#warning,readAPNConfigAsset,nilConfig\"}";
LABEL_15:
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v12, (uint8_t *)buf, 0x12u);
    goto LABEL_81;
  }
  id v8 = v7;

  uint64_t v9 = [v8 objectForKey:@"metrics"];
  if (v9 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    id v10 = v9;
  }
  else {
    id v10 = 0;
  }

  *(_DWORD *)(a1 + 4) = -1;
  __int16 v13 = [v10 objectForKey:@"pullpc"];
  if (v13)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *(_DWORD *)(a1 + 4) = [v13 intValue];
    }
  }

  *(_DWORD *)(a1 + 12) = -1;
  int v14 = [v10 objectForKey:@"appc"];
  if (v14)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *(_DWORD *)(a1 + 12) = [v14 intValue];
    }
  }

  *(_DWORD *)(a1 + 16) = 100;
  __int16 v15 = [v10 objectForKey:@"efficacyParticipationPercentage"];
  if (v15)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *(_DWORD *)(a1 + 16) = [v15 intValue];
    }
  }

  *(_DWORD *)(a1 + 120) = -1;
  int v16 = [v10 objectForKey:@"onAlertReceivedDuration"];
  if (v16)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *(_DWORD *)(a1 + 120) = [v16 intValue];
    }
  }

  *(unsigned char *)(a1 + 480) = 1;
  __int16 v17 = [v10 objectForKey:@"motionHarvestOnlyInCountry"];
  if (v17)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *(unsigned char *)(a1 + 480) = [v17 intValue] != 0;
    }
  }

  int v18 = [v8 objectForKey:@"apns"];
  if (v18 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    id v19 = v18;
  }
  else {
    id v19 = 0;
  }

  *(_DWORD *)(a1 + 8) = 1;
  int v20 = [v19 objectForKey:@"wowControls"];
  if (v20)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *(_DWORD *)(a1 + 8) = [v20 intValue];
    }
  }

  __int16 v21 = [v8 objectForKey:@"pull"];
  if (v21 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    id v22 = v21;
  }
  else {
    id v22 = 0;
  }

  __int16 v23 = (void **)(a1 + 24);
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*v23);
  }
  NSObject *v23 = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  int v24 = [v22 objectForKey:@"server"];
  if (v24)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      sub_10001D4D0(v24, buf);
      if (*(char *)(a1 + 47) < 0) {
        operator delete(*v23);
      }
      *(_OWORD *)__int16 v23 = *(_OWORD *)&buf[0].__r_.__value_.__l.__data_;
      *(void *)(a1 + 40) = *((void *)&buf[0].__r_.__value_.__l + 2);
    }
  }

  __int16 v25 = [v8 objectForKey:@"livability"];
  if (v25 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    id v26 = v25;
  }
  else {
    id v26 = 0;
  }

  int v27 = (void **)(a1 + 48);
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*v27);
  }
  NSObject *v27 = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v28 = [v26 objectForKey:@"weaEnrichmentChannel"];
  if (v28)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      sub_10001D4D0(v28, buf);
      if (*(char *)(a1 + 71) < 0) {
        operator delete(*v27);
      }
      *(_OWORD *)int v27 = *(_OWORD *)&buf[0].__r_.__value_.__l.__data_;
      *(void *)(a1 + 64) = *((void *)&buf[0].__r_.__value_.__l + 2);
    }
  }

  unint64_t v29 = [v8 objectForKey:@"security"];
  if (v29 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    id v30 = v29;
  }
  else {
    id v30 = 0;
  }

  double v31 = [v30 objectForKey:@"codebookFileName"];
  if (v31)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      sub_10001D4D0(v31, buf);
      unsigned int v32 = (void **)(a1 + 96);
      if (*(char *)(a1 + 119) < 0) {
        operator delete(*v32);
      }
      *(_OWORD *)unsigned int v32 = *(_OWORD *)&buf[0].__r_.__value_.__l.__data_;
      *(void *)(a1 + 112) = *((void *)&buf[0].__r_.__value_.__l + 2);
    }
  }

  double v33 = [v30 objectForKey:@"codebookDownloadPeriodSeconds"];
  if (v33)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *(_DWORD *)(a1 + 20) = [v33 intValue];
    }
  }

  unint64_t v34 = [v8 objectForKey:@"edcfu"];
  if (v34 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    id v35 = v34;
  }
  else {
    id v35 = 0;
  }

  *(_DWORD *)(a1 + 484) = 0;
  int v36 = [v35 objectForKey:@"uptakeCoefficient"];
  if (v36)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      [v36 doubleValue];
      *(float *)&double v37 = v37;
      *(_DWORD *)(a1 + 484) = LODWORD(v37);
    }
  }

  *(unsigned char *)a1 = 1;
LABEL_81:

  id v38 = v5;
  uint64_t v39 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    buf[0].__r_.__value_.__r.__words[0] = 68289283;
    LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    WORD1(buf[0].__r_.__value_.__r.__words[2]) = 2113;
    *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[2] + 4) = (std::string::size_type)v38;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#assetConfig,readRollingMetricAsset\", \"metrics\":%{private, location:escape_only}@}", (uint8_t *)buf, 0x1Cu);
  }
  if (!v5)
  {
    double v43 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_127;
    }
    buf[0].__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    uint64_t v44 = "{\"msg%{public}.0s\":\"#assetConfig,readRollingMetricAsset,nilAssetDictionary\"}";
    goto LABEL_93;
  }
  double v40 = [v38 objectForKey:@"config"];
  if (!v40 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {

    double v43 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_127;
    }
    buf[0].__r_.__value_.__r.__words[0] = 68289026;
    LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    uint64_t v44 = "{\"msg%{public}.0s\":\"#assetConfig,readRollingMetricAsset,nilConfig\"}";
LABEL_93:
    _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, v44, (uint8_t *)buf, 0x12u);
    goto LABEL_127;
  }
  double v41 = [v40 objectForKey:@"metrics"];
  if (v41 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    id v42 = v41;
  }
  else {
    id v42 = 0;
  }

  int v45 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    buf[0].__r_.__value_.__r.__words[0] = 68289283;
    LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 2082;
    *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
    WORD1(buf[0].__r_.__value_.__r.__words[2]) = 2113;
    *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[2] + 4) = (std::string::size_type)v42;
    _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#assetConfig,readRollingMetricAsset\", \"metricsData\":%{private, location:escape_only}@}", (uint8_t *)buf, 0x1Cu);
  }
  int v46 = [v42 objectForKey:@"rmEnable"];
  if (v46)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      __int16 v47 = [v46 intValue] != 0;

      *(_WORD *)(a1 + 124) = v47 | 0x100;
      int v46 = (id)SALogObjectGeneral;
      if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
      {
        if (!*(unsigned char *)(a1 + 125)) {
          sub_10006DFB4();
        }
        int v48 = *(unsigned __int8 *)(a1 + 124);
        buf[0].__r_.__value_.__r.__words[0] = 68289282;
        LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 2082;
        *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
        WORD1(buf[0].__r_.__value_.__r.__words[2]) = 1026;
        HIDWORD(buf[0].__r_.__value_.__r.__words[2]) = v48;
        _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#assetConfig,readRollingMetricAsset\", \"rmSupport\":%{public}d}", (uint8_t *)buf, 0x18u);
      }
    }
  }

  uint64_t v49 = [v42 objectForKey:@"rmPeriodInSeconds"];
  if (v49)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      unsigned int v50 = [v49 intValue];

      *(_DWORD *)(a1 + 128) = v50;
      *(unsigned char *)(a1 + 132) = 1;
      uint64_t v49 = (id)SALogObjectGeneral;
      if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
      {
        if (!*(unsigned char *)(a1 + 132)) {
          sub_10006DFB4();
        }
        int v51 = *(_DWORD *)(a1 + 128);
        buf[0].__r_.__value_.__r.__words[0] = 68289282;
        LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 2082;
        *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
        WORD1(buf[0].__r_.__value_.__r.__words[2]) = 1026;
        HIDWORD(buf[0].__r_.__value_.__r.__words[2]) = v51;
        _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#assetConfig,readRollingMetricAsset\", \"metricPeriod\":%{public}d}", (uint8_t *)buf, 0x18u);
      }
    }
  }

  double v52 = [v42 objectForKey:@"rmFixedDelayInSeconds"];
  if (v52)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      unsigned int v53 = [v52 intValue];

      *(_DWORD *)(a1 + 136) = v53;
      *(unsigned char *)(a1 + 140) = 1;
      double v52 = (id)SALogObjectGeneral;
      if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
      {
        if (!*(unsigned char *)(a1 + 140)) {
          sub_10006DFB4();
        }
        int v54 = *(_DWORD *)(a1 + 136);
        buf[0].__r_.__value_.__r.__words[0] = 68289282;
        LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 2082;
        *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
        WORD1(buf[0].__r_.__value_.__r.__words[2]) = 1026;
        HIDWORD(buf[0].__r_.__value_.__r.__words[2]) = v54;
        _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#assetConfig,readRollingMetricAsset\", \"metricFixDelay\":%{public}d}", (uint8_t *)buf, 0x18u);
      }
    }
  }

  unsigned int v55 = [v42 objectForKey:@"rmRandomDelayInSeconds"];
  if (v55)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      unsigned int v56 = [v55 intValue];

      *(_DWORD *)(a1 + 144) = v56;
      *(unsigned char *)(a1 + 148) = 1;
      unsigned int v55 = (id)SALogObjectGeneral;
      if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
      {
        if (!*(unsigned char *)(a1 + 148)) {
          sub_10006DFB4();
        }
        int v57 = *(_DWORD *)(a1 + 144);
        buf[0].__r_.__value_.__r.__words[0] = 68289282;
        LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 2082;
        *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
        WORD1(buf[0].__r_.__value_.__r.__words[2]) = 1026;
        HIDWORD(buf[0].__r_.__value_.__r.__words[2]) = v57;
        _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#assetConfig,readRollingMetricAsset\", \"metricRandomDelay\":%{public}d}", (uint8_t *)buf, 0x18u);
      }
    }
  }

  uint64_t v58 = [v42 objectForKey:@"efficacyManifestFileName"];
  if (v58 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    sub_10001D4D0(v58, buf);
    std::string __p = buf[0];

    long long v59 = (void *)(a1 + 72);
    std::string::operator=((std::string *)(a1 + 72), &__p);
    int v60 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      if (*(char *)(a1 + 95) < 0) {
        long long v59 = (void *)*v59;
      }
      buf[0].__r_.__value_.__r.__words[0] = 68289283;
      LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 2082;
      *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
      WORD1(buf[0].__r_.__value_.__r.__words[2]) = 2081;
      *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[2] + 4) = (std::string::size_type)v59;
      _os_log_impl((void *)&_mh_execute_header, v60, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#assetConfig,readRollingMetricAsset\", \"efficacyManifestFileName\":%{private, location:escape_only}s}", (uint8_t *)buf, 0x1Cu);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
  }
LABEL_127:

  if (!*(void *)(a1 + 472)) {
    operator new();
  }
  uint64_t v62 = *(void *)(a1 + 152);
  for (uint64_t i = *(void *)(a1 + 160); i != v62; uint64_t i = sub_10001DAB4(i - 280))
    ;
  *(void *)(a1 + 160) = v62;
  __int16 v63 = (void **)(a1 + 176);
  long long v82 = 0u;
  long long v83 = 0u;
  *(_OWORD *)uint64_t v80 = 0u;
  long long v81 = 0u;
  memset(v79, 0, sizeof(v79));
  *(_OWORD *)uint64_t v78 = 0u;
  memset(buf, 0, sizeof(buf));
  __asm { FMOV            V0.2D, #10.0 }
  long long v85 = _Q0;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v86 = _Q0;
  long long v87 = _Q0;
  uint64_t v84 = 0;
  unint64_t v88 = 0xBFF0000000000000;
  if (*(char *)(a1 + 199) < 0) {
    operator delete(*v63);
  }
  *__int16 v63 = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *((unsigned char *)&buf[0].__r_.__value_.__s + 23) = 0;
  buf[0].__r_.__value_.__s.__data_[0] = 0;
  uint64_t v70 = (void **)(a1 + 200);
  if (*(char *)(a1 + 223) < 0) {
    operator delete(*v70);
  }
  *(_OWORD *)uint64_t v70 = *(_OWORD *)&buf[1].__r_.__value_.__l.__data_;
  *(void *)(a1 + 216) = *((void *)&buf[1].__r_.__value_.__l + 2);
  *((unsigned char *)&buf[1].__r_.__value_.__s + 23) = 0;
  buf[1].__r_.__value_.__s.__data_[0] = 0;
  uint64_t v71 = (void **)(a1 + 224);
  if (*(char *)(a1 + 247) < 0) {
    operator delete(*v71);
  }
  *(_OWORD *)uint64_t v71 = *(_OWORD *)v78;
  *(void **)(a1 + 240) = v79[0];
  HIBYTE(v79[0]) = 0;
  LOBYTE(v78[0]) = 0;
  uint64_t v72 = (void **)(a1 + 248);
  if (*(char *)(a1 + 271) < 0) {
    operator delete(*v72);
  }
  *(_OWORD *)uint64_t v72 = *(_OWORD *)&v79[1];
  *(void **)(a1 + 264) = v79[3];
  HIBYTE(v79[3]) = 0;
  LOBYTE(v79[1]) = 0;
  uint64_t v73 = (void **)(a1 + 272);
  if (*(char *)(a1 + 295) < 0) {
    operator delete(*v73);
  }
  *(_OWORD *)uint64_t v73 = *(_OWORD *)v80;
  *(void *)(a1 + 288) = v81;
  BYTE7(v81) = 0;
  LOBYTE(v80[0]) = 0;
  sub_100032A84((uint64_t *)(a1 + 296));
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  long long v82 = 0uLL;
  *((void *)&v81 + 1) = 0;
  sub_100032A84((uint64_t *)(a1 + 320));
  long long v74 = v86;
  *(_OWORD *)(a1 + 344) = v85;
  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = 0;
  uint64_t v84 = 0;
  long long v83 = 0uLL;
  *(_OWORD *)(a1 + 360) = v74;
  *(_OWORD *)(a1 + 376) = v87;
  *(void *)(a1 + 392) = v88;
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v83;
  sub_100005360((void ***)&__p);
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v81 + 8;
  sub_100005360((void ***)&__p);
  if (SBYTE7(v81) < 0) {
    operator delete(v80[0]);
  }
  if (SHIBYTE(v79[3]) < 0) {
    operator delete(v79[1]);
  }
  if (SHIBYTE(v79[0]) < 0) {
    operator delete(v78[0]);
  }
  if (SHIBYTE(buf[1].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf[1].__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(buf[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf[0].__r_.__value_.__l.__data_);
  }
  *(void *)(a1 + 400) = 0;
  *(_OWORD *)(a1 + 408) = xmmword_1000B6460;
  *(_OWORD *)(a1 + 424) = xmmword_1000B6470;
  *(void *)(a1 + 440) = 1;
  uint64_t v75 = *(void **)(a1 + 448);
  if (v75)
  {
    *(void *)(a1 + 456) = v75;
    operator delete(v75);
  }
  *(void *)(a1 + 448) = 0;
  *(void *)(a1 + 456) = 0;
  *(void *)(a1 + 464) = 0;
  sub_100018624(*(void *)(a1 + 472), v38, (int64x2_t *)(a1 + 152), (std::string *)(a1 + 176));
  sub_10001BE2C(*(void *)(a1 + 472), v38, (BOOL *)(a1 + 400));
  *(unsigned char *)a1 = 1;
}

void sub_10006C8E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  _Unwind_Resume(a1);
}

void sub_10006CBB8(uint64_t a1, double *a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v17 = 68289026;
    int v18 = 0;
    __int16 v19 = 2082;
    int v20 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#assetConfig,getRollingMetrics\"}", (uint8_t *)&v17, 0x12u);
  }
  if ((sub_10003E368()[31] & 0x80000000) != 0)
  {
    int v5 = *(unsigned __int8 *)(a1 + 125);
    if (*(unsigned char *)(a1 + 125)) {
      int v5 = *(unsigned __int8 *)(a1 + 124);
    }
  }
  else
  {
    int v5 = *((_DWORD *)sub_10003E368() + 62);
  }
  *(unsigned char *)a2 = v5 != 0;
  if ((*((_DWORD *)sub_10003E368() + 63) & 0x80000000) == 0)
  {
    int v7 = (_DWORD *)sub_10003E368() + 63;
LABEL_11:
    LODWORD(v6) = *v7;
    double v8 = (double)v6;
    goto LABEL_12;
  }
  if (*(unsigned char *)(a1 + 132))
  {
    int v7 = (_DWORD *)(a1 + 128);
    goto LABEL_11;
  }
  double v8 = 4294967300.0;
LABEL_12:
  a2[1] = v8;
  if ((sub_10003E368()[32] & 0x80000000) != 0)
  {
    if (*(unsigned char *)(a1 + 140)) {
      unsigned int v9 = *(_DWORD *)(a1 + 136);
    }
    else {
      unsigned int v9 = -1;
    }
  }
  else
  {
    unsigned int v9 = *((_DWORD *)sub_10003E368() + 64);
  }
  a2[2] = (double)v9;
  if ((*((_DWORD *)sub_10003E368() + 65) & 0x80000000) == 0)
  {
    __int16 v11 = (_DWORD *)sub_10003E368() + 65;
LABEL_22:
    LODWORD(v10) = *v11;
    double v12 = (double)v10;
    goto LABEL_23;
  }
  if (*(unsigned char *)(a1 + 148))
  {
    __int16 v11 = (_DWORD *)(a1 + 144);
    goto LABEL_22;
  }
  double v12 = 4294967300.0;
LABEL_23:
  a2[3] = v12;
  __int16 v13 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    double v14 = a2[2];
    unint64_t v15 = (unint64_t)a2[1];
    int v16 = *(unsigned __int8 *)a2;
    int v17 = 68290050;
    __int16 v19 = 2082;
    int v18 = 0;
    int v20 = "";
    __int16 v21 = 1026;
    int v22 = v16;
    __int16 v23 = 2050;
    unint64_t v24 = v15;
    __int16 v25 = 1026;
    int v26 = (int)v12;
    __int16 v27 = 1026;
    int v28 = (int)v14;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#assetConfig,getRollingMetrics\", \"rmSupported\":%{public}d, \"rollingPeriodSeconds\":%{public}lu, \"randomDelaySeconds\":%{public}d, \"fixedDelay\":%{public}d}", (uint8_t *)&v17, 0x2Eu);
  }
}

uint64_t sub_10006CDFC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v6 = a2;
  id v7 = a3;
  double v8 = v7;
  if (v6 && v7)
  {
    unsigned int v9 = [v6 objectForKey:v7];
    if (v9 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      [v9 doubleValue];
      uint64_t v11 = v10;
      *a4 = v10;
      double v12 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        int v17 = 68289283;
        int v18 = 0;
        __int16 v19 = 2082;
        int v20 = "";
        __int16 v21 = 2049;
        uint64_t v22 = v11;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SAAssetConfig,readFloat,value\", \"value\":\"%{private}0.3f\"}", (uint8_t *)&v17, 0x1Cu);
      }
      uint64_t v13 = 1;
    }
    else
    {
      unint64_t v15 = SALogObjectGeneral;
      uint64_t v13 = 0;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        int v17 = 68289026;
        int v18 = 0;
        __int16 v19 = 2082;
        int v20 = "";
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SAAssetConfig,readFloat,keyIdObjectFailed\"}", (uint8_t *)&v17, 0x12u);
        uint64_t v13 = 0;
      }
    }
  }
  else
  {
    double v14 = SALogObjectGeneral;
    uint64_t v13 = 0;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v17 = 68289026;
      int v18 = 0;
      __int16 v19 = 2082;
      int v20 = "";
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SAAssetConfig,invalid dictionary or Key\"}", (uint8_t *)&v17, 0x12u);
      uint64_t v13 = 0;
    }
  }

  return v13;
}

void sub_10006D02C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10006D054(uint64_t a1, void *a2, void *a3, unsigned int *a4, void *a5)
{
  id v8 = a2;
  id v9 = a3;
  uint64_t v10 = v9;
  if (v8 && v9 && a5)
  {
    uint64_t v11 = [v8 objectForKey:v9];
    if (v11 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      id v12 = v11;
      *a5 = v12;
      unsigned int v13 = [v12 count];
      *a4 = v13;
      double v14 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        int v19 = 68289283;
        int v20 = 0;
        __int16 v21 = 2082;
        uint64_t v22 = "";
        __int16 v23 = 2049;
        uint64_t v24 = v13;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SAAssetConfig,arrayLen,size\", \"arrayLen\":%{private}lu}", (uint8_t *)&v19, 0x1Cu);
      }

      uint64_t v15 = 1;
    }
    else
    {
      int v17 = SALogObjectGeneral;
      uint64_t v15 = 0;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        int v19 = 68289026;
        int v20 = 0;
        __int16 v21 = 2082;
        uint64_t v22 = "";
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#warning,#SAAssetConfig,invalid_keyId\"}", (uint8_t *)&v19, 0x12u);
        uint64_t v15 = 0;
      }
    }
  }
  else
  {
    int v16 = SALogObjectGeneral;
    uint64_t v15 = 0;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v19 = 68289026;
      int v20 = 0;
      __int16 v21 = 2082;
      uint64_t v22 = "";
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#warning,#SAAssetConfig,invalid dictionary or Key\"}", (uint8_t *)&v19, 0x12u);
      uint64_t v15 = 0;
    }
  }

  return v15;
}

void sub_10006D298(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_10006D2CC(uint64_t a1, void *a2, void *a3, unsigned int *a4, uint64_t a5)
{
  id v8 = a2;
  id v9 = a3;
  uint64_t v10 = v9;
  double v37 = v8;
  if (v8 && v9)
  {
    uint64_t v11 = [v8 objectForKey:v9];
    if (!v11 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
    {
      id v12 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        int v39 = 0;
        __int16 v40 = 2082;
        double v41 = "";
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#warning,#SAAssetConfig,Array read failed\"}", buf, 0x12u);
      }
    }
    id v13 = v11;
    unsigned int v14 = [v13 count];
    *a4 = v14;
    BOOL v36 = v14 != 0;
    if (v14)
    {
      id v35 = v11;
      unint64_t v15 = 0;
      do
      {
        int v16 = [v13 objectAtIndex:v15, v35];
        int v17 = [v16 objectForKey:v10];
        if (v17 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
          unsigned int v18 = [v17 intValue];
        }
        else {
          unsigned int v18 = -1;
        }

        int v20 = *(unsigned int **)(a5 + 8);
        unint64_t v19 = *(void *)(a5 + 16);
        if ((unint64_t)v20 >= v19)
        {
          uint64_t v22 = *(unsigned int **)a5;
          uint64_t v23 = ((uint64_t)v20 - *(void *)a5) >> 2;
          unint64_t v24 = v23 + 1;
          if ((unint64_t)(v23 + 1) >> 62) {
            sub_1000050E8();
          }
          uint64_t v25 = v19 - (void)v22;
          if (v25 >> 1 > v24) {
            unint64_t v24 = v25 >> 1;
          }
          if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v26 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v26 = v24;
          }
          if (v26)
          {
            __int16 v27 = (char *)sub_10001D860(a5 + 16, v26);
            uint64_t v22 = *(unsigned int **)a5;
            int v20 = *(unsigned int **)(a5 + 8);
          }
          else
          {
            __int16 v27 = 0;
          }
          int v28 = (unsigned int *)&v27[4 * v23];
          *int v28 = v18;
          __int16 v21 = v28 + 1;
          while (v20 != v22)
          {
            unsigned int v29 = *--v20;
            *--int v28 = v29;
          }
          *(void *)a5 = v28;
          *(void *)(a5 + 8) = v21;
          *(void *)(a5 + 16) = &v27[4 * v26];
          if (v22) {
            operator delete(v22);
          }
        }
        else
        {
          unsigned int *v20 = v18;
          __int16 v21 = v20 + 1;
        }
        *(void *)(a5 + 8) = v21;
        id v30 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v31 = ((uint64_t)v21 - *(void *)a5) >> 2;
          *(_DWORD *)uint64_t buf = 68289539;
          int v39 = 0;
          __int16 v40 = 2082;
          double v41 = "";
          __int16 v42 = 1025;
          unsigned int v43 = v18;
          __int16 v44 = 2049;
          uint64_t v45 = v31;
          _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SAAssetConfig,value\", \"tempValue\":%{private}d, \"valueSize\":%{private}lu}", buf, 0x22u);
        }

        ++v15;
      }
      while (v15 < *a4);
    }
    else
    {
      double v33 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        int v39 = 0;
        __int16 v40 = 2082;
        double v41 = "";
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#warning,#SAAssetConfig,data array empty\"}", buf, 0x12u);
      }
    }
  }
  else
  {
    unsigned int v32 = SALogObjectGeneral;
    BOOL v36 = 0;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v39 = 0;
      __int16 v40 = 2082;
      double v41 = "";
      _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#warning,#SAAssetConfig,invalid dictionary or Key\"}", buf, 0x12u);
      BOOL v36 = 0;
    }
  }

  return v36;
}

void sub_10006D6BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

BOOL sub_10006D724(uint64_t a1, void *a2, void *a3, unsigned int *a4, uint64_t *a5)
{
  id v8 = a2;
  id v9 = a3;
  unint64_t v34 = v9;
  id v35 = v8;
  if (v8 && v9)
  {
    uint64_t v10 = [v8 objectForKey:v9];
    if (!v10 || (uint64_t v11 = v10, objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
    {
      uint64_t v31 = SALogObjectGeneral;
      BOOL v14 = 0;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#warning,#SAAssetConfig,invalid_keyId\"}", buf, 0x12u);
        BOOL v14 = 0;
      }
      goto LABEL_34;
    }
    id v12 = v10;
    unsigned int v13 = [v12 count];
    *a4 = v13;
    BOOL v14 = v13 != 0;
    unint64_t v15 = SALogObjectGeneral;
    BOOL v16 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    if (v13)
    {
      if (!v16
        || (*(_DWORD *)uint64_t buf = 68289283,
            *(_DWORD *)&uint8_t buf[4] = 0,
            *(_WORD *)&uint8_t buf[8] = 2082,
            *(void *)&buf[10] = "",
            *(_WORD *)&buf[18] = 1025,
            *(_DWORD *)&buf[20] = v13,
            _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SAAssetConfig,\", \"numberOfItemsInArray\":%{private}d}", buf, 0x18u), *a4))
      {
        unint64_t v18 = 0;
        *(void *)&long long v17 = 68289283;
        long long v33 = v17;
        do
        {
          unint64_t v19 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)uint64_t buf = 68289026;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SAAssetConfig,channelNameArray\"}", buf, 0x12u);
          }
          int v20 = [v12 objectAtIndex:v18 v33];
          if (v20 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
          {
            sub_10000DD48(buf, (char *)[v20 UTF8String]);
            unint64_t v21 = a5[1];
            if (v21 >= a5[2])
            {
              uint64_t v24 = sub_100004F4C(a5, (long long *)buf);
            }
            else
            {
              if ((buf[23] & 0x80000000) != 0)
              {
                sub_100004CB8((unsigned char *)a5[1], *(void **)buf, *(unint64_t *)&buf[8]);
              }
              else
              {
                long long v22 = *(_OWORD *)buf;
                *(void *)(v21 + 16) = *(void *)&buf[16];
                *(_OWORD *)unint64_t v21 = v22;
              }
              uint64_t v24 = v21 + 24;
              a5[1] = v21 + 24;
            }
            a5[1] = v24;
            if ((buf[23] & 0x80000000) != 0) {
              operator delete(*(void **)buf);
            }
          }
          else
          {
            uint64_t v23 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)uint64_t buf = v33;
              *(_DWORD *)&uint8_t buf[4] = 0;
              *(_WORD *)&uint8_t buf[8] = 2082;
              *(void *)&buf[10] = "";
              *(_WORD *)&buf[18] = 2049;
              *(void *)&buf[20] = v18;
              _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#SAAssetConfig,channel\", \"i\":%{private}lu}", buf, 0x1Cu);
            }
          }

          uint64_t v10 = v11;
          ++v18;
        }
        while (v18 < *a4);
      }
      uint64_t v25 = SALogObjectGeneral;
      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_33;
      }
      unint64_t v26 = 0xAAAAAAAAAAAAAAABLL * ((a5[1] - *a5) >> 3);
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2049;
      *(void *)&buf[20] = v26;
      __int16 v27 = "{\"msg%{public}.0s\":\"#SAAssetConfig,channel\", \"size\":%{private}lu}";
      int v28 = v25;
      uint32_t v29 = 28;
    }
    else
    {
      if (!v16)
      {
LABEL_33:

LABEL_34:
        goto LABEL_35;
      }
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      __int16 v27 = "{\"msg%{public}.0s\":\"#warning,#SAAssetConfig,data array empty\"}";
      int v28 = v15;
      uint32_t v29 = 18;
    }
    _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, v27, buf, v29);
    goto LABEL_33;
  }
  id v30 = SALogObjectGeneral;
  BOOL v14 = 0;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#warning,#SAAssetConfig,invalid dictionary or Key\"}", buf, 0x12u);
    BOOL v14 = 0;
  }
LABEL_35:

  return v14;
}

void sub_10006DBF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  *(void *)(v23 + 8) = v21;
  if (a20 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_10006DC68(uint64_t a1, void *a2, void *a3, double a4, double a5)
{
  uint64_t v5 = *(void *)(a1 + 152);
  for (uint64_t i = *(void *)(a1 + 160); v5 != i; v5 += 280)
  {
    sub_10001D54C((uint64_t)&v15, v5);
    if (v26 <= a4 && v28 >= a4 && v27 <= a5 && v29 >= a5)
    {
      uint64_t v14 = v25;
      *a2 = v24;
      *a3 = v14;
    }
    unint64_t v34 = (void **)&v33;
    sub_100005360(&v34);
    unint64_t v34 = (void **)&v32;
    sub_100005360(&v34);
    if (__p)
    {
      uint64_t v31 = __p;
      operator delete(__p);
    }
    if (v23 < 0) {
      operator delete(v22);
    }
    if (v21 < 0) {
      operator delete(v20);
    }
    if (v19 < 0) {
      operator delete(v18);
    }
    if (v17 < 0) {
      operator delete(v16);
    }
  }
}

void sub_10006DD7C()
{
  byte_100106BC0 = 0;
  unk_100106BC4 = xmmword_1000B6480;
  dword_100106BD4 = 86400;
  sub_10000DD48(&qword_100106BD8, "https://safety-alert.apple.com/v1/alert/");
  qword_100106BF0 = 0;
  unk_100106BF8 = 0;
  qword_100106C00 = 0;
  sub_10000DD48(&qword_100106C08, "efficacy_manifest_v2.txt");
  sub_10000DD48(qword_100106C20, "codebook.json");
  dword_100106C38 = -1;
  word_100106C3C = 0;
  byte_100106C40 = 0;
  byte_100106C44 = 0;
  byte_100106C48 = 0;
  byte_100106C4C = 0;
  byte_100106C50 = 0;
  byte_100106C54 = 0;
  xmmword_100106C58 = 0u;
  unk_100106C68 = 0u;
  xmmword_100106C78 = 0u;
  unk_100106C88 = 0u;
  xmmword_100106C98 = 0u;
  unk_100106CA8 = 0u;
  xmmword_100106CB8 = 0u;
  unk_100106CC8 = 0u;
  xmmword_100106CD8 = 0u;
  unk_100106CE8 = 0u;
  xmmword_100106CF8 = 0u;
  unk_100106D08 = 0u;
  __asm
  {
    FMOV            V1.2D, #10.0
    FMOV            V2.2D, #-1.0
  }
  xmmword_100106D18 = _Q1;
  unk_100106D28 = _Q2;
  xmmword_100106D38 = _Q2;
  qword_100106D48 = 0xBFF0000000000000;
  byte_100106D50 = 0;
  unk_100106D54 = xmmword_1000B2340;
  unk_100106D64 = xmmword_1000B2350;
  unk_100106D74 = &_mh_execute_header;
  unk_100106D8C = 0u;
  unk_100106D7C = 0u;
  dword_100106D9C = 0;
  byte_100106DA0 = 1;
  dword_100106DA4 = 0;
  id v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    id v7 = &qword_100106BD8;
    if (byte_100106BEF < 0) {
      id v7 = (uint64_t *)qword_100106BD8;
    }
    v8[0] = 68289283;
    v8[1] = 0;
    __int16 v9 = 2082;
    uint64_t v10 = "";
    __int16 v11 = 2081;
    id v12 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#assetDefault\", \"fPullServerName\":%{private, location:escape_only}s}", (uint8_t *)v8, 0x1Cu);
  }
}

void sub_10006DF58(_Unwind_Exception *exception_object)
{
  if (byte_100106C1F < 0) {
    operator delete((void *)qword_100106C08);
  }
  if (SHIBYTE(qword_100106C00) < 0) {
    operator delete((void *)qword_100106BF0);
  }
  if (byte_100106BEF < 0) {
    operator delete((void *)qword_100106BD8);
  }
  _Unwind_Resume(exception_object);
}

void sub_10006DFB4()
{
  exception = __cxa_allocate_exception(8uLL);
}

void sub_10006E000(uint64_t a1, double *a2, uint64_t **a3)
{
  id v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v73[0]) = 2082;
    *(void **)((char *)v73 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,getChannels\"}", buf, 0x12u);
  }
  uint64_t v4 = sub_10006B474();
  uint64_t v62 = 0;
  uint64_t v63 = 0;
  uint64_t v64 = 0;
  sub_10006AE6C(&v62, *((void *)v4 + 19), *((void *)v4 + 20), 0xAF8AF8AF8AF8AF8BLL * ((uint64_t)(*((void *)v4 + 20) - *((void *)v4 + 19)) >> 3));
  *(double *)&long long v5 = *a2;
  double v6 = a2[1];
  BOOL v7 = *a2 == 0.0;
  if (v6 != 0.0) {
    BOOL v7 = 0;
  }
  if (v6 <= 180.0 && v6 >= -180.0 && *(double *)&v5 <= 90.0 && (*(double *)&v5 >= -90.0 ? (BOOL v8 = !v7) : (BOOL v8 = 0), v8))
  {
    uint64_t v9 = v62;
    uint64_t v54 = v63;
    if (v62 != v63)
    {
      *(void *)&long long v5 = 68290051;
      long long v53 = v5;
      do
      {
        uint64_t v10 = (SAGridId *)sub_10001D54C((uint64_t)buf, v9);
        memset(&__p, 0, sizeof(__p));
        double v11 = *a2;
        if (*a2 >= v83 && v11 <= v85)
        {
          double v13 = a2[1];
          if (v13 >= v84 && v13 <= v86)
          {
            unsigned int GlobalTileIdFromLatLonAndGridSizeInDegrees = SAGridId::generateGlobalTileIdFromLatLonAndGridSizeInDegrees(v10, v11, v13, v87, v81, v82);
            char v17 = (const std::string::value_type *)v91[0];
            BOOL v16 = (uint64_t *)v91[1];
            while (v17 != (const std::string::value_type *)v16)
            {
              sub_10000DD48(&v57, "");
              if ((int)v90 <= 0x64 && (uint32_t v18 = (int)v90, arc4random_uniform(0x64u) <= v18))
              {
                std::to_string(&__dst, GlobalTileIdFromLatLonAndGridSizeInDegrees);
                int v20 = v17[23];
                if (v20 >= 0) {
                  char v21 = v17;
                }
                else {
                  char v21 = *(const std::string::value_type **)v17;
                }
                if (v20 >= 0) {
                  std::string::size_type v22 = *((unsigned __int8 *)v17 + 23);
                }
                else {
                  std::string::size_type v22 = *((void *)v17 + 1);
                }
                char v23 = std::string::insert(&__dst, 0, v21, v22);
                uint64_t v24 = (void *)v23->__r_.__value_.__r.__words[0];
                v71[0] = v23->__r_.__value_.__l.__size_;
                *(void *)((char *)v71 + 7) = *(std::string::size_type *)((char *)&v23->__r_.__value_.__r.__words[1] + 7);
                char v25 = HIBYTE(v23->__r_.__value_.__r.__words[2]);
                v23->__r_.__value_.__l.__size_ = 0;
                v23->__r_.__value_.__r.__words[2] = 0;
                v23->__r_.__value_.__r.__words[0] = 0;
                if (v59 < 0) {
                  operator delete(v57);
                }
                int v57 = v24;
                *(void *)uint64_t v58 = v71[0];
                *(void *)&v58[7] = *(void *)((char *)v71 + 7);
                char v59 = v25;
                if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
                {
                  operator delete(__dst.__r_.__value_.__l.__data_);
                  char v25 = v59;
                  uint64_t v24 = v57;
                }
                if (v25 >= 0) {
                  double v26 = &v57;
                }
                else {
                  double v26 = (void **)v24;
                }
                double v27 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v26, v53);
                double v28 = [v27 dataUsingEncoding:4];

                if (v28)
                {
                  double v29 = [v28 base64EncodedStringWithOptions:0];
                  id v30 = v29;
                  if (v29)
                  {
                    sub_10000DD48(&__dst, (char *)[v29 UTF8String]);
                    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                      operator delete(__p.__r_.__value_.__l.__data_);
                    }
                    std::string __p = __dst;
                    int v61 = 2;
                    uint64_t v31 = SALogObjectGeneral;
                    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                    {
                      uint64_t v32 = v17;
                      if (v17[23] < 0) {
                        uint64_t v32 = *(const std::string::value_type **)v17;
                      }
                      p_p = &__p;
                      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
                      }
                      __dst.__r_.__value_.__r.__words[0] = v53;
                      LOWORD(__dst.__r_.__value_.__r.__words[1]) = 2082;
                      *(std::string::size_type *)((char *)&__dst.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
                      WORD1(__dst.__r_.__value_.__r.__words[2]) = 1025;
                      HIDWORD(__dst.__r_.__value_.__r.__words[2]) = GlobalTileIdFromLatLonAndGridSizeInDegrees;
                      *(_WORD *)BOOL v66 = 2081;
                      *(void *)&v66[2] = v32;
                      __int16 v67 = 2081;
                      uint64_t v68 = p_p;
                      __int16 v69 = 1025;
                      int v70 = 2;
                      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,getChannels,Dithering\", \"tileIdKey\":%{private}d, \"channelPrefix\":%{private, location:escape_only}s, \"channelId\":%{private, location:escape_only}s, \"channelType\":%{private}d}", (uint8_t *)&__dst, 0x32u);
                    }
                    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                      sub_100004CB8(&__dst, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
                    }
                    else {
                      std::string __dst = __p;
                    }
                    *(_DWORD *)BOOL v66 = v61;
                    sub_100042D00(a3, (uint64_t)&__dst, (uint64_t)&__dst);
                    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
                      operator delete(__dst.__r_.__value_.__l.__data_);
                    }
                  }
                }
              }
              else
              {
                char v19 = SALogObjectGeneral;
                if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                {
                  __dst.__r_.__value_.__r.__words[0] = 68289026;
                  LOWORD(__dst.__r_.__value_.__r.__words[1]) = 2082;
                  *(std::string::size_type *)((char *)&__dst.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
                  _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,getChannels,pp is 0\"}", (uint8_t *)&__dst, 0x12u);
                }
              }
              if (v59 < 0) {
                operator delete(v57);
              }
              v17 += 24;
            }
            unint64_t v34 = (const std::string::value_type *)v93[0];
            id v35 = (uint64_t *)v93[1];
            while (v34 != (const std::string::value_type *)v35)
            {
              sub_10000DD48(&v57, "");
              if ((int)v92 <= 0x64 && (uint32_t v36 = (int)v92, arc4random_uniform(0x64u) <= v36))
              {
                std::to_string(&__dst, GlobalTileIdFromLatLonAndGridSizeInDegrees);
                int v38 = v34[23];
                if (v38 >= 0) {
                  int v39 = v34;
                }
                else {
                  int v39 = *(const std::string::value_type **)v34;
                }
                if (v38 >= 0) {
                  std::string::size_type v40 = *((unsigned __int8 *)v34 + 23);
                }
                else {
                  std::string::size_type v40 = *((void *)v34 + 1);
                }
                double v41 = std::string::insert(&__dst, 0, v39, v40);
                __int16 v42 = (void *)v41->__r_.__value_.__r.__words[0];
                v71[0] = v41->__r_.__value_.__l.__size_;
                *(void *)((char *)v71 + 7) = *(std::string::size_type *)((char *)&v41->__r_.__value_.__r.__words[1] + 7);
                char v43 = HIBYTE(v41->__r_.__value_.__r.__words[2]);
                v41->__r_.__value_.__l.__size_ = 0;
                v41->__r_.__value_.__r.__words[2] = 0;
                v41->__r_.__value_.__r.__words[0] = 0;
                if (v59 < 0) {
                  operator delete(v57);
                }
                int v57 = v42;
                *(void *)uint64_t v58 = v71[0];
                *(void *)&v58[7] = *(void *)((char *)v71 + 7);
                char v59 = v43;
                if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
                {
                  operator delete(__dst.__r_.__value_.__l.__data_);
                  char v43 = v59;
                  __int16 v42 = v57;
                }
                if (v43 >= 0) {
                  __int16 v44 = &v57;
                }
                else {
                  __int16 v44 = (void **)v42;
                }
                uint64_t v45 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v44, v53);
                int v46 = [v45 dataUsingEncoding:4];

                if (v46)
                {
                  __int16 v47 = [v46 base64EncodedStringWithOptions:0];
                  int v48 = v47;
                  if (v47)
                  {
                    sub_10000DD48(&__dst, (char *)[v47 UTF8String]);
                    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                      operator delete(__p.__r_.__value_.__l.__data_);
                    }
                    std::string __p = __dst;
                    int v61 = 2;
                    uint64_t v49 = SALogObjectGeneral;
                    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                    {
                      unsigned int v50 = v34;
                      if (v34[23] < 0) {
                        unsigned int v50 = *(const std::string::value_type **)v34;
                      }
                      int v51 = &__p;
                      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                        int v51 = (std::string *)__p.__r_.__value_.__r.__words[0];
                      }
                      __dst.__r_.__value_.__r.__words[0] = v53;
                      LOWORD(__dst.__r_.__value_.__r.__words[1]) = 2082;
                      *(std::string::size_type *)((char *)&__dst.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
                      WORD1(__dst.__r_.__value_.__r.__words[2]) = 1025;
                      HIDWORD(__dst.__r_.__value_.__r.__words[2]) = GlobalTileIdFromLatLonAndGridSizeInDegrees;
                      *(_WORD *)BOOL v66 = 2081;
                      *(void *)&v66[2] = v50;
                      __int16 v67 = 2081;
                      uint64_t v68 = v51;
                      __int16 v69 = 1025;
                      int v70 = 2;
                      _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,getChannels,Non-Dithering\", \"tileIdKey\":%{private}d, \"channelPrefix\":%{private, location:escape_only}s, \"channelId\":%{private, location:escape_only}s, \"channelType\":%{private}d}", (uint8_t *)&__dst, 0x32u);
                    }
                    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                      sub_100004CB8(&__dst, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
                    }
                    else {
                      std::string __dst = __p;
                    }
                    *(_DWORD *)BOOL v66 = v61;
                    sub_100042D00(a3, (uint64_t)&__dst, (uint64_t)&__dst);
                    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
                      operator delete(__dst.__r_.__value_.__l.__data_);
                    }
                  }
                }
              }
              else
              {
                double v37 = SALogObjectGeneral;
                if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                {
                  __dst.__r_.__value_.__r.__words[0] = 68289026;
                  LOWORD(__dst.__r_.__value_.__r.__words[1]) = 2082;
                  *(std::string::size_type *)((char *)&__dst.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
                  _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,getChannels,pp is 0\"}", (uint8_t *)&__dst, 0x12u);
                }
              }
              if (v59 < 0) {
                operator delete(v57);
              }
              v34 += 24;
            }
          }
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v93;
        sub_100005360((void ***)&__dst);
        __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v91;
        sub_100005360((void ***)&__dst);
        if (v88)
        {
          __int16 v89 = v88;
          operator delete(v88);
        }
        if (v80 < 0) {
          operator delete(v79);
        }
        if (v78 < 0) {
          operator delete(v77);
        }
        if (v76 < 0) {
          operator delete(v75);
        }
        if (v74 < 0) {
          operator delete(v73[0]);
        }
        v9 += 280;
      }
      while (v9 != v54);
    }
  }
  else
  {
    double v52 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      LOWORD(v73[0]) = 2082;
      *(void **)((char *)v73 + 2) = "";
      _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,getChannels,invalid locationd\"}", buf, 0x12u);
    }
  }
  *(void *)uint64_t buf = &v62;
  sub_10006AFD0((void ***)buf);
}

void sub_10006E8CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char *a50)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  sub_10001DAB4((uint64_t)&a50);
  a50 = &a34;
  sub_10006AFD0((void ***)&a50);
  _Unwind_Resume(a1);
}

void sub_10006E9E0(uint64_t a1, double *a2, uint64_t **a3)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v51[0]) = 2082;
    *(void **)((char *)v51 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,updateIgneousLivabilityChannels\"}", buf, 0x12u);
  }
  long long v5 = sub_10006B474();
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  uint64_t v42 = 0;
  sub_10006AE6C(&v40, *((void *)v5 + 19), *((void *)v5 + 20), 0xAF8AF8AF8AF8AF8BLL * ((uint64_t)(*((void *)v5 + 20) - *((void *)v5 + 19)) >> 3));
  *(double *)&long long v6 = *a2;
  double v7 = a2[1];
  BOOL v8 = *a2 == 0.0;
  if (v7 != 0.0) {
    BOOL v8 = 0;
  }
  if (v7 <= 180.0 && v7 >= -180.0 && *(double *)&v6 <= 90.0 && (*(double *)&v6 >= -90.0 ? (BOOL v9 = !v8) : (BOOL v9 = 0), v9))
  {
    uint64_t v10 = v40;
    uint64_t v11 = v41;
    if (v40 != v41)
    {
      *(void *)&long long v6 = 68290051;
      long long v33 = v6;
      do
      {
        id v12 = (SAGridId *)sub_10001D54C((uint64_t)buf, v10);
        memset(&v38, 0, sizeof(v38));
        std::string::size_type v13 = v59;
        if ((v59 & 0x80u) != 0) {
          std::string::size_type v13 = v58;
        }
        if (v13)
        {
          double v14 = *a2;
          if (*a2 >= v62 && v14 <= v64)
          {
            double v16 = a2[1];
            if (v16 >= v63 && v16 <= v65)
            {
              unsigned int GlobalTileIdFromLatLonAndGridSizeInDegrees = SAGridId::generateGlobalTileIdFromLatLonAndGridSizeInDegrees(v12, v14, v16, v66, v60, v61);
              sub_10000DD48(&__p, "");
              std::to_string(&__dst, GlobalTileIdFromLatLonAndGridSizeInDegrees);
              if ((v59 & 0x80u) == 0) {
                char v19 = (const std::string::value_type *)&v57;
              }
              else {
                char v19 = (const std::string::value_type *)v57;
              }
              if ((v59 & 0x80u) == 0) {
                std::string::size_type v20 = v59;
              }
              else {
                std::string::size_type v20 = v58;
              }
              char v21 = std::string::insert(&__dst, 0, v19, v20);
              std::string::size_type v22 = (void *)v21->__r_.__value_.__r.__words[0];
              v49[0] = v21->__r_.__value_.__l.__size_;
              *(void *)((char *)v49 + 7) = *(std::string::size_type *)((char *)&v21->__r_.__value_.__r.__words[1] + 7);
              char v23 = HIBYTE(v21->__r_.__value_.__r.__words[2]);
              v21->__r_.__value_.__l.__size_ = 0;
              v21->__r_.__value_.__r.__words[2] = 0;
              v21->__r_.__value_.__r.__words[0] = 0;
              if (v37 < 0) {
                operator delete(__p);
              }
              std::string __p = v22;
              *(void *)uint32_t v36 = v49[0];
              *(void *)&v36[7] = *(void *)((char *)v49 + 7);
              char v37 = v23;
              if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
              {
                operator delete(__dst.__r_.__value_.__l.__data_);
                char v23 = v37;
                std::string::size_type v22 = __p;
              }
              if (v23 >= 0) {
                p_p = &__p;
              }
              else {
                p_p = (void **)v22;
              }
              char v25 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", p_p, v33);
              double v26 = [v25 dataUsingEncoding:4];

              if (v26)
              {
                double v27 = [v26 base64EncodedStringWithOptions:0];
                double v28 = v27;
                if (v27)
                {
                  sub_10000DD48(&__dst, (char *)[v27 UTF8String]);
                  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
                    operator delete(v38.__r_.__value_.__l.__data_);
                  }
                  std::string v38 = __dst;
                  int v39 = 2;
                  double v29 = SALogObjectGeneral;
                  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                  {
                    id v30 = &v57;
                    if ((v59 & 0x80u) != 0) {
                      id v30 = v57;
                    }
                    uint64_t v31 = &v38;
                    if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                      uint64_t v31 = (std::string *)v38.__r_.__value_.__r.__words[0];
                    }
                    __dst.__r_.__value_.__r.__words[0] = v33;
                    LOWORD(__dst.__r_.__value_.__r.__words[1]) = 2082;
                    *(std::string::size_type *)((char *)&__dst.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)"";
                    WORD1(__dst.__r_.__value_.__r.__words[2]) = 1025;
                    HIDWORD(__dst.__r_.__value_.__r.__words[2]) = GlobalTileIdFromLatLonAndGridSizeInDegrees;
                    *(_WORD *)__int16 v44 = 2081;
                    *(void *)&v44[2] = v30;
                    __int16 v45 = 2081;
                    int v46 = v31;
                    __int16 v47 = 1025;
                    int v48 = 2;
                    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,updateIgneousLivabilityChannels,livabilityChannel\", \"tileIdKey\":%{private}d, \"channelPrefix\":%{private, location:escape_only}s, \"channelId\":%{private, location:escape_only}s, \"channelType\":%{private}d}", (uint8_t *)&__dst, 0x32u);
                  }
                  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
                    sub_100004CB8(&__dst, v38.__r_.__value_.__l.__data_, v38.__r_.__value_.__l.__size_);
                  }
                  else {
                    std::string __dst = v38;
                  }
                  *(_DWORD *)__int16 v44 = v39;
                  sub_100042D00(a3, (uint64_t)&__dst, (uint64_t)&__dst);
                  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
                    operator delete(__dst.__r_.__value_.__l.__data_);
                  }
                }
              }
              if (v37 < 0) {
                operator delete(__p);
              }
              if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v38.__r_.__value_.__l.__data_);
              }
            }
          }
        }
        __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&v70;
        sub_100005360((void ***)&__dst);
        __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&v69;
        sub_100005360((void ***)&__dst);
        if (v67)
        {
          uint64_t v68 = v67;
          operator delete(v67);
        }
        if ((char)v59 < 0) {
          operator delete(v57);
        }
        if (v56 < 0) {
          operator delete(v55);
        }
        if (v54 < 0) {
          operator delete(v53);
        }
        if (v52 < 0) {
          operator delete(v51[0]);
        }
        v10 += 280;
      }
      while (v10 != v11);
    }
  }
  else
  {
    uint64_t v32 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      LOWORD(v51[0]) = 2082;
      *(void **)((char *)v51 + 2) = "";
      _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,getChannels,invalid locationd\"}", buf, 0x12u);
    }
  }
  *(void *)uint64_t buf = &v40;
  sub_10006AFD0((void ***)buf);
}

void sub_10006EF48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char *a44)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  sub_10001DAB4((uint64_t)&a44);
  a44 = &a28;
  sub_10006AFD0((void ***)&a44);
  _Unwind_Resume(a1);
}

uint64_t sub_10006F004(uint64_t a1, double *a2)
{
  id v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v22[0]) = 2082;
    *(void **)((char *)v22 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,isLocationWithinIgneousCoveredRegion\"}", buf, 0x12u);
  }
  uint64_t v4 = sub_10006B474();
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  sub_10006AE6C(&v17, *((void *)v4 + 19), *((void *)v4 + 20), 0xAF8AF8AF8AF8AF8BLL * ((uint64_t)(*((void *)v4 + 20) - *((void *)v4 + 19)) >> 3));
  double v5 = *a2;
  double v6 = a2[1];
  BOOL v7 = *a2 == 0.0;
  if (v6 != 0.0) {
    BOOL v7 = 0;
  }
  if (v6 <= 180.0 && v6 >= -180.0 && v5 <= 90.0 && v5 >= -90.0 && !v7)
  {
    uint64_t v9 = v17;
    uint64_t v10 = v18;
    if (v17 != v18)
    {
      while (1)
      {
        sub_10001D54C((uint64_t)buf, v9);
        BOOL v11 = *a2 < v30 || *a2 > v32;
        if (v11 || (double v12 = a2[1], v12 < v31))
        {
          std::string::size_type v20 = (void **)v37;
          sub_100005360(&v20);
          std::string::size_type v20 = (void **)v36;
          sub_100005360(&v20);
          if (__p)
          {
            id v35 = __p;
            operator delete(__p);
          }
          if (v29 < 0) {
            operator delete(v28);
          }
          if (v27 < 0) {
            operator delete(v26);
          }
          if (v25 < 0) {
            operator delete(v24);
          }
          if (v23 < 0) {
            operator delete(v22[0]);
          }
        }
        else
        {
          double v13 = v33;
          std::string::size_type v20 = (void **)v37;
          sub_100005360(&v20);
          std::string::size_type v20 = (void **)v36;
          sub_100005360(&v20);
          if (__p)
          {
            id v35 = __p;
            operator delete(__p);
          }
          if (v29 < 0) {
            operator delete(v28);
          }
          if (v27 < 0) {
            operator delete(v26);
          }
          if (v25 < 0) {
            operator delete(v24);
          }
          if (v23 < 0) {
            operator delete(v22[0]);
          }
          if (v12 <= v13)
          {
            uint64_t v15 = 1;
            goto LABEL_45;
          }
        }
        v9 += 280;
        if (v9 == v10) {
          goto LABEL_44;
        }
      }
    }
    goto LABEL_44;
  }
  double v14 = SALogObjectGeneral;
  uint64_t v15 = 0;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v22[0]) = 2082;
    *(void **)((char *)v22 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#chsel,isLocationWithinIgneousCoveredRegion,invalid locationd\"}", buf, 0x12u);
LABEL_44:
    uint64_t v15 = 0;
  }
LABEL_45:
  *(void *)uint64_t buf = &v17;
  sub_10006AFD0((void ***)buf);
  return v15;
}

void sub_10006F31C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

void *sub_10006F340(void *a1, uint64_t a2, void *a3, void *a4)
{
  *a1 = *a3;
  uint64_t v5 = a3[1];
  a1[1] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  a1[2] = *a4;
  uint64_t v6 = a4[1];
  a1[3] = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  BOOL v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v9[0] = 68289026;
    v9[1] = 0;
    __int16 v10 = 2082;
    BOOL v11 = "";
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#alertdisplay,SAAlertDisplay\"}", (uint8_t *)v9, 0x12u);
  }
  return a1;
}

uint64_t sub_10006F43C(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (v2) {
    sub_100028F6C(v2);
  }
  id v3 = *(std::__shared_weak_count **)(a1 + 8);
  if (v3) {
    sub_100028F6C(v3);
  }
  return a1;
}

uint64_t sub_10006F478(void *a1, uint64_t a2)
{
  if (*(unsigned char *)a2)
  {
    if (*(_WORD *)(a2 + 332) == 3) {
      return sub_10006F4A4(a1, a2);
    }
  }
  else if ((*(_DWORD *)(a2 + 204) - 1) <= 2)
  {
    return sub_10006F4A4(a1, a2);
  }
  return sub_10006F9D8((SAPlatformInfo *)a1, a2);
}

uint64_t sub_10006F4A4(void *a1, uint64_t a2)
{
  if (*a1)
  {
    int v4 = sub_1000700A4(a2);
    long long v47 = 0u;
    long long __p = 0u;
    memset(v46, 0, sizeof(v46));
    long long v43 = 0u;
    long long v44 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    memset(v40, 0, sizeof(v40));
    __asm { FMOV            V0.2D, #10.0 }
    long long v49 = _Q0;
    __asm { FMOV            V0.2D, #-1.0 }
    long long v50 = _Q0;
    long long v51 = _Q0;
    uint64_t v48 = 0;
    unint64_t v52 = 0xBFF0000000000000;
    BOOL v11 = sub_10006B474();
    sub_10002B120((uint64_t)v11, (std::string *)v40);
    memset(&v29, 0, sizeof(v29));
    memset(&v28, 0, sizeof(v28));
    memset(&v27, 0, sizeof(v27));
    switch(v4)
    {
      case 1:
        std::string::operator=(&v28, (const std::string *)v40);
        std::string::operator=(&v29, (const std::string *)&v40[24]);
        sub_10000DD48(buf, (char *)[@"FollowUp" UTF8String]);
        int v15 = *(char *)(a2 + 199);
        if (v15 >= 0) {
          double v16 = (const std::string::value_type *)(a2 + 176);
        }
        else {
          double v16 = *(const std::string::value_type **)(a2 + 176);
        }
        if (v15 >= 0) {
          std::string::size_type v17 = *(unsigned __int8 *)(a2 + 199);
        }
        else {
          std::string::size_type v17 = *(void *)(a2 + 184);
        }
        uint64_t v18 = std::string::insert((std::string *)buf, 0, v16, v17);
        std::string::size_type v19 = v18->__r_.__value_.__r.__words[0];
        v39[0] = v18->__r_.__value_.__l.__size_;
        *(void *)((char *)v39 + 7) = *(std::string::size_type *)((char *)&v18->__r_.__value_.__r.__words[1] + 7);
        char v20 = HIBYTE(v18->__r_.__value_.__r.__words[2]);
        v18->__r_.__value_.__l.__size_ = 0;
        v18->__r_.__value_.__r.__words[2] = 0;
        v18->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v27.__r_.__value_.__l.__data_);
        }
        v27.__r_.__value_.__r.__words[0] = v19;
        v27.__r_.__value_.__l.__size_ = v39[0];
        *(std::string::size_type *)((char *)&v27.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v39 + 7);
        *((unsigned char *)&v27.__r_.__value_.__s + 23) = v20;
        if (SBYTE3(v34) < 0) {
          operator delete(*(void **)buf);
        }
        goto LABEL_18;
      case 2:
        char v25 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v31 = 2082;
          double v32 = "";
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#alertdisplay,displayProdBleAlert,test alert not to be displayed\"}", buf, 0x12u);
        }
        goto LABEL_27;
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
        double v12 = SALogObjectGeneral;
        uint64_t v13 = 0;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v31 = 2082;
          double v32 = "";
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#alertdisplay,displayProdBleAlert,not a prod alert\"}", buf, 0x12u);
          uint64_t v13 = 0;
        }
        goto LABEL_28;
      default:
        std::string::operator=(&v28, (const std::string *)v40);
        std::string::operator=(&v29, (const std::string *)&v40[24]);
        std::string::operator=(&v27, (const std::string *)(a2 + 176));
LABEL_18:
        char v21 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          std::string::size_type v22 = &v28;
          if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::string::size_type v22 = (std::string *)v28.__r_.__value_.__r.__words[0];
          }
          char v23 = &v29;
          if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            char v23 = (std::string *)v29.__r_.__value_.__r.__words[0];
          }
          int v24 = *(_DWORD *)(a2 + 324);
          *(_DWORD *)uint64_t buf = 68289794;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v31 = 2082;
          double v32 = "";
          __int16 v33 = 2082;
          unint64_t v34 = v22;
          __int16 v35 = 2082;
          uint32_t v36 = v23;
          __int16 v37 = 1026;
          int v38 = v24;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#alertdisplay,displayProdBleAlert,to display\", \"en\":%{public, location:escape_only}s, \"sp\":%{public, location:escape_only}s, \"bleMsgTypes\":%{public}d}", buf, 0x2Cu);
        }
        (*(void (**)(void, std::string *, std::string *, std::string *))(*(void *)*a1 + 72))(*a1, &v27, &v28, &v29);
LABEL_27:
        uint64_t v13 = 1;
LABEL_28:
        if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v27.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v28.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v29.__r_.__value_.__l.__data_);
        }
        *(void *)uint64_t buf = &v47;
        sub_100005360((void ***)buf);
        *(void *)uint64_t buf = &v46[8];
        sub_100005360((void ***)buf);
        if ((v46[7] & 0x80000000) != 0) {
          operator delete((void *)__p);
        }
        if (SHIBYTE(v44) < 0) {
          operator delete(*((void **)&v43 + 1));
        }
        if (SBYTE7(v43) < 0) {
          operator delete((void *)v42);
        }
        if (SHIBYTE(v41) < 0) {
          operator delete(*(void **)&v40[24]);
        }
        if ((v40[23] & 0x80000000) != 0) {
          operator delete(*(void **)v40);
        }
        break;
    }
  }
  else
  {
    double v14 = SALogObjectGeneral;
    uint64_t v13 = 0;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t v40 = 68289026;
      *(_DWORD *)&v40[4] = 0;
      *(_WORD *)&v40[8] = 2082;
      *(void *)&v40[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#alertdisplay,displayProdBleAlert,invalid telephony\"}", v40, 0x12u);
      return 0;
    }
  }
  return v13;
}

void sub_10006F950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  if (a33 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  sub_100032B20((uint64_t)&a39);
  _Unwind_Resume(a1);
}

uint64_t sub_10006F9D8(SAPlatformInfo *a1, uint64_t a2)
{
  if (!*(void *)a1)
  {
    int v24 = SALogObjectGeneral;
    uint64_t v13 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return v13;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#alertdisplay,displayTestBleAlert,invalid telephony\"}";
LABEL_29:
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, v25, buf, 0x12u);
    return 0;
  }
  if (!*((unsigned char *)SAPlatformInfo::instance(a1) + 9))
  {
    int v24 = SALogObjectGeneral;
    uint64_t v13 = 0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return v13;
    }
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    char v25 = "{\"msg%{public}.0s\":\"#alertdisplay,displayTestBleAlert,not internal install\"}";
    goto LABEL_29;
  }
  int v4 = sub_1000700A4(a2);
  uint64_t v53 = 0;
  long long v52 = 0u;
  long long v50 = 0u;
  memset(v51, 0, sizeof(v51));
  long long v48 = 0u;
  long long v49 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  memset(buf, 0, sizeof(buf));
  __asm { FMOV            V0.2D, #10.0 }
  long long v54 = _Q0;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v55 = _Q0;
  long long v56 = _Q0;
  unint64_t v57 = 0xBFF0000000000000;
  BOOL v11 = sub_10006B474();
  *(void *)&double v12 = sub_10002B120((uint64_t)v11, (std::string *)buf).n128_u64[0];
  memset(&v38, 0, sizeof(v38));
  memset(&__p, 0, sizeof(__p));
  memset(&v36, 0, sizeof(v36));
  char v35 = 0;
  uint64_t v13 = 0;
  switch(v4)
  {
    case 3:
      sub_10000DD48(v39, (char *)[@"BLE:APPLE SAFETY ALERTS LIVABILITY TEST: UTF8String", v12]);
      if (buf[23] >= 0) {
        double v14 = buf;
      }
      else {
        double v14 = *(const std::string::value_type **)buf;
      }
      if (buf[23] >= 0) {
        std::string::size_type v15 = buf[23];
      }
      else {
        std::string::size_type v15 = *(void *)&buf[8];
      }
      double v16 = std::string::append((std::string *)v39, v14, v15);
      std::string::size_type v17 = v16->__r_.__value_.__r.__words[0];
      v44[0] = v16->__r_.__value_.__l.__size_;
      *(void *)((char *)v44 + 7) = *(std::string::size_type *)((char *)&v16->__r_.__value_.__r.__words[1] + 7);
      char v18 = HIBYTE(v16->__r_.__value_.__r.__words[2]);
      v16->__r_.__value_.__l.__size_ = 0;
      v16->__r_.__value_.__r.__words[2] = 0;
      v16->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      __p.__r_.__value_.__r.__words[0] = v17;
      __p.__r_.__value_.__l.__size_ = v44[0];
      *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v44 + 7);
      *((unsigned char *)&__p.__r_.__value_.__s + 23) = v18;
      if ((v39[23] & 0x80000000) != 0) {
        operator delete(*(void **)v39);
      }
      sub_10000DD48(v39, (char *)[@"BLE:APPLE SAFETY ALERTS LIVABILITY TEST:" UTF8String]);
      if (v46 >= 0) {
        std::string::size_type v19 = &buf[24];
      }
      else {
        std::string::size_type v19 = *(const std::string::value_type **)&buf[24];
      }
      if (v46 >= 0) {
        std::string::size_type v20 = HIBYTE(v46);
      }
      else {
        std::string::size_type v20 = v46;
      }
      char v21 = std::string::append((std::string *)v39, v19, v20);
      std::string::size_type v22 = v21->__r_.__value_.__r.__words[0];
      v44[0] = v21->__r_.__value_.__l.__size_;
      *(void *)((char *)v44 + 7) = *(std::string::size_type *)((char *)&v21->__r_.__value_.__r.__words[1] + 7);
      char v23 = HIBYTE(v21->__r_.__value_.__r.__words[2]);
      v21->__r_.__value_.__l.__size_ = 0;
      v21->__r_.__value_.__r.__words[2] = 0;
      v21->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v38.__r_.__value_.__l.__data_);
      }
      v38.__r_.__value_.__r.__words[0] = v22;
      v38.__r_.__value_.__l.__size_ = v44[0];
      *(std::string::size_type *)((char *)&v38.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v44 + 7);
      *((unsigned char *)&v38.__r_.__value_.__s + 23) = v23;
      if ((v39[23] & 0x80000000) != 0) {
        operator delete(*(void **)v39);
      }
      std::string::operator=(&v36, (const std::string *)(a2 + 176));
      goto LABEL_33;
    case 4:
      double v26 = SALogObjectGeneral;
      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_47;
      }
      *(void *)int v39 = 68289026;
      *(_WORD *)&v39[8] = 2082;
      *(void *)&v39[10] = "";
      std::string v27 = "{\"msg%{public}.0s\":\"#alertdisplay,test kTestInternalAlertForNoDisplay\"}";
      goto LABEL_43;
    case 5:
      std::string::operator=(&__p, (const std::string *)buf);
      std::string::operator=(&v38, (const std::string *)&buf[24]);
      std::string::operator=(&v36, (const std::string *)(a2 + 176));
      std::string v28 = sub_10003E368();
      sub_10003DD80((uint64_t)v28, @"silentDisplayAlert", &v35);
LABEL_33:
      std::string v29 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        p_p = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        __int16 v31 = &v38;
        if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          __int16 v31 = (std::string *)v38.__r_.__value_.__r.__words[0];
        }
        int v32 = *(_DWORD *)(a2 + 324);
        *(void *)int v39 = 68289794;
        *(_WORD *)&v39[8] = 2082;
        *(void *)&v39[10] = "";
        *(_WORD *)&v39[18] = 2082;
        *(void *)&unsigned char v39[20] = p_p;
        __int16 v40 = 2082;
        long long v41 = v31;
        __int16 v42 = 1026;
        int v43 = v32;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#alertdisplay,displayTestBleAlert,to display\", \"en\":%{public, location:escape_only}s, \"sp\":%{public, location:escape_only}s, \"bleMsgTypes\":%{public}d}", v39, 0x2Cu);
      }
      if (v35)
      {
        uint64_t v13 = 1;
        (*(void (**)(void, std::string *, uint64_t))(**((void **)a1 + 2) + 16))(*((void *)a1 + 2), &__p, 1);
      }
      else
      {
        (*(void (**)(void, std::string *, std::string *, std::string *))(**(void **)a1 + 72))(*(void *)a1, &v36, &__p, &v38);
LABEL_47:
        uint64_t v13 = 1;
      }
LABEL_48:
      if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v36.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v38.__r_.__value_.__l.__data_);
      }
      *(void *)int v39 = &v52;
      sub_100005360((void ***)v39);
      *(void *)int v39 = &v51[8];
      sub_100005360((void ***)v39);
      if ((v51[7] & 0x80000000) != 0) {
        operator delete((void *)v50);
      }
      if (SHIBYTE(v49) < 0) {
        operator delete(*((void **)&v48 + 1));
      }
      if (SBYTE7(v48) < 0) {
        operator delete((void *)v47);
      }
      if (SHIBYTE(v46) < 0) {
        operator delete(*(void **)&buf[24]);
      }
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      break;
    case 6:
      double v26 = SALogObjectGeneral;
      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_47;
      }
      *(void *)int v39 = 68289026;
      *(_WORD *)&v39[8] = 2082;
      *(void *)&v39[10] = "";
      std::string v27 = "{\"msg%{public}.0s\":\"#alertdisplay,test kTestInternalQEOrDevNoDisplay\"}";
LABEL_43:
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, v27, v39, 0x12u);
      goto LABEL_47;
    case 7:
      __int16 v33 = SALogObjectGeneral;
      uint64_t v13 = 0;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(void *)int v39 = 68289026;
        *(_WORD *)&v39[8] = 2082;
        *(void *)&v39[10] = "";
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#alertdisplay,test kAlertTypeInvalid\"}", v39, 0x12u);
        uint64_t v13 = 0;
      }
      goto LABEL_48;
    default:
      goto LABEL_48;
  }
  return v13;
}

void sub_100070014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  if (a33 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  sub_100032B20((uint64_t)&a39);
  _Unwind_Resume(a1);
}

uint64_t sub_1000700A4(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 324);
    int v4 = *(unsigned __int16 *)(a1 + 332);
    int v15 = 68289539;
    int v16 = 0;
    __int16 v17 = 2082;
    char v18 = "";
    __int16 v19 = 1025;
    int v20 = v3;
    __int16 v21 = 1025;
    int v22 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#alertdisplay,parseAlertInformation\", \"bleMsgTypes\":%{private}d, \"bleSenderType\":%{private}d}", (uint8_t *)&v15, 0x1Eu);
  }
  int v5 = *(_DWORD *)(a1 + 324);
  unsigned int v6 = *(unsigned __int16 *)(a1 + 332);
  if ((v5 - 1) <= 1 && v6 == 3)
  {
    __int16 v10 = SALogObjectGeneral;
    BOOL v11 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (v11)
    {
      int v15 = 68289026;
      int v16 = 0;
      __int16 v17 = 2082;
      char v18 = "";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#alertdisplay,parseAlertInformation isLiveAppleAlert or isLiveAppleUpdateAlert\"}", (uint8_t *)&v15, 0x12u);
      return 0;
    }
  }
  else if (v5 || v6 != 3)
  {
    if (v5 == 1 && v6 == 64512)
    {
      double v12 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        int v15 = 68289026;
        int v16 = 0;
        __int16 v17 = 2082;
        char v18 = "";
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#alertdisplay,parseAlertInformation isLivabilityAlert\"}", (uint8_t *)&v15, 0x12u);
      }
      return 3;
    }
    else if (v5 == 1 && v6 == 64513)
    {
      uint64_t v13 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        int v15 = 68289026;
        int v16 = 0;
        __int16 v17 = 2082;
        char v18 = "";
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#alertdisplay,parseAlertInformation isInternalTestAlert\"}", (uint8_t *)&v15, 0x12u);
      }
      return 4;
    }
    else
    {
      uint64_t result = 7;
      if (v5 == 1 && v6 >= 0xFC03)
      {
        double v14 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          int v15 = 68289026;
          int v16 = 0;
          __int16 v17 = 2082;
          char v18 = "";
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#alertdisplay,parseAlertInformation isQEOrDevTest\"}", (uint8_t *)&v15, 0x12u);
        }
        return 5;
      }
    }
  }
  else
  {
    BOOL v8 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v15 = 68289026;
      int v16 = 0;
      __int16 v17 = 2082;
      char v18 = "";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#alertdisplay,parseAlertInformation isLiveAppleTestAlert\"}", (uint8_t *)&v15, 0x12u);
    }
    return 2;
  }
  return result;
}

void sub_100070550(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10007056C(void *a1, void *a2)
{
  id v3 = a2;
  *a1 = off_1000F88F8;
  id v4 = v3;
  a1[1] = v4;
  a1[2] = 0;
  v5[0] = off_1000F8938;
  v5[1] = a1;
  v5[3] = v5;
  sub_100070B9C((uint64_t)(a1 + 3), v4, 30.0);
}

void sub_100070658(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;
  sub_100070D40(v4);

  _Unwind_Resume(a1);
}

uint64_t sub_10007069C(uint64_t a1)
{
  *(void *)a1 = off_1000F88F8;
  sub_100070D40(a1 + 24);

  return a1;
}

void sub_1000706F4(uint64_t a1)
{
  sub_10007069C(a1);

  operator delete();
}

void sub_10007072C(uint64_t a1, int a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 68289282;
    v7[1] = 0;
    __int16 v8 = 2082;
    uint64_t v9 = "";
    __int16 v10 = 1026;
    int v11 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#wow,assertWoW,scheduled\", \"state\":%{public}hhd}", (uint8_t *)v7, 0x18u);
  }
  LOBYTE(v7[0]) = 0;
  if (!a2 || (int v5 = *((_DWORD *)sub_10006B474() + 2), LOBYTE(v7[0]) = v5 != 0, v6 = -1.0, !v5)) {
    double v6 = 0.0;
  }
  sub_100070830((unsigned __int8 *)(a1 + 24), (unsigned __int8 *)v7, v6);
}

void sub_100070830(unsigned __int8 *a1, unsigned __int8 *a2, double a3)
{
  double v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289282;
    int v12 = 0;
    __int16 v13 = 2082;
    double v14 = "";
    __int16 v15 = 2050;
    double v16 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saHysteresis,setValue\", \"delay\":\"%{public}0.2f\"}", buf, 0x1Cu);
  }
  if (a3 < 0.0) {
    a3 = *((double *)a1 + 1);
  }
  if (a3 == 0.0)
  {
    int v7 = *a2;
    if (a1[64] || !a1[1] || *a1 != v7)
    {
      *(_WORD *)a1 = v7 | 0x100;
      a1[64] = 0;
      (*(void (**)(void))(**((void **)a1 + 3) + 40))(*((void *)a1 + 3));
      __int16 v8 = *((void *)a1 + 2);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100070DA4;
      block[3] = &unk_1000F5EA8;
      void block[4] = a1;
      dispatch_async(v8, block);
    }
  }
  else
  {
    int v9 = *a2;
    if (!a1[1] || *a1 != v9)
    {
      *(_WORD *)a1 = v9 | 0x100;
      a1[64] = 0;
      (*(void (**)(void))(**((void **)a1 + 3) + 40))(*((void *)a1 + 3));
      sub_100070F5C((uint64_t)a1);
    }
  }
}

void sub_100070A2C()
{
}

void *sub_100070A40(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F8938;
  result[1] = v3;
  return result;
}

uint64_t sub_100070A88(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F8938;
  a2[1] = v2;
  return result;
}

id sub_100070AB4(uint64_t a1, unsigned __int8 *a2)
{
  id result = *(id *)(*(void *)(a1 + 8) + 16);
  if (result) {
    return [result assertWoW:*a2];
  }
  return result;
}

uint64_t sub_100070ACC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100070B0C()
{
}

void *sub_100070B18(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100070B9C(uint64_t a1, void *a2, double a3)
{
  id v5 = a2;
  *(_DWORD *)a1 = 0;
  *(double *)(a1 + 8) = a3;
  id v6 = v5;
  *(void *)(a1 + 16) = v6;
  sub_10000DD48(&__p, "com.apple.safetyalerts.hysteresisTimer");
  SATimer::create(v6);
}

void sub_100070C40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v19 = *v17;
  *__int16 v17 = 0;
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_100070CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_100070D40(uint64_t a1)
{
  sub_100070B18((void *)(a1 + 32));
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  return a1;
}

void sub_100070DA4(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 **)(a1 + 32);
  sub_100070E34(v1);
}

void sub_100070E2C(uint64_t a1)
{
}

void sub_100070E34(unsigned __int8 *a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v8[0] = 68289026;
    v8[1] = 0;
    __int16 v9 = 2082;
    __int16 v10 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saHysteresis,onHysteresisTimerExpired\"}", (uint8_t *)v8, 0x12u);
  }
  int v3 = a1[3];
  if (a1[1]) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4)
  {
    int v6 = v3 != 0;
    int v5 = a1[1] != 0;
  }
  else
  {
    int v5 = *a1;
    int v6 = a1[2];
  }
  if (v5 != v6)
  {
    *((_WORD *)a1 + 1) = *(_WORD *)a1;
    uint64_t v7 = *((void *)a1 + 7);
    if (v7) {
      (*(void (**)(uint64_t, unsigned __int8 *))(*(void *)v7 + 48))(v7, a1 + 2);
    }
  }
}

void *sub_100070F5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  v3[0] = off_1000F89C8;
  v3[1] = a1;
  v3[3] = v3;
  (*(void (**)(uint64_t, void *))(*(void *)v1 + 16))(v1, v3);
  return sub_10000F6D4(v3);
}

void sub_100071008(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10000F6D4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_100071020()
{
}

void *sub_100071034(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F89C8;
  result[1] = v3;
  return result;
}

uint64_t sub_10007107C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F89C8;
  a2[1] = v2;
  return result;
}

void sub_1000710A8(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 **)(a1 + 8);
  v1[64] = 0;
  sub_100070E34(v1);
}

uint64_t sub_1000710B4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000710F4()
{
}

uint64_t sub_100071100(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  *(void *)a1 = v5;
  sub_10000F63C(a1 + 8, a3);
  *(unsigned char *)(a1 + 40) = 0;

  return a1;
}

void sub_100071154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10007116C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(v1 + 32);
  if (!v3) {
    sub_100005520();
  }
  (*(void (**)(uint64_t))(*(void *)v3 + 48))(v3);
}

uint64_t sub_10007121C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 32);
  if (!v1) {
    sub_100005520();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void sub_100071270(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v1 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#xpcsel,#warning,activityAlreadyScheduled\"}", buf, 0x12u);
    }
  }
  else
  {
    xpc_object_t v3 = xpc_dictionary_create(0, 0, 0);
    if (v3)
    {
      long long v35 = 0u;
      long long __p = 0u;
      memset(v34, 0, sizeof(v34));
      long long v31 = 0u;
      long long v32 = 0u;
      long long v30 = 0u;
      long long v29 = 0u;
      memset(buf, 0, sizeof(buf));
      __asm { FMOV            V0.2D, #10.0 }
      long long v37 = _Q0;
      __asm { FMOV            V0.2D, #-1.0 }
      long long v38 = _Q0;
      long long v39 = _Q0;
      uint64_t v36 = 0;
      unint64_t v40 = 0xBFF0000000000000;
      __int16 v10 = sub_10006B474();
      sub_10002B120((uint64_t)v10, (std::string *)buf);
      unsigned int v12 = [*(id *)SAPlatformInfo::instance(v11) isEqualToString:@"Watch"];
      long long v13 = v38;
      if (v12) {
        double v14 = *(double *)&v38;
      }
      else {
        double v14 = *((double *)&v38 + 1);
      }
      if (v14 <= 0.0) {
        double v14 = 30.0;
      }
      int64_t v15 = (uint64_t)v14;
      double v16 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t v19 = 68289794;
        *(_DWORD *)&void v19[4] = 0;
        __int16 v20 = 2082;
        __int16 v21 = "";
        __int16 v22 = 2050;
        double v23 = (double)v15;
        __int16 v24 = 2050;
        uint64_t v25 = v13;
        __int16 v26 = 2050;
        uint64_t v27 = *((void *)&v13 + 1);
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#xpcsel,scheduleXPCActivity,\", \"delayPeriod\":\"%{public}0.3f\", \"watchHysteresis\":\"%{public}0.3f\", \"phoneHysteresis\":\"%{public}0.3f\"}", v19, 0x30u);
      }
      xpc_dictionary_set_BOOL(v3, XPC_ACTIVITY_REPEATING, 0);
      xpc_dictionary_set_int64(v3, XPC_ACTIVITY_GRACE_PERIOD, v15);
      xpc_dictionary_set_BOOL(v3, XPC_ACTIVITY_ALLOW_BATTERY, 1);
      xpc_dictionary_set_BOOL(v3, XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY, 1);
      handler[0] = _NSConcreteStackBlock;
      handler[1] = 3221225472;
      handler[2] = sub_100071630;
      handler[3] = &unk_1000F5DD8;
      handler[4] = a1;
      xpc_activity_register((const char *)[@"com.apple.safetyalerts.icu" UTF8String], v3, handler);
      *(unsigned char *)(a1 + 40) = 1;
      *(void *)uint64_t v19 = &v35;
      sub_100005360((void ***)v19);
      *(void *)uint64_t v19 = &v34[8];
      sub_100005360((void ***)v19);
      if ((v34[7] & 0x80000000) != 0) {
        operator delete((void *)__p);
      }
      if (SHIBYTE(v32) < 0) {
        operator delete(*((void **)&v31 + 1));
      }
      if (SBYTE7(v31) < 0) {
        operator delete((void *)v30);
      }
      if (SHIBYTE(v29) < 0) {
        operator delete(*(void **)&buf[24]);
      }
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
    }
    else
    {
      __int16 v17 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#xpcsel,#warning,scheduleXPCActivity error\"}", buf, 0x12u);
      }
    }
  }
}

void sub_10007160C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_100032B20((uint64_t)va);

  _Unwind_Resume(a1);
}

void sub_100071630(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  xpc_object_t v3 = a2;
  BOOL v4 = v3;
  if (!v3)
  {
    __int16 v8 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_17;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)int64_t v15 = 2082;
    *(void *)&_DWORD v15[2] = "";
    __int16 v9 = "{\"msg%{public}.0s\":\"#xpcsel,#warning,process_xpcActivity,activity is nil\"}";
LABEL_15:
    __int16 v10 = buf;
    goto LABEL_16;
  }
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  int v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289282;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)int64_t v15 = 2082;
    *(void *)&_DWORD v15[2] = "";
    *(_WORD *)&unsigned char v15[10] = 2050;
    *(void *)&v15[12] = state;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#xpcsel,runXPCActivity Scheduled\", \"state\":%{public}llu}", buf, 0x1Cu);
  }
  if (!state) {
    goto LABEL_17;
  }
  if (state != 2)
  {
    __int16 v8 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_17;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)int64_t v15 = 2082;
    *(void *)&_DWORD v15[2] = "";
    __int16 v9 = "{\"msg%{public}.0s\":\"#xpcsel,#warning,runXPCActivity,invalidActicity\"}";
    goto LABEL_15;
  }
  if (*(void *)(v2 + 32))
  {
    uint64_t v7 = *(NSObject **)v2;
    *(void *)uint64_t buf = _NSConcreteStackBlock;
    *(void *)int64_t v15 = 3221225472;
    *(void *)&unsigned char v15[8] = sub_10007116C;
    *(void *)&v15[16] = &unk_1000F5EA8;
    uint64_t v16 = v2;
    dispatch_async(v7, buf);
  }
  if (!xpc_activity_set_state(v4, 5))
  {
    __int16 v8 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v11[0] = 68289026;
      v11[1] = 0;
      __int16 v12 = 2082;
      long long v13 = "";
      __int16 v9 = "{\"msg%{public}.0s\":\"#xpcsel,#warning,runXPCActivity,setState fail\"}";
      __int16 v10 = (uint8_t *)v11;
LABEL_16:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v9, v10, 0x12u);
    }
  }
LABEL_17:
}

void sub_100071898(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000718B0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    xpc_activity_unregister((const char *)[@"com.apple.safetyalerts.icu" UTF8String]);
    *(unsigned char *)(a1 + 40) = 0;
  }
}

void sub_1000718EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(_OWORD *)a1 = xmmword_1000B6630;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 32) = 0;
  id v4 = v3;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 88) = 0;
  *(unsigned char *)(a1 + 92) = 0;
  *(unsigned char *)(a1 + 96) = 0;
  *(void *)(a1 + 112) = 0;
  *(unsigned char *)(a1 + 100) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 104) = a1 + 112;
  sub_10000DD48((void *)(a1 + 128), "Unknown");
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(unsigned char *)(a1 + 168) = 0;
  id v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v7 = 2082;
    __int16 v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,init\"}", buf, 0x12u);
  }
  *(double *)(a1 + 24) = (double)*((int *)sub_10003E368() + 78);
  sub_100066360(*(void **)(a1 + 40));
}

void sub_1000722A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9, void *a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  sub_10000F6D4(&a18);
  sub_10005AC3C(&a34);
  uint64_t v37 = *(void *)(v35 + 160);
  *(void *)(v35 + 160) = 0;
  if (v37) {
    (*(void (**)(uint64_t))(*(void *)v37 + 8))(v37);
  }
  uint64_t v38 = *v34;
  uint64_t *v34 = 0;
  if (v38) {
    (*(void (**)(uint64_t))(*(void *)v38 + 8))(v38);
  }
  if (*(char *)(v35 + 151) < 0) {
    operator delete(*a9);
  }
  sub_10005E048(*(void **)(v35 + 112));

  _Unwind_Resume(a1);
}

uint64_t sub_1000723DC(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = 68289026;
    int v12 = 0;
    __int16 v13 = 2082;
    double v14 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,released\"}", (uint8_t *)&v11, 0x12u);
    uint64_t v2 = SALogObjectGeneral;
  }
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = 68289026;
    int v12 = 0;
    __int16 v13 = 2082;
    double v14 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,unregisterForLinkQualityNotifications\"}", (uint8_t *)&v11, 0x12u);
  }
  id v3 = *(void **)(a1 + 32);
  if (v3)
  {
    [v3 stopMonitoringEventType:7];
    id v4 = *(void **)(a1 + 32);
    if (v4)
    {
      [v4 invalidate];
      id v5 = *(void **)(a1 + 32);
      *(void *)(a1 + 32) = 0;
    }
  }
  uint64_t v6 = *(void *)(a1 + 160);
  if (v6)
  {
    *(void *)(a1 + 160) = 0;
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  __int16 v7 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = 0;

  uint64_t v8 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = 0;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  uint64_t v9 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = 0;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  if (*(char *)(a1 + 151) < 0) {
    operator delete(*(void **)(a1 + 128));
  }
  sub_10005E048(*(void **)(a1 + 112));

  return a1;
}

void sub_1000725F0(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_100004CA4(a1);
  }
  _Unwind_Resume(a1);
}

void sub_1000725FC(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v11[0] = 68289026;
    v11[1] = 0;
    __int16 v12 = 2082;
    __int16 v13 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,onInitCompleted\"}", (uint8_t *)v11, 0x12u);
  }
  *(unsigned char *)(a1 + 168) = 1;
  char v3 = *(unsigned char *)(a1 + 61);
  if (v3)
  {
    char v3 = *(unsigned char *)(a1 + 60) != 0;
    uint64_t v4 = *(void *)(a1 + 160);
    BOOL v5 = v4 == 0;
    if (v4 && *(unsigned char *)(a1 + 60))
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 48))(v4);
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(a1 + 160);
    BOOL v5 = v4 == 0;
  }
  if (!v5 && (v3 & 1) == 0) {
    (*(void (**)(uint64_t))(*(void *)v4 + 40))(v4);
  }
LABEL_11:
  uint64_t v6 = *(void *)(a1 + 112);
  if (v6)
  {
    uint64_t v7 = a1 + 112;
    do
    {
      int v8 = *(_DWORD *)(v6 + 28);
      BOOL v9 = v8 < 2;
      if (v8 >= 2) {
        __int16 v10 = (uint64_t *)v6;
      }
      else {
        __int16 v10 = (uint64_t *)(v6 + 8);
      }
      if (!v9) {
        uint64_t v7 = v6;
      }
      uint64_t v6 = *v10;
    }
    while (*v10);
    if (v7 != a1 + 112 && *(int *)(v7 + 28) <= 2)
    {
      sub_100075308((uint64_t **)(a1 + 104), 2);
      sub_100072798(a1);
    }
  }
}

void sub_100072798(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)uint64_t v16 = 2082;
    *(void *)&v16[2] = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,submitMetrics\"}", buf, 0x12u);
  }
  uint64_t v3 = *(void *)(a1 + 120);
  if (v3)
  {
    uint64_t v4 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)uint64_t v16 = 2082;
    *(void *)&v16[2] = "";
    *(_WORD *)&unsigned char v16[10] = 2049;
    *(void *)&v16[12] = v3;
    BOOL v5 = "{\"msg%{public}.0s\":\"#bm,submitMetrics,fetch in progress\", \"count\":%{private}lu}";
    uint64_t v6 = v4;
    uint32_t v7 = 28;
    goto LABEL_6;
  }
  int v8 = SALogObjectGeneral;
  BOOL v9 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v9
    && (*(_DWORD *)uint64_t buf = 68289026,
        *(_DWORD *)&uint8_t buf[4] = 0,
        *(_WORD *)uint64_t v16 = 2082,
        *(void *)&v16[2] = "",
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,submitAdvertisorStatusMetrics\"}", buf, 0x12u), (uint64_t v10 = *(void *)(a1 + 120)) != 0))
  {
    int v11 = SALogObjectGeneral;
    uint64_t v12 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    if (v12)
    {
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)uint64_t v16 = 2082;
      *(void *)&v16[2] = "";
      *(_WORD *)&unsigned char v16[10] = 2049;
      *(void *)&v16[12] = v10;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,submitAdvertisorStatusMetrics,fetch in progress\", \"count\":%{private}lu}", buf, 0x1Cu);
    }
  }
  else
  {
    int v13 = SACommonUtils::currentHourOfDay((SACommonUtils *)v9);
    *(void *)uint64_t buf = _NSConcreteStackBlock;
    *(void *)uint64_t v16 = 3221225472;
    *(void *)&v16[8] = sub_10007413C;
    *(void *)&v16[16] = &unk_1000F6F48;
    uint64_t v17 = a1;
    int v18 = v13;
    uint64_t v12 = AnalyticsSendEventLazy();
  }
  if (*(unsigned char *)(a1 + 16))
  {
    SACommonUtils::currentHourOfDay((SACommonUtils *)v12);
    AnalyticsSendEventLazy();
    *(unsigned char *)(a1 + 16) = 0;
  }
  else
  {
    uint64_t v14 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)uint64_t v16 = 2082;
      *(void *)&v16[2] = "";
      BOOL v5 = "{\"msg%{public}.0s\":\"#bm,submitMetrics,not Submitting\"}";
      uint64_t v6 = v14;
      uint32_t v7 = 18;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v5, buf, v7);
    }
  }
}

void sub_100072AC8(uint64_t a1, int a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289283;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint32_t v7 = "";
    __int16 v8 = 1025;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,onCellNetworkConnectionChange\", \"isConnected\":%{private}hhd}", (uint8_t *)v5, 0x18u);
  }
  *(_WORD *)(a1 + 56) = a2 | 0x100;
}

uint64_t sub_100072BA0(uint64_t a1, int a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 68289283;
    v6[1] = 0;
    __int16 v7 = 2082;
    __int16 v8 = "";
    __int16 v9 = 1025;
    int v10 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,onEnhancedDeliveryStateChanged\", \"isEnhancedDeliveryEnabled\":%{private}hhd}", (uint8_t *)v6, 0x18u);
  }
  *(_WORD *)(a1 + 60) = a2 | 0x100;
  uint64_t result = *(void *)(a1 + 160);
  if (result)
  {
    if (*(unsigned char *)(a1 + 168) && a2)
    {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 48))(result);
    }
    else if (*(unsigned char *)(a1 + 168))
    {
      if ((a2 & 1) == 0) {
        return (*(uint64_t (**)(uint64_t))(*(void *)result + 40))(result);
      }
    }
  }
  return result;
}

void sub_100072CE0(uint64_t a1, int a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289283;
    v5[1] = 0;
    __int16 v6 = 2082;
    __int16 v7 = "";
    __int16 v8 = 1025;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,onInexpensiveNetworkConnectionChange\", \"isConnected\":%{private}hhd}", (uint8_t *)v5, 0x18u);
  }
  *(_WORD *)(a1 + 66) = a2 | 0x100;
}

void sub_100072DB8(uint64_t a1, int a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289283;
    v5[1] = 0;
    __int16 v6 = 2082;
    __int16 v7 = "";
    __int16 v8 = 1025;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,onIsInCoveredAreaStateChange\", \"isInCoveredArea\":%{private}hhd}", (uint8_t *)v5, 0x18u);
  }
  *(_WORD *)(a1 + 58) = a2 | 0x100;
}

void sub_100072E90(uint64_t a1, int a2)
{
  uint64_t v2 = a1 + 112;
  uint64_t v3 = *(void *)(a1 + 112);
  if (v3)
  {
    uint64_t v4 = (uint64_t **)(a1 + 104);
    uint64_t v5 = v2;
    do
    {
      int v6 = *(_DWORD *)(v3 + 28);
      BOOL v7 = v6 < a2;
      if (v6 >= a2) {
        __int16 v8 = (uint64_t *)v3;
      }
      else {
        __int16 v8 = (uint64_t *)(v3 + 8);
      }
      if (!v7) {
        uint64_t v5 = v3;
      }
      uint64_t v3 = *v8;
    }
    while (*v8);
    if (v5 != v2 && *(_DWORD *)(v5 + 28) <= a2) {
      sub_100075308(v4, a2);
    }
  }
}

void sub_100072EDC(uint64_t a1, int a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289283;
    v5[1] = 0;
    __int16 v6 = 2082;
    BOOL v7 = "";
    __int16 v8 = 1025;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,onSubscriptionStateChange\", \"isSubscribed\":%{private}hhd}", (uint8_t *)v5, 0x18u);
  }
  *(_WORD *)(a1 + 62) = a2 | 0x100;
}

void sub_100072FB4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = a2;
  uint64_t v4 = v3;
  if (!v3)
  {
    uint64_t v12 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      goto LABEL_20;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v19) = 2082;
    *(void *)((char *)&v19 + 2) = "";
    __int16 v8 = "{\"msg%{public}.0s\":\"#bm,processXpcActivity,activity is nil\"}";
    goto LABEL_17;
  }
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  __int16 v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v19) = 2082;
    *(void *)((char *)&v19 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,processXpcActivity\"}", buf, 0x12u);
  }
  if (state == 2)
  {
    int v13 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      LOWORD(v19) = 2082;
      *(void *)((char *)&v19 + 2) = "";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,processXpcActivity,run\"}", buf, 0x12u);
    }
    uint64_t v14 = *(NSObject **)(v2 + 40);
    *(void *)uint64_t buf = _NSConcreteStackBlock;
    *(void *)&long long v19 = 3221225472;
    *((void *)&v19 + 1) = sub_1000732D4;
    __int16 v20 = &unk_1000F5EA8;
    uint64_t v21 = v2;
    dispatch_async(v14, buf);
    if (xpc_activity_set_state(v4, 5)) {
      goto LABEL_20;
    }
    uint64_t v12 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      goto LABEL_20;
    }
    v15[0] = 68289026;
    v15[1] = 0;
    __int16 v16 = 2082;
    uint64_t v17 = "";
    __int16 v8 = "{\"msg%{public}.0s\":\"#bm,processXpcActivity,failed to set state\"}";
    int v9 = (uint8_t *)v15;
LABEL_18:
    int v10 = v12;
    os_log_type_t v11 = OS_LOG_TYPE_ERROR;
    goto LABEL_19;
  }
  if (state)
  {
    uint64_t v12 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      goto LABEL_20;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v19) = 2082;
    *(void *)((char *)&v19 + 2) = "";
    __int16 v8 = "{\"msg%{public}.0s\":\"#bm,processXpcActivity,unexpected xpcActivity\"}";
LABEL_17:
    int v9 = buf;
    goto LABEL_18;
  }
  uint64_t v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    LOWORD(v19) = 2082;
    *(void *)((char *)&v19 + 2) = "";
    __int16 v8 = "{\"msg%{public}.0s\":\"#bm,processXpcActivity,checkin\"}";
    int v9 = buf;
    int v10 = v7;
    os_log_type_t v11 = OS_LOG_TYPE_DEFAULT;
LABEL_19:
    _os_log_impl((void *)&_mh_execute_header, v10, v11, v8, v9, 0x12u);
  }
LABEL_20:
}

void sub_1000732BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000732D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_100073364(v1);
}

uint64_t *sub_10007335C(uint64_t a1)
{
  return sub_100073364(*(void *)(a1 + 32));
}

uint64_t *sub_100073364(uint64_t a1)
{
  int v2 = SACommonUtils::currentHourOfDay((SACommonUtils *)a1);
  *(unsigned char *)(a1 + 16) = 0;
  if (v2 >= *(_DWORD *)a1 && v2 <= *(_DWORD *)(a1 + 4))
  {
    uint64_t v3 = (uint32_t *)sub_10003E368() + 79;
  }
  else
  {
    if (v2 < *(_DWORD *)(a1 + 8) || v2 > *(_DWORD *)(a1 + 12)) {
      goto LABEL_11;
    }
    uint64_t v3 = (uint32_t *)(sub_10003E368() + 40);
  }
  if (*v3 <= 0x64)
  {
    uint32_t v4 = *v3;
    BOOL v5 = arc4random_uniform(0x64u) <= v4;
  }
  else
  {
    BOOL v5 = 0;
  }
  *(unsigned char *)(a1 + 16) = v5;
LABEL_11:
  __int16 v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289026;
    __int16 v15 = 2082;
    __int16 v16 = "";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,onXpcActivityTriggered\"}", (uint8_t *)&buf, 0x12u);
  }
  time_t v7 = time(0);
  if (!*(unsigned char *)(a1 + 168)) {
    sub_10005E15C((uint64_t *)(a1 + 104), 2, 2);
  }
  uint64_t result = *(uint64_t **)(a1 + 160);
  if (result)
  {
    (*(void (**)(uint64_t *))(*result + 32))(result);
    uint64_t result = sub_10005E15C((uint64_t *)(a1 + 104), 0, 0);
  }
  if (*(void *)(a1 + 152))
  {
    sub_10005E15C((uint64_t *)(a1 + 104), 1, 1);
    uint64_t v9 = (uint64_t)((double)(uint64_t)(double)v7 + -978307200.0);
    uint64_t v10 = *(void *)(a1 + 152);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    _DWORD v11[2] = sub_100073600;
    v11[3] = &unk_1000F8A38;
    void v11[4] = a1;
    v11[5] = v9;
    int v13 = 0;
    v12[0] = off_1000F4E78;
    v12[1] = objc_retainBlock(v11);
    int v13 = v12;
    (*(void (**)(uint64_t, void *, double))(*(void *)v10 + 24))(v10, v12, 0.0);
    return sub_10000F6D4(v12);
  }
  return result;
}

void sub_1000735E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_10000F6D4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_100073600(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(void *)BOOL v5 = 68289026;
    *(_WORD *)&v5[8] = 2082;
    *(void *)&v5[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,biome done\"}", v5, 0x12u);
  }
  sub_100072E90(v2, 1);
  (*(void (**)(unsigned char *__return_ptr, double))(**(void **)(v2 + 152) + 144))(v5, (double)*(uint64_t *)(a1 + 40));
  uint32_t v4 = (void **)(v2 + 128);
  if (*(char *)(v2 + 151) < 0) {
    operator delete(*v4);
  }
  *(_OWORD *)uint32_t v4 = *(_OWORD *)v5;
  *(void *)(v2 + 144) = *(void *)&v5[16];
  sub_100072798(v2);
}

id sub_100073734(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = objc_opt_new();
  uint32_t v4 = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 40)];
  [v3 setObject:v4 forKeyedSubscript:@"timeofSample"];

  BOOL v5 = +[NSNumber numberWithDouble:*((double *)sub_100003318() + 16)];
  [v3 setObject:v5 forKeyedSubscript:@"batteryChargeLevel"];

  uint64_t v7 = SASettings::instance(v6);
  __int16 v8 = +[NSNumber numberWithBool:(*(uint64_t (**)(uint64_t))(*(void *)v7 + 96))(v7)];
  [v3 setObject:v8 forKeyedSubscript:@"isBleOn"];

  if (*(unsigned char *)(v2 + 61))
  {
    uint64_t v9 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 60)];
    [v3 setObject:v9 forKeyedSubscript:@"isEnhancedDeliveryEnabled"];
  }
  if (*(unsigned char *)(v2 + 59))
  {
    uint64_t v10 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 58)];
    [v3 setObject:v10 forKeyedSubscript:@"deviceInCoveredRegion"];
  }
  if (*(unsigned char *)(v2 + 63))
  {
    os_log_type_t v11 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 62)];
    [v3 setObject:v11 forKeyedSubscript:@"isSubscribedtoESA"];
  }
  if (*(unsigned char *)(v2 + 57))
  {
    uint64_t v12 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 56)];
    [v3 setObject:v12 forKeyedSubscript:@"isCellularDataReachable"];
  }
  if (*(unsigned char *)(v2 + 65))
  {
    int v13 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 64)];
    [v3 setObject:v13 forKeyedSubscript:@"isType22ScanActive"];
  }
  if (*(unsigned char *)(v2 + 67))
  {
    uint64_t v14 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 66)];
    [v3 setObject:v14 forKeyedSubscript:@"isWifiDataReachable"];
  }
  if (*(unsigned char *)(v2 + 80))
  {
    __int16 v15 = +[NSNumber numberWithDouble:*(double *)(v2 + 72)];
    [v3 setObject:v15 forKeyedSubscript:@"meanNumNearbyDevices"];
  }
  if (*(unsigned char *)(v2 + 92) && *(unsigned char *)(v2 + 67) && *(unsigned char *)(v2 + 66))
  {
    __int16 v16 = +[NSNumber numberWithInt:sub_100073E34(*(_DWORD *)(v2 + 88))];
    [v3 setObject:v16 forKeyedSubscript:@"wifiCCA"];
  }
  if (*(unsigned char *)(v2 + 100) && *(unsigned char *)(v2 + 67) && *(unsigned char *)(v2 + 66))
  {
    uint64_t v17 = +[NSNumber numberWithInt:*(unsigned int *)(v2 + 96)];
    [v3 setObject:v17 forKeyedSubscript:@"wifiRxPhyRate"];
  }
  int v18 = *(void **)(v2 + 48);
  if (v18 && [v18 count])
  {
    long long v19 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -65.0, 200.0)];
    [v3 setObject:v19 forKeyedSubscript:@"numDevicesRSSIRange01"];

    __int16 v20 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -71.0, -66.0)];
    [v3 setObject:v20 forKeyedSubscript:@"numDevicesRSSIRange02"];

    uint64_t v21 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -75.0, -72.0)];
    [v3 setObject:v21 forKeyedSubscript:@"numDevicesRSSIRange03"];

    __int16 v22 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -78.0, -76.0)];
    [v3 setObject:v22 forKeyedSubscript:@"numDevicesRSSIRange04"];

    double v23 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -80.0, -79.0)];
    [v3 setObject:v23 forKeyedSubscript:@"numDevicesRSSIRange05"];

    __int16 v24 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -82.0, -81.0)];
    [v3 setObject:v24 forKeyedSubscript:@"numDevicesRSSIRange06"];

    uint64_t v25 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -84.0, -83.0)];
    [v3 setObject:v25 forKeyedSubscript:@"numDevicesRSSIRange07"];

    __int16 v26 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -86.0, -85.0)];
    [v3 setObject:v26 forKeyedSubscript:@"numDevicesRSSIRange08"];

    uint64_t v27 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -88.0, -87.0)];
    [v3 setObject:v27 forKeyedSubscript:@"numDevicesRSSIRange09"];

    std::string v28 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -90.0, -89.0)];
    [v3 setObject:v28 forKeyedSubscript:@"numDevicesRSSIRange10"];

    long long v29 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -200.0, -91.0)];
    [v3 setObject:v29 forKeyedSubscript:@"numDevicesRSSIRange11"];
  }
  long long v30 = (void *)(v2 + 128);
  if (*(char *)(v2 + 151) < 0)
  {
    if (!*(void *)(v2 + 136)) {
      goto LABEL_32;
    }
    long long v30 = (void *)*v30;
    goto LABEL_31;
  }
  if (*(unsigned char *)(v2 + 151))
  {
LABEL_31:
    long long v31 = +[NSString stringWithUTF8String:v30];
    [v3 setObject:v31 forKeyedSubscript:@"apsdInterface"];
  }
LABEL_32:

  return v3;
}

void sub_100073DB4(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

uint64_t sub_100073E34(int a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289283;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    __int16 v8 = 1025;
    int v9 = a1;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm\", \"wifiCCA\":%{private}d}", (uint8_t *)v5, 0x18u);
  }
  if (a1 <= 0x63) {
    unsigned int v3 = a1 / 0xAu + 1;
  }
  else {
    unsigned int v3 = 11;
  }
  if (a1 >= 0) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_100073F1C(void *a1, double a2, double a3)
{
  id v5 = a1;
  __int16 v6 = v5;
  if (v5)
  {
    uint64_t v13 = 0;
    uint64_t v14 = &v13;
    uint64_t v15 = 0x2020000000;
    int v16 = 0;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    _DWORD v12[2] = sub_1000748BC;
    void v12[3] = &unk_1000F8A60;
    *(double *)&void v12[5] = a2;
    *(double *)&v12[6] = a3;
    void v12[4] = &v13;
    [v5 enumerateKeysAndObjectsUsingBlock:v12];
    uint64_t v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = *((_DWORD *)v14 + 6);
      *(_DWORD *)uint64_t buf = 68289795;
      int v18 = 0;
      __int16 v19 = 2082;
      __int16 v20 = "";
      __int16 v21 = 2049;
      double v22 = a2;
      __int16 v23 = 2049;
      double v24 = a3;
      __int16 v25 = 1025;
      int v26 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,numDevicesWithinRSSIRange\", \"minRSSI\":\"%{private}0.2f\", \"maxRSSI\":\"%{private}0.2f\", \"num\":%{private}d}", buf, 0x2Cu);
    }
    uint64_t v9 = *((unsigned int *)v14 + 6);
    _Block_object_dispose(&v13, 8);
  }
  else
  {
    uint64_t v10 = SALogObjectGeneral;
    uint64_t v9 = 0;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v18 = 0;
      __int16 v19 = 2082;
      __int16 v20 = "";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,numDevicesWithinRSSIRange,histogram is empty\"}", buf, 0x12u);
      uint64_t v9 = 0;
    }
  }

  return v9;
}

void sub_100074118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);

  _Unwind_Resume(a1);
}

id sub_10007413C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unsigned int v3 = objc_opt_new();
  uint32_t v4 = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 40)];
  [v3 setObject:v4 forKeyedSubscript:@"timeofSample"];

  id v5 = +[NSNumber numberWithDouble:*((double *)sub_100003318() + 16)];
  [v3 setObject:v5 forKeyedSubscript:@"batteryChargeLevel"];

  uint64_t v7 = SASettings::instance(v6);
  int v8 = +[NSNumber numberWithBool:(*(uint64_t (**)(uint64_t))(*(void *)v7 + 96))(v7)];
  [v3 setObject:v8 forKeyedSubscript:@"isBleOn"];

  if (*(unsigned char *)(v2 + 61))
  {
    uint64_t v9 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 60)];
    [v3 setObject:v9 forKeyedSubscript:@"isEnhancedDeliveryEnabled"];
  }
  if (*(unsigned char *)(v2 + 59))
  {
    uint64_t v10 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 58)];
    [v3 setObject:v10 forKeyedSubscript:@"deviceInCoveredRegion"];
  }
  if (*(unsigned char *)(v2 + 63))
  {
    os_log_type_t v11 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 62)];
    [v3 setObject:v11 forKeyedSubscript:@"isSubscribedtoESA"];
  }
  if (*(unsigned char *)(v2 + 57))
  {
    uint64_t v12 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 56)];
    [v3 setObject:v12 forKeyedSubscript:@"isCellularDataReachable"];
  }
  if (*(unsigned char *)(v2 + 65))
  {
    uint64_t v13 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 64)];
    [v3 setObject:v13 forKeyedSubscript:@"isType22ScanActive"];
  }
  if (*(unsigned char *)(v2 + 67))
  {
    uint64_t v14 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 66)];
    [v3 setObject:v14 forKeyedSubscript:@"isWifiDataReachable"];
  }
  if (*(unsigned char *)(v2 + 80))
  {
    uint64_t v15 = +[NSNumber numberWithDouble:*(double *)(v2 + 72)];
    [v3 setObject:v15 forKeyedSubscript:@"meanNumNearbyDevices"];
  }
  if (*(unsigned char *)(v2 + 92) && *(unsigned char *)(v2 + 67) && *(unsigned char *)(v2 + 66))
  {
    int v16 = +[NSNumber numberWithInt:sub_100073E34(*(_DWORD *)(v2 + 88))];
    [v3 setObject:v16 forKeyedSubscript:@"wifiCCA"];
  }
  if (*(unsigned char *)(v2 + 100) && *(unsigned char *)(v2 + 67) && *(unsigned char *)(v2 + 66))
  {
    uint64_t v17 = +[NSNumber numberWithInt:*(unsigned int *)(v2 + 96)];
    [v3 setObject:v17 forKeyedSubscript:@"wifiRxPhyRate"];
  }
  id v18 = *(id *)(v2 + 48);
  if (v18)
  {
    id v18 = [v18 count];
    if (v18)
    {
      __int16 v19 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -65.0, 200.0)];
      [v3 setObject:v19 forKeyedSubscript:@"numDevicesRSSIRange01"];

      __int16 v20 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -71.0, -66.0)];
      [v3 setObject:v20 forKeyedSubscript:@"numDevicesRSSIRange02"];

      __int16 v21 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -75.0, -72.0)];
      [v3 setObject:v21 forKeyedSubscript:@"numDevicesRSSIRange03"];

      double v22 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -78.0, -76.0)];
      [v3 setObject:v22 forKeyedSubscript:@"numDevicesRSSIRange04"];

      __int16 v23 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -80.0, -79.0)];
      [v3 setObject:v23 forKeyedSubscript:@"numDevicesRSSIRange05"];

      double v24 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -82.0, -81.0)];
      [v3 setObject:v24 forKeyedSubscript:@"numDevicesRSSIRange06"];

      __int16 v25 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -84.0, -83.0)];
      [v3 setObject:v25 forKeyedSubscript:@"numDevicesRSSIRange07"];

      int v26 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -86.0, -85.0)];
      [v3 setObject:v26 forKeyedSubscript:@"numDevicesRSSIRange08"];

      uint64_t v27 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -88.0, -87.0)];
      [v3 setObject:v27 forKeyedSubscript:@"numDevicesRSSIRange09"];

      std::string v28 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -90.0, -89.0)];
      [v3 setObject:v28 forKeyedSubscript:@"numDevicesRSSIRange10"];

      long long v29 = +[NSNumber numberWithInt:sub_100073F1C(*(void **)(v2 + 48), -200.0, -91.0)];
      [v3 setObject:v29 forKeyedSubscript:@"numDevicesRSSIRange11"];
    }
  }
  long long v30 = (void *)(v2 + 128);
  if (*(char *)(v2 + 151) < 0)
  {
    if (!*(void *)(v2 + 136)) {
      goto LABEL_32;
    }
    long long v30 = (void *)*v30;
    goto LABEL_31;
  }
  if (*(unsigned char *)(v2 + 151))
  {
LABEL_31:
    long long v31 = +[NSString stringWithUTF8String:v30];
    [v3 setObject:v31 forKeyedSubscript:@"apsdInterface"];
  }
LABEL_32:
  long long v32 = +[NSNumber numberWithBool:SACommonUtils::isLivabiltyEnabled((SACommonUtils *)v18)];
  [v3 setObject:v32 forKeyedSubscript:@"isLiveOn"];

  __int16 v33 = sub_100003318();
  if (*((unsigned char *)v33 + 121)) {
    BOOL v34 = *((unsigned char *)v33 + 120) == 0;
  }
  else {
    BOOL v34 = 1;
  }
  uint64_t v35 = !v34;
  uint64_t v36 = +[NSNumber numberWithBool:v35];
  [v3 setObject:v36 forKeyedSubscript:@"isAdvertiser"];

  return v3;
}

void sub_100074834(_Unwind_Exception *a1)
{
  unsigned int v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1000748BC(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      [v9 doubleValue];
      if (v6 >= *(double *)(a1 + 40))
      {
        [v9 doubleValue];
        if (v7 <= *(double *)(a1 + 48))
        {
          [v5 doubleValue];
          *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = (int)(v8
                                                                            + (double)*(int *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                                             + 24));
        }
      }
    }
  }
}

void sub_100074998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000749B4()
{
}

void *sub_1000749C8()
{
  uint64_t result = operator new(0x10uLL);
  void *result = off_1000F8A90;
  return result;
}

void sub_100074A00(uint64_t a1, void *a2)
{
  *a2 = off_1000F8A90;
}

uint64_t sub_100074A2C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100074A6C()
{
}

void sub_100074A7C()
{
}

void *sub_100074A90(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F8B10;
  result[1] = v3;
  return result;
}

uint64_t sub_100074AD8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F8B10;
  a2[1] = v2;
  return result;
}

void sub_100074B04(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint32_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1] - *a2) >> 4);
    int v18 = 68289283;
    int v19 = 0;
    __int16 v20 = 2082;
    __int16 v21 = "";
    __int16 v22 = 2049;
    unint64_t v23 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,onPeopleDensityCb\", \"count\":%{private}lu}", (uint8_t *)&v18, 0x1Cu);
  }
  double v6 = (SASettings *)[*(id *)(v3 + 48) removeAllObjects];
  if (*(unsigned char *)(v3 + 80)) {
    *(unsigned char *)(v3 + 80) = 0;
  }
  uint64_t v7 = SASettings::instance(v6);
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v7 + 96))(v7) || a2[1] == *a2)
  {
    *(_WORD *)(v3 + 64) = 256;
  }
  else
  {
    *(_WORD *)(v3 + 64) = 257;
    uint64_t v8 = (a2[1] - *a2) / 48;
    uint64_t v9 = (48 * v8) | 8;
    while (--v8)
    {
      uint64_t v10 = v9 - 48;
      int v11 = *(unsigned __int8 *)(*a2 - 24 + v9 - 8);
      v9 -= 48;
      if (v11)
      {
        uint64_t v12 = (id)SALogObjectGeneral;
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v13 = *a2 + v10;
          if (!*(unsigned char *)(v13 + 16)) {
            sub_10006DFB4();
          }
          unint64_t v14 = *(void *)v13;
          uint64_t v15 = *(void *)(v13 + 8);
          uint64_t v16 = *(void *)(v13 - 8);
          uint64_t v17 = *(void *)(v13 + 24);
          int v18 = 68290051;
          int v19 = 0;
          __int16 v20 = 2082;
          __int16 v21 = "";
          __int16 v22 = 2049;
          unint64_t v23 = v14;
          __int16 v24 = 2049;
          uint64_t v25 = v15;
          __int16 v26 = 2049;
          uint64_t v27 = v16;
          __int16 v28 = 2049;
          uint64_t v29 = v17;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,onPeopleDensityCb,lastEvent,\", \"startTimestamp\":\"%{private}0.2f\", \"endTimestamp\":\"%{private}0.2f\", \"densityScore\":\"%{private}0.2f\", \"scanDuration\":\"%{private}0.2f\"}", (uint8_t *)&v18, 0x3Au);
        }

        *(void *)(v3 + 72) = *(void *)(*a2 + v10 - 8);
        *(unsigned char *)(v3 + 80) = 1;
        [*(id *)(v3 + 48) addEntriesFromDictionary:*(void *)(*a2 + v10 + 32)];
        break;
      }
    }
  }
  sub_100072E90(v3, 0);
  sub_100072798(v3);
}

void sub_100074D8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100074DA4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100074DE4()
{
}

void sub_100074DF4()
{
}

void *sub_100074E08(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F8B90;
  result[1] = v3;
  return result;
}

uint64_t sub_100074E50(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F8B90;
  a2[1] = v2;
  return result;
}

void sub_100074E7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint32_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v15 = 68289026;
    int v16 = 0;
    __int16 v17 = 2082;
    int v18 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,onCurrentPeopleDensityRecievedCb\"}", (uint8_t *)&v15, 0x12u);
  }
  unint64_t v5 = (SASettings *)[*(id *)(v3 + 48) removeAllObjects];
  if (*(unsigned char *)(v3 + 80)) {
    *(unsigned char *)(v3 + 80) = 0;
  }
  uint64_t v6 = SASettings::instance(v5);
  if ((*(unsigned int (**)(uint64_t))(*(void *)v6 + 96))(v6))
  {
    *(_WORD *)(v3 + 64) = 257;
    uint64_t v7 = (uint64_t)((double)(uint64_t)(double)time(0) + -978307200.0);
    uint64_t v8 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *a2;
      uint64_t v9 = a2[1];
      uint64_t v11 = a2[4];
      unint64_t v12 = 0xBFF0000000000000;
      if (*((unsigned char *)a2 + 24)) {
        unint64_t v12 = a2[2];
      }
      int v15 = 68290307;
      int v16 = 0;
      __int16 v17 = 2082;
      int v18 = "";
      __int16 v19 = 2049;
      uint64_t v20 = v7;
      __int16 v21 = 2049;
      uint64_t v22 = v9;
      __int16 v23 = 2049;
      uint64_t v24 = v10;
      __int16 v25 = 2049;
      uint64_t v26 = v11;
      __int16 v27 = 2049;
      unint64_t v28 = v12;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,onCurrentPeopleDensityRecievedCb\", \"now\":%{private}llu, \"startTimestamp\":\"%{private}0.2f\", \"densityScore\":\"%{private}0.2f\", \"scanDuration\":\"%{private}0.2f\", \"endTimestamp\":\"%{private}0.2f\"}", (uint8_t *)&v15, 0x44u);
    }
    if (a2[5])
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0 && (double)v7 - *((double *)a2 + 1) < 3600.0)
      {
        *(void *)(v3 + 72) = *a2;
        *(unsigned char *)(v3 + 80) = 1;
        [*(id *)(v3 + 48) addEntriesFromDictionary:a2[5]];
        uint64_t v13 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v14 = *(void *)(v3 + 48);
          int v15 = 68289283;
          int v16 = 0;
          __int16 v17 = 2082;
          int v18 = "";
          __int16 v19 = 2113;
          uint64_t v20 = v14;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,onCurrentPeopleDensityRecievedCb\", \"fRSSIHistogram\":%{private, location:escape_only}@}", (uint8_t *)&v15, 0x1Cu);
        }
      }
    }
  }
  else
  {
    *(_WORD *)(v3 + 64) = 256;
  }
  sub_100072E90(v3, 0);
  sub_100072798(v3);
}

uint64_t sub_100075144(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100075184()
{
}

void sub_100075194()
{
}

void *sub_1000751A8()
{
  uint64_t result = operator new(0x10uLL);
  void *result = off_1000F8C10;
  return result;
}

void sub_1000751E0(uint64_t a1, void *a2)
{
  *a2 = off_1000F8C10;
}

void sub_100075208()
{
  v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v1[0] = 68289026;
    v1[1] = 0;
    __int16 v2 = 2082;
    uint64_t v3 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#bm,onSettingsChanged\"}", (uint8_t *)v1, 0x12u);
  }
}

uint64_t sub_1000752BC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000752FC()
{
}

void sub_100075308(uint64_t **a1, int a2)
{
  uint32_t v4 = (uint64_t *)(a1 + 1);
  uint64_t v3 = a1[1];
  if (v3)
  {
    unint64_t v5 = v4;
    uint64_t v6 = v3;
    do
    {
      int v7 = *((_DWORD *)v6 + 7);
      BOOL v8 = v7 < a2;
      if (v7 >= a2) {
        uint64_t v9 = (uint64_t **)v6;
      }
      else {
        uint64_t v9 = (uint64_t **)(v6 + 1);
      }
      if (!v8) {
        unint64_t v5 = v6;
      }
      uint64_t v6 = *v9;
    }
    while (*v9);
    if (v5 != v4 && *((_DWORD *)v5 + 7) <= a2)
    {
      uint64_t v10 = (uint64_t *)v5[1];
      if (v10)
      {
        do
        {
          uint64_t v11 = v10;
          uint64_t v10 = (uint64_t *)*v10;
        }
        while (v10);
      }
      else
      {
        unint64_t v12 = v5;
        do
        {
          uint64_t v11 = (uint64_t *)v12[2];
          BOOL v13 = *v11 == (void)v12;
          unint64_t v12 = v11;
        }
        while (!v13);
      }
      if (*a1 == v5) {
        *a1 = v11;
      }
      a1[2] = (uint64_t *)((char *)a1[2] - 1);
      sub_10005E214(v3, v5);
      operator delete(v5);
    }
  }
}

uint64_t sub_1000753E0(uint64_t a1)
{
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(void *)(a1 + 224) = 0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 248) = xmmword_1000B6AE0;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(void *)(a1 + 312) = 0xBFF0000000000000;
  *(void *)(a1 + 320) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = 0;
  *(unsigned char *)(a1 + 344) = 0;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(void *)(a1 + 416) = 0;
  if (!sub_10005F8BC("/var/mobile/Library/com.apple.safetyalerts/"))
  {
    __int16 v2 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,#warning,unableToCreateAppRoot\"}", buf, 0x12u);
    }
  }
  uint64_t v3 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v4 = dispatch_queue_create("com.apple.safetyalert.listener", v3);
  unint64_t v5 = *(void **)a1;
  *(void *)a1 = v4;

  uint64_t v6 = *(NSObject **)a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100075A0C;
  block[3] = &unk_1000F5EA8;
  void block[4] = a1;
  dispatch_async(v6, block);
  *(void *)uint64_t buf = off_1000F9CE0;
  *(void *)&uint8_t buf[8] = a1;
  v13[0] = off_1000F9CE0;
  v13[1] = a1;
  uint64_t v15 = 0;
  void v13[3] = v13;
  sub_100032888(buf);
  int v7 = operator new(0x280uLL);
  v7[1] = 0;
  _DWORD v7[2] = 0;
  void *v7 = off_1000F9D70;
  sub_1000327F0((uint64_t)buf, (uint64_t)v13);
  sub_10002A258((uint64_t)(v7 + 3), v8, (uint64_t)buf);
  sub_100032888(buf);
  uint64_t v9 = *(std::__shared_weak_count **)(a1 + 136);
  *(void *)(a1 + 128) = v7 + 3;
  *(void *)(a1 + 136) = v7;
  if (v9) {
    sub_100028F6C(v9);
  }
  if (sub_1000838E4((SAPlatformInfo *)v9))
  {
    sub_10005E614(*(void **)a1, buf);
    uint64_t v10 = *(std::__shared_weak_count **)(a1 + 184);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)buf;
    if (v10) {
      sub_100028F6C(v10);
    }
  }
  sub_100032888(v13);
  return a1;
}

void sub_100075690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void **a15)
{
  sub_100032888(&a15);
  sub_10003162C(v15 + 352);
  uint64_t v18 = *(void *)(v15 + 336);
  *(void *)(v15 + 336) = 0;
  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
  }
  a15 = (void **)(v15 + 288);
  sub_100005360(&a15);
  sub_1000610FC(&a15);
  sub_100061184(&a15);
  __int16 v19 = *(std::__shared_weak_count **)(v15 + 200);
  if (v19) {
    sub_100028F6C(v19);
  }
  uint64_t v20 = *(std::__shared_weak_count **)(v15 + 184);
  if (v20) {
    sub_100028F6C(v20);
  }
  uint64_t v21 = *(void *)(v15 + 168);
  *(void *)(v15 + 168) = 0;
  if (v21) {
    (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
  }
  uint64_t v22 = *(void *)(v15 + 160);
  *(void *)(v15 + 160) = 0;
  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
  }
  uint64_t v23 = *(void *)(v15 + 152);
  *(void *)(v15 + 152) = 0;
  if (v23) {
    (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
  }
  sub_10006120C(v16, 0);
  uint64_t v24 = *(std::__shared_weak_count **)(v15 + 136);
  if (v24) {
    sub_100028F6C(v24);
  }
  uint64_t v25 = *(void *)(v15 + 120);
  *(void *)(v15 + 120) = 0;
  if (v25) {
    (*(void (**)(uint64_t))(*(void *)v25 + 8))(v25);
  }
  uint64_t v26 = *(void *)(v15 + 112);
  *(void *)(v15 + 112) = 0;
  if (v26) {
    (*(void (**)(uint64_t))(*(void *)v26 + 8))(v26);
  }
  uint64_t v27 = *(void *)(v15 + 104);
  *(void *)(v15 + 104) = 0;
  if (v27) {
    (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
  }
  uint64_t v28 = *(void *)(v15 + 96);
  *(void *)(v15 + 96) = 0;
  if (v28) {
    (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
  }
  uint64_t v29 = *(void *)(v15 + 88);
  *(void *)(v15 + 88) = 0;
  if (v29) {
    (*(void (**)(uint64_t))(*(void *)v29 + 8))(v29);
  }
  uint64_t v30 = *(void *)(v15 + 80);
  *(void *)(v15 + 80) = 0;
  if (v30) {
    (*(void (**)(uint64_t))(*(void *)v30 + 8))(v30);
  }
  uint64_t v31 = *(void *)(v15 + 72);
  *(void *)(v15 + 72) = 0;
  if (v31) {
    (*(void (**)(uint64_t))(*(void *)v31 + 8))(v31);
  }
  uint64_t v32 = *(void *)(v15 + 64);
  *(void *)(v15 + 64) = 0;
  if (v32) {
    (*(void (**)(uint64_t))(*(void *)v32 + 8))(v32);
  }
  uint64_t v33 = *(void *)(v15 + 56);
  *(void *)(v15 + 56) = 0;
  if (v33) {
    (*(void (**)(uint64_t))(*(void *)v33 + 8))(v33);
  }
  BOOL v34 = *(std::__shared_weak_count **)(v15 + 48);
  if (v34) {
    sub_100028F6C(v34);
  }
  uint64_t v35 = *(void *)(v15 + 32);
  *(void *)(v15 + 32) = 0;
  if (v35) {
    (*(void (**)(uint64_t))(*(void *)v35 + 8))(v35);
  }
  uint64_t v36 = *(std::__shared_weak_count **)(v15 + 24);
  if (v36) {
    sub_100028F6C(v36);
  }
  sub_10006125C((uint64_t *)(v15 + 8), 0);

  _Unwind_Resume(a1);
}

void sub_100075A0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_100075A94;
  v3[3] = &unk_1000F5EA8;
  void v3[4] = v1;
  sub_100075A94((uint64_t)v3);
}

void sub_100075A94(uint64_t a1)
{
  uint64_t v1 = *(void ***)(a1 + 32);
  __int16 v2 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    v6[0] = 2082;
    *(void *)&v6[1] = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,safetyAlertsDaemon is up and running\"}", buf, 0x12u);
  }

  uint64_t v3 = *v1;
  sub_10000DD48(&__p, "com.apple.safetyalerts.initPendingTaskCleanUpTimer");
  SATimer::create(v3);
}

void sub_1000772C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18, void *a19, void *a20,void *a21)
{
  sub_100077750(&STACK[0x5B0]);
  _Unwind_Resume(a1);
}

void sub_1000774DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  __int16 v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = 68289026;
    int v12 = 0;
    __int16 v13 = 2082;
    uint64_t v14 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,timer invoked\"}", (uint8_t *)&v11, 0x12u);
  }
  (*(void (**)(void))(**(void **)(v1 + 336) + 40))(*(void *)(v1 + 336));
  uint64_t v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*(void *)(v1 + 272) - *(void *)(v1 + 264)) >> 3);
    unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v1 + 296) - *(void *)(v1 + 288)) >> 3);
    int v11 = 68289538;
    int v12 = 0;
    __int16 v13 = 2082;
    uint64_t v14 = "";
    __int16 v15 = 2050;
    uint64_t v16 = v4;
    __int16 v17 = 2050;
    unint64_t v18 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,timer invoked\", \"Alert\":%{public}llu, \"Wea\":%{public}llu}", (uint8_t *)&v11, 0x26u);
  }
  uint64_t v6 = *(void *)(v1 + 264);
  uint64_t v7 = *(void *)(v1 + 272);
  if (v7 != v6)
  {
    do
    {

      v7 -= 88;
    }
    while (v7 != v6);
    *(void *)(v1 + 272) = v6;
  }
  if (*(void *)(v1 + 296) != *(void *)(v1 + 288)) {
    sub_1000053B4((uint64_t *)(v1 + 288));
  }
  uint64_t v8 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*(void *)(v1 + 272) - *(void *)(v1 + 264)) >> 3);
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v1 + 296) - *(void *)(v1 + 288)) >> 3);
    int v11 = 68289538;
    int v12 = 0;
    __int16 v13 = 2082;
    uint64_t v14 = "";
    __int16 v15 = 2050;
    uint64_t v16 = v9;
    __int16 v17 = 2050;
    unint64_t v18 = v10;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,timer invoked\", \"Alert\":%{public}llu, \"Wea\":%{public}llu}", (uint8_t *)&v11, 0x26u);
  }
}

void *sub_100077750(void *a1)
{
  sub_100027DF0(a1 + 16);
  sub_100021E70(a1 + 12);
  sub_100021E70(a1 + 8);
  sub_100027DF0(a1 + 4);

  return sub_10007C324(a1);
}

void sub_1000777A4(uint64_t a1, int a2, int a3)
{
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289538;
    int v23 = 0;
    __int16 v24 = 2082;
    uint64_t v25 = "";
    __int16 v26 = 1026;
    LODWORD(v27[0]) = a2;
    WORD2(v27[0]) = 1026;
    *(_DWORD *)((char *)v27 + 6) = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onChannelUpdate\", \"saChannelCount\":%{public}d, \"igneousChannelCount\":%{public}d}", buf, 0x1Eu);
  }
  if (*(double *)(v5 + 256) > 0.0)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    if (v7)
    {
      if (*(unsigned char *)(v7 + 175))
      {
        uint64_t v8 = *(void *)(v5 + 16);
        if (v8)
        {
          uint64_t v9 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)uint64_t buf = 68289282;
            int v23 = 0;
            __int16 v24 = 2082;
            uint64_t v25 = "";
            __int16 v26 = 1026;
            LODWORD(v27[0]) = a2;
            _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onChannelUpdate\", \"noOfChannels\":%{public}d}", buf, 0x18u);
          }
          *(_DWORD *)(v8 + 32) = a2;
          uint64_t v10 = *(void *)(v8 + 136);
          if (v10) {
            sub_10005484C(v10 + 112, a2 > 0);
          }
          sub_10003CDCC(*(void *)(v5 + 16), a3);
          uint64_t v11 = *(void *)(v5 + 16);
          uint64_t v12 = *(void *)(v5 + 8);
          int v13 = *(unsigned __int8 *)(v12 + 175);
          if (*(unsigned char *)(v12 + 175)) {
            BOOL v14 = *(unsigned __int8 *)(v12 + 174) != 0;
          }
          else {
            BOOL v14 = 0;
          }
          __int16 v15 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)uint64_t buf = 68289538;
            int v23 = 0;
            __int16 v24 = 2082;
            uint64_t v25 = "";
            __int16 v26 = 1026;
            LODWORD(v27[0]) = v13;
            WORD2(v27[0]) = 1026;
            *(_DWORD *)((char *)v27 + 6) = v14;
            _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onCountryKnown\", \"isKnown\":%{public}hhd, \"isSupported\":%{public}hhd}", buf, 0x1Eu);
          }
          *(unsigned char *)(v11 + 48) = v13;
          *(unsigned char *)(v11 + 49) = v14;
          uint64_t v16 = *(void *)(v11 + 136);
          if (v16) {
            sub_10005CB18(v16, v14);
          }
        }
        __int16 v17 = *(char **)(v5 + 288);
        unint64_t v18 = *(char **)(v5 + 296);
        if (v17 != v18)
        {
          do
          {
            __int16 v19 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v20 = v17;
              if (v17[23] < 0) {
                uint64_t v20 = *(char **)v17;
              }
              *(_DWORD *)uint64_t buf = 68289283;
              int v23 = 0;
              __int16 v24 = 2082;
              uint64_t v25 = "";
              __int16 v26 = 2081;
              v27[0] = v20;
              _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onChannelUpdate,processPendingWeaDisplayedAlert\", \"alert\":%{private, location:escape_only}s}", buf, 0x1Cu);
            }
            uint64_t v21 = v17;
            if (v17[23] < 0) {
              uint64_t v21 = *(char **)v17;
            }
            sub_100077AC8(v5, v21);
            v17 += 24;
          }
          while (v17 != v18);
          sub_1000053B4((uint64_t *)(v5 + 288));
        }
      }
    }
  }
}

void sub_100077AC8(uint64_t a1, char *a2)
{
  if (*(double *)(a1 + 256) <= 0.0)
  {
    uint64_t v11 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&unsigned char buf[18] = 2081;
      *(void *)&buf[20] = a2;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,#warning,onWeaDisplayedNotification,noLocation,deferAlert\", \"weaMessage\":%{private, location:escape_only}s}", buf, 0x1Cu);
    }
    sub_10000DD48(__p, a2);
    unint64_t v13 = *(void *)(a1 + 296);
    unint64_t v12 = *(void *)(a1 + 304);
    if (v13 < v12)
    {
      long long v14 = *(_OWORD *)__p;
      *(void *)(v13 + 16) = v31;
      *(_OWORD *)unint64_t v13 = v14;
      *(void *)(a1 + 296) = v13 + 24;
      return;
    }
    uint64_t v16 = *(void *)(a1 + 288);
    unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v13 - v16) >> 3);
    unint64_t v18 = v17 + 1;
    if (v17 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1000050E8();
    }
    unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - v16) >> 3);
    if (2 * v19 > v18) {
      unint64_t v18 = 2 * v19;
    }
    if (v19 >= 0x555555555555555) {
      unint64_t v20 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v20 = v18;
    }
    *(void *)&unsigned char buf[32] = a1 + 304;
    if (v20) {
      uint64_t v21 = (char *)sub_100005100(a1 + 304, v20);
    }
    else {
      uint64_t v21 = 0;
    }
    uint64_t v22 = &v21[24 * v17];
    *(void *)uint64_t buf = v21;
    *(void *)&uint8_t buf[8] = v22;
    *(void *)&unsigned char buf[24] = &v21[24 * v20];
    long long v23 = *(_OWORD *)__p;
    *((void *)v22 + 2) = v31;
    *(_OWORD *)uint64_t v22 = v23;
    __p[1] = 0;
    uint64_t v31 = 0;
    __p[0] = 0;
    *(void *)&buf[16] = v22 + 24;
    sub_100005070((uint64_t *)(a1 + 288), buf);
    uint64_t v24 = *(void *)(a1 + 296);
    sub_100005268((uint64_t)buf);
    int v25 = SHIBYTE(v31);
    *(void *)(a1 + 296) = v24;
    if (v25 < 0) {
      goto LABEL_29;
    }
    return;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!*(unsigned char *)(v4 + 175) || !*(unsigned char *)(v4 + 174))
  {
    __int16 v15 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onWeaNotification,#warning,notSupported\"}", buf, 0x12u);
    }
    return;
  }
  if (!*((unsigned char *)sub_10003E368() + 304))
  {
    uint64_t v5 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_36;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    __int16 v26 = "{\"msg%{public}.0s\":\"#ctsa,not in wea test\"}";
LABEL_35:
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, v26, buf, 0x12u);
    goto LABEL_36;
  }
  uint64_t v5 = SALogObjectGeneral;
  BOOL v6 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (!a2)
  {
    if (!v6) {
      goto LABEL_36;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    __int16 v26 = "{\"msg%{public}.0s\":\"#ctsa,not valid wea\"}";
    goto LABEL_35;
  }
  if (v6)
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ctsa,sendWeaTestNotification\"}", buf, 0x12u);
  }
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  uint64_t v8 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289538;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&unsigned char buf[18] = 2082;
    *(void *)&buf[20] = a2;
    *(_WORD *)&unsigned char buf[28] = 2050;
    *(CFAbsoluteTime *)&unsigned char buf[30] = Current;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ctsa,sendWeaTestNotification\", \"weaMessage\":%{public, location:escape_only}s, \"RecieveTS\":\"%{public}0.3f\"}", buf, 0x26u);
  }
  sub_10000DD48(buf, a2);
  uint64_t v9 = (void **)(a1 + 400);
  if (*(char *)(a1 + 423) < 0) {
    operator delete(*v9);
  }
  *(_OWORD *)uint64_t v9 = *(_OWORD *)buf;
  *(void *)(a1 + 416) = *(void *)&buf[16];
  *(CFAbsoluteTime *)(a1 + 440) = Current;
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(DarwinNotifyCenter, @"kSAWEAAlertReceived", 0, 0, 1u);
LABEL_36:
  sub_10000DD48(buf, a2);
  SACommonUtils::getHashForString(buf, (uint64_t *)__p);
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  uint64_t v27 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v28 = __p;
    if (v31 < 0) {
      uint64_t v28 = (void **)__p[0];
    }
    *(_DWORD *)uint64_t buf = 68289539;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&unsigned char buf[18] = 2081;
    *(void *)&buf[20] = a2;
    *(_WORD *)&unsigned char buf[28] = 2081;
    *(void *)&unsigned char buf[30] = v28;
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onWeaDisplayedNotification\", \"message\":%{private, location:escape_only}s, \"hash\":%{private, location:escape_only}s}", buf, 0x26u);
  }
  uint64_t v29 = *(void *)(a1 + 16);
  if (v29)
  {
    sub_10000DD48(buf, a2);
    sub_10003A57C(v29, (uint64_t)buf);
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    if (*(void *)(a1 + 104)
      && sub_10003C774(*(void *)(a1 + 16))
      && sub_100043640(*(void *)(a1 + 104), (uint64_t)__p))
    {
      sub_10003ABD8(*(void *)(a1 + 16), (uint64_t)__p);
    }
  }
  if (SHIBYTE(v31) < 0) {
LABEL_29:
  }
    operator delete(__p[0]);
}

void sub_100078038(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000780A0(uint64_t a1, int a2, int a3)
{
  uint64_t v5 = *(void *)(a1 + 32);
  BOOL v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v8[0] = 68289538;
    v8[1] = 0;
    __int16 v9 = 2082;
    uint64_t v10 = "";
    __int16 v11 = 1026;
    int v12 = a2;
    __int16 v13 = 1026;
    int v14 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onBLERelayUpdateCB,\", \"isIgenousCapable\":%{public}d, \"isIgenousEnabled\":%{public}d}", (uint8_t *)v8, 0x1Eu);
  }
  uint64_t v7 = *(unsigned __int8 **)(v5 + 144);
  if (v7)
  {
    sub_100083220(v7);
    sub_1000832E8(*(unsigned __int8 **)(v5 + 144));
  }
}

void sub_100078194(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(v1 + 144);
  if (v2) {
    sub_100082440(v2);
  }
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = *(void *)(v3 + 136);
    if (v4)
    {
      sub_10005B550(v4);
    }
  }
}

void sub_1000781EC(uint64_t a1, int a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v8[0] = 68289282;
    v8[1] = 0;
    __int16 v9 = 2082;
    uint64_t v10 = "";
    __int16 v11 = 1026;
    int v12 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onEnhancedDeliveryEnabled,\", \"enhancedDeliveryEnabled,\":%{public}hhd}", (uint8_t *)v8, 0x18u);
  }
  *(unsigned char *)(a1 + 344) = a2;
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    sub_1000273A8(v5, a2);
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6) {
    sub_10003CBA0(v6, a2);
  }
  uint64_t v7 = *(unsigned __int8 **)(a1 + 144);
  if (v7) {
    sub_1000832E8(v7);
  }
}

void sub_1000782EC(uint64_t a1, uint64_t a2, CLLocationDegrees a3, CLLocationDegrees a4, double a5, double a6, double a7)
{
  uint64_t v13 = *(void *)(a1 + 32);
  int v14 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289795;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v33 = 2082;
    BOOL v34 = "";
    __int16 v35 = 2049;
    CLLocationDegrees v36 = a3;
    __int16 v37 = 2049;
    CLLocationDegrees v38 = a4;
    __int16 v39 = 2049;
    double v40 = a6;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onLocationChanged\", \"lat\":\"%{private}0.6f\", \"lon\":\"%{private}0.6f\", \"unc\":\"%{private}0.2f\"}", buf, 0x30u);
  }
  *(CLLocationCoordinate2D *)(v13 + 232) = CLLocationCoordinate2DMake(a3, a4);
  *(double *)(v13 + 256) = a6;
  *(CFAbsoluteTime *)(v13 + 248) = CFAbsoluteTimeGetCurrent();
  sub_1000262A8(*(void *)(v13 + 8), *(CLLocationDegrees *)(v13 + 232), *(CLLocationDegrees *)(v13 + 240), a5, *(double *)(v13 + 256));
  uint64_t v15 = *(void *)(v13 + 40);
  if (v15) {
    (*(void (**)(uint64_t, uint64_t, double, double, double, double, double))(*(void *)v15 + 96))(v15, a2, *(double *)(v13 + 232), *(double *)(v13 + 240), a5, *(double *)(v13 + 256), a7);
  }
  uint64_t v16 = *(void *)(v13 + 16);
  if (v16)
  {
    unint64_t v17 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v33 = 2082;
      BOOL v34 = "";
      __int16 v35 = 1026;
      LODWORD(v36) = 1;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onLocationAvailable\", \"isAvailable\":%{public}hhd}", buf, 0x18u);
      uint64_t v18 = *(void *)(v13 + 16);
      unint64_t v17 = SALogObjectGeneral;
    }
    else
    {
      uint64_t v18 = v16;
    }
    *(unsigned char *)(v16 + 45) = 1;
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      double v19 = *(double *)(v13 + 256);
      double v21 = *(double *)(v13 + 232);
      double v20 = *(double *)(v13 + 240);
      *(_DWORD *)uint64_t buf = 68289795;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v33 = 2082;
      BOOL v34 = "";
      __int16 v35 = 2049;
      CLLocationDegrees v36 = v21;
      __int16 v37 = 2049;
      CLLocationDegrees v38 = v20;
      __int16 v39 = 2049;
      double v40 = v19;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onLocationChanged\", \"lat\":\"%{private}0.6f\", \"lon\":\"%{private}0.6f\", \"unc\":\"%{private}0.2f\"}", buf, 0x30u);
    }
    uint64_t v22 = *(void *)(v18 + 136);
    if (v22)
    {
      *(void *)uint64_t buf = (uint64_t)((double)(uint64_t)(double)time(0) + -978307200.0);
      sub_1000540E8(v22 + 112, (uint64_t *)buf);
    }
  }
  long long v23 = *(unsigned __int8 **)(v13 + 144);
  if (v23) {
    sub_10008252C(v23);
  }
  if (*(double *)(v13 + 256) > 0.0)
  {
    uint64_t v24 = *(void *)(v13 + 264);
    uint64_t v25 = *(void *)(v13 + 272);
    if (v24 != v25)
    {
      do
      {
        __int16 v26 = (id)SALogObjectGeneral;
        if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
        {
          SACommonUtils::getAnyCmam(*(SACommonUtils **)(v24 + 80), __p);
          if (v31 >= 0) {
            *(double *)&uint64_t v27 = COERCE_DOUBLE(__p);
          }
          else {
            uint64_t v27 = (void **)__p[0];
          }
          *(_DWORD *)uint64_t buf = 68289283;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v33 = 2082;
          BOOL v34 = "";
          __int16 v35 = 2081;
          CLLocationDegrees v36 = *(double *)&v27;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onLocationChanged,processPendingAlert\", \"alert\":%{private, location:escape_only}s}", buf, 0x1Cu);
          if (v31 < 0) {
            operator delete(__p[0]);
          }
        }

        sub_100078EE8(v13, v24, *(void **)(v24 + 80));
        v24 += 88;
      }
      while (v24 != v25);
      uint64_t v28 = *(void *)(v13 + 264);
      for (uint64_t i = *(void *)(v13 + 272); i != v28; i -= 88)

      *(void *)(v13 + 272) = v28;
    }
  }
  sub_10007BF6C(v13, 0);
  sub_10007B20C(v13, a3, a4);
}

void sub_10007871C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100078734(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = 68289282;
    int v12 = 0;
    __int16 v13 = 2082;
    int v14 = "";
    __int16 v15 = 1026;
    int v16 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,SafetyAlertsDaemon::onLocationAuthorized\", \"isAuthorized\":%{public}d}", (uint8_t *)&v11, 0x18u);
  }
  uint64_t v5 = *(void *)(v3 + 8);
  if (v5) {
    sub_1000263D4(v5, a2);
  }
  uint64_t v6 = *(void *)(v3 + 16);
  if (v6)
  {
    uint64_t v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 68289282;
      int v12 = 0;
      __int16 v13 = 2082;
      int v14 = "";
      __int16 v15 = 1026;
      int v16 = a2;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onLocationAuthorized\", \"status\":%{public}hhd}", (uint8_t *)&v11, 0x18u);
    }
    *(unsigned char *)(v6 + 43) = a2;
    if ((a2 & 1) == 0) {
      *(unsigned char *)(v6 + 45) = 0;
    }
    uint64_t v8 = *(void *)(v6 + 136);
    if (v8) {
      sub_100053F44(v8 + 112, a2);
    }
  }
  __int16 v9 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = 68289283;
    int v12 = 0;
    __int16 v13 = 2082;
    int v14 = "";
    __int16 v15 = 1025;
    int v16 = a2;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,updateCfuLocationServiceStatus\", \"isEnabled\":%{private}hhd}", (uint8_t *)&v11, 0x18u);
  }
  uint64_t v10 = +[SAEDFollowUpManager sharedInstance];
  [v10 setLocationServicesEnabled:a2];
}

void sub_10007892C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_100078944(void *a1)
{
  sub_10007C8E0(a1 + 32);
  sub_10007C754(a1 + 28);
  sub_10000F6D4(a1 + 24);
  sub_100021E70(a1 + 20);
  sub_10000F6D4(a1 + 16);
  sub_10007C7D8(a1 + 12);
  sub_10007C85C(a1 + 8);
  sub_10000F6D4(a1 + 4);

  return sub_10007C324(a1);
}

uint64_t sub_1000789B8(uint64_t *a1)
{
  if (sub_1000838E4((SAPlatformInfo *)a1))
  {
    uint64_t v2 = a1[18];
    if (v2) {
      sub_100083160(v2);
    }
    uint64_t v5 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      v7[0] = 2082;
      *(void *)&v7[1] = "";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,initDeinitBleCore\"}", buf, 0x12u);
    }
    operator new();
  }
  uint64_t v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    v7[0] = 2082;
    *(void *)&v7[1] = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,initDeinitBleCore release\"}", buf, 0x12u);
  }
  return sub_10006120C(a1 + 18, 0);
}

void sub_100078BE4()
{
  if (v2)
  {
    sub_100028F6C(v2);
    if (!v1)
    {
LABEL_3:
      if (!v0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if (!v1)
  {
    goto LABEL_3;
  }
  sub_100028F6C(v1);
  if (!v0) {
LABEL_5:
  }
    operator delete();
LABEL_4:
  sub_100028F6C(v0);
  goto LABEL_5;
}

void sub_100078C40(uint64_t *a1, int a2, int a3)
{
  uint64_t v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v16 = 68289538;
    int v17 = 0;
    __int16 v18 = 2082;
    double v19 = "";
    __int16 v20 = 1026;
    int v21 = a2;
    __int16 v22 = 1026;
    int v23 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,networkReachability\", \"type\":%{public}d, \"isConnected\":%{public}hhd}", (uint8_t *)&v16, 0x1Eu);
  }
  if (!a2)
  {
    sub_1000264B4(a1[1], a3);
    uint64_t v8 = a1[2];
    if (v8)
    {
      __int16 v9 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        int v16 = 68289282;
        int v17 = 0;
        __int16 v18 = 2082;
        double v19 = "";
        __int16 v20 = 1026;
        int v21 = a3;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onInexpensiveNetworkConnected\", \"status\":%{public}hhd}", (uint8_t *)&v16, 0x18u);
      }
      *(unsigned char *)(v8 + 41) = a3;
      uint64_t v10 = *(void *)(v8 + 136);
      if (v10)
      {
        uint64_t v11 = *(void *)(v10 + 56);
        if (v11) {
          sub_100072CE0(v11, a3);
        }
      }
    }
    if (a1[18]) {
      sub_100082FE4();
    }
    goto LABEL_22;
  }
  if (a2 == 1)
  {
    sub_100026590(a1[1], a3);
    uint64_t v12 = a1[2];
    if (v12)
    {
      __int16 v13 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        int v16 = 68289282;
        int v17 = 0;
        __int16 v18 = 2082;
        double v19 = "";
        __int16 v20 = 1026;
        int v21 = a3;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onCellNetworkConnected\", \"status\":%{public}hhd}", (uint8_t *)&v16, 0x18u);
      }
      *(unsigned char *)(v12 + 42) = a3;
      uint64_t v14 = *(void *)(v12 + 136);
      if (v14)
      {
        uint64_t v15 = *(void *)(v14 + 56);
        if (v15) {
          sub_100072AC8(v15, a3);
        }
      }
    }
    goto LABEL_22;
  }
  if (a2 != 2)
  {
LABEL_22:
    sub_10007BF6C((uint64_t)a1, 0);
    return;
  }
  uint64_t v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v16 = 68289026;
    int v17 = 0;
    __int16 v18 = 2082;
    double v19 = "";
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,networkReachability,invalid type\"}", (uint8_t *)&v16, 0x12u);
  }
}

void sub_100078EE8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = *(void *)(a1 + 128);
  id v207 = v5;
  if (v6)
  {
    if (sub_10002A9BC(v6, v5) == 5)
    {
      uint64_t v7 = SALogObjectGeneral;
      if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_8;
      }
      uint64_t buf = 68289026;
      LOWORD(buf_8[0]) = 2082;
      *(void *)((char *)buf_8 + 2) = "";
      uint64_t v8 = "{\"msg%{public}.0s\":\"#daemon,#warning,isIgneousAlert,notIgneous or IngneousTest\"}";
      goto LABEL_7;
    }

    id v22 = v207;
    uint64_t v23 = *(void *)(a1 + 128);
    if (!v23)
    {
      uint64_t v25 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t buf = 68289026;
        LOWORD(buf_8[0]) = 2082;
        *(void *)((char *)buf_8 + 2) = "";
        __int16 v26 = "{\"msg%{public}.0s\":\"#daemon,#warning,processIgneousAlert,invalid parser\"}";
        goto LABEL_42;
      }
LABEL_43:

      goto LABEL_127;
    }
    int v24 = sub_10002A9BC(v23, v22);
    if (v24 == 5)
    {
      uint64_t v25 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t buf = 68289026;
        LOWORD(buf_8[0]) = 2082;
        *(void *)((char *)buf_8 + 2) = "";
        __int16 v26 = "{\"msg%{public}.0s\":\"#daemon,#warning,processIgneousAlert,notIgneous or IngneousTest\"}";
LABEL_42:
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, v26, (uint8_t *)&buf, 0x12u);
        goto LABEL_43;
      }
      goto LABEL_43;
    }
    if ((sub_100031094(*(void *)(a1 + 128), v22) & 1) == 0)
    {
      uint64_t v25 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t buf = 68289026;
        LOWORD(buf_8[0]) = 2082;
        *(void *)((char *)buf_8 + 2) = "";
        __int16 v26 = "{\"msg%{public}.0s\":\"#daemon,#warning,processIgneousAlert,production check failed\"}";
        goto LABEL_42;
      }
      goto LABEL_43;
    }
    double Current = CFAbsoluteTimeGetCurrent();
    if (*(double *)(a1 + 256) <= 0.0 || Current - *(double *)(a1 + 248) >= 7200.0)
    {
      __int16 v33 = (id)SALogObjectGeneral;
      CFPropertyListRef propertyLista = v22;
      if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
      {
        SACommonUtils::getAnyCmam((SACommonUtils *)v22, v215);
        BOOL v34 = v215[23] >= 0 ? v215 : *(unsigned char **)v215;
        uint64_t buf = 68289283;
        LOWORD(buf_8[0]) = 2082;
        *(void *)((char *)buf_8 + 2) = "";
        WORD5(buf_8[0]) = 2081;
        *(void *)((char *)buf_8 + 12) = v34;
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,#warning,onAlertReceived,processIgneousAlert,location needs refresh\", \"alert\":%{private, location:escape_only}s}", (uint8_t *)&buf, 0x1Cu);
        if ((v215[23] & 0x80000000) != 0) {
          operator delete(*(void **)v215);
        }
      }

      uint64_t v36 = *(void *)a2;
      uint64_t v35 = *(void *)(a2 + 8);
      int v37 = *(_DWORD *)(a2 + 16);
      int v38 = *(_DWORD *)(a2 + 20);
      uint64_t v40 = *(void *)(a2 + 24);
      uint64_t v39 = *(void *)(a2 + 32);
      int v42 = *(_DWORD *)(a2 + 40);
      int v41 = *(_DWORD *)(a2 + 44);
      uint64_t v43 = *(void *)(a2 + 48);
      int v44 = *(_DWORD *)(a2 + 56);
      int v45 = *(_DWORD *)(a2 + 60);
      uint64_t v199 = *(void *)(a2 + 64);
      uint64_t v201 = *(void *)(a2 + 72);
      DeepCopy = (void *)CFPropertyListCreateDeepCopy(kCFAllocatorDefault, propertyLista, 1uLL);
      long long v47 = DeepCopy;
      unint64_t v49 = *(void *)(a1 + 272);
      unint64_t v48 = *(void *)(a1 + 280);
      if (v49 >= v48)
      {
        uint64_t v109 = *(void *)(a1 + 264);
        uint64_t v110 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(v49 - v109) >> 3);
        if ((unint64_t)(v110 + 1) > 0x2E8BA2E8BA2E8BALL) {
          sub_1000050E8();
        }
        unint64_t v111 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(v48 - v109) >> 3);
        uint64_t v112 = 2 * v111;
        if (2 * v111 <= v110 + 1) {
          uint64_t v112 = v110 + 1;
        }
        if (v111 >= 0x1745D1745D1745DLL) {
          unint64_t v113 = 0x2E8BA2E8BA2E8BALL;
        }
        else {
          unint64_t v113 = v112;
        }
        *((void *)&buf_8[1] + 1) = a1 + 280;
        if (v113)
        {
          uint64_t v114 = (char *)sub_10007C964(v113);
          uint64_t v198 = v115;
          id v116 = v114;
        }
        else
        {
          id v116 = 0;
          uint64_t v198 = 0;
        }
        int v127 = &v116[88 * v110];
        *(void *)int v127 = v36;
        *((void *)v127 + 1) = v35;
        *((_DWORD *)v127 + 4) = v37;
        *((_DWORD *)v127 + 5) = v38;
        *((void *)v127 + 3) = v40;
        *((void *)v127 + 4) = v39;
        *((_DWORD *)v127 + 10) = v42;
        *((_DWORD *)v127 + 11) = v41;
        *((void *)v127 + 6) = v43;
        *((_DWORD *)v127 + 14) = v44;
        *((_DWORD *)v127 + 15) = v45;
        *((void *)v127 + 8) = v199;
        *((void *)v127 + 9) = v201;
        *((void *)v127 + 10) = v47;
        uint64_t v128 = *(void *)(a1 + 264);
        unint64_t v129 = *(void *)(a1 + 272);
        if (v129 == v128)
        {
          int64x2_t v135 = vdupq_n_s64(v129);
          long long v130 = v127;
        }
        else
        {
          long long v130 = v127;
          do
          {
            *(_OWORD *)(v130 - 88) = *(_OWORD *)(v129 - 88);
            long long v131 = *(_OWORD *)(v129 - 72);
            long long v132 = *(_OWORD *)(v129 - 56);
            long long v133 = *(_OWORD *)(v129 - 40);
            *(_OWORD *)(v130 - 24) = *(_OWORD *)(v129 - 24);
            *(_OWORD *)(v130 - 40) = v133;
            *(_OWORD *)(v130 - 56) = v132;
            *(_OWORD *)(v130 - 72) = v131;
            uint64_t v134 = *(void *)(v129 - 8);
            *(void *)(v129 - 8) = 0;
            *((void *)v130 - 1) = v134;
            v130 -= 88;
            v129 -= 88;
          }
          while (v129 != v128);
          int64x2_t v135 = *(int64x2_t *)(a1 + 264);
        }
        long long v50 = v127 + 88;
        *(void *)(a1 + 264) = v130;
        *(void *)(a1 + 272) = v127 + 88;
        buf_8[0] = v135;
        uint64_t v136 = *(void *)(a1 + 280);
        *(void *)(a1 + 280) = &v116[88 * v198];
        *(void *)&buf_8[1] = v136;
        uint64_t buf = v135.i64[0];
        sub_10007C9B0((uint64_t)&buf);
      }
      else
      {
        *(void *)unint64_t v49 = v36;
        *(void *)(v49 + 8) = v35;
        *(_DWORD *)(v49 + 16) = v37;
        *(_DWORD *)(v49 + 20) = v38;
        *(void *)(v49 + 24) = v40;
        *(void *)(v49 + 32) = v39;
        *(_DWORD *)(v49 + 40) = v42;
        *(_DWORD *)(v49 + 44) = v41;
        *(void *)(v49 + 48) = v43;
        *(_DWORD *)(v49 + 56) = v44;
        *(_DWORD *)(v49 + 60) = v45;
        *(void *)(v49 + 64) = v199;
        *(void *)(v49 + 72) = v201;
        *(void *)(v49 + 80) = DeepCopy;
        long long v50 = (char *)(v49 + 88);
      }
      *(void *)(a1 + 272) = v50;
      uint64_t v137 = *(void *)(a1 + 32);
      if (v137) {
        (*(void (**)(uint64_t))(*(void *)v137 + 56))(v137);
      }

      id v22 = (id)propertyLista;
      goto LABEL_43;
    }
    LOBYTE(buf) = 0;
    memset(buf_8, 0, sizeof(buf_8));
    long long v229 = 0u;
    long long v230 = 0u;
    long long v231 = 0u;
    long long v232 = 0u;
    long long v233 = 0u;
    long long v234 = 0u;
    long long v235 = 0u;
    long long v236 = 0u;
    long long v237 = 0u;
    long long v238 = 0u;
    char v239 = 0;
    int v240 = 1;
    long long v241 = 0u;
    long long v242 = 0u;
    long long v243 = 0u;
    long long v244 = 0u;
    long long v245 = 0u;
    long long v246 = 0u;
    long long v247 = 0u;
    char v248 = -1;
    uint64_t v249 = 0;
    __int16 v250 = -1022;
    int v251 = 0;
    uint64_t v252 = 0;
    switch(v24)
    {
      case 1:
        if (sub_10002D1D8(*(void *)(a1 + 128), v22, (uint64_t)&buf))
        {
          if (!sub_10002E2F8(*(void *)(a1 + 128), (uint64_t)&buf))
          {
            sub_100030890(*(void *)(a1 + 128), (uint64_t)&buf);
            uint64_t v141 = *(void *)(a1 + 128);
            double v142 = *((double *)&v241 + 1);
            double v143 = *(double *)&v241;
            sub_10000DD48(v215, "");
            sub_10002CE14(v141, 0, v215, (uint64_t)buf_8, v142, v143);
            if ((v215[23] & 0x80000000) != 0) {
              operator delete(*(void **)v215);
            }
            uint64_t v144 = *(void *)(a1 + 40);
            if (v144) {
              (*(void (**)(uint64_t, _OWORD *))(*(void *)v144 + 48))(v144, buf_8);
            }
            long long v145 = *(SASettings **)(a1 + 16);
            if (v145)
            {
              long long v146 = *(_OWORD *)(a2 + 48);
              long long v224 = *(_OWORD *)(a2 + 32);
              long long v225 = v146;
              long long v226 = *(_OWORD *)(a2 + 64);
              long long v147 = *(_OWORD *)(a2 + 16);
              *(_OWORD *)std::string __dst = *(_OWORD *)a2;
              *(_OWORD *)&__dst[16] = v147;
              sub_100039C98((uint64_t)v145, (uint64_t)&buf, (long long *)__dst);
            }
            if (*(void *)(a1 + 168))
            {
              uint64_t v148 = SASettings::instance(v145);
              if ((*(unsigned int (**)(uint64_t))(*(void *)v148 + 88))(v148))
              {
                memset(v218, 0, sizeof(v218));
                memset(v217, 0, sizeof(v217));
                memset(v216, 0, sizeof(v216));
                memset(v215, 0, sizeof(v215));
                __asm { FMOV            V0.2D, #10.0 }
                *(_OWORD *)&v219[1] = _Q0;
                __asm { FMOV            V0.2D, #-1.0 }
                long long v220 = _Q0;
                long long v221 = _Q0;
                v219[0] = 0;
                unint64_t v222 = 0xBFF0000000000000;
                CFPropertyListRef propertyListb = v22;
                __int16 v151 = sub_10006B474();
                sub_10002B120((uint64_t)v151, (std::string *)v215);
                if ((v215[23] & 0x80000000) != 0)
                {
                  sub_100004CB8(v209, *(void **)v215, *(unint64_t *)&v215[8]);
                }
                else
                {
                  *(_OWORD *)std::string v209 = *(_OWORD *)v215;
                  *(void *)&v209[16] = *(void *)&v215[16];
                }
                uint64_t v154 = +[NSLocale preferredLanguages];
                __int16 v155 = [v154 objectAtIndex:0];

                long long v156 = SALogObjectGeneral;
                if (v155)
                {
                  __int16 v157 = (id)SALogObjectGeneral;
                  if (os_log_type_enabled(v157, OS_LOG_TYPE_DEFAULT))
                  {
                    id v158 = [v155 UTF8String];
                    long long __p = (void *)68289283;
                    *(_WORD *)std::string v211 = 2082;
                    *(void *)&v211[2] = "";
                    *(_WORD *)&v211[10] = 2081;
                    *(void *)&v211[12] = v158;
                    _os_log_impl((void *)&_mh_execute_header, v157, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,preferredLanguage,\", \"language\":%{private, location:escape_only}s}", (uint8_t *)&__p, 0x1Cu);
                  }

                  if ([v155 containsString:@"es-"]) {
                    std::string::operator=((std::string *)v209, (const std::string *)&v215[24]);
                  }
                }
                else if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                {
                  long long __p = (void *)68289026;
                  *(_WORD *)std::string v211 = 2082;
                  *(void *)&v211[2] = "";
                  _os_log_impl((void *)&_mh_execute_header, v156, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,preferredLanguage, nil,\"}", (uint8_t *)&__p, 0x12u);
                }
                sub_10000DD48(&__p, "Earthquake Alert");
                (*(void (**)(void, void **, unsigned char *))(**(void **)(a1 + 168) + 16))(*(void *)(a1 + 168), &__p, v209);
                (*(void (**)(void))(**(void **)(a1 + 168) + 24))(*(void *)(a1 + 168));
                if ((v211[15] & 0x80000000) != 0) {
                  operator delete(__p);
                }

                if ((v209[23] & 0x80000000) != 0) {
                  operator delete(*(void **)v209);
                }
                sub_100032B20((uint64_t)v215);
                id v22 = (id)propertyListb;
              }
            }
            goto LABEL_190;
          }
          uint64_t v29 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)std::string::pointer v215 = 68289026;
            *(_DWORD *)&v215[4] = 0;
            *(_WORD *)&v215[8] = 2082;
            *(void *)&v215[10] = "";
            _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,USGSAlert stale Alert\"}", v215, 0x12u);
          }
          uint64_t v30 = *(void *)(a1 + 16);
          if (v30)
          {
            long long v31 = *(_OWORD *)(a2 + 48);
            v216[0] = *(_OWORD *)(a2 + 32);
            v216[1] = v31;
            v216[2] = *(_OWORD *)(a2 + 64);
            long long v32 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)std::string::pointer v215 = *(_OWORD *)a2;
            *(_OWORD *)&v215[16] = v32;
            sub_100039C98(v30, (uint64_t)&buf, (long long *)v215);
          }
        }
        else
        {
          int v121 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)std::string::pointer v215 = 68289026;
            *(_DWORD *)&v215[4] = 0;
            *(_WORD *)&v215[8] = 2082;
            *(void *)&v215[10] = "";
            double v122 = "{\"msg%{public}.0s\":\"#daemon,USGSAlert fails precheck\"}";
            goto LABEL_249;
          }
        }
        goto LABEL_254;
      case 2:
        if (!sub_10002E5CC(*(void *)(a1 + 128), v22, (uint64_t)&buf)) {
          goto LABEL_140;
        }
        uint64_t v123 = *(void *)(a1 + 16);
        if (v123)
        {
          long long v124 = *(_OWORD *)(a2 + 48);
          long long v224 = *(_OWORD *)(a2 + 32);
          long long v225 = v124;
          long long v226 = *(_OWORD *)(a2 + 64);
          long long v125 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)std::string __dst = *(_OWORD *)a2;
          *(_OWORD *)&__dst[16] = v125;
          sub_100039C98(v123, (uint64_t)&buf, (long long *)__dst);
        }
        goto LABEL_190;
      case 3:
        if (sub_10002F320(*(void *)(a1 + 128), v22, (uint64_t)&buf))
        {
          memset(v218, 0, sizeof(v218));
          memset(v217, 0, sizeof(v217));
          memset(v216, 0, sizeof(v216));
          memset(v215, 0, sizeof(v215));
          __asm { FMOV            V0.2D, #10.0 }
          *(_OWORD *)&v219[1] = _Q0;
          __asm { FMOV            V0.2D, #-1.0 }
          long long v220 = _Q0;
          long long v221 = _Q0;
          v219[0] = 0;
          unint64_t v222 = 0xBFF0000000000000;
          sub_100030ED8(*(void *)(a1 + 128), (uint64_t)&buf);
          unsigned int v119 = sub_10006B474();
          sub_10002B120((uint64_t)v119, (std::string *)v215);
          uint64_t v120 = *(void *)(a1 + 128);
          if (SBYTE7(buf_8[1]) < 0)
          {
            sub_100004CB8(__dst, *(void **)&buf_8[0], *((unint64_t *)&buf_8[0] + 1));
          }
          else
          {
            *(_OWORD *)std::string __dst = buf_8[0];
            *(void *)&__dst[16] = *(void *)&buf_8[1];
          }
          int v126 = sub_10002D914(v120, (void **)__dst, (uint64_t)v215, 0);
          if ((__dst[23] & 0x80000000) != 0) {
            operator delete(*(void **)__dst);
          }
          sub_100032B20((uint64_t)v215);
          if (v126) {
            (*(void (**)(void, _OWORD *, char *, long long *))(**(void **)(a1 + 40) + 64))(*(void *)(a1 + 40), buf_8, (char *)&v231 + 8, &v233);
          }
          uint64_t v152 = *(void *)(a1 + 16);
          if (v152)
          {
            uint64_t v153 = *(void *)(v152 + 144);
            if (v153) {
              sub_1000223CC(v153, (uint64_t)&buf);
            }
          }
          int v240 = 3;
        }
        else
        {
LABEL_140:
          int v126 = 0;
          int v240 = v24;
        }
        goto LABEL_200;
      case 4:
        if (sub_10002DBBC(*(void *)(a1 + 128), v22, (uint64_t)&buf))
        {
          if (!sub_10002E2F8(*(void *)(a1 + 128), (uint64_t)&buf))
          {
            sub_100030890(*(void *)(a1 + 128), (uint64_t)&buf);
            uint64_t v138 = *(void *)(a1 + 128);
            double v139 = *((double *)&v241 + 1);
            double v140 = *(double *)&v241;
            sub_10000DD48(v215, "");
            sub_10002CE14(v138, 0, v215, (uint64_t)buf_8, v139, v140);
            if ((v215[23] & 0x80000000) != 0) {
              operator delete(*(void **)v215);
            }
            (*(void (**)(void, id, uint64_t *))(**(void **)(a1 + 40) + 56))(*(void *)(a1 + 40), v22, &buf);
LABEL_190:
            int v240 = v24;
            uint64_t v159 = *(void *)(a1 + 144);
            if (v159)
            {
              unint64_t v160 = SALogObjectGeneral;
              if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)std::string::pointer v215 = 68289026;
                *(_DWORD *)&v215[4] = 0;
                *(_WORD *)&v215[8] = 2082;
                *(void *)&v215[10] = "";
                _os_log_impl((void *)&_mh_execute_header, v160, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ctsa,processIgneousAlert,Send to Ble\"}", v215, 0x12u);
                uint64_t v159 = *(void *)(a1 + 144);
              }
              int v161 = sub_10008368C(v159, (uint64_t)&buf);
              uint64_t v162 = *(void *)(a1 + 16);
              if (v162) {
                int v163 = v161;
              }
              else {
                int v163 = 0;
              }
              if (v163 == 1)
              {
                uint64_t v164 = *(void *)(a1 + 144);
                *(_WORD *)std::string::pointer v215 = *(_WORD *)v164;
                *(_DWORD *)&v215[4] = *(_DWORD *)(v164 + 64);
                float v165 = *(double *)(v164 + 72);
                *(float *)&v215[8] = v165;
                uint64_t v166 = *(void *)(v162 + 152);
                if (v166) {
                  sub_10004438C(v166, (uint64_t)&buf, a2, (uint64_t)v215);
                }
              }
            }
            int v126 = 1;
LABEL_200:
            std::string::size_type v167 = SALogObjectGeneral;
            BOOL v168 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
            if (v168)
            {
              if (SHIBYTE(v229) < 0)
              {
                unint64_t v169 = (const char *)*((void *)&buf_8[1] + 1);
                _ZF = (void)v229 == 0;
              }
              else
              {
                unint64_t v169 = (char *)&buf_8[1] + 8;
                _ZF = SHIBYTE(v229) == 0;
              }
              if (_ZF) {
                unint64_t v171 = "";
              }
              else {
                unint64_t v171 = v169;
              }
              if (SBYTE7(buf_8[1]) < 0)
              {
                if (*((void *)&buf_8[0] + 1)) {
                  unint64_t v172 = *(const char **)&buf_8[0];
                }
                else {
                  unint64_t v172 = "";
                }
              }
              else if (BYTE7(buf_8[1]))
              {
                unint64_t v172 = (const char *)buf_8;
              }
              else
              {
                unint64_t v172 = "";
              }
              if (SHIBYTE(v232) < 0)
              {
                v173 = (const char *)*((void *)&v231 + 1);
                BOOL v174 = (void)v232 == 0;
              }
              else
              {
                v173 = (char *)&v231 + 8;
                BOOL v174 = SHIBYTE(v232) == 0;
              }
              if (v174) {
                char v175 = "";
              }
              else {
                char v175 = v173;
              }
              if (SBYTE7(v234) < 0)
              {
                int v176 = (const char *)v233;
                BOOL v177 = *((void *)&v233 + 1) == 0;
              }
              else
              {
                int v176 = (const char *)&v233;
                BOOL v177 = SBYTE7(v234) == 0;
              }
              if (v177) {
                BOOL v178 = "";
              }
              else {
                BOOL v178 = v176;
              }
              *(_DWORD *)std::string::pointer v215 = 68293123;
              *(_DWORD *)&v215[4] = 0;
              *(_WORD *)&v215[8] = 2082;
              *(void *)&v215[10] = "";
              *(_WORD *)&v215[18] = 1025;
              *(_DWORD *)&v215[20] = v24;
              *(_WORD *)&v215[24] = 1025;
              *(_DWORD *)&v215[26] = v126;
              *(_WORD *)&v215[30] = 2081;
              *(void *)&v216[0] = v171;
              WORD4(v216[0]) = 2081;
              *(void *)((char *)v216 + 10) = v172;
              WORD1(v216[1]) = 2081;
              *(void *)((char *)&v216[1] + 4) = v175;
              WORD6(v216[1]) = 2081;
              *(void *)((char *)&v216[1] + 14) = v178;
              WORD3(v216[2]) = 2049;
              *((void *)&v216[2] + 1) = v241;
              LOWORD(v217[0]) = 2049;
              *(void *)((char *)v217 + 2) = *((void *)&v241 + 1);
              WORD5(v217[0]) = 2049;
              *(void *)((char *)v217 + 12) = v242;
              WORD2(v217[1]) = 2049;
              *(void *)((char *)&v217[1] + 6) = *((void *)&v242 + 1);
              HIWORD(v217[1]) = 2049;
              *(void *)&v218[0] = v243;
              WORD4(v218[0]) = 2049;
              *(void *)((char *)v218 + 10) = v244;
              WORD1(v218[1]) = 2049;
              *(void *)((char *)&v218[1] + 4) = *((void *)&v245 + 1);
              WORD6(v218[1]) = 2049;
              *(void *)((char *)&v218[1] + 14) = *((void *)&v244 + 1);
              WORD3(v218[2]) = 2049;
              *((void *)&v218[2] + 1) = v245;
              LOWORD(v219[0]) = 2049;
              *(void *)((char *)v219 + 2) = v246;
              _os_log_impl((void *)&_mh_execute_header, v167, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ctsa,processIgneousAlert\", \"AlertType\":%{private}d, \"result\":%{private}d, \"source\":%{private, location:escape_only}s, \"uid\":%{private, location:escape_only}s, \"alertEnglish\":%{private, location:escape_only}s, \"alertSpanish\":%{private, location:escape_only}s, \"ingress_to_server_ts\":\"%{private}0.3f\", \"egress_from_source_ts\":\"%{private}0.3f\", \"event_origin_ts\":\"%{private}0.3f\", \"effective\":\"%{private}0.3f\", \"expires\":\"%{private}0.3f\", \"event_update_number\":\"%{private}0.3f\", \"magnitude\":\"%{private}0.3f\", \"epi_latitude\":\"%{private}0.3f\", \"epi_longitude\":\"%{private}0.3f\", \"mmiLevel\":\"%{private}0.3f\"}", v215, 0xAAu);
            }
            if (v24 == 2 || v24 == 1 && (SACommonUtils::isLivabiltyEnabled((SACommonUtils *)v168) & 1) == 0)
            {
              uint64_t v179 = *(void *)(a1 + 8);
              if (!v179)
              {
                int v121 = SALogObjectGeneral;
                if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
                  goto LABEL_254;
                }
                *(_DWORD *)std::string::pointer v215 = 68289026;
                *(_DWORD *)&v215[4] = 0;
                *(_WORD *)&v215[8] = 2082;
                *(void *)&v215[10] = "";
                double v122 = "{\"msg%{public}.0s\":\"#ctsa,processIgneousAlert,invalid channelManager\"}";
                goto LABEL_249;
              }
              CFPropertyListRef propertyListc = v22;
              sub_100042640(v179 + 128, (unsigned __int8 *)&v208);
              double v180 = SALogObjectGeneral;
              if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)std::string::pointer v215 = 68290307;
                *(_DWORD *)&v215[4] = 0;
                *(_WORD *)&v215[8] = 2082;
                *(void *)&v215[10] = "";
                *(_WORD *)&v215[18] = 1025;
                *(_DWORD *)&v215[20] = BYTE4(v208);
                *(_WORD *)&v215[24] = 1025;
                *(_DWORD *)&v215[26] = BYTE1(v208);
                *(_WORD *)&v215[30] = 1025;
                LODWORD(v216[0]) = BYTE3(v208);
                WORD2(v216[0]) = 1025;
                *(_DWORD *)((char *)v216 + 6) = BYTE2(v208);
                WORD5(v216[0]) = 1025;
                HIDWORD(v216[0]) = LOBYTE(v208);
                _os_log_impl((void *)&_mh_execute_header, v180, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,processIgneousAlert,state\", \"isEnabled\":%{private}hhd, \"inSupportedCountry\":%{private}hhd, \"isInMagnetMode\":%{private}hhd, \"isUserOptedIn\":%{private}hhd, \"inCoverageRegion\":%{private}hhd}", v215, 0x30u);
              }
              long long __p = @"Guid";
              if ((SBYTE7(buf_8[1]) & 0x80u) == 0) {
                v181 = buf_8;
              }
              else {
                v181 = *(_OWORD **)&buf_8[0];
              }
              BOOL v182 = +[NSString stringWithUTF8String:v181];
              *(void *)std::string::pointer v215 = v182;
              *(void *)std::string v211 = @"saUpdateNumber";
              char v183 = +[NSNumber numberWithDouble:*(double *)&v244];
              *(void *)&v215[8] = v183;
              *(void *)&v211[8] = @"saAlertSource";
              if (v229 >= 0) {
                BOOL v184 = (char *)&buf_8[1] + 8;
              }
              else {
                BOOL v184 = (char *)*((void *)&buf_8[1] + 1);
              }
              BOOL v185 = +[NSString stringWithUTF8String:v184];
              *(void *)&v215[16] = v185;
              *(void *)&v211[16] = @"saMagnitude";
              BOOL v186 = +[NSNumber numberWithDouble:*((double *)&v245 + 1)];
              *(void *)&v215[24] = v186;
              CFStringRef v212 = @"saEpicenterLat";
              int v187 = +[NSNumber numberWithDouble:*((double *)&v244 + 1)];
              *(void *)&v216[0] = v187;
              CFStringRef v213 = @"saEpicenterLon";
              int v188 = +[NSNumber numberWithDouble:*(double *)&v245];
              *((void *)&v216[0] + 1) = v188;
              CFStringRef v214 = @"saMMILevel";
              BOOL v189 = +[NSNumber numberWithDouble:*(double *)&v246];
              *(void *)&v216[1] = v189;
              int v190 = +[NSDictionary dictionaryWithObjects:v215 forKeys:&__p count:7];

              int v191 = SALogObjectGeneral;
              if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)std::string v209 = 68289283;
                *(_DWORD *)&v209[4] = 0;
                *(_WORD *)&v209[8] = 2082;
                *(void *)&v209[10] = "";
                *(_WORD *)&v209[18] = 2113;
                *(void *)&v209[20] = v190;
                _os_log_impl((void *)&_mh_execute_header, v191, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,processIgneousAlert\", \"dictionary\":%{private, location:escape_only}@}", v209, 0x1Cu);
              }
              uint64_t v192 = BYTE7(buf_8[1]);
              if (SBYTE7(buf_8[1]) < 0) {
                uint64_t v192 = *((void *)&buf_8[0] + 1);
              }
              if (v192)
              {
                char v193 = objc_opt_new();
                BOOL v194 = v193;
                if (v193) {
                  [v193 notifyEvent:v190];
                }
              }
              else
              {
                char v195 = SALogObjectGeneral;
                if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)std::string v209 = 68289026;
                  *(_DWORD *)&v209[4] = 0;
                  *(_WORD *)&v209[8] = 2082;
                  *(void *)&v209[10] = "";
                  _os_log_impl((void *)&_mh_execute_header, v195, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,processIgneousAlert,invalid UID\"}", v209, 0x12u);
                }
              }
              id v22 = (id)propertyListc;
            }
LABEL_254:
            sub_100032BBC((uint64_t)&buf);
            goto LABEL_43;
          }
          int v121 = SALogObjectGeneral;
          if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_254;
          }
          *(_DWORD *)std::string::pointer v215 = 68289026;
          *(_DWORD *)&v215[4] = 0;
          *(_WORD *)&v215[8] = 2082;
          *(void *)&v215[10] = "";
          double v122 = "{\"msg%{public}.0s\":\"#daemon,kAlertLivability isStaleAlert fails\"}";
        }
        else
        {
          int v121 = SALogObjectGeneral;
          if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_254;
          }
          *(_DWORD *)std::string::pointer v215 = 68289026;
          *(_DWORD *)&v215[4] = 0;
          *(_WORD *)&v215[8] = 2082;
          *(void *)&v215[10] = "";
          double v122 = "{\"msg%{public}.0s\":\"#daemon,kAlertLivability fails precheck\"}";
        }
LABEL_249:
        _os_log_impl((void *)&_mh_execute_header, v121, OS_LOG_TYPE_DEFAULT, v122, v215, 0x12u);
        goto LABEL_254;
      default:
        goto LABEL_254;
    }
  }
  uint64_t v7 = SALogObjectGeneral;
  if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
    goto LABEL_8;
  }
  uint64_t buf = 68289026;
  LOWORD(buf_8[0]) = 2082;
  *(void *)((char *)buf_8 + 2) = "";
  uint64_t v8 = "{\"msg%{public}.0s\":\"#daemon,#warning,isIgneousAlert,invalid parser\"}";
LABEL_7:
  _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v8, (uint8_t *)&buf, 0x12u);
LABEL_8:

  __int16 v9 = (SAPlatformInfo *)v207;
  uint64_t v10 = v9;
  if (!v9)
  {
    uint64_t v27 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t buf = 68289026;
      LOWORD(buf_8[0]) = 2082;
      *(void *)((char *)buf_8 + 2) = "";
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,#warning,onAlertReceived,nilAlertReceived\"}", (uint8_t *)&buf, 0x12u);
    }
    goto LABEL_126;
  }
  propertyList = v9;
  uint64_t v11 = (SACommonUtils *)SAPlatformInfo::instance(v9);
  if (!*((unsigned char *)v11 + 9)
    || (uint64_t v12 = *(void *)(a1 + 8), !*(unsigned char *)(v12 + 175))
    || !*(unsigned char *)(v12 + 174)
    || !SACommonUtils::isLivabiltyEnabled(v11))
  {
LABEL_53:
    long long v51 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
    {
      SACommonUtils::getAnyCmam(propertyList, v215);
      long long v52 = v215[23] >= 0 ? v215 : *(unsigned char **)v215;
      uint64_t buf = 68289283;
      LOWORD(buf_8[0]) = 2082;
      *(void *)((char *)buf_8 + 2) = "";
      WORD5(buf_8[0]) = 2081;
      *(void *)((char *)buf_8 + 12) = v52;
      _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#dbg,#daemon,onAlertReceived\", \"alert\":%{private, location:escape_only}s}", (uint8_t *)&buf, 0x1Cu);
      if ((v215[23] & 0x80000000) != 0) {
        operator delete(*(void **)v215);
      }
    }

    uint64_t v53 = [(SACommonUtils *)propertyList objectForKey:@"geometry"];
    if (!v53)
    {
      __int16 v67 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t buf = 68289026;
        LOWORD(buf_8[0]) = 2082;
        *(void *)((char *)buf_8 + 2) = "";
        _os_log_impl((void *)&_mh_execute_header, v67, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,#warning,onAlertReceived,missingGeometry\"}", (uint8_t *)&buf, 0x12u);
      }
      goto LABEL_124;
    }
    if (*(double *)(a1 + 256) <= 0.0)
    {
      uint64_t v68 = (id)SALogObjectGeneral;
      unint64_t v202 = v53;
      if (os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT))
      {
        SACommonUtils::getAnyCmam(propertyList, v215);
        uint64_t v69 = v215[23] >= 0 ? v215 : *(unsigned char **)v215;
        uint64_t buf = 68289283;
        LOWORD(buf_8[0]) = 2082;
        *(void *)((char *)buf_8 + 2) = "";
        WORD5(buf_8[0]) = 2081;
        *(void *)((char *)buf_8 + 12) = v69;
        _os_log_impl((void *)&_mh_execute_header, v68, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,#warning,onAlertReceived,noLocation,deferAlert\", \"alert\":%{private, location:escape_only}s}", (uint8_t *)&buf, 0x1Cu);
        if ((v215[23] & 0x80000000) != 0) {
          operator delete(*(void **)v215);
        }
      }

      uint64_t v71 = *(void *)a2;
      uint64_t v70 = *(void *)(a2 + 8);
      int v73 = *(_DWORD *)(a2 + 16);
      int v72 = *(_DWORD *)(a2 + 20);
      uint64_t v75 = *(void *)(a2 + 24);
      uint64_t v74 = *(void *)(a2 + 32);
      int v77 = *(_DWORD *)(a2 + 40);
      int v76 = *(_DWORD *)(a2 + 44);
      uint64_t v78 = *(void *)(a2 + 48);
      int v79 = *(_DWORD *)(a2 + 56);
      int v80 = *(_DWORD *)(a2 + 60);
      uint64_t v197 = *(void *)(a2 + 64);
      uint64_t v200 = *(void *)(a2 + 72);
      double v81 = (void *)CFPropertyListCreateDeepCopy(kCFAllocatorDefault, propertyList, 1uLL);
      double v82 = v81;
      unint64_t v84 = *(void *)(a1 + 272);
      unint64_t v83 = *(void *)(a1 + 280);
      if (v84 >= v83)
      {
        uint64_t v87 = *(void *)(a1 + 264);
        uint64_t v88 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(v84 - v87) >> 3);
        if ((unint64_t)(v88 + 1) > 0x2E8BA2E8BA2E8BALL) {
          sub_1000050E8();
        }
        unint64_t v89 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(v83 - v87) >> 3);
        uint64_t v90 = 2 * v89;
        if (2 * v89 <= v88 + 1) {
          uint64_t v90 = v88 + 1;
        }
        if (v89 >= 0x1745D1745D1745DLL) {
          unint64_t v91 = 0x2E8BA2E8BA2E8BALL;
        }
        else {
          unint64_t v91 = v90;
        }
        *((void *)&buf_8[1] + 1) = a1 + 280;
        if (v91)
        {
          double v92 = (char *)sub_10007C964(v91);
          uint64_t v196 = v93;
          id v94 = v92;
        }
        else
        {
          id v94 = 0;
          uint64_t v196 = 0;
        }
        uint64_t v95 = &v94[88 * v88];
        *(void *)uint64_t v95 = v71;
        *((void *)v95 + 1) = v70;
        *((_DWORD *)v95 + 4) = v73;
        *((_DWORD *)v95 + 5) = v72;
        *((void *)v95 + 3) = v75;
        *((void *)v95 + 4) = v74;
        *((_DWORD *)v95 + 10) = v77;
        *((_DWORD *)v95 + 11) = v76;
        *((void *)v95 + 6) = v78;
        *((_DWORD *)v95 + 14) = v79;
        *((_DWORD *)v95 + 15) = v80;
        *((void *)v95 + 8) = v197;
        *((void *)v95 + 9) = v200;
        *((void *)v95 + 10) = v82;
        uint64_t v96 = *(void *)(a1 + 264);
        unint64_t v97 = *(void *)(a1 + 272);
        if (v97 == v96)
        {
          int64x2_t v103 = vdupq_n_s64(v97);
          uint64_t v98 = v95;
          uint64_t v53 = v202;
        }
        else
        {
          uint64_t v98 = v95;
          uint64_t v53 = v202;
          do
          {
            *(_OWORD *)(v98 - 88) = *(_OWORD *)(v97 - 88);
            long long v99 = *(_OWORD *)(v97 - 72);
            long long v100 = *(_OWORD *)(v97 - 56);
            long long v101 = *(_OWORD *)(v97 - 40);
            *(_OWORD *)(v98 - 24) = *(_OWORD *)(v97 - 24);
            *(_OWORD *)(v98 - 40) = v101;
            *(_OWORD *)(v98 - 56) = v100;
            *(_OWORD *)(v98 - 72) = v99;
            uint64_t v102 = *(void *)(v97 - 8);
            *(void *)(v97 - 8) = 0;
            *((void *)v98 - 1) = v102;
            v98 -= 88;
            v97 -= 88;
          }
          while (v97 != v96);
          int64x2_t v103 = *(int64x2_t *)(a1 + 264);
        }
        double v85 = v95 + 88;
        *(void *)(a1 + 264) = v98;
        *(void *)(a1 + 272) = v95 + 88;
        buf_8[0] = v103;
        uint64_t v104 = *(void *)(a1 + 280);
        *(void *)(a1 + 280) = &v94[88 * v196];
        *(void *)&buf_8[1] = v104;
        uint64_t buf = v103.i64[0];
        sub_10007C9B0((uint64_t)&buf);
      }
      else
      {
        *(void *)unint64_t v84 = v71;
        *(void *)(v84 + 8) = v70;
        *(_DWORD *)(v84 + 16) = v73;
        *(_DWORD *)(v84 + 20) = v72;
        *(void *)(v84 + 24) = v75;
        *(void *)(v84 + 32) = v74;
        *(_DWORD *)(v84 + 40) = v77;
        *(_DWORD *)(v84 + 44) = v76;
        *(void *)(v84 + 48) = v78;
        *(_DWORD *)(v84 + 56) = v79;
        *(_DWORD *)(v84 + 60) = v80;
        *(void *)(v84 + 64) = v197;
        *(void *)(v84 + 72) = v200;
        *(void *)(v84 + 80) = v81;
        double v85 = (char *)(v84 + 88);
        uint64_t v53 = v202;
      }
      *(void *)(a1 + 272) = v85;

      goto LABEL_124;
    }
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)std::string::pointer v215 = _Q0;
    *(_DWORD *)&v215[16] = 0;
    *(void *)std::string::pointer v215 = CFAbsoluteTimeGetCurrent();
    *(void *)&v215[8] = 0xBFF0000000000000;
    *(_DWORD *)&v215[16] = -1;
    std::string::size_type v58 = [(SACommonUtils *)propertyList objectForKey:@"server_timestamp"];
    if (!v58 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
    {
      double v86 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t buf = 68289026;
        LOWORD(buf_8[0]) = 2082;
        *(void *)((char *)buf_8 + 2) = "";
        _os_log_impl((void *)&_mh_execute_header, v86, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,#warning,onAlertReceived,serverTimeStampMissingOrInvalid\"}", (uint8_t *)&buf, 0x12u);
      }
LABEL_109:
      if (sub_100029868((void ****)(a1 + 208), propertyList))
      {
        uint64_t v106 = *(void *)(a1 + 104);
        if (v106) {
          sub_100042F54(v106, propertyList);
        }
        double v208 = -1.0;
        id v107 = v53;
        operator new();
      }
      uint64_t v108 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t buf = 68289026;
        LOWORD(buf_8[0]) = 2082;
        *(void *)((char *)buf_8 + 2) = "";
        _os_log_impl((void *)&_mh_execute_header, v108, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,#warning,onAlertReceived,saAlreadyExists\"}", (uint8_t *)&buf, 0x12u);
      }
LABEL_123:

LABEL_124:
      goto LABEL_125;
    }
    sub_10000DD48(&buf, (char *)[v58 cStringUsingEncoding:4]);
    uint64_t v59 = HIBYTE(buf_8[0]);
    if (buf_8[0] < 0) {
      uint64_t v59 = *(void *)&buf_8[0];
    }
    if (v59)
    {
      double CFAbsoluteTimeFromTimeString = SACommonUtils::extractCFAbsoluteTimeFromTimeString((unsigned __int8 *)&buf);
      double v61 = *(double *)v215;
      double v62 = sub_10003E368();
      if (*((unsigned char *)v62 + 184))
      {
        char isLivabiltyEnabled = SACommonUtils::isLivabiltyEnabled((SACommonUtils *)v62);
        char v64 = *(double *)v215 < 0.0 ? 1 : isLivabiltyEnabled;
        if ((v64 & 1) == 0 && vabdd_f64(v61, CFAbsoluteTimeFromTimeString) > *((double *)sub_10003E368() + 21))
        {
          double v65 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)std::string __dst = 68289026;
            *(_DWORD *)&__dst[4] = 0;
            *(_WORD *)&__dst[8] = 2082;
            *(void *)&__dst[10] = "";
            _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,#warning,onAlertReceived,alertTooOld\"}", __dst, 0x12u);
          }
          char v66 = 0;
LABEL_106:
          if (SHIBYTE(buf_8[0]) < 0) {
            operator delete((void *)buf);
          }
          if ((v66 & 1) == 0) {
            goto LABEL_123;
          }
          goto LABEL_109;
        }
      }
    }
    else
    {
      __int16 v105 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string __dst = 68289026;
        *(_DWORD *)&__dst[4] = 0;
        *(_WORD *)&__dst[8] = 2082;
        *(void *)&__dst[10] = "";
        _os_log_impl((void *)&_mh_execute_header, v105, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,#warning,onAlertReceived,serverTimeStampEmpty\"}", __dst, 0x12u);
      }
    }
    char v66 = 1;
    goto LABEL_106;
  }
  __int16 v13 = [(SAPlatformInfo *)v10 valueForKey:@"encodedPDUList"];
  id v14 = [v13 count];
  uint64_t v15 = [(SAPlatformInfo *)v10 objectForKey:@"server_timestamp"];
  if (v15)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v16 = v15;
      double v17 = CFAbsoluteTimeGetCurrent();
      [v16 doubleValue];
      double v19 = v18;
      __int16 v20 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t buf = 68289794;
        LOWORD(buf_8[0]) = 2082;
        *(void *)((char *)buf_8 + 2) = "";
        WORD5(buf_8[0]) = 2050;
        *(double *)((char *)buf_8 + 12) = v19 + -978307200.0;
        WORD2(buf_8[1]) = 2050;
        *(double *)((char *)&buf_8[1] + 6) = v17;
        HIWORD(buf_8[1]) = 2050;
        *(double *)&long long v229 = v17 - (v19 + -978307200.0);
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,livabilityMessageLatency\", \"serverTimestamp\":\"%{public}0.1f\", \"deviceTimestamp\":\"%{public}0.1f\", \"latency\":\"%{public}0.1f\"}", (uint8_t *)&buf, 0x30u);
      }
    }
  }
  int v21 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289282;
    LOWORD(buf_8[0]) = 2082;
    *(void *)((char *)buf_8 + 2) = "";
    WORD5(buf_8[0]) = 2050;
    *(void *)((char *)buf_8 + 12) = v14;
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,encodedpdulist array,size\", \"size\":%{public}lu}", (uint8_t *)&buf, 0x1Cu);
  }
  if (!v14)
  {

    goto LABEL_53;
  }
  uint64_t buf = (uint64_t)_NSConcreteStackBlock;
  *(void *)&buf_8[0] = 3221225472;
  *((void *)&buf_8[0] + 1) = sub_10007B484;
  *(void *)&buf_8[1] = &unk_1000F8CE0;
  *((void *)&buf_8[1] + 1) = a1;
  [v13 enumerateObjectsUsingBlock:&buf];

LABEL_125:
  uint64_t v10 = propertyList;
LABEL_126:

LABEL_127:
}

void sub_10007AF40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, id a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,void *a62,uint64_t a63)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  sub_100032B20((uint64_t)&a34);
  sub_100032BBC((uint64_t)&a72);

  _Unwind_Resume(a1);
}

void sub_10007B20C(uint64_t a1, double a2, double a3)
{
  uint64_t v6 = sub_10006B474();
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v14 = 0;
  sub_10006AE6C(&v14, *((void *)v6 + 19), *((void *)v6 + 20), 0xAF8AF8AF8AF8AF8BLL * ((uint64_t)(*((void *)v6 + 20) - *((void *)v6 + 19)) >> 3));
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 == v15)
  {
LABEL_34:
    __int16 v13 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      LOWORD(v19[0]) = 2082;
      *(void **)((char *)v19 + 2) = "";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,igneousRegionCheck,rd.size==0,!updateRegionCoverage\"}", buf, 0x12u);
    }
  }
  else
  {
    while (1)
    {
      sub_10001D54C((uint64_t)buf, v7);
      if (v27 == 0.0 && v28 == 0.0 && v29 == 0.0 && v30 == 0.0)
      {
        int v9 = 3;
      }
      else if (v27 > a2 || v29 < a2 || v28 > a3 || v30 < a3)
      {
        int v9 = 0;
      }
      else
      {
        int v9 = 1;
        sub_10007C018(a1, 1);
      }
      double v17 = (void **)&v34;
      sub_100005360(&v17);
      double v17 = (void **)&v33;
      sub_100005360(&v17);
      if (__p)
      {
        long long v32 = __p;
        operator delete(__p);
      }
      if (v26 < 0) {
        operator delete(v25);
      }
      if (v24 < 0) {
        operator delete(v23);
      }
      if (v22 < 0) {
        operator delete(v21);
      }
      if (v20 < 0) {
        operator delete(v19[0]);
      }
      if (v9 != 3 && v9) {
        break;
      }
      v7 += 280;
      if (v7 == v8)
      {
        if (v15 == v14) {
          goto LABEL_34;
        }
        sub_10007C018(a1, 0);
        break;
      }
    }
  }
  *(void *)uint64_t buf = &v14;
  sub_10006AFD0((void ***)buf);
}

void sub_10007B44C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13)
{
  a13 = (void **)&a9;
  sub_10006AFD0(&a13);
  _Unwind_Resume(a1);
}

void sub_10007B484(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    long long __p = (void *)68289283;
    __int16 v8 = 2082;
    int v9 = "";
    __int16 v10 = 2113;
    id v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,object\", \"object\":%{private, location:escape_only}@}", (uint8_t *)&__p, 0x1Cu);
  }
  id v6 = v3;
  sub_10000DD48(&__p, (char *)[v6 UTF8String]);
  (*(void (**)(void, void **))(**(void **)(v4 + 40) + 40))(*(void *)(v4 + 40), &__p);
  if (SBYTE3(v11) < 0) {
    operator delete(__p);
  }
}

void sub_10007B5B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_10007B5E8(void *a1)
{
  id v1 = a1;
  memset(&__p, 0, sizeof(__p));
  SACommonUtils::getWEAHandling(v1, &__p);
  int WeaHandlingType = SACommonUtils::getWeaHandlingType((unint64_t)&__p);
  id v3 = SALogObjectGeneral;
  BOOL v4 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    *(_DWORD *)uint64_t buf = 68289283;
    int v16 = 0;
    __int16 v17 = 2082;
    double v18 = "";
    __int16 v19 = 1025;
    int v20 = WeaHandlingType;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,alertType\", \"type\":%{private}d}", buf, 0x18u);
  }
  switch(WeaHandlingType)
  {
    case 1:
      uint64_t v5 = SASettings::instance((SASettings *)v4);
      char v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 72))(v5);
      goto LABEL_10;
    case 2:
      uint64_t v7 = SASettings::instance((SASettings *)v4);
      char v6 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 56))(v7);
      goto LABEL_10;
    case 3:
      uint64_t v8 = SASettings::instance((SASettings *)v4);
      char v6 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 48))(v8);
      goto LABEL_10;
    case 4:
      uint64_t v9 = SASettings::instance((SASettings *)v4);
      char v6 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 88))(v9);
      goto LABEL_10;
    case 5:
      uint64_t v10 = SASettings::instance((SASettings *)v4);
      char v6 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 64))(v10);
      goto LABEL_10;
    case 6:
      uint64_t v11 = SASettings::instance((SASettings *)v4);
      char v6 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 80))(v11);
LABEL_10:
      if ((v6 & 1) == 0) {
        goto LABEL_12;
      }
      uint64_t v12 = 0;
      break;
    default:
LABEL_12:
      uint64_t v12 = 1;
      break;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }

  return v12;
}

void sub_10007B82C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_10007B870(id a1, OS_xpc_object *a2)
{
  uint64_t v2 = a2;
  string = xpc_dictionary_get_string(v2, _xpc_event_key_name);
  BOOL v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 68289282;
    v7[1] = 0;
    __int16 v8 = 2082;
    uint64_t v9 = "";
    __int16 v10 = 2082;
    uint64_t v11 = string;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,com.apple.notifyd.matching rebroadcast\", \"notificationName\":%{public, location:escape_only}s}", (uint8_t *)v7, 0x1Cu);
  }
  uint64_t v5 = +[NSNotificationCenter defaultCenter];
  char v6 = +[NSString stringWithUTF8String:string];
  [v5 postNotificationName:v6 object:0];
}

void sub_10007B998(_Unwind_Exception *a1)
{
  BOOL v4 = v3;

  _Unwind_Resume(a1);
}

void sub_10007B9CC(NSObject **a1, uint64_t *a2)
{
  BOOL v4 = (std::__shared_weak_count *)a2[1];
  uint64_t v13 = *a2;
  uint64_t v14 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1000272B8(&v13);
  if (v14) {
    sub_100028F6C(v14);
  }
  uint64_t v5 = *a1;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_10007BAFC;
  block[3] = &unk_1000F8D40;
  uint64_t v7 = *a2;
  char v6 = (std::__shared_weak_count *)a2[1];
  void block[4] = a1;
  void block[5] = v7;
  uint64_t v12 = v6;
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  dispatch_async(v5, block);
  __int16 v8 = (std::__shared_weak_count *)a2[1];
  uint64_t v9 = *a2;
  __int16 v10 = v8;
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1000272B8(&v9);
  if (v10) {
    sub_100028F6C(v10);
  }
  if (v12) {
    sub_100028F6C(v12);
  }
}

void sub_10007BAC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18)
{
  if (a11) {
    sub_100028F6C(a11);
  }
  if (a18) {
    sub_100028F6C(a18);
  }
  _Unwind_Resume(exception_object);
}

void sub_10007BAFC(void *a1)
{
  uint64_t v2 = a1[4];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3321888768;
  uint64_t v7 = sub_10007BBD8;
  __int16 v8 = &unk_1000F8D40;
  uint64_t v5 = a1[5];
  BOOL v4 = (std::__shared_weak_count *)a1[6];
  uint64_t v9 = v2;
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    v7(v6);
  }
  else
  {
    sub_10007BBD8(v6);
  }
  if (v11) {
    sub_100028F6C(v11);
  }
}

void sub_10007BBC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  if (a16) {
    sub_100028F6C(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10007BBD8(void *a1)
{
  uint64_t v2 = (void *)a1[4];
  uint64_t v3 = v2[1];
  if (v3)
  {
    BOOL v4 = (std::__shared_weak_count *)a1[6];
    uint64_t v26 = a1[5];
    double v27 = v4;
    if (v4) {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    sub_100027168(v3, &v26);
    if (v27) {
      sub_100028F6C(v27);
    }
  }
  uint64_t v5 = v2[4];
  if (v5)
  {
    char v6 = (std::__shared_weak_count *)a1[6];
    uint64_t v24 = a1[5];
    uint64_t v25 = v6;
    if (v6) {
      atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    (*(void (**)(uint64_t, uint64_t *))(*(void *)v5 + 48))(v5, &v24);
    if (v25) {
      sub_100028F6C(v25);
    }
  }
  uint64_t v7 = v2[5];
  if (v7)
  {
    __int16 v8 = (std::__shared_weak_count *)a1[6];
    uint64_t v22 = a1[5];
    uint64_t v23 = v8;
    if (v8) {
      atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    (*(void (**)(uint64_t, uint64_t *))(*(void *)v7 + 32))(v7, &v22);
    if (v23) {
      sub_100028F6C(v23);
    }
  }
  uint64_t v9 = v2[7];
  if (v9)
  {
    uint64_t v10 = (std::__shared_weak_count *)a1[6];
    uint64_t v20 = a1[5];
    int v21 = v10;
    if (v10) {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    (*(void (**)(uint64_t, uint64_t *))(*(void *)v9 + 16))(v9, &v20);
    if (v21) {
      sub_100028F6C(v21);
    }
  }
  uint64_t v11 = v2[8];
  if (v11)
  {
    uint64_t v12 = (std::__shared_weak_count *)a1[6];
    uint64_t v18 = a1[5];
    __int16 v19 = v12;
    if (v12) {
      atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    (*(void (**)(uint64_t, uint64_t *))(*(void *)v11 + 16))(v11, &v18);
    if (v19) {
      sub_100028F6C(v19);
    }
  }
  uint64_t v13 = (SASettings *)v2[2];
  if (v13)
  {
    uint64_t v14 = (std::__shared_weak_count *)a1[6];
    uint64_t v16 = a1[5];
    __int16 v17 = v14;
    if (v14) {
      atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    sub_10003C61C((uint64_t)v13, &v16);
    uint64_t v13 = (SASettings *)v17;
    if (v17) {
      sub_100028F6C(v17);
    }
  }
  return SASettings::finalize(v13);
}

void sub_10007BDC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a10) {
    sub_100028F6C(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10007BE28(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(result + 48) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_10007BE44(uint64_t a1)
{
  id v1 = *(std::__shared_weak_count **)(a1 + 48);
  if (v1) {
    sub_100028F6C(v1);
  }
}

BOOL sub_10007BE54()
{
  v0 = sub_10003E368();
  uint32_t v1 = *((_DWORD *)v0 + 59);
  if (SACommonUtils::isLivabiltyEnabled((SACommonUtils *)v0)) {
    uint32_t v2 = 100;
  }
  else {
    uint32_t v2 = v1;
  }
  if ((v2 & 0x80000000) != 0) {
    uint32_t v2 = *((_DWORD *)sub_10006B474() + 3);
  }
  BOOL v3 = v2 <= 0x64 && arc4random_uniform(0x64u) <= v2;
  BOOL v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 68289539;
    v6[1] = 0;
    __int16 v7 = 2082;
    __int16 v8 = "";
    __int16 v9 = 1025;
    uint32_t v10 = v2;
    __int16 v11 = 1025;
    BOOL v12 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,isParticipatingInMetrics\", \"appc\":%{private}d, \"isParticipating\":%{private}hhd}", (uint8_t *)v6, 0x1Eu);
  }
  return v3;
}

void sub_10007BF6C(uint64_t a1, int a2)
{
  uint64_t v4 = mach_continuous_time();
  double v5 = sub_100087FDC(v4);
  if (a2 || v5 - *(double *)(a1 + 312) > 86400.0)
  {
    *(double *)(a1 + 312) = v5;
    *(void *)(a1 + 320) = 0xBFF0000000000000;
    *(_DWORD *)(a1 + 328) = -1;
    BOOL v6 = sub_10007BE54();
    sub_1000261CC(*(void *)(a1 + 8), v6);
    uint64_t v7 = *(void *)(a1 + 16);
    if (v7)
    {
      uint64_t v8 = *(void *)(v7 + 136);
      if (v8) {
        sub_10005448C(v8 + 112, v6);
      }
      __int16 v9 = "kNone";
      *(unsigned char *)(v7 + 184) = v6;
      if (v6) {
        __int16 v9 = "kAny";
      }
      *(void *)(v7 + 64) = v9;
    }
  }
}

void sub_10007C018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v8[0] = 68289283;
    v8[1] = 0;
    __int16 v9 = 2082;
    uint32_t v10 = "";
    __int16 v11 = 1025;
    int v12 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,updateRegionCoverage\", \"isCovered\":%{private}hhd}", (uint8_t *)v8, 0x18u);
  }
  double v5 = +[SAEDFollowUpManager sharedInstance];
  [v5 setCurrentLocationInCoveredRegion:a2];

  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v7 = *(void *)(v6 + 136);
    if (v7) {
      sub_10005C854(v7, a2);
    }
  }
}

void sub_10007C120(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10007C138(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007C1F4(a1, a2);
  sub_10007C28C(v4 + 32, a2 + 32);
  sub_10004DB88(a1 + 64, a2 + 64);
  sub_10004DB88(a1 + 96, a2 + 96);
  sub_10007C28C(a1 + 128, a2 + 128);
  return a1;
}

void sub_10007C1B0(_Unwind_Exception *a1)
{
  sub_100021E70(v4);
  sub_100021E70(v3);
  sub_100027DF0(v2);
  sub_10007C324(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10007C1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_10007C28C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_10007C324(void *a1)
{
  uint32_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_10007C3A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007C1F4(a1, a2);
  sub_10000F63C(v4 + 32, a2 + 32);
  sub_10007C4F4(a1 + 64, a2 + 64);
  sub_10007C58C(a1 + 96, a2 + 96);
  sub_10000F63C(a1 + 128, a2 + 128);
  sub_10004DB88(a1 + 160, a2 + 160);
  sub_10000F63C(a1 + 192, a2 + 192);
  sub_10007C624(a1 + 224, a2 + 224);
  sub_10007C6BC(a1 + 256, a2 + 256);
  return a1;
}

void sub_10007C470(_Unwind_Exception *a1)
{
  sub_10007C754(v8);
  sub_10000F6D4(v7);
  sub_100021E70(v6);
  sub_10000F6D4(v5);
  sub_10007C7D8(v4);
  sub_10007C85C(v3);
  sub_10000F6D4(v2);
  sub_10007C324(v1);
  _Unwind_Resume(a1);
}

void sub_10007C4DC()
{
}

void sub_10007C4E4()
{
}

void sub_10007C4EC()
{
}

uint64_t sub_10007C4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_10007C58C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_10007C624(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_10007C6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_10007C754(void *a1)
{
  uint32_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10007C7D8(void *a1)
{
  uint32_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10007C85C(void *a1)
{
  uint32_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10007C8E0(void *a1)
{
  uint32_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_10007C964(unint64_t a1)
{
  if (a1 >= 0x2E8BA2E8BA2E8BBLL) {
    sub_100004E00();
  }
  return operator new(88 * a1);
}

uint64_t sub_10007C9B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 88;
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *sub_10007CA04(void *a1)
{
  uint32_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10007CA88(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1000F8D80;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10007CAA8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1000F8D80;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10007CAFC(uint64_t a1)
{
  return sub_100036A04(a1 + 24);
}

void sub_10007CB0C()
{
}

void *sub_10007CB20(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F8DD0;
  result[1] = v3;
  return result;
}

uint64_t sub_10007CB68(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F8DD0;
  a2[1] = v2;
  return result;
}

void sub_10007CB94(uint64_t a1, char **a2)
{
}

uint64_t sub_10007CBA0(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F8E40)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007CBE0()
{
  return &off_1000F8E40;
}

void *sub_10007CBEC(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    uint64_t v4 = (void *)result[3];
    double v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_10007CE4C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100004CA4(a1);
}

void sub_10007CE5C()
{
}

void *sub_10007CE70(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F8E60;
  result[1] = v3;
  return result;
}

uint64_t sub_10007CEB8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F8E60;
  a2[1] = v2;
  return result;
}

void sub_10007CEE4(uint64_t a1, id *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  id v4 = *a2;
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3) {
    sub_10003A510(v3, v4);
  }
}

void sub_10007CF3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10007CF50(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F8EC0)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007CF90()
{
  return &off_1000F8EC0;
}

void *sub_10007CF9C(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    id v4 = (void *)result[3];
    double v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_10007D1FC(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100004CA4(a1);
}

void sub_10007D20C()
{
}

void *sub_10007D220(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F8EE0;
  result[1] = v3;
  return result;
}

uint64_t sub_10007D268(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F8EE0;
  a2[1] = v2;
  return result;
}

void sub_10007D294(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  sub_10004237C(*(void *)(v3 + 8) + 128, v2);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    double v5 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v6[0] = 68289282;
      v6[1] = 0;
      __int16 v7 = 2082;
      uint64_t v8 = "";
      __int16 v9 = 1026;
      int v10 = v2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onSupportedByTelephony\", \"status\":%{public}hhd}", (uint8_t *)v6, 0x18u);
    }
    *(unsigned char *)(v4 + 44) = v2;
  }
}

uint64_t sub_10007D380(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F8F40)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007D3C0()
{
  return &off_1000F8F40;
}

void *sub_10007D3CC(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    uint64_t v4 = (void *)result[3];
    double v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_10007D62C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100004CA4(a1);
}

void sub_10007D63C()
{
}

void *sub_10007D650(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F8F60;
  result[1] = v3;
  return result;
}

uint64_t sub_10007D698(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F8F60;
  a2[1] = v2;
  return result;
}

void sub_10007D6C4(uint64_t a1, unsigned __int8 *a2)
{
}

uint64_t sub_10007D6D0(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F8FC0)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007D710()
{
  return &off_1000F8FC0;
}

void sub_10007D720()
{
}

void *sub_10007D734(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F8FE0;
  result[1] = v3;
  return result;
}

uint64_t sub_10007D77C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F8FE0;
  a2[1] = v2;
  return result;
}

void sub_10007D7A8(uint64_t a1, id *a2)
{
  uint64_t v2 = (SAPlatformInfo *)*a2;
  if (([*(id *)SAPlatformInfo::instance(v2) isEqualToString:@"iPhone"] & 1) == 0) {
    goto LABEL_37;
  }
  uint64_t v3 = sub_100003318();
  if (!*((unsigned char *)v3 + 119) || !*((unsigned char *)v3 + 118))
  {
    uint64_t v15 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_37;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v24 = 0;
    __int16 v25 = 2082;
    uint64_t v26 = "";
    uint64_t v16 = "{\"msg%{public}.0s\":\"#daemon,onMotionHarvestWeaTrigger,not allowed\"}";
LABEL_25:
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, v16, buf, 0x12u);
    goto LABEL_37;
  }
  if (!v2)
  {
    uint64_t v15 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_37;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v24 = 0;
    __int16 v25 = 2082;
    uint64_t v26 = "";
    uint64_t v16 = "{\"msg%{public}.0s\":\"#daemon,onMotionHarvestWeaTrigger,weaReceivedDict null\"}";
    goto LABEL_25;
  }
  uint64_t v4 = [(SAPlatformInfo *)v2 objectForKey:@"AlertMessageID"];
  if (v4 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    if ([v4 intValue] == 4352)
    {
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      uint64_t v6 = "EEE19findFirstEventAfterEdEUlvE0_NS6_ISA_EEFvvEEE";
      LODWORD(v6) = vcvtmd_s64_f64(Current / 3600.0);
      uint64_t v7 = +[NSString stringWithFormat:@"J%d", v6];
      uint64_t v8 = (void *)v7;
      if (v7)
      {
        CFStringRef v21 = @"Guid";
        uint64_t v22 = v7;
        __int16 v9 = +[NSDictionary dictionaryWithObjects:&v22 forKeys:&v21 count:1];
        int v10 = objc_opt_new();
        if (v9
          && (([v9 objectForKey:@"Guid"],
               (__int16 v11 = objc_claimAutoreleasedReturnValue()) != 0)
            ? (BOOL v12 = v10 == 0)
            : (BOOL v12 = 1),
              !v12 ? (int v13 = 0) : (int v13 = 1),
              v11,
              !v13))
        {
          uint64_t v20 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)uint64_t buf = 68289026;
            int v24 = 0;
            __int16 v25 = 2082;
            uint64_t v26 = "";
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onMotionHarvestWeaTrigger,triggered harvest\"}", buf, 0x12u);
          }
          [v10 notifyEvent:v9];
        }
        else
        {
          uint64_t v14 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)uint64_t buf = 68289026;
            int v24 = 0;
            __int16 v25 = 2082;
            uint64_t v26 = "";
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onMotionHarvestWeaTrigger,fail to call motion SPI\"}", buf, 0x12u);
          }
        }
      }
      else
      {
        __int16 v19 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = 68289026;
          int v24 = 0;
          __int16 v25 = 2082;
          uint64_t v26 = "";
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onMotionHarvestWeaTrigger,uid null\"}", buf, 0x12u);
        }
      }
    }
    else
    {
      uint64_t v18 = (id)SALogObjectGeneral;
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289282;
        int v24 = 0;
        __int16 v25 = 2082;
        uint64_t v26 = "";
        __int16 v27 = 1026;
        unsigned int v28 = [v4 intValue];
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onMotionHarvestWeaTrigger,not ETWS\", \"alertMessageID\":%{public}d}", buf, 0x18u);
      }
    }
  }
  else
  {
    __int16 v17 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v24 = 0;
      __int16 v25 = 2082;
      uint64_t v26 = "";
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onMotionHarvestWeaTrigger,invalid messageID\"}", buf, 0x12u);
    }
  }

LABEL_37:
}

void sub_10007DC2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10007DC8C(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9040)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007DCCC()
{
  return &off_1000F9040;
}

void sub_10007DCDC()
{
}

void *sub_10007DCF0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F9060;
  result[1] = v3;
  return result;
}

uint64_t sub_10007DD38(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F9060;
  a2[1] = v2;
  return result;
}

void sub_10007DD64(uint64_t a1, id *a2, void **a3)
{
  uint64_t v4 = *a3;
  double v5 = (SACommonUtils *)*a2;
  id v6 = v4;
  uint64_t v7 = *(void *)(a1 + 8);
  __asm { FMOV            V0.2D, #-1.0 }
  long long v25 = _Q0;
  int v26 = 0;
  unint64_t v27 = 0xBFF0000000000000;
  long long v29 = xmmword_1000B6AF0;
  int v28 = 2;
  v23[0] = CFAbsoluteTimeGetCurrent();
  v23[1] = 0xBFF0000000000000;
  int v24 = -1;
  int v13 = [v6 objectForKey:kIncomingMessageInterfaceKey];

  if (v13)
  {
    uint64_t v14 = [v6 objectForKey:kIncomingMessageInterfaceKey];
    *(void *)&long long v29 = (int)[v14 intValue];
  }
  uint64_t v15 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    SACommonUtils::getAnyCmam(v5, __p);
    int v16 = v22;
    __int16 v17 = (void **)__p[0];
    uint64_t v18 = [v6 objectForKey:kIncomingMessageInterfaceKey];
    __int16 v19 = (void *)v18;
    uint64_t v20 = __p;
    *(_DWORD *)uint64_t buf = 68289539;
    if (v16 < 0) {
      uint64_t v20 = v17;
    }
    int v31 = 0;
    __int16 v32 = 2082;
    uint64_t v33 = "";
    __int16 v34 = 2081;
    uint64_t v35 = v20;
    __int16 v36 = 2113;
    uint64_t v37 = v18;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onAlertReceived,push\", \"alert\":%{private, location:escape_only}s, \"IncomingInterface\":%{private, location:escape_only}@}", buf, 0x26u);
    if (v22 < 0) {
      operator delete(__p[0]);
    }
  }
  sub_100078EE8(v7, (uint64_t)v23, v5);
}

void sub_10007DF54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_10007DFA4(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F90C0)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007DFE4()
{
  return &off_1000F90C0;
}

uint64_t sub_10007DFF0(uint64_t a1)
{
  return a1;
}

void sub_10007E01C(uint64_t a1)
{
  operator delete();
}

uint64_t sub_10007E068()
{
  return 0;
}

id sub_10007E070(uint64_t a1, void *a2)
{
  *a2 = off_1000F90E0;
  id result = objc_retainBlock(*(id *)(a1 + 8));
  a2[1] = result;
  return result;
}

uint64_t sub_10007E0B8(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  return _objc_release_x1();
}

uint64_t sub_10007E0C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 8) + 16))();
}

uint64_t sub_10007E0E0(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9150)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007E120()
{
  return &off_1000F9150;
}

uint64_t sub_10007E12C(uint64_t a1)
{
  return a1;
}

void sub_10007E158(uint64_t a1)
{
  operator delete();
}

uint64_t sub_10007E1A4()
{
  return 0;
}

id sub_10007E1AC(uint64_t a1, void *a2)
{
  *a2 = off_1000F9170;
  id result = objc_retainBlock(*(id *)(a1 + 8));
  a2[1] = result;
  return result;
}

uint64_t sub_10007E1F4(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  return _objc_release_x1();
}

uint64_t sub_10007E204(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 8) + 16))();
}

uint64_t sub_10007E21C(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F91D0)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007E25C()
{
  return &off_1000F91D0;
}

uint64_t sub_10007E268(uint64_t a1)
{
  return a1;
}

void sub_10007E294(uint64_t a1)
{
  operator delete();
}

uint64_t sub_10007E2E0()
{
  return 0;
}

id sub_10007E2E8(uint64_t a1, void *a2)
{
  *a2 = off_1000F91F0;
  id result = objc_retainBlock(*(id *)(a1 + 8));
  a2[1] = result;
  return result;
}

uint64_t sub_10007E330(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  return _objc_release_x1();
}

uint64_t sub_10007E340(uint64_t a1, double *a2, double *a3, double *a4, double *a5, uint64_t a6, double *a7)
{
  return (*(uint64_t (**)(double, double, double, double, double))(*(void *)(a1 + 8) + 16))(*a2, *a3, *a4, *a5, *a7);
}

uint64_t sub_10007E368(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9260)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007E3A8()
{
  return &off_1000F9260;
}

void sub_10007E3B8()
{
}

void *sub_10007E3CC(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F9280;
  result[1] = v3;
  return result;
}

uint64_t sub_10007E414(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F9280;
  a2[1] = v2;
  return result;
}

void sub_10007E440(uint64_t a1, char **a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = v3[1];
  if (*(unsigned char *)(v4 + 175) && *(unsigned char *)(v4 + 174))
  {
    double v5 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      std::string __p = (void *)68289283;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2081;
      __int16 v17 = v2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onUserTappedOnWea\", \"hash\":%{private, location:escape_only}s}", (uint8_t *)&__p, 0x1Cu);
    }
    if (!v3[13] || !*((unsigned char *)sub_10003E368() + 178)) {
      goto LABEL_17;
    }
    id v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      std::string __p = (void *)68289283;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2081;
      __int16 v17 = v2;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#dbg,#daemon,onUserTappedOnWea\", \"weaHash\":%{private, location:escape_only}s}", (uint8_t *)&__p, 0x1Cu);
    }
    uint64_t v7 = v3[13];
    sub_10000DD48(&__p, v2);
    BOOL v8 = sub_100043640(v7, (uint64_t)&__p);
    BOOL v9 = v8;
    if (SBYTE3(v17) < 0)
    {
      operator delete(__p);
      if (!v9) {
        goto LABEL_17;
      }
    }
    else if (!v8)
    {
LABEL_17:
      uint64_t v12 = v3[2];
      if (v12)
      {
        sub_10000DD48(&__p, v2);
        sub_10003AA6C(v12, &__p);
        if (SBYTE3(v17) < 0) {
          operator delete(__p);
        }
      }
      return;
    }
    uint64_t v11 = v3[2];
    sub_10000DD48(&__p, v2);
    sub_10003ABD8(v11, (uint64_t)&__p);
    if (SBYTE3(v17) < 0) {
      operator delete(__p);
    }
    goto LABEL_17;
  }
  int v10 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    std::string __p = (void *)68289283;
    __int16 v14 = 2082;
    uint64_t v15 = "";
    __int16 v16 = 2081;
    __int16 v17 = v2;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onUserTappedOnWea,#warning,notSupported\", \"hash\":%{private, location:escape_only}s}", (uint8_t *)&__p, 0x1Cu);
  }
}

void sub_10007E6AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10007E6D8(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F92E0)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007E718()
{
  return &off_1000F92E0;
}

void sub_10007E728()
{
}

void *sub_10007E73C(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F9300;
  result[1] = v3;
  return result;
}

uint64_t sub_10007E784(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F9300;
  a2[1] = v2;
  return result;
}

void sub_10007E7B0()
{
  v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v1[0] = 68289026;
    v1[1] = 0;
    __int16 v2 = 2082;
    uint64_t v3 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onNetworkConnectivityChanged\"}", (uint8_t *)v1, 0x12u);
  }
}

uint64_t sub_10007E864(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9360)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007E8A4()
{
  return &off_1000F9360;
}

void *sub_10007E8B0(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    uint64_t v4 = (void *)result[3];
    double v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        id result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        id result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      id result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_10007EB10(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_100004CA4(a1);
}

void sub_10007EB20()
{
}

void *sub_10007EB34(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F9380;
  result[1] = v3;
  return result;
}

uint64_t sub_10007EB7C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F9380;
  a2[1] = v2;
  return result;
}

BOOL sub_10007EBA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 8) + 8);
  if (*(char *)(v1 + 103) < 0) {
    uint64_t v2 = *(void *)(v1 + 88);
  }
  else {
    uint64_t v2 = *(unsigned __int8 *)(v1 + 103);
  }
  return v2 != 0;
}

uint64_t sub_10007EBD0(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F93F0)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007EC10()
{
  return &off_1000F93F0;
}

void sub_10007EC20()
{
}

void *sub_10007EC34()
{
  id result = operator new(0x10uLL);
  void *result = off_1000F9410;
  return result;
}

void sub_10007EC6C(uint64_t a1, void *a2)
{
  *a2 = off_1000F9410;
}

void sub_10007EC94(uint64_t a1, id *a2, unsigned char **a3)
{
  uint64_t v3 = *a3;
  id v4 = *a2;
  memset(&v9, 0, sizeof(v9));
  double v5 = sub_100003318();
  std::string::operator=(&v9, (const std::string *)(v5 + 4));
  std::string::size_type size = HIBYTE(v9.__r_.__value_.__r.__words[2]);
  char v7 = HIBYTE(v9.__r_.__value_.__r.__words[2]);
  if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v9.__r_.__value_.__l.__size_;
  }
  if (!size)
  {
    *uint64_t v3 = 0;
    if ((v7 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  *uint64_t v3 = 1;
  [v4 removeAllObjects];
  sub_10006B474();
  if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    BOOL v8 = &v9;
  }
  else {
    BOOL v8 = (std::string *)v9.__r_.__value_.__r.__words[0];
  }
  +[NSString stringWithUTF8String:v8];

  if ((*((unsigned char *)&v9.__r_.__value_.__s + 23) & 0x80) != 0) {
LABEL_8:
  }
    operator delete(v9.__r_.__value_.__l.__data_);
LABEL_9:
}

void sub_10007ED54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_10007ED74(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9480)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007EDB4()
{
  return &off_1000F9480;
}

void sub_10007EDC4()
{
}

void *sub_10007EDD8()
{
  id result = operator new(0x10uLL);
  void *result = off_1000F94A0;
  return result;
}

void sub_10007EE10(uint64_t a1, void *a2)
{
  *a2 = off_1000F94A0;
}

uint64_t sub_10007EE38(SASettings *a1)
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)SASettings::instance(a1) + 104);

  return v1();
}

uint64_t sub_10007EE80(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9500)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007EEC0()
{
  return &off_1000F9500;
}

void sub_10007EED0()
{
}

void *sub_10007EEE4(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F9520;
  result[1] = v3;
  return result;
}

uint64_t sub_10007EF2C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F9520;
  a2[1] = v2;
  return result;
}

void sub_10007EF58()
{
  v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v2 = 68289026;
    int v3 = 0;
    __int16 v4 = 2082;
    double v5 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onSettingsVisited\"}", (uint8_t *)&v2, 0x12u);
    v0 = SALogObjectGeneral;
  }
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    int v2 = 68289026;
    int v3 = 0;
    __int16 v4 = 2082;
    double v5 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,updateCfuOnSettingsVisited\"}", (uint8_t *)&v2, 0x12u);
  }
  uint64_t v1 = +[SAEDFollowUpManager sharedInstance];
  [v1 noteUserViewedEDSettings];
}

void sub_10007F080(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10007F098(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9580)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007F0D8()
{
  return &off_1000F9580;
}

void sub_10007F0E8()
{
}

void *sub_10007F0FC(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F95A0;
  result[1] = v3;
  return result;
}

uint64_t sub_10007F144(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F95A0;
  a2[1] = v2;
  return result;
}

void sub_10007F170(uint64_t a1, unsigned __int8 *a2)
{
}

uint64_t sub_10007F17C(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9600)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007F1BC()
{
  return &off_1000F9600;
}

void sub_10007F1CC()
{
}

void *sub_10007F1E0(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F9620;
  result[1] = v3;
  return result;
}

uint64_t sub_10007F228(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F9620;
  a2[1] = v2;
  return result;
}

__n128 sub_10007F254@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (*(char *)(v3 + 375) < 0)
  {
    sub_100004CB8((unsigned char *)a2, *(void **)(v3 + 352), *(void *)(v3 + 360));
  }
  else
  {
    long long v4 = *(_OWORD *)(v3 + 352);
    *(void *)(a2 + 16) = *(void *)(v3 + 368);
    *(_OWORD *)a2 = v4;
  }
  if (*(char *)(v3 + 399) < 0)
  {
    sub_100004CB8((unsigned char *)(a2 + 24), *(void **)(v3 + 376), *(void *)(v3 + 384));
  }
  else
  {
    long long v5 = *(_OWORD *)(v3 + 376);
    *(void *)(a2 + 40) = *(void *)(v3 + 392);
    *(_OWORD *)(a2 + 24) = v5;
  }
  id v6 = (unsigned char *)(a2 + 48);
  if (*(char *)(v3 + 423) < 0)
  {
    sub_100004CB8(v6, *(void **)(v3 + 400), *(void *)(v3 + 408));
  }
  else
  {
    long long v7 = *(_OWORD *)(v3 + 400);
    *(void *)(a2 + 64) = *(void *)(v3 + 416);
    *(_OWORD *)id v6 = v7;
  }
  __n128 result = *(__n128 *)(v3 + 424);
  long long v9 = *(_OWORD *)(v3 + 440);
  *(_DWORD *)(a2 + 104) = *(_DWORD *)(v3 + 456);
  *(_OWORD *)(a2 + 88) = v9;
  *(__n128 *)(a2 + 72) = result;
  return result;
}

void sub_10007F324(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*v2);
  }
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10007F358(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9690)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007F398()
{
  return &off_1000F9690;
}

void sub_10007F3A8()
{
}

void *sub_10007F3BC(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F96B0;
  result[1] = v3;
  return result;
}

uint64_t sub_10007F404(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F96B0;
  a2[1] = v2;
  return result;
}

void sub_10007F430(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v7 = 0;
    __int16 v8 = 2082;
    long long v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,igneousStateInfo,readFromChMgr\"}", buf, 0x12u);
  }
  uint64_t v3 = *(void *)(v1 + 8);
  if (v3)
  {
    sub_100042640(v3 + 128, v5);
    long long v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68290307;
      int v7 = 0;
      __int16 v8 = 2082;
      long long v9 = "";
      __int16 v10 = 1025;
      int v11 = v5[4];
      __int16 v12 = 1025;
      int v13 = v5[1];
      __int16 v14 = 1025;
      int v15 = v5[3];
      __int16 v16 = 1025;
      int v17 = v5[2];
      __int16 v18 = 1025;
      int v19 = v5[0];
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,igneousStateInfo,state\", \"isEnabled\":%{private}hhd, \"inSupportedCountry\":%{private}hhd, \"isInMagnetMode\":%{private}hhd, \"isUserOptedIn\":%{private}hhd, \"inCoverageRegion\":%{private}hhd}", buf, 0x30u);
    }
  }
}

uint64_t sub_10007F5B8(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9720)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007F5F8()
{
  return &off_1000F9720;
}

void sub_10007F608()
{
}

void *sub_10007F61C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F9740;
  result[1] = v3;
  return result;
}

uint64_t sub_10007F664(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F9740;
  a2[1] = v2;
  return result;
}

void sub_10007F690(uint64_t a1, int *a2, unsigned __int8 *a3)
{
}

uint64_t sub_10007F6A0(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F97B0)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007F6E0()
{
  return &off_1000F97B0;
}

void sub_10007F6F0()
{
}

void *sub_10007F704(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F97D0;
  result[1] = v3;
  return result;
}

uint64_t sub_10007F74C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F97D0;
  a2[1] = v2;
  return result;
}

void sub_10007F778(uint64_t a1, int *a2, unsigned __int8 *a3)
{
}

uint64_t sub_10007F788(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9830)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007F7C8()
{
  return &off_1000F9830;
}

void sub_10007F7D4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1000F9850;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10007F7F4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1000F9850;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10007F848(uint64_t a1)
{
  return sub_10006F43C(a1 + 24);
}

void sub_10007F858()
{
}

void *sub_10007F86C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F98A0;
  result[1] = v3;
  return result;
}

uint64_t sub_10007F8B4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F98A0;
  a2[1] = v2;
  return result;
}

void sub_10007F8E0(uint64_t a1, int *a2, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)(a3 + 9);
  uint64_t v6 = *(void *)(a1 + 8);
  int v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = *(unsigned __int8 *)(a3 + 16);
    int v9 = *(unsigned __int8 *)(a3 + 8);
    int v10 = *a2;
    int v11 = (int)*(double *)a3;
    v14[0] = 68290306;
    v14[1] = 0;
    __int16 v15 = 2082;
    __int16 v16 = "";
    __int16 v17 = 1026;
    int v18 = v11;
    __int16 v19 = 1026;
    int v20 = v9;
    __int16 v21 = 1026;
    int v22 = v5;
    __int16 v23 = 1026;
    int v24 = v8;
    __int16 v25 = 1026;
    int v26 = v10;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onBatteryServiceStateChanged\", \"level\":%{public}d, \"fullyCharged\":%{public}hhd, \"connected\":%{public}hhd, \"wasConnected\":%{public}hhd, \"state\":%{public}d}", (uint8_t *)v14, 0x30u);
  }
  uint64_t v12 = *(void *)(v6 + 112);
  if (v12) {
    (*(void (**)(uint64_t, BOOL))(*(void *)v12 + 16))(v12, v5 != 0);
  }
  int v13 = *(unsigned __int8 **)(v6 + 144);
  if (v13) {
    sub_100083098(v13);
  }
  sub_10007BF6C(v6, 0);
}

uint64_t sub_10007FA44(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9910)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007FA84()
{
  return &off_1000F9910;
}

void sub_10007FA94()
{
}

void *sub_10007FAA8(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F9930;
  result[1] = v3;
  return result;
}

uint64_t sub_10007FAF0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F9930;
  a2[1] = v2;
  return result;
}

void sub_10007FB1C(uint64_t a1, id *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  id v3 = *a2;
  long long v4 = sub_10006B474();
  sub_10006B70C((uint64_t)v4, v3);
  int v5 = sub_10006B474();
  sub_10006B5B4((uint64_t)v5);
  uint64_t v6 = *(void *)(v2 + 8);
  if (v6) {
    sub_100041854(v6 + 128, v3);
  }
  sub_10007BF6C(v2, 1);
  uint64_t v7 = *(void *)(v2 + 16);
  if (v7)
  {
    uint64_t v8 = *(void *)(v2 + 8);
    if (*(unsigned char *)(v8 + 177)) {
      BOOL v9 = *(unsigned __int8 *)(v8 + 176) != 0;
    }
    else {
      BOOL v9 = 0;
    }
    int v10 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289282;
      int v20 = 0;
      __int16 v21 = 2082;
      int v22 = "";
      __int16 v23 = 1026;
      LODWORD(v24) = v9;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onChannelMapAvailable\", \"isAvailable\":%{public}hhd}", buf, 0x18u);
    }
    *(unsigned char *)(v7 + 46) = v9;
    int v18 = 0;
    *(_DWORD *)uint64_t buf = 0;
    if (v3 && (uint64_t v11 = *(void *)(v2 + 88)) != 0)
    {
      (*(void (**)(uint64_t, uint8_t *, int *))(*(void *)v11 + 24))(v11, buf, &v18);
      int v13 = v18;
      int v12 = *(_DWORD *)buf;
    }
    else
    {
      int v13 = 0;
      int v12 = 0;
    }
    sub_10003C93C(*(void *)(v2 + 16), v12, v13);
    sub_10003CCD4(*(void *)(v2 + 16), v3);
  }
  float v14 = *((float *)sub_10006B474() + 121);
  __int16 v15 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289282;
    int v20 = 0;
    __int16 v21 = 2082;
    int v22 = "";
    __int16 v23 = 2050;
    double v24 = v14;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,updateCfuUptakeCoefficient\", \"uptakeCoefficient\":\"%{public}f\"}", buf, 0x1Cu);
  }
  __int16 v16 = +[SAEDFollowUpManager sharedInstance];
  *(float *)&double v17 = v14;
  [v16 setUptakeCoefficient:v17];

  if (*(double *)(v2 + 256) > 0.0) {
    sub_10007B20C(v2, *(double *)(v2 + 232), *(double *)(v2 + 240));
  }
  sub_1000789B8((uint64_t *)v2);
}

void sub_10007FD7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10007FDA4(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9990)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_10007FDE4()
{
  return &off_1000F9990;
}

void *sub_10007FDF0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10007FE78()
{
}

void *sub_10007FE8C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F99B0;
  result[1] = v3;
  return result;
}

uint64_t sub_10007FED4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F99B0;
  a2[1] = v2;
  return result;
}

void sub_10007FF00(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = v3[1];
  if (v4) {
    sub_100042480((SAPlatformInfo *)(v4 + 128), v2 != 0);
  }
  uint64_t v5 = v3[5];
  if (v5) {
    (*(void (**)(uint64_t, BOOL))(*(void *)v5 + 88))(v5, v2 != 0);
  }
  uint64_t v6 = v3[2];
  if (v6)
  {
    uint64_t v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v11[0] = 68289282;
      v11[1] = 0;
      __int16 v12 = 2082;
      int v13 = "";
      __int16 v14 = 1026;
      int v15 = v2;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saanalytics,onCompanionNearby\", \"isNearby\":%{public}hhd}", (uint8_t *)v11, 0x18u);
    }
    *(unsigned char *)(v6 + 47) = v2;
    uint64_t v8 = *(void *)(v6 + 136);
    if (v8)
    {
      uint64_t v9 = *(void *)(v8 + 48);
      if (v9) {
        sub_100061A28(v9, v2 != 0);
      }
    }
  }
  uint64_t v10 = v3[16];
  if (v10)
  {
    sub_100031680(v10, v2 != 0);
  }
}

uint64_t sub_100080090(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9A10)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1000800D0()
{
  return &off_1000F9A10;
}

void sub_1000800E0()
{
}

void *sub_1000800F4(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F9A30;
  result[1] = v3;
  return result;
}

uint64_t sub_10008013C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F9A30;
  a2[1] = v2;
  return result;
}

void sub_100080168(uint64_t a1, double *a2, uint64_t *a3, id *a4)
{
  double v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t v7 = (SACommonUtils *)*a4;
  uint64_t v8 = *(void *)(a1 + 8);
  __asm { FMOV            V0.2D, #-1.0 }
  long long v27 = _Q0;
  uint64_t v31 = 0;
  LODWORD(v28) = 0;
  LODWORD(v30) = 1;
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  unint64_t v25 = 0xBFF0000000000000;
  LODWORD(v26) = -1;
  double v29 = v5 * 1000.0;
  uint64_t v32 = v6;
  __int16 v14 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    SACommonUtils::getAnyCmam(v7, &__p);
    int v15 = v36 >= 0 ? &__p : (void **)__p;
    *(_DWORD *)uint64_t buf = 68289795;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v38 = 2082;
    uint64_t v39 = "";
    __int16 v40 = 2081;
    int v41 = v15;
    __int16 v42 = 2050;
    uint64_t v43 = v6;
    __int16 v44 = 2050;
    double v45 = v5;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onAlertReceived,pull\", \"alert\":%{private, location:escape_only}s, \"responseCode\":%{public}ld, \"latency\":\"%{public}0.1f\"}", buf, 0x30u);
    if (v36 < 0) {
      operator delete(__p);
    }
  }

  if (v6 == 200)
  {
    sub_100078EE8(v8, (uint64_t)&Current, v7);
  }
  else
  {
    __int16 v16 = v7;
    double v17 = v16;
    if (v16)
    {
      int v18 = [(SACommonUtils *)v16 objectForKey:@"SafetyAlertMissingForHash", *(void *)&Current, v25, v26, v27, v28, *(void *)&v29, v30, v31, v32];
      if (v18 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        sub_10000DD48(buf, (char *)[v18 UTF8String]);
        uint64_t v19 = *(void *)(v8 + 16);
        if (v19) {
          sub_10003ADF8(v19, (uint64_t)buf, (uint64_t)&Current);
        }
        if (!sub_100029E58((void ****)(v8 + 208), (uint64_t)buf))
        {
          int v20 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            std::string __p = (void *)68289026;
            __int16 v34 = 2082;
            uint64_t v35 = "";
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onAlertPullFailure,sendToTelephony\"}", (uint8_t *)&__p, 0x12u);
          }
          (*(void (**)(void, SACommonUtils *))(**(void **)(v8 + 40) + 24))(*(void *)(v8 + 40), v17);
        }
        uint64_t v21 = *(void *)(v8 + 104);
        if (v21) {
          sub_10004334C(v21, (uint64_t)buf);
        }
        if (SBYTE3(v41) < 0) {
          operator delete(*(void **)buf);
        }
      }
      else
      {
        int v22 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v38 = 2082;
          uint64_t v39 = "";
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,#warning,onAlertPullFailure,invalidMissingHash\"}", buf, 0x12u);
        }
      }
    }
    else
    {
      __int16 v23 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v38 = 2082;
        uint64_t v39 = "";
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,#warning,onAlertPullFailure,nilDictionary\"}", buf, 0x12u);
      }
    }
  }
}

void sub_100080508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100080564(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9AA0)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1000805A4()
{
  return &off_1000F9AA0;
}

void sub_1000805B4()
{
}

void *sub_1000805C8(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F9AC0;
  result[1] = v3;
  return result;
}

uint64_t sub_100080610(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F9AC0;
  a2[1] = v2;
  return result;
}

void sub_10008063C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = 68289026;
    LOWORD(v10) = 2082;
    *(void *)((char *)&v10 + 2) = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onFirstUnlocked\"}", (uint8_t *)&v9, 0x12u);
  }
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    *(unsigned char *)(v3 + 50) = 1;
    uint64_t v4 = *(void *)(v3 + 136);
    if (v4)
    {
      *(unsigned char *)(v4 + 2040) = 1;
      sub_1000562A0((unsigned char *)(v4 + 112));
    }
    uint64_t v5 = *(void *)(v3 + 144);
    if (v5) {
      sub_1000233F0(v5);
    }
    uint64_t v6 = sub_10004EDD0();
    uint64_t v7 = *((void *)v6 + 24);
    uint64_t v9 = (uint64_t)_NSConcreteStackBlock;
    *(void *)&long long v10 = 3221225472;
    *((void *)&v10 + 1) = sub_10005010C;
    uint64_t v11 = &unk_1000F5EA8;
    __int16 v12 = v6;
    dispatch_async(v7, &v9);
  }
  uint64_t v8 = *(unsigned char **)(v1 + 128);
  if (v8) {
    sub_100031754(v8);
  }
}

uint64_t sub_10008078C(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9B20)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1000807CC()
{
  return &off_1000F9B20;
}

void sub_1000807DC()
{
}

void *sub_1000807F0(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F9B40;
  result[1] = v3;
  return result;
}

uint64_t sub_100080838(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F9B40;
  a2[1] = v2;
  return result;
}

void sub_100080864(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 68289282;
    v6[1] = 0;
    __int16 v7 = 2082;
    uint64_t v8 = "";
    __int16 v9 = 1026;
    int v10 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,onLockedStatusChanged\", \"isLocked\":%{public}hhd}", (uint8_t *)v6, 0x18u);
  }
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5) {
    *(unsigned char *)(v5 + 51) = v2 ^ 1;
  }
  sub_10007BF6C(v3, 0);
}

uint64_t sub_100080950(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9BA0)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100080990()
{
  return &off_1000F9BA0;
}

void sub_1000809A0()
{
}

void *sub_1000809B4(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F9BC0;
  result[1] = v3;
  return result;
}

uint64_t sub_1000809FC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F9BC0;
  a2[1] = v2;
  return result;
}

void sub_100080A28(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 **)(*(void *)(a1 + 8) + 144);
  if (v1) {
    sub_100082E68(v1);
  }
}

uint64_t sub_100080A3C(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9C30)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100080A7C()
{
  return &off_1000F9C30;
}

void sub_100080A8C()
{
}

void *sub_100080AA0(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F9C50;
  result[1] = v3;
  return result;
}

uint64_t sub_100080AE8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F9C50;
  a2[1] = v2;
  return result;
}

uint64_t sub_100080B14(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000F9CC0)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100080B54()
{
  return &off_1000F9CC0;
}

void sub_100080B64()
{
}

void *sub_100080B78(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F9CE0;
  result[1] = v3;
  return result;
}

uint64_t sub_100080BC0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F9CE0;
  a2[1] = v2;
  return result;
}

double sub_100080BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 68289026;
    v6[1] = 0;
    __int16 v7 = 2082;
    uint64_t v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemon,IgneousStatusUpdate\"}", (uint8_t *)v6, 0x12u);
  }
  *(_DWORD *)(v3 + 456) = *(_DWORD *)(a2 + 104);
  std::string::operator=((std::string *)(v3 + 352), (const std::string *)a2);
  std::string::operator=((std::string *)(v3 + 376), (const std::string *)(a2 + 24));
  *(_OWORD *)(v3 + 424) = *(_OWORD *)(a2 + 72);
  double result = *(double *)(a2 + 96);
  *(double *)(v3 + 448) = result;
  return result;
}

uint64_t sub_100080CE4(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100080D24()
{
}

void sub_100080D30(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1000F9D70;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100080D50(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1000F9D70;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100080DA4(uint64_t a1)
{
  return sub_10002A8C8(a1 + 24);
}

void sub_100080DB0(void *a1)
{
  id v1 = a1;
  if (*((unsigned char *)sub_10003E368() + 242)) {
    operator new();
  }
  operator new();
}

void sub_100080EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100063904((uint64_t *)va);
  operator delete();
}

void sub_100080F68()
{
}

uint64_t sub_100080F7C()
{
  return 1;
}

uint64_t sub_100080F84()
{
  return 1;
}

void sub_100080F8C(void *a1)
{
  if (*((unsigned char *)sub_10003E368() + 217)) {
    operator new();
  }
  operator new();
}

void sub_100081040(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
}

void sub_10008107C(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  *(_WORD *)a1 = 0;
  *(unsigned char *)(a1 + 2) = 0;
  id v10 = v9;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 80) = *a3;
  uint64_t v11 = a3[1];
  *(void *)(a1 + 88) = v11;
  if (v11) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v11 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 96) = *a4;
  uint64_t v12 = a4[1];
  *(void *)(a1 + 104) = v12;
  if (v12) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v12 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 112) = *a5;
  uint64_t v13 = a5[1];
  *(void *)(a1 + 120) = v13;
  if (v13) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v13 + 8), 1uLL, memory_order_relaxed);
  }
  void v21[3] = 0;
  void v22[3] = 0;
  void v23[3] = 0;
  *(void *)uint64_t buf = off_1000F9E38;
  uint64_t v26 = buf;
  sub_10005D18C(buf, v21);
  __int16 v14 = sub_10005CE38(buf);
  *(void *)uint64_t buf = off_1000F9EB8;
  uint64_t v26 = buf;
  sub_10005D4C0(v14, v22);
  int v15 = sub_10005CDB4(buf);
  *(void *)uint64_t buf = off_1000F9F38;
  uint64_t v25 = a1;
  uint64_t v26 = buf;
  sub_10005D7F4(v15, v23);
  sub_10005CEBC(buf);
  __int16 v16 = *(void **)(a1 + 8);
  sub_10000DD48(&__p, "safetyalertsdble");
  sub_10005CBEC((uint64_t)v18, (uint64_t)v21);
  sub_10005CC84((uint64_t)&v19, (uint64_t)v22);
  sub_10005CD1C((uint64_t)&v20, (uint64_t)v23);
  SACoreRoutine::create(v16);
}

void sub_100081458(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  sub_10006B0EC((void *)(v32 - 128));
  operator delete();
}

void sub_1000815CC(uint64_t a1)
{
  int v14 = 0;
  uint64_t v2 = sub_10003E368();
  if ((sub_10003DFC4((uint64_t)v2, @"advertiseEvaluationIntervalSeconds", &v14) & 1) == 0)
  {
    buf[0] = 0;
    *(_OWORD *)&uint8_t buf[4] = xmmword_1000B2340;
    *(_OWORD *)&buf[20] = xmmword_1000B2350;
    *(void *)&buf[36] = &_mh_execute_header;
    memset(&buf[44], 0, 24);
    int v16 = 0;
    uint64_t v3 = sub_10006B474();
    long long v4 = *((_OWORD *)v3 + 26);
    *(_OWORD *)uint64_t buf = *((_OWORD *)v3 + 25);
    *(_OWORD *)&buf[16] = v4;
    *(_OWORD *)&unsigned char buf[32] = *((_OWORD *)v3 + 27);
    if (v3 + 400 == buf)
    {
      int v14 = *(_DWORD *)&buf[8];
    }
    else
    {
      sub_1000174C8(&buf[48], *((uint64_t **)v3 + 56), *((uint64_t **)v3 + 57), (uint64_t)(*((void *)v3 + 57) - *((void *)v3 + 56)) >> 3);
      int v14 = *(_DWORD *)&buf[8];
      if (*(void *)&buf[48])
      {
        *(void *)&buf[56] = *(void *)&buf[48];
        operator delete(*(void **)&buf[48]);
      }
    }
  }
  uint64_t v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(void *)uint64_t buf = 68289283;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&unsigned char buf[18] = 1025;
    *(_DWORD *)&buf[20] = v14;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,getAdvertiserEvaluationTimeout\", \"timeoutValue\":%{private}d}", buf, 0x18u);
  }
  int v14 = 0;
  uint64_t v6 = sub_10003E368();
  if ((sub_10003DFC4((uint64_t)v6, @"discoveryEvaluationIntervalSeconds", &v14) & 1) == 0)
  {
    buf[0] = 0;
    *(_OWORD *)&uint8_t buf[4] = xmmword_1000B2340;
    *(_OWORD *)&buf[20] = xmmword_1000B2350;
    *(void *)&buf[36] = &_mh_execute_header;
    memset(&buf[44], 0, 24);
    int v16 = 0;
    __int16 v7 = sub_10006B474();
    long long v8 = *((_OWORD *)v7 + 26);
    *(_OWORD *)uint64_t buf = *((_OWORD *)v7 + 25);
    *(_OWORD *)&buf[16] = v8;
    *(_OWORD *)&unsigned char buf[32] = *((_OWORD *)v7 + 27);
    if (v7 + 400 == buf)
    {
      int v14 = *(_DWORD *)&buf[12];
    }
    else
    {
      sub_1000174C8(&buf[48], *((uint64_t **)v7 + 56), *((uint64_t **)v7 + 57), (uint64_t)(*((void *)v7 + 57) - *((void *)v7 + 56)) >> 3);
      int v14 = *(_DWORD *)&buf[12];
      if (*(void *)&buf[48])
      {
        *(void *)&buf[56] = *(void *)&buf[48];
        operator delete(*(void **)&buf[48]);
      }
    }
  }
  id v9 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(void *)uint64_t buf = 68289283;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&unsigned char buf[18] = 1025;
    *(_DWORD *)&buf[20] = v14;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,getDiscoverableEvaluationTimeout\", \"timeoutValue\":%{private}d}", buf, 0x18u);
    id v9 = SALogObjectGeneral;
  }
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(void *)uint64_t buf = 68289026;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,initEvaluationTimers\"}", buf, 0x12u);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  if (v10)
  {
    (*(void (**)(uint64_t))(*(void *)v10 + 40))(v10);
    uint64_t v11 = *(void *)(a1 + 32);
    *(void *)(a1 + 32) = 0;
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
  }
  uint64_t v12 = *(void **)(a1 + 8);
  sub_10000DD48(&__p, "blecoreAdvertiserTimer");
  SATimer::create(v12);
}

void sub_100081CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
}

uint64_t sub_100081D40(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    *(void *)(a1 + 16) = 0;
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 120);
  if (v3) {
    sub_100028F6C(v3);
  }
  long long v4 = *(std::__shared_weak_count **)(a1 + 104);
  if (v4) {
    sub_100028F6C(v4);
  }
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 88);
  if (v5) {
    sub_100028F6C(v5);
  }
  uint64_t v6 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  sub_100083E90((uint64_t *)(a1 + 24), 0);
  uint64_t v8 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }

  return a1;
}

void sub_100081E5C(uint64_t a1)
{
  sub_100082168(*(void *)(a1 + 32));
  id v1 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v2[0] = 68289026;
    v2[1] = 0;
    __int16 v3 = 2082;
    long long v4 = "";
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,advertiserTimerExpiredCb\"}", (uint8_t *)v2, 0x12u);
  }
}

void sub_100081F18(uint64_t a1)
{
  sub_100082168(*(void *)(a1 + 32));
  id v1 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v2[0] = 68289026;
    v2[1] = 0;
    __int16 v3 = 2082;
    long long v4 = "";
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,discoverabilityTimerExpiredCb\"}", (uint8_t *)v2, 0x12u);
  }
}

void sub_100081FD4(unsigned __int8 *a1)
{
  int v2 = *a1;
  __int16 v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289283;
    int v8 = 0;
    __int16 v9 = 2082;
    uint64_t v10 = "";
    __int16 v11 = 1025;
    int v12 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,updateSubscriptionToReceiveAlertOverBLE\", \"receive\":%{private}d}", buf, 0x18u);
  }
  uint64_t v4 = *((void *)a1 + 3);
  if (v4)
  {
    if (v2)
    {
      v6[0] = off_1000FA158;
      v6[1] = a1;
      void v6[3] = v6;
      sub_100066770(v4, (uint64_t)v6);
      sub_10006B0EC(v6);
    }
    else
    {
      sub_100068428(v4);
    }
  }
  else
  {
    uint64_t v5 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v8 = 0;
      __int16 v9 = 2082;
      uint64_t v10 = "";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,updateSubscriptionToReceiveAlertOverBLE,Not a BLEAlertRelay device\"}", buf, 0x12u);
    }
  }
}

void sub_10008214C(_Unwind_Exception *exception_object)
{
}

void sub_100082168(uint64_t a1)
{
  double Current = CFAbsoluteTimeGetCurrent();
  double v3 = *(double *)(a1 + 56);
  buf[0] = 0;
  *(_OWORD *)&uint8_t buf[4] = xmmword_1000B2340;
  *(_OWORD *)&buf[20] = xmmword_1000B2350;
  *(void *)&buf[36] = &_mh_execute_header;
  memset(&buf[44], 0, 24);
  int v23 = 0;
  uint64_t v4 = sub_10006B474();
  long long v5 = *((_OWORD *)v4 + 26);
  *(_OWORD *)uint64_t buf = *((_OWORD *)v4 + 25);
  *(_OWORD *)&buf[16] = v5;
  *(_OWORD *)&unsigned char buf[32] = *((_OWORD *)v4 + 27);
  if (v4 + 400 != buf) {
    sub_1000174C8(&buf[48], *((uint64_t **)v4 + 56), *((uint64_t **)v4 + 57), (uint64_t)(*((void *)v4 + 57) - *((void *)v4 + 56)) >> 3);
  }
  uint64_t v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v17[0] = 68289283;
    v17[1] = 0;
    __int16 v18 = 2082;
    uint64_t v19 = "";
    __int16 v20 = 1025;
    int v21 = *(_DWORD *)&buf[24];
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,getMinimumTimeBetweenPeopleDensityQuery\", \"minTimeBetweenPeopleDensityQuery\":%{private}d}", (uint8_t *)v17, 0x18u);
  }
  double v7 = Current - v3;
  unsigned int v8 = *(_DWORD *)&buf[24];
  __int16 v9 = *(SASettings **)&buf[48];
  if (*(void *)&buf[48])
  {
    *(void *)&buf[56] = *(void *)&buf[48];
    operator delete(*(void **)&buf[48]);
  }
  if (v7 < (double)v8)
  {
    uint64_t v10 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    __int16 v11 = "{\"msg%{public}.0s\":\"#blecore,people density was queried recently\"}";
    int v12 = v10;
LABEL_17:
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v11, buf, 0x12u);
    return;
  }
  int v13 = sub_1000833B0(v9);
  int v14 = SALogObjectGeneral;
  BOOL v15 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (!v13)
  {
    if (!v15) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    __int16 v11 = "{\"msg%{public}.0s\":\"#blecore,requestCurrentPeopleDensity failed\"}";
    int v12 = v14;
    goto LABEL_17;
  }
  if (v15)
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,requestCurrentPeopleDensity\"}", buf, 0x12u);
  }
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 32))(v16);
  }
}

void sub_10008241C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
}

uint64_t sub_100082440(uint64_t a1)
{
  int v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    uint64_t v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onInitCompleted\"}", (uint8_t *)v4, 0x12u);
  }
  *(unsigned char *)(a1 + 2) = 1;
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 48))(result);
  }
  return result;
}

void sub_10008252C(unsigned __int8 *a1)
{
  int v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v3[0] = 68289026;
    v3[1] = 0;
    __int16 v4 = 2082;
    __int16 v5 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onLocationChanged\"}", (uint8_t *)v3, 0x12u);
  }
  sub_100082168((uint64_t)a1);
  sub_1000825FC(a1);
  sub_10008283C((uint64_t)a1);
}

void sub_1000825FC(unsigned __int8 *a1)
{
  int v2 = sub_1000833B0((SASettings *)a1);
  BOOL v3 = sub_1000835A0();
  int v4 = *((_DWORD *)sub_100003318() + 12);
  double v5 = *((double *)sub_100003318() + 7);
  uint64_t v6 = sub_100003318();
  if (*((unsigned char *)v6 + 111)) {
    BOOL v7 = *((unsigned char *)v6 + 110) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v8 = !v7;
  __int16 v9 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = *((_DWORD *)sub_100003318() + 12);
    int v11 = a1[48];
    int v16 = 68290819;
    int v17 = 0;
    __int16 v18 = 2082;
    uint64_t v19 = "";
    __int16 v20 = 1025;
    int v21 = v10;
    __int16 v22 = 1025;
    BOOL v23 = v3;
    __int16 v24 = 1025;
    int v25 = v2;
    __int16 v26 = 1025;
    BOOL v27 = v4 == 0;
    __int16 v28 = 1025;
    BOOL v29 = v5 > 10.0;
    __int16 v30 = 1025;
    int v31 = v11;
    __int16 v32 = 1025;
    int v33 = v8;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,evaluateBLEQDiscoverability\", \"motionState\":%{private}d, \"isBatteryStateGoodForBLE\":%{private}hhd, \"areAllGatesEnabled\":%{private}hhd, \"isDeviceStationary\":%{private}hhd, \"isWLQAcceptable\":%{private}hhd, \"isPeopleDensityLargeEnough\":%{private}hhd, \"isCellConnected\":%{private}hhd}", (uint8_t *)&v16, 0x3Cu);
  }

  int v12 = SALogObjectGeneral;
  BOOL v13 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (!v13) {
      goto LABEL_15;
    }
    int v16 = 68289026;
    int v17 = 0;
    __int16 v18 = 2082;
    uint64_t v19 = "";
    int v14 = "{\"msg%{public}.0s\":\"#blecore,evaluateBLEQDiscoverability,true\"}";
  }
  else
  {
    if (!v13) {
      goto LABEL_15;
    }
    int v16 = 68289026;
    int v17 = 0;
    __int16 v18 = 2082;
    uint64_t v19 = "";
    int v14 = "{\"msg%{public}.0s\":\"#blecore,evaluateBLEQDiscoverability,BLE relay not possible\"}";
  }
  _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v14, (uint8_t *)&v16, 0x12u);
LABEL_15:
  int v15 = *a1;
  *a1 = v2;
  if (v15 != v2) {
    sub_100081FD4(a1);
  }
}

void sub_100082824(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10008283C(uint64_t a1)
{
  int v2 = (id *)SAPlatformInfo::instance((SAPlatformInfo *)a1);
  BOOL v3 = (SASettings *)SAPlatformInfo::isAOPSupportedDevice(v2);
  if (v3)
  {
    int v4 = sub_1000833B0(v3);
    uint64_t v5 = *(void *)(a1 + 16);
    if (v5)
    {
      if (*(unsigned char *)(a1 + 2)) {
        int v6 = v4;
      }
      else {
        int v6 = 0;
      }
      if (v6 == 1)
      {
        (*(void (**)(uint64_t))(*(void *)v5 + 48))(v5);
      }
      else
      {
        if (*(unsigned char *)(a1 + 2)) {
          char v8 = v4;
        }
        else {
          char v8 = 1;
        }
        if ((v8 & 1) == 0) {
          (*(void (**)(uint64_t))(*(void *)v5 + 40))(v5);
        }
      }
    }
    BOOL v9 = sub_1000835A0();
    int v10 = *((_DWORD *)sub_100003318() + 12);
    double v11 = *((double *)sub_100003318() + 7);
    int v12 = sub_100003318();
    if (*((unsigned char *)v12 + 111)) {
      BOOL v13 = *((unsigned char *)v12 + 110) == 0;
    }
    else {
      BOOL v13 = 1;
    }
    int v14 = !v13;
    buf[0] = 0;
    *(_OWORD *)&uint8_t buf[4] = xmmword_1000B2340;
    *(_OWORD *)&buf[20] = xmmword_1000B2350;
    *(void *)&buf[36] = &_mh_execute_header;
    memset(&buf[44], 0, 24);
    int v45 = 0;
    int v15 = sub_10006B474();
    long long v16 = *((_OWORD *)v15 + 26);
    *(_OWORD *)uint64_t buf = *((_OWORD *)v15 + 25);
    *(_OWORD *)&buf[16] = v16;
    *(_OWORD *)&unsigned char buf[32] = *((_OWORD *)v15 + 27);
    if (v15 + 400 != buf) {
      sub_1000174C8(&buf[48], *((uint64_t **)v15 + 56), *((uint64_t **)v15 + 57), (uint64_t)(*((void *)v15 + 57) - *((void *)v15 + 56)) >> 3);
    }
    int v17 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v18 = *(_DWORD *)(a1 + 64);
      *(_DWORD *)char v36 = 68289539;
      int v37 = 0;
      __int16 v38 = 2082;
      uint64_t v39 = "";
      __int16 v40 = 2049;
      uint64_t v41 = (uint64_t)(*(void *)&buf[56] - *(void *)&buf[48]) >> 3;
      __int16 v42 = 1025;
      LODWORD(v43) = v18;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,readBleConfigFromFile no match found2\", \"FanoutSize\":%{private}llu, \"meanNumNearbyDevices\":%{private}d}", v36, 0x22u);
    }
    uint64_t v19 = *(float **)&buf[56];
    __int16 v20 = *(float **)&buf[48];
    if (*(void *)&buf[48] == *(void *)&buf[56])
    {
      float v22 = 0.0;
      if (!*(void *)&buf[48])
      {
LABEL_31:
        *(double *)(a1 + 72) = v22;
        BOOL v23 = (int)v22 <= 0x64 && arc4random_uniform(0x64u) <= (int)v22;
        __int16 v24 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v25 = *(void *)(a1 + 72);
          int v26 = *(_DWORD *)(a1 + 64);
          *(_DWORD *)uint64_t buf = 68289795;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&unsigned char buf[18] = 1025;
          *(_DWORD *)&buf[20] = v23;
          *(_WORD *)&unsigned char buf[24] = 2049;
          *(void *)&buf[26] = v25;
          *(_WORD *)&buf[34] = 1025;
          *(_DWORD *)&buf[36] = v26;
          _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,isBLEAllowedAfterRollingTheDice\", \"isParticipating\":%{private}d, \"fFanoutValueBasedOnPeopleDensity\":\"%{private}3f\", \"meanNumNearbyDevices\":%{private}d}", buf, 0x28u);
          __int16 v24 = SALogObjectGeneral;
        }
        BOOL v27 = v24;
        if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
        {
          int v28 = *((_DWORD *)sub_100003318() + 12);
          int v29 = *(unsigned __int8 *)(a1 + 48);
          *(_DWORD *)uint64_t buf = 68291075;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&unsigned char buf[18] = 1025;
          *(_DWORD *)&buf[20] = v28;
          *(_WORD *)&unsigned char buf[24] = 1025;
          *(_DWORD *)&buf[26] = v9;
          *(_WORD *)&unsigned char buf[30] = 1025;
          *(_DWORD *)&unsigned char buf[32] = v4;
          *(_WORD *)&buf[36] = 1025;
          *(_DWORD *)&buf[38] = v10 == 0;
          *(_WORD *)&buf[42] = 1025;
          *(_DWORD *)&buf[44] = v11 > 10.0;
          *(_WORD *)&unsigned char buf[48] = 1025;
          *(_DWORD *)&unsigned char buf[50] = v29;
          *(_WORD *)&buf[54] = 1025;
          *(_DWORD *)&buf[56] = v14;
          *(_WORD *)&buf[60] = 1025;
          *(_DWORD *)&buf[62] = v23;
          _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,evaluateBLEQAdvertise\", \"motionState\":%{private}d, \"isBatteryStateGoodForBLE\":%{private}hhd, \"areAllGatesEnabled\":%{private}hhd, \"isDeviceStationary\":%{private}hhd, \"isWLQAcceptable\":%{private}hhd, \"isPeopleDensityLargeEnough\":%{private}hhd, \"isCellConnected\":%{private}hhd, \"isAllowedAfterDiceRoll\":%{private}hhd}", buf, 0x42u);
        }

        __int16 v30 = SALogObjectGeneral;
        BOOL v31 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
        if (v4 & v23)
        {
          if (v31)
          {
            *(_DWORD *)uint64_t buf = 68289026;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,isBLEAlertRelayDevice,BLE relay possible\"}", buf, 0x12u);
          }
          char v32 = 1;
        }
        else
        {
          if (v31)
          {
            *(_DWORD *)uint64_t buf = 68289026;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,isBLEAlertRelayDevice,BLE relay not possible\"}", buf, 0x12u);
          }
          char v32 = 0;
        }
        *(unsigned char *)(a1 + 1) = v32;
        *((_WORD *)sub_100003318() + 60) = *(unsigned __int8 *)(a1 + 1) | 0x100;
        return;
      }
    }
    else
    {
      unsigned int v21 = *(_DWORD *)(a1 + 64);
      if (*(float *)(*(void *)&buf[56] - 8) >= (float)v21)
      {
        int v33 = SALogObjectGeneral;
        float v22 = 0.0;
        do
        {
          if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
          {
            *(double *)&uint64_t v34 = *v20;
            double v35 = v20[1];
            *(_DWORD *)char v36 = 68289539;
            int v37 = 0;
            __int16 v38 = 2082;
            uint64_t v39 = "";
            __int16 v40 = 2049;
            uint64_t v41 = v34;
            __int16 v42 = 2049;
            double v43 = v35;
            _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,readBleConfigFromFile\", \"first\":\"%{private}3f\", \"second\":\"%{private}3f\"}", v36, 0x26u);
            int v33 = SALogObjectGeneral;
            unsigned int v21 = *(_DWORD *)(a1 + 64);
          }
          if (*v20 > (float)v21) {
            break;
          }
          float v22 = v20[1];
          v20 += 2;
        }
        while (v20 != v19);
        __int16 v20 = *(float **)&buf[48];
        if (!*(void *)&buf[48]) {
          goto LABEL_31;
        }
      }
      else
      {
        float v22 = *(float *)(*(void *)&buf[56] - 4);
        if (!*(void *)&buf[48]) {
          goto LABEL_31;
        }
      }
    }
    *(void *)&buf[56] = v20;
    operator delete(v20);
    goto LABEL_31;
  }
  BOOL v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,BLE not AOP HW\"}", buf, 0x12u);
  }
}

void sub_100082E38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26)
{
  _Unwind_Resume(a1);
}

void sub_100082E68(unsigned __int8 *a1)
{
  int v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v3[0] = 68289026;
    v3[1] = 0;
    __int16 v4 = 2082;
    uint64_t v5 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onMotionStateChange\"}", (uint8_t *)v3, 0x12u);
  }
  sub_1000825FC(a1);
  sub_10008283C((uint64_t)a1);
}

void sub_100082F30()
{
  v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v1[0] = 68289026;
    v1[1] = 0;
    __int16 v2 = 2082;
    BOOL v3 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onWifiStatusChanged\"}", (uint8_t *)v1, 0x12u);
  }
}

void sub_100082FE4()
{
  v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v1[0] = 68289026;
    v1[1] = 0;
    __int16 v2 = 2082;
    BOOL v3 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onCellNetworkConnected\"}", (uint8_t *)v1, 0x12u);
  }
}

void sub_100083098(unsigned __int8 *a1)
{
  __int16 v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v3[0] = 68289026;
    v3[1] = 0;
    __int16 v4 = 2082;
    uint64_t v5 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onBatteryStatusChanged\"}", (uint8_t *)v3, 0x12u);
  }
  sub_1000825FC(a1);
  sub_10008283C((uint64_t)a1);
}

void sub_100083160(uint64_t a1)
{
  __int16 v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v3[0] = 68289026;
    v3[1] = 0;
    __int16 v4 = 2082;
    uint64_t v5 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onAssetReceived\"}", (uint8_t *)v3, 0x12u);
  }
  sub_1000815CC(a1);
}

void sub_100083220(unsigned __int8 *a1)
{
  __int16 v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v3[0] = 68289026;
    v3[1] = 0;
    __int16 v4 = 2082;
    uint64_t v5 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onIgneousEnablementChanged\"}", (uint8_t *)v3, 0x12u);
  }
  sub_1000825FC(a1);
  sub_10008283C((uint64_t)a1);
}

void sub_1000832E8(unsigned __int8 *a1)
{
  __int16 v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v3[0] = 68289026;
    v3[1] = 0;
    __int16 v4 = 2082;
    uint64_t v5 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onIgneousCoverageRegionChanged\"}", (uint8_t *)v3, 0x12u);
  }
  sub_1000825FC(a1);
  sub_10008283C((uint64_t)a1);
}

uint64_t sub_1000833B0(SASettings *a1)
{
  uint64_t v1 = SASettings::instance(a1);
  int v2 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 96))(v1);
  BOOL v3 = sub_100003318();
  if (*((unsigned char *)v3 + 107)) {
    BOOL v4 = *((unsigned char *)v3 + 106) == 0;
  }
  else {
    BOOL v4 = 1;
  }
  v5 = !v4 && (BOOL v3 = sub_100003318(), *((unsigned char *)v3 + 109)) && *((unsigned char *)v3 + 108) != 0;
  unsigned int v6 = [*(id *)SAPlatformInfo::instance((SAPlatformInfo *)v3) isEqualToString:@"iPhone"];
  BOOL v7 = sub_100003318();
  if (*((unsigned char *)v7 + 91)) {
    BOOL v8 = *((unsigned char *)v7 + 90) == 0;
  }
  else {
    BOOL v8 = 1;
  }
  int v9 = !v8;
  int v10 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    double v11 = sub_100003318();
    int v12 = *((unsigned __int8 *)v11 + 107);
    int v13 = *((unsigned __int8 *)v11 + 106);
    int v14 = sub_100003318();
    if (v12) {
      BOOL v15 = v13 == 0;
    }
    else {
      BOOL v15 = 1;
    }
    int v16 = !v15;
    if (*((unsigned char *)v14 + 109)) {
      BOOL v17 = *((unsigned char *)v14 + 108) == 0;
    }
    else {
      BOOL v17 = 1;
    }
    int v18 = !v17;
    v20[0] = 68290563;
    v20[1] = 0;
    __int16 v21 = 2082;
    float v22 = "";
    __int16 v23 = 1025;
    int v24 = v16;
    __int16 v25 = 1025;
    int v26 = v18;
    __int16 v27 = 1025;
    BOOL v28 = v5;
    __int16 v29 = 1025;
    int v30 = v2;
    __int16 v31 = 1025;
    unsigned int v32 = v6;
    __int16 v33 = 1025;
    int v34 = v9;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,areAllGatesOpen\", \"isIgneousCapable\":%{private}hhd, \"isIgneousEnabled\":%{private}hhd, \"isIgneousAllowed\":%{private}hhd, \"isBluetoothEnabled\":%{private}hhd, \"isHWAllowed\":%{private}hhd, \"isLocationAuth\":%{private}hhd}", (uint8_t *)v20, 0x36u);
  }

  return v5 & v6 & v2 & v9;
}

void sub_100083588(_Unwind_Exception *exception_object)
{
}

BOOL sub_1000835A0()
{
  double v0 = *((double *)sub_100003318() + 16);
  v5[0] = 0;
  *(_OWORD *)&void v5[4] = xmmword_1000B2340;
  *(_OWORD *)&v5[20] = xmmword_1000B2350;
  *(void *)&v5[36] = &_mh_execute_header;
  memset(&v5[44], 0, 24);
  int v6 = 0;
  uint64_t v1 = sub_10006B474();
  long long v2 = *((_OWORD *)v1 + 26);
  *(_OWORD *)BOOL v5 = *((_OWORD *)v1 + 25);
  *(_OWORD *)&v5[16] = v2;
  *(_OWORD *)&v5[32] = *((_OWORD *)v1 + 27);
  if (v1 + 400 == v5)
  {
    unsigned int v3 = *(_DWORD *)&v5[20];
  }
  else
  {
    sub_1000174C8(&v5[48], *((uint64_t **)v1 + 56), *((uint64_t **)v1 + 57), (uint64_t)(*((void *)v1 + 57) - *((void *)v1 + 56)) >> 3);
    unsigned int v3 = *(_DWORD *)&v5[20];
    if (*(void *)&v5[48])
    {
      *(void *)&v5[56] = *(void *)&v5[48];
      operator delete(*(void **)&v5[48]);
    }
  }
  return v0 > (double)v3;
}

void sub_100083670(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10008368C(uint64_t a1, uint64_t a2)
{
  BOOL v4 = SALogObjectGeneral;
  BOOL v5 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    int v14 = 68289026;
    int v15 = 0;
    __int16 v16 = 2082;
    BOOL v17 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,processBleIgneousAlert\"}", (uint8_t *)&v14, 0x12u);
  }
  if ((sub_1000838E4((SAPlatformInfo *)v5) & 1) == 0)
  {
    BOOL v8 = SALogObjectGeneral;
    BOOL v9 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (!v9) {
      return result;
    }
    int v14 = 68289026;
    int v15 = 0;
    __int16 v16 = 2082;
    BOOL v17 = "";
    int v10 = "{\"msg%{public}.0s\":\"#blecore,processBleIgneousAlert,BLEAlertRelay not supported\"}";
    goto LABEL_16;
  }
  if (!*(unsigned char *)(a1 + 1))
  {
    BOOL v8 = SALogObjectGeneral;
    BOOL v11 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (!v11) {
      return result;
    }
    int v14 = 68289026;
    int v15 = 0;
    __int16 v16 = 2082;
    BOOL v17 = "";
    int v10 = "{\"msg%{public}.0s\":\"#blecore,processBleIgneousAlert,Not a BLEAlertRelay device\"}";
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)(a1 + 24);
  if (!v6)
  {
    BOOL v8 = SALogObjectGeneral;
    BOOL v12 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (!v12) {
      return result;
    }
    int v14 = 68289026;
    int v15 = 0;
    __int16 v16 = 2082;
    BOOL v17 = "";
    int v10 = "{\"msg%{public}.0s\":\"#blecore,processBleIgneousAlert,transport error\"}";
    goto LABEL_16;
  }
  if (*(unsigned char *)(a2 + 200))
  {
    sub_1000685E8(v6, a2);
    return 1;
  }
  BOOL v8 = SALogObjectGeneral;
  BOOL v13 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  uint64_t result = 0;
  if (v13)
  {
    int v14 = 68289026;
    int v15 = 0;
    __int16 v16 = 2082;
    BOOL v17 = "";
    int v10 = "{\"msg%{public}.0s\":\"#blecore,processBleIgneousAlert,forward blocked\"}";
LABEL_16:
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&v14, 0x12u);
    return 0;
  }
  return result;
}

uint64_t sub_1000838E4(SAPlatformInfo *a1)
{
  uint64_t v1 = (SAPlatformInfo *)SAPlatformInfo::instance(a1);
  if (!*((unsigned char *)v1 + 9))
  {
    BOOL v5 = SALogObjectGeneral;
    BOOL v6 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (!v6) {
      return result;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    BOOL v8 = "{\"msg%{public}.0s\":\"#blecore,BLE not supported on non-internal builds\"}";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, v8, buf, 0x12u);
    return 0;
  }
  if (([*(id *)SAPlatformInfo::instance(v1) isEqualToString:@"iPhone"] & 1) == 0)
  {
    BOOL v5 = SALogObjectGeneral;
    BOOL v9 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (!v9) {
      return result;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    BOOL v8 = "{\"msg%{public}.0s\":\"#blecore,BLE not supported on this HW\"}";
    goto LABEL_11;
  }
  unsigned __int8 v13 = 0;
  long long v2 = sub_10003E368();
  if ((sub_10003DD80((uint64_t)v2, @"isBLERelaySupported", &v13) & 1) == 0)
  {
    buf[0] = 0;
    *(_OWORD *)&uint8_t buf[4] = xmmword_1000B2340;
    *(_OWORD *)&buf[20] = xmmword_1000B2350;
    *(void *)&buf[36] = &_mh_execute_header;
    memset(&buf[44], 0, 24);
    int v15 = 0;
    unsigned int v3 = sub_10006B474();
    long long v4 = *((_OWORD *)v3 + 26);
    *(_OWORD *)uint64_t buf = *((_OWORD *)v3 + 25);
    *(_OWORD *)&buf[16] = v4;
    *(_OWORD *)&unsigned char buf[32] = *((_OWORD *)v3 + 27);
    if (v3 + 400 == buf)
    {
      unsigned __int8 v13 = buf[0];
    }
    else
    {
      sub_1000174C8(&buf[48], *((uint64_t **)v3 + 56), *((uint64_t **)v3 + 57), (uint64_t)(*((void *)v3 + 57) - *((void *)v3 + 56)) >> 3);
      unsigned __int8 v13 = buf[0];
      if (*(void *)&buf[48])
      {
        *(void *)&buf[56] = *(void *)&buf[48];
        operator delete(*(void **)&buf[48]);
      }
    }
  }
  int v10 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = v13;
    int v12 = _os_feature_enabled_impl();
    *(_DWORD *)uint64_t buf = 68289538;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&unsigned char buf[18] = 1026;
    *(_DWORD *)&buf[20] = v11;
    *(_WORD *)&unsigned char buf[24] = 1026;
    *(_DWORD *)&buf[26] = v12;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,isBLERelaySupported\", \"isBLERelaySupported\":%{public}d, \"isSALivabilityEnabled\":%{public}d}", buf, 0x1Eu);
  }

  if (v13) {
    return _os_feature_enabled_impl();
  }
  return 0;
}

void sub_100083B94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  _Unwind_Resume(a1);
}

void sub_100083BC4(uint64_t a1, uint64_t a2)
{
  long long v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v20 = 0;
    *(_WORD *)__int16 v21 = 2082;
    *(void *)&v21[2] = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onBLEAlertReceived\"}", buf, 0x12u);
  }
  if (*(unsigned char *)(a2 + 200))
  {
    uint64_t v5 = *(void *)(a1 + 96);
    if (!v5 || sub_10002E2F8(v5, a2))
    {
      BOOL v6 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        int v20 = 0;
        *(_WORD *)__int16 v21 = 2082;
        *(void *)&v21[2] = "";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"blecore,onBLEAlertReceived,stale alert\"}", buf, 0x12u);
      }
LABEL_21:
      uint64_t v12 = *(void *)(a1 + 112);
      if (v12)
      {
        *(_WORD *)uint64_t buf = *(_WORD *)a1;
        int v20 = *(_DWORD *)(a1 + 64);
        float v13 = *(double *)(a1 + 72);
        *(float *)__int16 v21 = v13;
        uint64_t v14 = *(void *)(v12 + 152);
        if (v14) {
          sub_100043C3C(v14, a2, (uint64_t)buf);
        }
      }
      return;
    }
    BOOL v8 = *(std::__shared_weak_count **)(a1 + 88);
    BOOL v17 = *(void **)(a1 + 80);
    int v18 = v8;
    if (v8) {
      atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    BOOL v9 = *(std::__shared_weak_count **)(a1 + 104);
    int v15 = *(SAPlatformInfo **)(a1 + 96);
    __int16 v16 = v9;
    if (v9) {
      atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    int v10 = sub_100059AE0(a2, &v17, &v15);
    if (v16) {
      sub_100028F6C(v16);
    }
    if (v18) {
      sub_100028F6C(v18);
    }
    int v11 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289282;
      int v20 = 0;
      *(_WORD *)__int16 v21 = 2082;
      *(void *)&v21[2] = "";
      __int16 v22 = 1026;
      int v23 = v10;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onBLEAlertReceived\", \"res\":%{public}d}", buf, 0x18u);
    }
    if (v10) {
      goto LABEL_21;
    }
  }
  else
  {
    BOOL v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v20 = 0;
      *(_WORD *)__int16 v21 = 2082;
      *(void *)&v21[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onBLEAlertReceived,Signature invalid\"}", buf, 0x12u);
    }
  }
}

void sub_100083E64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a10) {
    sub_100028F6C(a10);
  }
  if (a12) {
    sub_100028F6C(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100083E90(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1000666DC(result);
    operator delete();
  }
  return result;
}

void sub_100083EE4()
{
}

void *sub_100083EF8()
{
  uint64_t result = operator new(0x10uLL);
  void *result = off_1000F9E38;
  return result;
}

void sub_100083F30(uint64_t a1, void *a2)
{
  *a2 = off_1000F9E38;
}

uint64_t sub_100083F5C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100083F9C()
{
}

void sub_100083FAC()
{
}

void *sub_100083FC0()
{
  uint64_t result = operator new(0x10uLL);
  void *result = off_1000F9EB8;
  return result;
}

void sub_100083FF8(uint64_t a1, void *a2)
{
  *a2 = off_1000F9EB8;
}

uint64_t sub_100084024(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100084064()
{
}

void sub_100084074()
{
}

void *sub_100084088(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000F9F38;
  result[1] = v3;
  return result;
}

uint64_t sub_1000840D0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000F9F38;
  a2[1] = v2;
  return result;
}

void sub_1000840FC(uint64_t a1, double *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  long long v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onCurrentPeopleDensityReceivedCb\"}", buf, 0x12u);
    long long v4 = SALogObjectGeneral;
  }
  *(unsigned char *)(v3 + 48) = 0;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    double v6 = *a2;
    uint64_t v5 = *((void *)a2 + 1);
    uint64_t v7 = *((void *)a2 + 4);
    *(_DWORD *)uint64_t buf = 68289795;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&unsigned char buf[18] = 2049;
    *(void *)&buf[20] = v5;
    *(_WORD *)&unsigned char buf[28] = 2049;
    *(double *)&unsigned char buf[30] = v6;
    *(_WORD *)&buf[38] = 2049;
    *(void *)&unsigned char buf[40] = v7;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onCurrentPeopleDensityReceivedCb,lastEvent,\", \"startTimestamp\":\"%{private}0.2f\", \"densityScore\":\"%{private}0.2f\", \"scanDuration\":\"%{private}0.2f\"}", buf, 0x30u);
    long long v4 = SALogObjectGeneral;
  }
  *(_DWORD *)(v3 + 64) = *a2;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onCurrentPeopleDensityReceivedCb\"}", buf, 0x12u);
  }
  unsigned int v15 = 0;
  BOOL v8 = sub_10003E368();
  if ((sub_10003DFC4((uint64_t)v8, @"minDeviceDensityCount", &v15) & 1) == 0)
  {
    buf[0] = 0;
    *(_OWORD *)&uint8_t buf[4] = xmmword_1000B2340;
    *(_OWORD *)&buf[20] = xmmword_1000B2350;
    *(void *)&buf[36] = &_mh_execute_header;
    memset(&buf[44], 0, 24);
    int v17 = 0;
    BOOL v9 = sub_10006B474();
    long long v10 = *((_OWORD *)v9 + 26);
    *(_OWORD *)uint64_t buf = *((_OWORD *)v9 + 25);
    *(_OWORD *)&buf[16] = v10;
    *(_OWORD *)&unsigned char buf[32] = *((_OWORD *)v9 + 27);
    if (v9 + 400 == buf)
    {
      unsigned int v15 = *(_DWORD *)&buf[16];
    }
    else
    {
      sub_1000174C8(&buf[48], *((uint64_t **)v9 + 56), *((uint64_t **)v9 + 57), (uint64_t)(*((void *)v9 + 57) - *((void *)v9 + 56)) >> 3);
      unsigned int v15 = *(_DWORD *)&buf[16];
      if (*(void *)&buf[48])
      {
        *(void *)&buf[56] = *(void *)&buf[48];
        operator delete(*(void **)&buf[48]);
      }
    }
  }
  int v11 = SALogObjectGeneral;
  BOOL v12 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  unsigned int v13 = v15;
  if (v12)
  {
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&unsigned char buf[18] = 1025;
    *(_DWORD *)&buf[20] = v15;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,getMinimumDeviceDensityCount\", \"count\":%{private}d}", buf, 0x18u);
    unsigned int v13 = v15;
  }
  if (*a2 >= (double)v13)
  {
    uint64_t v14 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onCurrentPeopleDensityReceivedCb\"}", buf, 0x12u);
    }
    *(unsigned char *)(v3 + 48) = 1;
  }
  sub_10008283C(v3);
  sub_1000825FC((unsigned __int8 *)v3);
}

void sub_100084454(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100084478(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000844B8()
{
}

void sub_1000844C8()
{
}

void *sub_1000844DC()
{
  uint64_t result = operator new(0x10uLL);
  void *result = off_1000F9FB8;
  return result;
}

void sub_100084514(uint64_t a1, void *a2)
{
  *a2 = off_1000F9FB8;
}

void sub_10008453C()
{
  double v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v1[0] = 68289026;
    v1[1] = 0;
    __int16 v2 = 2082;
    uint64_t v3 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onSettingsChanged\"}", (uint8_t *)v1, 0x12u);
  }
}

uint64_t sub_1000845F0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100084630()
{
}

void sub_100084640()
{
}

void *sub_100084654(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000FA038;
  result[1] = v3;
  return result;
}

uint64_t sub_10008469C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000FA038;
  a2[1] = v2;
  return result;
}

void sub_1000846C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  long long v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289026;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onBLEAlertReceivedCb\"}", (uint8_t *)v5, 0x12u);
  }
  sub_100083BC4(v3, a2);
}

uint64_t sub_100084798(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1000847D8()
{
}

uint64_t sub_1000847E4(uint64_t a1)
{
  return a1;
}

void sub_100084810(uint64_t a1)
{
  operator delete();
}

uint64_t sub_10008485C()
{
  return 0;
}

id sub_100084864(uint64_t a1, void *a2)
{
  *a2 = off_1000FA0C8;
  id result = objc_retainBlock(*(id *)(a1 + 8));
  a2[1] = result;
  return result;
}

uint64_t sub_1000848AC(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  return _objc_release_x1();
}

uint64_t sub_1000848BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 8) + 16))();
}

uint64_t sub_1000848D0(uint64_t a1, uint64_t a2)
{
  if (sub_10000FA0C(a2, (uint64_t)&off_1000FA138)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100084910()
{
  return &off_1000FA138;
}

void *sub_10008491C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1000849A4()
{
}

void *sub_1000849B8(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = off_1000FA158;
  result[1] = v3;
  return result;
}

uint64_t sub_100084A00(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1000FA158;
  a2[1] = v2;
  return result;
}

void sub_100084A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  long long v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289026;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#blecore,onBLEAlertReceivedCb\"}", (uint8_t *)v5, 0x12u);
  }
  sub_100083BC4(v3, a2);
}

uint64_t sub_100084AFC(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100084B3C()
{
}

void sub_100084B48(void *a1)
{
  id v1 = a1;
  if (*((unsigned char *)sub_10003E368() + 216)) {
    operator new();
  }
  operator new();
}

void sub_100084C40(uint64_t a1, ...)
{
  va_start(va, a1);
  sub_100035AF0((uint64_t *)va);
  operator delete();
}

uint64_t sub_100084CB4(uint64_t a1, char *a2, const std::string *a3)
{
  *(void *)a1 = &off_1000FA1D8;
  *(_OWORD *)(a1 + 40) = 0u;
  long long v4 = (std::string *)(a1 + 40);
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 56) = 0;
  if (a2)
  {
    sub_10004D3E4((std::string *)(a1 + 16), a2);
    std::string::operator=(v4, a3);
  }
  return a1;
}

void sub_100084D34(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 63) < 0) {
    operator delete(*v3);
  }
  if (*(char *)(v1 + 39) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100084D60(const std::__fs::filesystem::path *a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289283;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    __int16 v8 = 2081;
    BOOL v9 = a1;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#fi,removing\", \"filePath\":%{private, location:escape_only}s}", (uint8_t *)v5, 0x1Cu);
  }
  return remove(a1, v3);
}

uint64_t sub_100084E34(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100084CB4(a1, a2, (const std::string *)a4);
  *(void *)uint64_t v8 = &off_1000FA1F0;
  *(_OWORD *)(v8 + 64) = 0u;
  BOOL v9 = (FILE **)(v8 + 64);
  *(_OWORD *)(v8 + 80) = 0u;
  *(_OWORD *)(v8 + 96) = 0u;
  if (!a2)
  {
    BOOL v12 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return a1;
    }
    int __ptr = 68289026;
    int v16 = 0;
    __int16 v17 = 2082;
    int v18 = "";
    unsigned int v13 = "{\"msg%{public}.0s\":\"#fi,#warning,read,invalidFileArgs\"}";
LABEL_13:
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v13, (uint8_t *)&__ptr, 0x12u);
    return a1;
  }
  uint64_t v10 = *(unsigned __int8 *)(a4 + 23);
  if ((v10 & 0x80u) != 0) {
    uint64_t v10 = *(void *)(a4 + 8);
  }
  if (!v10)
  {
    BOOL v12 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return a1;
    }
    int __ptr = 68289026;
    int v16 = 0;
    __int16 v17 = 2082;
    int v18 = "";
    unsigned int v13 = "{\"msg%{public}.0s\":\"#fi,#warning,read,invalidFileFormatVersion\"}";
    goto LABEL_13;
  }
  *(void *)(a1 + 104) = a3;
  int v11 = fopen(a2, "r");
  *BOOL v9 = v11;
  if (v11) {
    operator new[]();
  }
  BOOL v12 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int __ptr = 68289026;
    int v16 = 0;
    __int16 v17 = 2082;
    int v18 = "";
    unsigned int v13 = "{\"msg%{public}.0s\":\"#fi,#warning,read,cannotOpenFile\"}";
    goto LABEL_13;
  }
  return a1;
}

void sub_10008524C(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void *)(v1 + 96);
  *(void *)(v1 + 96) = 0;
  if (v3) {
    operator delete[]();
  }
  if (*(char *)(v1 + 95) < 0) {
    operator delete(*(void **)(v1 + 72));
  }
  sub_1000852BC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000852BC(uint64_t a1)
{
  *(void *)a1 = &off_1000FA1D8;
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

FILE *sub_10008531C(uint64_t a1)
{
  id result = *(FILE **)(a1 + 64);
  if (result)
  {
    fclose(result);
    id result = *(FILE **)(a1 + 96);
    *(void *)(a1 + 96) = 0;
    if (result) {
      operator delete[]();
    }
    *(void *)(a1 + 64) = 0;
  }
  return result;
}

uint64_t sub_10008536C(uint64_t a1)
{
  *(void *)a1 = &off_1000FA1F0;
  sub_10008531C(a1);
  uint64_t v2 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = 0;
  if (v2) {
    operator delete[]();
  }
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }

  return sub_1000852BC(a1);
}

uint64_t sub_1000853F0()
{
  double v0 = (const char *)__chkstk_darwin();
  if (v0)
  {
    uint64_t v2 = v1;
    uint64_t v3 = fopen(v0, "r");
    if (v3)
    {
      long long v4 = v3;
      if (fread(__ptr, 1uLL, 0x41uLL, v3) == 65)
      {
        __ptr[64] = 0;
        if (*(char *)(v2 + 23) >= 0) {
          uint64_t v5 = (const char *)v2;
        }
        else {
          uint64_t v5 = *(const char **)v2;
        }
        strlen(v5);
        operator new[]();
      }
      BOOL v9 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        int v12 = 0;
        __int16 v13 = 2082;
        uint64_t v14 = "";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#fi,#warning,isValid,cannotReadHash\"}", buf, 0x12u);
      }
      uint64_t v8 = v4;
    }
    else
    {
      uint64_t v7 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        int v12 = 0;
        __int16 v13 = 2082;
        uint64_t v14 = "";
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#fi,#warning,isValid,cannotOpenFile\"}", buf, 0x12u);
      }
      uint64_t v8 = 0;
    }
    fclose(v8);
  }
  else
  {
    __int16 v6 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v12 = 0;
      __int16 v13 = 2082;
      uint64_t v14 = "";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#fi,#warning,isValid,invalidArgs\"}", buf, 0x12u);
    }
  }
  return 0;
}

void sub_1000858AC()
{
}

char *sub_1000858F8(uint64_t a1)
{
  uint64_t v2 = *(FILE **)(a1 + 64);
  if (!v2 || feof(v2)) {
    return 0;
  }
  uint64_t v3 = fgets(*(char **)(a1 + 96), *(_DWORD *)(a1 + 104), *(FILE **)(a1 + 64));
  if (!v3) {
    return v3;
  }
  if (feof(*(FILE **)(a1 + 64))) {
    return 0;
  }
  size_t v5 = strlen(v3);
  if (v5 == *(void *)(a1 + 104) - 1)
  {
    for (char __ptr = 0; __ptr != 10; fread(&__ptr, 1uLL, 1uLL, *(FILE **)(a1 + 64)))
    {
      if (feof(*(FILE **)(a1 + 64))) {
        break;
      }
    }
    return 0;
  }
  size_t v6 = v5;
  if (feof(*(FILE **)(a1 + 64))) {
    return 0;
  }
  if (v3[v6 - 1] == 10) {
    v3[v6 - 1] = 0;
  }
  return v3;
}

uint64_t sub_1000859E8(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100084CB4(a1, a2, (const std::string *)a3);
  *(void *)uint64_t v6 = &off_1000FA208;
  *(_OWORD *)(v6 + 64) = 0u;
  uint64_t v7 = (FILE **)(v6 + 64);
  *(_OWORD *)(v6 + 80) = 0u;
  if (!a2)
  {
    int v16 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return a1;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    __int16 v17 = "{\"msg%{public}.0s\":\"#fi,#warning,write,invalidFileArgs\"}";
LABEL_20:
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, v17, buf, 0x12u);
    return a1;
  }
  uint64_t v8 = fopen(a2, "w");
  NSObject *v7 = v8;
  if (!v8)
  {
    int v16 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return a1;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    __int16 v17 = "{\"msg%{public}.0s\":\"#fi,#warning,write,cannotOpenFile\"}";
    goto LABEL_20;
  }
  *(void *)&long long v9 = 0x6161616161616161;
  *((void *)&v9 + 1) = 0x6161616161616161;
  long long v23 = v9;
  long long v24 = v9;
  *(_OWORD *)uint64_t buf = v9;
  *(_OWORD *)&buf[16] = v9;
  __int16 v25 = 10;
  fputs(buf, v8);
  sub_10000DD48(&v19, "\n");
  int v10 = *(char *)(a3 + 23);
  if (v10 >= 0) {
    int v11 = (const std::string::value_type *)a3;
  }
  else {
    int v11 = *(const std::string::value_type **)a3;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    std::string::size_type v12 = *(void *)(a3 + 8);
  }
  __int16 v13 = std::string::insert(&v19, 0, v11, v12);
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  int64_t v21 = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  if (v21 >= 0) {
    unsigned int v15 = __p;
  }
  else {
    unsigned int v15 = (void **)__p[0];
  }
  fputs((const char *)v15, *v7);
  CC_SHA256_Init((CC_SHA256_CTX *)(a1 + 96));
  if (SHIBYTE(v21) < 0) {
    operator delete(__p[0]);
  }
  return a1;
}

void sub_100085C04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 + 95) < 0) {
    operator delete(*(void **)(v21 + 72));
  }
  sub_1000852BC(v21);
  _Unwind_Resume(a1);
}

uint64_t sub_100085C5C(uint64_t result)
{
  if (*(void *)(result + 64))
  {
    uint64_t v1 = result;
    CC_SHA256_Final(md, (CC_SHA256_CTX *)(result + 96));
    uint64_t v2 = 0;
    long long v7 = 0u;
    long long v8 = 0u;
    *(_OWORD *)std::string __str = 0u;
    long long v6 = 0u;
    uint64_t v3 = __str;
    do
      v3 += snprintf(v3, 3uLL, "%02x", md[v2++]);
    while (v2 != 32);
    __int16 v9 = 10;
    uint64_t v4 = fseek(*(FILE **)(v1 + 64), 0, 2);
    fseek(*(FILE **)(v1 + 64), 0, 0);
    fputs(__str, *(FILE **)(v1 + 64));
    fseek(*(FILE **)(v1 + 64), v4, 0);
    id result = *(void *)(v1 + 64);
    if (result) {
      id result = fclose((FILE *)result);
    }
    *(void *)(v1 + 64) = 0;
  }
  return result;
}

uint64_t sub_100085D74(uint64_t a1)
{
  *(void *)a1 = &off_1000FA208;
  if (*(void *)(a1 + 64)) {
    sub_100085C5C(a1);
  }
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }

  return sub_1000852BC(a1);
}

const char *sub_100085DE8(const char *result, const char *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = result;
  if (a2[23] < 0)
  {
    if (!*((void *)a2 + 1)) {
      return result;
    }
    id result = *(const char **)a2;
  }
  else
  {
    id result = a2;
    if (!a2[23]) {
      return result;
    }
  }
  fputs(result, *((FILE **)v3 + 8));
  if (v2[23] < 0) {
    uint64_t v2 = *(const char **)v2;
  }
  CC_LONG v4 = strlen(v2);
  CC_SHA256_Update((CC_SHA256_CTX *)(v3 + 96), v2, v4);
  char data = 10;
  fputc(10, *((FILE **)v3 + 8));
  return (const char *)CC_SHA256_Update((CC_SHA256_CTX *)(v3 + 96), &data, 1u);
}

void SACompanionDetector::create(void *a1)
{
  id v1 = a1;
  if (*((unsigned char *)sub_10003E368() + 136)) {
    operator new();
  }
  operator new();
}

void sub_100085F8C(uint64_t a1, ...)
{
  va_start(va, a1);
  sub_100021E70((uint64_t *)va);
  operator delete();
}

void *sub_100085FE4(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  sub_10004DB88((uint64_t)v7, a3);
  sub_1000860BC(a1, v5, (uint64_t)v7);
  sub_100021E70(v7);
  *a1 = off_1000FA280;

  return a1;
}

void sub_100086094(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100021E70((uint64_t *)va);

  _Unwind_Resume(a1);
}

void *sub_1000860BC(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  *a1 = off_1000FA2D0;
  id v6 = v5;
  a1[1] = v6;
  sub_10004DB88((uint64_t)(a1 + 2), a3);

  return a1;
}

void sub_100086128(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100086140(uint64_t a1)
{
  *(void *)a1 = off_1000FA2D0;
  sub_100021E70((void *)(a1 + 16));

  return a1;
}

void sub_10008618C(uint64_t a1)
{
  *(void *)a1 = off_1000FA2D0;
  sub_100021E70((void *)(a1 + 16));

  operator delete();
}

void SACoreLocation::create(void *a1)
{
  if (*((unsigned char *)sub_10003E368() + 8)) {
    sub_1000862A4();
  }
  sub_1000863B8();
}

void sub_100086288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1000862A4()
{
}

void sub_100086374(uint64_t a1, ...)
{
  va_start(va1, a1);
  va_start(va, a1);
  uint64_t v1 = va_arg(va1, void);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  sub_100021E70((uint64_t *)va);
  sub_100065DE0((uint64_t *)va1);
  operator delete();
}

void sub_1000863B8()
{
}

void sub_100086488(uint64_t a1, ...)
{
  va_start(va1, a1);
  va_start(va, a1);
  uint64_t v1 = va_arg(va1, void);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  sub_100021E70((uint64_t *)va);
  sub_100065DE0((uint64_t *)va1);
  operator delete();
}

void SATimer::create(void *a1)
{
  id v1 = a1;
  operator new();
}

void sub_100086574(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void SANetworkReachability::create(void *a1)
{
  id v1 = a1;
  if (*((unsigned char *)sub_10003E368() + 50)) {
    operator new();
  }
  operator new();
}

void sub_1000866C0(uint64_t a1, ...)
{
  va_start(va, a1);
  sub_10007CA04((uint64_t *)va);
  operator delete();
}

uint64_t sub_100086734(uint64_t a1, int a2, char a3)
{
  int v6 = a2;
  char v5 = a3;
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3) {
    sub_100005520();
  }
  return (*(uint64_t (**)(uint64_t, int *, char *))(*(void *)v3 + 48))(v3, &v6, &v5);
}

uint64_t sub_100086790(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void SALogInit(void)
{
  if (!SALogObjectGeneral)
  {
    os_log_t v0 = os_log_create("com.apple.safetyalertsd", "general");
    id v1 = (void *)SALogObjectGeneral;
    SALogObjectGeneral = (uint64_t)v0;
  }
  if (!SALogObjectWarning)
  {
    SALogObjectWarning = (uint64_t)os_log_create("com.apple.safetyalertsd", "warning");
    _objc_release_x1();
  }
}

SafetyAlertsDaemonInterface *SafetyAlertsDaemonInterfaceProd::SafetyAlertsDaemonInterfaceProd(SafetyAlertsDaemonInterface *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  sub_10007C3A8((uint64_t)v7, a3);
  SafetyAlertsDaemonInterface::SafetyAlertsDaemonInterface(a1, v5, (uint64_t)v7);
  sub_10007C8E0(v15);
  sub_10007C754(v14);
  sub_10000F6D4(v13);
  sub_100021E70(v12);
  sub_10000F6D4(v11);
  sub_10007C7D8(v10);
  sub_10007C85C(v9);
  sub_10000F6D4(v8);
  sub_10007C324(v7);
  *(void *)a1 = off_1000FA2F8;

  return a1;
}

void sub_1000869A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100078944((uint64_t *)va);

  _Unwind_Resume(a1);
}

uint64_t sub_1000869D0(uint64_t a1)
{
  *(void *)a1 = off_1000FA340;

  sub_10007C8E0((void *)(a1 + 264));
  sub_10007C754((void *)(a1 + 232));
  sub_10000F6D4((void *)(a1 + 200));
  sub_100021E70((void *)(a1 + 168));
  sub_10000F6D4((void *)(a1 + 136));
  sub_10007C7D8((void *)(a1 + 104));
  sub_10007C85C((void *)(a1 + 72));
  sub_10000F6D4((void *)(a1 + 40));
  sub_10007C324((void *)(a1 + 8));
  return a1;
}

void sub_100086A70(uint64_t a1)
{
  sub_1000869D0(a1);

  operator delete();
}

void sub_100086AA8(void *a1, void *a2)
{
  xpc_object_t original = a2;
  string = (SAPlatformInfo *)xpc_dictionary_get_string(original, "message");
  if ([*(id *)SAPlatformInfo::instance(string) isEqualToString:@"iPhone"]
    && !strncmp((const char *)string, "userTapped", 0xAuLL))
  {
    int v18 = xpc_dictionary_get_string(original, "WeaMessage");
    if (a1[4]) {
      sub_10008DBE4((uint64_t)(a1 + 1), (uint64_t)v18);
    }
    goto LABEL_40;
  }
  if (!strncmp((const char *)string, "networkChanged", 0xEuLL))
  {
    uint64_t v8 = a1[8];
    if (!v8) {
      goto LABEL_40;
    }
    goto LABEL_18;
  }
  if (!strncmp((const char *)string, "testMessage", 0xBuLL))
  {
    unsigned int v15 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&unsigned char buf[18] = 2081;
      *(void *)&buf[20] = "testMessage";
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterfaceProd,processMessage\", \"message\":%{private, location:escape_only}s}", buf, 0x1Cu);
    }
    int v16 = sub_100017698();
    sub_100017780(v16, original);
    xpc_object_t reply = xpc_dictionary_create_reply(original);
    if (reply) {
      xpc_dictionary_send_reply();
    }

    goto LABEL_40;
  }
  if (!strncmp((const char *)string, "isEnabledSync", 0xDuLL) || !strncmp((const char *)string, "isEnabled", 9uLL))
  {
    xpc_object_t v9 = xpc_dictionary_create_reply(original);
    int v10 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&unsigned char buf[18] = 2081;
      *(void *)&buf[20] = string;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterfaceProd,processMessage\", \"message\":%{private, location:escape_only}s}", buf, 0x1Cu);
    }
    if (v9)
    {
      uint64_t v11 = a1[12];
      if (v11)
      {
        unsigned int v12 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 48))(v11);
        __int16 v13 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = 68289282;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&unsigned char buf[18] = 1026;
          *(_DWORD *)&buf[20] = v12;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterfaceProd,isSafetyAlertsEnabled()\", \"isEnabled\":%{public}hhd}", buf, 0x18u);
        }
        uint64_t v14 = v12;
      }
      else
      {
        uint64_t v14 = 0;
      }
      xpc_dictionary_set_uint64(v9, "isEnabledResult", v14);
      xpc_dictionary_send_reply();
    }
    goto LABEL_39;
  }
  if (strncmp((const char *)string, "significantEvent", 0x10uLL))
  {
    if (!strncmp((const char *)string, "fetchAvailableAlertTypes", 0x18uLL))
    {
      xpc_object_t xdict = xpc_dictionary_create_reply(original);
      uint64_t v21 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289283;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&unsigned char buf[18] = 2081;
        *(void *)&buf[20] = string;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterfaceProd,processMessage\", \"message\":%{private, location:escape_only}s}", buf, 0x1Cu);
      }
      __int16 v22 = xdict;
      if (xdict)
      {
        if (a1[16])
        {
          LOBYTE(value) = 0;
          id v60 = objc_alloc_init((Class)NSMutableDictionary);
          sub_100087A4C((uint64_t)(a1 + 13), v60, (uint64_t)&value);
          long long v23 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)uint64_t buf = 68289539;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            *(_WORD *)&unsigned char buf[18] = 2113;
            *(void *)&buf[20] = v60;
            *(_WORD *)&unsigned char buf[28] = 1025;
            *(_DWORD *)&unsigned char buf[30] = value;
            _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterfaceProd,onAvailableAlertSettingsRequest()\", \"availableAlerts\":%{private, location:escape_only}@, \"initialized\":%{private}hhd}", buf, 0x22u);
          }
          xpc_dictionary_set_BOOL(xdict, "isInitialized", value);
          if ((_BYTE)value)
          {
            long long v65 = 0u;
            long long v66 = 0u;
            long long v63 = 0u;
            long long v64 = 0u;
            id v24 = v60;
            id v25 = [v24 countByEnumeratingWithState:&v63 objects:v86 count:16];
            if (v25)
            {
              uint64_t v26 = *(void *)v64;
              do
              {
                for (uint64_t i = 0; i != v25; uint64_t i = (char *)i + 1)
                {
                  if (*(void *)v64 != v26) {
                    objc_enumerationMutation(v24);
                  }
                  BOOL v28 = *(void **)(*((void *)&v63 + 1) + 8 * i);
                  xpc_object_t v29 = xpc_dictionary_create(0, 0, 0);
                  int v30 = [v24 objectForKeyedSubscript:v28];
                  __int16 v31 = [v30 objectForKeyedSubscript:@"defaultValue"];

                  xpc_dictionary_set_BOOL(v29, "defaultValue", (BOOL)[v31 BOOLValue]);
                  unsigned int v32 = [v24 objectForKeyedSubscript:v28];
                  __int16 v33 = [v32 objectForKeyedSubscript:@"preferencesKey"];

                  id v34 = v33;
                  xpc_dictionary_set_string(v29, "preferencesKey", (const char *)[v34 UTF8String]);
                  xpc_dictionary_set_value(xdict, (const char *)[v28 UTF8String], v29);
                }
                id v25 = [v24 countByEnumeratingWithState:&v63 objects:v86 count:16];
              }
              while (v25);
            }
          }
        }
        __int16 v22 = xdict;
        xpc_dictionary_send_reply();
      }

      goto LABEL_40;
    }
    if (!strncmp((const char *)string, "settingsChanged", 0xFuLL))
    {
      double v35 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289283;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&unsigned char buf[18] = 2081;
        *(void *)&buf[20] = string;
        _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterfaceProd,processMessage\", \"message\":%{private, location:escape_only}s}", buf, 0x1Cu);
      }
      char v36 = a1 + 17;
    }
    else
    {
      if (!strncmp((const char *)string, "saDelivery", 0xAuLL))
      {
        BOOL v37 = xpc_dictionary_get_BOOL(original, "Enabled");
        __int16 v38 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = 68289539;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&unsigned char buf[18] = 2081;
          *(void *)&buf[20] = "saDelivery";
          *(_WORD *)&unsigned char buf[28] = 1026;
          *(_DWORD *)&unsigned char buf[30] = v37;
          _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterfaceProd,enhancedDelivery\", \"message\":%{private, location:escape_only}s, \"isEnabled\":%{public}hhd}", buf, 0x22u);
        }
        if (a1[24]) {
          sub_100045970((uint64_t)(a1 + 21), v37);
        }
        goto LABEL_40;
      }
      if (strncmp((const char *)string, "enhancedDeliveryPageVisited", 0x1BuLL))
      {
        if (!strncmp((const char *)string, "saIgneousTestState", 0x12uLL))
        {
          xpc_object_t v40 = xpc_dictionary_create_reply(original);
          uint64_t v41 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)uint64_t buf = 68289283;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            *(_WORD *)&unsigned char buf[18] = 2081;
            *(void *)&buf[20] = string;
            _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterfaceProd,Igneous test\", \"message\":%{private, location:escape_only}s}", buf, 0x1Cu);
          }
          if (v40)
          {
            uint64_t v80 = 0;
            long long v79 = 0u;
            memset(buf, 0, sizeof(buf));
            uint64_t v42 = a1[32];
            if (v42)
            {
              (*(void (**)(uint64_t *__return_ptr))(*(void *)v42 + 48))(&value);
              sub_100087AD8((uint64_t)buf, (long long *)&value);
              sub_10003162C((uint64_t)&value);
              double v43 = SALogObjectGeneral;
              if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
              {
                __int16 v44 = &buf[24];
                if ((buf[47] & 0x80u) != 0) {
                  __int16 v44 = *(uint8_t **)&buf[24];
                }
                uint64_t value = 68290050;
                __int16 v68 = 2082;
                uint64_t v69 = "";
                __int16 v70 = 2082;
                uint64_t v71 = v44;
                __int16 v72 = 1026;
                int v73 = v85;
                __int16 v74 = 2050;
                double v75 = v81;
                __int16 v76 = 2050;
                double v77 = v82;
                _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterfaceProd,igneousStatusInfoForTestAlert\", \"Uid\":%{public, location:escape_only}s, \"ErrorCode\":%{public}d, \"originatedLatency\":\"%{public}0.3f\", \"ingressLatency\":\"%{public}0.3f\"}", (uint8_t *)&value, 0x36u);
              }
              if ((buf[47] & 0x80u) == 0) {
                int v45 = (const char *)&buf[24];
              }
              else {
                int v45 = *(const char **)&buf[24];
              }
            }
            else
            {
              int v45 = (const char *)&buf[24];
            }
            xpc_dictionary_set_string(v40, "igneousStateInfoUID", v45);
            if ((buf[23] & 0x80u) == 0) {
              unint64_t v57 = buf;
            }
            else {
              unint64_t v57 = *(uint8_t **)buf;
            }
            xpc_dictionary_set_string(v40, "igneousStateInfoChannel", (const char *)v57);
            if (v80 >= 0) {
              std::string::size_type v58 = (const char *)&v79;
            }
            else {
              std::string::size_type v58 = (const char *)v79;
            }
            xpc_dictionary_set_string(v40, "weaText", v58);
            xpc_dictionary_set_int64(v40, "igneousStateInfoError", v85);
            xpc_dictionary_set_double(v40, "igneousStateInfoOriginiatedLatency", v81);
            xpc_dictionary_set_double(v40, "weaAlertReceivedTs", v83);
            xpc_dictionary_set_double(v40, "igneousAlertReceivedTs", v84);
            xpc_dictionary_set_double(v40, "igneousStateInfoIngressLatency", v82);
            xpc_dictionary_send_reply();
            sub_10003162C((uint64_t)buf);
          }

          goto LABEL_40;
        }
        if (strncmp((const char *)string, "saIgneousEnableState", 0x14uLL))
        {
          uint64_t v4 = SALogObjectGeneral;
          BOOL v5 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
          if (!string)
          {
            if (!v5) {
              goto LABEL_40;
            }
            *(_DWORD *)uint64_t buf = 68289026;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            int v6 = "{\"msg%{public}.0s\":\"#daemonInterfaceProd,unknownMessage,nil\"}";
            long long v7 = v4;
            uint32_t v20 = 18;
            goto LABEL_36;
          }
          if (v5)
          {
            *(_DWORD *)uint64_t buf = 68289283;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            *(_WORD *)&unsigned char buf[18] = 2081;
            *(void *)&buf[20] = string;
            int v6 = "{\"msg%{public}.0s\":\"#daemonInterfaceProd,unknownMessage\", \"message\":%{private, location:escape_only}s}";
            long long v7 = v4;
LABEL_35:
            uint32_t v20 = 28;
LABEL_36:
            _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v6, buf, v20);
            goto LABEL_40;
          }
          goto LABEL_40;
        }
        xpc_object_t v9 = xpc_dictionary_create_reply(original);
        long long v46 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = 68289283;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          *(_WORD *)&unsigned char buf[18] = 2081;
          *(void *)&buf[20] = string;
          _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterfaceProd,enablement\", \"message\":%{private, location:escape_only}s}", buf, 0x1Cu);
        }
        if (v9)
        {
          uint64_t v47 = a1[36];
          if (v47)
          {
            unint64_t v48 = (*(uint64_t (**)(uint64_t))(*(void *)v47 + 48))(v47);
            unint64_t v49 = SALogObjectGeneral;
            BOOL v50 = HIDWORD(v48) & 1;
            BOOL v51 = (v48 >> 40) & 1;
            BOOL v52 = HIWORD(v48) & 1;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)uint64_t buf = 68290819;
              *(_DWORD *)&uint8_t buf[4] = 0;
              *(_WORD *)&uint8_t buf[8] = 2082;
              *(void *)&buf[10] = "";
              *(_WORD *)&unsigned char buf[18] = 1025;
              *(_DWORD *)&buf[20] = v48 & 1;
              *(_WORD *)&unsigned char buf[24] = 1025;
              *(_DWORD *)&buf[26] = (v48 >> 8) & 1;
              *(_WORD *)&unsigned char buf[30] = 1025;
              *(_DWORD *)&unsigned char buf[32] = BYTE3(v48) & 1;
              *(_WORD *)&buf[36] = 1025;
              *(_DWORD *)&buf[38] = WORD1(v48) & 1;
              *(_WORD *)&buf[42] = 1025;
              *(_DWORD *)&buf[44] = BYTE4(v48) & 1;
              LOWORD(v79) = 1025;
              *(_DWORD *)((char *)&v79 + 2) = (v48 >> 40) & 1;
              WORD3(v79) = 1025;
              DWORD2(v79) = HIWORD(v48) & 1;
              _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterfaceProd,igneousEnablementStateInfo\", \"inCoverageRegion\":%{private}hhd, \"inSupportedCountry\":%{private}hhd, \"isInMagnetMode\":%{private}hhd, \"isUserOptedIn\":%{private}hhd, \"isEnabled\":%{private}hhd, \"isEmergencyAlertEnabled\":%{private}hhd, \"isMotionHarvestAllowed\":%{private}hhd}", buf, 0x3Cu);
            }
            BOOL v53 = (v48 >> 8) & 1;
            BOOL v54 = v48 & 1;
            BOOL v55 = (v48 >> 16) & 1;
            BOOL v56 = (v48 >> 24) & 1;
          }
          else
          {
            BOOL v54 = 0;
            LOBYTE(v53) = 0;
            LOBYTE(v55) = 0;
            LOBYTE(v56) = 0;
            LOBYTE(v50) = 0;
            LOBYTE(v51) = 0;
            LOBYTE(v52) = 0;
          }
          xpc_dictionary_set_BOOL(v9, "saEnablementStateInCountry", v53);
          xpc_dictionary_set_BOOL(v9, "saEnablementStateInCoverageArea", v54);
          xpc_dictionary_set_BOOL(v9, "saEnablementStateInMagnetMode", v56);
          xpc_dictionary_set_BOOL(v9, "saEnablementStateOptedIn", v55);
          xpc_dictionary_set_BOOL(v9, "saEnablementStateEnabled", v50);
          xpc_dictionary_set_BOOL(v9, "saEmergencyAlertSwitchEnabled", v51);
          xpc_dictionary_set_BOOL(v9, "saMotionHarvestAllowed", v52);
          xpc_dictionary_send_reply();
          uint64_t v59 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)uint64_t buf = 68289026;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterfaceProd,igneousEnablementStateInfo\"}", buf, 0x12u);
          }
        }
LABEL_39:

        goto LABEL_40;
      }
      uint64_t v39 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289283;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&unsigned char buf[18] = 2081;
        *(void *)&buf[20] = "saDelivery";
        _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterfaceProd,enhancedDeliveryPageVisited\", \"message\":%{private, location:escape_only}s}", buf, 0x1Cu);
      }
      if (!a1[28]) {
        goto LABEL_40;
      }
      char v36 = a1 + 25;
    }
    uint64_t v8 = v36[3];
    if (!v8) {
      sub_100005520();
    }
LABEL_18:
    (*(void (**)(void))(*(void *)v8 + 48))();
    goto LABEL_40;
  }
  uint64_t v19 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&unsigned char buf[18] = 2081;
    *(void *)&buf[20] = "testMessage";
    int v6 = "{\"msg%{public}.0s\":\"#daemonInterfaceProd,significantEvent\", \"message\":%{private, location:escape_only}s}";
    long long v7 = v19;
    goto LABEL_35;
  }
LABEL_40:
}

void sub_10008795C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Unwind_Resume(a1);
}

void sub_100087A4C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a3;
  id v6 = a2;
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4) {
    sub_100005520();
  }
  (*(void (**)(uint64_t, id *, uint64_t *))(*(void *)v4 + 48))(v4, &v6, &v5);
}

void sub_100087AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100087AD8(uint64_t a1, long long *a2)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((unsigned char *)a2 + 23) = 0;
  *(unsigned char *)a2 = 0;
  uint64_t v5 = (void **)(a1 + 24);
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*v5);
  }
  long long v6 = *(long long *)((char *)a2 + 24);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(_OWORD *)uint64_t v5 = v6;
  *((unsigned char *)a2 + 47) = 0;
  *((unsigned char *)a2 + 24) = 0;
  long long v7 = (void **)(a1 + 48);
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*v7);
  }
  long long v8 = a2[3];
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(_OWORD *)long long v7 = v8;
  *((unsigned char *)a2 + 71) = 0;
  *((unsigned char *)a2 + 48) = 0;
  long long v9 = *(long long *)((char *)a2 + 72);
  long long v10 = *(long long *)((char *)a2 + 88);
  *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
  *(_OWORD *)(a1 + 88) = v10;
  *(_OWORD *)(a1 + 72) = v9;
  return a1;
}

void sub_100087BA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = (std::__shared_weak_count *)a2[1];
  uint64_t v3 = *a2;
  long long v4 = v2;
  if (v2) {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1000272B8(&v3);
  if (v4) {
    sub_100028F6C(v4);
  }
}

void sub_100087BF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_100028F6C(a10);
  }
  _Unwind_Resume(exception_object);
}

void *SAPlatformInfo::instance(SAPlatformInfo *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_100106DD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_100106DD0))
  {
    SAPlatformInfo::SAPlatformInfo((SAPlatformInfo *)&unk_100106DC0);
    __cxa_guard_release(&qword_100106DD0);
  }
  return &unk_100106DC0;
}

void sub_100087C6C(_Unwind_Exception *a1)
{
}

void SAPlatformInfo::SAPlatformInfo(SAPlatformInfo *this)
{
  *(void *)this = 0;
  *((unsigned char *)this + 12) = 0;
  uint64_t v2 = MGCopyAnswer();
  uint64_t v3 = *(void **)this;
  *(void *)this = v2;

  *((unsigned char *)this + 8) = MGGetBoolAnswer();
  *((unsigned char *)this + 9) = os_variant_has_internal_content();
  unsigned int v4 = [*(id *)this isEqualToString:@"iPhone"];
  if (v4) {
    LOBYTE(v4) = MGGetBoolAnswer();
  }
  *((unsigned char *)this + 10) = v4;
  *((unsigned char *)this + 11) = 0;
  CFBooleanRef v5 = (const __CFBoolean *)MGCopyAnswer();
  CFBooleanRef v6 = v5;
  if (v5)
  {
    *((unsigned char *)this + 12) = CFBooleanGetValue(v5) != 0;
    CFRelease(v6);
  }
}

void sub_100087D48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id SAPlatformInfo::isAOPSupportedDevice(id *this)
{
  id result = [*this isEqualToString:@"iPhone"];
  if (result) {
    return (id)(*((unsigned char *)this + 12) != 0);
  }
  return result;
}

void *SALockMonitorTest::SALockMonitorTest(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  sub_10000F63C((uint64_t)v10, a3);
  sub_10004DB88((uint64_t)v9, a4);
  sub_100087EA4(a1, v7, (uint64_t)v10, (uint64_t)v9);
  sub_100021E70(v9);
  sub_10000F6D4(v10);
  *a1 = off_1000FA380;

  return a1;
}

void sub_100087E6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  sub_100021E70((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);

  _Unwind_Resume(a1);
}

void *sub_100087EA4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  *a1 = off_1000FA3D0;
  sub_10000F63C((uint64_t)(a1 + 1), a3);
  sub_10004DB88((uint64_t)(a1 + 5), a4);
  a1[9] = v7;
  return a1;
}

void sub_100087F24(_Unwind_Exception *a1)
{
  sub_10000F6D4(v2);

  _Unwind_Resume(a1);
}

void sub_100087F48(uint64_t a1)
{
  sub_100087F84(a1);

  operator delete();
}

uint64_t sub_100087F84(uint64_t a1)
{
  *(void *)a1 = off_1000FA3D0;

  sub_100021E70((void *)(a1 + 40));
  sub_10000F6D4((void *)(a1 + 8));
  return a1;
}

double sub_100087FDC(unint64_t a1)
{
  double v2 = *(double *)&qword_100106DD8;
  if (*(double *)&qword_100106DD8 == 0.0)
  {
    mach_timebase_info(&info);
    if (info.denom)
    {
      uint32_t denom = info.denom;
      uint32_t numer = info.numer;
      do
      {
        uint32_t v5 = denom;
        uint32_t denom = numer % denom;
        uint32_t numer = v5;
      }
      while (denom);
    }
    else
    {
      uint32_t v5 = info.numer;
    }
    unsigned int v6 = 1000000000;
    uint32_t v7 = info.numer / v5;
    do
    {
      uint32_t v8 = v7;
      uint32_t v7 = v6;
      unsigned int v6 = v8 % v6;
    }
    while (v6);
    double v2 = (double)(info.numer / v5 / v7) / (double)(0x3B9ACA00 / v7 * (unint64_t)(info.denom / v5));
    *(double *)&qword_100106DD8 = v2;
  }
  return v2 * (double)a1;
}

uint64_t SATime::getTimeUncertaintyBucket(SATime *this)
{
  double v1 = *((double *)this + 1);
  if (v1 <= 0.0) {
    return 0;
  }
  if (v1 < 1.0) {
    return 1;
  }
  if (v1 < 2.0) {
    return 2;
  }
  if (v1 < 5.0) {
    return 3;
  }
  if (v1 < 10.0) {
    return 4;
  }
  if (v1 < 20.0) {
    return 5;
  }
  if (v1 < 35.0) {
    return 6;
  }
  if (v1 < 50.0) {
    return 7;
  }
  if (v1 < 75.0) {
    return 8;
  }
  if (v1 < 100.0) {
    return 9;
  }
  if (v1 < 200.0) {
    return 10;
  }
  if (v1 >= 300.0) {
    return 12;
  }
  return 11;
}

uint64_t SAGridMetrics::SAGridMetrics(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)a1 = off_1000FA3F8;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 20) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a1 + 64;
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 68289026;
    v6[1] = 0;
    __int16 v7 = 2082;
    uint32_t v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#gm,gridMetric object created\"}", (uint8_t *)v6, 0x12u);
  }

  return a1;
}

uint64_t sub_1000882C0(uint64_t a1)
{
  *(void *)a1 = off_1000FA3F8;
  double v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289026;
    v5[1] = 0;
    __int16 v6 = 2082;
    __int16 v7 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#gm,gridMetric release\"}", (uint8_t *)v5, 0x12u);
  }
  sub_100015B14(a1 + 56, *(void **)(a1 + 64));
  id v3 = *(void **)(a1 + 32);
  if (v3)
  {
    *(void *)(a1 + 40) = v3;
    operator delete(v3);
  }

  return a1;
}

void sub_1000883C4(uint64_t a1)
{
  sub_1000882C0(a1);

  operator delete();
}

char *SAGridMetrics::onHistoricalLocationReceivedCb(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 5;
    v9[0] = 68289283;
    v9[1] = 0;
    __int16 v10 = 2082;
    uint64_t v11 = "";
    __int16 v12 = 2049;
    uint64_t v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#gm,OnHistoricalLocationReceivedCb\", \"HistoricalLocationCount\":%{private}lu}", (uint8_t *)v9, 0x1Cu);
  }
  uint64_t v6 = *(void *)(a2 + 8);
  id result = (char *)(a1 + 32);
  if (*(void *)a2 != v6 && result != (char *)a2) {
    return sub_10004D4C4(result, *(char **)a2, v6, (v6 - *(void *)a2) >> 5);
  }
  return result;
}

uint64_t sub_1000884FC(uint64_t result)
{
  *(unsigned char *)(result + 16) = 1;
  return result;
}

void SAGridMetrics::onSlcHistoryCb(void *a1, void *a2)
{
  id v3 = (uint64_t **)(a1 + 7);
  if (a1 + 7 != a2)
  {
    uint64_t v4 = a2 + 1;
    uint64_t v5 = (void *)*a2;
    if (a1[9])
    {
      __int16 v7 = (uint64_t **)(a1 + 8);
      uint64_t v6 = a1[8];
      uint64_t v8 = a1[7];
      a1[7] = a1 + 8;
      *(void *)(v6 + 16) = 0;
      a1[8] = 0;
      a1[9] = 0;
      if (*(void *)(v8 + 8)) {
        long long v9 = *(uint64_t **)(v8 + 8);
      }
      else {
        long long v9 = (uint64_t *)v8;
      }
      uint64_t v29 = (uint64_t)(a1 + 7);
      *(void *)int v30 = v9;
      *(void *)&v30[8] = v9;
      if (!v9 || (__int16 v10 = sub_100029650((uint64_t)v9), *(void *)v30 = v10, v5 == v4))
      {
        __int16 v17 = v5;
      }
      else
      {
        do
        {
          uint64_t v11 = (uint64_t)v10;
          uint64_t v12 = v5[4];
          void v9[4] = v12;
          uint64_t v13 = *v7;
          uint64_t v14 = (uint64_t **)(a1 + 8);
          unsigned int v15 = (uint64_t **)(a1 + 8);
          if (*v7)
          {
            do
            {
              while (1)
              {
                uint64_t v14 = (uint64_t **)v13;
                if (v12 >= v13[4]) {
                  break;
                }
                uint64_t v13 = (uint64_t *)*v13;
                unsigned int v15 = v14;
                if (!*v14) {
                  goto LABEL_14;
                }
              }
              uint64_t v13 = (uint64_t *)v13[1];
            }
            while (v13);
            unsigned int v15 = v14 + 1;
          }
LABEL_14:
          sub_100015DE4(v3, (uint64_t)v14, v15, v9);
          if (v11) {
            __int16 v10 = sub_100029650(v11);
          }
          else {
            __int16 v10 = 0;
          }
          int v16 = (void *)v5[1];
          if (v16)
          {
            do
            {
              __int16 v17 = v16;
              int v16 = (void *)*v16;
            }
            while (v16);
          }
          else
          {
            do
            {
              __int16 v17 = (void *)v5[2];
              BOOL v18 = *v17 == (void)v5;
              uint64_t v5 = v17;
            }
            while (!v18);
          }
          if (!v11) {
            break;
          }
          long long v9 = (uint64_t *)v11;
          uint64_t v5 = v17;
        }
        while (v17 != v4);
        *(void *)int v30 = v10;
        *(void *)&v30[8] = v11;
      }
      sub_10008924C((uint64_t)&v29);
      uint64_t v5 = v17;
    }
    if (v5 != v4)
    {
      uint64_t v19 = (uint64_t **)(a1 + 8);
      do
      {
        uint64_t v20 = v5[4];
        uint64_t v21 = (uint64_t *)operator new(0x28uLL);
        void v21[4] = v20;
        __int16 v22 = *v19;
        long long v23 = (uint64_t **)(a1 + 8);
        id v24 = (uint64_t **)(a1 + 8);
        if (*v19)
        {
          do
          {
            while (1)
            {
              long long v23 = (uint64_t **)v22;
              if (v22[4] <= v20) {
                break;
              }
              __int16 v22 = (uint64_t *)*v22;
              id v24 = v23;
              if (!*v23) {
                goto LABEL_35;
              }
            }
            __int16 v22 = (uint64_t *)v22[1];
          }
          while (v22);
          id v24 = v23 + 1;
        }
LABEL_35:
        sub_100015DE4(v3, (uint64_t)v23, v24, v21);
        id v25 = (void *)v5[1];
        if (v25)
        {
          do
          {
            uint64_t v26 = v25;
            id v25 = (void *)*v25;
          }
          while (v25);
        }
        else
        {
          do
          {
            uint64_t v26 = (void *)v5[2];
            BOOL v18 = *v26 == (void)v5;
            uint64_t v5 = v26;
          }
          while (!v18);
        }
        uint64_t v5 = v26;
      }
      while (v26 != v4);
    }
  }
  __int16 v27 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v28 = a1[9];
    uint64_t v29 = 68289283;
    *(_WORD *)int v30 = 2082;
    *(void *)&v30[2] = "";
    *(_WORD *)&v30[10] = 2049;
    *(void *)&v30[12] = v28;
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#gm,onSlcHistoryCb\", \"fSlcTimesamps\":%{private}lu}", (uint8_t *)&v29, 0x1Cu);
  }
}

void sub_1000887A8(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = (os_log_t *)&SALogObjectGeneral;
  uint64_t v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = (uint64_t)(*(void *)(a1 + 40) - *(void *)(a1 + 32)) >> 5;
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)uint64_t v69 = 2082;
    *(void *)&v69[2] = "";
    *(_WORD *)&v69[10] = 2049;
    *(void *)&v69[12] = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#gm,run\", \"HistoricalLocationCount\":%{private}lu}", buf, 0x1Cu);
  }
  __int16 v7 = *(double **)(a1 + 32);
  uint64_t v8 = *(uint64_t **)(a1 + 40);
  if (v7 != (double *)v8)
  {
    unsigned int v64 = 0;
    double v9 = 0.0;
    double v10 = 0.0;
    double v11 = 0.0;
    do
    {
      uint64_t v12 = *v4;
      if (os_log_type_enabled(*v4, OS_LOG_TYPE_DEBUG))
      {
        double v13 = *v7;
        uint64_t v14 = *((void *)v7 + 1);
        uint64_t v15 = *((void *)v7 + 2);
        uint64_t v16 = *((void *)v7 + 3);
        *(_DWORD *)uint64_t buf = 68290051;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)uint64_t v69 = 2082;
        *(void *)&v69[2] = "";
        *(_WORD *)&v69[10] = 2049;
        *(double *)&v69[12] = v13;
        *(_WORD *)&v69[20] = 2049;
        *(void *)&v69[22] = v14;
        *(_WORD *)&v69[30] = 2049;
        uint64_t v70 = v15;
        __int16 v71 = 2049;
        uint64_t v72 = v16;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gm,prepareGridTransitionMetric\", \"Time\":\"%{private}0.3f\", \"Lat\":\"%{private}0.3f\", \"Lon\":\"%{private}0.3f\", \"hAcc\":\"%{private}0.3f\"}", buf, 0x3Au);
      }
      double v17 = v7[1];
      if (v17 < -90.0 || v17 > 90.0 || (double v18 = v7[2], v18 < -180.0) || v18 > 180.0 || v7[3] <= 0.0)
      {
        uint64_t v26 = *v4;
        if (os_log_type_enabled(*v4, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)uint64_t buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)uint64_t v69 = 2082;
          *(void *)&v69[2] = "";
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gm,prepareGridTransitionMetric,#warning,skippingInvalidLocation\"}", buf, 0x12u);
        }
      }
      else
      {
        uint64_t v19 = v4;
        BOOL v20 = v11 > 90.0 || v11 < -90.0;
        if (v20
          || v10 < -180.0
          || v10 > 180.0
          || v9 <= 0.0
          || (GEOCalculateDistance(), double v27 = v7[3], v28 >= v9 + v27 + 300.0))
        {
          *(void *)int v73 = 0;
          double v67 = 0.0;
          uint64_t v21 = sub_10006B474();
          sub_10006DC68((uint64_t)v21, v73, &v67, v7[1], v7[2]);
          unsigned int GlobalTileIdFromLatLonAndGridSizeInDegrees = SAGridId::generateGlobalTileIdFromLatLonAndGridSizeInDegrees(v22, v7[1], v7[2], 0.2, *(double *)v73, v67);
          id v24 = *v4;
          if (os_log_type_enabled(*v19, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v25 = *(unsigned int *)(a1 + 20);
            *(_DWORD *)uint64_t buf = 68289795;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)uint64_t v69 = 2082;
            *(void *)&v69[2] = "";
            *(_WORD *)&v69[10] = 2049;
            *(void *)&v69[12] = GlobalTileIdFromLatLonAndGridSizeInDegrees;
            *(_WORD *)&v69[20] = 2049;
            *(void *)&v69[22] = v64;
            *(_WORD *)&v69[30] = 2049;
            uint64_t v70 = v25;
            _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gm,prepareGridTransitionMetric\", \"curGridId\":%{private}lu, \"prevGridId\":%{private}lu, \"gridTransitionCount\":%{private}lu}", buf, 0x30u);
          }
          if (v20 || v10 < -180.0 || v10 > 180.0 || v9 <= 0.0)
          {
            double v11 = v7[1];
            double v10 = v7[2];
            double v9 = v7[3];
          }
          else if (GlobalTileIdFromLatLonAndGridSizeInDegrees == v64)
          {
            unsigned int GlobalTileIdFromLatLonAndGridSizeInDegrees = v64;
          }
          else
          {
            ++*(_DWORD *)(a1 + 20);
          }
          uint64_t v4 = v19;
          unsigned int v64 = GlobalTileIdFromLatLonAndGridSizeInDegrees;
        }
        else
        {
          if (v27 < v9)
          {
            double v11 = v7[1];
            double v10 = v7[2];
            double v9 = v7[3];
          }
          uint64_t v29 = *v4;
          if (os_log_type_enabled(*v4, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)uint64_t buf = 68289026;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)uint64_t v69 = 2082;
            *(void *)&v69[2] = "";
            _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gm,prepareGridTransitionMetric,NoSignificantLocationChange\"}", buf, 0x12u);
          }
        }
      }
      v7 += 4;
    }
    while (v7 != (double *)v8);
  }
  int v30 = *v4;
  if (os_log_type_enabled(*v4, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v31 = *(unsigned int *)(a1 + 20);
    *(_DWORD *)uint64_t buf = 68289283;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)uint64_t v69 = 2082;
    *(void *)&v69[2] = "";
    *(_WORD *)&v69[10] = 2049;
    *(void *)&v69[12] = v31;
    _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gm,prepareGridTransitionMetric\", \"gridTransitionCount\":%{private}lu}", buf, 0x1Cu);
    int v30 = *v4;
  }
  if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v32 = *(unsigned int *)(a1 + 72);
    *(_DWORD *)uint64_t buf = 68289795;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)uint64_t v69 = 2082;
    *(void *)&v69[2] = "";
    *(_WORD *)&v69[10] = 2049;
    *(void *)&v69[12] = a2;
    *(_WORD *)&v69[20] = 2049;
    *(void *)&v69[22] = a3;
    *(_WORD *)&v69[30] = 2049;
    uint64_t v70 = v32;
    _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#gm,prepareSLCMetric\", \"startTsSeconds\":%{private}lu, \"endTsSeconds\":%{private}lu, \"slcTimesampsCount\":%{private}lu}", buf, 0x30u);
  }
  __int16 v33 = *(void **)(a1 + 56);
  id v34 = (void *)(a1 + 64);
  if (v33 != (void *)(a1 + 64))
  {
    unsigned int v66 = 0;
    unsigned int v65 = 0;
    unint64_t v35 = 0;
    unint64_t v36 = (uint64_t)(*(void *)(a1 + 40) - *(void *)(a1 + 32)) >> 5;
    do
    {
      if (v36 <= v35)
      {
        unint64_t v41 = v35;
      }
      else
      {
        BOOL v37 = v34;
        unint64_t v38 = v35;
        uint64_t v39 = *v4;
        uint64_t v40 = v33[4];
        unint64_t v41 = v35;
        while (1)
        {
          uint64_t v42 = *(void *)(a1 + 32) + 32 * v38;
          double v44 = *(double *)v42;
          double v43 = *(double *)(v42 + 8);
          double v45 = *(double *)(v42 + 16);
          if (os_log_type_enabled(v39, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)uint64_t buf = 68289539;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)uint64_t v69 = 2082;
            *(void *)&v69[2] = "";
            *(_WORD *)&v69[10] = 2049;
            *(void *)&v69[12] = v40;
            *(_WORD *)&v69[20] = 2049;
            *(void *)&v69[22] = v44;
            _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gm,prepareSLCMetric,\", \"t\":%{private}lu, \"locData.timestamp\":%{private}lu}", buf, 0x26u);
            uint64_t v39 = *v4;
            uint64_t v40 = v33[4];
          }
          if (v44 + -3.0 < (double)v40 && v44 + 3.0 > (double)v40) {
            break;
          }
          unint64_t v38 = (v41 + 1);
          unint64_t v41 = v38;
          if (v36 <= v38)
          {
            unint64_t v41 = v35;
            id v34 = v37;
            goto LABEL_65;
          }
        }
        *(void *)int v73 = 0;
        double v67 = 0.0;
        uint64_t v47 = sub_10006B474();
        id v34 = v37;
        sub_10006DC68((uint64_t)v47, v73, &v67, v43, v45);
        unsigned int v49 = SAGridId::generateGlobalTileIdFromLatLonAndGridSizeInDegrees(v48, v43, v45, 0.2, *(double *)v73, v67);
        unsigned int v50 = v49;
        if (v66 == v49)
        {
          BOOL v51 = *v4;
          if (os_log_type_enabled(*v4, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)uint64_t buf = 68289795;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)uint64_t v69 = 2082;
            *(void *)&v69[2] = "";
            *(_WORD *)&v69[10] = 2049;
            *(void *)&v69[12] = v65;
            *(_WORD *)&v69[20] = 2049;
            *(void *)&v69[22] = v66;
            *(_WORD *)&v69[30] = 2049;
            uint64_t v70 = v66;
            _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gm,prepareSLCMetric,no match\", \"totalGridTransition\":%{private}lu, \"curGridId\":%{private}lu, \"prevGridId\":%{private}lu}", buf, 0x30u);
          }
          unsigned int v50 = v66;
        }
        else
        {
          uint64_t v52 = v65 + 1;
          BOOL v53 = *v4;
          ++v65;
          if (os_log_type_enabled(*v4, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)uint64_t buf = 68289795;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)uint64_t v69 = 2082;
            *(void *)&v69[2] = "";
            *(_WORD *)&v69[10] = 2049;
            *(void *)&v69[12] = v52;
            *(_WORD *)&v69[20] = 2049;
            *(void *)&v69[22] = v50;
            *(_WORD *)&v69[30] = 2049;
            uint64_t v70 = v66;
            _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gm,prepareSLCMetric\", \"totalGridTransition\":%{private}lu, \"curGridId\":%{private}lu, \"prevGridId\":%{private}lu}", buf, 0x30u);
          }
        }
        unsigned int v66 = v50;
      }
LABEL_65:
      BOOL v54 = (void *)v33[1];
      if (v54)
      {
        do
        {
          BOOL v55 = v54;
          BOOL v54 = (void *)*v54;
        }
        while (v54);
      }
      else
      {
        do
        {
          BOOL v55 = (void *)v33[2];
          BOOL v56 = *v55 == (void)v33;
          __int16 v33 = v55;
        }
        while (!v56);
      }
      unint64_t v35 = v41;
      __int16 v33 = v55;
    }
    while (v55 != v34);
    if (v65) {
      *(_DWORD *)(a1 + 24) = v65;
    }
  }
  *(void *)uint64_t buf = _NSConcreteStackBlock;
  *(void *)uint64_t v69 = 3221225472;
  *(void *)&v69[8] = sub_10008913C;
  *(void *)&v69[16] = &unk_1000F5EC8;
  *(void *)&v69[24] = a1 + 20;
  AnalyticsSendEventLazy();
  unint64_t v57 = *v4;
  if (os_log_type_enabled(*v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v58 = *(int *)(a1 + 20);
    uint64_t v59 = *(int *)(a1 + 24);
    *(_DWORD *)int v73 = 68289539;
    *(_DWORD *)&v73[4] = 0;
    *(_WORD *)__int16 v74 = 2082;
    *(void *)&v74[2] = "";
    *(_WORD *)&v74[10] = 2049;
    *(void *)&v74[12] = v58;
    __int16 v75 = 2049;
    uint64_t v76 = v59;
    _os_log_impl((void *)&_mh_execute_header, v57, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#gm,submitGridMetric\", \"gridTransitions\":%{private}lu, \"slcCount\":%{private}lu}", v73, 0x26u);
  }
  *(_DWORD *)(a1 + 20) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 40) = *(void *)(a1 + 32);
  if (*(void *)(a1 + 72))
  {
    uint64_t v60 = *(void *)(a1 + 56);
    *(void *)(a1 + 56) = v34;
    *(void *)(*v34 + 16) = 0;
    void *v34 = 0;
    v34[1] = 0;
    if (*(void *)(v60 + 8)) {
      uint64_t v61 = *(void *)(v60 + 8);
    }
    else {
      uint64_t v61 = v60;
    }
    *(void *)int v73 = a1 + 56;
    *(void *)__int16 v74 = v61;
    *(void *)&v74[8] = v61;
    if (v61) {
      *(void *)__int16 v74 = sub_100029650(v61);
    }
    sub_10008924C((uint64_t)v73);
  }
  *(unsigned char *)(a1 + 16) = 0;
}

id sub_10008913C(uint64_t a1)
{
  v6[0] = @"gridTransitions";
  uint64_t v1 = a1 + 32;
  double v2 = +[NSNumber numberWithUnsignedInt:**(unsigned int **)(a1 + 32)];
  v6[1] = @"slcCount";
  v7[0] = v2;
  id v3 = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v1 + 4)];
  v7[1] = v3;
  uint64_t v4 = +[NSDictionary dictionaryWithObjects:v7 forKeys:v6 count:2];

  return v4;
}

void sub_100089224(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

uint64_t sub_10008924C(uint64_t a1)
{
  sub_100015B14(*(void *)a1, *(void **)(a1 + 16));
  double v2 = *(void **)(a1 + 8);
  if (v2)
  {
    id v3 = (void *)v2[2];
    if (v3)
    {
      do
      {
        double v2 = v3;
        id v3 = (void *)v3[2];
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    sub_100015B14(*(void *)a1, v2);
  }
  return a1;
}

void *SALockMonitorProd::SALockMonitorProd(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  sub_10000F63C((uint64_t)v10, a3);
  sub_10004DB88((uint64_t)v9, a4);
  sub_100087EA4(a1, v7, (uint64_t)v10, (uint64_t)v9);
  sub_100021E70(v9);
  sub_10000F6D4(v10);
  *a1 = off_1000FA440;

  return a1;
}

void sub_100089370(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  sub_100021E70((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);

  _Unwind_Resume(a1);
}

void sub_1000893A8(void *a1)
{
  BOOL v2 = sub_1000895D4();
  id v3 = a1[9];
  uint64_t v10 = (uint64_t)_NSConcreteStackBlock;
  *(void *)&long long v11 = 3221225472;
  *((void *)&v11 + 1) = sub_100089BE8;
  uint64_t v12 = &unk_1000FA458;
  double v13 = a1;
  BOOL v14 = v2;
  dispatch_async(v3, &v10);
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterAddObserver(DarwinNotifyCenter, a1, (CFNotificationCallback)sub_1000896A8, kMobileKeyBagLockStatusNotification, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  int v5 = MKBDeviceUnlockedSinceBoot();
  uint64_t v6 = SALogObjectGeneral;
  BOOL v7 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    if (v7)
    {
      uint64_t v10 = 68289026;
      LOWORD(v11) = 2082;
      *(void *)((char *)&v11 + 2) = "";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#lockMon,firstUnlockedAtStartup\"}", (uint8_t *)&v10, 0x12u);
    }
    uint64_t v8 = a1[9];
    uint64_t v10 = (uint64_t)_NSConcreteStackBlock;
    *(void *)&long long v11 = 3221225472;
    *((void *)&v11 + 1) = sub_100089A6C;
    uint64_t v12 = &unk_1000F5EA8;
    double v13 = a1;
    dispatch_async(v8, &v10);
  }
  else
  {
    if (v7)
    {
      uint64_t v10 = 68289026;
      LOWORD(v11) = 2082;
      *(void *)((char *)&v11 + 2) = "";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#lockMon,neverUnlockedAtStartup\"}", (uint8_t *)&v10, 0x12u);
    }
    double v9 = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterAddObserver(v9, a1, (CFNotificationCallback)sub_100089890, @"com.apple.mobile.keybagd.first_unlock", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  }
}

BOOL sub_1000895D4()
{
  int v0 = MKBGetDeviceLockState();
  uint64_t v1 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v3[0] = 68289283;
    v3[1] = 0;
    __int16 v4 = 2082;
    int v5 = "";
    __int16 v6 = 1025;
    int v7 = v0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#lockMon,isLockedCheck\", \"lockState\":%{private}d}", (uint8_t *)v3, 0x18u);
  }
  return v0 != 0;
}

void sub_1000896A8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    if (a3) {
      double v9 = (const char *)[a3 UTF8String];
    }
    else {
      double v9 = "Unknown__";
    }
    uint64_t v13 = 68289539;
    *(_WORD *)BOOL v14 = 2082;
    *(void *)&_DWORD v14[2] = "";
    *(_WORD *)&unsigned char v14[10] = 2081;
    *(void *)&v14[12] = v9;
    *(_WORD *)&v14[20] = 2113;
    *(void *)&v14[22] = a5;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#lockMon,onKeybagLockStatus\", \"name\":%{private, location:escape_only}s, \"userInfo\":%{private, location:escape_only}@}", (uint8_t *)&v13, 0x26u);
  }

  if (a2)
  {
    BOOL v10 = sub_1000895D4();
    long long v11 = *(NSObject **)(a2 + 72);
    uint64_t v13 = (uint64_t)_NSConcreteStackBlock;
    *(void *)BOOL v14 = 3221225472;
    *(void *)&v14[8] = sub_100089BE8;
    *(void *)&v14[16] = &unk_1000FA458;
    *(void *)&v14[24] = a2;
    BOOL v15 = v10;
    dispatch_async(v11, &v13);
  }
  else
  {
    uint64_t v12 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = 68289026;
      *(_WORD *)BOOL v14 = 2082;
      *(void *)&_DWORD v14[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#lockMon,invalidObjectOnLockStatus\"}", (uint8_t *)&v13, 0x12u);
    }
  }
}

void sub_100089878(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100089890(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    if (a3) {
      double v9 = (const char *)[a3 UTF8String];
    }
    else {
      double v9 = "Unknown__";
    }
    uint64_t v12 = 68289539;
    *(_WORD *)uint64_t v13 = 2082;
    *(void *)&_DWORD v13[2] = "";
    *(_WORD *)&v13[10] = 2081;
    *(void *)&v13[12] = v9;
    *(_WORD *)&v13[20] = 2113;
    *(void *)&v13[22] = a5;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#lockMon,onKeybagFirstUnlock\", \"name\":%{private, location:escape_only}s, \"userInfo\":%{private, location:escape_only}@}", (uint8_t *)&v12, 0x26u);
  }

  if (a2)
  {
    BOOL v10 = *(NSObject **)(a2 + 72);
    uint64_t v12 = (uint64_t)_NSConcreteStackBlock;
    *(void *)uint64_t v13 = 3221225472;
    *(void *)&v13[8] = sub_100089A6C;
    *(void *)&v13[16] = &unk_1000F5EA8;
    *(void *)&unsigned char v13[24] = a2;
    dispatch_async(v10, &v12);
  }
  else
  {
    long long v11 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = 68289026;
      *(_WORD *)uint64_t v13 = 2082;
      *(void *)&_DWORD v13[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#lockMon,invalidObjectOnFirstUnlock\"}", (uint8_t *)&v12, 0x12u);
    }
  }
}

void sub_100089A54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100089A6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_100089AF4;
  v3[3] = &unk_1000F5EA8;
  void v3[4] = v1;
  sub_100089AF4((uint64_t)v3);
}

uint64_t sub_100089AF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  BOOL v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289026;
    v5[1] = 0;
    __int16 v6 = 2082;
    int v7 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#lockMon,onFirstUnlocked\"}", (uint8_t *)v5, 0x12u);
  }
  *((_WORD *)sub_100003318() + 61) = 257;
  uint64_t v3 = *(void *)(v1 + 32);
  if (!v3) {
    sub_100005520();
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)v3 + 48))(v3);
}

void sub_100089BE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _DWORD v4[2] = sub_100089C84;
  v4[3] = &unk_1000FA458;
  void v4[4] = v2;
  char v5 = *(unsigned char *)(a1 + 40);
  sub_100089C84((uint64_t)v4);
}

uint64_t sub_100089C84(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    if (*(unsigned char *)(a1 + 40)) {
      __int16 v4 = "locked";
    }
    else {
      __int16 v4 = "unlocked";
    }
    v6[0] = 68289283;
    v6[1] = 0;
    __int16 v7 = 2082;
    uint64_t v8 = "";
    __int16 v9 = 2081;
    BOOL v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#lockMon,onLockStatus\", \"status\":%{private, location:escape_only}s}", (uint8_t *)v6, 0x1Cu);
  }
  return sub_100045970(v2 + 40, *(unsigned char *)(a1 + 40));
}

void sub_100089D80(uint64_t a1)
{
  sub_100087F84(a1);

  operator delete();
}

uint64_t SACoreRoutineProd::SACoreRoutineProd(uint64_t a1, void *a2, char *a3, uint64_t a4)
{
  id v7 = a2;
  if (a3[23] < 0)
  {
    sub_100004CB8(__p, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a3;
    uint64_t v19 = *((void *)a3 + 2);
  }
  sub_10005CBEC((uint64_t)v24, a4);
  sub_10005CC84((uint64_t)v25, a4 + 32);
  uint64_t v8 = (void *)sub_10005CD1C((uint64_t)&v26, a4 + 64);
  *(void *)a1 = off_1000FA668;
  sub_10005CEBC(v8);
  sub_10005CDB4(v25);
  sub_10005CE38(v24);
  if (SHIBYTE(v19) < 0) {
    operator delete(__p[0]);
  }
  *(void *)a1 = off_1000FA4A0;
  *(void *)(a1 + 8) = 0;
  __int16 v9 = (void **)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  id v10 = v7;
  *(void *)(a1 + 32) = v10;
  sub_10005CBEC(a1 + 40, a4);
  sub_10005CC84(a1 + 72, a4 + 32);
  sub_10005CD1C(a1 + 104, a4 + 64);
  *(_OWORD *)(a1 + 144) = 0u;
  *(_WORD *)(a1 + 136) = 0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  long long v11 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v21 = 0;
    __int16 v22 = 2082;
    long long v23 = "";
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,SACoreRoutineProd\"}", buf, 0x12u);
  }
  if (a3[23] < 0)
  {
    if (*((void *)a3 + 1)) {
      goto LABEL_10;
    }
  }
  else if (a3[23])
  {
LABEL_10:
    id v12 = objc_alloc((Class)RTRoutineManager);
    if (a3[23] < 0) {
      a3 = *(char **)a3;
    }
    uint64_t v13 = +[NSString stringWithUTF8String:a3];
    id v14 = [v12 initWithRestorationIdentifier:v13];
    BOOL v15 = *v9;
    *__int16 v9 = v14;

    goto LABEL_16;
  }
  uint64_t v16 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v21 = 0;
    __int16 v22 = 2082;
    long long v23 = "";
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,SACoreRoutineProd,failed,invalid UniqueId\"}", buf, 0x12u);
  }
LABEL_16:

  return a1;
}

void sub_10008A08C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10008A154(uint64_t a1)
{
  *(void *)a1 = off_1000FA4A0;
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = 68289026;
    __int16 v6 = 2082;
    id v7 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,SACoreRoutineProd released\"}", (uint8_t *)&v5, 0x12u);
  }
  uint64_t v5 = a1 + 168;
  sub_10008D170((void ***)&v5);
  uint64_t v3 = *(void **)(a1 + 144);
  if (v3)
  {
    *(void *)(a1 + 152) = v3;
    operator delete(v3);
  }
  sub_10005CEBC((void *)(a1 + 104));
  sub_10005CDB4((void *)(a1 + 72));
  sub_10005CE38((void *)(a1 + 40));

  return a1;
}

void sub_10008A27C(uint64_t a1)
{
  sub_10008A154(a1);

  operator delete();
}

void sub_10008A2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int16 v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289538;
    int v12 = 0;
    __int16 v13 = 2082;
    id v14 = "";
    __int16 v15 = 2050;
    uint64_t v16 = a2;
    __int16 v17 = 2050;
    uint64_t v18 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,getHistoricalLocation\", \"starTime\":%{public}llu, \"endTime\":%{public}llu}", buf, 0x26u);
  }
  if (!*(void *)(a1 + 8))
  {
    id v7 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v12 = 0;
    __int16 v13 = 2082;
    id v14 = "";
    uint64_t v8 = "{\"msg%{public}.0s\":\"#coreRoutine,getHistoricalLocation,invalid instance\"}";
    goto LABEL_12;
  }
  if (a2 > a3)
  {
    id v7 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v12 = 0;
    __int16 v13 = 2082;
    id v14 = "";
    uint64_t v8 = "{\"msg%{public}.0s\":\"#coreRoutine,invalid time/duration\"}";
LABEL_12:
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, v8, buf, 0x12u);
    return;
  }
  if (*(unsigned char *)(a1 + 136))
  {
    id v7 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v12 = 0;
    __int16 v13 = 2082;
    id v14 = "";
    uint64_t v8 = "{\"msg%{public}.0s\":\"#coreRoutine,getHistoricalLocation,request in progress\"}";
    goto LABEL_12;
  }
  *(unsigned char *)(a1 + 136) = 1;
  *(void *)(a1 + 152) = *(void *)(a1 + 144);
  __int16 v9 = *(NSObject **)(a1 + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10008A510;
  block[3] = &unk_1000FA4F8;
  void block[4] = a1;
  void block[5] = a3;
  void block[6] = a2;
  dispatch_async(v9, block);
}

void sub_10008A510(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _DWORD v4[2] = sub_10008A5AC;
  v4[3] = &unk_1000FA4F8;
  void v4[4] = v2;
  long long v5 = *(_OWORD *)(a1 + 40);
  sub_10008A5AC((uint64_t)v4);
}

void sub_10008A5AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  *(float64x2_t *)(v2 + 16) = vcvtq_f64_s64(*(int64x2_t *)(a1 + 40));
  uint64_t v3 = +[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:");
  uint64_t v4 = +[NSDate dateWithTimeIntervalSinceReferenceDate:(double)*(uint64_t *)(a1 + 48)];
  long long v5 = (void *)v4;
  if (v3) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {
    id v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v16 = 0;
      __int16 v17 = 2082;
      uint64_t v18 = "";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#coreRoutine,getHistoricalLocation,invalid endTime or startTime\"}", buf, 0x12u);
    }
  }
  else
  {
    id v8 = [objc_alloc((Class)NSDateInterval) initWithStartDate:v4 endDate:v3];
    __int16 v9 = v8;
    if (v8)
    {
      id v10 = [objc_alloc((Class)RTStoredLocationEnumerationOptions) initWithDateInterval:v8 horizontalAccuracy:200 batchSize:0 boundingBoxLocation:6378135.0];
      if (v10)
      {
        long long v11 = *(void **)(v2 + 8);
        v14[0] = _NSConcreteStackBlock;
        v14[1] = 3221225472;
        _DWORD v14[2] = sub_10008A884;
        v14[3] = &unk_1000FA4D8;
        void v14[4] = v2;
        [v11 enumerateStoredLocationsWithOptions:v10 usingBlock:v14];
      }
      else
      {
        __int16 v13 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)uint64_t buf = 68289026;
          int v16 = 0;
          __int16 v17 = 2082;
          uint64_t v18 = "";
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#coreRoutine,getHistoricalLocation,invalid enumerationOptions\"}", buf, 0x12u);
        }
      }
    }
    else
    {
      int v12 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        int v16 = 0;
        __int16 v17 = 2082;
        uint64_t v18 = "";
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#coreRoutine,getHistoricalLocation,invalid interval\"}", buf, 0x12u);
      }
    }
  }
}

void sub_10008A848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10008A884(uint64_t a1, void *a2, void *a3, unsigned __int8 *a4)
{
  id v81 = a2;
  id v7 = a3;
  uint64_t v80 = v7;
  if (!a4)
  {
    uint64_t v14 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_67;
    }
    uint64_t buf = 68289026;
    __int16 v90 = 2082;
    unint64_t v91 = "";
    __int16 v15 = "{\"msg%{public}.0s\":\"#coreRoutine,received update from CoreRoutine,Stop nil\"}";
    int v16 = v14;
    goto LABEL_9;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  if (v7)
  {
    __int16 v9 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      id v10 = [v80 description];
      id v11 = [v10 UTF8String];
      int v12 = *a4;
      uint64_t buf = 68289538;
      __int16 v90 = 2082;
      unint64_t v91 = "";
      __int16 v92 = 2082;
      *(void *)uint64_t v93 = v11;
      *(_WORD *)&v93[8] = 1026;
      int v94 = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,received update from CoreRoutine\", \"Error\":%{public, location:escape_only}s, \"stop\":%{public}hhd}", (uint8_t *)&buf, 0x22u);
    }
    uint64_t v13 = *(void *)(v8 + 64);
    if (!v13) {
      sub_100005520();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v13 + 48))(v13, v8 + 144);
    *(unsigned char *)(v8 + 136) = 0;
    goto LABEL_67;
  }
  uint64_t v18 = SALogObjectGeneral;
  if (!v81)
  {
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_67;
    }
    uint64_t buf = 68289026;
    __int16 v90 = 2082;
    unint64_t v91 = "";
    __int16 v15 = "{\"msg%{public}.0s\":\"#coreRoutine,received update from CoreRoutine,locations nil\"}";
    int v16 = v18;
LABEL_9:
    uint32_t v17 = 18;
LABEL_10:
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, v15, (uint8_t *)&buf, v17);
    goto LABEL_67;
  }
  uint64_t v19 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v20 = [v81 count];
    int v21 = *a4;
    uint64_t buf = 68289538;
    __int16 v90 = 2082;
    unint64_t v91 = "";
    __int16 v92 = 1026;
    *(_DWORD *)uint64_t v93 = v20;
    *(_WORD *)&v93[4] = 1026;
    *(_DWORD *)&v93[6] = v21;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,received update from CoreRoutine\", \"locationCount\":%{public}d, \"stop\":%{public}hhd}", (uint8_t *)&buf, 0x1Eu);
  }

  long long v86 = 0u;
  long long v87 = 0u;
  long long v84 = 0u;
  long long v85 = 0u;
  id v22 = v81;
  id v23 = [v22 countByEnumeratingWithState:&v84 objects:v88 count:16];
  if (v23)
  {
    uint64_t v24 = *(void *)v85;
    uint64_t v25 = (void **)(v8 + 144);
    uint64_t v26 = (void *)(v8 + 160);
    do
    {
      for (uint64_t i = 0; i != v23; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v85 != v24) {
          objc_enumerationMutation(v22);
        }
        double v28 = *(void **)(*((void *)&v84 + 1) + 8 * i);
        uint64_t v29 = [v28 timestamp:v80];
        [v29 timeIntervalSinceReferenceDate];
        double v31 = v30;

        *(void *)&long long v32 = *(void *)(v8 + 24);
        if (v31 >= *(double *)&v32)
        {
          *(void *)&long long v32 = *(void *)(v8 + 16);
          if (v31 <= *(double *)&v32)
          {
            if (*(void *)(v8 + 144) == *(void *)(v8 + 152))
            {
              [v28 coordinate];
              uint64_t v50 = v49;
              [v28 coordinate];
              uint64_t v52 = v51;
              [v28 horizontalAccuracy];
              uint64_t v54 = v53;
              BOOL v56 = *(double **)(v8 + 152);
              unint64_t v55 = *(void *)(v8 + 160);
              if ((unint64_t)v56 >= v55)
              {
                uint64_t v58 = (double *)*v25;
                uint64_t v59 = ((char *)v56 - (unsigned char *)*v25) >> 5;
                unint64_t v60 = v59 + 1;
                if ((unint64_t)(v59 + 1) >> 59) {
                  sub_1000050E8();
                }
                uint64_t v61 = v55 - (void)v58;
                if (v61 >> 4 > v60) {
                  unint64_t v60 = v61 >> 4;
                }
                if ((unint64_t)v61 >= 0x7FFFFFFFFFFFFFE0) {
                  unint64_t v62 = 0x7FFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v62 = v60;
                }
                if (v62)
                {
                  long long v63 = (char *)sub_10004D614(v8 + 160, v62);
                  uint64_t v58 = *(double **)(v8 + 144);
                  BOOL v56 = *(double **)(v8 + 152);
                }
                else
                {
                  long long v63 = 0;
                }
                uint64_t v70 = &v63[32 * v59];
                *(double *)uint64_t v70 = v31;
                *((void *)v70 + 1) = v50;
                *((void *)v70 + 2) = v52;
                *((void *)v70 + 3) = v54;
                __int16 v71 = v70;
                if (v56 != v58)
                {
                  do
                  {
                    long long v72 = *((_OWORD *)v56 - 1);
                    *((_OWORD *)v71 - 2) = *((_OWORD *)v56 - 2);
                    *((_OWORD *)v71 - 1) = v72;
                    v71 -= 32;
                    v56 -= 4;
                  }
                  while (v56 != v58);
                  uint64_t v58 = (double *)*v25;
                }
                unint64_t v57 = (double *)(v70 + 32);
                *(void *)(v8 + 144) = v71;
                *(void *)(v8 + 152) = v70 + 32;
                *(void *)(v8 + 160) = &v63[32 * v62];
                if (v58) {
                  operator delete(v58);
                }
              }
              else
              {
                double *v56 = v31;
                *((void *)v56 + 1) = v50;
                unint64_t v57 = v56 + 4;
                *((void *)v56 + 2) = v52;
                *((void *)v56 + 3) = v53;
              }
              *(void *)(v8 + 152) = v57;
              int v73 = SALogObjectGeneral;
              if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t buf = 68289026;
                __int16 v90 = 2082;
                unint64_t v91 = "";
                _os_log_impl((void *)&_mh_execute_header, v73, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,fHistoricalLocation empty\"}", (uint8_t *)&buf, 0x12u);
              }
            }
            else
            {
              [v28 coordinate];
              double v34 = v33;
              [v28 coordinate];
              double v36 = v35;
              [v28 horizontalAccuracy];
              uint64_t v82 = v37;
              unint64_t v38 = *(double **)(v8 + 152);
              double v83 = *(v38 - 4);
              double v39 = *(v38 - 3);
              long double v40 = v39 * 3.14159265 / 180.0;
              double v41 = (*(v38 - 2) - v36) * 3.14159265 / 180.0;
              long double v42 = sin((v39 - v34) * 3.14159265 / 180.0 * 0.5);
              long double v43 = v42 * v42;
              long double v44 = sin(v41 * 0.5);
              long double v45 = cos(v40) * (v44 * v44);
              long double v46 = cos(v34 * 3.14159265 / 180.0);
              long double v47 = asin(sqrt(v43 + v45 * v46));
              if ((v47 + v47) * 6371000.0 > 100.0 || (*(double *)&long long v32 = v31 - v83, v31 - v83 > 180.0))
              {
                if ((unint64_t)v38 >= *v26)
                {
                  unsigned int v64 = (double *)*v25;
                  uint64_t v65 = ((char *)v38 - (unsigned char *)*v25) >> 5;
                  unint64_t v66 = v65 + 1;
                  if ((unint64_t)(v65 + 1) >> 59) {
                    sub_1000050E8();
                  }
                  uint64_t v67 = *v26 - (void)v64;
                  if (v67 >> 4 > v66) {
                    unint64_t v66 = v67 >> 4;
                  }
                  if ((unint64_t)v67 >= 0x7FFFFFFFFFFFFFE0) {
                    unint64_t v68 = 0x7FFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v68 = v66;
                  }
                  if (v68)
                  {
                    uint64_t v69 = (char *)sub_10004D614(v8 + 160, v68);
                    unsigned int v64 = *(double **)(v8 + 144);
                    unint64_t v38 = *(double **)(v8 + 152);
                  }
                  else
                  {
                    uint64_t v69 = 0;
                  }
                  __int16 v74 = (double *)&v69[32 * v65];
                  *__int16 v74 = v31;
                  v74[1] = v34;
                  *(void *)&long long v32 = v82;
                  v74[2] = v36;
                  *((void *)v74 + 3) = v82;
                  __int16 v75 = v74;
                  if (v38 != v64)
                  {
                    do
                    {
                      long long v32 = *((_OWORD *)v38 - 2);
                      long long v76 = *((_OWORD *)v38 - 1);
                      *((_OWORD *)v75 - 2) = v32;
                      *((_OWORD *)v75 - 1) = v76;
                      v75 -= 4;
                      v38 -= 4;
                    }
                    while (v38 != v64);
                    unsigned int v64 = (double *)*v25;
                  }
                  unint64_t v48 = v74 + 4;
                  *(void *)(v8 + 144) = v75;
                  *(void *)(v8 + 152) = v74 + 4;
                  *(void *)(v8 + 160) = &v69[32 * v68];
                  if (v64) {
                    operator delete(v64);
                  }
                }
                else
                {
                  double *v38 = v31;
                  v38[1] = v34;
                  unint64_t v48 = v38 + 4;
                  *(void *)&long long v32 = v82;
                  v38[2] = v36;
                  *((void *)v38 + 3) = v82;
                }
                *(void *)(v8 + 152) = v48;
              }
            }
          }
        }
      }
      id v23 = [v22 countByEnumeratingWithState:&v84 objects:v88 count:16];
    }
    while (v23);
  }

  if (![v22 count])
  {
    uint64_t v77 = *(void *)(v8 + 64);
    if (!v77) {
      sub_100005520();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v77 + 48))(v77, v8 + 144);
    *(unsigned char *)(v8 + 136) = 0;
    uint64_t v78 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v79 = (uint64_t)(*(void *)(v8 + 152) - *(void *)(v8 + 144)) >> 5;
      uint64_t buf = 68289282;
      __int16 v90 = 2082;
      unint64_t v91 = "";
      __int16 v92 = 2050;
      *(void *)uint64_t v93 = v79;
      __int16 v15 = "{\"msg%{public}.0s\":\"#coreRoutine,fHistoricalLocation\", \"historicalDataLen\":%{public}lu}";
      int v16 = v78;
      uint32_t v17 = 28;
      goto LABEL_10;
    }
  }
LABEL_67:
}

void sub_10008B040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_10008B0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289538;
    int v20 = 0;
    __int16 v21 = 2082;
    id v22 = "";
    __int16 v23 = 2050;
    uint64_t v24 = a2;
    __int16 v25 = 2050;
    uint64_t v26 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,getPeopleDensity\", \"startTime\":%{public}llu, \"endTime\":%{public}llu}", buf, 0x26u);
  }
  if (!*(void *)(a1 + 8))
  {
    id v7 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v20 = 0;
    __int16 v21 = 2082;
    id v22 = "";
    uint64_t v8 = "{\"msg%{public}.0s\":\"#coreRoutine,getPeopleDensity,invalid instance\"}";
    goto LABEL_12;
  }
  if (a2 > a3)
  {
    id v7 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v20 = 0;
    __int16 v21 = 2082;
    id v22 = "";
    uint64_t v8 = "{\"msg%{public}.0s\":\"#coreRoutine,getPeopleDensity,invalid time/duration\"}";
LABEL_12:
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, v8, buf, 0x12u);
    return;
  }
  if (*(unsigned char *)(a1 + 137))
  {
    id v7 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v20 = 0;
    __int16 v21 = 2082;
    id v22 = "";
    uint64_t v8 = "{\"msg%{public}.0s\":\"#coreRoutine,getPeopleDensity,request in progress\"}";
    goto LABEL_12;
  }
  *(unsigned char *)(a1 + 137) = 1;
  __int16 v9 = +[NSDate dateWithTimeIntervalSinceReferenceDate:(double)a3];
  id v10 = +[NSDate dateWithTimeIntervalSinceReferenceDate:(double)a2];
  id v11 = v10;
  if (v9) {
    BOOL v12 = v10 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  if (v12)
  {
    uint64_t v13 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v20 = 0;
      __int16 v21 = 2082;
      id v22 = "";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#coreRoutine,getPeopleDensity,invalid endTime or startTime\"}", buf, 0x12u);
    }
  }
  else
  {
    uint64_t v14 = *(void **)(a1 + 8);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    _DWORD v15[2] = sub_10008B418;
    void v15[3] = &unk_1000FA548;
    uint64_t v18 = a1;
    id v16 = v10;
    id v17 = v9;
    [v14 fetchPeopleDensityHistoryFromStartDate:v16 endDate:v17 completionHandler:v15];
  }
}

void sub_10008B3E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_10008B418(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(NSObject **)(v7 + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10008B50C;
  block[3] = &unk_1000FA520;
  uint64_t v16 = v7;
  id v12 = *(id *)(a1 + 32);
  id v13 = *(id *)(a1 + 40);
  id v14 = v5;
  id v15 = v6;
  id v9 = v6;
  id v10 = v5;
  dispatch_async(v8, block);
}

void sub_10008B50C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _DWORD v4[2] = sub_10008B61C;
  v4[3] = &unk_1000FA520;
  uint64_t v9 = v2;
  id v5 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  id v7 = *(id *)(a1 + 48);
  id v8 = *(id *)(a1 + 56);
  sub_10008B61C((uint64_t)v4);
}

void sub_10008B5F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_10008B61C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void **)(a1 + 40);
  id v5 = *(void **)(a1 + 48);
  id v75 = *(id *)(a1 + 32);
  id v78 = v4;
  id v71 = v5;
  id v72 = v2;
  id v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v96 = 0;
    __int16 v97 = 2082;
    uint64_t v98 = "";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,onPeopleDensityReceived\"}", buf, 0x12u);
  }
  uint64_t v76 = v3;
  uint64_t v7 = *(void *)(v3 + 168);
  __int16 v74 = (void *)(v3 + 168);
  for (uint64_t i = *(void *)(v3 + 176); i != v7; i -= 48)

  *(void *)(v3 + 176) = v7;
  if (v72)
  {
    uint64_t v9 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      id v10 = [v72 description];
      id v11 = [v10 UTF8String];
      *(_DWORD *)uint64_t buf = 68289282;
      int v96 = 0;
      __int16 v97 = 2082;
      uint64_t v98 = "";
      __int16 v99 = 2082;
      id v100 = v11;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,onPeopleDensityReceived,received update\", \"Error\":%{public, location:escape_only}s}", buf, 0x1Cu);
    }
    uint64_t v12 = *(void *)(v3 + 96);
    if (v12)
    {
LABEL_71:
      (*(void (**)(uint64_t, void *))(*(void *)v12 + 48))(v12, v74);
      *(unsigned char *)(v3 + 137) = 0;
      goto LABEL_72;
    }
LABEL_75:
    sub_100005520();
  }
  if (!v71)
  {
    id v14 = SALogObjectGeneral;
LABEL_68:
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v96 = 0;
      __int16 v97 = 2082;
      uint64_t v98 = "";
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,onPeopleDensityReceived,received update,no densityEvents\"}", buf, 0x12u);
    }
    uint64_t v12 = *(void *)(v3 + 96);
    if (v12) {
      goto LABEL_71;
    }
    goto LABEL_75;
  }
  id v13 = [v71 count];
  id v14 = SALogObjectGeneral;
  if (!v13) {
    goto LABEL_68;
  }
  id v15 = (id)SALogObjectGeneral;
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v16 = [v71 count];
    *(_DWORD *)uint64_t buf = 68289282;
    int v96 = 0;
    __int16 v97 = 2082;
    uint64_t v98 = "";
    __int16 v99 = 1026;
    LODWORD(v100) = v16;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,onPeopleDensityReceived,received update,\", \"count\":%{public}d}", buf, 0x18u);
  }

  long long v81 = 0u;
  long long v82 = 0u;
  long long v79 = 0u;
  long long v80 = 0u;
  id obj = v71;
  id v17 = [obj countByEnumeratingWithState:&v79 objects:buf count:16];
  if (v17)
  {
    uint64_t j = *(void *)v80;
    uint64_t v73 = *(void *)v80;
    do
    {
      uint64_t v19 = 0;
      do
      {
        if (*(void *)v80 != j) {
          objc_enumerationMutation(obj);
        }
        int v20 = *(void **)(*((void *)&v79 + 1) + 8 * (void)v19);
        __int16 v21 = [v20 startDate];
        BOOL v22 = v21 == 0;

        if (v22)
        {
          uint64_t v29 = SALogObjectGeneral;
          if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_59;
          }
          *(_DWORD *)double v83 = 68289026;
          int v84 = 0;
          __int16 v85 = 2082;
          long long v86 = "";
          double v30 = v29;
          double v31 = "{\"msg%{public}.0s\":\"#coreRoutine,onPeopleDensityReceived,invalid start time,skipping\"}";
          goto LABEL_30;
        }
        __int16 v23 = [v20 startDate];
        [v23 timeIntervalSinceDate:v78];
        if (v24 > 0.0)
        {

LABEL_28:
          uint64_t v32 = SALogObjectGeneral;
          if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_59;
          }
          *(_DWORD *)double v83 = 68289026;
          int v84 = 0;
          __int16 v85 = 2082;
          long long v86 = "";
          double v30 = v32;
          double v31 = "{\"msg%{public}.0s\":\"#coreRoutine,onPeopleDensityReceived,event out of bound,skipping\"}";
LABEL_30:
          _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, v31, v83, 0x12u);
          goto LABEL_59;
        }
        __int16 v25 = [v20 endDate];
        if (v25)
        {
          uint64_t v26 = [v20 endDate];
          [v26 timeIntervalSinceDate:v75];
          BOOL v28 = v27 < 0.0;

          if (v28) {
            goto LABEL_28;
          }
        }
        else
        {
        }
        double v33 = [v20 startDate];
        [v33 timeIntervalSinceReferenceDate];
        unint64_t v35 = v34;

        [v20 scanDuration];
        [v20 densityScore];
        uint64_t v37 = v36;
        [v20 scanDuration];
        uint64_t v39 = v38;
        id v40 = objc_alloc((Class)NSDictionary);
        double v41 = [v20 rssiHistogram];
        id v42 = [v40 initWithDictionary:v41];

        long double v43 = [v20 endDate];

        if (v43)
        {
          long double v44 = [v20 endDate];
          [v44 timeIntervalSinceReferenceDate];
          unint64_t v1 = v45;

          char v46 = 1;
        }
        else
        {
          char v46 = 0;
          v1 &= 0xFFFFFFFFFFFFFF00;
        }
        long double v47 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          unint64_t v48 = v1;
          *(_DWORD *)double v83 = 68290051;
          if (!v43) {
            unint64_t v48 = 0xBFF0000000000000;
          }
          int v84 = 0;
          __int16 v85 = 2082;
          long long v86 = "";
          __int16 v87 = 2049;
          unint64_t v88 = v35;
          __int16 v89 = 2049;
          unint64_t v90 = v48;
          __int16 v91 = 2049;
          uint64_t v92 = v39;
          __int16 v93 = 2049;
          uint64_t v94 = v37;
          _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,onPeopleDensityReceived,adding density\", \"startTimestamp\":\"%{private}0.2f\", \"endTimestamp\":\"%{private}0.2f\", \"scanDuration\":\"%{private}0.2f\", \"densityScore\":\"%{private}0.2f\"}", v83, 0x3Au);
        }
        [v42 enumerateKeysAndObjectsUsingBlock:&stru_1000FA568];
        uint64_t v49 = (void *)v76;
        unint64_t v51 = *(void *)(v76 + 176);
        unint64_t v50 = *(void *)(v76 + 184);
        if (v51 >= v50)
        {
          unint64_t v53 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v51 - *v74) >> 4);
          unint64_t v54 = v53 + 1;
          if (v53 + 1 > 0x555555555555555) {
            sub_1000050E8();
          }
          unint64_t v55 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v50 - *v74) >> 4);
          if (2 * v55 > v54) {
            unint64_t v54 = 2 * v55;
          }
          if (v55 >= 0x2AAAAAAAAAAAAAALL) {
            unint64_t v56 = 0x555555555555555;
          }
          else {
            unint64_t v56 = v54;
          }
          if (v56)
          {
            if (v56 > 0x555555555555555) {
              sub_100004E00();
            }
            unint64_t v57 = (char *)operator new(48 * v56);
            uint64_t v49 = (void *)v76;
          }
          else
          {
            unint64_t v57 = 0;
          }
          uint64_t v58 = &v57[48 * v53];
          *(void *)uint64_t v58 = v37;
          *((void *)v58 + 1) = v35;
          *((void *)v58 + 2) = v1;
          v58[24] = v46;
          *((void *)v58 + 4) = v39;
          *((void *)v58 + 5) = v42;
          uint64_t v59 = (id *)v49[21];
          unint64_t v60 = (id *)v49[22];
          if (v60 == v59)
          {
            uint64_t v52 = v58 + 48;
            v49[21] = v58;
            v49[22] = v58 + 48;
            v49[23] = &v57[48 * v56];
            uint64_t j = v73;
            if (!v60) {
              goto LABEL_58;
            }
          }
          else
          {
            uint64_t v61 = v58;
            do
            {
              long long v62 = *((_OWORD *)v60 - 3);
              long long v63 = *((_OWORD *)v60 - 2);
              *((void *)v61 - 2) = *(v60 - 2);
              *((_OWORD *)v61 - 3) = v62;
              *((_OWORD *)v61 - 2) = v63;
              uint64_t v64 = (uint64_t)*(v60 - 1);
              *(v60 - 1) = 0;
              *((void *)v61 - 1) = v64;
              v61 -= 48;
              v60 -= 6;
            }
            while (v60 != v59);
            uint64_t v65 = v49;
            unint64_t v60 = (id *)v49[21];
            unint64_t v66 = (id *)v49[22];
            uint64_t v52 = v58 + 48;
            v65[21] = v61;
            v65[22] = v58 + 48;
            v65[23] = &v57[48 * v56];
            for (uint64_t j = v73; v66 != v60; v66 -= 6)

            uint64_t v49 = (void *)v76;
            if (!v60) {
              goto LABEL_58;
            }
          }
          operator delete(v60);
        }
        else
        {
          *(void *)unint64_t v51 = v37;
          *(void *)(v51 + 8) = v35;
          *(void *)(v51 + 16) = v1;
          *(unsigned char *)(v51 + 24) = v46;
          *(void *)(v51 + 32) = v39;
          *(void *)(v51 + 40) = v42;
          uint64_t v52 = (char *)(v51 + 48);
        }
LABEL_58:
        v49[22] = v52;

LABEL_59:
        uint64_t v19 = (char *)v19 + 1;
      }
      while (v19 != v17);
      id v67 = [obj countByEnumeratingWithState:&v79 objects:buf count:16];
      id v17 = v67;
    }
    while (v67);
  }

  uint64_t v68 = *(void *)(v76 + 96);
  if (!v68) {
    goto LABEL_75;
  }
  (*(void (**)(uint64_t, void *))(*(void *)v68 + 48))(v68, v74);
  *(unsigned char *)(v76 + 137) = 0;
  uint64_t v69 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v70 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v76 + 176) - *(void *)(v76 + 168)) >> 4);
    *(_DWORD *)double v83 = 68289282;
    int v84 = 0;
    __int16 v85 = 2082;
    long long v86 = "";
    __int16 v87 = 2050;
    unint64_t v88 = v70;
    _os_log_impl((void *)&_mh_execute_header, v69, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,onPeopleDensityReceived,fetch completed\", \"densityLen\":%{public}lu}", v83, 0x1Cu);
  }
LABEL_72:
}

void sub_10008BF5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_10008C030(id a1, id a2, id a3, BOOL *a4)
{
  id v5 = a2;
  id v6 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass()))
  {
    uint64_t v7 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      [v5 doubleValue];
      double v9 = v8;
      [v6 doubleValue];
      int v12 = 68289539;
      int v13 = 0;
      __int16 v14 = 2082;
      id v15 = "";
      __int16 v16 = 1025;
      int v17 = (int)v9;
      __int16 v18 = 1025;
      int v19 = (int)v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#coreRoutine,onPeopleDensityReceived,rssiHist\", \"rssi\":%{private}d, \"numDevices\":%{private}d}", (uint8_t *)&v12, 0x1Eu);
    }
  }
  else
  {
    id v11 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 68289026;
      int v13 = 0;
      __int16 v14 = 2082;
      id v15 = "";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,onPeopleDensityReceived,rssiHist,invalid Type\"}", (uint8_t *)&v12, 0x12u);
    }
  }
}

void sub_10008C1E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10008C20C(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 68289026;
    int v6 = 0;
    __int16 v7 = 2082;
    double v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,startMonitoringForPeopleDensity\"}", (uint8_t *)&v5, 0x12u);
  }
  if (*(void *)(a1 + 8))
  {
    id v3 = [objc_alloc((Class)RTPeopleDiscoveryServiceConfiguration) initWithServiceLevel:2 storageDuration:2 observationInterval:2 densityCallbackConfiguration:0];
    [*(id *)(a1 + 8) startMonitoringForPeopleDiscovery:v3 handler:&stru_1000FA588];
  }
  else
  {
    uint64_t v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
    {
      int v5 = 68289026;
      int v6 = 0;
      __int16 v7 = 2082;
      double v8 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#coreRoutine,startMonitoringForPeopleDensity,invalid instance\"}", (uint8_t *)&v5, 0x12u);
    }
  }
}

void sub_10008C370(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10008C388(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (v2)
  {
    id v3 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      id v4 = [(NSError *)v2 description];
      v5[0] = 68289282;
      v5[1] = 0;
      __int16 v6 = 2082;
      __int16 v7 = "";
      __int16 v8 = 2082;
      id v9 = [v4 UTF8String];
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,startMonitoringForPeopleDiscovery,\", \"Error\":%{public, location:escape_only}s}", (uint8_t *)v5, 0x1Cu);
    }
  }
}

void sub_10008C480(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10008C4A8(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 68289026;
    int v6 = 0;
    __int16 v7 = 2082;
    __int16 v8 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,stopMonitoringForPeopleDensity\"}", (uint8_t *)&v5, 0x12u);
  }
  id v3 = *(void **)(a1 + 8);
  if (v3)
  {
    [v3 stopMonitoringForPeopleDiscoveryWithHandler:&stru_1000FA5A8];
  }
  else
  {
    id v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
    {
      int v5 = 68289026;
      int v6 = 0;
      __int16 v7 = 2082;
      __int16 v8 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#coreRoutine,stopMonitoringForPeopleDensity,invalid instance\"}", (uint8_t *)&v5, 0x12u);
    }
  }
}

void sub_10008C5DC(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (v2)
  {
    id v3 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      id v4 = [(NSError *)v2 description];
      v5[0] = 68289282;
      v5[1] = 0;
      __int16 v6 = 2082;
      __int16 v7 = "";
      __int16 v8 = 2082;
      id v9 = [v4 UTF8String];
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,stopMonitoringForPeopleDensity,\", \"Error\":%{public, location:escape_only}s}", (uint8_t *)v5, 0x1Cu);
    }
  }
}

void sub_10008C6D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10008C6FC(uint64_t a1)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v7 = 0;
    __int16 v8 = 2082;
    id v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,getCurrentPeopleDensity\"}", buf, 0x12u);
  }
  id v3 = *(void **)(a1 + 8);
  if (v3)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    _DWORD v5[2] = sub_10008C874;
    v5[3] = &unk_1000FA5F0;
    void v5[4] = a1;
    [v3 fetchCurrentPeopleDensity:v5];
  }
  else
  {
    id v4 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v7 = 0;
      __int16 v8 = 2082;
      id v9 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,getCurrentPeopleDensity,invalid fRoutineManager\"}", buf, 0x12u);
    }
  }
}

void sub_10008C874(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  __int16 v8 = *(NSObject **)(v7 + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10008C93C;
  block[3] = &unk_1000FA5D0;
  id v13 = v6;
  uint64_t v14 = v7;
  id v12 = v5;
  id v9 = v6;
  id v10 = v5;
  dispatch_async(v8, block);
}

void sub_10008C93C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _DWORD v4[2] = sub_10008CA14;
  v4[3] = &unk_1000FA5D0;
  uint64_t v7 = v2;
  id v5 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  sub_10008CA14((uint64_t)v4);
}

void sub_10008C9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_10008CA14(uint64_t a1)
{
  unint64_t v1 = *(void **)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 48);
  id v3 = *(id *)(a1 + 32);
  id v4 = v1;
  id v5 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v42 = 0;
    __int16 v43 = 2082;
    long double v44 = "";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,onCurrentPeopleDensityReceived\"}", buf, 0x12u);
  }
  unint64_t v36 = 0xBFF0000000000000;
  LOBYTE(v37) = 0;
  char v38 = 0;
  uint64_t v39 = 0;
  id v40 = 0;
  if (v4)
  {
    id v6 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = [v4 description];
      id v8 = [v7 UTF8String];
      *(_DWORD *)uint64_t buf = 68289282;
      int v42 = 0;
      __int16 v43 = 2082;
      long double v44 = "";
      __int16 v45 = 2082;
      id v46 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,onCurrentPeopleDensityReceived\", \"Error\":%{public, location:escape_only}s}", buf, 0x1Cu);
    }
    goto LABEL_28;
  }
  if (!v3)
  {
    double v31 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_28;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v42 = 0;
    __int16 v43 = 2082;
    long double v44 = "";
    uint64_t v32 = "{\"msg%{public}.0s\":\"#coreRoutine,onCurrentPeopleDensityReceived,event nil\"}";
LABEL_27:
    _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, v32, buf, 0x12u);
    goto LABEL_28;
  }
  id v9 = [v3 startDate];
  if (!v9) {
    goto LABEL_25;
  }
  id v10 = [v3 startDate];
  [v10 timeIntervalSinceReferenceDate];
  if (v11 <= 0.0 || ([v3 scanDuration], v12 <= 0.0))
  {

    goto LABEL_25;
  }
  [v3 densityScore];
  BOOL v14 = v13 < 0.0;

  if (v14)
  {
LABEL_25:
    double v31 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_28;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v42 = 0;
    __int16 v43 = 2082;
    long double v44 = "";
    uint64_t v32 = "{\"msg%{public}.0s\":\"#coreRoutine,onCurrentPeopleDensityReceived,invalid event values\"}";
    goto LABEL_27;
  }
  id v15 = [v3 startDate];
  [v15 timeIntervalSinceReferenceDate];
  int v17 = (void *)v16;
  unint64_t v36 = v16;

  [v3 scanDuration];
  uint64_t v19 = v18;
  uint64_t v39 = v18;
  [v3 densityScore];
  uint64_t v21 = v20;
  BOOL v22 = [v3 endDate:v20 afterDate:v36];

  if (v22)
  {
    __int16 v23 = [v3 endDate];
    [v23 timeIntervalSinceReferenceDate];
    unint64_t v37 = v24;
    char v38 = 1;
  }
  __int16 v25 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v26 = v37;
    if (!v22) {
      unint64_t v26 = 0xBFF0000000000000;
    }
    *(_DWORD *)uint64_t buf = 68290051;
    int v42 = 0;
    __int16 v43 = 2082;
    long double v44 = "";
    __int16 v45 = 2049;
    id v46 = v17;
    __int16 v47 = 2049;
    uint64_t v48 = v19;
    __int16 v49 = 2049;
    uint64_t v50 = v21;
    __int16 v51 = 2049;
    unint64_t v52 = v26;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,onCurrentPeopleDensityReceived,adding density\", \"startTimestamp\":\"%{private}0.2f\", \"scanDuration\":\"%{private}0.2f\", \"densityScore\":\"%{private}0.2f\", \"endTimestamp\":\"%{private}0.2f\"}", buf, 0x3Au);
  }
  [v3 densityScore];
  if (v27 > 0.0)
  {
    BOOL v28 = [v3 rssiHistogram];
    if (v28)
    {
      uint64_t v29 = [v3 rssiHistogram];
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();

      if (isKindOfClass)
      {
        id v40 = [v3 rssiHistogram];
        [v40 enumerateKeysAndObjectsUsingBlock:&stru_1000FA610];
      }
    }
  }
LABEL_28:
  uint64_t v33 = *(void *)(v2 + 128);
  if (!v33) {
    sub_100005520();
  }
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v33 + 48))(v33, &v35);

  unint64_t v34 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v42 = 0;
    __int16 v43 = 2082;
    long double v44 = "";
    _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,getCurrentPeopleDensity,done\"}", buf, 0x12u);
  }
}

void sub_10008CEF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10008CF94(id a1, id a2, id a3, BOOL *a4)
{
  id v5 = a2;
  id v6 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass()))
  {
    id v7 = (id)SALogObjectGeneral;
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      [v5 doubleValue];
      double v9 = v8;
      [v6 doubleValue];
      int v12 = 68289539;
      int v13 = 0;
      __int16 v14 = 2082;
      id v15 = "";
      __int16 v16 = 1025;
      int v17 = (int)v9;
      __int16 v18 = 1025;
      int v19 = (int)v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#coreRoutine,onCurrentPeopleDensityReceived,rssiHist\", \"rssi\":%{private}d, \"numDevices\":%{private}d}", (uint8_t *)&v12, 0x1Eu);
    }
  }
  else
  {
    double v11 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
    {
      int v12 = 68289026;
      int v13 = 0;
      __int16 v14 = 2082;
      id v15 = "";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#coreRoutine,onCurrentPeopleDensityReceived,rssiHist,invalid Type\"}", (uint8_t *)&v12, 0x12u);
    }
  }
}

void sub_10008D148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10008D170(void ***a1)
{
  unint64_t v1 = *a1;
  uint64_t v2 = (id *)**a1;
  if (v2)
  {
    id v4 = (id *)v1[1];
    id v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        id v6 = v4 - 6;

        id v4 = v6;
      }
      while (v6 != v2);
      id v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void SAMobileAsset::create(void *a1)
{
  id v1 = a1;
  if (*((unsigned char *)sub_10003E368() + 104)) {
    operator new();
  }
  operator new();
}

void sub_10008D2F0(uint64_t a1, ...)
{
  va_start(va, a1);
  sub_10007FDF0((uint64_t *)va);
  operator delete();
}

uint64_t sub_10008D36C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void SACloudChannel::create(void *a1)
{
  if (*((unsigned char *)sub_10003E368() + 25)) {
    sub_10008D4A8();
  }
  sub_10008D5A8();
}

void sub_10008D48C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_10008D4A8()
{
}

void sub_10008D564(uint64_t a1, ...)
{
  va_start(va1, a1);
  va_start(va, a1);
  uint64_t v1 = va_arg(va1, void);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  sub_100027DF0((uint64_t *)va);
  sub_10002809C((uint64_t *)va1);
  operator delete();
}

void sub_10008D5A8()
{
}

void sub_10008D678(uint64_t a1, ...)
{
  va_start(va1, a1);
  va_start(va, a1);
  uint64_t v1 = va_arg(va1, void);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  sub_100027DF0((uint64_t *)va);
  sub_10002809C((uint64_t *)va1);
  operator delete();
}

void SafetyAlertsDaemonInterface::create(void *a1)
{
  if (*((unsigned char *)sub_10003E368() + 49)) {
    sub_10008D74C();
  }
  sub_10008D878();
}

void sub_10008D730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_10008D74C()
{
}

void sub_10008D844(uint64_t a1, ...)
{
  va_start(va, a1);
  sub_100078944((uint64_t *)va);
  operator delete();
}

void sub_10008D878()
{
}

void sub_10008D970(uint64_t a1, ...)
{
  va_start(va, a1);
  sub_100078944((uint64_t *)va);
  operator delete();
}

SafetyAlertsDaemonInterface *SafetyAlertsDaemonInterface::SafetyAlertsDaemonInterface(SafetyAlertsDaemonInterface *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  *(void *)a1 = off_1000FA340;
  sub_10007C3A8((uint64_t)a1 + 8, a3);
  id v6 = v5;
  *((void *)a1 + 37) = v6;
  *((void *)a1 + 38) = 0;
  SafetyAlertsDaemonInterface::setupXpcConnection(a1);

  return a1;
}

void sub_10008DA20(_Unwind_Exception *a1)
{
  sub_100078944(v3);
  _Unwind_Resume(a1);
}

void SafetyAlertsDaemonInterface::setupXpcConnection(SafetyAlertsDaemonInterface *this)
{
  uint64_t v2 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v9 = 0;
    __int16 v10 = 2082;
    double v11 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterface,setupXpcConnection\"}", buf, 0x12u);
  }
  xpc_connection_t mach_service = xpc_connection_create_mach_service("com.apple.safetyalerts", *((dispatch_queue_t *)this + 37), 1uLL);
  uint64_t v4 = (void *)*((void *)this + 38);
  *((void *)this + 38) = mach_service;

  id v5 = (_xpc_connection_s *)*((void *)this + 38);
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472;
  handler[2] = sub_10008DC38;
  handler[3] = &unk_1000F5DD8;
  handler[4] = this;
  xpc_connection_set_event_handler(v5, handler);
  xpc_connection_activate(*((xpc_connection_t *)this + 38));
  id v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v9 = 0;
    __int16 v10 = 2082;
    double v11 = "";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterface,xpc_connection_resumed\"}", buf, 0x12u);
  }
}

uint64_t sub_10008DBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_100005520();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v2 + 48))(v2, &v4);
}

void sub_10008DC38(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  if (xpc_get_type(v3) == (xpc_type_t)&_xpc_type_connection)
  {
    id v8 = v3;
    int v9 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = 68289026;
      *(_WORD *)int v12 = 2082;
      *(void *)&_DWORD v12[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterface,handleXpcConnection\"}", (uint8_t *)&v11, 0x12u);
    }
    uint64_t v11 = (uint64_t)_NSConcreteStackBlock;
    *(void *)int v12 = 3221225472;
    *(void *)&v12[8] = sub_10008DE6C;
    *(void *)&v12[16] = &unk_1000FA6A8;
    uint64_t v14 = v4;
    id v10 = v8;
    id v13 = v10;
    xpc_connection_set_event_handler((xpc_connection_t)v10, &v11);
    xpc_connection_activate((xpc_connection_t)v10);
  }
  else
  {
    id v6 = xpc_copy_description(v3);
    id v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = 68289283;
      *(_WORD *)int v12 = 2082;
      *(void *)&_DWORD v12[2] = "";
      *(_WORD *)&unsigned char v12[10] = 2081;
      *(void *)&v12[12] = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Received object\", \"description\":%{private, location:escape_only}s}", (uint8_t *)&v11, 0x1Cu);
    }
    free(v6);
  }
}

void sub_10008DE38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_10008DE6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 40);
  if (xpc_get_type(v3) == (xpc_type_t)&_xpc_type_error)
  {
    id v6 = xpc_copy_description(v3);
    id v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = 68289283;
      int v14 = 0;
      __int16 v15 = 2082;
      __int16 v16 = "";
      __int16 v17 = 2081;
      __int16 v18 = v6;
      id v8 = "{\"msg%{public}.0s\":\"#daemonInterface,Connection received error\", \"description\":%{private, location:escape_only}s}";
      goto LABEL_7;
    }
LABEL_8:
    free(v6);
    goto LABEL_9;
  }
  if (xpc_get_type(v3) != (xpc_type_t)&_xpc_type_dictionary)
  {
    id v6 = xpc_copy_description(v3);
    id v7 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = 68289283;
      int v14 = 0;
      __int16 v15 = 2082;
      __int16 v16 = "";
      __int16 v17 = 2081;
      __int16 v18 = v6;
      id v8 = "{\"msg%{public}.0s\":\"#daemonInterface,Connection received object\", \"description\":%{private, location:escape_only}s}";
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v8, (uint8_t *)&v13, 0x1Cu);
      goto LABEL_8;
    }
    goto LABEL_8;
  }
  int v9 = (void *)xpc_connection_copy_entitlement_value();
  id v10 = v9;
  if (v9 && xpc_get_type(v9) == (xpc_type_t)&_xpc_type_BOOL)
  {
    BOOL value = xpc_BOOL_get_value(v10);

    if (value)
    {
      (*(void (**)(uint64_t, id))(*(void *)v4 + 24))(v4, v3);
      goto LABEL_9;
    }
  }
  else
  {
  }
  uint64_t v11 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v13 = 68289283;
    int v14 = 0;
    __int16 v15 = 2082;
    __int16 v16 = "";
    __int16 v17 = 2081;
    __int16 v18 = "com.apple.safetyalerts.spi";
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterface,notEntitled\", \"entitlement\":%{private, location:escape_only}s}", (uint8_t *)&v13, 0x1Cu);
  }
LABEL_9:
}

void sub_10008E100(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

SafetyAlertsDaemonInterface *SafetyAlertsDaemonInterfaceTest::SafetyAlertsDaemonInterfaceTest(SafetyAlertsDaemonInterface *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  sub_10007C3A8((uint64_t)v7, a3);
  SafetyAlertsDaemonInterface::SafetyAlertsDaemonInterface(a1, v5, (uint64_t)v7);
  sub_10007C8E0(v15);
  sub_10007C754(v14);
  sub_10000F6D4(v13);
  sub_100021E70(v12);
  sub_10000F6D4(v11);
  sub_10007C7D8(v10);
  sub_10007C85C(v9);
  sub_10000F6D4(v8);
  sub_10007C324(v7);
  *(void *)a1 = off_1000FA6D8;

  return a1;
}

void sub_10008E220(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100078944((uint64_t *)va);

  _Unwind_Resume(a1);
}

void sub_10008E24C(uint64_t a1)
{
  sub_1000869D0(a1);

  operator delete();
}

void sub_10008E284(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 68289283;
    v6[1] = 0;
    __int16 v7 = 2082;
    id v8 = "";
    __int16 v9 = 2081;
    id v10 = "testMessage";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#daemonInterfaceTest,processMessage\", \"message\":%{private, location:escape_only}s}", (uint8_t *)v6, 0x1Cu);
  }
  uint64_t v4 = sub_100017698();
  sub_100017780(v4, v2);
  xpc_object_t reply = xpc_dictionary_create_reply(v2);
  if (reply) {
    xpc_dictionary_send_reply();
  }
}

void sub_10008E380(_Unwind_Exception *a1)
{
  id v3 = v2;

  _Unwind_Resume(a1);
}

void *SACoreRoutineTest::SACoreRoutineTest(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_100004CB8(__p, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a3;
    uint64_t v12 = *(void *)(a3 + 16);
  }
  sub_10005CBEC((uint64_t)v17, a4);
  sub_10005CC84((uint64_t)v18, a4 + 32);
  id v8 = (void *)sub_10005CD1C((uint64_t)&v19, a4 + 64);
  *a1 = off_1000FA668;
  sub_10005CEBC(v8);
  sub_10005CDB4(v18);
  sub_10005CE38(v17);
  if (SHIBYTE(v12) < 0) {
    operator delete(__p[0]);
  }
  *a1 = off_1000FA720;
  __int16 v9 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v14 = 0;
    __int16 v15 = 2082;
    __int16 v16 = "";
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,SACoreRoutineTest\"}", buf, 0x12u);
  }

  return a1;
}

void sub_10008E53C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  _Unwind_Resume(a1);
}

void sub_10008E590()
{
}

void sub_10008E5A4()
{
  int v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v1[0] = 68289026;
    v1[1] = 0;
    __int16 v2 = 2082;
    id v3 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,Test,getHistoricalLocation\"}", (uint8_t *)v1, 0x12u);
  }
}

void sub_10008E658()
{
  int v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v1[0] = 68289026;
    v1[1] = 0;
    __int16 v2 = 2082;
    id v3 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,Test,getPeopleDensity\"}", (uint8_t *)v1, 0x12u);
  }
}

void sub_10008E70C()
{
  int v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v1[0] = 68289026;
    v1[1] = 0;
    __int16 v2 = 2082;
    id v3 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,Test,getCurrentPeopleDensity\"}", (uint8_t *)v1, 0x12u);
  }
}

void sub_10008E7C0()
{
  int v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v1[0] = 68289026;
    v1[1] = 0;
    __int16 v2 = 2082;
    id v3 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,Test,stopMonitoringForPeopleDensity\"}", (uint8_t *)v1, 0x12u);
  }
}

void sub_10008E874()
{
  int v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v1[0] = 68289026;
    v1[1] = 0;
    __int16 v2 = 2082;
    id v3 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#coreRoutine,Test,startMonitoringForPeopleDensity\"}", (uint8_t *)v1, 0x12u);
  }
}

uint64_t SAGridId::generateGlobalTileIdFromLatLonAndGridSizeInDegrees(SAGridId *this, double a2, double a3, double a4, double a5, double a6)
{
  if (a2 - a5 < -90.0 || a3 - a6 > 180.0 || a2 - a5 > 90.0 || a3 - a6 < -180.0)
  {
    __int16 v18 = SALogObjectGeneral;
    uint64_t v15 = 0;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      int v20 = 68289795;
      int v21 = 0;
      __int16 v22 = 2082;
      __int16 v23 = "";
      __int16 v24 = 2049;
      double v25 = a2;
      __int16 v26 = 2049;
      double v27 = a3;
      __int16 v28 = 2049;
      double v29 = a5;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#gi,#generateGlobalTileIdFromLatLonAndGridSizeInDegrees,invalidLoc\", \"lat\":\"%{private}0.3f\", \"lon\":\"%{private}0.3f\", \"gridLatOffset\":\"%{private}0.3f\"}", (uint8_t *)&v20, 0x30u);
      return 0;
    }
  }
  else
  {
    LODWORD(v6) = vcvtad_u64_f64(100.0 / (a4 * 100.0));
    LODWORD(v8) = vcvtpd_u64_f64((360.0 - a6) * (double)v6);
    LODWORD(v7) = vcvtmd_u64_f64((a3 + 180.0 - a6) * (double)v6);
    uint64_t v14 = (floor((a2 + 90.0 - a5) * (double)v6) * (double)LODWORD(v8));
    uint64_t v15 = (v14 + v7);
    __int16 v16 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(v17) = vcvtpd_u64_f64((180.0 - a5) * (double)v6);
      int v20 = 68291843;
      int v21 = 0;
      __int16 v22 = 2082;
      __int16 v23 = "";
      __int16 v24 = 2049;
      double v25 = v8;
      __int16 v26 = 2049;
      double v27 = v17;
      __int16 v28 = 2049;
      double v29 = a4;
      __int16 v30 = 2049;
      uint64_t v31 = v7;
      __int16 v32 = 2049;
      uint64_t v33 = v14;
      __int16 v34 = 2049;
      uint64_t v35 = (v14 + v7);
      __int16 v36 = 2049;
      uint64_t v37 = v6;
      __int16 v38 = 2049;
      double v39 = a2;
      __int16 v40 = 2049;
      double v41 = a3;
      __int16 v42 = 2049;
      double v43 = a5;
      __int16 v44 = 2049;
      double v45 = a6;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#gi,#generateGlobalTileIdFromLatLonAndGridSizeInDegrees\", \"totalGridsInEachRow\":%{private}lu, \"totalGridsInEachCol\":%{private}lu, \"gridSizeInDegrees\":\"%{private}0.3f\", \"swXIndex\":%{private}lu, \"swYIndex\":%{private}lu, \"curGlobalIndex\":%{private}lu, \"multiplier\":%{private}lu, \"lat\":\"%{private}0.3f\", \"lon\":\"%{private}0.3f\", \"gridLatOffset\":\"%{private}0.3f\", \"gridLonOffset\":\"%{private}0.3f\"}", (uint8_t *)&v20, 0x80u);
    }
  }
  return v15;
}

void SAGeometry::SAGeometry(SAGeometry *this, NSDictionary *a2)
{
  uint64_t v104 = a2;
  *(void *)this = 0;
  *((unsigned char *)this + 8) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0xBFF0000000000000;
  *((_DWORD *)this + 10) = 4;
  id v3 = objc_alloc_init((Class)NSMutableArray);
  uint64_t v4 = *(void **)this;
  *(void *)this = v3;

  if (!*(void *)this)
  {
    uint64_t v92 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR))
    {
      uint64_t buf = 68289026;
      __int16 v128 = 2082;
      unint64_t v129 = "";
      _os_log_impl((void *)&_mh_execute_header, v92, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#geometry,CannotInstantiate\"}", (uint8_t *)&buf, 0x12u);
      uint64_t v92 = SALogObjectGeneral;
    }
    if (os_log_type_enabled(v92, OS_LOG_TYPE_ERROR))
    {
      uint64_t buf = 68289795;
      __int16 v128 = 2082;
      unint64_t v129 = "";
      __int16 v130 = 2081;
      *(void *)long long v131 = "/Library/Caches/com.apple.xbs/Sources/SafetyAlerts/Sources/Daemon/framework/geometry/SAGeometry.mm";
      *(_WORD *)&v131[8] = 2081;
      *(void *)&v131[10] = "SAGeometry";
      __int16 v132 = 1026;
      int v133 = 43;
      _os_log_impl((void *)&_mh_execute_header, v92, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"AssertionFailure\", \"file\":%{private, location:escape_only}s, \"function\":%{private, location:escape_only}s, \"line\":%{public}d}", (uint8_t *)&buf, 0x2Cu);
    }
    __assert_rtn("SAGeometry", "SAGeometry.mm", 43, "false && \"#geometry,CannotInstantiate\"");
  }
  unint64_t v111 = [(NSDictionary *)v104 objectForKey:@"type"];
  uint64_t v110 = this;
  id v107 = [(NSDictionary *)v104 objectForKey:@"coordinates"];
  if (!v111 || !v107)
  {
    __int16 v9 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_47;
    }
    uint64_t buf = 68289026;
    __int16 v128 = 2082;
    unint64_t v129 = "";
    id v10 = "{\"msg%{public}.0s\":\"#geometry,MissingEntries\"}";
LABEL_20:
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&buf, 0x12u);
    goto LABEL_47;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    __int16 v9 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_47;
    }
    uint64_t buf = 68289026;
    __int16 v128 = 2082;
    unint64_t v129 = "";
    id v10 = "{\"msg%{public}.0s\":\"#geometry,BadPolygonType\"}";
    goto LABEL_20;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v100 = v111;
    if ([v100 isEqualToString:@"Polygon"])
    {
      id v5 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
      {
        uint64_t buf = 68289026;
        __int16 v128 = 2082;
        unint64_t v129 = "";
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#geometry,Polygon\"}", (uint8_t *)&buf, 0x12u);
      }
      uint64_t v7 = SAGeometry::getPolygonFromCoordinates(v107, v6);
      if (v7)
      {
        double v8 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t buf = 68289283;
          __int16 v128 = 2082;
          unint64_t v129 = "";
          __int16 v130 = 2113;
          *(void *)long long v131 = v7;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,CLPolygonCreated\", \"polygon\":%{private, location:escape_only}@}", (uint8_t *)&buf, 0x1Cu);
        }
        [*(id *)this addObject:v7];
      }
      *((_DWORD *)this + 10) = 1;
      goto LABEL_42;
    }
    if ([v100 isEqualToString:@"MultiPolygon"])
    {
      uint64_t v11 = v107;
      long long v101 = v11;
      id v103 = [(SAGeometry *)v11 count];
      uint64_t v12 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t buf = 68289539;
        __int16 v128 = 2082;
        unint64_t v129 = "";
        __int16 v130 = 1025;
        *(_DWORD *)long long v131 = v103;
        *(_WORD *)&v131[4] = 2113;
        *(void *)&v131[6] = v11;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,MultiPolygon\", \"count\":%{private}d, \"coordinateObjects\":%{private, location:escape_only}@}", (uint8_t *)&buf, 0x22u);
      }
      if (v103)
      {
        uint64_t v13 = 0;
        do
        {
          uint64_t v108 = v13;
          -[SAGeometry objectAtIndex:](v101, "objectAtIndex:");
          uint64_t v14 = (SAGeometry *)objc_claimAutoreleasedReturnValue();
          uint64_t v15 = v14;
          double v17 = SAGeometry::getPolygonFromCoordinates(v14, v16);
          if (v17)
          {
            __int16 v18 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t buf = 68289283;
              __int16 v128 = 2082;
              unint64_t v129 = "";
              __int16 v130 = 2113;
              *(void *)long long v131 = v17;
              _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,CLPolygonCreated\", \"polygon\":%{private, location:escape_only}@}", (uint8_t *)&buf, 0x1Cu);
            }
            __int16 v105 = v17;
            uint64_t v19 = [v17 vertices];
            long long v122 = 0u;
            long long v123 = 0u;
            long long v120 = 0u;
            long long v121 = 0u;
            id v20 = v19;
            id v21 = [v20 countByEnumeratingWithState:&v120 objects:v126 count:16];
            if (v21)
            {
              uint64_t v22 = *(void *)v121;
              do
              {
                for (uint64_t i = 0; i != v21; uint64_t i = (char *)i + 1)
                {
                  if (*(void *)v121 != v22) {
                    objc_enumerationMutation(v20);
                  }
                  id v24 = *(id *)(*((void *)&v120 + 1) + 8 * i);
                  double v25 = SALogObjectGeneral;
                  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                  {
                    uint64_t buf = 68289283;
                    __int16 v128 = 2082;
                    unint64_t v129 = "";
                    __int16 v130 = 2113;
                    *(void *)long long v131 = v24;
                    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,vertex\", \"vertex\":%{private, location:escape_only}@}", (uint8_t *)&buf, 0x1Cu);
                  }
                }
                uint64_t v14 = v15;
                id v21 = [v20 countByEnumeratingWithState:&v120 objects:v126 count:16];
              }
              while (v21);
            }

            [*(id *)v110 addObject:v105];
            double v17 = v105;
          }

          this = v110;
          uint64_t v13 = v108 + 1;
        }
        while ((id)(v108 + 1) != v103);
      }
      *((_DWORD *)this + 10) = 2;
      goto LABEL_41;
    }
    if ([v100 isEqualToString:@"Grids"])
    {
      double v27 = [(NSDictionary *)v104 objectForKey:@"resolution"];
      if (!v27 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
      {
        unint64_t v88 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t buf = 68289026;
          __int16 v128 = 2082;
          unint64_t v129 = "";
          _os_log_impl((void *)&_mh_execute_header, v88, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,BadPolygonResolution\"}", (uint8_t *)&buf, 0x12u);
        }

        goto LABEL_46;
      }
      long long v101 = (SAGeometry *)v27;
      [v27 doubleValue];
      double v29 = v28;
      __int16 v30 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
      {
        uint64_t buf = 68289026;
        __int16 v128 = 2082;
        unint64_t v129 = "";
        _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#geometry,Grids\"}", (uint8_t *)&buf, 0x12u);
      }
      uint64_t v31 = v107;
      unsigned int v32 = [(SAGeometry *)v31 count];
      uint64_t v33 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t buf = 68289539;
        __int16 v128 = 2082;
        unint64_t v129 = "";
        __int16 v130 = 1025;
        *(_DWORD *)long long v131 = v32;
        *(_WORD *)&v131[4] = 2113;
        *(void *)&v131[6] = v31;
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,Grids\", \"count\":%{private}d, \"coordinateObjects\":%{private, location:escape_only}@}", (uint8_t *)&buf, 0x22u);
      }
      long long v118 = 0u;
      long long v119 = 0u;
      long long v116 = 0u;
      long long v117 = 0u;
      id obj = v31;
      id v34 = [(SAGeometry *)obj countByEnumeratingWithState:&v116 objects:v125 count:16];
      if (!v34)
      {
LABEL_96:

        *((_DWORD *)v110 + 10) = 3;
LABEL_41:
        uint64_t v7 = v101;
LABEL_42:

LABEL_43:
        __int16 v26 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t buf = 68289026;
          __int16 v128 = 2082;
          unint64_t v129 = "";
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,created\"}", (uint8_t *)&buf, 0x12u);
        }
        *((unsigned char *)v110 + 8) = *((_DWORD *)v110 + 10) != 4;
        goto LABEL_46;
      }
      uint64_t v106 = *(void *)v117;
LABEL_57:
      id v109 = v34;
      uint64_t v35 = 0;
      while (1)
      {
        if (*(void *)v117 != v106) {
          objc_enumerationMutation(obj);
        }
        id v36 = *(id *)(*((void *)&v116 + 1) + 8 * v35);
        uint64_t v37 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t buf = 68289026;
          __int16 v128 = 2082;
          unint64_t v129 = "";
          _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,getPolygonFromGridCoordinate\"}", (uint8_t *)&buf, 0x12u);
        }
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0) {
          break;
        }
        if ((unint64_t)[v36 count] < 2 || (unint64_t)objc_msgSend(v36, "count") > 3) {
          goto LABEL_89;
        }
        __int16 v38 = [v36 objectAtIndex:0];
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {

LABEL_89:
          uint64_t v76 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t buf = 68289026;
            __int16 v128 = 2082;
            unint64_t v129 = "";
            __int16 v74 = v76;
            id v75 = "{\"msg%{public}.0s\":\"#geometry,getPolygonFromGridCoordinate,Invalid Args\"}";
LABEL_91:
            _os_log_impl((void *)&_mh_execute_header, v74, OS_LOG_TYPE_DEFAULT, v75, (uint8_t *)&buf, 0x12u);
          }
          goto LABEL_92;
        }
        double v39 = [v36 objectAtIndex:1];
        objc_opt_class();
        char isKindOfClass = objc_opt_isKindOfClass();

        if ((isKindOfClass & 1) == 0) {
          goto LABEL_89;
        }
        double v41 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t buf = 68289283;
          __int16 v128 = 2082;
          unint64_t v129 = "";
          __int16 v130 = 2113;
          *(void *)long long v131 = v36;
          _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,getPolygonFromGridCoordinate\", \"object\":%{private, location:escape_only}@}", (uint8_t *)&buf, 0x1Cu);
        }
        __int16 v42 = [v36 objectAtIndex:1];
        [v42 doubleValue];
        CLLocationDegrees v44 = v43;

        double v45 = [v36 objectAtIndex:0];
        [v45 doubleValue];
        CLLocationDegrees v47 = v46;

        id v48 = objc_alloc_init((Class)NSMutableArray);
        id v49 = objc_alloc((Class)_CLVertex);
        CLLocationCoordinate2D v50 = CLLocationCoordinate2DMake(v44, v47);
        id v51 = [v49 initWithCoordinate:v50.latitude, v50.longitude];
        [v48 addObject:v51];
        id v52 = objc_alloc((Class)_CLVertex);
        CLLocationCoordinate2D v53 = CLLocationCoordinate2DMake(v29 + v44, v47);
        id v54 = [v52 initWithCoordinate:v53.latitude, v53.longitude];
        [v48 addObject:];
        id v55 = objc_alloc((Class)_CLVertex);
        CLLocationDegrees v56 = v29 + v47;
        CLLocationCoordinate2D v57 = CLLocationCoordinate2DMake(v29 + v44, v56);
        id v58 = [v55 initWithCoordinate:v57.latitude, v57.longitude];
        [v48 addObject:v58];
        id v59 = objc_alloc((Class)_CLVertex);
        CLLocationCoordinate2D v60 = CLLocationCoordinate2DMake(v44, v56);
        id v61 = [v59 initWithCoordinate:v60.latitude, v60.longitude];
        [v48 addObject:v61];
        [v48 addObject:v51];
        long long v62 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
        {
          uint64_t buf = 68289283;
          __int16 v128 = 2082;
          unint64_t v129 = "";
          __int16 v130 = 2113;
          *(void *)long long v131 = v48;
          _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#geometry,vertices\", \"vertices\":%{private, location:escape_only}@}", (uint8_t *)&buf, 0x1Cu);
        }
        id v63 = [objc_alloc((Class)_CLPolygonalRegion) initWithVertices:v48 identifier:@"polygon"];
        uint64_t v64 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
        {
          uint64_t buf = 68289283;
          __int16 v128 = 2082;
          unint64_t v129 = "";
          __int16 v130 = 2113;
          *(void *)long long v131 = v63;
          _os_log_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#geometry,region\", \"region\":%{private, location:escape_only}@}", (uint8_t *)&buf, 0x1Cu);
        }

        if (!v63) {
          goto LABEL_94;
        }
        uint64_t v65 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t buf = 68289283;
          __int16 v128 = 2082;
          unint64_t v129 = "";
          __int16 v130 = 2113;
          *(void *)long long v131 = v63;
          _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,Grids,CLPolygonCreated\", \"polygon\":%{private, location:escape_only}@}", (uint8_t *)&buf, 0x1Cu);
        }
        unint64_t v66 = [v63 vertices];
        long long v114 = 0u;
        long long v115 = 0u;
        long long v112 = 0u;
        long long v113 = 0u;
        id v67 = v66;
        id v68 = [v67 countByEnumeratingWithState:&v112 objects:v124 count:16];
        if (v68)
        {
          uint64_t v69 = *(void *)v113;
          do
          {
            for (uint64_t j = 0; j != v68; uint64_t j = (char *)j + 1)
            {
              if (*(void *)v113 != v69) {
                objc_enumerationMutation(v67);
              }
              id v71 = *(id *)(*((void *)&v112 + 1) + 8 * (void)j);
              id v72 = SALogObjectGeneral;
              if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t buf = 68289283;
                __int16 v128 = 2082;
                unint64_t v129 = "";
                __int16 v130 = 2113;
                *(void *)long long v131 = v71;
                _os_log_impl((void *)&_mh_execute_header, v72, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,Grids\", \"vertex\":%{private, location:escape_only}@}", (uint8_t *)&buf, 0x1Cu);
              }
            }
            id v68 = [v67 countByEnumeratingWithState:&v112 objects:v124 count:16];
          }
          while (v68);
        }

        [*(id *)v110 addObject:v63];
LABEL_93:

LABEL_94:
        if ((id)++v35 == v109)
        {
          id v34 = [(SAGeometry *)obj countByEnumeratingWithState:&v116 objects:v125 count:16];
          if (!v34) {
            goto LABEL_96;
          }
          goto LABEL_57;
        }
      }
      uint64_t v73 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t buf = 68289026;
        __int16 v128 = 2082;
        unint64_t v129 = "";
        __int16 v74 = v73;
        id v75 = "{\"msg%{public}.0s\":\"#geometry,getPolygonFromGridCoordinate,invalid Type\"}";
        goto LABEL_91;
      }
LABEL_92:
      id v63 = 0;
      id v67 = v36;
      goto LABEL_93;
    }
    if (![v100 isEqualToString:@"Circle"]) {
      goto LABEL_43;
    }
    uint64_t v77 = v107;
    if ([(SAGeometry *)v77 count] != (id)2)
    {
      __int16 v89 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t buf = 68289026;
        __int16 v128 = 2082;
        unint64_t v129 = "";
        _os_log_impl((void *)&_mh_execute_header, v89, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,BadCircleCenterCoordCount\"}", (uint8_t *)&buf, 0x12u);
      }

      goto LABEL_46;
    }
    id v78 = [(SAGeometry *)v77 objectAtIndex:0];
    if (v78 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      [v78 doubleValue];
      double v80 = v79;
      if (v79 >= -90.0 && v79 <= 90.0)
      {
        long long v81 = [(SAGeometry *)v77 objectAtIndex:1];
        if (v81 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
        {
          [v81 doubleValue];
          double v83 = v82;
          if (v82 >= -180.0 && v82 <= 180.0)
          {
            if (fabs(fabs(v80) + -0.0000001) > 0.0000001 || fabs(fabs(v82) + -0.0000001) > 0.0000001)
            {
              int v84 = [(NSDictionary *)v104 objectForKey:@"radiusMeters"];
              if (v84 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
              {
                [v84 doubleValue];
                double v86 = v85;
                if (v85 > 0.0)
                {
                  int v87 = 0;
                  *((double *)this + 2) = v80;
                  *((double *)this + 3) = v83;
                  *((double *)this + 4) = v85;
                  *((_DWORD *)this + 10) = 0;
LABEL_143:

LABEL_135:
                  if (!v87) {
                    goto LABEL_43;
                  }
LABEL_46:

                  goto LABEL_47;
                }
                __int16 v97 = SALogObjectGeneral;
                if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t buf = 68289283;
                  __int16 v128 = 2082;
                  unint64_t v129 = "";
                  __int16 v130 = 2049;
                  *(double *)long long v131 = v86;
                  uint64_t v98 = "{\"msg%{public}.0s\":\"#geometry,InvalidCircleRadiusValue\", \"value\":\"%{private}0.1f\"}";
                  goto LABEL_141;
                }
              }
              else
              {
                __int16 v97 = SALogObjectGeneral;
                if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t buf = 68289283;
                  __int16 v128 = 2082;
                  unint64_t v129 = "";
                  __int16 v130 = 2113;
                  *(void *)long long v131 = v84;
                  uint64_t v98 = "{\"msg%{public}.0s\":\"#geometry,BadCircleRadius\", \"value\":%{private, location:escape_only}@}";
LABEL_141:
                  _os_log_impl((void *)&_mh_execute_header, v97, OS_LOG_TYPE_DEFAULT, v98, (uint8_t *)&buf, 0x1Cu);
                }
              }
              int v87 = 1;
              goto LABEL_143;
            }
            uint64_t v99 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t buf = 68289539;
              __int16 v128 = 2082;
              unint64_t v129 = "";
              __int16 v130 = 2049;
              *(double *)long long v131 = v80;
              *(_WORD *)&v131[8] = 2049;
              *(double *)&v131[10] = v83;
              uint64_t v94 = "{\"msg%{public}.0s\":\"#geometry,InvalidCircleCenter\", \"value\":\"%{private}0.1f\", \"value\":\"%{private}0.1f\"}";
              uint64_t v95 = v99;
              uint32_t v96 = 38;
              goto LABEL_133;
            }
LABEL_134:
            int v87 = 1;
            goto LABEL_135;
          }
          uint64_t v93 = SALogObjectGeneral;
          if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_134;
          }
          uint64_t buf = 68289283;
          __int16 v128 = 2082;
          unint64_t v129 = "";
          __int16 v130 = 2049;
          *(double *)long long v131 = v83;
          uint64_t v94 = "{\"msg%{public}.0s\":\"#geometry,InvalidCircleLon\", \"value\":\"%{private}0.1f\"}";
        }
        else
        {
          uint64_t v93 = SALogObjectGeneral;
          if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_134;
          }
          uint64_t buf = 68289283;
          __int16 v128 = 2082;
          unint64_t v129 = "";
          __int16 v130 = 2113;
          *(void *)long long v131 = v81;
          uint64_t v94 = "{\"msg%{public}.0s\":\"#geometry,BadCircleCenterLon\", \"value\":%{private, location:escape_only}@}";
        }
        uint64_t v95 = v93;
        uint32_t v96 = 28;
LABEL_133:
        _os_log_impl((void *)&_mh_execute_header, v95, OS_LOG_TYPE_DEFAULT, v94, (uint8_t *)&buf, v96);
        goto LABEL_134;
      }
      unint64_t v90 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t buf = 68289283;
        __int16 v128 = 2082;
        unint64_t v129 = "";
        __int16 v130 = 2049;
        *(double *)long long v131 = v80;
        __int16 v91 = "{\"msg%{public}.0s\":\"#geometry,InvalidCircleLat\", \"value\":\"%{private}0.1f\"}";
        goto LABEL_121;
      }
    }
    else
    {
      unint64_t v90 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t buf = 68289283;
        __int16 v128 = 2082;
        unint64_t v129 = "";
        __int16 v130 = 2113;
        *(void *)long long v131 = v78;
        __int16 v91 = "{\"msg%{public}.0s\":\"#geometry,BadCircleCenterLat\", \"value\":%{private, location:escape_only}@}";
LABEL_121:
        _os_log_impl((void *)&_mh_execute_header, v90, OS_LOG_TYPE_DEFAULT, v91, (uint8_t *)&buf, 0x1Cu);
      }
    }

    goto LABEL_46;
  }
  __int16 v9 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289026;
    __int16 v128 = 2082;
    unint64_t v129 = "";
    id v10 = "{\"msg%{public}.0s\":\"#geometry,BadCoordinateType\"}";
    goto LABEL_20;
  }
LABEL_47:
}

void sub_100090164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17, uint64_t a18, id *a19, void *a20)
{
  _Unwind_Resume(a1);
}

SAGeometry *SAGeometry::getPolygonFromCoordinates(SAGeometry *this, objc_object *a2)
{
  __int16 v2 = this;
  id v3 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v38 = 0;
    __int16 v39 = 2082;
    __int16 v40 = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,getPolygonFromCoordinates\"}", buf, 0x12u);
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    uint64_t v12 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  if (![(SAGeometry *)v2 count]
    || ([(SAGeometry *)v2 objectAtIndex:0],
        uint64_t v4 = objc_claimAutoreleasedReturnValue(),
        objc_opt_class(),
        char isKindOfClass = objc_opt_isKindOfClass(),
        v4,
        (isKindOfClass & 1) == 0))
  {
    uint64_t v12 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
LABEL_17:
      *(_DWORD *)uint64_t buf = 68289026;
      int v38 = 0;
      __int16 v39 = 2082;
      __int16 v40 = "";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,BadLinearRing\"}", buf, 0x12u);
    }
LABEL_18:
    uint64_t v11 = 0;
    goto LABEL_19;
  }
  uint64_t v6 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289283;
    int v38 = 0;
    __int16 v39 = 2082;
    __int16 v40 = "";
    __int16 v41 = 2113;
    __int16 v42 = v2;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,linearRingsObject\", \"object\":%{private, location:escape_only}@}", buf, 0x1Cu);
  }
  id v36 = [(SAGeometry *)v2 objectAtIndex:0];
  uint64_t v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289283;
    int v38 = 0;
    __int16 v39 = 2082;
    __int16 v40 = "";
    __int16 v41 = 2113;
    __int16 v42 = v36;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,points\", \"points\":%{private, location:escape_only}@}", buf, 0x1Cu);
  }
  double v8 = (char *)[(SAGeometry *)v36 count];
  int v9 = (int)v8;
  if ((unint64_t)(v8 - 101) > 0xFFFFFFFFFFFFFF9ELL)
  {
    uint64_t v35 = v8;
    id v34 = objc_alloc_init((Class)NSMutableArray);
    uint64_t v14 = 0;
    uint64_t v15 = &AnalyticsSendEventLazy_ptr;
    *(void *)&long long v16 = 68289026;
    long long v33 = v16;
    do
    {
      double v17 = -[SAGeometry objectAtIndex:](v36, "objectAtIndex:", v14, v33);
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0 || [v17 count] != (id)2)
      {
        unsigned int v32 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = v33;
          int v38 = 0;
          __int16 v39 = 2082;
          __int16 v40 = "";
          _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,InvalidCoordinate\"}", buf, 0x12u);
        }

LABEL_38:
        uint64_t v11 = 0;
        goto LABEL_39;
      }
      id v18 = v17;
      uint64_t v19 = [v18 objectAtIndex:1];
      id v20 = [v18 objectAtIndex:0];
      objc_opt_class();
      char v21 = objc_opt_isKindOfClass();
      uint64_t v22 = v15;
      objc_opt_class();
      char v23 = v21 & objc_opt_isKindOfClass();
      if (v23)
      {
        [v19 doubleValue];
        CLLocationDegrees v25 = v24;
        [v20 doubleValue];
        CLLocationCoordinate2D v27 = CLLocationCoordinate2DMake(v25, v26);
        id v28 = [objc_alloc((Class)_CLVertex) initWithCoordinate:v27.latitude, v27.longitude];
        [v34 addObject:v28];
      }
      else
      {
        double v29 = SALogObjectGeneral;
        if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = v33;
          int v38 = 0;
          __int16 v39 = 2082;
          __int16 v40 = "";
          _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,CoordinateIsNaN\"}", buf, 0x12u);
        }
      }

      if ((v23 & 1) == 0) {
        goto LABEL_38;
      }
      ++v14;
      uint64_t v15 = v22;
    }
    while (v35 != v14);
    __int16 v30 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289283;
      int v38 = 0;
      __int16 v39 = 2082;
      __int16 v40 = "";
      __int16 v41 = 2113;
      __int16 v42 = (SAGeometry *)v34;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#geometry,vertices\", \"vertices\":%{private, location:escape_only}@}", buf, 0x1Cu);
    }
    uint64_t v11 = (SAGeometry *)[objc_alloc((Class)_CLPolygonalRegion) initWithVertices:v34 identifier:@"polygon"];
    uint64_t v31 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289283;
      int v38 = 0;
      __int16 v39 = 2082;
      __int16 v40 = "";
      __int16 v41 = 2113;
      __int16 v42 = v11;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#geometry,region\", \"region\":%{private, location:escape_only}@}", buf, 0x1Cu);
    }
LABEL_39:
  }
  else
  {
    id v10 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289282;
      int v38 = 0;
      __int16 v39 = 2082;
      __int16 v40 = "";
      __int16 v41 = 1026;
      LODWORD(v42) = v9;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,InvalidNumberOfPoints\", \"pointsLen\":%{public}d}", buf, 0x18u);
    }
    uint64_t v11 = 0;
  }

LABEL_19:

  return v11;
}

void sub_100090A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t SAGeometry::isLocationInCircle(SAGeometry *this, double a2, double a3, double a4, NSArray *a5)
{
  uint64_t v6 = this;
  uint64_t v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289026;
    __int16 v38 = 2082;
    __int16 v39 = "";
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,isLocationInCircle\"}", (uint8_t *)&buf, 0x12u);
  }
  __int16 v30 = (void *)v6;
  if (v6)
  {
    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    id obj = (SAGeometry *)(id)v6;
    id v8 = [(SAGeometry *)obj countByEnumeratingWithState:&v32 objects:v36 count:16];
    if (v8)
    {
      uint64_t v9 = *(void *)v33;
      while (2)
      {
        for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v33 != v9) {
            objc_enumerationMutation(obj);
          }
          uint64_t v11 = *(void **)(*((void *)&v32 + 1) + 8 * i);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0 && [v11 count] == (id)3)
          {
            uint64_t v12 = 0;
            while (1)
            {
              uint64_t v13 = [v11 objectAtIndex:v12];
              objc_opt_class();
              char isKindOfClass = objc_opt_isKindOfClass();

              if ((isKindOfClass & 1) == 0) {
                break;
              }
              if (++v12 == 3) {
                goto LABEL_19;
              }
            }
            long long v16 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t buf = 68289026;
              __int16 v38 = 2082;
              __int16 v39 = "";
              _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,isLocationInCircle,skipping invalid circle\"}", (uint8_t *)&buf, 0x12u);
            }
LABEL_19:
            double v17 = [v11 objectAtIndex:0];
            [v17 doubleValue];

            id v18 = [v11 objectAtIndex:1];
            [v18 doubleValue];

            uint64_t v19 = [v11 objectAtIndex:2];
            [v19 doubleValue];
            double v21 = v20;

            GEOCalculateDistance();
            if (v22 + a4 <= v21)
            {
              id v28 = SALogObjectGeneral;
              if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG))
              {
                uint64_t buf = 68289026;
                __int16 v38 = 2082;
                __int16 v39 = "";
                _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#geometry,isLocationInCircle,true\"}", (uint8_t *)&buf, 0x12u);
              }

              uint64_t v6 = 1;
              goto LABEL_31;
            }
          }
          else
          {
            uint64_t v15 = SALogObjectGeneral;
            if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t buf = 68289026;
              __int16 v38 = 2082;
              __int16 v39 = "";
              _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,isLocationInCircle,skipping invalid circle\"}", (uint8_t *)&buf, 0x12u);
            }
          }
        }
        id v8 = [(SAGeometry *)obj countByEnumeratingWithState:&v32 objects:v36 count:16];
        if (v8) {
          continue;
        }
        break;
      }
    }

    uint64_t v23 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_27;
    }
    uint64_t buf = 68289026;
    __int16 v38 = 2082;
    __int16 v39 = "";
    double v24 = "{\"msg%{public}.0s\":\"#geometry,isLocationInCircle,false\"}";
    CLLocationDegrees v25 = v23;
    os_log_type_t v26 = OS_LOG_TYPE_DEBUG;
LABEL_26:
    _os_log_impl((void *)&_mh_execute_header, v25, v26, v24, (uint8_t *)&buf, 0x12u);
LABEL_27:
    uint64_t v6 = 0;
    goto LABEL_31;
  }
  uint64_t v27 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289026;
    __int16 v38 = 2082;
    __int16 v39 = "";
    double v24 = "{\"msg%{public}.0s\":\"#geometry,isLocationInCircle,empty circles\"}";
    CLLocationDegrees v25 = v27;
    os_log_type_t v26 = OS_LOG_TYPE_DEFAULT;
    goto LABEL_26;
  }
LABEL_31:

  return v6;
}

void sub_100090F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t SAGeometry::isCircleInGeometryHelper(SAGeometry *this, CLLocationDegrees a2, CLLocationDegrees a3, double a4, double *a5, NSArray *a6)
{
  id v10 = a5;
  uint64_t v11 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289795;
    int v35 = 0;
    __int16 v36 = 2082;
    uint64_t v37 = "";
    __int16 v38 = 2049;
    CLLocationDegrees latitude = a2;
    __int16 v40 = 2049;
    CLLocationDegrees longitude = a3;
    __int16 v42 = 2049;
    *(double *)double v43 = a4;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,isCircleInGeometry\", \"lat\":\"%{private}0.6f\", \"lon\":\"%{private}0.6f\", \"radiusMeters\":\"%{private}0.6f\"}", buf, 0x30u);
  }
  if (!v10)
  {
    uint64_t v27 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v35 = 0;
      __int16 v36 = 2082;
      uint64_t v37 = "";
      id v28 = "{\"msg%{public}.0s\":\"#geometry,isCircleInGeometry,fPolygons is nil\"}";
LABEL_26:
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, v28, buf, 0x12u);
    }
LABEL_27:
    uint64_t v29 = 0;
    *(void *)this = 0xBFF0000000000000;
    goto LABEL_35;
  }
  uint64_t v12 = (char *)[v10 count];
  if (!v12)
  {
    uint64_t v27 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v35 = 0;
      __int16 v36 = 2082;
      uint64_t v37 = "";
      id v28 = "{\"msg%{public}.0s\":\"#geometry,isCircleInGeometry,fPolygons is empty\"}";
      goto LABEL_26;
    }
    goto LABEL_27;
  }
  *(void *)this = 0xBFF0000000000000;
  uint64_t v13 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289795;
    int v35 = 0;
    __int16 v36 = 2082;
    uint64_t v37 = "";
    __int16 v38 = 2049;
    CLLocationDegrees latitude = a2;
    __int16 v40 = 2049;
    CLLocationDegrees longitude = a3;
    __int16 v42 = 2049;
    *(double *)double v43 = a4;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,isCircleInGeometry\", \"lat\":\"%{private}0.6f\", \"lon\":\"%{private}0.6f\", \"radiusMeters\":\"%{private}0.6f\"}", buf, 0x30u);
  }
  uint64_t v15 = 0;
  *(void *)&long long v14 = 68289539;
  long long v32 = v14;
  do
  {
    long long v16 = [v10 objectAtIndex:v15, v32];
    double v33 = -1.0;
    CLLocationCoordinate2D v17 = CLLocationCoordinate2DMake(a2, a3);
    unsigned int v18 = [v16 containsCoordinate:&v33];
    uint64_t v19 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68290051;
      int v35 = 0;
      __int16 v36 = 2082;
      uint64_t v37 = "";
      __int16 v38 = 2049;
      CLLocationDegrees latitude = v17.latitude;
      __int16 v40 = 2049;
      CLLocationDegrees longitude = v17.longitude;
      __int16 v42 = 1025;
      LODWORD(v43[0]) = v18;
      WORD2(v43[0]) = 2049;
      *(double *)((char *)v43 + 6) = v33;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,isCircleInPolygonResult\", \"lat\":\"%{private}0.6f\", \"lat\":\"%{private}0.6f\", \"inside\":%{private}hhd, \"distance\":\"%{private}0.6f\"}", buf, 0x36u);
    }
    if (v18)
    {
      __int16 v30 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        int v35 = 0;
        __int16 v36 = 2082;
        uint64_t v37 = "";
        _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,isCircleInGeometry,YES\"}", buf, 0x12u);
      }

      goto LABEL_31;
    }
    double v20 = *(double *)this;
    double v21 = v33;
    if (*(double *)this == -1.0)
    {
      *(double *)this = v33;
      double v22 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = v32;
        int v35 = 0;
        __int16 v36 = 2082;
        uint64_t v37 = "";
        __int16 v38 = 2049;
        CLLocationDegrees latitude = v21;
        __int16 v40 = 2049;
        CLLocationDegrees longitude = v21;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,initClosestDistance\", \"distance\":\"%{private}0.2f\", \"closestDistance\":\"%{private}0.2f\"}", buf, 0x26u);
      }
    }
    else if (v20 > v33)
    {
      uint64_t v23 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = v32;
        int v35 = 0;
        __int16 v36 = 2082;
        uint64_t v37 = "";
        __int16 v38 = 2049;
        CLLocationDegrees latitude = v21;
        __int16 v40 = 2049;
        CLLocationDegrees longitude = v20;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,adjustClosestDistance\", \"distance\":\"%{private}0.2f\", \"closestDistance\":\"%{private}0.2f\"}", buf, 0x26u);
        double v21 = v33;
      }
      *(double *)this = v21;
    }

    ++v15;
  }
  while (v12 != v15);
  double v24 = *(double *)this;
  CLLocationDegrees v25 = SALogObjectGeneral;
  BOOL v26 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
  if (v24 < a4)
  {
    if (v26)
    {
      *(_DWORD *)uint64_t buf = v32;
      int v35 = 0;
      __int16 v36 = 2082;
      uint64_t v37 = "";
      __int16 v38 = 2049;
      CLLocationDegrees latitude = a4;
      __int16 v40 = 2049;
      CLLocationDegrees longitude = v24;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,isCircleInGeometry,closeEnough\", \"radiusMeters\":\"%{private}0.2f\", \"distance\":\"%{private}0.2f\"}", buf, 0x26u);
    }
LABEL_31:
    uint64_t v29 = 1;
    goto LABEL_35;
  }
  if (v26)
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v35 = 0;
    __int16 v36 = 2082;
    uint64_t v37 = "";
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,isCircleInGeometry,NO\"}", buf, 0x12u);
  }
  uint64_t v29 = 0;
LABEL_35:

  return v29;
}

void sub_100091560(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t SAGeometry::isCircleInGeometry(SAGeometry *this, CLLocationDegrees a2, CLLocationDegrees a3, double a4, SAGeometry *a5, NSArray *a6)
{
  if (*((_DWORD *)this + 10)) {
    return SAGeometry::isCircleInGeometryHelper(a5, a2, a3, a4, *(double **)this, a6);
  }
  else {
    return SAGeometry::doCirclesOverlap((double *)a5, *((double *)this + 2), *((double *)this + 3), *((double *)this + 4), a2, a3, a4);
  }
}

uint64_t SAGeometry::doCirclesOverlap(double *a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  v16[0] = a2;
  v16[1] = a3;
  v16[2] = a4;
  v15[0] = a5;
  v15[1] = a6;
  _DWORD v15[2] = a7;
  *a1 = 0.0;
  if sub_100091BFC(v16) && (sub_100091BFC(v15))
  {
    CLClientGetDistanceCoordinates();
    double v11 = v10 - (a4 + a7);
    if (v11 >= 0.0)
    {
      uint64_t result = 0;
      *a1 = a7 + v11;
    }
    else
    {
      return 1;
    }
  }
  else
  {
    uint64_t v13 = SALogObjectGeneral;
    BOOL v14 = os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (v14)
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v18 = 0;
      __int16 v19 = 2082;
      double v20 = "";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,doCirclesOverlap,invalidCircles\"}", buf, 0x12u);
      return 0;
    }
  }
  return result;
}

void SAGeometry::area(SAGeometry *this)
{
  __int16 v2 = *(void **)this;
  if (!*(void *)this && (sub_100091BFC((double *)this + 2) & 1) == 0)
  {
    uint64_t v31 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v40 = 0;
    __int16 v41 = 2082;
    __int16 v42 = "";
    long long v32 = "{\"msg%{public}.0s\":\"#geometry,area,#warning,fPolygons and fCircle is nil\"}";
    goto LABEL_23;
  }
  if (sub_100091BFC((double *)this + 2)) {
    return;
  }
  id v3 = [v2 count];
  if (!v3)
  {
    uint64_t v31 = SALogObjectGeneral;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v40 = 0;
    __int16 v41 = 2082;
    __int16 v42 = "";
    long long v32 = "{\"msg%{public}.0s\":\"#geometry,area,#warning,fPolygons is empty\"}";
LABEL_23:
    _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, v32, buf, 0x12u);
    return;
  }
  uint64_t v5 = 0;
  double v6 = 0.0;
  *(void *)&long long v4 = 68289283;
  long long v35 = v4;
  id v36 = v3;
LABEL_6:
  double v37 = v6;
  __int16 v38 = [*(id *)this objectAtIndex:v5, v35];
  uint64_t v7 = [v38 vertices];
  id v8 = v7;
  if (v7)
  {
    uint64_t v9 = (char *)[v7 count];
    double v10 = v9;
    if ((unint64_t)(v9 - 3) <= 0x61)
    {
      double v11 = 0;
      uint64_t v12 = v9 - 1;
      double v13 = 0.0;
      while (1)
      {
        BOOL v14 = [v8 objectAtIndexedSubscript:v11];
        if (!v14) {
          goto LABEL_25;
        }
        if (v12 == v11) {
          uint64_t v15 = 0;
        }
        else {
          uint64_t v15 = v11 + 1;
        }
        long long v16 = [v8 objectAtIndexedSubscript:v15];
        if (!v16)
        {

          goto LABEL_25;
        }
        id v17 = v14;
        [v17 coordinate];
        double v19 = v18;
        [v17 coordinate];
        double v21 = v20;
        double v22 = cos(v19 * 3.14159265 / 180.0);

        id v23 = v16;
        [v23 coordinate];
        double v25 = v24;
        [v23 coordinate];
        double v27 = v26;
        double v28 = cos(v25 * 3.14159265 / 180.0);

        ++v11;
        double v13 = v13 + v22 * (v21 * 111320.119) * (v25 * -111320.119) + v28 * (v27 * 111320.119) * (v19 * 111320.119);
        if (v10 == v11)
        {

          double v29 = fabs(v13 * 0.5);
          __int16 v30 = SALogObjectGeneral;
          if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)uint64_t buf = v35;
            int v40 = 0;
            __int16 v41 = 2082;
            __int16 v42 = "";
            __int16 v43 = 2049;
            double v44 = v29;
            _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#geometry,area,subArea\", \"subArea\":\"%{private}0.1f\"}", buf, 0x1Cu);
          }
          double v6 = v37 + v29;
          if ((id)++v5 != v36) {
            goto LABEL_6;
          }
          return;
        }
      }
    }
    double v33 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v40 = 0;
      __int16 v41 = 2082;
      __int16 v42 = "";
      long long v34 = "{\"msg%{public}.0s\":\"#geometry,area,#warning,invalidCount\"}";
      goto LABEL_31;
    }
  }
  else
  {
    double v33 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v40 = 0;
      __int16 v41 = 2082;
      __int16 v42 = "";
      long long v34 = "{\"msg%{public}.0s\":\"#geometry,area,#warning,noVertices\"}";
LABEL_31:
      _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, v34, buf, 0x12u);
    }
  }
LABEL_25:
}

void sub_100091BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100091BFC(double *a1)
{
  if (a1[2] <= 0.0) {
    return 0;
  }
  uint64_t result = 0;
  double v3 = *a1;
  if (*a1 >= -90.0 && v3 <= 90.0)
  {
    uint64_t result = 0;
    double v4 = a1[1];
    if (v4 >= -180.0 && v4 <= 180.0)
    {
      BOOL v5 = fabs(fabs(v3) + -0.0000001) > 0.0000001;
      return fabs(fabs(v4) + -0.0000001) > 0.0000001 || v5;
    }
  }
  return result;
}

void SALockMonitor::create(void *a1)
{
  if (*((unsigned char *)sub_10003E368() + 232)) {
    sub_100091D44();
  }
  sub_100091E58();
}

void sub_100091D28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_100091D44()
{
}

void sub_100091E14(uint64_t a1, ...)
{
  va_start(va1, a1);
  va_start(va, a1);
  uint64_t v1 = va_arg(va1, void);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  sub_100021E70((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);
  operator delete();
}

void sub_100091E58()
{
}

void sub_100091F28(uint64_t a1, ...)
{
  va_start(va1, a1);
  va_start(va, a1);
  uint64_t v1 = va_arg(va1, void);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  sub_100021E70((uint64_t *)va);
  sub_10000F6D4((uint64_t *)va1);
  operator delete();
}

void SACoreTelephony::create(void *a1)
{
  id v1 = a1;
  if (*((unsigned char *)sub_10003E368() + 24)) {
    operator new();
  }
  operator new();
}

void sub_100092128(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);

  _Unwind_Resume(a1);
}

void SACoreTelephony::onWeaDisplayedNotification(SACoreTelephony *this, const char *a2)
{
  uint64_t v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289283;
    v5[1] = 0;
    __int16 v6 = 2082;
    uint64_t v7 = "";
    __int16 v8 = 2081;
    uint64_t v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saCoreTelephony,onWeaDisplayedNotification\", \"message\":%{private, location:escape_only}s}", (uint8_t *)v5, 0x1Cu);
  }
  if (*((void *)this + 5)) {
    sub_10008DBE4((uint64_t)this + 16, (uint64_t)a2);
  }
}

void SACoreTelephony::onWeaReceivedNotification(SACoreTelephony *this, NSDictionary *a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = v3;
  if (v3)
  {
    [(NSDictionary *)v3 enumerateKeysAndObjectsUsingBlock:&stru_1000FA770];
    if (*((void *)this + 9)) {
      sub_1000924B0((uint64_t)this + 48, v4);
    }
  }
  else
  {
    uint64_t v5 = SALogObjectGeneral;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      v6[0] = 68289026;
      v6[1] = 0;
      __int16 v7 = 2082;
      __int16 v8 = "";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saCoreTelephony,onWeaReceivedNotification,alert does not have any info,ignoring.\"}", (uint8_t *)v6, 0x12u);
    }
  }
}

void sub_1000923AC(_Unwind_Exception *exception_object)
{
}

void sub_1000923C4(id a1, id a2, id a3, BOOL *a4)
{
  id v5 = a2;
  id v6 = a3;
  __int16 v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v8[0] = 68289539;
    v8[1] = 0;
    __int16 v9 = 2082;
    double v10 = "";
    __int16 v11 = 2113;
    id v12 = v5;
    __int16 v13 = 2113;
    id v14 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saCoreTelephony,onWeaReceivedNotification\", \"key\":%{private, location:escape_only}@, \"value\":%{private, location:escape_only}@}", (uint8_t *)v8, 0x26u);
  }
}

void sub_1000924B0(uint64_t a1, void *a2)
{
  id v4 = a2;
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3) {
    sub_100005520();
  }
  (*(void (**)(uint64_t, id *))(*(void *)v3 + 48))(v3, &v4);
}

void sub_100092520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void SACoreTelephony::onEnhanceDeliveryStateChange(SACoreTelephony *this, int a2)
{
  id v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 68289282;
    v5[1] = 0;
    __int16 v6 = 2082;
    __int16 v7 = "";
    __int16 v8 = 1026;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ctsa,onEnhanceDeliveryStateChange,\", \"enhancedDeliveryState,\":%{public}hhd}", (uint8_t *)v5, 0x18u);
  }
  if (*((void *)this + 17)) {
    sub_100045970((uint64_t)this + 112, a2);
  }
}

void SACoreTelephony::onMotionHarvestWeaTrigger(SACoreTelephony *this, NSDictionary *a2)
{
  uint64_t v3 = a2;
  if ([*(id *)SAPlatformInfo::instance((SAPlatformInfo *)v3) isEqualToString:@"iPhone"])
  {
    if (v3)
    {
      if (*((void *)this + 21)) {
        sub_1000924B0((uint64_t)this + 144, v3);
      }
    }
    else
    {
      id v4 = SALogObjectGeneral;
      if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
      {
        v5[0] = 68289026;
        v5[1] = 0;
        __int16 v6 = 2082;
        __int16 v7 = "";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saCoreTelephony,onMotionHarvestWeaTrigger,alert does not have any info,ignoring.\"}", (uint8_t *)v5, 0x12u);
      }
    }
  }
}

void sub_100092710(_Unwind_Exception *exception_object)
{
}

uint64_t SACoreTelephony::getEnhancedDeliveryState()
{
  _CTServerConnectionGetCellBroadcastConfig();
  int v0 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v3 = 0;
    __int16 v4 = 2082;
    id v5 = "";
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#ctsa,GetCellBroadcastConfig error\"}", buf, 0x12u);
  }
  return 0;
}

void sub_100092C98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100092CC4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100092CFC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_100092D2C(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else {
    return 0;
  }
}

void sub_100092D74(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100092DAC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_100092DDC(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else {
    return 0;
  }
}

double SACommonUtils::extractCFAbsoluteTimeFromTimeString(unsigned __int8 *a1)
{
  id v1 = a1;
  uint64_t v2 = a1[23];
  if ((char)a1[23] < 0)
  {
    uint64_t v4 = *((void *)a1 + 1);
    if (v4)
    {
      int v3 = *(unsigned __int8 **)a1;
      goto LABEL_6;
    }
LABEL_21:
    uint64_t v10 = SALogObjectGeneral;
    double v11 = -1.0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      return v11;
    }
    *(_DWORD *)uint64_t buf = 68289026;
    int v38 = 0;
    __int16 v39 = 2082;
    int v40 = "";
    id v12 = "{\"msg%{public}.0s\":\"#sa_util,#warning,failed to compute cfabsolutetime from timestring length is 0\"}";
    __int16 v13 = v10;
    uint32_t v14 = 18;
LABEL_26:
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, v12, buf, v14);
    return v11;
  }
  if (!a1[23]) {
    goto LABEL_21;
  }
  int v3 = a1;
  uint64_t v4 = a1[23];
LABEL_6:
  uint64_t v5 = 0;
  do
  {
    int v6 = *v3++;
    if (v6 == 58) {
      ++v5;
    }
    --v4;
  }
  while (v4);
  if ((v2 & 0x80u) != 0)
  {
    a1 = *(unsigned __int8 **)a1;
    uint64_t v2 = *((void *)v1 + 1);
  }
  if (!v2)
  {
    LODWORD(v8) = 0;
LABEL_24:
    uint64_t v15 = SALogObjectGeneral;
    double v11 = -1.0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      return v11;
    }
    *(_DWORD *)uint64_t buf = 68289538;
    int v38 = 0;
    __int16 v39 = 2082;
    int v40 = "";
    __int16 v41 = 1026;
    *(_DWORD *)__int16 v42 = v5;
    *(_WORD *)&void v42[4] = 1026;
    *(_DWORD *)&v42[6] = v8;
    id v12 = "{\"msg%{public}.0s\":\"#sa_util,#warning,timestring format not supported\", \"colonCount\":%{public}d, \"dashC"
          "ount\":%{public}d}";
    __int16 v13 = v15;
    uint32_t v14 = 30;
    goto LABEL_26;
  }
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  do
  {
    if (a1[v7] == 45) {
      ++v8;
    }
    ++v7;
  }
  while (v2 != v7);
  if ((unint64_t)(v5 - 3) < 0xFFFFFFFFFFFFFFFELL || v8 != 2) {
    goto LABEL_24;
  }
  __int16 v36 = 0;
  int v35 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  int v32 = 0;
  if (v5 == 2)
  {
    sscanf((const char *)a1, "%d-%d-%d%c%d:%d:%d%c", &v35, (char *)&v34 + 4, &v34, (char *)&v36 + 1, (char *)&v33 + 4, &v33, &v32, &v36);
    int v9 = v32;
  }
  else
  {
    sscanf((const char *)a1, "%d-%d-%d%c%d:%d%c", &v35, (char *)&v34 + 4, &v34, (char *)&v36 + 1, (char *)&v33 + 4, &v33, &v36);
    int v9 = 0;
  }
  int v17 = v35;
  double v18 = SALogObjectGeneral;
  if ((v35 - 2022) > 0x1B
    || (int v19 = HIDWORD(v34), SHIDWORD(v34) < 1)
    || SHIDWORD(v34) > 12
    || (int v20 = v34, (int)v34 < 1)
    || (int)v34 > 31
    || (int v21 = HIDWORD(v33), v33 < 0)
    || SHIDWORD(v33) > 23
    || (int v22 = v33, (v33 & 0x80000000) != 0)
    || (int)v33 > 59
    || v9 < 0
    || v9 > 59)
  {
    double v11 = -1.0;
    if (!os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_ERROR)) {
      return v11;
    }
    if ((v1[23] & 0x80u) == 0) {
      uint64_t v31 = v1;
    }
    else {
      uint64_t v31 = *(unsigned __int8 **)v1;
    }
    *(_DWORD *)uint64_t buf = 68289795;
    int v38 = 0;
    __int16 v39 = 2082;
    int v40 = "";
    __int16 v41 = 2081;
    *(void *)__int16 v42 = v31;
    *(_WORD *)&v42[8] = 1026;
    int v43 = v5;
    __int16 v44 = 1026;
    int v45 = 2;
    id v12 = "{\"msg%{public}.0s\":\"#sa_util,#warning,failed to compute cfabsolutetime from timestring\", \"timeString\":%{"
          "private, location:escape_only}s, \"colonCount\":%{public}d, \"dashCount\":%{public}d}";
    __int16 v13 = v18;
    uint32_t v14 = 40;
    goto LABEL_26;
  }
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289538;
    int v38 = 0;
    __int16 v39 = 2082;
    int v40 = "";
    __int16 v41 = 1026;
    *(_DWORD *)__int16 v42 = v5;
    *(_WORD *)&void v42[4] = 1026;
    *(_DWORD *)&v42[6] = 2;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#sa_util,time extracted from timestring\", \"colonCount\":%{public}d, \"dashCount\":%{public}d}", buf, 0x1Eu);
    int v22 = v33;
    int v21 = HIDWORD(v33);
    int v20 = v34;
    int v19 = HIDWORD(v34);
    int v17 = v35;
  }
  int v23 = v32;
  double v24 = +[NSCalendar currentCalendar];
  double v25 = +[NSDate date];
  double v26 = [v24 components:28 fromDate:v25];

  if (v20 >= 1 && v19 >= 1 && v17 >= 1)
  {
    [v26 setYear:v17];
    [v26 setMonth:v19];
    [v26 setDay:v20];
  }
  [v26 setHour:v21];
  [v26 setMinute:v22];
  [v26 setSecond:(uint64_t)(float)v23];
  double v27 = +[NSTimeZone timeZoneForSecondsFromGMT:0];
  [v26 setTimeZone:v27];

  double v28 = +[NSCalendar currentCalendar];
  double v29 = [v28 dateFromComponents:v26];
  [v29 timeIntervalSinceReferenceDate];
  double v11 = v30;

  return v11;
}