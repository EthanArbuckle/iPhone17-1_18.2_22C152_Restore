uint64_t sub_10009AE24()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  char v4;
  char v5;
  __CFString *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Swift::String v10;
  id v11;
  NSString v12;
  unsigned char *v13;
  Swift::String v14;
  id v15;
  NSString v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  id v20;
  NSString v21;
  int v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  int v28;
  Swift::String v29;
  id v30;
  NSString v31;
  id v32;
  NSString v33;
  uint64_t v34;
  char v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  Swift::String v40;
  Swift::String v41;
  id v42;
  NSString v43;
  void *v44;
  Swift::String v45;
  Swift::String v46;
  id v47;
  NSString v48;
  Swift::String v49;
  __CFString *v50;
  uint64_t v51;
  void *v52;
  void *v53;
  Swift::String v54;
  id v55;
  NSString v56;
  __CFString *v57;
  void *v58;
  Swift::String v59;
  Swift::String v60;
  id v61;
  NSString v62;

  v1 = v0;
  if (qword_10035A520 != -1) {
    swift_once();
  }
  v2 = *(id *)(qword_1003AC750 + 1200);
  v3 = sub_1001003AC();
  v5 = v4;

  if (v5)
  {
    v13 = (unsigned char *)(v1 + OBJC_IVAR____TtC17proximitycontrold8Identity_cachedDeviceAsset);
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC17proximitycontrold8Identity_cachedDeviceAsset + 8) != 1) {
      return *(void *)v13;
    }
    _StringGuts.grow(_:)(26);
    sub_100098B18();
    swift_bridgeObjectRelease();
    v14._object = (void *)0x80000001002B7320;
    v14._countAndFlagsBits = 0xD000000000000018;
    String.append(_:)(v14);
    v15 = sub_1001F6410();
    swift_bridgeObjectRetain();
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v15 ulog:40 message:v16];
    swift_bridgeObjectRelease();

    v17 = sub_10009A88C();
    if (v18 && (v19 = sub_1001AC620(v17, v18), v19 != 11))
    {
      v23 = v19;
      v22 = 1;
    }
    else
    {
      v20 = sub_1001F6410();
      v21 = String._bridgeToObjectiveC()();
      [v20 ulog:90 message:v21];

      v22 = 0;
      v23 = 11;
    }
    v24 = sub_1000983CC();
    if (!v25)
    {
      v32 = sub_1001F6410();
      v33 = String._bridgeToObjectiveC()();
      [v32 ulog:60 message:v33];

      return 0;
    }
    v26 = v24;
    v27 = (void *)v25;
    v28 = sub_1001AC344(v24, v25);
    if (v28 == 7)
    {
      _StringGuts.grow(_:)(49);
      swift_bridgeObjectRelease();
      v29._countAndFlagsBits = v26;
      v29._object = v27;
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      v30 = sub_1001F6410();
      swift_bridgeObjectRetain();
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v30 ulog:60 message:v31];
      swift_bridgeObjectRelease();

      return 0;
    }
    v34 = 7104878;
    swift_bridgeObjectRelease();
    if (v28 == 2)
    {
      if (v23 == 11) {
        goto LABEL_28;
      }
      if (v23 == 1)
      {
        v3 = 7;
        goto LABEL_36;
      }
      if (v23 != 2)
      {
LABEL_28:
        _StringGuts.grow(_:)(48);
        swift_bridgeObjectRelease();
        if (v23 == 11)
        {
          v38 = (void *)0xE300000000000000;
        }
        else
        {
          v34 = String.init<A>(describing:)();
          v38 = v44;
        }
        v45._countAndFlagsBits = v34;
        v45._object = v38;
        String.append(_:)(v45);
        swift_bridgeObjectRelease();
        v46._object = (void *)0x80000001002B7410;
        v46._countAndFlagsBits = 0xD000000000000018;
        String.append(_:)(v46);
        v47 = sub_1001F6410();
        swift_bridgeObjectRetain();
        v48 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v47 ulog:40 message:v48];
        swift_bridgeObjectRelease();

        v3 = 8;
      }
      else
      {
        v3 = 8;
      }
    }
    else
    {
      if (v28 != 1)
      {
        v3 = 0;
        v37 = (void *)0xE300000000000000;
LABEL_39:
        _StringGuts.grow(_:)(20);
        sub_100098B18();
        swift_bridgeObjectRelease();
        v59._countAndFlagsBits = 0xD000000000000010;
        v59._object = (void *)0x80000001002B73B0;
        String.append(_:)(v59);
        v60._countAndFlagsBits = v34;
        v60._object = v37;
        String.append(_:)(v60);
        swift_bridgeObjectRelease();
        v61 = sub_1001F6410();
        swift_bridgeObjectRetain();
        v62 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v61 ulog:40 message:v62];
        swift_bridgeObjectRelease();

        return v3;
      }
      if (v23 != 11 && (v35 = v23 - 1, (v23 - 1) < 0xAu) && ((0x273u >> v35) & 1) != 0)
      {
        v3 = qword_100293570[v35];
      }
      else
      {
        _StringGuts.grow(_:)(48);
        swift_bridgeObjectRelease();
        if (v23 == 11)
        {
          v36 = (void *)0xE300000000000000;
        }
        else
        {
          v34 = String.init<A>(describing:)();
          v36 = v39;
        }
        v40._countAndFlagsBits = v34;
        v40._object = v36;
        String.append(_:)(v40);
        swift_bridgeObjectRelease();
        v41._object = (void *)0x80000001002B7410;
        v41._countAndFlagsBits = 0xD000000000000018;
        String.append(_:)(v41);
        v42 = sub_1001F6410();
        swift_bridgeObjectRetain();
        v43 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v42 ulog:40 message:v43];
        swift_bridgeObjectRelease();

        v3 = 2;
      }
    }
LABEL_36:
    if (v22)
    {
      _StringGuts.grow(_:)(28);
      sub_100098B18();
      swift_bridgeObjectRelease();
      v49._object = (void *)0x80000001002B73D0;
      v49._countAndFlagsBits = 0xD000000000000018;
      String.append(_:)(v49);
      v50 = sub_1000A0344(v3);
      v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v53 = v52;

      v54._countAndFlagsBits = v51;
      v54._object = v53;
      String.append(_:)(v54);
      swift_bridgeObjectRelease();
      v55 = sub_1001F6410();
      swift_bridgeObjectRetain();
      v56 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v55 ulog:40 message:v56];
      swift_bridgeObjectRelease();

      *(void *)v13 = v3;
      v13[8] = 0;
    }
    v57 = sub_1000A0344(v3);
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v37 = v58;

    goto LABEL_39;
  }
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  v6 = sub_1000A0344(v3);
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v9 = v8;

  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11 = sub_1001F6410();
  swift_bridgeObjectRetain();
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 ulog:40 message:v12];
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_10009B634()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17proximitycontrold8Identity__bluetoothDevice;
  uint64_t v2 = sub_10000A38C(&qword_10035E2F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC17proximitycontrold8Identity__homekitAccessory;
  uint64_t v4 = sub_10000A38C(&qword_100360A40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v5 = v0 + OBJC_IVAR____TtC17proximitycontrold8Identity__rapportBTDevice;
  uint64_t v6 = sub_10000A38C(&qword_10035E328);
  v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  swift_bridgeObjectRelease();
  v7(v0 + OBJC_IVAR____TtC17proximitycontrold8Identity__wifiDevice, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10009B804()
{
  sub_10009B634();

  return swift_deallocClassInstance();
}

uint64_t sub_10009B85C()
{
  return type metadata accessor for Identity();
}

uint64_t type metadata accessor for Identity()
{
  uint64_t result = qword_1003606A0;
  if (!qword_1003606A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10009B8B0()
{
  sub_10009BA30(319, &qword_1003606B0, &qword_10035E308);
  if (v0 <= 0x3F)
  {
    sub_10009BA30(319, &qword_1003606B8, &qword_1003606C0);
    if (v1 <= 0x3F)
    {
      sub_10009BA30(319, (unint64_t *)&unk_1003606C8, &qword_10035E340);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_10009BA30(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_10000A3D0(a3);
    unint64_t v4 = type metadata accessor for Published();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for Identity.SourceType(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Identity.SourceType(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Identity.SourceType(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

uint64_t sub_10009BAE0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10009BAFC(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)uint64_t result = a2 - 1;
    *(unsigned char *)(result + 4) = 1;
  }
  else
  {
    *(unsigned char *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Identity.SourceType()
{
  return &type metadata for Identity.SourceType;
}

uint64_t sub_10009BB2C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Identity();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10009BB6C()
{
  return sub_100098B18();
}

uint64_t sub_10009BB90()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A38C(&qword_10036C090);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  v122 = (char *)v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v121 - v5;
  unint64_t v7 = type metadata accessor for UUID();
  v8 = *(void **)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v11 = (id)v125;
  uint64_t v123 = v1;
  if (v125 && (id v12 = [(id)v125 identifier], v11, v12))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100089A9C(8);
    swift_bridgeObjectRelease();
    uint64_t v125 = 2118722;
    unint64_t v126 = 0xE300000000000000;
    v13._countAndFlagsBits = static String._fromSubstring(_:)();
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v125;
    unint64_t v15 = v126;
    v16 = sub_10008892C(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v18 = *((void *)v16 + 2);
    unint64_t v17 = *((void *)v16 + 3);
    if (v18 >= v17 >> 1) {
      v16 = sub_10008892C((char *)(v17 > 1), v18 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v18 + 1;
    v19 = &v16[16 * v18];
    *((void *)v19 + 4) = v14;
    *((void *)v19 + 5) = v15;
    uint64_t v1 = v123;
  }
  else
  {
    v16 = (char *)_swiftEmptyArrayStorage;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v20 = (id)v125;
  if (v125)
  {
    id v21 = [(id)v125 uniqueIdentifier];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    UUID.uuidString.getter();
    sub_100089A9C(8);
    swift_bridgeObjectRelease();
    uint64_t v22 = static String._fromSubstring(_:)();
    v24 = v23;
    swift_bridgeObjectRelease();
    (*((void (**)(char *, unint64_t))v8 + 1))(v10, v7);
    uint64_t v125 = 2116424;
    unint64_t v126 = 0xE300000000000000;
    v25._countAndFlagsBits = v22;
    v25._object = v24;
    String.append(_:)(v25);
    swift_bridgeObjectRelease();
    uint64_t v26 = v125;
    v27 = (void *)v126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_69:
    }
      v16 = sub_10008892C(0, *((void *)v16 + 2) + 1, 1, v16);
    unint64_t v29 = *((void *)v16 + 2);
    unint64_t v28 = *((void *)v16 + 3);
    uint64_t v1 = v123;
    if (v29 >= v28 >> 1) {
      v16 = sub_10008892C((char *)(v28 > 1), v29 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v29 + 1;
    v30 = &v16[16 * v29];
    *((void *)v30 + 4) = v26;
    *((void *)v30 + 5) = v27;
  }
  v31 = *(void **)(v1 + OBJC_IVAR____TtC17proximitycontrold8Identity_idsDevice);
  if (v31)
  {
    id v32 = [v31 uniqueID];
    if (v32)
    {
      v33 = v32;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_100089A9C(8);
      swift_bridgeObjectRelease();
      uint64_t v125 = 542327881;
      unint64_t v126 = 0xE400000000000000;
      v34._countAndFlagsBits = static String._fromSubstring(_:)();
      String.append(_:)(v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = v125;
      unint64_t v36 = v126;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v16 = sub_10008892C(0, *((void *)v16 + 2) + 1, 1, v16);
      }
      unint64_t v38 = *((void *)v16 + 2);
      unint64_t v37 = *((void *)v16 + 3);
      uint64_t v1 = v123;
      if (v38 >= v37 >> 1) {
        v16 = sub_10008892C((char *)(v37 > 1), v38 + 1, 1, v16);
      }
      *((void *)v16 + 2) = v38 + 1;
      v39 = &v16[16 * v38];
      *((void *)v39 + 4) = v35;
      *((void *)v39 + 5) = v36;
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v40 = (id)v125;
  if (v125)
  {
    id v41 = [(id)v125 effectiveIdentifier];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100089A9C(8);
    swift_bridgeObjectRelease();
    uint64_t v125 = 2117714;
    unint64_t v126 = 0xE300000000000000;
    v42._countAndFlagsBits = static String._fromSubstring(_:)();
    String.append(_:)(v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v43 = v125;
    unint64_t v44 = v126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v16 = sub_10008892C(0, *((void *)v16 + 2) + 1, 1, v16);
    }
    unint64_t v46 = *((void *)v16 + 2);
    unint64_t v45 = *((void *)v16 + 3);
    uint64_t v1 = v123;
    if (v46 >= v45 >> 1) {
      v16 = sub_10008892C((char *)(v45 > 1), v46 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v46 + 1;
    v47 = &v16[16 * v46];
    *((void *)v47 + 4) = v43;
    *((void *)v47 + 5) = v44;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v48 = (id)v125;
  if (v125)
  {
    id v49 = [(id)v125 effectiveIdentifier];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100089A9C(8);
    swift_bridgeObjectRelease();
    uint64_t v125 = 0x2054427072;
    unint64_t v126 = 0xE500000000000000;
    v50._countAndFlagsBits = static String._fromSubstring(_:)();
    String.append(_:)(v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = v125;
    unint64_t v52 = v126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v16 = sub_10008892C(0, *((void *)v16 + 2) + 1, 1, v16);
    }
    unint64_t v54 = *((void *)v16 + 2);
    unint64_t v53 = *((void *)v16 + 3);
    uint64_t v1 = v123;
    if (v54 >= v53 >> 1) {
      v16 = sub_10008892C((char *)(v53 > 1), v54 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v54 + 1;
    v55 = &v16[16 * v54];
    *((void *)v55 + 4) = v51;
    *((void *)v55 + 5) = v52;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v56 = (id)v125;
  if (v125)
  {
    id v57 = [(id)v125 mediaSystemIdentifier];

    if (v57)
    {
      v58 = v122;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v59 = 0;
    }
    else
    {
      uint64_t v59 = 1;
      v58 = v122;
    }
    (*((void (**)(char *, uint64_t, uint64_t, unint64_t))v8 + 7))(v58, v59, 1, v7);
    sub_10001639C((uint64_t)v58, (uint64_t)v6, &qword_10036C090);
    if ((*((unsigned int (**)(char *, uint64_t, unint64_t))v8 + 6))(v6, 1, v7) == 1)
    {
      sub_10000D78C((uint64_t)v6, &qword_10036C090);
    }
    else
    {
      UUID.uuidString.getter();
      sub_100089A9C(8);
      swift_bridgeObjectRelease();
      uint64_t v60 = static String._fromSubstring(_:)();
      v62 = v61;
      swift_bridgeObjectRelease();
      (*((void (**)(char *, unint64_t))v8 + 1))(v6, v7);
      uint64_t v125 = 0x20534D7072;
      unint64_t v126 = 0xE500000000000000;
      v63._countAndFlagsBits = v60;
      v63._object = v62;
      String.append(_:)(v63);
      swift_bridgeObjectRelease();
      uint64_t v64 = v125;
      unint64_t v65 = v126;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v16 = sub_10008892C(0, *((void *)v16 + 2) + 1, 1, v16);
      }
      unint64_t v67 = *((void *)v16 + 2);
      unint64_t v66 = *((void *)v16 + 3);
      uint64_t v1 = v123;
      if (v67 >= v66 >> 1) {
        v16 = sub_10008892C((char *)(v66 > 1), v67 + 1, 1, v16);
      }
      *((void *)v16 + 2) = v67 + 1;
      v68 = &v16[16 * v67];
      *((void *)v68 + 4) = v64;
      *((void *)v68 + 5) = v65;
    }
  }
  sub_100098724();
  if (v69)
  {
    sub_100089A9C(8);
    swift_bridgeObjectRelease();
    uint64_t v125 = 2118221;
    unint64_t v126 = 0xE300000000000000;
    v70._countAndFlagsBits = static String._fromSubstring(_:)();
    String.append(_:)(v70);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v71 = v125;
    unint64_t v72 = v126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v16 = sub_10008892C(0, *((void *)v16 + 2) + 1, 1, v16);
    }
    unint64_t v74 = *((void *)v16 + 2);
    unint64_t v73 = *((void *)v16 + 3);
    if (v74 >= v73 >> 1) {
      v16 = sub_10008892C((char *)(v73 > 1), v74 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v74 + 1;
    v75 = &v16[16 * v74];
    *((void *)v75 + 4) = v71;
    *((void *)v75 + 5) = v72;
  }
  unint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold8Identity_rapportIdentities);
  v8 = &unk_100356000;
  if (!v7)
  {
    v92 = (char *)_swiftEmptyArrayStorage;
    if (!_swiftEmptyArrayStorage[2]) {
      goto LABEL_78;
    }
    goto LABEL_73;
  }
  if (!(v7 >> 62))
  {
    uint64_t v26 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v26) {
      goto LABEL_51;
    }
LABEL_71:
    v122 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_72;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
  if (!v26) {
    goto LABEL_71;
  }
LABEL_51:
  uint64_t v6 = 0;
  v122 = (char *)_swiftEmptyArrayStorage;
  do
  {
    v76 = v6;
    while (1)
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v77 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v77 = *(id *)(v7 + 8 * (void)v76 + 32);
      }
      v27 = v77;
      uint64_t v6 = v76 + 1;
      if (__OFADD__(v76, 1))
      {
        __break(1u);
        goto LABEL_69;
      }
      id v78 = [v77 *((SEL *)v8 + 225)];
      if (v78) {
        break;
      }

      ++v76;
      if (v6 == (char *)v26) {
        goto LABEL_72;
      }
    }
    v79 = v78;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v80 = sub_100089A9C(8);
    v121[1] = v81;
    v121[2] = v80;
    swift_bridgeObjectRelease();
    sub_10009EE54([v27 type]);
    uint64_t v125 = String.init(cString:)();
    unint64_t v126 = v82;
    v83._countAndFlagsBits = 10272;
    v83._object = (void *)0xE200000000000000;
    String.append(_:)(v83);
    v84._countAndFlagsBits = static String._fromSubstring(_:)();
    String.append(_:)(v84);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v85._countAndFlagsBits = 41;
    v85._object = (void *)0xE100000000000000;
    String.append(_:)(v85);
    uint64_t v86 = v125;
    unint64_t v87 = v126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v122 = sub_10008892C(0, *((void *)v122 + 2) + 1, 1, v122);
    }
    unint64_t v89 = *((void *)v122 + 2);
    unint64_t v88 = *((void *)v122 + 3);
    if (v89 >= v88 >> 1) {
      v122 = sub_10008892C((char *)(v88 > 1), v89 + 1, 1, v122);
    }
    v90 = v122;
    *((void *)v122 + 2) = v89 + 1;
    v91 = &v90[16 * v89];
    *((void *)v91 + 4) = v86;
    *((void *)v91 + 5) = v87;

    v8 = &unk_100356000;
  }
  while (v6 != (char *)v26);
LABEL_72:
  swift_bridgeObjectRelease_n();
  v92 = v122;
  if (!*((void *)v122 + 2)) {
    goto LABEL_78;
  }
LABEL_73:
  uint64_t v125 = 0x3C2044495052;
  unint64_t v126 = 0xE600000000000000;
  v124 = v92;
  swift_bridgeObjectRetain();
  sub_10000A38C((uint64_t *)&unk_100367D40);
  sub_100089B9C();
  uint64_t v93 = BidirectionalCollection<>.joined(separator:)();
  v95 = v94;
  swift_bridgeObjectRelease();
  v96._countAndFlagsBits = v93;
  v96._object = v95;
  String.append(_:)(v96);
  swift_bridgeObjectRelease();
  v97._countAndFlagsBits = 62;
  v97._object = (void *)0xE100000000000000;
  String.append(_:)(v97);
  uint64_t v98 = v125;
  unint64_t v99 = v126;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    v16 = sub_10008892C(0, *((void *)v16 + 2) + 1, 1, v16);
  }
  unint64_t v101 = *((void *)v16 + 2);
  unint64_t v100 = *((void *)v16 + 3);
  if (v101 >= v100 >> 1) {
    v16 = sub_10008892C((char *)(v100 > 1), v101 + 1, 1, v16);
  }
  *((void *)v16 + 2) = v101 + 1;
  v102 = &v16[16 * v101];
  *((void *)v102 + 4) = v98;
  *((void *)v102 + 5) = v99;
LABEL_78:
  uint64_t v103 = sub_100096BBC();
  if (v103)
  {
    uint64_t v125 = 0x203A6C65523CLL;
    unint64_t v126 = 0xE600000000000000;
    v124 = sub_1000B44B8(v103);
    sub_10000A38C((uint64_t *)&unk_100367D40);
    sub_100089B9C();
    uint64_t v104 = BidirectionalCollection<>.joined(separator:)();
    v106 = v105;
    swift_bridgeObjectRelease();
    v107._countAndFlagsBits = v104;
    v107._object = v106;
    String.append(_:)(v107);
    swift_bridgeObjectRelease();
    v108._countAndFlagsBits = 62;
    v108._object = (void *)0xE100000000000000;
    String.append(_:)(v108);
    uint64_t v109 = v125;
    unint64_t v110 = v126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v16 = sub_10008892C(0, *((void *)v16 + 2) + 1, 1, v16);
    }
    unint64_t v112 = *((void *)v16 + 2);
    unint64_t v111 = *((void *)v16 + 3);
    if (v112 >= v111 >> 1) {
      v16 = sub_10008892C((char *)(v111 > 1), v112 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v112 + 1;
    v113 = &v16[16 * v112];
    *((void *)v113 + 4) = v109;
    *((void *)v113 + 5) = v110;
  }
  uint64_t v125 = 0;
  unint64_t v126 = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  uint64_t v125 = 0x797469746E656449;
  unint64_t v126 = 0xEA00000000002720;
  v114._countAndFlagsBits = sub_100098144();
  String.append(_:)(v114);
  swift_bridgeObjectRelease();
  v115._countAndFlagsBits = 8231;
  v115._object = (void *)0xE200000000000000;
  String.append(_:)(v115);
  v124 = v16;
  sub_10000A38C((uint64_t *)&unk_100367D40);
  sub_100089B9C();
  uint64_t v116 = BidirectionalCollection<>.joined(separator:)();
  v118 = v117;
  swift_bridgeObjectRelease();
  v119._countAndFlagsBits = v116;
  v119._object = v118;
  String.append(_:)(v119);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v125;
}

uint64_t sub_10009CB44()
{
  return sub_10009BB90();
}

void sub_10009CB68(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v11)
  {
    Hasher._combine(_:)(1u);
    id v4 = v11;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v11)
  {
    Hasher._combine(_:)(1u);
    id v5 = v11;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC17proximitycontrold8Identity_idsDevice);
  if (v6)
  {
    Hasher._combine(_:)(1u);
    id v7 = v6;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v11)
  {
    Hasher._combine(_:)(1u);
    id v8 = v11;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  unint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC17proximitycontrold8Identity_rapportIdentities);
  if (v9)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    sub_10009DA98(a1, v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v11)
  {
    Hasher._combine(_:)(1u);
    id v10 = v11;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_10009CE24()
{
  Hasher.init(_seed:)();
  sub_10009CB68((uint64_t)v1);
  return Hasher._finalize()();
}

void sub_10009CE68(uint64_t a1)
{
}

Swift::Int sub_10009CE8C()
{
  Hasher.init(_seed:)();
  sub_10009CB68((uint64_t)v1);
  return Hasher._finalize()();
}

BOOL sub_10009CECC()
{
  Hasher.init(_seed:)();
  sub_10009CB68((uint64_t)v2);
  Swift::Int v0 = Hasher._finalize()();
  Hasher.init(_seed:)();
  sub_10009CB68((uint64_t)v2);
  return v0 == Hasher._finalize()();
}

unint64_t sub_10009CF4C()
{
  unint64_t result = qword_100360A38;
  if (!qword_100360A38)
  {
    type metadata accessor for Identity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100360A38);
  }
  return result;
}

uint64_t sub_10009CFA4(uint64_t a1)
{
  long long v33 = xmmword_100291160;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v29[0])
  {
    uint64_t v3 = sub_100019E10(0, (unint64_t *)&unk_100365C90);
    id v4 = &off_10032E428;
  }
  else
  {
    uint64_t v3 = 0;
    id v4 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
  }
  uint64_t v34 = v29[0];
  uint64_t v37 = v3;
  unint64_t v38 = v4;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v29[0])
  {
    uint64_t v5 = sub_100019E10(0, &qword_1003650B0);
    uint64_t v6 = &off_10031F620;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v40 = 0;
    uint64_t v41 = 0;
  }
  uint64_t v39 = v29[0];
  uint64_t v42 = v5;
  uint64_t v43 = v6;
  id v7 = *(void **)(v1 + OBJC_IVAR____TtC17proximitycontrold8Identity_idsDevice);
  if (v7)
  {
    uint64_t v8 = sub_100019E10(0, &qword_100369900);
    unint64_t v9 = &off_100320778;
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    uint64_t v45 = 0;
    uint64_t v46 = 0;
  }
  unint64_t v44 = v7;
  uint64_t v47 = v8;
  id v48 = v9;
  swift_getKeyPath();
  swift_getKeyPath();
  id v10 = v7;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v29[0])
  {
    uint64_t v11 = sub_100019E10(0, &qword_10035E350);
    id v12 = &off_100335F20;
  }
  else
  {
    uint64_t v11 = 0;
    id v12 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = 0;
  }
  uint64_t v49 = v29[0];
  uint64_t v52 = v11;
  unint64_t v53 = v12;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v29[0])
  {
    uint64_t v13 = sub_100019E10(0, &qword_10035E350);
    uint64_t v14 = &off_100335F20;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v55 = 0;
    uint64_t v56 = 0;
  }
  uint64_t v54 = v29[0];
  uint64_t v57 = v13;
  v58 = v14;
  uint64_t v15 = 32;
  v16 = _swiftEmptyArrayStorage;
  do
  {
    sub_10000D728((uint64_t)&v32[v15], (uint64_t)v29, &qword_100360A48);
    sub_10001639C((uint64_t)v29, (uint64_t)&v26, &qword_100360A48);
    if (v27)
    {
      sub_10000D7E8(&v26, (uint64_t)v28);
      sub_10000D7E8(v28, (uint64_t)&v26);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v16 = sub_1000897F4(0, v16[2] + 1, 1, v16);
      }
      unint64_t v18 = v16[2];
      unint64_t v17 = v16[3];
      if (v18 >= v17 >> 1) {
        v16 = sub_1000897F4((void *)(v17 > 1), v18 + 1, 1, v16);
      }
      v16[2] = v18 + 1;
      sub_10000D7E8(&v26, (uint64_t)&v16[5 * v18 + 4]);
    }
    else
    {
      sub_10000D78C((uint64_t)&v26, &qword_100360A48);
    }
    v15 += 40;
  }
  while (v15 != 232);
  sub_10000A38C(&qword_100360A48);
  swift_arrayDestroy();
  *(void *)&v28[0] = v16;
  if (*(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold8Identity_rapportIdentities)) {
    v19 = *(void **)(v1 + OBJC_IVAR____TtC17proximitycontrold8Identity_rapportIdentities);
  }
  else {
    v19 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_10009D438((unint64_t)v19);
  swift_bridgeObjectRelease();
  sub_10008E154(v20);
  uint64_t v21 = *(void *)(*(void *)&v28[0] + 16);
  if (v21)
  {
    uint64_t v22 = *(void *)&v28[0] + 32;
    while (1)
    {
      sub_1000291F4(v22, (uint64_t)v29);
      uint64_t v23 = v30;
      uint64_t v24 = v31;
      sub_10000D6E4(v29, v30);
      if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 64))(a1, v23, v24)) {
        break;
      }
      sub_10000CC5C((uint64_t)v29);
      v22 += 40;
      if (!--v21) {
        goto LABEL_32;
      }
    }
    swift_bridgeObjectRelease();
    sub_10000CC5C((uint64_t)v29);
    return 1;
  }
  else
  {
LABEL_32:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_10009D438(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  unint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000B56D4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        unint64_t v17 = v3;
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1000B56D4(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v17;
        }
        ++v5;
        uint64_t v15 = sub_100019E10(0, (unint64_t *)&qword_100360A50);
        v16 = &off_1003260C8;
        *(void *)&long long v14 = v6;
        v3[2] = v8 + 1;
        sub_10000D7E8(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v9 = (void **)(a1 + 32);
      do
      {
        id v10 = *v9;
        unint64_t v17 = v3;
        unint64_t v12 = v3[2];
        unint64_t v11 = v3[3];
        id v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1000B56D4(v11 > 1, v12 + 1, 1);
          uint64_t v3 = v17;
        }
        uint64_t v15 = sub_100019E10(0, (unint64_t *)&qword_100360A50);
        v16 = &off_1003260C8;
        *(void *)&long long v14 = v13;
        v3[2] = v12 + 1;
        sub_10000D7E8(&v14, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_10009D62C(uint64_t a1)
{
  uint64_t result = sub_100099DEC(a1);
  if (!v2)
  {
    uint64_t v4 = result;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
    uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC17proximitycontrold8Identity_idsDevice);
    uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC17proximitycontrold8Identity_idsDevice);
    *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold8Identity_idsDevice) = v5;
    id v7 = v5;

    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
    *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold8Identity_rapportIdentities) = *(void *)(v4
                                                                                                 + OBJC_IVAR____TtC17proximitycontrold8Identity_rapportIdentities);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
    return swift_release();
  }
  return result;
}

uint64_t sub_10009D8E0@<X0>(void *a1@<X8>)
{
  return sub_10009D994(a1);
}

uint64_t sub_10009D8F4@<X0>(void *a1@<X8>)
{
  return sub_10009D994(a1);
}

uint64_t sub_10009D91C(void **a1)
{
  return sub_10009DA24(a1);
}

uint64_t sub_10009D930(void **a1)
{
  return sub_10009DA24(a1);
}

uint64_t sub_10009D958@<X0>(void *a1@<X8>)
{
  return sub_10009D994(a1);
}

uint64_t sub_10009D96C(void **a1)
{
  return sub_10009DA24(a1);
}

uint64_t sub_10009D980@<X0>(void *a1@<X8>)
{
  return sub_10009D994(a1);
}

uint64_t sub_10009D994@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10009DA10(void **a1)
{
  return sub_10009DA24(a1);
}

uint64_t sub_10009DA24(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return static Published.subscript.setter();
}

void sub_10009DA98(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    Swift::UInt v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    Hasher._combine(_:)(v8);
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v3) {
      return;
    }
  }
  else
  {
    Hasher._combine(_:)(*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10));
    uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      NSObject.hash(into:)();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v5 = (void **)(a2 + 32);
    do
    {
      uint64_t v6 = *v5++;
      id v7 = v6;
      NSObject.hash(into:)();

      --v3;
    }
    while (v3);
  }
}

uint64_t sub_10009DBB0(void *a1, void *a2)
{
  v35[3] = sub_100019E10(0, &qword_10035E350);
  v35[4] = &off_100335F20;
  v35[0] = a2;
  sub_1000291F4((uint64_t)v35, (uint64_t)v34);
  id v4 = a1;
  id v5 = a2;
  sub_10000A38C(&qword_1003600D8);
  sub_100019E10(0, (unint64_t *)&unk_100365C90);
  if (!swift_dynamicCast())
  {
    sub_1000291F4((uint64_t)v35, (uint64_t)v33);
    sub_10000A38C(&qword_100360A58);
    if (swift_dynamicCast())
    {
      sub_10000D7E8(&v30, (uint64_t)v34);
      sub_1000291F4((uint64_t)v34, (uint64_t)v33);
      sub_10000D728((uint64_t)v33, (uint64_t)&v30, (uint64_t *)&unk_10036C0A0);
      uint64_t v14 = *((void *)&v31 + 1);
      if (*((void *)&v31 + 1))
      {
        uint64_t v15 = v32;
        sub_10000D6E4(&v30, *((uint64_t *)&v31 + 1));
        uint64_t v16 = sub_10024DF10();
        char v13 = sub_100148A48(v16, v14, *(void *)(v15 + 8));
        swift_bridgeObjectRelease();
        sub_10000CC5C((uint64_t)&v30);
      }
      else
      {
        sub_10000D78C((uint64_t)&v30, (uint64_t *)&unk_10036C0A0);
        char v13 = 0;
      }
      uint64_t v21 = (uint64_t *)&unk_10036C0A0;
    }
    else
    {
      uint64_t v32 = 0;
      long long v30 = 0u;
      long long v31 = 0u;
      sub_10000D78C((uint64_t)&v30, (uint64_t *)&unk_10036C0A0);
      sub_1000291F4((uint64_t)v35, (uint64_t)v34);
      if (swift_dynamicCast())
      {
        id v17 = v33[0];
        sub_100019E10(0, (unint64_t *)&qword_10035C098);
        id v8 = v17;
        if (static NSObject.== infix(_:_:)())
        {

          char v13 = 1;
          goto LABEL_16;
        }
        uint64_t v23 = sub_10024DF10();
        uint64_t v24 = sub_10024DF10();
        uint64_t v25 = sub_1001C8154(v24, v23);
        swift_bridgeObjectRelease();
        uint64_t v12 = *(void *)(v25 + 16);

        goto LABEL_3;
      }
      sub_1000291F4((uint64_t)v35, (uint64_t)v34);
      sub_100019E10(0, (unint64_t *)&qword_100360A50);
      if (swift_dynamicCast())
      {
        id v8 = v33[0];
        uint64_t v18 = sub_1000D215C();
        uint64_t v19 = sub_10024DF10();
        uint64_t v20 = sub_1001C8154(v19, v18);
        swift_bridgeObjectRelease();
        uint64_t v12 = *(void *)(v20 + 16);

        goto LABEL_4;
      }
      sub_1000291F4((uint64_t)v35, (uint64_t)v33);
      sub_10000A38C(&qword_100360A60);
      if (!swift_dynamicCast())
      {
        uint64_t v32 = 0;
        long long v30 = 0u;
        long long v31 = 0u;
        sub_10000D78C((uint64_t)&v30, &qword_100360A68);

        char v13 = 0;
        goto LABEL_16;
      }
      sub_10000D7E8(&v30, (uint64_t)v34);
      sub_1000291F4((uint64_t)v34, (uint64_t)v33);
      sub_10000D728((uint64_t)v33, (uint64_t)&v28, &qword_100360A68);
      if (v29)
      {
        sub_10000D7E8(&v28, (uint64_t)&v30);
        uint64_t v26 = *((void *)&v31 + 1);
        uint64_t v27 = v32;
        sub_10000D6E4(&v30, *((uint64_t *)&v31 + 1));
        char v13 = (*(uint64_t (**)(id, uint64_t))(*(void *)(v27 + 8) + 40))(v4, v26);
        sub_10000CC5C((uint64_t)&v30);
      }
      else
      {
        sub_10000D78C((uint64_t)&v28, &qword_100360A68);
        char v13 = 0;
      }
      uint64_t v21 = &qword_100360A68;
    }
    sub_10000D78C((uint64_t)v33, v21);
    sub_10000CC5C((uint64_t)v34);

    goto LABEL_16;
  }
  id v6 = v33[0];
  id v7 = v4;
  id v8 = v6;
  uint64_t v9 = sub_10024DF10();
  uint64_t v10 = sub_1001A7C6C();
  uint64_t v11 = sub_1001C8154(v10, v9);
  swift_bridgeObjectRelease();

  uint64_t v12 = *(void *)(v11 + 16);
LABEL_3:

LABEL_4:
  swift_release();
  char v13 = v12 != 0;
LABEL_16:
  sub_10000CC5C((uint64_t)v35);
  return v13 & 1;
}

uint64_t sub_10009E020(void *a1, void *a2)
{
  uint64_t v4 = sub_100019E10(0, &qword_100369900);
  v39[3] = v4;
  v39[4] = &off_100320778;
  v39[0] = a2;
  sub_1000291F4((uint64_t)v39, (uint64_t)v38);
  id v5 = a1;
  id v6 = a2;
  sub_10000A38C(&qword_1003600D8);
  sub_100019E10(0, (unint64_t *)&unk_100365C90);
  if (!swift_dynamicCast())
  {
    sub_1000291F4((uint64_t)v39, (uint64_t)v35);
    sub_10000A38C(&qword_100360A58);
    if (swift_dynamicCast())
    {
      sub_10000D7E8(&v32, (uint64_t)v38);
      sub_1000291F4((uint64_t)v38, (uint64_t)v35);
      char v19 = sub_100097424((uint64_t)v35);
      uint64_t v20 = (uint64_t *)&unk_10036C0A0;
LABEL_6:
      sub_10000D78C((uint64_t)v35, v20);
      sub_10000CC5C((uint64_t)v38);

      goto LABEL_14;
    }
    uint64_t v34 = 0;
    long long v32 = 0u;
    long long v33 = 0u;
    sub_10000D78C((uint64_t)&v32, (uint64_t *)&unk_10036C0A0);
    sub_1000291F4((uint64_t)v39, (uint64_t)v38);
    sub_100019E10(0, &qword_10035E350);
    if (swift_dynamicCast())
    {
      id v21 = v35[0];
      uint64_t v22 = sub_10024DF10();
      uint64_t v23 = sub_100096FDC();
      uint64_t v24 = sub_1001C8154(v23, v22);
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else
    {
      sub_1000291F4((uint64_t)v39, (uint64_t)v38);
      sub_100019E10(0, (unint64_t *)&qword_100360A50);
      if (!swift_dynamicCast())
      {
        sub_1000291F4((uint64_t)v39, (uint64_t)v35);
        sub_10000A38C(&qword_100360A60);
        if (!swift_dynamicCast())
        {
          uint64_t v34 = 0;
          long long v32 = 0u;
          long long v33 = 0u;
          sub_10000D78C((uint64_t)&v32, &qword_100360A68);

          char v19 = 0;
          goto LABEL_14;
        }
        sub_10000D7E8(&v32, (uint64_t)v38);
        sub_1000291F4((uint64_t)v38, (uint64_t)v35);
        char v19 = sub_100097504((uint64_t)v35);
        uint64_t v20 = &qword_100360A68;
        goto LABEL_6;
      }
      id v21 = v35[0];
      uint64_t v28 = sub_1000D215C();
      uint64_t v29 = sub_100096FDC();
      uint64_t v30 = sub_1001C8154(v29, v28);
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void *)(v30 + 16);
    }
    swift_release();
    char v19 = v25 != 0;
    goto LABEL_14;
  }
  id v7 = v35[0];
  v38[3] = v4;
  v38[4] = &off_100320750;
  v38[0] = v5;
  sub_10000D728((uint64_t)v38, (uint64_t)&v32, &qword_10035B618);
  if (*((void *)&v33 + 1))
  {
    sub_10000D7E8(&v32, (uint64_t)v35);
    uint64_t v8 = v36;
    uint64_t v9 = v37;
    sub_10000D6E4(v35, v36);
    uint64_t v10 = *(void *)(v9 + 8);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    id v12 = v7;
    id v13 = v5;
    id v14 = v12;
    uint64_t v15 = v11(v8, v10);
    uint64_t v16 = sub_1001A7C6C();
    uint64_t v17 = sub_1001C8154(v16, v15);
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void *)(v17 + 16);
    swift_release();
    char v19 = v18 != 0;
    sub_10000CC5C((uint64_t)v35);
  }
  else
  {
    id v26 = v5;
    id v27 = v7;
    sub_10000D78C((uint64_t)&v32, &qword_10035B618);
    char v19 = 0;
  }
  sub_10000D78C((uint64_t)v38, &qword_10035B618);

LABEL_14:
  sub_10000CC5C((uint64_t)v39);
  return v19 & 1;
}

uint64_t sub_10009E43C(void *a1, void *a2)
{
  uint64_t v4 = sub_100019E10(0, &qword_1003650B0);
  v43[3] = v4;
  v43[4] = &off_10031F620;
  v43[0] = a2;
  sub_1000291F4((uint64_t)v43, (uint64_t)v40);
  id v5 = a1;
  id v6 = a2;
  sub_10000A38C(&qword_1003600D8);
  sub_100019E10(0, (unint64_t *)&unk_100365C90);
  if (swift_dynamicCast())
  {
    id v7 = (void *)v37[0];
    uint64_t v41 = v4;
    uint64_t v42 = &off_10031F600;
    v40[0] = v5;
    sub_10000D728((uint64_t)v40, (uint64_t)&v34, (uint64_t *)&unk_10036C0A0);
    if (*((void *)&v35 + 1))
    {
      sub_10000D7E8(&v34, (uint64_t)v37);
      uint64_t v8 = v38;
      uint64_t v9 = v39;
      sub_10000D6E4(v37, v38);
      uint64_t v10 = *(void *)(v9 + 8);
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
      id v12 = v7;
      id v13 = v5;
      id v14 = v12;
      uint64_t v15 = v11(v8, v10);
      uint64_t v16 = sub_1001A7C6C();
      uint64_t v17 = sub_1001C8154(v16, v15);
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(v17 + 16);
      swift_release();
      char v19 = v18 != 0;
      sub_10000CC5C((uint64_t)v37);
    }
    else
    {
      id v28 = v5;
      id v29 = v7;
      sub_10000D78C((uint64_t)&v34, (uint64_t *)&unk_10036C0A0);
      char v19 = 0;
    }
    sub_10000D78C((uint64_t)v40, (uint64_t *)&unk_10036C0A0);

    goto LABEL_19;
  }
  sub_1000291F4((uint64_t)v43, (uint64_t)v37);
  sub_10000A38C(&qword_100360A58);
  if (swift_dynamicCast())
  {
    sub_10000D7E8(&v34, (uint64_t)v40);
    sub_1000291F4((uint64_t)v40, (uint64_t)v37);
    char v19 = sub_1000967EC((uint64_t)v37);
    uint64_t v20 = (uint64_t *)&unk_10036C0A0;
LABEL_6:
    sub_10000D78C((uint64_t)v37, v20);
    sub_10000CC5C((uint64_t)v40);

    goto LABEL_19;
  }
  uint64_t v36 = 0;
  long long v34 = 0u;
  long long v35 = 0u;
  sub_10000D78C((uint64_t)&v34, (uint64_t *)&unk_10036C0A0);
  sub_1000291F4((uint64_t)v43, (uint64_t)v40);
  sub_100019E10(0, &qword_10035E350);
  if (!swift_dynamicCast())
  {
    sub_1000291F4((uint64_t)v43, (uint64_t)v40);
    sub_100019E10(0, (unint64_t *)&qword_100360A50);
    if (swift_dynamicCast())
    {
      uint64_t v30 = (void *)v37[0];
      char v19 = sub_1000969AC();

      goto LABEL_19;
    }
    sub_1000291F4((uint64_t)v43, (uint64_t)v37);
    sub_10000A38C(&qword_100360A60);
    if (!swift_dynamicCast())
    {
      uint64_t v36 = 0;
      long long v34 = 0u;
      long long v35 = 0u;
      sub_10000D78C((uint64_t)&v34, &qword_100360A68);

      char v19 = 0;
      goto LABEL_19;
    }
    sub_10000D7E8(&v34, (uint64_t)v40);
    sub_1000291F4((uint64_t)v40, (uint64_t)v37);
    char v19 = sub_100096AE8((uint64_t)v37);
    uint64_t v20 = &qword_100360A68;
    goto LABEL_6;
  }
  id v21 = (void *)v37[0];
  uint64_t v41 = v4;
  uint64_t v42 = &off_10031F600;
  v40[0] = v5;
  sub_10000D728((uint64_t)v40, (uint64_t)v37, (uint64_t *)&unk_10036C0A0);
  uint64_t v22 = v38;
  if (v38)
  {
    uint64_t v23 = v39;
    sub_10000D6E4(v37, v38);
    id v24 = v21;
    id v25 = v5;
    id v26 = v24;
    uint64_t v27 = sub_10024DF10();
    char v19 = sub_100148A48(v27, v22, *(void *)(v23 + 8));
    swift_bridgeObjectRelease();
    sub_10000CC5C((uint64_t)v37);
  }
  else
  {
    id v31 = v5;
    id v32 = v21;
    sub_10000D78C((uint64_t)v37, (uint64_t *)&unk_10036C0A0);
    char v19 = 0;
  }
  sub_10000D78C((uint64_t)v40, (uint64_t *)&unk_10036C0A0);

LABEL_19:
  sub_10000CC5C((uint64_t)v43);
  return v19 & 1;
}

uint64_t sub_10009E8AC(void *a1, void *a2)
{
  id v35[3] = sub_100019E10(0, (unint64_t *)&unk_100365C90);
  v35[4] = &off_10032E428;
  v35[0] = a2;
  sub_1000291F4((uint64_t)v35, (uint64_t)v34);
  id v4 = a1;
  id v5 = a2;
  sub_10000A38C(&qword_1003600D8);
  if (swift_dynamicCast())
  {
    id v6 = v33[0];
    id v7 = [v4 identifier];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;

      id v12 = [v6 identifier];
      if (v12)
      {
        id v13 = v12;
        uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v16 = v15;

        if (v9 == v14 && v11 == v16) {
          char v17 = 1;
        }
        else {
          char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_19;
      }

      swift_bridgeObjectRelease();
    }
    else
    {
    }
    char v17 = 0;
LABEL_19:

    goto LABEL_20;
  }
  sub_1000291F4((uint64_t)v35, (uint64_t)v33);
  sub_10000A38C(&qword_100360A58);
  if (swift_dynamicCast())
  {
    sub_10000D7E8(&v30, (uint64_t)v34);
    sub_1000291F4((uint64_t)v34, (uint64_t)v33);
    char v17 = sub_1001A7B48((uint64_t)v33);
    uint64_t v18 = (uint64_t *)&unk_10036C0A0;
  }
  else
  {
    uint64_t v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
    sub_10000D78C((uint64_t)&v30, (uint64_t *)&unk_10036C0A0);
    sub_1000291F4((uint64_t)v35, (uint64_t)v34);
    sub_100019E10(0, &qword_10035E350);
    if (swift_dynamicCast())
    {
      char v19 = v33[0];
      uint64_t v20 = sub_10024DF10();
      uint64_t v21 = sub_1001A7C6C();
      uint64_t v22 = sub_1001C8154(v21, v20);
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)(v22 + 16);

      swift_release();
      char v17 = v23 != 0;
      goto LABEL_20;
    }
    sub_1000291F4((uint64_t)v35, (uint64_t)v34);
    sub_100019E10(0, (unint64_t *)&qword_100360A50);
    if (swift_dynamicCast())
    {
      id v24 = v33[0];
      char v17 = sub_1001A7E58(v33[0]);

      goto LABEL_20;
    }
    sub_1000291F4((uint64_t)v35, (uint64_t)v33);
    sub_10000A38C(&qword_100360A60);
    if (!swift_dynamicCast())
    {
      uint64_t v32 = 0;
      long long v30 = 0u;
      long long v31 = 0u;
      sub_10000D78C((uint64_t)&v30, &qword_100360A68);

      char v17 = 0;
      goto LABEL_20;
    }
    sub_10000D7E8(&v30, (uint64_t)v34);
    sub_1000291F4((uint64_t)v34, (uint64_t)v33);
    sub_10000D728((uint64_t)v33, (uint64_t)&v28, &qword_100360A68);
    if (v29)
    {
      sub_10000D7E8(&v28, (uint64_t)&v30);
      uint64_t v26 = *((void *)&v31 + 1);
      uint64_t v27 = v32;
      sub_10000D6E4(&v30, *((uint64_t *)&v31 + 1));
      char v17 = (*(uint64_t (**)(id, uint64_t))(*(void *)(v27 + 8) + 16))(v4, v26);
      sub_10000CC5C((uint64_t)&v30);
    }
    else
    {
      sub_10000D78C((uint64_t)&v28, &qword_100360A68);
      char v17 = 0;
    }
    uint64_t v18 = &qword_100360A68;
  }
  sub_10000D78C((uint64_t)v33, v18);
  sub_10000CC5C((uint64_t)v34);

LABEL_20:
  sub_10000CC5C((uint64_t)v35);
  return v17 & 1;
}

BOOL sub_10009ECE8(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0x100000000) != 0)
  {
    switch((int)a1)
    {
      case 1:
        if ((a2 & 0x100000000) == 0 || a2 != 1) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 2:
        if ((a2 & 0x100000000) == 0 || a2 != 2) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 3:
        if ((a2 & 0x100000000) == 0 || a2 != 3) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 4:
        if ((a2 & 0x100000000) == 0 || a2 != 4) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 5:
        if ((a2 & 0x100000000) == 0 || a2 <= 4) {
          return 0;
        }
        BOOL result = 1;
        break;
      default:
        if ((a2 & 0x100000000) == 0 || a2) {
          return 0;
        }
        BOOL result = 1;
        break;
    }
  }
  else
  {
    return (a2 & 0x100000000) == 0 && a1 == a2;
  }
  return result;
}

uint64_t sub_10009EDB4@<X0>(void *a1@<X8>)
{
  return sub_10009D994(a1);
}

uint64_t sub_10009EDDC(void **a1)
{
  return sub_10009DA24(a1);
}

uint64_t sub_10009EE04@<X0>(void *a1@<X8>)
{
  return sub_10009D994(a1);
}

uint64_t sub_10009EE2C(void **a1)
{
  return sub_10009DA24(a1);
}

const char *sub_10009EE54(unsigned int a1)
{
  if (a1 > 0x10) {
    return "?";
  }
  else {
    return (&off_100323D18)[a1];
  }
}

uint64_t sub_10009EE78(void *a1)
{
  uint64_t v2 = v1;
  long long v34 = a1;
  uint64_t v3 = sub_10000A38C(&qword_10035E328);
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  __chkstk_darwin(v3);
  id v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A38C(&qword_100360A40);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A38C(&qword_10035E2F0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)(v2 + 16) = 0;
  *(_WORD *)(v2 + 20) = 256;
  uint64_t v14 = v2 + OBJC_IVAR____TtC17proximitycontrold8Identity__bluetoothDevice;
  uint64_t v35 = 0;
  sub_10000A38C(&qword_10035E308);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v14, v13, v10);
  uint64_t v15 = v2 + OBJC_IVAR____TtC17proximitycontrold8Identity__homekitAccessory;
  uint64_t v35 = 0;
  sub_10000A38C(&qword_1003606C0);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v15, v9, v6);
  *(void *)(v2 + OBJC_IVAR____TtC17proximitycontrold8Identity_idsDevice) = 0;
  uint64_t v16 = (void *)(v2 + OBJC_IVAR____TtC17proximitycontrold8Identity_discoveredMediaRouteID);
  void *v16 = 0;
  v16[1] = 0;
  char v17 = (void *)(v2 + OBJC_IVAR____TtC17proximitycontrold8Identity_discoveredColorCode);
  *char v17 = 0;
  v17[1] = 0;
  *(void *)(v2 + OBJC_IVAR____TtC17proximitycontrold8Identity_nearbyID) = 0;
  uint64_t v18 = v2 + OBJC_IVAR____TtC17proximitycontrold8Identity__rapportBTDevice;
  uint64_t v35 = 0;
  sub_10000A38C(&qword_10035E340);
  Published.init(initialValue:)();
  uint64_t v19 = v33;
  uint64_t v20 = *(void (**)(uint64_t, char *, uint64_t))(v32 + 32);
  v20(v18, v5, v33);
  uint64_t v21 = OBJC_IVAR____TtC17proximitycontrold8Identity_rapportIdentities;
  *(void *)(v2 + OBJC_IVAR____TtC17proximitycontrold8Identity_rapportIdentities) = 0;
  uint64_t v22 = v2 + OBJC_IVAR____TtC17proximitycontrold8Identity__wifiDevice;
  uint64_t v35 = 0;
  Published.init(initialValue:)();
  v20(v22, v5, v19);
  uint64_t v23 = (void *)(v2 + OBJC_IVAR____TtC17proximitycontrold8Identity_overrideColorCode);
  void *v23 = 0;
  v23[1] = 0;
  id v24 = (void *)(v2 + OBJC_IVAR____TtC17proximitycontrold8Identity_overrideMediaRouteID);
  void *v24 = 0;
  v24[1] = 0;
  id v25 = (void *)(v2 + OBJC_IVAR____TtC17proximitycontrold8Identity_overrideModel);
  *id v25 = 0;
  v25[1] = 0;
  uint64_t v26 = (void *)(v2 + OBJC_IVAR____TtC17proximitycontrold8Identity_overrideName);
  *uint64_t v26 = 0;
  v26[1] = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC17proximitycontrold8Identity_enableModelBasedRangingCapabilities) = 0;
  uint64_t v27 = v2 + OBJC_IVAR____TtC17proximitycontrold8Identity_cachedDeviceAsset;
  *(void *)uint64_t v27 = 0;
  *(unsigned char *)(v27 + 8) = 1;
  sub_10000A38C(&qword_10035C280);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_100293270;
  uint64_t v29 = v34;
  *(void *)(v28 + 32) = v34;
  uint64_t v35 = v28;
  specialized Array._endMutation()();
  *(void *)(v2 + v21) = v35;
  id v30 = v29;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v2 + 16) = [v30 type];
  *(_WORD *)(v2 + 20) = 0;
  return v2;
}

uint64_t sub_10009F278(unint64_t a1)
{
  type metadata accessor for Identity();
  uint64_t v3 = swift_allocObject();
  sub_100099014(0, 0, 0, 0, 0, 0, 0);
  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 4;
      while (1)
      {
        uint64_t v6 = v5 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(a1 + 8 * v5);
          swift_retain();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_12:
            __break(1u);
            goto LABEL_13;
          }
        }
        uint64_t v9 = sub_100099DEC(v7);
        swift_release();
        swift_release();
        if (!v1)
        {
          ++v5;
          uint64_t v3 = v9;
          if (v8 != v4) {
            continue;
          }
        }
        goto LABEL_15;
      }
    }
  }
  uint64_t v9 = v3;
LABEL_15:
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_10009F3C8(unint64_t a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v9 = sub_10009F278(a1);
  if (v4) {
    return v5;
  }
  uint64_t v5 = v9;
  uint64_t v11 = *((void *)sub_100098C94() + 2);
  swift_bridgeObjectRelease();
  unint64_t v74 = a2;
  if ((a4 & 1) == 0 && v11 == a3)
  {
    uint64_t v12 = sub_100098C94();
    int64_t v13 = 0;
    unint64_t v73 = v12;
    uint64_t v14 = 1 << v12[32];
    uint64_t v15 = -1;
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    unint64_t v16 = v15 & *((void *)v12 + 7);
    uint64_t v71 = v12 + 56;
    int64_t v72 = (unint64_t)(v14 + 63) >> 6;
    while (1)
    {
      if (v16)
      {
        unint64_t v18 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        int64_t v75 = v13;
        unint64_t v19 = v18 | (v13 << 6);
      }
      else
      {
        int64_t v20 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_66;
        }
        if (v20 >= v72)
        {
LABEL_62:
          swift_release();
          return v5;
        }
        unint64_t v21 = *(void *)&v71[8 * v20];
        int64_t v22 = v13 + 1;
        if (!v21)
        {
          int64_t v22 = v13 + 2;
          if (v13 + 2 >= v72) {
            goto LABEL_62;
          }
          unint64_t v21 = *(void *)&v71[8 * v22];
          if (!v21)
          {
            int64_t v22 = v13 + 3;
            if (v13 + 3 >= v72) {
              goto LABEL_62;
            }
            unint64_t v21 = *(void *)&v71[8 * v22];
            if (!v21)
            {
              uint64_t v23 = v13 + 4;
              if (v13 + 4 >= v72) {
                goto LABEL_62;
              }
              unint64_t v21 = *(void *)&v71[8 * v23];
              if (!v21)
              {
                while (1)
                {
                  int64_t v22 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_68;
                  }
                  if (v22 >= v72) {
                    goto LABEL_62;
                  }
                  unint64_t v21 = *(void *)&v71[8 * v22];
                  ++v23;
                  if (v21) {
                    goto LABEL_25;
                  }
                }
              }
              int64_t v22 = v13 + 4;
            }
          }
        }
LABEL_25:
        unint64_t v16 = (v21 - 1) & v21;
        int64_t v75 = v22;
        unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
      }
      id v24 = (uint64_t *)(*((void *)v73 + 6) + 16 * v19);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      sub_10000A38C(&qword_10035C280);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_100293270;
      *(void *)(v27 + 32) = v5;
      uint64_t v76 = v27;
      specialized Array._endMutation()();
      uint64_t v28 = v76;
      swift_bridgeObjectRetain();
      uint64_t v29 = v5;
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      long long v31 = a2;
      char v32 = isUniquelyReferenced_nonNull_native;
      uint64_t v33 = (void *)*v31;
      id v77 = (void *)*v31;
      void *v31 = 0x8000000000000000;
      unint64_t v35 = sub_100269CBC(v26, v25);
      uint64_t v36 = v33[2];
      BOOL v37 = (v34 & 1) == 0;
      uint64_t v38 = v36 + v37;
      if (__OFADD__(v36, v37))
      {
        __break(1u);
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      char v39 = v34;
      if (v33[3] >= v38)
      {
        if (v32)
        {
          uint64_t v42 = v77;
          if (v34) {
            goto LABEL_8;
          }
        }
        else
        {
          sub_100058B2C();
          uint64_t v42 = v77;
          if (v39) {
            goto LABEL_8;
          }
        }
      }
      else
      {
        sub_100055190(v38, v32);
        unint64_t v40 = sub_100269CBC(v26, v25);
        if ((v39 & 1) != (v41 & 1)) {
          goto LABEL_69;
        }
        unint64_t v35 = v40;
        uint64_t v42 = v77;
        if (v39)
        {
LABEL_8:
          uint64_t v17 = v42[7];
          swift_bridgeObjectRelease();
          *(void *)(v17 + 8 * v35) = v28;
          goto LABEL_9;
        }
      }
      v42[(v35 >> 6) + 8] |= 1 << v35;
      uint64_t v43 = (uint64_t *)(v42[6] + 16 * v35);
      *uint64_t v43 = v26;
      v43[1] = v25;
      *(void *)(v42[7] + 8 * v35) = v28;
      uint64_t v44 = v42[2];
      BOOL v45 = __OFADD__(v44, 1);
      uint64_t v46 = v44 + 1;
      if (v45) {
        goto LABEL_64;
      }
      v42[2] = v46;
      swift_bridgeObjectRetain();
LABEL_9:
      a2 = v74;
      *unint64_t v74 = v42;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = v29;
      int64_t v13 = v75;
    }
  }
  sub_10000A38C(&qword_10035C280);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100293270;
  *(void *)(inited + 32) = v5;
  uint64_t v78 = inited;
  specialized Array._endMutation()();
  swift_retain();
  id v48 = sub_100098C94();
  uint64_t v49 = v48;
  int64_t v50 = 0;
  uint64_t v51 = v48 + 56;
  uint64_t v52 = 1 << v48[32];
  uint64_t v53 = -1;
  if (v52 < 64) {
    uint64_t v53 = ~(-1 << v52);
  }
  unint64_t v54 = v53 & *((void *)v48 + 7);
  int64_t v55 = (unint64_t)(v52 + 63) >> 6;
  while (v54)
  {
    unint64_t v56 = __clz(__rbit64(v54));
    v54 &= v54 - 1;
    unint64_t v57 = v56 | (v50 << 6);
LABEL_57:
    uint64_t v61 = *a2;
    if (*(void *)(*a2 + 16))
    {
      v62 = (uint64_t *)(*((void *)v49 + 6) + 16 * v57);
      uint64_t v64 = *v62;
      uint64_t v63 = v62[1];
      swift_bridgeObjectRetain();
      unint64_t v65 = sub_100269CBC(v64, v63);
      if (v66)
      {
        unint64_t v67 = *(void *)(*(void *)(v61 + 56) + 8 * v65);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        unint64_t v68 = v67;
        a2 = v74;
        sub_10008E2CC(v68);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  int64_t v58 = v50 + 1;
  if (__OFADD__(v50, 1))
  {
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  if (v58 >= v55) {
    goto LABEL_60;
  }
  unint64_t v59 = *(void *)&v51[8 * v58];
  ++v50;
  if (v59) {
    goto LABEL_56;
  }
  int64_t v50 = v58 + 1;
  if (v58 + 1 >= v55) {
    goto LABEL_60;
  }
  unint64_t v59 = *(void *)&v51[8 * v50];
  if (v59) {
    goto LABEL_56;
  }
  int64_t v50 = v58 + 2;
  if (v58 + 2 >= v55) {
    goto LABEL_60;
  }
  unint64_t v59 = *(void *)&v51[8 * v50];
  if (v59)
  {
LABEL_56:
    unint64_t v54 = (v59 - 1) & v59;
    unint64_t v57 = __clz(__rbit64(v59)) + (v50 << 6);
    goto LABEL_57;
  }
  int64_t v60 = v58 + 3;
  if (v60 >= v55)
  {
LABEL_60:
    swift_release();
    uint64_t v69 = *((void *)sub_100098C94() + 2);
    swift_bridgeObjectRelease();
    uint64_t v70 = sub_10009F3C8(v78, a2, v69, 0);
    swift_bridgeObjectRelease();
    swift_release();
    return v70;
  }
  unint64_t v59 = *(void *)&v51[8 * v60];
  if (v59)
  {
    int64_t v50 = v60;
    goto LABEL_56;
  }
  while (1)
  {
    int64_t v50 = v60 + 1;
    if (__OFADD__(v60, 1)) {
      break;
    }
    if (v50 >= v55) {
      goto LABEL_60;
    }
    unint64_t v59 = *(void *)&v51[8 * v50];
    ++v60;
    if (v59) {
      goto LABEL_56;
    }
  }
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *sub_10009F924(unint64_t a1)
{
  unint64_t v88 = _swiftEmptyArrayStorage;
  unint64_t v2 = sub_1002690FC((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v98 = v2;
  unint64_t v89 = a1;
  if (a1 >> 62) {
    goto LABEL_137;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_62;
  }
  while (1)
  {
    unint64_t v4 = 0;
    uint64_t v90 = v3;
LABEL_5:
    if ((v89 & 0xC000000000000001) != 0) {
      break;
    }
    if (v4 < *(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v5 = *(void *)(v89 + 32 + 8 * v4);
      swift_retain();
      BOOL v6 = __OFADD__(v4, 1);
      unint64_t v7 = v4 + 1;
      if (v6) {
        goto LABEL_132;
      }
      goto LABEL_11;
    }
    while (1)
    {
      __break(1u);
LABEL_137:
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      if (v3) {
        break;
      }
LABEL_62:
      swift_bridgeObjectRelease();
      Swift::String v97 = _swiftEmptyArrayStorage;
      if (!*(void *)(v2 + 16))
      {
LABEL_125:
        swift_bridgeObjectRelease();
        return v88;
      }
      while (1)
      {
LABEL_65:
        unint64_t v50 = *(void *)(v2 + 64);
        char v51 = *(unsigned char *)(v2 + 32);
        uint64_t v52 = 1 << v51;
        if (v50)
        {
          uint64_t v53 = 0;
        }
        else
        {
          unsigned int v54 = v51 & 0x3F;
          if (v54 < 7) {
            goto LABEL_122;
          }
          unint64_t v50 = *(void *)(v2 + 72);
          if (v50)
          {
            uint64_t v53 = 1;
          }
          else
          {
            if (v54 < 8) {
              goto LABEL_122;
            }
            unint64_t v50 = *(void *)(v2 + 80);
            if (v50)
            {
              uint64_t v53 = 2;
            }
            else
            {
              unint64_t v50 = *(void *)(v2 + 88);
              if (v50)
              {
                uint64_t v53 = 3;
              }
              else
              {
                if (v54 < 9) {
                  goto LABEL_122;
                }
                unint64_t v50 = *(void *)(v2 + 96);
                if (!v50)
                {
                  uint64_t v55 = 0;
                  unint64_t v56 = (unint64_t)(v52 + 63) >> 6;
                  if (v56 <= 5) {
                    unint64_t v56 = 5;
                  }
                  unint64_t v57 = v56 - 5;
                  while (v57 != v55)
                  {
                    unint64_t v50 = *(void *)(v2 + 104 + 8 * v55++);
                    if (v50)
                    {
                      uint64_t v53 = v55 + 4;
                      goto LABEL_84;
                    }
                  }
LABEL_122:
                  swift_bridgeObjectRelease();
                  return _swiftEmptyArrayStorage;
                }
                uint64_t v53 = 4;
              }
            }
          }
        }
LABEL_84:
        unint64_t v58 = __clz(__rbit64(v50));
        uint64_t v59 = v58 + (v53 << 6);
        if (v59 == v52) {
          goto LABEL_122;
        }
        if (v59 < 0 || v59 >= v52) {
          goto LABEL_134;
        }
        if (((*(void *)(v2 + 64 + (((unint64_t)v59 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v58) & 1) == 0) {
          goto LABEL_135;
        }
        int64_t v60 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v59);
        uint64_t v62 = *v60;
        uint64_t v61 = v60[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v63 = sub_100269CBC(v62, v61);
        if (v64) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        unint64_t v84 = sub_100269CBC(v62, v61);
        char v86 = v85;
        swift_bridgeObjectRelease();
        if (v86)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_100058B2C();
          }
          swift_bridgeObjectRelease();
          sub_100130B98(v84, v2);
          unint64_t v98 = v2;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        if (!*(void *)(v2 + 16)) {
          goto LABEL_124;
        }
      }
      unint64_t v65 = *(void *)(*(void *)(v2 + 56) + 8 * v63);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      sub_10009F3C8(v65, &v98, 0, 1);
      swift_bridgeObjectRelease();
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      char v66 = sub_100098C94();
      unint64_t v67 = v66;
      int64_t v68 = 0;
      uint64_t v69 = v66 + 56;
      uint64_t v70 = 1 << v66[32];
      if (v70 < 64) {
        uint64_t v71 = ~(-1 << v70);
      }
      else {
        uint64_t v71 = -1;
      }
      unint64_t v72 = v71 & *((void *)v66 + 7);
      unint64_t v2 = v98;
      int64_t v73 = (unint64_t)(v70 + 63) >> 6;
      if (v72)
      {
LABEL_95:
        unint64_t v74 = __clz(__rbit64(v72));
        v72 &= v72 - 1;
        unint64_t v75 = v74 | (v68 << 6);
        goto LABEL_96;
      }
      while (1)
      {
        int64_t v81 = v68 + 1;
        if (__OFADD__(v68, 1)) {
          break;
        }
        if (v81 >= v73) {
          goto LABEL_120;
        }
        unint64_t v82 = *(void *)&v69[8 * v81];
        ++v68;
        if (!v82)
        {
          int64_t v68 = v81 + 1;
          if (v81 + 1 >= v73) {
            goto LABEL_120;
          }
          unint64_t v82 = *(void *)&v69[8 * v68];
          if (!v82)
          {
            int64_t v68 = v81 + 2;
            if (v81 + 2 >= v73) {
              goto LABEL_120;
            }
            unint64_t v82 = *(void *)&v69[8 * v68];
            if (!v82)
            {
              int64_t v83 = v81 + 3;
              if (v83 >= v73)
              {
LABEL_120:
                unint64_t v98 = v2;
                swift_release();
                swift_release();
                if (*(void *)(v2 + 16)) {
                  goto LABEL_65;
                }
                goto LABEL_124;
              }
              unint64_t v82 = *(void *)&v69[8 * v83];
              if (!v82)
              {
                while (1)
                {
                  int64_t v68 = v83 + 1;
                  if (__OFADD__(v83, 1)) {
                    goto LABEL_133;
                  }
                  if (v68 >= v73) {
                    goto LABEL_120;
                  }
                  unint64_t v82 = *(void *)&v69[8 * v68];
                  ++v83;
                  if (v82) {
                    goto LABEL_111;
                  }
                }
              }
              int64_t v68 = v83;
            }
          }
        }
LABEL_111:
        unint64_t v72 = (v82 - 1) & v82;
        unint64_t v75 = __clz(__rbit64(v82)) + (v68 << 6);
LABEL_96:
        uint64_t v76 = (uint64_t *)(*((void *)v67 + 6) + 16 * v75);
        uint64_t v77 = *v76;
        uint64_t v78 = v76[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v79 = sub_100269CBC(v77, v78);
        LOBYTE(v77) = v80;
        swift_bridgeObjectRelease();
        if (v77)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_100058B2C();
          }
          swift_bridgeObjectRelease();
          sub_100130B98(v79, v2);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v72) {
            goto LABEL_95;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          if (v72) {
            goto LABEL_95;
          }
        }
      }
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
    }
  }
  uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  BOOL v6 = __OFADD__(v4, 1);
  unint64_t v7 = v4 + 1;
  if (v6) {
    goto LABEL_132;
  }
LABEL_11:
  unint64_t v91 = v7;
  uint64_t v8 = sub_100098C94();
  int64_t v9 = 0;
  v92 = v8 + 56;
  uint64_t v94 = v5;
  v95 = v8;
  uint64_t v10 = 1 << v8[32];
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *((void *)v8 + 7);
  int64_t v93 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_33;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v16 >= v93) {
      goto LABEL_4;
    }
    unint64_t v17 = *(void *)&v92[8 * v16];
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v93) {
        goto LABEL_4;
      }
      unint64_t v17 = *(void *)&v92[8 * v9];
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v93) {
          goto LABEL_4;
        }
        unint64_t v17 = *(void *)&v92[8 * v9];
        if (!v17)
        {
          int64_t v18 = v16 + 3;
          if (v18 >= v93)
          {
LABEL_4:
            swift_release();
            swift_release();
            unint64_t v4 = v91;
            if (v91 == v90)
            {
              unint64_t v98 = v2;
              goto LABEL_62;
            }
            goto LABEL_5;
          }
          unint64_t v17 = *(void *)&v92[8 * v18];
          if (!v17)
          {
            while (1)
            {
              int64_t v9 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                break;
              }
              if (v9 >= v93) {
                goto LABEL_4;
              }
              unint64_t v17 = *(void *)&v92[8 * v9];
              ++v18;
              if (v17) {
                goto LABEL_32;
              }
            }
LABEL_130:
            __break(1u);
            goto LABEL_131;
          }
          int64_t v9 = v18;
        }
      }
    }
LABEL_32:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_33:
    unint64_t v19 = (uint64_t *)(*((void *)v95 + 6) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = *(void *)(v2 + 16);
    swift_bridgeObjectRetain();
    if (v22)
    {
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_100269CBC(v20, v21);
      if (v24)
      {
        uint64_t v25 = *(void *)(*(void *)(v2 + 56) + 8 * v23);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v26 = v25;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v29 = sub_100269CBC(v20, v21);
        uint64_t v30 = *(void *)(v2 + 16);
        BOOL v31 = (v28 & 1) == 0;
        uint64_t v32 = v30 + v31;
        if (__OFADD__(v30, v31)) {
          goto LABEL_128;
        }
        char v33 = v28;
        if (*(void *)(v2 + 24) >= v32)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if (v28) {
              goto LABEL_15;
            }
          }
          else
          {
            sub_100058B2C();
            if (v33) {
              goto LABEL_15;
            }
          }
        }
        else
        {
          sub_100055190(v32, isUniquelyReferenced_nonNull_native);
          unint64_t v34 = sub_100269CBC(v20, v21);
          if ((v33 & 1) != (v35 & 1)) {
            goto LABEL_139;
          }
          unint64_t v29 = v34;
          if (v33) {
            goto LABEL_15;
          }
        }
        *(void *)(v2 + 8 * (v29 >> 6) + 64) |= 1 << v29;
        id v48 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v29);
        *id v48 = v20;
        v48[1] = v21;
        *(void *)(*(void *)(v2 + 56) + 8 * v29) = v25;
        uint64_t v49 = *(void *)(v2 + 16);
        BOOL v6 = __OFADD__(v49, 1);
        uint64_t v47 = v49 + 1;
        if (v6)
        {
          __break(1u);
          goto LABEL_130;
        }
        goto LABEL_56;
      }
      swift_bridgeObjectRelease();
    }
    sub_10000A38C(&qword_10035C280);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_100293270;
    *(void *)(v36 + 32) = v5;
    uint64_t v96 = v36;
    specialized Array._endMutation()();
    uint64_t v26 = v96;
    swift_retain();
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    Swift::String v97 = (void *)v2;
    unint64_t v29 = sub_100269CBC(v20, v21);
    uint64_t v39 = *(void *)(v2 + 16);
    BOOL v40 = (v38 & 1) == 0;
    uint64_t v41 = v39 + v40;
    if (__OFADD__(v39, v40))
    {
      __break(1u);
LABEL_124:
      unint64_t v88 = v97;
      goto LABEL_125;
    }
    char v42 = v38;
    if (*(void *)(v2 + 24) >= v41)
    {
      if (v37)
      {
        if (v38) {
          goto LABEL_15;
        }
      }
      else
      {
        sub_100058B2C();
        if (v42) {
          goto LABEL_15;
        }
      }
    }
    else
    {
      sub_100055190(v41, v37);
      unint64_t v43 = sub_100269CBC(v20, v21);
      if ((v42 & 1) != (v44 & 1))
      {
LABEL_139:
        uint64_t result = (void *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return result;
      }
      unint64_t v29 = v43;
      if (v42)
      {
LABEL_15:
        uint64_t v13 = *(void *)(v2 + 56);
        swift_bridgeObjectRelease();
        *(void *)(v13 + 8 * v29) = v26;
        goto LABEL_16;
      }
    }
    *(void *)(v2 + 8 * (v29 >> 6) + 64) |= 1 << v29;
    BOOL v45 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v29);
    *BOOL v45 = v20;
    v45[1] = v21;
    *(void *)(*(void *)(v2 + 56) + 8 * v29) = v26;
    uint64_t v46 = *(void *)(v2 + 16);
    BOOL v6 = __OFADD__(v46, 1);
    uint64_t v47 = v46 + 1;
    if (v6) {
      goto LABEL_127;
    }
LABEL_56:
    *(void *)(v2 + 16) = v47;
    swift_bridgeObjectRetain();
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v94;
  }
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_bridgeObjectRelease();
  return 0;
}

__CFString *sub_1000A0344(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      uint64_t v1 = @"miniDark";
      goto LABEL_11;
    case 2:
      uint64_t v1 = @"miniLight";
      goto LABEL_11;
    case 3:
      uint64_t v1 = @"FPO_B";
      goto LABEL_11;
    case 4:
      uint64_t v1 = @"FPO_Y";
      goto LABEL_11;
    case 5:
      uint64_t v1 = @"FPO_O";
      goto LABEL_11;
    case 6:
      uint64_t v1 = @"miniBasalt";
      goto LABEL_11;
    case 7:
      uint64_t v1 = @"b620Dark";
      goto LABEL_11;
    case 8:
      uint64_t v1 = @"b620Light";
LABEL_11:
      unint64_t v2 = v1;
      break;
    default:
      uint64_t v1 = +[NSString stringWithFormat:@"? (%ld)", a1];
      break;
  }

  return v1;
}

BOOL sub_1000A0450(uint64_t a1)
{
  return (a1 & 0xFFFFFFFFFFFFFFFELL) == 2;
}

uint64_t sub_1000A0460(uint64_t a1)
{
  return sub_1000A1DA0(a1, (void (*)(void))type metadata accessor for SharingDefaults, 32, sub_1000A04FC, &qword_1003AC738);
}

uint64_t sub_1000A0498()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SharingDefaults()
{
  return self;
}

uint64_t sub_1000A04FC()
{
  if (qword_10035A588 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1003AC858;
  *(void *)(v0 + 16) = qword_1003AC858;
  unint64_t v2 = (objc_class *)sub_10000A38C(&qword_10035B4C8);
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[*(void *)((swift_isaMask & *(void *)v3) + 0x80)] = 0;
  v3[*(void *)((swift_isaMask & *(void *)v3) + 0x60)] = 1;
  unint64_t v4 = &v3[*(void *)((swift_isaMask & *(void *)v3) + 0x68)];
  *(void *)unint64_t v4 = 0x656C62616E456863;
  *((void *)v4 + 1) = 0xE900000000000064;
  *(void *)&v3[*(void *)((swift_isaMask & *(void *)v3) + 0x70)] = v1;
  v3[*(void *)((swift_isaMask & *(void *)v3) + 0x78)] = 0;
  v7.receiver = v3;
  v7.super_class = v2;
  id v5 = v1;
  [super init];
  return v0;
}

uint64_t sub_1000A0668(uint64_t a1)
{
  return sub_1000A1DA0(a1, (void (*)(void))type metadata accessor for BannerDefaults, 136, (uint64_t (*)(void))sub_1000A0788, &qword_1003AC740);
}

id *sub_1000A06A0()
{
  return v0;
}

uint64_t sub_1000A0730()
{
  sub_1000A06A0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BannerDefaults()
{
  return self;
}

void *sub_1000A0788()
{
  if (qword_10035A578 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1003AC848;
  unint64_t v2 = (objc_class *)sub_10000A38C(&qword_10035B558);
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[*(void *)((swift_isaMask & *(void *)v3) + 0x80)] = 0;
  *(void *)&v3[*(void *)((swift_isaMask & *(void *)v3) + 0x60)] = 0x3FF0000000000000;
  unint64_t v4 = &v3[*(void *)((swift_isaMask & *(void *)v3) + 0x68)];
  *(void *)unint64_t v4 = 0xD000000000000011;
  *((void *)v4 + 1) = 0x80000001002BABB0;
  *(void *)&v3[*(void *)((swift_isaMask & *(void *)v3) + 0x70)] = v1;
  v3[*(void *)((swift_isaMask & *(void *)v3) + 0x78)] = 0;
  v63.receiver = v3;
  v63.super_class = v2;
  id v5 = v1;
  v0[2] = [super init];
  BOOL v6 = (char *)objc_allocWithZone(v2);
  *(void *)&v6[*(void *)((swift_isaMask & *(void *)v6) + 0x80)] = 0;
  *(void *)&v6[*(void *)((swift_isaMask & *(void *)v6) + 0x60)] = 0;
  objc_super v7 = &v6[*(void *)((swift_isaMask & *(void *)v6) + 0x68)];
  *(void *)objc_super v7 = 0xD00000000000001ALL;
  *((void *)v7 + 1) = 0x80000001002BABD0;
  *(void *)&v6[*(void *)((swift_isaMask & *(void *)v6) + 0x70)] = v1;
  v6[*(void *)((swift_isaMask & *(void *)v6) + 0x78)] = 0;
  v62.receiver = v6;
  v62.super_class = v2;
  id v8 = v5;
  v0[3] = [super init];
  int64_t v9 = (char *)objc_allocWithZone(v2);
  *(void *)&v9[*(void *)((swift_isaMask & *(void *)v9) + 0x80)] = 0;
  *(void *)&v9[*(void *)((swift_isaMask & *(void *)v9) + 0x60)] = 0x3FDF25EDD052934BLL;
  uint64_t v10 = &v9[*(void *)((swift_isaMask & *(void *)v9) + 0x68)];
  *(void *)uint64_t v10 = 0xD000000000000012;
  *((void *)v10 + 1) = 0x80000001002BABF0;
  *(void *)&v9[*(void *)((swift_isaMask & *(void *)v9) + 0x70)] = v1;
  v9[*(void *)((swift_isaMask & *(void *)v9) + 0x78)] = 0;
  v61.receiver = v9;
  v61.super_class = v2;
  id v11 = v8;
  v0[4] = [super init];
  unint64_t v12 = (char *)objc_allocWithZone(v2);
  *(void *)&v12[*(void *)((swift_isaMask & *(void *)v12) + 0x80)] = 0;
  *(void *)&v12[*(void *)((swift_isaMask & *(void *)v12) + 0x60)] = 0;
  uint64_t v13 = &v12[*(void *)((swift_isaMask & *(void *)v12) + 0x68)];
  *(void *)uint64_t v13 = 0xD00000000000001BLL;
  *((void *)v13 + 1) = 0x80000001002BAC10;
  *(void *)&v12[*(void *)((swift_isaMask & *(void *)v12) + 0x70)] = v1;
  v12[*(void *)((swift_isaMask & *(void *)v12) + 0x78)] = 0;
  v60.receiver = v12;
  v60.super_class = v2;
  id v14 = v11;
  v0[5] = [super init];
  unint64_t v15 = (char *)objc_allocWithZone(v2);
  *(void *)&v15[*(void *)((swift_isaMask & *(void *)v15) + 0x80)] = 0;
  *(void *)&v15[*(void *)((swift_isaMask & *(void *)v15) + 0x60)] = 0;
  int64_t v16 = &v15[*(void *)((swift_isaMask & *(void *)v15) + 0x68)];
  *(void *)int64_t v16 = 0xD000000000000019;
  *((void *)v16 + 1) = 0x80000001002BAC30;
  *(void *)&v15[*(void *)((swift_isaMask & *(void *)v15) + 0x70)] = v1;
  v15[*(void *)((swift_isaMask & *(void *)v15) + 0x78)] = 0;
  v59.receiver = v15;
  v59.super_class = v2;
  id v17 = v14;
  v0[6] = [super init];
  int64_t v18 = (char *)objc_allocWithZone(v2);
  *(void *)&v18[*(void *)((swift_isaMask & *(void *)v18) + 0x80)] = 0;
  *(void *)&v18[*(void *)((swift_isaMask & *(void *)v18) + 0x60)] = 0x3FEC28F5C28F5C29;
  unint64_t v19 = &v18[*(void *)((swift_isaMask & *(void *)v18) + 0x68)];
  *(void *)unint64_t v19 = 0xD000000000000012;
  *((void *)v19 + 1) = 0x80000001002BAC50;
  *(void *)&v18[*(void *)((swift_isaMask & *(void *)v18) + 0x70)] = v1;
  v18[*(void *)((swift_isaMask & *(void *)v18) + 0x78)] = 0;
  v58.receiver = v18;
  v58.super_class = v2;
  id v20 = v17;
  v0[7] = [super init];
  uint64_t v21 = (char *)objc_allocWithZone(v2);
  *(void *)&v21[*(void *)((swift_isaMask & *(void *)v21) + 0x80)] = 0;
  *(void *)&v21[*(void *)((swift_isaMask & *(void *)v21) + 0x60)] = 0;
  uint64_t v22 = &v21[*(void *)((swift_isaMask & *(void *)v21) + 0x68)];
  *(void *)uint64_t v22 = 0xD00000000000001BLL;
  *((void *)v22 + 1) = 0x80000001002BAC70;
  *(void *)&v21[*(void *)((swift_isaMask & *(void *)v21) + 0x70)] = v1;
  v21[*(void *)((swift_isaMask & *(void *)v21) + 0x78)] = 0;
  v57.receiver = v21;
  v57.super_class = v2;
  id v23 = v20;
  v0[8] = [super init];
  char v24 = (char *)objc_allocWithZone(v2);
  *(void *)&v24[*(void *)((swift_isaMask & *(void *)v24) + 0x80)] = 0;
  *(void *)&v24[*(void *)((swift_isaMask & *(void *)v24) + 0x60)] = 0x3FE3333333333333;
  uint64_t v25 = &v24[*(void *)((swift_isaMask & *(void *)v24) + 0x68)];
  *(void *)uint64_t v25 = 0xD000000000000013;
  *((void *)v25 + 1) = 0x80000001002BAC90;
  *(void *)&v24[*(void *)((swift_isaMask & *(void *)v24) + 0x70)] = v1;
  v24[*(void *)((swift_isaMask & *(void *)v24) + 0x78)] = 0;
  v56.receiver = v24;
  v56.super_class = v2;
  id v26 = v23;
  v0[9] = [super init];
  uint64_t v27 = (char *)objc_allocWithZone(v2);
  *(void *)&v27[*(void *)((swift_isaMask & *(void *)v27) + 0x80)] = 0;
  *(void *)&v27[*(void *)((swift_isaMask & *(void *)v27) + 0x60)] = 0;
  char v28 = &v27[*(void *)((swift_isaMask & *(void *)v27) + 0x68)];
  *(void *)char v28 = 0xD00000000000001CLL;
  *((void *)v28 + 1) = 0x80000001002BACB0;
  *(void *)&v27[*(void *)((swift_isaMask & *(void *)v27) + 0x70)] = v1;
  v27[*(void *)((swift_isaMask & *(void *)v27) + 0x78)] = 0;
  v55.receiver = v27;
  v55.super_class = v2;
  id v29 = v26;
  v0[10] = [super init];
  uint64_t v30 = (char *)objc_allocWithZone(v2);
  *(void *)&v30[*(void *)((swift_isaMask & *(void *)v30) + 0x80)] = 0;
  *(void *)&v30[*(void *)((swift_isaMask & *(void *)v30) + 0x60)] = 0;
  BOOL v31 = &v30[*(void *)((swift_isaMask & *(void *)v30) + 0x68)];
  *(void *)BOOL v31 = 0xD00000000000001ALL;
  *((void *)v31 + 1) = 0x80000001002BACD0;
  *(void *)&v30[*(void *)((swift_isaMask & *(void *)v30) + 0x70)] = v1;
  v30[*(void *)((swift_isaMask & *(void *)v30) + 0x78)] = 0;
  v54.receiver = v30;
  v54.super_class = v2;
  id v32 = v29;
  v0[11] = [super init];
  char v33 = (char *)objc_allocWithZone(v2);
  *(void *)&v33[*(void *)((swift_isaMask & *(void *)v33) + 0x80)] = 0;
  *(void *)&v33[*(void *)((swift_isaMask & *(void *)v33) + 0x60)] = 0x3FEC28F5C28F5C29;
  unint64_t v34 = &v33[*(void *)((swift_isaMask & *(void *)v33) + 0x68)];
  *(void *)unint64_t v34 = 0xD000000000000019;
  *((void *)v34 + 1) = 0x80000001002BACF0;
  *(void *)&v33[*(void *)((swift_isaMask & *(void *)v33) + 0x70)] = v1;
  v33[*(void *)((swift_isaMask & *(void *)v33) + 0x78)] = 0;
  v53.receiver = v33;
  v53.super_class = v2;
  id v35 = v32;
  v0[12] = [super init];
  uint64_t v36 = (char *)objc_allocWithZone(v2);
  *(void *)&v36[*(void *)((swift_isaMask & *(void *)v36) + 0x80)] = 0;
  *(void *)&v36[*(void *)((swift_isaMask & *(void *)v36) + 0x60)] = 0;
  char v37 = &v36[*(void *)((swift_isaMask & *(void *)v36) + 0x68)];
  *(void *)char v37 = 0xD000000000000022;
  *((void *)v37 + 1) = 0x80000001002BAD10;
  *(void *)&v36[*(void *)((swift_isaMask & *(void *)v36) + 0x70)] = v1;
  v36[*(void *)((swift_isaMask & *(void *)v36) + 0x78)] = 0;
  v52.receiver = v36;
  v52.super_class = v2;
  id v38 = v35;
  v0[13] = [super init];
  uint64_t v39 = (char *)objc_allocWithZone(v2);
  *(void *)&v39[*(void *)((swift_isaMask & *(void *)v39) + 0x80)] = 0;
  *(void *)&v39[*(void *)((swift_isaMask & *(void *)v39) + 0x60)] = 0x3FE3333333333333;
  BOOL v40 = &v39[*(void *)((swift_isaMask & *(void *)v39) + 0x68)];
  *(void *)BOOL v40 = 0xD00000000000001ALL;
  *((void *)v40 + 1) = 0x80000001002BAD40;
  *(void *)&v39[*(void *)((swift_isaMask & *(void *)v39) + 0x70)] = v1;
  v39[*(void *)((swift_isaMask & *(void *)v39) + 0x78)] = 0;
  v51.receiver = v39;
  v51.super_class = v2;
  id v41 = v38;
  v0[14] = [super init];
  char v42 = (char *)objc_allocWithZone(v2);
  *(void *)&v42[*(void *)((swift_isaMask & *(void *)v42) + 0x80)] = 0;
  *(void *)&v42[*(void *)((swift_isaMask & *(void *)v42) + 0x60)] = 0;
  unint64_t v43 = &v42[*(void *)((swift_isaMask & *(void *)v42) + 0x68)];
  *(void *)unint64_t v43 = 0xD000000000000023;
  *((void *)v43 + 1) = 0x80000001002BAD60;
  *(void *)&v42[*(void *)((swift_isaMask & *(void *)v42) + 0x70)] = v1;
  v42[*(void *)((swift_isaMask & *(void *)v42) + 0x78)] = 0;
  v50.receiver = v42;
  v50.super_class = v2;
  id v44 = v41;
  v0[15] = [super init];
  BOOL v45 = (char *)objc_allocWithZone(v2);
  *(void *)&v45[*(void *)((swift_isaMask & *(void *)v45) + 0x80)] = 0;
  *(void *)&v45[*(void *)((swift_isaMask & *(void *)v45) + 0x60)] = 0;
  uint64_t v46 = &v45[*(void *)((swift_isaMask & *(void *)v45) + 0x68)];
  *(void *)uint64_t v46 = 0xD000000000000021;
  *((void *)v46 + 1) = 0x80000001002BAD90;
  *(void *)&v45[*(void *)((swift_isaMask & *(void *)v45) + 0x70)] = v1;
  v45[*(void *)((swift_isaMask & *(void *)v45) + 0x78)] = 0;
  v49.receiver = v45;
  v49.super_class = v2;
  id v47 = v44;
  v0[16] = [super init];
  return v0;
}

uint64_t sub_1000A1580(uint64_t a1)
{
  return sub_1000A1DA0(a1, (void (*)(void))type metadata accessor for NearbydDefaults, 88, (uint64_t (*)(void))sub_1000A1668, &qword_1003AC748);
}

id *sub_1000A15B8()
{
  return v0;
}

uint64_t sub_1000A1610()
{
  sub_1000A15B8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NearbydDefaults()
{
  return self;
}

void *sub_1000A1668()
{
  v0[2] = 0x3EA0C6F7A0B5ED8DLL;
  if (qword_10035A580 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1003AC850;
  v0[3] = qword_1003AC850;
  unint64_t v2 = (objc_class *)sub_10000A38C(&qword_10035B558);
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[*(void *)((swift_isaMask & *(void *)v3) + 0x80)] = 0;
  *(void *)&v3[*(void *)((swift_isaMask & *(void *)v3) + 0x60)] = 0xBFF0000000000000;
  unint64_t v4 = &v3[*(void *)((swift_isaMask & *(void *)v3) + 0x68)];
  *(void *)unint64_t v4 = 0xD00000000000001CLL;
  *((void *)v4 + 1) = 0x80000001002BAAB0;
  *(void *)&v3[*(void *)((swift_isaMask & *(void *)v3) + 0x70)] = v1;
  v3[*(void *)((swift_isaMask & *(void *)v3) + 0x78)] = 0;
  v35.receiver = v3;
  v35.super_class = v2;
  id v5 = v1;
  v0[4] = [super init];
  BOOL v6 = (char *)objc_allocWithZone(v2);
  *(void *)&v6[*(void *)((swift_isaMask & *(void *)v6) + 0x80)] = 0;
  *(void *)&v6[*(void *)((swift_isaMask & *(void *)v6) + 0x60)] = 0xBFF0000000000000;
  objc_super v7 = &v6[*(void *)((swift_isaMask & *(void *)v6) + 0x68)];
  *(void *)objc_super v7 = 0xD00000000000001BLL;
  *((void *)v7 + 1) = 0x80000001002BAAD0;
  *(void *)&v6[*(void *)((swift_isaMask & *(void *)v6) + 0x70)] = v1;
  v6[*(void *)((swift_isaMask & *(void *)v6) + 0x78)] = 0;
  v34.receiver = v6;
  v34.super_class = v2;
  id v8 = v5;
  v0[5] = [super init];
  int64_t v9 = (char *)objc_allocWithZone(v2);
  *(void *)&v9[*(void *)((swift_isaMask & *(void *)v9) + 0x80)] = 0;
  *(void *)&v9[*(void *)((swift_isaMask & *(void *)v9) + 0x60)] = 0xBFF0000000000000;
  uint64_t v10 = &v9[*(void *)((swift_isaMask & *(void *)v9) + 0x68)];
  *(void *)uint64_t v10 = 0xD000000000000027;
  *((void *)v10 + 1) = 0x80000001002BAAF0;
  *(void *)&v9[*(void *)((swift_isaMask & *(void *)v9) + 0x70)] = v1;
  v9[*(void *)((swift_isaMask & *(void *)v9) + 0x78)] = 0;
  v33.receiver = v9;
  v33.super_class = v2;
  id v11 = v8;
  v0[6] = [super init];
  unint64_t v12 = (char *)objc_allocWithZone(v2);
  *(void *)&v12[*(void *)((swift_isaMask & *(void *)v12) + 0x80)] = 0;
  *(void *)&v12[*(void *)((swift_isaMask & *(void *)v12) + 0x60)] = 0xBFF0000000000000;
  uint64_t v13 = &v12[*(void *)((swift_isaMask & *(void *)v12) + 0x68)];
  *(void *)uint64_t v13 = 0xD000000000000019;
  *((void *)v13 + 1) = 0x80000001002BAB20;
  *(void *)&v12[*(void *)((swift_isaMask & *(void *)v12) + 0x70)] = v1;
  v12[*(void *)((swift_isaMask & *(void *)v12) + 0x78)] = 0;
  v32.receiver = v12;
  v32.super_class = v2;
  id v14 = v11;
  v0[7] = [super init];
  unint64_t v15 = (objc_class *)sub_10000A38C(&qword_10035B528);
  int64_t v16 = (char *)objc_allocWithZone(v15);
  *(void *)&v16[*(void *)((swift_isaMask & *(void *)v16) + 0x80)] = 0;
  id v17 = &v16[*(void *)((swift_isaMask & *(void *)v16) + 0x60)];
  *(void *)id v17 = 0;
  v17[8] = 1;
  int64_t v18 = &v16[*(void *)((swift_isaMask & *(void *)v16) + 0x68)];
  *(void *)int64_t v18 = 0xD00000000000001ALL;
  *((void *)v18 + 1) = 0x80000001002BAB40;
  *(void *)&v16[*(void *)((swift_isaMask & *(void *)v16) + 0x70)] = v1;
  v16[*(void *)((swift_isaMask & *(void *)v16) + 0x78)] = 0;
  v31.receiver = v16;
  v31.super_class = v15;
  id v19 = v14;
  v0[8] = [super init];
  id v20 = (objc_class *)sub_10000A38C(&qword_10035B4C8);
  uint64_t v21 = (char *)objc_allocWithZone(v20);
  *(void *)&v21[*(void *)((swift_isaMask & *(void *)v21) + 0x80)] = 0;
  v21[*(void *)((swift_isaMask & *(void *)v21) + 0x60)] = 0;
  uint64_t v22 = &v21[*(void *)((swift_isaMask & *(void *)v21) + 0x68)];
  *(void *)uint64_t v22 = 0xD00000000000001CLL;
  *((void *)v22 + 1) = 0x80000001002BAB60;
  *(void *)&v21[*(void *)((swift_isaMask & *(void *)v21) + 0x70)] = v1;
  v21[*(void *)((swift_isaMask & *(void *)v21) + 0x78)] = 0;
  v30.receiver = v21;
  v30.super_class = v20;
  id v23 = v19;
  v0[9] = [super init];
  char v24 = (char *)objc_allocWithZone(v15);
  *(void *)&v24[*(void *)((swift_isaMask & *(void *)v24) + 0x80)] = 0;
  uint64_t v25 = &v24[*(void *)((swift_isaMask & *(void *)v24) + 0x60)];
  *(void *)uint64_t v25 = 0;
  v25[8] = 1;
  id v26 = &v24[*(void *)((swift_isaMask & *(void *)v24) + 0x68)];
  *(void *)id v26 = 0xD000000000000022;
  *((void *)v26 + 1) = 0x80000001002BAB80;
  *(void *)&v24[*(void *)((swift_isaMask & *(void *)v24) + 0x70)] = v1;
  v24[*(void *)((swift_isaMask & *(void *)v24) + 0x78)] = 0;
  v29.receiver = v24;
  v29.super_class = v15;
  id v27 = v23;
  v0[10] = [super init];
  return v0;
}

uint64_t sub_1000A1D68(uint64_t a1)
{
  return sub_1000A1DA0(a1, (void (*)(void))type metadata accessor for Defaults, 1744, (uint64_t (*)(void))sub_1000A3F6C, &qword_1003AC750);
}

uint64_t sub_1000A1DA0(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  a2();
  uint64_t v7 = swift_allocObject();
  uint64_t result = a4();
  *a5 = v7;
  return result;
}

uint64_t sub_1000A1DF4(char *a1, char *a2)
{
  return sub_10005C5D8(*a1, *a2);
}

Swift::Int sub_1000A1E00()
{
  return Hasher._finalize()();
}

uint64_t sub_1000A1E80()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000A1EEC()
{
  return Hasher._finalize()();
}

uint64_t sub_1000A1F68@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_10031D3E8;
  return sub_100047390(v2, a1, a2);
}

void sub_1000A1F74(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E6F74747562;
  if (*v1) {
    uint64_t v2 = 0x74756F656D6974;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1000A1FB0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000A2010()
{
  return RawRepresentable<>.encode(to:)();
}

void sub_1000A2060(void *a1@<X8>)
{
  *a1 = &off_10031DCC0;
}

id sub_1000A2070(uint64_t a1)
{
  uint64_t v2 = sub_10000A38C(&qword_10035E158);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B03BC(a1, (uint64_t)v4);
  if (qword_10035A578 != -1) {
    swift_once();
  }
  id v5 = (void *)qword_1003AC848;
  BOOL v6 = (objc_class *)sub_10000A38C(&qword_10035B538);
  uint64_t v7 = objc_allocWithZone(v6);
  *(void *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x80)) = 0;
  sub_1000B03BC((uint64_t)v4, (uint64_t)v7 + *(void *)((swift_isaMask & *v7) + 0x60));
  id v8 = (void *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x68));
  void *v8 = 0xD000000000000015;
  v8[1] = 0x80000001002BAA90;
  *(void *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x70)) = v5;
  *((unsigned char *)v7 + *(void *)((swift_isaMask & *v7) + 0x78)) = 0;
  v12.receiver = v7;
  v12.super_class = v6;
  id v9 = v5;
  id v10 = [super init];
  sub_1000B0424((uint64_t)v4);
  sub_1000B0424(a1);
  return v10;
}

id sub_1000A224C(uint64_t a1)
{
  uint64_t v2 = sub_10000A38C(&qword_10035E158);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B03BC(a1, (uint64_t)v4);
  if (qword_10035A578 != -1) {
    swift_once();
  }
  id v5 = (void *)qword_1003AC848;
  BOOL v6 = (objc_class *)sub_10000A38C(&qword_10035B538);
  uint64_t v7 = objc_allocWithZone(v6);
  *(void *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x80)) = 0;
  sub_1000B03BC((uint64_t)v4, (uint64_t)v7 + *(void *)((swift_isaMask & *v7) + 0x60));
  id v8 = (void *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x68));
  void *v8 = 0xD000000000000016;
  v8[1] = 0x80000001002BAA70;
  *(void *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x70)) = v5;
  *((unsigned char *)v7 + *(void *)((swift_isaMask & *v7) + 0x78)) = 0;
  v12.receiver = v7;
  v12.super_class = v6;
  id v9 = v5;
  id v10 = [super init];
  sub_1000B0424((uint64_t)v4);
  sub_1000B0424(a1);
  return v10;
}

id sub_1000A2428(uint64_t a1)
{
  uint64_t v2 = sub_10000A38C(&qword_10035E158);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B03BC(a1, (uint64_t)v4);
  if (qword_10035A578 != -1) {
    swift_once();
  }
  id v5 = (void *)qword_1003AC848;
  BOOL v6 = (objc_class *)sub_10000A38C(&qword_10035B538);
  uint64_t v7 = objc_allocWithZone(v6);
  *(void *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x80)) = 0;
  sub_1000B03BC((uint64_t)v4, (uint64_t)v7 + *(void *)((swift_isaMask & *v7) + 0x60));
  id v8 = (void *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x68));
  void *v8 = 0xD000000000000011;
  v8[1] = 0x80000001002BAA50;
  *(void *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x70)) = v5;
  *((unsigned char *)v7 + *(void *)((swift_isaMask & *v7) + 0x78)) = 0;
  v12.receiver = v7;
  v12.super_class = v6;
  id v9 = v5;
  id v10 = [super init];
  sub_1000B0424((uint64_t)v4);
  sub_1000B0424(a1);
  return v10;
}

id sub_1000A2604(uint64_t a1)
{
  uint64_t v2 = sub_10000A38C(&qword_10035E158);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B03BC(a1, (uint64_t)v4);
  if (qword_10035A578 != -1) {
    swift_once();
  }
  id v5 = (void *)qword_1003AC848;
  BOOL v6 = (objc_class *)sub_10000A38C(&qword_10035B538);
  uint64_t v7 = objc_allocWithZone(v6);
  *(void *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x80)) = 0;
  sub_1000B03BC((uint64_t)v4, (uint64_t)v7 + *(void *)((swift_isaMask & *v7) + 0x60));
  id v8 = (void *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x68));
  void *v8 = 0xD000000000000023;
  v8[1] = 0x80000001002BAA20;
  *(void *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x70)) = v5;
  *((unsigned char *)v7 + *(void *)((swift_isaMask & *v7) + 0x78)) = 0;
  v12.receiver = v7;
  v12.super_class = v6;
  id v9 = v5;
  id v10 = [super init];
  sub_1000B0424((uint64_t)v4);
  sub_1000B0424(a1);
  return v10;
}

id sub_1000A27E0(uint64_t a1)
{
  uint64_t v2 = sub_10000A38C(&qword_10035E158);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B03BC(a1, (uint64_t)v4);
  if (qword_10035A578 != -1) {
    swift_once();
  }
  id v5 = (void *)qword_1003AC848;
  BOOL v6 = (objc_class *)sub_10000A38C(&qword_10035B538);
  uint64_t v7 = objc_allocWithZone(v6);
  *(void *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x80)) = 0;
  sub_1000B03BC((uint64_t)v4, (uint64_t)v7 + *(void *)((swift_isaMask & *v7) + 0x60));
  id v8 = (void *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x68));
  void *v8 = 0xD00000000000001ELL;
  v8[1] = 0x80000001002BAA00;
  *(void *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x70)) = v5;
  *((unsigned char *)v7 + *(void *)((swift_isaMask & *v7) + 0x78)) = 0;
  v12.receiver = v7;
  v12.super_class = v6;
  id v9 = v5;
  id v10 = [super init];
  sub_1000B0424((uint64_t)v4);
  sub_1000B0424(a1);
  return v10;
}

unint64_t sub_1000A29BC(char a1)
{
  unint64_t result = 0x7974697669746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656369766564;
      break;
    case 2:
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x7974706D65;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000A2A5C(char a1)
{
  unint64_t result = 0x7974697669746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656369766564;
      break;
    case 2:
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x7974706D65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000A2AFC(unsigned __int8 *a1, char *a2)
{
  return sub_10005CA5C(*a1, *a2);
}

Swift::Int sub_1000A2B08()
{
  return sub_10015DDF4();
}

uint64_t sub_1000A2B10()
{
  return sub_10015E2A8();
}

Swift::Int sub_1000A2B18()
{
  return sub_10015E864();
}

unint64_t sub_1000A2B20@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10031DCE8;
  unint64_t result = sub_1000B049C(*a1, v3);
  *a2 = result;
  return result;
}

unint64_t sub_1000A2B58@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000A2A5C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1000A2B84(void *a1@<X8>)
{
  *a1 = &off_10031DD80;
}

uint64_t sub_1000A2B94()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000A2BF4()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_1000A2C44()
{
  return sub_1000A29BC(*v0);
}

uint64_t sub_1000A2C4C(char *a1, char *a2)
{
  return sub_10005CBF4(*a1, *a2);
}

Swift::Int sub_1000A2C58()
{
  return Hasher._finalize()();
}

uint64_t sub_1000A2CD4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000A2D3C()
{
  return Hasher._finalize()();
}

uint64_t sub_1000A2DB4@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_10031DDA8;
  return sub_100047390(v2, a1, a2);
}

void sub_1000A2DC0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x656C797473;
  if (*v1) {
    uint64_t v2 = 0x737569646172;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_1000A2DF8(void *a1@<X8>)
{
  *a1 = &off_10031DDF8;
}

uint64_t sub_1000A2E08()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000A2E68()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1000A2EB8(unsigned __int8 *a1, char *a2)
{
  return sub_10005C8C0(*a1, *a2);
}

Swift::Int sub_1000A2EC4()
{
  return Hasher._finalize()();
}

uint64_t sub_1000A2FA4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000A306C()
{
  return Hasher._finalize()();
}

unint64_t sub_1000A3148@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10031DE20;
  unint64_t result = sub_1000B049C(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1000A3180(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1952870259;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x746867696CLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x6D756964656DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x7976616568;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x6469676972;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_1000A3224(void *a1@<X8>)
{
  *a1 = &off_10031DEB8;
}

uint64_t sub_1000A3234()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000A3294()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1000A32E4()
{
  uint64_t result = 1952870259;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746867696CLL;
      break;
    case 2:
      uint64_t result = 0x6D756964656DLL;
      break;
    case 3:
      uint64_t result = 0x7976616568;
      break;
    case 4:
      uint64_t result = 0x6469676972;
      break;
    default:
      return result;
  }
  return result;
}

id *sub_1000A3378()
{
  return v0;
}

uint64_t sub_1000A3A50()
{
  sub_1000A3378();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Defaults()
{
  return self;
}

ValueMetadata *type metadata accessor for Defaults.HapticFeedbackStyle()
{
  return &type metadata for Defaults.HapticFeedbackStyle;
}

ValueMetadata *type metadata accessor for Defaults.BlurInitType()
{
  return &type metadata for Defaults.BlurInitType;
}

uint64_t getEnumTagSinglePayload for Region(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s17proximitycontrold8DefaultsC16ApertureViewTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A3C30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Defaults.ApertureViewType()
{
  return &type metadata for Defaults.ApertureViewType;
}

unsigned char *_s17proximitycontrold8DefaultsC15ContinueTriggerOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A3D34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Defaults.ContinueTrigger()
{
  return &type metadata for Defaults.ContinueTrigger;
}

uint64_t sub_1000A3D6C()
{
  return sub_100047AD0(&qword_1003632F0, &qword_1003632F8);
}

unint64_t sub_1000A3D98()
{
  unint64_t result = qword_100363300;
  if (!qword_100363300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363300);
  }
  return result;
}

uint64_t sub_1000A3DEC()
{
  return sub_100047AD0(&qword_100363308, &qword_100363310);
}

unint64_t sub_1000A3E18()
{
  unint64_t result = qword_100363318;
  if (!qword_100363318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363318);
  }
  return result;
}

uint64_t sub_1000A3E6C()
{
  return sub_100047AD0(&qword_100363320, &qword_100363328);
}

unint64_t sub_1000A3E98()
{
  unint64_t result = qword_100363330;
  if (!qword_100363330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363330);
  }
  return result;
}

uint64_t sub_1000A3EEC()
{
  return sub_100047AD0(&qword_100363338, &qword_100363340);
}

unint64_t sub_1000A3F18()
{
  unint64_t result = qword_100363348;
  if (!qword_100363348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363348);
  }
  return result;
}

void *sub_1000A3F6C()
{
  uint64_t v1 = sub_10000A38C(&qword_10035E158);
  __chkstk_darwin(v1 - 8);
  Class v769 = (Class)((char *)&v763 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10035A578 != -1) {
    swift_once();
  }
  int v3 = (void *)qword_1003AC848;
  unsigned int v4 = (objc_class *)sub_10000A38C((uint64_t *)&unk_10035B4C8);
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[*(void *)((swift_isaMask & *(void *)v5) + 0x80)] = 0;
  v5[*(void *)((swift_isaMask & *(void *)v5) + 0x60)] = 0;
  unsigned int v6 = &v5[*(void *)((swift_isaMask & *(void *)v5) + 0x68)];
  *(void *)unsigned int v6 = 0xD000000000000014;
  *((void *)v6 + 1) = 0x80000001002B9420;
  *(void *)&v5[*(void *)((swift_isaMask & *(void *)v5) + 0x70)] = v3;
  v5[*(void *)((swift_isaMask & *(void *)v5) + 0x78)] = 0;
  v998.receiver = v5;
  v998.super_class = v4;
  BOOL v7 = v3;
  id v8 = v3;
  v0[2] = [super init];
  id v9 = (char *)objc_allocWithZone(v4);
  *(void *)&v9[*(void *)((swift_isaMask & *(void *)v9) + 0x80)] = 0;
  v9[*(void *)((swift_isaMask & *(void *)v9) + 0x60)] = 0;
  id v10 = &v9[*(void *)((swift_isaMask & *(void *)v9) + 0x68)];
  Class v773 = (Class)0xD00000000000001ELL;
  *(void *)id v10 = 0xD00000000000001ELL;
  *((void *)v10 + 1) = 0x80000001002B9440;
  *(void *)&v9[*(void *)((swift_isaMask & *(void *)v9) + 0x70)] = v7;
  v9[*(void *)((swift_isaMask & *(void *)v9) + 0x78)] = 0;
  v997.receiver = v9;
  v997.super_class = v4;
  id v11 = v8;
  v0[3] = [super init];
  objc_super v12 = (char *)objc_allocWithZone(v4);
  *(void *)&v12[*(void *)((swift_isaMask & *(void *)v12) + 0x80)] = 0;
  v12[*(void *)((swift_isaMask & *(void *)v12) + 0x60)] = 1;
  uint64_t v13 = &v12[*(void *)((swift_isaMask & *(void *)v12) + 0x68)];
  unint64_t v771 = 0xD000000000000020;
  *(void *)uint64_t v13 = 0xD000000000000020;
  *((void *)v13 + 1) = 0x80000001002B9460;
  *(void *)&v12[*(void *)((swift_isaMask & *(void *)v12) + 0x70)] = v7;
  v12[*(void *)((swift_isaMask & *(void *)v12) + 0x78)] = 0;
  v996.receiver = v12;
  v996.super_class = v4;
  id v14 = v11;
  v0[4] = [super init];
  unint64_t v15 = (char *)objc_allocWithZone(v4);
  *(void *)&v15[*(void *)((swift_isaMask & *(void *)v15) + 0x80)] = 0;
  v15[*(void *)((swift_isaMask & *(void *)v15) + 0x60)] = 1;
  int64_t v16 = &v15[*(void *)((swift_isaMask & *(void *)v15) + 0x68)];
  unint64_t v772 = 0xD00000000000001ALL;
  *(void *)int64_t v16 = 0xD00000000000001ALL;
  *((void *)v16 + 1) = 0x80000001002B9490;
  *(void *)&v15[*(void *)((swift_isaMask & *(void *)v15) + 0x70)] = v7;
  v15[*(void *)((swift_isaMask & *(void *)v15) + 0x78)] = 0;
  v995.receiver = v15;
  v995.super_class = v4;
  id v17 = v14;
  v0[5] = [super init];
  int64_t v18 = (char *)objc_allocWithZone(v4);
  *(void *)&v18[*(void *)((swift_isaMask & *(void *)v18) + 0x80)] = 0;
  v18[*(void *)((swift_isaMask & *(void *)v18) + 0x60)] = 1;
  id v19 = &v18[*(void *)((swift_isaMask & *(void *)v18) + 0x68)];
  Class v770 = (Class)0xD00000000000001FLL;
  *(void *)id v19 = 0xD00000000000001FLL;
  *((void *)v19 + 1) = 0x80000001002B94B0;
  *(void *)&v18[*(void *)((swift_isaMask & *(void *)v18) + 0x70)] = v7;
  v18[*(void *)((swift_isaMask & *(void *)v18) + 0x78)] = 0;
  v994.receiver = v18;
  v994.super_class = v4;
  id v20 = v17;
  v0[6] = [super init];
  uint64_t v21 = (char *)objc_allocWithZone(v4);
  *(void *)&v21[*(void *)((swift_isaMask & *(void *)v21) + 0x80)] = 0;
  v21[*(void *)((swift_isaMask & *(void *)v21) + 0x60)] = 1;
  uint64_t v22 = &v21[*(void *)((swift_isaMask & *(void *)v21) + 0x68)];
  unint64_t v778 = 0xD000000000000010;
  *(void *)uint64_t v22 = 0xD000000000000010;
  *((void *)v22 + 1) = 0x80000001002B94D0;
  *(void *)&v21[*(void *)((swift_isaMask & *(void *)v21) + 0x70)] = v7;
  v21[*(void *)((swift_isaMask & *(void *)v21) + 0x78)] = 0;
  v993.receiver = v21;
  v993.super_class = v4;
  id v23 = v20;
  v0[7] = [super init];
  char v24 = (char *)objc_allocWithZone(v4);
  *(void *)&v24[*(void *)((swift_isaMask & *(void *)v24) + 0x80)] = 0;
  v24[*(void *)((swift_isaMask & *(void *)v24) + 0x60)] = 0;
  uint64_t v25 = &v24[*(void *)((swift_isaMask & *(void *)v24) + 0x68)];
  *(void *)uint64_t v25 = 0xD000000000000014;
  *((void *)v25 + 1) = 0x80000001002B94F0;
  *(void *)&v24[*(void *)((swift_isaMask & *(void *)v24) + 0x70)] = v7;
  v24[*(void *)((swift_isaMask & *(void *)v24) + 0x78)] = 0;
  v992.receiver = v24;
  v992.super_class = v4;
  id v26 = v23;
  v0[8] = [super init];
  id v27 = (objc_class *)sub_10000A38C((uint64_t *)&unk_10035B5D0);
  char v28 = (char *)objc_allocWithZone(v27);
  *(void *)&v28[*(void *)((swift_isaMask & *(void *)v28) + 0x80)] = 0;
  v28[*(void *)((swift_isaMask & *(void *)v28) + 0x60)] = 1;
  objc_super v29 = &v28[*(void *)((swift_isaMask & *(void *)v28) + 0x68)];
  *(void *)objc_super v29 = 0x69746F4E746E6968;
  *((void *)v29 + 1) = 0xEF656C7974536563;
  *(void *)&v28[*(void *)((swift_isaMask & *(void *)v28) + 0x70)] = v7;
  v28[*(void *)((swift_isaMask & *(void *)v28) + 0x78)] = 0;
  v991.receiver = v28;
  v991.super_class = v27;
  id v30 = v26;
  v0[9] = [super init];
  objc_super v31 = (char *)objc_allocWithZone(v4);
  *(void *)&v31[*(void *)((swift_isaMask & *(void *)v31) + 0x80)] = 0;
  v31[*(void *)((swift_isaMask & *(void *)v31) + 0x60)] = 0;
  objc_super v32 = &v31[*(void *)((swift_isaMask & *(void *)v31) + 0x68)];
  *(void *)objc_super v32 = 0x62616E45746E6968;
  *((void *)v32 + 1) = 0xEB0000000064656CLL;
  *(void *)&v31[*(void *)((swift_isaMask & *(void *)v31) + 0x70)] = v7;
  v31[*(void *)((swift_isaMask & *(void *)v31) + 0x78)] = 0;
  v990.receiver = v31;
  v990.super_class = v4;
  objc_super v33 = v0;
  id v34 = v30;
  v0[10] = [super init];
  objc_super v35 = (objc_class *)sub_10000A38C((uint64_t *)&unk_100363350);
  uint64_t v36 = (char *)objc_allocWithZone(v35);
  *(void *)&v36[*(void *)((swift_isaMask & *(void *)v36) + 0x80)] = 0;
  v36[*(void *)((swift_isaMask & *(void *)v36) + 0x60)] = 0;
  char v37 = &v36[*(void *)((swift_isaMask & *(void *)v36) + 0x68)];
  strcpy(v37, "hintBannerType");
  v37[15] = -18;
  *(void *)&v36[*(void *)((swift_isaMask & *(void *)v36) + 0x70)] = v7;
  v36[*(void *)((swift_isaMask & *(void *)v36) + 0x78)] = 0;
  v989.receiver = v36;
  v989.super_class = v35;
  id v38 = v34;
  v0[11] = [super init];
  uint64_t v39 = (char *)objc_allocWithZone(v4);
  *(void *)&v39[*(void *)((swift_isaMask & *(void *)v39) + 0x80)] = 0;
  v39[*(void *)((swift_isaMask & *(void *)v39) + 0x60)] = 0;
  BOOL v40 = &v39[*(void *)((swift_isaMask & *(void *)v39) + 0x68)];
  unint64_t v784 = 0xD000000000000011;
  *(void *)BOOL v40 = 0xD000000000000011;
  *((void *)v40 + 1) = 0x80000001002B9510;
  *(void *)&v39[*(void *)((swift_isaMask & *(void *)v39) + 0x70)] = v7;
  v39[*(void *)((swift_isaMask & *(void *)v39) + 0x78)] = 0;
  v988.receiver = v39;
  v988.super_class = v4;
  id v41 = v38;
  v0[12] = [super init];
  char v42 = (char *)objc_allocWithZone(v4);
  *(void *)&v42[*(void *)((swift_isaMask & *(void *)v42) + 0x80)] = 0;
  v42[*(void *)((swift_isaMask & *(void *)v42) + 0x60)] = 0;
  unint64_t v43 = &v42[*(void *)((swift_isaMask & *(void *)v42) + 0x68)];
  *(void *)unint64_t v43 = 0xD000000000000014;
  *((void *)v43 + 1) = 0x80000001002B9530;
  *(void *)&v42[*(void *)((swift_isaMask & *(void *)v42) + 0x70)] = v7;
  v42[*(void *)((swift_isaMask & *(void *)v42) + 0x78)] = 0;
  v987.receiver = v42;
  v987.super_class = v4;
  id v44 = v41;
  v0[13] = [super init];
  BOOL v45 = (char *)objc_allocWithZone(v4);
  *(void *)&v45[*(void *)((swift_isaMask & *(void *)v45) + 0x80)] = 0;
  v45[*(void *)((swift_isaMask & *(void *)v45) + 0x60)] = 1;
  uint64_t v46 = &v45[*(void *)((swift_isaMask & *(void *)v45) + 0x68)];
  strcpy(v46, "dwellEnabled");
  v46[13] = 0;
  *((_WORD *)v46 + 7) = -5120;
  *(void *)&v45[*(void *)((swift_isaMask & *(void *)v45) + 0x70)] = v7;
  v45[*(void *)((swift_isaMask & *(void *)v45) + 0x78)] = 0;
  v986.receiver = v45;
  v986.super_class = v4;
  id v47 = v44;
  v0[14] = [super init];
  id v48 = (char *)objc_allocWithZone(v35);
  *(void *)&v48[*(void *)((swift_isaMask & *(void *)v48) + 0x80)] = 0;
  v48[*(void *)((swift_isaMask & *(void *)v48) + 0x60)] = 2;
  objc_super v49 = &v48[*(void *)((swift_isaMask & *(void *)v48) + 0x68)];
  *(void *)objc_super v49 = 0x6E61426C6C657764;
  *((void *)v49 + 1) = 0xEF6570795472656ELL;
  *(void *)&v48[*(void *)((swift_isaMask & *(void *)v48) + 0x70)] = v7;
  v48[*(void *)((swift_isaMask & *(void *)v48) + 0x78)] = 0;
  v985.receiver = v48;
  v985.super_class = v35;
  id v50 = v47;
  v0[15] = [super init];
  objc_super v51 = (objc_class *)sub_10000A38C((uint64_t *)&unk_10035B558);
  objc_super v52 = (char *)objc_allocWithZone(v51);
  *(void *)&v52[*(void *)((swift_isaMask & *(void *)v52) + 0x80)] = 0;
  *(void *)&v52[*(void *)((swift_isaMask & *(void *)v52) + 0x60)] = 0x4000000000000000;
  objc_super v53 = &v52[*(void *)((swift_isaMask & *(void *)v52) + 0x68)];
  unint64_t v787 = 0xD000000000000016;
  *(void *)objc_super v53 = 0xD000000000000016;
  *((void *)v53 + 1) = 0x80000001002B9550;
  *(void *)&v52[*(void *)((swift_isaMask & *(void *)v52) + 0x70)] = v7;
  v52[*(void *)((swift_isaMask & *(void *)v52) + 0x78)] = 0;
  v984.receiver = v52;
  v984.super_class = v51;
  id v54 = v50;
  v0[16] = [super init];
  objc_super v55 = (char *)objc_allocWithZone(v51);
  *(void *)&v55[*(void *)((swift_isaMask & *(void *)v55) + 0x80)] = 0;
  *(void *)&v55[*(void *)((swift_isaMask & *(void *)v55) + 0x60)] = 0x3FEB333333333333;
  objc_super v56 = &v55[*(void *)((swift_isaMask & *(void *)v55) + 0x68)];
  unint64_t v775 = 0xD000000000000017;
  *(void *)objc_super v56 = 0xD000000000000017;
  *((void *)v56 + 1) = 0x80000001002B9570;
  *(void *)&v55[*(void *)((swift_isaMask & *(void *)v55) + 0x70)] = v7;
  v55[*(void *)((swift_isaMask & *(void *)v55) + 0x78)] = 0;
  v983.receiver = v55;
  v983.super_class = v51;
  id v57 = v54;
  v0[17] = [super init];
  objc_super v58 = (char *)objc_allocWithZone(v51);
  *(void *)&v58[*(void *)((swift_isaMask & *(void *)v58) + 0x80)] = 0;
  *(void *)&v58[*(void *)((swift_isaMask & *(void *)v58) + 0x60)] = 0x3FECCCCCCCCCCCCDLL;
  objc_super v59 = (unint64_t *)&v58[*(void *)((swift_isaMask & *(void *)v58) + 0x68)];
  unint64_t v60 = v778;
  *objc_super v59 = v778;
  v59[1] = 0x80000001002B9590;
  *(void *)&v58[*(void *)((swift_isaMask & *(void *)v58) + 0x70)] = v7;
  v58[*(void *)((swift_isaMask & *(void *)v58) + 0x78)] = 0;
  v982.receiver = v58;
  v982.super_class = v51;
  id v61 = v57;
  v33[18] = [super init];
  objc_super v62 = (char *)objc_allocWithZone(v51);
  *(void *)&v62[*(void *)((swift_isaMask & *(void *)v62) + 0x80)] = 0;
  *(void *)&v62[*(void *)((swift_isaMask & *(void *)v62) + 0x60)] = 0x4008000000000000;
  objc_super v63 = &v62[*(void *)((swift_isaMask & *(void *)v62) + 0x68)];
  *(void *)objc_super v63 = v60;
  *((void *)v63 + 1) = 0x80000001002B95B0;
  *(void *)&v62[*(void *)((swift_isaMask & *(void *)v62) + 0x70)] = v7;
  v62[*(void *)((swift_isaMask & *(void *)v62) + 0x78)] = 0;
  v981.receiver = v62;
  v981.super_class = v51;
  id v64 = v61;
  v33[19] = [super init];
  unint64_t v65 = (char *)objc_allocWithZone(v4);
  *(void *)&v65[*(void *)((swift_isaMask & *(void *)v65) + 0x80)] = 0;
  v65[*(void *)((swift_isaMask & *(void *)v65) + 0x60)] = 0;
  char v66 = &v65[*(void *)((swift_isaMask & *(void *)v65) + 0x68)];
  unint64_t v783 = 0xD000000000000012;
  *(void *)char v66 = 0xD000000000000012;
  *((void *)v66 + 1) = 0x80000001002B95D0;
  *(void *)&v65[*(void *)((swift_isaMask & *(void *)v65) + 0x70)] = v7;
  v65[*(void *)((swift_isaMask & *(void *)v65) + 0x78)] = 0;
  v980.receiver = v65;
  v980.super_class = v4;
  id v67 = v64;
  v33[20] = [super init];
  int64_t v68 = (char *)objc_allocWithZone(v4);
  *(void *)&v68[*(void *)((swift_isaMask & *(void *)v68) + 0x80)] = 0;
  v68[*(void *)((swift_isaMask & *(void *)v68) + 0x60)] = 0;
  uint64_t v69 = &v68[*(void *)((swift_isaMask & *(void *)v68) + 0x68)];
  unint64_t v777 = 0xD000000000000015;
  *(void *)uint64_t v69 = 0xD000000000000015;
  *((void *)v69 + 1) = 0x80000001002B95F0;
  *(void *)&v68[*(void *)((swift_isaMask & *(void *)v68) + 0x70)] = v7;
  v68[*(void *)((swift_isaMask & *(void *)v68) + 0x78)] = 0;
  v979.receiver = v68;
  v979.super_class = v4;
  id v70 = v67;
  v33[21] = [super init];
  uint64_t v71 = (char *)objc_allocWithZone(v4);
  *(void *)&v71[*(void *)((swift_isaMask & *(void *)v71) + 0x80)] = 0;
  v71[*(void *)((swift_isaMask & *(void *)v71) + 0x60)] = 1;
  unint64_t v72 = (unint64_t *)&v71[*(void *)((swift_isaMask & *(void *)v71) + 0x68)];
  *unint64_t v72 = v787;
  v72[1] = 0x80000001002B9610;
  *(void *)&v71[*(void *)((swift_isaMask & *(void *)v71) + 0x70)] = v7;
  v71[*(void *)((swift_isaMask & *(void *)v71) + 0x78)] = 0;
  v978.receiver = v71;
  v978.super_class = v4;
  id v73 = v70;
  v33[22] = [super init];
  Class v785 = v4;
  unint64_t v74 = (char *)objc_allocWithZone(v4);
  *(void *)&v74[*(void *)((swift_isaMask & *(void *)v74) + 0x80)] = 0;
  v74[*(void *)((swift_isaMask & *(void *)v74) + 0x60)] = 1;
  unint64_t v75 = &v74[*(void *)((swift_isaMask & *(void *)v74) + 0x68)];
  strcpy(v75, "failureEnabled");
  v75[15] = -18;
  *(void *)&v74[*(void *)((swift_isaMask & *(void *)v74) + 0x70)] = v7;
  v74[*(void *)((swift_isaMask & *(void *)v74) + 0x78)] = 0;
  v977.receiver = v74;
  v977.super_class = v4;
  id v76 = v73;
  v33[23] = [super init];
  Class v786 = v51;
  uint64_t v77 = (char *)objc_allocWithZone(v51);
  *(void *)&v77[*(void *)((swift_isaMask & *(void *)v77) + 0x80)] = 0;
  *(void *)&v77[*(void *)((swift_isaMask & *(void *)v77) + 0x60)] = 0x4014000000000000;
  uint64_t v78 = &v77[*(void *)((swift_isaMask & *(void *)v77) + 0x68)];
  *(void *)uint64_t v78 = 0x446572756C696166;
  *((void *)v78 + 1) = 0xEF6E6F6974617275;
  *(void *)&v77[*(void *)((swift_isaMask & *(void *)v77) + 0x70)] = v7;
  v77[*(void *)((swift_isaMask & *(void *)v77) + 0x78)] = 0;
  v976.receiver = v77;
  v976.super_class = v51;
  id v79 = v76;
  v33[24] = [super init];
  char v80 = (objc_class *)sub_10000A38C((uint64_t *)&unk_10035B5C0);
  int64_t v81 = (char *)objc_allocWithZone(v80);
  *(void *)&v81[*(void *)((swift_isaMask & *(void *)v81) + 0x80)] = 0;
  v81[*(void *)((swift_isaMask & *(void *)v81) + 0x60)] = 1;
  unint64_t v82 = &v81[*(void *)((swift_isaMask & *(void *)v81) + 0x68)];
  unint64_t v781 = 0xD000000000000013;
  *(void *)unint64_t v82 = 0xD000000000000013;
  *((void *)v82 + 1) = 0x80000001002B9630;
  *(void *)&v81[*(void *)((swift_isaMask & *(void *)v81) + 0x70)] = v7;
  v81[*(void *)((swift_isaMask & *(void *)v81) + 0x78)] = 0;
  v975.receiver = v81;
  v975.super_class = v80;
  id v83 = v79;
  v33[25] = [super init];
  unint64_t v84 = (char *)objc_allocWithZone(v80);
  *(void *)&v84[*(void *)((swift_isaMask & *(void *)v84) + 0x80)] = 0;
  v84[*(void *)((swift_isaMask & *(void *)v84) + 0x60)] = 4;
  char v85 = &v84[*(void *)((swift_isaMask & *(void *)v84) + 0x68)];
  *(void *)char v85 = 0xD000000000000019;
  *((void *)v85 + 1) = 0x80000001002B9650;
  *(void *)&v84[*(void *)((swift_isaMask & *(void *)v84) + 0x70)] = v7;
  v84[*(void *)((swift_isaMask & *(void *)v84) + 0x78)] = 0;
  v974.receiver = v84;
  v974.super_class = v80;
  id v86 = v83;
  v33[26] = [super init];
  unint64_t v87 = (char *)objc_allocWithZone(v80);
  *(void *)&v87[*(void *)((swift_isaMask & *(void *)v87) + 0x80)] = 0;
  v87[*(void *)((swift_isaMask & *(void *)v87) + 0x60)] = 2;
  unint64_t v88 = &v87[*(void *)((swift_isaMask & *(void *)v87) + 0x68)];
  *(void *)unint64_t v88 = 0xD000000000000019;
  *((void *)v88 + 1) = 0x80000001002B9670;
  unint64_t v782 = 0xD000000000000019;
  *(void *)&v87[*(void *)((swift_isaMask & *(void *)v87) + 0x70)] = v7;
  v87[*(void *)((swift_isaMask & *(void *)v87) + 0x78)] = 0;
  v973.receiver = v87;
  v973.super_class = v80;
  id v89 = v86;
  v33[27] = [super init];
  uint64_t v90 = (char *)objc_allocWithZone(v80);
  *(void *)&v90[*(void *)((swift_isaMask & *(void *)v90) + 0x80)] = 0;
  v90[*(void *)((swift_isaMask & *(void *)v90) + 0x60)] = 4;
  unint64_t v91 = (unint64_t *)&v90[*(void *)((swift_isaMask & *(void *)v90) + 0x68)];
  unint64_t v92 = v771;
  unint64_t *v91 = v771;
  v91[1] = 0x80000001002B9690;
  *(void *)&v90[*(void *)((swift_isaMask & *(void *)v90) + 0x70)] = v7;
  v90[*(void *)((swift_isaMask & *(void *)v90) + 0x78)] = 0;
  v972.receiver = v90;
  v972.super_class = v80;
  id v93 = v89;
  v33[28] = [super init];
  uint64_t v94 = (char *)objc_allocWithZone(v80);
  *(void *)&v94[*(void *)((swift_isaMask & *(void *)v94) + 0x80)] = 0;
  v94[*(void *)((swift_isaMask & *(void *)v94) + 0x60)] = 2;
  v95 = &v94[*(void *)((swift_isaMask & *(void *)v94) + 0x68)];
  *(void *)v95 = v92;
  *((void *)v95 + 1) = 0x80000001002B96C0;
  *(void *)&v94[*(void *)((swift_isaMask & *(void *)v94) + 0x70)] = v7;
  v94[*(void *)((swift_isaMask & *(void *)v94) + 0x78)] = 0;
  v971.receiver = v94;
  v971.super_class = v80;
  id v96 = v93;
  v33[29] = [super init];
  Swift::String v97 = (char *)objc_allocWithZone(v80);
  *(void *)&v97[*(void *)((swift_isaMask & *(void *)v97) + 0x80)] = 0;
  v97[*(void *)((swift_isaMask & *(void *)v97) + 0x60)] = 9;
  unint64_t v98 = &v97[*(void *)((swift_isaMask & *(void *)v97) + 0x68)];
  *(void *)unint64_t v98 = 0xD000000000000019;
  *((void *)v98 + 1) = 0x80000001002B96F0;
  *(void *)&v97[*(void *)((swift_isaMask & *(void *)v97) + 0x70)] = v7;
  v97[*(void *)((swift_isaMask & *(void *)v97) + 0x78)] = 0;
  v970.receiver = v97;
  v970.super_class = v80;
  id v99 = v96;
  v33[30] = [super init];
  unint64_t v100 = (char *)objc_allocWithZone(v80);
  *(void *)&v100[*(void *)((swift_isaMask & *(void *)v100) + 0x80)] = 0;
  v100[*(void *)((swift_isaMask & *(void *)v100) + 0x60)] = 1;
  unint64_t v101 = (unint64_t *)&v100[*(void *)((swift_isaMask & *(void *)v100) + 0x68)];
  unint64_t v102 = v777;
  *unint64_t v101 = v777;
  v101[1] = 0x80000001002B9710;
  *(void *)&v100[*(void *)((swift_isaMask & *(void *)v100) + 0x70)] = v7;
  v100[*(void *)((swift_isaMask & *(void *)v100) + 0x78)] = 0;
  v969.receiver = v100;
  v969.super_class = v80;
  id v103 = v99;
  v33[31] = [super init];
  uint64_t v104 = (char *)objc_allocWithZone(v80);
  *(void *)&v104[*(void *)((swift_isaMask & *(void *)v104) + 0x80)] = 0;
  v104[*(void *)((swift_isaMask & *(void *)v104) + 0x60)] = 1;
  v105 = &v104[*(void *)((swift_isaMask & *(void *)v104) + 0x68)];
  *(void *)v105 = v102;
  *((void *)v105 + 1) = 0x80000001002B9730;
  *(void *)&v104[*(void *)((swift_isaMask & *(void *)v104) + 0x70)] = v7;
  v104[*(void *)((swift_isaMask & *(void *)v104) + 0x78)] = 0;
  v968.receiver = v104;
  v968.super_class = v80;
  id v106 = v103;
  v33[32] = [super init];
  Swift::String v107 = (char *)objc_allocWithZone(v80);
  *(void *)&v107[*(void *)((swift_isaMask & *(void *)v107) + 0x80)] = 0;
  v107[*(void *)((swift_isaMask & *(void *)v107) + 0x60)] = 5;
  Swift::String v108 = &v107[*(void *)((swift_isaMask & *(void *)v107) + 0x68)];
  Class v768 = (Class)0xD000000000000025;
  *(void *)Swift::String v108 = 0xD000000000000025;
  *((void *)v108 + 1) = 0x80000001002B9750;
  *(void *)&v107[*(void *)((swift_isaMask & *(void *)v107) + 0x70)] = v7;
  v107[*(void *)((swift_isaMask & *(void *)v107) + 0x78)] = 0;
  v967.receiver = v107;
  v967.super_class = v80;
  id v109 = v106;
  v33[33] = [super init];
  unint64_t v110 = v785;
  unint64_t v111 = (char *)objc_allocWithZone(v785);
  *(void *)&v111[*(void *)((swift_isaMask & *(void *)v111) + 0x80)] = 0;
  v111[*(void *)((swift_isaMask & *(void *)v111) + 0x60)] = 0;
  unint64_t v112 = &v111[*(void *)((swift_isaMask & *(void *)v111) + 0x68)];
  *(void *)unint64_t v112 = 0xD00000000000002CLL;
  *((void *)v112 + 1) = 0x80000001002B9780;
  *(void *)&v111[*(void *)((swift_isaMask & *(void *)v111) + 0x70)] = v7;
  v111[*(void *)((swift_isaMask & *(void *)v111) + 0x78)] = 0;
  v966.receiver = v111;
  v966.super_class = v110;
  id v113 = v109;
  v33[34] = [super init];
  Swift::String v114 = v786;
  Swift::String v115 = (char *)objc_allocWithZone(v786);
  *(void *)&v115[*(void *)((swift_isaMask & *(void *)v115) + 0x80)] = 0;
  *(void *)&v115[*(void *)((swift_isaMask & *(void *)v115) + 0x60)] = 0x4020000000000000;
  uint64_t v116 = &v115[*(void *)((swift_isaMask & *(void *)v115) + 0x68)];
  *(void *)uint64_t v116 = v773;
  *((void *)v116 + 1) = 0x80000001002B97B0;
  *(void *)&v115[*(void *)((swift_isaMask & *(void *)v115) + 0x70)] = v7;
  v115[*(void *)((swift_isaMask & *(void *)v115) + 0x78)] = 0;
  v965.receiver = v115;
  v965.super_class = v114;
  id v117 = v113;
  v33[35] = [super init];
  v118 = (char *)objc_allocWithZone(v110);
  *(void *)&v118[*(void *)((swift_isaMask & *(void *)v118) + 0x80)] = 0;
  v118[*(void *)((swift_isaMask & *(void *)v118) + 0x60)] = 0;
  Swift::String v119 = (unint64_t *)&v118[*(void *)((swift_isaMask & *(void *)v118) + 0x68)];
  *Swift::String v119 = v787;
  v119[1] = 0x80000001002B97D0;
  *(void *)&v118[*(void *)((swift_isaMask & *(void *)v118) + 0x70)] = v7;
  v118[*(void *)((swift_isaMask & *(void *)v118) + 0x78)] = 0;
  v964.receiver = v118;
  v964.super_class = v110;
  id v120 = v117;
  v33[36] = [super init];
  v121 = (char *)objc_allocWithZone(v110);
  *(void *)&v121[*(void *)((swift_isaMask & *(void *)v121) + 0x80)] = 0;
  v121[*(void *)((swift_isaMask & *(void *)v121) + 0x60)] = 0;
  v122 = (unint64_t *)&v121[*(void *)((swift_isaMask & *(void *)v121) + 0x68)];
  unint64_t *v122 = v775;
  v122[1] = 0x80000001002B97F0;
  *(void *)&v121[*(void *)((swift_isaMask & *(void *)v121) + 0x70)] = v7;
  v121[*(void *)((swift_isaMask & *(void *)v121) + 0x78)] = 0;
  v963.receiver = v121;
  v963.super_class = v110;
  id v123 = v120;
  v33[37] = [super init];
  v124 = (char *)objc_allocWithZone(v110);
  *(void *)&v124[*(void *)((swift_isaMask & *(void *)v124) + 0x80)] = 0;
  v124[*(void *)((swift_isaMask & *(void *)v124) + 0x60)] = 1;
  uint64_t v125 = &v124[*(void *)((swift_isaMask & *(void *)v124) + 0x68)];
  unint64_t v774 = 0xD00000000000001DLL;
  *(void *)uint64_t v125 = 0xD00000000000001DLL;
  *((void *)v125 + 1) = 0x80000001002B9810;
  *(void *)&v124[*(void *)((swift_isaMask & *(void *)v124) + 0x70)] = v7;
  v124[*(void *)((swift_isaMask & *(void *)v124) + 0x78)] = 0;
  v962.receiver = v124;
  v962.super_class = v110;
  id v126 = v123;
  v33[38] = [super init];
  v127 = (char *)objc_allocWithZone(v110);
  *(void *)&v127[*(void *)((swift_isaMask & *(void *)v127) + 0x80)] = 0;
  v127[*(void *)((swift_isaMask & *(void *)v127) + 0x60)] = 1;
  v128 = &v127[*(void *)((swift_isaMask & *(void *)v127) + 0x68)];
  *(void *)v128 = 0xD00000000000002ALL;
  *((void *)v128 + 1) = 0x80000001002B9830;
  *(void *)&v127[*(void *)((swift_isaMask & *(void *)v127) + 0x70)] = v7;
  v127[*(void *)((swift_isaMask & *(void *)v127) + 0x78)] = 0;
  v961.receiver = v127;
  v961.super_class = v110;
  id v129 = v126;
  v33[39] = [super init];
  v130 = (char *)objc_allocWithZone(v110);
  *(void *)&v130[*(void *)((swift_isaMask & *(void *)v130) + 0x80)] = 0;
  v130[*(void *)((swift_isaMask & *(void *)v130) + 0x60)] = 0;
  v131 = (unint64_t *)&v130[*(void *)((swift_isaMask & *(void *)v130) + 0x68)];
  unint64_t *v131 = v783;
  v131[1] = 0x80000001002B9860;
  *(void *)&v130[*(void *)((swift_isaMask & *(void *)v130) + 0x70)] = v7;
  v130[*(void *)((swift_isaMask & *(void *)v130) + 0x78)] = 0;
  v960.receiver = v130;
  v960.super_class = v110;
  id v132 = v129;
  v33[40] = [super init];
  v133 = (char *)objc_allocWithZone(v110);
  *(void *)&v133[*(void *)((swift_isaMask & *(void *)v133) + 0x80)] = 0;
  v133[*(void *)((swift_isaMask & *(void *)v133) + 0x60)] = 0;
  v134 = (unint64_t *)&v133[*(void *)((swift_isaMask & *(void *)v133) + 0x68)];
  unint64_t v135 = v784;
  unint64_t *v134 = v784;
  v134[1] = 0x80000001002B9880;
  *(void *)&v133[*(void *)((swift_isaMask & *(void *)v133) + 0x70)] = v7;
  v133[*(void *)((swift_isaMask & *(void *)v133) + 0x78)] = 0;
  v959.receiver = v133;
  v959.super_class = v110;
  id v136 = v132;
  v33[41] = [super init];
  v137 = (char *)objc_allocWithZone(v110);
  *(void *)&v137[*(void *)((swift_isaMask & *(void *)v137) + 0x80)] = 0;
  v137[*(void *)((swift_isaMask & *(void *)v137) + 0x60)] = 1;
  v138 = &v137[*(void *)((swift_isaMask & *(void *)v137) + 0x68)];
  *(void *)v138 = v135;
  *((void *)v138 + 1) = 0x80000001002B98A0;
  *(void *)&v137[*(void *)((swift_isaMask & *(void *)v137) + 0x70)] = v7;
  v137[*(void *)((swift_isaMask & *(void *)v137) + 0x78)] = 0;
  v958.receiver = v137;
  v958.super_class = v110;
  id v139 = v136;
  v33[42] = [super init];
  v140 = (char *)objc_allocWithZone(v110);
  *(void *)&v140[*(void *)((swift_isaMask & *(void *)v140) + 0x80)] = 0;
  v140[*(void *)((swift_isaMask & *(void *)v140) + 0x60)] = 0;
  v141 = &v140[*(void *)((swift_isaMask & *(void *)v140) + 0x68)];
  strcpy(v141, "debugModifiers");
  v141[15] = -18;
  *(void *)&v140[*(void *)((swift_isaMask & *(void *)v140) + 0x70)] = v7;
  v140[*(void *)((swift_isaMask & *(void *)v140) + 0x78)] = 0;
  v957.receiver = v140;
  v957.super_class = v110;
  id v142 = v139;
  v33[43] = [super init];
  v143 = (char *)objc_allocWithZone(v110);
  *(void *)&v143[*(void *)((swift_isaMask & *(void *)v143) + 0x80)] = 0;
  v143[*(void *)((swift_isaMask & *(void *)v143) + 0x60)] = 1;
  v144 = (unint64_t *)&v143[*(void *)((swift_isaMask & *(void *)v143) + 0x68)];
  unint64_t *v144 = v778;
  v144[1] = 0x80000001002B98C0;
  *(void *)&v143[*(void *)((swift_isaMask & *(void *)v143) + 0x70)] = v7;
  v143[*(void *)((swift_isaMask & *(void *)v143) + 0x78)] = 0;
  v956.receiver = v143;
  v956.super_class = v110;
  id v145 = v142;
  v33[44] = [super init];
  v146 = (char *)objc_allocWithZone(v110);
  *(void *)&v146[*(void *)((swift_isaMask & *(void *)v146) + 0x80)] = 0;
  v146[*(void *)((swift_isaMask & *(void *)v146) + 0x60)] = 1;
  v147 = (unint64_t *)&v146[*(void *)((swift_isaMask & *(void *)v146) + 0x68)];
  unint64_t *v147 = v787;
  v147[1] = 0x80000001002B98E0;
  *(void *)&v146[*(void *)((swift_isaMask & *(void *)v146) + 0x70)] = v7;
  v146[*(void *)((swift_isaMask & *(void *)v146) + 0x78)] = 0;
  v955.receiver = v146;
  v955.super_class = v110;
  id v148 = v145;
  v33[45] = [super init];
  v149 = v786;
  v150 = (char *)objc_allocWithZone(v786);
  *(void *)&v150[*(void *)((swift_isaMask & *(void *)v150) + 0x80)] = 0;
  *(void *)&v150[*(void *)((swift_isaMask & *(void *)v150) + 0x60)] = 0x4020000000000000;
  v151 = (unint64_t *)&v150[*(void *)((swift_isaMask & *(void *)v150) + 0x68)];
  unint64_t *v151 = v771;
  v151[1] = 0x80000001002B9900;
  *(void *)&v150[*(void *)((swift_isaMask & *(void *)v150) + 0x70)] = v7;
  v150[*(void *)((swift_isaMask & *(void *)v150) + 0x78)] = 0;
  v954.receiver = v150;
  v954.super_class = v149;
  id v152 = v148;
  v33[46] = [super init];
  v153 = (objc_class *)sub_10000A38C((uint64_t *)&unk_10035B518);
  Class v776 = v153;
  v154 = (char *)objc_allocWithZone(v153);
  *(void *)&v154[*(void *)((swift_isaMask & *(void *)v154) + 0x80)] = 0;
  *(void *)&v154[*(void *)((swift_isaMask & *(void *)v154) + 0x60)] = 2;
  v155 = (unint64_t *)&v154[*(void *)((swift_isaMask & *(void *)v154) + 0x68)];
  unint64_t *v155 = v782;
  v155[1] = 0x80000001002B9930;
  *(void *)&v154[*(void *)((swift_isaMask & *(void *)v154) + 0x70)] = v7;
  v154[*(void *)((swift_isaMask & *(void *)v154) + 0x78)] = 0;
  v953.receiver = v154;
  v953.super_class = v153;
  id v156 = v152;
  v33[47] = [super init];
  v157 = (char *)objc_allocWithZone(v149);
  *(void *)&v157[*(void *)((swift_isaMask & *(void *)v157) + 0x80)] = 0;
  *(void *)&v157[*(void *)((swift_isaMask & *(void *)v157) + 0x60)] = 0x3FF0000000000000;
  v158 = (unint64_t *)&v157[*(void *)((swift_isaMask & *(void *)v157) + 0x68)];
  unint64_t *v158 = v781;
  v158[1] = 0x80000001002B9950;
  *(void *)&v157[*(void *)((swift_isaMask & *(void *)v157) + 0x70)] = v7;
  v157[*(void *)((swift_isaMask & *(void *)v157) + 0x78)] = 0;
  v952.receiver = v157;
  v952.super_class = v149;
  id v159 = v156;
  v33[48] = [super init];
  v160 = (char *)objc_allocWithZone(v149);
  *(void *)&v160[*(void *)((swift_isaMask & *(void *)v160) + 0x80)] = 0;
  *(void *)&v160[*(void *)((swift_isaMask & *(void *)v160) + 0x60)] = 0x403E000000000000;
  v161 = &v160[*(void *)((swift_isaMask & *(void *)v160) + 0x68)];
  unint64_t v779 = 0xD000000000000018;
  *(void *)v161 = 0xD000000000000018;
  *((void *)v161 + 1) = 0x80000001002B9970;
  *(void *)&v160[*(void *)((swift_isaMask & *(void *)v160) + 0x70)] = v7;
  v160[*(void *)((swift_isaMask & *(void *)v160) + 0x78)] = 0;
  v951.receiver = v160;
  v951.super_class = v149;
  id v162 = v159;
  v33[49] = [super init];
  v163 = (char *)objc_allocWithZone(v149);
  *(void *)&v163[*(void *)((swift_isaMask & *(void *)v163) + 0x80)] = 0;
  *(void *)&v163[*(void *)((swift_isaMask & *(void *)v163) + 0x60)] = 0x4024000000000000;
  v164 = (unint64_t *)&v163[*(void *)((swift_isaMask & *(void *)v163) + 0x68)];
  unint64_t *v164 = v787;
  v164[1] = 0x80000001002B9990;
  *(void *)&v163[*(void *)((swift_isaMask & *(void *)v163) + 0x70)] = v7;
  v163[*(void *)((swift_isaMask & *(void *)v163) + 0x78)] = 0;
  v950.receiver = v163;
  v950.super_class = v149;
  id v165 = v162;
  v33[50] = [super init];
  v166 = (char *)objc_allocWithZone(v149);
  *(void *)&v166[*(void *)((swift_isaMask & *(void *)v166) + 0x80)] = 0;
  *(void *)&v166[*(void *)((swift_isaMask & *(void *)v166) + 0x60)] = 0;
  v167 = &v166[*(void *)((swift_isaMask & *(void *)v166) + 0x68)];
  *(void *)v167 = v773;
  *((void *)v167 + 1) = 0x80000001002B99B0;
  *(void *)&v166[*(void *)((swift_isaMask & *(void *)v166) + 0x70)] = v7;
  v166[*(void *)((swift_isaMask & *(void *)v166) + 0x78)] = 0;
  v949.receiver = v166;
  v949.super_class = v149;
  id v168 = v165;
  v33[51] = [super init];
  v169 = (char *)objc_allocWithZone(v110);
  *(void *)&v169[*(void *)((swift_isaMask & *(void *)v169) + 0x80)] = 0;
  v169[*(void *)((swift_isaMask & *(void *)v169) + 0x60)] = 1;
  v170 = (unint64_t *)&v169[*(void *)((swift_isaMask & *(void *)v169) + 0x68)];
  unint64_t *v170 = v772;
  v170[1] = 0x80000001002B99D0;
  *(void *)&v169[*(void *)((swift_isaMask & *(void *)v169) + 0x70)] = v7;
  v169[*(void *)((swift_isaMask & *(void *)v169) + 0x78)] = 0;
  v948.receiver = v169;
  v948.super_class = v110;
  id v171 = v168;
  v33[52] = [super init];
  v172 = (char *)objc_allocWithZone(v110);
  *(void *)&v172[*(void *)((swift_isaMask & *(void *)v172) + 0x80)] = 0;
  v172[*(void *)((swift_isaMask & *(void *)v172) + 0x60)] = 0;
  v173 = (unint64_t *)&v172[*(void *)((swift_isaMask & *(void *)v172) + 0x68)];
  unint64_t *v173 = v783;
  v173[1] = 0x80000001002B99F0;
  *(void *)&v172[*(void *)((swift_isaMask & *(void *)v172) + 0x70)] = v7;
  v172[*(void *)((swift_isaMask & *(void *)v172) + 0x78)] = 0;
  v947.receiver = v172;
  v947.super_class = v110;
  id v174 = v171;
  v33[53] = [super init];
  v175 = (objc_class *)sub_10000A38C((uint64_t *)&unk_10035B5A8);
  v176 = (char *)objc_allocWithZone(v175);
  *(void *)&v176[*(void *)((swift_isaMask & *(void *)v176) + 0x80)] = 0;
  v176[*(void *)((swift_isaMask & *(void *)v176) + 0x60)] = 2;
  v177 = (unint64_t *)&v176[*(void *)((swift_isaMask & *(void *)v176) + 0x68)];
  unint64_t *v177 = v778;
  v177[1] = 0x80000001002B9A10;
  *(void *)&v176[*(void *)((swift_isaMask & *(void *)v176) + 0x70)] = v7;
  v176[*(void *)((swift_isaMask & *(void *)v176) + 0x78)] = 0;
  v946.receiver = v176;
  v946.super_class = v175;
  id v178 = v174;
  v33[54] = [super init];
  v179 = (objc_class *)sub_10000A38C((uint64_t *)&unk_10035B598);
  v180 = (char *)objc_allocWithZone(v179);
  *(void *)&v180[*(void *)((swift_isaMask & *(void *)v180) + 0x80)] = 0;
  v180[*(void *)((swift_isaMask & *(void *)v180) + 0x60)] = 2;
  v181 = &v180[*(void *)((swift_isaMask & *(void *)v180) + 0x68)];
  unint64_t v766 = 0xD000000000000022;
  *(void *)v181 = 0xD000000000000022;
  *((void *)v181 + 1) = 0x80000001002B9A30;
  *(void *)&v180[*(void *)((swift_isaMask & *(void *)v180) + 0x70)] = v7;
  v180[*(void *)((swift_isaMask & *(void *)v180) + 0x78)] = 0;
  v945.receiver = v180;
  v945.super_class = v179;
  id v182 = v178;
  v33[55] = [super init];
  v183 = (char *)objc_allocWithZone(v179);
  *(void *)&v183[*(void *)((swift_isaMask & *(void *)v183) + 0x80)] = 0;
  v183[*(void *)((swift_isaMask & *(void *)v183) + 0x60)] = 2;
  v184 = (unint64_t *)&v183[*(void *)((swift_isaMask & *(void *)v183) + 0x68)];
  unint64_t *v184 = v775;
  v184[1] = 0x80000001002B9A60;
  *(void *)&v183[*(void *)((swift_isaMask & *(void *)v183) + 0x70)] = v7;
  v183[*(void *)((swift_isaMask & *(void *)v183) + 0x78)] = 0;
  v944.receiver = v183;
  v944.super_class = v179;
  id v185 = v182;
  v33[56] = [super init];
  v186 = (char *)objc_allocWithZone(v179);
  *(void *)&v186[*(void *)((swift_isaMask & *(void *)v186) + 0x80)] = 0;
  v186[*(void *)((swift_isaMask & *(void *)v186) + 0x60)] = 2;
  v187 = (unint64_t *)&v186[*(void *)((swift_isaMask & *(void *)v186) + 0x68)];
  unint64_t *v187 = v782;
  v187[1] = 0x80000001002B9A80;
  *(void *)&v186[*(void *)((swift_isaMask & *(void *)v186) + 0x70)] = v7;
  v186[*(void *)((swift_isaMask & *(void *)v186) + 0x78)] = 0;
  v943.receiver = v186;
  v943.super_class = v179;
  id v188 = v185;
  v33[57] = [super init];
  v189 = v179;
  Class v767 = v179;
  v190 = (char *)objc_allocWithZone(v179);
  *(void *)&v190[*(void *)((swift_isaMask & *(void *)v190) + 0x80)] = 0;
  v190[*(void *)((swift_isaMask & *(void *)v190) + 0x60)] = 2;
  v191 = (unint64_t *)&v190[*(void *)((swift_isaMask & *(void *)v190) + 0x68)];
  unint64_t v192 = v771;
  unint64_t *v191 = v771;
  v191[1] = 0x80000001002B9AA0;
  *(void *)&v190[*(void *)((swift_isaMask & *(void *)v190) + 0x70)] = v7;
  v190[*(void *)((swift_isaMask & *(void *)v190) + 0x78)] = 0;
  v942.receiver = v190;
  v942.super_class = v189;
  id v193 = v188;
  v33[58] = [super init];
  v194 = v785;
  v195 = (char *)objc_allocWithZone(v785);
  *(void *)&v195[*(void *)((swift_isaMask & *(void *)v195) + 0x80)] = 0;
  v195[*(void *)((swift_isaMask & *(void *)v195) + 0x60)] = 0;
  v196 = &v195[*(void *)((swift_isaMask & *(void *)v195) + 0x68)];
  unint64_t v780 = 0xD00000000000001BLL;
  *(void *)v196 = 0xD00000000000001BLL;
  *((void *)v196 + 1) = 0x80000001002B9AD0;
  *(void *)&v195[*(void *)((swift_isaMask & *(void *)v195) + 0x70)] = v7;
  v195[*(void *)((swift_isaMask & *(void *)v195) + 0x78)] = 0;
  v941.receiver = v195;
  v941.super_class = v194;
  id v197 = v193;
  v33[59] = [super init];
  v198 = (char *)objc_allocWithZone(v194);
  *(void *)&v198[*(void *)((swift_isaMask & *(void *)v198) + 0x80)] = 0;
  v198[*(void *)((swift_isaMask & *(void *)v198) + 0x60)] = 1;
  v199 = &v198[*(void *)((swift_isaMask & *(void *)v198) + 0x68)];
  *(void *)v199 = v192;
  *((void *)v199 + 1) = 0x80000001002B9AF0;
  *(void *)&v198[*(void *)((swift_isaMask & *(void *)v198) + 0x70)] = v7;
  v198[*(void *)((swift_isaMask & *(void *)v198) + 0x78)] = 0;
  v940.receiver = v198;
  v940.super_class = v194;
  id v200 = v197;
  v33[60] = [super init];
  v201 = (char *)objc_allocWithZone(v194);
  *(void *)&v201[*(void *)((swift_isaMask & *(void *)v201) + 0x80)] = 0;
  v201[*(void *)((swift_isaMask & *(void *)v201) + 0x60)] = 0;
  v202 = &v201[*(void *)((swift_isaMask & *(void *)v201) + 0x68)];
  unint64_t v765 = 0xD000000000000024;
  *(void *)v202 = 0xD000000000000024;
  *((void *)v202 + 1) = 0x80000001002B9B20;
  *(void *)&v201[*(void *)((swift_isaMask & *(void *)v201) + 0x70)] = v7;
  v201[*(void *)((swift_isaMask & *(void *)v201) + 0x78)] = 0;
  v939.receiver = v201;
  v939.super_class = v194;
  id v203 = v200;
  v33[61] = [super init];
  v204 = (char *)objc_allocWithZone(v194);
  *(void *)&v204[*(void *)((swift_isaMask & *(void *)v204) + 0x80)] = 0;
  v204[*(void *)((swift_isaMask & *(void *)v204) + 0x60)] = 0;
  v205 = &v204[*(void *)((swift_isaMask & *(void *)v204) + 0x68)];
  unint64_t v771 = 0xD00000000000001CLL;
  *(void *)v205 = 0xD00000000000001CLL;
  *((void *)v205 + 1) = 0x80000001002B9B50;
  *(void *)&v204[*(void *)((swift_isaMask & *(void *)v204) + 0x70)] = v7;
  v204[*(void *)((swift_isaMask & *(void *)v204) + 0x78)] = 0;
  v938.receiver = v204;
  v938.super_class = v194;
  id v206 = v203;
  v33[62] = [super init];
  v207 = (objc_class *)sub_10000A38C((uint64_t *)&unk_10035B4E8);
  v208 = (char *)objc_allocWithZone(v207);
  *(void *)&v208[*(void *)((swift_isaMask & *(void *)v208) + 0x80)] = 0;
  v208[*(void *)((swift_isaMask & *(void *)v208) + 0x60)] = 0;
  v209 = &v208[*(void *)((swift_isaMask & *(void *)v208) + 0x68)];
  *(void *)v209 = 0x65756E69746E6F63;
  *((void *)v209 + 1) = 0xEF72656767697254;
  *(void *)&v208[*(void *)((swift_isaMask & *(void *)v208) + 0x70)] = v7;
  v208[*(void *)((swift_isaMask & *(void *)v208) + 0x78)] = 0;
  v937.receiver = v208;
  v937.super_class = v207;
  id v210 = v206;
  v33[63] = [super init];
  v211 = v776;
  v212 = (char *)objc_allocWithZone(v776);
  *(void *)&v212[*(void *)((swift_isaMask & *(void *)v212) + 0x80)] = 0;
  *(void *)&v212[*(void *)((swift_isaMask & *(void *)v212) + 0x60)] = 28;
  v213 = &v212[*(void *)((swift_isaMask & *(void *)v212) + 0x68)];
  unint64_t v764 = 0xD000000000000021;
  *(void *)v213 = 0xD000000000000021;
  *((void *)v213 + 1) = 0x80000001002B9B70;
  *(void *)&v212[*(void *)((swift_isaMask & *(void *)v212) + 0x70)] = v7;
  v212[*(void *)((swift_isaMask & *(void *)v212) + 0x78)] = 0;
  v936.receiver = v212;
  v936.super_class = v211;
  id v214 = v210;
  v33[64] = [super init];
  unint64_t v215 = sub_100268910((uint64_t)&_swiftEmptyArrayStorage);
  v216 = (objc_class *)sub_10000A38C((uint64_t *)&unk_10035B5E0);
  v217 = (char *)objc_allocWithZone(v216);
  *(void *)&v217[*(void *)((swift_isaMask & *(void *)v217) + 0x80)] = 0;
  *(void *)&v217[*(void *)((swift_isaMask & *(void *)v217) + 0x60)] = v215;
  v218 = &v217[*(void *)((swift_isaMask & *(void *)v217) + 0x68)];
  *(void *)v218 = 0x6761735564726163;
  *((void *)v218 + 1) = 0xEA00000000007365;
  *(void *)&v217[*(void *)((swift_isaMask & *(void *)v217) + 0x70)] = v7;
  v217[*(void *)((swift_isaMask & *(void *)v217) + 0x78)] = 0;
  v935.receiver = v217;
  v935.super_class = v216;
  id v219 = v214;
  v33[65] = [super init];
  unint64_t v220 = sub_100268910((uint64_t)&_swiftEmptyArrayStorage);
  v221 = (char *)objc_allocWithZone(v216);
  *(void *)&v221[*(void *)((swift_isaMask & *(void *)v221) + 0x80)] = 0;
  *(void *)&v221[*(void *)((swift_isaMask & *(void *)v221) + 0x60)] = v220;
  v222 = &v221[*(void *)((swift_isaMask & *(void *)v221) + 0x68)];
  *(void *)v222 = 0x67617355746E6968;
  *((void *)v222 + 1) = 0xEA00000000007365;
  *(void *)&v221[*(void *)((swift_isaMask & *(void *)v221) + 0x70)] = v7;
  v221[*(void *)((swift_isaMask & *(void *)v221) + 0x78)] = 0;
  v934.receiver = v221;
  v934.super_class = v216;
  id v223 = v219;
  v33[66] = [super init];
  unint64_t v224 = sub_100268910((uint64_t)&_swiftEmptyArrayStorage);
  v225 = (char *)objc_allocWithZone(v216);
  *(void *)&v225[*(void *)((swift_isaMask & *(void *)v225) + 0x80)] = 0;
  *(void *)&v225[*(void *)((swift_isaMask & *(void *)v225) + 0x60)] = v224;
  v226 = &v225[*(void *)((swift_isaMask & *(void *)v225) + 0x68)];
  *(void *)v226 = 0xD000000000000014;
  *((void *)v226 + 1) = 0x80000001002B9BA0;
  *(void *)&v225[*(void *)((swift_isaMask & *(void *)v225) + 0x70)] = v7;
  v225[*(void *)((swift_isaMask & *(void *)v225) + 0x78)] = 0;
  v933.receiver = v225;
  v933.super_class = v216;
  id v227 = v223;
  v33[67] = [super init];
  unint64_t v228 = sub_100268910((uint64_t)&_swiftEmptyArrayStorage);
  v229 = (char *)objc_allocWithZone(v216);
  *(void *)&v229[*(void *)((swift_isaMask & *(void *)v229) + 0x80)] = 0;
  *(void *)&v229[*(void *)((swift_isaMask & *(void *)v229) + 0x60)] = v228;
  v230 = &v229[*(void *)((swift_isaMask & *(void *)v229) + 0x68)];
  strcpy(v230, "transferUsages");
  v230[15] = -18;
  *(void *)&v229[*(void *)((swift_isaMask & *(void *)v229) + 0x70)] = v7;
  v229[*(void *)((swift_isaMask & *(void *)v229) + 0x78)] = 0;
  v932.receiver = v229;
  v932.super_class = v216;
  id v231 = v227;
  v33[68] = [super init];
  v232 = v785;
  v233 = (char *)objc_allocWithZone(v785);
  *(void *)&v233[*(void *)((swift_isaMask & *(void *)v233) + 0x80)] = 0;
  v233[*(void *)((swift_isaMask & *(void *)v233) + 0x60)] = 0;
  v234 = (unint64_t *)&v233[*(void *)((swift_isaMask & *(void *)v233) + 0x68)];
  unint64_t v235 = v787;
  unint64_t *v234 = v787;
  v234[1] = 0x80000001002B9BC0;
  *(void *)&v233[*(void *)((swift_isaMask & *(void *)v233) + 0x70)] = v7;
  v233[*(void *)((swift_isaMask & *(void *)v233) + 0x78)] = 0;
  v931.receiver = v233;
  v931.super_class = v232;
  id v236 = v231;
  v33[69] = [super init];
  v237 = (char *)objc_allocWithZone(v232);
  *(void *)&v237[*(void *)((swift_isaMask & *(void *)v237) + 0x80)] = 0;
  v237[*(void *)((swift_isaMask & *(void *)v237) + 0x60)] = 0;
  v238 = &v237[*(void *)((swift_isaMask & *(void *)v237) + 0x68)];
  *(void *)v238 = v235;
  *((void *)v238 + 1) = 0x80000001002B9BE0;
  *(void *)&v237[*(void *)((swift_isaMask & *(void *)v237) + 0x70)] = v7;
  v237[*(void *)((swift_isaMask & *(void *)v237) + 0x78)] = 0;
  v930.receiver = v237;
  v930.super_class = v232;
  id v239 = v236;
  v33[70] = [super init];
  v240 = (char *)objc_allocWithZone(v232);
  *(void *)&v240[*(void *)((swift_isaMask & *(void *)v240) + 0x80)] = 0;
  v240[*(void *)((swift_isaMask & *(void *)v240) + 0x60)] = 0;
  v241 = (unint64_t *)&v240[*(void *)((swift_isaMask & *(void *)v240) + 0x68)];
  unint64_t *v241 = v782;
  v241[1] = 0x80000001002B9C00;
  *(void *)&v240[*(void *)((swift_isaMask & *(void *)v240) + 0x70)] = v7;
  v240[*(void *)((swift_isaMask & *(void *)v240) + 0x78)] = 0;
  v929.receiver = v240;
  v929.super_class = v232;
  id v242 = v239;
  v33[71] = [super init];
  v243 = (char *)objc_allocWithZone(v232);
  *(void *)&v243[*(void *)((swift_isaMask & *(void *)v243) + 0x80)] = 0;
  v243[*(void *)((swift_isaMask & *(void *)v243) + 0x60)] = 0;
  v244 = (unint64_t *)&v243[*(void *)((swift_isaMask & *(void *)v243) + 0x68)];
  unint64_t *v244 = v783;
  v244[1] = 0x80000001002B9C20;
  *(void *)&v243[*(void *)((swift_isaMask & *(void *)v243) + 0x70)] = v7;
  v243[*(void *)((swift_isaMask & *(void *)v243) + 0x78)] = 0;
  v928.receiver = v243;
  v928.super_class = v232;
  id v245 = v242;
  v33[72] = [super init];
  uint64_t v246 = type metadata accessor for Date();
  v247 = *(void (**)(void, void, void, void))(*(void *)(v246 - 8) + 56);
  Class v248 = v769;
  v247(v769, 1, 1, v246);
  v33[73] = sub_1000A2070((uint64_t)v248);
  v247(v248, 1, 1, v246);
  v33[74] = sub_1000A224C((uint64_t)v248);
  v247(v248, 1, 1, v246);
  v33[75] = sub_1000A2428((uint64_t)v248);
  v247(v248, 1, 1, v246);
  v33[76] = sub_1000A2604((uint64_t)v248);
  v249 = v786;
  v250 = (char *)objc_allocWithZone(v786);
  *(void *)&v250[*(void *)((swift_isaMask & *(void *)v250) + 0x80)] = 0;
  *(void *)&v250[*(void *)((swift_isaMask & *(void *)v250) + 0x60)] = 0x40F5180000000000;
  v251 = &v250[*(void *)((swift_isaMask & *(void *)v250) + 0x68)];
  *(void *)v251 = v770;
  *((void *)v251 + 1) = 0x80000001002B9C40;
  *(void *)&v250[*(void *)((swift_isaMask & *(void *)v250) + 0x70)] = v7;
  v250[*(void *)((swift_isaMask & *(void *)v250) + 0x78)] = 0;
  v927.receiver = v250;
  v927.super_class = v249;
  id v252 = v245;
  v33[77] = [super init];
  v247(v248, 1, 1, v246);
  v33[78] = sub_1000A27E0((uint64_t)v248);
  v253 = v33;
  v254 = v776;
  v255 = (char *)objc_allocWithZone(v776);
  *(void *)&v255[*(void *)((swift_isaMask & *(void *)v255) + 0x80)] = 0;
  *(void *)&v255[*(void *)((swift_isaMask & *(void *)v255) + 0x60)] = 0;
  v256 = (unint64_t *)&v255[*(void *)((swift_isaMask & *(void *)v255) + 0x68)];
  unint64_t *v256 = v774;
  v256[1] = 0x80000001002B9C60;
  v257 = v7;
  *(void *)&v255[*(void *)((swift_isaMask & *(void *)v255) + 0x70)] = v7;
  v255[*(void *)((swift_isaMask & *(void *)v255) + 0x78)] = 0;
  v926.receiver = v255;
  v926.super_class = v254;
  id v258 = v252;
  v253[79] = [super init];
  v259 = v767;
  v260 = (char *)objc_allocWithZone(v767);
  *(void *)&v260[*(void *)((swift_isaMask & *(void *)v260) + 0x80)] = 0;
  v260[*(void *)((swift_isaMask & *(void *)v260) + 0x60)] = 1;
  v261 = (unint64_t *)&v260[*(void *)((swift_isaMask & *(void *)v260) + 0x68)];
  unint64_t *v261 = v772;
  v261[1] = 0x80000001002B9C80;
  *(void *)&v260[*(void *)((swift_isaMask & *(void *)v260) + 0x70)] = v7;
  v260[*(void *)((swift_isaMask & *(void *)v260) + 0x78)] = 0;
  v925.receiver = v260;
  v925.super_class = v259;
  id v262 = v258;
  v253[80] = [super init];
  v263 = v786;
  v264 = (char *)objc_allocWithZone(v786);
  *(void *)&v264[*(void *)((swift_isaMask & *(void *)v264) + 0x80)] = 0;
  *(void *)&v264[*(void *)((swift_isaMask & *(void *)v264) + 0x60)] = 0xBFF0000000000000;
  v265 = (unint64_t *)&v264[*(void *)((swift_isaMask & *(void *)v264) + 0x68)];
  unint64_t *v265 = v781;
  v265[1] = 0x80000001002B9CA0;
  *(void *)&v264[*(void *)((swift_isaMask & *(void *)v264) + 0x70)] = v7;
  v264[*(void *)((swift_isaMask & *(void *)v264) + 0x78)] = 0;
  v924.receiver = v264;
  v924.super_class = v263;
  id v266 = v262;
  v253[81] = [super init];
  v267 = (char *)objc_allocWithZone(v263);
  *(void *)&v267[*(void *)((swift_isaMask & *(void *)v267) + 0x80)] = 0;
  *(void *)&v267[*(void *)((swift_isaMask & *(void *)v267) + 0x60)] = 0xBFF0000000000000;
  v268 = &v267[*(void *)((swift_isaMask & *(void *)v267) + 0x68)];
  *(void *)v268 = 0xD000000000000014;
  *((void *)v268 + 1) = 0x80000001002B9CC0;
  *(void *)&v267[*(void *)((swift_isaMask & *(void *)v267) + 0x70)] = v7;
  v267[*(void *)((swift_isaMask & *(void *)v267) + 0x78)] = 0;
  v923.receiver = v267;
  v923.super_class = v263;
  id v269 = v266;
  v253[82] = [super init];
  v270 = (objc_class *)sub_10000A38C((uint64_t *)&unk_100363358);
  v271 = (char *)objc_allocWithZone(v270);
  *(void *)&v271[*(void *)((swift_isaMask & *(void *)v271) + 0x80)] = 0;
  v271[*(void *)((swift_isaMask & *(void *)v271) + 0x60)] = 0;
  v272 = (unint64_t *)&v271[*(void *)((swift_isaMask & *(void *)v271) + 0x68)];
  unint64_t v273 = v775;
  unint64_t *v272 = v775;
  v272[1] = 0x80000001002B9CE0;
  *(void *)&v271[*(void *)((swift_isaMask & *(void *)v271) + 0x70)] = v257;
  v271[*(void *)((swift_isaMask & *(void *)v271) + 0x78)] = 0;
  v922.receiver = v271;
  v922.super_class = v270;
  id v274 = v269;
  v253[83] = [super init];
  v275 = (char *)objc_allocWithZone(v270);
  *(void *)&v275[*(void *)((swift_isaMask & *(void *)v275) + 0x80)] = 0;
  v275[*(void *)((swift_isaMask & *(void *)v275) + 0x60)] = 1;
  v276 = (unint64_t *)&v275[*(void *)((swift_isaMask & *(void *)v275) + 0x68)];
  unint64_t *v276 = v779;
  v276[1] = 0x80000001002B9D00;
  *(void *)&v275[*(void *)((swift_isaMask & *(void *)v275) + 0x70)] = v257;
  v275[*(void *)((swift_isaMask & *(void *)v275) + 0x78)] = 0;
  v921.receiver = v275;
  v921.super_class = v270;
  id v277 = v274;
  v253[84] = [super init];
  v278 = (char *)objc_allocWithZone(v270);
  *(void *)&v278[*(void *)((swift_isaMask & *(void *)v278) + 0x80)] = 0;
  v278[*(void *)((swift_isaMask & *(void *)v278) + 0x60)] = 2;
  v279 = &v278[*(void *)((swift_isaMask & *(void *)v278) + 0x68)];
  *(void *)v279 = v273;
  *((void *)v279 + 1) = 0x80000001002B9D20;
  *(void *)&v278[*(void *)((swift_isaMask & *(void *)v278) + 0x70)] = v257;
  v278[*(void *)((swift_isaMask & *(void *)v278) + 0x78)] = 0;
  v920.receiver = v278;
  v920.super_class = v270;
  id v280 = v277;
  v253[85] = [super init];
  v281 = (objc_class *)sub_10000A38C((uint64_t *)&unk_10035B4B8);
  v282 = (char *)objc_allocWithZone(v281);
  *(void *)&v282[*(void *)((swift_isaMask & *(void *)v282) + 0x80)] = 0;
  v283 = &v282[*(void *)((swift_isaMask & *(void *)v282) + 0x60)];
  *(void *)v283 = 0;
  *((void *)v283 + 1) = 0;
  v284 = (unint64_t *)&v282[*(void *)((swift_isaMask & *(void *)v282) + 0x68)];
  unint64_t *v284 = v784;
  v284[1] = 0x80000001002B9D40;
  *(void *)&v282[*(void *)((swift_isaMask & *(void *)v282) + 0x70)] = v257;
  v282[*(void *)((swift_isaMask & *(void *)v282) + 0x78)] = 0;
  v919.receiver = v282;
  v919.super_class = v281;
  id v285 = v280;
  v253[86] = [super init];
  v286 = (char *)objc_allocWithZone(v281);
  *(void *)&v286[*(void *)((swift_isaMask & *(void *)v286) + 0x80)] = 0;
  v287 = &v286[*(void *)((swift_isaMask & *(void *)v286) + 0x60)];
  *(void *)v287 = 0;
  *((void *)v287 + 1) = 0;
  v288 = (unint64_t *)&v286[*(void *)((swift_isaMask & *(void *)v286) + 0x68)];
  unint64_t *v288 = v787;
  v288[1] = 0x80000001002B9D60;
  *(void *)&v286[*(void *)((swift_isaMask & *(void *)v286) + 0x70)] = v257;
  v289 = v257;
  v286[*(void *)((swift_isaMask & *(void *)v286) + 0x78)] = 0;
  v918.receiver = v286;
  Class v769 = v281;
  v918.super_class = v281;
  id v290 = v285;
  v253[87] = [super init];
  v291 = (char *)objc_allocWithZone(v281);
  *(void *)&v291[*(void *)((swift_isaMask & *(void *)v291) + 0x80)] = 0;
  v292 = &v291[*(void *)((swift_isaMask & *(void *)v291) + 0x60)];
  *(void *)v292 = 0;
  *((void *)v292 + 1) = 0;
  v293 = &v291[*(void *)((swift_isaMask & *(void *)v291) + 0x68)];
  *(void *)v293 = v273;
  *((void *)v293 + 1) = 0x80000001002B9D80;
  *(void *)&v291[*(void *)((swift_isaMask & *(void *)v291) + 0x70)] = v257;
  v291[*(void *)((swift_isaMask & *(void *)v291) + 0x78)] = 0;
  v917.receiver = v291;
  v917.super_class = v281;
  id v294 = v290;
  v253[88] = [super init];
  v295 = v785;
  v296 = (char *)objc_allocWithZone(v785);
  *(void *)&v296[*(void *)((swift_isaMask & *(void *)v296) + 0x80)] = 0;
  v296[*(void *)((swift_isaMask & *(void *)v296) + 0x60)] = 0;
  v297 = &v296[*(void *)((swift_isaMask & *(void *)v296) + 0x68)];
  *(void *)v297 = v768;
  *((void *)v297 + 1) = 0x80000001002B9DA0;
  *(void *)&v296[*(void *)((swift_isaMask & *(void *)v296) + 0x70)] = v257;
  v296[*(void *)((swift_isaMask & *(void *)v296) + 0x78)] = 0;
  v916.receiver = v296;
  v916.super_class = v295;
  id v298 = v294;
  v253[89] = [super init];
  v299 = (char *)objc_allocWithZone(v295);
  *(void *)&v299[*(void *)((swift_isaMask & *(void *)v299) + 0x80)] = 0;
  v299[*(void *)((swift_isaMask & *(void *)v299) + 0x60)] = 0;
  v300 = (unint64_t *)&v299[*(void *)((swift_isaMask & *(void *)v299) + 0x68)];
  unint64_t *v300 = v771;
  v300[1] = 0x80000001002B9DD0;
  *(void *)&v299[*(void *)((swift_isaMask & *(void *)v299) + 0x70)] = v257;
  v299[*(void *)((swift_isaMask & *(void *)v299) + 0x78)] = 0;
  v915.receiver = v299;
  v915.super_class = v295;
  id v301 = v298;
  v253[90] = [super init];
  v302 = (char *)objc_allocWithZone(v295);
  *(void *)&v302[*(void *)((swift_isaMask & *(void *)v302) + 0x80)] = 0;
  v302[*(void *)((swift_isaMask & *(void *)v302) + 0x60)] = 0;
  v303 = &v302[*(void *)((swift_isaMask & *(void *)v302) + 0x68)];
  *(void *)v303 = v770;
  *((void *)v303 + 1) = 0x80000001002B9DF0;
  *(void *)&v302[*(void *)((swift_isaMask & *(void *)v302) + 0x70)] = v257;
  v302[*(void *)((swift_isaMask & *(void *)v302) + 0x78)] = 0;
  v914.receiver = v302;
  v914.super_class = v295;
  id v304 = v301;
  v253[91] = [super init];
  v305 = (char *)objc_allocWithZone(v295);
  *(void *)&v305[*(void *)((swift_isaMask & *(void *)v305) + 0x80)] = 0;
  v305[*(void *)((swift_isaMask & *(void *)v305) + 0x60)] = 0;
  v306 = (unint64_t *)&v305[*(void *)((swift_isaMask & *(void *)v305) + 0x68)];
  unint64_t *v306 = v784;
  v306[1] = 0x80000001002B9E10;
  *(void *)&v305[*(void *)((swift_isaMask & *(void *)v305) + 0x70)] = v257;
  v305[*(void *)((swift_isaMask & *(void *)v305) + 0x78)] = 0;
  v913.receiver = v305;
  v913.super_class = v295;
  id v307 = v304;
  v253[92] = [super init];
  v308 = (char *)objc_allocWithZone(v295);
  *(void *)&v308[*(void *)((swift_isaMask & *(void *)v308) + 0x80)] = 0;
  v308[*(void *)((swift_isaMask & *(void *)v308) + 0x60)] = 0;
  v309 = &v308[*(void *)((swift_isaMask & *(void *)v308) + 0x68)];
  strcpy(v309, "skipHomeCard");
  v309[13] = 0;
  *((_WORD *)v309 + 7) = -5120;
  *(void *)&v308[*(void *)((swift_isaMask & *(void *)v308) + 0x70)] = v257;
  v308[*(void *)((swift_isaMask & *(void *)v308) + 0x78)] = 0;
  v912.receiver = v308;
  v912.super_class = v295;
  id v310 = v307;
  v253[93] = [super init];
  v311 = v786;
  v312 = (char *)objc_allocWithZone(v786);
  *(void *)&v312[*(void *)((swift_isaMask & *(void *)v312) + 0x80)] = 0;
  *(void *)&v312[*(void *)((swift_isaMask & *(void *)v312) + 0x60)] = 0x4020000000000000;
  v313 = (unint64_t *)&v312[*(void *)((swift_isaMask & *(void *)v312) + 0x68)];
  unint64_t v314 = v781;
  unint64_t *v313 = v781;
  v313[1] = 0x80000001002B9E30;
  *(void *)&v312[*(void *)((swift_isaMask & *(void *)v312) + 0x70)] = v257;
  v312[*(void *)((swift_isaMask & *(void *)v312) + 0x78)] = 0;
  v911.receiver = v312;
  v911.super_class = v311;
  id v315 = v310;
  v253[94] = [super init];
  v316 = (char *)objc_allocWithZone(v295);
  *(void *)&v316[*(void *)((swift_isaMask & *(void *)v316) + 0x80)] = 0;
  v316[*(void *)((swift_isaMask & *(void *)v316) + 0x60)] = 0;
  v317 = &v316[*(void *)((swift_isaMask & *(void *)v316) + 0x68)];
  *(void *)v317 = v314;
  *((void *)v317 + 1) = 0x80000001002B9E50;
  *(void *)&v316[*(void *)((swift_isaMask & *(void *)v316) + 0x70)] = v257;
  v316[*(void *)((swift_isaMask & *(void *)v316) + 0x78)] = 0;
  v910.receiver = v316;
  v910.super_class = v295;
  id v318 = v315;
  v253[95] = [super init];
  v319 = (char *)objc_allocWithZone(v295);
  *(void *)&v319[*(void *)((swift_isaMask & *(void *)v319) + 0x80)] = 0;
  v319[*(void *)((swift_isaMask & *(void *)v319) + 0x60)] = 0;
  v320 = (unint64_t *)&v319[*(void *)((swift_isaMask & *(void *)v319) + 0x68)];
  unint64_t *v320 = v780;
  v320[1] = 0x80000001002B9E70;
  *(void *)&v319[*(void *)((swift_isaMask & *(void *)v319) + 0x70)] = v257;
  v319[*(void *)((swift_isaMask & *(void *)v319) + 0x78)] = 0;
  v909.receiver = v319;
  v909.super_class = v295;
  id v321 = v318;
  v253[96] = [super init];
  v322 = (char *)objc_allocWithZone(v311);
  *(void *)&v322[*(void *)((swift_isaMask & *(void *)v322) + 0x80)] = 0;
  *(void *)&v322[*(void *)((swift_isaMask & *(void *)v322) + 0x60)] = 0x3FE0000000000000;
  v323 = &v322[*(void *)((swift_isaMask & *(void *)v322) + 0x68)];
  *(void *)v323 = v773;
  *((void *)v323 + 1) = 0x80000001002B9E90;
  *(void *)&v322[*(void *)((swift_isaMask & *(void *)v322) + 0x70)] = v257;
  v322[*(void *)((swift_isaMask & *(void *)v322) + 0x78)] = 0;
  v908.receiver = v322;
  v908.super_class = v311;
  id v324 = v321;
  v253[97] = [super init];
  v325 = (objc_class *)sub_10000A38C((uint64_t *)&unk_10035B548);
  v326 = (char *)objc_allocWithZone(v325);
  *(void *)&v326[*(void *)((swift_isaMask & *(void *)v326) + 0x80)] = 0;
  *(void *)&v326[*(void *)((swift_isaMask & *(void *)v326) + 0x60)] = 0x3FB999999999999ALL;
  v327 = (unint64_t *)&v326[*(void *)((swift_isaMask & *(void *)v326) + 0x68)];
  unint64_t *v327 = v771;
  v327[1] = 0x80000001002B9EB0;
  *(void *)&v326[*(void *)((swift_isaMask & *(void *)v326) + 0x70)] = v289;
  v326[*(void *)((swift_isaMask & *(void *)v326) + 0x78)] = 0;
  v907.receiver = v326;
  v907.super_class = v325;
  id v328 = v324;
  v253[98] = [super init];
  v329 = (char *)objc_allocWithZone(v325);
  *(void *)&v329[*(void *)((swift_isaMask & *(void *)v329) + 0x80)] = 0;
  *(void *)&v329[*(void *)((swift_isaMask & *(void *)v329) + 0x60)] = 0x3FB999999999999ALL;
  v330 = (unint64_t *)&v329[*(void *)((swift_isaMask & *(void *)v329) + 0x68)];
  unint64_t *v330 = v774;
  v330[1] = 0x80000001002B9ED0;
  *(void *)&v329[*(void *)((swift_isaMask & *(void *)v329) + 0x70)] = v289;
  v331 = v289;
  v329[*(void *)((swift_isaMask & *(void *)v329) + 0x78)] = 0;
  v906.receiver = v329;
  v906.super_class = v325;
  id v332 = v328;
  v253[99] = [super init];
  v333 = (char *)objc_allocWithZone(v325);
  *(void *)&v333[*(void *)((swift_isaMask & *(void *)v333) + 0x80)] = 0;
  *(void *)&v333[*(void *)((swift_isaMask & *(void *)v333) + 0x60)] = 0x3FF3333333333333;
  v334 = (unint64_t *)&v333[*(void *)((swift_isaMask & *(void *)v333) + 0x68)];
  unint64_t v335 = v766;
  unint64_t *v334 = v766;
  v334[1] = 0x80000001002B9EF0;
  *(void *)&v333[*(void *)((swift_isaMask & *(void *)v333) + 0x70)] = v289;
  v333[*(void *)((swift_isaMask & *(void *)v333) + 0x78)] = 0;
  v905.receiver = v333;
  v905.super_class = v325;
  id v336 = v332;
  v253[100] = [super init];
  v337 = (char *)objc_allocWithZone(v325);
  *(void *)&v337[*(void *)((swift_isaMask & *(void *)v337) + 0x80)] = 0;
  *(void *)&v337[*(void *)((swift_isaMask & *(void *)v337) + 0x60)] = 0xBFF4000000000000;
  v338 = &v337[*(void *)((swift_isaMask & *(void *)v337) + 0x68)];
  *(void *)v338 = 0xD000000000000023;
  *((void *)v338 + 1) = 0x80000001002B9F20;
  *(void *)&v337[*(void *)((swift_isaMask & *(void *)v337) + 0x70)] = v289;
  v337[*(void *)((swift_isaMask & *(void *)v337) + 0x78)] = 0;
  v904.receiver = v337;
  v904.super_class = v325;
  id v339 = v336;
  v253[101] = [super init];
  v340 = (char *)objc_allocWithZone(v325);
  *(void *)&v340[*(void *)((swift_isaMask & *(void *)v340) + 0x80)] = 0;
  *(void *)&v340[*(void *)((swift_isaMask & *(void *)v340) + 0x60)] = 0x4039000000000000;
  v341 = (unint64_t *)&v340[*(void *)((swift_isaMask & *(void *)v340) + 0x68)];
  unint64_t *v341 = v764;
  v341[1] = 0x80000001002B9F50;
  *(void *)&v340[*(void *)((swift_isaMask & *(void *)v340) + 0x70)] = v289;
  v340[*(void *)((swift_isaMask & *(void *)v340) + 0x78)] = 0;
  v903.receiver = v340;
  v903.super_class = v325;
  id v342 = v339;
  v253[102] = [super init];
  v343 = (char *)objc_allocWithZone(v325);
  *(void *)&v343[*(void *)((swift_isaMask & *(void *)v343) + 0x80)] = 0;
  *(void *)&v343[*(void *)((swift_isaMask & *(void *)v343) + 0x60)] = 0x4039000000000000;
  v344 = &v343[*(void *)((swift_isaMask & *(void *)v343) + 0x68)];
  *(void *)v344 = v335;
  *((void *)v344 + 1) = 0x80000001002B9F80;
  *(void *)&v343[*(void *)((swift_isaMask & *(void *)v343) + 0x70)] = v289;
  v343[*(void *)((swift_isaMask & *(void *)v343) + 0x78)] = 0;
  v902.receiver = v343;
  v902.super_class = v325;
  id v345 = v342;
  v253[103] = [super init];
  v346 = (char *)objc_allocWithZone(v325);
  *(void *)&v346[*(void *)((swift_isaMask & *(void *)v346) + 0x80)] = 0;
  *(void *)&v346[*(void *)((swift_isaMask & *(void *)v346) + 0x60)] = 0;
  v347 = (unint64_t *)&v346[*(void *)((swift_isaMask & *(void *)v346) + 0x68)];
  unint64_t *v347 = v777;
  v347[1] = 0x80000001002B9FB0;
  *(void *)&v346[*(void *)((swift_isaMask & *(void *)v346) + 0x70)] = v289;
  v346[*(void *)((swift_isaMask & *(void *)v346) + 0x78)] = 0;
  v901.receiver = v346;
  v901.super_class = v325;
  id v348 = v345;
  v253[104] = [super init];
  v349 = (objc_class *)sub_10000A38C((uint64_t *)&unk_100363360);
  v350 = (char *)objc_allocWithZone(v349);
  *(void *)&v350[*(void *)((swift_isaMask & *(void *)v350) + 0x80)] = 0;
  v350[*(void *)((swift_isaMask & *(void *)v350) + 0x60)] = 1;
  v351 = (unint64_t *)&v350[*(void *)((swift_isaMask & *(void *)v350) + 0x68)];
  unint64_t *v351 = v778;
  v351[1] = 0x80000001002B9FD0;
  *(void *)&v350[*(void *)((swift_isaMask & *(void *)v350) + 0x70)] = v289;
  v350[*(void *)((swift_isaMask & *(void *)v350) + 0x78)] = 0;
  v900.receiver = v350;
  v900.super_class = v349;
  id v352 = v348;
  v253[105] = [super init];
  v353 = v776;
  v354 = (char *)objc_allocWithZone(v776);
  *(void *)&v354[*(void *)((swift_isaMask & *(void *)v354) + 0x80)] = 0;
  *(void *)&v354[*(void *)((swift_isaMask & *(void *)v354) + 0x60)] = 11;
  v355 = &v354[*(void *)((swift_isaMask & *(void *)v354) + 0x68)];
  strcpy(v355, "cardBlurStyle");
  *((_WORD *)v355 + 7) = -4864;
  *(void *)&v354[*(void *)((swift_isaMask & *(void *)v354) + 0x70)] = v289;
  v354[*(void *)((swift_isaMask & *(void *)v354) + 0x78)] = 0;
  v899.receiver = v354;
  v899.super_class = v353;
  id v356 = v352;
  v253[106] = [super init];
  v357 = (char *)objc_allocWithZone(v325);
  *(void *)&v357[*(void *)((swift_isaMask & *(void *)v357) + 0x80)] = 0;
  *(void *)&v357[*(void *)((swift_isaMask & *(void *)v357) + 0x60)] = 0x4030000000000000;
  v358 = &v357[*(void *)((swift_isaMask & *(void *)v357) + 0x68)];
  strcpy(v358, "cardBlurRadius");
  v358[15] = -18;
  *(void *)&v357[*(void *)((swift_isaMask & *(void *)v357) + 0x70)] = v289;
  v357[*(void *)((swift_isaMask & *(void *)v357) + 0x78)] = 0;
  v898.receiver = v357;
  v898.super_class = v325;
  id v359 = v356;
  v253[107] = [super init];
  v360 = v253;
  v361 = v785;
  v362 = (char *)objc_allocWithZone(v785);
  *(void *)&v362[*(void *)((swift_isaMask & *(void *)v362) + 0x80)] = 0;
  v362[*(void *)((swift_isaMask & *(void *)v362) + 0x60)] = 0;
  v363 = (unint64_t *)&v362[*(void *)((swift_isaMask & *(void *)v362) + 0x68)];
  unint64_t *v363 = v779;
  v363[1] = 0x80000001002B9FF0;
  *(void *)&v362[*(void *)((swift_isaMask & *(void *)v362) + 0x70)] = v331;
  v362[*(void *)((swift_isaMask & *(void *)v362) + 0x78)] = 0;
  v897.receiver = v362;
  v897.super_class = v361;
  id v364 = v359;
  v360[108] = [super init];
  v365 = (char *)objc_allocWithZone(v325);
  *(void *)&v365[*(void *)((swift_isaMask & *(void *)v365) + 0x80)] = 0;
  *(void *)&v365[*(void *)((swift_isaMask & *(void *)v365) + 0x60)] = 0x4034000000000000;
  v366 = &v365[*(void *)((swift_isaMask & *(void *)v365) + 0x68)];
  *(void *)v366 = 0xD000000000000014;
  *((void *)v366 + 1) = 0x80000001002BA010;
  *(void *)&v365[*(void *)((swift_isaMask & *(void *)v365) + 0x70)] = v331;
  v365[*(void *)((swift_isaMask & *(void *)v365) + 0x78)] = 0;
  v896.receiver = v365;
  v896.super_class = v325;
  id v367 = v364;
  v360[109] = [super init];
  Class v768 = v325;
  v368 = (char *)objc_allocWithZone(v325);
  *(void *)&v368[*(void *)((swift_isaMask & *(void *)v368) + 0x80)] = 0;
  *(void *)&v368[*(void *)((swift_isaMask & *(void *)v368) + 0x60)] = 0x4034000000000000;
  v369 = (unint64_t *)&v368[*(void *)((swift_isaMask & *(void *)v368) + 0x68)];
  unint64_t *v369 = v787;
  v369[1] = 0x80000001002BA030;
  *(void *)&v368[*(void *)((swift_isaMask & *(void *)v368) + 0x70)] = v331;
  v370 = v331;
  v368[*(void *)((swift_isaMask & *(void *)v368) + 0x78)] = 0;
  v895.receiver = v368;
  v895.super_class = v325;
  id v371 = v367;
  v372 = v360;
  v360[110] = [super init];
  v373 = (char *)objc_allocWithZone(v361);
  *(void *)&v373[*(void *)((swift_isaMask & *(void *)v373) + 0x80)] = 0;
  v373[*(void *)((swift_isaMask & *(void *)v373) + 0x60)] = 1;
  v374 = (unint64_t *)&v373[*(void *)((swift_isaMask & *(void *)v373) + 0x68)];
  unint64_t *v374 = v782;
  v374[1] = 0x80000001002BA050;
  v375 = v370;
  *(void *)&v373[*(void *)((swift_isaMask & *(void *)v373) + 0x70)] = v370;
  v373[*(void *)((swift_isaMask & *(void *)v373) + 0x78)] = 0;
  v894.receiver = v373;
  v894.super_class = v361;
  id v376 = v371;
  v372[111] = [super init];
  v377 = v372;
  v378 = v786;
  v379 = (char *)objc_allocWithZone(v786);
  *(void *)&v379[*(void *)((swift_isaMask & *(void *)v379) + 0x80)] = 0;
  *(void *)&v379[*(void *)((swift_isaMask & *(void *)v379) + 0x60)] = 0x3FD3333333333333;
  v380 = (unint64_t *)&v379[*(void *)((swift_isaMask & *(void *)v379) + 0x68)];
  unint64_t *v380 = v783;
  v380[1] = 0x80000001002BA070;
  *(void *)&v379[*(void *)((swift_isaMask & *(void *)v379) + 0x70)] = v375;
  v379[*(void *)((swift_isaMask & *(void *)v379) + 0x78)] = 0;
  v893.receiver = v379;
  v893.super_class = v378;
  id v381 = v376;
  v372[112] = [super init];
  v382 = (char *)objc_allocWithZone(v378);
  *(void *)&v382[*(void *)((swift_isaMask & *(void *)v382) + 0x80)] = 0;
  *(void *)&v382[*(void *)((swift_isaMask & *(void *)v382) + 0x60)] = 0x3FF4CCCCCCCCCCCDLL;
  v383 = &v382[*(void *)((swift_isaMask & *(void *)v382) + 0x68)];
  *(void *)v383 = 0x617078456C6C6970;
  *((void *)v383 + 1) = 0xEF656C616353646ELL;
  *(void *)&v382[*(void *)((swift_isaMask & *(void *)v382) + 0x70)] = v375;
  v382[*(void *)((swift_isaMask & *(void *)v382) + 0x78)] = 0;
  v892.receiver = v382;
  v892.super_class = v378;
  id v384 = v381;
  v377[113] = [super init];
  v385 = (objc_class *)sub_10000A38C((uint64_t *)&unk_10035B568);
  v386 = (char *)objc_allocWithZone(v385);
  *(void *)&v386[*(void *)((swift_isaMask & *(void *)v386) + 0x80)] = 0;
  *(void *)&v386[*(void *)((swift_isaMask & *(void *)v386) + 0x60)] = kCAMediaTimingFunctionEaseOut;
  v387 = (unint64_t *)&v386[*(void *)((swift_isaMask & *(void *)v386) + 0x68)];
  unint64_t v388 = v771;
  unint64_t *v387 = v771;
  v387[1] = 0x80000001002BA090;
  *(void *)&v386[*(void *)((swift_isaMask & *(void *)v386) + 0x70)] = v375;
  v386[*(void *)((swift_isaMask & *(void *)v386) + 0x78)] = 0;
  v891.receiver = v386;
  v891.super_class = v385;
  id v389 = v384;
  v390 = kCAMediaTimingFunctionEaseOut;
  v377[114] = [super init];
  v391 = (objc_class *)sub_10000A38C((uint64_t *)&unk_10035B4F8);
  v392 = (char *)objc_allocWithZone(v391);
  *(void *)&v392[*(void *)((swift_isaMask & *(void *)v392) + 0x80)] = 0;
  v392[*(void *)((swift_isaMask & *(void *)v392) + 0x60)] = 0;
  v393 = &v392[*(void *)((swift_isaMask & *(void *)v392) + 0x68)];
  *(void *)v393 = v388;
  *((void *)v393 + 1) = 0x80000001002BA0B0;
  *(void *)&v392[*(void *)((swift_isaMask & *(void *)v392) + 0x70)] = v375;
  v392[*(void *)((swift_isaMask & *(void *)v392) + 0x78)] = 0;
  v890.receiver = v392;
  v890.super_class = v391;
  id v394 = v389;
  v395 = v377;
  v377[115] = [super init];
  v396 = (objc_class *)sub_10000A38C((uint64_t *)&unk_100363368);
  v397 = (char *)objc_allocWithZone(v396);
  *(void *)&v397[*(void *)((swift_isaMask & *(void *)v397) + 0x80)] = 0;
  v397[*(void *)((swift_isaMask & *(void *)v397) + 0x60)] = 0;
  v398 = (unint64_t *)&v397[*(void *)((swift_isaMask & *(void *)v397) + 0x68)];
  unint64_t *v398 = v782;
  v398[1] = 0x80000001002BA0D0;
  *(void *)&v397[*(void *)((swift_isaMask & *(void *)v397) + 0x70)] = v375;
  v397[*(void *)((swift_isaMask & *(void *)v397) + 0x78)] = 0;
  v889.receiver = v397;
  v889.super_class = v396;
  id v399 = v394;
  v377[116] = [super init];
  v400 = v785;
  v401 = (char *)objc_allocWithZone(v785);
  *(void *)&v401[*(void *)((swift_isaMask & *(void *)v401) + 0x80)] = 0;
  v401[*(void *)((swift_isaMask & *(void *)v401) + 0x60)] = 1;
  v402 = (unint64_t *)&v401[*(void *)((swift_isaMask & *(void *)v401) + 0x68)];
  unint64_t *v402 = v779;
  v402[1] = 0x80000001002BA0F0;
  *(void *)&v401[*(void *)((swift_isaMask & *(void *)v401) + 0x70)] = v375;
  v401[*(void *)((swift_isaMask & *(void *)v401) + 0x78)] = 0;
  v888.receiver = v401;
  v888.super_class = v400;
  id v403 = v399;
  v377[117] = [super init];
  v404 = v786;
  v405 = (char *)objc_allocWithZone(v786);
  *(void *)&v405[*(void *)((swift_isaMask & *(void *)v405) + 0x80)] = 0;
  *(void *)&v405[*(void *)((swift_isaMask & *(void *)v405) + 0x60)] = 0;
  v406 = &v405[*(void *)((swift_isaMask & *(void *)v405) + 0x68)];
  *(void *)v406 = 0xD000000000000014;
  *((void *)v406 + 1) = 0x80000001002BA110;
  *(void *)&v405[*(void *)((swift_isaMask & *(void *)v405) + 0x70)] = v375;
  v405[*(void *)((swift_isaMask & *(void *)v405) + 0x78)] = 0;
  v887.receiver = v405;
  v887.super_class = v404;
  id v407 = v403;
  v395[118] = [super init];
  v408 = (char *)objc_allocWithZone(v400);
  *(void *)&v408[*(void *)((swift_isaMask & *(void *)v408) + 0x80)] = 0;
  v408[*(void *)((swift_isaMask & *(void *)v408) + 0x60)] = 0;
  v409 = &v408[*(void *)((swift_isaMask & *(void *)v408) + 0x68)];
  *(void *)v409 = v770;
  *((void *)v409 + 1) = 0x80000001002BA130;
  *(void *)&v408[*(void *)((swift_isaMask & *(void *)v408) + 0x70)] = v375;
  v408[*(void *)((swift_isaMask & *(void *)v408) + 0x78)] = 0;
  v886.receiver = v408;
  v886.super_class = v400;
  id v410 = v407;
  v395[119] = [super init];
  v411 = (char *)objc_allocWithZone(v400);
  *(void *)&v411[*(void *)((swift_isaMask & *(void *)v411) + 0x80)] = 0;
  v411[*(void *)((swift_isaMask & *(void *)v411) + 0x60)] = 1;
  v412 = (unint64_t *)&v411[*(void *)((swift_isaMask & *(void *)v411) + 0x68)];
  unint64_t *v412 = v783;
  v412[1] = 0x80000001002BA150;
  *(void *)&v411[*(void *)((swift_isaMask & *(void *)v411) + 0x70)] = v375;
  v411[*(void *)((swift_isaMask & *(void *)v411) + 0x78)] = 0;
  v885.receiver = v411;
  v885.super_class = v400;
  id v413 = v410;
  v395[120] = [super init];
  v414 = (char *)objc_allocWithZone(v400);
  *(void *)&v414[*(void *)((swift_isaMask & *(void *)v414) + 0x80)] = 0;
  v414[*(void *)((swift_isaMask & *(void *)v414) + 0x60)] = 1;
  v415 = (unint64_t *)&v414[*(void *)((swift_isaMask & *(void *)v414) + 0x68)];
  unint64_t *v415 = v781;
  v415[1] = 0x80000001002BA170;
  *(void *)&v414[*(void *)((swift_isaMask & *(void *)v414) + 0x70)] = v375;
  v414[*(void *)((swift_isaMask & *(void *)v414) + 0x78)] = 0;
  v884.receiver = v414;
  v884.super_class = v400;
  id v416 = v413;
  v395[121] = [super init];
  v417 = (objc_class *)sub_10000A38C((uint64_t *)&unk_10035B4D8);
  v418 = (char *)objc_allocWithZone(v417);
  *(void *)&v418[*(void *)((swift_isaMask & *(void *)v418) + 0x80)] = 0;
  *(_DWORD *)&v418[*(void *)((swift_isaMask & *(void *)v418) + 0x60)] = 1041865114;
  v419 = &v418[*(void *)((swift_isaMask & *(void *)v418) + 0x68)];
  *(void *)v419 = 0xD000000000000014;
  *((void *)v419 + 1) = 0x80000001002BA190;
  *(void *)&v418[*(void *)((swift_isaMask & *(void *)v418) + 0x70)] = v375;
  v418[*(void *)((swift_isaMask & *(void *)v418) + 0x78)] = 0;
  v883.receiver = v418;
  v883.super_class = v417;
  id v420 = v416;
  v395[122] = [super init];
  Class v770 = v417;
  v421 = (char *)objc_allocWithZone(v417);
  *(void *)&v421[*(void *)((swift_isaMask & *(void *)v421) + 0x80)] = 0;
  *(_DWORD *)&v421[*(void *)((swift_isaMask & *(void *)v421) + 0x60)] = 0;
  v422 = &v421[*(void *)((swift_isaMask & *(void *)v421) + 0x68)];
  *(void *)v422 = 0xD000000000000014;
  *((void *)v422 + 1) = 0x80000001002BA1B0;
  *(void *)&v421[*(void *)((swift_isaMask & *(void *)v421) + 0x70)] = v375;
  v421[*(void *)((swift_isaMask & *(void *)v421) + 0x78)] = 0;
  v882.receiver = v421;
  v882.super_class = v417;
  id v423 = v420;
  v395[123] = [super init];
  v424 = (objc_class *)sub_10000A38C((uint64_t *)&unk_10035B588);
  v425 = (char *)objc_allocWithZone(v424);
  *(void *)&v425[*(void *)((swift_isaMask & *(void *)v425) + 0x80)] = 0;
  v425[*(void *)((swift_isaMask & *(void *)v425) + 0x60)] = 4;
  v426 = (unint64_t *)&v425[*(void *)((swift_isaMask & *(void *)v425) + 0x68)];
  unint64_t v427 = v784;
  unint64_t *v426 = v784;
  v426[1] = 0x80000001002BA1D0;
  *(void *)&v425[*(void *)((swift_isaMask & *(void *)v425) + 0x70)] = v375;
  v425[*(void *)((swift_isaMask & *(void *)v425) + 0x78)] = 0;
  v881.receiver = v425;
  v881.super_class = v424;
  id v428 = v423;
  v395[124] = [super init];
  v429 = v768;
  v430 = (char *)objc_allocWithZone(v768);
  *(void *)&v430[*(void *)((swift_isaMask & *(void *)v430) + 0x80)] = 0;
  *(void *)&v430[*(void *)((swift_isaMask & *(void *)v430) + 0x60)] = 0x3FF0000000000000;
  v431 = (unint64_t *)&v430[*(void *)((swift_isaMask & *(void *)v430) + 0x68)];
  unint64_t v432 = v777;
  unint64_t *v431 = v777;
  v431[1] = 0x80000001002BA1F0;
  *(void *)&v430[*(void *)((swift_isaMask & *(void *)v430) + 0x70)] = v375;
  v430[*(void *)((swift_isaMask & *(void *)v430) + 0x78)] = 0;
  v880.receiver = v430;
  v880.super_class = v429;
  id v433 = v428;
  v395[125] = [super init];
  v434 = (char *)objc_allocWithZone(v424);
  *(void *)&v434[*(void *)((swift_isaMask & *(void *)v434) + 0x80)] = 0;
  v434[*(void *)((swift_isaMask & *(void *)v434) + 0x60)] = 3;
  v435 = &v434[*(void *)((swift_isaMask & *(void *)v434) + 0x68)];
  *(void *)v435 = v427;
  *((void *)v435 + 1) = 0x80000001002BA210;
  *(void *)&v434[*(void *)((swift_isaMask & *(void *)v434) + 0x70)] = v375;
  v434[*(void *)((swift_isaMask & *(void *)v434) + 0x78)] = 0;
  v879.receiver = v434;
  v879.super_class = v424;
  id v436 = v433;
  v395[126] = [super init];
  v437 = v768;
  v438 = (char *)objc_allocWithZone(v768);
  *(void *)&v438[*(void *)((swift_isaMask & *(void *)v438) + 0x80)] = 0;
  *(void *)&v438[*(void *)((swift_isaMask & *(void *)v438) + 0x60)] = 0x3FF0000000000000;
  v439 = &v438[*(void *)((swift_isaMask & *(void *)v438) + 0x68)];
  *(void *)v439 = v432;
  *((void *)v439 + 1) = 0x80000001002BA230;
  *(void *)&v438[*(void *)((swift_isaMask & *(void *)v438) + 0x70)] = v375;
  v438[*(void *)((swift_isaMask & *(void *)v438) + 0x78)] = 0;
  v878.receiver = v438;
  v878.super_class = v437;
  id v440 = v436;
  v395[127] = [super init];
  v441 = v785;
  v442 = (char *)objc_allocWithZone(v785);
  *(void *)&v442[*(void *)((swift_isaMask & *(void *)v442) + 0x80)] = 0;
  v442[*(void *)((swift_isaMask & *(void *)v442) + 0x60)] = 0;
  v443 = &v442[*(void *)((swift_isaMask & *(void *)v442) + 0x68)];
  *(void *)v443 = 0xD000000000000027;
  *((void *)v443 + 1) = 0x80000001002BA250;
  *(void *)&v442[*(void *)((swift_isaMask & *(void *)v442) + 0x70)] = v375;
  v442[*(void *)((swift_isaMask & *(void *)v442) + 0x78)] = 0;
  v877.receiver = v442;
  v877.super_class = v441;
  id v444 = v440;
  v395[128] = [super init];
  v445 = (char *)objc_allocWithZone(v441);
  *(void *)&v445[*(void *)((swift_isaMask & *(void *)v445) + 0x80)] = 0;
  v445[*(void *)((swift_isaMask & *(void *)v445) + 0x60)] = 0;
  v446 = &v445[*(void *)((swift_isaMask & *(void *)v445) + 0x68)];
  *(void *)v446 = 0xD000000000000032;
  *((void *)v446 + 1) = 0x80000001002BA280;
  *(void *)&v445[*(void *)((swift_isaMask & *(void *)v445) + 0x70)] = v375;
  v445[*(void *)((swift_isaMask & *(void *)v445) + 0x78)] = 0;
  v876.receiver = v445;
  v876.super_class = v441;
  id v447 = v444;
  v395[129] = [super init];
  v448 = (char *)objc_allocWithZone(v441);
  *(void *)&v448[*(void *)((swift_isaMask & *(void *)v448) + 0x80)] = 0;
  v448[*(void *)((swift_isaMask & *(void *)v448) + 0x60)] = 0;
  v449 = (unint64_t *)&v448[*(void *)((swift_isaMask & *(void *)v448) + 0x68)];
  unint64_t *v449 = v782;
  v449[1] = 0x80000001002BA2C0;
  *(void *)&v448[*(void *)((swift_isaMask & *(void *)v448) + 0x70)] = v375;
  v448[*(void *)((swift_isaMask & *(void *)v448) + 0x78)] = 0;
  v875.receiver = v448;
  v875.super_class = v441;
  id v450 = v447;
  v395[130] = [super init];
  v451 = (char *)objc_allocWithZone(v441);
  *(void *)&v451[*(void *)((swift_isaMask & *(void *)v451) + 0x80)] = 0;
  v451[*(void *)((swift_isaMask & *(void *)v451) + 0x60)] = 1;
  v452 = (unint64_t *)&v451[*(void *)((swift_isaMask & *(void *)v451) + 0x68)];
  unint64_t v453 = v775;
  unint64_t *v452 = v775;
  v452[1] = 0x80000001002BA2E0;
  *(void *)&v451[*(void *)((swift_isaMask & *(void *)v451) + 0x70)] = v375;
  v451[*(void *)((swift_isaMask & *(void *)v451) + 0x78)] = 0;
  v874.receiver = v451;
  v874.super_class = v441;
  id v454 = v450;
  v395[131] = [super init];
  v455 = (char *)objc_allocWithZone(v441);
  *(void *)&v455[*(void *)((swift_isaMask & *(void *)v455) + 0x80)] = 0;
  v455[*(void *)((swift_isaMask & *(void *)v455) + 0x60)] = 0;
  v456 = (unint64_t *)&v455[*(void *)((swift_isaMask & *(void *)v455) + 0x68)];
  unint64_t *v456 = v777;
  v456[1] = 0x80000001002BA300;
  *(void *)&v455[*(void *)((swift_isaMask & *(void *)v455) + 0x70)] = v375;
  v455[*(void *)((swift_isaMask & *(void *)v455) + 0x78)] = 0;
  v873.receiver = v455;
  v873.super_class = v441;
  id v457 = v454;
  v395[132] = [super init];
  v458 = (char *)objc_allocWithZone(v441);
  *(void *)&v458[*(void *)((swift_isaMask & *(void *)v458) + 0x80)] = 0;
  v458[*(void *)((swift_isaMask & *(void *)v458) + 0x60)] = 1;
  v459 = &v458[*(void *)((swift_isaMask & *(void *)v458) + 0x68)];
  *(void *)v459 = v773;
  *((void *)v459 + 1) = 0x80000001002BA320;
  *(void *)&v458[*(void *)((swift_isaMask & *(void *)v458) + 0x70)] = v375;
  v458[*(void *)((swift_isaMask & *(void *)v458) + 0x78)] = 0;
  v872.receiver = v458;
  v872.super_class = v441;
  id v460 = v457;
  v395[133] = [super init];
  v461 = (char *)objc_allocWithZone(v441);
  *(void *)&v461[*(void *)((swift_isaMask & *(void *)v461) + 0x80)] = 0;
  v461[*(void *)((swift_isaMask & *(void *)v461) + 0x60)] = 0;
  v462 = (unint64_t *)&v461[*(void *)((swift_isaMask & *(void *)v461) + 0x68)];
  unint64_t *v462 = v780;
  v462[1] = 0x80000001002BA340;
  *(void *)&v461[*(void *)((swift_isaMask & *(void *)v461) + 0x70)] = v375;
  v461[*(void *)((swift_isaMask & *(void *)v461) + 0x78)] = 0;
  v871.receiver = v461;
  v871.super_class = v441;
  id v463 = v460;
  v395[134] = [super init];
  v464 = (char *)objc_allocWithZone(v441);
  *(void *)&v464[*(void *)((swift_isaMask & *(void *)v464) + 0x80)] = 0;
  v464[*(void *)((swift_isaMask & *(void *)v464) + 0x60)] = 0;
  v465 = &v464[*(void *)((swift_isaMask & *(void *)v464) + 0x68)];
  *(void *)v465 = v453;
  *((void *)v465 + 1) = 0x80000001002BA360;
  *(void *)&v464[*(void *)((swift_isaMask & *(void *)v464) + 0x70)] = v375;
  v464[*(void *)((swift_isaMask & *(void *)v464) + 0x78)] = 0;
  v870.receiver = v464;
  v870.super_class = v441;
  id v466 = v463;
  v395[135] = [super init];
  v467 = v786;
  v468 = (char *)objc_allocWithZone(v786);
  *(void *)&v468[*(void *)((swift_isaMask & *(void *)v468) + 0x80)] = 0;
  *(void *)&v468[*(void *)((swift_isaMask & *(void *)v468) + 0x60)] = 0;
  v469 = (unint64_t *)&v468[*(void *)((swift_isaMask & *(void *)v468) + 0x68)];
  unint64_t v470 = v784;
  unint64_t *v469 = v784;
  v469[1] = 0x80000001002BA380;
  *(void *)&v468[*(void *)((swift_isaMask & *(void *)v468) + 0x70)] = v375;
  v468[*(void *)((swift_isaMask & *(void *)v468) + 0x78)] = 0;
  v869.receiver = v468;
  v869.super_class = v467;
  id v471 = v466;
  v395[136] = [super init];
  v472 = (char *)objc_allocWithZone(v441);
  *(void *)&v472[*(void *)((swift_isaMask & *(void *)v472) + 0x80)] = 0;
  v472[*(void *)((swift_isaMask & *(void *)v472) + 0x60)] = 0;
  v473 = (unint64_t *)&v472[*(void *)((swift_isaMask & *(void *)v472) + 0x68)];
  unint64_t *v473 = v772;
  v473[1] = 0x80000001002BA3A0;
  *(void *)&v472[*(void *)((swift_isaMask & *(void *)v472) + 0x70)] = v375;
  v472[*(void *)((swift_isaMask & *(void *)v472) + 0x78)] = 0;
  v868.receiver = v472;
  v868.super_class = v441;
  id v474 = v471;
  v395[137] = [super init];
  v475 = (char *)objc_allocWithZone(v441);
  *(void *)&v475[*(void *)((swift_isaMask & *(void *)v475) + 0x80)] = 0;
  v475[*(void *)((swift_isaMask & *(void *)v475) + 0x60)] = 0;
  v476 = (unint64_t *)&v475[*(void *)((swift_isaMask & *(void *)v475) + 0x68)];
  unint64_t *v476 = v787;
  v476[1] = 0x80000001002BA3C0;
  *(void *)&v475[*(void *)((swift_isaMask & *(void *)v475) + 0x70)] = v375;
  v475[*(void *)((swift_isaMask & *(void *)v475) + 0x78)] = 0;
  v867.receiver = v475;
  v867.super_class = v441;
  id v477 = v474;
  v395[138] = [super init];
  v478 = (char *)objc_allocWithZone(v441);
  *(void *)&v478[*(void *)((swift_isaMask & *(void *)v478) + 0x80)] = 0;
  v478[*(void *)((swift_isaMask & *(void *)v478) + 0x60)] = 0;
  v479 = &v478[*(void *)((swift_isaMask & *(void *)v478) + 0x68)];
  *(void *)v479 = v470;
  *((void *)v479 + 1) = 0x80000001002BA3E0;
  *(void *)&v478[*(void *)((swift_isaMask & *(void *)v478) + 0x70)] = v375;
  v478[*(void *)((swift_isaMask & *(void *)v478) + 0x78)] = 0;
  v866.receiver = v478;
  v866.super_class = v441;
  id v480 = v477;
  v395[139] = [super init];
  v481 = v768;
  v482 = (char *)objc_allocWithZone(v768);
  *(void *)&v482[*(void *)((swift_isaMask & *(void *)v482) + 0x80)] = 0;
  *(void *)&v482[*(void *)((swift_isaMask & *(void *)v482) + 0x60)] = 0;
  v483 = &v482[*(void *)((swift_isaMask & *(void *)v482) + 0x68)];
  *(void *)v483 = 0x706C416567646162;
  *((void *)v483 + 1) = 0xEF6E696765426168;
  *(void *)&v482[*(void *)((swift_isaMask & *(void *)v482) + 0x70)] = v375;
  v482[*(void *)((swift_isaMask & *(void *)v482) + 0x78)] = 0;
  v865.receiver = v482;
  v865.super_class = v481;
  id v484 = v480;
  v395[140] = [super init];
  v485 = (char *)objc_allocWithZone(v481);
  *(void *)&v485[*(void *)((swift_isaMask & *(void *)v485) + 0x80)] = 0;
  *(void *)&v485[*(void *)((swift_isaMask & *(void *)v485) + 0x60)] = 0x3FF0000000000000;
  v486 = &v485[*(void *)((swift_isaMask & *(void *)v485) + 0x68)];
  strcpy(v486, "badgeAlphaEnd");
  *((_WORD *)v486 + 7) = -4864;
  *(void *)&v485[*(void *)((swift_isaMask & *(void *)v485) + 0x70)] = v375;
  v485[*(void *)((swift_isaMask & *(void *)v485) + 0x78)] = 0;
  v864.receiver = v485;
  v864.super_class = v481;
  id v487 = v484;
  v395[141] = [super init];
  v488 = v786;
  v489 = (char *)objc_allocWithZone(v786);
  *(void *)&v489[*(void *)((swift_isaMask & *(void *)v489) + 0x80)] = 0;
  *(void *)&v489[*(void *)((swift_isaMask & *(void *)v489) + 0x60)] = 0x3FF0000000000000;
  v490 = &v489[*(void *)((swift_isaMask & *(void *)v489) + 0x68)];
  *(void *)v490 = 0x6C65446567646162;
  *((void *)v490 + 1) = 0xEA00000000007961;
  *(void *)&v489[*(void *)((swift_isaMask & *(void *)v489) + 0x70)] = v375;
  v489[*(void *)((swift_isaMask & *(void *)v489) + 0x78)] = 0;
  v863.receiver = v489;
  v863.super_class = v488;
  id v491 = v487;
  v395[142] = [super init];
  v492 = (char *)objc_allocWithZone(v488);
  *(void *)&v492[*(void *)((swift_isaMask & *(void *)v492) + 0x80)] = 0;
  *(void *)&v492[*(void *)((swift_isaMask & *(void *)v492) + 0x60)] = 0x3FF0000000000000;
  v493 = &v492[*(void *)((swift_isaMask & *(void *)v492) + 0x68)];
  strcpy(v493, "badgeDuration");
  *((_WORD *)v493 + 7) = -4864;
  *(void *)&v492[*(void *)((swift_isaMask & *(void *)v492) + 0x70)] = v375;
  v492[*(void *)((swift_isaMask & *(void *)v492) + 0x78)] = 0;
  v862.receiver = v492;
  v862.super_class = v488;
  id v494 = v491;
  v395[143] = [super init];
  v495 = (char *)objc_allocWithZone(v481);
  *(void *)&v495[*(void *)((swift_isaMask & *(void *)v495) + 0x80)] = 0;
  *(void *)&v495[*(void *)((swift_isaMask & *(void *)v495) + 0x60)] = 0x3FE999999999999ALL;
  v496 = &v495[*(void *)((swift_isaMask & *(void *)v495) + 0x68)];
  unint64_t v764 = 0xEF6E69676542656CLL;
  *(void *)v496 = 0x6163536567646162;
  *((void *)v496 + 1) = 0xEF6E69676542656CLL;
  *(void *)&v495[*(void *)((swift_isaMask & *(void *)v495) + 0x70)] = v375;
  v495[*(void *)((swift_isaMask & *(void *)v495) + 0x78)] = 0;
  v861.receiver = v495;
  v861.super_class = v481;
  id v497 = v494;
  v395[144] = [super init];
  v498 = (char *)objc_allocWithZone(v481);
  *(void *)&v498[*(void *)((swift_isaMask & *(void *)v498) + 0x80)] = 0;
  *(void *)&v498[*(void *)((swift_isaMask & *(void *)v498) + 0x60)] = 0x3FF0000000000000;
  v499 = &v498[*(void *)((swift_isaMask & *(void *)v498) + 0x68)];
  unint64_t v763 = 0xED0000646E45656CLL;
  strcpy(v499, "badgeScaleEnd");
  *((_WORD *)v499 + 7) = -4864;
  *(void *)&v498[*(void *)((swift_isaMask & *(void *)v498) + 0x70)] = v375;
  v498[*(void *)((swift_isaMask & *(void *)v498) + 0x78)] = 0;
  v860.receiver = v498;
  v860.super_class = v481;
  id v500 = v497;
  v395[145] = [super init];
  v501 = (char *)objc_allocWithZone(v481);
  *(void *)&v501[*(void *)((swift_isaMask & *(void *)v501) + 0x80)] = 0;
  *(void *)&v501[*(void *)((swift_isaMask & *(void *)v501) + 0x60)] = 0;
  v502 = &v501[*(void *)((swift_isaMask & *(void *)v501) + 0x68)];
  strcpy(v502, "blurAlphaBegin");
  v502[15] = -18;
  *(void *)&v501[*(void *)((swift_isaMask & *(void *)v501) + 0x70)] = v375;
  v501[*(void *)((swift_isaMask & *(void *)v501) + 0x78)] = 0;
  v859.receiver = v501;
  v859.super_class = v481;
  id v503 = v500;
  v395[146] = [super init];
  v504 = (char *)objc_allocWithZone(v481);
  *(void *)&v504[*(void *)((swift_isaMask & *(void *)v504) + 0x80)] = 0;
  *(void *)&v504[*(void *)((swift_isaMask & *(void *)v504) + 0x60)] = 0x3FE0000000000000;
  v505 = &v504[*(void *)((swift_isaMask & *(void *)v504) + 0x68)];
  strcpy(v505, "blurAlphaEnd");
  v505[13] = 0;
  *((_WORD *)v505 + 7) = -5120;
  *(void *)&v504[*(void *)((swift_isaMask & *(void *)v504) + 0x70)] = v375;
  v504[*(void *)((swift_isaMask & *(void *)v504) + 0x78)] = 0;
  v858.receiver = v504;
  v858.super_class = v481;
  id v506 = v503;
  v395[147] = [super init];
  v507 = (char *)objc_allocWithZone(v481);
  *(void *)&v507[*(void *)((swift_isaMask & *(void *)v507) + 0x80)] = 0;
  *(void *)&v507[*(void *)((swift_isaMask & *(void *)v507) + 0x60)] = 0x402E000000000000;
  v508 = &v507[*(void *)((swift_isaMask & *(void *)v507) + 0x68)];
  *(void *)v508 = 0x6772614D72756C62;
  *((void *)v508 + 1) = 0xEA00000000006E69;
  *(void *)&v507[*(void *)((swift_isaMask & *(void *)v507) + 0x70)] = v375;
  v507[*(void *)((swift_isaMask & *(void *)v507) + 0x78)] = 0;
  v857.receiver = v507;
  v857.super_class = v481;
  id v509 = v506;
  v395[148] = [super init];
  v510 = (char *)objc_allocWithZone(v481);
  *(void *)&v510[*(void *)((swift_isaMask & *(void *)v510) + 0x80)] = 0;
  *(void *)&v510[*(void *)((swift_isaMask & *(void *)v510) + 0x60)] = 0x3FE0000000000000;
  v511 = &v510[*(void *)((swift_isaMask & *(void *)v510) + 0x68)];
  *(void *)v511 = 0x6964615272756C62;
  *((void *)v511 + 1) = 0xEA00000000007375;
  *(void *)&v510[*(void *)((swift_isaMask & *(void *)v510) + 0x70)] = v375;
  v510[*(void *)((swift_isaMask & *(void *)v510) + 0x78)] = 0;
  v856.receiver = v510;
  v856.super_class = v481;
  id v512 = v509;
  v395[149] = [super init];
  v513 = (objc_class *)sub_10000A38C((uint64_t *)&unk_10035B528);
  Class v773 = v513;
  v514 = (char *)objc_allocWithZone(v513);
  *(void *)&v514[*(void *)((swift_isaMask & *(void *)v514) + 0x80)] = 0;
  v515 = &v514[*(void *)((swift_isaMask & *(void *)v514) + 0x60)];
  *(void *)v515 = 0;
  v515[8] = 1;
  v516 = (unint64_t *)&v514[*(void *)((swift_isaMask & *(void *)v514) + 0x68)];
  unint64_t *v516 = v780;
  v516[1] = 0x80000001002BA400;
  *(void *)&v514[*(void *)((swift_isaMask & *(void *)v514) + 0x70)] = v375;
  v514[*(void *)((swift_isaMask & *(void *)v514) + 0x78)] = 0;
  v855.receiver = v514;
  v855.super_class = v513;
  id v517 = v512;
  v395[150] = [super init];
  v518 = v769;
  v519 = (char *)objc_allocWithZone(v769);
  *(void *)&v519[*(void *)((swift_isaMask & *(void *)v519) + 0x80)] = 0;
  v520 = &v519[*(void *)((swift_isaMask & *(void *)v519) + 0x60)];
  *(void *)v520 = 0;
  *((void *)v520 + 1) = 0;
  v521 = (unint64_t *)&v519[*(void *)((swift_isaMask & *(void *)v519) + 0x68)];
  unint64_t *v521 = v787;
  v521[1] = 0x80000001002BA420;
  *(void *)&v519[*(void *)((swift_isaMask & *(void *)v519) + 0x70)] = v375;
  v519[*(void *)((swift_isaMask & *(void *)v519) + 0x78)] = 0;
  v854.receiver = v519;
  v854.super_class = v518;
  id v522 = v517;
  v395[151] = [super init];
  v523 = (char *)objc_allocWithZone(v481);
  *(void *)&v523[*(void *)((swift_isaMask & *(void *)v523) + 0x80)] = 0;
  *(void *)&v523[*(void *)((swift_isaMask & *(void *)v523) + 0x60)] = 0;
  v524 = &v523[*(void *)((swift_isaMask & *(void *)v523) + 0x68)];
  *(void *)v524 = 0x706C416569766F6DLL;
  *((void *)v524 + 1) = 0xEF6E696765426168;
  *(void *)&v523[*(void *)((swift_isaMask & *(void *)v523) + 0x70)] = v375;
  v523[*(void *)((swift_isaMask & *(void *)v523) + 0x78)] = 0;
  v853.receiver = v523;
  v853.super_class = v481;
  id v525 = v522;
  v395[152] = [super init];
  v526 = (char *)objc_allocWithZone(v481);
  *(void *)&v526[*(void *)((swift_isaMask & *(void *)v526) + 0x80)] = 0;
  *(void *)&v526[*(void *)((swift_isaMask & *(void *)v526) + 0x60)] = 0x3FF0000000000000;
  v527 = &v526[*(void *)((swift_isaMask & *(void *)v526) + 0x68)];
  strcpy(v527, "movieAlphaEnd");
  *((_WORD *)v527 + 7) = -4864;
  *(void *)&v526[*(void *)((swift_isaMask & *(void *)v526) + 0x70)] = v375;
  v526[*(void *)((swift_isaMask & *(void *)v526) + 0x78)] = 0;
  v852.receiver = v526;
  v852.super_class = v481;
  id v528 = v525;
  v395[153] = [super init];
  v529 = v786;
  v530 = (char *)objc_allocWithZone(v786);
  *(void *)&v530[*(void *)((swift_isaMask & *(void *)v530) + 0x80)] = 0;
  *(void *)&v530[*(void *)((swift_isaMask & *(void *)v530) + 0x60)] = 0x3FE0000000000000;
  v531 = (unint64_t *)&v530[*(void *)((swift_isaMask & *(void *)v530) + 0x68)];
  unint64_t v532 = v783;
  unint64_t *v531 = v783;
  v531[1] = 0x80000001002BA440;
  *(void *)&v530[*(void *)((swift_isaMask & *(void *)v530) + 0x70)] = v375;
  v530[*(void *)((swift_isaMask & *(void *)v530) + 0x78)] = 0;
  v851.receiver = v530;
  v851.super_class = v529;
  id v533 = v528;
  v395[154] = [super init];
  v534 = (char *)objc_allocWithZone(v481);
  *(void *)&v534[*(void *)((swift_isaMask & *(void *)v534) + 0x80)] = 0;
  *(void *)&v534[*(void *)((swift_isaMask & *(void *)v534) + 0x60)] = 0x3FB999999999999ALL;
  v535 = &v534[*(void *)((swift_isaMask & *(void *)v534) + 0x68)];
  unint64_t v536 = v764;
  *(void *)v535 = 0x6163536569766F6DLL;
  *((void *)v535 + 1) = v536;
  *(void *)&v534[*(void *)((swift_isaMask & *(void *)v534) + 0x70)] = v375;
  v534[*(void *)((swift_isaMask & *(void *)v534) + 0x78)] = 0;
  v850.receiver = v534;
  v850.super_class = v481;
  id v537 = v533;
  v395[155] = [super init];
  v538 = (char *)objc_allocWithZone(v481);
  *(void *)&v538[*(void *)((swift_isaMask & *(void *)v538) + 0x80)] = 0;
  *(void *)&v538[*(void *)((swift_isaMask & *(void *)v538) + 0x60)] = 0x3FF0000000000000;
  v539 = &v538[*(void *)((swift_isaMask & *(void *)v538) + 0x68)];
  unint64_t v540 = v763;
  *(void *)v539 = 0x6163536569766F6DLL;
  *((void *)v539 + 1) = v540;
  *(void *)&v538[*(void *)((swift_isaMask & *(void *)v538) + 0x70)] = v375;
  v538[*(void *)((swift_isaMask & *(void *)v538) + 0x78)] = 0;
  v849.receiver = v538;
  v849.super_class = v481;
  id v541 = v537;
  v395[156] = [super init];
  v542 = (char *)objc_allocWithZone(v481);
  *(void *)&v542[*(void *)((swift_isaMask & *(void *)v542) + 0x80)] = 0;
  *(void *)&v542[*(void *)((swift_isaMask & *(void *)v542) + 0x60)] = 0x4024000000000000;
  v543 = &v542[*(void *)((swift_isaMask & *(void *)v542) + 0x68)];
  *(void *)v543 = v532;
  *((void *)v543 + 1) = 0x80000001002BA460;
  *(void *)&v542[*(void *)((swift_isaMask & *(void *)v542) + 0x70)] = v375;
  v542[*(void *)((swift_isaMask & *(void *)v542) + 0x78)] = 0;
  v848.receiver = v542;
  v848.super_class = v481;
  id v544 = v541;
  v395[157] = [super init];
  v545 = (char *)objc_allocWithZone(v481);
  *(void *)&v545[*(void *)((swift_isaMask & *(void *)v545) + 0x80)] = 0;
  *(void *)&v545[*(void *)((swift_isaMask & *(void *)v545) + 0x60)] = 0xC039000000000000;
  v546 = &v545[*(void *)((swift_isaMask & *(void *)v545) + 0x68)];
  *(void *)v546 = 0x6461506569766F6DLL;
  *((void *)v546 + 1) = 0xEF706F54676E6964;
  *(void *)&v545[*(void *)((swift_isaMask & *(void *)v545) + 0x70)] = v375;
  v545[*(void *)((swift_isaMask & *(void *)v545) + 0x78)] = 0;
  v847.receiver = v545;
  v847.super_class = v481;
  id v547 = v544;
  v395[158] = [super init];
  v548 = v786;
  v549 = (char *)objc_allocWithZone(v786);
  *(void *)&v549[*(void *)((swift_isaMask & *(void *)v549) + 0x80)] = 0;
  *(void *)&v549[*(void *)((swift_isaMask & *(void *)v549) + 0x60)] = 0x3FF0000000000000;
  v550 = (unint64_t *)&v549[*(void *)((swift_isaMask & *(void *)v549) + 0x68)];
  unint64_t v551 = v787;
  unint64_t *v550 = v787;
  v550[1] = 0x80000001002BA480;
  *(void *)&v549[*(void *)((swift_isaMask & *(void *)v549) + 0x70)] = v375;
  v549[*(void *)((swift_isaMask & *(void *)v549) + 0x78)] = 0;
  v846.receiver = v549;
  v846.super_class = v548;
  id v552 = v547;
  v395[159] = [super init];
  v553 = (char *)objc_allocWithZone(v481);
  *(void *)&v553[*(void *)((swift_isaMask & *(void *)v553) + 0x80)] = 0;
  *(void *)&v553[*(void *)((swift_isaMask & *(void *)v553) + 0x60)] = 0x4049000000000000;
  v554 = &v553[*(void *)((swift_isaMask & *(void *)v553) + 0x68)];
  *(void *)v554 = v551;
  *((void *)v554 + 1) = 0x80000001002BA4A0;
  *(void *)&v553[*(void *)((swift_isaMask & *(void *)v553) + 0x70)] = v375;
  v553[*(void *)((swift_isaMask & *(void *)v553) + 0x78)] = 0;
  v845.receiver = v553;
  v845.super_class = v481;
  id v555 = v552;
  v395[160] = [super init];
  v556 = (char *)objc_allocWithZone(v481);
  *(void *)&v556[*(void *)((swift_isaMask & *(void *)v556) + 0x80)] = 0;
  *(void *)&v556[*(void *)((swift_isaMask & *(void *)v556) + 0x60)] = 0;
  v557 = &v556[*(void *)((swift_isaMask & *(void *)v556) + 0x68)];
  *(void *)v557 = 0xD000000000000014;
  *((void *)v557 + 1) = 0x80000001002BA4C0;
  *(void *)&v556[*(void *)((swift_isaMask & *(void *)v556) + 0x70)] = v375;
  v556[*(void *)((swift_isaMask & *(void *)v556) + 0x78)] = 0;
  v844.receiver = v556;
  v844.super_class = v481;
  id v558 = v555;
  v395[161] = [super init];
  v559 = (char *)objc_allocWithZone(v548);
  *(void *)&v559[*(void *)((swift_isaMask & *(void *)v559) + 0x80)] = 0;
  *(void *)&v559[*(void *)((swift_isaMask & *(void *)v559) + 0x60)] = 0x4014000000000000;
  v560 = (unint64_t *)&v559[*(void *)((swift_isaMask & *(void *)v559) + 0x68)];
  unint64_t *v560 = v784;
  v560[1] = 0x80000001002BA4E0;
  *(void *)&v559[*(void *)((swift_isaMask & *(void *)v559) + 0x70)] = v375;
  v559[*(void *)((swift_isaMask & *(void *)v559) + 0x78)] = 0;
  v843.receiver = v559;
  v843.super_class = v548;
  id v561 = v558;
  v395[162] = [super init];
  v562 = v785;
  v563 = (char *)objc_allocWithZone(v785);
  *(void *)&v563[*(void *)((swift_isaMask & *(void *)v563) + 0x80)] = 0;
  v563[*(void *)((swift_isaMask & *(void *)v563) + 0x60)] = 0;
  v564 = &v563[*(void *)((swift_isaMask & *(void *)v563) + 0x68)];
  *(void *)v564 = 0x49556775626564;
  *((void *)v564 + 1) = 0xE700000000000000;
  *(void *)&v563[*(void *)((swift_isaMask & *(void *)v563) + 0x70)] = v375;
  v563[*(void *)((swift_isaMask & *(void *)v563) + 0x78)] = 0;
  v842.receiver = v563;
  v842.super_class = v562;
  id v565 = v561;
  v395[163] = [super init];
  v566 = (char *)objc_allocWithZone(v562);
  *(void *)&v566[*(void *)((swift_isaMask & *(void *)v566) + 0x80)] = 0;
  v566[*(void *)((swift_isaMask & *(void *)v566) + 0x60)] = 0;
  v567 = &v566[*(void *)((swift_isaMask & *(void *)v566) + 0x68)];
  *(void *)v567 = 0x655265726F6E6769;
  *((void *)v567 + 1) = 0xEA00000000006C61;
  *(void *)&v566[*(void *)((swift_isaMask & *(void *)v566) + 0x70)] = v375;
  v566[*(void *)((swift_isaMask & *(void *)v566) + 0x78)] = 0;
  v841.receiver = v566;
  v841.super_class = v562;
  id v568 = v565;
  v395[164] = [super init];
  v569 = (char *)objc_allocWithZone(v481);
  *(void *)&v569[*(void *)((swift_isaMask & *(void *)v569) + 0x80)] = 0;
  *(void *)&v569[*(void *)((swift_isaMask & *(void *)v569) + 0x60)] = 0x3FF3333333333333;
  v570 = &v569[*(void *)((swift_isaMask & *(void *)v569) + 0x68)];
  *(void *)v570 = 0xD000000000000014;
  *((void *)v570 + 1) = 0x80000001002BA500;
  *(void *)&v569[*(void *)((swift_isaMask & *(void *)v569) + 0x70)] = v375;
  v569[*(void *)((swift_isaMask & *(void *)v569) + 0x78)] = 0;
  v840.receiver = v569;
  v840.super_class = v481;
  id v571 = v568;
  v395[165] = [super init];
  v572 = (char *)objc_allocWithZone(v481);
  *(void *)&v572[*(void *)((swift_isaMask & *(void *)v572) + 0x80)] = 0;
  *(void *)&v572[*(void *)((swift_isaMask & *(void *)v572) + 0x60)] = 0x4049000000000000;
  v573 = (unint64_t *)&v572[*(void *)((swift_isaMask & *(void *)v572) + 0x68)];
  unint64_t *v573 = v777;
  v573[1] = 0x80000001002BA520;
  *(void *)&v572[*(void *)((swift_isaMask & *(void *)v572) + 0x70)] = v375;
  v572[*(void *)((swift_isaMask & *(void *)v572) + 0x78)] = 0;
  v839.receiver = v572;
  v839.super_class = v481;
  id v574 = v571;
  v395[166] = [super init];
  v575 = v769;
  v576 = (char *)objc_allocWithZone(v769);
  *(void *)&v576[*(void *)((swift_isaMask & *(void *)v576) + 0x80)] = 0;
  v577 = &v576[*(void *)((swift_isaMask & *(void *)v576) + 0x60)];
  *(void *)v577 = 0;
  *((void *)v577 + 1) = 0;
  v578 = &v576[*(void *)((swift_isaMask & *(void *)v576) + 0x68)];
  *(void *)v578 = 0x497070416F6D6544;
  *((void *)v578 + 1) = 0xEB000000006E6F63;
  *(void *)&v576[*(void *)((swift_isaMask & *(void *)v576) + 0x70)] = v375;
  v576[*(void *)((swift_isaMask & *(void *)v576) + 0x78)] = 0;
  v838.receiver = v576;
  v838.super_class = v575;
  id v579 = v574;
  v395[167] = [super init];
  v580 = v773;
  v581 = (char *)objc_allocWithZone(v773);
  *(void *)&v581[*(void *)((swift_isaMask & *(void *)v581) + 0x80)] = 0;
  v582 = &v581[*(void *)((swift_isaMask & *(void *)v581) + 0x60)];
  *(void *)v582 = 0;
  v582[8] = 1;
  v583 = &v581[*(void *)((swift_isaMask & *(void *)v581) + 0x68)];
  *(void *)v583 = 0x67616D496F6D6544;
  *((void *)v583 + 1) = 0xE900000000000065;
  *(void *)&v581[*(void *)((swift_isaMask & *(void *)v581) + 0x70)] = v375;
  v581[*(void *)((swift_isaMask & *(void *)v581) + 0x78)] = 0;
  v837.receiver = v581;
  v837.super_class = v580;
  id v584 = v579;
  v395[168] = [super init];
  v585 = (char *)objc_allocWithZone(v575);
  *(void *)&v585[*(void *)((swift_isaMask & *(void *)v585) + 0x80)] = 0;
  v586 = &v585[*(void *)((swift_isaMask & *(void *)v585) + 0x60)];
  *(void *)v586 = 0;
  *((void *)v586 + 1) = 0;
  v587 = &v585[*(void *)((swift_isaMask & *(void *)v585) + 0x68)];
  *(void *)v587 = 0x656D614E6F6D6544;
  *((void *)v587 + 1) = 0xE800000000000000;
  *(void *)&v585[*(void *)((swift_isaMask & *(void *)v585) + 0x70)] = v375;
  v585[*(void *)((swift_isaMask & *(void *)v585) + 0x78)] = 0;
  v836.receiver = v585;
  v836.super_class = v575;
  id v588 = v584;
  v395[169] = [super init];
  v589 = (char *)objc_allocWithZone(v575);
  *(void *)&v589[*(void *)((swift_isaMask & *(void *)v589) + 0x80)] = 0;
  v590 = &v589[*(void *)((swift_isaMask & *(void *)v589) + 0x60)];
  *(void *)v590 = 0;
  *((void *)v590 + 1) = 0;
  v591 = &v589[*(void *)((swift_isaMask & *(void *)v589) + 0x68)];
  *(void *)v591 = 0x746275536F6D6544;
  *((void *)v591 + 1) = 0xEB00000000747865;
  *(void *)&v589[*(void *)((swift_isaMask & *(void *)v589) + 0x70)] = v375;
  v589[*(void *)((swift_isaMask & *(void *)v589) + 0x78)] = 0;
  v835.receiver = v589;
  v835.super_class = v575;
  id v592 = v588;
  v395[170] = [super init];
  v593 = v395;
  v594 = (char *)objc_allocWithZone(v562);
  *(void *)&v594[*(void *)((swift_isaMask & *(void *)v594) + 0x80)] = 0;
  v594[*(void *)((swift_isaMask & *(void *)v594) + 0x60)] = 0;
  v595 = (unint64_t *)&v594[*(void *)((swift_isaMask & *(void *)v594) + 0x68)];
  unint64_t *v595 = v765;
  v595[1] = 0x80000001002BA540;
  *(void *)&v594[*(void *)((swift_isaMask & *(void *)v594) + 0x70)] = v375;
  v594[*(void *)((swift_isaMask & *(void *)v594) + 0x78)] = 0;
  v834.receiver = v594;
  v834.super_class = v562;
  id v596 = v592;
  v395[171] = [super init];
  v597 = (char *)objc_allocWithZone(v575);
  *(void *)&v597[*(void *)((swift_isaMask & *(void *)v597) + 0x80)] = 0;
  v598 = &v597[*(void *)((swift_isaMask & *(void *)v597) + 0x60)];
  *(void *)v598 = 0;
  *((void *)v598 + 1) = 0;
  v599 = (unint64_t *)&v597[*(void *)((swift_isaMask & *(void *)v597) + 0x68)];
  unint64_t *v599 = v766;
  v599[1] = 0x80000001002BA570;
  *(void *)&v597[*(void *)((swift_isaMask & *(void *)v597) + 0x70)] = v375;
  v600 = v375;
  v597[*(void *)((swift_isaMask & *(void *)v597) + 0x78)] = 0;
  v833.receiver = v597;
  v833.super_class = v575;
  id v601 = v596;
  v593[172] = [super init];
  v602 = v776;
  v603 = (char *)objc_allocWithZone(v776);
  *(void *)&v603[*(void *)((swift_isaMask & *(void *)v603) + 0x80)] = 0;
  *(void *)&v603[*(void *)((swift_isaMask & *(void *)v603) + 0x60)] = 0;
  v604 = &v603[*(void *)((swift_isaMask & *(void *)v603) + 0x68)];
  *(void *)v604 = 0x7543636974706168;
  *((void *)v604 + 1) = 0xEB00000000657672;
  *(void *)&v603[*(void *)((swift_isaMask & *(void *)v603) + 0x70)] = v600;
  v603[*(void *)((swift_isaMask & *(void *)v603) + 0x78)] = 0;
  v832.receiver = v603;
  v832.super_class = v602;
  id v605 = v601;
  v593[173] = [super init];
  v606 = v593;
  v607 = (char *)objc_allocWithZone(v562);
  *(void *)&v607[*(void *)((swift_isaMask & *(void *)v607) + 0x80)] = 0;
  v607[*(void *)((swift_isaMask & *(void *)v607) + 0x60)] = 1;
  v608 = (unint64_t *)&v607[*(void *)((swift_isaMask & *(void *)v607) + 0x68)];
  unint64_t v609 = v783;
  unint64_t *v608 = v783;
  v608[1] = 0x80000001002BA5A0;
  *(void *)&v607[*(void *)((swift_isaMask & *(void *)v607) + 0x70)] = v600;
  v610 = v600;
  v607[*(void *)((swift_isaMask & *(void *)v607) + 0x78)] = 0;
  v831.receiver = v607;
  v831.super_class = v562;
  id v611 = v605;
  v612 = v606;
  v606[174] = [super init];
  v613 = v786;
  v614 = (char *)objc_allocWithZone(v786);
  *(void *)&v614[*(void *)((swift_isaMask & *(void *)v614) + 0x80)] = 0;
  *(void *)&v614[*(void *)((swift_isaMask & *(void *)v614) + 0x60)] = 0x404E000000000000;
  v615 = &v614[*(void *)((swift_isaMask & *(void *)v614) + 0x68)];
  *(void *)v615 = 0x7246636974706168;
  *((void *)v615 + 1) = 0xEF79636E65757165;
  *(void *)&v614[*(void *)((swift_isaMask & *(void *)v614) + 0x70)] = v610;
  v616 = (uint64_t)v610;
  v614[*(void *)((swift_isaMask & *(void *)v614) + 0x78)] = 0;
  v830.receiver = v614;
  v830.super_class = v613;
  id v617 = v611;
  v612[175] = [super init];
  v618 = v612;
  v619 = v770;
  v620 = (char *)objc_allocWithZone(v770);
  *(void *)&v620[*(void *)((swift_isaMask & *(void *)v620) + 0x80)] = 0;
  *(_DWORD *)&v620[*(void *)((swift_isaMask & *(void *)v620) + 0x60)] = 1059481190;
  v621 = &v620[*(void *)((swift_isaMask & *(void *)v620) + 0x68)];
  *(void *)v621 = v609;
  *((void *)v621 + 1) = 0x80000001002BA5C0;
  *(void *)&v620[*(void *)((swift_isaMask & *(void *)v620) + 0x70)] = v616;
  v620[*(void *)((swift_isaMask & *(void *)v620) + 0x78)] = 0;
  v829.receiver = v620;
  v829.super_class = v619;
  id v622 = v617;
  v612[176] = [super init];
  v623 = (char *)objc_allocWithZone(v619);
  *(void *)&v623[*(void *)((swift_isaMask & *(void *)v623) + 0x80)] = 0;
  *(_DWORD *)&v623[*(void *)((swift_isaMask & *(void *)v623) + 0x60)] = 0;
  v624 = &v623[*(void *)((swift_isaMask & *(void *)v623) + 0x68)];
  *(void *)v624 = v609;
  *((void *)v624 + 1) = 0x80000001002BA5E0;
  v625 = v616;
  *(void *)&v623[*(void *)((swift_isaMask & *(void *)v623) + 0x70)] = v616;
  v623[*(void *)((swift_isaMask & *(void *)v623) + 0x78)] = 0;
  v828.receiver = v623;
  v828.super_class = v619;
  id v626 = v622;
  v618[177] = [super init];
  v627 = (char *)objc_allocWithZone(v619);
  *(void *)&v627[*(void *)((swift_isaMask & *(void *)v627) + 0x80)] = 0;
  *(_DWORD *)&v627[*(void *)((swift_isaMask & *(void *)v627) + 0x60)] = 1041865114;
  v628 = (unint64_t *)&v627[*(void *)((swift_isaMask & *(void *)v627) + 0x68)];
  unint64_t v629 = v778;
  unint64_t *v628 = v778;
  v628[1] = 0x80000001002BA600;
  *(void *)&v627[*(void *)((swift_isaMask & *(void *)v627) + 0x70)] = v625;
  v627[*(void *)((swift_isaMask & *(void *)v627) + 0x78)] = 0;
  v827.receiver = v627;
  v827.super_class = v619;
  id v630 = v626;
  v618[178] = [super init];
  v631 = (char *)objc_allocWithZone(v619);
  *(void *)&v631[*(void *)((swift_isaMask & *(void *)v631) + 0x80)] = 0;
  *(_DWORD *)&v631[*(void *)((swift_isaMask & *(void *)v631) + 0x60)] = 1041865114;
  v632 = &v631[*(void *)((swift_isaMask & *(void *)v631) + 0x68)];
  *(void *)v632 = v629;
  *((void *)v632 + 1) = 0x80000001002BA620;
  *(void *)&v631[*(void *)((swift_isaMask & *(void *)v631) + 0x70)] = v625;
  v631[*(void *)((swift_isaMask & *(void *)v631) + 0x78)] = 0;
  v826.receiver = v631;
  v826.super_class = v619;
  id v633 = v630;
  v634 = v618;
  v618[179] = [super init];
  v635 = (char *)objc_allocWithZone(v613);
  *(void *)&v635[*(void *)((swift_isaMask & *(void *)v635) + 0x80)] = 0;
  *(void *)&v635[*(void *)((swift_isaMask & *(void *)v635) + 0x60)] = 0x3FD3333333333333;
  v636 = &v635[*(void *)((swift_isaMask & *(void *)v635) + 0x68)];
  strcpy(v636, "hapticOffset");
  v636[13] = 0;
  *((_WORD *)v636 + 7) = -5120;
  *(void *)&v635[*(void *)((swift_isaMask & *(void *)v635) + 0x70)] = v625;
  v635[*(void *)((swift_isaMask & *(void *)v635) + 0x78)] = 0;
  v825.receiver = v635;
  v825.super_class = v613;
  id v637 = v633;
  v618[180] = [super init];
  v638 = (char *)objc_allocWithZone(v613);
  *(void *)&v638[*(void *)((swift_isaMask & *(void *)v638) + 0x80)] = 0;
  *(void *)&v638[*(void *)((swift_isaMask & *(void *)v638) + 0x60)] = 0x3FEAF5C28F5C28F6;
  v639 = (unint64_t *)&v638[*(void *)((swift_isaMask & *(void *)v638) + 0x68)];
  unint64_t *v639 = v781;
  v639[1] = 0x80000001002BA640;
  *(void *)&v638[*(void *)((swift_isaMask & *(void *)v638) + 0x70)] = v625;
  v638[*(void *)((swift_isaMask & *(void *)v638) + 0x78)] = 0;
  v824.receiver = v638;
  v824.super_class = v613;
  id v640 = v637;
  v618[181] = [super init];
  v641 = (char *)objc_allocWithZone(v613);
  *(void *)&v641[*(void *)((swift_isaMask & *(void *)v641) + 0x80)] = 0;
  *(void *)&v641[*(void *)((swift_isaMask & *(void *)v641) + 0x60)] = 0x3FB0000000000000;
  v642 = (unint64_t *)&v641[*(void *)((swift_isaMask & *(void *)v641) + 0x68)];
  unint64_t *v642 = v771;
  v642[1] = 0x80000001002BA660;
  *(void *)&v641[*(void *)((swift_isaMask & *(void *)v641) + 0x70)] = v625;
  v641[*(void *)((swift_isaMask & *(void *)v641) + 0x78)] = 0;
  v823.receiver = v641;
  v823.super_class = v613;
  id v643 = v640;
  v618[182] = [super init];
  v644 = (char *)objc_allocWithZone(v613);
  *(void *)&v644[*(void *)((swift_isaMask & *(void *)v644) + 0x80)] = 0;
  *(void *)&v644[*(void *)((swift_isaMask & *(void *)v644) + 0x60)] = 0x3FD999999999999ALL;
  v645 = &v644[*(void *)((swift_isaMask & *(void *)v644) + 0x68)];
  *(void *)v645 = 0xD000000000000014;
  *((void *)v645 + 1) = 0x80000001002BA680;
  *(void *)&v644[*(void *)((swift_isaMask & *(void *)v644) + 0x70)] = v625;
  v644[*(void *)((swift_isaMask & *(void *)v644) + 0x78)] = 0;
  v822.receiver = v644;
  v822.super_class = v613;
  id v646 = v643;
  v618[183] = [super init];
  v647 = (char *)objc_allocWithZone(v613);
  *(void *)&v647[*(void *)((swift_isaMask & *(void *)v647) + 0x80)] = 0;
  *(void *)&v647[*(void *)((swift_isaMask & *(void *)v647) + 0x60)] = 0x3FC0000000000000;
  v648 = (unint64_t *)&v647[*(void *)((swift_isaMask & *(void *)v647) + 0x68)];
  unint64_t *v648 = v774;
  v648[1] = 0x80000001002BA6A0;
  *(void *)&v647[*(void *)((swift_isaMask & *(void *)v647) + 0x70)] = v625;
  v647[*(void *)((swift_isaMask & *(void *)v647) + 0x78)] = 0;
  v821.receiver = v647;
  v821.super_class = v613;
  id v649 = v646;
  v618[184] = [super init];
  v650 = (char *)objc_allocWithZone(v613);
  *(void *)&v650[*(void *)((swift_isaMask & *(void *)v650) + 0x80)] = 0;
  *(void *)&v650[*(void *)((swift_isaMask & *(void *)v650) + 0x60)] = 0;
  v651 = (unint64_t *)&v650[*(void *)((swift_isaMask & *(void *)v650) + 0x68)];
  unint64_t *v651 = v780;
  v651[1] = 0x80000001002BA6C0;
  *(void *)&v650[*(void *)((swift_isaMask & *(void *)v650) + 0x70)] = v625;
  v650[*(void *)((swift_isaMask & *(void *)v650) + 0x78)] = 0;
  v820.receiver = v650;
  v820.super_class = v613;
  id v652 = v649;
  v618[185] = [super init];
  v653 = v785;
  v654 = (char *)objc_allocWithZone(v785);
  *(void *)&v654[*(void *)((swift_isaMask & *(void *)v654) + 0x80)] = 0;
  v654[*(void *)((swift_isaMask & *(void *)v654) + 0x60)] = 0;
  v655 = (unint64_t *)&v654[*(void *)((swift_isaMask & *(void *)v654) + 0x68)];
  unint64_t *v655 = v783;
  v655[1] = 0x80000001002BA6E0;
  *(void *)&v654[*(void *)((swift_isaMask & *(void *)v654) + 0x70)] = v625;
  v654[*(void *)((swift_isaMask & *(void *)v654) + 0x78)] = 0;
  v819.receiver = v654;
  v819.super_class = v653;
  id v656 = v652;
  v618[186] = [super init];
  v657 = (char *)objc_allocWithZone(v653);
  *(void *)&v657[*(void *)((swift_isaMask & *(void *)v657) + 0x80)] = 0;
  v657[*(void *)((swift_isaMask & *(void *)v657) + 0x60)] = 1;
  v658 = &v657[*(void *)((swift_isaMask & *(void *)v657) + 0x68)];
  *(void *)v658 = 0x6D53676E69727073;
  *((void *)v658 + 1) = 0xEF676E6968746F6FLL;
  *(void *)&v657[*(void *)((swift_isaMask & *(void *)v657) + 0x70)] = v625;
  v657[*(void *)((swift_isaMask & *(void *)v657) + 0x78)] = 0;
  v818.receiver = v657;
  v818.super_class = v653;
  id v659 = v656;
  v618[187] = [super init];
  v660 = (char *)objc_allocWithZone(v653);
  *(void *)&v660[*(void *)((swift_isaMask & *(void *)v660) + 0x80)] = 0;
  v660[*(void *)((swift_isaMask & *(void *)v660) + 0x60)] = 0;
  v661 = (unint64_t *)&v660[*(void *)((swift_isaMask & *(void *)v660) + 0x68)];
  unint64_t *v661 = v775;
  v661[1] = 0x80000001002BA700;
  *(void *)&v660[*(void *)((swift_isaMask & *(void *)v660) + 0x70)] = v625;
  v660[*(void *)((swift_isaMask & *(void *)v660) + 0x78)] = 0;
  v817.receiver = v660;
  v817.super_class = v653;
  id v662 = v659;
  v618[188] = [super init];
  v663 = v770;
  v664 = (char *)objc_allocWithZone(v770);
  *(void *)&v664[*(void *)((swift_isaMask & *(void *)v664) + 0x80)] = 0;
  *(_DWORD *)&v664[*(void *)((swift_isaMask & *(void *)v664) + 0x60)] = 1082130432;
  v665 = (unint64_t *)&v664[*(void *)((swift_isaMask & *(void *)v664) + 0x68)];
  unint64_t v666 = v779;
  unint64_t *v665 = v779;
  v665[1] = 0x80000001002BA720;
  *(void *)&v664[*(void *)((swift_isaMask & *(void *)v664) + 0x70)] = v625;
  v664[*(void *)((swift_isaMask & *(void *)v664) + 0x78)] = 0;
  v816.receiver = v664;
  v816.super_class = v663;
  id v667 = v662;
  v618[189] = [super init];
  v668 = (char *)objc_allocWithZone(v663);
  *(void *)&v668[*(void *)((swift_isaMask & *(void *)v668) + 0x80)] = 0;
  *(_DWORD *)&v668[*(void *)((swift_isaMask & *(void *)v668) + 0x60)] = 1050253722;
  v669 = (unint64_t *)&v668[*(void *)((swift_isaMask & *(void *)v668) + 0x68)];
  unint64_t *v669 = v781;
  v669[1] = 0x80000001002BA740;
  *(void *)&v668[*(void *)((swift_isaMask & *(void *)v668) + 0x70)] = v625;
  v668[*(void *)((swift_isaMask & *(void *)v668) + 0x78)] = 0;
  v815.receiver = v668;
  v815.super_class = v663;
  id v670 = v667;
  v618[190] = [super init];
  v671 = v767;
  v672 = (char *)objc_allocWithZone(v767);
  *(void *)&v672[*(void *)((swift_isaMask & *(void *)v672) + 0x80)] = 0;
  v672[*(void *)((swift_isaMask & *(void *)v672) + 0x60)] = 2;
  v673 = &v672[*(void *)((swift_isaMask & *(void *)v672) + 0x68)];
  strcpy(v673, "forceResponder");
  v673[15] = -18;
  *(void *)&v672[*(void *)((swift_isaMask & *(void *)v672) + 0x70)] = v625;
  v672[*(void *)((swift_isaMask & *(void *)v672) + 0x78)] = 0;
  v814.receiver = v672;
  v814.super_class = v671;
  id v674 = v670;
  v634[191] = [super init];
  v675 = v785;
  v676 = (char *)objc_allocWithZone(v785);
  *(void *)&v676[*(void *)((swift_isaMask & *(void *)v676) + 0x80)] = 0;
  v676[*(void *)((swift_isaMask & *(void *)v676) + 0x60)] = 0;
  v677 = &v676[*(void *)((swift_isaMask & *(void *)v676) + 0x68)];
  *(void *)v677 = v666;
  *((void *)v677 + 1) = 0x80000001002BA760;
  *(void *)&v676[*(void *)((swift_isaMask & *(void *)v676) + 0x70)] = v625;
  v676[*(void *)((swift_isaMask & *(void *)v676) + 0x78)] = 0;
  v813.receiver = v676;
  v813.super_class = v675;
  id v678 = v674;
  v634[192] = [super init];
  v679 = (char *)objc_allocWithZone(v675);
  *(void *)&v679[*(void *)((swift_isaMask & *(void *)v679) + 0x80)] = 0;
  v679[*(void *)((swift_isaMask & *(void *)v679) + 0x60)] = 1;
  v680 = &v679[*(void *)((swift_isaMask & *(void *)v679) + 0x68)];
  *(void *)v680 = 0xD000000000000014;
  *((void *)v680 + 1) = 0x80000001002BA780;
  *(void *)&v679[*(void *)((swift_isaMask & *(void *)v679) + 0x70)] = v625;
  v679[*(void *)((swift_isaMask & *(void *)v679) + 0x78)] = 0;
  v812.receiver = v679;
  v812.super_class = v675;
  id v681 = v678;
  v634[193] = [super init];
  v682 = (char *)objc_allocWithZone(v675);
  *(void *)&v682[*(void *)((swift_isaMask & *(void *)v682) + 0x80)] = 0;
  v682[*(void *)((swift_isaMask & *(void *)v682) + 0x60)] = 1;
  v683 = &v682[*(void *)((swift_isaMask & *(void *)v682) + 0x68)];
  *(void *)v683 = 0x45676E69676E6172;
  *((void *)v683 + 1) = 0xEF646563726F666ELL;
  *(void *)&v682[*(void *)((swift_isaMask & *(void *)v682) + 0x70)] = v625;
  v682[*(void *)((swift_isaMask & *(void *)v682) + 0x78)] = 0;
  v811.receiver = v682;
  v811.super_class = v675;
  id v684 = v681;
  v634[194] = [super init];
  v685 = (char *)objc_allocWithZone(v671);
  *(void *)&v685[*(void *)((swift_isaMask & *(void *)v685) + 0x80)] = 0;
  v685[*(void *)((swift_isaMask & *(void *)v685) + 0x60)] = 2;
  v686 = (unint64_t *)&v685[*(void *)((swift_isaMask & *(void *)v685) + 0x68)];
  unint64_t *v686 = v780;
  v686[1] = 0x80000001002BA7A0;
  *(void *)&v685[*(void *)((swift_isaMask & *(void *)v685) + 0x70)] = v625;
  v685[*(void *)((swift_isaMask & *(void *)v685) + 0x78)] = 0;
  v810.receiver = v685;
  v810.super_class = v671;
  id v687 = v684;
  v634[195] = [super init];
  v688 = v769;
  v689 = (char *)objc_allocWithZone(v769);
  *(void *)&v689[*(void *)((swift_isaMask & *(void *)v689) + 0x80)] = 0;
  v690 = &v689[*(void *)((swift_isaMask & *(void *)v689) + 0x60)];
  *(void *)v690 = 0;
  *((void *)v690 + 1) = 0;
  v691 = (unint64_t *)&v689[*(void *)((swift_isaMask & *(void *)v689) + 0x68)];
  unint64_t *v691 = v784;
  v691[1] = 0x80000001002BA7C0;
  *(void *)&v689[*(void *)((swift_isaMask & *(void *)v689) + 0x70)] = v625;
  v689[*(void *)((swift_isaMask & *(void *)v689) + 0x78)] = 0;
  v809.receiver = v689;
  v809.super_class = v688;
  id v692 = v687;
  v634[196] = [super init];
  v693 = (char *)objc_allocWithZone(v675);
  *(void *)&v693[*(void *)((swift_isaMask & *(void *)v693) + 0x80)] = 0;
  v693[*(void *)((swift_isaMask & *(void *)v693) + 0x60)] = 1;
  v694 = &v693[*(void *)((swift_isaMask & *(void *)v693) + 0x68)];
  strcpy(v694, "allowRetries");
  v694[13] = 0;
  *((_WORD *)v694 + 7) = -5120;
  *(void *)&v693[*(void *)((swift_isaMask & *(void *)v693) + 0x70)] = v625;
  v693[*(void *)((swift_isaMask & *(void *)v693) + 0x78)] = 0;
  v808.receiver = v693;
  v808.super_class = v675;
  v695 = v675;
  id v696 = v692;
  v634[197] = [super init];
  v697 = v776;
  v698 = (char *)objc_allocWithZone(v776);
  *(void *)&v698[*(void *)((swift_isaMask & *(void *)v698) + 0x80)] = 0;
  *(void *)&v698[*(void *)((swift_isaMask & *(void *)v698) + 0x60)] = 0;
  v699 = (unint64_t *)&v698[*(void *)((swift_isaMask & *(void *)v698) + 0x68)];
  unint64_t *v699 = v779;
  v699[1] = 0x80000001002BA7E0;
  *(void *)&v698[*(void *)((swift_isaMask & *(void *)v698) + 0x70)] = v625;
  v698[*(void *)((swift_isaMask & *(void *)v698) + 0x78)] = 0;
  v807.receiver = v698;
  v807.super_class = v697;
  id v700 = v696;
  v634[198] = [super init];
  v701 = (char *)objc_allocWithZone(v697);
  *(void *)&v701[*(void *)((swift_isaMask & *(void *)v701) + 0x80)] = 0;
  *(void *)&v701[*(void *)((swift_isaMask & *(void *)v701) + 0x60)] = 0;
  v702 = (unint64_t *)&v701[*(void *)((swift_isaMask & *(void *)v701) + 0x68)];
  unint64_t *v702 = v787;
  v702[1] = 0x80000001002BA800;
  *(void *)&v701[*(void *)((swift_isaMask & *(void *)v701) + 0x70)] = v625;
  v701[*(void *)((swift_isaMask & *(void *)v701) + 0x78)] = 0;
  v806.receiver = v701;
  v806.super_class = v697;
  id v703 = v700;
  v634[199] = [super init];
  v704 = v786;
  v705 = (char *)objc_allocWithZone(v786);
  *(void *)&v705[*(void *)((swift_isaMask & *(void *)v705) + 0x80)] = 0;
  *(void *)&v705[*(void *)((swift_isaMask & *(void *)v705) + 0x60)] = 0;
  v706 = (unint64_t *)&v705[*(void *)((swift_isaMask & *(void *)v705) + 0x68)];
  unint64_t *v706 = v774;
  v706[1] = 0x80000001002BA820;
  *(void *)&v705[*(void *)((swift_isaMask & *(void *)v705) + 0x70)] = v625;
  v705[*(void *)((swift_isaMask & *(void *)v705) + 0x78)] = 0;
  v805.receiver = v705;
  v805.super_class = v704;
  id v707 = v703;
  v634[200] = [super init];
  v708 = (char *)objc_allocWithZone(v695);
  *(void *)&v708[*(void *)((swift_isaMask & *(void *)v708) + 0x80)] = 0;
  v708[*(void *)((swift_isaMask & *(void *)v708) + 0x60)] = 0;
  v709 = &v708[*(void *)((swift_isaMask & *(void *)v708) + 0x68)];
  *(void *)v709 = 0x44676E69676E6172;
  *((void *)v709 + 1) = 0xEF64656C62617369;
  *(void *)&v708[*(void *)((swift_isaMask & *(void *)v708) + 0x70)] = v625;
  v708[*(void *)((swift_isaMask & *(void *)v708) + 0x78)] = 0;
  v804.receiver = v708;
  v804.super_class = v695;
  id v710 = v707;
  v634[201] = [super init];
  v711 = v770;
  v712 = (char *)objc_allocWithZone(v770);
  *(void *)&v712[*(void *)((swift_isaMask & *(void *)v712) + 0x80)] = 0;
  *(_DWORD *)&v712[*(void *)((swift_isaMask & *(void *)v712) + 0x60)] = 1092616192;
  v713 = (unint64_t *)&v712[*(void *)((swift_isaMask & *(void *)v712) + 0x68)];
  unint64_t *v713 = v784;
  v713[1] = 0x80000001002BA840;
  *(void *)&v712[*(void *)((swift_isaMask & *(void *)v712) + 0x70)] = v625;
  v712[*(void *)((swift_isaMask & *(void *)v712) + 0x78)] = 0;
  v803.receiver = v712;
  v803.super_class = v711;
  id v714 = v710;
  v634[202] = [super init];
  v715 = (char *)objc_allocWithZone(v711);
  *(void *)&v715[*(void *)((swift_isaMask & *(void *)v715) + 0x80)] = 0;
  *(_DWORD *)&v715[*(void *)((swift_isaMask & *(void *)v715) + 0x60)] = 1092616192;
  v716 = &v715[*(void *)((swift_isaMask & *(void *)v715) + 0x68)];
  *(void *)v716 = 0x6E61747369447462;
  *((void *)v716 + 1) = 0xEF656772614C6563;
  *(void *)&v715[*(void *)((swift_isaMask & *(void *)v715) + 0x70)] = v625;
  v715[*(void *)((swift_isaMask & *(void *)v715) + 0x78)] = 0;
  v802.receiver = v715;
  v802.super_class = v711;
  id v717 = v714;
  v634[203] = [super init];
  v718 = (char *)objc_allocWithZone(v711);
  *(void *)&v718[*(void *)((swift_isaMask & *(void *)v718) + 0x80)] = 0;
  *(_DWORD *)&v718[*(void *)((swift_isaMask & *(void *)v718) + 0x60)] = 1092616192;
  v719 = &v718[*(void *)((swift_isaMask & *(void *)v718) + 0x68)];
  *(void *)v719 = 0x6E61747369447462;
  *((void *)v719 + 1) = 0xEF726568744F6563;
  *(void *)&v718[*(void *)((swift_isaMask & *(void *)v718) + 0x70)] = v625;
  v718[*(void *)((swift_isaMask & *(void *)v718) + 0x78)] = 0;
  v801.receiver = v718;
  v801.super_class = v711;
  id v720 = v717;
  v634[204] = [super init];
  v721 = (char *)objc_allocWithZone(v711);
  *(void *)&v721[*(void *)((swift_isaMask & *(void *)v721) + 0x80)] = 0;
  *(_DWORD *)&v721[*(void *)((swift_isaMask & *(void *)v721) + 0x60)] = 1056964608;
  v722 = (unint64_t *)&v721[*(void *)((swift_isaMask & *(void *)v721) + 0x68)];
  unint64_t v723 = v779;
  unint64_t *v722 = v779;
  v722[1] = 0x80000001002BA860;
  *(void *)&v721[*(void *)((swift_isaMask & *(void *)v721) + 0x70)] = v625;
  v721[*(void *)((swift_isaMask & *(void *)v721) + 0x78)] = 0;
  v800.receiver = v721;
  v800.super_class = v711;
  id v724 = v720;
  v634[205] = [super init];
  v725 = (char *)objc_allocWithZone(v711);
  *(void *)&v725[*(void *)((swift_isaMask & *(void *)v725) + 0x80)] = 0;
  *(_DWORD *)&v725[*(void *)((swift_isaMask & *(void *)v725) + 0x60)] = 1033476506;
  v726 = (unint64_t *)&v725[*(void *)((swift_isaMask & *(void *)v725) + 0x68)];
  unint64_t *v726 = v787;
  v726[1] = 0x80000001002BA880;
  *(void *)&v725[*(void *)((swift_isaMask & *(void *)v725) + 0x70)] = v625;
  v725[*(void *)((swift_isaMask & *(void *)v725) + 0x78)] = 0;
  v799.receiver = v725;
  v799.super_class = v711;
  id v727 = v724;
  v634[206] = [super init];
  v728 = (char *)objc_allocWithZone(v711);
  *(void *)&v728[*(void *)((swift_isaMask & *(void *)v728) + 0x80)] = 0;
  *(_DWORD *)&v728[*(void *)((swift_isaMask & *(void *)v728) + 0x60)] = 1040522936;
  v729 = &v728[*(void *)((swift_isaMask & *(void *)v728) + 0x68)];
  *(void *)v729 = 0xD000000000000014;
  *((void *)v729 + 1) = 0x80000001002BA8A0;
  *(void *)&v728[*(void *)((swift_isaMask & *(void *)v728) + 0x70)] = v625;
  v728[*(void *)((swift_isaMask & *(void *)v728) + 0x78)] = 0;
  v798.receiver = v728;
  v798.super_class = v711;
  id v730 = v727;
  v634[207] = [super init];
  v731 = (char *)objc_allocWithZone(v711);
  *(void *)&v731[*(void *)((swift_isaMask & *(void *)v731) + 0x80)] = 0;
  *(_DWORD *)&v731[*(void *)((swift_isaMask & *(void *)v731) + 0x60)] = 1042536202;
  v732 = &v731[*(void *)((swift_isaMask & *(void *)v731) + 0x68)];
  *(void *)v732 = 0xD000000000000014;
  *((void *)v732 + 1) = 0x80000001002BA8C0;
  *(void *)&v731[*(void *)((swift_isaMask & *(void *)v731) + 0x70)] = v625;
  v731[*(void *)((swift_isaMask & *(void *)v731) + 0x78)] = 0;
  v797.receiver = v731;
  v797.super_class = v711;
  id v733 = v730;
  v634[208] = [super init];
  v734 = (char *)objc_allocWithZone(v711);
  *(void *)&v734[*(void *)((swift_isaMask & *(void *)v734) + 0x80)] = 0;
  *(_DWORD *)&v734[*(void *)((swift_isaMask & *(void *)v734) + 0x60)] = 0x40000000;
  v735 = (unint64_t *)&v734[*(void *)((swift_isaMask & *(void *)v734) + 0x68)];
  unint64_t *v735 = v772;
  v735[1] = 0x80000001002BA8E0;
  *(void *)&v734[*(void *)((swift_isaMask & *(void *)v734) + 0x70)] = v625;
  v734[*(void *)((swift_isaMask & *(void *)v734) + 0x78)] = 0;
  v796.receiver = v734;
  v796.super_class = v711;
  id v736 = v733;
  v634[209] = [super init];
  v737 = (char *)objc_allocWithZone(v711);
  *(void *)&v737[*(void *)((swift_isaMask & *(void *)v737) + 0x80)] = 0;
  *(_DWORD *)&v737[*(void *)((swift_isaMask & *(void *)v737) + 0x60)] = 0x40000000;
  v738 = &v737[*(void *)((swift_isaMask & *(void *)v737) + 0x68)];
  *(void *)v738 = v723;
  *((void *)v738 + 1) = 0x80000001002BA900;
  *(void *)&v737[*(void *)((swift_isaMask & *(void *)v737) + 0x70)] = v625;
  v737[*(void *)((swift_isaMask & *(void *)v737) + 0x78)] = 0;
  v795.receiver = v737;
  v795.super_class = v711;
  id v739 = v736;
  v634[210] = [super init];
  v740 = (char *)objc_allocWithZone(v711);
  *(void *)&v740[*(void *)((swift_isaMask & *(void *)v740) + 0x80)] = 0;
  *(_DWORD *)&v740[*(void *)((swift_isaMask & *(void *)v740) + 0x60)] = 0x40000000;
  v741 = &v740[*(void *)((swift_isaMask & *(void *)v740) + 0x68)];
  *(void *)v741 = v723;
  *((void *)v741 + 1) = 0x80000001002BA920;
  *(void *)&v740[*(void *)((swift_isaMask & *(void *)v740) + 0x70)] = v625;
  v740[*(void *)((swift_isaMask & *(void *)v740) + 0x78)] = 0;
  v794.receiver = v740;
  v794.super_class = v711;
  id v742 = v739;
  v634[211] = [super init];
  v743 = (char *)objc_allocWithZone(v711);
  *(void *)&v743[*(void *)((swift_isaMask & *(void *)v743) + 0x80)] = 0;
  *(_DWORD *)&v743[*(void *)((swift_isaMask & *(void *)v743) + 0x60)] = 1067450368;
  v744 = (unint64_t *)&v743[*(void *)((swift_isaMask & *(void *)v743) + 0x68)];
  unint64_t *v744 = v780;
  v744[1] = 0x80000001002BA940;
  *(void *)&v743[*(void *)((swift_isaMask & *(void *)v743) + 0x70)] = v625;
  v743[*(void *)((swift_isaMask & *(void *)v743) + 0x78)] = 0;
  v793.receiver = v743;
  v793.super_class = v711;
  id v745 = v742;
  v634[212] = [super init];
  v746 = (char *)objc_allocWithZone(v711);
  *(void *)&v746[*(void *)((swift_isaMask & *(void *)v746) + 0x80)] = 0;
  *(_DWORD *)&v746[*(void *)((swift_isaMask & *(void *)v746) + 0x60)] = 1067450368;
  v747 = (unint64_t *)&v746[*(void *)((swift_isaMask & *(void *)v746) + 0x68)];
  unint64_t v748 = v782;
  unint64_t *v747 = v782;
  v747[1] = 0x80000001002BA960;
  *(void *)&v746[*(void *)((swift_isaMask & *(void *)v746) + 0x70)] = v625;
  v746[*(void *)((swift_isaMask & *(void *)v746) + 0x78)] = 0;
  v792.receiver = v746;
  v792.super_class = v711;
  id v749 = v745;
  v634[213] = [super init];
  v750 = (char *)objc_allocWithZone(v711);
  *(void *)&v750[*(void *)((swift_isaMask & *(void *)v750) + 0x80)] = 0;
  *(_DWORD *)&v750[*(void *)((swift_isaMask & *(void *)v750) + 0x60)] = 1067450368;
  v751 = &v750[*(void *)((swift_isaMask & *(void *)v750) + 0x68)];
  *(void *)v751 = v748;
  *((void *)v751 + 1) = 0x80000001002BA980;
  *(void *)&v750[*(void *)((swift_isaMask & *(void *)v750) + 0x70)] = v625;
  v750[*(void *)((swift_isaMask & *(void *)v750) + 0x78)] = 0;
  v791.receiver = v750;
  v791.super_class = v711;
  id v752 = v749;
  v634[214] = [super init];
  v753 = (char *)objc_allocWithZone(v711);
  *(void *)&v753[*(void *)((swift_isaMask & *(void *)v753) + 0x80)] = 0;
  *(_DWORD *)&v753[*(void *)((swift_isaMask & *(void *)v753) + 0x60)] = 1050253722;
  v754 = (unint64_t *)&v753[*(void *)((swift_isaMask & *(void *)v753) + 0x68)];
  unint64_t *v754 = v787;
  v754[1] = 0x80000001002BA9A0;
  *(void *)&v753[*(void *)((swift_isaMask & *(void *)v753) + 0x70)] = v625;
  v753[*(void *)((swift_isaMask & *(void *)v753) + 0x78)] = 0;
  v790.receiver = v753;
  v790.super_class = v711;
  id v755 = v752;
  v634[215] = [super init];
  v756 = (char *)objc_allocWithZone(v711);
  *(void *)&v756[*(void *)((swift_isaMask & *(void *)v756) + 0x80)] = 0;
  *(_DWORD *)&v756[*(void *)((swift_isaMask & *(void *)v756) + 0x60)] = 1052266988;
  v757 = &v756[*(void *)((swift_isaMask & *(void *)v756) + 0x68)];
  *(void *)v757 = 0xD000000000000014;
  *((void *)v757 + 1) = 0x80000001002BA9C0;
  *(void *)&v756[*(void *)((swift_isaMask & *(void *)v756) + 0x70)] = v625;
  v756[*(void *)((swift_isaMask & *(void *)v756) + 0x78)] = 0;
  v789.receiver = v756;
  v789.super_class = v711;
  id v758 = v755;
  v634[216] = [super init];
  v759 = (char *)objc_allocWithZone(v711);
  *(void *)&v759[*(void *)((swift_isaMask & *(void *)v759) + 0x80)] = 0;
  *(_DWORD *)&v759[*(void *)((swift_isaMask & *(void *)v759) + 0x60)] = 1052266988;
  v760 = &v759[*(void *)((swift_isaMask & *(void *)v759) + 0x68)];
  *(void *)v760 = 0xD000000000000014;
  *((void *)v760 + 1) = 0x80000001002BA9E0;
  *(void *)&v759[*(void *)((swift_isaMask & *(void *)v759) + 0x70)] = v625;
  v759[*(void *)((swift_isaMask & *(void *)v759) + 0x78)] = 0;
  v788.receiver = v759;
  v788.super_class = v711;
  id v761 = v758;
  v634[217] = [super init];
  return v634;
}

uint64_t sub_1000B03BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A38C(&qword_10035E158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B0424(uint64_t a1)
{
  uint64_t v2 = sub_10000A38C(&qword_10035E158);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000B0484(Swift::String a1)
{
  v1._rawValue = &off_10031DCE8;
  return sub_1000B049C(a1, v1);
}

unint64_t sub_1000B0490(Swift::String a1)
{
  v1._rawValue = &off_10031DE20;
  return sub_1000B049C(a1, v1);
}

unint64_t sub_1000B049C(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  unint64_t v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  if (v5 >= 5) {
    return 5;
  }
  else {
    return v5;
  }
}

unint64_t sub_1000B04E4()
{
  unint64_t result = qword_100363370;
  if (!qword_100363370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363370);
  }
  return result;
}

unint64_t sub_1000B0538()
{
  unint64_t result = qword_100363378;
  if (!qword_100363378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363378);
  }
  return result;
}

unint64_t sub_1000B058C()
{
  unint64_t result = qword_100363380;
  if (!qword_100363380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363380);
  }
  return result;
}

unint64_t sub_1000B05E0()
{
  unint64_t result = qword_100363388;
  if (!qword_100363388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363388);
  }
  return result;
}

uint64_t sub_1000B0634(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = a3;
  uint64_t v44 = a2;
  uint64_t v4 = sub_10000A38C(&qword_100363398);
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  __chkstk_darwin(v4);
  unint64_t v43 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A38C(&qword_1003633A0);
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  __chkstk_darwin(v6);
  BOOL v40 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A38C(&qword_1003633A8);
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  __chkstk_darwin(v8);
  char v37 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A38C(&qword_1003633B0);
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  __chkstk_darwin(v10);
  objc_super v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000A38C(&qword_1003633B8);
  uint64_t v34 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000A38C(&qword_1003633C0);
  uint64_t v33 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  int64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000A38C(&qword_1003633C8);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v47 = v19;
  uint64_t v48 = v20;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D6E4(a1, a1[3]);
  sub_1000B183C();
  uint64_t v23 = v49;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  switch(v23)
  {
    case 0:
      char v50 = 0;
      sub_1000B1A34();
      uint64_t v24 = v47;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v18, v16);
      goto LABEL_9;
    case 1:
      char v51 = 1;
      sub_1000B19E0();
      uint64_t v29 = v47;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v13);
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v22, v29);
    case 2:
      char v52 = 2;
      sub_1000B198C();
      uint64_t v24 = v47;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v36);
      goto LABEL_9;
    case 3:
      char v53 = 3;
      sub_1000B1938();
      id v30 = v37;
      uint64_t v24 = v47;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v32 = v38;
      uint64_t v31 = v39;
      goto LABEL_8;
    case 4:
      char v54 = 4;
      sub_1000B18E4();
      id v30 = v40;
      uint64_t v24 = v47;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v32 = v41;
      uint64_t v31 = v42;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v31);
LABEL_9:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v22, v24);
      break;
    default:
      char v55 = 5;
      sub_1000B1890();
      uint64_t v25 = v43;
      uint64_t v26 = v47;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v27 = v46;
      KeyedEncodingContainer.encode(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v27);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v22, v26);
      break;
  }
  return result;
}

Swift::Int sub_1000B0C90(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  switch(a2)
  {
    case 0:
      Swift::UInt v3 = 0;
      goto LABEL_8;
    case 1:
      Swift::UInt v3 = 1;
      goto LABEL_8;
    case 2:
      Swift::UInt v3 = 2;
      goto LABEL_8;
    case 3:
      Swift::UInt v3 = 3;
      goto LABEL_8;
    case 4:
      Swift::UInt v3 = 4;
LABEL_8:
      Hasher._combine(_:)(v3);
      break;
    default:
      Hasher._combine(_:)(5uLL);
      String.hash(into:)();
      break;
  }
  return Hasher._finalize()();
}

uint64_t sub_1000B0D74()
{
  return 0x4449656C646E7562;
}

uint64_t sub_1000B0D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1000B0E24(uint64_t a1)
{
  unint64_t v2 = sub_1000B1890();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B0E60(uint64_t a1)
{
  unint64_t v2 = sub_1000B1890();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B0E9C()
{
  uint64_t result = 0x656D697465636166;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x636973756DLL;
      break;
    case 2:
      uint64_t result = 0x6979616C50776F6ELL;
      break;
    case 3:
      uint64_t result = 0x746E6F43786F7270;
      break;
    case 4:
      uint64_t result = 0x697261666173;
      break;
    case 5:
      uint64_t result = 0x4449656C646E7562;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000B0F68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000B1B44(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000B0F90(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1000B0F9C(uint64_t a1)
{
  unint64_t v2 = sub_1000B183C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B0FD8(uint64_t a1)
{
  unint64_t v2 = sub_1000B183C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B1014(uint64_t a1)
{
  unint64_t v2 = sub_1000B1A34();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B1050(uint64_t a1)
{
  unint64_t v2 = sub_1000B1A34();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B108C(uint64_t a1)
{
  unint64_t v2 = sub_1000B19E0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B10C8(uint64_t a1)
{
  unint64_t v2 = sub_1000B19E0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B1104(uint64_t a1)
{
  unint64_t v2 = sub_1000B198C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B1140(uint64_t a1)
{
  unint64_t v2 = sub_1000B198C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B117C(uint64_t a1)
{
  unint64_t v2 = sub_1000B1938();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B11B8(uint64_t a1)
{
  unint64_t v2 = sub_1000B1938();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B11F4(uint64_t a1)
{
  unint64_t v2 = sub_1000B18E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B1230(uint64_t a1)
{
  unint64_t v2 = sub_1000B18E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000B126C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000B1DE8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1000B1298(void *a1)
{
  return sub_1000B0634(a1, *v1, v1[1]);
}

uint64_t sub_1000B12B4()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = 0x656D695465636146;
  switch(v2)
  {
    case 0uLL:
      break;
    case 1uLL:
      uint64_t v3 = 0x636973754DLL;
      break;
    case 2uLL:
      uint64_t v3 = 0x79616C5020776F4ELL;
      break;
    case 3uLL:
      uint64_t v3 = 0x746E6F43786F7250;
      break;
    case 4uLL:
      uint64_t v3 = 0x697261666153;
      break;
    default:
      uint64_t v3 = v1;
      break;
  }
  sub_10001F9D4(v1, v2);
  return v3;
}

ValueMetadata *type metadata accessor for LaunchAppService()
{
  return &type metadata for LaunchAppService;
}

unint64_t destroy for LaunchAppService.App(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s17proximitycontrold16LaunchAppServiceO3AppOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for LaunchAppService.App(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LaunchAppService.App(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchAppService.App(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 4;
  if (v4 >= 6) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LaunchAppService.App(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 4;
    }
  }
  return result;
}

uint64_t sub_1000B15D0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1000B15E8(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchAppService.App()
{
  return &type metadata for LaunchAppService.App;
}

unint64_t sub_1000B161C()
{
  unint64_t result = qword_100363390;
  if (!qword_100363390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363390);
  }
  return result;
}

uint64_t sub_1000B1670(uint64_t *a1, uint64_t a2)
{
  return sub_1000B1A88(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

Swift::Int sub_1000B1684()
{
  return sub_1000B0C90(*v0, v0[1]);
}

void sub_1000B168C()
{
  switch(*(void *)(v0 + 8))
  {
    case 0:
      Swift::UInt v1 = 0;
      goto LABEL_10;
    case 1:
      Swift::UInt v1 = 1;
      goto LABEL_10;
    case 2:
      Swift::UInt v1 = 2;
      goto LABEL_10;
    case 3:
      Swift::UInt v1 = 3;
      goto LABEL_10;
    case 4:
      Swift::UInt v1 = 4;
LABEL_10:
      Hasher._combine(_:)(v1);
      break;
    default:
      Hasher._combine(_:)(5uLL);
      String.hash(into:)();
      break;
  }
}

Swift::Int sub_1000B1760()
{
  uint64_t v1 = *(void *)(v0 + 8);
  Hasher.init(_seed:)();
  switch(v1)
  {
    case 0:
      Swift::UInt v2 = 0;
      goto LABEL_8;
    case 1:
      Swift::UInt v2 = 1;
      goto LABEL_8;
    case 2:
      Swift::UInt v2 = 2;
      goto LABEL_8;
    case 3:
      Swift::UInt v2 = 3;
      goto LABEL_8;
    case 4:
      Swift::UInt v2 = 4;
LABEL_8:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(5uLL);
      String.hash(into:)();
      break;
  }
  return Hasher._finalize()();
}

unint64_t sub_1000B183C()
{
  unint64_t result = qword_1003633D0;
  if (!qword_1003633D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003633D0);
  }
  return result;
}

unint64_t sub_1000B1890()
{
  unint64_t result = qword_1003633D8;
  if (!qword_1003633D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003633D8);
  }
  return result;
}

unint64_t sub_1000B18E4()
{
  unint64_t result = qword_1003633E0;
  if (!qword_1003633E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003633E0);
  }
  return result;
}

unint64_t sub_1000B1938()
{
  unint64_t result = qword_1003633E8;
  if (!qword_1003633E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003633E8);
  }
  return result;
}

unint64_t sub_1000B198C()
{
  unint64_t result = qword_1003633F0;
  if (!qword_1003633F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003633F0);
  }
  return result;
}

unint64_t sub_1000B19E0()
{
  unint64_t result = qword_1003633F8;
  if (!qword_1003633F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003633F8);
  }
  return result;
}

unint64_t sub_1000B1A34()
{
  unint64_t result = qword_100363400;
  if (!qword_100363400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363400);
  }
  return result;
}

uint64_t sub_1000B1A88(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2)
  {
    case 0:
      if (a4) {
        goto LABEL_16;
      }
      uint64_t result = 1;
      break;
    case 1:
      if (a4 != 1) {
        goto LABEL_16;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a4 != 2) {
        goto LABEL_16;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a4 != 3) {
        goto LABEL_16;
      }
      uint64_t result = 1;
      break;
    case 4:
      if (a4 != 4) {
        goto LABEL_16;
      }
      uint64_t result = 1;
      break;
    default:
      if (a4 < 5)
      {
LABEL_16:
        uint64_t result = 0;
      }
      else if (a1 == a3 && a2 == a4)
      {
        uint64_t result = 1;
      }
      else
      {
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      break;
  }
  return result;
}

uint64_t sub_1000B1B44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D697465636166 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636973756DLL && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6979616C50776F6ELL && a2 == 0xEA0000000000676ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E6F43786F7270 && a2 == 0xEF6F6D65446C6F72 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x697261666173 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1000B1DE8(void *a1)
{
  uint64_t v48 = sub_10000A38C(&qword_100363408);
  uint64_t v53 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v49 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000A38C(&qword_100363410);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  uint64_t v47 = v4;
  __chkstk_darwin(v3);
  char v52 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A38C(&qword_100363418);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  __chkstk_darwin(v6);
  char v51 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A38C(&qword_100363420);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  __chkstk_darwin(v8);
  char v50 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A38C(&qword_100363428);
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v41 = v10;
  __chkstk_darwin(v10);
  objc_super v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000A38C(&qword_100363430);
  uint64_t v39 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000A38C(&qword_100363438);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  char v54 = a1;
  sub_10000D6E4(a1, v20);
  sub_1000B183C();
  uint64_t v21 = v55;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v21)
  {
    uint64_t v38 = v13;
    char v55 = v12;
    uint64_t v22 = v51;
    uint64_t v23 = v52;
    uint64_t v24 = v53;
    uint64_t v25 = KeyedDecodingContainer.allKeys.getter();
    uint64_t v26 = v16;
    if (*(void *)(v25 + 16) == 1)
    {
      uint64_t v27 = v19;
      switch(*(unsigned char *)(v25 + 32))
      {
        case 1:
          char v57 = 1;
          sub_1000B19E0();
          id v30 = v55;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v41);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v26);
          uint64_t v20 = 0;
          break;
        case 2:
          char v58 = 2;
          sub_1000B198C();
          uint64_t v31 = v50;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v43);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v26);
          uint64_t v20 = 0;
          break;
        case 3:
          char v59 = 3;
          sub_1000B1938();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v44 + 8))(v22, v45);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v26);
          uint64_t v20 = 0;
          break;
        case 4:
          char v60 = 4;
          sub_1000B18E4();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v47 + 8))(v23, v46);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v26);
          uint64_t v20 = 0;
          break;
        case 5:
          uint64_t v32 = v24;
          char v61 = 5;
          sub_1000B1890();
          uint64_t v33 = v49;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v48;
          uint64_t v35 = KeyedDecodingContainer.decode(_:forKey:)();
          uint64_t v36 = v33;
          uint64_t v20 = v35;
          (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v34);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v17 + 8))(v27, v26);
          break;
        default:
          char v56 = 0;
          sub_1000B1A34();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v38);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v26);
          uint64_t v20 = 0;
          break;
      }
    }
    else
    {
      uint64_t v20 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v29 = v28;
      sub_10000A38C(&qword_10035FAC0);
      *uint64_t v29 = &type metadata for LaunchAppService.App;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v29, enum case for DecodingError.typeMismatch(_:), v20);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
  }
  sub_10000CC5C((uint64_t)v54);
  return v20;
}

unsigned char *storeEnumTagSinglePayload for LaunchAppService.App.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B27C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchAppService.App.CodingKeys()
{
  return &type metadata for LaunchAppService.App.CodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAppService.App.FacetimeCodingKeys()
{
  return &type metadata for LaunchAppService.App.FacetimeCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAppService.App.MusicCodingKeys()
{
  return &type metadata for LaunchAppService.App.MusicCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAppService.App.NowPlayingCodingKeys()
{
  return &type metadata for LaunchAppService.App.NowPlayingCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAppService.App.ProxControlDemoCodingKeys()
{
  return &type metadata for LaunchAppService.App.ProxControlDemoCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAppService.App.SafariCodingKeys()
{
  return &type metadata for LaunchAppService.App.SafariCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LaunchAppService.App.BundleIDCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000B28E8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchAppService.App.BundleIDCodingKeys()
{
  return &type metadata for LaunchAppService.App.BundleIDCodingKeys;
}

unint64_t sub_1000B2924()
{
  unint64_t result = qword_100363440;
  if (!qword_100363440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363440);
  }
  return result;
}

unint64_t sub_1000B297C()
{
  unint64_t result = qword_100363448;
  if (!qword_100363448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363448);
  }
  return result;
}

unint64_t sub_1000B29D4()
{
  unint64_t result = qword_100363450;
  if (!qword_100363450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363450);
  }
  return result;
}

unint64_t sub_1000B2A2C()
{
  unint64_t result = qword_100363458;
  if (!qword_100363458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363458);
  }
  return result;
}

unint64_t sub_1000B2A84()
{
  unint64_t result = qword_100363460;
  if (!qword_100363460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363460);
  }
  return result;
}

unint64_t sub_1000B2ADC()
{
  unint64_t result = qword_100363468;
  if (!qword_100363468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363468);
  }
  return result;
}

unint64_t sub_1000B2B34()
{
  unint64_t result = qword_100363470;
  if (!qword_100363470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363470);
  }
  return result;
}

unint64_t sub_1000B2B8C()
{
  unint64_t result = qword_100363478;
  if (!qword_100363478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363478);
  }
  return result;
}

unint64_t sub_1000B2BE4()
{
  unint64_t result = qword_100363480;
  if (!qword_100363480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363480);
  }
  return result;
}

unint64_t sub_1000B2C3C()
{
  unint64_t result = qword_100363488;
  if (!qword_100363488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363488);
  }
  return result;
}

unint64_t sub_1000B2C94()
{
  unint64_t result = qword_100363490;
  if (!qword_100363490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363490);
  }
  return result;
}

unint64_t sub_1000B2CEC()
{
  unint64_t result = qword_100363498;
  if (!qword_100363498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363498);
  }
  return result;
}

unint64_t sub_1000B2D44()
{
  unint64_t result = qword_1003634A0;
  if (!qword_1003634A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003634A0);
  }
  return result;
}

unint64_t sub_1000B2D9C()
{
  unint64_t result = qword_1003634A8;
  if (!qword_1003634A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003634A8);
  }
  return result;
}

unint64_t sub_1000B2DF4()
{
  unint64_t result = qword_1003634B0;
  if (!qword_1003634B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003634B0);
  }
  return result;
}

unint64_t sub_1000B2E4C()
{
  unint64_t result = qword_1003634B8;
  if (!qword_1003634B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003634B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UXRegion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B2F6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UXRegion()
{
  return &type metadata for UXRegion;
}

unsigned char *storeEnumTagSinglePayload for Region(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B3070);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Region()
{
  return &type metadata for Region;
}

unint64_t sub_1000B30A8@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000B342C(*a1);
  *a2 = result;
  return result;
}

void sub_1000B30D4(void *a1@<X8>)
{
  *a1 = &off_10031DEE0;
}

uint64_t sub_1000B30E4()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000B3144()
{
  return RawRepresentable<>.encode(to:)();
}

BOOL sub_1000B3194(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1000B31A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1000B31BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1000B31D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_1000B31E4()
{
  uint64_t result = 1701602409;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D726177657270;
      break;
    case 2:
      uint64_t result = 0x6F69746163756465;
      break;
    case 3:
      uint64_t result = 1953393000;
      break;
    case 4:
      uint64_t result = 1819047270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000B3278()
{
  return sub_100047AD0(&qword_1003634C0, &qword_1003634C8);
}

unint64_t sub_1000B32A0@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000B343C(*a1);
  *a2 = result;
  return result;
}

void sub_1000B32CC(void *a1@<X8>)
{
  *a1 = &off_10031DF08;
}

uint64_t sub_1000B32DC()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000B333C()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1000B338C()
{
  uint64_t result = 1701602409;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F69746163756465;
      break;
    case 2:
      uint64_t result = 1953393000;
      break;
    case 3:
      uint64_t result = 1819047270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000B3404()
{
  return sub_100047AD0(&qword_1003634D0, &qword_1003634D8);
}

unint64_t sub_1000B342C(unint64_t result)
{
  if (result >= 5) {
    return 5;
  }
  return result;
}

unint64_t sub_1000B343C(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

unint64_t sub_1000B344C()
{
  unint64_t result = qword_1003634E0;
  if (!qword_1003634E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003634E0);
  }
  return result;
}

unint64_t sub_1000B34A0()
{
  unint64_t result = qword_1003634E8;
  if (!qword_1003634E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003634E8);
  }
  return result;
}

id sub_1000B3590()
{
  id v1 = sub_1001F6710();
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 ulog:40 message:v2];

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for BannerViewControllerBase();
  return [super dealloc];
}

void sub_1000B37B0(void *a1)
{
  id v3 = sub_1001F6710();
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 ulog:40 message:v4];

  if (!a1)
  {
    __break(1u);
    return;
  }
  id v5 = [a1 requestIdentifier];
  if (!v5) {
    goto LABEL_8;
  }
  unsigned int v6 = v5;
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  if (v7 == *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold24BannerViewControllerBase_requestID)
    && v9 == *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold24BannerViewControllerBase_requestID + 8))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
LABEL_8:
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease();
      id v12 = [a1 requestIdentifier];
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v16 = v15;
      }
      else
      {
        uint64_t v14 = 0;
        uint64_t v16 = 0;
      }
      uint64_t v23 = v14;
      sub_10000A38C(&qword_10035F850);
      v20._countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v20);
      swift_bridgeObjectRelease();
      id v21 = sub_1001F6710();
      swift_bridgeObjectRetain();
      NSString v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v21 ulog:90 message:v22, v23, v16];
      swift_bridgeObjectRelease();

      return;
    }
  }
  uint64_t v17 = v1 + OBJC_IVAR____TtC17proximitycontrold24BannerViewControllerBase_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v18 + 8))(v1, 3, 0, 3, ObjectType, v18);
    swift_unknownObjectRelease();
  }
}

void sub_1000B3A3C(void *a1, uint64_t a2)
{
}

void sub_1000B3A74(void *a1)
{
  id v3 = sub_1001F6710();
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 ulog:40 message:v4];

  if (!a1)
  {
    __break(1u);
    return;
  }
  id v5 = [a1 requestIdentifier];
  if (!v5) {
    goto LABEL_8;
  }
  unsigned int v6 = v5;
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  if (v7 == *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold24BannerViewControllerBase_requestID)
    && v9 == *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold24BannerViewControllerBase_requestID + 8))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
LABEL_8:
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease();
      id v12 = [a1 requestIdentifier];
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v16 = v15;
      }
      else
      {
        uint64_t v14 = 0;
        uint64_t v16 = 0;
      }
      uint64_t v23 = v14;
      sub_10000A38C(&qword_10035F850);
      v20._countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v20);
      swift_bridgeObjectRelease();
      id v21 = sub_1001F6710();
      swift_bridgeObjectRetain();
      NSString v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v21 ulog:90 message:v22, v23, v16];
      swift_bridgeObjectRelease();

      return;
    }
  }
  uint64_t v17 = v1 + OBJC_IVAR____TtC17proximitycontrold24BannerViewControllerBase_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v18 + 8))(v1, 2, 0, 3, ObjectType, v18);
    swift_unknownObjectRelease();
  }
}

void sub_1000B3D00(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();
}

void sub_1000B3D78(void *a1, uint64_t a2)
{
}

void sub_1000B3DB0(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, void *))
{
  swift_unknownObjectRetain();
  id v9 = a4;
  id v10 = a1;
  a5(a3, a4);
  swift_unknownObjectRelease();
}

void sub_1000B3E44(void *a1, uint64_t a2)
{
}

void sub_1000B3E64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v5;
  if (a2)
  {
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    char v11 = v10;
  }
  else
  {
    char v11 = (void *)0xE700000000000000;
    uint64_t v9 = 0x6E776F6E6B6E75;
  }
  v12._countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);
  id v13 = sub_1001F6710();
  swift_bridgeObjectRetain();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 ulog:40 message:v14];
  swift_bridgeObjectRelease();

  if (!a1)
  {
    __break(1u);
    return;
  }
  id v15 = [a1 requestIdentifier];
  if (!v15) {
    goto LABEL_14;
  }
  uint64_t v16 = v15;
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  if (v17 == *(void *)(v7 + OBJC_IVAR____TtC17proximitycontrold24BannerViewControllerBase_requestID)
    && v19 == *(void *)(v7 + OBJC_IVAR____TtC17proximitycontrold24BannerViewControllerBase_requestID + 8))
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    _StringGuts.grow(_:)(29);
    swift_bridgeObjectRelease();
    id v24 = [a1 requestIdentifier];
    if (v24)
    {
      uint64_t v25 = v24;
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v28 = v27;
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v28 = 0;
    }
    uint64_t v32 = v26;
    sub_10000A38C(&qword_10035F850);
    v29._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    id v30 = sub_1001F6710();
    swift_bridgeObjectRetain();
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v30 ulog:90 message:v31, v32, v28];
    swift_bridgeObjectRelease();

    return;
  }
LABEL_10:
  uint64_t v21 = v7 + OBJC_IVAR____TtC17proximitycontrold24BannerViewControllerBase_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v22 = *(void *)(v21 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))(v22 + 8))(v7, v9, v11, a5, ObjectType, v22);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000B436C()
{
  swift_getObjectType();
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = sub_10016B148();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 0x7473657571657220;
  v2._object = (void *)0xEB000000003D4449;
  String.append(_:)(v2);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold24BannerViewControllerBase_requestID);
  NSString v4 = *(void **)(v0 + OBJC_IVAR____TtC17proximitycontrold24BannerViewControllerBase_requestID + 8);
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = v3;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 62;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  return 60;
}

uint64_t type metadata accessor for BannerViewControllerBase()
{
  return self;
}

char *sub_1000B44B8(char a1)
{
  if ((a1 & 1) == 0)
  {
    Swift::String v2 = (char *)_swiftEmptyArrayStorage;
    if ((a1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  Swift::String v2 = sub_10008892C(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v4 = *((void *)v2 + 2);
  unint64_t v3 = *((void *)v2 + 3);
  if (v4 >= v3 >> 1) {
    Swift::String v2 = sub_10008892C((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v4 + 1;
  Swift::String v5 = &v2[16 * v4];
  *((void *)v5 + 4) = 0x796C696D6166;
  *((void *)v5 + 5) = 0xE600000000000000;
  if ((a1 & 2) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v2 = sub_10008892C(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v7 = *((void *)v2 + 2);
    unint64_t v6 = *((void *)v2 + 3);
    if (v7 >= v6 >> 1) {
      Swift::String v2 = sub_10008892C((char *)(v6 > 1), v7 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v7 + 1;
    uint64_t v8 = &v2[16 * v7];
    *((void *)v8 + 4) = 1701670760;
    *((void *)v8 + 5) = 0xE400000000000000;
  }
LABEL_12:
  if ((a1 & 4) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v2 = sub_10008892C(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v10 = *((void *)v2 + 2);
    unint64_t v9 = *((void *)v2 + 3);
    if (v10 >= v9 >> 1) {
      Swift::String v2 = sub_10008892C((char *)(v9 > 1), v10 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v10 + 1;
    char v11 = &v2[16 * v10];
    *((void *)v11 + 4) = 0x64756F6C4369;
    *((void *)v11 + 5) = 0xE600000000000000;
  }
  return v2;
}

uint64_t sub_1000B4654()
{
  return 2128928;
}

uint64_t sub_1000B4664(uint64_t a1, uint64_t a2)
{
  v8[3] = a1;
  Swift::String v5 = sub_10000D680(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(v5, v2, a1);
  uint64_t v6 = sub_1000B4700(v8, a1, a2);
  sub_10000CC5C((uint64_t)v8);
  return v6;
}

uint64_t sub_1000B4700(void *a1, uint64_t a2, uint64_t a3)
{
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3))
  {
    return sub_1000B4974(a1, a2, a3);
  }
  else
  {
    return sub_1000B4798((uint64_t)a1, a2, a3);
  }
}

uint64_t sub_1000B4798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = sub_1000B4D8C(a1, a2, a3);
  int64_t v4 = *((void *)v3 + 2);
  if (v4)
  {
    sub_1000B54DC(0, v4, 0);
    Swift::String v5 = (void **)(v3 + 56);
    do
    {
      uint64_t v6 = (uint64_t)*(v5 - 1);
      unint64_t v7 = *v5;
      uint64_t v20 = (uint64_t)*(v5 - 3);
      uint64_t v22 = (uint64_t)*(v5 - 2);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v8._countAndFlagsBits = 8250;
      v8._object = (void *)0xE200000000000000;
      String.append(_:)(v8);
      v9._countAndFlagsBits = v6;
      v9._object = v7;
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1) {
        sub_1000B54DC(v10 > 1, v11 + 1, 1);
      }
      v5 += 4;
      _swiftEmptyArrayStorage[2] = v11 + 1;
      Swift::String v12 = (char *)&_swiftEmptyArrayStorage[2 * v11];
      *((void *)v12 + 4) = v20;
      *((void *)v12 + 5) = v22;
      --v4;
    }
    while (v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_10016B148();
  v13._countAndFlagsBits = 40;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  sub_10000A38C((uint64_t *)&unk_100367D40);
  sub_100089B9C();
  uint64_t v14 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 41;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  return v21;
}

uint64_t sub_1000B4974(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10016B148();
  Swift::String v8 = v7;
  uint64_t v52 = v6;
  uint64_t v53 = v7;
  sub_10000D6E4(a1, a1[3]);
  uint64_t DynamicType = swift_getDynamicType();
  if (swift_isClassType()) {
    uint64_t v10 = DynamicType;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v10)
  {
    uint64_t v11 = a1[3];
    Swift::String v12 = sub_10000D6E4(a1, v11);
    uint64_t v13 = *(void *)(v11 - 8);
    __chkstk_darwin(v12);
    id v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v13 + 16))(v15);
    uint64_t v16 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
    swift_unknownObjectRelease();
    v54._uint64_t countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    v17._uint64_t countAndFlagsBits = 32;
    v17._object = (void *)0xE100000000000000;
    String.append(_:)(v17);
    uint64_t v51 = v16;
    _print_unlocked<A, B>(_:_:)();
    String.append(_:)(v54);
    swift_bridgeObjectRelease();
    uint64_t v6 = v52;
    Swift::String v8 = v53;
  }
  v54._uint64_t countAndFlagsBits = 60;
  v54._object = (void *)0xE100000000000000;
  v18._uint64_t countAndFlagsBits = v6;
  v18._object = v8;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v19._uint64_t countAndFlagsBits = 62;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  uint64_t countAndFlagsBits = v54._countAndFlagsBits;
  object = v54._object;
  uint64_t v22 = sub_1000B4D8C((uint64_t)a1, a2, a3);
  int64_t v23 = *((void *)v22 + 2);
  if (v23)
  {
    uint64_t v40 = countAndFlagsBits;
    uint64_t v41 = object;
    uint64_t v42 = a2;
    uint64_t v43 = a3;
    v54._uint64_t countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
    sub_1000B54FC(0, v23, 0);
    id v24 = (void *)v54._countAndFlagsBits;
    v39[1] = v22;
    uint64_t v25 = (uint64_t *)(v22 + 56);
    long long v44 = xmmword_10028FC10;
    do
    {
      uint64_t v27 = *(v25 - 3);
      uint64_t v26 = *(v25 - 2);
      uint64_t v29 = *(v25 - 1);
      uint64_t v28 = *v25;
      sub_10000A38C((uint64_t *)&unk_10035E7E0);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = v44;
      *(void *)(v30 + 32) = v27;
      *(void *)(v30 + 40) = v26;
      *(void *)(v30 + 48) = v29;
      *(void *)(v30 + 56) = v28;
      v54._uint64_t countAndFlagsBits = (uint64_t)v24;
      unint64_t v31 = v24[2];
      unint64_t v32 = v24[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v31 >= v32 >> 1)
      {
        sub_1000B54FC(v32 > 1, v31 + 1, 1);
        id v24 = (void *)v54._countAndFlagsBits;
      }
      v25 += 4;
      v24[2] = v31 + 1;
      v24[v31 + 4] = v30;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    a2 = v42;
    a3 = v43;
    uint64_t countAndFlagsBits = v40;
    object = v41;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v24 = _swiftEmptyArrayStorage;
  }
  v54._uint64_t countAndFlagsBits = countAndFlagsBits;
  v54._object = object;
  uint64_t v55 = 0;
  char v56 = v24;
  uint64_t v57 = 0;
  uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  uint64_t v35 = sub_10008BF24(v33, v34, 0, 1);
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v49 = v35;
  uint64_t v50 = v37;
  uint64_t v47 = 10;
  unint64_t v48 = 0xE100000000000000;
  uint64_t v45 = 2105354;
  unint64_t v46 = 0xE300000000000000;
  sub_10002914C();
  sub_1000291A0();
  RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)();
  swift_bridgeObjectRelease();
  return v51;
}

char *sub_1000B4D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a3;
  uint64_t v5 = type metadata accessor for Mirror();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100027B10(a1, (uint64_t)v26);
  Mirror.init(reflecting:)();
  uint64_t v9 = Mirror.children.getter();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_retain();
  dispatch thunk of _AnySequenceBox._makeIterator()();
  v19[1] = v9;
  swift_release();
  dispatch thunk of _AnyIteratorBoxBase.next()();
  if (*((void *)&v27 + 1))
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
    do
    {
      v25[0] = v26[0];
      v25[1] = v26[1];
      v25[2] = v27;
      sub_1000B4FD8((uint64_t *)v25, a2, v20, (uint64_t)&v21);
      sub_10000D78C((uint64_t)v25, &qword_10035CBF0);
      uint64_t v12 = v22;
      if (v22)
      {
        uint64_t v13 = v21;
        uint64_t v15 = v23;
        uint64_t v14 = v24;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_100088A3C(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v17 = *((void *)v10 + 2);
        unint64_t v16 = *((void *)v10 + 3);
        if (v17 >= v16 >> 1) {
          uint64_t v10 = sub_100088A3C((char *)(v16 > 1), v17 + 1, 1, v10);
        }
        *((void *)v10 + 2) = v17 + 1;
        uint64_t v11 = &v10[32 * v17];
        *((void *)v11 + 4) = v13;
        *((void *)v11 + 5) = v12;
        *((void *)v11 + 6) = v15;
        *((void *)v11 + 7) = v14;
      }
      dispatch thunk of _AnyIteratorBoxBase.next()();
    }
    while (*((void *)&v27 + 1));
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  swift_release();
  swift_release();
  return v10;
}

uint64_t sub_1000B4FD8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = (uint64_t)(a1 + 2);
  *(void *)&long long v38 = *a1;
  *((void *)&v38 + 1) = v9;
  sub_100027B10((uint64_t)(a1 + 2), (uint64_t)v39);
  if (v9)
  {
    *(void *)&long long v32 = v8;
    *((void *)&v32 + 1) = v9;
    v29[0] = 0xD000000000000012;
    v29[1] = 0x80000001002B33F0;
    sub_1000291A0();
    Collection<>.trimmingPrefix<A>(_:)();
    sub_10000CC5C((uint64_t)v39);
    uint64_t v11 = static String._fromSubstring(_:)();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000CC5C((uint64_t)v39);
    unint64_t v13 = 0xE100000000000000;
    uint64_t v11 = 63;
  }
  if (((*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(a3 + 56))(v11, v13, a2, a3) & 1) == 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    return result;
  }
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    unint64_t v13 = 0xE100000000000000;
    uint64_t v11 = 45;
  }
  String.lowercased()();
  v14._uint64_t countAndFlagsBits = 0x736B736174;
  v14._object = (void *)0xE500000000000000;
  Swift::Bool v15 = String.hasSuffix(_:)(v14);
  swift_bridgeObjectRelease();
  if (!v15)
  {
LABEL_12:
    long long v38 = *(_OWORD *)a1;
    sub_100027B10(v10, (uint64_t)v39);
    sub_10000A38C(&qword_10035CBF8);
    if (swift_dynamicCast())
    {
      sub_10000D7E8(&v32, (uint64_t)&v35);
      uint64_t v30 = 0;
      unint64_t v31 = 0xE000000000000000;
      sub_1000291F4((uint64_t)&v35, (uint64_t)&v38);
      sub_100029258((uint64_t)&v38, (uint64_t)&v32);
      if (*((void *)&v33 + 1))
      {
        sub_10000D7E8(&v32, (uint64_t)v29);
        sub_1000291F4((uint64_t)v29, (uint64_t)v28);
        uint64_t v21 = String.init<A>(describing:)();
        uint64_t v23 = v22;
        sub_10000CC5C((uint64_t)v29);
      }
      else
      {
        uint64_t v23 = (void *)0xE300000000000000;
        uint64_t v21 = 7104878;
      }
      sub_10000D78C((uint64_t)&v38, &qword_10035CC00);
      v27._uint64_t countAndFlagsBits = v21;
      v27._object = v23;
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      uint64_t v18 = v30;
      unint64_t v19 = v31;
      goto LABEL_20;
    }
    uint64_t v34 = 0;
    long long v32 = 0u;
    long long v33 = 0u;
    sub_10000D78C((uint64_t)&v32, &qword_10035CC00);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3))
    {
      long long v38 = *(_OWORD *)a1;
      sub_100027B10(v10, (uint64_t)v39);
      sub_10000A38C(&qword_100363528);
      if (swift_dynamicCast())
      {
        sub_10000D7E8(&v32, (uint64_t)&v35);
        uint64_t v24 = v36;
        uint64_t v25 = v37;
        sub_10000D6E4(&v35, v36);
        uint64_t v18 = sub_100116CFC(v24, v25);
        unint64_t v19 = v26;
        goto LABEL_20;
      }
      uint64_t v34 = 0;
      long long v32 = 0u;
      long long v33 = 0u;
      sub_10000D78C((uint64_t)&v32, &qword_100363530);
    }
    *(void *)&long long v38 = 0;
    *((void *)&v38 + 1) = 0xE000000000000000;
    uint64_t result = _print_unlocked<A, B>(_:_:)();
    unint64_t v19 = *((void *)&v38 + 1);
    uint64_t v18 = v38;
    goto LABEL_23;
  }
  long long v38 = *(_OWORD *)a1;
  sub_100027B10(v10, (uint64_t)v39);
  sub_10000A38C(&qword_10035CC08);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v34 = 0;
    long long v32 = 0u;
    long long v33 = 0u;
    sub_10000D78C((uint64_t)&v32, &qword_10035CC10);
    goto LABEL_12;
  }
  sub_10000D7E8(&v32, (uint64_t)&v35);
  *(void *)&long long v38 = 40;
  *((void *)&v38 + 1) = 0xE100000000000000;
  sub_10000D6E4(&v35, v36);
  *(void *)&long long v32 = dispatch thunk of Collection.count.getter();
  v16._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = 41;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  unint64_t v19 = *((void *)&v38 + 1);
  uint64_t v18 = v38;
LABEL_20:
  uint64_t result = sub_10000CC5C((uint64_t)&v35);
LABEL_23:
  *(void *)a4 = v11;
  *(void *)(a4 + 8) = v13;
  *(void *)(a4 + 16) = v18;
  *(void *)(a4 + 24) = v19;
  return result;
}

uint64_t sub_1000B549C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B5730(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1000B54BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B58D8(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000B54DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B5A44(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000B54FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B5BB0(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000B551C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B6850(a1, a2, a3, (void *)*v3, &qword_100363550, (uint64_t (*)(void))&type metadata accessor for DispatchTimeInterval);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1000B5558(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B5D1C(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000B5578(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B5E78(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000B5598(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B5FD4(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000B55B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B651C(a1, a2, a3, (void *)*v3, &qword_100363538, (uint64_t *)&unk_100367D40);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1000B55E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B62DC(a1, a2, a3, (void *)*v3, &qword_10035C0C0, &qword_10035C0A8);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1000B5618(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B6134(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1000B5638(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B6850(a1, a2, a3, (void *)*v3, &qword_100363558, (uint64_t (*)(void))&type metadata accessor for Date);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1000B5674(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B62DC(a1, a2, a3, (void *)*v3, &qword_100363540, &qword_10035EDB0);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1000B56A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B651C(a1, a2, a3, (void *)*v3, &qword_100363560, (uint64_t *)&unk_10036C0B0);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1000B56D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B66AC(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1000B56F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B6850(a1, a2, a3, (void *)*v3, &qword_100363548, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1000B5730(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A38C(&qword_10035EDC8);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    sub_10000A38C(&qword_10035EDD0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B58D8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A38C(&qword_100360070);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  Swift::String v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B5A44(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A38C((uint64_t *)&unk_10035E7E0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  Swift::String v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B5BB0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A38C(&qword_100360068);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  Swift::String v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B5D1C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A38C(&qword_100360090);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  Swift::String v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8]) {
      memmove(v13, v14, 2 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[2 * v8] || v13 >= &v14[2 * v8])
  {
    memcpy(v13, v14, 2 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B5E78(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A38C(&qword_100360098);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  Swift::String v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8]) {
      memmove(v13, v14, 2 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[2 * v8] || v13 >= &v14[2 * v8])
  {
    memcpy(v13, v14, 2 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B5FD4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A38C(&qword_1003600E8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  Swift::String v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B6134(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A38C(&qword_100363568);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    sub_10000A38C(&qword_100363570);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B62DC(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    Swift::String v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000A38C(a5);
  uint64_t v13 = *(void *)(sub_10000A38C(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  Swift::String v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_10000A38C(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B651C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_10000A38C(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    sub_10000A38C(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B66AC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A38C(&qword_1003600D0);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_10000A38C(&qword_1003600D8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B6850(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000A38C(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

Swift::UInt64 sub_1000B6A98()
{
  if (*(unsigned char *)(v0 + 16)) {
    return 0;
  }
  Swift::UInt64 v2 = UpTicks()();
  *(void *)(v0 + 40) = v2;
  *(unsigned char *)(v0 + 48) = 0;
  *(unsigned char *)(v0 + 16) = 1;
  if (*(unsigned char *)(v0 + 32)) {
    return 0x646570706F7473;
  }
  Swift::UInt64 v3 = *(void *)(v0 + 24);
  BOOL v4 = v2 >= v3;
  Swift::UInt64 result = v2 - v3;
  if (v4)
  {
    double v5 = UpTicksToSecondsF(_:)(result);
    return sub_1000DC438(v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::UInt64 sub_1000B6B14()
{
  if (*(unsigned char *)(v0 + 32) & 1) != 0 || (*(unsigned char *)(v0 + 48))
  {
    if (*(unsigned char *)(v0 + 16)) {
      return 0x646570706F7473;
    }
    else {
      return 0x676E696E6E7572;
    }
  }
  else
  {
    unint64_t v2 = *(void *)(v0 + 24);
    unint64_t v3 = *(void *)(v0 + 40);
    Swift::UInt64 result = v3 - v2;
    if (v3 < v2)
    {
      __break(1u);
    }
    else
    {
      double v4 = UpTicksToSecondsF(_:)(result);
      return sub_1000DC438(v4);
    }
  }
  return result;
}

uint64_t sub_1000B6B8C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Stopwatch()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for Stopwatch.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *Swift::UInt64 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B6C8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *Swift::UInt64 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Stopwatch.State()
{
  return &type metadata for Stopwatch.State;
}

uint64_t sub_1000B6CC4()
{
  if (*v0) {
    return 0x646570706F7473;
  }
  else {
    return 0x676E696E6E7572;
  }
}

unint64_t sub_1000B6CFC()
{
  unint64_t result = qword_100363690;
  if (!qword_100363690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363690);
  }
  return result;
}

Swift::UInt64 sub_1000B6D50()
{
  return sub_1000B6B14();
}

__n128 initializeWithCopy for SimpleSpring(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t getEnumTagSinglePayload for SimpleSpring(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 112)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SimpleSpring(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 112) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SimpleSpring()
{
  return &type metadata for SimpleSpring;
}

ValueMetadata *type metadata accessor for SpringState()
{
  return &type metadata for SpringState;
}

uint64_t sub_1000B6E20()
{
  sub_1000B7084();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_1003AC758 = result;
  return result;
}

uint64_t sub_1000B6E80()
{
  sub_1000B7084();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_1003AC760 = result;
  return result;
}

const char *sub_1000B6EDC(char a1)
{
  uint64_t result = "Start_ResolveDeviceProximity";
  switch(a1)
  {
    case 1:
      uint64_t result = "ContentResolution_Media";
      break;
    case 2:
      uint64_t result = "ContentResolution_ShareableContent";
      break;
    case 3:
      uint64_t result = "ContentResolution_Remote";
      break;
    case 4:
      uint64_t result = "Delay_HandoffAction";
      break;
    case 5:
      uint64_t result = "Delay_HandoffAction_ContentResolution";
      break;
    case 6:
      uint64_t result = "Delay_HandoffUI";
      break;
    case 7:
      uint64_t result = "Present_DwellBanner";
      break;
    case 8:
      uint64_t result = "Present_SystemCallControls";
      break;
    case 9:
      uint64_t result = "Present_LagunaPullConversation";
      break;
    case 10:
      uint64_t result = "Present_MediaCard";
      break;
    case 11:
      uint64_t result = "Present_SharePreview";
      break;
    case 12:
      uint64_t result = "Present_Shockwave";
      break;
    case 13:
      uint64_t result = "LaunchApp_Remote_FaceTime";
      break;
    case 14:
      uint64_t result = "LaunchApp_Remote_Safari";
      break;
    case 15:
      uint64_t result = "Transfer_Media";
      break;
    case 16:
      uint64_t result = "HandoffOccurred";
      break;
    case 17:
      uint64_t result = "SetupCompleted";
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000B7084()
{
  unint64_t result = qword_100363698;
  if (!qword_100363698)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100363698);
  }
  return result;
}

unint64_t sub_1000B70C4(char a1)
{
  unint64_t result = 0xD000000000000024;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
      unint64_t result = 0xD000000000000026;
      break;
    case 3:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000030;
      break;
    case 5:
      unint64_t result = 0xD000000000000029;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000B7184(char *a1, char *a2)
{
  return sub_10005DC38(*a1, *a2);
}

Swift::Int sub_1000B7190()
{
  return sub_10015E198();
}

uint64_t sub_1000B7198()
{
  return sub_10015E770();
}

Swift::Int sub_1000B71A0()
{
  return sub_10015ED30();
}

unint64_t sub_1000B71A8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000B7BBC(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1000B71D8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000B70C4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000B7204(char a1)
{
  unint64_t result = 0xD000000000000024;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
      unint64_t result = 0xD000000000000026;
      break;
    case 3:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000030;
      break;
    case 5:
      unint64_t result = 0xD000000000000029;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000B72C4()
{
  return sub_1000B7204(*v0);
}

uint64_t sub_1000B72CC(char a1, void *a2)
{
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease();
  *(void *)&v47[0] = 0xD00000000000001ALL;
  *((void *)&v47[0] + 1) = 0x80000001002BB240;
  unint64_t v4 = 0xD000000000000024;
  unint64_t v5 = 0x80000001002B15F0;
  switch(a1)
  {
    case 1:
      unint64_t v5 = 0x80000001002B1620;
      unint64_t v4 = 0xD00000000000001ALL;
      break;
    case 2:
      unint64_t v4 = 0xD000000000000026;
      long long v6 = "com.apple.ProximityControlUI.HandoffUI";
      goto LABEL_7;
    case 3:
      unint64_t v4 = 0xD00000000000002DLL;
      long long v6 = "com.apple.proximitycontrol.lockscreenControls";
      goto LABEL_7;
    case 4:
      unint64_t v4 = 0xD000000000000030;
      long long v6 = "com.apple.proximitycontrol.mediaTransferObserver";
      goto LABEL_7;
    case 5:
      unint64_t v4 = 0xD000000000000029;
      long long v6 = "com.apple.proximitycontrol.remoteActivity";
LABEL_7:
      unint64_t v5 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 0x206E6F2027;
  v8._object = (void *)0xE500000000000000;
  String.append(_:)(v8);
  id v9 = [a2 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  v13._uint64_t countAndFlagsBits = v10;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  id v14 = sub_1001EA984();
  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 ulog:40 message:v15];
  swift_bridgeObjectRelease();

  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      NSString v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v17 = [a2 cuValueForEntitlementNoCache:v16];

      if (!v17)
      {
        _StringGuts.grow(_:)(38);
        swift_bridgeObjectRelease();
        *(void *)&v47[0] = 0xD000000000000023;
        *((void *)&v47[0] + 1) = 0x80000001002BB260;
        unint64_t v25 = 0xD000000000000024;
        unint64_t v26 = 0x80000001002B15F0;
        switch(a1)
        {
          case 0:
            goto LABEL_28;
          case 1:
            unint64_t v26 = 0x80000001002B1620;
            unint64_t v25 = 0xD00000000000001ALL;
            goto LABEL_28;
          case 2:
            unint64_t v25 = 0xD000000000000026;
            uint64_t v29 = "com.apple.ProximityControlUI.HandoffUI";
            goto LABEL_27;
          case 3:
            unint64_t v25 = 0xD00000000000002DLL;
            uint64_t v29 = "com.apple.proximitycontrol.lockscreenControls";
            goto LABEL_27;
          case 4:
            unint64_t v25 = 0xD000000000000030;
            uint64_t v29 = "com.apple.proximitycontrol.mediaTransferObserver";
            goto LABEL_27;
          case 5:
            unint64_t v25 = 0xD000000000000029;
            uint64_t v29 = "com.apple.proximitycontrol.remoteActivity";
LABEL_27:
            unint64_t v26 = (unint64_t)(v29 - 32) | 0x8000000000000000;
LABEL_28:
            unint64_t v30 = v26;
            String.append(_:)(*(Swift::String *)&v25);
            swift_bridgeObjectRelease();
            v31._uint64_t countAndFlagsBits = 39;
            v31._object = (void *)0xE100000000000000;
            String.append(_:)(v31);
            id v32 = sub_1001EA984();
            swift_bridgeObjectRetain();
            NSString v33 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v32 ulog:90 message:v33];
            swift_bridgeObjectRelease();

            return 0;
          default:
            goto LABEL_43;
        }
      }
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_100027B00(v46, v47);
      sub_100027B10((uint64_t)v47, (uint64_t)v46);
      if (!swift_dynamicCast())
      {
        *(void *)&v46[0] = 0;
        *((void *)&v46[0] + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(42);
        swift_bridgeObjectRelease();
        *(void *)&v46[0] = 0xD000000000000027;
        *((void *)&v46[0] + 1) = 0x80000001002BB290;
        unint64_t v27 = 0xD000000000000024;
        unint64_t v28 = 0x80000001002B15F0;
        switch(a1)
        {
          case 0:
            goto LABEL_40;
          case 1:
            unint64_t v28 = 0x80000001002B1620;
            unint64_t v27 = 0xD00000000000001ALL;
            goto LABEL_40;
          case 2:
            unint64_t v27 = 0xD000000000000026;
            uint64_t v39 = "com.apple.ProximityControlUI.HandoffUI";
            goto LABEL_39;
          case 3:
            unint64_t v27 = 0xD00000000000002DLL;
            uint64_t v39 = "com.apple.proximitycontrol.lockscreenControls";
            goto LABEL_39;
          case 4:
            unint64_t v27 = 0xD000000000000030;
            uint64_t v39 = "com.apple.proximitycontrol.mediaTransferObserver";
            goto LABEL_39;
          case 5:
            unint64_t v27 = 0xD000000000000029;
            uint64_t v39 = "com.apple.proximitycontrol.remoteActivity";
LABEL_39:
            unint64_t v28 = (unint64_t)(v39 - 32) | 0x8000000000000000;
LABEL_40:
            unint64_t v40 = v28;
            String.append(_:)(*(Swift::String *)&v27);
            swift_bridgeObjectRelease();
            v41._uint64_t countAndFlagsBits = 39;
            v41._object = (void *)0xE100000000000000;
            String.append(_:)(v41);
            id v42 = sub_1001EA984();
            swift_bridgeObjectRetain();
            NSString v43 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v42 ulog:90 message:v43];
            swift_bridgeObjectRelease();

            sub_10000CC5C((uint64_t)v47);
            return 0;
          default:
            goto LABEL_43;
        }
      }
      uint64_t v18 = v45;
      *(void *)&v46[0] = 0;
      *((void *)&v46[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(37);
      swift_bridgeObjectRelease();
      strcpy((char *)v46, "Found value '");
      HIWORD(v46[0]) = -4864;
      if (v45) {
        uint64_t v19 = 1702195828;
      }
      else {
        uint64_t v19 = 0x65736C6166;
      }
      if (v45) {
        unint64_t v20 = 0xE400000000000000;
      }
      else {
        unint64_t v20 = 0xE500000000000000;
      }
      unint64_t v21 = v20;
      String.append(_:)(*(Swift::String *)&v19);
      swift_bridgeObjectRelease();
      v22._uint64_t countAndFlagsBits = 0xD000000000000013;
      v22._object = (void *)0x80000001002BB2C0;
      String.append(_:)(v22);
      unint64_t v23 = 0xD000000000000024;
      unint64_t v24 = 0x80000001002B15F0;
      switch(a1)
      {
        case 1:
          unint64_t v24 = 0x80000001002B1620;
          unint64_t v23 = 0xD00000000000001ALL;
          break;
        case 2:
          unint64_t v23 = 0xD000000000000026;
          uint64_t v34 = "com.apple.ProximityControlUI.HandoffUI";
          goto LABEL_33;
        case 3:
          unint64_t v23 = 0xD00000000000002DLL;
          uint64_t v34 = "com.apple.proximitycontrol.lockscreenControls";
          goto LABEL_33;
        case 4:
          unint64_t v23 = 0xD000000000000030;
          uint64_t v34 = "com.apple.proximitycontrol.mediaTransferObserver";
          goto LABEL_33;
        case 5:
          unint64_t v23 = 0xD000000000000029;
          uint64_t v34 = "com.apple.proximitycontrol.remoteActivity";
LABEL_33:
          unint64_t v24 = (unint64_t)(v34 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v35 = v24;
      String.append(_:)(*(Swift::String *)&v23);
      swift_bridgeObjectRelease();
      v36._uint64_t countAndFlagsBits = 39;
      v36._object = (void *)0xE100000000000000;
      String.append(_:)(v36);
      id v37 = sub_1001EA984();
      swift_bridgeObjectRetain();
      NSString v38 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v37 ulog:40 message:v38];
      swift_bridgeObjectRelease();

      sub_10000CC5C((uint64_t)v47);
      return v18;
    default:
LABEL_43:
      JUMPOUT(0);
  }
}

unsigned char *storeEnumTagSinglePayload for Entitlement(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B7B2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Entitlement()
{
  return &type metadata for Entitlement;
}

unint64_t sub_1000B7B68()
{
  unint64_t result = qword_1003636A0[0];
  if (!qword_1003636A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1003636A0);
  }
  return result;
}

unint64_t sub_1000B7BBC(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10031DF30, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

uint64_t sub_1000B7C08()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000B7C6C()
{
  return sub_1000B7C90();
}

uint64_t sub_1000B7C90()
{
  uint64_t v1 = type metadata accessor for Handoff3StateMachine2();
  sub_10016ADD8(0x6164696C61766E69, (void *)0xEC00000029286574, 0, v1, (uint64_t)&off_100321630);
  swift_beginAccess();
  *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = sub_10004E2A0(v2);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 32) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B7DAC@<X0>(uint64_t a1@<X0>, __int16 *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ExperienceEvent(0);
  __chkstk_darwin(v4);
  unsigned int v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004D310(a1, (uint64_t)v6);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 3)
  {
    uint64_t result = sub_10004D374((uint64_t)v6);
    goto LABEL_5;
  }
  unint64_t v8 = *v6;
  if (v8 > 4)
  {
LABEL_5:
    __int16 v9 = -258;
    goto LABEL_6;
  }
  __int16 v9 = word_1002951DA[v8];
LABEL_6:
  *a2 = v9;
  return result;
}

uint64_t sub_1000B7E74()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  sub_10000CC5C(v0 + 88);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B7EB4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  sub_10000CC5C(v0 + 88);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000B7F14()
{
  sub_1000B7EB4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Handoff3StateMachine2()
{
  return swift_getGenericMetadata();
}

void sub_1000B7F60()
{
}

void sub_1000B7F70()
{
}

uint64_t sub_1000B7FA0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000B8000()
{
  uint64_t v1 = type metadata accessor for SystemEventManager();
  sub_10016ADD8(0x74696E696544, (void *)0xE600000000000000, 0, v1, (uint64_t)&off_1003248C0);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000B80A4()
{
  sub_1000B8000();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SystemEventManager()
{
  return sub_10000F2E4();
}

uint64_t sub_1000B80F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unint64_t v8 = v7;
  int v77 = a7;
  uint64_t v63 = a5;
  uint64_t v62 = a4;
  uint64_t v61 = a3;
  uint64_t v60 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v52 = sub_10000A38C(&qword_1003637A8);
  uint64_t v11 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v51 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000A38C(&qword_10035AC20);
  __chkstk_darwin(v13 - 8);
  id v73 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v15 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v71 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_10000A38C(&qword_1003637B0);
  uint64_t v17 = *(void *)(v70 - 8);
  uint64_t result = __chkstk_darwin(v70);
  uint64_t v69 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    char v58 = v8;
    uint64_t v21 = (uint64_t)v8 + OBJC_IVAR____TtC17proximitycontrold12RapportProxy_activitySource;
    uint64_t v57 = a6 + OBJC_IVAR____TtC17proximitycontrold16TimedTaskStorage_storage;
    swift_bridgeObjectRetain();
    uint64_t v76 = v21;
    swift_beginAccess();
    uint64_t v22 = 0;
    int64_t v68 = (void (**)(char *, void, uint64_t))(v15 + 104);
    id v67 = (void (**)(char *, uint64_t))(v15 + 8);
    unsigned int v66 = enum case for DispatchQoS.QoSClass.default(_:);
    unint64_t v65 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v50 = (void (**)(char *, uint64_t))(v11 + 8);
    unint64_t v75 = (unint64_t)"ityControl.activity.annoucement";
    char v56 = "ityControl.activity.media";
    uint64_t v55 = "ityControl.activity.call";
    Swift::String v54 = "ityControl.activity.timer";
    uint64_t v53 = "sendCurrentValue";
    uint64_t v23 = a1;
    uint64_t v74 = a1;
    uint64_t v64 = v20;
    while (1)
    {
      uint64_t v24 = *(unsigned __int8 *)(v23 + v22++ + 32);
      unint64_t v25 = v75 | 0x8000000000000000;
      unint64_t v26 = 0xD000000000000029;
      switch(v24)
      {
        case 1:
          unint64_t v26 = 0xD00000000000002FLL;
          unint64_t v27 = &v86;
          goto LABEL_10;
        case 2:
          unint64_t v27 = (uint64_t *)&v85;
          goto LABEL_10;
        case 3:
          unint64_t v26 = 0xD000000000000028;
          unint64_t v27 = (uint64_t *)&v84;
          goto LABEL_10;
        case 4:
          unint64_t v27 = &v83;
LABEL_10:
          unint64_t v25 = *(v27 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      sub_1000BA1E8(v76, (uint64_t)&v83);
      if (!v86) {
        break;
      }
      sub_1000291F4((uint64_t)&v83, (uint64_t)v80);
      sub_10000D78C((uint64_t)&v83, &qword_1003637B8);
      uint64_t v28 = v81;
      uint64_t v29 = v82;
      sub_10000D6E4(v80, v81);
      uint64_t v30 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 8))(v24, 0, v28, v29);
      if (!v30)
      {
        sub_10000CC5C((uint64_t)v80);
        goto LABEL_4;
      }
      uint64_t v79 = v30;
      sub_10000A34C();
      Swift::String v31 = v71;
      uint64_t v32 = v72;
      (*v68)(v71, v66, v72);
      NSString v33 = (void *)static OS_dispatch_queue.global(qos:)();
      (*v67)(v31, v32);
      id v78 = v33;
      uint64_t v34 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      uint64_t v35 = (uint64_t)v73;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v73, 1, 1, v34);
      sub_10000A38C(&qword_10035FFD8);
      sub_10000B010(&qword_10035FFE0, &qword_10035FFD8);
      sub_10003A8C0();
      Swift::String v36 = v69;
      Publisher.receive<A>(on:options:)();
      sub_10000D78C(v35, &qword_10035AC20);

      swift_release();
      sub_10000CC5C((uint64_t)v80);
      sub_10000B010(&qword_1003637C8, &qword_1003637B0);
      uint64_t v37 = v70;
      uint64_t v38 = Publisher.eraseToAnyPublisher()();
      (*v65)(v36, v37);
      if (v77)
      {
        uint64_t v23 = v74;
        uint64_t v20 = v64;
        if (!v38) {
          goto LABEL_4;
        }
LABEL_19:
        uint64_t v83 = v38;
        uint64_t v42 = swift_allocObject();
        *(unsigned char *)(v42 + 16) = v24;
        uint64_t v43 = ObjectType;
        *(void *)(v42 + 24) = ObjectType;
        long long v44 = (void *)swift_allocObject();
        v44[2] = v26;
        v44[3] = v25;
        uint64_t v45 = v63;
        v44[4] = v62;
        v44[5] = v45;
        unint64_t v46 = v58;
        uint64_t v47 = v60;
        v44[6] = v58;
        v44[7] = v47;
        v44[8] = v61;
        v44[9] = v43;
        swift_retain();
        swift_bridgeObjectRetain();
        id v48 = v46;
        swift_bridgeObjectRetain();
        sub_10000A38C(&qword_10035FFD8);
        uint64_t v49 = Publisher.sink(receiveCompletion:receiveValue:)();
        uint64_t v23 = v74;
        swift_release();
        swift_release();
        swift_release();
        swift_beginAccess();
        swift_retain();
        sub_10003038C(v80, v49);
        swift_endAccess();
        swift_release();
        swift_release();
        swift_release();
        if (v20 == v22) {
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v23 = v74;
        uint64_t v20 = v64;
        if (v38)
        {
          uint64_t v83 = v38;
          sub_10000A38C(&qword_10035FFD8);
          uint64_t v39 = v51;
          Publisher.dropFirst(_:)();
          sub_10000B010(&qword_1003637C0, &qword_1003637A8);
          uint64_t v40 = v52;
          uint64_t v41 = Publisher.eraseToAnyPublisher()();
          (*v50)(v39, v40);
          swift_release();
          uint64_t v38 = v41;
          goto LABEL_19;
        }
LABEL_4:
        swift_bridgeObjectRelease();
        if (v20 == v22) {
          return swift_bridgeObjectRelease();
        }
      }
    }
    sub_10000D78C((uint64_t)&v83, &qword_1003637B8);
    goto LABEL_4;
  }
  return result;
}

void *sub_1000B8974(void *result, char a2, uint64_t a3)
{
  if (*result)
  {
    uint64_t v5 = 0xD000000000000029;
    swift_errorRetain();
    _StringGuts.grow(_:)(24);
    v6._uint64_t countAndFlagsBits = 0xD000000000000012;
    v6._object = (void *)0x80000001002BB610;
    String.append(_:)(v6);
    unint64_t v7 = (void *)0x80000001002BB550;
    switch(a2)
    {
      case 1:
        uint64_t v5 = 0xD00000000000002FLL;
        unint64_t v8 = "com.apple.ProximityControl.activity.annoucement";
        goto LABEL_7;
      case 2:
        unint64_t v8 = "com.apple.ProximityControl.activity.media";
        goto LABEL_7;
      case 3:
        uint64_t v5 = 0xD000000000000028;
        unint64_t v8 = "com.apple.ProximityControl.activity.call";
        goto LABEL_7;
      case 4:
        unint64_t v8 = "com.apple.ProximityControl.activity.timer";
LABEL_7:
        unint64_t v7 = (void *)((unint64_t)(v8 - 32) | 0x8000000000000000);
        break;
      default:
        break;
    }
    v9._uint64_t countAndFlagsBits = v5;
    v9._object = v7;
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    v10._uint64_t countAndFlagsBits = 8250;
    v10._object = (void *)0xE200000000000000;
    String.append(_:)(v10);
    sub_10000A38C((uint64_t *)&unk_100365D60);
    _print_unlocked<A, B>(_:_:)();
    sub_10016AE10(90, 0, (void *)0xE000000000000000, 0, a3, (uint64_t)&off_10032C040);
    swift_bridgeObjectRelease();
    return (void *)swift_errorRelease();
  }
  return result;
}

void sub_1000B8B10(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = *a1;
  if (*a1 && (swift_getObjectType(), (uint64_t v15 = sub_1000B8DE0()) != 0))
  {
    unint64_t v16 = (unint64_t)v15;
  }
  else
  {
    sub_10000A38C(&qword_1003718D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10028D430;
    strcpy((char *)(inited + 32), "activityName");
    *(unsigned char *)(inited + 45) = 0;
    *(_WORD *)(inited + 46) = -5120;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = a2;
    *(void *)(inited + 56) = a3;
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_100268FC4(inited);
    swift_bridgeObjectRelease();
  }
  uint64_t v29 = &type metadata for String;
  *(void *)&long long aBlock = a4;
  *((void *)&aBlock + 1) = a5;
  sub_100027B00(&aBlock, v33);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v32 = v16;
  sub_1002652C8(v33, 0x4974736575716572, 0xE900000000000044, isUniquelyReferenced_nonNull_native);
  uint64_t v19 = v32;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void **)(a6 + OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLClient);
  if (v20)
  {
    id v21 = v20;
    NSString v22 = String._bridgeToObjectiveC()();
    sub_1001B8DC4(v19);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v24 = String._bridgeToObjectiveC()();
    unint64_t v25 = (void *)swift_allocObject();
    v25[2] = v14;
    _OWORD v25[3] = a2;
    v25[4] = a3;
    v25[5] = a9;
    uint64_t v30 = sub_1000BA330;
    Swift::String v31 = v25;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v28 = sub_100119FC4;
    uint64_t v29 = &unk_1003249D0;
    unint64_t v26 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    [v21 sendEventID:v22 event:isa destinationID:v24 options:0 completion:v26];
    _Block_release(v26);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void *sub_1000B8DE0()
{
  self;
  uint64_t v0 = (void *)swift_dynamicCastObjCClass();
  if (v0)
  {
    swift_unknownObjectRetain();
    id v1 = [v0 userInfo];
    if (v1)
    {
      uint64_t v2 = v1;
      unint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v11 = sub_10000A38C(&qword_10035C7C0);
      if (v3)
      {
LABEL_7:
        v10[0] = v3;
        sub_10000A38C(&qword_1003718D0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10028FC10;
        strcpy((char *)(inited + 32), "activityName");
        *(unsigned char *)(inited + 45) = 0;
        *(_WORD *)(inited + 46) = -5120;
        id v5 = [v0 activityType];
        uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v8 = v7;

        *(void *)(inited + 48) = v6;
        *(void *)(inited + 56) = v8;
        *(void *)(inited + 72) = &type metadata for String;
        *(void *)(inited + 80) = 0xD000000000000010;
        *(void *)(inited + 88) = 0x80000001002BB580;
        sub_100027B10((uint64_t)v10, inited + 96);
        uint64_t v0 = (void *)sub_100268FC4(inited);
        swift_unknownObjectRelease();
        sub_10000CC5C((uint64_t)v10);
        return v0;
      }
    }
    else
    {
      uint64_t v11 = sub_10000A38C(&qword_10035C7C0);
    }
    unint64_t v3 = sub_100268E80((uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_7;
  }
  return v0;
}

uint64_t sub_1000B8F88(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  if (a1)
  {
    swift_errorRetain();
    _StringGuts.grow(_:)(47);
    v6._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    v6._object = (void *)0x80000001002BB5E0;
    String.append(_:)(v6);
    sub_10000A38C((uint64_t *)&unk_100365D60);
    _print_unlocked<A, B>(_:_:)();
    sub_10016AE10(90, 0, (void *)0xE000000000000000, 0, a5, (uint64_t)&off_10032C040);
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    if (a2) {
      uint64_t v10 = 0x6C696E2D6E6F6ELL;
    }
    else {
      uint64_t v10 = 7104878;
    }
    if (a2) {
      uint64_t v11 = (void *)0xE700000000000000;
    }
    else {
      uint64_t v11 = (void *)0xE300000000000000;
    }
    _StringGuts.grow(_:)(41);
    swift_bridgeObjectRelease();
    v12._uint64_t countAndFlagsBits = a3;
    v12._object = a4;
    String.append(_:)(v12);
    v13._uint64_t countAndFlagsBits = 0xD000000000000013;
    v13._object = (void *)0x80000001002BB5C0;
    String.append(_:)(v13);
    v14._uint64_t countAndFlagsBits = v10;
    v14._object = v11;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    sub_10016ABE4(0xD000000000000012, (void *)0x80000001002BB5A0, 0, a5, (uint64_t)&off_10032C040);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000B9170(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v55 = a3;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v57 = sub_1001F7514();
  char v56 = v11;
  UUID.init()();
  uint64_t v12 = UUID.uuidString.getter();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v15 = sub_10000A38C(&qword_1003637D0);
  swift_allocObject();
  uint64_t v16 = PassthroughSubject.init()();
  uint64_t v17 = &v3[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_remoteSubscriptions];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v58 = *(void *)v17;
  *(void *)uint64_t v17 = 0x8000000000000000;
  uint64_t v54 = v12;
  sub_100265288(v16, v12, v14, isUniquelyReferenced_nonNull_native);
  *(void *)uint64_t v17 = v58;
  uint64_t v53 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_10000A38C(&qword_1003718D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10028FDD0;
  strcpy((char *)(inited + 32), "activityName");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  int64_t v20 = *(void *)(a1 + 16);
  id v21 = _swiftEmptyArrayStorage;
  if (v20)
  {
    uint64_t v49 = v16;
    uint64_t v50 = v15;
    uint64_t v51 = v4;
    uint64_t v52 = a2;
    char v59 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000B54DC(0, v20, 0);
    uint64_t v22 = 0;
    id v21 = v59;
    unint64_t v23 = (unint64_t)"ityControl.activity.media";
    unint64_t v24 = (unint64_t)"ityControl.activity.call";
    unint64_t v25 = (unint64_t)"ityControl.activity.timer";
    unint64_t v26 = (unint64_t)"sendCurrentValue";
    do
    {
      unint64_t v27 = 0x80000001002BB550;
      unint64_t v28 = 0xD000000000000029;
      switch(*(unsigned char *)(a1 + v22 + 32))
      {
        case 1:
          unint64_t v28 = 0xD00000000000002FLL;
          unint64_t v27 = v23 | 0x8000000000000000;
          break;
        case 2:
          unint64_t v27 = v24 | 0x8000000000000000;
          break;
        case 3:
          unint64_t v28 = 0xD000000000000028;
          unint64_t v27 = v25 | 0x8000000000000000;
          break;
        case 4:
          unint64_t v27 = v26 | 0x8000000000000000;
          break;
        default:
          break;
      }
      char v59 = v21;
      unint64_t v30 = v21[2];
      unint64_t v29 = v21[3];
      if (v30 >= v29 >> 1)
      {
        id v48 = (char *)v23;
        uint64_t v47 = (char *)v24;
        unint64_t v46 = (char *)v25;
        uint64_t v45 = (const char *)v26;
        sub_1000B54DC(v29 > 1, v30 + 1, 1);
        unint64_t v26 = (unint64_t)v45;
        unint64_t v25 = (unint64_t)v46;
        unint64_t v24 = (unint64_t)v47;
        unint64_t v23 = (unint64_t)v48;
        id v21 = v59;
      }
      ++v22;
      v21[2] = v30 + 1;
      Swift::String v31 = &v21[2 * v30];
      v31[4] = v28;
      v31[5] = v27;
    }
    while (v20 != v22);
    swift_bridgeObjectRelease();
    a2 = v52;
    uint64_t v4 = v51;
    uint64_t v16 = v49;
  }
  uint64_t v32 = sub_10000A38C((uint64_t *)&unk_100367D40);
  *(void *)(inited + 48) = v21;
  *(void *)(inited + 72) = v32;
  *(void *)(inited + 80) = 0x4974736575716572;
  *(void *)(inited + 88) = 0xE900000000000044;
  uint64_t v33 = v53;
  *(void *)(inited + 96) = v54;
  *(void *)(inited + 104) = v33;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0xD000000000000010;
  *(void *)(inited + 136) = 0x80000001002BB470;
  *(void *)(inited + 168) = &type metadata for Bool;
  *(unsigned char *)(inited + 144) = (v55 & 1) == 0;
  unint64_t v34 = sub_100268FC4(inited);
  char v59 = 0;
  unint64_t v60 = 0xE000000000000000;
  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease();
  char v59 = (void *)0xD00000000000001CLL;
  unint64_t v60 = 0x80000001002BB770;
  uint64_t v35 = v57;
  v36._uint64_t countAndFlagsBits = v57;
  uint64_t v37 = v56;
  v36._object = v56;
  String.append(_:)(v36);
  v38._uint64_t countAndFlagsBits = 32;
  v38._object = (void *)0xE100000000000000;
  String.append(_:)(v38);
  id v39 = sub_1001F5E20();
  swift_bridgeObjectRetain();
  NSString v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v39 ulog:40 message:v40];
  swift_bridgeObjectRelease();

  uint64_t v41 = (void *)swift_allocObject();
  v41[2] = v4;
  v41[3] = v35;
  v41[4] = v37;
  v41[5] = v16;
  swift_retain();
  id v42 = v4;
  sub_1001884A0(0xD000000000000012, (void *)0x80000001002BB790, a2, v34, 0, 1, (void (*)(void, void, uint64_t))sub_1000BAAA0, (uint64_t)v41);
  swift_release();
  swift_bridgeObjectRelease();
  char v59 = (void *)v16;
  sub_10000B010(&qword_1003637D8, &qword_1003637D0);
  uint64_t v43 = Publisher.eraseToAnyPublisher()();
  swift_release();
  swift_release();
  return v43;
}

uint64_t sub_1000B978C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (a3)
  {
    swift_errorRetain();
    _StringGuts.grow(_:)(38);
    v8._object = (void *)0x80000001002BB7E0;
    v8._uint64_t countAndFlagsBits = 0xD000000000000021;
    String.append(_:)(v8);
    v9._uint64_t countAndFlagsBits = a5;
    v9._object = a6;
    String.append(_:)(v9);
    v10._uint64_t countAndFlagsBits = 32;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    sub_10000A38C((uint64_t *)&unk_100365D60);
    _print_unlocked<A, B>(_:_:)();
    id v11 = sub_1001F5E20();
    swift_bridgeObjectRetain();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v11 ulog:90 message:v12];
    swift_bridgeObjectRelease();

    swift_errorRetain();
    PassthroughSubject.send(completion:)();
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    _StringGuts.grow(_:)(35);
    swift_bridgeObjectRelease();
    v14._uint64_t countAndFlagsBits = a5;
    v14._object = a6;
    String.append(_:)(v14);
    id v15 = sub_1001F5E20();
    swift_bridgeObjectRetain();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v15 ulog:40 message:v16];
    swift_bridgeObjectRelease();

    return PassthroughSubject.send(completion:)();
  }
}

uint64_t sub_1000B9994(uint64_t a1, uint64_t a2, void (*a3)(void, void, uint64_t), uint64_t a4)
{
  id v5 = v4;
  uint64_t ObjectType = swift_getObjectType();
  sub_10016ABE4(0xD000000000000025, (void *)0x80000001002BB3C0, 0, ObjectType, (uint64_t)&off_10032C040);
  strcpy((char *)v47, "activityName");
  BYTE5(v47[1]) = 0;
  HIWORD(v47[1]) = -5120;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v11 = sub_100269E60((uint64_t)v48), (v12 & 1) != 0))
  {
    sub_100027B10(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v49);
  }
  else
  {
    long long v49 = 0u;
    long long v50 = 0u;
  }
  sub_1000BA108((uint64_t)v48);
  if (!*((void *)&v50 + 1))
  {
    sub_10000D78C((uint64_t)&v49, &qword_100371910);
    goto LABEL_12;
  }
  sub_10000A38C((uint64_t *)&unk_100367D40);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    id v17 = sub_1001F5E20();
    NSString v18 = String._bridgeToObjectiveC()();
    [v17 ulog:90 message:v18];

LABEL_22:
    sub_10001A050();
    uint64_t v23 = swift_allocError();
    *(void *)uint64_t v24 = 0;
    *(void *)(v24 + 8) = 0xE000000000000000;
    *(unsigned char *)(v24 + 16) = 9;
    a3(0, 0, v23);
    return swift_errorRelease();
  }
  uint64_t v13 = v47[0];
  if (!a2)
  {
    long long v49 = 0u;
    long long v50 = 0u;
LABEL_20:
    swift_bridgeObjectRelease();
    sub_10000D78C((uint64_t)&v49, &qword_100371910);
    goto LABEL_22;
  }
  v47[0] = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v47[1] = v14;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a2 + 16) && (unint64_t v15 = sub_100269E60((uint64_t)v48), (v16 & 1) != 0))
  {
    sub_100027B10(*(void *)(a2 + 56) + 32 * v15, (uint64_t)&v49);
  }
  else
  {
    long long v49 = 0u;
    long long v50 = 0u;
  }
  sub_1000BA108((uint64_t)v48);
  if (!*((void *)&v50 + 1)) {
    goto LABEL_20;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v19 = v48[0];
  uint64_t v20 = v48[1];
  strcpy((char *)v47, "requestID");
  WORD1(v47[1]) = 0;
  HIDWORD(v47[1]) = -385875968;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v21 = sub_100269E60((uint64_t)v48), (v22 & 1) != 0))
  {
    sub_100027B10(*(void *)(a1 + 56) + 32 * v21, (uint64_t)&v49);
  }
  else
  {
    long long v49 = 0u;
    long long v50 = 0u;
  }
  sub_1000BA108((uint64_t)v48);
  if (!*((void *)&v50 + 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000D78C((uint64_t)&v49, &qword_100371910);
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v44 = v47[0];
  uint64_t v45 = v47[1];
  uint64_t v46 = v19;
  if (qword_10035A628 != -1) {
    swift_once();
  }
  unint64_t v26 = (void *)qword_1003ACB50;
  type metadata accessor for TimedTaskStorage();
  swift_allocObject();
  uint64_t v27 = sub_100114EC0(v26, 30.0);
  uint64_t v28 = swift_allocObject();
  swift_weakInit();
  unint64_t v29 = (void *)swift_allocObject();
  v29[2] = v28;
  void v29[3] = a3;
  v29[4] = a4;
  void v29[5] = v5;
  uint64_t v30 = *(void *)(v27 + 16);
  *(void *)(v27 + 16) = sub_1000BA1DC;
  *(void *)(v27 + 24) = v29;
  swift_retain();
  v5;
  sub_10000F088(v30);
  swift_beginAccess();
  swift_retain();
  sub_100030690((uint64_t *)&v49, v27);
  swift_endAccess();
  swift_release();
  uint64_t v31 = *(void *)(v13 + 16);
  if (v31)
  {
    uint64_t v42 = v27;
    uint64_t v43 = v20;
    swift_bridgeObjectRetain();
    uint64_t v32 = (uint64_t *)(v13 + 40);
    uint64_t v33 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v34 = *(v32 - 1);
      uint64_t v35 = *v32;
      swift_bridgeObjectRetain();
      char v36 = sub_1001853C0(v34, v35);
      swift_bridgeObjectRelease();
      if (v36 != 5)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v33 = sub_100089938(0, v33[2] + 1, 1, v33);
        }
        unint64_t v38 = v33[2];
        unint64_t v37 = v33[3];
        if (v38 >= v37 >> 1) {
          uint64_t v33 = sub_100089938((void *)(v37 > 1), v38 + 1, 1, v33);
        }
        _OWORD v33[2] = v38 + 1;
        *((unsigned char *)v33 + v38 + 32) = v36;
      }
      v32 += 2;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    uint64_t v27 = v42;
    uint64_t v20 = v43;
  }
  else
  {
    uint64_t v33 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  *(void *)&long long v49 = 0xD000000000000010;
  *((void *)&v49 + 1) = 0x80000001002BB470;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v39 = sub_100269E60((uint64_t)v48), (v40 & 1) != 0))
  {
    sub_100027B10(*(void *)(a1 + 56) + 32 * v39, (uint64_t)&v49);
  }
  else
  {
    long long v49 = 0u;
    long long v50 = 0u;
  }
  sub_1000BA108((uint64_t)v48);
  if (!*((void *)&v50 + 1))
  {
    sub_10000D78C((uint64_t)&v49, &qword_100371910);
    goto LABEL_49;
  }
  if (!swift_dynamicCast())
  {
LABEL_49:
    int v41 = 1;
    goto LABEL_50;
  }
  int v41 = LOBYTE(v47[0]);
LABEL_50:
  sub_1000B80F0((uint64_t)v33, v46, v20, v44, v45, v27, v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000BA04C(uint64_t a1, void (*a2)(void, void, void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    a2(0, 0, 0);
    swift_beginAccess();
    sub_100036688(v4);
    swift_endAccess();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000BA108(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000BA15C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000BA194()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000BA1DC()
{
  return sub_1000BA04C(*(void *)(v0 + 16), *(void (**)(void, void, void))(v0 + 24));
}

uint64_t sub_1000BA1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A38C(&qword_1003637B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000BA250()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_1000BA260(void *a1)
{
  return sub_1000B8974(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000BA26C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

void sub_1000BA2BC(uint64_t *a1)
{
  sub_1000B8B10(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_1000BA2F0()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000BA330(uint64_t a1)
{
  return sub_1000B8F88(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1000BA33C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000BA34C()
{
  return swift_release();
}

void sub_1000BA354(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  uint64_t v25 = 0xD000000000000019;
  unint64_t v26 = (void *)0x80000001002BB630;
  v5._uint64_t countAndFlagsBits = Dictionary.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  id v6 = sub_1001F5E20();
  swift_bridgeObjectRetain();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 ulog:40 message:v7];
  swift_bridgeObjectRelease();

  v24._uint64_t countAndFlagsBits = 0x4974736575716572;
  v24._object = (void *)0xE900000000000044;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v8 = sub_100269E60((uint64_t)&v25), (v9 & 1) != 0))
  {
    sub_100027B10(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v27);
  }
  else
  {
    long long v27 = 0u;
    long long v28 = 0u;
  }
  sub_1000BA108((uint64_t)&v25);
  if (!*((void *)&v28 + 1))
  {
    sub_10000D78C((uint64_t)&v27, &qword_100371910);
    goto LABEL_13;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    sub_10016AE10(60, 0xD000000000000030, (void *)0x80000001002BB650, 0, ObjectType, (uint64_t)&off_10032C040);
    return;
  }
  uint64_t v10 = v2 + OBJC_IVAR____TtC17proximitycontrold12RapportProxy_remoteSubscriptions;
  swift_beginAccess();
  if (!*(void *)(*(void *)v10 + 16))
  {
LABEL_15:
    uint64_t v25 = 0;
    unint64_t v26 = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(61);
    v14._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
    v14._object = (void *)0x80000001002BB690;
    String.append(_:)(v14);
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    sub_10016AE10(60, v25, v26, 0, ObjectType, (uint64_t)&off_10032C040);
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100269CBC(v24._countAndFlagsBits, (uint64_t)v24._object);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_retain();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  strcpy((char *)&v23, "activityName");
  BYTE5(v23._object) = 0;
  HIWORD(v23._object) = -5120;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v12 = sub_100269E60((uint64_t)&v25), (v13 & 1) != 0))
  {
    sub_100027B10(*(void *)(a1 + 56) + 32 * v12, (uint64_t)&v27);
  }
  else
  {
    long long v27 = 0u;
    long long v28 = 0u;
  }
  sub_1000BA108((uint64_t)&v25);
  if (!*((void *)&v28 + 1))
  {
    sub_10000D78C((uint64_t)&v27, &qword_100371910);
    goto LABEL_22;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_22:
    sub_10016AE10(60, 0xD00000000000002DLL, (void *)0x80000001002BB6D0, 0, ObjectType, (uint64_t)&off_10032C040);
    swift_release();
    return;
  }
  swift_bridgeObjectRetain();
  int v15 = sub_1001853C0(v23._countAndFlagsBits, (uint64_t)v23._object);
  swift_bridgeObjectRelease();
  if (v15 == 5)
  {
    uint64_t v25 = 0;
    unint64_t v26 = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(35);
    swift_bridgeObjectRelease();
    uint64_t v25 = 0xD000000000000021;
    unint64_t v26 = (void *)0x80000001002BB700;
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    sub_10016AE10(60, v25, v26, 0, ObjectType, (uint64_t)&off_10032C040);
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRelease();
  id v16 = objc_allocWithZone((Class)NSUserActivity);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v18 = [v16 initWithActivityType:v17];

  v23._uint64_t countAndFlagsBits = 0xD000000000000010;
  v23._object = (void *)0x80000001002BB580;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v19 = sub_100269E60((uint64_t)&v25), (v20 & 1) != 0))
  {
    sub_100027B10(*(void *)(a1 + 56) + 32 * v19, (uint64_t)&v27);
  }
  else
  {
    long long v27 = 0u;
    long long v28 = 0u;
  }
  sub_1000BA108((uint64_t)&v25);
  if (!*((void *)&v28 + 1))
  {
    sub_10000D78C((uint64_t)&v27, &qword_100371910);
    goto LABEL_32;
  }
  sub_10000A38C(&qword_10035C7C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_32:
    v21.super.Class isa = 0;
    goto LABEL_33;
  }
  v21.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
LABEL_33:
  [v18 setUserInfo:v21.super.isa, v23._countAndFlagsBits, v23._object];

  id v22 = [self activityFrom:v18];
  if (v22)
  {
    uint64_t v25 = (uint64_t)v22;
    PassthroughSubject.send(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10016AE10(60, 0xD000000000000038, (void *)0x80000001002BB730, 0, ObjectType, (uint64_t)&off_10032C040);
  }
  swift_release();
}

uint64_t sub_1000BAA58()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000BAAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000B978C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32));
}

_UNKNOWN **static UIBlurEffectStyle.allCases.getter()
{
  return &off_10031E008;
}

unint64_t UIBlurEffectStyle.description.getter(uint64_t a1)
{
  unint64_t result = 0x67694C6172747865;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x746867696CLL;
      break;
    case 2:
      unint64_t result = 1802658148;
      break;
    case 3:
      unint64_t result = 0x7261446172747865;
      break;
    case 4:
      unint64_t result = 0x72616C75676572;
      break;
    case 5:
      unint64_t result = 0x6E656E696D6F7270;
      break;
    case 6:
    case 12:
    case 19:
      unint64_t result = 0xD000000000000017;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0x614D6D6574737973;
      break;
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    case 10:
      unint64_t result = 0xD000000000000014;
      break;
    case 11:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 13:
      unint64_t result = 0xD000000000000013;
      break;
    case 14:
      unint64_t result = 0xD000000000000018;
      break;
    case 15:
      unint64_t result = 0xD000000000000019;
      break;
    case 16:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 17:
      unint64_t result = 0xD000000000000016;
      break;
    case 18:
      unint64_t result = 0xD000000000000012;
      break;
    case 20:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      _StringGuts.grow(_:)(19);
      swift_bridgeObjectRelease();
      v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v3);
      swift_bridgeObjectRelease();
      unint64_t result = 0xD000000000000011;
      break;
  }
  return result;
}

unint64_t sub_1000BADCC()
{
  unint64_t result = qword_1003637E0;
  if (!qword_1003637E0)
  {
    sub_10000A3D0(&qword_1003637E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003637E0);
  }
  return result;
}

void sub_1000BAE28(void *a1@<X8>)
{
  *a1 = &off_10031E008;
}

uint64_t sub_1000BAE38()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000BAE98()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_1000BAEE8()
{
  return UIBlurEffectStyle.description.getter(*v0);
}

unint64_t sub_1000BAEF0()
{
  unint64_t result = qword_1003637F0[0];
  if (!qword_1003637F0[0])
  {
    type metadata accessor for Style(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1003637F0);
  }
  return result;
}

uint64_t sub_1000BAF48()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

BOOL sub_1000BB010(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_1000BB020(uint64_t a1, char a2)
{
}

Swift::Int sub_1000BB048(char a1)
{
  return Hasher._finalize()();
}

BOOL sub_1000BB090(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000BB010(*a1, *a2);
}

Swift::Int sub_1000BB09C()
{
  return sub_1000BB048(*v0);
}

void sub_1000BB0A4(uint64_t a1)
{
  sub_1000BB020(a1, *v1);
}

Swift::Int sub_1000BB0AC()
{
  Hasher.init(_seed:)();
  sub_1000BB020((uint64_t)v2, *v0);
  return Hasher._finalize()();
}

uint64_t sub_1000BB0EC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = type metadata accessor for ViewServicePresenter();
  sub_10016ADD8(0x74696E696544, (void *)0xE600000000000000, 0, v2, (uint64_t)&off_100324B48);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + *(void *)(*(void *)v0 + 120), v1);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000BB218()
{
  sub_1000BB0EC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ViewServicePresenter()
{
  return sub_10000F2E4();
}

uint64_t sub_1000BB288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

unsigned char *sub_1000BB290(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000BB35CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for ViewServicePresenter.ViewServiceType()
{
  return sub_10000F2E4();
}

uint64_t sub_1000BB39C()
{
  return swift_getWitnessTable();
}

uint64_t destroy for BugReport(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BugReport(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 96);
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = v10;
  *(void *)(a1 + 104) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BugReport(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (_OWORD *)(a1 + 24);
  uint64_t v5 = (_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v6)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000BB694(a1 + 24);
      long long v8 = *(_OWORD *)(a2 + 40);
      long long v7 = *(_OWORD *)(a2 + 56);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 40) = v8;
      *(_OWORD *)(a1 + 56) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v10;
    *uint64_t v4 = v9;
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000BB694(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for BugReport(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (!*(void *)(a1 + 32)) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 32);
  if (!v5)
  {
    sub_1000BB694(a1 + 24);
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_6;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BugReport(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BugReport(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BugReport()
{
  return &type metadata for BugReport;
}

void *sub_1000BB87C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_1000B54DC(0, v2, 0);
    uint64_t result = _swiftEmptyArrayStorage;
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    unint64_t v5 = 0x80000001002B17A0;
    unint64_t v6 = 0x80000001002B17C0;
    do
    {
      int v8 = *v4++;
      int v7 = v8;
      unint64_t v9 = 0xD000000000000022;
      if (v8 == 1)
      {
        unint64_t v10 = v6;
      }
      else
      {
        unint64_t v9 = 0xD000000000000010;
        unint64_t v10 = 0x80000001002B17F0;
      }
      if (v7) {
        unint64_t v11 = v9;
      }
      else {
        unint64_t v11 = 0xD000000000000015;
      }
      if (v7) {
        unint64_t v12 = v10;
      }
      else {
        unint64_t v12 = v5;
      }
      id v18 = result;
      unint64_t v14 = result[2];
      unint64_t v13 = result[3];
      if (v14 >= v13 >> 1)
      {
        unint64_t v16 = v6;
        unint64_t v17 = v5;
        sub_1000B54DC(v13 > 1, v14 + 1, 1);
        unint64_t v6 = v16;
        unint64_t v5 = v17;
        uint64_t result = v18;
      }
      result[2] = v14 + 1;
      int v15 = &result[2 * v14];
      v15[4] = v11;
      v15[5] = v12;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1000BB9AC(uint64_t a1)
{
  uint64_t v33 = type metadata accessor for URLQueryItem();
  uint64_t v3 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  unint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  int v7 = _swiftEmptyArrayStorage;
  if (!v6) {
    return (uint64_t)v7;
  }
  uint64_t v31 = v5;
  uint64_t v25 = v1;
  uint64_t v35 = _swiftEmptyArrayStorage;
  sub_1000B56F4(0, v6, 0);
  int v7 = v35;
  uint64_t result = sub_1001FB3F8(a1);
  uint64_t v10 = result;
  uint64_t v11 = 0;
  uint64_t v12 = a1 + 64;
  uint64_t v29 = a1 + 64;
  uint64_t v30 = v3 + 32;
  uint64_t v26 = a1 + 80;
  int64_t v27 = v6;
  uint64_t v32 = v3;
  uint64_t v28 = v9;
  unint64_t v13 = v31;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v16 = (unint64_t)v10 >> 6;
    if ((*(void *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v9) {
      goto LABEL_24;
    }
    uint64_t v34 = v11;
    uint64_t v17 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v35 = v7;
    unint64_t v19 = v7[2];
    unint64_t v18 = v7[3];
    if (v19 >= v18 >> 1)
    {
      sub_1000B56F4(v18 > 1, v19 + 1, 1);
      int v7 = v35;
    }
    v7[2] = v19 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v32 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v19, v13, v33);
    int64_t v14 = 1 << *(unsigned char *)(v17 + 32);
    if (v10 >= v14) {
      goto LABEL_25;
    }
    uint64_t v12 = v29;
    uint64_t v20 = *(void *)(v29 + 8 * v16);
    if ((v20 & (1 << v10)) == 0) {
      goto LABEL_26;
    }
    a1 = v17;
    LODWORD(v9) = v28;
    if (*(_DWORD *)(v17 + 36) != v28) {
      goto LABEL_27;
    }
    unint64_t v21 = v20 & (-2 << (v10 & 0x3F));
    if (v21)
    {
      int64_t v14 = __clz(__rbit64(v21)) | v10 & 0xFFFFFFFFFFFFFFC0;
      int64_t v15 = v27;
    }
    else
    {
      unint64_t v22 = v16 + 1;
      unint64_t v23 = (unint64_t)(v14 + 63) >> 6;
      int64_t v15 = v27;
      if (v16 + 1 < v23)
      {
        unint64_t v24 = *(void *)(v29 + 8 * v22);
        if (v24)
        {
LABEL_20:
          int64_t v14 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v16)
          {
            unint64_t v24 = *(void *)(v26 + 8 * v16++);
            if (v24)
            {
              unint64_t v22 = v16 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v11 = v34 + 1;
    uint64_t v10 = v14;
    if (v34 + 1 == v15) {
      return (uint64_t)v7;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000BBCBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v92 = a1;
  uint64_t v4 = sub_10000A38C(&qword_100360050);
  __chkstk_darwin(v4 - 8);
  int64_t v6 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A38C(&qword_100363920);
  __chkstk_darwin(v7 - 8);
  id v93 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URLComponents();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v100 = v13;
  uint64_t v101 = v14;
  __chkstk_darwin(v13);
  id v99 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001639C((uint64_t)(v1 + 2), (uint64_t)&v106, &qword_100363900);
  sub_10001639C((uint64_t)&v106, (uint64_t)&v107, &qword_100363900);
  unint64_t v16 = &_swiftEmptyDictionarySingleton;
  if (v107 != 10)
  {
    unint64_t v17 = sub_100115CA0(v107);
    uint64_t v19 = v18;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v102[0] = &_swiftEmptyDictionarySingleton;
    sub_100264AD4(v17, v19, 0x6966697373616C43, 0xEE006E6F69746163, isUniquelyReferenced_nonNull_native);
    unint64_t v16 = (void *)v102[0];
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = v3[1];
  if (v21)
  {
    uint64_t v22 = *v3;
    swift_bridgeObjectRetain();
    char v23 = swift_isUniquelyReferenced_nonNull_native();
    v102[0] = v16;
    sub_100264AD4(v22, v21, 0x7470697263736544, 0xEB000000006E6F69, v23);
    unint64_t v16 = (void *)v102[0];
    swift_bridgeObjectRelease();
  }
  sub_10001639C((uint64_t)(v3 + 11), (uint64_t)&v105, &qword_100363908);
  sub_10001639C((uint64_t)&v105, (uint64_t)&v108, &qword_100363908);
  uint64_t v24 = 0xE600000000000000;
  uint64_t v25 = 0x737961776C41;
  switch(v108)
  {
    case 1:
      uint64_t v24 = 0xEC00000079725420;
      uint64_t v25 = 0x74276E6469442049;
      goto LABEL_11;
    case 2:
      uint64_t v24 = 0xEE00656C62616369;
      uint64_t v25 = 0x6C70704120746F4ELL;
      goto LABEL_11;
    case 3:
      uint64_t v25 = 0x796C65726152;
      goto LABEL_11;
    case 4:
      uint64_t v25 = 0x656D6974656D6F53;
      uint64_t v24 = 0xE900000000000073;
      goto LABEL_11;
    case 5:
      uint64_t v25 = 0x656C62616E55;
      goto LABEL_11;
    case 6:
      goto LABEL_12;
    default:
LABEL_11:
      char v26 = swift_isUniquelyReferenced_nonNull_native();
      v102[0] = v16;
      sub_100264AD4(v25, v24, 0x6375646F72706552, 0xEF7974696C696269, v26);
      unint64_t v16 = (void *)v102[0];
      swift_bridgeObjectRelease();
LABEL_12:
      uint64_t v27 = v3[13];
      if (v27)
      {
        uint64_t v28 = v3[12];
        swift_bridgeObjectRetain();
        char v29 = swift_isUniquelyReferenced_nonNull_native();
        v102[0] = v16;
        sub_100264AD4(v28, v27, 0x656C746954, 0xE500000000000000, v29);
        unint64_t v16 = (void *)v102[0];
        swift_bridgeObjectRelease();
      }
      uint64_t v94 = v12;
      sub_10001639C((uint64_t)(v3 + 3), (uint64_t)v104, &qword_1003638F8);
      sub_10001639C((uint64_t)v104, (uint64_t)&v109, &qword_1003638F8);
      uint64_t v30 = v110;
      uint64_t v95 = v9;
      uint64_t v96 = v2;
      if (v110)
      {
        uint64_t v31 = v3;
        uint64_t v32 = v6;
        uint64_t v33 = v109;
        uint64_t v34 = v111;
        uint64_t v35 = v112;
        uint64_t v36 = v114;
        unint64_t v98 = v113;
        swift_bridgeObjectRetain();
        char v37 = swift_isUniquelyReferenced_nonNull_native();
        v102[0] = v16;
        uint64_t v38 = v33;
        int64_t v6 = v32;
        uint64_t v3 = v31;
        sub_100264AD4(v38, v30, 0x6E656E6F706D6F43, 0xEB00000000444974, v37);
        uint64_t v39 = v102[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        char v40 = swift_isUniquelyReferenced_nonNull_native();
        v102[0] = v39;
        sub_100264AD4(v34, v35, 0x6E656E6F706D6F43, 0xED0000656D614E74, v40);
        uint64_t v41 = v102[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        char v42 = swift_isUniquelyReferenced_nonNull_native();
        v102[0] = v41;
        sub_100264AD4((uint64_t)v98, v36, 0xD000000000000010, 0x80000001002BBBD0, v42);
        unint64_t v16 = (void *)v102[0];
        swift_bridgeObjectRelease();
      }
      sub_10001639C((uint64_t)(v3 + 10), (uint64_t)v103, &qword_100363910);
      sub_10001639C((uint64_t)v103, (uint64_t)&v115, &qword_100363910);
      uint64_t v43 = v115;
      if (v115)
      {
        int64_t v44 = *(void *)(v115 + 16);
        if (v44)
        {
          unint64_t v88 = v16;
          id v89 = v3;
          uint64_t v90 = v6;
          uint64_t v91 = v10;
          v102[0] = 0;
          v102[1] = 0xE000000000000000;
          _StringGuts.grow(_:)(18);
          swift_bridgeObjectRelease();
          v102[0] = 0xD000000000000010;
          v102[1] = 0x80000001002BBBB0;
          v45._uint64_t countAndFlagsBits = Array.description.getter();
          String.append(_:)(v45);
          swift_bridgeObjectRelease();
          id v46 = sub_1001F5B60();
          swift_bridgeObjectRetain();
          NSString v47 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v46 ulog:40 message:v47];
          swift_bridgeObjectRelease();

          v102[0] = _swiftEmptyArrayStorage;
          sub_1000B54DC(0, v44, 0);
          unint64_t v98 = *(void (**)(char *, uint64_t, uint64_t))(v101 + 16);
          uint64_t v48 = v43 + ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80));
          uint64_t v97 = *(void *)(v101 + 72);
          v101 += 16;
          long long v49 = (void (**)(char *, uint64_t))(v101 - 8);
          do
          {
            long long v50 = v99;
            uint64_t v51 = v100;
            v98(v99, v48, v100);
            uint64_t v52 = UUID.uuidString.getter();
            uint64_t v54 = v53;
            (*v49)(v50, v51);
            uint64_t v55 = v102[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1000B54DC(0, *(void *)(v55 + 16) + 1, 1);
              uint64_t v55 = v102[0];
            }
            unint64_t v57 = *(void *)(v55 + 16);
            unint64_t v56 = *(void *)(v55 + 24);
            if (v57 >= v56 >> 1)
            {
              sub_1000B54DC(v56 > 1, v57 + 1, 1);
              uint64_t v55 = v102[0];
            }
            *(void *)(v55 + 16) = v57 + 1;
            uint64_t v58 = v55 + 16 * v57;
            *(void *)(v58 + 32) = v52;
            *(void *)(v58 + 40) = v54;
            v48 += v97;
            --v44;
          }
          while (v44);
          v102[0] = v55;
          sub_10000A38C((uint64_t *)&unk_100367D40);
          sub_100089B9C();
          uint64_t v59 = BidirectionalCollection<>.joined(separator:)();
          uint64_t v61 = v60;
          swift_release();
          uint64_t v62 = v88;
          char v63 = swift_isUniquelyReferenced_nonNull_native();
          v102[0] = v62;
          sub_100264AD4(v59, v61, 0x4449656369766544, 0xE900000000000073, v63);
          unint64_t v16 = (void *)v102[0];
          swift_bridgeObjectRelease();
          uint64_t v10 = v91;
          int64_t v6 = v90;
          uint64_t v3 = v89;
        }
      }
      uint64_t v64 = v94;
      if (*(void *)(v3[9] + 16))
      {
        v102[0] = 0;
        v102[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(16);
        swift_bridgeObjectRelease();
        strcpy((char *)v102, "Have keywords ");
        HIBYTE(v102[1]) = -18;
        swift_bridgeObjectRetain();
        v65._uint64_t countAndFlagsBits = Array.description.getter();
        String.append(_:)(v65);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v66 = sub_1001F5B60();
        swift_bridgeObjectRetain();
        NSString v67 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v66 ulog:40 message:v67];
        swift_bridgeObjectRelease();

        uint64_t v68 = swift_bridgeObjectRetain();
        uint64_t v69 = sub_1000BB87C(v68);
        swift_bridgeObjectRelease();
        v102[0] = v69;
        sub_10000A38C((uint64_t *)&unk_100367D40);
        sub_100089B9C();
        uint64_t v70 = BidirectionalCollection<>.joined(separator:)();
        uint64_t v72 = v71;
        swift_bridgeObjectRelease();
        char v73 = swift_isUniquelyReferenced_nonNull_native();
        v102[0] = v16;
        sub_100264AD4(v70, v72, 0x7364726F7779654BLL, 0xE800000000000000, v73);
        swift_bridgeObjectRelease();
      }
      uint64_t v74 = (uint64_t)v93;
      URLComponents.init(string:)();
      uint64_t v75 = v95;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v74, 1, v95) == 1)
      {
        swift_bridgeObjectRelease();
        sub_10000D78C(v74, &qword_100363920);
        v102[0] = 0;
        v102[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(44);
        swift_bridgeObjectRelease();
        id v76 = sub_1001F5B60();
        NSString v77 = String._bridgeToObjectiveC()();
        [v76 ulog:90 message:v77];

        sub_1000BD830();
        swift_allocError();
        *id v78 = 1;
        return swift_willThrow();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v64, v74, v75);
        uint64_t v80 = swift_bridgeObjectRetain();
        sub_1000BB9AC(v80);
        swift_bridgeObjectRelease_n();
        URLComponents.queryItems.setter();
        URLComponents.url.getter();
        uint64_t v81 = type metadata accessor for URL();
        uint64_t v82 = *(void *)(v81 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v6, 1, v81) == 1)
        {
          sub_10000D78C((uint64_t)v6, &qword_100360050);
          v102[0] = 0;
          v102[1] = 0xE000000000000000;
          _StringGuts.grow(_:)(43);
          swift_bridgeObjectRelease();
          v102[0] = 0xD000000000000029;
          v102[1] = 0x80000001002BBB80;
          sub_1000BD884(&qword_100363930, (void (*)(uint64_t))&type metadata accessor for URLComponents);
          v83._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v83);
          swift_bridgeObjectRelease();
          id v84 = sub_1001F5B60();
          swift_bridgeObjectRetain();
          NSString v85 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v84 ulog:90 message:v85];
          swift_bridgeObjectRelease();

          sub_1000BD830();
          swift_allocError();
          *uint64_t v86 = 0;
          swift_willThrow();
          return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v64, v75);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v10 + 8))(v64, v75);
          return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v82 + 32))(v92, v6, v81);
        }
      }
  }
}

id sub_1000BCA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v36 = a2;
  uint64_t v37 = a1;
  uint64_t v44 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v44 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v44);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - v8;
  unint64_t aBlock = 0x6972656767697254;
  unint64_t v39 = 0xEB0000000020676ELL;
  v10._uint64_t countAndFlagsBits = sub_1000BCE34();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  id v11 = sub_1001F5B60();
  swift_bridgeObjectRetain();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 ulog:40 message:v12];
  swift_bridgeObjectRelease();

  id result = (id)sub_1000BBCBC((uint64_t)v9);
  if (!v3)
  {
    uint64_t v35 = 0;
    uint64_t v14 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v15 = v37;
    unint64_t aBlock = 0;
    unint64_t v39 = 0xE000000000000000;
    _StringGuts.grow(_:)(22);
    swift_bridgeObjectRelease();
    unint64_t aBlock = 0xD000000000000014;
    unint64_t v39 = 0x80000001002BBAA0;
    sub_1000BD884(&qword_100363918, (void (*)(uint64_t))&type metadata accessor for URL);
    v16._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    id v17 = sub_1001F5B60();
    swift_bridgeObjectRetain();
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v17 ulog:10 message:v18];
    swift_bridgeObjectRelease();

    id result = [self defaultWorkspace];
    id v34 = result;
    if (result)
    {
      URL._bridgeToObjectiveC()(v19);
      uint64_t v33 = v20;
      uint64_t v21 = v44;
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v14, v9, v44);
      unint64_t v22 = (*(unsigned __int8 *)(v5 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      char v23 = (char *)swift_allocObject();
      long long v24 = v4[5];
      *((_OWORD *)v23 + 5) = v4[4];
      *((_OWORD *)v23 + 6) = v24;
      *((_OWORD *)v23 + 7) = v4[6];
      long long v25 = v4[1];
      *((_OWORD *)v23 + 1) = *v4;
      *((_OWORD *)v23 + 2) = v25;
      long long v26 = v4[3];
      *((_OWORD *)v23 + 3) = v4[2];
      *((_OWORD *)v23 + 4) = v26;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v23[v22], v14, v21);
      uint64_t v27 = (uint64_t *)&v23[(v6 + v22 + 7) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v28 = v36;
      uint64_t *v27 = v15;
      v27[1] = v28;
      char v42 = sub_1000BD680;
      uint64_t v43 = v23;
      unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
      unint64_t v39 = 1107296256;
      char v40 = sub_1000BD470;
      uint64_t v41 = &unk_100324C78;
      char v29 = _Block_copy(&aBlock);
      sub_1000BD74C((uint64_t)v4);
      sub_1000766BC(v15);
      swift_release();
      uint64_t v31 = v33;
      id v30 = v34;
      [v34 openURL:v33 configuration:0 completionHandler:v29];
      _Block_release(v29);

      return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v21);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1000BCE34()
{
  uint64_t v1 = v0;
  sub_10001639C(v0 + 96, (uint64_t)v35, &qword_10035F850);
  sub_10001639C((uint64_t)v35, (uint64_t)v39, &qword_10035F850);
  if (v39[1])
  {
    sub_100095C18((uint64_t)v35);
    sub_100089A9C(24);
    sub_10007661C((uint64_t)v35);
  }
  else
  {
    Substring.init(_:)();
  }
  sub_10000A38C((uint64_t *)&unk_10035E7E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10028D430;
  *(void *)&v40[0] = 0x726F706552677542;
  *((void *)&v40[0] + 1) = 0xEB00000000203A74;
  v3._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *((void *)&v40[0] + 1);
  *(void *)(v2 + 32) = *(void *)&v40[0];
  *(void *)(v2 + 40) = v4;
  sub_10001639C(v0 + 24, (uint64_t)v34, &qword_1003638F8);
  sub_10001639C((uint64_t)v34, (uint64_t)v40, &qword_1003638F8);
  if (*((void *)&v40[0] + 1))
  {
    long long v36 = v40[0];
    long long v37 = v40[1];
    long long v38 = v40[2];
    unint64_t v5 = sub_100115E64();
    uint64_t v7 = v6;
    unint64_t v9 = *(void *)(v2 + 16);
    unint64_t v8 = *(void *)(v2 + 24);
    if (v9 >= v8 >> 1) {
      uint64_t v2 = (uint64_t)sub_10008892C((char *)(v8 > 1), v9 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v9 + 1;
    uint64_t v10 = v2 + 16 * v9;
    *(void *)(v10 + 32) = v5;
    *(void *)(v10 + 40) = v7;
  }
  sub_10001639C(v1 + 16, (uint64_t)&v33, &qword_100363900);
  sub_10001639C((uint64_t)&v33, (uint64_t)&v41, &qword_100363900);
  if (v41 != 10)
  {
    unint64_t v11 = sub_100115CA0(v41);
    uint64_t v13 = v12;
    unint64_t v15 = *(void *)(v2 + 16);
    unint64_t v14 = *(void *)(v2 + 24);
    if (v15 >= v14 >> 1) {
      uint64_t v2 = (uint64_t)sub_10008892C((char *)(v14 > 1), v15 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v15 + 1;
    uint64_t v16 = v2 + 16 * v15;
    *(void *)(v16 + 32) = v11;
    *(void *)(v16 + 40) = v13;
  }
  sub_10001639C(v1 + 88, (uint64_t)&v32, &qword_100363908);
  sub_10001639C((uint64_t)&v32, (uint64_t)&v42, &qword_100363908);
  unint64_t v17 = 0xE600000000000000;
  uint64_t v18 = 0x737961776C41;
  switch(v42)
  {
    case 1:
      unint64_t v17 = 0xEC00000079725420;
      uint64_t v18 = 0x74276E6469442049;
      goto LABEL_18;
    case 2:
      unint64_t v17 = 0xEE00656C62616369;
      uint64_t v18 = 0x6C70704120746F4ELL;
      goto LABEL_18;
    case 3:
      uint64_t v18 = 0x796C65726152;
      goto LABEL_18;
    case 4:
      unint64_t v17 = 0xE900000000000073;
      uint64_t v18 = 0x656D6974656D6F53;
      goto LABEL_18;
    case 5:
      uint64_t v18 = 0x656C62616E55;
      goto LABEL_18;
    case 6:
      goto LABEL_21;
    default:
LABEL_18:
      unint64_t v20 = *(void *)(v2 + 16);
      unint64_t v19 = *(void *)(v2 + 24);
      if (v20 >= v19 >> 1) {
        uint64_t v2 = (uint64_t)sub_10008892C((char *)(v19 > 1), v20 + 1, 1, (char *)v2);
      }
      *(void *)(v2 + 16) = v20 + 1;
      uint64_t v21 = v2 + 16 * v20;
      *(void *)(v21 + 32) = v18;
      *(void *)(v21 + 40) = v17;
LABEL_21:
      sub_10001639C(v1 + 80, (uint64_t)v31, &qword_100363910);
      sub_10001639C((uint64_t)v31, (uint64_t)&v43, &qword_100363910);
      if (v43 && *(void *)(v43 + 16))
      {
        uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v30 = v22;
        v23._object = (void *)0xEA00000000002973;
        v23._uint64_t countAndFlagsBits = 0x2865636976656420;
        String.append(_:)(v23);
        unint64_t v25 = *(void *)(v2 + 16);
        unint64_t v24 = *(void *)(v2 + 24);
        if (v25 >= v24 >> 1) {
          uint64_t v2 = (uint64_t)sub_10008892C((char *)(v24 > 1), v25 + 1, 1, (char *)v2);
        }
        *(void *)(v2 + 16) = v25 + 1;
        uint64_t v26 = v2 + 16 * v25;
        *(void *)(v26 + 32) = v29;
        *(void *)(v26 + 40) = v30;
      }
      sub_10000A38C((uint64_t *)&unk_100367D40);
      sub_100089B9C();
      uint64_t v27 = BidirectionalCollection<>.joined(separator:)();
      swift_bridgeObjectRelease();
      return v27;
  }
}

void sub_1000BD2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  if (a2)
  {
    swift_errorRetain();
    _StringGuts.grow(_:)(45);
    v7._object = (void *)0x80000001002BBAF0;
    v7._uint64_t countAndFlagsBits = 0xD000000000000023;
    String.append(_:)(v7);
    sub_10000A38C((uint64_t *)&unk_100365D60);
    _print_unlocked<A, B>(_:_:)();
    v8._uint64_t countAndFlagsBits = 0x3D4C5255202CLL;
    v8._object = (void *)0xE600000000000000;
    String.append(_:)(v8);
    type metadata accessor for URL();
    sub_1000BD884(&qword_100363918, (void (*)(uint64_t))&type metadata accessor for URL);
    v9._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    id v10 = sub_1001F5B60();
    swift_bridgeObjectRetain();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v10 ulog:90 message:v11];

    swift_errorRelease();
    swift_bridgeObjectRelease();
  }
  if (a5) {
    a5(a2);
  }
}

uint64_t sub_1000BD470(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000BD51C()
{
  return sub_1000BCE34();
}

uint64_t sub_1000BD568()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 128) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5)) {
    swift_release();
  }

  return _swift_deallocObject(v0, v5 + 16, v3 | 7);
}

void sub_1000BD680(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  Swift::String v7 = *(void (**)(uint64_t))(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1000BD2C8(a1, a2, v2 + 16, v2 + v6, v7);
}

uint64_t sub_1000BD734(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000BD744()
{
  return swift_release();
}

uint64_t sub_1000BD74C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_1000BD7E0(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000BD7E0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1000BD830()
{
  unint64_t result = qword_100363928;
  if (!qword_100363928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363928);
  }
  return result;
}

uint64_t sub_1000BD884(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000BD8CC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000BD940(uint64_t a1, void *a2)
{
  swift_retain();
  CurrentValueSubject.value.getter();
  uint64_t v4 = v16;
  if (v16)
  {
    swift_release();
  }
  else
  {
    CurrentValueSubject.value.getter();
    swift_release();
    uint64_t v4 = v15;
  }
  swift_bridgeObjectRetain();
  char v5 = sub_1000BEF28(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = a1;
  v6._object = a2;
  String.append(_:)(v6);
  v7._uint64_t countAndFlagsBits = 8236;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  uint64_t v8 = v5 & 1;
  if (v5) {
    uint64_t v9 = 1702195828;
  }
  else {
    uint64_t v9 = 0x65736C6166;
  }
  if (v5) {
    unint64_t v10 = 0xE400000000000000;
  }
  else {
    unint64_t v10 = 0xE500000000000000;
  }
  unint64_t v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  id v12 = sub_1001F5F64();
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 ulog:v13 message:0xD000000000000026 0x80000001002BBD90];
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_1000BDAD4()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC17proximitycontrold22FrontBoardMonitorState__orientation;
  uint64_t v2 = sub_10000A38C(&qword_100368070);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1000BDB80()
{
  return type metadata accessor for FrontBoardMonitorState();
}

uint64_t type metadata accessor for FrontBoardMonitorState()
{
  uint64_t result = qword_100363968;
  if (!qword_100363968) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000BDBD4()
{
  sub_1000BDC74();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000BDC74()
{
  if (!qword_100363978)
  {
    type metadata accessor for BSInterfaceOrientation(255);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100363978);
    }
  }
}

uint64_t *sub_1000BDCCC()
{
  uint64_t v0 = sub_10000A38C(&qword_100368070);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FrontBoardMonitorState();
  uint64_t v4 = swift_allocObject();
  sub_10000A38C(&qword_100363B08);
  swift_allocObject();
  *(void *)(v4 + 16) = sub_1001ED8D8((uint64_t)&_swiftEmptySetSingleton, 0, 0, 0);
  uint64_t v5 = v4 + OBJC_IVAR____TtC17proximitycontrold22FrontBoardMonitorState__orientation;
  v8[1] = 0;
  type metadata accessor for BSInterfaceOrientation(0);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  type metadata accessor for FrontBoardMonitor();
  uint64_t v6 = swift_allocObject();
  uint64_t result = sub_1000BDE3C(v4);
  qword_1003AC768 = v6;
  return result;
}

uint64_t *sub_1000BDE3C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  v2[3] = (uint64_t)[objc_allocWithZone((Class)FBSOrientationObserver) init];
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, v4, (uint64_t)&off_100324CA0);
  v2[4] = a1;
  uint64_t v5 = self;
  swift_retain();
  id v6 = [v5 configurationForDefaultMainDisplayMonitor];
  uint64_t v18 = &type metadata for Feature;
  unint64_t v19 = sub_10000CC08();
  LOBYTE(v15) = 9;
  char v7 = isFeatureEnabled(_:)();
  sub_10000CC5C((uint64_t)&v15);
  if (v7)
  {
    [v6 setNeedsUserInteractivePriority:1, v15];
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    *(void *)(v8 + 24) = v4;
    unint64_t v19 = (unint64_t)sub_1000BEDA0;
    uint64_t v20 = v8;
    uint64_t v15 = _NSConcreteStackBlock;
    uint64_t v16 = 1107296256;
    unint64_t v17 = sub_1000BE748;
    uint64_t v18 = (ValueMetadata *)&unk_100324D88;
    uint64_t v9 = _Block_copy(&v15);
    swift_retain();
    swift_release();
    [v6 setTransitionHandler:v9];
    _Block_release(v9);
  }
  v2[2] = (uint64_t)[self monitorWithConfiguration:v6];
  unint64_t v10 = (void *)v2[3];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v4;
  unint64_t v19 = (unint64_t)sub_1000BED80;
  uint64_t v20 = v11;
  uint64_t v15 = _NSConcreteStackBlock;
  uint64_t v16 = 1107296256;
  unint64_t v17 = sub_10004B62C;
  uint64_t v18 = (ValueMetadata *)&unk_100324D38;
  id v12 = _Block_copy(&v15);
  swift_retain();
  id v13 = v10;
  swift_release();
  [v13 setHandler:v12];
  swift_release();
  _Block_release(v12);

  return v2;
}

uint64_t sub_1000BE0FC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v50 = a5;
  uint64_t v51 = a4;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v44 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v45 = v11;
    id v46 = v9;
    uint64_t v47 = v10;
    uint64_t v48 = v7;
    uint64_t v49 = v6;
    id v43 = a2;
    id v14 = [a2 elements];
    sub_1000BEDF4();
    unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v16)
      {
LABEL_4:
        aBlock[0] = _swiftEmptyArrayStorage;
        uint64_t result = sub_1000B54DC(0, v16 & ~(v16 >> 63), 0);
        if (v16 < 0)
        {
          __break(1u);
          return result;
        }
        uint64_t v18 = 0;
        unint64_t v19 = (void *)aBlock[0];
        do
        {
          if ((v15 & 0xC000000000000001) != 0) {
            id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v20 = *(id *)(v15 + 8 * v18 + 32);
          }
          uint64_t v21 = v20;
          id v22 = [v20 identifier];
          uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v25 = v24;

          aBlock[0] = v19;
          unint64_t v27 = v19[2];
          unint64_t v26 = v19[3];
          if (v27 >= v26 >> 1)
          {
            sub_1000B54DC(v26 > 1, v27 + 1, 1);
            unint64_t v19 = (void *)aBlock[0];
          }
          ++v18;
          void v19[2] = v27 + 1;
          uint64_t v28 = &v19[2 * v27];
          v28[4] = v23;
          v28[5] = v25;
        }
        while (v16 != v18);
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v19 = _swiftEmptyArrayStorage;
LABEL_16:
    uint64_t v30 = v19[2];
    id v13 = v44;
    if (v30)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_10008892C(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      char v32 = v19 + 5;
      do
      {
        uint64_t v34 = *(v32 - 1);
        uint64_t v33 = *v32;
        unint64_t v35 = *((void *)v31 + 2);
        unint64_t v36 = *((void *)v31 + 3);
        swift_bridgeObjectRetain();
        if (v35 >= v36 >> 1) {
          uint64_t v31 = sub_10008892C((char *)(v36 > 1), v35 + 1, 1, v31);
        }
        v32 += 2;
        *((void *)v31 + 2) = v35 + 1;
        long long v37 = &v31[16 * v35];
        *((void *)v37 + 4) = v34;
        *((void *)v37 + 5) = v33;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = (char *)_swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    if (((unint64_t)[v43 backlightState] & 0xFFFFFFFFFFFFFFFELL) == 2
      && (sub_10002983C(0xD000000000000015, 0x80000001002BBD30, v31) & 1) == 0)
    {
      uint64_t v29 = (void *)sub_100038508((uint64_t)v31);
    }
    else
    {
      uint64_t v29 = &_swiftEmptySetSingleton;
    }
    swift_bridgeObjectRelease();
    uint64_t v7 = v48;
    uint64_t v6 = v49;
    uint64_t v9 = v46;
    uint64_t v10 = v47;
    uint64_t v11 = v45;
    goto LABEL_28;
  }
  uint64_t v29 = &_swiftEmptySetSingleton;
LABEL_28:
  if (qword_10035A628 != -1) {
    swift_once();
  }
  long long v38 = (void *)qword_1003ACB50;
  unint64_t v39 = (void *)swift_allocObject();
  void v39[2] = v29;
  uint64_t v40 = v50;
  v39[3] = v51;
  v39[4] = v40;
  aBlock[4] = sub_1000BEDE8;
  aBlock[5] = v39;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A0AC;
  aBlock[3] = &unk_100324DD8;
  char v41 = _Block_copy(aBlock);
  id v42 = v38;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v52 = _swiftEmptyArrayStorage;
  sub_10004D1C4();
  sub_10000A38C((uint64_t *)&unk_10035E800);
  sub_10001683C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v41);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_1000BE64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = Set.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  sub_10016ABE4(0xD000000000000014, (void *)0x80000001002BBD50, 0, a3, (uint64_t)&off_100324CA0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1001BE580(a1);

  return swift_release();
}

void sub_1000BE748(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  id v10 = a2;
  id v8 = a3;
  id v9 = a4;
  v7(v10, a3, a4);
  swift_release();
}

uint64_t sub_1000BE7E8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10035A628 != -1) {
    swift_once();
  }
  id v13 = (void *)qword_1003ACB50;
  id v14 = (void *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  aBlock[4] = sub_1000BF11C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A0AC;
  aBlock[3] = &unk_100324E28;
  unint64_t v15 = _Block_copy(aBlock);
  id v16 = v13;
  id v17 = a1;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v19[1] = _swiftEmptyArrayStorage;
  sub_10004D1C4();
  sub_10000A38C((uint64_t *)&unk_10035E800);
  sub_10001683C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, void))(v10 + 8))(v12, v19[0]);
  return swift_release();
}

uint64_t sub_1000BEAA0(void *a1, uint64_t a2, uint64_t a3)
{
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  [a1 orientation];
  id v5 = (id)BSInterfaceOrientationDescription();
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  v9._uint64_t countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  sub_10016ABE4(0xD00000000000001CLL, (void *)0x80000001002BBD70, 0, a3, (uint64_t)&off_100324CA0);
  swift_bridgeObjectRelease();
  [a1 orientation];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_1000BEBE0()
{
  uint64_t v1 = v0;
  id v2 = sub_1001F676C();
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 ulog:40 message:v3];

  [*(id *)(v1 + 24) invalidate];
  [*(id *)(v1 + 16) invalidate];
  swift_retain();
  sub_1001BE580((uint64_t)&_swiftEmptySetSingleton);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();

  swift_release();
  return v1;
}

uint64_t sub_1000BECF0()
{
  sub_1000BEBE0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FrontBoardMonitor()
{
  return self;
}

uint64_t sub_1000BED48()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000BED80(void *a1)
{
  return sub_1000BE7E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000BED88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000BED98()
{
  return swift_release();
}

uint64_t sub_1000BEDA0(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1000BE0FC(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1000BEDA8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000BEDE8()
{
  return sub_1000BE64C(v0[2], v0[3], v0[4]);
}

unint64_t sub_1000BEDF4()
{
  unint64_t result = qword_100363B10;
  if (!qword_100363B10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100363B10);
  }
  return result;
}

uint64_t sub_1000BEE34@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000BEEB4()
{
  return static Published.subscript.setter();
}

uint64_t sub_1000BEF28(uint64_t a1)
{
  uint64_t v1 = a1 + 56;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      break;
    }
    if (v8 >= v5) {
      goto LABEL_24;
    }
    uint64_t v9 = *(void *)(v1 + 8 * v8);
    ++v7;
    if (!v9)
    {
      int64_t v7 = v8 + 1;
      if (v8 + 1 >= v5) {
        goto LABEL_24;
      }
      uint64_t v9 = *(void *)(v1 + 8 * v7);
      if (!v9)
      {
        int64_t v7 = v8 + 2;
        if (v8 + 2 >= v5) {
          goto LABEL_24;
        }
        uint64_t v9 = *(void *)(v1 + 8 * v7);
        if (!v9)
        {
          int64_t v7 = v8 + 3;
          if (v8 + 3 >= v5) {
            goto LABEL_24;
          }
          uint64_t v9 = *(void *)(v1 + 8 * v7);
          if (!v9)
          {
            int64_t v10 = v8 + 4;
            if (v10 >= v5)
            {
LABEL_24:
              uint64_t v11 = 0;
              goto LABEL_25;
            }
            uint64_t v9 = *(void *)(v1 + 8 * v10);
            if (!v9)
            {
              while (1)
              {
                int64_t v7 = v10 + 1;
                if (__OFADD__(v10, 1)) {
                  goto LABEL_27;
                }
                if (v7 >= v5) {
                  goto LABEL_24;
                }
                uint64_t v9 = *(void *)(v1 + 8 * v7);
                ++v10;
                if (v9) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v7 = v10;
          }
        }
      }
    }
LABEL_22:
    uint64_t v4 = (v9 - 1) & v9;
LABEL_5:
    sub_100016790();
    uint64_t result = StringProtocol.contains<A>(_:)();
    if (result)
    {
      uint64_t v11 = 1;
LABEL_25:
      swift_release();
      return v11;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000BF0DC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000BF11C()
{
  return sub_1000BEAA0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t *sub_1000BF14C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    int64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    int64_t v7 = (char *)a1 + v6;
    int64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for SFAirDrop.NearbySharingInteraction();
    int64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1000BF230(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for SFAirDrop.NearbySharingInteraction();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1000BF2A8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for SFAirDrop.NearbySharingInteraction();
  int64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_1000BF340(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  int64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for SFAirDrop.NearbySharingInteraction();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_1000BF3D4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for SFAirDrop.NearbySharingInteraction();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1000BF450(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  int64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for SFAirDrop.NearbySharingInteraction();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1000BF4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000BF4F0);
}

uint64_t sub_1000BF4F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SFAirDrop.NearbySharingInteraction();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000BF5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000BF5B4);
}

void *sub_1000BF5B4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SFAirDrop.NearbySharingInteraction();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for NearbySharingInteractionDisplayContext()
{
  uint64_t result = qword_100363B70;
  if (!qword_100363B70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000BF6A8()
{
  uint64_t result = type metadata accessor for SFAirDrop.NearbySharingInteraction();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000BF744(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a4;
  v12[1] = a5;
  uint64_t v7 = sub_10000A38C(&qword_100363C20);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D6E4(a1, a1[3]);
  sub_1000C0950();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v14 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v5)
  {
    char v13 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1000BF8B8(void *a1)
{
  int v3 = v1;
  uint64_t v5 = sub_10000A38C(&qword_100363BD8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000D6E4(a1, a1[3]);
  sub_1000C0044();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v11 = *v3;
  v10[7] = 0;
  sub_10000A38C(&qword_100363BB8);
  sub_1000C01AC(&qword_100363BE0, (void (*)(void))sub_1000C021C);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    type metadata accessor for NearbySharingInteractionDisplayContext();
    v10[6] = 1;
    type metadata accessor for SFAirDrop.NearbySharingInteraction();
    sub_1000C0270(&qword_100363BF0);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000BFAB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v23 = type metadata accessor for SFAirDrop.NearbySharingInteraction();
  uint64_t v20 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10000A38C(&qword_100363BA8);
  uint64_t v22 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NearbySharingInteractionDisplayContext();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D6E4(a1, a1[3]);
  sub_1000C0044();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10000CC5C((uint64_t)a1);
  }
  uint64_t v18 = v5;
  unint64_t v19 = a1;
  uint64_t v11 = v10;
  uint64_t v13 = v22;
  uint64_t v12 = v23;
  sub_10000A38C(&qword_100363BB8);
  char v26 = 0;
  sub_1000C01AC(&qword_100363BC0, (void (*)(void))sub_1000C0098);
  uint64_t v14 = v24;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v15 = (uint64_t)v11;
  *uint64_t v11 = v27;
  char v25 = 1;
  sub_1000C0270(&qword_100363BD0);
  id v16 = v18;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v15 + *(int *)(v8 + 20), v16, v12);
  sub_1000C00EC(v15, v21);
  sub_10000CC5C((uint64_t)v19);
  return sub_1000C0150(v15);
}

uint64_t sub_1000BFE04()
{
  if (*v0) {
    return 0x656C746974;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1000BFE30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000C056C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000BFE58(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1000BFE64(uint64_t a1)
{
  unint64_t v2 = sub_1000C0950();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000BFEA0(uint64_t a1)
{
  unint64_t v2 = sub_1000C0950();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000BFEDC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000C0640(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1000BFF0C(void *a1)
{
  return sub_1000BF744(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1000BFF2C()
{
  if (*v0) {
    return 0xD000000000000018;
  }
  else {
    return 0x53746E65746E6F63;
  }
}

uint64_t sub_1000BFF74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000C0848(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000BFF9C(uint64_t a1)
{
  unint64_t v2 = sub_1000C0044();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000BFFD8(uint64_t a1)
{
  unint64_t v2 = sub_1000C0044();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000C0014@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BFAB0(a1, a2);
}

uint64_t sub_1000C002C(void *a1)
{
  return sub_1000BF8B8(a1);
}

unint64_t sub_1000C0044()
{
  unint64_t result = qword_100363BB0;
  if (!qword_100363BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363BB0);
  }
  return result;
}

unint64_t sub_1000C0098()
{
  unint64_t result = qword_100363BC8;
  if (!qword_100363BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363BC8);
  }
  return result;
}

uint64_t sub_1000C00EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NearbySharingInteractionDisplayContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C0150(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NearbySharingInteractionDisplayContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000C01AC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A3D0(&qword_100363BB8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000C021C()
{
  unint64_t result = qword_100363BE8;
  if (!qword_100363BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363BE8);
  }
  return result;
}

uint64_t sub_1000C0270(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SFAirDrop.NearbySharingInteraction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbySharingInteractionDisplayContext.CodingKeys()
{
  return &type metadata for NearbySharingInteractionDisplayContext.CodingKeys;
}

void *initializeWithCopy for NearbySharingInteractionDisplayContext.ShareableContentStub(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for NearbySharingInteractionDisplayContext.ShareableContentStub(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for NearbySharingInteractionDisplayContext.ShareableContentStub(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for NearbySharingInteractionDisplayContext.ShareableContentStub(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbySharingInteractionDisplayContext.ShareableContentStub(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbySharingInteractionDisplayContext.ShareableContentStub(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbySharingInteractionDisplayContext.ShareableContentStub()
{
  return &type metadata for NearbySharingInteractionDisplayContext.ShareableContentStub;
}

unint64_t sub_1000C0468()
{
  unint64_t result = qword_100363BF8;
  if (!qword_100363BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363BF8);
  }
  return result;
}

unint64_t sub_1000C04C0()
{
  unint64_t result = qword_100363C00;
  if (!qword_100363C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363C00);
  }
  return result;
}

unint64_t sub_1000C0518()
{
  unint64_t result = qword_100363C08;
  if (!qword_100363C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363C08);
  }
  return result;
}

uint64_t sub_1000C056C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000C0640(void *a1)
{
  uint64_t v3 = sub_10000A38C(&qword_100363C10);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  sub_10000D6E4(a1, a1[3]);
  sub_1000C0950();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_10000CC5C((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = KeyedDecodingContainer.decode(_:forKey:)();
    char v10 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_10000CC5C((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1000C0848(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x53746E65746E6F63 && a2 == 0xEC00000073627574;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001002BBDC0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1000C0950()
{
  unint64_t result = qword_100363C18;
  if (!qword_100363C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363C18);
  }
  return result;
}

unsigned char *_s17proximitycontrold38NearbySharingInteractionDisplayContextV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C0A70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbySharingInteractionDisplayContext.ShareableContentStub.CodingKeys()
{
  return &type metadata for NearbySharingInteractionDisplayContext.ShareableContentStub.CodingKeys;
}

unint64_t sub_1000C0AAC()
{
  unint64_t result = qword_100363C28;
  if (!qword_100363C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363C28);
  }
  return result;
}

unint64_t sub_1000C0B04()
{
  unint64_t result = qword_100363C30;
  if (!qword_100363C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363C30);
  }
  return result;
}

unint64_t sub_1000C0B5C()
{
  unint64_t result = qword_100363C38;
  if (!qword_100363C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363C38);
  }
  return result;
}

char *sub_1000C0BB4()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v29 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[OBJC_IVAR___Application_isActive] = 0;
  *(void *)&v1[OBJC_IVAR___Application_handoff3Agent] = 0;
  *(void *)&v1[OBJC_IVAR___Application_tasks] = &_swiftEmptySetSingleton;
  *(void *)&v1[OBJC_IVAR___Application_xpcServer] = 0;
  uint64_t v9 = OBJC_IVAR___Application_handoffEnabledSettingManager;
  id v10 = objc_allocWithZone((Class)type metadata accessor for HandoffEnabledSettingManager());
  char v11 = v1;
  *(void *)&v1[v9] = [v10 init];
  *(void *)&v11[OBJC_IVAR___Application_handoffEnabledListenerTask] = 0;

  sub_10016ABE4(0xD000000000000010, (void *)0x80000001002BC120, 0, ObjectType, (uint64_t)&off_100324FF0);
  uint64_t v12 = (objc_class *)type metadata accessor for Application();
  v32.receiver = v11;
  v32.super_class = v12;
  id v13 = [super init];
  uint64_t v14 = qword_10035A628;
  uint64_t v15 = (char *)v13;
  if (v14 != -1) {
    swift_once();
  }
  id v16 = (void *)qword_1003ACB50;
  id v17 = objc_allocWithZone((Class)type metadata accessor for Handoff3LeaderAgent());
  id v18 = v16;
  id v19 = sub_10020BBEC(v18);

  uint64_t v20 = *(void **)&v15[OBJC_IVAR___Application_handoff3Agent];
  *(void *)&v15[OBJC_IVAR___Application_handoff3Agent] = v19;

  uint64_t v21 = (void *)qword_1003ACB50;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v15;
  aBlock[4] = sub_1000C28FC;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A0AC;
  aBlock[3] = &unk_100325168;
  uint64_t v23 = _Block_copy(aBlock);
  uint64_t v24 = v15;
  id v25 = v21;
  static DispatchQoS.unspecified.getter();
  uint64_t v30 = _swiftEmptyArrayStorage;
  sub_10004D1C4();
  sub_10000A38C((uint64_t *)&unk_10035E800);
  sub_10000B010(qword_100363D60, (uint64_t *)&unk_10035E800);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v28);
  swift_release();
  sub_1000C0FC4();

  return v24;
}

void sub_1000C0FC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A38C(&qword_100363D10);
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  __chkstk_darwin(v2);
  id v25 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000A38C(&qword_100363D18);
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  __chkstk_darwin(v4);
  char v26 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A38C((uint64_t *)&unk_100363D20);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = sub_1001F6790();
  NSString v11 = String._bridgeToObjectiveC()();
  [v10 ulog:40 message:v11];

  sub_1000C2704();
  sub_1000C1B0C();
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR___Application_handoffEnabledSettingManager);
  uint64_t v13 = OBJC_IVAR____TtC17proximitycontrold28HandoffEnabledSettingManager__transferToHomePod;
  swift_retain();
  uint64_t v31 = sub_100104B88();
  sub_10000A38C((uint64_t *)&unk_10036BFE0);
  sub_10000B010((unint64_t *)&unk_100363D30, (uint64_t *)&unk_10036BFE0);
  uint64_t v14 = Publisher.eraseToAnyPublisher()();
  swift_release();
  swift_release();
  uint64_t v31 = v14;
  sub_10000A38C(&qword_10035ACA0);
  sub_10000B010(&qword_10035ACB0, &qword_10035ACA0);
  Publisher.dropFirst(_:)();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10000B010(&qword_1003605E8, (uint64_t *)&unk_100363D20);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  sub_1000C1E8C(*(unsigned char *)(*(void *)(v12 + v13) + 24));
  if (qword_10035A520 != -1) {
    swift_once();
  }
  uint64_t v15 = *(void **)(qword_1003AC750 + 1096);
  id v16 = *(void **)((char *)v15 + *(void *)((swift_isaMask & *v15) + 0x70));
  if (v16)
  {
    id v17 = v15;
    id v18 = v16;
    NSString v19 = String._bridgeToObjectiveC()();
    [v18 setBool:0 forKey:v19];
  }
  if (qword_10035A578 != -1) {
    swift_once();
  }
  if (qword_1003AC848)
  {
    swift_getKeyPath();
    uint64_t v20 = v25;
    _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
    swift_release();
    sub_10000B010(&qword_100363D40, &qword_100363D10);
    uint64_t v21 = v26;
    uint64_t v22 = v28;
    Publisher.filter(_:)();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v20, v22);
    sub_10000B010(&qword_100363D48, &qword_100363D18);
    uint64_t v23 = v30;
    Publisher<>.sink(receiveValue:)();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v23);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
  }
}

void sub_1000C15F8(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_1000C1E8C(v1);
  }
}

void sub_1000C1654()
{
  if (qword_10035A520 != -1) {
    swift_once();
  }
  uint64_t v0 = *(void **)(qword_1003AC750 + 1096);
  char v1 = *(void **)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x70));
  if (v1)
  {
    uint64_t v2 = v0;
    id v3 = v1;
    NSString v4 = String._bridgeToObjectiveC()();
    [v3 setBool:0 forKey:v4];
  }
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1000C1798()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = type metadata accessor for OSSignpostID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v1 + OBJC_IVAR___Application_isActive) = 1;
  static OSSignpostID.exclusive.getter();
  static os_signpost_type_t.begin.getter();
  if (qword_10035A530 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1003AC760;
  os_signpost(_:dso:log:name:signpostID:_:_:)();

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR___Application_handoff3Agent);
  if (v8)
  {
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10000A38C((uint64_t *)&unk_100363D00);
    swift_allocObject();
    id v9 = v8;
    uint64_t v10 = Future.init(_:)();
    id v11 = sub_10016B098(ObjectType, (uint64_t)&off_100324FF0);
    v16[1] = v10;
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100295990;
    *(void *)(v12 + 32) = v10;
    *(void *)(v12 + 40) = v11;
    sub_10000B010(&qword_100368130, (uint64_t *)&unk_100363D00);
    swift_retain();
    id v13 = v11;
    Publisher.sink(receiveCompletion:receiveValue:)();
    swift_release();

    swift_release();
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();

    swift_release();
  }
  else
  {
    id v14 = sub_1001F6790();
    NSString v15 = String._bridgeToObjectiveC()();
    [v14 ulog:60 message:v15];
  }
}

void sub_1000C1B0C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  id v3 = sub_1001F6790();
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 ulog:40 message:v4];

  if (qword_10035A628 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_1003ACB50;
  id v6 = objc_allocWithZone((Class)type metadata accessor for XPCServer());
  id v7 = sub_1000D30F8(v5);
  swift_unknownObjectWeakAssign();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = ObjectType;
  id v9 = (void (**)())&v7[OBJC_IVAR____TtC17proximitycontrold9XPCServer_interruptionHandler];
  uint64_t v10 = *(void *)&v7[OBJC_IVAR____TtC17proximitycontrold9XPCServer_interruptionHandler];
  *id v9 = sub_1000C2590;
  v9[1] = (void (*)())v8;
  sub_10000F088(v10);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = ObjectType;
  uint64_t v12 = (void (**)())&v7[OBJC_IVAR____TtC17proximitycontrold9XPCServer_invalidationHandler];
  uint64_t v13 = *(void *)&v7[OBJC_IVAR____TtC17proximitycontrold9XPCServer_invalidationHandler];
  *uint64_t v12 = sub_1000C25F0;
  v12[1] = (void (*)())v11;
  sub_10000F088(v13);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = ObjectType;
  v18[4] = sub_1000C264C;
  v18[5] = v14;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_100119FC4;
  v18[3] = &unk_1003250A0;
  NSString v15 = _Block_copy(v18);
  swift_release();
  [v7 activateWithCompletion:v15];
  _Block_release(v15);
  id v16 = *(void **)(v1 + OBJC_IVAR___Application_xpcServer);
  *(void *)(v1 + OBJC_IVAR___Application_xpcServer) = v7;
  id v17 = v7;

  if (qword_10035A608 != -1) {
    swift_once();
  }
}

void sub_1000C1D7C(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    swift_errorRetain();
    _StringGuts.grow(_:)(31);
    v3._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    v3._object = (void *)0x80000001002BBFF0;
    String.append(_:)(v3);
    sub_10000A38C((uint64_t *)&unk_100365D60);
    _print_unlocked<A, B>(_:_:)();
    sub_10016ABE4(0, (void *)0xE000000000000000, 0, a2, (uint64_t)&off_100324FF0);
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else
  {
    sub_10016ABE4(0xD000000000000013, (void *)0x80000001002BBFD0, 0, a2, (uint64_t)&off_100324FF0);
  }
}

void sub_1000C1E8C(char a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  int v5 = a1 & 1;
  if (a1) {
    uint64_t v6 = 1702195828;
  }
  else {
    uint64_t v6 = 0x65736C6166;
  }
  if (a1) {
    unint64_t v7 = 0xE400000000000000;
  }
  else {
    unint64_t v7 = 0xE500000000000000;
  }
  unint64_t v8 = v7;
  String.append(_:)(*(Swift::String *)&v6);
  swift_bridgeObjectRelease();
  id v9 = sub_1001F6790();
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 ulog:40 message:v10];
  swift_bridgeObjectRelease();

  if (v5)
  {
    if ((*(unsigned char *)(v2 + OBJC_IVAR___Application_isActive) & 1) == 0)
    {
      sub_10016ABE4(0xD000000000000019, (void *)0x80000001002BBF90, 0, ObjectType, (uint64_t)&off_100324FF0);
      sub_1000C1798();
    }
  }
  else
  {
    sub_10016AE10(60, 0xD000000000000026, (void *)0x80000001002BBF40, 0, ObjectType, (uint64_t)&off_100324FF0);
    uint64_t v11 = OBJC_IVAR___Application_isActive;
    if (*(unsigned char *)(v2 + OBJC_IVAR___Application_isActive))
    {
      sub_10016ABE4(0xD00000000000001BLL, (void *)0x80000001002BBF70, 0, ObjectType, (uint64_t)&off_100324FF0);
      *(unsigned char *)(v2 + v11) = 0;
      uint64_t v12 = *(void **)(v2 + OBJC_IVAR___Application_handoff3Agent);
      if (v12)
      {
        id v13 = v12;
        sub_10020B520();
      }
    }
  }
}

id sub_1000C20BC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Application();
  return [super dealloc];
}

uint64_t type metadata accessor for Application()
{
  return self;
}

uint64_t sub_1000C2478()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___Application_handoff3Agent);
  if (v1)
  {
    id v2 = [v1 description];
    unint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    int v5 = v4;
  }
  else
  {
    int v5 = (void *)0x80000001002BBE40;
    unint64_t v3 = 0xD000000000000016;
  }
  v6._uint64_t countAndFlagsBits = v3;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 2570;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  if (qword_10035A4E8 != -1) {
    swift_once();
  }
  v8._uint64_t countAndFlagsBits = sub_10002DD60();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  return 10;
}

uint64_t sub_1000C2580()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000C2590()
{
  sub_10016AE10(90, 0xD000000000000019, (void *)0x80000001002BC030, 0, *(void *)(v0 + 16), (uint64_t)&off_100324FF0);
}

uint64_t sub_1000C25E0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000C25F0()
{
  sub_10016ABE4(0xD000000000000015, (void *)0x80000001002BC010, 0, *(void *)(v0 + 16), (uint64_t)&off_100324FF0);
}

uint64_t sub_1000C263C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000C264C(uint64_t a1)
{
  sub_1000C1D7C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1000C2654(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000C2664()
{
  return swift_release();
}

uint64_t sub_1000C266C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C26A4(void (*a1)(void ***), uint64_t a2)
{
  return sub_1002092E8(a1, a2);
}

uint64_t sub_1000C26AC()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1000C26F4(uint64_t *a1)
{
  sub_100133D28(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), v1 + 32, *(void **)(v1 + 40));
}

void sub_1000C2704()
{
  if (_set_user_dir_suffix())
  {
    uint64_t v0 = NSTemporaryDirectory();
    uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v3 = v2;

    _StringGuts.grow(_:)(57);
    v4._uint64_t countAndFlagsBits = 0xD000000000000037;
    v4._object = (void *)0x80000001002BC0E0;
    String.append(_:)(v4);
    v5._uint64_t countAndFlagsBits = v1;
    v5._object = v3;
    String.append(_:)(v5);
    swift_bridgeObjectRelease();
    id v6 = sub_1001F6790();
    swift_bridgeObjectRetain();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 ulog:40 message:v7];
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = sub_1001F6790();
    NSString v7 = String._bridgeToObjectiveC()();
    [v6 ulog:90 message:];
  }
}

void sub_1000C2868(char *a1)
{
}

const char *sub_1000C2870()
{
  return "forceKillProximitycontrold";
}

id sub_1000C287C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 forceKillProximitycontrold];
  *a2 = (_BYTE)result;
  return result;
}

id sub_1000C28B0(unsigned __int8 *a1, id *a2)
{
  return [*a2 setForceKillProximitycontrold:*a1];
}

uint64_t sub_1000C28C4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C28FC()
{
  return sub_1001B53D4();
}

void sub_1000C2938(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100116E88();
  if (!v3)
  {
    uint64_t v9 = v7;
    unint64_t v10 = v8;
    Class isa = (Class)[a1 userInfo];
    uint64_t v12 = (SEL *)&unk_100356000;
    if (!isa)
    {
      sub_100268E80((uint64_t)_swiftEmptyArrayStorage);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      uint64_t v12 = (SEL *)&unk_100356000;
      swift_bridgeObjectRelease();
      [a1 setUserInfo:isa];
    }

    id v13 = [a1 userInfo];
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
      AnyHashable.init<A>(_:)();
      uint64_t v21 = &type metadata for Data;
      *(void *)&long long v20 = v9;
      *((void *)&v20 + 1) = v10;
      sub_100027B00(&v20, v19);
      sub_10001F8BC(v9, v10);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v23 = v15;
      sub_1002650FC(v19, (uint64_t)v22, isUniquelyReferenced_nonNull_native);
      uint64_t v17 = v23;
      swift_bridgeObjectRelease();
      sub_1000BA108((uint64_t)v22);
      if (v17)
      {
        v18.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
      }
      else
      {
        v18.super.Class isa = 0;
      }
      [a1 setUserInfo:v18.super.isa];
      sub_10000DBEC(v9, v10);
    }
    else
    {
      [a1 v12[347]];
      sub_10000DBEC(v9, v10);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1000C2B84()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000C2BC8(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone(v1);
  uint64_t v5 = sub_1000C2F28(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)((char *)v2 + qword_1003AC770) - 8) + 8))(a1);
  return v5;
}

uint64_t sub_1000C2C48()
{
  return 1;
}

uint64_t sub_1000C2C50()
{
  return 1;
}

void *sub_1000C2C58(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return sub_1000C2C9C(a1, a2);
}

void *sub_1000C2C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)((swift_isaMask & *v2) + qword_1003AC770);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v5 + 16))((char *)&v11 - v6);
  uint64_t v7 = (void *)UIHostingController.init(coder:rootView:)();
  unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  id v9 = v7;
  v8(a2, v4);
  if (v7) {

  }
  return v7;
}

id sub_1000C2DD4(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LockscreenViewableUIHostingController();
  id v3 = [super initWithCoder:a1];

  return v3;
}

id sub_1000C2E6C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1000C2DD4(a3);
}

id sub_1000C2E94()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LockscreenViewableUIHostingController();
  return [super dealloc];
}

uint64_t type metadata accessor for LockscreenViewableUIHostingController()
{
  return sub_10000F2E4();
}

uint64_t sub_1000C2F28(uint64_t a1)
{
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - v1);
  return UIHostingController.init(rootView:)();
}

unint64_t sub_1000C3010(char a1)
{
  unint64_t result = 0x44497472656C61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 0x656C746974627573;
      break;
    case 3:
      unint64_t result = 0x6C65694674786574;
      break;
    case 4:
      unint64_t result = 0x74756F656D6974;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x736E6F69746361;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000C30FC()
{
  return sub_1000C3010(*v0);
}

uint64_t sub_1000C3104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000C5320(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000C312C(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1000C3138(uint64_t a1)
{
  unint64_t v2 = sub_1000C34A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000C3174(uint64_t a1)
{
  unint64_t v2 = sub_1000C34A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PCUserAlertPresentationContext.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000A38C(&qword_100363DF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000D6E4(a1, a1[3]);
  sub_1000C34A0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v18 = 0;
  type metadata accessor for UUID();
  sub_1000C3CE8(&qword_100363E00, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for PCUserAlertPresentationContext();
    char v17 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v16 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v15 = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v14 = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v13 = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 40));
    v11[15] = 6;
    sub_10000A38C((uint64_t *)&unk_100367D40);
    sub_1000C3AA4(&qword_100363E08);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1000C34A0()
{
  unint64_t result = qword_100363DF8;
  if (!qword_100363DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363DF8);
  }
  return result;
}

uint64_t type metadata accessor for PCUserAlertPresentationContext()
{
  uint64_t result = qword_100363F10;
  if (!qword_100363F10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PCUserAlertPresentationContext.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v31 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  objc_super v32 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10000A38C(&qword_100363E10);
  uint64_t v30 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = (int *)type metadata accessor for PCUserAlertPresentationContext();
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D6E4(a1, a1[3]);
  sub_1000C34A0();
  uint64_t v34 = v7;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10000CC5C((uint64_t)a1);
  }
  uint64_t v28 = a1;
  uint64_t v11 = v31;
  char v42 = 0;
  sub_1000C3CE8(&qword_100363E18, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v12 = v32;
  uint64_t v13 = v33;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v10, v12, v4);
  char v41 = 1;
  uint64_t v14 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  char v15 = (uint64_t *)&v10[v8[5]];
  *char v15 = v14;
  v15[1] = v16;
  char v40 = 2;
  uint64_t v17 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v18 = v30;
  NSString v19 = (uint64_t *)&v10[v8[6]];
  uint64_t *v19 = v17;
  v19[1] = v20;
  char v39 = 3;
  uint64_t v21 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v22 = (uint64_t *)&v10[v8[7]];
  *uint64_t v22 = v21;
  v22[1] = v23;
  char v38 = 4;
  uint64_t v24 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  id v25 = &v10[v8[8]];
  *(void *)id v25 = v24;
  v25[8] = v26 & 1;
  char v37 = 5;
  v10[v8[9]] = KeyedDecodingContainer.decode(_:forKey:)() & 1;
  sub_10000A38C((uint64_t *)&unk_100367D40);
  char v36 = 6;
  sub_1000C3AA4(&qword_100363E20);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v34, v13);
  *(void *)&v10[v8[10]] = v35;
  sub_1000C3B08((uint64_t)v10, v29);
  sub_10000CC5C((uint64_t)v28);
  return sub_1000C3B6C((uint64_t)v10);
}

uint64_t sub_1000C3AA4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A3D0((uint64_t *)&unk_100367D40);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000C3B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PCUserAlertPresentationContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C3B6C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PCUserAlertPresentationContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000C3BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for PCUserAlertResult();
  uint64_t v9 = (void *)(a5 + *(int *)(result + 28));
  *uint64_t v9 = a2;
  v9[1] = a3;
  return result;
}

unint64_t sub_1000C3C48()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1000C3C64(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1000C3CE8(&qword_100363E28, (void (*)(uint64_t))type metadata accessor for PCUserAlertPresentationContext);
  uint64_t result = sub_1000C3CE8(qword_100363E30, (void (*)(uint64_t))type metadata accessor for PCUserAlertPresentationContext);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1000C3CE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000C3D30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PCUserAlertPresentationContext.init(from:)(a1, a2);
}

uint64_t sub_1000C3D48(void *a1)
{
  return PCUserAlertPresentationContext.encode(to:)(a1);
}

uint64_t sub_1000C3D60()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1000C3DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1000C3E4C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 sub_1000C3F24(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1000C3F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v7;
  swift_release();
  return a1;
}

uint64_t sub_1000C3FD8(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000C4020(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for PCUserAlertDefinition()
{
  return sub_10000F2E4();
}

void *initializeBufferWithCopyOfBuffer for PCUserAlertPresentationContext(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (void *)((char *)a1 + v16);
    NSString v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (char *)a1 + v17;
    uint64_t v22 = (char *)a2 + v17;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PCUserAlertPresentationContext(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PCUserAlertPresentationContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  unint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a1 + v16;
  uint64_t v21 = a2 + v16;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PCUserAlertPresentationContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v19 = *v18;
  *(unsigned char *)(v17 + 8) = *((unsigned char *)v18 + 8);
  *(void *)uint64_t v17 = v19;
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PCUserAlertPresentationContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for PCUserAlertPresentationContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PCUserAlertPresentationContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C4674);
}

uint64_t sub_1000C4674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 40));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PCUserAlertPresentationContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C4748);
}

uint64_t sub_1000C4748(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1000C4804()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000C48C0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1000C4958(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    void *v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000C4A5C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C4ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000C4B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000C4BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1000C4C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000C4CF0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1000C4E44);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  if ((v17 + 1) >= 2) {
    return v17;
  }
  else {
    return 0;
  }
}

void sub_1000C4E58(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      unsigned int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1000C5044);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFE)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if (a2 > 0x7FFFFFFE)
          {
            *uint64_t v18 = 0;
            v18[1] = 0;
            *(_DWORD *)uint64_t v18 = a2 - 0x7FFFFFFF;
          }
          else
          {
            v18[1] = a2;
          }
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for PCUserAlertResult()
{
  return sub_10000F2E4();
}

uint64_t getEnumTagSinglePayload for BluetoothState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PCUserAlertPresentationContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C51E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PCUserAlertPresentationContext.CodingKeys()
{
  return &type metadata for PCUserAlertPresentationContext.CodingKeys;
}

unint64_t sub_1000C521C()
{
  unint64_t result = qword_100363FE0;
  if (!qword_100363FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363FE0);
  }
  return result;
}

unint64_t sub_1000C5274()
{
  unint64_t result = qword_100363FE8;
  if (!qword_100363FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363FE8);
  }
  return result;
}

unint64_t sub_1000C52CC()
{
  unint64_t result = qword_100363FF0;
  if (!qword_100363FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100363FF0);
  }
  return result;
}

uint64_t sub_1000C5320(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44497472656C61 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C65694674786574 && a2 == 0xEF74706D6F725064 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74756F656D6974 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001002BC140 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736E6F69746361 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1000C561C()
{
  type metadata accessor for MediaRemoteProxy();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_1000C5874();
  qword_1003AC780 = v0;
  return result;
}

uint64_t sub_1000C5658()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    sub_10000A38C(&qword_1003641E8);
    sub_10000B010(&qword_100364270, &qword_1003641E8);
    uint64_t v1 = Publisher.eraseToAnyPublisher()();
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1000C570C()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v2 = v0;
    sub_10000A38C(&qword_1003641F0);
    sub_10000B010(&qword_100364268, &qword_1003641F0);
    uint64_t v1 = Publisher.eraseToAnyPublisher()();
    *(void *)(v2 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1000C57C0()
{
  if (*(void *)(v0 + 32))
  {
    uint64_t v1 = *(void *)(v0 + 32);
  }
  else
  {
    uint64_t v2 = v0;
    sub_10000A38C(&qword_1003641F8);
    sub_10000B010(&qword_100364260, &qword_1003641F8);
    uint64_t v1 = Publisher.eraseToAnyPublisher()();
    *(void *)(v2 + 32) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1000C5874()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A38C(&qword_1003641C0);
  uint64_t v62 = *(void *)(v2 - 8);
  uint64_t v63 = v2;
  __chkstk_darwin(v2);
  uint64_t v60 = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10000A38C(&qword_1003641C8);
  uint64_t v55 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v53 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A38C(&qword_1003641D0);
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  __chkstk_darwin(v5);
  unint64_t v57 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A38C(&qword_1003641D8);
  uint64_t v64 = *(void *)(v7 - 8);
  uint64_t v65 = v7;
  __chkstk_darwin(v7);
  uint64_t v61 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10000A38C(&qword_1003641E0);
  uint64_t v51 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  unint64_t v10 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
  sub_10000A38C(&qword_1003641E8);
  swift_allocObject();
  *(void *)(v0 + 40) = PassthroughSubject.init()();
  *(void *)(v0 + 56) = 0;
  swift_unknownObjectWeakInit();
  sub_10000A38C(&qword_1003641F0);
  swift_allocObject();
  *(void *)(v0 + 64) = PassthroughSubject.init()();
  uint64_t v56 = sub_10000A38C(&qword_1003641F8);
  swift_allocObject();
  *(void *)(v0 + 72) = PassthroughSubject.init()();
  id v11 = [objc_allocWithZone((Class)MRProximityProvider) init];
  *(void *)(v0 + 88) = &_swiftEmptySetSingleton;
  *(void *)(v0 + 80) = v11;
  *(unsigned char *)(v0 + 96) = 0;
  uint64_t v67 = v0 + 88;
  *(void *)(v0 + 104) = 0;
  uint64_t v12 = qword_10035A628;
  id v13 = v11;
  if (v12 != -1) {
    swift_once();
  }
  [v13 setDispatchQueue:qword_1003ACB50];

  uint64_t v14 = *(void **)(v1 + 80);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v72 = sub_1000C75B8;
  uint64_t v73 = v15;
  unint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v69 = 1107296256;
  uint64_t v70 = sub_100267BF8;
  uint64_t v71 = &unk_100325418;
  unsigned int v16 = _Block_copy(&aBlock);
  id v17 = v14;
  swift_release();
  [v17 setDisplayContextHandler:v16];
  _Block_release(v16);

  uint64_t v18 = *(void **)(v1 + 80);
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  uint64_t v72 = sub_1000C75D8;
  uint64_t v73 = v19;
  unint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v69 = 1107296256;
  uint64_t v70 = sub_100267BF8;
  uint64_t v71 = &unk_100325440;
  uint64_t v20 = _Block_copy(&aBlock);
  id v21 = v18;
  swift_release();
  [v21 setProgressEventHandler:v20];
  _Block_release(v20);

  uint64_t v66 = v1;
  uint64_t v22 = sub_1000C5658();
  id v23 = sub_1001F6050();
  unint64_t aBlock = (void **)v22;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = 0;
  *(void *)(v24 + 24) = 0;
  *(void *)(v24 + 32) = v22;
  *(void *)(v24 + 40) = 0xD000000000000014;
  *(void *)(v24 + 48) = 0x80000001002BC490;
  *(void *)(v24 + 56) = 0;
  *(void *)(v24 + 64) = 0xE000000000000000;
  *(void *)(v24 + 72) = v23;
  *(_DWORD *)(v24 + 80) = 40;
  swift_retain();
  id v25 = v23;
  sub_10000A38C(&qword_10035FFB8);
  sub_100019E10(0, &qword_10035D090);
  v50[3] = &protocol conformance descriptor for AnyPublisher<A, B>;
  sub_10000B010(&qword_10035FFC0, &qword_10035FFB8);
  Publisher.map<A>(_:)();
  swift_release();
  v50[2] = &protocol conformance descriptor for Publishers.Map<A, B>;
  sub_10000B010(&qword_100364200, &qword_1003641E0);
  uint64_t v26 = v52;
  uint64_t v27 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v26);
  swift_release();

  unint64_t aBlock = (void **)v27;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v28 = sub_1000C570C();
  id v29 = sub_1001F6050();
  unint64_t aBlock = (void **)v28;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = 0;
  *(void *)(v30 + 24) = 0;
  *(void *)(v30 + 32) = v28;
  *(void *)(v30 + 40) = 0xD000000000000013;
  *(void *)(v30 + 48) = 0x80000001002BC4B0;
  *(void *)(v30 + 56) = 0;
  *(void *)(v30 + 64) = 0xE000000000000000;
  *(void *)(v30 + 72) = v29;
  *(_DWORD *)(v30 + 80) = 40;
  swift_retain();
  id v31 = v29;
  uint64_t v52 = sub_10000A38C(&qword_100364208);
  sub_100019E10(0, &qword_10035D088);
  uint64_t v51 = sub_10000B010(&qword_100364210, &qword_100364208);
  objc_super v32 = v53;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_100364218, &qword_1003641C8);
  uint64_t v33 = v54;
  uint64_t v34 = Publisher.eraseToAnyPublisher()();
  v50[1] = v34;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v55 + 8);
  v35(v32, v33);
  swift_release();

  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  unint64_t aBlock = (void **)v34;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = sub_1000C767C;
  *(void *)(v37 + 24) = v36;
  swift_retain();
  Publisher.map<A>(_:)();
  swift_release();
  uint64_t v38 = Publisher.eraseToAnyPublisher()();
  v35(v32, v33);
  swift_release();
  swift_release();
  unint64_t aBlock = (void **)v38;
  sub_10000A38C(&qword_100364220);
  char v39 = v57;
  Publisher.map<A>(_:)();
  swift_release();
  uint64_t v40 = swift_allocObject();
  uint64_t v41 = v66;
  swift_weakInit();
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = sub_1000C7714;
  *(void *)(v42 + 24) = v40;
  sub_10000B010(&qword_100364228, &qword_1003641D0);
  swift_retain();
  uint64_t v44 = v59;
  id v43 = v60;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_100364230, &qword_1003641C0);
  uint64_t v45 = v63;
  uint64_t v46 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v43, v45);
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v44);
  unint64_t aBlock = (void **)v46;
  sub_10000A38C(&qword_100364238);
  sub_10000A38C(&qword_100364240);
  sub_10000B010(&qword_100364248, &qword_100364238);
  uint64_t v47 = v61;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_100364250, &qword_1003641D8);
  sub_10000B010(&qword_100364258, &qword_1003641F8);
  uint64_t v48 = v65;
  Publisher.subscribe<A>(_:)();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v47, v48);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  return v41;
}

uint64_t sub_1000C64CC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    PassthroughSubject.send(_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000C6550()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    PassthroughSubject.send(_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000C65D4(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000C6830(v1);
    return swift_release();
  }
  return result;
}

void sub_1000C6634(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  *a2 = sub_100019FB8(*a1);
  id v4 = [v3 mediaRemoteID];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  a2[1] = v5;
  a2[2] = v7;
}

uint64_t sub_1000C669C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000C7268(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000C66FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  long long v9 = 0uLL;
  long long v10 = 0uLL;
  switch(*a1)
  {
    case 0:
      sub_10001A050();
      uint64_t v11 = swift_allocError();
      *(void *)uint64_t v12 = 0;
      *(void *)(v12 + 8) = 0xE000000000000000;
      *(unsigned char *)(v12 + 16) = 11;
      goto LABEL_4;
    case 1:
      break;
    case 2:
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v6 = 1;
      break;
    case 3:
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v6 = 2;
      break;
    default:
      uint64_t v11 = *a1;
LABEL_4:
      sub_1000C7724(v3);
      sub_100146144(v11, &v14);
      long long v9 = v14;
      uint64_t v6 = v15;
      uint64_t v7 = v16;
      uint64_t v8 = v17;
      long long v10 = v18;
      break;
  }
  *(_OWORD *)a2 = v9;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(_OWORD *)(a2 + 40) = v10;
  *(void *)(a2 + 56) = v4;
  *(void *)(a2 + 64) = v5;

  return swift_bridgeObjectRetain();
}

void sub_1000C6830(void *a1)
{
  id v2 = [a1 eventType];
  if (v2 != (id)2)
  {
    if (v2 == (id)1) {
      return;
    }
    if (v2)
    {
      _StringGuts.grow(_:)(38);
      v8._uint64_t countAndFlagsBits = 0xD000000000000024;
      v8._object = (void *)0x80000001002BC4D0;
      String.append(_:)(v8);
      [a1 eventType];
      type metadata accessor for PCProgressEventType(0);
      _print_unlocked<A, B>(_:_:)();
      id v9 = sub_1001F6050();
      swift_bridgeObjectRetain();
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v9 ulog:90 message:v10];
      swift_bridgeObjectRelease();

      return;
    }
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease();
    id v3 = [a1 error];
    if (v3)
    {
      uint64_t v4 = v3;
      swift_getErrorValue();
      uint64_t v5 = Error.localizedDescription.getter();
      uint64_t v7 = v6;
    }
    else
    {
      uint64_t v7 = (void *)0xE100000000000000;
      uint64_t v5 = 63;
    }
    v11._uint64_t countAndFlagsBits = v5;
    v11._object = v7;
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    id v12 = sub_1001F6050();
    swift_bridgeObjectRetain();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v12 ulog:90 message:v13];
    swift_bridgeObjectRelease();
  }
  id v14 = sub_1001F6050();
  NSString v15 = String._bridgeToObjectiveC()();
  [v14 ulog:40 message:v15];

  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_100086F78();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1000C6AB4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_100024144(v0 + 48);
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000C6B1C()
{
  sub_1000C6AB4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MediaRemoteProxy()
{
  return self;
}

void sub_1000C6B74(void *a1)
{
  uint64_t v2 = v1;
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  id v4 = [a1 description];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  v8._uint64_t countAndFlagsBits = v5;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0x52616964656D202CLL;
  v9._object = (void *)0xEF3D44496574756FLL;
  String.append(_:)(v9);
  id v10 = [a1 mediaRemoteID];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v13 = v12;

  v14._uint64_t countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  id v15 = sub_1001F6050();
  swift_bridgeObjectRetain();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 ulog:40 message:v16];
  swift_bridgeObjectRelease();

  if ([a1 eventType] == (id)1)
  {
    if (*(unsigned char *)(v2 + 96))
    {
      id v17 = sub_1001F6050();
      NSString v26 = String._bridgeToObjectiveC()();
      [v17 ulog:40 message:v26];

      return;
    }

    sub_1000C7268(1);
  }
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  id v18 = [a1 description];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v21 = v20;

  v22._uint64_t countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  id v23 = sub_1001F6050();
  swift_bridgeObjectRetain();
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v23 ulog:40 message:v24];
  swift_bridgeObjectRelease();

  id v25 = *(void **)(v2 + 80);

  [v25 receiveEvent:a1];
}

void sub_1000C6E90(uint64_t a1)
{
  uint64_t v2 = a1 + OBJC_IVAR____TtC17proximitycontrold13HandoffDevice_proximityDelegate;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong && (uint64_t v4 = Strong, swift_unknownObjectRelease(), v4 == v1))
  {
    v6._uint64_t countAndFlagsBits = sub_1001F7514();
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    id v7 = sub_1001F6050();
    swift_bridgeObjectRetain();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v7 ulog:40 message:v8];
    swift_bridgeObjectRelease();

    *(void *)(v2 + 8) = 0;
    swift_unknownObjectWeakAssign();
  }
  else
  {
    id v5 = sub_1001F6050();
    NSString v9 = String._bridgeToObjectiveC()();
    [v5 ulog:60 message:v9];
  }
}

void sub_1000C7004(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = a1;
  v6._object = a2;
  String.append(_:)(v6);
  id v7 = sub_1001F6050();
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 ulog:v8 message:0xD00000000000003BLL 0x80000001002BC3B0];
  swift_bridgeObjectRelease();

  if (*(unsigned char *)(v3 + 96))
  {
    id v9 = sub_1001F6050();
    NSString v10 = String._bridgeToObjectiveC()();
    [v9 ulog:60 message:v10];

    sub_1000C752C();
    swift_allocError();
    *uint64_t v11 = 2;
    swift_willThrow();
  }
  else
  {
    id v12 = objc_allocWithZone((Class)PCProximityEvent);
    swift_bridgeObjectRetain();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v14 = [v12 initWithType:1 mediaRemoteID:v13 info:0];

    [v14 setExpectsDisplayContext:1];
    sub_1000C6B74(v14);
  }
}

uint64_t sub_1000C71EC@<X0>(void *a1@<X0>, void (*a2)(void *)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  v8[0] = *a1;
  uint64_t v4 = v8[0];
  v8[1] = v5;
  void v8[2] = v6;
  a2(v8);
  *a3 = v4;
  a3[1] = v5;
  a3[2] = v6;
  sub_1000C7724(v4);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1000C7268(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = 0xE900000000000064;
  uint64_t v4 = *v1;
  uint64_t v22 = 0xD00000000000002CLL;
  id v23 = (void *)0x80000001002BC360;
  unint64_t v5 = a1 - 1;
  switch(a1)
  {
    case 1:
      uint64_t v7 = 0x6574736575716572;
      break;
    case 3:
      uint64_t v7 = 0x6574656C706D6F63;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v7 = 0x6E61676562;
      break;
    default:
      swift_errorRetain();
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      strcpy((char *)v21, "error( error=");
      HIWORD(v21[1]) = -4864;
      if (a1)
      {
        swift_errorRetain();
        sub_10000A38C((uint64_t *)&unk_100365D60);
        uint64_t v8 = String.init<A>(describing:)();
        unint64_t v10 = v9;
      }
      else
      {
        unint64_t v10 = 0xE300000000000000;
        uint64_t v8 = 7104878;
      }
      unint64_t v11 = v10;
      String.append(_:)(*(Swift::String *)&v8);
      swift_bridgeObjectRelease();
      v12._uint64_t countAndFlagsBits = 10528;
      v12._object = (void *)0xE200000000000000;
      String.append(_:)(v12);
      sub_10000BECC(a1);
      uint64_t v7 = v21[0];
      unint64_t v3 = v21[1];
      break;
  }
  unint64_t v13 = v3;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease();
  id v14 = sub_1001F6050();
  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 ulog:40 message:v15];
  swift_bridgeObjectRelease();

  *((unsigned char *)v2 + 96) = v5 < 2;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease();
  uint64_t v22 = 0xD00000000000001ELL;
  id v23 = (void *)0x80000001002BC390;
  if (*((unsigned char *)v2 + 96)) {
    uint64_t v16 = 1702195828;
  }
  else {
    uint64_t v16 = 0x65736C6166;
  }
  if (*((unsigned char *)v2 + 96)) {
    unint64_t v17 = 0xE400000000000000;
  }
  else {
    unint64_t v17 = 0xE500000000000000;
  }
  unint64_t v18 = v17;
  String.append(_:)(*(Swift::String *)&v16);
  swift_bridgeObjectRelease();
  v19._uint64_t countAndFlagsBits = 39;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  sub_10016ABE4(v22, v23, 0, v4, (uint64_t)&off_1003253B8);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1000C752C()
{
  unint64_t result = qword_1003641B8;
  if (!qword_1003641B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003641B8);
  }
  return result;
}

uint64_t sub_1000C7580()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C75B8()
{
  return sub_1000C64CC();
}

uint64_t sub_1000C75C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000C75D0()
{
  return swift_release();
}

uint64_t sub_1000C75D8()
{
  return sub_1000C6550();
}

id sub_1000C75E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1000C7618(a1, (uint64_t (*)(void, void, void, void, void, void, void, void, _DWORD))sub_100039DD0, a2);
}

id sub_1000C7600@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1000C7618(a1, (uint64_t (*)(void, void, void, void, void, void, void, void, _DWORD))sub_100039D94, a2);
}

id sub_1000C7618@<X0>(void *a1@<X0>, uint64_t (*a2)(void, void, void, void, void, void, void, void, _DWORD)@<X1>, void *a3@<X8>)
{
  unint64_t v5 = (void *)a2(*a1, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72), *(_DWORD *)(v3 + 80));
  *a3 = v5;

  return v5;
}

uint64_t sub_1000C767C(void **a1)
{
  return sub_1000C65D4(a1);
}

uint64_t sub_1000C7684()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000C76BC@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void (**)(void **))(v2 + 16);
  uint64_t v7 = *a1;
  id v6 = v7;
  v4(&v7);
  *a2 = v6;

  return v6;
}

uint64_t sub_1000C7714(uint64_t *a1)
{
  return sub_1000C669C(a1);
}

uint64_t sub_1000C771C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000C71EC(a1, *(void (**)(void *))(v2 + 16), a2);
}

uint64_t sub_1000C7724(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 3) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_1000C7744()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001D790(v0, qword_1003AC788);
  sub_10001D758(v0, (uint64_t)qword_1003AC788);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1000C77C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_errorRetain();
    sub_10000A38C(&qword_100364278);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10000A38C(&qword_100364278);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t *sub_1000C784C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000A38C(&qword_10035E150);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 0;
  v1[2] = v3;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, v2, (uint64_t)&off_100325558);
  id v4 = [self currentDevice];
  [v4 setBatteryMonitoringEnabled:1];

  id v5 = [self defaultCenter];
  [v5 addObserver:v1 selector:"batteryStateDidChange" name:UIDeviceBatteryStateDidChangeNotification object:0];

  sub_1000C79F4();
  return v1;
}

uint64_t sub_1000C796C()
{
  id v0 = sub_1001F5DD8();
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 ulog:40 message:v1];

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1000C79F4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10035A628 != -1) {
    swift_once();
  }
  unint64_t v10 = (void *)qword_1003ACB50;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v0;
  *(void *)(v11 + 24) = v1;
  aBlock[4] = sub_1000C7EAC;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A0AC;
  aBlock[3] = &unk_1003255B8;
  Swift::String v12 = _Block_copy(aBlock);
  id v13 = v10;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v15[1] = _swiftEmptyArrayStorage;
  sub_10004D1C4();
  sub_10000A38C((uint64_t *)&unk_10035E800);
  sub_10001683C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

uint64_t sub_1000C7CC0(uint64_t a1, uint64_t a2)
{
  id v4 = [self currentDevice];
  id v5 = [v4 batteryState];

  *(unsigned char *)(*(void *)(a1 + 16) + 24) = v5 != (id)1;
  swift_retain();
  sub_100104B88();
  CurrentValueSubject.send(_:)();
  swift_release();
  swift_release();
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(*(void *)(a1 + 16) + 24)) {
    uint64_t v6 = 1702195828;
  }
  else {
    uint64_t v6 = 0x65736C6166;
  }
  if (*(unsigned char *)(*(void *)(a1 + 16) + 24)) {
    unint64_t v7 = 0xE400000000000000;
  }
  else {
    unint64_t v7 = 0xE500000000000000;
  }
  unint64_t v8 = v7;
  String.append(_:)(*(Swift::String *)&v6);
  swift_bridgeObjectRelease();
  sub_10016ABE4(0xD000000000000024, (void *)0x80000001002BC5A0, 0, a2, (uint64_t)&off_100325558);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for BatteryStateMonitor()
{
  return self;
}

uint64_t sub_1000C7E74()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C7EAC()
{
  return sub_1000C7CC0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000C7EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000C7EC4()
{
  return swift_release();
}

uint64_t Publisher.conditionalDebounce<A>(for:tolerance:scheduler:options:when:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v65 = a6;
  uint64_t v63 = a4;
  uint64_t v64 = a5;
  uint64_t v62 = a3;
  uint64_t v59 = a1;
  uint64_t v60 = a2;
  uint64_t v66 = a9;
  uint64_t v53 = a8;
  swift_getAssociatedTypeWitness();
  uint64_t v13 = type metadata accessor for Optional();
  uint64_t v70 = *(void *)(v13 - 8);
  uint64_t v71 = v13;
  uint64_t v61 = *(void *)(v70 + 64);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v69 = (char *)&v44 - v15;
  uint64_t v67 = *(void *)(a8 - 8);
  uint64_t v57 = *(void *)(v67 + 64);
  __chkstk_darwin(v14);
  uint64_t v68 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = a11;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = type metadata accessor for Optional();
  uint64_t v48 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v21 = __chkstk_darwin(v18);
  id v23 = (char *)&v44 - v22;
  uint64_t v49 = (char *)&v44 - v22;
  uint64_t v46 = AssociatedTypeWitness;
  uint64_t v24 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  __chkstk_darwin(v21);
  uint64_t v27 = (char *)&v44 - v26;
  uint64_t v47 = (char *)&v44 - v26;
  uint64_t v51 = a10;
  uint64_t v50 = a7;
  swift_getAssociatedTypeWitness();
  uint64_t v54 = type metadata accessor for AnyPublisher();
  uint64_t v28 = type metadata accessor for Publishers.Map();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v55 = v28;
  uint64_t v56 = v29;
  __chkstk_darwin(v28);
  uint64_t v52 = (char *)&v44 - v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v27, v59, AssociatedTypeWitness);
  uint64_t v45 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v23, v60, v18);
  uint64_t v31 = v67;
  uint64_t v32 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v68, v62, v53);
  uint64_t v33 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v69, v63, v71);
  unint64_t v34 = (*(unsigned __int8 *)(v24 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v35 = (v25 + *(unsigned __int8 *)(v19 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v36 = (v20 + *(unsigned __int8 *)(v31 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v37 = (v57 + *(unsigned __int8 *)(v33 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v38 = (char *)swift_allocObject();
  *((void *)v38 + 2) = v50;
  *((void *)v38 + 3) = v32;
  uint64_t v39 = v58;
  *((void *)v38 + 4) = v51;
  *((void *)v38 + 5) = v39;
  uint64_t v40 = v65;
  *((void *)v38 + 6) = v64;
  *((void *)v38 + 7) = v40;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v38[v34], v47, v46);
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v38[v35], v49, v48);
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(&v38[v36], v68, v32);
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(&v38[v37], v69, v71);
  swift_retain();
  uint64_t v41 = v52;
  Publisher.map<A>(_:)();
  swift_release();
  uint64_t v42 = v55;
  swift_getWitnessTable();
  swift_getWitnessTable();
  Publisher<>.switchToLatest()();
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v41, v42);
}

uint64_t sub_1000C84E4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v26[5] = a5;
  v26[6] = a6;
  v26[4] = a4;
  _OWORD v26[2] = a3;
  uint64_t v28 = a2;
  uint64_t v29 = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v14 = (char *)v26 - v13;
  uint64_t v15 = type metadata accessor for Just();
  uint64_t v27 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)v26 - v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v30 = v15;
  uint64_t v31 = a8;
  v26[1] = a8;
  uint64_t v32 = WitnessTable;
  uint64_t v33 = a10;
  v26[3] = a10;
  uint64_t v19 = type metadata accessor for Publishers.Delay();
  v26[0] = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v26 - v20;
  char v22 = v28(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, AssociatedTypeWitness);
  Just.init(_:)();
  id v23 = (void (**)(char *, uint64_t))(v27 + 8);
  if (v22)
  {
    Publisher.delay<A>(for:tolerance:scheduler:options:)();
    (*v23)(v17, v15);
    swift_getWitnessTable();
    uint64_t v24 = Publisher.eraseToAnyPublisher()();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v26[0] + 8))(v21, v19);
  }
  else
  {
    uint64_t v24 = Publisher.eraseToAnyPublisher()();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v23)(v17, v15);
  }
  *uint64_t v29 = v24;
  return result;
}

uint64_t sub_1000C87FC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v22 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for Optional() - 8);
  uint64_t v21 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v6 = (((v22 + 64) & ~v22) + v4 + v21) & ~v21;
  uint64_t v7 = *(void *)(v1 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v8 = (v6 + *(void *)(v5 + 64) + v20) & ~v20;
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(type metadata accessor for Optional() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v17 = (v8 + v9 + v12) & ~v12;
  uint64_t v18 = v8;
  uint64_t v19 = *(void *)(v11 + 64);
  swift_release();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v13(v0 + ((v22 + 64) & ~v22), AssociatedTypeWitness);
  uint64_t v14 = v0 + v6;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v14, 1, AssociatedTypeWitness)) {
    v13(v14, AssociatedTypeWitness);
  }
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v18, v1);
  uint64_t v15 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v0 + v17, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v0 + v17, v10);
  }

  return _swift_deallocObject(v0, v17 + v19, v22 | v21 | v20 | v12 | 7);
}

uint64_t sub_1000C8B64@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  uint64_t v5 = *(void *)(v2 + 40);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(type metadata accessor for Optional() - 8);
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v12 = (v11 + *(void *)(v10 + 64) + *(unsigned __int8 *)(*(void *)(v4 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v13 = *(void *)(*(void *)(v4 - 8) + 64);
  swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(type metadata accessor for Optional() - 8);
  return sub_1000C84E4(a1, *(uint64_t (**)(uint64_t))(v2 + 48), v2 + v8, v2 + v11, v2 + v12, v2 + ((v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), a2, v4, v6, v5);
}

uint64_t sub_1000C8D9C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000C8F3C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WiFiMonitorModel()
{
  return self;
}

unint64_t sub_1000C8F70()
{
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 32);
  if (v1)
  {
    uint64_t v17 = *(void *)(v0 + 24);
    unint64_t v18 = v1;
    swift_bridgeObjectRetain();
    uint64_t v2 = String.init<A>(describing:)();
    unint64_t v4 = v3;
  }
  else
  {
    uint64_t v2 = 7104878;
    unint64_t v4 = 0xE300000000000000;
  }
  unint64_t v5 = v4;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 0x3D6E65706F20;
  v6._object = (void *)0xE600000000000000;
  String.append(_:)(v6);
  if (*(unsigned char *)v0) {
    uint64_t v7 = 5457241;
  }
  else {
    uint64_t v7 = 20302;
  }
  if (*(unsigned char *)v0) {
    unint64_t v8 = 0xE300000000000000;
  }
  else {
    unint64_t v8 = 0xE200000000000000;
  }
  unint64_t v9 = v8;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 0x3D6B737020;
  v10._object = (void *)0xE500000000000000;
  String.append(_:)(v10);
  sub_10001639C(v0 + 8, (uint64_t)v16, &qword_10035F850);
  sub_10001639C((uint64_t)v16, (uint64_t)&v17, &qword_10035F850);
  if (v18) {
    uint64_t v11 = 1701670771;
  }
  else {
    uint64_t v11 = 7104878;
  }
  if (v18) {
    unint64_t v12 = 0xE400000000000000;
  }
  else {
    unint64_t v12 = 0xE300000000000000;
  }
  unint64_t v13 = v12;
  String.append(_:)(*(Swift::String *)&v11);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 62;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  return 0xD000000000000016;
}

unint64_t sub_1000C9108()
{
  return sub_1000C8F70();
}

BOOL sub_1000C9144(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_1000C9DB4(v5, v7);
}

uint64_t sub_1000C9190()
{
  sub_10000F088(*(void *)(v0 + 16));
  sub_10000F088(*(void *)(v0 + 32));
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WiFiMonitorState()
{
  return self;
}

void sub_1000C91FC()
{
  type metadata accessor for WiFiMonitorModel();
  uint64_t v0 = swift_allocObject();
  *(unsigned char *)(v0 + 16) = 1;
  type metadata accessor for WiFiMonitorState();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  v4[0] = 0;
  v4[1] = 0;
  v4[3] = 0;
  v4[4] = 0;
  v4[2] = 1;
  sub_10000A38C(&qword_1003645E0);
  swift_allocObject();
  *(void *)(v1 + 48) = sub_1001EF584((uint64_t)v4, 0, 0, 0);
  type metadata accessor for WiFiMonitor();
  long long v2 = (uint64_t *)swift_allocObject();
  uint64_t v3 = *v2;
  v2[4] = 0;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, v3, (uint64_t)&off_100325690);
  v2[2] = v0;
  v2[3] = v1;
  sub_1000C945C();
  qword_1003AC7A0 = (uint64_t)v2;
}

uint64_t *sub_1000C931C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  v2[4] = 0;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, v5, (uint64_t)&off_100325690);
  v2[2] = a1;
  v2[3] = a2;
  return v2;
}

uint64_t sub_1000C93A0()
{
  id v1 = sub_1001F67EC();
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 ulog:40 message:v2];

  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WiFiMonitor()
{
  return self;
}

void sub_1000C945C()
{
  uint64_t v1 = *v0;
  id v2 = sub_1001F67EC();
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 ulog:40 message:v3];

  unint64_t v4 = (void *)v0[3];
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = v4[2];
  v4[2] = sub_1000C9EA8;
  v4[3] = v5;
  sub_10000F088(v6);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = v4[4];
  v4[4] = sub_1000C9EB0;
  void v4[5] = v7;
  sub_10000F088(v8);
  id v9 = [objc_allocWithZone((Class)CUWiFiManager) init];
  if (qword_10035A628 != -1) {
    swift_once();
  }
  [v9 setDispatchQueue:qword_1003ACB50];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  uint64_t v20 = sub_1000C9EC8;
  uint64_t v21 = (void *)v10;
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  unint64_t v18 = sub_10007A0AC;
  uint64_t v19 = &unk_100325718;
  uint64_t v11 = _Block_copy(&v16);
  swift_release();
  [v9 setInvalidationHandler:v11];
  _Block_release(v11);
  uint64_t v20 = sub_1000C9F30;
  uint64_t v21 = v0;
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  unint64_t v18 = sub_10007A0AC;
  uint64_t v19 = &unk_100325740;
  unint64_t v12 = _Block_copy(&v16);
  swift_retain();
  swift_release();
  [v9 setWifiStateChangedHandler:v12];
  _Block_release(v12);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v0;
  *(void *)(v13 + 24) = v1;
  uint64_t v20 = sub_1000C9F70;
  uint64_t v21 = (void *)v13;
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  unint64_t v18 = sub_100119FC4;
  uint64_t v19 = &unk_100325790;
  Swift::String v14 = _Block_copy(&v16);
  swift_retain();
  swift_release();
  [v9 activateWithCompletion:v14];
  _Block_release(v14);
  uint64_t v15 = (void *)v0[4];
  v0[4] = v9;
}

uint64_t destroy for WiFiNetworkInfo()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WiFiNetworkInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WiFiNetworkInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WiFiNetworkInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WiFiNetworkInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WiFiNetworkInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WiFiNetworkInfo()
{
  return &type metadata for WiFiNetworkInfo;
}

uint64_t sub_1000C99D8@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000CA2DC((uint64_t)v8);
    long long v6 = v8[1];
    long long v7 = v8[0];
    uint64_t v3 = v9;
    uint64_t result = swift_release();
    long long v4 = v6;
    long long v5 = v7;
  }
  else
  {
    uint64_t v3 = 0;
    long long v4 = xmmword_10028F480;
    long long v5 = 0uLL;
  }
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_1000C9A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000CA4CC(a1, a2, (uint64_t)v12);
    long long v10 = v12[1];
    long long v11 = v12[0];
    uint64_t v7 = v13;
    uint64_t result = swift_release();
    long long v8 = v10;
    long long v9 = v11;
  }
  else
  {
    uint64_t v7 = 0;
    long long v8 = xmmword_10028F480;
    long long v9 = 0uLL;
  }
  *(_OWORD *)a3 = v9;
  *(_OWORD *)(a3 + 16) = v8;
  *(void *)(a3 + 32) = v7;
  return result;
}

uint64_t sub_1000C9B18()
{
  id v0 = sub_1001F67EC();
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 ulog:40 message:v1];

  sub_1000CA2DC((uint64_t)v3);
  swift_retain();
  sub_1000CA448(v3, (void (*)(void, void, void, void, void))sub_1000CA400);
  sub_1001BE964(v3);
  sub_1000CA448(v3, (void (*)(void, void, void, void, void))sub_1000CA484);
  return swift_release();
}

uint64_t sub_1000C9BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    swift_errorRetain();
    _StringGuts.grow(_:)(35);
    v4._uint64_t countAndFlagsBits = 0xD000000000000021;
    v4._object = (void *)0x80000001002BC750;
    String.append(_:)(v4);
    sub_10000A38C((uint64_t *)&unk_100365D60);
    _print_unlocked<A, B>(_:_:)();
    sub_10016AE10(90, 0, (void *)0xE000000000000000, 0, a3, (uint64_t)&off_100325690);
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    sub_10016ABE4(0xD000000000000016, (void *)0x80000001002BC710, 0, a3, (uint64_t)&off_100325690);
    id v6 = sub_1001F67EC();
    NSString v7 = String._bridgeToObjectiveC()();
    [v6 ulog:40 message:v7];

    sub_1000CA2DC((uint64_t)&v8);
    swift_retain();
    sub_1000CA448(&v8, (void (*)(void, void, void, void, void))sub_1000CA400);
    sub_1001BE964(&v8);
    sub_1000CA448(&v8, (void (*)(void, void, void, void, void))sub_1000CA484);
    return swift_release();
  }
}

BOOL sub_1000C9DB4(void *a1, void *a2)
{
  if ((*(unsigned __int8 *)a1 ^ *(unsigned __int8 *)a2)) {
    return 0;
  }
  uint64_t v5 = a1[2];
  uint64_t v6 = a2[2];
  if (!v5)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_13;
  }
  if (!v6) {
    return 0;
  }
  BOOL v7 = a1[1] == a2[1] && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), BOOL result = 0, (v8 & 1) != 0))
  {
LABEL_13:
    uint64_t v9 = a1[4];
    uint64_t v10 = a2[4];
    if (v9) {
      return v10 && (a1[3] == a2[3] && v9 == v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0);
    }
    return !v10;
  }
  return result;
}

uint64_t sub_1000C9E70()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C9EA8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C99D8(a1);
}

uint64_t sub_1000C9EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1000C9A70(a1, a2, a3);
}

uint64_t sub_1000C9EB8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000C9EC8()
{
  sub_10016AE10(60, 0xD00000000000001BLL, (void *)0x80000001002BC7B0, 0, *(void *)(v0 + 16), (uint64_t)&off_100325690);
}

uint64_t sub_1000C9F18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000C9F28()
{
  return swift_release();
}

uint64_t sub_1000C9F30()
{
  return sub_1000C9B18();
}

uint64_t sub_1000C9F38()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C9F70(uint64_t a1)
{
  return sub_1000C9BF0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1000C9F78(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X8>)
{
  if (a2)
  {
    v25[0] = 0x6F72724520232323;
    v25[1] = 0xEB00000000203A72;
    LODWORD(v26) = a2;
    v4._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v4);
    swift_bridgeObjectRelease();
    id v5 = sub_1001F67EC();
    swift_bridgeObjectRetain();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v5 ulog:40 message:v6];
    swift_bridgeObjectRelease();

LABEL_3:
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    uint64_t v11 = 1;
    goto LABEL_4;
  }
  if (!a1)
  {
    id v15 = sub_1001F67EC();
    NSString v16 = String._bridgeToObjectiveC()();
    [v15 ulog:40 message:v16];

    goto LABEL_3;
  }
  *(void *)&long long v26 = 1852141679;
  *((void *)&v26 + 1) = 0xE400000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v13 = sub_100269E60((uint64_t)v25), (v14 & 1) != 0))
  {
    sub_100027B10(*(void *)(a1 + 56) + 32 * v13, (uint64_t)&v26);
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  sub_1000BA108((uint64_t)v25);
  if (*((void *)&v27 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v7 = v23;
      goto LABEL_16;
    }
  }
  else
  {
    sub_1000911A4((uint64_t)&v26);
  }
  uint64_t v7 = 0;
LABEL_16:
  *(void *)&long long v26 = 0x7274536B7370;
  *((void *)&v26 + 1) = 0xE600000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v17 = sub_100269E60((uint64_t)v25), (v18 & 1) != 0))
  {
    sub_100027B10(*(void *)(a1 + 56) + 32 * v17, (uint64_t)&v26);
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  sub_1000BA108((uint64_t)v25);
  if (*((void *)&v27 + 1))
  {
    int v19 = swift_dynamicCast();
    if (v19) {
      uint64_t v8 = v23;
    }
    else {
      uint64_t v8 = 0;
    }
    if (v19) {
      uint64_t v11 = v24;
    }
    else {
      uint64_t v11 = 0;
    }
  }
  else
  {
    sub_1000911A4((uint64_t)&v26);
    uint64_t v8 = 0;
    uint64_t v11 = 0;
  }
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v20 = sub_100269E60((uint64_t)v25), (v21 & 1) != 0))
  {
    sub_100027B10(*(void *)(a1 + 56) + 32 * v20, (uint64_t)&v26);
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  sub_1000BA108((uint64_t)v25);
  if (*((void *)&v27 + 1))
  {
    int v22 = swift_dynamicCast();
    uint64_t v9 = 1684632435;
    unint64_t v10 = 0xE400000000000000;
    if (!v22)
    {
      uint64_t v9 = 0;
      unint64_t v10 = 0;
    }
  }
  else
  {
    sub_1000911A4((uint64_t)&v26);
    uint64_t v9 = 0;
    unint64_t v10 = 0;
  }
LABEL_4:
  *a3 = v7;
  a3[1] = v8;
  a3[2] = v11;
  a3[3] = v9;
  a3[4] = v10;
}

uint64_t sub_1000CA2DC@<X0>(uint64_t a1@<X8>)
{
  id v2 = sub_1001F67EC();
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 ulog:40 message:v3];

  Swift::String v4 = (void *)WiFiCopyCurrentNetworkInfoEx();
  if (v4)
  {
    v6[0] = 0;
    static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
  }
  sub_1000C9F78(0, 0, v6);

  swift_bridgeObjectRelease();
  return sub_10001639C((uint64_t)v6, a1, (uint64_t *)&unk_10036C120);
}

uint64_t sub_1000CA400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1000CA448(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1000CA484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000CA4CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  String.append(_:)(*(Swift::String *)&a1);
  id v6 = sub_1001F67EC();
  swift_bridgeObjectRetain();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 ulog:40 message:v7];
  swift_bridgeObjectRelease();

  sub_10000A38C(&qword_1003645E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10028D430;
  v12[0] = 1684632435;
  v12[1] = 0xE400000000000000;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = a1;
  *(void *)(inited + 80) = a2;
  swift_bridgeObjectRetain();
  sub_100268E80(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  unint64_t v10 = (void *)WiFiCopyNetworkInfo();

  if (v10)
  {
    v12[0] = 0;
    static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
  }
  sub_1000C9F78(0, 0, v12);
  swift_bridgeObjectRelease();
  return sub_10001639C((uint64_t)v12, a3, (uint64_t *)&unk_10036C120);
}

double sub_1000CA6E0@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1000CA764(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000A38C(&qword_10035E110);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v2 + OBJC_IVAR____TtC17proximitycontrold12SharingProxy__lastEvent;
  char v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_10000A38C(&qword_10035D9C0);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v8, v7, v4);
  uint64_t v9 = v2 + OBJC_IVAR____TtC17proximitycontrold12SharingProxy_handoffDirection;
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 8) = 1;
  uint64_t v10 = v2 + OBJC_IVAR____TtC17proximitycontrold12SharingProxy_lastDirection;
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  *(void *)(v2 + OBJC_IVAR____TtC17proximitycontrold12SharingProxy_client) = 0;
  uint64_t v11 = OBJC_IVAR____TtC17proximitycontrold12SharingProxy_suppressedDevices;
  sub_10000A38C((uint64_t *)&unk_100368060);
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = [objc_allocWithZone((Class)NSLock) init];
  sub_10000A38C(&qword_10035ABB8);
  swift_allocObject();
  uint64_t v13 = PassthroughSubject.init()();
  sub_10000A38C(&qword_10035FED0);
  swift_allocObject();
  uint64_t v14 = PassthroughSubject.init()();
  swift_allocObject();
  uint64_t v15 = PassthroughSubject.init()();
  *(void *)(v12 + 40) = v13;
  *(void *)(v12 + 48) = v14;
  *(void *)(v12 + 56) = v15;
  *(void *)(v12 + 64) = &_swiftEmptyDictionarySingleton;
  *(void *)(v12 + 72) = 0;
  v20[0] = type metadata accessor for HandoffDevice();
  v20[1] = type metadata accessor for UUID();
  v20[2] = sub_1000CF444(&qword_1003647F0, (void (*)(uint64_t))type metadata accessor for HandoffDevice);
  *(void *)(v12 + 16) = swift_getKeyPath();
  *(void *)(v2 + v11) = v12;
  *(unsigned char *)(v12 + 24) = 0;
  uint64_t v16 = OBJC_IVAR____TtC17proximitycontrold12SharingProxy_dispatchQueue;
  if (qword_10035A620 != -1) {
    swift_once();
  }
  unint64_t v17 = (void *)qword_1003ACB48;
  *(void *)(v2 + v16) = qword_1003ACB48;
  *(void *)(v2 + OBJC_IVAR____TtC17proximitycontrold12SharingProxy_tasks) = &_swiftEmptySetSingleton;
  *(void *)(v2 + 16) = a1;
  id v18 = v17;
  return v2;
}

uint64_t sub_1000CAA38()
{
  uint64_t v93 = *v0;
  uint64_t v1 = sub_10000A38C(&qword_1003647F8);
  uint64_t v91 = *(void *)(v1 - 8);
  uint64_t v92 = v1;
  __chkstk_darwin(v1);
  uint64_t v90 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000A38C((uint64_t *)&unk_100367810);
  uint64_t v85 = *(void *)(v3 - 8);
  uint64_t v86 = v3;
  __chkstk_darwin(v3);
  Swift::String v83 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A38C(&qword_100364800);
  uint64_t v88 = *(void *)(v5 - 8);
  uint64_t v89 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v87 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = v7;
  __chkstk_darwin(v6);
  uint64_t v94 = (char *)&v68 - v8;
  uint64_t v82 = sub_10000A38C(&qword_100364808);
  uint64_t v81 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v80 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A38C(&qword_10035AC20);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10000A38C((uint64_t *)&unk_1003680A0);
  uint64_t v71 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_10000A38C(&qword_100364810);
  uint64_t v79 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  NSString v77 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = sub_1001F6558();
  NSString v17 = String._bridgeToObjectiveC()();
  [v16 ulog:40 message:v17];

  id v18 = [objc_allocWithZone((Class)SFProximityClient) init];
  uint64_t v19 = OBJC_IVAR____TtC17proximitycontrold12SharingProxy_client;
  unint64_t v20 = *(void **)((char *)v0 + OBJC_IVAR____TtC17proximitycontrold12SharingProxy_client);
  *(void *)((char *)v0 + OBJC_IVAR____TtC17proximitycontrold12SharingProxy_client) = v18;
  id v21 = v18;

  long long v22 = *(void **)((char *)v0 + v19);
  id v23 = v22;
  sub_1000CD3D8(v22);

  uint64_t v95 = v0;
  uint64_t v24 = v0[2];
  uint64_t v98 = *(void *)(v24 + 40);
  uint64_t v25 = sub_10000A38C(&qword_10035ABB8);
  uint64_t v26 = sub_10000B010(&qword_10035ABC0, &qword_10035ABB8);
  uint64_t v75 = v25;
  uint64_t v74 = v26;
  id v96 = (id)Publisher.eraseToAnyPublisher()();
  [*(id *)(v24 + 32) lock];
  swift_beginAccess();
  uint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v28 = sub_1000F06FC(v27);
  swift_bridgeObjectRelease();
  [*(id *)(v24 + 32) unlock];
  id v97 = v28;
  uint64_t v29 = sub_10000A38C(&qword_10035ABC8);
  sub_10000A38C(&qword_10035CA78);
  uint64_t v30 = sub_10000B010(&qword_10035ABD0, &qword_10035ABC8);
  sub_10000B010((unint64_t *)&unk_1003680B0, &qword_10035CA78);
  uint64_t v73 = v29;
  uint64_t v72 = v30;
  Publisher.prepend<A>(_:)();
  swift_release();
  swift_release();
  if (qword_10035A628 != -1) {
    swift_once();
  }
  uint64_t v31 = (void *)qword_1003ACB50;
  id v96 = (id)qword_1003ACB50;
  uint64_t v32 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
  uint64_t v70 = v33 + 56;
  v69(v12, 1, 1, v32);
  unint64_t v68 = sub_10000A34C();
  sub_10000B010(&qword_10035F7B0, (uint64_t *)&unk_1003680A0);
  sub_1000CF444((unint64_t *)&qword_10035AC60, (void (*)(uint64_t))sub_10000A34C);
  id v34 = v31;
  unint64_t v35 = v77;
  uint64_t v36 = v76;
  Publisher.receive<A>(on:options:)();
  sub_10000D78C((uint64_t)v12, &qword_10035AC20);

  (*(void (**)(char *, uint64_t))(v71 + 8))(v14, v36);
  swift_allocObject();
  unint64_t v37 = v95;
  swift_weakInit();
  sub_10000B010(&qword_100364818, &qword_100364810);
  uint64_t v38 = v78;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v35, v38);
  uint64_t v39 = (uint64_t)v37 + OBJC_IVAR____TtC17proximitycontrold12SharingProxy_tasks;
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v96 = *(id *)(v24 + 56);
  id v96 = (id)Publisher.eraseToAnyPublisher()();
  uint64_t v40 = (void *)qword_1003ACB50;
  id v97 = (id)qword_1003ACB50;
  v69(v12, 1, 1, v32);
  id v41 = v40;
  uint64_t v42 = v80;
  Publisher.receive<A>(on:options:)();
  sub_10000D78C((uint64_t)v12, &qword_10035AC20);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_10000B010(&qword_100364820, &qword_100364808);
  uint64_t v43 = v82;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v42, v43);
  swift_beginAccess();
  uint64_t v82 = v39;
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  if (qword_10035A5C0 != -1) {
    swift_once();
  }
  swift_retain();
  id v96 = (id)sub_100104B88();
  sub_10000A38C((uint64_t *)&unk_10036BFE0);
  sub_10000B010((unint64_t *)&unk_100363D30, (uint64_t *)&unk_10036BFE0);
  uint64_t v44 = (void *)Publisher.eraseToAnyPublisher()();
  swift_release();
  swift_release();
  id v96 = v44;
  uint64_t v81 = sub_10000A38C(&qword_10035ACA0);
  uint64_t v80 = (char *)sub_10000B010(&qword_10035ACB0, &qword_10035ACA0);
  uint64_t v45 = v83;
  Publisher<>.removeDuplicates()();
  swift_release();
  sub_10000B010(&qword_10036B0E0, (uint64_t *)&unk_100367810);
  uint64_t v46 = v94;
  uint64_t v47 = v86;
  Publisher.dropFirst(_:)();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v45, v47);
  id v48 = sub_1001F6558();
  uint64_t v50 = v87;
  uint64_t v49 = v88;
  uint64_t v51 = v89;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v87, v46, v89);
  unint64_t v52 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  unint64_t v53 = (v84 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = (v53 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = (v54 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = 0;
  *(void *)(v56 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v56 + v52, v50, v51);
  uint64_t v57 = (void *)(v56 + v53);
  *uint64_t v57 = 0xD00000000000001DLL;
  v57[1] = 0x80000001002BCB40;
  uint64_t v58 = (void *)(v56 + v54);
  void *v58 = 0;
  v58[1] = 0xE000000000000000;
  *(void *)(v56 + v55) = v48;
  *(_DWORD *)(v56 + ((v55 + 11) & 0xFFFFFFFFFFFFFFF8)) = 40;
  sub_10000B010(&qword_100364828, &qword_100364800);
  id v59 = v48;
  uint64_t v60 = v90;
  uint64_t v61 = v94;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_100364830, &qword_1003647F8);
  uint64_t v62 = v92;
  uint64_t v63 = (void *)Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v60, v62);

  (*(void (**)(char *, uint64_t))(v49 + 8))(v61, v51);
  id v96 = v63;
  swift_allocObject();
  swift_weakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v64 = swift_allocObject();
  swift_weakInit();
  uint64_t v65 = swift_allocObject();
  uint64_t v66 = v93;
  *(void *)(v65 + 16) = v64;
  *(void *)(v65 + 24) = v66;
  sub_10000A38C((uint64_t *)&unk_100363D00);
  swift_allocObject();
  return Future.init(_:)();
}

uint64_t sub_1000CB874(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v3._uint64_t countAndFlagsBits = sub_1001F7514();
    String.append(_:)(v3);
    swift_bridgeObjectRelease();
    id v4 = sub_1001F6558();
    swift_bridgeObjectRetain();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v4 ulog:40 message:v5];
    swift_bridgeObjectRelease();

    *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold13HandoffDevice_legacyDelegate + 8) = &off_100323420;
    swift_unknownObjectWeakAssign();
    sub_1000CC1E4(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000CB998(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100087D40(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000CB9F8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000CBE50();
    return swift_release();
  }
  return result;
}

void sub_1000CBA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = *(void **)(Strong + OBJC_IVAR____TtC17proximitycontrold12SharingProxy_client);
    id v10 = v9;
    swift_retain();
    swift_release();
    if (v9)
    {
      id v11 = sub_10016B098(a4, (uint64_t)&off_100325868);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_100295990;
      *(void *)(v12 + 32) = sub_1000CF728;
      *(void *)(v12 + 40) = v7;
      *(void *)(v12 + 48) = v11;
      aBlock[4] = sub_1000CF77C;
      aBlock[5] = v12;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100119FC4;
      aBlock[3] = &unk_100325D00;
      uint64_t v13 = _Block_copy(aBlock);
      swift_release();
      [v10 activateWithCompletion:v13];
      _Block_release(v13);

      return;
    }
  }
  else
  {
    swift_retain();
  }
  swift_release();
}

uint64_t sub_1000CBBEC()
{
  id v1 = sub_1001F6558();
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 ulog:40 message:v2];

  sub_1000CBD40();
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC17proximitycontrold12SharingProxy__lastEvent;
  uint64_t v4 = sub_10000A38C(&qword_10035E110);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000CBCE8()
{
  sub_1000CBBEC();

  return swift_deallocClassInstance();
}

uint64_t sub_1000CBD40()
{
  uint64_t v1 = v0;
  id v2 = sub_1001F6558();
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 ulog:40 message:v3];

  uint64_t v4 = OBJC_IVAR____TtC17proximitycontrold12SharingProxy_client;
  NSString v5 = *(void **)(v1 + OBJC_IVAR____TtC17proximitycontrold12SharingProxy_client);
  if (v5)
  {
    [v5 invalidate];
    uint64_t v6 = *(void **)(v1 + v4);
    *(void *)(v1 + v4) = 0;

    uint64_t v7 = *(void **)(v1 + v4);
    id v8 = v7;
    sub_1000CD3D8(v7);
  }
  swift_retain();
  sub_1001A8398();
  swift_release();
  uint64_t v9 = (void *)(v1 + OBJC_IVAR____TtC17proximitycontrold12SharingProxy_tasks);
  swift_beginAccess();
  *uint64_t v9 = &_swiftEmptySetSingleton;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000CBE50()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A38C(&qword_10035E160);
  __chkstk_darwin(v2 - 8);
  v23[0] = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = sub_1001F6558();
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 ulog:40 message:v5];

  uint64_t v6 = *(void *)(v1 + 16);
  [*(id *)(v6 + 32) lock];
  swift_beginAccess();
  uint64_t v7 = swift_bridgeObjectRetain();
  unint64_t v8 = (unint64_t)sub_1000F06FC(v7);
  swift_bridgeObjectRelease();
  [*(id *)(v6 + 32) unlock];
  if ((v8 & 0x8000000000000000) != 0 || (v8 & 0x4000000000000000) != 0)
  {
    swift_retain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v9 = result;
    if (result) {
      goto LABEL_4;
    }
    return swift_release_n();
  }
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t result = swift_retain();
  if (!v9) {
    return swift_release_n();
  }
LABEL_4:
  if (v9 >= 1)
  {
    uint64_t v11 = 0;
    while (1)
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v12 = *(void *)(v8 + 8 * v11 + 32);
        swift_retain();
      }
      char v13 = sub_10000C78C();
      if ((v13 & 8) == 0)
      {
        if (qword_10035A5C0 != -1) {
          swift_once();
        }
        if (*((unsigned char *)off_10036AE10 + 24) != 1) {
          goto LABEL_27;
        }
        if (qword_10035A520 != -1) {
          swift_once();
        }
        id v14 = *(id *)(qword_1003AC750 + 1560);
        char v15 = sub_100100D88();

        if (v15 == 2)
        {
          int v16 = sub_1000458C8();
          if ((v13 & 2) == 0) {
            goto LABEL_27;
          }
        }
        else
        {
          int v16 = v15 & 1;
          if ((v13 & 2) == 0) {
            goto LABEL_27;
          }
        }
        if (!v16)
        {
LABEL_27:
          sub_1000CCB1C(v12);
          goto LABEL_7;
        }
        uint64_t v17 = sub_10003E1FC();
        if (v17)
        {
          if (v17 < 2300000) {
            goto LABEL_27;
          }
        }
        else
        {
          uint64_t v18 = sub_10003DFE8();
          if (!v19) {
            goto LABEL_27;
          }
          v23[3] = v18;
          v23[4] = v19;
          v23[1] = 875443249;
          v23[2] = 0xE400000000000000;
          uint64_t v20 = type metadata accessor for Locale();
          uint64_t v21 = v23[0];
          (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v23[0], 1, 1, v20);
          sub_100016790();
          unint64_t v22 = StringProtocol.compare<A>(_:options:range:locale:)();
          sub_10000D78C(v21, &qword_10035E160);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v22 >= 2) {
            goto LABEL_27;
          }
        }
      }
      sub_1000CC1E4(v12);
LABEL_7:
      swift_release();
      if (v9 == ++v11) {
        return swift_release_n();
      }
    }
  }
  __break(1u);
  return result;
}

void sub_1000CC1E4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v23 = *v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void (***)(char *, uint64_t))(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t aBlock = (void **)0xD00000000000001DLL;
  unint64_t v28 = 0x80000001002BCA50;
  swift_retain();
  uint64_t v10 = sub_1001F7514();
  uint64_t v12 = v11;
  swift_release();
  v13._uint64_t countAndFlagsBits = v10;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  id v14 = sub_1001F6558();
  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 ulog:40 message:v15];
  swift_bridgeObjectRelease();

  if (sub_100041298())
  {
    int v16 = *(void **)((char *)v2 + OBJC_IVAR____TtC17proximitycontrold12SharingProxy_dispatchQueue);
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = v17;
    v18[3] = a1;
    v18[4] = v23;
    uint64_t v31 = sub_1000CF3E8;
    uint64_t v32 = v18;
    unint64_t aBlock = _NSConcreteStackBlock;
    unint64_t v28 = 1107296256;
    uint64_t v29 = sub_10007A0AC;
    uint64_t v30 = &unk_100325BE8;
    uint64_t v19 = _Block_copy(&aBlock);
    swift_retain();
    id v20 = v16;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v26 = _swiftEmptyArrayStorage;
    sub_1000CF444((unint64_t *)&qword_100363D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A38C((uint64_t *)&unk_10035E800);
    sub_10000B010(qword_100363D60, (uint64_t *)&unk_10035E800);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);

    v25[1](v6, v4);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
    swift_release();
    swift_release();
  }
  else
  {
    id v21 = sub_1001F6558();
    uint64_t v25 = (void (**)(char *, uint64_t))String._bridgeToObjectiveC()();
    [v21 ulog:40 message:v25];

    unint64_t v22 = v25;
  }
}

void sub_1000CC650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    swift_retain();
    BOOL v7 = sub_1000CF06C(a2);
    swift_release();
    if (v7)
    {
      sub_10016ABE4(0xD000000000000012, (void *)0x80000001002BCAB0, 0, a3, (uint64_t)&off_100325868);
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      sub_100098724();
      uint64_t v9 = v8;
      swift_release();
      if (v9)
      {
        uint64_t v10 = *(void **)(v6 + OBJC_IVAR____TtC17proximitycontrold12SharingProxy_client);
        if (v10)
        {
          id v11 = v10;
          _StringGuts.grow(_:)(21);
          swift_bridgeObjectRelease();
          v12._uint64_t countAndFlagsBits = sub_1001F7514();
          String.append(_:)(v12);
          swift_bridgeObjectRelease();
          sub_10016ABE4(0xD000000000000013, (void *)0x80000001002BCA90, 0, a3, (uint64_t)&off_100325868);
          swift_bridgeObjectRelease();
          NSString v13 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          uint64_t v14 = swift_allocObject();
          swift_weakInit();
          NSString v15 = (void *)swift_allocObject();
          void v15[2] = v14;
          v15[3] = a2;
          v15[4] = a3;
          aBlock[4] = sub_1000CF438;
          aBlock[5] = v15;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100119FC4;
          aBlock[3] = &unk_100325C38;
          int v16 = _Block_copy(aBlock);
          swift_retain();
          swift_release();
          [v11 suppressDevice:v13 completion:v16];
          swift_release();
          _Block_release(v16);

          return;
        }
        swift_bridgeObjectRelease();
      }
    }
    swift_release();
  }
}

uint64_t sub_1000CC930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (a1)
    {
      swift_errorRetain();
      _StringGuts.grow(_:)(29);
      v8._object = (void *)0x80000001002BCAF0;
      v8._uint64_t countAndFlagsBits = 0xD000000000000017;
      String.append(_:)(v8);
      v9._uint64_t countAndFlagsBits = sub_1001F7514();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._uint64_t countAndFlagsBits = 8250;
      v10._object = (void *)0xE200000000000000;
      String.append(_:)(v10);
      sub_10000A38C((uint64_t *)&unk_100365D60);
      _print_unlocked<A, B>(_:_:)();
      sub_10016ABE4(0, (void *)0xE000000000000000, 0, a4, (uint64_t)&off_100325868);
      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
    else
    {
      _StringGuts.grow(_:)(33);
      swift_bridgeObjectRelease();
      v11._uint64_t countAndFlagsBits = sub_1001F7514();
      String.append(_:)(v11);
      swift_bridgeObjectRelease();
      sub_10016ABE4(0xD00000000000001FLL, (void *)0x80000001002BCAD0, 0, a4, (uint64_t)&off_100325868);
      swift_bridgeObjectRelease();
      swift_retain();
      sub_100121FA8(a3);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1000CCB1C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v22 = *v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  Swift::String v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t aBlock = (void **)0xD000000000000024;
  unint64_t v27 = 0x80000001002BC990;
  swift_retain();
  uint64_t v10 = sub_1001F7514();
  Swift::String v12 = v11;
  swift_release();
  v13._uint64_t countAndFlagsBits = v10;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  id v14 = sub_1001F6558();
  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 ulog:40 message:v15];
  swift_bridgeObjectRelease();

  int v16 = *(void **)((char *)v2 + OBJC_IVAR____TtC17proximitycontrold12SharingProxy_dispatchQueue);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = a1;
  v18[4] = v22;
  uint64_t v30 = sub_1000CF3C0;
  uint64_t v31 = v18;
  unint64_t aBlock = _NSConcreteStackBlock;
  unint64_t v27 = 1107296256;
  unint64_t v28 = sub_10007A0AC;
  uint64_t v29 = &unk_100325B48;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  id v20 = v16;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v25 = _swiftEmptyArrayStorage;
  sub_1000CF444((unint64_t *)&qword_100363D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A38C((uint64_t *)&unk_10035E800);
  sub_10000B010(qword_100363D60, (uint64_t *)&unk_10035E800);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v23);
  swift_release();
  return swift_release();
}

void sub_1000CCF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    swift_retain();
    BOOL v7 = sub_1000CF06C(a2);
    swift_release();
    if (v7)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      sub_100098724();
      uint64_t v9 = v8;
      swift_release();
      if (v9)
      {
        uint64_t v10 = *(void **)(v6 + OBJC_IVAR____TtC17proximitycontrold12SharingProxy_client);
        if (v10)
        {
          id v11 = v10;
          _StringGuts.grow(_:)(26);
          swift_bridgeObjectRelease();
          v12._uint64_t countAndFlagsBits = sub_1001F7514();
          String.append(_:)(v12);
          swift_bridgeObjectRelease();
          sub_10016ABE4(0xD000000000000018, (void *)0x80000001002BC9E0, 0, a3, (uint64_t)&off_100325868);
          swift_bridgeObjectRelease();
          NSString v13 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          uint64_t v14 = swift_allocObject();
          swift_weakInit();
          NSString v15 = (void *)swift_allocObject();
          void v15[2] = v14;
          v15[3] = a2;
          v15[4] = a3;
          aBlock[4] = sub_1000CF3D8;
          aBlock[5] = v15;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100119FC4;
          aBlock[3] = &unk_100325B98;
          int v16 = _Block_copy(aBlock);
          swift_retain();
          swift_release();
          [v11 stopSuppressingDevice:v13 completion:v16];
          swift_release();
          _Block_release(v16);

          return;
        }
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_10016ABE4(0xD000000000000016, (void *)0x80000001002BC9C0, 0, a3, (uint64_t)&off_100325868);
    }
    swift_release();
  }
}

uint64_t sub_1000CD1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (a1)
    {
      swift_errorRetain();
      _StringGuts.grow(_:)(37);
      v8._object = (void *)0x80000001002BCA30;
      v8._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
      String.append(_:)(v8);
      v9._uint64_t countAndFlagsBits = sub_1001F7514();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._uint64_t countAndFlagsBits = 8250;
      v10._object = (void *)0xE200000000000000;
      String.append(_:)(v10);
      sub_10000A38C((uint64_t *)&unk_100365D60);
      _print_unlocked<A, B>(_:_:)();
      sub_10016ABE4(0, (void *)0xE000000000000000, 0, a4, (uint64_t)&off_100325868);
      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
    else
    {
      _StringGuts.grow(_:)(39);
      swift_bridgeObjectRelease();
      v11._uint64_t countAndFlagsBits = sub_1001F7514();
      String.append(_:)(v11);
      swift_bridgeObjectRelease();
      sub_10016ABE4(0xD000000000000025, (void *)0x80000001002BCA00, 0, a4, (uint64_t)&off_100325868);
      swift_bridgeObjectRelease();
    }
    swift_retain();
    sub_10021278C(a3);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1000CD3D8(void *a1)
{
  if (a1)
  {
    uint64_t v2 = *v1;
    id v3 = a1;
    id v4 = sub_1001F6558();
    NSString v5 = String._bridgeToObjectiveC()();
    [v4 ulog:40 message:v5];

    [v3 setDispatchQueue:*(uint64_t *)((char *)v1 + OBJC_IVAR____TtC17proximitycontrold12SharingProxy_dispatchQueue)];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v2;
    uint64_t v30 = sub_1000CF200;
    uint64_t v31 = v6;
    uint64_t v26 = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    unint64_t v28 = sub_10007A0AC;
    uint64_t v29 = &unk_1003258C8;
    BOOL v7 = _Block_copy(&v26);
    swift_release();
    [v3 setInvalidationHandler:v7];
    _Block_release(v7);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v1;
    *(void *)(v8 + 24) = v2;
    uint64_t v30 = sub_1000CF264;
    uint64_t v31 = v8;
    uint64_t v26 = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    unint64_t v28 = sub_10007A0AC;
    uint64_t v29 = &unk_100325918;
    Swift::String v9 = _Block_copy(&v26);
    swift_retain();
    swift_release();
    [v3 setInterruptionHandler:v9];
    _Block_release(v9);
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = sub_1000CF2A4;
    uint64_t v31 = v10;
    uint64_t v26 = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    unint64_t v28 = sub_1000CE4CC;
    uint64_t v29 = &unk_100325968;
    Swift::String v11 = _Block_copy(&v26);
    swift_release();
    [v3 setDeviceEnteredImmediateHandler:v11];
    _Block_release(v11);
    uint64_t v12 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = sub_1000CF2C4;
    uint64_t v31 = v12;
    uint64_t v26 = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    unint64_t v28 = sub_1000CE4CC;
    uint64_t v29 = &unk_100325990;
    NSString v13 = _Block_copy(&v26);
    swift_release();
    [v3 setDeviceExitedImmediateHandler:v13];
    _Block_release(v13);
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = sub_1000CF2E4;
    uint64_t v31 = v14;
    uint64_t v26 = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    unint64_t v28 = sub_1000CE4CC;
    uint64_t v29 = &unk_1003259B8;
    NSString v15 = _Block_copy(&v26);
    swift_release();
    [v3 setDeviceEnteredNearbyHandler:v15];
    _Block_release(v15);
    uint64_t v16 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = sub_1000CF304;
    uint64_t v31 = v16;
    uint64_t v26 = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    unint64_t v28 = sub_1000CE4CC;
    uint64_t v29 = &unk_1003259E0;
    uint64_t v17 = _Block_copy(&v26);
    swift_release();
    [v3 setDeviceExitedNearbyHandler:v17];
    _Block_release(v17);
    uint64_t v18 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = sub_1000CF324;
    uint64_t v31 = v18;
    uint64_t v26 = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    unint64_t v28 = sub_1000CE4CC;
    uint64_t v29 = &unk_100325A08;
    uint64_t v19 = _Block_copy(&v26);
    swift_release();
    [v3 setDeviceWasSelectedHandler:v19];
    _Block_release(v19);
    uint64_t v20 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = sub_1000CF344;
    uint64_t v31 = v20;
    uint64_t v26 = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    unint64_t v28 = sub_1000CE4CC;
    uint64_t v29 = &unk_100325A30;
    id v21 = _Block_copy(&v26);
    swift_release();
    [v3 setDeviceWillTriggerHandler:v21];
    _Block_release(v21);
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = sub_1000CF364;
    uint64_t v31 = v22;
    uint64_t v26 = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    unint64_t v28 = sub_1000CE4CC;
    uint64_t v29 = &unk_100325A58;
    uint64_t v23 = _Block_copy(&v26);
    swift_release();
    [v3 setDeviceDidUntriggerHandler:v23];
    _Block_release(v23);
    uint64_t v24 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = sub_1000CF384;
    uint64_t v31 = v24;
    uint64_t v26 = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    unint64_t v28 = sub_1000CE640;
    uint64_t v29 = &unk_100325A80;
    uint64_t v25 = _Block_copy(&v26);
    swift_release();
    [v3 setDeviceWasDismissedHandlerEx:v25];
    _Block_release(v25);
  }
}

uint64_t sub_1000CDAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a1;
  uint64_t v30 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v33 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v29 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTimeInterval();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  NSString v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v26 - v16;
  sub_10016AE10(60, 0xD000000000000021, (void *)0x80000001002BC8F0, 0, a2, (uint64_t)&off_100325868);
  sub_10000A34C();
  uint64_t v27 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  void *v10 = 1;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchTimeInterval.seconds(_:), v7);
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  v18(v15, v11);
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = a2;
  aBlock[4] = sub_1000CF39C;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A0AC;
  aBlock[3] = &unk_100325AD0;
  id v21 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000CF444((unint64_t *)&qword_100363D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A38C((uint64_t *)&unk_10035E800);
  sub_10000B010(qword_100363D60, (uint64_t *)&unk_10035E800);
  uint64_t v23 = v29;
  uint64_t v22 = v30;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v24 = (void *)v27;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v22);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
  return ((uint64_t (*)(char *, uint64_t))v18)(v17, v26);
}

void sub_1000CDF80(uint64_t a1, uint64_t a2)
{
  if (swift_weakLoadStrong())
  {
    sub_10016AE10(60, 0x6176697463616552, (void *)0xEF2E2E2E676E6974, 0, a2, (uint64_t)&off_100325868);
    sub_1000CBD40();
    sub_1000CAA38();
    *(void *)(swift_allocObject() + 16) = a2;
    sub_10000A38C((uint64_t *)&unk_100363D00);
    sub_10000B010(&qword_100368130, (uint64_t *)&unk_100363D00);
    Publisher.sink(receiveCompletion:receiveValue:)();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    sub_10016AE10(90, 0xD000000000000021, (void *)0x80000001002BC920, 0, a2, (uint64_t)&off_100325868);
  }
}

void sub_1000CE114(void *a1, uint64_t a2)
{
  if (*a1)
  {
    swift_errorRetain();
    _StringGuts.grow(_:)(19);
    v3._object = (void *)0x80000001002BC950;
    v3._uint64_t countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v3);
    sub_10000A38C((uint64_t *)&unk_100365D60);
    _print_unlocked<A, B>(_:_:)();
    sub_10016AE10(90, 0, (void *)0xE000000000000000, 0, a2, (uint64_t)&off_100325868);
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else
  {
    sub_10016ABE4(0x6176697463616552, (void *)0xEB00000000646574, 0, a2, (uint64_t)&off_100325868);
  }
}

uint64_t sub_1000CE22C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  LOBYTE(v23) = a5 & 1;
  LOBYTE(v26) = a1;
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = sub_1000CE7F4();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  id v11 = sub_1001F6558();
  swift_bridgeObjectRetain();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 ulog:v12 message:0x20656C646E6148, 0xE700000000000000];
  swift_bridgeObjectRelease();

  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v21) = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  static Published.subscript.setter();
  uint64_t v13 = *(void *)(v6 + 16);
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1001115EC(v13, a2, a3);
  swift_bridgeObjectRelease();
  if (!v14) {
    return swift_bridgeObjectRelease();
  }
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = sub_1001F7514();
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 0x206874697720;
  v16._object = (void *)0xE600000000000000;
  String.append(_:)(v16);
  v17._uint64_t countAndFlagsBits = sub_1000CE7F4();
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  id v18 = sub_1001F6558();
  swift_bridgeObjectRetain();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v18 ulog:40 message:v19 "This is a test" 0x676E697461647055 0xE900000000000020 a2 a3 v21 a4 v23 a2 a3 v26];
  swift_bridgeObjectRelease();

  swift_getKeyPath();
  swift_getKeyPath();
  return static Published.subscript.setter();
}

uint64_t sub_1000CE4CC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;
  swift_retain();
  v1(v2, v4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000CE538(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000CE22C(a4, a1, a2, 0, 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000CE5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000CE22C(6, a1, a2, a3, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000CE640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  swift_retain();
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000CE6BC()
{
  uint64_t result = 0x6972746E55646964;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676972546C6C6977;
      break;
    case 2:
    case 3:
      uint64_t result = 0x74616964656D6D69;
      break;
    case 4:
      uint64_t result = 0x6E4579627261656ELL;
      break;
    case 5:
      uint64_t result = 0x784579627261656ELL;
      break;
    case 6:
      uint64_t result = 0x696D736944736177;
      break;
    case 7:
      uint64_t result = 0x63656C6553736177;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000CE7F4()
{
  uint64_t v1 = v0;
  sub_1000CEEB8(v0, (uint64_t)v19);
  sub_1000CEEB8((uint64_t)v19, (uint64_t)&v20);
  if (v21)
  {
    uint64_t v2 = 0;
    uint64_t v3 = (void *)0xE000000000000000;
  }
  else
  {
    strcpy((char *)v18, " reason=");
    BYTE1(v18[1]) = 0;
    WORD1(v18[1]) = 0;
    HIDWORD(v18[1]) = -402653184;
    uint64_t v4 = sub_1000CEB10(v20);
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    v8._uint64_t countAndFlagsBits = v5;
    v8._object = v7;
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    uint64_t v2 = v18[0];
    uint64_t v3 = (void *)v18[1];
  }
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  strcpy((char *)v18, "LegacyEvent ");
  BYTE5(v18[1]) = 0;
  HIWORD(v18[1]) = -5120;
  unint64_t v9 = 0xEC00000072656767;
  uint64_t v10 = 0x6972746E55646964;
  switch(*(unsigned char *)(v1 + 32))
  {
    case 1:
      uint64_t v10 = 0x676972546C6C6977;
      unint64_t v9 = 0xEB00000000726567;
      break;
    case 2:
      unint64_t v9 = 0xEE007265746E4565;
      goto LABEL_8;
    case 3:
      unint64_t v9 = 0xED00007469784565;
LABEL_8:
      uint64_t v10 = 0x74616964656D6D69;
      break;
    case 4:
      unint64_t v9 = 0xEB00000000726574;
      uint64_t v10 = 0x6E4579627261656ELL;
      break;
    case 5:
      unint64_t v9 = 0xEA00000000007469;
      uint64_t v10 = 0x784579627261656ELL;
      break;
    case 6:
      unint64_t v9 = 0xEC00000064657373;
      uint64_t v10 = 0x696D736944736177;
      break;
    case 7:
      unint64_t v9 = 0xEB00000000646574;
      uint64_t v10 = 0x63656C6553736177;
      break;
    default:
      break;
  }
  unint64_t v11 = v9;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 1029990688;
  v12._object = (void *)0xE400000000000000;
  String.append(_:)(v12);
  uint64_t v13 = *(void *)(v1 + 16);
  uint64_t v14 = *(void **)(v1 + 24);
  swift_bridgeObjectRetain();
  v15._uint64_t countAndFlagsBits = v13;
  v15._object = v14;
  String.append(_:)(v15);
  sub_1000CEF20(v1);
  v16._uint64_t countAndFlagsBits = v2;
  v16._object = v3;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  return v18[0];
}

uint64_t sub_1000CEA88()
{
  return sub_1000CE7F4();
}

uint64_t SFNotificationDismissReason.description.getter(uint64_t a1)
{
  uint64_t v1 = sub_1000CEB10(a1);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

__CFString *sub_1000CEB10(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  if ((unint64_t)(a1 - 1) > 3)
  {
    uint64_t v2 = @"?";
    uint64_t v3 = @"?";
  }
  else
  {
    uint64_t v2 = off_100325DB8[v1];
    uint64_t v3 = off_100325DD8[v1];
  }
  uint64_t v4 = v2;

  return v3;
}

uint64_t sub_1000CEB78()
{
  uint64_t v1 = sub_1000CEB10(*v0);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

uint64_t sub_1000CEBC8()
{
  return type metadata accessor for SharingProxy();
}

uint64_t type metadata accessor for SharingProxy()
{
  uint64_t result = qword_100364630;
  if (!qword_100364630) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000CEC1C()
{
  sub_100041B9C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

ValueMetadata *type metadata accessor for SharingProxyModel()
{
  return &type metadata for SharingProxyModel;
}

uint64_t destroy for SharingProxy.Event()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SharingProxy.Event(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SharingProxy.Event(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  return a1;
}

__n128 initializeWithTake for SharingProxy.Event(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SharingProxy.Event(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharingProxy.Event(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SharingProxy.Event(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharingProxy.Event()
{
  return &type metadata for SharingProxy.Event;
}

uint64_t sub_1000CEEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A38C(&qword_1003647E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CEF20(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000CEF50()
{
  return 24;
}

__n128 sub_1000CEF5C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

BOOL sub_1000CEF70()
{
  uint64_t v1 = v0;
  [*(id *)(v0 + 32) lock];
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 64);
  if (*(void *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v3 = sub_100269CBC(v7, v8);
    if (v4)
    {
      uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 8 * v3);
      swift_retain();
    }
    else
    {
      uint64_t v5 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  swift_release();
  [*(id *)(v1 + 32) unlock];
  swift_bridgeObjectRelease();
  return v5 != 0;
}

BOOL sub_1000CF06C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = a1;
  [*(id *)(v2 + 32) lock];
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  swift_beginAccess();
  uint64_t v8 = *(void *)(v2 + 64);
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_100269DA0((uint64_t)v7);
    if (v10)
    {
      uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
      swift_retain();
    }
    else
    {
      uint64_t v11 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  swift_release();
  [*(id *)(v2 + 32) unlock];
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  return v11 != 0;
}

uint64_t sub_1000CF1F0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000CF200()
{
  sub_10016ABE4(0xD00000000000001DLL, (void *)0x80000001002BC970, 0, *(void *)(v0 + 16), (uint64_t)&off_100325868);
}

uint64_t sub_1000CF24C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000CF25C()
{
  return swift_release();
}

uint64_t sub_1000CF264()
{
  return sub_1000CDAB4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000CF26C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000CF2A4(uint64_t a1, uint64_t a2)
{
  return sub_1000CE538(a1, a2, v2, 2);
}

uint64_t sub_1000CF2C4(uint64_t a1, uint64_t a2)
{
  return sub_1000CE538(a1, a2, v2, 3);
}

uint64_t sub_1000CF2E4(uint64_t a1, uint64_t a2)
{
  return sub_1000CE538(a1, a2, v2, 4);
}

uint64_t sub_1000CF304(uint64_t a1, uint64_t a2)
{
  return sub_1000CE538(a1, a2, v2, 5);
}

uint64_t sub_1000CF324(uint64_t a1, uint64_t a2)
{
  return sub_1000CE538(a1, a2, v2, 7);
}

uint64_t sub_1000CF344(uint64_t a1, uint64_t a2)
{
  return sub_1000CE538(a1, a2, v2, 1);
}

uint64_t sub_1000CF364(uint64_t a1, uint64_t a2)
{
  return sub_1000CE538(a1, a2, v2, 0);
}

uint64_t sub_1000CF384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000CE5BC(a1, a2, a3);
}

void sub_1000CF39C()
{
  sub_1000CDF80(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000CF3A4()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000CF3B4(void *a1)
{
  sub_1000CE114(a1, *(void *)(v1 + 16));
}

void sub_1000CF3C0()
{
  sub_1000CCF04(v0[2], v0[3], v0[4]);
}

uint64_t sub_1000CF3D8(uint64_t a1)
{
  return sub_1000CD1E4(a1, v1[2], v1[3], v1[4]);
}

void sub_1000CF3E8()
{
  sub_1000CC650(v0[2], v0[3], v0[4]);
}

uint64_t sub_1000CF3F8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000CF438(uint64_t a1)
{
  return sub_1000CC930(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1000CF444(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000CF48C(uint64_t *a1)
{
  return sub_1000CB874(a1);
}

uint64_t sub_1000CF494(uint64_t *a1)
{
  return sub_1000CB998(a1);
}

uint64_t sub_1000CF49C()
{
  uint64_t v1 = sub_10000A38C(&qword_100364800);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  uint64_t v5 = (v3 + 32) & ~v3;
  unint64_t v6 = (((((v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, (v6 + 11) & 0xFFFFFFFFFFFFFFF8 | 4, v3 | 7);
}

uint64_t sub_1000CF5C0@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_10000A38C(&qword_100364800) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t result = sub_10002FA28(*a1, *(uint64_t (**)(char *))(v2 + 16), *(void *)(v2 + 24), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8), *(void *)(v2 + v8), *(void **)(v2 + v8 + 8), *(void **)(v2 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_DWORD *)(v2 + ((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)));
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000CF6A8()
{
  return sub_1000CB9F8();
}

uint64_t sub_1000CF6B0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000CF6E8(uint64_t a1, uint64_t a2)
{
  sub_1000CBA50(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1000CF6F0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CF728(uint64_t a1, char a2)
{
  return sub_10020A358(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_1000CF734()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1000CF77C(uint64_t a1)
{
  sub_10014160C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void (**)(uint64_t, uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t getEnumTagSinglePayload for SharingProxy.EventType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SharingProxy.EventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000CF8E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharingProxy.EventType()
{
  return &type metadata for SharingProxy.EventType;
}

unint64_t sub_1000CF924()
{
  unint64_t result = qword_100364838;
  if (!qword_100364838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364838);
  }
  return result;
}

uint64_t sub_1000CF9F8()
{
  return 25705;
}

uint64_t sub_1000CFA04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1000CFA84(uint64_t a1)
{
  unint64_t v2 = sub_1000CFFAC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000CFAC0(uint64_t a1)
{
  unint64_t v2 = sub_1000CFFAC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000CFAFC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10000A38C(&qword_100364840);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D6E4(a1, a1[3]);
  sub_1000CFFAC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10000CC5C((uint64_t)a1);
  }
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = sub_10000CC5C((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_1000CFC74(void *a1)
{
  uint64_t v2 = sub_10000A38C(&qword_100364850);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D6E4(a1, a1[3]);
  sub_1000CFFAC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1000CFDAC()
{
  return 0xD00000000000003ALL;
}

unint64_t sub_1000CFDC8()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_10000A38C(&qword_1003645E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10028D430;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = v2;
  *(void *)(inited + 80) = v1;
  swift_bridgeObjectRetain();
  return sub_100268E80(inited);
}

void *initializeBufferWithCopyOfBuffer for HandoffLeaderStub(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HandoffLeaderStub(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for HandoffLeaderStub(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareableContentTransferRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShareableContentTransferRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareableContentTransferRequest()
{
  return &type metadata for ShareableContentTransferRequest;
}

unint64_t sub_1000CFFAC()
{
  unint64_t result = qword_100364848;
  if (!qword_100364848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364848);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ShareableContentTransferRequest.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000D009CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareableContentTransferRequest.CodingKeys()
{
  return &type metadata for ShareableContentTransferRequest.CodingKeys;
}

unint64_t sub_1000D00D8()
{
  unint64_t result = qword_100364858;
  if (!qword_100364858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364858);
  }
  return result;
}

unint64_t sub_1000D0130()
{
  unint64_t result = qword_100364860;
  if (!qword_100364860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364860);
  }
  return result;
}

unint64_t sub_1000D0188()
{
  unint64_t result = qword_100364868;
  if (!qword_100364868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364868);
  }
  return result;
}

id sub_1000D01E0()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold9PillView3____lazy_storage___primaryItem;
  unint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17proximitycontrold9PillView3____lazy_storage___primaryItem);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17proximitycontrold9PillView3____lazy_storage___primaryItem);
  }
  else
  {
    id v4 = objc_allocWithZone((Class)PLPillContentItem);
    swift_bridgeObjectRetain();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v6 = [v4 initWithText:v5 style:1];

    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    unint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1000D02A4(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = &v3[OBJC_IVAR____TtC17proximitycontrold9PillView3_subtitle];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  *(void *)&v3[OBJC_IVAR____TtC17proximitycontrold9PillView3____lazy_storage___primaryItem] = 0;
  uint64_t v8 = OBJC_IVAR____TtC17proximitycontrold9PillView3_leadingImageView;
  id v9 = objc_allocWithZone((Class)UIImageView);
  uint64_t v10 = v3;
  *(void *)&v3[v8] = [v9 initWithImage:0];
  *(void *)&v10[OBJC_IVAR____TtC17proximitycontrold9PillView3_subtitleTask] = 0;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, ObjectType, (uint64_t)&off_100325F40);
  uint64_t v11 = &v10[OBJC_IVAR____TtC17proximitycontrold9PillView3_title];
  *(void *)uint64_t v11 = a1;
  *((void *)v11 + 1) = a2;

  uint64_t v12 = *(void *)&v3[v8];
  v17.receiver = v10;
  v17.super_class = (Class)type metadata accessor for PillView3();
  id v13 = [super initWithLeadingAccessoryView:v12 trailingAccessoryView:0];
  LODWORD(v14) = 1144750080;
  [v13 setContentHuggingPriority:1 forAxis:v14];
  LODWORD(v15) = 1144750080;
  [v13 setContentHuggingPriority:0 forAxis:v15];
  [v13 setClipsToBounds:0];
  sub_1000D05AC(0);

  return v13;
}

id sub_1000D0418()
{
  id v1 = sub_1001F6810();
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 ulog:40 message:v2];

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for PillView3();
  return [super dealloc];
}

void sub_1000D05AC(char a1)
{
  NSString v2 = v1;
  id v4 = sub_1001F6810();
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 ulog:40 message:v5];

  sub_10000A38C(&qword_10035C280);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10028F670;
  *(void *)(v6 + 32) = sub_1000D01E0();
  id v7 = objc_allocWithZone((Class)PLPillContentItem);
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [v7 initWithText:v8 style:2];

  *(void *)(v6 + 40) = v9;
  specialized Array._endMutation()();
  sub_1000D07A8();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setCenterContentItems:isa animated:a1 & 1];
}

uint64_t type metadata accessor for PillView3()
{
  return self;
}

unint64_t sub_1000D07A8()
{
  unint64_t result = qword_10035C590[0];
  if (!qword_10035C590[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_10035C590);
  }
  return result;
}

void *sub_1000D07E8()
{
  type metadata accessor for SystemLockStateMonitor();
  uint64_t v0 = swift_allocObject();
  unint64_t result = sub_1000D0824();
  qword_1003AC7C8 = v0;
  return result;
}

void *sub_1000D0824()
{
  uint64_t v1 = *v0;
  sub_10000A38C(&qword_1003649A0);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  *(_DWORD *)(v2 + 24) = 0;
  v0[2] = v2;
  id v3 = [objc_allocWithZone((Class)CUSystemMonitor) init];
  v0[3] = v3;
  uint64_t v4 = qword_10035A628;
  id v5 = v3;
  if (v4 != -1) {
    swift_once();
  }
  [v5 setDispatchQueue:qword_1003ACB50];

  uint64_t v6 = (void *)v0[3];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v0;
  *(void *)(v7 + 24) = v1;
  id v18 = sub_1000D0E98;
  NSString v19 = (void *)v7;
  double v14 = _NSConcreteStackBlock;
  uint64_t v15 = 1107296256;
  Swift::String v16 = sub_10007A0AC;
  objc_super v17 = &unk_100326018;
  NSString v8 = _Block_copy(&v14);
  id v9 = v6;
  swift_retain();
  swift_release();
  [v9 setSystemLockStateChangedHandler:v8];
  _Block_release(v8);

  uint64_t v10 = (void *)v0[3];
  id v18 = sub_1000D0EB8;
  NSString v19 = v0;
  double v14 = _NSConcreteStackBlock;
  uint64_t v15 = 1107296256;
  Swift::String v16 = sub_10007A0AC;
  objc_super v17 = &unk_100326040;
  uint64_t v11 = _Block_copy(&v14);
  swift_retain();
  id v12 = v10;
  swift_release();
  [v12 activateWithCompletion:v11];
  _Block_release(v11);

  return v0;
}

uint64_t sub_1000D0A70(uint64_t a1, uint64_t a2)
{
  int v4 = [*(id *)(a1 + 24) systemLockState];
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = CUSystemLockState.description.getter(v4);
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  sub_10016ABE4(0xD00000000000001BLL, (void *)0x80000001002BCD30, 0, a2, (uint64_t)&off_100325F78);
  swift_bridgeObjectRelease();
  *(_DWORD *)(*(void *)(a1 + 16) + 24) = v4;
  swift_retain();
  sub_1001051DC();
  CurrentValueSubject.send(_:)();
  swift_release();
  return swift_release();
}

uint64_t sub_1000D0B78(uint64_t a1)
{
  *(_DWORD *)(*(void *)(a1 + 16) + 24) = [*(id *)(a1 + 24) systemLockState];
  swift_retain();
  sub_1001051DC();
  CurrentValueSubject.send(_:)();
  swift_release();
  return swift_release();
}

uint64_t sub_1000D0BEC()
{
  [*(id *)(v0 + 24) invalidate];
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1000D0C3C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1000B4664(a1, WitnessTable);
}

uint64_t CUSystemLockState.description.getter(int a1)
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x64656C6261736964;
      break;
    case 2:
      uint64_t result = 0x676E696B636F6CLL;
      break;
    case 3:
      uint64_t result = 0x64656B636F6CLL;
      break;
    case 4:
      uint64_t result = 0x64656B636F6C6E75;
      break;
    default:
      v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v3);
      swift_bridgeObjectRelease();
      uint64_t result = 0x6E776F6E6B6E7540;
      break;
  }
  return result;
}

uint64_t sub_1000D0DB8()
{
  return CUSystemLockState.description.getter(*v0);
}

uint64_t type metadata accessor for SystemLockStateMonitor()
{
  return self;
}

unint64_t sub_1000D0DE4(uint64_t a1)
{
  unint64_t result = sub_1000D0E0C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000D0E0C()
{
  unint64_t result = qword_100364998;
  if (!qword_100364998)
  {
    type metadata accessor for SystemLockStateMonitor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364998);
  }
  return result;
}

uint64_t sub_1000D0E60()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000D0E98()
{
  return sub_1000D0A70(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000D0EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000D0EB0()
{
  return swift_release();
}

uint64_t sub_1000D0EB8()
{
  return sub_1000D0B78(v0);
}

uint64_t sub_1000D0EC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  id v3 = sub_1001F5B3C();
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 ulog:40 message:v4];

  uint64_t v47 = (void *)v1[4];
  Swift::String v5 = (void *)v47[6];
  uint64_t v6 = *(void **)((char *)v5 + *(void *)((swift_isaMask & *v5) + 0x70));
  if (v6)
  {
    uint64_t v7 = v5;
    NSString v8 = String._bridgeToObjectiveC()();
    [v6 removeObjectForKey:v8];
  }
  uint64_t v9 = v1[3];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v10 = UUID.uuidString.getter();
  uint64_t v12 = v11;
  swift_release();
  id v13 = (uint64_t *)(v48 + OBJC_IVAR____TtC17proximitycontrold8Identity_overrideMediaRouteID);
  *id v13 = v10;
  v13[1] = v12;
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  *(unsigned char *)(v48 + OBJC_IVAR____TtC17proximitycontrold8Identity_enableModelBasedRangingCapabilities) = 1;
  swift_release();
  double v14 = (void *)v47[3];
  uint64_t v15 = *(void *)((swift_isaMask & *v14) + 0x80);
  if (*(void *)((char *)v14 + v15))
  {
    Swift::String v16 = v14;
  }
  else
  {
    objc_super v17 = v14;
    sub_1000FD938();
    sub_10000A38C((uint64_t *)&unk_10036BFE0);
    swift_allocObject();
    *(void *)((char *)v14 + v15) = CurrentValueSubject.init(_:)();
    swift_retain();
    swift_release();
    id v18 = *(void **)((char *)v17 + *(void *)((swift_isaMask & *v17) + 0x70));
    if (v18)
    {
      NSString v19 = String._bridgeToObjectiveC()();
      [v18 addObserver:v17 forKeyPath:v19 options:4 context:0];
    }
  }
  swift_retain();

  uint64_t v20 = v1[2];
  char v21 = (void *)swift_allocObject();
  void v21[2] = v20;
  v21[3] = v9;
  v21[4] = v2;
  swift_retain();
  swift_retain();
  sub_10000A38C((uint64_t *)&unk_10036BFE0);
  sub_1000D202C((unint64_t *)&unk_100363D30, (uint64_t *)&unk_10036BFE0);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v22 = (void *)v47[2];
  uint64_t v23 = *(void *)((swift_isaMask & *v22) + 0x80);
  if (*(void *)((char *)v22 + v23))
  {
    uint64_t v24 = v22;
  }
  else
  {
    uint64_t v25 = v22;
    sub_1001031A4();
    sub_10000A38C((uint64_t *)&unk_10036D250);
    swift_allocObject();
    *(void *)((char *)v22 + v23) = CurrentValueSubject.init(_:)();
    swift_retain();
    swift_release();
    uint64_t v26 = *(void **)((char *)v25 + *(void *)((swift_isaMask & *v25) + 0x70));
    if (v26)
    {
      NSString v27 = String._bridgeToObjectiveC()();
      [v26 addObserver:v25 forKeyPath:v27 options:4 context:0];
    }
  }
  swift_retain();

  swift_retain();
  sub_10000A38C((uint64_t *)&unk_10036D250);
  sub_1000D202C(&qword_100364A60, (uint64_t *)&unk_10036D250);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v28 = (void *)v47[4];
  uint64_t v29 = *(void *)((swift_isaMask & *v28) + 0x80);
  if (*(void *)((char *)v28 + v29))
  {
    uint64_t v30 = v28;
  }
  else
  {
    uint64_t v31 = v28;
    sub_1001031A4();
    swift_allocObject();
    *(void *)((char *)v28 + v29) = CurrentValueSubject.init(_:)();
    swift_retain();
    swift_release();
    uint64_t v32 = *(void **)((char *)v31 + *(void *)((swift_isaMask & *v31) + 0x70));
    if (v32)
    {
      NSString v33 = String._bridgeToObjectiveC()();
      [v32 addObserver:v31 forKeyPath:v33 options:4 context:0];
    }
  }
  swift_retain();

  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v34 = (void *)v47[5];
  uint64_t v35 = *(void *)((swift_isaMask & *v34) + 0x80);
  if (*(void *)((char *)v34 + v35))
  {
    uint64_t v36 = v34;
  }
  else
  {
    unint64_t v37 = v34;
    sub_1001031A4();
    swift_allocObject();
    *(void *)((char *)v34 + v35) = CurrentValueSubject.init(_:)();
    swift_retain();
    swift_release();
    uint64_t v38 = *(void **)((char *)v37 + *(void *)((swift_isaMask & *v37) + 0x70));
    if (v38)
    {
      NSString v39 = String._bridgeToObjectiveC()();
      [v38 addObserver:v37 forKeyPath:v39 options:4 context:0];
    }
  }
  swift_retain();

  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v40 = (void *)v47[6];
  uint64_t v41 = *(void *)((swift_isaMask & *v40) + 0x80);
  if (*(void *)((char *)v40 + v41))
  {
    uint64_t v42 = v40;
  }
  else
  {
    uint64_t v43 = v40;
    sub_100102CAC();
    sub_10000A38C(&qword_100364A68);
    swift_allocObject();
    *(void *)((char *)v40 + v41) = CurrentValueSubject.init(_:)();
    swift_retain();
    swift_release();
    uint64_t v44 = *(void **)((char *)v43 + *(void *)((swift_isaMask & *v43) + 0x70));
    if (v44)
    {
      NSString v45 = String._bridgeToObjectiveC()();
      [v44 addObserver:v43 forKeyPath:v45 options:4 context:0];
    }
  }
  swift_retain();

  swift_retain();
  sub_10000A38C(&qword_100364A68);
  sub_1000D202C(&qword_100364A70, &qword_100364A68);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1000D19A8(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = *a1;
  strcpy((char *)v11, "New enabled: ");
  HIWORD(v11[1]) = -4864;
  if (v6) {
    uint64_t v7 = 1702195828;
  }
  else {
    uint64_t v7 = 0x65736C6166;
  }
  if (v6) {
    unint64_t v8 = 0xE400000000000000;
  }
  else {
    unint64_t v8 = 0xE500000000000000;
  }
  unint64_t v9 = v8;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease();
  sub_10016ABE4(v11[0], (void *)v11[1], 0, a4, (uint64_t)&off_100326068);
  swift_bridgeObjectRelease();
  if (v6) {
    return sub_100121FA8(a3);
  }
  sub_10021278C(a3);

  return swift_release();
}

uint64_t sub_1000D1AB0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v3 = (void *)(v6 + OBJC_IVAR____TtC17proximitycontrold8Identity_overrideModel);
  *id v3 = v2;
  v3[1] = v1;
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v4 = v6 + OBJC_IVAR____TtC17proximitycontrold8Identity_cachedDeviceAsset;
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  return swift_release();
}

uint64_t sub_1000D1BD4(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v6 = (void *)(v8 + *a3);
  *uint64_t v6 = v5;
  v6[1] = v4;
  swift_bridgeObjectRetain();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D1C84(char *a1)
{
  char v1 = *a1;
  swift_retain();
  sub_1001BD544(v1);

  return swift_release();
}

uint64_t sub_1000D1CD4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MockHandoffDeviceServiceServer()
{
  return self;
}

uint64_t *sub_1000D1D48(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  type metadata accessor for MockHandoffDeviceServiceClient();
  swift_allocObject();
  v2[4] = (uint64_t)sub_100270938();
  v2[5] = (uint64_t)&_swiftEmptySetSingleton;
  type metadata accessor for Identity();
  swift_allocObject();
  v9[0] = sub_100099014(0, 0, 0, 0, 0, 0, 0);
  v9[1] = 0;
  v9[2] = 0;
  v9[3] = a2;
  char v10 = 1;
  type metadata accessor for HandoffDevice();
  swift_allocObject();
  swift_retain();
  uint64_t v6 = sub_10004525C(v9);
  v2[2] = a1;
  v2[3] = v6;
  swift_retain();
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  type metadata accessor for UUID();
  sub_1000D1F28();
  v7._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  sub_10016ABE4(0x6564203A74696E49, (void *)0xEF3D444965636976, 0, v5, (uint64_t)&off_100326068);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v2;
}

unint64_t sub_1000D1F28()
{
  unint64_t result = qword_10035F778;
  if (!qword_10035F778)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10035F778);
  }
  return result;
}

uint64_t sub_1000D1F88()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000D1FC8(unsigned __int8 *a1)
{
  return sub_1000D19A8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1000D1FD4(uint64_t *a1)
{
  return sub_1000D1BD4(a1, v1, &OBJC_IVAR____TtC17proximitycontrold8Identity_overrideColorCode);
}

uint64_t sub_1000D1FF8(uint64_t *a1)
{
  return sub_1000D1AB0(a1);
}

uint64_t sub_1000D2000(uint64_t *a1)
{
  return sub_1000D1BD4(a1, v1, &OBJC_IVAR____TtC17proximitycontrold8Identity_overrideName);
}

uint64_t sub_1000D2024(char *a1)
{
  return sub_1000D1C84(a1);
}

uint64_t sub_1000D202C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A3D0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_1000D207C(uint64_t a1)
{
  sub_10000D728(a1, (uint64_t)&v9, (uint64_t *)&unk_10036C0A0);
  if (v10)
  {
    sub_10000D7E8(&v9, (uint64_t)v11);
    uint64_t v2 = v12;
    uint64_t v1 = v13;
    sub_10000D6E4(v11, v12);
    uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)(v1 + 8) + 8))(v2);
    uint64_t v4 = sub_1000D215C();
    uint64_t v5 = sub_1001C8154(v4, v3);
    swift_bridgeObjectRelease();
    uint64_t v6 = *(void *)(v5 + 16);
    swift_release();
    BOOL v7 = v6 != 0;
    sub_10000CC5C((uint64_t)v11);
  }
  else
  {
    sub_10000D78C((uint64_t)&v9, (uint64_t *)&unk_10036C0A0);
    return 0;
  }
  return v7;
}

uint64_t sub_1000D215C()
{
  sub_10000A38C(&qword_10035D8E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10028FDD0;
  id v2 = [v0 identifier];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  id v7 = [v0 idsDeviceID];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
  }
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = v11;
  id v12 = [v0 mediaRemoteID];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    *(void *)(inited + 64) = v14;
    *(void *)(inited + 72) = v16;
    if (v6) {
      goto LABEL_9;
    }
LABEL_14:
    objc_super v17 = (char *)&_swiftEmptyArrayStorage;
    if (!v11) {
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  uint64_t v14 = 0;
  uint64_t v16 = 0;
  *(void *)(inited + 64) = 0;
  *(void *)(inited + 72) = 0;
  if (!v6) {
    goto LABEL_14;
  }
LABEL_9:
  swift_bridgeObjectRetain();
  objc_super v17 = sub_10008892C(0, 1, 1, (char *)&_swiftEmptyArrayStorage);
  unint64_t v19 = *((void *)v17 + 2);
  unint64_t v18 = *((void *)v17 + 3);
  if (v19 >= v18 >> 1) {
    objc_super v17 = sub_10008892C((char *)(v18 > 1), v19 + 1, 1, v17);
  }
  *((void *)v17 + 2) = v19 + 1;
  uint64_t v20 = &v17[16 * v19];
  *((void *)v20 + 4) = v4;
  *((void *)v20 + 5) = v6;
  if (v11)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      objc_super v17 = sub_10008892C(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v22 = *((void *)v17 + 2);
    unint64_t v21 = *((void *)v17 + 3);
    if (v22 >= v21 >> 1) {
      objc_super v17 = sub_10008892C((char *)(v21 > 1), v22 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v22 + 1;
    uint64_t v23 = &v17[16 * v22];
    *((void *)v23 + 4) = v9;
    *((void *)v23 + 5) = v11;
  }
LABEL_20:
  if (v16)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      objc_super v17 = sub_10008892C(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v25 = *((void *)v17 + 2);
    unint64_t v24 = *((void *)v17 + 3);
    if (v25 >= v24 >> 1) {
      objc_super v17 = sub_10008892C((char *)(v24 > 1), v25 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v25 + 1;
    uint64_t v26 = &v17[16 * v25];
    *((void *)v26 + 4) = v14;
    *((void *)v26 + 5) = v16;
  }
  swift_release();
  uint64_t v27 = sub_100038508((uint64_t)v17);
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_1000D2404()
{
  return sub_1000D215C();
}

void *sub_1000D2428(void *result)
{
  if (result)
  {
    id v2 = *v1;
    id v3 = result;
    LOBYTE(v2) = sub_1001A7E58(v2);

    return (void *)(v2 & 1);
  }
  return result;
}

BOOL sub_1000D246C(uint64_t a1)
{
  return sub_1000D207C(a1);
}

uint64_t sub_1000D2494(uint64_t a1)
{
  uint64_t v2 = *v1;
  sub_10000D728(a1, (uint64_t)&v7, &qword_10035B618);
  if (v8)
  {
    sub_10000D7E8(&v7, (uint64_t)v9);
    uint64_t v3 = v10;
    uint64_t v4 = v11;
    sub_10000D6E4(v9, v10);
    char v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 + 8) + 48))(v2, v3);
    sub_10000CC5C((uint64_t)v9);
  }
  else
  {
    sub_10000D78C((uint64_t)&v7, &qword_10035B618);
    char v5 = 0;
  }
  return v5 & 1;
}

void *sub_1000D2544(void *result)
{
  if (result)
  {
    id v1 = result;
    uint64_t v2 = sub_1000D215C();
    uint64_t v3 = sub_10024DF10();
    uint64_t v4 = sub_1001C8154(v3, v2);
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void *)(v4 + 16);

    swift_release();
    return (void *)(v5 != 0);
  }
  return result;
}

BOOL sub_1000D25BC()
{
  uint64_t v0 = sub_1000D215C();
  uint64_t v1 = sub_1000D215C();
  uint64_t v2 = sub_1001C8154(v1, v0);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 16);
  swift_release();
  return v3 != 0;
}

uint64_t getEnumTagSinglePayload for HapticEffect(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 4;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1000D26D4);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 2) {
    unsigned int v8 = v7 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 4) {
    return v8 - 3;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for HapticEffect(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1000D27BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_1000D27E4(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 2) {
    return v1 - 1;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1000D27F8(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HapticEffect()
{
  return &type metadata for HapticEffect;
}

uint64_t sub_1000D2818(char a1)
{
  switch(a1)
  {
    case 2:
      return 0x6C43656C62756F64;
    case 3:
      return 2036427888;
    case 4:
      return 1886352499;
  }
  v2._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  return 0x2D6B63696C63;
}

uint64_t sub_1000D28E0()
{
  return sub_1000D2818(*v0);
}

BOOL sub_1000D28E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  unsigned int v4 = v3 - 2;
  BOOL v5 = v3 == 2;
  BOOL v6 = v3 == 3;
  BOOL v7 = v3 == 4;
  BOOL v8 = ((v3 ^ v2) & 1) == 0;
  if (v4 < 3) {
    BOOL v8 = 0;
  }
  if (v2 == 4) {
    BOOL v8 = v7;
  }
  if (v2 == 3) {
    BOOL v8 = v6;
  }
  if (v2 == 2) {
    return v5;
  }
  else {
    return v8;
  }
}

unsigned char *storeEnumTagSinglePayload for HapticEffect.ClickIntensity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D2A04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HapticEffect.ClickIntensity()
{
  return &type metadata for HapticEffect.ClickIntensity;
}

unint64_t sub_1000D2A40()
{
  unint64_t result = qword_100364A78;
  if (!qword_100364A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364A78);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BluetoothState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D2B60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BluetoothState()
{
  return &type metadata for BluetoothState;
}

unint64_t sub_1000D2B9C()
{
  unint64_t result = qword_100364A80;
  if (!qword_100364A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364A80);
  }
  return result;
}

uint64_t sub_1000D2BF0()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E69747465736572;
      break;
    case 2:
      uint64_t result = 0x726F707075736E75;
      break;
    case 3:
      uint64_t result = 0x726F687475616E75;
      break;
    case 4:
      uint64_t result = 0x4F64657265776F70;
      break;
    case 5:
      uint64_t result = 0x4F64657265776F70;
      break;
    case 6:
      uint64_t result = 0x7463697274736572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000D2CFC(unint64_t a1)
{
  if (a1 < 0xB && ((0x43Fu >> a1) & 1) != 0) {
    return byte_100296D96[a1];
  }
  _StringGuts.grow(_:)(48);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 0xD000000000000018;
  v2._object = (void *)0x80000001002BCDC0;
  String.append(_:)(v2);
  id v3 = sub_1001EAAC0();
  swift_bridgeObjectRetain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 ulog:40 message:v4];
  swift_bridgeObjectRelease();

  return 0;
}

uint64_t sub_1000D2E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v7(a2, a3, a4);
  swift_release();

  return swift_unknownObjectRelease();
}

id sub_1000D2FB4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  NSString v4 = (void *)(a1 + *a3);
  if (*v4)
  {
    uint64_t v5 = v4[1];
    uint64_t v8[4] = *v4;
    v8[5] = v5;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    _OWORD v8[2] = sub_10007A0AC;
    void v8[3] = a4;
    unsigned int v6 = _Block_copy(v8);
    swift_retain();
    swift_release();
  }
  else
  {
    unsigned int v6 = 0;
  }

  return v6;
}

char *sub_1000D30F8(void *a1)
{
  Swift::String v2 = v1;
  swift_unknownObjectWeakInit();
  NSString v4 = &v1[OBJC_IVAR____TtC17proximitycontrold9XPCServer_interruptionHandler];
  *(void *)NSString v4 = 0;
  *((void *)v4 + 1) = 0;
  uint64_t v5 = &v1[OBJC_IVAR____TtC17proximitycontrold9XPCServer_invalidationHandler];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  uint64_t v6 = OBJC_IVAR____TtC17proximitycontrold9XPCServer_connections;
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000A38C(&qword_100364BD0);
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 24) = 0;
  id v9 = objc_allocWithZone((Class)NSLock);
  uint64_t v10 = v2;
  *(void *)(v8 + 32) = [v9 init];
  sub_10000A38C(&qword_100364BD8);
  swift_allocObject();
  uint64_t v11 = PassthroughSubject.init()();
  sub_10000A38C((uint64_t *)&unk_100364BE0);
  swift_allocObject();
  uint64_t v12 = PassthroughSubject.init()();
  swift_allocObject();
  uint64_t v13 = PassthroughSubject.init()();
  *(void *)(v8 + 40) = v11;
  *(void *)(v8 + 48) = v12;
  *(void *)(v8 + 56) = v13;
  *(void *)(v8 + 64) = &_swiftEmptyDictionarySingleton;
  *(void *)(v8 + 72) = 0;
  *(void *)(v8 + 16) = KeyPath;
  *(void *)&v2[v6] = v8;
  *(unsigned char *)(v8 + 24) = 0;
  *(void *)&v10[OBJC_IVAR____TtC17proximitycontrold9XPCServer_lockscreenXPCPublisher] = 0;
  uint64_t v14 = &v10[OBJC_IVAR____TtC17proximitycontrold9XPCServer_stateHandle];
  *(void *)uint64_t v14 = 0;
  v14[8] = 1;
  *(void *)&v10[OBJC_IVAR____TtC17proximitycontrold9XPCServer_tasks] = &_swiftEmptySetSingleton;
  *(void *)&v10[OBJC_IVAR____TtC17proximitycontrold9XPCServer_dispatchQueue] = a1;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v15 = objc_allocWithZone((Class)NSXPCListener);
  id v16 = a1;
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v18 = [v15 initWithMachServiceName:v17];

  *(void *)&v10[OBJC_IVAR____TtC17proximitycontrold9XPCServer_xpcLaunchingListener] = v18;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v19 = objc_allocWithZone((Class)NSXPCListener);
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v21 = [v19 initWithMachServiceName:v20];

  *(void *)&v10[OBJC_IVAR____TtC17proximitycontrold9XPCServer_xpcListener] = v21;
  v44.receiver = v10;
  v44.super_class = (Class)type metadata accessor for XPCServer();
  id v22 = [super init];
  uint64_t v23 = qword_10035A4E8;
  unint64_t v24 = (char *)v22;
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_1003AC5D0;
  type metadata accessor for XPCPublisher();
  uint64_t v26 = swift_allocObject();
  swift_retain();
  *(void *)&v24[OBJC_IVAR____TtC17proximitycontrold9XPCServer_lockscreenXPCPublisher] = sub_1000D534C(0xD00000000000002ELL, 0x80000001002B3640, v25, v26);
  swift_release();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v24;
  uint64_t v42 = sub_1000D5744;
  uint64_t v43 = v27;
  uint64_t v38 = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  uint64_t v40 = sub_1000D35D4;
  uint64_t v41 = &unk_100326568;
  uint64_t v28 = _Block_copy(&v38);
  uint64_t v29 = v24;
  swift_release();
  uint64_t v30 = os_state_add_handler();
  _Block_release(v28);
  uint64_t v31 = &v29[OBJC_IVAR____TtC17proximitycontrold9XPCServer_stateHandle];
  *(void *)uint64_t v31 = v30;
  v31[8] = 0;
  [*(id *)&v29[OBJC_IVAR____TtC17proximitycontrold9XPCServer_xpcLaunchingListener] setDelegate:v29];
  [*(id *)&v29[OBJC_IVAR____TtC17proximitycontrold9XPCServer_xpcListener] setDelegate:v29];
  uint64_t v32 = *(void **)&v29[OBJC_IVAR____TtC17proximitycontrold9XPCServer_dispatchQueue];
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v29;
  uint64_t v42 = sub_1000D5768;
  uint64_t v43 = v33;
  uint64_t v38 = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  uint64_t v40 = sub_1000D3738;
  uint64_t v41 = &unk_1003265B8;
  id v34 = _Block_copy(&v38);
  uint64_t v35 = v29;
  uint64_t v36 = v32;
  swift_release();
  xpc_set_event_stream_handler("com.apple.bluetooth.discovery", v36, v34);

  _Block_release(v34);
  return v35;
}

uint64_t sub_1000D35D4(uint64_t a1, uint64_t a2)
{
  id v3 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v4 = v3(a2);
  swift_release();
  return v4;
}

void sub_1000D3624(void *a1)
{
  if (xpc_dictionary_get_string(a1, _xpc_event_key_name))
  {
    uint64_t v1 = String.init(cString:)();
    id v3 = v2;
    _StringGuts.grow(_:)(29);
    swift_bridgeObjectRelease();
    v4._uint64_t countAndFlagsBits = v1;
    v4._object = v3;
    String.append(_:)(v4);
    swift_bridgeObjectRelease();
    id v5 = sub_1001F6834();
    swift_bridgeObjectRetain();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v5 ulog:40 message:v6];
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000D3738(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

id sub_1000D37C8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for XPCServer();
  return [super dealloc];
}

uint64_t type metadata accessor for XPCServer()
{
  return self;
}

uint64_t sub_1000D38E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = sub_1001F6834();
  NSString v14 = String._bridgeToObjectiveC()();
  [v13 ulog:40 message:v14];

  id v15 = *(void **)(v3 + OBJC_IVAR____TtC17proximitycontrold9XPCServer_dispatchQueue);
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  NSString v17 = (void *)swift_allocObject();
  v17[2] = v16;
  v17[3] = a1;
  v17[4] = a2;
  v17[5] = ObjectType;
  aBlock[4] = sub_1000D56C4;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A0AC;
  aBlock[3] = &unk_100326478;
  id v18 = _Block_copy(aBlock);
  id v19 = v15;
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  unint64_t v24 = _swiftEmptyArrayStorage;
  sub_10004D1C4();
  sub_10000A38C((uint64_t *)&unk_10035E800);
  sub_10000B010(qword_100363D60, (uint64_t *)&unk_10035E800);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v22);
  swift_release();
  return swift_release();
}

void sub_1000D3C1C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (char *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC17proximitycontrold9XPCServer_xpcLaunchingListener) resume];
    uint64_t v8 = OBJC_IVAR____TtC17proximitycontrold9XPCServer_xpcListener;
    id v9 = [*(id *)&v7[OBJC_IVAR____TtC17proximitycontrold9XPCServer_xpcListener] _xpcConnection];
    xpc_connection_set_non_launching();
    swift_unknownObjectRelease();
    [*(id *)&v7[v8] resume];
    uint64_t v10 = *(void *)&v7[OBJC_IVAR____TtC17proximitycontrold9XPCServer_lockscreenXPCPublisher];
    if (v10)
    {
      swift_retain();
      id v11 = sub_1001F64E8();
      NSString v12 = String._bridgeToObjectiveC()();
      [v11 ulog:40 message:v12];

      *(unsigned char *)(v10 + 48) = 1;
      id v13 = sub_1001F64E8();
      NSString v14 = String._bridgeToObjectiveC()();
      [v13 ulog:40 message:v14];
      swift_release();
    }
    sub_10016ABE4(0x6574617669746341, (void *)0xE900000000000064, 0, a4, (uint64_t)&off_100326300);
    ((void (*)(void))a2)(0);
  }
  else
  {
    sub_10001A050();
    swift_allocError();
    *(void *)uint64_t v15 = 0x666C6573206C696ELL;
    *(void *)(v15 + 8) = 0xE800000000000000;
    *(unsigned char *)(v15 + 16) = 9;
    a2();
    swift_errorRelease();
  }
}

uint64_t sub_1000D3EC0()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v14 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  NSString v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC17proximitycontrold9XPCServer_dispatchQueue);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1000D5644;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A0AC;
  aBlock[3] = &unk_100326400;
  id v9 = _Block_copy(aBlock);
  id v10 = v7;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v15 = _swiftEmptyArrayStorage;
  sub_10004D1C4();
  sub_10000A38C((uint64_t *)&unk_10035E800);
  sub_10000B010(qword_100363D60, (uint64_t *)&unk_10035E800);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v13);
  swift_release();
  return swift_release();
}

void sub_1000D4178()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC17proximitycontrold9XPCServer_xpcLaunchingListener);

    [v2 invalidate];
  }
  swift_beginAccess();
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    id v5 = *(id *)(v3 + OBJC_IVAR____TtC17proximitycontrold9XPCServer_xpcListener);

    [v5 invalidate];
  }
  swift_beginAccess();
  uint64_t v6 = swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    uint64_t v8 = *(void (**)(void))(v6 + OBJC_IVAR____TtC17proximitycontrold9XPCServer_invalidationHandler);
    sub_1000766BC((uint64_t)v8);

    if (v8)
    {
      v8();
      sub_10000F088((uint64_t)v8);
    }
  }
}

uint64_t sub_1000D42E8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease();
  id v7 = [a1 description:0xD000000000000031, 0x80000001002BCF00];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = v9;

  v11._uint64_t countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._object = (void *)0x80000001002BCF40;
  v12._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v12);
  id v13 = [a2 description];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  v17._uint64_t countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  id v18 = sub_1001F6834();
  swift_bridgeObjectRetain();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v18 ulog:40 message:v19];
  swift_bridgeObjectRelease();

  sub_1000160DC();
  id v20 = *(id *)&v3[OBJC_IVAR____TtC17proximitycontrold9XPCServer_xpcListener];
  LOBYTE(v18) = static NSObject.== infix(_:_:)();

  if ((v18 & 1) != 0
    || (id v21 = *(id *)&v3[OBJC_IVAR____TtC17proximitycontrold9XPCServer_xpcLaunchingListener],
        char v22 = static NSObject.== infix(_:_:)(),
        v21,
        (v22 & 1) != 0))
  {
    if (sub_1000B72CC(1, a2))
    {
      id v23 = objc_allocWithZone((Class)type metadata accessor for XPCConnection());
      id v24 = a2;
      id v25 = sub_1000484D8(v24, v3);
      uint64_t v26 = self;
      id v27 = [v26 interfaceWithProtocol:&OBJC_PROTOCOL___PCServerXPCInterface];
      [v24 setExportedInterface:v27];

      [v24 setExportedObject:v25];
      id v28 = [v26 interfaceWithProtocol:&OBJC_PROTOCOL___PCClientXPCInterface];
      [v24 setRemoteObjectInterface:v28];

      uint64_t v29 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v30 = (void *)swift_allocObject();
      v30[2] = v24;
      v30[3] = v29;
      v30[4] = v25;
      v30[5] = ObjectType;
      uint64_t v60 = sub_1000D55C8;
      uint64_t v61 = v30;
      uint64_t v56 = _NSConcreteStackBlock;
      unint64_t v57 = 1107296256;
      uint64_t v58 = sub_10007A0AC;
      id v59 = &unk_100326388;
      uint64_t v31 = _Block_copy(&v56);
      id v32 = v24;
      id v33 = v25;
      swift_release();
      [v32 setInterruptionHandler:v31];
      _Block_release(v31);
      uint64_t v34 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v35 = (void *)swift_allocObject();
      v35[2] = v32;
      id v35[3] = v34;
      v35[4] = v33;
      void v35[5] = ObjectType;
      uint64_t v60 = sub_1000D5638;
      uint64_t v61 = v35;
      uint64_t v56 = _NSConcreteStackBlock;
      unint64_t v57 = 1107296256;
      uint64_t v58 = sub_10007A0AC;
      id v59 = &unk_1003263D8;
      uint64_t v36 = _Block_copy(&v56);
      id v37 = v32;
      uint64_t v38 = (char *)v33;
      swift_release();
      [v37 setInvalidationHandler:v36];
      _Block_release(v36);
      uint64_t v56 = 0;
      unint64_t v57 = 0xE000000000000000;
      _StringGuts.grow(_:)(22);
      swift_bridgeObjectRelease();
      id v39 = [v37 description:0xD000000000000014, 0x80000001002BCFD0];
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v42 = v41;

      v43._uint64_t countAndFlagsBits = v40;
      v43._object = v42;
      String.append(_:)(v43);
      swift_bridgeObjectRelease();
      id v44 = sub_1001F6834();
      swift_bridgeObjectRetain();
      NSString v45 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v44 ulog:40 message:v45];
      swift_bridgeObjectRelease();

      sub_1000D4CA4(v38);
      return 1;
    }
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    id v47 = sub_1001F6834();
    NSString v48 = String._bridgeToObjectiveC()();
    [v47 ulog:v48 message:0, 0xE000000000000000];
  }
  else
  {
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease();
    id v49 = [a1 description:0xD00000000000002ELL, 0x80000001002BCF60];
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v52 = v51;

    v53._uint64_t countAndFlagsBits = v50;
    v53._object = v52;
    String.append(_:)(v53);
    swift_bridgeObjectRelease();
    id v54 = sub_1001F6834();
    swift_bridgeObjectRetain();
    NSString v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v54 ulog:60 message:v55];
    swift_bridgeObjectRelease();
  }
  return 0;
}

void sub_1000D4978(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  id v7 = [a1 description];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = v9;

  v11._uint64_t countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  sub_10016AE10(90, 0xD000000000000020, (void *)0x80000001002BD010, 0, a4, (uint64_t)&off_100326300);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v13 = (void *)Strong;
    id v14 = sub_1001F6834();
    NSString v15 = String._bridgeToObjectiveC()();
    [v14 ulog:40 message:v15];

    sub_100048890();
    swift_retain();
    uint64_t v16 = sub_100123954((uint64_t)[a3 hash]);

    swift_release();
  }
}

void sub_1000D4B10(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  id v7 = [a1 description];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = v9;

  v11._uint64_t countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  sub_10016ABE4(0xD00000000000001CLL, (void *)0x80000001002BCFF0, 0, a4, (uint64_t)&off_100326300);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v13 = (void *)Strong;
    id v14 = sub_1001F6834();
    NSString v15 = String._bridgeToObjectiveC()();
    [v14 ulog:40 message:v15];

    sub_100048890();
    swift_retain();
    uint64_t v16 = sub_100123954((uint64_t)[a3 hash]);

    swift_release();
  }
}

id sub_1000D4CA4(char *a1)
{
  id v2 = [a1 description:0x6E69747065636341, 0xEA00000000002067];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v5 = v4;

  v6._uint64_t countAndFlagsBits = v3;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  id v7 = sub_1001F6834();
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 ulog:40 message:v8];
  swift_bridgeObjectRelease();

  swift_retain();
  sub_100121FE4(a1);
  swift_release();
  id v9 = *(void **)&a1[OBJC_IVAR____TtC17proximitycontrold13XPCConnection_internalCnx];

  return [v9 resume];
}

uint64_t sub_1000D4EA8()
{
  uint64_t v1 = v0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    id v4 = [Strong description];

    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v7 = v6;
  }
  else
  {
    unint64_t v7 = 0xEE006E6F69746163;
    uint64_t v5 = 0x696C707041206F4ELL;
  }
  NSString v8 = sub_10008892C(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v10 = *((void *)v8 + 2);
  unint64_t v9 = *((void *)v8 + 3);
  int64_t v11 = v9 >> 1;
  unint64_t v12 = v10 + 1;
  if (v9 >> 1 <= v10)
  {
    NSString v8 = sub_10008892C((char *)(v9 > 1), v10 + 1, 1, v8);
    unint64_t v9 = *((void *)v8 + 3);
    int64_t v11 = v9 >> 1;
  }
  *((void *)v8 + 2) = v12;
  id v13 = &v8[16 * v10];
  *((void *)v13 + 4) = v5;
  *((void *)v13 + 5) = v7;
  if (v11 < (uint64_t)(v10 + 2)) {
    NSString v8 = sub_10008892C((char *)(v9 > 1), v10 + 2, 1, v8);
  }
  *((void *)v8 + 2) = v10 + 2;
  id v14 = &v8[16 * v12];
  *((void *)v14 + 4) = 10;
  *((void *)v14 + 5) = 0xE100000000000000;
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  uint64_t v15 = OBJC_IVAR____TtC17proximitycontrold9XPCServer_connections;
  uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold9XPCServer_connections);
  Swift::String v17 = *(void **)(v16 + 32);
  swift_retain();
  [v17 lock];
  swift_beginAccess();
  uint64_t v18 = swift_bridgeObjectRetain();
  unint64_t v19 = (unint64_t)sub_1000F0808(v18);
  swift_bridgeObjectRelease();
  [*(id *)(v16 + 32) unlock];
  swift_release();
  if ((v19 & 0x8000000000000000) != 0 || (v19 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
  }
  else
  {
    uint64_t v20 = *(void *)(v19 + 16);
  }
  swift_release();
  v21._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 1027416105;
  v22._object = (void *)0xE400000000000000;
  String.append(_:)(v22);
  unint64_t v24 = *((void *)v8 + 2);
  unint64_t v23 = *((void *)v8 + 3);
  if (v24 >= v23 >> 1) {
    NSString v8 = sub_10008892C((char *)(v23 > 1), v24 + 1, 1, v8);
  }
  *((void *)v8 + 2) = v24 + 1;
  id v25 = &v8[16 * v24];
  *((void *)v25 + 4) = 0xD000000000000014;
  *((void *)v25 + 5) = 0x80000001002BCEE0;
  uint64_t v26 = *(void *)(v1 + v15);
  id v27 = *(void **)(v26 + 32);
  swift_retain();
  [v27 lock:v20];
  swift_beginAccess();
  uint64_t v28 = swift_bridgeObjectRetain();
  unint64_t v29 = (unint64_t)sub_1000F0808(v28);
  swift_bridgeObjectRelease();
  [*(id *)(v26 + 32) unlock];
  swift_release();
  if ((v29 & 0x8000000000000000) == 0 && (v29 & 0x4000000000000000) == 0)
  {
    uint64_t v30 = *(void *)(v29 + 16);
    uint64_t result = swift_retain();
    if (v30) {
      goto LABEL_16;
    }
LABEL_27:
    swift_release_n();
    swift_bridgeObjectRetain();
    sub_10000A38C((uint64_t *)&unk_100367D40);
    sub_10000B010((unint64_t *)&qword_10035E7F0, (uint64_t *)&unk_100367D40);
    uint64_t v43 = BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease_n();
    return v43;
  }
  swift_retain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v30 = result;
  if (!result) {
    goto LABEL_27;
  }
LABEL_16:
  if (v30 >= 1)
  {
    uint64_t v32 = 0;
    do
    {
      if ((v29 & 0xC000000000000001) != 0) {
        id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v33 = *(id *)(v29 + 8 * v32 + 32);
      }
      uint64_t v34 = v33;
      id v35 = [v33 description:2108704];
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v38 = v37;

      v39._uint64_t countAndFlagsBits = v36;
      v39._object = v38;
      String.append(_:)(v39);
      swift_bridgeObjectRelease();
      unint64_t v41 = *((void *)v8 + 2);
      unint64_t v40 = *((void *)v8 + 3);
      if (v41 >= v40 >> 1) {
        NSString v8 = sub_10008892C((char *)(v40 > 1), v41 + 1, 1, v8);
      }
      ++v32;
      *((void *)v8 + 2) = v41 + 1;
      uint64_t v42 = &v8[16 * v41];
      *((void *)v42 + 4) = v44;
      *((void *)v42 + 5) = 0xE300000000000000;
    }
    while (v30 != v32);
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000D534C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(a4 + 48) = 0;
  *(void *)(a4 + 40) = &off_1003205C0;
  swift_unknownObjectWeakAssign();
  *(void *)(a4 + 16) = a1;
  *(void *)(a4 + 24) = a2;
  uint64_t v7 = qword_10035A628;
  swift_bridgeObjectRetain();
  if (v7 != -1) {
    swift_once();
  }
  NSString v8 = (void *)qword_1003ACB50;
  String.utf8CString.getter();
  id v9 = v8;
  swift_bridgeObjectRelease();
  id v10 = (id)xpc_event_publisher_create();

  uint64_t result = swift_release();
  if (v10)
  {
    *(void *)(a4 + 56) = v10;
    Swift::String v21 = sub_1000D5A80;
    uint64_t v22 = a4;
    Swift::String v17 = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    unint64_t v19 = sub_1000D2E2C;
    uint64_t v20 = &unk_1003265E0;
    unint64_t v12 = _Block_copy(&v17);
    id v13 = v10;
    swift_retain();
    swift_release();
    xpc_event_publisher_set_handler();
    _Block_release(v12);

    id v14 = *(void **)(a4 + 56);
    Swift::String v21 = sub_1000D5A88;
    uint64_t v22 = a4;
    Swift::String v17 = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    unint64_t v19 = sub_1001A82D0;
    uint64_t v20 = &unk_100326608;
    uint64_t v15 = _Block_copy(&v17);
    swift_retain();
    id v16 = v14;
    swift_release();
    xpc_event_publisher_set_error_handler();
    swift_release();
    _Block_release(v15);

    return a4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000D558C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000D55C8()
{
  sub_1000D4978(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1000D55D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000D55E4()
{
  return swift_release();
}

uint64_t sub_1000D55F0()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1000D5638()
{
  sub_1000D4B10(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

void sub_1000D5644()
{
}

uint64_t sub_1000D564C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D5684()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1000D56C4()
{
  sub_1000D3C1C(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1000D56D0()
{
  return sub_100255BC8(*(void *)(v0 + 16));
}

id sub_1000D56D8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 hash];
  *a2 = result;
  return result;
}

uint64_t sub_1000D570C()
{
  return _swift_deallocObject(v0, 24, 7);
}

char *sub_1000D5744()
{
  return sub_1000D5770();
}

void sub_1000D5768(void *a1)
{
}

char *sub_1000D5770()
{
  id v1 = [v0 description];
  id v19 = 0;
  id v2 = [self dataWithPropertyList:v1 format:200 options:0 error:&v19];

  id v3 = v19;
  if (v2)
  {
    uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;

    unint64_t v7 = v6 >> 62;
    uint64_t v8 = 0;
    switch(v6 >> 62)
    {
      case 1uLL:
        LODWORD(v8) = HIDWORD(v4) - v4;
        if (__OFSUB__(HIDWORD(v4), v4)) {
          goto LABEL_30;
        }
        uint64_t v8 = (int)v8;
LABEL_8:
        if (__OFADD__(v8, 200))
        {
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
        }
        id v14 = (char *)calloc(v8 + 200, 1uLL);
        id v10 = v14;
        if (v14)
        {
          *(_DWORD *)id v14 = 1;
          switch((int)v7)
          {
            case 1:
              LODWORD(v17) = HIDWORD(v4) - v4;
              if (__OFSUB__(HIDWORD(v4), v4)) {
                goto LABEL_32;
              }
              unint64_t v17 = (int)v17;
LABEL_19:
              if ((v17 & 0x8000000000000000) != 0 || HIDWORD(v17))
              {
                _assertionFailure(_:_:file:line:flags:)();
                __break(1u);
                JUMPOUT(0x1000D5A60);
              }
              *((_DWORD *)v14 + 1) = v17;
              strcpy(v14 + 136, "ProximityControl state");
              if (v7 != 2) {
                goto LABEL_25;
              }
              if (__OFSUB__(*(void *)(v4 + 24), *(void *)(v4 + 16)))
              {
                __break(1u);
LABEL_25:
                if (__OFSUB__(HIDWORD(v4), v4)) {
                  goto LABEL_33;
                }
              }
LABEL_26:
              Data.copyBytes(to:count:)();
              break;
            case 2:
              uint64_t v16 = *(void *)(v4 + 16);
              uint64_t v15 = *(void *)(v4 + 24);
              BOOL v13 = __OFSUB__(v15, v16);
              unint64_t v17 = v15 - v16;
              if (!v13) {
                goto LABEL_19;
              }
              __break(1u);
LABEL_15:
              *((_DWORD *)v14 + 1) = 0;
LABEL_16:
              strcpy(v14 + 136, "ProximityControl state");
              goto LABEL_26;
            case 3:
              goto LABEL_15;
            default:
              *((_DWORD *)v14 + 1) = BYTE6(v6);
              goto LABEL_16;
          }
        }
        sub_10000DBEC(v4, v6);
        break;
      case 2uLL:
        uint64_t v12 = *(void *)(v4 + 16);
        uint64_t v11 = *(void *)(v4 + 24);
        BOOL v13 = __OFSUB__(v11, v12);
        uint64_t v8 = v11 - v12;
        if (!v13) {
          goto LABEL_8;
        }
        goto LABEL_31;
      case 3uLL:
        goto LABEL_8;
      default:
        uint64_t v8 = BYTE6(v6);
        goto LABEL_8;
    }
  }
  else
  {
    id v9 = v3;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    return 0;
  }
  return v10;
}

void sub_1000D5A80(int a1, uint64_t a2)
{
}

uint64_t sub_1000D5A88(uint64_t a1)
{
  return sub_100023750(a1, v1);
}

uint64_t sub_1000D5AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A38C(&qword_10036C090);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  unint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v9 = (char *)&v24 - v8;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void **)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  id v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v24 - v15;
  sub_1000D6178(a1, (uint64_t)v9);
  unint64_t v17 = (unsigned int (*)(char *, uint64_t, uint64_t))v11[6];
  if (v17(v9, 1, v10) == 1)
  {
    uint64_t v18 = (uint64_t)v9;
  }
  else
  {
    id v19 = v9;
    uint64_t v20 = (void (*)(char *, char *, uint64_t))v11[4];
    v20(v16, v19, v10);
    sub_1000D6178(a2, (uint64_t)v7);
    if (v17(v7, 1, v10) != 1)
    {
      v20(v14, v7, v10);
      sub_1000D61E0((unint64_t *)&qword_10036C0C0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = (void (*)(char *, uint64_t))v11[1];
      v22(v14, v10);
      v22(v16, v10);
      return v21 & 1;
    }
    ((void (*)(char *, uint64_t))v11[1])(v16, v10);
    uint64_t v18 = (uint64_t)v7;
  }
  sub_10000DB78(v18);
  char v21 = 0;
  return v21 & 1;
}

uint64_t sub_1000D5D78(void *a1)
{
  id v2 = v1;
  uint64_t v4 = sub_10000A38C(&qword_10036C090);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  unint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v9 = (char *)&v31 - v8;
  id v10 = [v2 callUUID];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  id v15 = [a1 callUUID];
  if (v15
    && (v16 = v15, uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(), v19 = v18, v16, v14)
    && v19)
  {
    if (v12 == v17 && v14 == v19)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v20 = 1;
      return v20 & 1;
    }
    char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v30)
    {
      char v20 = 1;
      return v20 & 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v21 = [v2 conversationUUID];
  if (v21)
  {
    uint64_t v22 = v21;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v23 = type metadata accessor for UUID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 0, 1, v23);
  }
  else
  {
    uint64_t v24 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 1, 1, v24);
  }
  id v25 = [a1 conversationUUID];
  if (v25)
  {
    uint64_t v26 = v25;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v27 = type metadata accessor for UUID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v7, 0, 1, v27);
  }
  else
  {
    uint64_t v28 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v7, 1, 1, v28);
  }
  char v20 = sub_1000D5AE8((uint64_t)v9, (uint64_t)v7);
  sub_10000DB78((uint64_t)v7);
  sub_10000DB78((uint64_t)v9);
  return v20 & 1;
}

uint64_t sub_1000D6068()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000D60F8()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1000D6178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A38C(&qword_10036C090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D61E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PCInteractionDirection.description.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 1701736302;
    case 1:
      return 1752397168;
    case 2:
      return 1819047280;
  }
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

uint64_t sub_1000D6304()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000D6364()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1000D63B4()
{
  return PCInteractionDirection.description.getter(*v0);
}

unint64_t sub_1000D63BC()
{
  unint64_t result = qword_100364BF8;
  if (!qword_100364BF8)
  {
    type metadata accessor for PCInteractionDirection(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364BF8);
  }
  return result;
}

uint64_t destroy for CardEvent(uint64_t a1)
{
  return sub_100020430(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
}

uint64_t initializeWithCopy for CardEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 56);
  sub_10001FA00(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  return a1;
}

uint64_t assignWithCopy for CardEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 56);
  sub_10001FA00(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  unsigned __int8 v18 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v10;
  sub_100020430(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

__n128 initializeWithTake for HomeAccessoryViewEvent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CardEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 48);
  char v4 = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v3;
  unsigned __int8 v13 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v4;
  sub_100020430(v5, v7, v6, v8, v9, v10, v11, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for CardEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3C && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 60);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 56) >> 5) & 0xFFFFFFC7 | (8 * ((*(unsigned __int8 *)(a1 + 56) >> 2) & 7))) ^ 0x3F;
  if (v3 >= 0x3B) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CardEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3B)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 60;
    if (a3 >= 0x3C) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3C) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2)
    {
      *(void *)(result + 48) = 0;
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)__n128 result = 0u;
      *(unsigned char *)(result + 56) = 4 * (((-a2 >> 3) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1000D66A8(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 56);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 5;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1000D66C8(uint64_t result)
{
  *(unsigned char *)(result + 56) &= 0x1Fu;
  return result;
}

uint64_t sub_1000D66D8(uint64_t result, unsigned int a2)
{
  if (a2 < 4)
  {
    *(unsigned char *)(result + 56) = *(unsigned char *)(result + 56) & 3 | (32 * a2);
  }
  else
  {
    *(void *)__n128 result = a2 - 4;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(unsigned char *)(result + 56) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardEvent()
{
  return &type metadata for CardEvent;
}

uint64_t getEnumTagSinglePayload for CardEffect(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB)
  {
    unsigned int v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 5;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1000D67E0);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 3) {
    unsigned int v8 = v7 - 2;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 3) {
    unsigned int v9 = v8 - 2;
  }
  else {
    unsigned int v9 = 0;
  }
  if (v9 >= 2) {
    return v9 - 1;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for CardEffect(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFB) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v7 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1000D68C8);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_1000D68F0(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    unsigned int v2 = v1 - 2;
  }
  else {
    unsigned int v2 = 0;
  }
  if (v2 >= 3) {
    return v2 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1000D6910(unsigned char *result, int a2)
{
  if (a2) {
    *__n128 result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardEffect()
{
  return &type metadata for CardEffect;
}

uint64_t sub_1000D6930(char a1)
{
  if (a1 == 5) {
    return 0x7373696D736964;
  }
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = sub_10023DBE8(a1);
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 10528;
  v4._object = (void *)0xE200000000000000;
  String.append(_:)(v4);
  return 0xD000000000000012;
}

uint64_t sub_1000D69E8(void *a1, int a2)
{
  int v18 = a2;
  int v19 = a2;
  uint64_t v3 = sub_10000A38C(&qword_100364D10);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  __chkstk_darwin(v3);
  unsigned int v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A38C(&qword_100364D18);
  uint64_t v15 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unsigned int v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A38C(&qword_100364D20);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  long long v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D6E4(a1, a1[3]);
  sub_1000D9CC0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (v19 == 5)
  {
    char v22 = 1;
    sub_1000D9D14();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v21 = 0;
    sub_1000D9D68();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    char v20 = v18;
    sub_1000D9E10();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1000D6CF0()
{
  if (*v0) {
    return 0x7373696D736964;
  }
  else {
    return 0x746E6573657270;
  }
}

uint64_t sub_1000D6D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000D8550(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000D6D4C(uint64_t a1)
{
  unint64_t v2 = sub_1000D9CC0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000D6D88(uint64_t a1)
{
  unint64_t v2 = sub_1000D9CC0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000D6DC4(uint64_t a1)
{
  unint64_t v2 = sub_1000D9D14();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000D6E00(uint64_t a1)
{
  unint64_t v2 = sub_1000D9D14();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000D6E44()
{
  return 12383;
}

uint64_t sub_1000D6E54(uint64_t a1)
{
  unint64_t v2 = sub_1000D9D68();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000D6E90(uint64_t a1)
{
  unint64_t v2 = sub_1000D9D68();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000D6ECC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000D8644(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1000D6EF8(void *a1)
{
  return sub_1000D69E8(a1, *v1);
}

uint64_t sub_1000D6F14()
{
  return sub_1000D6930(*v0);
}

BOOL sub_1000D6F1C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL result = v3 == 5 && v2 == 5;
  if (v2 != 5 && v3 != 5)
  {
    if (v2 == 4)
    {
      if (v3 != 4) {
        return 0;
      }
    }
    else if (v2 == 3)
    {
      if (v3 != 3) {
        return 0;
      }
    }
    else if (v2 != v3 || (v3 - 5) >= 0xFFFFFFFE)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t sub_1000D6F88()
{
  sub_1000D84D4(v0, &v14);
  uint64_t v1 = v14;
  switch(v16 >> 5)
  {
    case 1:
      v16 &= 0x1Fu;
      v17[0] = v14;
      v17[1] = *(_OWORD *)v15;
      v17[2] = *(_OWORD *)&v15[16];
      uint64_t v18 = *(void *)&v15[32];
      _StringGuts.grow(_:)(17);
      v6._uint64_t countAndFlagsBits = 0x202864656C696166;
      v6._object = (void *)0xEE003D726F727265;
      String.append(_:)(v6);
      _print_unlocked<A, B>(_:_:)();
      v7._uint64_t countAndFlagsBits = 32;
      v7._object = (void *)0xE100000000000000;
      String.append(_:)(v7);
      uint64_t result = 0;
      break;
    case 2:
      v16 &= 0x1Fu;
      sub_1000D84F4((uint64_t)&v14, (uint64_t)v17);
      _StringGuts.grow(_:)(19);
      swift_bridgeObjectRelease();
      v8._uint64_t countAndFlagsBits = sub_10023607C();
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      v9._uint64_t countAndFlagsBits = 10528;
      v9._object = (void *)0xE200000000000000;
      String.append(_:)(v9);
      uint64_t result = 0x726F737365636361;
      break;
    case 3:
      uint64_t v10 = 0x65756E69746E6F63;
      v16 &= 0x1Fu;
      *(void *)&v17[0] = 0;
      *((void *)&v17[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(19);
      swift_bridgeObjectRelease();
      *(void *)&v17[0] = 0x6F69746163756465;
      *((void *)&v17[0] + 1) = 0xEF2028776569566ELL;
      if ((_BYTE)v1)
      {
        if (v1 == 1)
        {
          uint64_t v11 = (void *)0xEF74756F656D6954;
        }
        else
        {
          uint64_t v10 = 0xD000000000000012;
          uint64_t v11 = (void *)0x80000001002B6A10;
        }
      }
      else
      {
        uint64_t v11 = (void *)0xEE00646570706154;
      }
      v12._uint64_t countAndFlagsBits = v10;
      v12._object = v11;
      String.append(_:)(v12);
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 4:
      int8x16_t v4 = vorrq_s8(*(int8x16_t *)&v15[8], *(int8x16_t *)&v15[24]);
      if (((v16 == 128) & ((*(void *)&vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL)) | *(void *)v15 | *((void *)&v14 + 1) | (unint64_t)v14) == 0)) != 0) {
        uint64_t result = 0x69746E6573657270;
      }
      else {
        uint64_t result = 0x65746E6573657270;
      }
      break;
    default:
      v16 &= 0x1Fu;
      int v2 = (void *)*((void *)&v14 + 1);
      *(void *)&v17[0] = 0;
      *((void *)&v17[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(22);
      swift_bridgeObjectRelease();
      *(void *)&v17[0] = 0xD000000000000012;
      *((void *)&v17[0] + 1) = 0x80000001002B21A0;
      v3._uint64_t countAndFlagsBits = v1;
      v3._object = v2;
      String.append(_:)(v3);
LABEL_15:
      v13._uint64_t countAndFlagsBits = 10528;
      v13._object = (void *)0xE200000000000000;
      String.append(_:)(v13);
      uint64_t result = *(void *)&v17[0];
      break;
  }
  return result;
}

uint64_t sub_1000D72DC(void *a1)
{
  uint64_t v2 = sub_10000A38C(&qword_100364C88);
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  __chkstk_darwin(v2);
  unint64_t v41 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10000A38C(&qword_100364C90);
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  Swift::String v39 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A38C(&qword_100364C98);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  uint64_t v36 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A38C(&qword_100364CA0);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  __chkstk_darwin(v7);
  Swift::String v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A38C(&qword_100364CA8);
  uint64_t v32 = *(void *)(v10 - 8);
  uint64_t v33 = v10;
  __chkstk_darwin(v10);
  Swift::String v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000A38C(&qword_100364CB0);
  uint64_t v31 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000A38C(&qword_100364CB8);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v45 = v16;
  uint64_t v46 = v17;
  __chkstk_darwin(v16);
  int v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D6E4(a1, a1[3]);
  sub_1000D987C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_1000D84D4(v57, v49);
  char v20 = v49[0];
  switch(v51 >> 5)
  {
    case 1:
      v51 &= 0x1Fu;
      long long v52 = v49[0];
      long long v53 = v49[1];
      long long v54 = v49[2];
      uint64_t v55 = v50;
      LOBYTE(v47[0]) = 3;
      sub_1000D9A20();
      uint64_t v26 = v36;
      uint64_t v27 = v45;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      v47[0] = v52;
      v47[1] = v53;
      void v47[2] = v54;
      uint64_t v48 = v55;
      sub_1000D9C6C();
      uint64_t v28 = v38;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      uint64_t v29 = v37;
      goto LABEL_9;
    case 2:
      v51 &= 0x1Fu;
      sub_1000D84F4((uint64_t)v49, (uint64_t)v56);
      LOBYTE(v47[0]) = 4;
      sub_1000D9978();
      uint64_t v26 = v39;
      uint64_t v27 = v45;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_1000D84F4((uint64_t)v56, (uint64_t)v47);
      sub_1000D9C18();
      uint64_t v28 = v42;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      uint64_t v29 = v40;
      goto LABEL_9;
    case 3:
      v51 &= 0x1Fu;
      LOBYTE(v47[0]) = 5;
      sub_1000D98D0();
      uint64_t v26 = v41;
      uint64_t v27 = v45;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      LOBYTE(v47[0]) = v20;
      sub_1000D9BC4();
      uint64_t v28 = v44;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      uint64_t v29 = v43;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v19, v27);
      break;
    case 4:
      if (v51 != 128
        || (int8x16_t v24 = vorrq_s8(*(int8x16_t *)((char *)v49 + 8), *(int8x16_t *)((char *)&v49[1] + 8)),
            *(void *)&vorr_s8(*(int8x8_t *)v24.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v24, v24, 8uLL)) | *((void *)&v49[2] + 1) | v50 | *(void *)&v49[0]))
      {
        LOBYTE(v47[0]) = 1;
        sub_1000D9B1C();
        uint64_t v25 = v45;
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v33);
      }
      else
      {
        LOBYTE(v47[0]) = 0;
        sub_1000D9B70();
        uint64_t v25 = v45;
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v13);
      }
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v19, v25);
      break;
    default:
      v51 &= 0x1Fu;
      LOBYTE(v47[0]) = 2;
      sub_1000D9AC8();
      uint64_t v21 = v45;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v22 = v35;
      KeyedEncodingContainer.encode(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v22);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v19, v21);
      break;
  }
  return result;
}

uint64_t sub_1000D7A64(uint64_t a1)
{
  unint64_t v2 = sub_1000D9978();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000D7AA0(uint64_t a1)
{
  unint64_t v2 = sub_1000D9978();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000D7ADC()
{
  uint64_t result = 0x69746E6573657270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65746E6573657270;
      break;
    case 2:
      uint64_t result = 0x657373696D736964;
      break;
    case 3:
      uint64_t result = 0x64656C696166;
      break;
    case 4:
      uint64_t result = 0x726F737365636361;
      break;
    case 5:
      uint64_t result = 0x6F69746163756465;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000D7BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000D8AA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000D7BE8(uint64_t a1)
{
  unint64_t v2 = sub_1000D987C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000D7C24(uint64_t a1)
{
  unint64_t v2 = sub_1000D987C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000D7C60()
{
  return 0x6E6F73616572;
}

uint64_t sub_1000D7C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1000D7D04(uint64_t a1)
{
  unint64_t v2 = sub_1000D9AC8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000D7D40(uint64_t a1)
{
  unint64_t v2 = sub_1000D9AC8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000D7D7C(uint64_t a1)
{
  unint64_t v2 = sub_1000D98D0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000D7DB8(uint64_t a1)
{
  unint64_t v2 = sub_1000D98D0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000D7DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1000D7E74(uint64_t a1)
{
  unint64_t v2 = sub_1000D9A20();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000D7EB0(uint64_t a1)
{
  unint64_t v2 = sub_1000D9A20();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000D7EEC(uint64_t a1)
{
  unint64_t v2 = sub_1000D9B1C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000D7F28(uint64_t a1)
{
  unint64_t v2 = sub_1000D9B1C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000D7F64(uint64_t a1)
{
  unint64_t v2 = sub_1000D9B70();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000D7FA0(uint64_t a1)
{
  unint64_t v2 = sub_1000D9B70();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1000D7FDC(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1000D8D68(a1, (uint64_t *)v4);
  if (!v2) {
    sub_1000D84D4(v4, a2);
  }
}

uint64_t sub_1000D8024(void *a1)
{
  sub_1000D84D4(v1, v4);
  return sub_1000D72DC(a1);
}

uint64_t sub_1000D8074()
{
  sub_1000D84D4(v0, v2);
  return sub_1000D6F88();
}

uint64_t sub_1000D80AC(long long *a1, long long *a2)
{
  sub_1000D84D4(a1, v4);
  sub_1000D84D4(a2, v5);
  return sub_1000D80F8(v4, v5) & 1;
}

uint64_t sub_1000D80F8(long long *a1, long long *a2)
{
  sub_1000D84D4(a1, &v30);
  unsigned __int8 v3 = v30;
  switch(v35 >> 5)
  {
    case 1:
      v35 &= 0x1Fu;
      sub_1000D84D4(a2, &v37);
      return (v41 & 0xE0) == 0x20;
    case 2:
      v35 &= 0x1Fu;
      sub_1000D84F4((uint64_t)&v30, (uint64_t)v36);
      sub_1000D84D4(a2, v21);
      if ((v22 & 0xE0) != 0x40) {
        return 0;
      }
      v22 &= 0x1Fu;
      sub_1000D84F4((uint64_t)v21, (uint64_t)v23);
      sub_1000D84F4((uint64_t)v36, (uint64_t)&v37);
      if (!v41)
      {
        sub_1000D84F4((uint64_t)v23, (uint64_t)&v24);
        return !v29;
      }
      if (v41 == 1)
      {
        sub_1000D84F4((uint64_t)v23, (uint64_t)&v24);
        return v29 == 1;
      }
      uint64_t v19 = v39.i64[0] | v38 | *((void *)&v37 + 1);
      if (!(v40.i64[0] | v40.i64[1] | (unint64_t)v37 | v39.i64[1] | v19))
      {
        sub_1000D84F4((uint64_t)v23, (uint64_t)&v24);
        if (v29 != 2) {
          return 0;
        }
        int8x16_t v13 = v28;
        int8x16_t v14 = v27;
        uint64_t v16 = v25;
        uint64_t v15 = v26;
        uint64_t v17 = v24;
LABEL_26:
        int8x16_t v18 = vorrq_s8(v14, v13);
        return !(*(void *)&vorr_s8(*(int8x8_t *)v18.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v18, v18, 8uLL)) | v15 | v16 | v17);
      }
      uint64_t v20 = v40.i64[0] | v40.i64[1] | v39.i64[1] | v19;
      if ((void)v37 != 1 || v20)
      {
        if ((void)v37 != 2 || v20)
        {
          if ((void)v37 != 3 || v20)
          {
            if ((void)v37 != 4 || v20)
            {
              sub_1000D84F4((uint64_t)v23, (uint64_t)&v24);
              if (v29 != 2 || v24 != 5) {
                return 0;
              }
            }
            else
            {
              sub_1000D84F4((uint64_t)v23, (uint64_t)&v24);
              if (v29 != 2 || v24 != 4) {
                return 0;
              }
            }
          }
          else
          {
            sub_1000D84F4((uint64_t)v23, (uint64_t)&v24);
            if (v29 != 2 || v24 != 3) {
              return 0;
            }
          }
        }
        else
        {
          sub_1000D84F4((uint64_t)v23, (uint64_t)&v24);
          if (v29 != 2 || v24 != 2) {
            return 0;
          }
        }
LABEL_55:
        int8x16_t v8 = v28;
        int8x16_t v9 = v27;
        uint64_t v11 = v25;
        uint64_t v10 = v26;
        goto LABEL_21;
      }
      sub_1000D84F4((uint64_t)v23, (uint64_t)&v24);
      if (v29 == 2 && v24 == 1) {
        goto LABEL_55;
      }
      return 0;
    case 3:
      v35 &= 0x1Fu;
      sub_1000D84D4(a2, &v37);
      if ((v41 & 0xE0) != 0x60) {
        return 0;
      }
      return v37 == v3;
    case 4:
      int8x16_t v5 = vorrq_s8(v31, v32);
      uint64_t v6 = *(void *)&vorr_s8(*(int8x8_t *)v5.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v5, v5, 8uLL)) | v33 | v34 | v30;
      if (v35 == 128 && v6 == 0)
      {
        sub_1000D84D4(a2, &v37);
        if ((v41 & 0xE0) == 0x80 && v41 == 128)
        {
          int8x16_t v13 = v40;
          int8x16_t v14 = v39;
          uint64_t v16 = *((void *)&v37 + 1);
          uint64_t v15 = v38;
          uint64_t v17 = v37;
          goto LABEL_26;
        }
      }
      else
      {
        sub_1000D84D4(a2, &v37);
        if ((v41 & 0xE0) == 0x80 && v41 == 128 && (void)v37 == 1)
        {
          int8x16_t v8 = v40;
          int8x16_t v9 = v39;
          uint64_t v11 = *((void *)&v37 + 1);
          uint64_t v10 = v38;
LABEL_21:
          int8x16_t v12 = vorrq_s8(v9, v8);
          if (!(*(void *)&vorr_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)) | v10 | v11)) {
            return 1;
          }
        }
      }
      return 0;
    default:
      v35 &= 0x1Fu;
      sub_1000D84D4(a2, &v37);
      return v41 < 0x20u;
  }
}

_OWORD *sub_1000D84D4(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(_OWORD *)((char *)a2 + 41) = *(long long *)((char *)a1 + 41);
  a2[1] = v3;
  a2[2] = v4;
  *a2 = v2;
  return a2;
}

uint64_t sub_1000D84F4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000D8550(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E6573657270 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373696D736964 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000D8644(void *a1)
{
  uint64_t v2 = sub_10000A38C(&qword_100364CD8);
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  __chkstk_darwin(v2);
  long long v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A38C(&qword_100364CE0);
  uint64_t v24 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A38C(&qword_100364CE8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  int8x16_t v27 = a1;
  uint64_t v13 = (uint64_t)sub_10000D6E4(a1, v12);
  sub_1000D9CC0();
  uint64_t v14 = v28;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v14)
  {
    uint64_t v23 = v5;
    uint64_t v15 = v25;
    uint64_t v16 = v26;
    uint64_t v28 = v9;
    uint64_t v17 = KeyedDecodingContainer.allKeys.getter();
    if (*(void *)(v17 + 16) == 1)
    {
      if (*(unsigned char *)(v17 + 32))
      {
        char v31 = 1;
        sub_1000D9D14();
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v4, v16);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v8);
        uint64_t v13 = 5;
      }
      else
      {
        char v30 = 0;
        sub_1000D9D68();
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        sub_1000D9DBC();
        uint64_t v22 = v23;
        KeyedDecodingContainer.decode<A>(_:forKey:)();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v22);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v8);
        uint64_t v13 = v29;
      }
    }
    else
    {
      uint64_t v18 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v20 = v19;
      sub_10000A38C(&qword_10035FAC0);
      *uint64_t v20 = &type metadata for CardEffect;
      uint64_t v13 = (uint64_t)v11;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, enum case for DecodingError.typeMismatch(_:), v18);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v8);
    }
  }
  sub_10000CC5C((uint64_t)v27);
  return v13;
}

uint64_t sub_1000D8AA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x69746E6573657270 && a2 == 0xEA0000000000676ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746E6573657270 && a2 == 0xE900000000000064 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657373696D736964 && a2 == 0xE900000000000064 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xED00007765695679 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F69746163756465 && a2 == 0xED0000776569566ELL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

double sub_1000D8D68@<D0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v56 = sub_10000A38C(&qword_100364C00);
  uint64_t v61 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v66 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000A38C(&qword_100364C08);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v59 = v4;
  uint64_t v60 = v5;
  __chkstk_darwin(v4);
  uint64_t v65 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A38C(&qword_100364C10);
  uint64_t v57 = *(void *)(v7 - 8);
  uint64_t v58 = v7;
  __chkstk_darwin(v7);
  uint64_t v64 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10000A38C(&qword_100364C18);
  uint64_t v55 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v62 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10000A38C(&qword_100364C20);
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000A38C(&qword_100364C28);
  uint64_t v51 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000A38C(&qword_100364C30);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[3];
  uint64_t v75 = a1;
  sub_10000D6E4(a1, v19);
  sub_1000D987C();
  uint64_t v20 = v67;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  uint64_t v21 = v20;
  if (v20) {
    goto LABEL_6;
  }
  uint64_t v50 = v14;
  uint64_t v49 = v12;
  uint64_t v22 = v11;
  uint64_t v23 = v64;
  uint64_t v24 = v65;
  uint64_t v25 = v66;
  *(void *)&long long v67 = v16;
  uint64_t v26 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v26 + 16) != 1)
  {
    uint64_t v33 = type metadata accessor for DecodingError();
    swift_allocError();
    unsigned __int8 v35 = v34;
    sub_10000A38C(&qword_10035FAC0);
    *unsigned __int8 v35 = &type metadata for CardEvent;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, enum case for DecodingError.typeMismatch(_:), v33);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v18, v15);
LABEL_6:
    sub_10000CC5C((uint64_t)v75);
    return result;
  }
  switch(*(unsigned char *)(v26 + 32))
  {
    case 1:
      LOBYTE(v68) = 1;
      sub_1000D9B1C();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v22, v53);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v18, v15);
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      long long v67 = 0u;
      char v32 = 0x80;
      uint64_t v28 = 1;
      break;
    case 2:
      LOBYTE(v68) = 2;
      sub_1000D9AC8();
      long long v37 = v62;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v38 = v54;
      uint64_t v39 = KeyedDecodingContainer.decode(_:forKey:)();
      uint64_t v40 = v67;
      uint64_t v28 = v39;
      uint64_t v29 = v47;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v37, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v18, v15);
      uint64_t v21 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      char v32 = 0;
      long long v67 = 0u;
      break;
    case 3:
      LOBYTE(v68) = 3;
      sub_1000D9A20();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_1000D9A74();
      uint64_t v41 = v58;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v42 = v67;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v23, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v15);
      uint64_t v28 = v68;
      uint64_t v29 = v69;
      uint64_t v21 = v70;
      uint64_t v30 = v71;
      uint64_t v31 = v72;
      char v32 = 32;
      long long v67 = v73;
      break;
    case 4:
      LOBYTE(v68) = 4;
      sub_1000D9978();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_1000D99CC();
      uint64_t v43 = v59;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v44 = v67;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v24, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v15);
      uint64_t v28 = v68;
      uint64_t v29 = v69;
      uint64_t v21 = v70;
      uint64_t v30 = v71;
      uint64_t v31 = v72;
      long long v67 = v73;
      char v32 = v74 | 0x40;
      break;
    case 5:
      LOBYTE(v68) = 5;
      sub_1000D98D0();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_1000D9924();
      uint64_t v45 = v56;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v46 = v67;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v25, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v18, v15);
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v28 = v68;
      long long v67 = 0u;
      char v32 = 96;
      break;
    default:
      LOBYTE(v68) = 0;
      sub_1000D9B70();
      int8x16_t v27 = v50;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v27, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v18, v15);
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      long long v67 = 0u;
      char v32 = 0x80;
      break;
  }
  sub_10000CC5C((uint64_t)v75);
  uint64_t v48 = v63;
  *uint64_t v63 = v28;
  v48[1] = v29;
  v48[2] = v21;
  v48[3] = v30;
  v48[4] = v31;
  double result = *(double *)&v67;
  *(_OWORD *)(v48 + 5) = v67;
  *((unsigned char *)v48 + 56) = v32;
  return result;
}

unint64_t sub_1000D987C()
{
  unint64_t result = qword_100364C38;
  if (!qword_100364C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364C38);
  }
  return result;
}

unint64_t sub_1000D98D0()
{
  unint64_t result = qword_100364C40;
  if (!qword_100364C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364C40);
  }
  return result;
}

unint64_t sub_1000D9924()
{
  unint64_t result = qword_100364C48;
  if (!qword_100364C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364C48);
  }
  return result;
}

unint64_t sub_1000D9978()
{
  unint64_t result = qword_100364C50;
  if (!qword_100364C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364C50);
  }
  return result;
}

unint64_t sub_1000D99CC()
{
  unint64_t result = qword_100364C58;
  if (!qword_100364C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364C58);
  }
  return result;
}

unint64_t sub_1000D9A20()
{
  unint64_t result = qword_100364C60;
  if (!qword_100364C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364C60);
  }
  return result;
}

unint64_t sub_1000D9A74()
{
  unint64_t result = qword_100364C68;
  if (!qword_100364C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364C68);
  }
  return result;
}

unint64_t sub_1000D9AC8()
{
  unint64_t result = qword_100364C70;
  if (!qword_100364C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364C70);
  }
  return result;
}

unint64_t sub_1000D9B1C()
{
  unint64_t result = qword_100364C78;
  if (!qword_100364C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364C78);
  }
  return result;
}

unint64_t sub_1000D9B70()
{
  unint64_t result = qword_100364C80;
  if (!qword_100364C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364C80);
  }
  return result;
}

unint64_t sub_1000D9BC4()
{
  unint64_t result = qword_100364CC0;
  if (!qword_100364CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364CC0);
  }
  return result;
}

unint64_t sub_1000D9C18()
{
  unint64_t result = qword_100364CC8;
  if (!qword_100364CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364CC8);
  }
  return result;
}

unint64_t sub_1000D9C6C()
{
  unint64_t result = qword_100364CD0;
  if (!qword_100364CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364CD0);
  }
  return result;
}

unint64_t sub_1000D9CC0()
{
  unint64_t result = qword_100364CF0;
  if (!qword_100364CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364CF0);
  }
  return result;
}

unint64_t sub_1000D9D14()
{
  unint64_t result = qword_100364CF8;
  if (!qword_100364CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364CF8);
  }
  return result;
}

unint64_t sub_1000D9D68()
{
  unint64_t result = qword_100364D00;
  if (!qword_100364D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D00);
  }
  return result;
}

unint64_t sub_1000D9DBC()
{
  unint64_t result = qword_100364D08;
  if (!qword_100364D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D08);
  }
  return result;
}

unint64_t sub_1000D9E10()
{
  unint64_t result = qword_100364D28;
  if (!qword_100364D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D28);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CardEffect.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D9F30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardEffect.CodingKeys()
{
  return &type metadata for CardEffect.CodingKeys;
}

ValueMetadata *type metadata accessor for CardEffect.PresentCodingKeys()
{
  return &type metadata for CardEffect.PresentCodingKeys;
}

ValueMetadata *type metadata accessor for CardEffect.DismissCodingKeys()
{
  return &type metadata for CardEffect.DismissCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CardEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000DA05CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardEvent.CodingKeys()
{
  return &type metadata for CardEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for CardEvent.PresentingCodingKeys()
{
  return &type metadata for CardEvent.PresentingCodingKeys;
}

ValueMetadata *type metadata accessor for CardEvent.PresentedCodingKeys()
{
  return &type metadata for CardEvent.PresentedCodingKeys;
}

ValueMetadata *type metadata accessor for CardEvent.DismissedCodingKeys()
{
  return &type metadata for CardEvent.DismissedCodingKeys;
}

ValueMetadata *type metadata accessor for CardEvent.FailedCodingKeys()
{
  return &type metadata for CardEvent.FailedCodingKeys;
}

ValueMetadata *type metadata accessor for CardEvent.AccessoryViewCodingKeys()
{
  return &type metadata for CardEvent.AccessoryViewCodingKeys;
}

unsigned char *_s17proximitycontrold10CardEffectO17PresentCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000DA180);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardEvent.EducationViewCodingKeys()
{
  return &type metadata for CardEvent.EducationViewCodingKeys;
}

unint64_t sub_1000DA1BC()
{
  unint64_t result = qword_100364D30;
  if (!qword_100364D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D30);
  }
  return result;
}

unint64_t sub_1000DA214()
{
  unint64_t result = qword_100364D38;
  if (!qword_100364D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D38);
  }
  return result;
}

unint64_t sub_1000DA26C()
{
  unint64_t result = qword_100364D40;
  if (!qword_100364D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D40);
  }
  return result;
}

unint64_t sub_1000DA2C4()
{
  unint64_t result = qword_100364D48;
  if (!qword_100364D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D48);
  }
  return result;
}

unint64_t sub_1000DA31C()
{
  unint64_t result = qword_100364D50;
  if (!qword_100364D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D50);
  }
  return result;
}

unint64_t sub_1000DA374()
{
  unint64_t result = qword_100364D58;
  if (!qword_100364D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D58);
  }
  return result;
}

unint64_t sub_1000DA3CC()
{
  unint64_t result = qword_100364D60;
  if (!qword_100364D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D60);
  }
  return result;
}

unint64_t sub_1000DA424()
{
  unint64_t result = qword_100364D68;
  if (!qword_100364D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D68);
  }
  return result;
}

unint64_t sub_1000DA47C()
{
  unint64_t result = qword_100364D70;
  if (!qword_100364D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D70);
  }
  return result;
}

unint64_t sub_1000DA4D4()
{
  unint64_t result = qword_100364D78;
  if (!qword_100364D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D78);
  }
  return result;
}

unint64_t sub_1000DA52C()
{
  unint64_t result = qword_100364D80;
  if (!qword_100364D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D80);
  }
  return result;
}

unint64_t sub_1000DA584()
{
  unint64_t result = qword_100364D88;
  if (!qword_100364D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D88);
  }
  return result;
}

unint64_t sub_1000DA5DC()
{
  unint64_t result = qword_100364D90;
  if (!qword_100364D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D90);
  }
  return result;
}

unint64_t sub_1000DA634()
{
  unint64_t result = qword_100364D98;
  if (!qword_100364D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364D98);
  }
  return result;
}

unint64_t sub_1000DA68C()
{
  unint64_t result = qword_100364DA0;
  if (!qword_100364DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364DA0);
  }
  return result;
}

unint64_t sub_1000DA6E4()
{
  unint64_t result = qword_100364DA8;
  if (!qword_100364DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364DA8);
  }
  return result;
}

unint64_t sub_1000DA73C()
{
  unint64_t result = qword_100364DB0;
  if (!qword_100364DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364DB0);
  }
  return result;
}

unint64_t sub_1000DA794()
{
  unint64_t result = qword_100364DB8;
  if (!qword_100364DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364DB8);
  }
  return result;
}

unint64_t sub_1000DA7EC()
{
  unint64_t result = qword_100364DC0;
  if (!qword_100364DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364DC0);
  }
  return result;
}

unint64_t sub_1000DA844()
{
  unint64_t result = qword_100364DC8;
  if (!qword_100364DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364DC8);
  }
  return result;
}

unint64_t sub_1000DA89C()
{
  unint64_t result = qword_100364DD0;
  if (!qword_100364DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364DD0);
  }
  return result;
}

unint64_t sub_1000DA8F4()
{
  unint64_t result = qword_100364DD8;
  if (!qword_100364DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364DD8);
  }
  return result;
}

unint64_t sub_1000DA94C()
{
  unint64_t result = qword_100364DE0;
  if (!qword_100364DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364DE0);
  }
  return result;
}

unint64_t sub_1000DA9A4()
{
  unint64_t result = qword_100364DE8;
  if (!qword_100364DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364DE8);
  }
  return result;
}

unint64_t sub_1000DA9FC()
{
  unint64_t result = qword_100364DF0;
  if (!qword_100364DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364DF0);
  }
  return result;
}

unint64_t sub_1000DAA54()
{
  unint64_t result = qword_100364DF8;
  if (!qword_100364DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364DF8);
  }
  return result;
}

unint64_t sub_1000DAAAC()
{
  unint64_t result = qword_100364E00;
  if (!qword_100364E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364E00);
  }
  return result;
}

uint64_t sub_1000DAB04()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x646E61707865;
  }
}

id sub_1000DAB40()
{
  if (qword_10035A510 != -1) {
    swift_once();
  }
  uint64_t v0 = (id *)qword_1003AC740;
  id v1 = *(id *)(qword_1003AC740 + 56);
  double v2 = sub_1000FEB94();

  id v3 = v0[8];
  double v4 = sub_1000FEB94();

  id v5 = v0[9];
  double v6 = sub_1000FEB94();

  id v7 = v0[10];
  double v8 = sub_1000FEB94();

  double v9 = nullsub_1(v2, v4, v6, v8);
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  id v16 = v0[11];
  double v17 = sub_1000FEB94();

  id v18 = objc_allocWithZone((Class)FluidSpring);

  return [v18 initWithParameters:v9 retargetImpuse:v11];
}

id sub_1000DAC80()
{
  if (qword_10035A510 != -1) {
    swift_once();
  }
  uint64_t v0 = (id *)qword_1003AC740;
  id v1 = *(id *)(qword_1003AC740 + 96);
  double v2 = sub_1000FEB94();

  id v3 = v0[13];
  double v4 = sub_1000FEB94();

  id v5 = v0[14];
  double v6 = sub_1000FEB94();

  id v7 = v0[15];
  double v8 = sub_1000FEB94();

  double v9 = nullsub_1(v2, v4, v6, v8);
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  id v16 = v0[16];
  double v17 = sub_1000FEB94();

  id v18 = objc_allocWithZone((Class)FluidSpring);

  return [v18 initWithParameters:v9 retargetImpuse:v11];
}

ValueMetadata *type metadata accessor for BannerPolicy()
{
  return &type metadata for BannerPolicy;
}

unsigned char *storeEnumTagSinglePayload for BannerPolicy.ExecutionBehavior(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000DAE9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BannerPolicy.ExecutionBehavior()
{
  return &type metadata for BannerPolicy.ExecutionBehavior;
}

unint64_t sub_1000DAED8()
{
  unint64_t result = qword_100364E08[0];
  if (!qword_100364E08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100364E08);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AnalyticsError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 2;
  if (v5 >= 4) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AnalyticsError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsError()
{
  return &type metadata for AnalyticsError;
}

void sub_1000DAFF8()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_1000DBFA4();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t sub_1000DB0FC()
{
  return Published.init(initialValue:)();
}

uint64_t sub_1000DB12C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000DB1F0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return static Published.subscript.setter();
}

void sub_1000DB2B4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1000DC1CC();
}

uint64_t sub_1000DB2DC()
{
  (*(void (**)(char *))(*(void *)(*(void *)((swift_isaMask & *(void *)v0) + 0xD8) - 8) + 8))(&v0[*(void *)((swift_isaMask & *(void *)v0) + 0xE8)]);

  id v1 = &v0[*(void *)((swift_isaMask & *(void *)v0) + 0x118)];
  uint64_t v2 = sub_10000A38C(&qword_100367F40);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1000DB4F0()
{
  id v1 = v0;
  uint64_t v2 = (objc_class *)type metadata accessor for PillViewController();
  sub_10016ADD8(0x74696E696544, (void *)0xE600000000000000, 0, (uint64_t)v2, (uint64_t)&off_100324480);
  id v3 = [self defaultCenter];
  [v3 removeObserver:v1];

  v5.receiver = v1;
  v5.super_class = v2;
  return [super dealloc];
}

id sub_1000DB5E0(void *a1)
{
  id v1 = a1;
  return sub_1000DB4F0();
}

uint64_t sub_1000DB608(char *a1)
{
  (*(void (**)(char *))(*(void *)(*(void *)((swift_isaMask & *(void *)a1) + 0xD8) - 8) + 8))(&a1[*(void *)((swift_isaMask & *(void *)a1) + 0xE8)]);

  uint64_t v2 = &a1[*(void *)((swift_isaMask & *(void *)a1) + 0x118)];
  uint64_t v3 = sub_10000A38C(&qword_100367F40);
  (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1000DB820()
{
  uint64_t v1 = *(void *)((swift_isaMask & *v0) + 0xD8);
  uint64_t v2 = *(void *)((swift_isaMask & *v0) + 0xE0);
  uint64_t v3 = type metadata accessor for PillViewController();
  sub_10016ADD8(0x2928657461647075, (void *)0xE800000000000000, 0, v3, (uint64_t)&off_100324480);
  int v4 = *(void **)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0xF0));
  float v5 = (*(float (**)(uint64_t))(*(void *)(v2 + 32) + 8))(v1);
  sub_1000DBAD0(v8, v5);
  v7[0] = v8[0];
  v7[1] = v8[1];
  _OWORD v7[2] = v8[2];
  return [v4 setTransform:v7];
}

void sub_1000DB960(void *a1)
{
  id v1 = a1;
  sub_1000DB820();
}

uint64_t sub_1000DB9A8()
{
  uint64_t v0 = type metadata accessor for PillViewController();
  sub_10016ADD8(0x707061546C6C6970, (void *)0xEC00000029286465, 0, v0, (uint64_t)&off_100324480);
  swift_retain();
  PassthroughSubject.send(_:)();
  return swift_release();
}

void sub_1000DBA88(void *a1)
{
  id v1 = a1;
  sub_1000DB9A8();
}

CGFloat sub_1000DBAD0@<D0>(_OWORD *a1@<X8>, double a2@<D0>)
{
  v14.a = -2.31584178e77;
  *(void *)&v14.b = 0x80000001002BD330;
  v5._uint64_t countAndFlagsBits = Double.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for PillViewController();
  sub_10016ADD8(0xD00000000000001ELL, (void *)0x80000001002BD330, 0, v6, (uint64_t)&off_100324480);
  swift_bridgeObjectRelease();
  [*(id *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x100)) step:CACurrentMediaTime() progress:a2];
  double v8 = v7;
  if (qword_10035A520 != -1) {
    swift_once();
  }
  id v9 = *(id *)(qword_1003AC750 + 1320);
  double v10 = sub_1000FEBDC();

  CGAffineTransformMakeScale(&v14, v8 * (v10 + -1.0) + 1.0, v8 * (v10 + -1.0) + 1.0);
  CGFloat result = v14.a;
  long long v12 = *(_OWORD *)&v14.c;
  long long v13 = *(_OWORD *)&v14.tx;
  *a1 = *(_OWORD *)&v14.a;
  a1[1] = v12;
  a1[2] = v13;
  return result;
}

void sub_1000DBC80()
{
  id v1 = v0;
  uint64_t v2 = (objc_class *)type metadata accessor for PillViewController();
  sub_10016ADD8(0x4C64694477656976, (void *)0xED0000292864616FLL, 0, (uint64_t)v2, (uint64_t)&off_100324480);
  v5.receiver = v0;
  v5.super_class = v2;
  [super viewDidLoad];
  id v3 = [v0 view];
  if (v3)
  {
    int v4 = v3;
    [v3 addSubview:*(void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0xF0))];
  }
  else
  {
    __break(1u);
  }
}

void sub_1000DBD9C(void *a1)
{
  id v1 = a1;
  sub_1000DBC80();
}

uint64_t sub_1000DBDE4()
{
  return 1;
}

uint64_t sub_1000DBDEC(void *a1)
{
  sub_1000B3A74(a1);

  return sub_1000DB1F0();
}

void sub_1000DBE18(void *a1, uint64_t a2, void *a3)
{
  swift_unknownObjectRetain();
  id v5 = a1;
  sub_1000DBDEC(a3);
  swift_unknownObjectRelease();
}

uint64_t sub_1000DBE80(void *a1, uint64_t a2)
{
  sub_1000B3A3C(a1, a2);

  return sub_1000DB1F0();
}

void sub_1000DBEAC(void *a1, uint64_t a2, void *a3, void *a4)
{
  swift_unknownObjectRetain();
  id v7 = a4;
  id v8 = a1;
  sub_1000DBE80(a3, (uint64_t)a4);
  swift_unknownObjectRelease();
}

double sub_1000DBF30(void *a1)
{
  id v1 = a1;
  sub_1000DC128();
  double v3 = v2;

  return v3;
}

uint64_t type metadata accessor for PillViewController()
{
  return sub_10000F2E4();
}

void sub_1000DBFA4()
{
  if (!qword_10036CF90)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10036CF90);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for HintViewControllerEvent(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *CGFloat result = a2;
        return result;
      case 2:
        *(_WORD *)CGFloat result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)CGFloat result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *CGFloat result = 0;
      break;
    case 2:
      *(_WORD *)CGFloat result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000DC098);
    case 4:
      *(_DWORD *)CGFloat result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HintViewControllerEvent()
{
  return &type metadata for HintViewControllerEvent;
}

unint64_t sub_1000DC0D4()
{
  unint64_t result = qword_100364E90;
  if (!qword_100364E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100364E90);
  }
  return result;
}

id sub_1000DC128()
{
  return [*(id *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0xF0)) shadowOutsets];
}

uint64_t sub_1000DC15C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000DB12C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1000DC18C()
{
  return sub_1000DB1F0();
}

uint64_t sub_1000DC1B4()
{
  return 16;
}

__n128 sub_1000DC1C0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void sub_1000DC1CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = sub_10000A38C(&qword_100367F40);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v2 + 248);
  *(void *)((char *)v1 + v7) = [objc_allocWithZone((Class)UITapGestureRecognizer) init];
  uint64_t v8 = *(void *)((swift_isaMask & *v1) + 0x100);
  *(void *)((char *)v1 + v8) = sub_1000DAB40();
  uint64_t v9 = *(void *)((swift_isaMask & *v1) + 0x108);
  *(void *)((char *)v1 + v9) = sub_1000DAC80();
  *(void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x110)) = 0;
  double v10 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0x118);
  sub_1000DB0FC();
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v10, v6, v3);
  uint64_t v11 = *(void *)((swift_isaMask & *v1) + 0x120);
  sub_10000A38C(&qword_100367E60);
  swift_allocObject();
  *(void *)((char *)v1 + v11) = PassthroughSubject.init()();
  *(void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x128)) = 0;
  *(void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x130)) = &_swiftEmptySetSingleton;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000DC438(double a1)
{
  id v2 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v2 setMaximumFractionDigits:3];
  if (a1 >= 0.001)
  {
    id v4 = [objc_allocWithZone((Class)NSNumber) initWithDouble:a1];
    id v5 = [v2 stringFromNumber:v4];

    if (v5)
    {
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v8 = v6;
      v7._uint64_t countAndFlagsBits = 115;
      v7._object = (void *)0xE100000000000000;
      String.append(_:)(v7);
    }
    else
    {
      uint64_t v8 = 0;
      Double.write<A>(to:)();
    }

    return v8;
  }
  else
  {

    return 0x736D31203CLL;
  }
}

void sub_1000DC564(id *a1)
{
  id v1 = [*a1 uniqueIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for HomeKitProxyState()
{
  return self;
}

uint64_t sub_1000DC5E8()
{
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000A38C(&qword_100365080);
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = [objc_allocWithZone((Class)NSLock) init];
  sub_10000A38C(&qword_100365088);
  swift_allocObject();
  uint64_t v3 = PassthroughSubject.init()();
  sub_10000A38C((uint64_t *)&unk_100365090);
  swift_allocObject();
  uint64_t v4 = PassthroughSubject.init()();
  swift_allocObject();
  uint64_t v5 = PassthroughSubject.init()();
  *(void *)(v2 + 40) = v3;
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = v5;
  *(void *)(v2 + 64) = &_swiftEmptyDictionarySingleton;
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 16) = KeyPath;
  *(unsigned char *)(v2 + 24) = 0;
  *(void *)(v0 + 16) = v2;
  sub_10000A38C(&qword_10035E150);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  *(unsigned char *)(v6 + 24) = 0;
  *(void *)(v0 + 24) = v6;
  return v0;
}

id sub_1000DC718()
{
  id v1 = sub_1001F6858();
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 ulog:40 message:v2];

  sub_1000DCD5C();
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for HomeKitProxy();
  return [super dealloc];
}

uint64_t sub_1000DC8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  long long v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v16 = (void *)Strong;
    uint64_t v23 = v10;
    double v17 = *(void **)(Strong + OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_dispatchQueue);
    swift_retain();
    id v18 = v17;

    uint64_t v19 = (void *)swift_allocObject();
    _OWORD v19[2] = a3;
    v19[3] = sub_1000CF728;
    v19[4] = v14;
    aBlock[4] = sub_1000DEB4C;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10007A0AC;
    aBlock[3] = &unk_100326EE8;
    uint64_t v20 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v24 = _swiftEmptyArrayStorage;
    sub_10004D1C4();
    sub_10000A38C((uint64_t *)&unk_10035E800);
    sub_10000B010(qword_100363D60, (uint64_t *)&unk_10035E800);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v23);
  }
  else
  {
    swift_retain();
  }
  return swift_release();
}

void sub_1000DCBD0(uint64_t a1, void (*a2)(void), void (*a3)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (char *)Strong;
    id v7 = sub_1001F6858();
    NSString v8 = String._bridgeToObjectiveC()();
    [v7 ulog:40 message:v8];

    id v9 = [objc_allocWithZone((Class)HMHomeManager) initWithOptions:64];
    [v9 setDelegate:v6];
    uint64_t v10 = *(void **)&v6[OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_manager];
    *(void *)&v6[OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_manager] = v9;
    id v11 = v9;

    uint64_t v12 = (void (**)(void))&v6[OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_activationPromise];
    uint64_t v13 = *(void *)&v6[OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_activationPromise];
    *uint64_t v12 = a2;
    v12[1] = a3;
    swift_retain();
    sub_10000F088(v13);
    sub_1000DCF54();
    sub_1000DD4F8();
  }
  else
  {
    sub_10001A050();
    swift_allocError();
    *(void *)uint64_t v14 = 0x666C6573206C696ELL;
    *(void *)(v14 + 8) = 0xE800000000000000;
    *(unsigned char *)(v14 + 16) = 9;
    a2();
    swift_errorRelease();
  }
}

uint64_t sub_1000DCD5C()
{
  uint64_t v1 = v0;
  id v2 = sub_1001F6858();
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 ulog:40 message:v3];

  *(unsigned char *)(*(void *)(*(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_state) + 24) + 24) = 0;
  swift_retain();
  sub_100104B88();
  CurrentValueSubject.send(_:)();
  swift_release();
  swift_release();
  objc_super v4 = *(void **)(v1 + OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_manager);
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_manager) = 0;

  swift_retain();
  sub_1001A89B4();
  return swift_release();
}

uint64_t sub_1000DCE48()
{
  uint64_t v1 = v0;
  id v2 = sub_1001F6858();
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 ulog:40 message:v3];

  *(unsigned char *)(*(void *)(*(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_state) + 24) + 24) = 1;
  swift_retain();
  sub_100104B88();
  CurrentValueSubject.send(_:)();
  swift_release();
  uint64_t result = swift_release();
  uint64_t v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_activationPromise);
  uint64_t v6 = *(void (**)(void, void))(v1 + OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_activationPromise);
  if (v6)
  {
    swift_retain();
    v6(0, 0);
    uint64_t v7 = *v5;
    *uint64_t v5 = 0;
    v5[1] = 0;
    sub_10000F088(v7);
    return sub_10000F088((uint64_t)v6);
  }
  return result;
}

uint64_t sub_1000DCF54()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v29 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  NSString v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTimeInterval();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  double v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  double v17 = (char *)&v26 - v16;
  id v27 = *(id *)(v1 + OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_dispatchQueue);
  static DispatchTime.now()();
  void *v10 = 1;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchTimeInterval.seconds(_:), v7);
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  id v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  v18(v15, v11);
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = ObjectType;
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = v21;
  aBlock[4] = sub_1000DF374;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A0AC;
  aBlock[3] = &unk_100327190;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v33 = _swiftEmptyArrayStorage;
  sub_10004D1C4();
  sub_10000A38C((uint64_t *)&unk_10035E800);
  sub_10000B010(qword_100363D60, (uint64_t *)&unk_10035E800);
  uint64_t v23 = v29;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v24 = v27;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v3, v23);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v31);
  v18(v17, v26);
  swift_release();
  return swift_release();
}

void sub_1000DD3D8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = *(void (**)(void, void))(Strong
                                               + OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_activationPromise);
    sub_1000766BC((uint64_t)v5);

    if (v5)
    {
      sub_10016AE10(60, 0xD000000000000037, (void *)0x80000001002BD570, 0, a2, (uint64_t)&off_100326E60);
      v5(0, 0);
      swift_beginAccess();
      uint64_t v6 = swift_unknownObjectWeakLoadStrong();
      if (v6)
      {
        uint64_t v7 = (void *)v6;
        uint64_t v8 = (void *)(v6 + OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_activationPromise);
        uint64_t v9 = *(void *)(v6 + OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_activationPromise);
        void *v8 = 0;
        v8[1] = 0;
        sub_10000F088(v9);
        sub_10000F088((uint64_t)v5);
      }
      else
      {
        sub_10000F088((uint64_t)v5);
      }
    }
  }
}

uint64_t sub_1000DD4F8()
{
  uint64_t ObjectType = swift_getObjectType();
  sub_10000A38C(&qword_100365088);
  sub_10000B010(&qword_1003650B8, &qword_100365088);
  uint64_t v1 = Publisher.eraseToAnyPublisher()();
  id v2 = sub_10016B098(ObjectType, (uint64_t)&off_100326E60);
  sub_100168CB0(0x444E554F46, 0xE500000000000000, v2, 1, v1);
  swift_release();

  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v3 = Publisher.eraseToAnyPublisher()();
  id v4 = sub_10016B098(ObjectType, (uint64_t)&off_100326E60);
  sub_100168CB0(1414745932, 0xE400000000000000, v4, 1, v3);
  swift_release();

  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t type metadata accessor for HomeKitProxy()
{
  return self;
}

void *sub_1000DD71C()
{
  uint64_t result = *(void **)(v0 + OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_manager);
  if (result)
  {
    id v2 = [result homes];
    sub_100019E10(0, &qword_1003650A0);
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
      uint64_t v4 = (uint64_t)result;
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = (void *)swift_bridgeObjectRetain();
    }
    unint64_t v30 = v3;
    unint64_t v29 = v3 >> 62;
    if (v4)
    {
      if (v4 < 1)
      {
        __break(1u);
LABEL_35:
        __break(1u);
        return result;
      }
      uint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      do
      {
        if (v6) {
          id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v7 = *(id *)(v3 + 8 * v5 + 32);
        }
        uint64_t v8 = v7;
        ++v5;
        id v9 = [v7 accessories:v29];
        sub_100019E10(0, &qword_1003650B0);
        unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        sub_10008E2E4(v10);
        unint64_t v3 = v30;
      }
      while (v4 != v5);
    }
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = (void *)swift_bridgeObjectRelease();
      if (v11)
      {
LABEL_13:
        if (v11 >= 1)
        {
          uint64_t v12 = 0;
          while (1)
          {
            id v13 = (id)_swiftEmptyArrayStorage[v12 + 4];
            id v14 = [v13 category];
            id v15 = [v14 categoryType];

            uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v18 = v17;

            if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v21 & 1) == 0)
              {

                goto LABEL_17;
              }
            }
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
LABEL_17:
            if (v11 == ++v12) {
              goto LABEL_27;
            }
          }
        }
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v11 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v11) {
        goto LABEL_13;
      }
    }
LABEL_27:
    swift_bridgeObjectRelease();
    _StringGuts.grow(_:)(52);
    v22._object = (void *)0x80000001002BD4D0;
    v22._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    String.append(_:)(v22);
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0
      || ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_release();
    }
    v23._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    v24._uint64_t countAndFlagsBits = 0x646F70656D6F6820;
    v24._object = (void *)0xED0000206E692073;
    String.append(_:)(v24);
    if (v29)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v25._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v25);
    swift_bridgeObjectRelease();
    v26._uint64_t countAndFlagsBits = 0x2E73656D6F6820;
    v26._object = (void *)0xE700000000000000;
    String.append(_:)(v26);
    id v27 = sub_1001F6858();
    swift_bridgeObjectRetain();
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v27 ulog:40 message:v28];
    swift_bridgeObjectRelease();

    swift_retain();
    sub_1001C0D64((unint64_t)_swiftEmptyArrayStorage);
    swift_release();
    return (void *)swift_release();
  }
  return result;
}

void *sub_1000DDC1C()
{
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_manager;
  uint64_t v31 = v0;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_manager);
  if (v2)
  {
    id v3 = [v2 homes];
    sub_100019E10(0, &qword_1003650A0);
    unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 41;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  id v7 = sub_1001F6858();
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 ulog:40 message:v8];
  swift_bridgeObjectRelease();

  id v9 = *(void **)(v31 + v1);
  uint64_t v10 = v31;
  if (!v9) {
    return sub_1000DD71C();
  }
  id v11 = [v9 homes];
  sub_100019E10(0, &qword_1003650A0);
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v12 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_8;
    }
LABEL_17:
    swift_bridgeObjectRelease_n();
    return sub_1000DD71C();
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  if (!v13) {
    goto LABEL_17;
  }
LABEL_8:
  uint64_t result = (void *)type metadata accessor for HomeKitProxy();
  if (v13 >= 1)
  {
    uint64_t v15 = 0;
    unint64_t v32 = v12 & 0xC000000000000001;
    unint64_t v33 = v12;
    do
    {
      if (v32) {
        id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v21 = *(id *)(v12 + 8 * v15 + 32);
      }
      Swift::String v22 = v21;
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease();
      id v23 = [v22 description];
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      Swift::String v26 = v25;

      v27._uint64_t countAndFlagsBits = v24;
      v27._object = v26;
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      sub_10000A38C(&qword_1003650A8);
      uint64_t v28 = String.init<A>(describing:)();
      sub_10016B950(60, 0xE100000000000000, v28, v29);
      if ((v30 & 1) == 0)
      {
        String.subscript.getter();
        swift_bridgeObjectRelease();
        uint64_t v10 = v31;
        static String._fromSubstring(_:)();
        swift_bridgeObjectRelease();
      }
      ++v15;
      id v16 = objc_allocWithZone((Class)CULogHandle);
      NSString v17 = String._bridgeToObjectiveC()();
      NSString v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v19 = [v16 initWithSubsystem:v17 category:v18];

      swift_bridgeObjectRetain();
      NSString v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v19 ulog:40 message:v20];
      swift_bridgeObjectRelease();

      [v22 setDelegate:v10];
      unint64_t v12 = v33;
    }
    while (v13 != v15);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000DE0D8(void *a1, void *a2)
{
  return sub_1000DE1C8(a1, a2, (uint64_t)&unk_100327100, (uint64_t)sub_1000DF2C8, (uint64_t)&unk_100327118);
}

uint64_t sub_1000DE1A0(void *a1, void *a2)
{
  return sub_1000DE1C8(a1, a2, (uint64_t)&unk_1003270B0, (uint64_t)sub_1000DF240, (uint64_t)&unk_1003270C8);
}

uint64_t sub_1000DE1C8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)&v5[OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_dispatchQueue];
  id v16 = (void *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  void v16[4] = v5;
  v16[5] = ObjectType;
  aBlock[4] = v24;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A0AC;
  aBlock[3] = v25;
  NSString v17 = _Block_copy(aBlock);
  id v18 = v15;
  id v19 = a1;
  id v20 = a2;
  id v21 = v5;
  static DispatchQoS.unspecified.getter();
  uint64_t v28 = _swiftEmptyArrayStorage;
  sub_10004D1C4();
  sub_10000A38C((uint64_t *)&unk_10035E800);
  sub_10000B010(qword_100363D60, (uint64_t *)&unk_10035E800);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v26);
  return swift_release();
}

uint64_t sub_1000DE518(void *a1, void *a2)
{
  return sub_1000DE1C8(a1, a2, (uint64_t)&unk_100327060, (uint64_t)sub_1000DF1FC, (uint64_t)&unk_100327078);
}

uint64_t sub_1000DE5E0(void *a1, void *a2)
{
  return sub_1000DE1C8(a1, a2, (uint64_t)&unk_100327010, (uint64_t)sub_1000DF1B4, (uint64_t)&unk_100327028);
}

void *sub_1000DE608(void *a1, void *a2, int a3, uint64_t a4, Swift::Int a5, uint64_t a6, void *a7)
{
  _StringGuts.grow(_:)(a5);
  swift_bridgeObjectRelease();
  id v12 = [a1 name];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  v16._uint64_t countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = a6;
  v17._object = a7;
  String.append(_:)(v17);
  id v18 = [a2 description];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v21 = v20;

  v22._uint64_t countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  sub_10016ABE4(0x20656D6F48, (void *)0xE500000000000000, 0, a4, (uint64_t)&off_100326E60);
  swift_bridgeObjectRelease();
  return sub_1000DD71C();
}

uint64_t sub_1000DE7F4(uint64_t a1, uint64_t a2)
{
  return sub_1000DCE48();
}

void *sub_1000DE94C(void *a1, int a2, uint64_t a3, Swift::Int a4, uint64_t a5, void *a6)
{
  _StringGuts.grow(_:)(a4);
  swift_bridgeObjectRelease();
  uint64_t v16 = a5;
  Swift::String v17 = a6;
  id v10 = [a1 description];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  v14._uint64_t countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  sub_10016ABE4(v16, v17, 0, a3, (uint64_t)&off_100326E60);
  swift_bridgeObjectRelease();
  return sub_1000DDC1C();
}

const char *sub_1000DEAC4()
{
  return "uniqueIdentifier";
}

uint64_t sub_1000DEAD4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000DEB0C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000DEB4C()
{
  sub_1000DCBD0(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void (**)(void))(v0 + 32));
}

uint64_t sub_1000DEB58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DEB68()
{
  return swift_release();
}

uint64_t sub_1000DEB70()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::String v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v15[0] - 8);
  __chkstk_darwin(v15[0]);
  NSString v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_dispatchQueue];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  *(void *)(v10 + 24) = ObjectType;
  aBlock[4] = sub_1000DF1A8;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A0AC;
  aBlock[3] = &unk_100326FD8;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = v9;
  uint64_t v13 = v0;
  static DispatchQoS.unspecified.getter();
  v15[1] = _swiftEmptyArrayStorage;
  sub_10004D1C4();
  sub_10000A38C((uint64_t *)&unk_10035E800);
  sub_10000B010(qword_100363D60, (uint64_t *)&unk_10035E800);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, void))(v6 + 8))(v8, v15[0]);
  return swift_release();
}

uint64_t sub_1000DEE14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v14 = *(void **)&v4[OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_dispatchQueue];
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = a1;
  v15[3] = v4;
  v15[4] = ObjectType;
  aBlock[4] = v21;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A0AC;
  aBlock[3] = v22;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v14;
  id v18 = a1;
  uint64_t v19 = v4;
  static DispatchQoS.unspecified.getter();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_10004D1C4();
  sub_10000A38C((uint64_t *)&unk_10035E800);
  sub_10000B010(qword_100363D60, (uint64_t *)&unk_10035E800);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v23);
  return swift_release();
}

uint64_t sub_1000DF0B8()
{
  return _swift_deallocObject(v0, 40, 7);
}

void *sub_1000DF0F8()
{
  return sub_1000DE94C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), 26, 0xD000000000000018, (void *)0x80000001002BD470);
}

void *sub_1000DF134()
{
  return sub_1000DE94C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), 23, 0xD000000000000015, (void *)0x80000001002BD4F0);
}

uint64_t sub_1000DF170()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000DF1A8()
{
  return sub_1000DE7F4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void *sub_1000DF1B4()
{
  return sub_1000DE608(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), 23, 0x6465766F6D657220, (void *)0xEE00207265737520);
}

void *sub_1000DF1FC()
{
  return sub_1000DE608(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), 21, 0x7520646564646120, (void *)0xEC00000020726573);
}

void *sub_1000DF240()
{
  return sub_1000DE608(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), 28, 0xD000000000000013, (void *)0x80000001002BD530);
}

uint64_t sub_1000DF280()
{
  return _swift_deallocObject(v0, 48, 7);
}

void *sub_1000DF2C8()
{
  return sub_1000DE608(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), 26, 0xD000000000000011, (void *)0x80000001002BD550);
}

uint64_t sub_1000DF304()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000DF33C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000DF374()
{
  sub_1000DD3D8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000DF3C0(unsigned __int8 a1, uint64_t a2, char a3)
{
  if (a3 < 0)
  {
    uint64_t v9 = 0x286C6C657764;
    uint64_t v4 = sub_10014DD40(a1, a2, a3 & 0x7F);
  }
  else
  {
    uint64_t v9 = 0x2863697373616C63;
    int v3 = a1;
    if (a1)
    {
      if (a1 == 1) {
        uint64_t v4 = 0x7373696D736964;
      }
      else {
        uint64_t v4 = 7368560;
      }
      if (v3 == 1) {
        unint64_t v5 = 0xE700000000000000;
      }
      else {
        unint64_t v5 = 0xE300000000000000;
      }
    }
    else
    {
      unint64_t v5 = 0xE700000000000000;
      uint64_t v4 = 0x746E6573657270;
    }
    unint64_t v6 = v5;
  }
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  return v9;
}

uint64_t sub_1000DF49C()
{
  return sub_1000DF3C0(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1000DF4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000DF5C4(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_1000DFB4C);
}

uint64_t sub_1000DF4C0(uint64_t a1, void *a2, char a3)
{
  if (a3 < 0)
  {
    sub_10000F318(a1, (uint64_t)a2, a3 & 0x7F);
    uint64_t v6 = sub_10000F594(a1, a2, a3 & 0x7F);
    uint64_t v8 = 0x2E6C6C657744;
  }
  else
  {
    sub_10000F318(a1, (uint64_t)a2, a3);
    uint64_t v6 = sub_10000F594(a1, a2, a3);
    uint64_t v8 = 0x2E63697373616C43;
  }
  uint64_t v10 = v8;
  String.append(_:)(*(Swift::String *)&v6);
  sub_100020428(a1, (uint64_t)a2, a3);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1000DF5A0()
{
  return sub_1000DF4C0(*(void *)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1000DF5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000DF5C4(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_1000DF5E8);
}

uint64_t sub_1000DF5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return a5(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

uint64_t sub_1000DF5E8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 0x80) == 0)
  {
    if ((a6 & 0x80) == 0)
    {
      switch(a3)
      {
        case 1:
          if (a6 != 1) {
            return 0;
          }
          uint64_t result = 1;
          break;
        case 2:
          if (a6 != 2) {
            return 0;
          }
          uint64_t result = 1;
          break;
        case 3:
          if (a6 != 3) {
            return 0;
          }
          uint64_t result = 1;
          break;
        case 4:
          switch(a1)
          {
            case 1:
              if (a6 != 4 || a4 != 1 || a5) {
                return 0;
              }
              uint64_t result = 1;
              break;
            case 2:
              if (a6 != 4 || a4 != 2 || a5) {
                return 0;
              }
              uint64_t result = 1;
              break;
            case 3:
              if (a6 != 4 || a4 != 3 || a5) {
                return 0;
              }
              uint64_t result = 1;
              break;
            case 4:
              if (a6 != 4 || a4 != 4 || a5) {
                return 0;
              }
              uint64_t result = 1;
              break;
            default:
              if (a6 != 4 || a5 | a4) {
                return 0;
              }
              uint64_t result = 1;
              break;
          }
          break;
        default:
          if (a6) {
            return 0;
          }
          uint64_t result = 1;
          break;
      }
      return result;
    }
    return 0;
  }
  if ((a6 & 0x80) == 0) {
    return 0;
  }
  int v7 = a6 & 0x7F;
  switch(a3 & 0x7F)
  {
    case 1:
      if (v7 != 1) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (v7 != 2) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (v7 != 3) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 4:
      switch(a1)
      {
        case 1:
          if (v7 != 4 || a4 != 1 || a5) {
            return 0;
          }
          uint64_t result = 1;
          break;
        case 2:
          if (v7 != 4 || a4 != 2 || a5) {
            return 0;
          }
          uint64_t result = 1;
          break;
        case 3:
          if (v7 != 4 || a4 != 3 || a5) {
            return 0;
          }
          uint64_t result = 1;
          break;
        case 4:
          if (v7 != 4 || a4 != 4 || a5) {
            return 0;
          }
          uint64_t result = 1;
          break;
        default:
          if (v7 != 4 || a5 | a4) {
            return 0;
          }
          uint64_t result = 1;
          break;
      }
      break;
    default:
      if ((a6 & 0x7F) != 0) {
        return 0;
      }
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BannerEvent(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1000DF948(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_10001F9E8);
}

uint64_t destroy for BannerEvent(uint64_t a1)
{
  return sub_100020428(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t *assignWithCopy for BannerEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1000DF9C4(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_10001F9E8, (void (*)(uint64_t, uint64_t, uint64_t))sub_100020428);
}

uint64_t *assignWithTake for BannerEvent(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000DFA48(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_100020428);
}

uint64_t sub_1000DF8E0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_1000DF8EC(uint64_t result)
{
  *(unsigned char *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_1000DF8FC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 7 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for BannerEvent()
{
  return &type metadata for BannerEvent;
}

uint64_t initializeBufferWithCopyOfBuffer for BannerEffect(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1000DF948(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_10001F894);
}

uint64_t destroy for BannerEffect(uint64_t a1)
{
  return sub_100020330(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1000DF948(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for BannerEffect(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1000DF9C4(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_10001F894, (void (*)(uint64_t, uint64_t, uint64_t))sub_100020330);
}

uint64_t *sub_1000DF9C4(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  uint64_t v12 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for BannerEffect(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000DFA48(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_100020330);
}

uint64_t *sub_1000DFA48(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t _s17proximitycontrold11BannerEventOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x1F && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 31);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 16) >> 2) & 0x1E | (*(unsigned __int8 *)(a1 + 16) >> 7)) ^ 0x1F;
  if (v3 >= 0x1E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s17proximitycontrold11BannerEventOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1E)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 31;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x1F) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1F) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 8 * (((-a2 >> 1) & 0xF) - 16 * a2);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BannerEffect()
{
  return &type metadata for BannerEffect;
}

BOOL sub_1000DFB4C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3 < 0)
  {
    if ((a6 & 0x80) == 0) {
      return 0;
    }
    int v7 = a6 & 0x7F;
    switch(a3 & 0x7F)
    {
      case 1:
        BOOL v8 = (a1 & 1) == 0;
        if (v7 != 1) {
          return 0;
        }
        return ((v8 ^ a4) & 1) != 0;
      case 2:
        if (v7 != 2) {
          return 0;
        }
        if (a2)
        {
          if (!a5 || (a1 != a4 || a2 != a5) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            return 0;
          }
        }
        else if (a5)
        {
          sub_100020330(a1, 0, a3);
          return 0;
        }
        return 1;
      case 3:
        BOOL v8 = (a1 & 1) == 0;
        if (v7 != 3) {
          return 0;
        }
        return ((v8 ^ a4) & 1) != 0;
      case 4:
        return v7 == 4 && !(a5 | a4);
      default:
        return (a6 & 0x7F) == 0 && *(double *)&a1 == *(double *)&a4;
    }
  }
  return (a6 & 0x80) == 0 && a4 == a1;
}

uint64_t initializeWithCopy for AnalyticsInteger(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AnalyticsInteger(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 initializeWithTake for TransferEffect(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AnalyticsInteger(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnalyticsInteger(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnalyticsInteger(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsInteger()
{
  return &type metadata for AnalyticsInteger;
}

void *sub_1000DFE18()
{
  return &protocol witness table for Int;
}

uint64_t sub_1000DFE24()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000DFEC4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 96));
}

uint64_t sub_1000DFF20()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(*(void *)v0);
  char v5 = (char *)v14 - v4;
  v14[0] = v3;
  swift_getMetatypeMetadata();
  uint64_t v6 = String.init<A>(describing:)();
  BOOL v8 = v7;
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  v9._uint64_t countAndFlagsBits = 60;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  v10._uint64_t countAndFlagsBits = v6;
  v10._object = v8;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 32;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  (*(void (**)(char *, char *))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 16))(v5, &v0[*(void *)(*(void *)v0 + 96)]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v12._uint64_t countAndFlagsBits = 62;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  return v14[0];
}

uint64_t *sub_1000E00EC()
{
  uint64_t v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 96));
  return v0;
}

uint64_t sub_1000E016C()
{
  return sub_1000E13FC((void (*)(void))sub_1000E00EC);
}

uint64_t type metadata accessor for Publishing()
{
  return sub_10000F2E4();
}

uint64_t sub_1000E019C()
{
  type metadata accessor for AnyPublisher();
  type metadata accessor for Optional();
  type metadata accessor for CurrentValueSubject();
  swift_getWitnessTable();
  type metadata accessor for Publishers.Map();
  swift_getWitnessTable();
  swift_getWitnessTable();
  type metadata accessor for Publishers.SwitchToLatest();
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_1000E0340()
{
  return sub_1000DFF20();
}

uint64_t sub_1000E0364@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for AnyPublisher();
  type metadata accessor for Optional();
  type metadata accessor for CurrentValueSubject();
  swift_getWitnessTable();
  void v16[4] = v4;
  v16[5] = type metadata accessor for Publishers.Map();
  v16[6] = swift_getWitnessTable();
  v16[7] = swift_getWitnessTable();
  uint64_t v5 = type metadata accessor for Publishers.SwitchToLatest();
  uint64_t v6 = type metadata accessor for Optional();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  Swift::String v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  Swift::String v12 = (char *)v16 - v11;
  uint64_t v13 = (char *)v1 + *(void *)(v3 + 104);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v13, v6);
  uint64_t v14 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v5) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a1, v12, v5);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  sub_1000E0694((uint64_t)v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v10, a1, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v5);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v10, v6);
  return swift_endAccess();
}

uint64_t sub_1000E0694(uint64_t a1)
{
  type metadata accessor for Optional();
  type metadata accessor for CurrentValueSubject();
  type metadata accessor for AnyPublisher();
  swift_getWitnessTable();
  uint64_t v2 = type metadata accessor for Publishers.Map();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v7 - v4;
  v7[1] = *(void *)(a1 + 24);
  swift_retain();
  swift_retain();
  Publisher.map<A>(_:)();
  swift_release();
  swift_release();
  swift_getWitnessTable();
  swift_getWitnessTable();
  Publisher<>.switchToLatest()();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1000E08A0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v25 = a3;
  uint64_t v22 = *a2;
  uint64_t v4 = *(void *)(v22 + class metadata base offset for CurrentValueSubject);
  uint64_t v5 = type metadata accessor for Just();
  uint64_t v23 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::String v12 = (char *)&v21 - v11;
  uint64_t v13 = *(void *)(v4 - 8);
  uint64_t v14 = __chkstk_darwin(v10);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v18 = (char *)&v21 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v24, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t v26 = a2;
    swift_getWitnessTable();
    uint64_t result = Publisher.eraseToAnyPublisher()();
    uint64_t v20 = result;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v12, v4);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v4);
    Just.init(_:)();
    swift_getWitnessTable();
    uint64_t v20 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v5);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v4);
  }
  *uint64_t v25 = v20;
  return result;
}

uint64_t sub_1000E0BF4()
{
  return CurrentValueSubject.value.getter();
}

uint64_t sub_1000E0C18()
{
  return CurrentValueSubject.value.getter();
}

uint64_t sub_1000E0C3C()
{
  uint64_t v0 = type metadata accessor for AnyPublisher();
  type metadata accessor for Optional();
  type metadata accessor for CurrentValueSubject();
  swift_getWitnessTable();
  v6[0] = v0;
  v6[1] = type metadata accessor for Publishers.Map();
  v6[2] = swift_getWitnessTable();
  v6[3] = swift_getWitnessTable();
  uint64_t v1 = type metadata accessor for Publishers.SwitchToLatest();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v6 - v3;
  sub_1000E0364((uint64_t)v6 - v3);
  swift_getWitnessTable();
  dispatch thunk of Publisher.receive<A>(subscriber:)();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1000E0E2C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = type metadata accessor for Optional();
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - v5;
  uint64_t v7 = *(void *)(v2 - 8);
  uint64_t v8 = __chkstk_darwin(v4);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  Swift::String v12 = (char *)&v30 - v11;
  sub_10000A38C((uint64_t *)&unk_10035E7E0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10028FC10;
  uint64_t v32 = v1;
  swift_getMetatypeMetadata();
  *(void *)(v13 + 32) = String.init<A>(describing:)();
  *(void *)(v13 + 40) = v14;
  uint64_t v32 = 0;
  unint64_t v33 = 0xE000000000000000;
  v15._uint64_t countAndFlagsBits = 0x3D65756C6176;
  v15._object = (void *)0xE600000000000000;
  String.append(_:)(v15);
  CurrentValueSubject.value.getter();
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v12, v2);
  unint64_t v17 = v33;
  *(void *)(v13 + 48) = v32;
  *(void *)(v13 + 56) = v17;
  CurrentValueSubject.value.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v31);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v6, v2);
    uint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
    _StringGuts.grow(_:)(16);
    v18._uint64_t countAndFlagsBits = 0x656469727265766FLL;
    v18._object = (void *)0xEE003D65756C6156;
    String.append(_:)(v18);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    uint64_t v19 = v32;
    unint64_t v20 = v33;
    unint64_t v22 = *(void *)(v13 + 16);
    unint64_t v21 = *(void *)(v13 + 24);
    if (v22 >= v21 >> 1) {
      uint64_t v13 = (uint64_t)sub_10008892C((char *)(v21 > 1), v22 + 1, 1, (char *)v13);
    }
    *(void *)(v13 + 16) = v22 + 1;
    uint64_t v23 = v13 + 16 * v22;
    *(void *)(v23 + 32) = v19;
    *(void *)(v23 + 40) = v20;
    v16(v10, v2);
  }
  uint64_t v32 = v13;
  sub_10000A38C((uint64_t *)&unk_100367D40);
  sub_100089B9C();
  uint64_t v24 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  uint64_t v32 = 60;
  unint64_t v33 = 0xE100000000000000;
  v27._uint64_t countAndFlagsBits = v24;
  v27._object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v28._uint64_t countAndFlagsBits = 62;
  v28._object = (void *)0xE100000000000000;
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_1000E11EC()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  type metadata accessor for AnyPublisher();
  type metadata accessor for Optional();
  type metadata accessor for CurrentValueSubject();
  swift_getWitnessTable();
  type metadata accessor for Publishers.Map();
  swift_getWitnessTable();
  swift_getWitnessTable();
  type metadata accessor for Publishers.SwitchToLatest();
  uint64_t v2 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1000E13E4()
{
  return sub_1000E13FC((void (*)(void))sub_1000E11EC);
}

uint64_t sub_1000E13FC(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Publishing2()
{
  return sub_10000F2E4();
}

uint64_t sub_1000E1470()
{
  return sub_1000E0E2C();
}

uint64_t sub_1000E1494()
{
  return sub_1000E0C3C();
}

uint64_t sub_1000E14B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000E08A0(a1, v2, a2);
}

uint64_t sub_1000E14C0(char a1)
{
  if ((a1 & 1) == 0)
  {
    uint64_t v2 = (char *)_swiftEmptyArrayStorage;
    if ((a1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v2 = sub_10008892C(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v4 = *((void *)v2 + 2);
  unint64_t v3 = *((void *)v2 + 3);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10008892C((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v4 + 1;
  uint64_t v5 = &v2[16 * v4];
  *((void *)v5 + 4) = 6646882;
  *((void *)v5 + 5) = 0xE300000000000000;
  if ((a1 & 2) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_10008892C(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v7 = *((void *)v2 + 2);
    unint64_t v6 = *((void *)v2 + 3);
    if (v7 >= v6 >> 1) {
      uint64_t v2 = sub_10008892C((char *)(v6 > 1), v7 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v7 + 1;
    uint64_t v8 = &v2[16 * v7];
    *((void *)v8 + 4) = 6453109;
    *((void *)v8 + 5) = 0xE300000000000000;
  }
LABEL_12:
  if ((a1 & 4) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_10008892C(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v10 = *((void *)v2 + 2);
    unint64_t v9 = *((void *)v2 + 3);
    if (v10 >= v9 >> 1) {
      uint64_t v2 = sub_10008892C((char *)(v9 > 1), v10 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v10 + 1;
    uint64_t v11 = &v2[16 * v10];
    *((void *)v11 + 4) = 1768319351;
    *((void *)v11 + 5) = 0xE400000000000000;
  }
  v22[3] = &type metadata for Feature;
  v22[4] = sub_10000CC08();
  LOBYTE(v22[0]) = 9;
  char v12 = isFeatureEnabled(_:)();
  sub_10000CC5C((uint64_t)v22);
  if (a1 & 8) != 0 && (v12)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_10008892C(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v14 = *((void *)v2 + 2);
    unint64_t v13 = *((void *)v2 + 3);
    if (v14 >= v13 >> 1) {
      uint64_t v2 = sub_10008892C((char *)(v13 > 1), v14 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v14 + 1;
    Swift::String v15 = &v2[16 * v14];
    *((void *)v15 + 4) = 3306594;
    *((void *)v15 + 5) = 0xE300000000000000;
    goto LABEL_26;
  }
  if (*((void *)v2 + 2))
  {
LABEL_26:
    v22[0] = 91;
    v22[1] = 0xE100000000000000;
    sub_10000A38C((uint64_t *)&unk_100367D40);
    sub_100089B9C();
    uint64_t v16 = BidirectionalCollection<>.joined(separator:)();
    Swift::String v18 = v17;
    swift_bridgeObjectRelease();
    v19._uint64_t countAndFlagsBits = v16;
    v19._object = v18;
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    v20._uint64_t countAndFlagsBits = 93;
    v20._object = (void *)0xE100000000000000;
    String.append(_:)(v20);
    return v22[0];
  }
  swift_bridgeObjectRelease();
  return 0x297974706D6528;
}

uint64_t sub_1000E17A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10000AB1C();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

NSString sub_1000E17E8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1003AC7D0 = (uint64_t)result;
  return result;
}

uint64_t sub_1000E1820()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000E1828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 56);
}

uint64_t sub_1000E1830()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      uint64_t v5 = &v4;
      swift_getTupleTypeLayout2();
      unint64_t v6 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_1000E193C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  char v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9;
  uint64_t v11 = v6 + v9;
  uint64_t v12 = *(void *)(v8 + 64);
  unint64_t v13 = ((v6 + v10) & ~v10) + v12;
  if (v13 <= ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v14 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v14 = v13;
  }
  unsigned int v15 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  int v16 = (*(_DWORD *)(v5 + 80) | v9) & 0x100000;
  if (v15 > 7 || v16 != 0 || v14 + 1 > 0x18)
  {
    uint64_t v19 = *(void *)a2;
    *char v4 = *(void *)a2;
    char v4 = (void *)(v19 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v20 = ~v10;
    unsigned int v21 = a2[v14];
    if (v21 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v22 = v14;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *a2;
          if (v14 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 2:
          int v23 = *(unsigned __int16 *)a2;
          if (v14 >= 4) {
            goto LABEL_25;
          }
          goto LABEL_23;
        case 3:
          int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v14 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 4:
          int v23 = *(_DWORD *)a2;
          if (v14 < 4) {
LABEL_23:
          }
            unsigned int v21 = (v23 | ((v21 - 2) << (8 * v14))) + 2;
          else {
LABEL_25:
          }
            unsigned int v21 = v23 + 2;
          break;
        default:
          break;
      }
    }
    (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
    unint64_t v24 = (unint64_t)&a2[v11] & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v11) & v20, v24, v7);
    if (v21 == 1)
    {
      *((unsigned char *)v4 + v14) = 1;
    }
    else
    {
      *(void *)((v12 + 7 + (((unint64_t)v4 + v11) & v20)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v12 + 7 + v24) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v4 + v14) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return v4;
}

uint64_t sub_1000E1BAC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = ~v6;
  uint64_t v8 = v3 + v6;
  unint64_t v9 = ((v3 + v6) & ~v6) + *(void *)(v5 + 64);
  if (v9 <= ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v9 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unsigned int v10 = a1[v9];
  if (v10 >= 2)
  {
    if (v9 <= 3) {
      uint64_t v11 = v9;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a1;
        goto LABEL_12;
      case 2:
        int v12 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v12 = *(_DWORD *)a1;
LABEL_12:
        int v13 = (v12 | ((v10 - 2) << (8 * v9))) + 2;
        unsigned int v14 = v12 + 2;
        if (v9 >= 4) {
          unsigned int v10 = v14;
        }
        else {
          unsigned int v10 = v13;
        }
        break;
      default:
        break;
    }
  }
  (*(void (**)(unsigned __int8 *))(*(void *)(*(void *)(a2 + 16) - 8) + 8))(a1);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t))(v5 + 8))((unint64_t)&a1[v8] & v7, v4);
  if (v10 != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000E1DA0(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = v5 + v8;
  uint64_t v11 = *(void *)(v7 + 64);
  unint64_t v12 = ((v5 + v8) & ~v8) + v11;
  if (v12 <= ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v13 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v13 = v12;
  }
  unsigned int v14 = a2[v13];
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v15 = v13;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *a2;
        goto LABEL_13;
      case 2:
        int v16 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v16 = *(_DWORD *)a2;
LABEL_13:
        int v17 = (v16 | ((v14 - 2) << (8 * v13))) + 2;
        unsigned int v18 = v16 + 2;
        if (v13 >= 4) {
          unsigned int v14 = v18;
        }
        else {
          unsigned int v14 = v17;
        }
        break;
      default:
        break;
    }
  }
  (*(void (**)(uint64_t, unsigned __int8 *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1, a2);
  unint64_t v19 = (unint64_t)&a2[v10] & v9;
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))((v10 + a1) & v9, v19, v6);
  if (v14 == 1)
  {
    char v20 = 1;
  }
  else
  {
    *(void *)((v11 + 7 + ((v10 + a1) & v9)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v11 + 7 + v19) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    char v20 = 0;
  }
  *(unsigned char *)(a1 + v13) = v20;
  return a1;
}

unsigned __int8 *sub_1000E1FAC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v7 + 64);
    uint64_t v9 = *(void *)(v6 - 8);
    uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v11 = ~v10;
    uint64_t v12 = v8 + v10;
    uint64_t v25 = *(void *)(v9 + 64);
    unint64_t v13 = ((v8 + v10) & ~v10) + v25;
    if (v13 <= ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
      unint64_t v14 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    else {
      unint64_t v14 = v13;
    }
    unsigned int v15 = a1[v14];
    if (v15 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v16 = v14;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a1;
          if (v14 < 4) {
            goto LABEL_15;
          }
          goto LABEL_17;
        case 2:
          int v17 = *(unsigned __int16 *)a1;
          if (v14 >= 4) {
            goto LABEL_17;
          }
          goto LABEL_15;
        case 3:
          int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v14 < 4) {
            goto LABEL_15;
          }
          goto LABEL_17;
        case 4:
          int v17 = *(_DWORD *)a1;
          if (v14 < 4) {
LABEL_15:
          }
            unsigned int v15 = (v17 | ((v15 - 2) << (8 * v14))) + 2;
          else {
LABEL_17:
          }
            unsigned int v15 = v17 + 2;
          break;
        default:
          break;
      }
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v5);
    uint64_t v24 = v11;
    unint64_t v18 = (unint64_t)&a1[v12] & v11;
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v18, v6);
    if (v15 != 1) {
      swift_bridgeObjectRelease();
    }
    unsigned int v19 = a2[v14];
    if (v19 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v20 = v14;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          if (v14 < 4) {
            goto LABEL_30;
          }
          goto LABEL_32;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          if (v14 >= 4) {
            goto LABEL_32;
          }
          goto LABEL_30;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v14 < 4) {
            goto LABEL_30;
          }
          goto LABEL_32;
        case 4:
          int v21 = *(_DWORD *)a2;
          if (v14 < 4) {
LABEL_30:
          }
            unsigned int v19 = (v21 | ((v19 - 2) << (8 * v14))) + 2;
          else {
LABEL_32:
          }
            unsigned int v19 = v21 + 2;
          break;
        default:
          break;
      }
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v5);
    unint64_t v22 = (unint64_t)&a2[v12] & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v18, v22, v6);
    if (v19 == 1)
    {
      a1[v14] = 1;
    }
    else
    {
      *(void *)((v25 + 7 + v18) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v25 + 7 + v22) & 0xFFFFFFFFFFFFFFF8);
      a1[v14] = 0;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t sub_1000E22E8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = v5 + v8;
  uint64_t v11 = *(void *)(v7 + 64);
  unint64_t v12 = ((v5 + v8) & ~v8) + v11;
  if (v12 <= ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v13 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v13 = v12;
  }
  unsigned int v14 = a2[v13];
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v15 = v13;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *a2;
        goto LABEL_13;
      case 2:
        int v16 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v16 = *(_DWORD *)a2;
LABEL_13:
        int v17 = (v16 | ((v14 - 2) << (8 * v13))) + 2;
        unsigned int v18 = v16 + 2;
        if (v13 >= 4) {
          unsigned int v14 = v18;
        }
        else {
          unsigned int v14 = v17;
        }
        break;
      default:
        break;
    }
  }
  (*(void (**)(uint64_t, unsigned __int8 *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1, a2);
  unint64_t v19 = (unint64_t)&a2[v10] & v9;
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 32))((v10 + a1) & v9, v19, v6);
  if (v14 == 1)
  {
    char v20 = 1;
  }
  else
  {
    char v20 = 0;
    *(void *)((v11 + 7 + ((v10 + a1) & v9)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v11 + 7 + v19) & 0xFFFFFFFFFFFFFFF8);
  }
  *(unsigned char *)(a1 + v13) = v20;
  return a1;
}

unsigned __int8 *sub_1000E24F0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v7 + 64);
    uint64_t v9 = *(void *)(v6 - 8);
    uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v11 = ~v10;
    uint64_t v12 = v8 + v10;
    uint64_t v26 = *(void *)(v9 + 64);
    unint64_t v13 = ((v8 + v10) & ~v10) + v26;
    if (v13 <= ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
      unint64_t v14 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    else {
      unint64_t v14 = v13;
    }
    unsigned int v15 = a1[v14];
    if (v15 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v16 = v14;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a1;
          if (v14 < 4) {
            goto LABEL_15;
          }
          goto LABEL_17;
        case 2:
          int v17 = *(unsigned __int16 *)a1;
          if (v14 >= 4) {
            goto LABEL_17;
          }
          goto LABEL_15;
        case 3:
          int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v14 < 4) {
            goto LABEL_15;
          }
          goto LABEL_17;
        case 4:
          int v17 = *(_DWORD *)a1;
          if (v14 < 4) {
LABEL_15:
          }
            unsigned int v15 = (v17 | ((v15 - 2) << (8 * v14))) + 2;
          else {
LABEL_17:
          }
            unsigned int v15 = v17 + 2;
          break;
        default:
          break;
      }
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v5);
    uint64_t v25 = v11;
    unint64_t v18 = (unint64_t)&a1[v12] & v11;
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v18, v6);
    if (v15 != 1) {
      swift_bridgeObjectRelease();
    }
    unsigned int v19 = a2[v14];
    if (v19 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v20 = v14;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          if (v14 < 4) {
            goto LABEL_30;
          }
          goto LABEL_32;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          if (v14 >= 4) {
            goto LABEL_32;
          }
          goto LABEL_30;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v14 < 4) {
            goto LABEL_30;
          }
          goto LABEL_32;
        case 4:
          int v21 = *(_DWORD *)a2;
          if (v14 < 4) {
LABEL_30:
          }
            unsigned int v19 = (v21 | ((v19 - 2) << (8 * v14))) + 2;
          else {
LABEL_32:
          }
            unsigned int v19 = v21 + 2;
          break;
        default:
          break;
      }
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v5);
    unint64_t v22 = (unint64_t)&a2[v12] & v25;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32))(v18, v22, v6);
    if (v19 == 1)
    {
      char v23 = 1;
    }
    else
    {
      char v23 = 0;
      *(void *)((v26 + 7 + v18) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v26 + 7 + v22) & 0xFFFFFFFFFFFFFFF8);
    }
    a1[v14] = v23;
  }
  return a1;
}

uint64_t sub_1000E2828(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 24) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  unint64_t v4 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v3 > v4) {
    unint64_t v4 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)
  }
         + *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 24) - 8) + 80))
       + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  unint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1000E29B4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(void *)(*(void *)(a4 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a4 + 24) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  if (v5 <= ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v5 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1000E2BD4);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1000E2BFC(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = ((*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)
       + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  unint64_t v3 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v2 > v3) {
    unint64_t v3 = ((*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)
  }
         + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80))
       + *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1000E2D0C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 > 1)
  {
    unint64_t v5 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)
         + *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 24) - 8) + 80))
       + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
    if (v5 <= ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
      size_t v6 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    else {
      size_t v6 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)
    }
           + *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 24) - 8) + 80))
         + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
    unsigned int v7 = a2 - 2;
    if (v6 < 4)
    {
      unsigned int v8 = v7 >> (8 * v6);
      int v9 = v7 & ~(-1 << (8 * v6));
      a1[v6] = v8 + 2;
      bzero(a1, v6);
      if (v6 == 3)
      {
        *(_WORD *)a1 = v9;
        a1[2] = BYTE2(v9);
      }
      else if (v6 == 2)
      {
        *(_WORD *)a1 = v9;
      }
      else
      {
        *a1 = v9;
      }
    }
    else
    {
      a1[v6] = 2;
      bzero(a1, v6);
      *(_DWORD *)a1 = v7;
    }
  }
  else
  {
    unint64_t v4 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)
         + *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 24) - 8) + 80))
       + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
    if (v4 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
      unint64_t v4 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for StateError()
{
  return swift_getGenericMetadata();
}

void sub_1000E2ED8()
{
  uint64_t v1 = v0;
  id v2 = sub_1001F56B0();
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 ulog:40 message:v3];

  uint64_t v4 = OBJC_IVAR____TtC17proximitycontrold14TransferRecord_published;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_published) & 1) == 0)
  {
    sub_1000E377C((uint64_t)v8);
    sub_1002604E4();
    sub_1000E5410((uint64_t)v8);
    *(unsigned char *)(v1 + v4) = 1;
    unsigned int v7 = *(void (**)(uint64_t))(v1 + 16);
    if (!v7) {
      return;
    }
    goto LABEL_5;
  }
  id v5 = sub_1001F56B0();
  NSString v6 = String._bridgeToObjectiveC()();
  [v5 ulog:60 message:v6];

  unsigned int v7 = *(void (**)(uint64_t))(v1 + 16);
  if (v7)
  {
LABEL_5:
    swift_retain();
    v7(v1);
    sub_10000F088((uint64_t)v7);
  }
}

uint64_t sub_1000E3014()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A38C(&qword_1003652D0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v29 = (uint64_t)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A38C(&qword_10035E158);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  int v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v30 = (char *)&v28 - v13;
  __chkstk_darwin(v12);
  unsigned int v15 = (char *)&v28 - v14;
  sub_1000E33B0((unsigned char *)&v28 - v14);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  if (v16(v15, 1, v1) == 1)
  {
    sub_10000D78C((uint64_t)v15, &qword_10035E158);
    return 0;
  }
  else
  {
    Swift::String v28 = v4;
    uint64_t v18 = v0 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferStarted;
    swift_beginAccess();
    uint64_t v19 = 1;
    int v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v18, 1, v5);
    uint64_t v21 = (uint64_t)v30;
    if (!v20)
    {
      uint64_t v22 = v18;
      uint64_t v23 = v29;
      sub_10000D728(v22, v29, &qword_1003652D0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v21, v23, v1);
      uint64_t v19 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v21, v19, 1, v1);
    sub_10000D728(v21, (uint64_t)v11, &qword_10035E158);
    if (v16(v11, 1, v1) == 1)
    {
      sub_10000D78C((uint64_t)v11, &qword_10035E158);
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v24 = v28;
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v28, v11, v1);
      Date.timeIntervalSince(_:)();
      uint64_t v26 = v25;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v24, v1);
      uint64_t v17 = v26;
    }
    sub_10000D78C(v21, &qword_10035E158);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v15, v1);
  }
  return v17;
}

uint64_t sub_1000E33B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = sub_10000A38C(&qword_1003652D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_10000A38C(&qword_10035E158);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = v1 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferSucceeded;
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3))
  {
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  }
  else
  {
    sub_10000D728(v10, (uint64_t)v6, &qword_1003652D0);
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 32);
    v14(v9, v6, v12);
    unsigned int v15 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56);
    v15(v9, 0, 1, v12);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) != 1)
    {
      v14(a1, v9, v12);
      return ((uint64_t (*)(unsigned char *, void, uint64_t, uint64_t))v15)(a1, 0, 1, v12);
    }
  }
  uint64_t v16 = v1 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferFailed;
  swift_beginAccess();
  uint64_t v17 = sub_10000A38C((uint64_t *)&unk_1003652E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17))
  {
    uint64_t v18 = type metadata accessor for Date();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
  else
  {
    uint64_t v19 = v16 + *(int *)(v17 + 28);
    uint64_t v20 = type metadata accessor for Date();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v21 + 16))(a1, v19, v20);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
  }
  return sub_10000D78C((uint64_t)v9, &qword_10035E158);
}

uint64_t sub_1000E377C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_10000A38C(&qword_1003653F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v81 = 0xD000000000000015;
  unint64_t v82 = 0x80000001002BD810;
  v80[3] = v4;
  v80[0] = v2;
  swift_retain();
  uint64_t v8 = sub_1000283AC(v80);
  uint64_t v10 = v9;
  sub_10000CC5C((uint64_t)v80);
  v11._uint64_t countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  id v12 = sub_1001F56B0();
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 ulog:40 message:v13];
  swift_bridgeObjectRelease();

  if (qword_10035A520 != -1) {
    swift_once();
  }
  id v14 = *(id *)(qword_1003AC750 + 576);
  int v15 = sub_1000FD938();

  int v72 = v15;
  if ((v15 & 1) == 0)
  {
    uint64_t v16 = *(void **)(qword_1003AC750 + 576);
    uint64_t v17 = *(void **)((char *)v16 + *(void *)((swift_isaMask & *v16) + 0x70));
    if (v17)
    {
      uint64_t v18 = v16;
      id v19 = v17;
      NSString v20 = String._bridgeToObjectiveC()();
      [v19 setBool:1 forKey:v20];
    }
  }
  int v71 = *((unsigned __int8 *)v2 + 32);
  unint64_t v21 = 0xE800000000000000;
  unint64_t v22 = 0x656D695465636146;
  switch(*((unsigned char *)v2 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_contentType))
  {
    case 1:
      unint64_t v21 = 0xE500000000000000;
      unint64_t v22 = 0x636973754DLL;
      break;
    case 2:
      unint64_t v21 = 0xE500000000000000;
      unint64_t v22 = 0x656E6F6850;
      break;
    case 3:
      unint64_t v21 = 0xE700000000000000;
      unint64_t v22 = 0x74736163646F50;
      break;
    case 4:
      unint64_t v22 = 0xD000000000000019;
      uint64_t v23 = "ThirdPartyCallApplication";
      goto LABEL_12;
    case 5:
      unint64_t v22 = 0xD00000000000001ALL;
      uint64_t v23 = "ThirdPartyMusicApplication";
LABEL_12:
      unint64_t v21 = (unint64_t)(v23 - 32) | 0x8000000000000000;
      break;
    case 6:
      unint64_t v21 = 0xEB000000006C6C61;
      unint64_t v22 = 0x436E776F6E6B6E55;
      break;
    case 7:
      unint64_t v21 = 0xEC00000061696465;
      unint64_t v22 = 0x4D6E776F6E6B6E55;
      break;
    case 8:
      unint64_t v21 = 0xE700000000000000;
      unint64_t v22 = 0x6E776F6E6B6E55;
      break;
    default:
      break;
  }
  unint64_t v69 = v22;
  unint64_t v70 = v21;
  if (qword_10035A590 != -1) {
    swift_once();
  }
  sub_100141D74();
  uint64_t v24 = sub_1001426E0(1);
  uint64_t v67 = 0;
  uint64_t v68 = v24;
  swift_release();
  sub_100141D74();
  uint64_t v25 = sub_1001426E0(28);
  uint64_t v65 = 0;
  uint64_t v66 = v25;
  swift_release();
  sub_100141D74();
  uint64_t v64 = sub_1001426E0(7);
  swift_release();
  uint64_t v63 = sub_1000E3014();
  int v61 = v26;
  long long v73 = v2;
  uint64_t v27 = (uint64_t)v2 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferFailed;
  swift_beginAccess();
  sub_10000D728(v27, (uint64_t)v7, &qword_1003653F0);
  uint64_t v28 = sub_10000A38C((uint64_t *)&unk_1003652E0);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48);
  int v60 = v29(v7, 1, v28);
  sub_10000D78C((uint64_t)v7, &qword_1003653F0);
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  if (!v29((char *)v27, 1, v28))
  {
    swift_getErrorValue();
    uint64_t v32 = v74;
    swift_errorRetain();
    unint64_t v33 = (void *)sub_100117140(v32);
    id v34 = [v33 code];

    unint64_t v81 = (unint64_t)v34;
    uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v31 = v35;
    swift_errorRelease();
  }
  uint64_t v59 = v31;
  uint64_t v62 = 0;
  if (v29((char *)v27, 1, v28))
  {
    uint64_t v36 = 0;
    uint64_t v37 = 0;
  }
  else
  {
    swift_getErrorValue();
    uint64_t v38 = v75;
    uint64_t v58 = v30;
    swift_errorRetain();
    uint64_t v39 = (void *)sub_100117140(v38);
    swift_errorRelease();
    id v40 = [v39 domain];

    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = v41;

    uint64_t v30 = v58;
  }
  if (v29((char *)v27, 1, v28))
  {
    uint64_t v42 = 0;
    uint64_t v43 = 0;
  }
  else
  {
    swift_getErrorValue();
    swift_errorRetain();
    uint64_t v42 = Error.localizedDescription.getter();
    uint64_t v43 = v44;
    swift_errorRelease();
  }
  BOOL v45 = v62 != 0;
  uint64_t v47 = *(void *)((char *)v73 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_deviceModel);
  uint64_t v46 = *(void *)((char *)v73 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_deviceModel + 8);
  BOOL v48 = v65 != 0;
  unint64_t v49 = *(void *)((char *)v73 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_direction);
  BOOL v50 = v67 != 0;
  LOBYTE(v81) = v67 != 0;
  BOOL v79 = v65 != 0;
  if (v49 >= 3) {
    char v51 = 2;
  }
  else {
    char v51 = 2 - v49;
  }
  char v78 = 1;
  BOOL v52 = v60 != 1;
  BOOL v53 = (v72 & 1) == 0;
  BOOL v77 = v62 != 0;
  char v54 = v61 & 1;
  char v76 = v61 & 1;
  *(unsigned char *)a1 = v71;
  unint64_t v55 = v70;
  *(void *)(a1 + 8) = v69;
  *(void *)(a1 + 16) = v55;
  *(void *)(a1 + 24) = v68;
  *(unsigned char *)(a1 + 32) = v50;
  *(void *)(a1 + 40) = v66;
  *(unsigned char *)(a1 + 48) = v48;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 1;
  *(void *)(a1 + 72) = v64;
  *(unsigned char *)(a1 + 80) = v45;
  *(void *)(a1 + 88) = v63;
  *(unsigned char *)(a1 + 96) = v54;
  *(unsigned char *)(a1 + 97) = v52;
  uint64_t v56 = v59;
  *(void *)(a1 + 104) = v30;
  *(void *)(a1 + 112) = v56;
  *(void *)(a1 + 120) = v36;
  *(void *)(a1 + 128) = v37;
  *(void *)(a1 + 136) = v42;
  *(void *)(a1 + 144) = v43;
  *(unsigned char *)(a1 + 152) = v53;
  *(void *)(a1 + 160) = v47;
  *(void *)(a1 + 168) = v46;
  *(unsigned char *)(a1 + 176) = v51;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000E3FE4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000E4058(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000E4058(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A38C(&qword_1003653F0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v45 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v44 = (uint64_t)&v43 - v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v43 - v9);
  uint64_t v11 = sub_10000A38C(&qword_1003653F8);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  id v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v43 - v16;
  __chkstk_darwin(v15);
  id v19 = (char *)&v43 - v18;
  *(void *)&long long v51 = 0;
  *((void *)&v51 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  long long v47 = v51;
  v20._object = (void *)0x80000001002BD7C0;
  v20._uint64_t countAndFlagsBits = 0xD000000000000021;
  String.append(_:)(v20);
  v21._uint64_t countAndFlagsBits = 0x3D6574617473203ALL;
  v21._object = (void *)0xE800000000000000;
  String.append(_:)(v21);
  sub_100045BD0(a1, (uint64_t)&v51);
  _print_unlocked<A, B>(_:_:)();
  v22._uint64_t countAndFlagsBits = 0x7473656D6974202CLL;
  v22._object = (void *)0xEC0000003D706D61;
  String.append(_:)(v22);
  uint64_t v23 = type metadata accessor for Date();
  sub_1000E532C((unint64_t *)&qword_10036C040, (void (*)(uint64_t))&type metadata accessor for Date);
  v24._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  id v25 = sub_1001F56B0();
  swift_bridgeObjectRetain();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v25 ulog:40 message:v26];
  swift_bridgeObjectRelease();

  sub_100045BD0(a1, (uint64_t)&v47);
  switch((void)v48)
  {
    case 2:
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v19, a2, v23);
      uint64_t v29 = sub_10000A38C(&qword_1003652D0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v19, 0, 1, v29);
      sub_10001639C((uint64_t)v19, (uint64_t)v17, &qword_1003653F8);
      sub_10000D728((uint64_t)v17, (uint64_t)v14, &qword_1003653F8);
      uint64_t v30 = v46 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferSucceeded;
      swift_beginAccess();
      sub_1000E53AC((uint64_t)v14, v30, &qword_1003653F8);
      swift_endAccess();
      sub_1000E2ED8();
      sub_10000D78C((uint64_t)v14, &qword_1003653F8);
      return sub_10000D78C((uint64_t)v17, &qword_1003653F8);
    case 1:
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v19, a2, v23);
      uint64_t v32 = sub_10000A38C(&qword_1003652D0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v19, 0, 1, v32);
      uint64_t v28 = OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferStarted;
      goto LABEL_7;
    case 0:
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v19, a2, v23);
      uint64_t v27 = sub_10000A38C(&qword_1003652D0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v19, 0, 1, v27);
      uint64_t v28 = OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferRequested;
LABEL_7:
      uint64_t v33 = v46 + v28;
      swift_beginAccess();
      sub_10000D78C(v33, &qword_1003653F8);
      sub_10001639C((uint64_t)v19, v33, &qword_1003653F8);
      return swift_endAccess();
  }
  long long v51 = v47;
  long long v52 = v48;
  long long v53 = v49;
  uint64_t v54 = v50;
  sub_1000719B8();
  uint64_t v34 = swift_allocError();
  long long v36 = v52;
  long long v35 = v53;
  long long v37 = v51;
  *(void *)(v38 + 48) = v54;
  *(_OWORD *)(v38 + 16) = v36;
  *(_OWORD *)(v38 + 32) = v35;
  *(_OWORD *)uint64_t v38 = v37;
  uint64_t v39 = sub_10000A38C((uint64_t *)&unk_1003652E0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))((char *)v10 + *(int *)(v39 + 28), a2, v23);
  uint64_t *v10 = v34;
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v10, 0, 1, v39);
  uint64_t v40 = v44;
  sub_10001639C((uint64_t)v10, v44, &qword_1003653F0);
  uint64_t v41 = v45;
  sub_10000D728(v40, v45, &qword_1003653F0);
  uint64_t v42 = v46 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferFailed;
  swift_beginAccess();
  sub_1000E5374(a1);
  swift_errorRetain();
  sub_1000E53AC(v41, v42, &qword_1003653F0);
  swift_endAccess();
  sub_1000E2ED8();
  sub_10000D78C(v41, &qword_1003653F0);
  sub_10000D78C(v40, &qword_1003653F0);
  return swift_errorRelease();
}

uint64_t sub_1000E4704()
{
  id v1 = sub_1001F56B0();
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 ulog:40 message:v2];

  sub_10000F088(*(void *)(v0 + 16));
  uint64_t v3 = v0 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_creationDate;
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000D78C(v0 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferRequested, &qword_1003653F8);
  sub_10000D78C(v0 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferStarted, &qword_1003653F8);
  sub_10000D78C(v0 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferFailed, &qword_1003653F0);
  sub_10000D78C(v0 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferSucceeded, &qword_1003653F8);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000E484C()
{
  sub_1000E4704();

  return swift_deallocClassInstance();
}

uint64_t sub_1000E48A4()
{
  return type metadata accessor for TransferRecord();
}

uint64_t type metadata accessor for TransferRecord()
{
  uint64_t result = qword_1003652B8;
  if (!qword_1003652B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000E48F8()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_1000E4A6C(319, &qword_1003652C8, &qword_1003652D0);
    if (v1 <= 0x3F)
    {
      sub_1000E4A6C(319, &qword_1003652D8, (uint64_t *)&unk_1003652E0);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_1000E4A6C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_10000A3D0(a3);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1000E4ABC(uint64_t a1)
{
  uint64_t v2 = *v1;
  v5[3] = a1;
  v5[0] = v2;
  swift_retain();
  uint64_t v3 = sub_1000283AC(v5);
  sub_10000CC5C((uint64_t)v5);
  return v3;
}

uint64_t sub_1000E4B14(uint64_t a1)
{
  uint64_t result = sub_1000E532C(&qword_1003653C0, (void (*)(uint64_t))type metadata accessor for TransferRecord);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000E4B6C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  unint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v9 = a1[6];
  sub_10000A38C(&qword_1003653D0);
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  a2[4] = v7;
  a2[5] = v8;
  a2[6] = v9;
  sub_10003A3A4(v3, v4, v5);
  return Date.init()();
}

uint64_t *sub_1000E4C08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v34 = sub_10000A38C(&qword_1003653C8);
  uint64_t v7 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[2] = 0;
  v3[3] = 0;
  uint64_t v10 = (char *)v3 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferRequested;
  uint64_t v11 = sub_10000A38C(&qword_1003652D0);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v12((char *)v3 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferStarted, 1, 1, v11);
  uint64_t v13 = (char *)v3 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferFailed;
  uint64_t v14 = sub_10000A38C((uint64_t *)&unk_1003652E0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v12((char *)v3 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferSucceeded, 1, 1, v11);
  *((unsigned char *)v3 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_published) = 0;
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_tasks) = (uint64_t)&_swiftEmptySetSingleton;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, v6, (uint64_t)&off_1003275B8);
  *((unsigned char *)v3 + 32) = *(unsigned char *)(a1 + qword_1003ACBA8);
  *((unsigned char *)v3 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_contentType) = *(unsigned char *)(a1 + qword_1003ACBB0);
  uint64_t v15 = (char *)v3 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_creationDate;
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v35 = a2;
  v18(v15, a2, v16);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v19 = sub_1000983CC();
  uint64_t v21 = v20;
  swift_release();
  Swift::String v22 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_deviceModel);
  *Swift::String v22 = v19;
  v22[1] = v21;
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_direction) = *(void *)(a1 + qword_1003ACBC0);
  swift_retain();
  uint64_t v23 = UUID.uuidString.getter();
  uint64_t v25 = v24;
  swift_release();
  NSString v26 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferID);
  *NSString v26 = v23;
  v26[1] = v25;
  swift_retain();
  uint64_t v36 = sub_100104EA4();
  sub_10000A38C(&qword_10035F3C0);
  sub_10000B010(&qword_10035F3C8, &qword_10035F3C0);
  uint64_t v27 = Publisher.eraseToAnyPublisher()();
  swift_release();
  swift_release();
  uint64_t v36 = v27;
  sub_10000A38C(&qword_10035F3D0);
  sub_10000A38C(&qword_1003653D0);
  sub_10000B010(&qword_10035F3D8, &qword_10035F3D0);
  Publisher.map<A>(_:)();
  sub_10000B010(&qword_1003653D8, &qword_1003653C8);
  uint64_t v28 = v34;
  uint64_t v29 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v28);
  swift_release();
  uint64_t v36 = v29;
  uint64_t v30 = swift_allocObject();
  swift_weakInit();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_1000E5290;
  *(void *)(v31 + 24) = v30;
  sub_10000A38C(&qword_1003653E0);
  sub_10000B010(&qword_1003653E8, &qword_1003653E0);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  if (qword_10035A590 != -1) {
    swift_once();
  }
  sub_100141D74();
  sub_10014215C();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v35, v16);
  return v3;
}

uint64_t sub_1000E5258()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E5290(uint64_t a1, uint64_t a2)
{
  return sub_1000E3FE4(a1, a2);
}

uint64_t sub_1000E5298()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000E52D0(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(unsigned char *, uint64_t))(v1 + 16);
  sub_100045BD0(a1, (uint64_t)v6);
  uint64_t v4 = sub_10000A38C(&qword_1003653D0);
  return v3(v6, a1 + *(int *)(v4 + 48));
}

uint64_t sub_1000E532C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000E5374(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000E53AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000A38C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000E5410(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000E547C()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteFollowerNoticePresenterModel()
{
  return self;
}

uint64_t sub_1000E54E0(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  *(unsigned char *)(v1 + 24) = 0;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, v3, (uint64_t)&off_100327640);
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1000E5560()
{
  id v0 = sub_1001F5E8C();
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 ulog:40 message:v1];

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteFollowerNoticePresenter()
{
  return self;
}

void sub_1000E560C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v36 = a4;
  uint64_t v32 = *v6;
  uint64_t v33 = a2;
  uint64_t v10 = type metadata accessor for PresentNoticeRequest();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v31 - v14;
  uint64_t v37 = 0;
  unint64_t v38 = 0xE000000000000000;
  v16._uint64_t countAndFlagsBits = 0xD000000000000037;
  v16._object = (void *)0x80000001002BD910;
  String.append(_:)(v16);
  v17._uint64_t countAndFlagsBits = 0x7865746E6F63203ALL;
  v17._object = (void *)0xEA00000000003D74;
  String.append(_:)(v17);
  type metadata accessor for NoticeContext(0);
  _print_unlocked<A, B>(_:_:)();
  id v18 = sub_1001F5E8C();
  swift_bridgeObjectRetain();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v18 ulog:40 message:v19];
  swift_bridgeObjectRelease();

  uint64_t v20 = *(uint64_t (**)(uint64_t))(v7[2] + 16);
  uint64_t v21 = swift_retain();
  Swift::String v22 = (char *)v20(v21);
  swift_release();
  if (v22)
  {
    if ((v7[3] & 1) == 0)
    {
      *((unsigned char *)v7 + 24) = 1;
      uint64_t v23 = swift_allocObject();
      swift_weakInit();
      uint64_t v24 = swift_allocObject();
      uint64_t v25 = v32;
      *(void *)(v24 + 16) = v23;
      *(void *)(v24 + 24) = v25;
      sub_1000E5C9C((uint64_t)sub_1000E6AA4, v24);
      swift_release();
    }
    sub_1000E6AAC(a1, (uint64_t)v15, type metadata accessor for NoticeContext);
    NSString v26 = &v15[*(int *)(v10 + 20)];
    *(void *)NSString v26 = v33;
    *((void *)v26 + 1) = a3;
    sub_1000E6AAC((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PresentNoticeRequest);
    uint64_t v27 = swift_allocObject();
    uint64_t v28 = v35;
    *(void *)(v27 + 16) = v34;
    *(void *)(v27 + 24) = v28;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100174B40((uint64_t)v13, v36, (uint64_t)sub_1000E6B4C, v27, v22);
    swift_unknownObjectRelease();
    swift_release();
    sub_1000E6B78((uint64_t)v15);
    sub_1000E6B78((uint64_t)v13);
  }
  else
  {
    id v29 = sub_1001F5E8C();
    NSString v30 = String._bridgeToObjectiveC()();
    [v29 ulog:60 message:v30];
  }
}

uint64_t sub_1000E5970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a4;
  uint64_t v33 = a3;
  uint64_t v32 = a2;
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void **)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v39 = *(void *)(a1 + 16);
  uint64_t v40 = v10;
  uint64_t v11 = *(void **)(a1 + 40);
  uint64_t v34 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v15 = *(void **)(a1 + 72);
  uint64_t v35 = *(void *)(a1 + 80);
  int v16 = *(unsigned __int8 *)(a1 + 88);
  uint64_t v43 = 0;
  uint64_t v44 = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(31);
  uint64_t v41 = v43;
  uint64_t v42 = v44;
  v17._object = (void *)0x80000001002BDA90;
  v17._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v17);
  uint64_t v31 = v8;
  uint64_t v43 = v8;
  uint64_t v44 = v9;
  NSString v30 = v9;
  uint64_t v18 = v34;
  uint64_t v45 = v39;
  uint64_t v46 = v40;
  uint64_t v47 = v34;
  long long v48 = v11;
  uint64_t v49 = v13;
  uint64_t v50 = v12;
  uint64_t v29 = v14;
  uint64_t v51 = v14;
  long long v52 = v15;
  uint64_t v28 = v15;
  uint64_t v19 = v35;
  uint64_t v53 = v35;
  HIDWORD(v27) = v16;
  char v54 = v16;
  _print_unlocked<A, B>(_:_:)();
  sub_10016ABE4(v41, v42, 0, v36, (uint64_t)&off_100327640);
  swift_bridgeObjectRelease();
  if (qword_10035A628 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_1003ACB50;
  *uint64_t v7 = qword_1003ACB50;
  uint64_t v22 = v37;
  uint64_t v21 = v38;
  (*(void (**)(void *, void, uint64_t))(v37 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v38);
  id v23 = (id)v20;
  LOBYTE(v20) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v22 + 8))(v7, v21);
  if (v20)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v25 = *(void *)(result + 16);
      swift_retain();
      swift_release();
      NSString v26 = *(void (**)(uint64_t *, uint64_t, void *, uint64_t, uint64_t, uint64_t))(v25 + 32);
      swift_retain();
      swift_release();
      uint64_t v43 = v18;
      uint64_t v44 = v11;
      uint64_t v45 = v13;
      uint64_t v46 = v12;
      uint64_t v47 = v29;
      long long v48 = v28;
      uint64_t v49 = v19;
      LOBYTE(v50) = BYTE4(v27);
      v26(&v43, v31, v30, v39, v40, v32);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000E5C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v33 = *(void (***)(char *, uint64_t))(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = sub_1001F5E20();
  NSString v12 = String._bridgeToObjectiveC()();
  [v11 ulog:40 message:v12];

  uint64_t v13 = *(void **)&v2[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLClient];
  if (v13)
  {
    uint64_t v29 = v8;
    id v14 = v13;
    NSString v15 = String._bridgeToObjectiveC()();
    if (qword_10035A650 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v18 = (void *)swift_allocObject();
    void v18[2] = v17;
    v18[3] = &type metadata for NoticeEventRequest;
    v18[4] = ObjectType;
    uint64_t v39 = sub_1000E6C44;
    uint64_t v40 = v18;
    unint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v36 = 1107296256;
    uint64_t v37 = sub_100187A58;
    uint64_t v38 = &unk_100327740;
    uint64_t v19 = _Block_copy(&aBlock);
    swift_release();
    [v14 registerEventID:v15 options:isa handler:v19];
    _Block_release(v19);

    uint64_t v20 = *(void **)&v3[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_dispatchQueue];
    uint64_t v21 = (void *)swift_allocObject();
    uint64_t v22 = v30;
    uint64_t v23 = v31;
    void v21[2] = v3;
    _OWORD v21[3] = v22;
    v21[4] = v23;
    uint64_t v39 = sub_1000E6CA8;
    uint64_t v40 = v21;
    unint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v36 = 1107296256;
    uint64_t v37 = sub_10007A0AC;
    uint64_t v38 = &unk_100327790;
    uint64_t v24 = _Block_copy(&aBlock);
    id v25 = v20;
    NSString v26 = v3;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v34 = _swiftEmptyArrayStorage;
    sub_10004D1C4();
    sub_10000A38C((uint64_t *)&unk_10035E800);
    sub_10001683C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v24);

    v33[1](v7, v5);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v32);
    swift_release();
  }
  else
  {
    id v27 = sub_1001F5E20();
    uint64_t v33 = (void (**)(char *, uint64_t))String._bridgeToObjectiveC()();
    [v27 ulog:60 message:v33];

    uint64_t v28 = v33;
  }
}

uint64_t sub_1000E6188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  AnyHashable.init<A>(_:)();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  _OWORD v7[3] = sub_10000A38C(&qword_100365570);
  v7[0] = sub_1000E6CB4;
  v7[1] = v5;
  swift_beginAccess();
  swift_retain();
  sub_100245478((uint64_t)v7, (uint64_t)v8);
  return swift_endAccess();
}

void sub_1000E6278(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (char *)Strong;
    strcpy((char *)&v65, "rangingToken");
    BYTE13(v65) = 0;
    HIWORD(v65) = -5120;
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    if (*(void *)(a1 + 16) && (unint64_t v10 = sub_100269E60((uint64_t)&v75), (v11 & 1) != 0))
    {
      sub_100027B10(*(void *)(a1 + 56) + 32 * v10, (uint64_t)&v65);
    }
    else
    {
      long long v65 = 0u;
      long long v66 = 0u;
    }
    sub_1000BA108((uint64_t)&v75);
    uint64_t v12 = *((void *)&v66 + 1);
    sub_1000911A4((uint64_t)&v65);
    if (v12)
    {
      strcpy((char *)&v65, "rangingToken");
      BYTE13(v65) = 0;
      HIWORD(v65) = -5120;
      AnyHashable.init<A>(_:)();
      *((void *)&v66 + 1) = &type metadata for String;
      strcpy((char *)&v65, "<Token>");
      *((void *)&v65 + 1) = 0xE700000000000000;
      sub_100027B00(&v65, &v48);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v62 = a1;
      sub_1002650FC(&v48, (uint64_t)&v75, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_1000BA108((uint64_t)&v75);
    }
    uint64_t v75 = 0;
    char v76 = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    uint64_t v75 = 0x20656C646E6148;
    char v76 = (void *)0xE700000000000000;
    v14._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    v15._uint64_t countAndFlagsBits = 0x6F6C796170203A20;
    v15._object = (void *)0xEB000000003D6461;
    String.append(_:)(v15);
    swift_bridgeObjectRetain();
    v16._uint64_t countAndFlagsBits = Dictionary.description.getter();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17._uint64_t countAndFlagsBits = 0x6E6F6974706F202CLL;
    v17._object = (void *)0xEA00000000003D73;
    String.append(_:)(v17);
    if (a2)
    {
      *(void *)&long long v65 = a2;
      swift_bridgeObjectRetain();
      sub_10000A38C(&qword_10035C7C0);
      uint64_t v18 = String.init<A>(describing:)();
      unint64_t v20 = v19;
    }
    else
    {
      unint64_t v20 = 0xE300000000000000;
      uint64_t v18 = 7104878;
    }
    unint64_t v21 = v20;
    String.append(_:)(*(Swift::String *)&v18);
    swift_bridgeObjectRelease();
    sub_10016ABE4(v75, v76, 0, a5, (uint64_t)&off_10032C040);
    swift_bridgeObjectRelease();
    sub_100246B9C(a1, (uint64_t)&v65);
    long long v22 = v65;
    uint64_t v23 = v66;
    uint64_t v46 = v67;
    uint64_t v47 = *((void *)&v66 + 1);
    uint64_t v44 = v69;
    uint64_t v45 = v68;
    uint64_t v42 = v71;
    uint64_t v43 = v70;
    uint64_t v40 = v73;
    uint64_t v41 = v72;
    char v39 = v74;
    sub_1000E6CBC((uint64_t)&v65, (uint64_t)&v75);
    if (!v76)
    {
      *(void *)&long long v48 = 0;
      *((void *)&v48 + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(44);
      swift_bridgeObjectRelease();
      *(void *)&long long v48 = 0xD000000000000019;
      *((void *)&v48 + 1) = 0x80000001002BDA40;
      v28._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      v29._uint64_t countAndFlagsBits = 0x6170206D6F726620;
      v29._object = (void *)0xEF203A64616F6C79;
      String.append(_:)(v29);
      v30._uint64_t countAndFlagsBits = Dictionary.description.getter();
      String.append(_:)(v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10016ABE4(v48, *((void **)&v48 + 1), 0, a5, (uint64_t)&off_10032C040);
      swift_bridgeObjectRelease();

      return;
    }
    swift_bridgeObjectRelease();
    *(void *)&long long v60 = 0xD00000000000002DLL;
    *((void *)&v60 + 1) = 0x80000001002BD9E0;
    AnyHashable.init<A>(_:)();
    uint64_t v24 = &v9[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_registeredEventHandlers];
    swift_beginAccess();
    uint64_t v25 = *(void *)v24;
    if (*(void *)(v25 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v26 = sub_100269E60((uint64_t)&v48);
      if (v27)
      {
        sub_100027B10(*(void *)(v25 + 56) + 32 * v26, (uint64_t)&v62);
      }
      else
      {
        long long v62 = 0u;
        long long v63 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v62 = 0u;
      long long v63 = 0u;
    }
    sub_1000BA108((uint64_t)&v48);
    if (*((void *)&v63 + 1))
    {
      sub_10000A38C(&qword_100365570);
      if (swift_dynamicCast())
      {
        uint64_t v31 = (void (*)(long long *, long long *))v60;
        if (a2) {
          unint64_t v32 = a2;
        }
        else {
          unint64_t v32 = sub_100268E80((uint64_t)_swiftEmptyArrayStorage);
        }
        unint64_t v64 = v32;
        strcpy((char *)&v62, "rangingToken");
        BYTE13(v62) = 0;
        HIWORD(v62) = -5120;
        swift_bridgeObjectRetain();
        AnyHashable.init<A>(_:)();
        strcpy((char *)&v60, "rangingToken");
        BYTE13(v60) = 0;
        HIWORD(v60) = -5120;
        AnyHashable.init<A>(_:)();
        if (*(void *)(a1 + 16))
        {
          unint64_t v34 = sub_100269E60((uint64_t)&v62);
          uint64_t v35 = *((void *)&v22 + 1);
          if (v36)
          {
            sub_100027B10(*(void *)(a1 + 56) + 32 * v34, (uint64_t)&v60);
          }
          else
          {
            long long v60 = 0u;
            long long v61 = 0u;
          }
        }
        else
        {
          long long v60 = 0u;
          long long v61 = 0u;
          uint64_t v35 = *((void *)&v22 + 1);
        }
        sub_1000BA108((uint64_t)&v62);
        if (*((void *)&v61 + 1))
        {
          sub_100027B00(&v60, v59);
          char v37 = swift_isUniquelyReferenced_nonNull_native();
          sub_1002650FC(v59, (uint64_t)&v48, v37);
          unint64_t v38 = v32;
          swift_bridgeObjectRelease();
          sub_1000BA108((uint64_t)&v48);
        }
        else
        {
          sub_1000911A4((uint64_t)&v60);
          sub_1001306C0((uint64_t)&v48, v59);
          sub_1000BA108((uint64_t)&v48);
          sub_1000911A4((uint64_t)v59);
          unint64_t v38 = v64;
        }
        *(void *)&long long v48 = v22;
        *((void *)&v48 + 1) = v35;
        uint64_t v49 = v23;
        uint64_t v50 = v47;
        uint64_t v51 = v46;
        uint64_t v52 = v45;
        uint64_t v53 = v44;
        uint64_t v54 = v43;
        uint64_t v55 = v42;
        uint64_t v56 = v41;
        uint64_t v57 = v40;
        char v58 = v39;
        *(void *)&long long v62 = v38;
        v31(&v48, &v62);
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_35;
      }
    }
    else
    {
      sub_1000911A4((uint64_t)&v62);
    }
    *(void *)&long long v48 = 0;
    *((void *)&v48 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(43);
    swift_bridgeObjectRelease();
    *(void *)&long long v48 = 0xD000000000000029;
    *((void *)&v48 + 1) = 0x80000001002BDA60;
    v33._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
    String.append(_:)(v33);
    swift_bridgeObjectRelease();
    sub_10016AE10(60, v48, *((void **)&v48 + 1), 0, a5, (uint64_t)&off_10032C040);
    swift_bridgeObjectRelease();
LABEL_35:

    sub_1000E6D24((uint64_t)&v65);
  }
}

uint64_t sub_1000E69D4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void *, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 80);
  char v5 = *(unsigned char *)(a1 + 88);
  uint64_t v6 = *a2;
  v10[0] = *(void *)a1;
  v10[1] = v3;
  long long v7 = *(_OWORD *)(a1 + 32);
  long long v11 = *(_OWORD *)(a1 + 16);
  long long v12 = v7;
  long long v8 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 48);
  long long v14 = v8;
  uint64_t v15 = v4;
  char v16 = v5;
  return a3(v10, v6);
}

uint64_t sub_1000E6A34()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E6A6C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000E6AA4(uint64_t a1, uint64_t a2)
{
  return sub_1000E5970(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1000E6AAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000E6B14()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000E6B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 16))(a3);
}

uint64_t sub_1000E6B78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PresentNoticeRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000E6BD4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E6C0C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000E6C44(uint64_t a1, unint64_t a2)
{
  sub_1000E6278(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1000E6C50(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000E6C60()
{
  return swift_release();
}

uint64_t sub_1000E6C68()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000E6CA8()
{
  return sub_1000E6188(v0[2], v0[3], v0[4]);
}

uint64_t sub_1000E6CB4(uint64_t a1, uint64_t *a2)
{
  return sub_1000E69D4(a1, a2, *(uint64_t (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_1000E6CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A38C(&qword_100365578);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E6D24(uint64_t a1)
{
  return a1;
}

void sub_1000E6D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002052C(a5, a6, a7, a8, a9, a10, a11, a12);
  }
}

uint64_t static CAMediaTimingFunctionName.allCases.getter()
{
  sub_10000A38C(&qword_100365580);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100291160;
  *(void *)(v0 + 32) = kCAMediaTimingFunctionDefault;
  *(void *)(v0 + 40) = kCAMediaTimingFunctionEaseIn;
  *(void *)(v0 + 48) = kCAMediaTimingFunctionEaseInEaseOut;
  *(void *)(v0 + 56) = kCAMediaTimingFunctionEaseOut;
  *(void *)(v0 + 64) = kCAMediaTimingFunctionLinear;
  NSString v1 = kCAMediaTimingFunctionDefault;
  uint64_t v2 = kCAMediaTimingFunctionEaseIn;
  uint64_t v3 = kCAMediaTimingFunctionEaseInEaseOut;
  uint64_t v4 = kCAMediaTimingFunctionEaseOut;
  uint64_t v5 = kCAMediaTimingFunctionLinear;
  return v0;
}

uint64_t sub_1000E6EE4()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000E6F44()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_1000E6F94()
{
  unint64_t result = qword_10035AB20;
  if (!qword_10035AB20)
  {
    type metadata accessor for CAMediaTimingFunctionName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10035AB20);
  }
  return result;
}

uint64_t sub_1000E6FEC()
{
  id v1 = [*v0 uniqueIdentifier];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

Swift::Int sub_1000E7044(uint64_t a1)
{
  return sub_1000E7050(a1, (uint64_t)&off_100327800);
}

Swift::Int sub_1000E7050(uint64_t a1, uint64_t a2)
{
  sub_10000A38C((uint64_t *)&unk_10035E7E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10028D430;
  *(void *)(inited + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  *(void *)(inited + 40) = v5;
  Swift::Int v6 = sub_1001C9F78(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v6;
}

unint64_t sub_1000E70FC(void *a1, uint64_t a2)
{
  return (unint64_t)sub_1000E7368(a1, a2, (uint64_t)&off_100327800, sub_1001A7C6C) & 1;
}

void *sub_1000E7134(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000E7368(a1, a2, a3, sub_1001A7C6C);
}

BOOL sub_1000E714C(uint64_t a1, uint64_t a2)
{
  return sub_1000E720C(a1, a2, (uint64_t)&off_100327800, (uint64_t *)&unk_10036C0A0, (void (*)(void *, void *))sub_10000D7E8);
}

BOOL sub_1000E718C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000E720C(a1, a2, a3, (uint64_t *)&unk_10036C0A0, (void (*)(void *, void *))sub_10000D7E8);
}

BOOL sub_1000E71AC(uint64_t a1, uint64_t a2)
{
  return sub_1000E720C(a1, a2, (uint64_t)&off_100327800, &qword_10035B618, (void (*)(void *, void *))sub_10000D7E8);
}

BOOL sub_1000E71EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000E720C(a1, a2, a3, &qword_10035B618, (void (*)(void *, void *))sub_10000D7E8);
}

BOOL sub_1000E720C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void *, void *))
{
  sub_10000D728(a1, (uint64_t)v17, a4);
  if (v17[3])
  {
    a5(v17, v18);
    uint64_t v10 = v19;
    uint64_t v9 = v20;
    sub_10000D6E4(v18, v19);
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)(v9 + 8) + 8))(v10);
    uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 8))(a2);
    uint64_t v13 = sub_1001C8154(v12, v11);
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(v13 + 16);
    swift_release();
    BOOL v15 = v14 != 0;
    sub_10000CC5C((uint64_t)v18);
  }
  else
  {
    sub_10000D78C((uint64_t)v17, a4);
    return 0;
  }
  return v15;
}

unint64_t sub_1000E7318(void *a1, uint64_t a2)
{
  return (unint64_t)sub_1000E7368(a1, a2, (uint64_t)&off_100327800, sub_10024DF10) & 1;
}

void *sub_1000E7350(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000E7368(a1, a2, a3, sub_10024DF10);
}

void *sub_1000E7368(void *result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (result)
  {
    id v7 = result;
    uint64_t v8 = a4();
    uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 8))(a2);
    uint64_t v10 = sub_1001C8154(v9, v8);
    swift_bridgeObjectRelease();

    uint64_t v11 = *(void *)(v10 + 16);
    swift_release();
    return (void *)(v11 != 0);
  }
  return result;
}

BOOL sub_1000E7414(uint64_t a1, uint64_t a2)
{
  return sub_10003B798(a1, a2, (uint64_t)&off_100327800);
}

uint64_t MRPlaybackState.description.getter(int a1)
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unsigned int v3 = 2036427888;
      goto LABEL_8;
    case 2:
      uint64_t result = 0x646573756170;
      break;
    case 3:
      uint64_t result = 0x646570706F7473;
      break;
    case 4:
      uint64_t result = 0x7075727265746E69;
      break;
    case 5:
      unsigned int v3 = 1801807219;
LABEL_8:
      uint64_t result = v3 | 0x676E6900000000;
      break;
    default:
      v4._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v4);
      swift_bridgeObjectRelease();
      uint64_t result = 0x204E574F4E4B4E55;
      break;
  }
  return result;
}

uint64_t sub_1000E755C()
{
  return MRPlaybackState.description.getter(*v0);
}

uint64_t sub_1000E7564()
{
  id v1 = sub_1001F5F1C();
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 ulog:40 message:v2];

  uint64_t v3 = v0 + OBJC_IVAR____TtC17proximitycontrold18AirDropUIPresenter_id;
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1000E7680()
{
  return type metadata accessor for AirDropUIPresenter();
}

uint64_t type metadata accessor for AirDropUIPresenter()
{
  uint64_t result = qword_1003655B8;
  if (!qword_1003655B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000E76D4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1000E778C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for SFShockwaveEffectState();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v67 = v5;
  uint64_t v68 = v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v69 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v70 = (char *)&v61 - v9;
  uint64_t v10 = type metadata accessor for OSSignpostID();
  uint64_t v65 = *(void *)(v10 - 8);
  uint64_t v66 = v10;
  __chkstk_darwin(v10);
  unint64_t v64 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SFNearbySharingInteractionViewState();
  uint64_t v73 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v75 = 0;
  unint64_t v76 = 0xE000000000000000;
  v19._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
  v19._object = (void *)0x80000001002BDB50;
  String.append(_:)(v19);
  v20._uint64_t countAndFlagsBits = 8250;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  unint64_t v72 = sub_1000D1F28();
  v21._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 8236;
  v22._object = (void *)0xE200000000000000;
  String.append(_:)(v22);
  uint64_t v74 = a2;
  _print_unlocked<A, B>(_:_:)();
  id v23 = sub_1001F5F1C();
  swift_bridgeObjectRetain();
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v23 ulog:40 message:v24];
  swift_bridgeObjectRelease();

  uint64_t v71 = v3;
  uint64_t v25 = v3 + OBJC_IVAR____TtC17proximitycontrold18AirDropUIPresenter_id;
  long long v62 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v62(v18, v3 + OBJC_IVAR____TtC17proximitycontrold18AirDropUIPresenter_id, v15);
  LOBYTE(v24) = static UUID.== infix(_:_:)();
  unint64_t v26 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v63 = v16 + 8;
  v26(v18, v15);
  if ((v24 & 1) == 0)
  {
    unint64_t v75 = 0;
    unint64_t v76 = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease();
    unint64_t v75 = 0xD00000000000002ELL;
    unint64_t v76 = 0x80000001002BDB20;
    v41._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v41);
    swift_bridgeObjectRelease();
    id v42 = sub_1001F5F1C();
    swift_bridgeObjectRetain();
    NSString v43 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v42 ulog:60 message:v43];
    swift_bridgeObjectRelease();

    return;
  }
  char v27 = v26;
  uint64_t v28 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v14, v74, v12);
  int v29 = (*(uint64_t (**)(char *, uint64_t))(v28 + 88))(v14, v12);
  Swift::String v30 = v14;
  if (v29 == enum case for SFNearbySharingInteractionViewState.shockwave(_:))
  {
    (*(void (**)(char *, uint64_t))(v28 + 96))(v14, v12);
    uint64_t v32 = v67;
    uint64_t v31 = v68;
    Swift::String v33 = v70;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v70, v30, v67);
    unint64_t v34 = v69;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v69, v33, v32);
    int v35 = (*(uint64_t (**)(char *, uint64_t))(v31 + 88))(v34, v32);
    if (v35 == enum case for SFShockwaveEffectState.connectionHint(_:))
    {
      (*(void (**)(void))(v71 + OBJC_IVAR____TtC17proximitycontrold18AirDropUIPresenter_eventHandler))(0);
      char v36 = v33;
      id v37 = sub_1001EA5B0();
      NSString v38 = String._bridgeToObjectiveC()();
      [v37 ulog:40 message:v38];

      char v39 = *(void (**)(char *, uint64_t))(v31 + 8);
      uint64_t v40 = v36;
LABEL_24:
      v39(v40, v32);
      return;
    }
    if (v35 == enum case for SFShockwaveEffectState.connectionInterrupted(_:))
    {
      (*(void (**)(uint64_t))(v71 + OBJC_IVAR____TtC17proximitycontrold18AirDropUIPresenter_eventHandler))(3);
LABEL_23:
      char v39 = *(void (**)(char *, uint64_t))(v31 + 8);
      uint64_t v40 = v33;
      goto LABEL_24;
    }
    if (v35 == enum case for SFShockwaveEffectState.shockwave(_:))
    {
      (*(void (**)(uint64_t))(v71 + OBJC_IVAR____TtC17proximitycontrold18AirDropUIPresenter_eventHandler))(1);
      v62(v18, v25, v15);
      sub_100116F18();
      long long v48 = v64;
      OSSignpostID.init(_:)();
      v27(v18, v15);
      static os_signpost_type_t.end.getter();
      if (qword_10035A528 != -1) {
        swift_once();
      }
      id v49 = (id)qword_1003AC758;
      os_signpost(_:dso:log:name:signpostID:_:_:)();

      (*(void (**)(char *, uint64_t))(v65 + 8))(v48, v66);
      id v50 = sub_1001EA5B0();
      NSString v51 = String._bridgeToObjectiveC()();
      [v50 ulog:40 message:v51];

      char v39 = *(void (**)(char *, uint64_t))(v31 + 8);
      uint64_t v40 = v70;
      goto LABEL_24;
    }
    if (v35 == enum case for SFShockwaveEffectState.waitingToSettle(_:))
    {
      (*(void (**)(uint64_t))(v71 + OBJC_IVAR____TtC17proximitycontrold18AirDropUIPresenter_eventHandler))(1);
      goto LABEL_23;
    }
    if (v35 == enum case for SFShockwaveEffectState.cleaningUp(_:))
    {
      (*(void (**)(uint64_t))(v71 + OBJC_IVAR____TtC17proximitycontrold18AirDropUIPresenter_eventHandler))(2);
      goto LABEL_23;
    }
    unint64_t v75 = 0;
    unint64_t v76 = 0xE000000000000000;
    _StringGuts.grow(_:)(36);
    v56._object = (void *)0x80000001002BDBD0;
    v56._uint64_t countAndFlagsBits = 0xD000000000000022;
    String.append(_:)(v56);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v57 = v33;
    id v58 = sub_1001F5F1C();
    swift_bridgeObjectRetain();
    NSString v59 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v58 ulog:60 message:v59];
    swift_bridgeObjectRelease();

    long long v60 = *(void (**)(char *, uint64_t))(v31 + 8);
    v60(v57, v32);
    v60(v69, v32);
  }
  else if (v29 == enum case for SFNearbySharingInteractionViewState.idle(_:))
  {
    (*(void (**)(uint64_t))(v71 + OBJC_IVAR____TtC17proximitycontrold18AirDropUIPresenter_eventHandler))(128);
  }
  else if (v29 == enum case for SFNearbySharingInteractionViewState.contentPreview(_:))
  {
    (*(void (**)(uint64_t))(v71 + OBJC_IVAR____TtC17proximitycontrold18AirDropUIPresenter_eventHandler))(64);
    v62(v18, v25, v15);
    sub_100116F18();
    uint64_t v44 = v64;
    OSSignpostID.init(_:)();
    v27(v18, v15);
    static os_signpost_type_t.end.getter();
    if (qword_10035A528 != -1) {
      swift_once();
    }
    id v45 = (id)qword_1003AC758;
    os_signpost(_:dso:log:name:signpostID:_:_:)();

    (*(void (**)(char *, uint64_t))(v65 + 8))(v44, v66);
    id v46 = sub_1001EA5B0();
    NSString v47 = String._bridgeToObjectiveC()();
    [v46 ulog:40 message:v47];
  }
  else
  {
    unint64_t v75 = 0;
    unint64_t v76 = 0xE000000000000000;
    uint64_t v52 = v14;
    _StringGuts.grow(_:)(51);
    v53._uint64_t countAndFlagsBits = 0xD000000000000031;
    v53._object = (void *)0x80000001002BDB90;
    String.append(_:)(v53);
    _print_unlocked<A, B>(_:_:)();
    id v54 = sub_1001F5F1C();
    swift_bridgeObjectRetain();
    NSString v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v54 ulog:60 message:v55];
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v28 + 8))(v52, v12);
  }
}

void sub_1000E82EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SFProximityHandoff.Content.Action();
  uint64_t v28 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v26 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v26 - v10;
  unint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  v12._object = (void *)0x80000001002BDAF0;
  v12._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  String.append(_:)(v12);
  v13._uint64_t countAndFlagsBits = 8250;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  uint64_t v27 = a2;
  _print_unlocked<A, B>(_:_:)();
  v14._uint64_t countAndFlagsBits = 8236;
  v14._object = (void *)0xE200000000000000;
  String.append(_:)(v14);
  type metadata accessor for SFProximityHandoff.Content();
  _print_unlocked<A, B>(_:_:)();
  id v15 = sub_1001F5F1C();
  swift_bridgeObjectRetain();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 ulog:40 message:v16];
  swift_bridgeObjectRelease();

  uint64_t v17 = v29;
  SFProximityHandoff.Content.interactionID.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v17 + OBJC_IVAR____TtC17proximitycontrold18AirDropUIPresenter_id, v5);
  LOBYTE(v16) = static UUID.== infix(_:_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v9, v5);
  v18(v11, v5);
  if (v16)
  {
    uint64_t v19 = v28;
    Swift::String v20 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v26, v27, v3);
    int v21 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v20, v3);
    int v22 = enum case for SFProximityHandoff.Content.Action.open(_:);
    (*(void (**)(uint64_t))(v17 + OBJC_IVAR____TtC17proximitycontrold18AirDropUIPresenter_eventHandler))(65);
    if (v21 != v22
      && v21 != enum case for SFProximityHandoff.Content.Action.send(_:)
      && v21 != enum case for SFProximityHandoff.Content.Action.share(_:)
      && v21 != enum case for SFProximityHandoff.Content.Action.transfer(_:))
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v3);
    }
  }
  else
  {
    unint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease();
    unint64_t v30 = 0xD00000000000002ELL;
    unint64_t v31 = 0x80000001002BDB20;
    SFProximityHandoff.Content.interactionID.getter();
    sub_1000D1F28();
    v23._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    v18(v11, v5);
    id v24 = sub_1001F5F1C();
    swift_bridgeObjectRetain();
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v24 ulog:60 message:v25];
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000E8750@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    unint64_t v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_1000E9A34(a16, v22, v21 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1000E8944@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Capsule();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A38C(&qword_1003656E8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A38C(&qword_1003656F0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  Swift::String v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static VerticalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v13 = sub_10000A38C(&qword_1003656F8);
  sub_1000E8C00(v1, &v8[*(int *)(v13 + 44)]);
  uint64_t v14 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v15 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v5, v14, v15);
  uint64_t v16 = (uint64_t)&v12[*(int *)(v10 + 44)];
  sub_1000E988C((uint64_t)v5, v16);
  *(_WORD *)(v16 + *(int *)(sub_10000A38C(&qword_100365700) + 36)) = 256;
  sub_10000D728((uint64_t)v8, (uint64_t)v12, &qword_1003656E8);
  sub_1000E9A44((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for Capsule);
  sub_10000D78C((uint64_t)v8, &qword_1003656E8);
  uint64_t v17 = static Color.black.getter();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double v18 = *(double *)&v27[1];
  uint64_t v19 = v27[3];
  uint64_t v20 = v27[4];
  uint64_t v21 = v27[5];
  swift_retain();
  uint64_t v22 = static Alignment.center.getter();
  uint64_t v24 = v23;
  sub_10000D728((uint64_t)v12, a1, &qword_1003656F0);
  swift_release();
  uint64_t v25 = a1 + *(int *)(sub_10000A38C(&qword_100365708) + 36);
  *(double *)uint64_t v25 = v18 * 0.5;
  *(double *)(v25 + 8) = v18;
  *(void *)(v25 + 16) = v27[2];
  *(void *)(v25 + 24) = v19;
  *(void *)(v25 + 32) = v20;
  *(void *)(v25 + 40) = v21;
  *(void *)(v25 + 48) = v17;
  *(_WORD *)(v25 + 56) = 256;
  *(void *)(v25 + 64) = v22;
  *(void *)(v25 + 72) = v24;
  return sub_10000D78C((uint64_t)v12, &qword_1003656F0);
}

uint64_t sub_1000E8C00@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v3 = sub_10000A38C(&qword_100365710);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v23 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v23 - v14;
  sub_1000E98F0(a1, (uint64_t)v25);
  uint64_t v16 = swift_allocObject();
  sub_1000E9964((uint64_t)v25, v16 + 16);
  sub_10000A38C(&qword_100365718);
  sub_1000E9AE0(&qword_100365720, &qword_100365718, (void (*)(void))sub_1000E99A8);
  Button.init(action:label:)();
  sub_1000E98F0(a1, (uint64_t)v25);
  uint64_t v17 = swift_allocObject();
  sub_1000E9964((uint64_t)v25, v17 + 16);
  Button.init(action:label:)();
  double v18 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v18(v10, v15, v3);
  v18(v7, v13, v3);
  uint64_t v19 = v24;
  v18(v24, v10, v3);
  uint64_t v20 = sub_10000A38C(&qword_100365748);
  v18(&v19[*(int *)(v20 + 48)], v7, v3);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v4 + 8);
  v21(v13, v3);
  v21(v15, v3);
  v21(v7, v3);
  return ((uint64_t (*)(char *, uint64_t))v21)(v10, v3);
}

uint64_t sub_1000E8F14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ViewServiceInput(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    v9[1] = v6;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 + 8) + 8))(v4, ObjectType);
    sub_1000E9A44((uint64_t)v4, type metadata accessor for ViewServiceInput);
    return swift_unknownObjectRelease();
  }
  return result;
}

double sub_1000E9010@<D0>(uint64_t a1@<X8>)
{
  return sub_1000E9178((uint64_t (*)(uint64_t))&static Color.blue.getter, a1);
}

uint64_t sub_1000E9034(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ViewServiceInput(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (void *)((char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    v9[1] = v6;
    *uint64_t v4 = 0xD000000000000025;
    v4[1] = 0x80000001002BDD40;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, uint64_t))(*(void *)(v7 + 8) + 8))(v4, ObjectType);
    sub_1000E9A44((uint64_t)v4, type metadata accessor for ViewServiceInput);
    return swift_unknownObjectRelease();
  }
  return result;
}

double sub_1000E914C@<D0>(uint64_t a1@<X8>)
{
  return sub_1000E9178((uint64_t (*)(uint64_t))&static Color.red.getter, a1);
}

double sub_1000E9178@<D0>(uint64_t (*a1)(uint64_t)@<X2>, uint64_t a2@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v4 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  uint64_t v11 = static Alignment.center.getter();
  sub_1000E8750(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v30, 0.0, 1, 0.0, 1, v11, v12, v4, v6, v10, v8);
  sub_1000E9A24(v4, v6, v10);
  uint64_t v13 = swift_bridgeObjectRelease();
  uint64_t v14 = a1(v13);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v15 = static Alignment.center.getter();
  long long v16 = v30[5];
  long long v17 = v30[7];
  long long v18 = v30[8];
  *(_OWORD *)(a2 + 96) = v30[6];
  *(_OWORD *)(a2 + 112) = v17;
  *(_OWORD *)(a2 + 128) = v18;
  long long v19 = v30[3];
  *(_OWORD *)(a2 + 32) = v30[2];
  *(_OWORD *)(a2 + 48) = v19;
  *(_OWORD *)(a2 + 64) = v30[4];
  *(_OWORD *)(a2 + 80) = v16;
  long long v20 = v30[1];
  *(_OWORD *)a2 = v30[0];
  *(_OWORD *)(a2 + 16) = v20;
  *(double *)(a2 + 144) = v23 * 0.5;
  *(double *)(a2 + 152) = v23;
  double result = v24;
  *(double *)(a2 + 160) = v24;
  *(void *)(a2 + 168) = v25;
  *(void *)(a2 + 176) = v26;
  *(void *)(a2 + 184) = v27;
  *(void *)(a2 + 192) = v14;
  *(_WORD *)(a2 + 200) = 256;
  *(_DWORD *)(a2 + 202) = v28;
  *(_WORD *)(a2 + 206) = v29;
  *(void *)(a2 + 208) = v15;
  *(void *)(a2 + 216) = v22;
  return result;
}

uint64_t sub_1000E9324()
{
  return static View._viewListCount(inputs:)();
}

void sub_1000E9344()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold25BannerDebugViewController____lazy_storage___debugView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17proximitycontrold25BannerDebugViewController____lazy_storage___debugView);
  if (v2) {
    goto LABEL_4;
  }
  uint64_t v3 = v0;
  swift_unknownObjectWeakInit();
  id v4 = objc_allocWithZone((Class)sub_10000A38C(&qword_1003656E0));
  uint64_t v5 = (void *)UIHostingController.init(rootView:)();
  id v6 = [v5 view];

  if (v6)
  {
    uint64_t v7 = *(void **)(v3 + v1);
    *(void *)(v3 + v1) = v6;
    v6;

    uint64_t v2 = 0;
LABEL_4:
    id v8 = v2;
    return;
  }
  __break(1u);
}

id sub_1000E9408()
{
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for BannerDebugViewController();
  [super viewDidLoad];
  sub_1000E9344();
  uint64_t v2 = v1;
  [v1 setFrame:CGRectMake(0.0, 0.0, 300.0, 20.0)];

  id result = [v0 view];
  if (result)
  {
    id v4 = result;
    sub_1000E9344();
    id v6 = v5;
    [v4 addSubview:v5];

    sub_1000E9344();
    id v8 = v7;
    [v7 frame];
    double v10 = v9;
    double v12 = v11;

    return [v0 setPreferredContentSize:v10, v12];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000E95B8()
{
  sub_100024144(v0 + OBJC_IVAR____TtC17proximitycontrold25BannerDebugViewController_debugDelegate);
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC17proximitycontrold25BannerDebugViewController____lazy_storage___debugView);
}

id sub_1000E95F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BannerDebugViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for BannerDebugViewController()
{
  return self;
}

uint64_t sub_1000E969C(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC17proximitycontrold25BannerDebugViewController_debugDelegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 + 8) + 8))(a1, ObjectType);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for BannerDebugView(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakCopyInit();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for BannerDebugView(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakCopyAssign();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t initializeWithTake for BannerDebugView(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakTakeInit();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for BannerDebugView(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakTakeAssign();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t getEnumTagSinglePayload for BannerDebugView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  if ((*(void *)(a1 + 8) & 0xF000000000000007) != 0) {
    int v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  }
  else {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BannerDebugView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      *(void *)(result + 8) = 1;
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BannerDebugView()
{
  return &type metadata for BannerDebugView;
}

uint64_t sub_1000E9870(uint64_t a1)
{
  return _swift_getOpaqueTypeConformance2(a1, &unk_1002E306C, 1);
}

uint64_t sub_1000E988C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Capsule();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E98F0(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  return a2;
}

uint64_t sub_1000E992C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000E9964(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  return a2;
}

uint64_t sub_1000E99A0()
{
  return sub_1000E8F14(v0 + 16);
}

unint64_t sub_1000E99A8()
{
  unint64_t result = qword_100365728;
  if (!qword_100365728)
  {
    sub_10000A3D0(&qword_100365730);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100365728);
  }
  return result;
}

uint64_t sub_1000E9A1C()
{
  return sub_1000E9034(v0 + 16);
}

uint64_t sub_1000E9A24(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000E9A34(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1000E9A44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000E9AA4()
{
  return sub_1000E9AE0(&qword_100365750, &qword_100365708, (void (*)(void))sub_1000E9B84);
}

uint64_t sub_1000E9AE0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A3D0(a2);
    a3();
    sub_10000B010(&qword_100365738, &qword_100365740);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000E9B84()
{
  unint64_t result = qword_100365758;
  if (!qword_100365758)
  {
    sub_10000A3D0(&qword_1003656F0);
    sub_10000B010(&qword_100365760, &qword_1003656E8);
    sub_10000B010(&qword_100365768, &qword_100365700);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100365758);
  }
  return result;
}

void sub_1000E9C50()
{
  id v0 = objc_allocWithZone((Class)CULogHandle);
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 initWithSubsystem:v1 category:v2];

  qword_100365770 = (uint64_t)v3;
}

os_activity_t _makeActivity(named:dso:)(char *description, int a2, char a3, void *dso)
{
  if ((a3 & 1) == 0)
  {
    if (description)
    {
      if (dso)
      {
        if (qword_10035A570 == -1)
        {
LABEL_5:
          id v6 = qword_100365778;
          return _os_activity_create(dso, description, v6, OS_ACTIVITY_FLAG_DEFAULT);
        }
LABEL_20:
        swift_once();
        goto LABEL_5;
      }
LABEL_30:
      os_activity_t result = (os_activity_t)_assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((unint64_t)description >> 32) {
    goto LABEL_19;
  }
  if (description >> 11 == 27) {
    goto LABEL_29;
  }
  if (description >> 16 > 0x10)
  {
    __break(1u);
  }
  else if ((description & 0xFFFFFF80) == 0)
  {
    if (description <= 0xFF)
    {
      unsigned int v8 = ((_BYTE)description + 1);
      goto LABEL_14;
    }
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int v9 = (description & 0x3F) << 8;
  unsigned int v10 = (v9 | (description >> 6)) + 33217;
  unsigned int v11 = (v9 | (description >> 6) & 0x3F) << 8;
  unsigned int v12 = (((v11 | (description >> 12) & 0x3F) << 8) | (description >> 18)) - 2122219023;
  unsigned int v13 = (v11 | (description >> 12)) + 8487393;
  if (description >> 16) {
    unsigned int v8 = v12;
  }
  else {
    unsigned int v8 = v13;
  }
  if (description < 0x800) {
    unsigned int v8 = v10;
  }
LABEL_14:
  *(void *)descriptiona = (v8 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v8) & 0x38)) & 0x38));
  if (!dso) {
    goto LABEL_30;
  }
  if (qword_10035A570 != -1) {
    swift_once();
  }
  return _os_activity_create(dso, descriptiona, (os_activity_t)qword_100365778, OS_ACTIVITY_FLAG_DEFAULT);
}

uint64_t sub_1000E9F08()
{
  if (v0[4].opaque[0])
  {
    v1._uint64_t countAndFlagsBits = StaticString.description.getter();
    String.append(_:)(v1);
    swift_bridgeObjectRelease();
    if (qword_10035A568 != -1) {
      swift_once();
    }
    NSString v2 = (void *)qword_100365770;
    NSString v3 = String._bridgeToObjectiveC()();
    [v2 ulog:40 message:v3];
    swift_bridgeObjectRelease();

    swift_beginAccess();
    os_activity_scope_leave(v0 + 3);
    swift_endAccess();
    v0[4].opaque[0] = 0;
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1000EA040()
{
  Swift::String v1 = v0;
  if (!v0[4].opaque[0])
  {
    StaticString.description.getter();
    v2._uint64_t countAndFlagsBits = 46;
    v2._object = (void *)0xE100000000000000;
    String.append(_:)(v2);
    v3._uint64_t countAndFlagsBits = StaticString.description.getter();
    String.append(_:)(v3);
    swift_bridgeObjectRelease();
    String.utf8CString.getter();
    swift_bridgeObjectRelease();
    uint64_t v4 = os_transaction_create();
    swift_release();
    v1[4].opaque[0] = v4;
    swift_unknownObjectRelease();
  }
  v5._uint64_t countAndFlagsBits = StaticString.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  if (qword_10035A568 != -1) {
    swift_once();
  }
  id v6 = (void *)qword_100365770;
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 ulog:40 message:v7];
  swift_bridgeObjectRelease();

  swift_beginAccess();
  unsigned int v8 = swift_unknownObjectRetain();
  os_activity_scope_enter(v8, v1 + 3);
  swift_endAccess();
  return swift_unknownObjectRelease();
}

void sub_1000EA1F4()
{
  if (v0[4].opaque[0])
  {
    v1._uint64_t countAndFlagsBits = StaticString.description.getter();
    String.append(_:)(v1);
    swift_bridgeObjectRelease();
    if (qword_10035A568 != -1) {
      swift_once();
    }
    Swift::String v2 = (void *)qword_100365770;
    NSString v3 = String._bridgeToObjectiveC()();
    [v2 ulog:40 message:v3];
    swift_bridgeObjectRelease();

    swift_beginAccess();
    os_activity_scope_leave(v0 + 3);
    swift_endAccess();
    v0[4].opaque[0] = 0;
    swift_unknownObjectRelease();
  }
}

unint64_t sub_1000EA30C(uint64_t *a1, uint64_t *a2)
{
  return sub_1000EAB84(*a1, *a2);
}

unint64_t sub_1000EA318()
{
  Hasher.init(_seed:)();
  unint64_t result = *(void *)(v0 + 16);
  if ((*(unsigned char *)(v0 + 32) & 1) == 0)
  {
    if (result)
    {
LABEL_9:
      static String._fromUTF8Repairing(_:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      return Hasher._finalize()();
    }
    __break(1u);
    goto LABEL_11;
  }
  if (HIDWORD(result))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (result >> 11 != 27)
  {
    if (WORD1(result) > 0x10u)
    {
LABEL_12:
      __break(1u);
      goto LABEL_9;
    }
    if ((result & 0xFFFFFF80) != 0 || result <= 0xFF) {
      goto LABEL_9;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1000EA474()
{
  return sub_1000EA318();
}

unint64_t sub_1000EA498()
{
  unint64_t result = *(void *)(*(void *)v0 + 16);
  if (*(unsigned char *)(*(void *)v0 + 32))
  {
    if (!HIDWORD(result))
    {
      if (result >> 11 == 27)
      {
LABEL_14:
        __break(1u);
        return result;
      }
      if (WORD1(result) <= 0x10u)
      {
        sub_1000EAAB4();
        goto LABEL_8;
      }
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  static String._fromUTF8Repairing(_:)();
LABEL_8:
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

unint64_t sub_1000EA54C()
{
  Hasher.init(_seed:)();
  unint64_t result = *(void *)(*(void *)v0 + 16);
  if ((*(unsigned char *)(*(void *)v0 + 32) & 1) == 0)
  {
    if (result)
    {
      static String._fromUTF8Repairing(_:)();
LABEL_8:
      String.hash(into:)();
      swift_bridgeObjectRelease();
      return Hasher._finalize()();
    }
    __break(1u);
    goto LABEL_10;
  }
  if (HIDWORD(result))
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (result >> 11 != 27)
  {
    if (WORD1(result) <= 0x10u)
    {
      sub_1000EAAB4();
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1000EA600(uint64_t a1, uint64_t a2)
{
  return _ss12StaticStringV17proximitycontroldE2eeoiySbAB_ABtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t StaticString.hash(into:)(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
  {
    if (a2)
    {
LABEL_9:
      static String._fromUTF8Repairing(_:)();
      String.hash(into:)();
      return swift_bridgeObjectRelease();
    }
    __break(1u);
    goto LABEL_11;
  }
  if (HIDWORD(a2))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a2 >> 11 != 27)
  {
    if (WORD1(a2) > 0x10u)
    {
LABEL_12:
      __break(1u);
      goto LABEL_9;
    }
    if ((a2 & 0xFFFFFF80) != 0 || a2 <= 0xFF) {
      goto LABEL_9;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Int StaticString.hashValue.getter(unint64_t a1, uint64_t a2, char a3)
{
  Swift::Int result = Hasher.init(_seed:)();
  if ((a3 & 1) == 0)
  {
    if (a1)
    {
LABEL_9:
      static String._fromUTF8Repairing(_:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      return Hasher._finalize()();
    }
    __break(1u);
    goto LABEL_11;
  }
  if (HIDWORD(a1))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a1 >> 11 != 27)
  {
    if (WORD1(a1) > 0x10u)
    {
LABEL_12:
      __break(1u);
      goto LABEL_9;
    }
    if ((a1 & 0xFFFFFF80) != 0 || a1 <= 0xFF) {
      goto LABEL_9;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Int sub_1000EA8D0()
{
  return StaticString.hashValue.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1000EA8DC(uint64_t a1)
{
  return StaticString.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

Swift::Int sub_1000EA8E8()
{
  unint64_t v1 = *v0;
  char v2 = *((unsigned char *)v0 + 16);
  Swift::Int result = Hasher.init(_seed:)();
  if ((v2 & 1) == 0)
  {
    if (v1)
    {
      static String._fromUTF8Repairing(_:)();
LABEL_8:
      String.hash(into:)();
      swift_bridgeObjectRelease();
      return Hasher._finalize()();
    }
    __break(1u);
    goto LABEL_10;
  }
  if (HIDWORD(v1))
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v1 >> 11 != 27)
  {
    if (WORD1(v1) <= 0x10u)
    {
      sub_1000EAAB4();
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1000EA9A0@<X0>(char *description@<X0>, void *dso@<X2>, void *a3@<X8>)
{
  if (dso && description)
  {
    if (qword_10035A570 != -1) {
      swift_once();
    }
    uint64_t result = (uint64_t)_os_activity_create(dso, description, (os_activity_t)qword_100365778, OS_ACTIVITY_FLAG_DEFAULT);
    *a3 = result;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1000EAA78()
{
  qword_100365778 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");

  return swift_unknownObjectRetain();
}

uint64_t sub_1000EAAB4()
{
  return static String._fromUTF8Repairing(_:)();
}

unint64_t sub_1000EAB84(uint64_t a1, uint64_t a2)
{
  unint64_t result = *(void *)(a1 + 16);
  unint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 32);
  if ((*(unsigned char *)(a1 + 32) & 1) == 0)
  {
    if (result) {
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_23;
  }
  if (HIDWORD(result))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_9;
  }
  if (result >> 11 == 27)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (WORD1(result) > 0x10u) {
    goto LABEL_24;
  }
  if ((result & 0xFFFFFF80) == 0 && result > 0xFF) {
    goto LABEL_28;
  }
LABEL_9:
  unint64_t result = static String._fromUTF8Repairing(_:)();
  unint64_t v3 = result;
  uint64_t v2 = v8;
  if ((v7 & 1) == 0)
  {
    if (v6) {
      goto LABEL_17;
    }
    __break(1u);
    goto LABEL_27;
  }
  if (HIDWORD(v6))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v6 >> 11 == 27)
  {
LABEL_33:
    __break(1u);
    return result;
  }
  if (WORD1(v6) <= 0x10u)
  {
    if ((v6 & 0xFFFFFF80) != 0 || v6 <= 0xFF) {
      goto LABEL_17;
    }
    __break(1u);
    goto LABEL_32;
  }
LABEL_29:
  __break(1u);
LABEL_17:
  if (v3 == static String._fromUTF8Repairing(_:)() && v2 == v9) {
    char v10 = 1;
  }
  else {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

unint64_t _ss12StaticStringV17proximitycontroldE2eeoiySbAB_ABtFZ_0(unint64_t result, uint64_t a2, char a3, unint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 1) == 0)
  {
    if (result) {
      goto LABEL_9;
    }
    __break(1u);
  }
  if (HIDWORD(result))
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_9;
  }
  if (result >> 11 == 27)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (WORD1(result) > 0x10u) {
    goto LABEL_23;
  }
  if ((result & 0xFFFFFF80) == 0 && result > 0xFF) {
    goto LABEL_27;
  }
LABEL_9:
  unint64_t result = static String._fromUTF8Repairing(_:)();
  unint64_t v7 = result;
  uint64_t v6 = v10;
  if ((a6 & 1) == 0)
  {
    if (a4) {
      goto LABEL_17;
    }
    __break(1u);
    goto LABEL_26;
  }
  if (HIDWORD(a4))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (a4 >> 11 == 27)
  {
LABEL_32:
    __break(1u);
    return result;
  }
  if (WORD1(a4) <= 0x10u)
  {
    if ((a4 & 0xFFFFFF80) != 0 || a4 <= 0xFF) {
      goto LABEL_17;
    }
    __break(1u);
    goto LABEL_31;
  }
LABEL_28:
  __break(1u);
LABEL_17:
  if (v7 == static String._fromUTF8Repairing(_:)() && v6 == v11) {
    char v12 = 1;
  }
  else {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

unint64_t sub_1000EB0B0()
{
  unint64_t result = qword_100365780;
  if (!qword_100365780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100365780);
  }
  return result;
}

uint64_t type metadata accessor for Transaction()
{
  return self;
}

unint64_t sub_1000EB12C()
{
  unint64_t result = qword_1003658B0;
  if (!qword_1003658B0)
  {
    type metadata accessor for Transaction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003658B0);
  }
  return result;
}

BOOL sub_1000EB180(uint64_t a1, uint64_t a2)
{
  return sub_1000EB1A4(*(void **)a1, *(id *)(a1 + 8), *(void **)(a1 + 16), *(unsigned char *)(a1 + 24), *(void **)a2, *(id *)(a2 + 8), *(void **)(a2 + 16), *(unsigned char *)(a2 + 24));
}

BOOL sub_1000EB1A4(void *a1, id a2, void *a3, char a4, void *a5, id a6, void *a7, char a8)
{
  if (a4)
  {
    if (a4 == 1)
    {
      if (a8 != 1) {
        return 0;
      }
      sub_100019E10(0, (unint64_t *)&qword_10035C098);
      sub_1000EB3D8(a1, a2, a3, 1);
      sub_1000EB3D8(a5, a6, a7, 1);
      char v14 = static NSObject.== infix(_:_:)();
      sub_1000EB450(a5, (uint64_t)a6, a7, 1);
      sub_1000EB450(a1, (uint64_t)a2, a3, 1);
      return (v14 & 1) != 0;
    }
    if (a8 == 2)
    {
      if (a1 == a5 && a2 == a6)
      {
        sub_1000EB3D8(a1, a2, a7, 2);
        id v17 = a3;
        swift_bridgeObjectRelease();
      }
      else
      {
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_1000EB3D8(a5, a6, a7, 2);
        id v19 = a3;
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
        {

          return 0;
        }
      }
      if (a3)
      {
        if (a7)
        {
          sub_100019E10(0, &qword_1003658C0);
          id v20 = a3;
          id v21 = a7;
          char v22 = static NSObject.== infix(_:_:)();

          if (v22) {
            return 1;
          }
        }
        else
        {
        }
      }
      else
      {
        if (!a7) {
          return 1;
        }
      }
    }
    return 0;
  }
  if (a8) {
    return 0;
  }
  if (a1 == a5 && a2 == a6) {
    return 1;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  BOOL result = 0;
  if (v15) {
    return 1;
  }
  return result;
}

id sub_1000EB3D8(id result, id a2, void *a3, char a4)
{
  if (a4 == 2)
  {
    id v4 = a3;
LABEL_6:
    return (id)swift_bridgeObjectRetain();
  }
  if (a4 != 1)
  {
    if (a4) {
      return result;
    }
    goto LABEL_6;
  }

  return result;
}

void sub_1000EB450(void *a1, uint64_t a2, void *a3, char a4)
{
  if (a4 == 2)
  {
    swift_bridgeObjectRelease();
    a1 = a3;
  }
  else if (a4 != 1)
  {
    if (!a4)
    {
      swift_bridgeObjectRelease();
    }
    return;
  }
}

void destroy for BannerImage(uint64_t a1)
{
}

uint64_t initializeWithCopy for BannerImage(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  Swift::String v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1000EB3D8(*(id *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for BannerImage(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  Swift::String v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1000EB3D8(*(id *)a2, v4, v5, v6);
  unint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void **)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1000EB450(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for BannerImage(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  Swift::String v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1000EB450(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for BannerImage(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BannerImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)BOOL result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000EB680(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1000EB688(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BannerImage()
{
  return &type metadata for BannerImage;
}

void sub_1000EB6A0(uint64_t a1, uint64_t a2, void (*a3)(unint64_t, void, void), uint64_t a4)
{
  Swift::String v5 = v4;
  uint64_t ObjectType = swift_getObjectType();
  id v10 = sub_1001F5E20();
  NSString v11 = String._bridgeToObjectiveC()();
  [v10 ulog:40 message:v11];

  id v12 = sub_1000EC788();
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  unsigned __int8 v16 = sub_1001AC344(v13, v15);
  swift_bridgeObjectRelease();
  if (v16 - 3 < 4)
  {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      goto LABEL_10;
    }
LABEL_6:
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong)
    {
      sub_10001A050();
      uint64_t v24 = swift_allocError();
      *(void *)uint64_t v30 = 0xD000000000000010;
      *(void *)(v30 + 8) = 0x80000001002BDEB0;
      *(unsigned char *)(v30 + 16) = 7;
      goto LABEL_20;
    }
    id v19 = (void *)Strong;
    strcpy((char *)&v55, "rangingToken");
    BYTE13(v55) = 0;
    HIWORD(v55) = -5120;
    AnyHashable.init<A>(_:)();
    if (*(void *)(a1 + 16) && (unint64_t v20 = sub_100269E60((uint64_t)v60), (v21 & 1) != 0))
    {
      sub_100027B10(*(void *)(a1 + 56) + 32 * v20, (uint64_t)&v57);
    }
    else
    {
      long long v57 = 0u;
      long long v58 = 0u;
    }
    sub_1000BA108((uint64_t)v60);
    if (*((void *)&v58 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v52 = a4;
        unint64_t v26 = *((void *)&v55 + 1);
        sub_1000ECCBC();
        uint64_t v51 = sub_10016C184();
        if (v51)
        {
          long long v27 = v55;
          uint64_t v59 = a2;
          if (a2)
          {
            strcpy((char *)&v57, "rangingToken");
            BYTE13(v57) = 0;
            HIWORD(v57) = -5120;
            swift_bridgeObjectRetain();
            AnyHashable.init<A>(_:)();
            strcpy((char *)&v55, "rangingToken");
            BYTE13(v55) = 0;
            HIWORD(v55) = -5120;
            AnyHashable.init<A>(_:)();
            if (*(void *)(a1 + 16) && (unint64_t v28 = sub_100269E60((uint64_t)&v57), (v29 & 1) != 0))
            {
              sub_100027B10(*(void *)(a1 + 56) + 32 * v28, (uint64_t)&v55);
            }
            else
            {
              long long v55 = 0u;
              long long v56 = 0u;
            }
            long long v34 = (void *)v51;
            unint64_t v33 = v26;
            uint64_t v35 = v52;
            sub_1000BA108((uint64_t)&v57);
            if (*((void *)&v56 + 1))
            {
              sub_100027B00(&v55, v54);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              sub_1002650FC(v54, (uint64_t)v60, isUniquelyReferenced_nonNull_native);
              uint64_t v59 = a2;
              swift_bridgeObjectRelease();
              sub_1000BA108((uint64_t)v60);
            }
            else
            {
              sub_1000911A4((uint64_t)&v55);
              sub_1001306C0((uint64_t)v60, v54);
              sub_1000BA108((uint64_t)v60);
              sub_1000911A4((uint64_t)v54);
            }
          }
          else
          {
            long long v34 = (void *)v51;
            unint64_t v33 = *((void *)&v55 + 1);
            uint64_t v35 = v52;
          }
          uint64_t v37 = swift_bridgeObjectRetain();
          uint64_t v38 = sub_1001880D4(v37);
          swift_bridgeObjectRelease();
          if (v38)
          {
            id v39 = sub_100157C88(v34, v38);
            if (v40 >> 60 == 15)
            {
              sub_1000EC7C4();
              uint64_t v41 = swift_allocError();
              *id v42 = 1;
              sub_1000ECBA4((uint64_t (*)(void, void, uint64_t))a3, v35, v41);
              sub_10000DBEC(v27, *((unint64_t *)&v27 + 1));

              swift_errorRelease();
              swift_release();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v47 = (uint64_t)v39;
              unint64_t v48 = v40;
              sub_1000EC818(a3, v35, (uint64_t)v39, v40, (uint64_t)v5);
              sub_10000DBEC(v27, *((unint64_t *)&v27 + 1));

              sub_10000DBD8(v47, v48);
              swift_bridgeObjectRelease();
              swift_release();
            }
            return;
          }
          if (a2)
          {
            *(void *)&long long v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            *((void *)&v57 + 1) = v43;
            AnyHashable.init<A>(_:)();
            if (*(void *)(a2 + 16))
            {
              unint64_t v44 = sub_100269E60((uint64_t)v60);
              uint64_t v45 = ObjectType;
              if (v46)
              {
                sub_100027B10(*(void *)(a2 + 56) + 32 * v44, (uint64_t)&v57);
              }
              else
              {
                long long v57 = 0u;
                long long v58 = 0u;
              }
            }
            else
            {
              long long v57 = 0u;
              long long v58 = 0u;
              uint64_t v45 = ObjectType;
            }
            sub_1000BA108((uint64_t)v60);
            if (*((void *)&v58 + 1))
            {
              swift_dynamicCast();
LABEL_46:
              id v49 = (void *)swift_allocObject();
              v49[2] = v5;
              _OWORD v49[3] = a3;
              v49[4] = v35;
              v49[5] = v45;
              id v50 = v5;
              swift_retain();
              sub_10010ED00(v34, (void (*)(void))sub_1000ECD3C);
              sub_10000DBEC(v27, v33);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();

              return;
            }
          }
          else
          {
            long long v57 = 0u;
            long long v58 = 0u;
            uint64_t v45 = ObjectType;
          }
          sub_1000911A4((uint64_t)&v57);
          goto LABEL_46;
        }
        sub_10000DBEC(v55, *((unint64_t *)&v55 + 1));
        a4 = v52;
      }
    }
    else
    {
      sub_1000911A4((uint64_t)&v57);
    }
    sub_10001A050();
    uint64_t v31 = swift_allocError();
    *(void *)uint64_t v32 = 0xD000000000000020;
    *(void *)(v32 + 8) = 0x80000001002BDED0;
    *(unsigned char *)(v32 + 16) = 9;
    sub_1000ECBA4((uint64_t (*)(void, void, uint64_t))a3, a4, v31);
    swift_errorRelease();

    return;
  }
  if (v16 < 3u)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
LABEL_10:
  id v22 = sub_1001F5E20();
  NSString v23 = String._bridgeToObjectiveC()();
  [v22 ulog:90 message:v23];

  sub_1000EC7C4();
  uint64_t v24 = swift_allocError();
  *uint64_t v25 = 8;
LABEL_20:
  sub_1000ECBA4((uint64_t (*)(void, void, uint64_t))a3, a4, v24);

  swift_errorRelease();
}

uint64_t sub_1000EBDB4(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(unint64_t, void, void), uint64_t a5)
{
  if (a2 >> 60 == 15)
  {
    sub_1000EC7C4();
    uint64_t v7 = swift_allocError();
    unsigned char *v8 = 1;
    sub_1000ECBA4((uint64_t (*)(void, void, uint64_t))a4, a5, v7);
    return swift_errorRelease();
  }
  else
  {
    sub_10001FBBC(a1, a2);
    sub_1000EC818(a4, a5, a1, a2, a3);
    return sub_10000DBD8(a1, a2);
  }
}

uint64_t sub_1000EBE94(uint64_t a1, unint64_t a2, uint64_t a3)
{
  int v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  v9._uint64_t countAndFlagsBits = sub_10009BB90();
  String.append(_:)(v9);
  swift_release();
  swift_bridgeObjectRelease();
  id v10 = sub_1001F5E20();
  swift_bridgeObjectRetain();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 ulog:v11 message:0xD00000000000001BLL 0x80000001002BDF50];
  swift_bridgeObjectRelease();

  id v12 = (void *)swift_allocObject();
  _OWORD v12[2] = a3;
  v12[3] = a1;
  v12[4] = a2;
  void v12[5] = v4;
  v12[6] = ObjectType;
  sub_10000A38C(&qword_100360040);
  swift_allocObject();
  swift_retain();
  sub_10001F8BC(a1, a2);
  id v13 = v4;
  return Future.init(_:)();
}

uint64_t sub_1000EC06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  swift_retain();
  uint64_t v14 = sub_1001F7514();
  uint64_t v16 = v15;
  sub_10000A38C((uint64_t *)&unk_1003658D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10028D430;
  strcpy((char *)(inited + 32), "rangingToken");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 48) = a4;
  *(void *)(inited + 56) = a5;
  sub_10001F8BC(a4, a5);
  unint64_t v18 = sub_10026924C(inited);
  unint64_t v19 = sub_1001B918C(v18);
  swift_bridgeObjectRelease();
  unint64_t v20 = (void *)swift_allocObject();
  v20[2] = v14;
  v20[3] = v16;
  void v20[4] = sub_1000ECDE0;
  v20[5] = v13;
  v20[6] = a3;
  v20[7] = a7;
  swift_retain();
  sub_1001884A0(0xD000000000000013, (void *)0x80000001002BDF70, a3, v19, 0, 0, (void (*)(void, void, uint64_t))sub_1000ECE34, (uint64_t)v20);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1000EC200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t, void, uint64_t), uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a3)
  {
    uint64_t v31 = 0;
    uint64_t v32 = (void *)0xE000000000000000;
    swift_errorRetain();
    _StringGuts.grow(_:)(37);
    v13._uint64_t countAndFlagsBits = 539173667;
    v13._object = (void *)0xE400000000000000;
    String.append(_:)(v13);
    v14._uint64_t countAndFlagsBits = a4;
    v14._object = a5;
    String.append(_:)(v14);
    v15._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    v15._object = (void *)0x80000001002BDFF0;
    String.append(_:)(v15);
    *(void *)&v35[0] = a3;
    sub_10000A38C((uint64_t *)&unk_100365D60);
    _print_unlocked<A, B>(_:_:)();
    sub_10016AE10(90, 0, (void *)0xE000000000000000, 0, a9, (uint64_t)&off_10032C040);
    swift_bridgeObjectRelease();
    swift_errorRetain();
    a6(a3, 0, 1);
    swift_errorRelease();
    return swift_errorRelease();
  }
  if (!a1)
  {
    long long v33 = 0u;
    long long v34 = 0u;
LABEL_14:
    sub_1000911A4((uint64_t)&v33);
LABEL_16:
    uint64_t v31 = 0;
    uint64_t v32 = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(57);
    v22._uint64_t countAndFlagsBits = 539173667;
    v22._object = (void *)0xE400000000000000;
    String.append(_:)(v22);
    v23._uint64_t countAndFlagsBits = a4;
    v23._object = a5;
    String.append(_:)(v23);
    v24._uint64_t countAndFlagsBits = 0xD000000000000033;
    v24._object = (void *)0x80000001002BDF90;
    String.append(_:)(v24);
    sub_10016AE10(90, v31, v32, 0, a9, (uint64_t)&off_10032C040);
    swift_bridgeObjectRelease();
    sub_1000EC7C4();
    uint64_t v25 = swift_allocError();
    *unint64_t v26 = 3;
    a6(v25, 0, 1);
    return swift_errorRelease();
  }
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v17 = sub_100269E60((uint64_t)&v31), (v18 & 1) != 0))
  {
    sub_100027B10(*(void *)(a1 + 56) + 32 * v17, (uint64_t)&v33);
  }
  else
  {
    long long v33 = 0u;
    long long v34 = 0u;
  }
  sub_1000BA108((uint64_t)&v31);
  if (!*((void *)&v34 + 1)) {
    goto LABEL_14;
  }
  sub_100027B00(&v33, v35);
  sub_100027B10((uint64_t)v35, (uint64_t)&v31);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_10000CC5C((uint64_t)v35);
    goto LABEL_16;
  }
  long long v19 = v33;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v20 = sub_100269E60((uint64_t)&v31), (v21 & 1) != 0))
  {
    sub_100027B10(*(void *)(a1 + 56) + 32 * v20, (uint64_t)&v33);
  }
  else
  {
    long long v33 = 0u;
    long long v34 = 0u;
  }
  sub_1000BA108((uint64_t)&v31);
  if (*((void *)&v34 + 1))
  {
    if (swift_dynamicCast())
    {
      sub_10004089C(v31, v32);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1000911A4((uint64_t)&v33);
  }
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v28 = sub_100269E60((uint64_t)&v31), (v29 & 1) != 0))
  {
    sub_100027B10(*(void *)(a1 + 56) + 32 * v28, (uint64_t)&v33);
  }
  else
  {
    long long v33 = 0u;
    long long v34 = 0u;
  }
  sub_1000BA108((uint64_t)&v31);
  if (*((void *)&v34 + 1))
  {
    if (swift_dynamicCast())
    {
      sub_100040A7C(v31, v32);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1000911A4((uint64_t)&v33);
  }
  uint64_t v31 = 0;
  uint64_t v32 = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  uint64_t v31 = 0xD00000000000001CLL;
  uint64_t v32 = (void *)0x80000001002BDFD0;
  v30._uint64_t countAndFlagsBits = a4;
  v30._object = a5;
  String.append(_:)(v30);
  sub_10016ABE4(v31, v32, 0, a9, (uint64_t)&off_10032C040);
  swift_bridgeObjectRelease();
  sub_10001F8BC(v19, *((unint64_t *)&v19 + 1));
  a6(v19, *((void *)&v19 + 1), 0);
  sub_10000DBEC(v19, *((unint64_t *)&v19 + 1));
  sub_10000DBEC(v19, *((unint64_t *)&v19 + 1));
  return sub_10000CC5C((uint64_t)v35);
}

id sub_1000EC788()
{
  id v0 = (id)GestaltCopyAnswer();

  return v0;
}

unint64_t sub_1000EC7C4()
{
  unint64_t result = qword_1003658C8;
  if (!qword_1003658C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003658C8);
  }
  return result;
}

uint64_t sub_1000EC818(void (*a1)(unint64_t, void, void), uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  sub_10000A38C(&qword_1003645E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10028D430;
  strcpy((char *)v35, "rangingToken");
  BYTE5(v35[1]) = 0;
  HIWORD(v35[1]) = -5120;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = &type metadata for Data;
  *(void *)(inited + 72) = a3;
  *(void *)(inited + 80) = a4;
  sub_10001F8BC(a3, a4);
  unint64_t v10 = sub_100268E80(inited);
  uint64_t v11 = OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLClient;
  id v12 = *(void **)(a5 + OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLClient);
  if (v12)
  {
    id v13 = [v12 localDevice];
    if (v13)
    {
      Swift::String v14 = v13;
      id v15 = [v13 mediaRouteIdentifier];

      if (v15)
      {
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        AnyHashable.init<A>(_:)();
        long long v34 = &type metadata for String;
        *(void *)&long long v33 = v16;
        *((void *)&v33 + 1) = v18;
        sub_100027B00(&v33, v32);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_1002650FC(v32, (uint64_t)v35, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        sub_1000BA108((uint64_t)v35);
      }
    }
    unint64_t v20 = *(void **)(a5 + v11);
    if (v20)
    {
      id v21 = [v20 localDevice];
      if (v21)
      {
        Swift::String v22 = v21;
        id v23 = [v21 deviceColor];

        if (v23)
        {
          uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v26 = v25;

          *(void *)&long long v33 = 0x646F43726F6C6F63;
          *((void *)&v33 + 1) = 0xE900000000000065;
          AnyHashable.init<A>(_:)();
          long long v34 = &type metadata for String;
          *(void *)&long long v33 = v24;
          *((void *)&v33 + 1) = v26;
          sub_100027B00(&v33, v32);
          char v27 = swift_isUniquelyReferenced_nonNull_native();
          sub_1002650FC(v32, (uint64_t)v35, v27);
          swift_bridgeObjectRelease();
          sub_1000BA108((uint64_t)v35);
        }
      }
    }
  }
  v35[0] = 0;
  v35[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v35[0] = 0xD000000000000011;
  v35[1] = 0x80000001002BDF00;
  swift_bridgeObjectRetain();
  v28._uint64_t countAndFlagsBits = Dictionary.description.getter();
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v29 = sub_1001F5E20();
  swift_bridgeObjectRetain();
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v29 ulog:40 message:v30];
  swift_bridgeObjectRelease();

  a1(v10, 0, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000ECBA4(uint64_t (*a1)(void, void, uint64_t), uint64_t a2, uint64_t a3)
{
  _StringGuts.grow(_:)(35);
  v5._object = (void *)0x80000001002BDF20;
  v5._uint64_t countAndFlagsBits = 0xD000000000000021;
  String.append(_:)(v5);
  sub_10000A38C((uint64_t *)&unk_100365D60);
  _print_unlocked<A, B>(_:_:)();
  id v6 = sub_1001F5E20();
  swift_bridgeObjectRetain();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 ulog:40 message:v7];
  swift_bridgeObjectRelease();

  return a1(0, 0, a3);
}

unint64_t sub_1000ECCBC()
{
  unint64_t result = qword_10036AF80;
  if (!qword_10036AF80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10036AF80);
  }
  return result;
}

uint64_t sub_1000ECCFC()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000ECD3C(uint64_t a1, unint64_t a2)
{
  return sub_1000EBDB4(a1, a2, *(void *)(v2 + 16), *(void (**)(unint64_t, void, void))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1000ECD50()
{
  swift_release();
  sub_10000DBEC(*(void *)(v0 + 24), *(void *)(v0 + 32));

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000ECD98(uint64_t a1, uint64_t a2)
{
  return sub_1000EC06C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_1000ECDA8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000ECDE0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_10016D2EC(a1, a2, a3 & 1, *(uint64_t (**)(void *))(v3 + 16));
}

uint64_t sub_1000ECDEC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000ECE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000EC200(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24), *(void (**)(uint64_t, void, uint64_t))(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56));
}

uint64_t sub_1000ECE64()
{
  id v1 = [v0 identifier];
  if (v1 || (id v1 = [v0 idsDeviceID]) != 0)
  {
    uint64_t v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return v3;
  }
  else
  {
    [v0 hash];
    sub_1000F3128();
    return BinaryInteger.description.getter();
  }
}

void *sub_1000ECF14()
{
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000A38C(&qword_100365D20);
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = [objc_allocWithZone((Class)NSLock) init];
  sub_10000A38C(&qword_100365D28);
  swift_allocObject();
  uint64_t v3 = PassthroughSubject.init()();
  sub_10000A38C(&qword_100365D30);
  swift_allocObject();
  uint64_t v4 = PassthroughSubject.init()();
  swift_allocObject();
  uint64_t v5 = PassthroughSubject.init()();
  *(void *)(v2 + 40) = v3;
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = v5;
  *(void *)(v2 + 64) = &_swiftEmptyDictionarySingleton;
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 16) = KeyPath;
  *(unsigned char *)(v2 + 24) = 0;
  v0[2] = v2;
  sub_10000A38C(&qword_100365D38);
  swift_allocObject();
  v0[3] = sub_1001EFDD8(0, 0, 0, 0);
  swift_allocObject();
  v0[4] = sub_1001EFDD8(0, 0, 0, 0);
  return v0;
}

uint64_t sub_1000ED094()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t *sub_1000ED108(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_10000A38C(&qword_100365D18);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = (char *)v3 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy__bluetoothState;
  v19[15] = 7;
  sub_10000A38C((uint64_t *)&unk_100365B08);
  Published.init(initialValue:)();
  (*(void (**)(char *, unsigned char *, uint64_t))(v8 + 32))(v11, v10, v7);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery) = 0;
  uint64_t v12 = OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_dispatchQueue;
  if (qword_10035A628 != -1) {
    swift_once();
  }
  id v13 = (void *)qword_1003ACB50;
  *(uint64_t *)((char *)v3 + v12) = qword_1003ACB50;
  uint64_t v14 = OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_nearbyTransaction;
  type metadata accessor for Transaction();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 56) = 0;
  *(void *)(v15 + 64) = 0;
  *(void *)(v15 + 48) = 0;
  uint64_t v16 = qword_10035A570;
  id v17 = v13;
  if (v16 != -1) {
    swift_once();
  }
  *(void *)(v15 + 40) = _os_activity_create((void *)&_mh_execute_header, "handoffCandidateNearby", (os_activity_t)qword_100365778, OS_ACTIVITY_FLAG_DEFAULT);
  *(void *)(v15 + 16) = "handoffCandidateNearby";
  *(void *)(v15 + 24) = 22;
  *(unsigned char *)(v15 + 32) = 2;
  *(uint64_t *)((char *)v3 + v14) = v15;
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_tasks) = (uint64_t)&_swiftEmptySetSingleton;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, v6, (uint64_t)&off_100327B08);
  v3[2] = a1;
  v3[3] = a2;
  return v3;
}

uint64_t sub_1000ED364()
{
  uint64_t v1 = v0;
  id v2 = sub_1001F68B4();
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 ulog:40 message:v3];

  id v4 = sub_1001F68B4();
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 ulog:40 message:v5];

  id v6 = sub_1001F68B4();
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 ulog:40 message:v7];

  uint64_t v8 = OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery;
  [*(id *)(v1 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery) invalidate];
  uint64_t v9 = *(void **)(v1 + v8);
  *(void *)(v1 + v8) = 0;

  swift_retain();
  sub_1001A89EC();
  swift_release();
  unint64_t v10 = (void *)(v1 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_tasks);
  swift_beginAccess();
  void *v10 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v11 = v1 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy__bluetoothState;
  uint64_t v12 = sub_10000A38C(&qword_100365D18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1000ED570()
{
  sub_1000ED364();

  return swift_deallocClassInstance();
}

uint64_t sub_1000ED5C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A38C(&qword_100365D48);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSString v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = sub_1001F68B4();
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 ulog:40 message:v7];

  sub_1000EF1F8();
  v9[1] = *(void *)(*(void *)(v1 + 16) + 16);
  sub_10000A38C(&qword_100365D38);
  sub_10000B010(&qword_100365D50, &qword_100365D38);
  Publisher<>.removeDuplicates()();
  sub_10000B010(&qword_100365D58, &qword_100365D48);
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  sub_10000A38C((uint64_t *)&unk_100363D00);
  swift_allocObject();
  return Future.init(_:)();
}

void sub_1000ED820(unsigned char *a1, uint64_t a2)
{
  if (*a1 == 1)
  {
    sub_1000ED944();
  }
  else
  {
    id v3 = sub_1001F68B4();
    NSString v4 = String._bridgeToObjectiveC()();
    [v3 ulog:40 message:v4];

    uint64_t v5 = OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery;
    [*(id *)(a2 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery) invalidate];
    id v6 = *(void **)(a2 + v5);
    *(void *)(a2 + v5) = 0;

    swift_retain();
    sub_1001A89EC();
    swift_release();
  }
}

uint64_t sub_1000ED904(uint64_t (*a1)(uint64_t *))
{
  uint64_t v2 = 0;
  char v3 = 0;
  return a1(&v2);
}

void sub_1000ED944()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  id v3 = sub_1001F68B4();
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 ulog:40 message:v4];

  id v5 = sub_1001F68B4();
  NSString v6 = String._bridgeToObjectiveC()();
  [v5 ulog:40 message:v6];

  uint64_t v7 = OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery;
  [*(id *)((char *)v1 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery) invalidate];
  uint64_t v8 = *(void **)((char *)v1 + v7);
  *(void *)((char *)v1 + v7) = 0;

  swift_retain();
  sub_1001A89EC();
  swift_release();
  id v9 = [objc_allocWithZone((Class)CBDiscovery) init];
  unint64_t v10 = *(void **)((char *)v1 + v7);
  *(void *)((char *)v1 + v7) = v9;
  id v11 = v9;

  [v11 setBleRSSIThresholdHint:4294967236];
  [v11 setBleScanRate:0];
  [v11 setDiscoveryFlags:0x200000000000];
  [v11 setDispatchQueue:*(void *)((char *)v1 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_dispatchQueue)];
  NSString v12 = String._bridgeToObjectiveC()();
  [v11 setLabel:v12];

  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v2;
  id v29 = sub_1000F3204;
  uint64_t v30 = v13;
  uint64_t v25 = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  char v27 = sub_100119FC4;
  Swift::String v28 = &unk_100327BB8;
  uint64_t v14 = _Block_copy(&v25);
  swift_release();
  [v11 setErrorHandler:v14];
  _Block_release(v14);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v2;
  id v29 = sub_1000F3234;
  uint64_t v30 = v15;
  uint64_t v25 = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  char v27 = sub_10007A0AC;
  Swift::String v28 = &unk_100327C08;
  uint64_t v16 = _Block_copy(&v25);
  swift_release();
  [v11 setInterruptionHandler:v16];
  _Block_release(v16);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  id v29 = sub_1000F3284;
  uint64_t v30 = v17;
  uint64_t v25 = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  char v27 = sub_10004B62C;
  Swift::String v28 = &unk_100327C30;
  uint64_t v18 = _Block_copy(&v25);
  swift_release();
  [v11 setDeviceFoundHandler:v18];
  _Block_release(v18);
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  id v29 = sub_1000F328C;
  uint64_t v30 = v19;
  uint64_t v25 = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  char v27 = sub_10004B62C;
  Swift::String v28 = &unk_100327C58;
  unint64_t v20 = _Block_copy(&v25);
  swift_release();
  [v11 setDeviceLostHandler:v20];
  _Block_release(v20);
  LOBYTE(v20) = sub_1000D2CFC((unint64_t)[v11 bluetoothState]);
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v25) = (_BYTE)v20;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = v2;
  id v29 = sub_1000F3294;
  uint64_t v30 = v22;
  uint64_t v25 = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  char v27 = sub_10007A0AC;
  Swift::String v28 = &unk_100327CA8;
  id v23 = _Block_copy(&v25);
  swift_release();
  [v11 setBluetoothStateChangedHandler:v23];
  _Block_release(v23);
  id v29 = sub_1000F329C;
  uint64_t v30 = (uint64_t)v1;
  uint64_t v25 = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  char v27 = sub_100119FC4;
  Swift::String v28 = &unk_100327CD0;
  uint64_t v24 = _Block_copy(&v25);
  swift_retain();
  swift_release();
  [v11 activateWithCompletion:v24];
  _Block_release(v24);
}

uint64_t sub_1000EDF44(uint64_t a1, uint64_t a2)
{
  if (!a1)
  {
    sub_10001A050();
    swift_allocError();
    *(void *)uint64_t v3 = 0x7265766F63736944;
    *(void *)(v3 + 8) = 0xEF726F7272652079;
    *(unsigned char *)(v3 + 16) = 11;
  }
  swift_errorRetain();
  _StringGuts.grow(_:)(25);
  v4._object = (void *)0x80000001002BE410;
  v4._uint64_t countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v4);
  sub_10000A38C((uint64_t *)&unk_100365D60);
  _print_unlocked<A, B>(_:_:)();
  sub_10016AE10(90, 0, (void *)0xE000000000000000, 0, a2, (uint64_t)&off_100327B08);
  swift_bridgeObjectRelease();
  return swift_errorRelease();
}

uint64_t sub_1000EE078(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000EE958(a1, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000EE0DC(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000EE958(0, a1);
    return swift_release();
  }
  return result;
}

void sub_1000EE140(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    Swift::String v4 = *(void **)(Strong + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery);
    if (v4)
    {
      id v5 = v4;
      char v6 = sub_1000D2CFC((unint64_t)[v5 bluetoothState]);
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease();
      unint64_t v7 = 0xE700000000000000;
      uint64_t v8 = 0x6E776F6E6B6E75;
      switch(v6)
      {
        case 1:
          uint64_t v8 = 0x6E69747465736572;
          unint64_t v7 = 0xE900000000000067;
          break;
        case 2:
          unint64_t v7 = 0xEB00000000646574;
          uint64_t v8 = 0x726F707075736E75;
          break;
        case 3:
          unint64_t v7 = 0xEC00000064657A69;
          uint64_t v8 = 0x726F687475616E75;
          break;
        case 4:
          uint64_t v8 = 0x4F64657265776F70;
          unint64_t v7 = 0xEA00000000006666;
          break;
        case 5:
          uint64_t v8 = 0x4F64657265776F70;
          unint64_t v7 = 0xE90000000000006ELL;
          break;
        case 6:
          uint64_t v8 = 0x7463697274736572;
          unint64_t v7 = 0xEA00000000006465;
          break;
        default:
          break;
      }
      unint64_t v9 = v7;
      String.append(_:)(*(Swift::String *)&v8);
      swift_bridgeObjectRelease();
      sub_10016ABE4(0xD000000000000019, (void *)0x80000001002BE3D0, 0, a2, (uint64_t)&off_100327B08);
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.setter();
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
}

void sub_1000EE3A0(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    sub_10000A38C((uint64_t *)&unk_100365D60);
    uint64_t v2 = String.init<A>(describing:)();
    unint64_t v4 = v3;
  }
  else
  {
    unint64_t v4 = 0xE300000000000000;
    uint64_t v2 = 7104878;
  }
  unint64_t v5 = v4;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  id v6 = sub_1001F68B4();
  swift_bridgeObjectRetain();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 ulog:40 message:v7];
  swift_bridgeObjectRelease();

  if (a1)
  {
    swift_errorRetain();
    _StringGuts.grow(_:)(25);
    v8._uint64_t countAndFlagsBits = 0xD000000000000017;
    v8._object = (void *)0x80000001002BE350;
    String.append(_:)(v8);
    sub_10000A38C((uint64_t *)&unk_100365D60);
    _print_unlocked<A, B>(_:_:)();
    id v9 = sub_1001F68B4();
    swift_bridgeObjectRetain();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v9 ulog:90 message:v10];

    swift_errorRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    return;
  }
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  uint64_t v11 = OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery;
  NSString v12 = *(void **)(v32 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery);
  if (v12)
  {
    id v13 = [v12 discoveredDevices];
    sub_100019E10(0, (unint64_t *)&unk_100365C90);
    unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v14 >> 62)) {
      goto LABEL_9;
    }
  }
  else if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_9:
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._object = (void *)0x80000001002BE310;
  v16._uint64_t countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v16);
  id v17 = sub_1001F68B4();
  swift_bridgeObjectRetain();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v17 ulog:40 message:v18];
  swift_bridgeObjectRelease();

  uint64_t v19 = *(void **)(v32 + v11);
  if (v19)
  {
    id v20 = [v19 discoveredDevices];
    sub_100019E10(0, (unint64_t *)&unk_100365C90);
    unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v21 >> 62)) {
      goto LABEL_11;
    }
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v22) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
  unint64_t v21 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_24;
  }
LABEL_11:
  uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v22) {
    goto LABEL_6;
  }
LABEL_12:
  if (v22 >= 1)
  {
    uint64_t v23 = 0;
    do
    {
      if ((v21 & 0xC000000000000001) != 0) {
        id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v28 = *(id *)(v21 + 8 * v23 + 32);
      }
      id v29 = v28;
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease();
      id v30 = [v29 identifier];
      if (v30)
      {
        uint64_t v31 = v30;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        sub_100089A9C(8);
        swift_bridgeObjectRelease();
      }
      else
      {
        Substring.init(_:)();
      }
      ++v23;
      v24._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
      String.append(_:)(v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v25 = sub_1001F68B4();
      swift_bridgeObjectRetain();
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v25 ulog:40 message:v26];
      swift_bridgeObjectRelease();

      id v27 = v29;
      sub_1000EE958(v29, 0);
    }
    while (v22 != v23);
    goto LABEL_6;
  }
  __break(1u);
}

id sub_1000EE958(void *a1, void *a2)
{
  uint64_t v3 = v2;
  if (a1)
  {
    id v5 = a1;
    id v6 = [v5 description];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v9 = v8;

    v10._uint64_t countAndFlagsBits = v7;
    v10._object = v9;
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    id v11 = sub_1001F68B4();
    swift_bridgeObjectRetain();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v11 ulog:40 message:v12];
    swift_bridgeObjectRelease();

    swift_retain();
    sub_100122318(v5);

    swift_release();
  }
  if (a2)
  {
    id v13 = a2;
    id v14 = [v13 description];
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v17 = v16;

    v18._uint64_t countAndFlagsBits = v15;
    v18._object = v17;
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    id v19 = sub_1001F68B4();
    swift_bridgeObjectRetain();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v19 ulog:40 message:v20];
    swift_bridgeObjectRelease();

    swift_retain();
    unint64_t v21 = (void *)sub_1002127B4((uint64_t)v13);

    swift_release();
  }
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  uint64_t v22 = OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery;
  uint64_t v23 = *(void **)(v3 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery);
  if (v23)
  {
    id v24 = [v23 discoveredDevices];
    sub_100019E10(0, (unint64_t *)&unk_100365C90);
    unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v25 >> 62))
    {
LABEL_7:
      uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t v25 = (unint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRetain();
  LOBYTE(v26) = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRelease();
  unsigned __int8 v66 = v26;
  v27._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  id v28 = sub_1001F68B4();
  swift_bridgeObjectRetain();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v28 ulog:40 message:v29];
  swift_bridgeObjectRelease();

  id v30 = *(void **)(v3 + v22);
  if (v30)
  {
    id v31 = [v30 discoveredDevices];
    sub_100019E10(0, (unint64_t *)&unk_100365C90);
    unint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    unint64_t v32 = (unint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v64 = v3;
  if (v32 >> 62) {
    goto LABEL_24;
  }
  uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v33; uint64_t v33 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v34 = 4;
    while (1)
    {
      id v35 = (v32 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v32 + 8 * v34);
      long long v36 = v35;
      uint64_t v37 = v34 - 3;
      if (__OFADD__(v34 - 4, 1)) {
        break;
      }
      unsigned int v38 = [v35 nearbyActionFlags];

      int v39 = (v38 >> 4) & 1;
      if ((v38 & 0x10) == 0)
      {
        ++v34;
        if (v37 != v33) {
          continue;
        }
      }
      goto LABEL_26;
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
  }
  LOBYTE(v39) = 0;
LABEL_26:
  swift_bridgeObjectRelease_n();
  swift_retain();
  sub_1001BEDF8(v39);
  swift_release();
  unint64_t v40 = *(void **)(v64 + v22);
  if (v40)
  {
    id v41 = [v40 discoveredDevices];
    sub_100019E10(0, (unint64_t *)&unk_100365C90);
    unint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v42 >> 62)) {
      goto LABEL_28;
    }
LABEL_56:
    swift_bridgeObjectRetain();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
    if (v43) {
      goto LABEL_29;
    }
    goto LABEL_57;
  }
  unint64_t v42 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_56;
  }
LABEL_28:
  uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v43)
  {
LABEL_29:
    uint64_t v44 = 4;
    p_base_prots = &XPCConnectionManager.base_prots;
    while (1)
    {
      if ((v42 & 0xC000000000000001) != 0) {
        id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id result = *(id *)(v42 + 8 * v44);
      }
      uint64_t v47 = result;
      uint64_t v48 = v44 - 3;
      if (__OFADD__(v44 - 4, 1))
      {
        __break(1u);
        return result;
      }
      if (![result supportsR1]) {
        break;
      }
      if (p_base_prots[195] != (__objc2_prot_list *)-1) {
        swift_once();
      }
      if (byte_1003ACB40 == 1)
      {
        if ([v47 nearbyActivityLevel]
          && [v47 nearbyActivityLevel] < 7)
        {
          break;
        }
        if (qword_10035A640 != -1) {
          swift_once();
        }
        swift_beginAccess();
        swift_retain();
        CurrentValueSubject.value.getter();
        int v49 = v65;
        if (v65 == 3)
        {
          CurrentValueSubject.value.getter();
          swift_release();
          int v49 = v66;
        }
        else
        {
          swift_release();
        }
        id v51 = [v47 model];
        uint64_t v52 = v51;
        if (v49 != 2)
        {
          if (!v51
            || (static String._unconditionallyBridgeFromObjectiveC(_:)(),
                v52,
                v59._uint64_t countAndFlagsBits = 0x656E6F685069,
                v59._object = (void *)0xE600000000000000,
                Swift::Bool v60 = String.hasPrefix(_:)(v59),
                swift_bridgeObjectRelease(),
                !v60))
          {
            id v61 = [v47 model];
            if (v61)
            {
              long long v62 = v61;
              static String._unconditionallyBridgeFromObjectiveC(_:)();

              v63._uint64_t countAndFlagsBits = 0x6863746157;
              v63._object = (void *)0xE500000000000000;
              String.hasPrefix(_:)(v63);
              swift_bridgeObjectRelease_n();

              swift_bridgeObjectRelease();
              char v58 = 1;
              goto LABEL_58;
            }
          }
LABEL_64:
          swift_bridgeObjectRelease_n();

          char v58 = 1;
          goto LABEL_58;
        }
        if (v51)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          v53._uint64_t countAndFlagsBits = 0x656E6F685069;
          v53._object = (void *)0xE600000000000000;
          Swift::Bool v54 = String.hasPrefix(_:)(v53);
          swift_bridgeObjectRelease();
          if (v54) {
            goto LABEL_64;
          }
        }
        id v55 = [v47 model];
        p_base_prots = (__objc2_prot_list **)(&XPCConnectionManager + 40);
        if (!v55) {
          break;
        }
        long long v56 = v55;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        v57._uint64_t countAndFlagsBits = 0x6863746157;
        v57._object = (void *)0xE500000000000000;
        LOBYTE(v56) = String.hasPrefix(_:)(v57);

        p_base_prots = (__objc2_prot_list **)(&XPCConnectionManager + 40);
        swift_bridgeObjectRelease();
        if (v56)
        {
LABEL_59:
          swift_bridgeObjectRelease_n();
          char v58 = 1;
          goto LABEL_58;
        }
      }
      else
      {
        unsigned __int8 v50 = [v47 nearbyActionFlags];

        if ((v50 & 0x10) != 0) {
          goto LABEL_59;
        }
      }
LABEL_31:
      ++v44;
      if (v48 == v43) {
        goto LABEL_57;
      }
    }

    goto LABEL_31;
  }
LABEL_57:
  swift_bridgeObjectRelease_n();
  char v58 = 0;
LABEL_58:
  swift_retain();
  sub_1001BEDF8(v58);
  return (id)swift_release();
}

uint64_t sub_1000EF1F8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_10000A38C(&qword_100365D48);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v0[3] + 24);
  sub_10000A38C(&qword_100365D38);
  sub_10000B010(&qword_100365D50, &qword_100365D38);
  Publisher<>.removeDuplicates()();
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v1;
  sub_10000B010(&qword_100365D58, &qword_100365D48);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1000EF428(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  int v4 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (v4)
    {
      sub_10016ABE4(0xD00000000000002ALL, (void *)0x80000001002BE2A0, 0, a3, (uint64_t)&off_100327B08);
      swift_retain();
      sub_1000EA040();
    }
    else
    {
      sub_10016ABE4(0xD000000000000030, (void *)0x80000001002BE260, 0, a3, (uint64_t)&off_100327B08);
      swift_retain();
      sub_1000EA1F4();
    }
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000EF528()
{
  uint64_t v2 = v0;
  uint64_t v3 = 0x6E776F6E6B6E75;
  sub_10000A38C((uint64_t *)&unk_10035E7E0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10028D430;
  *(void *)(v4 + 32) = 0xD000000000000014;
  *(void *)(v4 + 40) = 0x80000001002BE170;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v5 = (void *)0xE700000000000000;
  switch((char)v52)
  {
    case 1:
      uint64_t v3 = 0x6E69747465736572;
      id v5 = (void *)0xE900000000000067;
      break;
    case 2:
      id v5 = (void *)0xEB00000000646574;
      uint64_t v3 = 0x726F707075736E75;
      break;
    case 3:
      id v5 = (void *)0xEC00000064657A69;
      uint64_t v3 = 0x726F687475616E75;
      break;
    case 4:
      uint64_t v3 = 0x4F64657265776F70;
      id v5 = (void *)0xEA00000000006666;
      break;
    case 5:
      uint64_t v3 = 0x4F64657265776F70;
      id v5 = (void *)0xE90000000000006ELL;
      break;
    case 6:
      uint64_t v3 = 0x7463697274736572;
      id v5 = (void *)0xEA00000000006465;
      break;
    default:
      break;
  }
  v6._uint64_t countAndFlagsBits = v3;
  v6._unint64_t object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  uint64_t v52 = 0x3D6574617453;
  unint64_t v53 = 0xE600000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  swift_retain();
  CurrentValueSubject.value.getter();
  if (v50 == 2)
  {
    CurrentValueSubject.value.getter();
    swift_release();
    int countAndFlagsBits_low = LOBYTE(v51._countAndFlagsBits);
  }
  else
  {
    swift_release();
    int countAndFlagsBits_low = v50 & 1;
  }
  if (countAndFlagsBits_low) {
    uint64_t v8 = 1702195828;
  }
  else {
    uint64_t v8 = 0x65736C6166;
  }
  if (countAndFlagsBits_low) {
    unint64_t v9 = 0xE400000000000000;
  }
  else {
    unint64_t v9 = 0xE500000000000000;
  }
  unint64_t v10 = v9;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 0xD000000000000012;
  v11._unint64_t object = (void *)0x80000001002BE190;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v51._uint64_t countAndFlagsBits = 0x3D736B736174202CLL;
  v51._unint64_t object = (void *)0xE800000000000000;
  NSString v12 = (void *)(v0 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_tasks);
  swift_beginAccess();
  if ((*v12 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.count.getter();
    swift_bridgeObjectRelease();
  }
  v13._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t countAndFlagsBits = v52;
  unint64_t v15 = v53;
  unint64_t v16 = *(void *)(v4 + 16);
  unint64_t object = *(void *)(v4 + 24);
  unint64_t v18 = v16 + 1;
  swift_bridgeObjectRetain();
  if (v16 >= object >> 1) {
    goto LABEL_72;
  }
  while (1)
  {
    *(void *)(v4 + 16) = v18;
    unint64_t v19 = v4 + 16 * v16;
    *(void *)(v19 + 32) = countAndFlagsBits;
    *(void *)(v19 + 40) = v15;
    uint64_t v49 = OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery;
    NSString v20 = *(void **)(v2 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery);
    if (v20)
    {
      id v21 = [v20 discoveredDevices];
      sub_100019E10(0, (unint64_t *)&unk_100365C90);
      unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if ((v18 & 0x8000000000000000) != 0) {
        goto LABEL_73;
      }
    }
    else
    {
      unint64_t v18 = (unint64_t)_swiftEmptyArrayStorage;
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
        goto LABEL_73;
      }
    }
    if ((v18 & 0x4000000000000000) != 0)
    {
LABEL_73:
      unint64_t v47 = swift_bridgeObjectRetain();
      uint64_t v22 = (uint64_t)sub_1000F096C(v47, (void (*)(void *, uint64_t, unint64_t))sub_1000F1800);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    uint64_t v22 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
LABEL_26:
    v51._uint64_t countAndFlagsBits = v22;
    sub_1000F0BFC(&v51._countAndFlagsBits);
    swift_bridgeObjectRelease();
    uint64_t countAndFlagsBits = v51._countAndFlagsBits;
    if (v51._countAndFlagsBits < 0 || (v51._countAndFlagsBits & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      unint64_t v24 = -v23;
      if (__OFSUB__(0, v23))
      {
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
        goto LABEL_78;
      }
    }
    else
    {
      uint64_t v23 = *(void *)(v51._countAndFlagsBits + 16);
      unint64_t v24 = -v23;
      if (__OFSUB__(0, v23)) {
        goto LABEL_76;
      }
    }
    v24 += 7;
    if (v24 < 8)
    {
      if ((v23 & 0x8000000000000000) == 0)
      {
        uint64_t v1 = 0;
LABEL_36:
        v51._uint64_t countAndFlagsBits = 0x6563697665446263;
        v51._unint64_t object = (void *)0xEB00000000282073;
        unint64_t v25 = *(void **)(v2 + v49);
        if (v25)
        {
          id v26 = [v25 discoveredDevices];
          sub_100019E10(0, (unint64_t *)&unk_100365C90);
          unint64_t v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (!(v27 >> 62)) {
            goto LABEL_38;
          }
        }
        else if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
        {
          goto LABEL_38;
        }
        swift_bridgeObjectRetain();
        _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
LABEL_38:
        swift_bridgeObjectRelease();
        v28._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v28);
        swift_bridgeObjectRelease();
        v29._uint64_t countAndFlagsBits = 41;
        v29._unint64_t object = (void *)0xE100000000000000;
        String.append(_:)(v29);
        unint64_t v16 = v51._countAndFlagsBits;
        unint64_t object = (unint64_t)v51._object;
        unint64_t v15 = *(void *)(v4 + 16);
        unint64_t v24 = *(void *)(v4 + 24);
        unint64_t v18 = v15 + 1;
        if (v15 < v24 >> 1) {
          goto LABEL_39;
        }
        goto LABEL_79;
      }
      goto LABEL_77;
    }
    uint64_t v1 = v23 - 8;
    if (__OFSUB__(v23, 8))
    {
      __break(1u);
      goto LABEL_81;
    }
    if (v23 < 0 || v23 < v1) {
      goto LABEL_77;
    }
    if ((v1 & 0x8000000000000000) == 0) {
      goto LABEL_36;
    }
LABEL_78:
    __break(1u);
LABEL_79:
    uint64_t v4 = (uint64_t)sub_10008892C((char *)(v24 > 1), v18, 1, (char *)v4);
LABEL_39:
    *(void *)(v4 + 16) = v18;
    uint64_t v30 = v4 + 16 * v15;
    *(void *)(v30 + 32) = v16;
    *(void *)(v30 + 40) = object;
    if (v23 == v1) {
      break;
    }
    uint64_t v48 = v2;
    swift_bridgeObjectRetain();
    while (v1 < v23)
    {
      unint64_t v15 = v23 - 1;
      if ((countAndFlagsBits & 0xC000000000000001) != 0)
      {
        id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v23 < 1) {
          goto LABEL_70;
        }
        if (v15 >= *(void *)(countAndFlagsBits + 16)) {
          goto LABEL_71;
        }
        id v31 = *(id *)(countAndFlagsBits + 8 * v23 + 24);
      }
      unint64_t v32 = v31;
      v51._uint64_t countAndFlagsBits = 2108704;
      v51._unint64_t object = (void *)0xE300000000000000;
      v33._uint64_t countAndFlagsBits = sub_1000EFF20();
      String.append(_:)(v33);
      swift_bridgeObjectRelease();
      uint64_t v2 = v51._countAndFlagsBits;
      unint64_t object = (unint64_t)v51._object;
      unint64_t v16 = *(void *)(v4 + 16);
      unint64_t v34 = *(void *)(v4 + 24);
      unint64_t v18 = v16 + 1;
      if (v16 >= v34 >> 1) {
        uint64_t v4 = (uint64_t)sub_10008892C((char *)(v34 > 1), v16 + 1, 1, (char *)v4);
      }
      *(void *)(v4 + 16) = v18;
      unint64_t v35 = v4 + 16 * v16;
      *(void *)(v35 + 32) = v2;
      *(void *)(v35 + 40) = object;

      uint64_t v23 = v15;
      if (v1 == v15)
      {
        swift_bridgeObjectRelease();
        swift_release_n();
        uint64_t v2 = v48;
        goto LABEL_52;
      }
    }
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    uint64_t v4 = (uint64_t)sub_10008892C((char *)(object > 1), v18, 1, (char *)v4);
  }
  swift_release();
  swift_bridgeObjectRelease();
LABEL_52:
  long long v36 = *(void **)(v2 + v49);
  if (v36)
  {
    id v37 = [v36 discoveredDevices];
    sub_100019E10(0, (unint64_t *)&unk_100365C90);
    unint64_t v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v38 >> 62)) {
      goto LABEL_54;
    }
LABEL_66:
    swift_bridgeObjectRetain();
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v38 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
      goto LABEL_66;
    }
LABEL_54:
    uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v39 < 9) {
    goto LABEL_62;
  }
  v51._uint64_t countAndFlagsBits = 539897390;
  v51._unint64_t object = (void *)0xE400000000000000;
  unint64_t v40 = *(void **)(v2 + v49);
  if (v40)
  {
    id v41 = [v40 discoveredDevices];
    sub_100019E10(0, (unint64_t *)&unk_100365C90);
    unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v18 >> 62)) {
      goto LABEL_58;
    }
LABEL_68:
    swift_bridgeObjectRetain();
    uint64_t countAndFlagsBits = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v18 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
      goto LABEL_68;
    }
LABEL_58:
    uint64_t countAndFlagsBits = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  unint64_t v24 = countAndFlagsBits - 8;
  if (__OFSUB__(countAndFlagsBits, 8))
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v42._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v42);
  swift_bridgeObjectRelease();
  v43._uint64_t countAndFlagsBits = 0x65726F6D20;
  v43._unint64_t object = (void *)0xE500000000000000;
  String.append(_:)(v43);
  uint64_t countAndFlagsBits = v51._countAndFlagsBits;
  unint64_t v16 = (unint64_t)v51._object;
  unint64_t object = *(void *)(v4 + 16);
  unint64_t v24 = *(void *)(v4 + 24);
  unint64_t v18 = object + 1;
  if (object < v24 >> 1) {
    goto LABEL_61;
  }
LABEL_82:
  uint64_t v4 = (uint64_t)sub_10008892C((char *)(v24 > 1), v18, 1, (char *)v4);
LABEL_61:
  *(void *)(v4 + 16) = v18;
  unint64_t v44 = v4 + 16 * object;
  *(void *)(v44 + 32) = countAndFlagsBits;
  *(void *)(v44 + 40) = v16;
LABEL_62:
  v51._uint64_t countAndFlagsBits = v4;
  swift_bridgeObjectRetain();
  sub_10000A38C((uint64_t *)&unk_100367D40);
  sub_10000B010((unint64_t *)&qword_10035E7F0, (uint64_t *)&unk_100367D40);
  uint64_t v45 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease_n();
  return v45;
}

uint64_t sub_1000EFF20()
{
  uint64_t v1 = v0;
  sub_10000A38C((uint64_t *)&unk_10035E7E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10028D430;
  *(void *)(v2 + 32) = 0x6563697665444243;
  *(void *)(v2 + 40) = 0xE800000000000000;
  id v3 = [v0 identifier];
  if (v3)
  {
    uint64_t v4 = v3;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100089A9C(8);
    swift_bridgeObjectRelease();
    uint64_t v5 = static String._fromSubstring(_:)();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    unint64_t v9 = *(void *)(v2 + 16);
    unint64_t v8 = *(void *)(v2 + 24);
    if (v9 >= v8 >> 1) {
      uint64_t v2 = (uint64_t)sub_10008892C((char *)(v8 > 1), v9 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v9 + 1;
    uint64_t v10 = v2 + 16 * v9;
    *(void *)(v10 + 32) = v5;
    *(void *)(v10 + 40) = v7;
  }
  id v11 = [v1 name];
  if (v11)
  {
    NSString v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    v16._uint64_t countAndFlagsBits = v13;
    v16._unint64_t object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    v17._uint64_t countAndFlagsBits = 39;
    v17._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v17);
    unint64_t v19 = *(void *)(v2 + 16);
    unint64_t v18 = *(void *)(v2 + 24);
    if (v19 >= v18 >> 1) {
      uint64_t v2 = (uint64_t)sub_10008892C((char *)(v18 > 1), v19 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v19 + 1;
    uint64_t v20 = v2 + 16 * v19;
    *(void *)(v20 + 32) = 656436558;
    *(void *)(v20 + 40) = 0xE400000000000000;
  }
  if ([v1 bleRSSI])
  {
    [v1 bleRSSI];
    v21._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    unint64_t v23 = *(void *)(v2 + 16);
    unint64_t v22 = *(void *)(v2 + 24);
    if (v23 >= v22 >> 1) {
      uint64_t v2 = (uint64_t)sub_10008892C((char *)(v22 > 1), v23 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v23 + 1;
    uint64_t v24 = v2 + 16 * v23;
    *(void *)(v24 + 32) = 0x2049535352;
    *(void *)(v24 + 40) = 0xE500000000000000;
  }
  id v25 = [v1 idsDeviceID];
  if (v25)
  {
    id v26 = v25;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100089A9C(8);
    swift_bridgeObjectRelease();
    uint64_t v27 = static String._fromSubstring(_:)();
    Swift::String v29 = v28;
    swift_bridgeObjectRelease();
    v30._uint64_t countAndFlagsBits = v27;
    v30._unint64_t object = v29;
    String.append(_:)(v30);
    swift_bridgeObjectRelease();
    unint64_t v32 = *(void *)(v2 + 16);
    unint64_t v31 = *(void *)(v2 + 24);
    if (v32 >= v31 >> 1) {
      uint64_t v2 = (uint64_t)sub_10008892C((char *)(v31 > 1), v32 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v32 + 1;
    uint64_t v33 = v2 + 16 * v32;
    *(void *)(v33 + 32) = 542327881;
    *(void *)(v33 + 40) = 0xE400000000000000;
  }
  if (([v1 nearbyActionFlags] & 0x10) != 0)
  {
    unint64_t v35 = *(void *)(v2 + 16);
    unint64_t v34 = *(void *)(v2 + 24);
    if (v35 >= v34 >> 1) {
      uint64_t v2 = (uint64_t)sub_10008892C((char *)(v34 > 1), v35 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v35 + 1;
    uint64_t v36 = v2 + 16 * v35;
    *(void *)(v36 + 32) = 17220;
    *(void *)(v36 + 40) = 0xE200000000000000;
  }
  if (((unint64_t)[v1 discoveryFlags] & 0x200000000000) != 0)
  {
    unint64_t v38 = *(void *)(v2 + 16);
    unint64_t v37 = *(void *)(v2 + 24);
    if (v38 >= v37 >> 1) {
      uint64_t v2 = (uint64_t)sub_10008892C((char *)(v37 > 1), v38 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v38 + 1;
    uint64_t v39 = v2 + 16 * v38;
    *(void *)(v39 + 32) = 17232;
    *(void *)(v39 + 40) = 0xE200000000000000;
  }
  if ([v1 supportsR1])
  {
    unint64_t v41 = *(void *)(v2 + 16);
    unint64_t v40 = *(void *)(v2 + 24);
    if (v41 >= v40 >> 1) {
      uint64_t v2 = (uint64_t)sub_10008892C((char *)(v40 > 1), v41 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v41 + 1;
    uint64_t v42 = v2 + 16 * v41;
    *(void *)(v42 + 32) = 4347733;
    *(void *)(v42 + 40) = 0xE300000000000000;
  }
  sub_10000A38C((uint64_t *)&unk_100367D40);
  sub_10000B010((unint64_t *)&qword_10035E7F0, (uint64_t *)&unk_100367D40);
  uint64_t v43 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t sub_1000F0400()
{
  return sub_1000EF528();
}

uint64_t sub_1000F0424()
{
  return sub_1000EFF20();
}

uint64_t type metadata accessor for BluetoothProxyModel()
{
  return self;
}

uint64_t type metadata accessor for BluetoothProxyState()
{
  return self;
}

uint64_t sub_1000F0490()
{
  return type metadata accessor for BluetoothProxy();
}

uint64_t type metadata accessor for BluetoothProxy()
{
  uint64_t result = qword_100365AF0;
  if (!qword_100365AF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000F04E4()
{
  sub_1000F05AC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000F05AC()
{
  if (!qword_100365B00)
  {
    sub_10000A3D0((uint64_t *)&unk_100365B08);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100365B00);
    }
  }
}

uint64_t sub_1000F0608@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000F0688()
{
  return static Published.subscript.setter();
}

void *sub_1000F06FC(uint64_t a1)
{
  return sub_1000F0714(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1000F2F00);
}

void *sub_1000F0714(uint64_t a1, uint64_t (*a2)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000A38C(&qword_10035C280);
  uint64_t v5 = (void *)swift_allocObject();
  int64_t v6 = j__malloc_size(v5);
  uint64_t v7 = v6 - 32;
  if (v6 < 32) {
    uint64_t v7 = v6 - 25;
  }
  _OWORD v5[2] = v2;
  v5[3] = (2 * (v7 >> 3)) | 1;
  uint64_t v8 = a2(&v10, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_10002E7C4();
  if (v8 != v2)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v5;
}

void *sub_1000F0808(uint64_t a1)
{
  return sub_1000F0714(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1000F2D04);
}

void *sub_1000F0820(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000A38C((uint64_t *)&unk_100365CE0);
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int64_t v6 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1000F2918(&v10, (char *)v6 + v5, v1, a1);
      sub_10002E7C4();
      if (v9 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1000F0954(unint64_t a1)
{
  return sub_1000F096C(a1, (void (*)(void *, uint64_t, unint64_t))sub_1000F1A34);
}

void *sub_1000F096C(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v4 <= 0)
    {
      unint64_t v5 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_10000A38C(&qword_10035C280);
      unint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = j__malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      _OWORD v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v5;
}

void *sub_1000F0A74(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      uint64_t v9 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        sub_10000A38C(&qword_100365CB0);
        swift_arrayInitWithCopy();
        return v9;
      }
    }
    else
    {
      sub_10000A38C(&qword_10035C280);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      void v9[2] = v5;
      void v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000F0BFC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_1001F95B4(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1000F0C78(v6);
  return specialized ContiguousArray._endMutation()();
}

void sub_1000F0C78(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_132;
    }
    if (v3) {
      sub_1000F13EC(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_140;
  }
  Swift::Int v103 = v4;
  uint64_t v98 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
    uint64_t v110 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v109 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
LABEL_98:
      if (v11 >= 2)
      {
        uint64_t v92 = *v98;
        do
        {
          unint64_t v93 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_127;
          }
          if (!v92) {
            goto LABEL_139;
          }
          uint64_t v94 = *(void *)&v8[16 * v93 + 32];
          uint64_t v95 = *(void *)&v8[16 * v11 + 24];
          sub_1000F14E0((id *)(v92 + 8 * v94), (id *)(v92 + 8 * *(void *)&v8[16 * v11 + 16]), v92 + 8 * v95, v109);
          if (v1) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_128;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1001F9518((uint64_t)v8);
          }
          if (v93 >= *((void *)v8 + 2)) {
            goto LABEL_129;
          }
          id v96 = &v8[16 * v93 + 32];
          *(void *)id v96 = v94;
          *((void *)v96 + 1) = v95;
          unint64_t v97 = *((void *)v8 + 2);
          if (v11 > v97) {
            goto LABEL_130;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v97 - v11));
          *((void *)v8 + 2) = v97 - 1;
          unint64_t v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease();
      *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_100019E10(0, (unint64_t *)&unk_100365C90);
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    uint64_t v109 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v110 = v7;
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v99 = *a1 - 8;
  uint64_t v100 = *a1 + 16;
  uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v106 = v3;
  while (1)
  {
    Swift::Int v12 = v9++;
    Swift::Int v107 = v12;
    if (v9 < v3)
    {
      uint64_t v13 = *(void **)(v10 + 8 * v12);
      id v14 = *(id *)(v10 + 8 * v9);
      id v15 = v13;
      signed int v104 = [v14 bleRSSI];
      signed int v16 = [v15 bleRSSI];

      Swift::Int v3 = v106;
      Swift::Int v9 = v12 + 2;
      if (v12 + 2 < v106)
      {
        uint64_t v101 = v8;
        Swift::String v17 = (id *)(v100 + 8 * v12);
        while (1)
        {
          unint64_t v18 = *(v17 - 1);
          id v19 = *v17;
          id v20 = v18;
          int v21 = [v19 bleRSSI];
          LODWORD(v18) = [v20 bleRSSI];

          if (v104 < v16 == v21 >= (int)v18) {
            break;
          }
          ++v9;
          ++v17;
          Swift::Int v3 = v106;
          if (v106 == v9)
          {
            Swift::Int v9 = v106;
            uint64_t v8 = v101;
            goto LABEL_22;
          }
        }
        uint64_t v8 = v101;
        Swift::Int v3 = v106;
LABEL_22:
        Swift::Int v12 = v107;
      }
      if (v104 < v16)
      {
        if (v9 < v12) {
          goto LABEL_133;
        }
        if (v12 < v9)
        {
          unint64_t v22 = (uint64_t *)(v99 + 8 * v9);
          Swift::Int v23 = v9;
          Swift::Int v24 = v12;
          id v25 = (uint64_t *)(v10 + 8 * v12);
          do
          {
            if (v24 != --v23)
            {
              if (!v10) {
                goto LABEL_138;
              }
              uint64_t v26 = *v25;
              *id v25 = *v22;
              *unint64_t v22 = v26;
            }
            ++v24;
            --v22;
            ++v25;
          }
          while (v24 < v23);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12)) {
        goto LABEL_131;
      }
      if (v9 - v12 < v103) {
        break;
      }
    }
LABEL_48:
    if (v9 < v12) {
      goto LABEL_126;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1001F92A0(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v39 = *((void *)v8 + 2);
    unint64_t v38 = *((void *)v8 + 3);
    unint64_t v11 = v39 + 1;
    if (v39 >= v38 >> 1) {
      uint64_t v8 = sub_1001F92A0((char *)(v38 > 1), v39 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v11;
    unint64_t v40 = v8 + 32;
    unint64_t v41 = &v8[16 * v39 + 32];
    *(void *)unint64_t v41 = v12;
    *((void *)v41 + 1) = v9;
    if (v39)
    {
      Swift::Int v108 = v9;
      while (1)
      {
        unint64_t v42 = v11 - 1;
        if (v11 >= 4)
        {
          unint64_t v47 = &v40[16 * v11];
          uint64_t v48 = *((void *)v47 - 8);
          uint64_t v49 = *((void *)v47 - 7);
          BOOL v53 = __OFSUB__(v49, v48);
          uint64_t v50 = v49 - v48;
          if (v53) {
            goto LABEL_115;
          }
          uint64_t v52 = *((void *)v47 - 6);
          uint64_t v51 = *((void *)v47 - 5);
          BOOL v53 = __OFSUB__(v51, v52);
          uint64_t v45 = v51 - v52;
          char v46 = v53;
          if (v53) {
            goto LABEL_116;
          }
          unint64_t v54 = v11 - 2;
          id v55 = &v40[16 * v11 - 32];
          uint64_t v57 = *(void *)v55;
          uint64_t v56 = *((void *)v55 + 1);
          BOOL v53 = __OFSUB__(v56, v57);
          uint64_t v58 = v56 - v57;
          if (v53) {
            goto LABEL_118;
          }
          BOOL v53 = __OFADD__(v45, v58);
          uint64_t v59 = v45 + v58;
          if (v53) {
            goto LABEL_121;
          }
          if (v59 >= v50)
          {
            BOOL v77 = &v40[16 * v42];
            uint64_t v79 = *(void *)v77;
            uint64_t v78 = *((void *)v77 + 1);
            BOOL v53 = __OFSUB__(v78, v79);
            uint64_t v80 = v78 - v79;
            if (v53) {
              goto LABEL_125;
            }
            BOOL v70 = v45 < v80;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v71 = *((void *)v8 + 4);
            uint64_t v72 = *((void *)v8 + 5);
            BOOL v53 = __OFSUB__(v72, v71);
            uint64_t v64 = v72 - v71;
            char v65 = v53;
            goto LABEL_80;
          }
          uint64_t v44 = *((void *)v8 + 4);
          uint64_t v43 = *((void *)v8 + 5);
          BOOL v53 = __OFSUB__(v43, v44);
          uint64_t v45 = v43 - v44;
          char v46 = v53;
        }
        if (v46) {
          goto LABEL_117;
        }
        unint64_t v54 = v11 - 2;
        Swift::Bool v60 = &v40[16 * v11 - 32];
        uint64_t v62 = *(void *)v60;
        uint64_t v61 = *((void *)v60 + 1);
        BOOL v63 = __OFSUB__(v61, v62);
        uint64_t v64 = v61 - v62;
        char v65 = v63;
        if (v63) {
          goto LABEL_120;
        }
        unsigned __int8 v66 = &v40[16 * v42];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v53 = __OFSUB__(v67, v68);
        uint64_t v69 = v67 - v68;
        if (v53) {
          goto LABEL_123;
        }
        if (__OFADD__(v64, v69)) {
          goto LABEL_124;
        }
        if (v64 + v69 >= v45)
        {
          BOOL v70 = v45 < v69;
LABEL_86:
          if (v70) {
            unint64_t v42 = v54;
          }
          goto LABEL_88;
        }
LABEL_80:
        if (v65) {
          goto LABEL_119;
        }
        uint64_t v73 = &v40[16 * v42];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v53 = __OFSUB__(v74, v75);
        uint64_t v76 = v74 - v75;
        if (v53) {
          goto LABEL_122;
        }
        if (v76 < v64) {
          goto LABEL_14;
        }
LABEL_88:
        unint64_t v81 = v42 - 1;
        if (v42 - 1 >= v11)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        uint64_t v82 = v10;
        if (!v10) {
          goto LABEL_137;
        }
        Swift::String v83 = v8;
        uint64_t v84 = &v40[16 * v81];
        uint64_t v85 = *(void *)v84;
        uint64_t v86 = v40;
        unint64_t v87 = v42;
        uint64_t v88 = &v40[16 * v42];
        uint64_t v89 = *((void *)v88 + 1);
        uint64_t v90 = v82;
        sub_1000F14E0((id *)(v82 + 8 * *(void *)v84), (id *)(v82 + 8 * *(void *)v88), v82 + 8 * v89, v109);
        if (v1) {
          goto LABEL_109;
        }
        if (v89 < v85) {
          goto LABEL_112;
        }
        if (v87 > *((void *)v83 + 2)) {
          goto LABEL_113;
        }
        *(void *)uint64_t v84 = v85;
        *(void *)&v86[16 * v81 + 8] = v89;
        unint64_t v91 = *((void *)v83 + 2);
        if (v87 >= v91) {
          goto LABEL_114;
        }
        uint64_t v8 = v83;
        unint64_t v11 = v91 - 1;
        memmove(v88, v88 + 16, 16 * (v91 - 1 - v87));
        unint64_t v40 = v86;
        *((void *)v83 + 2) = v91 - 1;
        uint64_t v10 = v90;
        Swift::Int v9 = v108;
        if (v91 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_14:
    Swift::Int v3 = v106;
    if (v9 >= v106) {
      goto LABEL_98;
    }
  }
  if (__OFADD__(v12, v103)) {
    goto LABEL_134;
  }
  if (v12 + v103 >= v3) {
    Swift::Int v27 = v3;
  }
  else {
    Swift::Int v27 = v12 + v103;
  }
  if (v27 >= v12)
  {
    if (v9 != v27)
    {
      unint64_t v102 = v8;
      uint64_t v28 = v99 + 8 * v9;
      Swift::Int v105 = v27;
      do
      {
        Swift::String v29 = *(void **)(v10 + 8 * v9);
        Swift::Int v30 = v12;
        uint64_t v31 = v28;
        do
        {
          unint64_t v32 = *(void **)v31;
          id v33 = v29;
          id v34 = v32;
          signed int v35 = [v33 bleRSSI];
          signed int v36 = [v34 bleRSSI];

          if (v35 >= v36) {
            break;
          }
          if (!v10) {
            goto LABEL_136;
          }
          unint64_t v37 = *(void **)v31;
          Swift::String v29 = *(void **)(v31 + 8);
          *(void *)uint64_t v31 = v29;
          *(void *)(v31 + 8) = v37;
          v31 -= 8;
          ++v30;
        }
        while (v9 != v30);
        ++v9;
        v28 += 8;
        Swift::Int v12 = v107;
      }
      while (v9 != v105);
      Swift::Int v9 = v105;
      uint64_t v8 = v102;
    }
    goto LABEL_48;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1000F13EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v7 = *(void **)(v5 + 8 * v4);
    uint64_t v8 = a1;
    uint64_t v17 = v6;
    while (1)
    {
      Swift::Int v9 = *(void **)v6;
      id v10 = v7;
      id v11 = v9;
      signed int v12 = [v10 bleRSSI];
      signed int v13 = [v11 bleRSSI];

      if (v12 >= v13)
      {
LABEL_4:
        ++v4;
        uint64_t v6 = v17 + 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      id v14 = *(void **)v6;
      uint64_t v7 = *(void **)(v6 + 8);
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v14;
      v6 -= 8;
      if (v4 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1000F14E0(id *__src, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = (char *)a2 - (char *)__src;
  int64_t v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v7 = (char *)a2 - (char *)__src;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 3;
  unint64_t v38 = __src;
  unint64_t v37 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4) {
        memmove(a4, a2, 8 * v11);
      }
      unint64_t v22 = &a4[v11];
      signed int v36 = (char *)v22;
      unint64_t v38 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        Swift::Int v23 = (id *)(a3 - 8);
        Swift::Int v24 = v4;
        unint64_t v32 = v5;
        do
        {
          signed int v35 = v4;
          id v25 = v23 + 1;
          uint64_t v26 = *--v24;
          id v27 = *(v22 - 1);
          id v28 = v26;
          signed int v29 = [v27 bleRSSI];
          signed int v30 = [v28 bleRSSI];

          if (v29 >= v30)
          {
            signed int v36 = (char *)(v22 - 1);
            if (v25 < v22 || v23 >= v22 || v25 != v22) {
              id *v23 = *(v22 - 1);
            }
            Swift::Int v24 = v35;
            --v22;
          }
          else
          {
            if (v25 != v35 || v23 >= v35) {
              id *v23 = *v24;
            }
            unint64_t v38 = v24;
          }
          if (v24 <= v32) {
            break;
          }
          --v23;
          uint64_t v4 = v24;
        }
        while (v22 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4) {
      memmove(a4, __src, 8 * v8);
    }
    signed int v12 = &a4[v8];
    signed int v36 = (char *)v12;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      signed int v13 = a4;
      do
      {
        id v14 = v5;
        id v15 = *v13;
        id v16 = *v4;
        id v17 = v15;
        signed int v18 = [v16 bleRSSI];
        signed int v19 = [v17 bleRSSI];

        if (v18 >= v19)
        {
          int v21 = v14;
          if (v14 != v13) {
            *id v14 = *v13;
          }
          unint64_t v37 = ++v13;
          id v20 = v4;
        }
        else
        {
          id v20 = v4 + 1;
          int v21 = v14;
          if (v14 < v4 || v14 >= v20 || v14 != v4) {
            *id v14 = *v4;
          }
        }
        uint64_t v5 = v21 + 1;
        if (v13 >= v12) {
          break;
        }
        uint64_t v4 = v20;
      }
      while ((unint64_t)v20 < a3);
      unint64_t v38 = v5;
    }
LABEL_43:
    sub_1001F939C(&v38, &v37, &v36);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000F1800(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10000B010(&qword_100365CA8, &qword_100365CA0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10000A38C(&qword_100365CA0);
          signed int v12 = sub_1000F251C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100019E10(0, (unint64_t *)&unk_100365C90);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000F1A34(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10000B010(&qword_100365D00, &qword_100365CF8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10000A38C(&qword_100365CF8);
          signed int v12 = sub_1000F251C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100019E10(0, &qword_100365CF0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000F1C68(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10000B010(&qword_100365D10, &qword_100365D08);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10000A38C(&qword_100365D08);
          signed int v12 = sub_1000F2588(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for Identity();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000F1E8C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10000B010(&qword_100365D78, &qword_100365D70);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10000A38C(&qword_100365D70);
          signed int v12 = sub_1000F25F0(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100019E10(0, &qword_1003650B0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000F20C0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10000B010(&qword_100365CD8, &qword_100365CD0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10000A38C(&qword_100365CD0);
          signed int v12 = sub_1000F251C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100019E10(0, &qword_10036E720);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000F22F4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10000B010((unint64_t *)&unk_100365CC0, &qword_100365CB8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10000A38C(&qword_100365CB8);
          signed int v12 = sub_1000F2658(v16, i, a3);
          uint64_t v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10000A38C(&qword_100365CB0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t (*sub_1000F251C(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000F2708(v6, a2, a3);
  return sub_1000F2584;
}

uint64_t (*sub_1000F2588(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000F2790(v6, a2, a3);
  return sub_1000F2584;
}

uint64_t (*sub_1000F25F0(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000F2810(v6, a2, a3);
  return sub_1000F2584;
}

uint64_t (*sub_1000F2658(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000F2890(v6, a2, a3);
  return sub_1000F2584;
}

void sub_1000F26C0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_1000F2708(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  Swift::Int v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)Swift::Int v3 = v4;
    return j__s17proximitycontrold11XPCLinkRoleOwxx;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1000F2790(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  Swift::Int v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *Swift::Int v3 = v4;
    return destroy for TransferrableActivity.Host;
  }
  __break(1u);
  return result;
}

void (*sub_1000F2810(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  Swift::Int v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)Swift::Int v3 = v4;
    return destroy for XPCLinkRole;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1000F2890(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  Swift::Int v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *Swift::Int v3 = v4;
    return sub_1000F2910;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000F2910()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1000F2918(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10000A38C(&qword_10036C090);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t result = __chkstk_darwin(v11);
  unint64_t v40 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 56;
  uint64_t v14 = *(void *)(a4 + 56);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v16 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v28 = ~v32;
    *a1 = v42;
    a1[1] = v15;
    a1[2] = v28;
    a1[3] = v18;
    a1[4] = v17;
    return a3;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v36 = a3;
  int64_t v18 = 0;
  a3 = 0;
  signed int v19 = v40;
  uint64_t v38 = v41 + 16;
  unint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v37 = v41 + 48;
  signed int v35 = (uint64_t (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v33 = v15;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  uint64_t v31 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v21 = v20 | (v18 << 6);
  while (1)
  {
    uint64_t v25 = v41;
    uint64_t v26 = *(void *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v10, *(void *)(v42 + 48) + v26 * v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v33;
      goto LABEL_38;
    }
    ++a3;
    id v27 = *v35;
    (*v35)(v19, v10, v11);
    uint64_t result = v27(a2, v19, v11);
    if (a3 == v36)
    {
      a3 = v36;
      a1 = v31;
      uint64_t v15 = v33;
      goto LABEL_39;
    }
    a2 += v26;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v33;
    if (v22 >= v34) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v22);
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      ++v18;
      if (v22 + 1 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23) {
        goto LABEL_14;
      }
      int64_t v18 = v22 + 1;
      if (v22 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * (v22 + 2));
      if (v23)
      {
        v22 += 2;
      }
      else
      {
        int64_t v18 = v22 + 2;
        if (v22 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v33 + 8 * (v22 + 3));
        if (!v23)
        {
          int64_t v24 = v22 + 4;
          int64_t v18 = v22 + 3;
          if (v22 + 4 < v34)
          {
            unint64_t v23 = *(void *)(v33 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                int64_t v22 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v22 >= v34)
                {
                  int64_t v18 = v30;
                  goto LABEL_37;
                }
                unint64_t v23 = *(void *)(v33 + 8 * v22);
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v22 = v24;
            goto LABEL_21;
          }
LABEL_37:
          (*v39)(v10, 1, 1, v11);
          unint64_t v17 = 0;
LABEL_38:
          sub_10000DB78((uint64_t)v10);
          a1 = v31;
          goto LABEL_39;
        }
        v22 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    int64_t v18 = v22;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1000F2D04(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    _OWORD v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = *(void **)(*(void *)(a4 + 56) + 8 * v16);
    *uint64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1000F2F00(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    _OWORD v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *uint64_t v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1000F30FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000ECE64();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1000F3128()
{
  unint64_t result = qword_100365D40;
  if (!qword_100365D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100365D40);
  }
  return result;
}

uint64_t sub_1000F317C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F31B4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F31EC(unsigned __int8 *a1)
{
  return sub_1000EF428(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000F31F4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F3204(uint64_t a1)
{
  return sub_1000EDF44(a1, *(void *)(v1 + 16));
}

uint64_t sub_1000F320C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000F321C()
{
  return swift_release();
}

uint64_t sub_1000F3224()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000F3234()
{
  sub_10016AE10(90, 0xD00000000000001BLL, (void *)0x80000001002BE3F0, 0, *(void *)(v0 + 16), (uint64_t)&off_100327B08);
}

uint64_t sub_1000F3284(void *a1)
{
  return sub_1000EE078(a1);
}

uint64_t sub_1000F328C(void *a1)
{
  return sub_1000EE0DC(a1);
}

void sub_1000F3294()
{
  sub_1000EE140(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1000F32A0(unsigned char *a1)
{
  sub_1000ED820(a1, v1);
}

uint64_t *sub_1000F32D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_10000A38C(&qword_10035E158);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_1000F344C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_1000F351C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = sub_10000A38C(&qword_10035E158);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_1000F3640(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10000A38C(&qword_10035E158);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_1000F37D8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_10000A38C(&qword_10035E158);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_1000F38EC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_10000A38C(&qword_10035E158);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1000F3A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F3A88);
}

uint64_t sub_1000F3A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F3AA0);
}

uint64_t type metadata accessor for ActivityDisplayContext.TimerDisplayContext(uint64_t a1)
{
  return sub_100014F7C(a1, qword_100365DD8);
}

void sub_1000F3AC4()
{
  sub_1000F3B5C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000F3B5C()
{
  if (!qword_10035D9C8)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10035D9C8);
    }
  }
}

uint64_t *sub_1000F3BB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_10000A38C(&qword_10035E158);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 24);
    int64_t v17 = (uint64_t *)((char *)v4 + v16);
    unint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *int64_t v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000F3D50(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

void *sub_1000F3E24(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_10000A38C(&qword_10035E158);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1000F3F70(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10000A38C(&qword_10035E158);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1000F413C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10000A38C(&qword_10035E158);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_1000F426C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_10000A38C(&qword_10035E158);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (void *)((char *)a1 + v16);
  unint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000F4418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F442C);
}

uint64_t sub_1000F4430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_10000A38C(&qword_10035E158);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1000F44F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F4504);
}

uint64_t sub_1000F4508(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_10000A38C(&qword_10035E158);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ActivityDisplayContext.CallDisplayContext(uint64_t a1)
{
  return sub_100014F7C(a1, qword_100365E68);
}

void sub_1000F45D4()
{
  sub_1000F3B5C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_1000F466C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
      int v13 = (char *)a1 + v12;
      int v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for Date();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        uint64_t v18 = sub_10000A38C(&qword_10035E158);
        memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      uint64_t v20 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
      uint64_t v21 = *(int *)(v20 + 20);
      __dst = (char *)a1 + v21;
      int64_t v22 = (char *)a2 + v21;
      uint64_t v23 = type metadata accessor for Date();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      swift_bridgeObjectRetain();
      if (v25(v22, 1, v23))
      {
        uint64_t v26 = sub_10000A38C(&qword_10035E158);
        memcpy(__dst, v22, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
      }
      uint64_t v27 = *(int *)(v20 + 24);
      uint64_t v28 = (uint64_t *)((char *)a1 + v27);
      uint64_t v29 = (uint64_t *)((char *)a2 + v27);
      uint64_t v30 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v30;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1000F4990(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
    uint64_t v4 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v4 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v3, 1, v4);
    if (!result)
    {
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
      return v8(v3, v4);
    }
  }
  else
  {
    if (result == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = a1 + *(int *)(type metadata accessor for ActivityDisplayContext.CallDisplayContext(0) + 20);
      uint64_t v6 = type metadata accessor for Date();
      uint64_t v7 = *(void *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      }
    }
    else if (result)
    {
      return result;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1000F4B60(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for Date();
      uint64_t v13 = *(void *)(v12 - 8);
      int v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      if (v14(v11, 1, v12))
      {
        uint64_t v15 = sub_10000A38C(&qword_10035E158);
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      goto LABEL_14;
    case 1:
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      uint64_t v17 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
      uint64_t v18 = *(int *)(v17 + 20);
      __dst = (char *)a1 + v18;
      uint64_t v19 = (char *)a2 + v18;
      uint64_t v20 = type metadata accessor for Date();
      uint64_t v21 = *(void *)(v20 - 8);
      int64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      swift_bridgeObjectRetain();
      if (v22(v19, 1, v20))
      {
        uint64_t v23 = sub_10000A38C(&qword_10035E158);
        memcpy(__dst, v19, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
      }
      uint64_t v24 = *(int *)(v17 + 24);
      uint64_t v25 = (void *)((char *)a1 + v24);
      uint64_t v26 = (void *)((char *)a2 + v24);
      uint64_t v27 = v26[1];
      *uint64_t v25 = *v26;
      v25[1] = v27;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 0:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_1000F4E38(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000FBA44((uint64_t)a1, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v7 = *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = type metadata accessor for Date();
        uint64_t v11 = *(void *)(v10 - 8);
        uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
        swift_bridgeObjectRetain();
        if (v12(v9, 1, v10))
        {
          uint64_t v13 = sub_10000A38C(&qword_10035E158);
          memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
        }
        goto LABEL_14;
      case 1:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v14 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
        uint64_t v15 = *(int *)(v14 + 20);
        __dst = (char *)a1 + v15;
        uint64_t v16 = (char *)a2 + v15;
        uint64_t v17 = type metadata accessor for Date();
        uint64_t v18 = *(void *)(v17 - 8);
        uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
        swift_bridgeObjectRetain();
        if (v19(v16, 1, v17))
        {
          uint64_t v20 = sub_10000A38C(&qword_10035E158);
          memcpy(__dst, v16, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
        }
        uint64_t v21 = *(int *)(v14 + 24);
        int64_t v22 = (void *)((char *)a1 + v21);
        uint64_t v23 = (void *)((char *)a2 + v21);
        *int64_t v22 = *v23;
        v22[1] = v23[1];
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 0:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
LABEL_14:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for ActivityDisplayContext.DynamicTextScheme(uint64_t a1)
{
  return sub_100014F7C(a1, qword_100365F18);
}

_OWORD *sub_1000F5174(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v14 = *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for Date();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_10000A38C(&qword_10035E158);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
LABEL_11:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v7 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_10000A38C(&qword_10035E158);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(_OWORD *)((char *)a1 + *(int *)(v7 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 24));
    goto LABEL_11;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1000F53F8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000FBA44((uint64_t)a1, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v14 = *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = type metadata accessor for Date();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_10000A38C(&qword_10035E158);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v7 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for Date();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_10000A38C(&qword_10035E158);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(_OWORD *)((char *)a1 + *(int *)(v7 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 24));
      goto LABEL_12;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000F56A0()
{
  uint64_t result = type metadata accessor for ActivityDisplayContext.CallDisplayContext(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ActivityDisplayContext.TimerDisplayContext(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_1000F5770(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  *(void *)a1 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  uint64_t v7 = (void *)a2[5];
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)((char *)a2 + v8);
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v7;
  uint64_t v11 = type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0);
  swift_bridgeObjectRetain();
  id v12 = v7;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v65 = v11;
    uint64_t v17 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v17;
    uint64_t v18 = *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
    __dst = (char *)v9 + v18;
    uint64_t v19 = (char *)v10 + v18;
    uint64_t v20 = type metadata accessor for Date();
    uint64_t v21 = *(void *)(v20 - 8);
    int64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    swift_bridgeObjectRetain();
    if (v22(v19, 1, v20))
    {
      uint64_t v23 = sub_10000A38C(&qword_10035E158);
      memcpy(__dst, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
    }
    uint64_t v11 = v65;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v66 = v11;
    uint64_t v24 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v24;
    uint64_t v25 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
    uint64_t v26 = *(int *)(v25 + 20);
    uint64_t v61 = v25;
    __dsta = (char *)v9 + v26;
    Swift::Bool v60 = (char *)v10 + v26;
    uint64_t v27 = type metadata accessor for Date();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    swift_bridgeObjectRetain();
    if (v29(v60, 1, v27))
    {
      uint64_t v30 = sub_10000A38C(&qword_10035E158);
      memcpy(__dsta, v60, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dsta, v60, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dsta, 0, 1, v27);
    }
    uint64_t v31 = *(int *)(v61 + 24);
    uint64_t v32 = (void *)((char *)v9 + v31);
    uint64_t v33 = (void *)((char *)v10 + v31);
    uint64_t v34 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v34;
    swift_bridgeObjectRetain();
    uint64_t v11 = v66;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      goto LABEL_18;
    }
    uint64_t v14 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v14;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_18:
  uint64_t v35 = *(int *)(a3 + 36);
  uint64_t v36 = (void *)((char *)v4 + v35);
  uint64_t v37 = (uint64_t *)((char *)a2 + v35);
  int v38 = swift_getEnumCaseMultiPayload();
  if (v38 == 2)
  {
    uint64_t v40 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v40;
    uint64_t v41 = *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
    uint64_t v42 = (char *)v36 + v41;
    uint64_t v43 = (char *)v37 + v41;
    uint64_t v44 = type metadata accessor for Date();
    uint64_t v45 = *(void *)(v44 - 8);
    char v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
    swift_bridgeObjectRetain();
    if (v46(v43, 1, v44))
    {
      uint64_t v47 = sub_10000A38C(&qword_10035E158);
      memcpy(v42, v43, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    swift_storeEnumTagMultiPayload();
  }
  else if (v38 == 1)
  {
    uint64_t v48 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v48;
    uint64_t v49 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
    uint64_t v50 = *(int *)(v49 + 20);
    __dstb = (char *)v36 + v50;
    uint64_t v51 = (char *)v37 + v50;
    uint64_t v52 = type metadata accessor for Date();
    uint64_t v53 = *(void *)(v52 - 8);
    unint64_t v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
    swift_bridgeObjectRetain();
    if (v54(v51, 1, v52))
    {
      uint64_t v55 = sub_10000A38C(&qword_10035E158);
      memcpy(__dstb, v51, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(__dstb, v51, v52);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(__dstb, 0, 1, v52);
    }
    uint64_t v56 = *(int *)(v49 + 24);
    uint64_t v57 = (void *)((char *)v36 + v56);
    uint64_t v58 = (void *)((char *)v37 + v56);
    uint64_t v59 = v58[1];
    *uint64_t v57 = *v58;
    v57[1] = v59;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (v38)
  {
    memcpy(v36, v37, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v39 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v39;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_1000F5D9C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + *(int *)(a2 + 32);
  type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = v4 + *(int *)(type metadata accessor for ActivityDisplayContext.CallDisplayContext(0) + 20);
      uint64_t v10 = type metadata accessor for Date();
      uint64_t v11 = *(void *)(v10 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
    }
    else if (EnumCaseMultiPayload)
    {
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
LABEL_10:
  uint64_t v12 = a1 + *(int *)(a2 + 36);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = v12 + *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
    uint64_t v15 = type metadata accessor for Date();
    uint64_t v20 = *(void *)(v15 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v14, 1, v15);
    if (!result)
    {
      uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8);
      return v19(v14, v15);
    }
  }
  else
  {
    if (result == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v16 = v12 + *(int *)(type metadata accessor for ActivityDisplayContext.CallDisplayContext(0) + 20);
      uint64_t v17 = type metadata accessor for Date();
      uint64_t v18 = *(void *)(v17 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
      }
    }
    else if (result)
    {
      return result;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000F610C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a3;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0);
  swift_bridgeObjectRetain();
  id v11 = v6;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v14 = v9[1];
    void *v8 = *v9;
    v8[1] = v14;
    uint64_t v15 = *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
    __dst = (char *)v8 + v15;
    uint64_t v16 = (char *)v9 + v15;
    uint64_t v17 = type metadata accessor for Date();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    if (v19(v16, 1, v17))
    {
      uint64_t v20 = sub_10000A38C(&qword_10035E158);
      memcpy(__dst, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v59 = v10;
    BOOL v63 = v3;
    uint64_t v21 = v9[1];
    void *v8 = *v9;
    v8[1] = v21;
    uint64_t v58 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
    uint64_t v22 = *(int *)(v58 + 20);
    __dsta = (char *)v8 + v22;
    uint64_t v23 = (char *)v9 + v22;
    uint64_t v24 = type metadata accessor for Date();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    if (v26(v23, 1, v24))
    {
      uint64_t v27 = sub_10000A38C(&qword_10035E158);
      memcpy(__dsta, v23, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dsta, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dsta, 0, 1, v24);
    }
    uint64_t v3 = v63;
    uint64_t v10 = v59;
    uint64_t v28 = *(int *)(v58 + 24);
    uint64_t v29 = (void *)((char *)v8 + v28);
    uint64_t v30 = (void *)((char *)v9 + v28);
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      goto LABEL_14;
    }
    uint64_t v13 = v9[1];
    void *v8 = *v9;
    v8[1] = v13;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_14:
  uint64_t v32 = v3[9];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  int v35 = swift_getEnumCaseMultiPayload();
  switch(v35)
  {
    case 2:
      uint64_t v37 = v34[1];
      void *v33 = *v34;
      v33[1] = v37;
      uint64_t v38 = *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
      uint64_t v39 = (char *)v33 + v38;
      uint64_t v40 = (char *)v34 + v38;
      uint64_t v41 = type metadata accessor for Date();
      uint64_t v42 = *(void *)(v41 - 8);
      uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
      swift_bridgeObjectRetain();
      if (v43(v40, 1, v41))
      {
        uint64_t v44 = sub_10000A38C(&qword_10035E158);
        memcpy(v39, v40, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      goto LABEL_26;
    case 1:
      uint64_t v45 = v34[1];
      void *v33 = *v34;
      v33[1] = v45;
      uint64_t v46 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
      uint64_t v47 = *(int *)(v46 + 20);
      __dstb = (int *)v46;
      uint64_t v64 = (char *)v33 + v47;
      uint64_t v48 = (char *)v34 + v47;
      uint64_t v49 = type metadata accessor for Date();
      uint64_t v50 = *(void *)(v49 - 8);
      uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
      swift_bridgeObjectRetain();
      if (v51(v48, 1, v49))
      {
        uint64_t v52 = sub_10000A38C(&qword_10035E158);
        memcpy(v64, v48, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v64, v48, v49);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v64, 0, 1, v49);
      }
      uint64_t v53 = __dstb[6];
      unint64_t v54 = (void *)((char *)v33 + v53);
      uint64_t v55 = (void *)((char *)v34 + v53);
      uint64_t v56 = v55[1];
      *unint64_t v54 = *v55;
      v54[1] = v56;
      swift_bridgeObjectRetain();
      goto LABEL_26;
    case 0:
      uint64_t v36 = v34[1];
      void *v33 = *v34;
      v33[1] = v36;
      swift_bridgeObjectRetain();
LABEL_26:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(v33, v34, *(void *)(*(void *)(v10 - 8) + 64));
  return a1;
}

uint64_t sub_1000F66E0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + 40);
  uint64_t v8 = (void *)a2[5];
  *(void *)(a1 + 40) = v8;
  id v9 = v8;

  if ((uint64_t *)a1 == a2) {
    return a1;
  }
  uint64_t v10 = *(int *)(a3 + 32);
  id v11 = (void *)(a1 + v10);
  uint64_t v12 = (uint64_t *)((char *)a2 + v10);
  sub_1000FBA44(a1 + v10, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
  uint64_t v13 = type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v58 = v13;
      *id v11 = *v12;
      v11[1] = v12[1];
      uint64_t v15 = *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
      __dst = (char *)v11 + v15;
      uint64_t v16 = (char *)v12 + v15;
      uint64_t v17 = type metadata accessor for Date();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      swift_bridgeObjectRetain();
      if (v19(v16, 1, v17))
      {
        uint64_t v20 = sub_10000A38C(&qword_10035E158);
        memcpy(__dst, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
      }
      uint64_t v13 = v58;
      goto LABEL_15;
    case 1:
      uint64_t v53 = a3;
      uint64_t v59 = v13;
      *id v11 = *v12;
      v11[1] = v12[1];
      uint64_t v21 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
      uint64_t v22 = *(int *)(v21 + 20);
      unint64_t v54 = (char *)v11 + v22;
      __dsta = (int *)v21;
      uint64_t v23 = (char *)v12 + v22;
      uint64_t v24 = type metadata accessor for Date();
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      if (v26(v23, 1, v24))
      {
        uint64_t v27 = sub_10000A38C(&qword_10035E158);
        memcpy(v54, v23, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v54, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v54, 0, 1, v24);
      }
      a3 = v53;
      uint64_t v28 = __dsta[6];
      uint64_t v29 = (void *)((char *)v11 + v28);
      uint64_t v30 = (void *)((char *)v12 + v28);
      *uint64_t v29 = *v30;
      v29[1] = v30[1];
      swift_bridgeObjectRetain();
      uint64_t v13 = v59;
      goto LABEL_15;
    case 0:
      *id v11 = *v12;
      v11[1] = v12[1];
      swift_bridgeObjectRetain();
LABEL_15:
      swift_storeEnumTagMultiPayload();
      goto LABEL_16;
  }
  memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_16:
  uint64_t v31 = *(int *)(a3 + 36);
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)((char *)a2 + v31);
  sub_1000FBA44(a1 + v31, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
  int v34 = swift_getEnumCaseMultiPayload();
  switch(v34)
  {
    case 2:
      *uint64_t v32 = *v33;
      v32[1] = v33[1];
      uint64_t v35 = *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
      uint64_t v36 = (char *)v32 + v35;
      uint64_t v37 = (char *)v33 + v35;
      uint64_t v38 = type metadata accessor for Date();
      uint64_t v39 = *(void *)(v38 - 8);
      uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
      swift_bridgeObjectRetain();
      if (v40(v37, 1, v38))
      {
        uint64_t v41 = sub_10000A38C(&qword_10035E158);
        memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      goto LABEL_28;
    case 1:
      *uint64_t v32 = *v33;
      v32[1] = v33[1];
      uint64_t v42 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
      uint64_t v43 = *(int *)(v42 + 20);
      __dstb = (char *)v32 + v43;
      uint64_t v44 = (char *)v33 + v43;
      uint64_t v45 = type metadata accessor for Date();
      uint64_t v46 = *(void *)(v45 - 8);
      uint64_t v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
      swift_bridgeObjectRetain();
      if (v47(v44, 1, v45))
      {
        uint64_t v48 = sub_10000A38C(&qword_10035E158);
        memcpy(__dstb, v44, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(__dstb, v44, v45);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(__dstb, 0, 1, v45);
      }
      uint64_t v49 = *(int *)(v42 + 24);
      uint64_t v50 = (void *)((char *)v32 + v49);
      uint64_t v51 = (void *)((char *)v33 + v49);
      *uint64_t v50 = *v51;
      v50[1] = v51[1];
      swift_bridgeObjectRetain();
      goto LABEL_28;
    case 0:
      *uint64_t v32 = *v33;
      v32[1] = v33[1];
      swift_bridgeObjectRetain();
LABEL_28:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(v32, v33, *(void *)(*(void *)(v13 - 8) + 64));
  return a1;
}

uint64_t sub_1000F6D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *uint64_t v7 = *v8;
    uint64_t v17 = *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
    uint64_t v18 = (char *)v7 + v17;
    uint64_t v19 = (char *)v8 + v17;
    uint64_t v20 = type metadata accessor for Date();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = sub_10000A38C(&qword_10035E158);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
      goto LABEL_12;
    }
    *uint64_t v7 = *v8;
    uint64_t v11 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
    uint64_t v12 = *(int *)(v11 + 20);
    __dst = (char *)v7 + v12;
    uint64_t v13 = (char *)v8 + v12;
    uint64_t v14 = type metadata accessor for Date();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_10000A38C(&qword_10035E158);
      memcpy(__dst, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(__dst, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    *(_OWORD *)((char *)v7 + *(int *)(v11 + 24)) = *(_OWORD *)((char *)v8 + *(int *)(v11 + 24));
  }
  swift_storeEnumTagMultiPayload();
LABEL_12:
  uint64_t v23 = *(int *)(a3 + 36);
  uint64_t v24 = (_OWORD *)(a1 + v23);
  uint64_t v25 = (_OWORD *)(a2 + v23);
  int v26 = swift_getEnumCaseMultiPayload();
  if (v26 == 2)
  {
    _OWORD *v24 = *v25;
    uint64_t v34 = *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
    uint64_t v35 = (char *)v24 + v34;
    uint64_t v36 = (char *)v25 + v34;
    uint64_t v37 = type metadata accessor for Date();
    uint64_t v38 = *(void *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      uint64_t v39 = sub_10000A38C(&qword_10035E158);
      memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
LABEL_22:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (v26 == 1)
  {
    _OWORD *v24 = *v25;
    uint64_t v27 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
    uint64_t v28 = *(int *)(v27 + 20);
    uint64_t v29 = (char *)v24 + v28;
    uint64_t v30 = (char *)v25 + v28;
    uint64_t v31 = type metadata accessor for Date();
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      uint64_t v33 = sub_10000A38C(&qword_10035E158);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    *(_OWORD *)((char *)v24 + *(int *)(v27 + 24)) = *(_OWORD *)((char *)v25 + *(int *)(v27 + 24));
    goto LABEL_22;
  }
  memcpy(v24, v25, *(void *)(*(void *)(v9 - 8) + 64));
  return a1;
}

uint64_t sub_1000F7288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  if (a1 == a2) {
    return a1;
  }
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  sub_1000FBA44(a1 + v7, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
  uint64_t v10 = type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    _OWORD *v8 = *v9;
    uint64_t v18 = *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
    uint64_t v19 = (char *)v8 + v18;
    uint64_t v20 = (char *)v9 + v18;
    uint64_t v21 = type metadata accessor for Date();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = sub_10000A38C(&qword_10035E158);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
LABEL_12:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 1)
  {
    _OWORD *v8 = *v9;
    uint64_t v12 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
    uint64_t v13 = *(int *)(v12 + 20);
    __dst = (char *)v8 + v13;
    uint64_t v14 = (char *)v9 + v13;
    uint64_t v15 = type metadata accessor for Date();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_10000A38C(&qword_10035E158);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *(_OWORD *)((char *)v8 + *(int *)(v12 + 24)) = *(_OWORD *)((char *)v9 + *(int *)(v12 + 24));
    goto LABEL_12;
  }
  memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_13:
  uint64_t v24 = *(int *)(a3 + 36);
  uint64_t v25 = (_OWORD *)(a1 + v24);
  int v26 = (_OWORD *)(a2 + v24);
  sub_1000FBA44(a1 + v24, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
  int v27 = swift_getEnumCaseMultiPayload();
  if (v27 == 2)
  {
    *uint64_t v25 = *v26;
    uint64_t v35 = *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
    uint64_t v36 = (char *)v25 + v35;
    uint64_t v37 = (char *)v26 + v35;
    uint64_t v38 = type metadata accessor for Date();
    uint64_t v39 = *(void *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      uint64_t v40 = sub_10000A38C(&qword_10035E158);
      memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
LABEL_23:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (v27 == 1)
  {
    *uint64_t v25 = *v26;
    uint64_t v28 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
    uint64_t v29 = *(int *)(v28 + 20);
    uint64_t v30 = (char *)v25 + v29;
    uint64_t v31 = (char *)v26 + v29;
    uint64_t v32 = type metadata accessor for Date();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      uint64_t v34 = sub_10000A38C(&qword_10035E158);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    *(_OWORD *)((char *)v25 + *(int *)(v28 + 24)) = *(_OWORD *)((char *)v26 + *(int *)(v28 + 24));
    goto LABEL_23;
  }
  memcpy(v25, v26, *(void *)(*(void *)(v10 - 8) + 64));
  return a1;
}

uint64_t sub_1000F780C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F7820);
}

uint64_t sub_1000F7820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000F78D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F78E4);
}

uint64_t sub_1000F78E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ActivityDisplayContext(uint64_t a1)
{
  return sub_100014F7C(a1, qword_100365FA8);
}

uint64_t sub_1000F79AC()
{
  uint64_t result = type metadata accessor for ActivityDisplayContext.DynamicTextScheme(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000F7A64()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000FBAF8(v1, (uint64_t)v10, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
  uint64_t v11 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1000FBD04((uint64_t)v10, (uint64_t)v7, type metadata accessor for ActivityDisplayContext.CallDisplayContext);
      uint64_t v11 = sub_1000F8F6C();
      uint64_t v12 = type metadata accessor for ActivityDisplayContext.CallDisplayContext;
      uint64_t v13 = (uint64_t)v7;
      goto LABEL_5;
    case 2u:
      sub_1000FBD04((uint64_t)v10, (uint64_t)v4, type metadata accessor for ActivityDisplayContext.TimerDisplayContext);
      uint64_t v11 = sub_1000F9308();
      uint64_t v12 = type metadata accessor for ActivityDisplayContext.TimerDisplayContext;
      uint64_t v13 = (uint64_t)v4;
LABEL_5:
      sub_1000FBA44(v13, v12);
      break;
    case 3u:
      return v11;
    default:
      uint64_t v11 = *v10;
      break;
  }
  return v11;
}

uint64_t sub_1000F7C78()
{
  uint64_t v1 = sub_10000A38C(&qword_100366130);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A38C((uint64_t *)&unk_10036D270);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A38C(&qword_100366138);
  uint64_t v35 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v33 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A38C(&qword_100366140);
  uint64_t v36 = *(void *)(v10 - 8);
  uint64_t v37 = v10;
  __chkstk_darwin(v10);
  uint64_t v34 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0);
  uint64_t v32 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v32 + 64);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v38 = v0;
  sub_1000FBAF8(v0, (uint64_t)&v31 - v16, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 1) >= 2)
  {
    if (!EnumCaseMultiPayload) {
      sub_1000FBA44((uint64_t)v17, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
    }
    uint64_t v39 = sub_1000F7A64();
    uint64_t v40 = v29;
    sub_10000A38C(&qword_10035F850);
    Just.init(_:)();
    sub_10000B010(&qword_100366160, &qword_100366130);
    uint64_t v28 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    sub_1000FBA44((uint64_t)v17, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
    sub_1000FBDC0();
    id v19 = [self mainRunLoop];
    uint64_t v20 = type metadata accessor for NSRunLoop.SchedulerOptions();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 1, 1, v20);
    uint64_t v21 = static NSTimer.publish(every:tolerance:on:in:options:)();

    sub_10000D78C((uint64_t)v7, (uint64_t *)&unk_10036D270);
    uint64_t v39 = v21;
    type metadata accessor for NSTimer.TimerPublisher();
    sub_1000FB994((unint64_t *)&qword_10036D2B0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
    uint64_t v22 = ConnectablePublisher.autoconnect()();
    swift_release();
    uint64_t v39 = v22;
    sub_10000A38C(&qword_100363558);
    type metadata accessor for Date();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10028D430;
    Date.init()();
    sub_10000A38C((uint64_t *)&unk_10036D2C0);
    sub_10000B010(&qword_100366150, (uint64_t *)&unk_10036D2C0);
    uint64_t v23 = v33;
    Publisher.prepend(_:)();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000FBAF8(v38, (uint64_t)v15, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
    unint64_t v24 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v25 = swift_allocObject();
    sub_1000FBD04((uint64_t)v15, v25 + v24, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
    sub_10000A38C(&qword_10035F850);
    sub_10000B010(&qword_10036D2D0, &qword_100366138);
    int v26 = v34;
    Publisher.map<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v8);
    sub_10000B010(&qword_100366158, &qword_100366140);
    uint64_t v27 = v37;
    uint64_t v28 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v27);
  }
  return v28;
}

uint64_t sub_1000F8368@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[1];
  if (v4)
  {
    uint64_t v5 = *a1;
    uint64_t v6 = v4;
  }
  else
  {
    id v7 = [self localizedStringForKey:10];
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v8;
  }
  *a2 = v5;
  a2[1] = v6;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1000F83F8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000A38C(&qword_100366108);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D6E4(a1, a1[3]);
  sub_1000FBD6C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v9 = *((unsigned char *)v3 + 8);
  uint64_t v11 = *v3;
  char v12 = v9;
  char v13 = 0;
  type metadata accessor for PCActivityType(0);
  sub_1000FB994(&qword_100366110, type metadata accessor for PCActivityType);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v11 = v3[2];
    char v13 = 1;
    type metadata accessor for PCActivityAssetType(0);
    sub_1000FB994(&qword_100366118, type metadata accessor for PCActivityAssetType);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v11) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v11 = v3[5];
    char v13 = 3;
    sub_10000A38C(&qword_1003660F0);
    sub_10000B010(&qword_100366120, &qword_1003660F0);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    type metadata accessor for ActivityDisplayContext(0);
    LOBYTE(v11) = 4;
    type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0);
    sub_1000FB994(&qword_100366128, (void (*)(uint64_t))type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v11) = 5;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1000F875C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = sub_10000A38C(&qword_1003660D0);
  uint64_t v26 = *(void *)(v9 - 8);
  uint64_t v27 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ActivityDisplayContext(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v14 + 5) = 0;
  uint64_t v15 = a1[3];
  uint64_t v29 = a1;
  sub_10000D6E4(a1, v15);
  sub_1000FBD6C();
  uint64_t v28 = v11;
  uint64_t v16 = v30;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v16)
  {
    sub_10000CC5C((uint64_t)v29);
  }
  else
  {
    uint64_t v30 = v6;
    uint64_t v17 = v26;
    type metadata accessor for PCActivityType(0);
    char v33 = 0;
    sub_1000FB994(&qword_1003660E0, type metadata accessor for PCActivityType);
    uint64_t v18 = v27;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    char v19 = v32;
    *(void *)uint64_t v14 = v31;
    v14[8] = v19;
    type metadata accessor for PCActivityAssetType(0);
    char v33 = 1;
    sub_1000FB994(&qword_1003660E8, type metadata accessor for PCActivityAssetType);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *((void *)v14 + 2) = v31;
    LOBYTE(v31) = 2;
    uint64_t v20 = v17;
    *((void *)v14 + 3) = KeyedDecodingContainer.decode(_:forKey:)();
    *((void *)v14 + 4) = v21;
    sub_10000A38C(&qword_1003660F0);
    char v33 = 3;
    sub_10000B010(&qword_1003660F8, &qword_1003660F0);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *((void *)v14 + 5) = v31;
    LOBYTE(v31) = 4;
    sub_1000FB994(&qword_100366100, (void (*)(uint64_t))type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
    unint64_t v24 = v8;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_1000FBD04((uint64_t)v24, (uint64_t)&v14[*(int *)(v12 + 32)], type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
    LOBYTE(v31) = 5;
    uint64_t v22 = (uint64_t)v30;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v18);
    sub_1000FBD04(v22, (uint64_t)&v14[*(int *)(v12 + 36)], type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
    sub_1000FBAF8((uint64_t)v14, v25, type metadata accessor for ActivityDisplayContext);
    sub_10000CC5C((uint64_t)v29);
    sub_1000FBA44((uint64_t)v14, type metadata accessor for ActivityDisplayContext);
  }
}

unint64_t sub_1000F8CE0()
{
  unint64_t result = 0x7974697669746361;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7079547465737361;
      break;
    case 2:
      unint64_t result = 0x614E656369766564;
      break;
    case 3:
      unint64_t result = 0x6461654864726163;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0x74786554746E6968;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000F8DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000FCD8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000F8DFC(uint64_t a1)
{
  unint64_t v2 = sub_1000FBD6C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000F8E38(uint64_t a1)
{
  unint64_t v2 = sub_1000FBD6C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1000F8E74(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1000F8E8C(void *a1)
{
  return sub_1000F83F8(a1);
}

uint64_t sub_1000F8EA4(uint64_t a1)
{
  v5[3] = a1;
  unint64_t v2 = sub_10000D680(v5);
  sub_1000FBAF8(v1, (uint64_t)v2, type metadata accessor for ActivityDisplayContext);
  uint64_t v3 = sub_10002836C(v5);
  sub_10000CC5C((uint64_t)v5);
  return v3;
}

uint64_t sub_1000F8F14(uint64_t a1)
{
  uint64_t result = sub_1000FB994(&qword_100365FF0, (void (*)(uint64_t))type metadata accessor for ActivityDisplayContext);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000F8F6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A38C(&qword_10035E158);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v34 - v10;
  uint64_t v12 = v1[1];
  if (!v12)
  {
    id v17 = sub_1001E9804();
    NSString v18 = String._bridgeToObjectiveC()();
    [v17 ulog:60 message:v18];

    uint64_t v19 = *(int *)(type metadata accessor for ActivityDisplayContext.CallDisplayContext(0) + 24);
LABEL_9:
    uint64_t v30 = *(uint64_t *)((char *)v1 + v19);
    swift_bridgeObjectRetain();
    return v30;
  }
  uint64_t v13 = *v1;
  uint64_t v14 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
  sub_1000B03BC((uint64_t)v1 + *(int *)(v14 + 20), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000D78C((uint64_t)v4, &qword_10035E158);
    id v15 = sub_1001E9804();
    NSString v16 = String._bridgeToObjectiveC()();
    [v15 ulog:60 message:v16];

LABEL_8:
    uint64_t v19 = *(int *)(v14 + 24);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  Date.init()();
  Date.timeIntervalSince(_:)();
  double v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22(v9, v5);
  id v23 = [self formattedDurationFor:v21];
  if (!v23)
  {
    id v31 = sub_1001E9804();
    NSString v32 = String._bridgeToObjectiveC()();
    [v31 ulog:60 message:v32];

    v22(v11, v5);
    goto LABEL_8;
  }
  unint64_t v24 = v23;
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;

  v34[0] = v13;
  v34[1] = v12;
  swift_bridgeObjectRetain();
  v28._uint64_t countAndFlagsBits = 2108704;
  v28._unint64_t object = (void *)0xE300000000000000;
  String.append(_:)(v28);
  v29._uint64_t countAndFlagsBits = v25;
  v29._unint64_t object = v27;
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  uint64_t v30 = v34[0];
  v22(v11, v5);
  return v30;
}

uint64_t sub_1000F9308()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A38C(&qword_10035E158);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v35 - v10;
  uint64_t v12 = type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0);
  sub_1000B03BC((uint64_t)v1 + *(int *)(v12 + 20), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000D78C((uint64_t)v4, &qword_10035E158);
    id v13 = sub_1001E97E4();
    NSString v14 = String._bridgeToObjectiveC()();
    [v13 ulog:60 message:v14];

LABEL_3:
    uint64_t v15 = *v1;
    swift_bridgeObjectRetain();
    return v15;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  Date.init()();
  char v16 = static Date.> infix(_:_:)();
  id v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v9, v5);
  if ((v16 & 1) == 0)
  {
    id v30 = sub_1001E97E4();
    NSString v31 = String._bridgeToObjectiveC()();
    [v30 ulog:60 message:v31];

    v17(v11, v5);
    return 0;
  }
  Date.timeIntervalSinceNow.getter();
  id v19 = [self formattedDurationFor:v18];
  if (!v19)
  {
    id v33 = sub_1001E97E4();
    NSString v34 = String._bridgeToObjectiveC()();
    [v33 ulog:60 message:v34];

    v17(v11, v5);
    goto LABEL_3;
  }
  double v20 = v19;
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v23 = v22;

  v35[0] = 0;
  v35[1] = 0xE000000000000000;
  unint64_t v24 = (void *)v1[1];
  if (v24) {
    uint64_t v25 = *v1;
  }
  else {
    uint64_t v25 = 0;
  }
  if (v24) {
    uint64_t v26 = v24;
  }
  else {
    uint64_t v26 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v27._uint64_t countAndFlagsBits = v25;
  v27._unint64_t object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 2108704;
  v28._unint64_t object = (void *)0xE300000000000000;
  String.append(_:)(v28);
  v29._uint64_t countAndFlagsBits = v21;
  v29._unint64_t object = v23;
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  uint64_t v15 = v35[0];
  v17(v11, v5);
  return v15;
}

uint64_t sub_1000F96D0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000FBAF8(a1, (uint64_t)v12, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
  uint64_t result = swift_getEnumCaseMultiPayload();
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  switch((int)result)
  {
    case 1:
      sub_1000FBD04((uint64_t)v12, (uint64_t)v9, type metadata accessor for ActivityDisplayContext.CallDisplayContext);
      uint64_t v14 = sub_1000F8F6C();
      uint64_t v15 = v16;
      id v17 = type metadata accessor for ActivityDisplayContext.CallDisplayContext;
      uint64_t v18 = (uint64_t)v9;
      goto LABEL_5;
    case 2:
      sub_1000FBD04((uint64_t)v12, (uint64_t)v6, type metadata accessor for ActivityDisplayContext.TimerDisplayContext);
      uint64_t v14 = sub_1000F9308();
      uint64_t v15 = v19;
      id v17 = type metadata accessor for ActivityDisplayContext.TimerDisplayContext;
      uint64_t v18 = (uint64_t)v6;
LABEL_5:
      uint64_t result = sub_1000FBA44(v18, v17);
      break;
    case 3:
      break;
    default:
      uint64_t v14 = *v12;
      uint64_t v15 = v12[1];
      break;
  }
  *a2 = v14;
  a2[1] = v15;
  return result;
}

uint64_t sub_1000F98E4(void *a1)
{
  uint64_t v2 = sub_10000A38C(&qword_100366098);
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  __chkstk_darwin(v2);
  uint64_t v42 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0);
  __chkstk_darwin(v40);
  uint64_t v41 = (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A38C(&qword_1003660A0);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  uint64_t v36 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
  __chkstk_darwin(v34);
  uint64_t v35 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A38C(&qword_1003660A8);
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000A38C(&qword_1003660B0);
  uint64_t v39 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000A38C(&qword_1003660B8);
  uint64_t v45 = *(void *)(v17 - 8);
  uint64_t v46 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D6E4(a1, a1[3]);
  sub_1000FBB60();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_1000FBAF8(v47, (uint64_t)v16, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v23 = v35;
      sub_1000FBD04((uint64_t)v16, v35, type metadata accessor for ActivityDisplayContext.CallDisplayContext);
      char v50 = 2;
      sub_1000FBC08();
      Swift::String v29 = v36;
      uint64_t v25 = v46;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_1000FB994(&qword_1003660C8, (void (*)(uint64_t))type metadata accessor for ActivityDisplayContext.CallDisplayContext);
      uint64_t v30 = v38;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v30);
      Swift::String v27 = type metadata accessor for ActivityDisplayContext.CallDisplayContext;
      goto LABEL_6;
    case 2u:
      uint64_t v23 = v41;
      sub_1000FBD04((uint64_t)v16, v41, type metadata accessor for ActivityDisplayContext.TimerDisplayContext);
      char v51 = 3;
      sub_1000FBBB4();
      unint64_t v24 = v42;
      uint64_t v25 = v46;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_1000FB994(&qword_1003660C0, (void (*)(uint64_t))type metadata accessor for ActivityDisplayContext.TimerDisplayContext);
      uint64_t v26 = v44;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v24, v26);
      Swift::String v27 = type metadata accessor for ActivityDisplayContext.TimerDisplayContext;
LABEL_6:
      sub_1000FBA44(v23, v27);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v19, v25);
      break;
    case 3u:
      char v48 = 0;
      sub_1000FBCB0();
      uint64_t v28 = v46;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v11);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v19, v28);
      break;
    default:
      char v49 = 1;
      sub_1000FBC5C();
      uint64_t v20 = v46;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v21 = v33;
      KeyedEncodingContainer.encode(_:forKey:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v21);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v19, v20);
      break;
  }
  return result;
}

uint64_t sub_1000FA008@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v61 = sub_10000A38C(&qword_100366038);
  uint64_t v64 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v67 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_10000A38C(&qword_100366040);
  uint64_t v71 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  BOOL v70 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10000A38C(&qword_100366048);
  uint64_t v63 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v66 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A38C(&qword_100366050);
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  __chkstk_darwin(v6);
  uint64_t v65 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A38C(&qword_100366058);
  uint64_t v68 = *(void *)(v8 - 8);
  uint64_t v69 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v54 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (uint64_t *)((char *)&v54 - v19);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v54 - v21;
  uint64_t v23 = a1[3];
  uint64_t v73 = a1;
  sub_10000D6E4(a1, v23);
  sub_1000FBB60();
  uint64_t v24 = v74;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v24)
  {
    unint64_t v54 = v20;
    uint64_t v55 = v17;
    uint64_t v56 = v14;
    uint64_t v57 = v22;
    uint64_t v26 = v70;
    uint64_t v25 = v71;
    uint64_t v74 = v11;
    uint64_t v27 = v72;
    uint64_t v28 = v69;
    uint64_t v29 = KeyedDecodingContainer.allKeys.getter();
    if (*(void *)(v29 + 16) == 1)
    {
      switch(*(unsigned char *)(v29 + 32))
      {
        case 1:
          uint64_t v37 = v27;
          char v76 = 1;
          sub_1000FBC5C();
          uint64_t v38 = v66;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v39 = v10;
          uint64_t v40 = v60;
          uint64_t v49 = KeyedDecodingContainer.decode(_:forKey:)();
          uint64_t v51 = v50;
          (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v40);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v28);
          uint64_t v52 = (uint64_t)v54;
          *unint64_t v54 = v49;
          *(void *)(v52 + 8) = v51;
          swift_storeEnumTagMultiPayload();
          uint64_t v31 = (uint64_t)v57;
          sub_1000FBD04(v52, (uint64_t)v57, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
          uint64_t v32 = v37;
          break;
        case 2:
          uint64_t v41 = v25;
          char v77 = 2;
          sub_1000FBC08();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
          uint64_t v42 = v26;
          sub_1000FB994(&qword_100366080, (void (*)(uint64_t))type metadata accessor for ActivityDisplayContext.CallDisplayContext);
          uint64_t v43 = (uint64_t)v55;
          uint64_t v44 = v62;
          KeyedDecodingContainer.decode<A>(_:forKey:)();
          uint64_t v45 = v68;
          (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v44);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v28);
          goto LABEL_9;
        case 3:
          char v78 = 3;
          sub_1000FBBB4();
          uint64_t v46 = v67;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0);
          sub_1000FB994(&qword_100366070, (void (*)(uint64_t))type metadata accessor for ActivityDisplayContext.TimerDisplayContext);
          uint64_t v43 = (uint64_t)v56;
          uint64_t v47 = v61;
          KeyedDecodingContainer.decode<A>(_:forKey:)();
          uint64_t v48 = v68;
          (*(void (**)(char *, uint64_t))(v64 + 8))(v46, v47);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v28);
LABEL_9:
          swift_storeEnumTagMultiPayload();
          uint64_t v31 = (uint64_t)v57;
          sub_1000FBD04(v43, (uint64_t)v57, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
          uint64_t v32 = v72;
          break;
        default:
          char v75 = 0;
          sub_1000FBCB0();
          uint64_t v30 = v65;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v58 + 8))(v30, v59);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v68 + 8))(v10, v28);
          uint64_t v31 = (uint64_t)v57;
          swift_storeEnumTagMultiPayload();
          uint64_t v32 = v27;
          break;
      }
      sub_1000FBD04(v31, v32, type metadata accessor for ActivityDisplayContext.DynamicTextScheme);
    }
    else
    {
      uint64_t v33 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v34 = v10;
      uint64_t v36 = v35;
      sub_10000A38C(&qword_10035FAC0);
      *uint64_t v36 = v74;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v36, enum case for DecodingError.typeMismatch(_:), v33);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v34, v28);
    }
  }
  return sub_10000CC5C((uint64_t)v73);
}

uint64_t sub_1000FA9C0(uint64_t a1)
{
  unint64_t v2 = sub_1000FBC08();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000FA9FC(uint64_t a1)
{
  unint64_t v2 = sub_1000FBC08();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000FAA38()
{
  uint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x636974617473;
      break;
    case 2:
      uint64_t result = 1819042147;
      break;
    case 3:
      uint64_t result = 0x72656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000FAAAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000FD080(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000FAAD4(uint64_t a1)
{
  unint64_t v2 = sub_1000FBB60();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000FAB10(uint64_t a1)
{
  unint64_t v2 = sub_1000FBB60();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000FAB4C(uint64_t a1)
{
  unint64_t v2 = sub_1000FBCB0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000FAB88(uint64_t a1)
{
  unint64_t v2 = sub_1000FBCB0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000FABC4(uint64_t a1)
{
  unint64_t v2 = sub_1000FBC5C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000FAC00(uint64_t a1)
{
  unint64_t v2 = sub_1000FBC5C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000FAC3C(uint64_t a1)
{
  unint64_t v2 = sub_1000FBBB4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000FAC78(uint64_t a1)
{
  unint64_t v2 = sub_1000FBBB4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000FACB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FA008(a1, a2);
}

uint64_t sub_1000FACCC(void *a1)
{
  return sub_1000F98E4(a1);
}

uint64_t sub_1000FACE4(void *a1)
{
  uint64_t v3 = sub_10000A38C(&qword_100366030);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000D6E4(a1, a1[3]);
  sub_1000FBAA4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
    v8[14] = 1;
    type metadata accessor for Date();
    sub_1000FB994(&qword_100366018, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000FAED0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = sub_10000A38C(&qword_10035E158);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A38C(&qword_100366020);
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActivityDisplayContext.CallDisplayContext(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D6E4(a1, a1[3]);
  sub_1000FBAA4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10000CC5C((uint64_t)a1);
  }
  uint64_t v23 = v10;
  uint64_t v13 = v25;
  char v29 = 0;
  uint64_t v14 = (uint64_t)v12;
  *uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v12[1] = v15;
  type metadata accessor for Date();
  char v28 = 1;
  sub_1000FB994(&qword_100366008, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v16 = (uint64_t)v6;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v17 = v23;
  sub_1000FB9DC(v16, v14 + *(int *)(v23 + 20));
  char v27 = 2;
  uint64_t v18 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v26);
  uint64_t v21 = (uint64_t *)(v14 + *(int *)(v17 + 24));
  *uint64_t v21 = v18;
  v21[1] = v20;
  sub_1000FBAF8(v14, v24, type metadata accessor for ActivityDisplayContext.CallDisplayContext);
  sub_10000CC5C((uint64_t)a1);
  return sub_1000FBA44(v14, type metadata accessor for ActivityDisplayContext.CallDisplayContext);
}

uint64_t sub_1000FB250()
{
  uint64_t v1 = 0x7461447472617473;
  if (*v0 != 1) {
    uint64_t v1 = 0x656C746974;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x4E79616C70736964;
  }
}

uint64_t sub_1000FB2B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000FD20C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000FB2DC(uint64_t a1)
{
  unint64_t v2 = sub_1000FBAA4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000FB318(uint64_t a1)
{
  unint64_t v2 = sub_1000FBAA4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000FB354@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FAED0(a1, a2);
}

uint64_t sub_1000FB36C(void *a1)
{
  return sub_1000FACE4(a1);
}

uint64_t sub_1000FB384(void *a1)
{
  uint64_t v3 = sub_10000A38C(&qword_100366010);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000D6E4(a1, a1[3]);
  sub_1000FB940();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0);
    v8[14] = 1;
    type metadata accessor for Date();
    sub_1000FB994(&qword_100366018, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000FB53C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_10000A38C(&qword_10035E158);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A38C(&qword_100365FF8);
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000D6E4(a1, a1[3]);
  sub_1000FB940();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10000CC5C((uint64_t)a1);
  }
  uint64_t v17 = v10;
  uint64_t v13 = v19;
  uint64_t v14 = v20;
  char v22 = 0;
  *uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v12[1] = v15;
  type metadata accessor for Date();
  char v21 = 1;
  sub_1000FB994(&qword_100366008, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  sub_1000FB9DC((uint64_t)v6, (uint64_t)v12 + *(int *)(v17 + 20));
  sub_1000FBAF8((uint64_t)v12, v18, type metadata accessor for ActivityDisplayContext.TimerDisplayContext);
  sub_10000CC5C((uint64_t)a1);
  return sub_1000FBA44((uint64_t)v12, type metadata accessor for ActivityDisplayContext.TimerDisplayContext);
}

uint64_t sub_1000FB82C()
{
  if (*v0) {
    return 0x6574614465726966;
  }
  else {
    return 0x4E79616C70736964;
  }
}

uint64_t sub_1000FB870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000FD380(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000FB898(uint64_t a1)
{
  unint64_t v2 = sub_1000FB940();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000FB8D4(uint64_t a1)
{
  unint64_t v2 = sub_1000FB940();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000FB910@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FB53C(a1, a2);
}

uint64_t sub_1000FB928(void *a1)
{
  return sub_1000FB384(a1);
}

unint64_t sub_1000FB940()
{
  unint64_t result = qword_100366000;
  if (!qword_100366000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366000);
  }
  return result;
}

uint64_t sub_1000FB994(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000FB9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A38C(&qword_10035E158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FBA44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000FBAA4()
{
  unint64_t result = qword_100366028;
  if (!qword_100366028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366028);
  }
  return result;
}

uint64_t sub_1000FBAF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000FBB60()
{
  unint64_t result = qword_100366060;
  if (!qword_100366060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366060);
  }
  return result;
}

unint64_t sub_1000FBBB4()
{
  unint64_t result = qword_100366068;
  if (!qword_100366068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366068);
  }
  return result;
}

unint64_t sub_1000FBC08()
{
  unint64_t result = qword_100366078;
  if (!qword_100366078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366078);
  }
  return result;
}

unint64_t sub_1000FBC5C()
{
  unint64_t result = qword_100366088;
  if (!qword_100366088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366088);
  }
  return result;
}

unint64_t sub_1000FBCB0()
{
  unint64_t result = qword_100366090;
  if (!qword_100366090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366090);
  }
  return result;
}

uint64_t sub_1000FBD04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000FBD6C()
{
  unint64_t result = qword_1003660D8;
  if (!qword_1003660D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003660D8);
  }
  return result;
}

unint64_t sub_1000FBDC0()
{
  unint64_t result = qword_100366148;
  if (!qword_100366148)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100366148);
  }
  return result;
}

uint64_t sub_1000FBE00()
{
  uint64_t v1 = *(void *)(type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = v0 + v3;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = v5 + *(int *)(type metadata accessor for ActivityDisplayContext.TimerDisplayContext(0) + 20);
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = v5 + *(int *)(type metadata accessor for ActivityDisplayContext.CallDisplayContext(0) + 20);
      uint64_t v11 = type metadata accessor for Date();
      uint64_t v12 = *(void *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
      }
    }
    else if (EnumCaseMultiPayload)
    {
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
LABEL_10:

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000FC00C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ActivityDisplayContext.DynamicTextScheme(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000F96D0(v4, a1);
}

unsigned char *storeEnumTagSinglePayload for ActivityDisplayContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FC158);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityDisplayContext.CodingKeys()
{
  return &type metadata for ActivityDisplayContext.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ActivityDisplayContext.DynamicTextScheme.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FC25CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityDisplayContext.DynamicTextScheme.CodingKeys()
{
  return &type metadata for ActivityDisplayContext.DynamicTextScheme.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityDisplayContext.DynamicTextScheme.NoneCodingKeys()
{
  return &type metadata for ActivityDisplayContext.DynamicTextScheme.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityDisplayContext.DynamicTextScheme.StaticCodingKeys()
{
  return &type metadata for ActivityDisplayContext.DynamicTextScheme.StaticCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityDisplayContext.DynamicTextScheme.CallCodingKeys()
{
  return &type metadata for ActivityDisplayContext.DynamicTextScheme.CallCodingKeys;
}

unsigned char *_s17proximitycontrold22ActivityDisplayContextV17DynamicTextSchemeO16StaticCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000FC364);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityDisplayContext.DynamicTextScheme.TimerCodingKeys()
{
  return &type metadata for ActivityDisplayContext.DynamicTextScheme.TimerCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ActivityDisplayContext.CallDisplayContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FC468);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityDisplayContext.CallDisplayContext.CodingKeys()
{
  return &type metadata for ActivityDisplayContext.CallDisplayContext.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ActivityDisplayContext.TimerDisplayContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FC56CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityDisplayContext.TimerDisplayContext.CodingKeys()
{
  return &type metadata for ActivityDisplayContext.TimerDisplayContext.CodingKeys;
}

unint64_t sub_1000FC5A8()
{
  unint64_t result = qword_100366168;
  if (!qword_100366168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366168);
  }
  return result;
}

unint64_t sub_1000FC600()
{
  unint64_t result = qword_100366170;
  if (!qword_100366170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366170);
  }
  return result;
}

unint64_t sub_1000FC658()
{
  unint64_t result = qword_100366178;
  if (!qword_100366178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366178);
  }
  return result;
}

unint64_t sub_1000FC6B0()
{
  unint64_t result = qword_100366180;
  if (!qword_100366180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366180);
  }
  return result;
}

unint64_t sub_1000FC708()
{
  unint64_t result = qword_100366188;
  if (!qword_100366188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366188);
  }
  return result;
}

unint64_t sub_1000FC760()
{
  unint64_t result = qword_100366190;
  if (!qword_100366190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366190);
  }
  return result;
}

unint64_t sub_1000FC7B8()
{
  unint64_t result = qword_100366198;
  if (!qword_100366198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366198);
  }
  return result;
}

unint64_t sub_1000FC810()
{
  unint64_t result = qword_1003661A0;
  if (!qword_1003661A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003661A0);
  }
  return result;
}

unint64_t sub_1000FC868()
{
  unint64_t result = qword_1003661A8;
  if (!qword_1003661A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003661A8);
  }
  return result;
}

unint64_t sub_1000FC8C0()
{
  unint64_t result = qword_1003661B0;
  if (!qword_1003661B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003661B0);
  }
  return result;
}

unint64_t sub_1000FC918()
{
  unint64_t result = qword_1003661B8;
  if (!qword_1003661B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003661B8);
  }
  return result;
}

unint64_t sub_1000FC970()
{
  unint64_t result = qword_1003661C0;
  if (!qword_1003661C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003661C0);
  }
  return result;
}

unint64_t sub_1000FC9C8()
{
  unint64_t result = qword_1003661C8;
  if (!qword_1003661C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003661C8);
  }
  return result;
}

unint64_t sub_1000FCA20()
{
  unint64_t result = qword_1003661D0;
  if (!qword_1003661D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003661D0);
  }
  return result;
}

unint64_t sub_1000FCA78()
{
  unint64_t result = qword_1003661D8;
  if (!qword_1003661D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003661D8);
  }
  return result;
}

unint64_t sub_1000FCAD0()
{
  unint64_t result = qword_1003661E0;
  if (!qword_1003661E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003661E0);
  }
  return result;
}

unint64_t sub_1000FCB28()
{
  unint64_t result = qword_1003661E8;
  if (!qword_1003661E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003661E8);
  }
  return result;
}

unint64_t sub_1000FCB80()
{
  unint64_t result = qword_1003661F0;
  if (!qword_1003661F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003661F0);
  }
  return result;
}

unint64_t sub_1000FCBD8()
{
  unint64_t result = qword_1003661F8;
  if (!qword_1003661F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003661F8);
  }
  return result;
}

unint64_t sub_1000FCC30()
{
  unint64_t result = qword_100366200;
  if (!qword_100366200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366200);
  }
  return result;
}

unint64_t sub_1000FCC88()
{
  unint64_t result = qword_100366208;
  if (!qword_100366208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366208);
  }
  return result;
}

unint64_t sub_1000FCCE0()
{
  unint64_t result = qword_100366210;
  if (!qword_100366210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366210);
  }
  return result;
}

unint64_t sub_1000FCD38()
{
  unint64_t result = qword_100366218;
  if (!qword_100366218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366218);
  }
  return result;
}

uint64_t sub_1000FCD8C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974697669746361 && a2 == 0xEC00000065707954;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7079547465737361 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x614E656369766564 && a2 == 0xEA0000000000656DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6461654864726163 && a2 == 0xEF6567616D497265 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001002BE4C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74786554746E6968 && a2 == 0xEE00656D65686353)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1000FD080(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636974617473 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1819042147 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x72656D6974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1000FD20C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461447472617473 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1000FD380(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574614465726966 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000FD48C(uint64_t a1)
{
  if (qword_10035A520 != -1) {
    swift_once();
  }
  id v2 = *(id *)(qword_1003AC750 + 704);
  uint64_t v3 = sub_1001008A8();
  uint64_t v5 = v4;

  if (v5)
  {
    _StringGuts.grow(_:)(35);
    swift_bridgeObjectRelease();
    v6._uint64_t countAndFlagsBits = v3;
    v6._unint64_t object = v5;
    String.append(_:)(v6);
    id v7 = sub_1001F5C9C();
    swift_bridgeObjectRetain();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v7 ulog:v8 message:0xD000000000000021, 0x80000001002BE4E0];
    swift_bridgeObjectRelease();
  }
  else if ((unint64_t)(a1 - 7) >= 2)
  {
    return 0x6D646F70656D6F68;
  }
  else
  {
    return 0x646F70656D6F68;
  }
  return v3;
}

_UNKNOWN **static PCActivityAssetType.allCases.getter()
{
  return &off_10031E118;
}

uint64_t PCActivityAssetType.description.getter(uint64_t a1)
{
  uint64_t v1 = sub_1000FD65C(a1);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

__CFString *sub_1000FD65C(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      uint64_t v1 = @"miniDark";
      goto LABEL_11;
    case 2:
      uint64_t v1 = @"miniLight";
      goto LABEL_11;
    case 3:
      uint64_t v1 = @"FPO_B";
      goto LABEL_11;
    case 4:
      uint64_t v1 = @"FPO_Y";
      goto LABEL_11;
    case 5:
      uint64_t v1 = @"FPO_O";
      goto LABEL_11;
    case 6:
      uint64_t v1 = @"miniBasalt";
      goto LABEL_11;
    case 7:
      uint64_t v1 = @"b620Dark";
      goto LABEL_11;
    case 8:
      uint64_t v1 = @"b620Light";
LABEL_11:
      uint64_t v2 = v1;
      break;
    default:
      uint64_t v1 = +[NSString stringWithFormat:@"? (%ld)", a1];
      break;
  }

  return v1;
}

unint64_t sub_1000FD76C()
{
  unint64_t result = qword_100366220;
  if (!qword_100366220)
  {
    sub_10000A3D0(&qword_100366228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366220);
  }
  return result;
}

void sub_1000FD7C8(void *a1@<X8>)
{
  *a1 = &off_10031E118;
}

uint64_t sub_1000FD7D8()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000FD868()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1000FD8E8()
{
  uint64_t v1 = sub_1000FD65C(*v0);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

uint64_t sub_1000FD938()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = *(void **)((char *)v0 + *(void *)(v2 + 0x70));
  if (v3)
  {
    unsigned int v4 = (uint64_t *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x68));
    uint64_t v6 = *v4;
    uint64_t v5 = (void *)v4[1];
    id v7 = v3;
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v7 objectForKey:v8];

    if (v9)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_100027B00(v42, v43);
      sub_100027B10((uint64_t)v43, (uint64_t)v42);
      if (swift_dynamicCast() && v41 != 2)
      {

        sub_10000CC5C((uint64_t)v43);
        return v41 & 1;
      }
      NSString v12 = String._bridgeToObjectiveC()();
      id v13 = [v7 stringForKey:v12];

      if (v13)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        char v14 = sub_100153BA8();
        if (v14 != 2)
        {
          char v32 = v14;
          sub_10000CC5C((uint64_t)v43);

          return v32 & 1;
        }
        *(void *)&v42[0] = 0;
        *((void *)&v42[0] + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(81);
        unint64_t v15 = 0xD00000000000004ELL;
        uint64_t v16 = "Failed to create value from stored UserDefault. Returning default value {key: ";
      }
      else
      {
        NSString v17 = String._bridgeToObjectiveC()();
        id v18 = [v7 dataForKey:v17];

        if (v18)
        {
          uint64_t v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v21 = v20;

          *(void *)&v42[0] = 0;
          *((void *)&v42[0] + 1) = 0xE000000000000000;
          _StringGuts.grow(_:)(81);
          v22._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
          v22._unint64_t object = (void *)0x80000001002BE570;
          String.append(_:)(v22);
          swift_bridgeObjectRetain();
          v23._uint64_t countAndFlagsBits = v6;
          v23._unint64_t object = v5;
          String.append(_:)(v23);
          swift_bridgeObjectRelease();
          v24._uint64_t countAndFlagsBits = 125;
          v24._unint64_t object = (void *)0xE100000000000000;
          String.append(_:)(v24);
          sub_10000C034();
          id v25 = objc_allocWithZone((Class)CULogHandle);
          NSString v26 = String._bridgeToObjectiveC()();
          NSString v27 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v28 = [v25 initWithSubsystem:v26 category:v27];

          swift_bridgeObjectRetain();
          NSString v29 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v28 ulog:90 message:v29];
          swift_bridgeObjectRelease();

          sub_10000DBEC(v19, v21);
          sub_10000CC5C((uint64_t)v43);
          uint64_t v30 = *v1;
          uint64_t v31 = swift_isaMask;
LABEL_18:
          uint64_t v11 = v31 & v30;
          return *((unsigned __int8 *)v1 + *(void *)(v11 + 96));
        }
        *(void *)&v42[0] = 0;
        *((void *)&v42[0] + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(93);
        unint64_t v15 = 0xD00000000000005ALL;
        uint64_t v16 = "Failed to cast value or get string from stored UserDefault. Returning default value {key: ";
      }
      unint64_t v33 = (unint64_t)(v16 - 32) | 0x8000000000000000;
      String.append(_:)(*(Swift::String *)&v15);
      swift_bridgeObjectRetain();
      v34._uint64_t countAndFlagsBits = v6;
      v34._unint64_t object = v5;
      String.append(_:)(v34);
      swift_bridgeObjectRelease();
      v35._uint64_t countAndFlagsBits = 125;
      v35._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v35);
      sub_10000C034();
      id v36 = objc_allocWithZone((Class)CULogHandle);
      NSString v37 = String._bridgeToObjectiveC()();
      NSString v38 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v39 = [v36 initWithSubsystem:v37 category:v38];

      swift_bridgeObjectRetain();
      NSString v40 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v39 ulog:90 message:v40];
      swift_bridgeObjectRelease();

      sub_10000CC5C((uint64_t)v43);
      uint64_t v30 = *v1;
      uint64_t v31 = swift_isaMask;
      goto LABEL_18;
    }

    uint64_t v2 = swift_isaMask & *v1;
  }
  uint64_t v11 = v2;
  return *((unsigned __int8 *)v1 + *(void *)(v11 + 96));
}

uint64_t sub_1000FDE78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000A38C(&qword_100366238);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  id v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v9 = (char *)&v59 - v8;
  uint64_t v10 = swift_isaMask & *v2;
  uint64_t v11 = *(void **)((char *)v2 + *(void *)(v10 + 0x70));
  if (!v11)
  {
LABEL_6:
    uint64_t v22 = (uint64_t)v2 + *(void *)(v10 + 96);
    uint64_t v23 = a1;
    return sub_1000B03BC(v22, v23);
  }
  NSString v12 = (void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x68));
  uint64_t v14 = *v12;
  id v13 = (void *)v12[1];
  id v15 = v11;
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v15 objectForKey:v16];

  if (!v17)
  {

    uint64_t v10 = swift_isaMask & *v2;
    goto LABEL_6;
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100027B00(v61, v62);
  sub_100027B10((uint64_t)v62, (uint64_t)v61);
  uint64_t v18 = sub_10000A38C(&qword_10035E158);
  char v19 = swift_dynamicCast();
  unint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  if (v19)
  {
    v20(v9, 0, 1, v18);

    sub_10000CC5C((uint64_t)v62);
    return sub_1000FB9DC((uint64_t)v9, a1);
  }
  uint64_t v24 = *(void *)(v18 - 8);
  v20(v9, 1, 1, v18);
  sub_10000D78C((uint64_t)v9, &qword_100366238);
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v15 stringForKey:v25];

  if (v26)
  {
    uint64_t v60 = a1;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v29 = v28;

    sub_10010367C(v27, v29, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v7, 1, v18) != 1)
    {
      sub_10000CC5C((uint64_t)v62);

      return sub_1000FB9DC((uint64_t)v7, v60);
    }
    sub_10000D78C((uint64_t)v7, &qword_100366238);
    *(void *)&v61[0] = 0;
    *((void *)&v61[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(81);
    v30._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
    v30._unint64_t object = (void *)0x80000001002BE570;
    String.append(_:)(v30);
    swift_bridgeObjectRetain();
    v31._uint64_t countAndFlagsBits = v14;
    v31._unint64_t object = v13;
    String.append(_:)(v31);
    swift_bridgeObjectRelease();
    v32._uint64_t countAndFlagsBits = 125;
    v32._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v32);
    sub_10000C020();
    id v33 = objc_allocWithZone((Class)CULogHandle);
    NSString v34 = String._bridgeToObjectiveC()();
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v36 = [v33 initWithSubsystem:v34 category:v35];

    swift_bridgeObjectRetain();
    NSString v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v36 ulog:90 message:v37];
    swift_bridgeObjectRelease();

    sub_10000CC5C((uint64_t)v62);
    uint64_t v22 = (uint64_t)v2 + *(void *)((swift_isaMask & *v2) + 0x60);
    uint64_t v23 = v60;
  }
  else
  {
    NSString v38 = String._bridgeToObjectiveC()();
    id v39 = [v15 dataForKey:v38];

    if (v39)
    {
      uint64_t v60 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v41 = v40;

      *(void *)&v61[0] = 0;
      *((void *)&v61[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(81);
      v42._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
      v42._unint64_t object = (void *)0x80000001002BE570;
      String.append(_:)(v42);
      swift_bridgeObjectRetain();
      v43._uint64_t countAndFlagsBits = v14;
      v43._unint64_t object = v13;
      String.append(_:)(v43);
      swift_bridgeObjectRelease();
      v44._uint64_t countAndFlagsBits = 125;
      v44._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v44);
      sub_10000C020();
      uint64_t v45 = a1;
      id v46 = objc_allocWithZone((Class)CULogHandle);
      NSString v47 = String._bridgeToObjectiveC()();
      NSString v48 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v49 = [v46 initWithSubsystem:v47 category:v48];

      swift_bridgeObjectRetain();
      NSString v50 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v49 ulog:90 message:v50];
      swift_bridgeObjectRelease();

      sub_10000DBEC(v60, v41);
      sub_10000CC5C((uint64_t)v62);
      uint64_t v22 = (uint64_t)v2 + *(void *)((swift_isaMask & *v2) + 0x60);
      uint64_t v23 = v45;
    }
    else
    {
      *(void *)&v61[0] = 0;
      *((void *)&v61[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      v51._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
      v51._unint64_t object = (void *)0x80000001002BE510;
      String.append(_:)(v51);
      swift_bridgeObjectRetain();
      v52._uint64_t countAndFlagsBits = v14;
      v52._unint64_t object = v13;
      String.append(_:)(v52);
      swift_bridgeObjectRelease();
      v53._uint64_t countAndFlagsBits = 125;
      v53._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v53);
      sub_10000C020();
      id v54 = objc_allocWithZone((Class)CULogHandle);
      NSString v55 = String._bridgeToObjectiveC()();
      NSString v56 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v57 = [v54 initWithSubsystem:v55 category:v56];

      swift_bridgeObjectRetain();
      NSString v58 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v57 ulog:90 message:v58];
      swift_bridgeObjectRelease();

      sub_10000CC5C((uint64_t)v62);
      uint64_t v22 = (uint64_t)v2 + *(void *)((swift_isaMask & *v2) + 0x60);
      uint64_t v23 = a1;
    }
  }
  return sub_1000B03BC(v22, v23);
}

uint64_t sub_1000FE668()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = *(void **)((char *)v0 + *(void *)(v2 + 0x70));
  if (!v3) {
    goto LABEL_6;
  }
  uint64_t v4 = (uint64_t *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x68));
  uint64_t v6 = *v4;
  uint64_t v5 = (void *)v4[1];
  id v7 = v3;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 objectForKey:v8];

  if (!v9)
  {

    uint64_t v2 = swift_isaMask & *v1;
LABEL_6:
    uint64_t v11 = v2;
    return *(uint64_t *)((char *)v1 + *(void *)(v11 + 96));
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100027B00(v46, v47);
  sub_100027B10((uint64_t)v47, (uint64_t)v46);
  if ((swift_dynamicCast() & 1) == 0)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v7 stringForKey:v13];

    if (v14)
    {
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v17 = v16;

      uint64_t v18 = sub_100153C80(v15, v17);
      if ((v19 & 1) == 0)
      {
        uint64_t v10 = v18;
        sub_10000CC5C((uint64_t)v47);

        return v10;
      }
      *(void *)&v46[0] = 0;
      *((void *)&v46[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(81);
      unint64_t v35 = 0xD00000000000004ELL;
      id v36 = "Failed to create value from stored UserDefault. Returning default value {key: ";
    }
    else
    {
      NSString v20 = String._bridgeToObjectiveC()();
      id v21 = [v7 dataForKey:v20];

      if (v21)
      {
        uint64_t v22 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v24 = v23;

        *(void *)&v46[0] = 0;
        *((void *)&v46[0] + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(81);
        v25._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
        v25._unint64_t object = (void *)0x80000001002BE570;
        String.append(_:)(v25);
        swift_bridgeObjectRetain();
        v26._uint64_t countAndFlagsBits = v6;
        v26._unint64_t object = v5;
        String.append(_:)(v26);
        swift_bridgeObjectRelease();
        v27._uint64_t countAndFlagsBits = 125;
        v27._unint64_t object = (void *)0xE100000000000000;
        String.append(_:)(v27);
        sub_10000C00C();
        id v28 = objc_allocWithZone((Class)CULogHandle);
        NSString v29 = String._bridgeToObjectiveC()();
        NSString v30 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v31 = [v28 initWithSubsystem:v29 category:v30];

        swift_bridgeObjectRetain();
        NSString v32 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v31 ulog:90 message:v32];
        swift_bridgeObjectRelease();

        sub_10000DBEC(v22, v24);
        sub_10000CC5C((uint64_t)v47);
        uint64_t v33 = *v1;
        uint64_t v34 = swift_isaMask;
LABEL_17:
        uint64_t v11 = v34 & v33;
        return *(uint64_t *)((char *)v1 + *(void *)(v11 + 96));
      }
      *(void *)&v46[0] = 0;
      *((void *)&v46[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      unint64_t v35 = 0xD00000000000005ALL;
      id v36 = "Failed to cast value or get string from stored UserDefault. Returning default value {key: ";
    }
    unint64_t v37 = (unint64_t)(v36 - 32) | 0x8000000000000000;
    String.append(_:)(*(Swift::String *)&v35);
    swift_bridgeObjectRetain();
    v38._uint64_t countAndFlagsBits = v6;
    v38._unint64_t object = v5;
    String.append(_:)(v38);
    swift_bridgeObjectRelease();
    v39._uint64_t countAndFlagsBits = 125;
    v39._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v39);
    sub_10000C00C();
    id v40 = objc_allocWithZone((Class)CULogHandle);
    NSString v41 = String._bridgeToObjectiveC()();
    NSString v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v43 = [v40 initWithSubsystem:v41 category:v42];

    swift_bridgeObjectRetain();
    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v43 ulog:90 message:v44];
    swift_bridgeObjectRelease();

    sub_10000CC5C((uint64_t)v47);
    uint64_t v33 = *v1;
    uint64_t v34 = swift_isaMask;
    goto LABEL_17;
  }

  sub_10000CC5C((uint64_t)v47);
  return v45;
}

double sub_1000FEB94()
{
  return sub_1000FEC24((uint64_t)&type metadata for Double, (uint64_t)sub_100103C80, (void (*)(uint64_t *__return_ptr))sub_100103C68, (void (*)(void))sub_10000C054);
}

double sub_1000FEBDC()
{
  return sub_1000FEC24((uint64_t)&type metadata for CGFloat, (uint64_t)sub_100103C80, (void (*)(uint64_t *__return_ptr))sub_100103C68, (void (*)(void))sub_10000C068);
}

double sub_1000FEC24(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr), void (*a4)(void))
{
  uint64_t v5 = v4;
  uint64_t v6 = swift_isaMask & *v4;
  id v7 = *(void **)((char *)v4 + *(void *)(v6 + 0x70));
  if (!v7) {
    goto LABEL_6;
  }
  uint64_t v10 = (void *)((char *)v4 + *(void *)((swift_isaMask & *v4) + 0x68));
  uint64_t v12 = *v10;
  uint64_t v11 = (void *)v10[1];
  id v13 = v7;
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 objectForKey:v14];

  if (!v15)
  {

    uint64_t v6 = swift_isaMask & *v5;
LABEL_6:
    uint64_t v17 = v6;
    return *(double *)((char *)v5 + *(void *)(v17 + 96));
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100027B00(v57, v58);
  sub_100027B10((uint64_t)v58, (uint64_t)v57);
  if ((swift_dynamicCast() & 1) == 0)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    id v20 = [v13 stringForKey:v19];

    if (v20)
    {
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v22;

      double v55 = 0.0;
      uint64_t v25 = __chkstk_darwin(v24);
      if ((v23 & 0x1000000000000000) != 0 || !(v23 & 0x2000000000000000 | v21 & 0x1000000000000000))
      {
        _StringGuts._slowWithCString<A>(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        v53[1] = v53;
        __chkstk_darwin(v25);
        if ((v23 & 0x2000000000000000) != 0)
        {
          *(void *)&v57[0] = v21;
          *((void *)&v57[0] + 1) = v23 & 0xFFFFFFFFFFFFFFLL;
          BOOL v42 = (v21 > 0x20u || ((0x100003E01uLL >> v21) & 1) == 0)
             && (NSString v41 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
             && *v41 == 0;
          char v54 = v42;
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v21 & 0x1000000000000000) != 0)
          {
            uint64_t v26 = (v23 & 0xFFFFFFFFFFFFFFFLL) + 32;
            uint64_t v27 = v21 & 0xFFFFFFFFFFFFLL;
          }
          else
          {
            uint64_t v26 = _StringObject.sharedUTF8.getter();
          }
          char v54 = sub_100103BDC(v26, v27, a3) & 1;
          swift_bridgeObjectRelease();
        }
      }
      if (v54)
      {
        double v16 = v55;
        sub_10000CC5C((uint64_t)v58);

        return v16;
      }
      *(void *)&v57[0] = 0;
      *((void *)&v57[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(81);
      unint64_t v43 = 0xD00000000000004ELL;
      NSString v44 = "Failed to create value from stored UserDefault. Returning default value {key: ";
    }
    else
    {
      NSString v28 = String._bridgeToObjectiveC()();
      id v29 = [v13 dataForKey:v28];

      if (v29)
      {
        uint64_t v30 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v32 = v31;

        *(void *)&v57[0] = 0;
        *((void *)&v57[0] + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(81);
        v33._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
        v33._unint64_t object = (void *)0x80000001002BE570;
        String.append(_:)(v33);
        swift_bridgeObjectRetain();
        v34._uint64_t countAndFlagsBits = v12;
        v34._unint64_t object = v11;
        String.append(_:)(v34);
        swift_bridgeObjectRelease();
        v35._uint64_t countAndFlagsBits = 125;
        v35._unint64_t object = (void *)0xE100000000000000;
        String.append(_:)(v35);
        a4();
        id v36 = objc_allocWithZone((Class)CULogHandle);
        NSString v37 = String._bridgeToObjectiveC()();
        NSString v38 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v39 = [v36 initWithSubsystem:v37 category:v38];

        swift_bridgeObjectRetain();
        NSString v40 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v39 ulog:90 message:v40];
        swift_bridgeObjectRelease();

        sub_10000DBEC(v30, v32);
LABEL_29:
        sub_10000CC5C((uint64_t)v58);
        uint64_t v17 = swift_isaMask & *v5;
        return *(double *)((char *)v5 + *(void *)(v17 + 96));
      }
      *(void *)&v57[0] = 0;
      *((void *)&v57[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      unint64_t v43 = 0xD00000000000005ALL;
      NSString v44 = "Failed to cast value or get string from stored UserDefault. Returning default value {key: ";
    }
    unint64_t v45 = (unint64_t)(v44 - 32) | 0x8000000000000000;
    String.append(_:)(*(Swift::String *)&v43);
    swift_bridgeObjectRetain();
    v46._uint64_t countAndFlagsBits = v12;
    v46._unint64_t object = v11;
    String.append(_:)(v46);
    swift_bridgeObjectRelease();
    v47._uint64_t countAndFlagsBits = 125;
    v47._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v47);
    a4();
    id v48 = objc_allocWithZone((Class)CULogHandle);
    NSString v49 = String._bridgeToObjectiveC()();
    NSString v50 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v51 = [v48 initWithSubsystem:v49 category:v50];

    swift_bridgeObjectRetain();
    NSString v52 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v51 ulog:90 message:v52];
    swift_bridgeObjectRelease();

    goto LABEL_29;
  }
  char v56 = 0;

  sub_10000CC5C((uint64_t)v58);
  return v55;
}

NSString sub_1000FF288()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = *(void **)((char *)v0 + *(void *)(v2 + 0x70));
  if (!v3) {
    goto LABEL_7;
  }
  uint64_t v4 = (void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x68));
  uint64_t v6 = *v4;
  uint64_t v5 = (void *)v4[1];
  id v7 = v3;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 objectForKey:v8];

  if (!v9)
  {

    uint64_t v2 = swift_isaMask & *v1;
LABEL_7:
    uint64_t v11 = v2;
LABEL_8:
    NSString v10 = *(NSString *)((char *)v1 + *(void *)(v11 + 96));
    id v12 = v10;
    return v10;
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100027B00(v38, v39);
  sub_100027B10((uint64_t)v39, (uint64_t)v38);
  sub_10000A38C(&qword_100366248);
  if (!swift_dynamicCast() || v37 == 1)
  {
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [v7 stringForKey:v14];

    if (v15)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_10000CC5C((uint64_t)v39);
      return v10;
    }
    NSString v16 = String._bridgeToObjectiveC()();
    id v17 = [v7 dataForKey:v16];

    if (v17)
    {
      uint64_t v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v36 = v19;

      *(void *)&v38[0] = 0;
      *((void *)&v38[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(81);
      v20._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
      v20._unint64_t object = (void *)0x80000001002BE570;
      String.append(_:)(v20);
      swift_bridgeObjectRetain();
      v21._uint64_t countAndFlagsBits = v6;
      v21._unint64_t object = v5;
      String.append(_:)(v21);
      swift_bridgeObjectRelease();
      v22._uint64_t countAndFlagsBits = 125;
      v22._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v22);
      sub_10000C07C();
      id v23 = objc_allocWithZone((Class)CULogHandle);
      NSString v24 = String._bridgeToObjectiveC()();
      NSString v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v26 = [v23 initWithSubsystem:v24 category:v25];

      swift_bridgeObjectRetain();
      NSString v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v26 ulog:90 message:v27];
      swift_bridgeObjectRelease();

      sub_10000DBEC(v18, v36);
    }
    else
    {
      *(void *)&v38[0] = 0;
      *((void *)&v38[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      v28._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
      v28._unint64_t object = (void *)0x80000001002BE510;
      String.append(_:)(v28);
      swift_bridgeObjectRetain();
      v29._uint64_t countAndFlagsBits = v6;
      v29._unint64_t object = v5;
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      v30._uint64_t countAndFlagsBits = 125;
      v30._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v30);
      sub_10000C07C();
      id v31 = objc_allocWithZone((Class)CULogHandle);
      NSString v32 = String._bridgeToObjectiveC()();
      NSString v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v34 = [v31 initWithSubsystem:v32 category:v33];

      swift_bridgeObjectRetain();
      NSString v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v34 ulog:90 message:v35];
      swift_bridgeObjectRelease();
    }
    sub_10000CC5C((uint64_t)v39);
    uint64_t v11 = swift_isaMask & *v1;
    goto LABEL_8;
  }

  sub_10000CC5C((uint64_t)v39);
  return (NSString)v37;
}

uint64_t sub_1000FF780()
{
  v0._rawValue = &off_10031D660;
  return sub_1000FFE44((uint64_t)&type metadata for HandoffExperienceType, v0, (void (*)(void))sub_10000C090);
}

float sub_1000FF7A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = *(void **)((char *)v0 + *(void *)(v2 + 0x70));
  if (!v3) {
    goto LABEL_6;
  }
  uint64_t v4 = (uint64_t *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x68));
  uint64_t v6 = *v4;
  uint64_t v5 = (void *)v4[1];
  id v7 = v3;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 objectForKey:v8];

  if (!v9)
  {

    uint64_t v2 = swift_isaMask & *v1;
LABEL_6:
    uint64_t v11 = v2;
    return *(float *)((char *)v1 + *(void *)(v11 + 96));
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100027B00(v51, v52);
  sub_100027B10((uint64_t)v52, (uint64_t)v51);
  if ((swift_dynamicCast() & 1) == 0)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v7 stringForKey:v13];

    if (!v14)
    {
      NSString v22 = String._bridgeToObjectiveC()();
      id v23 = [v7 dataForKey:v22];

      if (v23)
      {
        uint64_t v24 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v26 = v25;

        *(void *)&v51[0] = 0;
        *((void *)&v51[0] + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(81);
        v27._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
        v27._unint64_t object = (void *)0x80000001002BE570;
        String.append(_:)(v27);
        swift_bridgeObjectRetain();
        v28._uint64_t countAndFlagsBits = v6;
        v28._unint64_t object = v5;
        String.append(_:)(v28);
        swift_bridgeObjectRelease();
        v29._uint64_t countAndFlagsBits = 125;
        v29._unint64_t object = (void *)0xE100000000000000;
        String.append(_:)(v29);
        sub_10000C0A4();
        id v30 = objc_allocWithZone((Class)CULogHandle);
        NSString v31 = String._bridgeToObjectiveC()();
        NSString v32 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v33 = [v30 initWithSubsystem:v31 category:v32];

        swift_bridgeObjectRetain();
        NSString v34 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v33 ulog:90 message:v34];
        swift_bridgeObjectRelease();

        sub_10000DBEC(v24, v26);
        sub_10000CC5C((uint64_t)v52);
        uint64_t v35 = *v1;
        uint64_t v36 = swift_isaMask;
LABEL_30:
        uint64_t v11 = v36 & v35;
        return *(float *)((char *)v1 + *(void *)(v11 + 96));
      }
      *(void *)&v51[0] = 0;
      *((void *)&v51[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      unint64_t v39 = 0xD00000000000005ALL;
      NSString v40 = "Failed to cast value or get string from stored UserDefault. Returning default value {key: ";
LABEL_29:
      unint64_t v41 = (unint64_t)(v40 - 32) | 0x8000000000000000;
      String.append(_:)(*(Swift::String *)&v39);
      swift_bridgeObjectRetain();
      v42._uint64_t countAndFlagsBits = v6;
      v42._unint64_t object = v5;
      String.append(_:)(v42);
      swift_bridgeObjectRelease();
      v43._uint64_t countAndFlagsBits = 125;
      v43._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v43);
      sub_10000C0A4();
      id v44 = objc_allocWithZone((Class)CULogHandle);
      NSString v45 = String._bridgeToObjectiveC()();
      NSString v46 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v47 = [v44 initWithSubsystem:v45 category:v46];

      swift_bridgeObjectRetain();
      NSString v48 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v47 ulog:90 message:v48];
      swift_bridgeObjectRelease();

      sub_10000CC5C((uint64_t)v52);
      uint64_t v35 = *v1;
      uint64_t v36 = swift_isaMask;
      goto LABEL_30;
    }
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    uint64_t v19 = __chkstk_darwin(v18);
    if ((v17 & 0x1000000000000000) != 0 || !(v17 & 0x2000000000000000 | v15 & 0x1000000000000000))
    {
      _StringGuts._slowWithCString<A>(_:)();
    }
    else
    {
      __chkstk_darwin(v19);
      if ((v17 & 0x2000000000000000) != 0)
      {
        *(void *)&v51[0] = v15;
        *((void *)&v51[0] + 1) = v17 & 0xFFFFFFFFFFFFFFLL;
        BOOL v38 = (v15 > 0x20u || ((0x100003E01uLL >> v15) & 1) == 0)
           && (uint64_t v37 = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0
           && *v37 == 0;
        char v49 = v38;
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      if ((v15 & 0x1000000000000000) != 0)
      {
        uint64_t v20 = (v17 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v21 = v15 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v20 = _StringObject.sharedUTF8.getter();
      }
      char v49 = sub_100103BDC(v20, v21, (void (*)(uint64_t *__return_ptr))sub_100103C68) & 1;
    }
    swift_bridgeObjectRelease();
LABEL_25:
    if (v49)
    {
      float v10 = 0.0;
      sub_10000CC5C((uint64_t)v52);

      return v10;
    }
    *(void *)&v51[0] = 0;
    *((void *)&v51[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(81);
    unint64_t v39 = 0xD00000000000004ELL;
    NSString v40 = "Failed to create value from stored UserDefault. Returning default value {key: ";
    goto LABEL_29;
  }

  sub_10000CC5C((uint64_t)v52);
  return v50;
}

uint64_t sub_1000FFE1C()
{
  v0._rawValue = &off_10031D3E8;
  return sub_1000FFE44((uint64_t)&type metadata for Defaults.ContinueTrigger, v0, (void (*)(void))sub_10000C0B8);
}

uint64_t sub_1000FFE44(uint64_t a1, Swift::OpaquePointer a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v5 = swift_isaMask & *v3;
  uint64_t v6 = *(void **)((char *)v3 + *(void *)(v5 + 0x70));
  if (!v6) {
    goto LABEL_7;
  }
  id v9 = (uint64_t *)((char *)v3 + *(void *)((swift_isaMask & *v3) + 0x68));
  uint64_t v11 = *v9;
  float v10 = (void *)v9[1];
  id v12 = v6;
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 objectForKey:v13];

  if (!v14)
  {

    uint64_t v5 = swift_isaMask & *v4;
LABEL_7:
    uint64_t v16 = v5;
    return *((unsigned __int8 *)v4 + *(void *)(v16 + 96));
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100027B00(v51, v52);
  sub_100027B10((uint64_t)v52, (uint64_t)v51);
  if (!swift_dynamicCast() || v50 == 2)
  {
    NSString v18 = String._bridgeToObjectiveC()();
    id v19 = [v12 stringForKey:v18];

    if (v19)
    {
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v22 = v21;

      v23._uint64_t countAndFlagsBits = v20;
      v23._unint64_t object = v22;
      Swift::Int v24 = _findStringSwitchCase(cases:string:)(a2, v23);
      swift_bridgeObjectRelease();
      if (!v24)
      {
        uint64_t v15 = 0;
        goto LABEL_17;
      }
      if (v24 == 1)
      {
        uint64_t v15 = 1;
LABEL_17:
        sub_10000CC5C((uint64_t)v52);

        return v15;
      }
      *(void *)&v51[0] = 0;
      *((void *)&v51[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(81);
      unint64_t v40 = 0xD00000000000004ELL;
      unint64_t v41 = "Failed to create value from stored UserDefault. Returning default value {key: ";
    }
    else
    {
      NSString v25 = String._bridgeToObjectiveC()();
      id v26 = [v12 dataForKey:v25];

      if (v26)
      {
        uint64_t v27 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v29 = v28;

        *(void *)&v51[0] = 0;
        *((void *)&v51[0] + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(81);
        v30._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
        v30._unint64_t object = (void *)0x80000001002BE570;
        String.append(_:)(v30);
        swift_bridgeObjectRetain();
        v31._uint64_t countAndFlagsBits = v11;
        v31._unint64_t object = v10;
        String.append(_:)(v31);
        swift_bridgeObjectRelease();
        v32._uint64_t countAndFlagsBits = 125;
        v32._unint64_t object = (void *)0xE100000000000000;
        String.append(_:)(v32);
        a3();
        id v33 = objc_allocWithZone((Class)CULogHandle);
        NSString v34 = String._bridgeToObjectiveC()();
        NSString v35 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v36 = [v33 initWithSubsystem:v34 category:v35];

        swift_bridgeObjectRetain();
        NSString v37 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v36 ulog:90 message:v37];
        swift_bridgeObjectRelease();

        sub_10000DBEC(v27, v29);
        sub_10000CC5C((uint64_t)v52);
        uint64_t v38 = *v4;
        uint64_t v39 = swift_isaMask;
LABEL_21:
        uint64_t v16 = v39 & v38;
        return *((unsigned __int8 *)v4 + *(void *)(v16 + 96));
      }
      *(void *)&v51[0] = 0;
      *((void *)&v51[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      unint64_t v40 = 0xD00000000000005ALL;
      unint64_t v41 = "Failed to cast value or get string from stored UserDefault. Returning default value {key: ";
    }
    unint64_t v42 = (unint64_t)(v41 - 32) | 0x8000000000000000;
    String.append(_:)(*(Swift::String *)&v40);
    swift_bridgeObjectRetain();
    v43._uint64_t countAndFlagsBits = v11;
    v43._unint64_t object = v10;
    String.append(_:)(v43);
    swift_bridgeObjectRelease();
    v44._uint64_t countAndFlagsBits = 125;
    v44._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v44);
    a3();
    id v45 = objc_allocWithZone((Class)CULogHandle);
    NSString v46 = String._bridgeToObjectiveC()();
    NSString v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v48 = [v45 initWithSubsystem:v46 category:v47];

    swift_bridgeObjectRetain();
    NSString v49 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v48 ulog:90 message:v49];
    swift_bridgeObjectRelease();

    sub_10000CC5C((uint64_t)v52);
    uint64_t v38 = *v4;
    uint64_t v39 = swift_isaMask;
    goto LABEL_21;
  }

  sub_10000CC5C((uint64_t)v52);
  return v50 & 1;
}

uint64_t sub_1001003AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = *(void **)((char *)v0 + *(void *)(v2 + 0x70));
  if (!v3) {
    goto LABEL_6;
  }
  uint64_t v4 = (void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x68));
  uint64_t v6 = *v4;
  uint64_t v5 = (void *)v4[1];
  id v7 = v3;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 objectForKey:v8];

  if (!v9)
  {

    uint64_t v2 = swift_isaMask & *v1;
LABEL_6:
    uint64_t v11 = v2;
    return *(void *)((char *)v1 + *(void *)(v11 + 96));
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100027B00(v40, v41);
  sub_100027B10((uint64_t)v41, (uint64_t)v40);
  sub_10000A38C(&qword_100366230);
  if ((swift_dynamicCast() & 1) == 0)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v7 stringForKey:v13];

    if (v14)
    {
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v17 = v16;

      uint64_t v10 = sub_100153C80(v15, v17);
      sub_10000CC5C((uint64_t)v41);

      return v10;
    }
    NSString v18 = String._bridgeToObjectiveC()();
    id v19 = [v7 dataForKey:v18];

    if (v19)
    {
      uint64_t v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v38 = v21;

      *(void *)&v40[0] = 0;
      *((void *)&v40[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(81);
      v22._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
      v22._unint64_t object = (void *)0x80000001002BE570;
      String.append(_:)(v22);
      swift_bridgeObjectRetain();
      v23._uint64_t countAndFlagsBits = v6;
      v23._unint64_t object = v5;
      String.append(_:)(v23);
      swift_bridgeObjectRelease();
      v24._uint64_t countAndFlagsBits = 125;
      v24._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v24);
      sub_10000C0CC();
      id v25 = objc_allocWithZone((Class)CULogHandle);
      NSString v26 = String._bridgeToObjectiveC()();
      NSString v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v28 = [v25 initWithSubsystem:v26 category:v27];

      swift_bridgeObjectRetain();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v28 ulog:90 message:v29];
      swift_bridgeObjectRelease();

      sub_10000DBEC(v20, v38);
    }
    else
    {
      *(void *)&v40[0] = 0;
      *((void *)&v40[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      v30._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
      v30._unint64_t object = (void *)0x80000001002BE510;
      String.append(_:)(v30);
      swift_bridgeObjectRetain();
      v31._uint64_t countAndFlagsBits = v6;
      v31._unint64_t object = v5;
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      v32._uint64_t countAndFlagsBits = 125;
      v32._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v32);
      sub_10000C0CC();
      id v33 = objc_allocWithZone((Class)CULogHandle);
      NSString v34 = String._bridgeToObjectiveC()();
      NSString v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v36 = [v33 initWithSubsystem:v34 category:v35];

      swift_bridgeObjectRetain();
      NSString v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v36 ulog:90 message:v37];
      swift_bridgeObjectRelease();
    }
    sub_10000CC5C((uint64_t)v41);
    uint64_t v11 = swift_isaMask & *v1;
    return *(void *)((char *)v1 + *(void *)(v11 + 96));
  }

  sub_10000CC5C((uint64_t)v41);
  return v39;
}

uint64_t sub_1001008A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = *(void **)((char *)v0 + *(void *)(v2 + 0x70));
  if (!v3) {
    goto LABEL_6;
  }
  uint64_t v4 = (void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x68));
  uint64_t v6 = *v4;
  uint64_t v5 = (void *)v4[1];
  id v7 = v3;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 objectForKey:v8];

  if (!v9)
  {

    uint64_t v2 = swift_isaMask & *v1;
LABEL_6:
    uint64_t v11 = v2;
LABEL_7:
    uint64_t v10 = *(void *)((char *)v1 + *(void *)(v11 + 96));
    swift_bridgeObjectRetain();
    return v10;
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100027B00(v37, v38);
  sub_100027B10((uint64_t)v38, (uint64_t)v37);
  sub_10000A38C(&qword_10035F850);
  if ((swift_dynamicCast() & 1) == 0)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v7 stringForKey:v13];

    if (v14)
    {
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10000CC5C((uint64_t)v38);
      return v10;
    }
    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = [v7 dataForKey:v15];

    if (v16)
    {
      uint64_t v17 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v35 = v18;

      *(void *)&v37[0] = 0;
      *((void *)&v37[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(81);
      v19._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
      v19._unint64_t object = (void *)0x80000001002BE570;
      String.append(_:)(v19);
      swift_bridgeObjectRetain();
      v20._uint64_t countAndFlagsBits = v6;
      v20._unint64_t object = v5;
      String.append(_:)(v20);
      swift_bridgeObjectRelease();
      v21._uint64_t countAndFlagsBits = 125;
      v21._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v21);
      sub_10000C0E0();
      id v22 = objc_allocWithZone((Class)CULogHandle);
      NSString v23 = String._bridgeToObjectiveC()();
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v25 = [v22 initWithSubsystem:v23 category:v24];

      swift_bridgeObjectRetain();
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v25 ulog:90 message:v26];
      swift_bridgeObjectRelease();

      sub_10000DBEC(v17, v35);
    }
    else
    {
      *(void *)&v37[0] = 0;
      *((void *)&v37[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      v27._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
      v27._unint64_t object = (void *)0x80000001002BE510;
      String.append(_:)(v27);
      swift_bridgeObjectRetain();
      v28._uint64_t countAndFlagsBits = v6;
      v28._unint64_t object = v5;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      v29._uint64_t countAndFlagsBits = 125;
      v29._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v29);
      sub_10000C0E0();
      id v30 = objc_allocWithZone((Class)CULogHandle);
      NSString v31 = String._bridgeToObjectiveC()();
      NSString v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v33 = [v30 initWithSubsystem:v31 category:v32];

      swift_bridgeObjectRetain();
      NSString v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v33 ulog:90 message:v34];
      swift_bridgeObjectRelease();
    }
    sub_10000CC5C((uint64_t)v38);
    uint64_t v11 = swift_isaMask & *v1;
    goto LABEL_7;
  }

  sub_10000CC5C((uint64_t)v38);
  return v36;
}

uint64_t sub_100100D88()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = *(void **)((char *)v0 + *(void *)(v2 + 0x70));
  if (!v3) {
    goto LABEL_6;
  }
  uint64_t v4 = (void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x68));
  uint64_t v6 = *v4;
  uint64_t v5 = (void *)v4[1];
  id v7 = v3;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 objectForKey:v8];

  if (!v9)
  {

    uint64_t v2 = swift_isaMask & *v1;
LABEL_6:
    uint64_t v11 = v2;
    return *((unsigned __int8 *)v1 + *(void *)(v11 + 96));
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100027B00(v37, v38);
  sub_100027B10((uint64_t)v38, (uint64_t)v37);
  sub_10000A38C(&qword_100366250);
  if ((swift_dynamicCast() & 1) == 0)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v7 stringForKey:v13];

    if (v14)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v10 = sub_100153BA8();
      sub_10000CC5C((uint64_t)v38);

      return v10;
    }
    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = [v7 dataForKey:v15];

    if (v16)
    {
      uint64_t v17 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v35 = v18;

      *(void *)&v37[0] = 0;
      *((void *)&v37[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(81);
      v19._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
      v19._unint64_t object = (void *)0x80000001002BE570;
      String.append(_:)(v19);
      swift_bridgeObjectRetain();
      v20._uint64_t countAndFlagsBits = v6;
      v20._unint64_t object = v5;
      String.append(_:)(v20);
      swift_bridgeObjectRelease();
      v21._uint64_t countAndFlagsBits = 125;
      v21._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v21);
      sub_10000C0F4();
      id v22 = objc_allocWithZone((Class)CULogHandle);
      NSString v23 = String._bridgeToObjectiveC()();
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v25 = [v22 initWithSubsystem:v23 category:v24];

      swift_bridgeObjectRetain();
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v25 ulog:90 message:v26];
      swift_bridgeObjectRelease();

      sub_10000DBEC(v17, v35);
    }
    else
    {
      *(void *)&v37[0] = 0;
      *((void *)&v37[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      v27._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
      v27._unint64_t object = (void *)0x80000001002BE510;
      String.append(_:)(v27);
      swift_bridgeObjectRetain();
      v28._uint64_t countAndFlagsBits = v6;
      v28._unint64_t object = v5;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      v29._uint64_t countAndFlagsBits = 125;
      v29._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v29);
      sub_10000C0F4();
      id v30 = objc_allocWithZone((Class)CULogHandle);
      NSString v31 = String._bridgeToObjectiveC()();
      NSString v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v33 = [v30 initWithSubsystem:v31 category:v32];

      swift_bridgeObjectRetain();
      NSString v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v33 ulog:90 message:v34];
      swift_bridgeObjectRelease();
    }
    sub_10000CC5C((uint64_t)v38);
    uint64_t v11 = swift_isaMask & *v1;
    return *((unsigned __int8 *)v1 + *(void *)(v11 + 96));
  }

  sub_10000CC5C((uint64_t)v38);
  return v36;
}

uint64_t sub_100101268()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = *(void **)((char *)v0 + *(void *)(v2 + 0x70));
  if (!v3) {
    goto LABEL_6;
  }
  uint64_t v4 = (void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x68));
  uint64_t v6 = *v4;
  uint64_t v5 = (void *)v4[1];
  id v7 = v3;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 objectForKey:v8];

  if (!v9)
  {

    uint64_t v2 = swift_isaMask & *v1;
LABEL_6:
    uint64_t v11 = v2;
    return *((unsigned __int8 *)v1 + *(void *)(v11 + 96));
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100027B00(v43, v44);
  sub_100027B10((uint64_t)v44, (uint64_t)v43);
  sub_10000A38C(&qword_100366258);
  if (swift_dynamicCast())
  {

    sub_10000CC5C((uint64_t)v44);
    return v42;
  }
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v7 stringForKey:v13];

  if (!v14)
  {
    NSString v21 = String._bridgeToObjectiveC()();
    id v22 = [v7 dataForKey:v21];

    if (v22)
    {
      uint64_t v23 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v41 = v24;

      *(void *)&v43[0] = 0;
      *((void *)&v43[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(81);
      v25._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
      v25._unint64_t object = (void *)0x80000001002BE570;
      String.append(_:)(v25);
      swift_bridgeObjectRetain();
      v26._uint64_t countAndFlagsBits = v6;
      v26._unint64_t object = v5;
      String.append(_:)(v26);
      swift_bridgeObjectRelease();
      v27._uint64_t countAndFlagsBits = 125;
      v27._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v27);
      sub_10000C108();
      id v28 = objc_allocWithZone((Class)CULogHandle);
      NSString v29 = String._bridgeToObjectiveC()();
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v31 = [v28 initWithSubsystem:v29 category:v30];

      swift_bridgeObjectRetain();
      NSString v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v31 ulog:90 message:v32];
      swift_bridgeObjectRelease();

      sub_10000DBEC(v23, v41);
    }
    else
    {
      *(void *)&v43[0] = 0;
      *((void *)&v43[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      v33._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
      v33._unint64_t object = (void *)0x80000001002BE510;
      String.append(_:)(v33);
      swift_bridgeObjectRetain();
      v34._uint64_t countAndFlagsBits = v6;
      v34._unint64_t object = v5;
      String.append(_:)(v34);
      swift_bridgeObjectRelease();
      v35._uint64_t countAndFlagsBits = 125;
      v35._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v35);
      sub_10000C108();
      id v36 = objc_allocWithZone((Class)CULogHandle);
      NSString v37 = String._bridgeToObjectiveC()();
      NSString v38 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v39 = [v36 initWithSubsystem:v37 category:v38];

      swift_bridgeObjectRetain();
      NSString v40 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v39 ulog:90 message:v40];
      swift_bridgeObjectRelease();
    }
    sub_10000CC5C((uint64_t)v44);
    uint64_t v11 = swift_isaMask & *v1;
    return *((unsigned __int8 *)v1 + *(void *)(v11 + 96));
  }
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  v18._uint64_t countAndFlagsBits = v15;
  v18._unint64_t object = v17;
  Swift::Int v19 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10031D240, v18);
  swift_bridgeObjectRelease();
  if (v19 == 1) {
    unsigned int v20 = 1;
  }
  else {
    unsigned int v20 = 2;
  }
  if (v19) {
    uint64_t v10 = v20;
  }
  else {
    uint64_t v10 = 0;
  }
  sub_10000CC5C((uint64_t)v44);

  return v10;
}

unint64_t sub_10010176C()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = *(void **)((char *)v0 + *(void *)(v2 + 0x70));
  if (!v3) {
    goto LABEL_6;
  }
  uint64_t v4 = (uint64_t *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x68));
  uint64_t v6 = *v4;
  uint64_t v5 = (void *)v4[1];
  id v7 = v3;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 objectForKey:v8];

  if (!v9)
  {

    uint64_t v2 = swift_isaMask & *v1;
LABEL_6:
    uint64_t v11 = v2;
    return *((unsigned __int8 *)v1 + *(void *)(v11 + 96));
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100027B00(v45, v46);
  sub_100027B10((uint64_t)v46, (uint64_t)v45);
  if ((swift_dynamicCast() & 1) == 0)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v7 stringForKey:v13];

    if (v14)
    {
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      v47._uint64_t countAndFlagsBits = v15;
      v47._unint64_t object = v17;
      unint64_t v18 = sub_100047BEC(v47);
      if (v18 != 12)
      {
        unint64_t v10 = v18;
        sub_10000CC5C((uint64_t)v46);

        return v10;
      }
      *(void *)&v45[0] = 0;
      *((void *)&v45[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(81);
      unint64_t v19 = 0xD00000000000004ELL;
      unsigned int v20 = "Failed to create value from stored UserDefault. Returning default value {key: ";
    }
    else
    {
      NSString v21 = String._bridgeToObjectiveC()();
      id v22 = [v7 dataForKey:v21];

      if (v22)
      {
        uint64_t v23 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v25 = v24;

        *(void *)&v45[0] = 0;
        *((void *)&v45[0] + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(81);
        v26._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
        v26._unint64_t object = (void *)0x80000001002BE570;
        String.append(_:)(v26);
        swift_bridgeObjectRetain();
        v27._uint64_t countAndFlagsBits = v6;
        v27._unint64_t object = v5;
        String.append(_:)(v27);
        swift_bridgeObjectRelease();
        v28._uint64_t countAndFlagsBits = 125;
        v28._unint64_t object = (void *)0xE100000000000000;
        String.append(_:)(v28);
        sub_10000C2A4();
        id v29 = objc_allocWithZone((Class)CULogHandle);
        NSString v30 = String._bridgeToObjectiveC()();
        NSString v31 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v32 = [v29 initWithSubsystem:v30 category:v31];

        swift_bridgeObjectRetain();
        NSString v33 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v32 ulog:90 message:v33];
        swift_bridgeObjectRelease();

        sub_10000DBEC(v23, v25);
        sub_10000CC5C((uint64_t)v46);
        uint64_t v34 = *v1;
        uint64_t v35 = swift_isaMask;
LABEL_17:
        uint64_t v11 = v35 & v34;
        return *((unsigned __int8 *)v1 + *(void *)(v11 + 96));
      }
      *(void *)&v45[0] = 0;
      *((void *)&v45[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      unint64_t v19 = 0xD00000000000005ALL;
      unsigned int v20 = "Failed to cast value or get string from stored UserDefault. Returning default value {key: ";
    }
    unint64_t v36 = (unint64_t)(v20 - 32) | 0x8000000000000000;
    String.append(_:)(*(Swift::String *)&v19);
    swift_bridgeObjectRetain();
    v37._uint64_t countAndFlagsBits = v6;
    v37._unint64_t object = v5;
    String.append(_:)(v37);
    swift_bridgeObjectRelease();
    v38._uint64_t countAndFlagsBits = 125;
    v38._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v38);
    sub_10000C2A4();
    id v39 = objc_allocWithZone((Class)CULogHandle);
    NSString v40 = String._bridgeToObjectiveC()();
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v42 = [v39 initWithSubsystem:v40 category:v41];

    swift_bridgeObjectRetain();
    NSString v43 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v42 ulog:90 message:v43];
    swift_bridgeObjectRelease();

    sub_10000CC5C((uint64_t)v46);
    uint64_t v34 = *v1;
    uint64_t v35 = swift_isaMask;
    goto LABEL_17;
  }

  sub_10000CC5C((uint64_t)v46);
  return v44;
}

uint64_t sub_100101C9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = *(void **)((char *)v0 + *(void *)(v2 + 0x70));
  if (!v3) {
    goto LABEL_6;
  }
  uint64_t v4 = (uint64_t *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x68));
  uint64_t v6 = *v4;
  uint64_t v5 = (void *)v4[1];
  id v7 = v3;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 objectForKey:v8];

  if (!v9)
  {

    uint64_t v2 = swift_isaMask & *v1;
LABEL_6:
    uint64_t v11 = v2;
    return *((unsigned __int8 *)v1 + *(void *)(v11 + 96));
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100027B00(v46, v47);
  sub_100027B10((uint64_t)v47, (uint64_t)v46);
  if ((swift_dynamicCast() & 1) == 0)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v7 stringForKey:v13];

    if (v14)
    {
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      v18._uint64_t countAndFlagsBits = v15;
      v18._unint64_t object = v17;
      Swift::Int v19 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10031E8F8, v18);
      swift_bridgeObjectRelease();
      if (!v19)
      {
        uint64_t v10 = 0;
        goto LABEL_16;
      }
      if (v19 == 1)
      {
        uint64_t v10 = 1;
LABEL_16:
        sub_10000CC5C((uint64_t)v47);

        return v10;
      }
      *(void *)&v46[0] = 0;
      *((void *)&v46[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(81);
      unint64_t v35 = 0xD00000000000004ELL;
      unint64_t v36 = "Failed to create value from stored UserDefault. Returning default value {key: ";
    }
    else
    {
      NSString v20 = String._bridgeToObjectiveC()();
      id v21 = [v7 dataForKey:v20];

      if (v21)
      {
        uint64_t v22 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v24 = v23;

        *(void *)&v46[0] = 0;
        *((void *)&v46[0] + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(81);
        v25._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
        v25._unint64_t object = (void *)0x80000001002BE570;
        String.append(_:)(v25);
        swift_bridgeObjectRetain();
        v26._uint64_t countAndFlagsBits = v6;
        v26._unint64_t object = v5;
        String.append(_:)(v26);
        swift_bridgeObjectRelease();
        v27._uint64_t countAndFlagsBits = 125;
        v27._unint64_t object = (void *)0xE100000000000000;
        String.append(_:)(v27);
        sub_10000C45C();
        id v28 = objc_allocWithZone((Class)CULogHandle);
        NSString v29 = String._bridgeToObjectiveC()();
        NSString v30 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v31 = [v28 initWithSubsystem:v29 category:v30];

        swift_bridgeObjectRetain();
        NSString v32 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v31 ulog:90 message:v32];
        swift_bridgeObjectRelease();

        sub_10000DBEC(v22, v24);
        sub_10000CC5C((uint64_t)v47);
        uint64_t v33 = *v1;
        uint64_t v34 = swift_isaMask;
LABEL_20:
        uint64_t v11 = v34 & v33;
        return *((unsigned __int8 *)v1 + *(void *)(v11 + 96));
      }
      *(void *)&v46[0] = 0;
      *((void *)&v46[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      unint64_t v35 = 0xD00000000000005ALL;
      unint64_t v36 = "Failed to cast value or get string from stored UserDefault. Returning default value {key: ";
    }
    unint64_t v37 = (unint64_t)(v36 - 32) | 0x8000000000000000;
    String.append(_:)(*(Swift::String *)&v35);
    swift_bridgeObjectRetain();
    v38._uint64_t countAndFlagsBits = v6;
    v38._unint64_t object = v5;
    String.append(_:)(v38);
    swift_bridgeObjectRelease();
    v39._uint64_t countAndFlagsBits = 125;
    v39._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v39);
    sub_10000C45C();
    id v40 = objc_allocWithZone((Class)CULogHandle);
    NSString v41 = String._bridgeToObjectiveC()();
    NSString v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v43 = [v40 initWithSubsystem:v41 category:v42];

    swift_bridgeObjectRetain();
    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v43 ulog:90 message:v44];
    swift_bridgeObjectRelease();

    sub_10000CC5C((uint64_t)v47);
    uint64_t v33 = *v1;
    uint64_t v34 = swift_isaMask;
    goto LABEL_20;
  }

  sub_10000CC5C((uint64_t)v47);
  return v45 & 1;
}

uint64_t sub_1001021EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = *(void **)((char *)v0 + *(void *)(v2 + 0x70));
  if (!v3) {
    goto LABEL_6;
  }
  uint64_t v4 = (void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x68));
  uint64_t v6 = *v4;
  uint64_t v5 = (void *)v4[1];
  id v7 = v3;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 objectForKey:v8];

  if (!v9)
  {

    uint64_t v2 = swift_isaMask & *v1;
LABEL_6:
    uint64_t v11 = v2;
LABEL_10:
    uint64_t v10 = *(void *)((char *)v1 + *(void *)(v11 + 96));
    swift_bridgeObjectRetain();
    return v10;
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100027B00(v31, v32);
  sub_100027B10((uint64_t)v32, (uint64_t)v31);
  sub_10000A38C(&qword_100366260);
  if ((swift_dynamicCast() & 1) == 0)
  {
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v7 stringForKey:v12];

    if (v13)
    {

      *(void *)&v31[0] = 0;
      *((void *)&v31[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(81);
      unint64_t v14 = 0xD00000000000004ELL;
      uint64_t v15 = "Failed to create value from stored UserDefault. Returning default value {key: ";
    }
    else
    {
      NSString v25 = String._bridgeToObjectiveC()();
      id v26 = [v7 dataForKey:v25];

      if (v26)
      {
        uint64_t v27 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v29 = v28;

        type metadata accessor for JSONDecoder();
        swift_allocObject();
        sub_10001F8BC(v27, v29);
        JSONDecoder.init()();
        sub_100103D68();
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        sub_10000DBEC(v27, v29);
        swift_release();
        uint64_t v10 = *(void *)&v31[0];
        sub_10000CC5C((uint64_t)v32);

        sub_10000DBEC(v27, v29);
        return v10;
      }
      *(void *)&v31[0] = 0;
      *((void *)&v31[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      unint64_t v14 = 0xD00000000000005ALL;
      uint64_t v15 = "Failed to cast value or get string from stored UserDefault. Returning default value {key: ";
    }
    unint64_t v16 = (unint64_t)(v15 - 32) | 0x8000000000000000;
    String.append(_:)(*(Swift::String *)&v14);
    swift_bridgeObjectRetain();
    v17._uint64_t countAndFlagsBits = v6;
    v17._unint64_t object = v5;
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    v18._uint64_t countAndFlagsBits = 125;
    v18._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v18);
    sub_10000C470();
    id v19 = objc_allocWithZone((Class)CULogHandle);
    NSString v20 = String._bridgeToObjectiveC()();
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v22 = [v19 initWithSubsystem:v20 category:v21];

    swift_bridgeObjectRetain();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v22 ulog:90 message:v23];
    swift_bridgeObjectRelease();

    sub_10000CC5C((uint64_t)v32);
    uint64_t v11 = swift_isaMask & *v1;
    goto LABEL_10;
  }

  sub_10000CC5C((uint64_t)v32);
  return v30;
}

unint64_t sub_10010277C()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = *(void **)((char *)v0 + *(void *)(v2 + 0x70));
  if (!v3) {
    goto LABEL_6;
  }
  uint64_t v4 = (uint64_t *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x68));
  uint64_t v6 = *v4;
  uint64_t v5 = (void *)v4[1];
  id v7 = v3;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 objectForKey:v8];

  if (!v9)
  {

    uint64_t v2 = swift_isaMask & *v1;
LABEL_6:
    uint64_t v11 = v2;
    return *((unsigned __int8 *)v1 + *(void *)(v11 + 96));
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100027B00(v45, v46);
  sub_100027B10((uint64_t)v46, (uint64_t)v45);
  if ((swift_dynamicCast() & 1) == 0)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v7 stringForKey:v13];

    if (v14)
    {
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      Swift::String v17 = v16;

      v47._uint64_t countAndFlagsBits = v15;
      v47._unint64_t object = v17;
      unint64_t v18 = sub_1000B0490(v47);
      if (v18 != 5)
      {
        unint64_t v10 = v18;
        sub_10000CC5C((uint64_t)v46);

        return v10;
      }
      *(void *)&v45[0] = 0;
      *((void *)&v45[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(81);
      unint64_t v19 = 0xD00000000000004ELL;
      NSString v20 = "Failed to create value from stored UserDefault. Returning default value {key: ";
    }
    else
    {
      NSString v21 = String._bridgeToObjectiveC()();
      id v22 = [v7 dataForKey:v21];

      if (v22)
      {
        uint64_t v23 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v25 = v24;

        *(void *)&v45[0] = 0;
        *((void *)&v45[0] + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(81);
        v26._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
        v26._unint64_t object = (void *)0x80000001002BE570;
        String.append(_:)(v26);
        swift_bridgeObjectRetain();
        v27._uint64_t countAndFlagsBits = v6;
        v27._unint64_t object = v5;
        String.append(_:)(v27);
        swift_bridgeObjectRelease();
        v28._uint64_t countAndFlagsBits = 125;
        v28._unint64_t object = (void *)0xE100000000000000;
        String.append(_:)(v28);
        sub_10000C484();
        id v29 = objc_allocWithZone((Class)CULogHandle);
        NSString v30 = String._bridgeToObjectiveC()();
        NSString v31 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v32 = [v29 initWithSubsystem:v30 category:v31];

        swift_bridgeObjectRetain();
        NSString v33 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v32 ulog:90 message:v33];
        swift_bridgeObjectRelease();

        sub_10000DBEC(v23, v25);
        sub_10000CC5C((uint64_t)v46);
        uint64_t v34 = *v1;
        uint64_t v35 = swift_isaMask;
LABEL_17:
        uint64_t v11 = v35 & v34;
        return *((unsigned __int8 *)v1 + *(void *)(v11 + 96));
      }
      *(void *)&v45[0] = 0;
      *((void *)&v45[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      unint64_t v19 = 0xD00000000000005ALL;
      NSString v20 = "Failed to cast value or get string from stored UserDefault. Returning default value {key: ";
    }
    unint64_t v36 = (unint64_t)(v20 - 32) | 0x8000000000000000;
    String.append(_:)(*(Swift::String *)&v19);
    swift_bridgeObjectRetain();
    v37._uint64_t countAndFlagsBits = v6;
    v37._unint64_t object = v5;
    String.append(_:)(v37);
    swift_bridgeObjectRelease();
    v38._uint64_t countAndFlagsBits = 125;
    v38._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v38);
    sub_10000C484();
    id v39 = objc_allocWithZone((Class)CULogHandle);
    NSString v40 = String._bridgeToObjectiveC()();
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v42 = [v39 initWithSubsystem:v40 category:v41];

    swift_bridgeObjectRetain();
    NSString v43 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v42 ulog:90 message:v43];
    swift_bridgeObjectRelease();

    sub_10000CC5C((uint64_t)v46);
    uint64_t v34 = *v1;
    uint64_t v35 = swift_isaMask;
    goto LABEL_17;
  }

  sub_10000CC5C((uint64_t)v46);
  return v44;
}

unint64_t sub_100102CAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = *(void **)((char *)v0 + *(void *)(v2 + 0x70));
  if (!v3) {
    goto LABEL_6;
  }
  uint64_t v4 = (void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x68));
  uint64_t v6 = *v4;
  uint64_t v5 = (void *)v4[1];
  id v7 = v3;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 objectForKey:v8];

  if (!v9)
  {

    uint64_t v2 = swift_isaMask & *v1;
LABEL_6:
    uint64_t v11 = v2;
    return *((unsigned __int8 *)v1 + *(void *)(v11 + 96));
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100027B00(v42, v43);
  sub_100027B10((uint64_t)v43, (uint64_t)v42);
  sub_10000A38C(&qword_10035AC68);
  if (swift_dynamicCast())
  {

    sub_10000CC5C((uint64_t)v43);
    return v41;
  }
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v7 stringForKey:v13];

  if (!v14)
  {
    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = [v7 dataForKey:v20];

    if (v21)
    {
      uint64_t v22 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v40 = v23;

      *(void *)&v42[0] = 0;
      *((void *)&v42[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(81);
      v24._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
      v24._unint64_t object = (void *)0x80000001002BE570;
      String.append(_:)(v24);
      swift_bridgeObjectRetain();
      v25._uint64_t countAndFlagsBits = v6;
      v25._unint64_t object = v5;
      String.append(_:)(v25);
      swift_bridgeObjectRelease();
      v26._uint64_t countAndFlagsBits = 125;
      v26._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v26);
      sub_10000C498();
      id v27 = objc_allocWithZone((Class)CULogHandle);
      NSString v28 = String._bridgeToObjectiveC()();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v30 = [v27 initWithSubsystem:v28 category:v29];

      swift_bridgeObjectRetain();
      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v30 ulog:90 message:v31];
      swift_bridgeObjectRelease();

      sub_10000DBEC(v22, v40);
    }
    else
    {
      *(void *)&v42[0] = 0;
      *((void *)&v42[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      v32._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
      v32._unint64_t object = (void *)0x80000001002BE510;
      String.append(_:)(v32);
      swift_bridgeObjectRetain();
      v33._uint64_t countAndFlagsBits = v6;
      v33._unint64_t object = v5;
      String.append(_:)(v33);
      swift_bridgeObjectRelease();
      v34._uint64_t countAndFlagsBits = 125;
      v34._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v34);
      sub_10000C498();
      id v35 = objc_allocWithZone((Class)CULogHandle);
      NSString v36 = String._bridgeToObjectiveC()();
      NSString v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v38 = [v35 initWithSubsystem:v36 category:v37];

      swift_bridgeObjectRetain();
      NSString v39 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v38 ulog:90 message:v39];
      swift_bridgeObjectRelease();
    }
    sub_10000CC5C((uint64_t)v43);
    uint64_t v11 = swift_isaMask & *v1;
    return *((unsigned __int8 *)v1 + *(void *)(v11 + 96));
  }
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v17 = v16;

  unint64_t v18 = sub_100153C80(v15, v17);
  if ((v19 & 1) != 0 || (unint64_t v10 = sub_1000B342C(v18), v10 == 5)) {
    unint64_t v10 = 5;
  }
  sub_10000CC5C((uint64_t)v43);

  return v10;
}

uint64_t sub_1001031A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = *(void **)((char *)v0 + *(void *)(v2 + 0x70));
  if (!v3) {
    goto LABEL_6;
  }
  uint64_t v4 = (void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x68));
  uint64_t v6 = *v4;
  uint64_t v5 = (void *)v4[1];
  id v7 = v3;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 objectForKey:v8];

  if (!v9)
  {

    uint64_t v2 = swift_isaMask & *v1;
LABEL_6:
    uint64_t v11 = v2;
LABEL_7:
    uint64_t v10 = *(void *)((char *)v1 + *(void *)(v11 + 96));
    swift_bridgeObjectRetain();
    return v10;
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100027B00(v37, v38);
  sub_100027B10((uint64_t)v38, (uint64_t)v37);
  if ((swift_dynamicCast() & 1) == 0)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v7 stringForKey:v13];

    if (v14)
    {
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10000CC5C((uint64_t)v38);
      return v10;
    }
    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = [v7 dataForKey:v15];

    if (v16)
    {
      uint64_t v17 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v35 = v18;

      *(void *)&v37[0] = 0;
      *((void *)&v37[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(81);
      v19._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
      v19._unint64_t object = (void *)0x80000001002BE570;
      String.append(_:)(v19);
      swift_bridgeObjectRetain();
      v20._uint64_t countAndFlagsBits = v6;
      v20._unint64_t object = v5;
      String.append(_:)(v20);
      swift_bridgeObjectRelease();
      v21._uint64_t countAndFlagsBits = 125;
      v21._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v21);
      sub_10000C4AC();
      id v22 = objc_allocWithZone((Class)CULogHandle);
      NSString v23 = String._bridgeToObjectiveC()();
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v25 = [v22 initWithSubsystem:v23 category:v24];

      swift_bridgeObjectRetain();
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v25 ulog:90 message:v26];
      swift_bridgeObjectRelease();

      sub_10000DBEC(v17, v35);
    }
    else
    {
      *(void *)&v37[0] = 0;
      *((void *)&v37[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      v27._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
      v27._unint64_t object = (void *)0x80000001002BE510;
      String.append(_:)(v27);
      swift_bridgeObjectRetain();
      v28._uint64_t countAndFlagsBits = v6;
      v28._unint64_t object = v5;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      v29._uint64_t countAndFlagsBits = 125;
      v29._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v29);
      sub_10000C4AC();
      id v30 = objc_allocWithZone((Class)CULogHandle);
      NSString v31 = String._bridgeToObjectiveC()();
      NSString v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v33 = [v30 initWithSubsystem:v31 category:v32];

      swift_bridgeObjectRetain();
      NSString v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v33 ulog:90 message:v34];
      swift_bridgeObjectRelease();
    }
    sub_10000CC5C((uint64_t)v38);
    uint64_t v11 = swift_isaMask & *v1;
    goto LABEL_7;
  }

  sub_10000CC5C((uint64_t)v38);
  return v36;
}

uint64_t sub_10010367C@<X0>(uint64_t a1@<X0>, void (*a2)(void, void, void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a3;
  Swift::String v27 = a2;
  uint64_t v4 = type metadata accessor for Date.ISO8601FormatStyle();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v25 = sub_10000A38C(&qword_10035E158);
  uint64_t v12 = *(void *)(v25 - 8);
  uint64_t v13 = __chkstk_darwin(v25);
  NSString v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v25 - v16;
  uint64_t v28 = a1;
  Swift::String v29 = v27;
  static ParseStrategy<>.iso8601.getter();
  sub_100103DDC(&qword_100366240, (void (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle);
  Date.init<A>(_:strategy:)();
  Swift::String v27 = *(void (**)(void, void, void))(v6 + 32);
  v27(v15, v9, v5);
  unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v18(v15, 0, 1, v5);
  int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5);
  uint64_t v21 = v25;
  uint64_t v20 = v26;
  if (v19 == 1)
  {
    sub_10000D78C((uint64_t)v15, &qword_10035E158);
    v18(v17, 1, 1, v5);
  }
  else
  {
    id v22 = v15;
    NSString v23 = (void (*)(char *, char *, uint64_t))v27;
    v27(v11, v22, v5);
    v23(v17, v11, v5);
    v18(v17, 0, 1, v5);
  }
  sub_1000FB9DC((uint64_t)v17, v20);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v21);
}

unsigned char *sub_1001039FC@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_100103A54(a1, (uint64_t (*)(void))&__swift_stdlib_strtod_clocale, a2);
}

unsigned char *sub_100103A28@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_100103A54(a1, (uint64_t (*)(void))&__swift_stdlib_strtof_clocale, a2);
}

unsigned char *sub_100103A54@<X0>(unsigned char *result@<X0>, uint64_t (*a2)(void)@<X2>, BOOL *a3@<X8>)
{
  unsigned int v4 = *result;
  BOOL v5 = v4 > 0x20;
  uint64_t v6 = (1 << v4) & 0x100003E01;
  BOOL v7 = v5 || v6 == 0;
  v8 = v7 && (unint64_t result = (unsigned char *)a2()) != 0 && *result == 0;
  *a3 = v8;
  return result;
}

uint64_t sub_100103AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *(*v7)(uint64_t *__return_ptr, void *);
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  void v12[2];
  uint64_t v13;

  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    uint64_t v10 = _StringGuts._slowWithCString<A>(_:)();
    if (!v4) {
      uint64_t v10 = BYTE1(v13);
    }
  }
  else
  {
    __chkstk_darwin(a1);
    if ((v6 & 0x2000000000000000) != 0)
    {
      v12[0] = v5;
      v12[1] = v6 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v10 = v7(&v13, v12);
      if (!v4) {
        uint64_t v10 = v13;
      }
    }
    else
    {
      if ((v5 & 0x1000000000000000) != 0)
      {
        BOOL v8 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
        id v9 = v5 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        BOOL v8 = _StringObject.sharedUTF8.getter();
      }
      uint64_t v10 = sub_100103BDC(v8, v9, (void (*)(uint64_t *__return_ptr))sub_100103C68);
    }
  }
  return v10 & 1;
}

uint64_t sub_100103BDC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

unsigned char *sub_100103C3C@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_100103CAC(a1, (uint64_t (*)(void))&__swift_stdlib_strtof_clocale, a2);
}

void *sub_100103C68@<X0>(unsigned char *a1@<X8>)
{
  return sub_100103D24(a1);
}

unsigned char *sub_100103C80@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_100103CAC(a1, (uint64_t (*)(void))&__swift_stdlib_strtod_clocale, a2);
}

unsigned char *sub_100103CAC@<X0>(unsigned char *result@<X0>, uint64_t (*a2)(void)@<X1>, BOOL *a3@<X8>)
{
  unsigned int v4 = *result;
  BOOL v5 = v4 > 0x20;
  uint64_t v6 = (1 << v4) & 0x100003E01;
  BOOL v7 = v5 || v6 == 0;
  v8 = v7 && (unint64_t result = (unsigned char *)a2()) != 0 && *result == 0;
  *a3 = v8;
  return result;
}

void *sub_100103D24@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

unint64_t sub_100103D68()
{
  unint64_t result = qword_100366268;
  if (!qword_100366268)
  {
    sub_10000A3D0(&qword_100366260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366268);
  }
  return result;
}

uint64_t sub_100103DDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LEDState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100103EF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LEDState()
{
  return &type metadata for LEDState;
}

uint64_t sub_100103F28(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10005C7CC(*a1, *a2);
}

Swift::Int sub_100103F34()
{
  return Hasher._finalize()();
}

uint64_t sub_100103FC4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100104040()
{
  return Hasher._finalize()();
}

unint64_t sub_1001040CC@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100104250(*a1);
  *a2 = result;
  return result;
}

void sub_1001040FC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 2003790951;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6D6F6F6C62;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701602409;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_100104148()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1001041A8()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_1001041FC()
{
  unint64_t result = qword_100366278;
  if (!qword_100366278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366278);
  }
  return result;
}

unint64_t sub_100104250(Swift::String string)
{
  unint64_t object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._unint64_t object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10031E180, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

unint64_t sub_10010429C()
{
  unint64_t result = qword_100366280;
  if (!qword_100366280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366280);
  }
  return result;
}

uint64_t sub_1001042F0(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 4;
      do
      {
        uint64_t v4 = v3 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v5 = *(void *)(a1 + 8 * v3);
          swift_retain();
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_13:
            __break(1u);
            goto LABEL_14;
          }
        }
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        char v7 = sub_10009CFA4(v9);
        swift_release();
        if (v7)
        {
          swift_release();
          swift_bridgeObjectRelease();
          return v5;
        }
        swift_release();
        ++v3;
      }
      while (v6 != v2);
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10010448C(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      uint64_t v20 = v3;
      unint64_t v21 = v2;
      unint64_t v22 = v2 & 0xC000000000000001;
      uint64_t v4 = 4;
      uint64_t v5 = (SEL *)&unk_100356000;
      do
      {
        uint64_t v6 = v4 - 4;
        if (v22)
        {
          uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v8 = v4 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_23;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(v2 + 8 * v4);
          swift_retain();
          uint64_t v8 = v4 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
        }
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        swift_release();
        id v9 = v24;
        if (v24)
        {
          id v10 = [v24 v5[332]];

          uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v9 = v12;
        }
        else
        {
          uint64_t v11 = 0;
        }
        uint64_t v13 = v5;
        id v14 = [a2 v5[332]];
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v17 = v16;

        if (v9)
        {
          if (v11 == v15 && v9 == v17)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_22:
            swift_bridgeObjectRelease();
            return v7;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v18)
          {

            goto LABEL_22;
          }
          swift_release();
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
        }
        unint64_t v2 = v21;
        ++v4;
        uint64_t v5 = v13;
      }
      while (v8 != v20);
    }
  }

  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100104750(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v7 = 4;
      do
      {
        uint64_t v8 = v7 - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = v7 - 3;
          if (v10) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v9 = *(void *)(a3 + 8 * v7);
          swift_retain();
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = v7 - 3;
          if (v10)
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        uint64_t v14 = v9;
        char v12 = a1(&v14);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return v9;
        }
        if (v12)
        {
          swift_bridgeObjectRelease();
          return v9;
        }
        swift_release();
        ++v7;
      }
      while (v11 != v6);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_10010488C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    unint64_t result = _swiftEmptyArrayStorage;
    if (!v2) {
      break;
    }
    unint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v5 = *(void *)(a1 + 8 * v4 + 32);
        swift_retain();
      }
      ++v4;
      swift_beginAccess();
      id v6 = *(id *)(v5 + 32);
      swift_release();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v2 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

double sub_1001049E0@<D0>(uint64_t a1@<X8>)
{
  return sub_10010E334(a1);
}

uint64_t sub_1001049F4()
{
  return sub_10010E3CC();
}

uint64_t sub_100104A08(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    BOOL v10 = (Swift::Int *)(*(void *)(v1 + 48) + 16 * v9);
    Swift::Int v11 = *v10;
    Swift::Int v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_1000301DC(&v16, v11, v12);
    unint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_100104B88()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    sub_10000A38C((uint64_t *)&unk_10036BFE0);
    swift_allocObject();
    uint64_t v1 = CurrentValueSubject.init(_:)();
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100104C18()
{
  return sub_100104C48(&qword_10035E418);
}

uint64_t sub_100104C24()
{
  return sub_100104C48(&qword_10035D028);
}

uint64_t sub_100104C30()
{
  return sub_100105148(&qword_100366428);
}

uint64_t sub_100104C3C()
{
  return sub_100104C48(&qword_100366430);
}

uint64_t sub_100104C48(uint64_t *a1)
{
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void *)(v1 + 16);
  }
  else
  {
    uint64_t v3 = v1;
    sub_10000A38C(a1);
    swift_allocObject();
    swift_retain();
    uint64_t v2 = CurrentValueSubject.init(_:)();
    *(void *)(v3 + 16) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_100104CE8()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    sub_10000A38C(&qword_10035F460);
    swift_allocObject();
    uint64_t v1 = CurrentValueSubject.init(_:)();
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100104D78()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    sub_10000A38C(&qword_10036AFE0);
    swift_allocObject();
    uint64_t v1 = CurrentValueSubject.init(_:)();
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100104E08()
{
  return sub_100105148(&qword_10035E248);
}

uint64_t sub_100104E14()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    sub_10000A38C(&qword_100366650);
    swift_allocObject();
    uint64_t v1 = CurrentValueSubject.init(_:)();
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100104EA4()
{
  return sub_10010503C(&qword_10035F3C0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10003A3A4);
}

uint64_t sub_100104EC4()
{
  return sub_100105148(&qword_100366438);
}

uint64_t sub_100104ED0()
{
  return sub_100105148(&qword_100366450);
}

uint64_t sub_100104EDC()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    sub_10000A38C(&qword_10035CA48);
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v1 = CurrentValueSubject.init(_:)();
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100104F7C()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    sub_10000A38C(&qword_10035CA68);
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v1 = CurrentValueSubject.init(_:)();
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_10010501C()
{
  return sub_10010503C(&qword_10035E278, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10003A630);
}

uint64_t sub_10010503C(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (v2[2])
  {
    uint64_t v3 = v2[2];
  }
  else
  {
    uint64_t v5 = v2;
    uint64_t v6 = v2[4];
    uint64_t v7 = v2[5];
    uint64_t v8 = v2[6];
    uint64_t v9 = v2[7];
    uint64_t v10 = v2[8];
    uint64_t v11 = v2[9];
    uint64_t v13 = v2[3];
    sub_10000A38C(a1);
    swift_allocObject();
    a2(v13, v6, v7, v8, v9, v10, v11);
    uint64_t v3 = CurrentValueSubject.init(_:)();
    _OWORD v5[2] = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v3;
}

uint64_t sub_100105124()
{
  return sub_100105148(&qword_100366448);
}

uint64_t sub_100105130()
{
  return sub_100105148(&qword_100366660);
}

uint64_t sub_10010513C()
{
  return sub_100105148(&qword_100366658);
}

uint64_t sub_100105148(uint64_t *a1)
{
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void *)(v1 + 16);
  }
  else
  {
    uint64_t v3 = v1;
    uint64_t v4 = *(void **)(v1 + 24);
    sub_10000A38C(a1);
    swift_allocObject();
    id v5 = v4;
    uint64_t v2 = CurrentValueSubject.init(_:)();
    *(void *)(v3 + 16) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001051DC()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    sub_10000A38C(&qword_100366440);
    swift_allocObject();
    uint64_t v1 = CurrentValueSubject.init(_:)();
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_10010526C()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    sub_10000A38C((uint64_t *)&unk_10036D250);
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v1 = CurrentValueSubject.init(_:)();
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_10010530C()
{
  swift_release();
  swift_release();

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NearbyAgentState()
{
  return self;
}

char *sub_100105510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = &v3[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_interruptionHandler];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  uint64_t v7 = &v3[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_invalidationHandler];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  uint64_t v8 = OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_dispatchQueue;
  uint64_t v9 = qword_10035A628;
  uint64_t v10 = v3;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_1003ACB50;
  *(void *)&v3[v8] = qword_1003ACB50;
  Swift::Int v12 = (uint64_t *)&v10[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_discoverySubject];
  sub_10000A38C(&qword_10035ABB8);
  swift_allocObject();
  id v13 = v11;
  uint64_t v14 = PassthroughSubject.init()();
  swift_allocObject();
  uint64_t v15 = PassthroughSubject.init()();
  *Swift::Int v12 = v14;
  v12[1] = v15;
  _OWORD v12[2] = 0;
  uint64_t v16 = OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_identityStorage;
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000A38C(&qword_100366408);
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 24) = 0;
  *(void *)(v18 + 32) = [objc_allocWithZone((Class)NSLock) init];
  sub_10000A38C(&qword_100366410);
  swift_allocObject();
  uint64_t v19 = PassthroughSubject.init()();
  sub_10000A38C(&qword_100366418);
  swift_allocObject();
  uint64_t v20 = PassthroughSubject.init()();
  swift_allocObject();
  uint64_t v21 = PassthroughSubject.init()();
  *(void *)(v18 + 40) = v19;
  *(void *)(v18 + 48) = v20;
  *(void *)(v18 + 56) = v21;
  *(void *)(v18 + 64) = &_swiftEmptyDictionarySingleton;
  *(void *)(v18 + 72) = 0;
  *(void *)(v18 + 16) = KeyPath;
  *(unsigned char *)(v18 + 24) = 0;
  *(void *)&v10[v16] = v18;
  *(void *)&v10[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_bluetoothProxy] = 0;
  *(void *)&v10[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_rpClientProxy] = 0;
  *(void *)&v10[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_homekitProxy] = 0;
  *(void *)&v10[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_idsProxy] = 0;
  uint64_t v22 = OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_telephonyProxy;
  if (qword_10035A5F0 != -1) {
    swift_once();
  }
  NSString v23 = (void *)qword_1003ACA78;
  *(void *)&v10[v22] = qword_1003ACA78;
  uint64_t v24 = OBJC_IVAR____TtC17proximitycontrold11NearbyAgent__rangingProxy;
  sub_10000A38C(&qword_100366420);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  *(void *)&v10[v24] = v25;
  *(void *)&v10[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_sharingProxy] = 0;
  *(void *)&v10[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_activationTask] = 0;
  *(void *)&v10[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_discoveryTasks] = &_swiftEmptySetSingleton;
  *(void *)&v10[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_tasks] = &_swiftEmptySetSingleton;
  uint64_t v26 = &v10[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_model];
  *(void *)uint64_t v26 = a1;
  *((void *)v26 + 1) = a2;
  *(void *)&v10[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_state] = a3;
  id v27 = v23;
  swift_retain();
  swift_retain();
  swift_retain();

  v36.receiver = v10;
  v36.super_class = (Class)type metadata accessor for NearbyAgent();
  id v28 = [super init];
  uint64_t v29 = qword_10035A4E8;
  id v30 = (char *)v28;
  if (v29 != -1) {
    swift_once();
  }
  uint64_t v31 = qword_1003AC5D0;
  uint64_t v32 = *(void *)(*(void *)&v30[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_state] + 16);
  type metadata accessor for LockscreenControlsAgentModel();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v32;
  *(void *)(*(void *)(v31 + 16) + 24) = v33;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_release();
  sub_100104C48(&qword_10035D028);
  swift_retain();
  CurrentValueSubject.send(_:)();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  return v30;
}

id sub_10010595C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NearbyAgent();
  return [super dealloc];
}

uint64_t type metadata accessor for NearbyAgent()
{
  return self;
}

uint64_t sub_100105B24@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NearbyAgent();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100105B60(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v115 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_10000A38C(&qword_100366458);
  uint64_t v112 = *(void *)(v5 - 8);
  uint64_t v113 = v5;
  __chkstk_darwin(v5);
  uint64_t v111 = (char *)v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A38C(&qword_10035AC20);
  __chkstk_darwin(v7 - 8);
  Swift::Int v107 = (char *)v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_10000A38C(&qword_100366460);
  uint64_t v9 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v101 = (char *)v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_10000A38C(&qword_100366468);
  uint64_t v11 = *(char **)(v105 - 8);
  __chkstk_darwin(v105);
  Swift::Int v103 = (char *)v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000A38C(&qword_100366470);
  uint64_t v109 = *(void *)(v13 - 8);
  uint64_t v110 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  Swift::Int v106 = (char *)v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = v15;
  __chkstk_darwin(v14);
  Swift::Int v108 = (char *)v95 - v16;
  uint64_t v17 = type metadata accessor for DispatchPredicate();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (void *)((char *)v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v21 = sub_1001F687C();
  uint64_t v22 = String._bridgeToObjectiveC()();
  [v21 ulog:40 message:v22];

  if (qword_10035A628 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_1003ACB50;
  *uint64_t v20 = qword_1003ACB50;
  (*(void (**)(void *, void, uint64_t))(v18 + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v17);
  id v24 = (id)v23;
  LOBYTE(v23) = _dispatchPreconditionTest(_:)();
  uint64_t v26 = *(void (**)(void *, uint64_t))(v18 + 8);
  uint64_t v25 = v18 + 8;
  v26(v20, v17);
  if (v23)
  {
    uint64_t v98 = v9;
    uint64_t v99 = (void (**)(char *, uint64_t))v11;
    uint64_t v100 = a2;
    type metadata accessor for Stopwatch();
    uint64_t v25 = swift_allocObject();
    *(unsigned char *)(v25 + 16) = 1;
    *(void *)(v25 + 24) = 0;
    *(unsigned char *)(v25 + 32) = 1;
    *(void *)(v25 + 40) = 0;
    *(unsigned char *)(v25 + 48) = 1;
    *(void *)(v25 + 24) = UpTicks()();
    *(unsigned char *)(v25 + 32) = 0;
    *(unsigned char *)(v25 + 16) = 0;
    sub_10000A38C(&qword_100365D38);
    swift_allocObject();
    id v27 = sub_1001EFDD8(1, 0, 0, 0);
    type metadata accessor for BluetoothProxyModel();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v27;
    type metadata accessor for BluetoothProxyState();
    swift_allocObject();
    uint64_t v29 = sub_1000ECF14();
    type metadata accessor for BluetoothProxy();
    swift_allocObject();
    a2 = sub_1000ED108(v28, (uint64_t)v29);
    *(void *)&v3[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_bluetoothProxy] = a2;
    swift_retain();
    swift_release();
    uint64_t v30 = *(void *)&v3[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_state];
    uint64_t v31 = *(void *)(v30 + 24);
    uint64_t v32 = (objc_class *)type metadata accessor for HomeKitProxy();
    uint64_t v33 = (char *)objc_allocWithZone(v32);
    NSString v34 = &v33[OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_activationPromise];
    *(void *)NSString v34 = 0;
    *((void *)v34 + 1) = 0;
    unint64_t v35 = (void *)qword_1003ACB50;
    *(void *)&v33[OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_dispatchQueue] = qword_1003ACB50;
    *(void *)&v33[OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_manager] = 0;
    *(void *)&v33[OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_tasks] = &_swiftEmptySetSingleton;
    *(void *)&v33[OBJC_IVAR____TtC17proximitycontrold12HomeKitProxy_state] = v31;
    v122.receiver = v33;
    v122.super_class = v32;
    swift_retain();
    id v36 = v35;
    id v37 = [super init];
    id v38 = *(void **)&v3[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_homekitProxy];
    *(void *)&v3[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_homekitProxy] = v37;
    id v119 = v37;

    id v39 = [objc_allocWithZone((Class)type metadata accessor for IDSProxy()) init];
    unint64_t v40 = *(void **)&v3[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_idsProxy];
    *(void *)&v3[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_idsProxy] = v39;
    id v118 = v39;

    id v41 = objc_allocWithZone((Class)type metadata accessor for RangingProxy());
    id v42 = v3;
    NSString v43 = sub_10019D4C4(v42);
    uint64_t v44 = *(void *)&v42[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent__rangingProxy];
    char v45 = *(void **)(v44 + 24);
    *(void *)(v44 + 24) = v43;
    NSString v46 = v43;
    swift_retain();

    sub_100105148(&qword_100366428);
    unint64_t v121 = *(void *)(v44 + 24);
    id v47 = (id)v121;
    CurrentValueSubject.send(_:)();
    uint64_t v3 = v46;
    swift_release();

    swift_release();
    uint64_t v48 = *(void *)&v42[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_model];
    NSString v49 = (char *)objc_allocWithZone((Class)type metadata accessor for RapportProxy());
    uint64_t v11 = v42;
    swift_retain();
    id v50 = sub_10010F07C((uint64_t)v11, v48, v49);

    id v51 = *(void **)(v30 + 32);
    *(void *)(v30 + 32) = v50;
    id v117 = v50;

    type metadata accessor for RPClientProxy();
    swift_allocObject();
    uint64_t v52 = swift_retain();
    Swift::String v53 = sub_1001A9E64(v52);
    *(void *)&v11[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_rpClientProxy] = v53;
    uint64_t v116 = v53;
    swift_retain();
    swift_release();
    type metadata accessor for SharingProxy();
    swift_allocObject();
    uint64_t v54 = swift_retain();
    uint64_t v22 = (void *)sub_1000CA764(v54);
    *(void *)&v11[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_sharingProxy] = v22;
    swift_retain();
    swift_release();
    if (qword_10035A540 == -1) {
      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_5:
  *(void *)(qword_1003AC780 + 56) = &off_100323420;
  swift_unknownObjectWeakAssign();
  sub_10000A38C(&qword_10035C280);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_100299750;
  *(void *)(v55 + 32) = sub_1000ED5C8();
  id v56 = sub_1001F6858();
  NSString v57 = String._bridgeToObjectiveC()();
  [v56 ulog:40 message:v57];

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10000A38C((uint64_t *)&unk_100363D00);
  swift_allocObject();
  *(void *)(v55 + 40) = Future.init(_:)();
  id v58 = sub_1001F68FC();
  NSString v59 = String._bridgeToObjectiveC()();
  [v58 ulog:40 message:v59];

  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_allocObject();
  *(void *)(v55 + 48) = Future.init(_:)();
  *(void *)(v55 + 56) = sub_100185E78();
  *(void *)(v55 + 64) = sub_10019E440();
  swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  *(void *)(v55 + 72) = Future.init(_:)();
  id v60 = *(id *)&v11[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_telephonyProxy];
  uint64_t v61 = sub_1001C321C();

  *(void *)(v55 + 80) = v61;
  unint64_t v121 = v55;
  specialized Array._endMutation()();
  sub_1000CAA38();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  unint64_t v63 = *(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t v62 = *(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x18);
  v95[2] = a2;
  id v96 = v3;
  unint64_t v97 = v22;
  if (v63 >= v62 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_release();
  id v120 = (id)v121;
  v95[1] = sub_10000A38C(&qword_100366478);
  sub_10000B010(&qword_100366480, &qword_100366478);
  uint64_t v64 = v101;
  Sequence.publisher.getter();
  swift_bridgeObjectRelease();
  uint64_t v65 = v103;
  uint64_t v66 = v102;
  Publishers.Sequence.collect()();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v64, v66);
  id v120 = *(id *)&v11[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_dispatchQueue];
  id v67 = v120;
  uint64_t v68 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v69 = (uint64_t)v107;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v107, 1, 1, v68);
  sub_100019E10(0, (unint64_t *)&qword_10035A680);
  sub_10000B010(&qword_100366488, &qword_100366468);
  sub_10003A8C0();
  uint64_t v102 = (uint64_t)v11;
  id v70 = v67;
  uint64_t v71 = v108;
  uint64_t v72 = v105;
  Publisher.receive<A>(on:options:)();
  sub_10000D78C(v69, &qword_10035AC20);

  v99[1](v65, v72);
  swift_retain();
  uint64_t v73 = ObjectType;
  id v74 = sub_10016B098(ObjectType, (uint64_t)&off_100328368);
  uint64_t v75 = v109;
  uint64_t v76 = v110;
  char v77 = v106;
  (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v106, v71, v110);
  unint64_t v78 = (*(unsigned __int8 *)(v75 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
  unint64_t v79 = (v104 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v80 = swift_allocObject();
  *(void *)(v80 + 16) = v25;
  *(_OWORD *)(v80 + 24) = xmmword_100295990;
  (*(void (**)(unint64_t, char *, uint64_t))(v75 + 32))(v80 + v78, v77, v76);
  *(void *)(v80 + v79) = v74;
  sub_10000B010(&qword_100366490, &qword_100366470);
  swift_retain();
  id v81 = v74;
  uint64_t v82 = v111;
  Swift::String v83 = v71;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_100366498, &qword_100366458);
  uint64_t v84 = v113;
  uint64_t v85 = (void *)Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v82, v84);
  swift_release();

  (*(void (**)(char *, uint64_t))(v75 + 8))(v83, v76);
  uint64_t v86 = swift_allocObject();
  unint64_t v87 = (void *)v102;
  *(void *)(v86 + 16) = v102;
  uint64_t v88 = v87;
  id v89 = sub_10016B098(v73, (uint64_t)&off_100328368);
  id v120 = v85;
  uint64_t v90 = (void *)swift_allocObject();
  unint64_t v91 = v100;
  v90[2] = v115;
  v90[3] = v91;
  v90[4] = v85;
  v90[5] = 0xD000000000000015;
  v90[6] = 0x80000001002BE840;
  v90[7] = v89;
  v90[8] = sub_10010F530;
  v90[9] = v86;
  swift_retain();
  swift_retain();
  id v92 = v89;
  swift_retain();
  sub_10000A38C(&qword_1003664A0);
  sub_10000B010(&qword_1003664A8, &qword_1003664A0);
  uint64_t v93 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();

  swift_release();
  *(void *)&v88[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_activationTask] = v93;
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_100106B08()
{
  unint64_t v4 = v0;
  uint64_t v5 = type metadata accessor for OSSignpostID();
  uint64_t v134 = *(void *)(v5 - 8);
  uint64_t v135 = v5;
  __chkstk_darwin(v5);
  v133 = (char *)v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001080C4();
  unint64_t v143 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_bluetoothProxy);
  unint64_t v136 = v0;
  if (v7)
  {
    uint64_t v8 = *(void **)(v7 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery);
    uint64_t v3 = _swiftEmptyArrayStorage;
    if (v8)
    {
      swift_retain();
      id v9 = [v8 discoveredDevices];
      sub_100019E10(0, (unint64_t *)&unk_100365C90);
      unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      swift_release();
    }
    else
    {
      unint64_t v10 = (unint64_t)_swiftEmptyArrayStorage;
    }
    unint64_t v142 = (unint64_t)_swiftEmptyArrayStorage;
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v11)
      {
LABEL_7:
        if (v11 < 1)
        {
          __break(1u);
          goto LABEL_112;
        }
        for (unint64_t i = 0; i != (uint64_t *)v11; unint64_t i = (uint64_t *)((char *)i + 1))
        {
          if ((v10 & 0xC000000000000001) != 0) {
            id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v12 = *(id *)(v10 + 8 * (void)i + 32);
          }
          uint64_t v13 = v12;
          id v14 = [v12 identifier];
          if (v14)
          {

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            unint64_t v2 = *(void *)(v142 + 16);
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          else
          {
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v15 = v142;
        unint64_t v4 = v136;
        if ((v142 & 0x8000000000000000) != 0) {
          goto LABEL_29;
        }
LABEL_20:
        if ((v15 & 0x4000000000000000) == 0)
        {
          uint64_t v16 = *(void *)(v15 + 16);
          if (!v16)
          {
LABEL_30:
            swift_release();
            uint64_t v19 = _swiftEmptyArrayStorage;
LABEL_31:
            sub_10008E2CC((unint64_t)v19);
            goto LABEL_32;
          }
          goto LABEL_22;
        }
LABEL_29:
        swift_bridgeObjectRetain();
        uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
        swift_release();
        if (!v16) {
          goto LABEL_30;
        }
LABEL_22:
        unint64_t v142 = (unint64_t)_swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        if ((v16 & 0x8000000000000000) == 0)
        {
          unint64_t i = 0;
          uint64_t v3 = (uint64_t *)(v15 & 0xC000000000000001);
          do
          {
            if (v3) {
              id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v17 = *(id *)(v15 + 8 * (void)i + 32);
            }
            uint64_t v18 = (uint64_t)v17;
            unint64_t i = (uint64_t *)((char *)i + 1);
            type metadata accessor for Identity();
            swift_allocObject();
            sub_10009951C(v18);
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            unint64_t v2 = *(void *)(v142 + 16);
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          while ((uint64_t *)v16 != i);
          uint64_t v19 = (void *)v142;
          swift_release();
          goto LABEL_31;
        }
LABEL_112:
        __break(1u);
        goto LABEL_113;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v11) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_29;
    }
    goto LABEL_20;
  }
LABEL_32:
  uint64_t v20 = *(void *)(v4 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_state);
  uint64_t v21 = *(void *)(*(void *)(v20 + 24) + 16);
  uint64_t v22 = *(void **)(v21 + 32);
  swift_retain();
  [v22 lock];
  swift_beginAccess();
  uint64_t v23 = swift_bridgeObjectRetain();
  unint64_t v24 = (unint64_t)sub_1000F0808(v23);
  swift_bridgeObjectRelease();
  [*(id *)(v21 + 32) unlock];
  swift_release();
  if ((v24 & 0x8000000000000000) != 0 || (v24 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (v25) {
      goto LABEL_35;
    }
LABEL_43:
    swift_release();
    uint64_t v29 = _swiftEmptyArrayStorage;
    goto LABEL_44;
  }
  uint64_t v25 = *(void *)(v24 + 16);
  if (!v25) {
    goto LABEL_43;
  }
LABEL_35:
  v141 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v25 < 0)
  {
    __break(1u);
    goto LABEL_56;
  }
  uint64_t v26 = 0;
  do
  {
    if ((v24 & 0xC000000000000001) != 0) {
      id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v27 = *(id *)(v24 + 8 * v26 + 32);
    }
    uint64_t v28 = (uint64_t)v27;
    ++v26;
    type metadata accessor for Identity();
    swift_allocObject();
    sub_100099534(v28);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    unint64_t v2 = v141[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
  }
  while (v25 != v26);
  uint64_t v29 = v141;
  swift_release();
LABEL_44:
  sub_10008E2CC((unint64_t)v29);
  uint64_t v3 = (uint64_t *)OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_idsProxy;
  uint64_t v30 = *(void *)(v4 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_idsProxy);
  unint64_t i = &OBJC_IVAR____TtC17proximitycontrold8IDSProxy_devices;
  if (!v30) {
    goto LABEL_59;
  }
  uint64_t v31 = *(void *)(v30 + OBJC_IVAR____TtC17proximitycontrold8IDSProxy_devices);
  uint64_t v32 = *(void **)(v31 + 32);
  swift_retain();
  [v32 lock];
  swift_beginAccess();
  uint64_t v33 = swift_bridgeObjectRetain();
  unint64_t v24 = (unint64_t)sub_1000F0808(v33);
  swift_bridgeObjectRelease();
  [*(id *)(v31 + 32) unlock];
  swift_release();
  if ((v24 & 0x8000000000000000) == 0 && (v24 & 0x4000000000000000) == 0)
  {
    uint64_t v34 = *(void *)(v24 + 16);
    if (v34) {
      goto LABEL_48;
    }
    goto LABEL_57;
  }
LABEL_56:
  swift_bridgeObjectRetain();
  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (v34)
  {
LABEL_48:
    v140 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v34 & 0x8000000000000000) == 0)
    {
      uint64_t v35 = 0;
      do
      {
        if ((v24 & 0xC000000000000001) != 0) {
          id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v36 = *(id *)(v24 + 8 * v35 + 32);
        }
        uint64_t v37 = (uint64_t)v36;
        ++v35;
        type metadata accessor for Identity();
        swift_allocObject();
        sub_10009954C(v37);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      while (v34 != v35);
      id v38 = v140;
      swift_release();
      unint64_t v4 = v136;
      unint64_t i = &OBJC_IVAR____TtC17proximitycontrold8IDSProxy_devices;
      goto LABEL_58;
    }
LABEL_113:
    __break(1u);
    goto LABEL_114;
  }
LABEL_57:
  swift_release();
  id v38 = _swiftEmptyArrayStorage;
LABEL_58:
  sub_10008E2CC((unint64_t)v38);
LABEL_59:
  uint64_t v39 = *(void *)(v4 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_rpClientProxy);
  if (v39)
  {
    uint64_t v40 = *(void *)(*(void *)(v39 + 16) + 24);
    id v41 = *(void **)(v40 + 32);
    swift_retain();
    [v41 lock];
    swift_beginAccess();
    uint64_t v42 = swift_bridgeObjectRetain();
    NSString v43 = i;
    uint64_t v44 = sub_1000F06FC(v42);
    swift_bridgeObjectRelease();
    [*(id *)(v40 + 32) unlock];
    swift_release();
    char v45 = sub_10010488C((unint64_t)v44);
    v132[0] = 0;
    unint64_t i = v43;
    swift_release();
    uint64_t v46 = *(uint64_t *)((char *)v3 + v4);
    if (v46)
    {
LABEL_61:
      uint64_t v47 = *(void *)(v46 + *i);
      uint64_t v48 = *(void **)(v47 + 32);
      swift_retain();
      [v48 lock];
      swift_beginAccess();
      uint64_t v49 = swift_bridgeObjectRetain();
      id v50 = sub_1000F0808(v49);
      swift_bridgeObjectRelease();
      [*(id *)(v47 + 32) unlock];
      swift_release();
      goto LABEL_64;
    }
  }
  else
  {
    char v45 = 0;
    v132[0] = 0;
    uint64_t v46 = *(uint64_t *)((char *)v3 + v4);
    if (v46) {
      goto LABEL_61;
    }
  }
  id v50 = 0;
LABEL_64:
  id v51 = sub_10010F5D4((unint64_t)v45, (unint64_t)v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10008E2CC((unint64_t)v51);
  uint64_t v52 = *(char **)(v20 + 32);
  if (!v52) {
    goto LABEL_130;
  }
  uint64_t v3 = &OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLClient;
  Swift::String v53 = *(void **)&v52[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLClient];
  if (v53)
  {
    uint64_t v54 = v52;
    id v55 = [v53 activeDevices];
    sub_100019E10(0, &qword_10035E350);
    unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    unint64_t v2 = (unint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v138 = (unint64_t)_swiftEmptyArrayStorage;
  if (!(v2 >> 62))
  {
    uint64_t v56 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v4 = (unint64_t)&unk_100356000;
    if (v56) {
      goto LABEL_70;
    }
LABEL_82:
    swift_bridgeObjectRelease();
    unint64_t v2 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_92;
    }
    goto LABEL_83;
  }
  swift_bridgeObjectRetain();
  uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  unint64_t v4 = 0x100356000;
  if (!v56) {
    goto LABEL_82;
  }
LABEL_70:
  if (v56 < 1)
  {
LABEL_114:
    __break(1u);
    goto LABEL_115;
  }
  for (uint64_t j = 0; j != v56; ++j)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v58 = *(id *)(v2 + 8 * j + 32);
    }
    NSString v59 = v58;
    if ((objc_msgSend(v58, *(SEL *)(v4 + 2688), v132[0]) & 4) != 0)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v2 = v138;
  uint64_t v3 = &OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLClient;
  if ((v138 & 0x8000000000000000) != 0)
  {
LABEL_92:
    swift_bridgeObjectRetain();
    uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v60) {
      goto LABEL_93;
    }
    goto LABEL_85;
  }
LABEL_83:
  if ((v2 & 0x4000000000000000) != 0) {
    goto LABEL_92;
  }
  uint64_t v60 = *(void *)(v2 + 16);
  if (!v60)
  {
LABEL_93:
    swift_release();
    uint64_t v64 = _swiftEmptyArrayStorage;
    goto LABEL_94;
  }
LABEL_85:
  unint64_t v138 = (unint64_t)_swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v60 < 0)
  {
LABEL_115:
    __break(1u);
    goto LABEL_116;
  }
  uint64_t v61 = 0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v62 = *(id *)(v2 + 8 * v61 + 32);
    }
    uint64_t v63 = (uint64_t)v62;
    ++v61;
    type metadata accessor for Identity();
    swift_allocObject();
    sub_100099910(v63);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
  }
  while (v60 != v61);
  uint64_t v64 = (void *)v138;
  swift_release();
LABEL_94:
  sub_10008E2CC((unint64_t)v64);
  uint64_t v65 = *(char **)(v20 + 32);
  if (!v65) {
    goto LABEL_130;
  }
  uint64_t v66 = *(void **)&v65[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLClient];
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v66)
  {
    id v67 = v65;
    id v68 = [v66 activeDevices];
    sub_100019E10(0, &qword_10035E350);
    unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    unint64_t v2 = (unint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v138 = (unint64_t)_swiftEmptyArrayStorage;
  if (!(v2 >> 62))
  {
    uint64_t v69 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v69) {
      goto LABEL_100;
    }
LABEL_117:
    swift_bridgeObjectRelease();
    unint64_t v73 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_127;
    }
    goto LABEL_118;
  }
LABEL_116:
  swift_bridgeObjectRetain();
  uint64_t v69 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v69) {
    goto LABEL_117;
  }
LABEL_100:
  if (v69 < 1)
  {
LABEL_188:
    __break(1u);
    goto LABEL_189;
  }
  for (uint64_t k = 0; k != v69; ++k)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v71 = *(id *)(v2 + 8 * k + 32);
    }
    uint64_t v72 = v71;
    if ((objc_msgSend(v71, *(SEL *)(v4 + 2688), v132[0]) & 2) != 0)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v73 = v138;
  if ((v138 & 0x8000000000000000) != 0)
  {
LABEL_127:
    swift_bridgeObjectRetain();
    uint64_t v74 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v74) {
      goto LABEL_128;
    }
LABEL_120:
    unint64_t v138 = (unint64_t)v3;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v74 < 0)
    {
LABEL_189:
      __break(1u);
      return;
    }
    uint64_t v75 = 0;
    do
    {
      if ((v73 & 0xC000000000000001) != 0) {
        id v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v76 = *(id *)(v73 + 8 * v75 + 32);
      }
      uint64_t v77 = (uint64_t)v76;
      ++v75;
      type metadata accessor for Identity();
      swift_allocObject();
      sub_1000998F4(v77);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v74 != v75);
    unint64_t v78 = (void *)v138;
    swift_release();
    goto LABEL_129;
  }
LABEL_118:
  if ((v73 & 0x4000000000000000) != 0) {
    goto LABEL_127;
  }
  uint64_t v74 = *(void *)(v73 + 16);
  if (v74) {
    goto LABEL_120;
  }
LABEL_128:
  swift_release();
  unint64_t v78 = _swiftEmptyArrayStorage;
LABEL_129:
  sub_10008E2CC((unint64_t)v78);
LABEL_130:
  unint64_t v79 = v143;
  if (v143 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v80 = _CocoaArrayWrapper.endIndex.getter();
    if (v80) {
      goto LABEL_132;
    }
LABEL_139:
    swift_bridgeObjectRelease();
    uint64_t v82 = _swiftEmptyArrayStorage;
    goto LABEL_140;
  }
  uint64_t v80 = *(void *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v80) {
    goto LABEL_139;
  }
LABEL_132:
  unint64_t v138 = (unint64_t)_swiftEmptyArrayStorage;
  sub_1000B54DC(0, v80 & ~(v80 >> 63), 0);
  if (v80 < 0)
  {
    __break(1u);
    goto LABEL_161;
  }
  uint64_t v81 = 0;
  uint64_t v82 = (void *)v138;
  do
  {
    swift_retain();
    uint64_t v83 = sub_10009BB90();
    uint64_t v85 = v84;
    swift_release();
    unint64_t v138 = (unint64_t)v82;
    unint64_t v87 = v82[2];
    unint64_t v86 = v82[3];
    if (v87 >= v86 >> 1)
    {
      sub_1000B54DC(v86 > 1, v87 + 1, 1);
      uint64_t v82 = (void *)v138;
    }
    ++v81;
    v82[2] = v87 + 1;
    uint64_t v88 = &v82[2 * v87];
    v88[4] = v83;
    v88[5] = v85;
  }
  while (v80 != v81);
  swift_bridgeObjectRelease();
LABEL_140:
  unint64_t v138 = (unint64_t)v82;
  uint64_t v89 = sub_10000A38C((uint64_t *)&unk_100367D40);
  uint64_t v90 = sub_10000B010((unint64_t *)&qword_10035E7F0, (uint64_t *)&unk_100367D40);
  v132[2] = v89;
  v132[1] = v90;
  uint64_t v91 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v93 = v92;
  swift_bridgeObjectRelease();
  unint64_t v138 = 0;
  unint64_t v139 = 0xE000000000000000;
  _StringGuts.grow(_:)(37);
  swift_bridgeObjectRelease();
  unint64_t v138 = 0xD00000000000001CLL;
  unint64_t v139 = 0x80000001002BE860;
  if (v79 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v94 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v94 = *(void **)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v137 = v94;
  v95._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v95);
  swift_bridgeObjectRelease();
  v96._uint64_t countAndFlagsBits = 0x20200A3A29;
  v96._unint64_t object = (void *)0xE500000000000000;
  String.append(_:)(v96);
  v97._uint64_t countAndFlagsBits = v91;
  v97._unint64_t object = v93;
  String.append(_:)(v97);
  swift_bridgeObjectRelease();
  id v98 = sub_1001F687C();
  swift_bridgeObjectRetain();
  NSString v99 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v98 ulog:40 message:v99];
  swift_bridgeObjectRelease();

  unint64_t v100 = swift_bridgeObjectRetain();
  unint64_t v4 = (unint64_t)sub_10009F924(v100);
  swift_bridgeObjectRelease();
  unint64_t v101 = (unint64_t)_swiftEmptyArrayStorage;
  if (v4)
  {
    unint64_t v138 = (unint64_t)_swiftEmptyArrayStorage;
    if (!(v4 >> 62))
    {
      uint64_t v102 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v102)
      {
LABEL_146:
        if (v102 < 1)
        {
LABEL_187:
          __break(1u);
          goto LABEL_188;
        }
        if ((v4 & 0xC000000000000001) != 0)
        {
          for (uint64_t m = 0; m != v102; ++m)
          {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_getKeyPath();
            swift_getKeyPath();
            static Published.subscript.getter();
            swift_release();
            swift_release();
            id v104 = v137;

            if (v104
              || (swift_getKeyPath(),
                  swift_getKeyPath(),
                  static Published.subscript.getter(),
                  swift_release(),
                  swift_release(),
                  id v105 = v137,
                  v137,
                  v105))
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
            else
            {
              swift_unknownObjectRelease();
            }
          }
        }
        else
        {
          unint64_t v106 = v4 + 32;
          do
          {
            swift_getKeyPath();
            swift_getKeyPath();
            swift_retain();
            static Published.subscript.getter();
            swift_release();
            swift_release();
            id v107 = v137;

            if (v107
              || (swift_getKeyPath(),
                  swift_getKeyPath(),
                  static Published.subscript.getter(),
                  swift_release(),
                  swift_release(),
                  id v108 = v137,
                  v137,
                  v108))
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
            else
            {
              swift_release();
            }
            v106 += 8;
            --v102;
          }
          while (v102);
        }
      }
LABEL_162:
      swift_bridgeObjectRelease();
      unint64_t v101 = v138;
      goto LABEL_163;
    }
LABEL_161:
    swift_bridgeObjectRetain();
    uint64_t v102 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v102) {
      goto LABEL_146;
    }
    goto LABEL_162;
  }
LABEL_163:
  if (v101 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v109 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v109 = *(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v109)
  {
    unint64_t v138 = (unint64_t)_swiftEmptyArrayStorage;
    sub_1000B54DC(0, v109 & ~(v109 >> 63), 0);
    if ((v109 & 0x8000000000000000) == 0)
    {
      uint64_t v110 = 0;
      uint64_t v111 = (void *)v138;
      do
      {
        if ((v101 & 0xC000000000000001) != 0) {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          swift_retain();
        }
        uint64_t v112 = sub_10009BB90();
        uint64_t v114 = v113;
        swift_release();
        unint64_t v138 = (unint64_t)v111;
        unint64_t v116 = v111[2];
        unint64_t v115 = v111[3];
        if (v116 >= v115 >> 1)
        {
          sub_1000B54DC(v115 > 1, v116 + 1, 1);
          uint64_t v111 = (void *)v138;
        }
        ++v110;
        v111[2] = v116 + 1;
        id v117 = &v111[2 * v116];
        v117[4] = v112;
        v117[5] = v114;
      }
      while (v109 != v110);
      goto LABEL_176;
    }
    __break(1u);
    goto LABEL_187;
  }
  uint64_t v111 = _swiftEmptyArrayStorage;
LABEL_176:
  swift_bridgeObjectRelease();
  unint64_t v138 = (unint64_t)v111;
  uint64_t v118 = BidirectionalCollection<>.joined(separator:)();
  id v120 = v119;
  swift_bridgeObjectRelease();
  unint64_t v138 = 0;
  unint64_t v139 = 0xE000000000000000;
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease();
  unint64_t v138 = 0xD00000000000001FLL;
  unint64_t v139 = 0x80000001002BE880;
  id v137 = (id)v109;
  v121._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v121);
  swift_bridgeObjectRelease();
  v122._uint64_t countAndFlagsBits = 0x20200A3A29;
  v122._unint64_t object = (void *)0xE500000000000000;
  String.append(_:)(v122);
  v123._uint64_t countAndFlagsBits = v118;
  v123._unint64_t object = v120;
  String.append(_:)(v123);
  swift_bridgeObjectRelease();
  id v124 = sub_1001F687C();
  swift_bridgeObjectRetain();
  NSString v125 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v124 ulog:40 message:v125];
  swift_bridgeObjectRelease();

  unint64_t v126 = v136;
  swift_retain();
  sub_1001C0DB8(v101);
  swift_release();
  swift_bridgeObjectRelease();
  v127 = v133;
  static OSSignpostID.exclusive.getter();
  static os_signpost_type_t.end.getter();
  if (qword_10035A530 != -1) {
    swift_once();
  }
  id v128 = (id)qword_1003AC760;
  os_signpost(_:dso:log:name:signpostID:_:_:)();

  (*(void (**)(char *, uint64_t))(v134 + 8))(v127, v135);
  id v129 = *(char **)(*(void *)(v126 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent__rangingProxy) + 24);
  if (v129 && *(unsigned char *)(*(void *)&v129[OBJC_IVAR____TtC17proximitycontrold12RangingProxy__sessionState] + 24) != 2)
  {
    v130 = v129;
    if (sub_1001A17F4())
    {
      uint64_t v131 = v132[0];
      sub_1001A04D4();
      if (v131) {
        swift_errorRelease();
      }
    }
  }
}

void sub_1001080C4()
{
  uint64_t v1 = sub_10000A38C(&qword_10035AC20);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000A38C(&qword_1003664B0);
  uint64_t v71 = *(void *)(v4 - 8);
  uint64_t v72 = v4;
  __chkstk_darwin(v4);
  uint64_t v69 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A38C(&qword_1003664B8);
  uint64_t v73 = *(void *)(v6 - 8);
  uint64_t v74 = v6;
  __chkstk_darwin(v6);
  id v70 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A38C(&qword_1003664C0);
  uint64_t v76 = *(void *)(v8 - 8);
  uint64_t v77 = v8;
  __chkstk_darwin(v8);
  uint64_t v75 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A38C(&qword_1003664C8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v78 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000A38C(&qword_1003664D0);
  uint64_t v67 = *(void *)(v13 - 8);
  uint64_t v68 = v13;
  __chkstk_darwin(v13);
  uint64_t v66 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v63 = *(void *)(v15 - 8);
  uint64_t v64 = v15;
  __chkstk_darwin(v15);
  id v17 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000A38C(&qword_1003664D8);
  uint64_t v61 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_10000A38C(&qword_1003664E0);
  uint64_t v21 = *(void *)(v65 - 8);
  uint64_t v22 = *(void *)(v21 + 64);
  uint64_t v23 = __chkstk_darwin(v65);
  id v62 = (char *)v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)v56 - v24;
  sub_100109160();
  uint64_t v26 = *(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_bluetoothProxy);
  if (v26)
  {
    uint64_t v57 = v11;
    uint64_t v58 = v10;
    NSString v59 = v3;
    uint64_t v60 = v0;
    uint64_t v27 = *(void *)(v26 + 24);
    id v79 = *(id *)(*(void *)(v27 + 16) + 40);
    v56[4] = v26;
    swift_retain();
    sub_10000A38C(&qword_100365D28);
    sub_10000B010(&qword_1003664E8, &qword_100365D28);
    id v79 = (id)Publisher.eraseToAnyPublisher()();
    uint64_t v80 = *(void *)(*(void *)(v27 + 16) + 56);
    uint64_t v80 = Publisher.eraseToAnyPublisher()();
    uint64_t v28 = sub_10000A38C(&qword_1003664F0);
    uint64_t v29 = sub_10000B010(&qword_1003664F8, &qword_1003664F0);
    v56[2] = v28;
    v56[1] = v29;
    Publishers.Merge.init(_:_:)();
    OS_dispatch_queue.SchedulerTimeType.Stride.init(floatLiteral:)();
    if (qword_10035A628 != -1) {
      swift_once();
    }
    id v79 = (id)qword_1003ACB50;
    v56[0] = sub_100019E10(0, (unint64_t *)&qword_10035A680);
    sub_10000B010(&qword_100366500, &qword_1003664D8);
    v56[3] = sub_10003A8C0();
    Publisher.throttle<A>(for:scheduler:latest:)();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v64);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v20, v18);
    id v30 = sub_1001F687C();
    uint64_t v31 = v62;
    uint64_t v32 = v65;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v62, v25, v65);
    unint64_t v33 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    unint64_t v34 = (v22 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v35 = (v34 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v36 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v36 + v33, v31, v32);
    uint64_t v37 = (void *)(v36 + v34);
    *uint64_t v37 = 0xD00000000000001ELL;
    v37[1] = 0x80000001002BE8C0;
    *(void *)(v36 + v35) = v30;
    *(_DWORD *)(v36 + ((v35 + 11) & 0xFFFFFFFFFFFFFFF8)) = 10;
    sub_100019E10(0, (unint64_t *)&unk_100365C90);
    sub_10000B010(&qword_100366508, &qword_1003664E0);
    id v38 = v30;
    uint64_t v39 = v66;
    Publisher.map<A>(_:)();
    swift_release();
    sub_10000B010(&qword_100366510, &qword_1003664D0);
    uint64_t v40 = v68;
    id v41 = (void *)Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v39, v40);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v32);
    id v79 = v41;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    swift_beginAccess();
    sub_10000A38C(&qword_100365D18);
    uint64_t v42 = v69;
    Published.projectedValue.getter();
    swift_endAccess();
    sub_10000B010(&qword_100366518, &qword_1003664B0);
    NSString v43 = v70;
    uint64_t v44 = v72;
    Publisher.compactMap<A>(_:)();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v42, v44);
    sub_10000B010(&qword_100366520, &qword_1003664B8);
    sub_1000D2B9C();
    uint64_t v45 = v74;
    uint64_t v46 = v75;
    Publisher<>.removeDuplicates()();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v43, v45);
    uint64_t v47 = (void *)qword_1003ACB50;
    id v79 = (id)qword_1003ACB50;
    uint64_t v48 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v49 = (uint64_t)v59;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v59, 1, 1, v48);
    sub_10000B010(&qword_100366528, &qword_1003664C0);
    id v50 = v47;
    uint64_t v51 = v77;
    uint64_t v52 = v78;
    Publisher.receive<A>(on:options:)();
    sub_10000D78C(v49, &qword_10035AC20);

    (*(void (**)(char *, uint64_t))(v76 + 8))(v46, v51);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10000B010(&qword_100366530, &qword_1003664C8);
    uint64_t v53 = v58;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v52, v53);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    swift_release();
  }
  else
  {
    id v54 = sub_1001F687C();
    unint64_t v78 = (char *)String._bridgeToObjectiveC()();
    [v54 ulog:60 message:v78];

    id v55 = v78;
  }
}

uint64_t sub_100108D60()
{
  uint64_t v1 = v0;
  id v2 = sub_1001F687C();
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 ulog:40 message:v3];

  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_bluetoothProxy);
  if (v4)
  {
    swift_retain();
    id v5 = sub_1001F68B4();
    NSString v6 = String._bridgeToObjectiveC()();
    [v5 ulog:40 message:v6];

    id v7 = sub_1001F68B4();
    NSString v8 = String._bridgeToObjectiveC()();
    [v7 ulog:40 message:v8];

    uint64_t v9 = OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery;
    [*(id *)(v4 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery) invalidate];
    uint64_t v10 = *(void **)(v4 + v9);
    *(void *)(v4 + v9) = 0;

    swift_retain();
    sub_1001A89EC();
    swift_release();
    uint64_t v11 = (void *)(v4 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_tasks);
    swift_beginAccess();
    *uint64_t v11 = &_swiftEmptySetSingleton;
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_state) + 32);
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = sub_1001F5E20();
    NSString v15 = String._bridgeToObjectiveC()();
    [v14 ulog:40 message:v15];

    uint64_t v16 = OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLClient;
    id v17 = *(void **)&v13[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLClient];
    if (v17)
    {
      [v17 invalidate];
      uint64_t v18 = *(void **)&v13[v16];
      *(void *)&v13[v16] = 0;
    }
    sub_100187F94();
  }
  uint64_t v19 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent__rangingProxy) + 24);
  if (v19)
  {
    id v20 = v19;
    id v21 = sub_1001F63A0();
    NSString v22 = String._bridgeToObjectiveC()();
    [v21 ulog:40 message:v22];

    swift_retain();
    sub_1001A8358();
    swift_release();
    sub_1001A0DF4();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    [v27 invalidate];
  }
  swift_retain();
  sub_1001A8398();
  swift_release();
  uint64_t v23 = (void *)(v1 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_discoveryTasks);
  swift_beginAccess();
  void *v23 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_tasks) = &_swiftEmptySetSingleton;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v25 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_invalidationHandler);
  if (v25)
  {
    uint64_t v26 = swift_retain();
    v25(v26);
    return sub_10000F088((uint64_t)v25);
  }
  return result;
}

uint64_t sub_100109160()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A38C(&qword_100366538);
  uint64_t v108 = *(void *)(v2 - 8);
  uint64_t v109 = v2;
  __chkstk_darwin(v2);
  id v107 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000A38C(&qword_100366540);
  uint64_t v105 = *(void *)(v4 - 8);
  uint64_t v106 = v4;
  __chkstk_darwin(v4);
  id v104 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_10000A38C(&qword_100366548);
  uint64_t v95 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v93 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_10000A38C(&qword_100366550);
  uint64_t v96 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v94 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_10000A38C(&qword_100366558);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v90 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_10000A38C(&qword_100366560);
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  unint64_t v101 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_10000A38C(&qword_100366568);
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  unint64_t v87 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000A38C(&qword_10035AC20);
  __chkstk_darwin(v11 - 8);
  uint64_t v112 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_10000A38C(&qword_100366570);
  uint64_t v13 = __chkstk_darwin(v110);
  unint64_t v86 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = *(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_state);
  uint64_t v18 = *(char **)(v17 + 32);
  if (v18)
  {
    uint64_t v85 = (char *)&v74 - v15;
    uint64_t v111 = v16;
    uint64_t v99 = v17;
    uint64_t v100 = v1;
    uint64_t v19 = *(void **)&v18[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLDeviceDiscoverySubject + 8];
    uint64_t v118 = *(void **)&v18[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLDeviceDiscoverySubject];
    swift_bridgeObjectRetain();
    uint64_t v84 = v18;
    swift_retain();
    swift_retain();
    sub_10000A38C(&qword_100366578);
    uint64_t v20 = sub_10000B010(&qword_100366580, &qword_100366578);
    uint64_t v118 = (void *)Publisher.share()();
    sub_10000A38C(&qword_100366588);
    uint64_t v21 = sub_10000B010(&qword_100366590, &qword_100366588);
    NSString v22 = (void *)Publisher.eraseToAnyPublisher()();
    swift_release();
    uint64_t v118 = v19;
    uint64_t v83 = v20;
    uint64_t v118 = (void *)Publisher.share()();
    uint64_t v82 = v21;
    Publisher.eraseToAnyPublisher()();
    swift_release();

    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v118 = v22;
    if (qword_10035A628 != -1) {
      swift_once();
    }
    uint64_t v23 = (void *)qword_1003ACB50;
    id v119 = (id)qword_1003ACB50;
    uint64_t v24 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
    uint64_t v27 = v25 + 56;
    uint64_t v28 = (uint64_t)v112;
    v26(v112, 1, 1, v24);
    id v29 = v23;
    sub_10000A38C(&qword_100366598);
    id v30 = (char *)sub_100019E10(0, (unint64_t *)&qword_10035A680);
    uint64_t v31 = sub_10000B010(&qword_1003665A0, &qword_100366598);
    unint64_t v32 = sub_10003A8C0();
    unint64_t v33 = v85;
    uint64_t v84 = v30;
    uint64_t v81 = v31;
    unint64_t v80 = v32;
    Publisher.receive<A>(on:options:)();
    sub_10000D78C(v28, &qword_10035AC20);

    swift_release();
    swift_allocObject();
    uint64_t v1 = v100;
    swift_unknownObjectWeakInit();
    uint64_t v34 = sub_10000B010(&qword_1003665A8, &qword_100366570);
    uint64_t v35 = v110;
    uint64_t v79 = v34;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    uint64_t v36 = v111 + 8;
    uint64_t v85 = *(char **)(v111 + 8);
    ((void (*)(char *, uint64_t))v85)(v33, v35);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    uint64_t v17 = v99;
    uint64_t v37 = *(char **)(v99 + 32);
    if (v37)
    {
      uint64_t v76 = v27;
      uint64_t v77 = v26;
      uint64_t v78 = v24;
      uint64_t v111 = v36;
      id v38 = *(void **)&v37[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLDeviceDiscoverySubject + 8];
      uint64_t v118 = *(void **)&v37[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLDeviceDiscoverySubject];
      swift_bridgeObjectRetain();
      uint64_t v75 = v37;
      swift_retain();
      swift_retain();
      sub_10000A38C(&qword_100366578);
      uint64_t v118 = (void *)Publisher.share()();
      sub_10000A38C(&qword_100366588);
      Publisher.eraseToAnyPublisher()();
      swift_release();
      uint64_t v118 = v38;
      uint64_t v118 = (void *)Publisher.share()();
      uint64_t v39 = (void *)Publisher.eraseToAnyPublisher()();
      swift_release();

      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v118 = v39;
      if (qword_10035A628 != -1) {
        swift_once();
      }
      uint64_t v40 = (void *)qword_1003ACB50;
      id v119 = (id)qword_1003ACB50;
      uint64_t v41 = (uint64_t)v112;
      v77(v112, 1, 1, v78);
      id v42 = v40;
      sub_10000A38C(&qword_100366598);
      NSString v43 = v86;
      Publisher.receive<A>(on:options:)();
      sub_10000D78C(v41, &qword_10035AC20);

      swift_release();
      swift_allocObject();
      uint64_t v1 = v100;
      swift_unknownObjectWeakInit();
      uint64_t v44 = v110;
      Publisher<>.sink(receiveValue:)();
      swift_release();
      ((void (*)(char *, uint64_t))v85)(v43, v44);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      swift_release();
      uint64_t v17 = v99;
    }
  }
  long long v113 = xmmword_100291180;
  uint64_t v45 = *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_bluetoothProxy);
  if (v45)
  {
    uint64_t v118 = *(void **)(*(void *)(*(void *)(v45 + 24) + 16) + 40);
    sub_10000A38C(&qword_100365D28);
    sub_10000B010(&qword_1003664E8, &qword_100365D28);
    uint64_t v118 = (void *)Publisher.eraseToAnyPublisher()();
    sub_10000A38C(&qword_1003664F0);
    type metadata accessor for Identity();
    sub_10000B010(&qword_1003664F8, &qword_1003664F0);
    uint64_t v46 = v87;
    Publisher.map<A>(_:)();
    swift_release();
    sub_10000B010(&qword_1003665B0, &qword_100366568);
    uint64_t v47 = v89;
    uint64_t v48 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v46, v47);
  }
  else
  {
    uint64_t v48 = 0;
  }
  uint64_t v49 = v103;
  uint64_t v50 = v102;
  uint64_t v51 = v101;
  uint64_t v114 = v48;
  uint64_t v118 = *(void **)(*(void *)(*(void *)(v17 + 24) + 16) + 40);
  sub_10000A38C(&qword_100365088);
  sub_10000B010(&qword_1003650B8, &qword_100365088);
  uint64_t v118 = (void *)Publisher.eraseToAnyPublisher()();
  sub_10000A38C(&qword_100369940);
  type metadata accessor for Identity();
  sub_10000B010(&qword_1003665B8, &qword_100369940);
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_1003665C0, &qword_100366560);
  uint64_t v52 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v49);
  uint64_t v115 = v52;
  uint64_t v53 = *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_idsProxy);
  if (v53)
  {
    uint64_t v118 = *(void **)(*(void *)(v53 + OBJC_IVAR____TtC17proximitycontrold8IDSProxy_devices) + 40);
    sub_10000A38C((uint64_t *)&unk_100369910);
    sub_10000B010(&qword_1003665C8, (uint64_t *)&unk_100369910);
    uint64_t v118 = (void *)Publisher.eraseToAnyPublisher()();
    sub_10000A38C((uint64_t *)&unk_100369920);
    sub_10000B010(&qword_1003665D0, (uint64_t *)&unk_100369920);
    id v54 = v90;
    Publisher.map<A>(_:)();
    swift_release();
    sub_10000B010(&qword_1003665D8, &qword_100366558);
    uint64_t v55 = v92;
    uint64_t v56 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v54, v55);
  }
  else
  {
    uint64_t v56 = 0;
  }
  uint64_t v58 = v105;
  uint64_t v57 = v106;
  NSString v59 = v104;
  uint64_t v116 = v56;
  uint64_t v60 = *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_rpClientProxy);
  if (v60)
  {
    uint64_t v118 = *(void **)(*(void *)(*(void *)(v60 + 16) + 24) + 40);
    sub_10000A38C(&qword_1003665E0);
    sub_10000B010(&qword_1003665E8, &qword_1003665E0);
    uint64_t v118 = (void *)Publisher.eraseToAnyPublisher()();
    swift_getKeyPath();
    sub_10000A38C(&qword_1003665F0);
    sub_10000B010(&qword_1003665F8, &qword_1003665F0);
    uint64_t v61 = v93;
    Publisher.map<A>(_:)();
    swift_release();
    swift_release();
    sub_10000B010(&qword_100366600, &qword_100366548);
    id v62 = v94;
    uint64_t v63 = v97;
    Publisher.map<A>(_:)();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v61, v63);
    sub_10000B010(&qword_100366608, &qword_100366550);
    uint64_t v64 = v98;
    uint64_t v65 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v62, v64);
  }
  else
  {
    uint64_t v65 = 0;
  }
  uint64_t v117 = v65;
  uint64_t v118 = _swiftEmptyArrayStorage;
  if (v114)
  {
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (v118[2] >= v118[3] >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (v115)
  {
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (v118[2] >= v118[3] >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (v116)
  {
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (v118[2] >= v118[3] >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v66 = v107;
  if (v65)
  {
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (v118[2] >= v118[3] >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v67 = v118;
  sub_10000A38C(&qword_100366610);
  swift_arrayDestroy();
  uint64_t v118 = v67;
  sub_10000A38C(&qword_100366618);
  sub_10000A38C(&qword_100366620);
  sub_10000B010(&qword_100366628, &qword_100366618);
  sub_10000B010(&qword_100366630, &qword_100366620);
  Publishers.MergeMany.init<A>(_:)();
  if (qword_10035A628 != -1) {
    swift_once();
  }
  uint64_t v68 = (void *)qword_1003ACB50;
  uint64_t v118 = (void *)qword_1003ACB50;
  uint64_t v69 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v70 = (uint64_t)v112;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v112, 1, 1, v69);
  sub_100019E10(0, (unint64_t *)&qword_10035A680);
  sub_10000B010(&qword_100366638, &qword_100366538);
  sub_10003A8C0();
  id v71 = v68;
  uint64_t v72 = v109;
  Publisher.receive<A>(on:options:)();
  sub_10000D78C(v70, &qword_10035AC20);

  (*(void (**)(char *, uint64_t))(v108 + 8))(v66, v72);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10000B010(&qword_100366640, &qword_100366540);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v57);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

void sub_10010A6CC(void *a1)
{
  uint64_t v2 = v1;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  id v4 = [a1 description];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  v8._uint64_t countAndFlagsBits = v5;
  v8._unint64_t object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  id v9 = sub_1001F687C();
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 ulog:40 message:v10];
  swift_bridgeObjectRelease();

  if (([a1 statusFlags] & 4) != 0)
  {
    type metadata accessor for Identity();
    swift_allocObject();
    id v12 = a1;
    uint64_t v13 = sub_100099910((uint64_t)a1);
    goto LABEL_8;
  }
  if (([a1 statusFlags] & 2) != 0)
  {
    type metadata accessor for Identity();
    swift_allocObject();
    id v14 = a1;
    uint64_t v13 = sub_1000998F4((uint64_t)a1);
LABEL_8:
    uint64_t v15 = v13;
    uint64_t v16 = *(void *)(v2 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_identityStorage);
    uint64_t v17 = *(void **)(v16 + 32);
    swift_retain();
    [v17 lock];
    swift_beginAccess();
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = sub_1000F06FC(v18);
    swift_bridgeObjectRelease();
    [*(id *)(v16 + 32) unlock];
    swift_release();
    swift_retain();
    uint64_t v20 = sub_10010EBF8((unint64_t)v19, v15);
    swift_release();
    swift_release();
    if (v20)
    {
      sub_10010B60C(v20, v15);
      swift_release();
LABEL_16:
      swift_release();
      return;
    }
    if (([a1 statusFlags] & 4) != 0)
    {
      uint64_t v21 = 0;
    }
    else
    {
      if (([a1 statusFlags] & 2) == 0) {
        goto LABEL_18;
      }
      uint64_t v21 = a1;
      a1 = 0;
    }
    sub_10010B848(0, 0, 0, v21, 0, a1);
    if (v22)
    {
      uint64_t v23 = v22;
      swift_retain();
      _StringGuts.grow(_:)(23);
      swift_bridgeObjectRelease();
      v24._uint64_t countAndFlagsBits = sub_10009BB90();
      String.append(_:)(v24);
      swift_bridgeObjectRelease();
      id v25 = sub_1001F687C();
      swift_bridgeObjectRetain();
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v25 ulog:40 message:v26];
      swift_bridgeObjectRelease();

      sub_10010C830(v23);
      swift_release_n();
      goto LABEL_16;
    }
LABEL_18:
    id v27 = sub_1001F687C();
    NSString v28 = String._bridgeToObjectiveC()();
    [v27 ulog:60 message:v28];
    swift_release();

    return;
  }
  id v11 = sub_1001F687C();
  NSString v29 = String._bridgeToObjectiveC()();
  [v11 ulog:60 message:v29];
}

void sub_10010AAEC(void *a1)
{
  uint64_t v2 = v1;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  id v4 = [a1 description];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  v8._uint64_t countAndFlagsBits = v5;
  v8._unint64_t object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  id v9 = sub_1001F687C();
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 ulog:40 message:v10];
  swift_bridgeObjectRelease();

  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_state);
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = *(void **)(v12 + 32);
  id v14 = a1;
  swift_retain();
  [v13 lock];
  swift_beginAccess();
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_1000F06FC(v15);
  swift_bridgeObjectRelease();
  [*(id *)(v12 + 32) unlock];
  swift_release();
  uint64_t v17 = sub_10010448C((unint64_t)v16, v14);
  swift_release();
  if (v17) {
    goto LABEL_3;
  }
  uint64_t v18 = *(void *)(v11 + 16);
  uint64_t v19 = *(void **)(v18 + 32);
  id v20 = v14;
  swift_retain();
  [v19 lock];
  swift_beginAccess();
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_1000F06FC(v21);
  swift_bridgeObjectRelease();
  [*(id *)(v18 + 32) unlock];
  swift_release();
  uint64_t v17 = sub_10010448C((unint64_t)v22, v20);
  swift_release();
  if (v17)
  {
LABEL_3:
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.setter();
    swift_retain();
    v23._uint64_t countAndFlagsBits = sub_1001F78E0();
    String.append(_:)(v23);
    swift_release();
    swift_bridgeObjectRelease();
    id v24 = sub_1001F687C();
    swift_bridgeObjectRetain();
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v24 ulog:40 message:v25];
    swift_bridgeObjectRelease();

    swift_retain();
    uint64_t v26 = swift_retain();
    sub_1001130DC(v26);
    swift_release();
    swift_release();
    id v27 = *(void **)(*(void *)(v2 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent__rangingProxy) + 24);
    if (v27)
    {
      id v28 = v27;
      sub_1001A0038(v17);
    }
    swift_retain();
    swift_retain();
    sub_10021278C(v17);
    swift_release();
    swift_release_n();
    swift_release();
  }
  else
  {
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease();
    id v29 = [v20 description];
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v32 = v31;

    v33._uint64_t countAndFlagsBits = v30;
    v33._unint64_t object = v32;
    String.append(_:)(v33);
    swift_bridgeObjectRelease();
    id v34 = sub_1001F687C();
    swift_bridgeObjectRetain();
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v34 ulog:10 message:v35];
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10010B044@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10010B08C(a1, (uint64_t (*)(void *))sub_10009951C, a2);
}

uint64_t sub_10010B05C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10010B08C(a1, (uint64_t (*)(void *))sub_100099534, a2);
}

uint64_t sub_10010B074@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10010B08C(a1, (uint64_t (*)(void *))sub_10009954C, a2);
}

uint64_t sub_10010B08C@<X0>(void **a1@<X0>, uint64_t (*a2)(void *)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  type metadata accessor for Identity();
  swift_allocObject();
  id v6 = v5;
  uint64_t result = a2(v5);
  *a3 = result;
  return result;
}

void sub_10010B0EC(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  type metadata accessor for Identity();
  swift_allocObject();
  id v4 = v3;
  uint64_t v5 = sub_10009EE78(v4);

  *a2 = v5;
}

void sub_10010B148(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (void *)Strong;
    a3(v4);
  }
}

void sub_10010B1B8(uint64_t a1)
{
  uint64_t v2 = v1;
  v4._uint64_t countAndFlagsBits = sub_10009BB90();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  id v5 = sub_1001F687C();
  swift_bridgeObjectRetain();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 ulog:40 message:v6];
  swift_bridgeObjectRelease();

  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_identityStorage);
  Swift::String v8 = *(void **)(v7 + 32);
  swift_retain();
  [v8 lock];
  swift_beginAccess();
  uint64_t v9 = swift_bridgeObjectRetain();
  NSString v10 = sub_1000F06FC(v9);
  swift_bridgeObjectRelease();
  [*(id *)(v7 + 32) unlock];
  swift_release();
  swift_retain();
  uint64_t v11 = sub_10010EBF8((unint64_t)v10, a1);
  swift_release();
  swift_release();
  if (v11)
  {
    sub_10010B60C(v11, a1);
    swift_release();
    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v12 = *(void **)(a1 + OBJC_IVAR____TtC17proximitycontrold8Identity_idsDevice);
  swift_getKeyPath();
  swift_getKeyPath();
  id v13 = v12;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v14 = *(void *)(a1 + OBJC_IVAR____TtC17proximitycontrold8Identity_rapportIdentities);
  if (v14)
  {
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = (void *)_CocoaArrayWrapper.endIndex.getter();
      if (v15) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v15 = *(void **)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v15)
      {
LABEL_6:
        if ((v14 & 0xC000000000000001) != 0)
        {
          id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v16 = *(id *)(v14 + 32);
        }
        uint64_t v15 = v16;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v15 = 0;
LABEL_12:
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_10010B848(v21, v21, v12, v21, v15, v21);
  uint64_t v18 = v17;

  if (v18)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();

    if (v21) {
      sub_10010C830(v18);
    }
    swift_release();
  }
  else
  {
    id v19 = sub_1001F687C();
    NSString v20 = String._bridgeToObjectiveC()();
    [v19 ulog:40 message:v20];
  }
}

uint64_t sub_10010B60C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_10009D62C(a2);
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = sub_10009BB90();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  id v5 = sub_1001F687C();
  swift_bridgeObjectRetain();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 ulog:40 message:v6];
  swift_bridgeObjectRelease();

  uint64_t v7 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_state) + 16);
  Swift::String v8 = *(void **)(v7 + 32);
  swift_retain();
  swift_retain();
  [v8 lock];
  swift_beginAccess();
  uint64_t v9 = swift_bridgeObjectRetain();
  NSString v10 = sub_1000F06FC(v9);
  swift_bridgeObjectRelease();
  [*(id *)(v7 + 32) unlock];
  swift_release();
  uint64_t v11 = sub_1001042F0((unint64_t)v10);
  uint64_t result = swift_release();
  if (v11)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_100098724();
    uint64_t v14 = v13;
    swift_release();
    swift_bridgeObjectRelease();
    if (v14)
    {
      if (*(void *)(v3 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_sharingProxy))
      {
        swift_retain();
        sub_1000CC1E4(v11);
        swift_release();
      }
    }
    return swift_release_n();
  }
  return result;
}

void sub_10010B848(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = sub_10000A38C(&qword_10036C090);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v115 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v116 = (char *)&v113 - v17;
  uint64_t v118 = type metadata accessor for UUID();
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  long long v113 = (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v128 = a1;
  if (a1)
  {
    sub_10000A38C(&qword_10035C280);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_100293270;
    *(void *)(v19 + 32) = a1;
    v133 = (void *)v19;
    specialized Array._endMutation()();
    NSString v20 = v133;
  }
  else
  {
    uint64_t v21 = *(void *)(v6 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_bluetoothProxy);
    if (v21)
    {
      uint64_t v22 = *(void **)(v21 + OBJC_IVAR____TtC17proximitycontrold14BluetoothProxy_cbDiscovery);
      if (v22)
      {
        swift_retain();
        id v23 = [v22 discoveredDevices];
        sub_100019E10(0, (unint64_t *)&unk_100365C90);
        unint64_t v126 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
        swift_release();

        goto LABEL_8;
      }
    }
    NSString v20 = _swiftEmptyArrayStorage;
  }
  unint64_t v126 = v20;
LABEL_8:
  v127 = a6;
  Swift::UInt64 v129 = (Swift::UInt64)a3;
  id v120 = a5;
  id v119 = a4;
  if (a4)
  {
    sub_10000A38C(&qword_10035C280);
    uint64_t v24 = swift_allocObject();
    NSString v25 = &unk_100293000;
    *(_OWORD *)(v24 + 16) = xmmword_100293270;
    *(void *)(v24 + 32) = a4;
    v133 = (void *)v24;
    specialized Array._endMutation()();
    NSString v125 = v133;
    id v26 = v128;
    uint64_t v121 = 0;
    if (a5) {
      goto LABEL_10;
    }
LABEL_35:
    uint64_t v47 = *(void *)(v7 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_rpClientProxy);
    if (!v47)
    {
      id v57 = a4;
      id v124 = _swiftEmptyArrayStorage;
      if (!a6) {
        goto LABEL_51;
      }
LABEL_11:
      sub_10000A38C(&qword_10035C280);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = v25[39];
      *(void *)(v29 + 32) = a6;
      id v132 = (void *)v29;
      specialized Array._endMutation()();
      uint64_t v30 = v132;
      id v31 = a5;
      if (a2) {
        goto LABEL_12;
      }
LABEL_72:
      uint64_t v69 = *(void *)(*(void *)(*(void *)(v7 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_state) + 24)
                      + 16);
      uint64_t v70 = *(void **)(v69 + 32);
      id v71 = a6;
      swift_retain();
      [v70 lock];
      swift_beginAccess();
      uint64_t v72 = swift_bridgeObjectRetain();
      Swift::String v123 = sub_1000F0808(v72);
      swift_bridgeObjectRelease();
      [*(id *)(v69 + 32) unlock];
      NSString v25 = (_OWORD *)&unk_100293000;
      swift_release();
      if (a3) {
        goto LABEL_13;
      }
      goto LABEL_73;
    }
    uint64_t v48 = *(void *)(*(void *)(v47 + 16) + 24);
    uint64_t v49 = *(void **)(v48 + 32);
    id v50 = a4;
    swift_retain();
    [v49 lock];
    swift_beginAccess();
    uint64_t v51 = swift_bridgeObjectRetain();
    unint64_t v52 = (unint64_t)sub_1000F06FC(v51);
    swift_bridgeObjectRelease();
    [*(id *)(v48 + 32) unlock];
    swift_release();
    if ((v52 & 0x8000000000000000) != 0 || (v52 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      if (v53) {
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v53 = *(void *)(v52 + 16);
      if (v53)
      {
LABEL_39:
        id v132 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        if (v53 < 0)
        {
LABEL_113:
          __break(1u);
          goto LABEL_114;
        }
        uint64_t v54 = 0;
        do
        {
          if ((v52 & 0xC000000000000001) != 0)
          {
            uint64_t v55 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v55 = *(void *)(v52 + 8 * v54 + 32);
            swift_retain();
          }
          ++v54;
          swift_beginAccess();
          id v56 = *(id *)(v55 + 32);
          swift_release();
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        while (v53 != v54);
        id v124 = v132;
        swift_release();
        a6 = v127;
LABEL_50:
        a3 = (void *)v129;
        NSString v25 = (_OWORD *)&unk_100293000;
        if (!a6) {
          goto LABEL_51;
        }
        goto LABEL_11;
      }
    }
    swift_release();
    id v124 = _swiftEmptyArrayStorage;
    goto LABEL_50;
  }
  uint64_t v36 = *(char **)(*(void *)(v7 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_state) + 32);
  if (v36)
  {
    uint64_t v37 = *(void **)&v36[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLClient];
    id v38 = v128;
    if (v37)
    {
      uint64_t v39 = v36;
      id v40 = [v37 activeDevices];
      sub_100019E10(0, &qword_10035E350);
      unint64_t v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      unint64_t v41 = (unint64_t)_swiftEmptyArrayStorage;
    }
    v133 = _swiftEmptyArrayStorage;
    if (v41 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v43) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v43 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v43)
      {
LABEL_22:
        if (v43 < 1)
        {
LABEL_112:
          __break(1u);
          goto LABEL_113;
        }
        for (uint64_t i = 0; i != v43; ++i)
        {
          if ((v41 & 0xC000000000000001) != 0) {
            id v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v45 = *(id *)(v41 + 8 * i + 32);
          }
          uint64_t v46 = v45;
          if ((objc_msgSend(v45, "statusFlags", v113) & 2) != 0)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          else
          {
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v121 = 0;
        NSString v125 = v133;
        a5 = v120;
        a4 = v119;
        a6 = v127;
LABEL_34:
        a3 = (void *)v129;
        NSString v25 = (_OWORD *)&unk_100293000;
        if (!a5) {
          goto LABEL_35;
        }
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v121 = 0;
    NSString v125 = _swiftEmptyArrayStorage;
    goto LABEL_34;
  }
  id v42 = v128;
  uint64_t v121 = 0;
  NSString v125 = _swiftEmptyArrayStorage;
  NSString v25 = (_OWORD *)&unk_100293000;
  if (!a5) {
    goto LABEL_35;
  }
LABEL_10:
  sub_10000A38C(&qword_10035C280);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = v25[39];
  *(void *)(v27 + 32) = a5;
  v133 = (void *)v27;
  specialized Array._endMutation()();
  id v124 = v133;
  id v28 = a4;
  if (a6) {
    goto LABEL_11;
  }
LABEL_51:
  uint64_t v58 = *(char **)(*(void *)(v7 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_state) + 32);
  if (!v58)
  {
    id v64 = a5;
    uint64_t v30 = _swiftEmptyArrayStorage;
    if (!a2) {
      goto LABEL_72;
    }
LABEL_12:
    sub_10000A38C(&qword_10035C280);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = v25[39];
    *(void *)(v32 + 32) = a2;
    id v132 = (void *)v32;
    specialized Array._endMutation()();
    Swift::String v123 = v132;
    id v33 = a6;
    if (a3)
    {
LABEL_13:
      sub_10000A38C(&qword_10035C280);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = v25[39];
      *(void *)(v34 + 32) = a3;
      uint64_t v131 = (void *)v34;
      specialized Array._endMutation()();
      Swift::String v122 = v131;
      id v35 = a2;
      goto LABEL_76;
    }
LABEL_73:
    uint64_t v73 = *(void *)(v7 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_idsProxy);
    if (v73)
    {
      uint64_t v74 = *(void *)(v73 + OBJC_IVAR____TtC17proximitycontrold8IDSProxy_devices);
      uint64_t v75 = *(void **)(v74 + 32);
      id v76 = a2;
      swift_retain();
      [v75 lock];
      swift_beginAccess();
      uint64_t v77 = swift_bridgeObjectRetain();
      Swift::String v122 = sub_1000F0808(v77);
      swift_bridgeObjectRelease();
      [*(id *)(v74 + 32) unlock];
      swift_release();
    }
    else
    {
      id v78 = a2;
      Swift::String v122 = _swiftEmptyArrayStorage;
    }
LABEL_76:
    uint64_t v79 = *(void *)(*(void *)(v7 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_state) + 16);
    unint64_t v80 = *(void **)(v79 + 32);
    id v81 = a3;
    swift_retain();
    [v80 lock];
    swift_beginAccess();
    uint64_t v82 = swift_bridgeObjectRetain();
    unint64_t v83 = (unint64_t)sub_1000F06FC(v82);
    swift_bridgeObjectRelease();
    [*(id *)(v79 + 32) unlock];
    swift_release();
    unint64_t v130 = (unint64_t)_swiftEmptyArrayStorage;
    id v114 = v81;
    if ((v83 & 0x8000000000000000) != 0 || (v83 & 0x4000000000000000) != 0)
    {
      swift_retain();
      uint64_t v84 = _CocoaArrayWrapper.endIndex.getter();
      if (v84) {
        goto LABEL_79;
      }
    }
    else
    {
      uint64_t v84 = *(void *)(v83 + 16);
      swift_retain();
      if (v84)
      {
LABEL_79:
        if (v84 >= 1)
        {
          unint64_t v85 = (unint64_t)v30;
          for (uint64_t j = 0; j != v84; ++j)
          {
            if ((v83 & 0xC000000000000001) != 0) {
              specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              swift_retain();
            }
            swift_getKeyPath();
            swift_getKeyPath();
            static Published.subscript.getter();
            swift_release();
            swift_release();
            swift_release();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          swift_release();
          unint64_t v87 = v120;
          Swift::UInt64 v88 = v129;
LABEL_90:
          swift_release();
          Swift::UInt64 v129 = sub_10010FD50((unint64_t)v126, (unint64_t)v123, (unint64_t)v122, (unint64_t)v124, (unint64_t)v125, v85);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v128 && (id v89 = [v128 identifier]) != 0)
          {
            uint64_t v90 = v89;
            uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v93 = v92;

            swift_bridgeObjectRetain();
            sub_10010E51C(v129, v91, v93);
          }
          else
          {
            if (v88)
            {
              id v94 = [v114 nsuuid];
              uint64_t v95 = v127;
              uint64_t v96 = v118;
              uint64_t v97 = v117;
              uint64_t v98 = (uint64_t)v116;
              if (v94)
              {
                uint64_t v99 = v94;
                uint64_t v100 = (uint64_t)v115;
                static UUID._unconditionallyBridgeFromObjectiveC(_:)();

                uint64_t v101 = 0;
              }
              else
              {
                uint64_t v101 = 1;
                uint64_t v100 = (uint64_t)v115;
              }
              uint64_t v102 = v119;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 56))(v100, v101, 1, v96);
              sub_100110784(v100, v98);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v98, 1, v96) != 1)
              {
                uint64_t v106 = v113;
                uint64_t v107 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 32))(v113, v98, v96);
                __chkstk_darwin(v107);
                *(&v113 - 2) = v106;
                sub_100104750(sub_1001107EC, (uint64_t)(&v113 - 4), v129);
                (*(void (**)(char *, uint64_t))(v97 + 8))(v106, v96);
LABEL_106:
                swift_bridgeObjectRelease();
                return;
              }
            }
            else
            {
              uint64_t v98 = (uint64_t)v116;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v117 + 56))(v116, 1, 1, v118);
              uint64_t v95 = v127;
              uint64_t v102 = v119;
            }
            sub_10000D78C(v98, &qword_10036C090);
            if (v95)
            {
              id v103 = [v95 effectiveIdentifier];
              uint64_t v104 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v93 = v105;

              swift_bridgeObjectRetain();
            }
            else
            {
              if (!v102)
              {
                if (!v87) {
                  goto LABEL_106;
                }
                id v110 = [v87 identifier];
                if (!v110) {
                  goto LABEL_106;
                }
                uint64_t v111 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                unint64_t v93 = v112;

                swift_bridgeObjectRetain();
                sub_10010E928(v129, v111, v93);
                goto LABEL_105;
              }
              id v108 = [v102 effectiveIdentifier];
              uint64_t v104 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v93 = v109;

              swift_bridgeObjectRetain();
            }
            sub_10010E720(v129, v104, v93);
          }
LABEL_105:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          Swift::UInt64 v129 = v93;
          goto LABEL_106;
        }
        __break(1u);
        goto LABEL_112;
      }
    }
    Swift::UInt64 v88 = (Swift::UInt64)a3;
    unint64_t v87 = a5;
    unint64_t v85 = (unint64_t)v30;
    swift_release();
    goto LABEL_90;
  }
  NSString v59 = *(void **)&v58[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLClient];
  id v60 = a5;
  if (v59)
  {
    uint64_t v61 = v58;
    id v62 = [v59 activeDevices];
    sub_100019E10(0, &qword_10035E350);
    unint64_t v63 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    unint64_t v63 = (unint64_t)_swiftEmptyArrayStorage;
  }
  id v132 = _swiftEmptyArrayStorage;
  if (!(v63 >> 62))
  {
    uint64_t v65 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v65) {
      goto LABEL_59;
    }
LABEL_70:
    swift_bridgeObjectRelease();
    uint64_t v30 = _swiftEmptyArrayStorage;
    goto LABEL_71;
  }
  swift_bridgeObjectRetain();
  uint64_t v65 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v65) {
    goto LABEL_70;
  }
LABEL_59:
  if (v65 >= 1)
  {
    for (uint64_t k = 0; k != v65; ++k)
    {
      if ((v63 & 0xC000000000000001) != 0) {
        id v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v67 = *(id *)(v63 + 8 * k + 32);
      }
      uint64_t v68 = v67;
      if ((objc_msgSend(v67, "statusFlags", v113) & 4) != 0)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v30 = v132;
    a5 = v120;
    a6 = v127;
LABEL_71:
    a3 = (void *)v129;
    NSString v25 = (_OWORD *)&unk_100293000;
    if (!a2) {
      goto LABEL_72;
    }
    goto LABEL_12;
  }
LABEL_114:
  __break(1u);
}

uint64_t sub_10010C830(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v20[0] - 8);
  __chkstk_darwin(v20[0]);
  NSString v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t aBlock = (void **)0xD00000000000001BLL;
  unint64_t v22 = 0x80000001002BE950;
  v11._uint64_t countAndFlagsBits = sub_10009BB90();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  id v12 = sub_1001F687C();
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 ulog:40 message:v13];
  swift_bridgeObjectRelease();

  swift_retain();
  sub_1001225E0(a1);
  swift_release();
  if (qword_10035A628 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_1003ACB50;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v2;
  *(void *)(v15 + 24) = a1;
  NSString v25 = sub_10010FD10;
  uint64_t v26 = v15;
  unint64_t aBlock = _NSConcreteStackBlock;
  unint64_t v22 = 1107296256;
  id v23 = sub_10007A0AC;
  uint64_t v24 = &unk_100328530;
  uint64_t v16 = _Block_copy(&aBlock);
  id v17 = v14;
  id v18 = v2;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v20[1] = _swiftEmptyArrayStorage;
  sub_10007C744((unint64_t *)&qword_100363D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A38C((uint64_t *)&unk_10035E800);
  sub_10000B010(qword_100363D60, (uint64_t *)&unk_10035E800);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, void))(v8 + 8))(v10, v20[0]);
  return swift_release();
}

void sub_10010CBE4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = type metadata accessor for DiscoveryTokenStateMachine.Input(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = 0x20444E554F46;
  unint64_t v46 = 0xE600000000000000;
  v8._uint64_t countAndFlagsBits = sub_10009BB90();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  id v9 = sub_1001F687C();
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 ulog:40 message:v10];
  swift_bridgeObjectRelease();

  swift_retain();
  uint64_t v11 = swift_retain();
  uint64_t v12 = sub_1001123C0(v11, a1);
  swift_release();
  swift_release();
  if (v12)
  {
    uint64_t v45 = 0;
    unint64_t v46 = 0xE000000000000000;
    _StringGuts.grow(_:)(59);
    v13._uint64_t countAndFlagsBits = 0xD000000000000026;
    v13._unint64_t object = (void *)0x80000001002BE7B0;
    String.append(_:)(v13);
    v14._uint64_t countAndFlagsBits = sub_10009BB90();
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    v15._unint64_t object = (void *)0x80000001002BE7E0;
    v15._uint64_t countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v15);
    v16._uint64_t countAndFlagsBits = sub_1001F78E0();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    id v17 = sub_1001F687C();
    swift_bridgeObjectRetain();
    id v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v17 ulog:40 message:v40];
    swift_bridgeObjectRelease();
    swift_release();

    id v18 = v40;
  }
  else
  {
    uint64_t v39 = ObjectType;
    id v40 = v7;
    uint64_t v19 = *(void *)&v2[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_model + 8];
    uint64_t v45 = a1;
    unint64_t v46 = (unint64_t)v2;
    uint64_t v47 = &off_10032AC98;
    uint64_t v48 = v19;
    char v49 = 0;
    type metadata accessor for HandoffDevice();
    swift_allocObject();
    swift_retain();
    v38[1] = v19;
    swift_retain();
    NSString v20 = v2;
    uint64_t v21 = sub_10004525C(&v45);
    v38[0] = v20;
    if (*(void *)&v20[OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_sharingProxy])
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v22 = v41[0];
      uint64_t v23 = v41[1];
      uint64_t v25 = v42;
      uint64_t v24 = v43;
      char v26 = v44;
    }
    else
    {
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v25 = 0;
      uint64_t v24 = 0;
      char v26 = 0;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    v41[0] = v22;
    v41[1] = v23;
    uint64_t v42 = v25;
    uint64_t v43 = v24;
    char v44 = v26;
    swift_retain();
    static Published.subscript.setter();
    v41[0] = 0;
    v41[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(16);
    swift_bridgeObjectRelease();
    strcpy((char *)v41, "HANDOFF FOUND ");
    HIBYTE(v41[1]) = -18;
    v27._uint64_t countAndFlagsBits = sub_1001F78E0();
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    id v28 = sub_1001F687C();
    swift_bridgeObjectRetain();
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v28 ulog:40 message:v29];
    swift_bridgeObjectRelease();

    swift_retain();
    sub_100121FA8(v21);
    swift_release();
    uint64_t v30 = (void *)v38[0];
    v41[0] = v21;
    PassthroughSubject.send(_:)();
    *(void *)(v21 + OBJC_IVAR____TtC17proximitycontrold13HandoffDevice_discoveryTokenSyncDelegate + 8) = &off_10032AC98;
    swift_unknownObjectWeakAssign();
    type metadata accessor for DiscoveryTokenStateMachine(0);
    id v31 = v40;
    sub_1000126C8(v40);
    v41[0] = 0;
    v41[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(35);
    swift_bridgeObjectRelease();
    v41[0] = 0xD000000000000019;
    v41[1] = 0x80000001002B4090;
    v32._uint64_t countAndFlagsBits = sub_100013C14();
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    v33._uint64_t countAndFlagsBits = 0x203A6F742027;
    v33._unint64_t object = (void *)0xE600000000000000;
    String.append(_:)(v33);
    swift_retain();
    uint64_t v34 = sub_1001F7514();
    uint64_t v36 = v35;
    swift_release();
    v37._uint64_t countAndFlagsBits = v34;
    v37._unint64_t object = v36;
    String.append(_:)(v37);
    swift_bridgeObjectRelease();
    sub_10016ABE4(v41[0], (void *)v41[1], 0, v39, (uint64_t)&off_100328368);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_100157294((uint64_t)v31);
    swift_endAccess();
    swift_release();

    swift_release();
    swift_release();
    sub_100014F00((uint64_t)v31);
  }
}

void sub_10010D1DC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(*(void *)(Strong + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent__rangingProxy) + 24);
    id v3 = v2;

    if (v2)
    {
      sub_10019F064();
    }
  }
}

unsigned char *sub_10010D258@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_10010D264(unsigned __int8 *a1)
{
  unsigned __int8 v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    uint64_t v4 = *(void **)(*(void *)(Strong + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent__rangingProxy) + 24);
    id v5 = v4;

    if (v4)
    {
      sub_10019F244(v1);
    }
  }
}

uint64_t sub_10010D2E8(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v34 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A38C(&qword_100366648);
  __chkstk_darwin(v7);
  id v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A38C(&qword_10036C090);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  Swift::String v14 = (char *)&v34 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  id v17 = (char *)&v34 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v34 - v18;
  NSString v20 = *(void **)(*a1 + OBJC_IVAR____TtC17proximitycontrold8Identity_idsDevice);
  uint64_t v35 = v21;
  if (v20)
  {
    id v22 = [v20 nsuuid];
    if (v22)
    {
      uint64_t v23 = v22;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v24(v17, 0, 1, v4);
    }
    else
    {
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v24(v17, 1, 1, v4);
    }
    sub_100110784((uint64_t)v17, (uint64_t)v19);
  }
  else
  {
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v24((char *)&v34 - v18, 1, 1, v4);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, a2, v4);
  v24(v14, 0, 1, v4);
  uint64_t v25 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1000D6178((uint64_t)v19, (uint64_t)v9);
  sub_1000D6178((uint64_t)v14, v25);
  char v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v26((uint64_t)v9, 1, v4) == 1)
  {
    Swift::String v27 = &qword_10036C090;
    sub_10000D78C((uint64_t)v14, &qword_10036C090);
    sub_10000D78C((uint64_t)v19, &qword_10036C090);
    if (v26(v25, 1, v4) == 1)
    {
      char v28 = -1;
    }
    else
    {
      Swift::String v27 = &qword_100366648;
      char v28 = 0;
    }
  }
  else
  {
    uint64_t v29 = v35;
    sub_1000D6178((uint64_t)v9, v35);
    if (v26(v25, 1, v4) == 1)
    {
      sub_10000D78C((uint64_t)v14, &qword_10036C090);
      sub_10000D78C((uint64_t)v19, &qword_10036C090);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v29, v4);
      char v28 = 0;
      Swift::String v27 = &qword_100366648;
    }
    else
    {
      uint64_t v30 = v29;
      id v31 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v34, v25, v4);
      sub_10007C744((unint64_t *)&qword_10036C0C0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v28 = dispatch thunk of static Equatable.== infix(_:_:)();
      Swift::String v32 = *(void (**)(char *, uint64_t))(v5 + 8);
      v32(v31, v4);
      Swift::String v27 = &qword_10036C090;
      sub_10000D78C((uint64_t)v14, &qword_10036C090);
      sub_10000D78C((uint64_t)v19, &qword_10036C090);
      v32((char *)v30, v4);
    }
  }
  sub_10000D78C((uint64_t)v9, v27);
  return v28 & 1;
}

uint64_t destroy for NearbyAgentModel()
{
  swift_release();

  return swift_release();
}

void *_s17proximitycontrold16NearbyAgentModelVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for NearbyAgentModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for NearbyAgentModel(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyAgentModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyAgentModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyAgentModel()
{
  return &type metadata for NearbyAgentModel;
}

uint64_t sub_10010D998()
{
  uint64_t v1 = v0;
  sub_10000A38C((uint64_t *)&unk_10035E7E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10028D430;
  *(void *)(v2 + 32) = 0xD000000000000011;
  *(void *)(v2 + 40) = 0x80000001002BE800;
  unint64_t v86 = 0x3D736B736154;
  unint64_t v87 = 0xE600000000000000;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_tasks);
  if ((v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = __CocoaSet.count.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)(v3 + 16);
  }
  uint64_t v95 = v4;
  v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  unint64_t v6 = v86;
  unint64_t v7 = v87;
  uint64_t v8 = sub_10008892C(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v10 = *((void *)v8 + 2);
  unint64_t v9 = *((void *)v8 + 3);
  if (v10 >= v9 >> 1) {
    uint64_t v8 = sub_10008892C((char *)(v9 > 1), v10 + 1, 1, v8);
  }
  *((void *)v8 + 2) = v10 + 1;
  uint64_t v11 = &v8[16 * v10];
  *((void *)v11 + 4) = v6;
  *((void *)v11 + 5) = v7;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  unint64_t v86 = 0x7265766F63736944;
  unint64_t v87 = 0xEF3D736B73615479;
  uint64_t v12 = (uint64_t *)(v1 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_discoveryTasks);
  swift_beginAccess();
  uint64_t v13 = *v12;
  if ((v13 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = __CocoaSet.count.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)(v13 + 16);
  }
  uint64_t v94 = v14;
  v15._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  unint64_t v16 = v86;
  unint64_t v17 = v87;
  unint64_t v19 = *((void *)v8 + 2);
  unint64_t v18 = *((void *)v8 + 3);
  if (v19 >= v18 >> 1) {
    uint64_t v8 = sub_10008892C((char *)(v18 > 1), v19 + 1, 1, v8);
  }
  *((void *)v8 + 2) = v19 + 1;
  NSString v20 = &v8[16 * v19];
  *((void *)v20 + 4) = v16;
  *((void *)v20 + 5) = v17;
  unint64_t v86 = 0x697469746E656469;
  unint64_t v87 = 0xEB000000003D7365;
  uint64_t v21 = *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_identityStorage);
  id v22 = *(void **)(v21 + 32);
  swift_retain();
  [v22 lock];
  swift_beginAccess();
  uint64_t v23 = swift_bridgeObjectRetain();
  unint64_t v24 = (unint64_t)sub_1000F06FC(v23);
  swift_bridgeObjectRelease();
  [*(id *)(v21 + 32) unlock];
  swift_release();
  if ((v24 & 0x8000000000000000) != 0 || (v24 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
  }
  else
  {
    uint64_t v25 = *(void *)(v24 + 16);
  }
  swift_release();
  uint64_t v93 = v25;
  v26._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  unint64_t v27 = v86;
  unint64_t v28 = v87;
  unint64_t v30 = *((void *)v8 + 2);
  unint64_t v29 = *((void *)v8 + 3);
  uint64_t v85 = v1;
  if (v30 >= v29 >> 1) {
    uint64_t v8 = sub_10008892C((char *)(v29 > 1), v30 + 1, 1, v8);
  }
  *((void *)v8 + 2) = v30 + 1;
  id v31 = &v8[16 * v30];
  *((void *)v31 + 4) = v27;
  *((void *)v31 + 5) = v28;
  unint64_t v86 = (unint64_t)v8;
  swift_bridgeObjectRetain();
  sub_10000A38C((uint64_t *)&unk_100367D40);
  sub_10000B010((unint64_t *)&qword_10035E7F0, (uint64_t *)&unk_100367D40);
  uint64_t v32 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  unint64_t v36 = *(void *)(v2 + 16);
  unint64_t v35 = *(void *)(v2 + 24);
  if (v36 >= v35 >> 1) {
    uint64_t v2 = (uint64_t)sub_10008892C((char *)(v35 > 1), v36 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v36 + 1;
  uint64_t v37 = v2 + 16 * v36;
  *(void *)(v37 + 32) = v32;
  *(void *)(v37 + 40) = v34;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  unint64_t v86 = 0xD000000000000010;
  unint64_t v87 = 0x80000001002BE820;
  unint64_t v38 = *(void *)(v85 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_state);
  uint64_t v39 = *(void *)(v38 + 16);
  id v40 = *(void **)(v39 + 32);
  swift_retain();
  [v40 lock];
  swift_beginAccess();
  uint64_t v41 = swift_bridgeObjectRetain();
  unint64_t v42 = (unint64_t)sub_1000F06FC(v41);
  swift_bridgeObjectRelease();
  [*(id *)(v39 + 32) unlock];
  swift_release();
  if ((v42 & 0x8000000000000000) != 0 || (v42 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
  }
  else
  {
    uint64_t v43 = *(void *)(v42 + 16);
  }
  swift_release();
  uint64_t v92 = v43;
  v44._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v44);
  swift_bridgeObjectRelease();
  v45._uint64_t countAndFlagsBits = 41;
  v45._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  uint64_t v46 = v86;
  unint64_t v47 = v87;
  unint64_t v49 = *(void *)(v2 + 16);
  unint64_t v48 = *(void *)(v2 + 24);
  if (v49 >= v48 >> 1) {
    uint64_t v2 = (uint64_t)sub_10008892C((char *)(v48 > 1), v49 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v49 + 1;
  uint64_t v50 = v2 + 16 * v49;
  *(void *)(v50 + 32) = v46;
  *(void *)(v50 + 40) = v47;
  int64_t v51 = *(void *)(v38 + 16);
  unint64_t v52 = *(void **)(v51 + 32);
  swift_retain();
  [v52 lock];
  swift_beginAccess();
  uint64_t v53 = swift_bridgeObjectRetain();
  unint64_t v54 = (unint64_t)sub_1000F06FC(v53);
  swift_bridgeObjectRelease();
  [*(id *)(v51 + 32) unlock];
  swift_release();
  if ((v54 & 0x8000000000000000) != 0 || (v54 & 0x4000000000000000) != 0)
  {
    swift_retain();
    uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
    if (!v55) {
      goto LABEL_38;
    }
  }
  else
  {
    uint64_t v55 = *(void *)(v54 + 16);
    swift_retain();
    if (!v55) {
      goto LABEL_38;
    }
  }
  if (v55 < 1)
  {
    __break(1u);
LABEL_55:
    uint64_t v2 = (uint64_t)sub_10008892C((char *)(v56 > 1), v51, 1, (char *)v2);
    goto LABEL_40;
  }
  uint64_t v57 = 0;
  do
  {
    if ((v54 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    unint64_t v86 = 2108704;
    unint64_t v87 = 0xE300000000000000;
    v58._uint64_t countAndFlagsBits = sub_1001F78E0();
    String.append(_:)(v58);
    swift_bridgeObjectRelease();
    unint64_t v60 = *(void *)(v2 + 16);
    unint64_t v59 = *(void *)(v2 + 24);
    if (v60 >= v59 >> 1) {
      uint64_t v2 = (uint64_t)sub_10008892C((char *)(v59 > 1), v60 + 1, 1, (char *)v2);
    }
    ++v57;
    *(void *)(v2 + 16) = v60 + 1;
    uint64_t v61 = v2 + 16 * v60;
    *(void *)(v61 + 32) = 2108704;
    *(void *)(v61 + 40) = 0xE300000000000000;
    swift_release();
  }
  while (v55 != v57);
LABEL_38:
  swift_release_n();
  swift_bridgeObjectRelease();
  uint64_t v55 = v85;
  if (!*(void *)(v85 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent_bluetoothProxy)) {
    goto LABEL_41;
  }
  unint64_t v86 = 10;
  unint64_t v87 = 0xE100000000000000;
  swift_retain();
  v62._uint64_t countAndFlagsBits = sub_1000EF528();
  String.append(_:)(v62);
  swift_bridgeObjectRelease();
  uint64_t v46 = 10;
  unint64_t v38 = 0xE100000000000000;
  unint64_t v49 = *(void *)(v2 + 16);
  unint64_t v56 = *(void *)(v2 + 24);
  int64_t v51 = v49 + 1;
  if (v49 >= v56 >> 1) {
    goto LABEL_55;
  }
LABEL_40:
  *(void *)(v2 + 16) = v51;
  uint64_t v63 = v2 + 16 * v49;
  *(void *)(v63 + 32) = v46;
  *(void *)(v63 + 40) = v38;
  swift_release();
LABEL_41:
  id v64 = *(void **)(*(void *)(v55 + OBJC_IVAR____TtC17proximitycontrold11NearbyAgent__rangingProxy) + 24);
  if (v64)
  {
    unint64_t v86 = 10;
    unint64_t v87 = 0xE100000000000000;
    id v65 = v64;
    id v66 = [v65 description];
    uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v69 = v68;

    v70._uint64_t countAndFlagsBits = v67;
    v70._unint64_t object = v69;
    String.append(_:)(v70);
    swift_bridgeObjectRelease();
    unint64_t v72 = *(void *)(v2 + 16);
    unint64_t v71 = *(void *)(v2 + 24);
    if (v72 >= v71 >> 1) {
      uint64_t v2 = (uint64_t)sub_10008892C((char *)(v71 > 1), v72 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v72 + 1;
    uint64_t v73 = v2 + 16 * v72;
    *(void *)(v73 + 32) = 10;
    *(void *)(v73 + 40) = 0xE100000000000000;
  }
  uint64_t v90 = 0x7079746F746F7250;
  unint64_t v91 = 0xEB000000003D7365;
  Swift::UInt64 v88 = &type metadata for Feature;
  unint64_t v89 = sub_10000CC08();
  LOBYTE(v86) = 9;
  char v74 = isFeatureEnabled(_:)();
  sub_10000CC5C((uint64_t)&v86);
  if (v74) {
    uint64_t v75 = 5457241;
  }
  else {
    uint64_t v75 = 20302;
  }
  if (v74) {
    unint64_t v76 = 0xE300000000000000;
  }
  else {
    unint64_t v76 = 0xE200000000000000;
  }
  unint64_t v77 = v76;
  String.append(_:)(*(Swift::String *)&v75);
  swift_bridgeObjectRelease();
  uint64_t v78 = v90;
  unint64_t v79 = v91;
  unint64_t v81 = *(void *)(v2 + 16);
  unint64_t v80 = *(void *)(v2 + 24);
  if (v81 >= v80 >> 1) {
    uint64_t v2 = (uint64_t)sub_10008892C((char *)(v80 > 1), v81 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v81 + 1;
  uint64_t v82 = v2 + 16 * v81;
  *(void *)(v82 + 32) = v78;
  *(void *)(v82 + 40) = v79;
  unint64_t v86 = v2;
  swift_bridgeObjectRetain();
  uint64_t v83 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease_n();
  return v83;
}

uint64_t sub_10010E2F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009893C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

double sub_10010E320@<D0>(uint64_t a1@<X8>)
{
  return sub_10010E334(a1);
}

double sub_10010E334@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_10010E3B8()
{
  return sub_10010E3CC();
}

uint64_t sub_10010E3CC()
{
  return static Published.subscript.setter();
}

id sub_10010E464@<X0>(id *a1@<X0>, void *a2@<X4>, uint64_t a3@<X5>, void *a4@<X8>)
{
  id v9 = *a1;
  if (a2)
  {
    id v6 = a2;
    NSString v7 = String._bridgeToObjectiveC()();
    [v6 ulog:a3 message:v7];
  }
  else
  {
    NSLog(_:_:)();
  }
  *a4 = v9;

  return v9;
}

uint64_t sub_10010E51C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      unint64_t v17 = a3;
      a3 = a1 & 0xC000000000000001;
      uint64_t v7 = 4;
      do
      {
        uint64_t v9 = v7 - 4;
        if (a3)
        {
          uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v11 = v7 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          uint64_t v10 = *(void *)(a1 + 8 * v7);
          swift_retain();
          uint64_t v11 = v7 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        if (v18)
        {
          id v12 = [v18 identifier];

          if (v12)
          {
            uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v15 = v14;

            if (v13 == a2 && v15 == v17)
            {
              swift_bridgeObjectRelease();
LABEL_17:
              swift_bridgeObjectRelease();
              return v10;
            }
            char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v8) {
              goto LABEL_17;
            }
          }
        }
        swift_release();
        ++v7;
      }
      while (v11 != v6);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10010E720(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v7 = 4;
      do
      {
        uint64_t v9 = v7 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v11 = v7 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v10 = *(void *)(a1 + 8 * v7);
          swift_retain();
          uint64_t v11 = v7 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        if (v18)
        {
          uint64_t v12 = a3;
          id v13 = [v18 effectiveIdentifier];

          uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v16 = v15;

          a3 = v12;
          if (v14 == a2 && v16 == v12)
          {
            swift_bridgeObjectRelease();
LABEL_16:
            swift_bridgeObjectRelease();
            return v10;
          }
          char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v8) {
            goto LABEL_16;
          }
        }
        swift_release();
        ++v7;
      }
      while (v11 != v6);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10010E928(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a1;
  if (a1 >> 62) {
    goto LABEL_36;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v6)
  {
    uint64_t v7 = 0;
    unint64_t v8 = v5 & 0xC000000000000001;
    uint64_t v26 = v5;
    uint64_t v27 = v4;
    unint64_t v23 = v5 & 0xC000000000000001;
    uint64_t v24 = v6;
    while (1)
    {
      while (1)
      {
        if (v8)
        {
          uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v10 = __OFADD__(v7++, 1);
          if (v10) {
            goto LABEL_35;
          }
        }
        else
        {
          uint64_t v9 = swift_retain();
          BOOL v10 = __OFADD__(v7++, 1);
          if (v10) {
            goto LABEL_35;
          }
        }
        unint64_t v11 = *(void *)(v9 + OBJC_IVAR____TtC17proximitycontrold8Identity_rapportIdentities);
        if (v11) {
          break;
        }
        swift_release();
        if (v7 == v6) {
          goto LABEL_31;
        }
      }
      uint64_t v28 = v9;
      if (v11 >> 62) {
        break;
      }
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      if (v12) {
        goto LABEL_13;
      }
LABEL_29:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_30:
      if (v7 == v6) {
        goto LABEL_31;
      }
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    if (!v12) {
      goto LABEL_29;
    }
LABEL_13:
    uint64_t v25 = v7;
    uint64_t v5 = 4;
    while (1)
    {
      id v13 = (v11 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v11 + 8 * v5);
      uint64_t v14 = v13;
      uint64_t v15 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v16 = [v13 identifier];
      if (v16)
      {
        unint64_t v17 = v16;
        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v20 = v19;

        if (v18 == a2 && v20 == a3)
        {
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease_n();
          goto LABEL_33;
        }
        uint64_t v4 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        if (v4)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_33:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v28;
        }
      }
      else
      {
      }
      ++v5;
      if (v15 == v12)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v5 = v26;
        uint64_t v4 = v27;
        uint64_t v6 = v24;
        uint64_t v7 = v25;
        unint64_t v8 = v23;
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  }
LABEL_31:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10010EBF8(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 4;
      do
      {
        uint64_t v6 = v5 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v8 = __OFADD__(v6, 1);
          uint64_t v9 = v5 - 3;
          if (v8) {
            goto LABEL_14;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(a1 + 8 * v5);
          swift_retain();
          BOOL v8 = __OFADD__(v6, 1);
          uint64_t v9 = v5 - 3;
          if (v8)
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        if (sub_10009CFA4(a2))
        {
          swift_bridgeObjectRelease();
          return v7;
        }
        swift_release();
        ++v5;
      }
      while (v9 != v4);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10010ED00(void *a1, void (*a2)(void))
{
  uint64_t ObjectType = swift_getObjectType();
  sub_10016ABE4(0xD00000000000001DLL, (void *)0x80000001002BE720, 0, ObjectType, (uint64_t)&off_100328368);
  int DeviceClass = GestaltGetDeviceClass();
  if (DeviceClass == 7 || DeviceClass == 4)
  {
    type metadata accessor for Identity();
    swift_allocObject();
    id v6 = a1;
    uint64_t v7 = sub_100099014(0, 0, 0, 0, 0, 0, (uint64_t)a1);
    sub_10010CBE4(v7);
    id v8 = v6;
    uint64_t v9 = swift_retain();
    uint64_t v10 = sub_100112634(v9, v8);
    swift_release();

    if (v10)
    {
      swift_retain();
      id v11 = sub_100157C88(v8, v10);
      unint64_t v13 = v12;
      a2();
      sub_10000DBD8((uint64_t)v11, v13);
      swift_release();
      return swift_release_n();
    }
    else
    {
      _StringGuts.grow(_:)(36);
      swift_bridgeObjectRelease();
      v15._uint64_t countAndFlagsBits = sub_10009BB90();
      String.append(_:)(v15);
      swift_bridgeObjectRelease();
      id v16 = sub_1001F687C();
      swift_bridgeObjectRetain();
      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v16 ulog:40 message:v17 0xD000000000000022 0x80000001002BE740];
      swift_bridgeObjectRelease();

      ((void (*)(void, unint64_t))a2)(0, 0xF000000000000000);
      return swift_release();
    }
  }
  else
  {
    sub_10016ABE4(0xD00000000000003ALL, (void *)0x80000001002BE770, 0, ObjectType, (uint64_t)&off_100328368);
    return ((uint64_t (*)(void, unint64_t))a2)(0, 0xF000000000000000);
  }
}

double sub_10010EF9C@<D0>(uint64_t a1@<X8>)
{
  return sub_10010E334(a1);
}

uint64_t sub_10010EFC4()
{
  return sub_10010E3CC();
}

double sub_10010EFEC@<D0>(uint64_t a1@<X8>)
{
  return sub_10010E334(a1);
}

uint64_t sub_10010F014()
{
  return sub_10010E3CC();
}

uint64_t sub_10010F044()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_10010F07C(uint64_t a1, uint64_t a2, char *a3)
{
  _OWORD v21[3] = type metadata accessor for DeviceActivityServer();
  v21[4] = &off_100336BE8;
  v21[0] = a2;
  uint64_t v5 = (uint64_t)&a3[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_activitySource];
  *(_OWORD *)uint64_t v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(void *)(v5 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a3[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_registeredRequestHandlers] = &_swiftEmptyDictionarySingleton;
  *(void *)&a3[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_registeredEventHandlers] = &_swiftEmptyDictionarySingleton;
  *(void *)&a3[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLClient] = 0;
  *(void *)&a3[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_pushTaskStorage] = &_swiftEmptySetSingleton;
  *(void *)&a3[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_remoteSubscriptions] = &_swiftEmptyDictionarySingleton;
  uint64_t v6 = OBJC_IVAR____TtC17proximitycontrold12RapportProxy_airplayPrefs;
  id v7 = objc_allocWithZone((Class)NSUserDefaults);
  id v8 = a3;
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 initWithSuiteName:v9];

  *(void *)&a3[v6] = v10;
  id v11 = (uint64_t *)&v8[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_rpCLDeviceDiscoverySubject];
  sub_10000A38C(&qword_100366578);
  swift_allocObject();
  uint64_t v12 = PassthroughSubject.init()();
  swift_allocObject();
  uint64_t v13 = PassthroughSubject.init()();
  *id v11 = v12;
  v11[1] = v13;
  uint64_t v11[2] = 0;
  uint64_t v14 = OBJC_IVAR____TtC17proximitycontrold12RapportProxy_dispatchQueue;
  if (qword_10035A628 != -1) {
    swift_once();
  }
  Swift::String v15 = (void *)qword_1003ACB50;
  *(void *)&v8[v14] = qword_1003ACB50;
  *(void *)&v8[OBJC_IVAR____TtC17proximitycontrold12RapportProxy_tasks] = &_swiftEmptySetSingleton;
  swift_unknownObjectWeakAssign();
  sub_1000291F4((uint64_t)v21, (uint64_t)v20);
  swift_beginAccess();
  id v16 = v15;
  sub_10011080C((uint64_t)v20, v5);
  swift_endAccess();

  v19.receiver = v8;
  v19.super_class = (Class)type metadata accessor for RapportProxy();
  id v17 = [super init];
  sub_10000CC5C((uint64_t)v21);
  return v17;
}

uint64_t sub_10010F2F8(uint64_t a1, uint64_t a2)
{
  return sub_1000DC8B0(a1, a2, v2);
}

uint64_t sub_10010F300(uint64_t a1, uint64_t a2)
{
  return sub_100169144(a1, a2, v2);
}

uint64_t sub_10010F308()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10010F340(void (*a1)(void ***), uint64_t a2)
{
  return sub_100209700(a1, a2);
}

uint64_t sub_10010F348()
{
  uint64_t v1 = sub_10000A38C(&qword_100366470);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10010F43C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_10000A38C(&qword_100366470) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  *a2 = sub_10020BCCC(*a1, v2[2], v2[3], v2[4], (uint64_t)v2 + v6, *(void **)((char *)v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));

  return swift_bridgeObjectRetain();
}

uint64_t sub_10010F4F8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10010F530()
{
}

uint64_t sub_10010F554()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 80, 7);
}

void sub_10010F5BC(unsigned __int8 *a1)
{
  sub_10020BDDC(*a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(Swift::String *)(v1 + 40), *(void **)(v1 + 56), *(void (**)(uint64_t))(v1 + 64));
}

void *sub_10010F5D4(unint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (v4)
      {
LABEL_4:
        double result = (void *)sub_1000B56A4(0, v4 & ~(v4 >> 63), 0);
        if (v4 < 0)
        {
          __break(1u);
          goto LABEL_55;
        }
        unint64_t v6 = (id *)a1;
        for (uint64_t i = 0; i != v4; ++i)
        {
          if ((a2 & 0xC000000000000001) != 0) {
            id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v8 = *(id *)(a2 + 8 * i + 32);
          }
          NSString v9 = v8;
          uint64_t v10 = sub_100096FDC();

          unint64_t v12 = _swiftEmptyArrayStorage[2];
          unint64_t v11 = _swiftEmptyArrayStorage[3];
          if (v12 >= v11 >> 1) {
            sub_1000B56A4(v11 > 1, v12 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v12 + 1;
          _swiftEmptyArrayStorage[v12 + 4] = v10;
        }
        swift_bridgeObjectRelease();
        a1 = (unint64_t)v6;
        uint64_t v13 = _swiftEmptyArrayStorage[2];
        if (!v13) {
          goto LABEL_19;
        }
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v4) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = _swiftEmptyArrayStorage[2];
    if (!v13)
    {
LABEL_19:
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
LABEL_16:
    swift_bridgeObjectRetain();
    for (uint64_t j = 0; j != v13; ++j)
    {
      uint64_t v15 = swift_bridgeObjectRetain();
      sub_100104A08(v15);
    }
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
LABEL_20:
  if (!a1)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v16 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 >> 62) {
    goto LABEL_51;
  }
  uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_23:
  if (v17)
  {
    unint64_t v18 = 0;
    unint64_t v19 = a1 & 0xC000000000000001;
    uint64_t v20 = (SEL *)&unk_100356000;
    do
    {
      if (v19)
      {
        uint64_t v21 = (id *)a1;
        id v22 = (id *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v18 >= *(void *)(v16 + 16))
        {
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          swift_bridgeObjectRetain();
          uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
          goto LABEL_23;
        }
        uint64_t v21 = (id *)a1;
        id v22 = (id *)*(id *)(a1 + 8 * v18 + 32);
      }
      a1 = (unint64_t)v22;
      unint64_t v23 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_50;
      }
      if ([v22 v20[223]] != 2) {
        goto LABEL_25;
      }
      unint64_t v24 = v19;
      uint64_t v25 = v17;
      uint64_t v26 = v16;
      swift_bridgeObjectRetain();
      id v27 = [(id)a1 idsDeviceID];
      if (v27)
      {
        uint64_t v28 = v27;
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v31 = v30;
      }
      else
      {
        uint64_t v29 = 0;
        uint64_t v31 = 0xE000000000000000;
      }
      char v32 = sub_10019C160(v29, v31, (uint64_t)&_swiftEmptySetSingleton);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v26;
      uint64_t v17 = v25;
      unint64_t v19 = v24;
      uint64_t v20 = (SEL *)&unk_100356000;
      if (v32)
      {
LABEL_25:
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
      }
      ++v18;
      a1 = (unint64_t)v21;
    }
    while (v23 != v17);
  }
  swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) == 0
    && ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    uint64_t v33 = _swiftEmptyArrayStorage[2];
    if (v33) {
      goto LABEL_41;
    }
LABEL_47:
    swift_release();
    goto LABEL_48;
  }
  uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
  if (!v33) {
    goto LABEL_47;
  }
LABEL_41:
  double result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
  if ((v33 & 0x8000000000000000) == 0)
  {
    uint64_t v34 = 0;
    do
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
        id v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v35 = (id)_swiftEmptyArrayStorage[v34 + 4];
      }
      unint64_t v36 = v35;
      ++v34;
      type metadata accessor for Identity();
      swift_allocObject();
      sub_10009EE78(v36);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v33 != v34);
    goto LABEL_47;
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_10010FA48()
{
  uint64_t v1 = sub_10000A38C(&qword_1003664E0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, (v6 + 11) & 0xFFFFFFFFFFFFFFF8 | 4, v5);
}

id sub_10010FB14@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_10000A38C(&qword_1003664E0) - 8);
  unint64_t v6 = (((*(void *)(v5 + 64)
        + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 23) & 0xFFFFFFFFFFFFFFF8;
  id v7 = *(void **)(v2 + v6);
  uint64_t v8 = *(unsigned int *)(v2 + ((v6 + 11) & 0xFFFFFFFFFFFFFFF8));

  return sub_10010E464(a1, v7, v8, a2);
}

uint64_t sub_10010FBE0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10010FC18()
{
}

void sub_10010FC20(unsigned __int8 *a1)
{
}

void sub_10010FC28(uint64_t *a1)
{
  sub_10010B148(a1, v1, (void (*)(uint64_t))sub_10010A6CC);
}

void sub_10010FC58(uint64_t *a1)
{
  sub_10010B148(a1, v1, (void (*)(uint64_t))sub_10010AAEC);
}

void sub_10010FC88(uint64_t *a1)
{
  sub_10010B148(a1, v1, sub_10010B1B8);
}

uint64_t sub_10010FCD0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10010FD10()
{
  sub_10010CBE4(*(void *)(v0 + 24));
}

uint64_t sub_10010FD38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10010FD48()
{
  return swift_release();
}

Swift::UInt64 sub_10010FD50(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  if (a1)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      if (v11) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v11)
      {
LABEL_4:
        Swift::UInt64 result = specialized ContiguousArray.reserveCapacity(_:)();
        if (v11 < 0)
        {
LABEL_77:
          __break(1u);
          goto LABEL_78;
        }
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v13 = 0;
          do
          {
            uint64_t v14 = v13 + 1;
            uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            type metadata accessor for Identity();
            swift_allocObject();
            sub_10009951C(v15);
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            uint64_t v13 = v14;
          }
          while (v11 != v14);
        }
        else
        {
          uint64_t v16 = (void **)(a1 + 32);
          type metadata accessor for Identity();
          do
          {
            uint64_t v17 = *v16++;
            swift_allocObject();
            id v18 = v17;
            sub_10009951C((uint64_t)v17);
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            --v11;
          }
          while (v11);
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  if (!a2) {
    goto LABEL_25;
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    if (v19) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v19 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v19)
    {
LABEL_17:
      Swift::UInt64 result = specialized ContiguousArray.reserveCapacity(_:)();
      if (v19 < 0)
      {
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
      if ((a2 & 0xC000000000000001) != 0)
      {
        uint64_t v20 = 0;
        do
        {
          uint64_t v21 = v20 + 1;
          uint64_t v22 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          type metadata accessor for Identity();
          swift_allocObject();
          sub_100099534(v22);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          uint64_t v20 = v21;
        }
        while (v19 != v21);
      }
      else
      {
        unint64_t v23 = (void **)(a2 + 32);
        type metadata accessor for Identity();
        do
        {
          unint64_t v24 = *v23++;
          swift_allocObject();
          id v25 = v24;
          sub_100099534((uint64_t)v24);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          --v19;
        }
        while (v19);
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_25:
  if (!a3) {
    goto LABEL_36;
  }
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    if (v26) {
      goto LABEL_28;
    }
  }
  else
  {
    uint64_t v26 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v26)
    {
LABEL_28:
      Swift::UInt64 result = specialized ContiguousArray.reserveCapacity(_:)();
      if (v26 < 0)
      {
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
      if ((a3 & 0xC000000000000001) != 0)
      {
        uint64_t v27 = 0;
        do
        {
          uint64_t v28 = v27 + 1;
          uint64_t v29 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          type metadata accessor for Identity();
          swift_allocObject();
          sub_10009954C(v29);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          uint64_t v27 = v28;
        }
        while (v26 != v28);
      }
      else
      {
        uint64_t v30 = (void **)(a3 + 32);
        type metadata accessor for Identity();
        do
        {
          uint64_t v31 = *v30++;
          swift_allocObject();
          id v32 = v31;
          sub_10009954C((uint64_t)v31);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          --v26;
        }
        while (v26);
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_36:
  uint64_t v33 = sub_10010F5D4(a4, a3);
  if (!a5) {
    goto LABEL_53;
  }
  if (a5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
    if (v34) {
      goto LABEL_39;
    }
  }
  else
  {
    uint64_t v34 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v34)
    {
LABEL_39:
      Swift::UInt64 result = specialized ContiguousArray.reserveCapacity(_:)();
      if (v34 < 0)
      {
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      if ((a5 & 0xC000000000000001) != 0)
      {
        uint64_t v35 = 0;
        do
        {
          uint64_t v36 = v35 + 1;
          uint64_t v37 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          type metadata accessor for Identity();
          swift_allocObject();
          sub_1000998F4(v37);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          uint64_t v35 = v36;
        }
        while (v34 != v36);
      }
      else
      {
        unint64_t v38 = (void **)(a5 + 32);
        type metadata accessor for Identity();
        do
        {
          uint64_t v39 = *v38++;
          swift_allocObject();
          id v40 = v39;
          sub_1000998F4((uint64_t)v39);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          --v34;
        }
        while (v34);
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_53:
  if (!a6) {
    goto LABEL_67;
  }
  if (!(a6 >> 62))
  {
    uint64_t v41 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v41) {
      goto LABEL_56;
    }
LABEL_66:
    swift_bridgeObjectRelease();
LABEL_67:
    sub_10008E2CC((unint64_t)_swiftEmptyArrayStorage);
    sub_10008E2CC((unint64_t)_swiftEmptyArrayStorage);
    sub_10008E2CC((unint64_t)v33);
    sub_10008E2CC((unint64_t)_swiftEmptyArrayStorage);
    sub_10008E2CC((unint64_t)_swiftEmptyArrayStorage);
    Swift::UInt64 v48 = UpTicks()();
    unint64_t v49 = sub_10009F924((unint64_t)_swiftEmptyArrayStorage);
    if (v49) {
      unint64_t v50 = (unint64_t)v49;
    }
    else {
      unint64_t v50 = (unint64_t)_swiftEmptyArrayStorage;
    }
    Swift::UInt64 v51 = UpTicks()();
    _StringGuts.grow(_:)(46);
    swift_bridgeObjectRelease();
    if (v50 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    v52._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v52);
    swift_bridgeObjectRelease();
    v53._unint64_t object = (void *)0x80000001002BE970;
    v53._uint64_t countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v53);
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v54._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v54);
    swift_bridgeObjectRelease();
    v55._uint64_t countAndFlagsBits = 0x746E656D656C6520;
    v55._unint64_t object = (void *)0xED0000206E692073;
    String.append(_:)(v55);
    Swift::UInt64 result = v51 - v48;
    if (v51 >= v48)
    {
      double v56 = UpTicksToSecondsF(_:)(result);
      v57._uint64_t countAndFlagsBits = sub_1000DC438(v56);
      String.append(_:)(v57);
      swift_bridgeObjectRelease();
      id v58 = sub_1001F687C();
      swift_bridgeObjectRetain();
      NSString v59 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v58 ulog:20 message:v59];
      swift_bridgeObjectRelease();

      return v50;
    }
    __break(1u);
    goto LABEL_77;
  }
  swift_bridgeObjectRetain();
  uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
  if (!v41) {
    goto LABEL_66;
  }
LABEL_56:
  Swift::UInt64 result = specialized ContiguousArray.reserveCapacity(_:)();
  if ((v41 & 0x8000000000000000) == 0)
  {
    if ((a6 & 0xC000000000000001) != 0)
    {
      uint64_t v42 = 0;
      do
      {
        uint64_t v43 = v42 + 1;
        uint64_t v44 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        type metadata accessor for Identity();
        swift_allocObject();
        sub_100099910(v44);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v42 = v43;
      }
      while (v41 != v43);
    }
    else
    {
      Swift::String v45 = (void **)(a6 + 32);
      type metadata accessor for Identity();
      do
      {
        uint64_t v46 = *v45++;
        swift_allocObject();
        id v47 = v46;
        sub_100099910((uint64_t)v46);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v41;
      }
      while (v41);
    }
    goto LABEL_66;
  }
LABEL_81:
  __break(1u);
  return result;
}

uint64_t sub_100110784(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A38C(&qword_10036C090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001107EC(void *a1)
{
  return sub_10010D2E8(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_10011080C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A38C(&qword_1003637B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100110894()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RapportDiscoveryServiceModel()
{
  return self;
}

uint64_t type metadata accessor for RapportDiscoveryServiceState()
{
  return self;
}

uint64_t sub_1001108EC()
{
  id v1 = sub_1001F6944();
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 ulog:40 message:v2];

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RapportDiscoveryService()
{
  return self;
}

uint64_t sub_1001109B0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100110A30()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v0 = Dictionary.count.getter();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100110AE4()
{
  [*(id *)(v0 + 32) lock];
  swift_beginAccess();
  uint64_t v3 = *(void *)(v0 + 64);
  type metadata accessor for Dictionary.Values();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v1 = Array.init<A>(_:)();
  [*(id *)(v0 + 32) unlock:v3];
  return v1;
}

uint64_t sub_100110BDC()
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100110C40()
{
  sub_100110BDC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Storage()
{
  return sub_10000F2E4();
}

uint64_t sub_100110C90()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_100110CD4(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_100110D24(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100110D9C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for Storage.ObservationSubjects()
{
  return sub_10000F2E4();
}

uint64_t sub_100110E04()
{
  uint64_t v1 = *v0;
  sub_10000A38C((uint64_t *)&unk_10035E7E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10028D430;
  uint64_t v9 = sub_10016ACB8(v1, (uint64_t)&off_100328750);
  uint64_t v10 = v3;
  v4._uint64_t countAndFlagsBits = 10272;
  v4._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v4);
  sub_100110A30();
  v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 41;
  v6._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  *(void *)(v2 + 32) = v9;
  *(void *)(v2 + 40) = v10;
  sub_100110AE4();
  type metadata accessor for Array();
  swift_getWitnessTable();
  Sequence.forEach(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10000A38C((uint64_t *)&unk_100367D40);
  sub_100089B9C();
  uint64_t v7 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease_n();
  return v7;
}

uint64_t sub_100110FFC(uint64_t a1, uint64_t *a2)
{
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  sub_10002914C();
  sub_1000291A0();
  RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)();
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0;
  v3._unint64_t object = (void *)0xE000000000000000;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = *a2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v4;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10008892C(0, *(void *)(v4 + 16) + 1, 1, (char *)v4);
    uint64_t v4 = result;
    *a2 = result;
  }
  unint64_t v7 = *(void *)(v4 + 16);
  unint64_t v6 = *(void *)(v4 + 24);
  if (v7 >= v6 >> 1)
  {
    uint64_t result = (uint64_t)sub_10008892C((char *)(v6 > 1), v7 + 1, 1, (char *)v4);
    uint64_t v4 = result;
    *a2 = result;
  }
  *(void *)(v4 + 16) = v7 + 1;
  unint64_t v8 = v4 + 16 * v7;
  *(void *)(v8 + 32) = 2108704;
  *(void *)(v8 + 40) = 0xE300000000000000;
  return result;
}

uint64_t sub_100111170()
{
  return sub_100110E04();
}

uint64_t sub_100111194()
{
  uint64_t v1 = *v0;
  sub_10000A38C((uint64_t *)&unk_10035E7E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10028D430;
  uint64_t v9 = sub_10016ACB8(v1, (uint64_t)&off_100328750);
  uint64_t v10 = v3;
  v4._uint64_t countAndFlagsBits = 10272;
  v4._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v4);
  sub_100110A30();
  v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 41;
  v6._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  *(void *)(v2 + 32) = v9;
  *(void *)(v2 + 40) = v10;
  sub_100110AE4();
  type metadata accessor for Array();
  swift_getWitnessTable();
  Sequence.forEach(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10000A38C((uint64_t *)&unk_100367D40);
  sub_100089B9C();
  uint64_t v7 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease_n();
  return v7;
}

uint64_t sub_100111394(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100116CFC(a3, a5);
  sub_10002914C();
  sub_1000291A0();
  RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)();
  swift_bridgeObjectRelease();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  uint64_t v6 = *a2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v6;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10008892C(0, *(void *)(v6 + 16) + 1, 1, (char *)v6);
    uint64_t v6 = result;
    *a2 = result;
  }
  unint64_t v9 = *(void *)(v6 + 16);
  unint64_t v8 = *(void *)(v6 + 24);
  if (v9 >= v8 >> 1)
  {
    uint64_t result = (uint64_t)sub_10008892C((char *)(v8 > 1), v9 + 1, 1, (char *)v6);
    uint64_t v6 = result;
    *a2 = result;
  }
  *(void *)(v6 + 16) = v9 + 1;
  unint64_t v10 = v6 + 16 * v9;
  *(void *)(v10 + 32) = 2108704;
  *(void *)(v10 + 40) = 0xE300000000000000;
  return result;
}

uint64_t sub_100111504()
{
  return sub_100111194();
}

uint64_t sub_10011152C(uint64_t a1)
{
  return sub_100110FFC(a1, *(uint64_t **)(v1 + 40));
}

uint64_t sub_10011154C(uint64_t a1)
{
  return sub_100111394(a1, *(uint64_t **)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100111570(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_1001115F0(uint64_t a1, void *a2)
{
  id v105 = a2;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v82 = (char *)v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v92 = (char *)v79 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v81 = (char *)v79 - v10;
  __chkstk_darwin(v9);
  uint64_t v85 = (char *)v79 - v11;
  uint64_t v12 = sub_10000A38C(&qword_10036C090);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v95 = (uint64_t)v79 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v79 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  unint64_t v23 = (char *)v79 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v83 = (uint64_t)v79 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v96 = (char *)v79 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v98 = (char *)v79 - v29;
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)v79 - v30;
  [*(id *)(a1 + 32) lock];
  swift_beginAccess();
  uint64_t v80 = a1;
  uint64_t v32 = *(void *)(a1 + 64);
  uint64_t v33 = *(void *)(v32 + 64);
  uint64_t v87 = v32 + 64;
  uint64_t v34 = -1;
  uint64_t v35 = -1 << *(unsigned char *)(v32 + 32);
  v79[1] = ~v35;
  if (-v35 < 64) {
    uint64_t v34 = ~(-1 << -(char)v35);
  }
  unint64_t v36 = v34 & v33;
  int64_t v86 = (unint64_t)(63 - v35) >> 6;
  uint64_t v104 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  uint64_t v90 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  unint64_t v91 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  unint64_t v89 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v97 = v32;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v38 = 0;
  uint64_t v84 = v15;
  uint64_t v99 = v20;
  id v103 = v31;
  Swift::UInt64 v88 = v23;
  unint64_t v93 = v36;
  int64_t v94 = 0;
  if (!v36) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v100 = (v36 - 1) & v36;
  int64_t v101 = v38;
  unint64_t v39 = __clz(__rbit64(v36)) | (v38 << 6);
  uint64_t v40 = (uint64_t)v96;
  while (1)
  {
    uint64_t v45 = *(void *)(*(void *)(v97 + 56) + 8 * v39);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    uint64_t v106 = v45;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    id v46 = v107;
    if (v107)
    {
      id v47 = [v107 uniqueIdentifier];

      static UUID._unconditionallyBridgeFromObjectiveC(_:)();
      Swift::UInt64 v48 = *v91;
      (*v91)(v31, 0, 1, v3);
    }
    else
    {
      Swift::UInt64 v48 = *v91;
      (*v91)(v31, 1, 1, v3);
    }
    uint64_t v49 = (uint64_t)v98;
    id v50 = [v105 accessoryID];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v48((char *)v49, 0, 1, v3);
    sub_1000D6178((uint64_t)v31, v40);
    Swift::UInt64 v51 = *v104;
    if ((*v104)(v40, 1, v3) == 1)
    {
      sub_10000DB78(v40);
      int v102 = 0;
    }
    else
    {
      uint64_t v52 = v40;
      Swift::String v53 = *v90;
      Swift::String v54 = v85;
      (*v90)(v85, v52, v3);
      uint64_t v55 = v83;
      sub_1000D6178(v49, v83);
      if (v51(v55, 1, v3) == 1)
      {
        (*v89)(v54, v3);
        sub_10000DB78(v55);
        int v102 = 0;
      }
      else
      {
        double v56 = v54;
        Swift::String v57 = v81;
        v53(v81, v55, v3);
        sub_10011363C();
        int v102 = dispatch thunk of static Equatable.== infix(_:_:)();
        id v58 = *v89;
        (*v89)(v57, v3);
        NSString v59 = v56;
        uint64_t v49 = (uint64_t)v98;
        v58(v59, v3);
      }
    }
    uint64_t v60 = (uint64_t)v88;
    sub_10000DB78(v49);
    sub_10000DB78((uint64_t)v103);
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    id v61 = v107;
    if (v107 && (id v62 = [v107 home], v61, v62))
    {
      id v63 = [v62 uniqueIdentifier];

      static UUID._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v64 = 0;
    }
    else
    {
      uint64_t v64 = 1;
    }
    id v65 = v92;
    v48((char *)v60, v64, 1, v3);
    id v66 = [v105 homeID];
    uint64_t v67 = (uint64_t)v99;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v48((char *)v67, 0, 1, v3);
    uint64_t v68 = v95;
    sub_1000D6178(v60, v95);
    if (v51(v68, 1, v3) == 1)
    {
      sub_10000DB78(v68);
      int v69 = 0;
      uint64_t v70 = v67;
      uint64_t v71 = v60;
      uint64_t v31 = v103;
    }
    else
    {
      unint64_t v72 = *v90;
      (*v90)(v65, v68, v3);
      uint64_t v73 = (uint64_t)v84;
      sub_1000D6178(v67, (uint64_t)v84);
      if (v51(v73, 1, v3) == 1)
      {
        uint64_t v70 = v67;
        (*v89)(v65, v3);
        sub_10000DB78(v73);
        int v69 = 0;
      }
      else
      {
        char v74 = v82;
        v72(v82, v73, v3);
        sub_10011363C();
        int v69 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v75 = *v89;
        unint64_t v76 = v74;
        uint64_t v70 = (uint64_t)v99;
        (*v89)(v76, v3);
        v75(v65, v3);
      }
      uint64_t v71 = v60;
      uint64_t v31 = v103;
    }
    sub_10000DB78(v70);
    sub_10000DB78(v71);
    if (v102 & v69)
    {
      sub_10002E7C4();
      uint64_t v77 = v80;
      uint64_t v78 = v106;
LABEL_43:
      [*(id *)(v77 + 32) unlock];
      return v78;
    }
    uint64_t result = swift_release();
    unint64_t v36 = v100;
    int64_t v38 = v101;
    unint64_t v93 = v100;
    int64_t v94 = v101;
    if (v100) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v41 = v38 + 1;
    uint64_t v40 = (uint64_t)v96;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v41 >= v86) {
      goto LABEL_42;
    }
    unint64_t v42 = *(void *)(v87 + 8 * v41);
    int64_t i = v38 + 1;
    if (v42) {
      goto LABEL_19;
    }
    int64_t i = v38 + 2;
    if (v38 + 2 >= v86) {
      goto LABEL_42;
    }
    unint64_t v42 = *(void *)(v87 + 8 * i);
    if (v42) {
      goto LABEL_19;
    }
    int64_t i = v38 + 3;
    if (v38 + 3 >= v86) {
      goto LABEL_42;
    }
    unint64_t v42 = *(void *)(v87 + 8 * i);
    if (v42) {
      goto LABEL_19;
    }
    int64_t i = v38 + 4;
    if (v38 + 4 >= v86) {
      goto LABEL_42;
    }
    unint64_t v42 = *(void *)(v87 + 8 * i);
    if (v42) {
      goto LABEL_19;
    }
    uint64_t v44 = v38 + 5;
    if (v38 + 5 >= v86)
    {
LABEL_42:
      sub_10002E7C4();
      uint64_t v78 = 0;
      uint64_t v77 = v80;
      goto LABEL_43;
    }
    unint64_t v42 = *(void *)(v87 + 8 * v44);
    for (int64_t i = v38 + 5; !v42; ++v44)
    {
      int64_t i = v44 + 1;
      if (__OFADD__(v44, 1)) {
        goto LABEL_45;
      }
      if (i >= v86) {
        goto LABEL_42;
      }
      unint64_t v42 = *(void *)(v87 + 8 * i);
    }
LABEL_19:
    uint64_t v100 = (v42 - 1) & v42;
    int64_t v101 = i;
    unint64_t v39 = __clz(__rbit64(v42)) + (i << 6);
  }
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_100112088(uint64_t a1, void *a2)
{
  return sub_1001120A0(a1, a2, (SEL *)&selRef_mediaRemoteID);
}

uint64_t sub_100112094(uint64_t a1, void *a2)
{
  return sub_1001120A0(a1, a2, (SEL *)&selRef_mediaRouteID);
}

uint64_t sub_1001120A0(uint64_t a1, void *a2, SEL *a3)
{
  [*(id *)(a1 + 32) lock];
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v28 = v4 + 64;
  uint64_t v6 = -1;
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  uint64_t v26 = a1;
  if (-v7 < 64) {
    uint64_t v6 = ~(-1 << -(char)v7);
  }
  unint64_t v8 = v6 & v5;
  int64_t v27 = (unint64_t)(63 - v7) >> 6;
  uint64_t v31 = *(void *)(a1 + 64);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      uint64_t v11 = (v8 - 1) & v8;
      unint64_t v12 = __clz(__rbit64(v8)) | (v10 << 6);
      int64_t v13 = v10;
      goto LABEL_23;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v14 >= v27) {
      goto LABEL_28;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    int64_t v13 = v10 + 1;
    if (!v15)
    {
      int64_t v13 = v10 + 2;
      if (v10 + 2 >= v27) {
        goto LABEL_28;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v13);
      if (!v15)
      {
        int64_t v13 = v10 + 3;
        if (v10 + 3 >= v27) {
          goto LABEL_28;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v13);
        if (!v15)
        {
          int64_t v13 = v10 + 4;
          if (v10 + 4 >= v27) {
            goto LABEL_28;
          }
          unint64_t v15 = *(void *)(v28 + 8 * v13);
          if (!v15)
          {
            int64_t v16 = v10 + 5;
            if (v10 + 5 >= v27)
            {
LABEL_28:
              sub_10002E7C4();
              uint64_t v17 = 0;
              goto LABEL_31;
            }
            unint64_t v15 = *(void *)(v28 + 8 * v16);
            int64_t v13 = v10 + 5;
            if (!v15) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    uint64_t v11 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v13 << 6);
LABEL_23:
    uint64_t v17 = *(void *)(*(void *)(v31 + 56) + 8 * v12);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v18 = sub_100098724();
    uint64_t v20 = v19;
    swift_release();
    id v21 = [a2 *a3];
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    if (v20)
    {
      if (v18 == v22 && v20 == v24)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_30:
        sub_10002E7C4();
LABEL_31:
        [*(id *)(v26 + 32) unlock];
        return v17;
      }
      char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25) {
        goto LABEL_30;
      }
      uint64_t result = swift_release();
    }
    else
    {
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
    }
    int64_t v10 = v13;
    unint64_t v8 = v11;
  }
  while (1)
  {
    int64_t v13 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_28;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v13);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1001123C0(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) lock];
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v19 = a1;
  uint64_t v20 = v4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(v4 + 64);
  int64_t v8 = (unint64_t)(63 - v6) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v11 = (v7 - 1) & v7;
  unint64_t v12 = __clz(__rbit64(v7)) | (v10 << 6);
  for (i = v10; ; unint64_t v12 = __clz(__rbit64(v15)) + (i << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v4 + 56) + 8 * v12);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    char v18 = sub_10009CFA4(a2);
    swift_release();
    if (v18)
    {
      sub_10002E7C4();
LABEL_25:
      [*(id *)(v19 + 32) unlock];
      return v17;
    }
    uint64_t result = swift_release();
    int64_t v10 = i;
    unint64_t v7 = v11;
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v14 >= v8) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v20 + 8 * v14);
    int64_t i = v10 + 1;
    if (v15) {
      goto LABEL_19;
    }
    int64_t i = v10 + 2;
    if (v10 + 2 >= v8) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v20 + 8 * i);
    if (v15) {
      goto LABEL_19;
    }
    int64_t i = v10 + 3;
    if (v10 + 3 >= v8) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v20 + 8 * i);
    if (v15) {
      goto LABEL_19;
    }
    int64_t i = v10 + 4;
    if (v10 + 4 >= v8) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v20 + 8 * i);
    if (v15) {
      goto LABEL_19;
    }
    int64_t v16 = v10 + 5;
    if (v10 + 5 >= v8)
    {
LABEL_24:
      sub_10002E7C4();
      uint64_t v17 = 0;
      goto LABEL_25;
    }
    unint64_t v15 = *(void *)(v20 + 8 * v16);
    for (int64_t i = v10 + 5; !v15; ++v16)
    {
      int64_t i = v16 + 1;
      if (__OFADD__(v16, 1)) {
        goto LABEL_27;
      }
      if (i >= v8) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v20 + 8 * i);
    }
LABEL_19:
    uint64_t v11 = (v15 - 1) & v15;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100112634(uint64_t a1, void *a2)
{
  [*(id *)(a1 + 32) lock];
  swift_beginAccess();
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v24 = v3 + 64;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  uint64_t v21 = a1;
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v3 + 64);
  int64_t v23 = (unint64_t)(63 - v5) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (v6)
  {
    uint64_t v9 = (v6 - 1) & v6;
    unint64_t v10 = __clz(__rbit64(v6)) | (v8 << 6);
    int64_t v11 = v8;
LABEL_22:
    uint64_t v15 = *(void *)(*(void *)(v3 + 56) + 8 * v10);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    int64_t v16 = *(void **)(v25 + OBJC_IVAR____TtC17proximitycontrold8Identity_nearbyID);
    id v17 = v16;
    swift_release();
    if (v16)
    {
      sub_1000ECCBC();
      id v18 = v17;
      id v19 = a2;
      char v20 = static NSObject.== infix(_:_:)();

      if (v20)
      {
        sub_10002E7C4();
LABEL_26:
        [*(id *)(v21 + 32) unlock];
        return v15;
      }
    }
    uint64_t result = swift_release();
    int64_t v8 = v11;
    unint64_t v6 = v9;
  }
  int64_t v12 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v12 >= v23) {
    goto LABEL_25;
  }
  unint64_t v13 = *(void *)(v24 + 8 * v12);
  int64_t v11 = v8 + 1;
  if (v13) {
    goto LABEL_21;
  }
  int64_t v11 = v8 + 2;
  if (v8 + 2 >= v23) {
    goto LABEL_25;
  }
  unint64_t v13 = *(void *)(v24 + 8 * v11);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v11 = v8 + 3;
  if (v8 + 3 >= v23) {
    goto LABEL_25;
  }
  unint64_t v13 = *(void *)(v24 + 8 * v11);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v11 = v8 + 4;
  if (v8 + 4 >= v23) {
    goto LABEL_25;
  }
  unint64_t v13 = *(void *)(v24 + 8 * v11);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v14 = v8 + 5;
  if (v8 + 5 >= v23)
  {
LABEL_25:
    sub_10002E7C4();
    uint64_t v15 = 0;
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v24 + 8 * v14);
  int64_t v11 = v8 + 5;
  if (v13)
  {
LABEL_21:
    uint64_t v9 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v11 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v11 >= v23) {
      goto LABEL_25;
    }
    unint64_t v13 = *(void *)(v24 + 8 * v11);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100112910(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
    return 0;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v2) {
    return 0;
  }
LABEL_3:
  for (uint64_t i = 0; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    char v4 = sub_10009CFA4(v7);
    swift_release();
    swift_release();
    if (v4) {
      break;
    }
    uint64_t v5 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    if (v5 == v2) {
      return 0;
    }
  }
  return i;
}

uint64_t sub_100112A7C(unint64_t *a1)
{
  unint64_t v3 = swift_bridgeObjectRetain();
  unint64_t v4 = sub_100112910(v3);
  char v6 = v5;
  swift_bridgeObjectRelease();
  if (v1) {
    return v4;
  }
  if ((v6 & 1) == 0)
  {
    unint64_t i = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_54;
    }
    if (*a1 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (i != v20) {
        goto LABEL_6;
      }
    }
    else if (i != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (unint64_t i = v4 + 5; ; ++i)
      {
        unint64_t v8 = i - 4;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v8 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
          if (v8 >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_45;
          }
          swift_retain();
        }
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        char v9 = sub_10009CFA4(v22);
        swift_release();
        swift_release();
        if ((v9 & 1) == 0) {
          break;
        }
LABEL_32:
        BOOL v16 = __OFADD__(v8, 1);
        unint64_t v17 = i - 3;
        if (v16) {
          goto LABEL_46;
        }
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v18 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v17 == v18) {
          return v4;
        }
      }
      if (v8 == v4)
      {
LABEL_31:
        BOOL v16 = __OFADD__(v4++, 1);
        if (v16) {
          goto LABEL_47;
        }
        goto LABEL_32;
      }
      unint64_t v10 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        unint64_t v10 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v8 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          if (v8 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          uint64_t v12 = *(void *)(v10 + 8 * i);
          swift_retain();
          goto LABEL_20;
        }
      }
      else
      {
        if ((v4 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        if (v4 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_49;
        }
        uint64_t v11 = *(void *)(v10 + 8 * v4 + 32);
        swift_retain();
        if ((v10 & 0xC000000000000001) == 0) {
          goto LABEL_17;
        }
      }
      uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      unint64_t v10 = *a1;
LABEL_20:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v10;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v10 & 0x8000000000000000) != 0
        || (v10 & 0x4000000000000000) != 0)
      {
        unint64_t v10 = sub_100111570(v10);
        *a1 = v10;
      }
      *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v12;
      swift_release();
      specialized Array._endMutation()();
      unint64_t v14 = *a1;
      int v15 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v14;
      if (!v15 || (v14 & 0x8000000000000000) != 0 || (v14 & 0x4000000000000000) != 0)
      {
        unint64_t v14 = sub_100111570(v14);
        *a1 = v14;
      }
      if ((v8 & 0x8000000000000000) != 0) {
        goto LABEL_52;
      }
      if (v8 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_53;
      }
      *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v11;
      swift_release();
      specialized Array._endMutation()();
      goto LABEL_31;
    }
    return v4;
  }
  if (!(*a1 >> 62)) {
    return *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_100112DFC(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v18 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v19 + v5;
    if (!__OFADD__(v19, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *unint64_t v3 = v9;
      uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  type metadata accessor for Identity();
  swift_arrayDestroy();
  if (v5)
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v13 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_17:
        if (v13 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        unint64_t v14 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v14 + 8 * v13) {
          memmove((void *)(v11 + 32 + 8 * v4), v14, 8 * v13);
        }
        if (!(v9 >> 62))
        {
          uint64_t v15 = *(void *)(v11 + 16);
          uint64_t v16 = v15 + v5;
          if (!__OFADD__(v15, v5))
          {
LABEL_23:
            *(void *)(v11 + 16) = v16;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v16 = v21 + v5;
        if (!__OFADD__(v21, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = v12 - v2;
      if (!__OFSUB__(v12, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

uint64_t sub_1001130DC(uint64_t a1)
{
  v17[1] = sub_10000A38C(&qword_100366408);
  sub_10000A38C((uint64_t *)&unk_1003681F0);
  String.init<A>(describing:)();
  id v2 = objc_allocWithZone((Class)CULogHandle);
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v2 initWithSubsystem:v3 category:v4];

  NSString v6 = String._bridgeToObjectiveC()();
  [v5 ulog:40 message:v6];

  [*(id *)(a1 + 32) lock];
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v8 = swift_bridgeObjectRetain();
  v17[0] = (unint64_t)sub_1000F06FC(v8);
  swift_retain();
  swift_retain();
  uint64_t v9 = sub_100112A7C(v17);
  uint64_t result = swift_release();
  if (v17[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v11 >= v9) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v17[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11 >= v9)
    {
LABEL_3:
      sub_100112DFC(v9, v11);
      swift_release();
      unint64_t v12 = v17[0];
      uint64_t v13 = swift_retain();
      unint64_t v14 = sub_1001C0450(v13, v12);
      swift_release();
      *(void *)(a1 + 64) = v14;
      swift_bridgeObjectRelease();
      [*(id *)(a1 + 32) unlock];
      uint64_t v15 = swift_retain();
      uint64_t v16 = sub_1001C0450(v15, v12);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1001C1160(v7, (uint64_t)v16);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100113358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  [*(id *)(a1 + 32) lock];
  swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v24 = v5 + 64;
  uint64_t v6 = -1;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  uint64_t v22 = a1;
  if (-v7 < 64) {
    uint64_t v6 = ~(-1 << -(char)v7);
  }
  unint64_t v8 = v6 & *(void *)(v5 + 64);
  int64_t v23 = (unint64_t)(63 - v7) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      uint64_t v12 = (v8 - 1) & v8;
      unint64_t v13 = __clz(__rbit64(v8)) | (v10 << 6);
      int64_t v14 = v10;
      goto LABEL_23;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v15 >= v23) {
      goto LABEL_28;
    }
    unint64_t v16 = *(void *)(v24 + 8 * v15);
    int64_t v14 = v10 + 1;
    if (!v16)
    {
      int64_t v14 = v10 + 2;
      if (v10 + 2 >= v23) {
        goto LABEL_28;
      }
      unint64_t v16 = *(void *)(v24 + 8 * v14);
      if (!v16)
      {
        int64_t v14 = v10 + 3;
        if (v10 + 3 >= v23) {
          goto LABEL_28;
        }
        unint64_t v16 = *(void *)(v24 + 8 * v14);
        if (!v16)
        {
          int64_t v14 = v10 + 4;
          if (v10 + 4 >= v23) {
            goto LABEL_28;
          }
          unint64_t v16 = *(void *)(v24 + 8 * v14);
          if (!v16)
          {
            int64_t v17 = v10 + 5;
            if (v10 + 5 >= v23)
            {
LABEL_28:
              sub_10002E7C4();
              uint64_t v18 = 0;
              goto LABEL_29;
            }
            unint64_t v16 = *(void *)(v24 + 8 * v17);
            int64_t v14 = v10 + 5;
            if (!v16) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    uint64_t v12 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v14 << 6);
LABEL_23:
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v13);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v19 = sub_100098724();
    uint64_t v21 = v20;
    swift_release();
    if (v21)
    {
      if (v19 == a2 && v21 == a3)
      {
        swift_bridgeObjectRelease();
LABEL_27:
        sub_10002E7C4();
LABEL_29:
        [*(id *)(v22 + 32) unlock];
        return v18;
      }
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v11) {
        goto LABEL_27;
      }
    }
    uint64_t result = swift_release();
    int64_t v10 = v14;
    unint64_t v8 = v12;
  }
  while (1)
  {
    int64_t v14 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v14 >= v23) {
      goto LABEL_28;
    }
    unint64_t v16 = *(void *)(v24 + 8 * v14);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_10011363C()
{
  unint64_t result = qword_10036C0C0;
  if (!qword_10036C0C0)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10036C0C0);
  }
  return result;
}

uint64_t sub_100113698()
{
  uint64_t v1 = qword_10035FA08;
  if (*(void *)(v0 + qword_10035FA08))
  {
    uint64_t v2 = *(void *)(v0 + qword_10035FA08);
  }
  else
  {
    uint64_t v3 = v0;
    sub_10000A38C(&qword_10035FB08);
    sub_10000B010(&qword_100366B60, &qword_10035FB08);
    uint64_t v2 = Publisher.eraseToAnyPublisher()();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10011375C()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v2 = v0;
    swift_retain();
    sub_100104C3C();
    sub_10000A38C(&qword_100366430);
    sub_10000B010(&qword_100366B90, &qword_100366430);
    Publisher.eraseToAnyPublisher()();
    swift_release();
    swift_release();
    sub_10000A38C(&qword_10035F5D0);
    sub_10000B010(&qword_100367700, &qword_10035F5D0);
    uint64_t v1 = Publisher.eraseToAnyPublisher()();
    swift_release();
    *(void *)(v2 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100113898()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = sub_10000A38C(&qword_100366AD8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v64 = v2;
  uint64_t v65 = v3;
  __chkstk_darwin(v2);
  id v63 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A38C(&qword_100366AE0);
  uint64_t v6 = *(void (***)(char *, void))(v5 - 8);
  uint64_t v53 = v5;
  Swift::String v54 = v6;
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A38C(&qword_100366AE8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v55 = v9;
  uint64_t v56 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000A38C(&qword_100366AF0);
  uint64_t v59 = *(void *)(v13 - 8);
  uint64_t v60 = v13;
  uint64_t v14 = *(void *)(v59 + 64);
  uint64_t v15 = __chkstk_darwin(v13);
  id v58 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v66 = (char *)&v52 - v16;
  sub_10000A38C(&qword_100366AF8);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  *(void *)(v0 + 16) = v17;
  *(void *)(v0 + 24) = 0;
  uint64_t v18 = v0;
  id v19 = objc_allocWithZone((Class)sub_10000A38C(&qword_100366B00));
  *(void *)(v0 + 32) = sub_100114A30(0xD000000000000031, 0x80000001002BECA0, &qword_100366B00);
  *(void *)(v0 + 40) = &_swiftEmptySetSingleton;
  uint64_t v20 = v0 + 40;
  uint64_t v62 = v1;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, v1, (uint64_t)&off_100328788);
  id v21 = *(id *)(v0 + 32);
  uint64_t v22 = sub_100114908(&qword_100366B68, &qword_100366B70);

  uint64_t v67 = v22;
  swift_allocObject();
  swift_weakInit();
  sub_10000A38C(&qword_100366B08);
  Swift::String v57 = &protocol conformance descriptor for AnyPublisher<A, B>;
  sub_10000B010(&qword_100366B10, &qword_100366B08);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  uint64_t v61 = v20;
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v67 = sub_10011375C();
  sub_10000A38C(&qword_10035F5D0);
  sub_10000A38C(&qword_100366B18);
  sub_10000B010(&qword_100367700, &qword_10035F5D0);
  Publisher.compactMap<A>(_:)();
  swift_release();
  sub_10000A38C(&qword_100366B20);
  uint64_t v23 = v53;
  Publishers.CompactMap.map<A>(_:)();
  v54[1](v8, v23);
  sub_10000B010(&qword_100366B28, &qword_100366AE8);
  Swift::String v54 = (void (**)(char *, void))&protocol conformance descriptor for Publishers.Map<A, B>;
  sub_10000B010(&qword_100366B30, &qword_100366B20);
  uint64_t v24 = v66;
  uint64_t v25 = v55;
  Publisher<>.switchToLatest()();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v12, v25);
  uint64_t v67 = type metadata accessor for ViewServiceLinkProducer();
  uint64_t v52 = v18;
  swift_retain();
  sub_10000A38C(&qword_100366B38);
  String.init<A>(describing:)();
  id v26 = objc_allocWithZone((Class)CULogHandle);
  NSString v27 = String._bridgeToObjectiveC()();
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v29 = [v26 initWithSubsystem:v27 category:v28];
  swift_release();

  uint64_t v30 = v58;
  uint64_t v31 = v59;
  uint64_t v32 = v24;
  uint64_t v33 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v58, v32, v60);
  unint64_t v34 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v35 = (v14 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_10011440C;
  *(void *)(v38 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v38 + v34, v30, v33);
  unint64_t v39 = (void *)(v38 + v35);
  void *v39 = 0;
  v39[1] = 0xE000000000000000;
  uint64_t v40 = (void *)(v38 + v36);
  *uint64_t v40 = 0;
  v40[1] = 0xE000000000000000;
  *(void *)(v38 + v37) = v29;
  *(_DWORD *)(v38 + ((v37 + 11) & 0xFFFFFFFFFFFFFFF8)) = 40;
  id v41 = v29;
  sub_10000A38C(&qword_10035D070);
  sub_10000B010(&qword_100366B40, &qword_100366AF0);
  unint64_t v42 = v63;
  uint64_t v43 = v66;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_100366B48, &qword_100366AD8);
  uint64_t v44 = v64;
  uint64_t v45 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v42, v44);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v43, v33);
  uint64_t v67 = v45;
  uint64_t v46 = swift_allocObject();
  uint64_t v47 = v52;
  swift_weakInit();
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = v62;
  *(void *)(v48 + 16) = v46;
  *(void *)(v48 + 24) = v49;
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = sub_100114E38;
  *(void *)(v50 + 24) = v48;
  sub_10000A38C(&qword_100366B50);
  sub_10000B010(&qword_100366B58, &qword_100366B50);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  return v47;
}

uint64_t sub_100114178(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(void *)(*(void *)(result + 16) + 24) = v1;
    swift_retain_n();
    swift_retain();
    swift_release();
    sub_100104C3C();
    swift_retain();
    CurrentValueSubject.send(_:)();
    swift_release();
    swift_release();
    swift_release_n();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100114250()
{
  return swift_release();
}

uint64_t sub_100114328()
{
  _StringGuts.grow(_:)(26);
  v0._uint64_t countAndFlagsBits = 0x206B6E694CLL;
  v0._unint64_t object = (void *)0xE500000000000000;
  String.append(_:)(v0);
  sub_10000A38C(&qword_100366B18);
  _print_unlocked<A, B>(_:_:)();
  v1._unint64_t object = (void *)0x80000001002BECE0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v1);
  _print_unlocked<A, B>(_:_:)();
  return 0;
}

uint64_t sub_10011440C()
{
  return sub_100114328();
}

uint64_t sub_10011441C(uint64_t result, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  if (a2 >= 2u)
  {
    uint64_t v5 = result;
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v6 = *(void *)(*(void *)(result + 16) + 24);
      swift_retain();
      uint64_t result = swift_release();
      if (v6)
      {
        uint64_t result = swift_release();
        if (v6 == v5)
        {
          _StringGuts.grow(_:)(17);
          v7._uint64_t countAndFlagsBits = 0x676E69766F6D6552;
          v7._unint64_t object = (void *)0xEF203A6B6E696C20;
          String.append(_:)(v7);
          sub_10000A38C(&qword_100366B18);
          _print_unlocked<A, B>(_:_:)();
          sub_10016ABE4(0, (void *)0xE000000000000000, 0, a4, (uint64_t)&off_100328788);
          swift_bridgeObjectRelease();
          swift_beginAccess();
          uint64_t result = swift_weakLoadStrong();
          if (result)
          {
            *(void *)(*(void *)(result + 16) + 24) = 0;
            swift_retain();
            swift_release();
            sub_100104C3C();
            swift_retain();
            CurrentValueSubject.send(_:)();
            swift_release();
            swift_release();
            swift_release();
            return swift_release();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1001145DC()
{
  type metadata accessor for ViewServiceLinkProducer();
  sub_10000A38C(&qword_100366B38);
  String.init<A>(describing:)();
  id v1 = objc_allocWithZone((Class)CULogHandle);
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v1 initWithSubsystem:v2 category:v3];

  NSString v5 = String._bridgeToObjectiveC()();
  [v4 ulog:40 message:v5];

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100114700()
{
  sub_1001145DC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ViewServiceLinkProducer()
{
  return self;
}

void sub_100114758()
{
  type metadata accessor for ViewServiceLinkProducer();
  sub_10000A38C(&qword_100366B38);
  String.init<A>(describing:)();
  id v1 = objc_allocWithZone((Class)CULogHandle);
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v1 initWithSubsystem:v2 category:v3];

  NSString v5 = String._bridgeToObjectiveC()();
  [v4 ulog:40 message:v5];

  id v6 = *(id *)(v0 + 32);
  sub_10024C720();
}

uint64_t sub_100114870(uint64_t *a1)
{
  uint64_t v2 = qword_100368660;
  if (*(void *)(v1 + qword_100368660))
  {
    uint64_t v3 = *(void *)(v1 + qword_100368660);
  }
  else
  {
    uint64_t v4 = v1;
    sub_10000A38C(a1);
    swift_allocObject();
    uint64_t v3 = PassthroughSubject.init()();
    *(void *)(v4 + v2) = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v3;
}

uint64_t sub_1001148F4()
{
  return sub_100114908(&qword_100366B78, &qword_100366B80);
}

uint64_t sub_100114908(uint64_t *a1, unint64_t *a2)
{
  uint64_t v4 = qword_100368668;
  if (*(void *)(v2 + qword_100368668))
  {
    uint64_t v5 = *(void *)(v2 + qword_100368668);
  }
  else
  {
    uint64_t v7 = v2;
    sub_100114870(a1);
    sub_10000A38C(a1);
    sub_10000B010(a2, a1);
    uint64_t v5 = Publisher.eraseToAnyPublisher()();
    swift_release();
    *(void *)(v7 + v4) = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

uint64_t sub_1001149E4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100114A1C(uint64_t *a1)
{
  return sub_100114178(a1);
}

char *sub_100114A24(uint64_t a1, uint64_t a2)
{
  return sub_100114A30(a1, a2, &qword_100366B88);
}

char *sub_100114A30(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  *(void *)&v3[qword_100368660] = 0;
  *(void *)&v3[qword_100368668] = 0;
  *(void *)&v3[qword_100368670] = &_swiftEmptySetSingleton;
  unint64_t v8 = v3;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, ObjectType, (uint64_t)&off_100329AA0);
  uint64_t v9 = &v8[qword_100368658];
  *(void *)uint64_t v9 = a1;
  *((void *)v9 + 1) = a2;
  id v10 = objc_allocWithZone((Class)NSXPCListener);
  swift_bridgeObjectRetain();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [v10 initWithMachServiceName:v11];

  *(void *)&v8[qword_100368650] = v12;
  uint64_t v13 = qword_10035A628;
  id v14 = v12;
  if (v13 != -1) {
    swift_once();
  }
  id v15 = (id)qword_1003ACB50;
  [v14 _setQueue:v15];

  v18.receiver = v8;
  v18.super_class = (Class)sub_10000A38C(a3);
  uint64_t v16 = (char *)[super init];
  [*(id *)&v16[qword_100368650] setDelegate:v16];
  return v16;
}

uint64_t sub_100114BE0()
{
  uint64_t v1 = sub_10000A38C(&qword_100366AF0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  uint64_t v5 = (v3 + 32) & ~v3;
  unint64_t v6 = (((((v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, (v6 + 11) & 0xFFFFFFFFFFFFFFF8 | 4, v3 | 7);
}

uint64_t sub_100114D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_10000A38C(&qword_100366AF0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)a2 = sub_1000385C8(*(void *)a1, *(unsigned char *)(a1 + 8), *(uint64_t (**)(uint64_t *))(v2 + 16), *(void *)(v2 + 24), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8), *(void *)(v2 + v8), *(void **)(v2 + v8 + 8), *(void **)(v2 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_DWORD *)(v2 + ((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)));
  *(unsigned char *)(a2 + 8) = v9;

  return swift_retain();
}

uint64_t sub_100114E00()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100114E38(uint64_t a1, unsigned __int8 a2)
{
  return sub_10011441C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100114E40()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100114E78(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_100114EAC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = *a1;
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return swift_retain();
}

uint64_t sub_100114EC0(void *a1, double a2)
{
  uint64_t v3 = v2;
  NSString v27 = a1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v28 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  __chkstk_darwin(v8);
  id v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v24 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v22 - v16;
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  UUID.init()();
  *(void *)(v3 + OBJC_IVAR____TtC17proximitycontrold16TimedTaskStorage_storage) = &_swiftEmptySetSingleton;
  *(double *)(v3 + OBJC_IVAR____TtC17proximitycontrold16TimedTaskStorage_duration) = a2;
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v15, v11);
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1001159D8;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A0AC;
  aBlock[3] = &unk_100328888;
  id v19 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v29 = _swiftEmptyArrayStorage;
  sub_1001159F8((unint64_t *)&qword_100363D50, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A38C((uint64_t *)&unk_10035E800);
  sub_10001683C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v20 = v27;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v26);
  v23(v17, v24);
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_10011529C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1001152F4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001152F4()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC17proximitycontrold16TimedTaskStorage_storage);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v21 = v0;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_1001159F8(&qword_1003677E0, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v23;
    uint64_t v4 = v24;
    uint64_t v5 = v25;
    uint64_t v6 = v26;
    unint64_t v7 = v27;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v4 = v2 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v2 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  if (v2 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v7)
    {
      uint64_t v12 = (v7 - 1) & v7;
      unint64_t v13 = __clz(__rbit64(v7)) | (v6 << 6);
      uint64_t v14 = v6;
      goto LABEL_27;
    }
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      return result;
    }
    if (v15 >= v11) {
      goto LABEL_30;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    uint64_t v14 = v6 + 1;
    if (!v16)
    {
      uint64_t v14 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_30;
      }
      unint64_t v16 = *(void *)(v4 + 8 * v14);
      if (!v16)
      {
        uint64_t v14 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_30;
        }
        unint64_t v16 = *(void *)(v4 + 8 * v14);
        if (!v16)
        {
          uint64_t v14 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_30;
          }
          unint64_t v16 = *(void *)(v4 + 8 * v14);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v12 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v14 << 6);
LABEL_27:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    swift_retain();
    if (!v18) {
      goto LABEL_30;
    }
    while (1)
    {
      AnyCancellable.cancel()();
      uint64_t result = swift_release();
      uint64_t v6 = v14;
      unint64_t v7 = v12;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v14 = v6;
        uint64_t v12 = v7;
        if (v22) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  uint64_t v17 = v6 + 5;
  while (v11 != v17)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v17++);
    if (v16)
    {
      uint64_t v14 = v17 - 1;
      goto LABEL_26;
    }
  }
LABEL_30:
  uint64_t result = sub_10002E7C4();
  id v19 = *(void (**)(uint64_t))(v21 + 16);
  if (v19)
  {
    uint64_t v20 = swift_retain();
    v19(v20);
    return sub_10000F088((uint64_t)v19);
  }
  return result;
}

uint64_t sub_1001155C4()
{
  sub_10000F088(*(void *)(v0 + 16));
  uint64_t v1 = v0 + OBJC_IVAR____TtC17proximitycontrold16TimedTaskStorage_identifier;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_10011567C()
{
  return type metadata accessor for TimedTaskStorage();
}

uint64_t type metadata accessor for TimedTaskStorage()
{
  uint64_t result = qword_100366BD0;
  if (!qword_100366BD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001156D0()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100115788()
{
  return sub_1001159F8(&qword_100366CB0, (void (*)(uint64_t))type metadata accessor for TimedTaskStorage);
}

uint64_t sub_1001157D0()
{
  return static UUID.== infix(_:_:)();
}

Swift::Int sub_1001157EC()
{
  return Hasher._finalize()();
}

uint64_t sub_100115884()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_10011590C()
{
  return Hasher._finalize()();
}

uint64_t sub_1001159A0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001159D8()
{
  return sub_10011529C();
}

uint64_t sub_1001159E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001159F0()
{
  return swift_release();
}

uint64_t sub_1001159F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for BugComponents.RadarComponent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for BugComponents.RadarComponent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BugComponents.RadarComponent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ProxControlDemoClientMessage(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for BugComponents.RadarComponent(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BugComponents.RadarComponent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BugComponents.RadarComponent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BugComponents.RadarComponent()
{
  return &type metadata for BugComponents.RadarComponent;
}

unint64_t sub_100115CA0(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D65636E61686E45;
      break;
    case 2:
      unint64_t result = 0x2065727574616546;
      break;
    case 3:
      unint64_t result = 0x7974697275636553;
      break;
    case 4:
      unint64_t result = 0x616D726F66726550;
      break;
    case 5:
      unint64_t result = 0x754220726568744FLL;
      break;
    case 6:
      unint64_t result = 0x7265776F50;
      break;
    case 7:
      unint64_t result = 0x2073756F69726553;
      break;
    case 8:
      unint64_t result = 1802723668;
      break;
    case 9:
      unint64_t result = 0x69626173552F4955;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100115E04(char a1)
{
  if (!a1) {
    return 0xD000000000000015;
  }
  if (a1 == 1) {
    return 0xD000000000000022;
  }
  return 0xD000000000000010;
}

unint64_t sub_100115E64()
{
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[2];
  unint64_t v2 = (void *)v0[3];
  swift_bridgeObjectRetain();
  v3._uint64_t countAndFlagsBits = v1;
  v3._unint64_t object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 0x3D6469202CLL;
  v4._unint64_t object = (void *)0xE500000000000000;
  String.append(_:)(v4);
  uint64_t v6 = *v0;
  uint64_t v5 = (void *)v0[1];
  swift_bridgeObjectRetain();
  v7._uint64_t countAndFlagsBits = v6;
  v7._unint64_t object = v5;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  return 0xD000000000000010;
}

unint64_t sub_100115F30(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D65636E61686E45;
      break;
    case 2:
      unint64_t result = 0x2065727574616546;
      break;
    case 3:
      unint64_t result = 0x7974697275636553;
      break;
    case 4:
      unint64_t result = 0x616D726F66726550;
      break;
    case 5:
      unint64_t result = 0x754220726568744FLL;
      break;
    case 6:
      unint64_t result = 0x7265776F50;
      break;
    case 7:
      unint64_t result = 0x2073756F69726553;
      break;
    case 8:
      unint64_t result = 1802723668;
      break;
    case 9:
      unint64_t result = 0x69626173552F4955;
      break;
    default:
      return result;
  }
  return result;
}

Swift::Int sub_100116094()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_100115CA0(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1001160F8()
{
  sub_100115CA0(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10011614C()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_100115CA0(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_1001161AC@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100116B7C(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1001161DC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100115CA0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100116208(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_100115CA0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_100115CA0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_100116294(void *a1@<X8>)
{
  *a1 = &off_10031E2F8;
}

unint64_t sub_1001162A4()
{
  return sub_100115F30(*v0);
}

Swift::Int sub_1001162AC()
{
  return sub_10015DFD4();
}

uint64_t sub_1001162B4()
{
  return sub_10015E6DC();
}

Swift::Int sub_1001162BC()
{
  return sub_10015EB74();
}

unint64_t sub_1001162C4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100116BC8(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1001162F4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100115E04(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100116320(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10005D870(*a1, *a2);
}

void sub_10011632C(void *a1@<X8>)
{
  *a1 = &off_10031E390;
}

unint64_t sub_10011633C()
{
  return sub_100115E04(*v0);
}

unsigned char *storeEnumTagSinglePayload for BugComponents.Reproducibility(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100116414);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BugComponents.Reproducibility()
{
  return &type metadata for BugComponents.Reproducibility;
}

unsigned char *storeEnumTagSinglePayload for BugComponents.Keyword(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100116518);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BugComponents.Keyword()
{
  return &type metadata for BugComponents.Keyword;
}

ValueMetadata *type metadata accessor for BugComponents()
{
  return &type metadata for BugComponents;
}

uint64_t getEnumTagSinglePayload for BugComponents.Classification(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BugComponents.Classification(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001166BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BugComponents.Classification()
{
  return &type metadata for BugComponents.Classification;
}

uint64_t sub_1001166F4()
{
  return sub_100047AD0(&qword_100366CB8, &qword_100366CC0);
}

unint64_t sub_100116720()
{
  unint64_t result = qword_100366CC8;
  if (!qword_100366CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366CC8);
  }
  return result;
}

uint64_t sub_100116774()
{
  return sub_100047AD0(&qword_100366CD0, &qword_100366CD8);
}

unint64_t sub_1001167A0()
{
  unint64_t result = qword_100366CE0;
  if (!qword_100366CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366CE0);
  }
  return result;
}

Swift::Int sub_1001167F4()
{
  return sub_10015E080();
}

uint64_t sub_1001167FC()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001168FC()
{
  return sub_10015EC1C();
}

unint64_t sub_100116904@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100116C14(*a1);
  *a2 = result;
  return result;
}

void sub_100116934(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x737961776C41;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC00000079725420;
      uint64_t v3 = 0x74276E6469442049;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "Not Applicable");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 0x796C65726152;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 4:
      *(void *)a1 = 0x656D6974656D6F53;
      *(void *)(a1 + 8) = 0xE900000000000073;
      break;
    case 5:
      *(void *)a1 = 0x656C62616E55;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_100116A14(unsigned __int8 *a1, char *a2)
{
  return sub_10005D974(*a1, *a2);
}

void sub_100116A20(void *a1@<X8>)
{
  *a1 = &off_10031E468;
}

uint64_t sub_100116A30()
{
  uint64_t result = 0x737961776C41;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x74276E6469442049;
      break;
    case 2:
      uint64_t result = 0x6C70704120746F4ELL;
      break;
    case 3:
      uint64_t result = 0x796C65726152;
      break;
    case 4:
      uint64_t result = 0x656D6974656D6F53;
      break;
    case 5:
      uint64_t result = 0x656C62616E55;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100116AFC()
{
  return sub_100047AD0(&qword_100366CE8, &qword_100366CF0);
}

unint64_t sub_100116B28()
{
  unint64_t result = qword_100366CF8;
  if (!qword_100366CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366CF8);
  }
  return result;
}

unint64_t sub_100116B7C(Swift::String string)
{
  unint64_t object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._unint64_t object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10031E1E8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xA) {
    return 10;
  }
  else {
    return v3;
  }
}

unint64_t sub_100116BC8(Swift::String string)
{
  unint64_t object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._unint64_t object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10031E328, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

unint64_t sub_100116C14(Swift::String string)
{
  unint64_t object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._unint64_t object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10031E3B8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

uint64_t BSInterfaceOrientation.description.getter()
{
  id v0 = (id)BSInterfaceOrientationDescription();
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v1;
}

uint64_t sub_100116CAC()
{
  id v0 = (id)BSInterfaceOrientationDescription();
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v1;
}

uint64_t sub_100116CFC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_100116D10()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of Identifiable.id.getter();
  uint64_t v4 = UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_100116E00()
{
  swift_getWitnessTable();

  return sub_100116D10();
}

uint64_t sub_100116E54()
{
  return UUID.uuidString.getter();
}

uint64_t sub_100116E88()
{
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  uint64_t v0 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  swift_release();
  return v0;
}

unint64_t sub_100116F18()
{
  unsigned __int8 v0 = UUID.uuid.getter();
  uint64_t v1 = UUID.uuid.getter() & 0xFF00 | v0;
  uint64_t v2 = UUID.uuid.getter() & 0xFF0000;
  uint64_t v3 = v1 | v2 | UUID.uuid.getter() & 0xFF000000;
  uint64_t v4 = UUID.uuid.getter() & 0xFF00000000;
  uint64_t v5 = v4 | UUID.uuid.getter() & 0xFF0000000000;
  uint64_t v6 = v3 | v5 | UUID.uuid.getter() & 0xFF000000000000;
  return v6 | UUID.uuid.getter() & 0xFF00000000000000;
}

uint64_t sub_100116F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, v11);
  uint64_t v12 = *(void *)(a3 + 16);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a4, v9, v12);
  }
  _s11UnwrapErrorVMa();
  swift_getWitnessTable();
  swift_allocError();
  *uint64_t v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_100117140(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  if (_getErrorEmbeddedNSError<A>(_:)())
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v6, v4, a1);
  }
  uint64_t v7 = _convertErrorToNSError(_:)();
  swift_errorRelease();
  return v7;
}

_UNKNOWN **static Bool.allCases.getter()
{
  return &off_10031E490;
}

void sub_100117294(void *a1@<X8>)
{
  *a1 = &off_10031E4B8;
}

uint64_t sub_1001172A8()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static Optional<A>.allCases.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v7 = &v15[-v6];
  uint64_t v8 = type metadata accessor for Optional();
  type metadata accessor for _ContiguousArrayStorage();
  swift_allocObject();
  uint64_t v9 = static Array._adoptStorage(_:count:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(v10, 1, 1, a1);
  sub_10001A0B4(v9);
  dispatch thunk of static CaseIterable.allCases.getter();
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_10004DDF8((void (*)(char *, char *))sub_10011760C, (uint64_t)v15, AssociatedTypeWitness, v8, (uint64_t)&type metadata for Never, AssociatedConformanceWitness, (uint64_t)&protocol witness table for Never, v12);
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  uint64_t v13 = static Array.+ infix(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

void sub_100117530(uint64_t a1)
{
}

void sub_100117554(uint64_t a1)
{
}

void sub_100117578(uint64_t a1)
{
}

void sub_10011759C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 initWithSuiteName:v6];

  *a4 = v7;
}

uint64_t sub_10011760C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

unint64_t sub_1001176C4()
{
  unint64_t result = qword_100366D00;
  if (!qword_100366D00)
  {
    sub_10000A3D0(qword_100366D08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100366D00);
  }
  return result;
}

uint64_t _s11UnwrapErrorVMa()
{
  return sub_10000F2E4();
}

uint64_t getEnumTagSinglePayload for HandoffLeaderStub(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HandoffLeaderStub(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_1001177E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_100117800()
{
  return sub_10012560C(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___transferManager, (void (*)(void))type metadata accessor for HandoffTransferManager, 72, (uint64_t (*)(uint64_t))sub_1002130FC);
}

uint64_t sub_100117838(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_100129DD8(&qword_1003677E0, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v13 >= v9) {
      return sub_10002E7C4();
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v12 = v4 + 1;
    if (!v14)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_10002E7C4();
      }
      unint64_t v14 = *(void *)(v17 + 8 * v12);
      if (!v14)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_10002E7C4();
        }
        unint64_t v14 = *(void *)(v17 + 8 * v12);
        if (!v14)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_10002E7C4();
          }
          unint64_t v14 = *(void *)(v17 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              return sub_10002E7C4();
            }
            unint64_t v14 = *(void *)(v17 + 8 * v12);
            if (!v14)
            {
              uint64_t v15 = v4 + 6;
              while (v9 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_10002E7C4();
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16) {
      return sub_10002E7C4();
    }
    while (1)
    {
      AnyCancellable.cancel()();
      uint64_t result = swift_release();
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v23) {
          continue;
        }
      }
      return sub_10002E7C4();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100117AF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A38C(&qword_1003677A8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___sessionPublisher;
  if (*(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___sessionPublisher))
  {
    uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___sessionPublisher);
  }
  else
  {
    sub_1001252B0();
    swift_beginAccess();
    sub_10000A38C(&qword_1003677B0);
    Published.projectedValue.getter();
    swift_endAccess();
    swift_release();
    sub_10000B010(&qword_1003677B8, &qword_1003677A8);
    uint64_t v7 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(void *)(v1 + v6) = v7;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v7;
}

char *sub_100117C90(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = (char *)_swiftEmptyArrayStorage;
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = [v5 identifier];
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_10008892C(0, *((void *)v3 + 2) + 1, 1, v3);
        }
        unint64_t v14 = *((void *)v3 + 2);
        unint64_t v13 = *((void *)v3 + 3);
        if (v14 >= v13 >> 1) {
          uint64_t v3 = sub_10008892C((char *)(v13 > 1), v14 + 1, 1, v3);
        }
        *((void *)v3 + 2) = v14 + 1;
        uint64_t v15 = &v3[16 * v14];
        *((void *)v15 + 4) = v10;
        *((void *)v15 + 5) = v12;
      }
      else
      {
      }
      ++v4;
      if (v7 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  uint64_t v3 = (char *)_swiftEmptyArrayStorage;
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100117E28(char a1)
{
  if (a1 == 5)
  {
    unint64_t v1 = 0xE700000000000000;
    unint64_t v2 = 0x7373696D736964;
  }
  else
  {
    _StringGuts.grow(_:)(22);
    swift_bridgeObjectRelease();
    v4._uint64_t countAndFlagsBits = sub_10023DBE8(a1);
    String.append(_:)(v4);
    swift_bridgeObjectRelease();
    v5._uint64_t countAndFlagsBits = 10528;
    v5._unint64_t object = (void *)0xE200000000000000;
    String.append(_:)(v5);
    unint64_t v2 = 0xD000000000000012;
    unint64_t v1 = 0x80000001002BD230;
  }
  unint64_t v6 = v1;
  String.append(_:)(*(Swift::String *)&v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100117F08(char a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HandoffEvent();
  __chkstk_darwin(v4);
  unint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *unint64_t v6 = a1;
    swift_storeEnumTagMultiPayload();
    uint64_t v8[4] = 1;
    sub_100119C00((uint64_t)v6, a2, 0x100000000uLL);
    swift_release();
    return sub_10013C8D0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for HandoffEvent);
  }
  return result;
}

uint64_t sub_100118014()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    swift_retain();
    uint64_t v1 = UUID.uuidString.getter();
    uint64_t v3 = v2;
    swift_release();
    sub_100123140(v1, v3);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_1001180D8(uint64_t a1, uint64_t a2, char a3)
{
  swift_retain();
  uint64_t v5 = UUID.uuidString.getter();
  uint64_t v7 = v6;
  swift_release();
  *(unsigned char *)a1 = a3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v7;
  type metadata accessor for HandoffEvent();
  swift_storeEnumTagMultiPayload();
  swift_retain();
  CurrentValueSubject.value.getter();
  if (v13)
  {
    CurrentValueSubject.value.getter();
    swift_release();
    uint64_t v8 = v14;
    unsigned __int8 v9 = v15;
  }
  else
  {
    uint64_t v8 = v11;
    swift_release();
    unsigned __int8 v9 = v12 & 1;
  }
  return v8 | ((unint64_t)v9 << 32);
}

uint64_t sub_1001181C4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000A38C(&qword_1003674C8);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  unsigned __int8 v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10013C47C(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for HandoffEvent);
  uint64_t v10 = &v9[*(int *)(v7 + 56)];
  *(_DWORD *)uint64_t v10 = a2;
  v10[4] = BYTE4(a2) & 1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_100119C00((uint64_t)v9, a3, a2 | ((HIDWORD(a2) & 1) << 32));
    swift_release();
  }
  return sub_10000D78C((uint64_t)v9, &qword_1003674C8);
}

uint64_t sub_1001182E0(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v4 = (unsigned int *)(a1 + *(int *)(sub_10000A38C(&qword_1003674C8) + 48));
  uint64_t v5 = *v4;
  unsigned __int8 v6 = *((unsigned char *)v4 + 4);
  uint64_t v7 = sub_10000A38C(&qword_1003674D8);
  return a2(a1, v5 | ((unint64_t)v6 << 32), a1 + *(int *)(v7 + 48));
}

uint64_t sub_100118368(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1001246B8(a1, (uint64_t)a2);
    swift_bridgeObjectRelease();
    if (v8)
    {
      sub_100273B48();
      sub_100122FCC(a1, (uint64_t)a2, (void (*)(void))sub_100057F34, (void (*)(uint64_t))sub_1000F06FC);
      swift_release();
      swift_release();
    }
    else
    {
      _StringGuts.grow(_:)(39);
      swift_bridgeObjectRelease();
      v9._uint64_t countAndFlagsBits = a1;
      v9._unint64_t object = a2;
      String.append(_:)(v9);
      sub_10016AE10(60, 0xD000000000000025, (void *)0x80000001002BF590, 0, a4, (uint64_t)&off_100320198);
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1001184D0@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A38C(&qword_100367588);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + *(int *)(v8 + 48), v4);
  type metadata accessor for TransferRecord();
  swift_allocObject();
  uint64_t v9 = swift_retain();
  uint64_t v10 = sub_1000E4C08(v9, (uint64_t)v7);
  uint64_t result = swift_release();
  *a2 = v10;
  return result;
}

uint64_t sub_1001185E8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    uint64_t v3 = a1 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferID;
    uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC17proximitycontrold14TransferRecord_transferID);
    uint64_t v5 = *(void *)(v3 + 8);
    swift_bridgeObjectRetain();
    sub_100122FCC(v4, v5, (void (*)(void))sub_100057F28, (void (*)(uint64_t))sub_1000F06FC);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001186C4(uint64_t *a1)
{
  uint64_t v15 = *a1;
  uint64_t v2 = sub_10000A38C(&qword_100367748);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A38C(&qword_100367750);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v10 = sub_100061478();
  swift_release();
  v17[0] = v10;
  swift_retain();
  sub_10000A38C(&qword_100367758);
  type metadata accessor for HandoffEvent();
  sub_10000B010(&qword_100367760, &qword_100367758);
  Publisher.map<A>(_:)();
  swift_release();
  swift_release();
  _OWORD v17[3] = v15;
  unint64_t v17[4] = &off_100321AC0;
  v17[0] = a1;
  sub_1000291F4((uint64_t)v17, (uint64_t)v16);
  uint64_t v11 = swift_allocObject();
  sub_10000D7E8(v16, v11 + 16);
  swift_retain();
  sub_10000A38C(&qword_100367688);
  sub_10000B010(&qword_100367768, &qword_100367750);
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_100367770, &qword_100367748);
  uint64_t v12 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_10000CC5C((uint64_t)v17);
  return v12;
}

uint64_t sub_100118A00@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (uint64_t *)((char *)a2 + *(int *)(sub_10000A38C(&qword_100367650) + 48));
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  uint64_t v16 = 0x1000000000000020;
  unint64_t v17 = 0x80000001002BF560;
  v15[3] = type metadata accessor for ActivityDisplayContext(0);
  uint64_t v5 = sub_10000D680(v15);
  sub_10013C47C(a1, (uint64_t)v5, type metadata accessor for ActivityDisplayContext);
  uint64_t v6 = sub_10002836C(v15);
  uint64_t v8 = v7;
  sub_10000CC5C((uint64_t)v15);
  v9._uint64_t countAndFlagsBits = v6;
  v9._unint64_t object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  unint64_t v10 = v17;
  *a2 = v16;
  a2[1] = v10;
  type metadata accessor for SessionEvent();
  swift_storeEnumTagMultiPayload();
  swift_retain();
  uint64_t v11 = UUID.uuidString.getter();
  uint64_t v13 = v12;
  swift_release();
  *uint64_t v4 = v11;
  v4[1] = v13;
  type metadata accessor for HandoffEvent();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100118B58(uint64_t *a1)
{
  uint64_t v17 = *a1;
  uint64_t v2 = sub_10000A38C(&qword_100367718);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A38C((uint64_t *)&unk_100367720);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_10005E918(v19);
  uint64_t v11 = v20;
  unint64_t v10 = v21;
  sub_10000D6E4(v19, v20);
  uint64_t v12 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v10[4])(v11, v10);
  sub_10000CC5C((uint64_t)v19);
  swift_release();
  v19[0] = v12;
  swift_retain();
  sub_10000A38C(&qword_10035F310);
  type metadata accessor for HandoffEvent();
  sub_10000B010(&qword_100367730, &qword_10035F310);
  Publisher.map<A>(_:)();
  swift_release();
  swift_release();
  uint64_t v20 = v17;
  uint64_t v21 = &off_100321AC0;
  v19[0] = (uint64_t)a1;
  sub_1000291F4((uint64_t)v19, (uint64_t)v18);
  uint64_t v13 = swift_allocObject();
  sub_10000D7E8(v18, v13 + 16);
  swift_retain();
  sub_10000A38C(&qword_100367688);
  sub_10000B010(&qword_100367738, (uint64_t *)&unk_100367720);
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_100367740, &qword_100367718);
  uint64_t v14 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_10000CC5C((uint64_t)v19);
  return v14;
}

uint64_t sub_100118ED0(uint64_t *a1)
{
  uint64_t v18 = *a1;
  uint64_t v19 = sub_10000A38C((uint64_t *)&unk_1003676D0);
  uint64_t v2 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A38C(&qword_10035F290);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A38C((uint64_t *)&unk_1003676E0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_10000A38C(&qword_10035F298);
  Published.projectedValue.getter();
  swift_endAccess();
  sub_10000B010((unint64_t *)&unk_1003676F0, &qword_10035F290);
  uint64_t v13 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  v21[0] = v13;
  swift_retain();
  sub_10000A38C(&qword_10035F5D0);
  type metadata accessor for HandoffEvent();
  sub_10000B010(&qword_100367700, &qword_10035F5D0);
  Publisher.map<A>(_:)();
  swift_release();
  swift_release();
  _OWORD v21[3] = v18;
  v21[4] = &off_100321AC0;
  v21[0] = a1;
  sub_1000291F4((uint64_t)v21, (uint64_t)v20);
  uint64_t v14 = swift_allocObject();
  sub_10000D7E8(v20, v14 + 16);
  swift_retain();
  sub_10000A38C(&qword_100367688);
  sub_10000B010(&qword_100367708, (uint64_t *)&unk_1003676E0);
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_100367710, (uint64_t *)&unk_1003676D0);
  uint64_t v15 = v19;
  uint64_t v16 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_10000CC5C((uint64_t)v21);
  return v16;
}

uint64_t sub_100119310@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (a1) {
    uint64_t v3 = 0x6C696E2D6E6F6ELL;
  }
  else {
    uint64_t v3 = 7104878;
  }
  if (a1) {
    uint64_t v4 = (void *)0xE700000000000000;
  }
  else {
    uint64_t v4 = (void *)0xE300000000000000;
  }
  uint64_t v5 = (void *)((char *)a2 + *(int *)(sub_10000A38C(&qword_100367650) + 48));
  v6._uint64_t countAndFlagsBits = v3;
  v6._unint64_t object = v4;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  *a2 = 0x4E494C2097949FF0;
  a2[1] = 0xAD00002020203A4BLL;
  type metadata accessor for SessionEvent();
  swift_storeEnumTagMultiPayload();
  swift_retain();
  uint64_t v7 = UUID.uuidString.getter();
  uint64_t v9 = v8;
  swift_release();
  *uint64_t v5 = v7;
  v5[1] = v9;
  type metadata accessor for HandoffEvent();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10011943C(uint64_t *a1)
{
  uint64_t v15 = *a1;
  uint64_t v2 = sub_10000A38C(&qword_100367690);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A38C(&qword_100367698);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v10 = sub_1000630AC();
  swift_release();
  v17[0] = v10;
  swift_retain();
  sub_10000A38C((uint64_t *)&unk_1003676A0);
  type metadata accessor for HandoffEvent();
  sub_10000B010(&qword_10035F2D0, (uint64_t *)&unk_1003676A0);
  Publisher.map<A>(_:)();
  swift_release();
  swift_release();
  _OWORD v17[3] = v15;
  unint64_t v17[4] = &off_100321AC0;
  v17[0] = a1;
  sub_1000291F4((uint64_t)v17, (uint64_t)v16);
  uint64_t v11 = swift_allocObject();
  sub_10000D7E8(v16, v11 + 16);
  swift_retain();
  sub_10000A38C(&qword_100367688);
  sub_10000B010(&qword_1003676B0, &qword_100367698);
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_1003676B8, &qword_100367690);
  uint64_t v12 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_10000CC5C((uint64_t)v17);
  return v12;
}

uint64_t sub_100119778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (uint64_t *)(a2 + *(int *)(sub_10000A38C(&qword_100367650) + 48));
  uint64_t v5 = a2 + *(int *)(sub_10000A38C((uint64_t *)&unk_1003676C0) + 48);
  sub_10013C47C(a1, a2, type metadata accessor for ExperienceEffect);
  uint64_t v6 = sub_10000A38C(&qword_10035EDB0);
  sub_10013C47C(a1 + *(int *)(v6 + 36), v5, type metadata accessor for ExperienceEvent);
  type metadata accessor for SessionEvent();
  swift_storeEnumTagMultiPayload();
  swift_retain();
  uint64_t v7 = UUID.uuidString.getter();
  uint64_t v9 = v8;
  swift_release();
  *uint64_t v4 = v7;
  v4[1] = v9;
  type metadata accessor for HandoffEvent();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100119894(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = sub_10000A38C(&qword_100367688);
    sub_100119C00(a1, a1 + *(int *)(v3 + 48), *(unsigned int *)(a1 + *(int *)(v3 + 64)) | ((unint64_t)*(unsigned __int8 *)(a1 + *(int *)(v3 + 64) + 4) << 32));
    return swift_release();
  }
  return result;
}

uint64_t sub_100119924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (uint64_t *)(a1 + *(int *)(sub_10000A38C((uint64_t *)&unk_10035E840) + 48));
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  uint64_t v7 = (void *)(a2 + *(int *)(sub_10000A38C(&qword_100367650) + 48));
  sub_10013C47C(a1, a2, type metadata accessor for ExperienceEvent);
  type metadata accessor for SessionEvent();
  swift_storeEnumTagMultiPayload();
  *uint64_t v7 = v6;
  v7[1] = v5;
  type metadata accessor for HandoffEvent();
  swift_storeEnumTagMultiPayload();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1001199EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)a1;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 56);
  uint64_t v18 = a1 + *(int *)(sub_10000A38C(&qword_100367658) + 80);
  uint64_t v17 = a2 + *(int *)(sub_10000A38C(&qword_100367638) + 48);
  uint64_t v11 = (void *)(a2 + *(int *)(sub_10000A38C(&qword_100367650) + 48));
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v14;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v8;
  *(unsigned char *)(a2 + 56) = v10;
  type metadata accessor for ExperienceEvent(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SessionEvent();
  swift_storeEnumTagMultiPayload();
  *uint64_t v11 = v15;
  v11[1] = v9;
  type metadata accessor for HandoffEvent();
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v17, v18, v12);
  sub_10001FA00(v16, v14, v4, v5, v6, v7, v8, v10);

  return swift_bridgeObjectRetain();
}

uint64_t sub_100119B74(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = sub_10000A38C(a3);
    sub_100119C00(a1, a1 + *(int *)(v6 + 48), 0x100000000uLL);
    return swift_release();
  }
  return result;
}

void sub_100119C00(uint64_t a1, uint64_t a2, unint64_t a3)
{
  v25[0] = a2;
  uint64_t v5 = type metadata accessor for SessionEvent();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HandoffEvent();
  __chkstk_darwin(v8);
  unsigned __int8 v10 = (uint64_t *)((char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25[2] = 0;
  _OWORD v25[3] = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  v11._uint64_t countAndFlagsBits = 0xD000000000000029;
  v11._unint64_t object = (void *)0x80000001002BF4D0;
  String.append(_:)(v11);
  v12._uint64_t countAndFlagsBits = 0x666F646E6168203ALL;
  v12._unint64_t object = (void *)0xEF3D746E65764566;
  String.append(_:)(v12);
  _print_unlocked<A, B>(_:_:)();
  id v13 = sub_1001F6074();
  swift_bridgeObjectRetain();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 ulog:40 message:v14];
  swift_bridgeObjectRelease();

  sub_10013C47C(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for HandoffEvent);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unsigned __int8 v15 = *(unsigned char *)v10;
      uint64_t v16 = sub_1001246B8(v10[1], v10[2]);
      swift_bridgeObjectRelease();
      if (v16)
      {
        sub_1002781C0(v15, v25[0], a3 | ((HIDWORD(a3) & 1) << 32));
        swift_release();
      }
      else
      {
        id v21 = sub_1001F6074();
        NSString v22 = String._bridgeToObjectiveC()();
        [v21 ulog:60 message:v22 v25[0]];
      }
      break;
    case 2u:
      uint64_t v17 = (uint64_t *)((char *)v10 + *(int *)(sub_10000A38C(&qword_100367650) + 48));
      uint64_t v19 = *v17;
      uint64_t v18 = v17[1];
      sub_10013CEA4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SessionEvent);
      uint64_t v20 = sub_1001246B8(v19, v18);
      swift_bridgeObjectRelease();
      if (v20)
      {
        sub_100273FD8((uint64_t)v7, v25[0], a3 | ((HIDWORD(a3) & 1) << 32));
        swift_release();
      }
      else
      {
        id v23 = sub_1001F6074();
        NSString v24 = String._bridgeToObjectiveC()();
        [v23 ulog:60 message:v24 v25[0]];
      }
      sub_10013C8D0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SessionEvent);
      break;
    case 3u:
      sub_10003A3F8(*v10, v10[1], v10[2]);
      swift_bridgeObjectRelease();
      break;
    default:
      sub_100279F1C(*(unsigned char *)v10, v25[0]);
      break;
  }
}

void sub_100119FC4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t *sub_10011A030()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___activityProxy;
  if (*(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___activityProxy))
  {
    uint64_t v2 = *(uint64_t **)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___activityProxy);
  }
  else
  {
    uint64_t v3 = v0;
    id v4 = sub_100124BF4();
    type metadata accessor for ActivityProxy();
    swift_allocObject();
    uint64_t v2 = sub_10007EF08((uint64_t)v4);
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10011A0C0()
{
  return sub_10011A510(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___experienceEventSessionIDReasonPublisher, (uint64_t)&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_experienceEventSessionIDReasonSubject, &qword_100367678, &qword_100367680);
}

uint64_t sub_10011A0E4()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___viewServiceLinkPublisher;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___viewServiceLinkPublisher))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___viewServiceLinkPublisher);
  }
  else
  {
    sub_1001258F0();
    uint64_t v2 = sub_10011375C();
    swift_release();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10011A160()
{
  return sub_10011A1A4((void (*)(void))sub_10000C2B8, (void (*)(void))sub_10000C2B8, sub_10007D488, (uint64_t (*)(void))sub_10007D618);
}

uint64_t sub_10011A1A4(void (*a1)(void), void (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  a1();
  id v7 = objc_allocWithZone((Class)CULogHandle);
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [v7 initWithSubsystem:v8 category:v9];

  NSString v11 = String._bridgeToObjectiveC()();
  [v10 ulog:40 message:v11];

  return sub_10011A2AC(a2, a3, a4);
}

uint64_t sub_10011A2AC(void (*a1)(void), uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  a1();
  id v5 = objc_allocWithZone((Class)CULogHandle);
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v5 initWithSubsystem:v6 category:v7];

  NSString v9 = String._bridgeToObjectiveC()();
  [v8 ulog:40 message:v9];

  uint64_t result = a2();
  if (!*(void *)(v3 + qword_10035F9F0))
  {
    return a3();
  }
  return result;
}

uint64_t sub_10011A3F4()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___screenOnPublisher;
  if (*(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___screenOnPublisher))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___screenOnPublisher);
  }
  else
  {
    uint64_t v3 = v0;
    swift_retain();
    sub_100104B88();
    sub_10000A38C((uint64_t *)&unk_10036BFE0);
    sub_10000B010((unint64_t *)&unk_100363D30, (uint64_t *)&unk_10036BFE0);
    uint64_t v2 = Publisher.eraseToAnyPublisher()();
    swift_release();
    swift_release();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10011A4EC()
{
  return sub_10011A510(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___deviceUXRegionPublisher, (uint64_t)&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_deviceUXRegionSubject, &qword_1003677C0, &qword_1003677C8);
}

uint64_t sub_10011A510(uint64_t *a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(v4 + *a1);
  if (v6)
  {
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v10 = v4;
    sub_10000A38C(a3);
    sub_10000B010(a4, a3);
    uint64_t v7 = Publisher.eraseToAnyPublisher()();
    *(void *)(v10 + v5) = v7;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v7;
}

uint64_t sub_10011A5D0()
{
  return sub_10011A9A0(&qword_1003677F0, &qword_1003677F8);
}

uint64_t sub_10011A5E4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    PassthroughSubject.send(_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_10011A66C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    PassthroughSubject.send(_:)();
    return swift_release();
  }
  return result;
}

unint64_t sub_10011A6F8(unint64_t result, char a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    if (a2 == 1)
    {
      swift_beginAccess();
      uint64_t result = swift_weakLoadStrong();
      if (result)
      {
LABEL_8:
        swift_retain();
        swift_release();
        PassthroughSubject.send(_:)();
        return swift_release();
      }
    }
  }
  else
  {
    if (result >= 3)
    {
      _StringGuts.grow(_:)(36);
      swift_bridgeObjectRelease();
      v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      sub_10016AE10(60, 0xD000000000000022, (void *)0x80000001002BF5F0, 0, a4, (uint64_t)&off_1003248C0);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_10011A884()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    PassthroughSubject.send(_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_10011A914()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    PassthroughSubject.send(_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_10011A9A0(uint64_t *a1, unint64_t *a2)
{
  if (*(void *)(v2 + 24))
  {
    uint64_t v4 = *(void *)(v2 + 24);
  }
  else
  {
    uint64_t v6 = v2;
    sub_10000A38C(a1);
    sub_10000B010(a2, a1);
    uint64_t v4 = Publisher.eraseToAnyPublisher()();
    *(void *)(v6 + 24) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10011AA58(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10011B25C(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_10011AACC(char a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10011B924(a1 & 1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_10011AB40(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a4(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_10011ABBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    sub_10000A38C(&qword_100367CF8);
    sub_10000B010(&qword_100367D00, &qword_100367CF8);
    Publisher.eraseToAnyPublisher()();
    swift_retain();
    sub_10000A38C(&qword_100367D08);
    sub_10000A38C(&qword_100367CD8);
    sub_10000B010((unint64_t *)&unk_100367D10, &qword_100367D08);
    Publisher.map<A>(_:)();
    swift_release();
    swift_release();
    uint64_t v3 = sub_10000A38C(&qword_100367A50);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a2, 0, 1, v3);
  }
  else
  {
    uint64_t v5 = sub_10000A38C(&qword_100367A50);
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    return v6(a2, 1, 1, v5);
  }
}

uint64_t sub_10011AD94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(int *)(sub_10000A38C(&qword_100367CD8) + 48);
  sub_10013C47C(a1, a3, type metadata accessor for ViewServiceOutput);
  *(void *)(a3 + v6) = a2;

  return swift_retain();
}

uint64_t sub_10011AE0C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10011C7A8(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_10011AE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (void *)(a2 + *(int *)(sub_10000A38C(&qword_100367CD0) + 48));
  sub_10013C47C(a1, a2, type metadata accessor for ActivityDisplayContext);
  return off_10035F178(v4);
}

uint64_t sub_10011AF48()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void *)(result + 48);
    char v2 = *(unsigned char *)(result + 56);
    swift_retain();
    swift_release();
    if (v1)
    {
      swift_release();
      return (v2 & 1) == 0;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10011AFD0(uint64_t a1)
{
  return sub_10011B164(a1, &qword_100367CD0, type metadata accessor for ActivityDisplayContext);
}

uint64_t sub_10011AFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(int *)(sub_10000A38C(&qword_100367C30) + 48);
  sub_10013C47C(a1, a2, (uint64_t (*)(void))type metadata accessor for NearbySharingInteractionDisplayContext);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *(void *)(a2 + v4) = v6;
  return result;
}

uint64_t sub_10011B0BC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void *)(result + 48);
    char v2 = *(unsigned char *)(result + 56);
    swift_retain();
    swift_release();
    if (v1)
    {
      swift_release();
      return v2 & 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10011B140(uint64_t a1)
{
  return sub_10011B164(a1, &qword_100367C30, (uint64_t (*)(void))type metadata accessor for NearbySharingInteractionDisplayContext);
}

uint64_t sub_10011B164(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for ViewServiceInput(0);
  __chkstk_darwin(v6);
  id v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_10000A38C(a2);
  if (*(void *)(a1 + *(int *)(result + 48)))
  {
    sub_10013C47C(a1, (uint64_t)v8, a3);
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_10007CD78((uint64_t)v8);
    sub_10013C8D0((uint64_t)v8, type metadata accessor for ViewServiceInput);
    return swift_release();
  }
  return result;
}

void sub_10011B25C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 7104878;
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  if (a1)
  {
    swift_retain();
    UUID.uuidString.getter();
    sub_100089A9C(8);
    swift_bridgeObjectRelease();
    v5._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
    String.append(_:)(v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6._uint64_t countAndFlagsBits = 32;
    v6._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v6);
    swift_retain();
    uint64_t v7 = sub_1001F7514();
    NSString v9 = v8;
    swift_release();
    v10._uint64_t countAndFlagsBits = v7;
    v10._unint64_t object = v9;
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    v11._uint64_t countAndFlagsBits = 62;
    v11._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v11);
    swift_release();
    uint64_t v12 = 60;
    unint64_t v13 = 0xE100000000000000;
  }
  else
  {
    unint64_t v13 = 0xE300000000000000;
    uint64_t v12 = 7104878;
  }
  unint64_t v14 = v13;
  String.append(_:)(*(Swift::String *)&v12);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 0x736553646C6F202CLL;
  v15._unint64_t object = (void *)0xED00003D6E6F6973;
  String.append(_:)(v15);
  if (a2)
  {
    swift_retain();
    UUID.uuidString.getter();
    sub_100089A9C(8);
    swift_bridgeObjectRelease();
    v16._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17._uint64_t countAndFlagsBits = 32;
    v17._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v17);
    swift_retain();
    uint64_t v18 = sub_1001F7514();
    uint64_t v20 = v19;
    swift_release();
    v21._uint64_t countAndFlagsBits = v18;
    v21._unint64_t object = v20;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    v22._uint64_t countAndFlagsBits = 62;
    v22._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v22);
    swift_release();
    uint64_t v4 = 60;
    id v23 = (void *)0xE100000000000000;
  }
  else
  {
    id v23 = (void *)0xE300000000000000;
  }
  v24._uint64_t countAndFlagsBits = v4;
  v24._unint64_t object = v23;
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  id v25 = sub_1001F6088();
  swift_bridgeObjectRetain();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v25 ulog:40 message:v26];
  swift_bridgeObjectRelease();

  sub_10011DF14(a2, 0x206E6F6973736553, (void *)0xEF6465676E616863);
}

uint64_t sub_10011B5B8(unsigned __int8 a1, uint64_t a2)
{
  int v4 = a1;
  _StringGuts.grow(_:)(25);
  v5._uint64_t countAndFlagsBits = 0x5F28656C646E6168;
  v5._unint64_t object = (void *)0xEE00293A726F663ALL;
  String.append(_:)(v5);
  v6._uint64_t countAndFlagsBits = 0x746365666665203ALL;
  v6._unint64_t object = (void *)0xE90000000000003DLL;
  String.append(_:)(v6);
  sub_100117E28(a1);
  v7._uint64_t countAndFlagsBits = 0x6F6973736573202CLL;
  v7._unint64_t object = (void *)0xEA00000000003D6ELL;
  String.append(_:)(v7);
  swift_retain();
  UUID.uuidString.getter();
  sub_100089A9C(8);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 32;
  v9._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  swift_retain();
  uint64_t v10 = sub_1001F7514();
  uint64_t v12 = v11;
  swift_release();
  v13._uint64_t countAndFlagsBits = v10;
  v13._unint64_t object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 62;
  v14._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  swift_release();
  v15._uint64_t countAndFlagsBits = 60;
  v15._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  id v16 = sub_1001F6088();
  swift_bridgeObjectRetain();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v16 ulog:40 message:v17];
  swift_bridgeObjectRelease();

  if (v4 == 5)
  {
    v18._uint64_t countAndFlagsBits = 0x6566664564726143;
    v18._unint64_t object = (void *)0xEB000000002E7463;
    String.append(_:)(v18);
    v19._uint64_t countAndFlagsBits = 0x7373696D736964;
    v19._unint64_t object = (void *)0xE700000000000000;
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    sub_10011DF14(a2, 0, (void *)0xE000000000000000);
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(unsigned char *)(*(void *)(a2 + OBJC_IVAR____TtC17proximitycontrold14HandoffSession__cardMode) + 24) = a1;
    swift_retain();
    sub_100104CE8();
    CurrentValueSubject.send(_:)();
    swift_release();
    swift_release();
    v21._uint64_t countAndFlagsBits = 0x6566664564726143;
    v21._unint64_t object = (void *)0xEB000000002E7463;
    String.append(_:)(v21);
    sub_100117E28(a1);
    sub_10011D0BC(0, a2, 0, (void *)0xE000000000000000);
    return swift_bridgeObjectRelease();
  }
}

void sub_10011B924(char a1, uint64_t a2)
{
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  int v4 = a1 & 1;
  if (a1) {
    uint64_t v5 = 0x7373696D736964;
  }
  else {
    uint64_t v5 = 0x746E6573657270;
  }
  unint64_t v6 = 0xE700000000000000;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0x6F6973736573202CLL;
  v7._unint64_t object = (void *)0xEA00000000003D6ELL;
  String.append(_:)(v7);
  swift_retain();
  UUID.uuidString.getter();
  sub_100089A9C(8);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 32;
  v9._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  swift_retain();
  uint64_t v10 = sub_1001F7514();
  uint64_t v12 = v11;
  swift_release();
  v13._uint64_t countAndFlagsBits = v10;
  v13._unint64_t object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 62;
  v14._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  swift_release();
  v15._uint64_t countAndFlagsBits = 60;
  v15._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  id v16 = sub_1001F6088();
  swift_bridgeObjectRetain();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v16 ulog:40 message:v17];
  swift_bridgeObjectRelease();

  if (v4)
  {
    _StringGuts.grow(_:)(37);
    swift_bridgeObjectRelease();
    sub_10011DF14(a2, 0xD00000000000002ALL, (void *)0x80000001002BF660);
  }
  else
  {
    _StringGuts.grow(_:)(37);
    swift_bridgeObjectRelease();
    sub_10011D0BC(1, a2, 0xD00000000000002ALL, (void *)0x80000001002BF890);
  }
}

void sub_10011BC10(char a1, uint64_t a2)
{
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0x7661776B636F6873;
    }
    else {
      uint64_t v4 = 0x7373696D736964;
    }
    if (a1 == 1) {
      unint64_t v5 = 0xE900000000000065;
    }
    else {
      unint64_t v5 = 0xE700000000000000;
    }
  }
  else
  {
    unint64_t v5 = 0xE400000000000000;
    uint64_t v4 = 1953393000;
  }
  unint64_t v6 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0x6F6973736573202CLL;
  v7._unint64_t object = (void *)0xEA00000000003D6ELL;
  String.append(_:)(v7);
  swift_retain();
  UUID.uuidString.getter();
  sub_100089A9C(8);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 32;
  v9._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  swift_retain();
  uint64_t v10 = sub_1001F7514();
  uint64_t v12 = v11;
  swift_release();
  v13._uint64_t countAndFlagsBits = v10;
  v13._unint64_t object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 62;
  v14._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  swift_release();
  v15._uint64_t countAndFlagsBits = 60;
  v15._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  id v16 = sub_1001F6088();
  swift_bridgeObjectRetain();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v16 ulog:40 message:v17];
  swift_bridgeObjectRelease();

  if (qword_10035A520 != -1) {
    swift_once();
  }
  id v18 = *(id *)(qword_1003AC750 + 64);
  char v19 = sub_1000FD938();

  if (v19)
  {
    if (!a1)
    {
      _StringGuts.grow(_:)(18);
      swift_bridgeObjectRelease();
      Swift::String v21 = (void *)0x80000001002BF6B0;
      uint64_t v22 = a2;
      uint64_t v20 = 0xD000000000000014;
      goto LABEL_17;
    }
    if (a1 == 1)
    {
      _StringGuts.grow(_:)(18);
      swift_bridgeObjectRelease();
      uint64_t v20 = 0xD000000000000019;
      Swift::String v21 = (void *)0x80000001002BF690;
      uint64_t v22 = a2;
LABEL_17:
      sub_10011D0BC(1, v22, v20, v21);
      return;
    }
    _StringGuts.grow(_:)(37);
    swift_bridgeObjectRelease();
    sub_10011DF14(a2, 0xD00000000000002ALL, (void *)0x80000001002BF660);
  }
}

void sub_10011BFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A38C(&qword_10036C090);
  __chkstk_darwin(v4 - 8);
  uint64_t v53 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A38C((uint64_t *)&unk_100367BD0);
  __chkstk_darwin(v6 - 8);
  Swift::String v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State();
  uint64_t v9 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v48 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for ViewServiceInput(0);
  uint64_t v11 = __chkstk_darwin(v54);
  uint64_t v52 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  Swift::String v15 = (char **)((char *)&v48 - v14);
  __chkstk_darwin(v13);
  NSString v17 = (char *)&v48 - v16;
  unint64_t v57 = 0;
  unint64_t v58 = 0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  unint64_t v57 = 0xD00000000000001BLL;
  unint64_t v58 = 0x80000001002BF900;
  Swift::UInt64 v51 = v8;
  uint64_t v49 = v9;
  if (a1)
  {
    v56._uint64_t countAndFlagsBits = a1;
    swift_retain();
    sub_10000A38C(&qword_100366B18);
    uint64_t v18 = String.init<A>(describing:)();
    unint64_t v20 = v19;
  }
  else
  {
    unint64_t v20 = 0xE300000000000000;
    uint64_t v18 = 7104878;
  }
  unint64_t v21 = v20;
  String.append(_:)(*(Swift::String *)&v18);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 0x6F6973736573202CLL;
  v22._unint64_t object = (void *)0xEA00000000003D6ELL;
  String.append(_:)(v22);
  v56._uint64_t countAndFlagsBits = 60;
  v56._unint64_t object = (void *)0xE100000000000000;
  uint64_t v23 = a2 + OBJC_IVAR____TtC17proximitycontrold14HandoffSession_id;
  swift_retain();
  UUID.uuidString.getter();
  sub_100089A9C(8);
  swift_bridgeObjectRelease();
  v24._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25._uint64_t countAndFlagsBits = 32;
  v25._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v25);
  uint64_t v26 = *(void *)(a2 + 24);
  swift_retain();
  uint64_t v27 = sub_1001F7514();
  id v29 = v28;
  swift_release();
  v30._uint64_t countAndFlagsBits = v27;
  v30._unint64_t object = v29;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31._uint64_t countAndFlagsBits = 62;
  v31._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v31);
  swift_release();
  String.append(_:)(v56);
  swift_bridgeObjectRelease();
  id v32 = sub_1001F6088();
  swift_bridgeObjectRetain();
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v32 ulog:40 message:v33];
  swift_bridgeObjectRelease();

  if (a1)
  {
    swift_retain();
    sub_10011A1A4((void (*)(void))sub_10000C048, (void (*)(void))sub_10000C048, sub_10007D46C, (uint64_t (*)(void))sub_10007D600);
    if (*(void *)(v55 + 48))
    {
      if (*(unsigned char *)(v55 + 56))
      {
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v41 = (uint64_t)v51;
        CurrentValueSubject.value.getter();
        uint64_t v43 = v49;
        uint64_t v42 = v50;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v41, 1, v50) == 1)
        {
          CurrentValueSubject.value.getter();
          sub_10000D78C(v41, (uint64_t *)&unk_100367BD0);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v48, v41, v42);
        }
        swift_release();
        uint64_t v44 = type metadata accessor for UUID();
        uint64_t v45 = *(void *)(v44 - 8);
        uint64_t v46 = v53;
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v53, v23, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v46, 0, 1, v44);
        type metadata accessor for NearbySharingInteractionDisplayContext();
        uint64_t v47 = v52;
        SFAirDrop.NearbySharingInteraction.init(state:id:)();
        swift_release();
        void *v47 = _swiftEmptyArrayStorage;
        swift_storeEnumTagMultiPayload();
        sub_10007CD78((uint64_t)v47);
        swift_release();
        uint64_t v38 = (uint64_t)v47;
      }
      else
      {
        *NSString v17 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR____TtC17proximitycontrold14HandoffSession__cardMode) + 24);
        swift_storeEnumTagMultiPayload();
        swift_retain();
        sub_10007CD78((uint64_t)v17);
        sub_10013C8D0((uint64_t)v17, type metadata accessor for ViewServiceInput);
        *Swift::String v15 = [*(id *)(*(void *)(v26+ OBJC_IVAR____TtC17proximitycontrold13HandoffDevice__mediaRemoteDisplayContext)+ 24) proxDeviceState];
        swift_storeEnumTagMultiPayload();
        sub_10007CD78((uint64_t)v15);
        sub_10013C8D0((uint64_t)v15, type metadata accessor for ViewServiceInput);
        swift_retain();
        unint64_t v34 = (void *)sub_1001F9EE0();
        sub_100266C24(v34, (uint64_t)v17);
        swift_release();
        swift_unknownObjectRelease();
        swift_storeEnumTagMultiPayload();
        sub_10007CD78((uint64_t)v17);
        sub_10013C8D0((uint64_t)v17, type metadata accessor for ViewServiceInput);
        swift_retain();
        uint64_t v35 = sub_100061B34();
        uint64_t v37 = v36;
        swift_release();
        *(void *)NSString v17 = v35;
        *((void *)v17 + 1) = v37;
        swift_storeEnumTagMultiPayload();
        sub_10007CD78((uint64_t)v17);
        swift_release();
        uint64_t v38 = (uint64_t)v17;
      }
      sub_10013C8D0(v38, type metadata accessor for ViewServiceInput);
      swift_release();
    }
    else
    {
      id v39 = sub_1001F6088();
      NSString v40 = String._bridgeToObjectiveC()();
      [v39 ulog:60 message:v40];
      swift_release();
    }
  }
}

uint64_t sub_10011C7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v101 = a1;
  uint64_t v97 = sub_10000A38C((uint64_t *)&unk_10035E840);
  __chkstk_darwin(v97);
  uint64_t v98 = (uint64_t)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for ExperienceEvent(0);
  __chkstk_darwin(v96);
  uint64_t v5 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_10000A38C(&qword_100367658);
  __chkstk_darwin(v95);
  uint64_t v7 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v103 = *(void *)(v8 - 8);
  uint64_t v104 = v8;
  __chkstk_darwin(v8);
  int v102 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ViewServiceOutput(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = 0;
  unint64_t v107 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  v13._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v13._unint64_t object = (void *)0x80000001002BF8C0;
  String.append(_:)(v13);
  v14._uint64_t countAndFlagsBits = 0x74757074756F203ALL;
  v14._unint64_t object = (void *)0xE90000000000003DLL;
  String.append(_:)(v14);
  _print_unlocked<A, B>(_:_:)();
  v15._uint64_t countAndFlagsBits = 0x6F6973736573202CLL;
  v15._unint64_t object = (void *)0xEA00000000003D6ELL;
  String.append(_:)(v15);
  v105._uint64_t countAndFlagsBits = 60;
  v105._unint64_t object = (void *)0xE100000000000000;
  uint64_t v16 = a2 + OBJC_IVAR____TtC17proximitycontrold14HandoffSession_id;
  swift_retain();
  uint64_t v99 = v16;
  UUID.uuidString.getter();
  sub_100089A9C(8);
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = 32;
  v18._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  swift_retain();
  uint64_t v19 = sub_1001F7514();
  unint64_t v21 = v20;
  swift_release();
  v22._uint64_t countAndFlagsBits = v19;
  v22._unint64_t object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = 62;
  v23._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  swift_release();
  String.append(_:)(v105);
  swift_bridgeObjectRelease();
  id v24 = sub_1001F6088();
  swift_bridgeObjectRetain();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v24 ulog:40 message:v25];
  swift_bridgeObjectRelease();

  sub_10013C47C(v101, (uint64_t)v12, type metadata accessor for ViewServiceOutput);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      unint64_t v81 = &v12[*(int *)(sub_10000A38C(&qword_100367CE8) + 48)];
      uint64_t v82 = v103;
      uint64_t v83 = v104;
      return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v81, v83);
    case 2:
      uint64_t v60 = *(void *)v12;
      uint64_t v61 = *((void *)v12 + 1);
      uint64_t v62 = *((void *)v12 + 3);
      uint64_t v93 = *((void *)v12 + 2);
      uint64_t v94 = v60;
      uint64_t v64 = *((void *)v12 + 4);
      uint64_t v63 = *((void *)v12 + 5);
      uint64_t v91 = v62;
      uint64_t v92 = v63;
      uint64_t v101 = *((void *)v12 + 6);
      uint64_t v65 = v101;
      LODWORD(v95) = v12[56];
      uint64_t v66 = sub_10000A38C(&qword_100367CE0);
      (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v102, &v12[*(int *)(v66 + 48)], v104);
      uint64_t v67 = *(void *)(v100 + 40);
      swift_retain();
      uint64_t v100 = v67;
      swift_retain();
      uint64_t v68 = UUID.uuidString.getter();
      uint64_t v88 = v69;
      uint64_t v89 = v68;
      swift_release();
      uint64_t v70 = v93;
      uint64_t v71 = v94;
      *(void *)uint64_t v5 = v94;
      *((void *)v5 + 1) = v61;
      *((void *)v5 + 2) = v70;
      *((void *)v5 + 3) = v62;
      *((void *)v5 + 4) = v64;
      *((void *)v5 + 5) = v63;
      uint64_t v90 = v64;
      *((void *)v5 + 6) = v65;
      LOBYTE(v62) = v95;
      v5[56] = v95;
      swift_storeEnumTagMultiPayload();
      uint64_t v99 = *(void *)(v67
                      + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_experienceEventSessionIDReasonSubject);
      uint64_t v72 = v98;
      uint64_t v73 = (void *)(v98 + *(int *)(v97 + 48));
      char v74 = (void *)(v98 + *(int *)(v97 + 64));
      sub_10013C47C((uint64_t)v5, v98, type metadata accessor for ExperienceEvent);
      uint64_t v75 = v88;
      *uint64_t v73 = v89;
      v73[1] = v75;
      *char v74 = 0xD000000000000011;
      v74[1] = 0x80000001002BF8E0;
      uint64_t v76 = v71;
      uint64_t v77 = v71;
      uint64_t v78 = v91;
      uint64_t v79 = v64;
      uint64_t v80 = v92;
      sub_10001FBD0(v77, v61, v70, v91, v79, v92, v101, v62);
      swift_bridgeObjectRetain();
      PassthroughSubject.send(_:)();
      sub_10000D78C(v72, (uint64_t *)&unk_10035E840);
      sub_10013C8D0((uint64_t)v5, type metadata accessor for ExperienceEvent);
      swift_bridgeObjectRelease();
      sub_1000205C8(v76, v61, v70, v78, v90, v80, v101, v62);
      goto LABEL_4;
    case 3:
    case 4:
      return result;
    default:
      uint64_t v28 = *((void *)v12 + 1);
      uint64_t v101 = *(void *)v12;
      uint64_t v27 = v101;
      uint64_t v30 = *((void *)v12 + 2);
      uint64_t v29 = *((void *)v12 + 3);
      uint64_t v31 = *((void *)v12 + 4);
      uint64_t v32 = *((void *)v12 + 5);
      uint64_t v33 = *((void *)v12 + 6);
      uint64_t v94 = *((void *)v12 + 8);
      uint64_t v34 = *((void *)v12 + 9);
      uint64_t v91 = v33;
      uint64_t v92 = v34;
      LODWORD(v88) = v12[56];
      uint64_t v35 = sub_10000A38C(&qword_100367CF0);
      (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v102, &v12[*(int *)(v35 + 64)], v104);
      uint64_t v87 = *(void *)(v100 + 16);
      swift_retain();
      uint64_t v89 = v28;
      uint64_t v93 = v30;
      uint64_t v86 = v29;
      uint64_t v90 = v31;
      char v36 = v88;
      sub_10001FA00(v27, v28, v30, v29, v31, v32, v91, v88);
      uint64_t v37 = UUID.uuidString.getter();
      uint64_t v84 = v38;
      swift_release();
      id v39 = &v7[*(int *)(v95 + 80)];
      *(void *)uint64_t v7 = v101;
      *((void *)v7 + 1) = v28;
      *((void *)v7 + 2) = v30;
      *((void *)v7 + 3) = v29;
      *((void *)v7 + 4) = v31;
      *((void *)v7 + 5) = v32;
      uint64_t v85 = v32;
      uint64_t v40 = v91;
      *((void *)v7 + 6) = v91;
      v7[56] = v36;
      LOBYTE(v29) = v36;
      uint64_t v41 = v84;
      *((void *)v7 + 8) = v37;
      *((void *)v7 + 9) = v41;
      uint64_t v42 = v92;
      *((void *)v7 + 10) = v94;
      *((void *)v7 + 11) = v42;
      (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v39, v102, v104);
      swift_bridgeObjectRetain();
      PassthroughSubject.send(_:)();
      sub_10000D78C((uint64_t)v7, &qword_100367658);
      uint64_t v43 = *(void *)(v100 + 40);
      swift_retain();
      uint64_t v44 = v43;
      uint64_t v100 = v43;
      swift_retain();
      uint64_t v45 = UUID.uuidString.getter();
      uint64_t v47 = v46;
      swift_release();
      uint64_t v48 = v89;
      uint64_t v49 = v90;
      *(void *)uint64_t v5 = v101;
      *((void *)v5 + 1) = v48;
      uint64_t v50 = v86;
      *((void *)v5 + 2) = v93;
      *((void *)v5 + 3) = v50;
      *((void *)v5 + 4) = v49;
      *((void *)v5 + 5) = v32;
      uint64_t v51 = v40;
      *((void *)v5 + 6) = v40;
      v5[56] = v29;
      swift_storeEnumTagMultiPayload();
      uint64_t v99 = *(void *)(v44
                      + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_experienceEventSessionIDReasonSubject);
      uint64_t v52 = v98;
      uint64_t v53 = (uint64_t *)(v98 + *(int *)(v97 + 48));
      uint64_t v54 = (uint64_t *)(v98 + *(int *)(v97 + 64));
      sub_10013C47C((uint64_t)v5, v98, type metadata accessor for ExperienceEvent);
      *uint64_t v53 = v45;
      v53[1] = v47;
      uint64_t v55 = v92;
      *uint64_t v54 = v94;
      v54[1] = v55;
      uint64_t v56 = v89;
      uint64_t v57 = v93;
      uint64_t v58 = v49;
      uint64_t v59 = v85;
      sub_10001FA00(v101, v89, v93, v50, v58, v85, v51, v29);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      PassthroughSubject.send(_:)();
      sub_10000D78C(v52, (uint64_t *)&unk_10035E840);
      sub_10013C8D0((uint64_t)v5, type metadata accessor for ExperienceEvent);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100020430(v101, v56, v57, v50, v90, v59, v51, v88);
LABEL_4:
      swift_release();
      unint64_t v81 = v102;
      uint64_t v82 = v103;
      uint64_t v83 = v104;
      return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v81, v83);
  }
}

void sub_10011D0BC(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v106 = a4;
  LODWORD(v8) = a1 & 1;
  uint64_t v93 = sub_10000A38C((uint64_t *)&unk_10035E840);
  __chkstk_darwin(v93);
  uint64_t v95 = (uint64_t)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for ExperienceEvent(0);
  __chkstk_darwin(v92);
  uint64_t v94 = (_OWORD *)((char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for ActivityDisplayContext(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v96 = (uint64_t)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000A38C(&qword_10036C090);
  __chkstk_darwin(v13 - 8);
  Swift::String v105 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000A38C((uint64_t *)&unk_100367BD0);
  __chkstk_darwin(v15 - 8);
  int v102 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State();
  uint64_t v100 = *(void *)(v17 - 8);
  uint64_t v101 = v17;
  __chkstk_darwin(v17);
  uint64_t v97 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v103 = (id)type metadata accessor for NearbySharingInteractionDisplayContext();
  __chkstk_darwin(v103);
  uint64_t v104 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10000A38C(&qword_100360618);
  __chkstk_darwin(v20 - 8);
  Swift::String v22 = (uint64_t *)((char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = _s8CardInfoOMa();
  uint64_t v98 = *(void *)(v23 - 8);
  uint64_t v99 = v23;
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v90 = (uint64_t)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v91 = (uint64_t)&v89 - v26;
  uint64_t v111 = 0;
  unint64_t v112 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  uint64_t v111 = 0xD00000000000002FLL;
  unint64_t v112 = 0x80000001002BF6D0;
  v108._uint64_t countAndFlagsBits = 60;
  v108._unint64_t object = (void *)0xE100000000000000;
  uint64_t v27 = (void *)(a2 + OBJC_IVAR____TtC17proximitycontrold14HandoffSession_id);
  swift_retain();
  NSString v107 = v27;
  UUID.uuidString.getter();
  sub_100089A9C(8);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29._uint64_t countAndFlagsBits = 32;
  v29._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  uint64_t v30 = *(void *)(a2 + 24);
  swift_retain();
  uint64_t v31 = sub_1001F7514();
  uint64_t v33 = v32;
  swift_release();
  v34._uint64_t countAndFlagsBits = v31;
  v34._unint64_t object = v33;
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  v35._uint64_t countAndFlagsBits = 62;
  v35._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v35);
  swift_release();
  String.append(_:)(v108);
  swift_bridgeObjectRelease();
  v36._uint64_t countAndFlagsBits = 0x6E6F73616572202CLL;
  v36._unint64_t object = (void *)0xE90000000000003DLL;
  String.append(_:)(v36);
  v37._uint64_t countAndFlagsBits = a3;
  v37._unint64_t object = v106;
  String.append(_:)(v37);
  id v38 = sub_1001F6088();
  swift_bridgeObjectRetain();
  NSString v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v38 ulog:40 message:v39];
  swift_bridgeObjectRelease();

  uint64_t v40 = v5[6];
  if (!v40) {
    goto LABEL_11;
  }
  uint64_t v106 = v5;
  int v41 = v5[7] & 1;
  uint64_t v43 = *(void *)(v40 + 24);
  uint64_t v42 = *(void *)(v40 + 32);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v44 = UUID.uuidString.getter();
  uint64_t v46 = v45;
  swift_release();
  if (v43 == v44 && v42 == v46)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_6;
  }
  char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v47)
  {
LABEL_6:
    if (v41 == v8)
    {
      id v48 = sub_1001F6088();
      NSString v107 = String._bridgeToObjectiveC()();
      [v48 ulog:40 message:v107];
      swift_release();

      uint64_t v49 = v107;

      return;
    }
  }
  id v50 = sub_1001F6088();
  NSString v51 = String._bridgeToObjectiveC()();
  [v50 ulog:40 message:v51];

  uint64_t v5 = v106;
  sub_10011DF14(0, 0x737365732077654ELL, (void *)0xEB000000006E6F69);
  swift_release();
LABEL_11:
  if (v8)
  {
    swift_retain();
    swift_retain();
    uint64_t v61 = (uint64_t)v102;
    CurrentValueSubject.value.getter();
    uint64_t v63 = v100;
    uint64_t v62 = v101;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v61, 1, v101) == 1)
    {
      CurrentValueSubject.value.getter();
      sub_10000D78C(v61, (uint64_t *)&unk_100367BD0);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v97, v61, v62);
    }
    NSString v77 = v107;
    swift_release();
    uint64_t v78 = type metadata accessor for UUID();
    uint64_t v79 = *(void *)(v78 - 8);
    uint64_t v80 = v105;
    (*(void (**)(char *, NSString, uint64_t))(v79 + 16))(v105, v77, v78);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v80, 0, 1, v78);
    unint64_t v81 = v104;
    SFAirDrop.NearbySharingInteraction.init(state:id:)();
    swift_release();
    *unint64_t v81 = _swiftEmptyArrayStorage;
    uint64_t v113 = type metadata accessor for NearbySharingInteractionViewServiceContext();
    uint64_t v114 = sub_100129DD8(&qword_100367BE0, (void (*)(uint64_t))type metadata accessor for NearbySharingInteractionViewServiceContext);
    uint64_t v82 = sub_10000D680(&v111);
    sub_10013CEA4((uint64_t)v81, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for NearbySharingInteractionDisplayContext);
  }
  else
  {
    swift_retain();
    sub_10003C514(v22);
    swift_release();
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v98 + 48))(v22, 1, v99) == 1)
    {
      sub_10000D78C((uint64_t)v22, &qword_100360618);
      id v52 = sub_1001F6088();
      NSString v53 = String._bridgeToObjectiveC()();
      [v52 ulog:60 message:v53];

      swift_retain();
      swift_retain();
      uint64_t v54 = UUID.uuidString.getter();
      uint64_t v56 = v55;
      swift_release();
      uint64_t v57 = (uint64_t)v94;
      _OWORD *v94 = xmmword_10029A410;
      *(void *)(v57 + 16) = 0x80000001002BE390;
      *(_OWORD *)(v57 + 24) = xmmword_10029A420;
      *(_OWORD *)(v57 + 40) = xmmword_10029A420;
      *(unsigned char *)(v57 + 56) = 64;
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = v95;
      uint64_t v59 = (uint64_t *)(v95 + *(int *)(v93 + 48));
      uint64_t v60 = (void *)(v95 + *(int *)(v93 + 64));
      sub_10013C47C(v57, v95, type metadata accessor for ExperienceEvent);
      *uint64_t v59 = v54;
      v59[1] = v56;
      *uint64_t v60 = 0x4964726163206F4ELL;
      v60[1] = 0xEB000000006F666ELL;
      swift_bridgeObjectRetain();
      PassthroughSubject.send(_:)();
      sub_10000D78C(v58, (uint64_t *)&unk_10035E840);
      sub_10013C8D0(v57, type metadata accessor for ExperienceEvent);
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    LODWORD(v105) = 0;
    uint64_t v106 = v5;
    uint64_t v64 = v91;
    sub_10013CEA4((uint64_t)v22, v91, (uint64_t (*)(void))_s8CardInfoOMa);
    swift_retain();
    uint64_t v65 = (void *)sub_1001F9EE0();
    uint64_t v8 = v96;
    sub_100266C24(v65, v96);
    swift_unknownObjectRelease();
    LODWORD(v104) = *(unsigned __int8 *)(*(void *)(a2 + OBJC_IVAR____TtC17proximitycontrold14HandoffSession__cardMode)
                                       + 24);
    id v103 = [*(id *)(*(void *)(v30 + OBJC_IVAR____TtC17proximitycontrold13HandoffDevice__mediaRemoteDisplayContext)+ 24) proxDeviceState];
    uint64_t v66 = sub_100061B34();
    uint64_t v68 = v67;
    swift_release();
    uint64_t v69 = v90;
    sub_10013C47C(v64, v90, (uint64_t (*)(void))_s8CardInfoOMa);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v70 = sub_10009AE24();
    char v72 = v71;
    swift_release();
    swift_release();
    if (v72) {
      uint64_t v73 = 0;
    }
    else {
      uint64_t v73 = v70;
    }
    char v74 = (int *)type metadata accessor for ClassicCardViewServiceContext();
    unint64_t v109 = v74;
    uint64_t v110 = sub_100129DD8(&qword_100367BF8, (void (*)(uint64_t))type metadata accessor for ClassicCardViewServiceContext);
    uint64_t v75 = sub_10000D680(&v108._countAndFlagsBits);
    sub_10013CEA4(v8, (uint64_t)v75, type metadata accessor for ActivityDisplayContext);
    *((unsigned char *)v75 + v74[5]) = (_BYTE)v104;
    *(uint64_t *)((char *)v75 + v74[6]) = (uint64_t)v103;
    uint64_t v76 = (uint64_t *)((char *)v75 + v74[7]);
    uint64_t *v76 = v66;
    v76[1] = v68;
    uint64_t v5 = v106;
    LOBYTE(v8) = (_BYTE)v105;
    sub_10013CEA4(v69, (uint64_t)v75 + v74[8], (uint64_t (*)(void))_s8CardInfoOMa);
    *(uint64_t *)((char *)v75 + v74[9]) = v73;
    sub_10013C8D0(v64, (uint64_t (*)(void))_s8CardInfoOMa);
    sub_10000D7E8((long long *)&v108._countAndFlagsBits, (uint64_t)&v111);
  }
  swift_retain();
  uint64_t v83 = UUID.uuidString.getter();
  uint64_t v85 = v84;
  swift_release();
  type metadata accessor for HandoffViewServiceHandle();
  swift_allocObject();
  uint64_t v86 = sub_1002354EC(v83, v85);
  v108._uint64_t countAndFlagsBits = sub_10023545C();
  uint64_t v87 = swift_allocObject();
  swift_weakInit();
  uint64_t v88 = swift_allocObject();
  *(void *)(v88 + 16) = v87;
  *(void *)(v88 + 24) = v86;
  swift_retain();
  sub_10000A38C(&qword_100367BE8);
  sub_10000B010(&qword_100367BF0, &qword_100367BE8);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  sub_100235664((uint64_t)&v111);
  sub_10000CC5C((uint64_t)&v111);
  v5[6] = v86;
  *((unsigned char *)v5 + 56) = v8;
  swift_release();
}

void sub_10011DF14(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v35 = type metadata accessor for ViewServiceInput(0);
  __chkstk_darwin(v35);
  uint64_t v9 = (uint64_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v38 = 0;
  unint64_t v39 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  unint64_t v38 = 0xD000000000000022;
  unint64_t v39 = 0x80000001002BF7E0;
  if (a1)
  {
    uint64_t v36 = 60;
    unint64_t v37 = 0xE100000000000000;
    swift_retain();
    UUID.uuidString.getter();
    sub_100089A9C(8);
    swift_bridgeObjectRelease();
    v10._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11._uint64_t countAndFlagsBits = 32;
    v11._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v11);
    swift_retain();
    uint64_t v12 = sub_1001F7514();
    uint64_t v14 = v13;
    swift_release();
    v15._uint64_t countAndFlagsBits = v12;
    v15._unint64_t object = v14;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    v16._uint64_t countAndFlagsBits = 62;
    v16._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    swift_release();
    uint64_t v17 = v36;
    unint64_t v18 = v37;
  }
  else
  {
    unint64_t v18 = 0xE300000000000000;
    uint64_t v17 = 7104878;
  }
  unint64_t v19 = v18;
  String.append(_:)(*(Swift::String *)&v17);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 0x6E6F73616572202CLL;
  v20._unint64_t object = (void *)0xE90000000000003DLL;
  String.append(_:)(v20);
  v21._uint64_t countAndFlagsBits = a2;
  v21._unint64_t object = a3;
  String.append(_:)(v21);
  id v22 = sub_1001F6088();
  swift_bridgeObjectRetain();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v22 ulog:40 message:v23];
  swift_bridgeObjectRelease();

  uint64_t v24 = *(void *)(v4 + 48);
  if (v24)
  {
    if (!a1)
    {
      swift_retain();
LABEL_17:
      id v32 = sub_1001F6088();
      NSString v33 = String._bridgeToObjectiveC()();
      [v32 ulog:40 message:v33];

      sub_100235930();
      goto LABEL_18;
    }
    uint64_t v34 = a2;
    uint64_t v26 = *(void *)(v24 + 24);
    uint64_t v25 = *(void *)(v24 + 32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v26 == UUID.uuidString.getter() && v25 == v27)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0)
      {
LABEL_16:
        swift_release();
        goto LABEL_17;
      }
    }
    uint64_t v36 = a1;
    uint64_t v31 = (void (*)(void *@<X8>))off_10035F178;
    type metadata accessor for HandoffSession();
    v31(&v38);
    if (v38)
    {
      *uint64_t v9 = v34;
      v9[1] = (uint64_t)a3;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_10007CD78((uint64_t)v9);
      swift_release();
      swift_release();
      sub_10013C8D0((uint64_t)v9, type metadata accessor for ViewServiceInput);
LABEL_18:
      swift_release();
      return;
    }
    goto LABEL_16;
  }
  id v28 = sub_1001F6088();
  uint64_t v35 = (uint64_t)String._bridgeToObjectiveC()();
  [v28 ulog:40 message:v35];

  Swift::String v29 = (void *)v35;
}

uint64_t sub_10011E380(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A38C((uint64_t *)&unk_10035E840);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ExperienceEvent(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = 0;
  unint64_t v35 = 0xE000000000000000;
  _StringGuts.grow(_:)(23);
  v10._uint64_t countAndFlagsBits = 0xD000000000000024;
  v10._unint64_t object = (void *)0x80000001002BF790;
  String.append(_:)(v10);
  v11._uint64_t countAndFlagsBits = 0x656C646E6168203ALL;
  v11._unint64_t object = (void *)0xE90000000000003DLL;
  String.append(_:)(v11);
  unint64_t v32 = a1;
  type metadata accessor for HandoffViewServiceHandle();
  _print_unlocked<A, B>(_:_:)();
  v12._uint64_t countAndFlagsBits = 0x3D746E657665202CLL;
  v12._unint64_t object = (void *)0xE800000000000000;
  String.append(_:)(v12);
  switch(a2)
  {
    case 1:
      unint64_t v13 = 0xE900000000000064;
      uint64_t v14 = 0x6574736575716572;
      break;
    case 3:
      unint64_t v13 = 0xED00006574617669;
      uint64_t v14 = 0x7463616544646964;
      break;
    case 2:
      unint64_t v13 = 0xEB00000000657461;
      uint64_t v14 = 0x7669746341646964;
      break;
    default:
      unint64_t v32 = 0;
      unint64_t v33 = 0xE000000000000000;
      swift_errorRetain();
      _StringGuts.grow(_:)(25);
      swift_bridgeObjectRelease();
      unint64_t v32 = 0xD000000000000015;
      unint64_t v33 = 0x80000001002B1EB0;
      if (a2)
      {
        swift_getErrorValue();
        swift_errorRetain();
        uint64_t v15 = Error.localizedDescription.getter();
        uint64_t v17 = v16;
        sub_10000BECC(a2);
      }
      else
      {
        uint64_t v17 = (void *)0xE300000000000000;
        uint64_t v15 = 7104878;
      }
      v18._uint64_t countAndFlagsBits = v15;
      v18._unint64_t object = v17;
      String.append(_:)(v18);
      swift_bridgeObjectRelease();
      v19._uint64_t countAndFlagsBits = 10528;
      v19._unint64_t object = (void *)0xE200000000000000;
      String.append(_:)(v19);
      sub_10000BECC(a2);
      uint64_t v14 = v32;
      unint64_t v13 = v33;
      break;
  }
  unint64_t v20 = v13;
  String.append(_:)(*(Swift::String *)&v14);
  swift_bridgeObjectRelease();
  id v21 = sub_1001F6088();
  swift_bridgeObjectRetain();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v21 ulog:40 message:v22];
  swift_bridgeObjectRelease();

  uint64_t v23 = v31;
  if ((unint64_t)(a2 - 1) >= 3)
  {
    uint64_t v24 = *(void *)(v31 + 48);
    if (v24)
    {
      if (v24 == a1)
      {
        *(void *)(v31 + 48) = 0;
        *(unsigned char *)(v23 + 56) = 0;
        swift_release();
      }
    }
  }
  uint64_t v26 = *(void *)(a1 + 24);
  uint64_t v25 = *(void *)(a1 + 32);
  *uint64_t v9 = a2;
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = &v6[*(int *)(v4 + 48)];
  id v28 = &v6[*(int *)(v4 + 64)];
  sub_10013C47C((uint64_t)v9, (uint64_t)v6, type metadata accessor for ExperienceEvent);
  *(void *)uint64_t v27 = v26;
  *((void *)v27 + 1) = v25;
  *(void *)id v28 = 0xD000000000000011;
  *((void *)v28 + 1) = 0x80000001002BF7C0;
  sub_1000C7724(a2);
  swift_retain();
  swift_bridgeObjectRetain();
  PassthroughSubject.send(_:)();
  sub_10000D78C((uint64_t)v6, (uint64_t *)&unk_10035E840);
  sub_10013C8D0((uint64_t)v9, type metadata accessor for ExperienceEvent);
  return swift_release();
}

uint64_t sub_10011E79C(uint64_t a1)
{
  uint64_t v2 = sub_10000A38C(&qword_1003678D0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A38C(&qword_1003678D8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A38C(&qword_1003678E0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v16 = a1;
    swift_retain();
    sub_10000A38C(&qword_100367820);
    sub_10000A38C(&qword_1003678E8);
    sub_10000B010(&qword_100367828, &qword_100367820);
    Publisher.map<A>(_:)();
    sub_10000B010(&qword_1003678F8, &qword_1003678E0);
    uint64_t v14 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_release();
  }
  else
  {
    uint64_t v16 = 0;
    char v17 = -1;
    sub_10000A38C(&qword_1003678E8);
    Just.init(_:)();
    Just.setFailureType<A>(to:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_10000B010(&qword_1003678F0, &qword_1003678D8);
    uint64_t v14 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v14;
}

uint64_t sub_10011EAF8(uint64_t a1)
{
  uint64_t v2 = sub_10000A38C(&qword_100367C58);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A38C(&qword_100367C60);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A38C(&qword_100367C68);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    *(void *)&long long v16 = a1;
    swift_retain();
    sub_10000A38C(&qword_100367C48);
    sub_10000A38C(&qword_100367C70);
    sub_10000B010(&qword_100367C50, &qword_100367C48);
    Publisher.map<A>(_:)();
    sub_10000B010(&qword_100367C80, &qword_100367C68);
    uint64_t v14 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_release();
  }
  else
  {
    long long v16 = xmmword_10028F470;
    sub_10000A38C(&qword_100367C70);
    Just.init(_:)();
    Just.setFailureType<A>(to:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_10000B010(&qword_100367C78, &qword_100367C60);
    uint64_t v14 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v14;
}

uint64_t sub_10011EE54()
{
  uint64_t v1 = *(void *)((swift_isaMask & *v0) + 0x128);
  if (*(void *)((char *)v0 + v1))
  {
    uint64_t v2 = *(void *)((char *)v0 + v1);
  }
  else
  {
    uint64_t v3 = v0;
    sub_10000A38C(&qword_100367E60);
    sub_10000B010(&qword_100367E68, &qword_100367E60);
    uint64_t v2 = Publisher.eraseToAnyPublisher()();
    *(void *)((char *)v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void *sub_10011EF5C(void *a1)
{
  uint64_t v2 = v1;
  v234 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v183 = sub_10000A38C(&qword_100367EF0);
  __chkstk_darwin(v183);
  v182[2] = (char *)v182 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = sub_10000A38C(&qword_100367EF8);
  uint64_t v185 = *(void *)(v186 - 8);
  __chkstk_darwin(v186);
  v184 = (char *)v182 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_10000A38C(&qword_100367F00);
  uint64_t v188 = *(void *)(v189 - 8);
  __chkstk_darwin(v189);
  v187 = (char *)v182 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = sub_10000A38C(&qword_100367F08);
  uint64_t v217 = *(void *)(v218 - 8);
  __chkstk_darwin(v218);
  v216 = (char *)v182 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = sub_10000A38C(&qword_100367F10);
  uint64_t v214 = *(void *)(v215 - 8);
  __chkstk_darwin(v215);
  v212 = (char *)v182 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = sub_10000A38C(&qword_100367F18);
  uint64_t v211 = *(void *)(v213 - 8);
  uint64_t v8 = __chkstk_darwin(v213);
  id v210 = (char *)v182 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = v9;
  __chkstk_darwin(v8);
  v225 = (char *)v182 - v10;
  uint64_t v208 = sub_10000A38C(&qword_100367F20);
  uint64_t v207 = *(void *)(v208 - 8);
  __chkstk_darwin(v208);
  id v206 = (char *)v182 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v198 = *(void *)(v200 - 8);
  __chkstk_darwin(v200);
  v196 = (char *)v182 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = sub_10000A38C(&qword_100367F28);
  uint64_t v201 = *(void *)(v202 - 8);
  __chkstk_darwin(v202);
  id v197 = (char *)v182 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = sub_10000A38C(&qword_100367F30);
  uint64_t v204 = *(void *)(v205 - 8);
  uint64_t v14 = __chkstk_darwin(v205);
  id v203 = (char *)v182 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = v15;
  __chkstk_darwin(v14);
  unint64_t v224 = (char *)v182 - v16;
  uint64_t v195 = sub_10000A38C(&qword_100367F38);
  uint64_t v194 = *(void *)(v195 - 8);
  __chkstk_darwin(v195);
  id v193 = (char *)v182 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000A38C(&qword_10035AC20);
  __chkstk_darwin(v18 - 8);
  v233 = (char *)v182 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = sub_10000A38C((uint64_t *)&unk_100367E90);
  uint64_t v191 = *(void *)(v192 - 8);
  uint64_t v20 = __chkstk_darwin(v192);
  unint64_t v220 = (char *)v182 - (((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v219 = v21;
  __chkstk_darwin(v20);
  v226 = (char *)v182 - v22;
  uint64_t v23 = type metadata accessor for ActivityDisplayContext(0);
  __chkstk_darwin(v23 - 8);
  id v231 = (char *)v182 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10000A38C(&qword_100367F40);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  id v28 = (char *)v182 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *(void *)((swift_isaMask & *(void *)v1) + 0xF8);
  id v30 = objc_allocWithZone((Class)UITapGestureRecognizer);
  uint64_t v31 = v2;
  *(void *)&v2[v29] = [v30 init];
  uint64_t v32 = *(void *)((swift_isaMask & *(void *)v31) + 0x100);
  if (qword_10035A510 != -1) {
    swift_once();
  }
  unint64_t v33 = (id *)qword_1003AC740;
  id v34 = *(id *)(qword_1003AC740 + 56);
  double v35 = sub_1000FEB94();

  id v36 = v33[8];
  double v37 = sub_1000FEB94();

  id v38 = v33[9];
  double v39 = sub_1000FEB94();

  id v40 = v33[10];
  double v41 = sub_1000FEB94();

  double v42 = nullsub_1(v35, v37, v39, v41);
  double v44 = v43;
  double v46 = v45;
  double v48 = v47;
  id v49 = v33[11];
  double v50 = sub_1000FEB94();

  *(void *)&v31[v32] = [objc_allocWithZone((Class)FluidSpring) initWithParameters:v42 retargetImpuse:v44];
  uint64_t v51 = *(void *)((swift_isaMask & *(void *)v31) + 0x108);
  id v52 = (id *)qword_1003AC740;
  id v53 = *(id *)(qword_1003AC740 + 96);
  double v54 = sub_1000FEB94();

  id v55 = v52[13];
  double v56 = sub_1000FEB94();

  id v57 = v52[14];
  double v58 = sub_1000FEB94();

  id v59 = v52[15];
  double v60 = sub_1000FEB94();

  double v61 = nullsub_1(v54, v56, v58, v60);
  double v63 = v62;
  double v65 = v64;
  double v67 = v66;
  id v68 = v52[16];
  double v69 = sub_1000FEB94();

  *(void *)&v31[v51] = [objc_allocWithZone((Class)FluidSpring) initWithParameters:v61 retargetImpuse:v63];
  *(void *)&v31[*(void *)((swift_isaMask & *(void *)v31) + 0x110)] = 0;
  uint64_t v70 = &v31[*(void *)((swift_isaMask & *(void *)v31) + 0x118)];
  LOBYTE(v235) = 0;
  Published.init(initialValue:)();
  char v71 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v182[1] = v25;
  v71(v70, v28, v25);
  uint64_t v72 = *(void *)((swift_isaMask & *(void *)v31) + 0x120);
  sub_10000A38C(&qword_100367E60);
  swift_allocObject();
  *(void *)&v31[v72] = PassthroughSubject.init()();
  *(void *)&v31[*(void *)((swift_isaMask & *(void *)v31) + 0x128)] = 0;
  *(void *)&v31[*(void *)((swift_isaMask & *(void *)v31) + 0x130)] = &_swiftEmptySetSingleton;
  id v235 = 0;
  id v236 = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  id v235 = (id)0xD00000000000001CLL;
  id v236 = (void *)0x80000001002BFAF0;
  uint64_t v73 = v234;
  uint64_t v74 = v234[5];
  uint64_t v75 = v234[8];
  sub_10000D6E4(v234 + 2, v74);
  v76._uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 8))(v74, v75);
  String.append(_:)(v76);
  swift_bridgeObjectRelease();
  sub_10016ABE4((uint64_t)v235, v236, 0, ObjectType, (uint64_t)&off_100324480);
  swift_bridgeObjectRelease();
  *(void *)&v31[*(void *)((swift_isaMask & *(void *)v31) + 0xE8)] = v73;
  uint64_t v77 = v73[5];
  uint64_t v78 = v73[6];
  sub_10000D6E4(v73 + 2, v77);
  uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
  swift_retain();
  uint64_t v80 = (uint64_t)v231;
  v79(v77, v78);
  uint64_t v81 = *(void *)(v80 + 24);
  uint64_t v82 = *(void *)(v80 + 32);
  swift_bridgeObjectRetain();
  sub_10013C8D0(v80, type metadata accessor for ActivityDisplayContext);
  id v83 = objc_allocWithZone((Class)type metadata accessor for PillView3());
  *(void *)&v31[*(void *)((swift_isaMask & *(void *)v31) + 0xF0)] = sub_1000D02A4(v81, v82);

  uint64_t v84 = v73[5];
  uint64_t v85 = v73[16];
  sub_10000D6E4(v73 + 2, v84);
  uint64_t v86 = (*(uint64_t (**)(uint64_t, uint64_t))(v85 + 8))(v84, v85);
  uint64_t v88 = v87;
  *(void *)&v31[OBJC_IVAR____TtC17proximitycontrold24BannerViewControllerBase_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v89 = (uint64_t *)&v31[OBJC_IVAR____TtC17proximitycontrold24BannerViewControllerBase_requestID];
  *uint64_t v89 = v86;
  v89[1] = v88;
  uint64_t v90 = (objc_class *)type metadata accessor for BannerViewControllerBase();
  v238.receiver = v31;
  v238.super_class = v90;
  id v91 = [super initWithNibName:0 bundle:0];
  id v92 = sub_1001F6710();
  NSString v93 = String._bridgeToObjectiveC()();
  [v92 ulog:40 message:v93];

  uint64_t v94 = v73[5];
  uint64_t v95 = v73[14];
  sub_10000D6E4(v73 + 2, v94);
  uint64_t v96 = *(uint64_t (**)(uint64_t, uint64_t))(v95 + 8);
  unint64_t v228 = v91;
  uint64_t v97 = v96(v94, v95);
  sub_100121334(v97);
  swift_unknownObjectRelease();
  uint64_t v98 = v73[5];
  uint64_t v99 = v73[14];
  sub_10000D6E4(v73 + 2, v98);
  id v235 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v99 + 16))(v98, v99);
  uint64_t v227 = sub_100019E10(0, (unint64_t *)&qword_10035A680);
  id v237 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v230 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v100 = *(void *)(v230 - 8);
  v229 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v100 + 56);
  uint64_t ObjectType = v100 + 56;
  uint64_t v101 = (uint64_t)v233;
  v229(v233, 1, 1, v230);
  uint64_t v222 = sub_10000A38C(&qword_10035E410);
  id v223 = &protocol conformance descriptor for AnyPublisher<A, B>;
  uint64_t v221 = sub_10000B010((unint64_t *)&unk_100367EA0, &qword_10035E410);
  id v231 = (char *)sub_10003A8C0();
  int v102 = v226;
  Publisher.receive<A>(on:options:)();
  sub_10000D78C(v101, &qword_10035AC20);

  swift_release();
  id v103 = sub_1001F60C4();
  uint64_t v104 = v191;
  Swift::String v105 = v220;
  uint64_t v106 = v192;
  (*(void (**)(char *, char *, uint64_t))(v191 + 16))(v220, v102, v192);
  unint64_t v107 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
  unint64_t v108 = ((unint64_t)v219 + v107 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v109 = (v108 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v109 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v111 = swift_allocObject();
  *(void *)(v111 + 16) = sub_100041780;
  *(void *)(v111 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v104 + 32))(v111 + v107, v105, v106);
  strcpy((char *)(v111 + v108), "New activity: ");
  *(unsigned char *)(v111 + v108 + 15) = -18;
  unint64_t v112 = (void *)(v111 + v109);
  *unint64_t v112 = 0;
  v112[1] = 0xE000000000000000;
  *(void *)(v111 + v110) = v103;
  *(_DWORD *)(v111 + ((v110 + 11) & 0xFFFFFFFFFFFFFFF8)) = 40;
  id v113 = v103;
  unint64_t v220 = (char *)sub_10000A38C((uint64_t *)&unk_10036C080);
  v190 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_10000B010(&qword_100367EE8, (uint64_t *)&unk_100367E90);
  uint64_t v114 = v193;
  uint64_t v115 = v226;
  Publisher.map<A>(_:)();
  swift_release();
  id v219 = &protocol conformance descriptor for Publishers.Map<A, B>;
  sub_10000B010(&qword_100367F48, &qword_100367F38);
  uint64_t v116 = v195;
  uint64_t v117 = (void *)Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v194 + 8))(v114, v116);

  (*(void (**)(char *, uint64_t))(v104 + 8))(v115, v106);
  id v235 = v117;
  swift_allocObject();
  uint64_t v118 = v228;
  swift_unknownObjectWeakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  v226 = (char *)v118 + *(void *)((swift_isaMask & *v118) + 0x130);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v119 = [self defaultCenter];
  id v120 = kPCAssetManagerNotificationNameQueryDidComplete;
  uint64_t v121 = v196;
  NSNotificationCenter.publisher(for:object:)();

  id v235 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v122 = (uint64_t)v233;
  v229(v233, 1, 1, v230);
  sub_100129DD8(&qword_100367F50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  Swift::String v123 = v197;
  uint64_t v124 = v200;
  Publisher.receive<A>(on:options:)();
  sub_10000D78C(v122, &qword_10035AC20);

  (*(void (**)(char *, uint64_t))(v198 + 8))(v121, v124);
  sub_10000B010(&qword_100367F58, &qword_100367F28);
  swift_retain();
  NSString v125 = v224;
  uint64_t v126 = v202;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v201 + 8))(v123, v126);
  id v127 = sub_1001F60C4();
  uint64_t v128 = v204;
  Swift::UInt64 v129 = v203;
  uint64_t v130 = v205;
  (*(void (**)(char *, char *, uint64_t))(v204 + 16))(v203, v125, v205);
  unint64_t v131 = (*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80);
  unint64_t v132 = (v199 + v131 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v133 = (v132 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v134 = (v133 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v135 = swift_allocObject();
  *(void *)(v135 + 16) = sub_100041780;
  *(void *)(v135 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v128 + 32))(v135 + v131, v129, v130);
  unint64_t v136 = (void *)(v135 + v132);
  *unint64_t v136 = 0xD00000000000002ELL;
  v136[1] = 0x80000001002BFB10;
  id v137 = (void *)(v135 + v133);
  void *v137 = 0;
  v137[1] = 0xE000000000000000;
  *(void *)(v135 + v134) = v127;
  *(_DWORD *)(v135 + ((v134 + 11) & 0xFFFFFFFFFFFFFFF8)) = 40;
  sub_10000B010(&qword_100367F60, &qword_100367F30);
  id v138 = v127;
  unint64_t v139 = v206;
  v140 = v224;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_100367F68, &qword_100367F20);
  uint64_t v141 = v208;
  unint64_t v142 = (void *)Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v207 + 8))(v139, v141);

  (*(void (**)(char *, uint64_t))(v128 + 8))(v140, v130);
  id v235 = v142;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v235 = (id)sub_1001E7E4C();
  id v237 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v143 = (uint64_t)v233;
  v229(v233, 1, 1, v230);
  unint64_t v224 = (char *)sub_10000A38C((uint64_t *)&unk_100367F70);
  uint64_t v222 = sub_10000B010(&qword_10035D148, (uint64_t *)&unk_100367F70);
  v144 = v225;
  Publisher.receive<A>(on:options:)();
  sub_10000D78C(v143, &qword_10035AC20);

  swift_release();
  id v145 = sub_1001F60C4();
  uint64_t v146 = v211;
  v147 = v210;
  uint64_t v148 = v213;
  (*(void (**)(char *, char *, uint64_t))(v211 + 16))(v210, v144, v213);
  unint64_t v149 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
  unint64_t v150 = (v209 + v149 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v151 = (v150 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v152 = (v151 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v153 = swift_allocObject();
  *(void *)(v153 + 16) = 0;
  *(void *)(v153 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v146 + 32))(v153 + v149, v147, v148);
  strcpy((char *)(v153 + v150), "New subtitle: ");
  *(unsigned char *)(v153 + v150 + 15) = -18;
  v154 = (void *)(v153 + v151);
  void *v154 = 0;
  v154[1] = 0xE000000000000000;
  *(void *)(v153 + v152) = v145;
  *(_DWORD *)(v153 + ((v152 + 11) & 0xFFFFFFFFFFFFFFF8)) = 40;
  sub_10000B010(&qword_100367F80, &qword_100367F18);
  id v155 = v145;
  id v156 = v212;
  v157 = v225;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_100367F88, &qword_100367F10);
  uint64_t v158 = v215;
  id v159 = (void *)Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v214 + 8))(v156, v158);

  uint64_t v160 = v148;
  v161 = v228;
  (*(void (**)(char *, uint64_t))(v146 + 8))(v157, v160);
  id v235 = v159;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v235 = *(id *)((char *)v234 + OBJC_IVAR____TtC17proximitycontrold13HintViewModel_popSubject);
  sub_10000A38C((uint64_t *)&unk_100367F90);
  sub_10000B010((unint64_t *)&unk_10036B010, (uint64_t *)&unk_100367F90);
  id v235 = (id)Publisher.eraseToAnyPublisher()();
  id v237 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v162 = (uint64_t)v233;
  v229(v233, 1, 1, v230);
  sub_10000A38C((uint64_t *)&unk_100367FA0);
  sub_10000B010(&qword_10036B020, (uint64_t *)&unk_100367FA0);
  v163 = v216;
  Publisher.receive<A>(on:options:)();
  sub_10000D78C(v162, &qword_10035AC20);

  swift_release();
  uint64_t v164 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v165 = swift_allocObject();
  *(void *)(v165 + 16) = sub_10013CC24;
  *(void *)(v165 + 24) = v164;
  sub_10000B010((unint64_t *)&unk_100367FB0, &qword_100367F08);
  uint64_t v166 = v218;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v217 + 8))(v163, v166);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  if (qword_10035A520 != -1) {
    swift_once();
  }
  id v167 = *(id *)(qword_1003AC750 + 888);
  char v168 = sub_1000FD938();

  if (v168)
  {
    v169 = (void *)sub_1001E7CCC();
    swift_release();
    id v237 = v169;
    swift_beginAccess();
    Published.projectedValue.getter();
    swift_endAccess();
    sub_10000A38C(&qword_10035ACA0);
    sub_10000B010(&qword_10035ACB0, &qword_10035ACA0);
    sub_10000B010(&qword_10036D260, &qword_100367EF0);
    v170 = v184;
    Publishers.CombineLatest.init(_:_:)();
    id v235 = (id)static OS_dispatch_queue.main.getter();
    v229((char *)v162, 1, 1, v230);
    sub_10000B010(&qword_100367FC0, &qword_100367EF8);
    id v171 = v187;
    uint64_t v172 = v186;
    Publisher.receive<A>(on:options:)();
    sub_10000D78C(v162, &qword_10035AC20);

    (*(void (**)(char *, uint64_t))(v185 + 8))(v170, v172);
    uint64_t v173 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v174 = swift_allocObject();
    *(void *)(v174 + 16) = sub_10013CC2C;
    *(void *)(v174 + 24) = v173;
    sub_10000B010(&qword_100367FC8, &qword_100367F00);
    uint64_t v175 = v189;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v188 + 8))(v171, v175);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
  }
  swift_release();
  v176 = *(void **)((char *)v161 + *(void *)((swift_isaMask & *v161) + 0xF0));
  [v176 setFrame:CGRectMake(0.0, 0.0, 250.0, 50.0)];
  v177 = *(void **)((char *)v161 + *(void *)((swift_isaMask & *v161) + 0xF8));
  [v177 addTarget:v161 action:"pillTapped"];
  [v176 addGestureRecognizer:v177];
  id v178 = v161;
  [v176 frame];
  [v178 setPreferredContentSize:v179, v180];

  return v178;
}

void sub_100120F9C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    uint64_t v6 = (char *)*(id *)((char *)Strong + *(void *)((swift_isaMask & *Strong) + 0xF0));

    uint64_t v7 = &v6[OBJC_IVAR____TtC17proximitycontrold9PillView3_subtitle];
    *(void *)uint64_t v7 = a1;
    *((void *)v7 + 1) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1000D05AC(0);
  }
}

void sub_100121064()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100121614();
  }
}

void sub_1001210B8(char a1, char a2)
{
  if (a1 & 1) != 0 && (a2)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      return;
    }
    uint64_t v3 = (void *)Strong;
    sub_100121CB0();
  }
  else
  {
    swift_beginAccess();
    uint64_t v4 = swift_unknownObjectWeakLoadStrong();
    if (!v4) {
      return;
    }
    uint64_t v5 = (void *)v4;
    uint64_t v19 = sub_10000A38C(&qword_100367E28);
    sub_10000A38C((uint64_t *)&unk_100367FD0);
    uint64_t v6 = String.init<A>(describing:)();
    sub_10016B950(60, 0xE100000000000000, v6, v7);
    if ((v8 & 1) == 0)
    {
      String.subscript.getter();
      swift_bridgeObjectRelease();
      static String._fromSubstring(_:)();
      swift_bridgeObjectRelease();
    }
    id v9 = objc_allocWithZone((Class)CULogHandle);
    NSString v10 = String._bridgeToObjectiveC()();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v12 = [v9 initWithSubsystem:v10 category:v11];

    NSString v13 = String._bridgeToObjectiveC()();
    [v12 ulog:40 message:v13];

    uint64_t v14 = *(void *)((swift_isaMask & *v5) + 0x110);
    uint64_t v15 = *(void **)((char *)v5 + v14);
    if (v15)
    {
      uint64_t v16 = self;
      id v17 = v15;
      id v18 = [v16 mainRunLoop];
      [v17 removeFromRunLoop:v18 forMode:NSRunLoopCommonModes];

      uint64_t v3 = *(void **)((char *)v5 + v14);
    }
    else
    {
      uint64_t v3 = 0;
    }
    *(void *)((char *)v5 + v14) = 0;
  }
}

void sub_100121334(uint64_t a1)
{
  uint64_t v2 = v1;
  if (a1)
  {
    swift_unknownObjectRetain();
    sub_10000A38C((uint64_t *)&unk_10036E690);
    uint64_t v4 = String.init<A>(describing:)();
    unint64_t v6 = v5;
  }
  else
  {
    unint64_t v6 = 0xE300000000000000;
    uint64_t v4 = 7104878;
  }
  unint64_t v7 = v6;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease();
  sub_10000A38C(&qword_100367E28);
  sub_10000A38C((uint64_t *)&unk_100367FD0);
  uint64_t v8 = String.init<A>(describing:)();
  sub_10016B950(60, 0xE100000000000000, v8, v9);
  if ((v10 & 1) == 0)
  {
    String.subscript.getter();
    swift_bridgeObjectRelease();
    static String._fromSubstring(_:)();
    swift_bridgeObjectRelease();
  }
  id v11 = objc_allocWithZone((Class)CULogHandle);
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v11 initWithSubsystem:v12 category:v13];

  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 ulog:40 message:v15];
  swift_bridgeObjectRelease();

  uint64_t v16 = self;
  id v17 = *(void **)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0xE8));
  uint64_t v18 = v17[5];
  uint64_t v19 = v17[10];
  sub_10000D6E4(v17 + 2, v18);
  id v20 = [v16 composedImageWithArtworkFor:a1 assetType:(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19)];
  [*(id *)(*(void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0xF0))+ OBJC_IVAR____TtC17proximitycontrold9PillView3_leadingImageView) setImage:v20];
}

void sub_100121614()
{
  *(void *)&v64.CGFloat m11 = sub_10000A38C(&qword_100367E28);
  sub_10000A38C((uint64_t *)&unk_100367FD0);
  uint64_t v1 = String.init<A>(describing:)();
  sub_10016B950(60, 0xE100000000000000, v1, v2);
  if ((v3 & 1) == 0)
  {
    String.subscript.getter();
    swift_bridgeObjectRelease();
    static String._fromSubstring(_:)();
    swift_bridgeObjectRelease();
  }
  id v4 = objc_allocWithZone((Class)CULogHandle);
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [v4 initWithSubsystem:v5 category:v6];

  NSString v8 = String._bridgeToObjectiveC()();
  [v7 ulog:40 message:v8];

  unint64_t v9 = *(void **)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0xF0));
  [v9 transform3D];
  CGFloat m11 = v64.m11;
  CGFloat m12 = v64.m12;
  CGFloat m13 = v64.m13;
  CGFloat m14 = v64.m14;
  CGFloat m21 = v64.m21;
  CGFloat m22 = v64.m22;
  CGFloat m23 = v64.m23;
  CGFloat m31 = v64.m31;
  CGFloat m24 = v64.m24;
  CGFloat m33 = v64.m33;
  CGFloat m32 = v64.m32;
  CGFloat m41 = v64.m41;
  CGFloat m34 = v64.m34;
  CGFloat m43 = v64.m43;
  CGFloat m42 = v64.m42;
  CGFloat m44 = v64.m44;
  if (qword_10035A520 != -1) {
    swift_once();
  }
  id v17 = *(id *)(qword_1003AC750 + 904);
  double v18 = sub_1000FEB94();

  long long v19 = *(_OWORD *)&CATransform3DIdentity.m13;
  *(_OWORD *)&v64.CGFloat m11 = *(_OWORD *)&CATransform3DIdentity.m11;
  *(_OWORD *)&v64.CGFloat m13 = v19;
  long long v20 = *(_OWORD *)&CATransform3DIdentity.m23;
  *(_OWORD *)&v64.CGFloat m21 = *(_OWORD *)&CATransform3DIdentity.m21;
  *(_OWORD *)&v64.CGFloat m23 = v20;
  long long v21 = *(_OWORD *)&CATransform3DIdentity.m33;
  *(_OWORD *)&v64.CGFloat m31 = *(_OWORD *)&CATransform3DIdentity.m31;
  *(_OWORD *)&v64.CGFloat m33 = v21;
  long long v22 = *(_OWORD *)&CATransform3DIdentity.m43;
  *(_OWORD *)&v64.CGFloat m41 = *(_OWORD *)&CATransform3DIdentity.m41;
  *(_OWORD *)&v64.CGFloat m43 = v22;
  CATransform3DScale(&v63, &v64, v18, v18, 1.0);
  long long v52 = *(_OWORD *)&v63.m13;
  long long v53 = *(_OWORD *)&v63.m11;
  long long v50 = *(_OWORD *)&v63.m23;
  long long v51 = *(_OWORD *)&v63.m21;
  long long v48 = *(_OWORD *)&v63.m33;
  long long v49 = *(_OWORD *)&v63.m31;
  long long v47 = *(_OWORD *)&v63.m41;
  CGFloat v45 = v63.m44;
  CGFloat v46 = v63.m43;
  id v23 = [objc_allocWithZone((Class)CAKeyframeAnimation) init];
  NSString v24 = String._bridgeToObjectiveC()();
  [v23 setKeyPath:v24];

  uint64_t v25 = *(void **)(qword_1003AC750 + 896);
  id v26 = v23;
  id v27 = v25;
  double v28 = sub_1000FEB94();

  [v26 setDuration:v28];
  sub_10000A38C(&qword_10035C280);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_10029A430;
  sub_100019E10(0, &qword_100367DF0);
  *(NSNumber *)(v29 + 32) = NSNumber.init(integerLiteral:)(0);
  *(NSNumber *)(v29 + 40) = NSNumber.init(floatLiteral:)(0.5);
  *(NSNumber *)(v29 + 48) = NSNumber.init(integerLiteral:)(1);
  *(void *)&v64.CGFloat m11 = v29;
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v26 setKeyTimes:isa];

  sub_10000A38C((uint64_t *)&unk_100367FE0);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_10028FDD0;
  type metadata accessor for CATransform3D(0);
  uint64_t v33 = v32;
  *(void *)(v31 + 56) = v32;
  id v34 = (CGFloat *)swift_allocObject();
  *(void *)(v31 + 32) = v34;
  void v34[2] = m11;
  v34[3] = m12;
  v34[4] = m13;
  v34[5] = m14;
  v34[6] = m21;
  v34[7] = m22;
  v34[8] = m23;
  v34[9] = m24;
  v34[10] = m31;
  v34[11] = m32;
  v34[12] = m33;
  v34[13] = m34;
  v34[14] = m41;
  v34[15] = m42;
  v34[16] = m43;
  v34[17] = m44;
  *(void *)(v31 + 88) = v33;
  uint64_t v35 = swift_allocObject();
  *(void *)(v31 + 64) = v35;
  *(_OWORD *)(v35 + 16) = v53;
  *(_OWORD *)(v35 + 32) = v52;
  *(_OWORD *)(v35 + 48) = v51;
  *(_OWORD *)(v35 + 64) = v50;
  *(_OWORD *)(v35 + 80) = v49;
  *(_OWORD *)(v35 + 96) = v48;
  *(_OWORD *)(v35 + 112) = v47;
  *(CGFloat *)(v35 + 128) = v46;
  *(CGFloat *)(v35 + 136) = v45;
  *(void *)(v31 + 120) = v33;
  id v36 = (CGFloat *)swift_allocObject();
  *(void *)(v31 + 96) = v36;
  v36[2] = m11;
  v36[3] = m12;
  v36[4] = m13;
  v36[5] = m14;
  v36[6] = m21;
  v36[7] = m22;
  v36[8] = m23;
  v36[9] = m24;
  v36[10] = m31;
  v36[11] = m32;
  v36[12] = m33;
  v36[13] = m34;
  v36[14] = m41;
  v36[15] = m42;
  v36[16] = m43;
  v36[17] = m44;
  Class v37 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v26 setValues:v37];

  [v26 setRemovedOnCompletion:1];
  [v26 setAdditive:0];
  id v38 = *(void **)(qword_1003AC750 + 912);
  id v39 = v26;
  id v40 = v38;
  NSString v41 = sub_1000FF288();

  if (v41)
  {
    id v42 = [self functionWithName:v41];
  }
  else
  {
    id v42 = 0;
  }
  [v39 setTimingFunction:v42];

  id v43 = [v9 layer];
  NSString v44 = String._bridgeToObjectiveC()();
  [v43 addAnimation:v39 forKey:v44];
}

void sub_100121CB0()
{
  sub_10000A38C(&qword_100367E28);
  sub_10000A38C((uint64_t *)&unk_100367FD0);
  uint64_t v1 = String.init<A>(describing:)();
  sub_10016B950(60, 0xE100000000000000, v1, v2);
  if ((v3 & 1) == 0)
  {
    String.subscript.getter();
    swift_bridgeObjectRelease();
    static String._fromSubstring(_:)();
    swift_bridgeObjectRelease();
  }
  id v4 = objc_allocWithZone((Class)CULogHandle);
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [v4 initWithSubsystem:v5 category:v6];

  NSString v8 = String._bridgeToObjectiveC()();
  [v7 ulog:40 message:v8];

  uint64_t v9 = *(void *)((swift_isaMask & *v0) + 0x110);
  if (!*(void *)((char *)v0 + v9))
  {
    id v10 = [self displayLinkWithTarget:v0 selector:"update"];
    id v11 = [self mainRunLoop];
    [v10 addToRunLoop:v11 forMode:NSRunLoopCommonModes];

    [v10 setPaused:0];
    NSString v12 = *(void **)((char *)v0 + v9);
    *(void *)((char *)v0 + v9) = v10;
  }
}

uint64_t sub_100121EF4(void *a1)
{
  return sub_100122020(a1, &qword_10035D010, (uint64_t *)&unk_100368230, (void (*)(id, uint64_t, uint64_t))sub_100264DE0, (void (*)(uint64_t))sub_1000F0808);
}

uint64_t sub_100121F30(uint64_t a1)
{
  return sub_100122D10(a1, &qword_10035FEA8, &qword_100368240, (void (*)(uint64_t, uint64_t, uint64_t))sub_100264E20, (void (*)(uint64_t))sub_1000F06FC);
}

uint64_t sub_100121F6C(uint64_t a1)
{
  return sub_10012261C(a1, &qword_10035FEC8, (uint64_t *)&unk_100368220, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100265248, (void (*)(uint64_t))sub_1000F06FC);
}

uint64_t sub_100121FA8(uint64_t a1)
{
  return sub_100122934(a1, (uint64_t *)&unk_100368060, (uint64_t *)&unk_100368100, (void (*)(uint64_t, char *, uint64_t))sub_10026496C, (uint64_t (*)(uint64_t))sub_1000F06FC);
}

uint64_t sub_100121FE4(void *a1)
{
  return sub_100122020(a1, &qword_100364BD0, (uint64_t *)&unk_100368210, (void (*)(id, uint64_t, uint64_t))sub_10026541C, (void (*)(uint64_t))sub_1000F0808);
}

uint64_t sub_100122020(void *a1, uint64_t *a2, uint64_t *a3, void (*a4)(id, uint64_t, uint64_t), void (*a5)(uint64_t))
{
  [*(id *)(v5 + 32) lock];
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  v10._uint64_t countAndFlagsBits = 0x5F28747265736E69;
  v10._unint64_t object = (void *)0xEA0000000000293ALL;
  String.append(_:)(v10);
  v11._uint64_t countAndFlagsBits = 0x3D79656B203ALL;
  v11._unint64_t object = (void *)0xE600000000000000;
  String.append(_:)(v11);
  _print_unlocked<A, B>(_:_:)();
  sub_10000A38C(a2);
  sub_10000A38C(a3);
  String.init<A>(describing:)();
  id v12 = objc_allocWithZone((Class)CULogHandle);
  NSString v13 = String._bridgeToObjectiveC()();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [v12 initWithSubsystem:v13 category:v14];

  swift_bridgeObjectRetain();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 ulog:40 message:v16];
  swift_bridgeObjectRelease();

  swift_beginAccess();
  id v17 = a1;
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = *(void *)(v5 + 64);
  *(void *)(v5 + 64) = 0x8000000000000000;
  a4(v17, v23, isUniquelyReferenced_nonNull_native);
  *(void *)(v5 + 64) = v22;
  swift_bridgeObjectRelease();
  swift_endAccess();
  [*(id *)(v5 + 32) unlock];
  swift_retain();
  PassthroughSubject.send(_:)();
  swift_release();
  swift_retain();
  uint64_t v19 = swift_bridgeObjectRetain();
  a5(v19);
  swift_bridgeObjectRelease();
  PassthroughSubject.send(_:)();
  swift_release();
  return swift_release();
}

uint64_t sub_1001222DC(uint64_t a1)
{
  return sub_100122934(a1, &qword_1003680F0, &qword_1003680F8, (void (*)(uint64_t, char *, uint64_t))sub_1002655B8, (uint64_t (*)(uint64_t))sub_1000F06FC);
}

uint64_t sub_100122318(void *a1)
{
  [*(id *)(v1 + 32) lock];
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  v3._uint64_t countAndFlagsBits = 0x5F28747265736E69;
  v3._unint64_t object = (void *)0xEA0000000000293ALL;
  String.append(_:)(v3);
  v4._uint64_t countAndFlagsBits = 0x3D79656B203ALL;
  v4._unint64_t object = (void *)0xE600000000000000;
  String.append(_:)(v4);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v14 = sub_10000A38C(&qword_100365D20);
  sub_10000A38C((uint64_t *)&unk_100368200);
  String.init<A>(describing:)();
  id v5 = objc_allocWithZone((Class)CULogHandle);
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v5 initWithSubsystem:v6 category:v7, v14, 0xE000000000000000];

  swift_bridgeObjectRetain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 ulog:40 message:v9];
  swift_bridgeObjectRelease();

  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v10 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *(void *)(v1 + 64);
  *(void *)(v1 + 64) = 0x8000000000000000;
  sub_1002655F8((uint64_t)v10, v16, v17, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + 64) = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  [*(id *)(v1 + 32) unlock];
  swift_retain();
  PassthroughSubject.send(_:)();
  swift_release();
  swift_retain();
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_1000F0808(v12);
  swift_bridgeObjectRelease();
  PassthroughSubject.send(_:)();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001225E0(uint64_t a1)
{
  return sub_10012261C(a1, &qword_100366408, (uint64_t *)&unk_1003681F0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100265738, (void (*)(uint64_t))sub_1000F06FC);
}

uint64_t sub_10012261C(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t))
{
  [*(id *)(v5 + 32) lock];
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  v9._uint64_t countAndFlagsBits = 0x5F28747265736E69;
  v9._unint64_t object = (void *)0xEA0000000000293ALL;
  String.append(_:)(v9);
  v10._uint64_t countAndFlagsBits = 0x3D79656B203ALL;
  v10._unint64_t object = (void *)0xE600000000000000;
  String.append(_:)(v10);
  _print_unlocked<A, B>(_:_:)();
  sub_10000A38C(a2);
  sub_10000A38C(a3);
  String.init<A>(describing:)();
  id v11 = objc_allocWithZone((Class)CULogHandle);
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v11 initWithSubsystem:v12 category:v13];

  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 ulog:40 message:v15];
  swift_bridgeObjectRelease();

  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *(void *)(v5 + 64);
  *(void *)(v5 + 64) = 0x8000000000000000;
  a4(a1, v22, v23, isUniquelyReferenced_nonNull_native);
  *(void *)(v5 + 64) = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  [*(id *)(v5 + 32) unlock];
  swift_retain();
  PassthroughSubject.send(_:)();
  swift_release();
  swift_retain();
  uint64_t v17 = swift_bridgeObjectRetain();
  a5(v17);
  swift_bridgeObjectRelease();
  PassthroughSubject.send(_:)();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001228F8(uint64_t a1)
{
  return sub_100122934(a1, &qword_100368040, &qword_100368048, (void (*)(uint64_t, char *, uint64_t))sub_100265CA4, (uint64_t (*)(uint64_t))sub_1000F06FC);
}

uint64_t sub_100122934(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t, char *, uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t v33 = a4;
  id v34 = a5;
  uint64_t v8 = v5;
  uint64_t v32 = a1;
  uint64_t v31 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v31 - 8);
  uint64_t v11 = __chkstk_darwin(v31);
  NSString v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  NSString v15 = (char *)&v30 - v14;
  uint64_t v38 = a1;
  [*(id *)(v8 + 32) lock];
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  v16._uint64_t countAndFlagsBits = 0x5F28747265736E69;
  v16._unint64_t object = (void *)0xEA0000000000293ALL;
  String.append(_:)(v16);
  v17._uint64_t countAndFlagsBits = 0x3D79656B203ALL;
  v17._unint64_t object = (void *)0xE600000000000000;
  String.append(_:)(v17);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v36 = sub_10000A38C(a2);
  sub_10000A38C(a3);
  String.init<A>(describing:)();
  id v18 = objc_allocWithZone((Class)CULogHandle);
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v21 = [v18 initWithSubsystem:v19 category:v20];

  swift_bridgeObjectRetain();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v21 ulog:40 message:v22];
  swift_bridgeObjectRelease();

  uint64_t v23 = v31;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v31);
  swift_beginAccess();
  uint64_t v24 = v32;
  swift_retain();
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v35 = *(void *)(v8 + 64);
  *(void *)(v8 + 64) = 0x8000000000000000;
  v33(v24, v13, isUniquelyReferenced_nonNull_native);
  *(void *)(v8 + 64) = v35;
  swift_bridgeObjectRelease();
  id v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  v26(v13, v23);
  swift_endAccess();
  [*(id *)(v8 + 32) unlock];
  swift_retain();
  PassthroughSubject.send(_:)();
  swift_release();
  swift_retain();
  uint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v28 = v34(v27);
  swift_bridgeObjectRelease();
  uint64_t v36 = v28;
  PassthroughSubject.send(_:)();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v26)(v15, v23);
}

uint64_t sub_100122CD4(uint64_t a1)
{
  return sub_100122D10(a1, &qword_100368028, (uint64_t *)&unk_100368030, (void (*)(uint64_t, uint64_t, uint64_t))sub_100266060, (void (*)(uint64_t))sub_1000F06FC);
}

uint64_t sub_100122D10(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t))
{
  [*(id *)(v5 + 32) lock];
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  v10._uint64_t countAndFlagsBits = 0x5F28747265736E69;
  v10._unint64_t object = (void *)0xEA0000000000293ALL;
  String.append(_:)(v10);
  v11._uint64_t countAndFlagsBits = 0x3D79656B203ALL;
  v11._unint64_t object = (void *)0xE600000000000000;
  String.append(_:)(v11);
  _print_unlocked<A, B>(_:_:)();
  sub_10000A38C(a2);
  sub_10000A38C(a3);
  String.init<A>(describing:)();
  id v12 = objc_allocWithZone((Class)CULogHandle);
  NSString v13 = String._bridgeToObjectiveC()();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [v12 initWithSubsystem:v13 category:v14];

  swift_bridgeObjectRetain();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 ulog:40 message:v16];
  swift_bridgeObjectRelease();

  swift_beginAccess();
  swift_retain();
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *(void *)(v5 + 64);
  *(void *)(v5 + 64) = 0x8000000000000000;
  a4(a1, v22, isUniquelyReferenced_nonNull_native);
  *(void *)(v5 + 64) = v21;
  swift_bridgeObjectRelease();
  swift_endAccess();
  [*(id *)(v5 + 32) unlock];
  swift_retain();
  PassthroughSubject.send(_:)();
  swift_release();
  swift_retain();
  uint64_t v18 = swift_bridgeObjectRetain();
  a5(v18);
  swift_bridgeObjectRelease();
  PassthroughSubject.send(_:)();
  swift_release();
  return swift_release();
}

uint64_t sub_100122FCC(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(uint64_t))
{
  swift_beginAccess();
  if (!*(void *)(*(void *)(v4 + 64) + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_100269CBC(a1, a2);
  char v10 = v9;
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
    return 0;
  }
  [*(id *)(v4 + 32) lock];
  swift_beginAccess();
  uint64_t v11 = sub_1001300F0(a1, a2, a3);
  swift_endAccess();
  [*(id *)(v4 + 32) unlock];
  if (v11)
  {
    swift_retain();
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_retain();
    uint64_t v12 = swift_bridgeObjectRetain();
    a4(v12);
    swift_bridgeObjectRelease();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_release();
    swift_release();
  }
  return v11;
}

uint64_t sub_100123140(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  if (!*(void *)(*(void *)(v2 + 64) + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_100269CBC(a1, a2);
  char v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0) {
    return 0;
  }
  [*(id *)(v2 + 32) lock];
  swift_beginAccess();
  uint64_t v7 = sub_1001300F0(a1, a2, (void (*)(void))sub_100057F40);
  swift_endAccess();
  [*(id *)(v2 + 32) unlock];
  if (v7)
  {
    v10[0] = v7;
    swift_retain();
    sub_100124138(v10, (void (*)(void))type metadata accessor for DeviceHistory);
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_retain();
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_1000F06FC(v8);
    swift_bridgeObjectRelease();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_release();
    swift_release();
  }
  return v7;
}

void *sub_1001232D0(uint64_t a1)
{
  swift_beginAccess();
  if (!*(void *)(*(void *)(v1 + 64) + 16)) {
    return 0;
  }
  sub_100269E24(a1);
  if ((v3 & 1) == 0) {
    return 0;
  }
  [*(id *)(v1 + 32) lock];
  swift_beginAccess();
  uint64_t v4 = (void *)sub_10013053C(a1, (uint64_t (*)(void))sub_100269E24, (void (*)(uint64_t, uint64_t))sub_10013140C, (void (*)(void))sub_10005875C);
  swift_endAccess();
  [*(id *)(v1 + 32) unlock];
  if (v4)
  {
    id v8 = v4;
    id v5 = v4;
    sub_100124404(&v8, qword_100368248);
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_retain();
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_1000F0808(v6);
    swift_bridgeObjectRelease();
    PassthroughSubject.send(_:)();

    swift_release();
    swift_release();
  }
  return v4;
}

uint64_t sub_100123460(uint64_t a1)
{
  return sub_100123F90(a1, (void (*)(void))sub_100058768, (void (*)(void))type metadata accessor for ActivityProxyClientContext, (void (*)(uint64_t))sub_1000F06FC);
}

uint64_t sub_1001234A0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  if (!*(void *)(*(void *)(v2 + 64) + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_100269CBC(a1, a2);
  char v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0) {
    return 0;
  }
  [*(id *)(v2 + 32) lock];
  swift_beginAccess();
  uint64_t v7 = sub_1001300F0(a1, a2, (void (*)(void))sub_100058B14);
  swift_endAccess();
  [*(id *)(v2 + 32) unlock];
  if (v7)
  {
    uint64_t v21 = v7;
    if (*(unsigned char *)(v2 + 24) == 1)
    {
      uint64_t v19 = type metadata accessor for HandoffDevice();
      NSString v20 = &off_100320960;
      v18[0] = v7;
      sub_10000D6E4(v18, v19);
      swift_retain_n();
      uint64_t v8 = sub_100043F8C();
      sub_100117838(v8);
      swift_bridgeObjectRelease();
      uint64_t v9 = v19;
      char v10 = v20;
      sub_100071968((uint64_t)v18, v19);
      uint64_t v11 = (void (*)(unsigned char *, void))((uint64_t (*)(unsigned char *, uint64_t, _UNKNOWN **))v10[3])(v17, v9, v10);
      NSString v13 = v12;
      swift_bridgeObjectRelease();
      *NSString v13 = &_swiftEmptySetSingleton;
      v11(v17, 0);
      sub_10000CC5C((uint64_t)v18);
    }
    else
    {
      swift_retain();
    }
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_retain();
    uint64_t v14 = swift_bridgeObjectRetain();
    id v15 = sub_1000F06FC(v14);
    swift_bridgeObjectRelease();
    v18[0] = v15;
    PassthroughSubject.send(_:)();
    swift_release();
    swift_release();
    swift_release();
  }
  return v7;
}

uint64_t sub_100123700(uint64_t a1)
{
  swift_beginAccess();
  if (!*(void *)(*(void *)(v1 + 64) + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_100269DA0(a1);
  char v4 = v3;
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    return 0;
  }
  [*(id *)(v1 + 32) lock];
  swift_beginAccess();
  uint64_t v5 = sub_100130200(a1, (void (*)(void))sub_100058100);
  swift_endAccess();
  [*(id *)(v1 + 32) unlock];
  if (v5)
  {
    uint64_t v19 = v5;
    if (*(unsigned char *)(v1 + 24) == 1)
    {
      uint64_t v17 = type metadata accessor for HandoffDevice();
      uint64_t v18 = &off_100320960;
      v16[0] = v5;
      sub_10000D6E4(v16, v17);
      swift_retain_n();
      uint64_t v6 = sub_100043F8C();
      sub_100117838(v6);
      swift_bridgeObjectRelease();
      uint64_t v7 = v17;
      uint64_t v8 = v18;
      sub_100071968((uint64_t)v16, v17);
      uint64_t v9 = (void (*)(unsigned char *, void))((uint64_t (*)(unsigned char *, uint64_t, _UNKNOWN **))v8[3])(v15, v7, v8);
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      *uint64_t v11 = &_swiftEmptySetSingleton;
      v9(v15, 0);
      sub_10000CC5C((uint64_t)v16);
    }
    else
    {
      swift_retain();
    }
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_retain();
    uint64_t v12 = swift_bridgeObjectRetain();
    NSString v13 = sub_1000F06FC(v12);
    swift_bridgeObjectRelease();
    v16[0] = v13;
    PassthroughSubject.send(_:)();
    swift_release();
    swift_release();
    swift_release();
  }
  return v5;
}

void *sub_100123954(uint64_t a1)
{
  swift_beginAccess();
  if (!*(void *)(*(void *)(v1 + 64) + 16)) {
    return 0;
  }
  sub_100269E24(a1);
  if ((v3 & 1) == 0) {
    return 0;
  }
  [*(id *)(v1 + 32) lock];
  swift_beginAccess();
  char v4 = (void *)sub_10013053C(a1, (uint64_t (*)(void))sub_100269E24, (void (*)(uint64_t, uint64_t))sub_10013140C, (void (*)(void))sub_100058D20);
  swift_endAccess();
  [*(id *)(v1 + 32) unlock];
  if (v4)
  {
    id v8 = v4;
    id v5 = v4;
    sub_100124298(&v8);
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_retain();
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_1000F0808(v6);
    swift_bridgeObjectRelease();
    PassthroughSubject.send(_:)();

    swift_release();
    swift_release();
  }
  return v4;
}

void *sub_100123AD4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  if (!*(void *)(*(void *)(v2 + 64) + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_100269CBC(a1, a2);
  char v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0) {
    return 0;
  }
  [*(id *)(v2 + 32) lock];
  swift_beginAccess();
  uint64_t v7 = (void *)sub_1001300F0(a1, a2, (void (*)(void))sub_100058EE0);
  swift_endAccess();
  [*(id *)(v2 + 32) unlock];
  if (v7)
  {
    id v11 = v7;
    id v8 = v7;
    sub_100124404(&v11, (unint64_t *)&unk_100365C90);
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_retain();
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_1000F0808(v9);
    swift_bridgeObjectRelease();
    PassthroughSubject.send(_:)();

    swift_release();
    swift_release();
  }
  return v7;
}

uint64_t sub_100123C5C(uint64_t a1)
{
  swift_beginAccess();
  if (!*(void *)(*(void *)(v1 + 64) + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_100269DA0(a1);
  char v4 = v3;
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    return 0;
  }
  [*(id *)(v1 + 32) lock];
  swift_beginAccess();
  uint64_t v5 = sub_100130200(a1, (void (*)(void))sub_100058ED4);
  swift_endAccess();
  [*(id *)(v1 + 32) unlock];
  if (v5)
  {
    v8[0] = v5;
    swift_retain();
    sub_100124138(v8, (void (*)(void))type metadata accessor for TrackedToken);
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_retain();
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_1000F06FC(v6);
    swift_bridgeObjectRelease();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_release();
    swift_release();
  }
  return v5;
}

uint64_t sub_100123DE0(uint64_t a1)
{
  swift_beginAccess();
  if (!*(void *)(*(void *)(v1 + 64) + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_100269DA0(a1);
  char v4 = v3;
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    return 0;
  }
  [*(id *)(v1 + 32) lock];
  swift_beginAccess();
  uint64_t v5 = sub_100130200(a1, (void (*)(void))sub_100059DB8);
  swift_endAccess();
  [*(id *)(v1 + 32) unlock];
  if (v5)
  {
    v8[0] = v5;
    swift_retain();
    sub_10012455C(v8);
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_retain();
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_1000F06FC(v6);
    swift_bridgeObjectRelease();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_release();
    swift_release();
  }
  return v5;
}

uint64_t sub_100123F50(uint64_t a1)
{
  return sub_100123F90(a1, (void (*)(void))sub_10005A214, (void (*)(void))type metadata accessor for ProxControlDemoBridgeServer, (void (*)(uint64_t))sub_1000F06FC);
}

uint64_t sub_100123F90(uint64_t a1, void (*a2)(void), void (*a3)(void), void (*a4)(uint64_t))
{
  swift_beginAccess();
  if (!*(void *)(*(void *)(v4 + 64) + 16)) {
    return 0;
  }
  sub_100269E24(a1);
  if ((v9 & 1) == 0) {
    return 0;
  }
  [*(id *)(v4 + 32) lock];
  swift_beginAccess();
  uint64_t v10 = sub_10013053C(a1, (uint64_t (*)(void))sub_100269E24, (void (*)(uint64_t, uint64_t))sub_10013140C, a2);
  swift_endAccess();
  [*(id *)(v4 + 32) unlock];
  if (v10)
  {
    v13[0] = v10;
    swift_retain();
    sub_100124138(v13, a3);
    swift_retain();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_retain();
    uint64_t v11 = swift_bridgeObjectRetain();
    a4(v11);
    swift_bridgeObjectRelease();
    PassthroughSubject.send(_:)();
    swift_release();
    swift_release();
    swift_release();
  }
  return v10;
}

uint64_t *sub_100124120(uint64_t *a1)
{
  return sub_100124138(a1, (void (*)(void))type metadata accessor for TrackedToken);
}

uint64_t *sub_100124138(uint64_t *result, void (*a2)(void))
{
  if (*(unsigned char *)(v2 + 24) == 1)
  {
    uint64_t v13 = *result;
    a2(0);
    swift_retain();
    sub_10000A38C(&qword_1003677D0);
    if (swift_dynamicCast())
    {
      sub_10000D7E8(v11, (uint64_t)v14);
      uint64_t v3 = v15;
      uint64_t v4 = v16;
      sub_10000D6E4(v14, v15);
      uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
      sub_100117838(v5);
      swift_bridgeObjectRelease();
      uint64_t v6 = v15;
      uint64_t v7 = v16;
      sub_100071968((uint64_t)v14, v15);
      id v8 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v7 + 24))(v11, v6, v7);
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      void *v10 = &_swiftEmptySetSingleton;
      v8(v11, 0);
      return (uint64_t *)sub_10000CC5C((uint64_t)v14);
    }
    else
    {
      uint64_t v12 = 0;
      memset(v11, 0, sizeof(v11));
      return (uint64_t *)sub_10000D78C((uint64_t)v11, &qword_1003677D8);
    }
  }
  return result;
}

id *sub_100124298(id *result)
{
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    id v13 = *result;
    type metadata accessor for XPCConnection();
    id v2 = v13;
    sub_10000A38C(&qword_1003677D0);
    if (swift_dynamicCast())
    {
      sub_10000D7E8(v11, (uint64_t)v14);
      uint64_t v3 = v15;
      uint64_t v4 = v16;
      sub_10000D6E4(v14, v15);
      uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
      sub_100117838(v5);
      swift_bridgeObjectRelease();
      uint64_t v6 = v15;
      uint64_t v7 = v16;
      sub_100071968((uint64_t)v14, v15);
      id v8 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v7 + 24))(v11, v6, v7);
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      void *v10 = &_swiftEmptySetSingleton;
      v8(v11, 0);
      return (id *)sub_10000CC5C((uint64_t)v14);
    }
    else
    {
      uint64_t v12 = 0;
      memset(v11, 0, sizeof(v11));
      return (id *)sub_10000D78C((uint64_t)v11, &qword_1003677D8);
    }
  }
  return result;
}

id *sub_1001243F0(id *a1)
{
  return sub_100124404(a1, (unint64_t *)&unk_100365C90);
}

id *sub_100124404(id *result, unint64_t *a2)
{
  if (*(unsigned char *)(v2 + 24) == 1)
  {
    id v14 = *result;
    sub_100019E10(0, a2);
    id v3 = v14;
    sub_10000A38C(&qword_1003677D0);
    if (swift_dynamicCast())
    {
      sub_10000D7E8(v12, (uint64_t)v15);
      uint64_t v4 = v16;
      uint64_t v5 = v17;
      sub_10000D6E4(v15, v16);
      uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
      sub_100117838(v6);
      swift_bridgeObjectRelease();
      uint64_t v7 = v16;
      uint64_t v8 = v17;
      sub_100071968((uint64_t)v15, v16);
      char v9 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v8 + 24))(v12, v7, v8);
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      *uint64_t v11 = &_swiftEmptySetSingleton;
      v9(v12, 0);
      return (id *)sub_10000CC5C((uint64_t)v15);
    }
    else
    {
      uint64_t v13 = 0;
      memset(v12, 0, sizeof(v12));
      return (id *)sub_10000D78C((uint64_t)v12, &qword_1003677D8);
    }
  }
  return result;
}

uint64_t *sub_10012455C(uint64_t *result)
{
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    uint64_t v12 = *result;
    swift_retain();
    sub_10000A38C(&qword_10035B578);
    sub_10000A38C(&qword_1003677D0);
    if (swift_dynamicCast())
    {
      sub_10000D7E8(v10, (uint64_t)v13);
      uint64_t v2 = v14;
      uint64_t v3 = v15;
      sub_10000D6E4(v13, v14);
      uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
      sub_100117838(v4);
      swift_bridgeObjectRelease();
      uint64_t v5 = v14;
      uint64_t v6 = v15;
      sub_100071968((uint64_t)v13, v14);
      uint64_t v7 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v6 + 24))(v10, v5, v6);
      char v9 = v8;
      swift_bridgeObjectRelease();
      *char v9 = &_swiftEmptySetSingleton;
      v7(v10, 0);
      return (uint64_t *)sub_10000CC5C((uint64_t)v13);
    }
    else
    {
      uint64_t v11 = 0;
      memset(v10, 0, sizeof(v10));
      return (uint64_t *)sub_10000D78C((uint64_t)v10, &qword_1003677D8);
    }
  }
  return result;
}

uint64_t sub_1001246B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  [*(id *)(v2 + 32) lock];
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 64);
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_100269CBC(a1, a2);
    if (v8)
    {
      uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
      swift_retain();
    }
    else
    {
      uint64_t v9 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  [*(id *)(v3 + 32) unlock];
  return v9;
}

uint64_t sub_100124774(uint64_t a1)
{
  uint64_t v2 = v1;
  [*(id *)(v1 + 32) lock];
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 64);
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_100269E24(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = 0;
  }
  [*(id *)(v2 + 32) unlock];
  return v7;
}

uint64_t sub_100124B00()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___isEnabledPublisher;
  if (*(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___isEnabledPublisher))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___isEnabledPublisher);
  }
  else
  {
    uint64_t v3 = v0;
    swift_retain();
    sub_100104B88();
    sub_10000A38C((uint64_t *)&unk_10036BFE0);
    sub_10000B010((unint64_t *)&unk_100363D30, (uint64_t *)&unk_10036BFE0);
    uint64_t v2 = Publisher.eraseToAnyPublisher()();
    swift_release();
    swift_release();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void *sub_100124BF4()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___activityProxyModel;
  if (*(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___activityProxyModel))
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___activityProxyModel);
  }
  else
  {
    uint64_t v3 = sub_100124D60();
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_deviceStorage);
    uint64_t v5 = swift_allocObject();
    swift_weakInit();
    uint64_t v6 = swift_allocObject();
    swift_weakInit();
    uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_mediaRemoteProxy);
    uint64_t v8 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for ActivityProxyModel();
    uint64_t v2 = (void *)swift_allocObject();
    v2[2] = v3;
    v2[3] = v4;
    _OWORD v2[4] = sub_100133E08;
    v2[5] = v5;
    v2[6] = sub_100133E10;
    v2[7] = v6;
    v2[8] = v7;
    v2[9] = sub_100133E18;
    v2[10] = v8;
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void *sub_100124D60()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___deviceActivityServer;
  if (*(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___deviceActivityServer))
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___deviceActivityServer);
  }
  else
  {
    uint64_t v3 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_shareableContentResolver)
                   + 112);
    uint64_t v4 = qword_10035A5F0;
    swift_retain();
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v5 = *(void *)(qword_1003ACA78 + OBJC_IVAR____TtC17proximitycontrold14TelephonyProxy_state);
    type metadata accessor for DeviceActivityServer();
    uint64_t v2 = (void *)swift_allocObject();
    v2[3] = v3;
    _OWORD v2[4] = 0;
    v2[2] = v5;
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_100124E50()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  char v1 = Strong;
  if (Strong)
  {
    sub_1001252B0();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    char v1 = v3;
    if (v3)
    {
      swift_retain();
      swift_release();
      swift_retain();
      swift_retain();
      char v1 = static UUID.== infix(_:_:)();
      swift_release_n();
      swift_release();
    }
  }
  return v1 & 1;
}

uint64_t sub_100124F74()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(*(void *)(Strong
                                                  + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_screenOnMonitor)
                                      + 16)
                          + 24);
  swift_release();
  return v1;
}

double sub_100124FE0@<D0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  if (swift_weakLoadStrong()
    && (uint64_t v2 = sub_100125088(), swift_release(), v3 = (void *)v2[4], v4 = v3, swift_release(), v3))
  {
    *(void *)(a1 + 24) = type metadata accessor for RapportProxy();
    *(void *)(a1 + 32) = &off_1003248F8;
    *(void *)a1 = v4;
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

void *sub_100125088()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nearbyAgentState;
  if (*(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nearbyAgentState))
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nearbyAgentState);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_deviceStorage);
    type metadata accessor for NearbyAgentState();
    uint64_t v2 = (void *)swift_allocObject();
    type metadata accessor for HomeKitProxyState();
    swift_allocObject();
    swift_retain();
    v2[3] = sub_1000DC5E8();
    _OWORD v2[4] = 0;
    type metadata accessor for RPIdentitySourceState();
    swift_allocObject();
    v2[5] = sub_1001A99A8();
    v2[2] = v3;
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

char *sub_100125160()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nearbyAgent;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nearbyAgent);
  if (v2)
  {
    uint64_t v3 = *(char **)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nearbyAgent);
  }
  else
  {
    uint64_t v4 = v0;
    uint64_t v5 = sub_100125200();
    uint64_t v7 = v6;
    uint64_t v8 = sub_100125088();
    id v9 = objc_allocWithZone((Class)type metadata accessor for NearbyAgent());
    uint64_t v10 = sub_100105510((uint64_t)v5, v7, (uint64_t)v8);
    uint64_t v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v10;
    uint64_t v3 = v10;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

void *sub_100125200()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nearbyAgentModel);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nearbyAgentModel);
  if (v2)
  {
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nearbyAgentModel);
  }
  else
  {
    uint64_t v3 = sub_100124D60();
    uint64_t v4 = *(void *)(sub_10011A030() + 24);
    swift_retain();
    swift_release();
    uint64_t v5 = *v1;
    *uint64_t v1 = (uint64_t)v3;
    v1[1] = v4;
    swift_retain();
    swift_retain();
    sub_100133D50(v5);
  }
  sub_100133D90(v2);
  return v3;
}

uint64_t *sub_1001252B0()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___handoffSessionManager;
  if (*(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___handoffSessionManager))
  {
    uint64_t v2 = *(uint64_t **)(v0
                     + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___handoffSessionManager);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for HandoffSessionManager();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v2 = sub_1000943D8(v4);
    swift_release();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t *sub_100125340()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___debugHandoffDeviceServiceServer;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___debugHandoffDeviceServiceServer))
  {
    uint64_t v2 = *(uint64_t **)(v0
                     + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___debugHandoffDeviceServiceServer);
  }
  else
  {
    uint64_t v3 = v0;
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_deviceStorage);
    swift_retain();
    uint64_t v5 = sub_10011A030()[3];
    swift_retain();
    swift_release();
    type metadata accessor for MockHandoffDeviceServiceServer();
    swift_allocObject();
    uint64_t v2 = sub_1000D1D48(v4, v5);
    swift_release();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_10012540C()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___classicBannerPresenter;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___classicBannerPresenter);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___classicBannerPresenter);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_allocWithZone((Class)sub_10000A38C(&qword_100367DC0));
    uint64_t v6 = swift_retain();
    sub_1001345AC(v6);
    uint64_t v8 = v7;
    swift_release();
    id v9 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

uint64_t *sub_100125498()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___hapticPresenter;
  if (*(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___hapticPresenter))
  {
    uint64_t v2 = *(uint64_t **)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___hapticPresenter);
  }
  else
  {
    uint64_t v3 = v0;
    sub_10000A38C(&qword_100367D50);
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v2 = sub_100129FF4(v4);
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t *sub_100125524()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___remoteFollowerPresenter;
  if (*(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___remoteFollowerPresenter))
  {
    uint64_t v2 = *(uint64_t **)(v0
                     + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___remoteFollowerPresenter);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for RemoteFollowerPresenter();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v2 = sub_10016E9DC(v4);
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001255A8()
{
  return sub_1001256FC(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___viewServicePresenter, &qword_100367348, 72, sub_1001351A4);
}

uint64_t sub_1001255D4()
{
  return sub_10012560C(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___devicePrewarmer, (void (*)(void))type metadata accessor for Handoff3DevicePrewarmer, 48, sub_100007234);
}

uint64_t sub_10012560C(uint64_t *a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(v4 + *a1);
  if (v6)
  {
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v9 = v4;
    a2();
    swift_allocObject();
    uint64_t v10 = swift_retain();
    uint64_t v7 = a4(v10);
    *(void *)(v9 + v5) = v7;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v7;
}

uint64_t sub_1001256A4()
{
  return sub_1001256FC(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___systemEventManager, &qword_100367800, 40, (uint64_t (*)(uint64_t))sub_100133E20);
}

uint64_t sub_1001256D0()
{
  return sub_1001256FC(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___telemetryManager, &qword_100367350, 64, (uint64_t (*)(uint64_t))sub_100138280);
}

uint64_t sub_1001256FC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(v4 + *a1);
  if (v6)
  {
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v9 = v4;
    sub_10000A38C(a2);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    uint64_t v7 = a4(v10);
    swift_release();
    *(void *)(v9 + v5) = v7;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v7;
}

uint64_t *sub_1001257A0()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nanoPreferencesSyncServer;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nanoPreferencesSyncServer))
  {
    uint64_t v2 = *(uint64_t **)(v0
                     + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nanoPreferencesSyncServer);
  }
  else
  {
    uint64_t v3 = v0;
    uint64_t v4 = sub_100125830();
    type metadata accessor for NanoPreferencesSyncServer();
    swift_allocObject();
    uint64_t v2 = sub_100024414((uint64_t)v4);
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void *sub_100125830()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nanoPreferencesSyncServerModel;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nanoPreferencesSyncServerModel))
  {
    uint64_t v2 = *(void **)(v0
                    + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nanoPreferencesSyncServerModel);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_deviceStorage);
    type metadata accessor for NanoPreferencesSyncServerModel();
    uint64_t v2 = (void *)swift_allocObject();
    sub_10000A38C(&qword_100368098);
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = 0;
    *(void *)(v4 + 24) = 0;
    v2[2] = v4;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = 0;
    *(void *)(v5 + 24) = 0;
    v2[3] = v5;
    _OWORD v2[4] = v3;
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001258F0()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___viewServiceLinkProducer;
  if (*(void *)(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___viewServiceLinkProducer))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___viewServiceLinkProducer);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for ViewServiceLinkProducer();
    swift_allocObject();
    uint64_t v2 = sub_100113898();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t *sub_10012596C()
{
  uint64_t v1 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___proxControlDemoLinkServerManager;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___proxControlDemoLinkServerManager))
  {
    uint64_t v2 = *(uint64_t **)(v0
                     + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___proxControlDemoLinkServerManager);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for ProxControlDemoLinkServerManager();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v2 = sub_10024D068(v4);
    swift_release();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001259FC()
{
  uint64_t v1 = v0;
  long long v52 = *(uint64_t **)v0;
  uint64_t v2 = sub_10000A38C((uint64_t *)&unk_100368050);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10035A628 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_1003ACB50;
  *(void *)(v0 + 16) = qword_1003ACB50;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = &_swiftEmptyDictionarySingleton;
  *(void *)(v0 + 72) = &_swiftEmptySetSingleton;
  id v7 = v6;
  UUID.init()();
  uint64_t v8 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment__isEnabled;
  sub_10000A38C(&qword_10035E150);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(unsigned char *)(v9 + 24) = 0;
  *(void *)(v1 + v8) = v9;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___isEnabledPublisher) = 0;
  uint64_t v10 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_deviceStorage;
  sub_10000A38C((uint64_t *)&unk_100368060);
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = [objc_allocWithZone((Class)NSLock) init];
  sub_10000A38C(&qword_10035ABB8);
  swift_allocObject();
  uint64_t v12 = PassthroughSubject.init()();
  sub_10000A38C(&qword_10035FED0);
  swift_allocObject();
  uint64_t v13 = PassthroughSubject.init()();
  swift_allocObject();
  uint64_t v14 = PassthroughSubject.init()();
  *(void *)(v11 + 40) = v12;
  *(void *)(v11 + 48) = v13;
  *(void *)(v11 + 56) = v14;
  *(void *)(v11 + 64) = &_swiftEmptyDictionarySingleton;
  *(void *)(v11 + 72) = 0;
  __chkstk_darwin(v14);
  v49[-4] = type metadata accessor for HandoffDevice();
  v49[-3] = type metadata accessor for UUID();
  v49[-2] = sub_100129DD8(&qword_1003647F0, (void (*)(uint64_t))type metadata accessor for HandoffDevice);
  *(void *)(v11 + 16) = swift_getKeyPath();
  *(unsigned char *)(v11 + 24) = 1;
  *(void *)(v1 + v10) = v11;
  uint64_t v15 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_assetManager;
  type metadata accessor for AssetManager();
  uint64_t v16 = swift_allocObject();
  *(void *)(v1 + v15) = v16;
  *(void *)(v16 + 16) = &_swiftEmptyDictionarySingleton;
  *(void *)(v16 + 24) = &_swiftEmptySetSingleton;
  uint64_t v17 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_mediaRemoteProxy;
  if (qword_10035A540 != -1) {
    swift_once();
  }
  *(void *)(v1 + v17) = qword_1003AC780;
  uint64_t v18 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_orientationPublisher;
  uint64_t v19 = qword_10035A538;
  swift_retain();
  if (v19 != -1) {
    swift_once();
  }
  swift_beginAccess();
  swift_retain();
  sub_10000A38C(&qword_100368070);
  Published.projectedValue.getter();
  swift_endAccess();
  swift_release();
  sub_10000B010(&qword_100368078, (uint64_t *)&unk_100368050);
  uint64_t v20 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)(v1 + v18) = v20;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___screenOnPublisher) = 0;
  uint64_t v21 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_batteryStateMonitor;
  type metadata accessor for BatteryStateMonitor();
  swift_allocObject();
  *(void *)(v1 + v21) = sub_1000C784C();
  uint64_t v22 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_screenOnMonitor;
  if (qword_10035A648 != -1) {
    swift_once();
  }
  *(void *)(v1 + v22) = qword_1003ACB70;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___activityProxy) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___activityProxyModel) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___deviceActivityServer) = 0;
  type metadata accessor for ShareableContentResolver();
  uint64_t v23 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  type metadata accessor for ShareableContentResolverState();
  *(void *)(v23 + 112) = swift_allocObject();
  if (qword_10035A668 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_10001D758(v24, (uint64_t)qword_100371418);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Init", v27, 2u);
    swift_slowDealloc();
  }

  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_shareableContentResolver) = v23;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nearbyAgent) = 0;
  uint64_t v28 = (void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nearbyAgentModel);
  *uint64_t v28 = 0;
  v28[1] = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nearbyAgentState) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___sessionPublisher) = 0;
  uint64_t v29 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_deviceUXRegionSubject;
  sub_10000A38C(&qword_1003677C0);
  swift_allocObject();
  *(void *)(v1 + v29) = PassthroughSubject.init()();
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___deviceUXRegionPublisher) = 0;
  uint64_t v30 = OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_experienceEventSessionIDReasonSubject;
  sub_10000A38C(&qword_100367678);
  swift_allocObject();
  *(void *)(v1 + v30) = PassthroughSubject.init()();
  *(void *)(v1
            + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___experienceEventSessionIDReasonPublisher) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___handoffSessionManager) = 0;
  *(void *)(v1
            + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___debugHandoffDeviceServiceServer) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___classicBannerPresenter) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___hapticPresenter) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___remoteFollowerPresenter) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___viewServicePresenter) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___devicePrewarmer) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___systemEventManager) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___transferManager) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___telemetryManager) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nanoPreferencesSyncServer) = 0;
  *(void *)(v1
            + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nanoPreferencesSyncServerModel) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___viewServiceLinkPublisher) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___viewServiceLinkProducer) = 0;
  uint64_t v31 = (void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_hapticPlayer);
  sub_100019E10(0, (unint64_t *)&qword_10035A680);
  uint64_t v32 = (void *)static OS_dispatch_queue.main.getter();
  id v33 = objc_allocWithZone((Class)type metadata accessor for HapticPlayer());
  id v34 = sub_100225950(v32);

  uint64_t v35 = sub_100129DD8(&qword_100368080, (void (*)(uint64_t))type metadata accessor for HapticPlayer);
  void *v31 = v34;
  v31[1] = v35;
  if (qword_10035A520 != -1) {
    swift_once();
  }
  id v36 = *(id *)(qword_1003AC750 + 992);
  char v37 = sub_10010277C();

  uint64_t v38 = (void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_impactGeneratorSoft);
  id v39 = [objc_allocWithZone((Class)UIImpactFeedbackGenerator) initWithStyle:qword_10029A920[v37]];
  uint64_t v40 = sub_100019E10(0, &qword_100368088);
  v38[3] = v40;
  v38[4] = &off_1003295B8;
  *uint64_t v38 = v39;
  id v41 = *(id *)(qword_1003AC750 + 1008);
  LOBYTE(v38) = sub_10010277C();

  id v42 = (void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_impactGeneratorHard);
  id v43 = [objc_allocWithZone((Class)UIImpactFeedbackGenerator) initWithStyle:qword_10029A920[(char)v38]];
  v42[3] = v40;
  v42[4] = &off_1003295B8;
  *id v42 = v43;
  NSString v44 = (void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_notificationGenerator);
  id v45 = [objc_allocWithZone((Class)UINotificationFeedbackGenerator) init];
  v44[3] = sub_100019E10(0, &qword_100368090);
  v44[4] = &off_1003295D0;
  *NSString v44 = v45;
  *(void *)(v1
            + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___proxControlDemoLinkServerManager) = 0;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, (uint64_t)v52, (uint64_t)&off_100328C78);
  sub_1001258F0();
  sub_100114758();
  swift_release();
  sub_100126578();
  long long v52 = sub_10011A030();
  long long v51 = sub_100125340();
  id v50 = sub_10012540C();
  _OWORD v49[3] = sub_1001256FC(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___viewServicePresenter, &qword_100367348, 72, sub_1001351A4);
  v49[2] = sub_10012560C(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___devicePrewarmer, (void (*)(void))type metadata accessor for Handoff3DevicePrewarmer, 48, sub_100007234);
  v49[1] = sub_100125498();
  sub_1001257A0();
  CGFloat v46 = sub_100125160();
  sub_100125524();
  sub_1001252B0();
  if (qword_10035A658 != -1) {
    swift_once();
  }
  uint64_t v47 = qword_10035A558;
  swift_retain();
  if (v47 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1001256FC(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___telemetryManager, &qword_100367350, 64, (uint64_t (*)(uint64_t))sub_100138280);
  sub_10012560C(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___transferManager, (void (*)(void))type metadata accessor for HandoffTransferManager, 72, (uint64_t (*)(uint64_t))sub_1002130FC);
  sub_1001258F0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100126578()
{
  uint64_t v1 = v0;
  uint64_t v15 = sub_10000A38C((uint64_t *)&unk_1003680A0);
  uint64_t v12 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = sub_1001F5834();
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 ulog:40 message:v5];

  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_deviceStorage);
  uint64_t v18 = *(void *)(v6 + 40);
  uint64_t v14 = sub_10000A38C(&qword_10035ABB8);
  uint64_t v13 = sub_10000B010(&qword_10035ABC0, &qword_10035ABB8);
  uint64_t v16 = Publisher.eraseToAnyPublisher()();
  [*(id *)(v6 + 32) lock];
  swift_beginAccess();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_1000F06FC(v7);
  swift_bridgeObjectRelease();
  [*(id *)(v6 + 32) unlock];
  uint64_t v17 = v8;
  uint64_t v11 = sub_10000A38C(&qword_10035ABC8);
  sub_10000A38C(&qword_10035CA78);
  sub_10000B010(&qword_10035ABD0, &qword_10035ABC8);
  sub_10000B010((unint64_t *)&unk_1003680B0, &qword_10035CA78);
  Publisher.prepend<A>(_:)();
  swift_release();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_10000B010(&qword_10035F7B0, (uint64_t *)&unk_1003680A0);
  uint64_t v9 = v15;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v3, v9);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v16 = *(void *)(v6 + 56);
  uint64_t v16 = Publisher.eraseToAnyPublisher()();
  swift_allocObject();
  swift_weakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10012695C()
{
  id v1 = sub_1001F5834();
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 ulog:40 message:v2];

  sub_10000F088(*(void *)(v0 + 24));
  sub_10000F088(*(void *)(v0 + 40));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_id;
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_100133D50(*(void *)(v0
                          + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___nearbyAgentModel));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___classicBannerPresenter));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  sub_10000CC5C(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_impactGeneratorSoft);
  sub_10000CC5C(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_impactGeneratorHard);
  sub_10000CC5C(v0 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_notificationGenerator);
  swift_release();
  return v0;
}

uint64_t sub_100126CBC()
{
  sub_10012695C();

  return swift_deallocClassInstance();
}

uint64_t sub_100126D14()
{
  return type metadata accessor for HandoffEnvironment();
}

uint64_t type metadata accessor for HandoffEnvironment()
{
  uint64_t result = qword_100366E98;
  if (!qword_100366E98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100126D68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = sub_1001F5834();
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 ulog:40 message:v7];

  sub_10011A030();
  sub_10007F2A0();
  swift_release();
  sub_1001257A0();
  sub_1000245F8();
  swift_release();
  uint64_t v8 = sub_100125160();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10000A38C((uint64_t *)&unk_100363D00);
  swift_allocObject();
  uint64_t v9 = Future.init(_:)();

  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = (void *)swift_allocObject();
  long long v11[2] = a1;
  void v11[3] = a2;
  v11[4] = v10;
  uint64_t v12 = (void *)swift_allocObject();
  long long v12[2] = 0;
  v12[3] = 0;
  v12[4] = v9;
  void v12[5] = 0;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_10013CE1C;
  *(void *)(v13 + 24) = v11;
  sub_10000B010(&qword_100368130, (uint64_t *)&unk_100363D00);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v14 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(void *)(v3 + 56) = v14;
  swift_release();
  sub_100127090();
  sub_10012596C();
  sub_10024C914();
  swift_release();
  sub_100125340();
  sub_1000D0EC8();
  return swift_release();
}

uint64_t sub_100127024(uint64_t a1, void (*a2)(void))
{
  a2(0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(void *)(result + 56) = 0;
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100127090()
{
  uint64_t v45 = sub_10000A38C(&qword_100368138);
  __chkstk_darwin(v45);
  id v42 = (char *)v34 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = sub_10000A38C(&qword_100368140);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v46 = v1;
  uint64_t v47 = v2;
  __chkstk_darwin(v1);
  NSString v44 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000A38C(&qword_100368148);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  uint64_t v49 = v5;
  __chkstk_darwin(v4);
  id v43 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = (void *)sub_10000A38C(&qword_100368150);
  __chkstk_darwin(v35);
  uint64_t v37 = sub_10000A38C(&qword_100368158);
  id v39 = *(void (***)(char *, void))(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A38C((uint64_t *)&unk_100368160);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  uint64_t v41 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = sub_1001F5834();
  NSString v14 = String._bridgeToObjectiveC()();
  [v13 ulog:40 message:v14];

  uint64_t v15 = sub_100125088()[3];
  swift_retain();
  swift_release();
  uint64_t v16 = *(void *)(v15 + 16);
  swift_retain();
  swift_release();
  uint64_t v52 = *(void *)(v16 + 48);
  sub_10000A38C((uint64_t *)&unk_100365090);
  uint64_t v38 = &protocol conformance descriptor for PassthroughSubject<A, B>;
  sub_10000B010(&qword_100368170, (uint64_t *)&unk_100365090);
  uint64_t v51 = Publisher.eraseToAnyPublisher()();
  sub_10000A38C(&qword_100368178);
  uint64_t v17 = swift_allocObject();
  long long v36 = xmmword_10028D430;
  *(_OWORD *)(v17 + 16) = xmmword_10028D430;
  [*(id *)(v16 + 32) lock];
  swift_beginAccess();
  v34[6] = v16;
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_1000F0808(v18);
  swift_bridgeObjectRelease();
  [*(id *)(v16 + 32) unlock];
  *(void *)(v17 + 32) = v19;
  sub_10000A38C(&qword_100368180);
  sub_10000B010(&qword_100368188, &qword_100368180);
  Publisher.prepend(_:)();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100125088();
  swift_retain();
  swift_release();
  swift_retain();
  uint64_t v51 = sub_100104B88();
  v34[5] = sub_10000A38C((uint64_t *)&unk_10036BFE0);
  v34[4] = sub_10000B010((unint64_t *)&unk_100363D30, (uint64_t *)&unk_10036BFE0);
  uint64_t v20 = Publisher.eraseToAnyPublisher()();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v51 = v20;
  void v34[2] = sub_10000A38C(&qword_10035ACA0);
  v34[3] = &protocol conformance descriptor for Publishers.Concatenate<A, B>;
  sub_10000B010(&qword_100368190, &qword_100368150);
  v34[1] = sub_10000B010(&qword_10035ACB0, &qword_10035ACA0);
  Publishers.CombineLatest.init(_:_:)();
  sub_10000A38C(&qword_100368198);
  uint64_t v35 = &protocol conformance descriptor for Publishers.CombineLatest<A, B>;
  sub_10000B010(&qword_1003681A0, &qword_100368158);
  uint64_t v21 = v37;
  Publisher.map<A>(_:)();
  v39[1](v8, v21);
  id v39 = (void (**)(char *, void))&protocol conformance descriptor for Publishers.Map<A, B>;
  sub_10000B010(&qword_1003681A8, (uint64_t *)&unk_100368160);
  swift_retain();
  uint64_t v22 = v40;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v22);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v23 = sub_100125088()[5];
  swift_retain();
  swift_release();
  uint64_t v24 = *(void *)(v23 + 24);
  swift_retain();
  swift_release();
  uint64_t v51 = *(void *)(v24 + 48);
  sub_10000A38C(&qword_1003681B0);
  sub_10000B010(&qword_1003681B8, &qword_1003681B0);
  uint64_t v50 = Publisher.eraseToAnyPublisher()();
  sub_10000A38C(&qword_1003681C0);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = v36;
  [*(id *)(v24 + 32) lock];
  swift_beginAccess();
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_1000F06FC(v26);
  swift_bridgeObjectRelease();
  [*(id *)(v24 + 32) unlock];
  *(void *)(v25 + 32) = v27;
  sub_10000A38C(&qword_1003681C8);
  sub_10000B010(&qword_1003681D0, &qword_1003681C8);
  Publisher.prepend(_:)();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100125088();
  swift_retain();
  swift_release();
  swift_retain();
  uint64_t v50 = sub_100104B88();
  uint64_t v28 = Publisher.eraseToAnyPublisher()();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v50 = v28;
  sub_10000B010(&qword_1003681D8, &qword_100368138);
  uint64_t v29 = v44;
  Publishers.CombineLatest.init(_:_:)();
  sub_10000B010(&qword_1003681E0, &qword_100368140);
  uint64_t v30 = v43;
  uint64_t v31 = v46;
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v29, v31);
  sub_10000B010(&qword_1003681E8, &qword_100368148);
  swift_retain();
  uint64_t v32 = v48;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v32);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100127B90()
{
  uint64_t v1 = v0;
  id v2 = sub_1001F5834();
  NSString v3 = String._bridgeToObjectiveC()();
  uint64_t v4 = (SEL *)&unk_100356000;
  [v2 ulog:40 message:v3];

  uint64_t v5 = sub_10011A030();
  id v6 = sub_1001F5DFC();
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 ulog:40 message:v7];

  uint64_t v8 = v5[4];
  uint64_t v9 = *(void **)(v8 + 32);
  swift_retain();
  [v9 lock];
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  unint64_t v11 = (unint64_t)sub_1000F06FC(v10);
  swift_bridgeObjectRelease();
  [*(id *)(v8 + 32) unlock];
  uint64_t result = swift_release();
  if ((v11 & 0x8000000000000000) == 0 && (v11 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = *(void *)(v11 + 16);
    if (v13) {
      goto LABEL_4;
    }
LABEL_12:
    swift_release();
LABEL_13:
    swift_release();
    uint64_t v16 = sub_1001257A0();
    id v17 = sub_1001F5ED4();
    NSString v18 = String._bridgeToObjectiveC()();
    [v17 v4[158]:40 v18];

    swift_beginAccess();
    v16[7] = (uint64_t)&_swiftEmptySetSingleton;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_100125160();
    [v19 invalidate];

    uint64_t v20 = sub_10012596C();
    id v21 = sub_1001F5EF8();
    NSString v22 = String._bridgeToObjectiveC()();
    [v21 v4[158] 40 v22];

    sub_10012BA0C();
    swift_beginAccess();
    v20[5] = (uint64_t)&_swiftEmptySetSingleton;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_100125340();
    id v24 = sub_1001F5B3C();
    NSString v25 = String._bridgeToObjectiveC()();
    [v24 v4[158]:40 v25];

    swift_beginAccess();
    void v23[5] = (uint64_t)&_swiftEmptySetSingleton;
    swift_release();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(void *)(v1 + 72) = &_swiftEmptySetSingleton;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_release();
  if (!v13) {
    goto LABEL_12;
  }
LABEL_4:
  if (v13 >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      if ((v11 & 0xC000000000000001) != 0)
      {
        uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v15 = *(void *)(v11 + 8 * v14 + 32);
        swift_retain();
      }
      ++v14;
      [*(id *)(v15 + 16) invalidate];
      swift_beginAccess();
      *(void *)(v15 + 40) = &_swiftEmptyDictionarySingleton;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      *(void *)(v15 + 48) = &_swiftEmptyDictionarySingleton;
      swift_release();
      swift_bridgeObjectRelease();
    }
    while (v13 != v14);
    swift_release();
    uint64_t v4 = (SEL *)&unk_100356000;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100127FE4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_100128118(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100128178(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_100128178(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000A38C((uint64_t *)&unk_1003680C0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = 0xD000000000000012;
  unint64_t v23 = 0x80000001002B1AB0;
  swift_retain();
  uint64_t v8 = sub_1001F7514();
  uint64_t v10 = v9;
  swift_release();
  v11._uint64_t countAndFlagsBits = v8;
  v11._unint64_t object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  id v12 = sub_1001F5834();
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 ulog:40 message:v13];
  swift_bridgeObjectRelease();

  uint64_t v22 = 0x676E696B63617254;
  unint64_t v23 = 0xE900000000000020;
  v14._uint64_t countAndFlagsBits = sub_1001F7514();
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  id v15 = sub_1001F6050();
  swift_bridgeObjectRetain();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 ulog:40 message:v16];
  swift_bridgeObjectRelease();

  *(void *)(a1 + OBJC_IVAR____TtC17proximitycontrold13HandoffDevice_proximityDelegate + 8) = &off_1003253A8;
  swift_unknownObjectWeakAssign();
  uint64_t v17 = a1 + OBJC_IVAR____TtC17proximitycontrold13HandoffDevice_id;
  uint64_t v22 = sub_10003E78C();
  swift_retain();
  sub_10000A38C(&qword_10035E3B0);
  sub_10000A38C((uint64_t *)&unk_1003680D0);
  sub_10000B010(&qword_10035E3B8, &qword_10035E3B0);
  Publisher.map<A>(_:)();
  swift_release();
  swift_release();
  sub_10000A38C(&qword_1003677C0);
  sub_10000B010(&qword_1003680E0, (uint64_t *)&unk_1003680C0);
  sub_10000B010(&qword_1003680E8, &qword_1003677C0);
  uint64_t v18 = Publisher.subscribe<A>(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *(void *)(v2 + 64);
  *(void *)(v2 + 64) = 0x8000000000000000;
  sub_10026492C(v18, v17, isUniquelyReferenced_nonNull_native);
  *(void *)(v2 + 64) = v21;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_10012854C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    uint64_t v3 = sub_1001F7514();
    uint64_t v5 = v4;
    swift_release();
    v6._uint64_t countAndFlagsBits = v3;
    v6._unint64_t object = v5;
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    id v7 = sub_1001F5834();
    swift_bridgeObjectRetain();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v7 ulog:v8 message:0xD000000000000011, 0x80000001002B1B50];
    swift_bridgeObjectRelease();

    sub_1000C6E90(v1);
    uint64_t v9 = v1 + OBJC_IVAR____TtC17proximitycontrold13HandoffDevice_id;
    swift_beginAccess();
    sub_100130200(v9, (void (*)(void))sub_1000580F4);
    swift_endAccess();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001286CC(unint64_t a1, char a2)
{
  uint64_t v25 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  Swift::String v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = 0;
  if ((a2 & 1) == 0) {
    return v7;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (!v8)
  {
LABEL_15:
    uint64_t v7 = sub_100038508((uint64_t)v9);
    swift_bridgeObjectRelease();
    return v7;
  }
  uint64_t v26 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000B54DC(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v11 = 0;
    unint64_t v24 = a1 & 0xC000000000000001;
    id v12 = (void (**)(char *, uint64_t))(v4 + 8);
    unint64_t v13 = a1;
    do
    {
      if (v24) {
        id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v14 = *(id *)(a1 + 8 * v11 + 32);
      }
      id v15 = v14;
      id v16 = [v14 uniqueIdentifier];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v17 = UUID.uuidString.getter();
      uint64_t v19 = v18;
      (*v12)(v6, v25);

      uint64_t v9 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000B54DC(0, v9[2] + 1, 1);
        uint64_t v9 = v26;
      }
      unint64_t v21 = v9[2];
      unint64_t v20 = v9[3];
      if (v21 >= v20 >> 1)
      {
        sub_1000B54DC(v20 > 1, v21 + 1, 1);
        uint64_t v9 = v26;
      }
      ++v11;
      void v9[2] = v21 + 1;
      uint64_t v22 = &v9[2 * v21];
      v22[4] = v17;
      void v22[5] = v19;
      a1 = v13;
    }
    while (v8 != v11);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100128924@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001286CC(*(void *)a1, *(unsigned char *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100128958(uint64_t *a1)
{
  uint64_t v1 = *a1;
  *(void *)(sub_100125830()[2] + 24) = v1;
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_bridgeObjectRelease();
  sub_100104EDC();
  swift_bridgeObjectRetain();
  CurrentValueSubject.send(_:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

unint64_t sub_100128A10(unint64_t a1, char a2)
{
  uint64_t v2 = 0;
  if ((a2 & 1) == 0) {
    return v2;
  }
  unint64_t result = (unint64_t)sub_10010488C(a1);
  unint64_t v4 = result;
  if (!(result >> 62))
  {
    uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_100117C90((unint64_t)_swiftEmptyArrayStorage);
    swift_release();
    uint64_t v2 = sub_100038508((uint64_t)v9);
    swift_bridgeObjectRelease();
    return v2;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  unint64_t result = swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_15;
  }
LABEL_4:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      if ([v7 type] == 4)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
      }
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

unint64_t sub_100128B9C@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_100128A10(*(void *)a1, *(unsigned char *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100128BD0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  *(void *)(sub_100125830()[3] + 24) = v1;
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_bridgeObjectRelease();
  sub_100104EDC();
  swift_bridgeObjectRetain();
  CurrentValueSubject.send(_:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_100128C88()
{
  v41[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(90);
  uint64_t v42 = 0;
  unint64_t v43 = 0xE000000000000000;
  v0._unint64_t object = (void *)0x80000001002BF490;
  v0._uint64_t countAndFlagsBits = 0xD000000000000031;
  String.append(_:)(v0);
  sub_1001252B0();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  v1._uint64_t countAndFlagsBits = 7104878;
  v1._unint64_t object = (void *)0xE300000000000000;
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 10;
  v2._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  sub_1001252B0();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  v3._uint64_t countAndFlagsBits = 0;
  v3._unint64_t object = (void *)0xE000000000000000;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 2570;
  v4._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v4);
  sub_1001252B0();
  v5._uint64_t countAndFlagsBits = sub_100093210();
  String.append(_:)(v5);
  swift_release();
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 2570;
  v6._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v6);
  id v7 = sub_10012540C();
  id v8 = [v7 description];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  v12._uint64_t countAndFlagsBits = v9;
  v12._unint64_t object = v11;
  String.append(_:)(v12);

  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 2570;
  v13._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  sub_100125498();
  v14._uint64_t countAndFlagsBits = sub_10012B6E0();
  String.append(_:)(v14);
  swift_release();
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 2570;
  v15._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v15);
  sub_100125524();
  v16._uint64_t countAndFlagsBits = sub_1001744A8();
  String.append(_:)(v16);
  swift_release();
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = 2570;
  v17._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  v41[0] = sub_1001256FC(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___viewServicePresenter, &qword_100367348, 72, sub_1001351A4);
  sub_10000A38C(&qword_100367348);
  _print_unlocked<A, B>(_:_:)();
  swift_release();
  v18._uint64_t countAndFlagsBits = 2570;
  v18._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v18);
  sub_1001256FC(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___telemetryManager, &qword_100367350, 64, (uint64_t (*)(uint64_t))sub_100138280);
  v19._uint64_t countAndFlagsBits = sub_10001E338();
  String.append(_:)(v19);
  swift_release();
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 2570;
  v20._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  if (qword_10035A5F0 != -1) {
    swift_once();
  }
  id v21 = (id)qword_1003ACA78;
  id v22 = [v21 description:v41[0]];
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  v26._uint64_t countAndFlagsBits = v23;
  v26._unint64_t object = v25;
  String.append(_:)(v26);

  swift_bridgeObjectRelease();
  v27._uint64_t countAndFlagsBits = 2570;
  v27._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v27);
  uint64_t v28 = sub_10011A030();
  v41[3] = type metadata accessor for ActivityProxy();
  v41[0] = v28;
  swift_retain();
  uint64_t v29 = sub_10002838C(v41);
  uint64_t v31 = v30;
  sub_10000CC5C((uint64_t)v41);
  v32._uint64_t countAndFlagsBits = v29;
  v32._unint64_t object = v31;
  String.append(_:)(v32);
  swift_release();
  swift_bridgeObjectRelease();
  v33._uint64_t countAndFlagsBits = 2570;
  v33._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v33);
  id v34 = sub_100125160();
  id v35 = [v34 description:v41[0]];
  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v37;

  v39._uint64_t countAndFlagsBits = v36;
  v39._unint64_t object = v38;
  String.append(_:)(v39);

  swift_bridgeObjectRelease();
  return v42;
}

uint64_t sub_1001292A0()
{
  v0._uint64_t countAndFlagsBits = sub_10016B148();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = 32;
  v1._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  swift_retain();
  UUID.uuidString.getter();
  swift_release();
  sub_100089A9C(8);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 62;
  v3._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return 60;
}

uint64_t sub_1001293D4()
{
  return sub_1001292A0();
}

uint64_t sub_1001293F8()
{
  return sub_100128C88();
}

uint64_t sub_10012941C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_100129450@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_id;
  uint64_t v4 = type metadata accessor for UUID();
  Swift::String v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1001294C8()
{
  uint64_t v0 = sub_10000A38C(&qword_100367848);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v24 = v0;
  uint64_t v25 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000A38C(&qword_100367850);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v22 = v4;
  uint64_t v23 = v5;
  __chkstk_darwin(v4);
  id v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10000A38C(&qword_100367858);
  uint64_t v28 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10000A38C((uint64_t *)&unk_100367860);
  uint64_t v29 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v12 = sub_100125160();
  swift_retain();
  uint64_t v30 = sub_100104C30();
  sub_10000A38C(&qword_100366428);
  sub_10000B010(&qword_100367870, &qword_100366428);
  uint64_t v13 = Publisher.eraseToAnyPublisher()();

  swift_release();
  swift_release();
  uint64_t v30 = v13;
  sub_10000A38C(&qword_100367878);
  sub_10000A38C(&qword_100367880);
  sub_10000B010(&qword_100367888, &qword_100367878);
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000A38C(&qword_100367890);
  sub_10000B010(&qword_100367898, &qword_100367850);
  uint64_t v14 = v22;
  Publisher.map<A>(_:)();
  sub_10000B010(&qword_1003678A0, &qword_100367848);
  uint64_t v15 = v24;
  uint64_t v16 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v15);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v14);
  uint64_t v30 = v16;
  sub_10000A38C(&qword_1003678A8);
  sub_10000B010(&qword_1003678B0, &qword_1003678A8);
  sub_10000B010(&qword_1003678B8, &qword_100367890);
  Publisher<>.switchToLatest()();
  swift_release();
  sub_10000B010(&qword_1003678C0, &qword_100367858);
  uint64_t v17 = v26;
  Publisher.compactMap<A>(_:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v17);
  sub_10000B010(&qword_1003678C8, (uint64_t *)&unk_100367860);
  uint64_t v18 = v27;
  uint64_t v19 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v18);
  return v19;
}

uint64_t sub_100129A20@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)(sub_1001258F0() + 16) + 24);
  swift_retain();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_100129A70()
{
  return sub_10011A0E4();
}

uint64_t sub_100129A94(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v22 = a4;
  uint64_t v23 = a6;
  uint64_t v12 = sub_10000A38C((uint64_t *)&unk_10035E840);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ExperienceEvent(0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v18 = a1;
  *((void *)v18 + 1) = a2;
  v18[16] = a3;
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = &v15[*(int *)(v13 + 56)];
  Swift::String v20 = &v15[*(int *)(v13 + 72)];
  sub_10013C47C((uint64_t)v18, (uint64_t)v15, type metadata accessor for ExperienceEvent);
  *(void *)uint64_t v19 = v22;
  *((void *)v19 + 1) = a5;
  *(void *)Swift::String v20 = v23;
  *((void *)v20 + 1) = a7;
  sub_10000F318(a1, a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  PassthroughSubject.send(_:)();
  sub_10000D78C((uint64_t)v15, (uint64_t *)&unk_10035E840);
  return sub_10013C8D0((uint64_t)v18, type metadata accessor for ExperienceEvent);
}

uint64_t sub_100129C40()
{
  return sub_100129DD8(&qword_1003647F0, (void (*)(uint64_t))type metadata accessor for HandoffDevice);
}

_UNKNOWN **sub_100129C88()
{
  return &off_100321B48;
}

_UNKNOWN **sub_100129C94()
{
  return &off_100321B38;
}

_UNKNOWN **sub_100129CA0()
{
  return &off_100321B28;
}

_UNKNOWN **sub_100129CAC()
{
  return &off_100321B10;
}

_UNKNOWN **sub_100129CB8()
{
  return &off_100321B00;
}

_UNKNOWN **sub_100129CC4()
{
  return &off_100321AD8;
}

_UNKNOWN **sub_100129CD0()
{
  return &off_100321A48;
}

_UNKNOWN **sub_100129CDC()
{
  return &off_1003219C0;
}

_UNKNOWN **sub_100129CE8()
{
  return &off_1003219A8;
}

_UNKNOWN **sub_100129CF4()
{
  return &off_100321998;
}

_UNKNOWN **sub_100129D00()
{
  return &off_100321980;
}

_UNKNOWN **sub_100129D0C()
{
  return &off_100321970;
}

_UNKNOWN **sub_100129D18()
{
  return &off_100321958;
}

_UNKNOWN **sub_100129D24()
{
  return &off_100321948;
}

_UNKNOWN **sub_100129D30()
{
  return &off_100321920;
}

_UNKNOWN **sub_100129D3C()
{
  return &off_100321908;
}

_UNKNOWN **sub_100129D48()
{
  return &off_1003218A0;
}

_UNKNOWN **sub_100129D54()
{
  return &off_100321890;
}

_UNKNOWN **sub_100129D60()
{
  return &off_10035F168;
}

_UNKNOWN **sub_100129D6C()
{
  return &off_100322A08;
}

_UNKNOWN **sub_100129D78()
{
  return &off_100322C68;
}

_UNKNOWN **sub_100129D84()
{
  return &off_100322C58;
}

uint64_t sub_100129D90()
{
  return sub_100129DD8((unint64_t *)&qword_10035CFF0, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_100129DD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_100129E20()
{
  return &off_100321A70;
}

_UNKNOWN **sub_100129E2C()
{
  return &off_100321AE8;
}

_UNKNOWN **sub_100129E38()
{
  return &off_10035F1E0;
}

_UNKNOWN **sub_100129E44()
{
  return &off_100321AC0;
}

_UNKNOWN **sub_100129E50()
{
  return &off_100321A10;
}

_UNKNOWN **sub_100129E5C()
{
  return &off_100321920;
}

_UNKNOWN **sub_100129E68()
{
  return &off_100321908;
}

_UNKNOWN **sub_100129E74()
{
  return &off_100321890;
}

_UNKNOWN **sub_100129E80()
{
  return &off_100321880;
}

_UNKNOWN **sub_100129E8C()
{
  return &off_100321A80;
}

_UNKNOWN **sub_100129E98()
{
  return &off_1003218F8;
}

_UNKNOWN **sub_100129EA4()
{
  return &off_10035F1E0;
}

_UNKNOWN **sub_100129EB0()
{
  return &off_100321AC0;
}

_UNKNOWN **sub_100129EBC()
{
  return &off_10035F1C0;
}

_UNKNOWN **sub_100129EC8()
{
  return &off_100321AB0;
}

_UNKNOWN **sub_100129ED4()
{
  return &off_100321AA0;
}

_UNKNOWN **sub_100129EE0()
{
  return &off_10035F1A8;
}

_UNKNOWN **sub_100129EEC()
{
  return &off_1003218B0;
}

uint64_t sub_100129EF8(uint64_t a1)
{
  uint64_t result = sub_100129DD8(&qword_100367340, (void (*)(uint64_t))type metadata accessor for HandoffEnvironment);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100129F50(uint64_t a1)
{
  uint64_t result = sub_100129DD8(&qword_100367340, (void (*)(uint64_t))type metadata accessor for HandoffEnvironment);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100129FA8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (*a1) {
    uint64_t result = sub_10019C478();
  }
  else {
    uint64_t result = 0;
  }
  *a2 = result;
  return result;
}

uint64_t sub_100129FE0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)a2 = *(void *)result;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t *sub_100129FF4(uint64_t a1)
{
  char v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_10000A38C(&qword_1003673D0);
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  __chkstk_darwin(v5);
  id v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A38C(&qword_100367D58);
  uint64_t v26 = *(void *)(v8 - 8);
  uint64_t v27 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000A38C(&qword_100367D60);
  uint64_t v28 = *(void *)(v11 - 8);
  uint64_t v29 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[3] = 3;
  if (qword_10035A520 != -1) {
    swift_once();
  }
  id v14 = *(id *)(qword_1003AC750 + 1400);
  double v15 = sub_1000FEB94();

  *((double *)v2 + 4) = v15;
  v2[5] = 0;
  v2[6] = 0;
  v2[7] = (uint64_t)&_swiftEmptySetSingleton;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, v4, (uint64_t)&off_1003296A0);
  v2[2] = a1;
  swift_unownedRetain();
  uint64_t v16 = *(void *)(a1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_hapticPlayer)
      + OBJC_IVAR____TtC17proximitycontrold12HapticPlayer_frequency;
  *(double *)uint64_t v16 = v15;
  *(unsigned char *)(v16 + 8) = 0;
  uint64_t v30 = sub_100117AF4();
  swift_allocObject();
  swift_weakInit();
  sub_10000A38C(&qword_10035AC80);
  sub_10000B010(&qword_10035AC88, &qword_10035AC80);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v30 = sub_100117AF4();
  type metadata accessor for HandoffSession();
  Publisher.compactMap<A>(_:)();
  swift_release();
  sub_10000A38C(&qword_100367D68);
  uint64_t v17 = v25;
  Publishers.CompactMap.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v17);
  sub_10000B010(&qword_100367D70, &qword_100367D58);
  sub_10000B010(&qword_100367D78, &qword_100367D68);
  uint64_t v18 = v27;
  Publisher<>.switchToLatest()();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v18);
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_10013C528;
  *(void *)(v20 + 24) = v19;
  sub_10000B010(&qword_100367D80, &qword_100367D60);
  uint64_t v21 = v29;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v21);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_10012A5A8(uint64_t a1)
{
  uint64_t v2 = v1;
  if (a1)
  {
    swift_retain();
    UUID.uuidString.getter();
    sub_100089A9C(8);
    swift_bridgeObjectRelease();
    v4._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
    String.append(_:)(v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5._uint64_t countAndFlagsBits = 32;
    v5._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v5);
    swift_retain();
    uint64_t v6 = sub_1001F7514();
    uint64_t v8 = v7;
    swift_release();
    v9._uint64_t countAndFlagsBits = v6;
    v9._unint64_t object = v8;
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    v10._uint64_t countAndFlagsBits = 62;
    v10._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    swift_release();
    uint64_t v11 = 60;
    unint64_t v12 = 0xE100000000000000;
  }
  else
  {
    unint64_t v12 = 0xE300000000000000;
    uint64_t v11 = 7104878;
  }
  unint64_t v13 = v12;
  String.append(_:)(*(Swift::String *)&v11);
  swift_bridgeObjectRelease();
  id v14 = sub_1001F609C();
  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 ulog:40 message:v15];
  swift_bridgeObjectRelease();

  uint64_t result = sub_10012B488();
  if (a1)
  {
    uint64_t v17 = *(void *)(v2 + 16);
    swift_unownedRetainStrong();
    uint64_t v18 = *(void *)(v17 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_hapticPlayer);
    swift_retain();
    swift_unknownObjectRetain();
    swift_release();
    *(unsigned char *)(v18 + OBJC_IVAR____TtC17proximitycontrold12HapticPlayer_activeDeviceClass) = sub_10003E0FC();
    swift_unknownObjectRelease();
    sub_10012B550();
    return swift_release();
  }
  return result;
}

void sub_10012A804(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  int v3 = a1;
  uint64_t v84 = *v1;
  uint64_t v4 = sub_10000A38C(&qword_100367D88);
  uint64_t v82 = *(void *)(v4 - 8);
  uint64_t v83 = v4;
  __chkstk_darwin(v4);
  uint64_t v81 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A38C(&qword_10035AC20);
  __chkstk_darwin(v6 - 8);
  Swift::String v76 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v77 = *(void *)(v8 - 8);
  uint64_t v78 = v8;
  __chkstk_darwin(v8);
  Swift::String v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_10000A38C(&qword_100367D90);
  uint64_t v80 = *(void *)(v86 - 8);
  uint64_t v11 = *(void *)(v80 + 64);
  uint64_t v12 = __chkstk_darwin(v86);
  uint64_t v79 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v85 = (char *)&v75 - v13;
  unint64_t aBlock = 0;
  unint64_t v89 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  unint64_t aBlock = 0xD000000000000017;
  unint64_t v89 = 0x80000001002BF640;
  switch(v3)
  {
    case 2:
      unint64_t object = (void *)0xEB000000006B6369;
      uint64_t countAndFlagsBits = 0x6C43656C62756F64;
      break;
    case 3:
      unint64_t object = (void *)0xE400000000000000;
      uint64_t countAndFlagsBits = 2036427888;
      break;
    case 4:
      unint64_t object = (void *)0xE400000000000000;
      uint64_t countAndFlagsBits = 1886352499;
      break;
    default:
      v94._uint64_t countAndFlagsBits = 0x2D6B63696C63;
      v94._unint64_t object = (void *)0xE600000000000000;
      char v87 = v3 & 1;
      v16._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v16);
      swift_bridgeObjectRelease();
      uint64_t countAndFlagsBits = v94._countAndFlagsBits;
      unint64_t object = v94._object;
      break;
  }
  uint64_t v17 = object;
  String.append(_:)(*(Swift::String *)&countAndFlagsBits);
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = 0x6F6973736573202CLL;
  v18._unint64_t object = (void *)0xEA00000000003D6ELL;
  String.append(_:)(v18);
  v94._uint64_t countAndFlagsBits = 60;
  v94._unint64_t object = (void *)0xE100000000000000;
  swift_retain();
  UUID.uuidString.getter();
  swift_release();
  sub_100089A9C(8);
  swift_bridgeObjectRelease();
  v19._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 32;
  v20._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  swift_retain();
  uint64_t v21 = sub_1001F7514();
  uint64_t v23 = v22;
  swift_release();
  v24._uint64_t countAndFlagsBits = v21;
  v24._unint64_t object = v23;
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  v25._uint64_t countAndFlagsBits = 62;
  v25._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v25);
  String.append(_:)(v94);
  swift_bridgeObjectRelease();
  id v26 = sub_1001F609C();
  swift_bridgeObjectRetain();
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v26 ulog:40 message:v27];
  swift_bridgeObjectRelease();

  switch(v3)
  {
    case 2:
      sub_10012B488();
      uint64_t v28 = v2[2];
      swift_unownedRetainStrong();
      sub_1000291F4(v28 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_notificationGenerator, (uint64_t)&aBlock);
      swift_release();
      uint64_t v29 = v91;
      uint64_t v30 = v92;
      sub_10000D6E4(&aBlock, (uint64_t)v91);
      (*((void (**)(void, void *, uint64_t (*)(uint64_t)))v30 + 1))(0, v29, v30);
LABEL_26:
      sub_10000CC5C((uint64_t)&aBlock);
      return;
    case 3:
      if (qword_10035A520 != -1) {
        swift_once();
      }
      id v31 = *(id *)(qword_1003AC750 + 968);
      char v32 = sub_1000FD938();

      if (v32)
      {
        unint64_t aBlock = sub_100062474();
        swift_allocObject();
        swift_weakInit();
        uint64_t v33 = sub_10000A38C(&qword_100367C88);
        uint64_t v34 = sub_10000B010(&qword_100367C98, &qword_100367C88);
        uint64_t v35 = Publisher<>.sink(receiveValue:)();
        swift_release();
        swift_release();
        v2[5] = v35;
        swift_release();
        unint64_t aBlock = sub_100062474();
        static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
        if (qword_10035A628 != -1) {
          swift_once();
        }
        uint64_t v36 = (void *)qword_1003ACB50;
        v94._uint64_t countAndFlagsBits = qword_1003ACB50;
        uint64_t v37 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
        uint64_t v38 = (uint64_t)v76;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v76, 1, 1, v37);
        sub_100019E10(0, (unint64_t *)&qword_10035A680);
        sub_10003A8C0();
        id v39 = v36;
        uint64_t v40 = v85;
        uint64_t v41 = v34;
        Publisher.debounce<A>(for:scheduler:options:)();
        sub_10000D78C(v38, &qword_10035AC20);

        (*(void (**)(char *, uint64_t))(v77 + 8))(v10, v78);
        swift_release();
        Swift::String v76 = (char *)sub_1001F609C();
        uint64_t v42 = v79;
        uint64_t v43 = v80;
        NSString v44 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
        uint64_t v78 = v41;
        v44(v79, v40, v86);
        unint64_t v45 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
        unint64_t v46 = (v11 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v47 = (v46 + 23) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v48 = (v47 + 23) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v77 = v33;
        uint64_t v49 = swift_allocObject();
        *(void *)(v49 + 16) = sub_10013D138;
        *(void *)(v49 + 24) = 0;
        uint64_t v50 = v42;
        uint64_t v51 = v86;
        (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v49 + v45, v50, v86);
        uint64_t v52 = (void *)(v49 + v46);
        *uint64_t v52 = 0;
        v52[1] = 0xE000000000000000;
        long long v53 = (void *)(v49 + v47);
        *long long v53 = 0;
        v53[1] = 0xE000000000000000;
        double v54 = v76;
        *(void *)(v49 + v48) = v76;
        *(_DWORD *)(v49 + ((v48 + 11) & 0xFFFFFFFFFFFFFFF8)) = 40;
        sub_10000B010(&qword_100367D98, &qword_100367D90);
        id v55 = v54;
        double v56 = v81;
        uint64_t v57 = v51;
        double v58 = v85;
        Publisher.map<A>(_:)();
        swift_release();
        sub_10000B010(&qword_100367DA0, &qword_100367D88);
        uint64_t v59 = v83;
        uint64_t v60 = Publisher.eraseToAnyPublisher()();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v56, v59);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v58, v57);
        unint64_t aBlock = v60;
        swift_allocObject();
        swift_weakInit();
        uint64_t v61 = Publisher<>.sink(receiveValue:)();
        swift_release();
        swift_release();
        v2[6] = v61;
        swift_release();
        uint64_t v62 = v2[2];
        swift_unownedRetainStrong();
        CATransform3D v63 = *(void **)(v62 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_hapticPlayer);
        swift_unknownObjectRetain();
        swift_release();
        id v64 = sub_10016B098(v84, (uint64_t)&off_1003296A0);
        double v65 = (void *)swift_allocObject();
        v65[2] = 0xD000000000000015;
        v65[3] = 0x80000001002BF990;
        v65[4] = v64;
        id v92 = sub_10004D170;
        NSString v93 = v65;
        unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
        unint64_t v89 = 1107296256;
        uint64_t v90 = sub_100119FC4;
        id v91 = &unk_100329158;
        double v66 = _Block_copy(&aBlock);
        swift_release();
        [v63 activateWithCompletion:v66];
        _Block_release(v66);
        swift_unknownObjectRelease();
      }
      break;
    case 4:
      sub_10012B488();
      return;
    default:
      sub_10012B488();
      if (qword_10035A520 != -1) {
        swift_once();
      }
      id v67 = *(id *)(qword_1003AC750 + 960);
      char v68 = sub_1000FD938();

      if (v68)
      {
        uint64_t v69 = v2[2];
        swift_unownedRetainStrong();
        if (v3)
        {
          sub_1000291F4(v69 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_impactGeneratorHard, (uint64_t)&aBlock);
          swift_release();
          uint64_t v70 = v91;
          char v71 = v92;
          sub_10000D6E4(&aBlock, (uint64_t)v91);
          uint64_t v72 = *(void **)(qword_1003AC750 + 1016);
        }
        else
        {
          sub_1000291F4(v69 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_impactGeneratorSoft, (uint64_t)&aBlock);
          swift_release();
          uint64_t v70 = v91;
          char v71 = v92;
          sub_10000D6E4(&aBlock, (uint64_t)v91);
          uint64_t v72 = *(void **)(qword_1003AC750 + 1000);
        }
        id v73 = v72;
        double v74 = sub_1000FEBDC();

        (*((void (**)(void *, uint64_t (*)(uint64_t), double))v71 + 1))(v70, v71, v74);
        goto LABEL_26;
      }
      break;
  }
}

uint64_t sub_10012B3E8(float a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(result + 16);
    swift_unownedRetainStrong();
    swift_release();
    uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_hapticPlayer);
    swift_unknownObjectRetain();
    swift_release();
    *(float *)(v4 + OBJC_IVAR____TtC17proximitycontrold12HapticPlayer_progress) = a1;
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10012B488()
{
  id v1 = sub_1001F609C();
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 ulog:40 message:v2];

  uint64_t v3 = v0[2];
  swift_unownedRetainStrong();
  uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_hapticPlayer);
  swift_unknownObjectRetain();
  swift_release();
  [v4 invalidate];
  swift_unknownObjectRelease();
  v0[5] = 0;
  swift_release();
  v0[6] = 0;

  return swift_release();
}

uint64_t sub_10012B550()
{
  uint64_t v1 = v0;
  id v2 = sub_1001F609C();
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 ulog:40 message:v3];

  uint64_t v4 = *(void *)(v1 + 16);
  swift_unownedRetainStrong();
  sub_1000291F4(v4 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_impactGeneratorSoft, (uint64_t)v14);
  swift_release();
  uint64_t v5 = v15;
  uint64_t v6 = v16;
  sub_10000D6E4(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  sub_10000CC5C((uint64_t)v14);
  uint64_t v7 = *(void *)(v1 + 16);
  swift_unownedRetainStrong();
  sub_1000291F4(v7 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_impactGeneratorHard, (uint64_t)v14);
  swift_release();
  uint64_t v8 = v15;
  uint64_t v9 = v16;
  sub_10000D6E4(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  sub_10000CC5C((uint64_t)v14);
  uint64_t v10 = *(void *)(v1 + 16);
  swift_unownedRetainStrong();
  sub_1000291F4(v10 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_notificationGenerator, (uint64_t)v14);
  swift_release();
  uint64_t v11 = v15;
  uint64_t v12 = v16;
  sub_10000D6E4(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  return sub_10000CC5C((uint64_t)v14);
}

uint64_t sub_10012B6E0()
{
  sub_10000A38C((uint64_t *)&unk_10035E7E0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10028D430;
  *(void *)(v1 + 32) = 0xD000000000000015;
  *(void *)(v1 + 40) = 0x80000001002BF970;
  strcpy((char *)v31, "hapticPlayer=");
  HIWORD(v31[1]) = -4864;
  swift_unownedRetainStrong();
  swift_unknownObjectRetain();
  swift_release();
  swift_getObjectType();
  uint64_t v2 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v4 = v3;
  swift_unknownObjectRelease();
  v5._uint64_t countAndFlagsBits = v2;
  v5._unint64_t object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = v31[0];
  uint64_t v7 = v31[1];
  unint64_t v9 = *(void *)(v1 + 16);
  unint64_t v8 = *(void *)(v1 + 24);
  if (v9 >= v8 >> 1) {
    uint64_t v1 = (uint64_t)sub_10008892C((char *)(v8 > 1), v9 + 1, 1, (char *)v1);
  }
  uint64_t v10 = 7104878;
  *(void *)(v1 + 16) = v9 + 1;
  uint64_t v11 = v1 + 16 * v9;
  *(void *)(v11 + 32) = v6;
  *(void *)(v11 + 40) = v7;
  strcpy((char *)v31, "playTask=");
  WORD1(v31[1]) = 0;
  HIDWORD(v31[1]) = -385875968;
  if (*(void *)(v0 + 40))
  {
    type metadata accessor for AnyCancellable();
    swift_retain();
    uint64_t v12 = String.init<A>(describing:)();
    unint64_t v14 = v13;
  }
  else
  {
    unint64_t v14 = 0xE300000000000000;
    uint64_t v12 = 7104878;
  }
  unint64_t v15 = v14;
  String.append(_:)(*(Swift::String *)&v12);
  swift_bridgeObjectRelease();
  uint64_t v16 = v31[0];
  uint64_t v17 = v31[1];
  unint64_t v19 = *(void *)(v1 + 16);
  unint64_t v18 = *(void *)(v1 + 24);
  if (v19 >= v18 >> 1) {
    uint64_t v1 = (uint64_t)sub_10008892C((char *)(v18 > 1), v19 + 1, 1, (char *)v1);
  }
  *(void *)(v1 + 16) = v19 + 1;
  uint64_t v20 = v1 + 16 * v19;
  *(void *)(v20 + 32) = v16;
  *(void *)(v20 + 40) = v17;
  strcpy((char *)v31, "timeoutTask=");
  BYTE5(v31[1]) = 0;
  HIWORD(v31[1]) = -5120;
  if (*(void *)(v0 + 48))
  {
    type metadata accessor for AnyCancellable();
    swift_retain();
    uint64_t v10 = String.init<A>(describing:)();
    uint64_t v22 = v21;
  }
  else
  {
    uint64_t v22 = (void *)0xE300000000000000;
  }
  v23._uint64_t countAndFlagsBits = v10;
  v23._unint64_t object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  uint64_t v24 = v31[0];
  uint64_t v25 = v31[1];
  unint64_t v27 = *(void *)(v1 + 16);
  unint64_t v26 = *(void *)(v1 + 24);
  if (v27 >= v26 >> 1) {
    uint64_t v1 = (uint64_t)sub_10008892C((char *)(v26 > 1), v27 + 1, 1, (char *)v1);
  }
  *(void *)(v1 + 16) = v27 + 1;
  uint64_t v28 = v1 + 16 * v27;
  *(void *)(v28 + 32) = v24;
  *(void *)(v28 + 40) = v25;
  sub_10000A38C((uint64_t *)&unk_100367D40);
  sub_10000B010((unint64_t *)&qword_10035E7F0, (uint64_t *)&unk_100367D40);
  uint64_t v29 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v29;
}

id sub_10012BA0C()
{
  sub_10000A38C(&qword_100366B88);
  sub_10000A38C((uint64_t *)&unk_100368120);
  String.init<A>(describing:)();
  id v1 = objc_allocWithZone((Class)CULogHandle);
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v1 initWithSubsystem:v2 category:v3];

  NSString v5 = String._bridgeToObjectiveC()();
  [v4 ulog:40 message:v5];

  return [*(id *)(v0 + qword_100368650) invalidate];
}

uint64_t sub_10012BB2C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v60 = *(void *)(v3 - 8);
  uint64_t v61 = v3;
  __chkstk_darwin(v3);
  uint64_t v59 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v58 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000A38C(&qword_10035E158);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UserDefaultsRepresentation();
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v18 = *(void **)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x70));
  if (v18)
  {
    sub_10000D728(a1, (uint64_t)v14, &qword_10035E158);
    int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8);
    id v62 = v18;
    if (v19 == 1)
    {
      swift_storeEnumTagMultiPayload();
      id v20 = v18;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
      (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(v17, v11, v8);
      swift_storeEnumTagMultiPayload();
      uint64_t v21 = v18;
      uint64_t v22 = a1;
      Swift::String v23 = *(void (**)(char *, uint64_t))(v9 + 8);
      id v24 = v21;
      v23(v11, v8);
      a1 = v22;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v28 = *v17;
        unint64_t v29 = v17[1];
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        NSString v31 = String._bridgeToObjectiveC()();
        id v32 = v62;
        [v62 setObject:isa forKey:v31];

        sub_10000DBEC(v28, v29);
        return sub_10000D78C(a1, &qword_10035E158);
      case 2u:
        (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 32))(v11, v17, v8);
        Class v33 = Date._bridgeToObjectiveC()().super.isa;
        NSString v34 = String._bridgeToObjectiveC()();
        id v35 = v62;
        [v62 setObject:v33 forKey:v34];

        sub_10000D78C(a1, &qword_10035E158);
        return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      case 3u:
        double v37 = *(double *)v17;
        NSString v38 = String._bridgeToObjectiveC()();
        NSString v26 = v62;
        [v62 setDouble:v38 forKey:v37];
        goto LABEL_17;
      case 4u:
        uint64_t v39 = *v17;
        NSString v40 = String._bridgeToObjectiveC()();
        id v41 = v62;
        [v62 setInteger:v39 forKey:v40];
        goto LABEL_13;
      case 5u:
        NSString v42 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v43 = String._bridgeToObjectiveC()();
        id v44 = v62;
        [v62 setObject:v42 forKey:v43];

        return sub_10000D78C(a1, &qword_10035E158);
      case 6u:
        Class v45 = UInt32._bridgeToObjectiveC()().super.super.isa;
        NSString v40 = String._bridgeToObjectiveC()();
        id v41 = v62;
        [v62 setObject:v45 forKey:v40];

LABEL_13:
        return sub_10000D78C(a1, &qword_10035E158);
      case 7u:
        uint64_t v47 = v57;
        uint64_t v46 = v58;
        (*(void (**)(char *, uint64_t *, uint64_t))(v57 + 32))(v7, v17, v58);
        URL.absoluteString.getter();
        NSString v48 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v49 = String._bridgeToObjectiveC()();
        id v50 = v62;
        [v62 setObject:v48 forKey:v49];

        sub_10000D78C(a1, &qword_10035E158);
        return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v7, v46);
      case 8u:
        uint64_t v52 = v59;
        uint64_t v51 = v60;
        uint64_t v53 = v61;
        (*(void (**)(char *, uint64_t *, uint64_t))(v60 + 32))(v59, v17, v61);
        UUID.uuidString.getter();
        NSString v54 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v55 = String._bridgeToObjectiveC()();
        id v56 = v62;
        [v62 setObject:v54 forKey:v55];

        sub_10000D78C(a1, &qword_10035E158);
        return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v52, v53);
      case 9u:
        NSString v38 = String._bridgeToObjectiveC()();
        NSString v26 = v62;
        [v62 removeObjectForKey:v38];
LABEL_17:

        goto LABEL_18;
      default:
        uint64_t v25 = *(unsigned __int8 *)v17;
        NSString v26 = String._bridgeToObjectiveC()();
        id v27 = v62;
        [v62 setBool:v25 forKey:v26];

LABEL_18:
        break;
    }
  }
  return sub_10000D78C(a1, &qword_10035E158);
}

void sub_10012C3EC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  __chkstk_darwin(v3);
  NSString v55 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  __chkstk_darwin(v5);
  uint64_t v52 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UserDefaultsRepresentation();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v15 = (uint64_t *)((char *)&v49 - v14);
  uint64_t v16 = *(void **)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x70));
  if (v16)
  {
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    id v58 = v16;
    JSONEncoder.init()();
    uint64_t v59 = a1;
    sub_10000A38C(&qword_100366260);
    sub_10013CD28();
    uint64_t v17 = dispatch thunk of JSONEncoder.encode<A>(_:)();
    uint64_t v19 = v18;
    swift_release();
    *uint64_t v13 = v17;
    v13[1] = v19;
    swift_storeEnumTagMultiPayload();
    sub_10013CEA4((uint64_t)v13, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for UserDefaultsRepresentation);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v25 = *v15;
        unint64_t v24 = v15[1];
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        NSString v27 = String._bridgeToObjectiveC()();
        id v28 = v58;
        [v58 setObject:isa forKey:v27];

        sub_10000DBEC(v25, v24);
        swift_bridgeObjectRelease();

        return;
      case 2:
        uint64_t v30 = v50;
        uint64_t v29 = v51;
        (*(void (**)(char *, uint64_t *, uint64_t))(v50 + 32))(v9, v15, v51);
        Class v31 = Date._bridgeToObjectiveC()().super.isa;
        NSString v32 = String._bridgeToObjectiveC()();
        id v33 = v58;
        [v58 setObject:v31 forKey:v32];
        swift_bridgeObjectRelease();

        (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v29);
        return;
      case 3:
        double v34 = *(double *)v15;
        NSString v35 = String._bridgeToObjectiveC()();
        NSString v22 = v58;
        [v58 setDouble:v35 forKey:v34];
        goto LABEL_19;
      case 4:
        uint64_t v36 = *v15;
        NSString v37 = String._bridgeToObjectiveC()();
        id v38 = v58;
        [v58 setInteger:v36 forKey:v37];
        swift_bridgeObjectRelease();
        goto LABEL_14;
      case 5:
        NSString v39 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v40 = String._bridgeToObjectiveC()();
        id v41 = v58;
        [v58 setObject:v39 forKey:v40];
        swift_bridgeObjectRelease();

        return;
      case 6:
        Class v42 = UInt32._bridgeToObjectiveC()().super.super.isa;
        NSString v37 = String._bridgeToObjectiveC()();
        id v38 = v58;
        [v58 setObject:v42 forKey:v37];
        swift_bridgeObjectRelease();

LABEL_14:
        return;
      case 7:
        id v44 = v52;
        uint64_t v43 = v53;
        uint64_t v45 = v54;
        (*(void (**)(char *, uint64_t *, uint64_t))(v53 + 32))(v52, v15, v54);
        URL.absoluteString.getter();
        goto LABEL_17;
      case 8:
        id v44 = v55;
        uint64_t v43 = v56;
        uint64_t v45 = v57;
        (*(void (**)(char *, uint64_t *, uint64_t))(v56 + 32))(v55, v15, v57);
        UUID.uuidString.getter();
LABEL_17:
        NSString v46 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v47 = String._bridgeToObjectiveC()();
        id v48 = v58;
        [v58 setObject:v46 forKey:v47];
        swift_bridgeObjectRelease();

        (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
        return;
      case 9:
        NSString v35 = String._bridgeToObjectiveC()();
        NSString v22 = v58;
        [v58 removeObjectForKey:v35];
LABEL_19:
        swift_bridgeObjectRelease();

        goto LABEL_20;
      default:
        uint64_t v21 = *(unsigned __int8 *)v15;
        NSString v22 = String._bridgeToObjectiveC()();
        id v23 = v58;
        [v58 setBool:v21 forKey:v22];
        swift_bridgeObjectRelease();

LABEL_20:
        break;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void sub_10012CC20(uint64_t a1)
{
  NSString v2 = v1;
  if (a1)
  {
    swift_retain();
    UUID.uuidString.getter();
    sub_100089A9C(8);
    swift_bridgeObjectRelease();
    v3._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
    String.append(_:)(v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4._uint64_t countAndFlagsBits = 32;
    v4._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v4);
    swift_retain();
    uint64_t v5 = sub_1001F7514();
    uint64_t v7 = v6;
    swift_release();
    v8._uint64_t countAndFlagsBits = v5;
    v8._unint64_t object = v7;
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    v9._uint64_t countAndFlagsBits = 62;
    v9._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    swift_release();
    uint64_t v10 = 60;
    unint64_t v11 = 0xE100000000000000;
  }
  else
  {
    unint64_t v11 = 0xE300000000000000;
    uint64_t v10 = 7104878;
  }
  unint64_t v12 = v11;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease();
  id v13 = sub_1001F60B0();
  swift_bridgeObjectRetain();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 ulog:40 message:v14];
  swift_bridgeObjectRelease();

  if (*(void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x88))
    || *(void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x90)))
  {
    sub_10012CE98(0x206E6F6973736553, (void *)0xEF6465676E616863, 0);
  }
}

void sub_10012CE98(uint64_t a1, void *a2, char a3)
{
  Swift::String v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (void *)((char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  id v45 = (id)0xD00000000000001FLL;
  unint64_t v46 = 0x80000001002BFBB0;
  v12._uint64_t countAndFlagsBits = a1;
  v12._unint64_t object = a2;
  String.append(_:)(v12);
  v13._uint64_t countAndFlagsBits = 0x3D6563726F66202CLL;
  v13._unint64_t object = (void *)0xE800000000000000;
  String.append(_:)(v13);
  if (a3) {
    uint64_t v14 = 1702195828;
  }
  else {
    uint64_t v14 = 0x65736C6166;
  }
  if (a3) {
    unint64_t v15 = 0xE400000000000000;
  }
  else {
    unint64_t v15 = 0xE500000000000000;
  }
  unint64_t v16 = v15;
  String.append(_:)(*(Swift::String *)&v14);
  swift_bridgeObjectRelease();
  id v17 = sub_1001F60B0();
  swift_bridgeObjectRetain();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v17 ulog:40 message:v18];
  swift_bridgeObjectRelease();

  sub_100019E10(0, (unint64_t *)&qword_10035A680);
  *unint64_t v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  LOBYTE(v18) = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if ((v18 & 1) == 0) {
    __break(1u);
  }
  v44[0] = a1;
  uint64_t v19 = *(void *)((swift_isaMask & *v4) + 0x88);
  id v20 = *(void **)((char *)v4 + v19);
  if (v20)
  {
    id v21 = *(id *)((char *)v4 + v19);
  }
  else
  {
    NSString v22 = *(void **)((char *)v4 + *(void *)((swift_isaMask & *v4) + 0x90));
    if (!v22)
    {
LABEL_15:
      id v26 = sub_1001F60B0();
      NSString v27 = String._bridgeToObjectiveC()();
      [v26 ulog:40 message:v27];

      return;
    }
    id v21 = v22;
    id v20 = 0;
  }
  id v23 = v20;
  id v24 = [v21 requestIdentifier:v44[0]];
  swift_unknownObjectRelease();
  if (!v24) {
    goto LABEL_15;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v25 = *(void *)((swift_isaMask & *v4) + 0x80);
  if (*(void *)((char *)v4 + v25))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v45) = 0;
    swift_retain();
    static Published.subscript.setter();
  }
  *(void *)((char *)v4 + v25) = 0;
  swift_release();
  id v28 = *(void **)((char *)v4 + v19);
  *(void *)((char *)v4 + v19) = 0;

  uint64_t v29 = *(void *)((swift_isaMask & *v4) + 0x90);
  uint64_t v30 = *(void **)((char *)v4 + v29);
  *(void *)((char *)v4 + v29) = 0;

  id v31 = sub_1001F60B0();
  NSString v32 = String._bridgeToObjectiveC()();
  [v31 ulog:40 message:v32];

  id v33 = *(void **)((char *)v4 + *(void *)((swift_isaMask & *v4) + 0x70));
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v35 = String._bridgeToObjectiveC()();
  sub_1002687C0((uint64_t)_swiftEmptyArrayStorage);
  sub_10000A38C(&qword_100367E50);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v45 = 0;
  id v37 = [v33 revokePresentableWithRequestIdentifier:v34 reason:v35 animated:1 userInfo:isa error:&v45];

  if (v37)
  {
    id v38 = v45;
  }
  else
  {
    id v39 = v45;
    uint64_t v40 = _convertNSErrorToError(_:)();

    swift_willThrow();
    id v45 = 0;
    unint64_t v46 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v41._uint64_t countAndFlagsBits = 0xD000000000000020;
    v41._unint64_t object = (void *)0x80000001002BFC10;
    String.append(_:)(v41);
    v44[1] = v40;
    sub_10000A38C((uint64_t *)&unk_100365D60);
    _print_unlocked<A, B>(_:_:)();
    id v42 = sub_1001F60B0();
    swift_bridgeObjectRetain();
    NSString v43 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v42 ulog:40 message:v43];

    swift_errorRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_10012D4B8(char a1, uint64_t a2)
{
  Swift::String v3 = v2;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v6 = 0x7373696D736964;
    }
    else {
      uint64_t v6 = 7368560;
    }
    if (a1 == 1) {
      unint64_t v7 = 0xE700000000000000;
    }
    else {
      unint64_t v7 = 0xE300000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE700000000000000;
    uint64_t v6 = 0x746E6573657270;
  }
  unint64_t v8 = v7;
  String.append(_:)(*(Swift::String *)&v6);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0x6F6973736573202CLL;
  v9._unint64_t object = (void *)0xEA00000000003D6ELL;
  String.append(_:)(v9);
  swift_retain();
  UUID.uuidString.getter();
  swift_release();
  sub_100089A9C(8);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 32;
  v11._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  swift_retain();
  uint64_t v12 = sub_1001F7514();
  uint64_t v14 = v13;
  swift_release();
  v15._uint64_t countAndFlagsBits = v12;
  v15._unint64_t object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 62;
  v16._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  v17._uint64_t countAndFlagsBits = 60;
  v17._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  id v18 = sub_1001F60B0();
  swift_bridgeObjectRetain();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v18 ulog:40 message:v19];
  swift_bridgeObjectRelease();

  if (a1)
  {
    if (a1 == 1)
    {
      sub_10012CE98(0xD000000000000014, (void *)0x80000001002BF9D0, 0);
      if (qword_10035A520 != -1) {
        swift_once();
      }
      id v21 = *(id *)(qword_1003AC750 + 760);
      sub_1000FD938();
    }
    else
    {
      uint64_t v20 = *(void *)((swift_isaMask & *v3) + 0x80);
      if (*(void *)((char *)v3 + v20))
      {
        swift_retain();
        PassthroughSubject.send(_:)();
        swift_release();
        if (*(void *)((char *)v3 + v20))
        {
          swift_getKeyPath();
          swift_getKeyPath();
          swift_retain();
          static Published.subscript.setter();
        }
      }
    }
  }
  else
  {
    sub_10012D884(a2);
  }
}

uint64_t sub_10012D884(uint64_t a1)
{
  NSString v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v77 = sub_10000A38C((uint64_t *)&unk_10035E840);
  __chkstk_darwin(v77);
  uint64_t v76 = (uint64_t)v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for ExperienceEvent(0);
  __chkstk_darwin(v75);
  unint64_t v7 = (char *)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v80 = (id)0xD00000000000001BLL;
  unint64_t v81 = 0x80000001002BF9F0;
  v79._uint64_t countAndFlagsBits = 60;
  v79._unint64_t object = (void *)0xE100000000000000;
  uint64_t v8 = a1 + OBJC_IVAR____TtC17proximitycontrold14HandoffSession_id;
  swift_retain();
  uint64_t v74 = v8;
  UUID.uuidString.getter();
  swift_release();
  sub_100089A9C(8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 32;
  v10._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  swift_retain();
  uint64_t v11 = sub_1001F7514();
  Swift::String v13 = v12;
  swift_release();
  v14._uint64_t countAndFlagsBits = v11;
  v14._unint64_t object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 62;
  v15._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  String.append(_:)(v79);
  swift_bridgeObjectRelease();
  id v16 = sub_1001F60B0();
  swift_bridgeObjectRetain();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v16 ulog:40 message:v17];
  swift_bridgeObjectRelease();

  type metadata accessor for HintViewModel();
  id v18 = (uint64_t *)swift_allocObject();
  uint64_t v19 = swift_retain();
  uint64_t v20 = sub_100133640(v19, v18);
  *(void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x80)) = v20;
  uint64_t v78 = v20;
  swift_retain();
  swift_release();
  if (qword_10035A4F0 != -1) {
    swift_once();
  }
  if (byte_1003AC688 != 1) {
    goto LABEL_8;
  }
  if (qword_10035A520 != -1) {
    swift_once();
  }
  id v21 = *(id *)(qword_1003AC750 + 920);
  char v22 = sub_1000FF780();

  if (v22)
  {
LABEL_8:
    sub_10016ABE4(0xD00000000000001DLL, (void *)0x80000001002BFA10, 0, ObjectType, (uint64_t)&off_1003311B0);
    id v35 = objc_allocWithZone((Class)sub_10000A38C(&qword_100367E28));
    uint64_t v36 = (void *)swift_retain();
    id v37 = sub_10011EF5C(v36);
    *(void *)((char *)v37 + OBJC_IVAR____TtC17proximitycontrold24BannerViewControllerBase_delegate + 8) = &off_1003311A0;
    swift_unknownObjectWeakAssign();
    id v80 = (id)sub_10011EE54();
    uint64_t v38 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v39 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v39;
    *(void *)(v40 + 24) = v38;
    sub_10000A38C(&qword_100367E30);
    sub_10000B010((unint64_t *)&unk_100367E38, &qword_100367E30);
    Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    uint64_t v41 = *(void *)((swift_isaMask & *v2) + 0x90);
    id v42 = *(void **)((char *)v2 + v41);
    *(void *)((char *)v2 + v41) = v37;
    NSString v32 = v37;

    id v33 = (void *)(swift_isaMask & *v2);
    uint64_t v34 = v33[13];
  }
  else
  {
    sub_10016ABE4(0xD000000000000027, (void *)0x80000001002BFA70, 0, ObjectType, (uint64_t)&off_1003311B0);
    id v23 = objc_allocWithZone((Class)sub_10000A38C(&qword_100367E58));
    id v24 = (void *)swift_retain();
    uint64_t v25 = sub_10012EAE8(v24);
    *(void *)((char *)v25 + *(void *)((swift_isaMask & *v25) + 0x60) + 8) = &off_1003311A0;
    swift_unknownObjectWeakAssign();
    id v80 = (id)sub_10012E9E0();
    uint64_t v26 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v27;
    *(void *)(v28 + 24) = v26;
    sub_10000A38C(&qword_100367E30);
    sub_10000B010((unint64_t *)&unk_100367E38, &qword_100367E30);
    Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    uint64_t v29 = *(void *)((swift_isaMask & *v2) + 0x88);
    uint64_t v30 = *(void **)((char *)v2 + v29);
    *(void *)((char *)v2 + v29) = v25;
    id v31 = v25;

    NSString v32 = v31;
    id v33 = (void *)(swift_isaMask & *v2);
    uint64_t v34 = v33[12];
  }
  uint64_t v43 = *(void *)((char *)v2 + v34);
  swift_bridgeObjectRetain();
  id v44 = *(void **)((char *)v2 + v33[14]);
  swift_unknownObjectRetain();
  if (v43)
  {
    sub_10000A38C(&qword_100367E50);
    v45.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v45.super.Class isa = 0;
  }
  id v80 = 0;
  unsigned int v46 = [v44 postPresentable:v32 options:1 userInfo:v45.super.isa error:&v80];
  swift_unknownObjectRelease();

  if (v46)
  {
    id v47 = v80;
    swift_retain();
    uint64_t v74 = UUID.uuidString.getter();
    uint64_t v49 = v48;
    id v80 = 0;
    unint64_t v81 = 0xE000000000000000;
    _StringGuts.grow(_:)(25);
    v50._uint64_t countAndFlagsBits = 0x20646574736F50;
    v50._unint64_t object = (void *)0xE700000000000000;
    String.append(_:)(v50);
    v79._uint64_t countAndFlagsBits = (uint64_t)v32;
    sub_10000A38C(&qword_100367E48);
    _print_unlocked<A, B>(_:_:)();
    v51._unint64_t object = (void *)0x80000001002BFA50;
    v51._uint64_t countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v51);
    id v53 = v80;
    unint64_t v52 = v81;
    *(void *)unint64_t v7 = 0;
    *((void *)v7 + 1) = 0;
    v7[16] = 4;
    swift_storeEnumTagMultiPayload();
    uint64_t v54 = v76;
    NSString v55 = (uint64_t *)(v76 + *(int *)(v77 + 48));
    uint64_t v56 = (uint64_t)v7;
    uint64_t v57 = (void *)(v76 + *(int *)(v77 + 64));
    sub_10013C47C(v56, v76, type metadata accessor for ExperienceEvent);
    uint64_t *v55 = v74;
    v55[1] = v49;
    *uint64_t v57 = v53;
    v57[1] = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    PassthroughSubject.send(_:)();
    sub_10000D78C(v54, (uint64_t *)&unk_10035E840);
    sub_10013C8D0(v56, type metadata accessor for ExperienceEvent);
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    id v59 = v80;
    uint64_t v60 = _convertNSErrorToError(_:)();

    swift_willThrow();
    id v80 = 0;
    unint64_t v81 = 0xE000000000000000;
    _StringGuts.grow(_:)(33);
    v61._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    v61._unint64_t object = (void *)0x80000001002BFA30;
    String.append(_:)(v61);
    v79._uint64_t countAndFlagsBits = v60;
    sub_10000A38C((uint64_t *)&unk_100365D60);
    v73[1] = v32;
    _print_unlocked<A, B>(_:_:)();
    id v62 = sub_1001F60B0();
    swift_bridgeObjectRetain();
    NSString v63 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v62 ulog:40 message:v63];
    swift_bridgeObjectRelease();

    swift_retain();
    swift_errorRetain();
    uint64_t v74 = UUID.uuidString.getter();
    uint64_t v65 = v64;
    id v80 = 0;
    unint64_t v81 = 0xE000000000000000;
    _StringGuts.grow(_:)(33);
    v66._uint64_t countAndFlagsBits = 0x742064656C696146;
    v66._unint64_t object = (void *)0xEF2074736F70206FLL;
    String.append(_:)(v66);
    v79._uint64_t countAndFlagsBits = (uint64_t)v32;
    sub_10000A38C(&qword_100367E48);
    _print_unlocked<A, B>(_:_:)();
    v67._unint64_t object = (void *)0x80000001002BFA50;
    v67._uint64_t countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v67);
    id v69 = v80;
    unint64_t v68 = v81;
    *(void *)unint64_t v7 = v60;
    *((void *)v7 + 1) = 0;
    v7[16] = 0;
    swift_storeEnumTagMultiPayload();
    uint64_t v70 = v76;
    char v71 = (uint64_t *)(v76 + *(int *)(v77 + 48));
    uint64_t v72 = (void *)(v76 + *(int *)(v77 + 64));
    sub_10013C47C((uint64_t)v7, v76, type metadata accessor for ExperienceEvent);
    *char v71 = v74;
    v71[1] = v65;
    *uint64_t v72 = v69;
    v72[1] = v68;
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    PassthroughSubject.send(_:)();
    sub_10000D78C(v70, (uint64_t *)&unk_10035E840);
    sub_10013C8D0((uint64_t)v7, type metadata accessor for ExperienceEvent);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    swift_release();
    swift_unknownObjectRelease();
    return swift_release();
  }
}

void sub_10012E55C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    swift_beginAccess();
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (v2)
    {
      Swift::String v3 = (void *)v2;
      Swift::String v4 = *(void **)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x68));
      uint64_t v5 = v4[5];
      uint64_t v6 = v4[16];
      sub_10000D6E4(v4 + 2, v5);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      sub_10012E65C(v7, v8);

      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_10012E65C(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_10000A38C((uint64_t *)&unk_10035E840);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ExperienceEvent(0);
  __chkstk_darwin(v8);
  Swift::String v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = 0;
  v20[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  v11._unint64_t object = (void *)0x80000001002BFAA0;
  v11._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  String.append(_:)(v11);
  v12._uint64_t countAndFlagsBits = 0x3D746E657665203ALL;
  v12._unint64_t object = (void *)0xE800000000000000;
  String.append(_:)(v12);
  _print_unlocked<A, B>(_:_:)();
  v13._uint64_t countAndFlagsBits = 0x6F6973736573202CLL;
  v13._unint64_t object = (void *)0xEC0000003D44496ELL;
  String.append(_:)(v13);
  v14._uint64_t countAndFlagsBits = a1;
  v14._unint64_t object = a2;
  String.append(_:)(v14);
  id v15 = sub_1001F60B0();
  swift_bridgeObjectRetain();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 ulog:40 message:v16];
  swift_bridgeObjectRelease();

  *(_OWORD *)Swift::String v10 = xmmword_100291170;
  v10[16] = 4;
  swift_storeEnumTagMultiPayload();
  NSString v17 = (uint64_t *)&v7[*(int *)(v5 + 56)];
  id v18 = &v7[*(int *)(v5 + 72)];
  sub_10013C47C((uint64_t)v10, (uint64_t)v7, type metadata accessor for ExperienceEvent);
  *NSString v17 = a1;
  v17[1] = (uint64_t)a2;
  *(void *)id v18 = 0x707061546C6C6970;
  *((void *)v18 + 1) = 0xEA00000000006465;
  swift_retain();
  swift_bridgeObjectRetain();
  PassthroughSubject.send(_:)();
  sub_10000D78C((uint64_t)v7, (uint64_t *)&unk_10035E840);
  sub_10013C8D0((uint64_t)v10, type metadata accessor for ExperienceEvent);
  return swift_release();
}

void sub_10012E928()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (char *)Strong;
    swift_beginAccess();
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (v2)
    {
      Swift::String v3 = (void *)v2;
      uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC17proximitycontrold24BannerViewControllerBase_requestID];
      uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC17proximitycontrold24BannerViewControllerBase_requestID + 8];
      swift_bridgeObjectRetain();
      sub_10012E65C(v4, v5);

      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_10012E9E0()
{
  uint64_t v1 = *(void *)((swift_isaMask & *v0) + 0x88);
  if (*(void *)((char *)v0 + v1))
  {
    uint64_t v2 = *(void *)((char *)v0 + v1);
  }
  else
  {
    Swift::String v3 = v0;
    sub_10000A38C(&qword_100367E60);
    sub_10000B010(&qword_100367E68, &qword_100367E60);
    uint64_t v2 = Publisher.eraseToAnyPublisher()();
    *(void *)((char *)v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void *sub_10012EAE8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_10000A38C(&qword_10035AC20);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A38C(&qword_100367E70);
  uint64_t v124 = *(void *)(v8 - 8);
  uint64_t v125 = v8;
  __chkstk_darwin(v8);
  Swift::String v123 = (char *)v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_10000A38C(&qword_100367E78);
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v114 = (char *)v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_10000A38C(&qword_100367E80);
  uint64_t v115 = *(void *)(v116 - 8);
  uint64_t v11 = __chkstk_darwin(v116);
  id v113 = (char *)v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = v12;
  __chkstk_darwin(v11);
  uint64_t v130 = (char *)v110 - v13;
  uint64_t v14 = sub_10000A38C(&qword_100367E88);
  uint64_t v121 = *(void *)(v14 - 8);
  uint64_t v122 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  id v120 = (char *)v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = v16;
  __chkstk_darwin(v15);
  unint64_t v131 = (char *)v110 - v17;
  uint64_t v18 = sub_10000A38C((uint64_t *)&unk_100367E90);
  uint64_t v127 = *(void *)(v18 - 8);
  uint64_t v128 = v18;
  __chkstk_darwin(v18);
  uint64_t v126 = (char *)v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[*(void *)((swift_isaMask & *(void *)v1) + 0x60) + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v20 = *(void *)((swift_isaMask & *(void *)v1) + 0x70);
  id v21 = objc_allocWithZone((Class)UIImageView);
  char v22 = v2;
  *(void *)&v2[v20] = [v21 init];
  uint64_t v23 = *(void *)((swift_isaMask & *(void *)v22) + 0x78);
  *(void *)&v22[v23] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v24 = *(void *)((swift_isaMask & *(void *)v22) + 0x80);
  sub_10000A38C(&qword_100367E60);
  swift_allocObject();
  *(void *)&v22[v24] = PassthroughSubject.init()();
  *(void *)&v22[*(void *)((swift_isaMask & *(void *)v22) + 0x88)] = 0;
  uint64_t v25 = *(void *)((swift_isaMask & *(void *)v22) + 0x90);
  *(void *)&v22[v25] = [objc_allocWithZone((Class)UITapGestureRecognizer) init];
  *(void *)&v22[*(void *)((swift_isaMask & *(void *)v22) + 0x98)] = &_swiftEmptySetSingleton;
  swift_unknownObjectWeakInit();
  *(void *)&v22[*(void *)((swift_isaMask & *(void *)v22) + 0xA8)] = 1;
  *(void *)&v22[*(void *)((swift_isaMask & *(void *)v22) + 0xB0)] = 0x4036000000000000;
  *(void *)&v22[*(void *)((swift_isaMask & *(void *)v22) + 0xB8)] = 0x4036000000000000;
  *(void *)&v22[*(void *)((swift_isaMask & *(void *)v22) + 0xC0)] = 0x3FF0000000000000;
  *(void *)&v22[*(void *)((swift_isaMask & *(void *)v22) + 0xC8)] = 0x4020000000000000;
  *(void *)&v22[*(void *)((swift_isaMask & *(void *)v22) + 0xD0)] = 0;
  *(void *)&v22[*(void *)((swift_isaMask & *(void *)v22) + 0xD8)] = 0;
  *(void *)&v22[*(void *)((swift_isaMask & *(void *)v22) + 0xE0)] = 0;
  *(void *)&v22[*(void *)((swift_isaMask & *(void *)v22) + 0xE8)] = 0;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, ObjectType, (uint64_t)&off_100332BD8);
  *(void *)&v22[*(void *)((swift_isaMask & *(void *)v22) + 0x68)] = a1;
  swift_retain();

  uint64_t v26 = (objc_class *)sub_10000A38C(&qword_100367E58);
  v137.receiver = v22;
  v137.super_class = v26;
  id v27 = [super initWithNibName:0 bundle:0];
  uint64_t v28 = a1[5];
  uint64_t v29 = a1[17];
  sub_10000D6E4(a1 + 2, v28);
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8);
  unint64_t v132 = v27;
  id v31 = (void *)v30(v28, v29);
  uint64_t v133 = 0x6C6C69662ELL;
  unint64_t v134 = 0xE500000000000000;
  id v135 = v31;
  uint64_t v136 = v32;
  swift_bridgeObjectRetain();
  id v135 = (id)String.init<A>(_:)();
  uint64_t v136 = v33;
  String.append<A>(contentsOf:)();
  swift_bridgeObjectRelease();
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v35 = [self systemImageNamed:v34];

  Swift::UInt64 v129 = v7;
  if (v35)
  {
    id v36 = [self configurationWithPointSize:4 weight:16.0];
    id v37 = [v35 imageByApplyingSymbolConfiguration:v36];
  }
  else
  {
    id v37 = 0;
  }
  uint64_t v38 = v132;
  uint64_t v39 = *(void **)((char *)v38 + *(void *)((swift_isaMask & *v38) + 0x70));
  id v112 = v37;
  [v39 setImage:v37];
  [v39 setContentMode:1];
  uint64_t v40 = self;
  id v41 = v39;
  id v42 = [v40 whiteColor];
  [v41 setTintColor:v42];

  uint64_t v43 = *(void *)((swift_isaMask & *v38) + 0x78);
  id v44 = [*(id *)((char *)v38 + v43) layer];
  [v44 setCornerCurve:kCACornerCurveContinuous];

  id v45 = [*(id *)((char *)v38 + v43) layer];
  [v45 setCornerRadius:4.0];

  id v46 = [*(id *)((char *)v38 + v43) layer];
  [v46 setShouldRasterize:1];

  id v47 = [*(id *)((char *)v38 + v43) layer];
  id v48 = [self mainScreen];
  [v48 scale];
  double v50 = v49;

  [v47 setRasterizationScale:v50 + v50];
  Swift::String v51 = *(void **)((char *)v38 + v43);
  [v51 setClipsToBounds:1];
  uint64_t v52 = a1[5];
  uint64_t v53 = a1[14];
  sub_10000D6E4(a1 + 2, v52);
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  id v55 = v51;
  v54(v52, v53);
  uint64_t v56 = a1[5];
  uint64_t v57 = a1[13];
  sub_10000D6E4(a1 + 2, v56);
  if (!(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 8))(v56, v57)) {
    goto LABEL_8;
  }
  self;
  uint64_t v58 = swift_dynamicCastObjCClass();
  if (!v58)
  {
    swift_unknownObjectRelease();
LABEL_8:
    swift_unknownObjectRelease();
    id v60 = 0;
    goto LABEL_9;
  }
  id v59 = (void *)v58;
  swift_unknownObjectRelease();
  id v60 = [v59 image];
  swift_unknownObjectRelease();
LABEL_9:
  uint64_t v61 = v111;
  [v55 setImage:v60];

  uint64_t v62 = a1[5];
  uint64_t v63 = a1[14];
  sub_10000D6E4(a1 + 2, v62);
  uint64_t v133 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 16))(v62, v63);
  uint64_t v64 = a1[5];
  uint64_t v65 = a1[13];
  sub_10000D6E4(a1 + 2, v64);
  Swift::String v66 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 16))(v64, v65);
  swift_release();
  id v135 = v66;
  uint64_t v67 = sub_10000A38C(&qword_10035E410);
  v110[0] = &protocol conformance descriptor for AnyPublisher<A, B>;
  v110[1] = sub_10000B010((unint64_t *)&unk_100367EA0, &qword_10035E410);
  unint64_t v68 = v130;
  uint64_t v111 = v67;
  Publishers.CombineLatest.init(_:_:)();
  id v69 = sub_1001F60D8();
  uint64_t v70 = v115;
  char v71 = v113;
  uint64_t v72 = v116;
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v113, v68, v116);
  unint64_t v73 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  unint64_t v74 = (v61 + v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v75 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v76 = (v75 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v77 = swift_allocObject();
  *(void *)(v77 + 16) = sub_10012FD14;
  *(void *)(v77 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))(v77 + v73, v71, v72);
  uint64_t v78 = (void *)(v77 + v74);
  *uint64_t v78 = 0;
  v78[1] = 0xE000000000000000;
  Swift::String v79 = (void *)(v77 + v75);
  void *v79 = 0;
  v79[1] = 0xE000000000000000;
  *(void *)(v77 + v76) = v69;
  *(_DWORD *)(v77 + ((v76 + 11) & 0xFFFFFFFFFFFFFFF8)) = 40;
  id v80 = v69;
  sub_10000A38C(&qword_10035D068);
  sub_10000B010(&qword_100367EB0, &qword_100367E80);
  unint64_t v81 = v114;
  uint64_t v82 = v130;
  Publisher.map<A>(_:)();
  swift_release();
  id v113 = (char *)&protocol conformance descriptor for Publishers.Map<A, B>;
  sub_10000B010(&qword_100367EB8, &qword_100367E78);
  uint64_t v83 = v118;
  uint64_t v84 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v81, v83);

  (*(void (**)(char *, uint64_t))(v70 + 8))(v82, v72);
  uint64_t v133 = v84;
  uint64_t v85 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v86 = swift_allocObject();
  *(void *)(v86 + 16) = sub_10013C858;
  *(void *)(v86 + 24) = v85;
  sub_10000A38C((uint64_t *)&unk_100367EC0);
  uint64_t v130 = (char *)sub_10000A38C((uint64_t *)&unk_10036C080);
  sub_10000B010(&qword_100367ED0, (uint64_t *)&unk_100367EC0);
  char v87 = v131;
  Publisher.map<A>(_:)();
  swift_release();
  swift_release();
  id v88 = sub_1001F60D8();
  uint64_t v90 = v121;
  uint64_t v89 = v122;
  id v91 = v120;
  (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v120, v87, v122);
  unint64_t v92 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  unint64_t v93 = (v119 + v92 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v94 = (v93 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v95 = (v94 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v96 = swift_allocObject();
  *(void *)(v96 + 16) = 0;
  *(void *)(v96 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v90 + 32))(v96 + v92, v91, v89);
  uint64_t v97 = (void *)(v96 + v93);
  *uint64_t v97 = 0xD000000000000011;
  v97[1] = 0x80000001002BFAD0;
  uint64_t v98 = (void *)(v96 + v94);
  *uint64_t v98 = 0;
  v98[1] = 0xE000000000000000;
  *(void *)(v96 + v95) = v88;
  *(_DWORD *)(v96 + ((v95 + 11) & 0xFFFFFFFFFFFFFFF8)) = 40;
  sub_10000B010(&qword_100367ED8, &qword_100367E88);
  id v99 = v88;
  uint64_t v100 = v123;
  uint64_t v101 = v131;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_100367EE0, &qword_100367E70);
  uint64_t v102 = v125;
  uint64_t v103 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v100, v102);

  (*(void (**)(char *, uint64_t))(v90 + 8))(v101, v89);
  uint64_t v133 = v103;
  sub_100019E10(0, (unint64_t *)&qword_10035A680);
  id v135 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v104 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v105 = (uint64_t)v129;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v129, 1, 1, v104);
  sub_10003A8C0();
  uint64_t v106 = v126;
  Publisher.receive<A>(on:options:)();
  sub_10000D78C(v105, &qword_10035AC20);

  swift_release();
  swift_allocObject();
  unint64_t v107 = v132;
  swift_unknownObjectWeakInit();
  sub_10000B010(&qword_100367EE8, (uint64_t *)&unk_100367E90);
  uint64_t v108 = v128;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v106, v108);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();

  swift_release();
  return v107;
}

unint64_t sub_10012FD14(uint64_t *a1)
{
  return sub_10020C564(*a1, a1[1]);
}

uint64_t sub_10012FD20(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v4 = Strong;
  if (!a2)
  {

    return 0;
  }
  self;
  uint64_t v5 = swift_dynamicCastObjCClass();
  if (v5) {
    swift_unknownObjectRetain();
  }

  return v5;
}

void sub_10012FDB8(id a1)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v3 = Strong;
    id v4 = *(id *)((char *)Strong + *(void *)((swift_isaMask & *Strong) + 0x78));

    if (a1) {
      a1 = [a1 image];
    }
    [v4 setImage:a1];
  }
}

uint64_t sub_10012FE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10012FEDC(a1, &qword_100367608, (uint64_t)type metadata accessor for HandoffEvent, (void (*)(uint64_t, uint64_t, uint64_t))sub_10013C47C, a2);
}

uint64_t sub_10012FEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10012FEDC(a1, &qword_1003674D8, (uint64_t)&unk_1003674C8, (void (*)(uint64_t, uint64_t, uint64_t))sub_10000D728, a2);
}

uint64_t sub_10012FEDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  return Date.init()();
}

uint64_t sub_10012FF44@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a3 + *(int *)(sub_10000A38C(&qword_100367688) + 64);
  sub_10013C47C(a1, a3, (uint64_t (*)(void))type metadata accessor for HandoffEvent);
  Date.init()();
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  sub_10000D6E4(a2, v7);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  *(_DWORD *)uint64_t v6 = result;
  *(unsigned char *)(v6 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_10012FFFC@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10013007C()
{
  return static Published.subscript.setter();
}

uint64_t sub_1001300F0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100269CBC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v5;
  uint64_t v14 = *v5;
  *uint64_t v5 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a3();
    uint64_t v11 = v14;
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(*(void *)(v11 + 56) + 8 * v8);
  sub_100130B98(v8, v11);
  *uint64_t v5 = v11;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1001301D0(uint64_t a1)
{
  return sub_100130200(a1, (void (*)(void))sub_1000580F4);
}

uint64_t sub_1001301E8(uint64_t a1)
{
  return sub_100130200(a1, (void (*)(void))sub_100058100);
}

uint64_t sub_100130200(uint64_t a1, void (*a2)(void))
{
  id v4 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100269DA0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v4;
  uint64_t v14 = *v4;
  *id v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a2();
    uint64_t v9 = v14;
  }
  uint64_t v10 = *(void *)(v9 + 48);
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
  uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1001318F8(v6, v9);
  *id v4 = v9;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100130308(uint64_t a1)
{
  return sub_10013053C(a1, (uint64_t (*)(void))sub_10026A800, (void (*)(uint64_t, uint64_t))sub_10013140C, (void (*)(void))sub_1000582BC);
}

uint64_t sub_100130348(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100269CBC(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *char v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000582C8();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_100130D70(v6, v9);
  *char v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100130430(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_100269DA0(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100058484();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 16 * v4);
  sub_100130F48(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10013053C(uint64_t a1, uint64_t (*a2)(void), void (*a3)(uint64_t, uint64_t), void (*a4)(void))
{
  uint64_t v7 = v4;
  uint64_t v8 = a2();
  if ((v9 & 1) == 0) {
    return 0;
  }
  uint64_t v10 = v8;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *v4;
  uint64_t v15 = *v7;
  *uint64_t v7 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a4();
    uint64_t v12 = v15;
  }
  uint64_t v13 = *(void *)(*(void *)(v12 + 56) + 8 * v10);
  a3(v10, v12);
  *uint64_t v7 = v12;
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1001305F0(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100269CBC(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 1;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *char v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100058774();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_100130B98(v6, v9);
  *char v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1001306C0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  char v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100269E60(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *char v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10005892C();
      uint64_t v9 = v11;
    }
    sub_1000BA108(*(void *)(v9 + 48) + 40 * v6);
    sub_100027B00((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_100131240(v6, v9);
    *char v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1001307BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100269DA0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *char v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100059280();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a2, v12 + *(void *)(v20 + 72) * v6, v13);
    sub_1001315A4(v6, v9, (uint64_t (*)(void))&type metadata accessor for Date);
    *char v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for Date();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_1001309A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100269DA0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *char v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100059628();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t active = type metadata accessor for PCUserAlertManager.ActiveAlertContext(0);
    uint64_t v20 = *(void *)(active - 8);
    sub_10013CEA4(v12 + *(void *)(v20 + 72) * v6, a2, type metadata accessor for PCUserAlertManager.ActiveAlertContext);
    sub_1001315A4(v6, v9, type metadata accessor for PCUserAlertManager.ActiveAlertContext);
    *char v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = active;
  }
  else
  {
    uint64_t v18 = type metadata accessor for PCUserAlertManager.ActiveAlertContext(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_100130B80(uint64_t a1, uint64_t a2)
{
  return sub_1001300F0(a1, a2, (void (*)(void))sub_10005A058);
}

unint64_t sub_100130B98(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100130D70(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100130F48(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = _HashTable.previousHole(before:)();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_100129DD8((unint64_t *)&qword_10035CFF0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (_OWORD *)(v22 + 16 * a1);
            uint64_t v24 = (_OWORD *)(v22 + 16 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              _OWORD *v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100131240(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_10005C374(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        Swift::Int v10 = AnyHashable._rawHashValue(seed:)(*(void *)(a2 + 40));
        unint64_t result = sub_1000BA108((uint64_t)v28);
        Swift::Int v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= v11)
          {
LABEL_16:
            uint64_t v14 = *(void *)(a2 + 48);
            unint64_t v15 = v14 + 40 * v3;
            int64_t v16 = (long long *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              long long v17 = *v16;
              long long v18 = v16[1];
              *(void *)(v15 + 32) = *((void *)v16 + 4);
              *(_OWORD *)unint64_t v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (_OWORD *)(v19 + 32 * v3);
            uint64_t v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 2))
            {
              long long v9 = v21[1];
              *uint64_t v20 = *v21;
              v20[1] = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10013140C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        Swift::Int v10 = (void *)(v9 + 8 * v6);
        unint64_t result = static Hasher._hash(seed:_:)();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            int64_t v16 = (void *)(v15 + 8 * v3);
            long long v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              void *v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    long long v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    long long v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *long long v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001315A4(int64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v37 = a3;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t result = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2 + 64;
  uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v12 = (a1 + 1) & ~v11;
  if (((1 << v12) & *(void *)(a2 + 64 + 8 * (v12 >> 6))) != 0)
  {
    uint64_t v13 = ~v11;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v10 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      unint64_t v40 = (result + 1) & v13;
      uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v14 = v6 + 16;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v41 = v14;
      uint64_t v38 = (uint64_t (**)(char *, uint64_t))(v14 - 8);
      uint64_t v39 = v15;
      uint64_t v36 = v13;
      do
      {
        uint64_t v17 = v10;
        uint64_t v18 = v16;
        int64_t v19 = v16 * v12;
        v39(v9, *(void *)(a2 + 48) + v16 * v12, v5);
        sub_100129DD8((unint64_t *)&qword_10035CFF0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v20 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v38)(v9, v5);
        unint64_t v21 = v20 & v13;
        if (a1 >= (uint64_t)v40)
        {
          if (v21 >= v40 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            if (v18 * a1 < v19
              || *(void *)(a2 + 48) + v18 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v19 + v18))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v18 * a1 != v19)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v24 = *(void *)(a2 + 56);
            uint64_t v25 = *(void *)(*(void *)(v37(0) - 8) + 72);
            int64_t v26 = v25 * a1;
            unint64_t result = v24 + v25 * a1;
            int64_t v27 = v25 * v12;
            unint64_t v28 = v24 + v25 * v12 + v25;
            BOOL v29 = v26 < v27 || result >= v28;
            uint64_t v10 = v17;
            if (v29)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v12;
              uint64_t v13 = v36;
            }
            else
            {
              a1 = v12;
              uint64_t v13 = v36;
              if (v26 != v27)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v12;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v40 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        uint64_t v10 = v17;
LABEL_5:
        unint64_t v12 = (v12 + 1) & v13;
        uint64_t v16 = v18;
      }
      while (((*(void *)(v10 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  uint64_t *v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001318F8(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = _HashTable.previousHole(before:)();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_100129DD8((unint64_t *)&qword_10035CFF0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            uint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              void *v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_100131BF0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100132430(a1, &qword_100367588, a2);
}

uint64_t sub_100131BFC@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  char v3 = *a1;
  sub_10000A38C((uint64_t *)&unk_100367460);
  *a2 = v3;
  return Date.init()();
}

uint64_t sub_100131C3C@<X0>(uint64_t *a1@<X0>, char **a2@<X8>)
{
  uint64_t v4 = sub_10000A38C((uint64_t *)&unk_100367490);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = *(int *)(v5 + 56);
  uint64_t v11 = (char *)&v21 + v10 - v9;
  uint64_t v12 = (char *)a1 + v10;
  *(uint64_t *)((char *)&v21 - v9) = *a1;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v15(v11, v12, v13);
  uint64_t v16 = (uint64_t)&v8[*(int *)(v5 + 56)];
  v15((char *)v16, v12, v13);
  type metadata accessor for DeviceHistory(0);
  uint64_t v17 = (char *)swift_allocObject();
  uint64_t v18 = swift_retain();
  int64_t v19 = sub_10013BCD4(v18, v16, v17);
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v11, v13);
  *a2 = v19;
  return result;
}

uint64_t sub_100131DD0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_10012261C(v1, &qword_100367408, &qword_1003677E8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10026476C, (void (*)(uint64_t))sub_1000F06FC);
    return swift_release();
  }
  return result;
}

unint64_t sub_100131E88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a2 + *(int *)(sub_10000A38C(&qword_1003674C8) + 48);
  unint64_t result = sub_1001180D8(a2, v3, v4);
  *(_DWORD *)uint64_t v5 = result;
  *(unsigned char *)(v5 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_100131EE8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = (char *)a1 + *(int *)(sub_10000A38C(&qword_100367500) + 48);
  uint64_t v10 = *(void *)(v8 + 24);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v9, v4);
  type metadata accessor for SessionHistory(0);
  uint64_t v11 = (uint64_t *)swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v12 = sub_10013B278(v8, v10, (uint64_t)v7, v11);
  uint64_t result = swift_release();
  *a2 = v12;
  return result;
}

uint64_t sub_100132018(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_10012261C(v1, &qword_100367420, (uint64_t *)&unk_100367780, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10026472C, (void (*)(uint64_t))sub_1000F06FC);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001320D0@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  if (*(void *)(result + 8))
  {
    swift_retain();
    uint64_t v3 = UUID.uuidString.getter();
    uint64_t v5 = v4;
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v3;
  a2[1] = v5;
  return result;
}

uint64_t sub_10013213C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(v1 + 16) = sub_10013B270;
  *(void *)(v1 + 24) = v2;

  return sub_10000F088(v3);
}

uint64_t sub_1001321B4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_10012261C(v1, &qword_100367438, &qword_100367778, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1002646EC, (void (*)(uint64_t))sub_1000F06FC);
    return swift_release();
  }
  return result;
}

uint64_t sub_10013226C@<X0>(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001186C4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100132298@<X0>(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100118B58(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001322C4@<X0>(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100118ED0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001322F0@<X0>(uint64_t **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10011943C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10013231C@<X0>(__int16 *a1@<X0>, _WORD *a2@<X8>)
{
  __int16 v3 = *a1;
  uint64_t v4 = (uint64_t *)((char *)a2 + *(int *)(sub_10000A38C(&qword_100367650) + 48));
  *a2 = v3;
  type metadata accessor for SessionEvent();
  swift_storeEnumTagMultiPayload();
  swift_retain();
  uint64_t v5 = UUID.uuidString.getter();
  uint64_t v7 = v6;
  swift_release();
  *uint64_t v4 = v5;
  v4[1] = v7;
  type metadata accessor for HandoffEvent();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1001323D8@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = *a1;
  *a3 = *a2;
  a3[1] = v3;
  swift_retain();

  return swift_retain();
}

uint64_t sub_100132418@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100132430(a1, &qword_100367500, a2);
}

uint64_t sub_100132424@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100132430(a1, (uint64_t *)&unk_100367490, a2);
}

uint64_t sub_100132430@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *a1;
  sub_10000A38C(a2);
  *a3 = v4;
  swift_retain();
  return Date.init()();
}

uint64_t sub_100132480()
{
  return swift_release();
}

uint64_t sub_10013256C()
{
  return swift_release();
}

uint64_t sub_100132658()
{
  return swift_release();
}

uint64_t sub_100132744()
{
  uint64_t v0 = (void (__cdecl *)())off_10035F180;
  type metadata accessor for HandoffSession();
  v0();
  swift_retain();
  sub_10000A38C(&qword_10035F5D0);
  sub_10000A38C(&qword_100367A30);
  sub_10000B010(&qword_100367700, &qword_10035F5D0);
  Publisher.map<A>(_:)();
  swift_release();
  return swift_release();
}

uint64_t sub_100132844(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10011BFE4(v3, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001328B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10011ABBC(*a1, a2);
}

uint64_t sub_1001328C4()
{
  return swift_release();
}

uint64_t sub_1001329B0()
{
  return swift_release();
}

uint64_t sub_100132A9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ViewServiceInput(0);
  uint64_t result = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 8))
  {
    *uint64_t v5 = *(unsigned char *)a1;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_10007CD78((uint64_t)v5);
    sub_10013C8D0((uint64_t)v5, type metadata accessor for ViewServiceInput);
    return swift_release();
  }
  return result;
}

uint64_t sub_100132B64()
{
  return swift_release();
}

uint64_t sub_100132C50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ViewServiceInput(0);
  uint64_t result = __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(a1 + 8))
  {
    uint64_t v6 = *(void **)a1;
    *uint64_t v5 = v6;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    id v7 = v6;
    sub_10007CD78((uint64_t)v5);
    sub_10013C8D0((uint64_t)v5, type metadata accessor for ViewServiceInput);
    return swift_release();
  }
  return result;
}

uint64_t sub_100132D1C()
{
  return swift_release();
}

uint64_t sub_100132E08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ViewServiceInput(0);
  uint64_t result = __chkstk_darwin(v2);
  uint64_t v5 = (_DWORD *)((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(a1 + 8))
  {
    *uint64_t v5 = *(_DWORD *)a1;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_10007CD78((uint64_t)v5);
    sub_10013C8D0((uint64_t)v5, type metadata accessor for ViewServiceInput);
    return swift_release();
  }
  return result;
}

uint64_t sub_100132ED0()
{
  return swift_release();
}

uint64_t sub_100132FBC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ViewServiceInput(0);
  uint64_t result = __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(a1 + 16))
  {
    uint64_t v8 = a1;
    uint64_t v6 = *(void **)a1;
    uint64_t v7 = *(void *)(v8 + 8);
    *uint64_t v5 = v6;
    v5[1] = v7;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_100027B7C(v6);
    sub_10007CD78((uint64_t)v5);
    sub_10013C8D0((uint64_t)v5, type metadata accessor for ViewServiceInput);
    return swift_release();
  }
  return result;
}

uint64_t sub_100133090()
{
  return swift_release();
}

uint64_t sub_10013317C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v3 = *(id *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = off_10035F178;
  sub_100027B7C(*(id *)a1);
  uint64_t result = v5(&v8);
  uint64_t v7 = v8;
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v7;
  return result;
}

uint64_t sub_100133230@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id v3 = *a1;
  uint64_t v4 = off_10035F178;
  id v5 = *a1;
  uint64_t result = v4(&v8);
  uint64_t v7 = v8;
  *a2 = v3;
  a2[1] = v7;
  return result;
}

uint64_t sub_1001332D8(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10011E380(a3, v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_10013334C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10012A5A8(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001333AC()
{
  return swift_release();
}

uint64_t sub_100133484(unsigned __int8 a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10012A804(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001334F8()
{
  return swift_release();
}

void sub_1001335D0(char a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    sub_10012D4B8(a1, v3);
  }
}

uint64_t *sub_100133640(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v30 = sub_10000A38C(&qword_100367FF0);
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A38C(&qword_100367F40);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for HandoffSession();
  v34[4] = &off_100321B48;
  v34[5] = &off_100321A70;
  v34[6] = &off_100321B00;
  void v34[7] = &off_100321AE8;
  v34[8] = &off_100321AD8;
  v34[9] = &off_10035F1E0;
  v34[10] = &off_100321AC0;
  v34[11] = &off_100321A10;
  v34[12] = &off_100321920;
  v34[13] = &off_100321908;
  v34[14] = &off_100321890;
  v34[15] = &off_100321880;
  v34[3] = v11;
  v34[0] = a1;
  a2[19] = (uint64_t)&_swiftEmptySetSingleton;
  a2[18] = 0;
  uint64_t v12 = (char *)a2 + OBJC_IVAR____TtC17proximitycontrold13HintViewModel__isModulating;
  LOBYTE(v32[0]) = 1;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v10, v7);
  *(uint64_t *)((char *)a2 + OBJC_IVAR____TtC17proximitycontrold13HintViewModel____lazy_storage___isModulatingPublisher) = 0;
  uint64_t v13 = OBJC_IVAR____TtC17proximitycontrold13HintViewModel_popSubject;
  sub_10000A38C((uint64_t *)&unk_100367F90);
  swift_allocObject();
  *(uint64_t *)((char *)a2 + v13) = PassthroughSubject.init()();
  uint64_t v14 = OBJC_IVAR____TtC17proximitycontrold13HintViewModel__subtitle;
  sub_10000A38C(&qword_100367FF8);
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = 0;
  void v15[3] = 0;
  uint64_t v15[4] = 0xE000000000000000;
  *(uint64_t *)((char *)a2 + v14) = (uint64_t)v15;
  *(uint64_t *)((char *)a2 + OBJC_IVAR____TtC17proximitycontrold13HintViewModel____lazy_storage___subtitlePublisher) = 0;
  v32[0] = 0;
  v32[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v32, "Init: session=");
  HIBYTE(v32[1]) = -18;
  v33._uint64_t countAndFlagsBits = 60;
  v33._unint64_t object = (void *)0xE100000000000000;
  swift_retain();
  UUID.uuidString.getter();
  swift_release();
  sub_100089A9C(8);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = 32;
  v17._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  swift_retain();
  uint64_t v18 = sub_1001F7514();
  uint64_t v20 = v19;
  swift_release();
  v21._uint64_t countAndFlagsBits = v18;
  v21._unint64_t object = v20;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 62;
  v22._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  sub_10016ABE4(v32[0], (void *)v32[1], 0, v4, (uint64_t)&off_1003312D0);
  swift_bridgeObjectRelease();
  sub_10013CC78((uint64_t)v34, (uint64_t)(a2 + 2));
  v32[0] = sub_100061478();
  sub_10000A38C(&qword_100368000);
  uint64_t v23 = *(void *)(type metadata accessor for ActivityDisplayContext(0) - 8);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_10028D430;
  uint64_t v26 = v25 + v24;
  uint64_t v27 = (void *)sub_1001F9EE0();
  sub_100266C24(v27, v26);
  swift_unknownObjectRelease();
  sub_10000A38C(&qword_100367758);
  sub_10000B010(&qword_100367760, &qword_100367758);
  Publisher.prepend(_:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_allocObject();
  swift_weakInit();
  sub_10000B010(&qword_100368008, &qword_100367FF0);
  uint64_t v28 = v30;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v28);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  sub_10000CC5C((uint64_t)v34);
  return a2;
}

void sub_100133C7C(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    a3(v4);
  }
}

uint64_t sub_100133CEC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10011E79C(*a1);
  *a2 = result;
  return result;
}

id sub_100133D18@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  *a2 = *(void *)a1;
  a2[1] = v2;
  return sub_100027B7C(v3);
}

void sub_100133D28(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
}

uint64_t sub_100133D50(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100133D90(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100133DD0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100133E08()
{
  return sub_100124E50();
}

uint64_t sub_100133E10()
{
  return sub_100124F74();
}

double sub_100133E18@<D0>(uint64_t a1@<X8>)
{
  return sub_100124FE0(a1);
}

uint64_t *sub_100133E20(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v31 = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = sub_10000A38C(&qword_100367808);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  uint64_t v30 = v5;
  __chkstk_darwin(v4);
  uint64_t v26 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A38C((uint64_t *)&unk_100367810);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A38C(&qword_1003677F0);
  swift_allocObject();
  v1[2] = PassthroughSubject.init()();
  v1[3] = 0;
  v1[4] = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v27 = v3;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, v3, (uint64_t)&off_1003248C0);
  swift_retain();
  uint64_t v32 = sub_100104B88();
  sub_10000A38C((uint64_t *)&unk_10036BFE0);
  sub_10000B010((unint64_t *)&unk_100363D30, (uint64_t *)&unk_10036BFE0);
  uint64_t v11 = Publisher.eraseToAnyPublisher()();
  swift_release();
  swift_release();
  uint64_t v32 = v11;
  swift_allocObject();
  swift_weakInit();
  uint64_t v12 = sub_10000A38C(&qword_10035ACA0);
  v25[1] = &protocol conformance descriptor for AnyPublisher<A, B>;
  uint64_t v13 = sub_10000B010(&qword_10035ACB0, &qword_10035ACA0);
  uint64_t v28 = v12;
  v25[2] = v13;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v32 = sub_100124B00();
  Publisher<>.removeDuplicates()();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_10000B010(&qword_10036B0E0, (uint64_t *)&unk_100367810);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v14 = sub_1001294C8();
  id v15 = sub_1001F6018();
  uint64_t v32 = v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = 0;
  *(void *)(v16 + 32) = v14;
  *(void *)(v16 + 40) = 0xD000000000000021;
  *(void *)(v16 + 48) = 0x80000001002BF5C0;
  *(void *)(v16 + 56) = 0;
  *(void *)(v16 + 64) = 0xE000000000000000;
  *(void *)(v16 + 72) = v15;
  *(_DWORD *)(v16 + 80) = 40;
  swift_retain();
  id v17 = v15;
  sub_10000A38C(&qword_100367820);
  sub_10000B010(&qword_100367828, &qword_100367820);
  uint64_t v18 = v26;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010((unint64_t *)&unk_100367830, &qword_100367808);
  uint64_t v19 = v29;
  uint64_t v20 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v19);
  swift_release();

  uint64_t v32 = v20;
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v27;
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = v23;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v32 = *(void *)(v31 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_orientationPublisher);
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_10000A38C(&qword_1003605D0);
  sub_10000B010(&qword_100367840, &qword_1003605D0);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v32 = sub_10011A3F4();
  swift_allocObject();
  swift_weakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  return v2;
}

void sub_1001345AC(uint64_t a1)
{
  uint64_t v45 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v51 = sub_10000A38C(&qword_1003673D0);
  uint64_t v49 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  id v48 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10000A38C(&qword_100367DC8);
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  double v50 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_10000A38C(&qword_100367DD0);
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v54 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_10000A38C(&qword_100367DD8);
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v57 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A38C(&qword_10035AC20);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10000A38C(&qword_100367DE0);
  uint64_t v46 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  id v44 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)((swift_isaMask & *v1) + 0x60);
  sub_10000A38C(&qword_100367DE8);
  uint64_t inited = swift_initStackObject();
  long long v43 = xmmword_10028D430;
  *(_OWORD *)(inited + 16) = xmmword_10028D430;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v13;
  sub_100019E10(0, &qword_100367DF0);
  uint64_t v14 = v1;
  *(NSNumber *)(inited + 48) = NSNumber.init(BOOLeanLiteral:)(1);
  *(void *)((char *)v1 + v11) = sub_1002687C0(inited);
  if (qword_10035A520 != -1) {
    swift_once();
  }
  id v15 = *(id *)(qword_1003AC750 + 728);
  char v16 = sub_1000FD938();

  if (v16)
  {
    uint64_t v17 = swift_initStackObject();
    *(_OWORD *)(v17 + 16) = v43;
    *(void *)(v17 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v17 + 40) = v18;
    *(NSNumber *)(v17 + 48) = NSNumber.init(BOOLeanLiteral:)(1);
    uint64_t v19 = (void *)v17;
  }
  else
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
  }
  *(void *)((char *)v14 + *(void *)((swift_isaMask & *v14) + 0x68)) = sub_1002687C0((uint64_t)v19);
  static String._fromUTF8Repairing(_:)();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v21 = [self bannerSourceForDestination:0 forRequesterIdentifier:v20];

  if (v21)
  {
    *(void *)((char *)v14 + *(void *)((swift_isaMask & *v14) + 0x70)) = v21;
    *(void *)((char *)v14 + *(void *)((swift_isaMask & *v14) + 0x80)) = 0;
    *(void *)((char *)v14 + *(void *)((swift_isaMask & *v14) + 0x88)) = 0;
    *(void *)((char *)v14 + *(void *)((swift_isaMask & *v14) + 0x90)) = 0;
    *(void *)((char *)v14 + *(void *)((swift_isaMask & *v14) + 0x98)) = &_swiftEmptySetSingleton;
    sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, ObjectType, (uint64_t)&off_1003311B0);
    *(void *)((char *)v14 + *(void *)((swift_isaMask & *v14) + 0x78)) = v45;
    swift_retain();

    uint64_t v22 = (objc_class *)sub_10000A38C(&qword_100367DC0);
    v62.receiver = v14;
    v62.super_class = v22;
    uint64_t v23 = [super init];
    unint64_t v24 = *(void **)((char *)v23 + *(void *)((swift_isaMask & *v23) + 0x70));
    uint64_t v25 = v23;
    [v24 setDelegate:v25];
    id v60 = (id)sub_100117AF4();
    v40[1] = sub_100019E10(0, (unint64_t *)&qword_10035A680);
    id v61 = (id)static OS_dispatch_queue.main.getter();
    uint64_t v42 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v26 = *(void *)(v42 - 8);
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
    *(void *)&long long v43 = v26 + 56;
    uint64_t v27 = (uint64_t)v9;
    v41(v9, 1, 1, v42);
    v40[0] = sub_10000A38C(&qword_10035AC80);
    sub_10000B010(&qword_10035AC88, &qword_10035AC80);
    _OWORD v40[2] = sub_10003A8C0();
    uint64_t v28 = v44;
    Publisher.receive<A>(on:options:)();
    sub_10000D78C((uint64_t)v9, &qword_10035AC20);

    swift_release();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    _OWORD v40[3] = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
    sub_10000B010(&qword_100367DF8, &qword_100367DE0);
    uint64_t v29 = v47;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v29);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    id v60 = (id)sub_100117AF4();
    type metadata accessor for HandoffSession();
    uint64_t v30 = v48;
    Publisher.compactMap<A>(_:)();
    swift_release();
    sub_10000A38C(&qword_100367E00);
    uint64_t v31 = v50;
    uint64_t v32 = v51;
    Publishers.CompactMap.map<A>(_:)();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v32);
    sub_10000B010(&qword_100367E08, &qword_100367DC8);
    sub_10000B010(&qword_100367E10, &qword_100367E00);
    Swift::String v33 = v54;
    uint64_t v34 = v53;
    Publisher<>.switchToLatest()();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v31, v34);
    id v60 = (id)static OS_dispatch_queue.main.getter();
    v41((char *)v27, 1, 1, v42);
    sub_10000B010(&qword_100367E18, &qword_100367DD0);
    uint64_t v35 = v57;
    uint64_t v36 = v56;
    Publisher.receive<A>(on:options:)();
    sub_10000D78C(v27, &qword_10035AC20);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v36);
    uint64_t v37 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_10013C6F8;
    *(void *)(v38 + 24) = v37;
    sub_10000B010(&qword_100367E20, &qword_100367DD8);
    uint64_t v39 = v59;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v39);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1001351A4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)v1;
  uint64_t v173 = sub_10000A38C(&qword_100367900);
  uint64_t v172 = *(void *)(v173 - 8);
  __chkstk_darwin(v173);
  id v171 = (char *)&v158 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_10000A38C(&qword_100367908);
  uint64_t v176 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v174 = (char *)&v158 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_10000A38C(&qword_100367910);
  uint64_t v178 = *(void *)(v179 - 8);
  __chkstk_darwin(v179);
  uint64_t v175 = (char *)&v158 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v245 = sub_10000A38C(&qword_100367918);
  uint64_t v244 = *(void *)(v245 - 8);
  __chkstk_darwin(v245);
  v243 = (char *)&v158 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = sub_10000A38C(&qword_100367920);
  uint64_t v235 = *(void *)(v236 - 8);
  __chkstk_darwin(v236);
  v233 = (char *)&v158 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = sub_10000A38C(&qword_100367928);
  uint64_t v238 = *(void *)(v239 - 8);
  __chkstk_darwin(v239);
  v234 = (char *)&v158 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v242 = sub_10000A38C(&qword_100367930);
  uint64_t v241 = *(void *)(v242 - 8);
  uint64_t v11 = __chkstk_darwin(v242);
  v240 = (char *)&v158 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v237 = v12;
  __chkstk_darwin(v11);
  uint64_t v246 = (char *)&v158 - v13;
  uint64_t v227 = sub_10000A38C(&qword_100367938);
  uint64_t v226 = *(void *)(v227 - 8);
  __chkstk_darwin(v227);
  unint64_t v224 = (char *)&v158 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v229 = sub_10000A38C(&qword_100367940);
  uint64_t v230 = *(void *)(v229 - 8);
  __chkstk_darwin(v229);
  v225 = (char *)&v158 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v232 = sub_10000A38C(&qword_100367948);
  uint64_t v231 = *(void *)(v232 - 8);
  __chkstk_darwin(v232);
  unint64_t v228 = (char *)&v158 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = sub_10000A38C(&qword_100367950);
  uint64_t v216 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  uint64_t v215 = (char *)&v158 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = sub_10000A38C(&qword_100367958);
  uint64_t v220 = *(void *)(v222 - 8);
  __chkstk_darwin(v222);
  uint64_t v218 = (char *)&v158 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v223 = sub_10000A38C(&qword_100367960);
  uint64_t v221 = *(void *)(v223 - 8);
  __chkstk_darwin(v223);
  id v219 = (char *)&v158 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = sub_10000A38C(&qword_100367968);
  uint64_t v207 = *(void *)(v208 - 8);
  __chkstk_darwin(v208);
  id v206 = (char *)&v158 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = sub_10000A38C(&qword_100367970);
  uint64_t v211 = *(void *)(v213 - 8);
  __chkstk_darwin(v213);
  uint64_t v209 = (char *)&v158 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = sub_10000A38C(&qword_100367978);
  uint64_t v212 = *(void *)(v214 - 8);
  __chkstk_darwin(v214);
  id v210 = (char *)&v158 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = sub_10000A38C(&qword_100367980);
  uint64_t v198 = *(void *)(v199 - 8);
  __chkstk_darwin(v199);
  id v197 = (char *)&v158 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v247 = (void *)sub_10000A38C(&qword_100367988);
  uint64_t v202 = *(v247 - 1);
  __chkstk_darwin(v247);
  uint64_t v200 = (char *)&v158 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = sub_10000A38C(&qword_100367990);
  uint64_t v203 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v201 = (char *)&v158 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = (void *)sub_10000A38C(&qword_100367998);
  uint64_t v190 = *(v191 - 1);
  __chkstk_darwin(v191);
  uint64_t v188 = (char *)&v158 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class v248 = (void *)sub_10000A38C(&qword_1003679A0);
  uint64_t v184 = *(v248 - 1);
  __chkstk_darwin(v248);
  uint64_t v183 = (char *)&v158 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = sub_10000A38C(&qword_1003679A8);
  uint64_t v186 = *(void *)(v187 - 8);
  __chkstk_darwin(v187);
  uint64_t v185 = (char *)&v158 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = sub_10000A38C(&qword_1003679B0);
  uint64_t v192 = *(void *)(v193 - 8);
  __chkstk_darwin(v193);
  uint64_t v189 = (char *)&v158 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = sub_10000A38C(&qword_1003679B8);
  uint64_t v195 = *(void *)(v196 - 8);
  __chkstk_darwin(v196);
  uint64_t v194 = (char *)&v158 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_10000A38C(&qword_1003679C0);
  uint64_t v166 = *(void *)(v167 - 8);
  __chkstk_darwin(v167);
  uint64_t v165 = (char *)&v158 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_10000A38C(&qword_1003679C8);
  uint64_t v169 = *(void *)(v170 - 8);
  __chkstk_darwin(v170);
  char v168 = (char *)&v158 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_10000A38C(&qword_1003679D0);
  uint64_t v160 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  id v159 = (char *)&v158 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_10000A38C(&qword_1003679D8);
  uint64_t v163 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  uint64_t v162 = (char *)&v158 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v257 = sub_10000A38C(&qword_1003673D0);
  uint64_t v259 = *(void *)(v257 - 8);
  __chkstk_darwin(v257);
  v253 = (char *)&v158 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_10000A38C(&qword_1003679E0);
  unint64_t v205 = *(void *)(v182 - 8);
  __chkstk_darwin(v182);
  double v180 = (char *)&v158 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10000A38C(&qword_1003679E8);
  uint64_t v38 = *(void (***)(char *, void *))(v37 - 8);
  v249 = (void *)v37;
  v250 = v38;
  __chkstk_darwin(v37);
  v181 = (char *)&v158 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10000A38C(&qword_1003673B0);
  uint64_t v41 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  long long v43 = (char *)&v158 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A38C(&qword_100367660);
  swift_allocObject();
  uint64_t v44 = PassthroughSubject.init()();
  *(void *)(v1 + 48) = 0;
  *(unsigned char *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = &_swiftEmptySetSingleton;
  uint64_t v45 = v1 + 64;
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 16) = v44;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, v4, (uint64_t)&off_100324B48);
  *(void *)(v1 + 40) = a1;
  uint64_t v260 = a1;
  swift_retain();
  uint64_t v264 = sub_100117AF4();
  v261[0] = 0;
  v261[1] = 0;
  uint64_t v252 = sub_10000A38C(&qword_10035AC80);
  sub_10000A38C(&qword_100367530);
  uint64_t v46 = sub_10000B010(&qword_10035AC88, &qword_10035AC80);
  Publisher.scan<A>(_:_:)();
  sub_10000B010(&qword_100367538, &qword_1003673B0);
  uint64_t v47 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
  swift_release();
  v261[0] = v47;
  uint64_t v48 = swift_allocObject();
  swift_weakInit();
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = sub_10013BF78;
  *(void *)(v49 + 24) = v48;
  sub_10000A38C(&qword_100367540);
  sub_10000B010((unint64_t *)&unk_100367548, &qword_100367540);
  uint64_t v50 = v2;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  v261[0] = sub_100117AF4();
  uint64_t v51 = type metadata accessor for HandoffSession();
  uint64_t v52 = v253;
  uint64_t v251 = v51;
  uint64_t v256 = v46;
  Publisher.compactMap<A>(_:)();
  swift_release();
  sub_10000A38C(&qword_1003679F0);
  uint64_t v53 = v180;
  uint64_t v54 = v257;
  Publishers.CompactMap.map<A>(_:)();
  uint64_t v55 = *(void (**)(char *, uint64_t))(v259 + 8);
  v259 += 8;
  v255 = v55;
  v55(v52, v54);
  sub_10000B010(&qword_1003679F8, &qword_1003679E0);
  sub_10000B010(&qword_100367A00, &qword_1003679F0);
  uint64_t v56 = v181;
  uint64_t v57 = v182;
  Publisher<>.switchToLatest()();
  (*(void (**)(char *, uint64_t))(v205 + 8))(v53, v57);
  uint64_t v58 = swift_allocObject();
  uint64_t v254 = v50;
  swift_weakInit();
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = sub_10013BFE8;
  *(void *)(v59 + 24) = v58;
  sub_10000B010(&qword_100367A08, &qword_1003679E8);
  id v60 = v249;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v250[1](v56, v60);
  swift_beginAccess();
  uint64_t v258 = v45;
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v262 = &type metadata for Feature;
  unint64_t v205 = sub_10000CC08();
  unint64_t v263 = v205;
  LOBYTE(v261[0]) = 9;
  LOBYTE(v60) = isFeatureEnabled(_:)();
  sub_10000CC5C((uint64_t)v261);
  if (v60)
  {
    v261[0] = sub_100117AF4();
    id v61 = v253;
    Publisher.compactMap<A>(_:)();
    swift_release();
    sub_10000A38C(&qword_100367B88);
    objc_super v62 = v159;
    uint64_t v63 = v257;
    Publishers.CompactMap.map<A>(_:)();
    v255(v61, v63);
    v250 = (void (**)(char *, void *))&protocol conformance descriptor for Publishers.CompactMap<A, B>;
    sub_10000B010(&qword_100367B90, &qword_1003679D0);
    sub_10000B010(&qword_100367B98, &qword_100367B88);
    uint64_t v64 = v162;
    uint64_t v65 = v161;
    Publisher<>.switchToLatest()();
    (*(void (**)(char *, uint64_t))(v160 + 8))(v62, v65);
    uint64_t v66 = swift_allocObject();
    swift_weakInit();
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = sub_10013C274;
    *(void *)(v67 + 24) = v66;
    sub_10000B010(&qword_100367BA0, &qword_1003679D8);
    uint64_t v68 = v164;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v163 + 8))(v64, v68);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    v261[0] = sub_100117AF4();
    Publisher.compactMap<A>(_:)();
    swift_release();
    sub_10000A38C(&qword_100367BA8);
    id v69 = v165;
    Publishers.CompactMap.map<A>(_:)();
    v255(v61, v63);
    sub_10000B010(&qword_100367BB0, &qword_1003679C0);
    sub_10000B010(&qword_100367BB8, &qword_100367BA8);
    uint64_t v70 = v168;
    uint64_t v71 = v167;
    Publisher<>.switchToLatest()();
    (*(void (**)(char *, uint64_t))(v166 + 8))(v69, v71);
    uint64_t v72 = swift_allocObject();
    swift_weakInit();
    uint64_t v73 = swift_allocObject();
    *(void *)(v73 + 16) = sub_10013C2B4;
    *(void *)(v73 + 24) = v72;
    sub_10000B010((unint64_t *)&unk_100367BC0, &qword_1003679C8);
    uint64_t v74 = v170;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v169 + 8))(v70, v74);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
  }
  v261[0] = sub_100117AF4();
  unint64_t v75 = v253;
  Publisher.compactMap<A>(_:)();
  swift_release();
  sub_10000A38C(&qword_100367A18);
  unint64_t v76 = v183;
  uint64_t v77 = v257;
  Publishers.CompactMap.map<A>(_:)();
  v255(v75, v77);
  v250 = (void (**)(char *, void *))&protocol conformance descriptor for Publishers.CompactMap<A, B>;
  sub_10000B010(&qword_100367A20, &qword_1003679A0);
  sub_10000B010(&qword_100367A28, &qword_100367A18);
  uint64_t v78 = v185;
  Swift::String v79 = v248;
  Publisher<>.switchToLatest()();
  (*(void (**)(char *, void *))(v184 + 8))(v76, v79);
  uint64_t v80 = swift_allocObject();
  swift_weakInit();
  uint64_t v81 = swift_allocObject();
  *(void *)(v81 + 16) = sub_10013C048;
  *(void *)(v81 + 24) = v80;
  uint64_t v82 = swift_allocObject();
  *(void *)(v82 + 16) = sub_10013C050;
  *(void *)(v82 + 24) = v81;
  swift_retain();
  sub_10000A38C(&qword_100367A30);
  Class v248 = &protocol conformance descriptor for Publishers.SwitchToLatest<A, B>;
  sub_10000B010(&qword_100367A38, &qword_1003679A8);
  uint64_t v83 = v188;
  uint64_t v84 = v187;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_100367A40, &qword_100367998);
  uint64_t v85 = v191;
  uint64_t v86 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, void *))(v190 + 8))(v83, v85);
  swift_release();
  (*(void (**)(char *, uint64_t))(v186 + 8))(v78, v84);
  v261[0] = v86;
  sub_10000A38C(&qword_100367A48);
  sub_10000A38C(&qword_100367A50);
  uint64_t v191 = &protocol conformance descriptor for AnyPublisher<A, B>;
  sub_10000B010(&qword_100367A58, &qword_100367A48);
  char v87 = v189;
  Publisher.compactMap<A>(_:)();
  swift_release();
  sub_10000B010(&qword_100367A60, &qword_1003679B0);
  v249 = &protocol conformance descriptor for Publishers.Map<A, B>;
  sub_10000B010(&qword_100367A68, &qword_100367A50);
  id v88 = v194;
  uint64_t v89 = v193;
  Publisher<>.switchToLatest()();
  (*(void (**)(char *, uint64_t))(v192 + 8))(v87, v89);
  uint64_t v90 = swift_allocObject();
  swift_weakInit();
  uint64_t v91 = swift_allocObject();
  *(void *)(v91 + 16) = sub_10013C0F4;
  *(void *)(v91 + 24) = v90;
  sub_10000B010(&qword_100367A70, &qword_1003679B8);
  uint64_t v92 = v196;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v195 + 8))(v88, v92);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  v261[0] = sub_100117AF4();
  unint64_t v93 = v253;
  Publisher.compactMap<A>(_:)();
  swift_release();
  sub_10000A38C(&qword_100367A78);
  unint64_t v94 = v197;
  uint64_t v95 = v257;
  Publishers.CompactMap.map<A>(_:)();
  uint64_t v96 = v255;
  v255(v93, v95);
  sub_10000B010(&qword_100367A80, &qword_100367980);
  sub_10000B010(&qword_100367A88, &qword_100367A78);
  uint64_t v97 = v200;
  uint64_t v98 = v199;
  Publisher<>.switchToLatest()();
  (*(void (**)(char *, uint64_t))(v198 + 8))(v94, v98);
  swift_allocObject();
  swift_weakInit();
  sub_10000B010(&qword_100367A90, &qword_100367988);
  id v99 = v201;
  uint64_t v100 = v247;
  Publisher.filter(_:)();
  swift_release();
  (*(void (**)(char *, void *))(v202 + 8))(v97, v100);
  v247 = &protocol conformance descriptor for Publishers.Filter<A>;
  sub_10000B010(&qword_100367A98, &qword_100367990);
  uint64_t v101 = v204;
  Publisher<>.sink(receiveValue:)();
  (*(void (**)(char *, uint64_t))(v203 + 8))(v99, v101);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  v261[0] = sub_100117AF4();
  Publisher.compactMap<A>(_:)();
  swift_release();
  sub_10000A38C(&qword_100367AA0);
  uint64_t v102 = v206;
  uint64_t v103 = v257;
  Publishers.CompactMap.map<A>(_:)();
  v96(v93, v103);
  sub_10000B010(&qword_100367AA8, &qword_100367968);
  sub_10000B010(&qword_100367AB0, &qword_100367AA0);
  uint64_t v104 = v209;
  uint64_t v105 = v208;
  Publisher<>.switchToLatest()();
  (*(void (**)(char *, uint64_t))(v207 + 8))(v102, v105);
  swift_allocObject();
  swift_weakInit();
  sub_10000B010(&qword_100367AB8, &qword_100367970);
  uint64_t v106 = v210;
  uint64_t v107 = v213;
  Publisher.filter(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v211 + 8))(v104, v107);
  sub_10000B010(&qword_100367AC0, &qword_100367978);
  uint64_t v108 = v214;
  Publisher<>.sink(receiveValue:)();
  (*(void (**)(char *, uint64_t))(v212 + 8))(v106, v108);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  v261[0] = sub_100117AF4();
  unint64_t v109 = v253;
  Publisher.compactMap<A>(_:)();
  swift_release();
  sub_10000A38C(&qword_100367AC8);
  unint64_t v110 = v215;
  uint64_t v111 = v257;
  Publishers.CompactMap.map<A>(_:)();
  v255(v109, v111);
  sub_10000B010(&qword_100367AD0, &qword_100367950);
  sub_10000B010(&qword_100367AD8, &qword_100367AC8);
  id v112 = v218;
  uint64_t v113 = v217;
  Publisher<>.switchToLatest()();
  (*(void (**)(char *, uint64_t))(v216 + 8))(v110, v113);
  swift_allocObject();
  swift_weakInit();
  sub_10000B010(&qword_100367AE0, &qword_100367958);
  uint64_t v114 = v219;
  uint64_t v115 = v222;
  Publisher.filter(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v220 + 8))(v112, v115);
  sub_10000B010(&qword_100367AE8, &qword_100367960);
  uint64_t v116 = v223;
  Publisher<>.sink(receiveValue:)();
  (*(void (**)(char *, uint64_t))(v221 + 8))(v114, v116);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  v261[0] = sub_100117AF4();
  uint64_t v117 = v253;
  Publisher.compactMap<A>(_:)();
  swift_release();
  sub_10000A38C(&qword_100367AF0);
  uint64_t v118 = v224;
  uint64_t v119 = v257;
  Publishers.CompactMap.map<A>(_:)();
  id v120 = v117;
  v255(v117, v119);
  sub_10000B010(&qword_100367AF8, &qword_100367938);
  sub_10000B010(&qword_100367B00, &qword_100367AF0);
  uint64_t v121 = v225;
  uint64_t v122 = v227;
  Publisher<>.switchToLatest()();
  (*(void (**)(char *, uint64_t))(v226 + 8))(v118, v122);
  swift_allocObject();
  swift_weakInit();
  sub_10000B010(&qword_100367B08, &qword_100367940);
  Swift::String v123 = v228;
  uint64_t v124 = v229;
  Publisher.filter(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v230 + 8))(v121, v124);
  sub_10000B010(&qword_100367B10, &qword_100367948);
  uint64_t v125 = v232;
  Publisher<>.sink(receiveValue:)();
  (*(void (**)(char *, uint64_t))(v231 + 8))(v123, v125);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  v261[0] = sub_100117AF4();
  Publisher.compactMap<A>(_:)();
  swift_release();
  sub_10000A38C(&qword_100367B18);
  uint64_t v126 = v233;
  Publishers.CompactMap.map<A>(_:)();
  v255(v120, v119);
  sub_10000B010(&qword_100367B20, &qword_100367920);
  sub_10000B010(&qword_100367B28, &qword_100367B18);
  uint64_t v127 = v234;
  uint64_t v128 = v236;
  Publisher<>.switchToLatest()();
  (*(void (**)(char *, uint64_t))(v235 + 8))(v126, v128);
  swift_allocObject();
  swift_weakInit();
  sub_10000B010((unint64_t *)&unk_100367B30, &qword_100367928);
  Swift::UInt64 v129 = v246;
  uint64_t v130 = v239;
  Publisher.filter(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v238 + 8))(v127, v130);
  id v131 = sub_1001F6088();
  uint64_t v132 = v241;
  uint64_t v133 = v240;
  uint64_t v134 = v242;
  (*(void (**)(char *, char *, uint64_t))(v241 + 16))(v240, v129, v242);
  unint64_t v135 = (*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80);
  unint64_t v136 = (v237 + v135 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v137 = (v136 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v138 = (v137 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v139 = swift_allocObject();
  *(void *)(v139 + 16) = 0;
  *(void *)(v139 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v132 + 32))(v139 + v135, v133, v134);
  v140 = (void *)(v139 + v136);
  void *v140 = 0xD000000000000014;
  v140[1] = 0x80000001002BF620;
  uint64_t v141 = (void *)(v139 + v137);
  void *v141 = 0;
  v141[1] = 0xE000000000000000;
  *(void *)(v139 + v138) = v131;
  *(_DWORD *)(v139 + ((v138 + 11) & 0xFFFFFFFFFFFFFFF8)) = 40;
  uint64_t v142 = v254;
  id v143 = v131;
  sub_10000A38C(&qword_10035D060);
  sub_10000B010(&qword_100367B40, &qword_100367930);
  v144 = v243;
  uint64_t v145 = v134;
  uint64_t v146 = v246;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_100367B48, &qword_100367918);
  uint64_t v147 = v245;
  uint64_t v148 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v244 + 8))(v144, v147);

  (*(void (**)(char *, uint64_t))(v132 + 8))(v146, v145);
  v261[0] = v148;
  sub_10000A38C(&qword_100367B50);
  sub_10000B010(&qword_100367B58, &qword_100367B50);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v262 = &type metadata for Feature;
  unint64_t v263 = v205;
  LOBYTE(v261[0]) = 9;
  LOBYTE(v143) = isFeatureEnabled(_:)();
  sub_10000CC5C((uint64_t)v261);
  if (v143)
  {
    v261[0] = sub_100117AF4();
    unint64_t v149 = v253;
    Publisher.compactMap<A>(_:)();
    swift_release();
    sub_10000A38C(&qword_100367B60);
    unint64_t v150 = v171;
    uint64_t v151 = v257;
    Publishers.CompactMap.map<A>(_:)();
    v255(v149, v151);
    sub_10000B010(&qword_100367B68, &qword_100367900);
    sub_10000B010(&qword_100367B70, &qword_100367B60);
    unint64_t v152 = v174;
    uint64_t v153 = v173;
    Publisher<>.switchToLatest()();
    (*(void (**)(char *, uint64_t))(v172 + 8))(v150, v153);
    swift_allocObject();
    swift_weakInit();
    sub_10000B010(&qword_100367B78, &qword_100367908);
    v154 = v175;
    uint64_t v155 = v177;
    Publisher.filter(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v176 + 8))(v152, v155);
    sub_10000B010(&qword_100367B80, &qword_100367910);
    uint64_t v156 = v179;
    Publisher<>.sink(receiveValue:)();
    (*(void (**)(char *, uint64_t))(v178 + 8))(v154, v156);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
  }
  return v142;
}

void *sub_100138280(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v204 = a1;
  uint64_t v191 = (void (*)(void, void))*v1;
  uint64_t v184 = sub_10000A38C(&qword_100367358);
  uint64_t v183 = *(void *)(v184 - 8);
  __chkstk_darwin(v184);
  uint64_t v182 = (char *)&v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_10000A38C(&qword_100367360);
  uint64_t v180 = *(void *)(v181 - 8);
  __chkstk_darwin(v181);
  uint64_t v179 = (char *)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_10000A38C(&qword_100367368);
  uint64_t v174 = *(void *)(v175 - 8);
  __chkstk_darwin(v175);
  uint64_t v173 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = sub_10000A38C(&qword_100367370);
  uint64_t v177 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  uint64_t v176 = (char *)&v134 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_10000A38C(&qword_100367378);
  uint64_t v199 = *(void *)(v188 - 8);
  __chkstk_darwin(v188);
  id v171 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = sub_10000A38C(&qword_100367380);
  uint64_t v201 = *(void *)(v195 - 8);
  __chkstk_darwin(v195);
  uint64_t v172 = (char *)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_10000A38C(&qword_100367388);
  uint64_t v187 = *(void (***)(char *, uint64_t))(v189 - 8);
  __chkstk_darwin(v189);
  uint64_t v186 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_10000A38C(&qword_100367390);
  uint64_t v167 = *(void *)(v168 - 8);
  __chkstk_darwin(v168);
  uint64_t v166 = (char *)&v134 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_10000A38C((uint64_t *)&unk_100367398);
  uint64_t v170 = *(void *)(v185 - 8);
  __chkstk_darwin(v185);
  uint64_t v169 = (char *)&v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000A38C(&qword_10035AC20);
  __chkstk_darwin(v12 - 8);
  uint64_t v165 = (char *)&v134 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000A38C(&qword_1003673A8);
  __chkstk_darwin(v14 - 8);
  id v159 = (char *)&v134 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v190 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  v157 = (char *)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_10000A38C(&qword_1003673B0);
  uint64_t v155 = *(void (***)(char *, uint64_t))(v154 - 8);
  __chkstk_darwin(v154);
  uint64_t v153 = (char *)&v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_10000A38C(&qword_1003673B8);
  uint64_t v160 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  uint64_t v156 = (char *)&v134 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = (void *)sub_10000A38C(&qword_1003673C0);
  uint64_t v163 = *(v164 - 1);
  __chkstk_darwin(v164);
  uint64_t v162 = (char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_10000A38C(&qword_1003673C8);
  uint64_t v196 = *(void (**)(char *, uint64_t))(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v148 = (char *)&v134 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = sub_10000A38C(&qword_1003673D0);
  uint64_t v200 = *(void *)(v194 - 8);
  __chkstk_darwin(v194);
  uint64_t v193 = (char *)&v134 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_10000A38C(&qword_1003673D8);
  uint64_t v152 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  unint64_t v149 = (char *)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = sub_10000A38C(&qword_1003673E0);
  uint64_t v198 = *(void *)(v192 - 8);
  __chkstk_darwin(v192);
  uint64_t v146 = (char *)&v134 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_10000A38C(&qword_1003673E8);
  uint64_t v147 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  v144 = (char *)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_10000A38C(&qword_1003673F0);
  uint64_t v140 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  unint64_t v138 = (char *)&v134 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_10000A38C(&qword_1003673F8);
  uint64_t v143 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v141 = (char *)&v134 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_10000A38C(&qword_100367400);
  uint64_t v137 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  unint64_t v135 = (char *)&v134 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000A38C(&qword_100367408);
  uint64_t v29 = swift_allocObject();
  *(unsigned char *)(v29 + 24) = 0;
  *(void *)(v29 + 32) = [objc_allocWithZone((Class)NSLock) init];
  sub_10000A38C(&qword_100367410);
  swift_allocObject();
  uint64_t v30 = PassthroughSubject.init()();
  sub_10000A38C(&qword_100367418);
  swift_allocObject();
  uint64_t v31 = PassthroughSubject.init()();
  swift_allocObject();
  uint64_t v32 = PassthroughSubject.init()();
  *(void *)(v29 + 40) = v30;
  *(void *)(v29 + 48) = v31;
  *(void *)(v29 + 56) = v32;
  *(void *)(v29 + 64) = &_swiftEmptyDictionarySingleton;
  *(void *)(v29 + 72) = 0;
  *(void *)(v29 + 16) = KeyPath;
  *(unsigned char *)(v29 + 24) = 0;
  v1[2] = v29;
  uint64_t v33 = swift_getKeyPath();
  sub_10000A38C(&qword_100367420);
  uint64_t v34 = swift_allocObject();
  *(unsigned char *)(v34 + 24) = 0;
  *(void *)(v34 + 32) = [objc_allocWithZone((Class)NSLock) init];
  sub_10000A38C(&qword_100367428);
  swift_allocObject();
  uint64_t v35 = PassthroughSubject.init()();
  sub_10000A38C(&qword_100367430);
  swift_allocObject();
  uint64_t v36 = PassthroughSubject.init()();
  swift_allocObject();
  uint64_t v37 = PassthroughSubject.init()();
  *(void *)(v34 + 40) = v35;
  *(void *)(v34 + 48) = v36;
  *(void *)(v34 + 56) = v37;
  *(void *)(v34 + 64) = &_swiftEmptyDictionarySingleton;
  *(void *)(v34 + 72) = 0;
  *(void *)(v34 + 16) = v33;
  *(unsigned char *)(v34 + 24) = 0;
  v1[3] = v34;
  uint64_t v38 = swift_getKeyPath();
  sub_10000A38C(&qword_100367438);
  uint64_t v39 = swift_allocObject();
  *(unsigned char *)(v39 + 24) = 0;
  *(void *)(v39 + 32) = [objc_allocWithZone((Class)NSLock) init];
  sub_10000A38C(&qword_100367440);
  swift_allocObject();
  uint64_t v40 = PassthroughSubject.init()();
  sub_10000A38C(&qword_100367448);
  swift_allocObject();
  uint64_t v41 = PassthroughSubject.init()();
  swift_allocObject();
  uint64_t v42 = PassthroughSubject.init()();
  *(void *)(v39 + 40) = v40;
  *(void *)(v39 + 48) = v41;
  *(void *)(v39 + 56) = v42;
  *(void *)(v39 + 64) = &_swiftEmptyDictionarySingleton;
  *(void *)(v39 + 72) = 0;
  *(void *)(v39 + 16) = v38;
  *(unsigned char *)(v39 + 24) = 0;
  v1[4] = v39;
  type metadata accessor for SystemHistory(0);
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = v43 + OBJC_IVAR____TtC17proximitycontrold13SystemHistory_charging;
  uint64_t v45 = sub_10000A38C((uint64_t *)&unk_100367450);
  uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56);
  v46(v44, 1, 1, v45);
  v46(v43 + OBJC_IVAR____TtC17proximitycontrold13SystemHistory_deviceMotionStationary, 1, 1, v45);
  v46(v43 + OBJC_IVAR____TtC17proximitycontrold13SystemHistory_orientationIsValid, 1, 1, v45);
  v46(v43 + OBJC_IVAR____TtC17proximitycontrold13SystemHistory_screenOn, 1, 1, v45);
  v46(v43 + OBJC_IVAR____TtC17proximitycontrold13SystemHistory_ranging, 1, 1, v45);
  v2[5] = v43;
  v2[6] = sub_100268670((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v203 = v2;
  v2[7] = &_swiftEmptySetSingleton;
  uint64_t v47 = v2 + 7;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, (uint64_t)v191, (uint64_t)&off_100320198);
  uint64_t v48 = v204;
  sub_1001256FC(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___systemEventManager, &qword_100367800, 40, (uint64_t (*)(uint64_t))sub_100133E20);
  uint64_t v49 = (void *)sub_10011A9A0(&qword_1003677F0, &qword_1003677F8);
  swift_release();
  id v206 = v49;
  sub_10000A38C(&qword_10035F5A8);
  sub_10000A38C((uint64_t *)&unk_100367460);
  sub_10000B010(&qword_10035F5B0, &qword_10035F5A8);
  uint64_t v50 = v135;
  Publisher.map<A>(_:)();
  id v197 = &protocol conformance descriptor for Publishers.Map<A, B>;
  sub_10000B010(&qword_100367470, &qword_100367400);
  uint64_t v51 = v136;
  uint64_t v52 = (void *)Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v50, v51);
  swift_release();
  id v206 = v52;
  uint64_t v53 = swift_allocObject();
  swift_weakInit();
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = sub_10013B044;
  *(void *)(v54 + 24) = v53;
  sub_10000A38C(&qword_100367478);
  sub_10000B010((unint64_t *)&unk_100367480, &qword_100367478);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v137 = *(void *)(v48 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_deviceStorage);
  id v206 = *(id *)(v137 + 40);
  uint64_t v136 = sub_10000A38C(&qword_10035ABB8);
  sub_10000B010(&qword_10035ABC0, &qword_10035ABB8);
  id v206 = (id)Publisher.eraseToAnyPublisher()();
  unint64_t v135 = (char *)sub_10000A38C(&qword_10035ABC8);
  sub_10000A38C((uint64_t *)&unk_100367490);
  uint64_t v134 = &protocol conformance descriptor for AnyPublisher<A, B>;
  sub_10000B010(&qword_10035ABD0, &qword_10035ABC8);
  uint64_t v55 = v138;
  Publisher.map<A>(_:)();
  sub_10000B010(&qword_1003674A0, &qword_1003673F0);
  uint64_t v56 = v139;
  uint64_t v57 = (void *)Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v140 + 8))(v55, v56);
  swift_release();
  id v206 = v57;
  sub_10000A38C(&qword_1003674A8);
  type metadata accessor for DeviceHistory(0);
  sub_10000B010(&qword_1003674B0, &qword_1003674A8);
  uint64_t v58 = v141;
  Publisher.map<A>(_:)();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_10000B010(&qword_1003674B8, &qword_1003673F8);
  uint64_t v59 = v142;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v143 + 8))(v58, v59);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v206 = *(id *)(v137 + 56);
  id v206 = (id)Publisher.eraseToAnyPublisher()();
  swift_allocObject();
  swift_weakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v206 = (id)sub_10011A510(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___deviceUXRegionPublisher, (uint64_t)&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_deviceUXRegionSubject, &qword_1003677C0, &qword_1003677C8);
  sub_10000A38C(&qword_1003674C0);
  sub_10000A38C(&qword_1003674C8);
  sub_10000B010(&qword_1003674D0, &qword_1003674C0);
  id v60 = v144;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000A38C(&qword_1003674D8);
  sub_10000B010(&qword_1003674E0, &qword_1003673E8);
  id v61 = v146;
  uint64_t v62 = v145;
  Publisher.map<A>(_:)();
  sub_10000B010(&qword_1003674E8, &qword_1003673E0);
  uint64_t v63 = v192;
  uint64_t v64 = (void *)Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v198 + 8))(v61, v63);
  (*(void (**)(char *, uint64_t))(v147 + 8))(v60, v62);
  id v206 = v64;
  uint64_t v65 = swift_allocObject();
  swift_weakInit();
  uint64_t v66 = swift_allocObject();
  *(void *)(v66 + 16) = sub_10013B0B0;
  *(void *)(v66 + 24) = v65;
  sub_10000A38C(&qword_1003674F0);
  sub_10000B010(&qword_1003674F8, &qword_1003674F0);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v206 = (id)sub_100117AF4();
  uint64_t v198 = sub_10000A38C(&qword_10035AC80);
  uint64_t v67 = type metadata accessor for HandoffSession();
  uint64_t v68 = sub_10000B010(&qword_10035AC88, &qword_10035AC80);
  id v69 = v193;
  uint64_t v192 = v67;
  Publisher.compactMap<A>(_:)();
  swift_release();
  sub_10000A38C(&qword_100367500);
  sub_10000B010(&qword_100367508, &qword_1003673D0);
  uint64_t v70 = v148;
  uint64_t v71 = v194;
  Publisher.map<A>(_:)();
  sub_10000B010(&qword_100367510, &qword_1003673C8);
  uint64_t v72 = v150;
  uint64_t v73 = v70;
  uint64_t v74 = (void *)Publisher.eraseToAnyPublisher()();
  (*((void (**)(char *, uint64_t))v196 + 1))(v73, v72);
  unint64_t v75 = *(void (**)(char *, uint64_t))(v200 + 8);
  v200 += 8;
  uint64_t v196 = v75;
  v75(v69, v71);
  id v206 = v74;
  sub_10000A38C(&qword_100367518);
  type metadata accessor for SessionHistory(0);
  sub_10000B010(&qword_100367520, &qword_100367518);
  unint64_t v76 = v149;
  Publisher.map<A>(_:)();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_10000B010(&qword_100367528, &qword_1003673D8);
  uint64_t v77 = v151;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v152 + 8))(v76, v77);
  swift_beginAccess();
  uint64_t v202 = v47;
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v205 = sub_100117AF4();
  id v206 = 0;
  uint64_t v207 = 0;
  sub_10000A38C(&qword_100367530);
  uint64_t v78 = v153;
  id v197 = (void *)v68;
  Publisher.scan<A>(_:_:)();
  sub_10000B010(&qword_100367538, &qword_1003673B0);
  uint64_t v79 = v154;
  uint64_t v80 = (void *)Publisher.eraseToAnyPublisher()();
  v155[1](v78, v79);
  swift_release();
  id v206 = v80;
  sub_10000A38C(&qword_100367540);
  sub_10000B010((unint64_t *)&unk_100367548, &qword_100367540);
  uint64_t v81 = v156;
  Publisher.compactMap<A>(_:)();
  swift_release();
  uint64_t v82 = v157;
  OS_dispatch_queue.SchedulerTimeType.Stride.init(integerLiteral:)();
  uint64_t v83 = v159;
  uint64_t v84 = v158;
  (*(void (**)(void))(v190 + 56))();
  if (qword_10035A628 != -1) {
    swift_once();
  }
  uint64_t v85 = (void *)qword_1003ACB50;
  id v206 = (id)qword_1003ACB50;
  uint64_t v86 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v87 = (uint64_t)v165;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v165, 1, 1, v86);
  sub_100019E10(0, (unint64_t *)&qword_10035A680);
  uint64_t v155 = (void (**)(char *, uint64_t))&protocol conformance descriptor for Publishers.CompactMap<A, B>;
  sub_10000B010((unint64_t *)&unk_100367558, &qword_1003673B8);
  sub_10003A8C0();
  id v88 = v85;
  uint64_t v89 = v162;
  uint64_t v90 = (uint64_t)v83;
  uint64_t v91 = v161;
  Publisher.delay<A>(for:tolerance:scheduler:options:)();
  sub_10000D78C(v87, &qword_10035AC20);

  sub_10000D78C(v90, &qword_1003673A8);
  (*(void (**)(char *, uint64_t))(v190 + 8))(v82, v84);
  (*(void (**)(char *, uint64_t))(v160 + 8))(v81, v91);
  uint64_t v92 = swift_allocObject();
  unint64_t v93 = v203;
  swift_weakInit();
  uint64_t v94 = swift_allocObject();
  uint64_t v95 = v191;
  *(void *)(v94 + 16) = v92;
  *(void *)(v94 + 24) = v95;
  sub_10000B010(&qword_100367568, &qword_1003673C0);
  uint64_t v96 = v164;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, void *))(v163 + 8))(v89, v96);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v97 = *(void *)(sub_10012560C(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___transferManager, (void (*)(void))type metadata accessor for HandoffTransferManager, 72, (uint64_t (*)(uint64_t))sub_1002130FC)+ 48);
  swift_retain();
  swift_release();
  id v206 = *(id *)(v97 + 40);
  sub_10000A38C(&qword_100367570);
  sub_10000B010(&qword_100367578, &qword_100367570);
  uint64_t v98 = (void *)Publisher.eraseToAnyPublisher()();
  swift_release();
  id v206 = v98;
  sub_10000A38C(&qword_100367580);
  sub_10000A38C(&qword_100367588);
  sub_10000B010(&qword_100367590, &qword_100367580);
  id v99 = v166;
  Publisher.map<A>(_:)();
  sub_10000B010(&qword_100367598, &qword_100367390);
  uint64_t v100 = v168;
  uint64_t v101 = (void *)Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v167 + 8))(v99, v100);
  swift_release();
  id v206 = v101;
  sub_10000A38C(&qword_1003675A0);
  type metadata accessor for TransferRecord();
  sub_10000B010(&qword_1003675A8, &qword_1003675A0);
  uint64_t v102 = v169;
  Publisher.map<A>(_:)();
  swift_release();
  uint64_t v103 = swift_allocObject();
  *(void *)(v103 + 16) = sub_10013B124;
  *(void *)(v103 + 24) = v93;
  uint64_t v165 = (char *)&protocol conformance descriptor for Publishers.Map<A, B>;
  sub_10000B010(&qword_1003675B0, (uint64_t *)&unk_100367398);
  swift_retain_n();
  uint64_t v104 = v186;
  uint64_t v105 = v185;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_1003675B8, &qword_100367388);
  uint64_t v106 = v189;
  uint64_t v107 = (void *)Publisher.eraseToAnyPublisher()();
  v187[1](v104, v106);
  swift_release();
  (*(void (**)(char *, uint64_t))(v170 + 8))(v102, v105);
  id v206 = v107;
  swift_allocObject();
  swift_weakInit();
  sub_10000A38C(&qword_1003675C0);
  uint64_t v164 = &protocol conformance descriptor for AnyPublisher<A, B>;
  sub_10000B010(&qword_1003675C8, &qword_1003675C0);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v206 = (id)sub_100117AF4();
  uint64_t v108 = v193;
  Publisher.compactMap<A>(_:)();
  swift_release();
  uint64_t v186 = (char *)sub_10000A38C(&qword_1003675D0);
  unint64_t v109 = v171;
  uint64_t v110 = v194;
  Publishers.CompactMap.map<A>(_:)();
  v196(v108, v110);
  uint64_t v185 = sub_10000B010(&qword_1003675D8, &qword_100367378);
  uint64_t v190 = sub_10000B010(&qword_1003675E0, &qword_1003675D0);
  uint64_t v111 = v172;
  uint64_t v112 = v188;
  Publisher<>.switchToLatest()();
  uint64_t v113 = *(void (***)(char *, uint64_t))(v199 + 8);
  v199 += 8;
  uint64_t v187 = v113;
  ((void (*)(char *, uint64_t))v113)(v109, v112);
  swift_allocObject();
  swift_weakInit();
  uint64_t v189 = sub_10000B010(&qword_1003675E8, &qword_100367380);
  uint64_t v114 = v195;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  uint64_t v115 = *(void (**)(void, void))(v201 + 8);
  v201 += 8;
  uint64_t v191 = v115;
  v115(v111, v114);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v206 = (id)sub_100117AF4();
  Publisher.compactMap<A>(_:)();
  swift_release();
  Publishers.CompactMap.map<A>(_:)();
  v196(v108, v110);
  Publisher<>.switchToLatest()();
  ((void (*)(char *, uint64_t))v187)(v109, v112);
  swift_allocObject();
  swift_weakInit();
  uint64_t v116 = v195;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v191(v111, v116);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v206 = (id)sub_100117AF4();
  uint64_t v117 = v193;
  Publisher.compactMap<A>(_:)();
  swift_release();
  uint64_t v118 = v194;
  Publishers.CompactMap.map<A>(_:)();
  v196(v117, v118);
  uint64_t v119 = v188;
  Publisher<>.switchToLatest()();
  id v120 = v187;
  ((void (*)(char *, uint64_t))v187)(v109, v119);
  swift_allocObject();
  swift_weakInit();
  uint64_t v121 = v195;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v191(v111, v121);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v206 = (id)sub_100117AF4();
  Publisher.compactMap<A>(_:)();
  swift_release();
  Publishers.CompactMap.map<A>(_:)();
  v196(v117, v118);
  Publisher<>.switchToLatest()();
  ((void (*)(char *, uint64_t))v120)(v109, v119);
  swift_allocObject();
  swift_weakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v191(v111, v121);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v206 = (id)sub_10011A510(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___experienceEventSessionIDReasonPublisher, (uint64_t)&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_experienceEventSessionIDReasonSubject, &qword_100367678, &qword_100367680);
  sub_10000A38C((uint64_t *)&unk_1003675F0);
  type metadata accessor for HandoffEvent();
  sub_10000B010(&qword_10035F5B8, (uint64_t *)&unk_1003675F0);
  uint64_t v122 = v173;
  Publisher.map<A>(_:)();
  swift_release();
  sub_10000B010(&qword_100367600, &qword_100367368);
  Swift::String v123 = v176;
  uint64_t v124 = v175;
  Publisher.filter(_:)();
  (*(void (**)(char *, uint64_t))(v174 + 8))(v122, v124);
  sub_10000A38C(&qword_100367608);
  sub_10000B010(&qword_100367610, &qword_100367370);
  uint64_t v125 = v179;
  uint64_t v126 = v178;
  Publisher.map<A>(_:)();
  sub_10000B010(&qword_100367618, &qword_100367360);
  uint64_t v127 = v181;
  uint64_t v128 = (void *)Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v180 + 8))(v125, v127);
  (*(void (**)(char *, uint64_t))(v177 + 8))(v123, v126);
  id v206 = v128;
  swift_allocObject();
  Swift::UInt64 v129 = v203;
  swift_weakInit();
  sub_10000A38C(&qword_100367620);
  sub_10000B010(&qword_100367628, &qword_100367620);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  sub_1001256FC(&OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment____lazy_storage___viewServicePresenter, &qword_100367348, 72, sub_1001351A4);
  uint64_t v130 = (void *)sub_10011A9A0(&qword_100367660, (unint64_t *)&unk_100367668);
  swift_release();
  id v206 = v130;
  sub_10000A38C(&qword_100367630);
  sub_10000A38C(&qword_100367638);
  sub_10000B010(&qword_100367640, &qword_100367630);
  id v131 = v182;
  Publisher.map<A>(_:)();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_10000B010(&qword_100367648, &qword_100367358);
  uint64_t v132 = v184;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v183 + 8))(v131, v132);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  return v129;
}

uint64_t sub_10013B044(char a1, uint64_t a2)
{
  return sub_100117F08(a1, a2);
}

uint64_t sub_10013B04C(unsigned __int8 *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, unsigned __int8 *))(v1 + 16);
  uint64_t v4 = *a1;
  uint64_t v5 = sub_10000A38C((uint64_t *)&unk_100367460);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_10013B09C(uint64_t *a1)
{
  return sub_100131DD0(a1);
}

uint64_t sub_10013B0A4()
{
  return sub_100118014();
}

uint64_t sub_10013B0B0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1001181C4(a1, a2 | ((HIDWORD(a2) & 1) << 32), a3);
}

uint64_t sub_10013B0CC(uint64_t a1)
{
  return sub_1001182E0(a1, *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v1 + 16));
}

uint64_t sub_10013B0D4(uint64_t *a1)
{
  return sub_100132018(a1);
}

uint64_t sub_10013B0DC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10013B114(uint64_t a1)
{
  return sub_100118368(*(void *)a1, *(void **)(a1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10013B124(uint64_t *a1)
{
  return sub_10013213C(a1);
}

uint64_t sub_10013B12C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void (**)(uint64_t *))(v2 + 16);
  uint64_t v7 = *a1;
  uint64_t v5 = v7;
  v4(&v7);
  *a2 = v5;

  return swift_retain();
}

uint64_t sub_10013B18C(uint64_t *a1)
{
  return sub_1001321B4(a1);
}

uint64_t sub_10013B194(uint64_t a1)
{
  return sub_100119894(a1);
}

uint64_t sub_10013B1B0(uint64_t a1)
{
  return sub_100119B74(a1, v1, &qword_100367608);
}

uint64_t sub_10013B1D4(uint64_t a1)
{
  return sub_100119B74(a1, v1, &qword_100367638);
}

uint64_t sub_10013B1F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100119778(a1, a2);
}

uint64_t sub_10013B200()
{
  sub_10000CC5C(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10013B238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10012FF44(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_10013B254@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100119310(*a1, a2);
}

uint64_t sub_10013B260@<X0>(__int16 *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_10013231C(a1, a2);
}

uint64_t sub_10013B268@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100118A00(a1, a2);
}

uint64_t sub_10013B270(uint64_t a1)
{
  return sub_1001185E8(a1);
}

uint64_t sub_10013B278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v53 = a3;
  uint64_t v6 = *a4;
  uint64_t v7 = sub_10000A38C(&qword_10035E158);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v52 = (uint64_t)&v52 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v52 - v13;
  uint64_t v15 = type metadata accessor for HandoffSession();
  uint64_t v64 = &off_100321AC0;
  uint64_t v65 = &off_10035F1C0;
  uint64_t v66 = &off_1003218B0;
  uint64_t v67 = &off_100321890;
  a4[8] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v16 = (char *)a4 + OBJC_IVAR____TtC17proximitycontrold14SessionHistory_initialDeviceUXRegion;
  uint64_t v63 = v15;
  v62[0] = a1;
  uint64_t v17 = sub_10000A38C((uint64_t *)&unk_100367790);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *((unsigned char *)a4 + OBJC_IVAR____TtC17proximitycontrold14SessionHistory_initialUIType) = 2;
  uint64_t v18 = (char *)a4 + OBJC_IVAR____TtC17proximitycontrold14SessionHistory_sessionEnded;
  uint64_t v19 = sub_10000A38C(&qword_1003652D0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = OBJC_IVAR____TtC17proximitycontrold14SessionHistory_userHasDoneHandoffCardBeforeSession;
  if (qword_10035A520 != -1) {
    swift_once();
  }
  id v21 = *(id *)(qword_1003AC750 + 552);
  char v22 = sub_1000FD938();

  *((unsigned char *)a4 + v20) = v22 & 1;
  uint64_t v23 = OBJC_IVAR____TtC17proximitycontrold14SessionHistory_userHasDoneHandoffHintBeforeSession;
  id v24 = *(id *)(qword_1003AC750 + 560);
  char v25 = sub_1000FD938();

  *((unsigned char *)a4 + v23) = v25 & 1;
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC17proximitycontrold14SessionHistory_cardCount) = 0;
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC17proximitycontrold14SessionHistory_card) = 0;
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC17proximitycontrold14SessionHistory_hintCount) = 0;
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC17proximitycontrold14SessionHistory_hint) = 0;
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC17proximitycontrold14SessionHistory_education) = 0;
  *((unsigned char *)a4 + OBJC_IVAR____TtC17proximitycontrold14SessionHistory_published) = 0;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, v6, (uint64_t)&off_1003378E0);
  a4[2] = UUID.uuidString.getter();
  a4[3] = v26;
  a4[4] = UUID.uuidString.getter();
  a4[5] = v27;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v28 = sub_1000983CC();
  uint64_t v30 = v29;
  swift_release();
  a4[6] = v28;
  a4[7] = v30;
  sub_100071454(a1 + 32, (uint64_t)&v59);
  swift_retain();
  CurrentValueSubject.value.getter();
  if (v56)
  {
    CurrentValueSubject.value.getter();
    swift_release();
    int v31 = v57;
    char v32 = v58;
  }
  else
  {
    int v31 = v54;
    char v33 = v55;
    swift_release();
    char v32 = v33 & 1;
  }
  uint64_t v34 = (char *)a4 + OBJC_IVAR____TtC17proximitycontrold14SessionHistory_sessionStarted;
  sub_10013B98C((uint64_t)&v59, (uint64_t)a4 + OBJC_IVAR____TtC17proximitycontrold14SessionHistory_sessionStarted);
  uint64_t v35 = sub_10000A38C(&qword_1003677A0);
  uint64_t v36 = &v34[*(int *)(v35 + 28)];
  uint64_t v37 = type metadata accessor for Date();
  uint64_t v38 = *(void *)(v37 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v36, v53, v37);
  uint64_t v39 = &v34[*(int *)(v35 + 32)];
  *(_DWORD *)uint64_t v39 = v31;
  v39[4] = v32;
  sub_10000D6E4(v62, v63);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v40 = sub_10000D680((uint64_t *)&v59);
  *uint64_t v40 = (uint64_t)sub_10003C908();
  sub_10000D7E8(&v59, (uint64_t)a4 + OBJC_IVAR____TtC17proximitycontrold14SessionHistory_educationFlowPolicy);
  if (qword_10035A590 != -1) {
    swift_once();
  }
  sub_100141A0C();
  sub_10014215C();
  swift_release();
  uint64_t v41 = qword_1003AC750;
  Date.init()();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v14, 0, 1, v37);
  uint64_t v42 = *(void **)(v41 + 592);
  uint64_t v43 = v52;
  sub_10000D728((uint64_t)v14, v52, &qword_10035E158);
  id v44 = v42;
  sub_10012BB2C(v43);

  sub_10000D78C((uint64_t)v14, &qword_10035E158);
  id v45 = *(id *)(qword_1003AC750 + 624);
  sub_1000FDE78((uint64_t)v10);

  LODWORD(v45) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v10, 1, v37);
  sub_10000D78C((uint64_t)v10, &qword_10035E158);
  if (v45 == 1) {
    goto LABEL_13;
  }
  uint64_t v46 = *(id *)(qword_1003AC750 + 632);
  uint64_t result = sub_1000FE668();
  uint64_t v48 = result + 1;
  if (!__OFADD__(result, 1))
  {
    uint64_t v49 = *(void **)((char *)v46 + *(void *)((swift_isaMask & *v46) + 0x70));
    if (v49)
    {
      id v50 = v49;
      uint64_t v51 = String._bridgeToObjectiveC()();
      [v50 setInteger:v48 forKey:v51];

      uint64_t v46 = v51;
    }

LABEL_13:
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v53, v37);
    sub_10000CC5C((uint64_t)v62);
    return (uint64_t)a4;
  }
  __break(1u);
  return result;
}

uint64_t sub_10013B98C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10013B9E8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void *)(result + 48);
    char v2 = *(unsigned char *)(result + 56);
    swift_retain();
    swift_release();
    if (v1)
    {
      swift_release();
      return (v2 & 1) == 0;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_10013BA74(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a3)
  {
    if (a1)
    {
      swift_errorRetain();
      v7._uint64_t countAndFlagsBits = 539173667;
      v7._unint64_t object = (void *)0xE400000000000000;
      String.append(_:)(v7);
      v8._uint64_t countAndFlagsBits = a2;
      v8._unint64_t object = a3;
      String.append(_:)(v8);
      v9._uint64_t countAndFlagsBits = 8250;
      v9._unint64_t object = (void *)0xE200000000000000;
      String.append(_:)(v9);
      sub_10000A38C((uint64_t *)&unk_100365D60);
      _print_unlocked<A, B>(_:_:)();
      if (a4)
      {
        id v10 = a4;
        NSString v11 = String._bridgeToObjectiveC()();
        [v10 ulog:90 message:v11];
        swift_bridgeObjectRelease();
      }
      else
      {
        NSLog(_:_:)();
        swift_bridgeObjectRelease();
      }
      swift_errorRelease();
    }
    else if (a4)
    {
      id v12 = a4;
      NSString v13 = String._bridgeToObjectiveC()();
      [v12 ulog:40 message:v13];
    }
    else
    {
      NSLog(_:_:)();
    }
  }
}

uint64_t sub_10013BC40()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void *)(result + 16);
    swift_unownedRetainStrong();
    swift_release();
    char v2 = *(void **)(v1 + OBJC_IVAR____TtC17proximitycontrold18HandoffEnvironment_hapticPlayer);
    swift_unknownObjectRetain();
    swift_release();
    [v2 invalidate];
    return swift_unknownObjectRelease();
  }
  return result;
}

char *sub_10013BCD4(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5 = &a3[OBJC_IVAR____TtC17proximitycontrold13DeviceHistory_previousUXRegion];
  uint64_t v6 = sub_10000A38C((uint64_t *)&unk_100367790);
  Swift::String v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  v7(&a3[OBJC_IVAR____TtC17proximitycontrold13DeviceHistory_uxRegion], 1, 1, v6);
  *(void *)&a3[OBJC_IVAR____TtC17proximitycontrold13DeviceHistory_tasks] = &_swiftEmptySetSingleton;
  *((void *)a3 + 2) = UUID.uuidString.getter();
  *((void *)a3 + 3) = v8;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v9 = sub_1000983CC();
  uint64_t v11 = v10;
  swift_release();
  *((void *)a3 + 4) = v9;
  *((void *)a3 + 5) = v11;
  id v12 = &a3[OBJC_IVAR____TtC17proximitycontrold13DeviceHistory_discoveryTime];
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a2, v13);
  return a3;
}

uint64_t sub_10013BE78()
{
  return sub_10011A5E4();
}

uint64_t sub_10013BE84()
{
  return sub_10011A66C();
}

uint64_t sub_10013BE90()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 84, 7);
}

uint64_t sub_10013BEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100038A60(*(void *)a1, *(unsigned char *)(a1 + 8), *(uint64_t (**)(uint64_t *))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void **)(v2 + 64), *(void **)(v2 + 72), *(_DWORD *)(v2 + 80));
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

unint64_t sub_10013BF4C(uint64_t a1)
{
  return sub_10011A6F8(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10013BF60()
{
  return sub_10011A884();
}

uint64_t sub_10013BF6C()
{
  return sub_10011A914();
}

uint64_t sub_10013BF78(uint64_t a1, uint64_t a2)
{
  return sub_10011AA58(a1, a2);
}

uint64_t sub_10013BF80()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10013BFB8(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_10013BFE8(uint64_t a1, uint64_t a2)
{
  return sub_10011AB40(a1, a2, v2, (void (*)(uint64_t, uint64_t))sub_10011B5B8);
}

uint64_t sub_10013C018(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, *((void *)a1 + 1));
}

uint64_t sub_10013C048(uint64_t *a1, uint64_t a2)
{
  return sub_100132844(a1, a2);
}

uint64_t sub_10013C050(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *, uint64_t))(v1 + 16);
  uint64_t v3 = a1[1];
  uint64_t v5 = *a1;
  return v2(&v5, v3);
}

uint64_t sub_10013C08C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void (**)(void *))(v2 + 16);
  uint64_t v6 = a1[1];
  v8[0] = *a1;
  uint64_t v5 = v8[0];
  v8[1] = v6;
  v4(v8);
  *a2 = v5;
  a2[1] = v6;
  swift_retain();

  return swift_retain();
}

uint64_t sub_10013C0F4(uint64_t a1, uint64_t a2)
{
  return sub_10011AE0C(a1, a2);
}

uint64_t sub_10013C0FC(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, void))(v1 + 16);
  uint64_t v4 = sub_10000A38C(&qword_100367CD8);
  return v3(a1, *(void *)(a1 + *(int *)(v4 + 48)));
}

uint64_t sub_10013C148()
{
  return sub_10011AF48();
}

uint64_t sub_10013C150()
{
  return sub_10013B9E8() & 1;
}

uint64_t sub_10013C170()
{
  return sub_10000ADE8(&qword_100367930);
}

void *sub_10013C17C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_10000A38C(&qword_100367930) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t result = sub_10002E7CC(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(uint64_t (**)(void *))(v2 + 16), *(void *)(v2 + 24), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8), *(void *)(v2 + v8), *(void **)(v2 + v8 + 8), *(void **)(v2 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_DWORD *)(v2 + ((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)));
  *a2 = result;
  a2[1] = v10;
  a2[2] = v11;
  return result;
}

uint64_t sub_10013C26C()
{
  return sub_10011B0BC();
}

uint64_t sub_10013C274(char a1, uint64_t a2)
{
  return sub_10011AACC(a1 & 1, a2);
}

uint64_t sub_10013C280(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, *((void *)a1 + 1));
}

uint64_t sub_10013C2B4(uint64_t a1, uint64_t a2)
{
  return sub_10011AB40(a1, a2, v2, (void (*)(uint64_t, uint64_t))sub_10011BC10);
}

uint64_t sub_10013C2E4(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, *((void *)a1 + 1));
}

uint64_t sub_10013C318(uint64_t *a1)
{
  return sub_1001332D8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10013C320@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = *a1;
  *(void *)(a2 + 8) = v2;
  return swift_retain();
}

uint64_t sub_10013C334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10011AFF4(a1, a2);
}

uint64_t sub_10013C344@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_10013317C(a1, a2);
}

uint64_t sub_10013C34C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  uint64_t result = off_10035F178(&v6);
  uint64_t v5 = v6;
  *(_DWORD *)a2 = v3;
  *(void *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_10013C3DC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_100133230(a1, a2);
}

uint64_t sub_10013C3E4@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = *a1;
  uint64_t result = off_10035F178(&v6);
  uint64_t v5 = v6;
  *(unsigned char *)a2 = v3;
  *(void *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_10013C474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10011AE80(a1, a2);
}

uint64_t sub_10013C47C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10013C4E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10011AD94(a1, v2, a2);
}

uint64_t sub_10013C4EC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  a2[1] = v2;
  swift_retain();

  return swift_retain();
}

uint64_t sub_10013C520(uint64_t *a1)
{
  return sub_10013334C(a1);
}

uint64_t sub_10013C528(unsigned __int8 a1)
{
  return sub_100133484(a1);
}

uint64_t sub_10013C530(unsigned __int8 *a1)
{
  return sub_10013C708(a1);
}

uint64_t sub_10013C538(float *a1)
{
  return sub_10012B3E8(*a1);
}

uint64_t sub_10013C544()
{
  return sub_10000ADE8(&qword_100367D90);
}

void sub_10013C550(float *a1@<X0>, float *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_10000A38C(&qword_100367D90) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  *a2 = sub_10002EA44(*(uint64_t (**)(float *))(v2 + 16), *a1, *(void *)(v2 + 24), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8), *(void *)(v2 + v8), *(void **)(v2 + v8 + 8), *(void **)(v2 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_DWORD *)(v2 + ((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10013C630()
{
  return sub_10013BC40();
}

uint64_t sub_10013C638()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10013C678(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10013C688()
{
  return swift_release();
}

uint64_t sub_10013C690()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10013C6C8(uint64_t *a1)
{
  sub_100133C7C(a1, v1, sub_10012CC20);
}

void sub_10013C6F8(char a1, uint64_t *a2)
{
}

uint64_t sub_10013C700(unsigned __int8 *a1)
{
  return sub_10013C708(a1);
}

uint64_t sub_10013C708(unsigned __int8 *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t, uint64_t *))(v1 + 16);
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *a1;
  uint64_t v6 = v3;
  return v2(v4, &v6);
}

void sub_10013C754()
{
}

void sub_10013C760()
{
}

uint64_t sub_10013C768()
{
  return sub_10000ADE8(&qword_100367E80);
}

uint64_t sub_10013C774@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_10000A38C(&qword_100367E80) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t result = sub_10002EBA0(*a1, a1[1], *(uint64_t (**)(void *))(v2 + 16), *(void *)(v2 + 24), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8), *(void *)(v2 + v8), *(void **)(v2 + v8 + 8), *(void **)(v2 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_DWORD *)(v2 + ((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)));
  *a2 = result;
  a2[1] = v10;
  return result;
}

uint64_t sub_10013C858(uint64_t a1, uint64_t a2)
{
  return sub_10012FD20(a1, a2);
}

uint64_t sub_10013C860@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_10013C898()
{
  return sub_10000ADE8(&qword_100367E88);
}

uint64_t sub_10013C8A4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_10013CA18(a1, &qword_100367E88, (uint64_t (*)(void, void, void, unint64_t, void, void, void, void, void, _DWORD))sub_1000385B4, a2);
}

void sub_10013C8C4(id *a1)
{
}

uint64_t sub_10013C8D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10013C930()
{
  return sub_10000ADE8((uint64_t *)&unk_100367E90);
}

uint64_t sub_10013C93C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_10013CA18(a1, (uint64_t *)&unk_100367E90, (uint64_t (*)(void, void, void, unint64_t, void, void, void, void, void, _DWORD))sub_1000385B4, a2);
}

void sub_10013C95C(uint64_t *a1)
{
  sub_100133C7C(a1, v1, sub_100121334);
}

uint64_t sub_10013C98C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[14];
  sub_10000D6E4(v1 + 2, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  *a1 = result;
  return result;
}

uint64_t sub_10013C9EC()
{
  return sub_10000ADE8(&qword_100367F30);
}

uint64_t sub_10013C9F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_10013CA18(a1, &qword_100367F30, (uint64_t (*)(void, void, void, unint64_t, void, void, void, void, void, _DWORD))sub_1000385B4, a2);
}

uint64_t sub_10013CA18@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(void, void, void, unint64_t, void, void, void, void, void, _DWORD)@<X2>, void *a4@<X8>)
{
  uint64_t v8 = *(void *)(sub_10000A38C(a2) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  *a4 = a3(*a1, *(void *)(v4 + 16), *(void *)(v4 + 24), v4 + v9, *(void *)(v4 + v10), *(void *)(v4 + v10 + 8), *(void *)(v4 + v11), *(void *)(v4 + v11 + 8), *(void *)(v4 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_DWORD *)(v4 + ((((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)));

  return swift_unknownObjectRetain();
}

uint64_t sub_10013CB10()
{
  return sub_10000ADE8(&qword_100367F18);
}

uint64_t sub_10013CB1C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_10000A38C(&qword_100367F18) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  *a2 = sub_1000385A0(*a1, a1[1], *(uint64_t (**)(void *))(v2 + 16), *(void *)(v2 + 24), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8), *(void *)(v2 + v8), *(void **)(v2 + v8 + 8), *(void **)(v2 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_DWORD *)(v2 + ((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)));
  a2[1] = v9;

  return swift_bridgeObjectRetain();
}

void sub_10013CC14(uint64_t *a1)
{
}

void sub_10013CC24()
{
}

void sub_10013CC2C(char a1, char a2)
{
}

uint64_t sub_10013CC34(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_10013CC68()
{
  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_10013CC78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  long long v5 = *(_OWORD *)(a1 + 64);
  long long v6 = *(_OWORD *)(a1 + 80);
  long long v7 = *(_OWORD *)(a1 + 96);
  long long v8 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 80) = v6;
  *(_OWORD *)(a2 + 96) = v7;
  *(_OWORD *)(a2 + 112) = v8;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10013CCEC(uint64_t a1)
{
  return sub_1001E69C8(a1);
}

uint64_t sub_10013CCF8()
{
  return 24;
}

__n128 sub_10013CD04(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_10013CD18(uint64_t *a1)
{
  return sub_100128118(a1);
}

uint64_t sub_10013CD20(uint64_t *a1)
{
  return sub_10012854C(a1);
}

unint64_t sub_10013CD28()
{
  unint64_t result = qword_100368110;
  if (!qword_100368110)
  {
    sub_10000A3D0(&qword_100366260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100368110);
  }
  return result;
}

uint64_t sub_10013CD9C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10013CDD4(void (*a1)(void ***), uint64_t a2)
{
  return sub_100209B20(a1, a2);
}

uint64_t sub_10013CDDC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10013CE1C(uint64_t a1)
{
  return sub_100127024(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_10013CE28()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10013CE70(uint64_t *a1)
{
  sub_10013BA74(*a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 40));
}

uint64_t sub_10013CE94(uint64_t *a1)
{
  return sub_100128958(a1);
}

uint64_t sub_10013CE9C(uint64_t *a1)
{
  return sub_100128BD0(a1);
}

uint64_t sub_10013CEA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id sub_10013CFA0()
{
  return [*v0 impactOccurredWithIntensity:];
}

id sub_10013CFB0()
{
  return [*v0 prepare];
}

id sub_10013CFC0(uint64_t a1)
{
  return [*v1 notificationOccurred:a1];
}

uint64_t sub_10013CFD4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10013D040()
{
  uint64_t v1 = type metadata accessor for HapticPresenter();
  sub_10016ADD8(0x74696E696544, (void *)0xE600000000000000, 0, v1, (uint64_t)&off_1003296A0);
  swift_unknownObjectUnownedDestroy();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10013D0EC()
{
  sub_10013D040();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HapticPresenter()
{
  return sub_10000F2E4();
}

uint64_t sub_10013D138()
{
  _StringGuts.grow(_:)(52);
  v0._uint64_t countAndFlagsBits = 0xD000000000000021;
  v0._unint64_t object = (void *)0x80000001002BFD00;
  String.append(_:)(v0);
  v1._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._unint64_t object = (void *)0x80000001002BFD30;
  v2._uint64_t countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v2);
  return 0;
}

uint64_t sub_10013D1F4()
{
  uint64_t v1 = *v0;
  sub_10000A38C((uint64_t *)&unk_10035E7E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10028D430;
  *(void *)(v2 + 32) = 0xD000000000000015;
  *(void *)(v2 + 40) = 0x80000001002BF970;
  strcpy((char *)v32, "hapticPlayer=");
  HIWORD(v32[1]) = -4864;
  swift_unknownObjectUnownedLoadStrong();
  (*(void (**)(void))(*(void *)(v1 + 88) + 48))(*(void *)(v1 + 80));
  swift_unknownObjectRelease();
  swift_getObjectType();
  uint64_t v3 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v5 = v4;
  swift_unknownObjectRelease();
  v6._uint64_t countAndFlagsBits = v3;
  v6._unint64_t object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = v32[0];
  uint64_t v8 = v32[1];
  unint64_t v10 = *(void *)(v2 + 16);
  unint64_t v9 = *(void *)(v2 + 24);
  if (v10 >= v9 >> 1) {
    uint64_t v2 = (uint64_t)sub_10008892C((char *)(v9 > 1), v10 + 1, 1, (char *)v2);
  }
  uint64_t v11 = 7104878;
  *(void *)(v2 + 16) = v10 + 1;
  uint64_t v12 = v2 + 16 * v10;
  *(void *)(v12 + 32) = v7;
  *(void *)(v12 + 40) = v8;
  strcpy((char *)v32, "playTask=");
  WORD1(v32[1]) = 0;
  HIDWORD(v32[1]) = -385875968;
  if (v0[5])
  {
    type metadata accessor for AnyCancellable();
    swift_retain();
    uint64_t v13 = String.init<A>(describing:)();
    unint64_t v15 = v14;
  }
  else
  {
    unint64_t v15 = 0xE300000000000000;
    uint64_t v13 = 7104878;
  }
  unint64_t v16 = v15;
  String.append(_:)(*(Swift::String *)&v13);
  swift_bridgeObjectRelease();
  uint64_t v17 = v32[0];
  uint64_t v18 = v32[1];
  unint64_t v20 = *(void *)(v2 + 16);
  unint64_t v19 = *(void *)(v2 + 24);
  if (v20 >= v19 >> 1) {
    uint64_t v2 = (uint64_t)sub_10008892C((char *)(v19 > 1), v20 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v20 + 1;
  uint64_t v21 = v2 + 16 * v20;
  *(void *)(v21 + 32) = v17;
  *(void *)(v21 + 40) = v18;
  strcpy((char *)v32, "timeoutTask=");
  BYTE5(v32[1]) = 0;
  HIWORD(v32[1]) = -5120;
  if (v0[6])
  {
    type metadata accessor for AnyCancellable();
    swift_retain();
    uint64_t v11 = String.init<A>(describing:)();
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v23 = (void *)0xE300000000000000;
  }
  v24._uint64_t countAndFlagsBits = v11;
  v24._unint64_t object = v23;
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  uint64_t v25 = v32[0];
  uint64_t v26 = v32[1];
  unint64_t v28 = *(void *)(v2 + 16);
  unint64_t v27 = *(void *)(v2 + 24);
  if (v28 >= v27 >> 1) {
    uint64_t v2 = (uint64_t)sub_10008892C((char *)(v27 > 1), v28 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v28 + 1;
  uint64_t v29 = v2 + 16 * v28;
  *(void *)(v29 + 32) = v25;
  *(void *)(v29 + 40) = v26;
  sub_10000A38C((uint64_t *)&unk_100367D40);
  sub_100089B9C();
  uint64_t v30 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_10013D52C()
{
  return sub_10013D1F4();
}

unint64_t sub_10013D550(uint64_t a1)
{
  unint64_t result = sub_10013D578();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10013D578()
{
  unint64_t result = qword_1003682D0;
  if (!qword_1003682D0)
  {
    type metadata accessor for HapticPlayer();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003682D0);
  }
  return result;
}

char *sub_10013D5D4(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = &v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        unint64_t v14 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v14;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v15 = type metadata accessor for ExperienceEvent(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v16 = (uint64_t)*a2;
            uint64_t v17 = (uint64_t)a2[1];
            char v18 = *((unsigned char *)a2 + 16);
            sub_10001F9E8(v16, v17, v18);
            *(void *)a1 = v16;
            *((void *)a1 + 1) = v17;
            a1[16] = v18;
            goto LABEL_51;
          case 1u:
            uint64_t v37 = (uint64_t)*a2;
            uint64_t v38 = (uint64_t)a2[1];
            uint64_t v39 = (uint64_t)a2[2];
            uint64_t v40 = (uint64_t)a2[3];
            uint64_t v41 = (uint64_t)a2[4];
            uint64_t v42 = (uint64_t)a2[5];
            uint64_t v43 = (uint64_t)a2[6];
            unsigned __int8 v44 = *((unsigned char *)a2 + 56);
            sub_10001FA00(v37, v38, v39, v40, v41, v42, v43, v44);
            *(void *)a1 = v37;
            *((void *)a1 + 1) = v38;
            *((void *)a1 + 2) = v39;
            *((void *)a1 + 3) = v40;
            *((void *)a1 + 4) = v41;
            *((void *)a1 + 5) = v42;
            *((void *)a1 + 6) = v43;
            a1[56] = v44;
            goto LABEL_51;
          case 4u:
            uint64_t v45 = (uint64_t)*a2;
            unint64_t v46 = (unint64_t)a2[1];
            uint64_t v47 = a2[2];
            uint64_t v48 = (uint64_t)a2[3];
            uint64_t v49 = (uint64_t)a2[4];
            uint64_t v50 = (uint64_t)a2[5];
            uint64_t v51 = (uint64_t)a2[6];
            char v52 = *((unsigned char *)a2 + 56);
            sub_10001FAFC(v45, v46, v47, v48, v49, v50, v51, v52);
            *(void *)a1 = v45;
            *((void *)a1 + 1) = v46;
            *((void *)a1 + 2) = v47;
            *((void *)a1 + 3) = v48;
            *((void *)a1 + 4) = v49;
            *((void *)a1 + 5) = v50;
            *((void *)a1 + 6) = v51;
            a1[56] = v52;
            goto LABEL_51;
          case 5u:
            uint64_t v53 = (uint64_t)*a2;
            uint64_t v54 = (uint64_t)a2[1];
            uint64_t v55 = (uint64_t)a2[2];
            uint64_t v56 = (uint64_t)a2[3];
            uint64_t v57 = (uint64_t)a2[4];
            uint64_t v58 = (uint64_t)a2[5];
            uint64_t v59 = (uint64_t)a2[6];
            char v60 = *((unsigned char *)a2 + 56);
            sub_10001FBD0(v53, v54, v55, v56, v57, v58, v59, v60);
            *(void *)a1 = v53;
            *((void *)a1 + 1) = v54;
            *((void *)a1 + 2) = v55;
            *((void *)a1 + 3) = v56;
            *((void *)a1 + 4) = v57;
            *((void *)a1 + 5) = v58;
            *((void *)a1 + 6) = v59;
            a1[56] = v60;
            goto LABEL_51;
          case 8u:
            uint64_t v61 = type metadata accessor for TransferEvent();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v62 = (uint64_t)*a2;
                swift_errorRetain();
                *(void *)a1 = v62;
                goto LABEL_50;
              case 2u:
              case 3u:
                *(_OWORD *)a1 = *(_OWORD *)a2;
                id v69 = a2[3];
                *((void *)a1 + 2) = a2[2];
                *((void *)a1 + 3) = v69;
                uint64_t v70 = a2[5];
                *((void *)a1 + 4) = a2[4];
                *((void *)a1 + 5) = v70;
                *((void *)a1 + 6) = a2[6];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                goto LABEL_50;
              case 4u:
                unint64_t v71 = (unint64_t)a2[2];
                if (v71 - 7 >= 2 && v71 >= 7)
                {
                  *(_OWORD *)a1 = *(_OWORD *)a2;
                  uint64_t v90 = a2[3];
                  uint64_t v91 = a2[4];
                  *((void *)a1 + 2) = v71;
                  *((void *)a1 + 3) = v90;
                  uint64_t v92 = a2[5];
                  unint64_t v93 = a2[6];
                  *((void *)a1 + 4) = v91;
                  *((void *)a1 + 5) = v92;
                  *((void *)a1 + 6) = v93;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v72 = *((_OWORD *)a2 + 1);
                  *(_OWORD *)a1 = *(_OWORD *)a2;
                  *((_OWORD *)a1 + 1) = v72;
                  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
                  *((void *)a1 + 6) = a2[6];
                }
                uint64_t v94 = *(int *)(type metadata accessor for PermissionToHandoff() + 20);
                uint64_t v95 = &a1[v94];
                uint64_t v96 = (uint64_t)a2 + v94;
                uint64_t v97 = type metadata accessor for Date();
                (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
                goto LABEL_50;
              case 5u:
                unint64_t v73 = (unint64_t)*a2;
                sub_10001FC30(v73);
                *(void *)a1 = v73;
LABEL_50:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(void *)(*(void *)(v61 - 8) + 64));
                break;
            }
            goto LABEL_51;
          case 9u:
            uint64_t v63 = (uint64_t)*a2;
            if ((unint64_t)(v63 - 1) >= 3) {
              swift_errorRetain();
            }
            *(void *)a1 = v63;
LABEL_51:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
            break;
        }
        goto LABEL_52;
      case 0:
        uint64_t v8 = type metadata accessor for ExperienceEffect(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v9 = (uint64_t)*a2;
            uint64_t v10 = (uint64_t)a2[1];
            char v11 = *((unsigned char *)a2 + 16);
            sub_10001F894((uint64_t)*a2, v10, v11);
            *(void *)a1 = v9;
            *((void *)a1 + 1) = v10;
            a1[16] = v11;
            goto LABEL_57;
          case 3u:
            unint64_t v19 = *a2;
            char v20 = *((unsigned char *)a2 + 8);
            *(void *)a1 = *a2;
            a1[8] = v20;
            *((void *)a1 + 2) = a2[2];
            id v21 = v19;
            swift_retain();
            goto LABEL_57;
          case 6u:
            uint64_t v22 = type metadata accessor for NoticeEffect();
            int v23 = swift_getEnumCaseMultiPayload();
            if (v23 == 2)
            {
              uint64_t v64 = a2[1];
              *(void *)a1 = *a2;
              *((void *)a1 + 1) = v64;
              swift_bridgeObjectRetain();
            }
            else if (v23 == 1)
            {
              uint64_t v65 = a2[2];
              if (v65 == (char *)1)
              {
                *(_OWORD *)a1 = *(_OWORD *)a2;
                *((void *)a1 + 2) = a2[2];
              }
              else
              {
                uint64_t v66 = *a2;
                char v67 = *((unsigned char *)a2 + 8);
                *(void *)a1 = *a2;
                a1[8] = v67;
                *((void *)a1 + 2) = v65;
                id v68 = v66;
                swift_retain();
              }
            }
            else
            {
              if (v23)
              {
                memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
                goto LABEL_57;
              }
              Swift::String v24 = a2[1];
              *(void *)a1 = *a2;
              *((void *)a1 + 1) = v24;
              a1[16] = *((unsigned char *)a2 + 16);
              uint64_t v25 = (int *)type metadata accessor for NoticeContext(0);
              uint64_t v26 = v25[6];
              unint64_t v27 = (uint64_t *)&a1[v26];
              unint64_t v28 = (uint64_t *)((char *)a2 + v26);
              uint64_t v29 = type metadata accessor for NoticeTapAction(0);
              swift_bridgeObjectRetain();
              int v30 = swift_getEnumCaseMultiPayload();
              if (v30 == 1)
              {
                uint64_t v74 = type metadata accessor for URL();
                (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v74 - 8) + 16))(v27, v28, v74);
                swift_storeEnumTagMultiPayload();
              }
              else if (v30)
              {
                memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
              }
              else
              {
                uint64_t v32 = *v28;
                unint64_t v31 = v28[1];
                sub_10001F8BC(v32, v31);
                uint64_t *v27 = v32;
                v27[1] = v31;
                swift_storeEnumTagMultiPayload();
              }
              a1[v25[7]] = *((unsigned char *)a2 + v25[7]);
              uint64_t v75 = v25[8];
              unint64_t v76 = &a1[v75];
              uint64_t v77 = (char **)((char *)a2 + v75);
              type metadata accessor for NoticeContent(0);
              if (swift_getEnumCaseMultiPayload() == 3)
              {
                uint64_t v81 = v77[1];
                *(void *)unint64_t v76 = *v77;
                *((void *)v76 + 1) = v81;
                uint64_t v152 = type metadata accessor for ShareableContentExposedContext(0);
                uint64_t v82 = *(int *)(v152 + 20);
                uint64_t v83 = &v76[v82];
                uint64_t v84 = (char *)v77 + v82;
                uint64_t v85 = *(void *)((char *)v77 + v82 + 8);
                *(void *)uint64_t v83 = *(void *)((char *)v77 + v82);
                *((void *)v83 + 1) = v85;
                uint64_t v86 = *(int *)(type metadata accessor for ShareableContent(0) + 20);
                uint64_t v151 = &v83[v86];
                uint64_t v87 = &v84[v86];
                uint64_t v88 = type metadata accessor for URL();
                uint64_t v149 = *(void *)(v88 - 8);
                uint64_t v150 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v150(v87, 1, v88))
                {
                  uint64_t v89 = type metadata accessor for ShareableContentType(0);
                  memcpy(v151, v87, *(void *)(*(void *)(v89 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v151, v87, v88);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v151, 0, 1, v88);
                }
                uint64_t v98 = *(int *)(v152 + 24);
                id v99 = &v76[v98];
                uint64_t v100 = (void *)((char *)v77 + v98);
                uint64_t v101 = v100[1];
                *(void *)id v99 = *v100;
                *((void *)v99 + 1) = v101;
              }
              else
              {
                uint64_t v78 = v77[1];
                *(void *)unint64_t v76 = *v77;
                *((void *)v76 + 1) = v78;
                uint64_t v79 = v77[2];
                uint64_t v80 = v77[3];
                *((void *)v76 + 2) = v79;
                *((void *)v76 + 3) = v80;
                swift_bridgeObjectRetain();
              }
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            swift_storeEnumTagMultiPayload();
LABEL_57:
            swift_storeEnumTagMultiPayload();
LABEL_58:
            uint64_t v102 = *(int *)(sub_10000A38C((uint64_t *)&unk_1003676C0) + 48);
            uint64_t v103 = &a1[v102];
            uint64_t v104 = (uint64_t)a2 + v102;
            uint64_t v105 = type metadata accessor for ExperienceEvent(0);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                uint64_t v106 = *(void *)v104;
                uint64_t v107 = *(void *)(v104 + 8);
                char v108 = *(unsigned char *)(v104 + 16);
                sub_10001F9E8(v106, v107, v108);
                *(void *)uint64_t v103 = v106;
                *((void *)v103 + 1) = v107;
                v103[16] = v108;
                goto LABEL_78;
              case 1u:
                uint64_t v109 = *(void *)v104;
                uint64_t v110 = *(void *)(v104 + 8);
                uint64_t v111 = *(void *)(v104 + 16);
                uint64_t v112 = *(void *)(v104 + 24);
                uint64_t v114 = *(void *)(v104 + 32);
                uint64_t v113 = *(void *)(v104 + 40);
                uint64_t v115 = *(void *)(v104 + 48);
                uint64_t v153 = v115;
                unsigned __int8 v116 = *(unsigned char *)(v104 + 56);
                sub_10001FA00(v109, v110, v111, v112, v114, v113, v115, v116);
                *(void *)uint64_t v103 = v109;
                *((void *)v103 + 1) = v110;
                *((void *)v103 + 2) = v111;
                *((void *)v103 + 3) = v112;
                *((void *)v103 + 4) = v114;
                *((void *)v103 + 5) = v113;
                *((void *)v103 + 6) = v153;
                v103[56] = v116;
                goto LABEL_78;
              case 4u:
                uint64_t v117 = *(void *)v104;
                unint64_t v118 = *(void *)(v104 + 8);
                uint64_t v119 = *(void *)(v104 + 16);
                uint64_t v120 = *(void *)(v104 + 24);
                uint64_t v121 = *(void *)(v104 + 32);
                uint64_t v122 = *(void *)(v104 + 40);
                uint64_t v123 = *(void *)(v104 + 48);
                uint64_t v154 = v123;
                char v124 = *(unsigned char *)(v104 + 56);
                sub_10001FAFC(v117, v118, v119, v120, v121, v122, v123, v124);
                *(void *)uint64_t v103 = v117;
                *((void *)v103 + 1) = v118;
                *((void *)v103 + 2) = v119;
                *((void *)v103 + 3) = v120;
                *((void *)v103 + 4) = v121;
                *((void *)v103 + 5) = v122;
                *((void *)v103 + 6) = v154;
                v103[56] = v124;
                goto LABEL_78;
              case 5u:
                uint64_t v125 = *(void *)v104;
                uint64_t v126 = *(void *)(v104 + 8);
                uint64_t v127 = *(void *)(v104 + 16);
                uint64_t v128 = *(void *)(v104 + 24);
                uint64_t v129 = *(void *)(v104 + 32);
                uint64_t v130 = *(void *)(v104 + 40);
                uint64_t v131 = *(void *)(v104 + 48);
                uint64_t v155 = v131;
                char v132 = *(unsigned char *)(v104 + 56);
                sub_10001FBD0(v125, v126, v127, v128, v129, v130, v131, v132);
                *(void *)uint64_t v103 = v125;
                *((void *)v103 + 1) = v126;
                *((void *)v103 + 2) = v127;
                *((void *)v103 + 3) = v128;
                *((void *)v103 + 4) = v129;
                *((void *)v103 + 5) = v130;
                *((void *)v103 + 6) = v155;
                v103[56] = v132;
                goto LABEL_78;
              case 8u:
                uint64_t v133 = type metadata accessor for TransferEvent();
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    uint64_t v134 = *(void *)v104;
                    swift_errorRetain();
                    *(void *)uint64_t v103 = v134;
                    goto LABEL_77;
                  case 2u:
                  case 3u:
                    *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
                    uint64_t v136 = *(void *)(v104 + 24);
                    *((void *)v103 + 2) = *(void *)(v104 + 16);
                    *((void *)v103 + 3) = v136;
                    uint64_t v137 = *(void *)(v104 + 40);
                    *((void *)v103 + 4) = *(void *)(v104 + 32);
                    *((void *)v103 + 5) = v137;
                    *((void *)v103 + 6) = *(void *)(v104 + 48);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    goto LABEL_77;
                  case 4u:
                    unint64_t v138 = *(void *)(v104 + 16);
                    if (v138 - 7 >= 2 && v138 >= 7)
                    {
                      *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
                      uint64_t v141 = *(void *)(v104 + 24);
                      uint64_t v142 = *(void *)(v104 + 32);
                      *((void *)v103 + 2) = v138;
                      *((void *)v103 + 3) = v141;
                      uint64_t v143 = *(void *)(v104 + 40);
                      uint64_t v144 = *(void *)(v104 + 48);
                      *((void *)v103 + 4) = v142;
                      *((void *)v103 + 5) = v143;
                      *((void *)v103 + 6) = v144;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      long long v139 = *(_OWORD *)(v104 + 16);
                      *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
                      *((_OWORD *)v103 + 1) = v139;
                      *((_OWORD *)v103 + 2) = *(_OWORD *)(v104 + 32);
                      *((void *)v103 + 6) = *(void *)(v104 + 48);
                    }
                    uint64_t v145 = *(int *)(type metadata accessor for PermissionToHandoff() + 20);
                    uint64_t v146 = &v103[v145];
                    uint64_t v147 = v104 + v145;
                    uint64_t v148 = type metadata accessor for Date();
                    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v148 - 8) + 16))(v146, v147, v148);
                    goto LABEL_77;
                  case 5u:
                    uint64_t v140 = *(void *)v104;
                    sub_10001FC30(*(void *)v104);
                    *(void *)uint64_t v103 = v140;
LABEL_77:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v103, (const void *)v104, *(void *)(*(void *)(v133 - 8) + 64));
                    break;
                }
                goto LABEL_78;
              case 9u:
                unint64_t v135 = *(void *)v104;
                if ((unint64_t)(*(void *)v104 - 1) >= 3) {
                  swift_errorRetain();
                }
                *(void *)uint64_t v103 = v135;
LABEL_78:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v103, (const void *)v104, *(void *)(*(void *)(v105 - 8) + 64));
                break;
            }
            break;
          case 9u:
            uint64_t v33 = (uint64_t)*a2;
            unint64_t v34 = (unint64_t)a2[1];
            uint64_t v35 = (uint64_t)a2[2];
            char v36 = *((unsigned char *)a2 + 24);
            sub_10001F914(*a2, v34, v35, v36);
            *(void *)a1 = v33;
            *((void *)a1 + 1) = v34;
            *((void *)a1 + 2) = v35;
            a1[24] = v36;
            goto LABEL_57;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            goto LABEL_58;
        }
LABEL_52:
        swift_storeEnumTagMultiPayload();
        return a1;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10013E440(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 3:
LABEL_6:
      return swift_bridgeObjectRelease();
    case 1:
      type metadata accessor for ExperienceEvent(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
LABEL_22:
          uint64_t v7 = *(void *)a1;
          uint64_t v8 = *(void *)(a1 + 8);
          char v9 = *(unsigned char *)(a1 + 16);
          uint64_t result = sub_100020428(v7, v8, v9);
          break;
        case 1:
LABEL_25:
          uint64_t v10 = *(void *)a1;
          uint64_t v11 = *(void *)(a1 + 8);
          uint64_t v12 = *(void *)(a1 + 16);
          uint64_t v13 = *(void *)(a1 + 24);
          uint64_t v14 = *(void *)(a1 + 32);
          uint64_t v15 = *(void *)(a1 + 40);
          uint64_t v16 = *(void *)(a1 + 48);
          unsigned __int8 v17 = *(unsigned char *)(a1 + 56);
          uint64_t result = sub_100020430(v10, v11, v12, v13, v14, v15, v16, v17);
          break;
        case 4:
LABEL_28:
          uint64_t v18 = *(void *)a1;
          unint64_t v19 = *(void *)(a1 + 8);
          uint64_t v20 = *(void *)(a1 + 16);
          uint64_t v21 = *(void *)(a1 + 24);
          uint64_t v22 = *(void *)(a1 + 32);
          uint64_t v23 = *(void *)(a1 + 40);
          uint64_t v24 = *(void *)(a1 + 48);
          char v25 = *(unsigned char *)(a1 + 56);
          uint64_t result = sub_10002052C(v18, v19, v20, v21, v22, v23, v24, v25);
          break;
        case 5:
LABEL_31:
          uint64_t v26 = *(void *)a1;
          uint64_t v27 = *(void *)(a1 + 8);
          uint64_t v28 = *(void *)(a1 + 16);
          uint64_t v29 = *(void *)(a1 + 24);
          uint64_t v30 = *(void *)(a1 + 32);
          uint64_t v31 = *(void *)(a1 + 40);
          uint64_t v32 = *(void *)(a1 + 48);
          char v33 = *(unsigned char *)(a1 + 56);
          uint64_t result = sub_1000205C8(v26, v27, v28, v29, v30, v31, v32, v33);
          break;
        case 8:
          type metadata accessor for TransferEvent();
          uint64_t result = swift_getEnumCaseMultiPayload();
          switch((int)result)
          {
            case 1:
              goto LABEL_38;
            case 2:
            case 3:
LABEL_37:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_6;
            case 4:
LABEL_41:
              if (*(void *)(a1 + 16) >= 9uLL)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              uint64_t v34 = a1 + *(int *)(type metadata accessor for PermissionToHandoff() + 20);
              uint64_t v35 = type metadata accessor for Date();
              char v36 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8);
              uint64_t result = v36(v34, v35);
              break;
            case 5:
LABEL_46:
              unint64_t v37 = *(void *)a1;
              uint64_t result = sub_100020628(v37);
              break;
            default:
              return result;
          }
          break;
        case 9:
LABEL_34:
          uint64_t result = *(void *)a1;
          if ((unint64_t)(*(void *)a1 - 1) >= 3)
          {
LABEL_38:
            uint64_t result = swift_errorRelease();
          }
          break;
        default:
          return result;
      }
      break;
    case 0:
      type metadata accessor for ExperienceEffect(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          sub_100020330(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
          break;
        case 3u:
          goto LABEL_20;
        case 6u:
          type metadata accessor for NoticeEffect();
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          switch(EnumCaseMultiPayload)
          {
            case 2:
LABEL_54:
              swift_bridgeObjectRelease();
              break;
            case 1:
              if (*(void *)(a1 + 16) != 1)
              {
LABEL_20:

                swift_release();
              }
              break;
            case 0:
              swift_bridgeObjectRelease();
              uint64_t v4 = type metadata accessor for NoticeContext(0);
              uint64_t v5 = a1 + *(int *)(v4 + 24);
              type metadata accessor for NoticeTapAction(0);
              int v6 = swift_getEnumCaseMultiPayload();
              if (v6 == 1)
              {
                uint64_t v38 = type metadata accessor for URL();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v5, v38);
              }
              else if (!v6)
              {
                sub_10000DBEC(*(void *)v5, *(void *)(v5 + 8));
              }
              uint64_t v39 = a1 + *(int *)(v4 + 32);
              type metadata accessor for NoticeContent(0);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 0u:
                case 1u:
                case 2u:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  break;
                case 3u:
                  swift_bridgeObjectRelease();
                  uint64_t v40 = v39 + *(int *)(type metadata accessor for ShareableContentExposedContext(0) + 20);
                  swift_bridgeObjectRelease();
                  uint64_t v41 = v40 + *(int *)(type metadata accessor for ShareableContent(0) + 20);
                  uint64_t v42 = type metadata accessor for URL();
                  uint64_t v43 = *(void *)(v42 - 8);
                  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42)) {
                    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
                  }
                  goto LABEL_54;
                default:
                  goto LABEL_21;
              }
              break;
          }
          break;
        case 9u:
          sub_100020358(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
          break;
        default:
          break;
      }
LABEL_21:
      a1 += *(int *)(sub_10000A38C((uint64_t *)&unk_1003676C0) + 48);
      type metadata accessor for ExperienceEvent(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          goto LABEL_22;
        case 1:
          goto LABEL_25;
        case 4:
          goto LABEL_28;
        case 5:
          goto LABEL_31;
        case 8:
          type metadata accessor for TransferEvent();
          uint64_t result = swift_getEnumCaseMultiPayload();
          switch((int)result)
          {
            case 1:
              goto LABEL_38;
            case 2:
            case 3:
              goto LABEL_37;
            case 4:
              goto LABEL_41;
            case 5:
              goto LABEL_46;
            default:
              return result;
          }
        case 9:
          goto LABEL_34;
        default:
          return result;
      }
  }
  return result;
}

uint64_t sub_10013EAA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v11 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v11;
      swift_bridgeObjectRetain();
LABEL_76:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      uint64_t v12 = type metadata accessor for ExperienceEvent(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v13 = *(void *)a2;
          uint64_t v14 = *(void *)(a2 + 8);
          char v15 = *(unsigned char *)(a2 + 16);
          sub_10001F9E8(v13, v14, v15);
          *(void *)a1 = v13;
          *(void *)(a1 + 8) = v14;
          *(unsigned char *)(a1 + 16) = v15;
          goto LABEL_48;
        case 1u:
          uint64_t v34 = *(void *)a2;
          uint64_t v35 = *(void *)(a2 + 8);
          uint64_t v36 = *(void *)(a2 + 16);
          uint64_t v37 = *(void *)(a2 + 24);
          uint64_t v38 = *(void *)(a2 + 32);
          uint64_t v39 = *(void *)(a2 + 40);
          uint64_t v40 = *(void *)(a2 + 48);
          unsigned __int8 v41 = *(unsigned char *)(a2 + 56);
          sub_10001FA00(v34, v35, v36, v37, v38, v39, v40, v41);
          *(void *)a1 = v34;
          *(void *)(a1 + 8) = v35;
          *(void *)(a1 + 16) = v36;
          *(void *)(a1 + 24) = v37;
          *(void *)(a1 + 32) = v38;
          *(void *)(a1 + 40) = v39;
          *(void *)(a1 + 48) = v40;
          *(unsigned char *)(a1 + 56) = v41;
          goto LABEL_48;
        case 4u:
          uint64_t v42 = *(void *)a2;
          unint64_t v43 = *(void *)(a2 + 8);
          uint64_t v44 = *(void *)(a2 + 16);
          uint64_t v45 = *(void *)(a2 + 24);
          uint64_t v46 = *(void *)(a2 + 32);
          uint64_t v47 = *(void *)(a2 + 40);
          uint64_t v48 = *(void *)(a2 + 48);
          char v49 = *(unsigned char *)(a2 + 56);
          sub_10001FAFC(v42, v43, v44, v45, v46, v47, v48, v49);
          *(void *)a1 = v42;
          *(void *)(a1 + 8) = v43;
          *(void *)(a1 + 16) = v44;
          *(void *)(a1 + 24) = v45;
          *(void *)(a1 + 32) = v46;
          *(void *)(a1 + 40) = v47;
          *(void *)(a1 + 48) = v48;
          *(unsigned char *)(a1 + 56) = v49;
          goto LABEL_48;
        case 5u:
          uint64_t v50 = *(void *)a2;
          uint64_t v51 = *(void *)(a2 + 8);
          uint64_t v52 = *(void *)(a2 + 16);
          uint64_t v53 = *(void *)(a2 + 24);
          uint64_t v54 = *(void *)(a2 + 32);
          uint64_t v55 = *(void *)(a2 + 40);
          uint64_t v56 = *(void *)(a2 + 48);
          char v57 = *(unsigned char *)(a2 + 56);
          sub_10001FBD0(v50, v51, v52, v53, v54, v55, v56, v57);
          *(void *)a1 = v50;
          *(void *)(a1 + 8) = v51;
          *(void *)(a1 + 16) = v52;
          *(void *)(a1 + 24) = v53;
          *(void *)(a1 + 32) = v54;
          *(void *)(a1 + 40) = v55;
          *(void *)(a1 + 48) = v56;
          *(unsigned char *)(a1 + 56) = v57;
          goto LABEL_48;
        case 8u:
          uint64_t v58 = type metadata accessor for TransferEvent();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v59 = *(void *)a2;
              swift_errorRetain();
              *(void *)a1 = v59;
              goto LABEL_47;
            case 2u:
            case 3u:
              *(_OWORD *)a1 = *(_OWORD *)a2;
              uint64_t v66 = *(void *)(a2 + 24);
              *(void *)(a1 + 16) = *(void *)(a2 + 16);
              *(void *)(a1 + 24) = v66;
              uint64_t v67 = *(void *)(a2 + 40);
              *(void *)(a1 + 32) = *(void *)(a2 + 32);
              *(void *)(a1 + 40) = v67;
              *(void *)(a1 + 48) = *(void *)(a2 + 48);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_47;
            case 4u:
              unint64_t v68 = *(void *)(a2 + 16);
              if (v68 - 7 >= 2 && v68 >= 7)
              {
                *(_OWORD *)a1 = *(_OWORD *)a2;
                uint64_t v87 = *(void *)(a2 + 24);
                uint64_t v88 = *(void *)(a2 + 32);
                *(void *)(a1 + 16) = v68;
                *(void *)(a1 + 24) = v87;
                uint64_t v89 = *(void *)(a2 + 40);
                uint64_t v90 = *(void *)(a2 + 48);
                *(void *)(a1 + 32) = v88;
                *(void *)(a1 + 40) = v89;
                *(void *)(a1 + 48) = v90;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v69 = *(_OWORD *)(a2 + 16);
                *(_OWORD *)a1 = *(_OWORD *)a2;
                *(_OWORD *)(a1 + 16) = v69;
                *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
                *(void *)(a1 + 48) = *(void *)(a2 + 48);
              }
              uint64_t v91 = *(int *)(type metadata accessor for PermissionToHandoff() + 20);
              uint64_t v92 = a1 + v91;
              uint64_t v93 = a2 + v91;
              uint64_t v94 = type metadata accessor for Date();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 16))(v92, v93, v94);
              goto LABEL_47;
            case 5u:
              unint64_t v70 = *(void *)a2;
              sub_10001FC30(v70);
              *(void *)a1 = v70;
LABEL_47:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v58 - 8) + 64));
              break;
          }
          goto LABEL_48;
        case 9u:
          uint64_t v60 = *(void *)a2;
          if ((unint64_t)(v60 - 1) >= 3) {
            swift_errorRetain();
          }
          *(void *)a1 = v60;
LABEL_48:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v12 - 8) + 64));
          break;
      }
      goto LABEL_76;
    case 0:
      uint64_t v7 = type metadata accessor for ExperienceEffect(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v8 = *(void *)a2;
          uint64_t v9 = *(void *)(a2 + 8);
          char v10 = *(unsigned char *)(a2 + 16);
          sub_10001F894(*(void *)a2, v9, v10);
          *(void *)a1 = v8;
          *(void *)(a1 + 8) = v9;
          *(unsigned char *)(a1 + 16) = v10;
          goto LABEL_54;
        case 3u:
          uint64_t v16 = *(void **)a2;
          char v17 = *(unsigned char *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(unsigned char *)(a1 + 8) = v17;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          id v18 = v16;
          swift_retain();
          goto LABEL_54;
        case 6u:
          uint64_t v19 = type metadata accessor for NoticeEffect();
          int v20 = swift_getEnumCaseMultiPayload();
          if (v20 == 2)
          {
            uint64_t v61 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v61;
            swift_bridgeObjectRetain();
          }
          else if (v20 == 1)
          {
            uint64_t v62 = *(void *)(a2 + 16);
            if (v62 == 1)
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
              *(void *)(a1 + 16) = *(void *)(a2 + 16);
            }
            else
            {
              uint64_t v63 = *(void **)a2;
              char v64 = *(unsigned char *)(a2 + 8);
              *(void *)a1 = *(void *)a2;
              *(unsigned char *)(a1 + 8) = v64;
              *(void *)(a1 + 16) = v62;
              id v65 = v63;
              swift_retain();
            }
          }
          else
          {
            if (v20)
            {
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v19 - 8) + 64));
              goto LABEL_54;
            }
            uint64_t v21 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v21;
            *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
            uint64_t v22 = (int *)type metadata accessor for NoticeContext(0);
            uint64_t v23 = v22[6];
            uint64_t v24 = (uint64_t *)(a1 + v23);
            char v25 = (uint64_t *)(a2 + v23);
            uint64_t v26 = type metadata accessor for NoticeTapAction(0);
            swift_bridgeObjectRetain();
            int v27 = swift_getEnumCaseMultiPayload();
            if (v27 == 1)
            {
              uint64_t v71 = type metadata accessor for URL();
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v71 - 8) + 16))(v24, v25, v71);
              swift_storeEnumTagMultiPayload();
            }
            else if (v27)
            {
              memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
            }
            else
            {
              uint64_t v29 = *v25;
              unint64_t v28 = v25[1];
              sub_10001F8BC(v29, v28);
              uint64_t *v24 = v29;
              v24[1] = v28;
              swift_storeEnumTagMultiPayload();
            }
            *(unsigned char *)(a1 + v22[7]) = *(unsigned char *)(a2 + v22[7]);
            uint64_t v72 = v22[8];
            unint64_t v73 = (void *)(a1 + v72);
            uint64_t v74 = (void *)(a2 + v72);
            type metadata accessor for NoticeContent(0);
            if (swift_getEnumCaseMultiPayload() == 3)
            {
              uint64_t v78 = v74[1];
              *unint64_t v73 = *v74;
              v73[1] = v78;
              uint64_t v150 = type metadata accessor for ShareableContentExposedContext(0);
              uint64_t v79 = *(int *)(v150 + 20);
              uint64_t v80 = (void *)((char *)v73 + v79);
              uint64_t v81 = (char *)v74 + v79;
              uint64_t v82 = *(void *)((char *)v74 + v79 + 8);
              *uint64_t v80 = *(void *)((char *)v74 + v79);
              v80[1] = v82;
              uint64_t v83 = *(int *)(type metadata accessor for ShareableContent(0) + 20);
              uint64_t v149 = (char *)v80 + v83;
              uint64_t v84 = &v81[v83];
              uint64_t v85 = type metadata accessor for URL();
              uint64_t v147 = *(void *)(v85 - 8);
              uint64_t v148 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v148(v84, 1, v85))
              {
                uint64_t v86 = type metadata accessor for ShareableContentType(0);
                memcpy(v149, v84, *(void *)(*(void *)(v86 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v149, v84, v85);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v149, 0, 1, v85);
              }
              uint64_t v95 = *(int *)(v150 + 24);
              uint64_t v96 = (void *)((char *)v73 + v95);
              uint64_t v97 = (void *)((char *)v74 + v95);
              uint64_t v98 = v97[1];
              *uint64_t v96 = *v97;
              v96[1] = v98;
            }
            else
            {
              uint64_t v75 = v74[1];
              *unint64_t v73 = *v74;
              v73[1] = v75;
              uint64_t v76 = v74[2];
              uint64_t v77 = v74[3];
              void v73[2] = v76;
              v73[3] = v77;
              swift_bridgeObjectRetain();
            }
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          swift_storeEnumTagMultiPayload();
LABEL_54:
          swift_storeEnumTagMultiPayload();
LABEL_55:
          uint64_t v99 = *(int *)(sub_10000A38C((uint64_t *)&unk_1003676C0) + 48);
          uint64_t v100 = (void *)(a1 + v99);
          uint64_t v101 = a2 + v99;
          uint64_t v102 = type metadata accessor for ExperienceEvent(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v103 = *(void *)v101;
              uint64_t v104 = *(void *)(v101 + 8);
              char v105 = *(unsigned char *)(v101 + 16);
              sub_10001F9E8(v103, v104, v105);
              *uint64_t v100 = v103;
              v100[1] = v104;
              *((unsigned char *)v100 + 16) = v105;
              goto LABEL_75;
            case 1u:
              uint64_t v106 = *(void *)v101;
              uint64_t v107 = *(void *)(v101 + 8);
              uint64_t v108 = *(void *)(v101 + 16);
              uint64_t v109 = *(void *)(v101 + 24);
              uint64_t v111 = *(void *)(v101 + 32);
              uint64_t v110 = *(void *)(v101 + 40);
              uint64_t v112 = *(void *)(v101 + 48);
              uint64_t v151 = v112;
              unsigned __int8 v113 = *(unsigned char *)(v101 + 56);
              sub_10001FA00(v106, v107, v108, v109, v111, v110, v112, v113);
              *uint64_t v100 = v106;
              v100[1] = v107;
              v100[2] = v108;
              v100[3] = v109;
              v100[4] = v111;
              v100[5] = v110;
              v100[6] = v151;
              *((unsigned char *)v100 + 56) = v113;
              goto LABEL_75;
            case 4u:
              uint64_t v114 = *(void *)v101;
              unint64_t v115 = *(void *)(v101 + 8);
              uint64_t v116 = *(void *)(v101 + 16);
              uint64_t v117 = *(void *)(v101 + 24);
              uint64_t v118 = *(void *)(v101 + 32);
              uint64_t v119 = *(void *)(v101 + 40);
              uint64_t v120 = *(void *)(v101 + 48);
              uint64_t v152 = v120;
              char v121 = *(unsigned char *)(v101 + 56);
              sub_10001FAFC(v114, v115, v116, v117, v118, v119, v120, v121);
              *uint64_t v100 = v114;
              v100[1] = v115;
              v100[2] = v116;
              v100[3] = v117;
              v100[4] = v118;
              v100[5] = v119;
              v100[6] = v152;
              *((unsigned char *)v100 + 56) = v121;
              goto LABEL_75;
            case 5u:
              uint64_t v122 = *(void *)v101;
              uint64_t v123 = *(void *)(v101 + 8);
              uint64_t v124 = *(void *)(v101 + 16);
              uint64_t v125 = *(void *)(v101 + 24);
              uint64_t v126 = *(void *)(v101 + 32);
              uint64_t v127 = *(void *)(v101 + 40);
              uint64_t v128 = *(void *)(v101 + 48);
              uint64_t v153 = v128;
              char v129 = *(unsigned char *)(v101 + 56);
              sub_10001FBD0(v122, v123, v124, v125, v126, v127, v128, v129);
              *uint64_t v100 = v122;
              v100[1] = v123;
              v100[2] = v124;
              v100[3] = v125;
              v100[4] = v126;
              v100[5] = v127;
              v100[6] = v153;
              *((unsigned char *)v100 + 56) = v129;
              goto LABEL_75;
            case 8u:
              uint64_t v130 = type metadata accessor for TransferEvent();
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v131 = *(void *)v101;
                  swift_errorRetain();
                  *uint64_t v100 = v131;
                  goto LABEL_74;
                case 2u:
                case 3u:
                  *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
                  uint64_t v133 = *(void *)(v101 + 24);
                  v100[2] = *(void *)(v101 + 16);
                  v100[3] = v133;
                  uint64_t v134 = *(void *)(v101 + 40);
                  v100[4] = *(void *)(v101 + 32);
                  v100[5] = v134;
                  v100[6] = *(void *)(v101 + 48);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  goto LABEL_74;
                case 4u:
                  unint64_t v135 = *(void *)(v101 + 16);
                  if (v135 - 7 >= 2 && v135 >= 7)
                  {
                    *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
                    uint64_t v138 = *(void *)(v101 + 24);
                    uint64_t v139 = *(void *)(v101 + 32);
                    v100[2] = v135;
                    v100[3] = v138;
                    uint64_t v140 = *(void *)(v101 + 40);
                    uint64_t v141 = *(void *)(v101 + 48);
                    v100[4] = v139;
                    v100[5] = v140;
                    v100[6] = v141;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    long long v136 = *(_OWORD *)(v101 + 16);
                    *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
                    *((_OWORD *)v100 + 1) = v136;
                    *((_OWORD *)v100 + 2) = *(_OWORD *)(v101 + 32);
                    v100[6] = *(void *)(v101 + 48);
                  }
                  uint64_t v142 = *(int *)(type metadata accessor for PermissionToHandoff() + 20);
                  uint64_t v143 = (char *)v100 + v142;
                  uint64_t v144 = v101 + v142;
                  uint64_t v145 = type metadata accessor for Date();
                  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v145 - 8) + 16))(v143, v144, v145);
                  goto LABEL_74;
                case 5u:
                  uint64_t v137 = *(void *)v101;
                  sub_10001FC30(*(void *)v101);
                  *uint64_t v100 = v137;
LABEL_74:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v100, (const void *)v101, *(void *)(*(void *)(v130 - 8) + 64));
                  break;
              }
              goto LABEL_75;
            case 9u:
              unint64_t v132 = *(void *)v101;
              if ((unint64_t)(*(void *)v101 - 1) >= 3) {
                swift_errorRetain();
              }
              *uint64_t v100 = v132;
LABEL_75:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v100, (const void *)v101, *(void *)(*(void *)(v102 - 8) + 64));
              break;
          }
          break;
        case 9u:
          uint64_t v30 = *(void *)a2;
          unint64_t v31 = *(void *)(a2 + 8);
          uint64_t v32 = *(void *)(a2 + 16);
          char v33 = *(unsigned char *)(a2 + 24);
          sub_10001F914(*(id *)a2, v31, v32, v33);
          *(void *)a1 = v30;
          *(void *)(a1 + 8) = v31;
          *(void *)(a1 + 16) = v32;
          *(unsigned char *)(a1 + 24) = v33;
          goto LABEL_54;
        default:
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
          goto LABEL_55;
      }
      goto LABEL_76;
  }
  memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_10013F8B4(uint64_t a1, long long *a2, uint64_t a3)
{
  if ((long long *)a1 != a2)
  {
    sub_1001407B0(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        swift_bridgeObjectRetain();
LABEL_77:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        uint64_t v11 = type metadata accessor for ExperienceEvent(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v12 = *(void *)a2;
            uint64_t v13 = *((void *)a2 + 1);
            char v14 = *((unsigned char *)a2 + 16);
            sub_10001F9E8(v12, v13, v14);
            *(void *)a1 = v12;
            *(void *)(a1 + 8) = v13;
            *(unsigned char *)(a1 + 16) = v14;
            goto LABEL_49;
          case 1u:
            uint64_t v32 = *(void *)a2;
            uint64_t v33 = *((void *)a2 + 1);
            uint64_t v34 = *((void *)a2 + 2);
            uint64_t v35 = *((void *)a2 + 3);
            uint64_t v36 = *((void *)a2 + 4);
            uint64_t v37 = *((void *)a2 + 5);
            uint64_t v38 = *((void *)a2 + 6);
            unsigned __int8 v39 = *((unsigned char *)a2 + 56);
            sub_10001FA00(v32, v33, v34, v35, v36, v37, v38, v39);
            *(void *)a1 = v32;
            *(void *)(a1 + 8) = v33;
            *(void *)(a1 + 16) = v34;
            *(void *)(a1 + 24) = v35;
            *(void *)(a1 + 32) = v36;
            *(void *)(a1 + 40) = v37;
            *(void *)(a1 + 48) = v38;
            *(unsigned char *)(a1 + 56) = v39;
            goto LABEL_49;
          case 4u:
            uint64_t v40 = *(void *)a2;
            unint64_t v41 = *((void *)a2 + 1);
            uint64_t v42 = *((void *)a2 + 2);
            uint64_t v43 = *((void *)a2 + 3);
            uint64_t v44 = *((void *)a2 + 4);
            uint64_t v45 = *((void *)a2 + 5);
            uint64_t v46 = *((void *)a2 + 6);
            char v47 = *((unsigned char *)a2 + 56);
            sub_10001FAFC(v40, v41, v42, v43, v44, v45, v46, v47);
            *(void *)a1 = v40;
            *(void *)(a1 + 8) = v41;
            *(void *)(a1 + 16) = v42;
            *(void *)(a1 + 24) = v43;
            *(void *)(a1 + 32) = v44;
            *(void *)(a1 + 40) = v45;
            *(void *)(a1 + 48) = v46;
            *(unsigned char *)(a1 + 56) = v47;
            goto LABEL_49;
          case 5u:
            uint64_t v48 = *(void *)a2;
            uint64_t v49 = *((void *)a2 + 1);
            uint64_t v50 = *((void *)a2 + 2);
            uint64_t v51 = *((void *)a2 + 3);
            uint64_t v52 = *((void *)a2 + 4);
            uint64_t v53 = *((void *)a2 + 5);
            uint64_t v54 = *((void *)a2 + 6);
            char v55 = *((unsigned char *)a2 + 56);
            sub_10001FBD0(v48, v49, v50, v51, v52, v53, v54, v55);
            *(void *)a1 = v48;
            *(void *)(a1 + 8) = v49;
            *(void *)(a1 + 16) = v50;
            *(void *)(a1 + 24) = v51;
            *(void *)(a1 + 32) = v52;
            *(void *)(a1 + 40) = v53;
            *(void *)(a1 + 48) = v54;
            *(unsigned char *)(a1 + 56) = v55;
            goto LABEL_49;
          case 8u:
            uint64_t v56 = type metadata accessor for TransferEvent();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v57 = *(void *)a2;
                swift_errorRetain();
                *(void *)a1 = v57;
                goto LABEL_48;
              case 2u:
              case 3u:
                *(void *)a1 = *(void *)a2;
                *(void *)(a1 + 8) = *((void *)a2 + 1);
                *(void *)(a1 + 16) = *((void *)a2 + 2);
                *(void *)(a1 + 24) = *((void *)a2 + 3);
                *(void *)(a1 + 32) = *((void *)a2 + 4);
                *(void *)(a1 + 40) = *((void *)a2 + 5);
                *(void *)(a1 + 48) = *((void *)a2 + 6);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                goto LABEL_48;
              case 4u:
                unint64_t v63 = *((void *)a2 + 2);
                if (v63 - 7 >= 2 && v63 >= 7)
                {
                  *(void *)a1 = *(void *)a2;
                  *(void *)(a1 + 8) = *((void *)a2 + 1);
                  *(void *)(a1 + 16) = *((void *)a2 + 2);
                  *(void *)(a1 + 24) = *((void *)a2 + 3);
                  *(void *)(a1 + 32) = *((void *)a2 + 4);
                  *(void *)(a1 + 40) = *((void *)a2 + 5);
                  *(void *)(a1 + 48) = *((void *)a2 + 6);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v64 = *a2;
                  long long v65 = a2[1];
                  long long v66 = a2[2];
                  *(void *)(a1 + 48) = *((void *)a2 + 6);
                  *(_OWORD *)(a1 + 16) = v65;
                  *(_OWORD *)(a1 + 32) = v66;
                  *(_OWORD *)a1 = v64;
                }
                uint64_t v79 = *(int *)(type metadata accessor for PermissionToHandoff() + 20);
                uint64_t v80 = a1 + v79;
                uint64_t v81 = (uint64_t)a2 + v79;
                uint64_t v82 = type metadata accessor for Date();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v80, v81, v82);
                goto LABEL_48;
              case 5u:
                unint64_t v67 = *(void *)a2;
                sub_10001FC30(v67);
                *(void *)a1 = v67;
LABEL_48:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy((void *)a1, a2, *(void *)(*(void *)(v56 - 8) + 64));
                break;
            }
            goto LABEL_49;
          case 9u:
            uint64_t v58 = *(void *)a2;
            if ((unint64_t)(v58 - 1) >= 3) {
              swift_errorRetain();
            }
            *(void *)a1 = v58;
LABEL_49:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
            break;
        }
        goto LABEL_77;
      case 0:
        uint64_t v7 = type metadata accessor for ExperienceEffect(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v8 = *(void *)a2;
            uint64_t v9 = *((void *)a2 + 1);
            char v10 = *((unsigned char *)a2 + 16);
            sub_10001F894(*(void *)a2, v9, v10);
            *(void *)a1 = v8;
            *(void *)(a1 + 8) = v9;
            *(unsigned char *)(a1 + 16) = v10;
            goto LABEL_55;
          case 3u:
            char v15 = *(void **)a2;
            char v16 = *((unsigned char *)a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(unsigned char *)(a1 + 8) = v16;
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            id v17 = v15;
            swift_retain();
            goto LABEL_55;
          case 6u:
            uint64_t v18 = type metadata accessor for NoticeEffect();
            int v19 = swift_getEnumCaseMultiPayload();
            if (v19 == 2)
            {
              *(void *)a1 = *(void *)a2;
              *(void *)(a1 + 8) = *((void *)a2 + 1);
              swift_bridgeObjectRetain();
            }
            else if (v19 == 1)
            {
              if (*((void *)a2 + 2) == 1)
              {
                long long v59 = *a2;
                *(void *)(a1 + 16) = *((void *)a2 + 2);
                *(_OWORD *)a1 = v59;
              }
              else
              {
                uint64_t v60 = *(void **)a2;
                char v61 = *((unsigned char *)a2 + 8);
                *(void *)a1 = *(void *)a2;
                *(unsigned char *)(a1 + 8) = v61;
                *(void *)(a1 + 16) = *((void *)a2 + 2);
                id v62 = v60;
                swift_retain();
              }
            }
            else
            {
              if (v19)
              {
                memcpy((void *)a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
                goto LABEL_55;
              }
              *(void *)a1 = *(void *)a2;
              *(void *)(a1 + 8) = *((void *)a2 + 1);
              *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
              int v20 = (int *)type metadata accessor for NoticeContext(0);
              uint64_t v21 = v20[6];
              uint64_t v22 = (uint64_t *)(a1 + v21);
              uint64_t v23 = (uint64_t *)((char *)a2 + v21);
              uint64_t v24 = type metadata accessor for NoticeTapAction(0);
              swift_bridgeObjectRetain();
              int v25 = swift_getEnumCaseMultiPayload();
              if (v25 == 1)
              {
                uint64_t v68 = type metadata accessor for URL();
                (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v68 - 8) + 16))(v22, v23, v68);
                swift_storeEnumTagMultiPayload();
              }
              else if (v25)
              {
                memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
              }
              else
              {
                uint64_t v27 = *v23;
                unint64_t v26 = v23[1];
                sub_10001F8BC(v27, v26);
                *uint64_t v22 = v27;
                v22[1] = v26;
                swift_storeEnumTagMultiPayload();
              }
              *(unsigned char *)(a1 + v20[7]) = *((unsigned char *)a2 + v20[7]);
              uint64_t v69 = v20[8];
              unint64_t v70 = (void *)(a1 + v69);
              uint64_t v71 = (void *)((char *)a2 + v69);
              type metadata accessor for NoticeContent(0);
              if (swift_getEnumCaseMultiPayload() == 3)
              {
                *unint64_t v70 = *v71;
                v70[1] = v71[1];
                uint64_t v133 = type metadata accessor for ShareableContentExposedContext(0);
                uint64_t v72 = *(int *)(v133 + 20);
                unint64_t v73 = (void *)((char *)v70 + v72);
                uint64_t v74 = (char *)v71 + v72;
                *unint64_t v73 = *(void *)((char *)v71 + v72);
                v73[1] = *(void *)((char *)v71 + v72 + 8);
                uint64_t v75 = *(int *)(type metadata accessor for ShareableContent(0) + 20);
                unint64_t v132 = (char *)v73 + v75;
                uint64_t v76 = &v74[v75];
                uint64_t v77 = type metadata accessor for URL();
                uint64_t v130 = *(void *)(v77 - 8);
                uint64_t v131 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v131(v76, 1, v77))
                {
                  uint64_t v78 = type metadata accessor for ShareableContentType(0);
                  memcpy(v132, v76, *(void *)(*(void *)(v78 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v132, v76, v77);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v132, 0, 1, v77);
                }
                uint64_t v83 = *(int *)(v133 + 24);
                uint64_t v84 = (void *)((char *)v70 + v83);
                uint64_t v85 = (void *)((char *)v71 + v83);
                *uint64_t v84 = *v85;
                v84[1] = v85[1];
              }
              else
              {
                *unint64_t v70 = *v71;
                v70[1] = v71[1];
                v70[2] = v71[2];
                v70[3] = v71[3];
                swift_bridgeObjectRetain();
              }
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            swift_storeEnumTagMultiPayload();
LABEL_55:
            swift_storeEnumTagMultiPayload();
LABEL_56:
            uint64_t v86 = *(int *)(sub_10000A38C((uint64_t *)&unk_1003676C0) + 48);
            uint64_t v87 = (void *)(a1 + v86);
            uint64_t v88 = (long long *)((char *)a2 + v86);
            uint64_t v89 = type metadata accessor for ExperienceEvent(0);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                uint64_t v90 = *(void *)v88;
                uint64_t v91 = *((void *)v88 + 1);
                char v92 = *((unsigned char *)v88 + 16);
                sub_10001F9E8(v90, v91, v92);
                *uint64_t v87 = v90;
                v87[1] = v91;
                *((unsigned char *)v87 + 16) = v92;
                goto LABEL_76;
              case 1u:
                uint64_t v93 = *(void *)v88;
                uint64_t v94 = *((void *)v88 + 1);
                uint64_t v95 = *((void *)v88 + 2);
                uint64_t v96 = *((void *)v88 + 3);
                uint64_t v98 = *((void *)v88 + 4);
                uint64_t v97 = *((void *)v88 + 5);
                uint64_t v99 = *((void *)v88 + 6);
                uint64_t v134 = v99;
                unsigned __int8 v100 = *((unsigned char *)v88 + 56);
                sub_10001FA00(v93, v94, v95, v96, v98, v97, v99, v100);
                *uint64_t v87 = v93;
                v87[1] = v94;
                v87[2] = v95;
                v87[3] = v96;
                v87[4] = v98;
                v87[5] = v97;
                v87[6] = v134;
                *((unsigned char *)v87 + 56) = v100;
                goto LABEL_76;
              case 4u:
                uint64_t v101 = *(void *)v88;
                unint64_t v102 = *((void *)v88 + 1);
                uint64_t v103 = *((void *)v88 + 2);
                uint64_t v104 = *((void *)v88 + 3);
                uint64_t v105 = *((void *)v88 + 4);
                uint64_t v106 = *((void *)v88 + 5);
                uint64_t v107 = *((void *)v88 + 6);
                uint64_t v135 = v107;
                char v108 = *((unsigned char *)v88 + 56);
                sub_10001FAFC(v101, v102, v103, v104, v105, v106, v107, v108);
                *uint64_t v87 = v101;
                v87[1] = v102;
                v87[2] = v103;
                v87[3] = v104;
                v87[4] = v105;
                v87[5] = v106;
                v87[6] = v135;
                *((unsigned char *)v87 + 56) = v108;
                goto LABEL_76;
              case 5u:
                uint64_t v109 = *(void *)v88;
                uint64_t v110 = *((void *)v88 + 1);
                uint64_t v111 = *((void *)v88 + 2);
                uint64_t v112 = *((void *)v88 + 3);
                uint64_t v113 = *((void *)v88 + 4);
                uint64_t v114 = *((void *)v88 + 5);
                uint64_t v115 = *((void *)v88 + 6);
                uint64_t v136 = v115;
                char v116 = *((unsigned char *)v88 + 56);
                sub_10001FBD0(v109, v110, v111, v112, v113, v114, v115, v116);
                *uint64_t v87 = v109;
                v87[1] = v110;
                v87[2] = v111;
                v87[3] = v112;
                v87[4] = v113;
                v87[5] = v114;
                v87[6] = v136;
                *((unsigned char *)v87 + 56) = v116;
                goto LABEL_76;
              case 8u:
                uint64_t v117 = type metadata accessor for TransferEvent();
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    uint64_t v118 = *(void *)v88;
                    swift_errorRetain();
                    *uint64_t v87 = v118;
                    goto LABEL_75;
                  case 2u:
                  case 3u:
                    *uint64_t v87 = *(void *)v88;
                    v87[1] = *((void *)v88 + 1);
                    v87[2] = *((void *)v88 + 2);
                    v87[3] = *((void *)v88 + 3);
                    v87[4] = *((void *)v88 + 4);
                    v87[5] = *((void *)v88 + 5);
                    v87[6] = *((void *)v88 + 6);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    goto LABEL_75;
                  case 4u:
                    unint64_t v120 = *((void *)v88 + 2);
                    if (v120 - 7 >= 2 && v120 >= 7)
                    {
                      *uint64_t v87 = *(void *)v88;
                      v87[1] = *((void *)v88 + 1);
                      v87[2] = *((void *)v88 + 2);
                      v87[3] = *((void *)v88 + 3);
                      v87[4] = *((void *)v88 + 4);
                      v87[5] = *((void *)v88 + 5);
                      v87[6] = *((void *)v88 + 6);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      long long v121 = *v88;
                      long long v122 = v88[1];
                      long long v123 = v88[2];
                      v87[6] = *((void *)v88 + 6);
                      *((_OWORD *)v87 + 1) = v122;
                      *((_OWORD *)v87 + 2) = v123;
                      *(_OWORD *)uint64_t v87 = v121;
                    }
                    uint64_t v125 = *(int *)(type metadata accessor for PermissionToHandoff() + 20);
                    uint64_t v126 = (char *)v87 + v125;
                    uint64_t v127 = (uint64_t)v88 + v125;
                    uint64_t v128 = type metadata accessor for Date();
                    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v128 - 8) + 16))(v126, v127, v128);
                    goto LABEL_75;
                  case 5u:
                    uint64_t v124 = *(void *)v88;
                    sub_10001FC30(*(void *)v88);
                    *uint64_t v87 = v124;
LABEL_75:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v87, v88, *(void *)(*(void *)(v117 - 8) + 64));
                    break;
                }
                goto LABEL_76;
              case 9u:
                unint64_t v119 = *(void *)v88;
                if ((unint64_t)(*(void *)v88 - 1) >= 3) {
                  swift_errorRetain();
                }
                *uint64_t v87 = v119;
LABEL_76:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
                break;
            }
            break;
          case 9u:
            uint64_t v28 = *(void *)a2;
            unint64_t v29 = *((void *)a2 + 1);
            uint64_t v30 = *((void *)a2 + 2);
            char v31 = *((unsigned char *)a2 + 24);
            sub_10001F914(*(id *)a2, v29, v30, v31);
            *(void *)a1 = v28;
            *(void *)(a1 + 8) = v29;
            *(void *)(a1 + 16) = v30;
            *(unsigned char *)(a1 + 24) = v31;
            goto LABEL_55;
          default:
            memcpy((void *)a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
            goto LABEL_56;
        }
        goto LABEL_77;
    }
    memcpy((void *)a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1001407B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SessionEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for SessionEvent()
{
  uint64_t result = qword_100368348;
  if (!qword_100368348) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unsigned char *sub_100140858(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = type metadata accessor for ExperienceEvent(0);
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      uint64_t v10 = type metadata accessor for TransferEvent();
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        long long v11 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v11;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        uint64_t v12 = *(int *)(type metadata accessor for PermissionToHandoff() + 20);
        uint64_t v13 = &a1[v12];
        char v14 = &a2[v12];
        uint64_t v15 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
LABEL_32:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for ExperienceEffect(0);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v8 = type metadata accessor for NoticeEffect();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[16] = a2[16];
        char v16 = (int *)type metadata accessor for NoticeContext(0);
        uint64_t v17 = v16[6];
        uint64_t v18 = &a1[v17];
        int v19 = &a2[v17];
        uint64_t v20 = type metadata accessor for NoticeTapAction(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v21 = type metadata accessor for URL();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
        }
        a1[v16[7]] = a2[v16[7]];
        uint64_t v22 = v16[8];
        uint64_t v23 = &a1[v22];
        uint64_t v24 = &a2[v22];
        uint64_t v25 = type metadata accessor for NoticeContent(0);
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          _OWORD *v23 = *v24;
          uint64_t v47 = type metadata accessor for ShareableContentExposedContext(0);
          uint64_t v26 = *(int *)(v47 + 20);
          uint64_t v45 = v23;
          uint64_t v27 = (char *)v23 + v26;
          uint64_t v28 = (char *)v24 + v26;
          *(_OWORD *)((char *)v23 + v26) = *(_OWORD *)((char *)v24 + v26);
          uint64_t v29 = *(int *)(type metadata accessor for ShareableContent(0) + 20);
          uint64_t v46 = &v27[v29];
          uint64_t v30 = &v28[v29];
          uint64_t v31 = type metadata accessor for URL();
          uint64_t v32 = *(void *)(v31 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
          {
            uint64_t v33 = type metadata accessor for ShareableContentType(0);
            memcpy(v46, v30, *(void *)(*(void *)(v33 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v46, v30, v31);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v46, 0, 1, v31);
          }
          *(_OWORD *)((char *)v45 + *(int *)(v47 + 24)) = *(_OWORD *)((char *)v24 + *(int *)(v47 + 24));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    uint64_t v34 = *(int *)(sub_10000A38C((uint64_t *)&unk_1003676C0) + 48);
    uint64_t v35 = &a1[v34];
    uint64_t v36 = &a2[v34];
    uint64_t v37 = type metadata accessor for ExperienceEvent(0);
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      uint64_t v38 = type metadata accessor for TransferEvent();
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        long long v39 = *((_OWORD *)v36 + 1);
        *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
        *((_OWORD *)v35 + 1) = v39;
        *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
        *((void *)v35 + 6) = *((void *)v36 + 6);
        uint64_t v40 = *(int *)(type metadata accessor for PermissionToHandoff() + 20);
        unint64_t v41 = &v35[v40];
        uint64_t v42 = &v36[v40];
        uint64_t v43 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    goto LABEL_32;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

unsigned char *sub_100140E24(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001407B0((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = type metadata accessor for ExperienceEvent(0);
      if (swift_getEnumCaseMultiPayload() == 8)
      {
        uint64_t v10 = type metadata accessor for TransferEvent();
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          long long v11 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v11;
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          *((void *)a1 + 6) = *((void *)a2 + 6);
          uint64_t v12 = *(int *)(type metadata accessor for PermissionToHandoff() + 20);
          uint64_t v13 = &a1[v12];
          char v14 = &a2[v12];
          uint64_t v15 = type metadata accessor for Date();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
LABEL_33:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for ExperienceEffect(0);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v8 = type metadata accessor for NoticeEffect();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[16] = a2[16];
          char v16 = (int *)type metadata accessor for NoticeContext(0);
          uint64_t v17 = v16[6];
          uint64_t v18 = &a1[v17];
          int v19 = &a2[v17];
          uint64_t v20 = type metadata accessor for NoticeTapAction(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v21 = type metadata accessor for URL();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
          }
          a1[v16[7]] = a2[v16[7]];
          uint64_t v22 = v16[8];
          uint64_t v23 = &a1[v22];
          uint64_t v24 = &a2[v22];
          uint64_t v25 = type metadata accessor for NoticeContent(0);
          if (swift_getEnumCaseMultiPayload() == 3)
          {
            _OWORD *v23 = *v24;
            uint64_t v47 = type metadata accessor for ShareableContentExposedContext(0);
            uint64_t v26 = *(int *)(v47 + 20);
            uint64_t v45 = v23;
            uint64_t v27 = (char *)v23 + v26;
            uint64_t v28 = (char *)v24 + v26;
            *(_OWORD *)((char *)v23 + v26) = *(_OWORD *)((char *)v24 + v26);
            uint64_t v29 = *(int *)(type metadata accessor for ShareableContent(0) + 20);
            uint64_t v46 = &v27[v29];
            uint64_t v30 = &v28[v29];
            uint64_t v31 = type metadata accessor for URL();
            uint64_t v32 = *(void *)(v31 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
            {
              uint64_t v33 = type metadata accessor for ShareableContentType(0);
              memcpy(v46, v30, *(void *)(*(void *)(v33 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v46, v30, v31);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v46, 0, 1, v31);
            }
            *(_OWORD *)((char *)v45 + *(int *)(v47 + 24)) = *(_OWORD *)((char *)v24 + *(int *)(v47 + 24));
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
          }
          swift_storeEnumTagMultiPayload();
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      uint64_t v34 = *(int *)(sub_10000A38C((uint64_t *)&unk_1003676C0) + 48);
      uint64_t v35 = &a1[v34];
      uint64_t v36 = &a2[v34];
      uint64_t v37 = type metadata accessor for ExperienceEvent(0);
      if (swift_getEnumCaseMultiPayload() == 8)
      {
        uint64_t v38 = type metadata accessor for TransferEvent();
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          long long v39 = *((_OWORD *)v36 + 1);
          *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
          *((_OWORD *)v35 + 1) = v39;
          *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
          *((void *)v35 + 6) = *((void *)v36 + 6);
          uint64_t v40 = *(int *)(type metadata accessor for PermissionToHandoff() + 20);
          unint64_t v41 = &v35[v40];
          uint64_t v42 = &v36[v40];
          uint64_t v43 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      goto LABEL_33;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100141400()
{
  uint64_t result = type metadata accessor for ExperienceEffect(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ExperienceEvent(319);
    if (v2 <= 0x3F)
    {
      uint64_t v3 = *(void *)(result - 8) + 64;
      swift_getTupleTypeLayout2();
      long long v4[4] = v4;
      void v4[5] = v3;
      v4[6] = &unk_10029AB40;
      v4[7] = &unk_10029AB58;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001414F0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (!a1)
  {
    swift_bridgeObjectRetain();
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    NSLog(_:_:)();
    return swift_bridgeObjectRelease();
  }
  swift_errorRetain();
  v7._uint64_t countAndFlagsBits = 539173667;
  v7._unint64_t object = (void *)0xE400000000000000;
  String.append(_:)(v7);
  v8._uint64_t countAndFlagsBits = a2;
  v8._unint64_t object = a3;
  String.append(_:)(v8);
  v9._uint64_t countAndFlagsBits = 8250;
  v9._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v9);
  sub_10000A38C((uint64_t *)&unk_100365D60);
  _print_unlocked<A, B>(_:_:)();
  swift_errorRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  id v10 = a4;
  CULogHandle.ulog(_:_:)();

  return swift_bridgeObjectRelease();
}

void sub_10014160C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, void *a6)
{
  Swift::String v8 = a3;
  if (a1)
  {
    if (!a3)
    {
      swift_errorRetain();
      a4(a1, 1);
      goto LABEL_9;
    }
    swift_errorRetain();
    v11._uint64_t countAndFlagsBits = 539173667;
    v11._unint64_t object = (void *)0xE400000000000000;
    String.append(_:)(v11);
    v12._uint64_t countAndFlagsBits = a2;
    v12._unint64_t object = v8;
    String.append(_:)(v12);
    v13._uint64_t countAndFlagsBits = 8250;
    v13._unint64_t object = (void *)0xE200000000000000;
    String.append(_:)(v13);
    sub_10000A38C((uint64_t *)&unk_100365D60);
    _print_unlocked<A, B>(_:_:)();
    Swift::String v8 = (void *)0xE000000000000000;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  a4(a1, a1 != 0);
  if (!v8)
  {
LABEL_9:
    sub_1001417AC(a1, a1 != 0);
    return;
  }
  if (a6)
  {
    id v14 = a6;
    CULogHandle.ulog(_:_:)();
    sub_1001417AC(a1, a1 != 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    NSLog(_:_:)();
    sub_1001417AC(a1, a1 != 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001417AC(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

double sub_1001417B8()
{
  type metadata accessor for HandoffUsageOverTimeMonitor();
  uint64_t v0 = swift_allocObject();
  if (qword_10035A520 != -1) {
    swift_once();
  }
  id v1 = *(id *)(qword_1003AC750 + 512);
  uint64_t v2 = sub_1000FE668();

  *(void *)(v0 + 16) = v2;
  double result = 0.0;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  qword_1003AC8C8 = v0;
  return result;
}

uint64_t sub_100141858()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v2 = v0;
    uint64_t v3 = *(void *)(v0 + 16);
    type metadata accessor for FeatureUsageOverTime();
    uint64_t v1 = swift_allocObject();
    sub_100141F9C(v3, (uint64_t)sub_100141904, 0, (uint64_t)sub_100141974, 0);
    *(void *)(v2 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100141904()
{
  if (qword_10035A520 != -1) {
    swift_once();
  }
  id v0 = *(id *)(qword_1003AC750 + 520);
  uint64_t v1 = sub_1001021EC();

  return v1;
}

void sub_100141974(uint64_t a1)
{
  if (qword_10035A520 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(qword_1003AC750 + 520);
  swift_bridgeObjectRetain();
  id v3 = v2;
  sub_10012C3EC(a1);
}

uint64_t sub_100141A0C()
{
  if (*(void *)(v0 + 32))
  {
    uint64_t v1 = *(void *)(v0 + 32);
  }
  else
  {
    uint64_t v2 = v0;
    uint64_t v3 = *(void *)(v0 + 16);
    type metadata accessor for FeatureUsageOverTime();
    uint64_t v1 = swift_allocObject();
    sub_100141F9C(v3, (uint64_t)sub_100141AB8, 0, (uint64_t)sub_100141B28, 0);
    *(void *)(v2 + 32) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100141AB8()
{
  if (qword_10035A520 != -1) {
    swift_once();
  }
  id v0 = *(id *)(qword_1003AC750 + 536);
  uint64_t v1 = sub_1001021EC();

  return v1;
}

void sub_100141B28(uint64_t a1)
{
  if (qword_10035A520 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(qword_1003AC750 + 536);
  swift_bridgeObjectRetain();
  id v3 = v2;
  sub_10012C3EC(a1);
}

uint64_t sub_100141BC0()
{
  if (*(void *)(v0 + 40))
  {
    uint64_t v1 = *(void *)(v0 + 40);
  }
  else
  {
    uint64_t v2 = v0;
    uint64_t v3 = *(void *)(v0 + 16);
    type metadata accessor for FeatureUsageOverTime();
    uint64_t v1 = swift_allocObject();
    sub_100141F9C(v3, (uint64_t)sub_100141C6C, 0, (uint64_t)sub_100141CDC, 0);
    *(void *)(v2 + 40) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100141C6C()
{
  if (qword_10035A520 != -1) {
    swift_once();
  }
  id v0 = *(id *)(qword_1003AC750 + 528);
  uint64_t v1 = sub_1001021EC();

  return v1;
}

void sub_100141CDC(uint64_t a1)
{
  if (qword_10035A520 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(qword_1003AC750 + 528);
  swift_bridgeObjectRetain();
  id v3 = v2;
  sub_10012C3EC(a1);
}

uint64_t sub_100141D74()
{
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(void *)(v0 + 48);
  }
  else
  {
    uint64_t v2 = v0;
    uint64_t v3 = *(void *)(v0 + 16);
    type metadata accessor for FeatureUsageOverTime();
    uint64_t v1 = swift_allocObject();
    sub_100141F9C(v3, (uint64_t)sub_100141E20, 0, (uint64_t)sub_100141E90, 0);
    *(void *)(v2 + 48) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100141E20()
{
  if (qword_10035A520 != -1) {
    swift_once();
  }
  id v0 = *(id *)(qword_1003AC750 + 544);
  uint64_t v1 = sub_1001021EC();

  return v1;
}

void sub_100141E90(uint64_t a1)
{
  if (qword_10035A520 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(qword_1003AC750 + 544);
  swift_bridgeObjectRetain();
  id v3 = v2;
  sub_10012C3EC(a1);
}

uint64_t sub_100141F28()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HandoffUsageOverTimeMonitor()
{
  return self;
}

uint64_t *sub_100141F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v6 = v5;
  uint64_t v12 = *v5;
  id v13 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v14 = String._bridgeToObjectiveC()();
  [v13 setDateFormat:v14];

  v6[7] = (uint64_t)v13;
  sub_10016ABE4(1953066569, (void *)0xE400000000000000, 0, v12, (uint64_t)&off_100329738);
  uint64_t v6[2] = a1;
  v6[3] = a2;
  void v6[4] = a3;
  void v6[5] = a4;
  v6[6] = a5;
  return v6;
}

uint64_t sub_1001420A0()
{
  id v1 = sub_1001F64C4();
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 ulog:40 message:v2];

  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeatureUsageOverTime()
{
  return self;
}

uint64_t sub_10014215C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v52 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)&v51 - v6;
  id v8 = sub_1001F64C4();
  NSString v9 = String._bridgeToObjectiveC()();
  [v8 ulog:40 message:v9];

  uint64_t v10 = (*(uint64_t (**)(void))(v1 + 24))();
  Date.init()();
  uint64_t v55 = v1;
  Swift::String v11 = *(void **)(v1 + 56);
  v12.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
  int64_t v13 = (int64_t)&unk_100356000;
  id v14 = [v11 stringFromDate:v12.super.isa];

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v17 = v16;

  uint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v53 = v3 + 8;
  uint64_t v54 = v2;
  uint64_t v51 = v18;
  v18(v7, v2);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v58 = v10;
  int64_t v21 = sub_100269CBC(v15, v17);
  uint64_t v22 = *(void *)(v10 + 16);
  BOOL v23 = (v20 & 1) == 0;
  uint64_t v24 = v22 + v23;
  if (__OFADD__(v22, v23))
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  LOBYTE(v12.super.isa) = v20;
  if (*(void *)(v10 + 24) >= v24)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_49;
    }
    goto LABEL_6;
  }
  sub_100053E38(v24, isUniquelyReferenced_nonNull_native);
  unint64_t v25 = sub_100269CBC(v15, v17);
  if (((uint64_t)v12.super.isa & 1) == (v26 & 1))
  {
    int64_t v21 = v25;
    while (1)
    {
LABEL_6:
      uint64_t v27 = v58;
      swift_bridgeObjectRelease();
      if (((uint64_t)v12.super.isa & 1) == 0)
      {
        sub_100057878(v21, v15, v17, 0, (void *)v27);
        swift_bridgeObjectRetain();
      }
      uint64_t v28 = *(void *)(v27 + 56);
      uint64_t v29 = *(void *)(v28 + 8 * v21);
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30)
      {
LABEL_46:
        __break(1u);
      }
      else
      {
        *(void *)(v28 + 8 * v21) = v31;
        swift_bridgeObjectRelease();
        Date.init()();
        if (!__OFSUB__(*(void *)(v55 + 16), 1))
        {
          static Date.- infix(_:_:)();
          v51(v7, v54);
          v12.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
          id v32 = [v11 *(SEL *)(v13 + 3792):v12.super.isa];

          Swift::String v11 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          Swift::String v7 = v33;

          uint64_t v34 = v27 + 64;
          uint64_t v35 = 1 << *(unsigned char *)(v27 + 32);
          uint64_t v36 = -1;
          if (v35 < 64) {
            uint64_t v36 = ~(-1 << v35);
          }
          unint64_t v37 = v36 & *(void *)(v27 + 64);
          int64_t v21 = (unint64_t)(v35 + 63) >> 6;
          swift_bridgeObjectRetain();
          int64_t v13 = 0;
          uint64_t v56 = v27;
          uint64_t v57 = v27;
          while (1)
          {
            if (v37)
            {
              unint64_t v38 = __clz(__rbit64(v37));
              v37 &= v37 - 1;
              unint64_t v39 = v38 | (v13 << 6);
            }
            else
            {
              int64_t v40 = v13 + 1;
              if (__OFADD__(v13, 1))
              {
                __break(1u);
                goto LABEL_45;
              }
              if (v40 >= v21) {
                goto LABEL_43;
              }
              unint64_t v41 = *(void *)(v34 + 8 * v40);
              ++v13;
              if (!v41)
              {
                int64_t v13 = v40 + 1;
                if (v40 + 1 >= v21) {
                  goto LABEL_43;
                }
                unint64_t v41 = *(void *)(v34 + 8 * v13);
                if (!v41)
                {
                  int64_t v13 = v40 + 2;
                  if (v40 + 2 >= v21) {
                    goto LABEL_43;
                  }
                  unint64_t v41 = *(void *)(v34 + 8 * v13);
                  if (!v41)
                  {
                    int64_t v13 = v40 + 3;
                    if (v40 + 3 >= v21) {
                      goto LABEL_43;
                    }
                    unint64_t v41 = *(void *)(v34 + 8 * v13);
                    if (!v41)
                    {
                      int64_t v13 = v40 + 4;
                      if (v40 + 4 >= v21) {
                        goto LABEL_43;
                      }
                      unint64_t v41 = *(void *)(v34 + 8 * v13);
                      if (!v41)
                      {
                        int64_t v42 = v40 + 5;
                        if (v42 >= v21)
                        {
LABEL_43:
                          swift_bridgeObjectRelease();
                          swift_release();
                          (*(void (**)(uint64_t))(v55 + 40))(v57);
                          swift_bridgeObjectRelease();
                          return ((uint64_t (*)(char *, uint64_t))v51)(v52, v54);
                        }
                        unint64_t v41 = *(void *)(v34 + 8 * v42);
                        if (!v41)
                        {
                          while (1)
                          {
                            int64_t v13 = v42 + 1;
                            if (__OFADD__(v42, 1)) {
                              goto LABEL_48;
                            }
                            if (v13 >= v21) {
                              goto LABEL_43;
                            }
                            unint64_t v41 = *(void *)(v34 + 8 * v13);
                            ++v42;
                            if (v41) {
                              goto LABEL_32;
                            }
                          }
                        }
                        int64_t v13 = v42;
                      }
                    }
                  }
                }
              }
LABEL_32:
              unint64_t v37 = (v41 - 1) & v41;
              unint64_t v39 = __clz(__rbit64(v41)) + (v13 << 6);
            }
            uint64_t v43 = *(void *)(v27 + 48) + 16 * v39;
            v12.super.Class isa = *(Class *)v43;
            uint64_t v15 = *(void *)(v43 + 8);
            BOOL v44 = *(void **)v43 == v11 && v15 == (void)v7;
            if (!v44 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              int64_t v45 = v21;
              uint64_t v46 = v34;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unint64_t v17 = sub_100269CBC((uint64_t)v12.super.isa, v15);
              LOBYTE(v12.super.isa) = v47;
              swift_bridgeObjectRelease();
              if ((uint64_t)v12.super.isa)
              {
                uint64_t v48 = v57;
                char v49 = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v58 = v48;
                if ((v49 & 1) == 0)
                {
                  sub_10005810C();
                  uint64_t v48 = v58;
                }
                swift_bridgeObjectRelease();
                uint64_t v57 = v48;
                sub_100130B98(v17, v48);
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              uint64_t v34 = v46;
              int64_t v21 = v45;
              uint64_t v27 = v56;
            }
          }
        }
      }
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      sub_10005810C();
    }
  }
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1001426E0(int64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v34 - v9;
  int64_t v40 = (void *)0xD00000000000001DLL;
  unint64_t v41 = 0x80000001002BFEA0;
  int64_t v39 = a1;
  v11._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  id v12 = sub_1001F64C4();
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 ulog:40 message:v13];
  swift_bridgeObjectRelease();

  if (a1 < 1 || *(void *)(v2 + 16) < a1)
  {
    int64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    _StringGuts.grow(_:)(60);
    v14._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    v14._unint64_t object = (void *)0x80000001002BFEC0;
    String.append(_:)(v14);
    int64_t v39 = a1;
    v15._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    v16._unint64_t object = (void *)0x80000001002BFEE0;
    v16._uint64_t countAndFlagsBits = 0xD000000000000019;
    String.append(_:)(v16);
    int64_t v39 = *(void *)(v2 + 16);
    v17._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    uint64_t v18 = (char *)sub_1001F64C4();
    swift_bridgeObjectRetain();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v18 ulog:60 message:v19];
    swift_bridgeObjectRelease();

    sub_100142BAC();
    swift_allocError();
    swift_willThrow();
    return (uint64_t)v18;
  }
  char v20 = *(uint64_t (**)(void))(v2 + 24);
  uint64_t v36 = v2;
  uint64_t v35 = v20();
  int64_t v40 = _swiftEmptyArrayStorage;
  sub_1000B5638(0, a1, 0);
  uint64_t v21 = 0;
  uint64_t v37 = v5 + 32;
  int64_t v38 = a1;
  do
  {
    Date.init()();
    static Date.- infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    uint64_t v22 = (uint64_t)v40;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1000B5638(0, *(void *)(v22 + 16) + 1, 1);
      uint64_t v22 = (uint64_t)v40;
    }
    unint64_t v24 = *(void *)(v22 + 16);
    unint64_t v23 = *(void *)(v22 + 24);
    if (v24 >= v23 >> 1)
    {
      sub_1000B5638(v23 > 1, v24 + 1, 1);
      uint64_t v22 = (uint64_t)v40;
    }
    ++v21;
    *(void *)(v22 + 16) = v24 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v22+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v24, v10, v4);
    int64_t v40 = (void *)v22;
  }
  while (v38 != v21);
  uint64_t v25 = v36;
  swift_retain();
  char v26 = sub_100142D34(v22, v25);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v27 = v35;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_100142C00((uint64_t)v26, v27);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
  uint64_t v30 = v28[2];
  if (!v30)
  {
    uint64_t v18 = 0;
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v18;
  }
  uint64_t v18 = 0;
  uint64_t v31 = v28 + 4;
  while (1)
  {
    uint64_t v32 = *v31++;
    BOOL v33 = __OFADD__(v18, v32);
    v18 += v32;
    if (v33) {
      break;
    }
    if (!--v30) {
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}